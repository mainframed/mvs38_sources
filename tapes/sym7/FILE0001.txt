./  ADD  SSI=73570160,NAME=ICBACREL
* %/* START OF SPECIFICATIONS****                                       00052000
         MACRO                                                          00060003
&SYMBOL  ICBACREL &MF=,&TYPE=,&FLAGS=,&VOLID=,&ECB=,&EXTS=,            *00070003
               &HOSTID=,&NMEXTS=                                        00080003
.************************************************************  @ZA28964 00090000
.*                                                             @Y30LB02 00100003
.* MODULE-NAME = ICBACREL                                      @Y30LB02 00150000
.*                                                             @Y30LB02 00200003
.* DESCRIPTIVE-NAME = ACQUIRE/RELINQUISH MACRO                 @Y30LB02 00250000
.*                                                             @Y30LB02 00300003
.* COPYRIGHT = NONE                                            @Y30LB02 00350000
.*                                                             @Y30LB02 00400003
.* STATUS = OPERATING SYSTEM = VS/2 REL 3                      @ZA28964 00450000
.*                                                             @Y30LB02 00550003
.* FUNCTION = THE ACQUIRE REQUEST IS ISSUED IF THE CALLER      @Y30LB02 00600000
.*            WISHES TO HAVE DASD SPACE ALLOCATED FOR A        @Y30LB02 00610000
.*            DATA RESOURCE AND, OPTIONALLY, IF THE DATA       @Y30LB02 00620000
.*            EXTENTS ARE TO BE STAGED. THE RELINQUISH         @Y30LB02 00630000
.*            REQUEST IS ISSUED WHEN A DATA RESOURCE IS TO     @Y30LB02 00640000
.*            HAVE ITS DASD SPACE MADE AVAILABLE FOR           @Y30LB02 00642000
.*            REALLOCATION AND, OPTIONALLY, IF ITS DASD        @Y30LB02 00644000
.*            EXTENTS ARE TO BE DESTAGED FROM THE              @Y30LB02 00646000
.*            REAL DASD.                                       @Y30LB02 00648000
.*                                                             @Y30LB02 00648400
.* NOTES =                                                     @Y30LB02 00648800
.*                                                             @Y30LB02 00649200
.*   CODE = MACRO IS BILINGUALLY CODED. IN THE ORIGINAL        @ZA28964 00649600
.*          VERSION OF THIS MACRO, THE BAL AND PL/S SECTIONS   @ZA28964 00650600
.*          ASSIGNED DIFFERENT LABELS TO THE SAME REQUEST      @ZA28964 00651600
.*          BLOCK STRUCTURE. TO MAINTAIN COMPATABILITY, THE    @ZA28964 00652600
.*          ALTERNATE PL/S LABELS HAVE BEEN ADDED TO THE BAL   @ZA28964 00653600
.*          REQUEST BLOCKS, AND THE ALTERNATE BAL LABELS       @ZA28964 00654600
.*          ADDED TO THE PL/S REQUEST BLOCKS.                  @ZA28964 00655600
.*                                                             @Y30LB02 00656600
.*   DEPENDENCIES = NONE                                       @Y30LB02 00657600
.*                                                             @Y30LB02 00658600
.*   RESTRICTIONS = THE PREFIXES ICB AND AR SHOULD BE          @Y30LB02 00659600
.*                  AVOIDED IN THE INVOKING MODULE LABELS.     @ZA28964 00660600
.*                  SVC 126, WHICH IS INVOKED BY THIS MACRO,   @ZA28964 00661600
.*                  REQUIRES THAT THE CALLER BE APF-           @ZA28964 00662600
.*                  AUTHORIZED, IN PROTECTION KEY 0 OR         @ZA28964 00663600
.*                  IN SUPERVISOR STATE.                       @ZA28964 00664600
.*                                                             @Y30LB02 00680600
.*   REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF REGISTERS    @Y30LB02 00682600
.*                          BY MACROS: R0,R1,R14 AND R15       @Y30LB02 00683000
.*                                                             @Y30LB02 00683100
.*   PATCH-LABEL = NONE                                        @Y30LB02 00683200
.*                                                             @Y30LB02 00688800
.* MODULE-TYPE = MACRO                                         @Y30LB02 00690800
.*                                                             @Y30LB02 00692800
.*   PROCESSOR = ASSEM                                         @Y30LB02 00693200
.*               PL/S                                          @Y30LB02 00693600
.*                                                             @Y30LB02 00694000
.*   ATTRIBUTES = REUSABLE                                     @Y30LB02 00694200
.*                REENTRANT (EXECUTE FORM)                     @Y30LB02 00694300
.*                                                             @Y30LB02 00708200
.* ENTRY-POINT = ICBACREL                                      @Y30LB02 00718200
.*                                                             @Y30LB02 00720200
.*   PURPOSE = SEE FUNCTION                                    @Y30LB02 00720600
.*                                                             @Y30LB02 00721000
.*   LINKAGE = SEE INPUT                                       @ZA28964 00721100
.*                                                             @ZA28964 00721200
.* INPUT = CODE THE ICBACREL MACRO USING ONE OF THE            @Y30LB02 00721400
.*     FOLLOWING SYNTAX FORMS (THE '(R)' REGISTER PARAMETER    @Y30LB02 00721800
.*     FORM IS VALID ONLY IN THE BAL VERSIONS).                @Y30LB02 00721900
.*                                                             @Y30LB02 00722000
.*   LIST FORMS =                                              @Y30LB02 00722100
.*                                                             @Y30LB02 00723100
.*     BAL - ICBACREL MF=(L,MAP),TYPE=ACQ|REL                  @Y30LB02 00724100
.*                                                             @Y30LB02 00725100
.*       REQUIRED PARAMETERS - MF=L,TYPE                       @Y30LB02 00726100
.*                                                             @Y30LB02 00727100
.*     PL/S- ICBACREL MF(L,NAME,ATTR) TYPE(ACQ|REL)            @Y30LB02 00728100
.*                                                             @Y30LB02 00729100
.*       REQUIRED PARAMETERS - MF(L,NAME) TYPE                 @Y30LB02 00730100
.*                                                             @Y30LB02 00731100
.*   STANDARD FORMS =                                          @Y30LB02 00732100
.*                                                             @Y30LB02 00733100
.*     BAL - ICBACREL TYPE=ACQ|REL,EXTS=NAME|(R),              @Y30LB02 00734100
.*                    NMEXTS=NAME|(R),VOLID=NAME|(R),          @Y30LB02 00735100
.*                    ECB=NAME|(R),FLAGS=NAME|(R),             @Y30LB02 00736100
.*                    HOSTID=NAME|(R)                          @Y30LB02 00737100
.*                                                             @Y30LB02 00738100
.*       REQUIRED PARAMETERS - TYPE,EXTS,NMEXTS,VOLID          @Y30LB02 00739100
.*                                                             @Y30LB02 00740100
.*     PL/S- ICBACREL TYPE(ACQ|REL) EXTS(NAME) NMEXTS(NAME)    @Y30LB02 00741100
.*                    VOLID(NAME) ECB(NAME) FLAGS(NAME)        @Y30LB02 00742100
.*                    HOSTID(NAME)                             @Y30LB02 00743100
.*                                                             @Y30LB02 00744100
.*       REQUIRED PARAMETERS - TYPE EXTS NMEXTS VOLID          @Y30LB02 00745100
.*                                                             @Y30LB02 00746100
.*   EXECUTE FORMS =                                           @Y30LB02 00747100
.*                                                             @Y30LB02 00748100
.*     BAL - ICBACREL MF=(E,NAME|(R))                          @Y30LB02 00749100
.*                                                             @Y30LB02 00750100
.*       REQUIRED PARAMETERS - MF=(E,NAME|(R))                 @Y30LB02 00751100
.*                                                             @Y30LB02 00752100
.*     PL/S- ICBACREL MF(E,NAME)                               @Y30LB02 00753100
.*                                                             @Y30LB02 00754100
.*       REQUIRED PARAMETERS - MF(E,NAME)                      @Y30LB02 00755100
.*                                                             @Y30LB02 00756100
.*   KEYWORD PARAMETERS =                                      @Y30LB02 00757100
.*                                                             @Y30LB02 00758100
.*     MF = MACRO FORMAT                                       @Y30LB02 00759100
.*                                                             @Y30LB02 00760100
.*       L = LIST FORM. THE EXPANSION OF THE LIST FORM         @Y30LB02 00761100
.*           PROVIDES ONLY THE PARAMETER REQUEST BLOCK.        @Y30LB02 00762100
.*           THE OPCODE AND BLOCK LENGTH FIELDS ARE            @Y30LB02 00763100
.*           FILLED IN BY THE MACRO AND THE REMAINING          @Y30LB02 00764100
.*           FIELDS ARE SET TO ZERO. IF ANY PARAMETERS         @Y30LB02 00765100
.*           BESIDES 'MF' AND 'TYPE' ARE SPECIFIED, THEY       @Y30LB02 00766100
.*           ARE IGNORED. (A WARNING IS ISSUED)                @Y30LB02 00767100
.*                                                             @ZA28964 00768100
.*         MAP = SPECIFIES THAT AN ASSEMBLER VERSION           @Y30LB02 00769100
.*             INVOCATION WILL PRODUCE A MAPPING DSECT         @Y30LB02 00770100
.*             LABELED 'ICBACREL'.                             @Y30LB02 00771100
.*                                                             @ZA28964 00772100
.*         NAME = LABEL ASSIGNED TO THE REQUEST BLOCK          @Y30LB02 00773100
.*             IN PL/S (REQUIRED IN PL/S VERSION).             @Y30LB02 00774100
.*                                                             @ZA28964 00775100
.*         ATTR = A PL/S ATTRIBUTE THAT WILL BE PLACED IN      @Y30LB02 00776100
.*             AN UNINITIALIZED REQUEST BLOCK DEFINITION.      @Y30LB02 00777100
.*             SOME ATTRIBUTE EXAMPLES ARE:                    @Y30LB02 00778100
.*                STATIC LOCAL, NONLOCAL, BASED(*), ETC        @Y30LB02 00779100
.*                                                             @Y30LB02 00780100
.*       NULL = STANDARD FORM IS INVOKED. THE EXPANSION        @Y30LB02 00781100
.*           OF THIS FORM CONSISTS OF A REQUEST BLOCK          @Y30LB02 00782100
.*           (ONLY IN THE FIRST INVOCATION OF THIS FORM        @Y30LB02 00783100
.*           IN ANY MODULE) LABELED 'ARLIST' IN THE PL/S       @ZA28964 00784100
.*           VERSION, A LINKAGE INSTRUCTION AND POSSIBLY       @ZA28964 00785100
.*           PARAMETER BINDING INSTRUCTIONS. ONLY A            @ZA28964 00786100
.*           SINGLE VOLUME REQUEST FOR UP TO 16 EXTENTS        @ZA28964 00787100
.*           MAY BE REQUESTED WITH A SINGLE STANDARD           @ZA28964 00788100
.*           FORM INVOCATION.                                  @ZA28964 00789100
.*                                                             @Y30LB02 00790100
.*       E = EXECUTE FORM. THE EXPANSION OF THIS FORM          @Y30LB02 00791100
.*           CONSISTS OF A LINKAGE INSTRUCTION AND             @Y30LB02 00792100
.*           POSSIBLY PARAMETER BINDING INSTRUCTIONS.          @Y30LB02 00793100
.*                                                             @ZA28964 00794100
.*         NAME = LABEL OF THE REQUEST BLOCK TO USE.           @Y30LB02 00795100
.*                                                             @Y30LB02 00796100
.*     TYPE = INDICATES WHETHER THE REQUEST IS FOR AN          @Y30LB02 00797100
.*         ACQUIRE (ACQ) OR RELINQUISH (REL).                  @Y30LB02 00798100
.*                                                             @Y30LB02 00799100
.*     EXTS = EXTENTS. LABEL OF THE AREA WHICH CONTAINS        @Y30LB02 00800100
.*         THE LIST OF EXTENTS OF THE RESOURCE. THE DATA       @Y30LB02 00801100
.*         FOR THIS AREA CAN BE EXTRACTED FROM EITHER          @Y30LB02 00802100
.*         THE DATA EXTENT BLOCK (DEB) OR THE DATA SET         @Y30LB02 00803100
.*         CONTROL BLOCK(S) (DSCB). THIS AREA IS COPIED        @Y30LB02 00804100
.*         INTO THE REQUEST BLOCK. THE FORMAT OF               @Y30LB02 00805100
.*         AREA POINTED TO BY THIS PARAMETER IS:               @Y30LB02 00806100
.*                                                             @ZA28964 00807100
.*          OFFSETS    LENGTH   DESCRIPTION                    @Y30LB02 00808100
.*          DEC HEX    (BYTES)                                 @Y30LB02 00809100
.*          -------    -------  -----------                    @Y30LB02 00810100
.*           0    (0)     2     BEGIN CC - EXTENT 1            @Y30LB02 00811100
.*           2    (2)     2     END CC - EXTENT 1              @Y30LB02 00812100
.*           4    (4)     2     BEGIN CC - EXTENT 2            @Y30LB02 00813100
.*             ...       ...          ...                      @Y30LB02 00814100
.*           60 (3C)      2     BEGIN CC - EXTENT 16           @Y30LB02 00815100
.*           62 (3E)      2     END CC - EXTENT 16             @Y30LB02 00816100
.*                                                             @Y30LB02 00817100
.*     NMEXTS = NUMBER OF EXTENTS. LABEL OF A ONE-BYTE FIELD   @Y30LB02 00818100
.*         WHICH CONTAINS THE NUMBER OF EXTENTS                @Y30LB02 00819100
.*         (FROM 1 TO 16) RECORDED IN THE AREA POINTED         @Y30LB02 00820100
.*         TO BY THE 'EXTS' PARAMETER. THE FIRST EXTENT        @Y30LB02 00821100
.*         IS RECORDED AT THE 'EXTS' ADDRESS.                  @Y30LB02 00822100
.*                                                             @Y30LB02 00823100
.*     VOLID = LABEL OF A 6-BYTE VOLUME IDENTIFIER OF THE      @ZA28964 00824100
.*         VOLUME ON WHICH THE DATA RESOURCE RESIDES.          @ZA28964 00825100
.*                                                             @Y30LB02 00826100
.*     ECB = LABEL OF THE EVENT CONTROL BLOCK. SPECIFIED IF A  @Y30LB02 00827100
.*         DELAYED RESPONSE IS INDICATED IN THE 'FLAGS'        @Y30LB02 00828100
.*         PARAMETER. A POST CODE IN THE RANGE X'70' -         @Y30LB02 00829100
.*         X'7F' WILL BE PLACED IN THE LOW-ORDER BYTE          @Y30LB02 00830100
.*         OF THE ECB ON COMPLETION OF THE REQUEST (X'7F'      @Y30LB02 00831100
.*         IS THE SUCCESSFUL COMPLETION CODE). THE ECB         @Y30LB02 00832100
.*         SHOULD BE SET TO BINARY ZERO BEFORE INVOKING        @Y30LB02 00833100
.*         THE MACRO. THE 'ARASID' FIELD OF THE REQUEST        @Y30LB02 00834100
.*         BLOCK IS USED BY SVC 126 TO RECORD THE              @Y30LB02 00835100
.*         ADDRESS SPACE ID OF THE INVOKING MODULE SO          @Y30LB02 00836100
.*         THAT THE CORRECT ECB MAY BE LOCATED FOR             @Y30LB02 00837100
.*         POSTING.                                            @Y30LB02 00838100
.*                                                             @Y30LB02 00839100
.*     FLAGS = LABEL OF A ONE-BYTE FIELD SPECIFYING THE        @Y30LB02 00840100
.*         ATTRIBUTES TO BE ASSOCIATED WITH THE REQUEST:       @Y30LB02 00841100
.*                                                             @Y30LB02 00842100
.*       ACQUIRE REQUESTS =                                    @Y30LB02 00843100
.*                                                             @Y30LB02 00844100
.*         1... ....    BIND. FORCES SPACE TO BE ALLOCATED     @Y30LB02 00845100
.*                        AND PREVENTS DE-ALLOCATION OF THAT   @ZA28964 00846100
.*                        SPACE UNTIL THE DATA IS RELINQUISHED @ZA28964 00847100
.*                        WITH THE UNBIND OPTION OR THE        @ZA28964 00848100
.*                        VOLUME IS DEMOUNTED.                 @ZA28964 00849100
.*         .1.. ....    DELAYED RESPONSE. FORCES SPACE TO BE   @Y30LB02 00850100
.*                        ALLOCATED AND THE CALLER NOTIFIED    @ZA28964 00851100
.*                        WHEN THE STAGING IS COMPLETE.        @ZA28964 00852100
.*         ..1. ....    INHIBIT STAGING. AFTER DASD SPACE IS   @Y30LB02 00853100
.*                        ALLOCATED, THE STAGING OF CYLINDERS  @ZA28964 00854100
.*                        OF THE DATA RESOURCE TO THE REAL     @ZA28964 00855100
.*                        DASD IS PREVENTED.                   @ZA28964 00856100
.*         ...1 ....    NEWLY ALLOCATED SECONDARY EXTENT.      @Y30LB02 00857100
.*                        CAUSES MSVC TO UPDATE THE RUNNING-   @ZA28964 00858100
.*                        SPACE COUNT FOR GENERAL-USE GROUP    @ZA28964 00859100
.*                        VOLUMES.                             @ZA28964 00860100
.*         .... 0000    RESERVED - MUST BE ZERO                @Y30LB02 00861100
.*                                                             @Y30LB02 00862100
.*       RELINQUISH REQUESTS =                                 @Y30LB02 00863100
.*                                                             @Y30LB02 00864100
.*         1... ....    UNBIND. RESETS THE BIND AND PERMITS    @Y30LB02 00865100
.*                        NORMAL DESTAGING TO RESUME. USED IN  @ZA28964 00866100
.*                        CONJUNCTION WITH THE ACQUIRE         @ZA28964 00867100
.*                        'BIND' FLAG.                         @ZA28964 00868100
.*         .1.. ....    DELAYED RESPONSE. CAUSES THE           @Y30LB02 00869100
.*                        DESTAGING OF ALL WRITTEN CYLINDERS   @ZA28964 00870100
.*                        (UNLESS THE 'INHIBIT DESTAGING'      @ZA28964 00871100
.*                        FLAG IS USED) AND THE CALLER         @ZA28964 00872100
.*                        NOTIFIED USING THE ECB BLOCK.        @ZA28964 00873100
.*         ..1. ....    INHIBIT DESTAGING. FREES THE DASD      @Y30LB02 00874100
.*                        SPACE WITHOUT DESTAGING THE DATA.    @ZA28964 00875100
.*         ..0. ....    DESTAGE. ALL CYLINDERS OF THE DATA     @Y30LB02 00876100
.*                        RESOURCE ON REAL DASD ARE MADE       @ZA28964 00877100
.*                        AVAILABLE FOR REALLOCATION. WHEN     @ZA28964 00878100
.*                        THE SPACE IS REQUIRED FOR            @ZA28964 00879100
.*                        ALLOCATION, ANY NECESSARY DESTAGING  @ZA28964 00880100
.*                        WILL BE DONE. IF 'DELAYED RESPONSE'  @ZA28964 00881100
.*                        IS SPECIFIED, THESE CYLINDERS ARE    @ZA28964 00882100
.*                        SCHEDULED FOR DESTAGING.             @ZA28964 00883100
.*         ...0 0000    RESERVED - MUST BE ZERO.               @Y30LB02 00884100
.*                                                             @Y30LB02 00885100
.*     HOSTID = LABEL OF A 5-BYTE FIELD WHICH CONTAINS THE     @Y30LB02 00886100
.*         MANUFACTURER'S CPU IDENTIFICATION. IF SET TO        @Y30LB02 00887100
.*         ZERO, SVC126 WILL FILL IN THE ID OF THE CALLING     @Y30LB02 00888100
.*         CPU.                                                @Y30LB02 00889100
.*                                                             @Y30LB02 00890100
.*   REQUEST BLOCK DESCRIPTION =                               @Y30LB02 00891100
.*                                                             @Y30LB02 00892100
.*     'ARLEN' = REQUEST BLOCK LENGTH FILLED IN BY THE         @Y30LB02 00893100
.*         MACRO(STANDARD AND LIST FORMS). 96 DEC BYTES.       @ZA28964 00894100
.*                                                             @Y30LB02 00895100
.*     'AROP' = OPCODE FILLED IN BY THE MACRO(STANDARD         @Y30LB02 00896100
.*         AND LIST FORMS). ACQUIRE = '02'X AND RELINQUISH =   @Y30LB02 00897100
.*         '04'X.                                              @Y30LB02 00898100
.*                                                             @Y30LB02 00899100
.*     'ARRES0' = RESERVED - MUST BE ZERO.                     @Y30LB02 00900100
.*                                                             @Y30LB02 00901100
.*     'ARFLAG' = FLAGS. CAN BE SET BY MACRO PARAMETER.        @Y30LB02 00902100
.*                                                             @Y30LB02 00903100
.*     'ARNMEXTS' = NUMBER OF EXTENTS. CAN BE SET BY           @Y30LB02 00904100
.*         MACRO PARAMETER.                                    @Y30LB02 00905100
.*                                                             @Y30LB02 00906100
.*     'ARVOL' = VOLID. CAN BE SET BY MACRO PARAMETER.         @Y30LB02 00907100
.*                                                             @Y30LB02 00908100
.*     'ARASID' = ADDRESS SPACE ID. SET BY SVC 126.            @Y30LB02 00909100
.*                                                             @Y30LB02 00910100
.*     'ARECB' = ECB. CAN BE SET BY MACRO PARAMETER.           @Y30LB02 00911100
.*                                                             @Y30LB02 00912100
.*     'ARHOST' = HOSTID. CAN BE SET BY SVC126 OR              @Y30LB02 00913100
.*         MACRO PARAMETER.                                    @Y30LB02 00914100
.*                                                             @Y30LB02 00915100
.*     'ARRES3' = RESERVED - MUST BE ZERO.                     @Y30LB02 00916100
.*                                                             @Y30LB02 00917100
.*     'ARCOMPC' = COMPLETION CODE. A 2-BYTE AREA WHICH        @Y30LB02 00918100
.*         IS FILLED IN BY SVC126 (MUST BE ZERO ON CALLING     @Y30LB02 00919100
.*         THE SVC). DETAILED COMPLETION CODE MESSAGES         @Y30LB02 00920100
.*         ARE EXPLAINED IN THE MSSC MESSAGES MANUAL, BUT      @Y30LB02 00921100
.*         THE FOLLOWING SITUATIONS CAN OCCUR WHEN             @Y30LB02 00922100
.*         CHAINED REQUESTS ARE MADE:                          @Y30LB02 00923100
.*                                                             @Y30LB02 00924100
.*       ACQUIRE CHAIN COMPLETION CODES =                      @Y30LB02 00925100
.*                                                             @Y30LB02 00926100
.*         FOR GENERAL ERRORS, THE SAME COMPLETION CODE        @Y30LB02 00927100
.*         WILL BE IN EACH REQUEST BLOCK IN THE CHAIN:         @Y30LB02 00928100
.*             X'173' = MSSC CONTROL BLOCK INDICATES THAT      @Y30LB02 00929100
.*                       THE MSC WAS NOT INITIALIZED           @Y30LB02 00930100
.*             X'174' = GETMAIN FAILURE FOR I/O BLOCKS         @Y30LB02 00931100
.*             X'175' = MSSC CONTROL BLOCK NOT AVAILABLE       @Y30LB02 00932100
.*                       (VS/2 ONLY)                           @Y30LB02 00933100
.*                                                             @Y30LB02 00934100
.*         FOR ERROR COMPLETION CODES IN THE RANGE X'000'      @Y30LB02 00935100
.*         TO X'0FF', THE REQUEST IN ERROR CONTAINS THE        @Y30LB02 00936100
.*         APPROPRIATE COMPLETION CODE. REQUESTS PRIOR TO      @Y30LB02 00937100
.*         THE ONE IN ERROR CONTAIN A COMPLETION CODE OF       @Y30LB02 00938100
.*         X'000', AND THE REQUESTED MSS ACTIVITY HAS BEEN     @Y30LB02 00939100
.*         INITIATED. IF APPROPRIATE FOR ANY OF THESE          @Y30LB02 00940100
.*         REQUESTS, WAIT FOR ITS DELAYED RESPONSE. EACH       @Y30LB02 00941100
.*         REQUEST SUBSEQUENT TO THE ONE IN ERROR CONTAINS     @Y30LB02 00942100
.*         A COMPLETION CODE OF X'170', WHICH MEANS THAT       @Y30LB02 00943100
.*         THE REQUEST WAS NOT PROCESSED ANY FURTHER. THERE    @Y30LB02 00944100
.*         WILL *NOT* BE ANY DELAYED RESPONSE FOR THESE        @Y30LB02 00945100
.*         REQUEST BLOCKS SINCE MSS ACTIVITY HAS NOT BEEN      @Y30LB02 00946100
.*         INITIATED.                                          @Y30LB02 00947100
.*                                                             @Y30LB02 00948100
.*         FOR THE ERROR CODES:                                @Y30LB02 00949100
.*             X'172' = PARAMETER NOT AS EXPECTED. EITHER      @Y30LB02 00950100
.*                       THE ECB ADDRESS WAS 0 WHEN A          @Y30LB02 00951100
.*                       DELAYED RESPONSE WAS REQUESTED, THE   @Y30LB02 00952100
.*                       THE LENGTH OF THE PARAMETER LIST      @Y30LB02 00953100
.*                       WAS INCORRECT, OR A WRONG NUMBER      @Y30LB02 00954100
.*                       OF EXTENTS WAS SPECIFIED.             @Y30LB02 00955100
.*             X'176' = INTERMIXED CHAIN FOR AN ACQUIRE.       @Y30LB02 00956100
.*         THE REQUEST IN ERROR CONTAINS THE APPROPRIATE       @Y30LB02 00957100
.*         COMPLETION CODE. REQUESTS PRIOR TO THE ONE IN       @Y30LB02 00958100
.*         ERROR CONTAIN A COMPLETION CODE OF X'000', BUT      @Y30LB02 00959100
.*         THE MSS ACTIVITY HAS *NOT* BEEN INITIATED -         @Y30LB02 00960100
.*         DO NOT WAIT FOR A DELAYED RESPONSE. EACH REQUEST    @Y30LB02 00961100
.*         SUBSEQUENT TO THE ONE IN ERROR CONTAINS A           @Y30LB02 00962100
.*         X'170' COMPLETION CODE - DO NOT WAIT FOR A          @Y30LB02 00963100
.*         DELAYED RESPONSE FROM THESE REQUESTS EITHER.        @Y30LB02 00964100
.*                                                             @Y30LB02 00965100
.*       RELINQUISH CHAIN COMPLETION CODES =                   @Y30LB02 00966100
.*                                                             @Y30LB02 00967100
.*         FOR GENERAL ERRORS, THE SAME COMPLETION CODE        @Y30LB02 00968100
.*         WILL BE IN EACH REQUEST BLOCK IN THE CHAIN:         @Y30LB02 00969100
.*             X'173' = MSSC CONTROL BLOCK INDICATES THAT      @Y30LB02 00970100
.*                       THE MSC WAS NOT INITIALIZED           @Y30LB02 00971100
.*             X'174' = GETMAIN FAILURE FOR I/O BLOCKS         @Y30LB02 00972100
.*             X'175' = MSSC CONTROL BLOCK NOT AVAILABLE       @Y30LB02 00973100
.*                       (VS/2 ONLY)                           @Y30LB02 00974100
.*                                                             @Y30LB02 00975100
.*         FOR THE ERROR COMPLETION CODE                       @Y30LB02 00976100
.*             X'176' = INTERMIXED CHAIN FOR RELINQUISH.       @Y30LB02 00977100
.*         THE REQUEST IN ERROR CONTAINS THE COMPLETION        @Y30LB02 00978100
.*         CODE. REQUESTS PRIOR TO THE ONE IN ERROR CONTAIN    @Y30LB02 00979100
.*         A COMPLETION CODE OF X'000', BUT THE MSS            @Y30LB02 00980100
.*         ACTIVITY HAS *NOT* BEEN INITIATED - DO NOT WAIT     @Y30LB02 00981100
.*         FOR A DELAYED RESPONSE. EACH REQUEST SUBSEQUENT     @Y30LB02 00982100
.*         TO THE ONE IN ERROR CONTAINS A COMPLETION CODE      @Y30LB02 00983100
.*         OF X'170' - DO *NOT* WAIT FOR A DELAYED RESPONSE    @Y30LB02 00984100
.*         FROM THESE REQUESTS.                                @Y30LB02 00985100
.*                                                             @Y30LB02 00986100
.*         IF THE FIRST ERROR COMPLETION CODE FOUND IN A       @Y30LB02 00987100
.*         RELINQUISH CHAIN IS NOT ONE OF THE CODES            @Y30LB02 00988100
.*         DESCRIBED ABOVE, EACH REQUEST IN THE CHAIN MUST     @Y30LB02 00989100
.*         BE INTERROGATED TO DETERMINE IF IT HAS FAILED       @Y30LB02 00990100
.*         AND THE REASON FOR THE FAILURE (SOME OR ALL OF      @Y30LB02 00991100
.*         THE REQUESTS MAY HAVE FAILED,EACH FOR A DIFFERENT   @Y30LB02 00992100
.*         REASON). IN THIS SITUATION, WAIT FOR A DELAYED      @Y30LB02 00993100
.*         RESPONSE ONLY IF THE COMPLETION CODE IS X'000'      @Y30LB02 00994100
.*         AND A DELAYED RESPONSE WAS REQUESTED.               @Y30LB02 00995100
.*                                                             @Y30LB02 00996100
.*     'AREXT' = EXTENTS. MAY BE SET BY MACRO PARAMETER.       @Y30LB02 00997100
.*                                                             @Y30LB02 00998100
.*     'ARNEDB' = ADDR OF THE NEXT EXTENT BLOCK. THROUGH       @ZA28964 00999100
.*         THE USE OF THIS POINTER, MULTIPLE ACQUIRES OR       @ZA28964 01000100
.*         RELINQUISHES MAY BE LINKED TOGETHER AND             @ZA28964 01001100
.*         EXECUTED WITH ONE CALL TO SVC 126. POINTS TO        @ZA28964 01002100
.*         AN AUXILLARY REQUEST BLOCK CONTAINING RELATED       @Y30LB02 01003100
.*         INFORMATION FOR THE SAME OR DIFFERENT VOLUME(S)     @Y30LB02 01004100
.*         AND DIFFERENT EXTENTS. ANY CHAIN OF REQUESTS MUST   @Y30LB02 01005100
.*         CONTAIN ONLY ACQUIRE REQUESTS OR ONLY               @Y30LB02 01006100
.*         RELINQUISH REQUESTS (NO MIXTURE). ALL INFORMATION   @Y30LB02 01007100
.*         REQUIRED MUST BE SPECIFIED IN EACH REQUEST BLOCK.   @Y30LB02 01008100
.*         A POINTER OF ZERO INDICATES THAT NO MORE            @Y30LB02 01009100
.*         REQUESTS ARE TO BE PROCESSED IN THIS CALL.          @Y30LB02 01010100
.*                                                             @Y30LB02 01043000
.* OUTPUT =                                                    @Y30LB02 01045000
.*                                                             @Y30LB02 01045400
.*   INLINE PL/S OR BAL STATEMENTS THAT PERFORM THE REQUESTED  @Y30LB02 01045500
.*   FUNCTION AND ERROR MESSAGES AS COMMENTS AT THE POINT      @Y30LB02 01045600
.*   OF INVOCATION.                                            @Y30LB02 01045700
.*                                                             @Y30LB02 01045800
.*   SVC126 REQUEST BLOCK (LIST AND STANDARD FORMS):           @Y30LB02 01045900
.*                                                             @Y30LB02 01053900
.*     OFFSETS  LENGTH    BAL    DESCRIPTION                   @Y30LB02 01055900
.*     DEC HEX  (BYTES)  LABEL                                 @Y30LB02 01056900
.*     -------  ------  -------  -----------                   @Y30LB02 01059900
.*      0  (0)     4    ARLEN    REQUEST BLOCK LENGTH          @Y30LB02 01061900
.*      4  (4)     1    AROP     OPCODE                        @Y30LB02 01063000
.*      5  (5)     1    ARRES0   RESERVED                      @Y30LB02 01065000
.*      6  (6)     1    ARFLAG   FLAGS                         @Y30LB02 01065100
.*      7  (7)     1    ARNMEXTS NUMBER OF EXTENTS             @Y30LB02 01067300
.*      8  (8)     6    ARVOL    VOLID                         @Y30LB02 01069300
.*     14  (E)     2    ARASID   ADDR SPACE ID                 @Y30LB02 01071300
.*     16  (10)    4    ARECB    EVENT CONTROL BLOCK ADDR      @Y30LB02 01071400
.*     20  (14)    5    ARHOST   HOSTID                        @Y30LB02 01071500
.*     25  (19)    1    ARRES3   RESERVED                      @Y30LB02 01071600
.*     26  (1A)    2    ARCOMPC  COMPLETION CODE               @Y30LB02 01073800
.*     28  (1C)   64DEC AREXT    EXTENTS                       @Y30LB02 01075800
.*     92  (5C)    4    ARNEDB   ADDR OF NEXT REQ BLK          @Y30LB02 01077800
.*                                                             @Y30LB02 01077900
.* EXIT-NORMAL = VALID INVOCATION                              @Y30LB02 01078000
.*                                                             @Y30LB02 01078100
.*   CONDITION = RETURN CODE = 0 | 4                           @Y30LB02 01080300
.*                                                             @Y30LB02 01082300
.*   OUTPUT = REQUEST BLOCK AND STATEMENTS GENERATED. IF PL/S  @ZA28964 01082700
.*       WARNING MESSAGES ARE GENERATED (RETCODE=4), THEY WILL @ZA28964 01082800
.*       ONLY APPEAR AS COMMENTS WHEN THE 'MSOURCE' PARAMETER  @ZA28964 01082900
.*       IS USED IN THE PL/S COMPILATION. IF THE ACQUIRE/      @ZA28964 01083000
.*       RELINQUISH REQUEST GENERATES A RUN-TIME ERROR, THE    @ZA28964 01083100
.*       MSSC SVC 126 WILL EXIT WITH R15 = 4 AND R0 = 0. IN    @ZA28964 01083200
.*       THIS CASE, THE USER MUST SCAN THE COMPLETION CODES    @ZA28964 01083300
.*       IN THE CHAIN OF REQUESTS TO DETERMINE THE REQUESTS    @ZA28964 01083400
.*       IN ERROR.                                             @ZA28964 01083500
.*                                                             @ZA28964 01083600
.*   MESSAGES =                                                @Y30LB02 01084300
.*                                                             @Y30LB02 01084400
.*     ICB603I:  WARNING-ONLY MF AND TYPE PARAMETERS ARE       @Y30LB02 01085700
.*               VALID FOR LIST FORM                           @Y30LB02 01087700
.*                                                             @Y30LB02 01088300
.* EXIT-ERROR = INVALID INVOCATION                             @Y30LB02 01089600
.*                                                             @Y30LB02 01090900
.*   CONDITION = RETURN CODE = 12                              @Y30LB02 01092200
.*                                                             @Y30LB02 01093500
.*   OUTPUT = REQUEST BLOCK AND STATEMENTS NOT GENERATED. PL/S @ZA28964 01093900
.*       ERROR MESSAGES WILL ONLY APPEAR AS COMMENTS WHEN THE  @ZA28964 01094200
.*       'MSOURCE' PARAMETER IS USED IN THE PL/S COMPILATION.  @ZA28964 01094500
.*       IF THE ACQUIRE/RELINQUISH REQUEST GENERATES AN ERROR  @ZA28964 01094800
.*       AT RUN-TIME, THE MSSC SVC 126 WILL EXIT WITH R15 = 4  @ZA28964 01095100
.*       AND R0 = 0. IN THIS CASE, THE USER MUST SCAN THE      @ZA28964 01095400
.*       THE COMPLETION CODES IN THE CHAIN OF REQUESTS TO      @ZA28964 01095700
.*       DETERMINE THE REQUESTS IN ERROR.                      @ZA28964 01096000
.*                                                             @ZA28964 01096300
.*   MESSAGES =                                                @Y30LB02 01097200
.*                                                             @Y30LB02 01098000
.*     ICB600I:  TYPE MUST BE SPECIFIED                        @Y30LB02 01098400
.*     ICB601I:  TYPE IS INCORRECTLY SPECIFIED                 @Y30LB02 01098500
.*     ICB602I:  A NAME FOR THE REQUEST BLOCK MUST BE          @Y30LB02 01098600
.*               SPECIFIED IN MF(2)                            @Y30LB02 01098700
.*     ICB606I:  EXTS MUST BE SPECIFIED FOR THE STANDARD FORM  @Y30LB02 01100200
.*               MACRO                                         @Y30LB02 01102200
.*     ICB609I:  NMEXTS MUST BE SPECIFIED FOR STANDARD         @Y30LB02 01102600
.*               FORM MACRO                                    @Y30LB02 01103000
.*     ICB610I:  VOLID MUST BE SPECIFIED FOR STANDARD          @Y30LB02 01103400
.*               FORM MACRO                                    @Y30LB02 01103500
.*     ICB612I:  MF(2) MUST CONTAIN REQ BLK NAME               @Y30LB02 01104000
.*               IF EXEC MACRO FORM REQUESTED                  @Y30LB02 01104400
.*     ICB613I:  MISSING REQ BLK NAME OR                       @Y30LB02 01104800
.*               MORE THAN 2 SUBPARAMETERS FOR MF              @Y30LB02 01104900
.*     ICB615I:  INVALID MF PARAMETER SPECIFIED, MUST          @Y30LB02 01105000
.*               BE L, E, OR NULL                              @Y30LB02 01105200
.*                                                             @Y30LB02 01105800
.* EXTERNAL REFERENCES =                                       @Y30LB02 01106000
.*                                                             @Y30LB02 01106500
.*   ROUTINES = NONE                                           @Y30LB02 01108000
.*                                                             @Y30LB02 01109500
.*   DATA-AREAS =                                              @Y30LB02 01111000
.*                                                             @Y30LB02 01112500
.*     BAL : GLOBAL VARIABLES USED                             @Y30LB02 01114000
.*       &ARSTEST : >0 IF THE STANDARD FORM HAS BEEN           @Y30LB02 01115500
.*           INVOKED PREVIOUSLY IN THE CALLING MODULE          @Y30LB02 01117000
.*                                                             @Y30LB02 01118500
.*     PL/S: FIXED EXTERNAL DECLARATIONS USED                  @Y30LB02 01120000
.*       ARTESTR1: >0 IF ARR1 HAS BEEN DECLARED AS REG1        @Y30LB02 01121500
.*           PREVIOUSLY IN THE CALLING MODULE                  @Y30LB02 01123000
.*       ARTEST : >0 IF THE STANDARD FORM HAS BEEN             @Y30LB02 01124500
.*           PREVIOUSLY INVOKED IN THE CALLING MODULE          @Y30LB02 01126000
.*                                                             @Y30LB02 01127500
.*   CONTROL-BLOCKS = NONE                                     @Y30LB02 01129000
.*                                                             @Y30LB02 01130500
.* TABLES = NONE                                               @Y30LB02 01132000
.*                                                             @Y30LB02 01133500
.* MACROS = IHBINNRA (USED IN BAL TO LOAD REG1)                @Y30LB02 01135000
.*                                                             @Y30LB02 01136500
.* CHANGE-ACTIVITY =                                           @Y30LB02 01138000
.*                                                             @Y30LB02 01139500
.*   00 74/06/09 DEVELOPMENT                                   @Y30LB02 01141000
.*   01 76/04/20 ALLOCATE TO MOUNTED VOLUMES                   @G24LB04 01142500
.*   02 77/12/15 DOCUMENTATION ADDITIONS/RESTRUCTURE           @ZA28964 01143400
.*               BAL STD FORM SERIALLY REUSABLE                @ZA28964 01144300
.*               PL/S VARIABLE 'EXSPTR' RENAMED 'ARSPTR'       @ZA28964 01145200
.*               PL/S LABELS DECLARED IN BAL VERSION           @ZA28964 01146100
.*               BAL LABELS DECLARED IN PL/S VERSION           @ZA28964 01147000
.*               PL/S MACRO INVOCATION ECHOED BACK TO CALLER   @ZA28964 01147900
.*                                                             @Y30LB02 01150000
.**** END OF SPECIFICATIONS ***                                @Y30LB02 22850003
         GBLB  &ARTEST       STANDARD FORM FLAG                @Y30LB02 22900000
         LCLC  &MEXTS                                          @Y30LB02 23200003
         LCLC  &END                                            @Y30LB02 23250003
         LCLC  &ACQRE                                          @Y30LB02 23300003
&END     SETC  'AR'.'&SYSNDX'                                  @Y30LB02 23350003
&MEXTS   SETC  'AR1'.'&SYSNDX'                                 @Y30LB02 23400003
&ACQRE   SETC  'AR2'.'&SYSNDX'                                 @Y30LB02 23450000
         AIF   ('&MF(1)' EQ 'E').EXEC  IF EXECUTE              @Y30LB02 23500000
         AIF   ('&TYPE' EQ 'ACQ' OR '&TYPE' EQ 'REL').START    @Y30LB02 23550003
         AIF   ('&TYPE' EQ '').NOT                             @Y30LB02 23650003
         MNOTE 12,'  ICB601I - TYPE IS INCORRECTLY SPECIFIED ' @Y30LB02 23700003
         AGO   .EXIT                                           @Y30LB02 23750000
.NOT     MNOTE 12,'  ICB600I - TYPE MUST BE SPECIFIED '        @Y30LB02 23800003
         AGO   .EXIT                                           @Y30LB02 23850000
.*                                                             @ZA28964 23860000
.START   AIF   ('&MF(1)' NE 'L').NLIST BRANCH IF NOT LIST FORM @Y30LB02 23870000
.*                                                             @ZA28964 23880000
.* *********************************************************** @Y30LB02 23890000
.*               L I S T   F O R M                             @ZA28964 23900000
.* *********************************************************** @Y30LB02 23910000
.*                                                             @ZA28964 23920000
.*       THE FOLLOWING CODE CHECKS FOR ILLEGAL PARAMETERS ON   @Y30LB02 24000003
.*       LIST FORM MACRO AND GIVES WARNING IF FOUND            @Y30LB02 24050003
.*                                                             @Y30LB02 24100003
         AIF   ('&FLAGS' NE '' OR '&VOLID' NE '').WARN         @Y30LB02 24150003
         AIF   ('&ECB' NE '' OR '&EXTS' NE '').WARN            @Y30LB02 24200003
         AIF   ('&HOSTID' EQ '' AND '&NMEXTS' EQ '').LISTOK    @ZA28964 24210000
.*                                                             @Y30LB02 24300003
.WARN    MNOTE 4,'  ICB603I - WARNING-ONLY MF AND TYPE '       @Y30LB02 24350003
         MNOTE 4,'  PARAMETERS ARE VALID FOR LIST FORM '       @Y30LB02 24400003
.*                                                             @Y30LB02 24450003
.LISTOK  AIF   ('&MF(2)' EQ 'MAP').LISTDS   DSECT REQUESTED?   @Y30LB02 24550000
*        MACMEAN  ACQUIRE/RELINQUISH MACRO                     @Y30LB02 24600003
*                 INITIALIZED LIST FORM MACRO                  @Y30LB02 24650000
*                 VERSION - VS/2 REL 3 77/12/15  LEVEL 02      @ZA28964 24700000
*                                                              @Y30LB02 24750003
&SYMBOL  DS    0F                                              @Y30LB02 24800003
ARLEN    DC    F'96'                   REQUEST BLOCK LENGTH    @Y30LB02 24850003
         AIF   ('&TYPE' EQ 'REL').LREL BRCH IF REL. REQUEST    @Y30LB02 24900003
AROP     DC    XL1'02'                 OPCODE FOR ACQUIRE      @Y30LB02 24950003
         AGO   .ZEROES                 BRANCH                  @Y30LB02 25000003
.LREL    ANOP                                                  @Y30LB02 25050003
AROP     DC    XL1'04'                 OPCODE FOR RELINQUISH   @Y30LB02 25100003
.ZEROES  ANOP                                                  @Y30LB02 25150003
ARRES0   DC    XL1'00'                 RESERVED                @Y30LB02 25200000
ARFLAG   DC    XL1'00'                 FLAGS                   @Y30LB02 25250000
ARNMEXTS DC    XL1'00'                 NUM EXTS                @Y30LB02 25300000
ARVOL    DC    XL6'000000000000'       VOLID                   @Y30LB02 25350000
ARASID   DC    XL2'0000'               ASID                    @Y30LB02 25400000
ARECB    DC    XL4'00000000'           ECB                     @Y30LB02 25450000
ARHOST   DC    XL5'0000000000'         HOSTID                  @Y30LB02 25500000
ARRES3   DC    XL1'00'                 RESERVED                @Y30LB02 25550000
ARCOMPC  DC    XL2'0000'               COMP CODE               @Y30LB02 25600000
AREXT    DC    16XL4'00000000'         EXTS                    @Y30LB02 25650000
ARNEDB   DC    XL4'00000000'           ADDR OF NEXT EXT BLK    @Y30LB02 25700003
ARLL     EQU   ARLEN                   COMPATABILITY DEF       @ZA28964 25710000
ARFLG    EQU   ARFLAG                  COMPATIBILITY DEF       @ZA28964 25730000
ARNMEXT  EQU   ARNMEXTS                COMPATIBILITY DEF       @ZA28964 25750000
         AGO   .EXIT                   GO TO EXIT              @Y30LB02 25770000
.*                                                             @ZA28964 25790000
.LISTDS  ANOP                                                  @Y30LB02 25810000
*        MACMEAN  ACQUIRE/RELINQUISH MACRO                     @Y30LB02 25830000
*                 UNINITIALIZED LIST FORM MACRO                @Y30LB02 25850000
*                 VERSION - VS/2 REL 3 77/12/15  LEVEL 02      @ZA28964 25870000
*                                                              @Y30LB02 25970000
ICBACREL DSECT                                                 @Y30LB02 26050003
ARLEN    DS    F                       REQ BLK LEN 96 DEC      @Y30LB02 26100003
         AIF   ('&TYPE' EQ 'REL').LREL1 BRCH IF REL. REQUEST   @Y30LB02 26150003
AROP     DS    XL1                     ACQUIRE OPCD (02 HEX)   @ZA28964 26200000
         AGO   .RESTDS                 BRANCH                  @Y30LB02 26220000
.*                                                             @ZA28964 26240000
.LREL1   ANOP                                                  @Y30LB02 26260000
AROP     DS    XL1                     RELINQ OPCD (04 HEX)    @ZA28964 26280000
.*                                                             @ZA28964 26300000
.RESTDS  ANOP                                                  @Y30LB02 26320000
ARRES0   DS    XL1                     RESERVED                @ZA28964 26340000
ARFLAG   DS    XL1                     FLAGS                   @ZA28964 26360000
ARNMEXTS DS    XL1                     NUM EXTS                @ZA28964 26380000
ARVOL    DS    CL6                     VOLID                   @ZA28964 26400000
ARASID   DS    XL2                     ASID                    @ZA28964 26420000
ARECB    DS    A                       ECB                     @ZA28964 26440000
ARHOST   DS    CL5                     HOSTID                  @ZA28964 26460000
ARRES3   DS    XL1                     RESERVED                @ZA28964 26480000
ARCOMPC  DS    XL2                     COMPLETION CODE         @ZA28964 26500000
AREXT    DS    16XL4                   EXTENTS                 @ZA28964 26520000
ARNEDB   DS    A                       ADDR OF NEXT EXT BLK    @Y30LB02 26540000
ARLL     EQU   ARLEN                   COMPATABILITY DEF       @ZA28964 26560000
ARFLG    EQU   ARFLAG                  COMPATIBILITY DEF       @ZA28964 26580000
ARNMEXT  EQU   ARNMEXTS                COMPATIBILITY DEF       @ZA28964 26600000
         AGO   .EXIT                   GO TO EXIT              @Y30LB02 26620000
.*                                                             @ZA28964 26640000
.NLIST   AIF   ('&MF(1)' EQ '').ISSTD  IF STD. FORM BRANCH     @Y30LB02 26660000
         MNOTE 12,'  ICB615I - INVALID MF PARAMETER '          @Y30LB02 26680000
         MNOTE 12,'  SPECIFIED, MUST BE L, E, OR NULL'         @Y30LB02 26700000
         AGO   .EXIT                   BRANCH                  @ZA28964 26720000
.*                                                             @ZA28964 26740000
.* *********************************************************** @ZA28964 26760000
.*        S T A N D A R D   F O R M                            @ZA28964 26780000
.* *********************************************************** @ZA28964 26800000
.*                                                             @ZA28964 26820000
.ISSTD   AIF   ('&NMEXTS' NE '').VOLIDCK BRCH IF NMEXTS SPEC'D @Y30LB02 26840000
         MNOTE 12,'  ICB609I - NMEXTS MUST BE SPECIFIED '      @Y30LB02 26860000
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02 26880000
         AGO   .EXIT                                           @Y30LB02 26900000
.*                                                             @ZA28964 26920000
.VOLIDCK AIF   ('&VOLID' NE '').EXTSCK IF VOLID SPEC'D         @ZA28964 26940000
         MNOTE 12,'  ICB610I - VOLID MUST BE SPECIFIED '       @Y30LB02 26960000
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02 26980000
         AGO   .EXIT                                           @ZA28964 27000000
.*                                                             @ZA28964 27020000
.EXTSCK  AIF   ('&EXTS' NE '').PAROK   IF EXTS SPEC'D,BRCH     @Y30LB02 27040000
         MNOTE 12,'  ICB606I - EXTS MUST BE SPECIFIED '        @Y30LB02 27060000
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02 27080000
         AGO   .EXIT                                           @ZA28964 27100000
.*                                                             @ZA28964 27120000
.PAROK   ANOP                                                  @ZA28964 27140000
*        MACMEAN  ACQUIRE/RELINQUISH MACRO                     @ZA28964 27160000
*                 STANDARD FORM INVOCATION                     @ZA28964 27180000
*                 VERSION - VS/2 REL 3 77/12/15  LEVEL 02      @ZA28964 27200000
         AIF   (&ARTEST).ARSET    IF ¬ FIRST INVOCATION        @ZA28964 27220000
&ARTEST  SETB  1                                               @ZA28964 27240000
         CNOP  0,4                                             @Y30LB02 27260000
&SYMBOL  BAL   1,&ACQRE                BRANCH AROUND REQBLK    @Y30LB02 27280000
ARLEN    DC    A(&ACQRE-*)             REQUEST BLOCK LENGTH    @Y30LB02 27350003
         AIF   ('&TYPE' EQ 'REL').SREL BRCH IF REL REQUEST     @Y30LB02 27400003
AROP     DC    XL1'02'                 ACQ OPCODE              @Y30LB02 27450003
         AGO   .REST                   BRCH TO REST OF DC'S    @Y30LB02 27500003
.*                                                             @ZA28964 27510000
.SREL    ANOP                                                  @Y30LB02 27560000
AROP     DC    XL1'04'                 REL OPCODE              @Y30LB02 27610000
.*                                                             @ZA28964 27660000
.REST    ANOP                                                  @Y30LB02 27710000
ARRES0   DC    XL1'00'                 RESERVED                @ZA28964 27760000
ARFLAG   DC    XL1'00'                 FLAGS                   @ZA28964 27810000
ARNMEXTS DC    XL1'00'                 NUM EXTS                @ZA28964 27860000
ARVOL    DC    XL6'000000000000'       VOLID                   @ZA28964 27910000
ARASID   DC    XL2'0000'               ASID                    @ZA28964 27960000
ARECB    DC    XL4'00000000'           ECB                     @ZA28964 28010000
ARHOST   DC    XL5'0000000000'         HOSTID                  @ZA28964 28060000
ARRES3   DC    XL1'00'                 RESERVED                @ZA28964 28110000
ARCOMPC  DC    XL2'0000'               COMP CODE               @ZA28964 28160000
AREXT    DC    16XL4'00000000'         EXTS                    @ZA28964 28210000
ARNEDB   DC    XL4'00000000'           ADDR NEXT EXT BLK       @ZA28964 28260000
ARLL     EQU   ARLEN                   COMPATABILITY DEF       @ZA28964 28310000
ARFLG    EQU   ARFLAG                  COMPATIBILITY DEF       @ZA28964 28360000
ARNMEXT  EQU   ARNMEXTS                COMPATIBILITY DEF       @ZA28964 28410000
&ACQRE   EQU   *                                               @Y30LB02 28460000
         AGO   .TEST                   BRANCH                  @Y30LB02 28510000
.*                                                             @ZA28964 28560000
.ARSET   ANOP                                                  @ZA28964 28610000
*                 SUBSEQUENT STANDARD FORM INVOCATION          @ZA28964 28660000
&SYMBOL  LA    1,ARLEN       LOAD LIST ADDRESS IN REG 1        @ZA28964 28710000
.*                                                             @ZA28964 28760000
.TEST    AIF   ('&FLAGS' EQ '').NMEXTS  BRCH IF NOT SPEC'D     @ZA28964 28810000
         AIF   ('&FLAGS'(1,1) EQ '(').RFLAGS IF REGFORM        @ZA28964 28860000
         MVC   6(1,1),&FLAGS           MOVE FLAGS              @ZA28964 28910000
         AGO   .NMEXTS                 BRCH TO CHECK FOR VOLID @Y30LB02 28960000
.*                                                             @ZA28964 29010000
.RFLAGS  ANOP                                                  @Y30LB02 29060000
         MVC   6(1,1),0(&FLAGS(1))     MOVE FLAGS              @ZA28964 29110000
.*                                                             @ZA28964 29160000
.NMEXTS  AIF   ('&NMEXTS'(1,1) EQ '(').RNEXT IF REGFORM        @ZA28964 29210000
         MVC   7(1,1),&NMEXTS          MOVE #EXT INFO          @ZA28964 29260000
         AGO   .VOLOK                  BRCH TO CHECK FOR VOLID @Y30LB02 29310000
.*                                                             @ZA28964 29360000
.RNEXT   ANOP                                                  @Y30LB02 29410000
         MVC   7(1,1),0(&NMEXTS(1))    MOVE #EXT INFO          @ZA28964 29460000
.*                                                             @ZA28964 29510000
.VOLOK   AIF   ('&VOLID'(1,1) EQ '(').RVOLID IF REGFORM        @ZA28964 29560000
         MVC   8(6,1),&VOLID           MOVE VOLID              @ZA28964 29610000
         AGO   .ECBCK                  BRANCH TO CHECK FOR ECB @Y30LB02 29660000
.*                                                             @ZA28964 29710000
.RVOLID  ANOP                                                  @Y30LB02 29760000
         MVC   8(6,1),0(&VOLID(1))     MOVE VOLID              @ZA28964 29810000
.*                                                             @ZA28964 29860000
.ECBCK   AIF   ('&ECB' EQ '').HOSTCK   IF ECB NOT SPEC'D.,BRCH @ZA28964 29910000
         AIF   ('&ECB'(1,1) EQ '(').RECB IF SPEC'D BY REG,BRCH @Y30LB02 31450003
         LA    15,&ECB                 LOAD R15 WITH ADDR(ECB) @Y30LB02 31500003
         ST    15,16(1)                STORE ADDR IN ECB FIELD @Y30LB02 31550003
         AGO   .HOSTCK                 BRANCH TO CHECK HOST    @Y30LB02 31600003
.*                                                             @ZA28964 31610000
.RECB    ANOP                                                  @Y30LB02 31660000
         ST    &ECB,16(1)              ST ADDR IN THE ECB FLD  @Y30LB02 31710000
.*                                                             @ZA28964 31760000
.HOSTCK  AIF   ('&HOSTID' EQ '').EXTS    IF HOST NOT SPECD,BR  @ZA28964 31810000
         AIF   ('&HOSTID'(1,1) EQ '(').RHOST REG-FORM,BRANCH   @Y30LB02 31860000
         MVC   20(5,1),&HOSTID         STORE HOSTID IN BLOCK   @Y30LB02 31910000
         AGO   .EXTS                   BRANCH                  @Y30LB02 31960000
.*                                                             @ZA28964 32010000
.RHOST   ANOP                                                  @Y30LB02 32060000
         MVC   20(5,1),0(&HOSTID(1))   STORE HOSTID IN BLOCK   @Y30LB02 32110000
.*                                                             @ZA28964 32160000
.EXTS    ANOP                                                  @ZA28964 32210000
         SR    14,14                   ZERO REGISTER 14        @Y30LB02 32600003
         IC    14,&NMEXTS              PUT #EXTS INTO R14      @Y30LB02 32650003
         SLA   14,2                    MULT R14 BY 4           @Y30LB02 32700003
         LA    15,1                    LOAD 1 INTO R15         @Y30LB02 32750003
         SR    14,15                   SUB R15 FROM R14        @Y30LB02 32800003
         AIF   ('&EXTS'(1,1) EQ '(').RNMEX SPEC'D. BY REG,BR   @Y30LB02 32850003
         LA    15,&EXTS                LOAD EXTS ADDR INTO R15 @Y30LB02 32900003
         AGO   .LOAD5                  BRANCH                  @Y30LB02 32950003
.*                                                             @ZA28964 32960000
.RNMEX   ANOP                                                  @Y30LB02 32980000
         LR    15,&EXTS                LOAD EXTS ADDR INTO R15 @Y30LB02 33000000
.*                                                             @ZA28964 33020000
.LOAD5   ANOP                                                  @Y30LB02 33100003
         EX    14,&MEXTS               EXEC MOVE(EXTENTS) INST @Y30LB02 33150003
         B     &END                    BRANCH TO THE END       @Y30LB02 33200003
&MEXTS   MVC   28(1,1),0(15)           MOVE 64 BYTES (OF       @Y30LB02 33250003
*                                      EXTENTS) INTO REQ BLOCK @Y30LB02 33300003
         AGO   .LINK                   INVOKE THE SVC          @ZA28964 33350000
.*                                                             @ZA28964 33355000
.* *********************************************************** @ZA28964 33360000
.*        E X E C U T E   F O R M                              @ZA28964 33365000
.* *********************************************************** @ZA28964 33370000
.*                                                             @ZA28964 33375000
.EXEC    AIF   (N'&MF EQ 2).CONT       IF 2 SUBPARAMETERS      @ZA28964 33380000
         MNOTE 12,'  ICB613I - MISSING REQ BLK NAME '          @Y30LB02 33385000
         MNOTE 12,'  OR MORE THAN 2 SUBPARAMETERS FOR MF '     @Y30LB02 33390000
         AGO   .EXIT                   BRANCH                  @ZA28964 33395000
.*                                                             @ZA28964 33400000
.CONT    ANOP                                                  @Y30LB02 33405000
*        MACMEAN  ACQUIRE/RELINQUISH MACRO                     @ZA28964 33410000
*                 EXECUTE FORM INVOCATION                      @ZA28964 33415000
*                 VERSION - VS/2 REL 3 77/12/15  LEVEL 02      @ZA28964 33420000
&SYMBOL  IHBINNRA &MF(2)               LOAD THE ADDR INTO R1   @Y30LB02 33425000
.*                                                             @ZA28964 33430000
.LINK    ANOP                                                  @Y30LB02 33435000
&END     SVC   126                     LINK TO THE SVC         @Y30LB02 33440000
.*                                                             @ZA28964 33445000
.EXIT    MEND                                                  @Y30LB02 33450000
**********************************************************     @ZA28964 33455000
*********************************************************/              33470000
* ICBACREL: MACRO KEYS(MF,TYPE,FLAGS,VOLID,ECB,EXTS,                    33550003
*                  HOSTID,NMEXTS);                         /*@Y30LB02*/ 33600003
*/*                                                          @Y30LB02*/ 33650003
*/********************************************************** @ZA28964*/ 33660000
*/*          EXTERNAL DECLARES                               @Y30LB02*/ 33680000
*/********************************************************** @ZA28964*/ 33700000
*   DCL (ARTEST,                       /*USED AS A TEST TO   @Y30LB02*/ 33750000
*                                      /*SEE IF STD FORM     @Y30LB02*/ 33800003
*                                      /*ALREADY INVOKED     @Y30LB02*/ 33850003
*        ARTESTR1) FIXED EXT;          /*USED AS A TEST TO   @Y30LB02*/ 33900000
*                                      /*SEE IF R1 ALREADY   @Y30LB02*/ 33950003
*                                      /*DECLARED            @Y30LB02*/ 34000003
*/*                                                          @Y30LB02*/ 34100003
*/********************************************************** @ZA28964*/ 34110000
*/*            INTERNAL DECLARES                             @Y30LB02*/ 34130000
*/********************************************************** @ZA28964*/ 34150000
*   DCL (ARLENGTH,                     /*LIST LENGTH         @Y30LB02*/ 34200000
*        AOPCODE,                      /* ACQUIRE OPCODE     @Y30LB02*/ 34300000
*        ROPCODE) CHAR,                /* RELINQUISH OPCODE  @Y30LB02*/ 34350000
*        RETCODE FIXED;                /* RETURN CODE        @Y30LB02*/ 34360000
*/*                                                          @Y30LB02*/ 34410000
*/********************************************************** @ZA28964*/ 34460000
*/*             VARIABLE INITIALIZATION                      @ZA28964*/ 34480000
*/********************************************************** @ZA28964*/ 34500000
*   ARLENGTH='96';                     /*LEN CONSTANT OF 96  @Y30LB02*/ 34600003
*   AOPCODE='02';                      /* ACQUIRE OPCODE     @Y30LB02*/ 34650003
*   ROPCODE='04';                      /* RELINQUISH OPCODE  @Y30LB02*/ 34700003
*   RETCODE=0;                         /*RETURN CODE         @Y30LB02*/ 34750003
*/*                                                          @ZA28964*/ 34800000
*/*   NOTE: ANSWER TEXT IS INCLUDED AT THE END OF THE MACRO  @ZA28964*/ 34820000
*/*         AND IS INVOKED IN A SEGMENT-LIKE FASHION         @ZA28964*/ 34840000
*/*                                                          @ZA28964*/ 34860000
*/********************************************************** @ZA28964*/ 34880000
*/*     ECHO INVOCATION BACK TO CALLING MODULE               @ZA28964*/ 34900000
*/********************************************************** @ZA28964*/ 34920000
*  ANS('     /* MACRO INVOCATION:  @ZA28964*/')SKIP;                    34940000
*  ANS('     /* ' || MACLABEL || ' ' || MACNAME || ' ' || MACLIST ||    34960000
*      ' ' || MACKEYS || ' @ZA28964*/')SKIP;               /*@ZA28964*/ 34980000
*/*                                                          @ZA28964*/ 35000000
*/********************************************************** @ZA28964*/ 35020000
*/*         DECLARE REGISTER 1                               @ZA28964*/ 35040000
*/********************************************************** @ZA28964*/ 35060000
*  IF ARTESTR1=0 THEN                  /*HAS R1 BEEN DCL'D?  @Y30LB02*/ 35080000
*    DO;                               /*NO,DECLARE REG1     @Y30LB02*/ 35100000
*      ANS('DCL ARR1 REG(1) PTR ;   '||                                 35120000
*          '/*WILL CONTAIN LIST ADDRESS   @Y30LB02*/') SKIP;            35140000
*      ARTESTR1=1;                     /*SET ARTESTR1 TO 1   @Y30LB02*/ 35160000
*    END;                                                  /*@Y30LB02*/ 35180000
*/*                                                          @ZA28964*/ 35200000
*/********************************************************** @ZA28964*/ 35220000
*/*      CHECK FOR VALID TYPE                                @ZA28964*/ 35240000
*/********************************************************** @ZA28964*/ 35260000
*  IF MF(1) = 'E' THEN                 /*EXECUTE FORM SPECD? @Y30LB02*/ 35280000
*    GO TO EXFORM;                     /*YES, BRANCH         @Y30LB02*/ 35300000
*  IF TYPE(1) ¬= 'ACQ' THEN IF TYPE(1) ¬= 'REL' THEN       /*@ZA28964*/ 35320000
*    DO;                                                   /*@ZA28964*/ 35340000
*      IF TYPE(1) = '' THEN                                /*@ZA28964*/ 35360000
*        ANS MSG('  ICB600I - TYPE '||                                  35380000
*                'MUST BE SPECIFIED') SKIP(5);             /*@Y30LB02*/ 35400000
*      ELSE                                                /*@ZA28964*/ 35420000
*        ANS MSG('  ICB601I - TYPE '||                                  35440000
*                ' IS INCORRECTLY SPECIFIED') SKIP(5);     /*@Y30LB02*/ 35460000
*      RETCODE=12;                     /*SET RETURN CODE     @Y30LB02*/ 35480000
*      GO TO FINISH;                                       /*@ZA28964*/ 35500000
*    END;                                                  /*@ZA28964*/ 35520000
*/*                                                          @ZA28964*/ 35540000
*/********************************************************** @ZA28964*/ 35560000
*/*          LIST FORM                                       @ZA28964*/ 35580000
*/********************************************************** @ZA28964*/ 35600000
*  IF MF(1)¬='L' THEN                  /* IF NOT LIST FORM   @Y30LB02*/ 36300000
*    GO TO NOTLIST;                    /* BRANCH             @Y30LB02*/ 36350000
*  IF MF(2)='' THEN                    /* WAS A NAME GIVEN?  @Y30LB02*/ 36400000
*    DO;                               /* NO,PRT ERROR MSG   @Y30LB02*/ 36450000
*      ANS MSG('  ICB602I - A NAME FOR THE REQUEST BLOCK '||            36550000
*              'MUST BE SPECIFIED IN MF(2) ') SKIP(5);     /*@Y30LB02*/ 36600000
*      RETCODE=12;                     /*SET RETURN CODE     @Y30LB02*/ 36650000
*      GO TO FINISH;                                       /*@Y30LB02*/ 36800000
*    END;                                                  /*@Y30LB02*/ 36810000
*/*                                                          @Y30LB02*/ 37050003
*  IF FLAGS ||                         /*FLAGS SPECIFIED?    @Y30LB02*/ 37100000
*     VOLID ||                         /*VOLID SPECIFIED     @Y30LB02*/ 37200000
*     ECB ||                           /*ECB SPECIFIED?      @Y30LB02*/ 37300000
*     EXTS ||                          /*EXTENTS SPECIFIED?  @Y30LB02*/ 37400000
*     HOSTID ||                        /*HOSTID SPECIFIED?   @Y30LB02*/ 37450000
*     NMEXTS ¬= '' THEN                /*NMEXTS SPECIFIED?   @Y30LB02*/ 37460000
*    DO;                               /*PRT WARNING MSG     @Y30LB02*/ 37550000
*      RETCODE=4;                      /*RETURN CODE EQ 4    @Y30LB02*/ 37600000
*      ANS MSG('  ICB603I - WARNING-ONLY '||                            37650000
*              'MF AND TYPE PARAMETERS ARE VALID FOR '||                37700000
*              'LIST FORM ')SKIP;                          /*@Y30LB02*/ 37750000
*    END;                                                  /*@Y30LB02*/ 37800000
*  IF MF(3) = '' THEN        /*ATTRIBUTE ¬ SPECIFIED         @Y30LB02*/ 37850000
*    GO TO LINIT;            /* CALL ANSWER TEXT BLOCK       @ZA28964*/ 37910000
*                            /*  AND THEN GO TO FINISH       @ZA28964*/ 37960000
*  ELSE                                                                 38010000
*    GO TO LUN;              /* CALL ANSWER TEXT BLOCK       @ZA28964*/ 38060000
*                            /*  AND THEN GO TO FINISH       @ZA28964*/ 38110000
*/*                                                          @Y30LB02*/ 38160000
*/*********************************************************  @Y30LB02*/ 38210000
*/*        STANDARD FORM                                     @ZA28964*/ 38260000
*/*********************************************************  @Y30LB02*/ 38310000
*  NOTLIST:                                                /*@Y30LB02*/ 38360000
*  IF MF(1)¬='' THEN                   /* IF NOT STD FORM    @Y30LB02*/ 38410000
*    DO;                               /* PRT ERROR MESSAGE  @Y30LB02*/ 38460000
*      ANS MSG('  ICB615I - INVALID MF PARAMETER'||                     38510000
*              ' SPECIFIED, MUST BE L, E, OR NULL')SKIP;   /*@Y30LB02*/ 38560000
*      RETCODE=12;                     /*SET RETURN CODE     @Y30LB02*/ 38610000
*      GO TO FINISH;                   /* AND EXIT           @ZA28964*/ 38660000
*    END;                                                  /*@Y30LB02*/ 38710000
*/*                                                        /*@ZA28964*/ 38760000
*  IF NMEXTS = '' THEN                 /* IS NMEXT SPEC'D?   @Y30LB02*/ 38810000
*    DO;                                                   /*@Y30LB02*/ 38860000
*      ANS MSG('  ICB609I - NMEXTS MUST BE '||                          38910000
*              'SPECIFIED FOR STANDARD FORM MACRO ')SKIP;               38960000
*      RETCODE = 12;                                       /*@ZA28964*/ 39010000
*    END;                                                  /*@Y30LB02*/ 39060000
*  IF VOLID = '' THEN                  /* IS VOLID SPEC'D?   @Y30LB02*/ 39110000
*    DO;                                                   /*@Y30LB02*/ 39160000
*      ANS MSG('  ICB610I - VOLID MUST BE SPECIFIED FOR'||              39210000
*              ' STANDARD FORM MACRO')SKIP;                /*@Y30LB02*/ 39260000
*      RETCODE = 12;                                       /*@Y30LB02*/ 39310000
*    END;                                                  /*@ZA28964*/ 39360000
*  IF EXTS = '' THEN                   /* IS EXTS SPEC'D?    @Y30LB02*/ 39410000
*    DO;                                                   /*@Y30LB02*/ 39460000
*      ANS MSG('  ICB606I - EXTS MUST BE '||                            39510000
*              ' SPECIFIED FOR STANDARD FORM MACRO ')SKIP;              39560000
*      RETCODE=12;           /*SET RETURN CODE               @Y30LB02*/ 39610000
*    END;                                                  /*@Y30LB02*/ 39660000
*  IF RETCODE >= 12 THEN     /*ERROR FOUND                   @ZA28964*/ 39710000
*    GO TO FINISH;           /*BRANCH                        @Y30LB02*/ 39760000
*  IF ARTEST=1 THEN          /*IF THE STD FM HAS             @Y30LB02*/ 39810000
*                            /*BEEN INVOKED ALRDY            @Y30LB02*/ 39860000
*    GO TO STDSEC;           /*SET UP REG1 TO PNT            @Y30LB02*/ 39910000
*                            /*TO REQUEST BLOCK              @Y30LB02*/ 39960000
*                            /*BY CALLING TEXT,              @ZA28964*/ 40010000
*                            /* THEN GOTO FCHECK             @ZA28964*/ 40060000
*  ELSE                                                    /*@ZA28964*/ 40110000
*    GO TO STDINT;           /* CALL ANSWER TEXT BLOCK       @ZA28964*/ 40160000
*                            /*  THEN GO TO FCHECK           @ZA28964*/ 40210000
*/*                                                          @Y30LB02*/ 53000003
*/*********************************************************  @Y30LB02*/ 53050003
*/*         FILL IN STANDARD FORM PARAMETERS                 @Y30LB02*/ 53100000
*/*********************************************************  @Y30LB02*/ 53250003
*  FCHECK:                                                 /*@Y30LB02*/ 53300000
*  IF FLAGS ¬= '' THEN                 /*ARE FLAGS SPEC'D?   @Y30LB02*/ 53350000
*    ANS('ARFLG='||FLAGS||';/*FILL IN FLAGS  @Y30LB02*/')SKIP;          53600000
*/*                                                          @ZA28964*/ 53650000
*  ANS('ARNMEXT='||NMEXTS||';/*FILL IN NMEXT  @Y30LB02*/')SKIP;         53700000
*/*                                                          @ZA28964*/ 53750000
*  ANS('ARVOL='||VOLID||';/*FILL IN VOLID  @Y30LB02*/')SKIP;            53800000
*/*                                                          @ZA28964*/ 53850000
*  IF ECB ¬= '' THEN        /* IF ECB SPECIFIED              @ZA28964*/ 53900000
*    ANS('ARECB=ADDR'||ECB||';/*FILL IN ECB @Z30LB02*/')SKIP;           53950000
*/*                                                          @ZA28964*/ 54000000
*  IF HOSTID ¬= '' THEN                /*CK FOR HOSTID       @Y30LB02*/ 54050000
*    ANS('ARHOST='||HOSTID||';/*FILL IN HOSTID @Y30LB02*/')SKIP;        54100000
*/*                                                          @ZA28964*/ 54150000
*  ANS(' /*THE FOLLOWING CODE MOVES THE'||                              54200000
*      ' EXTENTS INFO INTO THE BLOCK  @Y30LB02*/')SKIP;                 54250000
*  IF ARTEST=0 THEN   /* FIRST INVOCATION OF STD FORM        @ZA28964*/ 54300000
*    DO;                                                   /*@Y30LB02*/ 54350000
*      ANS('DCL ARI FIXED(31) INIT(0);'||                               54400000
*          '/*LOOP CTR INDEX  @Y30LB02*/') SKIP;                        54450000
*      ANS('/*ARSPTR IS PTR USED TO EXTRACT'||                          54500000
*          ' # OF EXTENTS AND EXTENTS INFO   */')SKIP;                  54550000
*      ANS('DCL ARSPTR PTR(31);') SKIP;                                 54600000
*      ANS('DCL ARE CHAR(4) BASED(ARSPTR)'||                            54650000
*          ';  /* EXTENTS   @Y30LB02*/') SKIP;                          54700000
*      ARTEST=1;              /* SET FLAG ON                 @Y30LB02*/ 54750000
*    END;                                                  /*@Y30LB02*/ 54800000
*  ANS('/*INITIALIZE ARSPTR TO PTR SPECD '||                            54850000
*      'FOR EXTS PARAMETER       @Y30LB02*/') SKIP;                     54900000
*  ANS('ARSPTR=ADDR'||EXTS||' ;') SKIP;                    /*@Y30LB02*/ 54950000
*  ANS('/*THIS DO LOOP MOVES THE BEG AND '||                            55000000
*      'END CYLINDERS TO LIST @Y30LB02*/') SKIP;                        55050000
*  ANS('DO ARI=1 TO ARNMEXT;') SKIP;                       /*@Y30LB02*/ 55100000
*  ANS('   AREXT(ARI)=ARE; /*FILL IN '||                                55150000
*      'EXTENTS FIELD  @Y30LB02*/') SKIP;                               55200000
*  ANS('   ARSPTR=ARSPTR+4;/*INCR PTR TO'||                             55250000
*      ' EXTS FIELD  @Y30LB02*/') SKIP;                                 55300000
*  ANS('END;')  SKIP;                                      /*@Y30LB02*/ 55350000
*  GO TO QUIT;                                             /*@ZA28964*/ 55400000
*/*                                                          @Y30LB02*/ 55450000
*/*********************************************************  @Y30LB02*/ 55500000
*/*               EXECUTE FORM                               @Y30LB02*/ 55550000
*/*********************************************************  @Y30LB02*/ 55600000
*/*                                                          @ZA28964*/ 55650000
*  EXFORM:                                                 /*@ZA28964*/ 55700000
*    IF MF(2)='' THEN                  /*ADDRESS  GIVEN?     @Y30LB02*/ 55750000
*      DO;                             /*NO,ERROR MSG PRNTD  @Y30LB02*/ 55800000
*        ANS MSG('  ICB612I - MF(2) MUST'||                             55850000
*                ' CONTAIN REQ BLK NAME IF '||                          55900000
*                'EXEC MACRO FORM REQUESTED') SKIP(5);     /*@Y30LB02*/ 55950000
*        RETCODE=12;                                       /*@Y30LB02*/ 56000000
*        GO TO FINISH;                  /*BRANCH             @Y30LB02*/ 56050000
*      END;                                                /*@Y30LB02*/ 56100000
*    ELSE                                                  /*@ZA28964*/ 56150000
*      GO TO EXEC;           /* CALL ANSWER TEXT BLOCK       @ZA28964*/ 56200000
*                            /* THEN GO TO QUIT              @ZA28964*/ 56250000
*/*                                                          @ZA28964*/ 56300000
*/********************************************************** @ZA28964*/ 56350000
*/*           INVOKE SVC 126                                 @ZA28964*/ 56400000
*/********************************************************** @ZA28964*/ 56450000
*/*                                                          @ZA28964*/ 56500000
*QUIT:  ANS('SVC (126); /*ISSUE  SVC   @Y30LB02*/') SKIP;               56550000
*       ANS('RFY(ARR1)UNRSTD;/*UNRESTRICT REG 1  @Y30LB02*/')SKIP;      56600000
*       GO TO FINISH;                                      /*@ZA28964*/ 56650000
*/*                                                          @Y30LB02*/ 56700000
*/********************************************************** @Y30LB02*/ 56750000
*/*      MACRO ANSWER TEXT - EACH BLOCK IS INVOKED AT        @ZA28964*/ 56800000
*/*      ONLY ONE POINT IN THE MACRO                         @ZA28964*/ 56850000
*/********************************************************** @Y30LB02*/ 56900000
*/*                                                          @Y30LB02*/ 56950000
*  LINIT:                                                               58910000
*   ANS('/*******************************************'||                58912000
*       '*************  @Y30LB02*/')SKIP;                               58920000
*   ANS('/*MACMEAN  MSSC ACQUIRE/RELINQUISH MACRO    '||                58930000
*       '               @Y30LB02*/')SKIP;                               58940000
*   ANS('/*         VERSION - VS/2 REL 3   77/12/15  '||                58942000
*       'LEVEL 02       @ZA28964*/')SKIP;                               58943000
*   ANS('/*THIS IS THE INITIALIZED LIST FORM         '||                58946000
*       '               @Y30LB02*/')SKIP;                               58948000
*   ANS('/*******************************************'||                58948400
*       '*************  @Y30LB02*/')SKIP;                               58948800
*   ANS('DCL 1   '||MF(2)||' STATIC LOCAL,')SKIP;          /*@Y30LB02*/ 58949200
*   ANS('     2 ARLL FIXED(31) INIT(96),/*LENGTH @Y30LB02*/')SKIP;      58954200
*   IF TYPE(1) = 'ACQ' THEN                                /*@ZA28964*/ 58959200
*     ANS('    2 AROP FIXED(8) INIT(2),/*OPCODE=02 @Y30LB02*/')SKIP;    58964200
*   ELSE                               /*RELINQUISH REQUEST  @Y30LB02*/ 58969200
*     ANS('    2 AROP FIXED(8) INIT(4),/*OPCODE=04 @Y30LB02*/')SKIP;    58974200
*   ANS('      2  * CHAR(1) INIT('||QUOTE('00')||                       58979200
*       'X),  /*RESERVED AREA  @Y30LB02*/') SKIP;                       58984200
*   ANS('      2  ARFLG BIT(8) INIT('||QUOTE('00000000')||              58989200
*       'B), /*FLAGS  @Y30LB02*/') SKIP;                                58994200
*   ANS('       3 ARBDUBD BIT(1),/* BIND/UNBIND BIT @Y30LB02*/')SKIP;   58999200
*   ANS('       3 ARDRES BIT(1),/* DELAYED RESPONSE BIT   @Y30LB02*/')  59004200
*        SKIP;                                                          59009200
*   ANS('        3 ARINH BIT(1), /*INHIBIT (DE)STAGE BIT   @Y30LB02*/') 59014200
*        SKIP;                                                          59019200
*   ANS('        3 ARSEC BIT(1), /*NEWLY ALLOCATED SECONDARY EXTENT'||  59024200
*       ' BIT @G24LB04*/')SKIP;                                         59029200
*   ANS('        3 * BIT(4), /*THESE BITS ALWAYS ZEROES   @G24LB04*/')  59034200
*        SKIP;                                                          59039200
*   ANS('      2  ARNMEXT FIXED(8) INIT(0),/* #EXTS  @Y30LB02*/')       59044200
*        SKIP;                                                          59049200
*   ANS('      2  ARVOL CHAR(6) INIT('||                                59054200
*        QUOTE('000000000000')||'X), /*VOLID  @Y30LB02*/') SKIP;        59059200
*   ANS('      2  ARASID CHAR(2) INIT('||QUOTE('0000')||                59064200
*        'X),  /*ASID FIELD  @Y30LB02*/') SKIP;                         59069200
*   ANS('      2  ARECB PTR(31) INIT(0), /*ADDR OF ECB  @ZA28964*/')    59074200
*        SKIP;                                                          59079200
*   ANS('      2  ARHOST CHAR(5) INIT('||QUOTE('0000000000')            59084200
*       || 'X),  /*HOSTID  @Y30LB02*/') SKIP;                           59089200
*   ANS('      2  * CHAR(1) INIT('||QUOTE('00')                         59094200
*       || 'X),  /*ZEROES  @Y30LB02*/') SKIP;                           59099200
*   ANS('      2  ARCOMPC CHAR(2) INIT('||QUOTE('0000')                 59104200
*       || 'X),  /*ZERO COMP CODE FLD  @Y30LB02*/') SKIP;               59109200
*   ANS('      2  AREXT (16), /*EXTENTS  @Y30LB02*/') SKIP;             59114200
*   ANS('       3 * CHAR(4) INIT('||                                    59119200
*       QUOTE('00000000')||'X),') SKIP;                                 59124200
*   ANS('      2  ARNEDB PTR(31) INIT(0);  /*NEDB    @ZA28964*/')       59129200
*        SKIP;                                                          59134200
*   ANS('DCL ARLEN FIXED(31) DEF(ARLL), /*BAL LABEL  @ZA28964*/')SKIP;  59139200
*   ANS('    ARFLAG BIT(8) DEF(ARFLG),/*BAL LABEL @ZA28964*/')SKIP;     59144200
*   ANS('    ARNMEXTS FIXED(8) DEF(ARNMEXT);  ' ||                      59149200
*       '/*BAL LABEL @ZA28964*/')SKIP;                                  59154200
*   GO TO FINISH;        /* RETURN TO CALLER                 @ZA28964*/ 59159200
*/*                                                          @ZA28964*/ 59164200
*  LUN:                                                                 59198600
*   ANS('/*******************************************'||                59200600
*       '*************  @Y30LB02*/')SKIP;                               59208600
*   ANS('/*MACMEAN  MSSC ACQUIRE/RELINQUISH MACRO    '||                59218600
*       '               @Y30LB02*/')SKIP;                               59228600
*   ANS('/*         VERSION - VS/2 REL 3    77/12/15 '||                59230600
*       'LEVEL 02       @ZA28964*/')SKIP;                               59231600
*   ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||                59234600
*       '               @Y30LB02*/')SKIP;                               59236600
*   ANS('/*******************************************'||                59237000
*       '*************  @Y30LB02*/')SKIP;                               59237400
*   ANS('DCL 1   '||MF(2)||'  '||MF(3)||',')SKIP;          /*@Y30LB02*/ 59237800
*   ANS('      2  ARLL FIXED(31),  /*LENGTH=96 BYTES   @Y30LB02*/')     59242800
*        SKIP;                                                          59247800
*   IF TYPE(1)='ACQ' THEN                                               59252800
*     ANS('      2  AROP FIXED(8),/*OPCODE=02  @Y30LB02*/')SKIP;        59257800
*   ELSE                               /*REL OPCODE          @Y30LB02*/ 59262800
*     ANS('      2  AROP FIXED(8),/*OPCODE = 04  @Y30LB02*/')SKIP;      59267800
*   ANS('      2  * CHAR(1),  /*RESERVED AREA  @Y30LB02*/') SKIP;       59272800
*   ANS('      2  ARFLG BIT(8), /*FLAGS  @Y30LB02*/') SKIP;             59277800
*   ANS('        3 ARBDUBD BIT(1),   /* BIND/UNBIND BIT    @Y30LB02*/') 59282800
*        SKIP;                                                          59287800
*   ANS('        3 ARDRES BIT(1),/* DELAYED RESPONSE BIT   @Y30LB02*/') 59292800
*        SKIP;                                                          59297800
*   ANS('        3 ARINH BIT(1), /*INHIBIT (DE)STAGE BIT   @Y30LB02*/') 59302800
*        SKIP;                                                          59307800
*   ANS('        3 ARSEC BIT(1), /*NEWLY ALLOCATED SECONDARY EXTENT'||  59312800
*        ' BIT @G24LB04*/')SKIP;                                        59317800
*   ANS('        3 * BIT(4), /*THESE BITS ALWAYS ZEROES   @G24LB04*/')  59322800
*        SKIP;                                                          59327800
*   ANS('      2  ARNMEXT FIXED(8),/* #EXTS  @Y30LB02*/') SKIP;         59332800
*   ANS('      2  ARVOL CHAR(6), /*VOLID  @Y30LB02*/') SKIP;            59337800
*   ANS('      2  ARASID CHAR(2),/*ASID FIELD  @Y30LB02*/') SKIP;       59342800
*   ANS('      2  ARECB PTR(31), /*ADDR OF ECB  @ZA28964*/')            59347800
*        SKIP;                                                          59352800
*   ANS('      2  ARHOST CHAR(5),  /*HOSTID  @Y30LB02*/') SKIP;         59357800
*   ANS('      2  * CHAR(1),  /*ZEROES  @Y30LB02*/') SKIP;              59362800
*   ANS('      2  ARCOMPC CHAR(2),  /*COMP CODE  @Y30LB02*/')SKIP;      59367800
*   ANS('      2  AREXT (16), /*EXTENTS  @Y30LB02*/')                   59372800
*        SKIP;                                                          59377800
*   ANS('        3 * CHAR(4), /*ELEMENT OF EXTS ARRAY   @Y30LB02*/')    59382800
*        SKIP;                                                          59387800
*   ANS('      2  ARNEDB PTR(31);  /*ADDR OF NEDB   @ZA28964*/')        59392800
*        SKIP;                                                          59397800
*   ANS('DCL ARLEN FIXED(31) DEF(ARLL), /*BAL LABEL @ZA28964*/')SKIP;   59402800
*   ANS('    ARFLAG BIT(8) DEF(ARFLG),/*BAL LABEL @ZA28964*/')SKIP;     59407800
*   ANS('    ARNMEXTS FIXED(8) DEF(ARNMEXT);  ' ||                      59412800
*       '/*BAL LABEL @ZA28964*/')SKIP;                                  59417800
*   GO TO FINISH;                      /*BRANCH TO END       @Y30LB02*/ 59422800
*/*                                                          @ZA28964*/ 59427800
*  STDSEC:                                                              59455600
*   ANS('/*******************************************'||                59457600
*       '************  @Y30LB02*/')SKIP;                                59462800
*   ANS('/*MACMEAN  MSSC ACQUIRE/RELINQUISH MACRO    '||                59470000
*       '              @Y30LB02*/')SKIP;                                59477200
*   ANS('/*         VERSION - VS/2 REL 3    77/12/15 '||                59487200
*       'LEVEL 02      @ZA28964*/')SKIP;                                59493200
*   ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '||                59507200
*       '              @Y30LB02*/')SKIP;                                59517200
*   ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||                59519200
*       '              @Y30LB02*/')SKIP;                                59521200
*   ANS('/*******************************************'||                59523200
*       '************  @Y30LB02*/')SKIP;                                59525200
*   ANS('RFY(ARR1)RSTD;/*RESTRICT R1  @Y30LB02*/')SKIP;                 59525600
*   ANS('ARR1=ADDR(ARLL);'||                                            59526000
*       '/*ARR1 SET TO ADDRESS OF LIST  @Y30LB02*/') SKIP;              59526400
*   IF TYPE(1)='ACQ' THEN              /* AN ACQ REQUEST?    @Y30LB02*/ 59527400
*     ANS('AROP='||QUOTE(AOPCODE)||'X;/*ACQ OPCODE  @Y30LB02*/')SKIP;   59528400
*   ELSE                              /*RELINQUISH CODE      @Y30LB02*/ 59529400
*     ANS('AROP='||QUOTE(ROPCODE)||'X;/*REL OPCODE  @Y30LB02*/')SKIP;   59530400
*   GO TO FCHECK;                    /*BRCH TO STANDF CODE   @Y30LB02*/ 59531400
*/*                                                          @ZA28964*/ 59532400
*  STDINT:                                                              59538200
*   ANS('/*******************************************'||                59540200
*       '************  @Y30LB02*/')SKIP;                                59541000
*   ANS('/*MACMEAN  MSSC ACQUIRE/RELINQUISH MACRO    '||                59543800
*       '              @Y30LB02*/')SKIP;                                59553800
*   ANS('/*         VERSION - VS/2 REL 3    77/12/15 '||                59555800
*       'LEVEL 02      @ZA28964*/')SKIP;                                59556800
*   ANS('/*THIS IS THE STANDARD FORM - ACQ/REL MACRO '||                59559800
*       '              @Y30LB02*/')SKIP;                                59560200
*   ANS('/*******************************************'||                59560300
*       '************  @Y30LB02*/')SKIP;                                59560400
*   ANS('DCL  1  ARLIST,/*ACQUIRE/RELINQUISH @Y30LB02*/') SKIP;         59566000
*   ANS('      2  ARLL FIXED(31) INIT(96), /* LENGTH     @Y30LB02*/')   59571000
*        SKIP;                                                          59576000
*   IF TYPE(1)='ACQ' THEN              /*ACQUIRE REQUEST?    @Y30LB02*/ 59581000
*     ANS('      2  AROP FIXED(8) INIT(2),/*OPCODE  @Y30LB02*/')SKIP;   59586000
*   ELSE                                                   /*@Y30LB02*/ 59591000
*     ANS('      2  AROP FIXED(8) INIT(4),/*OPCODE  @Y30LB02*/')SKIP;   59596000
*   ANS('      2  * CHAR(1) INIT('||QUOTE('00')||                       59601000
*        'X), /*RESERVED AREA  @Y30LB02*/') SKIP;                       59606000
*   ANS('      2  ARFLG BIT(8) INIT('||QUOTE('00000000')||              59611000
*        'B), /*FLAGS  @Y30LB02*/') SKIP;                               59616000
*   ANS('        3 ARBDUBD BIT(1),   /* BIND/UNBIND BIT  @Y30LB02*/')   59621000
*        SKIP;                                                          59626000
*   ANS('        3 ARDRES BIT(1),/* DELAYED RESPONSE BIT  @Y30LB02*/')  59631000
*        SKIP;                                                          59636000
*   ANS('        3 ARINH BIT(1), /*INHIBIT (DE)STAGE BIT  @Y30LB02*/')  59641000
*        SKIP;                                                          59646000
*   ANS('        3 ARSEC BIT(1), /*NEWLY ALLOCATED SECONDARY EXTENT'||  59651000
*        'BIT @G24LB04*/')SKIP;                                         59656000
*   ANS('        3 * BIT(4), /*THESE BITS ALWAYS ZEROES   @G24LB04*/')  59661000
*        SKIP;                                                          59666000
*   ANS('      2  ARNMEXT FIXED(8) INIT(0), /* #EXTS  @Y30LB02*/')      59671000
*        SKIP;                                                          59676000
*   ANS('      2  ARVOL CHAR(6) INIT('||                                59681000
*        QUOTE('000000000000')||'X), /*VOLID  @Y30LB02*/') SKIP;        59686000
*   ANS('      2  ARASID CHAR(2) INIT('||QUOTE('0000')||                59691000
*        'X), /*ASID AREA  @Y30LB02*/') SKIP;                           59696000
*   ANS('      2  ARECB PTR(31) INIT(0), /*ADDR OF ECB  @ZA28964*/')    59701000
*        SKIP;                                                          59706000
*   ANS('      2  ARHOST CHAR(5) INIT('||QUOTE('0000000000')            59711000
*       || 'X),  /*HOSTID  @Y30LB02*/') SKIP;                           59716000
*   ANS('      2  * CHAR(1) INIT('||QUOTE('00')                         59721000
*       || 'X),  /*ZEROES  @Y30LB02*/') SKIP;                           59726000
*   ANS('      2  ARCOMPC CHAR(2) INIT('||QUOTE('0000')                 59731000
*       || 'X),/*ZERO COMP CODE FLD  @Y30LB02*/') SKIP;                 59736000
*   ANS('      2  AREXT(16) , /*EXTENTS  @Y30LB02*/') SKIP;             59741000
*   ANS('       3 * CHAR(4) INIT('||                                    59746000
*      QUOTE('00000000')||'X),') SKIP;                                  59751000
*   ANS('      2  ARNEDB PTR(31) INIT(0);/*ADDR OF NEDB  @ZA28964*/')   59756000
*        SKIP;                                                          59761000
*   ANS('DCL ARLEN FIXED(31) DEF(ARLL), /*BAL LABEL @ZA28964*/')SKIP;   59766000
*   ANS('    ARFLAG BIT(8) DEF(ARFLG),/*BAL LABEL @ZA28964*/')SKIP;     59771000
*   ANS('    ARNMEXTS FIXED(8) DEF(ARNMEXT);  ' ||                      59776000
*       '/*BAL LABEL @ZA28964*/')SKIP;                                  59781000
*   ANS('RFY(ARR1)RSTD;/*RESTRICT R1  @Y30LB02*/')SKIP;                 59786000
*   ANS('ARR1=ADDR(ARLL);/*ARR1 SET TO ADDRESS OF LIST  @Y30LB02*/')    59791000
*       SKIP;                                                           59796000
*   GO TO FCHECK;                                          /*@ZA28964*/ 59801000
*/*                                                          @ZA28964*/ 59806000
*  EXEC:                                                                59859400
*   ANS('/*******************************************'||                59859800
*       '************  @Y30LB02*/')SKIP;                                59861400
*   ANS('/*MACMEAN  MSSC ACQUIRE/RELINQUISH MACRO    '||                59861500
*       '              @Y30LB02*/')SKIP;                                59911500
*   ANS('/*         VERSION - VS/2 REL 3    77/12/15 '||                59921500
*       'LEVEL 02      @ZA28964*/')SKIP;                                59927500
*   ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '||                59933500
*       '              @Y30LB02*/')SKIP;                                59939500
*   ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '||                59953500
*       '              @Y30LB02*/')SKIP;                                59955500
*   ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'||                59957500
*       '              @Y30LB02*/')SKIP;                                59959500
*   ANS('/*DECLARES.  THE EXECUTE FORM WILL ONLY     '||                59959900
*       '              @Y30LB02*/')SKIP;                                59960300
*   ANS('/*ISSUE THE SVC.                            '||                59960700
*       '              @Y30LB02*/')SKIP;                                59961100
*   ANS('/*******************************************'||                59961200
*       '************  @Y30LB02*/')SKIP;                                59961300
*   ANS('RFY(ARR1)RSTD;/*RESTRICT R1  @Y30LB02*/')SKIP;                 59961400
*   ANS('ARR1=ADDR('||MF(2)||                                           59978100
*       '); /*SET ARR1 TO ADDR OF LIST  @Y30LB02*/')  SKIP;             59988100
*   GO TO QUIT;                                            /*@ZA28964*/ 60038100
*/*                                                          @ZA28964*/ 60088100
*FINISH:RETURN CODE(RETCODE);/*RETURN CODE                   @Y30LB02*/ 60138100
*        %END;                                             /*@Y30LB02*/ 60188100
./  ADD  SSI=42090036,NAME=ICBASDAS
* %/*  START OF SPECIFICATIONS****                             @Y30LB02 00050003
.*                                                             @Y30LB02 00100003
.*01   MODULE-NAME = ICBASDAS                                  @Y30LB02 00150003
.*                                                             @Y30LB02 00200003
.*01   DESCRIPTIVE-NAME = ASSOCIATE-DISASSOCIATE MACRO         @Y30LB02 00250003
.*                                                             @Y30LB02 00300003
.*01   COPYRIGHT = NONE                                        @Y30LB02 00350003
.*                                                             @Y30LB02 00400003
.*01   STATUS = OS/VS1 RELEASE 4, OS/VS2 RELEASE 3             @Y30LB02 00450003
.*                                                             @Y30LB02 00500003
.*01   FUNCTION=THIS MACRO BUILDS THE REQUEST BLOCK            @Y30LB02 00550003
.*     NECESSARY TO ASSOCIATE/DISASSOCIATE CPU'S IN AN         @Y30LB02 00600003
.*     MP ENVIRONMENT                                          @Y30LB02 00650003
.*                                                             @Y30LB02 00700003
.*01   NOTES = AS FOLLOWS:                                     @Y30LB02 00750003
.*                                                             @Y30LB02 00800003
.*02     CODE = MACRO IS BILINGUALLY CODED                     @Y30LB02 00850003
.*                                                             @Y30LB02 00900003
.*02     RESTRICTIONS = THE FOLLOWING PREFIXES SHOULD BE       @Y30LB02 00950003
.*                      AVOIDED IN THE USER'S INVOCATION:      @Y30LB02 01000003
.*                      ICB AND AS/DAS                         @Y30LB02 01050003
.*                                                             @Y30LB02 01100003
.*02     REGISTER-CONVENTIONS = FOLLOW NORMAL USE OF           @Y30LB02 01150003
.*                              REGISTERS BY MACROS:           @Y30LB02 01200003
.*                              R0,R1,R14, AND R15.            @Y30LB02 01250003
.*                                                             @Y30LB02 01300003
.*01   MODULE-TYPE = MACRO                                     @Y30LB02 01350003
.*                                                             @Y30LB02 01400003
.*02     PROCESSOR = PLS2 AND ASSEMBLER                        @Y30LB02 01450003
.*                                                             @Y30LB02 01550003
.*02     ATTRIBUTES = REUSABLE                                 @Y30LB02 01600003
.*                                                             @Y30LB02 01650003
.*02     ENTRY-POINT = ICBASDAS                                @Y30LB02 01700003
.*                                                             @Y30LB02 01750003
.*                                                             @Y30LB02 01800003
.*02     LINKAGE = SVC 126                                     @Y30LB02 01850003
.*                                                             @Y30LB02 01900003
.*01  INPUT                                                    @Y30LB02 01950003
.*                                                             @Y30LB02 02000003
.*   THE ASSOCIATE-DISASSOCIATE MACRO IS ISSUED TO             @Y30LB02 02050003
.*   CHANGE THE RELATIONSHIP BETWEEN CPU'S(HOSTS) OF           @Y30LB02 02100003
.*   TIGHTLY COUPLED MP SYSTEMS  AND  NETWORKS.                @Y30LB02 02150003
.*                                                             @Y30LB02 02200003
.*   THE ASSOCIATE-DISASSOCIATE MACRO WILL                     @Y30LB02 02250003
.*   PERFORM THE FOLLOWING:                                    @Y30LB02 02300003
.*                                                             @Y30LB02 02350003
.*        (1)  ASSOCIATE CPU AND ITS PREDEFINED ASSOCIATE      @Y30LB02 02400003
.*             CPU AS TIGHTLY COUPLED MP  CPU'S.               @Y30LB02 02450003
.*                                                             @Y30LB02 02500003
.*        (2)  DISASSOCIATE CPU1 AND ITS PREDEFINED ASSOCIATE  @Y30LB02 02550003
.*             CPU.                                            @Y30LB02 02600003
.*                                                             @Y30LB02 02650003
.*                                                             @Y30LB02 02700003
.*        (3)  DEINITIALIZE THE INTERFACE FOR THE              @Y30LB02 02750003
.*             ASSOCIATED CPU                                  @Y30LB02 02800003
.*                                                             @Y30LB02 02850003
.*        (4)  DEMOUNT ALL VOLUMES FOR BOTH CPUS               @Y30LB02 02900003
.*                                                             @Y30LB02 02950003
.*        MACRO SYNTAX:                                        @Y30LB02 03000003
.*                                                             @Y30LB02 03050003
.*   LIST FORM                                                 @Y30LB02 03100003
.*                                                             @Y30LB02 03150003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03200003
.*                                                             @Y30LB02 03250003
.*ICBASDAS MF=L - (BAL)          MF=(L,MAP) - BAL              @Y30LB02 03300003
.*         MF(L,NAME/(R))-PLS    MF(L,NAME/(R),ATTR)-PLS       @Y30LB02 03350003
.*                                                             @Y30LB02 03400003
.*   STANDARD FORM                                             @Y30LB02 03450003
.*                                                             @Y30LB02 03500003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03550003
.*                                                             @Y30LB02 03600003
.*ICBASDAS HOSTID=ADDR/(R)       NONE                          @Y30LB02 03650003
.*         FLAGS=ADDR/(R)                                      @Y30LB02 03700003
.*                                                             @Y30LB02 03750003
.*                                                             @Y30LB02 03800003
.* EXECUTE FORM                                                @Y30LB02 03850003
.*                                                             @Y30LB02 03900003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03950003
.*                                                             @Y30LB02 04000003
.*ICBASDAS MF(E,NAME/(R))       MF(E,NAME/(R),COMPLETE)-PLS    @Y30LB02 04050003
.*                              FLAGS=ADDR/(R)                 @Y30LB02 04100003
.*                              HOSTID=ADDR/(R)                @Y30LB02 04150003
.*                                                             @Y30LB02 04200003
.*   KEYWORD PARAMETERS:                                       @Y30LB02 04250003
.*                                                             @Y30LB02 04300003
.*   MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE         @Y30LB02 04350003
.*          MACRO FORMAT AND MAY GIVE THE ADDRESS OR           @Y30LB02 04400003
.*          ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK      @Y30LB02 04450003
.*          IS STORED.                                         @Y30LB02 04500003
.*                                                             @Y30LB02 04550003
.*          L - LIST FORM: THE EXPANSION OF THE L-FORM         @Y30LB02 04600003
.*              MACRO WILL RESULT IN A REQUEST BLOCK WITH      @Y30LB02 04650003
.*              THE ONLY NON-ZERO FIELDS BEING THE OPCODE      @Y30LB02 04700003
.*              AND LENGTH FIELDS.                             @Y30LB02 04750003
.*                                                             @Y30LB02 04800003
.*          (1) 'MAP' - IF MAP IS SPECIFIED WITH THE           @Y30LB02 04850003
.*              ASSEMBLER MACRO CALL A DSECT EQUIVALENT TO     @Y30LB02 04900003
.*              A MAPPING MACRO IS PRODUCED.                   @Y30LB02 04950003
.*                                                             @Y30LB02 05000003
.*          (2) NAME - THE MACRO INVOKER MUST SPECIFY A        @Y30LB02 05050003
.*              NAME FOR HIS STRUCTURE WHEN INVOKING THE       @Y30LB02 05100003
.*              PLS LIST FORM.                                 @Y30LB02 05150003
.*                                                             @Y30LB02 05200003
.*          (3) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS       @Y30LB02 05250003
.*              ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION    @Y30LB02 05300003
.*              IN AN UNINITIALIZED REQUEST BLOCK.  ATTRI-     @Y30LB02 05350003
.*              BUTE EXAMPLE:                                  @Y30LB02 05400003
.*                                                             @Y30LB02 05450003
.*              CHAR, FIXED, STATIC LOCAL, NONLOCAL,           @Y30LB02 05500003
.*              BASED(*), ETC.                                 @Y30LB02 05550003
.*                                                             @Y30LB02 05600003
.*       NULL - STANDARD FORM: THE EXPANSION OF THIS FORM      @Y30LB02 05650003
.*              CONSISTS OF A REQUEST BLOCK, A LINKAGE         @Y30LB02 05700003
.*              INSTRUCTION, AND, POSSIBLY, PARAMETER          @Y30LB02 05750003
.*              BINDING INSTRUCTION.                           @Y30LB02 05800003
.*                                                             @Y30LB02 05850003
.*          E - EXECUTABLE FORM: THE EXPANSION OF THIS FORM    @Y30LB02 05900003
.*              CONSISTS OF A LINKAGE INSTRUCTION AND          @Y30LB02 05950003
.*              POSSIBLY, PARAMETER BINDING INSTRUCTIONS.      @Y30LB02 06000003
.*                                                             @Y30LB02 06050003
.*              SUB-PARAMETERS                                 @Y30LB02 06100003
.*                                                             @Y30LB02 06150003
.*              (1)  AN E MUST BE SPECIFIED IN THE FIRST       @Y30LB02 06200003
.*                   SUB-PARAMETER POSITION.  THIS INDICATES   @Y30LB02 06250003
.*                   THAT THE MACRO IS IN EXECUTABLE FORM.     @Y30LB02 06300003
.*                                                             @Y30LB02 06350003
.*              (2)  A NAME OR A REGISTER MUST BE SPECIFIED    @Y30LB02 06400003
.*                   IN THE SECOND SUB-PARAMETER.              @Y30LB02 06450003
.*                                                             @Y30LB02 06500003
.*              (3)  'COMPLETE' - COMPLETE WILL CAUSE THE      @Y30LB02 06550003
.*                   MACRO TO ZERO OUT THE REQUEST BLOCK.      @Y30LB02 06600003
.*                   AFTER ZEROING THE REQUEST BLOCK THE       @Y30LB02 06650003
.*                   FUNCTION OPCODE AND LENGTH ARE PLACED     @Y30LB02 06700003
.*                   IN THE REQUEST BLOCK.                     @Y30LB02 06750003
.*                                                             @Y30LB02 06800003
.*   FLAGS  - THE 2 BYTE FIELD WHICH INDICATES THE FUNCTION    @Y30LB02 06850003
.*            TO BE PERFORMED.  THE ATTRIBUTES FOLLOW:         @Y30LB02 06900003
.*                                                             @Y30LB02 06950003
.*       ASSOCIATE CPU                                         @Y30LB02 07000003
.*                                                             @Y30LB02 07050003
.*         IF THIS ATTRIBUTE IS SPECIFIED, CPU (SPECIFIED      @Y30LB02 07100003
.*         BY HOSTID) AND ITS PREDEFINED ASSOCIATE CPU WILL    @Y30LB02 07150003
.*         BE ASSOCIATED AS TIGHTLY COUPLED MP HOSTS.          @Y30LB02 07200003
.*                                                             @Y30LB02 07250003
.*       DISASSOCIATE CPU                                      @Y30LB02 07300003
.*                                                             @Y30LB02 07350003
.*         IF THIS ATTRIBUTE IS SPECIFIED, CPU (SPECIFIED      @Y30LB02 07400003
.*         BY HOSTID) AND ITS PREDEFINED ASSOCIATED CPU        @Y30LB02 07450003
.*         WILL NO LONGER BE ASSOCIATED AS TIGHTLY COUPLED     @Y30LB02 07500003
.*         MP HOSTS.                                           @Y30LB02 07550003
.*                                                             @Y30LB02 07600003
.*        DEINITIALIZE INTERFACE                               @Y30LB02 07650003
.*                                                             @Y30LB02 07700003
.*         THIS BIT HAS THE SAME FUNCTION AS ATTRIBUTE         @Y30LB02 07750003
.*         BIT 1 PLUS DEINITIALIZE THE INTERFACE FOR THE       @Y30LB02 07800003
.*         OTHER CPU SPECIFIED IN THE CPU ASSOCIATION          @Y30LB02 07850003
.*         TABLE.  IF THE CPU'S ARE ALREADY DISASSOCIATED      @Y30LB02 07900003
.*         THE ORDER IS UNIT CHECKED.                          @Y30LB02 07950003
.*                                                             @Y30LB02 08000003
.*        DEMOUNT                                              @Y30LB02 08050003
.*                                                             @Y30LB02 08100003
.*         THIS ATTRIBUTE HAS THE SAME FUNCTION AS             @Y30LB02 08150003
.*         ATTRIBUTE BIT 0 EXCEPT ALL VOLUMES FOR BOTH         @Y30LB02 08200003
.*         CPU'S ARE DEMOUNTED.  THE FUNCTION IS DONE          @Y30LB02 08250003
.*         EVEN THOUGH THE CPU'S ARE ALREADY ASSOCIATED.       @Y30LB02 08300003
.*                                                             @Y30LB02 08350003
.*                                                             @Y30LB02 08400003
.*       THE FORMAT OF THE FLAGS FIELD IS                      @Y30LB02 08450003
.*                                                             @Y30LB02 08500003
.*      ____________________________________________________   @Y30LB02 08550003
.*      | X | X | 0 | 0 | 0 | X | X |BITS 7-15 MUST BE ZERO|   @Y30LB02 08600003
.*      -----------------------------------------------------  @Y30LB02 08650003
.*      BIT 0------------'1'B          ASSOCIATE CPUS          @Y30LB02 08700003
.*                       '0'B          DON'T ASSOCIATE         @Y30LB02 08750003
.*                                                             @Y30LB02 08800003
.*      BIT 1------------'1'B          DISASSOCIATE CPUS       @Y30LB02 08850003
.*                       '0'B          DON'T DISASSOCIATE      @Y30LB02 08900003
.*                                                             @Y30LB02 08950003
.*      BITS 2-4 --------              |RESERVED,MUST BE ZERO| @Y30LB02 09000003
.*                                                             @Y30LB02 09050003
.*      BIT 5------------'1'B          DEINITIALIZE INTERFACE  @Y30LB02 09100003
.*                       '0'B          DON'T DENITIALIZE       @Y30LB02 09150003
.*                                                             @Y30LB02 09200003
.*      BIT 6------------'1'B          DEMOUNT                 @Y30LB02 09250003
.*                       '0'B          DON'T DEMOUNT           @Y30LB02 09300003
.*                                                             @Y30LB02 09350003
.*      BITS 7-15-------               |UNUSED,MUST BE ZERO|   @Y30LB02 09400003
.*                                                             @Y30LB02 09450003
.*      HOSTID - HOSTID IDENTIFIER:  THE 5 BYTE AREA WHICH     @Y30LB02 09500003
.*               CONTAINS THE MANUFACTURER'S CPU IDENTI-       @Y30LB02 09550003
.*               FICATION OF CPU #1 OR CPU #2 OF A MP          @Y30LB02 09600003
.*               OR NETWORK ENVIRONMENT.                       @Y30LB02 09650003
.*                                                             @Y30LB02 09700003
.*01  EXIT-NORMAL = VALID INVOCATION                           @Y30LB02 09750003
.*                                                             @Y30LB02 09800003
.*                                                             @Y30LB02 09850003
.*02     CONDITION = RETURN CODE = 0                           @Y30LB02 09900003
.*                                                             @Y30LB02 09950003
.*02     OUTPUT = IN-LINE PLS/BAL STATEMENTS THAT PERFORM      @Y30LB02 10000003
.*       THE REQUESTED FUNCTION                                @Y30LB02 10050003
.*                                                             @Y30LB02 10100003
.*01  EXIT-ERROR = INVALID INVOCATION                          @Y30LB02 10150003
.*                                                             @Y30LB02 10200003
.*02     CONDITION = RETURN CODE = 12                          @Y30LB02 10250003
.*                                                             @Y30LB02 10300003
.*02     OUTPUT = ERROR MESSAGE AS A COMMENT AT POINT OF       @Y30LB02 10350003
.*                INVOCATION                                   @Y30LB02 10400003
.*                                                             @Y30LB02 10450003
.*01  EXTERNAL REFERENCES = NONE                               @Y30LB02 10500003
.*                                                             @Y30LB02 10550003
.*                                                             @Y30LB02 10600003
.*01  TABLES = NONE                                            @Y30LB02 10650003
.*                                                             @Y30LB02 10700003
.*01  MESSAGES = AS FOLLOWS:                                   @Y30LB02 10750003
.*     ICB602I:  A NAME FOR THE REQUEST BLOCK MUST BE          @Y30LB02 10800003
.*               SPECIFIED IN MF(2)                            @Y30LB02 10850003
.*     ICB604I:  WARNING ONLY THE MF  PARAMETER  IS            @Y30LB02 10900003
.*               VALID FOR LIST FORM                           @Y30LB02 10950003
.*     ICB607I:  FLAGS MUST BE SPECIFIED FOR STANDARD          @Y30LB02 11000003
.*               FORM MACRO                                    @Y30LB02 11050003
.*     ICB608I:  HOSTID MUST BE SPECIFIED FOR STANDARD         @Y30LB02 11100003
.*               FORM MACRO                                    @Y30LB02 11150003
.*     ICB612I:  MF(2) MUST CONTAIN REQ BLK NAME IF            @Y30LB02 11200003
.*               EXEC MACRO FORM REQUESTED                     @Y30LB02 11250003
.*     ICB615I:  INVALID MF PARAMETER SPECIFIED, MUST BE       @Y30LB02 11300003
.*                L,E, OR NULL                                 @Y30LB02 11350003
.*                                                             @Y30LB02 11400003
.*01  CONTROL-BLOCKS = NONE                                    @Y30LB02 11450003
.*                                                             @Y30LB02 11500003
.*01  INNER MACROS = NONE                                      @Y30LB02 11550003
.*                                                             @Y30LB02 11600003
.*01  SYSTEM MACRO = IHBINNRA                                  @Y30LB02 11650003
.*                                                             @Y30LB02 11700003
.*01  CHANGE-ACTIVITY = S/D X04AC02 & Y30LB02                  @Y30LB02 11750003
.*                                                             @Y30LB02 11800003
.**** END OF SPECIFICATIONS ***                                @Y30LB02 11850003
         MACRO                                                          11900003
&SYMBOL  ICBASDAS &MF=,&FLAGS=,&HOSTID=                                 11950003
         LCLB &ERSW               ERROR SWITCH                 @Y30LB02 12000003
         LCLC &ASDAS              ASSOC MACRO INSTR INDX       @Y30LB02 12050003
&ASDAS   SETC 'ASD'.'&SYSNDX'     ASSIGN CHARACTER VALUE       @Y30LB02 12100003
.*                                                             @Y30LB02 12150003
.*       DETERMINATION OF DESIRED MACRO FORM                   @Y30LB02 12200003
.*                                                             @Y30LB02 12250003
         AIF  ('&MF(1)' NE 'L').EFORM       LIST FORM?         @Y30LB02 12300003
         AIF  ('&FLAGS' EQ '' AND '&HOSTID' EQ '').LISTOK      @AS17746 12350003
         MNOTE 4,'  ICB604I - WARNING-ONLY THE MF  '           @Y30LB02 12400003
         MNOTE 4,'  PARAMETER IS VALID FOR LIST FORM '         @Y30LB02 12450003
.*                                                             @Y30LB02 12500003
.LISTOK  ANOP                                                  @Y30LB02 12550003
*  MACMEAN  ASSOCIATE MACRO--INITIALIZED LIST FORM             @Y30LB02 12600003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 12650003
         AIF  ('&MF(2)' EQ 'MAP').LISTDS   DSECT REQUESTED?    @Y30LB02 12700003
&SYMBOL  DS   0F                                               @Y30LB02 12750003
ASDALEN  DC   F'16'               LENGTH OF ASSOC REQ BLOCK    @Y30LB02 12800003
ASDAOPC  DC   XL1'2C'             ASSOCIATE  FUNCTION OPCODE   @Y30LB02 12850003
ASDA001  DC   XL1'00'             1-BYTE RESERVED AREA         @Y30LB02 12900003
ASDAFLG  DC   XL2'0000'           2-BYTE FLAGS AREA            @Y30LB02 12950003
ASDACPU  DC   CL5'00000'          5-BYTE HOSTID AREA           @Y30LB02 13000003
ASDA002  DC   XL3'000000'         3-BYTE RESERVED AREA         @Y30LB02 13050003
         AGO  .FINISH                                          @Y30LB02 13100003
.*                                                             @Y30LB02 13150003
.LISTDS  ANOP                                                  @Y30LB02 13200003
*  MACMEAN  ASSOCIATE MACRO--UNINITIALIZED LIST FORM           @Y30LB02 13250003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 13300003
ICBASDAS DSECT                                                 @Y30LB02 13350003
ASDALEN  DS   F                   LENGTH OF ASSOC 16 DEC       @Y30LB02 13400003
ASDAOPC  DS   XL1                 ASSOCIATE OPCODE 2C HEX      @Y30LB02 13450003
ASDA001  DS   XL1                 1-BYTE RESERVED AREA-ZERO    @Y30LB02 13500003
ASDAFLG  DS   XL2                 2-BYTE FLAGS AREA            @Y30LB02 13550003
ASDACPU  DS   CL5                 5-BYTE HOSTID AREA           @Y30LB02 13600003
ASDA002  DS   XL3                 3-BYTE RESERVED AREA         @Y30LB02 13650003
         AGO  .FINISH                                          @Y30LB02 13700003
.*                                                             @Y30LB02 13750003
.*       THE FOLLOWING PROCESSING IS ACCOMPLISHED FOR THE      @Y30LB02 13800003
.*       EXECUTABLE MACRO FORM                                 @Y30LB02 13850003
.*                                                             @Y30LB02 13900003
.EFORM   AIF  ('&MF(1)' NE 'E').SFORM       EXECUTE FORM?      @Y30LB02 13950003
         AIF  ('&MF(2)' EQ '').EXFAIL       MF(2) NULL?        @Y30LB02 14000003
*  MACMEAN  ASSOCIATE MACRO--EXECUTE FORM                      @Y30LB02 14050003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 14100003
&SYMBOL  IHBINNRA &MF(2)          LOAD REG ONE USING           @Y30LB02 14150003
.*                                IHBINNRA MACRO               @Y30LB02 14200003
         LA   0,16                LEN OF ASSOC REQBLK          @Y30LB02 14250003
         ST   0,0(1)              STORE LEN IN REQBLK          @Y30LB02 14300003
         MVI  4(1),X'2C'          ASSOC OPCODE IN BLK          @Y30LB02 14350003
         AGO  .CKSW1                                           @Y30LB02 14400003
.*                                                             @Y30LB02 14450003
.EXFAIL  ANOP                                                  @Y30LB02 14500003
         MNOTE 12,'  ICB612I - MF(2) MUST CONTAIN REQ BLK '    @Y30LB02 14550003
         MNOTE 12,'  NAME IF EXEC MACRO FORM IS REQUESTED '    @Y30LB02 14600003
&ERSW    SETB 1                   SET ERROR SWITCH TO 1        @Y30LB02 14650003
.*                                                             @Y30LB02 14700003
.CKSW1   AIF  (&ERSW).FINISH      IF ERROR-END PROCESSING      @Y30LB02 14750003
         AGO  .COMMON                                          @Y30LB02 14800003
.*                                                             @Y30LB02 14850003
.*       PROCESSING OF THE STANDARD FORM MACRO                 @Y30LB02 14900003
.*                                                             @Y30LB02 14950003
.SFORM   AIF  ('&MF(1)' NE '').BADFORM      STANDARD FORM?     @Y30LB02 15000003
         AIF  ('&FLAGS' NE '').CKHOST       FLAGS SPECIFIED?   @Y30LB02 15050003
&ERSW    SETB 1                   SET ERROR SWITCH TO 1        @Y30LB02 15100003
         MNOTE 12,'  ICB607I - FLAGS MUST BE SPECIFIED '       @Y30LB02 15150003
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02 15200003
         AGO  .CKSW2                                           @Y30LB02 15250003
.CKHOST  AIF  ('&HOSTID' NE '').CKSW2    HOSTID SPECIFIED?     @Y30LB02 15300003
&ERSW    SETB 1                   SET ERROR SWITCH TO 1        @Y30LB02 15350003
         MNOTE 12,'  ICB608I - HOSTID MUST BE SPECIFIED '      @Y30LB02 15400003
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02 15450003
         AGO  .CKSW2                                           @Y30LB02 15500003
.*                                                             @Y30LB02 15550003
.BADFORM ANOP                                                  @Y30LB02 15600003
&ERSW    SETB 1                   SET ERROR SWITCH TO 1        @Y30LB02 15650003
         MNOTE 12,'  ICB615I - INVALID MF PARAMETER '          @Y30LB02 15700003
         MNOTE 12,'  SPECIFIED, MUST BE L, E, OR NULL.'        @Y30LB02 15750003
.*                                                             @Y30LB02 15800003
.*       THE FOLLOWING CODE CHECKS TO DETERMINE IF THE ERROR   @Y30LB02 15850003
.*       SWITCH IS ON. IF YES, PROCESSING IS TERMINATED, OTHER @Y30LB02 15900003
.*       WISE STANDARD FORM MACRO PROCESSING WILL BE CON-      @Y30LB02 15950003
.*       TINUED                                                @Y30LB02 16000003
.*                                                             @Y30LB02 16050003
.CKSW2   AIF  (&ERSW).FINISH      IF YES-END PROCESSING        @Y30LB02 16100003
*  MACMEAN ASSOCIATE MACRO--STANDARD FORM                      @Y30LB02 16150003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 16200003
         CNOP 0,4                                              @Y30LB02 16250003
&SYMBOL  BAL  1,&ASDAS            SET R1 ADDR OF REQBLK        @Y30LB02 16300003
ASDALEN  DC   A(&ASDAS-*)         LENGTH OF REQUEST BLOCK      @Y30LB02 16350003
ASDAOPC  DC   XL1'2C'             ASSOCIATE  FUNCTION OPCODE   @Y30LB02 16400003
ASDA001  DC   XL1'00'             1-BYTE RESERVED AREA         @Y30LB02 16450003
ASDAFLG  DC   XL2'0000'           2-BYTE FLAGS AREA            @Y30LB02 16500003
ASDACPU  DC   CL5'00000'          5-BYTE HOSTID AREA           @Y30LB02 16550003
ASDA002  DC   XL3'000000'         3-BYTE RESERVED AREA         @Y30LB02 16600003
&ASDAS   EQU  *                                                @Y30LB02 16650003
.*                                                             @Y30LB02 16700003
.*       THE FOLLOWING CODE CHECKS FOR VALID PARAMETERS IF     @Y30LB02 16750003
.*       STANDARD OR EXECUTE FORM MACRO IS SPECIFIED.          @Y30LB02 16800003
.*       IF PARAMETERS ARE SPECIFIED, THEY WILL BE STORED      @Y30LB02 16850003
.*       IN THE REQUEST BLOCK.                                 @Y30LB02 16900003
.*                                                             @Y30LB02 16950003
.COMMON  AIF  ('&FLAGS' EQ '').HOSTD       FLAGS SPECIFIED?    @Y30LB02 17000003
         AIF  ('&FLAGS'(1,1) EQ '(').FLREG  FLAGS IN REG-FORM? @Y30LB02 17050003
         MVC  6(2,1),&FLAGS       PUT FLAGS IN PARM LIST       @Y30LB02 17100003
         AGO  .HOSTD              BRANCH TO CK HOSTID          @Y30LB02 17150003
.*                                                             @Y30LB02 17200003
.FLREG   ANOP                                                  @Y30LB02 17250003
         MVC  6(2,1),0(&FLAGS(1)) REG-FORM PLACE FLAGS IN BLK  @Y30LB02 17300003
.*                                                             @Y30LB02 17350003
.HOSTD   AIF  ('&HOSTID' EQ '').INVOKE      HOSTID SPECIFIED?  @Y30LB02 17400003
         AIF  ('&HOSTID'(1,1) EQ '(').HREG  REGISTER FORM?     @Y30LB02 17450003
         MVC  8(5,1),&HOSTID      ADDRFORM-PUT HOSTID IN BLK   @Y30LB02 17500003
         AGO  .INVOKE                                          @Y30LB02 17550003
.*                                                             @Y30LB02 17600003
.HREG    ANOP                                                  @Y30LB02 17650003
         MVC  8(5,1),0(&HOSTID(1)) REGFORM-PUT HOSTID IN BLK   @Y30LB02 17700003
.INVOKE  ANOP                                                  @Y30LB02 17750003
         SVC  126                 INVOKE THE SVC               @Y30LB02 17800003
.FINISH  MEND                                                  @Y30LB02 17850003
**/                                                                     17900003
*   ICBASDAS: MACRO KEYS(MF,FLAGS,HOSTID);                 /*@Y30LB02*/ 17950003
*/*                                                          @Y30LB02*/ 18000003
*/*                     EXTERNAL DECLARES                    @Y30LB02*/ 18050003
*/*********************************************************  @Y30LB02*/ 18100003
*/*      ASDATEST IS USED TO DETERMINE WHETHER THE STANDARD  @Y30LB02*/ 18150003
*/*      FORM MACRO HAS BEEN INVOKED MORE THAN ONCE BY THE   @Y30LB02*/ 18200003
*/*      SAME CALLER.                                        @Y30LB02*/ 18250003
*/*********************************************************  @Y30LB02*/ 18300003
*/*      ASTESTR1 WILL BE USED TO DETERMINE IF IT IS NECES-  @Y30LB02*/ 18350003
*/*      SARY TO DECLARE R1 OR WHETHER IT IS ALREADY DCLD    @Y30LB02*/ 18400003
*/*********************************************************  @Y30LB02*/ 18450003
*/*                                                          @Y30LB02*/ 18500003
*   DCL  ASTESTR1  FIXED  EXT;    /*REG1 DECLARE COUNTER     @Y30LB02*/ 18550003
*   DCL  ASDATEST  FIXED  EXT;    /*STANDARD INVOC COUNTER   @Y30LB02*/ 18600003
*/*                                                          @Y30LB02*/ 18650003
*/*      INTERNAL DECLARES                                   @Y30LB02*/ 18700003
*   DCL  ASDOP   CHAR;       /*DEFINE ASSOC OPCODE           @Y30LB02*/ 18750003
*   DCL  ASDLEN  CHAR;       /*DECLARE LENGTH OF ORDER       @Y30LB02*/ 18800003
*   DCL  ERSW     FIXED;     /*DECLARE ERROR COND SWITCH     @Y30LB02*/ 18850003
*   DCL  RETCODE  FIXED;     /*DECLARE RETURN CODE AREA      @Y30LB02*/ 18900003
*   DCL  CTR      FIXED;     /*DECLARE CTR FOR LIST FORM     @Y30LB02*/ 18950003
*        ERSW=0;             /*INITIALIZE ERROR SWITCH       @Y30LB02*/ 19000003
*        RETCODE=0;          /*INITIALIZE RETURN CODE        @Y30LB02*/ 19050003
*        ASDLEN='10';        /*INITIALIZE LENGTH             @Y30LB02*/ 19100003
*        ASDOP='2C';         /*INITIALIZE OPCODE             @Y30LB02*/ 19150003
*        CTR=0;              /*INITIALIZE PARM CTR           @Y30LB02*/ 19200003
*/********************************************************   @Y30LB02*/ 19250003
*/*      CHECK FOR VALID MACRO FORM--E INDICATES EXECUTE     @Y30LB02*/ 19300003
*/*      FORM, L INDICATES LIST FORM AND IF THE MF PARA-     @Y30LB02*/ 19350003
*/*      METER IS NULL THE STANDARD FORM MACRO IS INVOKED    @Y30LB02*/ 19400003
*/********************************************************   @Y30LB02*/ 19450003
*        IF ASTESTR1=0 THEN   /*REGISTER ONE DECLARED?       @Y30LB02*/ 19500003
*             DO;             /*NO,DECLARE REGISTER ONE      @Y30LB02*/ 19550003
*                  ANS('DCL ASDAR1 REG(1) PTR;/*PTR'||                  19600003
*                  ' TO REQUEST BLOCK @Y30LB02*/')SKIP;                 19650003
*                  ASTESTR1=ASTESTR1+1; /*INCREM REG CTR     @Y30LB02*/ 19700003
*             END;           /*                              @Y30LB02*/ 19750003
*   IF MF(1) ¬= 'L' THEN     /*IS IT LIST FORM?              @Y30LB02*/ 19800003
*        GO TO EFORM;        /*NO, CK FOR EXEC               @Y30LB02*/ 19850003
*   IF MF(2) = '' THEN       /*LIST NAME SPECIFIED?          @Y30LB02*/ 19900003
*        DO;                 /*NO, DO ERROR PROCESSING       @Y30LB02*/ 19950003
*             ERSW=1;        /*SET ERROR SWITCH TO ONE       @Y30LB02*/ 20000003
*             RETCODE=12;    /*SET RETURN CODE TO 12         @Y30LB02*/ 20050003
*             ANS MSG('  ICB602I - A NAME FOR THE REQUEST BLOCK '||     20100003
*             'MUST BE SPECIFIED IN MF(2) ')SKIP;          /*@Y30LB02*/ 20150003
*             GO TO FINISH;  /*BRANCH TO END PROCESSING      @Y30LB02*/ 20200003
*        END;                /*                              @Y30LB02*/ 20250003
*/*                                                          @Y30LB02*/ 20300003
*   IF FLAGS ¬= '' THEN      /*IS THE FLAGS AREA NULL        @Y30LB02*/ 20350003
*        CTR=CTR+1;          /*INCREMENT PARAMETER COUNTER   @Y30LB02*/ 20400003
*   IF HOSTID ¬= '' THEN     /*IS THE HOSTID AREA NULL       @Y30LB02*/ 20450003
*        CTR=CTR+1;          /*INCREMENT PARAMETER COUNTER   @Y30LB02*/ 20500003
*   IF CTR > 0 THEN          /*INCREMENT CTR > ZERO?         @Y30LB02*/ 20550003
*        DO;                 /*DO ERROR PROCESSING           @Y30LB02*/ 20600003
*           RETCODE=4;     /*SET RETRUN CODE TO 4            @Y30LB02*/ 20650003
*           ANS MSG('  ICB604I - WARNING-ONLY THE MF PARAMETER'||       20700003
*             ' IS VALID FOR LIST FORM')SKIP;              /*@Y30LB02*/ 20750003
*        END;                /*                              @Y30LB02*/ 20800003
*   IF MF(3) ¬= '' THEN      /*PLS ATTRIBUTE SPECIFIED?      @Y30LB02*/ 20850003
*        GO TO ATTRLST;      /*BRANCH TO UNINITL LIST FORM   @Y30LB02*/ 20900003
*/*                                                          @Y30LB02*/ 20950003
*             ANS('/*******************************************'||      21000003
*                 '************** @Y30LB02*/')SKIP;                     21050003
*             ANS('/*     MACMEAN  MSSC ASSOCIATE MACRO        '||      21100003
*                 '               @Y30LB02*/')SKIP;                     21150003
*             ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||      21200003
*                 '               @Y30LB02*/')SKIP;                     21250003
*             ANS('/*THIS IS THE INITIALIZED LIST FORM         '||      21300003
*                 '               @Y30LB02*/')SKIP;                     21350003
*             ANS('/*******************************************'||      21400003
*                 '************** @Y30LB02*/')SKIP;                     21450003
*             ANS('DCL 1 '||MF(2)||'  STATIC LOCAL,'||                  21500003
*             ' /*ASSOCIATE REQUEST BLOCK @Y30LB02*/')SKIP;             21550003
*             ANS('    2  ASDALEN  FIXED(31)INIT('||QUOTE               21600003
*             ('10')||'X),/*LENG OF ASSOC REQ BLK @Y30LB02*/')SKIP;     21650003
*             ANS('    2  ASDAOPC CHAR(1)INIT('||QUOTE('2C')||          21700003
*             'X),/*ASSOCIATE OPCODE @Y30LB02*/')SKIP;                  21750003
*             ANS('    2  ASDA001 CHAR(1)INIT('||QUOTE('00')||          21800003
*             'X),/*RESERVED AND ZERO @Y30LB02*/')SKIP;                 21850003
*             ANS('    2  ASDAFLG BIT(16)INIT('||QUOTE                  21900003
*             ('0000000000000000')||'B),/*TWO BYTE ATTRI'||             21950003
*             'BUTE AREA @Y30LB02*/')SKIP;                              22000003
*             ANS('       3  ASASSOC BIT(1),/*ASSOCIATE'||              22050003
*             ' ATTRIBUTE @Y30LB02*/')SKIP;                             22100003
*             ANS('       3  ASDASSOC BIT(1),/*DISASSOCIATE'||          22150003
*             ' ATTRIBUTE @Y30LB02*/')SKIP;                             22200003
*             ANS('       3  *    BIT(3),/*THREE BITS'||                22250003
*             ' RESERVE @Y30LB02*/')SKIP;                               22300003
*             ANS('       3  ASDEINT BIT(1),/*DISASSOC'||               22350003
*             ' AND DEINITIALIZE THE INTERFACE FOR THE'||               22400003
*             ' OTHER CPU SPECIFIED IN THE CPU ASSOCIATE'||             22450003
*             ' TABLE @Y30LB02*/')SKIP;                                 22500003
*             ANS('       3  ASDMNT BIT(1),/*ASSOC'||                   22550003
*             ' CPUS AND DEMOUNT ALL VOLUMES FOR BOTH'||                22600003
*             ' CPUS @Y30LB02*/')SKIP;                                  22650003
*             ANS('       3  *      BIT(9),/*RESERVED AND'||            22700003
*             ' MUST BE ZERO @Y30LB02*/')SKIP;                          22750003
*             ANS('    2  ASDACPU  CHAR(5) INIT('||QUOTE                22800003
*             ('0000000000')||'X),/*HOSTID @Y30LB02*/')SKIP;            22850003
*             ANS('    2  ASDA002  CHAR(3) INIT('||QUOTE                22900003
*             ('000000')||'X);/*RESERVED AREA @Y30LB02*/')SKIP;         22950003
*             GO TO FINISH;                                /*@Y30LB02*/ 23000003
*/*                                                          @Y30LB02*/ 23050003
*ATTRLST:                                                               23100003
*             ANS('/*******************************************'||      23150003
*                 '************** @Y30LB02*/')SKIP;                     23200003
*             ANS('/*      MACMEAN  MSSC ASSOCIATE MACRO       '||      23250003
*                 '               @Y30LB02*/')SKIP;                     23300003
*             ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||      23350003
*                 '               @Y30LB02*/')SKIP;                     23400003
*             ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||      23450003
*                 '               @Y30LB02*/')SKIP;                     23500003
*             ANS('/*******************************************'||      23550003
*                 '************** @Y30LB02*/')SKIP;                     23600003
*             ANS('DCL 1 '||MF(2)||' '||MF(3)||','||                    23650003
*             ' /*ASSOCIATE REQUEST BLOCK @Y30LB02*/')SKIP;             23700003
*             ANS('    2  ASDALEN  FIXED(31),/*LENG'||                  23750003
*             'TH OF ASSOCIATE REQ BLOCK=10 HEX @Y30LB02*/')SKIP;       23800003
*             ANS('    2  ASDAOPC CHAR(1),'||                           23850003
*             '/*ASSOCIATE OPCODE=2C HEX @Y30LB02*/')SKIP;              23900003
*             ANS('    2  ASDA001 CHAR(1),'||                           23950003
*             ' /*RESERVED AND ZERO @Y30LB02*/')SKIP;                   24000003
*             ANS('    2  ASDAFLG BIT(16),'||                           24050003
*             '/*TWO BYTE ATTRIBUTE AREA @Y30LB02*/')SKIP;              24100003
*             ANS('       3  ASASSOC BIT(1),/*ASSOCIATE'||              24150003
*             ' ATTRIBUTE @Y30LB02*/')SKIP;                             24200003
*             ANS('       3  ASDASSOC BIT(1),/*DISASSOCIATE'||          24250003
*             ' ATTRIBUTE @Y30LB02*/')SKIP;                             24300003
*             ANS('       3  *    BIT(3),/*THREE BITS'||                24350003
*             ' RESERVE @Y30LB02*/')SKIP;                               24400003
*             ANS('       3  ASDEINT BIT(1),/*DISASSOC'||               24450003
*             ' AND DEINITIALIZE THE INTERFACE FOR THE'||               24500003
*             ' OTHER CPU SPECIFIED IN THE CPU ASSOCIATE'||             24550003
*             ' TABLE @Y30LB02*/')SKIP;                                 24600003
*             ANS('       3  ASDMNT BIT(1),/*ASSOC'||                   24650003
*             ' CPUS AND DEMOUNT ALL VOLUMES FOR BOTH'||                24700003
*             ' CPUS @Y30LB02*/')SKIP;                                  24750003
*             ANS('       3  *      BIT(9),/*RESERVED AND'||            24800003
*             ' MUST BE ZERO @Y30LB02*/')SKIP;                          24850003
*             ANS('    2  ASDACPU  CHAR(5),/*HOSTID @Y30LB02*/')SKIP;   24900003
*             ANS('    2  ASDA002  CHAR(3);/*RESERVED'||                24950003
*             ' AREA @Y30LB02*/')SKIP;                                  25000003
*             GO TO FINISH;                                /*@Y30LB02*/ 25050003
*/*                                                          @Y30LB02*/ 25100003
*/*      PROCESSING THE EXECUTE MACRO FORM                   @Y30LB02*/ 25150003
*/*                                                          @Y30LB02*/ 25200003
*EFORM:                                                                 25250003
*   IF MF(1) ¬= 'E' THEN     /*EXCUTE FORM                   @Y30LB02*/ 25300003
*        GO TO SFORM;        /*NO, CK FOR STANDARD           @Y30LB02*/ 25350003
*   IF MF(2) = '' THEN       /*YES,LIST NAME SPECD?          @Y30LB02*/ 25400003
*        DO;                 /*DO ERROR PROCESSING           @Y30LB02*/ 25450003
*             ERSW=1;        /*SET ERROR SWITCH TO ONE       @Y30LB02*/ 25500003
*             RETCODE=12;    /*SET ERROR RETURN CODE TO 12   @Y30LB02*/ 25550003
*             ANS MSG('  ICB612I - MF(2) MUST CONTAIN'||                25600003
*                ' REQ BLK NAME IF EXEC '||                             25650003
*                ' MACRO FORM REQUESTED')SKIP;             /*@Y30LB02*/ 25700003
*             GO TO CKSW;    /*BRCH TO CK ERROR CONDITION    @Y30LB02*/ 25750003
*        END;                /*                              @Y30LB02*/ 25800003
*/*                                                          @Y30LB02*/ 25850003
*   ELSE                     /*EXECUTE FORM PROCESSING       @Y30LB02*/ 25900003
*/*                                                          @Y30LB02*/ 25950003
*        ANS('/*******************************************'||           26000003
*            '************* @Y30LB02*/')SKIP;                           26050003
*        ANS('/*     MACMEAN  MSSC ASSOCIATE MACRO        '||           26100003
*            '              @Y30LB02*/')SKIP;                           26150003
*        ANS('/*VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00   '||           26200003
*            '              @Y30LB02*/')SKIP;                           26250003
*        ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '||           26300003
*            '              @Y30LB02*/')SKIP;                           26350003
*        ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '||           26400003
*            '              @Y30LB02*/')SKIP;                           26450003
*        ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'||           26500003
*            '              @Y30LB02*/')SKIP;                           26550003
*        ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '||           26600003
*            '              @Y30LB02*/')SKIP;                           26650003
*        ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '||           26700003
*            '              @Y30LB02*/')SKIP;                           26750003
*        ANS('/*******************************************'||           26800003
*            '************* @Y30LB02*/')SKIP;                           26850003
*        ANS('RFY(ASDAR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;        26900003
*        ANS('ASDAR1=ADDR('||MF(2)||');/*R1 POINTER TO'||               26950003
*        ' REQUEST BLOCK @Y30LB02*/')SKIP;                              27000003
*   IF MF(3) = 'COMPLETE' THEN   /*COMPLETE SPECIFIED        @Y30LB02*/ 27050003
*     DO;                        /*ZERO REQ BLOCK            @Y30LB02*/ 27100003
*        ANS(' '||MF(2)||'='||MF(2)||'&&'||MF(2)||';'||    /*@Y30LB02*/ 27150003
*        '/*ZERO BLOCK @Y30LB02*/')SKIP;                                27200003
*     END;                       /*                          @Y30LB02*/ 27250003
*        ANS('ASDALEN= '||QUOTE(ASDLEN)||'X;/* '||                      27300003
*        'LENGTH OF ASSOC REQUEST @Y30LB02*/')SKIP;                     27350003
*        ANS('ASDAOPC= '||QUOTE(ASDOP)||'X;/*ASSOCIATE'||               27400003
*        ' OPCODE @Y30LB02*/')SKIP;                                     27450003
*/*                                                          @Y30LB02*/ 27500003
*CKSW:                                                                  27550003
*   IF ERSW=1 THEN             /*ERROR SWITCH EQ ONE?        @Y30LB02*/ 27600003
*        GO TO FINISH;         /*YES,BRANCH TO END           @Y30LB02*/ 27650003
*   ELSE                       /*NO,CK PARAMETERS            @Y30LB02*/ 27700003
*        GO TO COMPROC;        /*BRANCH TO CK PARAMETERS     @Y30LB02*/ 27750003
*/*                                                          @Y30LB02*/ 27800003
*SFORM:                                                                 27850003
*   IF MF(1) ¬= '' THEN        /*STANDARD FORM               @Y30LB02*/ 27900003
*     DO;                      /*NO,DO ERROR PROCESSING      @Y30LB02*/ 27950003
*        ERSW=1;               /*SET ERROR SWITCH TO ONE     @Y30LB02*/ 28000003
*        RETCODE=12;           /*SET RETURN CODE TO 12       @Y30LB02*/ 28050003
*        ANS MSG('  ICB615I - INVALID MF PARAMETER '||                  28100003
*                'SPECIFIED, MUST BE L, E, OR NULL')SKIP;  /*@Y30LB02*/ 28150003
*        GO TO CKSW2;          /*BRANCH TO CK ERROR SWITCH   @Y30LB02*/ 28200003
*     END;                                                 /*@Y30LB02*/ 28250003
*/*                                                          @Y30LB02*/ 28300003
*   IF FLAGS = '' THEN         /*FLAGS SPECIFIED?            @Y30LB02*/ 28350003
*     DO;                      /*NO,DO ERROR PROCESSING      @Y30LB02*/ 28400003
*        ERSW=1;               /*SET ERROR SWITCH TO 1       @Y30LB02*/ 28450003
*        RETCODE=12;           /*SET RETURN CODE TO 12       @Y30LB02*/ 28500003
*        ANS MSG('  ICB607I - FLAGS MUST BE SPECIFIED  '||              28550003
*        'FOR STANDARD FORM MACRO')SKIP;                   /*@Y30LB02*/ 28600003
*        GO TO CKSW2;          /*BRANCH TO CK SWITCH         @Y30LB02*/ 28650003
*     END;                     /*                            @Y30LB02*/ 28700003
*   IF HOSTID = '' THEN        /*HOSTID SPECIFIED?           @Y30LB02*/ 28750003
*     DO;                      /*DO ERROR PROCESSING         @Y30LB02*/ 28800003
*        ERSW=1;               /*SET ERROR CODE TO ONE       @Y30LB02*/ 28850003
*        RETCODE=12;           /*SET RETURN CODE TO 12       @Y30LB02*/ 28900003
*        ANS MSG('  ICB608I - HOSTID MUST BE SPECIFIED  '||             28950003
*        'FOR STANDARD FORM MACRO')SKIP;                   /*@Y30LB02*/ 29000003
*     END;                     /*                            @Y30LB02*/ 29050003
*/*                                                          @Y30LB02*/ 29100003
*CKSW2:                                                                 29150003
*/*                                                          @Y30LB02*/ 29200003
*   IF ERSW = 1 THEN           /*ERROR SWITCH EQUAL 1?       @Y30LB02*/ 29250003
*        GO TO FINISH;         /*YES,BRANCH TO END           @Y30LB02*/ 29300003
*/*                                                          @Y30LB02*/ 29350003
*   IF ASDATEST = 1 THEN       /*FIRST STANDARD FORM?        @Y30LB02*/ 29400003
*     DO;                      /*NO,PUT OUT NO DCLS          @Y30LB02*/ 29450003
*        ANS('/*******************************************'||           29500003
*            '************** @Y30LB02*/')SKIP;                          29550003
*        ANS('/*     MACMEAN  MSSC ASSOCIATE MACRO        '||           29600003
*            '               @Y30LB02*/')SKIP;                          29650003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           29700003
*            '               @Y30LB02*/')SKIP;                          29750003
*        ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '||           29800003
*            '               @Y30LB02*/')SKIP;                          29850003
*        ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||           29900003
*            '               @Y30LB02*/')SKIP;                          29950003
*        ANS('/*******************************************'||           30000003
*            '************** @Y30LB02*/')SKIP;                          30050003
*        ANS('RFY(ASDAR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;        30100003
*        ANS('ASDAR1=ADDR(ASDALEN);/*R1 PTR TO BLK @Y30LB02*/')SKIP;    30150003
*        ANS('ASDALEN= '||QUOTE(ASDLEN)||'X;/* '||                      30200003
*        'LENGTH OF ASSOC REQUEST @Y30LB02*/')SKIP;                     30250003
*        ANS('ASDAOPC='||QUOTE(ASDOP)||'X;/*ASSOC'||                    30300003
*        ' OPCODE @Y30LB02*/')SKIP;                                     30350003
*        GO TO COMPROC;      /*BRANCH TO CK PARAMETERS       @Y30LB02*/ 30400003
*     END;                   /*                              @Y30LB02*/ 30450003
*/*                                                          @Y30LB02*/ 30500003
*   ELSE                     /*PUT OUT THE DECLARES          @Y30LB02*/ 30550003
*     DO;                    /*STANDARD FIRST TIME           @Y30LB02*/ 30600003
*        ANS('/*******************************************'||           30650003
*            '************** @Y30LB02*/')SKIP;                          30700003
*        ANS('/*    MACMEAN  MSSC ASSOCIATE MACRO         '||           30750003
*            '               @Y30LB02*/')SKIP;                          30800003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           30850003
*            '               @Y30LB02*/')SKIP;                          30900003
*        ANS('/*THIS IS THE STANDARD FORM  MACRO          '||           30950003
*            '               @Y30LB02*/')SKIP;                          31000003
*        ANS('/*******************************************'||           31050003
*            '************** @Y30LB02*/')SKIP;                          31100003
*        ANS('RFY(ASDAR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;        31150003
*        ANS('ASDAR1=ADDR(ASDALEN);/*R1 PTR  '||                        31200003
*        'TO REQUEST BLOCK @Y30LB02*/')SKIP;                            31250003
*        ANS('DCL 1 ASDALST  STATIC LOCAL,'||                           31300003
*        ' /*ASSOCIATE REQUEST BLOCK @Y30LB02*/')SKIP;                  31350003
*        ANS('    2  ASDALEN  FIXED(31)INIT('||QUOTE                    31400003
*        ('10')||'X),/*LENG OF ASSOC REQ BLK @Y30LB02*/')SKIP;          31450003
*        ANS('    2  ASDAOPC CHAR(1)INIT('||QUOTE('2C')||               31500003
*        'X),/*ASSOCIATE OPCODE @Y30LB02*/')SKIP;                       31550003
*        ANS('    2  *      CHAR(1)INIT('||QUOTE('00')||                31600003
*        'X),/*RESERVED AND ZERO @Y30LB02*/')SKIP;                      31650003
*        ANS('    2  ASDAFLG BIT(16)INIT('||QUOTE                       31700003
*        ('0000000000000000')||'B),/*TWO BYTE ATTRI'||                  31750003
*        'BUTE AREA @Y30LB02*/')SKIP;                                   31800003
*        ANS('       3  ASASSOC BIT(1),/*ASSOCIATE'||                   31850003
*        ' ATTRIBUTE @Y30LB02*/')SKIP;                                  31900003
*        ANS('       3  ASDASSOC BIT(1),/*DISASSOCIATE'||               31950003
*        ' ATTRIBUTE @Y30LB02*/')SKIP;                                  32000003
*        ANS('       3  *     BIT(1),/*THREE BITS'||                    32050003
*        ' RESERVE @Y30LB02*/')SKIP;                                    32100003
*        ANS('       3  ASDEINT BIT(1),/*DISASSOC'||                    32150003
*        ' AND DEINITIALIZE THE INTERFACE FOR THE'||                    32200003
*        ' OTHER CPU SPECIFIED IN THE CPU ASSOCIATE'||                  32250003
*        ' TABLE @Y30LB02*/')SKIP;                                      32300003
*        ANS('       3  ASDMNT BIT(1),/*ASSOC'||                        32350003
*        ' CPUS AND DEMOUNT ALL VOLUMES FOR BOTH'||                     32400003
*        ' CPUS @Y30LB02*/')SKIP;                                       32450003
*        ANS('       3  *      BIT(9),/*RESERVED AND'||                 32500003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               32550003
*        ANS('    2  ASDACPU  CHAR(5) INIT('||QUOTE                     32600003
*        ('0000000000')||'X),/*HOSTID @Y30LB02*/')SKIP;                 32650003
*        ANS('    2  ASDA002  CHAR(3) INIT('||QUOTE                     32700003
*        ('000000')||'X);/*RESERVED AREA @Y30LB02*/')SKIP;              32750003
*        ASDATEST=ASDATEST+1; /*INCREM STD FORM CTR          @Y30LB02*/ 32800003
*        GO TO COMPROC;       /*BRANCH,CK PARAMETERS         @Y30LB02*/ 32850003
*     END;                    /*                             @Y30LB02*/ 32900003
*/*                                                          @Y30LB02*/ 32950003
*/*********************************************************  @Y30LB02*/ 33000003
*/*      COMMON PROCESSING FOR EXECUTE AND STANDARD FORMS    @Y30LB02*/ 33050003
*/*      THE FOLLOWING CODE WILL CHECK TO DETERMINE WHICH    @Y30LB02*/ 33100003
*/*      PARAMETERS ARE SPECIFIED AND PLACE THE VALUE IN     @Y30LB02*/ 33150003
*/*      THE REQUEST BLOCK                                   @Y30LB02*/ 33200003
*/*********************************************************  @Y30LB02*/ 33250003
*COMPROC:                                                               33300003
*   IF FLAGS ¬= '' THEN      /*FLAGS SPECIFIED?              @Y30LB02*/ 33350003
*        ANS('ASDAFLG= '||FLAGS||';/*VALUE OF FLAGS '||                 33400003
*        'PARAMETER @Y30LB02*/')SKIP;                                   33450003
*/*                                                          @Y30LB02*/ 33500003
*   IF HOSTID ¬= '' THEN    /*HOSTID SPECIFIED?              @Y30LB02*/ 33550003
*        ANS('ASDACPU= '||HOSTID||';/*HOSTID @Y30LB02*/')SKIP;          33600003
*/*                                                          @Y30LB02*/ 33650003
*/********************************************************   @Y30LB02*/ 33700003
*/*      THIS SECTION OF CODE WILL INVOKE SVC 126 AND        @Y30LB02*/ 33750003
*/*      SET THE PROPER RETURN CODE, THEN END PROCESSING     @Y30LB02*/ 33800003
*/********************************************************   @Y30LB02*/ 33850003
*/********************************************************   @Y30LB02*/ 33900003
*        ANS('SVC (126);/*INVOKE THE SVC  @Y30LB02*/')SKIP;             33950003
*        ANS('RFY  ASDAR1 UNRSTD;/*UNRESTRICT REG 1 @Y30LB02*/')SKIP;   34000003
*/*                                                          @Y30LB02*/ 34050003
*FINISH:                                                                34100003
*        RETURN CODE(RETCODE);                             /*@Y30LB02*/ 34150003
*        %END;                                             /*@Y30LB02*/ 34200003
./  ADD  SSI=42090039,NAME=ICBCOTB
* %/* START OF SPECIFICATIONS  ***                             @Y30LB02 00050003
.*                                                             @Y30LB02 00100003
.*01  MODULE-NAME = ICBCOTB                                    @Y30LB02 00150003
.*                                                             @Y30LB02 00200003
.*01  DESCRIPTIVE-NAME = COPY TABLES                           @Y30LB02 00250003
.*                                                             @Y30LB02 00300003
.*01  COPYRIGHT = NONE                                         @Y30LB02 00350003
.*                                                             @Y30LB02 00400003
.*01  STATUS = OS/VS1 RELEASE 4.0,                             @Y30LB02 00450003
.*             OS/VS2 RELEASE 3.0                              @Y30LB02 00500003
.*                                                             @Y30LB02 00550003
.*01  FUNCTION = BUILDS A REQUEST BLOCK FOR A COPY             @Y30LB02 00600003
.*               TABLES REQUEST.  THE MACRO IS A               @Y30LB02 00650003
.*               COMMUNICATION LINK BETWEEN THE CALLER         @Y30LB02 00700003
.*               AND THE MSSC SVC MODULE.                      @Y30LB02 00750003
.*                                                             @Y30LB02 00800003
.*01  NOTES = ICBCOTB IS A BILINGUAL MACRO.                    @Y30LB02 00850003
.*                                                             @Y30LB02 00900003
.*02    DEPENDENCIES = NONE                                    @Y30LB02 00950003
.*                                                             @Y30LB02 01000003
.*02    RESTRICTIONS = THE PREFIXES ICB AND COTB SHOULD        @Y30LB02 01050003
.*                     BE AVOIDED WHEN INVOKING THIS MACRO.    @Y30LB02 01100003
.*                                                             @Y30LB02 01150003
.*02    REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF           @Y30LB02 01200003
.*                             REGISTERS BY MACROS:            @Y30LB02 01250003
.*                             R0,R1,R14, AND R15.             @Y30LB02 01300003
.*                                                             @Y30LB02 01350003
.*01  MODULE-TYPE = MACRO                                      @Y30LB02 01400003
.*                                                             @Y30LB02 01450003
.*02    PROCESSOR = PLS2 AND ASSEM                             @Y30LB02 01500003
.*                                                             @Y30LB02 01550003
.*01  INPUT = PARAMETERS SPECIFIED ON THE PLS/BAL MACRO        @Y30LB02 01600003
.*            INVOCATION.                                      @Y30LB02 01650003
.*                                                             @Y30LB02 01700003
.*                                                             @Y30LB02 01750003
.*   THE COPY TABLES REQUEST IS ISSUED BY A HOST CALLER        @Y30LB02 01800003
.*   WHEN HE DESIRES TO HAVE THE MSC'S TABLES ON DASD          @Y30LB02 01850003
.*   MOVED TO THE VIRTUAL VOLUME SPECIFIED BY VOLID            @Y30LB02 01900003
.*   SPECIFIED BY VOLID AT THE LOCATION GIVEN                  @Y30LB02 01950003
.*   BY EXTS.                                                  @Y30LB02 02000003
.*                                                             @Y30LB02 02050003
.*   MACRO SYNTAX                                              @Y30LB02 02100003
.*                                                             @Y30LB02 02150003
.*   LIST FORM                                                 @Y30LB02 02200003
.*                                                             @Y30LB02 02250003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 02300003
.*                                                             @Y30LB02 02350003
.*ICBCOTB  MF=L - (BAL)          MF=(L,MAP) - BAL              @Y30LB02 02400003
.*         MF(L,NAME/(R))-PLS    MF(L,NAME/(R),ATTR)-PLS       @Y30LB02 02450003
.*                                                             @Y30LB02 02500003
.*   STANDARD FORM                                             @Y30LB02 02550003
.*                                                             @Y30LB02 02600003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 02650003
.*                                                             @Y30LB02 02700003
.*ICBCOTB  VOLID=ADDR/(R)              NONE                    @Y30LB02 02750003
.*         ECB=ADDR/(R)                                        @Y30LB02 02800003
.*         EXTS=ADDR/(R)                                       @Y30LB02 02850003
.*         FLAGS=ADDR/(R)                                      @Y30LB02 02900003
.*                                                             @Y30LB02 02950003
.* EXECUTE FORM                                                @Y30LB02 03000003
.*                                                             @Y30LB02 03050003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03100003
.*                                                             @Y30LB02 03150003
.*ICBCOTB  MF(E,NAME/(R))       MF(E,NAME/(R),COMPLETE)-PLS    @Y30LB02 03200003
.*                              VOLID=ADDR/(R)                 @Y30LB02 03250003
.*                              ECB=ADDR/(R)                   @Y30LB02 03300003
.*                              EXTS=ADDR/(R)                  @Y30LB02 03350003
.*                              FLAGS=ADDR/(R)                 @Y30LB02 03400003
.*                                                             @Y30LB02 03450003
.*                                                             @Y30LB02 03500003
.*   KEYWORD PARAMETERS:                                       @Y30LB02 03550003
.*                                                             @Y30LB02 03600003
.*   MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE         @Y30LB02 03650003
.*          MACRO FORMAT AND MAY GIVE THE ADDRESS OR           @Y30LB02 03700003
.*          ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK      @Y30LB02 03750003
.*          IS STORED.                                         @Y30LB02 03800003
.*                                                             @Y30LB02 03850003
.*          L - LIST FORM: THE EXPANSION OF THE L-FORM         @Y30LB02 03900003
.*              MACRO WILL RESULT IN A REQUEST BLOCK WITH      @Y30LB02 03950003
.*              THE ONLY NON-ZERO FIELDS BEING THE OPCODE      @Y30LB02 04000003
.*              AND LENGTH FIELDS.                             @Y30LB02 04050003
.*                                                             @Y30LB02 04100003
.*          (1) 'MAP' - IF MAP IS SPECIFIED WITH THE           @Y30LB02 04150003
.*              ASSEMBLER MACRO CALL A DSECT EQUIVALENT TO     @Y30LB02 04200003
.*              A MAPPING MACRO IS PRODUCED.                   @Y30LB02 04250003
.*                                                             @Y30LB02 04300003
.*          (2) NAME - THE MACRO INVOKER MUST SPECIFY A        @Y30LB02 04350003
.*              NAME FOR HIS STRUCTURE WHEN INVOKING THE       @Y30LB02 04400003
.*              PLS LIST FORM.                                 @Y30LB02 04450003
.*                                                             @Y30LB02 04500003
.*          (3) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS       @Y30LB02 04550003
.*              ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION    @Y30LB02 04600003
.*              IN AN UNINITIALIZED REQUEST BLOCK.  ATTRI-     @Y30LB02 04650003
.*              BUTE EXAMPLE:                                  @Y30LB02 04700003
.*                                                             @Y30LB02 04750003
.*              CHAR, FIXED, STATIC LOCAL, NONLOCAL,           @Y30LB02 04800003
.*              BASED(*), ETC.                                 @Y30LB02 04850003
.*                                                             @Y30LB02 04900003
.*       NULL - STANDARD FORM: THE EXPANSION OF THIS FORM      @Y30LB02 04950003
.*              CONSISTS OF A REQUEST BLOCK, A LINKAGE         @Y30LB02 05000003
.*              INSTRUCTION, AND, POSSIBLY, PARAMETER          @Y30LB02 05050003
.*              BINDING INSTRUCTIONS.                          @Y30LB02 05100003
.*                                                             @Y30LB02 05150003
.*          E - EXECUTABLE FORM: THE EXPANSION OF THIS FORM    @Y30LB02 05200003
.*              CONSISTS OF A LINKAGE INSTRUCTION AND          @Y30LB02 05250003
.*              POSSIBLY, PARAMETER BINDING INSTRUCTIONS.      @Y30LB02 05300003
.*                                                             @Y30LB02 05350003
.*              SUB-PARAMETERS                                 @Y30LB02 05400003
.*                                                             @Y30LB02 05450003
.*              (1)  AN E MUST BE SPECIFIED IN THE FIRST       @Y30LB02 05500003
.*                   SUB-PARAMETER POSITION.  THIS INDICATES   @Y30LB02 05550003
.*                   THAT THE MACRO IS IN EXECUTABLE FORM.     @Y30LB02 05600003
.*                                                             @Y30LB02 05650003
.*              (2)  A NAME OR A REGISTER MUST BE SPECIFIED    @Y30LB02 05700003
.*                   IN THE SECOND SUB-PARAMETER.              @Y30LB02 05750003
.*                                                             @Y30LB02 05800003
.*              (3)  'COMPLETE' - COMPLETE WILL CAUSE THE      @Y30LB02 05850003
.*                   MACRO TO ZERO OUT THE REQUEST BLOCK.      @Y30LB02 05900003
.*                   AFTER ZEROING THE REQUEST BLOCK THE       @Y30LB02 05950003
.*                   FUNCTION OPCODE AND LENGTH ARE PLACED     @Y30LB02 06000003
.*                   IN THE REQUEST BLOCK.                     @Y30LB02 06050003
.*                                                             @Y30LB02 06100003
.*                                                             @Y30LB02 06150003
.*   FLAGS--FLAGS:  THE 2 BYTE FIELD WHICH INDICATES THE       @Y30LB02 06200003
.*   TABLE TO BE COPIED.  THE FORMAT OF THE 'FLAGS' FIELD      @Y30LB02 06250003
.*   IS SHOWN BELOW:                                           @Y30LB02 06300003
.*                                                             @Y30LB02 06350003
.*     BITS 0-7                                                @Y30LB02 06400003
.*     ____________________________                            @Y30LB02 06450003
.*     | X |X |X | X| 0| 0 |0 | 0|                             @Y30LB02 06500003
.*     ----------------------------                            @Y30LB02 06550003
.*                                                             @Y30LB02 06600003
.*                                                             @Y30LB02 06650003
.*  BIT SPECIFICATIONS FOR BITS 0-7                            @Y30LB02 06700003
.*                                                             @Y30LB02 06750003
.*  BITS 0-3------------MAY BE SET TO 8                        @Y30LB02 06800003
.*                                                             @Y30LB02 06850003
.*  BITS 4-7------------UNUSED AND MUST BE SET TO ZERO         @Y30LB02 06900003
.*                                                             @Y30LB02 06950003
.*   IF BITS 0-3 OF THE FLAGS FIELD IS SET TO EIGHT, THE       @Y30LB02 07000003
.*   FOLLOWING TABLES WILL BE COPIED                           @Y30LB02 07050003
.*                                                             @Y30LB02 07100003
.*   TABLE ID  TABLE                                           @Y30LB02 07150003
.*                                                             @Y30LB02 07200003
.*       1     STAGING DRIVE                                   @Y30LB02 07250003
.*       2     MOUNTED VOLUME                                  @Y30LB02 07300003
.*       3     SCRATCH CARTRIDGE                               @Y30LB02 07350003
.*       4     VOLUME INVENTORY                                @Y30LB02 07400003
.*       5     TRANSIENT VOLUME                                @Y30LB02 07450003
.*       6     VDA/VOLID CROSS REFERENCE                       @Y30LB02 07500003
.*       7     CONFIGURATION                                   @Y30LB02 07550003
.*       9     CELL MAP                                        @Y30LB02 07600003
.*       A     VDA                                             @Y30LB02 07650003
.*       B     JOURNAL                                         @Y30LB02 07700003
.*       C     SCHEDULE QUEUE                                  @Y30LB02 07750003
.*       D     DIAGNOSTIC,EC AND OVERLAY                       @Y30LB02 07800003
.*                                                             @Y30LB02 07850003
.*   BITS 8-15 OF THE FLAGS FIELD WILL BE USED TO COPY THE     @Y30LB02 07900003
.*   TRACE TABLE IN ITS ENTIRETY OR SPECIFIC VARIATIONS        @Y30LB02 07950003
.*   THEREOF.                                                  @Y30LB02 08000003
.*                                                             @Y30LB02 08050003
.*    BITS 8-15                                                @Y30LB02 08100003
.*     ____________________________                            @Y30LB02 08150003
.*     | X |X |X | X| 0| 0 |0 | 0|                             @Y30LB02 08200003
.*     ____________________________                            @Y30LB02 08250003
.*                                                             @Y30LB02 08300003
.*                                                             @Y30LB02 08350003
.*                                                             @Y30LB02 08400003
.*   *BIT 8--------------'1'B  COPY TRACE X                    @Y30LB02 08450003
.*                       '0'B  NO FUNCTION REQUESTED           @Y30LB02 08500003
.*                                                             @Y30LB02 08550003
.*   *BIT 9--------------'1'B  COPY TRACE Y                    @Y30LB02 08600003
.*                       '0'B  NO FUNCTION REQUESTED           @Y30LB02 08650003
.*                                                             @Y30LB02 08700003
.*     *NOTE:  IF BOTH BITS(8 AND 9) ARE SET TO 1,             @Y30LB02 08750003
.*         THE ENTIRE TRACE TABLE WILL BE COPIED.              @Y30LB02 08800003
.*         (TRACE X AND TRACE Y)                               @Y30LB02 08850003
.*                                                             @Y30LB02 08900003
.*   BIT 10--------------'1'B  COPY ACTIVE TRACE               @Y30LB02 08950003
.*                       '0'B  NO FUNCTION REQUESTED           @Y30LB02 09000003
.*                                                             @Y30LB02 09050003
.*   BIT 11--------------'1'B  COPY INACTIVE TRACE             @Y30LB02 09100003
.*                       '0'B   NO FUNCTION REQUESTED          @Y30LB02 09150003
.*                                                             @Y30LB02 09200003
.*   BITS 12-15----------UNUSED AND MUST BE SET TO ZERO        @Y30LB02 09250003
.*                                                             @Y30LB02 09300003
.*       **********            **********                      @Y30LB02 09350003
.*                                                             @Y30LB02 09400003
.*   NOTE 1: BITS 0-7 AND BITS 8-15 ARE MUTUALLY EXCLUSIVE.    @Y30LB02 09450003
.*       IF THE TABLE ID IS SPECIFIED IN BITS 0-7,             @Y30LB02 09500003
.*       THEN BITS 8-15 MUST BE SET TO ZERO.                   @Y30LB02 09550003
.*                                                             @Y30LB02 09600003
.*   NOTE 2: BITS 8 AND 9 MAY BOTH BE SPECIFIED AT             @Y30LB02 09650003
.*       THE SAME TIME, HOWEVER, NEITHER BIT                   @Y30LB02 09700003
.*       8 OR 9 CAN BE USED IN CONJUNCTION                     @Y30LB02 09750003
.*       WITH EITHER BIT 10 OR 11.                             @Y30LB02 09800003
.*                                                             @Y30LB02 09850003
.*   NOTE 3: BITS 10 AND 11 ARE MUTUALLY EXCLUSIVE.            @Y30LB02 09900003
.*                                                             @Y30LB02 09950003
.*   NOTE 4: THE MSC WILL BE RESPONSIBLE FOR RETURN OF         @Y30LB02 10000003
.*           A MESSAGE TO THE MESSAGE BUFFER.  THIS            @Y30LB02 10050003
.*           MESSAGE WILL GIVE THE 'START' AND 'END' CHR'S     @Y30LB02 10100003
.*           FOR THE TABLE THAT WAS COPIED.  THE CHRS WILL     @Y30LB02 10150003
.*           BE THE ADDRESS OF THE TABLE ON THE TARGET         @Y30LB02 10200003
.*           VIRTUAL VOLUME.  THE MSC WILL ALSO RETURN THE     @Y30LB02 10250003
.*           THE ORIGINAL 'START' CHR OF THE TABLE BEFORE      @Y30LB02 10300003
.*           IT WAS COPIED.  IF A TRACE TABLE WAS COPIED,      @Y30LB02 10350003
.*           THE MSC WILL ALSO RETURN THE 'CURRENT' CHR        @Y30LB02 10400003
.*           VALUE FOR THE TRACE TABLE; THIS CHR WILL BE       @Y30LB02 10450003
.*           THE ORIGINAL CHR BEFORE THE TRACE TABLE WAS       @Y30LB02 10500003
.*           COPIED.                                           @Y30LB02 10550003
.*                                                             @Y30LB02 10600003
.*   NOTE 5: THE MSC WILL RETURN CHRS FOR BOTH TRACE AREAS     @Y30LB02 10650003
.*           WHEN BOTH TRACE AREAS ARE COPIED.                 @Y30LB02 10700003
.*                                                             @Y30LB02 10750003
.*  VOLID -- VOLUME IDENTIFIER:  THE VOLUME IDENTIFIER OF      @Y30LB02 10800003
.*           THE VOLUME TO WHICH THE TABLES ARE TO BE          @Y30LB02 10850003
.*           COPIED.  THIS VOLUME MUST BE MOUNTED.             @Y30LB02 10900003
.*                                                             @Y30LB02 10950003
.*  ECB ---- EVENT CONTROL BLOCK:  ADDRESS OF AN EVENT         @Y30LB02 11000003
.*           CONTROL BLOCK.  THIS PARAMETER IS PROVIDED SINCE  @Y30LB02 11050003
.*           A DELAYED RESPONSE IS ALWAYS GIVEN FOR A COPY     @Y30LB02 11100003
.*           TABLES REQUEST.  THE ECB WILL BE POSTED WITH      @Y30LB02 11150003
.*           ONE OF THE FOLLOWING POST CODES: 70, 71, 72, 73,  @Y30LB02 11200003
.*           74, ETC.. THE POST CODE WILL BE PLACED IN THE     @Y30LB02 11250003
.*           LOW-ORDER BYTE OF THE ECB - '7F'X INDICATES       @Y30LB02 11300003
.*           SUCCESSFUL COMPLETION.  THE ECB AREA MUST BE      @Y30LB02 11350003
.*           CLEARED(SET TO BINARY 0) BEFORE INVOKING          @Y30LB02 11400003
.*           THE MACRO.                                        @Y30LB02 11450003
.*                                                             @Y30LB02 11500003
.*  EXTS --- EXTENTS:  A FOUR BYTE AREA WHICH CONTAINS         @Y30LB02 11550003
.*           THE BEGINNING CYLINDER (2 BYTES) AND ENDING       @Y30LB02 11600003
.*           CYLINDER (2 BYTES) OF THE EXTENT OF THE VIRTUAL   @Y30LB02 11650003
.*           VOLUME TO WHICH THE TABLES ARE TO BE COPIED.      @Y30LB02 11700003
.*           THE EXTENTS PARAMETER MUST SPECIFY SUFFICIENT     @Y30LB02 11750003
.*           CONTIGUOUS CYLINDERS TO ACCOMMODATE THE           @Y30LB02 11800003
.*           TABLE(S) TO BE COPIED AS THEY ARE MAPPED IN THE   @Y30LB02 11850003
.*           PAGES OF THE MSC TABLES.                          @Y30LB02 11900003
.*                                                             @Y30LB02 11950003
.*                                                             @Y30LB02 12000003
.*01  EXIT-NORMAL = VALID INVOCATION                           @Y30LB02 12050003
.*                                                             @Y30LB02 12100003
.*02    CONDITION = RETURN CODE = 0.                           @Y30LB02 12150003
.*                                                             @Y30LB02 12200003
.*02    OUTPUT = IN-LINE PLS/BAL STATEMENTS THAT PERFORM       @Y30LB02 12250003
.*               THE REQUESTED FUNCTION.                       @Y30LB02 12300003
.*                                                             @Y30LB02 12350003
.*01  EXIT-ERROR = INVALID INVOCATION                          @Y30LB02 12400003
.*                                                             @Y30LB02 12450003
.*02    CONDITION = RETURN CODE = 12.                          @Y30LB02 12500003
.*                                                             @Y30LB02 12550003
.*02    OUTPUT = ERROR MESSAGE                                 @Y30LB02 12600003
.*                                                             @Y30LB02 12650003
.*01  EXTERNAL-REFERENCES = NONE                               @Y30LB02 12700003
.*                                                             @Y30LB02 12750003
.*01  TABLES = NONE                                            @Y30LB02 12800003
.*                                                             @Y30LB02 12850003
.*01 MESAGES = AS FOLLOWS:                                     @Y30LB02 12900003
.*                                                             @Y30LB02 12950003
.*                                                             @Y30LB02 13000003
.*           ICB602I: A NAME FOR THE REQUEST BLOCK MUST        @Y30LB02 13050003
.*                    BE SPECIFIED IN MF(2)                    @Y30LB02 13100003
.*           ICB604I: WARNING-ONLY THE MF PARAMETER IS         @Y30LB02 13150003
.*                    VALID FOR THE LIST FORM                  @Y30LB02 13200003
.*           ICB605I: ECB MUST BE SPECIFIED FOR                @Y30LB02 13250003
.*                    STANDARD FORM MACRO                      @Y30LB02 13300003
.*           ICB606I: EXTS MUST BE SPECIFIED FOR               @Y30LB02 13350003
.*                    STANDARD FORM MACRO                      @Y30LB02 13400003
.*           ICB607I: FLAGS MUST BE SPECIFIED FOR              @Y30LB02 13450003
.*                    STANDARD FORM MACRO                      @Y30LB02 13500003
.*           ICB610I: VOLID MUST BE SPECIFIED FOR              @Y30LB02 13550003
.*                    STANDARD FORM MACRO                      @Y30LB02 13600003
.*           ICB612I: MF(2) MUST CONTAIN REQ BLK NAME          @Y30LB02 13650003
.*                    IF EXEC MACRO FORM REQUESTED             @Y30LB02 13700003
.*           ICB613I: MISSING REQ BLK NAME OR MORE             @Y30LB02 13750003
.*                    THAN 2 SUBPARAMETERS FOR MF              @Y30LB02 13800003
.*           ICB615I: INVALID MF PARAMETER SPECIFIED,          @Y30LB02 13850003
.*                    MUST BE L, E, OR NULL                    @Y30LB02 13900003
.*                                                             @Y30LB02 13950003
.*                                                             @Y30LB02 14000003
.*01  INNER=MACRO = NONE                                       @Y30LB02 14050003
.*                                                             @Y30LB02 14100003
.*01  SYSTEM-MACROS = IHBINNRA                                 @Y30LB02 14150003
.*                                                             @Y30LB02 14200003
.*01  CHANGE-ACTIVITY = S/D = X04AC02 AND Y30LB02              @Y30LB02 14250003
.*                                                             @Y30LB02 14300003
.**** END OF SPECIFICATIONS ***                                @Y30LB02 14350003
         MACRO                                                          14400003
&SYMBOL  ICBCOTB &MF=,&VOLID=,&ECB=,&EXTS=,&FLAGS=                      14450003
         LCLB  &ESW                    EXIT-SWITCH             @Y30LB02 14500003
         LCLB  &BSW                    BRCH-SWITCH             @Y30LB02 14550003
         LCLC  &COTB                                           @Y30LB02 14600003
&COTB    SETC  'CT'.'&SYSNDX'                                  @Y30LB02 14650003
         AIF   ('&MF(1)' NE 'L').NLIST BRCH IF NOT LIST FORM   @Y30LB02 14700003
         AIF   ('&VOLID' NE '' OR '&ECB' NE '' OR '&EXTS' NE           *14750003
               '' OR '&FLAGS' NE '').WARN                      @Y30LB02 14800003
         AGO   .LIST                                           @Y30LB02 14850003
.WARN    MNOTE 4,'  ICB604I - WARNING-ONLY THE MF PARAMETER '  @Y30LB02 14900003
         MNOTE 4,'  IS VALID FOR THE LIST FORM  '              @Y30LB02 14950003
.LIST    ANOP                                                  @Y30LB02 15000003
         AIF   ('&MF(2)' EQ 'MAP').LISTDS   DSECT REQUESTED?   @Y30LB02 15050003
*  MACMEAN  MSSC COPY TABLES MACRO--INITIALIZED LIST FORM      @Y30LB02 15100003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 15150003
&SYMBOL  DS    0F                                              @Y30LB02 15200003
COTBLEN  DC    F'24'                   REQUEST BLK LENGTH      @Y30LB02 15250003
COTBOP   DC    XL1'16'                 COTB OPCODE             @Y30LB02 15300003
COTBRES1 DC    XL1'00'                 RESERVED FIELD          @Y30LB02 15350003
COTBFLAG DC    XL2'0000'               FLAGS FIELD             @Y30LB02 15400003
COTBEXT  DC    XL4'00000000'           EXTENTS FIELD           @Y30LB02 15450003
COTBVOL  DC    XL6'000000000000'       VOLID FIELD             @Y30LB02 15500003
COTBASID DC    XL2'0000'               ASID FIELD              @Y30LB02 15550003
COTBECB  DC    XL4'00000000'           ECB FIELD               @Y30LB02 15600003
         AGO   .EXIT                   BRANCH TO END           @Y30LB02 15650003
.*                                                             @Y30LB02 15700003
.LISTDS  ANOP                                                  @Y30LB02 15750003
*  MACMEAN  MSSC COPY TABLES MACRO--UNINITIALIZED LIST FORM    @Y30LB02 15800003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 15850003
ICBCOTB  DSECT                                                 @Y30LB02 15900003
COTBLEN  DS    F                       REQUEST LEN 18 HEX      @Y30LB02 15950003
COTBOP   DS    XL1                     COTB OPCODE 16 HEX      @Y30LB02 16000003
COTBRES1 DS    XL1                     RESERVED FIELD          @Y30LB02 16050003
COTBFLAG DS    XL2                     FLAGS FIELD             @Y30LB02 16100003
COTBEXT  DS    XL4                     EXTENTS FIELD           @Y30LB02 16150003
COTBVOL  DS    XL6                     VOLID FIELD             @Y30LB02 16200003
COTBASID DS    XL2                     ASID FIELD              @Y30LB02 16250003
COTBECB  DS    A                       ECB FIELD               @Y30LB02 16300003
         AGO   .EXIT                   BRANCH TO END           @Y30LB02 16350003
.NLIST   AIF   ('&MF(1)' NE '').EXCK   IF NOT STD FORM,BRCH    @Y30LB02 16400003
*  MACMEAN  MSSC COPY TABLES MACRO--STANDARD FORM              @Y30LB02 16450003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 16500003
         CNOP 0,4                                              @Y30LB02 16550003
&SYMBOL  BAL   1,&COTB                 BRCH AROUND REQBLK      @Y30LB02 16600003
COTBLEN  DC    A(&COTB-*)              REQUEST BLOCK LENGTH    @Y30LB02 16650003
COTBOP   DC    XL1'16'                 COTB OPCODE             @Y30LB02 16700003
COTBRES1 DC    XL1'00'                 RESERVED FIELD          @Y30LB02 16750003
COTBFLAG DC    XL2'0000'               FLAGS FIELD             @Y30LB02 16800003
COTBEXT  DC    XL4'00000000'           EXTENTS FIELD           @Y30LB02 16850003
COTBVOL  DC    XL6'000000000000'       VOLID FIELD             @Y30LB02 16900003
COTBASID DC    XL2'0000'               ASID FIELD              @Y30LB02 16950003
COTBECB  DC    XL4'00000000'           ECB FIELD               @Y30LB02 17000003
&COTB    EQU   *                                               @Y30LB02 17050003
         AGO   .TEST                   BRANCH                  @Y30LB02 17100003
.EXCK    AIF   ('&MF(1)' EQ 'E').EXEC  IF EXEC FORM,BRCH       @Y30LB02 17150003
&ESW     SETB  1                       TURN EXIT-SWITCH ON     @Y30LB02 17200003
         MNOTE 12,'  ICB615I - INVALID MF PARAMETER '          @Y30LB02 17250003
         MNOTE 12,'  SPECIFIED, MUST BE L, E, OR NULL '        @Y30LB02 17300003
         AGO   .TEST                   BRANCH                  @Y30LB02 17350003
.EXEC    AIF   (N'&MF EQ 2).CONT       IF 2 SUBPARAMETERS,BRCH @Y30LB02 17400003
&ESW     SETB  1                       TURN EXIT-SWITCH ON     @Y30LB02 17450003
         MNOTE 12,'  ICB613I - MISSING REQ BLK NAME OR MORE '  @Y30LB02 17500003
         MNOTE 12,'  THAN 2 SUBPARAMETERS FOR MF'              @Y30LB02 17550003
         AGO   .TEST                   BRANCH                  @Y30LB02 17600003
.CONT    ANOP                                                  @Y30LB02 17650003
.*                                                             @Y30LB02 17700003
*  MACMEAN  MSSC COPY TABLES MACRO--EXECUTE FORM               @Y30LB02 17750003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 17800003
&SYMBOL  IHBINNRA &MF(2)               ADDR OF REQUEST BLK     @Y30LB02 17850003
.*                                     USING IHBINNRA MACRO    @Y30LB02 17900003
         LA    15,24                   LENGTH(24) INTO R15     @Y30LB02 17950003
         ST    15,0(1)                 STORE R15 IN BLOCK      @Y30LB02 18000003
         MVI   4(1),X'16'              STORE  OPCODE           @Y30LB02 18050003
.TEST    AIF   (&ESW).EXIT             BRCH IF EXIT-SWITCH ON  @Y30LB02 18100003
         AIF   ('&FLAGS' NE '').TEST6  BRCH IF FLAGS SPECIFIED @Y30LB02 18150003
         AIF   ('&MF(1)' EQ '').SETESW0 BRCH IF STD FORM       @Y30LB02 18200003
&BSW     SETB  1                       TURN BRCH-SWITCH ON     @Y30LB02 18250003
         AGO   .TEST6                  BRANCH                  @Y30LB02 18300003
.SETESW0 ANOP                                                  @Y30LB02 18350003
&ESW     SETB  1                       TURN EXIT-SWITCH ON     @Y30LB02 18400003
         MNOTE 12,'  ICB607I - FLAGS MUST BE SPECIFIED '       @Y30LB02 18450003
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02 18500003
.TEST6   AIF   (&ESW).EXIT             BRCH IF EXIT-SWITCH ON  @Y30LB02 18550003
         AIF   (&BSW).RESET0           BRCH IF BRCH-SWITCH ON  @Y30LB02 18600003
         AIF   ('&FLAGS'(1,1) EQ '(').RFLAGS BRCH IF IN REG    @Y30LB02 18650003
         MVC   6(2,1),&FLAGS           MV FLAGS INTO FLAGS FLD @Y30LB02 18700003
         AGO   .RESET0                 BRANCH                  @Y30LB02 18750003
.RFLAGS  ANOP                                                  @Y30LB02 18800003
         MVC   6(2,1),0(&FLAGS(1))     MV FLAGS TO FLAGS FLD   @Y30LB02 18850003
.RESET0  ANOP                                                  @Y30LB02 18900003
&BSW     SETB  0                                               @Y30LB02 18950003
         AIF   (&ESW).EXIT             BRCH IF EXIT-SWITCH ON  @Y30LB02 19000003
         AIF   ('&VOLID' NE '').TEST2  BRCH IF VOLID SPECIFIED @Y30LB02 19050003
         AIF   ('&MF(1)' EQ '').SETESW1 BRCH IF STD FORM       @Y30LB02 19100003
&BSW     SETB  1                       TURN BRCH-SWITCH ON     @Y30LB02 19150003
         AGO   .TEST2                  BRANCH                  @Y30LB02 19200003
.SETESW1 ANOP                                                  @Y30LB02 19250003
&ESW     SETB  1                       TURN EXIT-SWITCH ON     @Y30LB02 19300003
         MNOTE 12,'  ICB610I - VOLID MUST BE SPECIFIED '       @Y30LB02 19350003
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02 19400003
.TEST2   AIF   (&ESW).EXIT             BRCH IF EXIT-SWITCH ON  @Y30LB02 19450003
         AIF   (&BSW).RESET1           BRCH IF BRCH-SWITCH ON  @Y30LB02 19500003
         AIF   ('&VOLID'(1,1) EQ '(').RVOLID BRCH IF IN REG    @Y30LB02 19550003
         MVC   8(6,1),&VOLID           MV VOLID INTO VOLID FLD @Y30LB02 19600003
         AGO   .RESET1                 BRANCH                  @Y30LB02 19650003
.RVOLID  ANOP                                                  @Y30LB02 19700003
         MVC   8(6,1),0(&VOLID(1))     MV VOLID TO VOLID FLD   @Y30LB02 19750003
.RESET1  ANOP                                                  @Y30LB02 19800003
&BSW     SETB  0                       RESET BRCH-SWITCH TO 0  @Y30LB02 19850003
         AIF   ('&ECB' NE '').TEST3    BRCH IF ECB SPECIFIED   @Y30LB02 19900003
         AIF   ('&MF(1)' EQ '').SETESW2 BRCH IF STD FORM       @Y30LB02 19950003
&BSW     SETB  1                       TURN BRCH-SWITCH ON     @Y30LB02 20000003
         AGO   .TEST3                  BRANCH                  @Y30LB02 20050003
.SETESW2 ANOP                                                  @Y30LB02 20100003
&ESW     SETB  1                       TURN EXIT-SWITCH ON     @Y30LB02 20150003
         MNOTE 12,'  ICB605I - ECB MUST BE SPECIFIED FOR '     @Y30LB02 20200003
         MNOTE 12,'  STANDARD FORM MACRO '                     @Y30LB02 20250003
.TEST3   AIF   (&ESW).EXIT             BRCH IF EXIT-SWITCH ON  @Y30LB02 20300003
         AIF   (&BSW).RESET2           BRCH IF BRCH-SWITCH ON  @Y30LB02 20350003
         AIF   ('&ECB'(1,1) EQ '(').RECB BRCH IF IN REG        @Y30LB02 20400003
         LA    15,&ECB                 LOAD R15 WITH ADDR      @Y30LB02 20450003
         ST    15,16(1)                ST ADDR IN ECB FIELD    @Y30LB02 20500003
         AGO   .RESET2                 BRANCH                  @Y30LB02 20550003
.RECB    ANOP                                                  @Y30LB02 20600003
         ST    &ECB,16(1)              ST ADDR IN ECB FIELD    @Y30LB02 20650003
.RESET2  ANOP                                                  @Y30LB02 20700003
&BSW     SETB  0                       RESET BRCH-SWITCH TO 0  @Y30LB02 20750003
         AIF   ('&EXTS' NE '').TEST4   BRCH IF EXTS SPECIFIED  @Y30LB02 20800003
         AIF   ('&MF(1)' EQ '').SETESW3 BRCH IF STD FORM       @Y30LB02 20850003
&BSW     SETB  1                       TURN BRCH-SWITCH ON     @Y30LB02 20900003
         AGO   .TEST4                  BRANCH                  @Y30LB02 20950003
.SETESW3 ANOP                                                  @Y30LB02 21000003
&ESW     SETB  1                       TURN EXIT-SWITCH ON     @Y30LB02 21050003
         MNOTE 12,'  ICB606I - EXTS MUST BE SPECIFIED FOR '    @Y30LB02 21100003
         MNOTE 12,'  STANDARD FORM MACRO '                     @Y30LB02 21150003
.TEST4   AIF   (&ESW).EXIT             BRCH IF EXIT-SWITCH ON  @Y30LB02 21200003
         AIF   (&BSW).LINK             BRCH IF BRCH-SWITCH ON  @Y30LB02 21250003
         AIF   ('&EXTS'(1,1) EQ '(').REXTS BRCH IF IN REG      @Y30LB02 21300003
         MVC   20(4,1),&EXTS           MV EXTS INTO EXTS FLD   @Y30LB02 21350003
         AGO   .LINK                   BRANCH                  @Y30LB02 21400003
.REXTS   ANOP                                                  @Y30LB02 21450003
         MVC   20(4,1),0(&EXTS(1))     MV EXTS TO EXTS FLD     @Y30LB02 21500003
.LINK    ANOP                                                  @Y30LB02 21550003
         SVC   126                     ISSUE SVC INSTRUCTION   @Y30LB02 21600003
.EXIT    MEND                                                  @Y30LB02 21650003
**/                                                                     21700003
* ICBCOTB: MACRO KEYS(MF,VOLID,ECB,EXTS,FLAGS);            /*@Y30LB02*/ 21750003
*/*                                                          @Y30LB02*/ 21800003
*/* EXTERNAL DECLARES                                        @Y30LB02*/ 21850003
*   DCL COTBTEST FIXED EXT;            /*USED AS A TEST TO   @Y30LB02*/ 21900003
*                                      /*SEE IF STD FORM     @Y30LB02*/ 21950003
*                                      /*ALREADY INVOKED     @Y30LB02*/ 22000003
*   DCL COTESTR1 FIXED EXT;            /*USED AS A TEST TO   @Y30LB02*/ 22050003
*                                      /*SEE IF R1 ALREADY   @Y30LB02*/ 22100003
*                                      /*DECLARED            @Y30LB02*/ 22150003
*/* INTERNAL DECLARES                                        @Y30LB02*/ 22200003
*   DCL  RETCODE FIXED;                /*RETURN CODE         @Y30LB02*/ 22250003
*   DCL  COPCODE CHAR;                 /*COPY TABLES OPCODE  @Y30LB02*/ 22300003
*   DCL  LENGTH CHAR;                  /*LENGTH OF BLOCK     @Y30LB02*/ 22350003
*   DCL  ESW FIXED;                    /*EXIT-SWITCH         @Y30LB02*/ 22400003
*   DCL  BSW FIXED;                    /*BRCH-SWITCH         @Y30LB02*/ 22450003
*   DCL  CTR FIXED;                    /*PARM-SWITCH         @Y30LB02*/ 22500003
*   COPCODE='16';                      /*COPY TABLES OPCODE  @Y30LB02*/ 22550003
*   LENGTH='18';                       /*DEFINE REQ LENGTH   @Y30LB02*/ 22600003
*/* INITIALIZE SWITCHES TO ZERO                              @Y30LB02*/ 22650003
*   ESW=0;                             /*INIT ERROR SWITCH   @Y30LB02*/ 22700003
*   BSW=0;                             /*INIT BRANCH SWITCH  @Y30LB02*/ 22750003
*   CTR=0;                             /*INIT PARM  SWITCH   @Y30LB02*/ 22800003
*/* END OF DECLARES AND INITIALIZATION                       @Y30LB02*/ 22850003
*   IF COTESTR1=0 THEN                 /*HAS R1 BEEN DCL'D?  @Y30LB02*/ 22900003
*             DO;                      /*NO,DECLARE IT       @Y30LB02*/ 22950003
*                  ANS('DCL COTBR1 PTR REG(1) ;'||         /*@Y30LB02*/ 23000003
*                       '/*WILL CONTAIN BLOCK ADDRESS @Y30LB02*/')      23050003
*                       SKIP(1);                           /*@Y30LB02*/ 23100003
*                  COTESTR1=1;         /*COTESTR1 SET TO 1   @Y30LB02*/ 23150003
*             END;                     /*                    @Y30LB02*/ 23200003
*   IF MF(1)¬='L' THEN                 /*IF NOT LIST FORM    @Y30LB02*/ 23250003
*        GO TO NOTLIST;                /*THEN BRANCH         @Y30LB02*/ 23300003
*   IF MF(2)='' THEN                   /*WAS A NAME GIVEN?   @Y30LB02*/ 23350003
*        DO;                           /*NO,TURN ESW ON AND  @Y30LB02*/ 23400003
*             ESW=1;                   /*PRINT ERROR MSG     @Y30LB02*/ 23450003
*             ANS MSG('  ICB602I - A NAME FOR THE '||                   23500003
*                  'REQUEST BLOCK MUST BE SPECIFIED '||                 23550003
*                  'IN MF(2)')SKIP(5);                     /*@Y30LB02*/ 23600003
*             RETCODE=12;              /*SET RETURN CODE     @Y30LB02*/ 23650003
*        END;                          /*                    @Y30LB02*/ 23700003
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y30LB02*/ 23750003
*        GO TO EXIT;                   /*YES, BRANCH         @Y30LB02*/ 23800003
*        IF FLAGS ¬= '' THEN  /*FLAGS SPECIFIED?             @Y30LB02*/ 23850003
*             CTR = CTR + 1;  /*YES,INCREMENT CTR            @Y30LB02*/ 23900003
*        IF VOLID ¬= '' THEN  /*VOLID SPECIFIED?             @Y30LB02*/ 23950003
*             CTR = CTR + 1; /*YES,INCREMENT COUNTER         @Y30LB02*/ 24000003
*        IF EXTS ¬= '' THEN   /*EXTENTS SPECIFIED?           @Y30LB02*/ 24050003
*             CTR = CTR + 1;  /*YES,INCREMENT COUNTER        @Y30LB02*/ 24100003
*        IF ECB ¬= '' THEN    /*ECB SPECIFIED?               @Y30LB02*/ 24150003
*             CTR = CTR + 1;  /*YES,INCREMENT COUNTER        @Y30LB02*/ 24200003
*        IF CTR > 0 THEN      /*COUNTER GT ZERO?             @Y30LB02*/ 24250003
*          DO;                /*YES,PRINT WARNING MSG        @Y30LB02*/ 24300003
*             RETCODE = 4;    /*SET RETURN CODE TO 4         @Y30LB02*/ 24350003
*             ANS MSG('  ICB604I - WARNING-ONLY'||                      24400003
*                 ' THE MF PARAMETER IS VALID FOR THE'||                24450003
*                 ' LIST FORM  ')SKIP;                     /*@Y30LB02*/ 24500003
*          END;               /*                             @Y30LB02*/ 24550003
*   IF MF(3) ¬= '' THEN                /*PLS ATTR SPCD?      @Y30LB02*/ 24600003
*        GO TO ATTRLST;                /*BRANCH              @Y30LB02*/ 24650003
*/*                                                          @Y30LB02*/ 24700003
*/*********************************************************  @Y30LB02*/ 24750003
*/* PRINT OUT DECLARES FOR LIST FORM                         @Y30LB02*/ 24800003
*/*********************************************************  @Y30LB02*/ 24850003
*/*                                                          @Y30LB02*/ 24900003
*   ANS('/*******************************************'||                24950003
*       '************** @Y30LB02*/')SKIP;                               25000003
*   ANS('/*    MACMEAN  MSSC COPY TABLES MACRO       '||                25050003
*       '               @Y30LB02*/')SKIP;                               25100003
*   ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||                25150003
*       '               @Y30LB02*/')SKIP;                               25200003
*   ANS('/*THIS IS THE INITIALIZED LIST FORM         '||                25250003
*       '               @Y30LB02*/')SKIP;                               25300003
*   ANS('/*******************************************'||                25350003
*       '************** @Y30LB02*/')SKIP;                               25400003
*   ANS('DCL 1  '||MF(2)||'  STATIC LOCAL,') SKIP(1);      /*@Y30LB02*/ 25450003
*   ANS('      2  COTBLL FIXED(31) INIT('||QUOTE('18')||                25500003
*        'X), /*LENGTH OF REQUEST BLOCK @Y30LB02*/') SKIP(1);           25550003
*   ANS('      2  COTBOP FIXED(8) INIT('||QUOTE(COPCODE)||              25600003
*        'X), /*OPCODE @Y30LB02*/') SKIP(1);                            25650003
*   ANS('      2  * CHAR(1) INIT('||QUOTE('00')||                       25700003
*        'X), /*RESERVED AREA @Y30LB02*/') SKIP(1);                     25750003
*   ANS('      2  COTBFLG BIT(16) INIT('||                              25800003
*        QUOTE('0000000000000000')||'B), /*FLAGS FIELD @Y30LB02*/')     25850003
*        SKIP(1);                                          /*@Y30LB02*/ 25900003
*   ANS('        3  COTBTID BIT(4),/*TABLE IDENTIFI'||                  25950003
*        'CATION, MUST BE SET TO 8 FOR TABLES OTHER '||                 26000003
*        'THAN TRACE  @Y30LB02*/') SKIP(1);                             26050003
*   ANS('        3  *       BIT(4),/*RESERVED BITS'||                   26100003
*        ' AND MUST BE ZERO @Y30LB02*/') SKIP(1);                       26150003
*   ANS('        3  COTBTRX BIT(1),/*COPY TRACEX'||                     26200003
*        ' ATTRIBUTE @Y30LB02*/') SKIP(1);                              26250003
*   ANS('        3  COTBTRY BIT(1),/*COPY TRACEY'||                     26300003
*        ' ATTRIBUTE @Y30LB02*/') SKIP(1);                              26350003
*   ANS('        3  COTBTRA BIT(1),/*COPY TRACE'||                      26400003
*        ' ACTIVE ATTRIBUTE @Y30LB02*/') SKIP(1);                       26450003
*   ANS('        3  COTBTRI BIT(1),/*COPY TRACE'||                      26500003
*        ' INACTIVE ATTRIBUTE @Y30LB02*/') SKIP(1);                     26550003
*   ANS('        3  *       BIT(4),/*RESERVED BITS '||                  26600003
*        'AND MUST BE ZERO @Y30LB02*/') SKIP(1);                        26650003
*   ANS('      2  COTBEXTS CHAR(4) INIT('||QUOTE('00000000')            26700003
*        ||'X), /*BEG AND END EXTENTS @Y30LB02*/') SKIP(1);             26750003
*   ANS('      2  COTBVOL CHAR(6) INIT('||                              26800003
*        QUOTE('000000000000')||'X), /*VOLID FIELD @Y30LB02*/')         26850003
*        SKIP(1);                                                       26900003
*   ANS('      2  COTBASID CHAR(2) INIT('||QUOTE('0000')||              26950003
*        'X), /*ASID FIELD @Y30LB02*/') SKIP(1);                        27000003
*   ANS('      2  COTBECB FIXED(31) INIT(0);/*NAME OF ECB @Y30LB02*/')  27050003
*        SKIP(1);                                          /*@Y30LB02*/ 27100003
*/*                                                          @Y30LB02*/ 27150003
*   GO TO EXIT;                        /*BRANCH TO END       @Y30LB02*/ 27200003
*/*********************************************************  @Y30LB02*/ 27250003
*/* THIS IS ALL THAT IS DONE FOR LIST FORM                   @Y30LB02*/ 27300003
*/*********************************************************  @Y30LB02*/ 27350003
*/*                                                          @Y30LB02*/ 27400003
*ATTRLST:                                                               27450003
*/*                                                          @Y30LB02*/ 27500003
*   ANS('/*******************************************'||                27550003
*       '************* @Y30LB02*/')SKIP;                                27600003
*   ANS('/*     MACMEAN  MSSC COPY TABLES MACRO      '||                27650003
*       '              @Y30LB02*/')SKIP;                                27700003
*   ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||                27750003
*       '              @Y30LB02*/')SKIP;                                27800003
*   ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||                27850003
*       '              @Y30LB02*/')SKIP;                                27900003
*   ANS('/*******************************************'||                27950003
*       '************* @Y30LB02*/')SKIP;                                28000003
*   ANS('DCL 1  '||MF(2)||' '||MF(3)||','||                             28050003
*   '/*COPY TABLES REQUEST BLOCK*/ ') SKIP(1);                          28100003
*   ANS('      2  COTBLL FIXED(31), /*LENGTH'||                         28150003
*        ' = 18 BYTES HEX @Y30LB02*/')SKIP(1);                          28200003
*   ANS('      2  COTBOP FIXED(8) , /*OPCODE='||                        28250003
*        ' 16 HEX @Y30LB02*/') SKIP(1);                                 28300003
*   ANS('      2  * CHAR(1), /*RESERVED AREA @Y30LB02*/') SKIP(1);      28350003
*   ANS('      2  COTBFLG BIT(16),'||                                   28400003
*        ' /*FLAGS FIELD @Y30LB02*/') SKIP(1);                          28450003
*   ANS('        3  COTBTID BIT(4),/*TABLE IDENTIFI'||                  28500003
*        'CATION, MUST BE SET TO 8 FOR TABLES OTHER '||                 28550003
*        'THAN TRACE  @Y30LB02*/') SKIP(1);                             28600003
*   ANS('        3  *       BIT(4),/*RESERVED BITS'||                   28650003
*        ' AND MUST BE ZERO @Y30LB02*/') SKIP(1);                       28700003
*   ANS('        3  COTBTRX BIT(1),/*COPY TRACEX'||                     28750003
*        ' ATTRIBUTE @Y30LB02*/') SKIP(1);                              28800003
*   ANS('        3  COTBTRY BIT(1),/*COPY TRACEY'||                     28850003
*        ' ATTRIBUTE @Y30LB02*/') SKIP(1);                              28900003
*   ANS('        3  COTBTRA BIT(1),/*COPY TRACE'||                      28950003
*        ' ACTIVE ATTRIBUTE @Y30LB02*/') SKIP(1);                       29000003
*   ANS('        3  COTBTRI BIT(1),/*COPY TRACE'||                      29050003
*        ' INACTIVE ATTRIBUTE @Y30LB02*/') SKIP(1);                     29100003
*   ANS('        3  *       BIT(4),/*RESERVED BITS '||                  29150003
*        'AND MUST BE ZERO @Y30LB02*/') SKIP(1);                        29200003
*   ANS('      2  COTBEXTS CHAR(4),'||                                  29250003
*        ' /*BEG AND END EXTENTS @Y30LB02*/') SKIP(1);                  29300003
*   ANS('      2  COTBVOL CHAR(6),'||                                   29350003
*        ' /*VOLID FIELD @Y30LB02*/') SKIP(1);                          29400003
*   ANS('      2  COTBASID CHAR(2), /*ASID AREA '||                     29450003
*        'USED BY THE SVC @Y30LB02*/') SKIP(1);                         29500003
*   ANS('      2  COTBECB FIXED(31);/*NAME OF ECB @Y30LB02*/')          29550003
*        SKIP(1);                                          /*@Y30LB02*/ 29600003
*   GO TO EXIT;                        /*BRANCH TO END       @Y30LB02*/ 29650003
*NOTLIST:                                                               29700003
*   IF MF(1)¬='' THEN                  /*STD FORM REQUEST?   @Y30LB02*/ 29750003
*        GO TO EXCHECK;                /*NO,BRANCH           @Y30LB02*/ 29800003
*/*                                                          @Y30LB02*/ 29850003
*/*********************************************************  @Y30LB02*/ 29900003
*/* THIS PART OF THE MACRO IS FOR STD FORM(MF(1)='')         @Y30LB02*/ 29950003
*/*********************************************************  @Y30LB02*/ 30000003
*/*                                                          @Y30LB02*/ 30050003
*   IF COTBTEST=1 THEN                 /*IF THE STD FRM HAS  @Y30LB02*/ 30100003
*                                      /*BEEN INVOKED ALRDY  @Y30LB02*/ 30150003
*        DO;                           /*SET UP REG1 TO PNT  @Y30LB02*/ 30200003
*                                      /*TO REQUEST BLOCK    @Y30LB02*/ 30250003
*           ANS('/***********************************'||                30300003
*               '********************* @Y30LB02*/')SKIP;                30350003
*           ANS('/*     MACMEAN  MSSC COPY TABLES    '||                30400003
*               ' MACRO                @Y30LB02*/')SKIP;                30450003
*           ANS('/*     VS1-4/VS2-3 VERSION--06/09/74'||                30500003
*               'LEVEL 00              @Y30LB02*/')SKIP;                30550003
*           ANS('/*     THIS IS THE OUTPUT FOR A     '||                30600003
*               'SECONDARY             @Y30LB02*/')SKIP;                30650003
*           ANS('/*     INVOCATION OF THE STANDARD   '||                30700003
*               'FORM MACRO            @Y30LB02*/')SKIP;                30750003
*           ANS('/***********************************'||                30800003
*               '********************* @Y30LB02*/')SKIP;                30850003
*             ANS('RFY(COTBR1)RSTD;'||                     /*@Y30LB02*/ 30900003
*                '/*RESTRICT REGISTER 1 @Y30LB02*/')SKIP(1);            30950003
*             ANS('COTBR1=ADDR(COTBLL);'||                 /*@Y30LB02*/ 31000003
*                '/*COTBR1 ADDRESS OF REQ BLOCK @Y30LB02*/')SKIP(1);    31050003
*             GO TO TEST1;                                 /*@Y30LB02*/ 31100003
*        END;                                              /*@Y30LB02*/ 31150003
*/*                                                          @Y30LB02*/ 31200003
*/*********************************************************  @Y30LB02*/ 31250003
*/* OTHERWISE, PRINT OUT DECLARES FOR STD FORM               @Y30LB02*/ 31300003
*/*********************************************************  @Y30LB02*/ 31350003
*/*                                                          @Y30LB02*/ 31400003
*   ANS('/*******************************************'||                31450003
*       '************* @Y30LB02*/')SKIP;                                31500003
*   ANS('/*     MACMEAN  MSSC COPY TABLES MACRO      '||                31550003
*       '              @Y30LB02*/')SKIP;                                31600003
*   ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||                31650003
*       '              @Y30LB02*/')SKIP;                                31700003
*   ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||                31750003
*       '              @Y30LB02*/')SKIP;                                31800003
*   ANS('/*******************************************'||                31850003
*       '************* @Y30LB02*/')SKIP;                                31900003
*   ANS ('DCL  1 COTBLIST  STATIC LOCAL,') SKIP(1);        /*@Y30LB02*/ 31950003
*   ANS('      2  COTBLL FIXED(31) INIT('||QUOTE('18')||                32000003
*        'X), /*LENGTH OF REQUEST BLOCK @Y30LB02*/') SKIP(1);           32050003
*   ANS('      2  COTBOP FIXED(8) INIT('||QUOTE(COPCODE)||              32100003
*        'X), /*OPCODE @Y30LB02*/') SKIP(1);                            32150003
*   ANS('      2  * CHAR(1) INIT('||QUOTE('00')||                       32200003
*        'X), /*RESERVED AREA @Y30LB02*/') SKIP(1);                     32250003
*   ANS('      2  COTBFLG BIT(16) INIT('||                              32300003
*        QUOTE('0000000000000000')||'B), /*FLAGS FIELD @Y30LB02*/')     32350003
*        SKIP(1);                                                       32400003
*   ANS('        3  COTBTID BIT(4),/*TABLE IDENTIFI'||                  32450003
*        'CATION @Y30LB02*/') SKIP(1);                                  32500003
*   ANS('        3  *       BIT(4),/*RESERVED BITS'||                   32550003
*        ' AND MUST BE ZERO @Y30LB02*/') SKIP(1);                       32600003
*   ANS('        3  COTBTRX BIT(1),/*COPY TRACEX'||                     32650003
*        ' ATTRIBUTE @Y30LB02*/') SKIP(1);                              32700003
*   ANS('        3  COTBTRY BIT(1),/*COPY TRACEY'||                     32750003
*        ' ATTRIBUTE @Y30LB02*/') SKIP(1);                              32800003
*   ANS('        3  COTBTRA BIT(1),/*COPY TRACE'||                      32850003
*        ' ACTIVE ATTRIBUTE @Y30LB02*/') SKIP(1);                       32900003
*   ANS('        3  COTBTRI BIT(1),/*COPY TRACE'||                      32950003
*        ' INACTIVE ATTRIBUTE @Y30LB02*/') SKIP(1);                     33000003
*   ANS('        3  *       BIT(4),/*RESERVED BITS '||                  33050003
*        'AND MUST BE ZERO @Y30LB02*/') SKIP(1);                        33100003
*   ANS('      2  COTBEXTS CHAR(4) INIT('||QUOTE('00000000')            33150003
*        ||'X), /*BEG AND END EXTENTS @Y30LB02*/') SKIP(1);             33200003
*   ANS('      2  COTBVOL CHAR(6) INIT('||                              33250003
*        QUOTE('000000000000')||'X), /*VOLID FIELD @Y30LB02*/')         33300003
*        SKIP(1);                                                       33350003
*   ANS('      2  COTBASID CHAR(2) INIT('||QUOTE('0000')||              33400003
*        'X), /*ASID FIELD @Y30LB02*/') SKIP(1);                        33450003
*   ANS('      2  COTBECB FIXED(31) INIT(0);/*NAME OF ECB @Y30LB02*/')  33500003
*        SKIP(1);                                          /*@Y30LB02*/ 33550003
*/*                                                          @Y30LB02*/ 33600003
*   COTBTEST=1;                        /*SET SWITCH TO 1     @Y30LB02*/ 33650003
*/*                                                          @Y30LB02*/ 33700003
*/*********************************************************  @Y30LB02*/ 33750003
*/* END OF DECLARES FOR REQUEST BLOCK                        @Y30LB02*/ 33800003
*/*********************************************************  @Y30LB02*/ 33850003
*/*                                                          @Y30LB02*/ 33900003
*   ANS('RFY(COTBR1)RSTD;/*RESTRICT REGISTER 1 @Y30LB02*/')SKIP;        33950003
*   ANS('COTBR1=ADDR(COTBLL);/*COTBR1  ADDR OF REQBLK @Y30LB02*/')      34000003
*        SKIP(1);                                          /*@Y30LB02*/ 34050003
*   GO TO TEST1;                       /*BRANCH              @Y30LB02*/ 34100003
*/*                                                          @Y30LB02*/ 34150003
*/*********************************************************  @Y30LB02*/ 34200003
*/* THE MACRO BRANCHES HERE FOR EXEC FORM                    @Y30LB02*/ 34250003
*/*********************************************************  @Y30LB02*/ 34300003
*/*                                                          @Y30LB02*/ 34350003
*EXCHECK: IF MF(1)='E' THEN            /*EXEC FORM?          @Y30LB02*/ 34400003
*             GO TO EXFORM;            /*YES, BRANCH         @Y30LB02*/ 34450003
*   ESW=1;                             /*TURN EXIT-SWTCH ON  @Y30LB02*/ 34500003
*   DO;                                /*PRINT THIS ERR MSG  @Y30LB02*/ 34550003
*        ANS MSG('  ICB615I - INVALID MF PARAMETER'||                   34600003
*             ' SPECIFIED, MUST BE L, E, OR NULL') SKIP(5);/*@Y30LB02*/ 34650003
*   END;                                /*                   @Y30LB02*/ 34700003
*   RETCODE=12;                        /*SET RETURN CODE     @Y30LB02*/ 34750003
*   GO TO TEST1;                       /*BRANCH              @Y30LB02*/ 34800003
*EXFORM: IF MF(2)='' THEN              /*ADDR OF LIST GIVEN  @Y30LB02*/ 34850003
*             DO;                      /*NO,PRINT ERROR MSG  @Y30LB02*/ 34900003
*                  ESW=1;              /*TURN EXIT-SWTCH ON  @Y30LB02*/ 34950003
*                  ANS MSG('  ICB612I - MF(2) MUST '||                  35000003
*                  'CONTAIN REQ BLK NAME IF '||                         35050003
*                  'EXEC MACRO FORM REQUESTED ') SKIP(5);  /*@Y30LB02*/ 35100003
*                  RETCODE=12;         /*SET RETURN CODE     @Y30LB02*/ 35150003
*                  GO TO TEST1;        /*BRANCH              @Y30LB02*/ 35200003
*             END;                     /*                    @Y30LB02*/ 35250003
*   ANS('/*******************************************'||                35300003
*       '************* @Y30LB02*/')SKIP;                                35350003
*   ANS('/*     MACMEAN  MSSC COPY TABLES MACRO      '||                35400003
*       '              @Y30LB02*/')SKIP;                                35450003
*   ANS('/*VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00   '||                35500003
*       '              @Y30LB02*/')SKIP;                                35550003
*   ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '||                35600003
*       '              @Y30LB02*/')SKIP;                                35650003
*   ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '||                35700003
*       '              @Y30LB02*/')SKIP;                                35750003
*   ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'||                35800003
*       '              @Y30LB02*/')SKIP;                                35850003
*   ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '||                35900003
*       '              @Y30LB02*/')SKIP;                                35950003
*   ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '||                36000003
*       '              @Y30LB02*/')SKIP;                                36050003
*   ANS('/*******************************************'||                36100003
*       '************* @Y30LB02*/')SKIP;                                36150003
*   ANS('RFY(COTBR1)RSTD;/*RESTRICT REGISTER 1 @Y30LB02*/')SKIP;        36200003
*   ANS('COTBR1=ADDR('||MF(2)||                                         36250003
*        '); /*SET COTBR1 TO ADDR OF REQ BLK @Y30LB02*/') SKIP(1);      36300003
*  IF MF(3) = 'COMPLETE' THEN    /*REQUEST TO ZERO?          @Y30LB02*/ 36350003
*   DO;                          /*YES,ZERO BLK              @Y30LB02*/ 36400003
*   ANS(' '||MF(2)||'='||MF(2)||'&&'||MF(2)||';'||         /*@Y30LB02*/ 36450003
*       '/*ZERO REQUEST BLOCK @Y30LB02*/')SKIP;                         36500003
*   END;                        /*                           @Y30LB02*/ 36550003
*   ANS('COTBLL='||QUOTE(LENGTH)||'X;'||                   /*@Y30LB02*/ 36600003
*       '/*SET LENGTH FIELD @Y30LB02*/')SKIP(1);                        36650003
*   ANS('COTBOP='||QUOTE(COPCODE)||'X; /*OPCODE @Y30LB02*/') SKIP(1);   36700003
*TEST1: BSW=0;                                             /*@Y30LB02*/ 36750003
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y30LB02*/ 36800003
*        GO TO EXIT;                   /*YES, BRANCH TO END  @Y30LB02*/ 36850003
*   IF FLAGS='' THEN                   /*FLAGS SPECIFIED?    @Y30LB02*/ 36900003
*        DO;                           /*NO,CHECK FOR STD    @Y30LB02*/ 36950003
*             IF MF(1)='' THEN         /*FORM                @Y30LB02*/ 37000003
*                  DO;                 /*IF STD FORM,TURN    @Y30LB02*/ 37050003
*                       ESW=1;         /*EXIT-SWITCH ON AND  @Y30LB02*/ 37100003
*                                      /*PRINT ERROR MSG     @Y30LB02*/ 37150003
*                       ANS MSG('  ICB607I - FLAGS'||                   37200003
*                        ' MUST BE SPECIFIED FOR STANDARD'||            37250003
*                        ' FORM MACRO') SKIP(5);           /*@Y30LB02*/ 37300003
*                       RETCODE=12;    /*SET RETURN CODE     @Y30LB02*/ 37350003
*                  END;                /*                    @Y30LB02*/ 37400003
*             ELSE                     /*IF NOT STD FORM     @Y30LB02*/ 37450003
*                  BSW=1;              /*TURN BRCH-SWTCH ON  @Y30LB02*/ 37500003
*        END;                          /*                    @Y30LB02*/ 37550003
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y30LB02*/ 37600003
*        GO TO EXIT;                   /*YES, GO TO END      @Y30LB02*/ 37650003
*   IF BSW=1 THEN                      /*BRCH-SWITCH ON?     @Y30LB02*/ 37700003
*        GO TO VOLCHECK;               /*YES,GO CK FOR ECB   @Y30LB02*/ 37750003
*   ANS('COTBFLG='||FLAGS||';/*FILL IN FLAGS FIELD @Y30LB02*/')         37800003
*        SKIP(1);                                          /*@Y30LB02*/ 37850003
*VOLCHECK:  BSW=0;                                         /*@Y30LB02*/ 37900003
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y30LB02*/ 37950003
*        GO TO EXIT;                   /*YES, BRANCH TO END  @Y30LB02*/ 38000003
*   IF VOLID='' THEN                   /*VOLID SPECIFIED?    @Y30LB02*/ 38050003
*        DO;                           /*NO,CHECK FOR STD    @Y30LB02*/ 38100003
*             IF MF(1)='' THEN         /*FORM                @Y30LB02*/ 38150003
*                  DO;                 /*IF STD FORM,TURN    @Y30LB02*/ 38200003
*                       ESW=1;         /*EXIT-SWITCH ON AND  @Y30LB02*/ 38250003
*                                      /*PRINT ERROR MSG     @Y30LB02*/ 38300003
*                       ANS MSG('  ICB610I - VOLID'||                   38350003
*                        ' MUST BE SPECIFIED FOR STANDARD'||            38400003
*                        ' FORM MACRO') SKIP(5);           /*@Y30LB02*/ 38450003
*                       RETCODE=12;    /*SET RETURN CODE     @Y30LB02*/ 38500003
*                  END;                /*                    @Y30LB02*/ 38550003
*             ELSE                     /*IF NOT STD FORM     @Y30LB02*/ 38600003
*                  BSW=1;              /*TURN BRCH-SWTCH ON  @Y30LB02*/ 38650003
*        END;                          /*                    @Y30LB02*/ 38700003
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y30LB02*/ 38750003
*        GO TO EXIT;                   /*YES, GO TO END      @Y30LB02*/ 38800003
*   IF BSW=1 THEN                      /*BRCH-SWITCH ON?     @Y30LB02*/ 38850003
*        GO TO ECBCHECK;               /*YES,GO CK FOR ECB   @Y30LB02*/ 38900003
*   ANS('COTBVOL='||VOLID||';/*FILL IN VOLID FIELD @Y30LB02*/')         38950003
*        SKIP(1);                                                       39000003
*ECBCHECK:  BSW=0;                     /*RESET BRCH-SWITCH   @Y30LB02*/ 39050003
*   IF ECB='' THEN                     /*ECB   SPECIFIED?    @Y30LB02*/ 39100003
*        DO;                           /*NO,CHECK FOR STD    @Y30LB02*/ 39150003
*             IF MF(1)='' THEN          /*FORM               @Y30LB02*/ 39200003
*                  DO;                 /*IF STD FORM,TURN    @Y30LB02*/ 39250003
*                       ESW=1;         /*EXIT-SWITCH ON AND  @Y30LB02*/ 39300003
*                                      /*PRINT ERROR MSG     @Y30LB02*/ 39350003
*                       ANS MSG('  ICB605I - ECB'||                     39400003
*                        ' MUST BE SPECIFIED FOR STANDARD'||            39450003
*                        ' FORM MACRO') SKIP(5);           /*@Y30LB02*/ 39500003
*                       RETCODE=12;    /*SET RETURN CODE     @Y30LB02*/ 39550003
*                  END;                                    /*@Y30LB02*/ 39600003
*             ELSE                     /*IF NOT STD FORM     @Y30LB02*/ 39650003
*                  BSW=1;              /*TURN BRCH-SWTCH ON  @Y30LB02*/ 39700003
*        END;                                              /*@Y30LB02*/ 39750003
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y30LB02*/ 39800003
*        GO TO EXIT;                   /*YES, GO TO END      @Y30LB02*/ 39850003
*   IF BSW=1 THEN                      /*BRCH-SWITCH ON?     @Y30LB02*/ 39900003
*        GO TO EXTSCK;                 /*YES,GO CK FOR EXTS  @Y30LB02*/ 39950003
*   ANS('COTBECB=ADDR'||ECB||';/*FILL IN ECB FIELD @Y30LB02*/')         40000003
*        SKIP(1);                                          /*@Y30LB02*/ 40050003
*EXTSCK:  BSW=0;                       /*RESET BRCH-SWITCH   @Y30LB02*/ 40100003
*   IF EXTS='' THEN                    /*EXTS  SPECIFIED?    @Y30LB02*/ 40150003
*        DO;                           /*NO,CHECK FOR STD    @Y30LB02*/ 40200003
*             IF MF(1)='' THEN         /*FORM                @Y30LB02*/ 40250003
*                  DO;                 /*IF STD FORM,TURN    @Y30LB02*/ 40300003
*                       ESW=1;         /*EXIT-SWITCH ON AND  @Y30LB02*/ 40350003
*                                      /*PRINT ERROR MSG     @Y30LB02*/ 40400003
*                       ANS MSG('  ICB606I - EXTS'||                    40450003
*                        ' MUST BE SPECIFIED FOR STANDARD'||            40500003
*                        ' FORM MACRO') SKIP(5);           /*@Y30LB02*/ 40550003
*                       RETCODE=12;    /*SET RETURN CODE     @Y30LB02*/ 40600003
*                  END;                /*                    @Y30LB02*/ 40650003
*             ELSE                     /*IF NOT STD FORM     @Y30LB02*/ 40700003
*                  BSW=1;              /*TURN BRCH-SWTCH ON  @Y30LB02*/ 40750003
*        END;                          /*                    @Y30LB02*/ 40800003
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y30LB02*/ 40850003
*        GO TO EXIT;                   /*YES, GO TO END      @Y30LB02*/ 40900003
*   IF BSW=1 THEN                      /*BRCH-SWITCH ON?     @Y30LB02*/ 40950003
*        GO TO LINK;                   /*YES,BR TO SVC INST  @Y30LB02*/ 41000003
*   ANS('COTBEXTS='||EXTS||';/*FILL IN EXTS FIELD @Y30LB02*/') SKIP(1); 41050003
*LINK: ANS(' SVC (126); /*ISSUE SVC INSTRUCTION @Y30LB02*/')            41100003
*        SKIP(1);                                                       41150003
*      ANS('RFY  COTBR1 UNRSTD;/*UNRESTRCT REG 1 @Y30LB02*/')SKIP;      41200003
*EXIT: RETURN CODE(RETCODE);                               /*@Y30LB02*/ 41250003
*   %END;                                                  /*@Y30LB02*/ 41300003
./  ADD  SSI=42090041,NAME=ICBCOVC
* %/*  START OF SPECIFICATIONS****                             @Y30LB02 00050003
.*                                                             @Y30LB02 00100003
.*01   MODULE-NAME = ICBCOVC                                   @Y30LB02 00150003
.*                                                             @Y30LB02 00200003
.*01   DESCRIPTIVE-NAME = COPY VOLUME/CARTRIDGE MACRO          @Y30LB02 00250003
.*                                                             @Y30LB02 00300003
.*01   COPYRIGHT = NONE                                        @Y30LB02 00350003
.*                                                             @Y30LB02 00400003
.*01   STATUS = OS/VS1 RELEASE 4, OS/VS2 RELEASE 3             @Y30LB02 00450003
.*                                                             @Y30LB02 00500003
.*01   FUNCTION = REQUEST COPY VOLUME/CART OF MSS DATA         @Y30LB02 00550003
.*                                                             @Y30LB02 00600003
.*01   NOTES = AS FOLLOWS:                                     @Y30LB02 00650003
.*                                                             @Y30LB02 00700003
.*02     CODE = MACRO IS BILINGUALLY CODED                     @Y30LB02 00750003
.*                                                             @Y30LB02 00800003
.*02     RESTRICTIONS = THE FOLLOWING PREFIXES SHOULD BE       @Y30LB02 00850003
.*                      AVOIDED IN THE USER'S INVOCATION:      @Y30LB02 00900003
.*                      ICB, CVO, AND CCRT.                    @Y30LB02 00950003
.*                                                             @Y30LB02 01000003
.*02  REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF REGISTERS   @Y30LB02 01050003
.*                              BY MACROS: R0,R1,R14, AND R15  @Y30LB02 01100003
.*                                                             @Y30LB02 01150003
.*01   MODULE-TYPE = MACRO                                     @Y30LB02 01200003
.*                                                             @Y30LB02 01250003
.*02     PROCESSOR = PLS AND ASSEMBLER                         @Y30LB02 01300003
.*                                                             @Y30LB02 01400003
.*02     ATTRIBUTES = REUSABLE                                 @Y30LB02 01450003
.*                                                             @Y30LB02 01500003
.*02     ENTRY-POINT = ICBCOVC                                 @Y30LB02 01550003
.*                                                             @Y30LB02 01600003
.*02     PURPOSE = THE ICBCOVC MACRO SERVES AS A COMMUNI-      @Y30LB02 01650003
.*       CATIONS LINK BETWEEN THE MSSC CALLER AND THE          @Y30LB02 01700003
.*       MSSC SVC ROUTINE.                                     @Y30LB02 01750003
.*                                                             @Y30LB02 01800003
.*02     LINKAGE =  SVC 126                                    @Y30LB02 01850003
.*                                                             @Y30LB02 01900003
.*01  INPUT = PARAMETERS SPECIFIED ON THE PLS/BAL MACRO        @Y30LB02 01950003
.*            INVOCATION                                       @Y30LB02 02000003
.*                                                             @Y30LB02 02050003
.*   THE ICBCOVC MACRO REQUEST IS ISSUED TO SATISFY COPY       @Y30LB02 02100003
.*                                                             @Y30LB02 02150003
.*   VOLUME AND COPY CARTRIDGE REQUESTS.                       @Y30LB02 02200003
.*                                                             @Y30LB02 02250003
.*   THE COPY VOLUME (CVOL) REQUEST IS ISSUED IF THE CALLER    @Y30LB02 02300003
.*   WISHES TO:                                                @Y30LB02 02350003
.*                                                             @Y30LB02 02400003
.*   (1)  CAUSE REAL 3330I DASD TO BE COPIED TO A SUBSYSTEM    @Y30LB02 02450003
.*        VOLUME.                                              @Y30LB02 02500003
.*                                                             @Y30LB02 02550003
.*   (2)  CAUSE A SUBSYSTEM VOLUME TO BE COPIED TO REAL        @Y30LB02 02600003
.*        3330I DASD.                                          @Y30LB02 02650003
.*                                                             @Y30LB02 02700003
.*   (3)  CAUSE A VIRTUAL VOLUME TO BE COPIED TO A VIRTUAL     @Y30LB02 02750003
.*        VOLUME HAVING THE SAME VOLID BUT NOT ACTIVE.         @Y30LB02 02800003
.*                                                             @Y30LB02 02850003
.*   (4)  CAUSE A VIRTUAL VOLUME SPECIFIED BY CSN1 TO BE       @Y30LB02 02900003
.*        COPIED TO A VIRTUAL VOLUME HAVING THE SAME VOLID     @Y30LB02 02950003
.*        AND ACTIVE.                                          @Y30LB02 03000003
.*                                                             @Y30LB02 03050003
.*   THE COPY CARTRIDGE (CCRT) REQUEST IS ISSUED IF THE        @Y30LB02 03100003
.*   CALLER WISHES TO CAUSE A CARTRIDGE TO BE COPIED TO A      @Y30LB02 03150003
.*   DIFFERENT CARTRIDGE.                                      @Y30LB02 03200003
.*                                                             @Y30LB02 03250003
.*   MACRO SYNTAX                                              @Y30LB02 03300003
.*                                                             @Y30LB02 03350003
.*   LIST FORM                                                 @Y30LB02 03400003
.*                                                             @Y30LB02 03450003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03500003
.*                                                             @Y30LB02 03550003
.*ICBCOVC  MF=L - (BAL)          MF=(L,MAP) - BAL              @Y30LB02 03600003
.*         MF(L,NAME/(R))-PLS    MF(L,NAME/(R),ATTR)-PLS       @Y30LB02 03650003
.*         TYPE=CCRT/CVOL                                      @Y30LB02 03700003
.*                                                             @Y30LB02 03750003
.*   STANDARD FORM                                             @Y30LB02 03800003
.*                                                             @Y30LB02 03850003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03900003
.*                                                             @Y30LB02 03950003
.*ICBCOVC  TYPE=CCRT/CVOL        VOLID=ADDR/(R)                @Y30LB02 04000003
.*         FLAGS=ADDR/(R)        CSN=ADDR/(R)                  @Y30LB02 04050003
.*         ECB=ADDR/(R)          RUA=ADDR/(R)                  @Y30LB02 04100003
.*                                                             @Y30LB02 04150003
.* EXECUTE FORM                                                @Y30LB02 04200003
.*                                                             @Y30LB02 04250003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 04300003
.*                                                             @Y30LB02 04350003
.*ICBCOVC  MF(E,NAME/(R))       MF(E,NAME/(R),COMPLETE)-PLS    @Y30LB02 04400003
.*         TYPE=CCRT/CVOL       VOLID=ADDR/(R)                 @Y30LB02 04450003
.*                              ECB=ADDR/(R)                   @Y30LB02 04500003
.*                              CSN=ADDR/(R)                   @Y30LB02 04550003
.*                              RUA=ADDR/(R)                   @Y30LB02 04600003
.*                              FLAGS=ADDR/(R)                 @Y30LB02 04650003
.*                              VVICEXT=ADDR/(R)               @Y30LB02 04700003
.*                                                             @Y30LB02 04750003
.*   KEYWORD PARAMETERS:                                       @Y30LB02 04800003
.*                                                             @Y30LB02 04850003
.*                                                             @Y30LB02 04900003
.*  TYPE -  TYPE:  INDICATES WHETHER THE REQUEST FOR THE       @Y30LB02 04950003
.*          THE COPY VOLUME(CVOL) OR THE COPY CARTRIDGE        @Y30LB02 05000003
.*          (CCRT) FUNCTION.  IF CVOL IS SPECIFIED, HEX        @Y30LB02 05050003
.*          '2A' IS PLACED IN THE OPCODE FIELD.  FOR           @Y30LB02 05100003
.*          TYPE=CCRT, HEX '28' IS PLACED IN THE OPCODE        @Y30LB02 05150003
.*          FIELD.                                             @Y30LB02 05200003
.*                                                             @Y30LB02 05250003
.*   MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE         @Y30LB02 05300003
.*          MACRO FORMAT AND MAY GIVE THE ADDRESS OR           @Y30LB02 05350003
.*          ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK      @Y30LB02 05400003
.*          IS STORED.                                         @Y30LB02 05450003
.*                                                             @Y30LB02 05500003
.*          L - LIST FORM: THE EXPANSION OF THE L-FORM         @Y30LB02 05550003
.*              MACRO WILL RESULT IN A REQUEST BLOCK WITH      @Y30LB02 05600003
.*              THE ONLY NON-ZERO FIELDS BEING THE OPCODE      @Y30LB02 05650003
.*              AND LENGTH FIELDS.                             @Y30LB02 05700003
.*                                                             @Y30LB02 05750003
.*          (1) 'MAP' - IF MAP IS SPECIFIED WITH THE           @Y30LB02 05800003
.*              ASSEMBLER MACRO CALL A DSECT EQUIVALENT TO     @Y30LB02 05850003
.*              A MAPPING MACRO IS PRODUCED.                   @Y30LB02 05900003
.*                                                             @Y30LB02 05950003
.*          (2) NAME - THE MACRO INVOKER MUST SPECIFY A        @Y30LB02 06000003
.*              NAME FOR HIS STRUCTURE WHEN INVOKING THE       @Y30LB02 06050003
.*              PLS LIST FORM.                                 @Y30LB02 06100003
.*                                                             @Y30LB02 06150003
.*          (3) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS       @Y30LB02 06200003
.*              ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION    @Y30LB02 06250003
.*              IN AN UNINITIALIZED REQUEST BLOCK.  ATTRI-     @Y30LB02 06300003
.*              BUTE EXAMPLE:                                  @Y30LB02 06350003
.*                                                             @Y30LB02 06400003
.*              CHAR, FIXED, STATIC LOCAL, NONLOCAL,           @Y30LB02 06450003
.*              BASED(*), ETC.                                 @Y30LB02 06500003
.*                                                             @Y30LB02 06550003
.*       NULL - STANDARD FORM: THE EXPANSION OF THIS FORM      @Y30LB02 06600003
.*              CONSISTS OF A REQUEST BLOCK, A LINKAGE         @Y30LB02 06650003
.*              INSTRUCTION, AND, POSSIBLY, PARAMETER          @Y30LB02 06700003
.*              BINDING INSTRUCTIONS.                          @Y30LB02 06750003
.*                                                             @Y30LB02 06800003
.*          E - EXECUTABLE FORM: THE EXPANSION OF THIS FORM    @Y30LB02 06850003
.*              CONSISTS OF A LINKAGE INSTRUCTION AND          @Y30LB02 06900003
.*              POSSIBLY, PARAMETER BINDING INSTRUCTIONS.      @Y30LB02 06950003
.*                                                             @Y30LB02 07000003
.*              SUB-PARAMETERS                                 @Y30LB02 07050003
.*                                                             @Y30LB02 07100003
.*              (1)  AN E MUST BE SPECIFIED IN THE FIRST       @Y30LB02 07150003
.*                   SUB-PARAMETER POSITION.  THIS INDICATES   @Y30LB02 07200003
.*                   THAT THE MACRO IS IN EXECUTABLE FORM.     @Y30LB02 07250003
.*                                                             @Y30LB02 07300003
.*              (2)  A NAME OR A REGISTER MUST BE SPECIFIED    @Y30LB02 07350003
.*                   IN THE SECOND SUB-PARAMETER.              @Y30LB02 07400003
.*                                                             @Y30LB02 07450003
.*              (3)  'COMPLETE' - COMPLETE WILL CAUSE THE      @Y30LB02 07500003
.*                   MACRO TO ZERO OUT THE REQUEST BLOCK.      @Y30LB02 07550003
.*                   AFTER ZEROING THE REQUEST BLOCK THE       @Y30LB02 07600003
.*                   FUNCTION OPCODE AND LENGTH ARE PLACED     @Y30LB02 07650003
.*                   IN THE REQUEST BLOCK.                     @Y30LB02 07700003
.*                                                             @Y30LB02 07750003
.*   FLAGS - FLAGS: THE FIELD WHICH INDICATES THE FUNCTION(S)  @Y30LB02 07800003
.*   TO BE PERFORMED.  THE FORMAT OF THE FLAGS FIELD IS        @Y30LB02 07850003
.*   SHOWN BELOW:                                              @Y30LB02 07900003
.*                                                             @Y30LB02 07950003
.*   --------------------------------------------              @Y30LB02 08000003
.*   | X | X | X | X |BITS 4-15 UNUSED AND ZERO |              @Y30LB02 08050003
.*   --------------------------------------------              @Y30LB02 08100003
.*   IF CVOL (COPY VOLUME) IS SPECIFIED FOR THE TYPE           @Y30LB02 08150003
.*   PARAMETER:                                                @Y30LB02 08200003
.*                                                             @Y30LB02 08250003
.*   BIT 0-------'1'B   TRANSFER DATA FROM DASD TO             @Y30LB02 08300003
.*                      CARTRIDGE(S)                           @Y30LB02 08350003
.*               '0'B   NOT DASD TO CARTRIDGE                  @Y30LB02 08400003
.*                                                             @Y30LB02 08450003
.*   BIT 1-------'1'B   TRANSFER DATA FROM                     @Y30LB02 08500003
.*                      CARTRIDGE(S) TO DASD                   @Y30LB02 08550003
.*               '0'B   NOT CARTRIDGE TO DASD                  @Y30LB02 08600003
.*                                                             @Y30LB02 08650003
.*   BIT 2-------'1'B   TRANSFER DATA FROM CARTRIDGE           @Y30LB02 08700003
.*                      TO CARTRIDGE (TRANSIENT)               @Y30LB02 08750003
.*               '0'B   NOT CARTRIDGE TO CARTRIDGE             @Y30LB02 08800003
.*                                                             @Y30LB02 08850003
.*   BIT 3-------'1'B   TRANSFER DATA FROM CARTRIDGE           @Y30LB02 08900003
.*                      TO CARTRIDGE (INVENTORY)               @Y30LB02 08950003
.*               '0'B   NOT CARTRIDGE TO CARTRIDGE             @Y30LB02 09000003
.*                                                             @Y30LB02 09050003
.*   BITS 4-15---       NOT USED AND MUST BE ZERO              @Y30LB02 09100003
.*                                                             @Y30LB02 09150003
.*   NOTE:  BITS 0-3 ARE MUTUALLY EXCLUSIVE.                   @Y30LB02 09200003
.*                                                             @Y30LB02 09250003
.*   PACK TO CARTRIDGE                                         @Y30LB02 09300003
.*                                                             @Y30LB02 09350003
.*          IF THIS ATTRIBUTE IS SPECIFIED, THEN, DATA         @Y30LB02 09400003
.*          FROM A REAL 3330I DASD PACK (SPECIFIED BY RUA)     @Y30LB02 09450003
.*          WILL BE COPIED TO A SUBSYSTEM VOLUME (SPECIFIED    @Y30LB02 09500003
.*          BY VOLID).                                         @Y30LB02 09550003
.*                                                             @Y30LB02 09600003
.*          PACK TO CARTRIDGE REQUIRED PARAMETERS: TYPE,       @Y30LB02 09650003
.*          FLAGS, ECB, VOLID, AND RUA.                        @Y30LB02 09700003
.*          OPTIONAL PARAMETER:  VVICEXT                       @Y30LB02 09750003
.*                                                             @Y30LB02 09800003
.*   CARTRIDGE TO PACK                                         @Y30LB02 09850003
.*                                                             @Y30LB02 09900003
.*          IF THIS ATTRIBUTE IS SPECIFIED, THEN, DATA         @Y30LB02 09950003
.*          FROM A SUBSYSTEM VOLUME (SPECIFIED BY VOLID)       @Y30LB02 10000003
.*          IS COPIED TO A REAL 3330I DASD PACK (SPECIFIED     @Y30LB02 10050003
.*          BY RUA).                                           @Y30LB02 10100003
.*                                                             @Y30LB02 10150003
.*          CARTRIDGE TO PACK REQUIRED PARAMETERS: TYPE,       @Y30LB02 10200003
.*          FLAGS, ECB, VOLID, AND RUA.                        @Y30LB02 10250003
.*          OPTIONAL PARAMETER:  VVICEXT                       @Y30LB02 10300003
.*                                                             @Y30LB02 10350003
.*   CARTRIDGE TO CARTRIDGE(INVENTORY TO TRANSIENT)            @Y30LB02 10400003
.*                                                             @Y30LB02 10450003
.*          IF THIS ATTRIBUTE IS SPECIFIED, THEN, DATA         @Y30LB02 10500003
.*          FROM A SUBSYSTEM VOLUME SPECIFIED BY VOLID         @Y30LB02 10550003
.*          WILL BE COPIED TO ANOTHER SUBSYSTEM VOLUME         @Y30LB02 10600003
.*          SPECIFIED BY CARTRIDGE SERIAL NUMBER (CSN).        @Y30LB02 10650003
.*                                                             @Y30LB02 10700003
.*          CARTRIDGE TO CARTRIDGE REQUIRED PARAMETERS:        @Y30LB02 10750003
.*          TYPE, FLAGS, ECB, VOLID, AND CSN.                  @Y30LB02 10800003
.*          OPTIONAL PARAMETER:  VVICEXT                       @Y30LB02 10850003
.*                                                             @Y30LB02 10900003
.*   CARTRIDGE TO CARTRIDGE(TRANSIENT TO INVENTORY)            @Y30LB02 10950003
.*                                                             @Y30LB02 11000003
.*          IF THIS ATTRIBUTE IS SPECIFIED, THEN, DATA         @Y30LB02 11050003
.*          FROM A SUBSYSTEM VOLUME SPECIFIED BY CSN1 WILL     @Y30LB02 11100003
.*          BE COPIED TO ANOTHER SUBSYSTEM VOLUME SPECIFIED    @Y30LB02 11150003
.*          BY VOLID.                                          @Y30LB02 11200003
.*                                                             @Y30LB02 11250003
.*          CARTRIDGE TO CARTRIDGE REQUIRED PARAMETERS:        @Y30LB02 11300003
.*          TYPE, FLAGS, ECB, VOLID, AND CSN.                  @Y30LB02 11350003
.*          OPTIONAL PARAMETER:  VVICEXT                       @Y30LB02 11400003
.*                                                             @Y30LB02 11450003
.*   IF CCRT (COPY CARTRIDGE) IS SPECIFIED FOR THE TYPE        @Y30LB02 11500003
.*   PARAMETER:                                                @Y30LB02 11550003
.*                                                             @Y30LB02 11600003
.*   BIT 0-------'1'B   CARTRIDGE 1 OF 2 IS BEING COPIED       @Y30LB02 11650003
.*               '0'B   NOT CARTRIDGE ONE                      @Y30LB02 11700003
.*                                                             @Y30LB02 11750003
.*   BIT 1-------'1'B   CARTRIDGE 2 OF 2 IS BEING COPIED       @Y30LB02 11800003
.*               '0'B   NOT CARTRIDGE TWO                      @Y30LB02 11850003
.*                                                             @Y30LB02 11900003
.*   BITS 2-15---       NOT USED AND MUST BE ZERO              @Y30LB02 11950003
.*                                                             @Y30LB02 12000003
.*   NOTE:  BITS 0-1 ARE MUTUALLY EXCLUSIVE.                   @Y30LB02 12050003
.*                                                             @Y30LB02 12100003
.*   CARTRIDGE 1 OF 2:                                         @Y30LB02 12150003
.*                                                             @Y30LB02 12200003
.*          IF THIS ATTRIBUTE IS SPECIFIED, THEN THE FIRST     @Y30LB02 12250003
.*          CARTRIDGE OF A 2 CARTRIDGE VOLUME(SPECIFIED BY     @Y30LB02 12300003
.*          VOLID) IS COPIED TO A DIFFERENT CARTRIDGE WHICH    @Y30LB02 12350003
.*          IS SPECIFIED BY CSN.                               @Y30LB02 12400003
.*                                                             @Y30LB02 12450003
.*          CARTRIDGE 1 OF 2 REQUIRED PARAMETERS:              @Y30LB02 12500003
.*          TYPE, FLAGS, ECB, VOLID, AND CSN.                  @Y30LB02 12550003
.*                                                             @Y30LB02 12600003
.*   CARTRIDGE 2 OF 2:                                         @Y30LB02 12650003
.*                                                             @Y30LB02 12700003
.*          IF THIS ATTRIBUTE IS SPECIFIED, THEN, THE          @Y30LB02 12750003
.*          SECOND CARTRIDGE OF A 2 CARTRIDGE VOLUME(SPECI-    @Y30LB02 12800003
.*          FIED BY VOLID) IS COPIED TO A DIFFERENT            @Y30LB02 12850003
.*          CARTRIDGE WHICH IS SPECIFIED BY CSN.               @Y30LB02 12900003
.*                                                             @Y30LB02 12950003
.*          CARTRIDGE 2 OF 2 REQUIRED PARAMETERS:              @Y30LB02 13000003
.*          TYPE, FLAGS, ECB, VOLID, AND CSN.                  @Y30LB02 13050003
.*                                                             @Y30LB02 13100003
.*   VOLID - VOLUME IDENTIFIER: THE VOLUME IDENTIFIER OF THE   @Y30LB02 13150003
.*           VOLUME TO BE COPIED.                              @Y30LB02 13200003
.*                                                             @Y30LB02 13250003
.*   CSN   - CARTRIDGE SERIAL NUMBER: A 12 BYTE AREA WHICH     @Y30LB02 13300003
.*           CONTAINS THE CARTRIDGE SERIAL NUMBER.             @Y30LB02 13350003
.*                                                             @Y30LB02 13400003
.*   ECB   - THE NAME OF THE EVENT CONTROL BLOCK (ECB) TO BE   @Y30LB02 13450003
.*           POSTED WHEN THE REQUEST IS COMPLETE.  THE USER    @Y30LB02 13500003
.*           MUST ALSO DECLARE A MINIMUM 50 BYTE CONTIGUOUS    @Y30LB02 13550003
.*           AREA TO CONTAIN THE MESSAGE GENERATED BY THE      @Y30LB02 13600003
.*           MESSAGE TASK.  (THE ECB AND APPENDED DATA AREA    @Y30LB02 13650003
.*           MUST BE IN COMMON CORE IN VS/2).  THE ECB IS      @Y30LB02 13700003
.*           POSTED WITH '7F'X FOR SUCCESSFUL (IN LOW-ORDER    @Y30LB02 13750003
.*           BYTE OF ECB).  THE MSC DATA WILL BE MOVED         @Y30LB02 13800003
.*           TO CORE LOCATION ADDRESS(ECB)+4.  ECB             @Y30LB02 13850003
.*           MUST BE SPECIFIED AND THE ECB AREA MUST BE        @Y30LB02 13900003
.*           CLEARED (SET TO BINARY 0) BEFORE INVOKING         @Y30LB02 13950003
.*           THE MACRO.                                        @Y30LB02 14000003
.*                                                             @Y30LB02 14050003
.*   RUA   - REAL UNIT ADDRESS: THE REAL UNIT DESIGNATED TO    @Y30LB02 14100003
.*           RECEIVE THE SUBSYSTEM DATA.  MUST BE SPECIFIED    @Y30LB02 14150003
.*           WITH EACH STANDARD FORM COPY VOLUME REQUEST       @Y30LB02 14200003
.*           WHICH SPECIFIES PACK TO CARTRIDGE OR CARTRIDGE    @Y30LB02 14250003
.*           TO PACK.                                          @Y30LB02 14300003
.*                                                             @Y30LB02 14350003
.*                                                             @Y30LB02 14400003
.* VVICEXT - THE NAME OF AN AREA WHICH CONTAINS THE MSVC       @Y30LB02 14450003
.*           EXTENSION (VVICEXT) MAPPING.  IF THIS PARAMETER   @Y30LB02 14500003
.*           IS NOT SPECIFIED, THE CORRESPONDING POSITION IN   @Y30LB02 14550003
.*           THE REQUEST BLOCK MUST BE SET TO ZERO.  THE       @Y30LB02 14600003
.*           MAPPING MACRO FOR THE MSVC EXTENSION TO COPY      @Y30LB02 14650003
.*           VOLUME IS IEZCOVCE (VVICEXT IS NOT A VALID        @Y30LB02 14700003
.*           PARAMETER FOR THE COPY CARTRIDGE REQUEST).        @Y30LB02 14750003
.*                                                             @Y30LB02 14800003
.*01  EXIT-NORMAL = VALID INVOCATION                           @Y30LB02 14850003
.*                                                             @Y30LB02 14900003
.*02     CONDITION = RETURN CODE = 0                           @Y30LB02 14950003
.*                                                             @Y30LB02 15000003
.*02     OUTPUT = IN-LINE PLS/BAL STATEMENTS THAT PERFORM      @Y30LB02 15050003
.*                THE REQUESTED FUNCTION                       @Y30LB02 15100003
.*                                                             @Y30LB02 15150003
.*01  EXIT-ERROR = INVALID INVOCATION                          @Y30LB02 15200003
.*                                                             @Y30LB02 15250003
.*02     CONDITION = RETURN CODE = 12                          @Y30LB02 15300003
.*                                                             @Y30LB02 15350003
.*02     OUTPUT = ERROR MESSAGE AS A COMMENT AT POINT OF       @Y30LB02 15400003
.*                INVOCATION                                   @Y30LB02 15450003
.*                                                             @Y30LB02 15500003
.*01  EXTERNAL REFERENCES = NONE                               @Y30LB02 15550003
.*                                                             @Y30LB02 15600003
.*01  TABLES = NONE                                            @Y30LB02 15650003
.*                                                             @Y30LB02 15700003
.*01  MESSAGES = AS FOLLOWS:                                   @Y30LB02 15750003
.*     ICB600I:  TYPE MUST BE SPECIFIED                        @Y30LB02 15800003
.*     ICB601I:  TYPE IS INCORRECTLY SPECIFIED                 @Y30LB02 15850003
.*     ICB602I:  A NAME FOR THE REQUEST BLOCK MUST BE          @Y30LB02 15900003
.*               SPECIFIED IN MF(2)                            @Y30LB02 15950003
.*     ICB603I:  WARNING-ONLY MF AND TYPE PARAMETERS ARE       @Y30LB02 16000003
.*               VALID FOR LIST FORM                           @Y30LB02 16050003
.*     ICB605I:  ECB MUST BE SPECIFIED FOR STANDARD            @Y30LB02 16100003
.*               FORM MACRO                                    @Y30LB02 16150003
.*     ICB607I:  FLAGS MUST BE SPECIFIED FOR STANDARD          @Y30LB02 16200003
.*               FORM MACRO                                    @Y30LB02 16250003
.*     ICB610I:  VOLID MUST BE SPECIFIED FOR STANDARD          @Y30LB02 16300003
.*               FORM MACRO                                    @Y30LB02 16350003
.*     ICB616I:  RUA MUST BE SPECIFIED FOR STANDARD            @Y30LB02 16400003
.*               FORM MACRO                                    @Y30LB02 16450003
.*     ICB612I:  MF(2) MUST CONTAIN REQ BLK NAME               @Y30LB02 16500003
.*               IF EXEC MACRO FORM REQUESTED                  @Y30LB02 16550003
.*     ICB613I:  MISSING REQ BLK NAME OR MORE                  @Y30LB02 16600003
.*               THAN 2 SUBPARAMETERS FOR MF                   @Y30LB02 16650003
.*     ICB615I:  INVALID MF PARAMETER SPECIFIED, MUST          @Y30LB02 16700003
.*                BE E, L, OR NULL                             @Y30LB02 16750003
.*01  CONTROL-BLOCKS = NONE                                    @Y30LB02 16800003
.*                                                             @Y30LB02 16850003
.*01  INNER MACROS = NONE                                      @Y30LB02 16900003
.*                                                             @Y30LB02 16950003
.*01  SYSTEM MACRO = NONE                                      @Y30LB02 17000003
.*                                                             @Y30LB02 17050003
.*01  CHANGE-ACTIVITY = S/D X04AC02 AND Y30LB02                @Y30LB02 17100003
.*                                                             @Y30LB02 17150003
.**** END OF SPECIFICATIONS ***                                @Y30LB02 17200003
         MACRO                                                          17250003
&SYMBOL  ICBCOVC &MF=,&TYPE=,&FLAGS=,&ECB=,&RUA=,&VOLID=,              *17300003
               &CSN=,&VVICEXT=                                          17350003
         LCLC  &LBL                DEFINE MACRO INSTR INDX     @Y30LB02 17400003
         LCLB  &ERSW               DEFINE ERROR SWITCH         @Y30LB02 17450003
&LBL     SETC  'CVC'.'&SYSNDX'     ASSIGN CHARACTER VALUE      @Y30LB02 17500003
.*                                                             @Y30LB02 17550003
.*       CHECK FOR VALID TYPE SPECIFICATION                    @Y30LB02 17600003
.TYPE    AIF   ('&TYPE' EQ '').NUL                             @Y30LB02 17650003
         AIF   ('&TYPE' EQ 'CVOL' OR '&TYPE' EQ 'CCRT').START  @Y30LB02 17700003
         MNOTE 12,'  ICB601I - TYPE IS INCORRECTLY SPECIFIED'  @Y30LB02 17750003
         MEXIT                                                 @Y30LB02 17800003
.*                                                             @Y30LB02 17850003
.NUL     ANOP                                                  @Y30LB02 17900003
         MNOTE 12,'  ICB600I - TYPE MUST BE SPECIFIED '        @Y30LB02 17950003
         MEXIT                                                 @Y30LB02 18000003
.*                                                             @Y30LB02 18050003
.*       DETERMINATION OF DESIRED MACRO FORM                   @Y30LB02 18100003
.*                                                             @Y30LB02 18150003
.START   AIF   ('&MF(1)' EQ 'L').LFORM      LIST FORM?         @Y30LB02 18200003
         AIF   ('&MF(1)' EQ 'E').EFORM      EXECUTE FORM?      @Y30LB02 18250003
         AIF   ('&MF(1)' EQ '').SFORM       STANDARD FORM?     @Y30LB02 18300003
         MNOTE 12,'  ICB615I - INVALID MF PARAMETER '          @Y30LB02 18350003
         MNOTE 12,'  SPECIFIED, MUST BE L, E, OR NULL '        @Y30LB02 18400003
&ERSW    SETB  1                                               @Y30LB02 18450003
         AGO   .PROCES                                         @Y30LB02 18500003
.*                                                             @Y30LB02 18550003
.*       PROCESSING OF 'LIST' MACRO FORM                       @Y30LB02 18600003
.*       THE FOLLOWING CODE CHECKS FOR ILLEGAL PARAMETERS ON   @Y30LB02 18650003
.*       THE LIST FORM MACRO AND GIVES WARNING IF FOUND        @Y30LB02 18700003
.*                                                             @Y30LB02 18750003
.LFORM   ANOP                                                  @Y30LB02 18800003
         AIF   ('&FLAGS' NE '' OR '&ECB' NE '' OR '&RUA' NE            *18850003
               '' OR '&VOLID' NE '' OR '&CSN' NE ''                    *18900003
               OR '&VVICEXT' NE '').WARN                       @Y30LB02 18950003
         AGO   .LIST1                                          @Y30LB02 19000003
.*                                                             @Y30LB02 19050003
.WARN    MNOTE 4,'  ICB603I - WARNING-ONLY MF AND TYPE '       @Y30LB02 19100003
         MNOTE 4,'  PARAMETERS ARE VALID FOR LIST FORM '       @Y30LB02 19150003
.*                                                             @Y30LB02 19200003
.LIST1   AIF   ('&TYPE' EQ 'CVOL').COPYV    COPY VOL REQ?      @Y30LB02 19250003
         AIF   ('&MF(2)' EQ 'MAP').LISTDS   DSECT REQUESTED?   @Y30LB02 19300003
*  MACMEAN  MSSC COPY CARTRIDGE MACRO--INITIALIZED LIST FORM   @Y30LB02 19350003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 19400003
&SYMBOL  DS    0F                                              @Y30LB02 19450003
CCRTLEN  DC    F'32'               LENGTH OF CCRT REQ BLK      @Y30LB02 19500003
CCRTOPC  DC    XL1'28'             COPY CARTRIDGE OPCODE       @Y30LB02 19550003
CCRTRES1 DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02 19600003
CCRTFLG  DC    XL2'0000'           2-BYTE FLAGS AREA           @Y30LB02 19650003
CCRTVOL  DC    XL6'0000'           6-BYTE VOLID AREA           @Y30LB02 19700003
CCRTASID DC    XL2'0000'           2-BYTE ASID AREA            @Y30LB02 19750003
CCRTECB  DC    XL4'00000000'       4-BYTE AREA FOR ECB         @Y30LB02 19800003
CCRTCSN  DC    XL12'0000000000'    12-BYTE CSN AREA            @Y30LB02 19850003
         MEXIT                                                 @Y30LB02 19900003
.*                                                             @Y30LB02 19950003
.LISTDS  ANOP                                                  @Y30LB02 20000003
*  MACMEAN  MSSC COPY CARTRIDGE MACRO-UNINITIALIZED LIST FORM  @Y30LB02 20050003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 20100003
ICBCOVC  DSECT                                                 @Y30LB02 20150003
CCRTLEN  DS    F                   LEN OF CCRT REQ 20 HEX      @Y30LB02 20200003
CCRTOPC  DS    XL1                 COPY CART OPCODE 28 HEX     @Y30LB02 20250003
CCRTRES1 DS    XL1                 1-BYTE RESERVED FIELD       @Y30LB02 20300003
CCRTFLG  DS    XL2                 2-BYTE FLAGS FIELD          @Y30LB02 20350003
CCRTVOL  DS    CL6                 6-BYTE VOLID FIELD          @Y30LB02 20400003
CCRTASID DS    XL2                 2-BYTE ASID FIELD           @Y30LB02 20450003
CCRTECB  DS    A                   4-BYTE ECB FIELD            @Y30LB02 20500003
CCRTCSN  DS    CL12                12-BYTE CSN FIELD           @Y30LB02 20550003
         MEXIT                                                 @Y30LB02 20600003
.*                                                             @Y30LB02 20650003
.COPYV   ANOP                                                  @Y30LB02 20700003
         AIF   ('&MF(2)' EQ 'MAP').LISTDS2  DSECT REQUESTED?   @Y30LB02 20750003
*  MACMEAN  MSSC COPY VOLUME MACRO--INITIALIZED LIST FORM      @Y30LB02 20800003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 20850003
&SYMBOL  DS    0F                                              @Y30LB02 20900003
CVOLLEN  DC    F'40'               LENGTH OF CVOL REQ BLK      @Y30LB02 20950003
CVOLOPC  DC    XL1'2A'             COPY VOLUME OPCODE          @Y30LB02 21000003
CVOLRES1 DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02 21050003
CVOLFLG  DC    XL2'0000'           2-BYTE FLAGS AREA-ZERO      @Y30LB02 21100003
CVOLVOL  DC    XL6'0000'           6 BYTE VOLID AREA           @Y30LB02 21150003
CVOLASID DC    XL2'0000'           2-BYTE ASID AREA            @Y30LB02 21200003
CVOLECB  DC    XL4'00000000'       4-BYTE ECB AREA             @Y30LB02 21250003
CVOLCSN  DC    XL12'000000'        12-BYTE CSN AREA            @Y30LB02 21300003
CVOLRUA  DC    XL2'0000'           2-BYTE RUA AREA             @Y30LB02 21350003
CVOLRES2 DC    XL2'0000'           2-BYTE RESERVED AREA        @Y30LB02 21400003
CVOLVEXT DC    XL4'00000000'       4-BYTE VVICEXT AREA         @Y30LB02 21450003
         MEXIT                                                 @Y30LB02 21500003
.*                                                             @Y30LB02 21550003
.LISTDS2 ANOP                                                  @Y30LB02 21600003
*  MACMEAN  MSSC COPY VOLUME MACRO--UNINITIALIZED LIST FORM    @Y30LB02 21650003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 21700003
ICBCOVC1 DSECT                                                 @Y30LB02 21750003
CVOLLEN  DS    F                   LEN CVOL REQ BLK 28 HEX     @Y30LB02 21800003
CVOLOPC  DS    XL1                 COPY VOL OPCODE 2A HEX      @Y30LB02 21850003
CVOLRES1 DS    XL1                 1-BYTE RESERVED FIELD       @Y30LB02 21900003
CVOLFLG  DS    XL2                 2-BYTE FLAGS FIELD-ZERO     @Y30LB02 21950003
CVOLVOL  DS    CL6                 6 BYTE VOLID FIELD          @Y30LB02 22000003
CVOLASID DS    XL2                 2-BYTE ASID FIELD           @Y30LB02 22050003
CVOLECB  DS    A                   4-BYTE ECB ADDR             @Y30LB02 22100003
CVOLCSN  DS    CL12                12-BYTE CSN FIELD           @Y30LB02 22150003
CVOLRUA  DS    XL2                 2-BYTE RUA FIELD            @Y30LB02 22200003
CVOLRES2 DS    XL2                 2-BYTE RESERVED FIELD       @Y30LB02 22250003
CVOLVEXT DS    A                   4-BYTE VVICEXT FIELD        @Y30LB02 22300003
         MEXIT                                                 @Y30LB02 22350003
.*       PROCESSING OF THE 'EXECUTE' MACRO FORM                @Y30LB02 22400003
.*                                                             @Y30LB02 22450003
.EFORM   ANOP                                                  @Y30LB02 22500003
         AIF   (N'&MF EQ 2).PARMOK  LIST NAME MUST BE SPEC-    @Y30LB02 22550003
.*                                 FIED, OTHERWISE ERROR.      @Y30LB02 22600003
         MNOTE 12,'  ICB613I - MISSING REQ BLK NAME OR MORE '  @Y30LB02 22650003
         MNOTE 12,'  THAN 2 SUBPARAMETERS FOR MF '             @Y30LB02 22700003
&ERSW    SETB  1                                               @Y30LB02 22750003
         AGO   .PROCES                                         @Y30LB02 22800003
.*                                                             @Y30LB02 22850003
.PARMOK  ANOP                                                  @Y30LB02 22900003
*  MACMEAN  MSSC COPY VOLUME/CARTRIDGE MACRO--EXECUTE FORM     @Y30LB02 22950003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 23000003
&SYMBOL  IHBINNRA &MF(2)           LD ADDR OF REQUEST BLK      @Y30LB02 23050003
.*                                 USING IHBINNRA MACRO        @Y30LB02 23100003
         AIF   ('&TYPE' EQ 'CVOL').CVOL1     TYPE COPYV?       @Y30LB02 23150003
         LA    0,32                   LD LENGTH OF CCRT        @Y30LB02 23200003
         ST    0,0(1)                 STORE LENGTH             @Y30LB02 23250003
         MVI   0,X'28'                LOAD CCRT OPCODE         @Y30LB02 23300003
         AGO   .PROCES                                         @Y30LB02 23350003
.*                                                             @Y30LB02 23400003
.CVOL1   ANOP                                                  @Y30LB02 23450003
         LA    0,40                   LD LENG OF CVOL REQ      @Y30LB02 23500003
         ST    0,0(1)                 STORE LENGTH             @Y30LB02 23550003
         MVI   0,X'2A'                LOAD CVOL OPCODE         @Y30LB02 23600003
         AGO   .PROCES                                         @Y30LB02 23650003
.*                                                             @Y30LB02 23700003
.*       PROCESSING OF 'STANDARD' MACRO FORM                   @Y30LB02 23750003
.*                                                             @Y30LB02 23800003
.*                                                             @Y30LB02 23850003
.SFORM   AIF   ('&FLAGS' NE '').CKECB       FLAGS SPECIFIED?   @Y30LB02 23900003
         MNOTE 12,'  ICB607I - FLAGS MUST BE SPECIFIED '       @Y30LB02 23950003
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02 24000003
         AGO   .FINISH                                         @Y30LB02 24050003
.CKECB   AIF   ('&ECB' NE '').CKRUA        ECB SPECIFIED?      @Y30LB02 24100003
         MNOTE 12,'  ICB605I - ECB MUST BE SPECIFIED '         @Y30LB02 24150003
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02 24200003
         AGO   .FINISH                                         @Y30LB02 24250003
.CKRUA   AIF   ('&TYPE' EQ 'CCRT').CKVOLD   BRCH IF CCRT       @Y30LB02 24300003
         AIF   ('&RUA' NE '').SFORM1        RUA SPECIFIED?     @Y30LB02 24350003
         MNOTE 12,'  ICB616I - RUA MUST BE SPECIFIED FOR '     @Y30LB02 24400003
         MNOTE 12,'  STANDARD FORM MACRO '                     @Y30LB02 24450003
         AGO   .FINISH                                         @Y30LB02 24500003
.CKVOLD  AIF   ('&VOLID' NE '').SFORM1     VOLID SPECIFIED?    @Y30LB02 24550003
         MNOTE 12,'  ICB610I - VOLID MUST BE SPECIFIED FOR '   @Y30LB02 24600003
         MNOTE 12,'  STANDARD FORM MACRO '                     @Y30LB02 24650003
         AGO   .FINISH                                         @Y30LB02 24700003
.SFORM1  ANOP                                                  @Y30LB02 24750003
*  MACMEAN  MSSC COPY VOLUME/CARTRIDGE MACRO--STANDARD FORM    @Y30LB02 24800003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 24850003
         CNOP  0,4                                             @Y30LB02 24900003
&SYMBOL  BAL   1,&LBL              BRCH AROUND REQ BLK         @Y30LB02 24950003
         AIF   ('&TYPE' EQ 'CVOL').CVOL2           COPYVOL?    @Y30LB02 25000003
CCRTLEN  DC    A(&LBL-*)           CCRT LENGTH FIELD           @Y30LB02 25050003
CCRTOPC  DC    XL1'28'             COPY CARTRIDGE OPCODE       @Y30LB02 25100003
CCRTRES1 DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02 25150003
CCRTFLG  DC    XL2'0000'           2-BYTE FLAGS AREA           @Y30LB02 25200003
CCRTVOL  DC    XL6'0000'           6-BYTE VOLID AREA           @Y30LB02 25250003
CCRTASID DC    XL2'0000'           2-BYTE ASID AREA            @Y30LB02 25300003
CCRTECB  DC    XL4'00000000'       4-BYTE AREA FOR ECB         @Y30LB02 25350003
CCRTCSN  DC    XL12'0000000000'    12-BYTE CSN AREA            @Y30LB02 25400003
&LBL     EQU   *                                               @Y30LB02 25450003
         AGO   .PROCES                                         @Y30LB02 25500003
.*                                                             @Y30LB02 25550003
.CVOL2   ANOP                                                  @Y30LB02 25600003
CVOLLEN  DC    A(&LBL-*)           CVOL LENGTH FIELD           @Y30LB02 25650003
CVOLOPC  DC    XL1'2A'             COPY VOLUME OPCODE          @Y30LB02 25700003
CVOLRES1 DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02 25750003
CVOLFLG  DC    XL2'0000'           2-BYTE FLAGS AREA-ZERO      @Y30LB02 25800003
CVOLVOL  DC    XL6'0000'           6 BYTE VOLID AREA           @Y30LB02 25850003
CVOLASID DC    XL2'0000'           2-BYTE ASID AREA            @Y30LB02 25900003
CVOLECB  DC    XL4'00000000'       4-BYTE ECB AREA             @Y30LB02 25950003
CVOLCSN  DC    XL12'000000'        12-BYTE CSN AREA            @Y30LB02 26000003
CVOLRUA  DC    XL2'0000'           2-BYTE RUA AREA             @Y30LB02 26050003
CVOLRES2 DC    XL2'0000'           2-BYTE RESERVED AREA        @Y30LB02 26100003
CVOLVEXT DC    XL4'0000'           2-BYTE VVICEXT AREA         @Y30LB02 26150003
&LBL     EQU   *                                               @Y30LB02 26200003
.*                                                             @Y30LB02 26250003
.*       PROCESS REQUEST BLOCK FOR STANDARD & EXECUTE FORMS    @Y30LB02 26300003
.*                                                             @Y30LB02 26350003
.PROCES  AIF   (&ERSW).FINISH                                  @Y30LB02 26400003
         AIF   ('&FLAGS' EQ '').VOLID       FLAGS SPECIFIED?   @Y30LB02 26450003
         AIF   ('&FLAGS'(1,1) EQ '(').REGF FLAGS IN REGFORM?   @Y30LB02 26500003
         MVC   6(2,1),&FLAGS          MOVE FLAGS TO REQ BLK    @Y30LB02 26550003
         AGO   .VOLID                 BR TO CHECK FOR VOLID    @Y30LB02 26600003
.*                                                             @Y30LB02 26650003
.REGF    ANOP                                                  @Y30LB02 26700003
         MVC   6(2,1),0(&FLAGS(1))    REG-FORM-STORE FLAGS     @Y30LB02 26750003
.*                                                             @Y30LB02 26800003
.VOLID   AIF   ('&VOLID' EQ '').ECB          VOLID SPECIFIED?  @Y30LB02 26850003
         AIF   ('&VOLID'(1,1) EQ '(').SREG   REG-FORM?         @Y30LB02 26900003
         MVC   8(6,1),&VOLID          MOVE VOLID TO REQBLK     @Y30LB02 26950003
         AGO   .ECB                                            @Y30LB02 27000003
.*                                                             @Y30LB02 27050003
.SREG    ANOP                                                  @Y30LB02 27100003
         MVC   8(6,1),0(&VOLID(1))    REG-FORM--STORE VOLID    @Y30LB02 27150003
.*                                                             @Y30LB02 27200003
.ECB     AIF   ('&ECB' EQ '').CSN          ECB SPECIFIED?      @Y30LB02 27250003
         AIF   ('&ECB'(1,1) EQ '(').EREG   REG-FORM?           @Y30LB02 27300003
         LA    15,&ECB                LOAD R15 WITH ADDR       @Y30LB02 27350003
         ST    15,16(1)               ST ADDR IN ECB FIELD     @Y30LB02 27400003
         AGO   .CSN                                            @Y30LB02 27450003
.*                                                             @Y30LB02 27500003
.EREG    ANOP                                                  @Y30LB02 27550003
         ST    &ECB,16(1)             REG-FORM--STORE ECB      @Y30LB02 27600003
.CSN     AIF   ('&CSN' EQ '').RUA  IS CSN SPECIFIED            @Y30LB02 27650003
         AIF   ('&CSN'(1,1) EQ '(').CREG    REG-FORM           @Y30LB02 27700003
         MVC   20(12,1),&CSN          MOVE CSN TO REQBLK       @Y30LB02 27750003
         AIF   ('&TYPE' EQ 'CVOL').RUA     BRCH TO CHECK RUA   @Y30LB02 27800003
         AGO   .INVOKE                                         @Y30LB02 27850003
.*                                                             @Y30LB02 27900003
.CREG    ANOP                                                  @Y30LB02 27950003
         MVC   20(12,1),0(&CSN(1))    REG-FORM--STORE CSN      @Y30LB02 28000003
         AIF   ('&TYPE' EQ 'CVOL').RUA     BRCH TO CHECK RUA   @Y30LB02 28050003
         AGO   .INVOKE                                         @Y30LB02 28100003
.*                                                             @Y30LB02 28150003
.*                                                             @Y30LB02 28200003
.RUA     AIF   ('&TYPE' EQ 'CCRT').INVOKE    BR TO SVC IF CCRT @Y30LB02 28250003
         AIF   ('&RUA' EQ '').VEXT           BRCH IF RUA NULL  @Y30LB02 28300003
         AIF   ('&RUA'(1,1) EQ '(').UREG     REGISTER FORM?    @Y30LB02 28350003
         MVC   32(2,1),&RUA           MOVE RUA TO REQ BLK      @Y30LB02 28400003
         AGO   .VEXT                                           @Y30LB02 28450003
.*                                                             @Y30LB02 28500003
.UREG    ANOP                                                  @Y30LB02 28550003
         MVC   32(2,1),0(&RUA(1))     REG-FORM, STORE RUA      @Y30LB02 28600003
.*                                                             @Y30LB02 28650003
.VEXT    AIF   ('&VVICEXT' EQ '').INVOKE   VVICEXT SPECIFIED?  @Y30LB02 28700003
         AIF   ('&VVICEXT'(1,1) EQ '(').VEREG    REG FORM?     @Y30LB02 28750003
         LA    15,&VVICEXT            LOAD ADDRESS IN R15      @Y30LB02 28800003
         ST    15,36(1)               STORE ADDRESS            @Y30LB02 28850003
         AGO   .INVOKE                                         @Y30LB02 28900003
.*                                                             @Y30LB02 28950003
.VEREG   ANOP                                                  @Y30LB02 29000003
         ST    &VVICEXT,36(1)         REG-FORM, STORE VVICEXT  @Y30LB02 29050003
.*                                                             @Y30LB02 29100003
.INVOKE  ANOP                                                  @Y30LB02 29150003
         SVC   126                    INVOKE SVC               @Y30LB02 29200003
.FINISH  MEND                                                  @Y30LB02 29250003
**/                                                                     29300003
*   ICBCOVC:  MACRO KEYS(MF,TYPE,FLAGS,VOLID,RUA,ECB,CSN,               29350003
*                     VVICEXT);                            /*@Y30LB02*/ 29400003
*/*                                                          @Y30LB02*/ 29450003
*/*            EXTERNAL DECLARES                             @Y30LB02*/ 29500003
*        DCL CVTESTR FIXED EXT;  /*INVOCATION COUNTER        @Y30LB02*/ 29550003
*        DCL CVOLTEST FIXED EXT; /*CTR FOR STANDARD FORM     @Y30LB02*/ 29600003
*        DCL CCRTTEST FIXED EXT;  /*CTR FOR  CCRT S-FORM     @Y30LB02*/ 29650003
*/*                                                          @Y30LB02*/ 29700003
*/*                                                          @Y30LB02*/ 29750003
*/*            INTERNAL DECLARES                             @Y30LB02*/ 29800003
*/*                                                          @Y30LB02*/ 29850003
*   DCL CTR        FIXED;        /*CTR FOR LIST PARAMETERS   @Y30LB02*/ 29900003
*   DCL ERSW       FIXED;        /*ERROR COND SWITCH         @Y30LB02*/ 29950003
*   DCL CVOLCOD    CHAR;         /*COPYV OPCODE              @Y30LB02*/ 30000003
*   DCL CCRTCOD    CHAR;         /*COPYC OPCODE              @Y30LB02*/ 30050003
*   DCL RETCODE    FIXED;        /*RETURN CODE AREA          @Y30LB02*/ 30100003
*   DCL CVLEN      CHAR;         /*LENGTH OF CVOL REQ BLOCK  @Y30LB02*/ 30150003
*   DCL CCLEN      CHAR;         /*LENGTH OF CCRT REQ BLOCK  @Y30LB02*/ 30200003
*        CVOLCOD='2A';           /*COPY VOLUME OPCODE        @Y30LB02*/ 30250003
*        CCRTCOD='28';           /*COPY CARTRIDGE OPCODE     @Y30LB02*/ 30300003
*        RETCODE=0;              /*INITIALIZE RETURN CODE    @Y30LB02*/ 30350003
*        CCLEN='20';             /*COPY CARTRIDGE LENGTH     @Y30LB02*/ 30400003
*        ERSW = 0;               /*INITIALIZE ERROR SWITCH   @Y30LB02*/ 30450003
*        CVLEN='28';             /*COPY VOLUME LENGTH        @Y30LB02*/ 30500003
*        CTR = 0;                /*INITIALIZE PARM COUNTER   @Y30LB02*/ 30550003
*/*                                                          @Y30LB02*/ 30600003
*/*            CHECK FOR VALID TYPE SPECIFICATION            @Y30LB02*/ 30650003
*/*                                                          @Y30LB02*/ 30700003
*   IF TYPE='' THEN              /*TYPE SPECIFIED?           @Y30LB02*/ 30750003
*     DO;                        /*NO,PRINT ERROR MESSAGE    @Y30LB02*/ 30800003
*        ERSW=1;                 /*SET ERROR SWITCH          @Y30LB02*/ 30850003
*        ANS MSG('  ICB600I - TYPE MUST BE SPECIFIED')SKIP;/*@Y30LB02*/ 30900003
*        RETCODE=12;             /*SET RETURN CODE           @Y30LB02*/ 30950003
*        GO TO FINISH;           /*BRANCH,END PROCESSING     @Y30LB02*/ 31000003
*     END;                       /*                          @Y30LB02*/ 31050003
*   IF ERSW=1 THEN               /*IS ERROR SWITCH SET       @Y30LB02*/ 31100003
*        GO TO FINISH;           /*YES,BRCH,END PROCESSING   @Y30LB02*/ 31150003
*   IF TYPE(1)='CVOL' THEN       /*TYPE COPY VOL?            @Y30LB02*/ 31200003
*        GO TO START;            /*VALID TYPE,BRANCH         @Y30LB02*/ 31250003
*   IF TYPE(1) = 'CCRT' THEN     /*TYPE COPY CART?           @Y30LB02*/ 31300003
*        GO TO START;            /*VALID TYPE,CONTINUE       @Y30LB02*/ 31350003
*/*                                                          @Y30LB02*/ 31400003
*/*      INVALID 'TYPE' WILL CREATE THE FOLLOWING ERR MSGS   @Y30LB02*/ 31450003
*/*                                                          @Y30LB02*/ 31500003
*   ERSW=1;                       /*SET ERROR SWITCH         @Y30LB02*/ 31550003
*   ANS MSG('  ICB601I - TYPE IS INCORRECTLY'||                         31600003
*           ' SPECIFIED')SKIP;                             /*@Y30LB02*/ 31650003
*   RETCODE=12;               /*SET RETURN CODE TO 12        @Y30LB02*/ 31700003
*   IF ERSW=1 THEN            /*CHECK ERROR SWITCH           @Y30LB02*/ 31750003
*   GO TO FINISH;             /*IF SET,BRCH TO END           @Y30LB02*/ 31800003
*/*                                                          @Y30LB02*/ 31850003
*START:                                                                 31900003
*     IF CVTESTR = 0 THEN    /*REG 1 DECLARED?               @Y30LB02*/ 31950003
*      DO;                   /*NO,DECLARE IT                 @Y30LB02*/ 32000003
*        ANS('DCL CVOLR1 REG(1) PTR;/*DECLARE R1 - '||                  32050003
*        'ADDRESS OF REQUEST BLOCK @Y30LB02*/')SKIP;                    32100003
*        CVTESTR=1;          /*INCREM REG COUNTER            @Y30LB02*/ 32150003
*      END;                  /*                              @Y30LB02*/ 32200003
*   IF MF(1) ¬= 'L' THEN     /*LIST FORM REQUEST?            @Y30LB02*/ 32250003
*        GO TO CKFORM;       /*NO,BRCH,CK FOR OTHER FORM     @Y30LB02*/ 32300003
*   IF MF(2) ¬= '' THEN      /*LIST NAME SPECIFIED?          @Y30LB02*/ 32350003
*        GO TO LISTFORM;     /*YES,BRCH,PROCESS REQUEST      @Y30LB02*/ 32400003
*   ERSW=1;                  /*NO,SET ERROR SWITCH           @Y30LB02*/ 32450003
*   ANS MSG('  ICB602I - A NAME FOR THE '||                             32500003
*     'REQUEST BLOCK MUST BE SPECIFIED IN MF(2)')SKIP;     /*@Y30LB02*/ 32550003
*   RETCODE=12;             /*SET RETURN CODE TO 12          @Y30LB02*/ 32600003
*   IF ERSW=1 THEN          /*ERROR SWITCH SET?              @Y30LB02*/ 32650003
*   GO TO FINISH;           /*YES,BRCH,END PROCESSING        @Y30LB02*/ 32700003
*/*                                                          @Y30LB02*/ 32750003
*LISTFORM:                                                              32800003
*/********************************************************   @Y30LB02*/ 32850003
*/*  CHECK FOR ILLEGAL PARAMETERS AND PRINT OUT DECLARES     @Y30LB02*/ 32900003
*/********************************************************   @Y30LB02*/ 32950003
*   IF FLAGS ¬= '' THEN     /*FLAGS PARAMETER SPECIFIED?     @Y30LB02*/ 33000003
*        CTR = CTR + 1;     /*YES,INCREMENT COUNTER          @Y30LB02*/ 33050003
*   IF VOLID ¬= '' THEN     /*VOLID PARAMETER SPECIFIED?     @Y30LB02*/ 33100003
*        CTR = CTR + 1;     /*YES,INCREMENT COUNTER          @Y30LB02*/ 33150003
*   IF RUA ¬= '' THEN       /*RUA SPECIFIED?                 @Y30LB02*/ 33200003
*        CTR = CTR + 1;     /*YES,INCREMENT COUNTER          @Y30LB02*/ 33250003
*   IF ECB ¬= '' THEN       /*ECB PARAMETER SPECIFIED?       @Y30LB02*/ 33300003
*        CTR = CTR + 1;     /*YES,INCREMENT COUNTER          @Y30LB02*/ 33350003
*   IF CSN ¬= '' THEN       /*CSN PARAMETER SPECIFIED?       @Y30LB02*/ 33400003
*        CTR = CTR + 1;     /*YES INCREMENT COUNTER          @Y30LB02*/ 33450003
*   IF VVICEXT ¬= '' THEN   /*VVICEXT SPECIFIED?             @Y30LB02*/ 33500003
*        CTR = CTR + 1;     /*YES,INCREMENT COUNTER          @Y30LB02*/ 33550003
*   IF CTR > 0 THEN         /*IS COUNTER GT ZERO?            @Y30LB02*/ 33600003
*     DO;                   /*YES,PRINT WARNING MSG          @Y30LB02*/ 33650003
*        RETCODE=4;         /*SET RETURN CODE TO 4           @Y30LB02*/ 33700003
*        ANS MSG('  ICB603I - WARNING-ONLY MF AND '||                   33750003
*             'TYPE PARAMETERS ARE VALID FOR LIST '||                   33800003
*             'FORM ')SKIP;                                /*@Y30LB02*/ 33850003
*     END;                  /*                               @Y30LB02*/ 33900003
*/*                                                          @Y30LB02*/ 33950003
*    IF MF(3) ¬= '' THEN    /*PLS ATTRIBUTE SPECIFIED?       @Y30LB02*/ 34000003
*       GO TO ATTRLST;      /*YES,BRANCH                     @Y30LB02*/ 34050003
*/*                                                          @Y30LB02*/ 34100003
*   IF TYPE(1)='CVOL' THEN   /*TYPE CVOL?                    @Y30LB02*/ 34150003
*     DO;                    /*PRINT CVOL LIST FORM          @Y30LB02*/ 34200003
*        ANS('/*******************************************'||           34250003
*            '************** @Y30LB02*/')SKIP;                          34300003
*        ANS('/*    MACMEAN  MSSC COPY VOLUME MACRO       '||           34350003
*            '               @Y30LB02*/')SKIP;                          34400003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           34450003
*            '               @Y30LB02*/')SKIP;                          34500003
*        ANS('/*THIS IS THE INITIALIZED LIST FORM         '||           34550003
*            '               @Y30LB02*/')SKIP;                          34600003
*        ANS('/*******************************************'||           34650003
*            '************** @Y30LB02*/')SKIP;                          34700003
*        ANS('DCL 1 ' ||MF(2)|| '  STATIC LOCAL,'||                     34750003
*        ' /*COPY VOLUME REQUEST BLOCK @Y30LB02*/')SKIP;                34800003
*        ANS('    2  CVOLLEN  FIXED(31)INIT('||QUOTE                    34850003
*        ('28')||'X),/*LENGTH OF REQBLK @Y30LB02*/')SKIP;               34900003
*        ANS('    2  CVOLOPCD CHAR(1)INIT('||QUOTE('2A')||              34950003
*        'X),/*COPY VOLUME OPCODE @Y30LB02*/')SKIP;                     35000003
*        ANS('    2  CVOLRES1 CHAR(1)INIT('||QUOTE('00')||              35050003
*        'X), /*ONE BYTE OF ZERO @Y30LB02*/')SKIP;                      35100003
*        ANS('    2  CVOLFLG BIT(16)INIT('||QUOTE                       35150003
*        ('0000000000000000')||'B), /*FLAGS AREA @Y30LB02*/')SKIP;      35200003
*        ANS('     3  CVODASCR  BIT(1), /*DASD TO '||                   35250003
*        'CARTRIDGE ATTRIBUTE @Y30LB02*/')SKIP;                         35300003
*        ANS('     3  CVOCRDAS  BIT(1),/*CARTRIDGE '||                  35350003
*        'TO DASD ATTRIBUTE @Y30LB02*/')SKIP;                           35400003
*        ANS('     3  CVOCRCR  BIT(1),/*CARTRIDGE '||                   35450003
*        'TO CARTRIDGE ATTRIBUTE TRANS VOL @Y30LB02*/')SKIP;            35500003
*        ANS('     3  CVOCRCRV BIT(1),/*CARTRIDGE '||                   35550003
*        'TO CARTRIDGE ATTRIBUTE VOL INV LIST @Y30LB02*/')SKIP;         35600003
*        ANS('     3  *      BIT(12),'||                                35650003
*        ' /*TWELVE BITS RESERVED @Y30LB02*/')SKIP;                     35700003
*        ANS('    2  CVOLID  CHAR(6) INIT('||QUOTE                      35750003
*        ('000000000000')||'X), /*VOLUME ID  @Y30LB02*/')SKIP;          35800003
*        ANS('    2  CVOLASID CHAR(2) INIT('||QUOTE                     35850003
*        ('0000')||'X),/*ASID AREA @Y30LB02*/')SKIP;                    35900003
*        ANS('    2  CVOLECB  FIXED(31) INIT(0),'||                     35950003
*        ' /*EVENT CONTROL BLOCK  @Y30LB02*/')SKIP;                     36000003
*        ANS('    2  CVOLCSN CHAR(12),/*CSN AREA @Y30LB02*/')SKIP;      36050003
*        ANS('       3  *(12) CHAR(1)INIT((12)'||QUOTE                  36100003
*        ('00')||'X),/*INIT CSN AREA @Y30LB02*/')SKIP;                  36150003
*        ANS('    2  CVOLRUA  FIXED(15) INIT(0),'||                     36200003
*        ' /*REAL UNIT ADDRESS  @Y30LB02*/')SKIP;                       36250003
*        ANS('    2  CVOLRES2 CHAR(2) INIT('||QUOTE                     36300003
*        ('0000')||'X),/*RESERVED AREA @Y30LB02*/')SKIP;                36350003
*        ANS('    2  CVOLVEXT FIXED(31) INIT(0);'||                     36400003
*        '/*MSVC EXTENSION AREA @Y30LB02*/')SKIP;                       36450003
*        GO TO FINISH;        /*BRANCH TO END                @Y30LB02*/ 36500003
*     END;                    /*                             @Y30LB02*/ 36550003
*/*                                                          @Y30LB02*/ 36600003
*  ELSE                       /*COPY CART REQUEST            @Y30LB02*/ 36650003
*     DO;                     /*PRINT COPY CART REQBLK       @Y30LB02*/ 36700003
*        ANS('/*******************************************'||           36750003
*            '************** @Y30LB02*/')SKIP;                          36800003
*        ANS('/*    MACMEAN  MSSC COPY CARTRIDGE MACRO    '||           36850003
*            '               @Y30LB02*/')SKIP;                          36900003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           36950003
*            '               @Y30LB02*/')SKIP;                          37000003
*        ANS('/*THIS IS THE INITIALIZED LIST FORM         '||           37050003
*            '               @Y30LB02*/')SKIP;                          37100003
*        ANS('/*******************************************'||           37150003
*           '************** @Y30LB02*/')SKIP;                           37200003
*        ANS('DCL 1 ' ||MF(2)|| '  STATIC LOCAL,'||                     37250003
*        ' /*COPY CARTRIDGE REQUEST BLOCK @Y30LB02*/')SKIP;             37300003
*        ANS('    2  CCRTLEN  FIXED(31)INIT('||QUOTE('20')||            37350003
*        'X),/*LENGTH OF REQUEST BLOCK @Y30LB02*/')SKIP;                37400003
*        ANS('    2  CCRTOPCD CHAR(1)INIT('||QUOTE('28')||              37450003
*        'X),/*COPY CARTRIDGE OPCODE @Y30LB02*/')SKIP;                  37500003
*        ANS('    2  CCRTRES1 CHAR(1)INIT('||QUOTE('00')||              37550003
*        'X), /*ONE BYTE OF ZERO @Y30LB02*/')SKIP;                      37600003
*        ANS('    2  CCRTFLG BIT(16)INIT('||QUOTE                       37650003
*        ('0000000000000000')||'B), /*FLAGS AREA @Y30LB02*/')SKIP;      37700003
*        ANS('     3  CCRTCRT1  BIT(1), /*CART 1 OF 2 '||               37750003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   37800003
*        ANS('     3  CCRTCRT2  BIT(1), /*CART 2 OF 2 '||               37850003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   37900003
*        ANS('     3  *      BIT(14),'||                                37950003
*        ' /*FOURTEEN BITS RESERVED @Y30LB02*/')SKIP;                   38000003
*        ANS('    2  CCRTVOL  CHAR(6) INIT('||QUOTE                     38050003
*        ('000000000000')||'X),/*VOLID AREA @Y30LB02*/')SKIP;           38100003
*        ANS('    2  CCRTASID CHAR(2) INIT('||QUOTE                     38150003
*        ('0000')||'X),/*ASID AREA @Y30LB02*/')SKIP;                    38200003
*        ANS('    2  CCRTECB  FIXED(31) INIT(0),'||                     38250003
*        ' /*EVENT CONTROL BLOCK  @Y30LB02*/')SKIP;                     38300003
*        ANS('    2  CCRTCSN CHAR(12),/*CSN AREA @Y30LB02*/')SKIP;      38350003
*        ANS('       3  *(12) CHAR(1)INIT((12)'||QUOTE                  38400003
*        ('00')||'X);/*INIT CSN AREA @Y30LB02*/')SKIP;                  38450003
*        GO TO FINISH;        /*BRANCH TO END                @Y30LB02*/ 38500003
*     END;                    /*                             @Y30LB02*/ 38550003
*ATTRLST:                                                               38600003
*/*                                                          @Y30LB02*/ 38650003
*   IF TYPE(1)='CVOL' THEN    /*COPY VOL REQUEST?            @Y30LB02*/ 38700003
*     DO;                     /*CVOL UNINIT REQUEST BLOCK    @Y30LB02*/ 38750003
*        ANS('/*******************************************'||           38800003
*            '************* @Y30LB02*/')SKIP;                           38850003
*        ANS('/*     MACMEAN  MSSC COPY VOLUME MACRO      '||           38900003
*            '              @Y30LB02*/')SKIP;                           38950003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           39000003
*            '              @Y30LB02*/')SKIP;                           39050003
*        ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||           39100003
*            '              @Y30LB02*/')SKIP;                           39150003
*        ANS('/*******************************************'||           39200003
*            '************* @Y30LB02*/')SKIP;                           39250003
*        ANS('DCL 1 ' ||MF(2)||' '||MF(3)||','||                        39300003
*        ' /*COPY VOLUME REQUEST BLOCK @Y30LB02*/')SKIP;                39350003
*        ANS('    2  CVOLLEN  FIXED(31),/*LENGTH'||                     39400003
*        ' OF REQ BLOCK = 28 BYTES HEX @Y30LB02*/')SKIP;                39450003
*        ANS('    2  CVOLOPCD CHAR(1),'||                               39500003
*        '/*COPY VOLUME OPCODE = 2A HEX @Y30LB02*/')SKIP;               39550003
*        ANS('    2  CVOLRES1 CHAR(1),'||                               39600003
*        ' /*ONE BYTE OF ZERO @Y30LB02*/')SKIP;                         39650003
*        ANS('    2  CVOLFLG BIT(16),'||                                39700003
*        ' /*FLAGS AREA @Y30LB02*/')SKIP;                               39750003
*        ANS('     3  CVODASCR  BIT(1), /*DASD TO '||                   39800003
*        'CARTRIDGE ATTRIBUTE @Y30LB02*/')SKIP;                         39850003
*        ANS('     3  CVOCRDAS  BIT(1),/*CARTRIDGE '||                  39900003
*        'TO DASD ATTRIBUTE @Y30LB02*/')SKIP;                           39950003
*        ANS('     3  CVOCRCR  BIT(1),/*CARTRIDGE '||                   40000003
*        'TO CARTRIDGE ATTRIBUTE TRANS VOL @Y30LB02*/')SKIP;            40050003
*        ANS('     3  CVOCRCRV BIT(1),/*CARTRIDGE '||                   40100003
*        'TO CARTRIDGE ATTRIBUTE VOL INV LIST @Y30LB02*/')SKIP;         40150003
*        ANS('     3  *      BIT(12),'||                                40200003
*        ' /*THIRTEEN BITS RESERVED @Y30LB02*/')SKIP;                   40250003
*        ANS('    2  CVOLID  CHAR(6),'||                                40300003
*        ' /*VOLUME ID  @Y30LB02*/')SKIP;                               40350003
*        ANS('    2  CVOLASID CHAR(2) ,'||                              40400003
*        '/*ASID AREA @Y30LB02*/')SKIP;                                 40450003
*        ANS('    2  CVOLECB  FIXED(31) ,'||                            40500003
*        ' /*EVENT CONTROL BLOCK  @Y30LB02*/')SKIP;                     40550003
*        ANS('    2  CVOLCSN CHAR(12),/*CSN AREA @Y30LB02*/')SKIP;      40600003
*        ANS('    2  CVOLRUA  FIXED(15),'||                             40650003
*        ' /*REAL UNIT ADDRESS  @Y30LB02*/')SKIP;                       40700003
*        ANS('    2  CVOLRES2 CHAR(2) ,'||                              40750003
*        '/*RESERVED AREA @Y30LB02*/')SKIP;                             40800003
*        ANS('    2  CVOLVEXT  FIXED(31) ;'||                           40850003
*        ' /*MSVC EXTENTION AREA  @Y30LB02*/')SKIP;                     40900003
*        GO TO FINISH;        /*BRANCH TO END                @Y30LB02*/ 40950003
*     END;                    /*                             @Y30LB02*/ 41000003
*/*                                                          @Y30LB02*/ 41050003
*  ELSE                       /*COPY CARTRIDGE REQUEST       @Y30LB02*/ 41100003
*     DO;                     /*COPY CART REQ BLOCK          @Y30LB02*/ 41150003
*        ANS('/*******************************************'||           41200003
*            '************* @Y30LB02*/')SKIP;                           41250003
*        ANS('/*   MACMEAN  MSSC COPY CARTRIDGE MACRO     '||           41300003
*            '              @Y30LB02*/')SKIP;                           41350003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           41400003
*            '              @Y30LB02*/')SKIP;                           41450003
*        ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||           41500003
*            '              @Y30LB02*/')SKIP;                           41550003
*        ANS('/*******************************************'||           41600003
*            '************* @Y30LB02*/')SKIP;                           41650003
*        ANS('DCL 1 ' ||MF(2)||' '||MF(3)||','||                        41700003
*        ' /*COPY CARTRIDGE REQUEST BLOCK @Y30LB02*/')SKIP;             41750003
*        ANS('    2  CCRTLEN  FIXED(31),/*LENGTH OF'||                  41800003
*        ' REQUEST BLOCK = 20 HEX @Y30LB02*/')SKIP;                     41850003
*        ANS('    2  CCRTOPCD CHAR(1),'||                               41900003
*        '/*COPY CARTRIDGE OPCODE = 28 HEX @Y30LB02*/')SKIP;            41950003
*        ANS('    2  CCRTRES1 CHAR(1),'||                               42000003
*        ' /*ONE BYTE OF ZERO @Y30LB02*/')SKIP;                         42050003
*        ANS('    2  CCRTFLG BIT(16),/*FLAGS AREA @Y30LB02*/')SKIP;     42100003
*        ANS('     3  CCRTCRT1  BIT(1), /*CART 1 OF 2 '||               42150003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   42200003
*        ANS('     3  CCRTCRT2  BIT(1), /*CART 2 OF 2 '||               42250003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   42300003
*        ANS('     3  *      BIT(14),'||                                42350003
*        ' /*FOURTEEN BITS RESERVED @Y30LB02*/')SKIP;                   42400003
*        ANS('    2  CCRTVOL  CHAR(6),'||                               42450003
*        '/*VOLID AREA @Y30LB02*/')SKIP;                                42500003
*        ANS('    2  CCRTASID CHAR(2),/*ASID AREA @Y30LB02*/')SKIP;     42550003
*        ANS('    2  CCRTECB  FIXED(31),'||                             42600003
*        ' /*EVENT CONTROL BLOCK  @Y30LB02*/')SKIP;                     42650003
*        ANS('    2  CCRTCSN CHAR(12);/*CSN AREA @Y30LB02*/')SKIP;      42700003
*        GO TO FINISH;        /*BRANCH TO END                @Y30LB02*/ 42750003
*     END;                    /*                             @Y30LB02*/ 42800003
*/*                                                        /*@Y30LB02*/ 42850003
*/*      CHECK FOR EXECUTE FORM SPECIFICATION              /*@Y30LB02*/ 42900003
*/*                                                          @Y30LB02*/ 42950003
*CKFORM:                                                                43000003
*   IF MF(1) ¬= 'E' THEN       /*EXECUTE FORM SPECIFIED?     @Y30LB02*/ 43050003
*        GO TO SFORM;          /*NO,CK FOR STANDARD          @Y30LB02*/ 43100003
*   IF MF(2)='' THEN           /*2ND SUB-PARM SPECIFIED?     @Y30LB02*/ 43150003
*     DO;                      /*PRINT ERROR MESSAGE         @Y30LB02*/ 43200003
*        ANS MSG('  ICB612I - MF(2) MUST '||                            43250003
*             'CONTAIN REQ BLK NAME IF '||                              43300003
*             'EXEC MACRO FORM REQUESTED')SKIP;            /*@Y30LB02*/ 43350003
*        RETCODE=12;           /*SET ERROR RETURN CODE       @Y30LB02*/ 43400003
*        ERSW = 1;             /*SET ERROR SWITCH            @Y30LB02*/ 43450003
*        GO TO COMPROC;        /*BRANCH TO CK ERROR SWITCH   @Y30LB02*/ 43500003
*     END;                     /*                            @Y30LB02*/ 43550003
*/*                                                        /*@Y30LB02*/ 43600003
*   ANS('/*******************************************'||                43650003
*       '************* @Y30LB02*/')SKIP;                                43700003
*   ANS('/*MACMEAN  MSSC COPY VOLUME/CARTRIDGE MACRO '||                43750003
*       '              @Y30LB02*/')SKIP;                                43800003
*   ANS('/*VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00   '||                43850003
*       '              @Y30LB02*/')SKIP;                                43900003
*   ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '||                43950003
*       '              @Y30LB02*/')SKIP;                                44000003
*   ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '||                44050003
*       '              @Y30LB02*/')SKIP;                                44100003
*   ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'||                44150003
*       '              @Y30LB02*/')SKIP;                                44200003
*   ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '||                44250003
*       '              @Y30LB02*/')SKIP;                                44300003
*   ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '||                44350003
*       '              @Y30LB02*/')SKIP;                                44400003
*   ANS('/*******************************************'||                44450003
*       '************* @Y30LB02*/')SKIP;                                44500003
*    IF MF(3) = 'COMPLETE' THEN   /*REQUEST TO ZERO BLOCK?   @Y30LB02*/ 44550003
*      DO;                     /*                            @Y30LB02*/ 44600003
*        ANS(' '||MF(2)||'='||MF(2)||'&&'||MF(2)||';'||                 44650003
*        '/*ZERO OUT REQUEST BLOCK @Y30LB02*/')SKIP;                    44700003
*      END;                    /*                            @Y30LB02*/ 44750003
*/*                                                          @Y30LB02*/ 44800003
*        ANS('RFY(CVOLR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;        44850003
*        ANS('CVOLR1=ADDR('||MF(2)||'); /*R1 PTR'||                     44900003
*        ' TO LIST  @Y30LB02*/')SKIP;                                   44950003
*        GO TO COMPROC;       /*BRANCH TO CK PARAMETERS      @Y30LB02*/ 45000003
*/*                                                          @Y30LB02*/ 45050003
*SFORM:                                                                 45100003
*   IF MF(1) ¬= '' THEN       /* FORM STANDARD?              @Y30LB02*/ 45150003
*     DO;                     /*NO,PRINT ERROR MESSAGE       @Y30LB02*/ 45200003
*        ERSW = 1;            /*SET ERROR SWITCH             @Y30LB02*/ 45250003
*        RETCODE=12;          /*SET RETURN CODE              @Y30LB02*/ 45300003
*        ANS MSG('  ICB615I - INVALID MF PARAMETER '||                  45350003
*             'SPECIFIED, MUST BE L, E, OR NULL')SKIP;     /*@Y30LB02*/ 45400003
*        GO TO COMPROC;       /*BRANCH,CK ERROR SWITCH       @Y30LB02*/ 45450003
*     END;                    /*                             @Y30LB02*/ 45500003
*/*                                                          @Y30LB02*/ 45550003
*   IF FLAGS = '' THEN        /*FLAGS SPECIFIED?             @Y30LB02*/ 45600003
*     DO;                     /*NO,PROCESS ERROR MESSAGE     @Y30LB02*/ 45650003
*        ERSW=1;              /*SET THE ERROR SWITCH         @Y30LB02*/ 45700003
*        RETCODE=12;          /*SET RETURN CODE TO 12        @Y30LB02*/ 45750003
*        ANS MSG('  ICB607I - FLAGS MUST BE SPECIFIED '||               45800003
*        'FOR STANDARD FORM MACRO')SKIP;                   /*@Y30LB02*/ 45850003
*        GO TO COMPROC;       /*BRANCH TO CK ERROR SWITCH    @Y30LB02*/ 45900003
*     END;                    /*                             @Y30LB02*/ 45950003
*/*                                                          @Y30LB02*/ 46000003
*   IF VOLID = '' THEN        /*VOLID SPECIFIED?             @Y30LB02*/ 46050003
*    IF TYPE(1) = 'CCRT' THEN /*TYPE CCRT?                   @Y30LB02*/ 46100003
*     DO;                     /*NO,PRINT ERROR MESSAGE       @Y30LB02*/ 46150003
*        ERSW=1;              /*SET ERROR SWITCH             @Y30LB02*/ 46200003
*        RETCODE=12;          /*SET RETURN CODE              @Y30LB02*/ 46250003
*        ANS MSG('  ICB610I - VOLID MUST BE SPECIFIED '||               46300003
*        'FOR STANDARD FORM MACRO')SKIP;                   /*@Y30LB02*/ 46350003
*        GO TO COMPROC;       /*BRANCH TO CK ERROR SWITCH    @Y30LB02*/ 46400003
*     END;                    /*                             @Y30LB02*/ 46450003
*/*                                                          @Y30LB02*/ 46500003
*   IF RUA = '' THEN        /*VOLID SPECIFIED?               @Y30LB02*/ 46550003
*    IF TYPE(1) = 'CVOL' THEN  /*NO,COPY VOLUME?             @Y30LB02*/ 46600003
*     DO;                     /*YES,PRINT ERROR MESSAGE      @Y30LB02*/ 46650003
*        ERSW=1;              /*SET ERROR SWITCH             @Y30LB02*/ 46700003
*        RETCODE=12;          /*SET RETURN CODE              @Y30LB02*/ 46750003
*        ANS MSG('  ICB616I - RUA MUST BE SPECIFIED '||                 46800003
*        'FOR STANDARD FORM MACRO ')SKIP;                  /*@Y30LB02*/ 46850003
*        GO TO COMPROC;       /*BRANCH TO CK ERROR SWITCH    @Y30LB02*/ 46900003
*     END;                    /*                             @Y30LB02*/ 46950003
*   IF ECB = '' THEN          /*ECB SPECIFIED                @Y30LB02*/ 47000003
*     DO;                     /*NO,PRINT ERROR MESSAGE       @Y30LB02*/ 47050003
*        ERSW=1;              /*SET ERROR SWITCH             @Y30LB02*/ 47100003
*        RETCODE=12;          /*SET RETURN CODE              @Y30LB02*/ 47150003
*        ANS MSG('  ICB605I - ECB MUST BE SPECIFIED '||                 47200003
*        'FOR STANDARD FORM MACRO')SKIP;                   /*@Y30LB02*/ 47250003
*        GO TO COMPROC;        /*BRANCH TO CK ERROR SWITCH   @Y30LB02*/ 47300003
*     END;                     /*                            @Y30LB02*/ 47350003
*/*                                                          @Y30LB02*/ 47400003
*   IF TYPE(1)='CVOL' THEN     /*TYPE COPY VOLUME?           @Y30LB02*/ 47450003
*     IF CVOLTEST => 1 THEN    /*STD FORM INVOKED BEFORE?    @Y30LB02*/ 47500003
*      DO;                     /*YES,DON'T PRINT DECLARES    @Y30LB02*/ 47550003
*        ANS('/*******************************************'||           47600003
*            '************* @Y30LB02*/')SKIP;                           47650003
*        ANS('/*   MACMEAN  MSSC COPY VOLUME MACRO        '||           47700003
*            '              @Y30LB02*/')SKIP;                           47750003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           47800003
*            '              @Y30LB02*/')SKIP;                           47850003
*        ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '||           47900003
*            '              @Y30LB02*/')SKIP;                           47950003
*        ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||           48000003
*            '              @Y30LB02*/')SKIP;                           48050003
*        ANS('/*******************************************'||           48100003
*            '************* @Y30LB02*/')SKIP;                           48150003
*        ANS('RFY(CVOLR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;        48200003
*        ANS('CVOLR1=ADDR(CVOLLEN);/*PTR TO REQBLK    @Y30LB02*/')SKIP; 48250003
*        GO TO COMPROC;       /*BRANCH TO CK PARAMETERS      @Y30LB02*/ 48300003
*      END;                   /*                             @Y30LB02*/ 48350003
*/*                                                        /*@Y30LB02*/ 48400003
*     IF TYPE(1) = 'CVOL' THEN  /*COPY VOLUME                @Y30LB02*/ 48450003
*      DO;                   /*PRINT DECLARES                @Y30LB02*/ 48500003
*        ANS('/*******************************************'||           48550003
*            '************** @Y30LB02*/')SKIP;                          48600003
*        ANS('/*    MACMEAN  MSSC COPY VOLUME MACRO       '||           48650003
*            '               @Y30LB02*/')SKIP;                          48700003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           48750003
*            '               @Y30LB02*/')SKIP;                          48800003
*        ANS('/*OUTPUT FOR THE STANDARD FORM MACRO        '||           48850003
*            '               @Y30LB02*/')SKIP;                          48900003
*        ANS('/*******************************************'||           48950003
*            '************** @Y30LB02*/')SKIP;                          49000003
*        ANS('RFY(CVOLR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;        49050003
*        ANS('CVOLR1=ADDR(CVOLLEN);/*PTR REQUEST BLK  @Y30LB02*/')SKIP; 49100003
*        ANS('DCL 1  CVOLLST  STATIC LOCAL,'||                          49150003
*        ' /*COPY VOLUME REQUEST BLOCK @Y30LB02*/')SKIP;                49200003
*        ANS('    2  CVOLLEN  FIXED(31)INIT('||QUOTE('28')||            49250003
*        'X),/*LENGTH OF REQUEST BLOCK @Y30LB02*/')SKIP;                49300003
*        ANS('    2  CVOLOPCD CHAR(1)INIT('||QUOTE('2A')||              49350003
*        'X),/*COPY VOLUME OPCODE @Y30LB02*/')SKIP;                     49400003
*        ANS('    2  CVOLRES1 CHAR(1)INIT('||QUOTE('00')||              49450003
*        'X), /*ONE BYTE OF ZERO @Y30LB02*/')SKIP;                      49500003
*        ANS('    2  CVOLFLG BIT(16)INIT('||QUOTE                       49550003
*        ('0000000000000000')||'B), /*FLAGS AREA @Y30LB02*/')SKIP;      49600003
*        ANS('     3  CVODASCR  BIT(1), /*DASD TO '||                   49650003
*        'CARTRIDGE ATTRIBUTE @Y30LB02*/')SKIP;                         49700003
*        ANS('     3  CVOCRDAS  BIT(1),/*CARTRIDGE '||                  49750003
*        'TO DASD ATTRIBUTE @Y30LB02*/')SKIP;                           49800003
*        ANS('     3  CVOCRCR  BIT(1),/*CARTRIDGE '||                   49850003
*        'TO CARTRIDGE ATTRIBUTE TRAN VOL @Y30LB02*/')SKIP;             49900003
*        ANS('     3  CVOCRCRV BIT(1),/*CARTRIDGE '||                   49950003
*        'TO CARTRIDGE ATTRIBUTE VOL INVL @Y30LB02*/')SKIP;             50000003
*        ANS('     3  *      BIT(12),'||                                50050003
*        ' /*TWELVE BITS RESERVED @Y30LB02*/')SKIP;                     50100003
*        ANS('    2  CVOLID  CHAR(6) INIT('||QUOTE                      50150003
*        ('000000000000')||'X), /*VOLUME ID  @Y30LB02*/')SKIP;          50200003
*        ANS('    2  CVOLASID CHAR(2) INIT('||QUOTE                     50250003
*        ('0000')||'X),/*ASID AREA @Y30LB02*/')SKIP;                    50300003
*        ANS('    2  CVOLECB  FIXED(31) INIT(0),'||                     50350003
*        ' /*EVENT CONTROL BLOCK  @Y30LB02*/')SKIP;                     50400003
*        ANS('    2  CVOLCSN CHAR(12),/*CSN AREA @Y30LB02*/')SKIP;      50450003
*        ANS('       3  *(12) CHAR(1)INIT((12)'||QUOTE                  50500003
*        ('00')||'X),/*INIT CSN AREA @Y30LB02*/')SKIP;                  50550003
*        ANS('    2  CVOLRUA  FIXED(15) INIT(0),'||                     50600003
*        ' /*REAL UNIT ADDRESS  @Y30LB02*/')SKIP;                       50650003
*        ANS('    2  CVOLRES2 CHAR(2) INIT('||QUOTE                     50700003
*        ('0000')||'X),/*RESERVED AREA @Y30LB02*/')SKIP;                50750003
*        ANS('    2  CVOLVEXT  FIXED(31) INIT(0);'||                    50800003
*        ' /*MSVC EXTENSION AREA  @Y30LB02*/')SKIP;                     50850003
*        CVOLTEST=CVOLTEST+1; /*INCREM COUNTER               @Y30LB02*/ 50900003
*        GO TO COMPROC;    /*BRANCH TO CK PARAMETERS         @Y30LB02*/ 50950003
*     END;                /*                                 @Y30LB02*/ 51000003
*/*                                                          @Y30LB02*/ 51050003
*   ELSE                     /*PROCESS COPY CARTRIDGE        @Y30LB02*/ 51100003
*     IF CCRTTEST => 1 THEN  /*STD FM INVOKED BEFORE?        @Y30LB02*/ 51150003
*      DO;                   /*YES,DON'T PRINT DCLS          @Y30LB02*/ 51200003
*        ANS('/*******************************************'||           51250003
*            '************** @Y30LB02*/')SKIP;                          51300003
*        ANS('/*   MACMEAN  MSSC COPY CARTRIDGE MACRO     '||           51350003
*            '               @Y30LB02*/')SKIP;                          51400003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           51450003
*            '               @Y30LB02*/')SKIP;                          51500003
*        ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '||           51550003
*            '               @Y30LB02*/')SKIP;                          51600003
*        ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||           51650003
*            '               @Y30LB02*/')SKIP;                          51700003
*        ANS('/*******************************************'||           51750003
*            '************** @Y30LB02*/')SKIP;                          51800003
*        ANS('RFY(CVOLR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;        51850003
*        ANS('CVOLR1=ADDR(CCRTLEN);/*PTR TO BLOCK @Y30LB02*/')SKIP;     51900003
*        GO TO COMPROC;                                    /*@Y30LB02*/ 51950003
*      END;                                                /*@Y30LB02*/ 52000003
*     IF CCRTTEST=0 THEN      /*                             @Y30LB02*/ 52050003
*     DO;                                                  /*@Y30LB02*/ 52100003
*        ANS('/*******************************************'||           52150003
*            '************** @Y30LB02*/')SKIP;                          52200003
*        ANS('/*   MACMEAN  MSSC COPY CARTRIDGE MACRO     '||           52250003
*            '               @Y30LB02*/')SKIP;                          52300003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           52350003
*            '               @Y30LB02*/')SKIP;                          52400003
*        ANS('/*THIS IS THE OUTPUT FOR THE STANDARD FORM  '||           52450003
*            '               @Y30LB02*/')SKIP;                          52500003
*        ANS('/*******************************************'||           52550003
*            '************** @Y30LB02*/')SKIP;                          52600003
*        ANS('RFY(CVOLR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;        52650003
*        ANS('CVOLR1=ADDR(CCRTLEN);/*R1 PTR TO BLOCK @Y30LB02*/')SKIP;  52700003
*        ANS('DCL 1 CCRTLST  STATIC LOCAL,'||                           52750003
*        ' /*COPY CARTRIDGE REQUEST BLOCK @Y30LB02*/')SKIP;             52800003
*        ANS('    2  CCRTLEN  FIXED(31)INIT('||QUOTE                    52850003
*        ('20')||'X),/*LENGTH OF REQ BLOCK @Y30LB02*/')SKIP;            52900003
*        ANS('    2  CCRTOPCD CHAR(1)INIT('||QUOTE('28')||              52950003
*        'X),/*COPY CARTRIDGE OPCODE @Y30LB02*/')SKIP;                  53000003
*        ANS('    2  CCRTRES1 CHAR(1)INIT('||QUOTE('00')||              53050003
*        'X), /*ONE BYTE OF ZERO @Y30LB02*/')SKIP;                      53100003
*        ANS('    2  CCRTFLG BIT(16)INIT('||QUOTE                       53150003
*        ('0000000000000000')||'B), /*FLAGS AREA @Y30LB02*/')SKIP;      53200003
*        ANS('     3  CCRTCRT1  BIT(1), /*CART 1 OF 2 '||               53250003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   53300003
*        ANS('     3  CCRTCRT2  BIT(1), /*CART 2 OF 2 '||               53350003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   53400003
*        ANS('     3  *      BIT(14),'||                                53450003
*        ' /*FOURTEEN BITS RESERVED @Y30LB02*/')SKIP;                   53500003
*        ANS('    2  CCRTVOL  CHAR(6) INIT('||QUOTE                     53550003
*        ('000000000000')||'X),/*VOLID AREA @Y30LB02*/')SKIP;           53600003
*        ANS('    2  CCRTASID CHAR(2) INIT('||QUOTE                     53650003
*        ('0000')||'X),/*ASID AREA @Y30LB02*/')SKIP;                    53700003
*        ANS('    2  CCRTECB  FIXED(31) INIT(0),'||                     53750003
*        ' /*EVENT CONTROL BLOCK  @Y30LB02*/')SKIP;                     53800003
*        ANS('    2  CCRTCSN CHAR(12),/*CSN AREA @Y30LB02*/')SKIP;      53850003
*        ANS('       3  *(12) CHAR(1)INIT((12)'||QUOTE                  53900003
*        ('00')||'X);/*INIT CSN AREA @Y30LB02*/')SKIP;                  53950003
*        CCRTTEST=CCRTTEST+1; /*INCREMENT CTR                @Y30LB02*/ 54000003
*     END;                    /*                             @Y30LB02*/ 54050003
*/*                                                          @Y30LB02*/ 54100003
*COMPROC:                                                               54150003
*   IF ERSW =1 THEN          /*ERROR SWITCH SET?             @Y30LB02*/ 54200003
*     GO TO FINISH;          /*YES,BRANCH TO END             @Y30LB02*/ 54250003
*   IF TYPE(1)='CVOL' THEN  /*TYPE CVOL?                     @Y30LB02*/ 54300003
*    DO;                    /*OUTPUT LEN AND OPC             @Y30LB02*/ 54350003
*     ANS('CVOLLEN=' ||QUOTE(CVLEN)|| 'X; /*LENGTH OF '||               54400003
*      'COPY VOLUME REQUEST BLOCK @Y30LB02*/')SKIP;                     54450003
*     ANS('CVOLOPCD=' ||QUOTE(CVOLCOD)|| 'X;/*COPYVL '||                54500003
*     ' OPCODE @Y30LB02*/')SKIP;                                        54550003
*    END;                 /*                                 @Y30LB02*/ 54600003
*/*                                                          @Y30LB02*/ 54650003
*   ELSE                 /*CCRT LEN AND OPC                  @Y30LB02*/ 54700003
*    DO;                 /*                                  @Y30LB02*/ 54750003
*     ANS('CCRTLEN=' ||QUOTE(CCLEN)|| 'X; /*LENGTH'||                   54800003
*    ' COPY CARTRIDGE REQUEST BLOCK @Y30LB02*/')SKIP;                   54850003
*     ANS('CCRTOPCD=' ||QUOTE(CCRTCOD)|| 'X;/*OPCODE FOR'||             54900003
*    ' COPY CARTRIDGE LIST @Y30LB02*/')SKIP;                            54950003
*    END;                /*                                  @Y30LB02*/ 55000003
*/*                                                          @Y30LB02*/ 55050003
*   IF TYPE(1)='CVOL' THEN  /*TYPE COPY VOL?                 @Y30LB02*/ 55100003
*    IF FLAGS ¬= '' THEN    /*FLAGS PARAMETER SPECIFIED      @Y30LB02*/ 55150003
*     ANS('CVOLFLG=' ||FLAGS|| '; /*VALUE OF FLAGS    @Y30LB02*/')SKIP; 55200003
*/*                                                          @Y30LB02*/ 55250003
*   IF TYPE(1)='CCRT' THEN    /*COPY CARTRIDGE?              @Y30LB02*/ 55300003
*    IF FLAGS ¬= '' THEN      /*FLAGS SPECIFIED?             @Y30LB02*/ 55350003
*     ANS('CCRTFLG=' ||FLAGS|| '; /*VALUE OF FLAGS    @Y30LB02*/')SKIP; 55400003
*/*                                                          @Y30LB02*/ 55450003
*   IF VOLID ¬= '' THEN      /*VOLID SPECIFIED?              @Y30LB02*/ 55500003
*    IF TYPE(1) = 'CVOL' THEN    /*COPY VOLUME?              @Y30LB02*/ 55550003
*     ANS('CVOLID=' ||VOLID|| '; /*VALUE OF VOLID @Y30LB02*/')SKIP;     55600003
*/*                                                          @Y30LB02*/ 55650003
*   IF VOLID ¬= '' THEN     /*VOLID SPECIFIED?               @Y30LB02*/ 55700003
*    IF TYPE(1) = 'CCRT' THEN  /*COPY CARTRIDGE?             @Y30LB02*/ 55750003
*     ANS('CCRTVOL= ' ||VOLID|| ';/*VALUE OF VOLID    @Y30LB02*/')SKIP; 55800003
*/*                                                          @Y30LB02*/ 55850003
*   IF CSN ¬= '' THEN    /*CSN SPECIFIED?                    @Y30LB02*/ 55900003
*    IF TYPE(1) = 'CVOL' THEN   /*TYPE COPY VOLUME?          @Y30LB02*/ 55950003
*     ANS('CVOLCSN=' ||CSN|| '; /*VALUE OF CSN @Y30LB02*/')SKIP;        56000003
*/*                                                          @Y30LB02*/ 56050003
*   IF CSN ¬= '' THEN                                                   56100003
*    IF TYPE(1) = 'CCRT' THEN  /*COPY CARTRIDGE?             @Y30LB02*/ 56150003
*     ANS('CCRTCSN= ' ||CSN|| ';/*VALUE OF CSN @Y30LB02*/')SKIP;        56200003
*/*                                                          @Y30LB02*/ 56250003
*   IF ECB ¬= ''  THEN      /*ECB PARAMETER SPECIFIED        @Y30LB02*/ 56300003
*     IF TYPE(1) = 'CCRT' THEN                                          56350003
*        ANS('CCRTECB=ADDR' ||ECB||';/*ADDRESS OF ECB'||                56400003
*        ' @Y30LB02*/')SKIP;                                            56450003
*/*                                                          @Y30LB02*/ 56500003
*   IF ECB ¬= ''  THEN                                                  56550003
*     IF TYPE(1) = 'CVOL' THEN                                          56600003
*        ANS('CVOLECB=ADDR' ||ECB||';/*ADDRESS OF ECB'||                56650003
*        ' @Y30LB02*/')SKIP;                                            56700003
*/*                                                          @Y30LB02*/ 56750003
*   IF RUA ¬= '' THEN      /*RUA PARAMETER SPECIFIED?        @Y30LB02*/ 56800003
*    IF TYPE(1) = 'CVOL' THEN                                           56850003
*     ANS('CVOLRUA=' ||RUA|| '; /*VALUE OF RUA @Y30LB02*/')SKIP;        56900003
*/*                                                          @Y30LB02*/ 56950003
*   IF VVICEXT ¬= ''  THEN  /*MSVC EXTENSION?                @Y30LB02*/ 57000003
*     IF TYPE(1) = 'CVOL' THEN                                          57050003
*        ANS('CVOLVEXT=ADDR'||VVICEXT||';/*ADDRESS OF '||               57100003
*        'VVICEXT @Y30LB02*/')SKIP;                                     57150003
*/*                                                          @Y30LB02*/ 57200003
*     ANS('SVC (126);/*INVOKE THE SVC @Y30LB02*/')SKIP;                 57250003
*     ANS('RFY  CVOLR1 UNRSTD;/*UNRESTRICT REG 1 @Y30LB02*/')SKIP;      57300003
*/*                                                          @Y30LB02*/ 57350003
*FINISH:  RETURN CODE(RETCODE);                            /*@Y30LB02*/ 57400003
*         %END;                                            /*@Y30LB02*/ 57450003
./  ADD  SSI=51910141,NAME=ICBDEFV
* %/*   START OF SPECIFICATIONS****                            @Y30LB02 00050003
.*                                                             @Y30LB02 00100003
.*01   MODULE-NAME = ICBDEFV                                   @Y30LB02 00150003
.*                                                             @Y30LB02 00200003
.*01   DESCRIPTIVE-NAME = DEFINE VOLUME MACRO                  @Y30LB02 00250003
.*                                                             @Y30LB02 00300003
.*01   COPYRIGHT = NONE                                        @Y30LB02 00350003
.*                                                             @Y30LB02 00400003
.*01   STATUS = OS/VS1 RELEASE 4, OS/VS2 RELEASE 3             @Y30LB02 00450003
.*                                                             @Y30LB02 00500003
.*01   FUNCTION = REQUEST VIRTUAL VOLUMES BE DEFINED BY        @Y30LB02 00550003
.*                THE MSC                                      @Y30LB02 00600003
.*                                                             @Y30LB02 00650003
.*01   NOTES = AS FOLLOWS:                                     @Y30LB02 00700003
.*                                                             @Y30LB02 00750003
.*02     CODE = MACRO IS BILINGUALLY CODED                     @Y30LB02 00800003
.*                                                             @Y30LB02 00850003
.*02     RESTRICTIONS = THE FOLLOWING PREFIXES SHOULD BE       @Y30LB02 00900003
.*                      AVOIDED IN THE USER'S INVOCATION:      @Y30LB02 00950003
.*                      ICB AND DEF                            @Y30LB02 01000003
.*                                                             @Y30LB02 01050003
.*02  REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF REGISTERS   @Y30LB02 01100003
.*                              BY MACROS: R0,R1,R14, AND R15  @Y30LB02 01150003
.*                                                             @Y30LB02 01200003
.*01   MODULE-TYPE = MACRO                                     @Y30LB02 01250003
.*                                                             @Y30LB02 01300003
.*02     PROCESSOR = PLS2 AND ASSEMBLER                        @Y30LB02 01350003
.*                                                             @Y30LB02 01450003
.*02     ATTRIBUTES = REUSABLE                                 @Y30LB02 01500003
.*                                                             @Y30LB02 01550003
.*02     ENTRY-POINT = ICBDEFV                                 @Y30LB02 01600003
.*                                                             @Y30LB02 01650003
.*02     PURPOSE = A REQUEST TO DEFINE A VOLUME IS             @Y30LB02 01700003
.*       ISSUED WHENEVER ONE OF THE FOLLOWING IS TO            @Y30LB02 01750003
.*       BE PERFORMED:                                         @Y30LB02 01800003
.*          DEFINE A NEW VIRTUAL VOLUME.                       @Y30LB02 01850003
.*          ELIMINATE A VIRTUAL VOLUME.                        @Y30LB02 01900003
.*          RENAME A VIRTUAL VOLUME.                           @Y30LB02 01950003
.*          DESIGNATE VOLUME FLAGS                             @Y30LB02 02000003
.*          ACTIVATE A VOLUME.                                 @Y30LB02 02050003
.*          DEACTIVATE A VOLUME.                               @Y30LB02 02100003
.*                                                             @Y30LB02 02150003
.*02     LINKAGE = SVC 126                                     @Y30LB02 02200003
.*                                                             @Y30LB02 02250003
.*01  INPUT                                                    @Y30LB02 02300003
.*                                                             @Y30LB02 02350003
.*                                                             @Y30LB02 02400003
.*MACRO SYNTAX                                                 @Y30LB02 02450003
.*                                                             @Y30LB02 02500003
.*LIST FORM                                                    @Y30LB02 02550003
.*                                                             @Y30LB02 02600003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 02650003
.*                                                             @Y30LB02 02700003
.*ICBDEFV  MF=L - (BAL)          MF=(L,MAP) - BAL              @Y30LB02 02750003
.*         MF(L,NAME/(R))-PLS    MF(L,NAME/(R),ATTR)-PLS       @Y30LB02 02800003
.*                                                             @Y30LB02 02850003
.*STANDARD FORM                                                @Y30LB02 02900003
.*                                                             @Y30LB02 02950003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03000003
.*                                                             @Y30LB02 03050003
.*ICBDEFV  ECB=ADDR/(R)          VOLID=ADDR/(R)                @Y30LB02 03100003
.*         FLAGS=ADDR/(R)        CSN1=ADDR/(R)                 @Y30LB02 03150003
.*                               LIBID=ADDR/(R)                @Y30LB02 03200003
.*                               CSN2=ADDR/(R)                 @Y30LB02 03250003
.*                               NVOLID=ADDR/(R)               @Y30LB02 03300003
.*                               USDATA=ADDR/(R)               @Y30LB02 03350003
.*                               VVICEXT=ADDR/(R)              @Y30LB02 03400003
.*                                                             @Y30LB02 03450003
.*EXECUTE FORM                                                 @Y30LB02 03500003
.*                                                             @Y30LB02 03550003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03600003
.*                                                             @Y30LB02 03650003
.*ICBDEFV  MF(E,NAME/(R))       MF(E,NAME/(R),COMPLETE)-PLS    @Y30LB02 03700003
.*                              FLAGS=ADDR/(R)                 @Y30LB02 03750003
.*                              VOLID=ADDR/(R)                 @Y30LB02 03800003
.*                              ECB=ADDR/(R)                   @Y30LB02 03850003
.*                              CSN1=ADDR/(R)                  @Y30LB02 03900003
.*                              CSN2=ADDR/(R)                  @Y30LB02 03950003
.*                              NVOLID=ADDR/(R)                @Y30LB02 04000003
.*                              USDATA=ADDR/(R)                @Y30LB02 04050003
.*                              VVICEXT=ADDR/(R)               @Y30LB02 04100003
.*                              LIBID=ADDR/(R)                 @Y30LB02 04150003
.*                              VOLFLG=ADDR/(R)                @Y30LB02 04200003
.*                                                             @Y30LB02 04250003
.*   KEYWORD PARAMETERS:                                       @Y30LB02 04300003
.*                                                             @Y30LB02 04350003
.*                                                             @Y30LB02 04400003
.*                                                             @Y30LB02 04450003
.*   MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE         @Y30LB02 04500003
.*          MACRO FORMAT AND MAY GIVE THE ADDRESS OR           @Y30LB02 04550003
.*          ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK      @Y30LB02 04600003
.*          IS STORED.                                         @Y30LB02 04650003
.*                                                             @Y30LB02 04700003
.*          L - LIST FORM: THE EXPANSION OF THE L-FORM         @Y30LB02 04750003
.*              MACRO WILL RESULT IN A REQUEST BLICK WITH      @Y30LB02 04800003
.*              THE ONLY NON-ZERO FIELDS BEING THE OPCODE      @Y30LB02 04850003
.*              AND LENGTH FIELDS.                             @Y30LB02 04900003
.*                                                             @Y30LB02 04950003
.*          (1) 'MAP' - IF MAP IS SPECIFIED WITH THE           @Y30LB02 05000003
.*              ASSEMBLER MACRO CALL A DSECT EQUIVALENT TO     @Y30LB02 05050003
.*              A MAPPING MACRO IS PRODUCED.                   @Y30LB02 05100003
.*                                                             @Y30LB02 05150003
.*          (2) NAME - THE MACRO INVOKER MUST SPECIFY A        @Y30LB02 05200003
.*              NAME FOR HIS STRUCTURE WHEN INVOKING THE       @Y30LB02 05250003
.*              PLS LIST FORM.                                 @Y30LB02 05300003
.*                                                             @Y30LB02 05350003
.*          (3) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS       @Y30LB02 05400003
.*              ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION    @Y30LB02 05450003
.*              IN AN UNINITIALIZED REQUEST BLOCK.  ATTRI-     @Y30LB02 05500003
.*              BUTE EXAMPLE:                                  @Y30LB02 05550003
.*                                                             @Y30LB02 05600003
.*              CHAR, FIXED, STATIC LOCAL, NONLOCAL,           @Y30LB02 05650003
.*              BASED(*), ETC.                                 @Y30LB02 05700003
.*                                                             @Y30LB02 05750003
.*       NULL - STANDARD FORM: THE EXPANSION OF THIS FORM      @Y30LB02 05800003
.*              CONSISTS OF A REQUEST BLOCK, A LINKAGE         @Y30LB02 05850003
.*              INSTRUCTION, AND, POSSIBLY, PARAMETER          @Y30LB02 05900003
.*              BINDING INSTRUCTIONS.                          @Y30LB02 05950003
.*                                                             @Y30LB02 06000003
.*          E - EXECUTABLE FORM: THE EXPANSION OF THIS FORM    @Y30LB02 06050003
.*              CONSISTS OF A LINKAGE INSTRUCTION AND          @Y30LB02 06100003
.*              POSSIBLY, PARAMETER BINDING INSTRUCTIONS.      @Y30LB02 06150003
.*                                                             @Y30LB02 06200003
.*              SUB-PARAMETERS                                 @Y30LB02 06250003
.*                                                             @Y30LB02 06300003
.*              (1)  AN E MUST BE SPECIFIED IN THE FIRST       @Y30LB02 06350003
.*                   SUB-PARAMETER POSITION.  THIS INDICATES   @Y30LB02 06400003
.*                   THAT THE MACRO IS IN EXECUTABLE FORM.     @Y30LB02 06450003
.*                                                             @Y30LB02 06500003
.*              (2)  A NAME OR A REGISTER MUST BE SPECIFIED    @Y30LB02 06550003
.*                   IN THE SECOND SUB-PARAMETER.              @Y30LB02 06600003
.*                                                             @Y30LB02 06650003
.*              (3)  'COMPLETE' - COMPLETE WILL CAUSE THE      @Y30LB02 06700003
.*                   MACRO TO ZERO OUT THE REQUEST BLOCK.      @Y30LB02 06750003
.*                   AFTER ZEROING THE REQUEST BLOCK THE       @Y30LB02 06800003
.*                   FUNCTION OPCODE AND LENGTH ARE PLACED     @Y30LB02 06850003
.*                   IN THE REQUEST BLOCK.                     @Y30LB02 06900003
.*                                                             @Y30LB02 06950003
.*                                                             @Y30LB02 07000003
.*  LIBID - THE FIELD WHICH IDENTIFIES THE MSF ACCESSED.       @Y30LB02 07050003
.*   LIBID MUST BE SPECIFIED WITH THE CREATE ATTRIBUTE.        @Y30LB02 07100003
.*   THE FORMAT OF THE LIBID FIELD IS SHOWN BELOW:             @Y30LB02 07150003
.*                                                             @Y30LB02 07200003
.*    ---------------------------------                        @Y30LB02 07250003
.*    | 0 | 0 | 0 | 0 | 0 | 0 | X | X |                        @Y30LB02 07300003
.*    ---------------------------------                        @Y30LB02 07350003
.*                                                             @Y30LB02 07400003
.* BITS 0-5 ---------------------IGNORED-MUST BE SET TO ZERO   @Y30LB02 07450003
.*                                                             @Y30LB02 07500003
.* BITS 6-7 ---------------------- MAY BE SET TO 0,1,2, OR 3   @Y30LB02 07550003
.*                                                             @Y30LB02 07600003
.* FLAGS -  FLAGS:  THE FIELD WHICH INDICATES THE FUNCTION(S)  @Y30LB02 07650003
.* TO BE PERFORMED.  THE FORMAT OF THE FLAGS FIELD IS SHOWN    @Y30LB02 07700003
.* BELOW:                                                      @Y30LB02 07750003
.*    ---------------------------------                        @Y30LB02 07800003
.*    | X | X | X | X | X | X | X | X |                        @Y30LB02 07850003
.*    ---------------------------------                        @Y30LB02 07900003
.*                                                             @Y30LB02 07950003
.*         BIT 0-----------'1'B   CREATE VOLUME                @Y30LB02 08000003
.*                         '0'B   NO FUNCTION REQUESTED        @Y30LB02 08050003
.*                                                             @Y30LB02 08100003
.*         BIT 1-----------'1'B   ELIMINATE VOLUME             @Y30LB02 08150003
.*                         '0'B   NO FUNCTION REQUESTED        @Y30LB02 08200003
.*                                                             @Y30LB02 08250003
.*         BIT 2-----------'1'B   RENAME VOLUME                @Y30LB02 08300003
.*                         '0'B   NO FUNCTION REQUESTED        @Y30LB02 08350003
.*                                                             @Y30LB02 08400003
.*         BIT 3-----------'1'B   REPLACE VOLUME FLAGS         @Y30LB02 08450003
.*                         '0'B   NO FUNCTION REQUESTED        @Y30LB02 08500003
.*                                                             @Y30LB02 08550003
.*         BIT 4-----------'1'B   ELIMINATE TRANSIENT          @Y30LB02 08600003
.*                                VOLUME                       @Y30LB02 08650003
.*                         '0'B   NO FUNCTION REQUESTED        @Y30LB02 08700003
.*                                                             @Y30LB02 08750003
.*         BIT 5-----------'1'B   RENAME TRANSIENT             @Y30LB02 08800003
.*                                VOLUME                       @Y30LB02 08850003
.*                         '0'B  NO FUNCTION REQUESTED         @Y30LB02 08900003
.*                                                             @Y30LB02 08950003
.*        BIT 6-----------'1'B   ACTIVATE TRANSIENT            @Y30LB02 09000003
.*                               VOLUME                        @Y30LB02 09050003
.*                        '0'B   NO FUNCTION REQUESTED         @Y30LB02 09100003
.*                                                             @Y30LB02 09150003
.*         BIT 7-----------'1'B  DEACTIVATE VOLUME             @Y30LB02 09200003
.*                         '0'B  NO FUNCTION REQUESTED         @Y30LB02 09250003
.*                                                             @Y30LB02 09300003
.*   CREATE:   CAUSES A NEW VOLUME TO BE CREATED.  THE         @Y30LB02 09350003
.*   CARTRIDGE SERIAL NUMBERS (CSNS) MAY BE SPECIFIED IF       @Y30LB02 09400003
.*   SPECIFIC CARTRIDGES ARE DESIRED.  VOLID AND LIBID MUST    @Y30LB02 09450003
.*   BE SPECIFIED WITH CREATE.  AFTER THE VOLUME IS CREATED    @Y30LB02 09500003
.*   IT WILL HAVE AN ENTRY IN THE TRANSIENT LIST.  IF A CE     @Y30LB02 09550003
.*   FLAG IS SET A CSN MUST BE SUPPLIED AND MUST BE THE SAME   @Y30LB02 09600003
.*   FOR BOTH CSN1 AND CSN2.                                   @Y30LB02 09650003
.*                                                             @Y30LB02 09700003
.*   CREATE REQUIRED PARAMETERS:  FLAGS, ECB, VOLID, AND       @Y30LB02 09750003
.*   LIBID.                                                    @Y30LB02 09800003
.*   CREATE OPTIONAL PARAMETERS: CNS1 AND CSN2.                @Y30LB02 09850003
.*                                                             @Y30LB02 09900003
.*   ELINMINATE:  THE VOLUME IDENTIFIED BY THE GIVEN VOLID     @Y30LB02 09950003
.*   IS ELIMINATED FROM THE VOLUME INVENTORY.  IT'S            @Y30LB02 10000003
.*   CARTRIDGES ARE MADE AVAILABLE FOR REALLOCATION.           @Y30LB02 10050003
.*   VOLID MUST BE SPECIFIED.                                  @Y30LB02 10100003
.*                                                             @Y30LB02 10150003
.*   ELIMINATE REQUIRED PARMS:  VOLID, FLAGS, AND ECB.         @Y30LB02 10200003
.*                                                             @Y30LB02 10250003
.*   RENAME:   THE VOLUME CURRENTLY IDENTIFIED BY THE VOLID    @Y30LB02 10300003
.*   LISTED IN THIS REQUEST IS TO BE RENAMED WITH THE NEW      @Y30LB02 10350003
.*   VOLID (NVOLID).  THE VOLUME TO BE RENAMED MUST BE         @Y30LB02 10400003
.*   ALREADY IN THE SYSTEM'S INVENTORY .  IF THE VOLUME'S      @Y30LB02 10450003
.*   CHARACTERISTICS ARE TO BE CHANGED, THEN THE USER MUST     @Y30LB02 10500003
.*   INSURE THAT THE "VOLFLG" FIELD IS SPECIFIED WITH THE      @Y30LB02 10550003
.*   DESIRED CHARACTERISTICS.  OTHERWISE THE USER WILL SET     @Y30LB02 10600003
.*   THE VOLFLG FIELD TO 'FF', INDICATING NO CHANGE IS         @Y30LB02 10650003
.*   REQUIRED IN VOLUME CHARACTERISTICS. BOTH VOLID AND        @Y30LB02 10700003
.*   NVOLID MUST BE SPECIFIED. AFTER A RENAME IS COMPLETE THE  @Y30LB02 10750003
.*   VOLUME WILL BE PLACED ON THE TRANSIENT (INACTIVE) LIST.   @Y30LB02 10800003
.*                                                             @Y30LB02 10850003
.*   RENAME REQUIRED PARAMETERS ARE:  FLAGS, ECB, VOLID,       @Y30LB02 10900003
.*   NVOLID, AND VOLFLG.                                       @Y30LB02 10950003
.*                                                             @Y30LB02 11000003
.*   REPLACE:    REPLACE VOLUME FLAGS - THE VOLUME IDENTIFIED  @Y30LB02 11050003
.*   BY THE VOLID IN THIS REQUEST HAS ITS FLAGS UPDATED. THE   @Y30LB02 11100003
.*   VOLUME WILL REMAIN ACTIVE. THE VOLFLG FIELD MUST BE       @Y30LB02 11150003
.*   SPECIFIED.                                                @Y30LB02 11200003
.*                                                             @Y30LB02 11250003
.*   REPLACE REQUIRED PARAMETERS ARE:  FLAGS, ECB,             @Y30LB02 11300003
.*   VOLID, AND VOLFLG.                                        @Y30LB02 11350003
.*                                                             @Y30LB02 11400003
.*   ELIMINATE TRANSIENT VOLUME:                               @Y30LB02 11450003
.*   THE VOLUME IDENTIFIED BY THE GIVEN SEQUENCE ONE SERIAL    @Y30LB02 11500003
.*   NUMBER (CSN1) IS ELIMINATED FROM THE MSF.                 @Y30LB02 11550003
.*                                                             @Y30LB02 11600003
.*   ELIMINATE TRANSIENT VOLUME REQUIRED PARAMETERS:           @Y30LB02 11650003
.*   FLAGS, ECB, AND CSN1.                                     @Y30LB02 11700003
.*                                                             @Y30LB02 11750003
.*   RENAME TRANSIENT VOLUME:                                  @Y30LB02 11800003
.*   THE VOLUME THAT IS CURRENTLY IDENTIFIED BY SEQUENCE ONE   @Y30LB02 11850003
.*   SERIAL NUMBER (CSN1), LISTED IN THE DEFINE REQUEST IS TO  @Y30LB02 11900003
.*   BE RENAMED WITH THE NEW VOLID. IF NO CHANGES ARE DESIRED  @Y30LB02 11950003
.*   IN THE VOLUME FLAGS FIELD(VOLFLG), THE USER MUST SET THE  @Y30LB02 12000003
.*   VOLFLG FIELD TO 'FF'.  AFTER THE RENAME IS COMPLETE THE   @Y30LB02 12050003
.*   VOLUME ENTRY WILL REMAIN ON THE TRANSIENT VOLUME LIST.    @Y30LB02 12100003
.*   (INACTIVE)                                                @Y30LB02 12150003
.*                                                             @Y30LB02 12200003
.*   RENAME TRANSIENT VOLUME REQUIRED PARAMETERS:              @Y30LB02 12250003
.*   FLAGS, ECB, VOLFLG, AND CSN1.                             @Y30LB02 12300003
.*                                                             @Y30LB02 12350003
.*   ACTIVATE TRANSIENT VOLUME:                                @Y30LB02 12400003
.*   THE VOLUME SPECIFIED BY CSN1 IS DELETED FROM THE          @Y30LB02 12450003
.*   TRANSIENT VOLUME LIST AND WILL BE MADE AVAILABLE FOR      @Y30LB02 12500003
.*   USE BY THE MSC.                                           @Y30LB02 12550003
.*                                                             @Y30LB02 12600003
.*   ACTIVATE TRANSIENT VOLUME REQUIRED PARAMETERS:            @Y30LB02 12650003
.*   FLAGS, ECB, AND CSN1.                                     @Y30LB02 12700003
.*                                                             @Y30LB02 12750003
.*   DEACTIVATE VOLUME:                                        @Y30LB02 12800003
.*   THE VOLUME SPECIFIED BY VOLID WILL BE MADE UNAVAILABLE    @Y30LB02 12850003
.*   FOR USE BY THE MSC (PLACED ON THE TRANSIENT VOLUME LIST). @Y30LB02 12900003
.*                                                             @Y30LB02 12950003
.*   DEACTIVATE VOLUME REQUIRED PARAMETERS:  FLAGS,            @Y30LB02 13000003
.*   ECB, AND VOLID.                                           @Y30LB02 13050003
.*                                                             @Y30LB02 13100003
.*   NOTE:  BITS 0-7 ARE MUTUALLY EXCLUSIVE:  ONE              @Y30LB02 13150003
.*   (AND ONLY ONE) MAY BE ON.                                 @Y30LB02 13200003
.*                                                             @Y30LB02 13250003
.*                                                             @Y30LB02 13300003
.*  VOLFLG-  THE 'VOLUME FLAGS' FIELD INDICATES THE            @Y30LB02 13350003
.*  CHARACTERISTICS A VOLUME WILL EXHIBIT WHEN CREATE, RENAME  @Y30LB02 13400003
.*  OR REPLACE VOLUME FLAGS IS SPECIFIED IN THE FLAGS FIELD.   @Y30LB02 13450003
.*  THE FORMAT OF THE VOLFLG FIELD IS SHOWN BELOW:             @Y30LB02 13500003
.*                                                             @Y30LB02 13550003
.*                                                             @Y30LB02 13600003
.*   ---------------------------------                         @Y30LB02 13650003
.*   | X | 0 | X | X | 0 | X | X | 0 |                         @Y30LB02 13700003
.*   ---------------------------------                         @Y30LB02 13750003
.*                                                             @Y30LB02 13800003
.*                                                             @Y30LB02 13850003
.*   BIT 0-----------'1'B   CE CARTRIDGE                       @Y30LB02 13900003
.*                   '0'B   NO FUNCTION REQUESTED              @Y30LB02 13950003
.*                                                             @Y30LB02 14000003
.*   BIT 1-----------'0'B   UNUSED - MUST BE SET TO ZERO       @Y30LB02 14050003
.*                                                             @Y30LB02 14100003
.*                                                             @Y30LB02 14150003
.*   BIT 2-----------'1'B   SECURE VOLUME                      @Y30LB02 14200003
.*                   '0'B   NO FUNCTION REQUESTED              @Y30LB02 14250003
.*                                                             @Y30LB02 14300003
.*   BIT 3-----------'1'B   EXCLUSIVE VOLUME                   @Y30LB02 14350003
.*                   '0'B   NO FUNCTION REQUESTED              @Y30LB02 14400003
.*                                                             @Y30LB02 14450003
.*   BIT 4-----------       RESERVED AND MUST BE ZERO          @Y30LB02 14500003
.*                                                             @Y30LB02 14550003
.*   BIT 5-----------'1'B   BIND VOLUME                        @Y30LB02 14600003
.*                    '0'B  NO FUNCTION                        @Y30LB02 14650003
.*                                                             @Y30LB02 14700003
.*                                                             @Y30LB02 14750003
.*   BIT 6-----------'1'B   WRITE INHIBIT                      @Y30LB02 14800003
.*                   '0'B   NO FUNCTION                        @Y30LB02 14850003
.*                                                             @Y30LB02 14900003
.*   BIT 7-----------       |UNUSED - MUST BE SET TO ZERO|     @Y30LB02 14950003
.*                                                             @Y30LB02 15000003
.*   NOTE:  IF THE VOLFLG PARAMETER IS NOT SPECIFIED,          @Y30LB02 15050003
.*   A VOLUME WILL BE DEFINED WITHOUT SPECIAL ATTRIBUTES.      @Y30LB02 15100003
.*                                                             @Y30LB02 15150003
.*                                                             @Y30LB02 15200003
.*  CE CARTRIDGE:                                              @Y30LB02 15250003
.*  IF THIS ATTRIBUTE IS SPECIFIED WITH THE                    @Y30LB02 15300003
.*  CREATE FUNCTION, THE CARTRIDGE IS DESIGNATED               @Y30LB02 15350003
.*  FOR CE USE.  ONCE A CARTRIDGE IS DESIGNATED                @Y30LB02 15400003
.*  AS CE THE VOLUME FLAGS CANNOT BE CHANGED                   @Y30LB02 15450003
.*  NOR CAN THE CARTRIDGE BE ELIMINATED.                       @Y30LB02 15500003
.*                                                             @Y30LB02 15550003
.*  SECURE VOLUME:                                             @Y30LB02 15600003
.*  WHEN SPECIFIED WITH THE CREATE OR RENAME ATTRIBUTE         @Y30LB02 15650003
.*  THE VOLUME SPECIFIED IS DESIGNATED FOR SECURE ERASE.       @Y30LB02 15700003
.*  AN INDICATION OF THIS ATTRIBUTE IS IN THE INVENTORY        @Y30LB02 15750003
.*  ENTRY AND CTOC OF THE VOLUME.  MSC WILL RECOGNIZE          @Y30LB02 15800003
.*  THIS VOLUME FLAG WHEN CYLINDER EXTENTS ARE DESTAGED,       @Y30LB02 15850003
.*  AND THEREFORE ERASE DASD.  THIS HELPS TO PREVENT THE       @Y30LB02 15900003
.*  POSSIBILITY OF SENSITIVE DATA BEING INADVERTENTLY          @Y30LB02 15950003
.*  COPIED BY AN UNAUTHORIZED USER.                            @Y30LB02 16000003
.*                                                             @Y30LB02 16050003
.*  EXCLUSIVE:                                                 @Y30LB02 16100003
.*  IF THIS VOLUME FLAG IS SPECIFIED, WHENEVER A REQUEST       @Y30LB02 16150003
.*  TO MOUNT THE VOLUME IS GIVEN IT WILL BE MOUNTED            @Y30LB02 16200003
.*  EXCLUSIVE.  NO OTHER HOST WILL BE ABLE TO ACCESS           @Y30LB02 16250003
.*  THE VOLUME UNTIL IT IS RELEASED BY THE REQUESTING HOST.    @Y30LB02 16300003
.*                                                             @Y30LB02 16350003
.*  BIND:                                                      @Y30LB02 16400003
.*  IF THIS VOLUME FLAG IS SPECIFIED, THE                      @Y30LB02 16450003
.*  VOLUME WILL HAVE THE BIND ATTRIBUTE                        @Y30LB02 16500003
.*  UNTIL REDEFINED.  WHENEVER, A REQUEST                      @Y30LB02 16550003
.*  TO MOUNT THE VOLUME IS RECEIVED IT WILL                    @Y30LB02 16600003
.*  BE MOUNTED AND ALL CYLINDERS ACQUIRED WILL BE BOUND.       @Y30LB02 16650003
.*                                                             @Y30LB02 16700003
.*  WRITE INHIBIT:                                             @Y30LB02 16750003
.*  IF THIS VOLUME FLAG IS SPECIFIED,                          @Y30LB02 16800003
.*  THE VOLUME IS DEFINED FOR READ ONLY.  THE                  @Y30LB02 16850003
.*  VOLUME CANNOT BE UPDATED.                                  @Y30LB02 16900003
.*                                                             @Y30LB02 16950003
.*  VOLID -  VOLUME IDENTIFIER:   THE IDENTIFIER OF THE        @Y30LB02 17000003
.*  VOLUME TO BE DEFINED.                                      @Y30LB02 17050003
.*                                                             @Y30LB02 17100003
.*  NVOLID-  NEW VOLUME IDENTIFIER:   THE NEW VOLUME           @Y30LB02 17150003
.*  IDENTIFIER WHEN RENAMING A VOLUME.                         @Y30LB02 17200003
.*                                                             @Y30LB02 17250003
.*  CSN1 -   CARTRIDGE SERIAL NUMBER ONE IS A 12               @Y30LB02 17300003
.*  BYTE AREA WHICH CONTAINS THE MANUFACTURER'S SERIAL         @Y30LB02 17350003
.*  NUMBER FOR CARTRIDGE SEQUENCE NUMBER ONE.                  @Y30LB02 17400003
.*  CSN1 MUST BE SPECIFIED WHEN DEFINING TRANSIENT VOLUMES.    @Y30LB02 17450003
.*  OTHERWISE IT IS OPTIONAL.                                  @Y30LB02 17500003
.*                                                             @Y30LB02 17550003
.*  CSN2 -   CARTRIDGE SERIAL NUMBER TWO IS A 12               @Y30LB02 17600003
.*  BYTE AREA WHICH CONTAINS THE MANUFACTURER'S SERIAL         @Y30LB02 17650003
.*  NUMBER FOR CARTRIDGE SEQUENCE NUMBER TWO.                  @Y30LB02 17700003
.*                                                             @Y30LB02 17750003
.*  ECB  - THE NAME OF THE EVENT CONTROL BLOCK(ECB)            @Y30LB02 17800003
.*  TO BE POSTED WHEN DEFINE IS COMPLETE.  THE                 @Y30LB02 17850003
.*  THE USER MUST ALSO DECLARE A MINIMUM 50 BYTE CONTIGUOUS    @Y30LB02 17900003
.*  AREA TO CONTAIN THE MESSAGE GENERATED BY THE MSSC MESSAGE  @Y30LB02 17950003
.*  TASK. (THE ECB AND APPENDED DATA AREA MUST BE IN COMMON    @Y30LB02 18000003
.*  CORE IN VS/2.) THE ECB IS POSTED WITH ONE OF THE           @Y30LB02 18050003
.*  FOLLOWING POST CODES: 70,71,72,73,74, ETC.                 @Y30LB02 18100003
.*  THE POST CODE WILL BE PLACED IN THE LOW-ORDER BYTE         @Y30LB02 18150003
.*  OF THE ECB - '7F'X INDICATES SUCCESSFUL COMPLETION.        @Y30LB02 18200003
.*  THE MSC DATA WILL BE MOVED TO CORE LOCATION ADDR(ECB)+4.   @Y30LB02 18250003
.*  ECB MUST BE SPECIFIED.  THE ECB AREA MUST BE CLEARED       @Y30LB02 18300003
.*  (SET TO BINARY 0) BEFORE INVOKING THE MACRO.               @Y30LB02 18350003
.*                                                             @Y30LB02 18400003
.*  USDATA-  USER DATA:  THE NAME OF AN AREA WHICH             @Y30LB02 18450003
.*  CONTAINS 72 BYTES OF CARTRIDGE LABEL INFORMATION.          @Y30LB02 18500003
.*  THE USER DATA PARAMETER MAY BE OPTIONALLY SPECIFIED        @Y30LB02 18550003
.*  WITH CREATE, RENAME,AND RENAME TRANSIENT VOLUME.           @Y30LB02 18600003
.*  WHEN SPECIFIED WITH RENAME, ANY BYTE WHICH IS X'00'        @Y30LB02 18650003
.*  (BINARY ZERO) DOES NOT UPDATE THE CORRESPONDING BYTE       @Y30LB02 18700003
.*  OF THE CARTRIDGE LABEL USER AREA.                          @Y30LB02 18750003
.*                                                             @Y30LB02 18800003
.*  VVICEXT- THE NAME OF AN AREA WHICH CONTAINS THE            @Y30LB02 18850003
.*  MSVC EXTENSION (VVICEXT) MAPPING.                          @Y30LB02 18900003
.*  IF THIS PARAMETER IS NOT SPECIFIED, THE CORRESPONDING      @Y30LB02 18950003
.*  POSITION IN THE REQUEST BLOCK MUST BE SET                  @Y30LB02 19000003
.*  TO ZERO. THE MAPPING MACRO FOR THE MSVC EXTENSION          @Y30LB02 19050003
.*  TO DEFINE VOLUME IS IEZDEFVE.                              @Y30LB02 19100003
.*                                                             @Y30LB02 19150003
.*01  EXIT-NORMAL = VALID INVOCATION                           @Y30LB02 19200003
.*                                                             @Y30LB02 19250003
.*02     CONDITION = RETURN CODE = 0                           @Y30LB02 19300003
.*                                                             @Y30LB02 19350003
.*02     OUTPUT = REQUESTED ORDER GENERATED FOR THE MSSC-SVC   @Y30LB02 19400003
.*                                                             @Y30LB02 19450003
.*01  EXIT-ERROR = INVALID INVOCATION                          @Y30LB02 19500003
.*                                                             @Y30LB02 19550003
.*02     CONDITION = RETURN CODE = 12                          @Y30LB02 19600003
.*                                                             @Y30LB02 19650003
.*02     OUTPUT = ERROR MESSAGE AS A COMMENT AT POINT OF       @Y30LB02 19700003
.*                INVOCATION                                   @Y30LB02 19750003
.*                                                             @Y30LB02 19800003
.*01  EXTERNAL REFERENCES = NONE                               @Y30LB02 19850003
.*                                                             @Y30LB02 19900003
.*01  TABLES = NONE                                            @Y30LB02 19950003
.*                                                             @Y30LB02 20000003
.*01  MESSAGES = AS FOLLOWS:                                   @Y30LB02 20050003
.*     ICB602I:  A NAME FOR THE REQUEST BLOCK MUST BE          @Y30LB02 20100003
.*               SPECIFIED IN MF(2)                            @Y30LB02 20150003
.*     ICB604I:  WARNING-ONLY THE MF PARAMETER IS VALID        @Y30LB02 20200003
.*               FOR THE LIST FORM                             @Y30LB02 20250003
.*     ICB605I:  ECB MUST BE SPECIFIED FOR STANDARD            @Y30LB02 20300003
.*               FORM MACRO                                    @Y30LB02 20350003
.*     ICB607I:  FLAGS MUST BE SPECIFIED FOR STANDARD          @Y30LB02 20400003
.*               FORM MACRO                                    @Y30LB02 20450003
.*     ICB612I:  MF(2) MUST CONTAIN REQ BLK NAME               @Y30LB02 20500003
.*               IF EXEC MACRO FORM REQUESTED                  @Y30LB02 20550003
.*     ICB615I:  INVALID MF PARAMETER SPECIFIED, MUST          @Y30LB02 20600003
.*               BE L, E, OR NULL                              @Y30LB02 20650003
.*                                                             @Y30LB02 20700003
.*01  CONTROL-BLOCKS = NONE                                    @Y30LB02 20750003
.*                                                             @Y30LB02 20800003
.*01  INNER MACROS = NONE                                      @Y30LB02 20850003
.*                                                             @Y30LB02 20900003
.*01  SYSTEM MACRO = IHBINNRA                                  @Y30LB02 20950003
.*                                                             @Y30LB02 21000003
.*01  CHANGE-ACTIVITY = S/D X04AC02 AND Y30LB02                @Y30LB02 21050003
.*                          ZM31011                            @ZM31011 21060003
.*                                                             @Y30LB02 21100003
.**** END OF SPECIFICATIONS ***                                @Y30LB02 21150003
         MACRO                                                          21200003
&SYMBOL  ICBDEFV &MF=,&FLAGS=,&VOLID=,&NVOLID=,&LIBID=,                *21250003
               &VOLFLG=,&CSN1=,&CSN2=,&ECB=,&USDATA=,                  *21300003
               &VVICEXT=                                                21350003
         LCLB  &ERSW               CONDITION SWITCH            @Y30LB02 21400003
         LCLC  &DEFV               DEFINE MACRO INSTR INDX     @Y30LB02 21450003
&DEFV    SETC  'D'.'&SYSNDX'       ASSIGN CHARACTER VALUE      @Y30LB02 21500003
.*                                                             @Y30LB02 21550003
.*       DETERMINATION OF DESIRED MACRO FORM                   @Y30LB02 21600003
.*                                                             @Y30LB02 21650003
         AIF   ('&MF(1)' NE 'L').EFORM      LIST FORM?         @Y30LB02 21700003
.*                                                             @Y30LB02 21750003
.*       PROCESSING OF LIST MACRO FORM                         @Y30LB02 21800003
.*                                                             @Y30LB02 21850003
.*       THE FOLLOWING CODE CHECKS FOR ILLEGAL PARAMETERS      @Y30LB02 21900003
.*       SPECIFIED FOR THE LIST FORM AND PUTS OUT DEFINE       @Y30LB02 21950003
.*       VOLUME REQUEST BLOCK.                                 @Y30LB02 22000003
.*                                                             @Y30LB02 22050003
         AIF   ('&FLAGS' NE '' OR '&VOLID' NE '' OR '&LIBID'           *22100003
               NE '' OR '&CSN1' NE '' OR '&CSN2' NE '' OR              *22150003
               '&VOLFLG' NE '' OR '&NVOLID' NE '').WARN        @Y30LB02 22200003
         AIF   ('&ECB' NE ''OR '&VVICEXT' NE '' OR '&USDATA'           *22250003
               NE '').WARN                                     @Y30LB02 22300003
         AGO   .LIST                                           @Y30LB02 22350003
.WARN    MNOTE 4,'  ICB604I - WARNING-ONLY THE MF PARAMETER '  @Y30LB02 22400003
         MNOTE 4,'  IS VALID FOR THE LIST FORM '               @Y30LB02 22450003
.*                                                             @Y30LB02 22500003
.LIST    ANOP                                                  @Y30LB02 22550003
         AIF   ('&MF(2)' EQ 'MAP').LISTDS   DSECT REQUESTED?   @Y30LB02 22600003
*  MACMEAN  MSSC DEFINE VOLUME MACRO--INITIALIZED LIST FORM    @Y30LB02 22650003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 22700003
&SYMBOL  DS    0F                                              @Y30LB02 22750003
DEFVLEN  DC    F'132'              LENGTH OF DEFINE REQ        @Y30LB02 22800003
DEFVOPC  DC    XL1'18'             DEFINE VOLUME OPCODE        @Y30LB02 22850003
DEFVRES1 DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02 22900003
DEFVFLG  DC    XL1'00'             1-BYTE FLAGS AREA           @Y30LB02 22950003
DEFVLIB  DC    XL1'00'             1-BYTE LIBID AREA           @Y30LB02 23000003
DEFVVOL  DC    XL6'000000000000'   6-BYTE AREA FOR VOLID       @Y30LB02 23050003
DEFVVFL  DC    XL1'00'             1-BYTE VOLUME FLAGS AREA    @Y30LB02 23100003
DEFVRES2 DC    XL1'00'             1-BYTE RESERVE AREA         @Y30LB02 23150003
DEFVNVL  DC    XL6'000000000000'   6-BYTE NEW VOLID AREA       @Y30LB02 23200003
DEFVRES3 DC    XL2'0000'           2-BYTE RESERVE AREA         @Y30LB02 23250003
DEFVCSN1 DC    2XL6'000000000000'  12-BYTE AREA FOR SEQ CART1  @Y30LB02 23300003
DEFVCSN2 DC    2XL6'000000000000'  12-BYTE AREA FOR SEQ CART2  @Y30LB02 23350003
DEFVRES4 DC    XL2'0000'           2-BYTE RESERVE AREA         @Y30LB02 23400003
DEFVASID DC    XL2'0000'           2-BYTE ASID AREA            @Y30LB02 23450003
DEFVECB  DC    XL4'00000000'       4-BYTE ECB AREA             @Y30LB02 23500003
DEFVDATA DC    18XL4'00000000'     72-BYTE DATA AREA           @Y30LB02 23550003
DEFVVEXT DC    XL4'00000000'       4-BYTE VVICEXT AREA         @Y30LB02 23600003
         AGO   .FINISH                                         @Y30LB02 23650003
.*                                                             @Y30LB02 23700003
.LISTDS  ANOP                                                  @Y30LB02 23750003
*  MACMEAN  MSSC DEFINE VOLUME MACRO--UNINITIALIZED LIST FORM  @Y30LB02 23800003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 23850003
ICBDEFV  DSECT                                                 @Y30LB02 23900003
DEFVLEN  DS    F                   DEFINE REQ LEN 84 HEX       @Y30LB02 23950003
DEFVOPC  DS    XL1                 DEFINE  OPCODE 18 HEX       @Y30LB02 24000003
DEFVRES1 DS    XL1                 1-BYTE RESERVED AREA        @Y30LB02 24050003
DEFVFLG  DS    XL1                 1-BYTE FLAGS AREA           @Y30LB02 24100003
DEFVLIB  DS    XL1                 1-BYTE LIBID AREA           @Y30LB02 24150003
DEFVVOL  DS    CL6                 6-BYTE AREA FOR VOLID       @Y30LB02 24200003
DEFVVFL  DS    XL1                 1-BYTE VOLUME FLAGS         @Y30LB02 24250003
DEFVRES2 DS    XL1                 1-BYTE RESERVE AREA         @Y30LB02 24300003
DEFVNVL  DS    CL6                 6-BYTE NEW VOLID AREA       @Y30LB02 24350003
DEFVRES3 DS    XL2                 2-BYTE RESERVE AREA         @Y30LB02 24400003
DEFVCSN1 DS    CL12                12-BYTE AREA SEQ CART1      @Y30LB02 24450003
DEFVCSN2 DS    CL12                12-BYTE AREA FOR SEQ CART2  @Y30LB02 24500003
DEFVRES4 DS    XL2                 2-BYTE RESERVE AREA         @Y30LB02 24550003
DEFVASID DS    XL2                 2-BYTE ASID AREA            @Y30LB02 24600003
DEFVECB  DS    A                   4-BYTE ECB ADDR             @Y30LB02 24650003
DEFVDATA DS    CL72                72-BYTE DATA AREA           @Y30LB02 24700003
DEFVVEXT DS    A                   4-BYTE VVICEXT ADDR         @Y30LB02 24750003
         AGO   .FINISH                                         @Y30LB02 24800003
.*       PROCESSING FOR THE EXECUTE MACRO FORM                 @Y30LB02 24850003
.*                                                             @Y30LB02 24900003
.EFORM   AIF   ('&MF(1)' NE 'E').SFORM      IS IT EFORM?       @Y30LB02 24950003
         AIF   ('&MF(2)' EQ '').EFOUT       IS 2ND PARM NULL?  @Y30LB02 25000003
.*                                                             @Y30LB02 25050003
*  MACMEAN  MSSC DEFINE VOLUME MACRO--EXECUTE FORM             @Y30LB02 25100003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 25150003
&SYMBOL  IHBINNRA &MF(2)           LD ADDR OF REQUEST BLK      @Y30LB02 25200003
.*                                 USING IHBINNRA MACRO        @Y30LB02 25250003
         LA    0,132                 LENGTH OF DEFV REQ BLK    @Y30LB02 25300003
         ST    0,0(1)                STORE LENGTH              @Y30LB02 25350003
         MVI   4(1),X'18'            STORE DEFINE OPCODE       @Y30LB02 25400003
         AGO   .CKSW2                                          @Y30LB02 25450003
.*                                                             @Y30LB02 25500003
.EFOUT   ANOP                                                  @Y30LB02 25550003
         MNOTE 12,'  ICB612I - MF(2) MUST CONTAIN REQ BLK '    @Y30LB02 25600003
         MNOTE 12,'  NAME IF EXEC MACRO  FORM REQUESTED '      @Y30LB02 25650003
&ERSW    SETB  1                   SET CONDITION SWITCH TO 1   @Y30LB02 25700003
.*                                                             @Y30LB02 25750003
.CKSW2   AIF   (&ERSW).FINISH      IF ERROR - END PROCESSING   @Y30LB02 25800003
         AGO   .CPROC              NAME OK - CONTINUE PROCESS  @Y30LB02 25850003
.*                                                             @Y30LB02 25900003
.*       PROCESSING OF 'STANDARD' MACRO FORM                   @Y30LB02 25950003
.*                                                             @Y30LB02 26000003
.SFORM   AIF   ('&MF(1)' NE '').INCFM      STANDARD FORM?      @Y30LB02 26050003
         AIF   ('&ECB' NE '').CKFLG    ECB SPECIFIED           @Y30LB02 26100003
&ERSW    SETB  1                 ERROR CONDITION NOTED         @Y30LB02 26150003
         MNOTE 12,'  ICB605I - ECB MUST BE SPECIFIED FOR '     @Y30LB02 26200003
         MNOTE 12,'  STANDARD FORM MACRO '                     @Y30LB02 26250003
         AGO   .CKSW4                                          @Y30LB02 26300003
.*                                                             @Y30LB02 26350003
.CKFLG   AIF   ('&FLAGS' NE '').CKSW4    FLAGS SPECIFIED       @Y30LB02 26400003
&ERSW    SETB  1                 ERROR CONDITION NOTED         @Y30LB02 26450003
         MNOTE 12,'  ICB607I - FLAGS MUST BE SPECIFIED '       @Y30LB02 26500003
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02 26550003
         AGO   .CKSW4                                          @Y30LB02 26600003
.*                                                             @Y30LB02 26650003
.INCFM   ANOP                                                  @Y30LB02 26700003
&ERSW    SETB  1                   ERROR CONDITION NOTED       @Y30LB02 26750003
         MNOTE 12,'  ICB615I - INVALID MF PARAMETER '          @Y30LB02 26800003
         MNOTE 12,'  SPECIFIED, MUST BE, L,E, OR NULL'         @Y30LB02 26850003
.CKSW4   AIF   (&ERSW).FINISH      IF ERROR-END PROCESSING     @Y30LB02 26900003
*  MACMEAN  MSSC DEFINE VOLUME MACRO--STANDARD FORM            @Y30LB02 26950003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 27000003
         CNOP 0,4                                              @Y30LB02 27050003
&SYMBOL  BAL   1,&DEFV             BRANCH AROUND REQ BLK       @Y30LB02 27100003
DEFVLEN  DC    A(&DEFV-*)          LENGTH OF DEFINE REQ BLK    @Y30LB02 27150003
DEFVOPC  DC    XL1'18'             DEFINE VOLUME OPCODE        @Y30LB02 27200003
DEFVRES1 DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02 27250003
DEFVFLG  DC    XL1'00'             1-BYTE FLAGS AREA           @Y30LB02 27300003
DEFVLIB  DC    XL1'00'             1-BYTE LIBID AREA           @Y30LB02 27350003
DEFVVOL  DC    XL6'000000000000'   6-BYTE AREA FOR VOLID       @Y30LB02 27400003
DEFVVFL  DC    XL1'00'             1-BYTE VOLUME FLAGS AREA    @Y30LB02 27450003
DEFVRES2 DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02 27500003
DEFVNVL  DC    XL6'000000000000'   6-BYTE NEW VOLID AREA       @Y30LB02 27550003
DEFVRES3 DC    XL2'0000'           2-BYTE RESERVED AREA        @Y30LB02 27600003
DEFVCSN1 DC    2XL6'000000000000'  12-BYTE AREA FOR CART SEQ1  @Y30LB02 27650003
DEFVCSN2 DC    2XL6'000000000000'  12-BYTE AREA FOR CART SEQ2  @Y30LB02 27700003
DEFVRES4 DC    XL2'0000'           2-BYTE RESERVE AREA         @Y30LB02 27750003
DEFVASID DC    XL2'0000'           2-BYTE ASID AREA            @Y30LB02 27800003
DEFVECB  DC    XL4'00000000'       4-BYTE ECB AREA             @Y30LB02 27850003
DEFVDATA DC    18XL4'00000000'     72-BYTE DATA AREA           @Y30LB02 27900003
DEFVVEXT DC    XL4'00000000'       4-BYTE VVICEXT AREA         @Y30LB02 27950003
&DEFV    EQU   *                                               @Y30LB02 28000003
.*                                                             @Y30LB02 28050003
.*       PROCESS REQUEST BLOCK FOR STANDARD AND EXECUTE FORMS  @Y30LB02 28100003
.*                                                             @Y30LB02 28150003
.CPROC   AIF   ('&FLAGS' EQ '').LIBID       FLAGS SPECIFIED?   @Y30LB02 28200003
         AIF   ('&FLAGS'(1,1) EQ '(').FLREG FLAGS IN REG-FORM? @Y30LB02 28250003
         MVC   6(1,1),&FLAGS         PUT FLAGS IN REQ BLK      @Y30LB02 28300003
         AGO   .LIBID                BRANCH                    @Y30LB02 28350003
.*                                                             @Y30LB02 28400003
.FLREG   ANOP                                                  @Y30LB02 28450003
         MVC   6(1,1),0(&FLAGS(1))   REGFORM-PLACE FLAGS REQB  @Y30LB02 28500003
.*                                                             @Y30LB02 28550003
.LIBID   AIF   ('&LIBID' EQ '').VOLID       LIBID SPECIFIED?   @Y30LB02 28600003
         AIF   ('&LIBID'(1,1) EQ '(').LIBREG  REG-FORM?        @Y30LB02 28650003
         MVC   7(1,1),&LIBID         ADDR-FM,LIBID IN REQB     @Y30LB02 28700003
         AGO   .VOLID                BRANCH                    @Y30LB02 28750003
.*                                                             @Y30LB02 28800003
.LIBREG  ANOP                                                  @Y30LB02 28850003
         MVC   7(1,1),0(&LIBID(1))   REG-FORM-LIBID IN REQB    @Y30LB02 28900003
.*                                                             @Y30LB02 28950003
.VOLID   AIF   ('&VOLID' EQ '').VOLFLG      VOLID SPECIFIED?   @Y30LB02 29000003
         AIF   ('&VOLID'(1,1) EQ  '(').REGV VOLID IN REG-FORM? @Y30LB02 29050003
         MVC   8(6,1),&VOLID         PUT VOLID IN REQBLK       @Y30LB02 29100003
         AGO   .VOLFLG               BRANCH                    @Y30LB02 29150003
.*                                                             @Y30LB02 29200003
.REGV    ANOP                                                  @Y30LB02 29250003
         MVC   8(6,1),0(&VOLID(1))   REGFORM-VOLID IN BLK      @Y30LB02 29300003
.*                                                             @Y30LB02 29350003
.VOLFLG  AIF   ('&VOLFLG' EQ '').NVOLID     VOLFLG SPECIFIED?  @Y30LB02 29400003
         AIF   ('&VOLFLG'(1,1) EQ '(').REFLG VOLFLG REG-FORM?  @Y30LB02 29450003
         MVC   14(1,1),&VOLFLG       PUT VAL VOLFLG IN BLK     @Y30LB02 29500003
         AGO   .NVOLID               BRANCH                    @Y30LB02 29550003
.*                                                             @Y30LB02 29600003
.REFLG   ANOP                                                  @Y30LB02 29650003
         MVC   14(1,1),0(&VOLFLG(1)) REG FORM-VOLFLG IN BLK    @Y30LB02 29700003
.*                                                             @Y30LB02 29750003
.NVOLID  AIF   ('&NVOLID' EQ '').CSN1       NVOLID SPECIFIED   @Y30LB02 29800003
         AIF   ('&NVOLID'(1,1) EQ '(').RNVL NVOLID REG-FORM?   @Y30LB02 29850003
         MVC   16(6,1),&NVOLID       ADDRFORM-NVOLID IN BLK    @Y30LB02 29900003
         AGO   .CSN1                                           @Y30LB02 29950003
.*                                                             @Y30LB02 30000003
.RNVL    ANOP                                                  @Y30LB02 30050003
         MVC   16(6,1),0(&NVOLID(1)) REG-FORM-NVOLID IN BLK    @Y30LB02 30100003
.*                                                             @Y30LB02 30150003
.CSN1    AIF  ('&CSN1' EQ '').CSN2            CSN1 SPECIFIED?  @Y30LB02 30200003
         AIF   ('&CSN1'(1,1) EQ '(').REGC1    CSN1 REG FORM?   @Y30LB02 30250003
         MVC   24(12,1),&CSN1        ADDRFORM-CSN1 PARM        @Y30LB02 30300003
         AGO   .CSN2                 BRANCH                    @Y30LB02 30350003
.*                                                             @Y30LB02 30400003
.REGC1   ANOP                                                  @Y30LB02 30450003
         MVC   24(12,1),0(&CSN1(1))  REG FORM-CSN1 TO BLK      @Y30LB02 30500003
.*                                                             @Y30LB02 30550003
.CSN2    AIF   ('&CSN2' EQ '').CKECB2       CSN2 SPECIFIED?    @Y30LB02 30600003
         AIF   ('&CSN2'(1,1) EQ '(').REGC2  CSN2 IN REG FORM?  @Y30LB02 30650003
         MVC   36(12,1),&CSN2        ADDRFORM-CSN2 IN BLK      @Y30LB02 30700003
         AGO   .CKECB2                                         @Y30LB02 30750003
.*                                                             @Y30LB02 30800003
.REGC2   ANOP                                                  @Y30LB02 30850003
         MVC   36(12,1),0(&CSN2(1))  REG FORM-CSN2 TO BLK      @Y30LB02 30900003
.*                                                             @Y30LB02 30950003
.CKECB2  AIF   ('&ECB' EQ '').VEXT   ECB SPECIFIED?            @Y30LB02 31000003
         AIF   ('&ECB'(1,1) EQ '(').ECBREG  ECB REG-FORM?      @Y30LB02 31050003
         LA    15,&ECB               ADDRFORM--ECB IN BLK      @Y30LB02 31100003
         ST    15,52(1)              STORE ADDR IN BLK         @Y30LB02 31150003
         AGO   .VEXT                                           @Y30LB02 31200003
.ECBREG  ANOP                                                  @Y30LB02 31250003
         ST    &ECB,52(1)            REGFORM-ECB IN BLK        @Y30LB02 31300003
.VEXT    ANOP                                                  @Y30LB02 31350003
         AIF   ('&VVICEXT' EQ '').DATA  VVICEXT SPECD?         @Y30LB02 31400003
         AIF   ('&VVICEXT'(1,1) EQ '(').RVEXT REGFORM BRCH     @Y30LB02 31450003
         LA    15,&VVICEXT           LOAD REG 15 WITH          @Y30LB02 31500003
.*                                   VVICEXT ADDRESS           @Y30LB02 31550003
         ST    15,128(1)             STORE ADDRESS             @Y30LB02 31600003
         AGO   .DATA                 BRANCH                    @Y30LB02 31650003
.*                                                             @Y30LB02 31700003
.RVEXT   ANOP                                                  @Y30LB02 31750003
         ST    &VVICEXT,128(1)       STORE VVICEXT ADDRESS     @Y30LB02 31800003
.DATA    AIF   ('&USDATA' EQ '').INVOKE   BRCH IF NULL         @Y30LB02 31850003
         AIF   ('&USDATA'(1,1) EQ '(').RDTA  IF REGFORM BRCH   @Y30LB02 31900003
         MVC   56(72,1),&USDATA      LOAD DATA IN REQ BLK      @Y30LB02 31950003
         AGO   .INVOKE               BRANCH                    @Y30LB02 32000003
.RDTA    ANOP                                                  @Y30LB02 32050003
         MVC   56(72,1),0(&USDATA(1)) LOAD DATA INTO REQ BLK   @Y30LB02 32100003
.INVOKE  ANOP                                                  @Y30LB02 32150003
         SVC   126           ISSUE SVC INSTRUCTION             @ZM31011 32160003
.FINISH  MEND                                                  @Y30LB02 32200003
**/                                                                     32250003
*   ICBDEFV:  MACRO KEYS(MF,FLAGS,LIBID,VOLID,VOLFLG,NVOLID,            32300003
*                        CSN1,CSN2,ECB,USDATA,VVICEXT);    /*@Y30LB02*/ 32350003
*/*                                                          @Y30LB02*/ 32400003
*/*                          EXTERNAL DECLARES               @Y30LB02*/ 32450003
*/*                                                          @Y30LB02*/ 32500003
*   DCL  DEFVTEST  FIXED EXT;    /*CTR FOR S-FORM INVOC      @Y30LB02*/ 32550003
*   DCL  DEFTESR1  FIXED EXT;    /*TEST FOR REG1 INVOC       @Y30LB02*/ 32600003
*/*                                                          @Y30LB02*/ 32650003
*/*                          INTERNAL DECLARES               @Y30LB02*/ 32700003
*/*                                                          @Y30LB02*/ 32750003
*   DCL  ERSW     FIXED;     /*ERROR CONDITION SWITCH        @Y30LB02*/ 32800003
*   DCL  DEFVCD   CHAR;      /*DEFINE VOLUME OPCODE          @Y30LB02*/ 32850003
*   DCL  RETCODE  FIXED;     /*RETURN CODE                   @Y30LB02*/ 32900003
*   DCL  DEFVLN   CHAR;      /*LENGTH OF DEFINE VOL LIST     @Y30LB02*/ 32950003
*   DCL  CTR   FIXED;        /*LIST FORM PARAMETER CTR       @Y30LB02*/ 33000003
*        DEFVCD = '18';      /*HEX OPCODE FOR DEFINE         @Y30LB02*/ 33050003
*        DEFVLN = '84';      /*HEX LENGTH OF DEFINE REQ      @Y30LB02*/ 33100003
*        CTR = 0;            /*INITIALIZE PARM CTR           @Y30LB02*/ 33150003
*        RETCODE = 0;        /*INITIALIZE RETURN CODE        @Y30LB02*/ 33200003
*        ERSW = 0;           /*INITIALIZE ERROR SWITCH       @Y30LB02*/ 33250003
*/*                                                          @Y30LB02*/ 33300003
*/*      CHECK FOR VALID MACRO FORMAT - E, L, OR NULL        @Y30LB02*/ 33350003
*/*********************************************************  @Y30LB02*/ 33400003
*/*                                                          @Y30LB02*/ 33450003
*     IF DEFTESR1=0 THEN     /*REG 1 ALREADY DCLD?           @Y30LB02*/ 33500003
*        DO;                 /*NO,DECLARE IT                 @Y30LB02*/ 33550003
*          ANS('DCL DEFVR1 REG(1) PTR ;/*ADDRESS OF '||                 33600003
*          'REQUEST BLOCK @Y30LB02*/')SKIP;                             33650003
*          DEFTESR1=DEFTESR1+1;   /*INCREM REG COUNTER       @Y30LB02*/ 33700003
*        END;                     /*                         @Y30LB02*/ 33750003
*/*                                                          @Y30LB02*/ 33800003
*   IF MF(1) ¬= 'L' THEN     /*IS IT LIST FORM?              @Y30LB02*/ 33850003
*     GO TO EFORM;           /*NO,BRCH,CK FOR EXECUTE        @Y30LB02*/ 33900003
*   IF MF(2) = '' THEN       /*LIST NAME SPECIFIED?          @Y30LB02*/ 33950003
*     DO;                    /*NO,PROCESS ERROR              @Y30LB02*/ 34000003
*        ERSW = 1;           /*SET ERROR SWITCH TO ONE       @Y30LB02*/ 34050003
*        RETCODE = 12;       /*SET RETURN CODE TO 12         @Y30LB02*/ 34100003
*        ANS MSG('  ICB602I -  A NAME FOR THE '||                       34150003
*        'REQUEST BLOCK MUST BE SPECIFIED IN MF(2)')SKIP;  /*@Y30LB02*/ 34200003
*        GO TO FINISH;       /*BRANCH TO END                 @Y30LB02*/ 34250003
*     END;                   /*                              @Y30LB02*/ 34300003
*/*                                                          @Y30LB02*/ 34350003
*/********************************************************   @Y30LB02*/ 34400003
*/*      THE FOLLOWING CODE WILL CHECK FOR ILLEGAL           @Y30LB02*/ 34450003
*/*      PARAMETERS SPECIFIED WITH LIST FORM AND             @Y30LB02*/ 34500003
*/*      PUT OUT DEFINE VOLUME REQUEST BLOCK                 @Y30LB02*/ 34550003
*/********************************************************   @Y30LB02*/ 34600003
*   ELSE                     /*                              @Y30LB02*/ 34650003
*     DO;                    /*CHECK PARAMETERS              @Y30LB02*/ 34700003
*        IF FLAGS ¬= '' THEN /*FLAGS SPECIFIED?              @Y30LB02*/ 34750003
*             CTR = CTR + 1;/*YES,INCREMENT CTR              @Y30LB02*/ 34800003
*        IF VOLID ¬= '' THEN /*VOLID SPECIFIED?              @Y30LB02*/ 34850003
*             CTR = CTR + 1; /*YES,INCREMENT COUNTER         @Y30LB02*/ 34900003
*        IF LIBID ¬= '' THEN /*LIBID SPECIFIED?              @Y30LB02*/ 34950003
*             CTR = CTR + 1; /*YES,INCREMENT COUNTER         @Y30LB02*/ 35000003
*        IF VOLFLG ¬= '' THEN /*VOLUME FLAGS SPECIFIED?      @Y30LB02*/ 35050003
*             CTR = CTR + 1;  /*YES,INCREMENT COUNTER        @Y30LB02*/ 35100003
*        IF NVOLID ¬= '' THEN /*NEW VOLID SPECIFIED?         @Y30LB02*/ 35150003
*             CTR = CTR + 1;  /*YES,INCREMENT COUNTER        @Y30LB02*/ 35200003
*        IF CSN1 ¬= '' THEN   /*CART SEQ 1 SPECIFIED?        @Y30LB02*/ 35250003
*             CTR = CTR + 1;  /*YES,INCREMENT COUNTER        @Y30LB02*/ 35300003
*        IF CSN2 ¬= '' THEN   /*CART SEQ 2 SPECIFIED?        @Y30LB02*/ 35350003
*             CTR = CTR + 1;  /*YES,INCREMENT COUNTER        @Y30LB02*/ 35400003
*        IF ECB ¬= '' THEN    /*ECB SPECIFIED?               @Y30LB02*/ 35450003
*             CTR = CTR + 1;  /*YES,INCREMENT COUNTER        @Y30LB02*/ 35500003
*        IF USDATA ¬= '' THEN /*USER DATA SPECIFIED?         @Y30LB02*/ 35550003
*             CTR = CTR + 1;  /*YES,INCREMENT COUNTER        @Y30LB02*/ 35600003
*        IF VVICEXT ¬= '' THEN /*VVICEXT SPECIFIED           @Y30LB02*/ 35650003
*             CTR = CTR + 1;  /*YES,INCREMENT COUNTER        @Y30LB02*/ 35700003
*        IF CTR > 0 THEN      /*COUNTER GT ZERO?             @Y30LB02*/ 35750003
*          DO;                /*YES,PRINT WARNING MSG        @Y30LB02*/ 35800003
*             RETCODE = 4;    /*SET RETURN CODE TO 4         @Y30LB02*/ 35850003
*             ANS MSG('  ICB604I -  WARNING-ONLY'||                     35900003
*                 ' THE MF PARAMETER IS VALID FOR THE'||                35950003
*                 ' LIST FORM  ')SKIP;                     /*@Y30LB02*/ 36000003
*          END;               /*                             @Y30LB02*/ 36050003
*     END;                    /*                             @Y30LB02*/ 36100003
*   IF MF(3) ¬= '' THEN       /*PLS ATTRIBUTE SPECIFIED?     @Y30LB02*/ 36150003
*      GO TO ATTRLST;         /*BRANCH,PROCESS ATTRIBUTE     @Y30LB02*/ 36200003
*/*                                                          @Y30LB02*/ 36250003
*   ELSE                      /*INITIALIZED LIST FORM        @Y30LB02*/ 36300003
*     DO;                     /*OUTPUT DECLARES FOR REQ BLK  @Y30LB02*/ 36350003
*        ANS('/*******************************************'||           36400003
*            '************** @Y30LB02*/')SKIP;                          36450003
*        ANS('/*    MACMEAN  MSSC DEFINE VOLUME MACRO     '||           36500003
*            '               @Y30LB02*/')SKIP;                          36550003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           36600003
*            '               @Y30LB02*/')SKIP;                          36650003
*        ANS('/*THIS IS THE INITIALIZED LIST FORM         '||           36700003
*            '               @Y30LB02*/')SKIP;                          36750003
*        ANS('/*******************************************'||           36800003
*            '************** @Y30LB02*/')SKIP;                          36850003
*        ANS('DCL 1 '||MF(2)||'  STATIC LOCAL,'||                       36900003
*        '/*DEFINE VOLUME REQUEST BLOCK @Y30LB02*/')SKIP;               36950003
*        ANS('    2  DEFVLEN  FIXED(31)INIT('||QUOTE('84')||            37000003
*        'X),/*LENGTH OF DEFINE VOLUME REQ BLK @Y30LB02*/')SKIP;        37050003
*        ANS('    2  DEFVOPCD  FIXED(8)INIT('||QUOTE('18')||            37100003
*        'X),/*DEFINE VOLUME OPCODE @Y30LB02*/')SKIP;                   37150003
*        ANS('    2  *       CHAR(1)INIT('||QUOTE('00')||               37200003
*        'X),/*RESERVED AND ZERO @Y30LB02*/')SKIP;                      37250003
*        ANS('    2  DEFVFLG   BIT(8)INIT('||QUOTE                      37300003
*        ('00000000')||'B),/*ONE BYTE FLAGS  @Y30LB02*/')SKIP;          37350003
*        ANS('       3  DEFVCR  BIT(1),/*CREATE ATTRI'||                37400003
*        'BUTE @Y30LB02*/')SKIP;                                        37450003
*        ANS('       3  DEFVELM BIT(1),/*ELIMINATE'||                   37500003
*        ' ATTRIBUTE @Y30LB02*/')SKIP;                                  37550003
*        ANS('       3  DEFVRNM  BIT(1),/*RENAME ATTRI'||               37600003
*        'BUTE @Y30LB02*/')SKIP;                                        37650003
*        ANS('       3  DEFVREP  BIT(1),/*REPLACE VOLUME'||             37700003
*        ' FLAGS @Y30LB02*/')SKIP;                                      37750003
*        ANS('       3  DEFVELTR BIT(1),/*ELIMINATE TRAN'||             37800003
*        'SIENT VOLUME ATTRIBUTE @Y30LB02*/')SKIP;                      37850003
*        ANS('       3  DEFVRNTR BIT(1),/*RENAME TRAN'||                37900003
*        'SIENT VOLUME ATTRIBUTE @Y30LB02*/')SKIP;                      37950003
*        ANS('       3  DEFVACT BIT(1),/*ACTIVATE TRAN'||               38000003
*        'SIENT VOLUME ATTRIBUTE @Y30LB02*/')SKIP;                      38050003
*        ANS('       3  DEFVDACT BIT(1),/*DEACTIVATE'||                 38100003
*        ' VOLUME ATTRIBUTE @Y30LB02*/')SKIP;                           38150003
*        ANS('    2  DEFVLIB  BIT(8)INIT('||QUOTE                       38200003
*        ('00000000')||'B), /*ONE BYTE LIBID @Y30LB02*/')SKIP;          38250003
*        ANS('       3  *       BIT(6),/*RESERVED AND'||                38300003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               38350003
*        ANS('       3  DEFVLID BIT(2),/*BINARY NUMBER'||               38400003
*        ' ZERO TO THREE @Y30LB02*/')SKIP;                              38450003
*        ANS('    2  DEFVOLD CHAR(6) ,/*VOLUME IDENTIFI'||              38500003
*        'CATION @Y30LB02*/')SKIP;                                      38550003
*        ANS('        3  *(6)  CHAR(1)INIT((6)'||QUOTE                  38600003
*        ('00')||'X),/*INIT VOLID AREA TO ZERO @Y30LB02*/')SKIP;        38650003
*        ANS('    2  DEFVVFLG  BIT(8)INIT('||QUOTE                      38700003
*        ('00000000')||'B),/*VOLUME FLAG ATTRIB @Y30LB02*/')SKIP;       38750003
*        ANS('       3  DEFVCECT BIT(1),/*CE CARTRIDGE'||               38800003
*        ' @Y30LB02*/')SKIP;                                            38850003
*        ANS('       3  *  BIT(1),/*RESERVED BIT'||                     38900003
*        ' @Y30LB02*/')SKIP;                                            38950003
*        ANS('       3  DEFVSEC  BIT(1),/*SECURE VOLUME'||              39000003
*        ' @Y30LB02*/')SKIP;                                            39050003
*        ANS('       3  DEFVEXCL  BIT(1),/*EXCLUSIVE '||                39100003
*        'VOLUME @Y30LB02*/')SKIP;                                      39150003
*        ANS('       3  *  BIT(1),/*RESERVED '||                        39200003
*        'BIT-USED BY THE SUBSYSTEM @Y30LB02*/')SKIP;                   39250003
*        ANS('       3  DEFVBIND  BIT(1),/*BIND VOLUME'||               39300003
*        ' @Y30LB02*/')SKIP;                                            39350003
*        ANS('       3  DEFVWINH  BIT(1),/*WRITE INHIBIT'||             39400003
*        ' @Y30LB02*/')SKIP;                                            39450003
*        ANS('       3  *       BIT(1),/*RESERVED-ZERO'||               39500003
*        ' @Y30LB02*/')SKIP;                                            39550003
*        ANS('    2  *         CHAR(1)INIT('||QUOTE('00')||             39600003
*        'X),/*1-BYTE RESERVED AREA @Y30LB02*/')SKIP;                   39650003
*        ANS('    2  DEFVNVOL  CHAR(6) ,/*NEW VOL ID @Y30LB02*/')SKIP;  39700003
*        ANS('        3  *(6)  CHAR(1)INIT((6)'||QUOTE                  39750003
*        ('00')||'X),/*INIT AREA TO ZERO @Y30LB02*/')SKIP;              39800003
*        ANS('    2  *          CHAR(2) ,/*2-BYTE RESERVED'||           39850003
*        ' AREA @Y30LB02*/')SKIP;                                       39900003
*        ANS('        3  *(2)  CHAR(1)INIT((2)'||QUOTE                  39950003
*        ('00')||'X),/*INIT RESERVED AREA TO ZERO @Y30LB02*/')SKIP;     40000003
*        ANS('    2  DEFVCSN1  CHAR(12) ,/*CART SEQUENCE'||             40050003
*        ' ONE @Y30LB02*/')SKIP;                                        40100003
*        ANS('        3  *(12)  CHAR(1)INIT((12)'||QUOTE                40150003
*        ('00')||'X),/*INIT CART ONE AREA TO ZERO @Y30LB02*/')SKIP;     40200003
*        ANS('    2  DEFVCSN2     CHAR(12) ,/*CART SEQ'||               40250003
*        ' TWO @Y30LB02*/')SKIP;                                        40300003
*        ANS('        3  *(12)  CHAR(1)INIT((12)'||QUOTE                40350003
*        ('00')||'X),/*INIT CART TWO AREA TO ZERO @Y30LB02*/')SKIP;     40400003
*        ANS('    2  *     CHAR(2) INIT('||                             40450003
*        QUOTE('0000')||'X),/*RESERVED @Y30LB02*/')SKIP;                40500003
*        ANS('    2  DEFVASID CHAR(2) INIT('||                          40550003
*        QUOTE('0000')||'X),/*ASID AREA @Y30LB02*/')SKIP;               40600003
*        ANS('    2  DEFVECB  FIXED(31)INIT(0),/*EVENT '||              40650003
*        'CONTROL BLOCK ADDRESS @Y30LB02*/')SKIP;                       40700003
*        ANS('    2  DEFVDATA CHAR(72) INIT('||                         40750003
*        QUOTE('')||'B),/*USER DATA ARRAY @Y30LB02*/')SKIP;             40800003
*        ANS('       3  DEFR50 CHAR(2),/*RESERVED AND MUST '||          40850003
*        'ALWAYS BE ZERO/BLANK @Y30LB02*/')SKIP;                        40900003
*        ANS('       3  DEFACSEC CHAR(1),/*ACCESSI'||                   40950003
*        'BILITY(SECURITY) @Y30LB02*/')SKIP;                            41000003
*        ANS('       3  DEFR55 CHAR(26),/*RESERVED AREA '||             41050003
*        'MUST BE ZERO/BLANK @Y30LB02*/')SKIP;                          41100003
*        ANS('       3  DEFOWNID CHAR(14),/*OWNER'||                    41150003
*        ' IDENTIFICATION @Y30LB02*/')SKIP;                             41200003
*        ANS('       3  DEFR60 CHAR(28),/*RESERVED AREA '||             41250003
*        'MUST BE ZERO/BLANK @Y30LB02*/')SKIP;                          41300003
*        ANS('       3  DEFTLAB CHAR(1),/*T LABEL '||                   41350003
*        'STANDARD VERSION @Y30LB02*/')SKIP;                            41400003
*        ANS('    2  DEFVVEXT  FIXED(31)INIT(0);/*MSVC '||              41450003
*        'EXTENSION AREA @Y30LB02*/')SKIP;                              41500003
*        GO TO FINISH;         /*BRANCH TO END               @Y30LB02*/ 41550003
*     END;                     /*                            @Y30LB02*/ 41600003
*/*                                                          @Y30LB02*/ 41650003
*ATTRLST:                                                               41700003
*/*                                                          @Y30LB02*/ 41750003
*        ANS('/*******************************************'||           41800003
*            '************** @Y30LB02*/')SKIP;                          41850003
*        ANS('/*     MACMEAN  MSSC DEFINE VOLUME MACRO    '||           41900003
*            '               @Y30LB02*/')SKIP;                          41950003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           42000003
*            '               @Y30LB02*/')SKIP;                          42050003
*        ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||           42100003
*            '               @Y30LB02*/')SKIP;                          42150003
*        ANS('/*******************************************'||           42200003
*            '************** @Y30LB02*/')SKIP;                          42250003
*        ANS('DCL 1 '||MF(2)||' '||MF(3)||','||                         42300003
*        ' /*DEFINE VOLUME REQUEST BLOCK @Y30LB02*/')SKIP;              42350003
*        ANS('    2  DEFVLEN  FIXED(31),/*LENGTH '||                    42400003
*        'OF DEFINE VOLUME REQ BLK=84 HEX @Y30LB02*/')SKIP;             42450003
*        ANS('    2  DEFVOPCD  FIXED(8),/*DEFINE '||                    42500003
*        'OPCODE = 18 HEX @Y30LB02*/')SKIP;                             42550003
*        ANS('    2  *  CHAR(1),/*RESERVED AND ZERO @Y30LB02 */')SKIP;  42600003
*        ANS('    2  DEFVFLG   BIT(8) ,/*ONE BYTE'||                    42650003
*        ' FLAGS AREA @Y30LB02*/')SKIP;                                 42700003
*        ANS('       3  DEFVCR  BIT(1),/*CREATE ATTRI'||                42750003
*        'BUTE @Y30LB02*/')SKIP;                                        42800003
*        ANS('       3  DEFVELM BIT(1),/*ELIMINATE'||                   42850003
*        ' ATTRIBUTE @Y30LB02*/')SKIP;                                  42900003
*        ANS('       3  DEFVRNM  BIT(1),/*RENAME ATTRI'||               42950003
*        'BUTE @Y30LB02*/')SKIP;                                        43000003
*        ANS('       3  DEFVREP  BIT(1),/*REPLACE VOLUME'||             43050003
*        ' FLAGS @Y30LB02*/')SKIP;                                      43100003
*        ANS('       3  DEFVELTR BIT(1),/*ELIMINATE TRAN'||             43150003
*        'SIENT VOLUME ATTRIBUTE @Y30LB02*/')SKIP;                      43200003
*        ANS('       3  DEFVRNTR BIT(1),/*RENAME TRAN'||                43250003
*        'SIENT VOLUME ATTRIBUTE @Y30LB02*/')SKIP;                      43300003
*        ANS('       3  DEFVACT BIT(1),/*ACTIVATE TRAN'||               43350003
*        'SIENT VOLUME ATTRIBUTE @Y30LB02*/')SKIP;                      43400003
*        ANS('       3  DEFVDACT BIT(1),/*DEACTIVATE'||                 43450003
*        ' VOLUME ATTRIBUTE @Y30LB02*/')SKIP;                           43500003
*        ANS('    2  DEFVLIB  BIT(8),/*ONE BYTE LIBID @Y30LB02*/')SKIP; 43550003
*        ANS('       3  *       BIT(6),/*RESERVED AND'||                43600003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               43650003
*        ANS('       3  DEFVLID BIT(2),/*BINARY NUMBER'||               43700003
*        ' ZERO TO THREE @Y30LB02*/')SKIP;                              43750003
*        ANS('    2  DEFVOLD CHAR(6) ,/*VOLUME IDENTIFI'||              43800003
*        'CATION @Y30LB02*/')SKIP;                                      43850003
*        ANS('    2  DEFVVFLG  BIT(8),'||                               43900003
*        '/*VOLUME FLAG ATTRIB @Y30LB02*/')SKIP;                        43950003
*        ANS('       3  DEFVCECT BIT(1),/*CE CARTRIDGE'||               44000003
*        ' @Y30LB02*/')SKIP;                                            44050003
*        ANS('       3  *  BIT(1),/*RESERVED BIT'||                     44100003
*        ' @Y30LB02*/')SKIP;                                            44150003
*        ANS('       3  DEFVSEC  BIT(1),/*SECURE VOLUME'||              44200003
*        ' @Y30LB02*/')SKIP;                                            44250003
*        ANS('       3  DEFVEXCL  BIT(1),/*EXCLUSIVE '||                44300003
*        ' VOLUME @Y30LB02*/')SKIP;                                     44350003
*        ANS('       3  *  BIT(1),/*SCRATCH '||                         44400003
*        'CARTRIDGE RESERVED FOR SUBSYS @Y30LB02*/')SKIP;               44450003
*        ANS('       3  DEFVBIND  BIT(1),/*BIND VOLUME'||               44500003
*        ' @Y30LB02*/')SKIP;                                            44550003
*        ANS('       3  DEFVWINH  BIT(1),/*WRITE INHIBIT'||             44600003
*        ' @Y30LB02*/')SKIP;                                            44650003
*        ANS('       3  *       BIT(1),/*RESERVED-ZERO'||               44700003
*        ' @Y30LB02*/')SKIP;                                            44750003
*        ANS('    2  *  CHAR(1),/*BYTE RESVD AREA @Y30LB02*/')SKIP;     44800003
*        ANS('    2  DEFVNVOL CHAR(6),/*NEW VOLID @Y30LB02*/')SKIP;     44850003
*        ANS('    2  *          CHAR(2) ,/*2-BYTE RESERVED'||           44900003
*        ' AREA @Y30LB02*/')SKIP;                                       44950003
*        ANS('    2  DEFVCSN1     CHAR(12) ,/*CART SEQUENCE'||          45000003
*        ' ONE @Y30LB02*/')SKIP;                                        45050003
*        ANS('    2  DEFVCSN2     CHAR(12) ,/*CART SEQ'||               45100003
*        ' TWO @Y30LB02*/')SKIP;                                        45150003
*        ANS('    2  *     CHAR(2) ,'||                                 45200003
*        '/*RESERVED @Y30LB02*/')SKIP;                                  45250003
*        ANS('    2  DEFVASID CHAR(2) ,'||                              45300003
*        '/*ASID AREA @Y30LB02*/')SKIP;                                 45350003
*        ANS('    2  DEFVECB  FIXED(31),/*EVENT '||                     45400003
*        'CONTROL BLOCK ADDRESS @Y30LB02*/')SKIP;                       45450003
*        ANS('    2  DEFVDATA CHAR(72),'||                              45500003
*        '/*USER DATA ARRAY @Y30LB02*/')SKIP;                           45550003
*        ANS('       3  DEFR50 CHAR(2),/*RESERVED AND MUST '||          45600003
*        'ALWAYS BE ZERO/BLANK @Y30LB02*/')SKIP;                        45650003
*        ANS('       3  DEFACSEC CHAR(1),/*ACCESSI'||                   45700003
*        'BILITY(SECURITY) @Y30LB02*/')SKIP;                            45750003
*        ANS('       3  DEFR55 CHAR(26),/*RESERVED AREA '||             45800003
*        'MUST BE ZERO/BLANK @Y30LB02*/')SKIP;                          45850003
*        ANS('       3  DEFOWNID CHAR(14),/*OWNER'||                    45900003
*        ' IDENTIFICATION @Y30LB02*/')SKIP;                             45950003
*        ANS('       3  DEFR60 CHAR(28),/*RESERVED AREA '||             46000003
*        'MUST BE ZERO/BLANK @Y30LB02*/')SKIP;                          46050003
*        ANS('       3  DEFTLAB CHAR(1),/*T LABEL '||                   46100003
*        'STANDARD VERSION @Y30LB02*/')SKIP;                            46150003
*        ANS('    2  DEFVVEXT  FIXED(31);/*MSVC '||                     46200003
*        'EXTENSION AREA @Y30LB02*/')SKIP;                              46250003
*        GO TO FINISH;     /*BRANCH TO END                   @Y30LB02*/ 46300003
*/*                                                          @Y30LB02*/ 46350003
*/*   PROCESSING THE EXECUTE MACRO FORM                      @Y30LB02*/ 46400003
*/*                                                          @Y30LB02*/ 46450003
*EFORM:                                                                 46500003
*   IF MF(1) ¬= 'E' THEN     /*EXECUTE FORM SPECIFIED?       @Y30LB02*/ 46550003
*     GO TO SFORM;           /*NO,BRCH AND CK FOR STD FORM   @Y30LB02*/ 46600003
*   IF MF(2) = '' THEN       /*IS LIST NAME SPECIFIED?       @Y30LB02*/ 46650003
*     DO;                    /*NO,PRINT OUT ERROR MSG        @Y30LB02*/ 46700003
*        ERSW = 1;           /*SET ERROR SWITCH TO ONE       @Y30LB02*/ 46750003
*        RETCODE = 12;       /*SET RETURN CODE TO 12         @Y30LB02*/ 46800003
*        ANS MSG('  ICB612I - MF(2) MUST CONTAIN REQ BLK '||            46850003
*        'NAME IF EXEC MACRO FORM REQUESTED')SKIP;         /*@Y30LB02*/ 46900003
*        GO TO CKSW;         /*BRANCH TO CHECK ERROR SWITCH  @Y30LB02*/ 46950003
*     END;                   /*                              @Y30LB02*/ 47000003
*/*                                                          @Y30LB02*/ 47050003
*   ELSE                     /*REQUEST TO ZERO BLOCK         @Y30LB02*/ 47100003
*        ANS('/*******************************************'||           47150003
*            '************** @Y30LB02*/')SKIP;                          47200003
*        ANS('/*     MACMEAN  MSSC DEFINE VOLUME MACRO    '||           47250003
*            '               @Y30LB02*/')SKIP;                          47300003
*        ANS('/*VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00   '||           47350003
*            '               @Y30LB02*/')SKIP;                          47400003
*        ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '||           47450003
*            '               @Y30LB02*/')SKIP;                          47500003
*        ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '||           47550003
*            '               @Y30LB02*/')SKIP;                          47600003
*        ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'||           47650003
*            '               @Y30LB02*/')SKIP;                          47700003
*        ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '||           47750003
*            '               @Y30LB02*/')SKIP;                          47800003
*        ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '||           47850003
*            '               @Y30LB02*/')SKIP;                          47900003
*        ANS('/*******************************************'||           47950003
*            '************** @Y30LB02*/')SKIP;                          48000003
*/*                                                          @Y30LB02*/ 48050003
*   IF MF(3) = 'COMPLETE' THEN  /*COMPLETE SPECIFIED         @Y30LB02*/ 48100003
*     DO;                    /*ZERO OUT THE BLOCK            @Y30LB02*/ 48150003
*      ANS(' '||MF(2)||'='||MF(2)||'&&'||MF(2)||';/*ZERO '||            48200003
*        ' AND INIT REQUEST BLOCK @Y30LB02*/')SKIP;                     48250003
*     END;                                                 /*@Y30LB02*/ 48300003
*/*                                                          @Y30LB02*/ 48350003
*   ANS('RFY DEFVR1 RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;             48400003
*   ANS('DEFVR1= ADDR('||MF(2)||'); /*R1 PTR'||                         48450003
*       ' TO REQUEST BLOCK @Y30LB02*/')SKIP;                            48500003
*CKSW:                                                                  48550003
*   IF ERSW = 1 THEN        /*SET RETURN CODE TO ONE         @Y30LB02*/ 48600003
*     GO TO FINISH;         /*BRANCH TO END                  @Y30LB02*/ 48650003
*   ELSE                    /*                               @Y30LB02*/ 48700003
*     GO TO COMPROC;        /*BRANCH TO CK PARAMETERS        @Y30LB02*/ 48750003
*/*                                                          @Y30LB02*/ 48800003
*SFORM:                                                                 48850003
*   IF MF(1) ¬= '' THEN     /*STANDARD FORM REQUEST?         @Y30LB02*/ 48900003
*     DO;                   /*NO,PROCESS ERROR               @Y30LB02*/ 48950003
*        ERSW = 1;          /*SET ERROR SWITCH TO ONE        @Y30LB02*/ 49000003
*        RETCODE = 12;      /*SET RETURN CODE TO 12          @Y30LB02*/ 49050003
*        ANS MSG('  ICB615I - INVALID MF PARAMETER '||                  49100003
*             'SPECIFIED, MUST BE L, E, OR NULL')SKIP;     /*@Y30LB02*/ 49150003
*        GO TO CKSW2;       /*BRANCH TO CK ERROR SWITCH      @Y30LB02*/ 49200003
*     END;                  /*                               @Y30LB02*/ 49250003
*/*                                                          @Y30LB02*/ 49300003
*   IF ECB = '' THEN        /*ECB SPECIFIED?                 @Y30LB02*/ 49350003
*     DO;                   /*NO,PROCESS ERROR MSG           @Y30LB02*/ 49400003
*        ERSW = 1;          /*SET ERROR SWITCH TO ONE        @Y30LB02*/ 49450003
*        RETCODE = 12;      /*SET RETURN CODE TO 12          @Y30LB02*/ 49500003
*        ANS MSG('  ICB605I - ECB MUST BE SPECIFIED '||                 49550003
*        'FOR STANDARD FORM MACRO')SKIP;                   /*@Y30LB02*/ 49600003
*        GO TO CKSW2;       /*BRANCH TO CK ERROR SWITCH      @Y30LB02*/ 49650003
*     END;                  /*                               @Y30LB02*/ 49700003
*   IF FLAGS = '' THEN      /*FLAGS SPECIFIED?               @Y30LB02*/ 49750003
*     DO;                   /*NO,PRINT ERROR MESSAGE         @Y30LB02*/ 49800003
*        ERSW = 1;          /*SET ERROR SWITCH TO ONE        @Y30LB02*/ 49850003
*        RETCODE = 12;      /*SET RETURN CODE TO 12          @Y30LB02*/ 49900003
*        ANS MSG('  ICB607I - FLAGS MUST BE SPECIFIED '||               49950003
*        'FOR STANDARD FORM MACRO')SKIP;                   /*@Y30LB02*/ 50000003
*     END;                  /*                               @Y30LB02*/ 50050003
*CKSW2:                                                                 50100003
*   IF ERSW = 1 THEN        /*IS ERROR SWITCH SET?           @Y30LB02*/ 50150003
*     GO TO FINISH;         /*YES,BRANCH TO END              @Y30LB02*/ 50200003
*   IF DEFVTEST = 1 THEN    /*1ST STANDARD FORM REQ?         @Y30LB02*/ 50250003
*     DO;                   /*NO,DON'T PUT OUT DCLS          @Y30LB02*/ 50300003
*        ANS('/*******************************************'||           50350003
*            '************** @Y30LB02*/')SKIP;                          50400003
*        ANS('/*     MACMEAN  MSSC DEFINE VOLUME MACRO    '||           50450003
*            '               @Y30LB02*/')SKIP;                          50500003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           50550003
*            '               @Y30LB02*/')SKIP;                          50600003
*        ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '||           50650003
*            '               @Y30LB02*/')SKIP;                          50700003
*        ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||           50750003
*            '               @Y30LB02*/')SKIP;                          50800003
*        ANS('/*******************************************'||           50850003
*            '************** @Y30LB02*/')SKIP;                          50900003
*        ANS('RFY DEFVR1 RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;        50950003
*        ANS('DEFVR1= ADDR(DEFVLEN); /*R1 PTR'||                        51000003
*            ' TO REQUEST BLOCK @Y30LB02*/')SKIP;                       51050003
*        GO TO COMPROC;                                    /*@Y30LB02*/ 51100003
*     END;                                                 /*@Y30LB02*/ 51150003
*/*                                                          @Y30LB02*/ 51200003
*   ELSE                /*FIRST INVOC OF STD FORM            @Y30LB02*/ 51250003
*     DO;               /*PRINT OUT THE DECLARES             @Y30LB02*/ 51300003
*        ANS('/*******************************************'||           51350003
*            '************** @Y30LB02*/')SKIP;                          51400003
*        ANS('/*     MACMEAN  MSSC DEFINE VOLUME MACRO    '||           51450003
*            '               @Y30LB02*/')SKIP;                          51500003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           51550003
*            '               @Y30LB02*/')SKIP;                          51600003
*        ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||           51650003
*            '               @Y30LB02*/')SKIP;                          51700003
*        ANS('/*******************************************'||           51750003
*            '************** @Y30LB02*/')SKIP;                          51800003
*        ANS('DCL 1 DEFVLS01  STATIC LOCAL,'||                          51850003
*        '/*DEFINE VOLUME REQUEST BLOCK @Y30LB02*/')SKIP;               51900003
*        ANS('    2  DEFVLEN  FIXED(31)INIT('||QUOTE('84')||            51950003
*        'X),/*LENGTH OF DEFINE VOLUME REQ BLK @Y30LB02*/')SKIP;        52000003
*        ANS('    2  DEFVOPCD  FIXED(8)INIT('||QUOTE('18')||            52050003
*        'X),/*DEFINE VOLUME OPCODE @Y30LB02*/')SKIP;                   52100003
*        ANS('    2  *       CHAR(1)INIT('||QUOTE('00')||               52150003
*        'X),/*RESERVED AND ZERO @Y30LB02*/')SKIP;                      52200003
*        ANS('    2  DEFVFLG   BIT(8)INIT('||QUOTE                      52250003
*        ('00000000')||'B),/*ONE BYTE FLAGS AREA @Y30LB02*/')SKIP;      52300003
*        ANS('       3  DEFVCR  BIT(1),/*CREATE ATTRI'||                52350003
*        'BUTE @Y30LB02*/')SKIP;                                        52400003
*        ANS('       3  DEFVELM  BIT(1),/*ELIMINATE'||                  52450003
*        ' ATTRIBUTE @Y30LB02*/')SKIP;                                  52500003
*        ANS('       3  DEFVRNM  BIT(1),/*RENAME ATTRI'||               52550003
*        'BUTE @Y30LB02*/')SKIP;                                        52600003
*        ANS('       3  DEFVREP  BIT(1),/*REPLACE VOLUME'||             52650003
*        ' FLAGS @Y30LB02*/')SKIP;                                      52700003
*        ANS('       3  DEFVELTR BIT(1),/*ELIMINATE TRAN'||             52750003
*        'SIENT VOLUME ATTRIBUTE @Y30LB02*/')SKIP;                      52800003
*        ANS('       3  DEFVRNTR  BIT(1),/*RENAME TRAN'||               52850003
*        'SIENT VOLUME ATTRIBUTE @Y30LB02*/')SKIP;                      52900003
*        ANS('       3  DEFVACT BIT(1),/*ACTIVATE TRAN'||               52950003
*        'SIENT VOLUME ATTRIBUTE @Y30LB02*/')SKIP;                      53000003
*        ANS('       3  DEFVDACT BIT(1),/*DEACTIVATE'||                 53050003
*        ' VOLUME ATTRIBUTE @Y30LB02*/')SKIP;                           53100003
*        ANS('    2  DEFVLIB  BIT(8)INIT('||QUOTE                       53150003
*        ('00000000')||'B), /*ONE BYTE MSF ID @Y30LB02*/')SKIP;         53200003
*        ANS('       3  *       BIT(6),/*RESERVED AND'||                53250003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               53300003
*        ANS('       3  DEFVLID BIT(2),/*BINARY NUMBER'||               53350003
*        ' ZERO TO THREE @Y30LB02*/')SKIP;                              53400003
*        ANS('    2  DEFVOLD CHAR(6) ,/*VOLUME ID @Y30LB02*/')SKIP;     53450003
*        ANS('        3  *(6)  CHAR(1)INIT((6)'||QUOTE                  53500003
*        ('00')||'X),/*INIT VOLID AREA TO ZERO @Y30LB02*/')SKIP;        53550003
*        ANS('    2  DEFVVFLG  BIT(8)INIT('||QUOTE                      53600003
*        ('00000000')||'B),/*VOLUME FLAG ATTRIB @Y30LB02*/')SKIP;       53650003
*        ANS('       3  DEFVCECT  BIT(1),/*CE CARTRIDGE'||              53700003
*        ' @Y30LB02*/')SKIP;                                            53750003
*        ANS('       3  *  BIT(1),/*RESERVED BIT'||                     53800003
*        ' @Y30LB02*/')SKIP;                                            53850003
*        ANS('       3  DEFVSEC  BIT(1),/*SECURE VOLUME'||              53900003
*        ' @Y30LB02*/')SKIP;                                            53950003
*        ANS('       3  DEFVEXCL  BIT(1),/*EXCLUSIVE '||                54000003
*        ' VOLUME @Y30LB02*/')SKIP;                                     54050003
*        ANS('       3  *  BIT(1),/*SCRATCH '||                         54100003
*        'CARTRIDGE - USED BY MSC @Y30LB02*/')SKIP;                     54150003
*        ANS('       3  DEFVBIND  BIT(1),/*BIND VOLUME'||               54200003
*        ' @Y30LB02*/')SKIP;                                            54250003
*        ANS('       3  DEFVWINH  BIT(1),/*WRITE INHIBIT'||             54300003
*        ' @Y30LB02*/')SKIP;                                            54350003
*        ANS('       3  *       BIT(1),/*RESERVED-ZERO'||               54400003
*        ' @Y30LB02*/')SKIP;                                            54450003
*        ANS('    2  *          CHAR(1)INIT('||QUOTE                    54500003
*        ('00')||'X),/*1-BYTE RESERVED AREA @Y30LB02*/')SKIP;           54550003
*        ANS('    2  DEFVNVOL     CHAR(6) ,/*NEW VOL'||                 54600003
*        'ID @Y30LB02*/')SKIP;                                          54650003
*        ANS('        3  *(6)  CHAR(1)INIT((6)'||QUOTE                  54700003
*        ('00')||'X),/*INIT NEW VOLID TO ZERO @Y30LB02*/')SKIP;         54750003
*        ANS('    2  *          CHAR(2) ,/*2-BYTE'||                    54800003
*        ' RESERVED AREA @Y30LB02*/')SKIP;                              54850003
*        ANS('        3  *(2)  CHAR(1)INIT((2)'||QUOTE                  54900003
*        ('00')||'X),/*INIT RESERVED AREA @Y30LB02*/')SKIP;             54950003
*        ANS('    2  DEFVCSN1     CHAR(12),/*CART SEQ'||                55000003
*        ' ONE @Y30LB02*/')SKIP;                                        55050003
*        ANS('        3  *(12)  CHAR(1)INIT((12)'||QUOTE                55100003
*        ('00')||'X),/*INIT CART SEQ ONE  @Y30LB02*/')SKIP;             55150003
*        ANS('    2  DEFVCSN2    CHAR(12) ,/*CART SEQ'||                55200003
*        ' TWO @Y30LB02*/')SKIP;                                        55250003
*        ANS('        3  *(12)  CHAR(1)INIT((12)'||QUOTE                55300003
*        ('00')||'X),/*INIT CART SEQ TWO @Y30LB02*/')SKIP;              55350003
*        ANS('    2  *     CHAR(2) INIT('||                             55400003
*        QUOTE('0000')||'X),/*RESERVED @Y30LB02*/')SKIP;                55450003
*        ANS('    2  DEFVASID CHAR(2) INIT('||                          55500003
*        QUOTE('0000')||'X),/*ASID AREA @Y30LB02*/')SKIP;               55550003
*        ANS('    2  DEFVECB  FIXED(31)INIT(0),/*EVENT '||              55600003
*        'CONTROL BLOCK ADDRESS @Y30LB02*/')SKIP;                       55650003
*        ANS('    2  DEFVDATA CHAR(72) INIT('||                         55700003
*        QUOTE('')||'B),/*USER DATA ARRAY @Y30LB02*/')SKIP;             55750003
*        ANS('       3  DEFR50 CHAR(2),/*RESERVED AND MUST '||          55800003
*        'ALWAYS BE ZERO/BLANK @Y30LB02*/')SKIP;                        55850003
*        ANS('       3  DEFACSEC CHAR(1),/*ACCESSI'||                   55900003
*        'BILITY(SECURITY) @Y30LB02*/')SKIP;                            55950003
*        ANS('       3  DEFR55 CHAR(26),/*RESERVED AREA '||             56000003
*        'MUST BE ZERO/BLANK @Y30LB02*/')SKIP;                          56050003
*        ANS('       3  DEFOWNID CHAR(14),/*OWNER'||                    56100003
*        ' IDENTIFICATION @Y30LB02*/')SKIP;                             56150003
*        ANS('       3  DEFR60 CHAR(28),/*RESERVED AREA '||             56200003
*        'MUST BE ZERO/BLANK @Y30LB02*/')SKIP;                          56250003
*        ANS('       3  DEFTLAB CHAR(1),/*T LABEL '||                   56300003
*        'STANDARD VERSION @Y30LB02*/')SKIP;                            56350003
*        ANS('    2  DEFVVEXT  FIXED(31)INIT(0);/*MSVC '||              56400003
*        'EXTENSION AREA @Y30LB02*/')SKIP;                              56450003
*        ANS('RFY DEFVR1 RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;        56500003
*        ANS('DEFVR1= ADDR(DEFVLEN); /*R1 PTR'||                        56550003
*        ' TO REQUEST BLOCK @Y30LB02*/')SKIP;                           56600003
*        DEFVTEST = DEFVTEST + 1;    /*INCREM STD FORM CTR   @Y30LB02*/ 56650003
*     END;                           /*                      @Y30LB02*/ 56700003
*/*                                                          @Y30LB02*/ 56750003
*/*   COMMON PROCESSING FOR EXECUTE AND STANDARDS FORMS      @Y30LB02*/ 56800003
*/*                                                          @Y30LB02*/ 56850003
*COMPROC:                                                               56900003
*        ANS('DEFVLEN= '||QUOTE(DEFVLN)||'X;/*'||                       56950003
*        'LENGTH-DEFINE REQUEST BLOCK @Y30LB02*/')SKIP;                 57000003
*        ANS('DEFVOPCD= '||QUOTE(DEFVCD)||'X;/*'||                      57050003
*        'DEFINE VOL OPCODE @Y30LB02*/')SKIP;                           57100003
*/*                                                          @Y30LB02*/ 57150003
*   IF FLAGS ¬= '' THEN     /*FLAGS SPECIFIED                @Y30LB02*/ 57200003
*/*                                                          @Y30LB02*/ 57250003
*        ANS('DEFVFLG= ' ||FLAGS||';/*VALUE OF FLAGS'||                 57300003
*        ' @Y30LB02*/')SKIP;                                            57350003
*/*                                                          @Y30LB02*/ 57400003
*   IF LIBID ¬= '' THEN    /*LIBID SPECIFIED?                @Y30LB02*/ 57450003
*        ANS('DEFVLIB= '||LIBID||';/*VALUE OF LIBID   @Y30LB02*/')SKIP; 57500003
*/*                                                          @Y30LB02*/ 57550003
*   IF VOLID ¬= '' THEN    /*VOLID SPECIFIED?                @Y30LB02*/ 57600003
*        ANS('DEFVOLD= '||VOLID||';/*VOLUME ID @Y30LB02*/')SKIP;        57650003
*/*                                                          @Y30LB02*/ 57700003
*   IF VOLFLG ¬= '' THEN   /*VOLUME FLAGS SPECIFIED?         @Y30LB02*/ 57750003
*          ANS('DEFVVFLG= '||VOLFLG||';/*VOLUME FLAGS @Y30LB02*/')SKIP; 57800003
*/*                                                          @Y30LB02*/ 57850003
*   IF NVOLID ¬= '' THEN   /*NEW VOLID SPECIFIED?            @Y30LB02*/ 57900003
*        ANS('DEFVNVOL= '||NVOLID||';/*NEW VOLUME ID'||                 57950003
*        ' @Y30LB02*/')SKIP;                                            58000003
*/*                                                          @Y30LB02*/ 58050003
*   IF CSN1 ¬= '' THEN     /*CSN1 SPECIFIED?                 @Y30LB02*/ 58100003
*        ANS('DEFVCSN1= '||CSN1||';/*CARTRIDGE SEQUENCE'||              58150003
*        ' ONE @Y30LB02*/')SKIP;                                        58200003
*/*                                                          @Y30LB02*/ 58250003
*   IF CSN2 ¬= '' THEN     /*CART SEQ NUM 2 SPECIFIED        @Y30LB02*/ 58300003
*        ANS('DEFVCSN2= ' ||CSN2||';/*CARTRIDGE SEQUENCE'||             58350003
*        ' TWO @Y30LB02*/')SKIP;                                        58400003
*/*                                                          @Y30LB02*/ 58450003
*   IF ECB ¬= '' THEN      /*ECB SPECIFIED?                  @Y30LB02*/ 58500003
*        ANS('DEFVECB=ADDR' ||ECB|| ';/*ADDRESS '||                     58550003
*        'OF ECB @Y30LB02*/')SKIP;                                      58600003
*/*                                                          @Y30LB02*/ 58650003
*   IF USDATA ¬= '' THEN   /*USER DATA SPECIFIED?            @Y30LB02*/ 58700003
*        ANS('DEFVDATA='||USDATA||' ;/*MOVE 72 BYTES OF'||              58750003
*        'CARTRIDGE DATA TO THE REQ BLK @Y30LB02*/')SKIP;               58800003
*/*                                                          @Y30LB02*/ 58850003
*   IF VVICEXT ¬= '' THEN    /*MSVC EXTENSION SPECIFIED?     @Y30LB02*/ 58900003
*        ANS('DEFVVEXT=ADDR'||VVICEXT||';/*ADDRESS '||                  58950003
*        'OF MSVC EXTENSION @Y30LB02*/')SKIP;                           59000003
*/*                                                          @Y30LB02*/ 59050003
*/*      INVOKE SVC AND END PROCESSING                       @Y30LB02*/ 59100003
*/*                                                          @Y30LB02*/ 59150003
*QUIT:   ANS('SVC (126);/*INVOKE THE MSSC-SVC  @Y30LB02*/')SKIP;        59200003
*        ANS('RFY  DEFVR1 UNRSTD;/*UNRESTRICT REG 1 @Y30LB02 */')SKIP;  59250003
*/*                                                          @Y30LB02*/ 59300003
*FINISH:                                                                59350003
*        RETURN CODE(RETCODE);                             /*@Y30LB02*/ 59400003
*        %END;                                             /*@Y30LB02*/ 59450003
./  ADD  SSI=42090045,NAME=ICBMCRT
* %/*  START OF SPECIFICATIONS****                             @Y30LB02 00050003
.*                                                             @Y30LB02 00100003
.*01   MODULE-NAME = ICBMCRT                                   @Y30LB02 00150003
.*                                                             @Y30LB02 00200003
.*01   DESCRIPTIVE-NAME = MOVE CARTRIDGE MACRO                 @Y30LB02 00250003
.*                                                             @Y30LB02 00300003
.*01   COPYRIGHT = NONE                                        @Y30LB02 00350003
.*                                                             @Y30LB02 00400003
.*01   STATUS = OS/VS1 RELEASE 4, OS/VS2 RELEASE 3             @Y30LB02 00450003
.*                                                             @Y30LB02 00500003
.*01   FUNCTION = REQUEST VIRTUAL VOLUMES BE MOVED FROM        @Y30LB02 00550003
.*                THE MSF                                      @Y30LB02 00600003
.*                                                             @Y30LB02 00650003
.*01   NOTES = AS FOLLOWS:                                     @Y30LB02 00700003
.*                                                             @Y30LB02 00750003
.*02     CODE = MACRO IS BILINGUALLY CODED                     @Y30LB02 00800003
.*                                                             @Y30LB02 00850003
.*02     RESTRICTIONS = THE FOLLOWING PREFIXES SHOULD BE       @Y30LB02 00900003
.*                      AVOIDED IN THE USER'S INVOCATION:      @Y30LB02 00950003
.*                      ICB AND MC                             @Y30LB02 01000003
.*                                                             @Y30LB02 01050003
.*02     REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF REGISTERS@Y30LB02 01100003
.*                              BY MACROS: R0,R1,R14, AND R15  @Y30LB02 01150003
.*                                                             @Y30LB02 01200003
.*01   MODULE-TYPE = MACRO                                     @Y30LB02 01250003
.*                                                             @Y30LB02 01300003
.*02     PROCESSOR = PLS2 AND ASSEMBLER                        @Y30LB02 01350003
.*                                                             @Y30LB02 01450003
.*02     ATTRIBUTES = REUSABLE                                 @Y30LB02 01500003
.*                                                             @Y30LB02 01550003
.*02     ENTRY-POINT = ICBMCRT                                 @Y30LB02 01600003
.*                                                             @Y30LB02 01650003
.*02     PURPOSE = A MOVE CARTRIDGE REQUEST WILL BE            @Y30LB02 01700003
.*       ISSUED WHENEVER THE CALLER WANTS TO REMOVE A          @Y30LB02 01750003
.*       CARTRIDGE OR A VIRTUAL VOLUME FROM THE MSF.           @Y30LB02 01800003
.*                                                             @Y30LB02 01850003
.*02     LINKAGE = SVC 126                                     @Y30LB02 01900003
.*                                                             @Y30LB02 01950003
.*01  INPUT                                                    @Y30LB02 02000003
.*                                                             @Y30LB02 02050003
.* MACRO SYNTAX                                                @Y30LB02 02100003
.*                                                             @Y30LB02 02150003
.*   LIST FORM                                                 @Y30LB02 02200003
.*                                                             @Y30LB02 02250003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 02300003
.*                                                             @Y30LB02 02350003
.*ICBMCRT  MF=L - (BAL)          MF=(L,MAP) - BAL              @Y30LB02 02400003
.*         MF(L,NAME/(R))-PLS    MF(L,NAME/(R),ATTR)-PLS       @Y30LB02 02450003
.*                                                             @Y30LB02 02500003
.*                                                             @Y30LB02 02550003
.*   STANDARD FORM                                             @Y30LB02 02600003
.*                                                             @Y30LB02 02650003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 02700003
.*                                                             @Y30LB02 02750003
.*ICBMCRT  FLAGS=ADDR/(R)        LIBID=ADDR/(R)                @Y30LB02 02800003
.*         ECB=ADDR/(R)          CSN=ADDR/(R)                  @Y30LB02 02850003
.*                               VVICEXT=ADDR/(R)              @Y30LB02 02900003
.*                                                             @Y30LB02 02950003
.* EXECUTE FORM                                                @Y30LB02 03000003
.*                                                             @Y30LB02 03050003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03100003
.*                                                             @Y30LB02 03150003
.*ICBMCRT  MF(E,NAME/(R))       MF(E,NAME/(R),COMPLETE)-PLS    @Y30LB02 03200003
.*                              ECB=ADDR/(R)                   @Y30LB02 03250003
.*                              CSN=ADDR/(R)                   @Y30LB02 03300003
.*                              FLAGS=ADDR/(R)                 @Y30LB02 03350003
.*                              LIBID=ADDR/(R)                 @Y30LB02 03400003
.*                              VVICEXT=ADDR/(R)               @Y30LB02 03450003
.*                                                             @Y30LB02 03500003
.*   KEYWORD PARAMETERS:                                       @Y30LB02 03550003
.*                                                             @Y30LB02 03600003
.*   MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE         @Y30LB02 03650003
.*          MACRO FORMAT AND MAY GIVE THE ADDRESS OR           @Y30LB02 03700003
.*          ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK      @Y30LB02 03750003
.*          IS STORED.                                         @Y30LB02 03800003
.*                                                             @Y30LB02 03850003
.*          L - LIST FORM: THE EXPANSION OF THE L-FORM         @Y30LB02 03900003
.*              MACRO WILL RESULT IN A REQUEST BLOCK WITH      @Y30LB02 03950003
.*              THE ONLY NON-ZERO FIELDS BEING THE OPCODE      @Y30LB02 04000003
.*              AND LENGTH FIELDS.                             @Y30LB02 04050003
.*                                                             @Y30LB02 04100003
.*          (1) 'MAP' - IF MAP IS SPECIFIED WITH THE           @Y30LB02 04150003
.*              ASSEMBLER MACRO CALL A DSECT EQUIVALENT TO     @Y30LB02 04200003
.*              A MAPPING MACRO IS PRODUCED.                   @Y30LB02 04250003
.*                                                             @Y30LB02 04300003
.*          (2) NAME - THE MACRO INVOKER MUST SPECIFY A        @Y30LB02 04350003
.*              NAME FOR HIS STRUCTURE WHEN INVOKING THE       @Y30LB02 04400003
.*              PLS LIST FORM.                                 @Y30LB02 04450003
.*                                                             @Y30LB02 04500003
.*          (3) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS       @Y30LB02 04550003
.*              ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION    @Y30LB02 04600003
.*              IN AN UNINITIALIZED REQUEST BLOCK.  ATTRI-     @Y30LB02 04650003
.*              BUTE EXAMPLE:                                  @Y30LB02 04700003
.*                                                             @Y30LB02 04750003
.*              CHAR, FIXED, STATIC LOCAL, NONLOCAL,           @Y30LB02 04800003
.*              BASED(*), ETC.                                 @Y30LB02 04850003
.*                                                             @Y30LB02 04900003
.*       NULL - STANDARD FORM: THE EXPANSION OF THIS FORM      @Y30LB02 04950003
.*              CONSISTS OF A REQUEST BLOCK, A LINKAGE         @Y30LB02 05000003
.*              INSTRUCTION, AND, POSSIBLY, PARAMETER          @Y30LB02 05050003
.*              BINDING INSTRUCTION.                           @Y30LB02 05100003
.*                                                             @Y30LB02 05150003
.*          E - EXECUTABLE FORM: THE EXPANSION OF THIS FORM    @Y30LB02 05200003
.*              CONSISTS OF A LINKAGE INSTRUCTION AND          @Y30LB02 05250003
.*              POSSIBLY, PARAMETER BINDING INSTRUCTIONS.      @Y30LB02 05300003
.*                                                             @Y30LB02 05350003
.*              SUB-PARAMETERS                                 @Y30LB02 05400003
.*                                                             @Y30LB02 05450003
.*              (1)  AN E MUST BE SPECIFIED IN THE FIRST       @Y30LB02 05500003
.*                   SUB-PARAMETER POSITION.  THIS INDICATES   @Y30LB02 05550003
.*                   THAT THE MACRO IS IN EXECUTABLE FORM.     @Y30LB02 05600003
.*                                                             @Y30LB02 05650003
.*              (2)  A NAME OR A REGISTER MUST BE SPECIFIED    @Y30LB02 05700003
.*                   IN THE SECOND SUB-PARAMETER.              @Y30LB02 05750003
.*                                                             @Y30LB02 05800003
.*              (3)  'COMPLETE' - COMPLETE WILL CAUSE THE      @Y30LB02 05850003
.*                   MACRO TO ZERO OUT THE REQUEST BLOCK.      @Y30LB02 05900003
.*                   AFTER ZEROING THE REQUEST BLOCK THE       @Y30LB02 05950003
.*                   FUNCTION OPCODE AND LENGTH ARE PLACED     @Y30LB02 06000003
.*                   IN THE REQUEST BLOCK.                     @Y30LB02 06050003
.*                                                             @Y30LB02 06100003
.*                                                             @Y30LB02 06150003
.*   FLAGS - FLAGS:  THE FIELD WHICH INDICATES THE FUNC-       @Y30LB02 06200003
.*           TION(S) TO BE PERFORMED.  THE FORMAT OF THE       @Y30LB02 06250003
.*           FLAGS FIELD IS SHOWN BELOW:                       @Y30LB02 06300003
.*                                                             @Y30LB02 06350003
.*   ---------------------------------                         @Y30LB02 06400003
.*   | 0 | 0 | X | X | 0 | 0 | 0 | 0 |                         @Y30LB02 06450003
.*   ---------------------------------                         @Y30LB02 06500003
.*   BITS 0-1-------       |RESERVED - MUST BE SET TO ZERO|    @Y30LB02 06550003
.*                                                             @Y30LB02 06600003
.*   BIT 2----------'1'B   MOVE TRANSIENT VOLUME               @Y30LB02 06650003
.*                  '0'B   NO FUNCTION REQUESTED (DEFAULT)     @Y30LB02 06700003
.*                                                             @Y30LB02 06750003
.*   BIT 3----------'1'B   MOVE SCRATCH                        @Y30LB02 06800003
.*                  '0'B   NO FUNCTION REQUESTED (DEFAULT)     @Y30LB02 06850003
.*                                                             @Y30LB02 06900003
.*   BITS 4-5 -------      |UNUSED AND MUST BE SET TO ZERO|    @Y30LB02 06950003
.*                                                             @Y30LB02 07000003
.*   BITS 6-7 -------      |RESERVED - MUST BE SET TO ZERO|    @Y30LB02 07050003
.*                                                             @Y30LB02 07100003
.*   NOTE:   BITS 0-7 ARE 'MUTUALLY EXCLUSIVE'                 @Y30LB02 07150003
.*                                                             @Y30LB02 07200003
.*     TRANSIENT VOLUME:                                       @Y30LB02 07250003
.*         THE SOURCE VOLUME (MAY BE 2 CARTRIDGES) IS          @Y30LB02 07300003
.*         SPECIFIED BY SEQUENCE 1 CSN.                        @Y30LB02 07350003
.*         THE KEYWORD PARAMETER CSN MUST BE SPECIFIED.        @Y30LB02 07400003
.*                                                             @Y30LB02 07450003
.*         MOVE TRANSIENT VOLUME REQUIRED PARMS:  FLAGS,       @Y30LB02 07500003
.*         ECB AND CSN (CSN1).                                 @Y30LB02 07550003
.*                                                             @Y30LB02 07600003
.*     MOVE SCRATCH:                                           @Y30LB02 07650003
.*         MOVE ANY AVAILABLE SCRATCH CARTRIDGE WITHIN A       @Y30LB02 07700003
.*         SPECIFIED MSF.  USE OF THE CARTRIDGE SERIAL         @Y30LB02 07750003
.*         NUMBER IS OPTIONAL.  IF CARTRIDGE SERIAL NUMBER     @Y30LB02 07800003
.*         IS SPECIFIED WITH THE MOVE SCRATCH OPTION, CART-    @Y30LB02 07850003
.*         RIDGE SPECIFIED WITH 'CSN' IS MOVED PROVIDED IT     @Y30LB02 07900003
.*         IS AVAILABLE.  THE LIBID PARAMETER MUST BE          @Y30LB02 07950003
.*         SPECIFIED.                                          @Y30LB02 08000003
.*                                                             @Y30LB02 08050003
.*         MOVE SCRATCH REQUIRED PARMS:  FLAGS, ECB AND        @Y30LB02 08100003
.*         LIBID.  OPTIONAL PARMS: CSN                         @Y30LB02 08150003
.*                                                             @Y30LB02 08200003
.*   LIBID - THE FIELD WHICH IDENTIFIES THE MSF SUB-           @Y30LB02 08250003
.*         SYSTEM FROM WHICH TO REMOVE A SCRATCH CART-         @Y30LB02 08300003
.*         RIDGE.  THE FORMAT OF THE LIBID FIELD IS SHOWN      @Y30LB02 08350003
.*         BELOW:                                              @Y30LB02 08400003
.*                                                             @Y30LB02 08450003
.*   ----------------------------------                        @Y30LB02 08500003
.*   | 0 | 0 | 0 | 0 | 0 | 0 | X | X |                         @Y30LB02 08550003
.*   ----------------------------------                        @Y30LB02 08600003
.*   BITS 0-5 --------     |IGNORED - MUST BE SET TO ZERO|     @Y30LB02 08650003
.*                                                             @Y30LB02 08700003
.*   BITS 6-7 --------     MAY BE SET TO BINARY 0,1,2, OR 3    @Y30LB02 08750003
.*                                                             @Y30LB02 08800003
.*   CSN - IDENTIFIES A SPECIFIC CARTRIDGE, BY SERIAL          @Y30LB02 08850003
.*   NUMBER, TO BE REMOVED FROM THE MSF.  FOR MOVE             @Y30LB02 08900003
.*   TRANSIENT VOLUME, CSN IDENTIFIES THE SEQUENCE 1 CART-     @Y30LB02 08950003
.*   RIDGE OF THE VOLUME; THE ENTIRE VOLUME WILL BE MOVED      @Y30LB02 09000003
.*   FROM THE MSF.                                             @Y30LB02 09050003
.*                                                             @Y30LB02 09100003
.*   ECB - THE NAME OF THE EVENT CONTROL BLOCK (ECB) TO BE     @Y30LB02 09150003
.*   POSTED WHEN THE REQUEST IS COMPLETE. THE USER MUST ALSO   @Y30LB02 09200003
.*   DECLARE A MINIMUM 50 BYTE CONTIGUOUS AREA TO CONTAIN      @Y30LB02 09250003
.*   THE MESSAGE GENERATED BY THE MESSAGE TASK.  (THE ECB      @Y30LB02 09300003
.*   AND APPENDED DATA AREA MUST BE IN COMMON CORE IN VS/2).   @Y30LB02 09350003
.*   THE ECB IS POSTED WITH ONE OF THE FOLLOWING POST CODES:   @Y30LB02 09400003
.*   70, 71, 72, 73, 74, ETC..  THE POST CODE WILL BE PLACED   @Y30LB02 09450003
.*   IN THE LOW-ORDER BYTE OF THE ECB - '7F'X INDICATES        @Y30LB02 09500003
.*   SUCCESSFUL COMPLETION.  THE MSC DATA WILL BE MOVED TO     @Y30LB02 09550003
.*   CORE LOCATION ADDRESS(ECB)+4.  THE ECB PARAMETER MUST BE  @Y30LB02 09600003
.*   SPECIFIED AND THE ECB AREA MUST BE CLEARED (SET TO        @Y30LB02 09650003
.*   BINARY 0) BEFORE INVOKING THE MACRO.                      @Y30LB02 09700003
.*                                                             @Y30LB02 09750003
.*   VVICEXT - THE NAME OF AN AREA WHICH CONTAINS THE MSVC     @Y30LB02 09800003
.*   EXTENSION (VVICEXT) MAPPING.  IF THIS PARAMETER IS NOT    @Y30LB02 09850003
.*   SPECIFIED, THE CORRESPONDING POSITION IN THE REQUEST      @Y30LB02 09900003
.*   BLOCK MUST BE SET TO ZERO.  THE MAPPING MACRO FOR THE     @Y30LB02 09950003
.*   MSVC EXTENSION TO MOVE CARTRIDGE IS IEZMCRTE.             @Y30LB02 10000003
.*                                                             @Y30LB02 10050003
.*01  EXIT-NORMAL = VALID INVOCATION                           @Y30LB02 10100003
.*                                                             @Y30LB02 10150003
.*02     CONDITION = RETURN CODE = 0                           @Y30LB02 10200003
.*                                                             @Y30LB02 10250003
.*02     OUTPUT = IN-LINE PLS/BAL STATEMENTS THAT PERFORM      @Y30LB02 10300003
.*                THE REQUESTED FUNCTION                       @Y30LB02 10350003
.*                                                             @Y30LB02 10400003
.*01  EXIT-ERROR = INVALID INVOCATION                          @Y30LB02 10450003
.*02     CONDITION = RETURN CODE = 12                          @Y30LB02 10500003
.*                                                             @Y30LB02 10550003
.*02     OUTPUT = ERROR MESSAGE AS A COMMENT AT POINT OF       @Y30LB02 10600003
.*                INVOCATION                                   @Y30LB02 10650003
.*                                                             @Y30LB02 10700003
.*01  EXTERNAL REFERENCES = NONE                               @Y30LB02 10750003
.*                                                             @Y30LB02 10800003
.*01  TABLES = NONE                                            @Y30LB02 10850003
.*                                                             @Y30LB02 10900003
.*01  MESSAGES = AS FOLLOWS:                                   @Y30LB02 10950003
.*      ICB602I:  A NAME FOR THE REQUEST BLOCK MUST BE         @Y30LB02 11000003
.*                SPECIFIED IN MF(2)                           @Y30LB02 11050003
.*      ICB604I:  WARNING-ONLY THE MF PARAMETER IS VALID       @Y30LB02 11100003
.*                FOR LIST FORM                                @Y30LB02 11150003
.*      ICB605I:  ECB MUST BE SPECIFIED FOR STANDARD           @Y30LB02 11200003
.*                FORM MACRO                                   @Y30LB02 11250003
.*      ICB607I:  FLAGS MUST BE SPECIFIED FOR STANDARD         @Y30LB02 11300003
.*                FORM MACRO                                   @Y30LB02 11350003
.*      ICB612I:  MF(2) MUST CONTAIN REQ BLK NAME              @Y30LB02 11400003
.*                IF EXEC MACRO FORM REQUESTED                 @Y30LB02 11450003
.*      ICB615I:  INVALID MF PARAMETER SPECIFIED,              @Y30LB02 11500003
.*                MUST BE L, E, OR NULL                        @Y30LB02 11550003
.*                                                             @Y30LB02 11600003
.*01  CONTROL-BLOCKS = NONE                                    @Y30LB02 11650003
.*                                                             @Y30LB02 11700003
.*01  INNER MACROS = NONE                                      @Y30LB02 11750003
.*                                                             @Y30LB02 11800003
.*01  SYSTEM MACRO =IHBINNRA                                   @Y30LB02 11850003
.*                                                             @Y30LB02 11900003
.*01  CHANGE-ACTIVITY = S/D X04AC02 AND Y30LB02                @Y30LB02 11950003
.*                                                             @Y30LB02 12000003
.**** END OF SPECIFICATIONS ***                                @Y30LB02 12050003
         MACRO                                                 @Y30LB02 12100003
&SYMBOL  ICBMCRT &MF=,&FLAGS=,&LIBID=,&CSN=,&ECB=,                     *12150003
               &VVICEXT=                                       @Y30LB02 12200003
         LCLB  &ERSW               CONDITION SWITCHES          @Y30LB02 12250003
         LCLC  &MCRT               MOVE MACRO INSTR INDX       @Y30LB02 12300003
&MCRT    SETC  'M'.'&SYSNDX'       ASSIGN CHARACTER VALUE      @Y30LB02 12350003
.*                                                             @Y30LB02 12400003
.*       DETERMINATION OF DESIRED MACRO FORM                   @Y30LB02 12450003
.*                                                             @Y30LB02 12500003
         AIF   ('&MF(1)' NE 'L').EFORM      LIST FORM?         @Y30LB02 12550003
.*                                                             @Y30LB02 12600003
.*       PROCESSING OF LIST MACRO FORM                         @Y30LB02 12650003
.*                                                             @Y30LB02 12700003
.*       THE FOLLOWING CODE CHECKS FOR ILLEGAL PARAMETERS      @Y30LB02 12750003
.*       SPECIFIED FOR THE LIST FORM AND PUTS OUT MOVE         @Y30LB02 12800003
.*       CARTRIDGE REQUEST BLOCK.                              @Y30LB02 12850003
.*                                                             @Y30LB02 12900003
         AIF   ('&FLAGS' NE '' OR  '&LIBID'                            *12950003
               NE '' OR '&CSN' NE '' OR '&ECB' NE '').WARN     @Y30LB02 13000003
         AGO   .LIST                                           @Y30LB02 13050003
.WARN    MNOTE 4,'  ICB604I - WARNING-ONLY THE MF PARAMETER '  @Y30LB02 13100003
         MNOTE 4,'  IS VALID FOR LIST FORM '                   @Y30LB02 13150003
.*                                                             @Y30LB02 13200003
.LIST    ANOP                                                  @Y30LB02 13250003
         AIF   ('&MF(2)' EQ 'MAP').LISTDS   DSECT REQUESTED?   @Y30LB02 13300003
*  MACMEAN  MSSC MOVE CARTRIDGE MACRO--INITIALIZED LIST FORM   @Y30LB02 13350003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 13400003
&SYMBOL  DS    0F                                              @Y30LB02 13450003
MCRTLEN  DC    F'48'               LENGTH OF MOVE REQ          @Y30LB02 13500003
MCRTOPCD DC    XL1'0E'             MOVE CARTRIDGE OPCODE       @Y30LB02 13550003
MCRTRES1 DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02 13600003
MCRTFLAG DC    XL1'00'             1-BYTE FLAGS AREA           @Y30LB02 13650003
MCRTLIBR DC    XL1'00'             1-BYTE LIBID AREA           @Y30LB02 13700003
MCRTRES2 DC    XL8'000000000000'   8-BYTE RESERVED AREA        @Y30LB02 13750003
MCRTRES3 DC    XL8'000000000000'   8-BYTE RESERVE AREA         @Y30LB02 13800003
MCRTCSN  DC    XL12'000000000000'  12-BYTE AREA FOR CSN        @Y30LB02 13850003
MCRTRES4 DC    XL2'0000'           2-BYTE RESERVED AREA        @Y30LB02 13900003
MCRTASID DC    XL2'0000'           2-BYTE ASID AREA            @Y30LB02 13950003
MCRTECB  DC    XL4'00000000'       4-BYTE AREA FOR ECB         @Y30LB02 14000003
MCRTVEXT DC    XL4'00000000'       4-BYTE VVICEXT AREA         @Y30LB02 14050003
         AGO   .FINISH                                         @Y30LB02 14100003
.*                                                             @Y30LB02 14150003
.*                                                             @Y30LB02 14200003
.LISTDS  ANOP                                                  @Y30LB02 14250003
*  MACMEAN MSSC MOVE CARTRIDGE MACRO--UNINITIALIZED LIST FORM  @Y30LB02 14300003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 14350003
ICBMCRT  DSECT                                                 @Y30LB02 14400003
MCRTLEN  DS    F                   LENGTH OF REQ 30 HEX        @Y30LB02 14450003
MCRTOPCD DS    XL1                 MOVE OPCODE 0E HEX          @Y30LB02 14500003
MCRTRES1 DS    XL1                 1-BYTE RESERVED AREA        @Y30LB02 14550003
MCRTFLAG DS    XL1                 1-BYTE FLAGS AREA           @Y30LB02 14600003
MCRTLIBR DS    XL1                 1-BYTE LIBID AREA           @Y30LB02 14650003
MCRTRES2 DS    XL8                 8-BYTE RESERVED AREA        @Y30LB02 14700003
MCRTRES3 DS    XL8                 8-BYTE RESERVE AREA         @Y30LB02 14750003
MCRTCSN  DS    CL12                12-BYTE AREA FOR CSN        @Y30LB02 14800003
MCRTRES4 DS    XL2                 2-BYTE RESERVED AREA        @Y30LB02 14850003
MCRTASID DS    XL2                 2-BYTE ASID AREA            @Y30LB02 14900003
MCRTECB  DS    A                   4-BYTES FOR ECB ADDR        @Y30LB02 14950003
MCRTVEXT DS    A                   4-BYTE VVICEXT ADDR         @Y30LB02 15000003
         AGO   .FINISH                                         @Y30LB02 15050003
.*       PROCESSING FOR THE EXECUTE MACRO FORM                 @Y30LB02 15100003
.*                                                             @Y30LB02 15150003
.EFORM   AIF   ('&MF(1)' NE 'E').SFORM      IS IT EFORM?       @Y30LB02 15200003
         AIF   ('&MF(2)' EQ '').EFOUT       IS 2ND PARM NULL?  @Y30LB02 15250003
.*                                                             @Y30LB02 15300003
*  MACMEAN  MSSC MOVE CARTRIDGE MACRO--EXECUTE FORM            @Y30LB02 15350003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 15400003
&SYMBOL  IHBINNRA &MF(2)           LD ADDR OF REQUEST BLK      @Y30LB02 15450003
.*                                 USING IHBINNRA MACRO        @Y30LB02 15500003
         LA    0,48                LENGTH OF MOVE REQ          @Y30LB02 15550003
         ST    0,0(1)              STORE LENGTH                @Y30LB02 15600003
         MVI   4(1),X'0E'          STORE MOVE OPCODE           @Y30LB02 15650003
         AGO   .CKSW2                                          @Y30LB02 15700003
.*                                                             @Y30LB02 15750003
.EFOUT   ANOP                                                  @Y30LB02 15800003
         MNOTE 12,'  ICB612I - MF(2) MUST CONTAIN REQ BLK '    @Y30LB02 15850003
         MNOTE 12,'  NAME IF EXEC MACRO FORM REQUESTED '       @Y30LB02 15900003
&ERSW    SETB  1              SET CONDITION SWITCH TO 1        @Y30LB02 15950003
.*                                                             @Y30LB02 16000003
.CKSW2   AIF   (&ERSW).FINISH      IF ERROR - END PROCESSING   @Y30LB02 16050003
         AGO   .CPROC     NAME OK - CONTINUE PROCESS           @Y30LB02 16100003
.*                                                             @Y30LB02 16150003
.*       PROCESSING OF 'STANDARD' MACRO FORM                   @Y30LB02 16200003
.*                                                             @Y30LB02 16250003
.SFORM   AIF   ('&MF(1)' NE '').INCFM       STANDARD FORM?     @Y30LB02 16300003
         AIF   ('&FLAGS' NE '').CKECB       FLAGS SPECIFIED?   @Y30LB02 16350003
&ERSW    SETB  1                   ERROR CONDITION NOTED       @Y30LB02 16400003
         MNOTE 12,'  ICB607I - FLAGS MUST BE SPECIFIED'        @Y30LB02 16450003
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02 16500003
         AGO   .CKSW4                                          @Y30LB02 16550003
.CKECB   AIF   ('&ECB' NE '').CKSW4     ECB SPECIFIED?         @Y30LB02 16600003
&ERSW    SETB  1                  ERROR CONDITION NOTED        @Y30LB02 16650003
         MNOTE 12,'  ICB605I - ECB MUST BE SPECIFIED FOR'      @Y30LB02 16700003
         MNOTE 12,'  STANDARD FORM MACRO '                     @Y30LB02 16750003
         AGO   .CKSW4                                          @Y30LB02 16800003
.*                                                             @Y30LB02 16850003
.INCFM   ANOP                                                  @Y30LB02 16900003
&ERSW    SETB  1                   ERROR CONDITION NOTED       @Y30LB02 16950003
         MNOTE 12,'  ICB615I - INVALID MF PARAMETER '          @Y30LB02 17000003
         MNOTE 12,'  SPECIFIED, MUST BE L, E, OR NULL'         @Y30LB02 17050003
.*                                                             @Y30LB02 17100003
.CKSW4   AIF   (&ERSW).FINISH      IF ERROR-END PROCESSING     @Y30LB02 17150003
*  MACMEAN  MSSC MOVE CARTRIDGE MACRO--STANDARD FORM           @Y30LB02 17200003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 17250003
         CNOP 0,4                                              @Y30LB02 17300003
&SYMBOL  BAL   1,&MCRT             BRANCH AROUND REQ BLK       @Y30LB02 17350003
MCRTLEN  DC    A(&MCRT-*)          LENGTH OF MOVE REQ          @Y30LB02 17400003
MCRTOPCD DC    XL1'0E'             MOVE CARTRIDGE OPCODE       @Y30LB02 17450003
MCRTRES1 DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02 17500003
MCRTFLAG DC    XL1'00'             1-BYTE FLAGS AREA           @Y30LB02 17550003
MCRTLIBR DC    XL1'00'             1-BYTE LIBID AREA           @Y30LB02 17600003
MCRTRES2 DC    XL8'000000000000'   8-BYTE RESERVED AREA        @Y30LB02 17650003
MCRTRES3 DC    XL8'000000000000'   8-BYTE RESERVED AREA        @Y30LB02 17700003
MCRTCSN  DC    XL12'000000000000'  12-BYTE AREA FOR CSN        @Y30LB02 17750003
MCRTRES4 DC    XL2'0000'           2-BYTE RESERVED AREA        @Y30LB02 17800003
MCRTASID DC    XL2'0000'           2-BYTE ASID AREA            @Y30LB02 17850003
MCRTECB  DC    XL4'00000000'       4-BYTE AREA FOR ECB         @Y30LB02 17900003
MCRTVEXT DC    XL4'00000000'       4-BYTE VVICEXT AREA         @Y30LB02 17950003
&MCRT    EQU   *                                               @Y30LB02 18000003
.*                                                             @Y30LB02 18050003
.*       PROCESS REQUEST BLOCK FOR STANDARD AND EXECUTE FORMS  @Y30LB02 18100003
.*                                                             @Y30LB02 18150003
.CPROC   AIF   ('&FLAGS' EQ '').LIBID       FLAGS SPECIFIED?   @Y30LB02 18200003
         AIF   ('&FLAGS'(1,1) EQ '(').FLREG FLAGS IN REG-FORM? @Y30LB02 18250003
         MVC   6(1,1),&FLAGS       PUT FLAGS IN REQUEST BLK    @Y30LB02 18300003
         AGO   .LIBID              BRANCH                      @Y30LB02 18350003
.*                                                             @Y30LB02 18400003
.FLREG   ANOP                                                  @Y30LB02 18450003
         MVC   6(1,1),0(&FLAGS(1)) REG-FORM -PLACE FLAGS REQBLK@Y30LB02 18500003
.*                                                             @Y30LB02 18550003
.LIBID   AIF   ('&LIBID' EQ '').CSN       LIBID SPECIFIED?     @Y30LB02 18600003
         AIF   ('&LIBID'(1,1) EQ '(').LIBREG  REG-FORM?        @Y30LB02 18650003
         MVC   7(1,1),&LIBID       ADDR-FM, PUT LIBID IN REQBLK@Y30LB02 18700003
         AGO   .CSN                BRANCH                      @Y30LB02 18750003
.*                                                             @Y30LB02 18800003
.LIBREG  ANOP                                                  @Y30LB02 18850003
         MVC   7(1,1),0(&LIBID(1)) REG-FORM-PUT LIBID IN REQBLK@Y30LB02 18900003
.*                                                             @Y30LB02 18950003
.CSN     AIF   ('&CSN' EQ '').CKECB2         CSN SPECIFIED?    @Y30LB02 19000003
         AIF   ('&CSN'(1,1) EQ '(').CSNREG   CSN REG-FORM?     @Y30LB02 19050003
         MVC   24(12,1),&CSN       PUT CSN IN REQ BLOCK        @Y30LB02 19100003
         AGO   .CKECB2             BRANCH                      @Y30LB02 19150003
.*                                                             @Y30LB02 19200003
.CSNREG  ANOP                                                  @Y30LB02 19250003
         MVC   24(12,1),0(&CSN(1)) REG FORM-CSN IN BLOCK       @Y30LB02 19300003
.*                                                             @Y30LB02 19350003
.CKECB2  AIF   ('&ECB' EQ '').CKVEXT   ECB SPECIFIED           @Y30LB02 19400003
         AIF   ('&ECB'(1,1) EQ '(').ECBREG  ECB REG-FORM?      @Y30LB02 19450003
         LA    15,&ECB             ADDR-FORM                   @Y30LB02 19500003
         ST    15,40(1)            STORE ADDR IN REQBLK        @Y30LB02 19550003
         AGO   .CKVEXT                                         @Y30LB02 19600003
.ECBREG  ANOP                                                  @Y30LB02 19650003
         ST    &ECB,40(1)          REG-FORM,STORE ECB          @Y30LB02 19700003
.CKVEXT  AIF   ('&VVICEXT' EQ '').INVOKE  VVICEXT SPECIFIED    @Y30LB02 19750003
         AIF   ('&VVICEXT'(1,1) EQ '(').VVIREG   REG-FORM?     @Y30LB02 19800003
         LA    15,&VVICEXT         ADDR-FORM                   @Y30LB02 19850003
         ST    15,44(1)            STORE ADDR IN REQBLK        @Y30LB02 19900003
         AGO   .INVOKE                                         @Y30LB02 19950003
.VVIREG  ANOP                                                  @Y30LB02 20000003
         ST    &VVICEXT,44(1)      REG-FORM                    @Y30LB02 20050003
.INVOKE  ANOP                                                  @Y30LB02 20100003
         SVC   126                 INVOKE THE SVC              @Y30LB02 20150003
.FINISH  MEND                                                           20200003
**/                                                                     20250003
*   ICBMCRT:  MACRO KEYS(MF,FLAGS,LIBID,CSN,ECB,                        20300003
*                    VVICEXT);                             /*@Y30LB02*/ 20350003
*/*                                                          @Y30LB02*/ 20400003
*/*                          EXTERNAL DECLARES               @Y30LB02*/ 20450003
*/*                                                          @Y30LB02*/ 20500003
*   DCL  TESTMCRT  FIXED EXT;    /*CTR FOR S-FORM INVOC      @Y30LB02*/ 20550003
*   DCL  MCTESTR1  FIXED EXT;    /*TEST FOR REG1 INVOC       @Y30LB02*/ 20600003
*/*                                                          @Y30LB02*/ 20650003
*/*                          INTERNAL DECLARES               @Y30LB02*/ 20700003
*/*                                                          @Y30LB02*/ 20750003
*   DCL  ERSW     FIXED;     /*ERROR CONDITION SWITCH        @Y30LB02*/ 20800003
*   DCL  MCRTCD   CHAR;      /*MOVE CARTRIDGE OPCODE         @Y30LB02*/ 20850003
*   DCL  RETCODE  FIXED;     /*RETURN CODE                   @Y30LB02*/ 20900003
*   DCL  MCRTLN   CHAR;      /*LENGTH OF MOVE CART REQBLK    @Y30LB02*/ 20950003
*   DCL  CTR      FIXED;     /*CTR FOR LIST PARAMETERS       @Y30LB02*/ 21000003
*        CTR = 0;            /*INITIALIZE PARMAMETER CTR     @Y30LB02*/ 21050003
*        MCRTCD = '0E';      /*INITIALIZE OPCODE             @Y30LB02*/ 21100003
*        MCRTLN = '30';      /*INITIALIZE LENGTH             @Y30LB02*/ 21150003
*        RETCODE = 0;        /*INITIALIZE RETURN CODE        @Y30LB02*/ 21200003
*        ERSW = 0;           /*INITIALIZE ERROR SWITCH       @Y30LB02*/ 21250003
*/*                                                          @Y30LB02*/ 21300003
*/*      CHECK FOR VALID MACRO FORMAT - E, L, OR NULL        @Y30LB02*/ 21350003
*/*********************************************************  @Y30LB02*/ 21400003
*/*                                                          @Y30LB02*/ 21450003
*     IF MCTESTR1=0 THEN     /*REG 1 DECLARED?               @Y30LB02*/ 21500003
*        DO;                 /*NO,DECLARE IT                 @Y30LB02*/ 21550003
*             ANS('DCL MCR1 REG(1) PTR ;/*ADDRESS OF '||                21600003
*             'REQUEST BLOCK @Y30LB02*/')SKIP;                          21650003
*             MCTESTR1=MCTESTR1+1; /*INCREM REG DCLD CTR     @Y30LB02*/ 21700003
*        END;                      /*                        @Y30LB02*/ 21750003
*/*                                                          @Y30LB02*/ 21800003
*   IF MF(1) ¬= 'L' THEN           /*LIST FORM?              @Y30LB02*/ 21850003
*     GO TO EFORM;                 /*NO,CK FOR EXECUTE FM    @Y30LB02*/ 21900003
*   IF MF(2) = '' THEN             /*LIST NAME SPECIFIED?    @Y30LB02*/ 21950003
*     DO;                          /*PRINT ERROR MESSAGE     @Y30LB02*/ 22000003
*        ERSW = 1;                 /*SET ERROR SWITCH        @Y30LB02*/ 22050003
*        RETCODE = 12;             /*SET ERROR RETURN TO 12  @Y30LB02*/ 22100003
*        ANS MSG('  ICB602I - A NAME FOR THE '||                        22150003
*        'REQUEST BLOCK MUST BE SPECIFIED IN MF(2)')SKIP;  /*@Y30LB02*/ 22200003
*        GO TO FINISH;             /*BRANCH TO END PROCES    @Y30LB02*/ 22250003
*     END;                         /*                        @Y30LB02*/ 22300003
*/*********************************************************  @Y30LB02*/ 22350003
*/*      THE FOLLOWING CODE WILL CHECK FOR ILLEGAL           @Y30LB02*/ 22400003
*/*      PARAMETERS SPECIFIED WITH LIST FORM AND             @Y30LB02*/ 22450003
*/*      PUT OUT MOVE CARTRIDGE REQUEST BLOCK                @Y30LB02*/ 22500003
*/*********************************************************  @Y30LB02*/ 22550003
*   ELSE                           /*                        @Y30LB02*/ 22600003
*     DO;                          /*CHECK LIST PARAMETERS   @Y30LB02*/ 22650003
*/*                                                          @Y30LB02*/ 22700003
*        IF FLAGS ¬= '' THEN    /*FLAGS SPECIFIED?           @Y30LB02*/ 22750003
*             CTR = CTR + 1;    /*YES,INCREMENT COUNTER      @Y30LB02*/ 22800003
*        IF LIBID ¬= '' THEN    /*MSF IDENTIFICATION?        @Y30LB02*/ 22850003
*             CTR = CTR + 1;    /*YES,INCREMENT COUNTER      @Y30LB02*/ 22900003
*        IF CSN ¬= ''  THEN     /*CART SERIAL SPECIFIED?     @Y30LB02*/ 22950003
*             CTR = CTR +1;     /*YES,INCREMENT COUNTER      @Y30LB02*/ 23000003
*        IF ECB ¬= '' THEN      /*ECB SPECIFIED?             @Y30LB02*/ 23050003
*             CTR = CTR +1;     /*YES,INCREMENT COUNTER      @Y30LB02*/ 23100003
*        IF VVICEXT ¬= '' THEN  /*MSVC EXTENSION SPECD?      @Y30LB02*/ 23150003
*             CTR = CTR +1;     /*YES,INCREMENT COUNTER      @Y30LB02*/ 23200003
*        IF CTR  > 0  THEN      /*COUNTER GREATER THAN 0?    @Y30LB02*/ 23250003
*          DO;                  /*YES,WARN USER              @Y30LB02*/ 23300003
*             RETCODE = 4;      /*SET RETURN CODE TO 4       @Y30LB02*/ 23350003
*             ANS MSG('  ICB604I - WARNING-ONLY'||                      23400003
*                 ' THE MF PARAMETER IS VALID FOR'||                    23450003
*                 ' LIST FORM ')SKIP;                      /*@Y30LB02*/ 23500003
*          END;                 /*                           @Y30LB02*/ 23550003
*     END;                      /*                           @Y30LB02*/ 23600003
*     IF MF(3) ¬= '' THEN       /*PLS ATTRIBUTE SPECIFIED    @Y30LB02*/ 23650003
*        GO TO ATTRLST;         /*BRCH,PROCESS ATTRIBUTE     @Y30LB02*/ 23700003
*     ELSE                      /*PUT OUT INITIALIZED LIST   @Y30LB02*/ 23750003
*       DO;                     /*OUTPUT DECLARES            @Y30LB02*/ 23800003
*        ANS('/*******************************************'||           23850003
*            '************** @Y30LB02*/')SKIP;                          23900003
*        ANS('/*   MACMEAN  MSSC MOVE CARTRIDGE MACRO     '||           23950003
*            '               @Y30LB02*/')SKIP;                          24000003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           24050003
*            '               @Y30LB02*/')SKIP;                          24100003
*        ANS('/*THIS IS THE INITIALIZED LIST FORM         '||           24150003
*            '               @Y30LB02*/')SKIP;                          24200003
*        ANS('/*******************************************'||           24250003
*            '************** @Y30LB02*/')SKIP;                          24300003
*        ANS('DCL 1 '||MF(2)||' STATIC LOCAL,'||                        24350003
*        '/*MOVE CARTRIDGE REQUEST BLOCK @Y30LB02*/')SKIP;              24400003
*        ANS('    2  MCRTLEN  FIXED(31)INIT('||QUOTE('30')||            24450003
*        'X),/*LENG OF MOVE CARTRIDGE REQUEST BLK @Y30LB02*/')SKIP;     24500003
*        ANS('    2  MCRTOPCD  FIXED(8)INIT('||QUOTE('0E')||            24550003
*        'X), /*MOVE CARTRIDGE OPCODE @Y30LB02*/')SKIP;                 24600003
*        ANS('    2  MCRTRES1 CHAR(1)INIT('||QUOTE                      24650003
*        ('00')||'X),/*RESERVED AND ZERO @Y30LB02*/')SKIP;              24700003
*        ANS('    2  MCRTFLG   BIT(8)INIT('||QUOTE                      24750003
*        ('00000000')||'B),/*ONE BYTE FLAGS AREA @Y30LB02*/')SKIP;      24800003
*        ANS('       3  *      BIT(2),/*RESERVED AND'||                 24850003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               24900003
*        ANS('       3  MCRTTRAN  BIT(1),/*SOURCE WITH'||               24950003
*        ' TRANSIENT CSN1 SPECD @Y30LB02*/')SKIP;                       25000003
*        ANS('       3  MCRTSCT  BIT(1),/*SOURCE WITH'||                25050003
*        ' SCRATCH ATTRIBUTE @Y30LB02*/')SKIP;                          25100003
*        ANS('       3  *       BIT(4),/*RESERVED AND'||                25150003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               25200003
*        ANS('    2  MCRTLIB  BIT(8)INIT('||QUOTE                       25250003
*        ('00000000')||'B), /*ONE BYTE-LIBID @Y30LB02*/')SKIP;          25300003
*        ANS('       3  *       BIT(5),/*RESERVED AND'||                25350003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               25400003
*        ANS('       3  MCRTLD    BIT(2),/*BINARY NUMBER'||             25450003
*        ' ZERO TO THREE @Y30LB02*/')SKIP;                              25500003
*        ANS('    2  MCRTRES2 CHAR(8) ,/*RESERVED @Y30LB02*/')SKIP;     25550003
*        ANS('     3  *(8) CHAR(1)INIT((8)'||QUOTE                      25600003
*        ('00')||'X),/*INIT RESERVED AREA TO ZERO @Y30LB02*/')SKIP;     25650003
*        ANS('    2  MCRTRES3 CHAR(8) ,/*RESERVED @Y30LB02*/')SKIP;     25700003
*        ANS('     3  *(8) CHAR(1)INIT((8)'||QUOTE                      25750003
*        ('00')||'X),/*INIT RES AREA TO ZERO @Y30LB02*/')SKIP;          25800003
*        ANS('    2  MCRTCSN  CHAR(12) ,/*CART SER NO @Y30LB02*/')SKIP; 25850003
*        ANS('     3  *(12) CHAR(1)INIT((12)'||QUOTE                    25900003
*        ('00')||'X),/*INIT CSN AREA TO ZERO @Y30LB02*/')SKIP;          25950003
*        ANS('     2  MCRTRES4 CHAR(2) INIT('||                         26000003
*        QUOTE('0000')||'X),/*RESERVED @Y30LB02*/')SKIP;                26050003
*        ANS('     2  MCRTASID CHAR(2) INIT('||                         26100003
*        QUOTE('0000')||'X),/*ASID FIELD @Y30LB02*/')SKIP;              26150003
*        ANS('     2  MCRTECB  FIXED(31)INIT(0),/*EVENT '||             26200003
*        'CONTROL BLOCK ADDRESS @Y30LB02*/')SKIP;                       26250003
*        ANS('     2  MCRTVEXT  FIXED(31)INIT(0);/*MSVC '||             26300003
*        'EXTENSION AREA @Y30LB02*/')SKIP;                              26350003
*        GO TO FINISH;   /*BRANCH TO END                     @Y30LB02*/ 26400003
*      END;              /*                                  @Y30LB02*/ 26450003
*/*                                                          @Y30LB02*/ 26500003
*ATTRLST:                                                               26550003
*        ANS('/*******************************************'||           26600003
*            '************** @Y30LB02*/')SKIP;                          26650003
*        ANS('/*   MACMEAN  MSSC MOVE CARTRIDGE MACRO     '||           26700003
*            '               @Y30LB02*/')SKIP;                          26750003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           26800003
*            '               @Y30LB02*/')SKIP;                          26850003
*        ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||           26900003
*            '               @Y30LB02*/')SKIP;                          26950003
*        ANS('/*******************************************'||           27000003
*            '************** @Y30LB02*/')SKIP;                          27050003
*        ANS('DCL 1 '||MF(2)||' '||MF(3)||','||                         27100003
*        ' /*MOVE CARTRIDGE REQUEST BLOCK @Y30LB02*/')SKIP;             27150003
*        ANS('    2  MCRTLEN  FIXED(31),/*LENGTH OF'||                  27200003
*        ' MOVE CARTRIDGE REQUEST BLK = 30 HEX @Y30LB02*/')SKIP;        27250003
*        ANS('    2  MCRTOPCD  FIXED(8)'||                              27300003
*        ' , /*MOVE CARTRIDGE OPCODE = 0E HEX @Y30LB02*/')SKIP;         27350003
*        ANS('    2  MCRTRES1  CHAR(1),/*RESERVED'||                    27400003
*        ' AND ZERO @Y30LB02*/')SKIP;                                   27450003
*        ANS('    2  MCRTFLG   BIT(8),'||                               27500003
*        '/*ONE BYTE FLAGS AREA @Y30LB02*/')SKIP;                       27550003
*        ANS('       3  *      BIT(2),/*RESERVED AND'||                 27600003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               27650003
*        ANS('       3  MCRTTRAN  BIT(1),/*SOURCE WITH'||               27700003
*        ' TRANSIENT CSN1 SPECD @Y30LB02*/')SKIP;                       27750003
*        ANS('       3  MCRTSCT  BIT(1),/*SOURCE WITH'||                27800003
*        ' SCRATCH ATTRIBUTE @Y30LB02*/')SKIP;                          27850003
*        ANS('       3  *       BIT(4),/*RESERVED AND'||                27900003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               27950003
*        ANS('    2  MCRTLIB  BIT(8) ,/*BYTE-LIBID @Y30LB02*/')SKIP;    28000003
*        ANS('       3  *       BIT(6),/*RESERVED AND'||                28050003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               28100003
*        ANS('       3  MCRTLD    BIT(2),/*BINARY NUMBER'||             28150003
*        ' ZERO TO THREE @Y30LB02*/')SKIP;                              28200003
*        ANS('    2  MCRTRES2 CHAR(8) ,/*8-BYTE RES  @Y30LB02*/')SKIP;  28250003
*        ANS('    2  MCRTRES3 CHAR(8) ,/*8-BYTE RES @Y30LB02*/')SKIP;   28300003
*        ANS('    2  MCRTCSN  CHAR(12) ,/*CART SER NO @Y30LB02*/')SKIP; 28350003
*        ANS('    2  MCRTRES4 CHAR(2) ,/*RESERVED @Y30LB02*/')SKIP;     28400003
*        ANS('    2  MCRTASID CHAR(2) ,/*ASID AREA @Y30LB02*/')SKIP;    28450003
*        ANS('    2  MCRTECB  FIXED(31),/*EVENT '||                     28500003
*        'CONTROL BLOCK ADDRESS @Y30LB02*/')SKIP;                       28550003
*        ANS('    2  MCRTVEXT  FIXED(31);/*MSVC '||                     28600003
*        'EXTENSION AREA @Y30LB02*/')SKIP;                              28650003
*        GO TO FINISH;    /*BRANCH TO END                    @Y30LB02*/ 28700003
*/*                                                          @Y30LB02*/ 28750003
*/*   PROCESSING THE EXECUTE MACRO FORM                      @Y30LB02*/ 28800003
*/*                                                          @Y30LB02*/ 28850003
*EFORM:                                                                 28900003
*   IF MF(1) ¬= 'E' THEN     /*EXECUTE FORM SPECIFIED?       @Y30LB02*/ 28950003
*     GO TO SFORM;           /*BRANCH TO CK FOR STAND        @Y30LB02*/ 29000003
*   IF MF(2) = '' THEN       /*IS LIST NAME SPECIFIED?       @Y30LB02*/ 29050003
*     DO;                    /*PRINT ERROR MESSAGE           @Y30LB02*/ 29100003
*        ERSW = 1;           /*SET SET ERROR SWITCH TO 1     @Y30LB02*/ 29150003
*        RETCODE = 12;       /*SET RETURN CODE TO 12         @Y30LB02*/ 29200003
*        ANS MSG('  ICB612I - MF(2) MUST CONTAIN '||                    29250003
*        'REQ BLK NAME IF EXEC MACRO FORM REQUESTED')SKIP; /*@Y30LB02*/ 29300003
*        GO TO CKSW;         /*BRANCH                        @Y30LB02*/ 29350003
*     END;                   /*                              @Y30LB02*/ 29400003
*/*                                                          @Y30LB02*/ 29450003
*   ELSE                    /*PROCESS EXECUTE FORM           @Y30LB02*/ 29500003
*        ANS('/*******************************************'||           29550003
*            '************* @Y30LB02*/')SKIP;                           29600003
*        ANS('/*    MACMEAN  MSSC MOVE CARTRIDGE MACRO    '||           29650003
*            '              @Y30LB02*/')SKIP;                           29700003
*        ANS('/*VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00   '||           29750003
*            '              @Y30LB02*/')SKIP;                           29800003
*        ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '||           29850003
*            '              @Y30LB02*/')SKIP;                           29900003
*        ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '||           29950003
*            '              @Y30LB02*/')SKIP;                           30000003
*        ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'||           30050003
*            '              @Y30LB02*/')SKIP;                           30100003
*        ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '||           30150003
*            '              @Y30LB02*/')SKIP;                           30200003
*        ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '||           30250003
*            '              @Y30LB02*/')SKIP;                           30300003
*        ANS('/*******************************************'||           30350003
*            '************* @Y30LB02*/')SKIP;                           30400003
*    IF MF(3) = 'COMPLETE' THEN  /*COMPLETE SPECIFIED?       @Y30LB02*/ 30450003
*      DO;                       /*                          @Y30LB02*/ 30500003
*          ANS(' '||MF(2)||'='||MF(2)||'&&'||MF(2)||';'||  /*@Y30LB02*/ 30550003
*          '/*ZERO OUT REQUEST BLOCK @Y30LB02*/')SKIP;                  30600003
*      END;                      /*                          @Y30LB02*/ 30650003
*/*                                                          @Y30LB02*/ 30700003
*        ANS('RFY(MCR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;          30750003
*        ANS('MCR1= ADDR('||MF(2)||'); /*R1 PTR'||                      30800003
*        '  TO REQUEST BLOCK @Y30LB02*/')SKIP;                          30850003
*        ANS('MCRTLEN= '||QUOTE(MCRTLN)||'X; '||           /*@Y30LB02*/ 30900003
*        '/*LENGTH-MOVE REQUEST @Y30LB02*/')SKIP;                       30950003
*        ANS('MCRTOPCD= '||QUOTE(MCRTCD)||'X;'||           /*@Y30LB02*/ 31000003
*        '/*MOVE CARTRIDGE OPCODE @Y30LB02*/')SKIP;                     31050003
*/*                                                          @Y30LB02*/ 31100003
*CKSW:                                                                  31150003
*   IF ERSW = 1 THEN           /*ERROR SWITCH SET?           @Y30LB02*/ 31200003
*     GO TO FINISH;            /*YES,END PROCESSING          @Y30LB02*/ 31250003
*   ELSE                       /*BRCH,CHECK PARAMETERS       @Y30LB02*/ 31300003
*     GO TO COMPROC;           /*BRANCH                      @Y30LB02*/ 31350003
*/*                                                          @Y30LB02*/ 31400003
*SFORM:                                                                 31450003
*   IF MF(1) ¬= '' THEN        /*STANDARD FORM SPECIFIED?    @Y30LB02*/ 31500003
*     DO;                      /*NO,PROCESS ERROR            @Y30LB02*/ 31550003
*        ERSW = 1;             /*SET ERROR SWITCH TO 1       @Y30LB02*/ 31600003
*        RETCODE = 12;         /*SET RETURN CODE TO 12       @Y30LB02*/ 31650003
*        ANS MSG('  ICB615I - INVALID MF PARAMETER '||                  31700003
*             'SPECIFIED, MUST BE L, E, OR NULL')SKIP;     /*@Y30LB02*/ 31750003
*        GO TO CKSW2;         /*BRANCH,CHECK ERROR SWITCH    @Y30LB02*/ 31800003
*     END;                    /*                             @Y30LB02*/ 31850003
*/*                                                          @Y30LB02*/ 31900003
*   IF FLAGS = '' THEN        /*FLAGS SPECIFIED?             @Y30LB02*/ 31950003
*     DO;                     /*NO,PRINT ERROR MESSAGE       @Y30LB02*/ 32000003
*        ERSW = 1;            /*SET ERROR SWITCH             @Y30LB02*/ 32050003
*        RETCODE = 12;        /*SET RETURN CODE TO 12        @Y30LB02*/ 32100003
*        ANS MSG('  ICB607I - FLAGS MUST BE SPECIFIED '||               32150003
*        'FOR STANDARD FORM MACRO')SKIP;                   /*@Y30LB02*/ 32200003
*        GO TO CKSW2;         /*BRANCH TO CK ERROR SWITCH    @Y30LB02*/ 32250003
*     END;                    /*                             @Y30LB02*/ 32300003
*   IF ECB = '' THEN          /*ECB SPECIFIED?               @Y30LB02*/ 32350003
*     DO;                     /*PRINT OUT ERROR MSG          @Y30LB02*/ 32400003
*        ERSW = 1;            /*SET ERROR SWITCH             @Y30LB02*/ 32450003
*        RETCODE = 12;        /*SET RETURN CODE              @Y30LB02*/ 32500003
*        ANS MSG('  ICB605I - ECB MUST BE SPECIFIED '||                 32550003
*        'FOR STANDARD FORM MACRO')SKIP;                   /*@Y30LB02*/ 32600003
*     END;                                                 /*@Y30LB02*/ 32650003
*/*                                                          @Y30LB02*/ 32700003
*CKSW2:                                                                 32750003
*   IF ERSW = 1 THEN         /*ERROR SWITCH SET?             @Y30LB02*/ 32800003
*     GO TO FINISH;          /*YES,BRANCH TO END             @Y30LB02*/ 32850003
*   IF TESTMCRT = 1 THEN     /*STD FORM INVOKED BEFORE?      @Y30LB02*/ 32900003
*     DO;                    /*YES,NO DECLARES               @Y30LB02*/ 32950003
*        ANS('/*******************************************'||           33000003
*           '************** @Y30LB02*/')SKIP;                           33050003
*        ANS('/*    MACMEAN  MSSC MOVE CARTRIDGE MACRO    '||           33100003
*            '               @Y30LB02*/')SKIP;                          33150003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           33200003
*            '               @Y30LB02*/')SKIP;                          33250003
*        ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '||           33300003
*            '               @Y30LB02*/')SKIP;                          33350003
*        ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||           33400003
*            '               @Y30LB02*/')SKIP;                          33450003
*        ANS('/*******************************************'||           33500003
*            '************** @Y30LB02*/')SKIP;                          33550003
*        ANS('RFY(MCR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;          33600003
*        ANS('MCR1=ADDR(MCRTLEN); /*R1 PTR TO REQ @Y30LB02*/')SKIP;     33650003
*        ANS('MCRTLEN= '||QUOTE(MCRTLN)||'X; '||           /*@Y30LB02*/ 33700003
*        '/*LENGTH-MOVE REQUEST @Y30LB02*/')SKIP;                       33750003
*        ANS('MCRTOPCD= '||QUOTE(MCRTCD)||'X;'||           /*@Y30LB02*/ 33800003
*        '/*MOVE CARTRIDGE OPCODE @Y30LB02*/')SKIP;                     33850003
*        GO TO COMPROC;      /*BRCH,CK PARAMETERS            @Y30LB02*/ 33900003
*     END;                   /*                              @Y30LB02*/ 33950003
*/*                                                          @Y30LB02*/ 34000003
*   ELSE                     /*1ST INVOC STD FORM            @Y30LB02*/ 34050003
*     DO;                    /*PUT OUT DECLARES              @Y30LB02*/ 34100003
*        ANS('/*******************************************'||           34150003
*            '************** @Y30LB02*/')SKIP;                          34200003
*        ANS('/*   MACMEAN  MSSC MOVE CARTRIDGE MACRO     '||           34250003
*            '               @Y30LB02*/')SKIP;                          34300003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           34350003
*            '               @Y30LB02*/')SKIP;                          34400003
*        ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||           34450003
*            '               @Y30LB02*/')SKIP;                          34500003
*        ANS('/*******************************************'||           34550003
*            '************** @Y30LB02*/')SKIP;                          34600003
*        ANS('RFY(MCR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;          34650003
*        ANS('MCR1=ADDR(MCRTLEN);/*R1 PTR TO REQBLK @Y30LB02*/')SKIP;   34700003
*        ANS('DCL 1  MCRTSF01  STATIC LOCAL,'||                         34750003
*        '/*MOVE CART REQUEST BLOCK @Y30LB02*/')SKIP;                   34800003
*        ANS('    2  MCRTLEN  FIXED(31)INIT('||QUOTE('30')||            34850003
*        'X),/*LENG OF MOVE CARTRIDGE REQUEST BLK @Y30LB02*/')SKIP;     34900003
*        ANS('    2  MCRTOPCD  FIXED(8)INIT('||QUOTE('0E')||            34950003
*        'X), /*MOVE CARTRIDGE OPCODE @Y30LB02*/')SKIP;                 35000003
*        ANS('    2  MCRTRES1 CHAR(1)INIT('||QUOTE                      35050003
*        ('00')||'X),/*RESERVED AND ZERO @Y30LB02*/')SKIP;              35100003
*        ANS('    2  MCRTFLG   BIT(8)INIT('||QUOTE                      35150003
*        ('00000000')||'B),/*ONE BYTE FLAGS AREA @Y30LB02*/')SKIP;      35200003
*        ANS('       3  *      BIT(2),/*RESERVED AND'||                 35250003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               35300003
*        ANS('       3  MCRTTRAN  BIT(1),/*SOURCE WITH'||               35350003
*        ' TRANSIENT CSN1 SPECD @Y30LB02*/')SKIP;                       35400003
*        ANS('       3  MCRTSCT  BIT(1),/*SOURCE WITH'||                35450003
*        ' SCRATCH ATTRIBUTE @Y30LB02*/')SKIP;                          35500003
*        ANS('       3  *       BIT(4),/*RESERVED AND'||                35550003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               35600003
*        ANS('    2  MCRTLIB  BIT(8)INIT('||QUOTE                       35650003
*        ('00000000')||'B), /*ONE BYTE-LIBID @Y30LB02*/')SKIP;          35700003
*        ANS('       3  *       BIT(5),/*RESERVED AND'||                35750003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               35800003
*        ANS('       3  MCRTLD    BIT(2),/*BINARY NUMBER'||             35850003
*        ' ZERO TO THREE @Y30LB02*/')SKIP;                              35900003
*        ANS('    2  MCRTRES2 CHAR(8) ,/*RESERVED @Y30LB02*/')SKIP;     35950003
*        ANS('     3  *(8) CHAR(1)INIT((8)'||QUOTE                      36000003
*        ('00')||'X),/*INIT RESERVED AREA TO ZERO @Y30LB02*/')SKIP;     36050003
*        ANS('    2  MCRTRES3 CHAR(8) ,/*RESERVED @Y30LB02*/')SKIP;     36100003
*        ANS('     3  *(8) CHAR(1)INIT((8)'||QUOTE                      36150003
*        ('00')||'X),/*INIT RES AREA TO ZERO @Y30LB02*/')SKIP;          36200003
*        ANS('    2  MCRTCSN  CHAR(12) ,/*CART SER NO @Y30LB02*/')SKIP; 36250003
*        ANS('     3  *(12) CHAR(1)INIT((12)'||QUOTE                    36300003
*        ('00')||'X),/*INIT CSN AREA TO ZERO @Y30LB02*/')SKIP;          36350003
*        ANS('    2  MCRTRES4 CHAR(2) INIT('||                          36400003
*        QUOTE('0000')||'X),/*RESERVED @Y30LB02*/')SKIP;                36450003
*        ANS('    2  MCRTASID CHAR(2) INIT('||                          36500003
*        QUOTE('0000')||'X),/*ASID AREA @Y30LB02*/')SKIP;               36550003
*        ANS('    2  MCRTECB  FIXED(31)INIT(0),/*EVENT '||              36600003
*        'CONTROL BLOCK ADDRESS @Y30LB02*/')SKIP;                       36650003
*        ANS('    2  MCRTVEXT  FIXED(31)INIT(0);/*MSVC '||              36700003
*        'EXTENSION AREA @Y30LB02*/')SKIP;                              36750003
*        TESTMCRT = TESTMCRT + 1; /*INCREM STD FORM CTR      @Y30LB02*/ 36800003
*     END;                        /*                         @Y30LB02*/ 36850003
*/*                                                          @Y30LB02*/ 36900003
*/*   COMMON PROCESSING FOR EXECUTE AND STANDARDS FORMS      @Y30LB02*/ 36950003
*/*                                                          @Y30LB02*/ 37000003
*COMPROC:                                                               37050003
*   IF FLAGS ¬= '' THEN       /*FLAGS SPECIFIED?             @Y30LB02*/ 37100003
*/*                                                          @Y30LB02*/ 37150003
*        ANS('MCRTFLG= ' ||FLAGS||';/*VALUE OF FLAGS'||                 37200003
*        ' @Y30LB02*/')SKIP;                                            37250003
*/*                                                          @Y30LB02*/ 37300003
*   IF LIBID ¬= '' THEN      /*MSF ID SPECIFIED?             @Y30LB02*/ 37350003
*        ANS('MCRTLIB= '||LIBID||';/*VALUE OF LIBID @Y30LB02*/')SKIP;   37400003
*/*                                                          @Y30LB02*/ 37450003
*   IF CSN ¬= '' THEN        /*CART SERIAL NUMBER SPCD?      @Y30LB02*/ 37500003
*        ANS('MCRTCSN= '||CSN||';/*CARTRIDGE SERIAL'||                  37550003
*        ' NUMBER @Y30LB02*/')SKIP;                                     37600003
*/*                                                          @Y30LB02*/ 37650003
*   IF ECB ¬= '' THEN        /*ECB SPECIFIED?                @Y30LB02*/ 37700003
*        ANS('MCRTECB=ADDR' ||ECB|| ';/*ADDRESS OF EVENT '||            37750003
*        'CONTROL BLOCK @Y30LB02*/')SKIP;                               37800003
*/*                                                          @Y30LB02*/ 37850003
*   IF VVICEXT ¬= '' THEN    /*MSVC EXTENSION SPECIFIED?     @Y30LB02*/ 37900003
*        ANS('MCRTVEXT=ADDR'||VVICEXT|| ';/*MSVC '||                    37950003
*        'EXTENSION AREA @Y30LB02*/')SKIP;                              38000003
*/*      INVOKE THE SVC AND END PROCESSING                   @Y30LB02*/ 38050003
*/*                                                          @Y30LB02*/ 38100003
*        ANS('SVC (126);/*INVOKE THE SVC @Y30LB02*/')SKIP;              38150003
*        ANS('RFY  MCR1 UNRSTD;/*UNRESTRICT REG 1 @Y30LB02*/')SKIP;     38200003
*/*                                                          @Y30LB02*/ 38250003
*FINISH:                                                                38300003
*        RETURN CODE(RETCODE);                             /*@Y30LB02*/ 38350003
*        %END;                                             /*@Y30LB02*/ 38400003
./  ADD  SSI=42070127,NAME=ICBMESG
* %/*  START OF SPECIFICATIONS****                                      00150003
.*                                                                      00200003
.*01   NAME = ICBMESG                               6/19/74             00250003
.*                                                                      00300003
.*01   DESCRIPTIVE-NAME = MESSAGE PROCESSING MACRO                      00350003
.*                                                                      00400003
.*01   COPYRIGHT = NONE                                                 00450003
.*                                                                      00500003
.*01   STATUS = OS/VS1 RELEASE 4, LEVEL 0                               00550003
.*              OS/VS2 RELEASE 3, LEVEL 0                               00600003
.*                                                                      00650003
.*01   FUNCTION = THIS MACRO EXPANDS INTO AN SVC 126 AND IS TO          00700003
.*                BE USED WITH A REQUEST BLOCK MAPPED BY IEZMESG.       00710003
.*                SOLICITED AND UNSOLICITED MESSAGES ARE PASSED         00720003
.*                TO MSVC IN THIS MANNER AND MSVI DATA SET RECORDS      00730003
.*                ARE UPDATED.                                          00740003
.*                                                                      00850003
.*01   NOTES = AS FOLLOWS:                                              00900003
.*                WHEN SVC 126 IS CALLED, REGISTER 1 SHOULD             00910003
.*                POINT TO IEZMESG PARAMETER LIST.                      00920003
.*                                                                      00950003
.*02     CODE = PLS2                                                    01000003
.*                                                                      01050003
.*02     RESTRICTIONS = NONE                                            01100003
.*                                                                      01250003
.*02     REGISTER-CONVENTIONS = NONE                                    01300003
.*                                                                      01400003
.*01   MODULE-TYPE = EXECUTABLE MACRO                                   01450003
.*                                                                      01500003
.*02     PROCESSOR = PLS2                                               01550003
.*                                                                      01600003
.*02     ATTRIBUTES = REENTERABLE                                       01650003
.*                                                                      01700003
.*02     ENTRY-POINT = NONE                                             01750003
.*                                                                      01800003
.*02     LINKAGE = SVC 126                                              01850003
.*                                                                      01860003
.*01 OPERATION:                                                         01870003
.*          DCL  MESGPTR  POINTER(31)                                   01880003
.*          INCLUDE IEZMESG                                             01882003
.*          MESLNGTH=MESLEN                                             01890003
.*          MESCODE=MESOP                                               01892003
.*          MESGBUF='WHAT EVER DSM MESSAGE IS CALLED'                   01894003
.*          REG1 = ADDR(REQUEST BLOCK)                                  01894403
.*          ? ICBMESG                                                   01896003
.*                                                                      01900003
.*01  INPUT = PLS INVOCATION:   LABEL: ? ICBMESG                        01950003
.*                                                                      02000003
.*01  EXIT-NORMAL = VALID INVOCATION                                    02050003
.*                                                                      02100003
.*02     CONDITION = RETURN CODE = 0                                    02150003
.*                                                                      02200003
.*02     OUTPUT = REQUESTED ORDER GENERATED FOR THE SVC                 02250003
.*                                                                      02300003
.*01  EXIT-ERROR = NONE                                                 02350003
.*                                                                      02400003
.*01  EXTERNAL REFERENCES = NONE                                        02700003
.*                                                                      02750003
.*01  TABLES = NONE                                                     02800003
.*                                                                      02850003
.*01  CONTROL-BLOCKS = NONE                                             02900003
.*                                                                      02950003
.*01  INNER MACROS = NONE                                               03000003
.*                                                                      03050003
.*01  SYSTEM MACRO = NONE                                               03100003
.*                                                                      03150003
.*01  CHANGE-ACTIVITY = NONE                                            03200003
.*                                                                      03250003
.**** END OF SPECIFICATIONS ***/                                        03300003
*    ICBMESG:  MACRO; /*                                     @Y30LB22*/ 03360003
*/*********************************************************/            03402003
*/*      THE FOLLOWING CODE WILL INVOKE SVC 126.          */            03404003
*/*      THE RETURN CODE IS SET AND PROCESSING IS ENDED   */            03406003
*/*********************************************************/            03408003
*        ANS('SVC  (126);/*INVOKE SVC 126*/')SKIP;  /*       @Y30LB22*/ 03408803
*/*                                                        */           03409203
*        RETURN CODE(0);                                   /*@Y30LB22*/ 03409703
*        %END;                                             /*@Y30LB22*/ 03409803
./  ADD  SSI=73570161,NAME=ICBMNTDE
* %/* START OF SPECIFICATIONS****                                       00052000
         MACRO                                                          00058000
&SYMBOL  ICBMNTDE &MF=,&TYPE=,&FLAGS=,&VOLID=,&VUA=,                   *00060000
               &HOSTID=,&MEXTN=,&ECB=,&MJFCB=                           00062000
.************************************************************* @Y30LB02 00066000
.*                                                             @Y30LB02 00100003
.* MODULE-NAME = ICBMNTDE                                      @Y30LB02 00150000
.*                                                             @Y30LB02 00200003
.* DESCRIPTIVE-NAME = MOUNT/DEMOUNT MACRO                      @Y30LB02 00250000
.*                                                             @Y30LB02 00300003
.* COPYRIGHT = NONE                                            @Y30LB02 00350000
.*                                                             @Y30LB02 00400003
.* STATUS = OPERATING SYSTEM = VS/2 REL 3                      @G18MB04 00450000
.*                                                             @Y30LB02 00500003
.* FUNCTION = REQUESTS MOUNT/DEMOUNT OF VIRTUAL VOLUMES        @Y30LB02 00550000
.*            FROM THE MSC USING SVC 126. THE                  @Y30LB02 00620000
.*            MOUNT REQUEST IS ISSUED WHEN A VIRTUAL           @Y30LB02 00630000
.*            VOLUME IS TO BE MADE AVAILABLE FOR               @Y30LB02 00640000
.*            PROCESSING. CONVERSELY, WHEN THE                 @Y30LB02 00642000
.*            VOLUME IS NO LONGER REQUIRED FOR                 @Y30LB02 00644000
.*            PROCESSING, THE DEMOUNT REQUEST IS               @Y30LB02 00646000
.*            ISSUED.                                          @Y30LB02 00650000
.*                                                             @Y30LB02 00660000
.* NOTES =                                                     @Y30LB02 00700000
.*                                                             @Y30LB02 00750003
.*   CODE = MACRO IS BILINGUALLY CODED. IN THE ORIGINAL        @Y30LB02 00800000
.*          VERSION OF THIS MACRO, THE BAL AND PL/S            @ZA28964 00802000
.*          SECTIONS ASSIGNED DIFFERENT LABELS TO THE          @ZA28964 00803000
.*          SAME REQUEST BLOCK STRUCTURE. TO MAINTAIN          @ZA28964 00804000
.*          COMPATABILITY, THE ALTERNATE PL/S LABELS HAVE      @ZA28964 00805000
.*          BEEN ADDED TO THE BAL REQUEST BLOCK DEFINITION     @ZA28964 00806000
.*          AND THE ALTERNATE BAL LABELS ADDED TO THE PL/S     @ZA28964 00807000
.*          REQUEST BLOCK DEFINITION.                          @ZA28964 00808000
.*                                                             @Y30LB02 00810000
.*   DEPENDENCIES = NONE                                       @Y30LB02 00820000
.*                                                             @Y30LB02 00850003
.*   RESTRICTIONS = THE FOLLOWING PREFIXES SHOULD BE           @Y30LB02 00900000
.*                  AVOIDED IN THE INVOKING MODULE:            @Y30LB02 00950000
.*                  ICB, MD, DM AND MNT. SVC 126, WHICH        @Y30LB02 01000000
.*                  IS INVOKED BY THIS MACRO, REQUIRES THAT    @ZA28964 01010000
.*                  THE CALLER BE APF-AUTHORIZED, IN           @ZA28964 01020000
.*                  PROTECTION KEY 0, OR IN SUPERVISOR STATE.  @ZA28964 01030000
.*                                                             @Y30LB02 01050003
.*   REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF REGISTERS    @Y30LB02 01100000
.*                          BY MACROS: R0,R1,R14,AND R15.      @Y30LB02 01150000
.*                                                             @Y30LB02 01200003
.*   PATCH-LABEL = NONE                                        @Y30LB02 01210000
.*                                                             @Y30LB02 01220000
.* MODULE-TYPE = MACRO                                         @Y30LB02 01250000
.*                                                             @Y30LB02 01300003
.*   PROCESSOR = ASSEM                                         @Y30LB02 01350000
.*               PL/S                                          @Y30LB02 01400000
.*                                                             @Y30LB02 01450003
.*   ATTRIBUTES = REUSABLE                                     @Y30LB02 01500000
.*                RE-ENTRANT (EXECUTE FORM)                    @Y30LB02 01550000
.*                                                             @Y30LB02 01600003
.* ENTRY-POINT = ICBMNTDE                                      @Y30LB02 01650000
.*                                                             @Y30LB02 01700003
.*   PURPOSE = SEE FUNCTION                                    @Y30LB02 01750000
.*                                                             @Y30LB02 02000003
.*   LINKAGE = SEE INPUT                                       @Y30LB02 02010000
.*                                                             @Y30LB02 02020000
.* INPUT = CODE THE ICBMNTDE MACRO USING                       @Y30LB02 02050000
.*         ONE OF THE FOLLOWING SYNTAX FORMS (THE              @Y30LB02 02052000
.*         '(R)' REGISTER PARAMETER FORM IS VALID              @Y30LB02 02052400
.*         ONLY IN THE BAL VERSIONS):                          @Y30LB02 02052800
.*                                                             @Y30LB02 02054000
.*   LIST FORMS =                                              @Y30LB02 02056000
.*                                                             @Y30LB02 02057000
.*     BAL - ICBMNTDE MF=(L,MAP),TYPE=MNT|DMNT                 @Y30LB02 02058000
.*                                                             @ZA28964 02059000
.*       REQUIRED PARAMETERS - MF=L,TYPE                       @ZA28964 02060000
.*                                                             @Y30LB02 02061000
.*     PL/S- ICBMNTDE MF(L,NAME,ATTR) TYPE(MNT|DMNT)           @Y30LB02 02062000
.*                                                             @Y30LB02 02063000
.*       REQUIRED PARAMETERS - MF(L,NAME) TYPE                 @Y30LB02 02064000
.*                                                             @Y30LB02 02065000
.*   STANDARD FORMS =                                          @ZDR2048 02066000
.*                                                             @Y30LB02 02067000
.*     BAL - ICBMNTDE TYPE=MNT|DMNT,VOLID=NAME|(R),            @Y30LB02 02068000
.*                    VUA=NAME|(R),ECB=NAME|(R),               @ZDR2048 02069000
.*                    FLAGS=NAME|(R),MEXTN=NAME|(R),           @G18MB04 02070000
.*                    MJFCB=NAME|(R),HOSTID=NAME|(R)           @G18MB04 02071000
.*                                                             @ZA28964 02072000
.*       REQUIRED PARAMETERS - TYPE,VOLID(FOR DMNT ONLY),      @ZA28964 02073000
.*                             VUA(FOR MNT ONLY)               @ZA28964 02074000
.*                                                             @Y30LB02 02075000
.*     PL/S- ICBMNTDE TYPE(MNT|DMNT) VOLID(NAME) VUA(NAME)     @ZDR2048 02076000
.*                    ECB(NAME) FLAGS(NAME) MEXTN(NAME)        @G18MB04 02077000
.*                    MJFCB(NAME) HOSTID(NAME)                 @G18MB04 02078000
.*                                                             @Y30LB02 02079000
.*       REQUIRED PARAMETERS - TYPE, VOLID(FOR DMNT ONLY),     @ZA28964 02080000
.*                             VUA(FOR MNT ONLY)               @ZA28964 02081000
.*                                                             @Y30LB02 02082000
.*   EXECUTE FORMS =                                           @ZDR2048 02083000
.*                                                             @Y30LB02 02084000
.*     BAL - ICBMNTDE MF=(E,NAME|(R)),TYPE=MNT|DMNT,           @ZDR2048 02085000
.*                    VOLID=NAME|(R),VUA=NAME|(R),             @ZDR2048 02086000
.*                    ECB=NAME|(R),FLAGS=NAME|(R),             @ZDR2048 02087000
.*                    MEXTN=NAME|(R),MJFCB=NAME|(R),           @G18MB04 02088000
.*                    HOSTID=NAME|(R)                          @ZDR2048 02089000
.*                                                             @Y30LB02 02090000
.*       REQUIRED PARAMETERS - MF=(E,NAME|(R)), TYPE           @Y30LB02 02091000
.*                                                             @Y30LB02 02092000
.*     PL/S- ICBMNTDE MF(E,NAME,COMPLETE) TYPE(MNT|DMNT)       @ZDR2048 02093000
.*                    VOLID(NAME) VUA(NAME) ECB(NAME)          @ZDR2048 02094000
.*                    FLAGS(NAME) MEXTN(NAME) MJFCB(NAME)      @G18MB04 02095000
.*                    HOSTID(NAME)                             @ZDR2048 02096000
.*                                                             @Y30LB02 02097000
.*       REQUIRED PARAMETERS - MF(E,NAME) TYPE                 @Y30LB02 02098000
.*                                                             @Y30LB02 02099000
.*   KEYWORD PARAMETERS =                                      @Y30LB02 02100000
.*                                                             @Y30LB02 02101000
.*     MF = MACRO FORMAT                                       @Y30LB02 02102000
.*                                                             @Y30LB02 02103000
.*       L = LIST FORM. THE EXPANSION OF THE LIST FORM         @Y30LB02 02104000
.*           WILL DEFINE A REQUEST BLOCK.                      @Y30LB02 02105000
.*                                                             @ZA28964 02106000
.*         NAME = LABEL ASSIGNED TO THE REQUEST BLOCK IN       @Y30LB02 02107000
.*             PL/S (REQUIRED IN PL/S VERSION).                @Y30LB02 02108000
.*                                                             @ZA28964 02109000
.*         MAP = SPECIFIES THAT AN ASSEMBLER VERSION           @Y30LB02 02110000
.*             INVOCATION WILL PRODUCE A MAPPING DSECT         @Y30LB02 02111000
.*             LABELED 'ICBMNTDE' (FOR DEMOUNT) OR             @Y30LB02 02112000
.*             'ICBMNTD1' (FOR MOUNT).                         @Y30LB02 02113000
.*                                                             @ZA28964 02114000
.*         ATTR = A PL/S ATTRIBUTE THAT WILL BE PLACED         @Y30LB02 02115000
.*             IN AN UNINITIALIZED REQUEST BLOCK DEFINITION.   @Y30LB02 02116000
.*             SOME ATTRIBUTE EXAMPLES ARE:                    @Y30LB02 02117000
.*               STATIC LOCAL, NONLOCAL, BASED(*), ETC         @Y30LB02 02118000
.*                                                             @Y30LB02 02119000
.*       NULL = STANDARD FORM IS INVOKED. THE EXPANSION OF     @Y30LB02 02120000
.*           THIS FORM CONSISTS OF A REQUEST BLOCK (ONLY       @Y30LB02 02121000
.*           IN THE FIRST INVOCATION OF THIS FORM IN ANY       @Y30LB02 02122000
.*           MODULE) LABELED ICBMLST OR ICBDMLST IN THE        @ZA28964 02123000
.*           PL/S VERSIONS, A LINKAGE INSTRUCTION AND          @ZA28964 02124000
.*           PARAMETER BINDING INSTRUCTIONS.                   @ZA28964 02125000
.*                                                             @Y30LB02 02126000
.*       E = EXECUTE FORM. THE EXPANSION OF THIS               @Y30LB02 02127000
.*           FORM CONSISTS OF A LINKAGE INSTRUCTION AND        @Y30LB02 02128000
.*           POSSIBLY PARAMETER BINDING INSTRUCTIONS.          @Y30LB02 02129000
.*                                                             @ZA28964 02130000
.*         NAME = LABEL OF THE REQUEST BLOCK TO USE.           @Y30LB02 02131000
.*                                                             @ZA28964 02132000
.*         COMPLETE = CAUSES THE MACRO TO ZERO OUT THE         @Y30LB02 02133000
.*             REQUEST BLOCK AND THEN INSERT THE FUNCTION      @Y30LB02 02134000
.*             OPCODE AND LENGTH INTO THE REQUEST BLOCK.       @Y30LB02 02135000
.*                                                             @Y30LB02 02136000
.*     TYPE = INDICATES WHETHER THE REQUEST IS FOR A           @Y30LB02 02137000
.*         MOUNT (MNT) OR DEMOUNT (DMNT).                      @Y30LB02 02138000
.*                                                             @Y30LB02 02139000
.*     VOLID = LABEL OF THE LOCATION CONTAINING THE VOLUME     @ZA28964 02140000
.*         SERIAL NUMBER OF THE VIRTUAL VOLUME TO              @ZA28964 02141000
.*         BE MOUNTED OR DEMOUNTED. VOLID IS NOT SPECIFIED     @Y30LB02 02142000
.*         WHEN A MOUNT SCRATCH IS REQUESTED, BUT IS           @ZDR2048 02143000
.*         REQUIRED FOR A DEMOUNT.                             @ZDR2048 02144000
.*                                                             @Y30LB02 02145000
.*     ECB = LABEL OF THE EVENT CONTROL BLOCK FOR              @Y30LB02 02146000
.*         NOTIFICATION WHEN THE DEMOUNT PROCESS HAS           @Y30LB02 02147000
.*         COMPLETED. THIS PARAMETER IS REQUIRED ONLY          @Y30LB02 02148000
.*         IF THE DELAYED RESPONSE ATTRIBUTE IS SPECIFIED      @Y30LB02 02149000
.*         WITH A DEMOUNT REQUEST OF A SUBSYSTEM VOLUME.       @Y30LB02 02150000
.*         A POST CODE IN THE RANGE '70'X - '7F'X WILL         @Y30LB02 02151000
.*         BE PLACED IN THE LOW-ORDER BYTE OF THE ECB ON       @Y30LB02 02152000
.*         COMPLETION OF THE DEMOUNT ('7F'X IS THE             @Y30LB02 02153000
.*         SUCCESSFUL COMPLETION CODE). THE ECB SHOULD BE      @Y30LB02 02154000
.*         SET TO BINARY ZERO BEFORE INVOKING THE MACRO.       @Y30LB02 02155000
.*         THIS PARAMETER MAY ONLY BE USED IN DEMOUNT          @ZA28964 02156000
.*         REQUESTS. THE DMNTASID FIELD OF THE REQUEST BLOCK   @ZA28964 02157000
.*         IS USED BY SVC 126 TO RECORD THE ADDRESS            @ZA28964 02158000
.*         SPACE ID OF THE INVOKING MODULE SO THAT THE         @ZA28964 02159000
.*         CORRECT ECB MAY BE LOCATED FOR POSTING.             @ZA28964 02160000
.*                                                             @Y30LB02 02161000
.*     VUA = LABEL OF THE LOCATION CONTAINING THE VIRTUAL      @ZA28964 02162000
.*         UNIT ADDRESS TO WHICH THE VOLUME IS TO BE           @ZA28964 02163000
.*         MOUNTED OR DEMOUNTED. A VUA IS REQUIRED FOR A       @ZA28964 02164000
.*         MOUNT.                                              @ZA28964 02165000
.*                                                             @Y30LB02 02166000
.*     FLAGS = LABEL OF TWO BYTES SPECIFYING THE ATTRIBUTES    @Y30LB02 02167000
.*         TO BE ASSOCIATED WITH THE REQUEST:                  @Y30LB02 02168000
.*                                                             @Y30LB02 02169000
.*       MOUNT REQUESTS =                                      @Y30LB02 02170000
.*                                                             @Y30LB02 02171000
.*         0... ....    RESERVED - ALWAYS ZERO                 @Y30LB02 02172000
.*         .1.. ....    MSVC IS ISSUING THE MOUNT. MSSC WILL   @Y30LB02 02173000
.*                        NOT CALL MSVC TO COMMUNICATE         @ZA28964 02174000
.*                        THE REQUEST.                         @ZA28964 02175000
.*         ..1. ....    MSVC SECONDARY VOLUME REQUEST. USED    @Y30LB02 02176000
.*                        WITH MOUNT SCRATCH TO INDICATE A     @ZA28964 02177000
.*                        NON-SPECIFIC SECONDARY VOLUME        @ZA28964 02178000
.*                        REQUEST FROM EOV. MSVC WILL SELECT   @ZA28964 02179000
.*                        A VOLUME BASED ON THE SECONDARY      @ZA28964 02180000
.*                        VOLUME ALGORITHM INSTEAD OF          @ZA28964 02181000
.*                        SELECTING A VOLUME BASED ON THE      @ZA28964 02182000
.*                        PRIMARY VOLUME ALGORITHM. THIS BIT   @ZA28964 02183000
.*                        IS IGNORED BY THE MSVC IF A MOUNT    @ZA28964 02184000
.*                        SCRATCH IS NOT INDICATED.            @ZA28964 02185000
.*         ...1 ....    MOUNT SCRATCH VOLUME AS SELECTED BY    @Y30LB02 02186000
.*                        THE MSVC.                            @ZA28964 02187000
.*         .... 1...    MOUNT EXTENSION PROVIDED.  SET BY THE  @G18MB04 02188000
.*                        MEXTN KEYWORD TO INDICATE THAT THE   @ZA28964 02189000
.*                        JFCB POINTER IS CONTAINED IN AN      @ZA28964 02190000
.*                        EXTENSION BLOCK RATHER THAN IN THE   @ZA28964 02191000
.*                        MOUNT REQUEST BLOCK.                 @ZA28964 02192000
.*         .... .000    RESERVED - ALWAYS ZERO                 @G18MB04 02193000
.*         0000 0000    SECOND BYTE - RESERVED - ALWAYS ZERO   @Y30LB02 02194000
.*                                                             @Y30LB02 02195000
.*       DEMOUNT REQUESTS =                                    @Y30LB02 02196000
.*                                                             @Y30LB02 02197000
.*         0... ....    RESERVED - ALWAYS ZERO                 @Y30LB02 02198000
.*         .1.. ....    DELAYED RESPONSE. ECB WILL BE POSTED   @Y30LB02 02199000
.*                        WHEN THE DEMOUNT IS COMPLETE.        @ZA28964 02200000
.*         ..1. ....    VUA FIELD HAS BEEN INITIALIZED AND     @ZDR2048 02201000
.*                        IS VALID.                            @ZA28964 02202000
.*         ...0 0000    RESERVED - ALWAYS ZERO                 @ZDR2048 02203000
.*         0000 0000    SECOND BYTE - RESERVED - ALWAYS ZERO   @Y30LB02 02204000
.*                                                             @Y30LB02 02205000
.*     HOSTID = LABEL OF A 5-BYTE FIELD WHICH CONTAINS THE     @Y30LB02 02206000
.*         MANUFACTURER'S CPU IDENTIFICATION. IF SET TO ZERO,  @Y30LB02 02207000
.*         SVC 126 WILL FILL IN THE ID OF THE CALLING CPU.     @ZA28964 02208000
.*                                                             @Y30LB02 02209000
.*     MJFCB = LABEL OF THE FIELD CONTAINING A POINTER         @G18MB04 02210000
.*         TO THE JFCB TO BE USED BY THE MSVC. MUTUALLY        @G18MB04 02211000
.*         EXCLUSIVE WITH THE MEXTN PARAMETER. USED IN         @G18MB04 02212000
.*         NONSPECIFIC MOUNT REQUESTS ONLY.                    @G18MB04 02213000
.*                                                             @Y30LB02 02214000
.*     MEXTN = LABEL OF THE MOUNT PARAMETER LIST               @G18MB04 02215000
.*         EXTENSION IN THE INVOKING PROGRAM. USED FOR         @G18MB04 02216000
.*         NON-SPECIFIC REQUESTS ONLY. MUTUALLY                @G18MB04 02217000
.*         EXCLUSIVE WITH THE MJFCB PARAMETER.                 @G18MB04 02218000
.*                                                             @Y30LB02 02334600
.* OUTPUT =                                                    @Y30LB02 02337900
.*                                                             @Y30LB02 02339000
.*   INLINE PL/S OR BAL STATEMENTS THAT PERFORM THE            @Y30LB02 02340100
.*   REQUESTED FUNCTION AND ERROR MESSAGES AS COMMENTS         @Y30LB02 02341200
.*   AT THE POINT OF INVOCATION.                               @Y30LB02 02342300
.*                                                             @Y30LB02 02343400
.*   SVC126 REQUEST BLOCK (LIST AND STANDARD FORMS):           @Y30LB02 02344500
.*                                                             @Y30LB02 02345600
.*     OFFSETS  LENGTH      BAL LABELS    DESCRIPTION          @ZA28964 02346700
.*     DEC HEX  (BYTES)   MOUNT   DEMOUNT                      @ZA28964 02347700
.*     -------  ------- -------- -------- ------------         @ZA28964 02348700
.*      0  (0)     4    MNTLEN   DMNTLEN  REQ BLK LENGTH       @ZA28964 02349700
.*      4  (4)     1    MNTOPCD  DMOPCODE REQUEST OPCODE       @ZA28964 02350700
.*      5  (5)     1    MNTRES1  DMNTRES1 RESERVED             @ZA28964 02351700
.*      6  (6)     2    MNTFLAGS DMNTFLAG FLAGS                @ZA28964 02352700
.*      8  (8)     6    MNTVOLID DMVOLID  VOLUME ID            @ZA28964 02353700
.*     14  (E)     2    MNTVUA   DMNTASID VUA | ASID           @ZA28964 02354700
.*     16  (10)    5    MNTHOSTD -------- HOST ID (MNT)        @ZA28964 02355700
.*     16  (10)    4    -------- DMNTECB  ECB (DMNT)           @ZA28964 02356700
.*     20  (14)    5    -------- DMHOSTID HOST ID (DMNT)       @ZA28964 02357700
.*     21  (15)    3    MNTRES2  -------- RESERVED AREA        @ZA28964 02358700
.*     24  (18)    4    MNTEXTP  -------- EXTN ADDR            @ZA28964 02359700
.*     24  (18)    4    MNTJFCB  -------- JFCB POINTER         @ZA28964 02360700
.*     25  (19)    1    -------- DMNTRES2 RESERVED             @ZA28964 02361700
.*     26  (1A)    2    -------- DMNTVUA  VUA FOR DMNT         @ZA28964 02362700
.*                                                             @Y30LB02 02378900
.* EXIT-NORMAL = VALID INVOCATION                              @Y30LB02 10850000
.*                                                             @Y30LB02 10900003
.*   CONDITION = RETURN CODE = 0 | 4                           @Y30LB02 10950000
.*                                                             @Y30LB02 10950400
.*   OUTPUT = REQUEST BLOCK AND STATEMENTS GENERATED. IF       @ZA28964 10950800
.*            PL/S WARNING MESSAGES ARE GENERATED (RETCODE=4), @ZA28964 10953800
.*            THEY WILL ONLY APPEAR AS COMMENTS WHEN THE       @ZA28964 10956800
.*            'MSOURCE' PARAMETER IS USED IN THE PL/S          @ZA28964 10959800
.*            COMPILATION.                                     @ZA28964 10962800
.*                                                             @ZA28964 10965800
.*   MESSAGES =                                                @ZA28964 10968800
.*                                                             @ZA28964 10971800
.*     ICB603I - WARNING - ONLY MF AND TYPE PARAMETERS ARE     @Y30LB02 10974800
.*                VALID FOR LIST FORM                          @Y30LB02 10977800
.*     ICB618I - WARNING - ECB PARAMETER VALID ONLY FOR        @ZA28964 10980800
.*                DEMOUNT REQUEST                              @ZA28964 10983800
.*     ICB619I - WARNING - MEXTN/MJFCB PARAMETER VALID         @ZA28964 10986800
.*                ONLY FOR MOUNT REQUEST                       @ZA28964 10989800
.*                                                             @Y30LB02 11000003
.* EXIT-ERROR = INVALID INVOCATION                             @Y30LB02 11200000
.*                                                             @Y30LB02 11250003
.*   CONDITION = RETURN CODE = 12                              @Y30LB02 11300000
.*                                                             @Y30LB02 11350003
.*   OUTPUT = REQUEST BLOCK AND STATEMENTS NOT GENERATED.      @Y30LB02 11360000
.*            PL/S ERROR MESSAGES WILL ONLY APPEAR AS COMMENTS @ZA28964 11362000
.*            WHEN THE 'MSOURCE' PARAMETER IS USED IN THE      @ZA28964 11372000
.*            PL/S COMPILATION.                                @ZA28964 11382000
.*                                                             @Y30LB02 11392000
.*   MESSAGES =                                                @ZA28964 11402000
.*                                                             @ZA28964 11412000
.*     ICB600I - TYPE MUST BE SPECIFIED                        @Y30LB02 11442000
.*     ICB601I - TYPE IS INCORRECTLY SPECIFIED                 @Y30LB02 11444000
.*     ICB602I - A NAME FOR THE REQUEST BLOCK MUST BE          @Y30LB02 11446000
.*                SPECIFIED IN MF(2)                           @Y30LB02 11448000
.*     ICB610I - VOLID MUST BE SPECIFIED FOR                   @Y30LB02 11448400
.*                STANDARD FORM MACRO                          @Y30LB02 11448800
.*     ICB611I - VUA MUST BE SPECIFIED FOR                     @Y30LB02 11449200
.*                STANDARD FORM MACRO                          @Y30LB02 11449600
.*     ICB612I - MF(2) MUST CONTAIN REQ BLK NAME IF            @Y30LB02 11449700
.*                EXECUTE MACRO FORM REQUESTED                 @Y30LB02 11449800
.*     ICB613I - MISSING REQ BLK NAME OR MORE                  @Y30LB02 11456800
.*                THAN 2 SUBPARAMETERS FOR MF                  @Y30LB02 11463800
.*     ICB615I - INVALID MF PARAMETER SPECIFIED, MUST BE       @Y30LB02 11470800
.*                L, E, OR NULL                                @Y30LB02 11477800
.*     ICB621I - MEXTN AND MJFCB MUTUALLY EXCLUSIVE PARAMETERS @G18MB04 11496600
.*                SPECIFIED                                    @G18MB04 11498600
.*                                                             @Y30LB02 11500000
.* EXTERNAL REFERENCES =                                       @Y30LB02 11550000
.*                                                             @ZA28964 11552000
.*   ROUTINES = NONE                                           @ZA28964 11555000
.*                                                             @ZA28964 11558000
.*   DATA-AREAS =                                              @ZA28964 11561000
.*                                                             @ZA28964 11564000
.*     BAL : GLOBAL VARIABLES USED                             @ZA28964 11567000
.*       &MNTTEST : > 0 IF THE MNT STANDARD FORM HAS BEEN      @ZA28964 11570000
.*           INVOKED PREVIOUSLY IN THE CALLING MODULE          @ZA28964 11573000
.*       &DMNTTES : > 0 IF THE DMNT STANDARD FORM HAS BEEN     @ZA28964 11576000
.*           INVOKED PREVIOUSLY IN THE CALLING MODULE          @ZA28964 11579000
.*                                                             @ZA28964 11582000
.*     PL/S: FIXED EXTERNAL DECLARATIONS USED                  @ZA28964 11585000
.*       MDTESTR1: > 0 IF MDREG1 HAS BEEN DECLARED AS REG1     @Y30LB02 11599600
.*           PREVIOUSLY IN THE INVOKING PROCEDURE              @Y30LB02 11599700
.*       MNTTEST: > 0 IF THE MNT STANDARD FORM HAS BEEN        @Y30LB02 11599800
.*           INVOKED PREVIOUSLY IN THE CALLING MODULE          @Y30LB02 11599900
.*       DMTTEST: > 0 IF THE DMNT STANDARD FORM HAS BEEN       @Y30LB02 11616600
.*           INVOKED PREVIOUSLY IN THE CALLING MODULE          @Y30LB02 11626600
.*                                                             @ZA28964 11627000
.*   CONTROL-BLOCKS = NONE                                     @ZA28964 11629000
.*                                                             @Y30LB02 11633300
.* TABLES = NONE                                               @Y30LB02 11650000
.*                                                             @Y30LB02 12600003
.* MACROS =  IHBINNRA (USED IN ASSEM TO LOAD REG 1)            @Y30LB02 12850000
.*                                                             @Y30LB02 12900003
.* CHANGE-ACTIVITY =                                           @Y30LB02 12950000
.*                                                             @ZA28964 12950100
.*   00 74/06/09 DEVELOPMENT                                   @Y30LB02 12960100
.*   01 76/01/19 DMOUNT VUA SUPPORT ADDED                      @ZDR2048 12970100
.*   02 76/02/06 MOUNT LIST EXTENSION SUPPORT ADDED            @G18MB04 12980100
.*   03 76/03/11 CORRECT INVALID HOSTID IN STD FORM            @ZA09524 12990100
.*   04 77/12/15 DOCUMENTATION ADDITIONS/RESTRUCTURE           @ZA28964 13000100
.*               BAL STD FORM MADE SERIALLY REUSABLE           @ZA28964 13010100
.*               PL/S LABELS DECLARED IN BAL VERSION           @ZA28964 13020100
.*               CHG ASSEM LOGIC TO AGREE WITH PL/S            @ZA28964 13030100
.*               PL/S MACRO INVOCATION ECHOED BACK TO CALLER   @ZA28964 13040100
.*               BAL LABELS DECLARED IN PL/S VERSION           @ZA28964 13050100
.*                                                             @Y30LB02 13060100
.************************************************************* @ZA28964 13070100
.*    END OF SPECIFICATIONS ********************************** @Y30LB02 13080100
         GBLB  &MNTTEST            MNT STD FORM FLAG           @ZA28964 13090100
         GBLB  &DMNTTES            DMT STD FORM FLAG           @ZA28964 13100100
         LCLC  &LBL                DEFINE MACRO INSTR INDX     @Y30LB02 13250003
         LCLC  &LBL1               DEFINE MACRO INSTR INDX     @Y30LB02 13300003
&LBL     SETC  'J'.'&SYSNDX'       ASSIGN CHARACTER VALUE      @Y30LB02 13400003
&LBL1    SETC  'K'.'&SYSNDX'       ASSIGN CHARACTER VALUE      @Y30LB02 13450003
.*                                                             @G18MB04 13451003
.*       CHECK FOR MUTUALLY EXCLUSIVE PARAMETERS               @G18MB04 13452003
.*                                                             @G18MB04 13453003
.PARM    AIF   ('&MJFCB' EQ '' OR '&MEXTN' EQ '').TYPE         @G18MB04 13453400
         MNOTE 12,'  ICB621I - MEXTN AND MJFCB MUTUALLY'       @G18MB04 13456003
         MNOTE 12,'  EXCLUSIVE PARAMETERS SPECIFIED.'          @G18MB04 13457003
         AGO   .FINISH                                         @G18MB04 13458000
.*                                                             @Y30LB02 13500003
.*       CHECK FOR VALID TYPE SPECIFICATION                    @Y30LB02 13550003
.*                                                             @Y30LB02 13600003
.TYPE    AIF   ('&TYPE' EQ '').NUL                             @Y30LB02 13650003
         AIF   ('&TYPE' EQ 'MNT' OR '&TYPE' EQ 'DMNT').START   @Y30LB02 13700003
         MNOTE 12,'  ICB601I - TYPE IS INCORRECTLY SPECIFIED'  @Y30LB02 13750003
         AGO   .FINISH                                         @Y30LB02 13800000
.*                                                             @Y30LB02 13850003
.NUL     MNOTE 12,'  ICB600I - TYPE MUST BE SPECIFIED '        @Y30LB02 13950000
         AGO   .FINISH                                         @Y30LB02 14000000
.*                                                             @Y30LB02 14050003
.*       DETERMINATION OF DESIRED MACRO FORM                   @Y30LB02 14100003
.*                                                             @Y30LB02 14150003
.START   AIF   ('&MF(1)' EQ 'L').LFORM      LIST FORM?         @Y30LB02 14200003
         AIF   ('&MF(1)' EQ 'E').EFORM      EXECUTE FORM?      @Y30LB02 14250003
         AIF   ('&MF(1)' EQ '').SFORM       STANDARD FORM?     @Y30LB02 14300003
         MNOTE 12,'  ICB615I - INVALID MF PARAMETER'           @Y30LB02 14350000
         MNOTE 12,'  SPECIFIED, MUST BE L, E, OR NULL.'        @Y30LB02 14400000
         AGO   .FINISH                                         @Y30LB02 14500000
.*                                                             @Y30LB02 14550003
.* *********************************************************** @ZA28964 14600000
.*             L I S T    F O R M                              @Y30LB02 14630000
.* *********************************************************** @ZA28964 14660000
.*                                                             @Y30LB02 14690000
.LFORM   AIF   ('&FLAGS' NE '' OR '&MEXTN' NE '').WARN         @G18MB04 14720000
         AIF   ('&VOLID' NE '' OR '&VUA' NE '').WARN           @Y30LB02 14750000
         AIF   ('&MJFCB' NE '' OR '&HOSTID' NE '').WARN        @ZA28964 14780000
         AIF   ('&ECB' EQ '').LISTOK                           @ZA28964 14810000
.*                                                             @Y30LB02 14840000
.WARN    MNOTE 4,'  ICB603I - WARNING-ONLY MF AND TYPE '       @Y30LB02 14870000
         MNOTE 4,'  PARAMETERS ARE VALID FOR LIST FORM '       @Y30LB02 14900000
.*                                                             @ZA28964 14930000
.LISTOK  AIF   ('&TYPE' EQ 'MNT').MOUNT    MOUNT REQUEST?      @Y30LB02 14960000
         AIF   ('&MF(2)' EQ 'MAP').DMNTDS  DSECT REQUESTED     @Y30LB02 14990000
*  MACMEAN MSSC DEMOUNT MACRO--INITIALIZED LIST FORM           @ZA28964 15020000
*          VERSION - VS/2  REL 3 77/12/15   LEVEL 04           @ZA28964 15050000
&SYMBOL  DS    0F                                              @Y30LB02 15250003
DMNTLEN  DC    F'28'               REQ BLK LENGTH              @Y30LB02 15300000
DMOPCODE DC    XL1'06'             DEMOUNT OPCODE              @Y30LB02 15350000
DMNTRES1 DC    XL1'00'             RESERVED                    @Y30LB02 15400000
DMNTFLAG DC    XL2'0000'           FLAGS                       @Y30LB02 15450000
DMVOLID  DC    XL6'000000000000'   VOLID                       @Y30LB02 15500000
DMNTASID DC    XL2'0000'           ASID                        @Y30LB02 15550000
DMNTECB  DC    XL4'00000000'       ECB                         @Y30LB02 15600000
DMHOSTID DC    XL5'0000000000'     HOST ID                     @Y30LB02 15650000
DMNTRES2 DC    XL1'00'             RESERVED                    @ZDR2048 15700000
DMNTVUA  DC    XL2'0000'           VUA                         @ZDR2048 15701000
DMLEN    EQU   DMNTLEN             COMPATABILITY DEFINITION    @ZA28964 15711000
DMOPCD   EQU   DMOPCODE            COMPATABILITY DEFINITION    @ZA28964 15718000
DMVOL    EQU   DMVOLID             COMPATABILITY DEFINITION    @ZA28964 15725000
DMHOST   EQU   DMHOSTID            COMPATABILITY DEFINITION    @ZA28964 15732000
         AGO   .FINISH                                         @Y30LB02 15750003
.*                                                             @Y30LB02 15800003
.DMNTDS  ANOP                                                  @Y30LB02 15850003
*  MACMEAN  MSSC DEMOUNT MACRO--UNINITIALIZED LIST FORM        @Y30LB02 15900000
*           VERSION - VS/2 REL 3  77/12/15   LEVEL 04          @ZA28964 15950000
ICBMNTDE DSECT                                                 @Y30LB02 16000003
DMNTLEN  DS    F                   REQ BLK LENGTH (1C HEX)     @Y30LB02 16050000
DMOPCODE DS    XL1                 DMNT OPCODE (06 HEX)        @Y30LB02 16100000
DMNTRES1 DS    XL1                 RESERVED                    @Y30LB02 16150000
DMNTFLAG DS    XL2                 FLAGS                       @Y30LB02 16200000
DMVOLID  DS    CL6                 VOLID                       @Y30LB02 16250000
DMNTASID DS    XL2                 ASID                        @Y30LB02 16300000
DMNTECB  DS    A                   ECB                         @ZA28964 16350000
DMHOSTID DS    CL5                 HOST ID                     @Y30LB02 16360000
DMNTRES2 DS    XL1                 RESERVED                    @ZDR2048 16370000
DMNTVUA  DS    XL2                 VUA                         @ZDR2048 16380000
DMLEN    EQU   DMNTLEN             COMPATABILITY DEFINITION    @ZA28964 16390000
DMOPCD   EQU   DMOPCODE            COMPATABILITY DEFINITION    @ZA28964 16400000
DMVOL    EQU   DMVOLID             COMPATABILITY DEFINITION    @ZA28964 16410000
DMHOST   EQU   DMHOSTID            COMPATABILITY DEFINITION    @ZA28964 16420000
         AGO   .FINISH                                         @Y30LB02 16500003
.*                                                             @Y30LB02 16550003
.MOUNT   AIF   ('&MF(2)' EQ 'MAP').MNTDS   DSECT REQUEST       @Y30LB02 16650000
*  MACMEAN  MSSC MOUNT MACRO--INITIALIZED LIST FORM            @Y30LB02 16700000
*           VERSION - VS/2 REL 3  77/12/15   LEVEL 04          @ZA28964 16750000
&SYMBOL  DS    0F                                              @Y30LB02 16800003
MNTLEN   DC    F'28'               REQ BLK LENGTH              @Y30LB02 16850000
MNTOPCD  DC    XL1'08'             MOUNT OPCODE                @Y30LB02 16900000
MNTRES1  DC    XL1'00'             RESERVED                    @Y30LB02 16950000
MNTFLAGS DC    XL2'0000'           FLAGS                       @Y30LB02 17000000
MNTVOLID DC    XL6'000000000000'   VOLID                       @Y30LB02 17050000
MNTVUA   DC    XL2'0000'           VUA                         @Y30LB02 17100000
MNTHOSTD DC    XL5'0000000000'     HOSTID                      @Y30LB02 17150000
MNTRES2  DC    XL3'000000'         RESERVED                    @Y30LB02 17200000
MNTEXTP  DC    XL4'00000000'       MNT LIST EXTN ADDR          @G18MB04 17250000
MNTJFCB  EQU   MNTEXTP             NAME RE-DEF FOR JFCB PTR    @G18MB04 17251003
MDLEN    EQU   MNTLEN              COMPATABILITY REDEFINITION  @ZA28964 17261000
MDOPCD   EQU   MNTOPCD             COMPATABILITY REDEFINITION  @ZA28964 17265000
MDFLG    EQU   MNTFLAGS            COMPATABILITY REDEFINITION  @ZA28964 17269000
MDVOL    EQU   MNTVOLID            COMPATABILITY REDEFINITION  @ZA28964 17273000
MDVUA    EQU   MNTVUA              COMPATABILITY REDEFINITION  @ZA28964 17277000
MDHOST   EQU   MNTHOSTD            COMPATABILITY REDEFINITION  @ZA28964 17281000
MDJFCB   EQU   MNTJFCB             COMPATABILITY REDEFINITION  @ZA28964 17285000
         AGO   .FINISH                                         @Y30LB02 17300003
.*                                                             @Y30LB02 17350003
.MNTDS   ANOP                                                  @Y30LB02 17400003
*  MACMEAN  MSSC MOUNT MACRO--UNINITIALIZED LIST FORM          @Y30LB02 17450000
*           VERSION - VS/2 REL 3  77/12/15   LEVEL 04          @ZA28964 17460000
ICBMNTD1 DSECT                                                 @Y30LB02 17550003
MNTLEN   DS    F                   REQ BLK LENGTH (1C HEX)     @Y30LB02 17600000
MNTOPCD  DS    XL1                 MOUNT OPCODE (08 HEX)       @Y30LB02 17650000
MNTRES1  DS    XL1                 RESERVED                    @Y30LB02 17700000
MNTFLAGS DS    XL2                 FLAGS                       @Y30LB02 17750000
MNTVOLID DS    CL6                 VOLID                       @Y30LB02 17800000
MNTVUA   DS    XL2                 VUA                         @Y30LB02 17850000
MNTHOSTD DS    CL5                 HOSTID                      @Y30LB02 17900000
MNTRES2  DS    XL3                 RESERVED                    @Y30LB02 17950000
MNTEXTP  DS    A                   MNT LIST EXTN ADDR          @ZA28964 18000000
MNTJFCB  EQU   MNTEXTP             NAME RE-DEF FOR JFCB PTR    @G18MB04 18010000
MDLEN    EQU   MNTLEN              COMPATABILITY REDEFINITION  @ZA28964 18020000
MDOPCD   EQU   MNTOPCD             COMPATABILITY REDEFINITION  @ZA28964 18030000
MDFLG    EQU   MNTFLAGS            COMPATABILITY REDEFINITION  @ZA28964 18040000
MDVOL    EQU   MNTVOLID            COMPATABILITY REDEFINITION  @ZA28964 18050000
MDVUA    EQU   MNTVUA              COMPATABILITY REDEFINITION  @ZA28964 18060000
MDHOST   EQU   MNTHOSTD            COMPATABILITY REDEFINITION  @ZA28964 18070000
MDJFCB   EQU   MNTJFCB             COMPATABILITY REDEFINITION  @ZA28964 18080000
         AGO   .FINISH                                         @Y30LB02 18090000
.*                                                             @Y30LB02 18100000
.* *********************************************************** @ZA28964 18110000
.*            E X E C U T E     F O R M                        @Y30LB02 18120000
.* *********************************************************** @ZA28964 18130000
.*                                                             @Y30LB02 18150003
.EFORM   AIF   (N'&MF EQ 2).PARMOK IF 2 SUB-PARAMETERS         @Y30LB02 18250000
         MNOTE 12,'  ICB613I - MISSING REQ BLK NAME '          @Y30LB02 18350003
         MNOTE 12,'  OR MORE THAN 2 SUBPARAMETERS FOR MF '     @Y30LB02 18400003
         AGO   .FINISH                                         @Y30LB02 18500000
.*                                                             @Y30LB02 18550003
.PARMOK  ANOP                                                  @Y30LB02 18600003
*  MACMEAN MSSC MOUNT/DEMOUNT MACRO--EXECUTE FORM              @Y30LB02 18650000
*          VERSION - VS/2 REL 3  77/12/15  LEVEL 04            @ZA28964 18700000
&SYMBOL  IHBINNRA &MF(2)          LD ADDR OF REQUEST BLK       @Y30LB02 18750003
         AIF   ('&TYPE' EQ 'MNT').MNT1           TYPE MOUNT?   @Y30LB02 18850003
         LA    0,X'1C'             LD LENGTH OF DEMOUNT        @Y30LB02 18900003
         ST    0,0(1)              STORE LENGTH IN REQ BLK     @Y30LB02 18950003
         MVI   4(1),X'06'          MOVE OPCODE IN REQ BLK      @Y30LB02 19000003
         AGO   .PROCES                                         @Y30LB02 19050003
.*                                                             @Y30LB02 19100003
.MNT1    ANOP                                                  @Y30LB02 19150003
         LA    0,X'1C'             LENGTH OF MOUNT REQ BLK     @Y30LB02 19200000
         ST    0,0(1)              STORE LENGTH                @Y30LB02 19250003
         MVI   4(1),X'08'          MOVE MNT OPCODE IN REQBLK   @Y30LB02 19300003
         AGO   .PROCES                                         @Y30LB02 19350003
.*                                                             @Y30LB02 19400003
.* *********************************************************** @ZA28964 19450000
.*           S T A N D A R D     F O R M                       @Y30LB02 19460000
.* *********************************************************** @ZA28964 19470000
.*                                                             @Y30LB02 19500003
.SFORM   AIF   ('&TYPE' EQ 'MNT' OR '&VOLID' NE '').CKVUA      @ZDR2048 19550000
         MNOTE 12,'  ICB610I - VOLID MUST BE SPECIFIED '       @Y30LB02 19700003
         MNOTE 12,'  FOR STANDARD FORM MACRO'                  @Y30LB02 19750000
         AGO   .FINISH                                         @Y30LB02 19800000
.*                                                             @Y30LB02 19850003
.CKVUA   AIF   ('&VUA' NE '' OR '&TYPE' EQ 'DMNT').SFORMOK     @Y30LB02 19900000
         MNOTE 12,'  ICB611I - VUA MUST BE SPECIFIED '         @Y30LB02 20050003
         MNOTE 12,'  FOR STANDARD FORM MACRO'                  @Y30LB02 20100003
         AGO   .FINISH                                         @Y30LB02 20150000
.*                                                             @Y30LB02 20200003
.SFORMOK ANOP                                                  @Y30LB02 20250003
*  MACMEAN MSSC MOUNT/DEMOUNT MACRO--STANDARD FORM             @Y30LB02 20300000
*          VERSION - VS/2 REL 3  77/12/15  LEVEL 04            @ZA28964 20350000
         AIF   ('&TYPE' EQ 'MNT').MNT2           MOUNT?        @Y30LB02 20370000
         AIF   (&DMNTTES).MNT1SET  IF ¬ 1ST STD FORM           @ZA28964 20390000
&DMNTTES SETB  1                   STD FORM INVOKED            @ZA28964 20410000
         CNOP  0,4                                             @ZA28964 20430000
&SYMBOL  BAL   1,&LBL1             SET REG1 POINTING TO LIST   @ZA28964 20450000
DMNTLEN  DC    A(&LBL-*)           REQ BLK LENGTH              @Y30LB02 20550000
DMOPCODE DC    XL1'06'             DEMOUNT OPCODE              @Y30LB02 20600000
DMNTRES1 DC    XL1'00'             RESERVED                    @Y30LB02 20650000
DMNTFLAG DC    XL2'0000'           FLAGS                       @Y30LB02 20700000
DMVOLID  DC    XL6'000000000000'   VOLID                       @Y30LB02 20750000
DMNTASID DC    XL2'0000'           ASID                        @Y30LB02 20800000
DMNTECB  DC    XL4'00000000'       ECB                         @Y30LB02 20850000
DMHOSTID DC    XL5'0000000000'     HOST ID                     @Y30LB02 20900000
DMNTRES2 DC    XL1'00'             RESERVED                    @ZDR2048 20950000
DMNTVUA  DC    XL2'0000'           VUA                         @ZDR2048 20951000
DMLEN    EQU   DMNTLEN             COMPATABILITY DEFINITION    @ZA28964 20961000
DMOPCD   EQU   DMOPCODE            COMPATABILITY DEFINITION    @ZA28964 20968000
DMVOL    EQU   DMVOLID             COMPATABILITY DEFINITION    @ZA28964 20975000
DMHOST   EQU   DMHOSTID            COMPATABILITY DEFINITION    @ZA28964 20982000
&LBL     EQU   *                                               @Y30LB02 21000003
&LBL1    DS    0F                                              @Y30LB02 21050003
         AGO   .PROCES                                         @Y30LB02 21100003
.*                                                             @Y30LB02 21150003
.MNT1SET ANOP                                                  @ZA28964 21160000
*          SUBSEQUENT STD FORM INVOCATION                      @ZA28964 21169000
&SYMBOL  LA    1,DMLEN             LOAD LIST ADDRESS IN REG1   @ZA28964 21178000
         AGO   .PROCES                                         @ZA28964 21187000
.*                                                             @ZA28964 21196000
.MNT2    AIF   (&MNTTEST).MNT2SET  IF ¬ 1ST STD FORM           @ZA28964 21205000
&MNTTEST SETB  1                   STD FORM INVOKED            @ZA28964 21214000
         CNOP  0,4                                             @ZA28964 21223000
&SYMBOL  BAL   1,&LBL1             SET REG1 POINTING TO LIST   @ZA28964 21232000
MNTLEN   DC    A(&LBL-*)           REQ BLK LENGTH              @Y30LB02 21250000
MNTOPCD  DC    XL1'08'             MOUNT OPCODE                @Y30LB02 21300000
MNTRES1  DC    XL1'00'             RESERVED                    @Y30LB02 21350000
MNTFLAGS DC    XL2'0000'           FLAGS                       @Y30LB02 21400000
MNTVOLID DC    XL6'000000000000'   VOLID                       @Y30LB02 21450000
MNTVUA   DC    XL2'0000'           VUA                         @Y30LB02 21500000
MNTHOSTD DC    XL5'0000000000'     HOSTID                      @Y30LB02 21550000
MNTRES2  DC    XL3'000000'         RESERVED                    @Y30LB02 21600000
MNTEXTP  DC    XL4'00000000'       MNT LIST EXTN ADDR          @G18MB04 21650000
MNTJFCB  EQU   MNTEXTP             NAME RE-DEF FOR JFCB PTR    @G18MB04 21651003
MDLEN    EQU   MNTLEN              COMPATABILITY REDEFINITION  @ZA28964 21661000
MDOPCD   EQU   MNTOPCD             COMPATABILITY REDEFINITION  @ZA28964 21670000
MDFLG    EQU   MNTFLAGS            COMPATABILITY REDEFINITION  @ZA28964 21679000
MDVOL    EQU   MNTVOLID            COMPATABILITY REDEFINITION  @ZA28964 21688000
MDVUA    EQU   MNTVUA              COMPATABILITY REDEFINITION  @ZA28964 21697000
MDHOST   EQU   MNTHOSTD            COMPATABILITY REDEFINITION  @ZA28964 21706000
MDJFCB   EQU   MNTJFCB             COMPATABILITY REDEFINITION  @ZA28964 21715000
&LBL     EQU   *                                               @Y30LB02 21724000
&LBL1    DS    0F                                              @Y30LB02 21733000
         AGO   .PROCES                                         @ZA28964 21742000
.*                                                             @ZA28964 21751000
.MNT2SET ANOP                                                  @ZA28964 21760000
*          SUBSEQUENT STD FORM INVOCATION                      @ZA28964 21769000
&SYMBOL  LA    1,MDLEN             LOAD LIST ADDRESS IN REG1   @ZA28964 21778000
.*                                                             @Y30LB02 21800003
.*       PROCESS REQUEST BLOCK FOR STANDARD & EXECUTE FORMS    @Y30LB02 21850003
.*                                                             @Y30LB02 21900003
.PROCES  AIF   ('&FLAGS' EQ '').VOLID        FLAGS SPECIFIED?  @Y30LB02 22000000
         AIF   ('&FLAGS'(1,1) EQ '(').REGF  FLAGS IN REG-FORM? @Y30LB02 22050003
         MVC   6(2,1),&FLAGS       PUT FLAGS IN REQUEST BLK    @Y30LB02 22100003
         AGO   .VOLID              CHECK FOR VOLID             @Y30LB02 22150003
.*                                                             @Y30LB02 22200003
.REGF    ANOP                                                  @Y30LB02 22250003
         MVC   6(2,1),0(&FLAGS(1)) REG-FORM-STORE FLAGS        @Y30LB02 22300003
.*                                                             @Y30LB02 22350003
.VOLID   AIF   ('&VOLID' EQ '').YDMNT2                         @Y30LB02 22400003
         AIF   ('&VOLID'(1,1) EQ '(').VREG    REG-FORM?        @Y30LB02 22450003
         MVC   8(6,1),&VOLID       PUT VOLID IN REQBLK         @Y30LB02 22500003
         AGO   .YDMNT2                                         @Y30LB02 22550003
.*                                                             @Y30LB02 22600003
.VREG    ANOP                                                  @Y30LB02 22650003
         MVC   8(6,1),0(&VOLID(1)) REG-FORM--STORE VOLID       @Y30LB02 22700003
.*                                                             @Y30LB02 22750003
.YDMNT2  AIF   ('&VUA' EQ '').CKECB                            @ZA28964 22900000
         AIF   ('&VUA'(1,1) EQ '(').UREG     REGISTER FORM?    @Y30LB02 22920000
         AIF   ('&TYPE' EQ 'DMNT').DMTU   BRANCH ON DEMOUNT    @ZDR2048 22940000
         MVC   14(2,1),&VUA        STORE VUA                   @ZA28964 22960000
         AGO   .CKECB                                          @ZA28964 22980000
.*                                                             @ZDR2048 23051003
.DMTU    ANOP                                                  @ZDR2048 23052003
         MVC   26(2,1),&VUA        STORE VUA                   @ZDR2048 23053003
         OI    6(1),X'20'          SET VUA VALID FLAG          @ZDR2048 23054003
         AGO   .CKECB                                          @ZA28964 23055000
.*                                                             @Y30LB02 23100003
.UREG    AIF   ('&TYPE' EQ 'DMNT').DMTUREG BR ON DEMOUNT       @ZDR2048 23151000
         MVC   14(2,1),0(&VUA(1))  REG-FORM, STORE VUA         @Y30LB02 23200003
         AGO   .CKECB                                          @Y30LB02 23250000
.*                                                             @ZDR2048 23251003
.DMTUREG ANOP                                                  @ZDR2048 23252003
         MVC   26(2,1),0(&VUA(1))  REG FORM STORE VUA          @ZDR2048 23253003
         OI    6(1),X'20'          SET VUA VALID FLAG          @ZDR2048 23254003
.*                                                             @Y30LB02 23300003
.CKECB   AIF   ('&ECB' EQ '').CKHOST   ECB SPECIFIED?          @ZA28964 23400000
         AIF   ('&TYPE' EQ 'DMNT').CKECB1    IF DEMOUNT        @ZA28964 23420000
         MNOTE 4,'  ICB618I - WARNING - ECB PARAMETER '        @ZA28964 23440000
         MNOTE 4,'  VALID ONLY FOR DEMOUNT REQUEST '           @ZA28964 23460000
         AGO   .CKHOST                                         @ZA28964 23480000
.*                                                             @ZA28964 23500000
.CKECB1  AIF   ('&ECB'(1,1) EQ '(').RECB    REG FORM?          @ZA28964 23520000
         LA    15,&ECB            ADDRESS FORM ECB             @Y30LB02 23540000
         ST    15,16(1)           STORE ECB IN REQ BLK         @Y30LB02 23560000
         AGO   .CKHOST                                         @Y30LB02 23580000
.*                                                             @ZA28964 23600000
.RECB    ANOP                                                  @Y30LB02 23650003
         ST    &ECB,16(1)         REGFORM-STORE ECB            @Y30LB02 23700003
.*                                                             @Y30LB02 23750003
.CKHOST  AIF   ('&HOSTID' EQ '').CKJF   HOSTID NOT SPECD,BR    @Y30LB02 23850000
         AIF   ('&TYPE(1)' EQ 'DMNT').CKHOST1 BRCH IF DMNT     @Y30LB02 23900003
         AIF   ('&HOSTID'(1,1) EQ '(').RHOST  REG-FORM,BRCH    @Y30LB02 23950003
         MVC   16(5,1),&HOSTID     ADDR-FORM,STORE HOSTID      @Y30LB02 24000003
         AGO   .CKJF                                           @Y30LB02 24050003
.*                                                             @ZA28964 24060000
.RHOST   ANOP                                                  @Y30LB02 24100003
         MVC   16(5,1),0(&HOSTID(1)) STORE HOSTID              @Y30LB02 24150003
         AGO   .CKJF                                           @ZA09524 24151003
.*                                                             @Y30LB02 24200003
.CKHOST1 AIF   ('&HOSTID'(1,1) EQ '(').RHOST1 REG-FORM,BRCH    @Y30LB02 24250003
         MVC   20(5,1),&HOSTID     ADDR-FORM,STORE HOSTID      @Y30LB02 24300003
         AGO   .CKJF                                           @Y30LB02 24350003
.*                                                             @ZA28964 24360000
.RHOST1  ANOP                                                  @Y30LB02 24400003
         MVC   20(5,1),0(&HOSTID(1)) STORE HOSTID              @Y30LB02 24450003
.*                                                             @Y30LB02 24500003
.CKJF    AIF   ('&MJFCB' EQ '').CKMEXT      BR AND CK FOR EXT  @G18MB04 24551000
         AIF   ('&TYPE' EQ 'DMNT').JFEXER    IF BAD PARAMETER  @ZA28964 24551400
         AIF   ('&MJFCB'(1,1) EQ '(').RJF   BR FOR REG FORM    @G18MB04 24552000
         LA    15,&MJFCB           ADDR FORM MJFCB SPECD       @G18MB04 24553003
         ST    15,24(1)            STORE JFCB POINTER IN PARMS @G18MB04 24554003
         AGO   .CVS2               BR AROUND JFCB MEXT CODE    @G18MB04 24555003
.*                                                             @ZA28964 24556000
.RJF     ANOP                      REG FORM LABEL              @G18MB04 24566000
         MVC   24(4,1),0(&MJFCB(1)) REG FORM STORE JFCB PTR    @G18MB04 24576000
         AGO   .CVS2               BR AROUND MEXT CODE         @G18MB04 24586000
.*                                                             @ZA28964 24596000
.CKMEXT  AIF   ('&MEXTN' EQ '').CVS2   BR IF MEXTN IS NULL     @G18MB04 24606000
         AIF   ('&TYPE' EQ 'DMNT').JFEXER    IF BAD PARAMETER  @ZA28964 24616000
         AIF   ('&MEXTN'(1,1) EQ '(').RMEXT REG FORM SPECD     @G18MB04 24650003
         LA    15,&MEXTN           ADDRESS FORM SPECD          @G18MB04 24700003
         ST    15,24(1)            STORE MEXTN                 @G18MB04 24750003
         OI    6(1),X'08'          OR ON MNT EXT PROVIDED BIT  @G18MB04 24751003
         AGO   .CVS2               BRANCH                      @Y30LB02 24800003
.*                                                             @ZA28964 24810000
.RMEXT   ANOP                                                  @G18MB04 24820000
         MVC   24(4,1),0(&MEXTN(1))  STORE MEXTN               @G18MB04 24830000
         OI    6(1),X'08'          OR ON MNT EXT PROVIDED BIT  @G18MB04 24840000
         AGO   .CVS2                                           @ZA28964 24850000
.*                                                             @ZA28964 24860000
.JFEXER  MNOTE 4,'  ICB619I - WARNING - MEXTN/MJFCB '          @ZA28964 24870000
         MNOTE 4,'  PARAMETER VALID ONLY FOR MOUNT REQUEST '   @ZA28964 24880000
.*                                                             @Y30LB02 24950003
.CVS2    ANOP                                                  @Y30LB02 25000003
         SVC   126                 INVOKE  THE SVC             @Y30LB02 25050003
.FINISH  MEND                                                  @Y30LB02 25100003
************************************************************** @ZA28964 25110000
*************************************************************/          25120000
*   ICBMNTDE:  MACRO KEYS(MF,TYPE,FLAGS,VOLID,VUA,                      25200003
*                  HOSTID,MJFCB,MEXTN,ECB);                /*@G18MB04*/ 25250003
*/*                                                          @Y30LB02*/ 25300003
*/********************************************************** @Y30LB02*/ 25310000
*/*            EXTERNAL DECLARES                             @Y30LB02*/ 25350003
*/********************************************************** @Y30LB02*/ 25352000
*        DCL (MDTESTR1,         /*REGISTER ONE DECLARED      @Y30LB02*/ 25400000
*             MNTTEST,          /*FLAG FOR STANDARD FORM     @Y30LB02*/ 25450000
*             DMTTEST) FIXED EXT;/*FLAG FOR DMNT S-FORM      @Y30LB02*/ 25500000
*/*                                                          @Y30LB02*/ 25600003
*/********************************************************** @Y30LB02*/ 25610000
*/*            INTERNAL DECLARES                             @Y30LB02*/ 25650003
*/********************************************************** @Y30LB02*/ 25660000
*   DCL RETCODE FIXED,       /*RETURN CODE AREA              @Y30LB02*/ 25800000
*       (MLEN,               /*MOUNT LIST LENGTH             @Y30LB02*/ 25900000
*        DLEN,               /*DEMOUNT LIST LENGTH           @Y30LB02*/ 25950000
*        MOPCD,              /*MOUNT OPCODE                  @Y30LB02*/ 26000000
*        DOPCD,              /*DEMOUNT OPCODE                @Y30LB02*/ 26050000
*        VUAVAL,             /*VUA VALID SET BIT             @ZDR2048*/ 26051000
*        MEXTVAL) CHAR;      /*MOUNT EXTENSION SET BIT       @G18MB04*/ 26052000
*/*                                                          @ZA28964*/ 26062000
*/********************************************************** @Y30LB02*/ 26065000
*/*            VARIABLE INITIALIZATION                       @ZA28964*/ 26068000
*/********************************************************** @Y30LB02*/ 26074000
*        RETCODE=0;          /*INITIALIZE RETURN CODE        @Y30LB02*/ 26100003
*        MLEN = '1C';        /*INITIALIZE MOUNT LENGTH       @Y30LB02*/ 26200003
*        DLEN = '1C';        /*INITIALIZE DEMOUNT LENGTH     @Y30LB02*/ 26250003
*        MOPCD = '08';       /*INITIALIZE MOUNT OPCODE       @Y30LB02*/ 26300003
*        DOPCD = '06';       /*INITIALIZE DEMOUNT OPCODE     @Y30LB02*/ 26350003
*        VUAVAL='1';         /*INITIALIZE VUA VALID BIT      @ZDR2048*/ 26351003
*        MEXTVAL='1';        /*INITIALIZE MNT EXT PROVIDED   @G18MB04*/ 26352003
*/*                                                          @ZA28964*/ 26362000
*/*    ANSWER TEXT IS AT THE END OF THE MACRO AND IS         @ZA28964*/ 26365000
*/*    INCLUDED IN A SEGMENT-LIKE FASHION                    @ZA28964*/ 26368000
*/*                                                          @ZA28964*/ 26371000
*/********************************************************** @Y30LB02*/ 26374000
*/*    ECHO INVOCATION BACK TO CALLING MODULE                @ZA28964*/ 26377000
*/********************************************************** @Y30LB02*/ 26380000
*  ANS('      /* MACRO INVOCATION:      @ZA28964*/')SKIP;  /*@ZA28964*/ 26383000
*  ANS('      /*  ' || MACLABEL || ' ' || MACNAME || ' ' ||             26386000
*      MACLIST || ' ' || MACKEYS || ' @ZA28964*/')SKIP;    /*@ZA28964*/ 26389000
*/*                                                          @Y30LB02*/ 26400003
*/********************************************************** @Y30LB02*/ 26400400
*/*            CHECK FOR MUTUALLY EXCLUSIVE PARAMETERS       @G18MB04*/ 26401003
*/********************************************************** @Y30LB02*/ 26401400
*   IF MEXTN ¬= '' THEN IF MJFCB ¬= '' THEN                /*@G18MB04*/ 26403000
*     DO;                    /*ONE MUST BE NULL              @G18MB04*/ 26403400
*       ANS MSG('  ICB621I - MEXTN AND MJFCB MUTUALLY'||                26405000
*               ' EXCLUSIVE PARAMETERS SPECIFIED. ')SKIP;               26406000
*       RETCODE=12;               /* SET RETURN CODE         @G18MB04*/ 26407000
*       GO TO FINISH;             /* EXIT                    @G18MB04*/ 26408000
*     END;                                                 /*@ZA28964*/ 26428000
*/*                                                          @Y30LB02*/ 26478000
*/********************************************************** @Y30LB02*/ 26528000
*/*         DECLARE REGISTER 1                               @Y30LB02*/ 26578000
*/********************************************************** @Y30LB02*/ 26628000
*   IF MDTESTR1 = 0 THEN     /*REG 1 NOT DECLARED?           @ZA28964*/ 26950000
*     DO;                    /*THEN DECLARE REG 1            @Y30LB02*/ 27000000
*       ANS('DCL MDREG1 REG(1) PTR; /*'||                               27050000
*           'ADDRESS OF REQUEST BLOCK @Y30LB02*/')SKIP;                 27100000
*       MDTESTR1=1;          /*SET REG 1 DECLARED FLAG       @Y30LB02*/ 27150000
*     END;                                                 /*@Y30LB02*/ 27200000
*/*                                                          @Y30LB02*/ 27240000
*/********************************************************** @Y30LB02*/ 27242000
*/*       CHECK FOR VALID TYPE SPECIFICATION                 @Y30LB02*/ 27244000
*/********************************************************** @Y30LB02*/ 27246000
*   IF TYPE(1) ¬= 'MNT' THEN IF TYPE(1) ¬= 'DMNT' THEN     /*@ZA28964*/ 27250000
*     DO;                                                  /*@ZA28964*/ 27280000
*       IF TYPE='' THEN      /*IS THE TYPE PARM NULL?        @Y30LB02*/ 27350000
*         ANS MSG('  ICB600I - TYPE MUST BE '||                         27450000
*                 'SPECIFIED ')SKIP;                       /*@Y30LB02*/ 27500000
*       ELSE                                               /*@Y30LB02*/ 27550000
*         ANS MSG('  ICB601I - TYPE IS INCORRECTLY '||                  27600000
*                 'SPECIFIED')SKIP;                        /*@ZA28964*/ 27650000
*       RETCODE=12;          /*SET RETURN CODE TO 12         @ZA28964*/ 27680000
*       GO TO FINISH;        /*BRANCH TO FINISH              @ZA28964*/ 27710000
*     END;                                                 /*@ZA28964*/ 27740000
*/*                                                          @Y30LB02*/ 27800003
*/********************************************************** @Y30LB02*/ 27850000
*/*        LIST FORM                                         @Y30LB02*/ 27860000
*/********************************************************** @Y30LB02*/ 27870000
*   IF MF(1) ¬= 'L' THEN     /*REQUEST NOT FOR LIST FORM     @Y30LB02*/ 27900003
*        GO TO CKFORM;       /*BRANCH, CK FOR EXECUTE        @Y30LB02*/ 27950003
*/*                                                          @Y30LB02*/ 27960000
*   IF MF(2) = '' THEN       /*LIST FORM, NAME ¬ SPECIFIED   @ZA28964*/ 28000000
*     DO;                                                  /*@ZA28964*/ 28050000
*       ANS MSG('  ICB602I - A NAME FOR THE '||                         28100000
*               'REQUEST BLOCK MUST BE SPECIFIED IN '||                 28150000
*               'MF(2) ')SKIP;                             /*@ZA28964*/ 28200000
*       RETCODE=12;          /*SET RETURN CODE TO 12         @ZA28964*/ 28250000
*       GO TO FINISH;        /*BRANCH TO FINISH              @ZA28964*/ 28300000
*     END;                                                 /*@ZA28964*/ 28350000
*/*                                                          @Y30LB02*/ 28400000
*   IF FLAGS ||              /*FLAGS SPECIFIED?              @ZA28964*/ 28450000
*     VOLID ||               /*VOLID SPECIFIED?              @ZA28964*/ 28500000
*     VUA ||                 /*VUA SPECIFIED?                @ZA28964*/ 28550000
*     MEXTN ||               /*MEXTN SPECIFIED?              @G18MB04*/ 28600000
*     HOSTID ||              /*HOST ID SPECIFIED?            @ZA28964*/ 28650000
*     ECB ||                 /*ECB SPECIFIED?                @ZA28964*/ 28700000
*     MJFCB ¬= '' THEN       /*MJFCB SPECIFIED?              @G18MB04*/ 28851000
*       DO;                  /*PRINT WARNING MESSAGE         @Y30LB02*/ 28950000
*         RETCODE = 4;       /*SET RETURN CODE TO 4          @Y30LB02*/ 29000000
*         ANS MSG('  ICB603I - WARNING-ONLY MF'||                       29050000
*                 ' AND TYPE PARAMETERS ARE VALID FOR'||                29100000
*                 ' LIST FORM ')SKIP;                      /*@Y30LB02*/ 29150000
*       END;                                               /*@Y30LB02*/ 29200000
*/*                                                          @Y30LB02*/ 29210000
*   IF MF(3) = '' THEN      /*PLS ATTRIBUTE ¬ SPECIFIED      @Y30LB02*/ 29250000
*     DO;                   /*PRINT REQUEST BLOCK            @Y30LB02*/ 29300000
*       IF TYPE(1)='MNT' THEN /*REQUEST FOR MOUNT?           @Y30LB02*/ 29400000
*         GO TO LMNTINT;     /* CALL ANSWER TEXT BLOCK       @ZA28964*/ 29500000
*                            /*  THEN GO TO FINISH           @ZA28964*/ 29550000
*       ELSE                                               /*@ZA28964*/ 29600000
*         GO TO LDMTINT;     /* CALL ANSWER TEXT BLOCK       @ZA28964*/ 29650000
*                            /*  THEN GO TO FINISH           @ZA28964*/ 29700000
*     END;                                                 /*@Y30LB02*/ 33750000
*   ELSE                                                   /*@Y30LB02*/ 33800000
*     DO;                    /* PLS ATTRIBUTE SPECIFIED      @Y30LB02*/ 33850000
*       IF TYPE(1)='MNT' THEN   /*MOUNT REQUEST?             @Y30LB02*/ 33950000
*         GO TO LMNTUN;      /* CALL ANSWER TEXT BLOCK       @ZA28964*/ 34050000
*                            /*  THEN GO TO FINISH           @ZA28964*/ 34100000
*       ELSE                 /*PROCESS DEMOUNT REQ BLK       @Y30LB02*/ 34150000
*         GO TO LDMTUN;      /* CALL ANSWER TEXT BLOCK       @ZA28964*/ 34200000
*                            /*  THEN GO TO FINISH           @ZA28964*/ 34250000
*     END;                                                 /*@Y30LB02*/ 37700000
*/*                                                          @Y30LB02*/ 37750003
*/********************************************************** @Y30LB02*/ 37760000
*/*          EXECUTE FORM                                    @Y30LB02*/ 37800000
*/********************************************************** @Y30LB02*/ 37810000
*CKFORM:                                                                37900003
*   IF MF(1) ¬= 'E' THEN     /* EXECUTE FORM SPECIFIED?      @Y30LB02*/ 37950000
*     GO TO SFORM;           /*BRANCH, CK  STANDARD FORM     @Y30LB02*/ 38000000
*   IF MF(2)='' THEN         /* IS 2ND SUB-PARM SPECIFIED?   @Y30LB02*/ 38050003
*     DO;                    /*PRINT OUT ERROR MESSAGE       @Y30LB02*/ 38100003
*        ANS MSG('  ICB612I - MF(2) MUST CONTAIN'||                     38150003
*                ' REQ BLK NAME IF EXEC'||                              38200003
*                ' MACRO FORM REQUESTED')SKIP;             /*@Y30LB02*/ 38250003
*        RETCODE=12;         /*SET RETURN CODE TO 12         @ZA28964*/ 38300000
*        GO TO FINISH;                                     /*@ZA28964*/ 38350000
*     END;                   /*                              @Y30LB02*/ 38400000
*/*                                                          @Y30LB02*/ 38450000
*   GO TO EMNTDMT;           /* CALL ANSWER TEXT BLOCK       @ZA28964*/ 38500000
*                            /*  THEN GO TO EMNTDMTR         @ZA28964*/ 38550000
*/*                                                          @ZA28964*/ 38600000
*EMNTDMTR:                                                 /*@ZA28964*/ 38650000
*   IF MF(3) = 'COMPLETE' THEN /*COMPLETE SPECIFIED?         @ZA28964*/ 38700000
*     ANS(' '||MF(2)||'='||MF(2)||'&&'||MF(2)||';/*ZERO'||              38750000
*         ' OUT BLOCK @Y30LB02*/')SKIP;                                 38800000
*   IF TYPE(1) = 'MNT' THEN /*MOUNT REQUEST?                 @Y30LB02*/ 38850000
*     DO;                      /*MOUNT OPCD AND LEN          @Y30LB02*/ 38900000
*       ANS('MDLEN='||QUOTE(MLEN)||'X;/*LENGTH OF '||                   38950000
*           'MOUNT REQUEST BLOCK @Y30LB02*/')SKIP;                      39000000
*       ANS('MDOPCD='||QUOTE(MOPCD)||'X;/*MOUNT'||                      39050000
*           ' OPCODE @Y30LB02*/')SKIP;                                  39100000
*       GO TO COMPROC;         /*BRANCH, CK PARAMETERS       @Y30LB02*/ 39150000
*     END;                     /*                            @Y30LB02*/ 39200000
*   ELSE                       /*DEMOUNT LEN AND OPCD        @Y30LB02*/ 39250000
*     DO;                      /*PUT OUT LEN AND OPCD        @Y30LB02*/ 39300000
*       ANS('DMLEN='||QUOTE(DLEN)||'X;/*LENGTH OF '||                   39350000
*           'DEMOUNT REQUEST BLOCK @Y30LB02*/')SKIP;                    39400000
*       ANS('DMOPCD='||QUOTE(DOPCD)||'X;/*DEMOUNT'||                    39450000
*          ' OPCODE @Y30LB02*/')SKIP;                                   39500000
*       GO TO COMPROC;         /*BRANCH, CK PARAMETERS       @Y30LB02*/ 39550000
*     END;                     /*                            @Y30LB02*/ 39600000
*/*                                                          @Y30LB02*/ 41512000
*/********************************************************** @Y30LB02*/ 41520000
*/*           STANDARD FORM                                  @Y30LB02*/ 41530000
*/********************************************************** @Y30LB02*/ 41540000
*SFORM:                                                                 41550003
*   IF MF(1) ¬= '' THEN       /* FORM STANDARD?              @Y30LB02*/ 41600003
*     DO;                     /*PRINT ERROR MESSAGE          @Y30LB02*/ 41650003
*        ANS MSG('  ICB615I - INVALID MF PARAMETER'||                   41700003
*                ' SPECIFIED, MUST BE L, E, OR NULL')SKIP; /*@Y30LB02*/ 41750003
*        RETCODE=12;          /*SET RETURN CODE TO 12        @Y30LB02*/ 41850003
*        GO TO FINISH;                                     /*@ZA28964*/ 41900000
*     END;                                                 /*@Y30LB02*/ 41940000
*/*                                                          @Y30LB02*/ 41980000
*   IF VOLID = '' THEN IF TYPE(1) = 'DMNT' THEN            /*@ZA28964*/ 42020000
*     DO;                   /*PRINT ERROR MESSAGE            @Y30LB02*/ 42150003
*        RETCODE = 12;      /*SET RETURN CODE TO 12          @Y30LB02*/ 42250003
*        ANS MSG('  ICB610I - VOLID MUST BE SPECIFIED '||               42300003
*                'FOR STANDARD FORM MACRO')SKIP;           /*@Y30LB02*/ 42350000
*        GO TO FINISH;                                     /*@ZA28964*/ 42400000
*     END;                                                 /*@Y30LB02*/ 42450000
*/*                                                          @Y30LB02*/ 42500003
*   IF VUA = '' THEN IF TYPE(1) = 'MNT' THEN               /*@Y30LB02*/ 42550000
*     DO;                       /*PRINT ERROR MSG            @Y30LB02*/ 42650000
*        RETCODE = 12;          /*SET RETURN CODE TO 12      @Y30LB02*/ 42750003
*        ANS MSG('  ICB611I - VUA MUST BE SPECIFIED FOR '||             42800003
*                'STANDARD FORM MACRO')SKIP;               /*@Y30LB02*/ 42850000
*        GO TO FINISH;                                     /*@ZA28964*/ 42900000
*     END;                                                 /*@Y30LB02*/ 42950000
*/*                                                          @Y30LB02*/ 43000000
*   IF TYPE(1) = 'MNT' THEN       /*MOUNT REQUEST?           @ZA28964*/ 43050000
*     DO;                                                  /*@ZA28964*/ 43100000
*       IF MNTTEST => 1 THEN      /*STD FORM INVOKED BEFORE  @ZA28964*/ 43150000
*         GO TO SSMNT;            /* CALL ANSWER TEXT BLOCK  @Y30LB02*/ 43200000
*                                 /* THEN GO TO COMPROC      @ZA28964*/ 43250000
*       ELSE                 /*FIRST INVOCATION              @ZA28964*/ 43300000
*         DO;                     /*PUT OUT DECLARES         @ZA28964*/ 43350000
*           MNTTEST = 1;          /*SET STD FORM CTR         @ZA28964*/ 43400000
*           GO TO SIMNT;         /* CALL ANSWER TEXT BLOCK   @ZA28964*/ 43450000
*                                /*  THEN GO TO COMPROC      @ZA28964*/ 43500000
*         END;                                             /*@Y30LB02*/ 46600000
*     END;                   /* MOUNT REQUEST                @Y30LB02*/ 46650000
*   ELSE                     /* DEMOUNT REQUEST              @Y30LB02*/ 46660000
*     DO;                                                  /*@Y30LB02*/ 46670000
*       IF DMTTEST => 1 THEN /*DMNT STD FM INVOKED BEFORE ?  @Y30LB02*/ 46700000
*         GO TO SSDMT;      /*CALL ANSWER TEXT BLOCK         @Y30LB02*/ 47500000
*                           /*  THEN GO TO COMPROC           @ZA28964*/ 47550000
*       ELSE           /*PUT OUT DECLARES FOR STD FM         @Y30LB02*/ 47650000
*         DO;          /*DECLARES FOR DEMOUNT                @Y30LB02*/ 47700000
*           DMTTEST = 1;     /*SET DMNT STDFM FLAG           @Y30LB02*/ 49650000
*           GO TO SIDMT;     /* CALL ANSWER TEXT BLOCK       @Y30LBO2*/ 49660000
*                            /*  THEN GO TO COMPROC          @ZA28964*/ 49662000
*         END;                                             /*@Y30LB02*/ 49670000
*    END;                                                  /*@Y30LB02*/ 49700000
*/*                                                          @Y30LB02*/ 49750003
*/********************************************************** @Y30LB02*/ 49760000
*/*   FILL IN STANDARD AND EXECUTE FORM PARAMETERS           @ZA28964*/ 49770000
*/********************************************************** @Y30LB02*/ 49820000
*COMPROC:                                                  /*@ZA28964*/ 49870000
*   IF FLAGS¬='' THEN    /*FLAGS SPECIFIED?                  @ZA28964*/ 49920000
*     DO;                                                  /*@ZA28964*/ 49970000
*       IF TYPE(1) = 'DMNT' THEN /*DEMOUNT REQUEST?          @ZA28964*/ 50020000
*         ANS('DMNTFLAG=' ||FLAGS|| '; /*FLAGS @Y30LB02*/')SKIP;        50070000
*       ELSE             /*PUT FLAGS IN REQ BLOCK            @ZA28964*/ 50120000
*         ANS('MDFLG=' ||FLAGS|| '; /*FLAGS @Y30LB02*/')SKIP;           50170000
*     END;                                                 /*@ZA28964*/ 50220000
*/*                                                          @Y30LB02*/ 50270000
*   IF VOLID ¬= '' THEN        /*VOLID SPECIFIED?            @ZA28964*/ 50320000
*     DO;                                                  /*@ZA28964*/ 50370000
*       IF TYPE(1) = 'MNT' THEN  /*MOUNT REQUEST?            @ZA28964*/ 50420000
*         ANS('MDVOL=' ||VOLID||';/*VALUE OF VOLID @Y30LB02*/')SKIP;    50470000
*       ELSE                  /*DEMOUNT REQUEST              @ZA28964*/ 50520000
*         ANS('DMVOL=' ||VOLID|| '; /*VALUE OF VOLID @Y30LB02*/')SKIP;  50570000
*     END;                                                 /*@ZA28964*/ 50620000
*/*                                                          @Y30LB02*/ 50670000
*   IF VUA ¬= '' THEN             /*VUA SPECIFIED?           @ZA28964*/ 50720000
*     DO;                                                  /*@ZA28964*/ 50770000
*       IF TYPE(1)='DMNT' THEN    /*TEST FOR DEMOUNT         @ZDR2048*/ 51551000
*         DO;                     /*DEMOUNT REQUEST          @ZDR2048*/ 51552000
*           ANS('DMNTVUA=' ||VUA|| '; /*FILL VUA @ZDR2048*/')SKIP;      51553000
*           ANS('DMVUAVAL='||QUOTE(VUAVAL)||'B;/* OR ON'||              51554000
*               ' THE VUA VALID ATTRIBUTE FLAG @ZDR2048*/')SKIP;        51555000
*         END;                    /*                         @ZDR2048*/ 51556000
*       ELSE                  /*PUT VUA IN BLOCK FOR MNT     @ZDR2048*/ 51600000
*         ANS('MDVUA=' ||VUA|| '; /*VALUE OF VUA    @Y30LB02*/')SKIP;   51650000
*     END;                                                 /*@ZA28964*/ 51660000
*/*                                                          @Y30LB02*/ 51680000
*   IF HOSTID ¬= '' THEN     /*HOSTID SPECIFIED              @ZA28964*/ 51700000
*     DO;                                                  /*@ZA28964*/ 51720000
*       IF TYPE(1) = 'MNT' THEN  /*IS THE TYPE MOUNT?        @Y30LB02*/ 51740000
*         ANS('MDHOST='||HOSTID||';/*FILL IN HOSTID @Y30LB02*/')SKIP;   51760000
*       ELSE                                               /*@ZA28964*/ 51780000
*         ANS('DMHOST='||HOSTID||';/*FILL IN HOSTID @Y30LB02*/')SKIP;   51800000
*     END;                                                 /*@ZA28964*/ 51820000
*/*                                                          @ZA28964*/ 51840000
*   IF ECB ¬= '' THEN                                      /*@ZA28964*/ 51860000
*     DO;                                                  /*@ZA28964*/ 51880000
*       IF TYPE(1) = 'DMNT' THEN                           /*@ZA28964*/ 51900000
*         ANS('DMNTECB =ADDR'||ECB||';/*ADDRESS OF THE EVENT'||         51920000
*             'CONTROL BLOCK @Y30LB02*/')SKIP;                          51940000
*       ELSE                 /* TYPE MUST BE MOUNT           @ZA28964*/ 51960000
*         DO;                                              /*@ZA28964*/ 51980000
*           RETCODE = 4;                                   /*@ZA28964*/ 52000000
*           ANS MSG('  ICB618I - WARNING - ECB PARAMETER ' ||           52020000
*                   'VALID ONLY FOR DEMOUNT REQUEST')SKIP; /*@ZA28964*/ 52040000
*         END;                                             /*@ZA28964*/ 52060000
*     END;                                                 /*@ZA28964*/ 52080000
*/*                                                          @ZA28964*/ 52100000
*   IF MEXTN || MJFCB ¬= '' THEN   /* MEXTN, MJFCB GIVEN     @ZA28964*/ 52120000
*     DO;                                                  /*@ZA28964*/ 52140000
*       IF TYPE(1) = 'DMNT' THEN  /* ILLEGAL PARAMETER       @ZA28964*/ 52160000
*         DO;                                              /*@ZA28964*/ 52180000
*           RETCODE = 4;                                   /*@ZA28964*/ 52200000
*           ANS MSG('  ICB619I - WARNING - MEXTN/MJFCB ' ||             52220000
*                   'PARAMETER VALID ONLY FOR MOUNT REQUEST')SKIP;      52240000
*         END;                                             /*@ZA28964*/ 52260000
*       ELSE                 /* MOUNT REQUEST                @ZA28964*/ 52280000
*         DO;                                              /*@ZA28964*/ 52300000
*           IF MEXTN ¬= '' THEN                            /*@ZA28964*/ 52320000
*             DO;            /* PROCESS MOUNT EXTENSION      @G18MB04*/ 52651000
*               ANS('MNTEXTP=ADDR' || MEXTN ||                          52700000
*                   ';/*FILL IN MEXTN @G18MB04*/')SKIP;                 52700400
*               ANS('MDMEXT='||QUOTE(MEXTVAL)||'B;/* SET'||             52701000
*                   ' THE MOUNT EXT PROVIDED BIT @G18MB04*/')SKIP;      52702000
*             END;           /* END PROCESS MOUNT EXTENSION  @G18MB04*/ 52703000
*           ELSE             /* PROCESS MOUNT JFCB           @ZA28964*/ 52704000
*             ANS('MDJFCB=ADDR' || MJFCB ||                             52754000
*                 ';/*FILL MDJFCB @G18MB04*/')SKIP;                     52804000
*         END;                                             /*@ZA28964*/ 52854000
*     END;                                                 /*@ZA28964*/ 52904000
*EXIT:                                                                  52954000
*   ANS('SVC  (126);/*INVOKE THE MSSC SVC  @Y30LB02*/')SKIP;            53004000
*   ANS('RFY  MDREG1 UNRSTD;/*UNREST REG 1 @Y30LB02*/')SKIP;            53054000
*   GO TO FINISH;            /* SKIP OVER THE ANSWER TEXTS   @ZA28964*/ 53104000
*/*                                                          @ZA28964*/ 53154000
*/********************************************************** @Y30LB02*/ 53204000
*/*          MACRO ANSWER TEXT - EACH BLOCK IS INVOKED       @ZA28964*/ 53254000
*/*          AT ONLY ONE POINT IN THE MACRO                  @ZA28964*/ 53304000
*/********************************************************** @Y30LB02*/ 53354000
*  LMNTINT:                                                             53404000
* ANS('/*******************************************'||                  53454000
*     '************** @Y30LB02*/')SKIP;                                 53504000
* ANS('/*MACMEAN  MSSC MOUNT MACRO                 '||                  53554000
*     '               @Y30LB02*/')SKIP;                                 53604000
* ANS('/*         VERSION - VS/2 REL 3    77/12/15 '||                  53654000
*     'LEVEL 04       @ZA28964*/')SKIP;                                 53704000
* ANS('/*THIS IS THE INITIALIZED LIST FORM         '||                  53754000
*     '               @Y30LB02*/')SKIP;                                 53804000
* ANS('/*******************************************'||                  53854000
*     '************** @Y30LB02*/')SKIP;                                 53904000
* ANS('DCL 1 ' ||MF(2)|| '  STATIC LOCAL,'||                            53954000
*     ' /*MOUNT REQUEST BLOCK @Y30LB02*/')SKIP;                         54004000
* ANS('    2  MDLEN  FIXED(31)INIT('||QUOTE('1C')||                     54054000
*     'X),/*LENGTH 0F REQ BLOCK @Y30LB02*/')SKIP;                       54104000
* ANS('    2  MDOPCD FIXED(8)INIT('||QUOTE('08')||                      54154000
*     'X),/*MOUNT OPCODE @Y30LB02*/')SKIP;                              54204000
* ANS('    2  MNTRES1 CHAR(1)INIT('||QUOTE('00')||                      54254000
*     'X), /*ONE BYTE OF ZERO @Y30LB02*/')SKIP;                         54304000
* ANS('    2  MDFLG BIT(16)INIT('||QUOTE                                54354000
*     ('0000000000000000')||'B), /*FLAGS AREA @Y30LB02*/')SKIP;         54404000
* ANS('    3  * BIT(1), /*RESERVED '||                                  54454000
*     ' @YD00125*/')SKIP;                                               54504000
* ANS('    3  MDVISMNT BIT(1), /*MSVC ISSUING'||                        54554000
*     ' THE MOUNT @Y30LB02*/')SKIP;                                     54604000
* ANS('    3  MDVSVRQ BIT(1), /*MSVC SECONDARY'||                       54654000
*     ' VOLUME REQUEST @Y30LB02*/')SKIP;                                54704000
* ANS('    3  MDSRTCH BIT(1), /*SCRATCH'||                              54754000
*     '  @Y30LB02*/')SKIP;                                              54804000
* ANS('    3  MDMEXT  BIT(1), /*MOUNT EXTENSION'||                      54854000
*     '  @G18MB04*/')SKIP;                                              54904000
* ANS('    3  *      BIT(11),'||                                        54954000
*     ' /* RESERVED BITS @G18MB04*/')SKIP;                              55004000
* ANS('    2  MDVOL  CHAR(6) , /*VOLID @Y30LB02*/')SKIP;                55054000
* ANS('     3  *(6) CHAR(1)INIT((6)'||QUOTE                             55104000
*     ('00')||'X),/*INIT VOLID AREA TO ZERO @Y30LB02*/')SKIP;           55154000
* ANS('    2  MDVUA  FIXED(15)INIT(0), /*VIRTUAL'||                     55204000
*     ' UNIT ADDRESS @Y30LB02*/')SKIP;                                  55254000
* ANS('    2  MDHOST CHAR(5),/*5-BYTES HOSTID '||                       55304000
*     'AREA @Y30LB02*/')SKIP;                                           55354000
* ANS('     3  *(5) CHAR(1) INIT((5)'||QUOTE                            55404000
*     ('00')||'X),/*INIT HOSTID AREA  @Y30LB02*/')SKIP;                 55454000
* ANS('    2  MNTRES2  CHAR(3) INIT('||QUOTE                            55504000
*     ('')||'B),/*INIT RESERVED AREA  @Y30LB02*/')SKIP;                 55554000
* ANS('    2  MNTEXTP PTR(31)INIT(0), /*ADDRESS'||                      55604000
*     ' OF MOUNT LIST EXTENSION @G18MB04*/')SKIP;                       55654000
* ANS('     3  MDJFCB PTR(31); /* ADDRESS'||                            55704000
*     ' OF JFCB @ZA28964*/')SKIP;                                       55754000
* ANS('DCL MNTLEN FIXED(31) DEF(MDLEN), /*BAL LABEL @ZA28964*/')SKIP;   55804000
* ANS('  MNTOPCD FIXED(8) DEF(MDOPCD), /*BAL LABEL @ZA28964*/')SKIP;    55854000
* ANS('  MNTFLAGS BIT(16) DEF(MDFLG), /*BAL LABEL @ZA28964*/')SKIP;     55904000
* ANS('  MNTVOLID CHAR(6) DEF(MDVOL), /*BAL LABEL @ZA28964*/')SKIP;     55954000
* ANS('  MNTVUA FIXED(15) DEF(MDVUA), /*BAL LABEL @ZA28964*/')SKIP;     56004000
* ANS('  MNTHOSTD CHAR(5) DEF(MDHOST), /*BAL LABEL @ZA28964*/')SKIP;    56054000
* ANS('  MNTJFCB FIXED(31) DEF(MDJFCB); /*BAL LABEL @ZA28964*/')SKIP;   56104000
*        GO TO FINISH;                                     /*@ZA28964*/ 56154000
*/*                                                          @ZA28964*/ 56204000
*  LDMTINT:                                                             56254000
* ANS('/*******************************************'||                  56304000
*     '************** @Y30LB02*/')SKIP;                                 56354000
* ANS('/*MACMEAN  MSSC DEMOUNT MACRO               '||                  56404000
*     '               @Y30LB02*/')SKIP;                                 56454000
* ANS('/*         VERSION - VS/2 REL 3  77/12/15   '||                  56504000
*     'LEVEL 04       @ZA28964*/')SKIP;                                 56554000
* ANS('/*THIS IS THE INITIALIZED LIST FORM         '||                  56604000
*     '               @Y30LB02*/')SKIP;                                 56654000
* ANS('/*******************************************'||                  56704000
*     '************** @Y30LB02*/')SKIP;                                 56754000
* ANS('DCL 1 ' ||MF(2)|| '  STATIC LOCAL,'||                            56804000
*     ' /*DEMOUNT REQUEST BLOCK @Y30LB02*/')SKIP;                       56854000
* ANS('    2  DMLEN  FIXED(31)INIT('||QUOTE('1C')||                     56904000
*     'X),/*LENGTH DEMOUNT REQUEST BLK @Y30LB02*/')SKIP;                56954000
* ANS('    2  DMOPCD FIXED(8)INIT('||QUOTE('06')||                      57004000
*     'X),/*DEMOUNT OPCODE @Y30LB02*/')SKIP;                            57054000
* ANS('    2  DMNTRES1  CHAR(1)INIT('||QUOTE                            57104000
*     ('00')||'X),/*INIT RESERVED AREA TO ZERO @Y30LB02*/')SKIP;        57154000
* ANS('    2  DMNTFLAG BIT(16)INIT('||QUOTE                             57204000
*     ('0000000000000000')||'B), /*FLAGS AREA @Y30LB02*/')SKIP;         57254000
* ANS('    3  DMBITRE1 BIT(1), /*ONE'||                                 57304000
*     ' RESERVED BIT @YM02186*/')SKIP;                                  57354000
* ANS('    3  DMDELRSP BIT(1), /*DEMOUNT '||                            57404000
*     'DELAYED RESPONSE ATTRIBUTE @YM02186*/')SKIP;                     57454000
* ANS('    3  DMVUAVAL BIT(1), /*DEMOUNT '||                            57504000
*     'VUA VALID ATTRIBUTE @ZDR2048*/')SKIP;                            57554000
* ANS('    3  DMBITRES BIT(13), /*THIRTEEN'||                           57604000
*     ' RESERVED BITS @ZDR2048*/')SKIP;                                 57654000
* ANS('    2  DMVOL CHAR(6) INIT('||QUOTE                               57704000
*     ('')||'B), /*INIT VOLID TO ZERO @Y30LB02*/')SKIP;                 57754000
* ANS('    2  DMNTASID  CHAR(2)INIT('||QUOTE                            57804000
*     ('')||'B),/*INIT ASID AREA TO ZERO @Y30LB02*/')SKIP;              57854000
* ANS('    2  DMNTECB  PTR(31)INIT(0), /*DEMOUNT'||                     57904000
*     ' EVENT CONTROL BLOCK @ZA28964*/')SKIP;                           57954000
* ANS('    2  DMHOST CHAR(5) INIT('||QUOTE                              58004000
*     ('')||'B),/*INIT HOSTID AREA  @Y30LB02*/')SKIP;                   58054000
* ANS('    2  DMNTRES2  CHAR(1)INIT('||QUOTE                            58104000
*     ('')||'B),/*INIT RESERVED AREA TO ZERO @ZDR2048*/')SKIP;          58154000
* ANS('    2  DMNTVUA   FIXED(15)INIT(0); /*VIRTUAL'||                  58204000
*     ' UNIT ADDRESS @ZDR2048*/')SKIP;                                  58254000
* ANS('DCL DMNTLEN  FIXED(31) DEF(DMLEN), /*BAL LABEL @ZA28964*/')SKIP; 58304000
* ANS('  DMVOLID CHAR(6) DEF(DMVOL), /*BAL LABEL @ZA28964*/')SKIP;      58354000
* ANS('  DMOPCODE FIXED(8) DEF(DMOPCD),/*BAL LABEL @ZA28964*/')SKIP;    58404000
* ANS('  DMHOSTID CHAR(5) DEF(DMHOST); /*BAL LABEL @ZA28964*/')SKIP;    58454000
*       GO TO FINISH;                                      /*@ZA28964*/ 58504000
*/*                                                          @ZA28964*/ 58554000
*  LMNTUN:                                                              58604000
* ANS('/*******************************************'||                  58654000
*     '************** @Y30LB02*/')SKIP;                                 58704000
* ANS('/*MACMEAN  MSSC MOUNT MACRO                 '||                  58754000
*     '               @Y30LB02*/')SKIP;                                 58804000
* ANS('/*         VERSION - VS/2 REL 3   77/12/15  '||                  58854000
*     'LEVEL 04       @ZA28964*/')SKIP;                                 58904000
* ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||                  58954000
*     '               @Y30LB02*/')SKIP;                                 59004000
* ANS('/*******************************************'||                  59054000
*     '************** @Y30LB02*/')SKIP;                                 59104000
* ANS('DCL 1 ' ||MF(2)||'  '||MF(3)||','||                              59154000
*     ' /*MOUNT REQUEST BLOCK @Y30LB02*/')SKIP;                         59204000
* ANS('    2  MDLEN  FIXED(31), /*LENGTH'||                             59254000
*     ' OF BLOCK = 1C HEX BYTES @Y30LB02*/')SKIP;                       59304000
* ANS('    2  MDOPCD FIXED(8), /*MOUNT'||                               59354000
*     ' OPCODE = 08 HEX @Y30LB02*/')SKIP;                               59404000
* ANS('    2  MNTRES1  CHAR(1),/*RESERVED @Y30LB02*/')SKIP;             59454000
* ANS('    2  MDFLG BIT(16) , /*FLAGS AREA @Y30LB02*/')SKIP;            59504000
* ANS('    3  * BIT(1), /*RESERVED '||                                  59554000
*     ' @YD00125*/')SKIP;                                               59604000
* ANS('    3  MDVISMNT BIT(1), /*MSVC ISSUING'||                        59654000
*     ' THE MOUNT @Y30LB02*/')SKIP;                                     59704000
* ANS('    3  MDVSVRQ BIT(1), /*MSVC SECONDARY'||                       59754000
*     ' VOLUME REQUEST @Y30LB02*/')SKIP;                                59804000
* ANS('    3  MDSRTCH BIT(1), /*SCRATCH'||                              59854000
*     '  @Y30LB02*/')SKIP;                                              59904000
* ANS('    3  MDMEXT  BIT(1), /*MOUNT EXTENSION'||                      59954000
*     '  @G18MB04*/')SKIP;                                              60004000
* ANS('    3  *      BIT(11),'||                                        60054000
*     ' /* RESERVED BITS @YD00125*/')SKIP;                              60104000
* ANS('    2  MDVOL  CHAR(6) , /*VOLID @Y30LB02*/')SKIP;                60154000
* ANS('    2  MDVUA  FIXED(15), /*VIRTUAL'||                            60204000
*     ' UNIT ADDRESS @Y30LB02*/')SKIP;                                  60254000
* ANS('    2  MDHOST CHAR(5),/*5-BYTES HOSTID '||                       60304000
*     'AREA @Y30LB02*/')SKIP;                                           60354000
* ANS('    2  MNTRES2  CHAR(3) , /*RESERVED @Y30LB02*/')SKIP;           60404000
* ANS('    2  MNTEXTP PTR(31), /*ADDRESS'||                             60454000
*     ' OF MOUNT LIST EXTENSION @G18MB04*/')SKIP;                       60504000
* ANS('     3  MDJFCB PTR(31); /* ADDRESS'||                            60554000
*     ' OF JFCB @ZA28964*/')SKIP;                                       60604000
* ANS('DCL MNTLEN FIXED(31) DEF(MDLEN), /*BAL LABEL @ZA28964*/')SKIP;   60654000
* ANS('  MNTOPCD FIXED(8) DEF(MDOPCD), /*BAL LABEL @ZA28964*/')SKIP;    60704000
* ANS('  MNTFLAGS BIT(16) DEF(MDFLG), /*BAL LABEL @ZA28964*/')SKIP;     60754000
* ANS('  MNTVOLID CHAR(6) DEF(MDVOL), /*BAL LABEL @ZA28964*/')SKIP;     60804000
* ANS('  MNTVUA FIXED(15) DEF(MDVUA), /*BAL LABEL @ZA28964*/')SKIP;     60854000
* ANS('  MNTHOSTD CHAR(5) DEF(MDHOST), /*BAL LABEL @ZA28964*/')SKIP;    60904000
* ANS('  MNTJFCB FIXED(31) DEF(MDJFCB); /*BAL LABEL @ZA28964*/')SKIP;   60954000
*        GO TO FINISH;                                     /*@ZA28964*/ 61004000
*/*                                                          @ZA28964*/ 61054000
*  LDMTUN:                                                              61104000
* ANS('/*******************************************'||                  61154000
*     '************** @Y30LB02*/')SKIP;                                 61204000
* ANS('/*MACMEAN  MSSC DEMOUNT MACRO               '||                  61254000
*     '               @Y30LB02*/')SKIP;                                 61304000
* ANS('/*         VERSION - VS/2 REL 3    77/12/15 '||                  61354000
*     'LEVEL 04       @ZA28964*/')SKIP;                                 61404000
* ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||                  61454000
*     '               @Y30LB02*/')SKIP;                                 61504000
* ANS('/*******************************************'||                  61554000
*     '************** @Y30LB02*/')SKIP;                                 61604000
* ANS('DCL 1 ' ||MF(2)||'  '||MF(3)||','||                              61654000
*     ' /*DEMOUNT REQUEST BLOCK @Y30LB02*/')SKIP;                       61704000
* ANS('    2  DMLEN  FIXED(31),/*LENGTH OF'||                           61754000
*     ' DEMOUNT REQ BLK = 1C HEX BYTES @Y30LB02*/')SKIP;                61804000
* ANS('    2  DMOPCD FIXED(8),/*DEMOUNT'||                              61854000
*     ' OPCODE = 06 HEX @Y30LB02*/')SKIP;                               61904000
* ANS('    2  DMNTRES1 CHAR(1), /*RESERVED @Y30LB02*/')SKIP;            61954000
* ANS('    2  DMNTFLAG BIT(16),/*FLAGS AREA @Y30LB02*/')SKIP;           62004000
* ANS('    3  DMBITRE1 BIT(1), /*ONE'||                                 62054000
*     ' RESERVED BIT @YM02186*/')SKIP;                                  62104000
* ANS('    3  DMDELRSP BIT(1), /*DEMOUNT '||                            62154000
*     'DELAYED RESPONSE ATTRIBUTE @YM02186*/')SKIP;                     62204000
* ANS('    3  DMVUAVAL BIT(1), /*DEMOUNT '||                            62254000
*     'VUA VALID ATTRIBUTE @ZDR2048*/')SKIP;                            62304000
* ANS('    3  DMBITRES BIT(13), /*THIRTEEN'||                           62354000
*     ' RESERVED BITS @ZDR2048*/')SKIP;                                 62404000
* ANS('    2  DMVOL CHAR(6), /* VOLID FIELD @Y30LB02*/')SKIP;           62454000
* ANS('    2  DMNTASID CHAR(2), /*ASID AREA @Y30LB02*/')SKIP;           62504000
* ANS('    2  DMNTECB  PTR(31),/*DEMOUNT'||                             62554000
*     ' EVENT CONTROL BLOCK @ZA28964*/')SKIP;                           62604000
* ANS('    2  DMHOST CHAR(5),/*5-BYTE HOSTID '||                        62654000
*     'AREA @Y30LB02*/')SKIP;                                           62704000
* ANS('    2  DMNTRES2 CHAR(1), /*RESERVED @ZDR2048*/')SKIP;            62754000
* ANS('    2  DMNTVUA  FIXED(15); /*VIRTUAL'||                          62804000
*     ' UNIT ADDRESS @ZDR2048*/')SKIP;                                  62854000
* ANS('DCL DMNTLEN  FIXED(31) DEF(DMLEN), /*BAL LABEL @ZA28964*/')SKIP; 62904000
* ANS('  DMVOLID CHAR(6) DEF(DMVOL), /*BAL LABEL @ZA28964*/')SKIP;      62954000
* ANS('  DMOPCODE FIXED(8) DEF(DMOPCD),/*BAL LABEL @ZA28964*/')SKIP;    63004000
* ANS('  DMHOSTID CHAR(5) DEF(DMHOST); /*BAL LABEL @ZA28964*/')SKIP;    63054000
*        GO TO FINISH;                                     /*@ZA28964*/ 63104000
*/*                                                          @ZA28964*/ 63154000
*  EMNTDMT:                                                             63204000
* ANS('/*******************************************'||                  63254000
*     '************** @Y30LB02*/')SKIP;                                 63304000
* ANS('/*MACMEAN  MSSC MOUNT/DEMOUNT MACRO         '||                  63354000
*     '               @Y30LB02*/')SKIP;                                 63404000
* ANS('/*         VERSION - VS/2 REL 3   77/12/15  '||                  63454000
*     'LEVEL 04       @ZA28964*/')SKIP;                                 63504000
* ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '||                  63554000
*     '               @Y30LB02*/')SKIP;                                 63604000
* ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '||                  63654000
*     '               @Y30LB02*/')SKIP;                                 63704000
* ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'||                  63754000
*     '               @Y30LB02*/')SKIP;                                 63804000
* ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '||                  63854000
*     '               @Y30LB02*/')SKIP;                                 63904000
* ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '||                  63954000
*     '               @Y30LB02*/')SKIP;                                 64004000
* ANS('/*******************************************'||                  64054000
*     '************** @Y30LB02*/')SKIP;                                 64104000
* ANS('RFY  MDREG1 RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;              64154000
* ANS('MDREG1= ADDR('||MF(2)||'); /*R1'||                               64204000
*     ' PTR TO REQ BLOCK @Y30LB02*/')SKIP;                              64254000
* GO TO EMNTDMTR;            /* RETURN TO CALLING POINT      @ZA28964*/ 64304000
*/*                                                          @ZA28964*/ 64354000
* SSMNT:                                                                64404000
* ANS('/*******************************************'||                  64454000
*     '************** @Y30LB02*/')SKIP;                                 64504000
* ANS('/*MACMEAN  MSSC MOUNT MACRO                 '||                  64554000
*     '               @Y30LB02*/')SKIP;                                 64604000
* ANS('/*         VERSION - VS/2 REL 3   77/12/15  '||                  64654000
*     'LEVEL 04       @ZA28964*/')SKIP;                                 64704000
* ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '||                  64754000
*     '               @Y30LB02*/')SKIP;                                 64804000
* ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||                  64854000
*     '               @Y30LB02*/')SKIP;                                 64904000
* ANS('/*******************************************'||                  64954000
*     '************** @Y30LB02*/')SKIP;                                 65004000
* ANS('RFY  MDREG1 RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;              65054000
* ANS('MDREG1=ADDR(MDLEN);/*PTR TO LIST @Y30LB02*/')SKIP;               65104000
* GO TO COMPROC;                 /* GO FILL IN BLOCK         @ZA28964*/ 65154000
*/*                                                          @ZA28964*/ 65204000
* SIMNT:                                                                65254000
* ANS('/*******************************************'||                  65304000
*     '************** @Y30LB02*/')SKIP;                                 65354000
* ANS('/*MACMEAN  MSSC MOUNT MACRO                 '||                  65404000
*     '               @Y30LB02*/')SKIP;                                 65454000
* ANS('/*         VERSION - VS/2 REL 3   77/12/15  '||                  65504000
*     'LEVEL 04       @ZA28964*/')SKIP;                                 65554000
* ANS('/*THIS IS THE STANDARD FORM - MOUNT MACRO   '||                  65604000
*     '               @Y30LB02*/')SKIP;                                 65654000
* ANS('/*******************************************'||                  65704000
*     '************** @Y30LB02*/')SKIP;                                 65754000
* ANS('RFY  MDREG1 RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;              65804000
* ANS('MDREG1=ADDR(MDLEN);/*R1 PTR TO REQBLK @Y30LB02*/')SKIP;          65854000
* ANS('DCL 1  ICBMLST  STATIC LOCAL,'||                                 65904000
*     ' /*MOUNT REQUEST BLOCK @Y30LB02*/')SKIP;                         65954000
* ANS('    2  MDLEN  FIXED(31)INIT('||QUOTE('1C')||                     66004000
*     'X),/*LENGTH OF MOUNT REQ BLK @Y30LB02*/')SKIP;                   66054000
* ANS('    2  MDOPCD FIXED(8)INIT('||QUOTE('08')||                      66104000
*     'X),/*MOUNT OPCODE @Y30LB02*/')SKIP;                              66154000
* ANS('    2  *    CHAR(1) INIT('||QUOTE('00')||                        66204000
*     'X) ,/*RESERVED @Y30LB02*/')SKIP;                                 66254000
* ANS('    2  MDFLG BIT(16)INIT('||QUOTE                                66304000
*     ('0000000000000000')||'B),/*FLAGS AREA @Y30LB02*/')SKIP;          66354000
* ANS('    3  * BIT(1), /* RESERVED '||                                 66404000
*     ' @YD00125*/')SKIP;                                               66454000
* ANS('    3  MDVISMNT BIT(1), /*MSVC ISSUING'||                        66504000
*     ' THE MOUNT @Y30LB02*/')SKIP;                                     66554000
* ANS('    3  MDVSVRQ BIT(1), /*MSVC SECONDARY'||                       66604000
*     ' VOLUME REQUEST @Y30LB02*/')SKIP;                                66654000
* ANS('    3  MDSRTCH BIT(1), /*SCRATCH'||                              66704000
*     '  @Y30LB02*/')SKIP;                                              66754000
* ANS('    3  MDMEXT  BIT(1), /*MOUNT EXTENSION'||                      66804000
*     '  @G18MB04*/')SKIP;                                              66854000
* ANS('    3  *      BIT(11),'||                                        66904000
*     ' /*RESERVE BITS OF ZERO @Y30LB02*/')SKIP;                        66954000
* ANS('    2  MDVOL CHAR(6),/*VOLUME ID @Y30LB02*/')SKIP;               67004000
* ANS('     3  *(6) CHAR(1) INIT((6)'||QUOTE                            67054000
*     ('00')||'X),/*INIT VOLID AREA TO ZERO @Y30LB02*/')SKIP;           67104000
* ANS('    2  MDVUA  FIXED(15) INIT(0),/*VIRTUAL '||                    67154000
*     'UNIT ADDRESS @Y30LB02*/')SKIP;                                   67204000
* ANS('    2  MDHOST CHAR(5),/*5-BYTE HOSTID '||                        67254000
*     'AREA @Y30LB02*/')SKIP;                                           67304000
* ANS('     3  *(5) CHAR(1) INIT((5)'||QUOTE                            67354000
*     ('00')||'X),/*INIT HOSTID AREA  @Y30LB02*/')SKIP;                 67404000
* ANS('    2  * CHAR(3),/*2-BYTE RESERVED '||                           67454000
*     'AREA @Y30LB02*/')SKIP;                                           67504000
* ANS('     3  *(3) CHAR(1) INIT((3)'||QUOTE                            67554000
*     ('00')||'X),/*INIT RESERVED AREA  @Y30LB02*/')SKIP;               67604000
* ANS('    2  MNTEXTP PTR(31) INIT(0),/*ADDRESS '||                     67654000
*     'OF MOUNT LIST EXTENSION @G18MB04*/')SKIP;                        67704000
* ANS('     3  MDJFCB PTR(31); /* ADDRESS'||                            67754000
*     ' OF JFCB @ZA28964*/')SKIP;                                       67804000
* ANS('DCL MNTLEN FIXED(31) DEF(MDLEN), /*BAL LABEL @ZA28964*/')SKIP;   67854000
* ANS('  MNTOPCD FIXED(8) DEF(MDOPCD), /*BAL LABEL @ZA28964*/')SKIP;    67904000
* ANS('  MNTFLAGS BIT(16) DEF(MDFLG), /*BAL LABEL @ZA28964*/')SKIP;     67954000
* ANS('  MNTVOLID CHAR(6) DEF(MDVOL), /*BAL LABEL @ZA28964*/')SKIP;     68004000
* ANS('  MNTVUA FIXED(15) DEF(MDVUA), /*BAL LABEL @ZA28964*/')SKIP;     68054000
* ANS('  MNTHOSTD CHAR(5) DEF(MDHOST), /*BAL LABEL @ZA28964*/')SKIP;    68104000
* ANS('  MNTJFCB FIXED(31) DEF(MDJFCB); /*BAL LABEL @ZA28964*/')SKIP;   68154000
*        GO TO COMPROC;          /* GO FILL IN BLOCK         @ZA28964*/ 68204000
*/*                                                          @ZA28964*/ 68254000
* SSDMT:                                                                68304000
* ANS('/*******************************************'||                  68354000
*     '************** @Y30LB02*/')SKIP;                                 68404000
* ANS('/*MACMEAN  MSSC DEMOUNT MACRO               '||                  68454000
*     '               @Y30LB02*/')SKIP;                                 68504000
* ANS('/*         VERSION - VS/2 REL 3   77/12/15  '||                  68554000
*     'LEVEL 04       @ZA28964*/')SKIP;                                 68604000
* ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '||                  68654000
*     '               @Y30LB02*/')SKIP;                                 68704000
* ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||                  68754000
*     '               @Y30LB02*/')SKIP;                                 68804000
* ANS('/*******************************************'||                  68854000
*     '************** @Y30LB02*/')SKIP;                                 68904000
* ANS('RFY  MDREG1 RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;              68954000
* ANS('MDREG1=ADDR(DMLEN);/*PTR TO REQ BLK @Y30LB02*/')SKIP;            69004000
* GO TO COMPROC;                 /* GO FILL IN BLOCK         @ZA28964*/ 69054000
*/*                                                          @ZA28964*/ 69104000
* SIDMT:                                                                69154000
* ANS('/*******************************************'||                  69204000
*     '************** @Y30LB02*/')SKIP;                                 69254000
* ANS('/*MACMEAN  MSSC DEMOUNT MACRO               '||                  69304000
*     '               @Y30LB02*/')SKIP;                                 69354000
* ANS('/*         VERSION - VS/2 REL 3   77/12/15  '||                  69404000
*     'LEVEL 04       @ZA28964*/')SKIP;                                 69454000
* ANS('/*THIS IS THE STANDARD FORM - DEMOUNT MACRO '||                  69504000
*     '               @Y30LB02*/')SKIP;                                 69554000
* ANS('/*******************************************'||                  69604000
*     '************** @Y30LB02*/')SKIP;                                 69654000
* ANS('RFY  MDREG1 RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;              69704000
* ANS('MDREG1=ADDR(DMLEN);/*R1 PTR TO LIST @Y30LB02*/')SKIP;            69754000
* ANS('DCL 1 ICBDMLST  STATIC LOCAL,'||                                 69804000
*     ' /*DEMOUNT REQUEST BLOCK @Y30LB02*/')SKIP;                       69854000
* ANS('    2 DMLEN  FIXED(31)INIT('||QUOTE('1C')||                      69904000
*     'X),/*LENGTH OF DEMOUNT BLOCK @Y30LB02*/')SKIP;                   69954000
* ANS('    2 DMOPCD FIXED(8)INIT('||QUOTE('06')||                       70004000
*     'X),/*DEMOUNT OPCODE @Y30LB02*/')SKIP;                            70054000
* ANS('    2  DMNTRES1  CHAR(1)INIT('||QUOTE                            70104000
*     ('00')||'X),/*INIT RESERVED AREA TO ZERO @YM02186*/')SKIP;        70154000
* ANS('    2  DMNTFLAG BIT(16)INIT('||QUOTE                             70204000
*     ('0000000000000000')||'B), /*FLAGS AREA @YM02186*/')SKIP;         70254000
* ANS('    3  DMBITRE1 BIT(1), /*ONE'||                                 70304000
*     ' RESERVED BIT @YM02186*/')SKIP;                                  70354000
* ANS('    3  DMDELRSP BIT(1), /*DEMOUNT '||                            70404000
*     'DELAYED RESPONSE ATTRIBUTE @Y30LB02*/')SKIP;                     70454000
* ANS('    3  DMVUAVAL BIT(1), /*DEMOUNT '||                            70504000
*     'VUA VALID ATTRIBUTE @ZDR2048*/')SKIP;                            70554000
* ANS('    3  DMBITRES BIT(13), /*THIRTEEN'||                           70604000
*     ' RESERVED BITS @ZDR2048*/')SKIP;                                 70654000
* ANS('    2  DMVOL CHAR(6) INIT('||QUOTE                               70704000
*     ('')||'B), /*INIT VOLID TO ZERO @Y30LB02*/')SKIP;                 70754000
* ANS('    2  DMNTASID  CHAR(2)INIT('||QUOTE                            70804000
*     ('')||'B),/*INIT ASID AREA TO ZERO @Y30LB02*/')SKIP;              70854000
* ANS('    2  DMNTECB  PTR(31)INIT(0), /*DEMOUNT'||                     70904000
*     ' EVENT CONTROL BLOCK @ZA28964*/')SKIP;                           70954000
* ANS('    2  DMHOST CHAR(5) INIT('||QUOTE                              71004000
*     ('')||'B),/*INIT HOSTID AREA  @Y30LB02*/')SKIP;                   71054000
* ANS('    2  DMNTRES2  CHAR(1)INIT('||QUOTE                            71104000
*     ('')||'B),/*INIT RESERVED AREA TO ZERO @ZDR2048*/')SKIP;          71154000
* ANS('    2  DMNTVUA   FIXED(15)INIT(0); /*VIRTUAL'||                  71204000
*     ' UNIT ADDRESS @ZDR2048*/')SKIP;                                  71254000
* ANS('DCL DMNTLEN  FIXED(31) DEF(DMLEN), /*BAL LABEL @ZA28964*/')SKIP; 71304000
* ANS('  DMVOLID CHAR(6) DEF(DMVOL), /*BAL LABEL @ZA28964*/')SKIP;      71354000
* ANS('  DMOPCODE FIXED(8) DEF(DMOPCD),/*BAL LABEL @ZA28964*/')SKIP;    71404000
* ANS('  DMHOSTID CHAR(5) DEF(DMHOST); /*BAL LABEL @ZA28964*/')SKIP;    71454000
*        GO TO COMPROC;          /* GO FILL IN BLOCK         @ZA28964*/ 71504000
*/*                                                          @ZA28964*/ 71554000
*/*                                                          @Y30LB02*/ 71604000
*FINISH:  RETURN CODE(RETCODE);    /*SET RETURN CODE         @Y30LB02*/ 71654000
*         %END;                                            /*@Y30LB02*/ 71704000
./  ADD  SSI=62730374,NAME=ICBMODC
* %/* START OF SPECIFICATIONS  ***                           @G24LB22   17250000
*                                                            @G24LB22   17300000
*01*  MODULE-NAME = ICBMODC                                  @G24LB22   17350000
*                                                            @G24LB22   17400000
*01*  DESCRIPTIVE-NAME = MODIFY CARTRIDGE                    @G24LB22   17450000
*                                                            @G24LB22   17500000
*01*  COPYRIGHT = NONE                                       @G24LB22   17550000
*                                                            @G24LB22   17600000
*01*  STATUS =  OS/VS2                                       @G24LB22   17650000
*                                                            @G24LB22   17700000
*01*  FUNCTION = BUILDS A REQUEST BLOCK FOR A MODIFYC        @G24LB22   17750000
*                REQUEST.  THE MACRO IS A COMMUNICATION LINK @G24LB22   17800000
*                BETWEEN THE CALLER AND THE MSSC SVC MODULE. @G24LB22   17850000
*                                                            @G24LB22   17900000
*01*  NOTES = ICBMODC IS CODED IN PLS ONLY.                  @G24LB22   17950000
*                                                            @G24LB22   18000000
*02*    DEPENDENCIES = NONE                                  @G24LB22   18050000
*                                                            @G24LB22   18100000
*02*    RESTRICTIONS = THE PREFIXES ICB AND MOD SHOULD BE    @G24LB22   18150000
*                      AVOIDED WHEN INVOKING THIS MACRO.     @G24LB22   18200000
*                                                            @G24LB22   18250000
*02*    REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF         @G24LB22   18300000
*                              REGISTERS BY MACROS:          @G24LB22   18350000
*                              R0,R1,R14, AND R15.           @G24LB22   18400000
*                                                            @G24LB22   18450000
*01*  MODULE-TYPE = MACRO                                    @G24LB22   18500000
*                                                            @G24LB22   18550000
*02*    PROCESSOR = PLS2                                     @G24LB22   18600000
*                                                            @G24LB22   18650000
*01*  INPUT = PARAMETERS SPECIFIED ON THE PLS MACRO          @G24LB22   18700000
*             INVOCATION.                                    @G24LB22   18750000
*                                                            @G24LB22   18800000
*                                                            @G24LB22   18850000
*     MACRO SYNTAX                                           @G24LB22   18900000
*                                                            @G24LB22   18950000
*     LIST FORM                                              @G24LB22   19000000
*                                                            @G24LB22   19050000
*     VERB        REQUIRED PARMS             OPTIONAL PARMS  @G24LB22   19100000
*                                                            @G24LB22   19150000
*     ICBMODC     MF(L,NAMEÝ,ATTRIBUTE¨)                     @G24LB22   19200000
*                                                            @G24LB22   19250000
*     EXECUTE FORM                                           @G24LB22   19300000
*                                                            @G24LB22   19350000
*     VERB        REQUIRED PARMS             OPTIONAL PARMS  @G24LB22   19400000
*                                                            @G24LB22   19450000
*     ICBMODC     MF(E,NAME)                                 @G24LB22   19500000
*                                           Ý,COMPLETE¨)     @G24LB22   19550000
*                                           ATTR1(NAME)      @G24LB22   19600000
*                                           ATTR2(NAME)      @G24LB22   19650000
*                                           VOLID(NAME)      @G24LB22   19700000
*                                           LOC1(NAME)       @G24LB22   19750000
*                                           CSN(NAME)        @G24LB22   19800000
*                                           NVOLID(NAME)     @G24LB22   19850000
*                                           LOC2(NAME)       @G24LB22   19900000
*                                           CSNPAIR(NAME)    @G24LB22   19950000
*                                           VOLFLG(NAME)     @G24LB22   20000000
*                                           SEQNO(NAME)      @G24LB22   20050000
*                                                            @G24LB22   20100000
*     KEYWORD PARAMETERS:                                    @G24LB22   20150000
*                                                            @G24LB22   20200000
*     MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE      @G24LB22   20250000
*            MACRO FORMAT AND MAY GIVE THE ADDRESS OR        @G24LB22   20300000
*            ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK   @G24LB22   20350000
*            IS STORED.                                      @G24LB22   20400000
*                                                            @G24LB22   20450000
*            L - LIST FORM:  THE EXPANSION OF THE L-FORM     @G24LB22   20500000
*                MACRO WILL RESULT IN AN UNINITIALIZED       @G24LB22   20550000
*                REQUEST BLOCK.                              @G24LB22   20600000
*                                                            @G24LB22   20650000
*            (1) NAME - THE MACRO INVOKER MUST SPECIFY A     @G24LB22   20700000
*                NAME FOR HIS STRUCTURE WHEN INVOKING THE    @G24LB22   20750000
*                PLS LIST FORM.                              @G24LB22   20800000
*                                                            @G24LB22   20850000
*            (2) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS    @G24LB22   20900000
*                ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION @G24LB22   20950000
*                IN AN UNINITIALIZED REQUEST BLOCK.          @G24LB22   21000000
*                ATTRIBUTE EXAMPLE:                          @G24LB22   21050000
*                                                            @G24LB22   21100000
*                CHAR, FIXED, STATIC LOCAL, NONLOCAL,        @G24LB22   21150000
*                BASED(*), ETC.                              @G24LB22   21200000
*                                                            @G24LB22   21250000
*            E - EXECUTABLE FORM:  THE EXPANSION OF THIS     @G24LB22   21300000
*                FORM CONSISTS OF A LINKAGE INSTRUCTION AND  @G24LB22   21350000
*                POSSIBLY, PARAMETER BINDING INSTRUCTIONS.   @G24LB22   21400000
*                                                            @G24LB22   21450000
*                SUB-PARAMETERS                              @G24LB22   21500000
*                (1)  AN E MUST BE SPECIFIED IN THE FIRST    @G24LB22   21550000
*                     SUB-PARAMETER POSITION.  THIS          @G24LB22   21600000
*                     INDICATES THAT THE MACRO IS IN         @G24LB22   21650000
*                     EXECUTABLE FORM.                       @G24LB22   21700000
*                                                            @G24LB22   21750000
*                (2)  A NAME MUST BE SPECIFIED IN THE SECOND @G24LB22   21800000
*                     SUB-PARAMETER.                         @G24LB22   21850000
*                                                            @G24LB22   21900000
*                (3)  'COMPLETE' - COMPLETE WILL CAUSE THE   @G24LB22   21950000
*                     MACRO TO ZERO OUT THE REQUEST BLOCK.   @G24LB22   22000000
*                     AFTER ZEROING THE REQUEST BLOCK THE    @G24LB22   22050000
*                     FUNCTION OPCODE AND LENGTH ARE         @G24LB22   22100000
*                     PLACED IN THE REQUEST BLOCK.           @G24LB22   22150000
*                                                            @G24LB22   22200000
*                                                            @G24LB22   22250000
*                REQUEST          | ORDER    | CODE          @G24LB22   22300000
*                --------------------------------------      @G24LB22   22350000
*                MODIFYC          | HEX'11'  | N/A           @G24LB22   22400000
*                                                            @G24LB22   22450000
*                                                            @G24LB22   22500000
*01*  EXIT-NORMAL = VALID INVOCATION                         @G24LB22   22550000
*                                                            @G24LB22   22600000
*02*    CONDITION = RETURN CODE = 0.                         @G24LB22   22650000
*                 = RETURN CODE = 4.                         @G24LB22   22700000
*                                                            @G24LB22   22750000
*02*    OUTPUT = IN-LINE PLS STATEMENTS THAT PERFORM THE     @G24LB22   22800000
*                REQUESTED FUNCTION.                         @G24LB22   22850000
*              = A WARNING MESSAGE WILL BE PRINTED, AND      @G24LB22   22900000
*                THE EXPANSION WILL CONTINUE.                @G24LB22   22950000
*                                                            @G24LB22   23000000
*01*  EXIT-ERROR = INVALID INVOCATION                        @G24LB22   23050000
*                                                            @G24LB22   23100000
*02*    CONDITION = RETURN CODE = 12.                        @G24LB22   23150000
*                                                            @G24LB22   23200000
*02*    OUTPUT = ERROR MESSAGE                               @G24LB22   23250000
*                                                            @G24LB22   23300000
*01*  EXTERNAL-REFERENCES = NONE                             @G24LB22   23350000
*                                                            @G24LB22   23400000
*01*  TABLES = NONE                                          @G24LB22   23450000
*                                                            @G24LB22   23500000
*01*  MESSAGES = AS FOLLOWS:                                 @G24LB22   23550000
*                                                            @G24LB22   23600000
*            ICB602I:  A NAME FOR THE REQUEST BLOCK MUST     @G24LB22   23650000
*                      BE SPECIFIED IN MF(2)                 @G24LB22   23700000
*            ICB604I:  WARNING - ONLY MF PARAMETER IS VALID  @G24LB22   23750000
*                      FOR LIST FORM                         @G24LB22   23800000
*            ICB612I:  MF(2) MUST CONTAIN REQ BLK NAME       @G24LB22   23850000
*                      IF EXEC MACRO FORM REQUESTED          @G24LB22   23900000
*            ICB620I:  INVALID MF PARAMETER SPECIFIED,       @G24LB22   23950000
*                      MUST BE L  OR E.                      @G24LB22   24000000
*                                                            @G24LB22   24050000
*01*  INNER-MACRO = NONE                                     @G24LB22   24100000
*                                                            @G24LB22   24150000
*01*  SYSTEM-MACRO = NONE                                    @G24LB22   24200000
*                                                            @G24LB22   24250000
*01*  CHANGE-ACTIVITY = NONE                                 @G24LB22   24300000
*                                                            @G24LB22   24350000
**** END OF SPECIFICATIONS ***                               @G24LB22*/ 24400000
*                                                          /*@G24LB22*/ 24450000
*          ICBMODC: MACRO KEYS(MF,ATTR1,ATTR2,VOLID,LOC1,               24500000
*                              CSN,NVOLID,LOC2,CSNPAIR,                 24550000
*                              VOLFLG,SEQNO);              /*@G24LB22*/ 24600000
*/* EXTERNAL DECLARES                                        @G24LB22*/ 24650000
*   DCL MODTSTR1 FIXED EXT;            /*USED AS A TEST TO   @G24LB22*/ 24700000
*                                      /*SEE IF R1 ALREADY   @G24LB22*/ 24750000
*                                      /*DECLARED            @G24LB22*/ 24800000
*/* INTERNAL DECLARES                                        @G24LB22*/ 24850000
*   DCL  RETCODE FIXED;                /*RETURN CODE         @G24LB22*/ 24900000
*   DCL  MODCODE CHAR;                 /*MODIFYC ORDER       @G24LB22*/ 24950000
*   DCL  LENGTH CHAR;                  /*LENGTH OF BLOCK     @G24LB22*/ 25000000
*   DCL  ESW FIXED;                    /*EXIT-SWITCH         @G24LB22*/ 25050000
*   DCL  BSW FIXED;                    /*BRCH-SWITCH         @G24LB22*/ 25100000
*   DCL  CTR FIXED;                    /*PARM-SWITCH         @G24LB22*/ 25150000
*/* INITIALIZE SWITCHES AND FIELDS                           @G24LB22*/ 25200000
*   ESW=0;                             /*INIT ERROR SWITCH   @G24LB22*/ 25250000
*   BSW=0;                             /*INIT BRANCH SWITCH  @G24LB22*/ 25300000
*   CTR=0;                             /*INIT PARM  SWITCH   @G24LB22*/ 25350000
*   MODCODE='11';                      /*ORDER CODE          @G24LB22*/ 25400000
*   LENGTH='34';                       /*REQ BLK LEN         @G24LB22*/ 25450000
*/* END OF DECLARES AND INITIALIZATION                       @G24LB22*/ 25500000
*   IF MODTSTR1=0 THEN                 /*HAS R1 BEEN DCL'D?  @G24LB22*/ 25550000
*             DO;                      /*NO,DECLARE IT       @G24LB22*/ 25600000
*                  ANS('DCL MODBR1 PTR REG(1) ;'||                      25650000
*                       '/*WILL CONTAIN BLOCK ADDRESS @G24LB22*/')      25700000
*                       SKIP(1);                           /*@G24LB22*/ 25750000
*                  MODTSTR1=1;         /*MODTSTR1 SET TO 1   @G24LB22*/ 25800000
*             END;                     /*                    @G24LB22*/ 25850000
*   IF MF(1)¬='L' THEN                 /*IF NOT LIST FORM    @G24LB22*/ 25900000
*        GO TO EXCHECK;                /*THEN BRANCH         @G24LB22*/ 25950000
*   IF MF(2)='' THEN                   /*WAS A NAME GIVEN?   @G24LB22*/ 26000000
*        DO;                           /*NO,TURN ESW ON AND  @G24LB22*/ 26050000
*             ESW=1;                   /*PRINT ERROR MSG     @G24LB22*/ 26100000
*             ANS MSG('  ICB602I - A NAME FOR THE '||                   26150000
*                  'REQUEST BLOCK MUST BE SPECIFIED '||                 26200000
*                  'IN MF(2)')SKIP(5);                     /*@G24LB22*/ 26250000
*             RETCODE=12;              /*SET RETURN CODE     @G24LB22*/ 26300000
*        END;                          /*                    @G24LB22*/ 26350000
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/ 26400000
*        GO TO EXIT;                   /*YES, BRANCH         @G24LB22*/ 26450000
*        IF ATTR1 ¬= '' THEN  /*ATTR1 SPECIFIED?             @G24LB22*/ 26500000
*             CTR = CTR + 1;  /*YES,INCREMENT CTR            @G24LB22*/ 26550000
*        IF ATTR2 ¬= '' THEN  /*ATTR2 SPECIFIED?             @G24LB22*/ 26600000
*             CTR = CTR + 1;  /*YES,INCREMENT CTR            @G24LB22*/ 26650000
*        IF VOLID ¬= '' THEN  /*VOLID SPECIFIED?             @G24LB22*/ 26700000
*             CTR = CTR + 1; /*YES,INCREMENT COUNTER         @G24LB22*/ 26750000
*        IF LOC1 ¬= '' THEN    /*LOC1 SPECIFIED?             @G24LB22*/ 26800000
*             CTR = CTR + 1;  /*YES,INCREMENT COUNTER        @G24LB22*/ 26850000
*        IF CSN ¬= '' THEN    /*CSN SPECIFIED?               @G24LB22*/ 26900000
*             CTR = CTR + 1;  /*YES,INCREMENT COUNTER        @G24LB22*/ 26950000
*        IF NVOLID ¬= '' THEN  /*NVOLID SPECIFIED?           @G24LB22*/ 27000000
*             CTR = CTR + 1; /*YES,INCREMENT COUNTER         @G24LB22*/ 27050000
*        IF LOC2 ¬= '' THEN    /*LOC2 SPECIFIED?             @G24LB22*/ 27100000
*             CTR = CTR + 1;  /*YES,INCREMENT COUNTER        @G24LB22*/ 27150000
*        IF CSNPAIR ¬= '' THEN  /*CSNPAIR SPECIFIED?         @G24LB22*/ 27200000
*             CTR = CTR + 1; /*YES,INCREMENT COUNTER         @G24LB22*/ 27250000
*        IF VOLFLG ¬= '' THEN  /*VOLFLG SPECIFIED?           @G24LB22*/ 27300000
*             CTR = CTR + 1; /*YES,INCREMENT COUNTER         @G24LB22*/ 27350000
*        IF SEQNO ¬= '' THEN  /*SEQNO SPECIFIED?             @G24LB22*/ 27400000
*             CTR = CTR + 1; /*YES,INCREMENT COUNTER         @G24LB22*/ 27450000
*        IF CTR > 0 THEN      /*COUNTER GT ZERO?             @G24LB22*/ 27500000
*          DO;                /*YES,PRINT WARNING MSG        @G24LB22*/ 27550000
*             RETCODE = 4;    /*SET RETURN CODE TO 4         @G24LB22*/ 27600000
*             ANS MSG('  ICB604I - WARNING-ONLY'||                      27650000
*                 ' THE MF PARAMETER IS VALID FOR THE'||                27700000
*                 ' LIST FORM  ')SKIP;                     /*@G24LB22*/ 27750000
*          END;               /*                             @G24LB22*/ 27800000
*/*                                                          @G24LB22*/ 27850000
*/*********************************************************  @G24LB22*/ 27900000
*/* PRINT OUT DECLARES FOR LIST FORM                         @G24LB22*/ 27950000
*/*********************************************************  @G24LB22*/ 28000000
*/*                                                          @G24LB22*/ 28050000
*/*                                                          @G24LB22*/ 28100000
*   ANS('/*******************************************'||                28150000
*       '************* @G24LB22*/')SKIP;                                28200000
*   ANS('/*   MSSC MODIFY CARTRIDGE MACRO    '||                        28250000
*       '              @G24LB22*/')SKIP;                                28300000
*   ANS('/*VS1-6/VS2-3 VERSION--04/23/76 LEVEL 00    '||                28350000
*       '              @G24LB22*/')SKIP;                                28400000
*   ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||                28450000
*       '              @G24LB22*/')SKIP;                                28500000
*   ANS('/*******************************************'||                28550000
*       '************* @G24LB22*/')SKIP;                                28600000
*   IF MF(3) ¬= '' THEN DO;            /*PLS ATTR SPCD?      @G24LB22*/ 28650000
*   ANS('DCL 1  '||MF(2)||' '||MF(3)||','||                             28700000
*   '/*MODIFYC REQUEST BLOCK*/ ') SKIP(1);                              28750000
*       END;                                                            28800000
*     ELSE                                                              28850000
*       DO;                                                             28900000
*   ANS('DCL 1  '||MF(2)||','||' /*MF2 REQUEST BLOCK'||                 28950000
*        '@G24LB22*/') SKIP(1);                                         29000000
*       END;                                                            29050000
*   ANS('      2  MODLEN FIXED(31), /*LENGTH'||                         29100000
*        ' = 52 BYTES (DEC.) @G24LB22*/')SKIP(1);                       29150000
*   ANS('      2  MODORDER FIXED(8), /*OPCODE='||                       29200000
*        ' 11 HEX @G24LB22*/') SKIP(1);                                 29250000
*   ANS('      2  MODRES1 CHAR(1), /*RESERVED @G24LB22*/') SKIP(1);     29300000
*   ANS('      2  MODFUNC BIT(8),'||                                    29350000
*        ' /*FUNCTION FIELD @G24LB22*/') SKIP(1);                       29400000
*   ANS('        3  MODUPDTE BIT(1), /*UPDATE'||                        29450000
*        'CARTRIDGE LABEL @G24LB22*/') SKIP(1);                         29500000
*   ANS('        3  MODCREAT BIT(1), /*CREATE'||                        29550000
*        'SCRATCH CARTRIDGE @G24LB22*/') SKIP(1);                       29600000
*   ANS('        3  MODMOVE BIT(1), /*MOVE CARTRIDGE'||                 29650000
*        'TO CAS @G24LB22*/') SKIP(1);                                  29700000
*   ANS('        3  *      BIT(5), /*RESERVED @G24LB22*/') SKIP(1);     29750000
*   ANS('      2  MODLOCAT BIT(8),'||                                   29800000
*        ' /*LOCATE ATTRIBUTE @G24LB22*/') SKIP(1);                     29850000
*   ANS('        3  MODLCSN BIT(1), /*LOCATE'||                         29900000
*        ' USING CSN @G24LB22*/') SKIP(1);                              29950000
*   ANS('        3  MODLVOL BIT(1), /*LOCATE'||                         30000000
*        ' USING VOLID @G24LB22*/') SKIP(1);                            30050000
*   ANS('        3  MODLLXYZ BIT(1), /*LOCATE'||                        30100000
*        ' USING LXYZ @G24LB22*/') SKIP(1);                             30150000
*   ANS('        3  MODLSEQ1 BIT(1), /*UPDTE-MOVE'||                    30200000
*        ' SEQ1 CART @G24LB22*/') SKIP(1);                              30250000
*   ANS('        3  MODLSEQ2 BIT(1), /*UPDTE-MOVE'||                    30300000
*        ' SEQ2 CART @G24LB22*/') SKIP(1);                              30350000
*   ANS('        3  *       BIT(3), /*RESERVED BITS '||                 30400000
*        'AND MUST BE ZERO @G24LB22*/') SKIP(1);                        30450000
*   ANS('      2  MODVOLID CHAR(6),'||                                  30500000
*        ' /*CURRENT VOLID @G24LB22*/') SKIP(1);                        30550000
*   ANS('      2  MODLXYZ FIXED(16), /*CURRENT '||                      30600000
*        'LOC OF CART @G24LB22*/') SKIP(1);                             30650000
*   ANS('      2  MODCSN CHAR(12),'||                                   30700000
*        ' /*CURRENT CSN @G24LB22*/') SKIP(1);                          30750000
*   ANS('      2  MODNVOL CHAR(6), /*SUPPLIED '||                       30800000
*        'VOLID FOR UPDTE @G24LB22*/') SKIP(1);                         30850000
*   ANS('      2  MODNLXYZ FIXED(16), /*SUPPLIED '||                    30900000
*        'LXYZ FOR UPDTE @G24LB22*/') SKIP(1);                          30950000
*   ANS('      2  MODNCSN CHAR(12), /*CSN OF PAIR '||                   31000000
*        'FOR UPDTE @G24LB22*/') SKIP(1);                               31050000
*   ANS('      2  MODVFLG BIT(8), /*VOLUME FLAGS @G24LB22*/')           31100000
*        SKIP(1);                                          /*@G24LB22*/ 31150000
*   ANS('        3  *       BIT(2), /*RESERVED BITS '||                 31200000
*        'AND MUST BE ZERO @G24LB22*/') SKIP(1);                        31250000
*   ANS('        3  MODSECUR BIT(1), /*SECURE'||                        31300000
*        ' VOLUME @G24LB22*/') SKIP(1);                                 31350000
*   ANS('        3  MODEXCL BIT(1), /*EXCLUSIVE'||                      31400000
*        ' VOLUME @G24LB22*/') SKIP(1);                                 31450000
*   ANS('        3  MODSCR BIT(1), /*SCRATCH'||                         31500000
*        ' CARTRIDGE @G24LB22*/') SKIP(1);                              31550000
*   ANS('        3  MODBIND BIT(1), /*BOUND'||                          31600000
*        ' VOLUME @G24LB22*/') SKIP(1);                                 31650000
*   ANS('        3  MODWINH BIT(1), /*WRITE'||                          31700000
*        ' INHIBIT @G24LB22*/') SKIP(1);                                31750000
*   ANS('        3  *       BIT(1), /*RESERVED BITS '||                 31800000
*        'AND MUST BE ZERO @G24LB22*/') SKIP(1);                        31850000
*   ANS('      2  MODSEQNO CHAR(1), /*ID OF CARTRIDGE '||               31900000
*        'OF PAIR @G24LB22*/') SKIP(1);                                 31950000
*   ANS('      2  *       CHAR(2); /*RESERVED @G24LB22*/')              32000000
*        SKIP(1);                                          /*@G24LB22*/ 32050000
*   GO TO EXIT;                        /*BRANCH TO END       @G24LB22*/ 32100000
*/*********************************************************  @G24LB22*/ 32150000
*/* THIS IS ALL THAT IS DONE FOR LIST FORM                   @G24LB22*/ 32200000
*/*********************************************************  @G24LB22*/ 32250000
*/* THE MACRO BRANCHES HERE FOR EXEC FORM                    @G24LB22*/ 32300000
*/*********************************************************  @G24LB22*/ 32350000
*/*                                                          @G24LB22*/ 32400000
*EXCHECK: IF MF(1)='E' THEN            /*EXEC FORM?          @G24LB22*/ 32450000
*             GO TO EXFORM;            /*YES, BRANCH         @G24LB22*/ 32500000
*   ESW=1;                             /*TURN EXIT-SWTCH ON  @G24LB22*/ 32550000
*   DO;                                /*PRINT THIS ERR MSG  @G24LB22*/ 32600000
*        ANS MSG('  ICB620I - INVALID MF PARAMETER'||                   32650000
*             ' SPECIFIED, MUST BE L OR E') SKIP(5);       /*@G24LB22*/ 32700000
*   END;                                /*                   @G24LB22*/ 32750000
*   RETCODE=12;                        /*SET RETURN CODE     @G24LB22*/ 32800000
*   GO TO TEST1;                       /*BRANCH              @G24LB22*/ 32850000
*EXFORM: IF MF(2)='' THEN              /*ADDR OF LIST GIVEN  @G24LB22*/ 32900000
*             DO;                      /*NO,PRINT ERROR MSG  @G24LB22*/ 32950000
*                  ESW=1;              /*TURN EXIT-SWTCH ON  @G24LB22*/ 33000000
*                  ANS MSG('  ICB612I - MF(2) MUST '||                  33050000
*                  'CONTAIN REQ BLK NAME IF '||                         33100000
*                  'EXEC MACRO FORM REQUESTED ') SKIP(5);  /*@G24LB22*/ 33150000
*                  RETCODE=12;         /*SET RETURN CODE     @G24LB22*/ 33200000
*                  GO TO TEST1;        /*BRANCH              @G24LB22*/ 33250000
*             END;                     /*                    @G24LB22*/ 33300000
*   ANS('/*******************************************'||                33350000
*       '************* @G24LB22*/')SKIP;                                33400000
*   ANS('/*  MSSC MODIFY CARTRIDGE MACRO     '||                        33450000
*       '              @G24LB22*/')SKIP;                                33500000
*   ANS('/*VS1-6/VS2-3 VERSION-- 04/23/76 LEVEL 00   '||                33550000
*       '              @G24LB22*/')SKIP;                                33600000
*   ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '||                33650000
*       '              @G24LB22*/')SKIP;                                33700000
*   ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '||                33750000
*       '              @G24LB22*/')SKIP;                                33800000
*   ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'||                33850000
*       '              @G24LB22*/')SKIP;                                33900000
*   ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '||                33950000
*       '              @G24LB22*/')SKIP;                                34000000
*   ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '||                34050000
*       '              @G24LB22*/')SKIP;                                34100000
*   ANS('/*******************************************'||                34150000
*       '************* @G24LB22*/')SKIP;                                34200000
*   ANS('RFY(MODBR1)RSTD; /*RESTRICT REGISTER 1 @G24LB22*/')SKIP;       34250000
*   ANS('MODBR1=ADDR('||MF(2)||                                         34300000
*        '); /*SET MODBR1 TO ADDR OF REQ BLK @G24LB22*/') SKIP(1);      34350000
*  IF MF(3) = 'COMPLETE' THEN    /*REQUEST TO ZERO?          @G24LB22*/ 34400000
*   DO;                          /*YES,ZERO BLK              @G24LB22*/ 34450000
*   ANS(' '||MF(2)||'='||MF(2)||'&&'||MF(2)||';'||         /*@G24LB22*/ 34500000
*       '/*ZERO REQUEST BLOCK @G24LB22*/')SKIP;                         34550000
*   END;                        /*                           @G24LB22*/ 34600000
*   ANS('MODLEN='||QUOTE(LENGTH)||'X;'||                                34650000
*       '/*SET LENGTH FIELD @G24LB22*/')SKIP(1);                        34700000
*   ANS('MODORDER='||QUOTE(MODCODE)||'X; /*OPCODE @G24LB22*/') SKIP(1); 34750000
*TEST1:                                                    /*@G24LB22*/ 34800000
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/ 34850000
*        GO TO EXIT;                   /*YES, BRANCH TO END  @G24LB22*/ 34900000
*   IF ATTR1 ¬='' THEN                 /*ATTR1 SPECIFIED?    @G24LB22*/ 34950000
*        DO;                                                            35000000
*   ANS('MODFUNC='||ATTR1||';/*FILL IN FUNCTION FIELD @G24LB22*/')      35050000
*        SKIP(1);                                          /*@G24LB22*/ 35100000
*        END;                          /*                    @G24LB22*/ 35150000
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/ 35200000
*        GO TO EXIT;                   /*YES, BRANCH TO END  @G24LB22*/ 35250000
*   IF ATTR2 ¬='' THEN                 /*ATTR2 SPECIFIED?    @G24LB22*/ 35300000
*        DO;                                                            35350000
*   ANS('MODLOCAT='||ATTR2||';/*FILL IN SEARCH FIELD @G24LB22*/')       35400000
*        SKIP(1);                                          /*@G24LB22*/ 35450000
*        END;                          /*                    @G24LB22*/ 35500000
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/ 35550000
*        GO TO EXIT;                   /*YES, BRANCH TO END  @G24LB22*/ 35600000
*   IF VOLID ¬='' THEN                 /*VOLID SPECIFIED?    @G24LB22*/ 35650000
*        DO;                                                            35700000
*   ANS('MODVOLID='||VOLID||';/*FILL IN CURRENT VOLID @G24LB22*/')      35750000
*        SKIP(1);                                          /*@G24LB22*/ 35800000
*        END;                          /*                    @G24LB22*/ 35850000
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/ 35900000
*        GO TO EXIT;                   /*YES, BRANCH TO END  @G24LB22*/ 35950000
*   IF LOC1 ¬='' THEN                 /*LXYZ SPECIFIED?      @G24LB22*/ 36000000
*        DO;                                                            36050000
*   ANS('MODLXYZ='||LOC1||';/*FILL IN CURRENT LOCATION @G24LB22*/')     36100000
*        SKIP(1);                                          /*@G24LB22*/ 36150000
*        END;                          /*                    @G24LB22*/ 36200000
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/ 36250000
*        GO TO EXIT;                   /*YES, BRANCH TO END  @G24LB22*/ 36300000
*   IF CSN ¬='' THEN                 /*CSN SPECIFIED?      @G24LB22*/   36350000
*        DO;                                                            36400000
*   ANS('MODCSN='||CSN||';/*FILL IN CURRENT CSN @G24LB22*/')            36450000
*        SKIP(1);                                          /*@G24LB22*/ 36500000
*        END;                          /*                    @G24LB22*/ 36550000
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/ 36600000
*        GO TO EXIT;                   /*YES, BRANCH TO END  @G24LB22*/ 36650000
*   IF NVOLID ¬='' THEN                /*VOLID SPECIFIED?    @G24LB22*/ 36700000
*        DO;                           /*                    @G24LB22*/ 36750000
*   ANS('MODVOLID='||NVOLID||';/*FILL IN NEW VOLID @G24LB22*/')         36800000
*        SKIP(1);                                                       36850000
*        END;                          /*                    @G24LB22*/ 36900000
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/ 36950000
*        GO TO EXIT;                   /*YES, GO TO END      @G24LB22*/ 37000000
*   IF LOC2 ¬='' THEN                 /*LXYZ SPECIFIED?      @G24LB22*/ 37050000
*        DO;                                                            37100000
*   ANS('MODNLXYZ='||LOC2||';/*FILL IN NEW LOCATION @G24LB22*/')        37150000
*        SKIP(1);                                          /*@G24LB22*/ 37200000
*        END;                          /*                    @G24LB22*/ 37250000
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/ 37300000
*        GO TO EXIT;                   /*YES, BRANCH TO END  @G24LB22*/ 37350000
*   IF CSNPAIR ¬='' THEN             /*CSN SPECIFIED?        @G24LB22*/ 37400000
*        DO;                                                            37450000
*   ANS('MODNCSN='||CSNPAIR||';/*FILL IN CURRENT CSN @G24LB22*/')       37500000
*        SKIP(1);                                          /*@G24LB22*/ 37550000
*        END;                          /*                    @G24LB22*/ 37600000
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/ 37650000
*        GO TO EXIT;                   /*YES, BRANCH TO END  @G24LB22*/ 37700000
*   IF VOLFLG ¬='' THEN              /*VOLFLG  SPECIFIED?    @G24LB22*/ 37750000
*        DO;                           /*                    @G24LB22*/ 37800000
*   ANS('MODVFLG='||VOLFLG||';/*FILL IN VOLUME FLAGS @G24LB22*/')       37850000
*        SKIP(1);                                          /*@G24LB22*/ 37900000
*        END;                          /*                    @G24LB22*/ 37950000
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/ 38000000
*        GO TO EXIT;                   /*YES, GO TO END      @G24LB22*/ 38050000
*   IF SEQNO ¬='' THEN               /*SEQNO  SPECIFIED?     @G24LB22*/ 38100000
*        DO;                                                            38150000
*   ANS('MODSEQNO='||SEQNO||';/*FILL IN SEQUENCE NO. @G24LB22*/')       38200000
*        SKIP(1);                                                       38250000
*        END;                          /*                    @G24LB22*/ 38300000
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @G24LB22*/ 38350000
*        GO TO EXIT;                   /*YES, GO TO END      @G24LB22*/ 38400000
*LINK: ANS(' SVC (126); /*ISSUE SVC INSTRUCTION @G24LB22*/')            38450000
*        SKIP(1);                                                       38500000
*      ANS('RFY  MODBR1 UNRSTD;/*UNRESTRCT REG 1 @G24LB22*/')SKIP;      38550000
*EXIT: RETURN CODE(RETCODE);                               /*@G24LB22*/ 38600000
*   %END;                                                  /*@G24LB22*/ 38650000
./  ADD  SSI=52830234,NAME=ICBNULLC
* %/* START OF SPECIFICATIONS  ***                           @Z40LB22   00068403
*                                                            @Z40LB22   00068803
*01*  MODULE-NAME = ICBNULLC                                 @Z40LB22   00069203
*                                                            @Z40LB22   00069603
*01*  DESCRIPTIVE-NAME = NULLIFYC VOLUME/CARTRIDGE           @Z40LB22   00069703
*                                                            @Z40LB22   00069803
*01*  COPYRIGHT = NONE                                       @Z40LB22   00069903
*                                                            @Z40LB22   00079903
*01*  STATUS =  OS/VS2                                       @Z40LB22   00089903
*                                                            @Z40LB22   00095203
*01*  FUNCTION = THE NULLIFYC ORDER WILL REMOVE ALL          @Z40LB22   00095603
*                REFERENCES OF A VOLUME OR SCRATCH CARTRIDGE @Z40LB22   00096003
*                FROM THE SYSTEM.  IF ONE CARTRIDGE OF A     @Z40LB22   00096403
*                VOLUME IS STILL IN THE MASS STORAGE         @Z40LB22   00096503
*                FACILITY THIS FUNCTION CONVERTS IT INTO A   @Z40LB22   00096603
*                SCRATCH CARTRIDGE.                          @Z40LB22   00109903
*                                                            @Z40LB22   00119903
*01*  NOTES = ICBNULLC IS CODED IN PLS ONLY.                 @Z40LB22   00121903
*                                                            @Z40LB22   00122303
*02*    DEPENDENCIES = NONE                                  @Z40LB22   00122703
*                                                            @Z40LB22   00123103
*02*    RESTRICTIONS = THE PREFIXES ICB AND NULLC SHOULD BE  @Z40LB22   00123203
*                      AVOIDED WHEN INVOKING THIS MACRO.     @Z40LB22   00123303
*                                                            @Z40LB22   00127703
*02*    REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF         @Z40LB22   00129703
*                              REGISTERS BY MACROS:          @Z40LB22   00131703
*                              R0,R1,R14, AND R15.           @Z40LB22   00132103
*                                                            @Z40LB22   00132203
*01*  MODULE-TYPE = MACRO                                    @Z40LB22   00136603
*                                                            @Z40LB22   00138603
*02*    PROCESSOR = PLS2                                     @Z40LB22   00140603
*                                                            @Z40LB22   00141003
*01*  INPUT = PARAMETERS SPECIFIED ON THE PLS MACRO          @Z40LB22   00141103
*             INVOCATION.                                    @Z40LB22   00152803
*                                                            @Z40LB22   00172303
*     MACRO SYNTAX                                           @Z40LB22   00172403
*                                                            @Z40LB22   00172503
*     LIST FORM                                              @Z40LB22   00172603
*                                                            @Z40LB22   00176503
*     VERB        REQUIRED PARMS             OPTIONAL PARMS  @Z40LB22   00178503
*                                                            @Z40LB22   00178903
*     ICBNULLC    MF(L,NAME/(R),ÝATTRIBUTE¨)                 @Z40LB22   00179303
*                                                            @Z40LB22   00179703
*     EXECUTE FORM                                           @Z40LB22   00180103
*                                                            @Z40LB22   00180203
*     VERB        REQUIRED PARMS             OPTIONAL PARMS  @Z40LB22   00180303
*                                                            @Z40LB22   00180403
*     ICBNULLC    MF(E,NAME/(R))            MF(E,NAME/(R),   @Z40LB22   00184303
*                                             ÝCOMPLETE¨)    @Z40LB22   00186303
*                                           VOLID(ADDR/(R))  @Z40LB22   00186703
*                                           FLAGS(ADDR/(R))  @Z40LB22   00187103
*                                           ECB(NAME/(R))    @Z40LB22   00187503
*                                           CSN(ADDR/(R))    @Z40LB22   00187903
*                                                            @Z40LB22   00188003
*     KEYWORD PARAMETERS:                                    @Z40LB22   00188103
*                                                            @Z40LB22   00188203
*     MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE      @Z40LB22   00198503
*            MACRO FORMAT AND MAY GIVE THE ADDRESS OR        @Z40LB22   00208503
*            ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK   @Z40LB22   00208603
*            IS STORED.                                      @Z40LB22   00208703
*                                                            @Z40LB22   00212103
*            L - LIST FORM:  THE EXPANSION OF THE L-FORM     @Z40LB22   00214103
*                MACRO WILL RESULT IN AN UNINITIALIZED       @Z40LB22   00214503
*                REQUEST BLOCK.                              @Z40LB22   00214903
*                                                            @Z40LB22   00215303
*            (1) NAME - THE MACRO INVOKER MUST SPECIFY A     @Z40LB22   00215403
*                NAME FOR HIS STRUCTURE WHEN INVOKING THE    @Z40LB22   00215503
*                PLS LIST FORM.                              @Z40LB22   00215603
*                                                            @Z40LB22   00219003
*            (2) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS    @Z40LB22   00221003
*                ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION @Z40LB22   00221403
*                IN AN UNINITIALIZED REQUEST BLOCK.          @Z40LB22   00221803
*                ATTRIBUTE EXAMPLE:                          @Z40LB22   00222203
*                                                            @Z40LB22   00222303
*                CHAR, FIXED, STATIC LOCAL, NONLOCAL,        @Z40LB22   00222403
*                BASED(*), ETC.                              @Z40LB22   00222503
*                                                            @Z40LB22   00225903
*            E - EXECUTABLE FORM:  THE EXPANSION OF THIS     @Z40LB22   00227903
*                FORM CONSISTS OF A LINKAGE INSTRUCTION AND  @Z40LB22   00228303
*                POSSIBLY, PARAMETER BINDING INSTRUCTIONS.   @Z40LB22   00228703
*                                                            @Z40LB22   00229103
*                SUB-PARAMETERS                              @Z40LB22   00229203
*                (1)  AN E MUST BE SPECIFIED IN THE FIRST    @Z40LB22   00229303
*                     SUB-PARAMETER POSITION.  THIS          @Z40LB22   00229403
*                     INDICATES THAT THE MACRO IS IN         @Z40LB22   00232803
*                     EXECUTABLE FORM.                       @Z40LB22   00234803
*                                                            @Z40LB22   00235203
*                (2)  A NAME OR A REGISTER MUST BE SPECIFIED @Z40LB22   00235603
*                     IN THE SECOND SUB-PARAMETER.           @Z40LB22   00236003
*                                                            @Z40LB22   00236103
*                (3)  'COMPLETE' - COMPLETE WILL CAUSE THE   @Z40LB22   00236203
*                     MACRO TO ZERO OUT THE REQUEST BLOCK.   @Z40LB22   00236303
*                     AFTER ZEROING THE REQUEST BLOCK THE    @Z40LB22   00237403
*                     FUNCTION OPCODE AND LENGTH ARE PLACED  @Z40LB22   00239403
*                     IN THE REQUEST BLOCK.                  @Z40LB22   00239503
*                                                            @Z40LB22   00239603
*                                                            @Z40LB22   00248203
*                REQUEST          | ORDER    | CODE          @Z40LB22   00250203
*                --------------------------------------      @Z40LB22   00252203
*                NULLIFYC         | HEX'09'  | N/A           @Z40LB22   00254203
*                                                            @Z40LB22   00256203
*02*    INVOCATION PARAMETERS (CCW 27)                       @Z40LB22   00256603
*                                                            @Z40LB22   00256703
*                                                            @Z40LB22   00256803
*       NULLIFYC - (L,F,X,A,VOLID,MSGID,CSN,X)               @Z40LB22   00256903
*                                                            @Z40LB22   00268503
*       (1)  LENGTH (L) - 4 BYTES                            @Z40LB22   00278503
*                                                            @Z40LB22   00278903
*       (2)  ORDER (F) - 1 BYTE                              @Z40LB22   00279303
*            THIS BYTE IS ALWAYS X'09' FOR THIS ORDER        @Z40LB22   00279703
*                                                            @Z40LB22   00280103
*       (3)  RESERVED (X) - 1 BYTE                           @Z40LB22   00280203
*                                                            @Z40LB22   00280303
*       (4)  FLAGS (A) - 2 BYTES                             @Z40LB22   00281103
*            BIT 0 = 1;  ACTIVE VOLUME                       @Z40LB22   00281503
*            BIT 0 = 0;  NOT ACTIVE                          @Z40LB22   00281903
*            BIT 1 = 1;  TRANSIENT                           @Z40LB22   00282303
*            BIT 1 = 0;  NOT TRANSIENT                       @Z40LB22   00282703
*            BIT 2 = 1;  SCRATCH                             @Z40LB22   00285603
*            BIT 2 = 0;  NOT SCRATCH                         @Z40LB22   00287603
*            BITS 3 - 4; UNUSED                              @Z40LB22   00289603
*            BIT 5 = 1;  CARTRIDGE 1 MISSING                 @Z40LB22   00290003
*            BIT 5 = 0;  NOT CARTRIDGE 1                     @Z40LB22   00290403
*            BIT 6 = 1;  CARTRIDGE 2 MISSING                 @Z40LB22   00290803
*            BIT 6 = 0;  NOT CARTRIDGE 2                     @Z40LB22   00291203
*            BITS 7 - 15; UNUSED                             @Z40LB22   00291303
*                                                            @Z40LB22   00293403
*       (5)  VIRTUAL VOLUME ID (VOLID) - 6 BYTES             @Z40LB22   00295403
*            VOLID OF THE VOLUME TO BE NULLIFIED (OPTIONAL). @Z40LB22   00297403
*                                                            @Z40LB22   00297803
*       (6)  MESSAGE ID (MSGID) - 6 BYTES                    @Z40LB22   00301203
*            THIS FIELD CONTAINS BOTH THE ASID (USED BY      @Z40LB22   00303203
*            THE SVC ONLY) AND THE NAME OF THE ECB.  THE     @Z40LB22   00303603
*            ECB IS POSTED WITH X'7F' FOR SUCCESSFUL         @Z40LB22   00304003
*            COMPLETION.  THE MSC DATA WILL BE MOVED TO CORE @Z40LB22   00304403
*            LOCATION ADDRESS(ECB) + 4.  THE ECB MUST BE     @Z40LB22   00304803
*            SPECIFIED AND THE ECB AREA MUST BE CLEARED      @Z40LB22   00304903
*            BEFORE INVOKING THE MACRO (REQUIRED).           @Z40LB22   00308503
*                                                            @Z40LB22   00310503
*       (7)  CARTRIDGE SERIAL NUMBER (CSN) - 12 BYTES        @Z40LB22   00310903
*            A 12 BYTE AREA THAT CONTAINS THE SERIAL         @Z40LB22   00311303
*            NUMBER OF THE CARTRIDGE TO BE ACTED UPON.       @Z40LB22   00311703
*            THE ONLY VALID FLAGS SETTING IS BIT 1 = 1 OR    @Z40LB22   00312103
*            BIT 2 =  1.  CSN IS AN OPTIONAL PARAMETER.      @Z40LB22   00312203
*                                                            @Z40LB22   00312303
*       (8)  RESERVED (X) - 8 BYTES                          @Z40LB22   00313203
*                                                            @Z40LB22   00313603
*01*  EXIT-NORMAL = VALID INVOCATION                         @Z40LB22   00314003
*                                                            @Z40LB22   00314403
*02*    CONDITION = RETURN CODE = 0.                         @Z40LB22   00314803
*                 = RETURN CODE = 4.                         @Z40LB22   00314903
*                                                            @Z40LB22   00315003
*02*    OUTPUT = IN-LINE PLS STATEMENTS THAT PERFORM THE     @Z40LB22   00315103
*                REQUESTED FUNCTION.                         @Z40LB22   00318403
*              = A WARNING MESSAGE WILL BE PRINTED, AND      @Z40LB22   00320403
*                THE EXPANSION WILL CONTINUE FOR RC=4.       @Z40LB22   00320803
*                                                            @Z40LB22   00321203
*01*  EXIT-ERROR = INVALID INVOCATION                        @Z40LB22   00321603
*                                                            @Z40LB22   00321703
*02*    CONDITION = RETURN CODE = 12.                        @Z40LB22   00321803
*                                                            @Z40LB22   00322203
*02*    OUTPUT = ERROR MESSAGE                               @Z40LB22   00322603
*                                                            @Z40LB22   00323003
*01*  EXTERNAL-REFERENCES = NONE                             @Z40LB22   00323103
*                                                            @Z40LB22   00324003
*01*  TABLES = NONE                                          @Z40LB22   00324403
*                                                            @Z40LB22   00324803
*01*  MESSAGES = AS FOLLOWS:                                 @Z40LB22   00325203
*                                                            @Z40LB22   00325603
*            ICB602I:  A NAME FOR THE REQUEST BLOCK MUST     @Z40LB22   00325703
*                      BE SPECIFIED IN MF(2)                 @Z40LB22   00325803
*            ICB604I:  WARNING - ONLY MF PARAMETER IS VALID  @Z40LB22   00328803
*                      FOR LIST FORM.                        @Z40LB22   00330803
*            ICB612I:  MF(2) MUST CONTAIN REQ BLK NAME IF    @Z40LB22   00331203
*                      EXEC MACRO FORM REQUESTED.            @Z40LB22   00331603
*            ICB620I:  INVALID MF PARAMETER SPECIFIED,       @Z40LB22   00331703
*                      MUST BE L  OR E.                      @Z40LB22   00331803
*                                                            @Z40LB22   00331903
*01*  INNER-MACRO = NONE                                     @Z40LB22   00332703
*                                                            @Z40LB22   00333103
*01*  SYSTEM-MACRO = NONE                                    @Z40LB22   00333503
*                                                            @Z40LB22   00333903
**** END OF SPECIFICATIONS ***                               @Y40LB22*/ 00343303
*                                                          /*@Z40LB22*/ 00352003
*         ICBNULLC: MACRO KEYS(MF,FLAGS,VOLID,ECB,CSN);    /*@Z40LB22*/ 00357003
*/* EXTERNAL DECLARES                                        @Y40LB22*/ 00362403
*   DCL NULTSTR1 FIXED EXT;            /*USED AS A TEST TO   @Y40LB22*/ 00371803
*                                      /*SEE IF R1 ALREADY   @Y40LB22*/ 00381203
*                                      /*DECLARED            @Y40LB22*/ 00390603
*/* INTERNAL DECLARES                                        @Y40LB22*/ 00400003
*   DCL  RETCODE FIXED;                /*RETURN CODE         @Y40LB22*/ 00450003
*   DCL  NULCODE CHAR;                 /*NULLIFYC ORDER      @Y40LB22*/ 00500003
*   DCL  LENGTH CHAR;                  /*LENGTH OF BLOCK     @Y40LB22*/ 00550003
*   DCL  ESW FIXED;                    /*EXIT-SWITCH         @Y40LB22*/ 00600003
*   DCL  BSW FIXED;                    /*BRCH-SWITCH         @Y40LB22*/ 00650003
*   DCL  CTR FIXED;                    /*PARM-SWITCH         @Y40LB22*/ 00700003
*   NULCODE='09';                      /*NULLIFYC OPCODE     @Y40LB22*/ 00750003
*   LENGTH='2C';                       /*DEFINE REQ LENGTH   @Y40LB22*/ 00800003
*/* INITIALIZE SWITCHES TO ZERO                              @Y40LB22*/ 00850003
*   ESW=0;                             /*INIT ERROR SWITCH   @Y40LB22*/ 00900003
*   BSW=0;                             /*INIT BRANCH SWITCH  @Y40LB22*/ 00950003
*   CTR=0;                             /*INIT PARM  SWITCH   @Y40LB22*/ 01000003
*/* END OF DECLARES AND INITIALIZATION                       @Y40LB22*/ 01050003
*   IF NULTSTR1=0 THEN                 /*HAS R1 BEEN DCL'D?  @Y40LB22*/ 01100003
*             DO;                      /*NO,DECLARE IT       @Y40LB22*/ 01150003
*                  ANS('DCL NULBR1 PTR REG(1) ;'||         /*@Y40LB22*/ 01200003
*                       '/*WILL CONTAIN BLOCK ADDRESS @Y40LB22*/')      01250003
*                       SKIP(1);                           /*@Y40LB22*/ 01300003
*                  NULTSTR1=1;         /*NULTSTR1 SET TO 1   @Y40LB22*/ 01350003
*             END;                     /*                    @Y40LB22*/ 01400003
*   IF MF(1)¬='L' THEN                 /*IF NOT LIST FORM    @Y40LB22*/ 01450003
*        GO TO EXCHECK;                /*THEN BRANCH         @Y40LB22*/ 01500003
*   IF MF(2)='' THEN                   /*WAS A NAME GIVEN?   @Y40LB22*/ 01550003
*        DO;                           /*NO,TURN ESW ON AND  @Y40LB22*/ 01600003
*             ESW=1;                   /*PRINT ERROR MSG     @Y40LB22*/ 01650003
*             ANS MSG('  ICB602I - A NAME FOR THE '||                   01700003
*                  'REQUEST BLOCK MUST BE SPECIFIED '||                 01750003
*                  'IN MF(2)')SKIP(5);                     /*@Y40LB22*/ 01800003
*             RETCODE=12;              /*SET RETURN CODE     @Y40LB22*/ 01850003
*        END;                          /*                    @Y40LB22*/ 01900003
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y40LB22*/ 01950003
*        GO TO EXIT;                   /*YES, BRANCH         @Y40LB22*/ 02000003
*        IF FLAGS ¬= '' THEN  /*FLAGS SPECIFIED?             @Y40LB22*/ 02050003
*             CTR = CTR + 1;  /*YES,INCREMENT CTR            @Y40LB22*/ 02100003
*        IF VOLID ¬= '' THEN  /*VOLID SPECIFIED?             @Y40LB22*/ 02150003
*             CTR = CTR + 1; /*YES,INCREMENT COUNTER         @Y40LB22*/ 02200003
*        IF ECB ¬= '' THEN    /*ECB SPECIFIED?               @Y40LB22*/ 02350003
*             CTR = CTR + 1;  /*YES,INCREMENT COUNTER        @Y40LB22*/ 02400003
*        IF CSN ¬= '' THEN    /*CSN SPECIFIED?               @Y40LB22*/ 02410003
*             CTR = CTR + 1;  /*YES,INCREMENT COUNTER        @Y40LB22*/ 02420003
*        IF CTR > 0 THEN      /*COUNTER GT ZERO?             @Y40LB22*/ 02450003
*          DO;                /*YES,PRINT WARNING MSG        @Y40LB22*/ 02500003
*             RETCODE = 4;    /*SET RETURN CODE TO 4         @Y40LB22*/ 02550003
*             ANS MSG('  ICB604I - WARNING-ONLY'||                      02600003
*                 ' THE MF PARAMETER IS VALID FOR THE'||                02650003
*                 ' LIST FORM  ')SKIP;                     /*@Y40LB22*/ 02700003
*          END;               /*                             @Y40LB22*/ 02750003
*/*                                                          @Y40LB22*/ 02900003
*/*********************************************************  @Y40LB22*/ 02950003
*/* PRINT OUT DECLARES FOR LIST FORM                         @Y40LB22*/ 03000003
*/*********************************************************  @Y40LB22*/ 03050003
*/*                                                          @Y40LB22*/ 05600003
*/*                                                          @Y40LB22*/ 05700003
*   ANS('/*******************************************'||                05750003
*       '************* @Y40LB22*/')SKIP;                                05800003
*   ANS('/*   MSSC NULLIFY VOLUME/CARTRIDGE MACRO    '||                05850003
*       '              @Y40LB22*/')SKIP;                                05900003
*   ANS('/*VS1-4/VS2-3 VERSION--03/14/75 LEVEL 00    '||                05950003
*       '              @Y40LB22*/')SKIP;                                06000003
*   ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||                06050003
*       '              @Y40LB22*/')SKIP;                                06100003
*   ANS('/*******************************************'||                06150003
*       '************* @Y40LB22*/')SKIP;                                06200003
*   IF MF(3) ¬= '' THEN DO;            /*PLS ATTR SPCD?      @Y40LB22*/ 06210003
*   ANS('DCL 1  '||MF(2)||' '||MF(3)||','||                             06250003
*   '/*NULLIFYC REQUEST BLOCK*/ ') SKIP(1);                             06300003
*       END;                                                            06310003
*     ELSE                                                              06320003
*       DO;                                                             06330003
*   ANS('DCL 1  '||MF(2)||','||' /*MF2 REQUEST BLOCK'||                 06340003
*        '@Y40LB22*/') SKIP(1);                                         06342003
*       END;                                                            06346003
*   ANS('      2  NULENGTH FIXED(31), /*LENGTH'||                       06350003
*        ' = 44 BYTES (DEC.) @Y40LB22*/')SKIP(1);                       06400003
*   ANS('      2  NULORDER CHAR(1), /*OPCODE='||                        06450003
*        ' 09 HEX @Y40LB22*/') SKIP(1);                                 06500003
*   ANS('      2  NULRES1 CHAR(1), /*RESERVED @Y40LB22*/') SKIP(1);     06550003
*   ANS('      2  NULFLAGA BIT(16),'||                                  06600003
*        ' /*FLAGS FIELD @Y40LB22*/') SKIP(1);                          06650003
*   ANS('        3  NULVOL BIT(1), /*AN ACTIVE VOLUME'||                06660003
*        'IS BEING NULLIFIED @Y40LB22*/') SKIP(1);                      06680003
*   ANS('        3  NULTRAN BIT(1), /*A TRANSIENT VOLUME'||             06850003
*        'IS BEING NULLIFIED @Y40LB22*/') SKIP(1);                      06900003
*   ANS('        3  NULSCRC BIT(1), /*A SCRATCH CARTRIDGE'||            06950003
*        'IS BEING NULLIFIED @Y40LB22*/') SKIP(1);                      07000003
*   ANS('        3  *      BIT(2), /*UNUSED @Y40LB22*/') SKIP(1);       07050003
*   ANS('        3  NULCART1 BIT(1), /*CARTRIDGE 1'||                   07150003
*        ' IS MISSING @Y40LB22*/') SKIP(1);                             07200003
*   ANS('        3  NULCART2 BIT(1), /*CARTRIDGE 2'||                   07250003
*        ' IS MISSING @Y40LB22*/') SKIP(1);                             07300003
*   ANS('        3  *       BIT(9), /*RESERVED BITS '||                 07350003
*        'AND MUST BE ZERO @Y40LB22*/') SKIP(1);                        07400003
*   ANS('      2  NULVOLID CHAR(6),'||                                  07410003
*        ' /*VOLID FIELD @Y40LB22*/') SKIP(1);                          07420003
*   ANS('      2  NULASID CHAR(2), /*ASID AREA '||                      07650003
*        'USED BY THE SVC @Y40LB22*/') SKIP(1);                         07700003
*   ANS('      2  NULECB FIXED(31), /*ADDR OF ECB @Y40LB22*/')          07750003
*        SKIP(1);                                          /*@Y40LB22*/ 07820003
*   ANS('      2  NULCSN CHAR(12), /*SERIAL NO OF CARTRIDGE '||         07830003
*        'TO BE ACTED UPON @Y40LB22*/') SKIP(1);                        07840003
*   ANS('      2  NULRES2 CHAR(12); /*RESERVED @Y40LB22*/')             07842003
*        SKIP(1);                                          /*@Y40LB22*/ 07844003
*   GO TO EXIT;                        /*BRANCH TO END       @Y40LB22*/ 07850003
*/*********************************************************  @Y40LB22*/ 07860003
*/* THIS IS ALL THAT IS DONE FOR LIST FORM                   @Y40LB22*/ 07870003
*/*********************************************************  @Y40LB22*/ 07880003
*/* THE MACRO BRANCHES HERE FOR EXEC FORM                    @Y40LB22*/ 12450003
*/*********************************************************  @Y40LB22*/ 12500003
*/*                                                          @Y40LB22*/ 12550003
*EXCHECK: IF MF(1)='E' THEN            /*EXEC FORM?          @Y40LB22*/ 12600003
*             GO TO EXFORM;            /*YES, BRANCH         @Y40LB22*/ 12650003
*   ESW=1;                             /*TURN EXIT-SWTCH ON  @Y40LB22*/ 12700003
*   DO;                                /*PRINT THIS ERR MSG  @Y40LB22*/ 12750003
*        ANS MSG('  ICB620I - INVALID MF PARAMETER'||                   12800003
*             ' SPECIFIED, MUST BE L OR E') SKIP(5);       /*@Y40LB22*/ 12850003
*   END;                                /*                   @Y40LB22*/ 12900003
*   RETCODE=12;                        /*SET RETURN CODE     @Y40LB22*/ 12950003
*   GO TO TEST1;                       /*BRANCH              @Y40LB22*/ 13000003
*EXFORM: IF MF(2)='' THEN              /*ADDR OF LIST GIVEN  @Y40LB22*/ 13050003
*             DO;                      /*NO,PRINT ERROR MSG  @Y40LB22*/ 13100003
*                  ESW=1;              /*TURN EXIT-SWTCH ON  @Y40LB22*/ 13150003
*                  ANS MSG('  ICB612I - MF(2) MUST '||                  13200003
*                  'CONTAIN REQ BLK NAME IF '||                         13250003
*                  'EXEC MACRO FORM REQUESTED ') SKIP(5);  /*@Y40LB22*/ 13300003
*                  RETCODE=12;         /*SET RETURN CODE     @Y40LB22*/ 13350003
*                  GO TO TEST1;        /*BRANCH              @Y40LB22*/ 13400003
*             END;                     /*                    @Y40LB22*/ 13450003
*   ANS('/*******************************************'||                13500003
*       '************* @Y40LB22*/')SKIP;                                13550003
*   ANS('/*  MSSC NULLIFY VOLUME/CARTRIDGE MACRO     '||                13600003
*       '              @Y40LB22*/')SKIP;                                13650003
*   ANS('/*VS1-4/VS2-3 VERSION-- 03/14/75 LEVEL 00   '||                13700003
*       '              @Y40LB22*/')SKIP;                                13750003
*   ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '||                13800003
*       '              @Y40LB22*/')SKIP;                                13850003
*   ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '||                13900003
*       '              @Y40LB22*/')SKIP;                                13950003
*   ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'||                14000003
*       '              @Y40LB22*/')SKIP;                                14050003
*   ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '||                14100003
*       '              @Y40LB22*/')SKIP;                                14150003
*   ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '||                14200003
*       '              @Y40LB22*/')SKIP;                                14250003
*   ANS('/*******************************************'||                14300003
*       '************* @Y40LB22*/')SKIP;                                14350003
*   ANS('RFY(NULBR1)RSTD; /*RESTRICT REGISTER 1 @Y40LB22*/')SKIP;       14400003
*   ANS('NULBR1=ADDR('||MF(2)||                                         14450003
*        '); /*SET NULBR1 TO ADDR OF REQ BLK @Y40LB22*/') SKIP(1);      14500003
*  IF MF(3) = 'COMPLETE' THEN    /*REQUEST TO ZERO?          @Y40LB22*/ 14550003
*   DO;                          /*YES,ZERO BLK              @Y40LB22*/ 14600003
*   ANS(' '||MF(2)||'='||MF(2)||'&&'||MF(2)||';'||         /*@Y40LB22*/ 14650003
*       '/*ZERO REQUEST BLOCK @Y40LB22*/')SKIP;                         14700003
*   END;                        /*                           @Y40LB22*/ 14750003
*   ANS('NULENGTH='||QUOTE(LENGTH)||'X;'||                              14800003
*       '/*SET LENGTH FIELD @Y40LB22*/')SKIP(1);                        14850003
*   ANS('NULORDER='||QUOTE(NULCODE)||'X; /*OPCODE @Y40LB22*/') SKIP(1); 14900003
*TEST1:                                                    /*@Y40LB22*/ 14950003
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y40LB22*/ 15000003
*        GO TO EXIT;                   /*YES, BRANCH TO END  @Y40LB22*/ 15050003
*   IF FLAGS ¬='' THEN                 /*FLAGS SPECIFIED?    @Y40LB22*/ 15100003
*        DO;                                                            15150003
*   ANS('NULFLAGA='||FLAGS||';/*FILL IN FLAGS FIELD @Y40LB22*/')        15200003
*        SKIP(1);                                          /*@Y40LB22*/ 15250003
*        END;                          /*                    @Y40LB22*/ 15750003
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y40LB22*/ 16150003
*        GO TO EXIT;                   /*YES, BRANCH TO END  @Y40LB22*/ 16200003
*   IF VOLID ¬='' THEN                 /*VOLID SPECIFIED?    @Y40LB22*/ 16250003
*        DO;                           /*                    @Y40LB22*/ 16310003
*   ANS('NULVOLID='||VOLID||';/*FILL IN VOLID FIELD @Y40LB22*/')        16330003
*        SKIP(1);                                                       16380003
*        END;                          /*                    @Y40LB22*/ 16430003
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y40LB22*/ 16950003
*        GO TO EXIT;                   /*YES, GO TO END      @Y40LB22*/ 17000003
*   IF ECB ¬='' THEN                   /*ECB   SPECIFIED?    @Y40LB22*/ 17300003
*        DO;                           /*                    @Y40LB22*/ 17360003
*   ANS('NULECB=ADDR'||ECB||';/*FILL IN ECB FIELD @Y40LB22*/')          17380003
*        SKIP(1);                                          /*@Y40LB22*/ 17430003
*        END;                          /*                    @Y40LB22*/ 17480003
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y40LB22*/ 18000003
*        GO TO EXIT;                   /*YES, GO TO END      @Y40LB22*/ 18050003
*   IF CSN ¬='' THEN                    /*EXTS  SPECIFIED?    @Y40LB22*/18350003
*        DO;                                                            18410003
*   ANS('NULCSN='||CSN||';/*FILL IN CSN FIELD @Y40LB22*/') SKIP(1);     18412003
*        END;                          /*                    @Y40LB22*/ 18430003
*   IF ESW=1 THEN                      /*EXIT-SWITCH ON?     @Y40LB22*/ 19050003
*        GO TO EXIT;                   /*YES, GO TO END      @Y40LB22*/ 19100003
*LINK: ANS(' SVC (126); /*ISSUE SVC INSTRUCTION @Y40LB22*/')            19300003
*        SKIP(1);                                                       19350003
*      ANS('RFY  NULBR1 UNRSTD;/*UNRESTRCT REG 1 @Y40LB22*/')SKIP;      19400003
*EXIT: RETURN CODE(RETCODE);                               /*@Y40LB22*/ 19450003
*   %END;                                                  /*@Y40LB22*/ 19500003
./  ADD  SSI=42610490,NAME=ICBPAIR
* %/* START OF SPECIFICATIONS  ***                             @Y30LB02 00050003
.*                                                             @Y30LB02 00100003
.*01  MODULE-NAME = ICBPAIR                                    @Y30LB02 00150003
.*                                                             @Y30LB02 00200003
.*01  DESCRIPTIVE-NAME = PURGE/ASSIGN PRIMARY HOST/            @Y30LB02 00250003
.*                       INITIALIZE/HOST READY                 @Y30LB02 00300003
.*                                                             @Y30LB02 00350003
.*01  COPYRIGHT = NONE                                         @Y30LB02 00400003
.*                                                             @Y30LB02 00450003
.*01  STATUS = OS/VS1 RELEASE 4.0,                             @Y30LB02 00500003
.*             OS/VS2 RELEASE 3.0                              @Y30LB02 00550003
.*                                                             @Y30LB02 00600003
.*01  FUNCTION = BUILDS A REQUEST BLOCK FOR A PURGE/           @Y30LB02 00650003
.*               ASSIGN PRIMARY HOST/INITIALIZE/               @Y30LB02 00700003
.*               HOST READY REQUEST.  THE MACRO IS A           @Y30LB02 00750003
.*               COMMUNICATION LINK BETWEEN THE CALLER         @Y30LB02 00800003
.*               AND THE MSSC SVC MODULE.                      @Y30LB02 00850003
.*                                                             @Y30LB02 00900003
.*01  NOTES = ICBPAIR IS A BILINQUAL MACRO.                    @Y30LB02 00950003
.*                                                             @Y30LB02 01000003
.*02    DEPENDENCIES = NONE                                    @Y30LB02 01050003
.*                                                             @Y30LB02 01100003
.*02    RESTRICTIONS = THE CALLER SHOULD AVOID USING THE       @Y30LB02 01150003
.*        THE FOLLOWING PREFIXES: ICB, AIR, PAIR, AND PURG.    @Y30LB02 01200003
.*                                                             @Y30LB02 01250003
.*02    REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF           @Y30LB02 01300003
.*                             REGISTERS BY MACROS:            @Y30LB02 01350003
.*                             R0,R1,R14, AND R15.             @Y30LB02 01400003
.*                                                             @Y30LB02 01450003
.*01  MODULE-TYPE = MACRO                                      @Y30LB02 01500003
.*                                                             @Y30LB02 01550003
.*02    PROCESSOR = PLS2 AND ASSEM                             @Y30LB02 01600003
.*                                                             @Y30LB02 01650003
.*01  INPUT                                                    @Y30LB02 01700003
.*                                                             @Y30LB02 01750003
.*     THE PURGE REQUEST IS ISSUED WHEN THE CALLER WANTS ALL   @Y30LB02 01800003
.*     VOLUMES MOUNTED FOR THE HOST (OPTIONALLY SPECIFIED BY   @Y30LB02 01850003
.*     THE HOST ID) TO BE DEMOUNTED.  IF THE FLAGS FIELD IS    @Y30LB02 01900003
.*     SPECIFIED, THEN THE PURGE IS FOR THE OTHER PROCESSOR    @Y30LB02 01950003
.*     OF THE MP PAIR.                                         @Y30LB02 02000003
.*                                                             @Y30LB02 02050003
.*     THE ASSIGN PRIMARY HOST REQUREST IS ISSUED WHEN THE     @Y30LB02 02100003
.*     CALLER WISHES TO ESTABLISH THE HOST TO RECEIVE UN-      @Y30LB02 02150003
.*     TAGGED MESSAGES; THAT IS, MESSAGES FROM THE SUBSYSTEM   @Y30LB02 02200003
.*     NOT ASSOCIATED WITH A PARTICULAR ORDER OR REQUEST.      @Y30LB02 02250003
.*                                                             @Y30LB02 02300003
.*     THE INITIALIZE REQUEST IS ISSUED WHEN THE CALLER        @Y30LB02 02350003
.*     WISHES TO ESTABLISH COMMUNICATION WITH THE MSC, OR TO   @Y30LB02 02400003
.*     INITIALIZE BOTH CPUS OF A TIGHTLY COUPLED MP PAIR.      @Y30LB02 02450003
.*     (IF THE FLAGS FIELD IS SPECIFIED, THEN, INITIALIZE      @Y30LB02 02500003
.*     BOTH CPUS OF A TIGHTLY COUPLED MP ENVIRONMENT).         @Y30LB02 02550003
.*                                                             @Y30LB02 02600003
.*     THE HOST READY REQUEST IS ISSUED WHEN THE CALLER        @Y30LB02 02650003
.*     WANTS TO INDICATE TO THE MSC THAT THE HOST IS READY     @Y30LB02 02700003
.*     TO ACCEPT ATTENTION INTERRUPTS.                         @Y30LB02 02750003
.*                                                             @Y30LB02 02800003
.*   MACRO SYNTAX                                              @Y30LB02 02850003
.*                                                             @Y30LB02 02900003
.*   LIST FORM                                                 @Y30LB02 02950003
.*                                                             @Y30LB02 03000003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03050003
.*                                                             @Y30LB02 03100003
.*ICBPAIR  MF=L - (BAL)          MF=(L,MAP) - BAL              @Y30LB02 03150003
.*         MF(L,NAME/(R))-PLS    MF(L,NAME/(R),ATTR)-PLS       @Y30LB02 03200003
.*         TYPE=PURG/APH/INITL/RDY                             @Y30LB02 03250003
.*                                                             @Y30LB02 03300003
.*   STANDARD FORM                                             @Y30LB02 03350003
.*                                                             @Y30LB02 03400003
.* VERB    REQUIRED PARMS            OPTIONAL PARMS            @Y30LB02 03450003
.*                                                             @Y30LB02 03500003
.*ICBPAIR  TYPE=PURG/APH/INITL/RDY  FLAGS=ADDR/(R)             @Y30LB02 03550003
.*                                  HOSTID=ADDR/(R)            @Y30LB02 03600003
.*                                                             @Y30LB02 03650003
.* EXECUTE FORM                                                @Y30LB02 03700003
.*                                                             @Y30LB02 03750003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03800003
.*                                                             @Y30LB02 03850003
.*ICBPAIR  MF(E,NAME/(R))       MF(E,NAME/(R),COMPLETE)-PLS    @Y30LB02 03900003
.*      TYPE=PURG/APH/INITL/RDY FLAGS=ADDR/(R)                 @Y30LB02 03950003
.*                              HOSTID=ADDR/(R)                @Y30LB02 04000003
.*                                                             @Y30LB02 04050003
.*   KEYWORD PARAMETERS:                                       @Y30LB02 04100003
.*                                                             @Y30LB02 04150003
.*                                                             @Y30LB02 04200003
.*   MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE         @Y30LB02 04250003
.*          MACRO FORMAT AND MAY GIVE THE ADDRESS OR           @Y30LB02 04300003
.*          ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK      @Y30LB02 04350003
.*          IS STORED.                                         @Y30LB02 04400003
.*                                                             @Y30LB02 04450003
.*          L - LIST FORM: THE EXPANSION OF THE L-FORM         @Y30LB02 04500003
.*              MACRO WILL RESULT IN A REQUEST BLOCK WITH      @Y30LB02 04550003
.*              THE ONLY NON-ZERO FIELDS BEING THE OPCODE      @Y30LB02 04600003
.*              AND LENGTH FIELDS.                             @Y30LB02 04650003
.*                                                             @Y30LB02 04700003
.*          (1) 'MAP' - IF MAP IS SPECIFIED WITH THE           @Y30LB02 04750003
.*              ASSEMBLER MACRO CALL A DSECT EQUIVALENT TO     @Y30LB02 04800003
.*              A MAPPING MACRO IS PRODUCED.                   @Y30LB02 04850003
.*                                                             @Y30LB02 04900003
.*          (2) NAME - THE MACRO INVOKER MUST SPECIFY A        @Y30LB02 04950003
.*              NAME FOR HIS STRUCTURE WHEN INVOKING THE       @Y30LB02 05000003
.*              PLS LIST FORM.                                 @Y30LB02 05050003
.*                                                             @Y30LB02 05100003
.*          (3) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS       @Y30LB02 05150003
.*              ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION    @Y30LB02 05200003
.*              IN AN UNINITIALIZED REQUEST BLOCK.  ATTRI-     @Y30LB02 05250003
.*              BUTE EXAMPLE:                                  @Y30LB02 05300003
.*                                                             @Y30LB02 05350003
.*              CHAR, FIXED, STATIC LOCAL, NONLOCAL,           @Y30LB02 05400003
.*              BASED(*), ETC.                                 @Y30LB02 05450003
.*                                                             @Y30LB02 05500003
.*       NULL - STANDARD FORM: THE EXPANSION OF THIS FORM      @Y30LB02 05550003
.*              CONSISTS OF A REQUEST BLOCK, A LINKAGE         @Y30LB02 05600003
.*              INSTRUCTION, AND, POSSIBLY, PARAMETER          @Y30LB02 05650003
.*              BINDING INSTRUCTIONS.                          @Y30LB02 05700003
.*                                                             @Y30LB02 05750003
.*          E - EXECUTABLE FORM: THE EXPANSION OF THIS FORM    @Y30LB02 05800003
.*              CONSISTS OF A LINKAGE INSTRUCTION AND          @Y30LB02 05850003
.*              POSSIBLY, PARAMETER BINDING INSTRUCTIONS.      @Y30LB02 05900003
.*                                                             @Y30LB02 05950003
.*              SUB-PARAMETERS                                 @Y30LB02 06000003
.*                                                             @Y30LB02 06050003
.*              (1)  AN E MUST BE SPECIFIED IN THE FIRST       @Y30LB02 06100003
.*                   SUB-PARAMETER POSITION.  THIS INDICATES   @Y30LB02 06150003
.*                   THAT THE MACRO IS IN EXECUTABLE FORM.     @Y30LB02 06200003
.*                                                             @Y30LB02 06250003
.*              (2)  A NAME OR A REGISTER MUST BE SPECIFIED    @Y30LB02 06300003
.*                   IN THE SECOND SUB-PARAMETER.              @Y30LB02 06350003
.*                                                             @Y30LB02 06400003
.*              (3)  'COMPLETE' - COMPLETE WILL CAUSE THE      @Y30LB02 06450003
.*                   MACRO TO ZERO OUT THE REQUEST BLOCK.      @Y30LB02 06500003
.*                   AFTER ZEROING THE REQUEST BLOCK THE       @Y30LB02 06550003
.*                   FUNCTION OPCODE AND LENGTH ARE PLACED     @Y30LB02 06600003
.*                   IN THE REQUEST BLOCK.                     @Y30LB02 06650003
.*                                                             @Y30LB02 06700003
.*   TYPE - INDICATES WHETHER THE REQUEST IS FOR PURGE         @Y30LB02 06750003
.*          (PURG), ASSIGN PRIMARY HOST(APH), INITIALIZE       @Y30LB02 06800003
.*          (INTL) OR HOST READY(RDY) COMMAND. THE OPCODE      @Y30LB02 06850003
.*          FIELD OF THE REQUEST BLOCK IS FILLED IN BY         @Y30LB02 06900003
.*          THE MACRO.  THE FOLLOWING TABLE GIVES THE          @Y30LB02 06950003
.*          OPCODES FOR EACH REQUEST.                          @Y30LB02 07000003
.*                                                             @Y30LB02 07050003
.*               REQUEST               | OPCODE                @Y30LB02 07100003
.*               -----------------------------------           @Y30LB02 07150003
.*               PURGE                 | HEX'14'               @Y30LB02 07200003
.*               ASSIGN PRIMARY HOST   | HEX'12'               @Y30LB02 07250003
.*               INITIALIZE            | HEX'10'               @Y30LB02 07300003
.*               HOST READY            | HEX'20'               @Y30LB02 07350003
.*                                                             @Y30LB02 07400003
.*   HOSTID-OPTIONALLY INDICATES THE HOST (OTHER THAN THE      @Y30LB02 07450003
.*          ISSUING HOST) FOR WHICH THE REQUEST IS BEING       @Y30LB02 07500003
.*          ISSUED.  SPECIFIED FOR PURGE REQUESTS ONLY.        @Y30LB02 07550003
.*                                                             @Y30LB02 07600003
.*   FLAGS -THE FIELD WHICH INDICATES THE FUNCTION(S) TO BE    @Y30LB02 07650003
.*          PERFORMED.  THIS PARAMETER IS SPECIFIED ONLY IF    @Y30LB02 07700003
.*          TYPE IS SPECIFIED AS INITL OR PURG.  THE FORMAT    @Y30LB02 07750003
.*          OF THE FIELD IS SHOWN BELOW.                       @Y30LB02 07800003
.*                                                             @Y30LB02 07850003
.*   FLAGS:  2 BYTES                                           @Y30LB02 07900003
.*    _________________________________                        @Y30LB02 07950003
.*    | | |0|0|0|0|0|0|0|0|0|0|0|0|0|0|                        @Y30LB02 08000003
.*    _________________________________                        @Y30LB02 08050003
.*                                                             @Y30LB02 08100003
.*                                                             @Y30LB02 08150003
.* IF TYPE IS SPECIFIED AS INITL, THEN:                        @Y30LB02 08200003
.*                                                             @Y30LB02 08250003
.*   BIT 0-------  ALWAYS ZEROES                               @Y30LB02 08300003
.*                                                             @Y30LB02 08350003
.*   BIT 1--'1'B,  INITIALIZE BOTH CPU'S OF A TIGHTLY          @Y30LB02 08400003
.*                 COUPLED MP ENVIRONMENT                      @Y30LB02 08450003
.*          '0'B,  NO FUNCTION REQUESTED                       @Y30LB02 08500003
.*                                                             @Y30LB02 08550003
.*   BITS 2-15--   ALWAYS ZEROES.                              @Y30LB02 08600003
.*                                                             @Y30LB02 08650003
.* IF TYPE IS  SPECIFIED AS PURG, THEN:                        @Y30LB02 08700003
.*                                                             @Y30LB02 08750003
.*   BIT 0--'1'B,  PURGE FOR THE OTHER PROCESSOR OF THIS       @Y30LB02 08800003
.*                  MP PAIR.                                   @Y30LB02 08850003
.*          '0'B, PURGE IS FOR REQUESTING HOST.                @Y30LB02 08900003
.*                                                             @Y30LB02 08950003
.*   BITS 1-15--ALWAYS ZEROES.                                 @Y30LB02 09000003
.*                                                             @Y30LB02 09050003
.*                                                             @Y30LB02 09100003
.*01  EXIT-NORMAL = VALID INVOCATION                           @Y30LB02 09150003
.*                                                             @Y30LB02 09200003
.*02    CONDITION = RETURN CODE = 0.                           @Y30LB02 09250003
.*                                                             @Y30LB02 09300003
.*02    OUTPUT = IN-LINE PLS/BAL STATEMENTS THAT PERFORM       @Y30LB02 09350003
.*               THE REQUESTED FUNCTION.                       @Y30LB02 09400003
.*                                                             @Y30LB02 09450003
.*01  EXIT-ERROR = INVALID INVOCATION                          @Y30LB02 09500003
.*                                                             @Y30LB02 09550003
.*02    CONDITION = RETURN CODE = 12.                          @Y30LB02 09600003
.*                                                             @Y30LB02 09650003
.*02    OUTPUT = ERROR MESSAGE                                 @Y30LB02 09700003
.*                                                             @Y30LB02 09750003
.*01  EXTERNAL-REFERENCES = NONE                               @Y30LB02 09800003
.*                                                             @Y30LB02 09850003
.*01  TABLES = NONE                                            @Y30LB02 09900003
.*                                                             @Y30LB02 09950003
.*01 MESAGES = AS FOLLOWS:                                     @Y30LB02 10000003
.*           ICB600I: TYPE MUST BE SPECIFIED                   @Y30LB02 10050003
.*           ICB601I: TYPE IS INCORRECTLY SPECIFIED            @Y30LB02 10100003
.*           ICB602I: A NAME FOR THE REQUEST BLOCK MUST        @Y30LB02 10150003
.*                    BE SPECIFIED IN MF(2)                    @Y30LB02 10200003
.*           ICB612I: MF(2) MUST CONTAIN REQ BLK NAME          @Y30LB02 10250003
.*                    IF EXEC MACRO FORM REQUESTED             @Y30LB02 10300003
.*           ICB613I: MISSING REQ BLK NAME OR MORE             @Y30LB02 10350003
.*                    THAN 2 SUBPARAMETERS FOR MF              @Y30LB02 10400003
.*           ICB615I: INVALID MF PARAMETER SPECIFIED,          @Y30LB02 10450003
.*                    MUST BE L, E, OR NULL                    @Y30LB02 10500003
.*                                                             @Y30LB02 10550003
.*01  INNER-MACRO = NONE                                       @Y30LB02 10600003
.*                                                             @Y30LB02 10650003
.*01  SYSTEM-MACROS = IHBINNRA                                 @Y30LB02 10700003
.*                                                             @Y30LB02 10750003
.*01  CHANGE-ACTIVITY = S/D = X04AC02 AND Y30LB02              @Y30LB02 10800003
.*                                                             @Y30LB02 10850003
.**** END OF SPECIFICATIONS ***                                @Y30LB02 10900003
         MACRO                                                 @Y30LB02 10950003
&SYMBOL  ICBPAIR &MF=,&TYPE=,&HOSTID=,&FLAGS=                  @Y30LB02 11000003
         LCLB  &ESW                    EXIT-SWITCH             @Y30LB02 11050003
         LCLB  &BSW                    BRCH-SWITCH             @Y30LB02 11100003
         LCLB  &LSW                    LINK-SWITCH             @Y30LB02 11150003
         LCLC  &PARMAC                 SETC SYMBOL             @Y30LB02 11200003
         LCLC  &PURMAC                 SETC SYMBOL             @Y30LB02 11250003
&PARMAC  SETC  'P'.'&SYSNDX'                                   @Y30LB02 11300003
&PURMAC  SETC  'PU'.'&SYSNDX'                                  @Y30LB02 11350003
         AIF   ('&TYPE' EQ 'PURG' OR '&TYPE' EQ 'APH' OR               *11400003
               '&TYPE' EQ 'INITL' OR '&TYPE' EQ 'RDY').TEST1   @Y30LB02 11450003
&ESW     SETB  1                       SET EXIT-SWITCH TO 1    @Y30LB02 11500003
         AIF   ('&TYPE' EQ '').NOT     IF TYPE NULL, BRCH      @Y30LB02 11550003
         MNOTE 12,'  ICB601I - TYPE IS INCORRECTLY SPECIFIED'  @Y30LB02 11600003
         AGO   .TEST1                  BRANCH                  @Y30LB02 11650003
.NOT     ANOP                                                  @Y30LB02 11700003
         MNOTE 12,'  ICB600I - TYPE MUST BE SPECIFIED '        @Y30LB02 11750003
.TEST1   AIF   (&ESW).EXIT             IF EXIT-SWITCH ON,BRCH  @Y30LB02 11800003
         AIF   ('&MF(1)' NE 'L').NLIST BRCH IF NOT LIST FORM   @Y30LB02 11850003
*  MACMEAN  PURGE/ASSIGN/INITIALIZE/READY MACRO                @Y30LB02 11900003
*    INITIALIZED/UNINITIALIZED LIST FORM                       @Y30LB02 11950003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 12000003
         AIF   ('&TYPE' EQ 'PURG').LPURG BRCH IF PURG REQUEST  @Y30LB02 12050003
         AIF   ('&MF(2)' EQ 'MAP').LISTDS   DESECT REQUESTED   @Y30LB02 12100003
&SYMBOL  DS    0F                                              @Y30LB02 12150003
AIRLEN   DC    F'8'                    REQUEST BLOCK LENGTH    @Y30LB02 12200003
         AIF   ('&TYPE' EQ 'APH').LAPH BRCH IF APH REQUEST     @Y30LB02 12250003
         AIF   ('&TYPE' EQ 'INITL').LINITL BRCH IF INITL REQ.  @Y30LB02 12300003
AIROP    DC    XL1'20'                 RDY OPCODE              @Y30LB02 12350003
         AGO   .ZEROES                 BRANCH                  @Y30LB02 12400003
.LAPH    ANOP                                                  @Y30LB02 12450003
AIROP    DC    XL1'12'                 APH OPCODE              @Y30LB02 12500003
         AGO   .ZEROES                 BRANCH                  @Y30LB02 12550003
.LINITL  ANOP                                                  @Y30LB02 12600003
AIROP    DC    XL1'10'                 INITL OPCODE            @Y30LB02 12650003
.ZEROES  ANOP                                                  @Y30LB02 12700003
AIRRES0  DC    XL1'00'                 ZERO RESERVED FIELD     @Y30LB02 12750003
AIRFLAG  DC    XL2'0000'               ZERO FLAGS FIELD        @Y30LB02 12800003
         AGO   .EXIT                   BRANCH                  @Y30LB02 12850003
.*                                                             @Y30LB02 12900003
.LISTDS  ANOP                                                  @Y30LB02 12950003
ICBPAIR  DSECT                                                 @Y30LB02 13000003
AIRLEN   DS    F                       REQUEST BLK 8 BYTES     @Y30LB02 13050003
         AIF   ('&TYPE' EQ 'APH').LAPH1 BRCH IF APH REQUEST    @Y30LB02 13100003
         AIF   ('&TYPE' EQ 'INITL').LINITL1 BRCH IF INITL REQ. @Y30LB02 13150003
AIROP    DS    XL1                     RDY OPCODE 20 HEX       @Y30LB02 13200003
         AGO   .ZEROE1                 BRANCH                  @Y30LB02 13250003
.LAPH1   ANOP                                                  @Y30LB02 13300003
AIROP    DS    XL1                     APH OPCODE 12 HEX       @Y30LB02 13350003
         AGO   .ZEROE1                 BRANCH                  @Y30LB02 13400003
.LINITL1 ANOP                                                  @Y30LB02 13450003
AIROP    DS    XL1                     INITL OPCODE 10 HEX     @Y30LB02 13500003
.ZEROE1  ANOP                                                  @Y30LB02 13550003
AIRRES0  DS    XL1                     ZERO RESERVED FIELD     @Y30LB02 13600003
AIRFLAG  DS    XL2                     ZERO FLAGS FIELD        @Y30LB02 13650003
         AGO   .EXIT                   BRANCH                  @Y30LB02 13700003
.*                                                             @Y30LB02 13750003
.LPURG   ANOP                                                  @Y30LB02 13800003
         AIF   ('&MF(2)' EQ 'MAP').LPURGDS  PURGE DSECT        @Y30LB02 13850003
&SYMBOL  DS    0F                                              @Y30LB02 13900003
PURGLEN  DC    F'13'                   PURGE BLOCK LENGTH      @Y30LB02 13950003
PURGOP   DC    XL1'14'                 PURG OPCODE             @Y30LB02 14000003
PURGRES0 DC    XL1'00'                 ZERO RESERVED FIELD     @Y30LB02 14050003
PURGFLG  DC    XL2'0000'               ZERO FLAGS FIELD        @Y30LB02 14100003
PURGHOST DC    XL5'0000000000'         ZERO HOSTID FIELD       @Y30LB02 14150003
         AGO   .EXIT                   BRCH TO EXIT            @Y30LB02 14200003
.*                                                             @Y30LB02 14250003
.LPURGDS ANOP                                                  @Y30LB02 14300003
ICBPAIR  DSECT                                                 @Y30LB02 14350003
PURGLEN  DS    F                       PURGE BLK 13 BYTES      @Y30LB02 14400003
PURGOP   DS    XL1                     PURG OPCODE 14 HEX      @Y30LB02 14450003
PURGRES0 DS    XL1                     ZERO RESERVED FIELD     @Y30LB02 14500003
PURGFLG  DS    XL2                     FLAGS FIELD             @Y30LB02 14550003
PURGHOST DS    CL5                     HOSTID FIELD            @Y30LB02 14600003
         AGO   .EXIT                   BRCH TO EXIT            @Y30LB02 14650003
.*                                                             @Y30LB02 14700003
.NLIST   AIF   ('&MF(1)' NE '').EXCK   IF NOT STD FORM,BRCH    @Y30LB02 14750003
*  MACMEAN  PURGE/ASSIGN/INITIALIZE/READY MACRO                @Y30LB02 14800003
*              STANDARD FORM                                   @Y30LB02 14850003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 14900003
         CNOP  0,4                                             @Y30LB02 14950003
         AIF   ('&TYPE' EQ 'PURG').SPURG BRCH IF PURG REQUEST  @Y30LB02 15000003
&SYMBOL  BAL   1,&PARMAC               BRCH AROUND BLOCK       @Y30LB02 15050003
AIRLEN   DC    A(&PARMAC-*)            REQUEST BLOCK LENGTH    @Y30LB02 15100003
         AIF   ('&TYPE' EQ 'APH').SAPH BRCH IF APH REQUEST     @Y30LB02 15150003
         AIF   ('&TYPE' EQ 'INITL').SINITL BRCH IF INITL REQ.  @Y30LB02 15200003
AIROP    DC    XL1'20'                 RDY OPCODE              @Y30LB02 15250003
         AGO   .REST                   BRCH TO REST OF DC'S    @Y30LB02 15300003
.SAPH    ANOP                                                  @Y30LB02 15350003
AIROP    DC    XL1'12'                 APH OPCODE              @Y30LB02 15400003
         AGO   .REST                   BRCH TO REST OF DC'S    @Y30LB02 15450003
.SINITL  ANOP                                                  @Y30LB02 15500003
AIROP    DC    XL1'10'                 INITL OPCODE            @Y30LB02 15550003
.REST    ANOP                                                  @Y30LB02 15600003
AIRRES0  DC    XL1'00'                 ZERO RESERVED FIELD     @Y30LB02 15650003
AIRFLAG  DC    XL2'0000'               ZERO FLAGS FIELD        @Y30LB02 15700003
&PARMAC  EQU   *                                               @Y30LB02 15750003
         AGO   .CONT0                  BRCH IF NOT PURGE       @Y30LB02 15800003
.SPURG   ANOP                                                  @Y30LB02 15850003
&SYMBOL  BAL   1,&PURMAC               BRCH AROUND BLOCK       @Y30LB02 15900003
PURGLEN  DC    A(&PARMAC-*)            REQUEST BLOCK LENGTH    @Y30LB02 15950003
PURGOP   DC    XL1'14'                 PURG OPCODE             @Y30LB02 16000003
PURGRES0 DC    XL1'00'                 ZERO RESERVED FIELD     @Y30LB02 16050003
PURGFLG  DC    XL2'0000'               ZERO FLAGS FIELD        @Y30LB02 16100003
PURGHOST DC    XL5'0000000000'         ZERO HOSTID FIELD       @Y30LB02 16150003
&PARMAC  EQU   *                                               @Y30LB02 16200003
&PURMAC  DS    0F                                              @Y30LB02 16250003
.CONT0   ANOP                                                  @Y30LB02 16300003
&BSW     SETB  1                       SET BRCH-SWITCH TO 1    @Y30LB02 16350003
         AGO   .TEST2                  BRANCH                  @Y30LB02 16400003
.EXCK    AIF   ('&MF(1)' EQ 'E').EXEC  IF EXECUTABLE FORM,BRCH @Y30LB02 16450003
&ESW     SETB  1                       SET EXIT-SWITCH TO 1    @Y30LB02 16500003
         MNOTE 12,'  ICB615I - INVALID MF PARAMETER '          @Y30LB02 16550003
         MNOTE 12,'  SPECIFIED, MUST BE, L, E, OR NULL'        @Y30LB02 16600003
         AGO   .TEST2                  BRANCH                  @Y30LB02 16650003
.EXEC    AIF   (N'&MF EQ 2).CONT1      IF 2 SUBPARAMETERS,BRH  @Y30LB02 16700003
&ESW     SETB  1                       SET EXIT-SWITCH TO 1    @Y30LB02 16750003
         MNOTE 12,'  ICB613I - MISSING REQ BLK NAME OR MORE '           16800003
         MNOTE 12,'  THAN 2 SUBPARAMETERS FOR MF '                      16850003
         AGO   .TEST2                  BRANCH                  @Y30LB02 16900003
.CONT1   ANOP                                                  @Y30LB02 16950003
*  MACMEAN  PURGE/ASSIGN/INITIALIZE/READY MACRO                @Y30LB02 17000003
*              EXECUTE FORM                                    @Y30LB02 17050003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 17100003
&SYMBOL  IHBINNRA &MF(2)               LOAD THE ADDR INTO R1   @Y30LB02 17150003
.*                                     BY USING IHBINNRA MAC   @Y30LB02 17200003
         AIF   ('&TYPE' EQ 'PURG').CONT2 BRCH IF PURGE         @Y30LB02 17250003
         LA    15,8                    PUT LENGTH(8) INTO R15  @Y30LB02 17300003
         AGO   .CONT3                                          @Y30LB02 17350003
.CONT2   ANOP                                                  @Y30LB02 17400003
         LA    15,13                   PUT LENGTH(13) INTO R15 @Y30LB02 17450003
.CONT3   ANOP                                                  @Y30LB02 17500003
         ST    15,0(1)                 R15 INTO LENGTH FIELD   @Y30LB02 17550003
.TEST2   AIF   (&ESW).EXIT             BRCH IF EXIT-SWITCH ON  @Y30LB02 17600003
         AIF   (&BSW).TYPECK           BRCH IF BRCH-SWITCH ON  @Y30LB02 17650003
         AIF   ('&TYPE' EQ 'PURG').EPURG BRCH IF PURG REQUEST  @Y30LB02 17700003
         AIF   ('&TYPE' EQ 'APH').EAPH BRCH IF APH REQUEST     @Y30LB02 17750003
         AIF   ('&TYPE' EQ 'INITL').EINITL BRCH IF INITL REQ.  @Y30LB02 17800003
         MVI   4(1),X'20'              PUT RDY OPCODE IN BLK   @Y30LB02 17850003
         AGO   .TYPECK                 BRANCH                  @Y30LB02 17900003
.EPURG   ANOP                                                  @Y30LB02 17950003
         MVI   4(1),X'14'              PUT PURG OPCODE IN BLK  @Y30LB02 18000003
         AGO   .TYPECK                 BRANCH                  @Y30LB02 18050003
.EAPH    ANOP                                                  @Y30LB02 18100003
         MVI   4(1),X'12'              PUT APH OPCODE IN BLK   @Y30LB02 18150003
         AGO   .TYPECK                 BRANCH                  @Y30LB02 18200003
.EINITL  ANOP                                                  @Y30LB02 18250003
         MVI   4(1),X'10'              PUT INITL OPCODE IN BLK @Y30LB02 18300003
.*      THE FOLLOWING CODE CHECKS FOR PURG BECAUSE HOSTID      @Y30LB02 18350003
.*      IS A VALID PARAMETER FOR THAT REQUEST ONLY.            @Y30LB02 18400003
.*      IF PURG IS NOT SPECIFIED THE SECTION OF CODE(AT TEST3) @Y30LB02 18450003
.*      THAT CHECKS FOR HOSTID IS BY-PASSED.                   @Y30LB02 18500003
.TYPECK  AIF   ('&TYPE' EQ 'PURG').CKFLG                       @Y30LB02 18550003
         AIF   ('&TYPE' NE 'INITL').SETLSW IF NOT INITL        @Y30LB02 18600003
.*                                     REQUEST,BRANCH          @Y30LB02 18650003
.*      THIS SECTION OF CODE IS FOR INITL REQUESTS.            @Y30LB02 18700003
.*      IT CHECKS FOR THE FLAGS PARAMETER.                     @Y30LB02 18750003
.CKFLG   AIF   ('&FLAGS' EQ '').SETLSW BRCH IF FLAGS ARE NULL  @Y30LB02 18800003
         AIF   ('&FLAGS'(1,1) EQ '(').RFLAGS BRCH IF IN REG.   @Y30LB02 18850003
         MVC   6(2,1),&FLAGS           MOVE FLAGS INFO INTO    @Y30LB02 18900003
*                                      FLAGS FIELD             @Y30LB02 18950003
         AIF   ('&TYPE' EQ 'PURG').TEST3 IF PURG-BRCH          @Y30LB02 19000003
         AIF   ('&TYPE' EQ 'PURG').TEST3 IF PURG-BRCH          @Y30LB02 19050003
         AGO   .SETLSW                 BRCH TO SET LSW         @Y30LB02 19100003
.RFLAGS  ANOP                                                  @Y30LB02 19150003
         MVC   6(2,1),0(&FLAGS(1))     MOVE FLAGS INFO INTO    @Y30LB02 19200003
*                                      FLAGS FIELD             @Y30LB02 19250003
         AIF   ('&TYPE' EQ 'PURG').TEST3 IF PURG-BRCH          @Y30LB02 19300003
         AIF   ('&TYPE' EQ 'PURG').TEST3 IF PURG-BRCH          @Y30LB02 19350003
.SETLSW  ANOP                                                  @Y30LB02 19400003
         AIF   ('&TYPE' EQ 'PURG').TEST3 IF PURG-BRCH          @Y30LB02 19450003
         AIF   ('&TYPE' EQ 'PURG').TEST3 IF PURG-BRCH          @Y30LB02 19500003
&LSW     SETB  1                       SET LINK SWITCH TO 1    @Y30LB02 19550003
.TEST3   AIF   (&LSW).LINK             BRCH IF LINK-SWITCH ON  @Y30LB02 19600003
         AIF   ('&HOSTID' NE '').TEST4 BRCH IF NOT NULL        @Y30LB02 19650003
&LSW     SETB  1                       SET LINK-SWITCH TO 1    @Y30LB02 19700003
.TEST4   AIF   (&ESW).EXIT             BRCH IF EXIT-SWITCH ON  @Y30LB02 19750003
         AIF   (&LSW).LINK             BRCH IF LINK-SWITCH ON  @Y30LB02 19800003
         AIF   ('&HOSTID'(1,1) EQ '(').RHOSTID BRCH IF IN REG  @Y30LB02 19850003
         MVC   8(5,1),&HOSTID          MV HOSTID TO HOSTID FLD @Y30LB02 19900003
         AGO   .LINK                   BRANCH                  @Y30LB02 19950003
.RHOSTID ANOP                                                  @Y30LB02 20000003
         MVC   8(5,1),0(&HOSTID(1))    MV HOSTID TO HOSTID FLD @Y30LB02 20050003
.LINK    ANOP                                                  @Y30LB02 20100003
         SVC   126                     ISSUE SVC INSTRUCITON   @Y30LB02 20150003
.EXIT    MEND                          MACRO ENDS              @Y30LB02 20200003
**/                                                                     20250003
* ICBPAIR: MACRO KEYS(MF,TYPE,HOSTID,FLAGS);               /*@Y30LB02*/ 20300003
*/*                                                          @Y30LB02*/ 20350003
*/*                                                          @Y30LB02*/ 20400003
*/* EXTERNAL DECLARES                                        @Y30LB02*/ 20450003
*   DCL  AIRTEST FIXED EXT;            /*USED IN TESTS TO    @Y30LB02*/ 20500003
*   DCL PURGTEST FIXED EXT;            /*SEE IF STD FORMS    @Y30LB02*/ 20550003
*                                      /*HAVE ALREADY BEEN   @Y30LB02*/ 20600003
*                                      /*INVOKED             @Y30LB02*/ 20650003
*   DCL PAIRTSTR FIXED EXT;            /*USED AS A TEST TO   @Y30LB02*/ 20700003
*                                      /*SEE IF R1 ALREADY   @Y30LB02*/ 20750003
*                                      /*DECLARED            @Y30LB02*/ 20800003
*/* INTERNAL DECLARES                                        @Y30LB02*/ 20850003
*   DCL RETCODE FIXED;                 /*RETURN CODE         @Y30LB02*/ 20900003
*   DCL POPCODE CHAR;                  /*PURG OPCODE         @Y30LB02*/ 20950003
*   DCL AOPCODE CHAR;                  /*APH OPCODE          @Y30LB02*/ 21000003
*   DCL IOPCODE CHAR;                  /*INITL OPCODE        @Y30LB02*/ 21050003
*   DCL ROPCODE CHAR;                  /*RDY OPCODE          @Y30LB02*/ 21100003
*   DCL LENGTH CHAR;                   /*LENGTH OF LIST      @Y30LB02*/ 21150003
*   DCL PLENGTH CHAR;                  /*LEN OF PURG LIST    @Y30LB02*/ 21200003
*   DCL ESW FIXED;                     /*EXIT SWITCH         @Y30LB02*/ 21250003
*   DCL BSW FIXED;                     /*BRANCH SWITCH       @Y30LB02*/ 21300003
*   DCL LSW FIXED;                     /*LINK SWITCH         @Y30LB02*/ 21350003
*   POPCODE='14';                      /*PURG OPCODE         @Y30LB02*/ 21400003
*   AOPCODE='12';                      /*APH OPCODE          @Y30LB02*/ 21450003
*   IOPCODE='10';                      /*INITL OPCODE        @Y30LB02*/ 21500003
*   ROPCODE='20';                      /*RDY OPCODE          @Y30LB02*/ 21550003
*   LENGTH='08';                       /*DEFINE LENGTH       @Y30LB02*/ 21600003
*   PLENGTH='0D';                      /*DEF PURGE LENGTH    @Y30LB02*/ 21650003
*/* INITIALIZE SWITCHES TO ZERO                              @Y30LB02*/ 21700003
*   ESW=0;                                                 /*@Y30LB02*/ 21750003
*   BSW=0;                                                 /*@Y30LB02*/ 21800003
*   LSW=0;                                                 /*@Y30LB02*/ 21850003
*/* END OF DECLARES AND INITIALIZATION                       @Y30LB02*/ 21900003
*   IF TYPE(1)='PURG' THEN             /*PURG REQUEST?       @Y30LB02*/ 21950003
*        GO TO TEST1;                  /*YES, BRANCH         @Y30LB02*/ 22000003
*   IF TYPE(1)='APH'  THEN             /*APH  REQUEST?       @Y30LB02*/ 22050003
*        GO TO TEST1;                  /*YES, BRANCH         @Y30LB02*/ 22100003
*   IF TYPE(1)='INITL' THEN            /*INITL REQUEST?      @Y30LB02*/ 22150003
*        GO TO TEST1;                  /*YES, BRANCH         @Y30LB02*/ 22200003
*   IF TYPE(1)='RDY' THEN              /*RDY  REQUEST?       @Y30LB02*/ 22250003
*        GO TO TEST1;                  /*YES, BRANCH         @Y30LB02*/ 22300003
*   ESW=1;                             /*TURN ON ESW         @Y30LB02*/ 22350003
*   IF TYPE='' THEN                    /*IS TYPE NULL?       @Y30LB02*/ 22400003
*        DO;                           /*YES,PRT ERROR MSG   @Y30LB02*/ 22450003
*             ANS MSG('  ICB600I - TYPE'||                              22500003
*                  ' MUST BE SPECIFIED') SKIP(5);          /*@Y30LB02*/ 22550003
*        END;                                              /*@Y30LB02*/ 22600003
*   ELSE                               /*PRINT ERROR MSG     @Y30LB02*/ 22650003
*        DO;                                               /*@Y30LB02*/ 22700003
*             ANS MSG('  ICB601I - TYPE'||                              22750003
*                  ' IS INCORRECTLY SPECIFIED') SKIP(5);   /*@Y30LB02*/ 22800003
*        END;                                              /*@Y30LB02*/ 22850003
*   RETCODE=12;                                            /*@Y30LB02*/ 22900003
*TEST1: IF ESW=1 THEN                  /*ESW ON?             @Y30LB02*/ 22950003
*        GO TO EXIT;                   /*YES, GO TO EXIT     @Y30LB02*/ 23000003
*   IF PAIRTSTR=0 THEN                 /*WAS R1 ALREADY      @Y30LB02*/ 23050003
*                                      /*DECLARED?           @Y30LB02*/ 23100003
*        DO;                           /*NO,PRT DCL FOR R1   @Y30LB02*/ 23150003
*             ANS('DCL PAIRR1  REG(1) PTR; '||             /*@Y30LB02*/ 23200003
*                  '/* WILL CONTAIN BLK ADDRESS @Y30LB02*/') SKIP(1);   23250003
*             PAIRTSTR=1;              /*TURN SWITCH ON      @Y30LB02*/ 23300003
*        END;                                              /*@Y30LB02*/ 23350003
*   IF MF(1)¬='L' THEN                 /*IF NOT LIST FORM    @Y30LB02*/ 23400003
*        GO TO NOTLIST;                /*BRANCH              @Y30LB02*/ 23450003
*   IF MF(2)='' THEN                   /*WAS A NAME GIVEN?   @Y30LB02*/ 23500003
*        DO;                           /*IF NOT, THEN        @Y30LB02*/ 23550003
*             ESW=1;                   /*TURN ON ESW         @Y30LB02*/ 23600003
*                                      /*AND,PRT ERROR MSG   @Y30LB02*/ 23650003
*             ANS MSG('  ICB602I - A NAME FOR THE '||                   23700003
*                  'REQUEST BLOCK MUST BE SPECIFIED '||                 23750003
*                  'IN MF(2)')SKIP(5);                     /*@Y30LB02*/ 23800003
*             RETCODE=12;                                  /*@Y30LB02*/ 23850003
*        END;                                              /*@Y30LB02*/ 23900003
*   IF ESW=1 THEN                      /*ESW ON?             @Y30LB02*/ 23950003
*        GO TO EXIT;                   /*YES,BRANCH TO EXIT  @Y30LB02*/ 24000003
*/*                                                          @Y30LB02*/ 24050003
*   IF MF(3) ¬= '' THEN                                                 24100003
*        GO TO ATTRLST;                                    /*@Y30LB02*/ 24150003
*/*********************************************************  @Y30LB02*/ 24200003
*/* START TO PRINT OUT DECLARES FOR LIST FORM                @Y30LB02*/ 24250003
*/*********************************************************  @Y30LB02*/ 24300003
*/*                                                          @Y30LB02*/ 24350003
*   ANS('/*******************************************'||                24400003
*       '************** @Y30LB02*/')SKIP;                               24450003
*   ANS('/*MACMEAN  MSSC PURG/ASSIGN/INITL/READY MACRO'||               24500003
*       '              @Y30LB02*/')SKIP;                                24550003
*   ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||                24600003
*       '               @Y30LB02*/')SKIP;                               24650003
*   ANS('/*THIS IS THE INITIALIZED LIST FORM         '||                24700003
*       '               @Y30LB02*/')SKIP;                               24750003
*   ANS('/*******************************************'||                24800003
*       '************** @Y30LB02*/')SKIP;                               24850003
*   ANS('DCL 1   '||MF(2)||'  STATIC LOCAL,') SKIP(1);     /*@Y30LB02*/ 24900003
*   IF TYPE(1)¬='PURG' THEN             /*NOT A PURG REQ?    @Y30LB02*/ 24950003
*        DO;                                               /*@Y30LB02*/ 25000003
*             ANS('      2  AIRLL FIXED(31) INIT('||QUOTE('08')||       25050003
*                  'X), /*LENGTH @Y30LB02*/')  SKIP(1);                 25100003
*             IF TYPE(1)='APH' THEN    /*APH REQUEST?        @Y30LB02*/ 25150003
*                  DO;                 /*PUT IN APH  OPCODE  @Y30LB02*/ 25200003
*                       ANS('      2  AIROP FIXED(8) INIT('             25250003
*                            ||QUOTE(AOPCODE)||                         25300003
*                            'X), /*OPCODE @Y30LB02*/') SKIP(1);        25350003
*                  END;                                    /*@Y30LB02*/ 25400003
*             ELSE                                                      25450003
*                  IF TYPE(1)='INITL' THEN /*INITL REQUEST?  @Y30LB02*/ 25500003
*                     DO;              /*PUT IN INITL  OPCD  @Y30LB02*/ 25550003
*                       ANS('      2  AIROP FIXED(8) INIT('             25600003
*                            ||QUOTE(IOPCODE)||                         25650003
*                            'X),/*OPCODE @Y30LB02*/') SKIP(1);         25700003
*                     END;                                 /*@Y30LB02*/ 25750003
*                  ELSE                                                 25800003
*                     DO;              /*PUT IN RDY OPCODE   @Y30LB02*/ 25850003
*                       ANS('      2  AIROP FIXED(8) INIT('             25900003
*                            ||QUOTE(ROPCODE)||                         25950003
*                            'X),/*OPCODE @Y30LB02*/') SKIP(1);         26000003
*                     END;                                 /*@Y30LB02*/ 26050003
*             ANS ('      2  * CHAR(1) INIT('||                         26100003
*                  QUOTE('00')||'X), /*ZEROES   @Y30LB02*/') SKIP(1);   26150003
*             ANS ('      2  AIRFLAG BIT(16) INIT('||                   26200003
*                 QUOTE('0000000000000000')||                           26250003
*                 'B),/*FLAGS/ZEROES @Y30LB02*/') SKIP(1);              26300003
*             ANS ('        3  AIRRESV BIT(1),'||                       26350003
*                  '/*RESERVED BIT  @Y30LB02*/') SKIP(1);               26400003
*             ANS ('        3  AIRCPUS BIT(1),'||                       26450003
*                  '/*INITIALIZE BOTH CPUS  @Y30LB02*/') SKIP(1);       26500003
*             ANS ('        3  *      BIT(14);'||          /*@Y30LB02*/ 26550003
*                  '/*RESERVED BITS  @Y30LB02*/') SKIP(1);              26600003
*        END;                                              /*@Y30LB02*/ 26650003
*   ELSE                               /*PURG REQUEST        @Y30LB02*/ 26700003
*        DO;                           /*DCL PURGE LIST      @Y30LB02*/ 26750003
*             ANS('      2  PURGLL FIXED(31) INIT('||QUOTE('0D')||      26800003
*                  'X), /*LENGTH @Y30LB02*/')  SKIP(1);                 26850003
*             ANS('      2  PURGOP FIXED(8) INIT('||                    26900003
*                  QUOTE(POPCODE)||'X), /*OPCODE @Y30LB02*/') SKIP(1);  26950003
*             ANS ('      2  * CHAR(1) INIT('||                         27000003
*                  QUOTE('00')||'X), /*ZEROES   @Y30LB02*/')            27050003
*                  SKIP(1);                                /*@Y30LB02*/ 27100003
*             ANS ('      2  PURGFLG BIT(16) INIT('||                   27150003
*                  QUOTE('0000000000000000')||'B),'||                   27200003
*                  '/*ZEROES   @Y30LB02*/') SKIP(1);                    27250003
*             ANS ('        3  PURGMPP BIT(1),'||                       27300003
*                  '/*PURGE OTHER PROCESSOR  @Y30LB02*/') SKIP(1);      27350003
*             ANS ('        3  *      BIT(15),'||                       27400003
*                  '/*RESERVED BITS  @Y30LB02*/') SKIP(1);              27450003
*             ANS('      2  PURGHOST CHAR(5) INIT('||                   27500003
*                  QUOTE('0000000000')||'X); /*HOSTID @Y30LB02*/')      27550003
*                  SKIP(1);                                /*@Y30LB02*/ 27600003
*        END;                                              /*@Y30LB02*/ 27650003
*   GO TO EXIT;                        /*BRANCH TO EXIT      @Y30LB02*/ 27700003
*/*                                                          @Y30LB02*/ 27750003
*/*********************************************************  @Y30LB02*/ 27800003
*/* THAT IS ALL THAT IS DONE FOR LIST FORM                   @Y30LB02*/ 27850003
*/*********************************************************  @Y30LB02*/ 27900003
*/*                                                          @Y30LB02*/ 27950003
*ATTRLST:                                                               28000003
*   ANS('/*******************************************'||                28050003
*       '************* @Y30LB02*/')SKIP;                                28100003
*   ANS('/*MACMEAN  MSSC PURG/ASSIGN/INITL/READY MACRO'||               28150003
*       '             @Y30LB02*/')SKIP;                                 28200003
*   ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||                28250003
*       '              @Y30LB02*/')SKIP;                                28300003
*   ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||                28350003
*       '              @Y30LB02*/')SKIP;                                28400003
*   ANS('/*******************************************'||                28450003
*       '************* @Y30LB02*/')SKIP;                                28500003
*   ANS('DCL 1   '||MF(2)||' '||MF(3)||','||                            28550003
*              '/*REQUEST BLOCK @Y30LB02*/') SKIP(1);                   28600003
*   IF TYPE(1)¬='PURG' THEN             /*NOT A PURG REQ?    @Y30LB02*/ 28650003
*        DO;                                               /*@Y30LB02*/ 28700003
*             ANS('      2  AIRLL FIXED(31) ,  '||                      28750003
*                  ' /*LENGTH  = 8 BYTES @Y30LB02*/')  SKIP(1);         28800003
*             IF TYPE(1)='APH' THEN    /*APH REQUEST?        @Y30LB02*/ 28850003
*                  DO;                 /*PUT IN APH  OPCODE  @Y30LB02*/ 28900003
*                       ANS('      2  AIROP FIXED(8),'||                28950003
*                            ' /*OPCODE=12 HEX @Y30LB02*/') SKIP(1);    29000003
*                  END;                                    /*@Y30LB02*/ 29050003
*             ELSE                                                      29100003
*                  IF TYPE(1)='INITL' THEN /*INITL REQUEST?  @Y30LB02*/ 29150003
*                     DO;              /*PUT IN INITL  OPCD  @Y30LB02*/ 29200003
*                       ANS('      2  AIROP FIXED(8),'||                29250003
*                            '/*OPCODE=10 HEX @Y30LB02*/') SKIP(1);     29300003
*                     END;                                 /*@Y30LB02*/ 29350003
*                  ELSE                                                 29400003
*                     DO;              /*PUT IN RDY OPCODE   @Y30LB02*/ 29450003
*                       ANS('      2  AIROP FIXED(8),'||                29500003
*                            '/*OPCODE=20 HEX @Y30LB02*/') SKIP(1);     29550003
*                     END;                                 /*@Y30LB02*/ 29600003
*             ANS ('      2  * CHAR(1),/*ZEROES   @Y30LB02*/') SKIP(1); 29650003
*             ANS ('      2  AIRFLAG BIT(16),'||                        29700003
*                 '/*FLAGS/ZEROES @Y30LB02*/') SKIP(1);                 29750003
*             ANS ('        3  AIRRESV BIT(1),'||                       29800003
*                  '/*RESERVED BIT  @Y30LB02*/') SKIP(1);               29850003
*             ANS ('        3  AIRCPUS BIT(1),'||                       29900003
*                  '/*INITIALIZE BOTH CPUS  @Y30LB02*/') SKIP(1);       29950003
*             ANS ('        3  *      BIT(14);'||          /*@Y30LB02*/ 30000003
*                  '/*RESERVED BITS  @Y30LB02*/') SKIP(1);              30050003
*        END;                                              /*@Y30LB02*/ 30100003
*   ELSE                               /*PURG REQUEST        @Y30LB02*/ 30150003
*        DO;                           /*DCL PURGE LIST      @Y30LB02*/ 30200003
*             ANS('      2  PURGLL FIXED(31),  '||                      30250003
*                  ' /*LENGTH=13 BYTES @Y30LB02*/')  SKIP(1);           30300003
*             ANS('      2  PURGOP FIXED(8),'||                         30350003
*                  ' /*OPCODE=14 HEX @Y30LB02*/') SKIP(1);              30400003
*             ANS ('      2  * CHAR(1),'||                              30450003
*                 '/*RESERVED/ZEROES @Y30LB02*/') SKIP(1);              30500003
*             ANS ('      2  PURGFLG BIT(16),'||                        30550003
*                  '/*FLAGS FIELD   @Y30LB02*/') SKIP(1);               30600003
*             ANS ('        3  PURGMPP BIT(1),'||                       30650003
*                  '/*PURGE OTHER PROCESSOR  @Y30LB02*/') SKIP(1);      30700003
*             ANS ('        3  *      BIT(15),'||                       30750003
*                  '/*RESERVED BITS  @Y30LB02*/') SKIP(1);              30800003
*             ANS('      2  PURGHOST CHAR(5);'||                        30850003
*                  ' /*HOSTID @Y30LB02*/') SKIP(1);                     30900003
*        END;                                              /*@Y30LB02*/ 30950003
*   GO TO EXIT;                        /*BRANCH TO EXIT      @Y30LB02*/ 31000003
*NOTLIST:                                                               31050003
*   IF MF(1)¬='' THEN                  /*IF NOT STD FORM     @Y30LB02*/ 31100003
*        GO TO EXCHECK;                /*BRANCH              @Y30LB02*/ 31150003
*/*                                                          @Y30LB02*/ 31200003
*/*********************************************************  @Y30LB02*/ 31250003
*/* THIS PART OF THE MACRO IS FOR STD FORM (MF(1)='')        @Y30LB02*/ 31300003
*/*********************************************************  @Y30LB02*/ 31350003
*/*                                                          @Y30LB02*/ 31400003
*   IF TYPE(1)='PURG' THEN             /*PURG REQUEST?       @Y30LB02*/ 31450003
*        IF PURGTEST=1 THEN            /*IF STD FORM HAS     @Y30LB02*/ 31500003
*                                      /*BEEN INVOKED ALRDY  @Y30LB02*/ 31550003
*             DO;                      /*SET UP REG1 TO PT   @Y30LB02*/ 31600003
*                                      /*TO PURG LIST        @Y30LB02*/ 31650003
*   ANS('/*******************************************'||                31700003
*       '************* @Y30LB02*/')SKIP;                                31750003
*   ANS('/*MACMEAN  MSSC PURGE MACRO                 '||                31800003
*       '              @Y30LB02*/')SKIP;                                31850003
*   ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||                31900003
*       '              @Y30LB02*/')SKIP;                                31950003
*   ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '||                32000003
*       '              @Y30LB02*/')SKIP;                                32050003
*   ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||                32100003
*       '              @Y30LB02*/')SKIP;                                32150003
*   ANS('/*******************************************'||                32200003
*       '************* @Y30LB02*/')SKIP;                                32250003
*                  ANS ('RFY(PAIRR1)RSTD;/*RESTRICT '||                 32300003
*                       'R1 @Y30LB02*/')SKIP;                           32350003
*                  ANS ('PAIRR1=ADDR(PURGLL);'||           /*@Y30LB02*/ 32400003
*                    '/*PAIRR1 SET TO ADDR OF PURG LIST @Y30LB02*/')    32450003
*                     SKIP(1);                             /*@Y30LB02*/ 32500003
*                  GO TO TEST2;        /*BRANCH              @Y30LB02*/ 32550003
*             END;                                         /*@Y30LB02*/ 32600003
*   IF TYPE(1)¬='PURG' THEN             /*NOT PURG REQUEST?  @Y30LB02*/ 32650003
*        IF  AIRTEST=1 THEN            /*IF STD FORM HAS     @Y30LB02*/ 32700003
*                                      /*BEEN INVOKED ALRDY  @Y30LB02*/ 32750003
*             DO;                      /*SET UP REG1 TO PT   @Y30LB02*/ 32800003
*                                      /*TO REQUEST BLOCK   @Y30LB02*/  32850003
*   ANS('/*******************************************'||                32900003
*       '************* @Y30LB02*/')SKIP;                                32950003
*   ANS('/*MACMEAN  MSSC ASSIGN/INITIALIZE/READY MACRO'||               33000003
*       '              @Y30LB02*/')SKIP;                                33050003
*   ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||                33100003
*       '              @Y30LB02*/')SKIP;                                33150003
*   ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '||                33200003
*       '              @Y30LB02*/')SKIP;                                33250003
*   ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||                33300003
*       '              @Y30LB02*/')SKIP;                                33350003
*   ANS('/*******************************************'||                33400003
*       '************* @Y30LB02*/')SKIP;                                33450003
*                  ANS ('RFY(PAIRR1)RSTD;/*RESTRICT '||                 33500003
*                       'R1 @Y30LB02*/')SKIP;                           33550003
*                  ANS ('PAIRR1=ADDR(AIRLL);'||            /*@Y30LB02*/ 33600003
*                    '/*PAIRR1 SET TO ADDR OF AIR LIST @Y30LB02*/')     33650003
*                     SKIP(1);                             /*@Y30LB02*/ 33700003
*                  GO TO TEST2;        /*BRANCH              @Y30LB02*/ 33750003
*             END;                                         /*@Y30LB02*/ 33800003
*/*                                                          @Y30LB02*/ 33850003
*/*********************************************************  @Y30LB02*/ 33900003
*/* OTHERWISE PRINT OUT THE DECLARE STATEMENTS FOR STD FORM  @Y30LB02*/ 33950003
*/*********************************************************  @Y30LB02*/ 34000003
*/*                                                          @Y30LB02*/ 34050003
*   IF TYPE(1)¬='PURG' THEN             /*NOT A PURG REQ?    @Y30LB02*/ 34100003
*        DO;                                               /*@Y30LB02*/ 34150003
*             ANS('/*******************************************'||      34200003
*                 '************* @Y30LB02*/')SKIP;                      34250003
*             ANS('/*MACMEAN  MSSC ASSIGN/INITIALIZE/READY MACRO'||     34300003
*                 '             @Y30LB02*/')SKIP;                       34350003
*             ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||      34400003
*                 '              @Y30LB02*/')SKIP;                      34450003
*             ANS('/*THIS IS THE STANDARD FORM - ICBPAIR MACRO '||      34500003
*                 '              @Y30LB02*/')SKIP;                      34550003
*             ANS('/*******************************************'||      34600003
*                 '************* @Y30LB02*/')SKIP;                      34650003
*             ANS('DCL  1   AIRLIST  STATIC LOCAL,') SKIP(1);           34700003
*             ANS('      2  AIRLL FIXED(31) INIT('||QUOTE('08')||       34750003
*                  'X), /*LENGTH @Y30LB02*/')  SKIP(1);                 34800003
*             IF TYPE(1)='APH' THEN    /*APH REQUEST?        @Y30LB02*/ 34850003
*                  DO;                 /*PUT IN APH  OPCODE  @Y30LB02*/ 34900003
*                       ANS('      2  AIROP FIXED(8) INIT('             34950003
*                            ||QUOTE(AOPCODE)||                         35000003
*                            'X), /*OPCODE @Y30LB02*/') SKIP(1);        35050003
*                  END;                                    /*@Y30LB02*/ 35100003
*             ELSE                                                      35150003
*                  IF TYPE(1)='INITL' THEN /*INITL REQUEST?  @Y30LB02*/ 35200003
*                     DO;              /*PUT IN INITL  OPCD  @Y30LB02*/ 35250003
*                       ANS('      2  AIROP FIXED(8) INIT('             35300003
*                            ||QUOTE(IOPCODE)||                         35350003
*                            'X),/*OPCODE @Y30LB02*/') SKIP(1);         35400003
*                     END;                                 /*@Y30LB02*/ 35450003
*                  ELSE                                                 35500003
*                     DO;              /*PUT IN RDY OPCODE   @Y30LB02*/ 35550003
*                       ANS('      2  AIROP FIXED(8) INIT('             35600003
*                            ||QUOTE(ROPCODE)||                         35650003
*                            'X),/*OPCODE @Y30LB02*/') SKIP(1);         35700003
*                     END;                                 /*@Y30LB02*/ 35750003
*             ANS ('      2  * CHAR(1) INIT('||                         35800003
*                  QUOTE('00')||'X), /*ZEROES   @Y30LB02*/') SKIP(1);   35850003
*             ANS ('      2  AIRFLAG BIT(16) INIT('||                   35900003
*                 QUOTE('0000000000000000')||                           35950003
*                 'B),/*FLAGS/ZEROES @Y30LB02*/') SKIP(1);              36000003
*             ANS ('        3  AIRRESV BIT(1),'||                       36050003
*                  '/*RESERVED BIT  @Y30LB02*/') SKIP(1);               36100003
*             ANS ('        3  AIRCPUS BIT(1),'||                       36150003
*                  '/*INITIALIZE BOTH CPUS  @Y30LB02*/') SKIP(1);       36200003
*             ANS ('        3  *      BIT(14);'||                       36250003
*                  '/*RESERVED BITS  @Y30LB02*/') SKIP(1);              36300003
*             ANS ('RFY(PAIRR1)RSTD;/*RESTRICT '||                      36350003
*                  'R1 @Y30LB02*/')SKIP;                                36400003
*             ANS('PAIRR1=ADDR(AIRLL); '||                 /*@Y30LB02*/ 36450003
*                '/*PAIRR1 SET TO ADDR OF BLK @Y30LB02*/') SKIP(1);     36500003
*             AIRTEST=1;               /*SET SO KNOW STD     @Y30LB02*/ 36550003
*                                      /*HAS BEEN INVOKED    @Y30LB02*/ 36600003
*        END;                                              /*@Y30LB02*/ 36650003
*   ELSE                               /*PURG REQUEST        @Y30LB02*/ 36700003
*        DO;                           /*DCL PURGE LIST      @Y30LB02*/ 36750003
*             ANS('/*******************************************'||      36800003
*                 '************* @Y30LB02*/')SKIP;                      36850003
*             ANS('/*MACMEAN  MSSC PURGE MACRO                 '||      36900003
*                 '              @Y30LB02*/')SKIP;                      36950003
*             ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||      37000003
*                 '              @Y30LB02*/')SKIP;                      37050003
*             ANS('/*THIS IS THE STANDARD FORM - ICBPAIR MACRO '||      37100003
*                 '              @Y30LB02*/')SKIP;                      37150003
*             ANS('/*******************************************'||      37200003
*                 '************* @Y30LB02*/')SKIP;                      37250003
*             ANS('DCL  1   PURGLIST  STATIC LOCAL,') SKIP;/*@Y30LB02*/ 37300003
*             ANS('      2  PURGLL FIXED(31) INIT('||QUOTE('0D')||      37350003
*                  'X), /*LENGTH @Y30LB02*/')  SKIP(1);                 37400003
*             ANS('      2  PURGOP FIXED(8) INIT('||                    37450003
*                  QUOTE(POPCODE)||'X), /*OPCODE @Y30LB02*/') SKIP(1);  37500003
*             ANS ('      2  * CHAR(1) INIT('||                         37550003
*                  QUOTE('00')||'X), /*ZEROES   @Y30LB02*/')            37600003
*                  SKIP(1);                                /*@Y30LB02*/ 37650003
*             ANS ('      2  PURGFLG BIT(16) INIT('||                   37700003
*                  QUOTE('0000000000000000')||'B),'||                   37750003
*                  '/*ZEROES   @Y30LB02*/') SKIP(1);                    37800003
*             ANS ('        3  PURGMPP BIT(1),'||                       37850003
*                  '/*PURGE OTHER PROCESSOR  @Y30LB02*/') SKIP(1);      37900003
*             ANS ('        3  *      BIT(15),'||                       37950003
*                  '/*RESERVED BITS  @Y30LB02*/') SKIP(1);              38000003
*             ANS('      2  PURGHOST CHAR(5) INIT('||                   38050003
*                  QUOTE('0000000000')||'X); /*HOSTID @Y30LB02*/')      38100003
*                  SKIP(1);                                /*@Y30LB02*/ 38150003
*             ANS ('RFY(PAIRR1)RSTD;/*RESTRICT'||                       38200003
*                  ' R1 @Y30LB02*/')SKIP;                               38250003
*             ANS('PAIRR1=ADDR(PURGLL); '||                /*@Y30LB02*/ 38300003
*                 '/*PAIRR1 SET TO ADDR OF LIST @Y30LB02*/') SKIP(1);   38350003
*             PURGTEST=1;              /*SET SO KNOW STD     @Y30LB02*/ 38400003
*                                      /*HAS BEEN INVOKED    @Y30LB02*/ 38450003
*        END;                                              /*@Y30LB02*/ 38500003
*/*                                                          @Y30LB02*/ 38550003
*/*********************************************************  @Y30LB02*/ 38600003
*/* END OF DCLS TO BE PRINTED OUT FOR REQUEST BLOCK          @Y30LB02*/ 38650003
*/*********************************************************  @Y30LB02*/ 38700003
*/*                                                          @Y30LB02*/ 38750003
*   BSW=1;                             /*TURN BSW SWITCH     @Y30LB02*/ 38800003
*   GO TO TEST2;                       /*BRANCH              @Y30LB02*/ 38850003
*/*                                                          @Y30LB02*/ 38900003
*/*********************************************************  @Y30LB02*/ 38950003
*/* THE MACRO BRANCHES HERE IF EXECUTABLE FORM WAS REQUESTD  @Y30LB02*/ 39000003
*/*********************************************************  @Y30LB02*/ 39050003
*/*                                                          @Y30LB02*/ 39100003
*EXCHECK: IF MF(1)='E' THEN            /*EXEC FORM SPECD?    @Y30LB02*/ 39150003
*             GO TO EXFORM;            /*YES, BRANCH         @Y30LB02*/ 39200003
*   ESW=1;                             /*TURN ON ESW         @Y30LB02*/ 39250003
*   DO;                                /*PRINT ERROR MSG     @Y30LB02*/ 39300003
*        ANS MSG('  ICB615I - INVALID MF PARAMETER SPECIFIED,'||        39350003
*             ' MUST BE L, E, OR NULL ') SKIP(1);          /*@Y30LB02*/ 39400003
*   END;                                /*                   @Y30LB02*/ 39450003
*   RETCODE=12;                        /*SET RETURN CODE     @Y30LB02*/ 39500003
*   GO TO TEST2;                       /*BRANCH              @Y30LB02*/ 39550003
*EXFORM: IF MF(2)='' THEN              /*ADDRESS GIVEN?      @Y30LB02*/ 39600003
*             DO;                      /*NO,TURN ON ESW AND  @Y30LB02*/ 39650003
*                  ESW=1;              /*PRINT ERROR MSG     @Y30LB02*/ 39700003
*                  ANS MSG('  ICB612I - MF(2) MUST CONTAIN'||           39750003
*                       ' REQ BLK NAME IF EXEC MACRO '||                39800003
*                       'FORM REQUESTED')SKIP(5);          /*@Y30LB02*/ 39850003
*                  RETCODE=12;         /*SET RETURN CODE     @Y30LB02*/ 39900003
*                  GO TO TEST2;        /*BRANCH              @Y30LB02*/ 39950003
*             END;                                         /*@Y30LB02*/ 40000003
*   ANS('/*******************************************'||                40050003
*       '************* @Y30LB02*/')SKIP;                                40100003
*   ANS('/*MACMEAN  PURGE/ASSIGN/INITIALIZE/READY    '||                40150003
*       'MACRO         @Y30LB02*/')SKIP;                                40200003
*   ANS('/*VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00   '||                40250003
*       '              @Y30LB02*/')SKIP;                                40300003
*   ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '||                40350003
*       '              @Y30LB02*/')SKIP;                                40400003
*   ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '||                40450003
*       '              @Y30LB02*/')SKIP;                                40500003
*   ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'||                40550003
*       '              @Y30LB02*/')SKIP;                                40600003
*   ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '||                40650003
*       '              @Y30LB02*/')SKIP;                                40700003
*   ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '||                40750003
*       '              @Y30LB02*/')SKIP;                                40800003
*   ANS('/*******************************************'||                40850003
*       '************* @Y30LB02*/')SKIP;                                40900003
*   ANS ('RFY(PAIRR1)RSTD;/*RESTRICT  R1 @Y30LB02*/')SKIP;              40950003
*   ANS('PAIRR1=ADDR('||MF(2)||                                         41000003
*        '); /*SET PAIRR1 TO REQ BLOCK @Y30LB02*/')  SKIP(1);           41050003
*   IF MF(3) = 'COMPLETE' THEN                                          41100003
*      DO;                                                 /*@Y30LB02*/ 41150003
*        ANS(' '||MF(2)||'='||MF(2)||'&&'||MF(2)||';'||    /*@Y30LB02*/ 41200003
*           '/*ZERO REQUEST BLOCK @Y30LB02*/')SKIP;                     41250003
*      END;                                                /*@Y30LB02*/ 41300003
*   IF TYPE(1)='PURG' THEN             /*SET LENGTH FLD=13   @Y30LB02*/ 41350003
*        ANS('PURGLL='||QUOTE(PLENGTH)||'X; /*SET LENGTH '||            41400003
*            'FIELD @Y30LB02*/')SKIP(1);                                41450003
*   ELSE                               /*SET LENGTH FLD=8    @Y30LB02*/ 41500003
*        ANS('AIRLL='||QUOTE(LENGTH)||'X; /*SET LENGTH '||              41550003
*            'FIELD @Y30LB02*/')SKIP(1);                                41600003
*TEST2: IF ESW=1 THEN                  /*IS ESW ON?          @Y30LB02*/ 41650003
*        GO TO EXIT;                   /*YES, BRANCH         @Y30LB02*/ 41700003
*   IF BSW=1 THEN                      /*IS BSW ON?          @Y30LB02*/ 41750003
*        GO TO TYPECK;                 /*YES, BRANCH         @Y30LB02*/ 41800003
*   IF TYPE(1)='PURG' THEN             /*PURG REQUEST?       @Y30LB02*/ 41850003
*        DO;                           /*YES,PUT IN PURG     @Y30LB02*/ 41900003
*                                      /*OPCODE              @Y30LB02*/ 41950003
*             ANS('PURGOP='||QUOTE(POPCODE)||'X;'||                     42000003
*                  '/*PURG  OPCODE @Y30LB02*/') SKIP(1);                42050003
*        END;                                              /*@Y30LB02*/ 42100003
*   ELSE                                                                42150003
*        IF TYPE(1)='APH' THEN         /*APH  REQUEST?       @Y30LB02*/ 42200003
*             DO;                      /*YES,PUT IN APH      @Y30LB02*/ 42250003
*                                      /*OPCODE              @Y30LB02*/ 42300003
*                  ANS('AIROP='||QUOTE(AOPCODE)||'X;'||                 42350003
*                       '/*APH  OPCODE @Y30LB02*/') SKIP(1);            42400003
*             END;                                         /*@Y30LB02*/ 42450003
*        ELSE                                                           42500003
*             IF TYPE(1)='INITL' THEN  /*INITL REQUEST?      @Y30LB02*/ 42550003
*                  DO;                 /*YES,PUT IN INITL    @Y30LB02*/ 42600003
*                                      /*OPCODE              @Y30LB02*/ 42650003
*                       ANS('AIROP='||QUOTE(IOPCODE)||'X;'||            42700003
*                            '/*INITL OPCODE @Y30LB02*/') SKIP(1);      42750003
*                  END;                                    /*@Y30LB02*/ 42800003
*             ELSE                                                      42850003
*                  DO;                 /*PUT IN RDY OPCODE   @Y30LB02*/ 42900003
*                       ANS('AIROP='||QUOTE(ROPCODE)||'X;'||            42950003
*                            '/*RDY OPCODE @Y30LB02*/') SKIP(1);        43000003
*                  END;                                    /*@Y30LB02*/ 43050003
*TYPECK: IF TYPE(1)='PURG' THEN                                         43100003
*             GO TO TEST3;             /*BRCH IF PURG REQ.   @Y30LB02*/ 43150003
*   IF TYPE(1)='INITL' THEN            /*INITL REQUEST?      @Y30LB02*/ 43200003
*        DO;                           /*YES,CHECK FLAGS     @Y30LB02*/ 43250003
*             IF FLAGS¬='' THEN        /*IS FLAGS NULL?      @Y30LB02*/ 43300003
*                  DO;                 /*NO,FILL IN FLAGS    @Y30LB02*/ 43350003
*                                      /*FIELD               @Y30LB02*/ 43400003
*                       ANS('AIRFLAG='||FLAGS||                         43450003
*                            ';/*FILL IN FLAGS FIELD @Y30LB02*/')       43500003
*                            SKIP(1);                      /*@Y30LB02*/ 43550003
*                  END;                                    /*@Y30LB02*/ 43600003
*        END;                                              /*@Y30LB02*/ 43650003
*   LSW=1;                             /*TURN ON LSW         @Y30LB02*/ 43700003
*TEST3: IF LSW=1 THEN                  /*IS LSW ON?          @Y30LB02*/ 43750003
*        GO TO LINK;                   /*YES, BRANCH         @Y30LB02*/ 43800003
*             IF FLAGS¬='' THEN        /*IS FLAGS NULL?      @Y30LB02*/ 43850003
*                  DO;                 /*NO,FILL IN FLAGS    @Y30LB02*/ 43900003
*                                      /*FIELD               @Y30LB02*/ 43950003
*                       ANS('PURGFLG='||FLAGS||                         44000003
*                            ';/*FILL IN FLAGS FIELD @Y30LB02*/')       44050003
*                            SKIP(1);                      /*@Y30LB02*/ 44100003
*                  END;                                    /*@Y30LB02*/ 44150003
*   IF HOSTID='' THEN                  /*HOSTID NULL?        @Y30LB02*/ 44200003
*                  LSW=1;              /*TURN LSW ON         @Y30LB02*/ 44250003
*   IF ESW=1 THEN                      /*ESW ON?             @Y30LB02*/ 44300003
*        GO TO EXIT;                   /*YES, BRANCH         @Y30LB02*/ 44350003
*   IF LSW=1 THEN                      /*LSW ON?             @Y30LB02*/ 44400003
*        GO TO LINK;                   /*YES, BRANCH         @Y30LB02*/ 44450003
*/* OTHERWISE PUT HOSTID IN HOSTID FIELD & INVOKE SVC INST   @Y30LB02*/ 44500003
*   ANS ('PURGHOST='||HOSTID||'; /*FILL IN HOSTID FIELD @Y30LB02*/')    44550003
*        SKIP(1);                                          /*@Y30LB02*/ 44600003
*LINK: ANS('SVC  (126); /*ISSUE SVC INST.  @Y30LB02*/') SKIP(1);        44650003
*      ANS ('RFY(PAIRR1)UNRSTD;/*UNRESTRICT'||                          44700003
*           ' R1 @Y30LB02*/')SKIP;                                      44750003
*EXIT: RETURN CODE(RETCODE);                               /*@Y30LB02*/ 44800003
*   %END;                                                  /*@Y30LB02*/ 44850003
./  ADD  SSI=73480102,NAME=ICBQUERY
* %/* START OF SPECIFICATIONS  ***                           @Z40LB22   00150003
*                                                            @Z40LB22   00244403
*01*  MODULE-NAME = ICBQUERY                                 @Z40LB22   00250003
*                                                            @Z40LB22   00300003
*01*  DESCRIPTIVE-NAME = READ SA WCS, READ MCS WCS, READ MSC @Z40LB22   00350003
*                        TABLES, LABEL READ, AND CELL AUDIT  @Z40LB22   00400003
*                                                            @Z40LB22   00450003
*01*  COPYRIGHT = NONE                                       @Z40LB22   00500003
*                                                            @Z40LB22   00550003
*01*  STATUS =  OS/VS2                                       @Z40LB22   00600003
*                                                            @Z40LB22   00700003
*01*  FUNCTION = BUILDS A REQUEST BLOCK FOR A REQUEST.       @Z40LB22   00750003
*                THE MACRO IS A COMMUNICATION LINK BETWEEN   @Z40LB22   00800003
*                THE CALLER AND THE MSSC SVC MODULE.         @Z40LB22   00850003
*                                                            @Z40LB22   00900003
*01*  NOTES = ICBQUERY IS CODED IN PLS ONLY.                 @Z40LB22   00950003
*                                                            @Z40LB22   01000003
*02*    DEPENDENCIES = NONE                                  @Z40LB22   01050003
*                                                            @Z40LB22   01100003
*02*    RESTRICTIONS = THE PREFIXES ICB AND QUERY SHOULD BE  @Z40LB22   01150003
*                      AVOIDED WHEN INVOKING THIS MACRO.     @Z40LB22   01200003
*                                                            @Z40LB22   01250003
*02*    REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF         @Z40LB22   01300003
*                              REGISTERS BY MACROS:          @Z40LB22   01350003
*                              R0,R1,R14, AND R15.           @Z40LB22   01400003
*                                                            @Z40LB22   01450003
*01*  MODULE-TYPE = MACRO                                    @Z40LB22   01500003
*                                                            @Z40LB22   01550003
*02*    PROCESSOR = PLS2                                     @Z40LB22   01600003
*                                                            @Z40LB22   01650003
*01*  INPUT = PARAMETERS SPECIFIED ON THE PLS MACRO          @Z40LB22   01700003
*             INVOCATION.                                    @Z40LB22   01750003
*                                                            @Z40LB22   01800003
*     THE READ SA WCS REQUEST IS ISSUED WHEN THE CALLER      @Z40LB22   01850003
*     WANTS TO MOVE ONE SECTOR (256 BYTES) OF SA STORAGE     @Z40LB22   01900003
*     INTO MSC DIAGNOSTIC BUFFER AT OFFSET 256 - 511.        @Z40LB22   01950003
*                                                            @Z40LB22   02000003
*     THE READ MSC WCS REQUEST IS ISSUED WHEN THE CALLER     @Z40LB22   02050003
*     WANTS TO MOVE ONE SECTOR (256 BYTES) INTO MSC          @Z40LB22   02100003
*     DIAGNOSTIC BUFFER AT OFFSET 256 - 511.                 @Z40LB22   02150003
*                                                            @Z40LB22   02200003
*     THE READ MSC TABLES REQUEST IS ISSUED WHEN THE CALLER  @Z40LB22   02250003
*     WANTS TO READ ONE RECORD (264 BYTES) INTO MSC          @Z40LB22   02300003
*     DIAGNOSTIC BUFFER AT OFFSET 248 - 511.                 @Z40LB22   02350003
*                                                            @Z40LB22   02400003
*     THE LABEL READ REQUEST IS ISSUED WHEN THE CALLER WANTS @Z40LB22   02450003
*     TO READ A CARTRIDGE LABEL (256 BYTES) INTO DIAGNOSTIC  @Z40LB22   02500003
*     BUFFER AT OFFSET 256 - 511.                            @Z40LB22   02550003
*                                                            @Z40LB22   02600003
*     THE CELL AUDIT REQUEST IS ISSUED WHEN THE CALLER WANTS @Z40LB22   02650003
*     TO TEST THE LIBRARY CELLS FOR FULL/EMPTY STATUS AND    @Z40LB22   02700003
*     LOAD THE RESULTS IN DIAGNOSTIC BUFFER AT OFFSET 0 - 31 @Z40LB22   02750003
*                                                            @Z40LB22   02800003
*     MACRO SYNTAX                                           @Z40LB22   02850003
*                                                            @Z40LB22   02900003
*     LIST FORM                                              @Z40LB22   02950003
*                                                            @Z40LB22   03000003
*     VERB        REQUIRED PARMS             OPTIONAL PARMS  @Z40LB22   03050003
*                                                            @Z40LB22   03100003
*     ICBQUERY    MF(L,NAME/(R)Ý,ATTRIBUTE¨)                 @Z40LB22   03150003
*                                                            @Z40LB22   03200003
*     EXECUTE FORM                                           @Z40LB22   03250003
*                                                            @Z40LB22   03300003
*     VERB        REQUIRED PARMS             OPTIONAL PARMS  @Z40LB22   03350003
*                                                            @Z40LB22   03400003
*     ICBQUERY    MF(E,NAME/(R))            MF(E,NAME/(R)    @Z40LB22   03450003
*                 TYPE(QSWCS/QLAB/QMWCS/      Ý,COMPLETE¨)   @Z40LB22   03500003
*                      QTAB/QCEL)           PARMS(ADDR/(R))  @Z40LB22   03550003
*                                           FLAGS(ADDR/(R))  @Z40LB22   03600003
*                                           SECT(ADDR/(R))   @Z40LB22   03650003
*                                           SSID(ADDR/(R))   @Z40LB22   03750003
*                                           MSFID(ADDR/(R))  @Z40LB22   03800003
*                                           CMAP(ADDR/(R))   @Z40LB22   03850003
*                                           LZYX(ADDR/(R))   @Z40LB22   03900003
*                                           LOC(ADDR/(R))    @Z40LB22   03950003
*                                          DASDCHR(ADDR/(R)) @Z40LB22   04000003
*                                          DATAPTR(NAME/(R)) @Z40LB22   04050003
*                                                            @Z40LB22   04100003
*     KEYWORD PARAMETERS:                                    @Z40LB22   04150003
*                                                            @Z40LB22   04200003
*     MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE      @Z40LB22   04250003
*            MACRO FORMAT AND MAY GIVE THE ADDRESS OR        @Z40LB22   04300003
*            ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK   @Z40LB22   04350003
*            IS STORED.                                      @Z40LB22   04400003
*                                                            @Z40LB22   04450003
*            L - LIST FORM:  THE EXPANSION OF THE L-FORM     @Z40LB22   04500003
*                MACRO WILL RESULT IN AN UNINITIALIZED       @Z40LB22   04550003
*                REQUEST BLOCK.                              @Z40LB22   04600003
*                                                            @Z40LB22   04650003
*            (1) NAME - THE MACRO INVOKER MUST SPECIFY A     @Z40LB22   04700003
*                NAME FOR HIS STRUCTURE WHEN INVOKING THE    @Z40LB22   04750003
*                PLS LIST FORM.                              @Z40LB22   04800003
*                                                            @Z40LB22   04850003
*            (2) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS    @Z40LB22   04900003
*                ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION @Z40LB22   04950003
*                IN AN UNINITIALIZED REQUEST BLOCK.          @Z40LB22   05000003
*                ATTRIBUTE EXAMPLE:                          @Z40LB22   05050003
*                                                            @Z40LB22   05100003
*                CHAR, FIXED, STATIC LOCAL, NONLOCAL,        @Z40LB22   05150003
*                BASED(*), ETC.                              @Z40LB22   05200003
*                                                            @Z40LB22   05250003
*            E - EXECUTABLE FORM:  THE EXPANSION OF THIS     @Z40LB22   05300003
*                FORM CONSISTS OF A LINKAGE INSTRUCTION AND  @Z40LB22   05350003
*                POSSIBLY, PARAMETER BINDING INSTRUCTIONS.   @Z40LB22   05400003
*                                                            @Z40LB22   05450003
*                SUB-PARAMETERS                              @Z40LB22   05500003
*                (1)  AN E MUST BE SPECIFIED IN THE FIRST    @Z40LB22   05550003
*                     SUB-PARAMETER POSITION.  THIS          @Z40LB22   05600003
*                     INDICATES THAT THE MACRO IS IN         @Z40LB22   05650003
*                     EXECUTABLE FORM.                       @Z40LB22   05700003
*                                                            @Z40LB22   05750003
*                (2)  A NAME OR A REGISTER MUST BE SPECIFIED @Z40LB22   05800003
*                     IN THE SECOND SUB-PARAMETER.           @Z40LB22   05850003
*                                                            @Z40LB22   05900003
*                (3)  'COMPLETE' - COMPLETE WILL CAUSE THE   @Z40LB22   05950003
*                     MACRO TO ZERO OUT THE REQUEST BLOCK.   @Z40LB22   06000003
*                     AFTER ZEROING THE REQUEST BLOCK THE    @Z40LB22   06050003
*                     FUNCTION OPCODE, CODE AND LENGTH ARE   @Z40LB22   06100003
                                                                        06150003
*                     PLACED IN THE REQUEST BLOCK.           @Z40LB22   06200003
*                                                            @Z40LB22   06250003
*     TYPE - INDICATES WHETHER THE REQUEST IS FOR READ SA    @Z40LB22   06300003
*            WCS (QSWCS), READ MSC WCS (QMWCS), LABEL READ   @Z40LB22   06350003
*            (QLAB), READ MSC TABLES (QTAB), OR CELL AUDIT   @Z40LB22   06400003
*            (QCEL).  THE ORDER AND CODE FIELD OF THE        @Z40LB22   06450003
*            REQUEST BLOCK IS FILLED IN BY THE EXECUTE FORM  @Z40LB22   06500003
*            MARCO. THE FOLLOWING TABLE GIVES THE ORDERS     @Z40LB22   06550003
*            AND CODES FOR EACH REQUEST.                     @Z40LB22   06600003
*                                                            @Z40LB22   06650003
*                REQUEST          | ORDER    | CODE          @Z40LB22   06700003
*                --------------------------------------      @Z40LB22   06750003
*                READ MSC WCS     | HEX'0B'  | HEX'03'       @Z40LB22   06800003
*                READ MSC TABLES  | HEX'05'  | HEX'06'       @Z40LB22   06850003
*                LABEL READ       | HEX'05'  | HEX'08'       @Z40LB22   06900003
*                READ SA WCS      | HEX'05'  | HEX'10'       @Z40LB22   06950003
*                CELL AUDIT       | HEX'07'  | N/A           @Z40LB22   07000003
*                                                            @Z40LB22   07050003
*02*    INVOCATION PARAMETERS                                @Z40LB22   07100003
*       WITH THE SINGLE EXCEPTION OF THE RESERVED FIELDS,    @Z40LB22   07150003
*       ALL OF THE INVOCATION PARAMETERS ARE REQUIRED.       @Z40LB22   07200003
*                                                            @Z40LB22   07250003
*                                                            @Z40LB22   07300003
*       READ MSC WCS - (F,X,CODE,SECT,X,A,X)                 @Z40LB22   07350003
*                                                            @Z40LB22   07400003
*       (1)  ORDER (F) - 1 BYTE                              @Z40LB22   07450003
*            THIS BYTE IS ALWAYS X'0B' FOR THIS ORDER        @Z40LB22   07500003
*                                                            @Z40LB22   07550003
*       (2)  RESERVED (X) - 1 BYTE                           @Z40LB22   07600003
*                                                            @Z40LB22   07650003
*       (3)  OPCODE (CODE) - 1 BYTE                          @Z40LB22   07700003
*            THIS BYTE IS ALWAYS X'03' FOR THIS ORDER        @Z40LB22   07750003
*                                                            @Z40LB22   07800003
*       (4)  SECTOR (SECT) - 1 BYTE                          @Z40LB22   07850003
*            THIS BYTE REPRESENTS THE SECTOR OF WCS CODE     @Z40LB22   07900003
*            TO BE READ INTO THE MSC DIAGNOSTIC BUFFER.  A   @Z40LB22   07950003
*            VALID SECTOR RANGE IS FROM X'00' TO X'FF'.      @Z40LB22   08000003
*                                                            @Z40LB22   08050003
*       (5)  RESERVED (X) - 2 BYTES                          @Z40LB22   08100003
*                                                            @Z40LB22   08150003
*       (6)  FLAGS (A) - 1 BYTE                              @Z40LB22   08200003
*            BIT 0 = 0; READ FROM MAIN STORAGE               @Z40LB22   08250003
*            BIT 0 = 1; READ FROM EXTENDED STORAGE           @Z40LB22   08300003
*            BIT 1 - 6; UNUSED                               @ZA27590   08350000
*            BIT 7 = 0; DUMP PRIMARY MSC                     @ZA27590   08360000
*            BIT 7 = 1; DUMP ALTERNATE MSC                   @ZA27590   08370000
*                                                            @Z40LB22   08400003
*       (7)  RESERVED (X) - 29 BYTES                         @Z40LB22   08450003
*                                                            @Z40LB22   08500003
*                                                            @Z40LB22   08550003
*       READ MSC TABLES - (F,X,CODE,X,PARMS,X)               @Z40LB22   08600003
*                                                            @Z40LB22   08650003
*       (1)  ORDER (F) - 1 BYTE                              @Z40LB22   08700003
*            THIS BYTE IS ALWAYS X'05' FOR THIS ORDER        @Z40LB22   08750003
*                                                            @Z40LB22   08800003
*       (2)  RESERVED (X) - 1 BYTE                           @Z40LB22   08850003
*                                                            @Z40LB22   08900003
*       (3)  OPCODE (CODE) - 1 BYTE                          @Z40LB22   08950003
*            THIS BYTE IS ALWAYS X'06' FOR THIS ORDER        @Z40LB22   09000003
*                                                            @Z40LB22   09050003
*       (4)  RESERVED (X) - 1 BYTE                           @Z40LB22   09100003
*                                                            @Z40LB22   09150003
*       (5)  PARAMETERS (PARMS) - 20 BYTES                   @Z40LB22   09200003
*            THIS 20 BYTE AREA CONTAINS THE INPUT PARAMETERS @Z40LB22   09250003
*            TO THE TABLE MODULE, NORMALLY FOUND IN MSC      @Z40LB22   09300003
*            JOBLIST AT OFFSET X'0C' - X'1F'.  THE CHR OF    @Z40LB22   09350003
*            BLOCKS TO BE READ (OPTIONAL) AT OFFSET X'30' -  @Z40LB22   09400003
*            X'33'.                                          @Z40LB22   09450003
*                                                            @Z40LB22   09500003
*            (A)  PARAMETER PASS AREA IN MSC JOBLIST         @Z40LB22   09550003
*                 X'0C'  BIT 0 - 3  TABLE ID                 @Z40LB22   09600003
*                        BIT 4 - 7  SECTOR ID                @Z40LB22   09650003
*                 X'0D'  BIT 0 - 7  FLAG BYTE                @Z40LB22   09700003
*                        BIT 3 = 1  BLOCK CHR SUPPLIED       @Z40LB22   09750003
*                        BIT 7 = 1  READ                     @Z40LB22   09800003
*                 X'0E' - X'1F'     TABLE DEPENDENT DATA     @Z40LB22   09850003
*                 X'30' - X'33'     CHR                      @Z40LB22   09900003
*       (6)  RESERVED (X) - 8 BYTES                          @Z40LB22   09950003
*                                                            @Z40LB22   10000003
*                                                            @Z40LB22   10050003
*       LABEL READ - (F,X,CODE,A,LZYX,X)                     @Z40LB22   10100003
*                                                            @Z40LB22   10150003
*       (1)  ORDER (F) - 1 BYTE                              @Z40LB22   10200003
*            THIS BYTE WILL ALWAYS BE X'05' FOR THIS ORDER   @Z40LB22   10250003
*                                                            @Z40LB22   10300003
*       (2)  RESERVED (X) - 1 BYTE                           @Z40LB22   10350003
*                                                            @Z40LB22   10400003
*       (3)  OPCODE (CODE) - 1 BYTE                          @Z40LB22   10450003
*            THIS BYTE IS ALWAYS X'08' FOR THIS ORDER        @Z40LB22   10500003
*                                                            @Z40LB22   10550003
*       (4)  ATTRIBUTES (A) - 1 BYTE                         @Z40LB22   10600003
*            THIS BYTE IS ALWAYS X'10'.  THIS BYTE INDICATES @Z40LB22   10650003
*            THAT THE LZYX OF THE CARTRIDGE IS SUPPLIED.     @Z40LB22   10700003
*                                                            @Z40LB22   10750003
*       (5)  LOCATION (LZYX) - 2 BYTES                       @Z40LB22   10800003
*            THE MSF AND CELL ADDRESS OF CARTRIDGE TO BE     @Z40LB22   10850003
*            READ.                                           @Z40LB22   10900003
*                                                            @Z40LB22   10950003
*       (6)  RESERVED (X) - 30 BYTES                         @Z40LB22   11000003
*                                                            @Z40LB22   11050003
*                                                            @Z40LB22   11100003
*       READ SA WCS - (F,X,CODE,SECT,SSID,A,X)               @Z40LB22   11150003
*                                                            @Z40LB22   11200003
*       (1)  ORDER (F) - 1 BYTE                              @Z40LB22   11250003
*            THIS BYTE WILL ALWAYS BE X'05' FOR THIS ORDER   @Z40LB22   11300003
*                                                            @Z40LB22   11350003
*       (2)  RESERVED (X) - 1 BYTE                           @Z40LB22   11400003
*                                                            @Z40LB22   11450003
*       (3)  OPCODE (CODE) - 1 BYTE                          @Z40LB22   11500003
*            THIS BYTE IS ALWAYS X'10' FOR THIS ORDER        @Z40LB22   11550003
*                                                            @Z40LB22   11600003
*       (4)  SECTOR (SECT) - 1 BYTE                          @Z40LB22   11650003
*            THIS BYTE REPRESENTS THE SECTOR OF THE WCS      @Z40LB22   11700003
*            CODE TO BE READ INTO THE DIAGNOSTIC BUFFER.     @Z40LB22   11750003
*            A VALID SECTOR RANGE IS FROM X'00' TO X'FF'.    @Z40LB22   11800003
*                                                            @Z40LB22   11850003
*       (5)  SUB-SYSTEM ID (SSID) - 2 BYTES                  @Z40LB22   11900003
*            THESE 2 BYTES (ONLY 12 BITS ARE USED) ARE THE   @Z40LB22   11950003
*            SSID OF THE SA.                                 @Z40LB22   12000003
*                                                            @Z40LB22   12050003
*       (6)  FLAGS (A) - 1 BYTE                              @Z40LB22   12100003
*            BIT 0 = 0; READ FROM MAIN STORAGE               @Z40LB22   12150003
*            BIT 0 = 1; READ FROM EXTENDED STORAGE           @Z40LB22   12200003
*            BIT 1 - 6; UNUSED                               @ZA27590   12250000
*            BIT 7 = 0; DUMP PRIMARY MSC                     @ZA27590   12260000
*            BIT 7 = 1; DUMP ALTERNATE MSC                   @ZA27590   12270000
*                                                            @Z40LB22   12300003
*       (7)  RESERVED (X) - 29 BYTES                         @Z40LB22   12350003
*                                                            @Z40LB22   12400003
*                                                            @Z40LB22   12450003
*       CELL AUDIT - (F,X,MSF,ADDR,CMAP)                     @Z40LB22   12500003
*                                                            @Z40LB22   12550003
*       (1)  ORDER (F) - 1 BYTE                              @Z40LB22   12600003
*            THIS ONE BYTE FIELD WILL ALWAYS BE X'07'.       @Z40LB22   12650003
*                                                            @Z40LB22   12700003
*       (2)  RESERVED (X) - 1 BYTE                           @Z40LB22   12750003
*                                                            @Z40LB22   12800003
*       (3)  MSFID (MSF) - 1 BYTE                            @Z40LB22   12850003
*            THIS BYTE WILL CONTAIN THE IDENTIFICATION OF    @Z40LB22   12900003
*            THE MASS STORAGE FACILITY TO BE AUDITED.        @Z40LB22   12950003
*            (IE, 0,1).  THE ID WILL BE PLACED IN BITS       @Z40LB22   13000003
*            0 - 1.                                          @Z40LB22   13050003
*                                                            @Z40LB22   13100003
*       (4)  ADDRESS (ADDR) - 1 BYTE                         @Z40LB22   13150003
*            ONE BYTE WHICH GIVES THE START (X) ADDRESS OF   @Z40LB22   13200003
*            CELLS TO BE AUDITED IN A SPECIFIED MASS STORAGE @Z40LB22   13250003
*            FACILITY.                                       @Z40LB22   13300003
*                                                            @Z40LB22   13350003
*       (5)  CELL MAP (CMAP) -32 BYTES                       @Z40LB22   13400003
*            32 BYTES THAT CONTAIN THE BIT MAP OF CELL       @Z40LB22   13450003
*            ADDRESS TO BE TESTED (BIT = 1 MEANS TEST CELL). @Z40LB22   13500003
*            EACH WORD IS FOR ONE X ADDRESS, ONE Z ADDRESS,  @Z40LB22   13550003
*            AND Y ADDRESSES 0 -27 (THE LAST FOUR BITS WILL  @Z40LB22   13600003
*            ALWAYS BE ZERO IN EACH WORD).                   @Z40LB22   13650003
*            DIRECTION:                                      @Z40LB22   13700003
*              FOR Z = 0, 0 --> 27                           @Z40LB22   13750003
*              FOR Z = 1, 27 --> 0                           @Z40LB22   13800003
*                                                            @Z40LB22   13850003
*01*  EXIT-NORMAL = VALID INVOCATION                         @Z40LB22   13900003
*                                                            @Z40LB22   13950003
*02*    CONDITION = RETURN CODE = 0.                         @Z40LB22   14000003
*                 = RETURN CODE = 4.                         @Z40LB22   14050003
*                                                            @Z40LB22   14100003
*02*    OUTPUT = IN-LINE PLS STATEMENTS THAT PERFORM THE     @Z40LB22   14150003
*                REQUESTED FUNCTION.                         @Z40LB22   14200003
*              = A WARNING MESSAGE WILL BE PRINTED, AND      @Z40LB22   14250003
*                THE EXPANSION WILL CONTINUE.                @Z40LB22   14300003
*                                                            @Z40LB22   14350003
*01*  EXIT-ERROR = INVALID INVOCATION                        @Z40LB22   14400003
*                                                            @Z40LB22   14450003
*02*    CONDITION = RETURN CODE = 12.                        @Z40LB22   14500003
*                                                            @Z40LB22   14550003
*02*    OUTPUT = ERROR MESSAGE                               @Z40LB22   14600003
*                                                            @Z40LB22   14650003
*01*  EXTERNAL-REFERENCES = NONE                             @Z40LB22   14700003
*                                                            @Z40LB22   14750003
*01*  TABLES = NONE                                          @Z40LB22   14800003
*                                                            @Z40LB22   14850003
*01*  MESSAGES = AS FOLLOWS:                                 @Z40LB22   14900003
*                                                            @Z40LB22   14950003
*            ICB600I:  TYPE MUST BE SPECIFIED                @Z40LB22   15000003
*            ICB601I:  TYPE IS INCORRECTLY SPECIFIED         @Z40LB22   15050003
*            ICB602I:  A NAME FOR THE REQUEST BLOCK MUST     @Z40LB22   15100003
*                      BE SPECIFIED IN MF(2)                 @Z40LB22   15150003
*            ICB604I:  WARNING - ONLY MF PARAMETER IS        @Z40LB22   15160003
*                      VALID FOR LIST FORM                   @Z40LB22   15170003
*            ICB612I:  MF(2) MUST CONTAIN REQ BLK NAME       @Z40LB22   15200003
*                      IF EXEC MACRO FORM REQUESTED          @Z40LB22   15250003
*            ICB620I:  INVALID MF PARAMETER SPECIFIED,       @Z40LB22   15300003
*                      MUST BE L  OR E.                      @Z40LB22   15350003
*                                                            @Z40LB22   15400003
*01*  INNER-MACRO = NONE                                     @Z40LB22   15450003
*                                                            @Z40LB22   15500003
*01*  SYSTEM-MACRO = NONE                                    @Z40LB22   15550003
*                                                            @Z40LB22   15600003
*01*  CHANGE-ACTIVITY = ZA09556                              @ZA09556   15650003
*     CHANGE 01 07/21/77 - DUMP OF THE ALTERNATE MSC         @ZA27590   15700000
*                                                            @Z40LB22   15710000
**** END OF SPECIFICATIONS ***                               @Z40LB22*/ 15750003
*/*                                                          @Z40LB22*/ 15800003
*/*                                                          @Z40LB22*/ 15850003
* ICBQUERY: MACRO KEYS(MF,TYPE,PARMS,FLAGS,SECT,CODE,SSID,              36050003
*          MSFID,CMAP,LZYX,LOC,DASDCHR,DATAPTR);                        36060003
*/*                                                          @Z40LB22*/ 36100003
*/*                                                          @Z40LB22*/ 36150003
*/* EXTERNAL DECLARES                                        @Z40LB22*/ 36200003
*   DCL QUERYREG FIXED EXT;            /*USED AS A TEST TO   @Z40LB22*/ 36450003
*                                      /*SEE IF R1 ALREADY   @Z40LB22*/ 36500003
*                                      /*DECLARED            @Z40LB22*/ 36550003
*/* INTERNAL DECLARES                                        @Z40LB22*/ 36600003
*   DCL RETCODE FIXED;                 /*RETURN CODE         @Z40LB22*/ 36650003
*   DCL QMCODE CHAR;                  /*QMWCS OPCODE         @Z40LB22*/ 36700003
*   DCL QLCODE CHAR;                  /*QLAB OPCODE          @Z40LB22*/ 36750003
*   DCL QTCODE CHAR;                  /*QTAB OPCODE          @Z40LB22*/ 36800003
*   DCL QSCODE CHAR;                  /*QSWCS OPCODE         @Z40LB22*/ 36850003
*   DCL QCCODE CHAR;                  /*QCEL OPCODE          @Z40LB22*/ 36860003
*   DCL QMTYPE CHAR;                  /*QMWCS TYPE           @Z40LB22*/ 36870003
*   DCL QLTYPE CHAR;                  /*QLAB TYPE            @Z40LB22*/ 36880003
*   DCL QLFLAG CHAR;                  /*QLAB FLAG            @Z40LB22*/ 36882003
*   DCL QTTYPE CHAR;                  /*QTAB TYPE            @Z40LB22*/ 36890003
*   DCL QSTYPE CHAR;                  /*QSWCS TYPE           @Z40LB22*/ 36892003
*   DCL LENGTH CHAR;                  /*LENGTH OF LIST       @Z40LB22*/ 36900003
*   DCL CTR FIXED;                     /*CTR  SWITCH         @Z40LB22*/ 37000003
*   DCL ESW FIXED;                     /*EXIT SWITCH         @Z40LB22*/ 37010003
*   DCL BSW FIXED;                     /*BRANCH SWITCH       @Z40LB22*/ 37050003
*   DCL LSW FIXED;                     /*LINK SWITCH         @Z40LB22*/ 37100003
*   QMCODE='0B';                      /*QMWCS OPCODE         @Z40LB22*/ 37150003
*   QLCODE='05';                      /*QLAB OPCODE          @Z40LB22*/ 37200003
*   QTCODE='05';                      /*QTAB OPCODE          @Z40LB22*/ 37250003
*   QSCODE='05';                      /*QSWCS OPCODE         @Z40LB22*/ 37300003
*   QCCODE='07';                      /*QCEL OPCODE          @Z40LB22*/ 37310003
*   QMTYPE='03';                      /*QMWCS CODE TYPE      @Z40LB22*/ 37320003
*   QLTYPE='08';                      /*QLAB CODE TYPE       @Z40LB22*/ 37330003
*   QSTYPE='10';                      /*QSWCS CODE TYPE      @Z40LB22*/ 37332003
*   QTTYPE='06';                      /*QTAB CODE TYPE       @Z40LB22*/ 37340003
*   QLFLAG='10';                      /*QLAB CODE FLAG       @Z40LB22*/ 37344003
*   LENGTH='2C';                       /*DEFINE LENGTH       @Z40LB22*/ 37350003
*/*     INITIALIZE SWITCHES TO ZERO                          @Z40LB22*/ 37450003
*   CTR=0;                                                 /*@Z40LB22*/ 37500003
*   ESW=0;                                                 /*@Z40LB22*/ 37510003
*   BSW=0;                                                 /*@Z40LB22*/ 37550003
*   LSW=0;                                                 /*@Z40LB22*/ 37600003
*/* END OF DECLARES AND INITIALIZATION                       @Z40LB22*/ 37650003
*   IF QUERYREG=0 THEN                 /*WAS R1 ALREADY      @Z40LB22*/ 38800003
*                                      /*DECLARED?           @Z40LB22*/ 38850003
*        DO;                           /*NO,PRT DCL FOR R1   @Z40LB22*/ 38900003
*             ANS('DCL QUERR1  REG(1) PTR; '||             /*@Z40LB22*/ 38950003
*                  '/* WILL CONTAIN BLK ADDRESS @Z40LB22*/') SKIP(1);   39000003
*             QUERYREG=1;              /*TURN SWITCH ON      @Z40LB22*/ 39050003
*        END;                                              /*@Z40LB22*/ 39100003
*   IF MF(1)¬='L' THEN                 /*IF NOT LIST FORM    @Z40LB22*/ 39150003
*        GO TO EXCHECK;                /*BRANCH              @Z40LB22*/ 39200003
*   IF MF(2)='' THEN                   /*WAS A NAME GIVEN?   @Z40LB22*/ 39250003
*        DO;                           /*IF NOT, THEN        @Z40LB22*/ 39300003
*             ESW=1;                   /*TURN ON ESW         @Z40LB22*/ 39350003
*                                      /*AND,PRT ERROR MSG   @Z40LB22*/ 39400003
*             ANS MSG('  ICB602I - A NAME FOR THE '||                   39450003
*                  'REQUEST BLOCK MUST BE SPECIFIED '||                 39500003
*                  'IN MF(2)')SKIP(5);                     /*@Z40LB22*/ 39550003
*             RETCODE=12;                                  /*@Z40LB22*/ 39600003
*        END;                                              /*@Z40LB22*/ 39650003
*   IF ESW=1 THEN                      /*ESW ON?             @Z40LB22*/ 39700003
*        GO TO EXIT;                   /*YES,BRANCH TO EXIT  @Z40LB22*/ 39750003
*/*********************************************************  @Z40LB22*/ 39810003
*/* CHECK FOR VALID PARAMETERS                               @Z40LB22*/ 39812003
*/*********************************************************  @Z40LB22*/ 39820003
*   IF TYPE ¬= '' THEN              /*TYPE SPECIFIED?        @Z40LB22*/ 39830003
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39840003
*   IF PARMS ¬= '' THEN              /*PARMS SPECIFIED?      @Z40LB22*/ 39842003
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39844003
*   IF FLAGS ¬= '' THEN             /*FLAGS SPECIFIED?       @Z40LB22*/ 39846003
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39848003
*   IF SECT ¬= '' THEN              /*SECT SPECIFIED?        @Z40LB22*/ 39848403
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39848803
*   IF CODE ¬= '' THEN              /*CODE SPECIFIED?        @Z40LB22*/ 39849203
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39849603
*   IF SSID ¬= '' THEN              /*SSID SPECIFIED?        @Z40LB22*/ 39849703
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39849803
*   IF MSFID ¬= '' THEN             /*MSFID SPECIFIED?       @Z40LB22*/ 39849903
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39866603
*   IF CMAP ¬= '' THEN              /*CMAP SPECIFIED?        @Z40LB22*/ 39876603
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39878603
*   IF LZYX ¬= '' THEN              /*LZYX SPECIFIED?        @Z40LB22*/ 39880603
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39882603
*   IF LOC ¬= '' THEN               /*LOC SPECIFIED?         @Z40LB22*/ 39883003
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39883103
*   IF DASDCHR ¬= '' THEN           /*DASDCHR SPECIFIED?     @Z40LB22*/ 39883203
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39888803
*   IF DATAPTR ¬= '' THEN           /*DATAPTR SPECIFIED?     @Z40LB22*/ 39890803
*       CTR = CTR + 1;              /*YES, INCREMENT CTR     @Z40LB22*/ 39892803
*   IF CTR > 0 THEN                 /*CTR GT ZERO?           @Z40LB22*/ 39893203
*      DO;                          /*YES, PRINT WARNING MSG @Z40LB22*/ 39893603
*        RETCODE = 4;               /*SET RETURN CODE TO 4   @Z40LB22*/ 39894003
*        ANS MSG('  ICB604I - WARNING-ONLY'||                           39894103
*            ' THE MF PARAMETER IS VALID FOR THE'||                     39894203
*            ' LIST FORM  ')SKIP;                                       39894303
*      END;                                                /*@Z40LB22*/ 39908203
*   IF MF(3) ¬= '' THEN                /*ATTRIBUTE GIVEN?    @Z40LB22*/ 39922203
*        GO TO ATTRLST;                                    /*@Z40LB22*/ 39936103
*/*********************************************************  @Z40LB22*/ 39950003
*/*********************************************************  @Z40LB22*/ 43650003
*/*                                                          @Z40LB22*/ 43700003
*ATTRLST:                                                               43750003
*   ANS('/*******************************************'||                43800003
*       '************* @Z40LB22*/')SKIP;                                43850003
*   ANS('/*MSSC QMWCS/QLAB/QTAB/QSWCS/QCEL MACRO'||                     43900003
*       '             @Z40LB22*/')SKIP;                                 43950003
*   ANS('/*OS/VS2 VERSION--03/21/75 LEVEL 00    '||                     44000003
*       '              @Z40LB22*/')SKIP;                                44050003
*   ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||                44100003
*       '              @Z40LB22*/')SKIP;                                44150003
*   ANS('/*GENERAL AREA TO BE OVERLAID BY SPECIFIC '||                  44160003
*       'ORDERS        @Z40LB22*/')SKIP;                                44170003
*   ANS('/*******************************************'||                44200003
*       '************* @Z40LB22*/')SKIP;                                44250003
*   ANS('DCL 1   '||MF(2)||' '||MF(3)||','||                            44300003
*              '/*REQUEST BLOCK @Z40LB22*/') SKIP(1);                   44350003
*            ANS('       2  QULEN  FIXED(31),  '||                      44360003
*                  ' /*LENGTH = 44 BYTES @Z40LB22*/')  SKIP(1);         44370003
*            ANS('       2  QUORD  CHAR(1),    '||                      44380003
*                  ' /*ORDER - COULD BE FOR QMWCS '||                   44390003
*                  ' (0B), QLAB (05), QTAB (05), '||                    44392003
*                  ' QSWCS (05), OR QCEL (07) '||                       44394003
*                  ' @Z40LB22*/')  SKIP(1);                             44396003
*            ANS('       2  QURES  CHAR(1),    '||                      44398003
*                  ' /*RESERVED BITS @Z40LB22*/')  SKIP(1);             44398403
*            ANS('       2  QUCODE BIT(8),     '||                      44398803
*                  ' /*CODE - COULD BE FOR QMWCS '||                    44399203
*                  ' (03), QLAB (08), QTAB (06), '||                    44399603
*                  ' OR QSWCS (10) @Z40LB22*/') SKIP(1);                44399703
*            ANS('        3  QULIB BIT(8),     '||                      44399803
*                  ' /*QCEL ONLY - ID OF THE MSF '||                    44399903
*                  ' TO BE AUDITED @Z40LB22*/')  SKIP(1);               44416603
*            ANS('       2  QUSECT  BIT(8),    '||                      44426603
*                  ' /*QMWCS AND QSWCS ONLY - THE '||                   44428603
*                  ' SECTOR OF CODE TO BE READ '||                      44430603
*                  ' @Z40LB22*/') SKIP(1);                              44432603
*            ANS('        3  QUXADDR BIT(8),   '||                      44433003
*                  ' /*QCEL ONLY - THE START X '||                      44433103
*                  ' ADDR OF CELLS TO BE AUDITED '||                    44433203
*                  ' @Z40LB22*/') SKIP (1);                             44438803
*            ANS('         4  QUFLAG  BIT(8),  '||                      44440803
*                  ' /*QLAB ONLY - SET TO HEX 10, '||                   44442803
*                  ' THE LZYX OF CART IS SUPPLIED'||                    44443203
*                  ' @Z40LB22*/') SKIP(1);                              44443603
*            ANS('          5  QURES1  CHAR(1), '||                     44444003
*                 ' /*QTAB ONLY - RESERVED BITS '||                     44444103
*                 ' @Z40LB22*/')  SKIP (1);                             44444203
*             ANS('      2  QUPARM  CHAR(32),  '||                      44444303
*                  ' /*PARM AREA FOR ANY SPECIFIED '||                  44458203
*                  ' @Z40LB22*/')  SKIP(1);                             44458603
*             ANS('      2  QUPTR  FIXED(31);  '||                      44460203
*                  ' /*ADDR OF A 512 BYTE DATA AREA'||                  44462203
*                  ' @Z40LB22*/')  SKIP(1);                             44464203
 /*  READ MSC WCS (QMWCS) AND READ SA WCS (QSWCS) QUPARM AREA */        44466203
*             ANS('DCL  1  QWPARM  DEFINED(QUPARM),'||                  44466603
*                  '/*MSC AND SA WCS READ @Z40LB22*/') SKIP (1);        44467003
*             ANS('      2  QWRES1  CHAR(2),   '||                      44467403
*                  '/*MSC WCS ONLY - RESERVED BITS'||                   44467803
*                  ' @Z40LB22*/')  SKIP(1);                             44467903
*             ANS('       3  QWSSID  CHAR(2),  '||                      44468003
*                  '/*SA WCS ONLY - SUBSYSTEM  '||                      44468103
*                  ' ID OF THE SA @Z40LB22*/')  SKIP(1);                44472603
*             ANS('      2  QWFLAG  BIT(8),    '||                      44474603
*                  ' /*READ INDICATOR @Z40LB22*/') SKIP(1);             44476603
*             ANS('       3  QWMEM  BIT(1),    '||                      44477003
*                  ' /*BIT 0=0 READ FROM MAIN STORAGE '||               44481603
*                  ' BIT 0=1 READ FROM EXTENDED STORAGE '||             44483603
*                  ' @Z40LB22*/')  SKIP(1);                             44485603
*             ANS('       3  *      BIT(6), /*UNUSED '||                44486000
*                  ' @ZA27590*/')  SKIP(1);                             44486100
*             ANS('       3  QWALTMSC BIT(1), '||                       44496100
*                  ' /*BIT 7=0 DUMP PRIMARY MSC '||                     44496200
*                  ' BIT 7=1 DUMP ALTERNATE MSC '||                     44496300
*                  ' @ZA27590*/')  SKIP(1);                             44496500
*             ANS('      2  QWRES2  CHAR(29);   '||                     44496703
*                  ' /*RESERVED BITS @Z40LB22*/') SKIP(1);              44506703
 /*  SPECIFIC QUPARM AREA FOR READ MSC TABLES (QTAB) @Z40LB22*/         44512103
*             ANS('DCL  1  QTPARM  DEFINED(QUPARM), '||                 44513203
*                  '/*QTAB REQUEST BLOCK @Z40LB22*/') SKIP(1);          44514303
*             ANS('      2  QTID  BIT(8),  '||                          44515403
*                  '/*@Z40LB22*/')  SKIP(1);                            44516503
*             ANS('       3  QTTABID  BIT(4),       '||                 44517603
*                  '/*TABLE ID @Z40LB22*/')  SKIP(1);                   44518703
*             ANS('      2  QTFLAG  BIT(8), /* READ CHR '||             44519803
*                  ' BIT 3=1 BLOCK CHR SUPPLIED '||                     44520903
*                  ' BIT 7=1 READ REQUEST @Z40LB22*/') SKIP(1);         44522003
*             ANS('      2  QTDATA CHAR(18), /* TABLE '||               44523103
*                  ' DEPENDENT DATA @Z40LB22*/') SKIP(1);               44524203
*             ANS('      2  QTDASCHR BIT(32), /* THE '||                44525303
*                  ' CHR OF RECORD TO BE READ '||                       44526403
*                  ' ORDER @Z40LB22*/')  SKIP (1);                      44527503
*             ANS('      2  QTRES CHAR(8); /* '||                       44528603
*                  ' RESERVED @Z40LB22*/') SKIP(1);                     44529703
 /*  SPECIFIC QUPARM AREA FOR READ LABEL (QLAB) @Z40LB22*/              44530803
*             ANS('DCL  1  QLPARM  DEFINED(QUPARM), '||                 44531903
*                  '/*QLAB REQUEST BLOCK @Z40LB22*/') SKIP(1);          44533003
*             ANS('      2  QLZYX  FIXED(15), /*THE MSF '||             44534103
*                  ' AND CELL ADDR OF CART. TO BE READ '||              44535203
*                  ' @Z40LB22*/')  SKIP(1);                             44536303
*             ANS('      2  QLRES  CHAR(30); /*RESERVED '||             44537403
*                  ' @Z40LB22*/')  SKIP(1);                             44538503
 /*  SPECIFIC QUPARM AREA FOR CELL AUDIT (QCEL) @Z40LB22*/              44539603
*             ANS('DCL  1  QCPARM  DEFINED(QUPARM), '||                 44540703
*                  '/*QCEL 8 WORD BIT MAP @Z40LB22*/') SKIP(1);         44541803
*             ANS('      2  QCMAD0Z0 BIT(32), /*WORD 1 '||              44542903
*                  ' OF CELL ADDR TO BE TESTED '||                      44544003
*                  ' @Z40LB22*/')  SKIP(1);                             44545103
*             ANS('      2  QCMAD0Z1 BIT(32), /*WORD 2 '||              44546203
*                  ' OF CELL ADDR TO BE TESTED '||                      44547303
*                  ' @Z40LB22*/')  SKIP(1);                             44548403
*             ANS('      2  QCMAD1Z0 BIT(32), /*WORD 3 '||              44549503
*                  ' OF CELL ADDR TO BE TESTED '||                      44559503
*                  ' @Z40LB22*/')  SKIP(1);                             44562903
*             ANS('      2  QCMAD1Z1 BIT(32), /*WORD 4 '||              44564903
*                  ' OF CELL ADDR TO BE TESTED '||                      44565303
*                  ' @Z40LB22*/')  SKIP(1);                             44565703
*             ANS('      2  QCMAD2Z0 BIT(32), /*WORD 5 '||              44566103
*                  ' OF CELL ADDR TO BE TESTED '||                      44566203
*                  ' @Z40LB22*/')  SKIP(1);                             44569603
*             ANS('      2  QCMAD2Z1 BIT(32), /*WORD 6 '||              44571603
*                  ' OF CELL ADDR TO BE TESTED '||                      44572003
*                  ' @Z40LB22*/')  SKIP(1);                             44572403
*             ANS('      2  QCMAD3Z0 BIT(32), /*WORD 7 '||              44572803
*                  ' OF CELL ADDR TO BE TESTED '||                      44572903
*                  ' @Z40LB22*/')  SKIP(1);                             44576303
*             ANS('      2  QCMAD3Z1 BIT(32); /*WORD 8 '||              44578303
*                  ' OF CELL ADDR TO BE TESTED '||                      44578703
*                  ' @Z40LB22*/')  SKIP(1);                             44579103
*   GO TO EXIT;                                                         44579603
*/*                                                          @Z40LB22*/ 46950003
*   ANS('/*******************************************'||                46960003
*       '************* @Z40LB22*/')SKIP;                                46970003
*   ANS('/*END OF DCLS TO BE PRINTED OUT FOR REQUEST '||                46980003
*       'BLOCK         @Z40LB22*/')SKIP;                                46990003
*   ANS('/*******************************************'||                47040003
*       '************* @Z40LB22*/')SKIP;                                47090003
*/*                                                          @Z40LB22*/ 54500003
*/*                                                          @Z40LB22*/ 54650003
*   ANS('/*******************************************'||                54660003
*       '************* @Z40LB22*/')SKIP;                                54670003
*   ANS('/*THE MACRO BRANCHES HERE IF EXECUTABLE FORM '||               54680003
*       'WAS REQUESTED @Z40LB22*/')SKIP;                                54690003
*   ANS('/*******************************************'||                54692003
*       '************* @Z40LB22*/')SKIP;                                54694003
*/*                                                          @Z40LB22*/ 54850003
*EXCHECK:                                                  /*@Z40LB22*/ 54870003
*   IF TYPE(1)='QMWCS'  THEN           /*QMWCS  REQUEST?     @Z40LB22*/ 54880003
*        GO TO TEST1;                  /*YES, BRANCH         @Z40LB22*/ 54890003
*   IF TYPE(1)='QLAB'  THEN             /*QLAB  REQUEST?     @Z40LB22*/ 54890403
*        GO TO TEST1;                  /*YES, BRANCH         @Z40LB22*/ 54890803
*   IF TYPE(1)='QTAB' THEN              /*QTAB REQUEST?      @Z40LB22*/ 54892003
*        GO TO TEST1;                  /*YES, BRANCH         @Z40LB22*/ 54894003
*   IF TYPE(1)='QSWCS' THEN              /*QSWCS  REQUEST?   @Z40LB22*/ 54896003
*        GO TO TEST1;                  /*YES, BRANCH         @Z40LB22*/ 54898003
*   IF TYPE(1)='QCEL' THEN              /*CELL  REQUEST?     @Z40LB22*/ 54898403
*        GO TO TEST1;                  /*YES, BRANCH         @Z40LB22*/ 54898803
*   ESW=1;                             /*TURN ON ESW         @Z40LB22*/ 54899203
*   IF TYPE(1)='' THEN                 /*IS TYPE NULL?       @Z40LB22*/ 54899603
*        DO;                           /*YES,PRT ERROR MSG   @Z40LB22*/ 54899703
*             ANS MSG('  ICB600I - TYPE'||                              54899803
*                  ' MUST BE SPECIFIED') SKIP(5);          /*@Z40LB22*/ 54899903
*        END;                                              /*@Z40LB22*/ 54916603
*   ELSE                               /*PRINT ERROR MSG     @Z40LB22*/ 54926603
*        DO;                                               /*@Z40LB22*/ 54928603
*             ANS MSG('  ICB601I - TYPE'||                              54930603
*                  ' IS INCORRECTLY SPECIFIED') SKIP(5);   /*@Z40LB22*/ 54932603
*        END;                                              /*@Z40LB22*/ 54933003
*   RETCODE=12;                                            /*@Z40LB22*/ 54933103
*TEST1: IF ESW=1 THEN                  /*ESW ON?             @Z40LB22*/ 54933203
*             GO TO EXIT;              /*YES, GO TO EXIT     @Z40LB22*/ 54938803
*       IF MF(1)='E' THEN              /*EXEC FORM SPECD?    @Z40LB22*/ 54944403
*             GO TO EXFORM;            /*YES, BRANCH         @Z40LB22*/ 54950003
*   ESW=1;                             /*TURN ON ESW         @Z40LB22*/ 55000003
*   DO;                                /*PRINT ERROR MSG     @Z40LB22*/ 55050003
*        ANS MSG('  ICB620I - INVALID MF PARAMETER SPECIFIED,'||        55100003
*             ' MUST BE L OR E ') SKIP(1);                 /*@Z40LB22*/ 55150003
*   END;                                /*                   @Z40LB22*/ 55200003
*   RETCODE=12;                        /*SET RETURN CODE     @Z40LB22*/ 55250003
*   GO TO EXIT;                       /*BRANCH              @Z40LB22*/  55300003
*EXFORM: IF MF(2)='' THEN              /*ADDRESS GIVEN?      @Z40LB22*/ 55350003
*             DO;                      /*NO,TURN ON ESW AND  @Z40LB22*/ 55400003
*                  ESW=1;              /*PRINT ERROR MSG     @Z40LB22*/ 55450003
*                  ANS MSG('  ICB612I - MF(2) MUST CONTAIN'||           55500003
*                       ' REQ BLK NAME IF EXEC MACRO '||                55550003
*                       'FORM REQUESTED')SKIP(5);          /*@Z40LB22*/ 55600003
*                  RETCODE=12;         /*SET RETURN CODE     @Z40LB22*/ 55650003
*                  GO TO EXIT;        /*BRANCH              @Z40LB22*/  55700003
*             END;                                         /*@Z40LB22*/ 55750003
*   ANS('/*******************************************'||                55800003
*       '************* @Z40LB22*/')SKIP;                                55850003
*   ANS('/*MSSC ICBQUERY QSWCS/QLAB/QTAB/QSWCS QCEL  '||                55900003
*       'MACRO         @Z40LB22*/')SKIP;                                55950003
*   ANS('/*OS/VS2 VERSION-- 03/21/75 LEVEL 00        '||                56000003
*       '              @Z40LB22*/')SKIP;                                56050003
*   ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '||                56100003
*       '              @Z40LB22*/')SKIP;                                56150003
*   ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '||                56200003
*       '              @Z40LB22*/')SKIP;                                56250003
*   ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'||                56300003
*       '              @Z40LB22*/')SKIP;                                56350003
*   ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '||                56400003
*       '              @Z40LB22*/')SKIP;                                56450003
*   ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '||                56500003
*       '              @Z40LB22*/')SKIP;                                56550003
*   ANS('/*******************************************'||                56600003
*       '************* @Z40LB22*/')SKIP;                                56650003
*   ANS ('RFY(QUERR1)RSTD;/*RESTRICT  R1 @Z40LB22*/')SKIP;              56700003
*   ANS('QUERR1=ADDR('||MF(2)||                                         56750003
*        '); /*SET QUERR1 TO REQ BLOCK @Z40LB22*/')  SKIP(1);           56800003
*   IF MF(3) = 'COMPLETE' THEN                                          56850003
*      DO;                                                 /*@Z40LB22*/ 56900003
*        ANS(' '||MF(2)||'='||MF(2)||'&&'||MF(2)||';'||    /*@Z40LB22*/ 56950003
*           '/*ZERO REQUEST BLOCK @Z40LB22*/')SKIP;                     57000003
*      END;                                                /*@Z40LB22*/ 57050003
*   IF TYPE(1)='QMWCS' THEN             /*SET LENGTH FLD=44  @Z40LB22*/ 57100003
*      DO;                                                              57110003
*        ANS('QULEN='||QUOTE(LENGTH)||'X; /*SET LENGTH '||              57150003
*            'FIELD @Z40LB22*/')SKIP(1);                                57200003
*        ANS('QUORD='||QUOTE(QMCODE)||'X; /*SET OPCODE '||              57210003
*            'FIELD @Z40LB22*/') SKIP(1);                               57220003
*        ANS('QUCODE='||QUOTE(QMTYPE)||'X; /*SET CODE '||               57230003
*            'TYPE @Z40LB22*/') SKIP(1);                                57240003
*      END;                                                             57242003
*   ELSE                                                                57250003
*         GO TO CKTAB;                                                  57260003
*   IF SECT ¬='' THEN                  /*SECT SPECIFIED?     @Z40LB22*/ 57290003
*      DO;                                                 /*@Z40LB22*/ 57340003
*   ANS('QUSECT='||SECT||';          /*FILL IN SECTOR ID   @Z40LB22*/') 57390003
*      SKIP(1);                                            /*@Z40LB22*/ 57390403
*      END;                                                /*@Z40LB22*/ 57390803
*   IF FLAGS ¬='' THEN                /*FLAGS SPECIFIED?     @Z40LB22*/ 57392003
*      DO;                                                 /*@Z40LB22*/ 57394003
*   ANS('QWFLAG='||FLAGS||';       /*FILL IN FLAGS FIELD   @ZA09556*/') 57396003
*      SKIP(1);                                            /*@Z40LB22*/ 57398003
*      END;                                                /*@Z40LB22*/ 57398403
*   IF DATAPTR ¬='' THEN           /*DATAPTR SPECIFIED?     @Z40LB22*/  57398803
*      DO;                                                 /*@Z40LB22*/ 57399203
*   ANS('QUPTR=ADDR'||DATAPTR||';  /*ADDR OF DATAPTR FIELD @Z40LB22*/') 57399603
*      SKIP(1);                                            /*@Z40LB22*/ 57407203
*      END;                                                /*@Z40LB22*/ 57410903
*    GO TO LINK;                                                        57414603
*CKTAB:                                                                 57418303
*   IF TYPE(1)='QTAB' THEN             /*SET LENGTH FLD=44  @Z40LB22*/  57422003
*      DO;                                                              57425703
*        ANS('QULEN='||QUOTE(LENGTH)||'X; /*SET LENGTH '||              57429403
*            'FIELD @Z40LB22*/')SKIP(1);                                57433103
*        ANS('QUORD='||QUOTE(QTCODE)||'X; /*SET OPCODE '||              57436803
*            'FIELD @Z40LB22*/') SKIP(1);                               57440503
*        ANS('QUCODE='||QUOTE(QTTYPE)||'X; /*SET CODE '||               57444203
*            'TYPE @Z40LB22*/') SKIP(1);                                57447903
*      END;                                                             57451603
*   ELSE                                                                57455303
*         GO TO CKLAB;                                                  57459003
*   IF PARMS ¬='' THEN               /*PARMS SPECIFIED?      @Z40LB22*/ 57462703
*      DO;                                                 /*@Z40LB22*/ 57466403
*   ANS('QUPARM='||PARMS||';       /*FILL IN PARAMETERS    @Z40LB22*/') 57470103
*      SKIP(1);                                            /*@Z40LB22*/ 57473803
*      END;                                                /*@Z40LB22*/ 57477803
*   IF DASDCHR ¬='' THEN               /*CHR SPECIFIED?      @Z40LB22*/ 57481203
*      DO;                                                 /*@Z40LB22*/ 57484903
*   ANS('QTDASCHR='||DASDCHR||';     /*FILL IN CHR         @Z40LB22*/') 57488603
*      SKIP(1);                                            /*@Z40LB22*/ 57503203
*      END;                                                /*@Z40LB22*/ 57511003
*   IF DATAPTR ¬='' THEN           /*DATAPTR SPECIFIED?     @Z40LB22*/  57513003
*      DO;                                                 /*@Z40LB22*/ 57515003
*   ANS('QUPTR=ADDR'||DATAPTR||';  /*ADDR OF DATAPTR FIELD @Z40LB22*/') 57515403
*      SKIP(1);                                            /*@Z40LB22*/ 57517403
*      END;                                                /*@Z40LB22*/ 57517803
*    GO TO LINK;                                                        57518203
*CKLAB:                                                                 57518803
*   IF TYPE(1)='QLAB' THEN             /*INITIALIZE FIELDS  @Z40LB22*/  57520803
*      DO;                                                              57522803
*        ANS('QULEN='||QUOTE(LENGTH)||'X; /*SET LENGTH '||              57524803
*            'FIELD @Z40LB22*/')SKIP(1);                                57525203
*        ANS('QUORD='||QUOTE(QLCODE)||'X; /*SET OPCODE '||              57525603
*            'FIELD @Z40LB22*/') SKIP(1);                               57526003
*        ANS('QUCODE='||QUOTE(QLTYPE)||'X; /*SET CODE '||               57526403
*            'TYPE @Z40LB22*/') SKIP(1);                                57526503
*        ANS('QUFLAG='||QUOTE(QLFLAG)||'X; /*SET CODE '||               57536403
*            'FLAG @Z40LB22*/') SKIP(1);                                57538403
*      END;                                                             57538703
*   ELSE                                                                57548703
*         GO TO CKQSWCS;                                                57550403
*   IF LZYX ¬='' THEN               /*CELL ADDR SPECIFIED?   @Z40LB22*/ 57550803
*      DO;                                                 /*@Z40LB22*/ 57550903
*   ANS('QLZYX='||LZYX||';         /*FILL IN LZYX          @Z40LB22*/') 57551003
*      SKIP(1);                                            /*@Z40LB22*/ 57551103
*      END;                                                /*@Z40LB22*/ 57555203
*   IF DATAPTR ¬='' THEN           /*DATAPTR SPECIFIED?     @Z40LB22*/  57571403
*      DO;                                                 /*@Z40LB22*/ 57573403
*   ANS('QUPTR=ADDR'||DATAPTR||';  /*ADDR OF DATAPTR FIELD @Z40LB22*/') 57577803
*      SKIP(1);                                            /*@Z40LB22*/ 57581203
*      END;                                                /*@Z40LB22*/ 57583603
*    GO TO LINK;                                                        57586003
*CKQSWCS:                                                               57588403
*   IF TYPE(1)='QSWCS' THEN             /*INITIALIZE FIELDS  @Z40LB22*/ 57590803
*      DO;                                                              57593203
*        ANS('QULEN='||QUOTE(LENGTH)||'X; /*SET LENGTH '||              57595603
*            'FIELD @Z40LB22*/')SKIP(1);                                57598003
*        ANS('QUORD='||QUOTE(QSCODE)||'X; /*SET OPCODE '||              57600403
*            'FIELD @Z40LB22*/') SKIP(1);                               57602803
*        ANS('QUCODE='||QUOTE(QSTYPE)||'X; /*SET CODE '||               57605203
*            'TYPE @Z40LB22*/') SKIP(1);                                57607603
*      END;                                                             57610003
*   ELSE                                                                57612403
*         GO TO CKCEL;                                                  57614803
*   IF SECT ¬='' THEN                /*SECTOR ID SPECIFIED?  @Z40LB22*/ 57617203
*      DO;                                                 /*@Z40LB22*/ 57627203
*   ANS('QUSECT='||SECT||';       /*FILL IN SECTOR ID      @Z40LB22*/') 57627603
*      SKIP(1);                                            /*@Z40LB22*/ 57628003
*      END;                                                /*@Z40LB22*/ 57628403
*   IF SSID ¬='' THEN               /*SUBSYSTEM ID?          @Z40LB22*/ 57628803
*      DO;                                                 /*@Z40LB22*/ 57629003
*   ANS('QWSSID='||SSID||';        /*FILL SUBSYSTEM ID     @Z40LB22*/') 57629103
*      SKIP(1);                                            /*@Z40LB22*/ 57629203
*      END;                                                /*@Z40LB22*/ 57630103
*   IF FLAGS ¬='' THEN               /*READ INDICATOR?       @Z40LB22*/ 57630503
*      DO;                                                 /*@Z40LB22*/ 57630903
*   ANS('QWFLAG='||FLAGS||';        /*FILL IN FLAG FIELD   @ZA09556*/') 57631303
*      SKIP(1);                                            /*@Z40LB22*/ 57631703
*      END;                                                /*@Z40LB22*/ 57631803
*   IF DATAPTR ¬='' THEN           /*DATAPTR SPECIFIED?     @Z40LB22*/  57632103
*      DO;                                                 /*@Z40LB22*/ 57634303
*   ANS('QUPTR=ADDR'||DATAPTR||';  /*ADDR OF DATAPTR FIELD @Z40LB22*/') 57636703
*      SKIP(1);                                            /*@Z40LB22*/ 57638303
*      END;                                                /*@Z40LB22*/ 57638703
*    GO TO LINK;                                                        57688703
*CKCEL:                                                                 57738703
*   IF TYPE(1)='QCEL' THEN              /*INITIALIZE FIELDS  @Z40LB22*/ 57788703
*      DO;                                                              57838703
*        ANS('QULEN='||QUOTE(LENGTH)||'X; /*SET LENGTH '||              57888703
*            'FIELD @Z40LB22*/')SKIP(1);                                57938703
*        ANS('QUORD='||QUOTE(QCCODE)||'X; /*SET OPCODE '||              57988703
*            'FIELD @Z40LB22*/') SKIP(1);                               58038703
*      END;                                                             58088703
*   ELSE                                                                58138703
*         GO TO EXIT;                                                   58188703
*   IF MSFID ¬='' THEN                /*MSF ID SPECIFIED?    @Z40LB22*/ 58238703
*      DO;                                                 /*@Z40LB22*/ 58288703
*   ANS('QULIB='||MSFID||';       /*MSF TO BE AUDITED ID   @Z40LB22*/') 58338703
*      SKIP(1);                                            /*@Z40LB22*/ 58388703
*      END;                                                /*@Z40LB22*/ 58438703
*   IF LOC ¬='' THEN                /*START X ADDR?          @Z40LB22*/ 58488703
*      DO;                                                 /*@Z40LB22*/ 58538703
*   ANS('QUXADDR='||LOC||';        /*FILL IN X ADDR        @Z40LB22*/') 58588703
*      SKIP(1);                                            /*@Z40LB22*/ 58638703
*      END;                                                /*@Z40LB22*/ 58688703
*   IF CMAP ¬='' THEN               /*CELL MAP SPECIFIED?    @Z40LB22*/ 58738703
*      DO;                                                 /*@Z40LB22*/ 58788703
*   ANS('QUPARM='||CMAP||';        /*FILL IN CELL BIT MAP  @Z40LB22*/') 58838703
*      SKIP(1);                                            /*@Z40LB22*/ 58888703
*      END;                                                /*@Z40LB22*/ 58938703
*   IF DATAPTR ¬='' THEN           /*DATAPTR SPECIFIED?     @Z40LB22*/  58988703
*      DO;                                                 /*@Z40LB22*/ 59038703
*   ANS('QUPTR=ADDR'||DATAPTR||';  /*ADDR OF DATAPTR FIELD @Z40LB22*/') 59048703
*      SKIP(1);                                            /*@Z40LB22*/ 59138703
*      END;                                                /*@Z40LB22*/ 59188703
*   IF ESW=1 THEN                      /*ESW ON?             @Z40LB22*/ 60050003
*        GO TO EXIT;                   /*YES, BRANCH         @Z40LB22*/ 60100003
*LINK: ANS('SVC  (126); /*ISSUE SVC INST.  @Z40LB22*/') SKIP(1);        60400003
*      ANS ('RFY(QUERR1)UNRSTD;/*UNRESTRICT'||                          60450003
*           ' R1 @Z40LB22*/')SKIP;                                      60500003
*EXIT: RETURN CODE(RETCODE);                               /*@Z40LB22*/ 60550003
*   %END;                                                  /*@Z40LB22*/ 60600003
./  ADD  SSI=42130211,NAME=ICBRQUE
 %ICBRQUE: ;                        /* MACRO                 @Y30LB01*/ 00050003
        /**************************************************  @Y30LB01*/ 00100003
        /*              ****** MAPPING MACRO *****           @Y30LB01*/ 00150003
        /* MACRO NAME = ICBRQUE(VS1-VS2)                     @Y30LB01*/ 00200003
        /*                                                   @Y30LB01*/ 00250003
        /* DESCRIPTIVE NAME = MSSC RESPONSE QUEUE ELEMENT    @Y30LB01*/ 00300003
        /*                                                   @Y30LB01*/ 00350003
        /* COPYRIGHT = NONE                                  @Y30LB01*/ 00400003
        /*                                                   @Y30LB01*/ 00450003
        /* CHANGE-ACTIVITY = X04AC01,Y30LB01                 @Y30LB01*/ 00500003
        /*                                                   @Y30LB01*/ 00550003
        /* MACRO INVOKER MUST CODE 1 LEVEL DCL BEFORE        @Y30LB01*/ 00600003
        /*       INCLUDE STATEMENT                           @Y30LB01*/ 00650003
        /**************************************************  @Y30LB01*/ 00700003
        2 QELSP     FIXED(8),       /* STORAGE SUBPOOL       @Y30LB01*/ 00750003
        2 QELTCBPR  PTR(24),        /* TCB ADDRESS           @Y30LB01*/ 00800003
        2 QELECB    PTR(32),        /* ECB ADDRESS           @Y30LB01*/ 00850003
          3 QELFLG1  CHAR(1),       /* MESSAGE TASK FLAG     @Y30LB01*/ 00900003
          3 QELECBPR PTR(24),       /* ECB ADDRESS           @Y30LB01*/ 00950003
        2 QELFLG2    CHAR(1),       /* ABEND INTF FLAG       @Y30LB01*/ 01000003
          3 FLAG1    CHAR(1),       /* ABEND INTF FLAG       @Y30LB01*/ 01050003
        2 QELAHEAD   PTR(24),       /* ADDR NEXT ELEMENT     @Y30LB01*/ 01100003
          3 CHNHEAD  PTR(24),       /* ADDR NEXT ELEMENT     @Y30LB01*/ 01150003
        2 QELFLG3    CHAR(1),       /* MSSC SVC FLAG         @Y30LB01*/ 01200003
          3 SVCINVAL CHAR(1),       /* MSSC SVC FLAG         @Y30LB01*/ 01250003
        2 QELBACK    PTR(24),       /* ADDR PREV ELEMENT     @Y30LB01*/ 01300003
          3 CHNBACK  PTR(24),       /* ADDR PREV ELEMENT     @Y30LB01*/ 01350003
        2 QELASID    FIXED(16),     /* REQUESTOR ASID VS2    @Y30LB01*/ 01400003
          3 PRGASID  FIXED(16),     /* REQUESTOR ASID VS2    @Y30LB01*/ 01450003
        2 *          CHAR(2);       /* RESERVED FIELD        @Y30LB01*/ 01500003
./  ADD  SSI=63460036,NAME=ICBSELTM
* %/*                                                        @G24LB18*/ 00080042
*/*                                                          @G24LB18*/ 00100042
*/*  MODULE NAME = ICBSELTM                                  @G24LB18*/ 00150042
*/*                                                          @G24LB18*/ 00200042
*/*  DESCRIPTIVE NAME = SELECT/TERMINATE                     @G24LB18*/ 00250042
*/*                                                          @G24LB18*/ 00300042
*/*  COPYRIGHT = NONE                                        @G24LB18*/ 00350042
*/*                                                          @G24LB18*/ 00400042
*/*  STATUS = OS/MVS                                         @G24LB18*/ 00450042
*/*                                                          @G24LB18*/ 00550042
*/*  FUNCTION = PROVIDES A REQUEST BLOCK MAPPING FOR AN MSVC @G24LB18*/ 00600042
*/*             SELECT OR TERMINATE REQUEST.                 @G24LB18*/ 00650042
*/*                                                          @G24LB18*/ 00700042
*/*  NOTES = ICBSELTM IS A BILINGUAL MACRO.                  @G24LB18*/ 00750042
*/*                                                          @G24LB18*/ 00800042
*/*    DEPENDENCIES = NONE                                   @G24LB18*/ 00850042
*/*                                                          @G24LB18*/ 00900042
*/*    RESTRICTIONS = PREFIXES SEL AND TRM RESERVED          @G24LB18*/ 00950042
*/*                   FOR USE BY THE MACRO.                  @G24LB18*/ 01000042
*/*                                                          @G24LB18*/ 01010042
*/*    REGISTER CONVENTIONS = NORMAL MACRO USAGE OF          @G24LB18*/ 01050042
*/*                           R0, R1, R14, AND R15.          @G24LB18*/ 01100042
*/*                                                          @G24LB18*/ 01150042
*/*  MODULE TYPE = MACRO                                     @G24LB18*/ 01200042
*/*                                                          @G24LB18*/ 01250042
*/*    PROCESSOR = PLS2 AND ASSEMBLER                        @G24LB18*/ 01300042
*/*                                                          @G24LB18*/ 01350042
*/*    ENTRY POINT = ICBSELTM                                @G24LB18*/ 01400042
*/*                                                          @G24LB18*/ 01450042
*/*    PURPOSE = THE SELECT REQUEST IS ISSUED BY ALLOCATION  @G24LB18*/ 01500042
*/*              FOR EACH 3330V DD TO ALLOW MSVC TO KEEP     @G24LB18*/ 01550042
*/*              TRACK OF THE VIRTUAL VOLUMES CURRENTLY      @G24LB18*/ 01600042
*/*              BEING USED AND TO SELECT VOLUMES FOR MSVGP  @G24LB18*/ 01650042
*/*              REQUESTS. THE TERMINATE REQUEST IS ISSUED   @G24LB18*/ 01700042
*/*              BY ALLOCATION AT THE END OF ALLOCATION FOR  @G24LB18*/ 01750042
*/*              EACH STEP CONTAINING 3330V DDS. THIS ALLOWS @G24LB18*/ 01800042
*/*              MSVC TO FREE UP THE RECORDS IT BUILT AT     @G24LB18*/ 01850042
*/*              SELECT TIME FOR THE 3330V DDS IN THE STEP.  @G24LB18*/ 01900042
*/*                                                          @G24LB18*/ 01950042
*/*  INPUT                                                   @G24LB18*/ 02000042
*/*                                                          @G24LB18*/ 02050042
*/*    MACRO SYNTAX: LIST FORM ONLY                          @G24LB18*/ 02100042
*/*                                                          @G24LB18*/ 02150042
*/*        VERB       REQUIRED PARAMETERS                    @G24LB18*/ 02200042
*/*                                                          @G24LB18*/ 02250042
*/*        ICBSELTM   MF=L,TYPE=SEL/TRM       -- ASSEMBLER   @G24LB18*/ 02300042
*/*                                                          @G24LB18*/ 02350042
*/*        ICBSELTM   MF(L) TYPE(SEL/TRM)     -- PLS         @G24LB18*/ 02400042
*/*                                                          @G24LB18*/ 02450042
*/*    KEYWORD PARAMETERS:                                   @G24LB18*/ 02500042
*/*                                                          @G24LB18*/ 02550042
*/*      MF - MACRO FORMAT: ONLY THE LIST FORM OF THE MACRO  @G24LB18*/ 02600042
*/*           MAY BE SPECIFIED. THE EXPANSION OF THE LIST    @G24LB18*/ 02650042
*/*           FORM WILL RESULT IN A MAPPING OF A REQUEST     @G24LB18*/ 02700042
*/*           BLOCK AND EQUATES FOR THE OPCODE AND LENGTH    @G24LB18*/ 02750042
*/*           OF THE REQUEST BLOCK.                          @G24LB18*/ 02800042
*/*                                                          @G24LB18*/ 02850042
*/*      TYPE - INDICATES WHETHER THE REQUEST IS FOR THE     @G24LB18*/ 02900042
*/*             SELECT(SEL) FUNCTION OR THE TERMINATE (TRM)  @G24LB18*/ 02950042
*/*             FUNCTION. THE REQUEST BLOCK AND THE EQUATES  @G24LB18*/ 03000042
*/*             FOR THE OPCODE AND LENGTH WILL BE GENERATED  @G24LB18*/ 03050042
*/*             ACCORDING TO THE FUNCTION SPECIFIED.         @G24LB18*/ 03100042
*/*                                                          @G24LB18*/ 03150042
*/*  EXIT-NORMAL = VALID INVOCATION                          @G24LB18*/ 03200042
*/*                                                          @G24LB18*/ 03250042
*/*    OUTPUT = A BASED DCL STRUCTURE (PLS) OR DSECT         @G24LB18*/ 03300042
*/*             (BAL) OF THE REQUEST BLOCK FOR THE REQUESTED @G24LB18*/ 03350042
*/*             FUNCTION, PLUS THE APPROPRIATE DCLS (PLS)    @G24LB18*/ 03400042
*/*             OR EQUATES (BAL) FOR THE OPCODE AND LENGTH   @G24LB18*/ 03450042
*/*             OF THE REQUEST BLOCK.                        @G24LB18*/ 03500042
*/*                                                          @G24LB18*/ 03550042
*/*    CONDITION = RETURN CODE = 0                           @G24LB18*/ 03600042
*/*                                                          @G24LB18*/ 03650042
*/*  EXIT-ERROR = INVALID INVOCATION (RESULTS IN FAILURE OF  @G24LB18*/ 03700042
*/*               COMPILATION OR ASSEMBLY OF CALLING MODULE) @G24LB18*/ 03750042
*/*                                                          @G24LB18*/ 03800042
*/*    OUTPUT = ERROR MESSAGE AS A COMMENT AT POINT OF       @G24LB18*/ 03850042
*/*             INVOCATION.                                  @G24LB18*/ 03900042
*/*                                                          @G24LB18*/ 03950042
*/*    CONDITION = RETURN CODE = 12                          @G24LB18*/ 04000042
*/*                                                          @G24LB18*/ 04050042
*/*  EXTERNAL REFERENCES = NONE                              @G24LB18*/ 04100042
*/*                                                          @G24LB18*/ 04150042
*/*  TABLES = NONE                                           @G24LB18*/ 04200042
*/*                                                          @G24LB18*/ 04250042
*/*  MESSAGES                                                @G24LB18*/ 04300042
*/*                                                          @G24LB18*/ 04310042
*/*    ICB600I:  TYPE MUST BE SPECIFIED.                     @G24LB18*/ 04350042
*/*    ICB601I:  TYPE IS INCORRECTLY SPECIFIED.              @G24LB18*/ 04400042
*/*    ICB617I:  INVALID MF PARAMETER SPECIFIED; MUST BE L.  @G24LB18*/ 04550042
*/*                                                          @G24LB18*/ 04600042
*/*  CONTROL BLOCKS = NONE                                   @G24LB18*/ 04650042
*/*                                                          @G24LB18*/ 04700042
*/*  INNER MACROS = NONE                                     @G24LB18*/ 04750042
*/*                                                          @G24LB18*/ 04800042
*/*  SYSTEM MACROS = NONE                                    @G24LB18*/ 04850042
*/*                                                          @G24LB18*/ 04900042
*/*  CHANGE ACTIVITY =                                       @G24LB18*/ 04950042
*/*                                                          @G24LB18*/ 05000042
*/*    G24LB18  ALLOCATE TO MOUNTED VOLUMES        4/5/76    @G24LB18*/ 05050042
*/*    G24LB04  ALLOCATE TO MOUNTED VOLUMES      07/06/76    @G24LB04*/ 05060042
*/*                                                          @G24LB18*/ 05062042
*/********************************************************** @G24LB18*/ 05064042
*/*                                                                     05066042
         MACRO                                                          05070042
         ICBSELTM &MF=,&TYPE=                                           05080042
.*                                                             @G24LB04 05098842
.*       CHECK FOR VALID TYPE SPECIFICATION                    @G24LB04 05099242
.*                                                             @G24LB04 05099642
.TYPE    AIF   ('&TYPE' EQ '').NUL                             @G24LB04 05099742
         AIF   ('&TYPE' EQ 'SEL' OR '&TYPE' EQ 'TRM').START    @G24LB04 05099842
         MNOTE 12,'  ICB601I - TYPE IS INCORRECTLY SPECIFIED'  @G24LB04 05099942
         MEXIT                                                 @G24LB04 05116642
.*                                                             @G24LB04 05126642
.NUL     ANOP                                                  @G24LB04 05128642
         MNOTE 12,'  ICB600I - TYPE MUST BE SPECIFIED '        @G24LB04 05130642
         MEXIT                                                 @G24LB04 05132642
.*                                                             @G24LB04 05133042
.*       DETERMINATION OF DESIRED MACRO FORM                   @G24LB04 05133142
.*                                                             @G24LB04 05133242
.START   AIF   ('&MF(1)' EQ 'L').LFORM      LIST FORM?         @G24LB04 05138842
         MNOTE 12,'  ICB617I - INVALID MF PARAMETER '          @G24LB04 05143242
         MNOTE 12,'  SPECIFIED; MUST BE L.'                    @G24LB04 05143642
         MEXIT                                                 @G24LB04 05144242
.*                                                             @G24LB04 05144342
.*       PROCESSING OF 'LIST' MACRO FORM                       @G24LB04 05144442
.*                                                             @G24LB04 05194342
.LFORM   ANOP                                                  @G24LB04 05240342
         AIF   ('&TYPE' EQ 'TRM').TERMN    SELECT REQUEST?     @G24LB04 05242342
.*                                                             @G24LB04 05284442
.SELCDS  ANOP                                                  @G24LB04 05285142
*  MACMEAN  SELECT MACRO--UNINITIALIZED LIST FORM              @G24LB04 05287142
*  MVS VERSION--07/20/76                                       @G24LB04 05287542
SELRB    DSECT                                                 @G24LB04 05287942
         DS    0F                                              @G24LB04 05288042
SELRBLEN DS    XL4                 LENGTH OF SELECT RB         @G24LB04 05288342
SELRBOPC DS    XL1                 OPCODE FOR SELECT           @G24LB04 05291942
SELFLGS1 DS    XL1                 ALLOCATION FLAGS            @G24LB04 05292042
SELPARMT EQU   X'80'               PARALLEL MOUNT REQUESTED    @G24LB04 05294042
SELDEFER EQU   X'40'               DEFERRED MOUNT REQUESTED    @G24LB04 05296042
SELSEPVL EQU   X'20'               SEPVOL REQUESTED            @G24LB04 05298042
SELVENQV EQU   X'10'               VOLUME ENQ VALID            @G24LB04 05300042
SELVOLRF EQU   X'08'               VOLUME REFERBACK TO DDNAME  @G24LB04*05300442
                                   REQUESTED                   @G24LB04 05300542
SELVRNEW EQU   X'04'               REFERENCED DD IS FOR NEW    @G24LB04*05300842
                                   DATA SET                    @G24LB04 05300942
SELVRGRP EQU   X'02'               REFERENCED DD IS FOR GROUP  @G24LB04*05301242
                                   VOLUME (IF NEW)             @G24LB04 05304342
SELMXESO EQU   X'01'               MIXED ESOTERIC REQUEST      @G24LB04 05306342
SELFLGS2 DS    XL1                 ALLOCATION/MSVC FLAGS       @G24LB04 05309142
SELPRSPL EQU   X'80'               RESERVED FOR VS1 USE        @G24LB04 05312242
SELSCSPL EQU   X'40'               RESERVED FOR VS1 USE        @G24LB04 05315342
SELSUBAL EQU   X'20'               RESERVED FOR VS1 USE        @G24LB04 05318442
SELUNSEP EQU   X'10'               RESERVED FOR VS1 USE        @G24LB04 05321542
SELCNTWT EQU   X'08'               CAN NOT WAIT REQUEST        @G24LB04 05323542
SELINITC EQU   X'04'               INITIAL CALL FOR STEP OR    @G24LB04*05323942
                                   DYNAMIC ALLOCATION          @G24LB04 05324342
SELRPRIV EQU   X'02'               MARK REQUEST PRIVATE        @G24LB04 05324642
SELNOVSL EQU   X'01'               NO VOLS WERE SELECTED       @G24LB04 05327742
SELUNCNT DS    XL1                 UNIT COUNT OF REFERENCED DD @G24LB04*05330842
                                   STATEMENT                   @G24LB04 05332842
SELJOBID DS    XL4                 THE ASID                    @G24LB04 05333942
SELJFCBA DS    F                   ADDRESS OF JFCB             @G24LB04 05337042
SELDEVTP DS    XL4                 4-BYTE INTERNAL DEVICE TYPE @G24LB04 05340142
SELUCBAD DS    F                   UCB ADDR (IF SPECIFIC UNIT) @G24LB04 05343242
SELJOBNM DS    CL8                 8-BYTE JOB NAME             @G24LB04 05346342
SELDDNAM DS    CL8                 DD NAME                     @G24LB04 05349442
SELSTNUM DS    XL1                 STEP NUMBER                 @G24LB04 05352542
SELUNUS1 DS    CL1                 UNUSED                      @G24LB04 05354542
SELDDCAT DS    H                   DD RELATIVE CONCAT. NUMBER  @G24LB04 05355642
SELDDNUM DS    H                   CURRENT DD NUMBER,          @G24LB04*05358742
                                   ZERO FOR DYNAMIC ALLOCATION @G24LB04 05360742
SELRFDDN DS    H                   REFERENCED DD NO.(SEPVOL)   @G24LB04 05361842
SELUNUS2 DS    CL4                 UNUSED                      @G24LB04 05364942
SELJFCBX DS    F                   ADDR OF 1ST JFCB EXTN       @G24LB04 05368042
SELVLRET DS    F                   ADDR OF VOLSER RETURN AREA  @G24LB04 05371142
SELGRPPR DS    F                   ADDR OF GROUP PARAMS AREA   @G24LB04 05373142
SELUNUSE DS    XL8                 UNUSED                      @G24LB04 05374242
SELLEN   EQU   X'48'               SELECT REQUEST BLOCK LENGTH @G24LB04 05377342
SELOPCD  EQU   X'89'               OP CODE FOR SELECT REQUEST  @G24LB04 05379342
         AGO   .FINISH                                         @G24LB04 05382642
.*                                                             @G24LB04 05384642
.TERMN   ANOP                                                  @G24LB04 05386642
*  MACMEAN  TERMINATE MACRO--UNINITIALIZED LIST FORM           @G24LB04 05429442
*  MVS VERSION--07/06/76                                       @G24LB04 05431442
TRMRB    DSECT                                                 @G24LB04 05431842
         DS    0F                                              @G24LB04 05431942
TRMRBLEN DS    XL4                 LENGTH OF TERMINATE REQ BLK @G24LB04 05432042
TRMRBOPC DS    XL1                 OPCODE FOR TERMINATE        @G24LB04 05437242
TRMFLAGS DS    XL1                 1-BYTE ALLOCATION FLAGS     @G24LB04 05439742
TRMALLOK EQU   X'80'               STEP ALLOCATED SUCCESSFULLY @G24LB04 05442242
TRMSCHAB EQU   X'40'               RESERVED FOR VS1 USE        @G24LB04 05452242
         DS    XL2                 UNUSED                      @G24LB04 05452542
TRMJOBID DS    XL4                 4-BYTE ASID AREA            @G24LB04 05462542
TRMSTHDR DS    F                   STEP TABLE HEADER ADDRESS   @G24LB04 05472542
TRMLEN   EQU   X'10'               TERMINATE REQ BLOCK LENGTH  @G24LB04 05482542
TRMOPCD  EQU   X'8A'               OP CODE FOR TERMINATE REQ   @G24LB04 05492542
         AGO   .FINISH                                         @G24LB04 05522942
.FINISH  MEND                                                  @G24LB04 06152942
**/                                                                     06153342
*   ICBSELTM:  MACRO KEYS(MF,TYPE);                       /* @G24LB04*/ 06153742
*/*                                                          @G24LB04*/ 06154242
*/*                                                          @G24LB04*/ 06224442
*/*                                                          @G24LB04*/ 06234442
*/*            INTERNAL DECLARE                              @G24LB04*/ 06244442
*/*                                                          @G24LB04*/ 06246442
*   DCL RETCODE FIXED;       /*RETURN CODE AREA              @G24LB04*/ 06250442
*        RETCODE=0;          /*INITIALIZE RETURN CODE        @G24LB04*/ 06254242
*/*                                                          @G24LB04*/ 06287442
*/*                                                          @G24LB04*/ 06287542
*/*            CHECK FOR VALID TYPE SPECIFICATION            @G24LB04*/ 06287642
*/*                                                          @G24LB04*/ 06293242
*   IF TYPE='' THEN          /*IS THE TYPE PARM NULL?        @G24LB04*/ 06295242
*     DO;                    /*PRINT ERROR MESSAGE           @G24LB04*/ 06297242
*        ANS MSG('  ICB600I - TYPE MUST BE '||                          06297642
*                'SPECIFIED ')SKIP;                        /*@G24LB04*/ 06298042
*        RETCODE=12;         /*SET RETURN CODE TO 12         @G24LB04*/ 06298442
*        GO TO FINISH;       /*BRANCH TO FINISH              @G24LB04*/ 06298542
*     END;                   /*                              @G24LB04*/ 06298642
*   IF TYPE(1)='SEL' THEN    /*IS THE TYPE SELECT?           @G24LB04*/ 06390742
*        GO TO START;        /*YES, VALID TYPE, BRANCH       @G24LB04*/ 06392742
*   IF TYPE(1)='TRM' THEN    /*IS THE TYPE FOR TERMINATE?    @G24LB04*/ 06394742
*        GO TO START;        /*YES, VALID TYPE, BRANCH       @G24LB04*/ 06396742
*/*                                                          @G24LB04*/ 06397142
*/*      INVALID 'TYPE' WILL CREATE THE FOLLOWING ERR MSG    @G24LB04*/ 06397542
*/*                                                          @G24LB04*/ 06397942
*   ANS MSG('  ICB601I - TYPE IS INCORRECTLY '||                        06398342
*           'SPECIFIED')SKIP;                              /*@G24LB04*/ 06398442
*   RETCODE=12;              /*SET RETURN CODE TO 12         @G24LB04*/ 06398542
*        GO TO FINISH;       /*BRANCH TO FINISH              @G24LB04*/ 06398642
*/*                                                          @G24LB04*/ 06415342
*START:                                                                 06425342
*   IF MF(1) = 'L' THEN      /*IS REQUEST FOR LIST FORM?     @G24LB04*/ 06427342
*        GO TO BLDLIST;      /*YES, WILL GO BUILD LIST       @G24LB04*/ 06429342
*   ANS MSG('  ICB617I - INVALID MF PARAMETER '||                       06431842
*           'SPECIFIED; MUST BE L.')SKIP;                /*  @G24LB04*/ 06431942
*   RETCODE=12;              /*SET RETURN CODE TO 12         @G24LB04*/ 06439542
*        GO TO FINISH;       /*BRANCH TO FINISH              @G24LB04*/ 06441542
*/*                                                          @G24LB04*/ 06441942
*BLDLIST:                                                               06442342
*   IF TYPE(1)='SEL' THEN       /*SELECT REQUEST?            @G24LB04*/ 06975142
*     DO;                       /*PRINT UNINITIALIZED BLK    @G24LB04*/ 06975542
*        ANS('/*******************************************'||           06975642
*            '************** @G24LB04*/')SKIP;                          06975742
*        ANS('/*MACMEAN  MSSC SELECT MACRO                '||           06975842
*            '               @G24LB04*/')SKIP;                          06992542
*        ANS('/*MVS VERSION--07/20/76                     '||           07002542
*            '               @G24LB04*/')SKIP;                          07004542
*        ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||           07006542
*            '               @G24LB04*/')SKIP;                          07008542
*        ANS('/*******************************************'||           07008942
*            '************** @G24LB04*/')SKIP;                          07009042
*        ANS('DCL 1 SELRB BASED,'||                                     07009142
*        ' /*SELECT REQUEST BLOCK @G24LB04*/')SKIP;                     07014742
*        ANS('    2  SELRBLEN FIXED(31), /*LENGTH'||                    07016742
*        ' OF BLOCK @G24LB04*/')SKIP;                                   07018742
*        ANS('    2  SELRBOPC FIXED(8), /*SELECT'||                     07019142
*        ' OPCODE @G24LB04*/')SKIP;                                     07019542
*        ANS('    2  SELFLGS1 BIT(8), /* ALLOCATION FLAGS'||            07019942
*        ' @G24LB04*/')SKIP;                                            07020042
*        ANS('    3  SELPARMT BIT(1) , /*PARALLEL MOUNT REQUESTED '||   07020142
*        '@G24LB04*/')SKIP;                                             07022142
*        ANS('    3  SELDEFER BIT(1) , /*DEFERRED MOUNT REQUESTED '||   07072142
*        '@G24LB04*/')SKIP;                                             07082142
*        ANS('    3  SELSEPVL BIT(1) , /*SEPVOL REQUESTED '||           07092142
*        '@G24LB04*/')SKIP;                                             07102142
*        ANS('    3  SELVENQV BIT(1) , /*VOLUME ENQUEUE VALID '||       07112142
*        '@G24LB04*/')SKIP;                                             07114142
*        ANS('    3  SELVOLRF BIT(1) , /*VOLUME REFERBACK TO DDNAME '|| 07114642
*        ' REQUESTED @G24LB04*/')SKIP;                                  07115042
*        ANS('    3  SELVRNEW BIT(1) , /*REFERENCED DD IS FOR NEW '||   07115442
*        'DATA SET @G24LB04*/')SKIP;                                    07115542
*        ANS('    3  SELVRGRP BIT(1) , /*REFERENCED DD IS FOR GROUP '|| 07115642
*        'VOLUME (IF NEW) @G24LB04*/')SKIP;                             07116042
*        ANS('    3  SELMXESO BIT(1), /* MIXED ESOTERIC REQUEST'||      07116942
*        ' @G24LB04*/')SKIP;                                            07117342
*        ANS('    2  SELFLGS2 BIT(8), /* ALLOCATION/MSVC FLAGS'||       07117742
*        ' @G24LB04*/')SKIP;                                            07118142
*        ANS('    3  SELPRSPL BIT(1) , /*RESERVED FOR VS1 USE '||       07118342
*        '@G24LB04*/')SKIP;                                             07118742
*        ANS('    3  SELSCSPL BIT(1) , /*RESERVED FOR VS1 USE '||       07118842
*        '@G24LB04*/')SKIP;                                             07118942
*        ANS('    3  SELSUBAL BIT(1) , /*RESERVED FOR VS1 USE '||       07119042
*        '@G24LB04*/')SKIP;                                             07119442
*        ANS('    3  SELUNSEP BIT(1) , /*RESERVED FOR VS1 USE '||       07121142
*        '@G24LB04*/')SKIP;                                             07123142
*        ANS('    3  SELCNTWT BIT(1) , /*CAN NOT WAIT REQUEST '||       07125142
*        '@G24LB04*/')SKIP;                                             07126742
*        ANS('    3  SELINITC BIT(1) , /*INITIAL CALL FOR STEP OR '||   07128742
*        ' DYNAMIC ALLOCATION @G24LB04*/')SKIP;                         07130742
*        ANS('    3  SELRPRIV BIT(1) , /*MARK REQUEST PRIVATE '||       07136542
*        ' @G24LB04*/')SKIP;                                            07138142
*        ANS('    3  SELNOVSL BIT(1) , /*NO VOLUMES WERE SELECTED '||   07139742
*        ' @G24LB04*/')SKIP;                                            07141342
*        ANS('    2  SELUNCNT FIXED(8),/*UNIT COUNT '||                 07143342
*        '@G24LB04*/')SKIP;                                             07145342
*        ANS('    2  SELJOBID FIXED(31), /*ASID'||                      07146142
*        ' @G24LB04*/')SKIP;                                            07147742
*        ANS('    2  SELJFCBA PTR(31),/*ADDRESS OF JFCB '||             07149342
*        '@G24LB04*/')SKIP;                                             07150942
*        ANS('    2  SELDEVTP CHAR(4) , /*INTERNAL DEVICE TYPE '||      07152542
*        '@G24LB04*/')SKIP;                                             07154142
*        ANS('    2  SELUCBAD PTR(31) , /*ADDRESS OF UCB (IF '||        07155742
*        'SPECIFIC UNIT REQUESTED) @G24LB04*/')SKIP;                    07157342
*        ANS('    2  SELJOBNM CHAR(8) , /*JOBNAME '||                   07158942
*        ' @G24LB04*/')SKIP;                                            07160542
*        ANS('    2  SELDDNAM CHAR(8) , /*DD NAME '||                   07162142
*        ' @G24LB04*/')SKIP;                                            07163742
*        ANS('    2  SELSTNUM FIXED(8) , /*STEP NUMBER '||              07165342
*        ' @G24LB04*/')SKIP;                                            07166942
*        ANS('    2  SELUNUS1 CHAR(1),/*UNUSED '||                      07167342
*        '@G24LB04*/')SKIP;                                             07167742
*        ANS('    2  SELDDCAT FIXED(15), /*DD RELATIVE CONCATENATION'|| 07168542
*        ' NUMBER @G24LB04*/')SKIP;                                     07170142
*        ANS('    2  SELDDNUM FIXED(15) , /*CURRENT DD NUMBER, '||      07170542
*        'ZERO FOR DYNAMIC ALLOCATION @G24LB04*/')SKIP;                 07170942
*        ANS('    2  SELRFDDN FIXED(15) , /*REFERENCED DD NUMBER '||    07174942
*        '(FOR SEPVOL) @G24LB04*/')SKIP;                                07176542
*        ANS('    2  SELUNUS2 CHAR(4),/*UNUSED '||                      07178142
*        '@G24LB04*/')SKIP;                                             07179742
*        ANS('    2  SELJFCBX PTR(31) , /*ADDRESS OF FIRST JFCB '||     07181342
*        'EXTENSION @G24LB04*/')SKIP;                                   07182942
*        ANS('    2  SELVLRET PTR(31),/*ADDRESS OF VOLUME SERIAL '||    07184542
*        'RETURN AREA @G24LB04*/')SKIP;                                 07186142
*        ANS('    2  SELGRPPR PTR(31),/*ADDRESS OF GROUP PARAMETERS '|| 07186542
*        'AREA @G24LB04*/')SKIP;                                        07186942
*        ANS('    2  SELUNUSE CHAR(8);/*UNUSED @G24LB04*/')SKIP;        07187742
*        ANS('DCL SELLEN FIXED(8) CONSTANT(72);'||                      07189342
*        '/*SELECT REQUEST LENGTH @G24LB04*/')SKIP;                     07190942
*        ANS('DCL SELOPCD BIT(8) CONSTANT(' || QUOTE('89') || 'X);'||   07192542
*        '/*SELECT OP CODE @G24LB04*/')SKIP;                            07194142
*        GO TO FINISH;                                    /* @G24LB04*/ 07195742
*     END;                                                /* @G24LB04*/ 07197342
*/*                                                          @G24LB04*/ 07198942
*  ELSE                      /*PROCESS TERMINATE REQ BLK     @G24LB04*/ 07200542
*     DO;                    /*PRINT TERMINATE REQ BLK       @G24LB04*/ 07202142
*        ANS('/*******************************************'||           07203742
*            '************** @G24LB04*/')SKIP;                          07205342
*        ANS('/*MACMEAN  MSSC TERMINATE MACRO             '||           07206942
*            '               @G24LB04*/')SKIP;                          07208542
*        ANS('/*MVS VERSION--06/16/76                     '||           07210142
*            '               @G24LB04*/')SKIP;                          07211742
*        ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||           07213342
*            '               @G24LB04*/')SKIP;                          07214942
*        ANS('/*******************************************'||           07216542
*            '************** @G24LB04*/')SKIP;                          07218142
*        ANS('DCL 1 TRMRB BASED,'||                                     07219742
*        ' /*TERMINATE REQUEST BLOCK @G24LB04*/')SKIP;                  07221342
*        ANS('    2  TRMRBLEN FIXED(31),/*LENGTH OF'||                  07222942
*        ' TERMINATE REQ BLK @G24LB04*/')SKIP;                          07224542
*        ANS('    2  TRMRBOPC FIXED(8),/*TERMINATE'||                   07234542
*        ' OPCODE @G24LB04*/')SKIP;                                     07244542
*        ANS('    2  TRMFLAGS BIT(8), /*ALLOCATION FLAGS'||             07258542
*        ' @G24LB04*/')SKIP;                                            07260542
*        ANS('    3  TRMALLOK BIT(1), /*STEP ALLOCATED '||              07262542
*        'SUCCESSFULLY @G24LB04*/')SKIP;                                07262942
*        ANS('    3  TRMSCHAB BIT(1), /*RESERVED FOR VS1 USE '||        07263342
*        ' @G24LB04*/')SKIP;                                            07263742
*        ANS('    3  * BIT(6), /*UNUSED BITS'||                         07264142
*        ' @G24LB04*/')SKIP;                                            07264242
*        ANS('    2  * CHAR(2), /* UNUSED @G24LB04*/')SKIP;             07264342
*        ANS('    2  TRMJOBID FIXED(31), /*ASID @G24LB04*/')SKIP;       07264442
*        ANS('    2  TRMSTHDR PTR(31);/*STEP TABLE HEADER ADDRESS' ||   07281142
*        ' @G24LB04*/')SKIP;                                            07283142
*        ANS('DCL TRMLEN FIXED(8) CONSTANT(16);/*TERMINATE REQUEST '    07291142
*         || 'LENGTH @G24LB04*/')SKIP;                                  07301142
*        ANS('DCL TRMOPCD BIT(8) CONSTANT(' || QUOTE('8A') || 'X);'||   07303142
*        '/*TERMINATE OP CODE @G24LB04*/')SKIP;                         07403142
*     END;                 /*                                @G24LB04*/ 07453142
*/*                                                          @G24LB04*/ 07503142
*FINISH:  RETURN CODE(RETCODE);    /*SET RETURN CODE         @G24LB04*/ 08687542
*         %END;                                            /*@G24LB04*/ 08697542
./  ADD  SSI=50290030,NAME=ICBSUSP
* %/*  START OF SPECIFICATIONS****                             @Y30LB02 00050003
.*                                                             @Y30LB02 00100003
.*01   MODULE-NAME = ICBSUSP                                   @Y30LB02 00150003
.*                                                             @Y30LB02 00200003
.*01   DESCRIPTIVE-NAME = SUSPEND MACRO                        @Y30LB02 00250003
.*                                                             @Y30LB02 00300003
.*01   COPYRIGHT = NONE                                        @Y30LB02 00350003
.*                                                             @Y30LB02 00400003
.*01   STATUS = OS/VS1 RELEASE 4, OS/VS2 RELEASE 3             @Y30LB02 00450003
.*                                                             @Y30LB02 00500003
.*01   FUNCTION = REQUEST THE MSC TO STOP MSS PROCESSING       @Y30LB02 00550003
.*                                                             @Y30LB02 00600003
.*01   NOTES = AS FOLLOWS:                                     @Y30LB02 00650003
.*                                                             @Y30LB02 00700003
.*02     CODE = MACRO IS BILINGUALLY CODED                     @Y30LB02 00750003
.*                                                             @Y30LB02 00800003
.*02     RESTRICTIONS = THE FOLLOWING PREFIXES SHOULD BE       @Y30LB02 00850003
.*                      AVOIDED IN THE USER'S INVOCATION:      @Y30LB02 00900003
.*                      ICB AND SU                             @Y30LB02 00950003
.*                                                             @Y30LB02 01000003
.*02     REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF REGISTERS@Y30LB02 01050003
.*                              BY MACROS: R0,R1,R14, AND R15  @Y30LB02 01100003
.*                                                             @Y30LB02 01150003
.*01   MODULE-TYPE = MACRO                                     @Y30LB02 01200003
.*                                                             @Y30LB02 01250003
.*02     PROCESSOR = PLS2 AND ASSEMBLER                        @Y30LB02 01300003
.*                                                             @Y30LB02 01400003
.*02     ATTRIBUTES = REUSABLE                                 @Y30LB02 01450003
.*                                                             @Y30LB02 01500003
.*02     ENTRY-POINT = ICBSUSP                                 @Y30LB02 01550003
.*                                                             @Y30LB02 01600003
.*02     PURPOSE = A SUSPEND REQUEST WILL BE ISSUED            @Y30LB02 01650003
.*       WHENEVER THE CALLER WANTS TO QUIESCE MSS              @Y30LB02 01700003
.*       PROCESSING FOR A POWER DOWN OR TO INFORM MSS          @Y30LB02 01750003
.*       THAT THE HOST INTERFACE WILL NO LONGER                @Y30LB02 01800003
.*       ACCESS MSS OR TO PREPARE TO SWAP TO THE ALTERNATE MSC @ZD00155 01850003
.*                                                             @Y30LB02 01900003
.*02     LINKAGE = SVC  126                                    @Y30LB02 01950003
.*                                                             @Y30LB02 02000003
.*01  INPUT                                                    @Y30LB02 02050003
.*                                                             @Y30LB02 02100003
.*                                                             @Y30LB02 02150003
.* MACRO SYNTAX                                                @Y30LB02 02200003
.*                                                             @Y30LB02 02250003
.*                                                             @Y30LB02 02300003
.*   LIST FORM                                                 @Y30LB02 02350003
.*                                                             @Y30LB02 02400003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 02450003
.*                                                             @Y30LB02 02500003
.*ICBSUSP  MF=L                  MF=(L,MAP) - BAL              @Y30LB02 02550003
.*         MF(L,NAME/(R)         MF(L,NAME/(R),ATTR)-PLS       @Y30LB02 02600003
.*                                                             @Y30LB02 02650003
.*                                                             @Y30LB02 02700003
.*   STANDARD FORM                                             @Y30LB02 02750003
.*                                                             @Y30LB02 02800003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 02850003
.*                                                             @Y30LB02 02900003
.*ICBSUSP  FLAGS=ADDR/(R)                                      @Y30LB02 02950003
.*                                                             @Y30LB02 03000003
.* EXECUTE FORM                                                @Y30LB02 03050003
.*                                                             @Y30LB02 03100003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03150003
.*                                                             @Y30LB02 03200003
.*ICBSUSP  MF(E,NAME/(R))       MF(E,NAME/(R),COMPLETE)-PLS    @Y30LB02 03250003
.*                              FLAGS=ADDR/(R)                 @Y30LB02 03300003
.*                                                             @Y30LB02 03350003
.*                                                             @Y30LB02 03400003
.*   KEYWORD PARAMETERS:                                       @Y30LB02 03450003
.*                                                             @Y30LB02 03500003
.*   MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE         @Y30LB02 03550003
.*          MACRO FORMAT AND MAY GIVE THE ADDRESS OR           @Y30LB02 03600003
.*          ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK      @Y30LB02 03650003
.*          IS STORED.                                         @Y30LB02 03700003
.*                                                             @Y30LB02 03750003
.*          L - LIST FORM: THE EXPANSION OF THE L-FORM         @Y30LB02 03800003
.*              MACRO WILL RESULT IN A REQUEST BLOCK WITH      @Y30LB02 03850003
.*              THE ONLY NON-ZERO FIELDS BEING THE OPCODE      @Y30LB02 03900003
.*              AND LENGTH FIELDS.                             @Y30LB02 03950003
.*                                                             @Y30LB02 04000003
.*          (1) 'MAP' - IF MAP IS SPECIFIED WITH THE           @Y30LB02 04050003
.*              ASSEMBLER MACRO CALL A DSECT EQUIVALENT TO     @Y30LB02 04100003
.*              A MAPPING MACRO IS PRODUCED.                   @Y30LB02 04150003
.*                                                             @Y30LB02 04200003
.*          (2) NAME - THE MACRO INVOKER MUST SPECIFY A        @Y30LB02 04250003
.*              NAME FOR HIS STRUCTURE WHEN INVOKING THE       @Y30LB02 04300003
.*              PLS LIST FORM.                                 @Y30LB02 04350003
.*                                                             @Y30LB02 04400003
.*          (3) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS       @Y30LB02 04450003
.*              ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION    @Y30LB02 04500003
.*              IN AN UNINITIALIZED REQUEST BLOCK.  ATTRI-     @Y30LB02 04550003
.*              BUTE EXAMPLE:                                  @Y30LB02 04600003
.*                                                             @Y30LB02 04650003
.*              CHAR, FIXED, STATIC LOCAL, NONLOCAL,           @Y30LB02 04700003
.*              BASED(*), ETC.                                 @Y30LB02 04750003
.*                                                             @Y30LB02 04800003
.*       NULL - STANDARD FORM: THE EXPANSION OF THIS FORM      @Y30LB02 04850003
.*              CONSISTS OF A REQUEST BLOCK, A LINKAGE         @Y30LB02 04900003
.*              INSTRUCTION, AND, POSSIBLY, PARAMETER          @Y30LB02 04950003
.*              BINDING INSTRUCTION.                           @Y30LB02 05000003
.*                                                             @Y30LB02 05050003
.*          E - EXECUTABLE FORM: THE EXPANSION OF THIS FORM    @Y30LB02 05100003
.*              CONSISTS OF A LINKAGE INSTRUCTION AND          @Y30LB02 05150003
.*              POSSIBLY, PARAMETER BINDING INSTRUCTIONS.      @Y30LB02 05200003
.*                                                             @Y30LB02 05250003
.*              SUB-PARAMETERS                                 @Y30LB02 05300003
.*                                                             @Y30LB02 05350003
.*              (1)  AN E MUST BE SPECIFIED IN THE FIRST       @Y30LB02 05400003
.*                   SUB-PARAMETER POSITION.  THIS INDICATES   @Y30LB02 05450003
.*                   THAT THE MACRO IS IN EXECUTABLE FORM.     @Y30LB02 05500003
.*                                                             @Y30LB02 05550003
.*              (2)  A NAME OR A REGISTER MUST BE SPECIFIED    @Y30LB02 05600003
.*                   IN THE SECOND SUB-PARAMETER.              @Y30LB02 05650003
.*                                                             @Y30LB02 05700003
.*              (3)  'COMPLETE' - COMPLETE WILL CAUSE THE      @Y30LB02 05750003
.*                   MACRO TO ZERO OUT THE REQUEST BLOCK.      @Y30LB02 05800003
.*                   AFTER ZEROING THE REQUEST BLOCK THE       @Y30LB02 05850003
.*                   FUNCTION OPCODE AND LENGTH ARE PLACED     @Y30LB02 05900003
.*                   IN THE REQUEST BLOCK.                     @Y30LB02 05950003
.*                                                             @Y30LB02 06000003
.*   FLAGS - THE 2 BYTE FIELD WHICH INDICATES FUNCTION TO      @Y30LB02 06050003
.*   BE PERFORMED.  THE FORMAT OF THE FLAGS FIELD IS AS        @Y30LB02 06100003
.*   FOLLOWS:                                                  @Y30LB02 06150003
.*                                                             @Y30LB02 06200003
.*     ----------------------------------------------          @ZD00155 06250003
.*     | X | X | X |     BITS 3-15 --- ALL ZEROS    |          @ZD00155 06300003
.*     ----------------------------------------------          @ZD00155 06350003
.*                                                             @Y30LB02 06400003
.*   BIT 0------------'1'B     IMMEDIATE SHUTDOWN              @Y30LB02 06450003
.*                    '0'B     NO FUNCTION                     @Y30LB02 06500003
.*                                                             @Y30LB02 06550003
.*   BIT 1------------'1'B     RECONFIGURATION SHUTDOWN        @Y30LB02 06600003
.*                    '0'B     NO FUNCTION                     @Y30LB02 06650003
.*                                                             @Y30LB02 06700003
.*   BIT 2------------'1'B     PREPARE TO SWAP MSCS            @ZD00155 06710003
.*                    '0'B     NO FUNCTION                     @Y30LB02 06720003
.*                                                             @Y30LB02 06730003
.*   BITS 3-15------------    |NOT USED - ALWAYS ZERO|         @Y30LB02 06750003
.*                                                             @Y30LB02 06800003
.*      IMMEDIATE SHUTDOWN:                                    @Y30LB02 06850003
.*                                                             @Y30LB02 06900003
.*      THIS FUNCTION IS PERFORMED FOR MSC ACTIVITY ON BEHALF  @Y30LB02 06910003
.*      OF THE INTERFACE ISSUING THE ORDER ONLY.               @Y30LB02 06920003
.*      IF THE ISSUING INTERFACE IS NOT THAT OF THE PRIMARY    @Y30LB02 06930003
.*      HOST PROCESSOR, THE INTERFACE IS DEINITIALIZED AND NO  @Y30LB02 06940003
.*      FURTHER ACTION IS TAKEN BY THE MSC FOR THIS COMMAND.   @Y30LB02 06942003
.*      USE OF THIS ATTRIBUTE CAUSES ALL STAGING/DESTAGING     @Y30LB02 06950003
.*      IN PROGRESS TO BE COMPLETED. IF TRACE IS ON, THE TRACE @Y30LB02 07000003
.*      END RECORD IS WRITTEN.                                 @Y30LB02 07010003
.*      ALL CARTRIDGES ARE RETURNED TO THEIR CELLS             @Y30LB02 07020003
.*      AND THE INTERFACE IS DEINITIALIZED.                    @Y30LB02 07030003
.*                                                             @Y30LB02 07100003
.*      RECONFIGURATION SHUTDOWN:                              @Y30LB02 07150003
.*                                                             @Y30LB02 07200003
.*      THIS FUNCTION IS PERFORMED ONLY WHEN ISSUED BY THE     @Y30LB02 07210003
.*      PRIMARY HOST CPU PROCESSOR.                            @Y30LB02 07220003
.*      USE OF THIS ATTRIBUTE CAUSES ALL MOUNTED VOLUMES IN    @Y30LB02 07250003
.*      MSS TO BE DEMOUNTED AND ALL SCHEDULED WORK IN MSS      @Y30LB02 07300003
.*      COMPLETED. IF TRACE IS ON, THE TRACE END RECORD IS     @Y30LB02 07350003
.*      WRITTEN.  THE INTERFACE IS DEINITIALIZED.              @Y30LB02 07350403
.*                                                             @Y30LB02 07360003
.*      PREPARE TO SWAP:                                       @ZD00155 07370003
.*                                                             @ZD00155 07380003
.*      THIS IS USED TO PREPARE THE MSF AND PROCESSORS WHICH   @ZD00155 07390003
.*      ARE USING THE MSF FOR A SWAP TO THE ALTERNATE MSC,     @ZD00155 07392003
.*      AT OPERATOR REQUEST.                                   @ZD00155 07394003
.*      A PREPARE MSC SWAP WILL ONLY BE EXECUTED WHEN RECEIVED @ZD00155 07396003
.*      BY THE MSC FROM THE PRIMARY HOST.                      @ZD00155 07398003
.*      USE OF THIS ATTRIBUTE CAUSES THE STAGE/DESTAGE         @ZD00155 07398403
.*      ACTIVITY CURRENTLY IN PROGRESS TO BE COMPLETED.        @ZD00155 07398803
.*      IF TRACE IS ON, THE TRACE END RECORD IS WRITTEN.       @ZD00155 07399203
.*      A DUMMY MESSAGE IS WRITTEN TO ANY INTERFACE OTHER      @ZD00155 07399603
.*      THAN THE PRIMARY TO CONVEY THE INFORMATION THAT        @ZD00155 07399703
.*      THE SWAP IS TO TAKE PLACE.                             @ZD00155 07399803
.*      NO INTERFACE IS DEINITIALIZED.                         @ZD00155 07399903
.*                                                             @Y30LB02 07400003
.*   BITS 0, 1 AND 2 ARE MUTUALLY EXCLUSIVE                    @ZD00155 07450003
.*                                                             @Y30LB02 07500003
.*                                                             @Y30LB02 07550003
.*01  EXIT-NORMAL = VALID INVOCATION                           @Y30LB02 07600003
.*                                                             @Y30LB02 07650003
.*02     CONDITION = RETURN CODE = 0                           @Y30LB02 07700003
.*                                                             @Y30LB02 07750003
.*02     OUTPUT = REQUESTED ORDER GENERATED FOR THE SVC        @Y30LB02 07800003
.*                                                             @Y30LB02 07850003
.*01  EXIT-ERROR = INVALID INVOCATION                          @Y30LB02 07900003
.*                                                             @Y30LB02 07950003
.*02     CONDITION = RETURN CODE = 12                          @Y30LB02 08000003
.*                                                             @Y30LB02 08050003
.*02     OUTPUT = ERROR MESSAGE AS A COMMENT AT POINT OF       @Y30LB02 08100003
.*                INVOCATION                                   @Y30LB02 08150003
.*                                                             @Y30LB02 08200003
.*01  EXTERNAL REFERENCES = NONE                               @Y30LB02 08250003
.*                                                             @Y30LB02 08300003
.*01  TABLES = NONE                                            @Y30LB02 08350003
.*                                                             @Y30LB02 08400003
.*01  MESSAGES = AS FOLLOWS:                                   @Y30LB02 08450003
.*      ICB602I:  A NAME FOR THE REQUEST BLOCK MUST BE         @Y30LB02 08500003
.*                SPECIFIED IN MF(2)                           @Y30LB02 08550003
.*      ICB604I:  WARNING-ONLY THE MF PARAMETER IS VALID FOR   @Y30LB02 08600003
.*                THE LIST FORM                                @Y30LB02 08650003
.*      ICB607I:  FLAGS MUST BE SPECIFIED FOR STANDARD         @Y30LB02 08700003
.*                FORM MACRO                                   @Y30LB02 08750003
.*      ICB612I:  MF(2) MUST CONTAIN REQ BLK NAME              @Y30LB02 08800003
.*                IF EXEC MACRO FORM REQUESTED                 @Y30LB02 08850003
.*      ICB615I:  INVALID MF PARAMETER SPECIFIED, MUST         @Y30LB02 08900003
.*                BE E, L, OR NULL                             @Y30LB02 08950003
.*                                                             @Y30LB02 09000003
.*01  CONTROL-BLOCKS = NONE                                    @Y30LB02 09050003
.*                                                             @Y30LB02 09100003
.*01  INNER MACROS = NONE                                      @Y30LB02 09150003
.*                                                             @Y30LB02 09200003
.*01  SYSTEM MACRO = NONE                                      @Y30LB02 09250003
.*                                                             @Y30LB02 09300003
.*01  CHANGE-ACTIVITY = S/D X04AC02 AND Y30LB02                @Y30LB02 09350003
 .*                         @ZD00155                           @ZD00155 09360003
.*                                                             @Y30LB02 09400003
.**** END OF SPECIFICATIONS ***                                @Y30LB02 09450003
         MACRO                                                 @Y30LB02 09500003
&SYMBOL  ICBSUSP &MF=,&FLAGS=                                  @Y30LB02 09550003
         LCLB  &ERSW              ERROR SWITCH                 @Y30LB02 09600003
         LCLC  &SUSP              SUSPEND MACRO INSTR INDX     @Y30LB02 09650003
&SUSP    SETC 'SU'.'&SYSNDX'      ASSIGN CHARACTER VALUE       @Y30LB02 09700003
.*                                                             @Y30LB02 09750003
.*       DETERMINATION OF DESIRED MACRO FORM                   @Y30LB02 09800003
.*                                                             @Y30LB02 09850003
         AIF  ('&MF(1)' NE 'L').EFORM       LIST FORM?         @Y30LB02 09900003
         AIF  ('&FLAGS' EQ '').LISTOK                          @Y30LB02 09950003
.WARN    MNOTE 4,'  ICB604I - WARNING-ONLY THE MF PARAMETER '  @Y30LB02 10000003
         MNOTE 4,'  IS VALID FOR THE LIST FORM '               @Y30LB02 10050003
.*                                                             @Y30LB02 10100003
.LISTOK  ANOP                                                  @Y30LB02 10150003
         AIF   ('&MF(2)' EQ 'MAP').LISTDS   DSECT REQUESTED?   @Y30LB02 10200003
*  MACMEAN  MSSC SUSPEND MACRO--INITIALIZED LIST FORM          @Y30LB02 10250003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 10300003
&SYMBOL  DS   0F                                               @Y30LB02 10350003
SUSPLEN  DC   F'8'                LENGTH OF SUSPEND REQBLK     @Y30LB02 10400003
SUSPOPC  DC   XL1'22'             SUSPEND  FUNCTION OPCODE     @Y30LB02 10450003
SUSP001  DC   XL1'00'             1-BYTE RESERVED AREA         @Y30LB02 10500003
SUSPFLG  DC   XL2'0000'           2-BYTE FLAGS AREA            @Y30LB02 10550003
         AGO  .FINISH                                          @Y30LB02 10600003
.*                                                             @Y30LB02 10650003
.LISTDS  ANOP                                                  @Y30LB02 10700003
*  MACMEAN  MSSC SUSPEND MACRO--UNINITIALIZED LIST FORM        @Y30LB02 10750003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 10800003
ICBSUSP  DSECT                                                 @Y30LB02 10850003
SUSPLEN  DS   F                   LEN SUSPEND REQBLK=8         @Y30LB02 10900003
SUSPOPC  DS   XL1                 SUSPEND OPCODE 22 HEX        @Y30LB02 10950003
SUSP001  DS   XL1                 1-BYTE RESERVED AREA         @Y30LB02 11000003
SUSPFLG  DS   XL2                 2-BYTE FLAGS AREA            @Y30LB02 11050003
         AGO  .FINISH                                          @Y30LB02 11100003
.*                                                             @Y30LB02 11150003
.*       THE FOLLOWING PROCESSING IS ACCOMPLISHED FOR THE      @Y30LB02 11200003
.*       EXECUTABLE MACRO FORM                                 @Y30LB02 11250003
.*                                                             @Y30LB02 11300003
.EFORM   AIF  ('&MF(1)' NE 'E').SFORM       EXECUTE FORM?      @Y30LB02 11350003
         AIF  ('&MF(2)' EQ '').EXFAIL       MF(2) NULL?        @Y30LB02 11400003
.*                                                             @Y30LB02 11450003
*  MACMEAN  MSSC SUSPEND MACRO--EXECUTE FORM                   @Y30LB02 11500003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 11550003
&SYMBOL  IHBINNRA &MF(2)           LD ADDR OF REQUEST BLK      @Y30LB02 11600003
.*                                 USING IHBINNRA MACRO        @Y30LB02 11650003
         LA    0,8                 LENGTH OF REQ BLOCK         @Y30LB02 11700003
         ST    0,0(1)              STORE LENGTH IN BLK         @Y30LB02 11750003
         MVI   4(1),X'22'          STORE OPCODE                @Y30LB02 11800003
         AGO  .CKSW1               BR TO CK ERROR SWITCH       @Y30LB02 11850003
.EXFAIL  ANOP                                                  @Y30LB02 11900003
         MNOTE 12,'  ICB612I - MF(2) MUST CONTAIN REQ '        @Y30LB02 11950003
         MNOTE 12,'  BLK NAME IF EXEC MACRO FORM REQUESTED'    @Y30LB02 12000003
&ERSW    SETB 1                   SET ERROR SWITCH TO 1        @Y30LB02 12050003
.*                                                             @Y30LB02 12100003
.CKSW1   AIF  (&ERSW).FINISH      IF ERROR-END PROCESSING      @Y30LB02 12150003
         AGO  .COMMON                                          @Y30LB02 12200003
.*                                                             @Y30LB02 12250003
.*       PROCESSING OF THE STANDARD FORM MACRO                 @Y30LB02 12300003
.*                                                             @Y30LB02 12350003
.SFORM   AIF  ('&MF(1)' NE '').BADFORM      STANDARD FORM?     @Y30LB02 12400003
         AIF  ('&FLAGS' NE '').CKSW2        FLAGS SPECIFIED?   @Y30LB02 12450003
&ERSW    SETB 1                   SET ERROR SWITCH TO 1        @Y30LB02 12500003
         MNOTE 12,'  ICB607I - FLAGS MUST BE SPECIFIED '       @Y30LB02 12550003
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02 12600003
         AGO  .CKSW2                                           @Y30LB02 12650003
.*                                                             @Y30LB02 12700003
.BADFORM ANOP                                                  @Y30LB02 12750003
&ERSW    SETB 1                   SET ERROR SWITCH TO 1        @Y30LB02 12800003
         MNOTE 12,'  ICB615I - INVALID MF PARAMETER '          @Y30LB02 12850003
         MNOTE 12,'  SPECIFIED, MUST BE L, E, OR NULL '        @Y30LB02 12900003
.*                                                             @Y30LB02 12950003
.*       THE FOLLOWING CODE CHECKS TO DETERMINE IF THE ERROR   @Y30LB02 13000003
.*       SWITCH IS ON.  IF YES, PROCESSING IS TERMINATED, OTHER@Y30LB02 13050003
.*       WISE STANDARD FORM MACRO PROCESSING WILL BE CON-      @Y30LB02 13100003
.*       TINUED                                                @Y30LB02 13150003
.*                                                             @Y30LB02 13200003
.CKSW2   AIF  (&ERSW).FINISH      IF YES-END PROCESSING        @Y30LB02 13250003
*  MACMEAN  MSSC SUSPEND MACRO--STANDARD FORM                  @Y30LB02 13300003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 13350003
         CNOP 0,4                                              @Y30LB02 13400003
&SYMBOL  BAL  1,&SUSP             BRANCH AROUND REQ BLOCK      @Y30LB02 13450003
SUSPPTR  DC   A(&SUSP-*)          LENGTH OF REQUEST BLOCK      @Y30LB02 13500003
SUSPOPC  DC   XL1'22'             SUSPEND FUNCTION OPCODE      @Y30LB02 13550003
SUSP001  DC   XL1'00'             1-BYTE RESERVED AREA         @Y30LB02 13600003
SUSPFLG  DC   XL2'0000'           2-BYTE FLAGS AREA            @Y30LB02 13650003
&SUSP    EQU  *                                                @Y30LB02 13700003
.*                                                             @Y30LB02 13750003
.*       THE FOLLOWING CODE CHECKS FOR VALID PARAMETERS IF     @Y30LB02 13800003
.*       STANDARD FOR EXECUTE FORM MACRO IS SPECIFIED.         @Y30LB02 13850003
.*       IF PARAMETERS ARE SPECIFIED, THEY WILL BE STORED      @Y30LB02 13900003
.*       IN THE REQUEST BLOCK.                                 @Y30LB02 13950003
.*                                                             @Y30LB02 14000003
.COMMON  AIF  ('&FLAGS' EQ '').INVOKE       FLAGS SPECIFIED?   @Y30LB02 14050003
         AIF  ('&FLAGS'(1,1) EQ '(').FLREG  FLAGS IN REG-FORM? @Y30LB02 14100003
         MVC  6(2,1),&FLAGS       PUT FLAGS IN REQ BLK         @Y30LB02 14150003
         AGO  .INVOKE             BRANCH TO CK TIME/DATE       @Y30LB02 14200003
.*                                                             @Y30LB02 14250003
.FLREG   ANOP                                                  @Y30LB02 14300003
         MVC  6(2,1),0(&FLAGS(1)) REGFORM,FLAGS IN BLOCK       @Y30LB02 14350003
.*                                                             @Y30LB02 14400003
.INVOKE  ANOP                                                  @Y30LB02 14450003
         SVC  126                                              @Y30LB02 14500003
.FINISH  MEND                                                  @Y30LB02 14550003
**/                                                                     14600003
*/*                                                          @Y30LB02*/ 14650003
*   ICBSUSP: MACRO KEYS(MF,FLAGS);                         /*@Y30LB02*/ 14700003
*/*                                                          @Y30LB02*/ 14750003
*/*                     EXTERNAL DECLARES                    @Y30LB02*/ 14800003
*/*********************************************************  @Y30LB02*/ 14850003
*/*      SUSPTEST IS USED TO DETERMINE WHETHER THE STANDARD  @Y30LB02*/ 14900003
*/*      FORM MACRO HAS BEEN INVOKED MORE THAN ONCE BY THE   @Y30LB02*/ 14950003
*/*      SAME CALLER.                                        @Y30LB02*/ 15000003
*/*********************************************************  @Y30LB02*/ 15050003
*/*      SUTESTR1 WILL BE USED TO DETERMINE IF IT IS NECES-  @Y30LB02*/ 15100003
*/*      SARY TO DECLARE R1 OR WHETHER IT IS ALREADY DCLD    @Y30LB02*/ 15150003
*/*********************************************************  @Y30LB02*/ 15200003
*/*                                                          @Y30LB02*/ 15250003
*   DCL  SUTESTR1  FIXED  EXT;    /*REG1 DECLARE COUNTER     @Y30LB02*/ 15300003
*   DCL  SUSPTEST  FIXED  EXT;    /*STANDARD INVOC COUNTER   @Y30LB02*/ 15350003
*/*                                                          @Y30LB02*/ 15400003
*/*      INTERNAL DECLARES                                   @Y30LB02*/ 15450003
*   DCL  SUPOP    CHAR;      /*DEFINE SUSPEND OPCODE         @Y30LB02*/ 15500003
*   DCL  SUPLEN   CHAR;      /*DECLARE LENGTH OF ORDER       @Y30LB02*/ 15550003
*   DCL  ERSW     FIXED;     /*DECLARE ERROR COND SWITCH     @Y30LB02*/ 15600003
*   DCL  RETCODE  FIXED;     /*DECLARE RETURN CODE AREA      @Y30LB02*/ 15650003
*   DCL  CTR      FIXED;     /*DECLARE CTR FOR LIST FORM     @Y30LB02*/ 15700003
*        ERSW=0;             /*INITIALIZE ERROR SWITCH       @Y30LB02*/ 15750003
*        RETCODE=0;          /*INITIALIZE RETURN CODE        @Y30LB02*/ 15800003
*        SUPLEN='8';         /*INITIALIZE LENGTH FIELD       @Y30LB02*/ 15850003
*        SUPOP='22';         /*INITIALIZE OPCODE FIELD       @Y30LB02*/ 15900003
*        CTR=0;              /*INITIALIZE COUNTER            @Y30LB02*/ 15950003
*/********************************************************   @Y30LB02*/ 16000003
*/*      CHECK FOR VALID MACRO FORM--E INDICATES EXECUTE     @Y30LB02*/ 16050003
*/*      FORM, L INDICATES LIST FORM AND IF THE MF PARA-     @Y30LB02*/ 16100003
*/*      METER IS NULL THE STANDARD FORM MACRO IS INVOKED    @Y30LB02*/ 16150003
*/********************************************************   @Y30LB02*/ 16200003
*        IF SUTESTR1=0 THEN  /*REGISTER ONE DECLARED?        @Y30LB02*/ 16250003
*             DO;            /*NO,DECLARE IT                 @Y30LB02*/ 16300003
*                  ANS('DCL SUSPR1 REG(1) PTR ;/*PTR'||                 16350003
*                  ' TO REQUEST BLOCK @Y30LB02*/')SKIP;                 16400003
*                  SUTESTR1=SUTESTR1+1; /*INCREM REG CTR     @Y30LB02*/ 16450003
*             END;               /*                          @Y30LB02*/ 16500003
*   IF MF(1) ¬= 'L' THEN         /*LIST FORM REQUEST?        @Y30LB02*/ 16550003
*        GO TO EFORM;            /*NO,CK FOR EXECUTE         @Y30LB02*/ 16600003
*   IF MF(2) = '' THEN           /*LIST NAME SPECIFIED?      @Y30LB02*/ 16650003
*        DO;                     /*NO,PRINT ERROR MSG        @Y30LB02*/ 16700003
*             ERSW=1;            /*SET ERROR SWITCH          @Y30LB02*/ 16750003
*             RETCODE=12;        /*SET RETURN CODE           @Y30LB02*/ 16800003
*        ANS MSG('  ICB602I -  A NAME FOR THE '||                       16850003
*        'REQUEST BLOCK MUST BE SPECIFIED IN MF(2)')SKIP;  /*@Y30LB02*/ 16900003
*             GO TO FINISH;      /*BRANCH TO END PROCESS     @Y30LB02*/ 16950003
*        END;                 /*                             @Y30LB02*/ 17000003
*/*                                                          @Y30LB02*/ 17050003
*   IF FLAGS ¬= '' THEN      /*IS THE FLAGS AREA NULL        @Y30LB02*/ 17100003
*        CTR=CTR+1;          /*INCREMENT PARAMETER COUNTER   @Y30LB02*/ 17150003
*   IF CTR > 0 THEN          /*INCREMENT CTR > ZERO?         @Y30LB02*/ 17200003
*        DO;                 /*GIVE USER WARNING MSG         @Y30LB02*/ 17250003
*             RETCODE=4;     /*SET RETURN CODE TO 4          @Y30LB02*/ 17300003
*             ANS MSG('  ICB604I -  WARNING-ONLY'||                     17350003
*                 ' THE MF PARAMETER IS VALID FOR THE'||                17400003
*                 ' LIST FORM  ')SKIP;                     /*@Y30LB02*/ 17450003
*        END;                  /*                            @Y30LB02*/ 17500003
*    IF MF(3) ¬= '' THEN       /*PLS ATTRIBUTE SPECIFIED     @Y30LB02*/ 17550003
*        GO TO ATTRLST;        /*BRCH,PROCESS ATTRIBUTE      @Y30LB02*/ 17600003
*/*                                                          @Y30LB02*/ 17650003
*   ANS('/*******************************************'||                17700003
*       '************** @Y30LB02*/')SKIP;                               17750003
*   ANS('/*    MACMEAN  MSSC SUSPEND MACRO           '||                17800003
*       '               @Y30LB02*/')SKIP;                               17850003
*   ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||                17900003
*       '               @Y30LB02*/')SKIP;                               17950003
*   ANS('/*THIS IS THE INITIALIZED LIST FORM         '||                18000003
*       '               @Y30LB02*/')SKIP;                               18050003
*   ANS('/*******************************************'||                18100003
*       '************** @Y30LB02*/')SKIP;                               18150003
*             ANS('DCL 1 '||MF(2)||' STATIC LOCAL,'||                   18200003
*             ' /*SUSPEND REQUEST BLOCK @Y30LB02*/')SKIP;               18250003
*             ANS('    2  SUSPLEN  FIXED(31)INIT('||QUOTE               18300003
*             ('08')||'X),/*LENGTH OF SUSPEND REQ BLK @Y30LB02*/')SKIP; 18350003
*             ANS('    2  SUSPOP  CHAR(1)INIT('||QUOTE('22')||          18400003
*             'X),/*SUSPEND OPCODE @Y30LB02*/')SKIP;                    18450003
*             ANS('    2  *      CHAR(1)INIT('||QUOTE('00')||           18500003
*             'X),/*RESERVED AND ZERO @Y30LB02*/')SKIP;                 18550003
*             ANS('    2  SUSPFLG BIT(16)INIT('||QUOTE                  18600003
*             ('0000000000000000')||'B),/*TWO BYTE ATTRI'||             18650003
*             'BUTE AREA @Y30LB02*/')SKIP;                              18700003
*             ANS('       3  SUPIMED BIT(1),/*SUSPEND'||                18750003
*             ' IMMEDIATE ATTRIBUTE @Y30LB02*/')SKIP;                   18800003
*             ANS('       3  SUPRCON BIT(1),/*SUSPEND'||                18850003
*             ' RECONFIGURATION ATTRIBUTE @Y30LB02*/')SKIP;             18900003
*             ANS('       3  SUPPRSW BIT(1),/*SUSPEND'||                18910003
*             ' PREPARE TO SWAP MSCS ATTRIBUTE @ZD00155*/')SKIP;        18920003
*             ANS('       3  *      BIT(13);/*RESERVED AND'||           18950003
*             ' MUST BE ZERO @ZD00155*/')SKIP;                          19000003
*             GO TO FINISH;    /*BRANCH TO END PROCESSING    @Y30LB02*/ 19050003
*/*                                                          @Y30LB02*/ 19100003
*ATTRLST:                                                               19150003
*   ANS('/*******************************************'||                19200003
*       '************** @Y30LB02*/')SKIP;                               19250003
*   ANS('/*     MACMEAN  MSSC SUSPEND MACRO          '||                19300003
*       '               @Y30LB02*/')SKIP;                               19350003
*   ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||                19400003
*       '               @Y30LB02*/')SKIP;                               19450003
*   ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||                19500003
*       '               @Y30LB02*/')SKIP;                               19550003
*   ANS('/*******************************************'||                19600003
*       '************** @Y30LB02*/')SKIP;                               19650003
*             ANS('DCL 1 '||MF(2)||' '||MF(3)||','||                    19700003
*             ' /*SUSPEND REQUEST BLOCK @Y30LB02*/')SKIP;               19750003
*             ANS('    2  SUSPLEN  FIXED(31),/*LENG'||                  19800003
*             'TH OF SUSPEND REQBLK = 8 BYTES @Y30LB02*/')SKIP;         19850003
*             ANS('    2  SUSPOP  CHAR(1),'||                           19900003
*             '/*SUSPEND OPCODE = 22 HEX @Y30LB02*/')SKIP;              19950003
*             ANS('    2  *      CHAR(1),'||                            20000003
*             '/*RESERVED AND ZERO @Y30LB02*/')SKIP;                    20050003
*             ANS('    2  SUSPFLG BIT(16),'||                           20100003
*             '/*TWO BYTE ATTRIBUTE AREA @Y30LB02*/')SKIP;              20150003
*             ANS('       3  SUPIMED BIT(1),/*SUSPEND'||                20200003
*             ' IMMEDIATE ATTRIBUTE @Y30LB02*/')SKIP;                   20250003
*             ANS('       3  SUPRCON BIT(1),/*SUSPEND'||                20300003
*             ' RECONFIGURATION ATTRIBUTE @Y30LB02*/')SKIP;             20350003
*             ANS('       3  SUPPRSW BIT(1),/*SUSPEND'||                20360003
*             ' PREPARE TO SWAP MSCS ATTRIBUTE @ZD00155*/')SKIP;        20370003
*             ANS('       3  *      BIT(13);/*RESERVED AND'||           20400003
*             ' MUST BE ZERO @ZD00155*/')SKIP;                          20450003
*             GO TO FINISH;   /*BRANCH TO END PROCESSING     @Y30LB02*/ 20500003
*/*                                                          @Y30LB02*/ 20550003
*/*      PROCESSING THE EXECUTE MACRO FORM                   @Y30LB02*/ 20600003
*/*                                                          @Y30LB02*/ 20650003
*EFORM:                                                                 20700003
*   IF MF(1) ¬= 'E' THEN      /*EXECUTE FORM?                @Y30LB02*/ 20750003
*        GO TO SFORM;         /*NO,CK FOR STANDARD?          @Y30LB02*/ 20800003
*   IF MF(2) = '' THEN        /*YES,NAME SPECIFIED?          @Y30LB02*/ 20850003
*        DO;                  /*NO,PRINT ERROR MSG           @Y30LB02*/ 20900003
*             ERSW=1;         /*SET ERROR SWITCH             @Y30LB02*/ 20950003
*             RETCODE=12;     /*SET RETURN CODE              @Y30LB02*/ 21000003
*             ANS MSG('  ICB612I - MF(2) MUST '||                       21050003
*                'CONTAIN REQ BLK NAME IF '||                           21100003
*                'EXEC MACRO FORM REQUESTED ')SKIP;        /*@Y30LB02*/ 21150003
*             GO TO CKSW;     /*BRANCH TO CK ERROR SWITCH    @Y30LB02*/ 21200003
*        END;                 /*                             @Y30LB02*/ 21250003
*/*                                                          @Y30LB02*/ 21300003
*   ELSE                       /*REQUEST TO ZERO BLOCK?      @Y30LB02*/ 21350003
*   ANS('/*******************************************'||                21400003
*       '************* @Y30LB02*/')SKIP;                                21450003
*   ANS('/*     MACMEAN  MSSC SUSPEND MACRO          '||                21500003
*       '              @Y30LB02*/')SKIP;                                21550003
*   ANS('/*VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00   '||                21600003
*       '              @Y30LB02*/')SKIP;                                21650003
*   ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '||                21700003
*       '              @Y30LB02*/')SKIP;                                21750003
*   ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '||                21800003
*       '              @Y30LB02*/')SKIP;                                21850003
*   ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'||                21900003
*       '              @Y30LB02*/')SKIP;                                21950003
*   ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '||                22000003
*       '              @Y30LB02*/')SKIP;                                22050003
*   ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '||                22100003
*       '              @Y30LB02*/')SKIP;                                22150003
*   ANS('/*******************************************'||                22200003
*       '************* @Y30LB02*/')SKIP;                                22250003
*    IF MF(3) = 'COMPLETE' THEN   /*COMPLETE SPECIFIED?      @Y30LB02*/ 22300003
*      DO;                        /*YES,ZERO BLOCK           @Y30LB02*/ 22350003
*        ANS(' '||MF(2)||'='||MF(2)||'&&'||MF(2)||';'||    /*@Y30LB02*/ 22400003
*        '/*ZERO OUT REQUEST BLOCK @Y30LB02*/')SKIP;                    22450003
*      END;                  /*                              @Y30LB02*/ 22500003
*/*                                                          @Y30LB02*/ 22550003
*        ANS('RFY(SUSPR1)RSTD;/*RESTRICT REG1 @Y30LB02*/')SKIP;         22600003
*        ANS('SUSPR1=ADDR('||MF(2)||');/*R1 POINTER TO'||               22650003
*        ' REQUEST BLOCK @Y30LB02*/')SKIP;                              22700003
*        ANS('SUSPLEN= '||QUOTE(SUPLEN)||'X;/*LENGTH '||                22750003
*        'OF SUSPEND REQUEST @Y30LB02*/')SKIP;                          22800003
*        ANS('SUSPOP= '||QUOTE(SUPOP)||'X;/*SUSPEND'||                  22850003
*        ' OPCODE @Y30LB02*/')SKIP;                                     22900003
*        GO TO COMPROC;    /*BRANCH,CK PARAMETERS            @Y30LB02*/ 22950003
*/*                                                          @Y30LB02*/ 23000003
*CKSW:                                                                  23050003
*   IF ERSW=1 THEN         /*ERROR SWITCH SET?               @Y30LB02*/ 23100003
*        GO TO FINISH;     /*BRANCH TO END PROCESSING        @Y30LB02*/ 23150003
*   ELSE                   /*CONTINUE PROCESSING             @Y30LB02*/ 23200003
*        GO TO COMPROC;    /*BRANCH,CK PARAMETERS            @Y30LB02*/ 23250003
*/*                                                          @Y30LB02*/ 23300003
*SFORM:                                                                 23350003
*   IF MF(1) ¬= '' THEN    /*STANDARD FORM?                  @Y30LB02*/ 23400003
*     DO;                  /*NO,PRINT ERROR MESSAGE          @Y30LB02*/ 23450003
*        ERSW=1;           /*SET ERROR SWITCH                @Y30LB02*/ 23500003
*        RETCODE=12;       /*SET RETURN CODE TO 12           @Y30LB02*/ 23550003
*        ANS MSG('  ICB615I - INVALID MF PARAMETER '||                  23600003
*             'SPECIFIED, MUST BE L, E, OR NULL')SKIP;     /*@Y30LB02*/ 23650003
*        GO TO CKSW2;      /*BRANCH,CHECK ERROR SWITCH       @Y30LB02*/ 23700003
*     END;                 /*                                @Y30LB02*/ 23750003
*/*                                                          @Y30LB02*/ 23800003
*   IF FLAGS = '' THEN     /*FLAGS PARAMETER SPECIFIED?      @Y30LB02*/ 23850003
*     DO;                  /*NO,PRINT ERROR MESSAGE          @Y30LB02*/ 23900003
*        ERSW=1;           /*SET ERROR SWITCH TO ONE         @Y30LB02*/ 23950003
*        RETCODE=12;       /*SET RETURN CODE TO 12           @Y30LB02*/ 24000003
*        ANS MSG('  ICB607I - FLAGS MUST BE SPECIFIED '||               24050003
*        'FOR STANDARD FORM MACRO')SKIP;                   /*@Y30LB02*/ 24100003
*     END;                 /*                                @Y30LB02*/ 24150003
*/*                                                          @Y30LB02*/ 24200003
*CKSW2:                                                                 24250003
*/*                                                          @Y30LB02*/ 24300003
*   IF ERSW = 1 THEN       /*ERROR SWITCH EQUAL ONE?         @Y30LB02*/ 24350003
*        GO TO FINISH;     /*BRANCH TO END PROCESSING        @Y30LB02*/ 24400003
*/*                                                          @Y30LB02*/ 24450003
*   IF SUSPTEST = 1 THEN  /*STD FORM REQUESTED BEFORE?       @Y30LB02*/ 24500003
*     DO;                 /*YES,DON'T PUT OUT DECLARES       @Y30LB02*/ 24550003
*   ANS('/*******************************************'||                24600003
*       '************** @Y30LB02*/')SKIP;                               24650003
*   ANS('/*     MACMEAN  MSSC SUSPEND MACRO          '||                24700003
*       '               @Y30LB02*/')SKIP;                               24750003
*   ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||                24800003
*       '               @Y30LB02*/')SKIP;                               24850003
*   ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '||                24900003
*       '               @Y30LB02*/')SKIP;                               24950003
*   ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||                25000003
*       '               @Y30LB02*/')SKIP;                               25050003
*   ANS('/*******************************************'||                25100003
*       '************** @Y30LB02*/')SKIP;                               25150003
*        ANS('RFY(SUSPR1)RSTD;/*RESTRICT REG1 @Y30LB02*/')SKIP;         25200003
*        ANS('SUSPR1=ADDR(SUSPLEN);/*R1 PTR TO BLK @Y30LB02*/')SKIP;    25250003
*        ANS('SUSPLEN= '||QUOTE(SUPLEN)||'X;/*LENGTH '||                25300003
*        'OF SUSPEND REQUEST @Y30LB02*/')SKIP;                          25350003
*        ANS('SUSPOP='||QUOTE(SUPOP)||'X;/*SUSPEND'||                   25400003
*        ' OPCODE @Y30LB02*/')SKIP;                                     25450003
*        GO TO COMPROC;       /*BRANCH,CK PARAMETERS         @Y30LB02*/ 25500003
*     END;                    /*                             @Y30LB02*/ 25550003
*/*                                                          @Y30LB02*/ 25600003
*   ELSE                      /*STD FORM 1ST TIME            @Y30LB02*/ 25650003
*     DO;                     /*PRINT DECLARES               @Y30LB02*/ 25700003
*   ANS('/*******************************************'||                25750003
*       '************** @Y30LB02*/')SKIP;                               25800003
*   ANS('/*     MACMEAN  MSSC SUSPEND MACRO          '||                25850003
*       '               @Y30LB02*/')SKIP;                               25900003
*   ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||                25950003
*       '               @Y30LB02*/')SKIP;                               26000003
*   ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||                26050003
*       '               @Y30LB02*/')SKIP;                               26100003
*   ANS('/*******************************************'||                26150003
*       '*********** @Y30LB02*/')SKIP;                                  26200003
*        ANS('RFY(SUSPR1)RSTD;/*RESTRICT REG1 @Y30LB02*/')SKIP;         26250003
*        ANS('SUSPR1=ADDR(SUSPLEN);/*R1 PTR  '||                        26300003
*        'TO BLOCK @Y30LB02*/')SKIP;                                    26350003
*        ANS('DCL 1 SUSPLST  STATIC LOCAL,'||                           26400003
*        ' /*SUSPEND REQUEST BLOCK @Y30LB02*/')SKIP;                    26450003
*        ANS('    2  SUSPLEN  FIXED(31)INIT('||QUOTE                    26500003
*        ('08')||'X),/*LENGTH OF SUSPEND REQ BLK @Y30LB02*/')SKIP;      26550003
*        ANS('    2  SUSPOP  CHAR(1)INIT('||QUOTE('22')||               26600003
*        'X),/*SUSPEND OPCODE @Y30LB02*/')SKIP;                         26650003
*        ANS('    2  *      CHAR(1)INIT('||QUOTE('00')||                26700003
*        'X),/*RESERVED AND ZERO @Y30LB02*/')SKIP;                      26750003
*        ANS('    2  SUSPFLG BIT(16)INIT('||QUOTE                       26800003
*        ('0000000000000000')||'B),/*TWO BYTE ATTRI'||                  26850003
*        'BUTE AREA @Y30LB02*/')SKIP;                                   26900003
*        ANS('       3  SUPIMED BIT(1),/*SUSPEND'||                     26950003
*        ' IMMEDIATE ATTRIBUTE @Y30LB02*/')SKIP;                        27000003
*        ANS('       3  SUPRCON BIT(1),/*SUSPEND'||                     27050003
*        ' RECONFIGURATION ATTRIBUTE @Y30LB02*/')SKIP;                  27100003
*        ANS('       3  SUPPRSW BIT(1),/*SUSPEND'||                     27110003
*        ' PREPARE TO SWAP MSCS ATTRIBUTE @ZD00155*/')SKIP;             27120003
*        ANS('       3  *      BIT(13);/*RESERVED AND'||                27150003
*        ' MUST BE ZERO @ZD00155*/')SKIP;                               27200003
*        SUSPTEST=SUSPTEST+1;  /*INCREM STD FORM CTR         @Y30LB02*/ 27250003
*        GO TO COMPROC;        /*BRANCH TO CK PARAMETERS     @Y30LB02*/ 27300003
*     END;                     /*                            @Y30LB02*/ 27350003
*/*                                                          @Y30LB02*/ 27400003
*/*********************************************************  @Y30LB02*/ 27450003
*/*      COMMON PROCESSING FOR EXECUTE AND STANDARD FORMS    @Y30LB02*/ 27500003
*/*      THE FOLLOWING CODE WILL CHECK TO DETERMINE WHAT     @Y30LB02*/ 27550003
*/*      PARAMETERS ARE SPECIFIED AND PLACE THE VALUE IN     @Y30LB02*/ 27600003
*/*      THE REQUEST BLOCK                                   @Y30LB02*/ 27650003
*/*********************************************************  @Y30LB02*/ 27700003
*COMPROC:                                                               27750003
*   IF FLAGS ¬= '' THEN   /*FLAGS SPECIFIED?                 @Y30LB02*/ 27800003
*        ANS('SUSPFLG= '||FLAGS||';/*VALUE OF FLAGS '||                 27850003
*        'PARAMETER @Y30LB02*/')SKIP;                                   27900003
*/*                                                          @Y30LB02*/ 27950003
*/********************************************************   @Y30LB02*/ 28000003
*/*      THE FOLLOWING CODE WILL INVOKE SVC 126.             @Y30LB02*/ 28050003
*/*      THE RETURN CODE IS SET AND PROCESSING ENDS.         @Y30LB02*/ 28100003
*/********************************************************   @Y30LB02*/ 28150003
*        ANS('SVC (126);/*INVOKE  SVC 126 @Y30LB02*/')SKIP;             28200003
*        ANS('RFY  SUSPR1 UNRSTD;/*UNRESTRICT REG 1 @Y30LB02*/')SKIP;   28250003
*/*                                                          @Y30LB02*/ 28300003
*FINISH:                                                                28350003
*        RETURN CODE(RETCODE);                             /*@Y30LB02*/ 28400003
*        %END;                                             /*@Y30LB02*/ 28450003
./  ADD  SSI=42090052,NAME=ICBTRACE
* %/*  START OF SPECIFICATIONS****                             @Y30LB02 00050003
.*                                                             @Y30LB02 00100003
.*01   MODULE-NAME = ICBTRACE                                  @Y30LB02 00150003
.*                                                             @Y30LB02 00200003
.*01   DESCRIPTIVE-NAME = TRACE MACRO                          @Y30LB02 00250003
.*                                                             @Y30LB02 00300003
.*01   COPYRIGHT = NONE                                        @Y30LB02 00350003
.*                                                             @Y30LB02 00400003
.*01   STATUS = OS/VS1 RELEASE 4, OS/VS2 RELEASE 3             @Y30LB02 00450003
.*                                                             @Y30LB02 00500003
.*01   FUNCTION = REQUEST THE MSC TO TRACE THE SCHEDULE        @Y30LB02 00550003
.*                QUEUES                                       @Y30LB02 00600003
.*                                                             @Y30LB02 00650003
.*01   NOTES = AS FOLLOWS:                                     @Y30LB02 00700003
.*                                                             @Y30LB02 00750003
.*02     CODE = MACRO IS BILINGUALLY CODED                     @Y30LB02 00800003
.*                                                             @Y30LB02 00850003
.*02     RESTRICTIONS = THE FOLLOWING PREFIXES SHOULD BE       @Y30LB02 00900003
.*                      AVOIDED IN THE USER'S INVOCATION:      @Y30LB02 00950003
.*                      ICB AND TRAC                           @Y30LB02 01000003
.*                                                             @Y30LB02 01050003
.*02     REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF          @Y30LB02 01100003
.*                              REGISTERS BY MACROS:           @Y30LB02 01150003
.*                              R0,R1,R14, AND R15.            @Y30LB02 01200003
.*                                                             @Y30LB02 01250003
.*01   MODULE-TYPE = MACRO                                     @Y30LB02 01300003
.*                                                             @Y30LB02 01350003
.*02     PROCESSOR = PLS2 AND ASSEMBLER                        @Y30LB02 01400003
.*                                                             @Y30LB02 01500003
.*02     ATTRIBUTES = REUSABLE                                 @Y30LB02 01550003
.*                                                             @Y30LB02 01600003
.*02     ENTRY-POINT = ICBTRACE                                @Y30LB02 01650003
.*                                                             @Y30LB02 01700003
.*                                                             @Y30LB02 01750003
.*02     LINKAGE =  SVC 126                                    @Y30LB02 01800003
.*                                                             @Y30LB02 01850003
.*01  INPUT                                                    @Y30LB02 01900003
.*                                                             @Y30LB02 01950003
.*                                                             @Y30LB02 02000003
.*   THE TRACE REQUEST IS ISSUED IF A HOST WISHES TO FOLLOW    @Y30LB02 02050003
.*   THE STATUS OF THE SCHEDULE QUEUE(CARTRIDGE MOVEMENT,      @Y30LB02 02100003
.*   STAGING/ DESTAGING) ACTIVITY.                             @Y30LB02 02150003
.*                                                             @Y30LB02 02200003
.*                                                             @Y30LB02 02250003
.* MACRO SYNTAX                                                @Y30LB02 02300003
.*                                                             @Y30LB02 02350003
.*                                                             @Y30LB02 02400003
.*   LIST FORM                                                 @Y30LB02 02450003
.*                                                             @Y30LB02 02500003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 02550003
.*                                                             @Y30LB02 02600003
.*ICBTRACE MF=L - (BAL)          MF=(L,MAP) - BAL              @Y30LB02 02650003
.*         MF(L,NAME/(R))-PLS    MF(L,NAME/(R),ATTR)-PLS       @Y30LB02 02700003
.*                                                             @Y30LB02 02750003
.*                                                             @Y30LB02 02800003
.*   STANDARD FORM                                             @Y30LB02 02850003
.*                                                             @Y30LB02 02900003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 02950003
.*                                                             @Y30LB02 03000003
.*ICBTRACE FLAGS=ADDR/(R)            NONE                      @Y30LB02 03050003
.*         TIMDAT=ADDR/(R)                                     @Y30LB02 03100003
.*                                                             @Y30LB02 03150003
.*                                                             @Y30LB02 03200003
.* EXECUTE FORM                                                @Y30LB02 03250003
.*                                                             @Y30LB02 03300003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03350003
.*                                                             @Y30LB02 03400003
.*ICBTRACE MF(E,NAME/(R))       MF(E,NAME/(R),COMPLETE)-PLS    @Y30LB02 03450003
.*                              FLAGS=ADDR/(R)                 @Y30LB02 03500003
.*                              TIMDAT=ADDR/(R)                @Y30LB02 03550003
.*                                                             @Y30LB02 03600003
.*   KEYWORD PARAMETERS:                                       @Y30LB02 03650003
.*                                                             @Y30LB02 03700003
.*   MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE         @Y30LB02 03750003
.*          MACRO FORMAT AND MAY GIVE THE ADDRESS OR           @Y30LB02 03800003
.*          ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK      @Y30LB02 03850003
.*          IS STORED.                                         @Y30LB02 03900003
.*                                                             @Y30LB02 03950003
.*          L - LIST FORM: THE EXPANSION OF THE L-FORM         @Y30LB02 04000003
.*              MACRO WILL RESULT IN A REQUEST BLOCK WITH      @Y30LB02 04050003
.*              THE ONLY NON-ZERO FIELDS BEING THE OPCODE      @Y30LB02 04100003
.*              AND LENGTH FIELDS.                             @Y30LB02 04150003
.*                                                             @Y30LB02 04200003
.*          (1) 'MAP' - IF MAP IS SPECIFIED WITH THE           @Y30LB02 04250003
.*              ASSEMBLER MACRO CALL A DSECT EQUIVALENT TO     @Y30LB02 04300003
.*              A MAPPING MACRO IS PRODUCED.                   @Y30LB02 04350003
.*                                                             @Y30LB02 04400003
.*          (2) NAME - THE MACRO INVOKER MUST SPECIFY A        @Y30LB02 04450003
.*              NAME FOR HIS STRUCTURE WHEN INVOKING THE       @Y30LB02 04500003
.*              PLS LIST FORM.                                 @Y30LB02 04550003
.*                                                             @Y30LB02 04600003
.*          (3) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS       @Y30LB02 04650003
.*              ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION    @Y30LB02 04700003
.*              IN AN UNINITIALIZED REQUEST BLOCK.  ATTRI-     @Y30LB02 04750003
.*              BUTE EXAMPLE:                                  @Y30LB02 04800003
.*                                                             @Y30LB02 04850003
.*              CHAR, FIXED, STATIC LOCAL, NONLOCAL,           @Y30LB02 04900003
.*              BASED(*), ETC.                                 @Y30LB02 04950003
.*                                                             @Y30LB02 05000003
.*       NULL - STANDARD FORM: THE EXPANSION OF THIS FORM      @Y30LB02 05050003
.*              CONSISTS OF A REQUEST BLOCK, A LINKAGE         @Y30LB02 05100003
.*              INSTRUCTION, AND, POSSIBLY, PARAMETER          @Y30LB02 05150003
.*              BINDING INSTRUCTION.                           @Y30LB02 05200003
.*                                                             @Y30LB02 05250003
.*          E - EXECUTABLE FORM: THE EXPANSION OF THIS FORM    @Y30LB02 05300003
.*              CONSISTS OF A LINKAGE INSTRUCTION AND          @Y30LB02 05350003
.*              POSSIBLY, PARAMETER BINDING INSTRUCTIONS.      @Y30LB02 05400003
.*                                                             @Y30LB02 05450003
.*              SUB-PARAMETERS                                 @Y30LB02 05500003
.*                                                             @Y30LB02 05550003
.*              (1)  AN E MUST BE SPECIFIED IN THE FIRST       @Y30LB02 05600003
.*                   SUB-PARAMETER POSITION.  THIS INDICATES   @Y30LB02 05650003
.*                   THAT THE MACRO IS IN EXECUTABLE FORM.     @Y30LB02 05700003
.*                                                             @Y30LB02 05750003
.*              (2)  A NAME OR A REGISTER MUST BE SPECIFIED    @Y30LB02 05800003
.*                   IN THE SECOND SUB-PARAMETER.              @Y30LB02 05850003
.*                                                             @Y30LB02 05900003
.*              (3)  'COMPLETE' - COMPLETE WILL CAUSE THE      @Y30LB02 05950003
.*                   MACRO TO ZERO OUT THE REQUEST BLOCK.      @Y30LB02 06000003
.*                   AFTER ZEROING THE REQUEST BLOCK THE       @Y30LB02 06050003
.*                   FUNCTION OPCODE AND LENGTH ARE PLACED     @Y30LB02 06100003
.*                   IN THE REQUEST BLOCK.                     @Y30LB02 06150003
.*                                                             @Y30LB02 06200003
.*   FLAGS - A 2 BYTE FIELD WHICH INDICATES THE FUNCTION       @Y30LB02 06250003
.*   TO BE PERFORMED.  THE FORMAT OF THE FLAGS FIELD IS AS     @Y30LB02 06300003
.*   FOLLOWS:                                                  @Y30LB02 06350003
.*                                                             @Y30LB02 06400003
.*   --------------------------------------------              @Y30LB02 06450003
.*   | X |   BITS 1-15 NOT USED - ALWAYS ZERO   |              @Y30LB02 06500003
.*   --------------------------------------------              @Y30LB02 06550003
.*                                                             @Y30LB02 06600003
.*   BIT 0 ------------'1'B     TRACE ON                       @Y30LB02 06650003
.*         ------------'0'B     TRACE OFF                      @Y30LB02 06700003
.*                                                             @Y30LB02 06750003
.*   BITS 1-15---------         |NOT USED - ZERO|              @Y30LB02 06800003
.*                                                             @Y30LB02 06850003
.*   TRACE ON:                                                 @Y30LB02 06900003
.*                                                             @Y30LB02 06950003
.*   WHEN THIS ATTRIBUTE IS SPECIFIED, THE HOST WILL PASS      @Y30LB02 07000003
.*   CURRENT TIME AND DATE TO THE TRACE HEADER RECORD.  IF     @Y30LB02 07050003
.*   THE TRACE IS ALREADY ACTIVE THIS REQUEST IS CONSIDERED    @Y30LB02 07100003
.*   SATISFIED.  IF THE TRACE IS INACTIVE, IT WILL BE ACTI-    @Y30LB02 07150003
.*   VATED ON TRACEX AND THE HOST REQUESTING THE ORDER WILL    @Y30LB02 07200003
.*   BE NOTIFIED.                                              @Y30LB02 07250003
.*                                                             @Y30LB02 07300003
.*   TRACE OFF:                                                @Y30LB02 07350003
.*                                                             @Y30LB02 07400003
.*   WHEN THIS ATTRIBUTE IS SPECIFIED, THE MSC WILL CHECK TO   @Y30LB02 07450003
.*   DETERMINE WHETHER THE TRACE IS ACTIVE.  IF THE TRACE      @Y30LB02 07500003
.*   IS NOT ACTIVE, A MESSAGE IS SENT TO THE REQUESTING        @Y30LB02 07550003
.*   HOST, INDICATING THAT THE REQUEST HAS BEEN FULFILLED.     @Y30LB02 07600003
.*   OTHERWISE, THE MSC WILL DISABLE THE TRACE AND SEND A      @Y30LB02 07650003
.*   MESSAGE INDICATING TRACE ENDED.                           @Y30LB02 07700003
.*                                                             @Y30LB02 07750003
.* TIMDAT -  TIME AND DATE:  AN EIGHT BYTE FIELD WHICH         @Y30LB02 07800003
.*           CONTAINS THE TIME OF DAY AND DATE THE TRACE       @Y30LB02 07850003
.*           FUNCTION WAS ACTIVATED OR DEACTIVATED.  THE       @Y30LB02 07900003
.*           FIRST FOUR BYTES WILL CONTAIN THE DATE IN         @Y30LB02 07950003
.*           FIXED DECIMAL AND THE NEXT FOUR BYTES WILL CON-   @Y30LB02 08000003
.*           TAIN THE TIME IN FIXED BINARY.                    @Y30LB02 08050003
.*                                                             @Y30LB02 08100003
.*01  EXIT-NORMAL = VALID INVOCATION                           @Y30LB02 08150003
.*                                                             @Y30LB02 08200003
.*02     CONDITION = RETURN CODE = 0                           @Y30LB02 08250003
.*                                                             @Y30LB02 08300003
.*02     OUTPUT = REQUESTED ORDER GENERATED FOR THE SVC        @Y30LB02 08350003
.*                                                             @Y30LB02 08400003
.*01  EXIT-ERROR = INVALID INVOCATION                          @Y30LB02 08450003
.*                                                             @Y30LB02 08500003
.*02     CONDITION = RETURN CODE = 12                          @Y30LB02 08550003
.*                                                             @Y30LB02 08600003
.*02     OUTPUT = ERROR MESSAGE AS A COMMENT AT POINT OF       @Y30LB02 08650003
.*                INVOCATION                                   @Y30LB02 08700003
.*                                                             @Y30LB02 08750003
.*01  EXTERNAL REFERENCES = NONE                               @Y30LB02 08800003
.*                                                             @Y30LB02 08850003
.*01  TABLES = NONE                                            @Y30LB02 08900003
.*                                                             @Y30LB02 08950003
.*01  MESSAGES = AS FOLLOWS:                                   @Y30LB02 09000003
.*      ICB602I:  A NAME FOR THE REQUEST BLOCK MUST BE         @Y30LB02 09050003
.*                SPECIFIED IN MF(2)                           @Y30LB02 09100003
.*      ICB604I:  WARNING-ONLY THE MF PARAMETER IS VALID FOR   @Y30LB02 09150003
.*                THE LIST FORM                                @Y30LB02 09200003
.*      ICB607I:  FLAGS MUST BE SPECIFIED FOR STANDARD         @Y30LB02 09250003
.*                FORM MACRO                                   @Y30LB02 09300003
.*      ICB612I:  MF(2) MUST CONTAIN REQ BLK NAME              @Y30LB02 09350003
.*                IF EXEC MACRO FORM REQUESTED                 @Y30LB02 09400003
.*      ICB614I:  TIMDAT MUST BE SPECIFIED FOR STANDARD        @Y30LB02 09450003
.*                FORM MACRO                                   @Y30LB02 09500003
.*      ICB615I:  INVALID MF PARAMETER SPECIFIED, MUST         @Y30LB02 09550003
.*                BE L, E, OR NULL                             @Y30LB02 09600003
.*                                                             @Y30LB02 09650003
.*01  CONTROL-BLOCKS = NONE                                    @Y30LB02 09700003
.*                                                             @Y30LB02 09750003
.*01  INNER MACROS = NONE                                      @Y30LB02 09800003
.*                                                             @Y30LB02 09850003
.*01  SYSTEM MACRO = IHBINNRA                                  @Y30LB02 09900003
.*                                                             @Y30LB02 09950003
.*01  CHANGE-ACTIVITY = S/D X04AC02 AND Y30LB02                @Y30LB02 10000003
.*                                                             @Y30LB02 10050003
.**** END OF SPECIFICATIONS ***                                @Y30LB02 10100003
         MACRO                                                 @Y30LB02 10150003
&SYMBOL  ICBTRACE &MF=,&FLAGS=,&TIMDAT=                        @Y30LB02 10200003
         LCLB  &ERSW              ERROR SWITCH                 @Y30LB02 10250003
         LCLC  &TRACE             TRACE MACRO INSTR INDX       @Y30LB02 10300003
&TRACE   SETC 'T'.'&SYSNDX'       ASSIGN CHARACTER VALUE       @Y30LB02 10350003
.*                                                             @Y30LB02 10400003
.*       DETERMINATION OF DESIRED MACRO FORM                   @Y30LB02 10450003
.*                                                             @Y30LB02 10500003
         AIF  ('&MF(1)' NE 'L').EFORM       LIST FORM?         @Y30LB02 10550003
         AIF  ('&FLAGS' EQ '' AND '&TIMDAT' EQ '').LISTOK      @Y30LB02 10600003
.WARN    MNOTE 4,'  ICB604I - WARNING-ONLY THE MF PARAMETER '  @Y30LB02 10650003
         MNOTE 4,'  IS VALID FOR THE LIST FORM '               @Y30LB02 10700003
.*                                                             @Y30LB02 10750003
.LISTOK  ANOP                                                  @Y30LB02 10800003
         AIF   ('&MF(2)' EQ 'MAP').LISTDS   DSECT REQUESTED?   @Y30LB02 10850003
*  MACMEAN  MSSC TRACE MACRO--INITIALIZED LIST FORM            @Y30LB02 10900003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 10950003
&SYMBOL  DS   0F                                               @Y30LB02 11000003
TRACLEN  DC   F'16'               LEN OF TRACE REQUEST BLK     @Y30LB02 11050003
TRACOPC  DC   XL1'24'             TRACE  FUNCTION OPCODE       @Y30LB02 11100003
TRAC001  DC   XL1'00'             1-BYTE RESERVED AREA         @Y30LB02 11150003
TRACFLG  DC   XL2'0000'           2-BYTE FLAGS AREA            @Y30LB02 11200003
TRACTIM  DC   XL8'0000'           8-BYTE TIME/DATE AREA        @Y30LB02 11250003
         AGO  .FINISH                                          @Y30LB02 11300003
.*                                                             @Y30LB02 11350003
.LISTDS  ANOP                                                  @Y30LB02 11400003
*  MACMEAN  MSSC TRACE MACRO--UNINITIALIZED LIST FORM          @Y30LB02 11450003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 11500003
ICBTRACE DSECT                                                 @Y30LB02 11550003
TRACLEN  DS   F                   LEN OF REQ BLK 10 HEX        @Y30LB02 11600003
TRACOPC  DS   XL1                 TRACE OPCODE 24 HEX          @Y30LB02 11650003
TRAC001  DS   XL1                 1-BYTE RESERVED AREA         @Y30LB02 11700003
TRACFLG  DS   XL2                 2-BYTE FLAGS AREA            @Y30LB02 11750003
TRACTIM  DS   XL8                 8-BYTE TIME/DATE AREA        @Y30LB02 11800003
         AGO  .FINISH                                          @Y30LB02 11850003
.*       THE FOLLOWING PROCESSING IS ACCOMPLISHED FOR THE      @Y30LB02 11900003
.*       EXECUTABLE MACRO FORM                                 @Y30LB02 11950003
.*                                                             @Y30LB02 12000003
.EFORM   AIF  ('&MF(1)' NE 'E').SFORM       EXECUTE FORM?      @Y30LB02 12050003
         AIF  ('&MF(2)' EQ '').EXFAIL       MF(2) NULL?        @Y30LB02 12100003
*  MACMEAN  MSSC TRACE MACRO--EXECUTE FORM                     @Y30LB02 12150003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 12200003
&SYMBOL  IHBINNRA &MF(2)           LD ADDR OF REQUEST BLK      @Y30LB02 12250003
.*                                 USING IHBINNRA MACRO        @Y30LB02 12300003
         LA    0,16                LENGTH OF REQ BLOCK         @Y30LB02 12350003
         ST    0,0(1)              STORE LENGTH IN BLK         @Y30LB02 12400003
         MVI   4(1),X'24'          STORE OPCODE                @Y30LB02 12450003
         AGO  .CKSW1               BR TO CK ERROR SWITCH       @Y30LB02 12500003
.*                                                             @Y30LB02 12550003
.EXFAIL  ANOP                                                  @Y30LB02 12600003
         MNOTE 12,'  ICB612I - MF(2) MUST CONTAIN REQ BLK '    @Y30LB02 12650003
         MNOTE 12,'  NAME IF EXEC MACRO FORM REQUESTED'        @Y30LB02 12700003
&ERSW    SETB 1                   SET ERROR SWITCH TO 1        @Y30LB02 12750003
.*                                                             @Y30LB02 12800003
.CKSW1   AIF  (&ERSW).FINISH      IF ERROR-END PROCESSING      @Y30LB02 12850003
         AGO  .COMMON                                          @Y30LB02 12900003
.*                                                             @Y30LB02 12950003
.*       PROCESSING OF THE STANDARD FORM MACRO                 @Y30LB02 13000003
.*                                                             @Y30LB02 13050003
.SFORM   AIF  ('&MF(1)' NE '').BADFORM      STANDARD FORM?     @Y30LB02 13100003
         AIF  ('&FLAGS' NE '').CKTIME       FLAGS SPECIFIED?   @Y30LB02 13150003
&ERSW    SETB 1                   SET ERROR SWITCH TO 1        @Y30LB02 13200003
         MNOTE 12,'  ICB607I - FLAGS MUST BE SPECIFIED'        @Y30LB02 13250003
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02 13300003
         AGO  .CKSW2                                           @Y30LB02 13350003
.CKTIME  AIF  ('&TIMDAT' NE '').CKSW2       TIME SPECIFIED?    @Y30LB02 13400003
&ERSW    SETB 1                   SET ERROR SWITCH TO 1        @Y30LB02 13450003
         MNOTE 12,'  ICB614I - TIMDAT MUST BE SPECIFIED'       @Y30LB02 13500003
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02 13550003
         AGO  .CKSW2                                           @Y30LB02 13600003
.*                                                             @Y30LB02 13650003
.BADFORM ANOP                                                  @Y30LB02 13700003
&ERSW    SETB 1                   SET ERROR SWITCH TO 1        @Y30LB02 13750003
         MNOTE 12,'  ICB615I - INVALID MF PARAMETER '          @Y30LB02 13800003
         MNOTE 12,'  SPECIFIED, MUST BE, L,E, OR NULL'         @Y30LB02 13850003
.*                                                             @Y30LB02 13900003
.*       THE FOLLOWING CODE CHECKS TO DETERMINE IF THE ERROR   @Y30LB02 13950003
.*       SWITCH IS ON.  IF YES, PROCESSING IS TERMINATED, OTHER@Y30LB02 14000003
.*       WISE STANDARD FORM MACRO PROCESSING WILL BE CON-      @Y30LB02 14050003
.*       TINUED                                                @Y30LB02 14100003
.*                                                             @Y30LB02 14150003
.CKSW2   AIF  (&ERSW).FINISH      IF YES-END PROCESSING        @Y30LB02 14200003
*  MACMEAN  MSSC TRACE MACRO--STANDARD FORM                    @Y30LB02 14250003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 14300003
         CNOP 0,4                                              @Y30LB02 14350003
&SYMBOL  BAL  1,&TRACE            BRANCH AROUND REQ BLK        @Y30LB02 14400003
TRACLEN  DC   A(&TRACE-*)         LENGTH OF REQUEST BLOCK      @Y30LB02 14450003
TRACOPC  DC   XL1'24'             TRACE FUNCTION OPCODE        @Y30LB02 14500003
TRAC001  DC   XL1'00'             1-BYTE RESERVED AREA         @Y30LB02 14550003
TRACFLG  DC   XL2'0000'           2-BYTE FLAGS AREA            @Y30LB02 14600003
TRACTIM  DC   XL8'0000'           8-BYTE TIME/DATE AREA        @Y30LB02 14650003
&TRACE   EQU  *                                                @Y30LB02 14700003
.*                                                             @Y30LB02 14750003
.*       THE FOLLOWING CODE CHECKS FOR VALID PARAMETERS IF     @Y30LB02 14800003
.*       STANDARD FOR EXECUTE FORM MACRO IS SPECIFIED.         @Y30LB02 14850003
.*       IF PARAMETERS ARE SPECIFIED, THEY WILL BE STORED      @Y30LB02 14900003
.*       IN THE REQUEST BLOCK.                                 @Y30LB02 14950003
.*                                                             @Y30LB02 15000003
.COMMON  AIF  ('&FLAGS' EQ '').TIMDAT       FLAGS SPECIFIED?   @Y30LB02 15050003
         AIF  ('&FLAGS'(1,1) EQ '(').FLREG  FLAGS IN REG-FORM? @Y30LB02 15100003
         MVC  6(2,1),&FLAGS        PUT FLAGS IN REQ BLK        @Y30LB02 15150003
         AGO  .TIMDAT             BRANCH TO CK TIME/DATE       @Y30LB02 15200003
.*                                                             @Y30LB02 15250003
.FLREG   ANOP                                                  @Y30LB02 15300003
         MVC  6(2,1),0(&FLAGS(1))  REG-FORM FLAGS PARM         @Y30LB02 15350003
.*                                                             @Y30LB02 15400003
.TIMDAT  AIF  ('&TIMDAT' EQ '').INVOKE    TIMDAT SPECIFIED?    @Y30LB02 15450003
         AIF  ('&TIMDAT'(1,1) EQ '(').TREG  REGISTER FORM?     @Y30LB02 15500003
         MVC  8(8,1),&TIMDAT       ADDRFORM-PUT TIMDAT PARM    @Y30LB02 15550003
         AGO  .INVOKE                                          @Y30LB02 15600003
.*                                                             @Y30LB02 15650003
.TREG    ANOP                                                  @Y30LB02 15700003
         MVC  8(8,1),0(&TIMDAT(1)) REGFORM-PUT TIMDAT PARM     @Y30LB02 15750003
.INVOKE  ANOP                                                  @Y30LB02 15800003
         SVC  126                  INVOKE THE SVC              @Y30LB02 15850003
.FINISH  MEND                                                  @Y30LB02 15900003
**/                                                                     15950003
*/*                                                          @Y30LB02*/ 16000003
*   ICBTRACE: MACRO KEYS(MF,FLAGS,TIMDAT);                 /*@Y30LB02*/ 16050003
*/*                                                          @Y30LB02*/ 16100003
*/*                     EXTERNAL DECLARES                    @Y30LB02*/ 16150003
*/*********************************************************  @Y30LB02*/ 16200003
*/*      TRACTEST IS USED TO DETERMINE WHETHER THE STANDARD  @Y30LB02*/ 16250003
*/*      FORM MACRO HAS BEEN INVOKED MORE THAN ONCE BY THE   @Y30LB02*/ 16300003
*/*      SAME CALLER.                                        @Y30LB02*/ 16350003
*/*********************************************************  @Y30LB02*/ 16400003
*/*      TRTESTR1 WILL BE USED TO DETERMINE IF IT IS NECES-  @Y30LB02*/ 16450003
*/*      SARY TO DECLARE R1 OR WHETHER IT IS ALREADY DCLD    @Y30LB02*/ 16500003
*/*********************************************************  @Y30LB02*/ 16550003
*/*                                                          @Y30LB02*/ 16600003
*   DCL  TRTESTR1  FIXED  EXT;    /*REG1 DECLARE COUNTER     @Y30LB02*/ 16650003
*   DCL  TRACTEST  FIXED  EXT;    /*STANDARD INVOC COUNTER   @Y30LB02*/ 16700003
*/*                                                          @Y30LB02*/ 16750003
*/*      INTERNAL DECLARES                                   @Y30LB02*/ 16800003
*   DCL  TRACOP   CHAR;      /*DEFINE TRACE OPCODE           @Y30LB02*/ 16850003
*   DCL  TRLEN  CHAR;        /*DECLARE LENGTH OF ORDER       @Y30LB02*/ 16900003
*   DCL  ERSW     FIXED;     /*DECLARE ERROR COND SWITCH     @Y30LB02*/ 16950003
*   DCL  RETCODE  FIXED;     /*DECLARE RETURN CODE AREA      @Y30LB02*/ 17000003
*   DCL  CTR      FIXED;     /*DECLARE CTR FOR LIST FORM     @Y30LB02*/ 17050003
*        ERSW=0;             /*INITIALIZE ERROR SWITCH       @Y30LB02*/ 17100003
*        RETCODE=0;          /*INITIALIZE RETURN CODE        @Y30LB02*/ 17150003
*        TRLEN='10';         /*INITIALIZE LENGTH FLD         @Y30LB02*/ 17200003
*        TRACOP='24';        /*TRACE OPCODE                  @Y30LB02*/ 17250003
*        CTR=0;              /*INITIALIZE PARM CTR           @Y30LB02*/ 17300003
*/********************************************************   @Y30LB02*/ 17350003
*/*      CHECK FOR VALID MACRO FORM--E INDICATES EXECUTE     @Y30LB02*/ 17400003
*/*      FORM, L INDICATES LIST FORM AND IF THE MF PARA-     @Y30LB02*/ 17450003
*/*      METER IS NULL THE STANDARD FORM MACRO IS INVOKED    @Y30LB02*/ 17500003
*/********************************************************   @Y30LB02*/ 17550003
*        IF TRTESTR1=0 THEN /*REG 1 DECLARED?                @Y30LB02*/ 17600003
*             DO;           /*NO,DECLARE IT                  @Y30LB02*/ 17650003
*                  ANS('DCL TRACR1 REG(1) PTR ;/*PTR'||                 17700003
*                  ' TO REQUEST BLOCK @Y30LB02*/')SKIP;                 17750003
*                  TRTESTR1=TRTESTR1+1;  /*INCREM COUNTER    @Y30LB02*/ 17800003
*             END;               /*                          @Y30LB02*/ 17850003
*   IF MF(1) ¬= 'L' THEN         /*LIST FORM REQUEST?        @Y30LB02*/ 17900003
*        GO TO EFORM;            /*NO,CK FOR EXECUTE         @Y30LB02*/ 17950003
*   IF MF(2) = '' THEN           /*LIST NAME SPECIFIED?      @Y30LB02*/ 18000003
*        DO;                     /*NO,PRINT ERROR MSG        @Y30LB02*/ 18050003
*         ERSW=1;                /*SET ERROR SWITCH          @Y30LB02*/ 18100003
*         RETCODE=12;            /*SET RETURN CODE           @Y30LB02*/ 18150003
*         ANS MSG('  ICB602I -  A NAME FOR THE '||                      18200003
*         'REQUEST BLOCK MUST BE SPECIFIED IN MF(2)')SKIP; /*@Y30LB02*/ 18250003
*         GO TO FINISH;       /*BRANCH TO END PROCESSING     @Y30LB02*/ 18300003
*        END;                 /*                             @Y30LB02*/ 18350003
*/*                                                          @Y30LB02*/ 18400003
*   IF FLAGS ¬= '' THEN      /*IS THE FLAGS AREA NULL        @Y30LB02*/ 18450003
*        CTR=CTR+1;          /*INCREMENT PARAMETER COUNTER   @Y30LB02*/ 18500003
*   IF TIMDAT ¬= '' THEN     /*IS THE TIMDAT AREA NULL       @Y30LB02*/ 18550003
*        CTR=CTR+1;          /*INCREMENT PARAMETER COUNTER   @Y30LB02*/ 18600003
*   IF CTR > 0 THEN          /*INCREMENT CTR > ZERO?         @Y30LB02*/ 18650003
*        DO;                 /*PRINT WARNING MESSAGE         @Y30LB02*/ 18700003
*             RETCODE=4;     /*SET RETURN CODE               @Y30LB02*/ 18750003
*             ANS MSG('  ICB604I - WARNING-ONLY'||                      18800003
*                 ' THE MF PARAMETER IS VALID FOR'||                    18850003
*                 ' LIST FORM ')SKIP;                      /*@Y30LB02*/ 18900003
*        END;                /*                              @Y30LB02*/ 18950003
*    IF MF(3) ¬= '' THEN     /*PLS ATTRIBUTE SPECIFIED?      @Y30LB02*/ 19000003
*        GO TO ATTRLST;      /*BRANCH,PROCESS IT             @Y30LB02*/ 19050003
*/*                                                          @Y30LB02*/ 19100003
*             ANS('/*******************************************'||      19150003
*                 '************** @Y30LB02*/')SKIP;                     19200003
*             ANS('/*    MACMEAN  MSSC TRACE MACRO             '||      19250003
*                 '               @Y30LB02*/')SKIP;                     19300003
*             ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||      19350003
*                 '               @Y30LB02*/')SKIP;                     19400003
*             ANS('/*THIS IS THE INITIALIZED LIST FORM         '||      19450003
*                 '               @Y30LB02*/')SKIP;                     19500003
*             ANS('/*******************************************'||      19550003
*                 '************** @Y30LB02*/')SKIP;                     19600003
*             ANS('DCL 1 '||MF(2)||'  STATIC LOCAL,'||                  19650003
*             ' /*TRACE REQUEST BLOCK @Y30LB02*/')SKIP;                 19700003
*             ANS('    2  TRACLEN  FIXED(31)INIT('||QUOTE               19750003
*             ('10')||'X),/*LENGTH OF TRACE REQ BLK @Y30LB02*/')SKIP;   19800003
*             ANS('    2  TRACOPC  CHAR(1)INIT('||QUOTE('24')||         19850003
*             'X),/*TRACE OPCODE @Y30LB02*/')SKIP;                      19900003
*             ANS('    2  *      CHAR(1)INIT('||QUOTE('00')||           19950003
*             'X),/*RESERVED AND ZERO @Y30LB02*/')SKIP;                 20000003
*             ANS('    2  TRACFLG BIT(16)INIT('||QUOTE                  20050003
*             ('0000000000000000')||'B),/*TWO BYTE ATTRI'||             20100003
*             'BUTE AREA @Y30LB02*/')SKIP;                              20150003
*             ANS('       3  TRACEON BIT(1),/*TRACEON/OFF'||            20200003
*             ' ATTRIBUTE @Y30LB02*/')SKIP;                             20250003
*             ANS('       3  *      BIT(15),/*RESERVED AND'||           20300003
*             ' MUST BE ZERO @Y30LB02*/')SKIP;                          20350003
*             ANS('    2  TRACTIM  CHAR(8) INIT('||QUOTE                20400003
*             ('0000000000000000')||'X);/*TIME/DATE @Y30LB02*/')SKIP;   20450003
*             GO TO FINISH;    /*BRANCH TO END PROCESSING    @Y30LB02*/ 20500003
*/*                                                          @Y30LB02*/ 20550003
*ATTRLST:                                                               20600003
*             ANS('/*******************************************'||      20650003
*                 '************** @Y30LB02*/')SKIP;                     20700003
*             ANS('/*     MACMEAN  MSSC TRACE MACRO            '||      20750003
*                 '               @Y30LB02*/')SKIP;                     20800003
*             ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||      20850003
*                 '               @Y30LB02*/')SKIP;                     20900003
*             ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||      20950003
*                 '               @Y30LB02*/')SKIP;                     21000003
*             ANS('/*******************************************'||      21050003
*                 '************** @Y30LB02*/')SKIP;                     21100003
*             ANS('DCL 1 '||MF(2)||' '||MF(3)||','||                    21150003
*             ' /*TRACE REQUEST BLOCK @Y30LB02*/')SKIP;                 21200003
*             ANS('    2  TRACLEN  FIXED(31),/*LENG'||                  21250003
*             'TH OF TRACE REQ BLK = 10 HEX @Y30LB02*/')SKIP;           21300003
*             ANS('    2  TRACOPC  CHAR(1),'||                          21350003
*             '/*TRACE OPCODE=24 HEX @Y30LB02*/')SKIP;                  21400003
*             ANS('    2  * CHAR(1) ,/*RESERVED  @Y30LB02*/')SKIP;      21450003
*             ANS('    2  TRACFLG BIT(16),'||                           21500003
*             '/*TWO BYTE ATTRIBUTE AREA @Y30LB02*/')SKIP;              21550003
*             ANS('       3  TRACEON BIT(1),/*TRACEON/OFF'||            21600003
*             ' ATTRIBUTE @Y30LB02*/')SKIP;                             21650003
*             ANS('       3  *      BIT(15),/*RESERVED AND'||           21700003
*             ' MUST BE ZERO @Y30LB02*/')SKIP;                          21750003
*             ANS('    2  TRACTIM  CHAR(8);'||                          21800003
*             '/*TIME AND DATE @Y30LB02*/')SKIP;                        21850003
*             GO TO FINISH;    /*BRANCH TO END               @Y30LB02*/ 21900003
*/*                                                          @Y30LB02*/ 21950003
*/*      PROCESSING THE EXECUTE MACRO FORM                   @Y30LB02*/ 22000003
*/*                                                          @Y30LB02*/ 22050003
*EFORM:                                                                 22100003
*   IF MF(1) ¬= 'E' THEN      /*EXECUTE FORM SPECIFIED?      @Y30LB02*/ 22150003
*        GO TO SFORM;         /*NO,BRANCH,CK FOR STANDARD    @Y30LB02*/ 22200003
*   IF MF(2) = '' THEN        /*LIST NAME SPECIFIED?         @Y30LB02*/ 22250003
*        DO;                  /*NO,PRINNT ERROR MSG          @Y30LB02*/ 22300003
*             ERSW=1;         /*SET ERROR SWITCH             @Y30LB02*/ 22350003
*             RETCODE=12;     /*SET RETURN CODE              @Y30LB02*/ 22400003
*             ANS MSG('  ICB612I - MF(2) MUST '||                       22450003
*                'CONTAIN REQ BLK NAME IF '||                           22500003
*                'EXEC MACRO FORM REQUESTED ')SKIP(3);     /*@Y30LB02*/ 22550003
*             GO TO CKSW;     /*BRANCH TO CK SWITCH          @Y30LB02*/ 22600003
*        END;                 /*                             @Y30LB02*/ 22650003
*/*                                                          @Y30LB02*/ 22700003
*   ELSE                      /*                             @Y30LB02*/ 22750003
*        ANS('/*******************************************'||           22800003
*            '************* @Y30LB02*/')SKIP;                           22850003
*        ANS('/*     MACMEAN  MSSC TRACE MACRO            '||           22900003
*            '              @Y30LB02*/')SKIP;                           22950003
*        ANS('/*VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00   '||           23000003
*            '              @Y30LB02*/')SKIP;                           23050003
*        ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '||           23100003
*            '              @Y30LB02*/')SKIP;                           23150003
*        ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '||           23200003
*            '              @Y30LB02*/')SKIP;                           23250003
*        ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'||           23300003
*            '              @Y30LB02*/')SKIP;                           23350003
*        ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '||           23400003
*            '              @Y30LB02*/')SKIP;                           23450003
*        ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '||           23500003
*            '              @Y30LB02*/')SKIP;                           23550003
*        ANS('/*******************************************'||           23600003
*            '************* @Y30LB02*/')SKIP;                           23650003
*    IF MF(3) = 'COMPLETE' THEN  /*COMPLETE SPECIFIED?       @Y30LB02*/ 23700003
*      DO;                       /*ZERO REQUSET BLOCK        @Y30LB02*/ 23750003
*        ANS(' '||MF(2)||'='||MF(2)||'&&'||MF(2)||';'||    /*@Y30LB02*/ 23800003
*        '/*ZERO OUT THE REQUEST BLOCK @Y30LB02*/')SKIP;                23850003
*      END;                      /*                          @Y30LB02*/ 23900003
*/*                                                          @Y30LB02*/ 23950003
*        ANS('RFY(TRACR1)RSTD;/*RESTRICT REG1 @Y30LB02*/')SKIP;         24000003
*        ANS('TRACR1=ADDR('||MF(2)||');/*R1 POINTER TO'||               24050003
*        ' REQUEST BLOCK @Y30LB02*/')SKIP;                              24100003
*        ANS('TRACLEN= '||QUOTE(TRLEN)||'X;/*LENGTH '||                 24150003
*        'OF TRACE REQUEST @Y30LB02*/')SKIP;                            24200003
*        ANS('TRACOPC= '||QUOTE(TRACOP)||'X;/*TRACE'||                  24250003
*        ' OPCODE @Y30LB02*/')SKIP;                                     24300003
*/*                                                          @Y30LB02*/ 24350003
*CKSW:                                                                  24400003
*   IF ERSW=1 THEN            /*ERROR SWITCH SET?            @Y30LB02*/ 24450003
*        GO TO FINISH;        /*YES,END PROCESSING           @Y30LB02*/ 24500003
*   ELSE                      /*NO,CONTINUE PROCESSING       @Y30LB02*/ 24550003
*        GO TO COMPROC;       /*BRCH,CHECK PARAMETERS        @Y30LB02*/ 24600003
*/*                                                          @Y30LB02*/ 24650003
*SFORM:                                                                 24700003
*   IF MF(1) ¬= '' THEN       /*STANDARD FORM SPECIFIED?     @Y30LB02*/ 24750003
*     DO;                     /*NO,PRINT ERROR MESSAGE       @Y30LB02*/ 24800003
*        ERSW=1;              /*SET ERROR SWITCH             @Y30LB02*/ 24850003
*        RETCODE=12;          /*SET ERROR RETURN CODE        @Y30LB02*/ 24900003
*        ANS MSG('  ICB615I - INVALID MF PARAMETER '||                  24950003
*             'SPECIFIED, MUST BE L, E, OR NULL')SKIP;     /*@Y30LB02*/ 25000003
*        GO TO CKSW2;         /*BRANCH TO CK SWITCH          @Y30LB02*/ 25050003
*     END;                    /*                             @Y30LB02*/ 25100003
*/*                                                          @Y30LB02*/ 25150003
*   IF FLAGS = '' THEN        /*FLAGS PARAMETERS SPECIFIED?  @Y30LB02*/ 25200003
*     DO;                     /*NO,PRINT ERROR MESSAGE       @Y30LB02*/ 25250003
*        ERSW=1;              /*SET ERROR SWITCH             @Y30LB02*/ 25300003
*        RETCODE=12;          /*SET RETURN CODE              @Y30LB02*/ 25350003
*        ANS MSG('  ICB607I - FLAGS MUST BE SPECIFIED '||               25400003
*        'FOR STANDARD FORM MACRO')SKIP;                   /*@Y30LB02*/ 25450003
*        GO TO CKSW2;         /*BRANCH                       @Y30LB02*/ 25500003
*     END;                    /*                             @Y30LB02*/ 25550003
*   IF TIMDAT = '' THEN       /*TIME AND DATE SPECIFIED      @Y30LB02*/ 25600003
*     DO;                     /*PRINT ERROR MESSAGE          @Y30LB02*/ 25650003
*        ERSW=1;              /*SET ERROR SWITCH             @Y30LB02*/ 25700003
*        RETCODE=12;          /*SET RETURN CODE              @Y30LB02*/ 25750003
*        ANS MSG('  ICB614I - TIMDAT MUST BE SPECIFIED'||               25800003
*        ' FOR STANDARD FORM MACRO')SKIP;                  /*@Y30LB02*/ 25850003
*     END;                   /*                              @Y30LB02*/ 25900003
*/*                                                          @Y30LB02*/ 25950003
*CKSW2:                                                                 26000003
*/*                                                          @Y30LB02*/ 26050003
*   IF ERSW = 1 THEN          /*ERROR SWITCH SET?            @Y30LB02*/ 26100003
*        GO TO FINISH;        /*BRANCH TO END                @Y30LB02*/ 26150003
*/*                                                          @Y30LB02*/ 26200003
*   IF TRACTEST = 1 THEN      /*STD FORM INVOKED BEFORE?     @Y30LB02*/ 26250003
*     DO;                     /*YES,DON'T PRINT DECLARES     @Y30LB02*/ 26300003
*        ANS('/*******************************************'||           26350003
*            '************** @Y30LB02*/')SKIP;                          26400003
*        ANS('/*     MACMEAN  MSSC TRACE MACRO            '||           26450003
*            '               @Y30LB02*/')SKIP;                          26500003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           26550003
*            '               @Y30LB02*/')SKIP;                          26600003
*        ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '||           26650003
*            '               @Y30LB02*/')SKIP;                          26700003
*        ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||           26750003
*            '               @Y30LB02*/')SKIP;                          26800003
*        ANS('/*******************************************'||           26850003
*            '************** @Y30LB02*/')SKIP;                          26900003
*        ANS('RFY(TRACR1)RSTD;/*RESTRICT REG1 @Y30LB02*/')SKIP;         26950003
*        ANS('TRACR1=ADDR(TRACLEN);/*R1 PTR TO BLK @Y30LB02*/')SKIP;    27000003
*        ANS('TRACLEN= '||QUOTE(TRLEN)||'X;/*LENGTH '||                 27050003
*        'OF TRACE REQUEST @Y30LB02*/')SKIP;                            27100003
*        ANS('TRACOPC='||QUOTE(TRACOP)||'X;/*TRACE'||                   27150003
*        ' OPCODE @Y30LB02*/')SKIP;                                     27200003
*        GO TO COMPROC;       /*BRANCH TO CK PARAMETERS      @Y30LB02*/ 27250003
*     END;                    /*                             @Y30LB02*/ 27300003
*/*                                                          @Y30LB02*/ 27350003
*   ELSE                      /*1ST INVOC OF STD FORM        @Y30LB02*/ 27400003
*     DO;                     /*PUT OUT THE DECLARES         @Y30LB02*/ 27450003
*        ANS('/*******************************************'||           27500003
*            '************** @Y30LB02*/')SKIP;                          27550003
*        ANS('/*    MACMEAN  MSSC TRACE MACRO             '||           27600003
*            '               @Y30LB02*/')SKIP;                          27650003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           27700003
*            '               @Y30LB02*/')SKIP;                          27750003
*        ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||           27800003
*            '               @Y30LB02*/')SKIP;                          27850003
*        ANS('/*******************************************'||           27900003
*            '************** @Y30LB02*/')SKIP;                          27950003
*        ANS('RFY(TRACR1)RSTD;/*RESTRICT REG1 @Y30LB02*/')SKIP;         28000003
*        ANS('TRACR1=ADDR(TRACLEN);/*R1 PTR  '||                        28050003
*        'TO LIST @Y30LB02*/')SKIP;                                     28100003
*        ANS('DCL 1 TRACLST  STATIC LOCAL,'||                           28150003
*        ' /*TRACE REQUEST BLOCK @Y30LB02*/')SKIP;                      28200003
*        ANS('    2  TRACLEN  FIXED(31)INIT('||QUOTE('10')||            28250003
*        'X),/*LENGTH OF TRACE REQ BLK @Y30LB02*/')SKIP;                28300003
*        ANS('    2  TRACOPC  CHAR(1)INIT('||QUOTE('24')||              28350003
*        'X),/*TRACE OPCODE @Y30LB02*/')SKIP;                           28400003
*        ANS('    2  *      CHAR(1)INIT('||QUOTE('00')||                28450003
*        'X),/*RESERVED AND ZERO @Y30LB02*/')SKIP;                      28500003
*        ANS('    2  TRACFLG BIT(16)INIT('||QUOTE                       28550003
*        ('0000000000000000')||'B),/*TWO BYTE ATTRI'||                  28600003
*        'BUTE AREA @Y30LB02*/')SKIP;                                   28650003
*        ANS('       3  TRACEON BIT(1),/*TRACEON/OFF'||                 28700003
*        ' ATTRIBUTE @Y30LB02*/')SKIP;                                  28750003
*        ANS('       3  *      BIT(15),/*RESERVED AND'||                28800003
*        ' MUST BE ZERO @Y30LB02*/')SKIP;                               28850003
*        ANS('    2  TRACTIM  CHAR(8) INIT('||QUOTE                     28900003
*        ('0000000000000000')||'X);/*TIME/DATE @Y30LB02*/')SKIP;        28950003
*        TRACTEST=TRACTEST+1; /*INCREMENT STD FORM CTR       @Y30LB02*/ 29000003
*        GO TO COMPROC;       /*BRCH TO CK PARAMETERS        @Y30LB02*/ 29050003
*     END;                    /*                             @Y30LB02*/ 29100003
*/*                                                          @Y30LB02*/ 29150003
*/*********************************************************  @Y30LB02*/ 29200003
*/*      COMMON PROCESSING FOR EXECUTE AND STANDARD FORMS    @Y30LB02*/ 29250003
*/*      THE FOLLOWING CODE WILL CHECK TO DETERMINE WHAT     @Y30LB02*/ 29300003
*/*      PARAMETERS ARE SPECIFIED AND PLACE THE VALUE IN     @Y30LB02*/ 29350003
*/*      THE REQUEST BLOCK                                   @Y30LB02*/ 29400003
*/*********************************************************  @Y30LB02*/ 29450003
*COMPROC:                                                               29500003
*   IF FLAGS ¬= '' THEN      /*FLAGS SPECIFIED?              @Y30LB02*/ 29550003
*        ANS('TRACFLG= '||FLAGS||';/*VALUE OF FLAGS '||                 29600003
*        'PARAMETER @Y30LB02*/')SKIP;                                   29650003
*/*                                                          @Y30LB02*/ 29700003
*   IF TIMDAT ¬= '' THEN     /*TIME AND DATE SPECIFIED?      @Y30LB02*/ 29750003
*        ANS('TRACTIM= '||TIMDAT||';/*TIME/DATE PARM @Y30LB02*/')SKIP;  29800003
*/*                                                          @Y30LB02*/ 29850003
*/********************************************************   @Y30LB02*/ 29900003
*/*      THE FOLLOWING CODE WILL INVOKE SVC 126.             @Y30LB02*/ 29950003
*/*      THE RETURN CODE IS SET AND PROCESSING IS ENDED      @Y30LB02*/ 30000003
*/********************************************************   @Y30LB02*/ 30050003
*/********************************************************   @Y30LB02*/ 30100003
*        ANS('SVC  (126);/*INVOKE SVC 126 @Y30LB02*/')SKIP;             30150003
*        ANS('RFY  TRACR1 UNRSTD;/*UNRESTRICT REG 1 @Y30LB02*/')SKIP;   30200003
*/*                                                          @Y30LB02*/ 30250003
*FINISH:                                                                30300003
*        RETURN CODE(RETCODE);                             /*@Y30LB02*/ 30350003
*        %END;                                             /*@Y30LB02*/ 30400003
./  ADD  SSI=43100388,NAME=ICBTUNE
* %/* START OF SPECIFICATIONS****                              @Y30LB02 00050003
.*                                                             @Y30LB02 00100003
.*01   MODULE-NAME = ICBTUNE                                   @Y30LB02 00150003
.*                                                             @Y30LB02 00200003
.*01   DESCRIPTIVE-NAME = TUNING MACRO                         @Y30LB02 00250003
.*                                                             @Y30LB02 00300003
.*01   COPYRIGHT = NONE                                        @Y30LB02 00350003
.*                                                             @Y30LB02 00400003
.*01   FUNCTION = THIS MACRO WILL CAUSE TUNING                 @Y30LB02 00450003
.*     PARAMETERS TO BE MODIFIED OR DISPLAYED                  @Y30LB02 00500003
.*                                                             @Y30LB02 00550003
.*01   STATUS = OS/VS1 RELEASE 4, OS/VS2 RELEASE 3             @Y30LB02 00600003
.*                                                             @Y30LB02 00650003
.*01   NOTES = AS FOLLOWS:                                     @Y30LB02 00700003
.*                                                             @Y30LB02 00750003
.*02     CODE = MACRO IS BILINGUALLY CODED                     @Y30LB02 00800003
.*                                                             @Y30LB02 00850003
.*02     RESTRICTIONS = THE FOLLOWING PREFIXES SHOULD BE       @Y30LB02 00900003
.*                      AVOIDED IN THE USER'S INVOCATION:      @Y30LB02 00950003
.*                      ICB AND TUN                            @Y30LB02 01000003
.*                                                             @Y30LB02 01050003
.*02     REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF          @Y30LB02 01100003
.*                              REGISTERS BY MACROS:           @Y30LB02 01150003
.*                              R0,R1,R14, AND R15             @Y30LB02 01200003
.*                                                             @Y30LB02 01250003
.*01   MODULE-TYPE = MACRO                                     @Y30LB02 01300003
.*                                                             @Y30LB02 01350003
.*02     PROCESSOR = ASSEMBLER AND PLS                         @Y30LB02 01400003
.*                                                             @Y30LB02 01450003
.*02     ATTRIBUTES = REUSABLE                                 @Y30LB02 01500003
.*                                                             @Y30LB02 01550003
.*02     ENTRY-POINT = ICBTUNE                                 @Y30LB02 01600003
.*                                                             @Y30LB02 01650003
.*02     LINKAGE = SVC 126                                     @Y30LB02 01700003
.*                                                             @Y30LB02 01750003
.*01  INPUT =                                                  @Y30LB02 01800003
.*                                                             @Y30LB02 01850003
.*  THE TUNING REQUEST IS ISSUED IF A HOST WISHES TO           @Y30LB02 01900003
.*  TO UPDATE SPECIFIED LRU TUNING PARAMETERS.  THIS           @Y30LB02 01950003
.*  FUNCTION ALSO HAS THE CAPABILITY TO DISPLAY SPECIFIC       @Y30LB02 02000003
.*  LRU TUNING PARAMETERS.                                     @Y30LB02 02050003
.*                                                             @Y30LB02 02100003
.*   MACRO SYNTAX                                              @Y30LB02 02150003
.*                                                             @Y30LB02 02200003
.*   LIST FORM                                                 @Y30LB02 02250003
.*                                                             @Y30LB02 02300003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 02350003
.*                                                             @Y30LB02 02400003
.*ICBTUNE  MF=L - (BAL)          MF=(L,MAP) - BAL              @Y30LB02 02450003
.*         MF(L,NAME/(R))-PLS    MF(L,NAME/(R),ATTR)-PLS       @Y30LB02 02500003
.*                                                             @Y30LB02 02550003
.*   STANDARD FORM                                             @Y30LB02 02600003
.*                                                             @Y30LB02 02650003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 02700003
.*                                                             @Y30LB02 02750003
.*ICBTUNE  FLAGS=ADDR/(R)        SDGNUM=ADDR/(R)               @Y30LB02 02800003
.*                               ECB=ADDR/(R)                  @Y30LB02 02850003
.*                               DATA=ADDR/(R)                 @Y30LB02 02900003
.*                                                             @Y30LB02 02950003
.* EXECUTE FORM                                                @Y30LB02 03000003
.*                                                             @Y30LB02 03050003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03100003
.*                                                             @Y30LB02 03150003
.*ICBTUNE  MF(E,NAME/(R)        MF(E,NAME/(R),COMPLETE)-PLS    @Y30LB02 03200003
.*                              ECB=ADDR/(R)                   @Y30LB02 03250003
.*                              SDGNUM=ADDR/(R)                @Y30LB02 03300003
.*                              DATA=ADDR/(R)                  @Y30LB02 03350003
.*                              FLAGS=ADDR/(R)                 @Y30LB02 03400003
.*                                                             @Y30LB02 03450003
.*  RESTRICTION:                                               @Y30LB02 03500003
.*                                                             @Y30LB02 03550003
.*  THE MF PARAMETER IS SPECIFIED WITH THE LIST AND            @Y30LB02 03600003
.*  EXECUTE FORMS.  THE DEFAULT (NULL) WILL REPRESENT          @Y30LB02 03650003
.*  STANDARD FORM.  IF STANDARD FORM IS INDICATED, THEN        @Y30LB02 03700003
.*  THE FLAGS PARAMETER IS NOT OPTIONAL.                       @Y30LB02 03750003
.*                                                             @Y30LB02 03800003
.*   KEYWORD PARAMETERS:                                       @Y30LB02 03850003
.*                                                             @Y30LB02 03900003
.*   MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE         @Y30LB02 03950003
.*          MACRO FORMAT AND MAY GIVE THE ADDRESS OR           @Y30LB02 04000003
.*          ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK      @Y30LB02 04050003
.*          IS STORED.                                         @Y30LB02 04100003
.*                                                             @Y30LB02 04150003
.*          L - LIST FORM: THE EXPANSION OF THE L-FORM         @Y30LB02 04200003
.*              MACRO WILL RESULT IN A REQUEST BLOCK WITH      @Y30LB02 04250003
.*              THE ONLY NON-ZERO FIELDS BEING THE OPCODE      @Y30LB02 04300003
.*              AND LENGTH FIELDS.                             @Y30LB02 04350003
.*                                                             @Y30LB02 04400003
.*          (1) 'MAP' - IF MAP IS SPECIFIED WITH THE           @Y30LB02 04450003
.*              ASSEMBLER MACRO CALL A DSECT EQUIVALENT TO     @Y30LB02 04500003
.*              A MAPPING MACRO IS PRODUCED.                   @Y30LB02 04550003
.*                                                             @Y30LB02 04600003
.*          (2) NAME - THE MACRO INVOKER MUST SPECIFY A        @Y30LB02 04650003
.*              NAME FOR HIS STRUCTURE WHEN INVOKING THE       @Y30LB02 04700003
.*              PLS LIST FORM.                                 @Y30LB02 04750003
.*                                                             @Y30LB02 04800003
.*          (3) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS       @Y30LB02 04850003
.*              ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION    @Y30LB02 04900003
.*              IN AN UNINITIALIZED REQUEST BLOCK.  ATTRI-     @Y30LB02 04950003
.*              BUTE EXAMPLE:                                  @Y30LB02 05000003
.*                                                             @Y30LB02 05050003
.*              CHAR, FIXED, STATIC LOCAL, NONLOCAL,           @Y30LB02 05100003
.*              BASED(*), ETC.                                 @Y30LB02 05150003
.*                                                             @Y30LB02 05200003
.*       NULL - STANDARD FORM: THE EXPANSION OF THIS FORM      @Y30LB02 05250003
.*              CONSISTS OF A REQUEST BLOCK, A LINKAGE         @Y30LB02 05300003
.*              INSTRUCTION, AND, POSSIBLY, PARAMETER          @Y30LB02 05350003
.*              BINDING INSTRUCTION.                           @Y30LB02 05400003
.*                                                             @Y30LB02 05450003
.*          E - EXECUTABLE FORM: THE EXPANSION OF THIS FORM    @Y30LB02 05500003
.*              CONSISTS OF A LINKAGE INSTRUCTION AND          @Y30LB02 05550003
.*              POSSIBLY, PARAMETER BINDING INSTRUCTIONS.      @Y30LB02 05600003
.*                                                             @Y30LB02 05650003
.*              SUB-PARAMETERS                                 @Y30LB02 05700003
.*                                                             @Y30LB02 05750003
.*              (1)  AN E MUST BE SPECIFIED IN THE FIRST       @Y30LB02 05800003
.*                   SUB-PARAMETER POSITION.  THIS INDICATES   @Y30LB02 05850003
.*                   THAT THE MACRO IS IN EXECUTABLE FORM.     @Y30LB02 05900003
.*                                                             @Y30LB02 05950003
.*              (2)  A NAME OR A REGISTER MUST BE SPECIFIED    @Y30LB02 06000003
.*                   IN THE SECOND SUB-PARAMETER.              @Y30LB02 06050003
.*                                                             @Y30LB02 06100003
.*              (3)  'COMPLETE' - COMPLETE WILL CAUSE THE      @Y30LB02 06150003
.*                   MACRO TO ZERO OUT THE REQUEST BLOCK.      @Y30LB02 06200003
.*                   AFTER ZEROING THE REQUEST BLOCK THE       @Y30LB02 06250003
.*                   FUNCTION OPCODE AND LENGTH ARE PLACED     @Y30LB02 06300003
.*                   IN THE REQUEST BLOCK.                     @Y30LB02 06350003
.*                                                             @Y30LB02 06400003
.*  FLAGS - A 2 BYTE FIELD WHICH INDICATES THE FUNCTION TO     @Y30LB02 06450003
.*          BE PERFORMED.  (BITS 8, 9, 10 ARE MUTUALLY EX-     @Y30LB02 06500003
.*          EXCLUSIVE)  THE FORMAT OF THE FLAGS FIELD IS AS    @Y30LB02 06550003
.*          FOLLOWS:                                           @Y30LB02 06600003
.*                                                             @Y30LB02 06650003
.*  -----------------------------------------                  @Y30LB02 06700003
.*  | X |0|0|0|0|0|0|0| X | X | X |0|0|0|0|0|                  @Y30LB02 06750003
.*  -----------------------------------------                  @Y30LB02 06800003
.*                                                             @Y30LB02 06850003
.*  BIT 0-------'1'B    MODIFY MODE                            @Y30LB02 06900003
.*              '0'B    DISPLAY MODE                           @Y30LB02 06950003
.*                                                             @Y30LB02 07000003
.*  BITS 1-7---         |RESERVED AND MUST BE ZERO|            @Y30LB02 07050003
.*                                                             @Y30LB02 07100003
.*  BIT 8-------'1'B    DISPLAY OR MODIFY THRESHOLDS           @Y30LB02 07150003
.*              '0'B    NO FUNCTION (DEFAULT)                  @Y30LB02 07200003
.*                                                             @Y30LB02 07250003
.*  BIT 9-------'1'B    DISPLAY OR MODIFY SLICE RANGE          @Y30LB02 07300003
.*                      PARAMETER                              @Y30LB02 07350003
.*              '0'B    NO FUNCTION (DEFAULT)                  @Y30LB02 07400003
.*                                                             @Y30LB02 07450003
.*  BIT 10------'1'B    DISPLAY OR MODIFY LRU CLOCK            @Y30LB02 07500003
.*                      RESOLUTION                             @Y30LB02 07550003
.*              '0'B    NO FUNCTION (DEFAULT)                  @Y30LB02 07600003
.*                                                             @Y30LB02 07650003
.*  BIT 11-15---        |RESERVED AND MUST BE ZERO|            @Y30LB02 07700003
.*                                                             @Y30LB02 07750003
.*  MODIFY MODE                                                @Y30LB02 07800003
.*                                                             @Y30LB02 07850003
.*  THRESHOLDS:  IF MODIFY IS SPECIFIED WITH BIT 8 ON, THEN    @Y30LB02 07900003
.*  THE UPPER AND LOWER THRESHOLD DELTAS SPECIFIED WITH THE    @Y30LB02 07950003
.*  DATA PARAMETER WILL REPLACE THE UPPER AND LOWER THRESHOLD  @Y30LB02 08000003
.*  DELTAS IN THE STAGING DRIVE GROUP PAGE AVAILABILITY BLOCK. @Y30LB02 08050003
.*                                                             @Y30LB02 08100003
.*  SLICE RANGES:  IF MODIFY IS SPECIFIED WITH BIT 9 ON, THEN  @Y30LB02 08150003
.*  THE RANGES SPECIFIED WITH THE 'DATA' PARAMETER WILL RE-    @Y30LB02 08200003
.*  PLACE THE CURRENT SLICE RANGE FIELD.                       @Y30LB02 08250003
.*                                                             @Y30LB02 08300003
.*  LRU TIME DELTA:  IF MODIFY IS SPECIFIED WITH BIT 10 ON,    @Y30LB02 08350003
.*  THEN THE NEW TIME DELTA SPECIFIED WITH THE DATA PARAMETER  @Y30LB02 08400003
.*  WILL REPLACE THE OLD IN THE IMPL RECORD ON THE DASD TABLE  @Y30LB02 08450003
.*  PACK.  IF THE NEW DELTA SUCCESSFULLY REPLACES THE OLD,     @Y30LB02 08500003
.*  THEN THE 'IN CORE' LRU DELTA WILL BE CHANGED TO AGREE      @Y30LB02 08550003
.*  WITH THE NEW DELTA.                                        @Y30LB02 08600003
.*                                                             @Y30LB02 08650003
.*  DISPLAY MODE                                               @Y30LB02 08700003
.*                                                             @Y30LB02 08750003
.*  A MESSAGE WILL BE RETURNED TO THE USER IN THE AREA         @Y30LB02 08800003
.*  PROVIDED BY THE ECB PARAMETER.  THE DATA WILL HAVE THE     @Y30LB02 08850003
.*  FOLLOWING FORMAT:                                          @Y30LB02 08900003
.*                                                             @Y30LB02 08950003
.*  THRESHOLD DELTAS FOR THE SPECIFIED DRIVE GROUP:            @Y30LB02 09000003
.*                                                             @Y30LB02 09050003
.*    BYTE 0  -   THE UPPER THRESHOLD DELTA                    @Y30LB02 09100003
.*    BYTE 1  -   THE LOWER THRESHOLD DELTA                    @Y30LB02 09150003
.*    BYTES 2,3 - UNUSED                                       @Y30LB02 09200003
.*                                                             @Y30LB02 09250003
.*  SLICE RANGES FOR THE SPECIFIED STAGING DRIVE GROUP:        @Y30LB02 09300003
.*    BYTE 0  -   LRU TIME DELTA                               @Y30LB02 09350003
.*    BYTES 1-3 - UNUSED                                       @Y30LB02 09400003
.*                                                             @Y30LB02 09450003
.*  SDGNUM -  STAGING DRIVE GROUP NUMBER:  A ONE BYTE FIELD    @Y30LB02 09500003
.*            THAT CONTAINS THE STAGING DRIVE GROUP DESIGNA-   @Y30LB02 09550003
.*            TION.  THIS PARAMETER NEED NOT BE SPECIFIED      @Y30LB02 09600003
.*            IF BIT 10 (MODIFY OR DISPLAY LRU CLOCK           @Y30LB02 09650003
.*            RESOLUTION) IS SPECIFIED.                        @Y30LB02 09700003
.*                                                             @Y30LB02 09750003
.*  ECB    -  EVENT CONTROL BLOCK:  THE NAME OF THE EVENT      @Y30LB02 09800003
.*            CONTROL BLOCK.  THE USER MUST DECLARE A          @Y30LB02 09850003
.*            MINIMUM 12 BYTES CONTIGUOUS AREA TO CONTAIN      @Y30LB02 09900003
.*            THE MESSAGE.  THIS PARAMETER IS REQUIRED FOR     @Y30LB02 09950003
.*            DISPLAY MODE ONLY.  (THE ECB AND APPENDED        @Y30LB02 10000003
.*            DATA AREA MUST BE IN COMMON CORE IN VS/2.)       @Y30LB02 10050003
.*            THE ECB IS POSTED WITH ONE OF THE FOLLOWING      @Y30LB02 10100003
.*            POST CODES:  71, 72, 73, 74, AND ETC.  THE       @Y30LB02 10150003
.*            POST CODE WILL BE PLACED IN THE LOW-ORDER BYTE   @Y30LB02 10200003
.*            OF THE ECB - '7F'X INDICATES SUCCESSFUL          @Y30LB02 10250003
.*            COMPLETION.  THE MSC DATA WILL BE MOVED TO       @Y30LB02 10300003
.*            CORE LOCATION ADDR(ECB)+4.  THE ECB AREA MUST    @Y30LB02 10350003
.*            BE CLEARED(SET TO BINARY 0) BEFORE INVOKING      @Y30LB02 10400003
.*            THE MACRO.                                       @Y30LB02 10450003
.*                                                             @Y30LB02 10500003
.*  DATA   -  A FOUR BYTE FIELD THAT CONTAINS INFORMATION      @Y30LB02 10550003
.*            TO MODIFY THE MSC MEMORY, OR THE MSC TABLE       @Y30LB02 10600003
.*            BLOCK.  THIS PARAMETER IS REQUIRED FOR THE       @Y30LB02 10650003
.*            MODIFY MODE AND HAS THE FOLLOWING FORMAT:        @Y30LB02 10700003
.*                                                             @Y30LB02 10750003
.*  IF THRESHOLDS ARE TO BE MODIFIED THEN:                     @Y30LB02 10800003
.*                                                             @Y30LB02 10850003
.*    BYTE 0  -   NEW UPPER THRESHOLD DELTA VALUE              @Y30LB02 10900003
.*    BYTE 1  -   NEW LOWER THRESHOLD DELTA VALUE              @Y30LB02 10950003
.*    BYTES 2-3 - RESERVED                                     @Y30LB02 11000003
.*                                                             @Y30LB02 11050003
.*  IF SLICE RANGES ARE TO BE MODIFIED THEN:                   @Y30LB02 11100003
.*                                                             @Y30LB02 11150003
.*    BYTES 0-3 - NEW SLICE RANGE VALUES                       @Y30LB02 11200003
.*                                                             @Y30LB02 11250003
.*  IF LRU CLOCK DELTA IS TO BE MODIFIED THEN:                 @Y30LB02 11300003
.*                                                             @Y30LB02 11350003
.*    BYTE 0  -   NEW LRU CLOCK DELTA VALUE                    @Y30LB02 11400003
.*    BYTE 1-3  - RESERVED                                     @Y30LB02 11450003
.*                                                             @Y30LB02 11500003
.*                                                             @Y30LB02 11550003
.*01  EXIT-NORMAL = VALID INVOCATION                           @Y30LB02 11600003
.*                                                             @Y30LB02 11650003
.*02     CONDITION = RETURN CODE = 0                           @Y30LB02 11700003
.*                                                             @Y30LB02 11750003
.*02     OUTPUT = IN-LINE PLS/BAL STATEMENTS THAT PERFORM      @Y30LB02 11800003
.*       THE REQUESTED FUNCTION                                @Y30LB02 11850003
.*                                                             @Y30LB02 11900003
.*01  EXIT-ERROR = INVALID INVOCATION                          @Y30LB02 11950003
.*                                                             @Y30LB02 12000003
.*02     CONDITION = RETURN CODE = 12                          @Y30LB02 12050003
.*                                                             @Y30LB02 12100003
.*02     OUTPUT = ERROR MESSAGE AS A COMMENT AT POINT OF       @Y30LB02 12150003
.*                INVOCATION                                   @Y30LB02 12200003
.*                                                             @Y30LB02 12250003
.*01  EXTERNAL REFERENCES = NONE                               @Y30LB02 12300003
.*                                                             @Y30LB02 12350003
.*01  TABLES = NONE                                            @Y30LB02 12400003
.*                                                             @Y30LB02 12450003
.*01  TABLES = NONE                                            @Y30LB02 12500003
.*                                                             @Y30LB02 12550003
.*01  MESSAGES = AS FOLLOWS:                                   @Y30LB02 12600003
.*     ICB602I:  A NAME FOR THE REQUEST BLOCK MUST BE          @Y30LB02 12650003
.*               SPECIFIED IN MF(2)                            @Y30LB02 12700003
.*     ICB604I:  WARNING ONLY THE MF PARAMETER IS              @Y30LB02 12750003
.*               VALID FOR LIST FORM                           @Y30LB02 12800003
.*     ICB607I:  FLAGS MUST BE SPECIFIED FOR STANDARD          @Y30LB02 12850003
.*               FORM MACRO                                    @Y30LB02 12900003
.*     ICB612I:  MF(2) MUST CONTAIN REQ BLK NAME IF            @Y30LB02 12950003
.*               EXEC MACRO FORM REQUESTED                     @Y30LB02 13000003
.*     ICB615I:  INVALID MF PARAMETER SPECIFIED, MUST BE       @Y30LB02 13050003
.*               L, E, OR NULL                                 @Y30LB02 13100003
.*                                                             @Y30LB02 13150003
.*01  CONTROL-BLOCKS = NONE                                    @Y30LB02 13200003
.*                                                             @Y30LB02 13250003
.*01  INNER MACROS = NONE                                      @Y30LB02 13300003
.*                                                             @Y30LB02 13350003
.*01  SYSTEM MACRO = IHBINNRA                                  @Y30LB02 13400003
.*                                                             @Y30LB02 13450003
.*01  CHANGE-ACTIVITY = S/D X04AC02 & Y30LB02                  @Y30LB02 13500003
.*                                                             @Y30LB02 13550003
.**** END OF SPECIFICATIONS ***                                @Y30LB02 13600003
         MACRO                                                          13650003
&SYMBOL  ICBTUNE &MF=,&FLAGS=,&SDGNUM=,&ECB=,&DATA=                     13700003
         LCLB &ERSW               ERROR SWITCH                 @Y30LB02 13750003
         LCLC &TUNEU              TUNE MACRO INSTR INDX        @Y30LB02 13800003
&TUNEU   SETC 'TU'.'&SYSNDX'      ASSIGN CHARACTER VALUE       @Y30LB02 13850003
.*                                                             @Y30LB02 13900003
.*       DETERMINATION OF DESIRED MACRO FORM,L MEANS           @Y30LB02 13950003
.*       THE LIST FORM, E REPRESENTS THE EXECUTE               @Y30LB02 14000003
.*       FORM AND THE DEFAULT IS STANDARD FORM                 @Y30LB02 14050003
.*                                                             @Y30LB02 14100003
         AIF  ('&MF(1)' NE 'L').EFORM       LIST FORM?         @Y30LB02 14150003
         AIF  ('&FLAGS' NE '' OR '&SDGNUM' NE '').WARN         @Y30LB02 14200003
         AIF  ('&ECB' NE '' OR '&DATA' NE '').WARN             @Y30LB02 14250003
         AGO  .LISTOK                                          @Y30LB02 14300003
.WARN    MNOTE 4,'  ICB604I - WARNING-ONLY THE MF  '           @Y30LB02 14350003
         MNOTE 4,'  PARAMETER IS VALID FOR LIST FORM '         @Y30LB02 14400003
.*                                                             @Y30LB02 14450003
.LISTOK  ANOP                                                  @Y30LB02 14500003
         AIF  ('&MF(2)' EQ 'MAP').LISTDS  MAPPING DSECT REQ?   @Y30LB02 14550003
*  MACMEAN  TUNING MACRO--INITIALIZED LIST FORM                @Y30LB02 14600003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 14650003
&SYMBOL  DS   0F                                               @Y30LB02 14700003
TUNELEN  DC   F'20'               LENGTH OF TUNE REQ BLK       @Y30LB02 14750003
TUNEOPCD DC   XL1'1C'             TUNING  FUNCTION OPCODE      @YM02853 14800003
TUNERES1 DC   XL1'00'             1-BYTE RESERVED AREA         @Y30LB02 14850003
TUNEFLAG DC   XL2'0000'           2-BYTE FLAGS AREA            @Y30LB02 14900003
TUNESDGN DC   XL1'00'             1-BYTE SDGNUM AREA           @Y30LB02 14950003
TUNERES2 DC   XL1'00'             1-BYTE RESERVED AREA         @Y30LB02 15000003
TUNEASID DC   XL2'0000'           2-BYTE ASID AREA             @Y30LB02 15050003
TUNEECB  DC   XL4'00000000'       4-BYTE ECB AREA              @Y30LB02 15100003
TUNEDATA DC   XL4'00000000'       2-BYTE RESERVED AREA         @Y30LB02 15150003
         AGO  .FINISH                                          @Y30LB02 15200003
.*                                                             @Y30LB02 15250003
.*                                                             @Y30LB02 15300003
.LISTDS  ANOP                                                  @Y30LB02 15350003
*  MACMEAN  TUNING MACRO--UNINITIALIZED LIST FORM              @Y30LB02 15400003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 15450003
ICBTUNE  DSECT                                                 @Y30LB02 15500003
TUNELEN  DS   F                   LEN OF 20 BYTES              @Y30LB02 15550003
TUNEOPCD DS   XL1                 TUNING OPCODE                @YM02853 15600003
TUNERES1 DS   XL1                 1-BYTE RESERVE-ZERO          @Y30LB02 15650003
TUNEFLAG DS   XL2                 2-BYTE FLAGS AREA            @Y30LB02 15700003
TUNESDGN DS   XL1                 1-BYTE SDGNUM AREA           @Y30LB02 15750003
TUNERES2 DS   XL1                 1-BYTE RESERVED AREA         @Y30LB02 15800003
TUNEASID DS   XL2                 2-BYTE ASID AREA             @Y30LB02 15850003
TUNEECB  DS   A                   4-BYTE ECB AREA              @Y30LB02 15900003
TUNEDATA DS   XL4                 4-BYTE DATA AREA             @Y30LB02 15950003
         AGO  .FINISH                                          @Y30LB02 16000003
.*                                                             @Y30LB02 16050003
.*       THE FOLLOWING PROCESSING IS ACCOMPLISHED FOR THE      @Y30LB02 16100003
.*       EXECUTABLE MACRO FORM                                 @Y30LB02 16150003
.*                                                             @Y30LB02 16200003
.EFORM   AIF  ('&MF(1)' NE 'E').SFORM       EXECUTE FORM?      @Y30LB02 16250003
         AIF  ('&MF(2)' EQ '').EXFAIL       MF(2) NULL?        @Y30LB02 16300003
*  MACMEAN  TUNING MACRO--EXECUTE FORM                         @Y30LB02 16350003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 16400003
&SYMBOL  IHBINNRA &MF(2)          LD ADDR OF REQUEST BLK       @Y30LB02 16450003
         LA   0,20                LD LEN OF TUNE BLK           @Y30LB02 16500003
         ST   0,0(1)              STORE LEN IN REQ BLK         @Y30LB02 16550003
         MVI  4(1),X'1C'          LD TUNING OPCODE IN BLK      @YM02853 16600003
         AGO  .CKSW1                                           @Y30LB02 16650003
.*                                                             @Y30LB02 16700003
.EXFAIL  ANOP                                                  @Y30LB02 16750003
         MNOTE 12,'  ICB612I - MF(2) MUST CONTAIN REQ BLK '    @Y30LB02 16800003
         MNOTE 12,'  NAME IF EXEC MACRO FORM REQUESTED '       @Y30LB02 16850003
&ERSW    SETB 1                   SET ERROR SWITCH TO 1        @Y30LB02 16900003
.*                                                             @Y30LB02 16950003
.CKSW1   AIF  (&ERSW).FINISH      IF ERROR-END PROCESSING      @Y30LB02 17000003
         AGO  .COMMON                                          @Y30LB02 17050003
.*                                                             @Y30LB02 17100003
.*       PROCESSING OF THE STANDARD FORM MACRO                 @Y30LB02 17150003
.*                                                             @Y30LB02 17200003
.SFORM   AIF  ('&MF(1)' NE '').BADFORM      STANDARD FORM?     @Y30LB02 17250003
         AIF  ('&FLAGS' NE '').CKSW2      FLAGS SPECIFIED?     @Y30LB02 17300003
&ERSW    SETB 1                   SET ERROR SWITCH TO 1        @Y30LB02 17350003
         MNOTE 12,'  ICB607I - FLAGS MUST BE SPECIFIED '       @Y30LB02 17400003
         MNOTE 12,'  FOR STANDARD FORM MACRO '                 @Y30LB02 17450003
         AGO  .CKSW2                                           @Y30LB02 17500003
.*                                                             @Y30LB02 17550003
.BADFORM ANOP                                                  @Y30LB02 17600003
&ERSW    SETB 1                   SET ERROR SWITCH TO 1        @Y30LB02 17650003
         MNOTE 12,'  ICB615I - INVALID MF PARAMETER '          @Y30LB02 17700003
         MNOTE 12,'  SPECIFIED, MUST BE L, E, OR NULL.'        @Y30LB02 17750003
.*                                                             @Y30LB02 17800003
.*       THE FOLLOWING CODE CHECKS TO DETERMINE IF THE ERROR   @Y30LB02 17850003
.*       SWITCH IS ON.  IF YES, PROCESSING IS TERMINATED,      @Y30LB02 17900003
.*       OTHERWISE STANDARD FORM MACRO PROCESSING WILL BE      @Y30LB02 17950003
.*       CONTINUE                                              @Y30LB02 18000003
.*                                                             @Y30LB02 18050003
.CKSW2   AIF  (&ERSW).FINISH      IF YES-END PROCESSING        @Y30LB02 18100003
*  MACMEAN TUNING MACRO--STANDARD FORM                         @Y30LB02 18150003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 18200003
         CNOP 0,4                                              @Y30LB02 18250003
&SYMBOL  BAL  1,&TUNEU            LD R1 WITH ADDR REQ BLK      @Y30LB02 18300003
TUNELEN  DC   A(&TUNEU-*)         LEN OF TUN REQ BLK           @Y30LB02 18350003
TUNEOPCD DC   XL1'1C'             TUNING  FUNCTION OPCODE      @YM02853 18400003
TUNERES1 DC   XL1'00'             1-BYTE RESERVED AREA         @Y30LB02 18450003
TUNEFLAG DC   XL2'0000'           2-BYTE FLAGS AREA            @Y30LB02 18500003
TUNESDGN DC   XL1'00'             1-BYTE SDGNUM AREA           @Y30LB02 18550003
TUNERES2 DC   XL1'00'             1-BYTE RESERVED AREA         @Y30LB02 18600003
TUNEASID DC   XL2'0000'           2-BYTE ASID AREA             @Y30LB02 18650003
TUNEECB  DC   XL4'00000000'       4-BYTE ECB AREA              @Y30LB02 18700003
TUNEDATA DC   XL4'00000000'       2-BYTE RESERVED AREA         @Y30LB02 18750003
&TUNEU   EQU  *                                                @Y30LB02 18800003
.*                                                             @Y30LB02 18850003
.*       THE FOLLOWING CODE CHECKS FOR VALID PARAMETERS IF     @Y30LB02 18900003
.*       STANDARD OR EXECUTE FORM MACRO IS SPECIFIED.          @Y30LB02 18950003
.*       IF PARAMETERS ARE SPECIFIED, THEY WILL BE STORED      @Y30LB02 19000003
.*       IN THE REQUEST BLOCK.                                 @Y30LB02 19050003
.*                                                             @Y30LB02 19100003
.COMMON  AIF  ('&FLAGS' EQ '').SDGN   FLAGS SPECIFIED?         @Y30LB02 19150003
         AIF  ('&FLAGS'(1,1) EQ '(').FLREG   FLAGS REGFORM?    @Y30LB02 19200003
         MVC  6(2,1),&FLAGS       PUT FLAGS IN REQ BLOCK       @Y30LB02 19250003
         AGO  .SDGN               BRANCH TO CK HOSTID          @Y30LB02 19300003
.*                                                             @Y30LB02 19350003
.FLREG   ANOP                                                  @Y30LB02 19400003
         MVC  6(2,1),0(&FLAGS(1)) REGFORM PLACE FLAGS IN BLK   @Y30LB02 19450003
.*                                                             @Y30LB02 19500003
.SDGN    AIF  ('&SDGNUM' EQ '').CKECB       SDGNUM SPECIFIED?  @Y30LB02 19550003
         AIF  ('&SDGNUM'(1,1) EQ '(').HREG  REGISTER FORM?     @Y30LB02 19600003
         MVC  8(1,1),&SDGNUM      ADDRFORM-ST SDGNUM IN BLK    @Y30LB02 19650003
         AGO  .CKECB                                           @Y30LB02 19700003
.*                                                             @Y30LB02 19750003
.HREG    ANOP                                                  @Y30LB02 19800003
         MVC  8(1,1),0(&SDGNUM(1)) REGFORM-ST SDGNUM IN BLK    @Y30LB02 19850003
.*                                                             @Y30LB02 19900003
.CKECB   AIF  ('&ECB' EQ '').CKDATA       ECB SPECIFIED?       @Y30LB02 19950003
         AIF  ('&ECB'(1,1) EQ '(').EREG   REGISTER FORM?       @Y30LB02 20000003
         LA   15,&ECB             LOAD ECB IN REG 15           @Y30LB02 20050003
         ST   15,12(1)            ST ECB IN REQUEST BLK        @Y30LB02 20100003
         AGO  .CKDATA                                          @Y30LB02 20150003
.*                                                             @Y30LB02 20200003
.EREG    ANOP                                                  @Y30LB02 20250003
         ST   &ECB,12(1)          REGFORM-ST ECB IN BLK        @Y30LB02 20300003
.*                                                             @Y30LB02 20350003
.CKDATA  AIF  ('&DATA' EQ '').INVOKE      DATA SPECIFIED?      @Y30LB02 20400003
         AIF  ('&DATA'(1,1) EQ '(').DREG  REGISTER FORM?       @Y30LB02 20450003
         MVC  16(4,1),&DATA       MOVE DATA IN REQ BLK         @Y30LB02 20500003
         AGO  .INVOKE                                          @Y30LB02 20550003
.*                                                             @Y30LB02 20600003
.DREG    ANOP                                                  @Y30LB02 20650003
         MVC  16(4,1),0(&DATA(1)) REGFORM-PUT DATA IN BLK      @Y30LB02 20700003
.INVOKE  ANOP                                                  @Y30LB02 20750003
         SVC  126                 INVOKE THE SVC               @Y30LB02 20800003
.FINISH  MEND                                                  @Y30LB02 20850003
**/                                                                     20900003
*/*                                                          @Y30LB02*/ 20950003
*   ICBTUNE: MACRO KEYS(MF,FLAGS,SDGNUM,ECB,DATA);         /*@Y30LB02*/ 21000003
*/*                                                          @Y30LB02*/ 21050003
*/*                     EXTERNAL DECLARES                    @Y30LB02*/ 21100003
*/*********************************************************  @Y30LB02*/ 21150003
*/*      TUNETES IS USED TO DETERMINE WHETHER THE STANDARD   @Y30LB02*/ 21200003
*/*      FORM MACRO HAS BEEN INVOKED MORE THAN ONCE BY THE   @Y30LB02*/ 21250003
*/*      SAME CALLER.                                        @Y30LB02*/ 21300003
*/*********************************************************  @Y30LB02*/ 21350003
*/*      TUTESTR1 WILL BE USED TO DETERMINE IF IT IS NECES-  @Y30LB02*/ 21400003
*/*      SARY TO DECLARE R1 OR WHETHER IT IS ALREADY DCLD    @Y30LB02*/ 21450003
*/*********************************************************  @Y30LB02*/ 21500003
*/*                                                          @Y30LB02*/ 21550003
*   DCL  TUTESTR1  FIXED  EXT;    /*REG1 DECLARE COUNTER     @Y30LB02*/ 21600003
*   DCL  TUNETES  FIXED  EXT;     /*STANDARD INVOC COUNTER   @Y30LB02*/ 21650003
*/*                                                          @Y30LB02*/ 21700003
*/*      INTERNAL DECLARES                                   @Y30LB02*/ 21750003
*   DCL  OPCODE   CHAR;      /*DEFINE TUNE OPCODE            @Y30LB02*/ 21800003
*   DCL  TUNLEN  CHAR;       /*DECLARE LENGTH OF ORDER       @Y30LB02*/ 21850003
*   DCL  ERSW     FIXED;     /*DECLARE ERROR COND SWITCH     @Y30LB02*/ 21900003
*   DCL  RETCODE  FIXED;     /*DECLARE RETURN CODE AREA      @Y30LB02*/ 21950003
*   DCL  CTR      FIXED;     /*DECLARE CTR FOR LIST FORM     @Y30LB02*/ 22000003
*        ERSW=0;             /*INITIALIZE ERROR SWITCH       @Y30LB02*/ 22050003
*        RETCODE=0;          /*INITIALIZE RETURN CODE        @Y30LB02*/ 22100003
*        TUNLEN='14';        /*INITIALIZE LENGTH FIELD       @Y30LB02*/ 22150003
*        OPCODE='1C';        /*INITIALIZE OPCODE VARIABLE    @YM02853*/ 22200003
*        CTR=0;              /*INITIALIZE INCREMENT CTR      @Y30LB02*/ 22250003
*/********************************************************   @Y30LB02*/ 22300003
*/*      CHECK FOR VALID MACRO FORM--E INDICATES EXECUTE     @Y30LB02*/ 22350003
*/*      FORM, L INDICATES LIST FORM AND IF THE MF PARA-     @Y30LB02*/ 22400003
*/*      METER IS NULL THE STANDARD FORM MACRO IS INVOKED    @Y30LB02*/ 22450003
*/********************************************************   @Y30LB02*/ 22500003
*        IF TUTESTR1=0 THEN  /*REG1 DECLARED BEFORE?         @Y30LB02*/ 22550003
*             DO;            /*                              @Y30LB02*/ 22600003
*                  ANS('DCL TUNER1 REG(1) PTR ;/*PTR'||                 22650003
*                  ' TO REQUEST BLOCK @Y30LB02*/')SKIP;                 22700003
*                  TUTESTR1=TUTESTR1+1;/*INCREMENT CTR       @Y30LB02*/ 22750003
*             END;           /*                              @Y30LB02*/ 22800003
*   IF MF(1) ¬= 'L' THEN     /*LIST FORM?                    @Y30LB02*/ 22850003
*        GO TO EFORM;        /*CHECK FOR EXECUTE FORM        @Y30LB02*/ 22900003
*   IF MF(2) = '' THEN       /*LIST NAME SPECIFIED           @Y30LB02*/ 22950003
*        DO;                 /*SET UP ERROR MESSAGE          @Y30LB02*/ 23000003
*             ERSW=1;        /*SET ERROR SWITCH ON           @Y30LB02*/ 23050003
*             RETCODE=12;    /*SET RETURN CODE TO 12         @Y30LB02*/ 23100003
*             ANS MSG('  ICB602I - A NAME FOR THE REQUEST BLOCK '||     23150003
*             'MUST BE SPECIFIED IN MF(2) ')SKIP;          /*@Y30LB02*/ 23200003
*             GO TO FINISH;  /*BRANCH TO END                 @Y30LB02*/ 23250003
*        END;                /*                              @Y30LB02*/ 23300003
*/********************************************************   @Y30LB02*/ 23350003
*/*  THE FOLLOWING CODE CHECKS TO INSURE THAT THE USER       @Y30LB02*/ 23400003
*/*  DOES NOT ATTEMPT TO PASS ARGUMENTS OTHER THAN THE MF    @Y30LB02*/ 23450003
*/*  PARAMETER ON THE LIST FORM MACRO INVOCATION.  IF A      @Y30LB02*/ 23500003
*/*  VIOLATION IS DETECTED, A WARNING MESSAGE WILL BE        @Y30LB02*/ 23550003
*/*  GIVEN AND PROCESSING WILL CONTINUE.                     @Y30LB02*/ 23600003
*/********************************************************   @Y30LB02*/ 23650003
*/*                                                          @Y30LB02*/ 23700003
*   IF FLAGS ¬= '' THEN      /*IS THE FLAGS AREA NULL        @Y30LB02*/ 23750003
*        CTR=CTR+1;          /*INCREMENT PARAMETER COUNTER   @Y30LB02*/ 23800003
*   IF SDGNUM ¬= '' THEN     /*IS THE SDGNUM AREA NULL       @Y30LB02*/ 23850003
*        CTR=CTR+1;          /*INCREMENT PARAMETER COUNTER   @Y30LB02*/ 23900003
*   IF ECB ¬= '' THEN        /*IS THE ECB AREA NULL          @Y30LB02*/ 23950003
*        CTR=CTR+1;          /*INCREMENT PARAMETER COUNTER   @Y30LB02*/ 24000003
*   IF DATA ¬= '' THEN       /*IS THE DATA AREA NULL         @Y30LB02*/ 24050003
*        CTR=CTR+1;          /*INCREMENT PARAMETER COUNTER   @Y30LB02*/ 24100003
*   IF CTR > 0 THEN          /*INCREMENT CTR > ZERO?         @Y30LB02*/ 24150003
*        DO;                 /*SET UP ERROR MESSAGE          @Y30LB02*/ 24200003
*          RETCODE=4;     /*SET RETURN CODE TO 4             @Y30LB02*/ 24250003
*          ANS MSG('  ICB604I - WARNING-ONLY THE MF PARAMETER'||        24300003
*             ' IS VALID FOR LIST FORM')SKIP;              /*@Y30LB02*/ 24350003
*        END;                /*                              @Y30LB02*/ 24400003
*   IF MF(3) ¬= '' THEN      /*ARGUMENT THREE SPECIFIED      @Y30LB02*/ 24450003
*        GO TO ATTRLST;      /*IF YES, THEN BRANCH           @Y30LB02*/ 24500003
*/*                                                          @Y30LB02*/ 24550003
*             ANS('/*******************************************'||      24600003
*                 '************** @Y30LB02*/')SKIP;                     24650003
*             ANS('/*MACMEAN  MSSC TUNING MACRO                '||      24700003
*                 '               @Y30LB02*/')SKIP;                     24750003
*             ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||      24800003
*                 '               @Y30LB02*/')SKIP;                     24850003
*             ANS('/*THIS IS THE INITIALIZED LIST FORM         '||      24900003
*                 '               @Y30LB02*/')SKIP;                     24950003
*             ANS('/*******************************************'||      25000003
*                 '************** @Y30LB02*/')SKIP;                     25050003
*             ANS('DCL 1 '||MF(2)||'  STATIC LOCAL,'||                  25100003
*             ' /*TUNING REQUEST BLOCK @Y30LB02*/')SKIP;                25150003
*             ANS('    2  TUNELEN  FIXED(31)INIT('||QUOTE               25200003
*             ('14')||'X),/*LEN OF TUNING REQ BLK @Y30LB02*/')SKIP;     25250003
*             ANS('    2  TUNEOPCD CHAR(1)INIT('||QUOTE('1C')||         25300003
*             'X),/*TUNING OPCODE @YM02853*/')SKIP;                     25350003
*             ANS('    2  TUNERES1 CHAR(1)INIT('||QUOTE('00')||'X),'||  25400003
*             '/*RESERVED AND ZERO @Y30LB02*/')SKIP;                    25450003
*             ANS('    2  TUNEFLAG BIT(16)INIT('||QUOTE                 25500003
*             ('0000000000000000')||'B),/*TWO BYTE ATTRIBUTE '||        25550003
*             'AREA @Y30LB02*/')SKIP;                                   25600003
*             ANS('       3  TUNMODE BIT(1),/*IF ON, THEN'||            25650003
*             ' MODIFY MODE-OFF RESULT IN DISPLAY @Y30LB02*/')SKIP;     25700003
*             ANS('       3  TUNRES1 BIT(7),/*SEVEN BITS'||             25750003
*             ' RESERVED @Y30LB02*/')SKIP;                              25800003
*             ANS('       3  TUNTHRES BIT(1),/*DISPLAY OR'||            25850003
*             ' MODIFY THRESHOLDS @Y30LB02*/')SKIP(1);                  25900003
*             ANS('       3  TUNSLICE BIT(1),/*DISPLAY OR'||            25950003
*             ' MODIFY SLICE RANGES @Y30LB02*/')SKIP(1);                26000003
*             ANS('       3  TUNCLOCK BIT(1),/*DISPLAY OR'||            26050003
*             ' MODIFY LRU CLOCK @Y30LB02*/')SKIP(1);                   26100003
*             ANS('       3  TUNRES2 BIT(5),/*5 BITS'||                 26150003
*             ' RESERVED @Y30LB02*/')SKIP;                              26200003
*             ANS('    2  TUNESDGN  FIXED(8) INIT(0),'||                26250003
*             '/*STAGING DRIVE GROUP NUMBER @Y30LB02*/')SKIP;           26300003
*             ANS('    2  TUNERES2  CHAR(1) INIT('||QUOTE               26350003
*             ('00')||'X),/*RESERVED AREA @Y30LB02*/')SKIP;             26400003
*             ANS('    2  TUNEASID  CHAR(2) INIT('||QUOTE               26450003
*             ('0000')||'X),/*ADDRESS SPACE ID @Y30LB02*/')SKIP;        26500003
*             ANS('    2  TUNEECB  FIXED(31) INIT(0),'||                26550003
*             '/*EVENT CONTROL BLOCK @Y30LB02*/')SKIP;                  26600003
*             ANS('    2  TUNEDATA  FIXED(31)INIT(0);'||                26650003
*             '/*DATA PARAMETER @Y30LB02*/')SKIP;                       26700003
*             GO TO FINISH;    /*BRANCH TO END               @Y30LB02*/ 26750003
*/*                                                          @Y30LB02*/ 26800003
*ATTRLST:                                                               26850003
*/*                                                          @Y30LB02*/ 26900003
*             ANS('/*******************************************'||      26950003
*                 '************** @Y30LB02*/')SKIP;                     27000003
*             ANS('/*MACMEAN  MSSC TUNING MACRO                '||      27050003
*                 '               @Y30LB02*/')SKIP;                     27100003
*             ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||      27150003
*                 '               @Y30LB02*/')SKIP;                     27200003
*             ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||      27250003
*                 '               @Y30LB02*/')SKIP;                     27300003
*             ANS('/*******************************************'||      27350003
*                 '************** @Y30LB02*/')SKIP;                     27400003
*             ANS('DCL 1 '||MF(2)||' '||MF(3)||','||                    27450003
*             ' /*TUNING REQUEST BLOCK @Y30LB02*/')SKIP;                27500003
*             ANS('    2  TUNELEN  FIXED(31),'||                        27550003
*             '/*LEN OF TUNING REQ BLK 20 BYTES @Y30LB02*/')SKIP;       27600003
*             ANS('    2  TUNEOPCD CHAR(1),'||                          27650003
*             '/*TUNING MACRO OPCODE @YM02853*/')SKIP;                  27700003
*             ANS('    2  TUNERES1 CHAR(1),'||                          27750003
*             '/*RESERVED AND ZERO @Y30LB02*/')SKIP;                    27800003
*             ANS('    2  TUNEFLAG BIT(16),'||                          27850003
*             '/*TWO BYTE ATTRIBUTE AREA @Y30LB02*/')SKIP;              27900003
*             ANS('       3  TUNMODE BIT(1),/*IF ON, THEN'||            27950003
*             ' MODIFY MODE-OFF RESULT IN DISPLAY @Y30LB02*/')SKIP;     28000003
*             ANS('       3  TUNRES1 BIT(7),/*SEVEN BITS'||             28050003
*             ' RESERVED @Y30LB02*/')SKIP;                              28100003
*             ANS('       3  TUNTHRES BIT(1),/*DISPLAY OR'||            28150003
*             ' MODIFY THRESHOLDS @Y30LB02*/')SKIP;                     28200003
*             ANS('       3  TUNSLICE BIT(1),/*DISPLAY OR'||            28250003
*             ' MODIFY SLICE RANGES @Y30LB02*/')SKIP;                   28300003
*             ANS('       3  TUNCLOCK BIT(1),/*DISPLAY OR'||            28350003
*             ' MODIFY LRU CLOCK @Y30LB02*/')SKIP;                      28400003
*             ANS('       3  TUNRES2 BIT(5),/*5 BITS'||                 28450003
*             ' RESERVED @Y30LB02*/')SKIP;                              28500003
*             ANS('    2  TUNESDGN  FIXED(8) ,'||                       28550003
*             '/*STAGING DRIVE GROUP NUMBER @Y30LB02*/')SKIP;           28600003
*             ANS('    2  TUNERES2  CHAR(1) ,'||                        28650003
*             '/*RESERVED AREA @Y30LB02*/')SKIP;                        28700003
*             ANS('    2  TUNEASID  CHAR(2) ,'||                        28750003
*             '/*ADDRESS SPACE ID @Y30LB02*/')SKIP;                     28800003
*             ANS('    2  TUNEECB  FIXED(31) ,'||                       28850003
*             '/*EVENT CONTROL BLOCK @Y30LB02*/')SKIP;                  28900003
*             ANS('    2  TUNEDATA  FIXED(31);'||                       28950003
*             '/*DATA PARAMETER @Y30LB02*/')SKIP;                       29000003
*             GO TO FINISH;    /*BRANCH TO END               @Y30LB02*/ 29050003
*/*                                                          @Y30LB02*/ 29100003
*/*      PROCESSING THE EXECUTE MACRO FORM                   @Y30LB02*/ 29150003
*/*                                                          @Y30LB02*/ 29200003
*EFORM:                                                                 29250003
*   IF MF(1) ¬= 'E' THEN       /*EXECUTE FORM SPECIFIED?     @Y30LB02*/ 29300003
*        GO TO SFORM;          /*NO, BRANCH TO CK FOR STD    @Y30LB02*/ 29350003
*   IF MF(2) = '' THEN         /*LIST NAME SPECIFIED?        @Y30LB02*/ 29400003
*        DO;                   /*SETUP ERROR MESSAGE         @Y30LB02*/ 29450003
*             ERSW=1;          /*SET ERROR SWITCH ON         @Y30LB02*/ 29500003
*             RETCODE=12;      /*SET RETURN CODE TO 12       @Y30LB02*/ 29550003
*             ANS MSG('  ICB612I - MF(2) MUST CONTAIN '||               29600003
*                'REQ BLK NAME IF EXEC '||                              29650003
*                'MACRO FORM REQUESTED ')SKIP;             /*@Y30LB02*/ 29700003
*             GO TO CKSW;      /*BRANCH TO CK ERROR SWITCH   @Y30LB02*/ 29750003
*        END;                  /*                            @Y30LB02*/ 29800003
*/*                                                          @Y30LB02*/ 29850003
*   ELSE              /*CONTINUE EXECUTE PROCESSING          @Y30LB02*/ 29900003
*        ANS('/*******************************************'||           29950003
*            '************** @Y30LB02*/')SKIP;                          30000003
*        ANS('/*MACMEAN  MSSC TUNING MACRO                '||           30050003
*            '               @Y30LB02*/')SKIP;                          30100003
*        ANS('/*VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00   '||           30150003
*            '               @Y30LB02*/')SKIP;                          30200003
*        ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '||           30250003
*            '               @Y30LB02*/')SKIP;                          30300003
*        ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '||           30350003
*            '               @Y30LB02*/')SKIP;                          30400003
*        ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'||           30450003
*            '               @Y30LB02*/')SKIP;                          30500003
*        ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '||           30550003
*            '               @Y30LB02*/')SKIP;                          30600003
*        ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '||           30650003
*            '               @Y30LB02*/')SKIP;                          30700003
*        ANS('/*******************************************'||           30750003
*            '************** @Y30LB02*/')SKIP;                          30800003
*/*                                                          @Y30LB02*/ 30850003
*        ANS('RFY(TUNER1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;        30900003
*        ANS('TUNER1=ADDR('||MF(2)||');/*R1 POINTER TO'||               30950003
*        ' REQUEST BLOCK @Y30LB02*/')SKIP;                              31000003
*   IF MF(3) = 'COMPLETE' THEN  /*COMPLETE SPECIFIED?        @Y30LB02*/ 31050003
*     DO;                       /*PREPARE TO ZERO BLK        @Y30LB02*/ 31100003
*        ANS(' '||MF(2)||'='||MF(2)||'&&'||MF(2)||';'||                 31150003
*        '/*ZERO REQUEST BLOCK @Y30LB02*/')SKIP;                        31200003
*     END;                      /*                           @Y30LB02*/ 31250003
*        ANS('TUNELEN= '||QUOTE(TUNLEN)||'X;/*LENGTH '||                31300003
*        ' OF TUNING REQUEST @Y30LB02*/')SKIP;                          31350003
*        ANS('TUNEOPCD= '||QUOTE(OPCODE)||'X;/*TUNING'||                31400003
*        ' OPCODE @Y30LB02*/')SKIP;                                     31450003
*/*                                                          @Y30LB02*/ 31500003
*CKSW:                                                                  31550003
*   IF ERSW=1 THEN          /*IS ERROR SWITCH ON?            @Y30LB02*/ 31600003
*        GO TO FINISH;      /*YES, BRANCH TO END             @Y30LB02*/ 31650003
*   ELSE                    /*PROCESS PARAMETERS             @Y30LB02*/ 31700003
*        GO TO COMPROC;     /*BRANCH TO PROCESS PARAMETERS   @Y30LB02*/ 31750003
*/*                                                          @Y30LB02*/ 31800003
*SFORM:                                                                 31850003
*   IF MF(1) ¬= '' THEN     /*STANDARD FORM?                 @Y30LB02*/ 31900003
*     DO;                   /*                               @Y30LB02*/ 31950003
*        ERSW=1;            /*SET ERROR SWITCH TO 1          @Y30LB02*/ 32000003
*        RETCODE=12;        /*SET RETURN CODE TO 12          @Y30LB02*/ 32050003
*        ANS MSG('  ICB615I - INVALID MF PARAMETER'||                   32100003
*                ' SPECIFIED, MUST BE L,E, OR NULL')SKIP;  /*@Y30LB02*/ 32150003
*        GO TO CKSW2;       /*BRANCH TO CK SWITCH            @Y30LB02*/ 32200003
*     END;                  /*                               @Y30LB02*/ 32250003
*/*                                                          @Y30LB02*/ 32300003
*   IF FLAGS = '' THEN      /*FLAGS SPECIFIED?               @Y30LB02*/ 32350003
*     DO;                   /*                               @Y30LB02*/ 32400003
*        ERSW=1;            /*SET ERROR SWITCH TO 1          @Y30LB02*/ 32450003
*        RETCODE=12;        /*SET RETURN CODE TO 12          @Y30LB02*/ 32500003
*        ANS MSG('  ICB607I - FLAGS MUST BE SPECIFIED  '||              32550003
*        'FOR STANDARD FORM MACRO ')SKIP;                  /*@Y30LB02*/ 32600003
*        GO TO CKSW2;       /*BRANCH TO CK SWITCH            @Y30LB02*/ 32650003
*     END;                  /*                               @Y30LB02*/ 32700003
*/*                                                          @Y30LB02*/ 32750003
*CKSW2:                                                                 32800003
*/*                                                          @Y30LB02*/ 32850003
*   IF ERSW = 1 THEN        /*ERROR SWITCH ON?               @Y30LB02*/ 32900003
*        GO TO FINISH;      /*YES, BRANCH TO END             @Y30LB02*/ 32950003
*/*                                                          @Y30LB02*/ 33000003
*   IF TUNETES = 1 THEN     /*STANDARD FORM INVOKED BEFORE?  @Y30LB02*/ 33050003
*     DO;                   /*DO NOT PUT OUT DECLARES        @Y30LB02*/ 33100003
*        ANS('/*******************************************'||           33150003
*            '************** @Y30LB02*/')SKIP;                          33200003
*        ANS('/*MACMEAN  MSSC TUNING MACRO                '||           33250003
*            '               @Y30LB02*/')SKIP;                          33300003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           33350003
*            '               @Y30LB02*/')SKIP;                          33400003
*        ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '||           33450003
*            '               @Y30LB02*/')SKIP;                          33500003
*        ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||           33550003
*            '               @Y30LB02*/')SKIP;                          33600003
*        ANS('/*******************************************'||           33650003
*            '************** @Y30LB02*/')SKIP;                          33700003
*        ANS('RFY(TUNER1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;        33750003
*        ANS('TUNER1=ADDR(TUNELEN);/*R1 PTR TO BLK @Y30LB02*/')SKIP;    33800003
*        ANS('TUNELEN= '||QUOTE(TUNLEN)||'X;/*LENGTH OF '||             33850003
*        'TUNING REQUEST @Y30LB02*/')SKIP;                              33900003
*        ANS('TUNEOPCD='||QUOTE(OPCODE)||'X;/*TUNING'||                 33950003
*        ' OPCODE @Y30LB02*/')SKIP;                                     34000003
*        GO TO COMPROC;       /*BRANCH TO CK PARAMETERS      @Y30LB02*/ 34050003
*     END;                    /*                             @Y30LB02*/ 34100003
*/*                                                          @Y30LB02*/ 34150003
*   ELSE                      /*PUT OUT DECLARES             @Y30LB02*/ 34200003
*     DO;                     /*                             @Y30LB02*/ 34250003
*        ANS('/*******************************************'||           34300003
*            '************** @Y30LB02*/')SKIP;                          34350003
*        ANS('/*MACMEAN  MSSC TUNING MACRO                '||           34400003
*            '               @Y30LB02*/')SKIP;                          34450003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           34500003
*            '               @Y30LB02*/')SKIP;                          34550003
*        ANS('/*THIS IS THE STANDARD FORM - TUNING MACRO  '||           34600003
*            '               @Y30LB02*/')SKIP;                          34650003
*        ANS('/*******************************************'||           34700003
*            '************** @Y30LB02*/')SKIP;                          34750003
*/*                                                          @Y30LB02*/ 34800003
*        ANS('RFY(TUNER1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;        34850003
*        ANS('TUNER1=ADDR(TUNELEN);/*R1 PTR  '||                        34900003
*        'TO LIST @Y30LB02*/')SKIP;                                     34950003
*        ANS('DCL 1 TUNELST  STATIC LOCAL,'||                           35000003
*        ' /*TUNING REQUEST BLOCK @Y30LB02*/')SKIP;                     35050003
*        ANS('    2  TUNELEN  FIXED(31)INIT('||QUOTE                    35100003
*        ('14')||'X),/*LEN OF TUNING REQ BLK @Y30LB02*/')SKIP;          35150003
*        ANS('    2  TUNEOPCD CHAR(1)INIT('||QUOTE                      35200003
*        ('1C')||'X),/*TUNING MACRO OPCODE @YM02853*/')SKIP;            35250003
*        ANS('    2  TUNERES1 CHAR(1)INIT('||QUOTE                      35300003
*        ('00')||'X),/*RESERVED AND ZERO @Y30LB02*/')SKIP;              35350003
*        ANS('    2  TUNEFLAG BIT(16)INIT('||QUOTE                      35400003
*        ('0000000000000000')||'B),/*TWO BYTE ATTRI'||                  35450003
*        'BUTE AREA @Y30LB02*/')SKIP;                                   35500003
*        ANS('       3  TUNMODE BIT(1),/*IF ON, THEN'||                 35550003
*        ' MODIFY MODE-OFF RESULT IN DISPLAY @Y30LB02*/')SKIP;          35600003
*        ANS('       3  TUNRES1 BIT(7),/*SEVEN BITS'||                  35650003
*        ' RESERVED @Y30LB02*/')SKIP;                                   35700003
*        ANS('       3  TUNTHRES BIT(1),/*DISPLAY OR'||                 35750003
*        ' MODIFY THRESHOLDS @Y30LB02*/')SKIP;                          35800003
*        ANS('       3  TUNSLICE BIT(1),/*DISPLAY OR'||                 35850003
*        ' MODIFY SLICE RANGES @Y30LB02*/')SKIP;                        35900003
*        ANS('       3  TUNCLOCK BIT(1),/*DISPLAY OR'||                 35950003
*        ' MODIFY LRU CLOCK @Y30LB02*/')SKIP;                           36000003
*        ANS('       3  TUNRES2 BIT(5),/*5 BITS'||                      36050003
*        ' RESERVED @Y30LB02*/')SKIP;                                   36100003
*        ANS('    2  TUNESDGN  FIXED(8) INIT(0),'||                     36150003
*        '/*STAGING DRIVE GROUP NUMBER @Y30LB02*/')SKIP;                36200003
*        ANS('    2  TUNERES2  CHAR(1) INIT('||QUOTE                    36250003
*        ('00')||'X),/*RESERVED AREA @Y30LB02*/')SKIP;                  36300003
*        ANS('    2  TUNEASID  CHAR(2) INIT('||QUOTE                    36350003
*        ('0000')||'X),/*ADDRESS SPACE ID @Y30LB02*/')SKIP;             36400003
*        ANS('    2  TUNEECB  FIXED(31) INIT(0),'||                     36450003
*        '/*EVENT CONTROL BLOCK @Y30LB02*/')SKIP;                       36500003
*        ANS('    2  TUNEDATA  FIXED(31)INIT(0);'||                     36550003
*        '/*DATA PARAMETER @Y30LB02*/')SKIP;                            36600003
*        TUNETES=TUNETES+1;   /*INCREMENT INVOCATION CTR     @Y30LB02*/ 36650003
*        GO TO COMPROC;       /*BRANCH TO CHECK PARAMETERS   @Y30LB02*/ 36700003
*     END;                    /*                             @Y30LB02*/ 36750003
*/*                                                          @Y30LB02*/ 36800003
*/*********************************************************  @Y30LB02*/ 36850003
*/*      COMMON PROCESSING FOR EXECUTE AND STANDARD FORMS    @Y30LB02*/ 36900003
*/*      THE FOLLOWING CODE WILL CHECK TO DETERMINE WHAT     @Y30LB02*/ 36950003
*/*      PARAMETERS ARE SPECIFIED AND PLACE THE VALUE IN     @Y30LB02*/ 37000003
*/*      THE REQUEST BLOCK                                   @Y30LB02*/ 37050003
*/*********************************************************  @Y30LB02*/ 37100003
*COMPROC:                                                               37150003
*   IF FLAGS ¬= '' THEN       /*FLAGS SPECIFIED?             @Y30LB02*/ 37200003
*        ANS('TUNEFLAG= '||FLAGS||';/*VALUE OF FLAGS '||                37250003
*        'PARAMETER @Y30LB02*/')SKIP;                                   37300003
*/*                                                          @Y30LB02*/ 37350003
*   IF SDGNUM ¬= '' THEN      /*STAGING DRIVE GROUP SPECD    @Y30LB02*/ 37400003
*        ANS('TUNESDGN= '||SDGNUM||';/*STAGING DRIVE'||                 37450003
*        ' GROUP NUMBER LOADED @Y30LB02*/')SKIP;                        37500003
*/*                                                          @Y30LB02*/ 37550003
*   IF DATA ¬= '' THEN        /*DATA SPECIFIED?              @Y30LB02*/ 37600003
*        ANS('TUNEDATA= '||DATA||';/*VALUE OF DATA '||                  37650003
*        'PARAMETER @Y30LB02*/')SKIP;                                   37700003
*/*                                                          @Y30LB02*/ 37750003
*   IF ECB ¬= '' THEN         /*ECB SPECIFIED?               @Y30LB02*/ 37800003
*        ANS('TUNEECB=ADDR'||ECB||';/*EVENT CONTROL'||                  37850003
         ' BLOCK ADDRESS LOADED @Y30LB02*/')SKIP;                       37900003
*/********************************************************   @Y30LB02*/ 37950003
*/*      THIS SECTION OF CODE WILL INVOKE SVC 126 AND        @Y30LB02*/ 38000003
*/*      SET THE PROPER RETURN CODE, THEN END PROCESSING     @Y30LB02*/ 38050003
*/********************************************************   @Y30LB02*/ 38100003
*        ANS('SVC (126);/*INVOKE THE SVC  @Y30LB02*/')SKIP;             38150003
*        ANS('RFY (TUNER1)UNRSTD;/*UNRSTD REG ONE  @Y30LB02*/')SKIP;    38200003
*/*                                                          @Y30LB02*/ 38250003
*FINISH:                                                                38300003
*        RETURN CODE(RETCODE);   /*SET THE RETURN CODE       @Y30LB02*/ 38350003
*        %END;                   /*                          @Y30LB02*/ 38400003
./  ADD  SSI=42090056,NAME=ICBVARY
* %/*  START OF SPECIFICATIONS****                             @Y30LB02 00050003
.*                                                             @Y30LB02 00100003
.*01   MODULE-NAME = ICBVARY                                   @Y30LB02 00150003
.*                                                             @Y30LB02 00200003
.*01   DESCRIPTIVE-NAME = VARYON/VARYOFF MACRO                 @Y30LB02 00250003
.*                                                             @Y30LB02 00300003
.*01   COPYRIGHT = NONE                                        @Y30LB02 00350003
.*                                                             @Y30LB02 00400003
.*01   STATUS = OS/VS1 RELEASE 4, OS/VS2 RELEASE 3             @Y30LB02 00450003
.*                                                             @Y30LB02 00500003
.*01   FUNCTION = REQUEST VARYON/VARYOFF OF SS1 DEVICES        @Y30LB02 00550003
.*                BY THE MSC                                   @Y30LB02 00600003
.*                                                             @Y30LB02 00650003
.*01   NOTES = AS FOLLOWS:                                     @Y30LB02 00700003
.*                                                             @Y30LB02 00750003
.*02     CODE = MACRO IS BILINGUALLY CODED                     @Y30LB02 00800003
.*                                                             @Y30LB02 00850003
.*02     RESTRICTIONS = THE FOLLOWING PREFIXES SHOULD BE       @Y30LB02 00900003
.*                      AVOIDED IN THE USER'S INVOCATION:      @Y30LB02 00950003
.*                      ICB, VON, AND VOF.                     @Y30LB02 01000003
.*                                                             @Y30LB02 01050003
.*02   REGISTER-CONVENTIONS = FOLLOWS NORMAL USE OF REGISTERS  @Y30LB02 01100003
.*                              BY MACROS: R0,R1,R14, AND R15  @Y30LB02 01150003
.*                                                             @Y30LB02 01200003
.*01   MODULE-TYPE = MACRO                                     @Y30LB02 01250003
.*                                                             @Y30LB02 01300003
.*02     PROCESSOR = PLS2 AND ASSEMBLER                        @Y30LB02 01350003
.*                                                             @Y30LB02 01450003
.*02     ATTRIBUTES = REUSABLE                                 @Y30LB02 01500003
.*                                                             @Y30LB02 01550003
.*02     ENTRY-POINT = ICBVARY                                 @Y30LB02 01600003
.*                                                             @Y30LB02 01650003
.*02     PURPOSE = THE VARY ON REQUEST NOTIFIES THE MSS        @Y30LB02 01700003
.*       THAT IT CAN START USING  A SPECIFIED ADDRESSABLE      @Y30LB02 01750003
.*       UNIT; THE VARY OFF REQUEST NOTIFIES THE MSS TO        @Y30LB02 01800003
.*       STOP USING A SPECIFIED ADDRESSABLE UNIT (E.G.         @Y30LB02 01850003
.*       MSF, DRD, DASD UNIT).                                 @Y30LB02 01900003
.*                                                             @Y30LB02 01950003
.*02     LINKAGE = SVC 126                                     @Y30LB02 02000003
.*                                                             @Y30LB02 02050003
.*01  INPUT = PARAMETERS SPECIFIED ON THE PLS/BAL MACRO        @Y30LB02 02100003
.*            INVOCATION                                       @Y30LB02 02150003
.*                                                             @Y30LB02 02200003
.* VARY-ON:  THIS REQUEST IS ISSUED WHEN                       @Y30LB02 02250003
.*  A UNIT PREVIOUSLY ADDRESSABLE TO THE MSC                   @Y30LB02 02300003
.*  IS AVAILABLE FOR USE.  THE UNIT SPECIFIED MAY BE           @Y30LB02 02350003
.*  EITHER A  SUBSYSTEM DASD, DRD, CONTROLLER, STAGING         @Y30LB02 02400003
.*  ADAPTER(SA), MSF OR UC0 OF A MSF.                          @Y30LB02 02450003
.*  VARY-ON COMPLETION IS INDICATED BY DEVICE END.             @Y30LB02 02500003
.*                                                             @Y30LB02 02550003
.*                                                             @Y30LB02 02600003
.* VARY-OFF:  THIS REQUEST IS ISSUED WHEN THE                  @Y30LB02 02650003
.*  MSC IS TO STOP USING A  SPECIFIC UNIT.  THE UNIT           @Y30LB02 02700003
.*  SPECIFIED MAY BE EITHER A SUBSYSTEM DASD, DRD,             @Y30LB02 02750003
.*  CONTROLLER, STAGING ADAPTER(SA), MSF OR UC0 OF A           @Y30LB02 02800003
.*  MSF.  VARY-OFF COMPLETION IS INDICATED BY DEVICE           @Y30LB02 02850003
.*  END, EXCEPT FOR A DASD WITH THE STAGING DASD ATTRIBUTE.    @Y30LB02 02900003
.*                                                             @Y30LB02 02950003
.* MACRO SYNTAX                                                @Y30LB02 03000003
.*   LIST FORM                                                 @Y30LB02 03050003
.*                                                             @Y30LB02 03100003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03150003
.*                                                             @Y30LB02 03200003
.*ICBVARY  MF=L - (BAL)          MF=(L,MAP) - BAL              @Y30LB02 03250003
.*         MF(L,NAME/(R))-PLS    MF(L,NAME/(R),ATTR)-PLS       @Y30LB02 03300003
.*         TYPE=VON/VOF                                        @Y30LB02 03350003
.*                                                             @Y30LB02 03400003
.*   STANDARD FORM                                             @Y30LB02 03450003
.*                                                             @Y30LB02 03500003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03550003
.*                                                             @Y30LB02 03600003
.*ICBVARY  TYPE=VON/VOF          ECB=ADDR/(R)                  @Y30LB02 03650003
.*         SSID=ADDR/(R)         FLAGS=ADDR/(R)                @Y30LB02 03700003
.*                               RUA=ADDR/(R)                  @Y30LB02 03750003
.*                                                             @Y30LB02 03800003
.* EXECUTE FORM                                                @Y30LB02 03850003
.*                                                             @Y30LB02 03900003
.* VERB    REQUIRED PARMS        OPTIONAL PARMS                @Y30LB02 03950003
.*                                                             @Y30LB02 04000003
.*ICBVARY  MF(E,NAME/(R))       MF(E,NAME/(R),COMPLETE)-PLS    @Y30LB02 04050003
.*         TYPE=VON/VOF         SSID=ADDR/(R)                  @Y30LB02 04100003
.*                              ECB=ADDR/(R)                   @Y30LB02 04150003
.*                              RUA=ADDR/(R)                   @Y30LB02 04200003
.*                              FLAGS=ADDR/(R)                 @Y30LB02 04250003
.*                                                             @Y30LB02 04300003
.*   KEYWORD PARAMETERS:                                       @Y30LB02 04350003
.*                                                             @Y30LB02 04400003
.*   MF  -  MACRO FORMAT: THIS PARAMETER DESCRIBES THE         @Y30LB02 04450003
.*          MACRO FORMAT AND MAY GIVE THE ADDRESS OR           @Y30LB02 04500003
.*          ADDRESS IN A REGISTER WHERE THE REQUEST BLOCK      @Y30LB02 04550003
.*          IS STORED.                                         @Y30LB02 04600003
.*                                                             @Y30LB02 04650003
.*          L - LIST FORM: THE EXPANSION OF THE L-FORM         @Y30LB02 04700003
.*              MACRO WILL RESULT IN A REQUEST BLOCK WITH      @Y30LB02 04750003
.*              THE ONLY NON-ZERO FIELDS BEING THE OPCODE      @Y30LB02 04800003
.*              AND LENGTH FIELDS.                             @Y30LB02 04850003
.*                                                             @Y30LB02 04900003
.*          (1) 'MAP' - IF MAP IS SPECIFIED WITH THE           @Y30LB02 04950003
.*              ASSEMBLER MACRO CALL A DSECT EQUIVALENT TO     @Y30LB02 05000003
.*              A MAPPING MACRO IS PRODUCED.                   @Y30LB02 05050003
.*                                                             @Y30LB02 05100003
.*          (2) NAME - THE MACRO INVOKER MUST SPECIFY A        @Y30LB02 05150003
.*              NAME FOR HIS STRUCTURE WHEN INVOKING THE       @Y30LB02 05200003
.*              PLS LIST FORM.                                 @Y30LB02 05250003
.*                                                             @Y30LB02 05300003
.*          (3) ATTRIBUTE - THE MACRO WILL PLACE ANY PLS       @Y30LB02 05350003
.*              ATTRIBUTE SPECIFIED IN THE MACRO INVOCATION    @Y30LB02 05400003
.*              IN AN UNINITIALIZED REQUEST BLOCK.  ATTRI-     @Y30LB02 05450003
.*              BUTE EXAMPLE:                                  @Y30LB02 05500003
.*                                                             @Y30LB02 05550003
.*              CHAR, FIXED, STATIC LOCAL, NONLOCAL,           @Y30LB02 05600003
.*              BASED(*), ETC.                                 @Y30LB02 05650003
.*                                                             @Y30LB02 05700003
.*       NULL - STANDARD FORM: THE EXPANSION OF THIS FORM      @Y30LB02 05750003
.*              CONSISTS OF A REQUEST BLOCK, A LINKAGE         @Y30LB02 05800003
.*              INSTRUCTION, AND, POSSIBLY, PARAMETER          @Y30LB02 05850003
.*              BINDING INSTRUCTION.                           @Y30LB02 05900003
.*                                                             @Y30LB02 05950003
.*          E - EXECUTABLE FORM: THE EXPANSION OF THIS FORM    @Y30LB02 06000003
.*              CONSISTS OF A LINKAGE INSTRUCTION AND          @Y30LB02 06050003
.*              POSSIBLY, PARAMETER BINDING INSTRUCTIONS.      @Y30LB02 06100003
.*                                                             @Y30LB02 06150003
.*              SUB-PARAMETERS                                 @Y30LB02 06200003
.*                                                             @Y30LB02 06250003
.*              (1)  AN E MUST BE SPECIFIED IN THE FIRST       @Y30LB02 06300003
.*                   SUB-PARAMETER POSITION.  THIS INDICATES   @Y30LB02 06350003
.*                   THAT THE MACRO IS IN EXECUTABLE FORM.     @Y30LB02 06400003
.*                                                             @Y30LB02 06450003
.*              (2)  A NAME OR A REGISTER MUST BE SPECIFIED    @Y30LB02 06500003
.*                   IN THE SECOND SUB-PARAMETER.              @Y30LB02 06550003
.*                                                             @Y30LB02 06600003
.*              (3)  'COMPLETE' - COMPLETE WILL CAUSE THE      @Y30LB02 06650003
.*                   MACRO TO ZERO OUT THE REQUEST BLOCK.      @Y30LB02 06700003
.*                   AFTER ZEROING THE REQUEST BLOCK THE       @Y30LB02 06750003
.*                   FUNCTION OPCODE AND LENGTH ARE PLACED     @Y30LB02 06800003
.*                   IN THE REQUEST BLOCK.                     @Y30LB02 06850003
.*                                                             @Y30LB02 06900003
.*                                                             @Y30LB02 06950003
.* TYPE- INDICATES WHETHER THE REQUEST IS FOR THE              @Y30LB02 07000003
.*       VARY-ON (VON) OR VARY-OFF (VOF) COMMAND.              @Y30LB02 07050003
.*                                                             @Y30LB02 07100003
.* FLAGS -  THE TWO BYTE FIELD WHICH INDICATES THE             @Y30LB02 07150003
.*  FUNCTION(S) TO BE PERFORMED.  THE FLAGS FIELD IS ONLY      @Y30LB02 07200003
.*  VALID IF THE REQUEST IS FOR SUBSYSTEM DASD.                @Y30LB02 07250003
.*  IF A SUBSYSTEM'S STAGING DEVICE IS REQUESTED, THEN         @Y30LB02 07300003
.*  ONE AND ONLY ONE FLAG BIT MUST BE SET TO '1'B.             @Y30LB02 07350003
.*                                                             @Y30LB02 07400003
.*       -------------------------------------------------     @Y30LB02 07450003
.*       | X | X | X | X |OTHER BITS MUST BE SET TO ZERO |     @Y30LB02 07500003
.*       -------------------------------------------------     @Y30LB02 07550003
.*                                                             @Y30LB02 07600003
.*       BIT 0------------'1'B     STAGING DASD                @Y30LB02 07650003
.*                         '0'B    NO FUNCTION                 @Y30LB02 07700003
.*                                                             @Y30LB02 07750003
.*       BIT 1------------'1'B     REAL DASD                   @Y30LB02 07800003
.*                         '0'B    NO FUNCTION                 @Y30LB02 07850003
.*                                                             @Y30LB02 07900003
.*       BIT 2------------'1'B     NEUTRAL DASD                @Y30LB02 07950003
.*                         '0'B    NO FUNCTION                 @Y30LB02 08000003
.*                                                             @Y30LB02 08050003
.*       BIT 3------------'1'B     TEST DASD                   @Y30LB02 08100003
.*                         '0'B    NO FUNCTION                 @Y30LB02 08150003
.*                                                             @Y30LB02 08200003
.*       BITS 4-15--------         |RESERVED AND MUST BE       @Y30LB02 08250003
.*                                  ZERO|                      @Y30LB02 08300003
.*                                                             @Y30LB02 08350003
.*  STAGING DASD                                               @Y30LB02 08400003
.*                                                             @Y30LB02 08450003
.*   VARY-ON:  THE SPECIFIED SUBSYSTEM DASD IS MADE            @Y30LB02 08500003
.*   AVAILABLE FOR STAGING SPACE.  THE SSID PARAMETER          @Y30LB02 08550003
.*   MUST BE SPECIFIED.                                        @Y30LB02 08600003
.*                                                             @Y30LB02 08650003
.*  VARY-OFF:  THE SPECIFIED SUBSYSTEM DASD IS MADE            @Y30LB02 08700003
.*   UNAVAILABLE FOR STAGING SPACE.  THE CALLER MUST           @Y30LB02 08750003
.*   SPECIFY THE  ECB PARAMETER IN ORDER TO RECEIVE COMPLE-    @Y30LB02 08800003
.*   TION NOTIFICATION OF NECESSARY DESTAGING.                 @Y30LB02 08850003
.*   BOTH THE SSID AND ECB PARAMETERS MUST BE                  @Y30LB02 08900003
.*   SPECIFIED.                                                @Y30LB02 08950003
.*                                                             @Y30LB02 09000003
.*  REAL                                                       @Y30LB02 09050003
.*                                                             @Y30LB02 09100003
.*  VARY-ON:  USE OF THIS ATTRIBUTE CAUSES                     @Y30LB02 09150003
.*   THE SSID SPECIFIED TO BECOME A REAL DASD                  @Y30LB02 09200003
.*   UNTIL VARIED OFF.                                         @Y30LB02 09250003
.*                                                             @Y30LB02 09300003
.*  VARY-OFF: APPLIES ONLY TO DASD WHICH HAVE BEEN             @Y30LB02 09350003
.*   PREVIOUSLY VARIED ON WITH THE REAL ATTRIBUTE.             @Y30LB02 09400003
.*   THE SPINDLE WILL NO LONGER BE DESIGNATED AS REAL.         @Y30LB02 09450003
.*                                                             @Y30LB02 09500003
.*   NEUTRAL                                                   @Y30LB02 09550003
.*                                                             @Y30LB02 09600003
.*  VARY-OFF: THIS ATTRIBUTE APPLIES TO SUBSYSTEM              @Y30LB02 09650003
.*   DASD VARIED ON WITH THE STAGING SUBSYSTEM                 @Y30LB02 09700003
.*   DASD ATTRIBUTE.  THE SPECIFIED DASD IS MARKED             @Y30LB02 09750003
.*   UNAVAILABLE FOR THE MSC AFTER CURRENT STAGE/              @Y30LB02 09800003
.*   DESTAGE ACTIVITY IS COMPLETE.                             @Y30LB02 09850003
.*   A VARYON WITH THE STAGING DASD ATTRIBUTE                  @Y30LB02 09900003
.*   NULLIFIES THE NEUTRAL STATE.                              @Y30LB02 09950003
.*                                                             @Y30LB02 10000003
.*  TEST                                                       @Y30LB02 10050003
.*                                                             @Y30LB02 10100003
.*  VARY-OFF: FOR USE BY OLTEP.                                @Y30LB02 10150003
.*   THE RUA PARAMETER IS REQUIRED.                            @Y30LB02 10200003
.*   THE HOSTID WILL BE INSERTED BY THE MSSC-SVC.              @Y30LB02 10250003
.*   THE PATH INDICATED BY THE RUA (MAY BE                     @Y30LB02 10300003
.*   EITHER A VIRTUAL 3330 UCB OR A REAL 3330                  @Y30LB02 10350003
.*   UCB) WILL BE DESIGNATED REAL FOR OLTEP'S USE.             @Y30LB02 10400003
.*                                                             @Y30LB02 10450003
.*                                                             @Y30LB02 10500003
.* SSID  - SUB-SYSTEM IDENTIFICATION:  A UNIQUE NUMBER         @Y30LB02 10550003
.*  WHICH APPEARS EXTERNALLY ON EACH  UNIT                     @Y30LB02 10600003
.*  IN THE SUBSYSTEM. THE SSID PARAMETER MUST                  @Y30LB02 10650003
.*  BE SPECIFIED WITH EACH VARY REQUEST.                       @Y30LB02 10700003
.*                                                             @Y30LB02 10750003
.* RUA  -   THE UNIT (UCB) TO BE USED BY OLTEP.                @Y30LB02 10800003
.*                                                             @Y30LB02 10850003
.* ECB - THE NAME OF THE EVENT CONTROL BLOCK;                  @Y30LB02 10900003
.*  THE CALLER WILL BE NOTIFIED WHEN THE VARY OFF              @Y30LB02 10950003
.*  PROCESS HAS COMPLETED.  THE ECB PARAMETER IS REQUIRED      @Y30LB02 11000003
.*  ONLY IF THE STAGING DASD ATTRIBUTE IS SPECIFIED            @Y30LB02 11050003
.*  WITH A VARYOFF REQUEST OF A SUBSYSTEM                      @Y30LB02 11100003
.*  DASD UNIT.  THE ECB IS POSTED WITH A POST CODE             @Y30LB02 11150003
.*  OF 71, 72, 73, 74, ETC.. THE POST CODE WILL  BE            @Y30LB02 11200003
.*  PLACED IN THE LOW-ORDER BYTE OF THE ECB - '7F'X            @Y30LB02 11250003
.*  INDICATES SUCCESSFUL COMPLETION.  THE ECB AREA MUST        @Y30LB02 11300003
.*  BE CLEARED(SET TO BINARY 0) BEFORE INVOKING THE MACRO.     @Y30LB02 11350003
.*                                                             @Y30LB02 11400003
.*01  EXIT-NORMAL = VALID INVOCATION                           @Y30LB02 11450003
.*                                                             @Y30LB02 11500003
.*02     CONDITION = RETURN CODE = 0                           @Y30LB02 11550003
.*                                                             @Y30LB02 11600003
.*02     OUTPUT = IN-LINE PLS/BAL STATEMENTS THAT PERFORM      @Y30LB02 11650003
.*                THE REQUESTED FUNCTION                       @Y30LB02 11700003
.*                                                             @Y30LB02 11750003
.*01  EXIT-ERROR = INVALID INVOCATION                          @Y30LB02 11800003
.*                                                             @Y30LB02 11850003
.*02     CONDITION = RETURN CODE = 12                          @Y30LB02 11900003
.*                                                             @Y30LB02 11950003
.*02     OUTPUT = ERROR MESSAGE AS A COMMENT AT POINT OF       @Y30LB02 12000003
.*                INVOCATION                                   @Y30LB02 12050003
.*                                                             @Y30LB02 12100003
.*01  EXTERNAL REFERENCES = NONE                               @Y30LB02 12150003
.*                                                             @Y30LB02 12200003
.*01  TABLES = NONE                                            @Y30LB02 12250003
.*                                                             @Y30LB02 12300003
.*01  MESSAGES = AS FOLLOWS:                                   @Y30LB02 12350003
.*     ICB600I:  TYPE MUST BE SPECIFIED                        @Y30LB02 12400003
.*     ICB601I:  TYPE IS INCORRECTLY SPECIFIED                 @Y30LB02 12450003
.*     ICB602I:  A NAME FOR THE REQUEST BLOCK MUST BE          @Y30LB02 12500003
.*               SPECIFIED IN MF(2)                            @Y30LB02 12550003
.*     ICB603I:  WARNING-ONLY MF AND TYPE PARAMETERS ARE       @Y30LB02 12600003
.*               VALID FOR LIST FORM                           @Y30LB02 12650003
.*     ICB612I:  MF(2) MUST CONTAIN REQ BLK NAME IF            @Y30LB02 12700003
.*               EXEC MACRO FORM REQUESTED                     @Y30LB02 12750003
.*     ICB613I:  MISSING REQ BLK NAME OR MORE                  @Y30LB02 12800003
.*               THAN 2 SUBPARAMETERS FOR MF                   @Y30LB02 12850003
.*     ICB615I:  INVALID MF PARAMETER SPECIFIED, MUST BE       @Y30LB02 12900003
.*               L, E, OR NULL                                 @Y30LB02 12950003
.*                                                             @Y30LB02 13000003
.*01  CONTROL-BLOCKS = NONE                                    @Y30LB02 13050003
.*                                                             @Y30LB02 13100003
.*01  INNER MACROS = NONE                                      @Y30LB02 13150003
.*                                                             @Y30LB02 13200003
.*01  SYSTEM MACRO = IHBINNRA                                  @Y30LB02 13250003
.*                                                             @Y30LB02 13300003
.*01  CHANGE-ACTIVITY = S/D X04AC02 AND Y30LB02                @Y30LB02 13350003
.*                                                             @Y30LB02 13400003
.**** END OF SPECIFICATIONS ***                                @Y30LB02 13450003
         MACRO                                                          13500003
&SYMBOL  ICBVARY &MF=,&TYPE=,&FLAGS=,&ECB=,&RUA=,&SSID=                 13550003
         LCLC  &LBL                DEFINE MACRO INSTR INDX     @Y30LB02 13600003
         LCLB  &ERSW               DEFINE ERROR SWITCH         @Y30LB02 13650003
&LBL     SETC  'V'.'&SYSNDX'       ASSIGN CHARACTER VALUE      @Y30LB02 13700003
.*                                                             @Y30LB02 13750003
.*       CHECK FOR VALID TYPE SPECIFICATION                    @Y30LB02 13800003
.TYPE    AIF   ('&TYPE' EQ '').NUL                             @Y30LB02 13850003
         AIF   ('&TYPE' EQ 'VON' OR '&TYPE' EQ 'VOF').START    @Y30LB02 13900003
         MNOTE 12,'  ICB601I - TYPE IS INCORRECTLY SPECIFIED'  @Y30LB02 13950003
         MEXIT                                                 @Y30LB02 14000003
.*                                                             @Y30LB02 14050003
.NUL     ANOP                                                  @Y30LB02 14100003
         MNOTE 12,'  ICB600I - TYPE MUST BE SPECIFIED '        @Y30LB02 14150003
         MEXIT                                                 @Y30LB02 14200003
.*                                                             @Y30LB02 14250003
.*       DETERMINATION OF DESIRED MACRO FORM                   @Y30LB02 14300003
.*                                                             @Y30LB02 14350003
.START   AIF   ('&MF(1)' EQ 'L').LFORM      LIST FORM?         @Y30LB02 14400003
         AIF   ('&MF(1)' EQ 'E').EFORM      EXECUTE FORM?      @Y30LB02 14450003
         AIF   ('&MF(1)' EQ '').SFORM       STANDARD FORM?     @Y30LB02 14500003
         MNOTE 12,'  ICB615I - INVALID MF PARAMETER '          @Y30LB02 14550003
         MNOTE 12,'  SPECIFIED, MUST BE L, E, OR NULL.'        @Y30LB02 14600003
&ERSW    SETB  1                                               @Y30LB02 14650003
         AGO   .PROCES                                         @Y30LB02 14700003
.*                                                             @Y30LB02 14750003
.*       PROCESSING OF 'LIST' MACRO FORM                       @Y30LB02 14800003
.*       THE FOLLOWING CODE CHECKS FOR ILLEGAL PARAMETERS ON   @Y30LB02 14850003
.*       THE LIST FORM MACRO AND GIVES WARNING IF FOUND        @Y30LB02 14900003
.*                                                             @Y30LB02 14950003
.LFORM   ANOP                                                  @Y30LB02 15000003
         AIF   ('&FLAGS' NE '' OR '&ECB' NE '' OR '&RUA' NE            *15050003
               '' OR '&SSID' NE '').WARN                       @Y30LB02 15100003
         AGO   .LIST1                                          @Y30LB02 15150003
.*                                                             @Y30LB02 15200003
.WARN    MNOTE 4,'  ICB603I - WARNING-ONLY MF AND TYPE '       @Y30LB02 15250003
         MNOTE 4,'  PARAMETERS ARE VALID FOR LIST FORM '       @Y30LB02 15300003
.*                                                             @Y30LB02 15350003
.LIST1   ANOP                                                  @Y30LB02 15400003
         AIF   ('&TYPE' EQ 'VON').VARYON  VARYON REQUEST?      @Y30LB02 15450003
         AIF   ('&MF(2)' EQ 'MAP').VOFDS  DSECT REQUESTED      @Y30LB02 15500003
*  MACMEAN  VARYOFF MACRO--INITIALIZED LIST FORM               @Y30LB02 15550003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 15600003
&SYMBOL  DS    0F                                              @Y30LB02 15650003
VOFLEN   DC    F'24'               LENGTH OF VOF REQ BLK       @Y30LB02 15700003
VOFOPCD  DC    XL1'0C'             OPCODE PLACED IN REQ        @Y30LB02 15750003
VOFRES1  DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02 15800003
VOFFLAG  DC    XL2'0000'           2-BYTE FLAGS AREA           @Y30LB02 15850003
VOFSSID  DC    XL2'0000'           2-BYTE SSID AREA            @Y30LB02 15900003
VOFRUA   DC    XL2'0000'           2-BYTE RUA AREA             @Y30LB02 15950003
VOFHOST  DC    XL5'0000000000'     5-BYTE HOST ID AREA         @Y30LB02 16000003
VOFRES2  DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02 16050003
VOFASID  DC    XL2'0000'           2-BYTE ASID AREA            @Y30LB02 16100003
VOFECB   DC    XL4'00000000'       4-BYTE AREA FOR ECB         @Y30LB02 16150003
         MEXIT                                                 @Y30LB02 16200003
.*                                                             @Y30LB02 16250003
.VOFDS   ANOP                                                  @Y30LB02 16300003
*  MACMEAN  VARYOFF MACRO--UNINITIALIZED LIST FORM             @Y30LB02 16350003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 16400003
ICBVARY  DSECT                                                 @Y30LB02 16450003
VOFLEN   DS    F                   LENGTH OF VOF 24 DEC        @Y30LB02 16500003
VOFOPCD  DS    XL1                 VOF OPCODE 0C HEX           @Y30LB02 16550003
VOFRES1  DS    XL1                 1-BYTE RESERVED AREA        @Y30LB02 16600003
VOFFLAG  DS    XL2                 2-BYTE FLAGS AREA           @Y30LB02 16650003
VOFSSID  DS    XL2                 2-BYTE SSID AREA            @Y30LB02 16700003
VOFRUA   DS    XL2                 2-BYTE RUA AREA             @Y30LB02 16750003
VOFHOST  DS    CL5                 5-BYTE HOST ID AREA         @Y30LB02 16800003
VOFRES2  DS    XL1                 1-BYTE RESERVED AREA        @Y30LB02 16850003
VOFASID  DS    XL2                 2-BYTE ASID AREA            @Y30LB02 16900003
VOFECB   DS    A                   4-BYTE ECB ADDR             @Y30LB02 16950003
         MEXIT                                                 @Y30LB02 17000003
.*                                                             @Y30LB02 17050003
.VARYON  ANOP                                                  @Y30LB02 17100003
         AIF   ('&MF(2)' EQ 'MAP').VONDS   DSECT REQUEST       @Y30LB02 17150003
*  MACMEAN  VARYON MACRO--INITIALIZED LIST FORM                @Y30LB02 17200003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 17250003
&SYMBOL  DS    0F                                              @Y30LB02 17300003
VONLEN   DC    F'12'               LENGTH OF VON REQ BLK       @Y30LB02 17350003
VONOPCD  DC    XL1'0A'             OPCODE PLACED IN BLOCK      @Y30LB02 17400003
VONRES1  DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02 17450003
VONFLAG  DC    XL2'0000'           2-BYTE FLAGS AREA-ZERO      @Y30LB02 17500003
VONSSID  DC    XL2'0000'           2 BYTE SSID AREA            @Y30LB02 17550003
VONRES2  DC    XL2'0000'           2-BYTE RESERVED AREA        @Y30LB02 17600003
         MEXIT                                                 @Y30LB02 17650003
.*                                                             @Y30LB02 17700003
.VONDS   ANOP                                                  @Y30LB02 17750003
*  MACMEAN  VARYON MACRO--UNINITIALIZED LIST FORM              @Y30LB02 17800003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 17850003
ICBVARY1 DSECT                                                 @Y30LB02 17900003
VONLEN   DS    F                   LENGTH OF VON 12 DEC        @Y30LB02 17950003
VONOPCD  DS    XL1                 VON OPCODE 0A HEX           @Y30LB02 18000003
VONRES1  DS    XL1                 1-BYTE RESERVED AREA        @Y30LB02 18050003
VONFLAG  DS    XL2                 2-BYTE FLAGS AREA-ZERO      @Y30LB02 18100003
VONSSID  DS    XL2                 2 BYTE SSID AREA            @Y30LB02 18150003
VONRES2  DS    XL2                 2-BYTE RESERVED AREA        @Y30LB02 18200003
         MEXIT                                                 @Y30LB02 18250003
.*       PROCESSING OF THE 'EXECUTE' MACRO FORM                @Y30LB02 18300003
.*                                                             @Y30LB02 18350003
.EFORM   ANOP                                                  @Y30LB02 18400003
         AIF   (N'&MF EQ 2).PARMOK  MORE THAN TWO MF SUB-      @Y30LB02 18450003
.*                                 PARAMETERS SPECD?           @Y30LB02 18500003
         MNOTE 12,'  ICB613I - MISSING REQ BLK NAME OR '       @Y30LB02 18550003
         MNOTE 12,'  MORE THAN 2 SUBPARAMETERS FOR MF '        @Y30LB02 18600003
&ERSW    SETB  1                                               @Y30LB02 18650003
         AGO   .PROCES                                         @Y30LB02 18700003
.*                                                             @Y30LB02 18750003
.PARMOK  ANOP                                                  @Y30LB02 18800003
*  MACMEAN  VARYON/VARYOFF--EXECUTE FORM                       @Y30LB02 18850003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 18900003
&SYMBOL  IHBINNRA &MF(2)          LD ADDR OF REQUEST BLK       @Y30LB02 18950003
.*                                USING IHBINNRA MACRO         @Y30LB02 19000003
.*                                                             @Y30LB02 19050003
         AIF   ('&TYPE' EQ 'VON').VON1          TYPE VARYON?   @Y30LB02 19100003
         LA    0,24                LD LENGTH OF VARYOFF        @Y30LB02 19150003
         ST    0,0(1)              STORE LENGTH IN REQ BLK     @Y30LB02 19200003
         MVI   4(1),X'0C'          LOAD VARYOFF OPCODE         @Y30LB02 19250003
         AGO   .PROCES                                         @Y30LB02 19300003
.*                                                             @Y30LB02 19350003
.VON1    ANOP                                                  @Y30LB02 19400003
         LA    0,12                LD LENG OF VARYON REQ       @Y30LB02 19450003
         ST    0,0(1)              STORE LENGTH                @Y30LB02 19500003
         MVI   4(1),X'0A'          LD VARYON OPCODE IN REG     @Y30LB02 19550003
         AGO   .PROCES                                         @Y30LB02 19600003
.*                                                             @Y30LB02 19650003
.*       PROCESSING OF 'STANDARD' MACRO FORM                   @Y30LB02 19700003
.*                                                             @Y30LB02 19750003
.*                                                             @Y30LB02 19800003
.SFORM   ANOP                                                  @Y30LB02 19850003
*  MACMEAN VARYON/VARYOFF MACRO--STANDARD FORM                 @Y30LB02 19900003
*  VS1-4/VS2-3 VERSION--06/09/74   LEVEL 00                    @Y30LB02 19950003
         CNOP 0,4                                              @Y30LB02 20000003
&SYMBOL  BAL   1,&LBL              BRCH AROUND REQ BLK         @Y30LB02 20050003
         AIF   ('&TYPE' EQ 'VON').VON2           VARYON?       @Y30LB02 20100003
VOFLEN   DC    A(&LBL-*)           LENGTH OF VOF REQ BLK       @Y30LB02 20150003
VOFOPCD  DC    XL1'0C'             DEFINE VARYOFF OPCODE       @Y30LB02 20200003
VOFRES1  DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02 20250003
VOFFLAG  DC    XL2'0000'           2-BYTE FLAGS AREA           @Y30LB02 20300003
VOFSSID  DC    XL2'0000'           2-BYTE SSID AREA            @Y30LB02 20350003
VOFRUA   DC    XL2'0000'           2-BYTE RUA AREA             @Y30LB02 20400003
VOFHOST  DC    XL5'0000000000'     5-BYTE HOSTID AREA          @Y30LB02 20450003
VOFRES2  DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02 20500003
VOFASID  DC    XL2'0000'           2-BYTE ASID AREA            @Y30LB02 20550003
VOFECB   DC    XL4'00000000'       4-BYTE ECB AREA             @Y30LB02 20600003
&LBL     EQU   *                                               @Y30LB02 20650003
         AGO   .PROCES                                         @Y30LB02 20700003
.*                                                             @Y30LB02 20750003
.VON2    ANOP                                                  @Y30LB02 20800003
VONLEN   DC    A(&LBL-*)           LENGTH OF VON REQ BLK       @Y30LB02 20850003
VONOPCD  DC    XL1'0A'             DEFINE VARYON OPCODE        @Y30LB02 20900003
VONRES1  DC    XL1'00'             1-BYTE RESERVED AREA        @Y30LB02 20950003
VONFLAG  DC    XL2'0000'           2-BYTE FLAGS AREA           @Y30LB02 21000003
VONSSID  DC    XL2'0000'           2-BYTE SSID AREA            @Y30LB02 21050003
VONRES2  DC    XL2'0000'           2-BYTE RESERVED AREA        @Y30LB02 21100003
&LBL     EQU   *                                               @Y30LB02 21150003
.*                                                             @Y30LB02 21200003
.*       PROCESS REQUEST BLOCK FOR STANDARD & EXECUTE FORMS    @Y30LB02 21250003
.*                                                             @Y30LB02 21300003
.PROCES  AIF   (&ERSW).FINISH                                  @Y30LB02 21350003
         AIF   ('&FLAGS' EQ '').SSID       FLAGS SPECIFIED?    @Y30LB02 21400003
         AIF   ('&FLAGS'(1,1) EQ '(').REGF   FLAGS REGFORM?    @Y30LB02 21450003
         MVC   6(2,1),&FLAGS       PUT FLAGS IN REQ BLOCK      @Y30LB02 21500003
         AGO   .SSID               BR TO CHECK FOR SSID        @Y30LB02 21550003
.*                                                             @Y30LB02 21600003
.REGF    ANOP                                                  @Y30LB02 21650003
         MVC   6(2,1),0(&FLAGS(1)) REG-FORM-STORE FLAGS        @Y30LB02 21700003
.*                                                             @Y30LB02 21750003
.SSID    AIF   ('&SSID' EQ '').RUA          SSID SPECIFIED?    @Y30LB02 21800003
         AIF   ('&SSID'(1,1) EQ '(').SREG   REG-FORM?          @Y30LB02 21850003
         MVC   8(2,1),&SSID        PUT SSID IN REQ BLOCK       @Y30LB02 21900003
         AGO   .RUA                                            @Y30LB02 21950003
.*                                                             @Y30LB02 22000003
.SREG    ANOP                                                  @Y30LB02 22050003
         MVC   8(2,1),0(&SSID(1))  REG-FORM--STORE SSID        @Y30LB02 22100003
.*                                                             @Y30LB02 22150003
.RUA     AIF   ('&TYPE' EQ 'VON').CVS2     BR IF VARYON        @Y30LB02 22200003
         AIF   ('&RUA' EQ '').CKECB        RUA SPECIFIED?      @Y30LB02 22250003
         AIF   ('&RUA'(1,1) EQ '(').VREG    REG-FORM?          @Y30LB02 22300003
         MVC   10(2,1),&RUA        PUT RUA IN REQ BLOCK        @Y30LB02 22350003
         AGO   .CKECB                                          @Y30LB02 22400003
.*                                                             @Y30LB02 22450003
.VREG    ANOP                                                  @Y30LB02 22500003
         MVC   10(2,1),0(&RUA(1))  REG-FORM--STORE RUA         @Y30LB02 22550003
.*                                                             @Y30LB02 22600003
.CKECB   AIF   ('&ECB' EQ '').CVS2                             @Y30LB02 22650003
         AIF   ('&ECB'(1,1) EQ '(').UREG     REGISTER FORM?    @Y30LB02 22700003
         LA    15,&ECB             LOAD ADDRESS OF ECB         @Y30LB02 22750003
         ST    15,20(1)            STORE ADDRESS OF ECB        @Y30LB02 22800003
         AGO   .CVS2                                           @Y30LB02 22850003
.*                                                             @Y30LB02 22900003
.UREG    ANOP                                                  @Y30LB02 22950003
         ST    &ECB,20(1)          REG-FORM,STORE ECB          @Y30LB02 23000003
.*                                                             @Y30LB02 23050003
.*                                                             @Y30LB02 23100003
.CVS2    ANOP                                                  @Y30LB02 23150003
         SVC   126                 INVOKE SVC                  @Y30LB02 23200003
.FINISH  MEND                                                  @Y30LB02 23250003
**/                                                                     23300003
*   ICBVARY:  MACRO KEYS(MF,TYPE,FLAGS,SSID,RUA,ECB);      /*@Y30LB02*/ 23350003
*/*                                                          @Y30LB02*/ 23400003
*/*            EXTERNAL DECLARES                             @Y30LB02*/ 23450003
*        DCL ICBTESTR FIXED EXT;/*INVOCATION COUNTER         @Y30LB02*/ 23500003
*        DCL VONTEST FIXED EXT; /*COUNTER FOR STANDARD FORM  @Y30LB02*/ 23550003
*        DCL VOFTES1 FIXED EXT;  /*COUNTER FOR  VOF S-FORM   @Y30LB02*/ 23600003
*/*                                                          @Y30LB02*/ 23650003
*/*                                                          @Y30LB02*/ 23700003
*/*            INTERNAL DECLARES                             @Y30LB02*/ 23750003
*/*                                                          @Y30LB02*/ 23800003
*   DCL CTR        FIXED;         /*CTR FOR LIST PARAMETERS  @Y30LB02*/ 23850003
*   DCL ERSW       FIXED;         /*ERROR COND SWITCH        @Y30LB02*/ 23900003
*   DCL VONCOD     CHAR;         /*VARYON OPCODE             @Y30LB02*/ 23950003
*   DCL VOFCOD     CHAR;         /*VARYOFF OPCODE            @Y30LB02*/ 24000003
*   DCL RETCODE    FIXED;        /*RETURN CODE AREA          @Y30LB02*/ 24050003
*   DCL VNLEN      CHAR;         /*LENGTH OF VON REQ BLOCK   @Y30LB02*/ 24100003
*   DCL VFLEN      CHAR;         /*LENGTH OF VOF REQ BLOCK   @Y30LB02*/ 24150003
*        VONCOD='0A';            /*INIT VARYON OPCODE        @Y30LB02*/ 24200003
*        VOFCOD='0C';            /*INITIALIZE VARYOFF OPCOD  @Y30LB02*/ 24250003
*        RETCODE=0;              /*INITIALIZE RETURNCODE     @Y30LB02*/ 24300003
*        VNLEN='0C';             /*INITIALIZE VARYON LENGTH  @Y30LB02*/ 24350003
*        ERSW = 0;               /*INITIALIZE ERROR SWITCH   @Y30LB02*/ 24400003
*        VFLEN='18';             /*INITIALIZE VARYOFF LEN    @Y30LB02*/ 24450003
*        CTR = 0;                /*INITIALIZE PARM COUNTER   @Y30LB02*/ 24500003
*/*                                                          @Y30LB02*/ 24550003
*/*            CHECK FOR VALID TYPE SPECIFICATION            @Y30LB02*/ 24600003
*/*                                                          @Y30LB02*/ 24650003
*   IF TYPE='' THEN              /*TYPE SPECIFIED?           @Y30LB02*/ 24700003
*     DO;                        /*NO,PROCESS ERROR MSG      @Y30LB02*/ 24750003
*        ERSW=1;                 /*SET ERROR SWITCH TO 1     @Y30LB02*/ 24800003
*        ANS MSG('  ICB600I - TYPE MUST BE '||                          24850003
*                'SPECIFIED')SKIP;                         /*@Y30LB02*/ 24900003
*        RETCODE=12;        /*SET RETURN CODE TO 12          @Y30LB02*/ 24950003
*        GO TO FINISH;      /*BRANCH TO END                  @Y30LB02*/ 25000003
*     END;                  /*                               @Y30LB02*/ 25050003
*   IF ERSW=1 THEN          /*ERROR SWITCH SET?              @Y30LB02*/ 25100003
*        GO TO FINISH;      /*YES,BRCH END PROCES            @Y30LB02*/ 25150003
*   IF ICBTESTR = 0 THEN    /*REG 1 ALREADY DCLD?            @Y30LB02*/ 25200003
*      DO;                  /*NO,PRINT DECLARE               @Y30LB02*/ 25250003
*        ANS('DCL ICBR1 REG(1) PTR ;/*'||                               25300003
*        'ADDRESS OF REQUEST BLOCK @Y30LB02*/')SKIP;                    25350003
*        ICBTESTR=1;        /*INCREM DCL COUNTER             @Y30LB02*/ 25400003
*      END;                 /*                               @Y30LB02*/ 25450003
*   IF TYPE(1)='VON' THEN   /*TYPE VARYON?                   @Y30LB02*/ 25500003
*        GO TO START;       /*YES,BRCH,VALID TYPE            @Y30LB02*/ 25550003
*   IF TYPE(1) = 'VOF' THEN /*TYPE VARYOFF?                  @Y30LB02*/ 25600003
*        GO TO START;       /*YES,BRCH,VALID TYPE            @Y30LB02*/ 25650003
*/*                                                          @Y30LB02*/ 25700003
*/*      INVALID 'TYPE' WILL CREATE THE FOLLOWING ERR MSGS   @Y30LB02*/ 25750003
*/*                                                          @Y30LB02*/ 25800003
*   ERSW=1;                 /*SET ERROR SWITCH TO ONE        @Y30LB02*/ 25850003
*   ANS MSG('  ICB601I - TYPE IS INCORRECTLY '||                        25900003
*           'SPECIFIED')SKIP(3);                           /*@Y30LB02*/ 25950003
*   RETCODE=12;             /*SET RETURN CODE TO 12          @Y30LB02*/ 26000003
*   IF ERSW=1 THEN          /*ERROR SWITCH SET TO ONE?       @Y30LB02*/ 26050003
*   GO TO FINISH;           /*YES,BRCH TO END PROCESS        @Y30LB02*/ 26100003
*/*                                                          @Y30LB02*/ 26150003
*START:                                                                 26200003
*   IF MF(1) ¬= 'L' THEN    /*LIST FORM REQUEST?             @Y30LB02*/ 26250003
*        GO TO CKFORM;      /*NO,CHECK FOR OTHER FORMS       @Y30LB02*/ 26300003
*   IF MF(2) ¬= '' THEN     /*LIST NAME SPECIFIED?           @Y30LB02*/ 26350003
*        GO TO LISTFORM;    /*YES,BRCH PROCESS REQUEST       @Y30LB02*/ 26400003
*   ERSW=1;                 /*NO,SET ERROR SWITCH            @Y30LB02*/ 26450003
*   ANS MSG('  ICB602I - A NAME FOR THE '||                             26500003
*           'REQUEST BLOCK MUST BE SPECIFIED IN '||                     26550003
*           'MF(2) ')SKIP(3);                              /*@Y30LB02*/ 26600003
*   RETCODE=12;             /*SET RETURN CODE TO 12          @Y30LB02*/ 26650003
*   IF ERSW=1 THEN          /*CHECK THE ERROR SWITCH         @Y30LB02*/ 26700003
*   GO TO FINISH;                                          /*@Y30LB02*/ 26750003
*/*                                                          @Y30LB02*/ 26800003
*LISTFORM:                                                              26850003
*/********************************************************@Y30LB02*/    26900003
*/*  CHECK FOR ILLEGAL PARAMETERS AND PRINT OUT DECLARES  @Y30LB02*/    26950003
*/********************************************************@Y30LB02*/    27000003
*   IF FLAGS ¬= '' THEN     /*FLAGS SPECIFIED?               @Y30LB02*/ 27050003
*        CTR = CTR + 1;     /*YES,INCREMENT COUNTER          @Y30LB02*/ 27100003
*   IF SSID ¬= '' THEN      /*SSID SPECIFIED?                @Y30LB02*/ 27150003
*        CTR = CTR + 1;     /*YES,INCREMENT COUNTER          @Y30LB02*/ 27200003
*   IF RUA ¬= '' THEN       /*RUA SPECIFIED?                 @Y30LB02*/ 27250003
*        CTR = CTR + 1;     /*YES,INCREMENT COUNTER          @Y30LB02*/ 27300003
*   IF ECB ¬= '' THEN       /*ECB SPECIFIED?                 @Y30LB02*/ 27350003
*        CTR = CTR + 1;     /*YES,INCREMENT COUNTER          @Y30LB02*/ 27400003
*   IF CTR > 0 THEN         /*COUNTER GT ZERO?               @Y30LB02*/ 27450003
*     DO;                   /*YES,WARN USER                  @Y30LB02*/ 27500003
*        RETCODE=4;         /*SET RETURN CODE TO 4           @Y30LB02*/ 27550003
*        ANS MSG('  ICB603I - WARNING-ONLY MF'||                        27600003
*             ' AND TYPE PARAMETERS ARE VALID FOR'||                    27650003
*             ' LIST FORM  ')SKIP(3);                      /*@Y30LB02*/ 27700003
*     END;                  /*                               @Y30LB02*/ 27750003
*/*                                                          @Y30LB02*/ 27800003
*   IF MF(3) ¬= '' THEN     /*PLS ATTRIBUTE SPECIFIED?       @Y30LB02*/ 27850003
*       GO TO ATTRLST;      /*YES,PROCESS IT                 @Y30LB02*/ 27900003
*   IF TYPE(1)='VON' THEN   /*IS TYPE VARYON?                @Y30LB02*/ 27950003
*     DO;                   /*YES,PUT VARYON REQ BLOCK       @Y30LB02*/ 28000003
*        ANS('/*******************************************'||           28050003
*            '************** @Y30LB02*/')SKIP;                          28100003
*        ANS('/*MACMEAN  MSSC VARYON MACRO                '||           28150003
*            '               @Y30LB02*/')SKIP;                          28200003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           28250003
*            '               @Y30LB02*/')SKIP;                          28300003
*        ANS('/*THIS IS THE INITIALIZED LIST FORM         '||           28350003
*            '               @Y30LB02*/')SKIP;                          28400003
*        ANS('/*******************************************'||           28450003
*           '************** @Y30LB02*/')SKIP;                           28500003
*        ANS('DCL 1 ' ||MF(2)|| '  STATIC LOCAL,'||                     28550003
*        ' /*VARYON REQ BLOCK @Y30LB02*/')SKIP;                         28600003
*        ANS('    2  VONLEN  FIXED(31)INIT('||QUOTE                     28650003
*        ('0C')||'X),/*LENGTH OF VON REQUEST BLOCK @Y30LB02*/')SKIP;    28700003
*        ANS('    2  VONOPCD CHAR(1)INIT('||QUOTE('0A')||               28750003
*        'X),/*VARYON OPCODE @Y30LB02*/')SKIP;                          28800003
*        ANS('    2  VONRES1 CHAR(1)INIT('||QUOTE('00')||               28850003
*        'X), /*ONE BYTE OF ZERO @Y30LB02*/')SKIP;                      28900003
*        ANS('    2  VONFLG BIT(16)INIT('||QUOTE                        28950003
*        ('0000000000000000')||'B), /*FLAGS AREA @Y30LB02*/')SKIP;      29000003
*        ANS('     3  VONSTAG  BIT(1), /*STAGING '||                    29050003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   29100003
*        ANS('     3  VONREAL  BIT(1), /*REAL '||                       29150003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   29200003
*        ANS('     3  *      BIT(14),'||                                29250003
*        ' /*FOURTEEN BITS RESERVED @Y30LB02*/')SKIP;                   29300003
*        ANS('    2  VONSSID  FIXED(15) INIT(0),'||                     29350003
*        ' /*SUBSYSTEM ID  @Y30LB02*/')SKIP;                            29400003
*        ANS('    2  VONRES2  CHAR(2) INIT('||QUOTE                     29450003
*        ('0000')||'X);/*RESERVED AREA @Y30LB02*/')SKIP;                29500003
*        GO TO FINISH;                                     /*@Y30LB02*/ 29550003
*     END;                                                 /*@Y30LB02*/ 29600003
*/*                                                          @Y30LB02*/ 29650003
*  ELSE                                                                 29700003
*     DO;                                                  /*@Y30LB02*/ 29750003
*        ANS('/*******************************************'||           29800003
*            '************** @Y30LB02*/')SKIP;                          29850003
*        ANS('/*MACMEAN  MSSC VARYOFF MACRO               '||           29900003
*            '               @Y30LB02*/')SKIP;                          29950003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           30000003
*            '               @Y30LB02*/')SKIP;                          30050003
*        ANS('/*THIS IS THE INITIALIZED LIST FORM         '||           30100003
*            '               @Y30LB02*/')SKIP;                          30150003
*        ANS('/*******************************************'||           30200003
*            '************** @Y30LB02*/')SKIP;                          30250003
*        ANS('DCL 1 ' ||MF(2)|| '  STATIC LOCAL,'||                     30300003
*        ' /*VARYOFF REQ BLOCK @Y30LB02*/')SKIP;                        30350003
*        ANS('    2  VOFLEN  FIXED(31)INIT('||QUOTE                     30400003
*        ('18')||'X),/*LENGTH OF VOF REQUEST BLK @Y30LB02*/')SKIP;      30450003
*        ANS('    2  VOFOPCD CHAR(1)INIT('||QUOTE('0C')||               30500003
*        'X),/*VARYOFF OPCODE @Y30LB02*/')SKIP;                         30550003
*        ANS('    2  VOFRES1 CHAR(1)INIT('||QUOTE('00')||               30600003
*        'X), /*ONE BYTE OF ZERO @Y30LB02*/')SKIP;                      30650003
*        ANS('    2  VOFFLG BIT(16)INIT('||QUOTE                        30700003
*        ('0000000000000000')||'B), /*FLAGS AREA @Y30LB02*/')SKIP;      30750003
*        ANS('     3  VOFSTAG  BIT(1), /*VIRTUAL '||                    30800003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   30850003
*        ANS('     3  VOFREAL  BIT(1), /*REAL '||                       30900003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   30950003
*        ANS('     3  VOFNEUT  BIT(1), /*NEUTRAL '||                    31000003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   31050003
*        ANS('     3  VOFTEST  BIT(1), /*TEST '||                       31100003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   31150003
*        ANS('     3  *      BIT(12),'||                                31200003
*        ' /*TWELVE BITS RESERVED @Y30LB02*/')SKIP;                     31250003
*        ANS('    2  VOFSSID  FIXED(15) INIT(0),'||                     31300003
*        ' /*SUBSYSTEM ID  @Y30LB02*/')SKIP;                            31350003
*        ANS('    2  VOFRUA  FIXED(15) INIT(0),'||                      31400003
*        ' /*REAL UNIT ADDRESS  @Y30LB02*/')SKIP;                       31450003
*        ANS('    2  VOFHOST  CHAR(5) INIT('||QUOTE                     31500003
*        ('0000000000')||'X),/*HOSTID AREA @Y30LB02*/')SKIP;            31550003
*        ANS('    2  *     CHAR(1) INIT('||QUOTE                        31600003
*        ('00')||'X),/*RESERVED AREA @Y30LB02*/')SKIP;                  31650003
*        ANS('    2  VOFASID CHAR(2) INIT('||QUOTE                      31700003
*        ('0000')||'X),/*ASID AREA @Y30LB02*/')SKIP;                    31750003
*        ANS('    2  VOFECB  FIXED(31) INIT(0);'||                      31800003
*        ' /* EVENT CONTROL BLOCK AREA @Y30LB02*/')SKIP;                31850003
*        GO TO FINISH;       /*BRCH TO END                   @Y30LB02*/ 31900003
*     END;                   /*                              @Y30LB02*/ 31950003
*ATTRLST:                                                               32000003
*   IF TYPE(1)='VON' THEN    /*VARYON REQUEST                @Y30LB02*/ 32050003
*     DO;                    /*OUTPUT UNINIT REQ BLOCK       @Y30LB02*/ 32100003
*        ANS('/*******************************************'||           32150003
*            '************* @Y30LB02*/')SKIP;                           32200003
*        ANS('/*MACMEAN  MSSC VARYON MACRO                '||           32250003
*            '              @Y30LB02*/')SKIP;                           32300003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           32350003
*            '              @Y30LB02*/')SKIP;                           32400003
*        ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||           32450003
*            '              @Y30LB02*/')SKIP;                           32500003
*        ANS('/*******************************************'||           32550003
*            '************* @Y30LB02*/')SKIP;                           32600003
*        ANS('DCL 1 ' ||MF(2)||'  '||MF(3)||','||                       32650003
*        ' /*VARYON REQ BLOCK @Y30LB02*/')SKIP;                         32700003
*        ANS('    2  VONLEN  FIXED(31), /*LENGTH'||                     32750003
*        ' OF BLOCK = 0C BYTES HEX @Y30LB02*/')SKIP;                    32800003
*        ANS('    2  VONOPCD CHAR(1),/*VARYON'||                        32850003
*        ' OPCODE = 0A HEX @Y30LB02*/')SKIP;                            32900003
*        ANS('    2  VONRES1 CHAR(1),/*ONE '||                          32950003
*        ' BYTE OF ZERO @Y30LB02*/')SKIP;                               33000003
*        ANS('    2  VONFLG BIT(16), /*FLAGS AREA @Y30LB02*/')SKIP;     33050003
*        ANS('     3  VONSTAG  BIT(1), /*STAGING '||                    33100003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   33150003
*        ANS('     3  VONREAL  BIT(1), /*REAL '||                       33200003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   33250003
*        ANS('     3  *      BIT(14),'||                                33300003
*        ' /*FOURTEEN BITS RESERVED @Y30LB02*/')SKIP;                   33350003
*        ANS('    2  VONSSID  FIXED(15),'||                             33400003
*        ' /*SUBSYSTEM ID  @Y30LB02*/')SKIP;                            33450003
*        ANS('    2  VONRES2  CHAR(2);'||                               33500003
*        '/*RESERVED AREA @Y30LB02*/')SKIP;                             33550003
*        GO TO FINISH;           /*BRCH TO END               @Y30LB02*/ 33600003
*     END;                       /*                          @Y30LB02*/ 33650003
*/*                                                          @Y30LB02*/ 33700003
*  ELSE                          /*VARYOFF REQUEST           @Y30LB02*/ 33750003
*     DO;                        /*OUTPUT VARYOFF BLOCK      @Y30LB02*/ 33800003
*        ANS('/*******************************************'||           33850003
*            '************** @Y30LB02*/')SKIP;                          33900003
*        ANS('/*MACMEAN  MSSC VARYOFF MACRO               '||           33950003
*            '               @Y30LB02*/')SKIP;                          34000003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           34050003
*            '               @Y30LB02*/')SKIP;                          34100003
*        ANS('/*THIS IS THE UNINITIALIZED LIST FORM       '||           34150003
*            '               @Y30LB02*/')SKIP;                          34200003
*        ANS('/*******************************************'||           34250003
*            '************** @Y30LB02*/')SKIP;                          34300003
*        ANS('DCL 1 ' ||MF(2)||'  '||MF(3)||','||                       34350003
*        ' /*VARYOFF REQ BLOCK @Y30LB02*/')SKIP;                        34400003
*        ANS('    2  VOFLEN  FIXED(31),/*LENGTH OF'||                   34450003
*        ' REQUEST BLOCK = 18 HEX @Y30LB02*/')SKIP;                     34500003
*        ANS('    2  VOFOPCD CHAR(1), '||                               34550003
*        '/*VARYOFF OPCODE = 0C HEX @Y30LB02*/')SKIP;                   34600003
*        ANS('    2  VOFRES1  CHAR(1),/*ONE '||                         34650003
*        'BYTE OF ZERO @Y30LB02*/')SKIP;                                34700003
*        ANS('    2  VOFFLG BIT(16),/*FLAGS AREA @Y30LB02*/')SKIP;      34750003
*        ANS('     3  VOFSTAG  BIT(1), /*STAGING '||                    34800003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   34850003
*        ANS('     3  VOFREAL  BIT(1), /*REAL '||                       34900003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   34950003
*        ANS('     3  VOFNEUT  BIT(1), /*NEUTRAL '||                    35000003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   35050003
*        ANS('     3  VOFTEST  BIT(1), /*TEST '||                       35100003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   35150003
*        ANS('     3  *      BIT(12),'||                                35200003
*        ' /*TWELVE BITS RESERVED @Y30LB02*/')SKIP;                     35250003
*        ANS('    2  VOFSSID FIXED(15),'||                              35300003
*        ' /*SUBSYSTEM ID  @Y30LB02*/')SKIP;                            35350003
*        ANS('    2  VOFRUA  FIXED(15),'||                              35400003
*        ' /*REAL UNIT ADDRESS  @Y30LB02*/')SKIP;                       35450003
*        ANS('    2  VOFHOST  CHAR(5),'||                               35500003
*        '/*HOSTID AREA @Y30LB02*/')SKIP;                               35550003
*        ANS('    2  * CHAR(1) ,/*RESERVED AREA @Y30LB02*/')SKIP;       35600003
*        ANS('    2  VOFASID  CHAR(2),'||                               35650003
*        '/*ASID AREA @Y30LB02*/')SKIP;                                 35700003
*        ANS('    2  VOFECB  FIXED(31);'||                              35750003
*        ' /* EVENT CONTROL BLOCK AREA @Y30LB02*/')SKIP;                35800003
*        GO TO FINISH;           /*BRANCH TO END             @Y30LB02*/ 35850003
*/*                                                          @Y30LB02*/ 35900003
*     END;                       /*                          @Y30LB02*/ 35950003
*/*                                                          @Y30LB02*/ 36000003
*/*      CHECK FOR EXECUTE FORM SPECIFICATION                @Y30LB02*/ 36050003
*/*                                                          @Y30LB02*/ 36100003
*CKFORM:                                                                36150003
*   IF MF(1) ¬= 'E' THEN       /* EXECUTE FORM SPECIFIED?    @Y30LB02*/ 36200003
*        GO TO SFORM;         /*NO,CHECK FOR STANDARD        @Y30LB02*/ 36250003
*   IF MF(2)='' THEN          /* BLOCK NAME SPECIFIED?       @Y30LB02*/ 36300003
*     DO;                     /*YES,PRINT ERROR MESSAGE      @Y30LB02*/ 36350003
*        ANS MSG('  ICB612I - MF(2) MUST CONTAIN'||                     36400003
*                ' REQ BLK NAME IF EXEC'||                              36450003
*                ' MACRO FORM REQUESTED')SKIP(3);          /*@Y30LB02*/ 36500003
*        RETCODE=12;          /*SET RETURN CODE TO 12        @Y30LB02*/ 36550003
*        ERSW = 1;            /*SET ERROR SWITCH             @Y30LB02*/ 36600003
*        GO TO COMPROC;       /*BRCH TO CHECK SWITCH         @Y30LB02*/ 36650003
*     END;                    /*                             @Y30LB02*/ 36700003
*/*                                                          @Y30LB02*/ 36750003
*        ANS('/*******************************************'||           36800003
*            '************** @Y30LB02*/')SKIP;                          36850003
*        ANS('/*MACMEAN  MSSC VARYON/VARYOFF MACRO        '||           36900003
*            '               @Y30LB02*/')SKIP;                          36950003
*        ANS('/*VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00   '||           37000003
*            '               @Y30LB02*/')SKIP;                          37050003
*        ANS('/*THIS IS THE OUTPUT FOR THE EXECUTE FORM.  '||           37100003
*            '               @Y30LB02*/')SKIP;                          37150003
*        ANS('/*THE LIST FORM OF THIS MACRO SHOULD BE     '||           37200003
*            '               @Y30LB02*/')SKIP;                          37250003
*        ANS('/*INVOKED FIRST IN ORDER TO SET UP NECESSARY'||           37300003
*            '               @Y30LB02*/')SKIP;                          37350003
*        ANS('/*DECLARES.  IF THE COMPLETE ARGUMENT IS    '||           37400003
*            '               @Y30LB02*/')SKIP;                          37450003
*        ANS('/*SPECIFIED THE REQ BLOCK WILL BE ZEROED.   '||           37500003
*            '               @Y30LB02*/')SKIP;                          37550003
*        ANS('/*******************************************'||           37600003
*            '************** @Y30LB02*/')SKIP;                          37650003
*        ANS('RFY(ICBR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;         37700003
*        ANS('ICBR1=ADDR('||MF(2)||'); /*R1 PTR'||                      37750003
*        ' TO REQUEST BLOCK @Y30LB02*/')SKIP(2);                        37800003
*   IF MF(3) = 'COMPLETE' THEN     /*COMPLETE SPECIFIED      @Y30LB02*/ 37850003
*        GO TO EXCOMP;             /*YES,BRCH TO ZERO BLK    @Y30LB02*/ 37900003
*   ELSE                           /*NO ZERO REQUESTED       @Y30LB02*/ 37950003
*        GO TO COMPROC;            /*BRANCH TO CK PARAMETERS @Y30LB02*/ 38000003
*EXCOMP:                                                                38050003
*        ANS(' '||MF(2)||'='||MF(2)||'&&'||MF(2)||';/*ZERO'||           38100003
*        ' REQUEST BLOCK @Y30LB02*/')SKIP;                              38150003
*        GO TO COMPROC;           /*BRANCH TO CK PARAMETERS  @Y30LB02*/ 38200003
*/*                                                          @Y30LB02*/ 38250003
*/*                                                          @Y30LB02*/ 38300003
*SFORM:                                                                 38350003
*   IF MF(1) ¬= '' THEN       /* FORM STANDARD?              @Y30LB02*/ 38400003
*     DO;                     /*PRINT OUT ERROR MESSAGE      @Y30LB02*/ 38450003
*        ANS MSG('  ICB615I - INVALID MF PARAMETER'||                   38500003
*                ' SPECIFIED, MUST BE L,E, OR NULL')SKIP;  /*@Y30LB02*/ 38550003
*        ERSW = 1;            /*SET ERROR SWITCH TO 1        @Y30LB02*/ 38600003
*        RETCODE=12;          /*SET RETURN CODE TO 12        @Y30LB02*/ 38650003
*        GO TO COMPROC;       /*BRANCH TO CK SWITCH          @Y30LB02*/ 38700003
*     END;                    /*                             @Y30LB02*/ 38750003
*/*                                                          @Y30LB02*/ 38800003
*/*                                                          @Y30LB02*/ 38850003
*   IF TYPE(1)='VON' THEN     /*TYPE EQUAL VARYON?           @Y30LB02*/ 38900003
*     IF VONTEST => 1 THEN    /*1ST VARYON STD FORM?         @Y30LB02*/ 38950003
*      DO;                    /*NO,DON'T PRINT DCLS          @Y30LB02*/ 39000003
*        ANS('/*******************************************'||           39050003
*            '************* @Y30LB02*/')SKIP;                           39100003
*        ANS('/*MACMEAN  MSSC VARYON MACRO                '||           39150003
*            '              @Y30LB02*/')SKIP;                           39200003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           39250003
*            '              @Y30LB02*/')SKIP;                           39300003
*        ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '||           39350003
*            '              @Y30LB02*/')SKIP;                           39400003
*        ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||           39450003
*           '              @Y30LB02*/')SKIP;                            39500003
*        ANS('/*******************************************'||           39550003
*            '************* @Y30LB02*/')SKIP;                           39600003
*        ANS('RFY(ICBR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;         39650003
*        ANS('ICBR1=ADDR(VONLEN);/*PTR TO REQ BLK @Y30LB02*/')SKIP;     39700003
*        GO TO COMPROC;        /*BRANCH TO CK PARAMETERS     @Y30LB02*/ 39750003
*      END;                    /*                            @Y30LB02*/ 39800003
*/*                                                          @Y30LB02*/ 39850003
*     IF TYPE(1) = 'VON' THEN  /*TYPE EQUAL VARYON?          @Y30LB02*/ 39900003
*      DO;                     /*PUT OUT THE DCLS            @Y30LB02*/ 39950003
*        ANS('/*******************************************'||           40000003
*            '************* @Y30LB02*/')SKIP;                           40050003
*        ANS('/*MACMEAN  MSSC VARYON MACRO                '||           40100003
*            '              @Y30LB02*/')SKIP;                           40150003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           40200003
*            '              @Y30LB02*/')SKIP;                           40250003
*        ANS('/*THIS IS THE STANDARD FORM - VARYON MACRO  '||           40300003
*            '              @Y30LB02*/')SKIP;                           40350003
*        ANS('/*******************************************'||           40400003
*            '************* @Y30LB02*/')SKIP;                           40450003
*        ANS('RFY(ICBR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;         40500003
*        ANS('ICBR1=ADDR(VONLEN);/*R1 PTR TO REQ BLK @Y30LB02*/')SKIP;  40550003
*        ANS('DCL 1  VONLST01  STATIC LOCAL,'||                         40600003
*        ' /*VARYON REQUEST BLOCK @Y30LB02*/')SKIP;                     40650003
*        ANS('    2  VONLEN  FIXED(31)INIT('||QUOTE('0C')||             40700003
*        'X),/*LENGTH OF VARYON REQ BLK @Y30LB02*/')SKIP;               40750003
*        ANS('    2  VONOPCD CHAR(1)INIT('||QUOTE('0A')||               40800003
*        'X),/*VARYON OPCODE @Y30LB02*/')SKIP;                          40850003
*        ANS('    2  VONRES1 CHAR(1)INIT('||QUOTE('00')||               40900003
*        'X), /*ONE BYTE OF ZERO @Y30LB02*/')SKIP;                      40950003
*        ANS('    2  VONFLG BIT(16)INIT('||QUOTE                        41000003
*        ('0000000000000000')||'B), /*FLAGS AREA @Y30LB02*/')SKIP;      41050003
*        ANS('     3  VONSTAG  BIT(1), /*STAGING '||                    41100003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   41150003
*        ANS('     3  VONREAL  BIT(1), /*REAL '||                       41200003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   41250003
*        ANS('     3  *      BIT(14),'||                                41300003
*        ' /*FOURTEEN BITS RESERVED @Y30LB02*/')SKIP;                   41350003
*        ANS('    2  VONSSID  FIXED(15) INIT(0),'||                     41400003
*        ' /*SUBSYSTEM ID  @Y30LB02*/')SKIP;                            41450003
*        ANS('    2  VONRES2  CHAR(2) INIT('||QUOTE                     41500003
*        ('0000')||'X);/*RESERVED AREA @Y30LB02*/')SKIP;                41550003
*        VONTEST=VONTEST+1;    /*INCREMENT STD FORM CTR      @Y30LB02*/ 41600003
*        GO TO COMPROC;        /*BRANCH TO CK PARAMETERS     @Y30LB02*/ 41650003
*     END;                     /*                            @Y30LB02*/ 41700003
*/*                                                          @Y30LB02*/ 41750003
*   ELSE                       /*VARYOFF PROCESSING          @Y30LB02*/ 41800003
*     IF VOFTES1 => 1 THEN     /*1ST VARYOFF STD FORM?       @Y30LB02*/ 41850003
*      DO;                     /*NO,DON'T PRINT DCLS         @Y30LB02*/ 41900003
*        ANS('/*******************************************'||           41950003
*            '************** @Y30LB02*/')SKIP;                          42000003
*        ANS('/*MACMEAN  MSSC VARYOFF MACRO               '||           42050003
*            '               @Y30LB02*/')SKIP;                          42100003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           42150003
*            '               @Y30LB02*/')SKIP;                          42200003
*        ANS('/*THIS IS THE OUTPUT FOR A SECONDARY        '||           42250003
*            '               @Y30LB02*/')SKIP;                          42300003
*        ANS('/*INVOCATION OF THE STANDARD FORM MACRO     '||           42350003
*            '               @Y30LB02*/')SKIP;                          42400003
*        ANS('/*******************************************'||           42450003
*            '************** @Y30LB02*/')SKIP;                          42500003
*        ANS('RFY(ICBR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;         42550003
*        ANS('ICBR1=ADDR(VOFLEN);/*PTR TO REQ BLK @Y30LB02*/')SKIP;     42600003
*        GO TO COMPROC;        /*BRANCH TO CK PARAMETERS     @Y30LB02*/ 42650003
*      END;                    /*                            @Y30LB02*/ 42700003
*     IF VOFTES1=0 THEN        /*1ST VARYOFF STD FORM        @Y30LB02*/ 42750003
*     DO;                      /*PUT OUT THE DCLS            @Y30LB02*/ 42800003
*        ANS('/*******************************************'||           42850003
*            '************* @Y30LB02*/')SKIP;                           42900003
*        ANS('/*MACMEAN  MSSC VARYOFF MACRO               '||           42950003
*            '              @Y30LB02*/')SKIP;                           43000003
*        ANS('/*VS1-4/VS2-3 VERSION--06/09/74 LEVEL 00    '||           43050003
*            '              @Y30LB02*/')SKIP;                           43100003
*        ANS('/*THIS IS THE STANDARD FORM - VARYOFF MACRO '||           43150003
*            '              @Y30LB02*/')SKIP;                           43200003
*        ANS('/*******************************************'||           43250003
*            '************* @Y30LB02*/')SKIP;                           43300003
*        ANS('RFY(ICBR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/')SKIP;         43350003
*        ANS('ICBR1=ADDR(VOFLEN);/*R1 PTR TO REQ BLK @Y30LB02*/')SKIP;  43400003
*        ANS('DCL 1 VOFLST01  STATIC LOCAL,'||                          43450003
*        ' /*VARYOFF REQUEST BLOCK @Y30LB02*/')SKIP;                    43500003
*        ANS('    2  VOFLEN  FIXED(31)INIT('||QUOTE('18')||             43550003
*        'X),/*LENGTH OF VOF REQ BLOCK @Y30LB02*/')SKIP;                43600003
*        ANS('    2  VOFOPCD CHAR(1)INIT('||QUOTE('0C')||               43650003
*        'X),/*VARYOFF OPCODE @Y30LB02*/')SKIP;                         43700003
*        ANS('    2  VOFRES1 CHAR(1)INIT('||QUOTE('00')||               43750003
*        'X), /*ONE BYTE OF ZERO @Y30LB02*/')SKIP;                      43800003
*        ANS('    2  VOFFLG BIT(16)INIT('||QUOTE                        43850003
*        ('0000000000000000')||'B), /*FLAGS AREA @Y30LB02*/')SKIP;      43900003
*        ANS('     3  VOFSTAG  BIT(1), /*STAGING '||                    43950003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   44000003
*        ANS('     3  VOFREAL  BIT(1), /*REAL '||                       44050003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   44100003
*        ANS('     3  VOFNEUT  BIT(1), /*NEUTRAL '||                    44150003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   44200003
*        ANS('     3  VOFTEST  BIT(1), /*TEST '||                       44250003
*        'ATTRIBUTE @Y30LB02*/')SKIP;                                   44300003
*        ANS('     3  *      BIT(12),'||                                44350003
*        ' /*TWELVE BITS RESERVED @Y30LB02*/')SKIP;                     44400003
*        ANS('    2  VOFSSID  FIXED(15) INIT(0),'||                     44450003
*        ' /*SUBSYSTEM ID  @Y30LB02*/')SKIP;                            44500003
*        ANS('    2  VOFRUA  FIXED(15) INIT(0),'||                      44550003
*        ' /*REAL UNIT ADDRESS  @Y30LB02*/')SKIP;                       44600003
*        ANS('    2  VOFHOST CHAR(5) INIT('||QUOTE                      44650003
*        ('0000000000')||'X),/*HOSTID AREA @Y30LB02*/')SKIP;            44700003
*        ANS('    2  *     CHAR(1) INIT('||QUOTE                        44750003
*        ('00')||'X),/*RESERVED AREA @Y30LB02*/')SKIP;                  44800003
*        ANS('    2  VOFASID  CHAR(2) INIT('||QUOTE                     44850003
*        ('0000')||'X),/*ASID AREA @Y30LB02*/')SKIP;                    44900003
*        ANS('    2  VOFECB  FIXED(31) INIT(0);'||                      44950003
*        ' /* EVENT CONTROL BLOCK AREA @Y30LB02*/')SKIP;                45000003
*        VOFTES1=VOFTES1+1;    /*INCREM VOF STD FORM CTR     @Y30LB02*/ 45050003
*     END;                     /*                            @Y30LB02*/ 45100003
*/*                                                          @Y30LB02*/ 45150003
*COMPROC:                                                               45200003
*/*                                                          @Y30LB02*/ 45250003
*   IF ERSW =1 THEN           /*ERROR SWITCH SET?            @Y30LB02*/ 45300003
*     GO TO FINISH;           /*YES,BRANCH OUT               @Y30LB02*/ 45350003
*/*                                                          @Y30LB02*/ 45400003
*   IF TYPE(1)='VON' THEN  /*VARYON REQUEST?                 @Y30LB02*/ 45450003
*    DO;                   /*PROCESS LEN AND OPCOD           @Y30LB02*/ 45500003
*     ANS('VONLEN=' ||QUOTE(VNLEN)|| 'X;'||                             45550003
*     '  /*LENG-VARYON REQUEST BLOCK @Y30LB02*/')SKIP;                  45600003
*     ANS('VONOPCD=' ||QUOTE(VONCOD)|| 'X;/*VARYON '||                  45650003
*     ' OPCODE @Y30LB02*/')SKIP;                                        45700003
*    END;                   /*                               @Y30LB02*/ 45750003
*/*                                                          @Y30LB02*/ 45800003
*   ELSE                    /*PROCESS LEN AND OPC FOR VOF    @Y30LB02*/ 45850003
*    DO;                    /*                               @Y30LB02*/ 45900003
*     ANS('VOFLEN=' ||QUOTE(VFLEN)|| 'X;'||                             45950003
*     '  /*LENG-VARYOFF REQUEST BLOCK @Y30LB02*/')SKIP;                 46000003
*     ANS('VOFOPCD=' ||QUOTE(VOFCOD)|| 'X;/*OPCODE FOR'||               46050003
*    ' VARYOFF REQ @Y30LB02*/')SKIP;                                    46100003
*    END;                                                  /*@Y30LB02*/ 46150003
*/*                                                          @Y30LB02*/ 46200003
*   IF TYPE(1)='VON' THEN     /*VARYON REQUEST?              @Y30LB02*/ 46250003
*    IF FLAGS ¬= '' THEN      /*FLAGS SPECIFIED              @Y30LB02*/ 46300003
*     ANS('VONFLG=' ||FLAGS|| '; /*VALUE OF FLAGS @Y30LB02*/')SKIP;     46350003
*/*                                                          @Y30LB02*/ 46400003
*   IF TYPE(1)='VOF' THEN     /*VARYOFF SPECIFIED?           @Y30LB02*/ 46450003
*    IF FLAGS ¬= '' THEN      /*FLAGS SPECIFIED?             @Y30LB02*/ 46500003
*     ANS('VOFFLG=' ||FLAGS|| '; /*VALUE OF FLAGS @Y30LB02*/')SKIP;     46550003
*/*                                                          @Y30LB02*/ 46600003
*   IF SSID ¬= '' THEN          /*SSID SPECIFIED?            @Y30LB02*/ 46650003
*    IF TYPE(1) = 'VON' THEN   /*VARYON SPECIFIED?           @Y30LB02*/ 46700003
*     ANS('VONSSID=' ||SSID|| '; /*VALUE OF SSID @Y30LB02*/')SKIP;      46750003
*/*                                                          @Y30LB02*/ 46800003
*   IF SSID ¬= '' THEN          /*SSID SPECIFIED ?           @Y30LB02*/ 46850003
*    IF TYPE(1) = 'VOF' THEN    /*VARYOFF SPECIFIED?         @Y30LB02*/ 46900003
*     ANS('VOFSSID= ' ||SSID|| ';/*VALUE OF SSID @Y30LB02*/')SKIP;      46950003
*/*                                                          @Y30LB02*/ 47000003
*   IF TYPE(1) = 'VON' THEN     /*TYPE EQUAL VARYON?         @Y30LB02*/ 47050003
*     GO TO LINK;               /*BRCH TO LINK TO SVC        @Y30LB02*/ 47100003
*/*                                                          @Y30LB02*/ 47150003
*   IF RUA ¬= '' THEN           /*RUA SPECIFIED?             @Y30LB02*/ 47200003
*    IF TYPE(1) = 'VOF' THEN    /*TYPE EQUAL VARRYOFF?       @Y30LB02*/ 47250003
*     ANS('VOFRUA= ' ||RUA|| ';/*VALUE OF RUA @Y30LB02*/')SKIP;         47300003
*/*                                                          @Y30LB02*/ 47350003
*   IF ECB ¬= ''  THEN    /*ECB SPECIFIED?                   @Y30LB02*/ 47400003
*        ANS('VOFECB=ADDR' ||ECB||';/*ADDRESS OF ECB'||                 47450003
*        ' @Y30LB02*/')SKIP;                                            47500003
*/*                                                          @Y30LB02*/ 47550003
*LINK:                                                                  47600003
*     ANS('SVC   (126);/*INVOKE THE SVC @Y30LB02*/')SKIP;               47650003
*     ANS('RFY  ICBR1  UNRSTD;/*UNRESTRICT REG 1 @Y30LB02*/')SKIP;      47700003
*/*                                                          @Y30LB02*/ 47750003
*FINISH:  RETURN CODE(RETCODE);                            /*@Y30LB02*/ 47800003
*         %END;                                            /*@Y30LB02*/ 47850003
./  ADD  SSI=73480138,NAME=ICBVOLTB
 %ICBVOLTB: ;                       /* MACRO                 @ZA27588*/ 00050000
     /***********************************************        @ZA27588*/ 00100000
     /*              ***** MAPPING MACRO *****               @ZA27588*/ 00150000
     /*                                                      @ZA27588*/ 00200000
     /* MACRO NAME = ICBVOLTB(VS2)                           @ZA27588*/ 00250000
     /*                                                      @ZA27588*/ 00300000
     /* DESCRIPTIVE NAME = MSSC VS2 VOLUME TRACKING          @ZA27588*/ 00350000
     /*                    TABLE FORMAT                      @ZA27588*/ 00400000
     /*                                                      @ZA27588*/ 00450000
     /* COPYRIGHT = NONE                                     @ZA27588*/ 00500000
     /*                                                      @ZA27588*/ 00550000
     /* CHANGE ACTIVITY = 10/24/77 ELIMINATE REDUNDANT       @ZA27588*/ 00600000
     /*                            ACQUIRES                  @ZA27588*/ 00650000
     /*                                                      @ZA27588*/ 00700000
     /* %SSCLEVEL DEFAULTS                                   @ZA27588*/ 00750000
     /*      DCL 1 ICBVLIST BASED(ICBVOLST) BDY(WORD),       @ZA27588*/ 00800000
     /*                                                      @ZA27588*/ 00850000
     /* %SSC9999 DEFAULTS TO SEMICOLON                       @ZA27588*/ 00900000
     /*                                                      @ZA27588*/ 00950000
     /* TO SET YOUR OWN LEVEL 1 USE %SSCLEVEL = 'N' WHERE    @ZA27588*/ 01000000
     /*        N IS THE LEVEL YOU WANT                       @ZA27588*/ 01050000
     /*                                                      @ZA27588*/ 01100000
     /* TO SET END TO , USE %SSC9999 = ','                   @ZA27588*/ 01150000
     /***********************************************        @ZA27588*/ 01200000
 %IF SSCLEVEL = ''                  /*DEFAULT BASE           @ZA27588*/ 01250000
    %THEN SSCBASE = 'BASED(ICBVOLST)' ;/*BASED ON ICBVOLST   @ZA27588*/ 01300000
    %ELSE SSCBASE = '' ;            /*NOT BASED              @ZA27588*/ 01350000
 %IF SSCLEVEL = ''                  /*DEFAULT LEVEL          @ZA27588*/ 01400000
    %THEN SSCLEVEL = 'DCL 1 ' ;     /*SET LEVEL TO 1         @ZA27588*/ 01450000
 %IF SSC9999 ¬= ','                 /*COMMA TO CONTINUE      @ZA27588*/ 01500000
    %THEN SSC9999 = ';' ;           /*DEFAULT TO END         @ZA27588*/ 01550000
    SSCLEVEL ICBVLIST SSCBASE BDY(WORD),/*MSSC VOLUME TABLE  @ZA27588*/ 01600000
        5 ICBVLCNT FIXED(31),       /*NUMBER OF VOLUMES      @ZA27588*/ 01650000
        5 ICBVLENT(*) CHAR(60),     /*ENTRY ARRAY            @ZA27588*/ 01700000
          7 ICBVLVID CHAR(6),       /*VOLID                  @ZA27588*/ 01750000
          7 ICBVLCYL CHAR(54)       /*CYLINDER INDICATORS    @ZA27588*/ 01800000
             SSC9999                /*MSSC VOLUME TABLE END  @ZA27588*/ 01850000
./  ADD  SSI=42070140,NAME=ICBVVIC
* %/*  START OF SPECIFICATIONS****                                      00050003
.*                                                                      00100003
.*01   NAME = ICBVVIC                               6/19/74             00150003
.*                                                                      00200003
.*01   DESCRIPTIVE-NAME = MSVC REQUEST MACRO                            00250003
.*                                                                      00300003
.*01   COPYRIGHT = NONE                                                 00350003
.*                                                                      00400003
.*01   STATUS = OS/VS1 RELEASE 4, LEVEL 0                               00450003
.*              OS/VS2 RELEASE 3, LEVEL 0                               00500003
.*                                                                      00550003
.*01   FUNCTION = THIS MACRO EXPANDS INTO AN SVC 126 AND IS TO BE USED  00610003
.*                WITH REQUEST BLOCKS IEZMGP, IEZRVR, IEZSGP, IEZRVVI,  00620003
.*                AND IEZMVR.  DIRECT REQUESTS TO MSVC ARE EXECUTED     00630003
.*                IN THIS MANNER.                                       00640003
.*                                                                      00750003
.*01   NOTES = AS FOLLOWS:                                              00800003
.*                WHEN SVC 126 IS CALLED, REGISTER 1 SHOULD             00850003
.*                POINT THE REQUEST BLOCK (IEZRVR,IEZMGP,IEZSGP, ETC.,) 00900003
.*02     CODE = PLS2                                                    01000003
.*                                                                      01050003
.*02     RESTRICTIONS = NONE                                            01100003
.*                                                                      01250003
.*02     REGISTER-CONVENTIONS = NONE                                    01300003
.*                                                                      01400003
.*01   MODULE-TYPE = EXECUTABLE MACRO                                   01450003
.*                                                                      01500003
.*02     PROCESSOR = PLS2                                               01550003
.*                                                                      01600003
.*02     ATTRIBUTES = REENTERABLE                                       01650003
.*                                                                      01700003
.*02     ENTRY-POINT = NONE                                             01750003
.*                                                                      01800003
.*02     LINKAGE = SVC 126                                              01850003
.*                                                                      01900003
.*01 OPERATION:                                                         01950003
.*            DCL REQUEST BLOCK POINTER                                 02000003
.*            INCLUDE REQUEST BLOCK                                     02050003
.*            INITIALIZE REQUEST BLOCK                                  02100003
.*            REG1 = ADDR(REQUEST BLOCK)                                02150003
.*            ? ICBVVIC                                                 02200003
.*                                                                      02300003
.*01  INPUT = PLS INVOCATION:   LABEL: ? ICBVVIC                        02350003
.*                                                                      02400003
.*01  EXIT-NORMAL = VALID INVOCATION                                    02450003
.*                                                                      02500003
.*02     CONDITION = RETURN CODE = 0                                    02550003
.*                                                                      02600003
.*02     OUTPUT = REQUESTED ORDER GENERATED FOR THE SVC                 02650003
.*                                                                      02700003
.*01  EXIT-ERROR = NONE                                                 02750003
.*                                                                      02800003
.*01  EXTERNAL REFERENCES = NONE                                        02850003
.*                                                                      02900003
.*01  TABLES = NONE                                                     02950003
.*                                                                      03000003
.*01  CONTROL-BLOCKS = NONE                                             03050003
.*                                                                      03100003
.*01  INNER MACROS = NONE                                               03150003
.*                                                                      03200003
.*01  SYSTEM MACRO = NONE                                               03250003
.*                                                                      03300003
.*01  CHANGE-ACTIVITY = NONE                                            03350003
.*                                                                      03400003
.**** END OF SPECIFICATIONS ***/                                        03450003
                                                                        03500003
*    ICBVVIC:  MACRO; /*                                     @Y30LB22*/ 03550003
*/*********************************************************/            03600003
*/*      THE FOLLOWING CODE WILL INVOKE SVC 126.          */            03650003
*/*      THE RETURN CODE IS SET AND PROCESSING IS ENDED   */            03700003
*/*********************************************************/            03750003
*/*********************************************************/            03800003
*        ANS('SVC  (126);/*INVOKE SVC 126*/')SKIP;         /*@Y30LB22*/ 03850003
*/*                                                        */           03900003
*        RETURN CODE(0);                                   /*@Y30LB22*/ 03950003
*        %END;                                             /*@Y30LB22*/ 04000003
./  ADD  SSI=62740461,NAME=ICB2IOBX
 %ICB2IOBX: ;                       /* MACRO                 @Y30LB01*/ 00050003
     /**************************************************     @Y30LB01*/ 00100003
     /*              ****** MAPPING MACRO *****              @Y30LB01*/ 00150003
     /* MACRO NAME = ICB2IOBX(VS2)                           @Y30LB01*/ 00200003
     /*                                                      @Y30LB01*/ 00250003
     /* DESCRIPTIVE NAME = MSSC VS2 IOSB EXTENSION AREA      @Y30LB01*/ 00300003
     /*                                                      @Y30LB01*/ 00350003
     /* COPYRIGHT = NONE                                     @Y30LB01*/ 00400003
     /*                                                      @Y30LB01*/ 00450003
     /* CHANGE-ACTIVITY = Y30LB01                            @Y30LB01*/ 00500003
     /*                   YD00130                            @YD00130*/ 00510003
     /*                   ZM31050                            @ZM31050*/ 00520003
     /*                   ZDR2048 DEMOUNT VUA                @ZDR2048*/ 00530003
     /*                                                      @Y30LB01*/ 00550003
     /* %SSCLEVEL DEFAULTS                                   @Y30LB01*/ 00600003
     /*      DCL 1 SSCDATA BASED(SSCDATAP) BDY(WORD),        @Y30LB01*/ 00650003
     /*                                                      @Y30LB01*/ 00700003
     /* %SSC9999 DEFAULTS TO SEMICOLON                       @Y30LB01*/ 00750003
     /*                                                      @Y30LB01*/ 00800003
     /* TO SET YOUR OWN LEVEL 1 USE %SSCLEVEL = 'N' WHERE    @Y30LB01*/ 00850003
     /*        N IS THE LEVEL YOU WANT                       @Y30LB01*/ 00900003
     /*                                                      @Y30LB01*/ 00950003
     /* TO SET END TO , USE %SSC9999 = ','                   @Y30LB01*/ 01000003
     /***************************************************    @Y30LB01*/ 01050003
 %IF SSCLEVEL = ''                  /* DEFAULT LEVEL         @Y30LB01*/ 01200003
    %THEN SSCBASE = 'BASED(SSCDATAP)' ;/* BASED ON SSCDATAP  @Y30LB01*/ 01250003
    %ELSE SSCBASE = '' ;            /* NOT BASED             @Y30LB01*/ 01300003
 %IF SSCLEVEL = ''                  /* DEFAULT LEVEL         @Y30LB01*/ 01310003
    %THEN SSCLEVEL = 'DCL 1 ' ;     /* SET LEVEL TO 1        @Y30LB01*/ 01320003
 %IF SSC9999 ¬= ','                 /* COMMA TO CONTINUE     @Y30LB01*/ 01350003
    %THEN SSC9999 = ';' ;           /* DEFAULT TO END        @Y30LB01*/ 01400003
    SSCLEVEL SSCDATA SSCBASE BDY(WORD),/*MSSC IOSB EXTENSION @Y30LB01*/ 01450003
        5 IOECB      FIXED(31),     /* IO ECB ADDRESS        @Y30LB01*/ 01500003
          7 ECBCODE  CHAR(1),       /* IO COMP CODE          @Y30LB01*/ 01550003
        5 TCBADDR    FIXED(31),     /* TCB ADDRESS           @Y30LB01*/ 01600003
          7 TCBPTR   PTR(31),       /* TCB ADDRESS           @Y30LB01*/ 01650003
        5 IOERRCD    FIXED(15),     /* MSSC ERROR CODE       @Y30LB01*/ 01700003
          7 SSCDERR  FIXED(15),     /* MSSC ERROR CODE       @Y30LB01*/ 01750003
        5 APPSW      FIXED(16),     /* MSSC APPN SWITCHES    @Y30LB01*/ 01800003
          7 ERPSW    BIT(1),        /* ERP PROCESS SWITCH    @Y30LB01*/ 01810003
          7 POSTSW   BIT(1),        /* POST SWITCH           @Y30LB01*/ 01820003
          7 ATTNSW   BIT(1),        /* SPECIAL ATTN I/O      @ZM31050*/ 01830003
          7 *        BIT(13),       /* RESERVED              @ZM31050*/ 01840003
        5 APGAREA    CHAR(64) BDY(WORD), /* APPN SAVE AREA   @Y30LB01*/ 01850003
          7 APPSAV(16) FIXED(31),   /* APPN SAVE AREA        @ZDR2048*/ 01900003
        5 DMTID      CHAR(2),       /* SVC TO AEA COMM AREA  @ZDR2048*/ 02000003
        5 DMTVOL     CHAR(6)        /* AEA TO SVC COMM AREA  @ZDR2048*/ 02050003
             SSC9999                /* MSSC IOSB EXT END     @ZDR2048*/ 02100003
./  ADD  SSI=73490120,NAME=ICGDSMAC
 /********************************************************** @Y30LB12*/ 00050003
 /* THE FOLLOWING STRUCTURES, COMTAB AND COMTAB2, ARE THE    @Y30LB12*/ 00100003
 /* MAPPING OF THE GETMAIN AREA OBTAINED BY ICGDSINT.        @Y30LB12*/ 00150003
 /* COMTAB IS BASED OFF REGISTER 4 (RESERVED THROUGHOUT      @Y30LB12*/ 00200003
 /* TABLE CREATE) AND COMTAB2 IS BASED OFF THE POINTER       @Y30LB12*/ 00250003
 /* COMPTR2 WITHIN COMTAB.                                   @Y30LB12*/ 00300003
 /********************************************************** @Y30LB12*/ 00350003
 DCL 1 COMTAB BOUNDARY(DWORD) BASED(R4),/*                   @Y30LB12*/ 00400003
       2 PATCH CHAR(256),               /* PATCH, INIT 0     @Y30LB12*/ 00450003
                                                                        00460003
       /**************************************************** @Y30LB12*/ 00500003
       /* THE FOLLOWING AREA WILL CONTAIN THE DCB FOR SYSIN  @Y30LB12*/ 00550003
       /* DURING SCAN AND THE DCB FOR SYSPUNCH DURING BUILD. @Y30LB12*/ 00600003
       /* IN EACH CASE, A MODEL DCB IS COPIED INTO THIS AREA @Y30LB12*/ 00650003
       /* AND THE OPEN IS PERFORMED ON THIS COPY.            @Y30LB12*/ 00700003
       /* IN THIS AREA IS ALSO THE WORK AREA USED DURING     @Y30LB12*/ 00750003
       /* READING FROM SYSIN                                 @Y30LB12*/ 00800003
       /**************************************************** @Y30LB12*/ 00850003
       2 READER BOUNDARY(DWORD),        /*                   @Y30LB12*/ 00900003
         3 READDCB CHAR(96),            /* SYSIN/SYSPCH DCB  @Y30LB12*/ 00950003
         3 READFLAG BIT(8),             /* SYSIN FLAG BITS   @Y30LB12*/ 01000003
           4 READTERM BIT(1),           /* END OF DATA, S99  @Y30LB12*/ 01050003
           4 KEYBIT BIT(1),             /* SCANNED KEYWORD   @Y30LB12*/ 01100003
           4 PARMBIT BIT(1),            /* SCANNED PARAMETER @Y30LB12*/ 01150003
           4 ENDSCAN BIT(1),            /* ABNORMAL END, S99 @Y30LB12*/ 01200003
           4 LASTPARM BIT(1),           /* NORMAL END        @Y30LB12*/ 01250003
           4 * BIT(3),                  /* UNUSED            @Y30LB12*/ 01300003
         3 * CHAR(2),                   /* UNUSED            @Y30LB12*/ 01350003
         3 PCHBF CHAR(1),               /* SYSPUNCH WORKAREA @Y30LB12*/ 01400003
           4 SSELECT CHAR(1),           /* STACKER SELECT    @Y30LB12*/ 01450003
         3 INBUF CHAR(80),              /* SYSIN WORK AREA   @Y30LB12*/ 01500003
         3 STARTCOL PTR(31),            /* CURRENT START COL @Y30LB12*/ 01550003
         3 NEXTCOL PTR(31),             /* START NEXT FIELD  @Y30LB12*/ 01600003
         3 SAVESCOL PTR(31),            /* SAVED CURR START  @Y30LB12*/ 01650003
         3 SAVENCOL PTR(31),            /* SAVED START NEXT  @Y30LB12*/ 01700003
         3 SVSYNAD2 PTR(31),            /* SAVE, SYSIN SYNAD @Y30LB12*/ 01750003
         3 SVEODAD PTR(31),             /* SAVE, SYSIN EODAD @Y30LB12*/ 01800003
         3 SCANLEN FIXED(15),           /* LEN OF SCAN DATA  @Y30LB12*/ 01850003
         3 * FIXED(15),                 /* UNUSED            @Y30LB12*/ 01900003
                                                                        01910003
       /**************************************************** @Y30LB12*/ 01950003
       /* THIS IS THE DCB FOR SYSPRINT.  IT WILL BE USED     @Y30LB12*/ 02000003
       /* FOR THE ENTIRE DURATION OF THE RUN.                @Y30LB12*/ 02050003
       /* INCLUDED ALSO IN THIS AREA IS THE WORK AREA        @Y30LB12*/ 02100003
       /* USED FOR COMMUNICATIONS WITH THE MESSAGE           @Y30LB12*/ 02150003
       /* WRITER                                             @Y30LB12*/ 02200003
       /**************************************************** @Y30LB12*/ 02250003
       2 PRINTER BOUNDARY(DWORD),       /*                   @Y30LB12*/ 02300003
         3 DCBPRINT CHAR(96),           /* SYSPRINT DCB      @Y30LB12*/ 02350003
         3 PAGENO CHAR(4),              /* STARTING PAGE NO. @Y30LB12*/ 02400003
         3 LINECTR FIXED(15),           /* LINES LEFT TO PRT @Y30LB12*/ 02450003
         3 LINECT FIXED(15),            /* LINES PER PAGE    @Y30LB12*/ 02500003
         3 OUTBUF CHAR(121),            /* 1ST PRINT BUFFER  @Y30LB12*/ 02550003
         3 OUTBUF2 CHAR(121),           /* 1ST PRINT BUFFER  @Y30LB12*/ 02600003
                                                                        02610003
       /**************************************************** @Y30LB12*/ 02650003
       /* THIS AREA IS USED FOR COMMUNICATIONS WITH THE      @Y30LB12*/ 02700003
       /* MESSAGE WRITER (ICGDSMSG).                         @Y30LB12*/ 02750003
       /**************************************************** @Y30LB12*/ 02800003
       2 MESSAGES,                      /*                   @Y30LB12*/ 02850003
         3 RETCODE FIXED(15),           /* HIGHEST RETURN CD @Y30LB12*/ 02900003
         3 MSGNO FIXED(15),             /* MSG PTR, ICGDSMSG @Y30LB12*/ 02950003
         3 WARNING FIXED(15),           /* COUNT WARNING MSG @Y30LB12*/ 03000003
         3 TERMINAT FIXED(15),          /* COUNT TERM MSGS   @Y30LB12*/ 03050003
         3 WARN CHAR(4),                /* PRINTABLE WARN CT @Y30LB12*/ 03100003
         3 TERM CHAR(4),                /* PRINTABLE TERM CT @Y30LB12*/ 03150003
         3 PRINTRC CHAR(2),             /* PRINTABLE RET CD  @Y30LB12*/ 03200003
         3 SPECLMSG BIT(8),             /* ICGDSMSG FLAGS    @Y30LB12*/ 03250003
           4 NEED101 BIT(1),            /* NEED ICGDS101 MSG @Y30LB12*/ 03300003
           4 NEED102 BIT(1),            /* NEED ICGDS102 MSG @Y30LB12*/ 03350003
           4 * BIT(1),                  /* UNUSED            @Y30LB12*/ 03400003
           4 PRNTCARD BIT(1),           /* PRINT CARD IMAGE  @Y30LB12*/ 03450003
           4 * BIT(1),                  /* UNUSED            @Y30LB12*/ 03500003
           4 ENDPHASE BIT(1),           /* ICGDS103,4,5,OR 6 @Y30LB12*/ 03550003
           4 NEEDEOJ BIT(1),            /* NEED ICGDS107     @Y30LB12*/ 03600003
           4 PRNTBUF2 BIT(1),           /* PRINT FROM BUF2   @Y30LB12*/ 03650003
         3 * CHAR(3),                   /* UNUSED            @Y30LB12*/ 03700003
                                                                        03710003
       /**************************************************** @Y30LB12*/ 03750003
       /* THE FOLLOWING AREA IS A GENERAL WORK AREA USED     @Y30LB12*/ 03800003
       /* TO HANDLE I/O OPERATIONS.  IT ALSO CONTAINS THE    @Y30LB12*/ 03850003
       /* POINTER TO THE COMMON WORK AREA FOR BUILD ROUTINES.@Y30LB12*/ 03900003
       /**************************************************** @Y30LB12*/ 03950003
       2 GENIO,                         /*                   @Y30LB12*/ 04000003
         3 OPENLIST CHAR(4) BOUNDARY(WORD),/* TO EXEC OPEN   @Y30LB12*/ 04050003
         3 DCBPTR PTR(31),              /* FOR DCB OVERLAY   @Y30LB12*/ 04100003
           4 DCBFLAG CHAR(1),           /* OPTIONS FLAG      @Y30LB12*/ 04150003
           4 * CHAR(3),                 /*                   @Y30LB12*/ 04200003
         3 EXLST CHAR(4),               /* EXIT LIST         @Y30LB12*/ 04250003
         3 SAVE14 CHAR(4),              /* R14 DURING EXITS  @Y30LB12*/ 04300003
         3 COMPTR2 PTR(31) BOUNDARY(WORD), /* PTR TO COMTAB2 @Y30LB12*/ 04350003
         3 BUILDPTR PTR(31) BOUNDARY(WORD), /* PTR BUILDTAB  @Y30LB12*/ 04400003
                                                                        04410003
       /**************************************************** @Y30LB12*/ 04450003
       /* THIS AREA CONTAINS THE INVOKER'S REGISTER 1 AND    @Y30LB12*/ 04500003
       /* THE NAMES OF USER SUPPLIED ALTERNATE DDNAMES.      @Y30LB12*/ 04550003
       /**************************************************** @Y30LB12*/ 04600003
       2 INVOKED,                       /*                   @Y30LB12*/ 04650003
         3 PARMPTR PTR(31),             /* INVOKER'S PARM R1 @Y30LB12*/ 04700003
         3 SAVEDDS,                     /* ALTERNATE DDNAMES @Y30LB12*/ 04750003
           4 SVSYSIN CHAR(8),           /* ALT. SYSIN        @Y30LB12*/ 04800003
           4 SVSYSPCH CHAR(8),          /* ALT. SYSPUNCH     @Y30LB12*/ 04850003
           4 SVSYSUT1 CHAR(8),          /* ALT. SYSUT1       @Y30LB12*/ 04900003
           4 SVSYSUT2 CHAR(8),          /* ALT. SYSUT2       @Y30LB12*/ 04950003
           4 SVSYSUT3 CHAR(8),          /* ALT. SYSUT3       @Y30LB12*/ 05000003
 @ EJECT;                                                               05050003
       /**************************************************** @Y30LB12*/ 05100003
       /* THE FOLLOWING STRUCTURE CONTAINS PART OF THE       @Y30LB12*/ 05150003
       /* INFORMATION REQUIRED TO BUILD THE STAGING DRIVE    @YD00113*/ 05200003
       /* GROUP TABLE AND TO VERIFY CONSISTENCY OF RSG       @Y30LB12*/ 05250003
       /* ASSIGNMENT.  THE LRU THRESHOLD AND LRU TIMESTAMP   @Y30LB12*/ 05300003
       /* INFORMATION IS OBTAINED FROM THE SDGXX CONTROL     @YD00113*/ 05350003
       /* STATEMENT.  THE REMAINDER OF THE INFORMATION IS    @Y30LB12*/ 05400003
       /* BUILT FROM INFORMATION CONTAINED IN THE DASD       @YD00113*/ 05450003
       /* CONTROL STATEMENT.  THE INFORMATION IS USED TO     @Y30LB12*/ 05500003
       /* COMPLETE FIELDS IN THE PAGE AVAILABILITY BLOCK     @Y30LB12*/ 05550003
       /* OF THE SDG TABLE                                   @YD00113*/ 05600003
       /*                                                    @Y30LB12*/ 05610003
       /* TODS1 AND TODS2 ARE INITIALIZED IN ICGDSSCN TO     @Y30LB12*/ 05620003
       /* 'FF'X.  ARE OTHER FIELDS ARE INITIALIZED TO BINARY @Y30LB12*/ 05630003
       /* ZEROS.                                             @Y30LB12*/ 05640003
       /**************************************************** @Y30LB12*/ 05650003
       2 BUILDRSG,                      /*                   @Y30LB12*/ 05700003
         3 RSGS (30) CHAR(9),           /* TABLE HOLDS 30    @Y30LB12*/ 05750003
           4 RSG CHAR(9),               /* ONE GROUP         @Y30LB12*/ 05800003
             5 RSGSPEC BIT(1),          /* GROUP SPECIFIED   @Y30LB12*/ 05850003
             5 RSGABOX BIT(2),          /* A-BOX ATTACHMENT  @Y30LB12*/ 05900003
               6 RSGABOX0 BIT(1),       /* ON LOGICAL ABOX 0 @Y30LB12*/ 05950003
               6 RSGABOX1 BIT(1),       /* ON LOGICAL ABOX 1 @Y30LB12*/ 06000003
             5 * BIT(5),                /* UNUSED            @Y30LB12*/ 06050003
             5 RSGLDEL FIXED(8),        /* LOWER LRU DELTA   @Y30LB12*/ 06100003
             5 RSGUDEL FIXED(8),        /* UPPER LRU DELTA   @Y30LB12*/ 06150003
             5 RSGSLICE CHAR(4),        /* 4 TIME-STAMPS     @Y30LB12*/ 06200003
             5 RSGTODS CHAR(2),         /* DS CONNECTIONS    @Y30LB12*/ 06250003
               6 TODS1 CHAR(1),         /* FIRST (LOWER) DS  @Y30LB12*/ 06300003
               6 TODS2 CHAR(1),         /* OPTIONAL 2ND DS   @Y30LB12*/ 06350003
 @ EJECT;                                                               06400003
       /**************************************************** @Y30LB12*/ 06450003
       /* THE FOLLOWING AREA IS USED TO DESCRIBE THE         @Y30LB12*/ 06500003
       /* MASS STORAGE FACILITIES ATTACHED TO THE SUBSYSTEM. @YD00113*/ 06550003
       /* ONLY TWO MSFS ARE SUPPORTED, AND THE FIRST LOGICAL @YD00113*/ 06600003
       /* MSF IDENTIFICATION MUST BE 0.  IF A SECOND MSF IS  @YD00113*/ 06650003
       /* PRESENT, IT MUST BE MSF 1.                         @YD00113*/ 06700003
       /**************************************************** @Y30LB12*/ 06800003
       2 LIBRARY,                       /*                   @Y30LB12*/ 06850003
         3 LIBS (4) CHAR(12),           /* POSITIONAL, LIBID @Y30LB12*/ 06900003
           4 LIB CHAR(12),              /*                   @Y30LB12*/ 06950003
             5 LIBBITS,                 /*                   @Y30LB12*/ 07000003
               6 LIBSPEC BIT(1),        /* LIBRARY PRESENT   @Y30LB12*/ 07050003
               6 * BIT(7),              /* UNUSED            @Y30LB12*/ 07100003
             5 LIBSIZE CHAR(1),         /* NUMBER OF FRAMES  @Y30LB12*/ 07150003
             5 LIBDSMID CHAR(1),        /* ADDRESS FROM DSM  @Y30LB12*/ 07200003
             5 LIBMAP CHAR(1),          /* LOADMAP CHOSEN    @Y30LB12*/ 07250003
             5 MAPEXIT CHAR(8),         /* USER EXIT NAME    @Y30LB12*/ 07300003
 @ EJECT;                                                               07350003
       /**************************************************** @Y30LB12*/ 07400003
       /* THIS STRUCTURE CONTAINS THE INFORMATION NEEDED TO  @Y30LB12*/ 07450003
       /* COMPLETE THE DEVICE PORTION OF THE PAB (PAGE       @Y30LB12*/ 07500003
       /* AVAILABILITY BLOCK) OF THE RSG TABLE.  THE         @Y30LB12*/ 07550003
       /* STRUCTURE IS ORGANIZED BY LOGICAL DEVICE WITHIN    @Y30LB12*/ 07600003
       /* REAL SPINDLE GROUP.  THE FLAGS PABEXIST, PABIBERG, @Y30LB12*/ 07650003
       /* AND PABBERG2, AND THE BYTE PABAADDD ARE COMPLETED  @Y30LB12*/ 07700003
       /* FROM INFORMATION SCANNED FROM THE SPINDLES         @Y30LB12*/ 07750003
       /* STATEMENT.  THE BYTE PABREAL IS COMPLETED FROM     @Y30LB12*/ 07800003
       /* MOVING THE REAL INTERFACE INFORMATION SCANNED      @Y30LB12*/ 07850003
       /* FROM THE UPPERCON STATEMENT INTO THIS TABLE        @Y30LB12*/ 07900003
       /* DURING ANALYZE.  THE FLAG PABDSMTL (PACK CONTAINS  @Y30LB12*/ 07950003
       /* DSM TABLES) IS SET DURING ANALYZE.  THE FLAG       @Y30LB12*/ 08000003
       /* PABVOVIR (VOLUME AVAILABLE FOR STAGING) IS SET     @Y30LB12*/ 08050003
       /* DURING ACTUAL OUTPUT OF THE DATA TO DASD.          @Y30LB12*/ 08100003
       /**************************************************** @Y30LB12*/ 08150003
       2 PABTABLE (30,8) CHAR(3),       /*                   @Y30LB12*/ 08200003
         3 PABDEV CHAR(3),              /* EACH DEVICE       @Y30LB12*/ 08250003
           4 PABFLAGS BIT(8),           /*                   @Y30LB12*/ 08300003
             5 PABEXIST BIT(1),         /* LOGICAL DEVICE    @Y30LB12*/ 08350003
             5 PABVOVIR BIT(1),         /* VARIED ON VIRTUAL @Y30LB12*/ 08400003
             5 * BIT(1),                /* NOT INITIALIZED   @Y30LB12*/ 08450003
             5 PABIBERG BIT(1),         /* PHYSICAL 3330-11  @Y30LB12*/ 08500003
             5 PABDSMTL BIT(1),         /* CONTAINS TABLES   @Y30LB12*/ 08550003
             5 * BIT(2),                /* NOT INITIALIZED   @Y30LB12*/ 08600003
             5 PABBERG2 BIT(1),         /* 2ND HALF, 3330-11 @Y30LB12*/ 08650003
           4 PABREAL BIT(8),            /* REAL INTERFACES   @Y30LB12*/ 08700003
             5 PABIMPLR BIT(1),         /* REAL AT IMPL      @Y30LB12*/ 08750003
             5 PAB1B BIT(1),            /* 1ST DS INT B      @Y30LB12*/ 08800003
             5 PAB1C BIT(1),            /* 1ST DS INT C      @Y30LB12*/ 08850003
             5 PAB1D BIT(1),            /* 1ST DS INT D      @Y30LB12*/ 08900003
             5 * BIT(1),                /* NOT INITIALIZED   @Y30LB12*/ 08950003
             5 PAB2B BIT(1),            /* 2ND DS INT B      @Y30LB12*/ 09000003
             5 PAB2C BIT(1),            /* 2ND DS INT C      @Y30LB12*/ 09050003
             5 PAB2D BIT(1),            /* 2ND DS INT D      @Y30LB12*/ 09100003
           4 PABAADDD BIT(8),           /* PHYSICAL ADDRESS  @Y30LB12*/ 09150003
             5 PABZEROS BIT(3),         /* ALWAYS ZEROS      @Y30LB12*/ 09200003
             5 PABAA BIT(2),            /* DASD CONTROLLER   @Y30LB12*/ 09250003
             5 PABDDD BIT(3),           /* PHYSICAL DEVICE   @Y30LB12*/ 09300003
 @ EJECT;                                                               09350003
       /**************************************************** @Y30LB12*/ 09400003
       /* THE FOLLOWING TWO STRUCTURES CONTAIN THE DATA      @Y30LB12*/ 09450003
       /* EXTRACTED FROM THE SPINDLES CONTROL STATEMENT.     @Y30LB12*/ 09500003
       /*                                                    @Y30LB12*/ 09550003
       /* THE STRUCTURE DSPAIRS IS ORGANIZED BY DASD         @Y30LB12*/ 09600003
       /* CONTROLLER WITHIN DATA STAGER AND INDICATES THE    @Y30LB12*/ 09650003
       /* SECOND DATA STAGER (IF ANY) TO WHICH THE DASD      @Y30LB12*/ 09700003
       /* CONTROLLER ATTACHES.   IF 'A' POINTS TO 'B'        @Y30LB12*/ 09750003
       /* 'B' ALSO POINTS AT 'A'. THIS STRUCTURE IS          @Y30LB12*/ 09800003
       /* INITIALIZED TO 'FF'X IN ICGDSSCN.                  @Y30LB12*/ 09810003
       /*                                                    @Y30LB12*/ 09850003
       /* THE STRUCTURE PHYSTYPE IS ORGANIZED BY PHYSICAL    @Y30LB12*/ 09900003
       /* DEVICE ADDRESS WITHIN DASD CONTROLLER WITHIN DATA  @Y30LB12*/ 09950003
       /* DATA STAGER. THIS STRUCTURE IS USED TO INDICATE    @Y30LB12*/ 10000003
       /* THETHER THE SPECIFIC PHYSICAL SPINDLE EXISTS       @Y30LB12*/ 10050003
       /* WITHIN THE CONFIGURATION (NON-EXISTENT IS '00'B    @Y30LB12*/ 10100003
       /* IN THE BITS 'MERLICEB'), WHERTHER THE SPINDLE IS   @Y30LB12*/ 10150003
       /* A 3330 MODEL 1 ('01' IN 'MERLICEB) OR A 3330       @Y30LB12*/ 10200003
       /* MODEL 11 ('10' IN 'MERLICEB), WHETHER THE SPINDLE  @Y30LB12*/ 10250003
       /* HAS AN SSID OR WHETHER IT IS REAL, AND, FOR        @Y30LB12*/ 10300003
       /* SPINDLES WITH SSID, THE REAL SPINDLE GROUP, THE    @Y30LB12*/ 10350003
       /* LOGICAL A-BOX, AND THE LOGICAL DEVICE.             @Y30LB12*/ 10400003
       /**************************************************** @Y30LB12*/ 10450003
       2 DSPAIRS (16,4) CHAR(1),        /*                   @Y30LB12*/ 10500003
         3 PHYSDS2 CHAR(1),             /* SECOND DS (OPT)   @Y30LB12*/ 10550003
       2 PHYSTYPE (16,4,8) CHAR(2),     /* 16 DS 4 ABOX 8 DV @Y30LB12*/ 10600003
         3 PHYSFLGS BIT(8),             /*                   @Y30LB12*/ 10650003
           4 MERLICEB BIT(2),           /* IF 00, NO DEVICE  @Y30LB12*/ 10700003
           4 PHYSREAL BIT(1),           /* NON-SUBSYSTEM     @Y30LB12*/ 10850003
           4 PHYSSSID BIT(1),           /* SUBSYSTEM DASD    @Y30LB12*/ 10900003
           4 LOGABOX1 BIT(1),           /* LOGICAL A-BOX 1   @Y30LB12*/ 10950003
           4 LGDEVICE BIT(3),           /* LOGICAL DEVICE    @Y30LB12*/ 11000003
         3 SPNRSGNO BIT(8),             /* RSG NUMBER        @Y30LB12*/ 11050003
 @ EJECT;                                                               11100003
       /**************************************************** @Y30LB12*/ 11150003
       /* THE FOLLOWING STRUCTURE DESCRIBES THE CPU          @Y30LB12*/ 11200003
       /* STRUCTURE OF THE CONFIGURATION TABLE (BYTES        @Y30LB12*/ 11250003
       /* 128-255 OF THE FIRST BLOCK).  THIS PORTION OF THE  @Y30LB12*/ 11300003
       /* CONFIGURATION TABLES DESCRIBES THE MANUFACTURER'S  @Y30LB12*/ 11350003
       /* IDENTIFICATION OF THE CPUS THAT INTERFACE WITH THE @Y30LB12*/ 11400003
       /* SUBSYSTEM, AND THOSE CPUS' CONNECTIONS WITH ONE    @Y30LB12*/ 11450003
       /* ANOTHER.                                           @Y30LB12*/ 11500003
       /* THE COUNTER 'CPUNUM' IS NOT PART OF THE OUTPUT IT  @Y30LB12*/ 11550003
       /* TABLE.  IT IS USED INTERNALLY IN ICGDSS02 TO       @Y30LB12*/ 11600003
       /* DEVELOP THE LOGICAL CPUID (0-F) TO BE USED TO      @Y30LB12*/ 11650003
       /* PLACE ENTRIES IN THE TABLE.  IT IS ALSO THE        @Y30LB12*/ 11700003
       /* NUMBER OF ENTRIES CURRENTLY IN THE TABLE.          @Y30LB12*/ 11750003
       /* ALL OTHER FIELDS IN THE STRUCTURE ARE BUILT IN     @Y30LB12*/ 11800003
       /* THE SAME FORMAT THAT THEY WILL HAVE IN THE         @Y30LB12*/ 11850003
       /* OUTPUT TABLE.                                      @Y30LB12*/ 11900003
       /* THE THREE BITS IN THIS STRUCTURE CALLED 'OPSYSTYP' @ZD02028*/ 11910003
       /* ARE NOT PART OF THE CPU ASSOCIATION TABLE AND ARE  @ZD02028*/ 11920003
       /* RESET IN THE STRUCTURE PRODUCED BY ICGDSB08.       @ZD02028*/ 11930003
       /**************************************************** @Y30LB12*/ 11950003
       2 CPUASSOC,                      /*                   @Y30LB12*/ 12000003
         3 CPUNUM FIXED(15),            /* CURRENT ENTRIES   @Y30LB12*/ 12050003
         3 CPUS (16) CHAR(8),           /* ENTIRE, 128 BYTES @Y30LB12*/ 12100003
           4 CPU CHAR(8),               /* ONE OF 16 ENTRIES @Y30LB12*/ 12150003
             5 CPUID CHAR(5),           /* MANUFACTURER'S ID @Y30LB12*/ 12200003
             5 TOMPCPU BIT(8),          /* MPCPU, AS BIT SW  @Y30LB12*/ 12250003
             5 CPUFLAG1 BIT(8),         /* FLAG BYTE         @Y30LB12*/ 12300003
               6 * BIT(1),              /* NOT INITIALIZED   @Y30LB12*/ 12350003
               6 CPUTIGHT BIT(1),       /* TIGHTLY-COUPLED   @Y30LB12*/ 12400003
               6 CPUALTFL BIT(1),       /* CPU HAS ALT. INT. @YD00142*/ 12410003
               6 OPSYSTYP BIT(3),       /* PRIMARY OP SYSTEM @ZD02028*/ 12450003
                 7 OPVS1 BIT(1),        /* USE OS/VS1        @ZD02028*/ 12460003
                 7 OPVS2 BIT(1),        /* USE OS/VS2        @ZD02028*/ 12470003
                 7 OPJES3 BIT(1),       /* IN JES3 NETWORK   @Z40LB73*/ 12480003
               6 CPUMSCIN BIT(2),       /* MSC INTERFACE     @Y30LB12*/ 12500003
             5 CPUFLAG2 BIT(8),         /* FLAG BYTE         @Y30LB12*/ 12550003
               6 CPUSPEC BIT(1),        /* SPEC. AS CPUID    @Y30LB12*/ 12600003
               6 * BIT(1),              /* NOT INITIALIZED   @YD00142*/ 12610003
               6 ALTMSGBF BIT(1),       /* MSG BUFFER FLAG   @YD00142*/ 12620003
               6 * BIT(3),              /* NOT INITIALIZED   @YD00142*/ 12650003
               6 ALTMSCIN BIT(2),       /* ALT MSC INTERFACE @Y30LB12*/ 12660003
 @ EJECT;                                                               12700003
       /**************************************************** @Y30LB12*/ 12750003
       /* THE FOLLOWING TWO AREAS (LOWERCON AND LIBCTL) ARE  @Y30LB12*/ 12800003
       /* USED TO HOLD THE VALUES SCANNED FROM THE           @Y30LB12*/ 12850003
       /* 'LOWERCON' CONTROL STATEMENT                       @Y30LB12*/ 12900003
       /* LOWERCON IS ORGANIZED BY DATA STAGER BY LIBRARY    @Y30LB12*/ 12950003
       /* READ/WRITE CONTROL UNIT IDENTIFICATION.            @Y30LB12*/ 13000003
       /* LIBCTL IS ORGANIZED BY LIBRARY BY LIBRARY          @Y30LB12*/ 13050003
       /* READ/WRITE CONTROL UNIT POSITION AND IS USED TO    @Y30LB12*/ 13100003
       /* INDICATE WHETHER THE POSITION IS AVAILABLE OR      @Y30LB12*/ 13150003
       /* ALREADY IN USE.                                    @Y30LB12*/ 13200003
       /**************************************************** @Y30LB12*/ 13250003
       2 LOWERCON,                      /*                   @Y30LB12*/ 13300003
         3 LOWDSS (16,4) CHAR(2),       /* CU WITHIN DS      @Y30LB12*/ 13350003
           4 LOWFLGS BIT(8),            /* EACH CTL. UNIT    @Y30LB12*/ 13400003
             5 LOWSPEC BIT(1),          /* CU ADDR SPECIFIED @Y30LB12*/ 13450003
             5 LOWRW01 BIT(1),          /* TO READ/WRITES 01 @Y30LB12*/ 13500003
             5 LOWRW23 BIT(1),          /* TO READ/WRITES 23 @Y30LB12*/ 13550003
             5 LOWRW45 BIT(1),          /* TO READ/WRITES 45 @Y30LB12*/ 13600003
             5 LOWRW67 BIT(1),          /* TO READ/WRITES 67 @Y30LB12*/ 13650003
             5 LOWLEFT BIT(1),          /* TO LEFT INTERFACE @Y30LB12*/ 13700003
             5 LOWRGHT BIT(1),          /* RIGHT INTERFACE   @Y30LB12*/ 13750003
             5 * BIT(1),                /* UNUSED            @Y30LB12*/ 13800003
           4 LOWLIB CHAR(1),            /* IN LIBRARY        @Y30LB12*/ 13850003
       2 LIBCTL,                        /*                   @Y30LB12*/ 13900003
         3 LIBCTLS (4) CHAR(1),         /* FOR LOGICAL LIB   @Y30LB12*/ 13950003
           4 RW01LEFT BIT(1),           /* LEFT RW01 USED    @Y30LB12*/ 14000003
           4 RW01RGHT BIT(1),           /* RIGHT RW01 USED   @Y30LB12*/ 14050003
           4 RW23LEFT BIT(1),           /* LEFT RW23 USED    @Y30LB12*/ 14100003
           4 RW23RGHT BIT(1),           /* RIGHT RW23 USED   @Y30LB12*/ 14150003
           4 RW45LEFT BIT(1),           /* LEFT RW45 USED    @Y30LB12*/ 14200003
           4 RW45RGHT BIT(1),           /* RIGHT RW45 USED   @Y30LB12*/ 14250003
           4 RW67LEFT BIT(1),           /* LEFT RW67 USED    @Y30LB12*/ 14300003
           4 RW67RGHT BIT(1),           /* RIGHT RW67 USED   @Y30LB12*/ 14350003
 @ EJECT;                                                               14400003
       /**************************************************** @Y30LB12*/ 14450003
       /* THE FOLLOWING AREA IS USED TO HOLD THE VALUES      @Y30LB12*/ 14500003
       /* SCANNED FROM THE 'CREATE' CONTROL STATEMENT.       @Y30LB12*/ 14550003
       /**************************************************** @Y30LB12*/ 14600003
       2 CREATE,                        /*                   @Y30LB12*/ 14650003
         3 * BIT(8),                    /*                   @Y30LB12*/ 14700003
           4 CMDCREAT BIT(1),           /* STATEMENT PRESENT @Y30LB12*/ 14750003
           4 NEWCREAT BIT(1),           /* NEW SPECIFIED     @Y30LB12*/ 14800003
           4 UPDCREAT BIT(1),           /* UPDATE SPECIFIED  @Y30LB12*/ 14850003
           4 PRNTONLY BIT(1),           /* ONLY PRINTED DATA @Y30LB12*/ 14900003
           4 CYLFAULT BIT(1),           /* CYL FAULT OPTED   @G24LB42*/ 14910042
           4 BINTIND BIT(1),            /* CI 'B' INDICATOR. @ZA20268*/ 14960000
           4 CINTIND BIT(1),            /* CI 'C' INDICATOR  @ZA20268*/ 14970000
           4 DINTIND BIT(1),            /* CI 'D' INDICATOR  @ZA20268*/ 14980000
         3 VPAGES(4) FIXED(8),          /* LOG TO REAL MAP   @Y30LB12*/ 15000003
         3 VOLSER CHAR(6),              /* VOLUME SERIAL NO. @Y30LB12*/ 15050003
         3 LRUCLOCK CHAR(1),            /* MASTER LRU CLOCK  @Y30LB12*/ 15100003
       2 COM2BASE CHAR(8) BOUNDARY(DWORD); /* START COMTAB2  @Y30LB12*/ 15150003
  DCL  PHYSFNUL  BIT(2)  CONSTANT('00'B);  /* NO DEVICE      @X50RSPC*/ 15150442
  DCL  PHYSFICE  BIT(2)  CONSTANT('01'B);  /* 3330 MODEL 11  @X50RSPC*/ 15152042
  DCL  PHYSFMER  BIT(2)  CONSTANT('10'B);  /* 3330 MODEL 1   @X50RSPC*/ 15160042
  DCL  PHYSFMAD  BIT(2)  CONSTANT('11'B);  /* 3350           @X50RSPC*/ 15170042
 @ EJECT;                                                               15200003
 /********************************************************** @Y30LB12*/ 15210003
 /* THE FOLLOWING STRUCTURE (COMTAB2) IS A PHYSICAL AND      @Y30LB12*/ 15220003
 /* LOGICAL CONTINUATION OF THE STRUCTURE COMTAB.            @Y30LB12*/ 15230003
 /* PHYSICALLY THE STRUCTURE IS BASED ON THE POINTER COMPTR2 @Y30LB12*/ 15240003
 /* WHICH CONTAINS THE ADDRESS OF COM2BASE.   THIS           @Y30LB12*/ 15242003
 /* STURCTURE IS USED TO CONTAIN THE DATA SCANNED FROM THE   @Y30LB12*/ 15244003
 /* UPPERCON CONTROL STATEMENT.                              @Y30LB12*/ 15246003
 /********************************************************** @Y30LB12*/ 15248003
 DCL 1 COMTAB2 BASED(COMPTR2),          /*                   @Y30LB12*/ 15250003
                                                                        15260003
       /**************************************************** @Y30LB12*/ 15300003
       /* THE FOLLOWING STRUCTURE IS BUILT DURING THE SCAN   @Y30LB12*/ 15350003
       /* OF THE UPPERCON STATEMENT AND IS USED TO VERIFY    @Y30LB12*/ 15400003
       /* THAT ALL THREE INTERFACES INTO A DATA STAGER       @Y30LB12*/ 15450003
       /* INTERFACE TO NO MORE THAN TWO RSGS IN TOTAL        @Y30LB12*/ 15500003
       /* THE STRUCTURE IS ORGANIZED BY DATA STAGER.         @Y30LB12*/ 15550003
       /* THE STRUCTURE IS INITIALIZED TO 'FF'X IN ICGDSSCN  @Y30LB12*/ 15560003
       /**************************************************** @Y30LB12*/ 15600003
       2 DSTORSG (16) CHAR(2),          /*                   @Y30LB12*/ 15650003
         3 DSENTRY CHAR(2),             /*                   @Y30LB12*/ 15700003
           4 TORSG1 CHAR(1),            /*                   @Y30LB12*/ 15750003
           4 TORSG2 CHAR(1),            /*                   @Y30LB12*/ 15800003
                                                                        15810003
       /**************************************************** @Y30LB12*/ 15850003
       /* THE FOLLOWING STRUCTURE IS ORGANIZED BY DATA       @Y30LB12*/ 15900003
       /* STAGER/CHANNEL INTERFACE AND CONTAINS THE DATA     @Y30LB12*/ 15950003
       /* THAT IS COMMON TO ALL DEVICE ADDRESSES THROUGH     @Y30LB12*/ 16000003
       /* THAT INTERFACE (CPU/CHANNEL/CONTROL UNIT).  THE    @Y30LB12*/ 16050003
       /* FIELD CPUREFNO IS DEVELOPED IN THE ANALYSIS        @Y30LB12*/ 16100003
       /* ROUTINES BY FINDING THE LOGICAL (POSITIONAL)       @Y30LB12*/ 16150003
       /* IDENTIFICATION OF THE CPU FROM CPUASSOC.  THE      @Y30LB12*/ 16200003
       /* INFORMATION IN THIS STRUCTURE IS USED TO BUILD     @Y30LB12*/ 16250003
       /* THE CONFIGURATION INDEX PORTION OF THE             @Y30LB12*/ 16300003
       /* CONFIGURATION TABLE.                               @Y30LB12*/ 16350003
       /**************************************************** @Y30LB12*/ 16400003
       2 CONFGCON (48) CHAR(9),       /* COMMON ON INTERFACE @Y30LB12*/ 16450003
         3 RSGUCB CHAR(9),            /*                     @Y30LB12*/ 16500003
           4 RSGFLAGS,                /*                     @Y30LB12*/ 16550003
             5 CISPEC BIT(1),         /* UPPERCON STATEMENT  @Y30LB12*/ 16600003
             5 * BIT(7),              /*                     @Y30LB12*/ 16650003
           4 RSGCPUID CHAR(5),        /* UPPERCON CPUID      @Y30LB12*/ 16700003
           4 CPUREFNO CHAR(1),        /* LOGICAL CPUID       @Y30LB12*/ 16750003
           4 RSGCHAN CHAR(1),         /* HOST CHANNEL        @Y30LB12*/ 16800003
           4 RSGCUA CHAR(1),          /* DS CONTROL UNIT ADR @Y30LB12*/ 16850003
                                                                        16860003
       /**************************************************** @Y30LB12*/ 16900003
       /* THE FOLLOWING STRUCTURE DESCRIBES EACH POSSIBLE    @Y30LB12*/ 16950003
       /* DEVICE ADDRESS (64) THAT CAN BE GENERATED FOR A    @Y30LB12*/ 17000003
       /* DATA STAGER/CHANNEL INTERFACE.  THIS STRUCTURE IS  @Y30LB12*/ 17050003
       /* USED TO BUILD THE DEVICE DATA PORTION OF THE       @Y30LB12*/ 17100003
       /* CONFIGURATION MAP AND ALSO TO HOLD THE DATA NEEDED @Y30LB12*/ 17150003
       /* TO PRODUCE THE IODEVICE AND UNITNAME SYSGEN        @YD00113*/ 17200003
       /* STATEMENTS.  THE STRUCTURE IS ORGANIZED BY DEVICE  @Y30LB12*/ 17250003
       /* WITHIN STAGING ADAPTER/CHANNEL INTERFACE.          @YD00113*/ 17300003
       /**************************************************** @Y30LB12*/ 17350003
       2 CONFGUCB (48,64) CHAR(11),     /*                   @Y30LB12*/ 17400003
         3 CONFGDEV CHAR(11),           /*                   @Y30LB12*/ 17450003
           4 USEFLAGS BIT(8),           /* DEVICE USE FLAGS  @Y30LB12*/ 17500003
             5 USESPEC BIT(1),          /* DEVICE IS USED    @Y30LB12*/ 17550003
             5 USEV BIT(1),             /* USED VIRTUAL      @Y30LB12*/ 17600003
             5 USEVS BIT(1),            /* USED SHARED VIRT  @Y30LB12*/ 17650003
             5 USEREAL BIT(1),          /* USED REAL         @Y30LB12*/ 17700003
             5 SUPPUNCH BIT(1),         /* NO SYSGEN CARD    @Y30LB12*/ 17750003
             5 USECONVR BIT(1),         /* USE CONVERTIBLE   @Y30LB12*/ 17800003
             5 ITISALTP BIT(1),         /* IS ALTERNATE PATH @Y30LB12*/ 17850003
             5 ICEBERG BIT(1),          /* DEVICE IS 3330-11 @Y30LB12*/ 17900003
           4 INDEXRSG BIT(8),           /* RSG NUMBER        @Y30LB12*/ 17950003
           4 ALTPATH1 BIT(24),          /* 1ST ALT PATH      @Y30LB12*/ 18000003
             5 ALTDS1 BIT(8),           /* 1ST ALT PATH DS   @Y30LB12*/ 18050003
             5 ALTCI1 BIT(8),           /* 1ST ALT PATH CI   @Y30LB12*/ 18100003
             5 ALTCH1 BIT(8),           /* 1ST ALT PATH CHAN @Y30LB12*/ 18150003
           4 ALTPATH2 BIT(24),          /* 2ND ALT PATH      @Y30LB12*/ 18200003
             5 ALTDS2 BIT(8),           /* 2ND ALT PATH DS   @Y30LB12*/ 18250003
             5 ALTCI2 BIT(8),           /* 2ND ALT PATH CI   @Y30LB12*/ 18300003
             5 ALTCH2 BIT(8),           /* 2ND ALT PATH CHAN @Y30LB12*/ 18350003
           4 ALTPATH3 BIT(24),          /* 3RD ALT PATH      @Y30LB12*/ 18400003
             5 ALTDS3 BIT(8),           /* 3RD ALT PATH DS   @Y30LB12*/ 18450003
             5 ALTCI3 BIT(8),           /* 3RD ALT PATH CI   @Y30LB12*/ 18500003
             5 ALTCH3 BIT(8);           /* 3RD ALT PATH CHAN @Y30LB12*/ 18550003
                                                                        18560003
 DCL SCANDATA CHAR(72) BASED(STARTCOL); /* OVERLAY OF INBUF  @Y30LB12*/ 18600003
 DCL SCANBUF CHAR(72) BASED(NEXTCOL);   /* OVERLAY OF INBUF  @Y30LB12*/ 18650003
./  ADD  SSI=63360094,NAME=ICGDSMA1
 /***********************************************************@Y30LB12*/ 00050003
 /*                                                          @Y30LB12*/ 00100003
 /* PROCEDURE NAME - READS99                                 @Y30LB12*/ 00150003
 /*                                                          @Y30LB12*/ 00200003
 /* FUNCTION - CALL SCAN READ KEYWORD/PARAMETER SUBROUTINE   @Y30LB12*/ 00250003
 /*            ICGDSS99.  PICK UP STARTING COLUMN FOR THIS   @Y30LB12*/ 00300003
 /*            SCAN AND STARTING COLUMN FOR NEXT ENTRY INTO  @Y30LB12*/ 00350003
 /*            ICGDSS99.  IF TERMINATING ERROR OCCURS IN     @Y30LB12*/ 00400003
 /*            ICGDSS99, SET 'LASTPARM' TO TERMINATE IN THIS @Y30LB12*/ 00450003
 /*            MODULE ON NEXT READ OF KEYWORD                @Y30LB12*/ 00500003
 /*                                                          @Y30LB12*/ 00550003
 /***********************************************************@Y30LB12*/ 00600003
 READS99:  PROCEDURE;                                      /*@Y30LB12*/ 00650003
           GEN (LINK EP=ICGDSS99);      /* TO SCAN KEYWORD/PARAMETER */ 00700003
           /*************************************************@Y30LB12*/ 00750003
           /* IF 'ENDSCAN' BIT IS ON, WE ENCOUNTERED SOME    @Y30LB12*/ 00800003
           /* DISASTEROUS CONDITION THAT TERMINATED THE SCAN @Y30LB12*/ 00850003
           /* OF THIS CONTROL STATEMENT.  THERE ERRORS ARE   @Y30LB12*/ 00900003
           /* ASSOCIATED WITH SCANNING INTO COLUMN 73 AND    @Y30LB12*/ 00950003
           /* WITH FINDING A FORMAT ERROR IN THE             @Y30LB12*/ 01000003
           /* CONTINUATION STATEMENT.  SHOULD SUCH A         @Y30LB12*/ 01050003
           /* CONDITION OCCUR, WE TERMINATE SCAN OF THE      @Y30LB12*/ 01100003
           /* CONTROL STATEMENT UPON READ OF THE NEXT        @Y30LB12*/ 01150003
           /* KEYWORD.                                       @Y30LB12*/ 01200003
           /*************************************************@Y30LB12*/ 01350003
           IF ENDSCAN = '1'B                               /*@Y30LB12*/ 01400003
             THEN                                          /*@Y30LB12*/ 01450003
               LASTPARM = '1'B;                            /*@Y30LB12*/ 01500003
             ELSE;                                         /*@Y30LB12*/ 01550003
           END READS99;                                    /*@Y30LB12*/ 01600003
 @ EJECT;                                                               01650003
./  ADD  SSI=63360095,NAME=ICGDSMA2
 /***********************************************************@Y30LB12*/ 00050003
 /*                                                          @Y30LB12*/ 00100003
 /* PROCEDURE NAME - PUTIT1                                  @Y30LB12*/ 00150003
 /*                                                          @Y30LB12*/ 00200003
 /* FUNCTION - CALL ICGDSMSG, MESSAGE PRINT SUBROUTINE, TO   @Y30LB12*/ 00250003
 /*            PUT TERMINATING MESSAGE FOR WHICH TEXT IS NOT @Y30LB12*/ 00300003
 /*            IN ICGDSMSG BUT ALREADY BUILT IN 'OUTBUF2'    @Y30LB12*/ 00350003
 /*                                                          @Y30LB12*/ 00400003
 /***********************************************************@Y30LB12*/ 00450003
 PUTIT1:   PROCEDURE;                                      /*@Y30LB12*/ 00500003
           STOPSCAN = '1'B;                                /*@Y30LB12*/ 00550003
           PRNTBUF2 = '1'B;                                /*@Y30LB12*/ 00600003
           TERMINAT = TERMINAT + 1;                        /*@Y30LB12*/ 00650003
           GEN (LINK  EP=ICGDSMSG);                        /*@Y30LB12*/ 00700003
           PRNTBUF2 = '0'B;                                /*@Y30LB12*/ 00750003
           END PUTIT1;                                     /*@Y30LB12*/ 00800003
 @ EJECT;                                                               00850003
./  ADD  SSI=63360096,NAME=ICGDSMA3
 /***********************************************************@Y30LB12*/ 00050003
 /*                                                          @Y30LB12*/ 00100003
 /* PROCEDURE NAME - PUTIT2                                  @Y30LB12*/ 00150003
 /*                                                          @Y30LB12*/ 00200003
 /* FUNCTION - CALL ICGDSMSG, MESSAGE PRINT SUBROUTINE, TO   @Y30LB12*/ 00250003
 /*            PUT TERMINATING MESSAGE FOR WHICH MESSAGE     @Y30LB12*/ 00300003
 /*            TEXT IS IN ICGDSMSG.  'MSGNO' INDICATES THE   @Y30LB12*/ 00350003
 /*            OFFSET OF THE MESSAGE TEXT.                   @Y30LB12*/ 00400003
 /*                                                          @Y30LB12*/ 00450003
 /***********************************************************@Y30LB12*/ 00500003
 PUTIT2:   PROCEDURE;                                      /*@Y30LB12*/ 00550003
           STOPSCAN = '1'B;                                /*@Y30LB12*/ 00600003
           TERMINAT = TERMINAT + 1;                        /*@Y30LB12*/ 00650003
           GEN (LINK  EP=ICGDSMSG);                        /*@Y30LB12*/ 00700003
           END PUTIT2;                                     /*@Y30LB12*/ 00750003
 @ EJECT;                                                               00800003
./  ADD  SSI=63360103,NAME=ICGDSMA4
 /***********************************************************@Y30LB12*/ 00050003
 /*                                                          @Y30LB12*/ 00100003
 /* PROCEDURE NAME - PUTIT3                                  @Y30LB12*/ 00150003
 /*                                                          @Y30LB12*/ 00200003
 /* FUNCTION - CALL ICGDSMSG, MESSAGE PRINT SUBROUTINE, TO   @Y30LB12*/ 00250003
 /*            PUT WARNING MESSAGE FOR WHICH MESSAGE TEXT    @Y30LB12*/ 00300003
 /*            IS NOT IN ICGDSMSG, BUT WHICH IS BUILT AND    @Y30LB12*/ 00350003
 /*            PASSED IN 'OUTBUF2'.                          @Y30LB12*/ 00400003
 /*                                                          @Y30LB12*/ 00450003
 /***********************************************************@Y30LB12*/ 00500003
 PUTIT3:   PROCEDURE;                                      /*@Y30LB12*/ 00550003
           PRNTBUF2 = '1'B;                                /*@Y30LB12*/ 00600003
           WARNING = WARNING + 1;                          /*@Y30LB12*/ 00650003
           GEN (LINK  EP=ICGDSMSG);                        /*@Y30LB12*/ 00700003
           PRNTBUF2 = '0'B;                                /*@Y30LB12*/ 00750003
           END PUTIT3;                                     /*@Y30LB12*/ 00800003
 @ EJECT;                                                               00850003
./  ADD  SSI=63380036,NAME=ICGDSMA5
 /***********************************************************@Y30LB12*/ 00050003
 /*                                                          @Y30LB12*/ 00100003
 /* THE FOLLOWING DECLARE STATEMENT DESCRIBES BUILDTAB,      @Y30LB12*/ 00150003
 /* THE BUILD COMMUNICATIONS AREA.  THIS AREA IS OBTAINED    @Y30LB12*/ 00200003
 /* AND FREED BY ICGDSBLD, THE BUILD EXECUTIVE PHASE.        @Y30LB12*/ 00250003
 /*                                                          @Y30LB12*/ 00300003
 /***********************************************************@Y30LB12*/ 00350003
 DCL 1 BUILDTAB BOUNDARY(DWORD) BASED(BUILDPTR),           /*@Y30LB12*/ 00400003
       /*****************************************************@Y30LB12*/ 00450003
       /*                                                    @Y30LB12*/ 00500003
       /* THE FOLLOWING AREA IS USED TO COMMUNICATE WITH     @Y30LB12*/ 00550003
       /* THE DASD READ AND WRITE MODULES.  UPON CALL TO     @Y30LB12*/ 00600003
       /* ICGDSB06, THIS AREA MUST CONTAIN                   @Y30LB12*/ 00650003
       /*    1. THE ADDRESS OF THE DCB.                      @Y30LB12*/ 00700003
       /*    2. THE ADDRESS OF THE BUFFER TO BE WRITTEN      @Y30LB12*/ 00750003
       /*    3. THE VIRTUAL CYLINDER AND HEAD TO WHICH       @Y30LB12*/ 00800003
       /*       TO WRITE.                                    @Y30LB12*/ 00850003
       /*                                                    @Y30LB12*/ 00900003
       /*****************************************************@Y30LB12*/ 00950003
       2 COMB06,                                           /*@Y30LB12*/ 01000003
         3 B06DCBPT FIXED(31),                             /*@Y30LB12*/ 01050003
         3 B06BUFPT FIXED(31),                             /*@Y30LB12*/ 01100003
         3 B06TBLID FIXED(8),                              /*@Y30LB12*/ 01150003
         3 B06ADDR CHAR(3),                                /*@Y30LB12*/ 01200003
           4 B06CYL FIXED(8),                              /*@Y30LB12*/ 01250003
           4 B06HEAD FIXED(8),                             /*@Y30LB12*/ 01300003
           4 B06REC FIXED(8),                              /*@Y30LB12*/ 01350003
       /*****************************************************@Y30LB12*/ 01400003
       /*                                                    @Y30LB12*/ 01450003
       /* THE FOLLOWING AREA IS USED TO COMMUNICATE WITH     @Y30LB12*/ 01500003
       /* THE DASD READ AND WRITE MODULES.  UPON CALL TO     @Y30LB12*/ 01550003
       /* ICGDSB05, THIS AREA MUST CONTAIN                   @Y30LB12*/ 01600003
       /*    1. THE ADDRESS OF THE DCB.                      @Y30LB12*/ 01650003
       /*    2. THE ADDRESS OF THE BUFFER TO BE READ INTO    @Y30LB12*/ 01700003
       /*    3. THE VIRTUAL CYLINDER AND HEAD FROM WHICH     @Y30LB12*/ 01750003
       /*       TO READ.                                     @Y30LB12*/ 01800003
       /*                                                    @Y30LB12*/ 01850003
       /*****************************************************@Y30LB12*/ 01900003
       2 COMB05,                                           /*@Y30LB12*/ 01950003
         3 B05DCBPT FIXED(31),                             /*@Y30LB12*/ 02000003
         3 B05BUFPT FIXED(31),                             /*@Y30LB12*/ 02050003
         3 B05TBLID FIXED(8),                              /*@Y30LB12*/ 02100003
         3 B05ADDR CHAR(3),                                /*@Y30LB12*/ 02150003
           4 B05CYL FIXED(8),                              /*@Y30LB12*/ 02200003
           4 B05HEAD FIXED(8),                             /*@Y30LB12*/ 02250003
           4 B05REC FIXED(8),                              /*@Y30LB12*/ 02300003
       /*****************************************************@Y30LB12*/ 02350003
       /*                                                    @Y30LB12*/ 02400003
       /* THE FOLLOWING IS A GENERAL WORK AREA CONTAINING    @Y30LB12*/ 02450003
       /* POINTERS TO THE TWO BUFFERS OBTAINED IN THE        @Y30LB12*/ 02500003
       /* 'BUILDTAB GETMAIN', THE ADDRESS OF THE NEXT        @Y30LB12*/ 02550003
       /* AVAILABLE VIRTUAL CYLINDER AND HEAD ON SYSUT2,     @Y30LB12*/ 02600003
       /*                                                    @Y30LB12*/ 02650003
       /*****************************************************@Y30LB12*/ 02700003
       2 BUILDGEN,                                         /*@Y30LB12*/ 02750003
         3 ADDRBUF1 FIXED(31),                             /*@Y30LB12*/ 02800003
         3 ADDRBUF2 FIXED(31),                             /*@Y30LB12*/ 02850003
         3 UT2VCHR FIXED(31),                              /*@Y30LB12*/ 02900003
           4 UT2TABID FIXED(8),                            /*@Y30LB12*/ 02950003
           4 OUTADDR CHAR(3),                              /*@Y30LB12*/ 03000003
             5 UT2VCYL FIXED(8),                           /*@Y30LB12*/ 03050003
             5 UT2VHEAD FIXED(8),                          /*@Y30LB12*/ 03100003
             5 UT2VREC FIXED(8),                           /*@Y30LB12*/ 03150003
         3 UT1VCHR FIXED(31),                              /*@Y30LB12*/ 03200003
           4 UT1TABID FIXED(8),                            /*@Y30LB12*/ 03250003
           4 INADDR CHAR(3),                               /*@Y30LB12*/ 03300003
             5 UT1VCYL FIXED(8),                           /*@Y30LB12*/ 03350003
             5 UT1VHEAD FIXED(8),                          /*@Y30LB12*/ 03400003
             5 UT1VREC FIXED(8),                           /*@Y30LB12*/ 03450003
       2 UT1STUFF BOUNDARY(DWORD),                         /*@Y30LB12*/ 03500003
         3 UT1DCB CHAR(96),                                /*@Y30LB12*/ 03550003
         3 UT1FLAG BIT(32),                                /*@Y30LB12*/ 03600003
           4 UT1VUPDT BIT(1),                              /*@Y30LB12*/ 03650003
           4 UT1VOERR BIT(1),                              /*@Y30LB12*/ 03700003
           4 UT1VWERR BIT(1),                              /*@Y30LB12*/ 03750003
           4 * BIT(29),                                    /*@Y30LB12*/ 03800003
         3 UT1JFCB CHAR(176),                              /*@Y30LB12*/ 03850003
         3 UT1ECB CHAR(4),                                 /*@Y30LB12*/ 03900003
         3 UT1IOB CHAR(40),                                /*@Y30LB12*/ 03950003
         3 UT1CCWS (37) CHAR(8),                           /*@Y30LB12*/ 04000003
         3 UT1DDN CHAR(8),                                 /*@Y30LB12*/ 04050003
       /*****************************************************@Y30LB12*/ 04100003
       /*                                                    @Y30LB12*/ 04150003
       /* THE FOLLOWING AREA WILL CONTAIN THE DCB, IOB,      @Y30LB12*/ 04200003
       /* AND CCW STRINGS FOR SYSUT2, THE 'NEW' TABLES       @Y30LB12*/ 04250003
       /* PACK,                                              @Y30LB12*/ 04300003
       /*                                                    @Y30LB12*/ 04350003
       /*****************************************************@Y30LB12*/ 04400003
       2 UT2STUFF BOUNDARY(DWORD),                         /*@Y30LB12*/ 04450003
         3 UT2DCB CHAR(96),                                /*@Y30LB12*/ 04500003
         3 UT2FLAG BIT(32),                                /*@Y30LB12*/ 04550003
           4 UT2VUPDT BIT(1),                              /*@Y30LB12*/ 04600003
           4 UT2VOERR BIT(1),                              /*@Y30LB12*/ 04650003
           4 UT2VWERR BIT(1),                              /*@Y30LB12*/ 04700003
           4 UT2VCERR BIT(1),                              /*@Y30LB12*/ 04750003
           4 * BIT(28),                                    /*@Y30LB12*/ 04800003
         3 UT2JFCB CHAR(176),                              /*@Y30LB12*/ 04850003
         3 UT2ECB CHAR(4),                                 /*@Y30LB12*/ 04900003
         3 UT2IOB CHAR(40),                                /*@Y30LB12*/ 04950003
         3 UT2CCWS (37) CHAR(8),                           /*@Y30LB12*/ 05000003
         3 UT2DDN CHAR(8),                                 /*@Y30LB12*/ 05050003
       2 UT3STUFF BOUNDARY(DWORD),                         /*@Y30LB12*/ 05100003
         3 UT3DCB CHAR(96),                                /*@Y30LB12*/ 05150003
         3 UT3FLAG BIT(32),                                /*@Y30LB12*/ 05200003
           4 UT3VUPDT BIT(1),                              /*@Y30LB12*/ 05250003
           4 UT3VOERR BIT(1),                              /*@Y30LB12*/ 05300003
           4 UT3VWERR BIT(1),                              /*@Y30LB12*/ 05350003
           4 * BIT(29),                                    /*@Y30LB12*/ 05400003
         3 UT3JFCB CHAR(176),                              /*@Y30LB12*/ 05450003
         3 UT3ECB CHAR(4),                                 /*@Y30LB12*/ 05550003
         3 UT3IOB CHAR(40),                                /*@Y30LB12*/ 05600003
         3 UT3CCWS (37) CHAR(8),                           /*@Y30LB12*/ 05650003
         3 UT3DDN CHAR(8),                                 /*@Y30LB12*/ 05700003
         3 * CHAR(4),                                      /*@Y30LB12*/ 05710003
       2 CVERIFY CHAR(1584),                               /*@Y30LB12*/ 05750003
       2 NVERIFY CHAR(1584),                               /*@Y30LB12*/ 05800003
       2 UT1BUFER CHAR(8448),                              /*@Y30LB12*/ 05850003
       2 UT2BUFER CHAR(8704),                              /*@Y30LB12*/ 05900003
       2 LTRTRANO (40) FIXED(15),                          /*@Y30LB12*/ 05950003
       2 LTRTRANI (40) FIXED(15),                          /*@Y30LB12*/ 06000003
       2 TEMPEND CHAR(1);                                  /*@Y30LB12*/ 06050003
./  ADD  SSI=71880113,NAME=IDCCSAU
         /************************************************************/ 00800003
         /*                                                          */ 01600003
         /*  'AUDITMSS' FUNCTION DATA TABLE DECLARATIONS             */ 02400003
         /*                                                          */ 03200003
         /************************************************************/ 04000003
 %IF BASEFDT = 'YES'                                                    04800003
   %THEN                                                                05600003
     %GO TO BASEFDT1;                                                   06400003
                                                                        07200003
         DCL 1 FDTTBL      BDY(WORD),                                   08000003
 %GO TO BASEFDT2;                                                       08800003
 %BASEFDT1:;                                                            09600003
                                                                        10400003
         DCL 1 FDTTBL      BASED   BDY(WORD),                           11200003
 %BASEFDT2:;                                                            12000003
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 12800003
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 13600003
                                                                        14400003
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 15200003
                                                                        16000003
         /* 'MAP' OPTION                                             */ 16800003
         DCL   MAP    BASED(FDTPTR(  1));                               17600003
                                                                        18400003
         /* 'CHECK' OPTION                                           */ 19200003
         DCL   CHK    BASED(FDTPTR(  2));                               20000003
                                                                        20800003
         /* 'READLABEL' OPTION                                       */ 21600003
         DCL RDLBL    BASED(FDTPTR(  3));                               22400003
                                                                        23200003
         /* 'FULL' CELL-CHECK OPTION                                 */ 24000003
         DCL  FULL    BASED(FDTPTR(  4));                               24800003
                                                                        25600003
         /* 'EMPTY' CELL-CHECK OPTION                                */ 26400003
         DCL EMPTY    BASED(FDTPTR(  5));                               27200003
                                                                        28000003
         /* 'ALL' CELL-CHECK OPTION                                  */ 28800003
         DCL CHALL    BASED(FDTPTR(  6));                               29600003
                                                                        30400003
         /* ID NUMBER OF MSF                                         */ 31200003
         DCL 1   MSF BASED(FDTPTR(  7)) BDY(WORD),                      32000003
               2   MSFVAL FIXED(31);   /* NUMERIC VALUE              */ 32800003
                                                                        33600003
         /* 'XRANGE' AUDIT-LIMIT OPTION                              */ 34400003
         DCL  XRNG    BASED(FDTPTR(  8));                               35200003
         DCL  XRNGCNT FIXED(31) BASED(ADDR(FDTPTR(  8)));               36000003
                                                                        36800003
         /* LOW X-VALUE OF RANGE                                     */ 37600003
         DCL  LOWXPTR(100) PTR(31) BASED(FDTPTR(  9));                  38400003
         DCL 1  LOWX BASED BDY(WORD),                                   39200003
               2  LOWXVAL FIXED(31);   /* NUMERIC VALUE              */ 40000003
                                                                        40800003
         /* HIGH X-VALUE OF RANGE                                    */ 41600003
         DCL HIGHXPTR(100) PTR(31) BASED(FDTPTR( 10));                  42400003
         DCL 1 HIGHX BASED BDY(WORD),                                   43200003
               2 HIGHXVAL FIXED(31);   /* NUMERIC VALUE              */ 44000003
                                                                        44800003
         /* 'CELL' AUDIT-LIMIT OPTION                                */ 45600003
         DCL  CELL    BASED(FDTPTR( 11));                               46400003
         DCL  CELLCNT FIXED(31) BASED(ADDR(FDTPTR( 11)));               47200003
                                                                        48000003
         /* 'X' PORTION OF CELL ADDRESS                              */ 48800003
         DCL CELLXPTR(100) PTR(31) BASED(FDTPTR( 12));                  49600003
         DCL 1 CELLX BASED BDY(WORD),                                   50400003
               2 CELLXVAL FIXED(31);   /* NUMERIC VALUE              */ 51200003
                                                                        52000003
         /* 'Y' PORTION OF CELL ADDRESS                              */ 52800003
         DCL CELLYPTR(100) PTR(31) BASED(FDTPTR( 13));                  53600003
         DCL 1 CELLY BASED BDY(WORD),                                   54400003
               2 CELLYVAL FIXED(31);   /* NUMERIC VALUE              */ 55200003
                                                                        56000003
         /* 'Z' PORTION OF CELL ADDRESS                              */ 56800003
         DCL CELLZPTR(100) PTR(31) BASED(FDTPTR( 14));                  57600003
         DCL 1 CELLZ BASED BDY(WORD),                                   58400003
               2 CELLZVAL FIXED(31);   /* NUMERIC VALUE              */ 59200003
                                                                        60000003
         /* 'OUTFILE' DDNAME                                         */ 60800003
         DCL 1 OFILE BASED(FDTPTR( 15)) BDY(HWORD),                     61600003
               2 OFILELEN FIXED(8),    /* DATA ITEM LENGTH           */ 62400003
               2 OFILEVAL CHAR(  8);   /* DATA ITEM VALUE            */ 63200003
                                                                        64000003
         /* 'OUTDATASET' DATA SET NAME                               */ 64800003
         DCL 1   ODS BASED(FDTPTR( 16)) BDY(HWORD),                     65600003
               2   ODSPLN FIXED(8),    /* PASSWORD LENGTH            */ 66400003
               2   ODSPAS CHAR(8),     /* PASSWORD VALUE             */ 67200003
               2   ODSPOS FIXED(8),    /* ASTERISK POSITION          */ 68000003
               2   ODSFLG BIT(8),      /* DATA SET FLAGS             */ 68800003
                 3   ODSFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 69600003
               2   ODSMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 70400003
               2   ODSMEM CHAR(8),     /* MEMBER NAME                */ 71200003
               2   ODSLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 72000003
               2   ODSVAL CHAR(44);    /* CATALOGUED NAME            */ 72800003
                                                                        73600003
         /* 'LIST' OPTION                                            */ 74400003
         DCL  LIST    BASED(FDTPTR( 17));                               75200003
                                                                        76000003
         /* 'NOLIST' OPTION                                          */ 76800003
         DCL NLIST    BASED(FDTPTR( 18));                               77600003
                                                                        78400003
         /* 'LABELFILE' DDNAME                                       */ 79200003
         DCL 1 LFILE BASED(FDTPTR( 19)) BDY(HWORD),                     80000003
               2 LFILELEN FIXED(8),    /* DATA ITEM LENGTH           */ 80800003
               2 LFILEVAL CHAR(  8);   /* DATA ITEM VALUE            */ 81600003
                                                                        82400003
         /* 'LABELDATASET' DATA SET NAME                             */ 83200003
         DCL 1   LDS BASED(FDTPTR( 20)) BDY(HWORD),                     84000003
               2   LDSPLN FIXED(8),    /* PASSWORD LENGTH            */ 84800003
               2   LDSPAS CHAR(8),     /* PASSWORD VALUE             */ 85600003
               2   LDSPOS FIXED(8),    /* ASTERISK POSITION          */ 86400003
               2   LDSFLG BIT(8),      /* DATA SET FLAGS             */ 87200003
                 3   LDSFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 88000003
               2   LDSMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 88800003
               2   LDSMEM CHAR(8),     /* MEMBER NAME                */ 89600003
               2   LDSLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 90400003
               2   LDSVAL CHAR(44);    /* CATALOGUED NAME            */ 91200003
                                                                        92000003
         /* 'READALL' OPTION                                         */ 92800003
         DCL  RDAL    BASED(FDTPTR( 21));                               93600003
                                                                        94400003
         /* 'NOREADALL' OPTION                                       */ 95200003
         DCL NRDAL    BASED(FDTPTR( 22));                               96000003
./  ADD  SSI=61690007,NAME=IDCCSAV
         /************************************************************/ 01000003
         /*                                                          */ 02000003
         /*  'ADDV    ' FUNCTION DATA TABLE DECLARATIONS             */ 03000003
         /*                                                          */ 04000003
         /************************************************************/ 05000003
 %IF BASEFDT = 'YES'                                                    06000003
   %THEN                                                                07000003
     %GO TO BASEFDT1;                                                   08000003
                                                                        09000003
         DCL 1 FDTTBL      BDY(WORD),                                   10000003
 %GO TO BASEFDT2;                                                       11000003
 %BASEFDT1:;                                                            12000003
                                                                        13000003
         DCL 1 FDTTBL      BASED   BDY(WORD),                           14000003
 %BASEFDT2:;                                                            15000003
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 16000003
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 17000003
                                                                        18000003
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 19000003
                                                                        20000003
         /* 'VOLUME' SERIAL NO.                                      */ 21000003
         DCL 1   VOL BASED(FDTPTR(  1)) BDY(HWORD),                     22000003
               2   VOLLEN FIXED(8),    /* DATA ITEM LENGTH           */ 23000003
               2   VOLVAL CHAR(  6);   /* DATA ITEM VALUE            */ 24000003
                                                                        25000003
         /* 'COPYDATE' PARM                                          */ 26000003
         DCL CDATE    BASED(FDTPTR(  2));                               27000003
                                                                        28000003
         /* 'COPYDATE' JULIAN DATE VALUE                             */ 29000003
         DCL 1  DATE BASED(FDTPTR(  3)) BDY(WORD),                      30000003
               2  DATEVAL FIXED(31);   /* NUMERIC VALUE              */ 31000003
                                                                        32000003
         /* 'COPYDATE' SEQUENCE NO.                                  */ 33000003
         DCL 1  SEQ# BASED(FDTPTR(  4)) BDY(WORD),                      34000003
               2  SEQ#VAL FIXED(31);   /* NUMERIC VALUE              */ 35000003
                                                                        36000003
         /* 'CARTRIDGE' SERIAL NO.                                   */ 37000003
         DCL 1  CART BASED(FDTPTR(  5)) BDY(HWORD),                     38000003
               2  CARTLEN FIXED(8),    /* DATA ITEM LENGTH           */ 39000003
               2  CARTVAL CHAR( 12);   /* DATA ITEM VALUE            */ 40000003
                                                                        41000003
         /* 'NEWSERIAL' VOLUME SERIAL NO.                            */ 42000003
         DCL 1  NSER BASED(FDTPTR(  6)) BDY(HWORD),                     43000003
               2  NSERLEN FIXED(8),    /* DATA ITEM LENGTH           */ 44000003
               2  NSERVAL CHAR(  6);   /* DATA ITEM VALUE            */ 45000003
                                                                        46000003
         /* 'READWRITE' PARM                                         */ 47000003
         DCL RWOPT    BASED(FDTPTR(  7));                               48000003
                                                                        49000003
         /* 'FILE' DDNAME VALUE                                      */ 50000003
         DCL 1  FILE BASED(FDTPTR(  8)) BDY(HWORD),                     51000003
               2  FILELEN FIXED(8),    /* DATA ITEM LENGTH           */ 52000003
               2  FILEVAL CHAR(  8);   /* DATA ITEM VALUE            */ 53000003
                                                                        54000003
         /* 'PASSWORDFILES' PARM                                     */ 55000003
         DCL 1 PFILE BASED(FDTPTR(  9)) BDY(HWORD),                     56000003
               2 PFILECNT FIXED(15),   /* COUNT OF ITEMS IN LIST     */ 57000003
               2 *(255) BDY(HWORD),                                     58000003
                 3 PFILELEN FIXED(8),  /* DATA ITEM LENGTH           */ 59000003
                 3 PFILEVAL CHAR(  8); /* DATA ITEM VALUE            */ 60000003
                                                                        61000003
         /* 'REPLACEVOLUME' PARM                                     */ 62000003
         DCL  RVOL    BASED(FDTPTR( 10));                               63000003
./  ADD  SSI=53030102,NAME=IDCCSCH
         /************************************************************/ 02000000
         /*                                                          */ 04000000
         /*  'CHECKMSS' FUNCTION DATA TABLE DECLARATIONS             */ 06000000
         /*                                                          */ 08000000
         /************************************************************/ 10000000
 %IF BASEFDT = 'YES'                                                    12000000
   %THEN                                                                14000000
     %GO TO BASEFDT1;                                                   16000000
                                                                        18000000
         DCL 1 FDTTBL      BDY(WORD),                                   20000000
 %GO TO BASEFDT2;                                                       22000000
 %BASEFDT1:;                                                            24000000
                                                                        26000000
         DCL 1 FDTTBL      BASED   BDY(WORD),                           28000000
 %BASEFDT2:;                                                            30000000
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 32000000
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 34000000
                                                                        36000000
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 38000000
                                                                        40000000
         /* 'WORKFILE' FILE NAME                                     */ 42000000
         DCL 1 WFILE BASED(FDTPTR(  1)) BDY(HWORD),                     44000000
               2 WFILELEN FIXED(8),    /* DATA ITEM LENGTH           */ 46000000
               2 WFILEVAL CHAR(  8);   /* DATA ITEM VALUE            */ 48000000
                                                                        50000000
         /* WORK DATA SET NAME                                       */ 52000000
         DCL 1   WDS BASED(FDTPTR(  2)) BDY(HWORD),                     54000000
               2   WDSPLN FIXED(8),    /* PASSWORD LENGTH            */ 56000000
               2   WDSPAS CHAR(8),     /* PASSWORD VALUE             */ 58000000
               2   WDSPOS FIXED(8),    /* ASTERISK POSITION          */ 60000000
               2   WDSFLG BIT(8),      /* DATA SET FLAGS             */ 62000000
                 3   WDSFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 64000000
               2   WDSMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 66000000
               2   WDSMEM CHAR(8),     /* MEMBER NAME                */ 68000000
               2   WDSLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 70000000
               2   WDSVAL CHAR(44);    /* CATALOGUED NAME            */ 72000000
                                                                        74000000
         /* 'MASSSTORAGECONTROL' PARAMETER                           */ 76000000
         DCL   MSC    BASED(FDTPTR(  3));                               78000000
                                                                        80000000
         /* 'STAGINGADAPTERS' PARAMETER                              */ 82000000
         DCL STGAD    BASED(FDTPTR(  4));                               84000000
                                                                        86000000
         /* 'MSVINVENTORY' PARAMETER                                 */ 88000000
         DCL  MSVI    BASED(FDTPTR(  5));                               90000000
                                                                        92000000
         /* 'ALL' PARAMETER                                          */ 94000000
         DCL CHALL    BASED(FDTPTR(  6));                               96000000
./  ADD  SSI=42540368,NAME=IDCCSCN
         /************************************************************/ 01000000
         /*                                                          */ 02000000
         /*  'CONVERTV' FUNCTION DATA TABLE DECLARATIONS             */ 03000000
         /*                                                          */ 04000000
         /************************************************************/ 05000000
 %IF BASEFDT = 'YES'                                                    06000000
   %THEN                                                                07000000
     %GO TO BASEFDT1;                                                   08000000
                                                                        09000000
         DCL 1 FDTTBL      BDY(WORD),                                   10000000
 %GO TO BASEFDT2;                                                       11000000
 %BASEFDT1:;                                                            12000000
                                                                        13000000
         DCL 1 FDTTBL      BASED   BDY(WORD),                           14000000
 %BASEFDT2:;                                                            15000000
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 16000000
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 17000000
                                                                        18000000
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 19000000
                                                                        20000000
         /* SOURCE VOLUME DDAME                                      */ 21000000
         DCL 1 FFILE BASED(FDTPTR(  1)) BDY(HWORD),                     22000000
               2 FFILELEN FIXED(8),    /* DATA ITEM LENGTH           */ 23000000
               2 FFILEVAL CHAR(  8);   /* DATA ITEM VALUE            */ 24000000
                                                                        25000000
         /* TARGET VOLUME DDNAME                                     */ 26000000
         DCL 1 TFILE BASED(FDTPTR(  2)) BDY(HWORD),                     27000000
               2 TFILELEN FIXED(8),    /* DATA ITEM LENGTH           */ 28000000
               2 TFILEVAL CHAR(  8);   /* DATA ITEM VALUE            */ 29000000
                                                                        30000000
         /* SOURCE VOLUME SERIAL NUMBER                              */ 31000000
         DCL 1  FVOL BASED(FDTPTR(  3)) BDY(HWORD),                     32000000
               2  FVOLLEN FIXED(8),    /* DATA ITEM LENGTH           */ 33000000
               2  FVOLVAL CHAR(  6);   /* DATA ITEM VALUE            */ 34000000
                                                                        35000000
         /* TARGET VOLUME SERIAL NUMBER                              */ 36000000
         DCL 1  TVOL BASED(FDTPTR(  4)) BDY(HWORD),                     37000000
               2  TVOLLEN FIXED(8),    /* DATA ITEM LENGTH           */ 38000000
               2  TVOLVAL CHAR(  6);   /* DATA ITEM VALUE            */ 39000000
                                                                        40000000
         /* 'RECATALOG' PARM                                         */ 41000000
         DCL RECAT    BASED(FDTPTR(  5));                               42000000
                                                                        43000000
         /* 'ALL' PARM                                               */ 44000000
         DCL  ALLC    BASED(FDTPTR(  6));                               45000000
                                                                        46000000
         /* 'VSAMCATALOG' PARM                                       */ 47000000
         DCL  VCAT    BASED(FDTPTR(  7));                               48000000
                                                                        49000000
         /* 'NONE' PARM                                              */ 50000000
         DCL  NONE    BASED(FDTPTR(  8));                               51000000
                                                                        52000000
         /* 'SCRATCH' PARM                                           */ 53000000
         DCL   SCR    BASED(FDTPTR(  9));                               54000000
                                                                        55000000
         /* 'NOSCRATCH' PARM                                         */ 56000000
         DCL  NSCR    BASED(FDTPTR( 10));                               57000000
                                                                        58000000
         /* 'CATALOG' KEYWORD                                        */ 59000000
         DCL   CAT    BASED(FDTPTR( 11));                               60000000
                                                                        61000000
         /* VSAM CATALOG NAME                                        */ 62000000
         DCL 1  CATN BASED(FDTPTR( 12)) BDY(HWORD),                     63000000
               2  CATNPLN FIXED(8),    /* PASSWORD LENGTH            */ 64000000
               2  CATNPAS CHAR(8),     /* PASSWORD VALUE             */ 65000000
               2  CATNPOS FIXED(8),    /* ASTERISK POSITION          */ 66000000
               2  CATNFLG BIT(8),      /* DATA SET FLAGS             */ 67000000
                 3  CATNFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 68000000
               2  CATNMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 69000000
               2  CATNMEM CHAR(8),     /* MEMBER NAME                */ 70000000
               2  CATNLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 71000000
               2  CATNVAL CHAR(44);    /* CATALOGUED NAME            */ 72000000
                                                                        73000000
         /* CATALOG DDNAME                                           */ 74000000
         DCL 1 CATDD BASED(FDTPTR( 13)) BDY(HWORD),                     75000000
               2 CATDDLEN FIXED(8),    /* DATA ITEM LENGTH           */ 76000000
               2 CATDDVAL CHAR(  8);   /* DATA ITEM VALUE            */ 77000000
                                                                        78000000
         /* 'LIST' PARM                                              */ 79000000
         DCL  LIST    BASED(FDTPTR( 14));                               80000000
                                                                        81000000
         /* 'NOLIST' PARM                                            */ 82000000
         DCL NLIST    BASED(FDTPTR( 15));                               83000000
                                                                        84000000
         /* 'PASSWORDFILE' PARM                                      */ 85000000
         DCL 1 PFILE BASED(FDTPTR( 16)) BDY(HWORD),                     86000000
               2 PFILECNT FIXED(15),   /* COUNT OF ITEMS IN LIST     */ 87000000
               2 *(255) BDY(HWORD),                                     88000000
                 3 PFILELEN FIXED(8),  /* DATA ITEM LENGTH           */ 89000000
                 3 PFILEVAL CHAR(  8); /* DATA ITEM VALUE            */ 90000000
./  ADD  SSI=50900455,NAME=IDCCSCO
         /************************************************************/ 01000003
         /*                                                          */ 02000003
         /*  'COPYV   ' FUNCTION DATA TABLE DECLARATIONS             */ 03000003
         /*                                                          */ 04000003
         /************************************************************/ 05000003
 %IF BASEFDT = 'YES'                                                    06000003
   %THEN                                                                07000003
     %GO TO BASEFDT1;                                                   08000003
                                                                        09000003
         DCL 1 FDTTBL      BDY(WORD),                                   10000003
 %GO TO BASEFDT2;                                                       11000003
 %BASEFDT1:;                                                            12000003
                                                                        13000003
         DCL 1 FDTTBL      BASED   BDY(WORD),                           14000003
 %BASEFDT2:;                                                            15000003
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 16000003
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 17000003
                                                                        18000003
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 19000003
                                                                        20000003
         /* 'VOLUME' SERIAL NO.                                      */ 21000003
         DCL 1   VOL BASED(FDTPTR(  1)) BDY(HWORD),                     22000003
               2   VOLLEN FIXED(8),    /* DATA ITEM LENGTH           */ 23000003
               2   VOLVAL CHAR(  6);   /* DATA ITEM VALUE            */ 24000003
                                                                        25000003
         /* 'BACKUP' PARM                                            */ 26000003
         DCL  BKUP    BASED(FDTPTR(  2));                               27000003
                                                                        28000003
         /* 'CARTRIDGES' PARM                                        */ 29000003
         DCL  CART    BASED(FDTPTR(  3));                               30000003
                                                                        31000003
         /* SCRATCH CARTRIDGE SERIAL NO. 1                           */ 32000003
         DCL 1  CSN1 BASED(FDTPTR(  4)) BDY(HWORD),                     33000003
               2  CSN1LEN FIXED(8),    /* DATA ITEM LENGTH           */ 34000003
               2  CSN1VAL CHAR( 12);   /* DATA ITEM VALUE            */ 35000003
                                                                        36000003
         /* SCRATCH CARTRIDGE SERIAL NO. 2                           */ 37000003
         DCL 1  CSN2 BASED(FDTPTR(  5)) BDY(HWORD),                     38000003
               2  CSN2LEN FIXED(8),    /* DATA ITEM LENGTH           */ 39000003
               2  CSN2VAL CHAR( 12);   /* DATA ITEM VALUE            */ 40000003
                                                                        41000003
         /* 'DESCRIPTION' OF COPY VOLUME                             */ 42000003
         DCL 1 DESCR BASED(FDTPTR(  6)) BDY(HWORD),                     43000003
               2 DESCRLEN FIXED(8),    /* DATA ITEM LENGTH           */ 44000003
               2 DESCRVAL CHAR( 30);   /* DATA ITEM VALUE            */ 45000003
                                                                        46000003
         /* 'EJECT' PARM                                             */ 47000003
         DCL EJECT    BASED(FDTPTR(  7));                               48000003
                                                                        49000003
         /* 'NOEJECT' PARM                                           */ 50000003
         DCL NEJCT    BASED(FDTPTR(  8));                               51000003
                                                                        52000003
         /* 'RECORD' PARM                                            */ 53000003
         DCL   REC    BASED(FDTPTR(  9));                               54000003
                                                                        55000003
         /* 'NORECORD' PARM                                          */ 56000003
         DCL  NREC    BASED(FDTPTR( 10));                               57000003
                                                                        58000003
         /* 'LOCATION' OF EJECTED VOLUME                             */ 59000003
         DCL 1   LOC BASED(FDTPTR( 11)) BDY(HWORD),                     60000003
               2   LOCLEN FIXED(8),    /* DATA ITEM LENGTH           */ 61000003
               2   LOCVAL CHAR( 30);   /* DATA ITEM VALUE            */ 62000003
                                                                        63000003
         /* 'CATALOG' PARM                                           */ 64000003
         DCL   CAT    BASED(FDTPTR( 12));                               65000003
                                                                        66000003
         /* 'CATALOG' CATNAME/PASSWORD VALUE                         */ 67000003
         DCL 1 CATNM BASED(FDTPTR( 13)) BDY(HWORD),                     68000003
               2 CATNMPLN FIXED(8),    /* PASSWORD LENGTH            */ 69000003
               2 CATNMPAS CHAR(8),     /* PASSWORD VALUE             */ 70000003
               2 CATNMPOS FIXED(8),    /* ASTERISK POSITION          */ 71000003
               2 CATNMFLG BIT(8),      /* DATA SET FLAGS             */ 72000003
                 3 CATNMFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 73000003
               2 CATNMMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 74000003
               2 CATNMMEM CHAR(8),     /* MEMBER NAME                */ 75000003
               2 CATNMLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 76000003
               2 CATNMVAL CHAR(44);    /* CATALOGUED NAME            */ 77000003
                                                                        78000003
         /* 'CATALOG' DNAME VALUE                                    */ 79000003
         DCL 1 CATDN BASED(FDTPTR( 14)) BDY(HWORD),                     80000003
               2 CATDNLEN FIXED(8),    /* DATA ITEM LENGTH           */ 81000003
               2 CATDNVAL CHAR(  8);   /* DATA ITEM VALUE            */ 82000003
                                                                        83000003
         /* 'FILE' DNAME VALUE                                       */ 84000003
         DCL 1  FILE BASED(FDTPTR( 15)) BDY(HWORD),                     85000003
               2  FILELEN FIXED(8),    /* DATA ITEM LENGTH           */ 86000003
               2  FILEVAL CHAR(  8);   /* DATA ITEM VALUE            */ 87000003
                                                                        88000003
         /* 'MASSSTORAGEFACILITY' ID                                 */ 89000003
         DCL 1   MSF BASED(FDTPTR( 16)) BDY(WORD),                      90000003
               2   MSFVAL FIXED(31);   /* NUMERIC VALUE              */ 91000003
                                                                        92000003
         /* 'PASSWORDFILES' PARM                                     */ 93000003
         DCL 1 PFILE BASED(FDTPTR( 17)) BDY(HWORD),                     94000003
               2 PFILECNT FIXED(15),   /* COUNT OF ITEMS IN LIST     */ 95000003
               2 *(255) BDY(HWORD),                                     96000003
                 3 PFILELEN FIXED(8),  /* DATA ITEM LENGTH           */ 97000003
                 3 PFILEVAL CHAR(  8); /* DATA ITEM VALUE            */ 98000003
./  ADD  SSI=53030103,NAME=IDCCSCP
         /************************************************************/ 00050000
         /*                                                          */ 00100000
         /*  'COMPARET' FUNCTION DATA TABLE DECLARATIONS             */ 00150000
         /*                                                          */ 00200000
         /************************************************************/ 00250000
 %IF BASEFDT = 'YES'                                                    00300000
   %THEN                                                                00350000
     %GO TO BASEFDT1;                                                   00400000
                                                                        00450000
         DCL 1 FDTTBL      BDY(WORD),                                   00500000
 %GO TO BASEFDT2;                                                       00550000
 %BASEFDT1:;                                                            00600000
                                                                        00650000
         DCL 1 FDTTBL      BASED   BDY(WORD),                           00700000
 %BASEFDT2:;                                                            00750000
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 00800000
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 00850000
                                                                        00900000
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 00950000
                                                                        01000000
         /* 'WORKFILE' DDNAMES                                       */ 01050000
         DCL WFILE    BASED(FDTPTR(  1));                               01100000
                                                                        01150000
         /* FIRST 'WORKFILE' DDNAME                                  */ 01200000
         DCL 1 FILE1 BASED(FDTPTR(  3)) BDY(HWORD),                     01250000
               2 FILE1LEN FIXED(8),    /* DATA ITEM LENGTH           */ 01300000
               2 FILE1VAL CHAR(  8);   /* DATA ITEM VALUE            */ 01350000
                                                                        01400000
         /* SECOND 'WORKFILE' DDNAME                                 */ 01450000
         DCL 1 FILE2 BASED(FDTPTR(  4)) BDY(HWORD),                     01500000
               2 FILE2LEN FIXED(8),    /* DATA ITEM LENGTH           */ 01550000
               2 FILE2VAL CHAR(  8);   /* DATA ITEM VALUE            */ 01600000
                                                                        01650000
         /* 'WORKDATASET' DATA SET NAMES                             */ 01700000
         DCL   WDS    BASED(FDTPTR(  2));                               01750000
                                                                        01800000
         /* FIRST 'WORKDATASET' DATA SET NAME                        */ 01850000
         DCL 1  WDS1 BASED(FDTPTR(  5)) BDY(HWORD),                     01900000
               2  WDS1PLN FIXED(8),    /* PASSWORD LENGTH            */ 01950000
               2  WDS1PAS CHAR(8),     /* PASSWORD VALUE             */ 02000000
               2  WDS1POS FIXED(8),    /* ASTERISK POSITION          */ 02050000
               2  WDS1FLG BIT(8),      /* DATA SET FLAGS             */ 02100000
                 3  WDS1FUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 02150000
               2  WDS1MLN FIXED(8),    /* MEMBER NAME LENGTH         */ 02200000
               2  WDS1MEM CHAR(8),     /* MEMBER NAME                */ 02250000
               2  WDS1LEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 02300000
               2  WDS1VAL CHAR(44);    /* CATALOGUED NAME            */ 02350000
                                                                        02400000
         /* SECOND 'WORKDATASET' DATA SET NAME                       */ 02450000
         DCL 1  WDS2 BASED(FDTPTR(  6)) BDY(HWORD),                     02500000
               2  WDS2PLN FIXED(8),    /* PASSWORD LENGTH            */ 02550000
               2  WDS2PAS CHAR(8),     /* PASSWORD VALUE             */ 02600000
               2  WDS2POS FIXED(8),    /* ASTERISK POSITION          */ 02650000
               2  WDS2FLG BIT(8),      /* DATA SET FLAGS             */ 02700000
                 3  WDS2FUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 02750000
               2  WDS2MLN FIXED(8),    /* MEMBER NAME LENGTH         */ 02800000
               2  WDS2MEM CHAR(8),     /* MEMBER NAME                */ 02850000
               2  WDS2LEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 02900000
               2  WDS2VAL CHAR(44);    /* CATALOGUED NAME            */ 02950000
./  ADD  SSI=42550396,NAME=IDCCSCV
         /************************************************************/ 01000000
         /*                                                  @Y30LB32*/ 02000000
         /*  'CREATEV ' FUNCTION DATA TABLE DECLARATIONS     @Y30LB32*/ 03000000
         /*                                                  @Y30LB32*/ 04000000
         /************************************************************/ 05000000
 %IF BASEFDT = 'YES'                                       /*@Y30LB32*/ 06000000
   %THEN                                                   /*@Y30LB32*/ 07000000
     %GO TO BASEFDT1;                                      /*@Y30LB32*/ 08000000
                                                                        09000000
         DCL 1 FDTTBL      BDY(WORD),                      /*@Y30LB32*/ 10000000
 %GO TO BASEFDT2;                                          /*@Y30LB32*/ 11000000
 %BASEFDT1:;                                               /*@Y30LB32*/ 12000000
                                                                        13000000
         DCL 1 FDTTBL      BASED   BDY(WORD),              /*@Y30LB32*/ 14000000
 %BASEFDT2:;                                               /*@Y30LB32*/ 15000000
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME  @Y30LB32*/ 16000000
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA        @Y30LB32*/ 17000000
                                       /* POINTERS           @Y30LB32*/ 18000000
                                                                        18050000
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS           @Y30LB32*/ 19000000
                                                                        20000000
         /* 'VOLUME'  PARAMETER                              @Y30LB32*/ 21000000
         DCL 1   VOL BASED(FDTPTR(  1)) BDY(HWORD),        /*@Y30LB32*/ 22000000
               2   VOLLEN FIXED(8),    /* DATA ITEM LENGTH   @Y30LB32*/ 23000000
               2   VOLVAL CHAR(  6);   /* DATA ITEM VALUE    @Y30LB32*/ 24000000
                                                                        25000000
         /* 'FILE'  PARAMETER                                @Y30LB32*/ 26000000
         DCL 1  FILE BASED(FDTPTR(  2)) BDY(HWORD),        /*@Y30LB32*/ 27000000
               2  FILELEN FIXED(8),    /* DATA ITEM LENGTH   @Y30LB32*/ 28000000
               2  FILEVAL CHAR(  8);   /* DATA ITEM VALUE    @Y30LB32*/ 29000000
                                                                        30000000
         /* 'COUNT'  PARMAMETER                              @Y30LB32*/ 31000000
         DCL 1 COUNT BASED(FDTPTR(  3)) BDY(WORD),         /*@Y30LB32*/ 32000000
               2 COUNTVAL FIXED(31);   /* NUMERIC VALUE      @Y30LB32*/ 33000000
                                                                        34000000
         /* 'MASS STORAGE FACILITY'  PARAMETER               @Y30LB32*/ 35000000
         DCL 1   MSF BASED(FDTPTR(  4)) BDY(WORD),         /*@Y30LB32*/ 36000000
               2   MSFVAL FIXED(31);   /* NUMERIC VALUE      @Y30LB32*/ 37000000
                                                                        38000000
         /* 'VTOCSIZE'  PARAMETER                            @Y30LB32*/ 39000000
         DCL 1  VTSZ BASED(FDTPTR(  5)) BDY(WORD),         /*@Y30LB32*/ 40000000
               2  VTSZVAL FIXED(31);   /* NUMERIC VALUE      @Y30LB32*/ 41000000
                                                                        42000000
         /* 'CARTRIDGES'  PARAMETER                          @Y30LB32*/ 43000000
         DCL 1  CART BASED(FDTPTR(  6)) BDY(HWORD),        /*@Y30LB32*/ 44000000
               2  CARTCNT FIXED(15),   /* COUNT OF ITEMS     @Y30LB32*/ 45000000
                                       /* IN LIST            @Y30LB32*/ 45050000
               2 *(254) BDY(HWORD),                        /*@Y30LB32*/ 46000000
                 3  CARTLEN FIXED(8),  /* DATA ITEM LENGTH   @Y30LB32*/ 47000000
                 3  CARTVAL CHAR( 12); /* DATA ITEM VALUE    @Y30LB32*/ 48000000
                                                                        49000000
         /* 'OWNER'  PARAMETER                               @Y30LB32*/ 50000000
         DCL 1 OWNER BASED(FDTPTR(  7)) BDY(HWORD),        /*@Y30LB32*/ 51000000
               2 OWNERLEN FIXED(8),    /* DATA ITEM LENGTH   @Y30LB32*/ 52000000
               2 OWNERVAL CHAR( 10);   /* DATA ITEM VALUE    @Y30LB32*/ 53000000
                                                                        54000000
         /* 'DESCRIPTION'  PARAMETER                         @Y30LB32*/ 55000000
         DCL 1 DESCR BASED(FDTPTR(  8)) BDY(HWORD),        /*@Y30LB32*/ 56000000
               2 DESCRLEN FIXED(8),    /* DATA ITEM LENGTH   @Y30LB32*/ 57000000
               2 DESCRVAL CHAR( 30);   /* DATA ITEM VALUE    @Y30LB32*/ 58000000
                                                                        59000000
         /* 'BACKUPNUMBER'  PARMAMETER                       @Y30LB32*/ 60000000
         DCL 1 BKUP# BASED(FDTPTR(  9)) BDY(WORD),         /*@Y30LB32*/ 61000000
               2 BKUP#VAL FIXED(31);   /* NUMERIC VALUE      @Y30LB32*/ 62000000
                                                                        63000000
         /* 'GROUP'  PARAMETER                               @Y30LB32*/ 64000000
         DCL 1   GRP BASED(FDTPTR( 10)) BDY(HWORD),        /*@Y30LB32*/ 65000000
               2   GRPLEN FIXED(8),    /* DATA ITEM LENGTH   @Y30LB32*/ 66000000
               2   GRPVAL CHAR(  8);   /* DATA ITEM VALUE    @Y30LB32*/ 67000000
                                                                        68000000
         /* 'GENERAL'  PARAMETER                             @Y30LB32*/ 69000000
         DCL GENRL    BASED(FDTPTR( 11));                  /*@Y30LB32*/ 70000000
                                                                        71000000
         /* 'RESTRICTED'  PARAMETER                          @Y30LB32*/ 72000000
         DCL  RSTR    BASED(FDTPTR( 12));                  /*@Y30LB32*/ 73000000
                                                                        74000000
         /* 'BIND'  PARAMETER                                @Y30LB32*/ 75000000
         DCL  BIND    BASED(FDTPTR( 13));                  /*@Y30LB32*/ 76000000
                                                                        77000000
         /* 'NOBIND'  PARAMETER                              @Y30LB32*/ 78000000
         DCL NBIND    BASED(FDTPTR( 14));                  /*@Y30LB32*/ 79000000
                                                                        80000000
         /* 'EXCLUSIVE'  PARAMETER                           @Y30LB32*/ 81000000
         DCL EXCLU    BASED(FDTPTR( 15));                  /*@Y30LB32*/ 82000000
                                                                        83000000
         /* 'SHARED'  PARAMETER                              @Y30LB32*/ 84000000
         DCL  SHRD    BASED(FDTPTR( 16));                  /*@Y30LB32*/ 85000000
                                                                        86000000
         /* 'READONLY'  PARAMETER                            @Y30LB32*/ 87000000
         DCL RONLY    BASED(FDTPTR( 17));                  /*@Y30LB32*/ 88000000
                                                                        89000000
         /* 'READWRITE'  PARAMETER                           @Y30LB32*/ 90000000
         DCL    RW    BASED(FDTPTR( 18));                  /*@Y30LB32*/ 91000000
                                                                        92000000
         /* 'DASDERASE'  PARAMETER                           @Y30LB32*/ 93000000
         DCL DERAS    BASED(FDTPTR( 19));                  /*@Y30LB32*/ 94000000
                                                                        95000000
         /* 'NODASDERASE'  PARAMETER                         @Y30LB32*/ 96000000
         DCL NDERS    BASED(FDTPTR( 20));                  /*@Y30LB32*/ 97000000
./  ADD  SSI=80110022,NAME=IDCCSDU
         /************************************************************/ 00700000
         /*                                                          */ 01400000
         /*  'DUMPMSS ' FUNCTION DATA TABLE DECLARATIONS             */ 02100000
         /*                                                          */ 02800000
         /************************************************************/ 03500000
 %IF BASEFDT = 'YES'                                                    04200000
   %THEN                                                                04900000
     %GO TO BASEFDT1;                                                   05600000
                                                                        06300000
         DCL 1 FDTTBL      BDY(WORD),                                   07000000
 %GO TO BASEFDT2;                                                       07700000
 %BASEFDT1:;                                                            08400000
                                                                        09100000
         DCL 1 FDTTBL      BASED   BDY(WORD),                           09800000
 %BASEFDT2:;                                                            10500000
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 11200000
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 11900000
                                                                        12600000
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 13300000
                                                                        14000000
         /* 'MASSSTORAGECONTROL' OPTION                              */ 14700000
         DCL   MSC    BASED(FDTPTR(  1));                               15400000
                                                                        16100000
         /* MSC 'FORMAT' OPTION                                      */ 16800000
         DCL  MFMT    BASED(FDTPTR(  2));                               17500000
                                                                        18200000
         /* MSC 'MAINSECTOR' OPTION                                  */ 18900000
         DCL MSCTM    BASED(FDTPTR(  3));                               19600000
         DCL MSCTMCNT FIXED(31) BASED(ADDR(FDTPTR(  3)));               20300000
                                                                        21000000
         /* MSC 'MAINSECTOR' LOW SECTOR#                             */ 21700000
         DCL  MMLOPTR( 16) PTR(31) BASED(FDTPTR( 16));                  22400000
         DCL 1  MMLO BASED BDY(WORD),                                   23100000
               2  MMLOVAL FIXED(31);   /* NUMERIC VALUE              */ 23800000
                                                                        24500000
         /* MSC 'MAINSECTOR' HIGH SECTOR#                            */ 25200000
         DCL  MMHIPTR( 16) PTR(31) BASED(FDTPTR( 17));                  25900000
         DCL 1  MMHI BASED BDY(WORD),                                   26600000
               2  MMHIVAL FIXED(31);   /* NUMERIC VALUE              */ 27300000
                                                                        28000000
         /* MSC 'EXTENDEDSECTOR' OPTION                              */ 28700000
         DCL MSCTE    BASED(FDTPTR(  4));                               29400000
         DCL MSCTECNT FIXED(31) BASED(ADDR(FDTPTR(  4)));               30100000
                                                                        30800000
         /* MSC 'EXTENDEDSECTOR' LOW SECTOR#                         */ 31500000
         DCL  MELOPTR( 16) PTR(31) BASED(FDTPTR( 18));                  32200000
         DCL 1  MELO BASED BDY(WORD),                                   32900000
               2  MELOVAL FIXED(31);   /* NUMERIC VALUE              */ 33600000
                                                                        34300000
         /* MSC 'EXTENDEDSECTOR' HIGH SECTOR#                        */ 35000000
         DCL  MEHIPTR( 16) PTR(31) BASED(FDTPTR( 19));                  35700000
         DCL 1  MEHI BASED BDY(WORD),                                   36400000
               2  MEHIVAL FIXED(31);   /* NUMERIC VALUE              */ 37100000
                                                                        37800000
         /* 'STAGINGADAPTER' OPTION                                  */ 38500000
         DCL STGAD    BASED(FDTPTR(  5));                               39200000
         DCL STGADCNT FIXED(31) BASED(ADDR(FDTPTR(  5)));               39900000
                                                                        40600000
         /* SSID OF STAGING ADAPTER                                  */ 41300000
         DCL  SSIDPTR( 14) PTR(31) BASED(FDTPTR(  6));                  42000000
         DCL 1  SSID BASED BDY(WORD),                                   42700000
               2  SSIDVAL FIXED(31);   /* NUMERIC VALUE              */ 43400000
                                                                        44100000
         /* SA 'FORMAT' OPTION                                       */ 44800000
         DCL  SFMTPTR( 14) PTR(31) BASED(FDTPTR(  7));                  45500000
         DCL  SFMT    BASED;                                            46200000
                                                                        46900000
         /* SA 'MAINSECTOR' OPTION                                   */ 47600000
         DCL SSCTMPTR( 14) PTR(31) BASED(FDTPTR(  8));                  48300000
         DCL SSCTM    BASED;                                            49000000
         DCL SSCTMCNT( 14) FIXED(31) BASED(FDTPTR(  8));                49700000
                                                                        50400000
         /* SA 'MAINSECTOR' LOW SECTOR#                              */ 51100000
         DCL  SMLOPTR( 14, 16) PTR(31) BASED(FDTPTR( 20));              51800000
         DCL 1  SMLO BASED BDY(WORD),                                   52500000
               2  SMLOVAL FIXED(31);   /* NUMERIC VALUE              */ 53200000
                                                                        53900000
         /* SA 'MAINSECTOR' HIGH SECTOR#                             */ 54600000
         DCL  SMHIPTR( 14, 16) PTR(31) BASED(FDTPTR( 21));              55300000
         DCL 1  SMHI BASED BDY(WORD),                                   56000000
               2  SMHIVAL FIXED(31);   /* NUMERIC VALUE              */ 56700000
                                                                        57400000
         /* SA 'EXTENDEDSECTOR' OPTION                               */ 58100000
         DCL SSCTEPTR( 14) PTR(31) BASED(FDTPTR(  9));                  58800000
         DCL SSCTE    BASED;                                            59500000
         DCL SSCTECNT( 14) FIXED(31) BASED(FDTPTR(  9));                60200000
                                                                        60900000
         /* SA 'EXTENDEDSECTOR' LOW SECTOR#                          */ 61600000
         DCL  SELOPTR( 14, 16) PTR(31) BASED(FDTPTR( 22));              62300000
         DCL 1  SELO BASED BDY(WORD),                                   63000000
               2  SELOVAL FIXED(31);   /* NUMERIC VALUE              */ 63700000
                                                                        64400000
         /* SA 'EXTENDEDSECTOR' HI SECTOR#                           */ 65100000
         DCL  SEHIPTR( 14, 16) PTR(31) BASED(FDTPTR( 23));              65800000
         DCL 1  SEHI BASED BDY(WORD),                                   66500000
               2  SEHIVAL FIXED(31);   /* NUMERIC VALUE              */ 67200000
                                                                        67900000
         /* 'TABLES' OPTION                                          */ 68600000
         DCL   TBL    BASED(FDTPTR( 10));                               69300000
         DCL   TBLCNT FIXED(31) BASED(ADDR(FDTPTR( 10)));               70000000
                                                                        70700000
         /* LOW CHR OF RANGE TO DUMP                                 */ 71400000
         DCL LOCHRPTR(100) PTR(31) BASED(FDTPTR( 11));                  72100000
         DCL 1 LOCHR BASED BDY(WORD),                                   72800000
               2 LOCHRVAL FIXED(31);   /* NUMERIC VALUE              */ 73500000
                                                                        74200000
         /* HIGH CHR OF RANGE TO DUMP                                */ 74900000
         DCL HICHRPTR(100) PTR(31) BASED(FDTPTR( 12));                  75600000
         DCL 1 HICHR BASED BDY(WORD),                                   76300000
               2 HICHRVAL FIXED(31);   /* NUMERIC VALUE              */ 77000000
                                                                        77700000
         /* 'OUTFILE' OPTION                                         */ 78400000
         DCL 1 OFILE BASED(FDTPTR( 13)) BDY(HWORD),                     79100000
               2 OFILELEN FIXED(8),    /* DATA ITEM LENGTH           */ 79800000
               2 OFILEVAL CHAR(  8);   /* DATA ITEM VALUE            */ 80500000
                                                                        81200000
         /* 'OUTDATASET' OPTION                                      */ 81900000
         DCL 1   ODS BASED(FDTPTR( 14)) BDY(HWORD),                     82600000
               2   ODSPLN FIXED(8),    /* PASSWORD LENGTH            */ 83300000
               2   ODSPAS CHAR(8),     /* PASSWORD VALUE             */ 84000000
               2   ODSPOS FIXED(8),    /* ASTERISK POSITION          */ 84700000
               2   ODSFLG BIT(8),      /* DATA SET FLAGS             */ 85400000
                 3   ODSFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 86100000
               2   ODSMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 86800000
               2   ODSMEM CHAR(8),     /* MEMBER NAME                */ 87500000
               2   ODSLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 88200000
               2   ODSVAL CHAR(44);    /* CATALOGUED NAME            */ 88900000
                                                                        89600000
         /* 'ALTERNATEMASSSTORAGECONTROL' OPTION             @ZA27590*/ 90300000
         DCL  AMSC    BASED(FDTPTR( 24));                  /*@ZA27590*/ 91000000
./  ADD  SSI=42540372,NAME=IDCCSEC
         /************************************************************/ 02000000
         /*                                                  @Y30LB32*/ 04000000
         /*  'EJECTC  ' FUNCTION DATA TABLE DECLARATIONS     @Y30LB32*/ 06000000
         /*                                                  @Y30LB32*/ 08000000
         /************************************************************/ 10000000
 %IF BASEFDT = 'YES'                                       /*@Y30LB32*/ 12000000
   %THEN                                                   /*@Y30LB32*/ 14000000
     %GO TO BASEFDT1;                                      /*@Y30LB32*/ 16000000
                                                                        18000000
         DCL 1 FDTTBL      BDY(WORD),                      /*@Y30LB32*/ 20000000
 %GO TO BASEFDT2;                                          /*@Y30LB32*/ 22000000
 %BASEFDT1:;                                               /*@Y30LB32*/ 24000000
                                                                        26000000
         DCL 1 FDTTBL      BASED   BDY(WORD),              /*@Y30LB32*/ 28000000
 %BASEFDT2:;                                               /*@Y30LB32*/ 30000000
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME  @Y30LB32*/ 32000000
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA        @Y30LB32*/ 34000000
                                       /* POINTERS           @Y30LB32*/ 36000000
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS           @Y30LB32*/ 38000000
                                                                        40000000
         /* CARTRIDGE SERIAL NUMBER                          @Y30LB32*/ 42000000
         DCL 1  CART BASED(FDTPTR(  1)) BDY(HWORD),        /*@Y30LB32*/ 44000000
               2  CARTCNT FIXED(15),   /* COUNT OF ITEMS IN  @Y30LB32*/ 46000000
                                       /* LIST               @Y30LB32*/ 46050000
               2 *(255) BDY(HWORD),                        /*@Y30LB32*/ 48000000
                 3  CARTLEN FIXED(8),  /* DATA ITEM LENGTH   @Y30LB32*/ 50000000
                 3  CARTVAL CHAR( 12); /* DATA ITEM VALUE    @Y30LB32*/ 52000000
                                                                        54000000
         /* NUMBER SCRATCH CARTRIDGES                        @Y30LB32*/ 56000000
         DCL 1   CNT BASED(FDTPTR(  2)) BDY(WORD),         /*@Y30LB32*/ 58000000
               2   CNTVAL FIXED(31);   /* NUMERIC VALUE      @Y30LB32*/ 60000000
                                                                        62000000
         /* 'ALL'PARAMETER                                   @Y30LB32*/ 64000000
         DCL  ALLC    BASED(FDTPTR(  3));                  /*@Y30LB32*/ 66000000
                                                                        68000000
         /* MASS STORAGE FACILITY ID                         @Y30LB32*/ 70000000
         DCL 1   MSF BASED(FDTPTR(  4)) BDY(WORD),         /*@Y30LB32*/ 72000000
               2   MSFVAL FIXED(31);   /* NUMERIC VALUE      @Y30LB32*/ 74000000
./  ADD  SSI=42540374,NAME=IDCCSEV
         /************************************************************/ 01000000
         /*                                                  @Y30LB38*/ 02000000
         /*  'EJECTV  ' FUNCTION DATA TABLE DECLARATIONS     @Y30LB38*/ 03000000
         /*                                                  @Y30LB38*/ 04000000
         /************************************************************/ 05000000
 %IF BASEFDT = 'YES'                                                    06000000
   %THEN                                                                07000000
     %GO TO BASEFDT1;                                      /*@Y30LB38*/ 08000000
                                                                        09000000
         DCL 1 FDTTBL      BDY(WORD),                                   10000000
 %GO TO BASEFDT2;                                          /*@Y30LB38*/ 11000000
 %BASEFDT1:;                                               /*@Y30LB38*/ 12000000
                                                                        13000000
         DCL 1 FDTTBL      BASED   BDY(WORD),                           14000000
 %BASEFDT2:;                                               /*@Y30LB38*/ 15000000
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME  @Y30LB38*/ 16000000
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 17000000
                                                                        18000000
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS           @Y30LB38*/ 19000000
                                                                        20000000
         /* VOLUME SERIAL NUMBERS                            @Y30LB38*/ 21000000
         DCL 1   VOL BASED(FDTPTR(  1)) BDY(HWORD),                     22000000
               2   VOLLEN FIXED(8),    /* DATA ITEM LENGTH   @Y30LB38*/ 23000000
               2   VOLVAL CHAR(  6);   /* DATA ITEM VALUE    @Y30LB38*/ 24000000
                                                                        25000000
         /* 'COPYDATE' PARAMETER                             @Y30LB38*/ 26000000
         DCL CDATE    BASED(FDTPTR(  2));                  /*@Y30LB38*/ 27000000
                                                                        28000000
         /* DATE COPY CREATED                                @Y30LB38*/ 29000000
         DCL 1  DATE BASED(FDTPTR(  3)) BDY(WORD),                      30000000
               2  DATEVAL FIXED(31);   /* NUMERIC VALUE      @Y30LB38*/ 31000000
                                                                        32000000
         /* 'COPYDATE' COPY NUMBER                           @Y30LB38*/ 33000000
         DCL 1   SEQ BASED(FDTPTR(  4)) BDY(WORD),                      34000000
               2   SEQVAL FIXED(31);   /* NUMERIC VALUE      @Y30LB38*/ 35000000
                                                                        36000000
         /* CARTRIDGE SERIAL NUMBER                          @Y30LB38*/ 37000000
         DCL 1  CART BASED(FDTPTR(  5)) BDY(HWORD),                     38000000
               2  CARTLEN FIXED(8),    /* DATA ITEM LENGTH   @Y30LB38*/ 39000000
               2  CARTVAL CHAR( 12);   /* DATA ITEM VALUE    @Y30LB38*/ 40000000
                                                                        41000000
         /* 'RECORD' PARAMETER                               @Y30LB38*/ 42000000
         DCL   REC    BASED(FDTPTR(  6));                  /*@Y30LB38*/ 43000000
                                                                        44000000
         /* 'NORECORD' PARAMETER                             @Y30LB38*/ 45000000
         DCL  NREC    BASED(FDTPTR(  7));                  /*@Y30LB38*/ 46000000
                                                                        47000000
         /* LOCATION DATA                                    @Y30LB38*/ 48000000
         DCL 1   LOC BASED(FDTPTR(  8)) BDY(HWORD),                     49000000
               2   LOCLEN FIXED(8),    /* DATA ITEM LENGTH   @Y30LB38*/ 50000000
               2   LOCVAL CHAR( 30);   /* DATA ITEM VALUE    @Y30LB38*/ 51000000
./  ADD  SSI=62740470,NAME=IDCCSGR
         /************************************************************/ 01000042
         /*                                                          */ 02000042
         /*  'CREATEG ' FUNCTION DATA TABLE DECLARATIONS             */ 03000042
         /*                                                          */ 04000042
         /************************************************************/ 05000042
 %IF BASEFDT = 'YES'                                                    06000042
   %THEN                                                                07000042
     %GO TO BASEFDT1;                                                   08000042
                                                                        09000042
         DCL 1 FDTTBL      BDY(WORD),                                   10000042
 %GO TO BASEFDT2;                                                       11000042
 %BASEFDT1:;                                                            12000042
                                                                        13000042
         DCL 1 FDTTBL      BASED   BDY(WORD),                           14000042
 %BASEFDT2:;                                                            15000042
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 16000042
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 17000042
                                                                        18000042
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 19000042
                                                                        20000042
         /* 'GROUP' NAME                                             */ 21000042
         DCL 1   GRP BASED(FDTPTR(  1)) BDY(HWORD),                     22000042
               2   GRPLEN FIXED(8),    /* DATA ITEM LENGTH           */ 23000042
               2   GRPVAL CHAR(  8);   /* DATA ITEM VALUE            */ 24000042
                                                                        25000042
         /* 'PRIMARY' SPACE                                          */ 26000042
         DCL 1   PRI BASED(FDTPTR(  2)) BDY(WORD),                      27000042
               2   PRIVAL FIXED(31);   /* NUMERIC VALUE              */ 28000042
                                                                        29000042
         /* 'SECONDARY' SPACE                                        */ 30000042
         DCL 1   SEC BASED(FDTPTR(  3)) BDY(WORD),                      31000042
               2   SECVAL FIXED(31);   /* NUMERIC VALUE              */ 32000042
                                                                        33000042
         /* 'THRESHOLD' PERCENTAGE                                   */ 34000042
         DCL 1 THOLD BASED(FDTPTR(  4)) BDY(WORD),                      35000042
               2 THOLDVAL FIXED(31);   /* NUMERIC VALUE              */ 36000042
                                                                        37000042
         /* 'DESCRIPTION' PARAMETER                                  */ 38000042
         DCL 1 DESCR BASED(FDTPTR(  5)) BDY(HWORD),                     39000042
               2 DESCRLEN FIXED(8),    /* DATA ITEM LENGTH           */ 40000042
               2 DESCRVAL CHAR( 30);   /* DATA ITEM VALUE            */ 41000042
                                                                        42000042
         /* 'OWNER' NAME                                             */ 43000042
         DCL 1 OWNER BASED(FDTPTR(  6)) BDY(HWORD),                     44000042
               2 OWNERLEN FIXED(8),    /* DATA ITEM LENGTH           */ 45000042
               2 OWNERVAL CHAR( 10);   /* DATA ITEM VALUE            */ 46000042
                                                                        47000042
         /* 'OWNER' ADDRESS                                          */ 48000042
         DCL 1   ADD BASED(FDTPTR(  7)) BDY(HWORD),                     49000042
               2   ADDLEN FIXED(8),    /* DATA ITEM LENGTH           */ 50000042
               2   ADDVAL CHAR( 30);   /* DATA ITEM VALUE            */ 51000042
                                                                        52000042
         /* 'RETENTIONPERIOD' PARAMETER                              */ 53000042
         DCL 1 RETPD BASED(FDTPTR(  8)) BDY(WORD),                      54000042
               2 RETPDVAL FIXED(31);   /* NUMERIC VALUE              */ 55000042
                                                                        56000042
         /* 'RELEASE' PARAMETER                                      */ 57000042
         DCL  RLSE    BASED(FDTPTR(  9));                               58000042
                                                                        59000042
         /* 'NORELEASE' PARAMETER                                    */ 60000042
         DCL NRLSE    BASED(FDTPTR( 10));                               61000042
                                                                        62000042
         /* 'BIND' PARAMETER                                         */ 63000042
         DCL  BIND    BASED(FDTPTR( 11));                               64000042
                                                                        65000042
         /* 'NOBIND' PARAMETER                                       */ 66000042
         DCL NBIND    BASED(FDTPTR( 12));                               67000042
                                                                        68000042
         /* 'EXCLUSIVE' USE                                          */ 69000042
         DCL   EXC    BASED(FDTPTR( 13));                               70000042
                                                                        71000042
         /* 'SHARED' USE                                             */ 72000042
         DCL  SHRD    BASED(FDTPTR( 14));                               73000042
                                                                        74000042
         /* 'DASDERASE' PARAMETER                                    */ 75000042
         DCL DERAS    BASED(FDTPTR( 15));                               76000042
                                                                        77000042
         /* 'NODASDERASE' PARAMETER                                  */ 78000042
         DCL NDERA    BASED(FDTPTR( 16));                               79000042
                                                                        80000042
         /* 'READONLY' PARAMETER                                     */ 81000042
         DCL RONLY    BASED(FDTPTR( 17));                               82000042
                                                                        83000042
         /* 'READWRITE' PARAMETER                                    */ 84000042
         DCL    RW    BASED(FDTPTR( 18));                               85000042
                                                                        86000042
         /* 'CONCURRENTUSERS' PARAMETER                              */ 87000042
         DCL 1 CONUS BASED(FDTPTR( 19)) BDY(WORD),                      88000042
               2 CONUSVAL FIXED(31);   /* NUMERIC VALUE              */ 89000042
                                                                        90000042
         /* 'RESERVEDSPACE' PARAMETER                                */ 91000042
         DCL 1 RSVDS BASED(FDTPTR( 20)) BDY(WORD),                      92000042
               2 RSVDSVAL FIXED(31);   /* NUMERIC VALUE              */ 93000042
./  ADD  SSI=53030104,NAME=IDCCSLD
         /************************************************************/ 00800000
         /*                                                          */ 01600000
         /*  'LISTDSET' FUNCTION DATA TABLE DECLARATIONS             */ 02400000
         /*                                                          */ 03200000
         /************************************************************/ 04000000
 %IF BASEFDT = 'YES'                                                    04800000
   %THEN                                                                05600000
     %GO TO BASEFDT1;                                                   06400000
                                                                        07200000
         DCL 1 FDTTBL      BDY(WORD),                                   08000000
 %GO TO BASEFDT2;                                                       08800000
 %BASEFDT1:;                                                            09600000
                                                                        10400000
         DCL 1 FDTTBL      BASED   BDY(WORD),                           11200000
 %BASEFDT2:;                                                            12000000
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 12800000
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 13600000
                                                                        14400000
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 15200000
                                                                        16000000
         /* VOLUME(S) TO LIST                                        */ 16800000
         DCL 1   VOL BASED(FDTPTR(  1)) BDY(HWORD),                     17600000
               2   VOLCNT FIXED(15),   /* COUNT OF ITEMS IN LIST     */ 18400000
               2 *(255) BDY(HWORD),                                     19200000
                 3   VOLLEN FIXED(8),  /* DATA ITEM LENGTH           */ 20000000
                 3   VOLVAL CHAR(  6); /* DATA ITEM VALUE            */ 20800000
                                                                        21600000
         /* GROUP(S) TO LIST                                         */ 22400000
         DCL 1   GRP BASED(FDTPTR(  2)) BDY(HWORD),                     23200000
               2   GRPCNT FIXED(15),   /* COUNT OF ITEMS IN LIST     */ 24000000
               2 *(255) BDY(HWORD),                                     24800000
                 3   GRPLEN FIXED(8),  /* DATA ITEM LENGTH           */ 25600000
                 3   GRPVAL CHAR(  8); /* DATA ITEM VALUE            */ 26400000
                                                                        27200000
         /* OPTION TO LIST ALL VOLUMES                               */ 28000000
         DCL  AVOL    BASED(FDTPTR(  3));                               28800000
                                                                        29600000
         /* OPTION TO LIST ALL GROUPS                                */ 30400000
         DCL  AGRP    BASED(FDTPTR(  4));                               31200000
                                                                        32000000
         /* 'NON-GROUPED' LIMITING OPTION                            */ 32800000
         DCL NGRPD    BASED(FDTPTR(  5));                               33600000
                                                                        34400000
         /* 'GENERAL' LIMITING OPTION                                */ 35200000
         DCL GENER    BASED(FDTPTR( 20));                               36000000
                                                                        36800000
         /* LEVEL NAME OF DATA SETS TO LIST                          */ 37600000
         DCL 1 LEVEL BASED(FDTPTR(  6)) BDY(HWORD),                     38400000
               2 LEVELPLN FIXED(8),    /* PASSWORD LENGTH            */ 39200000
               2 LEVELPAS CHAR(8),     /* PASSWORD VALUE             */ 40000000
               2 LEVELPOS FIXED(8),    /* ASTERISK POSITION          */ 40800000
               2 LEVELFLG BIT(8),      /* DATA SET FLAGS             */ 41600000
                 3 LEVELFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 42400000
               2 LEVELMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 43200000
               2 LEVELMEM CHAR(8),     /* MEMBER NAME                */ 44000000
               2 LEVELLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 44800000
               2 LEVELVAL CHAR(44);    /* CATALOGUED NAME            */ 45600000
                                                                        46400000
         /* 'UNCATALOGED' LIMITING OPTION                            */ 47200000
         DCL UNCAT    BASED(FDTPTR(  7));                               48000000
                                                                        48800000
         /* 'EXPIRATION DATE' LIMITING OPTION                        */ 49600000
         DCL 1 EXPDT BASED(FDTPTR(  8)) BDY(WORD),                      50400000
               2 EXPDTVAL FIXED(31);   /* NUMERIC VALUE              */ 51200000
                                                                        52000000
         /* 'EXPIRATION DAYS' LIMITING OPTION                        */ 52800000
         DCL 1 EXPIR BASED(FDTPTR(  9)) BDY(WORD),                      53600000
               2 EXPIRVAL FIXED(31);   /* NUMERIC VALUE              */ 54400000
                                                                        55200000
         /* 'CREATION DATE' LIMITING OPTION                          */ 56000000
         DCL 1 CREDT BASED(FDTPTR( 10)) BDY(WORD),                      56800000
               2 CREDTVAL FIXED(31);   /* NUMERIC VALUE              */ 57600000
                                                                        58400000
         /* 'CREATION DAYS' LIMITING OPTION                          */ 59200000
         DCL 1 CREAT BASED(FDTPTR( 11)) BDY(WORD),                      60000000
               2 CREATVAL FIXED(31);   /* NUMERIC VALUE              */ 60800000
                                                                        61600000
         /* 'FILE' DDNAME                                            */ 62400000
         DCL 1  FILE BASED(FDTPTR( 12)) BDY(HWORD),                     63200000
               2  FILELEN FIXED(8),    /* DATA ITEM LENGTH           */ 64000000
               2  FILEVAL CHAR(  8);   /* DATA ITEM VALUE            */ 64800000
                                                                        65600000
         /* 'REPORT' OPTION                                          */ 66400000
         DCL   RPT    BASED(FDTPTR( 13));                               67200000
                                                                        68000000
         /* 'STATUS' REPORT OPTION                                   */ 68800000
         DCL  STAT    BASED(FDTPTR( 14));                               69600000
                                                                        70400000
         /* 'USAGE' REPORT OPTION                                    */ 71200000
         DCL USAGE    BASED(FDTPTR( 15));                               72000000
                                                                        72800000
         /* 'LEGEND' OPTION                                          */ 73600000
         DCL  LGND    BASED(FDTPTR( 16));                               74400000
                                                                        75200000
         /* 'NOLEGEND' OPTION                                        */ 76000000
         DCL NLGND    BASED(FDTPTR( 17));                               76800000
                                                                        77600000
         /* 'OFILE' DDNAME                                           */ 78400000
         DCL 1 OFILE BASED(FDTPTR( 18)) BDY(HWORD),                     79200000
               2 OFILELEN FIXED(8),    /* DATA ITEM LENGTH           */ 80000000
               2 OFILEVAL CHAR(  8);   /* DATA ITEM VALUE            */ 80800000
                                                                        81600000
         /* 'OUTDATASET' NAME                                        */ 82400000
         DCL 1   ODS BASED(FDTPTR( 19)) BDY(HWORD),                     83200000
               2   ODSPLN FIXED(8),    /* PASSWORD LENGTH            */ 84000000
               2   ODSPAS CHAR(8),     /* PASSWORD VALUE             */ 84800000
               2   ODSPOS FIXED(8),    /* ASTERISK POSITION          */ 85600000
               2   ODSFLG BIT(8),      /* DATA SET FLAGS             */ 86400000
                 3   ODSFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 87200000
               2   ODSMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 88000000
               2   ODSMEM CHAR(8),     /* MEMBER NAME                */ 88800000
               2   ODSLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 89600000
               2   ODSVAL CHAR(44);    /* CATALOGUED NAME            */ 90400000
./  ADD  SSI=42550398,NAME=IDCCSLM
         /************************************************************/ 01000000
         /*                                                          */ 02000000
         /*  'LISTMSF ' FUNCTION DATA TABLE DECLARATIONS             */ 03000000
         /*                                                          */ 04000000
         /************************************************************/ 05000000
 %IF BASEFDT = 'YES'                                                    06000000
   %THEN                                                                07000000
     %GO TO BASEFDT1;                                                   08000000
                                                                        09000000
         DCL 1 FDTTBL      BDY(WORD),                                   10000000
 %GO TO BASEFDT2;                                                       11000000
 %BASEFDT1:;                                                            12000000
                                                                        13000000
         DCL 1 FDTTBL      BASED   BDY(WORD),                           14000000
 %BASEFDT2:;                                                            15000000
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 16000000
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 17000000
                                                                        18000000
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 19000000
                                                                        20000000
         /* 'WORKFILE' PARAMETER                                     */ 21000000
         DCL 1 WFILE BASED(FDTPTR(  1)) BDY(HWORD),                     22000000
               2 WFILELEN FIXED(8),    /* DATA ITEM LENGTH           */ 23000000
               2 WFILEVAL CHAR(  8);   /* DATA ITEM VALUE            */ 24000000
                                                                        25000000
         /* 'WORKDATASET' PARAMETER                                  */ 26000000
         DCL 1   WDS BASED(FDTPTR(  2)) BDY(HWORD),                     27000000
               2   WDSPLN FIXED(8),    /* PASSWORD LENGTH            */ 28000000
               2   WDSPAS CHAR(8),     /* PASSWORD VALUE             */ 29000000
               2   WDSPOS FIXED(8),    /* ASTERISK POSITION          */ 30000000
               2   WDSFLG BIT(8),      /* DATA SET FLAGS             */ 31000000
                 3   WDSFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 32000000
               2   WDSMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 33000000
               2   WDSMEM CHAR(8),     /* MEMBER NAME                */ 34000000
               2   WDSLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 35000000
               2   WDSVAL CHAR(44);    /* CATALOGUED NAME            */ 36000000
                                                                        37000000
         /* 'MOUNTABLE' PARAMETER                                    */ 38000000
         DCL   MNT    BASED(FDTPTR(  3));                               39000000
                                                                        40000000
         /* 'NONMOUNTABLE' PARAMETER                                 */ 41000000
         DCL  NMNT    BASED(FDTPTR(  4));                               42000000
                                                                        43000000
         /* 'CARTRIDGES' PARAMETER                                   */ 44000000
         DCL  CART    BASED(FDTPTR(  5));                               45000000
                                                                        46000000
         /* 'SUMMARY' PARAMETER                                      */ 47000000
         DCL SUMRY    BASED(FDTPTR(  6));                               48000000
                                                                        49000000
         /* 'ALL' PARAMETER                                          */ 50000000
         DCL    AL    BASED(FDTPTR(  7));                               51000000
                                                                        52000000
         /* 'MSF'  PARAMETER                                         */ 53000000
         DCL 1   MSF BASED(FDTPTR(  8)) BDY(WORD),                      54000000
               2   MSFVAL FIXED(31);   /* NUMERIC VALUE              */ 55000000
                                                                        56000000
         /* 'OUTFILE' PARAMETER                                      */ 57000000
         DCL 1 OFILE BASED(FDTPTR(  9)) BDY(HWORD),                     58000000
               2 OFILELEN FIXED(8),    /* DATA ITEM LENGTH           */ 59000000
               2 OFILEVAL CHAR(  8);   /* DATA ITEM VALUE            */ 60000000
                                                                        61000000
         /* 'OUTDATASET' PARAMETER                                   */ 62000000
         DCL 1   ODS BASED(FDTPTR( 10)) BDY(HWORD),                     63000000
               2   ODSPLN FIXED(8),    /* PASSWORD LENGTH            */ 64000000
               2   ODSPAS CHAR(8),     /* PASSWORD VALUE             */ 65000000
               2   ODSPOS FIXED(8),    /* ASTERISK POSITION          */ 66000000
               2   ODSFLG BIT(8),      /* DATA SET FLAGS             */ 67000000
                 3   ODSFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 68000000
               2   ODSMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 69000000
               2   ODSMEM CHAR(8),     /* MEMBER NAME                */ 70000000
               2   ODSLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 71000000
               2   ODSVAL CHAR(44);    /* CATALOGUED NAME            */ 72000000
./  ADD  SSI=61700262,NAME=IDCCSLV
         /************************************************************/ 00800003
         /*                                                          */ 01600003
         /*  'LISTMSVI' FUNCTION DATA TABLE DECLARATIONS             */ 02400003
         /*                                                          */ 03200003
         /************************************************************/ 04000003
 %IF BASEFDT = 'YES'                                                    04800003
   %THEN                                                                05600003
     %GO TO BASEFDT1;                                                   06400003
                                                                        07200003
         DCL 1 FDTTBL      BDY(WORD),                                   08000003
 %GO TO BASEFDT2;                                                       08800003
 %BASEFDT1:;                                                            09600003
                                                                        10400003
         DCL 1 FDTTBL      BASED   BDY(WORD),                           11200003
 %BASEFDT2:;                                                            12000003
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 12800003
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 13600003
                                                                        14400003
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 15200003
                                                                        16000003
         /* 'VOLUMES' PARAMETER                                      */ 16800003
         DCL 1  VOLS BASED(FDTPTR(  1)) BDY(HWORD),                     17600003
               2  VOLSCNT FIXED(15),   /* COUNT OF ITEMS IN LIST     */ 18400003
               2 *(255) BDY(HWORD),                                     19200003
                 3  VOLSLEN FIXED(8),  /* DATA ITEM LENGTH           */ 20000003
                 3  VOLSVAL CHAR(  6); /* DATA ITEM VALUE            */ 20800003
                                                                        21600003
         /* 'ALLVOLUMES' PARAMETER                                   */ 22400003
         DCL  ALLV    BASED(FDTPTR(  2));                               23200003
                                                                        24000003
         /* 'GROUPS' PARAMETER                                       */ 24800003
         DCL 1   GRP BASED(FDTPTR(  3)) BDY(HWORD),                     25600003
               2   GRPCNT FIXED(15),   /* COUNT OF ITEMS IN LIST     */ 26400003
               2 *(255) BDY(HWORD),                                     27200003
                 3   GRPLEN FIXED(8),  /* DATA ITEM LENGTH           */ 28000003
                 3   GRPVAL CHAR(  8); /* DATA ITEM VALUE            */ 28800003
                                                                        29600003
         /* 'ALLGROUPS' PARAMETER                                    */ 30400003
         DCL  AGRP    BASED(FDTPTR(  4));                               31200003
                                                                        32000003
         /* 'NONGROUPED' PARAMETER                                   */ 32800003
         DCL NGRPD    BASED(FDTPTR(  5));                               33600003
                                                                        34400003
         /* 'PASTTHRESHOLD' PARAMETER                                */ 35200003
         DCL    PT    BASED(FDTPTR(  6));                               36000003
                                                                        36800003
         /* 'VOLUMELIST' PARAMETER                                   */ 37600003
         DCL VOLST    BASED(FDTPTR(  7));                               38400003
                                                                        39200003
         /* 'EXPIRATION' PARAMETER                                   */ 40000003
         DCL 1 EXPIR BASED(FDTPTR(  8)) BDY(WORD),                      40800003
               2 EXPIRVAL FIXED(31);   /* NUMERIC VALUE              */ 41600003
                                                                        42400003
         /* 'ALL' PARAMETER                                          */ 43200003
         DCL    AL    BASED(FDTPTR( 10));                               44000003
                                                                        44800003
         /* 'OUTFILE' PARAMETER                                      */ 45600003
         DCL 1 OFILE BASED(FDTPTR( 11)) BDY(HWORD),                     46400003
               2 OFILELEN FIXED(8),    /* DATA ITEM LENGTH           */ 47200003
               2 OFILEVAL CHAR(  8);   /* DATA ITEM VALUE            */ 48000003
                                                                        48800003
         /* 'OUTDATASET' PARAMETER                                   */ 49600003
         DCL 1   ODS BASED(FDTPTR( 12)) BDY(HWORD),                     50400003
               2   ODSPLN FIXED(8),    /* PASSWORD LENGTH            */ 51200003
               2   ODSPAS CHAR(8),     /* PASSWORD VALUE             */ 52000003
               2   ODSPOS FIXED(8),    /* ASTERISK POSITION          */ 52800003
               2   ODSFLG BIT(8),      /* DATA SET FLAGS             */ 53600003
                 3   ODSFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 54400003
               2   ODSMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 55200003
               2   ODSMEM CHAR(8),     /* MEMBER NAME                */ 56000003
               2   ODSLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 56800003
               2   ODSVAL CHAR(44);    /* CATALOGUED NAME            */ 57600003
                                                                        58400003
         /* 'REPORT' PARAMETER                                       */ 59200003
         DCL   RPT    BASED(FDTPTR( 13));                               60000003
                                                                        60800003
         /* 'STATUS' PARAMETER                                       */ 61600003
         DCL  STAT    BASED(FDTPTR( 14));                               62400003
                                                                        63200003
         /* 'USAGE' PARAMETER                                        */ 64000003
         DCL USAGE    BASED(FDTPTR( 15));                               64800003
                                                                        65600003
         /* 'LEGEND' PARAMETER                                       */ 66400003
         DCL   LED    BASED(FDTPTR( 16));                               67200003
                                                                        68000003
         /* 'NOLEGEND' PARAMETER                                     */ 68800003
         DCL  NLED    BASED(FDTPTR( 17));                               69600003
                                                                        70400003
         /* 'ACTIVE' SUBPARAMETER                                    */ 71200003
         DCL   ACT    BASED(FDTPTR( 18));                               72000003
                                                                        72800003
         /* 'INACTIVE' SUBPARAMETER                                  */ 73600003
         DCL INACT    BASED(FDTPTR( 19));                               74400003
                                                                        75200003
         /* 'GENERAL' SUBPARAMETER                                   */ 76000003
         DCL  GNRL    BASED(FDTPTR( 20));                               76800003
                                                                        77600003
         /* 'RESTRICTED' SUBPARAMETER                                */ 78400003
         DCL  RSTR    BASED(FDTPTR( 21));                               79200003
                                                                        80000003
         /* 'CARTRIDGES' PARAMETER                                   */ 80800003
         DCL 1  CTGS BASED(FDTPTR( 22)) BDY(HWORD),                     81600003
               2  CTGSCNT FIXED(15),   /* COUNT OF ITEMS IN LIST     */ 82400003
               2 *(255) BDY(HWORD),                                     83200003
                 3  CTGSLEN FIXED(8),  /* DATA ITEM LENGTH           */ 84000003
                 3  CTGSVAL CHAR( 12); /* DATA ITEM VALUE            */ 84800003
                                                                        85600003
         /* 'ALLCARTRIDGES' PARAMETER                                */ 86400003
         DCL  ALLC    BASED(FDTPTR( 23));                               87200003
                                                                        88000003
         /* 'DUPLICATES' PARM                                        */ 88800003
         DCL   DUP    BASED(FDTPTR(  9));                               89600003
                                                                        90400003
         /* 'PLACEHOLDERS' PARM                                      */ 91200003
         DCL  PLHD    BASED(FDTPTR( 24));                               92000003
./  ADD  SSI=62740471,NAME=IDCCSMC
         /************************************************************/ 00800000
         /*                                                          */ 01600000
         /*  'MODIFYC ' FUNCTION DATA TABLE DECLARATIONS             */ 02400000
         /*                                                          */ 03200000
         /************************************************************/ 04000000
 %IF BASEFDT = 'YES'                                                    04800000
   %THEN                                                                05600000
     %GO TO BASEFDT1;                                                   06400000
                                                                        07200000
         DCL 1 FDTTBL      BDY(WORD),                                   08000000
 %GO TO BASEFDT2;                                                       08800000
 %BASEFDT1:;                                                            09600000
                                                                        10400000
         DCL 1 FDTTBL      BASED   BDY(WORD),                           11200000
 %BASEFDT2:;                                                            12000000
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 12800000
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 13600000
                                                                        14400000
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 15200000
                                                                        16000000
         /* 'VOLUME' OPTION FOR LOCATING A CART                      */ 16800000
         DCL 1   VOL BASED(FDTPTR(  1)) BDY(HWORD),                     17600000
               2   VOLLEN FIXED(8),    /* DATA ITEM LENGTH           */ 18400000
               2   VOLVAL CHAR(  6);   /* DATA ITEM VALUE            */ 19200000
                                                                        20000000
         /* 'CARTRIDGE' OPTION FOR LOCATING A CART                   */ 20800000
         DCL 1  CART BASED(FDTPTR(  2)) BDY(HWORD),                     21600000
               2  CARTLEN FIXED(8),    /* DATA ITEM LENGTH           */ 22400000
               2  CARTVAL CHAR( 12);   /* DATA ITEM VALUE            */ 23200000
                                                                        24000000
         /* 'CELL' OPTION WITH SPECIFIC XYZ LOCATION                 */ 24800000
         DCL  CELL    BASED(FDTPTR(  3));                               25600000
                                                                        26400000
         /* 'X' PORTION OF CELL ADDRESS                              */ 27200000
         DCL 1 CELLX BASED(FDTPTR(  4)) BDY(WORD),                      28000000
               2 CELLXVAL FIXED(31);   /* NUMERIC VALUE              */ 28800000
                                                                        29600000
         /* 'Y' PORTION OF CELL ADDRESS                              */ 30400000
         DCL 1 CELLY BASED(FDTPTR(  5)) BDY(WORD),                      31200000
               2 CELLYVAL FIXED(31);   /* NUMERIC VALUE              */ 32000000
                                                                        32800000
         /* 'Z' PORTION OF CELL ADDRESS                              */ 33600000
         DCL 1 CELLZ BASED(FDTPTR(  6)) BDY(WORD),                      34400000
               2 CELLZVAL FIXED(31);   /* NUMERIC VALUE              */ 35200000
                                                                        36000000
         /* 'SEQUENCE' NUMBER OF CARTRIDGE                           */ 36800000
         DCL 1   SEQ BASED(FDTPTR(  7)) BDY(WORD),                      37600000
               2   SEQVAL FIXED(31);   /* NUMERIC VALUE              */ 38400000
                                                                        39200000
         /* 'MSF' ID NUMBER CONTAINING CARTRIDGE                     */ 40000000
         DCL 1   MSF BASED(FDTPTR(  8)) BDY(WORD),                      40800000
               2   MSFVAL FIXED(31);   /* NUMERIC VALUE              */ 41600000
                                                                        42400000
         /* MODIFY BY A DIRECT EJECT OF CART FUNCTION                */ 43200000
         DCL   DEJ    BASED(FDTPTR(  9));                               44000000
                                                                        44800000
         /* MODIFY BY A CHANGE LABEL OF CART FUNCTION                */ 45600000
         DCL CHNGL    BASED(FDTPTR( 10));                               46400000
                                                                        47200000
         /* 'CELL' ADDRESS AFTER MODIFICATION                        */ 48000000
         DCL  NCEL    BASED(FDTPTR( 11));                               48800000
                                                                        49600000
         /* 'X' PORTION OF CELL ADDRESS                              */ 50400000
         DCL 1 NCELX BASED(FDTPTR( 12)) BDY(WORD),                      51200000
               2 NCELXVAL FIXED(31);   /* NUMERIC VALUE              */ 52000000
                                                                        52800000
         /* 'Y' PORTION OF CELL ADDRESS                              */ 53600000
         DCL 1 NCELY BASED(FDTPTR( 13)) BDY(WORD),                      54400000
               2 NCELYVAL FIXED(31);   /* NUMERIC VALUE              */ 55200000
                                                                        56000000
         /* 'Z' PORTION OF CELL ADDRESS                              */ 56800000
         DCL 1 NCELZ BASED(FDTPTR( 14)) BDY(WORD),                      57600000
               2 NCELZVAL FIXED(31);   /* NUMERIC VALUE              */ 58400000
                                                                        59200000
         /* 'EJECT' MANUAL EXIT STATION AFTER MODIFICATION           */ 60000000
         DCL EJECT    BASED(FDTPTR( 15));                               60800000
                                                                        61600000
         /* 'SCRATCH' OPTION AS CART MODIFICATION                    */ 62400000
         DCL   SCR    BASED(FDTPTR( 16));                               63200000
                                                                        64000000
         /* 'VOLUME' OPTION AS CART MODIFICATION                     */ 64800000
         DCL 1  NVOL BASED(FDTPTR( 17)) BDY(HWORD),                     65600000
               2  NVOLLEN FIXED(8),    /* DATA ITEM LENGTH           */ 66400000
               2  NVOLVAL CHAR(  6);   /* DATA ITEM VALUE            */ 67200000
                                                                        68000000
         /* 'SEQUENCE' OPTION AS CART MODIFICATION                   */ 68800000
         DCL 1  NSEQ BASED(FDTPTR( 18)) BDY(WORD),                      69600000
               2  NSEQVAL FIXED(31);   /* NUMERIC VALUE              */ 70400000
                                                                        71200000
         /* 'OTHERCARTRIDGE' CSN OF A PAIR TO BE MODIFIED            */ 72000000
         DCL 1  OCSN BASED(FDTPTR( 19)) BDY(HWORD),                     72800000
               2  OCSNLEN FIXED(8),    /* DATA ITEM LENGTH           */ 73600000
               2  OCSNVAL CHAR( 12);   /* DATA ITEM VALUE            */ 74400000
                                                                        75200000
         /* 'BIND' ATTRIBUTE OPTION AS CART MODIFICATION             */ 76000000
         DCL  BIND    BASED(FDTPTR( 20));                               76800000
                                                                        77600000
         /* 'NOBIND' ATTRIBUTE OPTION AS CART MODIFICATION           */ 78400000
         DCL NBIND    BASED(FDTPTR( 21));                               79200000
                                                                        80000000
         /* 'EXCLUSIVE' ATTRIBUTE OPTION AS CART MODIFICATION        */ 80800000
         DCL   XCL    BASED(FDTPTR( 22));                               81600000
                                                                        82400000
         /* 'SHARED' ATTRIBUTE OPTION AS CART MODIFICATION           */ 83200000
         DCL  SHRD    BASED(FDTPTR( 23));                               84000000
                                                                        84800000
         /* 'READONLY' ATTRIBUTE OPTION AS CART MODIFICATION         */ 85600000
         DCL RONLY    BASED(FDTPTR( 24));                               86400000
                                                                        87200000
         /* 'READWRITE' ATTRIBUTE OPTION AS CART MODIFICATION        */ 88000000
         DCL    RW    BASED(FDTPTR( 25));                               88800000
                                                                        89600000
         /* 'DASDERASE' ATTRIBUTE OPTION AS CART MODIFICATION        */ 90400000
         DCL DERAS    BASED(FDTPTR( 26));                               91200000
                                                                        92000000
         /* 'NODASDERASE' ATTRIBUTE OPTION AS CART MODIFICATION      */ 92800000
         DCL NERAS    BASED(FDTPTR( 27));                               93600000
./  ADD  SSI=62740472,NAME=IDCCSMG
         /************************************************************/ 00900042
         /*                                                          */ 01800042
         /*  'MODIFYG ' FUNCTION DATA TABLE DECLARATIONS             */ 02700042
         /*                                                          */ 03600042
         /************************************************************/ 04500042
 %IF BASEFDT = 'YES'                                                    05400042
   %THEN                                                                06300042
     %GO TO BASEFDT1;                                                   07200042
                                                                        08100042
         DCL 1 FDTTBL      BDY(WORD),                                   09000042
 %GO TO BASEFDT2;                                                       09900042
 %BASEFDT1:;                                                            10800042
                                                                        11700042
         DCL 1 FDTTBL      BASED   BDY(WORD),                           12600042
 %BASEFDT2:;                                                            13500042
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 14400042
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 15300042
                                                                        16200042
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 17100042
                                                                        18000042
         /* 'GROUP' NAME                                             */ 18900042
         DCL 1   GRP BASED(FDTPTR(  1)) BDY(HWORD),                     19800042
               2   GRPLEN FIXED(8),    /* DATA ITEM LENGTH           */ 20700042
               2   GRPVAL CHAR(  8);   /* DATA ITEM VALUE            */ 21600042
                                                                        22500042
         /* 'PRIMARY' SPACE                                          */ 23400042
         DCL 1   PRI BASED(FDTPTR(  2)) BDY(WORD),                      24300042
               2   PRIVAL FIXED(31);   /* NUMERIC VALUE              */ 25200042
                                                                        26100042
         /* 'SECONDARY' SPACE                                        */ 27000042
         DCL 1   SEC BASED(FDTPTR(  3)) BDY(WORD),                      27900042
               2   SECVAL FIXED(31);   /* NUMERIC VALUE              */ 28800042
                                                                        29700042
         /* 'THRESHOLD' PERCENTAGE                                   */ 30600042
         DCL 1 THOLD BASED(FDTPTR(  4)) BDY(WORD),                      31500042
               2 THOLDVAL FIXED(31);   /* NUMERIC VALUE              */ 32400042
                                                                        33300042
         /* 'DESCRIPTION' PARAMETER                                  */ 34200042
         DCL 1 DESCR BASED(FDTPTR(  5)) BDY(HWORD),                     35100042
               2 DESCRLEN FIXED(8),    /* DATA ITEM LENGTH           */ 36000042
               2 DESCRVAL CHAR( 30);   /* DATA ITEM VALUE            */ 36900042
                                                                        37800042
         /* 'OWNER' NAME                                             */ 38700042
         DCL 1 OWNER BASED(FDTPTR(  6)) BDY(HWORD),                     39600042
               2 OWNERLEN FIXED(8),    /* DATA ITEM LENGTH           */ 40500042
               2 OWNERVAL CHAR( 10);   /* DATA ITEM VALUE            */ 41400042
                                                                        42300042
         /* 'OWNER' ADDRESS                                          */ 43200042
         DCL 1   ADD BASED(FDTPTR(  7)) BDY(HWORD),                     44100042
               2   ADDLEN FIXED(8),    /* DATA ITEM LENGTH           */ 45000042
               2   ADDVAL CHAR( 30);   /* DATA ITEM VALUE            */ 45900042
                                                                        46800042
         /* 'RETENTIONPERIOD' PARAMETER                              */ 47700042
         DCL 1 RETPD BASED(FDTPTR(  8)) BDY(WORD),                      48600042
               2 RETPDVAL FIXED(31);   /* NUMERIC VALUE              */ 49500042
                                                                        50400042
         /* 'NULLIFY' PARAMETER                                      */ 51300042
         DCL NULLF    BASED(FDTPTR(  9));                               52200042
                                                                        53100042
         /* 'NULLIFY THRESHOLD' FLAG                                 */ 54000042
         DCL NTHOL    BASED(FDTPTR( 10));                               54900042
                                                                        55800042
         /* 'NULLIFY DESCRIPTION' FLAG                               */ 56700042
         DCL NDESC    BASED(FDTPTR( 11));                               57600042
                                                                        58500042
         /* 'NULLIFY OWNER' FLAG                                     */ 59400042
         DCL  NOWN    BASED(FDTPTR( 12));                               60300042
                                                                        61200042
         /* 'NULLIFY ADDRESS' FLAG                                   */ 62100042
         DCL NADDR    BASED(FDTPTR( 13));                               63000042
                                                                        63900042
         /* 'NULLIFY RETENTIONPERIOD' FLAG                           */ 64800042
         DCL NRTPD    BASED(FDTPTR( 14));                               65700042
                                                                        66600042
         /* 'RELEASE' PARAMETER                                      */ 67500042
         DCL  RLSE    BASED(FDTPTR( 15));                               68400042
                                                                        69300042
         /* 'NORELEASE' PARAMETER                                    */ 70200042
         DCL NRLSE    BASED(FDTPTR( 16));                               71100042
                                                                        72000042
         /* 'BIND' PARAMETER                                         */ 72900042
         DCL  BIND    BASED(FDTPTR( 17));                               73800042
                                                                        74700042
         /* 'NOBIND' PARAMETER                                       */ 75600042
         DCL NBIND    BASED(FDTPTR( 18));                               76500042
                                                                        77400042
         /* 'EXCLUSIVE' USE                                          */ 78300042
         DCL   EXC    BASED(FDTPTR( 19));                               79200042
                                                                        80100042
         /* 'SHARED' USE                                             */ 81000042
         DCL  SHRD    BASED(FDTPTR( 20));                               81900042
                                                                        82800042
         /* 'DASDERASE' PARAMETER                                    */ 83700042
         DCL DERAS    BASED(FDTPTR( 21));                               84600042
                                                                        85500042
         /* 'NODASDERASE' PARAMETER                                  */ 86400042
         DCL NDERA    BASED(FDTPTR( 22));                               87300042
                                                                        88200042
         /* 'READONLY' PARAMETER                                     */ 89100042
         DCL RONLY    BASED(FDTPTR( 23));                               90000042
                                                                        90900042
         /* 'READWRITE' PARAMETER                                    */ 91800042
         DCL    RW    BASED(FDTPTR( 24));                               92700042
                                                                        93600042
         /* 'CONCURRENTUSERS' PARAMETER                              */ 94500042
         DCL 1 CONUS BASED(FDTPTR( 25)) BDY(WORD),                      95400042
               2 CONUSVAL FIXED(31);   /* NUMERIC VALUE              */ 96300042
                                                                        97200042
         /* 'RESERVEDSPACE' PARAMETER                                */ 98100042
         DCL 1 RSVDS BASED(FDTPTR( 26)) BDY(WORD),                      99000042
               2 RSVDSVAL FIXED(31);   /* NUMERIC VALUE              */ 99900042
./  ADD  SSI=61690008,NAME=IDCCSMV
         /************************************************************/ 00800003
         /*                                                          */ 01600003
         /*  'MODIFYV ' FUNCTION DATA TABLE DECLARATIONS             */ 02400003
         /*                                                          */ 03200003
         /************************************************************/ 04000003
 %IF BASEFDT = 'YES'                                                    04800003
   %THEN                                                                05600003
     %GO TO BASEFDT1;                                                   06400003
                                                                        07200003
         DCL 1 FDTTBL      BDY(WORD),                                   08000003
 %GO TO BASEFDT2;                                                       08800003
 %BASEFDT1:;                                                            09600003
                                                                        10400003
         DCL 1 FDTTBL      BASED   BDY(WORD),                           11200003
 %BASEFDT2:;                                                            12000003
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 12800003
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 13600003
                                                                        14400003
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 15200003
                                                                        16000003
         /* 'VOLUME'  PARAMETER                                      */ 16800003
         DCL 1   VOL BASED(FDTPTR(  1)) BDY(HWORD),                     17600003
               2   VOLLEN FIXED(8),    /* DATA ITEM LENGTH           */ 18400003
               2   VOLVAL CHAR(  6);   /* DATA ITEM VALUE            */ 19200003
                                                                        20000003
         /* 'NEWSERIAL'  PARMAMETER                                  */ 20800003
         DCL 1 NEWSR BASED(FDTPTR(  2)) BDY(HWORD),                     21600003
               2 NEWSRLEN FIXED(8),    /* DATA ITEM LENGTH           */ 22400003
               2 NEWSRVAL CHAR(  6);   /* DATA ITEM VALUE            */ 23200003
                                                                        24000003
         /* 'OWNER'  PARAMETER                                       */ 24800003
         DCL 1 OWNER BASED(FDTPTR(  3)) BDY(HWORD),                     25600003
               2 OWNERLEN FIXED(8),    /* DATA ITEM LENGTH           */ 26400003
               2 OWNERVAL CHAR( 10);   /* DATA ITEM VALUE            */ 27200003
                                                                        28000003
         /* 'GROUP'  PARAMETER                                       */ 28800003
         DCL 1   GRP BASED(FDTPTR(  4)) BDY(HWORD),                     29600003
               2   GRPLEN FIXED(8),    /* DATA ITEM LENGTH           */ 30400003
               2   GRPVAL CHAR(  8);   /* DATA ITEM VALUE            */ 31200003
                                                                        32000003
         /* 'GENERAL'  PARAMETER                                     */ 32800003
         DCL  GNRL    BASED(FDTPTR(  5));                               33600003
                                                                        34400003
         /* 'RESTRICTED'  PARAMETER                                  */ 35200003
         DCL  RSTR    BASED(FDTPTR(  6));                               36000003
                                                                        36800003
         /* 'BIND'  PARAMETER                                        */ 37600003
         DCL  BIND    BASED(FDTPTR(  7));                               38400003
                                                                        39200003
         /* 'NOBIND'  PARAMETER                                      */ 40000003
         DCL NBIND    BASED(FDTPTR(  8));                               40800003
                                                                        41600003
         /* 'EXCLUSIVE'  PARAMETER                                   */ 42400003
         DCL EXECL    BASED(FDTPTR(  9));                               43200003
                                                                        44000003
         /* 'SHARED'  PARAMETER                                      */ 44800003
         DCL  SHRD    BASED(FDTPTR( 10));                               45600003
                                                                        46400003
         /* 'READONLY'  PARAMETER                                    */ 47200003
         DCL RONLY    BASED(FDTPTR( 11));                               48000003
                                                                        48800003
         /* 'READWRITE'  PARAMETER                                   */ 49600003
         DCL    RW    BASED(FDTPTR( 12));                               50400003
                                                                        51200003
         /* 'DASDERASE'  PARAMETER                                   */ 52000003
         DCL DERAS    BASED(FDTPTR( 13));                               52800003
                                                                        53600003
         /* 'NODASDERASE'  PARAMETER                                 */ 54400003
         DCL NDERS    BASED(FDTPTR( 14));                               55200003
                                                                        56000003
         /* 'DESCRIPTION'  PARAMETER                                 */ 56800003
         DCL 1 DESCR BASED(FDTPTR( 15)) BDY(HWORD),                     57600003
               2 DESCRLEN FIXED(8),    /* DATA ITEM LENGTH           */ 58400003
               2 DESCRVAL CHAR( 30);   /* DATA ITEM VALUE            */ 59200003
                                                                        60000003
         /* 'TO'  PARMAMETER                                         */ 60800003
         DCL 1    TO BASED(FDTPTR( 16)) BDY(WORD),                      61600003
               2    TOVAL FIXED(31);   /* NUMERIC VALUE              */ 62400003
                                                                        63200003
         /* 'BACKUPNUMBER'  PARMAMETER                               */ 64000003
         DCL 1  BKUP BASED(FDTPTR( 17)) BDY(WORD),                      64800003
               2  BKUPVAL FIXED(31);   /* NUMERIC VALUE              */ 65600003
                                                                        66400003
         /* 'NULLIFY'  PARAMETER                                     */ 67200003
         DCL NULFY    BASED(FDTPTR( 18));                               68000003
                                                                        68800003
         /* 'OWNER'  SUBPARAMETER                                    */ 69600003
         DCL  NOWN    BASED(FDTPTR( 19));                               70400003
                                                                        71200003
         /* 'GROUP'  SUBPARAMETER                                    */ 72000003
         DCL  NGRP    BASED(FDTPTR( 20));                               72800003
                                                                        73600003
         /* 'DESCRIPTION'  SUBPARAMETER                              */ 74400003
         DCL NDESC    BASED(FDTPTR( 21));                               75200003
                                                                        76000003
         /* 'RETENTION'  SUBPARAMETER                                */ 76800003
         DCL  NRET    BASED(FDTPTR( 22));                               77600003
                                                                        78400003
         /* 'FILE'  PARAMETER                                        */ 79200003
         DCL 1  FYLE BASED(FDTPTR( 23)) BDY(HWORD),                     80000003
               2  FYLELEN FIXED(8),    /* DATA ITEM LENGTH           */ 80800003
               2  FYLEVAL CHAR(  8);   /* DATA ITEM VALUE            */ 81600003
                                                                        82400003
         /* 'PASSWORDFILES'  PARAMETER                               */ 83200003
         DCL 1  PSWD BASED(FDTPTR( 24)) BDY(HWORD),                     84000003
               2  PSWDCNT FIXED(15),   /* COUNT OF ITEMS IN LIST     */ 84800003
               2 *(255) BDY(HWORD),                                     85600003
                 3  PSWDLEN FIXED(8),  /* DATA ITEM LENGTH           */ 86400003
                 3  PSWDVAL CHAR(  8); /* DATA ITEM VALUE            */ 87200003
                                                                        88000003
         /* 'FOR'  PARMAMETER                                        */ 88800003
         DCL 1  FORE BASED(FDTPTR( 25)) BDY(WORD),                      89600003
               2  FOREVAL FIXED(31);   /* NUMERIC VALUE              */ 90400003
                                                                        91200003
         /* 'REBIULDLABEL'  PARAMETER                                */ 92000003
         DCL  RLBL    BASED(FDTPTR( 26));                               92800003
                                                                        93600003
         /* 'VTOCHEADERADDRESS'  PARAMETER                           */ 94400003
         DCL 1 VADDR BASED(FDTPTR( 27)) BDY(WORD),                      95200003
               2 VADDRVAL FIXED(31);   /* NUMERIC VALUE              */ 96000003
./  ADD  SSI=61680198,NAME=IDCCSNC
         /************************************************************/ 02000003
         /*                                                          */ 04000003
         /*  'NULLIFYC' FUNCTION DATA TABLE DECLARATIONS             */ 06000003
         /*                                                          */ 08000003
         /************************************************************/ 10000003
 %IF BASEFDT = 'YES'                                                    12000003
   %THEN                                                                14000003
     %GO TO BASEFDT1;                                                   16000003
                                                                        18000003
         DCL 1 FDTTBL      BDY(WORD),                                   20000003
 %GO TO BASEFDT2;                                                       22000003
 %BASEFDT1:;                                                            24000003
                                                                        26000003
         DCL 1 FDTTBL      BASED   BDY(WORD),                           28000003
 %BASEFDT2:;                                                            30000003
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 32000003
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 34000003
                                                                        36000003
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 38000003
                                                                        40000003
         /* 'ACTIVE' VOLUME OPTION                                   */ 42000003
         DCL   ACT    BASED(FDTPTR(  1));                               44000003
                                                                        46000003
         /* 'INACTIVE' VOLUME OPTION                                 */ 48000003
         DCL INACT    BASED(FDTPTR(  2));                               50000003
                                                                        52000003
         /* 'SCRATCHCARTRIDGE' OPTION                                */ 54000003
         DCL  SCRC    BASED(FDTPTR(  3));                               56000003
                                                                        58000003
         /* CARTRIDGE SERIAL NUMBER                                  */ 60000003
         DCL 1  CART BASED(FDTPTR(  4)) BDY(HWORD),                     62000003
               2  CARTLEN FIXED(8),    /* DATA ITEM LENGTH           */ 64000003
               2  CARTVAL CHAR( 12);   /* DATA ITEM VALUE            */ 66000003
                                                                        68000003
         /* VOLUME SERIAL NUMBER                                     */ 70000003
         DCL 1   VOL BASED(FDTPTR(  5)) BDY(HWORD),                     72000003
               2   VOLLEN FIXED(8),    /* DATA ITEM LENGTH           */ 74000003
               2   VOLVAL CHAR(  6);   /* DATA ITEM VALUE            */ 76000003
                                                                        78000003
         /* 'SEQUENCE1' CARTRIDGE OPTION                             */ 80000003
         DCL  SEQ1    BASED(FDTPTR(  7));                               82000003
                                                                        84000003
         /* 'SEQUENCE2' CARTRIDGE OPTION                             */ 86000003
         DCL  SEQ2    BASED(FDTPTR(  8));                               88000003
                                                                        90000003
         /* 'NULLIFY VOLUME' OPTION                                  */ 92000003
         DCL  NVOL    BASED(FDTPTR(  9));                               94000003
./  ADD  SSI=63280085,NAME=IDCCSRD
         /************************************************************/ 00100006
         /*                                                          */ 00200006
         /*  'REPAIRV ' FUNCTION DATA TABLE DECLARATIONS             */ 00300006
         /*                                                          */ 00400006
         /************************************************************/ 00500006
 %IF BASEFDT = 'YES'                                                    00600006
   %THEN                                                                00700006
     %GO TO BASEFDT1;                                                   00800006
                                                                        00900006
         DCL 1 FDTTBL      BDY(WORD),                                   01000006
 %GO TO BASEFDT2;                                                       01100006
 %BASEFDT1:;                                                            01200006
                                                                        01300006
         DCL 1 FDTTBL      BASED   BDY(WORD),                           01400006
 %BASEFDT2:;                                                            01500006
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 01600006
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 01700006
                                                                        01800006
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 01900006
                                                                        02000006
         /* 'DISPLAY'PARAMETER                                       */ 02100006
         DCL DISPL    BASED(FDTPTR(  1));                               02200006
                                                                        02300006
         /* 'ERRORS'PARAMETER                                        */ 02400006
         DCL ERROR    BASED(FDTPTR(  2));                               02500006
                                                                        02600006
         /* 'ALL'PARAMETER                                           */ 02700006
         DCL  ALLA    BASED(FDTPTR(  3));                               02800006
                                                                        02900006
         /* 'INFILE'PARAMETER/PASSWORD                               */ 03000006
         DCL 1 INFIL BASED(FDTPTR(  4)) BDY(HWORD),                     03100006
               2 INFILPLN FIXED(8),    /* PASSWORD LENGTH            */ 03200006
               2 INFILPAS CHAR(8),     /* PASSWORD VALUE             */ 03300006
               2 INFILLEN FIXED(8),    /* DATA ITEM LENGTH           */ 03400006
               2 INFILVAL CHAR(  8);   /* DATA ITEM VALUE            */ 03500006
                                                                        03600006
         /* 'INDATASET'PARAMETER/PASSWORD                            */ 03700006
         DCL 1  INDS BASED(FDTPTR(  5)) BDY(HWORD),                     03800006
               2  INDSPLN FIXED(8),    /* PASSWORD LENGTH            */ 03900006
               2  INDSPAS CHAR(8),     /* PASSWORD VALUE             */ 04000006
               2  INDSPOS FIXED(8),    /* ASTERISK POSITION          */ 04100006
               2  INDSFLG BIT(8),      /* DATA SET FLAGS             */ 04200006
                 3  INDSFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 04300006
               2  INDSMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 04400006
               2  INDSMEM CHAR(8),     /* MEMBER NAME                */ 04500006
               2  INDSLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 04600006
               2  INDSVAL CHAR(44);    /* CATALOGUED NAME            */ 04700006
                                                                        04800006
         /* 'FULLREPAIR'PARAMETER                                    */ 04900006
         DCL FULLR    BASED(FDTPTR(  6));                               05000006
                                                                        05100006
         /* 'DATASETRANGE'PARAMETER                                  */ 05200006
         DCL DSRNG    BASED(FDTPTR(  7));                               05300006
                                                                        05400006
         /* 'REPAIRRANGE'PARAMETER                                   */ 05500006
         DCL DRRNG    BASED(FDTPTR(  8));                               05600006
                                                                        05700006
         /* 'STAGINGRANGE' PARAMETER                                 */ 05800006
         DCL STAGR    BASED(FDTPTR(  9));                               05900006
                                                                        06000006
         /* 'LENGTH'PARAMETER                                        */ 06100006
         DCL DLENG    BASED(FDTPTR( 10));                               06200006
         DCL DLENGCNT FIXED(31) BASED(ADDR(FDTPTR( 10)));               06300006
                                                                        06400006
         /* 'IDONLY'PARAMETER                                        */ 06500006
         DCL IDONL    BASED(FDTPTR( 11));                               06600006
                                                                        06700006
         /* 'FULL RECORD'PARAMETER                                   */ 06800006
         DCL  FREC    BASED(FDTPTR( 12));                               06900006
                                                                        07000006
         /* 'OUTFILE'PARAMETER                                       */ 07100006
         DCL 1 DOUTF BASED(FDTPTR( 13)) BDY(HWORD),                     07200006
               2 DOUTFPLN FIXED(8),    /* PASSWORD LENGTH            */ 07300006
               2 DOUTFPAS CHAR(8),     /* PASSWORD VALUE             */ 07400006
               2 DOUTFLEN FIXED(8),    /* DATA ITEM LENGTH           */ 07500006
               2 DOUTFVAL CHAR(  8);   /* DATA ITEM VALUE            */ 07600006
                                                                        07700006
         /* 'OUTDATASET'PARAMETER                                    */ 07800006
         DCL 1 DOTDS BASED(FDTPTR( 14)) BDY(HWORD),                     07900006
               2 DOTDSPLN FIXED(8),    /* PASSWORD LENGTH            */ 08000006
               2 DOTDSPAS CHAR(8),     /* PASSWORD VALUE             */ 08100006
               2 DOTDSPOS FIXED(8),    /* ASTERISK POSITION          */ 08200006
               2 DOTDSFLG BIT(8),      /* DATA SET FLAGS             */ 08300006
                 3 DOTDSFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 08400006
               2 DOTDSMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 08500006
               2 DOTDSMEM CHAR(8),     /* MEMBER NAME                */ 08600006
               2 DOTDSLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 08700006
               2 DOTDSVAL CHAR(44);    /* CATALOGUED NAME            */ 08800006
                                                                        08900006
         /* 'HEXADECIMAL'PARAMETER                                   */ 09000006
         DCL  HEXA    BASED(FDTPTR( 15));                               09100006
                                                                        09200006
         /* 'CHARACTER'PARAMETER                                     */ 09300006
         DCL CHARA    BASED(FDTPTR( 16));                               09400006
                                                                        09500006
         /* 'DUMP'PARAMETER                                          */ 09600006
         DCL  DUMP    BASED(FDTPTR( 17));                               09700006
                                                                        09800006
         /* 'VOLSER STAGINGRNGE'PARAMETER                            */ 09900006
         DCL 1 VOLSR BASED(FDTPTR( 18)) BDY(HWORD),                     10000006
               2 VOLSRPLN FIXED(8),    /* PASSWORD LENGTH            */ 10100006
               2 VOLSRPAS CHAR(8),     /* PASSWORD VALUE             */ 10200006
               2 VOLSRPOS FIXED(8),    /* ASTERISK POSITION          */ 10300006
               2 VOLSRFLG BIT(8),      /* DATA SET FLAGS             */ 10400006
                 3 VOLSRFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 10500006
               2 VOLSRMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 10600006
               2 VOLSRMEM CHAR(8),     /* MEMBER NAME                */ 10700006
               2 VOLSRLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 10800006
               2 VOLSRVAL CHAR(44);    /* CATALOGUED NAME            */ 10900006
                                                                        11000006
         /* 'FROM CCHHR STGRNGE'PARAMETER                            */ 11100006
         DCL 1 DCCHR BASED(FDTPTR( 19)) BDY(HWORD),                     11200006
               2 DCCHRLEN FIXED(8),    /* DATA ITEM LENGTH           */ 11300006
               2 DCCHRVAL CHAR(  5);   /* DATA ITEM VALUE            */ 11400006
                                                                        11500006
         /* 'TO HHR STAGINGRNGE'PARAMETER                            */ 11600006
         DCL 1  DREC BASED(FDTPTR( 20)) BDY(HWORD),                     11700006
               2  DRECLEN FIXED(8),    /* DATA ITEM LENGTH           */ 11800006
               2  DRECVAL CHAR(  3);   /* DATA ITEM VALUE            */ 11900006
                                                                        12000006
         /* 'VOLSER DATASETRANGE'PARAMETER                           */ 12100006
         DCL 1 VOLDS BASED(FDTPTR( 21)) BDY(HWORD),                     12200006
               2 VOLDSPLN FIXED(8),    /* PASSWORD LENGTH            */ 12300006
               2 VOLDSPAS CHAR(8),     /* PASSWORD VALUE             */ 12400006
               2 VOLDSPOS FIXED(8),    /* ASTERISK POSITION          */ 12500006
               2 VOLDSFLG BIT(8),      /* DATA SET FLAGS             */ 12600006
                 3 VOLDSFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 12700006
               2 VOLDSMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 12800006
               2 VOLDSMEM CHAR(8),     /* MEMBER NAME                */ 12900006
               2 VOLDSLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 13000006
               2 VOLDSVAL CHAR(44);    /* CATALOGUED NAME            */ 13100006
                                                                        13200006
         /* 'FROM CCHHR  DATASETRANGE'PARAMETER                      */ 13300006
         DCL 1 DSCHR BASED(FDTPTR( 22)) BDY(HWORD),                     13400006
               2 DSCHRLEN FIXED(8),    /* DATA ITEM LENGTH           */ 13500006
               2 DSCHRVAL CHAR(  5);   /* DATA ITEM VALUE            */ 13600006
                                                                        13700006
         /* 'TO CCHHR OF DATASETRANGE'PARAMETER                      */ 13800006
         DCL 1 DSCHH BASED(FDTPTR( 23)) BDY(HWORD),                     13900006
               2 DSCHHLEN FIXED(8),    /* DATA ITEM LENGTH           */ 14000006
               2 DSCHHVAL CHAR(  5);   /* DATA ITEM VALUE            */ 14100006
                                                                        14200006
         /* 'VOLSER REPAIRRANGE'PARAMETER                            */ 14300006
         DCL 1 VOLRR BASED(FDTPTR( 24)) BDY(HWORD),                     14400006
               2 VOLRRPLN FIXED(8),    /* PASSWORD LENGTH            */ 14500006
               2 VOLRRPAS CHAR(8),     /* PASSWORD VALUE             */ 14600006
               2 VOLRRPOS FIXED(8),    /* ASTERISK POSITION          */ 14700006
               2 VOLRRFLG BIT(8),      /* DATA SET FLAGS             */ 14800006
                 3 VOLRRFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 14900006
               2 VOLRRMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 15000006
               2 VOLRRMEM CHAR(8),     /* MEMBER NAME                */ 15100006
               2 VOLRRLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 15200006
               2 VOLRRVAL CHAR(44);    /* CATALOGUED NAME            */ 15300006
                                                                        15400006
         /* 'FROM CCHHR REPAIRRANGE'PARAMETER                        */ 15500006
         DCL 1 RRCHR BASED(FDTPTR( 25)) BDY(HWORD),                     15600006
               2 RRCHRLEN FIXED(8),    /* DATA ITEM LENGTH           */ 15700006
               2 RRCHRVAL CHAR(  5);   /* DATA ITEM VALUE            */ 15800006
                                                                        15900006
         /* 'TO CCHHR REPAIRRANGE'PARAMETER                          */ 16000006
         DCL 1 RRCHH BASED(FDTPTR( 26)) BDY(HWORD),                     16100006
               2 RRCHHLEN FIXED(8),    /* DATA ITEM LENGTH           */ 16200006
               2 RRCHHVAL CHAR(  5);   /* DATA ITEM VALUE            */ 16300006
                                                                        16400006
         /* 'KEYLENGTH OF LENGTH'PARAMETER                           */ 16500006
         DCL DKEYLPTR(110) PTR(31) BASED(FDTPTR( 28));                  16600006
         DCL 1 DKEYL BASED BDY(WORD),                                   16700006
               2 DKEYLVAL FIXED(31);   /* NUMERIC VALUE              */ 16800006
                                                                        16900006
         /* 'DATALENGTH OF LENGTH'PARAMETER                          */ 17000006
         DCL DATALPTR(110) PTR(31) BASED(FDTPTR( 29));                  17100006
         DCL 1 DATAL BASED BDY(WORD),                                   17200006
               2 DATALVAL FIXED(31);   /* NUMERIC VALUE              */ 17300006
                                                                        17400006
         /* 'VTOCHEADER PARAMETER'PARAMETER                          */ 17500006
         DCL DPVTC    BASED(FDTPTR( 30));                               17600006
                                                                        17700006
         /* 'VTOCHEADER'PARAMETER                                    */ 17800006
         DCL 1 DVTCS BASED(FDTPTR( 31)) BDY(HWORD),                     17900006
               2 DVTCSPLN FIXED(8),    /* PASSWORD LENGTH            */ 18000006
               2 DVTCSPAS CHAR(8),     /* PASSWORD VALUE             */ 18100006
               2 DVTCSPOS FIXED(8),    /* ASTERISK POSITION          */ 18200006
               2 DVTCSFLG BIT(8),      /* DATA SET FLAGS             */ 18300006
                 3 DVTCSFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 18400006
               2 DVTCSMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 18500006
               2 DVTCSMEM CHAR(8),     /* MEMBER NAME                */ 18600006
               2 DVTCSLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 18700006
               2 DVTCSVAL CHAR(44);    /* CATALOGUED NAME            */ 18800006
                                                                        18900006
         /* 'COPY'PARAMETER                                          */ 19000006
         DCL  COPY    BASED(FDTPTR( 35));                               19100006
                                                                        19200006
         /* 'INFILE'PARAMETER/PASSWORD                               */ 19300006
         DCL 1 CINFL BASED(FDTPTR( 36)) BDY(HWORD),                     19400006
               2 CINFLPLN FIXED(8),    /* PASSWORD LENGTH            */ 19500006
               2 CINFLPAS CHAR(8),     /* PASSWORD VALUE             */ 19600006
               2 CINFLLEN FIXED(8),    /* DATA ITEM LENGTH           */ 19700006
               2 CINFLVAL CHAR(  8);   /* DATA ITEM VALUE            */ 19800006
                                                                        19900006
         /* 'INDATASET'PARAMETER/PASSWORD                            */ 20000006
         DCL 1 CINDS BASED(FDTPTR( 37)) BDY(HWORD),                     20100006
               2 CINDSPLN FIXED(8),    /* PASSWORD LENGTH            */ 20200006
               2 CINDSPAS CHAR(8),     /* PASSWORD VALUE             */ 20300006
               2 CINDSPOS FIXED(8),    /* ASTERISK POSITION          */ 20400006
               2 CINDSFLG BIT(8),      /* DATA SET FLAGS             */ 20500006
                 3 CINDSFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 20600006
               2 CINDSMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 20700006
               2 CINDSMEM CHAR(8),     /* MEMBER NAME                */ 20800006
               2 CINDSLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 20900006
               2 CINDSVAL CHAR(44);    /* CATALOGUED NAME            */ 21000006
                                                                        21100006
         /* 'STAGINGRANGE  'PARAMETER                                */ 21200006
         DCL CSRNG    BASED(FDTPTR( 38));                               21300006
                                                                        21400006
         /* 'DATASETRANGE'PARAMETER                                  */ 21500006
         DCL CDSRG    BASED(FDTPTR( 39));                               21600006
                                                                        21700006
         /* 'LENGTH FOR COPY'PARAMETER                               */ 21800006
         DCL  CLEN    BASED(FDTPTR( 40));                               21900006
         DCL  CLENCNT FIXED(31) BASED(ADDR(FDTPTR( 40)));               22000006
                                                                        22100006
         /* 'OUTFILE'PARAMETER/PASSWORD                              */ 22200006
         DCL 1 COFIL BASED(FDTPTR( 41)) BDY(HWORD),                     22300006
               2 COFILPLN FIXED(8),    /* PASSWORD LENGTH            */ 22400006
               2 COFILPAS CHAR(8),     /* PASSWORD VALUE             */ 22500006
               2 COFILLEN FIXED(8),    /* DATA ITEM LENGTH           */ 22600006
               2 COFILVAL CHAR(  8);   /* DATA ITEM VALUE            */ 22700006
                                                                        22800006
         /* 'CATALOG'PARAMETER/PASSWORD                              */ 22900006
         DCL 1 CCATL BASED(FDTPTR( 42)) BDY(HWORD),                     23000006
               2 CCATLPLN FIXED(8),    /* PASSWORD LENGTH            */ 23100006
               2 CCATLPAS CHAR(8),     /* PASSWORD VALUE             */ 23200006
               2 CCATLPOS FIXED(8),    /* ASTERISK POSITION          */ 23300006
               2 CCATLFLG BIT(8),      /* DATA SET FLAGS             */ 23400006
                 3 CCATLFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 23500006
               2 CCATLMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 23600006
               2 CCATLMEM CHAR(8),     /* MEMBER NAME                */ 23700006
               2 CCATLLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 23800006
               2 CCATLVAL CHAR(44);    /* CATALOGUED NAME            */ 23900006
                                                                        24000006
         /* 'VOLSER DATASETRANGE'PARAMETER                           */ 24100006
         DCL 1 CVOLD BASED(FDTPTR( 43)) BDY(HWORD),                     24200006
               2 CVOLDPLN FIXED(8),    /* PASSWORD LENGTH            */ 24300006
               2 CVOLDPAS CHAR(8),     /* PASSWORD VALUE             */ 24400006
               2 CVOLDPOS FIXED(8),    /* ASTERISK POSITION          */ 24500006
               2 CVOLDFLG BIT(8),      /* DATA SET FLAGS             */ 24600006
                 3 CVOLDFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 24700006
               2 CVOLDMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 24800006
               2 CVOLDMEM CHAR(8),     /* MEMBER NAME                */ 24900006
               2 CVOLDLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 25000006
               2 CVOLDVAL CHAR(44);    /* CATALOGUED NAME            */ 25100006
                                                                        25200006
         /* 'FROM CCHHR OF DATASET RANGE'PARAMETER                   */ 25300006
         DCL 1 CDCHR BASED(FDTPTR( 44)) BDY(HWORD),                     25400006
               2 CDCHRLEN FIXED(8),    /* DATA ITEM LENGTH           */ 25500006
               2 CDCHRVAL CHAR(  5);   /* DATA ITEM VALUE            */ 25600006
                                                                        25700006
         /* 'TO HHR   DATASET RANGE'PARAMETER                        */ 25800006
         DCL 1 CDHHR BASED(FDTPTR( 45)) BDY(HWORD),                     25900006
               2 CDHHRLEN FIXED(8),    /* DATA ITEM LENGTH           */ 26000006
               2 CDHHRVAL CHAR(  3);   /* DATA ITEM VALUE            */ 26100006
                                                                        26200006
         /* 'VOLSER STAGINGRANGE'PARAMETER                           */ 26300006
         DCL 1 CVOLS BASED(FDTPTR( 46)) BDY(HWORD),                     26400006
               2 CVOLSPLN FIXED(8),    /* PASSWORD LENGTH            */ 26500006
               2 CVOLSPAS CHAR(8),     /* PASSWORD VALUE             */ 26600006
               2 CVOLSPOS FIXED(8),    /* ASTERISK POSITION          */ 26700006
               2 CVOLSFLG BIT(8),      /* DATA SET FLAGS             */ 26800006
                 3 CVOLSFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 26900006
               2 CVOLSMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 27000006
               2 CVOLSMEM CHAR(8),     /* MEMBER NAME                */ 27100006
               2 CVOLSLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 27200006
               2 CVOLSVAL CHAR(44);    /* CATALOGUED NAME            */ 27300006
                                                                        27400006
         /* 'CCHHR STAGINGRANGE'PARAMETER                            */ 27500006
         DCL 1 CCCHR BASED(FDTPTR( 47)) BDY(HWORD),                     27600006
               2 CCCHRLEN FIXED(8),    /* DATA ITEM LENGTH           */ 27700006
               2 CCCHRVAL CHAR(  5);   /* DATA ITEM VALUE            */ 27800006
                                                                        27900006
         /* 'TO RECORD STAGINGRANGE'PARAMETER                        */ 28000006
         DCL 1 CRECR BASED(FDTPTR( 48)) BDY(HWORD),                     28100006
               2 CRECRLEN FIXED(8),    /* DATA ITEM LENGTH           */ 28200006
               2 CRECRVAL CHAR(  1);   /* DATA ITEM VALUE            */ 28300006
                                                                        28400006
         /* ' KEYLENGTH OF LENGTH'PARAMETER                          */ 28500006
         DCL CKEYLPTR(110) PTR(31) BASED(FDTPTR( 50));                  28600006
         DCL 1 CKEYL BASED BDY(WORD),                                   28700006
               2 CKEYLVAL FIXED(31);   /* NUMERIC VALUE              */ 28800006
                                                                        28900006
         /* 'DATALENGTH OF LENGTH'PARAMETER                          */ 29000006
         DCL CDATLPTR(110) PTR(31) BASED(FDTPTR( 51));                  29100006
         DCL 1 CDATL BASED BDY(WORD),                                   29200006
               2 CDATLVAL FIXED(31);   /* NUMERIC VALUE              */ 29300006
                                                                        29400006
         /* 'VTOCHEADER COPY'PARAMETER                               */ 29500006
         DCL CVTOC    BASED(FDTPTR( 52));                               29600006
                                                                        29700006
         /* 'VTOCHEADER'PARAMETER                                    */ 29800006
         DCL 1 CVTCS BASED(FDTPTR( 53)) BDY(HWORD),                     29900006
               2 CVTCSPLN FIXED(8),    /* PASSWORD LENGTH            */ 30000006
               2 CVTCSPAS CHAR(8),     /* PASSWORD VALUE             */ 30100006
               2 CVTCSPOS FIXED(8),    /* ASTERISK POSITION          */ 30200006
               2 CVTCSFLG BIT(8),      /* DATA SET FLAGS             */ 30300006
                 3 CVTCSFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 30400006
               2 CVTCSMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 30500006
               2 CVTCSMEM CHAR(8),     /* MEMBER NAME                */ 30600006
               2 CVTCSLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 30700006
               2 CVTCSVAL CHAR(44);    /* CATALOGUED NAME            */ 30800006
                                                                        30900006
         /* 'DEBLOCK'PARAMETER                                       */ 31000006
         DCL DBLOC    BASED(FDTPTR( 70));                               31100006
                                                                        31200006
         /* 'FILE'PARAMETER/PASSWORD                                 */ 31300006
         DCL 1 DBFIL BASED(FDTPTR( 71)) BDY(HWORD),                     31400006
               2 DBFILPLN FIXED(8),    /* PASSWORD LENGTH            */ 31500006
               2 DBFILPAS CHAR(8),     /* PASSWORD VALUE             */ 31600006
               2 DBFILLEN FIXED(8),    /* DATA ITEM LENGTH           */ 31700006
               2 DBFILVAL CHAR(  8);   /* DATA ITEM VALUE            */ 31800006
                                                                        31900006
         /* 'DATASET'PARAMETER/PASSWORD                              */ 32000006
         DCL 1  DBDS BASED(FDTPTR( 72)) BDY(HWORD),                     32100006
               2  DBDSPLN FIXED(8),    /* PASSWORD LENGTH            */ 32200006
               2  DBDSPAS CHAR(8),     /* PASSWORD VALUE             */ 32300006
               2  DBDSPOS FIXED(8),    /* ASTERISK POSITION          */ 32400006
               2  DBDSFLG BIT(8),      /* DATA SET FLAGS             */ 32500006
                 3  DBDSFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 32600006
               2  DBDSMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 32700006
               2  DBDSMEM CHAR(8),     /* MEMBER NAME                */ 32800006
               2  DBDSLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 32900006
               2  DBDSVAL CHAR(44);    /* CATALOGUED NAME            */ 33000006
                                                                        33100006
         /* 'RANGE  'PARAMETER                                       */ 33200006
         DCL DBRNG    BASED(FDTPTR( 73));                               33300006
                                                                        33400006
         /* 'LENGTH'PARAMETER                                        */ 33500006
         DCL DBLST    BASED(FDTPTR( 74));                               33600006
         DCL DBLSTCNT FIXED(31) BASED(ADDR(FDTPTR( 74)));               33700006
                                                                        33800006
         /* 'VOLSER RANGE'PARAMETER                                  */ 33900006
         DCL 1 DBVOL BASED(FDTPTR( 75)) BDY(HWORD),                     34000006
               2 DBVOLPLN FIXED(8),    /* PASSWORD LENGTH            */ 34100006
               2 DBVOLPAS CHAR(8),     /* PASSWORD VALUE             */ 34200006
               2 DBVOLPOS FIXED(8),    /* ASTERISK POSITION          */ 34300006
               2 DBVOLFLG BIT(8),      /* DATA SET FLAGS             */ 34400006
                 3 DBVOLFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 34500006
               2 DBVOLMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 34600006
               2 DBVOLMEM CHAR(8),     /* MEMBER NAME                */ 34700006
               2 DBVOLLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 34800006
               2 DBVOLVAL CHAR(44);    /* CATALOGUED NAME            */ 34900006
                                                                        35000006
         /* 'FROM CCHH OF RANGE'PARAMETER                            */ 35100006
         DCL 1 DBCCH BASED(FDTPTR( 76)) BDY(HWORD),                     35200006
               2 DBCCHLEN FIXED(8),    /* DATA ITEM LENGTH           */ 35300006
               2 DBCCHVAL CHAR(  4);   /* DATA ITEM VALUE            */ 35400006
                                                                        35500006
         /* 'TO HH OF RANGE'PARAMETER                                */ 35600006
         DCL 1 DBHHH BASED(FDTPTR( 77)) BDY(HWORD),                     35700006
               2 DBHHHLEN FIXED(8),    /* DATA ITEM LENGTH           */ 35800006
               2 DBHHHVAL CHAR(  2);   /* DATA ITEM VALUE            */ 35900006
                                                                        36000006
         /* 'LENGTH OF KEY FOR LENGTH'PARAMETER                      */ 36100006
         DCL DBKEYPTR(110) PTR(31) BASED(FDTPTR( 79));                  36200006
         DCL 1 DBKEY BASED BDY(WORD),                                   36300006
               2 DBKEYVAL FIXED(31);   /* NUMERIC VALUE              */ 36400006
                                                                        36500006
         /* 'DATALENGTH OF LENGTH'PARAMETER                          */ 36600006
         DCL DBDATPTR(110) PTR(31) BASED(FDTPTR( 80));                  36700006
         DCL 1 DBDAT BASED BDY(WORD),                                   36800006
               2 DBDATVAL FIXED(31);   /* NUMERIC VALUE              */ 36900006
                                                                        37000006
         /* 'MODIFY'PARAMETER                                        */ 37100006
         DCL MODIF    BASED(FDTPTR( 90));                               37200006
                                                                        37300006
         /* 'NEWDATA'PARAMETER                                       */ 37400006
         DCL MNDAT    BASED(FDTPTR( 91));                               37500006
                                                                        37600006
         /* 'NEWKEY'PARAMETER                                        */ 37700006
         DCL MNKEY    BASED(FDTPTR( 92));                               37800006
                                                                        37900006
         /* 'NEWCOUNT'PARAMETER                                      */ 38000006
         DCL 1 MNCNT BASED(FDTPTR( 93)) BDY(HWORD),                     38100006
               2 MNCNTLEN FIXED(8),    /* DATA ITEM LENGTH           */ 38200006
               2 MNCNTVAL CHAR(  8);   /* DATA ITEM VALUE            */ 38300006
                                                                        38400006
         /* 'INFILE'PARAMETER/PASSWORD                               */ 38500006
         DCL 1 MINFL BASED(FDTPTR( 94)) BDY(HWORD),                     38600006
               2 MINFLPLN FIXED(8),    /* PASSWORD LENGTH            */ 38700006
               2 MINFLPAS CHAR(8),     /* PASSWORD VALUE             */ 38800006
               2 MINFLLEN FIXED(8),    /* DATA ITEM LENGTH           */ 38900006
               2 MINFLVAL CHAR(  8);   /* DATA ITEM VALUE            */ 39000006
                                                                        39100006
         /* 'INDATASET'PARAMETER/PASSWORD                            */ 39200006
         DCL 1 MINDS BASED(FDTPTR( 95)) BDY(HWORD),                     39300006
               2 MINDSPLN FIXED(8),    /* PASSWORD LENGTH            */ 39400006
               2 MINDSPAS CHAR(8),     /* PASSWORD VALUE             */ 39500006
               2 MINDSPOS FIXED(8),    /* ASTERISK POSITION          */ 39600006
               2 MINDSFLG BIT(8),      /* DATA SET FLAGS             */ 39700006
                 3 MINDSFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 39800006
               2 MINDSMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 39900006
               2 MINDSMEM CHAR(8),     /* MEMBER NAME                */ 40000006
               2 MINDSLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 40100006
               2 MINDSVAL CHAR(44);    /* CATALOGUED NAME            */ 40200006
                                                                        40300006
         /* 'INREPAIRKEY'PARAMETER                                   */ 40400006
         DCL  MIRK    BASED(FDTPTR( 96));                               40500006
                                                                        40600006
         /* 'INDATASETADDRESS'PARAMETER                              */ 40700006
         DCL MIDSA    BASED(FDTPTR( 97));                               40800006
                                                                        40900006
         /* 'INREPAIRRANGE'PARAMETER                                 */ 41000006
         DCL MIRNG    BASED(FDTPTR( 98));                               41100006
                                                                        41200006
         /* 'OUTREPAIRKEY'PARAMETER/PASSWORD                         */ 41300006
         DCL  MORK    BASED(FDTPTR(102));                               41400006
                                                                        41500006
         /* 'OUTDATASETADDRESS  'PARAMETER                           */ 41600006
         DCL MODSA    BASED(FDTPTR(103));                               41700006
                                                                        41800006
         /* 'OUTFILE'PARAMETER/PASSWORD                              */ 41900006
         DCL 1 MOUTF BASED(FDTPTR(104)) BDY(HWORD),                     42000006
               2 MOUTFPLN FIXED(8),    /* PASSWORD LENGTH            */ 42100006
               2 MOUTFPAS CHAR(8),     /* PASSWORD VALUE             */ 42200006
               2 MOUTFLEN FIXED(8),    /* DATA ITEM LENGTH           */ 42300006
               2 MOUTFVAL CHAR(  8);   /* DATA ITEM VALUE            */ 42400006
                                                                        42500006
         /* 'OUTDATASET'PARAMETER/PASSWORD                           */ 42600006
         DCL 1  MODS BASED(FDTPTR(105)) BDY(HWORD),                     42700006
               2  MODSPLN FIXED(8),    /* PASSWORD LENGTH            */ 42800006
               2  MODSPAS CHAR(8),     /* PASSWORD VALUE             */ 42900006
               2  MODSPOS FIXED(8),    /* ASTERISK POSITION          */ 43000006
               2  MODSFLG BIT(8),      /* DATA SET FLAGS             */ 43100006
                 3  MODSFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 43200006
               2  MODSMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 43300006
               2  MODSMEM CHAR(8),     /* MEMBER NAME                */ 43400006
               2  MODSLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 43500006
               2  MODSVAL CHAR(44);    /* CATALOGUED NAME            */ 43600006
                                                                        43700006
         /* 'OVERFLOW'PARAMETER/PASSWORD                             */ 43800006
         DCL MOVFL    BASED(FDTPTR(106));                               43900006
                                                                        44000006
         /* 'VTOCHEADERADDRESS'PARAMETER                             */ 44100006
         DCL MVTOC    BASED(FDTPTR(107));                               44200006
                                                                        44300006
         /* 'VTOCHEADERADDRESS VOLSER'PARAMETER                      */ 44400006
         DCL 1 MVTCS BASED(FDTPTR(108)) BDY(HWORD),                     44500006
               2 MVTCSPLN FIXED(8),    /* PASSWORD LENGTH            */ 44600006
               2 MVTCSPAS CHAR(8),     /* PASSWORD VALUE             */ 44700006
               2 MVTCSPOS FIXED(8),    /* ASTERISK POSITION          */ 44800006
               2 MVTCSFLG BIT(8),      /* DATA SET FLAGS             */ 44900006
                 3 MVTCSFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 45000006
               2 MVTCSMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 45100006
               2 MVTCSMEM CHAR(8),     /* MEMBER NAME                */ 45200006
               2 MVTCSLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 45300006
               2 MVTCSVAL CHAR(44);    /* CATALOGUED NAME            */ 45400006
                                                                        45500006
         /* 'VTOCHEADERADDRESS CCHHR'PARAMETER                       */ 45600006
         DCL 1 MVTCR BASED(FDTPTR(109)) BDY(HWORD),                     45700006
               2 MVTCRLEN FIXED(8),    /* DATA ITEM LENGTH           */ 45800006
               2 MVTCRVAL CHAR(  5);   /* DATA ITEM VALUE            */ 45900006
                                                                        46000006
         /* 'VOLSER INREPAIRKEY'PARAMETER                            */ 46100006
         DCL 1 MIRVO BASED(FDTPTR(110)) BDY(HWORD),                     46200006
               2 MIRVOPLN FIXED(8),    /* PASSWORD LENGTH            */ 46300006
               2 MIRVOPAS CHAR(8),     /* PASSWORD VALUE             */ 46400006
               2 MIRVOPOS FIXED(8),    /* ASTERISK POSITION          */ 46500006
               2 MIRVOFLG BIT(8),      /* DATA SET FLAGS             */ 46600006
                 3 MIRVOFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 46700006
               2 MIRVOMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 46800006
               2 MIRVOMEM CHAR(8),     /* MEMBER NAME                */ 46900006
               2 MIRVOLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 47000006
               2 MIRVOVAL CHAR(44);    /* CATALOGUED NAME            */ 47100006
                                                                        47200006
         /* 'CCHHR INREPAIRKEY'PARAMETER                             */ 47300006
         DCL 1 MIRCH BASED(FDTPTR(111)) BDY(HWORD),                     47400006
               2 MIRCHLEN FIXED(8),    /* DATA ITEM LENGTH           */ 47500006
               2 MIRCHVAL CHAR(  5);   /* DATA ITEM VALUE            */ 47600006
                                                                        47700006
         /* 'VOLSER INDATASETADDRESS'PARAMETER                       */ 47800006
         DCL 1 MIDVO BASED(FDTPTR(112)) BDY(HWORD),                     47900006
               2 MIDVOPLN FIXED(8),    /* PASSWORD LENGTH            */ 48000006
               2 MIDVOPAS CHAR(8),     /* PASSWORD VALUE             */ 48100006
               2 MIDVOPOS FIXED(8),    /* ASTERISK POSITION          */ 48200006
               2 MIDVOFLG BIT(8),      /* DATA SET FLAGS             */ 48300006
                 3 MIDVOFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 48400006
               2 MIDVOMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 48500006
               2 MIDVOMEM CHAR(8),     /* MEMBER NAME                */ 48600006
               2 MIDVOLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 48700006
               2 MIDVOVAL CHAR(44);    /* CATALOGUED NAME            */ 48800006
                                                                        48900006
         /* 'CCHHR INDATASETADDRESS'PARAMETER                        */ 49000006
         DCL 1 MIDCH BASED(FDTPTR(113)) BDY(HWORD),                     49100006
               2 MIDCHLEN FIXED(8),    /* DATA ITEM LENGTH           */ 49200006
               2 MIDCHVAL CHAR(  5);   /* DATA ITEM VALUE            */ 49300006
                                                                        49400006
         /* 'VOL SER INREPAIRRANGE'PARAMETER                         */ 49500006
         DCL 1 MRRVO BASED(FDTPTR(114)) BDY(HWORD),                     49600006
               2 MRRVOPLN FIXED(8),    /* PASSWORD LENGTH            */ 49700006
               2 MRRVOPAS CHAR(8),     /* PASSWORD VALUE             */ 49800006
               2 MRRVOPOS FIXED(8),    /* ASTERISK POSITION          */ 49900006
               2 MRRVOFLG BIT(8),      /* DATA SET FLAGS             */ 50000006
                 3 MRRVOFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 50100006
               2 MRRVOMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 50200006
               2 MRRVOMEM CHAR(8),     /* MEMBER NAME                */ 50300006
               2 MRRVOLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 50400006
               2 MRRVOVAL CHAR(44);    /* CATALOGUED NAME            */ 50500006
                                                                        50600006
         /* 'FROM CCHH  IN RANGE'PARAMETER                           */ 50700006
         DCL 1 MRRCH BASED(FDTPTR(115)) BDY(HWORD),                     50800006
               2 MRRCHLEN FIXED(8),    /* DATA ITEM LENGTH           */ 50900006
               2 MRRCHVAL CHAR(  4);   /* DATA ITEM VALUE            */ 51000006
                                                                        51100006
         /* 'TO CCHHR IN RANGE'PARAMETER                             */ 51200006
         DCL 1 MRRHH BASED(FDTPTR(116)) BDY(HWORD),                     51300006
               2 MRRHHLEN FIXED(8),    /* DATA ITEM LENGTH           */ 51400006
               2 MRRHHVAL CHAR(  2);   /* DATA ITEM VALUE            */ 51500006
                                                                        51600006
         /* 'OFFSET OF NEWDATA'PARAMETER                             */ 51700006
         DCL 1 MNDOF BASED(FDTPTR(117)) BDY(WORD),                      51800006
               2 MNDOFVAL FIXED(31);   /* NUMERIC VALUE              */ 51900006
                                                                        52000006
         /* 'DATA STRING'PARAMETER                                   */ 52100006
         DCL 1 MNDST BASED(FDTPTR(118)) BDY(HWORD),                     52200006
               2 MNDSTLEN FIXED(8),    /* DATA ITEM LENGTH           */ 52300006
               2 MNDSTVAL CHAR(255);   /* DATA ITEM VALUE            */ 52400006
                                                                        52500006
         /* 'OFFSET OF NEWKEY'PARAMETER                              */ 52600006
         DCL 1 MNKOF BASED(FDTPTR(119)) BDY(WORD),                      52700006
               2 MNKOFVAL FIXED(31);   /* NUMERIC VALUE              */ 52800006
                                                                        52900006
         /* 'KEY STRING'PARAMETER                                    */ 53000006
         DCL 1 MNKST BASED(FDTPTR(120)) BDY(HWORD),                     53100006
               2 MNKSTLEN FIXED(8),    /* DATA ITEM LENGTH           */ 53200006
               2 MNKSTVAL CHAR(255);   /* DATA ITEM VALUE            */ 53300006
                                                                        53400006
         /* 'VOLSER OUTREPAIRKEY'PARAMETER                           */ 53500006
         DCL 1 MORVO BASED(FDTPTR(121)) BDY(HWORD),                     53600006
               2 MORVOPLN FIXED(8),    /* PASSWORD LENGTH            */ 53700006
               2 MORVOPAS CHAR(8),     /* PASSWORD VALUE             */ 53800006
               2 MORVOPOS FIXED(8),    /* ASTERISK POSITION          */ 53900006
               2 MORVOFLG BIT(8),      /* DATA SET FLAGS             */ 54000006
                 3 MORVOFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 54100006
               2 MORVOMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 54200006
               2 MORVOMEM CHAR(8),     /* MEMBER NAME                */ 54300006
               2 MORVOLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 54400006
               2 MORVOVAL CHAR(44);    /* CATALOGUED NAME            */ 54500006
                                                                        54600006
         /* 'CCHHR INDEX OF OUTREPAIRKEY'PARAMETER                   */ 54700006
         DCL 1 MORCH BASED(FDTPTR(122)) BDY(HWORD),                     54800006
               2 MORCHLEN FIXED(8),    /* DATA ITEM LENGTH           */ 54900006
               2 MORCHVAL CHAR(  5);   /* DATA ITEM VALUE            */ 55000006
                                                                        55100006
         /* 'VOLSER OUTDATASETADDRESS'PARAMETER                      */ 55200006
         DCL 1 MODVO BASED(FDTPTR(123)) BDY(HWORD),                     55300006
               2 MODVOPLN FIXED(8),    /* PASSWORD LENGTH            */ 55400006
               2 MODVOPAS CHAR(8),     /* PASSWORD VALUE             */ 55500006
               2 MODVOPOS FIXED(8),    /* ASTERISK POSITION          */ 55600006
               2 MODVOFLG BIT(8),      /* DATA SET FLAGS             */ 55700006
                 3 MODVOFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 55800006
               2 MODVOMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 55900006
               2 MODVOMEM CHAR(8),     /* MEMBER NAME                */ 56000006
               2 MODVOLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 56100006
               2 MODVOVAL CHAR(44);    /* CATALOGUED NAME            */ 56200006
                                                                        56300006
         /* 'CCHHR OUTDATASETADDRESS'PARAMETER                       */ 56400006
         DCL 1 MODCH BASED(FDTPTR(124)) BDY(HWORD),                     56500006
               2 MODCHLEN FIXED(8),    /* DATA ITEM LENGTH           */ 56600006
               2 MODCHVAL CHAR(  5);   /* DATA ITEM VALUE            */ 56700006
./  ADD  SSI=42550401,NAME=IDCCSRL
         /************************************************************/ 02000000
         /*                                                  @Y30LB32*/ 04000000
         /*  'REPLACEC' FUNCTION DATA TABLE DECLARATIONS     @Y30LB32*/ 06000000
         /*                                                  @Y30LB32*/ 08000000
         /************************************************************/ 10000000
 %IF BASEFDT = 'YES'                                       /*@Y30LB32*/ 12000000
   %THEN                                                   /*@Y30LB32*/ 14000000
     %GO TO BASEFDT1;                                      /*@Y30LB32*/ 16000000
                                                           /*@Y30LB32*/ 18000000
         DCL 1 FDTTBL      BDY(WORD),                      /*@Y30LB32*/ 20000000
 %GO TO BASEFDT2;                                          /*@Y30LB32*/ 22000000
 %BASEFDT1:;                                               /*@Y30LB32*/ 24000000
                                                           /*@Y30LB32*/ 26000000
         DCL 1 FDTTBL      BASED   BDY(WORD),              /*@Y30LB32*/ 28000000
 %BASEFDT2:;                                               /*@Y30LB32*/ 30000000
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME  @Y30LB32*/ 32000000
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA        @Y30LB32*/ 34000000
                                       /* POINTERS           @Y30LB32*/ 34050000
                                                           /*@Y30LB32*/ 36000000
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS           @Y30LB32*/ 38000000
                                                           /*@Y30LB32*/ 40000000
         /* VOLUME SERIAL NUMBER                             @Y30LB32*/ 42000000
         DCL 1   VOL BASED(FDTPTR(  1)) BDY(HWORD),        /*@Y30LB32*/ 44000000
               2   VOLLEN FIXED(8),    /* DATA ITEM LENGTH   @Y30LB32*/ 46000000
               2   VOLVAL CHAR(  6);   /* DATA ITEM VALUE    @Y30LB32*/ 48000000
                                                           /*@Y30LB32*/ 50000000
         /* SEQUENCE NUMBER                                  @Y30LB32*/ 52000000
         DCL 1   SEQ BASED(FDTPTR(  2)) BDY(WORD),         /*@Y30LB32*/ 54000000
               2   SEQVAL FIXED(31);   /* NUMERIC VALUE      @Y30LB32*/ 56000000
                                                           /*@Y30LB32*/ 58000000
         /* CARTRIDGE SERIAL NUMBER                          @Y30LB32*/ 60000000
         DCL 1  CART BASED(FDTPTR(  3)) BDY(HWORD),        /*@Y30LB32*/ 62000000
               2  CARTLEN FIXED(8),    /* DATA ITEM LENGTH   @Y30LB32*/ 64000000
               2  CARTVAL CHAR( 12);   /* DATA ITEM VALUE    @Y30LB32*/ 66000000
./  ADD  SSI=61680200,NAME=IDCCSRR
         /************************************************************/ 02000003
         /*                                                          */ 04000003
         /*  'REMOVEVR' FUNCTION DATA TABLE DECLARATIONS             */ 06000003
         /*                                                          */ 08000003
         /************************************************************/ 10000003
 %IF BASEFDT = 'YES'                                                    12000003
   %THEN                                                                14000003
     %GO TO BASEFDT1;                                                   16000003
                                                                        18000003
         DCL 1 FDTTBL      BDY(WORD),                                   20000003
 %GO TO BASEFDT2;                                                       22000003
 %BASEFDT1:;                                                            24000003
                                                                        26000003
         DCL 1 FDTTBL      BASED   BDY(WORD),                           28000003
 %BASEFDT2:;                                                            30000003
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 32000003
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 34000003
                                                                        36000003
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 38000003
                                                                        40000003
         /* VOLUME SERIAL NUMBERS                                    */ 42000003
         DCL 1   VOL BASED(FDTPTR(  1)) BDY(HWORD),                     44000003
               2   VOLLEN FIXED(8),    /* DATA ITEM LENGTH           */ 46000003
               2   VOLVAL CHAR(  6);   /* DATA ITEM VALUE            */ 48000003
                                                                        50000003
         /* 'ALL' PARAMETER                                          */ 52000003
         DCL  ALLC    BASED(FDTPTR(  2));                               54000003
                                                                        56000003
         /* 'COPYDATE' PARAMETER                                     */ 58000003
         DCL CDATE    BASED(FDTPTR(  3));                               60000003
                                                                        62000003
         /* DATE COPY CREATED                                        */ 64000003
         DCL 1  DATE BASED(FDTPTR(  4)) BDY(WORD),                      66000003
               2  DATEVAL FIXED(31);   /* NUMERIC VALUE              */ 68000003
                                                                        70000003
         /* 'COPYDATE' SEQUENCE NUMBER                               */ 72000003
         DCL 1   SEQ BASED(FDTPTR(  5)) BDY(WORD),                      74000003
               2   SEQVAL FIXED(31);   /* NUMERIC VALUE              */ 76000003
                                                                        78000003
         /* 'BASEPLACEHOLDER' PARAMETER                              */ 80000003
         DCL  BHLD    BASED(FDTPTR(  6));                               82000003
                                                                        84000003
         /* 'COPYPLACEHOLDER' PARAMETER                              */ 86000003
         DCL  CHLD    BASED(FDTPTR(  7));                               88000003
./  ADD  SSI=42540376,NAME=IDCCSRV
         /************************************************************/ 01000000
         /*                                                          */ 02000000
         /*  'RECV    ' FUNCTION DATA TABLE DECLARATIONS             */ 03000000
         /*                                                          */ 04000000
         /************************************************************/ 05000000
 %IF BASEFDT = 'YES'                                                    06000000
   %THEN                                                                07000000
     %GO TO BASEFDT1;                                                   08000000
                                                                        09000000
         DCL 1 FDTTBL      BDY(WORD),                                   10000000
 %GO TO BASEFDT2;                                                       11000000
 %BASEFDT1:;                                                            12000000
                                                                        13000000
         DCL 1 FDTTBL      BASED   BDY(WORD),                           14000000
 %BASEFDT2:;                                                            15000000
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 16000000
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 17000000
                                                                        18000000
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 19000000
                                                                        20000000
         /* 'FROMVOLUME' SERIAL NO.                                  */ 21000000
         DCL 1  FVOL BASED(FDTPTR(  1)) BDY(HWORD),                     22000000
               2  FVOLLEN FIXED(8),    /* DATA ITEM LENGTH           */ 23000000
               2  FVOLVAL CHAR(  6);   /* DATA ITEM VALUE            */ 24000000
                                                                        25000000
         /* 'TOVOLUME' SERIAL NO.                                    */ 26000000
         DCL 1  TVOL BASED(FDTPTR(  2)) BDY(HWORD),                     27000000
               2  TVOLLEN FIXED(8),    /* DATA ITEM LENGTH           */ 28000000
               2  TVOLVAL CHAR(  6);   /* DATA ITEM VALUE            */ 29000000
                                                                        30000000
         /* 'COPYDATE' PARM                                          */ 31000000
         DCL CDATE    BASED(FDTPTR(  3));                               32000000
                                                                        33000000
         /* 'COPYDATE' JULIAN DATE VALUE                             */ 34000000
         DCL 1  DATE BASED(FDTPTR(  4)) BDY(WORD),                      35000000
               2  DATEVAL FIXED(31);   /* NUMERIC VALUE              */ 36000000
                                                                        37000000
         /* 'COPYDATE' SEQUENCE NO.                                  */ 38000000
         DCL 1  SEQ# BASED(FDTPTR(  5)) BDY(WORD),                      39000000
               2  SEQ#VAL FIXED(31);   /* NUMERIC VALUE              */ 40000000
                                                                        41000000
         /* 'LATESTBACKUP' PARM                                      */ 42000000
         DCL LBKUP    BASED(FDTPTR(  6));                               43000000
                                                                        44000000
         /* 'CATALOG' PARM                                           */ 45000000
         DCL   CAT    BASED(FDTPTR(  7));                               46000000
                                                                        47000000
         /* 'CATALOG' CATNAME/PASSWORD VALUE                         */ 48000000
         DCL 1 CATNM BASED(FDTPTR(  8)) BDY(HWORD),                     49000000
               2 CATNMPLN FIXED(8),    /* PASSWORD LENGTH            */ 50000000
               2 CATNMPAS CHAR(8),     /* PASSWORD VALUE             */ 51000000
               2 CATNMPOS FIXED(8),    /* ASTERISK POSITION          */ 52000000
               2 CATNMFLG BIT(8),      /* DATA SET FLAGS             */ 53000000
                 3 CATNMFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 54000000
               2 CATNMMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 55000000
               2 CATNMMEM CHAR(8),     /* MEMBER NAME                */ 56000000
               2 CATNMLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 57000000
               2 CATNMVAL CHAR(44);    /* CATALOGUED NAME            */ 58000000
                                                                        59000000
         /* 'CATALOG' DNAME VALUE                                    */ 60000000
         DCL 1 CATDN BASED(FDTPTR(  9)) BDY(HWORD),                     61000000
               2 CATDNLEN FIXED(8),    /* DATA ITEM LENGTH           */ 62000000
               2 CATDNVAL CHAR(  8);   /* DATA ITEM VALUE            */ 63000000
                                                                        64000000
         /* 'FILE' DNAME VALUE                                       */ 65000000
         DCL 1  FILE BASED(FDTPTR( 10)) BDY(HWORD),                     66000000
               2  FILELEN FIXED(8),    /* DATA ITEM LENGTH           */ 67000000
               2  FILEVAL CHAR(  8);   /* DATA ITEM VALUE            */ 68000000
                                                                        69000000
         /* 'PASSWORDFILES' PARM                                     */ 70000000
         DCL 1 PFILE BASED(FDTPTR( 11)) BDY(HWORD),                     71000000
               2 PFILECNT FIXED(15),   /* COUNT OF ITEMS IN LIST     */ 72000000
               2 *(255) BDY(HWORD),                                     73000000
                 3 PFILELEN FIXED(8),  /* DATA ITEM LENGTH           */ 74000000
                 3 PFILEVAL CHAR(  8); /* DATA ITEM VALUE            */ 75000000
./  ADD  SSI=53030106,NAME=IDCCSSD
         /************************************************************/ 00900000
         /*                                                          */ 01800000
         /*  'SCRDSET ' FUNCTION DATA TABLE DECLARATIONS             */ 02700000
         /*                                                          */ 03600000
         /************************************************************/ 04500000
 %IF BASEFDT = 'YES'                                                    05400000
   %THEN                                                                06300000
     %GO TO BASEFDT1;                                                   07200000
                                                                        08100000
         DCL 1 FDTTBL      BDY(WORD),                                   09000000
 %GO TO BASEFDT2;                                                       09900000
 %BASEFDT1:;                                                            10800000
                                                                        11700000
         DCL 1 FDTTBL      BASED   BDY(WORD),                           12600000
 %BASEFDT2:;                                                            13500000
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 14400000
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 15300000
                                                                        16200000
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 17100000
                                                                        18000000
         /* VOLUME(S) TO LIST                                        */ 18900000
         DCL 1   VOL BASED(FDTPTR(  1)) BDY(HWORD),                     19800000
               2   VOLCNT FIXED(15),   /* COUNT OF ITEMS IN LIST     */ 20700000
               2 *(255) BDY(HWORD),                                     21600000
                 3   VOLLEN FIXED(8),  /* DATA ITEM LENGTH           */ 22500000
                 3   VOLVAL CHAR(  6); /* DATA ITEM VALUE            */ 23400000
                                                                        24300000
         /* GROUP(S) TO LIST                                         */ 25200000
         DCL 1   GRP BASED(FDTPTR(  2)) BDY(HWORD),                     26100000
               2   GRPCNT FIXED(15),   /* COUNT OF ITEMS IN LIST     */ 27000000
               2 *(255) BDY(HWORD),                                     27900000
                 3   GRPLEN FIXED(8),  /* DATA ITEM LENGTH           */ 28800000
                 3   GRPVAL CHAR(  8); /* DATA ITEM VALUE            */ 29700000
                                                                        30600000
         /* OPTION TO LIST ALL VOLUMES                               */ 31500000
         DCL  AVOL    BASED(FDTPTR(  3));                               32400000
                                                                        33300000
         /* OPTION TO LIST ALL GROUPS                                */ 34200000
         DCL  AGRP    BASED(FDTPTR(  4));                               35100000
                                                                        36000000
         /* 'NON-GROUPED' LIMITING OPTION                            */ 36900000
         DCL NGRPD    BASED(FDTPTR(  5));                               37800000
                                                                        38700000
         /* 'GENERAL' LIMITING OPTION                                */ 39600000
         DCL GENER    BASED(FDTPTR( 16));                               40500000
                                                                        41400000
         /* LEVEL NAME OF DATA SETS TO LIST                          */ 42300000
         DCL 1 LEVEL BASED(FDTPTR(  6)) BDY(HWORD),                     43200000
               2 LEVELPLN FIXED(8),    /* PASSWORD LENGTH            */ 44100000
               2 LEVELPAS CHAR(8),     /* PASSWORD VALUE             */ 45000000
               2 LEVELPOS FIXED(8),    /* ASTERISK POSITION          */ 45900000
               2 LEVELFLG BIT(8),      /* DATA SET FLAGS             */ 46800000
                 3 LEVELFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 47700000
               2 LEVELMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 48600000
               2 LEVELMEM CHAR(8),     /* MEMBER NAME                */ 49500000
               2 LEVELLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 50400000
               2 LEVELVAL CHAR(44);    /* CATALOGUED NAME            */ 51300000
                                                                        52200000
         /* 'UNCATALOGED' LIMITING OPTION                            */ 53100000
         DCL UNCAT    BASED(FDTPTR(  7));                               54000000
                                                                        54900000
         /* 'EXPIRATION DATE' LIMITING OPTION                        */ 55800000
         DCL 1 EXPDT BASED(FDTPTR(  8)) BDY(WORD),                      56700000
               2 EXPDTVAL FIXED(31);   /* NUMERIC VALUE              */ 57600000
                                                                        58500000
         /* 'EXPIRATION DAYS' LIMITING OPTION                        */ 59400000
         DCL 1 EXPIR BASED(FDTPTR(  9)) BDY(WORD),                      60300000
               2 EXPIRVAL FIXED(31);   /* NUMERIC VALUE              */ 61200000
                                                                        62100000
         /* 'CREATION DATE' LIMITING OPTION                          */ 63000000
         DCL 1 CREDT BASED(FDTPTR( 10)) BDY(WORD),                      63900000
               2 CREDTVAL FIXED(31);   /* NUMERIC VALUE              */ 64800000
                                                                        65700000
         /* 'CREATION DAYS' LIMITING OPTION                          */ 66600000
         DCL 1 CREAT BASED(FDTPTR( 11)) BDY(WORD),                      67500000
               2 CREATVAL FIXED(31);   /* NUMERIC VALUE              */ 68400000
                                                                        69300000
         /* 'FILE' DDNAME                                            */ 70200000
         DCL 1  FILE BASED(FDTPTR( 12)) BDY(HWORD),                     71100000
               2  FILELEN FIXED(8),    /* DATA ITEM LENGTH           */ 72000000
               2  FILEVAL CHAR(  8);   /* DATA ITEM VALUE            */ 72900000
                                                                        73800000
         /* 'SYSTEMNAMES' OPTION                                     */ 74700000
         DCL  SYSN    BASED(FDTPTR( 13));                               75600000
                                                                        76500000
         /* OPTION TO PURGE ALL DATA SETS                            */ 77400000
         DCL PURGE    BASED(FDTPTR( 17));                               78300000
                                                                        79200000
         /* VOLUMES NOT TO BE SCRATCHED                              */ 80100000
         DCL 1 EXVOL BASED(FDTPTR( 14)) BDY(HWORD),                     81000000
               2 EXVOLCNT FIXED(15),   /* COUNT OF ITEMS IN LIST     */ 81900000
               2 *(255) BDY(HWORD),                                     82800000
                 3 EXVOLLEN FIXED(8),  /* DATA ITEM LENGTH           */ 83700000
                 3 EXVOLVAL CHAR(  6); /* DATA ITEM VALUE            */ 84600000
                                                                        85500000
         /* DATA SETS NOT TO BE SCRATCHED                            */ 86400000
         DCL 1  EXDS BASED(FDTPTR( 15)) BDY(HWORD),                     87300000
               2  EXDSCNT FIXED(15),   /* COUNT OF ITEMS IN LIST     */ 88200000
               2 *(255) BDY(HWORD),                                     89100000
                 3  EXDSPLN FIXED(8),  /* PASSWORD LENGTH            */ 90000000
                 3  EXDSPAS CHAR(8),   /* PASSWORD VALUE             */ 90900000
                 3  EXDSPOS FIXED(8),  /* ASTERISK POSITION          */ 91800000
                 3  EXDSFLG BIT(8),    /* DATA SET FLAGS             */ 92700000
                   4  EXDSFUQ BIT(1),  /* FLAG-ON IF UNQUALIFIED     */ 93600000
                 3  EXDSMLN FIXED(8),  /* MEMBER NAME LENGTH         */ 94500000
                 3  EXDSMEM CHAR(8),   /* MEMBER NAME                */ 95400000
                 3  EXDSLEN FIXED(8),  /* CATALOGUED NAME LENGTH     */ 96300000
                 3  EXDSVAL CHAR(44);  /* CATALOGUED NAME            */ 97200000
./  ADD  SSI=42540378,NAME=IDCCSSG
         /************************************************************/ 03000000
         /*                                                  @Y30LB36*/ 06000000
         /*  'SCRATCHG' FUNCTION DATA TABLE DECLARATIONS     @Y30LB36*/ 09000000
         /*                                                  @Y30LB36*/ 12000000
         /************************************************************/ 15000000
 %IF BASEFDT = 'YES'                                       /*@Y30LB36*/ 18000000
   %THEN                                                   /*@Y30LB36*/ 21000000
     %GO TO BASEFDT1;                                      /*@Y30LB36*/ 24000000
                                                                        27000000
         DCL 1 FDTTBL      BDY(WORD),                      /*@Y30LB36*/ 30000000
 %GO TO BASEFDT2;                                          /*@Y30LB36*/ 33000000
 %BASEFDT1:;                                               /*@Y30LB36*/ 36000000
                                                                        39000000
         DCL 1 FDTTBL      BASED   BDY(WORD),              /*@Y30LB36*/ 42000000
 %BASEFDT2:;                                               /*@Y30LB36*/ 45000000
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME  @Y30LB36*/ 48000000
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA PRTS   @Y30LB36*/ 51000000
                                                                        54000000
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS           @Y30LB36*/ 57000000
                                                                        60000000
         /* 'GROUP' NAME                                     @Y30LB36*/ 63000000
         DCL 1   GRP BASED(FDTPTR(  1)) BDY(HWORD),        /*@Y30LB36*/ 66000000
               2   GRPLEN FIXED(8),    /* DATA ITEM LENGTH   @Y30LB36*/ 69000000
               2   GRPVAL CHAR(  8);   /* DATA ITEM VALUE    @Y30LB36*/ 72000000
         DCL   GRPCNT FIXED(31) BASED(ADDR(FDTPTR(  1)));  /*@Y30LB36*/ 75000000
./  ADD  SSI=42550403,NAME=IDCCSSR
         /************************************************************/ 01000000
         /*                                                  @Y30LB31*/ 02000000
         /*  'STOREV  ' FUNCTION DATA TABLE DECLARATIONS     @Y30LB31*/ 03000000
         /*                                                  @Y30LB31*/ 04000000
         /************************************************************/ 05000000
 %IF BASEFDT = 'YES'                                                    06000000
   %THEN                                                                07000000
     %GO TO BASEFDT1;                                      /*@Y30LB31*/ 08000000
                                                                        09000000
         DCL 1 FDTTBL      BDY(WORD),                                   10000000
 %GO TO BASEFDT2;                                          /*@Y30LB31*/ 11000000
 %BASEFDT1:;                                               /*@Y30LB31*/ 12000000
                                                                        13000000
         DCL 1 FDTTBL      BASED   BDY(WORD),                           14000000
 %BASEFDT2:;                                               /*@Y30LB31*/ 15000000
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME  @Y30LB31*/ 16000000
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 17000000
                                                                        18000000
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS           @Y30LB31*/ 19000000
                                                                        20000000
         /* 'VOLUME' SERIAL NO.                              @Y30LB31*/ 21000000
         DCL 1   VOL BASED(FDTPTR(  1)) BDY(HWORD),                     22000000
               2   VOLLEN FIXED(8),    /* DATA ITEM LENGTH   @Y30LB31*/ 23000000
               2   VOLVAL CHAR(  6);   /* DATA ITEM VALUE    @Y30LB31*/ 24000000
                                                                        25000000
         /* 'NEWSERIAL' VOLUME SERIAL NO.                    @Y30LB31*/ 26000000
         DCL 1  NSER BASED(FDTPTR(  2)) BDY(HWORD),                     27000000
               2  NSERLEN FIXED(8),    /* DATA ITEM LENGTH   @Y30LB31*/ 28000000
               2  NSERVAL CHAR(  6);   /* DATA ITEM VALUE    @Y30LB31*/ 29000000
                                                                        30000000
         /* 'EJECT' PARM                                     @Y30LB31*/ 31000000
         DCL EJECT    BASED(FDTPTR(  3));                  /*@Y30LB31*/ 32000000
                                                                        33000000
         /* 'NOEJECT' PARM                                   @Y30LB31*/ 34000000
         DCL NEJEC    BASED(FDTPTR(  4));                  /*@Y30LB31*/ 35000000
                                                                        36000000
         /* 'RECORD' PARM                                    @Y30LB31*/ 37000000
         DCL   REC    BASED(FDTPTR(  5));                  /*@Y30LB31*/ 38000000
                                                                        39000000
         /* 'NORECORD' PARM                                  @Y30LB31*/ 40000000
         DCL  NREC    BASED(FDTPTR(  6));                  /*@Y30LB31*/ 41000000
                                                                        42000000
         /* 'LOCATION' OF EJECTED VOLUME                     @Y30LB31*/ 43000000
         DCL 1   LOC BASED(FDTPTR(  7)) BDY(HWORD),                     44000000
               2   LOCLEN FIXED(8),    /* DATA ITEM LENGTH   @Y30LB31*/ 45000000
               2   LOCVAL CHAR( 30);   /* DATA ITEM VALUE    @Y30LB31*/ 46000000
                                                                        47000000
         /* 'CATALOG' PARM                                   @Y30LB31*/ 48000000
         DCL   CAT    BASED(FDTPTR(  8));                  /*@Y30LB31*/ 49000000
                                                                        50000000
         /* 'CATALOG' CATNAME/PASSWORD VALUE                 @Y30LB31*/ 51000000
         DCL 1 CATNM BASED(FDTPTR(  9)) BDY(HWORD),                     52000000
               2 CATNMPLN FIXED(8),    /* PASSWORD LENGTH    @Y30LB31*/ 53000000
               2 CATNMPAS CHAR(8),     /* PASSWORD VALUE     @Y30LB31*/ 54000000
               2 CATNMPOS FIXED(8),    /* ASTERISK POSITION  @Y30LB31*/ 55000000
               2 CATNMFLG BIT(8),      /* DATA SET FLAGS     @Y30LB31*/ 56000000
                 3 CATNMFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 57000000
               2 CATNMMLN FIXED(8),    /* MEMBER NAME LENGTH @Y30LB31*/ 58000000
               2 CATNMMEM CHAR(8),     /* MEMBER NAME        @Y30LB31*/ 59000000
               2 CATNMLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 60000000
               2 CATNMVAL CHAR(44);    /* CATALOGUED NAME    @Y30LB31*/ 61000000
                                                                        62000000
         /* 'CATALOG' DNAME VALUE                            @Y30LB31*/ 63000000
         DCL 1 CATDN BASED(FDTPTR( 10)) BDY(HWORD),                     64000000
               2 CATDNLEN FIXED(8),    /* DATA ITEM LENGTH   @Y30LB31*/ 65000000
               2 CATDNVAL CHAR(  8);   /* DATA ITEM VALUE    @Y30LB31*/ 66000000
                                                                        67000000
         /* 'FILE' DDNAME VALUE                              @Y30LB31*/ 68000000
         DCL 1  FILE BASED(FDTPTR( 11)) BDY(HWORD),                     69000000
               2  FILELEN FIXED(8),    /* DATA ITEM LENGTH   @Y30LB31*/ 70000000
               2  FILEVAL CHAR(  8);   /* DATA ITEM VALUE    @Y30LB31*/ 71000000
                                                                        72000000
         /* 'PASSWORDFILES' PARM                             @Y30LB31*/ 73000000
         DCL 1 PFILE BASED(FDTPTR( 12)) BDY(HWORD),                     74000000
               2 PFILECNT FIXED(15),   /* COUNT OF ITEMS IN LIST     */ 75000000
               2 *(255) BDY(HWORD),                                     76000000
                 3 PFILELEN FIXED(8),  /* DATA ITEM LENGTH   @Y30LB31*/ 77000000
                 3 PFILEVAL CHAR(  8); /* DATA ITEM VALUE    @Y30LB31*/ 78000000
./  ADD  SSI=52860167,NAME=IDCCSST
         /************************************************************/ 00100000
         /*                                                          */ 00150000
         /*  'SWAPT   ' FUNCTION DATA TABLE DECLARATIONS             */ 00200000
         /*                                                          */ 00250000
         /************************************************************/ 00300000
 %IF BASEFDT = 'YES'                                                    00350000
   %THEN                                                                00400000
     %GO TO BASEFDT1;                                                   00450000
                                                                        00500000
         DCL 1 FDTTBL      BDY(WORD),                                   00550000
 %GO TO BASEFDT2;                                                       00600000
 %BASEFDT1:;                                                            00650000
                                                                        00700000
         DCL 1 FDTTBL      BASED   BDY(WORD),                           00750000
 %BASEFDT2:;                                                            00800000
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 00850000
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 00900000
./  ADD  SSI=42570051,NAME=IDCCSSV
         /************************************************************/ 02000003
         /*                                                          */ 04000003
         /*  'SCRATCHV' FUNCTION DATA TABLE DECLARATIONS             */ 06000003
         /*                                                          */ 08000003
         /************************************************************/ 10000003
 %IF BASEFDT = 'YES'                                                    12000003
   %THEN                                                                14000003
     %GO TO BASEFDT1;                                                   16000003
                                                                        18000003
         DCL 1 FDTTBL      BDY(WORD),                                   20000003
 %GO TO BASEFDT2;                                                       22000003
 %BASEFDT1:;                                                            24000003
                                                                        26000003
         DCL 1 FDTTBL      BASED   BDY(WORD),                           28000003
 %BASEFDT2:;                                                            30000003
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 32000003
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 34000003
                                                                        36000003
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 38000003
                                                                        40000003
         /* VOLUME SERIAL NUMBERS                                    */ 42000003
         DCL 1   VOL BASED(FDTPTR(  1)) BDY(HWORD),                     44000003
               2   VOLLEN FIXED(8),    /* DATA ITEM LENGTH           */ 46000003
               2   VOLVAL CHAR(  6);   /* DATA ITEM VALUE            */ 48000003
                                                                        50000003
         /* 'ALL' PARAMETER                                          */ 52000003
         DCL  ALLC    BASED(FDTPTR(  2));                               54000003
                                                                        56000003
         /* 'COPYDATE' PARAMETER                                     */ 58000003
         DCL CDATE    BASED(FDTPTR(  3));                               60000003
                                                                        62000003
         /* DATE COPY CREATED                                        */ 64000003
         DCL 1  DATE BASED(FDTPTR(  4)) BDY(WORD),                      66000003
               2  DATEVAL FIXED(31);   /* NUMERIC VALUE              */ 68000003
                                                                        70000003
         /* 'COPYDATE' SEQUENCE NUMBER                               */ 72000003
         DCL 1   SEQ BASED(FDTPTR(  5)) BDY(WORD),                      74000003
               2   SEQVAL FIXED(31);   /* NUMERIC VALUE              */ 76000003
                                                                        78000003
         /* NAME OF DD STATEMENT                                     */ 80000003
         DCL 1  FILE BASED(FDTPTR(  6)) BDY(HWORD),                     82000003
               2  FILELEN FIXED(8),    /* DATA ITEM LENGTH           */ 84000003
               2  FILEVAL CHAR(  8);   /* DATA ITEM VALUE            */ 86000003
./  ADD  SSI=42550404,NAME=IDCCSTR
         /************************************************************/ 01000000
         /*                                                          */ 02000000
         /*  'TRACE   ' FUNCTION DATA TABLE DECLARATIONS             */ 03000000
         /*                                                          */ 04000000
         /************************************************************/ 05000000
 %IF BASEFDT = 'YES'                                                    06000000
   %THEN                                                                07000000
     %GO TO BASEFDT1;                                                   08000000
                                                                        09000000
         DCL 1 FDTTBL      BDY(WORD),                                   10000000
 %GO TO BASEFDT2;                                                       11000000
 %BASEFDT1:;                                                            12000000
                                                                        13000000
         DCL 1 FDTTBL      BASED   BDY(WORD),                           14000000
 %BASEFDT2:;                                                            15000000
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 16000000
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 17000000
                                                                        18000000
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 19000000
                                                                        20000000
         /* 'TRACE OP' ON                                            */ 21000000
         DCL  ZXON    BASED(FDTPTR(  1));                               22000000
                                                                        23000000
         /* 'TRACE OP' OFF                                           */ 24000000
         DCL ZXOFF    BASED(FDTPTR(  2));                               25000000
                                                                        26000000
         /* 'TRACE OP' DUMP                                          */ 27000000
         DCL  DUMP    BASED(FDTPTR(  3));                               28000000
                                                                        29000000
         /* 'TRACE DATA' X                                           */ 30000000
         DCL     X    BASED(FDTPTR(  4));                               31000000
                                                                        32000000
         /* 'TRACE DATA' Y                                           */ 33000000
         DCL     Y    BASED(FDTPTR(  5));                               34000000
                                                                        35000000
         /* 'TRACE DATA' BOTH                                        */ 36000000
         DCL  BOTH    BASED(FDTPTR(  6));                               37000000
                                                                        38000000
         /* 'TRACE DATA' ACTIVE                                      */ 39000000
         DCL   ACT    BASED(FDTPTR(  7));                               40000000
                                                                        41000000
         /* 'TRACE DATA' INACTIVE                                    */ 42000000
         DCL INACT    BASED(FDTPTR(  8));                               43000000
                                                                        44000000
         /* 'TRACE EXTENT' CURRENT                                   */ 45000000
         DCL  CURR    BASED(FDTPTR(  9));                               46000000
                                                                        47000000
         /* 'TRACE EXTENT' MAXIMUM                                   */ 48000000
         DCL ZXMAX    BASED(FDTPTR( 10));                               49000000
                                                                        50000000
         /* 'TRACE OUTPUT' DDNAME                                    */ 51000000
         DCL 1 OFILE BASED(FDTPTR( 11)) BDY(HWORD),                     52000000
               2 OFILELEN FIXED(8),    /* DATA ITEM LENGTH           */ 53000000
               2 OFILEVAL CHAR(  8);   /* DATA ITEM VALUE            */ 54000000
                                                                        55000000
         /* 'TRACE OUTPUT' DSNAME                                    */ 56000000
         DCL 1   ODS BASED(FDTPTR( 12)) BDY(HWORD),                     57000000
               2   ODSPLN FIXED(8),    /* PASSWORD LENGTH            */ 58000000
               2   ODSPAS CHAR(8),     /* PASSWORD VALUE             */ 59000000
               2   ODSPOS FIXED(8),    /* ASTERISK POSITION          */ 60000000
               2   ODSFLG BIT(8),      /* DATA SET FLAGS             */ 61000000
                 3   ODSFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 62000000
               2   ODSMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 63000000
               2   ODSMEM CHAR(8),     /* MEMBER NAME                */ 64000000
               2   ODSLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 65000000
               2   ODSVAL CHAR(44);    /* CATALOGUED NAME            */ 66000000
                                                                        67000000
         /* 'TRACE WORK' DDNAME                                      */ 68000000
         DCL 1 WFILE BASED(FDTPTR( 13)) BDY(HWORD),                     69000000
               2 WFILELEN FIXED(8),    /* DATA ITEM LENGTH           */ 70000000
               2 WFILEVAL CHAR(  8);   /* DATA ITEM VALUE            */ 71000000
                                                                        72000000
         /* 'TRACE WORK' DSNAME                                      */ 73000000
         DCL 1   WDS BASED(FDTPTR( 14)) BDY(HWORD),                     74000000
               2   WDSPLN FIXED(8),    /* PASSWORD LENGTH            */ 75000000
               2   WDSPAS CHAR(8),     /* PASSWORD VALUE             */ 76000000
               2   WDSPOS FIXED(8),    /* ASTERISK POSITION          */ 77000000
               2   WDSFLG BIT(8),      /* DATA SET FLAGS             */ 78000000
                 3   WDSFUQ BIT(1),    /* FLAG-ON IF UNQUALIFIED     */ 79000000
               2   WDSMLN FIXED(8),    /* MEMBER NAME LENGTH         */ 80000000
               2   WDSMEM CHAR(8),     /* MEMBER NAME                */ 81000000
               2   WDSLEN FIXED(8),    /* CATALOGUED NAME LENGTH     */ 82000000
               2   WDSVAL CHAR(44);    /* CATALOGUED NAME            */ 83000000
./  ADD  SSI=42610518,NAME=IDCCSTU
         /************************************************************/ 02000003
         /*                                                  @Y30LB00*/ 04000003
         /*  'TUNE    ' FUNCTION DATA TABLE DECLARATIONS     @Y30LB00*/ 06000003
         /*                                                  @Y30LB00*/ 08000003
         /************************************************************/ 10000003
 %IF BASEFDT = 'YES'                                                    12000003
   %THEN                                                                14000003
     %GO TO BASEFDT1;                                                   16000003
                                                                        18000003
         DCL 1 FDTTBL      BDY(WORD),                                   20000003
 %GO TO BASEFDT2;                                                       22000003
 %BASEFDT1:;                                                            24000003
                                                                        26000003
         DCL 1 FDTTBL      BASED   BDY(WORD),                           28000003
 %BASEFDT2:;                                                            30000003
               2 FDTVERB   CHAR(8),    /* FUNCTION VERBNAME          */ 32000003
               2 FDTPTR(*) PTR(31);    /* SCALAR DATA POINTERS       */ 34000003
                                                                        36000003
         /* DATA DECLARATIONS OF SCALAR DATA ITEMS                   */ 38000003
                                                                        40000003
         /* 'DISPLAY' PARM                                           */ 42000003
         DCL   DIS    BASED(FDTPTR(  1));                               44000003
                                                                        46000003
         /* 'CHANGE' PARM                                            */ 48000003
         DCL  CHNG    BASED(FDTPTR(  2));                               50000003
                                                                        52000003
         /* 'LRUCLOCK' VALUE IN SECONDS                              */ 54000003
         DCL 1  LRUC BASED(FDTPTR(  3)) BDY(WORD),                      56000003
               2  LRUCVAL FIXED(31);   /* NUMERIC VALUE              */ 58000003
                                                                        60000003
         /* 'STAGINGDRIVEGROUP' NUMBER                               */ 62000003
         DCL 1   SDG BASED(FDTPTR(  4)) BDY(WORD),                      64000003
               2   SDGVAL FIXED(31);   /* NUMERIC VALUE              */ 66000003
                                                                        68000003
         /* 'ACTIVEPAGES' LOWER AND HIGHER NUMBER OF PAGES           */ 70000003
         DCL  ACTP    BASED(FDTPTR(  5));                               72000003
                                                                        74000003
         /* 'ACTIVEPAGES' LOWER NUMBER OF PAGES                      */ 76000003
         DCL 1 ACTPL BASED(FDTPTR(  6)) BDY(WORD),                      78000003
               2 ACTPLVAL FIXED(31);   /* NUMERIC VALUE              */ 80000003
                                                                        82000003
         /* 'ACTIVEPAGES' HIGHER NUMBER OF PAGES                     */ 84000003
         DCL 1 ACTPH BASED(FDTPTR(  7)) BDY(WORD),                      86000003
               2 ACTPHVAL FIXED(31);   /* NUMERIC VALUE              */ 88000003
                                                                        90000003
         /* 'LRUGROUPS' UNITS                                        */ 92000003
         DCL 1 LRUGR BASED(FDTPTR(  8)) BDY(WORD),                      94000003
               2 LRUGRCNT FIXED(31),   /* COUNT OF ITEMS IN LIST     */ 96000003
               2 LRUGRVAL(  4) FIXED(31);/* DATA ITEMS               */ 98000003
./  ADD  SSI=63170265,NAME=IDCDF04
 /*********************************************************  @Y30LB33*/ 00138803
 /*                                                          @Y30LB33*/ 00144403
 /* MSS GLOBAL DATA AREAS FOR AMS (VS2):        04/05/76     @ZA09521*/ 00150042
 /*     (1) MSS MESSAGE STRUCTURES                           @Y30LB30*/ 00200003
 /*     (2) SYSTEM ADAPTER DECLARATIONS                      @Y30LB30*/ 00250003
 /*         A) DATA STRUCTURES                               @Y30LB30*/ 00300003
 /*         B) SYMBOLIC RETURN CODES                         @Y30LB30*/ 00350003
 /*     (3) VOLUME SERVICE DECLARATIONS                      @Y30LB30*/ 00400003
 /*         A) DATA STRUCTURES                               @Y30LB30*/ 00450003
 /*         B) SYMBOLIC RETURN CODES                         @Y30LB30*/ 00500003
 /*     (4) INPUT/OUTPUT ADAPTER DECLARATIONS                @Y30LB30*/ 00550003
 /*     (5) CONVENTIONALIZED NAMED VALUES DELCARATIONS       @Y30LB30*/ 00600003
 /*                                                          @Y30LB30*/ 00650003
 /* CHANGE ACTIVITY -                                        @YD00171*/ 00700003
 /*       @YD00171                                           @YD00171*/ 00750003
 /*       @YD00175                                           @YD00175*/ 00800003
 /* CHANGE 03  3/18/75  NEW COPY CART. MSSC MESSAGE FORMAT   @ZM00741*/ 00850003
 /* CHANGE 04 11/10/75  NEW STAEPARM FORMAT                  @ZA05112*/ 00900003
 /* CHANGE 05 03/04/76  MDFORCE IN MDAGL                     @ZA09521*/ 00910003
 /* CHANGE 06 9/1/76  DCRR - REBUILD A VOLUME LABEL          @ZDR2057*/ 00911003
 /* CHANGE 07 10/13/76 FIX TO CTMSG CTARRAY MULTIPLE         @ZA14727*/ 00921000
 /* CHANGE 08 10/20/76 REPAIRV                               @ZA11014*/ 00921400
 /* CHANGE 09 04/05/76  RACF D.S. PROTECTION FLAG IN VSDSTAT @G24LB31*/ 00923000
 /* CHANGE 10 05/10/76  NEW KEYWORD FOR MODIFYC              @G24LB40*/ 00930000
 /*                                                          @YD00171*/ 00950003
 /*********************************************************  @Y30LB30*/ 01000003
                                                           /*@Y30LB30*/ 01050003
 /*********************************************************  @Y30LB33*/ 01100003
 /*                                                          @Y30LB33*/ 01150003
 /*  THIS STRUCTURE IS THE FORMAT OF THE COPY CARTRIDGE      @Y30LB33*/ 01200003
 /*  MESSAGE RETURNED AFTER THE SUCCESSFUL COMPLETION        @Y30LB33*/ 01250003
 /*  OF THE USSC MACRO.                                      @Y30LB33*/ 01300003
 /*                                                          @Y30LB33*/ 01350003
 /*********************************************************  @Y30LB33*/ 01400003
                                                           /*@Y30LB33*/ 01450003
         DCL CCMSGPTR PTR(31);         /*PTR TO MSG AREA     @Y30LB33*/ 01500003
                                                           /*@Y30LB33*/ 01550003
         DCL 1 CCMSG BASED(CCMSGPTR),                      /*@Y30LB33*/ 01600003
               2 CCPSTCDE    CHAR(1),  /* POST CODE          @ZM00741*/ 01650003
               2 CCEJCODE    FIXED(8), /* EJECT CODE         @ZM00741*/ 01700003
               2 *           CHAR(2),  /* RESERVED           @ZM00741*/ 01750003
               2 CCVOL       CHAR(6),  /* VOLUME             @Y30LB33*/ 01800003
               2 *           CHAR(2),  /* RESERVED           @ZM00741*/ 01850003
               2 CCNEWCSN    CHAR(12), /* REPLACEMENT CART   @Y30LB33*/ 01900003
               2 CCOLDCSN    CHAR(12); /* OLD CARTRIDGE      @Y30LB33*/ 01950003
                                                           /*@Y30LB33*/ 02000003
                                                           /*@Y30LB33*/ 02050003
 /*********************************************************  @Y30LB33*/ 02100003
 /*                                                          @Y30LB33*/ 02150003
 /*  THIS STRUCTURE IS THE FORMAT OF THE MOVE AND            @Y30LB33*/ 02200003
 /*  DEFINE MESSAGES RETURNED AFTER THE SUCCESSFUL           @Y30LB33*/ 02250003
 /*  COMPLETION OF THE USSC MACRO                            @Y30LB33*/ 02300003
 /*                                                          @Y30LB33*/ 02350003
 /*********************************************************  @Y30LB33*/ 02400003
                                                           /*@Y30LB33*/ 02450003
         DCL CMMSGPTR PTR(31);         /*PTR TO MSG AREA     @Y30LB30*/ 02500003
                                                           /*@Y30LB33*/ 02550003
         DCL 1 CMMSG BASED(CMMSGPTR),                      /*@Y30LB30*/ 02600003
               2 CMOLDVOL    CHAR(6),  /* OLD VOLID          @Y30LB30*/ 02650003
               2 CMVOLFLG    CHAR(1),  /* MESSAGE FLAGS      @Y30LB30*/ 02700003
                 3 CMCECART  BIT(1),   /* CE CART            @Y30LB30*/ 02750003
                 3 CMSCRVOL  BIT(1),   /* SCRATCH VOLUME     @Y30LB30*/ 02800003
                 3 CMDERAS   BIT(1),   /* DASD ERASE         @Y30LB30*/ 02850003
                 3 CMEXCL    BIT(1),   /* EXCLUSIVE VOLUME   @Y30LB30*/ 02900003
                 3 CMSCRCRT  BIT(1),   /* SCRATCH CARTRIDGE  @Y30LB30*/ 02950003
                 3 CMBIND    BIT(1),   /* BOUND VOLUME       @Y30LB30*/ 03000003
                 3 CMRONLY   BIT(1),   /* READONLY VOLUME    @Y30LB30*/ 03050003
                 3 *         BIT(1),   /* UNUSED             @Y30LB33*/ 03100003
               2 *           CHAR(1),  /* UNUSED             @Y30LB33*/ 03150003
               2 CMNEWVOL    CHAR(6),  /* NEW VOLID          @Y30LB30*/ 03200003
               2 *           CHAR(1),  /* UNUSED             @Y30LB33*/ 03250003
               2 CMNUMCRT    CHAR(1),  /* NUMBER OF CARTS    @Y30LB30*/ 03300003
               2 CMCSN1      CHAR(12), /* CART SERIAL 1      @Y30LB30*/ 03350003
               2 CMCSN2      CHAR(12); /* CART SERIAL 2      @Y30LB30*/ 03400003
                                                           /*@Y30LB33*/ 03450003
 /*********************************************************  @Y30LB33*/ 03500003
 /*                                                          @Y30LB33*/ 03550003
 /* THIS STRUCTURE IS THE FORMAT OF THE COPY TABLES          @Y30LB33*/ 03600003
 /* MESSAGE RETURNED AFTER THE SUCCESSFUL COMPLETION         @Y30LB33*/ 03650003
 /* OF THE USSC MACRO TO COPY THE MSC TABLES                 @Y30LB30*/ 03700003
 /*                                                          @Y30LB33*/ 03750003
 /*********************************************************  @Y30LB33*/ 03800003
                                                           /*@Y30LB33*/ 03850003
         DCL CTMSGPTR PTR(31);         /*PTR TO MSG AREA     @Y30LB33*/ 03900003
                                                           /*@Y30LB33*/ 03950003
         DCL 1 CTMSG BASED(CTMSGPTR),                      /*@Y30LB33*/ 04000003
               2 * CHAR(1),            /* UNUSED             @Y30LB33*/ 04050003
               2 CTREALCC CHAR(2),     /* CYLINDER IN        @Y30LB33*/ 04100003
                                       /* TARGET DATA SET    @Y30LB33*/ 04150003
                                       /* WHERE FIRST        @Y30LB33*/ 04200003
                                       /* BEGINS             @Y30LB33*/ 04250003
               2 CTREALH FIXED(8) UNSIGNED,                /*@Y30LB33*/ 04300003
                                       /* TRACK IN TARGET    @Y30LB33*/ 04350003
                                       /* DATA SET WHERE     @Y30LB33*/ 04400003
                                       /* FIRST TABLE        @Y30LB33*/ 04450003
                                       /* BEGINS             @Y30LB33*/ 04500003
               2 CTARRAY(14) CHAR(4),  /* TABLE TRACKS       @ZA14727*/ 04550000
                    3 CTTBLID CHAR(1), /* TABLE ID           @Y30LB33*/ 04600003
                    3 CTTBLCC FIXED(8) /* CYLINDER WHERE     @Y30LB33*/ 04650003
                             UNSIGNED, /* TABLE BEGAN ON     @Y30LB33*/ 04700003
                                       /* TABLE VOLUME       @Y30LB33*/ 04750003
                    3 CTTBLHH FIXED(8) /* TRACK WHERE        @Y30LB33*/ 04800003
                             UNSIGNED, /* TABLE BEGAN ON     @Y30LB33*/ 04810003
                                       /* TABLE VOLUME       @Y30LB33*/ 04900003
                    3 CTTBLRR FIXED(8) /* RECORD WHERE       @Y30LB33*/ 04950003
                         UNSIGNED;     /* TABLE BEGAN ON     @Y30LB33*/ 05000003
                                       /* TABLE VOLUME       @Y30LB33*/ 05050003
 /*                                                          @Y30LB33*/ 05100003
 /*********************************************************  @Y30LB37*/ 05150003
 /*                                                          @Y30LB37*/ 05200003
 /*  THIS STRUCTURE IS THE ARGUMENT LIST FOR MOUNT/DEMOUNT   @Y30LB37*/ 05250003
 /*  FOR THE UMSSUNIT MACRO CALL.                            @Y30LB37*/ 05300003
 /*                                                          @Y30LB37*/ 05350003
 /*********************************************************  @Y30LB37*/ 05400003
                                                           /*@Y30LB37*/ 05450003
         DCL 1 MDAGL BDY(WORD) BASED,                      /*@Y30LB37*/ 05500003
               2 MDHEAD   CHAR(8),     /*MDAGL HEADING       @Y30LB37*/ 05550003
               2 MDUCBPTR PTR(31),     /*PTR TO UCB ADDR     @Y30LB37*/ 05600003
               2 MDDDNAME CHAR(8),     /*DDNAME              @Y30LB37*/ 05650003
               2 MDPUAGL  PTR(31),     /*PTR TO PUAGL        @Y30LB37*/ 05700003
               2 MDLABEL  CHAR(6),     /*VOL SERIAL NUMBER   @Y30LB37*/ 05750003
               2 MDFLAGS,              /*OPTION FLAGS        @Y30LB37*/ 05800003
                 3 MDNEWVOL  BIT(1),   /*NEW VOLUME          @Y30LB37*/ 05850003
                 3 MDCLEAR   BIT(1),   /*CLEAR WITH MOUNT    @Y30LB37*/ 05900003
                 3 MDPOST    BIT(1),   /*POST WITH DEMOUNT   @Y30LB37*/ 05950003
                 3 MDWAIT    BIT(1),   /*WAIT ON DEMOUNT     @Y30LB37*/ 06000003
                 3 MDENQ     BIT(1),   /*INTERNAL ENQ FLAG   @Y30LB37*/ 06050003
                 3 MDDEQ     BIT(1),   /*DEQ WITH DEMOUNT    @YD00175*/ 06100003
                 3 MDFORCE   BIT(1),   /*FORCE DEMOUNT       @ZA09521*/ 06150003
                 3 MDVTOCTR  BIT(1),   /* USE SUPPLIED VTOC  @ZDR2057*/ 06151003
              2 * CHAR(1),             /* RESERVED (UNUSED)  @ZDR2057*/ 06152003
              2 MDVTOC CHAR(5) BDY(WORD), /* VTOC            @ZDR2057*/ 06153003
                   3 MDCC FIXED(15),   /* CC (CYLANDER)      @ZDR2057*/ 06154003
                   3 MDHH FIXED(15),   /* HH (HEAD)          @ZDR2057*/ 06155003
                   3 MDR CHAR(1);      /* R (RECORD)         @ZDR2057*/ 06156003
                                                           /*@Y30LB30*/ 06200003
 /*********************************************************  @Y30LB37*/ 06250003
 /*                                                          @Y30LB37*/ 06300003
 /*  THIS STRUCTURE IS THE ARGUMENT LIST FOR POST UCB        @Y30LB37*/ 06350003
 /*  FOR THE UMSSUNIT MACRO CALL.                            @Y30LB37*/ 06400003
 /*                                                          @Y30LB37*/ 06450003
 /*********************************************************  @Y30LB37*/ 06500003
                                                           /*@Y30LB37*/ 06550003
         DCL 1 PUAGL BDY(WORD) BASED,                      /*@Y30LB37*/ 06600003
               2 PUHEAD   CHAR(8),     /*PUAGL HEADING       @Y30LB37*/ 06650003
               2 PUUCBPTR PTR(31),     /*UCB POINTER         @Y30LB37*/ 06700003
               2 PUTTRPTR PTR(31),     /*TTR POINTER         @Y30LB37*/ 06750003
               2 PULABELP PTR(31);     /*VOLUME LABEL PTR    @Y30LB37*/ 06800003
                                                           /*@Y30LB37*/ 06850003
 /*********************************************************  @Y30LB37*/ 06900003
 /*                                                          @Y30LB37*/ 06950003
 /*  THIS STRUCTURE IS THE ARGUMENT LIST FOR CHECK UCB       @Y30LB37*/ 07000003
 /*  FOR THE UMSSUNIT MACRO CALL.                            @Y30LB37*/ 07050003
 /*                                                          @Y30LB37*/ 07100003
 /*********************************************************  @Y30LB37*/ 07150003
                                                           /*@Y30LB37*/ 07200003
       DCL 1 CKAGL BDY(WORD) BASED,                        /*@Y30LB37*/ 07250003
             2 CKHEAD   CHAR(8),       /*CKAGL HEADING       @Y30LB37*/ 07300003
             2 CKUCBPTR PTR(31),       /*UCB POINTER         @Y30LB37*/ 07350003
             2 CKDDNAME CHAR(8),       /*DDNAME              @Y30LB37*/ 07400003
             2 CKDATYPE PTR(31),       /*RET ADDR OF TYPE    @Y30LB37*/ 07450003
             2 CKLABELP PTR(31),       /*VOLUME LABEL PTR    @Y30LB37*/ 07500003
             2 CKFLAGS,                /*OPTION  FLAGS       @Y30LB37*/ 07550003
               3 CKTESTVT BIT(1),      /*TEST VIRTUAL        @Y30LB37*/ 07600003
               3 CKRETTYP BIT(1),      /*RETURN TYPE         @Y30LB37*/ 07650003
               3 CKDMTABL BIT(1),      /*TEST DEMOUNTABLE    @Z40LB35*/ 07700003
               3 *        BIT(5);      /*RESERVED            @YD00175*/ 07750003
                                                           /*@Y30LB37*/ 07800003
 /*********************************************************  @YD00175*/ 07850003
 /*                                                          @YD00175*/ 07900003
 /*  THIS STRUCTURE IS THE ARGUMENT LIST FOR EXCLUSIVE       @YD00175*/ 07950003
 /*  CONTROL FOR THE UMSSUNIT MACRO CALL.                    @YD00175*/ 08000003
 /*                                                          @YD00175*/ 08050003
 /*********************************************************  @YD00175*/ 08100003
                                                           /*@YD00175*/ 08150003
         DCL 1 EXCLAGL BDY(WORD) BASED,                    /*@YD00175*/ 08200003
               2 EXCLHEAD CHAR(8),     /*EXCLAGL HEADING     @YD00175*/ 08250003
               2 EXCLUCBP PTR(31),     /*UCB POINTER         @YD00175*/ 08300003
               2 EXCLDDP  PTR(31),     /*DDNAME POINTER      @YD00175*/ 08350003
               2 EXCLVOL  CHAR(6),     /*VOLUME SERIAL       @YD00175*/ 08400003
               2 EXCLFLAG,             /*OPTION FLAGS        @YD00175*/ 08450003
                 3 EXCLMNT  BIT(1),    /*VOLUME MOUNTED FLAG @YD00175*/ 08500003
                 3 *        BIT(7);    /*RESERVED            @YD00175*/ 08550003
                                                           /*@YD00175*/ 08600003
 /*********************************************************  @YD00175*/ 08650003
 /*                                                          @Y30LB35*/ 08700003
 /*  THIS STRUCTURE IS THE ARGUMENT LIST FOR OPEN            @Y30LB35*/ 08750003
 /*  FOR THE UEXCP MACRO CALL.                               @Y30LB35*/ 08800003
 /*                                                          @Y30LB35*/ 08850003
 /*********************************************************  @Y30LB35*/ 08900003
                                                           /*@Y30LB35*/ 08950003
         DCL 1 EXOARG BDY(WORD) BASED,                     /*@Y30LB35*/ 09000003
               2 EXOHEAD  CHAR(8),     /*RESERVED            @Y30LB35*/ 09050003
               2 EXODDN   PTR(31),     /*POINTER TO DDNAME   @Y30LB35*/ 09100003
               2 EXODSN   PTR(31),     /*POINTER TO DSNAME   @Y30LB35*/ 09150003
               2 EXOVSN   PTR(31),     /*POINTER TO VOL SER  @Y30LB35*/ 09200003
               2 EXOUCB   PTR(31),     /*POINTER TO UCB      @Y30LB35*/ 09250003
               2 EXOEXT   PTR(31),     /*POINTER RET EXTENTS @Y30LB30*/ 09300003
               2 EXOCTLBK PTR(31),     /*PTR RET IOCTLBK PTR @Y30LB30*/ 09350003
               2 EXOPT,                /*OPEN OPITIONS       @Y30LB35*/ 09400003
                 3 EXOTAB   BIT(1),    /*OPEN FOR MSC TABLES @Y30LB30*/ 09450003
                 3 EXOLAB   BIT(1),    /*OPEN VOL LABEL      @Y30LB35*/ 09500003
                 3 EXOPASS  BIT(1),    /*OPEN TEST PASSWD    @Y30LB35*/ 09550003
                 3 EXONEW   BIT(1),    /*OPEN VOL TO INIT    @Y30LB35*/ 09600003
                 3 EXOVTOC  BIT(1),    /*OPEN VOL TO READ    @Z40LB35*/ 09650003
                                       /*VTOC DSCBS          @Z40LB35*/ 09700003
                 3 EXOREP   BIT(1),    /*REPAIR OPEN         @ZA11014*/ 09750000
                 3 *        BIT(2),    /*RESERVED            @ZA11014*/ 09770000
               2 EXFLG,                /*OPEN FLAGS          @Y30LB35*/ 09790000
                 3 EXOREAD  BIT(1),    /*INDICATES READ ONLY @Y30LB35*/ 09810000
                 3 *        BIT(2),    /*RESERVED            @ZA11014*/ 09830000
                 3 EXORVS   BIT(1),    /*VSAM DATA SET       @ZA11014*/ 09850000
                 3 EXOSPK   BIT(1),    /*STAGING PACK        @ZA11014*/ 09870000
                 3 EXORDS   BIT(1),    /*DATA SET            @ZA11014*/ 09890000
                 3 EXORVT   BIT(1),    /*VTOC                @ZA11014*/ 09910000
                 3 EXOVTH   BIT(1);    /*VTOC HEADER         @ZA11014*/ 09930000
                                                           /*@Y30LB30*/ 09950003
 /*********************************************************  @Y30LB35*/ 10000003
 /*                                                          @Y30LB35*/ 10050003
 /*  THIS STRUCTURE IS THE ARGUMENT LIST FOR GET             @Y30LB35*/ 10100003
 /*  FOR THE UEXCP MACRO CALL.                               @Y30LB35*/ 10150003
 /*                                                          @Y30LB35*/ 10200003
 /*********************************************************  @Y30LB35*/ 10250003
                                                           /*@Y30LB35*/ 10300003
         DCL 1 EXGARG BDY(WORD) BASED,                     /*@Y30LB35*/ 10350003
               2 EXGHEAD  CHAR(8),     /*RESERVED            @Y30LB35*/ 10400003
               2 EXGCTLBK PTR(31),     /*POINTER TO IOCTLBK  @Y30LB35*/ 10450003
               2 EXGCCHH1 PTR(31),     /*PTR TO SEEK CCHHR   @Y30LB35*/ 10500003
               2 EXGCCHH2 PTR(31),     /*PTR TO SEARCH CCHHR @Y30LB35*/ 10550003
               2 EXGRECNO FIXED(31),   /*NUM RECORDS TO READ @Y30LB35*/ 10600003
               2 EXGDATAP PTR(31),     /*PTR AREA FOR RECS   @Y30LB35*/ 10650003
               2 EXGKEYLN FIXED(8) UNSIGNED, /*LEN OF KEY    @Y30LB35*/ 10700003
               2 *        FIXED(8),          /*RESERVED      @Y30LB35*/ 10750003
               2 EXGDATAL FIXED(15) UNSIGNED;/*LEN OF DATA   @Y30LB35*/ 10800003
 /*********************************************************  @ZA11014*/ 10850000
 /*                                                          @ZA11014*/ 10851000
 /* THIS STRUCTURE IS THE ARGUMENT LIST FOR REPAIRV          @ZA11014*/ 10852000
 /* I/O CALLS TO THE UEXCP MACRO                             @ZA11014*/ 10853000
 /*                                                          @ZA11014*/ 10854000
 /*********************************************************  @ZA11014*/ 10855000
                                                           /*@Y30LB35*/ 10856000
         DCL 1 EXWRARG BDY(WORD) BASED,                   /*@ZA11014*/  10857000
               2 EXRWRES  CHAR(8),     /*RESERVED            @ZA11014*/ 10858000
               2 EXRWCTBL PTR(31),     /*POINTER TO IOCTLBK  @ZA11014*/ 10859000
               2 EXRWIOAR PTR(31),     /*PTR TO SEEK CCHHR   @ZA11014*/ 10860000
               2 EXRWDARE PTR(31),     /*PTR TO SEARCH CCHHR @ZA11014*/ 10861000
               2 EXLOCPTR PTR(31),     /*NUM RECORDS TO READ @ZA11014*/ 10862000
               2 EXCCWCNT FIXED(15),   /*PTR AREA FOR RECS   @ZA11014*/ 10863000
               2 EXRWCHR,                                  /*@ZA11014*/ 10864000
                 3 EXCC     FIXED(16),                     /*@ZA11014*/ 10865000
                 3 EXHH     FIXED(16),                     /*@ZA11014*/ 10866000
                 3 EXRECNUM FIXED(8),                      /*@ZA11014*/ 10867000
               2 *       FIXED(8),      /* RESERVED          @ZA11014*/ 10868000
               2 EXRWKDLN PTR(31),                         /*@ZA11014*/ 10869000
               2 EXSPACE,                                  /*@ZA11014*/ 10870000
                 3  *    FIXED(8),                         /*@ZA11014*/ 10871000
                 3  *    PTR(24),                          /*@ZA11014*/ 10872000
                 3  *    FIXED(15),                        /*@ZA11014*/ 10873000
                 3  *    FIXED(15),                        /*@ZA11014*/ 10874000
                 3  *    FIXED(15),                        /*@ZA11014*/ 10875000
               2 EXRWFUN  FIXED(8);                        /*@ZA11014*/ 10876000
 /*********************************************************  @Y30LB35*/ 10900003
 /*                                                          @Y30LB35*/ 10950003
 /*  THIS STRUCTURE IS THE ARGUMENT LIST FOR PUT             @Y30LB35*/ 11000003
 /*  FOR THE UEXCP MACRO CALL.                               @Y30LB35*/ 11050003
 /*                                                          @Y30LB35*/ 11100003
 /*********************************************************  @Y30LB35*/ 11150003
                                                           /*@Y30LB35*/ 11200003
         DCL 1 EXPARG BDY(WORD) BASED,                     /*@Y30LB35*/ 11250003
               2 EXPHEAD  CHAR(8),     /*RESERVED            @Y30LB35*/ 11300003
               2 EXPCTLBK PTR(31),     /*PTR IOCTLBK PTR     @Y30LB35*/ 11350003
               2 EXPDATA  PTR(31),     /*PTR DATA-TO-WRITE   @Y30LB35*/ 11400003
               2 EXPCCHHR PTR(31);     /*PTR TO SEEK CCHHR   @Y30LB35*/ 11450003
                                                           /*@Y30LB30*/ 11500003
 /*********************************************************  @Y30LB35*/ 11550003
 /*                                                          @Y30LB35*/ 11600003
 /*  THIS STRUCTURE IS THE ARGUMENT LIST FOR DATA-TO-WRITE   @Y30LB35*/ 11650003
 /*  FOR THE UEXCP MACRO CALL.                               @Y30LB35*/ 11700003
 /*                                                          @Y30LB35*/ 11750003
 /*********************************************************  @Y30LB35*/ 11800003
                                                           /*@Y30LB35*/ 11850003
         DCL 1 EXPDATAB BDY(WORD) BASED(EXPDATA),          /*@Y30LB35*/ 11900003
               2 EXPRECNO FIXED(31),   /*NUM OF RECORDS      @Y30LB35*/ 11950003
               2 EXPARRAY (*),         /*DATA-TO-WRITE ARRAY @Y30LB35*/ 12000003
                 3 EXPDATAP PTR(31),   /*PTR TO DATA         @Y30LB30*/ 12050003
                 3 EXPKEYLN FIXED(8) UNSIGNED, /*LEN OF KEY  @Y30LB35*/ 12100003
                 3 *        FIXED(8),          /*RESERVED    @Y30LB35*/ 12150003
                 3 EXPDATAL FIXED(15) UNSIGNED;/*LEN DATA    @Y30LB35*/ 12200003
                                                           /*@Y30LB30*/ 12250003
 /*********************************************************  @Y30LB35*/ 12300003
 /*                                                          @Y30LB35*/ 12350003
 /*  THIS STRUCTURE IS THE ARGUMENT LIST FOR VOLUME SERVICES @Y30LB35*/ 12400003
 /*  FOR THE 'INITVOL', 'GETLABEL', AND 'PUTLABEL' REQUEST.  @Y30LB35*/ 12450003
 /*                                                          @Y30LB35*/ 12500003
 /*********************************************************  @Y30LB35*/ 12550003
                                                           /*@Y30LB35*/ 12600003
         DCL 1 VS2AGL BDY(WORD) BASED,                     /*@Y30LB35*/ 12650003
               2 VS2HEAD  CHAR(8),     /*RESERVED            @Y30LB35*/ 12700003
               2 VSUCBPTR PTR(31),     /*PTR TO UCB ADDR     @Y30LB35*/ 12750003
               2 VSVTOCSZ FIXED(31),   /*VTOC TRK SIZE       @Y30LB35*/ 12800003
               2 VSOWNPTR PTR(31),     /*PTR TO OWNER NAME   @Y30LB30*/ 12850003
               2 VSVOLPTR PTR(31),     /*PTR TO VOLUME SER   @Y30LB30*/ 12900003
               2 VSIOBKPT PTR(31),     /*PTR TO IOXCTLBK PTR @Y30LB30*/ 12950003
               2 VSLABOPT,             /*LABEL OPTIONS       @Y30LB35*/ 13000003
                 3 VSOWNER  BIT(1),    /*RETRIEVE OR UPDATE  @Y30LB35*/ 13050003
                                       /*OWNER FIELD IN LABEL@Y30LB35*/ 13100003
                 3 VSVOLSER BIT(1),    /*RETRIEVE OR UPDATE  @Y30LB35*/ 13150003
                                       /*VOL FIELD IN LABEL  @Y30LB35*/ 13200003
                 3 VSNOVTOC BIT(1),    /* NO DEFAULT VTOC    @ZDR2057*/ 13201003
                 3 *        BIT(5),    /*RESERVED            @ZDR2057*/ 13202003
               2 VSVOLUME CHAR(6),     /*SERIAL NUM FOR OPEN @Y30LB35*/ 13300003
               2 VS2MSG,               /*MESSAGE OPTION      @Y30LB35*/ 13350003
                 3 VS2TOV   BIT(1),    /*TO VOLUME PLACED IN @Y30LB35*/ 13400003
                                       /*MESSAGE             @Y30LB35*/ 13450003
                 3 *        BIT(7),    /*RESERVED            @Y30LB35*/ 13500003
               2 VS2RESOP,             /*RESERVE OPTION      @Y30LB30*/ 13550003
                 3 VS2RES   BIT(1),    /*RESERVE TO BE       @Y30LB35*/ 13600003
                                       /*PERFORMED           @Y30LB35*/ 13650003
                 3 VS2REAL  BIT(1),    /*REAL VOLUME         @Y30LB35*/ 13700003
                 3 *        BIT(6),    /*RESERVED            @Y30LB35*/ 13750003
               2 VSDDNAME CHAR(8),     /*DD NAME             @YD00175*/ 13800003
               2 * CHAR(3),            /* RESERVED (UNUSED)  @ZDR2057*/ 13801003
               2 VSVTOCPT PTR(31);     /* PTR TO VTOC        @ZDR2057*/ 13802003
                                                           /*@Y30LB30*/ 13850003
 /*********************************************************  @Y30LB30*/ 13900003
 /*                                                          @Y30LB30*/ 13950003
 /*  THIS STRUCTURE IS THE ARGUMENT LIST FOR VOLUME SERVICES @Y30LB30*/ 14000003
 /*  FOR THE 'SECCHECK', 'SCRVTOC ', 'GETVTOC ', 'PUTVTOC ', @Y30LB30*/ 14050003
 /*  AND 'RECATLG  ' SERVICE REQUESTS.                       @Y30LB30*/ 14100003
 /*                                                          @Y30LB30*/ 14150003
 /*********************************************************  @Y30LB30*/ 14200003
                                                           /*@Y30LB30*/ 14250003
         DCL 1 VS1AGL BDY (WORD) BASED,                    /*@Y30LB30*/ 14300003
               2 VSHEAD     CHAR(8),   /*RESERVED            @Y30LB30*/ 14350003
               2 VSUCBP     PTR(31),   /*UCB ADDRESS PTR     @Y30LB30*/ 14400003
               2 VSVOLP     PTR(31),   /*VOLUME SER PTR      @Y30LB30*/ 14450003
               2 VSFILEP    PTR(31),   /*DD NAME PTR         @Y30LB30*/ 14500003
               2 VSIOP      PTR(31),   /*VTOC IOCSTR PTR     @Y30LB30*/ 14550003
               2 VSNUMATP   PTR(31),   /*NO. ALT TRACK PTR   @Y30LB30*/ 14600003
               2 VSNXTATP   PTR(31),   /*NEXT ALT TRK PTR    @Y30LB30*/ 14650003
               2 VSCATP     PTR(31),   /*VSAM CAT NAME PTR   @Y30LB30*/ 14700003
               2 VSACBP     PTR(31),   /*VSAM CAT ACB PTR    @Y30LB30*/ 14750003
               2 VSCATDDP   PTR(31),   /*VSAM CAT DDNAME PTR @Y30LB30*/ 14800003
               2 VSPSWDP    PTR(31),   /*VSAM CAT PSWD PTR   @Y30LB30*/ 14850003
               2 VSPFILEP   PTR(31),   /*PASSWORD FILE PTR   @Y30LB30*/ 14900003
               2 VSSERP     PTR(31),   /*NEW SERIAL PTR      @Y30LB30*/ 14950003
               2 VSDEVP     PTR(31),   /*DEVICE TYPE PTR     @Y30LB30*/ 15000003
               2 VSOSERP    PTR(31),   /*OLD SERIAL PTR      @Y30LB30*/ 15050003
               2 VSODEVP    PTR(31),   /*OLD DEVICE PTR      @Y30LB30*/ 15100003
               2 VSSECOPT,             /*SECURITY CHECK OPT  @Y30LB30*/ 15150003
                 3 VSNOVSAM BIT(1),    /*NO VSAM DATA SETS   @Y30LB30*/ 15200003
                 3 VSMASTER BIT(1), /*VSAM MASTER/RACF ALTER @G24LB31*/ 15250042
                 3 VSNONONV BIT(1),    /*NO NON-VSAM D.S.    @Y30LB30*/ 15300003
                 3 VSREAD   BIT(1),  /*NON-VSAM READ ACCESS  @G24LB31*/ 15350042
                 3 VSWRITE  BIT(1),  /*NON-VSAM WRITE ACCESS @G24LB31*/ 15400042
                 3 VSUCTEST BIT(1),    /*RET USER CAT INFO   @Y30LB30*/ 15450003
                 3 VSOPCAT  BIT(1),    /*OPEN USERCAT VS/2   @Y30LB30*/ 15500003
                 3 VSUCMAST BIT(1),  /*VSAM UCAT MASTER/RACF @G24LB31*/ 15550042
               2 VSVTOPT,              /*VTOC FIELD OPTIONS  @Y30LB30*/ 15600003
                 3 VSTIME   BIT(1),    /*VSAM TIME STAMP     @Y30LB30*/ 15650003
                 3 VSALTTRK BIT(1),    /*ALTERNATE TRACKS    @Y30LB30*/ 15700003
                 3 VSVSFLAG BIT(1),    /*VSAM OWNERSHIP FLAG @Y30LB30*/ 15750003
                 3 *        BIT(5),    /*RESERVED            @Y30LB30*/ 15800003
               2 VSCATOPT,             /*RECATALOG OPTIONS   @Y30LB30*/ 15850003
                 3 VSDEVICE BIT(1),    /*DEVICE TYPE         @Y30LB30*/ 15900003
                 3 VSSERIAL BIT(1),    /*VOLUME SERIAL       @Y30LB30*/ 15950003
                 3 VSLIST   BIT(1),    /*LIST NAMES          @Y30LB30*/ 16000003
                 3 *        BIT(5),    /*RESERVED            @Y30LB30*/ 16050003
               2 VSRETURN,             /*INFORMATION RETURN  @Y30LB30*/ 16100003
                 3 VSVSAM   BIT(1),    /*VOL OWNED BY VSAM   @Y30LB30*/ 16150003
                 3 VSUCAT   BIT(1),    /*USER CAT ON VOLUME  @Y30LB30*/ 16200003
                 3 *        BIT(6),    /*RESERVED            @Y30LB30*/ 16250003
               2 VSMSG,                /*MESSAGE OPTIONS     @Y30LB30*/ 16300003
                 3 VSFROMV  BIT(1),    /*FROM VOLUME         @Y30LB30*/ 16350003
                 3 VSTOV    BIT(1),    /*TO VOLUME           @Y30LB30*/ 16400003
                 3 *        BIT(6),    /*RESERVED            @Y30LB30*/ 16450003
               2 VSRESOPT,             /*RESERVE OPTIONS     @Y30LB30*/ 16500003
                 3 VSRES    BIT(1),    /*RESERVE VOLUME      @Y30LB30*/ 16550003
                 3 VSREAL   BIT(1),    /*REAL VOLUME         @Y30LB30*/ 16600003
                 3 *        BIT(6);    /*RESERVED            @Y30LB30*/ 16650003
                                                           /*@Y30LB30*/ 16700003
 /*********************************************************  @Y30LB34*/ 16750003
 /*                                                          @Y30LB34*/ 16800003
 /*  THIS STRUCTURE IS THE ARGUMENT LIST FOR URECAT MACRO    @Y30LB34*/ 16850003
 /*                                                          @Y30LB34*/ 16900003
 /*********************************************************  @Y30LB34*/ 16950003
                                                           /*@Y30LB34*/ 17000003
         DCL 1 RCTAGL BDY(WORD) BASED,                   /*  @Y30LB34*/ 17050003
               2 RCTHEAD CHAR(8),     /*RESERVED             @Y30LB30*/ 17100003
               2 RCTOPT CHAR(2),      /*RECAT OPTIONS        @Y30LB30*/ 17150003
                 3 RCTDEV BIT(1),     /*DEVICE TYPE          @Y30LB30*/ 17200003
                 3 RCTVOL BIT(1),     /*VOLUME SERIAL        @Y30LB30*/ 17250003
                 3 *     BIT(6),      /*RESERVED             @Y30LB34*/ 17300003
               2 * CHAR(2),           /*RESERVED             @Y30LB34*/ 17350003
               2 RCTODEV FIXED(31),   /*OLD DEV TYPE         @Y30LB30*/ 17400003
               2 RCTNDEV FIXED(31),   /*NEW DEV TYPE         @Y30LB30*/ 17450003
               2 RCTOVOL CHAR(6),     /*OLD VOL SER          @Y30LB30*/ 17500003
               2 RCTNVOL CHAR(6),     /*NEW VOL SER          @Y30LB30*/ 17550003
               2 RCTDSET CHAR(44);    /*DATA SET NAME        @Y30LB30*/ 17600003
                                                           /*@Y30LB34*/ 17650003
                                                           /*@Y30LB34*/ 17700003
 /*********************************************************  @Y30LB30*/ 17750003
 /*                                                          @Y30LB30*/ 17800003
 /*  THIS STRUCTURE IS THE ARGUMENT LIST FOR USTAE MACRO     @Y30LB30*/ 17850003
 /*                                                          @Y30LB30*/ 17900003
 /*********************************************************  @Y30LB30*/ 17950003
                                                           /*@Y30LB30*/ 18000003
         DCL 1 STAEPARM BDY(WORD) BASED,                   /*@Y30LB33*/ 18050003
               2 STAHEAD CHAR(8),     /*RESERVED             @Y30LB30*/ 18100003
               2 STAVUCB  PTR(31),    /*VIRTUAL UCB ADDR     @Y30LB30*/ 18150003
               2 STAVVOL  CHAR(6),    /*VIRTUAL VOLSER       @Y30LB30*/ 18200003
               2 *        CHAR(2),    /*RESERVED             @Y30LB30*/ 18250003
               2 STARUCB  PTR(31),    /*REAL UCB ADDR        @Y30LB30*/ 18300003
               2 STARVOL  CHAR(6),    /*REAL VOLSER          @Y30LB30*/ 18350003
               2 *        CHAR(2),    /*RESERVED             @Y30LB30*/ 18400003
               2 STARTTR  CHAR(4),    /*TTR TO THE VTOC      @Y30LB30*/ 18450003
               2 STARTSAV PTR(31),    /*PTR TO RETRY SAVAREA @Y30LB30*/ 18500003
               2 STAEXSAV PTR(31),    /*PTR STAEEXIT SAVAREA @Y30LB35*/ 18550003
               2 STARTADD PTR(31),    /*PTR TO RETRY AREA    @Y30LB30*/ 18600003
               2 STATCB   PTR(31),    /*PTR TO ENQUEUED TCB  @Y30LB35*/ 18650003
               2 STARCVY,             /*TRACKING FLAGS       @Y30LB30*/ 18700003
                 3 STAVMNT  BIT(1),   /*VIRT VOL MOUNTED     @Y30LB30*/ 18750003
                 3 STAVDMNT BIT(1),   /*VIRT VOL DEMOUNTED   @Y30LB30*/ 18800003
                 3 STAVENQ  BIT(1),   /*VOL ENQUEUED         @Y30LB30*/ 18850003
                 3 STAVPOST BIT(1),   /*VIRT VOL POSTED      @Y30LB30*/ 18900003
                 3 STACLEAR BIT(1),   /*REAL UCB CLEARED     @Y30LB30*/ 18950003
                 3 *        BIT(3),   /*RESERVED             @Y30LB30*/ 19000003
               2 STARETRY,            /*RETRY FLAGS          @Y30LB30*/ 19050003
                 3 STAIO05  BIT(1),   /*IO5 RETRY IN CONTROL @Y30LB30*/ 19100003
                 3 STAOFF   BIT(1),   /*STAE CANCELLED (VS1) @Y30LB35*/ 19150003
                 3 STAVTOC BIT(1),    /*OPEN VTOC IN-PROCESS @Z40LB35*/ 19200003
                 3 *        BIT(5),   /*RESERVED             @ZA05112*/ 19250003
               2 STAVTTR CHAR(4);     /*VIRTUAL VTOC TTR     @ZA05112*/ 19300003
                                                           /*@Y30LB37*/ 19350003
 /*********************************************************  @Y30LB37*/ 19400003
 /*                                                          @Y30LB37*/ 19450003
 /*  THIS STRUCTURE IS THE MAPPING OF THE VOLUME LABEL REC   @Y30LB37*/ 19500003
 /*                                                          @Y30LB37*/ 19550003
 /*********************************************************  @Y30LB37*/ 19600003
                                                           /*@Y30LB37*/ 19650003
         DCL 1 VOLLABEL BASED,                                          19700003
               2 VOLKEY   CHAR(4),    /*VOL LABEL KEY        @Y30LB37*/ 19750003
               2 VOLLABI  CHAR(3),    /*LABEL ID 'VOL'       @Y30LB37*/ 19800003
               2 VOLNO    CHAR(1),    /*VOL LABEL SEQ NUMBER @Y30LB37*/ 19850003
               2 VOLSERNO CHAR(6),    /*VOLUME SERIAL        @Y30LB37*/ 19900003
               2 VOLSECTY CHAR(1),    /*RESERVED             @Y30LB37*/ 19950003
               2 VOLVTOC  CHAR(5),    /*CCHHR OF THE VTOC    @Y30LB37*/ 20000003
               2 VOLRESV1 CHAR(25),   /*RESERVED             @Y30LB37*/ 20050003
               2 VOLOWNER CHAR(10),   /*USER NAME AREA       @Y30LB37*/ 20100003
               2 VOLRESV3 CHAR(29);   /*RESERVED             @Y30LB37*/ 20150003
                                                           /*@Y30LB37*/ 20200003
 /*********************************************************  @Y30LB35*/ 20250003
 /*                                                          @Y30LB35*/ 20300003
 /*  THIS STRUCTURE IS THE MAPPING OF THE SVC 82 PARMLIST    @Y30LB35*/ 20350003
 /*                                                          @Y30LB35*/ 20400003
 /*********************************************************  @Y30LB35*/ 20450003
                                                           /*@Y30LB35*/ 20500003
         DCL 1 SV82LIST BDY(WORD) BASED, /*SVC 82 ARG LIST   @Y30LB35*/ 20550003
               2 SV82CODE BIT(8),     /*OPERATION CODE       @Y30LB35*/ 20600003
               2 SV82UCBP PTR(24),    /*UCB ADDRESS          @Y30LB35*/ 20650003
               2 * PTR(31),           /*THIRD ARGUMENT       @Y30LB35*/ 20700003
                 3 SV82DCBP PTR(31),  /*DCB PTR FOR - OPEN   @Y30LB35*/ 20750003
                   4 SV82VOLP PTR(31),/*VOL PTR FOR - POST   @Y30LB35*/ 20800003
               2 SV82TTRP PTR(31),    /*TTR TO VTOC ADDRESS  @Y30LB35*/ 20850003
               2 * PTR(31),           /*FIFTH ARGUMENT       @Y30LB35*/ 20900003
                 3 SV82WRKP PTR(31),  /*ADD RET AREA - CLEAR @Y30LB35*/ 20950003
                     4 SV82DEBP PTR(31); /*ADDR DEB - CLOSE  @Y30LB35*/ 21000003
                                                           /*@Y30LB35*/ 21050003
 /*********************************************************  @Z40LB37*/ 21100003
 /*                                                          @Z40LB37*/ 21150003
 /* SORT ARGUMENT LIST                                       @Z40LB37*/ 21200003
 /*                                                          @Z40LB37*/ 21250003
 /*********************************************************  @Z40LB37*/ 21300003
                                                                        21350003
         DCL 1 SRTAGL BDY(WORD) BASED,   /*                  @Z40LB37*/ 21400003
               2 SRTHEAD CHAR(8),        /*SRTAGL HEADING    @Z40LB37*/ 21450003
               2 SRTADDR PTR(31),        /*PTR TO FIRST      @Z40LB37*/ 21500003
                                         /*ELEMENT           @Z40LB37*/ 21550003
               2 SRTNUM FIXED(31),       /*NUMBER OF         @Z40LB37*/ 21600003
                                         /*ELEMENTS          @Z40LB37*/ 21650003
               2 SRTLEN FIXED(31),       /*LENGTH OF         @Z40LB37*/ 21700003
                                         /*ELEMENT           @Z40LB37*/ 21750003
               2 SRTPOSIT FIXED(31),     /*SORT FIELD        @Z40LB37*/ 21800003
                                         /*STARTING POSITION @Z40LB37*/ 21850003
               2 SRTFLDLN FIXED(31),     /*SORT FIELD LENGTH @Z40LB37*/ 21900003
               2 SRTWORKP PTR(31);       /*WORK AREA ADDRESS @Z40LB37*/ 21950003
                                                                        22000003
 /*********************************************************  @Z40LB37*/ 22050003
 /*                                                          @Z40LB37*/ 22100003
 /* ULOCATE DATA SET RETURNED INFORMATION AREA               @Z40LB37*/ 22150003
 /*                                                          @Z40LB37*/ 22200003
 /*********************************************************  @Z40LB37*/ 22250003
                                                                        22300003
         DCL 1 LCTINFO BDY(WORD) BASED,  /*                  @Z40LB37*/ 22350003
               2 LCTHEAD  CHAR(8),       /*LCTINFO HEADING   @Z40LB37*/ 22400003
               2 LCTMULVC FIXED(31),     /*NUMBER OF VOLUMES @Z40LB37*/ 22450003
               2 LCTACBP  PTR(31),       /*PTR TO THE ACB    @Z40LB37*/ 22500003
               2 LCTCREAT CHAR(4),      /*VSAM CREATION DATE @Z40LB37*/ 22550003
               2 LCTEXPIR CHAR(4),       /*VSAM EXPIRATION   @Z40LB37*/ 22600003
                                         /*DATE              @Z40LB37*/ 22650003
               2 LCTOWNER CHAR(8),      /*OWNER NAME         @Z40LB37*/ 22700003
               2 LCTFLAGS,              /*RETURN FLAGS       @Z40LB37*/ 22750003
                 3 LCTVSCAT BIT(1),     /*VSAM CATALOG ENTRY @Z40LB37*/ 22800003
                 3 *        BIT(7);     /*RESERVED           @Z40LB37*/ 22850003
                                                                        22900003
 /*********************************************************  @Z40LB37*/ 22950003
 /*                                                          @Z40LB37*/ 23000003
 /* UUNCATLG ARGUMENT LIST                                   @Z40LB63*/ 23050003
 /*                                                          @Z40LB37*/ 23100003
 /*********************************************************  @Z40LB37*/ 23150003
                                                                        23200003
         DCL 1 UCTAGL BDY(WORD) BASED,   /*                  @Z40LB63*/ 23250003
               2 UCTHEAD  CHAR(8),       /*UCTAGL HEADING    @Z40LB63*/ 23300003
               2 UCTDSN   CHAR(44),      /*DATA SET NAME     @Z40LB63*/ 23350003
               2 UCTACBP  PTR(31),       /*PTR TO CAT ACB    @Z40LB63*/ 23400003
               2 UCTVOLP  PTR(31),       /*PTR TO VOLUME     @Z40LB30*/ 23450003
                                         /*LIST              @Z40LB30*/ 23500003
               2 UCTDD    CHAR(8),       /*DDNAME            @Z40LB63*/ 23550003
               2 UCTFLAGS,               /*OPTION FLAGS      @Z40LB63*/ 23600003
                 3 UCTVSCAT BIT(1),      /*VSAM CATALOG      @Z40LB63*/ 23650003
                 3 *        BIT(7);      /*RESERVED          @Z40LB63*/ 23700003
                                                                        23750003
 /*********************************************************  @Z40LB37*/ 23800003
 /*                                                          @Z40LB37*/ 23850003
 /* ARGUMENT LIST FOR SELECTING A DDNAME                     @Z40LB37*/ 23900003
 /*                                                          @Z40LB37*/ 23950003
 /*********************************************************  @Z40LB37*/ 24000003
                                                                        24050003
         DCL 1 SELAGL BDY(WORD) BASED,  /*                   @Z40LB37*/ 24100003
               2 SELHEAD CHAR(8),       /*SELAGL HEADING     @Z40LB37*/ 24150003
               2 SELUCBP PTR(31),       /*UCB POINTER        @Z40LB37*/ 24200003
               2 SELDDNP PTR(31),       /*DDNAME POINTER     @Z40LB37*/ 24250003
               2 SELVOL  CHAR(6),       /*VOLUME SERIAL      @Z40LB37*/ 24300003
               2 SELFLAGS,              /*OPTION FLAGS       @Z40LB37*/ 24350003
                 3 *     BIT(8);        /*RESERVED           @Z40LB37*/ 24400003
                                                                        24450003
 /*********************************************************  @Z40LB37*/ 24500003
 /*                                                          @Z40LB37*/ 24550003
 /* ARGUMENT LIST FOR CONVERT DATE PROCEDURE                 @Z40LB35*/ 24600003
 /*                                                          @Z40LB37*/ 24650003
 /*********************************************************  @Z40LB37*/ 24700003
                                                                        24750003
         DCL 1 DATESAGL BDY(WORD) BASED,                                24800003
               2 DATHEAD  CHAR(8),     /*IDENTIFIER HEADER   @Z40LB35*/ 24850003
               2 DATDATE  FIXED(31),   /*DATE TO CONVERT     @Z40LB35*/ 24900003
               2 DATDAYS  FIXED(31),   /*DAYS TO ADJUST      @Z40LB35*/ 24950003
               2 DATRETRN PTR(31),     /*RETURN PTR OF DATE  @Z40LB35*/ 25000003
               2 DATESOPT BIT(8),      /*OPTIONS FLAGS       @Z40LB35*/ 25050003
                 3 DATADD   BIT(1),    /*ADD DAYS TO DATE    @Z40LB35*/ 25100003
                 3 DATSUB   BIT(1),    /*SUBTRACT DAYS       @Z40LB35*/ 25150003
                 3 DATDTEOP BIT(1),    /*ADJUST DAYS         @Z40LB35*/ 25200003
                 3 DATDAYOP BIT(1),    /*CONVERT DATE ONLY   @Z40LB35*/ 25250003
                 3 *        BIT(4);    /*RESERVED            @Z40LB35*/ 25300003
                                                                        25350003
 /*********************************************************  @Z40LB35*/ 25400003
 /*                                                          @Z40LB37*/ 25450003
 /* SELECTDS DATA SET ARGUMENT LIST                          @Z40LB35*/ 25500003
 /*                                                          @Z40LB35*/ 25550003
 /*********************************************************  @Z40LB37*/ 25600003
                                                                        25650003
         DCL 1 VS3AGL BDY(WORD) BASED,                                  25700003
               2  VS3HEAD  CHAR(8),    /*RESERVED            @Z40LB35*/ 25750003
               2  VS3LISTP PTR(31),    /*PTR LIST ADDR       @Z40LB35*/ 25800003
               2  VS3EXDSP PTR(31),    /*PTR EXCLUDE DS      @Z40LB35*/ 25850003
               2  VS3LEVP  PTR(31),    /*PTR LEVEL QUAL      @Z40LB35*/ 25900003
               2  VS3LEVLN FIXED(15),  /*LENGTH OF QUAL      @Z40LB35*/ 25950003
               2  VS3AST   FIXED(15),  /*OFFSET ASTERISK     @Z40LB35*/ 26000003
               2  VS3EXPIR PTR(31),    /*PTR EXPIRATION DATE @Z40LB35*/ 26050003
               2  VS3CREAT PTR(31),    /*PTR CREATION DATE   @Z40LB35*/ 26100003
               2  VS3UCBP  PTR(31),    /*PTR UCB             @Z40LB35*/ 26150003
               2  VS3DEV   CHAR(4),    /*DEVICE TYPE         @Z40LB35*/ 26200003
               2  VS3POOL  CHAR(4),    /*STORAGE POOL ID     @Z40LB35*/ 26250003
               2  VS3VOL   CHAR(6),    /*SERIAL NUMBER       @Z40LB35*/ 26300003
               2  VS3DD    CHAR(8),    /*DDNAME FOR OPEN     @Z40LB35*/ 26350003
               2  VS3FLAGS,            /*FLAGS               @Z40LB35*/ 26400003
                  3 VS3STAT  BIT(1),   /*RETURN VSDSTAT      @Z40LB35*/ 26450003
                  3 VS3USAGE BIT(1),   /*RETURN VSDUSAGE     @Z40LB35*/ 26500003
                  3 VS3SCR   BIT(1),   /*RETURN VSDSCR       @Z40LB35*/ 26550003
                  3 VS3UNCAT BIT(1),   /*UNCAT SELECTION     @Z40LB35*/ 26600003
                  3 VS3SYSNM BIT(1),   /*SYSTEM NAME         @Z40LB35*/ 26650003
                                       /*SELECTION           @Z40LB35*/ 26700003
                  3 *        BIT(3);   /*RESERVED            @Z40LB35*/ 26750003
                                                                        26800003
 /*********************************************************  @YD00175*/ 26850003
 /*                                                          @YD00175*/ 26900003
 /*   SELECTED DATA SET ARRAY                                @Z40LB35*/ 26950003
 /*                                                          @Z40LB35*/ 27000003
 /*********************************************************  @Z40LB35*/ 27050003
                                                                        27100003
         DCL ELEMENT FIXED(31);        /*ELEMENT COUNTER     @Z40LB35*/ 27150003
                                                                        27200003
         DCL 1 VSDVTOC BASED(VSDSPACE),/*LSPACE INFO BLOCK   @Z40LB35*/ 27250003
               2 *        CHAR(6),     /*RESERVED            @Z40LB35*/ 27300003
               2 VSDFRCYL CHAR(4),     /*TOTAL FREE CYL      @Z40LB35*/ 27350003
               2 *        CHAR(1),     /*RESERVED            @Z40LB35*/ 27400003
               2 VSDFRTRK CHAR(4),     /*TOTAL FREE TRACKS   @Z40LB35*/ 27450003
               2 *        CHAR(1),     /*RESERVED            @Z40LB35*/ 27500003
               2 VSDFREXT CHAR(4),     /*TOTAL FREE EXTENTS  @Z40LB35*/ 27550003
               2 *        CHAR(1),     /*RESERVED            @Z40LB35*/ 27600003
               2 VSDFRCCL CHAR(4);     /*LARGEST CONT CYL    @Z40LB35*/ 27650003
                                                                        27700003
         DCL 1 VSDSTAT BASED(ADDR(VSDVARY(ELEMENT))) BDY(WORD),         27750003
               2 VSDCREAT FIXED(31),   /*CREATION DATE       @Z40LB35*/ 27800003
               2 VSDEXPIR FIXED(31),   /*EXPIRATION DATE     @Z40LB35*/ 27850003
               2 VSDOWNER CHAR(8),     /*OWNER OF D. S.      @Z40LB35*/ 27900003
               2 VSDSFLG1 BIT(8),      /*FLAG BYTE           @Z40LB35*/ 27950003
                 3 VSDVTOCC BIT(1),    /*CREATION DATE VTOC  @Z40LB35*/ 28000003
                 3 VSDVTOCE BIT(1),    /*EXPIRATION DATE     @Z40LB35*/ 28050003
                                       /*VTOC                @Z40LB35*/ 28100003
                 3 VSDVSAMC BIT(1),    /*CREATION DATE VSAM  @Z40LB35*/ 28150003
                 3 VSDVSAME BIT(1),    /*EXPIRATION DATE     @Z40LB35*/ 28200003
                                       /*VSAM                @Z40LB35*/ 28250003
                 3 VSDCATLG BIT(1),    /*DSN IS CATALOGED    @Z40LB35*/ 28300003
                 3 VSDCVSAM BIT(1),    /*CATLG IN VSAM       @Z40LB35*/ 28350003
                 3 *        BIT(2),    /*RESERVED            @Z40LB35*/ 28400003
               2 VSDFLG2 BIT(8),       /*FLAG BYTE           @Z40LB35*/ 28450003
                 3 VSDPWR   BIT(1),    /*READ PROTECTED      @Z40LB35*/ 28500003
                 3 VSDPWW   BIT(1),    /*WRITE PROTECTED     @Z40LB35*/ 28550003
                 3 VSDPROT  BIT(1),    /*DSN IS PROTECTED    @Z40LB35*/ 28600003
                 3 VSDERROR BIT(1),    /*CATALOG ERROR       @Z40LB35*/ 28650003
                 3 VSDRACF  BIT(1),    /*RACF PROTECTED      @G24LB31*/ 28660042
                 3 *        BIT(3),    /*RESERVED            @G24LB31*/ 28700042
         /*THE FOLLOWING PORTION IS THE CALLERS WORK AREA    @Z40LB35*/ 28750003
               2 VSDCRE   CHAR(2),     /*CREATION DATE       @Z40LB35*/ 28800003
               2 VSDEXP   CHAR(2),     /*EXPIRATION DATE     @Z40LB35*/ 28850003
               2 VSDCAT   CHAR(3),     /*CATALOG INFO        @Z40LB35*/ 28900003
               2 VSDPRTC  CHAR(4),     /*PROTECTION INFO     @G24LB31*/ 28950042
               2 *        CHAR(3);     /*UNUSED, BDY ALIGN   @G24LB31*/ 28960042
                                                                        29000003
         DCL 1 VSDSCR BASED(ADDR(VSDVARY(ELEMENT))) BDY(WORD),          29050003
               2 VSDACBPT PTR(31),     /*ACB PTR TO VSAM CAT @Z40LB35*/ 29100003
               2 VSDSCRFL BIT(8),      /*FLAG BYTE           @Z40LB35*/ 29150003
                 3 VSDCATLC BIT(1),    /*DATA SET IN CATLG   @Z40LB35*/ 29200003
                 3 VSDVSAM  BIT(1),    /*DSN IN VSAM CATLG   @Z40LB35*/ 29250003
                 3 *        BIT(6),    /*RESERVED            @Z40LB35*/ 29300003
               2 *         CHAR(3);    /*RESERVED            @Z40LB35*/ 29350003
                                                                        29400003
                                                                        29450003
         DCL 1 VSDUSAGE BASED(ADDR(VSDVARY(ELEMENT))) BDY(WORD),        29500003
               2 VSDTRKS  FIXED(15),   /*TRACKS ALLOCATED    @Z40LB35*/ 29550003
               2 VSDFTRK  FIXED(15),   /*TRACKS FREE         @Z40LB35*/ 29600003
               2 VSDSECAL FIXED(31),   /*SECONDARY ALLOC     @Z40LB35*/ 29650003
               2 VSDEXTS  FIXED(8),    /*NUMBER EXTENTS      @Z40LB35*/ 29700003
               2 VSDDORG  BIT(8),      /*FLAG BYTE           @Z40LB35*/ 29750003
                 3 VSDOPO   BIT(1),    /*PARTITIONED ORG     @Z40LB35*/ 29800003
                 3 VSDOPS   BIT(1),    /*PHYSICAL SEQUENTIAL @Z40LB35*/ 29850003
                 3 VSDOUN   BIT(1),    /*UNKNOWN ORG         @Z40LB35*/ 29900003
                 3 VSDODA   BIT(1),    /*DIRECT ACCESS ORG   @Z40LB35*/ 29950003
                 3 VSDOIS   BIT(1),    /*INDEX SEQ ORG       @Z40LB35*/ 30000003
                 3 VSDOU    BIT(1),    /*UNMOVEABLE          @Z40LB35*/ 30050003
                 3 *        BIT(2),    /*RESERVED            @Z40LB35*/ 30100003
               2 VSDALLOC BIT(8),      /*FLAG BYTE           @Z40LB35*/ 30150003
                 3 VSDACYL  BIT(1),    /*CYLINDER ALLOC      @Z40LB35*/ 30200003
                 3 VSDATRK  BIT(1),    /*TRACK ALLOC         @Z40LB35*/ 30250003
                 3 VSDABLK  BIT(1),    /*BLOCK ALLOC         @Z40LB35*/ 30300003
                 3 VSDABSTR BIT(1),    /*ABSOLUTE TRACKS     @Z40LB35*/ 30350003
                 3 *        BIT(4),    /*RESERVED            @Z40LB35*/ 30400003
               2 VSDUSEF BIT(8),       /*FLAG BYTE           @Z40LB35*/ 30450003
                 3 VSDCALFR BIT(1),    /*UNABLE CAL. SPACE   @Z40LB35*/ 30500003
                 3 *        BIT(7),    /*RESERVED            @Z40LB35*/ 30550003
         /*THE FOLLOWING PORTION IS THE CALLERS WORK AREA    @Z40LB35*/ 30600003
               2 VSDSCAL  CHAR(4),     /*SECONDARY ALLOC     @Z40LB35*/ 30650003
               2 VSDDSORG CHAR(3),     /*DSORG               @Z40LB35*/ 30700003
                 3 *      CHAR(2),     /*RESERVED            @Z40LB35*/ 30750003
                 3 VSDDSOR3 CHAR(1),   /*DSORG INFO          @Z40LB35*/ 30800003
               2 VSDALLC  CHAR(5),     /*TOTAL TRKS ALLOC    @Z40LB35*/ 30850003
               2 VSDFREE  CHAR(4);     /*FREE TRACKS         @Z40LB35*/ 30900003
                                                                        30950003
         DCL 1 VSDBLOCK BDY(WORD) BASED,                                31000003
               2 VSDELEM  FIXED(31),   /*NUMBER DSN'S        @Z40LB35*/ 31050003
               2 VSDVTOCS FIXED(31),   /*NUMBER TRKS IN VTOC @Z40LB35*/ 31100003
               2 VSDFMT0  FIXED(31),   /*NUMBER FMT0 IN VTOC @Z40LB35*/ 31150003
               2 VSDSPACE PTR(31),     /*PTR TO LSPACE INFO  @Z40LB35*/ 31200003
               2 VSDARRAY(*) BDY(WORD),                                 31250003
                 3 VSDVOLCT FIXED(31), /*VOLUME COUNT        @Z40LB35*/ 31300003
                 3 VSDDSN  CHAR(44),   /*DSN                 @Z40LB35*/ 31350003
                 3 VSDVARY CHAR(MAX(LENGTH(VSDSTAT),                    31400003
                       LENGTH(VSDSCR),LENGTH(VSDUSAGE)));  /*@Z40LB35*/ 31450003
                                                                        31500003
 /*********************************************************  @YD00175*/ 31550003
 /*                                                          @YD00175*/ 31600003
 /*   KEYWORD ARGUMENT DECLARATIONS FOR ADAPTORS AND         #Y30LB30*/ 31650003
 /*   VOLUME SERVICES                                        #Y30LB30*/ 31700003
 /*                                                          #Y30LB30*/ 31750003
 /*********************************************************  #Y30LB30*/ 31800003
                                                           /*#Y30LB30*/ 31850003
         DCL SECCHECK CHAR(8) INIT('SECCHECK');            /*#Y30LB30*/ 31900003
                                       /*ARGUMENT FOR SECURITY CHECK */ 31950003
         DCL SCRVTOC  CHAR(8) INIT('SCRVTOC ');            /*#Y30LB30*/ 32000003
                                       /*ARGUMENT FOR SCRATCH        */ 32050003
         DCL GETVTOC  CHAR(8) INIT('GETVTOC ');            /*@Y30LB30*/ 32100003
                                       /*ARGURMENT FOR GET VTOC      */ 32150003
         DCL PUTVTOC  CHAR(8) INIT('PUTVTOC ');            /*@Y30LB30*/ 32200003
                                       /*ARGUMENT FOR PUT VTOC       */ 32250003
         DCL RECATLG  CHAR(8) INIT('RECATLG ');            /*@Y30LB30*/ 32300003
                                       /*ARGUMENT FOR RECATALOG      */ 32350003
         DCL INITVOL  CHAR(8) INIT('INITVOL ');            /*@Y30LB30*/ 32400003
                                       /*ARGUMENT FOR INIT VOLUME    */ 32450003
         DCL CHECK    CHAR(8) INIT('CHECK   ');            /*@Y30LB30*/ 32500003
                                       /*ARGUMENT FOR CHECK UCB      */ 32550003
         DCL POSTUCB  CHAR(8) INIT('POSTUCB ');            /*@Y30LB30*/ 32600003
                                       /*ARGUMENT FOR POST  UCB      */ 32650003
         DCL GET      CHAR(8) INIT('GET     ');            /*@Y30LB30*/ 32700003
                                       /*ARGUMENT FOR GET EXCP RECORD*/ 32750003
         DCL PUT      CHAR(8) INIT('PUT     ');            /*@Y30LB30*/ 32800003
                                       /*ARGUMENT FOR PUT EXCP RECORD*/ 32850003
         DCL CLOSE    CHAR(8) INIT('CLOSE   ');            /*@Y30LB30*/ 32900003
                                       /*ARGUMENT FOR CLOSE EXCP DCB */ 32950003
         DCL OPEN     CHAR(8) INIT('OPEN    ');            /*@Y30LB30*/ 33000003
                                       /*ARGUMENT FOR OPEN EXCP DCB  */ 33050003
         DCL RVOPENR  CHAR(8) INIT('OPENR   ');            /*@ZA11014*/ 33057000
         DCL RVRDCNT  CHAR(8) INIT('READCNT ');            /*@ZA11014*/ 33064000
         DCL RVREADKD CHAR(8) INIT('READKD  ');            /*@ZA11014*/ 33071000
         DCL RVSPACCR CHAR(8) INIT('SPACCR  ');            /*@ZA11014*/ 33078000
         DCL RVFWRITE CHAR(8) INIT('FWRITE  ');            /*@ZA11014*/ 33085000
         DCL RVWRITER CHAR(8) INIT('WRITEREC');            /*@ZA11014*/ 33092000
         DCL PUTLABEL CHAR(8) INIT('PUTLABEL');            /*@Y30LB30*/ 33100003
                                       /*PUTLABEL VS02 REQUEST       */ 33150003
         DCL GETLABEL CHAR(8) INIT('GETLABEL');            /*@Y30LB30*/ 33200003
                                       /*GETLABEL VS02 REQUEST       */ 33250003
         DCL CANCEL   CHAR(8) INIT('CANCEL  ');            /*@Y30LB37*/ 33300003
                                       /*CANCEL REQUEST FOR USTAE    */ 33350003
         DCL SET      CHAR(8) INIT('SET     ');            /*@Y30LB37*/ 33400003
                                       /*SET REQUEST FOR USTAE       */ 33450003
         DCL SELECTX  CHAR(8) INIT('SELECTX ');            /*@YD00175*/ 33500003
                                       /*SELECT REQUEST FOR UMSSUNIT */ 33550003
         DCL CHANGEX  CHAR(8) INIT('CHANGEX ');            /*@YD00175*/ 33600003
                                       /*CHANGE REQUEST FOR UMSSUNIT */ 33650003
         DCL SELECTDD CHAR(8) INIT('SELECTDD');            /*@Z40LB37*/ 33700003
                                       /*SELECTDD REQUEST    @Z40LB37*/ 33750003
                                       /*FOR UMSSUNIT        @Z40LB37*/ 33800003
         DCL SELECTDS CHAR(8) INIT('SELECTDS');            /*@Z40LB37*/ 33850003
                                       /*SELECTDS REQUEST    @Z40LB37*/ 33900003
                                       /*FOR IDCVS03         @Z40LB37*/ 33950003
 /*                                                          @Y40LB63*/ 34000003
 /*********************************************************  @Y40LB63*/ 34050003
 /*                                                          @Y40LB63*/ 34100003
 /*   KEYWORD ARGUMENT DECLARATIONS FOR USSC MACRO FOR       @Y40LB63*/ 34150003
 /*   MSS RECOVERY                                           @Y40LB63*/ 34200003
 /*                                                          @Y40LB63*/ 34250003
 /*********************************************************  @Y40LB63*/ 34300003
         DCL TBLREST CHAR(8) INIT('TBLREST ');             /*@Y40LB63*/ 34350003
                                       /*COPY TABLES FOR     @Y40LB63*/ 34400003
                                       /*INTERNAL TABLE      @Y40LB63*/ 34450003
                                       /*RESTORE             @Y40LB63*/ 34500003
         DCL NULLIFYC CHAR(8) INIT ('NULLIFYC');           /*@Y40LB63*/ 34550003
                                       /*NULLIFYC ORDER WHICH        */ 34600003
                                       /*ELEMINATES ALL TRACE        */ 34650003
                                       /*OF ACTIVE OR INACTIVE       */ 34700003
                                       /*VOLUME OR A SCRATCH CART    */ 34750003
         DCL RDMSC CHAR(8) INIT ('RDMSC   ');              /*@Y40LB63*/ 34800003
                                       /*QUERY ORDER TO READ MSC     */ 34850003
                                       /*STORAGE             @Y40LB63*/ 34900003
         DCL RDMSCTBL CHAR(8) INIT ('RDMSCTBL');           /*@Y40LB63*/ 34950003
                                       /*QUERY ORDER TO READ MSC     */ 35000003
                                       /*TABLES              @Y40LB63*/ 35050003
         DCL RDCARTLB CHAR(8) INIT ('RDCARTLB');           /*@Y40LB63*/ 35100003
                                       /*QUERY ORDER TO READ A       */ 35150003
                                       /*CARTRIDGE LABEL     @Y40LB63*/ 35200003
         DCL AUDITCEL CHAR(8) INIT('AUDITCEL');            /*@Y40LB63*/ 35250003
                                       /*QUERY ORDER TO DO A CELL    */ 35300003
                                       /*AUDIT OF THE MSF    @Y40LB63*/ 35350003
         DCL RDSTGAD CHAR(8) INIT ('RDSTGAD ');            /*@Y40LB63*/ 35400003
                                       /*QUERY ORDER TO READ STAG-   */ 35450003
                                       /*ING ADAPTER STORAGE @Y40LB63*/ 35500003
         DCL MODIFYC CHAR(8) INIT ('MODIFYC ');            /*@G24LB40*/ 35510042
                                       /*MODIFY CARTRIDGE    @G24LB40*/ 35520042
                                       /*ORDER               @G24LB40*/ 35530042
 %                                                         /*#Y30LB30*/ 35550003
 /*********************************************************  @Y30LB30*/ 35600003
 /*                                                          @Y30LB30*/ 35650003
 /*                  SYMBOLIC DEFINITIONS                    @Y30LB30*/ 35700003
 /*                                                          @Y30LB30*/ 35750003
 /*********************************************************  @Y30LB30*/ 35800003
                                                           /*@Y30LB30*/ 35850003
         DCL (RCNRECAT,                /*DATA SET NOT RECAT  @Y30LB30*/ 35900003
              RCVVIERR,                /*VVIC ERROR          @Y30LB35*/ 35950003
              RCDSERR,                 /*ERR FROM IDCVS03    @Z40LB35*/ 36000003
              RCDSCLS,                 /*ERR IDCVS03 CLOSE   @Z40LB35*/ 36050003
              RCNLOCAT,                /*NOT LOCATED IDCSA07 @Z40LB37*/ 36100003
              RCNCLOSE) FIXED;         /*CLOSE ERROR         @Y30LB35*/ 36150003
                                                           /*@Y30LB30*/ 36200003
 % RCNLOCAT = 8;                       /*DATA SET NOT LOCAT  @Y40LB37*/ 36250003
 % RCNRECAT = 8;                       /*DATA SET NOT RECAT  @Y30LB30*/ 36300003
 % RCNCLOSE = 8;                       /*DATA SET NOT CLOSED @Y30LB30*/ 36350003
 % RCVVIERR = 12;                      /*ERR CODE FROM VVIC  @Y30LB30*/ 36400003
 % RCDSERR  = 8;                       /*ERR FROM IDCVS03    @Z40LB35*/ 36450003
 % RCDSCLS  = 12;                      /*ERR IDCVS03 CLOSE   @Z40LB35*/ 36500003
 % NULLAREA = '''''B';                 /*USED TO CLEAR PARM  @Y30LB30*/ 36550003
./  ADD  SSI=63380271,NAME=IDCDF11
 /*********************************************************  @Z40LB61*/ 00050003
 /*                                                          @Z40LB61*/ 00100003
 /* MSS HARDWARE TABLE MAPPINGS FOR AMS (VS2):     3/31/76   @ZD00051*/ 00150003
 /*     (1) STAGING ADAPTER TABLES                           @Z40LB61*/ 00200003
 /*     (2) MASS STORAGE CONTROL TABLES                      @Z40LB61*/ 00250003
 /*                                                          @Z40LB61*/ 00300003
 /* CHANGE ACTIVITY -                                        @Z40LB61*/ 00350003
 /*     ZD00051                                              @ZD00051*/ 00400003
 /*                                                          @Z40LB61*/ 00450003
 /*********************************************************  @Z40LB61*/ 00500003
                                                                        00550003
     /* STAGING ADAPTER VIRTUAL ADDRESS DIRECTORY MAPPING    @Z40LB61*/ 00600003
     DCL VADPTR1   PTR(31);            /*PTR TO 1ST VAD WORD @Z40LB61   00650003
                                         FOR 1 SA INTERFACE  @Z40LB61*/ 00700003
     DCL VADPTR2   PTR(31);            /*PTR TO 2ND VAD WORD @Z40LB61   00750003
                                         FOR 1 SA INTERFACE  @Z40LB61*/ 00800003
     DCL 1 VADWORD1 (64) BDY(WORD) BASED(VADPTR1),                      00850003
           3 VADVFM    BIT(8),         /*VIRTUAL FILE MASK   @Z40LB61*/ 00900003
           3 VADVVA    FIXED(8),       /*VIRTUAL VOL ADDRESS @Z40LB61*/ 00950003
           3 VADRUA    FIXED(8),       /*REAL UNIT ADDRESS   @Z40LB61*/ 01000003
             5 VADEDI    BIT(1),       /*EXPECTED DEV INTRPT @ZD00051*/ 01050003
             5 VADCCR    BIT(1),       /*CHANNEL CMD RETRY   @Z40LB61*/ 01100003
             5 VADUCS    BIT(1),       /*UNIT CHECK SIO      @ZD00051*/ 01110003
           3 VADLINK   FIXED(8);       /*LINK POINTER        @Z40LB61*/ 01150003
     DCL 1 VADWORD2 (64) BDY(WORD) BASED(VADPTR2),                      01200003
           3 VADRPNUM  FIXED(8),       /*REAL PAGE NUMBER    @Z40LB61*/ 01250003
             5 VADMOD11  BIT(1),       /*VUA FOR 2ND HALF OF @Z40LB61   01300003
                                         A 3330 MOD 11       @Z40LB61*/ 01350003
           3 VADLUA    FIXED(8),       /*LOGICAL UNIT ADDR   @Z40LB61*/ 01400003
             5 VADUDE    BIT(1),       /*UNSUPPRESSABLE D.E. @ZD00051*/ 01410003
           3 VADPOH    FIXED(8),       /*PAGE OFFSET/HEAD    @Z40LB61*/ 01450003
           3 VADFLAGS  BIT(8),         /*ATTRIBUTE FLAGS     @Z40LB61*/ 01500003
             5 VADVRW    BIT(1),       /*VIRTUAL READ/WRITE  @Z40LB61*/ 01550003
             5 VADVWG    BIT(1),       /*VIRTUAL WRITE GATE  @Z40LB61*/ 01600003
             5 VADVWI    BIT(1),       /*VIRT. WRITE INHIBIT @Z40LB61*/ 01650003
             5 VADRR     BIT(1),       /*REAL RESERVE        @Z40LB61*/ 01700003
             5 VADRB     BIT(1),       /*REAL BUSY           @Z40LB61*/ 01750003
             5 VADRDED   BIT(1),       /*REAL DEVICE END DUE @Z40LB61*/ 01800003
             5 VADVSI    BIT(1),       /*VIRTUAL SEEK ISSUED @Z40LB61*/ 01850003
             5 VADRM     BIT(1);       /*REAL MODE           @Z40LB61*/ 01900003
                                                                        01950003
     /* STAGING ADAPTER VIRTUAL VOLUME INFO TABLE MAPPING    @Z40LB61*/ 02000003
     DCL VVITPTR1  PTR(31);            /*PTR TO VVIT BYTE#1  @Z40LB61*/ 02050003
     DCL VVITPTR2  PTR(31);            /*PTR TO VVIT BYTE#2  @Z40LB61*/ 02100003
     DCL 1 VVITBYT1 (256) BIT(8) BASED(VVITPTR1),                       02150003
           3 VVITDEDA  BIT(1),         /*DEVICE END DUE      @ZD00051   02200003
                                         INTERFACE A         @ZD00051*/ 02210003
           3 VVITDEDB  BIT(1),         /*DEVICE END DUE      @Z40LB61   02250003
                                         INTERFACE B         @Z40LB61*/ 02300003
           3 VVITDEDC  BIT(1),         /*DEVICE END DUE      @Z40LB61   02350003
                                         INTERFACE C         @Z40LB61*/ 02400003
           3 VVITDEDD  BIT(1),         /*DEVICE END DUE      @Z40LB61   02450003
                                         INTERFACE D         @Z40LB61*/ 02500003
           3 VVITNBM   BIT(1),         /*NOT BUSY MESSAGE    @Z40LB61*/ 02550003
           3 VVITFR    BIT(1),         /*FIRST RESERVE       @Z40LB61*/ 02600003
           3 VVITVVWI  BIT(1),         /*VIRT. WRITE INHIBIT @Z40LB61*/ 02650003
           3 VVITVVS   BIT(1);         /*VIRTUAL VOL SHARED  @Z40LB61*/ 02700003
     DCL 1 VVITBYT2 (256) BIT(8) BASED(VVITPTR2),                       02750003
           3 VVITCC    BIT(1),         /*CONTINGENT CONNECT. @Z40LB61*/ 02800003
           3 VVITVVB   BIT(1),         /*VIRTUAL VOL BUSY    @Z40LB61*/ 02850003
           3 VVITINTF  BIT(2),         /*INTERFACE ID        @Z40LB61*/ 02900003
           3 VVITRSVD  BIT(1),         /*VOLUME RESERVED     @Z40LB61*/ 02950003
           3 VVITPCDB  BIT(1),         /*PACK CHANGE DUE     @Z40LB61   03000003
                                         INTERFACE B         @Z40LB61*/ 03050003
           3 VVITPCDC  BIT(1),         /*PACK CHANGE DUE     @Z40LB61   03100003
                                         INTERFACE C         @Z40LB61*/ 03150003
           3 VVITPCDD  BIT(1);         /*PACK CHANGE DUE     @Z40LB61   03200003
                                         INTERFACE D         @Z40LB61*/ 03250003
                                                                        03300003
     /* STAGING ADAPTER PAGE STATUS TABLE MAPPING            @Z40LB61*/ 03350003
     DCL PSTPTR    PTR(31);            /*PTR TO PST ENTRY    @Z40LB61   03400003
                                         FOR ONE REAL PAGE   @Z40LB61*/ 03450003
     DCL 1 PST BDY(WORD) BASED(PSTPTR),                                 03500003
           3 PSTVVA    FIXED(8),       /*VIRTUAL VOL ADDRESS @Z40LB61*/ 03550003
           3 PSTVPNUM  FIXED(8),       /*VIRTUAL PAGE NUMBER @Z40LB61*/ 03600003
           3 PSTCYLV   BIT(8),         /*MAP OF CYL'S VALID  @Z40LB61*/ 03650003
           3 PSTCYLW   BIT(8);         /*MAP OF CYL'S WRIT'N @Z40LB61*/ 03700003
                                                                        03750003
     /* STAGING ADAPTER LOGICAL-TO-REAL TABLE MAPPING        @Z40LB61*/ 03800003
     DCL LTRPTR    PTR(31);            /*PTR TO LTR TABLE    @Z40LB61*/ 03850003
     DCL 1 LTR BASED(LTRPTR),                                           03900003
           3 LTRRUA(16) FIXED(8),      /*REAL UNIT ADDRESSES @Z40LB61*/ 03950003
             5 LTRMOD11  BIT(1);       /*UNIT IS SECOND HALF @Z40LB61   04000003
                                         OF A 3330 MOD 11    @Z40LB61*/ 04050003
 @EJECT;                                                    /*@Z40LB61*/04100003
    /* MASS STORAGE CONTROL VERIFICATION TABLE               @Z40LB61*/ 04150003
    /* RECORD 1 (VERIFY MISCELLANEOUS DATA) MAPPING          @Z40LB61*/ 04200003
    DCL VTR1PTR PTR(31);             /* VTABLER1 PTR         @Z40LB65*/ 04250003
    DCL 1 VTABLER1 BDY(WORD) BASED(VTR1PTR),                            04300003
         2 VTPACKID CHAR(8),            /* TABLE PACK ID     @Z40LB65*/ 04350003
         2 * CHAR(8) BDY(HWORD),                                        04400003
          3 VTIMPLS FIXED(16),          /* IMPL/SEQUENCE NUM @Z40LB65*/ 04450003
          3 * CHAR(6),                  /* RESERVED          @Z40LB65*/ 04500003
         2 VTTBLCHR (16) CHAR(4),       /* TABLE CHRS        @Z40LB65*/ 04550003
          3 * CHAR(1),                  /* RESERVED          @Z40LB65*/ 04600003
          3 VTTBLC FIXED(8),            /* CYLINDER NUMBER   @Z40LB65*/ 04650003
          3 VTTBLH FIXED(8),            /* HEAD NUMBER       @Z40LB65*/ 04700003
          3 VTTBLR FIXED(8),            /* RECORD NUMBER     @Z40LB65*/ 04750003
         2 VTSDGID (16) CHAR(4),        /* STG DRIVE GRP ID  @Z40LB65*/ 04800003
          3 VTL33330 FIXED(8),          /* LOGICAL 3333 0    @Z40LB65*/ 04850003
          3 VTL33331 FIXED(8),          /* LOGICAL 3333 1    @Z40LB65*/ 04900003
          3 VTLRU0 FIXED(8),            /* LRU FOR 3333 0    @Z40LB65*/ 04950003
          3 VTLRU1 FIXED(8),            /* LRU FOR 3333 1    @Z40LB65*/ 05000003
         2 VTUCB (2) CHAR(8) BDY(HWORD),/* PRIM. & SEC. UCBS @Z40LB65*/ 05050003
          3 VTFLAGS BIT(8),             /* UCB FLAGS         @Z40LB65*/ 05100003
           4 VTPVALID BIT(1),           /* PRIMARY VALID     @Z40LB65*/ 05150003
           4 VTPONLIN BIT(1),           /* PRIMARY ONLINE    @Z40LB65*/ 05200003
           4 VTPREADY BIT(1),           /* PRIMARY READY     @Z40LB65*/ 05250003
           4 VTPBUSY BIT(1),            /* PRIMARY BUSY      @Z40LB65*/ 05300003
           4 VTSVALID BIT(1),           /* SECONDARY VALID   @Z40LB65*/ 05350003
           4 VTSONLIN BIT(1),           /* SECONDARY ONLINE  @Z40LB65*/ 05400003
           4 VTSREADY BIT(1),           /* SECONDARY READY   @Z40LB65*/ 05450003
           4 VTSBUSY BIT(1),            /* SECONDARY BUSY    @Z40LB65*/ 05500003
          3 VTWORK BIT(8),              /* WORK BITS         @Z40LB65*/ 05550003
          3 VTACTIVE BIT(8),            /* ACTIVE BITS       @Z40LB65*/ 05600003
          3 VTPOST BIT(8),              /* POST BITS         @Z40LB65*/ 05650003
          3 VTPADDR FIXED(16),          /* PRIMARY ADDRESS   @Z40LB65*/ 05700003
          3 VTSADDR FIXED(16),          /* ALTERNATE ADDRESS @Z40LB65*/ 05750003
         2 * CHAR(60),                  /* RESERVED          @Z40LB65*/ 05800003
         2 VTTRCCHR (4) CHAR(4),        /* TRACE CHRS        @Z40LB65*/ 05850003
          3 VTXY FIXED(8),              /* X,Y END/START     @Z40LB65*/ 05900003
          3 VTTRCC FIXED(8),            /* CYLINDER NUMBER   @Z40LB65*/ 05950003
          3 VTTRCH FIXED(8),            /* HEAD NUMBER       @Z40LB65*/ 06000003
          3 VTTRCR FIXED(8),            /* RECORD NUMBER     @Z40LB65*/ 06050003
         2 VTLRUCW CHAR(4) BDY(WORD),   /* LRU CONTROL WORD  @Z40LB65*/ 06100003
          3 VTLRUCLK FIXED(8),          /* LRU INITIAL CLOCK @Z40LB65*/ 06150003
          3 VTLRUTIM FIXED(8),          /* LRU TIME VALUE    @Z40LB65*/ 06200003
          3 VTLRUIOS FIXED(16),         /* LRU-IOS INTERFACE @Z40LB65*/ 06250003
         2 VTRVPAGE CHAR(12),           /* REAL-VIRT PG XREF @Z40LB65*/ 06300003
          3 VT08TO0F FIXED(8),          /* VIRT. CYLS 08-0F  @Z40LB65*/ 06350003
          3 VT10TO17 FIXED(8),          /* VIRT. CYLS 10-17  @Z40LB65*/ 06400003
          3 VT18TO1F FIXED(8),          /* VIRT. CYLS 18-1F  @Z40LB65*/ 06450003
          3 VT20TO27 FIXED(8),          /* VIRT. CYLS 20-27  @Z40LB65*/ 06500003
          3 * CHAR(8),                  /* RESERVED          @Z40LB65*/ 06550003
         2 VTVOLPFX CHAR(4);            /* VOLID PREFIX      @Z40LB65*/ 06600003
                                                                        06650003
     /* MASS STORAGE CONTROL STAGING DRIVE GROUP TABLE       @Z40LB61*/ 06700003
     /* REAL PAGE MAP MAPPING                                @Z40LB61*/ 06750003
     DCL RPMPTR    PTR(31);            /*PTR TO REAL PAGE    @Z40LB61   06800003
                                         MAP FOR ONE DEVICE  @Z40LB61*/ 06850003
     DCL 1 RPM(52) BDY(WORD) BASED(RPMPTR),                             06900003
           3 RPMFLAGS  BIT(8),         /*PAGE-TYPE FLAGS     @Z40LB61*/ 06950003
             5 RPMACT    BIT(1),       /*PAGE IS ACTIVE      @Z40LB61*/ 07000003
             5 RPMINACT  BIT(1),       /*PAGE IS INACTIVE    @Z40LB61*/ 07050003
             5 RPMBND    BIT(1),       /*PAGE IS BOUND       @Z40LB61*/ 07100003
             5 RPMVBND   BIT(1),       /*PAGE ALLOCATED TO   @Z40LB61   07150003
                                         A BOUND VOLUME      @Z40LB61*/ 07200003
             5 RPMIOERR  BIT(1),       /*I/O ERROR DETECTED  @Z40LB61*/ 07250003
             5 *         BIT(1),       /*RESERVED            @Z40LB61*/ 07300003
             5 RPMMSCT   BIT(1),       /*PAGE OF MSC TABLES  @Z40LB61*/ 07350003
             5 RPMNA     BIT(1),       /*PAGE NOT AVAILABLE  @Z40LB61*/ 07400003
           3 RPMVPNUM  FIXED(8),       /*VIRTUAL PAGE NO.    @Z40LB61*/ 07450003
           3 RPMMVT    FIXED(16);      /*MVT POINTER         @Z40LB61*/ 07500003
                                                                        07550003
     /* MASS STORAGE CONTROL STAGING DRIVE GROUP TABLE       @Z40LB61*/ 07600003
     /* PAGE AVAILABILITY BLOCK MAPPING                      @Z40LB61*/ 07650003
     DCL PABPTR    PTR(31);            /*PTR TO PAB FOR      @Z40LB61   07700003
                                         ONE SDG             @Z40LB61*/ 07750003
     DCL 1 PAB BDY(WORD) BASED(PABPTR),                                 07800003
           3 PABFTOT   FIXED(16),      /*FREE PAGE TOTAL     @Z40LB61*/ 07850003
           3 PABATOT   FIXED(16),      /*ACTIVE PAGE TOTAL   @Z40LB61*/ 07900003
           3 PABITOT   FIXED(16),      /*INACTIVE PAGE TOTAL @Z40LB61*/ 07950003
           3 PABBTOT   FIXED(16),      /*BOUND PAGE TOTAL    @Z40LB61*/ 08000003
           3 PABPPD    FIXED(8),       /*PAGES PER DEVICE    @Z40LB61*/ 08050003
           3 PABUPDEL  FIXED(8),       /*UPPER DELTA         @Z40LB61*/ 08100003
           3 PABUPTH   FIXED(16),      /*UPPER THRESHOLD     @Z40LB61*/ 08150003
           3 *         FIXED(8),       /*RESERVED            @Z40LB61*/ 08200003
           3 PABLODEL  FIXED(8),       /*LOWER DELTA         @Z40LB61*/ 08250003
           3 PABLOTH   FIXED(16),      /*LOWER THRESHOLD     @Z40LB61*/ 08300003
           3 PABSA (2) FIXED(8),       /*SA ID (LOW 4 BITS)  @Z40LB61*/ 08350003
             5 PABVLDSA  BIT(1),       /*SA IS VALID         @Z40LB61*/ 08400003
             5 *         BIT(2),       /*RESERVED            @Z40LB61*/ 08450003
             5 PAB3333   BIT(1),       /*3333 ID             @Z40LB61*/ 08500003
           3 *         FIXED(16),      /*RESERVED            @Z40LB61*/ 08550003
           3 PABSRW    FIXED(8),       /*SLICE RANGE W       @Z40LB61*/ 08600003
           3 PABSRX    FIXED(8),       /*SLICE RANGE X       @Z40LB61*/ 08650003
           3 PABSRY    FIXED(8),       /*SLICE RANGE Y       @Z40LB61*/ 08700003
           3 PABSRZ    FIXED(8),       /*SLICE RANGE Z       @Z40LB61*/ 08750003
           3 *         CHAR(8),        /*RESERVED            @Z40LB61*/ 08800003
           3 * (8)     FIXED(32),      /*PAGE COUNTS FOR     @Z40LB61   08850003
                                         EACH SDG DEVICE     @Z40LB61*/ 08900003
             5 PABFCNT   FIXED(8),     /*FREE PAGE COUNT     @Z40LB61*/ 08950003
             5 PABACNT   FIXED(8),     /*ACTIVE PAGE COUNT   @Z40LB61*/ 09000003
             5 PABICNT   FIXED(8),     /*INACTIVE PAGE COUNT @Z40LB61*/ 09050003
             5 PABBCNT   FIXED(8),     /*BOUND PAGE COUNT    @Z40LB61*/ 09100003
           3 PABFMAP (8,8) BIT(8),     /*FREE PAGE BIT MAP   @Z40LB61   09150003
                                         FOR EACH DEVICE     @Z40LB61*/ 09200003
           3 PABAMAP (8,8) BIT(8),     /*ACTIVE PAGE BIT MAP @Z40LB61   09250003
                                         FOR EACH DEVICE     @Z40LB61*/ 09300003
           3 * (8)     FIXED(32),      /*DEVICE INFORMATION  @Z40LB61   09350003
                                         FOR EACH DEVICE     @Z40LB61*/ 09400003
             5 PABFLAGS  BIT(8),       /*DEVICE ATTRIBUTES   @Z40LB61*/ 09450003
               7 PABDEX    BIT(1),     /*DEVICE EXISTS       @Z40LB61*/ 09500003
               7 PABVARV   BIT(1),     /*VARIED ON VIRTUAL   @Z40LB61*/ 09550003
               7 PABVARR   BIT(1),     /*VARIED ON REAL      @Z40LB61*/ 09600003
               7 PABMOD11  BIT(1),     /*DEVICE IS HALF OF   @Z40LB61   09650003
                                         A 3330 MOD 11       @Z40LB61*/ 09700003
               7 PABMSCT   BIT(1),     /*DEVICE CONTAINS     @Z40LB61   09750003
                                         MSC TABLES          @Z40LB61*/ 09800003
               7 PABVBND   BIT(1),     /*VOLUME BOUND        @Z40LB61*/ 09850003
               7 PABVARN   BIT(1),     /*VARIED NEUTRAL      @Z40LB61*/ 09900003
               7 PAB2M11   BIT(1),     /*DEVICE IS 2ND HALF  @Z40LB61   09950003
                                         OF A 3330 MOD 11    @Z40LB61*/ 10000003
             5 PABRINTF  BIT(8),       /*REAL INTERFACE      @Z40LB61*/ 10050003
               7 PABRAI    BIT(1),     /*CONVERTIBLE TO REAL @Z40LB61*/ 10100003
               7 PABSA1B   BIT(1),     /*INTERFACE B OF SA#1 @Z40LB61*/ 10150003
               7 PABSA1C   BIT(1),     /*INTERFACE C OF SA#1 @Z40LB61*/ 10200003
               7 PABSA1D   BIT(1),     /*INTERFACE D OF SA#1 @Z40LB61*/ 10250003
               7 *         BIT(1),     /*RESERVED            @Z40LB61*/ 10300003
               7 PABSA2B   BIT(1),     /*INTERFACE B OF SA#2 @Z40LB61*/ 10350003
               7 PABSA2C   BIT(1),     /*INTERFACE C OF SA#2 @Z40LB61*/ 10400003
               7 PABSA2D   BIT(1),     /*INTERFACE D OF SA#2 @Z40LB61*/ 10450003
             5 PABORUA   FIXED(8),     /*ORIGINAL RUA        @Z40LB61*/ 10500003
               7 PABORUAV  BIT(1),     /*OLD RUA IS VALID    @Z40LB61*/ 10510003
             5 PABRUA    FIXED(8);     /*REAL UNIT ADDRESS   @Z40LB61*/ 10550003
                                                                        10600003
     /* MASS STORAGE CONTROL STAGING DRIVE GROUP TABLE       @Z40LB61*/ 10650003
     /* DEMOUNTED VOLUME BLOCK MAPPING                       @Z40LB61*/ 10700003
     DCL DVBPTR    PTR(31);            /*PTR TO 1 SDG'S DVB  @Z40LB61*/ 10750003
     DCL 1 DVB BDY(WORD) BASED(DVBPTR),                                 10800003
           3 DVBNEXT   FIXED(8),       /*NEXT ENTRY'S OFFSET @Z40LB61*/ 10850003
           3 DVBCURR   FIXED(8),       /*CURRENT ENTRY'S     @Z40LB61   10900003
                                         OFFSET              @Z40LB61*/ 10950003
           3 *         FIXED(16),      /*RESERVED            @Z40LB61*/ 11000003
           3 DVBMVT (126) FIXED(16),   /*MVT POINTERS        @Z40LB61*/ 11050003
             5 DVBMSFID   BIT(2),      /*MSF CONTAINING VOL  @Z40LB61*/ 11100003
             5 DVBPFI     BIT(1);      /*PREFERRED INACTIVE  @ZD00051   11110003
                                         SPACE FOR THIS VOL  @ZD00051*/ 11120003
                                                                        11150003
     /* MASS STORAGE CONTROL STAGING DRIVE GROUP TABLE       @Z40LB61*/ 11200003
     /* LEAST RECENTLY USED PAGES BLOCK MAPPING              @Z40LB61*/ 11250003
     DCL LPBPTR    PTR(31);            /*PTR TO 1 SDG'S LPB  @Z40LB61*/ 11300003
     DCL 1 LPB BDY(WORD) BASED(LPBPTR),                                 11350003
           3 LPBNEXT   FIXED(8),       /*NEXT ENTRY'S OFFSET @Z40LB61*/ 11400003
           3 LPBCURR   FIXED(8),       /*CURRENT ENTRY'S     @Z40LB61   11450003
                                         OFFSET              @Z40LB61*/ 11500003
           3 *         FIXED(16),      /*RESERVED            @Z40LB61*/ 11550003
           3 LPBMVT (126) FIXED(16),   /*MVT POINTERS        @Z40LB61*/ 11600003
             5 LPBMSFID   BIT(2),      /*MSF CONTAINING VOL  @Z40LB61*/ 11650003
             5 LPBPFI     BIT(1);      /*PREFERRED INACTIVE  @ZD00051   11660003
                                         SPACE FOR THIS VOL  @ZD00051*/ 11670003
                                                                        11700003
     /* MASS STORAGE CONTROL VIRTUAL VOLUME ADDRESS /        @Z40LB61*/ 11750003
     /* MOUNTED VOLUME TABLE CROSS REFERENCE TABLE MAPPING   @Z40LB61*/ 11800003
     DCL VMXPTR    PTR(31);            /*PTR TO MVT XREF FOR @Z40LB61   11850003
                                         A SINGLE VVA ENTRY  @Z40LB61*/ 11900003
     DCL 1 VMX BDY(WORD) BASED(VMXPTR),                                 11950003
           3 VMXFLAGS  BIT(8),         /*ATTRIBUTE FLAGS     @Z40LB61*/ 12000003
             5 VMXVALID  BIT(1),       /*ENTRY IS VALID      @Z40LB61*/ 12050003
             5 *         BIT(7),       /*RESERVED            @Z40LB61*/ 12100003
           3 *         FIXED(8),       /*RESERVED            @Z40LB61*/ 12150003
           3 VMXMVT    FIXED(16);      /*MVT POINTER         @Z40LB61*/ 12200003
                                                                        12250003
     /* MASS STORAGE CONTROL VIRTUAL VOL ADDR TABLE MAPPING  @Z40LB61*/ 12300003
     DCL VVATPTR   PTR(31);            /*PTR TO VVAT ENTRY   @Z40LB61   12350003
                                         FOR ONE SA          @Z40LB61*/ 12400003
     DCL 1 VVAT BDY(WORD) BASED(VVATPTR),                               12450003
           3 VVATVVA (32) BIT(8);      /*MAP OF VVA'S IN USE @Z40LB61   12500003
                                         (VVA 64 IS 1ST BIT) @Z40LB61*/ 12550003
                                                                        12600003
     /* MASS STORAGE CONTROL CONFIGURATION BIT MAP MAPPING   @Z40LB64*/ 12650003
     DCL CBMPTR   PTR(31) BDY(WORD);   /* CBM BASE POINTER   @Z40LB64*/ 12700003
     DCL 1 CBMAP BDY(WORD) BASED(CBMPTR),                               12750003
           3 CBMDRD (4) BIT(8),        /* ONE BIT FOR EACH   @Z40LB64   12800003
                                          POSSIBLE DRD IN    @Z40LB64   12850003
                                          CONFIGURATION      @Z40LB64*/ 12900003
           3 CBMSA (2) BIT(8),         /* ONE BIT FOR EACH   @Z40LB64   12950003
                                          POSSIBLE SA IN     @Z40LB64   13000003
                                          CONFIGURATION      @Z40LB64*/ 13050003
           3 CBMDRC (2) BIT(8),        /* ONE BIT FOR EACH   @Z40LB64   13100003
                                          POSSIBLE DRC IN    @Z40LB64   13150003
                                          CONFIGURATION      @Z40LB64*/ 13200003
           3 CBMDRIVE(30) BIT(8),      /* ONE BIT FOR EACH   @Z40LB64   13250003
                                          POSSIBLE DRIVE     @Z40LB64   13300003
                                          IN CONFIGURATION   @Z40LB64*/ 13350003
           3 CBMFLAGS BIT(8),          /*ATTRIBUTE FLAGS     @Z40BL64*/ 13400003
           3 CBMMSF   BIT(8);          /*TWO BITS FOR EACH   @Z40LB64   13450003
                                         POSSIBLE MSF (1 BIT @Z40LB64   13500003
                                         EACH FOR UC0-2 &    @Z40LB64   13550003
                                         UC0-1 RESPECTIVELY) @Z40LB64*/ 13600003
                                                                        13650003
     /* MASS STORAGE CONTROL MOUNT EQUALIZATION              @Z40LB64*/ 13700003
     /* RECORD MAPPING                                       @Z40LB64*/ 13750003
     DCL MERPTR PTR(31);               /* MER BASE POINTER   @Z40LB64*/ 13800003
     DCL 1 MERECORD BDY(WORD) BASED(MERPTR),                            13850003
           3 *(30) BDY(WORD),          /* INFORMATION FOR    @Z40LB64   13900003
                                          EACH SDG           @Z40LB64*/ 13950003
             5 MEFLAGS BIT(8),         /* FLAGS              @Z40LB64*/ 14000003
               7 MEVOI1 BIT(1),        /* INCREMENT VARIED   @Z40LB64   14050003
                                          ON COUNT BY 1      @Z40LB64*/ 14100003
               7 MEVOD1 BIT(1),        /* DECREMENT VARIED   @Z40LB64   14150003
                                          ON COUNT BY 1      @Z40LB64*/ 14200003
               7 MEVOI2 BIT(1),        /* INCREMENT VARIED   @Z40LB64   14250003
                                          ON COUNT BY 2      @Z40LB64*/ 14300003
               7 MEVOD2 BIT(1),        /* DECREMENT VARIED   @Z40LB64   14350003
                                          ON COUNT BY 2      @Z40LB64*/ 14400003
               7 MEMVI1 BIT(1),        /* INCREMENT MOUNTED  @Z40LB64   14450003
                                          VOLUMES COUNT BY 1 @Z40LB64*/ 14500003
               7 MEMVD1 BIT(1),        /* DECREMENT MOUNTED  @Z40LB64   14550003
                                          VOLUMES COUNT BY 1 @Z40LB64*/ 14600003
               7 MEMVI2 BIT(1),        /* INCREMENT MOUNTED  @Z40LB64   14650003
                                          VOLUMES COUNT BY 2 @Z40LB64*/ 14700003
               7 MEMVD2 BIT(1),        /* DECREMENT MOUNTED  @Z40LB64   14750003
                                          VOLUMES COUNT BY 2 @Z40LB64*/ 14800003
             5 MEVOCNT FIXED(8),       /* COUNT OF LOGICAL   @Z40LB64   14850003
                                          DRIVES VARIED ON   @Z40LB64*/ 14900003
             5 MEMNTCNT FIXED(16),     /* COUNT OF VOLUMES   @Z40LB64   14950003
                                          MOUNTED ON SDG     @Z40LB64*/ 15000003
           3 * CHAR(8),                /* RESERVED           @Z40LB64*/ 15050003
           3 *(30) BDY(WORD),          /* INFORMATION FOR    @Z40LB64   15100003
                                          EACH SDG           @Z40LB64*/ 15150003
             5 MELRUCNT FIXED(8),      /* COUNT OF LRU       @Z40LB64   15200003
                                          INVOKES FOR SDG    @Z40LB64*/ 15250003
             5 MEDRVCNT FIXED(8),      /* COUNT OF LOGICAL   @Z40LB64   15300003
                                          DRIVES FOR SDG     @Z40LB64*/ 15350003
             5 MEUCBCNT FIXED(16);     /* COUNT OF SYSGENED  @Z40LB64   15400003
                                          UCBS FOR SDG       @Z40LB64*/ 15450003
                                                                        15500003
     /* MASS STORAGE CONTROL MOUNTED VOLUME TABLE            @Z40LB64*/ 15550003
     /* CONTROL BLOCK MAPPING                                @Z40LB64*/ 15600003
     DCL MVCBPTR PTR(31);              /* MVT CTL BLK PTR    @Z40LB64*/ 15650003
     DCL 1 MVCTLBLK BDY(WORD) BASED(MVCBPTR),                           15700003
           3 MVCTLBIT (256) BIT(8);    /* MVT ENTRY IN-USE   @Z40LB64   15750003
                                          FLAGS              @Z40LB64*/ 15800003
                                                                        15850003
     /* MASS STORAGE CONTROL MOUNTED VOLUME TABLE            @Z40LB64*/ 15900003
     /* INDEX BLOCK MAPPING                                  @Z40LB64*/ 15950003
     DCL MVIBPTR PTR(31);              /* MVT INDEX BLK PTR  @Z40LB64*/ 16000003
     DCL 1 MVIDXBLK BDY(WORD) BASED(MVIBPTR),                           16050003
           3 MVIFLAGS BIT(8),          /* INDEX FLAGS        @Z40LB64*/ 16100003
             5 MVOFOUT BIT(1),         /* OVERFLOW OUT       @Z40LB64*/ 16150003
             5 MVOFBLK BIT(1),         /* OVERFLOW BLOCK     @Z40LB64*/ 16200003
             5 MVLSTBLK BIT(1),        /* LAST BLK IN INDEX  @Z40LB64*/ 16250003
             5 *       BIT(5),         /* ZEROS              @Z40LB64*/ 16300003
           3 MVENTLEN FIXED(8),        /* ENTRY LENGTH       @Z40LB64*/ 16350003
           3 MVENTMAX FIXED(8),        /* MAXIMUM ENTRIES    @Z40LB64*/ 16400003
           3 MVENTNUM FIXED(8),        /* ACTUAL ENTRIES     @Z40LB64*/ 16450003
           3 * CHAR(4),                /* RESERVED           @Z40LB64*/ 16500003
           3 *(31) BDY(WORD),          /* INDEX ENTRY        @Z40LB64*/ 16550003
             5 MVIVOLID CHAR(6),       /* VOLUME IDENTIFIER  @Z40LB64*/ 16600003
             5 MVMVTPTR FIXED(16);     /* MVT ENTRY POINTER  @Z40LB64*/ 16650003
                                                                        16700003
     /* MASS STORAGE CONTROL MOUNTED VOLUME TABLE            @Z40LB64*/ 16750003
     /* ENTRY MAPPING                                        @Z40LB64*/ 16800003
     DCL MVENTPTR PTR(31);             /* MVT ENTRY BASE PTR @Z40LB64*/ 16850003
     DCL MVPATH#   FIXED(15);          /*INDEX TO SA PATH TO @Z40LB61   16900003
                                         BE EXAMINED         @Z40LB61*/ 16950003
     DCL 1 MVENTRY BDY(WORD) BASED(MVENTPTR),                           17000003
           3 MVVOLID CHAR(6),          /* VOLUME IDENTIFIER  @Z40LB64*/ 17050003
           3 MVVFLAGS BIT(8),          /* VOLUME FLAGS       @Z40LB64*/ 17100003
             5 MVCECTG BIT(1),         /* CE CARTRIDGE       @Z40LB64*/ 17150003
             5 *        BIT(1),        /* RESERVED           @Z40LB64*/ 17200003
             5 MVSECVOL BIT(1),        /* SECURE VOLUME      @Z40LB64*/ 17250003
             5 MVEXCVOL BIT(1),        /* EXCLUSIVE VOLUME   @Z40LB64*/ 17300003
             5 MVSCRCTG BIT(1),        /* SCRATCH CARTRIDGE  @Z40LB64*/ 17350003
             5 MVBNDVOL BIT(1),        /* BOUND VOLUME       @Z40LB64*/ 17400003
             5 MVWRTINH BIT(1),        /* WRITE INHIBIT      @Z40LB64*/ 17450003
             5 *        BIT(1),        /* RESERVED           @Z40LB64*/ 17500003
           3 *        CHAR(1),         /* RESERVED           @Z40LB64*/ 17550003
           3 MVLZYX1 FIXED(16),        /* SEQ #1 CTG ADDRESS @Z40LB64*/ 17600003
           3 MVLZYX2 FIXED(16),        /* SEQ #2 CTG ADDRESS @Z40LB64*/ 17650003
           3 MVMFLAGS BIT(8),          /* MOUNT FLAGS        @Z40LB64*/ 17700003
             5 MVMNTVOL BIT(1),        /* VOLUME MOUNTED     @Z40LB64*/ 17750003
             5 MVMNTEXC BIT(1),        /* MOUNTED EXCLUSIVE  @Z40LB64*/ 17800003
             5 MVMNTBND BIT(1),        /* MOUNTED BOUND      @Z40LB64*/ 17850003
             5 MVREMNT  BIT(1),        /* REMOUNTED NEW SDG  @Z40LB61*/ 17860003
             5 *        BIT(4),        /* RESERVED           @Z40LB64*/ 17900003
           3 MVPINCNT FIXED(8),        /* INACTIVE PAGE CNT  @Z40LB64*/ 17950003
           3 MVRESRVE FIXED(8),        /* SA PORT RESERVING  @Z40LB64   18000003
                                          VOL (LOW 2 BITS)   @Z40LB64*/ 18050003
             5 *      BIT(4),          /* RESERVED           @Z40LB64*/ 18100003
             5 MVSA2RSV BIT(1),        /* 0 FOR SA1          @Z40LB64   18150003
                                          1 FOR SA2          @Z40LB64*/ 18200003
             5 *        BIT(1),        /* RESERVED           @Z40LB64*/ 18250003
           3 MVSDG    FIXED(8),        /* SDG INDEX          @Z40LB64*/ 18300003
           3 MV3333   FIXED(8),        /* LOGICAL 3333 ADDR  @Z40LB64*/ 18350003
           3 MVVAMSG BIT(8),           /* VOL AVAILABLE MSG  @Z40LB64*/ 18400003
             5 MVINTFA BIT(1),         /* INTERFACE A        @Z40LB64*/ 18450003
             5 MVINTFB BIT(1),         /* INTERFACE B        @Z40LB64*/ 18500003
             5 MVINTFC BIT(1),         /* INTERFACE C        @Z40LB64*/ 18550003
             5 MVINTFD BIT(1),         /* INTERFACE D        @Z40LB64*/ 18600003
             5 *       BIT(4),         /* RESERVED           @Z40LB64*/ 18650003
           3 *         CHAR(2),        /* RESERVED           @Z40LB64*/ 18700003
           3 *(2)  CHAR(8) BDY(WORD),  /* INTERFACE INFO     @Z40LB64*/ 18750003
             5 MVSA    FIXED(8),       /* SA ADDRESS         @Z40LB64   18800003
                                          (LOW 4 BITS)       @Z40LB64*/ 18850003
               7 MVVLDSA BIT(1),       /* SA IS VALID        @Z40LB64*/ 18900003
               7 MVACTB BIT(1),        /* INTERFACE B ACTIVE @Z40LB64*/ 18950003
               7 MVACTC BIT(1),        /* INTERFACE C ACTIVE @Z40LB64*/ 19000003
               7 MVACTD BIT(1),        /* INTERFACE D ACTIVE @Z40LB64*/ 19050003
             5 MVCPUIDS FIXED(24),     /* CPU IDENTIFIERS    @Z40LB64   19100003
                                          (SEE LOWER LEVEL              19150003
                                          STRUCTURE DECLARE) @Z40LB64*/ 19200003
             5 MVVVA     FIXED(8),     /*VIRTUAL VOL ADDRESS @Z40LB61*/ 19250003
             5 MVVUAS   FIXED(24),     /* VIRTUAL UNIT ADDRS @Z40LB61   19300003
                                          (SEE LOWER LEVEL              19350003
                                          STRUCTURE DECLARE) @Z40LB64*/ 19400003
           3 MVPFI (8) BIT(8),         /*PREFERRED INACTIVE  @ZD00051   19450003
                                         PAGE BIT MAP        @ZD00051*/ 19460003
           3 *         CHAR(8),        /*RESERVED            @ZD00051*/ 19470003
           3 *(51) CHAR(4) BDY(WORD),  /* PAGE ALLOCATION    @Z40LB64   19500003
                                          INFORMATION        @Z40LB64*/ 19550003
             5 MVLOGDEV FIXED(8),      /* LOGICAL DEVICE     @Z40LB64   19600003
                                          (LOW 3 BITS)       @Z40LB64*/ 19650003
               7 MVPINACT BIT(1),      /* PAGE IS ACTIVE     @Z40LB64*/ 19700003
               7 MVDSTGC1 BIT(1),      /* CTG #1 SCHEDULED   @Z40LB64   19750003
                                          FOR DESTAGE        @Z40LB64*/ 19800003
               7 MVDSTGC2 BIT(1),      /* CTG #2 SCHEDULED   @Z40LB64   19850003
                                          FOR DESTAGE        @Z40LB64*/ 19900003
               7 *       BIT(2),       /* RESERVED           @Z40LB64*/ 19950003
             5 MVBNDCNT FIXED(8),      /* BOUND COUNT        @Z40LB64*/ 20000003
             5 MVRPNUM  FIXED(8),      /* REAL PAGE          @Z40LB64*/ 20050003
             5 MVCYLMAP BIT(8);        /* CYLINDER MAP       @Z40LB64*/ 20100003
                                                                        20150003
     /* MASS STORAGE CONTROL MOUNTED VOLUME TABLE ENTRY      @Z40LB64*/ 20200003
     /* CPU IDENTIFIERS FOR INTERFACES B, C, AND D           @Z40LB64*/ 20250003
     /* (LOWER LEVEL STRUCTURE DECLARATION FOR 'MVCPUIDS')   @Z40LB64*/ 20300003
     DCL MVCPUID(3) FIXED(8) BASED(    /* CPU IDENTIFIER     @Z40LB64*/ 20350003
              ADDR(MVCPUIDS(MVPATH#)));/* (LOW 4 BITS)       @Z40LB64*/ 20400003
                                                                        20450003
     /* MASS STORAGE CONTROL MOUNTED VOLUME TABLE ENTRY      @Z40LB64*/ 20500003
     /* VIRTUAL UNIT ADDRESSES FOR INTERFACES B, C, AND D    @Z40LB64*/ 20550003
     /* (LOWER LEVEL STRUCTURE DECLARATION FOR 'MVVUAS')     @Z40LB64*/ 20600003
     DCL 1 MVVUA(3) FIXED(8) BASED(    /* VIRTUAL UNIT ADDR  @Z40LB61*/ 20650003
              ADDR(MVVUAS(MVPATH#))),  /* (LOW 6 BITS)       @Z40LB61*/ 20700003
           3 MVVUAI#  BIT(2);          /* INTERFACE ID#      @Z40LB64*/ 20750003
                                                                        20800003
     /* MASS STORAGE CONTROL SCRATCH CARTRIDGE LIST          @Z40LB64*/ 20850003
     /* CONTROL FIELD MAPPING                                @Z40LB64*/ 20900003
     DCL SCCFPTR PTR(31);              /* SCL CTL FLD PTR    @Z40LB64*/ 20950003
     DCL 1 SCCTLFLD BDY(WORD) BASED(SCCFPTR),                           21000003
           3 SCCOMLEN FIXED(8),        /* COMPARE LENGTH     @Z40LB64   21050003
                                          (LOW 4 BITS)       @Z40LB64*/ 21100003
             5 SCCFLAGS BIT(4),        /* CONTROL FLD FLAGS  @Z40LB64*/ 21150003
               7 SCLSTBLK BIT(1),      /* LAST TABLE BLOCK   @Z40LB64*/ 21200003
               7 SCLSTACT BIT(1),      /* LAST ACTIVE BLOCK  @Z40LB64*/ 21250003
               7 SCENDTRK BIT(1),      /* END OF TRACK BLOCK @Z40LB64*/ 21300003
               7 SCLSTTRK BIT(1),      /* LAST TABLE TRACK   @Z40LB64*/ 21350003
           3 SCENTLEN FIXED(8),        /* ENTRY LENGTH       @Z40LB64*/ 21400003
           3 SCENTMAX FIXED(8),        /* MAXIMUM ENTRIES    @Z40LB64*/ 21450003
           3 SCENTNUM FIXED(8),        /* ENTRY USE COUNT    @Z40LB64*/ 21500003
           3 SCTRKPTR CHAR(4),         /* NEXT TRACK POINTER @Z40LB64*/ 21550003
             5 *      CHAR(1),         /* ZEROS              @Z40LB64*/ 21600003
             5 SCCYL  FIXED(8),        /* CYLINDER ADDRESS   @Z40LB64*/ 21650003
             5 SCHEAD FIXED(8),        /* TRACK ADDRESS      @Z40LB64*/ 21700003
             5 SCREC  FIXED(8);        /* RECORD ADDRESS     @Z40LB64*/ 21750003
                                                                        21800003
     /* MASS STORAGE CONTROL SCRATCH CARTRIDGE LIST          @Z40LB64*/ 21850003
     /* ENTRY MAPPING                                        @Z40LB64*/ 21900003
     DCL SCENTPTR PTR(31);             /* SCL ENTRY POINTER  @Z40LB64*/ 21950003
     DCL 1 SCENTRY BDY(WORD) BASED(SCENTPTR),                           22000003
           3 *     CHAR(4),            /* RESERVED           @Z40LB64*/ 22050003
           3 SCCSN CHAR(12),           /* CARTRIDGE SERIAL   @Z40LB64*/ 22100003
           3 SCLZYX FIXED(16),         /* CARTRIDGE ADDRESS  @Z40LB64*/ 22150003
           3 *     CHAR(2);            /* RESERVED           @Z40LB64*/ 22200003
                                                                        22250003
     /* MASS STORAGE CONTROL VOLUME INVENTORY                @Z40LB64*/ 22300003
     /* CONTROL FIELD MAPPING                                @Z40LB64*/ 22350003
     DCL VICFPTR PTR(31);              /* VI CTL FLD PTR     @Z40LB64*/ 22400003
     DCL 1 VICTLFLD BDY(WORD) BASED(VICFPTR),                           22450003
           3 VICFLAGS BIT(8),          /* CONTROL FLD FLAGS  @Z40LB64*/ 22500003
             5 VILSTBLK BIT(1),        /* LAST TABLE BLOCK   @Z40LB64*/ 22550003
             5 VILSTACT BIT(1),        /* LAST ACTIVE BLOCK  @Z40LB64*/ 22600003
             5 VIENDTRK BIT(1),        /* END OF TRACK       @Z40LB64*/ 22650003
             5 VILSTTRK BIT(1),        /* LAST TABLE TRACK   @Z40LB64*/ 22700003
             5 VIUSEBLK BIT(1),        /* BLOCK USED         @Z40LB64*/ 22750003
             5 VIAREA   BIT(2),        /* TABLE AREA         @Z40LB64*/ 22800003
             5 VIOFBLK  BIT(1),        /* OVERFLOW BLOCK     @Z40LB64*/ 22850003
           3 VIENTLEN FIXED(8),        /* ENTRY LENGTH       @Z40LB64*/ 22900003
           3 VIENTMAX FIXED(8),        /* MAXIMUM ENTRIES    @Z40LB64*/ 22950003
           3 VIENTNUM FIXED(8),        /* ACTUAL ENTRIES     @Z40LB64*/ 23000003
           3 VITRKPTR CHAR(4),         /* NEXT TRACK POINTER @Z40LB64*/ 23050003
             5 *      CHAR(1),         /* ZEROS              @Z40LB64*/ 23100003
             5 VICYL  FIXED(8),        /* CYLINDER ADDRESS   @Z40LB64*/ 23150003
             5 VIHEAD FIXED(8),        /* TRACK ADDRESS      @Z40LB64*/ 23200003
             5 VIREC  FIXED(8);        /* RECORD ADDRESS     @Z40LB64*/ 23250003
                                                                        23300003
     /* MASS STORAGE CONTROL VOLUME INVENTORY ENTRY MAPPING  @Z40LB64*/ 23350003
     DCL VIENTPTR PTR(31);             /* VI ENTRY POINTER   @Z40LB64*/ 23400003
     DCL 1 VIENTRY BDY(WORD) BASED(VIENTPTR),                           23450003
           3 VIVOLID CHAR(6),          /* VOLUME IDENTIFIER  @Z40LB64*/ 23500003
           3 VIVFLAGS BIT(8),          /* VOLUME FLAGS       @Z40LB64*/ 23550003
             5 VICECTG BIT(1),         /* CE CARTRIDGE       @Z40LB64*/ 23600003
             5 *       BIT(1),         /* RESERVED           @Z40LB64*/ 23650003
             5 VISECVOL BIT(1),        /* SECURE VOLUME      @Z40LB64*/ 23700003
             5 VIEXCVOL BIT(1),        /* EXCLUSIVE VOLUME   @Z40LB64*/ 23750003
             5 VISCRCTG BIT(1),        /* SCRATCH CARTRIDGE  @Z40LB64*/ 23800003
             5 VIBNDVOL BIT(1),        /* BOUND VOLUME       @Z40LB64*/ 23850003
             5 VIWRTINH BIT(1),        /* WRITE INHIBIT      @Z40LB64*/ 23900003
             5 *        BIT(1),        /* RESERVED           @Z40LB64*/ 23950003
           3 *         CHAR(1),        /* RESERVED           @Z40LB64*/ 24000003
           3 VILZYX1   FIXED(16),      /* SEQ #1 CTG ADDRESS @Z40LB64*/ 24050003
           3 VILZYX2   FIXED(16);      /* SEQ #2 CTG ADDRESS @Z40LB64*/ 24100003
                                                                        24150003
     /* MASS STORAGE CONTROL TRANSIENT VOLUME LIST           @Z40LB64*/ 24200003
     /* CONTROL FIELD MAPPING                                @Z40LB64*/ 24250003
     DCL TVCFPTR PTR(31);              /* TVL CTL FLD PTR    @Z40LB64*/ 24300003
     DCL 1 TVCTLFLD BDY(WORD) BASED(TVCFPTR),                           24350003
           3 TVCOMLEN FIXED(8),        /* COMPARE LENGTH     @Z40LB64   24400003
                                          (LOW 4 BITS)       @Z40LB64*/ 24450003
             5 TVCFLAGS BIT(4),        /* CONTROL FLD FLAGS  @Z40LB64*/ 24500003
               7 TVLSTBLK BIT(1),      /* LAST TABLE BLOCK   @Z40LB64*/ 24550003
               7 TVLSTACT BIT(1),      /* LAST ACTIVE BLOCK  @Z40LB64*/ 24600003
               7 TVENDTRK BIT(1),      /* END OF TRACK       @Z40LB64*/ 24650003
               7 TVLSTTRK BIT(1),      /* LAST TABLE TRACK   @Z40LB64*/ 24700003
           3 TVENTLEN FIXED(8),        /* ENTRY LENGTH       @Z40LB64*/ 24750003
           3 TVENTMAX FIXED(8),        /* MAXIMUM ENTRIES    @Z40LB64*/ 24800003
           3 TVENTNUM FIXED(8),        /* ENTRY USE COUNT    @Z40LB64*/ 24850003
           3 TVTRKPTR CHAR(4),         /* NEXT TRACK POINTER @Z40LB64*/ 24900003
             5 *      CHAR(1),         /* ZEROS              @Z40LB64*/ 24950003
             5 TVCYL FIXED(8),         /* CYLINDER ADDRESS   @Z40LB64*/ 25000003
             5 TVHEAD FIXED(8),        /* TRACK ADDRESS      @Z40LB64*/ 25050003
             5 TVREC FIXED(8);         /* RECORD ADDRESS     @Z40LB64*/ 25100003
                                                                        25150003
     /* MASS STORAGE CONTROL TRANSIENT VOLUME LIST           @Z40LB64*/ 25200003
     /* ENTRY MAPPING                                        @Z40LB64*/ 25250003
     DCL TVENTPTR PTR(31);             /* TVL ENTRY POINTER  @Z40LB64*/ 25300003
     DCL 1 TVENTRY BDY(WORD) BASED(TVENTPTR),                           25350003
           3 TVLZYX1 FIXED(16),        /* SEQ #1 CTG ADDRESS @Z40LB64*/ 25400003
           3 TVLZYX2 FIXED(16),        /* SEQ #2 CTG ADDRESS @Z40LB64*/ 25450003
           3 TVCSN   CHAR(12),         /* CARTRIDGE SERIAL   @Z40LB64*/ 25500003
           3 TVVOLID CHAR(6),          /* VOLUME IDENTIFIER  @Z40LB64*/ 25550003
           3 TVVFLAGS BIT(8),          /* VOLUME FLAGS       @Z40LB64*/ 25600003
             5 TVCECTG BIT(1),         /* CE CARTRIDGE       @Z40LB64*/ 25650003
             5 *       BIT(1),         /* RESERVED           @Z40LB64*/ 25700003
             5 TVSECVOL BIT(1),        /* SECURE VOLUME      @Z40LB64*/ 25750003
             5 TVEXCVOL BIT(1),        /* EXCLUSIVE VOLUME   @Z40LB64*/ 25800003
             5 TVSCRCTG BIT(1),        /* SCRATCH CARTRIDGE  @Z40LB64*/ 25850003
             5 TVBNDVOL BIT(1),        /* BOUND VOLUME       @Z40LB64*/ 25900003
             5 TVWRTINH BIT(1),        /* WRITE INHIBIT      @Z40LB64*/ 25950003
             5 *        BIT(1),        /* RESERVED           @Z40LB64*/ 26000003
           3 *          CHAR(1);       /* RESERVED           @Z40LB64*/ 26050003
                                                                        26100003
     /* MASS STORAGE CONTROL CONFIGURATION INDEX             @Z40LB64*/ 26150003
     /* ENTRY MAPPING                                        @Z40LB64*/ 26200003
     DCL CIENTPTR PTR(31);             /* CONFIG INDEX PTR   @Z40LB64*/ 26250003
     DCL CISA#    FIXED(15);           /*INDEX TO CI DATA    @Z40LB61   26300003
                                         FOR A GIVEN SA#     @Z40LB61*/ 26350003
     DCL 1 CIENTRY(16) BDY(WORD) BASED(CIENTPTR),                       26400003
           3 CICSCNCT BIT(8),          /* SA MSF CONNECTION  @Z40BL64*/ 26450003
             5 CIMSF    BIT(1),        /* ID IS FOR AN MSF   @Z40BL64*/ 26500003
             5 *        BIT(3),        /* RESERVED           @Z40LB64*/ 26550003
             5 CIMSF0   BIT(1),        /* MSF 0              @Z40LB64*/ 26600003
             5 CIMSF1   BIT(1),        /* MSF 1              @Z40LB64*/ 26650003
             5 CIMSF2   BIT(1),        /* MSF 2              @Z40LB64*/ 26700003
             5 CIMSF3   BIT(1),        /* MSF 3              @Z40LB64*/ 26750003
           3 *          CHAR(1),       /* RESERVED           @Z40LB64*/ 26800003
           3 CISACHNL CHAR(6);         /* SA CHANNEL B,C,D   @Z40LB64   26850003
                                          (SEE LOWER LEVEL   @Z40LB64   26900003
                                          STRUCTURE DECLARE) @Z40LB64*/ 26950003
                                                                        27000003
     /* MASS STORAGE CONTROL CONFIGURATION INDEX ENTRY       @Z40LB64*/ 27050003
     /* SA CHANNEL B, C, AND D INFORMATION                   @Z40LB64*/ 27100003
     /* (LOWER LEVEL STRUCTURE DECLARATION FOR 'CISACHNL')   @Z40LB64*/ 27150003
     DCL 1 *(3) CHAR(2) BASED(ADDR(CISACHNL(CISA#))),                   27200003
           3 CICPUID FIXED(8),         /* CPU IDENTIFIER     @Z40LB64*/ 27250003
           3 CICUCHL FIXED(8),         /* CONTROL UNIT AND   @Z40LB64   27300003
                                          CHANNEL ADDRESS    @Z40LB64*/ 27350003
             5 CICU    BIT(2),         /* CONTROL UNIT       @Z40LB64*/ 27400003
             5 *       BIT(2),         /* ZEROS              @Z40LB64*/ 27450003
             5 CICHL   BIT(4);         /* CHANNEL ADDRESS    @Z40LB64*/ 27500003
                                                                        27550003
     /* MASS STORAGE CONTROL MANUFACTURER'S ID CONVERSION    @Z40LB64*/ 27600003
     /* TABLE MAPPING                                        @Z40LB64*/ 27650003
     DCL MICPTR PTR(31);               /* MICT BASE POINTER  @Z40LB64*/ 27700003
     DCL 1 MICTABLE BDY(WORD) BASED(MICPTR),                            27750003
           3 *(16) CHAR(8),            /* MICT ENTRY         @Z40LB64*/ 27800003
             5 MICMFID CHAR(5),        /* MANUFACTURER'S ID  @Z40LB64*/ 27850003
             5 MICMPCPU FIXED(8),      /* CPUID OF OTHER     @Z40LB64   27900003
                                          CPU OF MP PAIR     @Z40LB64*/ 27950003
             5 MICFLAG1 BIT(8),        /* MICT FLAGS         @Z40LB64*/ 28000003
               7 *      BIT(1),        /* RESERVED           @Z40LB64*/ 28050003
               7 MICPOTMP BIT(1),      /* POTENTIAL MP       @Z40LB64*/ 28100003
               7 MICAPATH BIT(1),      /* ALTERNATE PATH     @Z40LB64*/ 28150003
               7 *      BIT(3),        /* ZEROS              @Z40LB64*/ 28200003
               7 MICINTF BIT(2),       /* CPU INTERFACE      @Z40LB64*/ 28250003
             5 MICFLAG2 BIT(8),        /* MICT FLAGS         @Z40LB64*/ 28300003
               7 MICVALID BIT(1),      /* MICT ENTRY VALID   @Z40LB64*/ 28350003
               7 MICCURMP BIT(1),      /* CURRENT MP         @Z40LB64*/ 28400003
               7 MICCMB   BIT(1),      /* COMMON MSG BUFFER  @Z40LB64*/ 28450003
               7 *        BIT(3),      /* ZEROS              @Z40LB64*/ 28500003
               7 MICAINTF BIT(2);      /* ALTERNATE INTRFACE @Z40LB64*/ 28550003
                                                                        28600003
     /* MASS STORAGE CONTROL CONFIGURATION DATA BLOCK        @Z40LB64*/ 28650003
     /* MAPPING                                              @Z40LB64*/ 28700003
     DCL CDBPTR PTR(31);               /* CDB BASE POINTER   @Z40LB64*/ 28750003
     DCL CDBVUA#   FIXED(15);          /*INDEX TO CDB DATA   @Z40LB61   28800003
                                         FOR A GIVEN VUA#    @Z40LB61*/ 28850003
     DCL 1 CDBLOCK BDY(WORD) BASED(CDBPTR),                             28900003
           3 *(64) CHAR(4) BDY(WORD),  /* CDB ENTRY          @Z40LB64*/ 28950003
             5 CDBSDG FIXED(8),        /* STAGING DRIVE      @Z40LB64*/ 29000003
                                       /* GROUP (LOW 5 BITS) @Z40LB64*/ 29050003
               7 CDBCNFIG BIT(8),      /* CONFIGURATION BITS @Z40LB64*/ 29100003
                 9 CDBNOSHR BIT(1),    /* NOT SHARABLE       @Z40LB64*/ 29150003
                 9 CDBINUSE BIT(1),    /* VUA IN USE         @Z40LB64*/ 29200003
                 9 CDB3333  BIT(1),    /* LOGICAL 3333 ADDR  @Z40LB64*/ 29250003
             5 CDBPATHS BIT(8),        /* ALTERNATE PATHS    @ZD00051*/ 29300003
               7 * BIT(1),             /*RESERVED            @ZD00051*/ 29350003
               7 CDBSA1B BIT(1),       /*SA-1 INTF-B PATH    @ZD00051*/ 29400003
               7 CDBSA1C BIT(1),       /*SA-1 INTF-C PATH    @ZD00051*/ 29450003
               7 CDBSA1D BIT(1),       /*SA-1 INTF-D PATH    @ZD00051*/ 29500003
               7 * BIT(1),             /*RESERVED            @ZD00051*/ 29550003
               7 CDBSA2B BIT(1),       /*SA-2 INTF-B PATH    @ZD00051*/ 29600003
               7 CDBSA2C BIT(1),       /*SA-2 INTF-C PATH    @ZD00051*/ 29650003
               7 CDBSA2D BIT(1),       /*SA-2 INTF-D PATH    @ZD00051*/ 29700003
             5 CDBMVTP FIXED(16);      /*MVT POINTER         @ZD00051*/ 29750003
                                                                        29850003
     /* MASS STORAGE CONTROL CELL MAP CONTROL BLOCK MAPPING  @Z40LB64*/ 29900003
     DCL CMCBPTR PTR(31);              /* CM CTL BLK PTR     @Z40LB64*/ 29950003
     DCL 1 CMCTLBLK BDY(WORD) BASED(CMCBPTR),                           30000003
           3 CMCFLAGS (22) BIT(8),     /* CUBE FLAGS         @Z40LB64*/ 30050003
           3 CMCPTRS(175) FIXED(8);    /* CUBE POINTERS      @Z40LB64*/ 30100003
                                                                        30150003
     /* MASS STORAGE CONTROL CELL MAP ENTRY MAPPING          @Z40LB64*/ 30200003
     DCL CMENTPTR PTR(31);             /* CELL MAP ENTRY PTR @Z40LB64*/ 30250003
     DCL 1 CMENTRY BIT(8) BASED(CMENTPTR),                              30300003
           3 CMX0Z0 BIT(1),            /* X=0, Z=0           @Z40LB64*/ 30350003
           3 CMX0Z1 BIT(1),            /* X=0, Z=1           @Z40LB64*/ 30400003
           3 CMX1Z0 BIT(1),            /* X=1, Z=0           @Z40LB64*/ 30450003
           3 CMX1Z1 BIT(1),            /* X=1, Z=1           @Z40LB64*/ 30500003
           3 CMX2Z0 BIT(1),            /* X=2, Z=0           @Z40LB64*/ 30550003
           3 CMX2Z1 BIT(1),            /* X=2, Z=1           @Z40LB64*/ 30600003
           3 CMX3Z0 BIT(1),            /* X=3, Z=0           @Z40LB64*/ 30650003
           3 CMX3Z1 BIT(1);            /* X=3, Z=1           @Z40LB64*/ 30700003
./  ADD  SSI=42620333,NAME=IDCDF50
 /*******************************************************************/  00050003
 /*                                                          @Y30LB32*/ 00100003
 /*  PROCEDURE NAME - CKCSNLEN (FSR SUBROUTINE)              @Y30LB32*/ 00150003
 /*                                                          @Y30LB32*/ 00200003
 /*  FUNCTION - CHECKS LENGTH OF CARTRIDGE SERIAL NUMBER     @Y30LB32*/ 00250003
 /*             IF THE LENGTH OF THE CSN IS LESS THEN ELEVEN,@Y30LB32*/ 00300003
 /*             ISSUES MESSAGE IDC2099I, IF CSN IS ELEVEN    @Y30LB32*/ 00350003
 /*             A BLANK CHARACTER IS INSERTED AS THE FOURTH  @Y30LB32*/ 00400003
 /*             CHARACTER                                    @Y30LB32*/ 00450003
 /*                                                          @Y30LB32*/ 00500003
 /*  INPUT - CSN, LENGTH OF CSN                              @Y30LB32*/ 00550003
 /*                                                          @Y30LB32*/ 00600003
 /*  OUTPUT - CSN, RETURN CODE IN REGISTER 15(RETURN CODE    @Y30LB32*/ 00650003
 /*           ZERO IF CSN VALID AND FOUR IF CSN INVALID)     @Y30LB32*/ 00700003
 /*                                                          @Y30LB32*/ 00750003
 /********************************************************************/ 00800003
 CKCSNLEN:                                                 /*@Y30LB32*/ 00850003
    PROCEDURE(CKCSNVAL,                /* CSN VALUE          @Y30LB32*/ 00900003
              CKLENGTH)                /* LENGTH OF CSN      @Y30LB32*/ 00950003
    OPTIONS(NOSAVE,NOSAVEAREA);                            /*@Y30LB32*/ 01000003
                                                                        01050003
    /* DECLARATIONS FOR CKCSNLEN SUBROUTINE                  @Y30LB32*/ 01100003
    DCL CKCSNVAL CHAR(12);             /* CSN VALUE          @Y30LB32*/ 01150003
    DCL CKCSNADJ CHAR(12);             /* FOR ADJUSTED CSN   @Y30LB32*/ 01200003
    DCL CKLENGTH FIXED(8);             /* LENGTH OF CSN      @Y30LB32*/ 01250003
    DCL CKRETPTR PTR(31);              /* SAVE RETURN ADDR   @Y30LB32*/ 01300003
    DCL CKSAVPTR PTR(31);              /* TO SAVE POINTER    @Y30LB32*/ 01350003
    DCL CKPRTTAB CHAR(20) BDY(WORD);   /* PRINT TABLE AREA   @Y30LB32*/ 01400003
    DCL CKCOND FIXED(15);                                               01450003
    /* DECLARATIONS OF CONSTANTS                             @Y30LB32*/ 01500003
    DCL CKBLANK CHAR(1) CONSTANT(' '); /* BLANK TO INSERT IN @Y30LB32*/ 01550003
                                       /* CSN                @Y30LB32*/ 01600003
    DCL CKELEVEN BIT(8) CONSTANT('0B'X);/* TO CHECK LENGTH   @Y30LB32*/ 01650003
                                       /* OF CSN AGAINST     @Y30LB32*/ 01700003
    DCL CKMSGID CHAR(3) CONSTANT('CM0');/* MODULE MESSAGE ID @Y30LB32*/ 01750003
    DCL MSG2099I PTR(8) CONSTANT(1);   /* INVALID CSN MSG    @Y30LB32*/ 01800003
 @EJECT;                                                                01850003
    /* THIS IS THE START OF THE CHECK CSN SUBROUTINE         @Y30LB32*/ 01900003
    /* THE CALLERS RETURN ADDRESS IS SAVED                   @Y30LB32*/ 01950003
    CKRETPTR = REG14;                                      /*@Y30LB32*/ 02000003
    UTRACE = 'CKLN';                                       /*@Y30LB32*/ 02050003
    /* SAVE POINTER TO CALLERS PRINT TABLE,                  @Y30LB32*/ 02100003
    /* INITIALIZE THE PRINT ARGUMENT LIST                    @Y30LB32*/ 02150003
    /* AND CONDITION CODE TO ZEROES                           @Y30LB32*/02200003
    CKSAVPTR = DDSTRU;                                     /*@Y30LB32*/ 02250003
    DDSTRU = ADDR(CKPRTTAB);                               /*@Y30LB32*/ 02300003
    CKPRTTAB = NULLAREA;                                   /*@Y30LB32*/ 02400003
    CKCOND = NULLAREA;                                     /*@Y30LB32*/ 02450003
    /* CSN IS CHECKED FOR LENGTH OF ELEVEN CHARACTERS        @Y30LB32*/ 02500003
    /* OR MORE                                               @Y30LB32*/ 02550003
    IF CKLENGTH >= CKELEVEN THEN                           /*@Y30LB32*/ 02600003
    /* CSN IS CHECKED FOR LENGTH OF ELEVEN AND IF IT IS      @Y30LB32   02650003
       ELEVEN A BLANK CHARACTER IS INSERTED AS FOURTH        @Y30LB32   02700003
       CHARACTER                                             @Y30LB32*/ 02750003
      IF CKLENGTH = CKELEVEN THEN                          /*@Y30LB32*/ 02800003
        DO;                                                /*@Y30LB32*/ 02850003
          CKCSNADJ(4:4) = CKBLANK;                         /*@Y30LB32*/ 02900003
          CKCSNADJ(5:12) = CKCSNVAL(4:11);                 /*@Y30LB32*/ 02950003
          CKCSNVAL(4:12) = CKCSNADJ(4:12);                 /*@Y30LB32*/ 03000003
        END;                                               /*@Y30LB32*/ 03050003
      ELSE;                                                /*@Y30LB32*/ 03100003
    /* IF CSN IS LESS THEN ELEVEN CHARACTERS ERROR           @Y30LB32*/ 03150003
    /* MESSAGE IDC2099I IS WRITTEN AND CONDITION CODE SET    @Y30LB32*/ 03200003
    ELSE                                                   /*@Y30LB32*/ 03250003
      DO;                                                  /*@Y30LB32*/ 03300003
        DARGSMOD = CKMSGID;                                /*@Y30LB32*/ 03350003
        DARGSENT = MSG2099I;                               /*@Y30LB32*/ 03400003
        DARGDBP = ADDR(CKCSNVAL);                          /*@Y30LB32*/ 03450003
        DARGILP = LENGTH(CKCSNVAL);                        /*@Y30LB32*/ 03500003
        DARGRETP = NULLAREA;                               /*@Y30LB32*/ 03550003
                                                                        03600003
        UPRINT (GDTTBL,PRTFILE,DDSTRU);                    /*@Y30LB32*/ 03650003
                                                                        03700003
        CKCOND = RCFAIL;                                   /*@Y30LB32*/ 03750003
      END;                                                 /*@Y30LB32*/ 03800003
    /* RESTORE PRINT AREA POINTER AND RETURN ADDRESS AND     @Y30LB32*/ 03850003
    /* RETURN CONTROL TO CALLING FSR                         @Y30LB32*/ 03900003
    DDSTRU = CKSAVPTR;                                     /*@Y30LB32*/ 03950003
    REG14 = CKRETPTR;                                      /*@Y30LB32*/ 04000003
    RETURN CODE(CKCOND);                                   /*@Y30LB32*/ 04050003
    END CKCSNLEN;                                          /*@Y30LB32*/ 04100003
./  ADD  SSI=43100413,NAME=IDCDF51
 /********************************************************************/ 00050003
 /*                                                          @Y30LB38*/ 00100003
 /*     PROCEDURE NAME - VOLEXIT                             @Y30LB38*/ 00150003
 /*                                                          @Y30LB38*/ 00200003
 /*     FUNCTION - REMOVES A VOLUME FROM THE MSF.            @Y30LB38*/ 00250003
 /*                IF THE VOLUME IS EJECTED SUCCESSFULLY,    @Y30LB38*/ 00260003
 /*                ISSUES MESSAGE IDC0085I TO SYSPRINT AND   @Y30LB38*/ 00270003
 /*                MESSAGE IDC083E TO THE OPERATOR.  IF THE  @Y30LB38*/ 00280003
 /*                VOLUME IS NOT EJECTED SUCCESSFULLY, AN    @Y30LB38*/ 00290003
 /*                ERROR MESSAGE IS ISSUED VIA SSCMSG        @Y30LB38*/ 00292003
 /*                PROCEDURE AND MESSAGE IDC2084I IS ISSUED  @Y30LB38*/ 00294003
 /*                TO SYSPRINT.                              @Y30LB38*/ 00296003
 /*                                                          @Y30LB38*/ 00300003
 /*     INPUT - THE FOLLOWING POSITIONAL PARAMETERS ARE      @Y30LB38*/ 00350003
 /*             PASSED AS INPUT:                             @Y30LB38*/ 00400003
 /*             ARG1 = CSN OF FIRST VOLUME CARTRIDGE         @Y30LB38*/ 00450003
 /*             ARG2 = VOLUME SERIAL NUMBER                  @Y30LB38*/ 00500003
 /*             ARG3 = VVI ERROR FLAG                        @Y30LB38*/ 00550003
 /*             ARG4 = RETAIN RECORD FLAG                    @Y30LB38*/ 00600003
 /*             ARG5 = VOLUME STORAGE LOCATION               @Y30LB38*/ 00650003
 /*                                                          @Y30LB38*/ 00700003
 /*     OUTPUT - RETURN CODE IN REG15                        @Y30LB38*/ 00750003
 /*              REG15 = 00 CARTRIDGES EJECTED SUCCESSFULLY  @Y30LB38*/ 00800003
 /*              REG15 = 04 CARTRIDGES NOT EJECTED           @Y30LB38*/ 00850003
 /*                         SUCCESSFULLY                     @Y30LB38*/ 00900003
 /*              REG15 = 08 SECOND CARTRIDGE NOT EJECTED     @Y30LB38*/ 00950003
 /*                         SUCCESSFULLY                     @Y30LB38*/ 01000003
 /*                                                          @Y30LB38*/ 01050003
 /********************************************************************/ 01100003
 VOLEXIT:                                                               01200003
   PROCEDURE(VECSN1,                   /* CART SERIAL NUMBER @Y30LB38*/ 01250003
             VEVOLUME,                 /* VOL SERIAL NUMBER  @Y30LB38*/ 01300003
             VEVVIERR,                 /* VVI ERROR FLAG     @Y30LB38*/ 01350003
             VERECFLG,                 /* RETAIN RECORD FLAG @Y30LB38*/ 01400003
             VEVOLLOC)                 /* VOL STORAGE LOC    @Y30LB38*/ 01450003
             OPTIONS(NOSAVE,NOSAVEAREA);                   /*@Y30LB38*/ 01500003
   @EJECT;                                                 /*@Y30LB38*/ 01510003
   %INCLUDE SYSLIB(IEZMCRTE);                              /*@Y30LB38*/ 01550003
 @EJECT;                                                   /*@Y30LB38*/ 01600003
     /* DECLARATIONS FOR VOLEXIT                             @Y30LB38*/ 01650003
   DCL VEDDSTRU POINTER(31);           /* DARGLIST POINTER   @Y30LB38*/ 01700003
   DCL MCLSTPTR POINTER(31);           /* BASE PTR FOR MCLIST@Y30LB38*/ 01750003
   DCL MCRTEPTR POINTER(31);           /* PTR FOR MCLIST EXT @Y30LB38*/ 01800003
   DCL VERETADR POINTER(31);           /* RETURN ADDR        @Y30LB38*/ 01850003
   DCL VEMSGPTR POINTER(31);           /* MESSAGE PTR AREA   @Y30LB38*/ 01900003
   DCL VEWTOPTR POINTER(31);           /* WTO MSG POINTER    @Y30LB38*/ 02000003
   DCL VECOND FIXED(15);               /* CONDITION CODE     @Y30LB38*/ 02050003
   DCL VEWTOLEN FIXED(15);             /* LENGTH OF WTO MSG  @Y30LB38*/ 02100003
   DCL VERESNCD FIXED(31);             /* RSN CODE FOR USSC  @Y30LB38*/ 02150003
   DCL VEECB CHAR (1);                 /* ECB RETURN AREA    @Y30LB38*/ 02200003
     /* PARM LIST FOR UPRINT MACRO WITH MULTIPLE INSERTS     @Y30LB38*/ 02250003
   DCL VELIST CHAR(LENGTH(DARGLIST)+(4*LENGTH(DARGARY)));  /*@Y30LB38*/ 02300003
     /* POSITIONAL PARMS FOR INPUT PARMAMETERS               @Y30LB38*/ 02350003
   DCL VECSN1 CHAR(12);                /* CART SERIAL NUM    @Y30LB38*/ 02400003
   DCL VEVOLUME CHAR(6);               /* VOL SER NUMBER     @Y30LB38*/ 02450003
   DCL VEVVIERR BIT(1);                /* VVI ERROR FLAG     @Y30LB38*/ 02500003
   DCL VERECFLG BIT(1);                /* RETAIN REC FLAG    @Y30LB38*/ 02550003
   DCL VEVOLLOC CHAR(30);              /* VOL LOCATION       @Y30LB38*/ 02600003
   DCL VEWTOMSG CHAR(72);              /* UWTO MSG AREA      @Y30LB38*/ 02650003
     /* INVOKE LIST FORM OF MCLIST MACRO                     @Y30LB38*/ 02700003
    ? ICBMCRT MF(L,MCLIST,BASED(MCLSTPTR));                /*@Y30LB38*/ 02750003
   @EJECT;                                                              02760003
     /* DECLARE WORK AREA FOR MC LIST AND EXTENSION LIST     @Y30LB38*/ 02800003
   DCL VEMCLIST CHAR(LENGTH(MCLIST));                      /*@Y30LB38*/ 02850003
   DCL VEEXLIST CHAR(LENGTH(MCRTE));                       /*@Y30LB38*/ 02900003
     /* DECLARE WORK AREA FOR JOBNAME AND STEPNAME USED BY   @Y30LB38   02950003
        USYSINFO MACRO                                       @Y30LB38*/ 03000003
   DCL 1 VESYSIN CHAR(16),                                              03050003
     2 VEJOBNAM CHAR(8),                                                03100003
     2 VESTEPNM CHAR(8);                                   /*@Y30LB38*/ 03150003
     /* DECLARE ROUTING AND DESCRIPTOR CODE AREAS FOR UWTO   @Y30LB38*/ 03200003
   DCL 1 VEROUTCD BIT(16),                                              03250003
     2 VECD1 BIT(1),                                                    03300003
     2 * BIT(15);                                          /*@Y30LB38*/ 03350003
   DCL 1 VEDESCCD BIT(16),                                              03400003
     2 * BIT(2),                                                        03450003
     2 VEDESC3 BIT(1),                                                  03500003
     2 * BIT(12);                                          /*@Y30LB38*/ 03550003
     /* DECLARE WORK AREA FOR UDUMP MACRO                    @Y30LB38*/ 03600003
   DCL VEDMPSTG CHAR(17);                                  /*@Y30LB38*/ 03650003
     /* DECLARE STATIC MODULE ID FOR MESSAGES USED BY        @Y30LB38   03700003
        COMMON FSR'S                                         @Y30LB38*/ 03750003
   DCL VECMOMSG CHAR(3) CONSTANT('CM0');                   /*@Y30LB38*/ 03800003
   DCL MSG0085I PTR(8) CONSTANT(21);   /* MSG ENTRY NUMBER   @Y30LB38*/ 03850003
   DCL MSG2084I PTR(8) CONSTANT(22);   /* MSG ENTRY NUMBER   @Y30LB38*/ 03900003
   DCL MSG083E PTR(8) CONSTANT(23);    /* MSG ENTRY NUMBER   @Y30LB38*/ 03950003
     /* VOLEXIT CONSTANTS                                    @Y30LB38*/ 04000003
   DCL VEECBLEN FIXED(31) CONSTANT(4); /* LENGTH OF ECB      @Y30LB38*/ 04050003
 @EJECT;                                                                04100003
     /* SAVE RETURN ADDRESS AND INITIALIZE PARAMETER LISTS   @Y30LB38*/ 04150003
   VERETADR = REG14;                                       /*@Y30LB38*/ 04200003
   UTRACE = 'VESR';                                        /*@Y30LB38*/ 04250003
   VELIST = ''B;                                           /*@Y30LB38*/ 04300003
   VEDDSTRU = ADDR(VELIST);                                /*@Y30LB38*/ 04350003
   MCLSTPTR = ADDR(VEMCLIST);                              /*@Y30LB38*/ 04400003
   MCRTEPTR = ADDR(VEEXLIST);                              /*@Y30LB38*/ 04450003
   VEWTOPTR = ADDR(VEWTOMSG);                              /*@Y30LB38*/ 04460003
   MCLIST = ''B;                                           /*@Y30LB38*/ 04500003
   MCRTE = ''B;                                            /*@Y30LB38*/ 04550003
   VECOND = '0'X;                                          /*@Y30LB38*/ 04600003
     /* INITIALIZE MCLIST FOR USSC MACRO                     @Y30LB38*/ 04650003
   MCRLNGTH = MCRLEN;                                      /*@Y30LB38*/ 04660003
   MCRTCSN = VECSN1;                                       /*@Y30LB38*/ 04700003
   MCRTTRAN = ON;                                          /*@Y30LB38*/ 04750003
   IF VERECFLG = ON THEN                                                04800003
     MCRREC = ON;                                          /*@Y30LB38*/ 04850003
   MCRLOC = VEVOLLOC;                                      /*@Y30LB38*/ 04900003
   MCRTVEXT = MCRTEPTR;                                    /*@Y30LB38*/ 04950003
   MCRSPLOC = ON;                                          /*@Y30LB38*/ 05000003
     /* TAKE UDUMP OF MOVE VOLUME PARAMETER LIST (MCLIST)    @Y30LB38*/ 05050003
   ? DMPSTART LIST(VEDMPSTG);                              /*@Y30LB38*/ 05100003
   ? DMPITEM NAME(MCLIST) LENGTH(LENGTH(MCLIST)) TYPE(H)                05150003
     ADDRESS(MCLSTPTR);                                    /*@Y30LB38*/ 05200003
   ? DMPEND;                                               /*@Y30LB38*/ 05250003
   UDUMP (GDTTBL,'VEBM',ADDR(VEDMPSTG));                   /*@Y30LB38*/ 05300003
     /*  ISSUE USSC MACRO TO EJECT THE VOLUME                @Y30LB38*/ 05350003
   USSC(GDTTBL,MOVE,MCLSTPTR,VERESNCD,VEECB,VEMSGPTR);     /*@Y30LB38*/ 05400003
   USAVERC;                                                /*@Y30LB38*/ 05450003
     /* SET UP ADDRESSABILITY TO MESSAGE AREA FROM USSC      @Y30LB38*/ 05500003
   VEMSGPTR = VEMSGPTR+VEECBLEN;                           /*@Y30LB38*/ 05550003
   @EJECT;                                                 /*@Y30LB38*/ 05560003
     /*  IF CARTRIDGE WERE SUCCESSFULLY EJECTED; ISSUE THE   @Y30LB38   05600003
         APPROPRIATE MESSAGE                                 @Y30LB38*/ 05650003
   IF TESTRC = LASTCC00 | TESTRC = LASTCC12 THEN                        05750003
     DO;                                                   /*@Y30LB38*/ 05800003
     /*  IF AN ERROR OCCURRES UPDATING INVENTORY, SET A      @Y30LB38   05850003
         FLAG ON FOR THE CALLER                              @Y30LB38*/ 05900003
       IF TESTRC = LASTCC12 THEN                                        05950003
         VEVVIERR = ON;                                    /*@Y30LB38*/ 06000003
     /* ISSUE USYSINFO MACRO TO OBTAIN JOBNAME AND STEPNAME  @Y30LB38   06050003
        TO BE USED IN MESSAGE IDC083E                        @Y30LB38*/ 06100003
       USYSINFO (GDTTBL,NAMES,ADDR(VESYSIN));              /*@Y30LB38*/ 06150003
     /* INITIIALIZE DARGLIST WITH MULTIPLE INSERTS           @Y30LB38   06200003
        FOR MESSAGE IDC083E                                  @Y30LB38*/ 06250003
       VEDDSTRU -> DARGSMOD = VECMOMSG;                    /*@Y30LB38*/ 06300003
       VEDDSTRU -> DARGSENT = MSG083E;                     /*@Y30LB38*/ 06350003
       VEDDSTRU -> DARGDBP =ADDR(VEMSGPTR->CMCSN1);        /*@Y30LB38*/ 06400003
       VEDDSTRU -> DARGILP = LENGTH(CMCSN1);               /*@Y30LB38*/ 06450003
       VEDDSTRU -> DARGRETP = VEWTOPTR;                    /*@Y30LB38*/ 06500003
       VEDDSTRU -> DARGRETL = LENGTH(VEWTOMSG);            /*@Y30LB38*/ 06550003
     /* IF BOTH CARTRIDGES WERE EJECTED, SET DARGLIST        @Y30LB38   06600003
        FOR FIVE INSERTS.  IF NOT USE FOUR INSERTS.          @Y30LB38   06650003
      IF FIVE INSERTS ARE USED, THEY WILL BE CSN1, CSN2,     @Y30LB38   06700003
       VOLUME SERIAL NUMBER, JOB NAME AND STEP NAME.         @Y30LB38   06750003
       IF FOUR INSERTS ARE USED CSN2 WILL BE OMMITTED.       @Y30LB38*/ 06800003
       IF VEMSGPTR -> CMNUMCRT = 'F2'X THEN                /*@Y30LB38*/ 06850003
         DO;                                               /*@Y30LB38*/ 06900003
           VEDDSTRU -> DARGCNT = '4'X;                     /*@Y30LB38*/ 06950003
           VEDDSTRU -> DARGINS(1) = '1'X;                  /*@Y30LB38*/ 07000003
           VEDDSTRU -> DARGINL(1)=LENGTH(CMCSN2);          /*@Y30LB38*/ 07050003
           VEDDSTRU -> DARGDTM(1) =ADDR(VEMSGPTR->CMCSN2); /*@Y30LB38*/ 07100003
           VEDDSTRU -> DARGINS(2) = '2'X;                  /*@Y30LB38*/ 07150003
           VEDDSTRU -> DARGINL(2) = LENGTH(VEVOLUME);      /*@Y30LB38*/ 07200003
           VEDDSTRU -> DARGDTM(2) = ADDR(VEVOLUME);        /*@Y30LB38*/ 07250003
           VEDDSTRU -> DARGINS(3) = '3'X;                  /*@Y30LB38*/ 07300003
           VEDDSTRU -> DARGINL(3) = LENGTH(VEJOBNAM);      /*@Y30LB38*/ 07350003
           VEDDSTRU -> DARGDTM(3) = ADDR(VEJOBNAM);        /*@Y30LB38*/ 07400003
           VEDDSTRU -> DARGINS(4) = '4'X;                  /*@Y30LB38*/ 07450003
           VEDDSTRU -> DARGINL(4) = LENGTH(VESTEPNM);      /*@Y30LB38*/ 07500003
           VEDDSTRU -> DARGDTM(4) = ADDR(VESTEPNM);        /*@Y30LB38*/ 07550003
         END;                                              /*@Y30LB38*/ 07600003
       ELSE                                                             07650003
         DO;                                               /*@Y30LB38*/ 07700003
           VEDDSTRU -> DARGCNT = '3'X;                     /*@Y30LB38*/ 07750003
           VEDDSTRU -> DARGINS(1) = '2'X;                  /*@Y30LB38*/ 07800003
           VEDDSTRU -> DARGINL(1) = LENGTH(VEVOLUME);      /*@Y30LB38*/ 07850003
           VEDDSTRU -> DARGDTM(1) = ADDR(VEVOLUME);        /*@Y30LB38*/ 07900003
           VEDDSTRU -> DARGINS(2) = '3'X;                  /*@Y30LB38*/ 07950003
           VEDDSTRU -> DARGINL(2) = LENGTH(VEJOBNAM);      /*@Y30LB38*/ 08000003
           VEDDSTRU -> DARGDTM(2) = ADDR(VEJOBNAM);        /*@Y30LB38*/ 08050003
           VEDDSTRU -> DARGINS(3) = '4'X;                  /*@Y30LB38*/ 08100003
           VEDDSTRU -> DARGINL(3) = LENGTH(VESTEPNM);      /*@Y30LB38*/ 08150003
           VEDDSTRU -> DARGDTM(3) = ADDR(VESTEPNM);        /*@Y30LB38*/ 08200003
         END;                                              /*@Y30LB38*/ 08250003
     /*  ISSUE UPRINT MACRO TO RETRIEVE MESSAGE IDC0083I     @Y30LB38*/ 08300003
       UPRINT (GDTTBL,PRTFILE,VEDDSTRU);                   /*@Y30LB38*/ 08350003
     /* SET MESSAGE LENGTH AND ROUTING AND DESCRIPTOR CODES  @Y30LB38   08450003
        FOR UWTO MACRO.  ISSUE UWTO MACRO TO WRITE MESSAGE              08500003
        IDC2083E TO THE SYSTEM OPERATOR.                     @Y30LB38*/ 08550003
       VEWTOLEN = LENGTH(VEWTOMSG);                        /*@Y30LB38*/ 08600003
       VEROUTCD = ''B;                                     /*@Y30LB38*/ 08650003
       VECD1 = ON;                                         /*@Y30LB38*/ 08700003
       VEDESCCD = ''B;                                     /*@Y30LB38*/ 08750003
       VEDESC3 = ON;                                       /*@Y30LB38*/ 08800003
       UWTO (GDTTBL,VEWTOLEN,VEWTOPTR,VEROUTCD,VEDESCCD);  /*@Y30LB38*/ 08850003
   @EJECT;                                                 /*@Y30LB38*/ 08860003
     /* TEST IF BOTH SERIAL NUMBERS WERE SPECIFIED?  IF      @Y30LB38   08900003
        YES, PUT BOTH CSN'S IN MESSAGE IDC0085I AND                     08950003
        PRINT THE MESSAGE.  IF NO, USE ONLY THE FIRST CSN.   @Y30LB38*/ 09000003
       VELIST = ''B;                                       /*@Y30LB38*/ 09050003
       VEDDSTRU -> DARGSMOD = VECMOMSG;                    /*@Y30LB38*/ 09100003
       VEDDSTRU -> DARGSENT = MSG0085I;                    /*@Y30LB38*/ 09150003
       VEDDSTRU -> DARGDBP =ADDR(VEMSGPTR->CMCSN1);        /*@Y30LB38*/ 09200003
       VEDDSTRU -> DARGILP = LENGTH(CMCSN1);               /*@Y30LB38*/ 09250003
       IF VEMSGPTR -> CMNUMCRT = 'F2'X THEN                /*@Y30LB38*/ 09300003
         DO;                                               /*@Y30LB38*/ 09350003
           VEDDSTRU -> DARGCNT = '1'X;                     /*@Y30LB38*/ 09400003
           VEDDSTRU -> DARGINS(1) = '1'X;                  /*@Y30LB38*/ 09450003
           VEDDSTRU -> DARGINL(1)=LENGTH(CMCSN2);          /*@Y30LB38*/ 09500003
           VEDDSTRU -> DARGDTM(1) =ADDR(VEMSGPTR->CMCSN2); /*@Y30LB38*/ 09550003
         END;                                              /*@Y30LB38*/ 09600003
       UPRINT (GDTTBL,PRTFILE,VEDDSTRU);                   /*@Y30LB38*/ 09650003
     /* ISSUE UFSPACE MACRO TO FREE MESSAGE AREA SPACE       @Y30LB38   09700003
        FROM THE USSC MACRO                                  @Y30LB38*/ 09750003
       VEMSGPTR = VEMSGPTR-VEECBLEN;                      /*@Y30LB38*/  09800003
       UFSPACE (GDTTBL,VEMSGPTR);                          /*@Y30LB38*/ 09850003
     END;                                                  /*@Y30LB38*/ 09900003
   @EJECT;                                                 /*@Y30LB38*/ 09950003
   ELSE                                                                 10000003
     DO;                                                   /*@Y30LB38*/ 10050003
     /* THE RETURN CODE FROM THE USSC MACRO WAS NOT 0 OR 12. @Y30LB38   10100003
        A RETURN CODE OF 8 IS CHECKED TO DETERMINE IF USSC              10150003
        COULD NOT GET STORAGE.  IF YES, MESSAGE IDC2084I                10200003
        IS WRITTEN AND RETURN TO CALLER WITH CONDITION                  10250003
        CODE 4.                                              @Y30LB38*/ 10300003
       IF TESTRC = LASTCC08 THEN                                        10350003
         DO;                                               /*@Y30LB38*/ 10400003
           VELIST = ''B;                                   /*@Y30LB38*/ 10450003
           VEDDSTRU -> DARGSMOD = VECMOMSG;                /*@Y30LB38*/ 10500003
           VEDDSTRU -> DARGSENT = MSG2084I;                /*@Y30LB38*/ 10550003
           UPRINT (GDTTBL,PRTFILE,VEDDSTRU);               /*@Y30LB38*/ 10600003
           VECOND = LASTCC04;                              /*@Y30LB38*/ 10650003
         END;                                              /*@Y30LB38*/ 10700003
       ELSE                                                             10750003
         DO;                                               /*@Y30LB38*/ 10800003
     /* IF THE RETURN CODE WAS NOT 8, TEST IF THE REASON     @Y30LB38   10850003
        CODE WAS '4C'X INDICATING THAT THE FIRST CARTRIDGE              10900003
        WAS EJECTED BUT THE SECOND WAS NOT.  IF YES,                    10950003
        ISSUE UPRINT AND UWTO MACROS TO WRITE MESSAGE                   11000003
        IDC083E TO THE SYSTEM OPERATOR AND ISSUE UPRINT                 11050003
        MACRO TO WRITE MESSAGE IDC0085I TO THE USER.         @Y30LB38   11100003
        ISSUE USYSINFO MACRO TO OBTAIN JOBNAME AND STEPNAME  @Y30LB38   11150003
        TO BE USED IN MESSAGE IDC083E                        @Y30LB38*/ 11200003
           IF VERESNCD = '4C'X THEN                                     11250003
             DO;                                           /*@Y30LB38*/ 11300003
               USYSINFO (GDTTBL,NAMES,ADDR(VESYSIN));      /*@Y30LB38*/ 11350003
               VEDDSTRU -> DARGSMOD = VECMOMSG;            /*@Y30LB38*/ 11400003
               VEDDSTRU -> DARGSENT = MSG083E;             /*@Y30LB38*/ 11450003
               VEDDSTRU -> DARGDBP=ADDR(VECSN1);           /*@Y30LB38*/ 11500003
               VEDDSTRU ->DARGILP=LENGTH(VECSN1);          /*@Y30LB38*/ 11550003
               VEDDSTRU -> DARGRETP = VEWTOPTR;            /*@Y30LB38*/ 11600003
               VEDDSTRU -> DARGRETL = LENGTH(VEWTOMSG);    /*@Y30LB38*/ 11650003
               VEDDSTRU -> DARGCNT = '3'X;                 /*@Y30LB38*/ 11700003
               VEDDSTRU -> DARGINS(1) = '2'X;              /*@Y30LB38*/ 11750003
               VEDDSTRU -> DARGINL(1) = LENGTH(VEVOLUME);  /*@Y30LB38*/ 11800003
               VEDDSTRU -> DARGDTM(1) = ADDR(VEVOLUME);    /*@Y30LB38*/ 11850003
               VEDDSTRU -> DARGINS(2) = '3'X;              /*@Y30LB38*/ 11900003
               VEDDSTRU -> DARGINL(2) = LENGTH(VEJOBNAM);  /*@Y30LB38*/ 11950003
               VEDDSTRU -> DARGDTM(2) = ADDR(VEJOBNAM);    /*@Y30LB38*/ 12000003
               VEDDSTRU -> DARGINS(3) = '4'X;              /*@Y30LB38*/ 12050003
               VEDDSTRU -> DARGINL(3) = LENGTH(VESTEPNM);  /*@Y30LB38*/ 12100003
               VEDDSTRU -> DARGDTM(3) = ADDR(VESTEPNM);    /*@Y30LB38*/ 12150003
               UPRINT (GDTTBL,PRTFILE,VEDDSTRU);           /*@Y30LB38*/ 12200003
     /* SET MESSAGE LENGTH AND ROUTING AND DESCRIPTOR CODES  @Y30LB38   12250003
        FOR UWTO MACRO.  ISSUE UWTO MACRO TO WRITE MESSAGE              12300003
        IDC083E TO THE SYSTEM OPERATOR.                      @Y30LB38*/ 12350003
               VEWTOLEN = LENGTH(VEWTOMSG);                /*@Y30LB38*/ 12400003
               VEROUTCD = ''B;                             /*@Y30LB38*/ 12450003
               VECD1 = ON;                                 /*@Y30LB38*/ 12500003
               VEDESCCD = ''B;                             /*@Y30LB38*/ 12550003
               VEDESC3 = ON;                               /*@Y30LB38*/ 12600003
          UWTO(GDTTBL,VEWTOLEN,VEWTOPTR,VEROUTCD,VEDESCCD);/*@Y30LB38*/ 12650003
     /* ISSUE UPRINT MACRO TO PRINT MESSAGE IDC0085I         @Y30LB38*/ 12700003
               VELIST = ''B;                               /*@Y30LB38*/ 12750003
               VEDDSTRU -> DARGSMOD = VECMOMSG;            /*@Y30LB38*/ 12800003
               VEDDSTRU -> DARGSENT = MSG0085I;            /*@Y30LB38*/ 12850003
               VEDDSTRU -> DARGDBP =ADDR(VECSN1);          /*@Y30LB38*/ 12900003
               VEDDSTRU ->DARGILP=LENGTH(VECSN1);          /*@Y30LB38*/ 12950003
               UPRINT (GDTTBL,PRTFILE,VEDDSTRU);           /*@Y30LB38*/ 13000003
     /* THE SSCMSG ROUTINE IS CALLED TO WRITE THE MSS        @Y30LB38   13050003
        MESSAGE EXPLAINING THE SECOND CARTRIDGE                         13100003
        WAS NOT EJECTED.                                     @Y30LB38*/ 13150003
               CALL SSCMSG(VERESNCD);                      /*@Y30LB38*/ 13200003
               VECOND = LASTCC08;                          /*@Y30LB38*/ 13250003
             END;                                          /*@Y30LB38*/ 13300003
   @EJECT;                                                              13310003
           ELSE                                                         13350003
             DO;                                           /*@Y30LB38*/ 13400003
     /* RETURN CODE FROM USSC IS 4 INDICATING THAT           @Y30LB38   13450003
        THE CARTRIDGES WERE NOT EJECTED.  THE SSCMSG                    13500003
        ROUTINE IS CALLED TO WRITE THE MSS MESSAGE                      13550003
        EXPLAINING THE ERROR.  MESSAGE IDC2048I IS                      13600003
        WRITTEN TO THE USER WITH THE UPRINT MACRO.           @Y30LB38*/ 13650003
               CALL SSCMSG(VERESNCD);                      /*@Y30LB38*/ 13700003
               VEDDSTRU -> DARGSMOD = VECMOMSG;            /*@Y30LB38*/ 13750003
               VEDDSTRU -> DARGSENT = MSG2084I;            /*@Y30LB38*/ 13800003
               UPRINT (GDTTBL,PRTFILE,VEDDSTRU);           /*@Y30LB38*/ 13850003
               VECOND = LASTCC04;                          /*@Y30LB38*/ 13900003
             END;                                          /*@Y30LB38*/ 13950003
         END;                                              /*@Y30LB38*/ 14000003
     END;                                                  /*@Y30LB38*/ 14050003
     /* RESTORE RETURN ADDRESS AND RETURN TO CALLER          @Y30LB38*/ 14060003
   REG14 = VERETADR;                                       /*@Y30LB38*/ 14100003
   RETURN CODE(VECOND);                                    /*@Y30LB38*/ 14150003
 END VOLEXIT;                                              /*@Y30LB38*/ 14200003
./  ADD  SSI=42620334,NAME=IDCDF52
 /***********************************************************@Y30LB39*/ 00010003
 /* PROCEDURE NAME - SSCMSG                                  @Y30LB39*/ 00020003
 /*                                                          @Y30LB39*/ 00030003
 /* FUNCTION - THIS ROUTINE PRINTS MESSAGES                  @Y30LB39*/ 00040003
 /*   FROM IDCTSSS0 OR IDCTSCM0 AS DICTATED BY THE MSSC      @Y30LB39*/ 00050003
 /*   REASON CODE OR THE ECB POST CODE, EITHER ONE PASSED AS @Y30LB39*/ 00060003
 /*   INPUT ARGUMENTS.                                       @Y30LB39*/ 00070003
 /*                                                          @Y30LB39*/ 00090003
 /*   THE REASON CODE IS PASSED TO THIS ROUTINE FROM THE     @Y30LB39*/ 00100003
 /*   CALLER IN SSRCODE, AND THE ECB POST CODE IS PASSED     @Y30LB39*/ 00110003
 /*   IN SSECBCD.                                            @Y30LB39*/ 00120003
 /*                                                          @Y30LB39*/ 00130003
 /*   ONLY ONE MESSAGE IS PRINTED. IF THE REASON CODE        @Y30LB39*/ 00140003
 /*   CONTAINS A NUMBER GREATER THAN ZERO, IT IS USED AS     @Y30LB39*/ 00150003
 /*   THE INDICATION TO CALL UPRINT TO READ IN THE FIRST     @Y30LB39*/ 00200003
 /*   STATIC TEXT ENTRY FROM IDCTSSS0.  THAT ENTRY CONTAINS  @Y30LB39*/ 00202003
 /*   AN ARRAY OF THE MESSAGE INDICES USED TO PRINT THE      @Y30LB39*/ 00204003
 /*   MSSC REASON CODE MESSAGE. THE ARRAY IS SCANNED FOR THE @Y30LB39*/ 00206003
 /*   REASON CODE THAT WAS PASSED AS THE FIRST PARAMETER.    @Y30LB39*/ 00208003
 /*   IF THE ARRAY CONTAINS AN ENTRY WITH THAT VALUE, THE    @Y30LB39*/ 00208403
 /*   ARRAY INDEX IS USED TO PRINT THE MESSAGE.  IF THE      @Y30LB39*/ 00208803
 /*   REASON CODE IS NOT FOUND IN THE ARRAY, THE REASON      @Y30LB39*/ 00209203
 /*   CODE IS USED AS BLOCK DATA WHEN PRINTING THE "LAST"    @Y30LB39*/ 00209603
 /*   STATIC TEXT ENTRY IN THE TEXT MODULE.                  @Y30LB39*/ 00209703
 /*                                                          @Y30LB39*/ 00210003
 /*   IF THE REASON CODE FIELD IS ZERO, THE ECB POST CODE    @Y30LB39*/ 00220003
 /*   IS INSERTED AS BLOCK DATA INTO A GENERAL MESSAGE IN    @Y30LB39*/ 00230003
 /*   STATIC TEXT MODULE IDCTSCM0.                           @Y30LB39*/ 00240003
 /*                                                          @Y30LB39*/ 00250003
 /* INPUT - REASON CODE AS FIRST ARGUMENT, OPTIONALLY THE    @Y30LB39*/ 00260003
 /*         ECB CODE AS THE SECOND ARGUMENT.                 @Y30LB39*/ 00260103
 /*                                                          @Y30LB39*/ 00270003
 /* OUTPUT - PRINTED MESSAGE AND RETURN CODE OF ZERO.        @Y30LB39*/ 00280003
 /*                                                          @Y30LB39*/ 00290003
 /***********************************************************@Y30LB39*/ 00320003
                                                           /*@Y30LB39*/ 00330003
 SSCMSG: PROCEDURE(SSRCODE,            /* SSC RETURN CODE    @Y30LB39*/ 00340003
                   SSECBCD);           /* ECB POST CODE      @Y30LB39*/ 00350003
                                                           /*@Y30LB39*/ 00360003
 @EJECT;                                                   /*@Y30LB39*/ 00370003
                                                           /*@Y30LB39*/ 00372003
         /************************************************************/ 00374003
         /*                                                  @Y30LB39*/ 00376003
         /*  DECLARATIONS FOR THE SSCMSG PROCEDURE           @Y30LB39*/ 00376403
         /*                                                  @Y30LB39*/ 00378003
         /************************************************************/ 00378403
                                                           /*@Y30LB39*/ 00378803
                                                           /*@Y30LB39*/ 00379203
         /************************************************************/ 00379603
         /*                                                  @Y30LB39*/ 00379703
         /*  THE NEXT TWO DECLARES ARE FOR THE TWO INPUT     @Y30LB39*/ 00379803
         /*  ARGUMENTS. 1ST - MSSC REASON CODE OR            @Y30LB39*/ 00381803
         /*  2ND - MSSC POST CODE                            @Y30LB39*/ 00383803
         /*                                                  @Y30LB39*/ 00384003
         /************************************************************/ 00386003
                                                           /*@Y30LB39*/ 00388003
         DCL 1 SSRCODE FIXED(31),                          /*@Y30LB39*/ 00390003
               3 * FIXED(15),                              /*@Y30LB39*/ 00392003
               3 SSRHALF FIXED(15);    /*1ST ARG REASON CODE @Y30LB39*/ 00394003
         DCL SSECBCD PTR(8);           /*2ND ARG POST CODE   @Y30LB39*/ 00396003
                                                           /*@Y30LB39*/ 00398003
                                                           /*@Y30LB39*/ 00408003
         /************************************************************/ 00408403
         /*                                                  @Y30LB39*/ 00408803
         /*  DECLARE THE DYNAMIC AREA NEEDED TO POINT TO AND @Y30LB39*/ 00408903
         /*  CONTAIN THE "LOCAL" PRINT ARGUMENT LIST         @Y30LB39*/ 00409003
         /*                                                  @Y30LB39*/ 00409203
         /************************************************************/ 00409603
                                                           /*@Y30LB39*/ 00410003
         DCL SSDLPTR PTR(31);                              /*@Y30LB39*/ 00450003
         DCL SSDRGLT CHAR(LENGTH(DARGLIST));               /*@Y30LB39*/ 00462003
                                                           /*@Y30LB39*/ 00470003
         /************************************************************/ 00505703
         /*                                                  @Y30LB39*/ 00505803
         /*  THE NEXT DECLARE IS FOR THE INDEX WHICH IS      @Y30LB39*/ 00505903
         /*  INCREMENTED WHILE SEARCHING THE ARRAY OF        @Y30LB39*/ 00506003
         /*  REASON CODES AND, UPON FINDING THE CORRECT      @Y30LB39*/ 00506603
         /*  REASON CODE, IS PASSED TO PRINT MODULE AS THE   @Y30LB39*/ 00507303
         /*  INDEX OF THE MESSAGE NUMBER TO BE PRINTED.      @Y30LB39*/ 00508003
         /*                                                  @Y30LB39*/ 00508703
         /************************************************************/ 00509403
                                                           /*@Y30LB39*/ 00510103
         DECLARE ENTRYNUM FIXED(8) UNSIGNED;               /*@Y30LB39*/ 00510803
                                                           /*@Y30LB39*/ 00511903
         /************************************************************/ 00512003
         /*                                                  @Y30LB39*/ 00512103
         /*  THE NEXT DECLARE IS FOR THE COMMON MESSAGE      @Y30LB39*/ 00512503
         /*  NUMBER TO IDENTIFY THE ECB POST CODE            @Y30LB39*/ 00512903
         /*  MESSAGE CONTAINED IN STATIC TEXT MODULE         @Y30LB39*/ 00513003
         /*  IDCTSCM0.                                       @Y30LB39*/ 00513203
         /*                                                  @Y30LB39*/ 00513603
         /************************************************************/ 00513803
                                                           /*@Y30LB39*/ 00514003
         DECLARE SSMSGNUM FIXED(8) STATIC LOCAL INIT(56);  /*@Y30LB39*/ 00514403
                                                           /*@Y30LB39*/ 00515003
         /************************************************************/ 00516003
         /*                                                  @Y30LB39*/ 00517003
         /*  THE NEXT DECLARE IS FOR THE ARRAY WHICH IS      @Y30LB39*/ 00518003
         /*  SEARCHED FOR THE REASON CODE CORRESPONDING      @Y30LB39*/ 00519003
         /*  TO THE MESSAGE INDEX AND ULTIMATELY, THE        @Y30LB39*/ 00520003
         /*  MESSAGE TEXT TO BE PRINTED TO THE USER TELLING  @Y30LB39*/ 00521003
         /*  HIM OF THE EXACT REASON FOR THE MSSC FAILURE.   @Y30LB39*/ 00522003
         /*                                                  @Y30LB39*/ 00523003
         /************************************************************/ 00524003
                                                           /*@Y30LB39*/ 00525003
         DECLARE 1 SSINXLST BDY(WORD),                     /*@Y30LB39*/ 00526003
                   3 SSARRAY (60) FIXED(15);               /*@Y30LB39*/ 00527003
                                                           /*@Y30LB39*/ 00528003
         /************************************************************/ 00529003
         /*                                                  @Y30LB39*/ 00530003
         /*  THE NEXT DECLARATION IS FOR THE MESSAGE ID      @Y30LB39*/ 00532003
         /*  USED BY THE STATIC TEXT MODULE - IDCTSSS0.      @Y30LB39*/ 00534003
         /*                                                  @Y30LB39*/ 00540003
         /************************************************************/ 00542003
                                                           /*@Y30LB39*/ 00544003
         DECLARE SSMODSS0 CHAR(3) STATIC INIT('SS0');      /*@Y30LB39*/ 00546003
                                                           /*@Y30LB39*/ 00550003
         /************************************************************/ 00550803
         /*                                                  @Y30LB39*/ 00551203
         /*  THE NEXT DECLARATION IS FOR THE MESSAGE ID      @Y30LB39*/ 00551603
         /*  USED BY THE STATIC TEXT MODULE - IDCTSCMO.      @Y30LB39*/ 00551703
         /*                                                  @Y30LB39*/ 00551803
         /************************************************************/ 00551903
                                                           /*@Y30LB39*/ 00553503
         DECLARE SSMODCM0 CHAR(3) STATIC INIT('CM0');      /*@Y30LB39*/ 00555503
                                                           /*@Y30LB39*/ 00555603
 @EJECT;                                                   /*@Y30LB39*/ 00810403
                                                           /*@Y30LB39*/ 00812003
         /************************************************************/ 00814003
         /*  ISSUE UTRACE MACRO TO PROVIDE A TRACK OF FLOW   @Y30LB39*/ 00816003
         /*  ON CONTROL WITHIN THE SSMSG MODULE.             @Y30LB39*/ 00818003
         /*  THIS WILL PLACE THE IDENTIFIER SPECIFIED IN     @Y30LB39*/ 00818403
         /*  A SEPARATE INTRA-MODULE TRACE TABLE.            @Y30LB39*/ 00818803
         /*                                                  @Y30LB39*/ 00819203
         /************************************************************/ 00819603
                                                           /*@Y30LB39*/ 00819703
         UTRACE = 'SSAA';                                  /*@Y30LB39*/ 00830003
                                                           /*@Y30LB39*/ 00852003
         /************************************************************/ 00854003
         /*                                                  @Y30LB39*/ 00856003
         /*  ESTABLISH ADDRESSABILITY TO THE DYNAMIC         @Y30LB39*/ 00856403
         /*  ARGUMENT LIST.                                  @Y30LB39*/ 00856803
         /*                                                  @Y30LB39*/ 00858003
         /************************************************************/ 00858403
                                                           /*@Y30LB39*/ 00858803
         SSDLPTR = ADDR(SSDRGLT);                          /*@Y30LB39*/ 00859203
                                                           /*@Y30LB39*/ 00861203
         /************************************************************/ 00865103
         /*                                                  @Y30LB39*/ 00866003
         /*  IF THE REASON CODE IS NOT ZERO, READ IN THE     @Y30LB39*/ 00866503
         /*  ARRAY FROM THE STATIC TEXT MODULE - IDCTSSS0.   @Y30LB39*/ 00867203
         /*                                                  @Y30LB39*/ 00868003
         /************************************************************/ 00868403
                                                           /*@Y30LB39*/ 00868803
         IF SSRCODE > 0 THEN                                            00900003
           DO;                                             /*@Y30LB39*/ 00950003
                                                           /*@Y30LB39*/ 01000003
             /********************************************************/ 01050003
             /*                                              @Y30LB39*/ 01060003
             /*  CLEAR THE DYNAMIC ARGUMENT LIST AND         @Y30LB39*/ 01062003
             /*  INITIALIZE THE PRINT ARGUMENT LIST TO READ  @Y30LB39*/ 01064003
             /*  IN THE ARRAY WHICH CONTAINS THE MSSC REASON @Y30LB39*/ 01066003
             /*  CODES.                                      @Y30LB39*/ 01068003
             /*                                              @Y30LB39*/ 01070003
             /********************************************************/ 01080003
                                                           /*@Y30LB39*/ 01082003
             SSDRGLT = NULLAREA;                           /*@Y30LB39*/ 01084003
             SSDLPTR -> DARGRETP = ADDR(SSINXLST);         /*@Y30LB39*/ 01086003
             SSDLPTR -> DARGSMOD = SSMODSS0;               /*@Y30LB39*/ 01088003
             SSDLPTR -> DARGSENT = 1;                      /*@Y30LB39*/ 01088403
             SSDLPTR -> DARGRETL = LENGTH(SSINXLST);       /*@Y30LB39*/ 01088803
                                                           /*@Y30LB39*/ 01089203
             /********************************************************/ 01089603
             /*                                              @Y30LB39*/ 01089703
             /*  ISSUE UPRINT MACRO TO READ IN THE SEARCH    @Y30LB39*/ 01089803
             /*  ARRAY.                                      @Y30LB39*/ 01092603
             /*                                              @Y30LB39*/ 01096003
             /********************************************************/ 01098803
                                                           /*@Y30LB39*/ 01101603
             UPRINT (GDTTBL,PRTFILE,SSDLPTR);              /*@Y30LB39*/ 01103603
                                                           /*@Y30LB39*/ 01104003
             /********************************************************/ 01104103
             /*                                              @Y30LB39*/ 01104203
             /*  BEGIN DO LOOP TO SEARCH FOR THE MESSAGE     @Y30LB39*/ 01104303
             /*  INDEX CORRESPONDING TO THE REASON CODE      @Y30LB39*/ 01105203
             /*  PASSED AS THE FIRST ARGUMENT.               @Y30LB39*/ 01105603
             /*  THE DO LOOP BEGINS WITH THE SECOND ARRAY    @Y30LB39*/ 01106003
             /*  ENTRY SINCE THE FIRST IS REQUIRED BY THE    @Y30LB39*/ 01106403
             /*  SEARCH ARRAY ITSELF.                        @Y30LB39*/ 01107303
             /*  THE SEARCH CONTINUES UNTIL THE REASON CODE  @Y30LB39*/ 01110003
             /*  IS FOUND, AT WHICH TIME THE SEARCH INDEX    @Y30LB39*/ 01110503
             /*  IS PASSED TO THE PRINT MODULE TO PRINT      @Y30LB39*/ 01111003
             /*  THE MESSAGE ASSOCIATED WITH THAT PARTICULAR @Y30LB39*/ 01111503
             /*  REASON CODE.                                @Y30LB39*/ 01112003
             /*  IF THERE IS NO MATCH FOUND IN THE ARRAY,    @Y30LB39*/ 01112503
             /*  THEN THE INDEX WILL BE THE LAST POSITION IN @Y30LB39*/ 01113003
             /*  ARRAY.  THIS WILL BE THE INDICATION THAT    @Y30LB39*/ 01113503
             /*  THE REASON CODE ITSELF SHOULD BE PRINTED.   @Y30LB39*/ 01114003
             /*                                              @Y30LB39*/ 01114503
             /********************************************************/ 01115003
                                                           /*@Y30LB39*/ 01115503
             ENTRYNUM = 1;                                 /*@Y30LB39*/ 01116003
             DO UNTIL (SSRHALF=SSARRAY(ENTRYNUM)|SSARRAY(ENTRYNUM)=0);  01116503
               ENTRYNUM = ENTRYNUM + 1;                    /*@Y30LB39*/ 01117003
             END;                                          /*@Y30LB39*/ 01117503
                                                           /*@Y30LB39*/ 01118003
             /********************************************************/ 01118503
             /*                                              @Y30LB39*/ 01119003
             /*  THE CORRECT INDEX HAS BEEN FOUND            @Y30LB39*/ 01119503
             /*                                              @Y30LB39*/ 01120003
             /*  CLEAR THE DYNAMIC ARGUMENT LIST AND FILL    @Y30LB39*/ 01120203
             /*  OUT THE PRINT ARGUMENT FIELDS WITH EITHER:  @Y30LB39*/ 01122203
             /*    1) THE INDEX CORRESPONDING TO THE REASON  @Y30LB39*/ 01122603
             /*       CODE OR                                @Y30LB39*/ 01123003
             /*    2) THE LAST INDEX AND THE REASON CODE     @Y30LB39*/ 01123103
             /*       ITSELF AS A STATIC TEXT INSERT.        @Y30LB39*/ 01123203
             /*                                              @Y30LB39*/ 01123603
             /********************************************************/ 01125303
                                                           /*@Y30LB39*/ 01127403
             SSDRGLT = NULLAREA;                           /*@Y30LB39*/ 01129403
             SSDLPTR -> DARGSMOD = SSMODSS0;               /*@Y30LB39*/ 01129603
             SSDLPTR -> DARGSENT = ENTRYNUM;               /*@Y30LB39*/ 01129703
             IF SSARRAY(ENTRYNUM) = 0 THEN                 /*@Y30LB39*/ 01129903
               DO;                                         /*@Y30LB39*/ 01130003
                 SSDLPTR -> DARGDBP = ADDR(SSRCODE);       /*@Y30LB39*/ 01132403
                 SSDLPTR -> DARGILP = LENGTH(SSRCODE);     /*@Y30LB39*/ 01134403
               END;                                        /*@Y30LB39*/ 01134803
           END;                                            /*@Y30LB39*/ 01139903
 @EJECT;                                                   /*@Y30LB39*/ 01141903
                                                           /*@Y30LB39*/ 01142003
         /************************************************************/ 01142403
         /*                                                  @Y30LB39*/ 01145103
         /*  THE FIRST ARGUMENT WAS ZERO, INDICATING THAT    @Y30LB39*/ 01145503
         /*  THIS ROUTINE IS TO PRINT OUT THE ECB POST       @Y30LB39*/ 01145903
         /*  CODE.  THEREFORE, CLEAR THE DYNAMIC ARGUMENT    @Y30LB39*/ 01146303
         /*  LIST AND FILL OUT THE PRINT ARGUMENT FIELDS     @Y30LB39*/ 01146703
         /*  SO THE STATIC TEXT MODULE, IDCTSCM0, WILL       @Y30LB39*/ 01146803
         /*  PRINT OUT THE MESSAGE ASSOCIATED WITH THE       @Y30LB39*/ 01146903
         /*  POST CODE.                                      @Y30LB39*/ 01147003
         /*                                                  @Y30LB39*/ 01148403
         /************************************************************/ 01148603
                                                           /*@Y30LB39*/ 01148803
         ELSE                                              /*@Y30LB39*/ 01149003
           DO;                                             /*@Y30LB39*/ 01149203
             SSDRGLT = NULLAREA;                           /*@Y30LB39*/ 01149403
             SSDLPTR -> DARGSMOD = SSMODCM0;               /*@Y30LB39*/ 01149803
             SSDLPTR -> DARGSENT = SSMSGNUM;               /*@Y30LB39*/ 01149903
             SSDLPTR -> DARGDBP = ADDR(SSECBCD);           /*@Y30LB39*/ 01150003
             SSDLPTR -> DARGILP = LENGTH(SSECBCD);         /*@Y30LB39*/ 01150103
           END;                                            /*@Y30LB39*/ 01152803
                                                           /*@Y30LB39*/ 01154503
         /************************************************************/ 01154603
         /*                                                  @Y30LB39*/ 01154903
         /*  ISSUE UPRINT MACRO TO PRINT THE REASON          @Y30LB39*/ 01155203
         /*  CODE MESSAGE OR THE ECB POST CODE MESSAGE.      @Y30LB39*/ 01155503
         /*                                                  @Y30LB39*/ 01155803
         /************************************************************/ 01156103
                                                           /*@Y30LB39*/ 01156403
         UPRINT (GDTTBL,PRTFILE,SSDLPTR);                  /*@Y30LB39*/ 01156703
                                                           /*@Y30LB39*/ 01158203
         /************************************************************/ 01158503
         /*                                                  @Y30LB39*/ 01158803
         /*  RETURN TO CALLER WITH A RETURN CODE OF ZERO     @Y30LB39*/ 01159103
         /*                                                  @Y30LB39*/ 01159403
         /************************************************************/ 01159703
                                                           /*@Y30LB39*/ 01160003
                                                           /*@Y30LB39*/ 01170003
         RETURN CODE(0);                                   /*@Y30LB39*/ 01180003
                                                           /*@Y30LB39*/ 01190003
         END SSCMSG;                                       /*@Y30LB39*/ 01200003
./  ADD  SSI=42610522,NAME=IDCDF53
 /********************************************************************/ 00260000
 /*                                                          @Y30LB11*/ 00262000
 /* PROCEDURE NAME - SCRCOPY                                 @Y30LB11*/ 00270000
 /*                                                          @Y30LB11*/ 00280000
 /* FUNCTION - THE PRINCIPLE FUNCTION OF THIS ROUTINE IS TO  @Y30LB11*/ 00290000
 /*            SCRATCH AN MSS COPY VOLUME.                   @Y30LB11*/ 00292000
 /*                                                          @Y30LB11*/ 00298400
 /*            IDC0088I CARTRIDGES CSN (CSN) SCRATCHED FOR   @Y30LB11*/ 00310800
 /*            COPY YYDDD.                                   @Y30LB11*/ 00311600
 /*                                                          @Y30LB11*/ 00312000
 /*            IDC0098I ** LOCATION OF VOLUME: (LOCATION)    @Y30LB11*/ 00312800
 /*                                                          @Y30LB11*/ 00313600
 /*            IDC2076I ** CART CSN (CSN) NOT IN MSF FOR     @Y30LB11*/ 00313700
 /*            COPY YYDDD.                                   @Y30LB11*/ 00314500
 /*                                                          @Y30LB11*/ 00314900
 /*            IDC2087I ** CART CSN (CSN) NOT SCRATCHED FOR  @Y30LB11*/ 00315600
 /*            COPY YYDDD.                                   @Y30LB11*/ 00317600
 /*                                                          @Y30LB11*/ 00321500
 /* INPUT - A PARAMETER CONSISTING OF A SINGLE BYTE.  THE    @Y30LB11*/ 00323500
 /*         FIRST BIT OF THE BYTE IS SET TO '1' BY SCRCOPY   @Y30LB11*/ 00325500
 /*         AN ERROR OCCURS UPDATING THE INVENTORY.          @Y30LB11*/ 00327500
 /*                                                          @Y30LB11*/ 00329500
 /*         THE COPY RECORD MUST HAVE BEEN READ AND THE      @Y30LB11*/ 00331500
 /*         COPYV MAPPING MACRO BASED ON THE RECORD PRIOR TO @Y30LB11*/ 00333500
 /*         THE CALL TO SCRCOPY.   FURTHER, THE DEFLIST      @Y30LB11*/ 00335500
 /*         MUST HAVE BEEN INCLUDED PRIOR TO THE CALL TO     @Y30LB11*/ 00337500
 /*         SCRCOPY.                                         @Y30LB11*/ 00339500
 /*                                                          @Y30LB11*/ 00341500
 /* OUTPUT - FIRST BIT OF INPUT BYTE SET IF INVENTORY ERROR. @Y30LB11*/ 00343500
 /*          RETURN CODE IN REGISTER 15                      @Y30LB11*/ 00345500
 /*                                                          @Y30LB11*/ 00345900
 /*          0 - CARTRIDGE OR CARTRIDGES FOR COPY VOLUME     @Y30LB11*/ 00346300
 /*              SCRATCHED SUCCESSFULLY.                     @Y30LB11*/ 00346400
 /*                                                          @Y30LB11*/ 00346700
 /*          4 - CARTRIDGES NOT IN LIBRARY, OR DSM FAILURE   @Y30LB11*/ 00346800
 /*              OCCURRED.                                   @Y30LB11*/ 00346900
 /*                                                          @Y30LB11*/ 00347000
 /*          8 - USSC UMACRO COULD NOT OBTAIN STORAGE        @Y30LB11*/ 00347100
 /*              FOR ECB/MESSAGE AREA.                       @Y30LB11*/ 00347200
 /*                                                          @Y30LB11*/ 00353400
 /********************************************************************/ 00356300
                                                                        00359200
 SCRCOPY:                                                  /*@Y30LB11*/ 00362100
    PROCEDURE(SCINPUT);                                    /*@Y30LB11*/ 00365000
    DCL SCCMPTR PTR(31);            /* PTR TO ECB/MSG AREA   @Y30LB11*/ 00367900
    DCL SCECBCD FIXED(8);           /* SCRCOPY ECB CODE      @Y30LB11*/ 00371900
    DCL SCRCOND FIXED(15);          /* SCRCOPY COND CODE     @Y30LB11*/ 00372800
    DCL SCMSGCD PTR(31);            /* SSCMSG REASON CODE    @Y30LB11*/ 00373700
    DCL SCMSGPTR PTR(31);           /* MESSAGE AREA POINTER  @Y30LB11*/ 00374600
    DCL SCDEFLST CHAR(LENGTH(DEFLIST));/* SCRCOPY DEFLIST    @Y30LB11*/ 00375000
    DCL SCDEFPTR PTR(31);           /* DEFLIST POINTER       @Y30LB11*/ 00375400
    DCL SCDDSTRU PTR(31);           /* DARGLIST POINTER      @Y30LB11*/ 00375500
                            /* DARGLIST WITH UP TO 3 INSERTS @Y30LB11*/ 00377300
    DCL SCDARG CHAR(LENGTH(DARGLIST)+2*(LENGTH(DARGARY))); /*@Y30LB11*/ 00377700
                                                                        00378200
    DCL 1 SCINPUT BIT(8),           /* PARAMETER LIST        @Y30LB11*/ 00379100
      2 SCERRFLG BIT(1),            /* RETURNED FLAG         @Y30LB11*/ 00380000
      2 * BIT(7);                   /* UNUSED                @Y30LB11*/ 00390000
                                                                        00390100
    /* CONSTANT SECTION DECLARATIONS FOR SCRCOPY             @Y30LB11*/ 00390200
                                                                        00390300
    DCL 1 SCBLANKS CHAR(30) STATIC LOCAL,/* BLANK FIELD      @Y30LB11*/ 00391700
      2 * (30) CHAR(1) INIT((30)'40'X);                    /*@Y30LB11*/ 00393700
                                                                        00395200
    DCL SCCSN2# FIXED(15) CONSTANT(1);/* CSN2 INSERT         @Y30LB11*/ 00395600
    DCL SCDATE# FIXED(15) CONSTANT(2);/* DATE INSERT         @Y30LB11*/ 00395800
    DCL SCECBLEN FIXED(15) CONSTANT(4);/* ECB LENGTH         @Y30LB11*/ 00395900
    DCL SCNOCSNS BIT(8) CONSTANT('23'X);/* NEITHER CSN FOUND @Y30LB11*/ 00396200
    DCL SCNOCSN1 BIT(8) CONSTANT('26'X);/* CSN1 NOT FOUND    @Y30LB11*/ 00396400
    DCL SCNOCSN2 BIT(8) CONSTANT('2A'X);/* CSN2 NOT FOUND    @Y30LB11*/ 00396500
    DCL SCCOMMSG CHAR(3) CONSTANT('CM0');/* STATIC TEST MOD  @Y30LB11*/ 00396900
    DCL SCM0088I PTR(8) CONSTANT(18);/* CARTS SCRATCHED      @Y30LB11*/ 00397300
    DCL SCM0098I PTR(8) CONSTANT(2);/* LOCATION OF VOLUME    @Y30LB11*/ 00397700
    DCL SCM2076I PTR(8) CONSTANT(30);/* CART NOT SCRATCHED   @Y30LB11*/ 00398100
    DCL SCM2087I PTR(8) CONSTANT(19);/* CARTS NOT IN LIBRARY @Y30LB11*/ 00398500
 @EJECT;                                                   /*@Y30LB11*/ 00398600
                                                                        00398700
    /* TRACE AT ENTRY TO SCRCOPY PROCEDURE                   @Y30LB11*/ 00400700
                                                                        00401100
    UTRACE='SCSC';                                         /*@Y30LB11*/ 00401500
                                                                        00401900
    /* INITIALIZATION CONSISTS OF ZEROING THE RETURN CODE, ZEROING      00402800
       THE DEFLIST, AND THE PRINT ARGUMENT LIST.             @Y30LB11*/ 00403200
                                                                        00405800
    SCRCOND=0;                                             /*@Y30LB11*/ 00407200
                                                                        00412600
    SCDDSTRU=ADDR(SCDARG);                                 /*@Y30LB11*/ 00412700
    SCDEFPTR=ADDR(SCDEFLST);                               /*@Y30LB11*/ 00413100
    SCDEFLST=NULLAREA;                                     /*@Y30LB11*/ 00413500
    SCDARG=NULLAREA;                                       /*@Y30LB11*/ 00413600
    SCDDSTRU->DARGSMOD=SCCOMMSG;/* COMMON MESSAGE MODULE     @Y30LB11*/ 00413700
                                                                        00414000
    /* INDICATE AN INACTIVE VOLUME IS TO BE SCRATCHED AND PICK          00414100
       UP THE CSN1 FROM THE COPY RECORD.                     @Y30LB11*/ 00415600
                                                                        00418000
    SCDEFPTR->DEFVELTR=ON;                                 /*@Y30LB11*/ 00419700
    SCDEFPTR->DEFVCSN1=COPCSN1;                            /*@Y30LB11*/ 00421200
                                                                        00423000
    /* FULL REGION DUMP BEFORE EXECUTING THE ICBDEFV MACRO.  @Y30LB11*/ 00423400
                                                                        00423800
    UDUMP(GDTTBL,'SCDF');                                  /*@Y30LB11*/ 00423900
                                                                        00424000
    /* THE USSC MACRO IS ISSUED TO EXECUTE THE ICBDEFV MACRO @Y30LB11   00424200
       TO SCRATCH THE COPY.                                  @Y30LB11*/ 00425700
                                                                        00427200
    USSC(GDTTBL,DEFINE,SCDEFPTR,SCMSGCD,SCECBCD,SCMSGPTR); /*@Y30LB11*/ 00428700
    USAVERC;                                               /*@Y30LB11*/ 00430200
                                                                        00431700
 @EJECT;                                                   /*@Y30LB11*/ 00432800
    /* A RETURN CODE OF 0 OR 12 INDICATES THAT THE MACRO WAS EXECUTED   00433200
       SUCCESSFULLY.                                         @Y30LB11*/ 00434700
                                                                        00436200
    IF TESTRC=RCOK|TESTRC=RCVVIERR THEN                    /*@Y30LB11*/ 00437700
      DO;                                                  /*@Y30LB11*/ 00439200
                                                                        00440700
        /* IF A RETURN CODE OF 12 IS PASSED, SCERRFLG IS SET ON         00442200
           TO INDICATE THAT THE INVENTORY RECORD WAS NOT UPDATED.       00443700
                                                             @Y30LB11*/ 00445200
                                                                        00446700
        IF TESTRC=RCVVIERR THEN                            /*@Y30LB11*/ 00448200
          SCERRFLG=ON;                                     /*@Y30LB11*/ 00449700
                                                                        00451200
        /* THE MESSAGE: CARTRIDGES CSN (CSN) SCRATCHED FOR COPY YYDDD,  00452700
           IS ISSUED.                                        @Y30LB11*/ 00454200
                                                                        00455700
        SCCMPTR=SCMSGPTR+SCECBLEN;                         /*@Y30LB11*/ 00457200
        SCDDSTRU->DARGSENT=SCM0088I;                       /*@Y30LB11*/ 00458700
        SCDDSTRU->DARGDBP=ADDR(SCCMPTR->CMCSN1);           /*@Y30LB11*/ 00460200
        SCDDSTRU->DARGILP=LENGTH(CMCSN1);                  /*@Y30LB11*/ 00461700
        SCDDSTRU->DARGCNT=2;                               /*@Y30LB11*/ 00463200
        SCDDSTRU->DARGINS(1)=SCCSN2#;                      /*@Y30LB11*/ 00464700
        SCDDSTRU->DARGINL(1)=LENGTH(CMCSN2);               /*@Y30LB11*/ 00467700
        SCDDSTRU->DARGDTM(1)=ADDR(SCCMPTR->CMCSN2);        /*@Y30LB11*/ 00469200
        SCDDSTRU->DARGINS(2)=SCDATE#;                      /*@Y30LB11*/ 00470700
        SCDDSTRU->DARGINL(2)=LENGTH(COPDATE);              /*@Y30LB11*/ 00472200
        SCDDSTRU->DARGDTM(2)=ADDR(COPDATE);                /*@Y30LB11*/ 00473700
        UPRINT(GDTTBL,PRTFILE,SCDDSTRU);                   /*@Y30LB11*/ 00475200
                                                                        00476700
        /* BECAUSE THE MESSAGE AREA POINTER IS SET, AND THE ICBDEFV     00478200
           MACRO IS SUCCESSFUL, THE UFSPACE IS ISSUED TO FREE THE       00479700
           ECB/MESSAGE AREA GOTTEN BY THE ICBDEFV MACRO.     @Y30LB11*/ 00481200
                                                                        00482700
        UFSPACE(GDTTBL,SCMSGPTR);                          /*@Y30LB11*/ 00484200
      END;                                                 /*@Y30LB11*/ 00485700
                                                                        00487200
 @EJECT;                                                   /*@Y30LB11*/ 00487600
    /* A RETURN CODE OF 4 OR 8 INDICATES THAT THE MACRO WAS NOT         00489200
       EXECUTED SUCCESSFULLY.                                @Y30LB11*/ 00491200
                                                                        00493200
    ELSE                                                   /*@Y30LB11*/ 00495500
      DO;                                                  /*@Y30LB11*/ 00495600
                                                                        00498900
          /* A RETURN CODE OF 8 FROM THE ICBDEFV MACRO INDICATES        00500900
             THAT NO CORE WAS AVAILABLE FOR THE ECB/MESSAGE AREA.       00501300
             THE MESSAGE: ** CART CSN (CSN) NOT SCRATCHED COPY          00501700
             YYDDD, IS ISSUED AND THE RETURN CODE IS SET TO 8.          00502100
                                                             @Y30LB11*/ 00502200
                                                                        00502300
        IF TESTRC=RCNOCOR THEN                             /*@Y30LB11*/ 00502400
          DO;                                              /*@Y30LB11*/ 00505700
            SCDDSTRU->DARGSENT=SCM2087I;                   /*@Y30LB11*/ 00507700
            SCDDSTRU->DARGDBP=ADDR(COPCSN1);               /*@Y30LB11*/ 00525700
            SCDDSTRU->DARGILP=LENGTH(COPCSN1);             /*@Y30LB11*/ 00526500
            SCDDSTRU->DARGCNT=2;                           /*@Y30LB11*/ 00527700
            SCDDSTRU->DARGINS(1)=SCCSN2#;                  /*@Y30LB11*/ 00529700
            SCDDSTRU->DARGINL(1)=LENGTH(COPCSN2);          /*@Y30LB11*/ 00531700
            SCDDSTRU->DARGDTM(1)=ADDR(COPCSN2);            /*@Y30LB11*/ 00533700
            SCDDSTRU->DARGINS(2)=SCDATE#;                  /*@Y30LB11*/ 00534100
            SCDDSTRU->DARGINL(2)=LENGTH(COPDATE);          /*@Y30LB11*/ 00534500
            SCDDSTRU->DARGDTM(2)=ADDR(COPDATE);            /*@Y30LB11*/ 00534900
            UPRINT(GDTTBL,PRTFILE,SCDDSTRU);               /*@Y30LB11*/ 00537400
                                                                        00540600
            /* SET THE RETURN CODE TO 8 INDICATING THAT THE USSC        00542600
               UMACRO COULD NOT OBTAIN STORAGE FOR THE ECB/MESSAGE      00543400
               AREA.                                         @Y30LB11*/ 00543800
                                                                        00544200
            SCRCOND=RCNOCOR;                               /*@Y30LB11*/ 00544500
          END;                                             /*@Y30LB11*/ 00547700
                                                                        00550900
        /* A RETURN CODE OF 4 INDICATES THAT THE ICBDEFV MACRO WAS      00554100
           EXECUTED, BUT FAILED.                             @Y30LB11*/ 00557300
                                                                        00560500
        ELSE                                               /*@Y30LB11*/ 00563700
          DO;                                              /*@Y30LB11*/ 00566900
                                                                        00570100
          /* THE SSCMSG ROUTINE IS CALLED TO PRINT COMMON MESSAGES      00573300
             FROM IDCTSSS0 AND IDCTSSS1 AS DIRECTED BY THE REASON       00583300
             CODE PASSED BACK FROM THE ICBDEFV MACRO.        @Y30LB11*/ 00583400
                                                                        00583500
            CALL SSCMSG(SCMSGCD);                          /*@Y30LB11*/ 00603400
                                                                        00623300
            /* IF EITHER OR BOTH CARTRIDGES ARE NOT IN THE MSF          00625300
             A MESSAGE INDICATING THAT SITUATION IS PRINTED. @Y30LB11*/ 00627300
                                                                        00629300
            IF SCMSGCD=SCNOCSN1 |                          /*@Y30LB11*/ 00633300
               SCMSGCD=SCNOCSN2 |                          /*@Y30LB11*/ 00635300
               SCMSGCD=SCNOCSNS THEN                       /*@Y30LB11*/ 00637300
              DO;                                          /*@Y30LB11*/ 00639300
                                                                        00641300
                /* SET UP TO ISSUE MESSAGE THAT CARTS ARE OUT           00641700
.                  OF THE MSF.                               @Y30LB11*/ 00641800
                                                                        00641900
                SCDDSTRU->DARGSENT=SCM2076I;               /*@Y30LB11*/ 00642900
                                                                        00643100
                /* INSERT COPYDATE FROM COPY RECORD          @Y30LB11*/ 00643300
                                                                        00643400
                SCDDSTRU->DARGINS(1)=SCDATE#;              /*@Y30LB11*/ 00649200
                SCDDSTRU->DARGINL(1)=LENGTH(COPDATE);      /*@Y30LB11*/ 00656600
                SCDDSTRU->DARGDTM(1)=ADDR(COPDATE);        /*@Y30LB11*/ 00658600
                                                                        00660600
                /* IF 2 CARTS OUT OF LIBRARY, INSERT 2 CSNS  @Y30LB11*/ 00661100
                                                                        00661900
                IF SCMSGCD=SCNOCSNS THEN                                00662800
                  DO;                                      /*@Y30LB11*/ 00662900
                    SCDDSTRU->DARGDBP=ADDR(COPCSN1);       /*@Y30LB11*/ 00663400
                    SCDDSTRU->DARGILP=LENGTH(COPCSN1);     /*@Y30LB11*/ 00663800
                    SCDDSTRU->DARGCNT=2;                   /*@Y30LB11*/ 00664000
                    SCDDSTRU->DARGINS(2)=SCCSN2#;          /*@Y30LB11*/ 00664100
                    SCDDSTRU->DARGINL(2)=LENGTH(COPCSN2);  /*@Y30LB11*/ 00664300
                    SCDDSTRU->DARGDTM(2)=ADDR(COPCSN2);    /*@Y30LB11*/ 00664400
                  END;                                     /*@Y30LB11*/ 00664500
                                                                        00667200
                /* IF CSN1 OUT OF LIBRARY, INSERT CSN1      @Y30LB11*/  00667400
                                                                        00667500
                IF SCMSGCD=SCNOCSN1 THEN                                00667600
                  DO;                                      /*@Y30LB11*/ 00668000
                    SCDDSTRU->DARGDBP=ADDR(COPCSN1);       /*@Y30LB11*/ 00668100
                    SCDDSTRU->DARGILP=LENGTH(COPCSN1);     /*@Y30LB11*/ 00668200
                    SCDDSTRU->DARGCNT=1;                   /*@Y30LB11*/ 00668300
                  END;                                     /*@Y30LB11*/ 00669000
                                                                        00669300
                /* IF CSN2 OUT OF LIBRARY, INSERT CSN2      @Y30LB11*/  00669700
                                                                        00670100
                IF SCMSGCD=SCNOCSN2 THEN                                00670200
                  DO;                                      /*@Y30LB11*/ 00670300
                    SCDDSTRU->DARGDBP=ADDR(COPCSN2);       /*@Y30LB11*/ 00670700
                    SCDDSTRU->DARGILP=LENGTH(COPCSN2);     /*@Y30LB11*/ 00671100
                    SCDDSTRU->DARGCNT=1;                   /*@Y30LB11*/ 00678000
                  END;                                     /*@Y30LB11*/ 00706000
                                                                        00712900
                /* ISSUE THE UPRINT MACRO TO PRINT THE MESSAGE       */ 00713300
                                                           /*@Y30LB11*/ 00713700
                                                                        00714100
                UPRINT(GDTTBL,PRTFILE,SCDDSTRU);           /*@Y30LB11*/ 00714900
                                                                        00715000
                /* IF THE LOCATION OF THE VOLUME HAS BEEN DETERMINED    00715200
                   THE MESSAGE: ** LOCATION OF VOLUME: (LOCATION), IS   00717500
                   ISSUED.                                   @Y30LB11*/ 00719800
                                                                        00722100
                IF COPDEST¬=SCBLANKS THEN                  /*@Y30LB11*/ 00724400
                  DO;                                      /*@Y30LB11*/ 00726700
                    SCDARG=NULLAREA;                       /*@Y30LB11*/ 00729000
                    SCDDSTRU->DARGSENT=SCM0098I;           /*@Y30LB11*/ 00733600
                    SCDDSTRU->DARGSMOD=SCCOMMSG;           /*@Y30LB11*/ 00735600
                    SCDDSTRU->DARGDBP=ADDR(COPDEST);       /*@Y30LB11*/ 00735900
                    SCDDSTRU->DARGILP=LENGTH(COPDEST);     /*@Y30LB11*/ 00738200
                    UPRINT(GDTTBL,PRTFILE,SCDDSTRU);       /*@Y30LB11*/ 00740500
                  END;                                     /*@Y30LB11*/ 00742800
          END;                                             /*@Y30LB11*/ 00758900
                                                                        00760100
        /* A RETURN CODE OF 4 FROM THE ICBDEFV MACRO INDICATES          00762900
           THAT THE ICBDEFV MACRO FAILED.  A MESSAGE INDICATING         00763300
           THAT COPY VOLUMES WERE NOT SCRATCHED, IS PRINTED. @Y30LB11*/ 00763700
                                                                        00764100
        ELSE                                                            00765300
          DO;                                              /*@Y30LB11*/ 00766500
            SCDDSTRU->DARGSENT=SCM2087I;                   /*@Y30LB11*/ 00767700
            SCDDSTRU->DARGDBP=ADDR(COPCSN1);               /*@Y30LB11*/ 00768900
            SCDDSTRU->DARGILP=LENGTH(COPCSN1);             /*@Y30LB11*/ 00770100
            SCDDSTRU->DARGCNT=2;                           /*@Y30LB11*/ 00771300
            SCDDSTRU->DARGINS(1)=SCCSN2#;                  /*@Y30LB11*/ 00772500
            SCDDSTRU->DARGINL(1)=LENGTH(COPCSN2);          /*@Y30LB11*/ 00774100
            SCDDSTRU->DARGDTM(1)=ADDR(COPCSN2);            /*@Y30LB11*/ 00774500
            SCDDSTRU->DARGINS(2)=SCDATE#;                  /*@Y30LB11*/ 00774900
            SCDDSTRU->DARGINL(2)=LENGTH(COPDATE);          /*@Y30LB11*/ 00775000
            SCDDSTRU->DARGDTM(2)=ADDR(COPDATE);            /*@Y30LB11*/ 00775100
            UPRINT(GDTTBL,PRTFILE,SCDDSTRU);               /*@Y30LB11*/ 00778300
          END;                                             /*@Y30LB11*/ 00781300
                                                                        00785500
        /* INDICATE THAT SCRCOPY FAILED WITH A RETURN CODE OF 4.     */ 00787500
                                                           /*@Y30LB11*/ 00790000
                                                                        00790100
        SCRCOND=RCFAIL;                                    /*@Y30LB11*/ 00790200
        END;                                               /*@Y30LB11*/ 00792200
      END;                                                 /*@Y30LB11*/ 00794400
                                                                        00798600
    /* RETURN TO SCRCOPY CALLER                              @Y30LB11*/ 00802800
                                                                        00807000
    RETURN CODE(SCRCOND);                                  /*@Y30LB11*/ 00811200
    END SCRCOPY;                                           /*@Y30LB11*/ 00861200
./  ADD  SSI=53030107,NAME=IDCDF54
 /********************************************************************/ 01310000
 /*                                                                  */ 01320000
 /* PROCEDURE NAME - SORT  (ACCESS METHOD SERVICES)          @Z40LB37*/ 01330000
 /*                                                          @Z40LB37*/ 01340000
 /* FUNCTION - THIS COMMON INCLUDED PROCEDURE PROVIDES THE   @Z40LB37*/ 01342400
 /*            CALLER WITH THE BASIC FUNCTION OF SORTING     @Z40LB37*/ 01342800
 /*            A CONTIGUOUS AREA OF STORAGE OF ANY LENGTH,   @Z40LB37*/ 01343200
 /*            OR ELEMENT (RECORD) SIZE.   IT ALLOWS         @Z40LB37*/ 01343600
 /*            CHARACTER FIELDS TO BE SORTED PER USER CALL,  @Z40LB37*/ 01343700
 /*            ANYWHERE WITHIN AN ELEMENT (RECORD) FOR ANY   @Z40LB37*/ 01343800
 /*            LENGTH EQUAL TO OR SMALLER THAN AN ELEMENTS   @Z40LB37*/ 01343900
 /*            SIZE.  THE ELEMENT SIZE CANNOT CHANGE BETWEEN @Z40LB37*/ 01345100
 /*            CALLS TO THE SORT PROCEDURE.  (THIS IS A      @Z40LB37*/ 01345500
 /*            COMPILE TIME VARIABLE.)                       @Z40LB37*/ 01345900
 /*                                                          @Z40LB37*/ 01349400
 /* ENTRY POINT - SORT                                       @Z40LB37*/ 01350600
 /*                                                          @Z40LB37*/ 01351800
 /*      LINKAGE - 'CALL SORT (SRTAGL)'                      @Z40LB37*/ 01353000
 /*                '%SRTLABEL = 'WORK AREA''                 @Z40LB37*/ 01354200
 /*                '%INCLUDE SYSLIB(IDCDF54)'                @Z40LB37*/ 01355400
 /*                                                          @Z40LB37*/ 01356600
 /* INPUT  - ADDRESS OF ARGUMENT LIST (SRTAGL)               @Z40LB37*/ 01357800
 /*                                                          @Z40LB37*/ 01359000
 /* OUTPUT - A RETURN CODE IN REGISTER 15                    @Z40LB37*/ 01360200
 /*                                                          @Z40LB37*/ 01361400
 /*          (0) - SORT SUCCESSFUL                           @Z40LB37*/ 01362600
 /*                                                          @Z40LB37*/ 01363800
 /* EXIT NORMAL - RETURNS TO CALLER WITH CONDITION           @Z40LB37*/ 01365000
 /*               CODE ZERO                                  @Z40LB37*/ 01366200
 /*                                                          @Z40LB37*/ 01367400
 /* EXIT ERROR  - NONE                                       @Z40LB37*/ 01377400
 /*                                                          @Z40LB37*/ 01377800
 /* CHANGE ACTIVITY - NONE                                   @Z40LB37*/ 01378200
 /*                                                                  */ 01378300
 /********************************************************************/ 01378400
 % DECLARE SRTLABEL CHARACTER;                             /*@Z40LB37*/ 01388800
 % IF SRTLABEL = '' %THEN                                               01388900
     %SRTLABEL = '0';                                      /*@Z40LB37*/ 01389000
                                                                        01389200
 SORT:                              /*AMS SORT ROUTINE       @Z40LB37*/ 01400000
    PROCEDURE(SRTARG);              /*SORT ARGUMENT LIST     @Z40LB37*/ 01450000
                                                                        01700000
 @EJECT;                                                   /*@Z40LB37*/ 01750000
    /*****************************************************************/ 01794400
    /*                                                               */ 01800000
    /*  DECLARATIONS FOR THE SORT ROUTINE.                   @Z40LB37*/ 01850000
    /*                                                               */ 01900000
    /*****************************************************************/ 01950000
                                                                        02000000
    DCL                                                                 02050000
      1 SRTSTOR(*)  BASED(SRTPTR),  /*INPUT STORAGE DCL      @Z40LB37*/ 02100000
        2 SRTELEM   CHAR(LENGTH(SRTLABEL));/*FOR MOVING ONE             02150000
                                      ELEMENT                @Z40LB37*/ 02200000
    DCL                                                                 02250000
      SRTSAVE CHAR(LENGTH(SRTLABEL))/*PASSED ELEMENT         @Z40LB37*/ 02260000
        BASED(SRTWPTR);             /*SAVE AREA              @Z40LB37*/ 02270000
    DCL                                                                 02272000
      (SRTPTR,SRTWPTR) PTR(31);     /*SORT AREA PTRS         @Z40LB37*/ 02274000
    DCL                                                                 02278000
      SRTLN    FIXED(31);           /*SORT ELEMENT LENGTH    @Z40LB37*/ 02278400
    DCL                                                                 02280000
      (SRTBEG,SRTEND) FIXED(31);    /*SORT FIELD DCLS        @Z40LB37*/ 02290000
    DCL                                                                 02294000
      (SRTSTOP,SRTMOVE)  BIT(1);    /*SORT SWITCHES          @Z40LB37*/ 02294100
    DCL                                                                 02294300
      SRTON   BIT(1) CONSTANT('1'B);/*SWITCH ON CONSTANT     @Z40LB37*/ 02308200
    DCL                                                                 02320200
      SRTOFF  BIT(1) CONSTANT('0'B);/*SWITCH OFF CONSTANT    @Z40LB37*/ 02320600
    DCL                                                                 02338000
      (SRTMAXCT,SRTI,SRTJ) FIXED(31);/*SORT COUNTER DCLS     @Z40LB37*/ 02340000
    DCL                                                                 02360000
      SRTRC   FIXED(15) CONSTANT(0);/*SORT RETURN CODE AREA  @Z40LB37*/ 02370000
                                                                        02372400
 @EJECT;                                                   /*@Z40LB37*/ 02374400
    /*****************************************************************/ 02374800
    /*                                                               */ 02375200
    /*  RESPECIFY SRTAGL ON PASSED ADDRESS, ISSUE UTRACE     @Z40LB37*/ 02375600
    /*  AND UDUMP MACROS, AND INITIALIZE LOCAL COUNTERS AND  @Z40LB37*/ 02379800
    /*  LENGTH FIELDS.                                       @Z40LB37*/ 02380600
    /*                                                               */ 02381800
    /*****************************************************************/ 02383800
                                                                        02385800
    RFY                                                                 02387800
      SRTAGL    BASED(ADDR(SRTARG));                       /*@Z40LB37*/ 02389800
                                                                        02391800
    UTRACE = 'SORT';                                       /*@Z40LB37*/ 02395600
                                                                        02399200
    UDUMP (GDTTBL,'SOTI');                                 /*@Z40LB37*/ 02402800
                                                                        02406400
    SRTHEAD = 'SRTAGL  ';                                  /*@Z40LB37*/ 02419200
    SRTWPTR = SRTWORKP;                                    /*@Z40LB37*/ 02419600
    SRTPTR = SRTADDR;                                      /*@Z40LB37*/ 02419700
    SRTLN = SRTLEN;                                        /*@Z40LB37*/ 02419800
    SRTMAXCT = SRTNUM;                                     /*@Z40LB37*/ 02419900
    SRTBEG = SRTPOSIT;                                     /*@Z40LB37*/ 02420000
    SRTEND = SRTPOSIT + (SRTFLDLN - 1);                    /*@Z40LB37*/ 02430000
    SRTSTOP = SRTOFF;                                      /*@Z40LB37*/ 02440000
    SRTMOVE = SRTOFF;                                      /*@Z40LB37*/ 02442000
                                                                        02446000
 @EJECT;                                                   /*@Z40LB37*/ 02446400
    /*****************************************************************/ 02446800
    /*                                                               */ 02447200
    /*  EXECUTE THE SORT LOOP USING THE MAXIMUM ELEMENTS     @Z40LB37*/ 02447600
    /*  MINUS ONE FOR THE SRTI COUNTER AND DECREMENTING THE  @Z40LB37*/ 02447700
    /*  THE SRTI COUNTER BY ONE EACH PASS.  THE SRTJ COUNTER @Z40LB37*/ 02448500
    /*  IS USED TO COUNT THE ELEMENTS THRU EACH PASS AND IN- @Z40LB37*/ 02448600
    /*  CREMENT THE SRTJ COUNTER BY ONE AFTER EACH ELEMENT   @Z40LB37*/ 02448700
    /*  IS COMPARED.   THE SRTSTOP SWITCH IS USED TO TERM-   @Z40LB37*/ 02448800
    /*  INATE THE SORT IF NO INTERCHANGE OF ELEMENTS TAKES   @Z40LB37*/ 02450200
    /*  PLACE.                                               @Z40LB37*/ 02453200
    /*                                                               */ 02454600
    /*****************************************************************/ 02455000
                                                                        02455800
 SRTLOOP:                                                               02457100
    DO SRTI = SRTMAXCT-1 TO 1 BY -1 WHILE SRTSTOP = SRTOFF;/*@Z40LB37*/ 02458400
      DO SRTJ = 1 TO SRTI;                                 /*@Z40LB37*/ 02459700
                                                                        02461000
        /*************************************************************/ 02462300
        /*                                                           */ 02463600
        /*  COMPARE THE TWO ELEMENTS TO SEE IF AN INTER-     @Z40LB37*/ 02464900
        /*  CHANGE SHOULD TAKE PLACE, USING THE PASSED SORT  @Z40LB37*/ 02465300
        /*  FIELDS AS A SUBSTRING, IF SO INTERCHANGE THEM.   @Z40LB37*/ 02465700
        /*                                                           */ 02466200
        /*************************************************************/ 02467500
                                                                        02468800
        IF SRTELEM(SRTJ,SRTBEG:SRTEND) > SRTELEM(SRTJ+1,SRTBEG:SRTEND)  02470100
          THEN                                                          02471400
            DO;                                            /*@Z40LB37*/ 02472700
              SRTMOVE = SRTON;                             /*@Z40LB37*/ 02474000
              SRTSAVE = SRTELEM(SRTJ);                     /*@Z40LB37*/ 02475300
              SRTELEM(SRTJ) = SRTELEM(SRTJ+1);             /*@Z40LB37*/ 02476600
              SRTELEM(SRTJ+1) = SRTSAVE;                   /*@Z40LB37*/ 02478600
            END;                                           /*@Z40LB37*/ 02480600
      END;                                                 /*@Z40LB37*/ 02482600
                                                                        02482800
      /***************************************************************/ 02482900
      /*                                                             */ 02492600
      /*  IF AN ELEMENT WAS INTERCHANGED THEN TURN SRTMOVE   @Z40LB37*/ 02502600
      /*  SWITCH OFF.  IF NO INTERCHANGE WAS MADE TURN SORT  @Z40LB37*/ 02502800
      /*  STOP SWITCH TO ON.                                 @Z40LB37*/ 02510300
      /*                                                             */ 02512700
      /***************************************************************/ 02514200
                                                                        02524200
      IF SRTMOVE = SRTON                                                02525700
        THEN                                                            02537000
          SRTMOVE = SRTOFF;                                /*@Z40LB37*/ 02548300
        ELSE                                                            02559600
          SRTSTOP = SRTON;                                 /*@Z40LB37*/ 02570900
    END SRTLOOP;                    /*END OF SRTLOOP TO SORT INTO AN */ 02582200
                                    /*ASCENDING SEQUENCE     @Z40LB37*/ 02593500
                                                                        02604800
 @EJECT;                                                   /*@Z40LB37*/ 02614800
    UDUMP (GDTTBL,'SOTO');          /*UDUMP EXIT             @Z40LB37*/ 02616100
                                                                        02627400
    RETURN CODE(SRTRC);             /*RETURN TO MAIN ROUTINE @Z40LB37*/ 02638700
                                                                        02650000
    END SORT;                       /*END OF AMS SORT ROUTINE -         03000000
                                      SORT                   @Z40LB37*/ 03050000
./  ADD  SSI=53220373,NAME=IDCDF55
 /********************************************************************/ 00050003
 /*                                                          @Z40LB35*/ 00100003
 /* PROCEDURE NAME - DATES  (ACCESS METHOD SERVICES)         @Z40LB35*/ 00150003
 /*                                                          @Z40LB35*/ 00200003
 /* FUNCTION - THIS COMMON INCLUDED PROCEDURE PROVIDES       @Z40LB35*/ 00250003
 /*            THE AMS SERVICES WITH THE BASIC FUNCTION OF   @Z40LB35*/ 00300003
 /*            CONVERTING A ONE VALUE DATE SUCH AS 99999 TO  @Z40LB35*/ 00350003
 /*            '00 99 0999' OR OBTAINING THE CURRENT DATE AND@Z40LB35*/ 00400003
 /*            ADJUSTING IT BY EITHER ADDING OR SUBTRACTING  @Z40LB35*/ 00450003
 /*            DAYS TO THAT DATE.  THE DATE WILL BE ADJUSTED @Z40LB35*/ 00500003
 /*            FOR ANY LEAP YEARS.  THE DATE WILL ALSO BE    @Z40LB35*/ 00550003
 /*            ADJUSTED TO FIT WITHIN THE RANGE 0 TO 99999.  @Z40LB35*/ 00600003
 /*                                                          @Z40LB35*/ 00650003
 /* ENTRY POINT - DATES                                      @Z40LB35*/ 00700003
 /*                                                          @Z40LB35*/ 00750003
 /*      LINKAGE - 'CALL DATES (DATESAGL)'                   @Z40LB35*/ 00800003
 /*                '%INCLUDE SYSLIB(IDCDF55)'                @Z40LB35*/ 00850003
 /*                                                          @Z40LB35*/ 00900003
 /* INPUT  - ADDRESS OF ARGUMENT LIST (DATESAGL)             @Z40LB35*/ 00950003
 /*                                                          @Z40LB35*/ 01000003
 /* OUTPUT - A RETURN CODE IN REGISTER 15                    @Z40LB35*/ 01050003
 /*          (0) - DATES SUCCESSFUL                          @Z40LB35*/ 01100003
 /*                                                          @Z40LB35*/ 01150003
 /*        - A CONVERTED DATE (00 YY DDDD) IN BINARY         @Z40LB35*/ 01200003
 /*                                                          @Z40LB35*/ 01250003
 /* EXIT NORMAL - RETURNS TO CALLER WITH CONDITION           @Z40LB35*/ 01300003
 /*               CODE ZERO                                  @Z40LB35*/ 01350003
 /*                                                          @Z40LB35*/ 01400003
 /* EXIT ERROR  - NONE                                       @Z40LB35*/ 01450003
 /*                                                          @Z40LB35*/ 01500003
 /* CHANGE ACTIVITY - NONE                                   @Z40LB35*/ 01550003
 /*                                                          @Z40LB35*/ 01600003
 /********************************************************************/ 01650003
 DATES: PROC;                                              /*@Z40LB35*/ 01700003
             /*DECLARATION FOR DATES PROCEDURE               @Z40LB35*/ 01750003
 DCL     TIMEVAR CHAR(8);           /*TIME VARIABLE - UTIME  @Z40LB35*/ 01800003
                                    /*USED IN UTIME CALL     @Z40LB35*/ 01850003
 DCL     1 DATEVAR CHAR(4),         /*DATE VARIABLE - UTIME  @Z40LB35*/ 01900003
           2 *     CHAR(1),         /*FILLER - RESERVED      @Z40LB35*/ 01950003
           2 DATEPACK CHAR(3);      /*DATE RETURN - PACKED   @Z40LB35*/ 02000003
                                    /*DECIMAL FORMAT         @Z40LB35*/ 02050003
             /*THE FOLLOWING STRUCTURE IS THE DATE RETURNED  @Z40LB35*/ 02100003
 DCL     1 CONVDATE BDY(WORD) BASED(DATRETRN),                          02150003
           2 CONVYEAR FIXED(15),    /*YEAR - RANGE 0 - 99    @Z40LB35*/ 02200003
           2 CONVDAYS FIXED(15);    /*DAYS - RANGE 0 - 999   @Z40LB35*/ 02250003
             /*THE FOLLOWING DECLARES ARE INTERNAL FIELDS    @Z40LB35*/ 02300003
 DCL     DATEBIN FIXED(31);         /*USED TO UNPACK DATE    @Z40LB35*/ 02350003
 DCL     QUITSW  BIT(1);            /*USED TO CONTROL LOOPS  @Z40LB35*/ 02400003
 DCL     ADJDAYS FIXED(31);         /*USED TO ADJUST DAYS    @Z40LB35*/ 02450003
             /*THE FOLLOWING ARE STATIC CONSTANTS            @Z40LB35*/ 02500003
 DCL     REGYEAR  FIXED(15) INIT(365);                     /*@Z40LB35*/ 02550003
                                    /*NUM DAYS IN REG YEAR   @Z40LB35*/ 02600003
 DCL     LEAPYEAR FIXED(15) INIT(366);                     /*@Z40LB35*/ 02650003
                                    /*NUM DAYS IN LEAP YEAR  @Z40LB35*/ 02700003
 DCL     MAXYEAR  FIXED(15) INIT(99);                      /*@Z40LB35*/ 02750003
                                    /*HIGHEST YEAR           @Z40LB35*/ 02800003
 DCL     MAXDAYS  FIXED(15) INIT(999);                     /*@Z40LB35*/ 02850003
                                    /*HIGHEST DAYS           @Z40LB35*/ 02900003
 DCL     MINYEAR  FIXED(15) INIT(0);                       /*@Z40LB35*/ 02950003
                                    /*LOWEST YEAR            @Z40LB35*/ 03000003
 DCL     MINDAYS  FIXED(15) INIT(0);                       /*@Z40LB35*/ 03050003
                                    /*LOWEST DAYS            @Z40LB35*/ 03100003
 DCL     NOREMAIN FIXED(15) INIT(0);                       /*@Z40LB35*/ 03150003
                                    /*NO REMAINDER AFTER DIV @Z40LB35*/ 03200003
 @EJECT;                                                   /*@Z40LB35*/ 03250003
             /* THIS IS THE START OF THIS PROCEDURE          @Z40LB35*/ 03300003
             /* HERE INITIALIZATION TAKES PLACE.             @Z40LB35*/ 03350003
             /* THE PARM LIST HEADER IS INITIALIZED,         @Z40LB35*/ 03400003
             /* THE TRACE POINT 'DTST' IS RECORDED, AND      @Z40LB35*/ 03450003
             /* THE DATE IS SET TO ZERO.                     @Z40LB35*/ 03500003
         UTRACE = 'DTST';                                  /*@Z40LB35*/ 03550003
         DATHEAD = 'DATESAGL';                             /*@Z40LB35*/ 03600003
         CONVDATE = 0;                                     /*@Z40LB35*/ 03650003
             /* DETERMINE IF CALLER WANTS THE CURRENT DATE   @Z40LB35*/ 03700003
             /* ADJUSTED WITH DAYS ADD OR SUBTRACTED.        @Z40LB35*/ 03750003
         IF DATDAYOP = ON THEN                                          03800003
           DO;                                             /*@Z40LB35*/ 03850003
             /* IF CALLER WANTS TO ADJUST CURRENT DATE,      @Z40LB35*/ 03900003
             /* ISSUE UTIME TO RETRIEVE CURRENT DATE,        @Z40LB35*/ 03950003
             /* CONVERT THE DATE FROM PACKED DECIMAL TO      @Z40LB35*/ 04000003
             /* BINARY, AND SEPARATE THE YEARS FROM THE      @Z40LB35*/ 04050003
             /* DAYS.                                        @Z40LB35*/ 04100003
             ADJDAYS = DATDAYS;                            /*@Z40LB35*/ 04150003
             UTIME (GDTTBL,TIMEVAR,DATEVAR);               /*@Z40LB35*/ 04200003
             CVB(DATEBIN,DATEPACK);                        /*@Z40LB35*/ 04250003
             CONVYEAR = DATEBIN/1000;                      /*@Z40LB35*/ 04300003
             CONVDAYS = DATEBIN - (CONVYEAR*1000);         /*@Z40LB35*/ 04350003
             /*INITIALIZE QUITSW OFF FOR LOOP CONTROL        @Z40LB35*/ 04400003
             QUITSW = OFF;                                 /*@Z40LB35*/ 04450003
             /*DETERMINE IF CALLER WANTS DAYS ADDED TO       @Z40LB35*/ 04500003
             /*CURRENT DATE.                                 @Z40LB35*/ 04550003
             IF DATADD = ON THEN                                        04600003
             /*IF CALLER WANTS DAYS ADDED, LOOP THOUGH       @Z40LB35*/ 04650003
             /*THE FOLLOWING DO LOOP UNTIL QUITSW IS SET     @Z40LB35*/ 04700003
               DO WHILE QUITSW = OFF;                      /*@Z40LB35*/ 04750003
             /*TEST FOR LEAP YEAR - EVERY FOUTH YEAR IS LEAP @Z40LB35*/ 04800003
             /*YEAR.  IF NO REMAINDER AFTER DIVIDING BY FOUR @Z40LB35*/ 04850003
             /*THEN THE YEAR BEING PROCESSED IS A LEAP YEAR  @Z40LB35*/ 04900003
                 IF CONVYEAR//4 = NOREMAIN THEN                         04950003
             /*DETERMINE IF THE DAYS BEING ADDED CAN BE      @Z40LB35*/ 05000003
             /*ADDED TO CURRENT YEAR BEING PROCESSED WITHOUT @Z40LB35*/ 05050003
             /*AN OVERFLOW INTO THE NEXT YEAR.               @Z40LB35*/ 05100003
                   IF (ADJDAYS + CONVDAYS) > LEAPYEAR THEN              05150003
             /*SUBTRACT LEAP YEAR DAYS (366) FROM DAYS       @Z40LB35*/ 05200003
             /*AND INCREMENT YEAR BY ONE                     @Z40LB35*/ 05250003
                     DO;                                   /*@Z40LB35*/ 05300003
                       ADJDAYS = ADJDAYS - LEAPYEAR;       /*@Z40LB35*/ 05350003
                       CONVYEAR = CONVYEAR + 1;            /*@Z40LB35*/ 05400003
                     END;                                  /*@Z40LB35*/ 05450003
                   ELSE                                                 05500003
             /*INCREMENT DAYS AND SET QUITSW TO FALL OUT     @Z40LB35*/ 05550003
             /*OF DO LOOP                                    @Z40LB35*/ 05600003
                     DO;                                   /*@Z40LB35*/ 05650003
                       CONVDAYS = ADJDAYS + CONVDAYS;      /*@Z40LB35*/ 05700003
                       QUITSW = ON;                        /*@Z40LB35*/ 05750003
                     END;                                  /*@Z40LB35*/ 05800003
                 ELSE                                                   05850003
             /*DETERMINE IF THE DAYS BEING ADDED CAN BE      @Z40LB35*/ 05900003
             /*ADDED TO CURRENT YEAR BEING PROCESSED WITHOUT @Z40LB35*/ 05950003
             /*AN OVERFLOW INTO THE NEXT YEAR.               @Z40LB35*/ 06000003
                   IF (ADJDAYS + CONVDAYS) > REGYEAR THEN               06050003
             /*SUBTRACT REG YEAR DAYS (365) FROM DAYS        @Z40LB35*/ 06100003
             /*AND INCREMENT YEAR BY ONE                     @Z40LB35*/ 06150003
                     DO;                                   /*@Z40LB35*/ 06200003
                       ADJDAYS = ADJDAYS - REGYEAR;        /*@Z40LB35*/ 06250003
                       CONVYEAR = CONVYEAR + 1;            /*@Z40LB35*/ 06300003
                     END;                                  /*@Z40LB35*/ 06350003
                   ELSE                                                 06400003
             /*INCREMENT DAYS AND SET QUITSW TO FALL OUT     @Z40LB35*/ 06450003
             /*OF DO LOOP                                    @Z40LB35*/ 06500003
                     DO;                                   /*@Z40LB35*/ 06550003
                       CONVDAYS = CONVDAYS + ADJDAYS;      /*@Z40LB35*/ 06600003
                       QUITSW = ON;                        /*@Z40LB35*/ 06650003
                     END;                                  /*@Z40LB35*/ 06700003
               END;                                        /*@Z40LB35*/ 06750003
 @EJECT;                                                   /*@Z40LB35*/ 06800003
             /*IF DAYS ARE TO BE SUBTRACTED FROM CURRENT,    @Z40LB35*/ 06850003
             /*DO THE FOLLOWING DO GROUP                     @Z40LB35*/ 06900003
             ELSE                                                       06950003
             /*DO THE FOLLOWING WHILE THE QUITSW IS NOT SET  @Z40LB35*/ 07000003
               DO WHILE QUITSW = OFF;                      /*@Z40LB35*/ 07050003
             /*TEST FOR LEAP YEAR - EVERY FOUTH YEAR IS LEAP @Z40LB35*/ 07100003
             /*YEAR.  IF NO REMAINDER AFTER DIVIDING BY FOUR @Z40LB35*/ 07150003
             /*THEN THE YEAR BEING PROCESSED IS A LEAP YEAR  @Z40LB35*/ 07200003
                 IF (CONVYEAR-1)//4 = NOREMAIN THEN                     07250003
             /*TEST TO SEE IF THE YEAR CAN BE DECREMENTED    @Z40LB35*/ 07300003
                   IF ADJDAYS >= LEAPYEAR THEN                          07350003
             /*SUBTRACT LEAP YEAR DAYS (366) FROM DAYS       @Z40LB35*/ 07400003
             /*AND DECREMENT YEAR BY ONE                     @Z40LB35*/ 07450003
                     DO;                                   /*@Z40LB35*/ 07500003
                       ADJDAYS = ADJDAYS - LEAPYEAR;       /*@Z40LB35*/ 07550003
                       CONVYEAR = CONVYEAR - 1;            /*@Z40LB35*/ 07600003
                     END;                                  /*@Z40LB35*/ 07650003
                   ELSE                                                 07700003
             /*IF NO FULL YEAR, TEST FOR OVERFLOW            @Z40LB35*/ 07750003
                     IF (CONVDAYS-ADJDAYS) <= 0 THEN                    07800003
             /*IF YEAR RUNS BACK INTO LAST YEAR,             @Z40LB35*/ 07850003
             /*ADJUST DAYS, SUBTRACT YEAR AND SET QUITSW     @Z40LB35*/ 07900003
                       DO;                                 /*@Z40LB35*/ 07950003
                         CONVDAYS = CONVDAYS + LEAPYEAR - ADJDAYS;      08000003
                         CONVYEAR = CONVYEAR - 1;          /*@Z40LB35*/ 08050003
                         QUITSW = ON;                      /*@Z40LB35*/ 08100003
                       END;                                /*@Z40LB35*/ 08150003
                     ELSE                                               08200003
             /*IF YEAR DOES NOT RUNS BACK INTO LAST YEAR,    @Z40LB35*/ 08250003
             /*ADJUST DAYS AND SET QUITSW                    @Z40LB35*/ 08300003
                       DO;                                 /*@Z40LB35*/ 08350003
                         CONVDAYS = CONVDAYS - ADJDAYS;    /*@Z40LB35*/ 08400003
                         QUITSW = ON;                      /*@Z40LB35*/ 08450003
                       END;                                /*@Z40LB35*/ 08500003
             /*ELSE THIS IS A NORMAL YEAR(NON-LEAP YEAR)     @Z40LB35*/ 08550003
                 ELSE                                                   08600003
             /*TEST TO SEE IF THE YEAR CAN BE DECREMENTED    @Z40LB35*/ 08650003
                   IF ADJDAYS >= REGYEAR THEN                           08700003
             /*SUBTRACT REG YEAR DAYS (365) FROM DAYS        @Z40LB35*/ 08750003
             /*AND DECREMENT YEAR BY ONE                     @Z40LB35*/ 08800003
                     DO;                                   /*@Z40LB35*/ 08850003
                       ADJDAYS = ADJDAYS - REGYEAR;        /*@Z40LB35*/ 08900003
                       CONVYEAR = CONVYEAR - 1;            /*@Z40LB35*/ 08950003
                     END;                                  /*@Z40LB35*/ 09000003
                   ELSE                                                 09050003
             /*IF NO FULL YEAR, TEST FOR OVERFLOW            @Z40LB35*/ 09100003
                     IF (CONVDAYS-ADJDAYS) <= 0 THEN                    09150003
             /*IF YEAR RUNS BACK INTO LAST YEAR,             @Z40LB35*/ 09200003
             /*ADJUST DAYS, SUBTRACT YEAR AND SET QUITSW     @Z40LB35*/ 09250003
                       DO;                                 /*@Z40LB35*/ 09300003
                         CONVDAYS = CONVDAYS + REGYEAR - ADJDAYS;       09350003
                         CONVYEAR = CONVYEAR - 1;          /*@Z40LB35*/ 09400003
                         QUITSW = ON;                      /*@Z40LB35*/ 09450003
                       END;                                /*@Z40LB35*/ 09500003
                     ELSE                                               09550003
             /*IF YEAR DOES NOT RUNS BACK INTO LAST YEAR,    @Z40LB35*/ 09600003
             /*ADJUST DAYS AND SET QUITSW                    @Z40LB35*/ 09650003
                       DO;                                 /*@Z40LB35*/ 09700003
                         CONVDAYS = CONVDAYS - ADJDAYS;    /*@Z40LB35*/ 09750003
                         QUITSW = ON;                      /*@Z40LB35*/ 09800003
                       END;                                /*@Z40LB35*/ 09850003
               END;                                        /*@Z40LB35*/ 09900003
           END;                                            /*@Z40LB35*/ 09950003
 @EJECT;                                                   /*@Z40LB35*/ 10000003
             /*DETERMINE IF THE CALLER WANTS THE DATE        @Z40LB35*/ 10050003
             /*CONVERTED                                     @Z40LB35*/ 10100003
         IF DATDTEOP= ON THEN                                           10150003
             /*IF CALLER WANTS DATE CONVERTED, CONVERT THE   @Z40LB35*/ 10200003
             /*DATE BY SEPARATING THE YEARS FROM THE DAYS    @Z40LB35*/ 10250003
           DO;                                             /*@Z40LB35*/ 10300003
             CONVYEAR = DATDATE/1000;                      /*@Z40LB35*/ 10350003
             CONVDAYS = DATDATE - (CONVYEAR * 1000);       /*@Z40LB35*/ 10400003
           END;                                            /*@Z40LB35*/ 10450003
             /*HERE THE DETERMINATION WILL BE MADE TO SEE    @Z40LB35*/ 10500003
             /*IF THE LIMITS ARE VIOLATED                    @Z40LB35*/ 10550003
             /*IF SO, FORCE THE DATE TO FALL WITHIN THE      @Z40LB35*/ 10600003
             /*LIMITS (0 99999)                              @Z40LB35*/ 10650003
         IF CONVYEAR > MAXYEAR THEN                                     10700003
           DO;                                             /*@Z40LB35*/ 10750003
             CONVYEAR = MAXYEAR;                           /*@Z40LB35*/ 10800003
             CONVDAYS = MAXDAYS;                           /*@Z40LB35*/ 10850003
           END;                                            /*@Z40LB35*/ 10900003
         ELSE                                                           10950003
           IF CONVYEAR < MINYEAR | CONVDAYS < MINDAYS THEN              11000003
             DO;                                           /*@Z40LB35*/ 11050003
               CONVYEAR = MINYEAR;                         /*@Z40LB35*/ 11100003
               CONVDAYS = MINDAYS;                         /*@Z40LB35*/ 11150003
             END;                                          /*@Z40LB35*/ 11200003
             /*RETURN TO CALLER WITH RETURN CODE ZERO        @Z40LB35*/ 11250003
         UDUMP (GDTTBL,'DTND');                            /*@Z40LB35*/ 11300003
         RETURN CODE(RCOK);                                /*@Z40LB35*/ 11350003
         END DATES;                                        /*@Z40LB35*/ 11400003
./  ADD  SSI=53030109,NAME=IDCDF56
   /******************************************************** @Z40LB64*/ 00050000
   /*                                                        @Z40LB64*/ 00100000
   /* CHECKMSS FUNCTION COMMON DATA AREA          6/27/75    @Z40LB64*/ 00150000
   /*                                                        @Z40LB64*/ 00200000
   /* CHANGE ACTIVITY -                                      @Z40LB64*/ 00250000
   /*     NONE                                               @Z40LB64*/ 00300000
   /*                                                        @Z40LB64*/ 00350000
   /******************************************************** @Z40LB64*/ 00400000
                                                                        00450000
     DCL SA#   FIXED(15);              /*SA INDEX VARIABLE   @Z40LB61*/ 00500000
     /* INTERNAL SA VIRTUAL ADDRESS DIRECTORY MAPPING        @Z40LB64*/ 00550000
     DCL 1 IVAD(3,64) BDY(HWORD) BASED(IVADPTR(SA#)),                   00600000
           3 IVADVVA FIXED(8),         /* VIRTUAL VOL ADDR   @Z40LB64*/ 00650000
           3 IVADFLG BIT(8),           /* VAD FLAGS          @Z40LB64*/ 00700000
             5 *     BIT(2),           /* RESERVED           @Z40LB64*/ 00750000
             5 IVADWI BIT(1),          /* WRITE INHIBIT      @Z40LB64*/ 00800000
             5 *     BIT(2);           /* RESERVED           @Z40LB64*/ 00850000
                                                                        00900000
     /* INTERNAL SA VIRTUAL VOLUME INFORMATION TABLE MAPPING @Z40LB64*/ 00950000
     DCL 1 IVVIT(192) BDY(HWORD) BASED(IVVITPTR(SA#)),                  01000000
           3 IVVI1    BIT(8),          /* IVVIT FIRST BYTE   @Z40LB64*/ 01050000
             5 *        BIT(5),        /* RESERVED           @Z40LB64*/ 01100000
             5 IVVI1STR BIT(1),        /* FIRST RESERVE      @Z40LB64*/ 01150000
             5 IVVIWI   BIT(1),        /* WRITE INHIBIT      @Z40LB64*/ 01200000
             5 IVVISHR  BIT(1),        /* VIRTUAL VOL SHARED @Z40LB64*/ 01250000
           3 IVVI2    BIT(8),          /* IVVIT SECOND BYTE  @Z40LB64*/ 01300000
             5 *        BIT(2),        /* RESERVED           @Z40LB64*/ 01350000
             5 IVVIINTF BIT(2),        /* INTERFACE ID       @Z40LB64*/ 01400000
             5 IVVIRSVD BIT(1),        /* VOLUME RESERVED    @Z40LB64*/ 01450000
             5 *        BIT(3);        /* RESERVED           @Z40LB64*/ 01500000
                                                                        01550000
     /* INTERNAL SA PAGE STATUS TABLE MAPPING                @Z40LB64*/ 01600000
     DCL 1 IPST(2,8,52) BDY(HWORD) BASED(IPSTPTR(SA#)),                 01650000
           3 IPSTVVA  FIXED(8),        /* VIRTUAL VOL ADDR   @Z40LB64*/ 01700000
           3 IPSTVP   FIXED(8);        /* VIRTUAL PAGE       @Z40LB64*/ 01750000
                                                                        01800000
     /* INTERNAL SA LOGICAL-TO-REAL TABLE MAPPING            @Z40LB64*/ 01850000
     DCL 1 ILTR(16) BDY(BYTE) BASED(ILTRPTR(SA#)),                      01900000
           3 ILTRRUA  FIXED(8),        /* REAL UNIT ADDRESS  @Z40LB64*/ 01950000
             5 ILTRM11 BIT(1);         /* SECOND HALF OF     @Z40LB64   02000000
                                          A 3330 MOD 11      @Z40LB64*/ 02050000
                                                                        02100000
     /* TABLE OF STARTING CCHHR LOCATIONS FOR MSC TABLES     @Z40LB64*/ 02150000
     DCL 1 CCHHRTBL BDY(WORD) BASED(CCHHRPTR),                          02200000
           3 CCOFFSET  FIXED(15),      /*CYLINDER DIFFERENCE @Z40LB61   02250000
                                         BETWEEN ORIGINAL               02300000
                                         LOCATION OF TABLES             02350000
                                         AND COPY'S LOCATION @Z40LB61*/ 02400000
           3 TBLCCHHR(10) CHAR(6)                                       02450000
                          BDY(HWORD),  /*ORIGINAL CCHHR'S OF @Z40LB61   02500000
                                         THE MSC TABLES      @Z40LB61*/ 02550000
             5 TBLCC     FIXED(15),    /*CYLINDER NUMBER     @Z40LB61*/ 02600000
             5 TBLHH     FIXED(15),    /*HEAD (TRACK) NUMBER @Z40LB61*/ 02650000
             5 TBLR      FIXED(8),     /*RECORD NUMBER       @Z40LB61*/ 02700000
             5 *         CHAR(1),      /*RESERVED            @Z40LB61*/ 02750000
           3 MVTDBCHR  CHAR(5)         /*CCHHR OF START OF   @Z40LB61*/ 02800000
                     BDY(HWORD),       /*MVT DATA BLOCK AREA @Z40LB61*/ 02850000
             5 MVTDBCC   FIXED(15),    /*CYLINDER NUMBER     @Z40LB61*/ 02900000
             5 MVTDBHH   FIXED(15),    /*HEAD (TRACK) NUMBER @Z40LB61*/ 02950000
             5 MVTDBR    FIXED(8);     /*RECORD NUMBER       @Z40LB61*/ 03000000
                                                                        03050000
     /* IDCCH03 ARGUMENT LIST                                @Z40LB64*/ 03100000
     DCL 1 ENTRYARG BDY(WORD) BASED(EARGPTR),                           03150000
           3 RDOPTION  BIT(8),         /*READ TYPE OPTIONS   @Z40LB61*/ 03200000
             5 GETNEXT   BIT(1),       /*GET NEXT SEQUENTIAL @Z40LB61   03250000
                                         RECORD (OR ENTRY)   @Z40LB61*/ 03300000
             5 BUFFER2   BIT(1),       /*USE I/O BUFFER #2   @Z40LB61*/ 03350000
             5 *         BIT(6),       /*RESERVED            @Z40LB61*/ 03400000
           3 TABLEID   FIXED(8),       /*ID OF TABLE TO BE   @Z40LB61   03450000
                                         READ                @Z40LB61*/ 03500000
           3 TBLFLAGS  BIT(8),         /*OPTION FLAGS FOR    @Z40LB61   03550000
                                         TABLES IN MSC WCS   @Z40LB61*/ 03600000
             5 MEFLAG    BIT(1),       /*MOUNT EQUALIZATION  @Z40LB61   03650000
                                         RECORD              @Z40LB61*/ 03700000
             5 CBMFLAG   BIT(1),       /*CONFIGURATION BIT   @Z40LB61   03750000
                                         MAP                 @Z40LB61*/ 03800000
             5 TCHRFLAG  BIT(1),       /*MSC TABLE CHR'S     @Z40LB61*/ 03850000
             5 *         BIT(5),       /*RESERVED            @Z40LB61*/ 03900000
           3 TBLPARTS  BIT(8),         /*OPTION FLAGS FOR    @Z40LB61   03950000
                                         TABLE SUBSETS       @Z40LB61*/ 04000000
             5 RPMFLAG   BIT(1),       /*SDG REAL PAGE MAP   @Z40LB61*/ 04050000
             5 PABFLAG   BIT(1),       /*SDG PAGE AVAIL-     @Z40LB61   04100000
                                         ABILITY BLOCK       @Z40LB61*/ 04150000
             5 DVBFLAG   BIT(1),       /*SDG DEMOUNTED       @Z40LB61   04200000
                                         VOLUME BLOCK        @Z40LB61*/ 04250000
             5 LPBFLAG   BIT(1),       /*SDG LRU'D PAGES     @Z40LB61   04300000
                                         BLOCK               @Z40LB61*/ 04350000
             5 CIFLAG    BIT(1),       /*CONFIGURATION INDEX @Z40LB61*/ 04400000
             5 MICTFLAG  BIT(1),       /*CONFIG. MANUF'S ID  @Z40LB61   04450000
                                         CONVERSION TABLE    @Z40LB61*/ 04500000
             5 CDBFLAG   BIT(1),       /*CONFIG. DATA BLOCK  @Z40LB61*/ 04550000
             5 *         BIT(1),       /*RESERVED            @Z40LB61*/ 04600000
           3 ENTRYID CHAR(12)          /*DATA RETURNED FROM  @Z40LB61*/ 04650000
                     BDY(WORD),        /*'GETENTRY' POINTING @Z40LB61   04700000
                                         TO LAST RECORD READ @Z40LB61*/ 04750000
             5 TBLADDR   PTR(31),      /*PTR TO WHERE ENTRY  @Z40LB61   04800000
                                         WAS READ INTO CORE  @Z40LB61*/ 04850000
             5 PREVCHR CHAR(5)         /*CCHHR OF LAST       @Z40LB61*/ 04900000
                       BDY(WORD),      /*RECORD READ         @Z40LB61*/ 04950000
               7 RECCYL    FIXED(15),  /*LAST RECORD'S CYL#  @Z40LB61*/ 05000000
               7 RECHEAD   FIXED(15),  /*LAST RECORD'S HEAD# @Z40LB61*/ 05050000
               7 RECREC    FIXED(8),   /*LAST RECORD'S REC#  @Z40LB61*/ 05100000
             5 ENTNUM    FIXED(8),     /*LATEST ENTRY'S SEQ# @Z40LB61   05150000
                                         IN CURRENT RECORD -            05200000
                                         (APPLIES ONLY TO VI,           05250000
                                         TVL, & SCL TABLES)  @Z40LB61*/ 05300000
             5 RECNUM    FIXED(15),    /*CURRENT RECORD'S    @Z40LB61   05350000
                                         SEQ# WITH RESPECT              05400000
                                         TO ENTIRE TABLE     @Z40LB61*/ 05450000
           3 SANUM     FIXED(15),      /*SA NUMBER           @Z40LB61*/ 05500000
           3 SDGNUM    FIXED(15),      /*STAGING DRIVE GRP#  @Z40LB61*/ 05550000
           3 INTFID    FIXED(15),      /*SA INTERFACE ID     @Z40LB61*/ 05600000
           3 VVADDR    FIXED(15),      /*VIRTUAL VOL ADDR    @Z40LB61*/ 05650000
           3 DEVICEID  FIXED(15),      /*SDG DEVICE NUMBER   @Z40LB61*/ 05700000
           3 CELLBLK   FIXED(15),      /*CELL MAP BLOCK#     @Z40LB61*/ 05750000
           3 MSFID     FIXED(15),      /*MSF NUMBER          @Z40LB61*/ 05800000
           3 VOLID     CHAR(6),        /*VOL SERIAL NUMBER   @Z40LB61*/ 05850000
           3 SEQ1CSN   CHAR(12),       /*SEQUENCE#1 CART.    @Z40LB61   05900000
                                         SERIAL NUMBER       @Z40LB61*/ 05950000
           3 BYTE#     FIXED(15),      /*BYTE# OF CHECK-OFF  @Z40LB61   06000000
                                         TABLE ENTRY FOR THIS           06050000
                                         FREE-FORMAT ENTRY   @Z40LB61*/ 06100000
           3 BIT#      FIXED(15),      /*BIT# OF CHECK-OFF   @Z40LB61   06150000
                                         TABLE ENTRY FOR THIS           06200000
                                         FREE-FORMAT ENTRY   @Z40LB61*/ 06250000
           3 GETRC     FIXED(15);      /*RETURN CODE FROM    @Z40LB61   06300000
                                         'GETENTRY' ROUTINE  @Z40LB61*/ 06350000
                                                                        06400000
     /* IDCCH04 ARGUMENT LIST                                @Z40LB64*/ 06450000
     DCL 1 MSGARG BDY(WORD) BASED(MARGPTR),                /*@Z40LB64*/ 06500000
           3 MSGTYPE  BIT(32),         /* PRIMARY MSG FLAGS  @Z40LB64*/ 06550000
             5 INCNMSG BIT(1),         /* 'INCONSISTENT' MSG @Z40LB64*/ 06600000
             5 DUPLMSG BIT(1),         /* 'DUPLICATE' MSG    @Z40LB64*/ 06650000
             5 SUMSMSG BIT(1),         /* 'UNEQUAL SUMS' MSG @Z40LB64*/ 06700000
             5 MTCHMSG BIT(1),         /* 'NO MATCH' MSG     @Z40LB64*/ 06750000
             5 *       BIT(27),        /* RESERVED           @Z40LB64*/ 06800000
             5 MSGNRSET BIT(1),        /* NO MSG RESET FLAG  @Z40LB64*/ 06850000
           3 TBLTYPE(2) BIT(32),       /* TABLE NAME FLAGS   @Z40LB64*/ 06900000
             5 MVTTBL  BIT(1),         /* MOUNTED VOLUME TBL @Z40LB64*/ 06950000
             5 VITBL   BIT(1),         /* VOLUME INVENTORY   @Z40LB64*/ 07000000
             5 TVLTBL  BIT(1),         /* TRANSIENT VOL LIST @Z40LB64*/ 07050000
             5 SCLTBL  BIT(1),         /* SCRATCH CTG LIST   @Z40LB64*/ 07100000
             5 MSVITBL BIT(1),         /* MSVI DATA SET      @Z40LB64*/ 07150000
             5 CMTBL   BIT(1),         /* CELL MAP           @Z40LB64*/ 07200000
             5 MICTTBL BIT(1),         /* MFRS ID CONVERSION @Z40LB64*/ 07250000
             5 VADTBL  BIT(1),         /* VIRTUAL ADDRESS    @Z40LB64   07300000
                                          DIRECTORY          @Z40LB64*/ 07350000
             5 PSTTBL  BIT(1),         /* PAGE STATUS TABLE  @Z40LB64*/ 07400000
             5 LTRTBL  BIT(1),         /* LOGICAL TO REAL    @Z40LB64*/ 07450000
             5 VVITTBL BIT(1),         /* VIRTUAL VOLUME     @Z40LB64   07500000
                                          INFORMATION TABLE  @Z40LB64*/ 07550000
             5 PABTBL  BIT(1),         /* PAGE AVAIL. BLOCK  @Z40LB64*/ 07600000
             5 DVBTBL  BIT(1),         /* DEMOUNTED VOL BLK  @Z40LB64*/ 07650000
             5 LPBTBL  BIT(1),         /* LRU PAGES BLOCK    @Z40LB64*/ 07700000
             5 RPMTBL  BIT(1),         /* REAL PAGE MAP      @Z40LB64*/ 07750000
             5 VMXTBL  BIT(1),         /* VVA/MVT CROSS-REF  @Z40LB64*/ 07800000
             5 VVATTBL BIT(1),         /* VIRTUAL VOLUME     @Z40LB64   07850000
                                          ADDRESS TABLE      @Z40LB64*/ 07900000
             5 CITBL   BIT(1),         /* CONFIG INDEX       @Z40LB64*/ 07950000
             5 CDBTBL  BIT(1),         /* CONFIG DATA BLOCK  @Z40LB64*/ 08000000
             5 METBL   BIT(1),         /* MOUNT EQUALIZATION @Z40LB64*/ 08050000
             5 CBMTBL  BIT(1),         /* CONFIG BIT MAP     @Z40LB64*/ 08100000
             5 VTSTBL  BIT(1),         /* VI, TVL, OR SCL    @Z40LB64*/ 08150000
             5 *       BIT(9),         /* RESERVED           @Z40LB64*/ 08200000
             5 TBLNRSET BIT(1),        /* NO TBL RESET FLAG  @Z40LB64*/ 08250000
           3 FLDTYPE1  BIT(32),        /* FIELD NAME FLAGS 1 @Z40LB64*/ 08300000
             5 VMSFLD  BIT(1),         /* VOL MOUNTED STATUS @Z40LB64*/ 08350000
             5 VSSFLD  BIT(1),         /* VOL SECURE STATUS  @Z40LB64*/ 08400000
             5 VESFLD  BIT(1),         /* VOL EXCLUSIVE      @Z40LB64*/ 08450000
             5 VBSFLD  BIT(1),         /* VOL BOUND STATUS   @Z40LB64*/ 08500000
             5 VRSFLD  BIT(1),         /* VOL RESERVED       @Z40LB64*/ 08550000
             5 WISFLD  BIT(1),         /* WRITE INHIBIT      @Z40LB64*/ 08600000
             5 MSFFLD  BIT(1),         /* MSF IDENTIFIER     @Z40LB64*/ 08650000
             5 VSNFLD  BIT(1),         /* VOL SERIAL NUMBER  @Z40LB64*/ 08700000
             5 MIFLD   BIT(1),         /* MANUFACTURER'S ID  @Z40LB64*/ 08750000
             5 VVAFLD  BIT(1),         /* VIRTUAL VOL ADDR   @Z40LB64*/ 08800000
             5 VPFLD   BIT(1),         /* VIRTUAL PAGE ADDR  @Z40LB64*/ 08850000
             5 RUAFLD  BIT(1),         /* REAL UNIT ADDRESS  @Z40LB64*/ 08900000
             5 SAFLD   BIT(1),         /* SA IDENTIFICATION  @Z40LB64*/ 08950000
             5 FPASFLD BIT(1),         /* FREE PAGE STATUS   @Z40LB64*/ 09000000
             5 FPCFLD  BIT(1),         /* FREE PAGE COUNTS   @Z40LB64*/ 09050000
             5 APCFLD  BIT(1),         /* ACTIVE PAGE COUNTS @Z40LB64*/ 09100000
             5 IPCFLD  BIT(1),         /* INACTIVE PAGE CNTS @Z40LB64*/ 09150000
             5 BPCFLD  BIT(1),         /* BOUND PAGE COUNTS  @Z40LB64*/ 09200000
             5 MVTPFLD BIT(1),         /* MVT POINTER        @Z40LB64*/ 09250000
             5 CAFLD   BIT(1),         /* CELL ADDRESS (XYZ) @Z40LB64*/ 09300000
             5 COSFLD  BIT(1),         /* CELL OCCUPIED      @Z40LB64*/ 09350000
             5 CPUFLD  BIT(1),         /* CPU IDENTIFICATION @Z40LB64*/ 09400000
             5 SDGFLD  BIT(1),         /* SDG INDEX          @Z40LB64*/ 09450000
             5 L3AFLD  BIT(1),         /* LOGICAL 3333 ADDR  @Z40LB64*/ 09500000
             5 CSNFLD  BIT(1),         /* CTG SERIAL NUMBER  @Z40LB64*/ 09550000
             5 LRUDFLD BIT(1),         /* LRU DELTAS         @Z40LB64*/ 09600000
             5 MVFLD   BIT(1),         /* MOUNTED VOLUMES    @Z40LB64*/ 09650000
             5 VUAFLD  BIT(1),         /* VIRTUAL UNIT ADDR  @Z40LB64*/ 09700000
             5 BPASFLD BIT(1),         /* BOUND PAGE STATUS  @Z40LB64*/ 09750000
             5 DVSFLD  BIT(1),         /* DEVICE VALID       @Z40LB64*/ 09800000
             5 DOSFLD  BIT(1),         /* DEVICE ONLINE      @Z40LB64*/ 09850000
             5 IUSFLD  BIT(1),         /* IN-USE STATUS      @Z40LB64*/ 09900000
           3 FLDTYPE2  BIT(32),        /* FIELD NAME FLAGS 2 @Z40LB64*/ 09950000
             5 APSFLD  BIT(1),         /* ALTERNATE PATH     @Z40LB64*/ 10000000
             5 VSHSFLD BIT(1),         /* VOLUME SHARED      @Z40LB64*/ 10050000
             5 RPFLD   BIT(1),         /* REAL PAGE          @Z40LB64*/ 10100000
             5 APASFLD BIT(1),         /* ACTIVE PAGE STATUS @Z40LB64*/ 10150000
             5 IPASFLD BIT(1),         /* INACT. PAGE STATUS @Z40LB64*/ 10200000
             5 FPFLD   BIT(1),         /* FREE PAGES         @Z40LB64*/ 10250000
             5 APFLD   BIT(1),         /* ACTIVE PAGES       @Z40LB64*/ 10300000
             5 IPFLD   BIT(1),         /* INACTIVE PAGES     @Z40LB64*/ 10350000
             5 BPFLD   BIT(1),         /* BOUND PAGES        @Z40LB64*/ 10400000
             5 *       BIT(23),        /* RESERVED           @Z40LB64*/ 10450000
           3 TBLINDEX(2) BDY(WORD),    /* TABLE INDEX VALUES @Z40LB64*/ 10500000
             5 KEYINDEX  CHAR(13)      /* MSVI KEY VALUE     @Z40LB64*/ 10550000
                         BDY(WORD),                        /*@Z40LB64*/ 10600000
               7 CSNINDEX  CHAR(12)    /* CTG SERIAL VALUE   @Z40LB64*/ 10650000
                           BDY(WORD),                      /*@Z40LB64*/ 10700000
                 9 XYZINDEX  FIXED(16),/* CELL ADDR (LZYX)   @Z40LB64*/ 10750000
                 9 CPUINDEX  FIXED(8), /* CPU ID VALUE       @Z40LB64*/ 10800000
                 9 SAINDEX   FIXED(8), /* SA INDEX VALUE     @Z40LB64*/ 10850000
                 9 INFINDEX  FIXED(8), /* INTERFACE VALUE    @Z40LB64*/ 10900000
                 9 VUAINDEX  FIXED(8), /* VIRTUAL UNIT ADDR  @Z40LB64*/ 10950000
                 9 VVAINDEX  FIXED(8), /* VIRTUAL VOL ADDR   @Z40LB64*/ 11000000
                 9 LUAINDEX  FIXED(8), /* LOGICAL UNIT ADDR  @Z40LB64*/ 11050000
                 9 RPINDEX   FIXED(8), /* REAL PAGE VALUE    @Z40LB64*/ 11100000
                 9 SDGINDEX  FIXED(8), /* SDG INDEX VALUE    @Z40LB64*/ 11150000
                 9 *         FIXED(8), /* RESERVED           @Z40LB64*/ 11200000
                 9 *         FIXED(8), /* RESERVED           @Z40LB64*/ 11250000
               7 MSFINDEX  FIXED(8),   /* MSF ID VALUE       @Z40LB64*/ 11300000
             5 VSNINDEX  CHAR(6),      /* VOL SERIAL VALUE   @Z40LB64*/ 11350000
             5 CHRINDEX  CHAR(5),      /* CCHHR VALUE        @Z40LB64*/ 11400000
           3 FLDVALUE(2) BDY(WORD),    /* FIELD VALUES       @Z40LB64*/ 11450000
             5 FLDCHAR  CHAR(12)       /* CHARACTER VALUE    @Z40LB64*/ 11500000
                        BDY(WORD),                         /*@Z40LB64*/ 11550000
               7 FLDNUM   FIXED(31);   /* NUMERIC VALUE      @Z40LB64*/ 11600000
                                                                        11650000
     /* CHECKMSS CHECK-OFF TABLES                            @Z40LB64*/ 11700000
                                                                        11750000
     DCL VICHKFF(4560) BIT(8)          /* VOLUME INVENTORY   @Z40LB64*/ 11800000
           BASED(VICOPTR);             /* CHECK-OFF TABLE    @Z40LB64*/ 11850000
     DCL TVLCHKFF(1280) BIT(8)         /* TRANSIENT VOL LIST @Z40LB64*/ 11900000
           BASED(TVLCOPTR);            /* CHECK-OFF TABLE    @Z40LB64*/ 11950000
     DCL MVTCHKFF(1024) BIT(8)         /* MOUNTED VOL TABLE  @Z40LB64*/ 12000000
           BASED(MVTCOPTR);            /* CHECK-OFF TABLE    @Z40LB64*/ 12050000
     DCL CDBCOT (16) BIT(192)          /*CDB CHECK-OFF TABLE @Z40LB61*/ 12100000
                     BASED(CDBCOPTR);                      /*@Z40LB61*/ 12150000
     DCL CDBCHKFF (16,3,8) BIT(8) BASED(CDBCOPTR);         /*@Z40LB61*/ 12200000
     DCL VVACOT (16) BIT(192)          /*VVAT CHECK-OFF TBL  @Z40LB61*/ 12250000
                     BASED(VVACOPTR);                      /*@Z40LB61*/ 12300000
     DCL VVACHKFF (16,24) BIT(8) BASED(VVACOPTR);          /*@Z40LB61*/ 12350000
     DCL VMXCOT (16) BIT(192)          /*VMX CHECK-OFF TABLE @Z40LB61*/ 12400000
                     BASED(VMXCOPTR);                      /*@Z40LB61*/ 12450000
     DCL VMXCHKFF (16,24) BIT(8) BASED(VMXCOPTR);          /*@Z40LB61*/ 12500000
     DCL RPMCOT (30) BIT(448)          /*RPM CHECK-OFF TABLE @Z40LB61*/ 12550000
                     BASED(RPMCOPTR);                      /*@Z40LB61*/ 12600000
     DCL RPMCHKFF (30,8,7) BIT(8) BASED(RPMCOPTR);         /*@Z40LB61*/ 12650000
     DCL DVBCOT (30) BIT(128)          /*DVB CHECK-OFF TABLE @Z40LB61*/ 12700000
                     BASED(DVBCOPTR);                      /*@Z40LB61*/ 12750000
     DCL DVBCHKFF (30,16) BIT(8) BASED(DVBCOPTR);          /*@Z40LB61*/ 12800000
     DCL LPBCOT (30) BIT(128)          /*LPB CHECK-OFF TABLE @Z40LB61*/ 12850000
                     BASED(LPBCOPTR);                      /*@Z40LB61*/ 12900000
     DCL LPBCHKFF (30,16) BIT(8) BASED(LPBCOPTR);          /*@Z40LB61*/ 12950000
     DCL 1 VVICOT    BIT(192)          /*VVIT CHECK-OFF TBL  @Z40LB61*/ 13000000
                     BASED(VVICOPTR(SA#)),                              13050000
           3 VVICHKFF (24) BIT(8);                         /*@Z40LB61*/ 13100000
     DCL 1 VADCOT    BIT(192)          /*VAD CHECK-OFF TABLE @Z40LB61*/ 13150000
                     BASED(VADCOPTR(SA#)),                              13200000
           3 VADCHKFF (3,8) BIT(8);                        /*@Z40LB61*/ 13250000
     DCL 1 PSTCOT    BIT(896)          /*PST CHECK-OFF TABLE @Z40LB61*/ 13300000
                     BASED(PSTCOPTR(SA#)),                              13350000
           3 PSTCHKFF (2,8,7) BIT(8);                      /*@Z40LB61*/ 13400000
     /* CHECKMSS PARAMETER LIST OF POINTERS AND OTHER NON-   @Z40LB61*/ 13450000
     /* BASED VARIABLES ASSOCIATED WITH COMMON DATA AREAS    @Z40LB61*/ 13500000
     DCL 1 CDALIST,                                                     13550000
           3 IVADPTR (16) PTR(31),     /*INTERNAL VAD PTR    @Z40LB61*/ 13600000
           3 IVVITPTR(16) PTR(31),     /*INTERNAL VVIT PTR   @Z40LB61*/ 13650000
           3 IPSTPTR (16) PTR(31),     /*INTERNAL PST PTR    @Z40LB61*/ 13700000
           3 ILTRPTR (16) PTR(31),     /*INTERNAL LTR PTR    @Z40LB61*/ 13750000
           3 IMERPTR   PTR(31),        /*INTERNAL MER PTR    @Z40LB61*/ 13800000
           3 CCHHRPTR  PTR(31),        /*CCHHR TABLE PTR     @Z40LB61*/ 13850000
           3 EARGPTR   PTR(31),        /*'ENTRYARG' PTR      @Z40LB61*/ 13900000
           3 MARGPTR   PTR(31),        /*'MSGARG' PTR        @Z40LB61*/ 13950000
           3 VICOPTR   PTR(31),        /*POINTER TO VI       @Z40LB61   14000000
                                         CHECK-OFF TABLE     @Z40LB61*/ 14050000
           3 TVLCOPTR  PTR(31),        /*POINTER TO TVL      @Z40LB61   14100000
                                         CHECK-OFF TABLE     @Z40LB61*/ 14150000
           3 MVTCOPTR  PTR(31),        /*POINTER TO MVT      @Z40LB61   14200000
                                         CHECK-OFF TABLE     @Z40LB61*/ 14250000
           3 CMCOPTR(4,4) PTR(31),     /*POINTER TO CELL MAP @Z40LB61   14300000
                                         CHECK-OFF TABLE     @Z40LB61*/ 14350000
           3 CDBCOPTR  PTR(31),        /*POINTER TO CDB      @Z40LB61   14400000
                                         CHECK-OFF TABLE     @Z40LB61*/ 14450000
           3 VVACOPTR  PTR(31),        /*POINTER TO VVAT     @Z40LB61   14500000
                                         CHECK-OFF TABLE     @Z40LB61*/ 14550000
           3 VMXCOPTR  PTR(31),        /*POINTER TO VMX      @Z40LB61   14600000
                                         CHECK-OFF TABLE     @Z40LB61*/ 14650000
           3 RPMCOPTR  PTR(31),        /*POINTER TO SDG RPM  @Z40LB61   14700000
                                         CHECK-OFF TABLE     @Z40LB61*/ 14750000
           3 DVBCOPTR  PTR(31),        /*POINTER TO SDG DVB  @Z40LB61   14800000
                                         CHECK-OFF TABLE     @Z40LB61*/ 14850000
           3 LPBCOPTR  PTR(31),        /*POINTER TO SDG LPB  @Z40LB61   14900000
                                         CHECK-OFF TABLE     @Z40LB61*/ 14950000
           3 VVICOPTR(16) PTR(31),     /*POINTER TO VVIT     @Z40LB61   15000000
                                         CHECK-OFF TABLE     @Z40LB61*/ 15050000
           3 VADCOPTR(16) PTR(31),     /*POINTER TO VAD      @Z40LB61   15100000
                                         CHECK-OFF TABLE     @Z40LB61*/ 15150000
           3 PSTCOPTR(16) PTR(31),     /*POINTER TO PST      @Z40LB61   15200000
                                         CHECK-OFF TABLE     @Z40LB61*/ 15250000
           3 VVATADDR  PTR(31),        /*VVAT IN-CORE PTR    @Z40LB61*/ 15300000
           3 CBMADDR   PTR(31),        /*CBM IN-CORE PTR     @Z40LB61*/ 15350000
           3 CIADDR    PTR(31),        /*CI IN-CORE PTR      @Z40LB61*/ 15400000
           3 MVCBADDR  PTR(31),        /*MVT CONTROL BLOCKS  @Z40LB61   15450000
                                         IN-CORE POINTER     @Z40LB61*/ 15500000
           3 CMBUFPTR(5,4) PTR(31),    /*CELL MAP BLOCKS     @Z40LB61   15550000
                                         IN-CORE POINTER     @Z40LB61*/ 15600000
           3 RWCSPTR   PTR(31),        /*PTR TO READ MSC/SA  @Z40LB61   15650000
                                         ARGUMENT LIST       @Z40LB61*/ 15700000
           3 EXARGPTR  PTR(31),        /*PTR TO UEXCP        @Z40LB61   15750000
                                         ARGUMENT LIST       @Z40LB61*/ 15800000
           3 WCSBFPTR  PTR(31),        /*WCS BUFFER PTR      @Z40LB61*/ 15850000
           3 CHRADDR1  PTR(31),        /*PTR TO I/O BUFFER 1 @Z40LB61*/ 15900000
           3 CHRADDR2  PTR(31),        /*PTR TO I/O BUFFER 2 @Z40LB61*/ 15950000
           3 RVVIPTR   PTR(31),        /*BASE PTR TO RVVI    @Z40LB64*/ 16000000
           3 MSVIAPTR  PTR(31),        /*MSVI BUFFER PTR     @Z40LB64*/ 16050000
           3 MSGAPTR   PTR(31),        /*PTR TO IDCCH04      @Z40LB61   16100000
                                         MESSAGE AREA        @Z40LB61*/ 16150000
           3 TEXTAPTR  PTR(31),        /*PTR TO IDCCH04      @Z40LB61   16200000
                                         TEXT AREA           @Z40LB61*/ 16250000
           3 FMTAPTR   PTR(31),        /*PTR TO IDCCH04      @Z40LB61   16300000
                                         FORMAT AREA         @Z40LB61*/ 16350000
           3 BDATAPTR  PTR(31),        /*PTR TO IDCCH04      @Z40LB61   16400000
                                         BLOCK DATA AREA     @Z40LB61*/ 16450000
           3 SAVLDCNT  FIXED(15),      /*COUNT OF VALID SAS  @Z40LB61*/ 16500000
           3 VLDSAID(16) FIXED(15),    /*VALID SA#S IN 1ST   @Z40LB61   16550000
                                         'SAVLDCNT' ENTRIES  @Z40LB61*/ 16600000
           3 MSFVLCNT  FIXED(15),      /*COUNT OF VALID MSFS @Z40LB61*/ 16650000
           3 VLDMSFID(4) FIXED(15),    /*VALID MSF#S IN 1ST  @Z40LB61   16700000
                                         'MSFVLCNT' ENTRIES  @Z40LB61*/ 16750000
           3 *         BIT(8),         /*COMMON FLAGS        @Z40LB61*/ 16800000
             5 MSCCHK  BIT(1),         /*MSC-MSC CHECKING    @Z40LB61   16850000
                                         REQUEST FLAG        @Z40LB61*/ 16900000
             5 SACHK   BIT(1),         /*MSC-SA CHECKING     @Z40LB61   16950000
                                         REQUEST FLAG        @Z40LB61*/ 17000000
             5 MSVICHK BIT(1),         /*MSC-MSVI CHECKING   @Z40LB61   17050000
                                         REQUEST FLAG        @Z40LB61*/ 17100000
             5 *       BIT(5);         /*RESERVED            @Z40LB61*/ 17150000
./  ADD  SSI=63280086,NAME=IDCDF65
 %       /************************************************************/ 00100006
         /*                                                          */ 00200006
         /* REPAIRV GLOBAL DATA AREAS - AMSDF65                      */ 00300006
         /*                                                          */ 00400006
         /*     1) PLS/2 MACRO DEFINITIONS                           */ 00500006
         /*     2) GLOBAL REPTBL - REPAIRV COMMUNICATIONS REGION     */ 00600006
         /*     3) DATA STRUCTURES                                   */ 00700006
         /*                                                          */ 00800006
         /************************************************************/ 00900006
                                                                        01000006
         /************************************************************/ 01100006
         /*                                                          */ 01200006
         /* PLS/2 MACRO DEFINITONS(MUST PRECEDE OTHER DECLARES)      */ 01300006
         /*                                                          */ 01400006
         /************************************************************/ 01500006
                                                                        01600006
                                                                        01700006
         /************************************************************/ 01800006
         /* FUNCTION - THESE MACROS ARE USED BY REPAIRV FOR ALL      */ 01900006
         /*            CALLS TO IDCRDIO                              */ 02000006
         /*                                                          */ 02100006
         /* INVOCATION - ?FUNRCD DS(DSOPT) FOR(FOROPT);              */ 02200006
         /*                                                          */ 02300006
         /* INPUT -                                                  */ 02400006
         /*            FUN = LOAD | ADD | GET | UPD | POS            */ 02500006
         /*            DSOPT = IN | OUT                              */ 02600006
         /*            FOROPT = NUP | UPD                            */ 02700006
         /*                                                          */ 02800006
         /* OUTPUT - APPRORIATE BITS ARE SET IN WFREQ                */ 02900006
         /*                                                          */ 03000006
         /* ERROR MESSAGES - ISSUED IF MACRO CALLED IMPROPERLY       */ 03100006
         /*                                                          */ 03200006
         /* RETURN CODE - 0 = SUCCESSFUL EXPANSION                   */ 03300006
         /*               4 = NO EXPANSION DUE TO ERROR              */ 03400006
         /*                                                          */ 03500006
         /************************************************************/ 03600006
                                                                        03700006
  LOADRCD: ADDRCD: GETRCD: UPDRCD: POSRCD:                              03800006
         MACRO KEYS(DS,FOR);                                            03900006
         DCL OP CHAR;                                                   04000006
         DCL RCODE FIXED;                                               04100006
         OP = MACNAME(1:1);                                             04200006
         RCODE = 4;                                                     04300006
         IF DS(1) = '' THEN RCODE = 0;                                  04400006
         IF DS(1) = 'IN' THEN RCODE = 0;                                04500006
         IF DS(1) = 'OUT' THEN RCODE = 0;                               04600006
         IF RCODE = 4 THEN DO;                                          04700006
           ANS MSG('DS OPTION UNRECOGNIZABLE');                         04800006
           GOTO WFMOUT;                                                 04900006
         END;                                                           05000006
         RCODE = 4;                                                     05100006
         IF DS(1) = 'IN' THEN DO;                                       05200006
           IF OP = 'P' THEN RCODE = 0;                                  05300006
           IF OP = 'G' THEN RCODE = 0;                                  05400006
         END;                                                           05500006
         ELSE RCODE = 0;                                                05600006
         IF RCODE = 4 THEN DO;                                          05700006
           ANS MSG('FUNCTION NOT VALID FOR INPUT DS');                  05800006
           GOTO WFMOUT;                                                 05900006
         END;                                                           06000006
         RCODE = 4;                                                     06100006
         IF FOR(1) = '' THEN RCODE = 0;                                 06200006
         IF FOR(1) = 'NUP' THEN RCODE = 0;                              06300006
         IF FOR(1) = 'UPD' THEN RCODE = 0;                              06400006
         IF RCODE = 4 THEN DO;                                          06500006
           ANS MSG('FOR OPTION UNRECOGNIZABLE');                        06600006
           GOTO WFMOUT;                                                 06700006
         END;                                                           06800006
         IF OP = 'G' THEN                                               06900006
           IF DS(1) = '' THEN DO;                                       07000006
             ANS MSG('DS OPTION MUST BE CODED FOR GETRCD');             07100006
             RCODE = 4;                                                 07200006
             GOTO WFMOUT;                                               07300006
           END;                                                         07400006
         IF OP = 'G' THEN DO;                                           07500006
           IF DS(1) = 'OUT' THEN IF FOR(1) = '' THEN RCODE = 4;         07600006
         END;                                                           07700006
         IF RCODE = 4 THEN DO;                                          07800006
           ANS MSG('FOR OPTION MUST BE CODED FOR GETRCD DS(OUT)');      07900006
           GOTO WFMOUT;                                                 08000006
         END;                                                           08100006
         ANS('DO;') SKIP COL(MACCOL);                                   08200006
         ANS('WFREQ = ''''B;') SKIP COL(MACCOL+2);                      08300006
         /*************************************************************/08400006
         /* DETERMINE IF ADDRCD,LOADRCD, OR GETCRD HAS BEEN REQUESTED */08500006
         /*************************************************************/08600006
         IF OP = 'L' THEN DO;                                           08700006
           ANS('WFRLD  = ON;') SKIP COL(MACCOL+2);                      08800006
           ANS('/* LOADRCD */') COL(MACCOL+20);                         08900006
         END;                                                           09000006
         IF OP = 'A' THEN DO;                                           09100006
           ANS('WFRADD = ON;') SKIP COL(MACCOL+2);                      09200006
           ANS('/*  ADDRCD */') COL(MACCOL+20);                         09300006
         END;                                                           09400006
         IF OP = 'G' THEN DO;                                           09500006
           ANS('WFRGET = ON;') SKIP COL(MACCOL+2);                      09600006
           ANS('/*  GETRCD */') COL(MACCOL+20);                         09700006
           IF DS(1) = 'IN' THEN DO;                                     09800006
             ANS('WFRIN  = ON;') SKIP COL(MACCOL+2);                    09900006
             ANS('/* INPUT DS */') COL(MACCOL+20);                      10000006
           END;                                                         10100006
           ELSE DO;                                                     10200006
             IF FOR(1) = 'UPD' THEN DO;                                 10300006
               ANS('WFRUP  = ON;') SKIP COL(MACCOL+2);                  10400006
               ANS('/* UPDATE */') COL(MACCOL+20);                      10500006
             END;                                                       10600006
           END;                                                         10700006
         END;                                                           10800006
         /*************************************************************/10900006
         /* DETERMINE IF UPDRCD OR POSRCD FUNCTION WAS REQUESTED*/      11000006
         /*************************************************************/11100006
         IF OP = 'U' THEN DO;                                           11200006
           ANS('WFRUPD = ON;') SKIP COL(MACCOL+2);                      11300006
           ANS('/*  UPDRCD */') COL(MACCOL+20);                         11400006
           ANS('WFRUP  = ON;') SKIP COL(MACCOL+2);                      11500006
           ANS('/* UPDATE */') COL(MACCOL+20);                          11600006
         END;                                                           11700006
         IF OP = 'P' THEN DO;                                           11800006
           ANS('WFRPOS = ON;') SKIP COL(MACCOL+2);                      11900006
           ANS('/*  POSRCD */') COL(MACCOL+20);                         12000006
           IF DS(1) = 'IN' THEN DO;                                     12100006
             ANS('WFRIN  = ON;') SKIP COL(MACCOL+2);                    12200006
             ANS('/* INPUT DS */') COL(MACCOL+20);                      12300006
           END;                                                         12400006
         END;                                                           12500006
         ANS('CALL IDCRDIO;') SKIP COL(MACCOL+2);                       12600006
         ANS('RFY RTNREG RSTD;') SKIP COL(MACCOL+2);                    12700006
         ANS('TESTRC = RTNREG;') SKIP COL(MACCOL+2);                    12800006
         ANS('RFY RTNREG UNRSTD;') SKIP COL(MACCOL+2);                  12900006
         ANS('END;') SKIP COL(MACCOL);                                  13000006
 WFMOUT: RETURN CODE(RCODE);                                            13100006
 %END;                                                                  13200006
 @EJECT;                                                                13300006
 %       /************************************************************/ 13400006
         /* FUNCTION - THIS MACRO IS USED BY REPAIRV FOR ALL         */ 13500006
         /*            CALLS TO CKERR                                */ 13600006
         /*                                                          */ 13700006
         /* INVOCATION - ?CALLCKER(ERRNUM,MSGVARX,...);              */ 13800006
         /*                                                          */ 13900006
         /* INPUT -                                                  */ 14000006
         /*            ERRNUM = ENTRY NUMBER FOR CKERR ACTION TABLE  */ 14100006
         /*            MSGVARX = MESSAGE VARIABLES TO BE INSERTED    */ 14200006
         /*                      IN MESSAGE                          */ 14300006
         /*                                                          */ 14400006
         /* OUTPUT - APPRORIATE BITS ARE SET IN CKREQ                */ 14500006
         /*                                                          */ 14600006
         /************************************************************/ 14700006
                                                                        14800006
  CALLCKER:                                                             14900006
         MACRO;                                                         15000006
         DCL INDEX1 FIXED;                                              15100006
         DCL INDEX2 FIXED;                                              15200006
         INDEX1 = 1;                                                    15300006
         INDEX2 = 2;                                                    15400006
         ANS('DO;') SKIP COL(MACCOL);                                   15500006
         ANS('CKREQ = CKREQ && CKREQ;') SKIP COL(MACCOL+2);             15600006
         ANS('CKRERN = '||MACLIST(1)||';') SKIP COL(MACCOL+2);          15700006
         IF NUMBER(MACLIST) > 1                                         15800006
           THEN                                                         15900006
 MVAR:       DO;                                                        16000006
               ANS('CKRMVAR(INDEX1) = ADDR('||MACLIST(INDEX2)||');')    16100006
                 SKIP COL(MACCOL+2);                                    16200006
               INDEX1 = INDEX1 + 1;                                     16300006
               INDEX2 = INDEX2 + 1;                                     16400006
               IF INDEX2 <= NUMBER(MACLIST)                             16500006
                 THEN                                                   16600006
                   GOTO MVAR;                                           16700006
             END;                                                       16800006
         ANS('CALL IDCRDER;') SKIP COL(MACCOL+2);                       16900006
         ANS('END;') SKIP COL(MACCOL);                                  17000006
 %END;                                                                  17100006
                                                                        17200006
 %       /************************************************************/ 17300006
         /*                                                          */ 17400006
         /* FUNCTION - THIS MACRO SIMULATES THE MVCL ASSEMBLER       */ 17500006
         /*            INSTRUCTION THUS ALLOWING MORE THAN 256       */ 17600006
         /*            BYTES TO BE MOVED AT A TIME.                  */ 17700006
         /*                                                          */ 17800006
         /* INVOCATION - ?MOVELONG TARGET(TARAREA,TARLENG)           */ 17900006
         /*                        SOURCE(SRCAREA,SRCLENG);          */ 18000006
         /*                                                          */ 18100006
         /* INPUT - TARAREA = ADDRESS OF RECEIVING FIELD             */ 18200006
         /*         TARLENG = LENGTH OF RECEIVING FIELD              */ 18300006
         /*         SRCAREA = ADDRESS OF SOURCE FIELD                */ 18400006
         /*         SRCLENG = LENGTH OF SOURCE FIELD                 */ 18500006
         /*                                                          */ 18600006
         /* OUTPUT - RECEIVING FIELD GETS THE STRING                 */ 18700006
         /*          OF THE SOURCE FIELD AS IN THE MVCL              */ 18800006
         /*          ASSEMBLER INSTRUCTION.                          */ 18900006
         /*                                                          */ 19000006
         /************************************************************/ 19100006
                                                                        19200006
  MOVELONG: MACRO KEYS(TARGET,SOURCE);                                  19300006
         ANS('RFY (REG2,REG3,REG4,REG5) RSTD;')                         19400006
                   SKIP COL(MACCOL);                                    19500006
         ANS('REG2 = '||TARGET(1)||';') SKIP COL(MACCOL);               19600006
         ANS('REG3 = '||TARGET(2)||';') SKIP COL(MACCOL);               19700006
         ANS('REG4 = '||SOURCE(1)||';') SKIP COL(MACCOL);               19800006
         ANS('REG5 = '||SOURCE(2)||';') SKIP COL(MACCOL);               19900006
         ANS('MVCL (REG2,REG4);') SKIP COL(MACCOL);                     20000006
         ANS('RFY(REG2,REG3,REG4,REG5) UNRSTD;')                        20100006
                   SKIP COL(MACCOL);                                    20200006
 %END;                                                                  20300006
                                                                        20400006
         /**********************************************************/   20500006
         /*                                                        */   20600006
         /* REPAIRV COMMUNICATIONS REGION                          */   20700006
         /*                                                        */   20800006
         /**********************************************************/   20900006
         DCL 1 REPTBL,                                                  21000006
               2 REPCB,                                                 21100006
                 3 REPRESER CHAR(12),   /*SPACE FOR IDENTIFER REPTBL*/  21200006
                 3 REPARFIO PTR(31),    /*PTR TO IOCSTR FOR             21300006
                                              ALTERNATE REPORT FILE */  21400006
                 3 REPIRWIO PTR(31),    /*PTR TO IOCSTR FOR IN          21500006
                                          REPAIR WORK FILE          */  21600006
                 3 REPORWIO PTR(31),    /*PTR TO IOCSTR FOR OUT         21700006
                                                 REPAIR WORK FILE   */  21800006
                 3 REPIDSOP PTR(31),    /*PTR TO IOCTLBK FOR IN FILE*/  21900006
                 3 REPODSOP PTR(31),    /*PTR TO IOCTLBK FOR OUT DS */  22000006
                 3 REPIDSAR PTR(31),    /*PTR TO UEXCP READ ARGUMENT    22100006
                                            LIST FOR INPUT DATA SET */  22200006
                 3 REPODSAR PTR(31),    /*PTR TO UEXCP READ ARGUMENT    22300006
                                            LIST FOR OUTPUT DATA SET*/  22400006
                 3 REPSPRIT PTR(31),    /*PTR TO IDCRDPT ARG LIST   */  22500006
                 3 REPIBFPT PTR(31),    /*PTR TO IN BUFFER FOR FILE */  22600006
                 3 REPOBFPT PTR(31),    /*PTR TO OUT BUFFER FOR DS  */  22700006
                 3 REPBUFF0 PTR(31),    /*PTR TO IN BUFFER FOR          22800006
                                              REPAIR WORK FILE      */  22900006
                 3 REPBUFF1 PTR(31),    /*PTR TO OUT BUFFER TO          23000006
                                              REPAIR WORK FILE      */  23100006
                 3 REPRWHDI PTR(31),    /*PTR TO INPUT REPAIR WORK      23200006
                                            FILE HEADER RECORD      */  23300006
                 3 REPRWHDO PTR(31),    /*PTR TO OUTPUT REPAIR WORK     23400006
                                            FILE HEADER RECORD      */  23500006
                 3 REPINCL  PTR(31),    /*TO CLOSE INPUT            */  23600006
                 3 REPOUTCL PTR(31),    /*TO CLOSE OUTPUT           */  23700006
                 3 REPIXTN2 PTR(31),    /*ADDR OF INPUT XTNTTBL2    */  23800006
                 3 REPIXTNT PTR(31),    /*ADDR OF INPUT XTNTTBL     */  23900006
                 3 REPOXTN2 PTR(31),    /*ADDR OF OUTPUT XTNTTBL2   */  24000006
                 3 REPOXTNT PTR(31),    /*ADDR OF OUTPUT XTNTTBL    */  24100006
                 3 REPIINFO PTR(31),    /*ADDR OF INPUT UIOINFO AREA*/  24200006
                 3 REPOINFO PTR(31),    /*ADDR OF OUTPT UIOINFO AREA*/  24300006
                 3 REPRWHAR PTR(31),    /*ADDR OF REPAIR WORK FILE      24400006
                                         HEADER INFORMATION AREA    */  24500006
                 3 REPRWINA PTR(31),    /*ADDR OF REPAIR WORK FILE      24600006
                                                INFORMATION AREA    */  24700006
                 3 REPISYSI PTR(31),    /*INPUT USYSINFO AREA ADDR  */  24800006
                 3 REPOSYSI PTR(31),    /*OUTPUT USYSINFO AREA ADDR */  24900006
                 3 REPILCPT PTR(31),    /*PTR TO LOCATION TABLE FOR     25000006
                                          THE INPUT DATA SET        */  25100006
                 3 REPOLCPT PTR(31),    /*PTR TO LOCATION TABLE FOR     25200006
                                          THE OUTPUT DATA SET       */  25300006
                 3 REPIDEVA PTR(31),    /* PTR TO INPUT DEVTYPE AREA*/  25400006
                 3 REPODEVA PTR(31),    /* PTR TO OPUT DEVTYPE AREA */  25500006
                 3 REPQRPTR PTR(31),    /* PTR TO QNAME AND RNAME   */  25600006
                 3 REPALLAG PTR(31),    /* PTR TO SPACE FOR ALLAGL  */  25700006
                 3 REPEXOAR PTR(31),    /* PTR TO SPACE FOR EXOARG  */  25800006
                 3 REPOPAGL PTR(31),    /* PTR TO SPACE FOR OPNAGL  */  25900006
                 3 REPCPPTR PTR(31),    /* PTR TO CATALOG PARM LIST */  26000006
                 3 REPCDSOP PTR(31),    /* IOCPTR FOR DS            */  26100006
               /*****************************************************/  26200006
               /*                                                   */  26300006
               /* WORKING STORAGE FOR IDCRD02-IDCRD07               */  26400006
               /*                                                   */  26500006
               /*****************************************************/  26600006
               2 REPCBEXT,                                              26700006
                 3 REPR0LN  FIXED(16),  /* RWF RECORD 0 LENGTH      */  26800006
                 3 REPR1LN  FIXED(16),  /* RWF RECORD 1 LENGTH      */  26900006
                 3 REPSRPR,                                             27000006
                   4 REPSRPRT BIT(1),   /*HEADER SWITCH FOR IDCRDPT */  27100006
                   4 *        BIT(7),                                   27200006
                   4 * CHAR(1),         /*RESERVED                  */  27300006
                 3 REPRC FIXED(16),     /*RETURN CODE               */  27400006
                 3 REPRCDCT FIXED(31),  /*RECORDS PROCESSED COUNTER */  27500006
                 3 I        FIXED(8),   /* INDEX1 FOR TNTTBL PROCESS*/  27600006
                 3 J        FIXED(8),   /* INDEX2 FOR TNTTBL PROCESS*/  27700006
                 3 K        FIXED(8),   /* INDEX3 FOR TNTTBL PROCESS*/  27800006
                 3 *        FIXED(8),   /* RESERVED                 */  27900006
                 3 CKREQ BDY(WORD),     /*   CKERR PARM LIST        */  28000006
                   4 CKRERN  FIXED(15), /*   ERROR NUMBER           */  28100006
                   4 *       FIXED(15), /*   RESERVED               */  28200006
                   4 CKRMVAR (10) PTR(31), /*  PTRS TO MSG VARIABLES*/  28300006
                 3 RDCATRC FIXED(31),   /*     UCATLG RETURN CODE   */  28400006
                 3 WFIOGUK CHAR(11),    /*     GET UPDATE KEY       */  28500006
                 3 *         CHAR(1),   /*   RESERVED               */  28600006
                 3 WFAREA BDY(WORD),    /*   WFIO ARGUEMENTS        */  28700006
                   4 WFIODAD PTR(31),   /*   DATA ADDRESS           */  28800006
                   4 WFIODLN FIXED(31), /*   DATA LENGTH            */  28900006
                   4 WFIOKYA PTR(31),   /*   KEY ADDRESS            */  29000006
                   4 WFREQ BIT(16),     /*   FUNCTION FLAGS         */  29100006
                     5 WFRTYP BIT(8),   /*   FUNCTION TYPE          */  29200006
                       6 WFRADD BIT(1), /*   ADDRCD                 */  29300006
                       6 WFRLD  BIT(1), /*   LOADRCD                */  29400006
                       6 WFRGET BIT(1), /*   GETRCD                 */  29500006
                       6 WFRUPD BIT(1), /*   UPDRCD                 */  29600006
                       6 WFRPOS BIT(1), /*   POSRCD                 */  29700006
                       6 *      BIT(3), /*   RESERVED               */  29800006
                     5 WFROPT BIT(8),   /*   OPTIONS                */  29900006
                       6 WFRIN  BIT(1), /*   INPUT DS               */  30000006
                       6 WFRUP  BIT(1), /*   UPDATE                 */  30100006
                       6 *      BIT(6), /*   RESERVED               */  30200006
                 3 REPENQSW FIXED(8);   /*   ENQUEUE SENSE SWITCH   */  30300006
                                                                        30400006
         /***********************************************************/  30500006
         /*                                                         */  30600006
         /* DATA STRUCTURES FOR REPAIRV                             */  30700006
         /*                                                         */  30800006
         /***********************************************************/  30900006
                                                                        31000006
          /* REPAIR WORKFILE HEADER RECORD                          */  31100006
                                                                        31200006
          DCL 1 RWFHDR BDY(WORD) BASED,                                 31300006
                2 RWFHKEY   CHAR(11),   /* RWF KEY                  */  31400006
                2 RWFHDSNR  CHAR(44),   /*  REPAIRWORKFILE          */  31500006
                2 RWFHDSNU  CHAR(44),   /* DSNAME OF USER DATA SET  */  31600006
                2 RWFHFM CHAR(4);       /* INFO AREA - SEE RWDEF    */  31700006
          /* ADDRESSABILITY TO INFORMATION AREA OF WORKFILE HDR REC */  31800006
          DCL 1 RWDEF  DEFINED(RWFHDR) BDY(WORD),                       31900006
                2 * CHAR(89),           /* SEE RWFHDR               */  32000006
                2 RWFHFT  CHAR(1),      /* F MEANS FIXED RECORD         32100006
                                           BLANK MEANS NOT FIXED    */  32200006
                2 RWFHDLN FIXED(16),    /* RCD LENGTH OR ZERO       */  32300006
                2 RWFHKLN FIXED(8);     /* KEY LENGTH OR ZERO       */  32400006
                                                                        32500006
          /* IDCRDPT ARGUMENT LIST                                  */  32600006
          DCL 1 SRPRTARG BDY(WORD) BASED(REPSPRIT),                     32700006
                                                                        32800006
                2 SRVRECL FIXED(31),    /* VSAM REC LEN MINUS F + K */  32900006
                2 SRVREPTR PTR(31),     /* PTR TO VSAM RECORD       */  33000006
                2 SRDSNHDR PTR(31),     /* PTR TO DSNAME IN RWF     */  33100006
                2 SRVOLPTR PTR(31),     /* PTR TO VOL SER NUMBER    */  33200006
                2 SRRWFDSN PTR(31),     /* PTR TO DSNAME OF RWF     */  33300006
                2 SRRWFKEY PTR(31),     /* PTR TO KEY OF RWF        */  33400006
                2 SRERCODE PTR(31),     /* PTR TO ERROR CODE        */  33500006
                2 SRDSNPTR PTR(31),     /* PTR TO DSNAME - DATA SET */  33600006
                2 SRSPRECL FIXED(31),   /* KEY + DATA LEN STAGPACK  */  33700006
                2 SRRECPTR PTR(31),     /* PTR TO COUNT OF NON-VSAM */  33800006
                2 SRCCHHRP PTR(31);     /* PTR TO CCHHR             */  33900006
                                                                        34000006
         /* REPAIR WORKFILE INFORMATION AREA                        */  34100006
                                                                        34200006
         DCL 1 RWFINFO BASED(REPRWINA),                                 34300006
               2 RWFDDN CHAR(8),        /* DDNAME                   */  34400006
               2 RWFDSN CHAR(44),       /* DSNAME                   */  34500006
               2 RWFVOL (5) CHAR(6),    /* VOLSER                   */  34600006
               2 RWFKEY1,               /* BEGINING RWF KEY         */  34700006
                 3 RWFKVOL1 CHAR(6),    /* VOLSER                   */  34800006
                 3 RWFKCHR1 CHAR(5),    /* CCHHR                    */  34900006
               2 RWFKEY2,               /* ENDING RWF KEY           */  35000006
                 3 RWFKVOL2 CHAR(6),    /* VOLSER                   */  35100006
                 3 RWFKCHR2 CHAR(5);    /* CCHHR                    */  35200006
                                                                        35300006
         /* RWF HEADER RECORD INFORMATION                           */  35400006
                                                                        35500006
         DCL 1 RWHDRINF BASED(REPRWHAR),                                35600006
               2 RWHDRFIX CHAR(1),      /* F FOR FBS RECORD FORMAT  */  35700006
                                        /* 0 FOR OTHER RCD FORMATS  */  35800006
               2 *        CHAR(4),                                      35900006
               2 RWHDRKLN FIXED(8),     /* KEY LN IF RWHDRFIX = F   */  36000006
                                        /* 0 IF RWHDRFIX ¬= F       */  36100006
               2 RWHDRDLN FIXED(16);    /* DATA LN IF RWHDRFIX = F  */  36200006
                                        /* 0 IF RWHDRFIX ¬= F       */  36300006
                                                                        36400006
         /* IDCRDRD  ARGUMENT LIST                                  */  36500006
                                                                        36600006
         DCL 1 RDARG BDY(WORD) BASED,                                   36700006
               2 RDRES      CHAR(8),    /*RESERVED                  */  36800006
               2 RDCTLBK    PTR(31),    /*POINTER TO I/O CNTL BLK   */  36900006
               2 RDIOAREA   PTR(31),    /*PTR TO RIOAREA            */  37000006
               2 RDDARE     PTR(31),    /*PTR TO DATA READ          */  37100006
               2 RDLOCPTR   PTR(31),    /*POINTER TO LOC TABLE      */  37200006
               2 RDCCWCNT   FIXED(15),  /*NUM OF CCWS EXECUTED      */  37300006
               2 RDCHR,                                                 37400006
                  3 RDCC    FIXED(16),  /*CYLINDER NUMBER           */  37500006
                  3 RDHH    FIXED(16),  /*HEAD NUMBER               */  37600006
                  3 RDRECNUM FIXED(8),  /*RECORD NUMBER             */  37700006
               2 RDDS       FIXED(8),   /* ZERO FOR DATA SET        */  37800006
               2 RDRWPKLN   PTR(31),    /* KEY LEN POINTER          */  37900006
               2 RDSPACE,               /* RESERVED FOR UEXCP       */  38000006
                  3 *       FIXED(8),   /* RESERVED                 */  38100006
                  3 *       PTR(24),    /* RESERVED                 */  38200006
                  3 *       FIXED(15),  /* RESERVED                 */  38300006
                  3 *       FIXED(15),  /* RESERVED                 */  38400006
                  3 *       FIXED(15),  /* RESERVED                 */  38500006
               2 RDFUNC FIXED(8),       /* WRITE FUNCTION BYTE      */  38600006
               2 RDSPKL FIXED(8),       /* STAGING PACK KEY LENGTH  */  38700006
               2 RDSPDL FIXED(15),      /* STAGING PACK DATA LENGTH */  38800006
               2 RDLENTOT FIXED(15),    /* NUM OF LENGTH ENTRIES    */  38900006
               2 RDKLEN    PTR(31),     /* PTR LEN ENTRIES FOR KL   */  39000006
               2 RDDLEN    PTR(31);     /* PTR LEN ENTRIES FOR DL   */  39100006
                                                                        39200006
         DCL RDSPKLDL CHAR(3) DEFINED(RDSPKL);                          39300006
         /* UIOINFO RETURN AREAS                                    */  39400006
                                                                        39500006
         DCL 1 INFOAREA BASED,                                          39600006
               2 INFAREAL   FIXED(16),  /* LENGTH OF RETURN AREA    */  39700006
               2 INFDATAL   FIXED(16),  /* LENGTH OF DATA RETURNED  */  39800006
               2 INFAREA    CHAR(*);                                    39900006
         DCL 1 INFODSN BASED,                                           40000006
               2 INFDSNID   CHAR(2),    /* IDENTIFIER - X'0001'     */  40100006
               2 INFDSNLN   FIXED(16),  /* LENGTH OF DATA RETURNED  */  40200006
               2 INFDSN     CHAR(44);   /* DATA SET NAME            */  40300006
         DCL 1 INFOVOL BASED,                                           40400006
               2 INFVOLID   CHAR(2),    /* IDENTIFIER - X'0002'     */  40500006
               2 INFVOLLN   FIXED(16),  /* LENGTH OF DATA RETURNED  */  40600006
               2 INFVOL(5)  CHAR(6);    /* VOLUME SERIAL NUMBER LIST*/  40700006
                                                                        40800006
         /* DEVICE TYPE AREA DSECT                                  */  40900006
                                                                        41000006
         DCL 1 DEVAREA BDY(WORD) BASED,                                 41100006
               2 DEVDEVTP,              /* UCB DEVICE TYPE          */  41200006
                 3 DEVTBYT1 BIT(8),     /* MODEL BITS               */  41300006
                 3 DEVTBYT2,            /* OPTION FLAGS             */  41400006
                   4 * BIT(4),                                          41500006
                   4 DEVRVDEV BIT(1),   /* 0 = REAL DEVICE          */  41600006
                                        /* 1 = VIRTUAL DEVICE       */  41700006
                   4 * BIT(3),                                          41800006
                 3 DEVTBYT3 BIT(8),     /* CLASS BITS               */  41900006
                 3 DEVTBYT4 BIT(8),     /* DEVICE CODE              */  42000006
               2 DEVMAXBK   FIXED(32),  /* MAXIMUM DEVICE BLOCKSIZE */  42100006
               2 *,                                                     42200006
                 3 DEVMAXCC FIXED(16),  /* MAXIMUM PHYSICAL CYLINDER*/  42300006
                 3 DEVMAXHH FIXED(16),  /* MAXIMUM PHYSICAL TRACKS  */  42400006
               2 DEVWORD3,                                              42500006
                 3 DEVTC    FIXED(16),  /*TRACK CAPACITY            */  42600006
                 3 DEVBOH,                                              42700006
                   4 DEVBOH1 FIXED(8),  /* BLOCK OVERHEAD 3330      */  42800006
                   4 DEVBOH2 FIXED(8),  /* THIS & ABOVE IS BLOCK    */  42900006
               2 DEVWORD4,                                              43000006
                 3 DEVKC    FIXED(8),   /* KEY CONSTANT             */  43100006
                 3 DEV4B1,                                              43200006
                   4 *      BIT(4),                                     43300006
                   4 INF4FLG BIT(1),    /* ON INDICATES TWO BYTES       43400006
                                   OF BLOCK OVERHEAD MUST BE HANDLED*/  43500006
                   4 *      BIT(3),                                     43600006
                   4 *      CHAR(2),    /* RESERVED                 */  43700006
               2 DEVWORD5 FIXED(32);                                    43800006
                                                                        43900006
         /* EXTENT TABLE 2: DATA SET DEB EXTENTS                    */  44000006
                                                                        44100006
         DCL 1 XTNTTBL2 BASED,                                          44200006
               2 XTN2ENT(140),                                          44300006
                 3 XTN2DSN CHAR(44),      /* DATA SET NAME          */  44400006
                 3 XTN2CHR1,              /*  LOWER LIMIT CCHH      */  44500006
                   4 XTN2CC1  FIXED(16),                                44600006
                   4 XTN2HH1  FIXED(16),                                44700006
                 3 XTN2CHR2,              /*  UPPER LIMIT CCHH      */  44800006
                   4 XTN2CC2   FIXED(16),                               44900006
                   4 XTN2HH2   FIXED(16);                               45000006
                                                                        45100006
         /* EXTENT TABLE 3: USER SUPPLIED RANGE MERGED WITH XTNTTBL2*/  45200006
                                                                        45300006
         DCL 1 XTNTTBL BASED,                                           45400006
               2 XTNTHDR,                 /* EXTENT TABLE HEADER    */  45500006
                 3 XTNHDDN   CHAR(8),     /* DDNAME                 */  45600006
                 3 XTNHDSN   CHAR(44),    /* DSNAME                 */  45700006
                 3 XTNHVOLN  CHAR(1),     /* VOLUME COUNT OF 1      */  45800006
                 3 XTNHVOL   CHAR(6),     /* VOLSER                 */  45900006
                 3 *         CHAR(1),                                   46000006
                 3 XTNHPWD   CHAR(8),     /* PASSWORD               */  46100006
                 3 XTNHCHR1,              /* USER LOWER LIMIT CCHHR */  46200006
                   4 XTNHCC1   FIXED(16),                               46300006
                   4 XTNHHH1   FIXED(16),                               46400006
                   4 XTNHR1    FIXED(8),                                46500006
                 3 *         CHAR(3),     /* RESERVED               */  46600006
                 3 XTNHCHR2,              /* USER UPPER LIMIT CCHHR */  46700006
                   4 XTNHCC2   FIXED(16),                               46800006
                   4 XTNHHH2   FIXED(16),                               46900006
                   4 XTNHR2    FIXED(8),                                47000006
                 3 *         CHAR(3),     /* RESERVED               */  47100006
                 3 XTNHMODE  CHAR(1),     /* I=INPUT,O=OUTPUT       */  47200006
                 3 *         CHAR(3),                                   47300006
               2 XTNTENT(140),            /* EXTENT TABLE ENTRIES   */  47400006
                 3 XTNTDDN   CHAR(8),     /* DDNAME                 */  47500006
                 3 XTNTDSN   CHAR(44),    /* DSNAME                 */  47600006
                 3 XTNTVOLN  CHAR(1),     /* VOLUME COUNT OF 1      */  47700006
                 3 XTNTVOL   CHAR(6),     /* VOLSER                 */  47800006
                 3 *         CHAR(3),     /* RESERVED               */  47900006
                 3 XTNTCHR1,              /* MERGED LOW LIM  CCHHR  */  48000006
                   4 XTNTCC1   FIXED(16),                               48100006
                   4 XTNTHH1   FIXED(16),                               48200006
                   4 XTNTR1    FIXED(8),                                48300006
                 3 *         CHAR(3),     /* RESERVED               */  48400006
                 3 XTNTCHR2,              /* MERGED UPPER LIM CCHHR */  48500006
                   4 XTNTCC2   FIXED(16),                               48600006
                   4 XTNTHH2   FIXED(16),                               48700006
                   4 XTNTR2    FIXED(8),                                48800006
                 3 *         CHAR(3);     /* RESERVED               */  48900006
         /* STRUCTURE TO REFERENCE 'RESERVE' QUEUE PARAMETERS       */  49000006
         DCL 1 SPLIST BASED(REPQRPTR),                                  49100006
               2 SPQNAME CHAR(8),         /* QNAME                  */  49200006
               2 SPRNAME,                 /* RNAME                  */  49300006
                 3 SPRLEN CHAR(1),        /* RNAME LENGTH           */  49400006
                 3 SPRVOL CHAR(6);        /* VOLSER                 */  49500006
         /* REPAIR WORKFILE DATA RECORD                             */  49600006
         DCL 1 RWFR BASED BDY(WORD),                                    49700006
               2 RWFRKEY  CHAR(11),       /* RWF KEY                */  49800006
               2 RWFRFLG CHAR(5),         /* SEE RWFRDE             */  49900006
               2 RWFRCNT,                                               50000006
                 3 RWFRCC FIXED(16),      /* CC                     */  50100006
                 3 RWFRHH FIXED(16),      /* HH                     */  50200006
                 3 RWFRR  FIXED(8),       /* R                      */  50300006
                 3 RWFRKLN FIXED(8),      /* RECORD KEY LENGTH      */  50400006
                 3 RWFRDLN FIXED(16),     /* RECORD DATA LENGTH     */  50500006
               2 RWFRKD CHAR(*);          /* RECORD KEY/DATA        */  50600006
         /* STRUCTURE TO ALLOW ADDRESSABILITY TO STATUS FIELDS OF       50700006
                               OF REPAIR WORKFILE DATA RECORD       */  50800006
         DCL 1 RWFRDE DEFINED(RWFR),                                    50900006
               2 * CHAR(11),              /* SEE RWFR               */  51000006
               2 RWFRF1 CHAR(1),          /* 0 WHEN FILE CREATED    */  51100006
                                          /* 1 WHEN FILE MODIFIED   */  51200006
                                          /* 2 WHEN FILE DEBLOCKED  */  51300006
                                          /* 3 WHEN DEBLOCKED AND   */  51400006
                                          /* MODIFIED               */  51500006
                                          /* DEBLOCKED              */  51600006
               2 RWFRF2 FIXED(16),        /* STATUS CODE            */  51700006
               2 RWFROV FIXED(8),         /* OVERFLOW RECORD        */  51800006
               2 * CHAR(*);               /* SEE RWFR               */  51900006
                                                                        52000006
         /***********************************************************/  52100006
         /*                                                         */  52200006
         /*  END OF REPAIRV GLOBAL DECLARATIONS                     */  52300006
         /*                                                         */  52400006
         /***********************************************************/  52500006
./  ADD  SSI=63280087,NAME=IDCDF66
         /************************************************************/ 01000006
         /* REPAIRV I/O MAPPING MACRO -AMSDF66                       */ 02000006
         /*                                                          */ 03000006
         /* THE FOLLOWING STRUCTURE IS USED BY IDCRDRD  & REPAIRV    */ 04000006
         /* TO DETERMINE THE LOCATION & READ RETURN CODES OF THE     */ 05000006
         /* RECORDS ON A TRACK.                                      */ 06000006
         /*                                                          */ 07000006
         /* IT ALSO CONTAINS A SAVE AREA FOR THE COUNT FIELD AND     */ 08000006
         /* LENGTH INFORMATION FOR EACH RECORD,IF REQUIRED           */ 09000006
         /************************************************************/ 10000006
         DCL 1 LOCTAB(125) BDY (WORD) BASED, /* LOC TABLE FOR READS  */ 11000006
               2 LOCADDR PTR(31),            /* ENTRY ADDRESS        */ 12000006
               2 LOCRCNT  FIXED(15),         /*RET CODE OF READ COUNT*/ 13000006
               2 LOCRCKD FIXED(15),          /*RET CODE KEY/DATA RD  */ 14000006
               2 LOCCNTFD CHAR(8),           /*SAVE AREA FOR COUNT   */ 15000006
               2 * CHAR(1),                  /*SAVE AREA FOR COUNT   */ 16000006
               2 LOCKLEN FIXED(8),           /*KEY LEN FOR SPACCR    */ 17000006
               2 LOCDLEN FIXED(15);          /*DATA LEN FOR SPACCR   */ 18000006
         DCL 1 RIOAREA BDY(WORD) BASED,                                 19000006
               2 RIOHDR,                                                20000006
               3 RFIRST     CHAR(1),     /* FIRST TIME INDICATOR    */  21000006
               3 *          CHAR(1),     /* RESERVED                */  22000006
               3 RPREV,                  /* PREVIOUS CCHHR          */  23000006
                   4 RPREVCC FIXED(15),  /* PREVIOUS CYLINDER ADDRESS*/ 24000006
                   4 RPREVHH FIXED(15),  /* PREVIOUS READ ADDR       */ 25000006
                   4 RPREVR  FIXED(8),   /* PREVIOUS RECORD NUMBER   */ 26000006
                 3 *         CHAR(1),    /* RESERVED                 */ 27000006
                 3 RNUMREC   FIXED(15),  /* NUM OR RECS TO READ      */ 28000006
                 3 *         CHAR(16),   /* RESERVED FOR KEY AREA    */ 29000006
                 3 *         CHAR(256),  /* RESERVED                 */ 30000006
               2 RBUFF       CHAR(*);    /* BUFFER READ IN AREA      */ 31000006
         DCL 1 RKEY BASED,               /* STRUCTURE FOR KEYAREA    */ 32000006
               2 RKEYVOL     CHAR(6),    /* VOLID                    */ 33000006
               2 RKEYCHR,                /* CCHHR                    */ 34000006
                 3 RKEYCC  FIXED(15),    /* CYLINDER ADDRESS         */ 35000006
                 3 RKEYHH  FIXED(15),    /* HEAD ADDRESS             */ 36000006
                 3 RKEYR   FIXED(8),     /* RECORD NUMBER            */ 37000006
               2 RKEYFLG,                /* FLAG BYTES               */ 38000006
                 3 RKEYFLG1  CHAR(1),    /* FLAG BYTE ONE            */ 39000006
                 3 RKEYFLG2  CHAR(2),    /* SECOND FLAGS             */ 40000006
                 3 RKEYFLG3  CHAR(1),    /* THIRD FLAGS              */ 41000006
                 3 *         CHAR(1);    /* RESERVED                 */ 42000006
         DCL 1 RBUF BASED,               /* STRUC FOR RECS IN RBUFF  */ 43000006
               2 RBUFCNT,                /* RECORD COUNT AREA        */ 44000006
                 3 RBCCHHR,              /* CCHHR                    */ 45000006
                   4 RBCC  FIXED(15),    /* CYLINDER ADDRESS         */ 46000006
                   4 RBHH  FIXED(15),    /* HEAD ADDRESS             */ 47000006
                   4 RBREC FIXED(8),     /* RECORD NUMBER            */ 48000006
                 3 RBKL   FIXED(8),      /* KEY LENGTH               */ 49000006
                 3 RBDL   FIXED(15),     /* DATA LENGTH              */ 50000006
               2 RKEYDAT  CHAR(*);       /* KEY AND DATA AREA        */ 51000006
         DCL 1 WIOAREA BASED BDY(WORD),                                 52000006
               2 WNUMREC FIXED(31),      /* NUM OF RECORDS TO WRITE  */ 53000006
               2 WBUFF CHAR(*);          /* DATA AREAS FOR WRITES    */ 54000006
         DCL 1 WBUF BASED,               /* STRUC WRITES FROM WBUFF  */ 55000006
               2 WBUFCNT,                /* RECORD COUNT AREA        */ 56000006
                 3 WBCCHHR,              /* CCHHR                    */ 57000006
                   4 WBCC  FIXED(15),    /* CYLINDER ADDRESS         */ 58000006
                   4 WBHH  FIXED(15),    /* HEAD ADDRESS             */ 59000006
                   4 WBREC FIXED(8),     /* RECORD NUMBER            */ 60000006
                 3 WBKL  FIXED(8),       /* KEY LENGTH               */ 61000006
                 3 WBDL  FIXED(15),      /* DATA LENGTH              */ 62000006
               2 WKEYDAT CHAR(*);        /* KEY AND DATA BUFFER      */ 63000006
./  ADD  SSI=62400032,NAME=IEZBASEV
 /********************************************************************/ 00090003
 /*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00092003
 /*          MACSTAT  Y30LB22          74/192/341040         @Y30LB22*/ 00094003
 /*                                                                  */ 00096003
 /*          NAME: IEZBASEV                                  @Y30LB22*/ 00098003
 /*                                                                   */00098403
 /*          FUNCTION:                                       @Y30LB22*/ 00098803
 /*          A BASE VOLUME RECORD IS CONTAINED IN THE MSVI   @Y30LB22*/ 00098903
 /*          DATA SET FOR EACH MASS STORAGE VOL (EXCLUDING   @Y30LB22*/ 00099003
 /*          COPY VOLUMES AND DUPLICATE VOLUME SERIAL        @Y30LB22*/ 00137203
 /*          NUMBER VOLUMES) CONTAINED IN THE MASS STORAGE   @Y30LB22*/ 00156003
 /*          FACILITY                                        @Y30LB22*/ 00174803
 /*                                                          @Y30LB22*/ 00184803
 /*          STATUS:  CHANGE LEVEL = 1                       @ZA11665*/ 00193603
 /*                                                          #Y30LB22*/ 00212403
 /*     CHANGE 01 07/12/76  FIX TO EXPIR DATE                @ZA11665*/ 00222403
 /*                                                          #Y30LB22*/ 00224403
 /********************************************************************/ 00231203
 DCL  1         BASEV BASED(BASEVPTR) BDY(WORD),           /*@Y30LB22*/ 00250003
         2      BASNAME   CHAR(13),  /*KEY  OF VOL           @Y30LB22*/ 00300003
           3    BASEVKEY  CHAR(5),   /*LETTER V AND 4 BLANKS @Y30LB22*/ 00350003
           3    BASSERNO  CHAR(6),   /*VOLUME SER. NO.       @Y30LB22*/ 00400003
           3    BASID     CHAR(2),   /*RECORD ID             @Y30LB22*/ 00450003
             4  BASBLANK  CHAR(1),   /*BLANK                 @Y30LB22*/ 00500003
             4  BASZERO   FIXED(8),  /*BINARY ZEROS          @Y30LB22*/ 00550003
         2      BASRES7   CHAR(1),   /*RESERVED              @Y30LB22*/ 00560003
         2      BASFLAGA  BIT(32),   /*FIELD INDICATOR FLGS  @Y30LB22*/ 00600003
           3    BASTYPE   BIT(16),   /*RECORD TYPE FLAGS     @Y30LB22*/ 00650003
             4  BASRES1   BIT(2),    /*RESERVED              @Y30LB22*/ 00700003
             4  BASBASVR  BIT(1),    /*BASE VOLUME RECORD    @Y30LB22*/ 00750003
             4  BASRES2   BIT(13),   /*RESERVED              @Y30LB22*/ 00800003
           3    BASDLSF   BIT(1),    /*DOWN LEVEL SPACE FLAG @Y30LB22*/ 00850003
           3    BASNOCPY  BIT(1),    /*IF ON-NO COPY         @Y30LB22*/ 00900003
           3    BASGRPV   BIT(1),    /*VOL BELONGS TO GROUP  @Y30LB22*/ 00950003
           3    BASGENUS  BIT(1),    /*GENERAL USE TYPE VOL  @Y30LB22*/ 01000003
           3    BASRSTD   BIT(1),    /*RESTRICTED TYPE VOL   @Y30LB22*/ 01050003
           3    BASINAC   BIT(1),    /*INACTIVE TYPE VOLUME  @Y30LB22*/ 01100003
           3    BASBIND   BIT(1),    /*ATTR FOR VOL IS BIND  @Y30LB22*/ 01150003
           3    BASEXCL   BIT(1),    /*ATTRIB IS EXCLUSIVE   @Y30LB22*/ 01200003
           3    BASDAERA  BIT(1),    /*ATTRIB IS DASDERASE   @Y30LB22*/ 01250003
           3    BASRONLY  BIT(1),    /*ATTRIB IS READ ONLY   @Y30LB22*/ 01300003
           3    BASREASS  BIT(1),    /*CARTRIDGES REASSIGNED @Y30LB22*/ 01310003
           3    BASFIRST  BIT(1),    /*FIRST VOL IN CHAIN    @Y30LB22*/ 01330003
           3    BASLAST   BIT(1),    /*LAST VOL IN CHAIN     @Y30LB22*/ 01340003
           3    *         BIT(3),    /*UNUSED                @Y30LB22*/ 01350003
         2      BASCPUID  BIT(16),   /*CPU ASSOCIATION MAP   @Y30LB22*/ 01400003
         2      BASRCVYF  BIT(32),   /*RECOVERY FIELDS       @Y30LB22*/ 01410003
           3    BASSATIA  BIT(16),   /*STATUS INDICATOR AREA @Y30LB22*/ 01450003
             4  BASIVCRE  BIT(1),    /*INCOMPLETE VOL CREATE @Y30LB22*/ 01500003
             4  BASIVCPY  BIT(1),    /*INCOMPLETE VOL. COPY  @Y30LB22*/ 01550003
             4  BASVSMIS  BIT(1),    /*VOL. SER. MISMATCH    @Y30LB22*/ 01600003
             4  BASRES8   BIT(13),   /*RESERVED              @Y30LB22*/ 01602003
           3    BASMISCF  BIT(16),   /*MISCL. FLAGS          @Y30LB22*/ 01604003
             4  BASHOLD   BIT(1),    /*PLACEHOLDER RECORD    @Y30LB22*/ 01610003
             4  BASRES3   BIT(15),   /*RESERVED              @Y30LB22*/ 01650003
         2      BASCSN1   CHAR(12),  /*SER # - 1ST CARTRIDGE @Y30LB22*/ 01700003
         2      BASLIB1   FIXED(8),  /*ID OF LIB FOR CSN1    @Y30LB22*/ 01750003
           3    BASRES4   BIT(6),    /*RESERVED              @Y30LB22*/ 01760003
           3    BASLID1   BIT(2),    /*LIBRARY ID 1          @Y30LB22*/ 01770003
             4  BAS1BIT1  BIT(1),    /*LIBRARY NO.           @Y30LB22*/ 01780003
             4  BAS1BIT2  BIT(1),    /*LIBRARY NO.           @Y30LB22*/ 01790003
         2      BASCSN2   CHAR(12),  /*SER # - 2ND CARTRIDGE @Y30LB22*/ 01800003
         2      BASLIB2   FIXED(8),  /*LIBRARY ID FOR CSN2   @Y30LB22*/ 01850003
           3    BASRES5   BIT(6),    /*RESERVED              @Y30LB22*/ 01852003
           3    BASLID2   BIT(2),    /*LIBRARY ID 2          @Y30LB22*/ 01860003
             4  BAS2BIT1  BIT(1),    /*LIBRARY NO.           @Y30LB22*/ 01870003
             4  BAS2BIT2  BIT(1),    /*LIBRARY NO.           @Y30LB22*/ 01872003
         2      BASPREV   CHAR(6),   /*VOL SER OF PREV VOL   @Y30LB22*/ 01900003
         2      BASNEXTV  CHAR(6),   /*VOL SER OF NEXT VOL   @Y30LB22*/ 01950003
         2      BASNCOPY  FIXED(8),  /*# COPIES OF THIS VOL  @Y30LB22*/ 02000003
         2      BASNBKUP  FIXED(8),  /*# BKUP COPYIES OF VOL @Y30LB22*/ 02050003
         2      BASBKLMT  FIXED(8),  /*MAX # - BACKUP COPIES @Y30LB22*/ 02100003
         2      *         CHAR(3),   /*UNUSED                @Y30LB22*/ 02110003
         2      BASFRESP  FIXED(16), /*NO. OF FREE CYLINDERS @Y30LB22*/ 02150003
         2      BASLEXT   FIXED(16), /*CYL LARGEST FREE EXT  @Y30LB22*/ 02200003
         2      BASFREXT  FIXED(32), /*FREE EXTENTS ON VOL   @Y30LB22*/ 02250003
         2      BASKLCPY  CHAR(13),  /*LAST COPY OF VOL KEY  @Y30LB22*/ 02300003
           3    BASCOPV   CHAR(5),   /* LETTER V & 4 BLANKS  @Y30LB22*/ 02310003
           3    BASCOPSN  CHAR(6),   /* SER NO OF COPIED VOL @Y30LB22*/ 02320003
           3    BASCOPID  CHAR(2),   /* RECORD NUMBER ID     @Y30LB22*/ 02330003
             4  BASCOPBK  CHAR(1),   /* BLANK                @Y30LB22*/ 02340003
             4  BASCOPNO  FIXED(8),  /* BIN NO OF COPIED REC @Y30LB22*/ 02342003
         2      BASRES6   CHAR(3),   /*RESERVED              @Y30LB22*/ 02350003
         2      BASDLMTD  CHAR(4),   /*DATE WHEN LAST MTD    @Y30LB22*/ 02360003
         2      BASEXPDT  CHAR(4),   /*EXP DATE FOR VOL      @Y30LB22*/ 02400003
         2      BASDTREM  CHAR(4),   /*DATE VOL WAS EJECTED  @Y30LB22*/ 02450003
         2      BASDESCR  CHAR(30),  /*DESCR INFO ABOUT VOL  @Y30LB22*/ 02500003
         2      BASOWNER  CHAR(10),  /*NAME/ID OF VOL OWNER  @Y30LB22*/ 02550003
         2      BASDEST   CHAR(30),  /*DEST AFTER EJECTION   @Y30LB22*/ 02600003
         2      BASRECOV  CHAR(6),   /*SER # FOR RECOVERY    @Y30LB22*/ 02650003
         2      BASGROUP  CHAR(8),   /*GROUP VOL BELONGS TO  @Y30LB22*/ 02700003
         2      BASXPDT2  CHAR(4),   /*OLD EXPIRATION DATE   @ZA11665*/ 02710003
         2      *         CHAR(32);  /*UNUSED                @ZA11665*/ 02750003
./  ADD  SSI=42070143,NAME=IEZBCDV
 /********************************************************************/ 00090003
 /*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00092003
 /*          MACSTAT  Y30LB22          74/192/341040         @Y30LB22*/ 00094003
 /*                                                                   */00096003
 /*          NAME: IEZBCDV                                   @Y30LB22*/ 00098003
 /*                                                                   */00098403
 /*          FUNCTION: MAPPING MACRO                         @Y30LB22*/ 00098803
 /*          THIS MACRO MAPS THE COMMON PARTS OF THE BASE,   @Y30LB22*/ 00148803
 /*          COPY, AND DUPLICATE VOLUME RECORDS.             @Y30LB22*/ 00158803
 /*                                                                   */00298803
 /*          STATUS:  CHANGE LEVEL = 0                       @Y30LB22*/ 00348803
 /*                                                                   */00398803
 /********************************************************************/ 00448803
     DCL                                                                01150003
       1        BCDV BASED(BCDVPTR) BDY(WORD),             /*@Y30LB22*/ 01200003
         2      BCDNAME   CHAR(13),  /* KEY OF VOLUME        @Y30LB22*/ 01250003
           3    BCDPREFX  CHAR(5),   /* A LETTER & 4 BLANKS  @Y30LB22*/ 01260003
             4  BCDALPHA  CHAR(1),   /* ALPHA CHARACTER      @Y30LB22*/ 01270003
             4  BCDBLNK1  CHAR(4),   /* BLANK                @Y30LB22*/ 01280003
           3    BCDSERNO  CHAR(6),   /* VOL SER NUMBER       @Y30LB22*/ 01290003
           3    BCDID     CHAR(2),   /* RECORD ID            @Y30LB22*/ 01292003
             4  BCDBLNK2  CHAR(1),   /* BLANK                @Y30LB22*/ 01294003
             4  BCDINDEX  FIXED(8),  /* RECORD INDEX NO.     @Y30LB22*/ 01296003
         2      BCDRES9   CHAR(1),   /* RESERVED             @Y30LB22*/ 01298003
         2      BCDFLAGA  BIT(32),   /* INDICATOR FLAGS      @Y30LB22*/ 01300003
           3    BCDTYPE   BIT(16),   /* RECORD TYPE FLAGS    @Y30LB22*/ 01350003
             4  BCDRES1   BIT(2),    /* RESERVED             @Y30LB22*/ 01400003
             4  BCDBASE   BIT(1),    /* BASE VOLUME RECORD   @Y30LB22*/ 01450003
             4  BCDCOPY   BIT(1),    /* COPY VOLUME RECORD   @Y30LB22*/ 01500003
             4  BCDRES2   BIT(1),    /* RESERVED             @Y30LB22*/ 01600003
             4  BCDDUP    BIT(1),    /* DUPLICATE VOL RECORD @Y30LB22*/ 01610003
             4  BCDRES3   BIT(10),   /* RESERVED             @Y30LB22*/ 01650003
           3    BCDFLAGB  BIT(16),   /* SCRATCH FLAGS        @Y30LB22*/ 01650403
             4  BCDRES4   BIT(10),   /* RESERVED             @Y30LB22*/ 01652003
             4  BCDREASS  BIT(1),    /* CARTRIDGE REASSIGNED @Y30LB22*/ 01662003
             4  BCDRES5   BIT(5),    /* RESERVED             @Y30LB22*/ 01682003
         2      BCDCPUID  BIT(16),   /* CPU ASSOC BIT MAP    @Y30LB22*/ 01700003
         2      BCDRCVYF  BIT(32),   /* RECOVERY FIELDS      @Y30LB22*/ 01710003
           3    BCDSATIA  BIT(16),   /* STATUS INDICATOR     @Y30LB22*/ 01750003
             4  BCDIVCRE  BIT(1),    /* INCOMPLETE VOL CREAT @Y30LB22*/ 01760003
             4  BCDIVCPY  BIT(1),    /* INCOMPLETE VOL COPY  @Y30LB22*/ 01770003
             4  BCDVSMIS  BIT(1),    /* VOL SER MISMATCH     @Y30LB22*/ 01780003
             4  BCDRES7   BIT(13),   /* RESERVED             @Y30LB22*/ 01782003
           3    BCDMISCF  BIT(16),   /* MISCL. FLAGS         @Y30LB22*/ 01784003
             4  BCDHOLD   BIT(1),    /* PLACEHOLDER RECORD   @Y30LB22*/ 01790003
             4  BCDRES7A  BIT(15),   /* RESERVED             @Y30LB22*/ 01792003
         2      BCDCSN1   CHAR(12),  /* SER NO OF 1ST CART.  @Y30LB22*/ 01800003
         2      BCDLIB1   FIXED(8),  /* ID OF LIB FOR CSN1   @Y30LB22*/ 01850003
           3    BCDRE10   BIT(6),    /* RESERVED             @Y30LB22*/ 01860003
           3    BCDLID1   BIT(2),    /* LIBRARY ID 1         @Y30LB22*/ 01870003
             4  BCD1BIT1  BIT(1),    /* LIBRARY NO.          @Y30LB22*/ 01880003
             4  BCD1BIT2  BIT(1),    /* LIBRARY NO.          @Y30LB22*/ 01890003
         2      BCDCSN2   CHAR(12),  /* SER NO OF 2ND CART.  @Y30LB22*/ 01900003
         2      BCDLIB2   FIXED(8),  /* ID OF LIB FOR CSN2   @Y30LB22*/ 01950003
           3    BCDRES8   BIT(6),    /* RESERVED             @Y30LB22*/ 01952003
           3    BCDLID2   BIT(2),    /* LIBRARY ID 2         @Y30LB22*/ 01960003
             4  BCD2BIT1  BIT(1),    /* LIBRARY NO.          @Y30LB22*/ 01970003
             4  BCD2BIT2  BIT(1);    /* LIBRARY NO.          @Y30LB22*/ 01980003
./  ADD  SSI=73530149,NAME=IEZBFTBL
 /*********************************************************  @G24LB26*/ 00050000
 /*                                                          @G24LB26*/ 00100000
 /*  NAME:  IEZBFTBL (VOLUME BEST FIT TABLE)                 @G24LB26*/ 00150000
 /*                                                          @G24LB26*/ 00200000
 /*  FUNCTION - MAPPING MACRO (ALLOCATE TO MOUNTED VOLUMES)  @G24LB26*/ 00250000
 /*             TABLE HOLDING ALL VOLUMES IN A SPECIFIC      @G24LB26*/ 00260000
 /*             GROUP ELIGIBLE TO BE SELECTED FOR A          @G24LB26*/ 00270000
 /*             PARTICULAR REQUEST.  CERTAIN FIELDS WILL BE  @G24LB26*/ 00280000
 /*             SORTED WHEN THE LIST IS COMPLETE IN ORDER    @G24LB26*/ 00300000
 /*             OF THEIR FITNESS FOR THE REQUEST. ALSO IS    @G24LB26*/ 00350000
 /*             PASSED TO THE TABLE PROCESSOR ROUTINE TO     @G24LB26*/ 00360000
 /*             OBTAIN ADDITIONAL INFORMATION ON THE         @G24LB26*/ 00370000
 /*             VOLUMES.                                     @G24LB26*/ 00380000
 /*                                                          @G24LB26*/ 00600000
 /*  STATUS:  MVS/VS1                                        @G24LB26*/ 00650000
 /*                                                          @G24LB26*/ 00700000
 /*  CHANGE ACTIVITY -                                       @ZA28479*/ 00710000
 /*         CHANGE 1 10/21/77 SPACE ACCOUNTING. ADD FIELD    @ZA28479*/ 00718000
 /*                           BFMTDOHT.                      @ZA28479*/ 00726000
 /*                                                          @ZA28479*/ 00734000
 /*********************************************************  @G24LB26*/ 00750000
 DCL 1 BFTBL BASED   BDY(WORD),                            /*@G24LB26*/ 00850000
       2 BFHEADER,                  /*HEADER SECTION         @G24LB26*/ 00900000
         3 BFLEN       FIXED(15),   /*LENGTH OF TABLE        @G24LB26*/ 00910000
         3 BFGROUP     CHAR(8),     /*GROUP NAME             @G24LB26*/ 00950000
         3 BFTOTIDX    FIXED(15),   /*# ELEMENTS IN ARRAY    @G24LB26*/ 01000000
         3 BFDEVTP     FIXED(31),   /*INTERNAL DEVICE TYPE   @G24LB26*/ 01050000
                                    /*OR UCB ADDRESS         @G24LB26*/ 01100000
         3 BFJOBID     FIXED(31),   /*TCB ADDRESS (VS1) OR   @G24LB26*/ 01110000
                                    /*ASID (VS2)             @G24LB26*/ 01120000
         3 BFREQFLS    BIT(8),      /*REQUEST FLAGS          @G24LB26*/ 01150000
           4 BFNSHRFL  BIT(1),      /*REQUEST IS NON-SHARE   @G24LB26*/ 01200000
           4 *         BIT(7),      /*UNUSED                 @G24LB26*/ 01250000
       2 BFENTRY(*),                /*START OF ARRAY         @G24LB26*/ 01300000
         3 BFSLOT,                  /*SLOT SECTION           @G24LB26*/ 01350000
           4 BFVOLID   CHAR(6),     /*SERIAL NUM OF VOL      @G24LB26*/ 01360000
           4 BFGRPIDX  FIXED(8),    /*EXTENSION INDEX NUM    @G24LB26*/ 01400000
           4 BFGRPSLT  FIXED(8),    /*EXTENSION SLOT NUM     @G24LB26*/ 01450000
           4 BFHPFLGS  BIT(8),      /*HIGH PRIORITY SORTING  @G24LB26*/ 01500000
                                    /*FLAGS                  @G24LB26*/ 01550000
             5 BFHRSKFL BIT(1),     /*VOL IS HIGH RISK       @G24LB26*/ 01600000
             5 BFWAITFL BIT(1),     /*WAIT OR ENQUEUED       @G24LB26*/ 01650000
                                    /*VOLUME                 @G24LB26*/ 01660000
             5 *        BIT(6),     /*THESE 6 BITS MUST      @G24LB26*/ 01700000
                                    /*REMAIN UNUSED          @G24LB26*/ 01710000
           4 BFOVERUS  FIXED(8),    /*CON USERS IF OVER MAX  @G24LB26*/ 01750000
           4 BFVOLEXP  CHAR(4),     /*VOL EXPIRATION DATE    @G24LB26*/ 01800000
           4 BFLPFLGS  BIT(8),      /*LOW PRIORITY SORTING   @G24LB26*/ 01850000
                                    /*FLAGS                  @G24LB26*/ 01900000
             5 BFSHCNFL BIT(1),     /*SHAREABILITY           @G24LB26*/ 01950000
                                    /*CONSIDERATION          @G24LB26*/ 02000000
             5 BFNMTDFL BIT(1),     /*VOL NOT MOUNTED OR     @G24LB26*/ 02050000
                                    /*SCHEDULED TO BE        @G24LB26*/ 02060000
                                    /*MOUNTED                @G24LB26*/ 02070000
             5 BFMTDOHF BIT(1),     /*VOL MOUNTED OTHER HOST @G24LB26*/ 02100000
                                    /*AND NOT SCHEDULED TO   @G24LB26*/ 02110000
                                    /*BE MOUNTED THIS HOST   @G24LB26*/ 02120000
             5 *        BIT(5),     /*UNUSED                 @G24LB26*/ 02150000
           4 BFCONUSE   FIXED(8),   /*NUM CONCURRENT USERS   @G24LB26*/ 02200000
           4 BFMISCFL   BIT(16),    /*MISCELLANEOUS FLAGS    @G24LB26*/ 02250000
             5 BFBADPRI BIT(1),     /*NOT FOR PRIMARY SEL    @G24LB26*/ 02300000
             5 BFBADSEC BIT(1),     /*NOT FOR SECONDARY SEL  @G24LB26*/ 02350000
             5 BFSELPRI BIT(1),     /*VOL SELECTED FOR       @G24LB26*/ 02400000
                                    /*PRIMARY                @G24LB26*/ 02450000
             5 BFSELSEC BIT(1),     /*VOL SELECTED FOR       @G24LB26*/ 02500000
                                    /*SECONDARY              @G24LB26*/ 02550000
             5 BFJESOK  BIT(1),     /*JES3 VERIFIED VOL,     @G24LB26*/ 02750000
                                    /*VS/2 ONLY              @G24LB26*/ 02800000
             5 BFVOLREJ BIT(1),     /*JES3 REJECTED VOL,     @G24LB26*/ 02850000
                                    /*OR TEST ENQ FAILED OR  @G24LB26*/ 02900000
                                    /*VOL WAIT AND DYN ALLOC @G24LB26*/ 02910000
             5 BFNOENQ  BIT(1),     /*VOL NOT ENQUEUED,      @G24LB26*/ 02950000
                                    /*VS/2 ONLY              @G24LB26*/ 03000000
             5 BFENQUED BIT(1),     /*VOL ENQUEUED,          @G24LB26*/ 03050000
                                    /*VS/2 ONLY              @G24LB26*/ 03100000
             5 BFNOTMTD BIT(1),     /*VOL NOT MOUNTED        @G24LB26*/ 03110000
             5 BFMTDOTH BIT(1),     /*VOL MOUNTED OTHER HOST @G24LB26*/ 03120000
             5 BFMTDOHT BIT(1),     /*VOL MTD OTHER HOST,    @ZA28479*/ 03130000
                                    /*MAY OR MAY NOT BE      @ZA28479*/ 03180000
                                    /*EXCLUSIVE OTHER HOST   @ZA28479*/ 03230000
             5 *        BIT(5);     /*UNUSED                 @ZA28479*/ 03280000
./  ADD  SSI=42980460,NAME=IEZCOPYV
 /********************************************************************/ 00092003
 /*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00094003
 /*          MACSTAT  Y30LB22          74/192/341040         @Y30LB22*/ 00096003
 /*                                                                   */00098003
 /*          NAME: IEZCOPYV                                  @Y30LB22*/ 00098403
 /*                                                                   */00098803
 /*          FUNCTION: MAPPING MACRO                         @Y30LB22*/ 00098903
 /*          A COPY VOL RECORD IS  CONTAINED IN THE MSVI     @Y30LB22*/ 00099203
 /*          DATA SET FOR EACH COPY VOLUME  CONTAINED        @Y30LB22*/ 00124803
 /*          IN THE MASS STORAGE FACILITY                    @Y30LB22*/ 00131103
 /*                                                          @Y30LB22*/ 00133103
 /*          STATUS:  CHANGE LEVEL = 0                       @Y30LB22*/ 00137403
 /*                                                                   */00143703
 /********************************************************************/ 00150003
     DCL                                                                00200003
       1        COPYV BASED(COPYVPTR) BDY(WORD),           /*@Y30LB22*/ 00250003
         2      COPNAME   CHAR(13),  /* KEY OF VOLUME        @Y30LB22*/ 00300003
           3    COPV      CHAR(5),   /* LETTER V & 4 BLANKS  @Y30LB22*/ 00350003
           3    COPSERNO  CHAR(6),   /* SER NO OF COPIED VOL @Y30LB22*/ 00400003
           3    COPID     CHAR(2),   /* RECORD NUMBER ID     @Y30LB22*/ 00450003
             4  COPBLANK  CHAR(1),   /* BLANK                @Y30LB22*/ 00500003
             4  COPNO     FIXED(8),  /* BIN NO OF COPIED REC @Y30LB22*/ 00550003
         2      COPRES6   CHAR(1),   /* RESERVED             @Y30LB22*/ 00560003
         2      COPFLAGA  BIT(32),   /* INDICATOR FLAGS      @Y30LB22*/ 00600003
           3    COPTYPE   BIT(16),   /* RECORD TYPE FLAGS    @Y30LB22*/ 00650003
             4  COPRES1   BIT(3),    /* RESERVED             @Y30LB22*/ 00700003
             4  COPCOPYV  BIT(1),    /* COPY VOL RECORD      @Y30LB22*/ 00750003
             4  COPRES2   BIT(12),   /* RESERVED             @Y30LB22*/ 00800003
           3    COPGROUP  BIT(1),    /* VOL BELONGS TO GROUP @Y30LB22*/ 00850003
           3    COPVSAM   BIT(1),    /* BELONGS TO VSAM CAT  @Y30LB22*/ 00900003
           3    COPGENUS  BIT(1),    /* GENERAL USE TYPE VOL @Y30LB22*/ 00950003
           3    COPRSTD   BIT(1),    /* RESTRICTED TYPE VOL  @Y30LB22*/ 01000003
           3    COPBKUP   BIT(1),    /* COPY IS A BKUP COPY  @Y30LB22*/ 01050003
           3    COPBIND   BIT(1),    /* ATTRIBUTE WAS BIND   @Y30LB22*/ 01100003
           3    COPEXCL   BIT(1),    /* ATTRIBUTE-EXCLUSIVE  @Y30LB22*/ 01150003
           3    COPDAERA  BIT(1),    /* ATTRIBUTE DASDERASE  @Y30LB22*/ 01200003
           3    COPRONLY  BIT(1),    /* ATTRIBUTE-READ ONLY  @Y30LB22*/ 01250003
           3    COPDLSPF  BIT(1),    /* DOWN LEVEL SPACE FLG @Y30LB22*/ 01300003
           3    *         BIT(6),    /* UNUSED               @Y30LB22*/ 01350003
         2      *         BIT(16),   /* UNUSED               @Y30LB22*/ 01400003
         2      COPRCVYF  BIT(32),   /* RECOVERY FIELDS      @Y30LB22*/ 01410003
           3    COPSATIA  BIT(16),   /* STATUS INDICATOR     @Y30LB22*/ 01450003
             4  COPIVCRE  BIT(1),    /* INCOMPLETE CREATE    @Y30LB22*/ 01500003
             4  COPIVCPY  BIT(1),    /* INCOMPLETE VOL. COPY @Y30LB22*/ 01550003
             4  COPVSMIS  BIT(1),    /* VOL SER. MISMATCH    @Y30LB22*/ 01600003
             4  COPRES3   BIT(13),   /* RESERVED             @Y30LB22*/ 01650003
           3    COPMISCF  BIT(16),   /* MISCL. FLAG          @Y30LB22*/ 01660003
             4  COPHOLD   BIT(1),    /* COPY PLACEHOLDER     @Y30LB22*/ 01670003
             4  *         BIT(15),   /* UNUSED               @Y30LB22*/ 01680003
         2      COPCSN1   CHAR(12),  /* SER NO OF 1ST CART.  @Y30LB22*/ 01700003
         2      COPLIB1   FIXED(8),  /* ID OF LIB FOR CSN1   @Y30LB22*/ 01750003
           3    COPRES4   BIT(6),    /* RESERVED             @Y30LB22*/ 01760003
           3    COPLID1   BIT(2),    /* LIBRARY ID 1         @Y30LB22*/ 01770003
             4  COP1BIT1  BIT(1),    /* LIBRARY NO.          @Y30LB22*/ 01780003
             4  COP1BIT2  BIT(1),    /* LIBRARY NO.          @Y30LB22*/ 01790003
         2      COPCSN2   CHAR(12),  /* SER NO OF 2ND CART.  @Y30LB22*/ 01800003
         2      COPLIB2   FIXED(8),  /* ID OF LIB FOR CSN2   @Y30LB22*/ 01850003
           3    COPRES5   BIT(6),    /* RESERVED             @Y30LB22*/ 01860003
           3    COPLID2   BIT(2),    /* LIBRARY ID 2         @Y30LB22*/ 01870003
             4  COP2BIT1  BIT(1),    /* LIBRARY NO.          @Y30LB22*/ 01880003
             4  COP2BIT2  BIT(1),    /* LIBRARY NO.          @Y30LB22*/ 01890003
         2      COPDATE   CHAR(4),   /* DATE COPY WAS MADE   @Y30LB22*/ 01900003
         2      COPDTREM  CHAR(4),   /* DATE VOL WAS EJECTED @Y30LB22*/ 01950003
         2      COPDESCR  CHAR(30),  /* DESCRIPTIVE INFO     @Y30LB22*/ 02000003
         2      COPDEST   CHAR(30),  /* DEST. AFTER EJECTED  @Y30LB22*/ 02050003
         2      COPOWNER  CHAR(10),  /* NAME/ID OF OWNER     @Y30LB22*/ 02100003
         2      COPFRESP  FIXED(15), /* NO OF FREE CYL ON    @Y30LB22   02200003
                                        VOL AT TIME OF COPY  @Y30LB22*/ 02250003
         2      COPLEXT   FIXED(15), /* NO. CYL IN LARGEST   @Y30LB22   02300003
                                        FREE EXTENT AT TIME  @Y30LB22   02310003
                                        OF COPY              @Y30LB22*/ 02320003
         2      COPFREXT  FIXED(31), /* NO. OF FREE EXTENTS  @Y30LB22   02400003
                                        AT TIME OF COPY      @Y30LB22*/ 02450003
         2      *         CHAR(28);  /* UNUSED               @Y30LB22*/ 02500003
./  ADD  SSI=43010444,NAME=IEZCOVCE
 /********************************************************************/ 00200003
 /*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00250003
 /*          MACSTAT  Y30LB22          74/170/341040         @Y30LB22*/ 00300003
 /*                                                                   */00350003
 /*          NAME: IEZCOVCE                                  @Y30LB22*/ 00400003
 /*                                                                   */00450003
 /*          FUNCTION:                                       @Y30LB22*/ 00500003
 /*          MAPS THE REQUEST BLOCK EXTENSION WHICH          @Y30LB22*/ 00502003
 /*          IS USED TO PASS ADDITIONAL INFORMATION TO MASS  @Y30LB22*/ 00504003
 /*          STORAGE VOLUME CONTROL DURING AN COPY           @Y30LB22*/ 00506003
 /*          CARTRIDGE OR COPY VOLUME REQUEST.               @Y30LB22*/ 00508003
 /*                                                                   */00550003
 /*          STATUS:  CHANGE LEVEL = 0                       @Y30LB22*/ 00600003
 /*                                                                   */00650003
 /********************************************************************/ 00700003
    /* CONSTANTS FOR IEZCOVCE                                @Y30LB22*/ 00710003
     DCL  COVLEN  FIXED(15) INIT(LENGTH(COVCE)); /* LENGTH   @Y30LB22   00720003
                                            OF EXTENSION     @Y30LB22*/ 00730003
     DCL                                                                00750003
       1        COVCE BASED(COVCEPTR) BDY(WORD),                        00950003
         2      COVLNGTH  FIXED(31), /* LENGTH OF EXTENSION  @Y30LB22*/ 00960003
         2      COVDESCR  CHAR(30),  /* DESCRIPTIVE INFO     @Y30LB22*/ 01000003
         2      COVFLAGA  BIT(8),    /* SPECIFICATION FLAG   @Y30LB22*/ 01050003
           3    COVSPDES  BIT(1),    /* COVDESCR SPECIFIED   @Y30LB22*/ 01100003
           3    *         BIT(7),    /* UNUSED               @Y30LB22*/ 01150003
         2      COVFLAGB  BIT(32),   /* INDICATOR FLAGS      @Y30LB22*/ 01200003
           3    COVSETFL  BIT(8),    /* RECOVERY FLAGS       @Y30LB22   01250003
                                        INDICATORS           @Y30LB22*/ 01260003
             4  COVSRCVY  BIT(1),    /* SET RECOVERY FLAGS   @Y30LB22*/ 01300003
             4  COVCRCVY  BIT(1),    /* CLEAR RECOVERY FLAGS @Y30LB22*/ 01400003
             4  *         BIT(6),    /* UNUSED               @Y30LB22*/ 01600003
           3    COVRECFL  BIT(8),    /* RECOVERY FLAGS       @Y30LB22*/ 01650003
             4  COVICOPY  BIT(1),    /* INCOMPLETE COPY OPER @Y30LB22*/ 01700003
             4  COVCREAT  BIT(1),    /* INCOMPLETE CREATION  @Y30LB22*/ 01750003
             4  COVLAMIS  BIT(1),    /* VOL LABEL MISMATCH   @Y30LB22*/ 01800003
             4  *         BIT(5),    /* UNUSED               @Y30LB22*/ 01850003
           3    COVTYPE   BIT(8),    /* VOLUME TYPE FLAG     @Y30LB22*/ 01900003
             4  COVSAM    BIT(1),    /* VSAM TYPE VOLUME     @Y30LB22*/ 01950003
             4  COVREUSE  BIT(1),    /* REUSE OLD COPY REC.  @Y30LB22*/ 01960003
             4  *         BIT(6),    /* UNUSED               @Y30LB22*/ 02100003
           3    *         BIT(8),    /* UNUSED               @Y30LB22*/ 02150003
         2      *         CHAR(4);   /* UNUSED               @Y30LB22*/ 02200003
./  ADD  SSI=63380276,NAME=IEZCPUID
 /********************************************************************/ 00090003
 /*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00092003
 /*          MACSTAT  Y30LB22          74/213/341040         @Y30LB22*/ 00094003
 /*                                                                   */00096003
 /*          NAME: IEZCPUID                                  @Y30LB22*/ 00098003
 /*                                                                   */00098403
 /*          FUNCTION: MAPPING MACRO                         @Y30LB22*/ 00098803
 /*          A CPU RECORD IS MAINTAINED  IN THE MSVI DATA    @Y30LB22*/ 00098903
 /*          SET TO RECORD CPU AFFINITY FOR THE MP AND JES3  @Y30LB22*/ 00099003
 /*          ENVIRONMENTS.                                   @Y30LB22*/ 00113803
 /*                                                                  */ 00121003
 /*          STATUS:  CHANGE LEVEL = 1                       @YM31134*/ 00128203
 /*                                                          @YM31134*/ 00135403
 /*   CHANGE-ACTIVITY = AS FOLLOWS                           @YM31134*/ 00137403
 /*      CHANGE 01 10/14/75 MSVI MULTI-HOST SHARABILITY      @YM31134*/ 00139403
 /*                                                          @YM31134*/ 00141403
 /********************************************************************/ 00142603
     DCL                                                                00149803
       1        CPUID BASED(CPUIDPTR) BDY(WORD),           /*@Y30LB22*/ 00250003
         2      CPUNAME   CHAR(13),  /* KEY-CPU RECORD       @Y30LB22*/ 00300003
         2      *         CHAR(1),   /* UNASSIGNED           @YM31134*/ 00350003
         2      CPUINEXT  FIXED(15), /* MSVI INDEX  EXTS     @YM31134*/ 00352003
         2      CPUDNEXT  FIXED(15), /* MSVI DATA   EXTS     @YM31134*/ 00360003
         2      CPUTYPE   BIT(16),   /* RECORD TYPE FLAG     @Y30LB22*/ 00400003
           3    CPURES1   BIT(6),    /* RESERVED             @Y30LB22*/ 00450003
           3    CPUASSOC  BIT(1),    /* CPU REAORD           @Y30LB22*/ 00500003
           3    CPURES2   BIT(9),    /* RESERVED             @Y30LB22*/ 00550003
         2      CPUMAP (16) CHAR(8), /* ARRAY WITH 16 SLOTS  @Y30LB22*/ 00600003
           3    CPUIDREC  CHAR(5),   /* ID OF CPU  RECORDED  @Y30LB22*/ 00650003
           3    *         CHAR(1),   /* UNASSIGNED           @Y30LB22*/ 00700003
           3    CPUMASK   BIT(16),   /* ASSOC MASK OF CPU    @Y30LB22*/ 00750003
         2      CPUPURGE  BIT(16),   /* CPU PURGE REQ'ED MAP @Y30LB22*/ 00800003
         2      *         CHAR(1);   /* UNASSIGNED           @Y30LB22*/ 00900003
./  ADD  SSI=53230374,NAME=IEZCWB
*%GOTO   CWBPLS2;     /* MAPPING MACRO                       @Y30LB01   00050003
         MACRO                                                          00100003
         IEZCWB                                                         00150003
************************************************************  @Y30LB01  00200003
*              ****** MAPPING MACRO *****                     @Y30LB01  00250003
* MACRO NAME = IEZCWB(VS1-VS2)                                @Y30LB01  00300003
*                                                             @Y30LB01  00350003
* DESCRIPTIVE NAME = COMMAND WORK BUFFER FOR MSSC SUPPORT     @Y30LB01  00400003
*                                                             @Y30LB01  00450003
* COPYRIGHT = NONE                                            @Y30LB01  00500003
*                                                             @Y30LB01  00550003
* CHANGE-ACTIVITY = X04AC01,Y30LB01,Z40LB01                   @Z40LB01  00600003
************************************************************  @Y30LB01  00650003
CWB      DSECT                                                @Y30LB01  00700003
CWBCHAIN DS    F   CHAIN AHEAD POINTER                        @Y30LB01  00750003
CWBFREE  DS    0F                      SUBPOOL - LENGTH       @Y30LB01  00800003
CWBSBPOL DS    C                       SUBPOOL                @Y30LB01  00850003
CWBFLGTH DS    AL3                     LENGTH                 @Y30LB01  00900003
CWBVBCDE DS    C                       COMMAND VERB CODE      @Y30LB01  00950003
CWBVBVRY EQU   40                      VARY                   @Y30LB01  01000003
CWBVBHLT EQU   60                      HALT                   @Y30LB01  01050003
CWBVBDSP EQU   104                     DISPLAY                @Z40LB01  01060003
CWBVBPRG EQU   164                     PURGE                  @Y30LB01  01100003
CWBVBASN EQU   140                     ASSIGN                 @Y30LB01  01150003
CWBCMND  DS    CL126                   OPERAND IMAGE          @Y30LB01  01200003
CWBCOMQ  DS    C                       SYNTAX INDICATOR       @Y30LB01  01250003
CWBUCMID DS    C                       CONSOLE ID             @Y30LB01  01300003
CWBAUTH  DS    CL2                     CMD AUTHORIZATION      @Y30LB01  01350003
CWBLCC   DS    C                       TARGET CONSOLE         @Z40LB01  01352003
CWBLA    DS    C                       TARGET DISPLAY AREA    @Z40LB01  01354003
CWBRESV  DS    CL3                     RESERVED               @Z40LB01  01360003
CWBLGTH  EQU   *-CWB                   LENGTH OF BLOCK        @Y30LB01  01400003
         MEND                                                @Y30LB01*/ 01450003
 %CWBPLS2:;                                                /*@Y30LB01*/ 01500003
 /********************************************************** @Y30LB01*/ 01550003
 /*             ****** MAPPING MACRO *****                   @Y30LB01*/ 01600003
 /* MACRO NAME = IEZCWB(VS1-VS2)                             @Y30LB01*/ 01650003
 /*                                                          @Y30LB01*/ 01700003
 /* DESCRIPTIVE NAME = COMMAND WORK BUFFER FOR MSSC SUPPORT  @Y30LB01*/ 01750003
 /*                                                          @Y30LB01*/ 01800003
 /* COPYRIGHT = NONE                                         @Y30LB01*/ 01850003
 /*                                                          @Y30LB01*/ 01900003
 /* CHANGE-ACTIVITY = X04AC01,Y30LB01,Z40LB01                @Z40LB01*/ 01950003
 /********************************************************** @Y30LB01*/ 02000003
     DCL 1 CWB BASED(CWBPTR) BDY(WORD),  /* BEGIN BLOCK      @Y30LB01*/ 02050003
           2 CWBCHAIN  FIXED(31),      /* CHAIN AHEAD PTR    @Y30LB01*/ 02100003
           2 CWBFREE   BDY(WORD) CHAR(4), /*SUBPOOL-LENGTH   @Y30LB01*/ 02150003
             3 CWBSBPOL CHAR(1),         /* SUBPOOL          @Y30LB01*/ 02200003
             3 CWBFLGTH FIXED(24),       /* LENGTH           @Y30LB01*/ 02250003
           2 CWBVBCDE  CHAR(1),          /* CMD VERB CODE    @Y30LB01*/ 02300003
           2 CWBCMND   CHAR(126),        /* OPERAND IMAGE    @Y30LB01*/ 02350003
           2 CWBCOMQ   FIXED(8),         /* SYNTAX IND       @Y30LB01*/ 02400003
           2 CWBUCMID  FIXED(8),         /* CONSOLE ID       @Y30LB01*/ 02450003
           2 CWBAUTH   CHAR(2),          /* CMD AUTH         @Y30LB01*/ 02500003
           2 CWBLCC    CHAR(1),          /* TARGET CONSOLE   @Z40LB01*/ 02502003
           2 CWBLA     CHAR(1),          /* TARGET AREA      @Z40LB01*/ 02504003
           2 CWBRESV   CHAR(3);          /* RESERVED         @Z40LB01*/ 02510003
 %CWBLGTH='LENGTH(CWB)';                 /* CWB LENGTH       @Y30LB01*/ 02550003
 %CWBVBVRY='40';                         /* VARY             @Y30LB01*/ 02600003
 %CWBVBHLT='60';                         /* HALT             @Y30LB01*/ 02650003
 %CWBVBDSP='104';                        /* DISPLAY          @Z40LB01*/ 02660003
 %CWBVBPRG='164';                        /* PURGE            @Y30LB01*/ 02700003
 %CWBVBASN='140';                        /* ASSIGN           @Y30LB01*/ 02750003
./  ADD  SSI=51070474,NAME=IEZDEFVE
 /********************************************************************/ 00090003
 /*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00092003
 /*          MACSTAT  Y30LB22          74/317/341040         @Y30LB22*/ 00094003
 /*                                                          @Y30LB22*/ 00096003
 /*          NAME: IEZDEFVE                                  @Y30LB22*/ 00098003
 /*                                                          @Y30LB22*/ 00098403
 /*          FUNCTION:                                       @Y30LB22*/ 00098803
 /*          MAPS THE REQUEST BLOCK EXTENSION                @Y30LB22*/ 00105503
 /*          WHICH IS USED TO PASS ADDITIONAL INFORMATION    @Y30LB22*/ 00107503
 /*          TO MSVC DURING AN DEFINE VOLUME MASS STORAGE REQUEST.   */ 00109503
 /*                                                          @Y30LB22*/ 00166403
 /*          STATUS: CHANGE LEVEL = 0                        @Y30LB22*/ 00199803
 /*                                                          @Y30LB22*/ 00233203
 /********************************************************************/ 00266603
    /* CONSTANTS FOR IEZDEFVE                                @Y30LB22*/ 00276603
     DCL  DEFLEN  FIXED(15) INIT(LENGTH(DEFVE)); /* LENGTH   @Y30LB22   00286603
                                           OF EXTENSION      @Y30LB22*/ 00296603
     DCL                                                                00316603
       1        DEFVE BASED(DEFVEPTR) BDY(WORD),           /*@Y30LB22*/ 00350003
         2      DEFLNGTH  FIXED(31), /* LENGTH OF EXTENSION  @Y30LB22*/ 00360003
         2      DEFGROUP  CHAR(8),   /* NAME OF USER MSVGP   @Y30LB22*/ 00400003
         2      DEFDESCR  CHAR(30),  /* DESCRIPTIVE INFO     @Y30LB22*/ 00450003
         2      DEFTO     CHAR(4),   /* EXPIRATION DATE      @Y30LB22*/ 00550003
         2      DEFFOR    FIXED(15), /* NO DAYS USED IN CAL- @Y30LB22   00600003
                                        CULATING EXP. DATE   @Y30LB22*/ 00650003
         2      DEFBKUPN  FIXED(8),  /* MAX. NO. BKUP COPIES @Y30LB22*/ 00660003
         2      DEFLABEL  CHAR(6),   /* SER. NO IN SOFTWARE  @Y30LB22   00700003
                                        LABEL                @Y30LB22*/ 00710003
         2      DEFFLAGA  BIT(8),    /* INDICATOR FLAGS      @Y30LB22*/ 00750003
           3    DEFPFOR   BIT(1),    /* DEFFOR IS SPECIFIED  @Y30LB22*/ 00800003
           3    DEFPVLAB  BIT(1),    /* DEFLABEL SPECIFIED   @Y30LB22*/ 00850003
           3    DEFPGRO   BIT(1),    /* DEFGROUP SPECIFIED   @Y30LB22*/ 00900003
           3    DEFPDESC  BIT(1),    /* DEFDESCR SPECIFIED   @Y30LB22*/ 00950003
           3    DEFPTO    BIT(1),    /* DEFTO IS SPECIFIED   @Y30LB22*/ 01000003
           3    DEFPBKUP  BIT(1),    /* DEFBKUPN SPECIFIED   @Y30LB22*/ 01050003
           3    *         BIT(2),    /* UNUSED               @Y30LB22*/ 01100003
         2      DEFFLAGB  CHAR(4),   /* STATUS FLAGS         @Y30LB22*/ 01150003
           3    DEFSETFL  BIT(8),    /* RECOVERY FLAGS       @Y30LB22   01200003
                                        INDICATORS           @Y30LB22*/ 01210003
             4  DEFSRCVY  BIT(1),    /* SET RECOVERY FLAGS   @Y30LB22*/ 01250003
             4  DEFCRCVY  BIT(1),    /* CLEAR RECOVERY FLAGS @Y30LB22*/ 01350003
             4  *         BIT(6),    /* UNUSED               @Y30LB22*/ 01550003
           3    DEFRECFL  BIT(8),    /* RECOVERY FLAGS       @Y30LB22*/ 01600003
             4  DEFICOPY  BIT(1),    /* INCOMPLETE COPY OPER @Y30LB22*/ 01650003
             4  DEFCREAT  BIT(1),    /* INCOMPLETE CREATION  @Y30LB22*/ 01700003
             4  DEFLAMIS  BIT(1),    /* VOL LABEL MISMATCH   @Y30LB22*/ 01750003
             4  *         BIT(5),    /* UNUSED               @Y30LB22*/ 01800003
           3    DEFTYPFL  BIT(8),    /* VOLUME TYPE FLAGS    @Y30LB22*/ 01850003
             4  DEFGENUS  BIT(1),    /* GENERAL USE TYPE VOL @Y30LB22*/ 01900003
             4  DEFRSTD   BIT(1),    /* RESTRICTED TYPE VOL  @Y30LB22*/ 01950003
             4  DEFDUP    BIT(1),    /* DUPLICATE TYPE VOL   @Y30LB22*/ 02000003
             4  DEFCOPY   BIT(1),    /* COPY TYPE VOLUME     @Y30LB22*/ 02002003
             4  *         BIT(4),    /* UNUSED               @Y30LB22*/ 02050003
           3    DEFNULFL  BIT(8),    /* NULLIFY FLAGS        @Y30LB22*/ 02100003
             4  DEFNGRP   BIT(1),    /* CHANGE TO NONGROUP   @Y30LB22*/ 02150003
             4  DEFNDESC  BIT(1),    /* NULLIFY THE DESCR    @Y30LB22*/ 02200003
             4  DEFNEXPD  BIT(1),    /* NULLIFY THE EXP DATE @Y30LB22*/ 02250003
             4  *         BIT(5),    /* UNUSED               @Y30LB22*/ 02350003
         2      *         CHAR(4);   /* UNUSED               @Y30LB22*/ 02400003
./  ADD  SSI=42070148,NAME=IEZDUPV
 /********************************************************************/ 00200003
 /*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00250003
 /*          MACSTAT  Y30LB22          74/192/341040         @Y30LB22*/ 00300003
 /*                                                                   */00350003
 /*          NAME: IEZDUPV                                   @Y30LB22*/ 00400003
 /*                                                                   */00450003
 /*          FUNCTION: MAPPING MACRO                         @Y30LB22*/ 00500003
 /*          A DUPLICATE VOLUME RECORD EXISTS FOR EACH       @Y30LB22*/ 00502003
 /*          VOLUME ENTERED INTO THE MASS STORAGE FACILITY   @Y30LB22*/ 00504003
 /*          AT THE CARTRIDGE ACCESS STATION, PROVIDED       @Y30LB22*/ 00506003
 /*          THE VOLUME SERIAL NUMBER OF THE VOLUME          @Y30LB22*/ 00508003
 /*          BEING ENTERED IS DUPLICATED BY AN EXISTING      @Y30LB22*/ 00508403
 /*          VOLUME ALREADY REPRESENTED IN THE MSVI DATA SET @Y30LB22*/ 00508803
 /*                                                                   */00550003
 /*          STATUS:  CHANGE LEVEL = 0                       @Y30LB22*/ 00600003
 /*                                                                   */00650003
 /********************************************************************/ 00700003
     DCL                                                                00750003
       1        DUPV BASED(DUPVPTR) BDY(WORD),             /*@Y30LB22*/ 01000003
         2      DUPNAME   CHAR(13),  /* KEY OF VOLUME        @Y30LB22*/ 01050003
           3    DUPD      CHAR(5),   /* 'D' AND 4 BLANKS     @Y30LB22*/ 01100003
           3    DUPSERNO  CHAR(6),   /* VOLUME SER. NO.      @Y30LB22*/ 01150003
           3    DUPID     CHAR(2),   /* RECORD ID FOR VOLUME @Y30LB22*/ 01200003
             4  DUPBLANK  CHAR(1),   /* BLANK                @Y30LB22*/ 01250003
             4  DUPNO     FIXED(8),  /* BIN NO OF DUPLICATE  @Y30LB22*/ 01300003
         2      DUPRES5   CHAR(1),   /* RESERVED             @Y30LB22*/ 01310003
         2      DUPFLAGA  BIT(32),   /* INDICATOR FLAGS      @Y30LB22*/ 01350003
           3    DUPTYPE   BIT(16),   /* RECORD TYPE FLAGS    @Y30LB22*/ 01400003
             4  DUPRES1   BIT(5),    /* RESERVED             @Y30LB22*/ 01450003
             4  DUPDUPLR  BIT(1),    /* DUPL. VOL SER NO REC @Y30LB22*/ 01500003
             4  DUPRES2   BIT(10),   /* RESERVED             @Y30LB22*/ 01550003
           3    *         BIT(16),   /* RESERVED             @Y30LB22*/ 01600003
         2      *         BIT(16),   /* UNASSIGNED           @Y30LB22*/ 01650003
         2      DUPRCVYF  BIT(32),   /* RECOVERY FIELDS      @Y30LB22*/ 01660003
           3    DUPSATIA  BIT(16),   /* STATUS INDICATOR     @Y30LB22*/ 01700003
           3    DUPMISCF  BIT(16),   /* MISCL. FLAGS         @Y30LB22*/ 01710003
         2      DUPCSN1   CHAR(12),  /* SER NO. OF 1ST CART. @Y30LB22*/ 01750003
         2      DUPLIB1   FIXED(8),  /* ID OF LIB FOR CSN1   @Y30LB22*/ 01800003
           3    DUPRES3   BIT(6),    /* RESERVED             @Y30LB22*/ 01810003
           3    DUPLID1   BIT(2),    /* LIBRARY ID 1         @Y30LB22*/ 01820003
             4  DUP1BIT1  BIT(1),    /* LIBRARY NO.          @Y30LB22*/ 01830003
             4  DUP1BIT2  BIT(1),    /* LIBRARY NO.          @Y30LB22*/ 01840003
         2      DUPCSN2   CHAR(12),  /* SER NO. OF 2ND CART. @Y30LB22*/ 01850003
         2      DUPLIB2   FIXED(8),  /* ID OF LIB FOR CSN2   @Y30LB22*/ 01900003
           3    DUPRES4   BIT(6),    /* RESERVED             @Y30LB22*/ 01910003
           3    DUPLID2   BIT(2),    /* LIBRARY ID 2         @Y30LB22*/ 01920003
             4  DUP2BIT1  BIT(1),    /* LIBRARY NO.          @Y30LB22*/ 01930003
             4  DUP2BIT2  BIT(1),    /* LIBRARY NO.          @Y30LB22*/ 01940003
         2      *         CHAR(15);  /* UNUSED               @Y30LB22*/ 01950003
./  ADD  SSI=53230375,NAME=IEZFMSWA
 /********************************************************************/ 00050003
 /*     MACCOMP  Z40LB02                                             */ 00100003
 /*     MACSTAT  Z40LB02                                             */ 00150003
 /*                                                                  */ 00200003
 /*     NAME     IEZFMSWA                                            */ 00250003
 /*                                                                  */ 00300003
 /*     FUNCTION-MAPS THE FORMAT SENSE WORK AREA(TRANSLATE AREAS FOR */ 00350003
 /*              X,Y,Z,MSF,CYLINDER AND SSID VALUES.                 */ 00400003
 /*                                                                  */ 00450003
 /*     STATUS CHANGE LEVEL=0                                        */ 00500003
 /********************************************************************/ 00550003
     /*FORMAT SENSE WORK AREA #1 CONTAINS SWITCHES USED IN   @Z40LB02*/ 00600003
     /*FORMAT LOAD MODULES, THE MESSAGE INDEX, AND THE       @Z40LB02*/ 00650003
     /*ALTERNATE CONSOLE VALUE AND TRANSLATE SAVE AREA.      @Z40LB02*/ 00700003
 DCL 1 FMTSNWA1 CHAR(160) BDY(WORD) BASED(FSWAPTR),                     00750003
       2 FMTSWTCH BIT(8),              /*1 BYTE FOR SWITCHES @Z40LB02*/ 00800003
         3 FSEXIT BIT(1),              /*EXIT SWITCH         @Z40LB02*/ 00850003
         3 MSGBLT BIT(1),              /*MESSAGE SWITCH      @Z40LB02*/ 00900003
       2 MSGNUM FIXED(8),              /*MESSAGE INDEX       @Z40LB02   00950003
                                         USED TO NOTE MSG    @Z40LB02   01000003
                                         TO BE BUILT         @Z40LB02*/ 01050003
       2 ALTCON BIT(16),               /*ALTCON VALUE        @Z40LB02*/ 01100003
       2 FMTWORK CHAR(11),             /*WORK AREA           @Z40LB02*/ 01150003
         3 YVAL CHAR(2),               /*DECIMAL Y VALUE     @Z40LB02*/ 01200003
         3 ZVAL CHAR(1),               /*DECIMAL Z VALUE     @Z40LB02*/ 01250003
         3 MSFVAL CHAR(1),             /*DECIMAL MSF VALUE   @Z40LB02*/ 01300003
         3 XVAL CHAR(3),               /*DECIMAL X VALUE     @Z40LB02*/ 01350003
         3 SSIDAREA CHAR(3),           /*PRNTLE SSID VALUE   @Z40LB02*/ 01400003
         3 *    CHAR(1),               /*1 BYTE  UNUSED      @Z40LB02*/ 01450003
     /*FORMAT SENSE WORK AREA #3 IS AN 87 BYTE REPRESENTA    @Z40LB02*/ 01500003
     /*TION OF THE WTO LIST FORM MACRO.  FIELDS SET IN THE   @Z40LB02*/ 01550003
     /*LIST FORM WILL APPLY HERE                             @Z40LB02*/ 01600003
       2 FMTSNWA3 CHAR(87) ,           /*WTO LIST FORM       @Z40LB02*/ 01650003
         3 FMTWT01 FIXED(15),          /*TEXT LENGTH         @Z40LB02*/ 01700003
         3 FMTWT02 BIT(16),            /*MCS FLAG            @Z40LB02*/ 01750003
         3 FMTWT03 CHAR(79),           /*MESSAGE TEXT        @Z40LB02*/ 01800003
         3 FMTWT04 BIT(16),            /*DESCRIPTOR CODES    @Z40LB02*/ 01850003
         3 FMTWT05 BIT(16),            /*ROUTING CODES       @Z40LB02*/ 01900003
       2 FSWSAVE CHAR(58),             /*SAVE & TRANSL AREA  @Z40LB02*/ 01950003
         3 SAVER1 PTR(31),             /*R1 SAVE AREA        @Z40LB02*/ 02000003
         3 SAVR12 PTR(31),             /*REG 12 SAVE AREA    @Z40LB02*/ 02050003
         3 VVIPTR PTR(31),             /*MSVC CNTL BLK PTR   @Z40LB02*/ 02100003
         3 SRBPTR PTR(31),             /*SRB POINTER         @Z40LB02*/ 02150003
     /*CONVERSION AREA FOR SENSE DATA                        @Z40LB02*/ 02200003
         3 FMTRANL CHAR(9) ,       /*9 CHAR TRANSL AREA      @Z40LB02*/ 02250003
           4 FMTTRSN CHAR(8),      /*8 CHARS OF TRANSLD SNS  @Z40LB02*/ 02300003
             5 FMTRAN CHAR(5),    /*SNS AREA & 1 BYTE FILL   @Z40LB02*/ 02350003
               6 FMTRES1 CHAR(4), /*4 BYTES OF SENSE         @Z40LB02*/ 02400003
               6 *       CHAR(1), /*1 BYTE FILL FOR UNPK     @Z40LB02*/ 02450003
             5 *   CHAR(3),       /*UNPACK AREA              @Z40LB02*/ 02500003
           4 *    CHAR(1),         /*UNPACK AREA             @Z40LB02*/ 02550003
     /*CYLINDER CONVERSION WORKAREA                          @Z40LB02*/ 02600003
         3 CYLINDER CHAR(5) ,      /*5 CHAR CYL TRANSL       @Z40LB02*/ 02650003
           4 CYLTRAN CHAR(4),      /*4 BYTE CYL VALUE        @Z40LB02*/ 02700003
             5 *    CHAR(1),       /*UNPACK AREA             @Z40LB02*/ 02750003
             5 CYLIND CHAR(3),     /*UNPACK AREA             @Z40LB02*/ 02800003
              6 CYLIND1 CHAR(2),   /*2 BYTE CYL VALUE        @Z40LB02*/ 02850003
              6 *       CHAR(1),                                        02900003
           4 CYLFILL CHAR(1) ,     /*SIGN BYTE FOR UNPK      @Z40LB02*/ 02950003
     /*GENERAL CONVERSION WORKAREA                           @Z40LB02*/ 03000003
         3 GENTRAN CHAR(5) ,       /*5 CHAR GEN TRANSL       @Z40LB02*/ 03050003
           4 TRVAL3CH CHAR(3),     /*3 CHAR TRANSLATE        @Z40LB02*/ 03100003
             5 CHAR2INP CHAR(2),      /*2 BYTE INPUT/VAL     @Z40LB02*/ 03150003
               6 CHAR2FIX FIXED(16),  /*FIXED REPRESENT      @Z40LB02*/ 03200003
                 7 CHAR1INP FIXED(8), /*1 BYTE INPUT AREA    @Z40LB02*/ 03250003
                 7 CHAR1VAL CHAR(1),  /*1 BYTE VALUE AREA    @Z40LB02*/ 03300003
                   8 FIXVAL FIXED(8), /*1 BYTE FIXED REP     @Z40LB02*/ 03350003
             5 *      CHAR(1),        /*UNPACK AREA          @Z40LB02*/ 03400003
           4 *       CHAR(1) ,        /*SIGN BYTE FOR UNPK   @Z40LB02*/ 03450003
           4 *       CHAR(1) ,        /*SIGN BYTE FOR UNPK   @Z40LB02*/ 03500003
         3 CONVERT CHAR(2),           /*2 CHA CONVERSION FLD @Z40LB02*/ 03550003
         3 I FIXED (8),               /*LOOP CONTROL         @Z40LB02*/ 03600003
         3 DATASTOR CHAR(20);        /*DATA AREA             @Z40LB02*/ 03650003
./  ADD  SSI=62790223,NAME=IEZGROUP
 /********************************************************************/ 00090003
 /*                                                                  */ 00090842
 /*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00091242
 /*          MACSTAT  Y30LB22          74/170/341040         @Y30LB22*/ 00091642
 /*                                                          @G24LB37*/ 00091742
 /*          NAME: IEZGROUP                                  @Y30LB22*/ 00091842
 /*                                                          @G24LB37*/ 00091942
 /*          FUNCTION: MAPPING MACRO                         @Y30LB22*/ 00095642
 /*          A GROUP RECORD IS CONTAINED IN THE MSVI         @Y30LB22*/ 00121742
 /*          DATA SET FOR EACH VOLUME GROUP AND FOR THE      @Y30LB22*/ 00125442
 /*          DEFAULT GROUP 'SYSGROUP'.                       @Y30LB22*/ 00129142
 /*                                                          @Y30LB22*/ 00131142
 /*          STATUS:  MVS                                    @G24LB37*/ 00131542
 /*                                                          @Y30LB22*/ 00131642
 /*          CHANGE LEVEL:                                   @G24LB37*/ 00131742
 /*          @G24LB37  ALLOCATE TO MOUNTED VOLUMES  06/07/76 @G24LB37*/ 00131842
 /*                                                                  */ 00132842
 /********************************************************************/ 00183203
  DCL                                                                   00233203
   1    GROUP BASED(GROUPPTR) BDY(WORD),                   /*@Y30LB22*/ 00250003
       2   GRONAME        CHAR(13),  /* MSVGP RECORD KEY     @Y30LB22*/ 00300003
        3  GROG           CHAR(3),   /* 'G' AND TWO BLANKS   @Y30LB22*/ 00350003
        3  GROVVGRP       CHAR(8),   /* ACTUAL GROUP NAME    @Y30LB22*/ 00400003
        3  GROID          CHAR(2),   /* RECORD ID            @Y30LB22*/ 00450003
         4 GROBLANK       CHAR(1),   /* THIS FIELD IS BLANK  @Y30LB22*/ 00500003
         4 GROZERO        FIXED(8),  /* FIELD OF BIN ZEROS   @Y30LB22*/ 00550003
       2   GROFLAGA       BIT(32),   /* INDICATOR FLAGS      @Y30LB22*/ 00600003
        3  GROTYPE        BIT(16),   /* RECORD TYPE FLAGS    @Y30LB22*/ 00650003
         4 GROGVR         BIT(1),    /* GROUP RECORD         @Y30LB22*/ 00700003
         4 GRORES1        BIT(15),   /* RESERVED             @Y30LB22*/ 00750003
        3  GROBIND        BIT(1),    /* ATTRIBUTE IS BIND    @Y30LB22*/ 00800003
        3  GROEXCL        BIT(1),    /* ATTRIBUTE-EXCLUSIVE  @Y30LB22*/ 00850003
        3  GRODAERA       BIT(1),    /* ATTRIBUTE-DASDERASE  @Y30LB22*/ 00900003
        3  GRORONLY       BIT(1),    /* ATTRIBUTE-READ ONLY  @Y30LB22*/ 00950003
        3  GRORLSE        BIT(1),    /* RLSE SPACE OPTION    @Y30LB22*/ 01000003
        3  GRORETN        BIT(1),    /* RET DATE SPECIFIED   @Y30LB22*/ 01050003
        3  GROMSG1        BIT(1),    /* MSG. SENT TO OP/LIB  @Y30LB22   01100003
                                        FLAG CONCERNING GRP. @Y30LB22   01102003
                                        SPACE THRESHOLD      @Y30LB22*/ 01104003
        3  *              BIT(9),    /* UNUSED               @Y30LB22*/ 01150003
       2   GROFSN         CHAR(6),   /* SER NO. OF 1ST VOL   @Y30LB22*/ 01200003
       2   GROLSN         CHAR(6),   /* SER NO. OF LAST VOL  @Y30LB22*/ 01250003
       2   GROPCENT       FIXED(8),  /* THRESHOLD PERCENT    @Y30LB22*/ 01300003
       2   GRONGEN        FIXED(15), /*NO. OF GEN USE VOL    @Y30LB22*/ 01350003
       2   GRONRSTD       FIXED(15), /*NO. OF RSTD VOLS.     @Y30LB22*/ 01400003
       2   GRONINAC       FIXED(15), /*NO. OF INACTIVE VOLS  @Y30LB22*/ 01450003
       2   GROPSPD        FIXED(15), /*PRIMARY SPACE DEFAULT @Y30LB22*/ 01500003
       2   GROSSPD        FIXED(15), /*SECONDARY SPACE       @Y30LB22   01550003
                                       DEFAULT               @Y30LB22*/ 01560003
       2   GROSTRSH       FIXED(31), /*GROUP SPACE THRESHOLD @Y30LB22*/ 01600003
       2   GROFRESP       FIXED(31), /*GROUP FREE SPACE      @Y30LB22*/ 01650003
       2   GROFREXT       FIXED(31), /*GROUP FREE EXTENTS    @Y30LB22*/ 01700003
       2   GRORETPD       FIXED(31), /*GRP RETENTION PERIOD  @Y30LB22*/ 01750003
       2   GROERRTS       CHAR(8),   /*GRP ERROR TIME STAMP  @Y30LB22*/ 01800003
         3 GROERRDT       CHAR(4),   /*TIME STAMP DATE       @Y30LB22*/ 01850003
         3 GROERRTM       CHAR(4),   /*TIME STAMP TIME       @Y30LB22*/ 01900003
       2   GRODESCR       CHAR(30),  /*GRP DESCRIPTIVE INFO  @Y30LB22*/ 01950003
       2   GROCONUS       FIXED(8),  /*MAXIMUM NUMBER        @G24LB37   01952042
                                       OF CONCURRENT USERS   @G24LB37   01954042
                                       PER HOST TO A VOLUME  @G24LB37   01956042
                                       FOR THIS GROUP        @G24LB37*/ 01958042
       2   GRORESSP       FIXED(8),  /*PERCENT OF RESERVED   @G24LB37   01958442
                                       SPACE PER VOLUME      @G24LB37   01958842
                                       FOR THIS GROUP        @G24LB37*/ 01959242
       2   GROOWNER       CHAR(10),  /*NAME/ID OF GRP OWNER  @Y30LB22*/ 02000003
       2   GROADDR        CHAR(30),  /*ADDR OF GROUP OWNER   @Y30LB22*/ 02050003
       2   *              CHAR(28);  /*UNUSED                @Y30LB22*/ 02100003
./  ADD  SSI=62790225,NAME=IEZGRPPR
 /*********************************************************  @G24LB18*/ 00050000
 /*                                                          @G24LB18*/ 00100000
 /* NAME - IEZGRPPR (MSVC GROUP PARAMETERS MAPPING MACRO)    @G24LB18*/ 00150000
 /*                                                          @G24LB18*/ 00200000
 /* STATUS - MVS                                             @G24LB18*/ 00250000
 /*                                                          @G24LB18*/ 00300000
 /* FUNCTION - MAPPING MACRO FOR THE MSVC GROUP PARAMETERS   @G24LB18*/ 00350000
 /*            AREA. THIS AREA IS INCLUDED IN THE RPLV FOR   @G24LB18*/ 00400000
 /*            SELECT REQUESTS WHICH ARE PROCESSED BY THE    @G24LB18*/ 00450000
 /*            MSVC SELECTOR (ICBVSL00). THE AREA SERVES AS  @G24LB18*/ 00500000
 /*            A MEANS OF COMMUNICATING THE GROUP PARAMETERS @G24LB18*/ 00550000
 /*            ASSOCIATED WITH THE REQUEST BETWEEN THE MSVC  @G24LB18*/ 00600000
 /*            SELECTOR, WHICH STORES THE PARAMETERS INTO    @G24LB18*/ 00650000
 /*            THE AREA, AND THE MSVC TABLE PROCESSOR        @G24LB18*/ 00700000
 /*            (ICBVTP00), WHICH INCLUDES THE PARAMETERS     @G24LB18*/ 00750000
 /*            IN THE DD ENTRY FOR THE REQUEST.              @G24LB18*/ 00800000
 /*                                                          @G24LB18*/ 00850000
 /*********************************************************  @G24LB18*/ 00900000
 DCL                                                                    00950000
    1  GRPPR  BDY(WORD) BASED(SELGRPPR), /* MSVC GROUP PARM  @G24LB18*/ 01000000
       2  GRPNAME  CHAR(8),         /* GROUP NAME            @G24LB18*/ 01050000
       2  GRPEXTIN FIXED(8),        /* GROUP EXTENSION INDEX @G24LB18*/ 01100000
       2  GRPSLOTN FIXED(8),        /* GROUP EXT SLOT NO.    @G24LB18*/ 01150000
       2  GRPPRMSP FIXED(15);       /* PRIMARY SPACE IN CYL  @G24LB18*/ 01200000
./  ADD  SSI=62790227,NAME=IEZGVSNE
 /********************************************************************/ 00090003
 /*                                                                  */ 00090842
 /*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00091242
 /*          MACSTAT  Y30LB22          74/170/341040         @Y30LB22*/ 00091642
 /*                                                          @Y30LB22*/ 00091742
 /*          NAME: IEZGVSNE                                  @Y30LB22*/ 00091842
 /*                                                          @Y30LB22*/ 00091942
 /*          FUNCTION: MAPPING MACRO                         @Y30LB22*/ 00098803
 /*          THE GROUP EXTENSION RECORD PROVIDES MOUNT AND   @Y30LB22*/ 00098903
 /*          SPACE INFORMATION FOR THE 'GENERAL' USE         @Y30LB22*/ 00112003
 /*          VOLUMES IN THE GROUP                            @Y30LB22*/ 00118303
 /*                                                          @Y30LB22*/ 00120342
 /*          STATUS: MVS                                     @G24LB37*/ 00122342
 /*                                                          @Y30LB22*/ 00122742
 /*          CHANGE LEVEL:                                   @G24LB37*/ 00123142
 /*          @G24LB37  ALLOCATE TO MOUNTED VOLUMES  06/07/76 @G24LB37*/ 00123542
 /*                                                                  */ 00124342
 /********************************************************************/ 00143503
 DCL    GVSNSLOT FIXED(31) CONSTANT(48); /* NO. OF SLOTS     @Y30LB22*/ 00149803
 /********************************************************************/ 00199803
 DCL    1          GVSNE BASED(GVSNEPTR) BDY(WORD),        /*@Y30LB22*/ 00300003
          2        GVSHDR,              /* HEADER FIELD      @Y30LB22*/ 00310003
            3      GVSNAME   CHAR(13),  /* KEY FOR GVSNE     @Y30LB22   00350003
                                           RECORD            @Y30LB22*/ 00400003
              4    GVSG      CHAR(3),   /* G AND 2 BLANKS    @Y30LB22*/ 00450003
              4    GVSVVGRP  CHAR(8),   /* MSVGP NAME        @Y30LB22*/ 00500003
              4    GVSID     CHAR(2),   /* EXTENSION RCD ID  @Y30LB22*/ 00550003
                5  GVSRES1   CHAR(1),   /* RESERVED          @G24LB37*/ 00600042
                5  GVSNO     FIXED(8),  /* BINARY NO FOR THE @Y30LB22   00650003
                                           EXTENSION RECORD  @Y30LB22*/ 00700003
            3      GVSFLAGA  BIT(32),   /* INDICATOR FLAGS   @Y30LB22*/ 00750003
              4    GVSTYPE   BIT(16),   /* RECORD TYPE       @Y30LB22*/ 00800003
                5  *         BIT(1),    /* UNUSED            @G24LB37*/ 00850042
                5  GVSGVSEX  BIT(1),    /* VOL SER EXTENSION @Y30LB22*/ 00900003
                5  *         BIT(14),   /* UNUSED            @G24LB37*/ 00950042
              4    GVSEX     BIT(1),    /* ANOTHER EXTENSION @Y30LB22   01000003
                                           RECORD EXISTS     @Y30LB22*/ 01010003
              4    *         BIT(15),   /* UNUSED            @Y30LB22*/ 01100003
            3      *         CHAR(1),   /* UNUSED            @Y30LB22*/ 01150003
            3      GVSESIND  FIXED(15), /* NEXT EMPTY SLOT   @Y30LB22   01200003
                                           INDEX             @Y30LB22*/ 01210003
            3      *         CHAR(8),   /* UNUSED            @Y30LB22*/ 01220003
          2        GVSSLOTS (GVSNSLOT) BDY(HWORD),         /*@Y30LB22   01250003
                                           SLOT ARRAY        @Y30LB22*/ 01260003
            3      GVSVOLID  CHAR(6),   /* SER NO OF VOL IN  @Y30LB22   01300003
                                           THIS SLOT         @Y30LB22*/ 01360003
            3      GVSVOLFL  BIT(32),   /* INDICATOR FLAGS   @Y30LB22*/ 01400003
              4    GVSCPUBM  BIT(16),   /* CPU ASSOC BIT MAP @Y30LB22*/ 01450003
              4    GVSRCFSI  BIT(1),    /* RUNNING COUNT     @G24LB37   01500042
                                           (GVSMTDSP) IS     @G24LB37   01510042
                                           INVALID           @G24LB37*/ 01520042
              4    GVSMTNSH  BIT(1),    /* MOUNTED TO HOST   @G24LB37   01530042
                                           NON-SHARED        @G24LB37*/ 01540042
              4    *         BIT(14),   /* UNUSED            @G24LB37*/ 01542042
            3      GVSFRESP  FIXED(15), /* NO OF FREE CYL    @Y30LB22*/ 01600003
            3      GVSLEXT  FIXED(15),  /* NO OF CYL IN THE  @Y30LB22   01650003
                                           LARGEST FREE EXT  @Y30LB22*/ 01700003
            3      GVSEXPDT  CHAR(4),   /* EXPIRATION DATE   @Y30LB22*/ 01750003
            3      GVSMTDSP  FIXED(15); /* RUNNING COUNT OF  @G24LB37   01760042
                                           AVAILABLE SPACE   @G24LB37   01770042
                                           REMAINING ON VOL  @G24LB37   01780042
                                           IN CYLINDERS      @G24LB37*/ 01790042
./  ADD  SSI=43010450,NAME=IEZINDEX
 /********************************************************************/ 00090003
 /*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00092003
 /*          MACSTAT  Y30LB22          74/170/341040         @Y30LB22*/ 00094003
 /*                                                                   */00096003
 /*          NAME: IEZINDEX                                  @Y30LB22*/ 00098003
 /*                                                                   */00098403
 /*          FUNCTION: MAPPING MACRO                         @Y30LB22*/ 00098803
 /*          CARTRIDGE RECORDS PROVIDE A PATH TO             @Y30LB22*/ 00098903
 /*          VOLUME RECORDS WHEN ONLY A CARTRIDGE(S) IS      @Y30LB22*/ 00099003
 /*          KNOWN.                                          @Y30LB22*/ 00099103
 /*                                                                   */00099203
 /*          STATUS:  CHANGE LEVEL = 0                       @Y30LB22*/ 00099603
 /*                                                                   */00099703
 /********************************************************************/ 00099803
     DCL                                                                00149803
       1        INDEX BASED(INDEXPTR) BDY(WORD),           /*@Y30LB22*/ 00250003
         2      INDNAME   CHAR(13),  /* KEY OF CARTRIDGE     @Y30LB22*/ 00300003
           3    INDI      CHAR(1),   /* LETTER I             @Y30LB22*/ 00350003
           3    INDSERNO  CHAR(12),  /* SER NO. OF CARTRIDGE @Y30LB22*/ 00400003
         2      INDTYPE   BIT(16),   /* RECORD TYPE FLAG     @Y30LB22*/ 00450003
           3    INDRES1   BIT(4),    /* RESERVED             @Y30LB22*/ 00500003
           3    INDINDEX  BIT(1),    /* CARTRIDGE RECORD     @Y30LB22*/ 00550003
           3    INDRES2   BIT(11),   /* RESERVED             @Y30LB22*/ 00600003
         2      INDRECKY  CHAR(13),  /* RECORD KEY OF VOLUME @Y30LB22   00650003
                                        TO WHICH THIS CART.  @Y30LB22   00700003
                                        BELONGS              @Y30LB22*/ 00750003
           3    INDPREFX  CHAR(5),   /* A LETTER & 4 BLANKS  @Y30LB22*/ 00800003
             4  INDALPHA  CHAR(1),   /* ALPHA CHARACTER      @Y30LB22*/ 00850003
             4  INDBLNK1  CHAR(4),   /* BLANKS               @Y30LB22*/ 00900003
           3    INDVSRNO  CHAR(6),   /* VOL SER NUMBER       @Y30LB22*/ 00950003
           3    INDRECID  CHAR(2),   /* RECORD ID            @Y30LB22*/ 01000003
             4  INDBLNK2  CHAR(1),   /* BLANK                @Y30LB22*/ 01050003
             4  INDEXREC  BIT(8),    /* RECORD INDEX NO.     @Y30LB22*/ 01100003
         2      *         CHAR(8);   /* UNUSED               @Y30LB22*/ 01150003
./  ADD  SSI=62790228,NAME=IEZINIT
 /********************************************************************/ 00200003
 /*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00250003
 /*          MACSTAT  Y30LB22          74/178/341040         @Y30LB22*/ 00300003
 /*                                                                   */00350003
 /*          NAME: IEZINIT                                   @Y30LB22*/ 00400003
 /*                                                                   */00450003
 /*          FUNCTION:                                       @Y30LB22*/ 00550003
 /*                  A MAPPING MACRO THAT ENABLES THE USER   @Y30LB22*/ 00560003
 /*                  TO ISSUE SVC 126 TO INITIALIZE, ENABLE  @Y30LB22*/ 00570003
 /*                  AND DISABLE MSVC.                       @Y30LB22*/ 00590003
 /*                                                                   */00750003
 /*          STATUS:  CHANGE LEVEL = 1                       @Z37LB26*/ 00800042
 /*                                                                   */00950003
    /* CONSTANTS                                             @Y30LB22*/ 01000003
     DCL  INICODE  BIT(8) CONSTANT('88'X); /* OP CODE        @Y30LB22*/ 01600003
     DCL  INILEN  FIXED(15) INIT(LENGTH(INITVVI)); /* LENGTH @Y30LB22   01650003
                                           OF REQUEST BLOCK  @Y30LB22*/ 01660003
     /* MAPPING MACRO                                        @Y30LB22*/ 01700003
 DCL  1         INITVVI   BASED(INITPTR) BDY(WORD),        /*@Y30LB22*/ 01800003
         2      INILNGTH  FIXED(31), /* LEN OF PARM LIST     @Y30LB22*/ 01850003
         2      INITOPCD  CHAR(1),   /* OP CODE ID           @Y30LB22*/ 01900003
         2      INIFLAGA  CHAR(1),   /* OPERATION FLAGS      @Y30LB22*/ 02200003
           3    ININIT    BIT(1),    /* INIT OPERATION       @Y30LB22*/ 02210003
           3    INIENABL  BIT(1),    /* ENABLE OPERATION     @Y30LB22*/ 02220003
           3    INIDISAB  BIT(1),    /* DISABLE OPERATION    @Y30LB22*/ 02230003
           3    *         BIT(5),    /* UNUSED               @Y30LB22*/ 02240003
         2      INIFLAGB  CHAR(1),   /* VERIFICATION FLAGS   @Y30LB22*/ 02550003
           3    INIVERFY  BIT(1),    /* BIT 0=0, NO VERIFI-  @Y30LB22   02560003
                                        CATION REQUIRED      @Y30LB22   02570003
                                        BIT 0=1, OPERATOR    @Y30LB22   02580003
                                        VERIFICATION OF PARM @Y30LB22   02590003
                                        LIB KEYWORD OR       @Y30LB22   02592003
                                        REQUIRED DEFAULT     @Y30LB22*/ 02594003
           3    INIJRNL   BIT(1),    /* BIT 1=1, JRNL IS     @Y30LB22   02596003
                                        TO BE ENABLED        @Y30LB22*/ 02598003
           3    INIABLE   BIT(1),    /* BIT 2=1, MSVC IS     @Y30LB22   02600003
                                        TO BE ENABLED        @Y30LB22*/ 02650003
           3    INIRESTR  BIT(1),    /* BIT 3=1, MSVI WAS    @Z37LB26   02700042
                                        RESTORED             @Z37LB26*/ 02750042
           3    *         BIT(4),    /* UNUSED               @Z37LB26*/ 02800042
         2      INIVCODE  CHAR(1),   /* VERIFICATION CODE    @Y30LB22*/ 02850003
         2      INIUCAT   CHAR(8),   /* USER CATALOG NAME    @Y30LB22*/ 03150003
         2      *         CHAR(4);   /* UNUSED               @Y30LB22*/ 03200003
./  ADD  SSI=43010452,NAME=IEZMCRTE
 /********************************************************************/ 00090003
 /*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00092003
 /*          MACSTAT  Y30LB22          74/170/341040         @Y30LB22*/ 00094003
 /*                                                                   */00096003
 /*          NAME: IEZMCRTE                                  @Y30LB22*/ 00098003
 /*                                                                   */00098403
 /*          FUNCTION:                                       @Y30LB22*/ 00098803
 /*                  MAPS THE REQUEST BLOCK                  @Y30LB22*/ 00102903
 /*                  EXTENSION WHICH IS USED TO PASS         @Y30LB22*/ 00104903
 /*                  ADDITIONAL INFORMATION TO MASS          @Y30LB22*/ 00106903
 /*                  STORAGE VOLUME  CONTROL DURING          @Y30LB22*/ 00107803
 /*                  AN MOVE CARTRIDGE REQUEST.              @Y30LB22*/ 00108203
 /*                                                                   */00119003
 /*          STATUS:  CHANGE LEVEL = 0                       #Y30LB22*/ 00123003
 /*                                                          @Y30LB22*/ 00127003
 /********************************************************************/ 00131003
    /* CONSTANTS FOR IEZMCRTE                                @Y30LB22*/ 00133003
     DCL  MCRLEN  FIXED(15) INIT(LENGTH(MCRTE)); /* LENGTH   @Y30LB22   00133403
                                            OF EXTENSION     @Y30LB22*/ 00133803
    /* MAPPING MACRO DECLARES                                @Y30LB22*/ 00135003
     DCL                                                                00175003
       1        MCRTE BASED(MCRTEPTR) BDY(WORD),                        00250003
         2      MCRLNGTH  FIXED(31), /* LENGTH OF EXTENSION  @Y30LB22*/ 00260003
         2      MCRLOC    CHAR(30),  /* LOCATION/DESTINATION OF         00300003
                                        VOL AFTER EJECTION   @Y30LB22*/ 00350003
         2      MCRFLAGA  BIT(8),    /* SPECIFICATION FLAGS  @Y30LB22*/ 00400003
           3    MCRSPLOC  BIT(1),    /* MCRLOC IS SPECIFIED  @Y30LB22*/ 00450003
           3    *         BIT(7),    /* UNUSED               @Y30LB22*/ 00500003
         2      MCRBLNK1  CHAR(1),   /* BLANK                @Y30LB22*/ 00510003
         2      MCRFLAGB  BIT(32),   /* INDICATOR FLAGS      @Y30LB22*/ 00550003
           3    *         BIT(8),    /* UNUSED               @Y30LB22*/ 00600003
           3    *         BIT(8),    /* UNUSED               @Y30LB22*/ 00650003
           3    MCRTYPE   BIT(8),    /* MOVE CART. TYPE FLAG @Y30LB22*/ 00700003
             4  MCRREC    BIT(1),    /* BIT 0=1, REC RETAIN  @Y30LB22   00750003
                                        BIT 0=0, REC DELETE  @Y30LB22*/ 00800003
             4  *         BIT(7),    /* UNUSED               @Y30LB22*/ 00850003
           3    *         BIT(8),    /* UNUSED               @Y30LB22*/ 00900003
         2      *         CHAR(4);   /* UNUSED               @Y30LB22*/ 00950003
./  ADD  SSI=43010453,NAME=IEZMESG
 /********************************************************************/ 00506003
 /*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00508003
 /*          MACSTAT  Y30LB22          74/170/341040         @Y30LB22*/ 00508403
 /*                                                          @Y30LB22*/ 00508803
 /*          NAME: IEZMESG                                   @Y30LB22*/ 00509203
 /*                                                          @Y30LB22*/ 00509603
 /*          FUNCTION:                                       @Y30LB22*/ 00509703
 /*          MAPS THE REQUEST BLOCK FOR A REQUEST            @Y30LB22*/ 00511703
 /*          TO UPDATE INVENTORY RECORDS BASED ON A          @Y30LB22*/ 00513703
 /*          PARTICULAR SOLICITED OR UNSOLICITED MESSAGE.    @Y30LB22*/ 00515703
 /*          REGISTER 1 MUST POINT TO THE REQUEST BLOCK      @Y30LB22*/ 00516103
 /*          WHEN THE REQUEST IS EXECUTED                    @Y30LB22*/ 00516503
 /*          (MACRO ICBMESG - SVC 126).                      @Y30LB22*/ 00519803
 /*                                                          @Y30LB22*/ 00523303
 /*          STATUS:  CHANGE LEVEL = 0                       @Y30LB22*/ 00526603
 /*                                                          @Y30LB22*/ 00529903
 /********************************************************************/ 00539903
    /* CONSTANTS FOR IEZMESG                                 @Y30LB22*/ 00579903
     DCL           MESLEN  FIXED(15) INIT(LENGTH(MESG));   /*@Y30LB22   03850003
                                   LENGTH OF REQUEST BLOCK   @Y30LB22*/ 03860003
     DCL           MESOP   BIT(8) CONSTANT('86'X);         /*@Y30LB22*/ 03900003
                                      /* OP CODE             @Y30LB22*/ 03910003
    /* MAPPING MACRO DECLARES                                @Y30LB22*/ 03960003
     DCL                                                                04060003
       1        MESG  BASED(MESGPTR) BDY(WORD),            /*@Y30LB22*/ 08170003
         2      MESLNGTH  FIXED(31), /* LENGTH OF REQ BLK    @Y30LB22*/ 08180003
         2      MESCODE   CHAR(4),   /* OPERATION IDENTIFIER @Y30LB22*/ 08190003
           3    MESOPCD   BIT (8),   /* OP CODE              @Y30LB22*/ 08192003
           3    *         CHAR(3),   /* UNUSED               @Y30LB22*/ 08194003
         2      MESGBUF   CHAR(60);  /* MSC MESSAGE          @Y30LB22*/ 08196003
./  ADD  SSI=62790230,NAME=IEZMGP
 /********************************************************************/ 00200003
 /*                                                                  */ 00220042
 /*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00230042
 /*          MACSTAT  Y30LB22          74/172/341040         @Y30LB22*/ 00240042
 /*                                                          @G24LB37*/ 00242042
 /*          NAME: IEZMGP                                    @G24LB37*/ 00246042
 /*                                                          @G24LB37*/ 00248042
 /*          FUNCTION:                                       @Y30LB22*/ 00500003
 /*          MAPS THE REQUEST BLOCK FOR A CREATE OR MODIFY   @Y30LB22*/ 00504003
 /*          GROUP RECORD REQUEST.  REGISTER 1 MUST          @Y30LB22*/ 00506003
 /*          POINT TO THE REQUEST BLOCK WHEN THE REQUEST IS  @Y30LB22*/ 00508003
 /*          EXECUTED  (MACRO ICBVVIC - SVC 126).            @G24LB37*/ 00508142
 /*                                                          @G24LB37*/ 00508242
 /*          STATUS:  MVS                                    @G24LB37*/ 00522242
 /*                                                          @G24LB37*/ 00524242
 /*          CHANGE LEVEL:                                   @G24LB37*/ 00526242
 /*          @G24LB37  ALLOCATE TO MOUNTED VOLUMES  06/07/76 @G24LB37*/ 00528242
 /*                                                                  */ 00532242
 /********************************************************************/ 00700003
    /*  CONSTANTS                                            @Y30LB22*/ 00702003
     DCL   MGPCGOP  BIT(8)    CONSTANT('82'X);             /*@Y30LB22*/ 00720003
                              /* CREATE GRP REQ. OP CODE     @Y30LB22*/ 00730003
     DCL   MGPMGOP  BIT(8)    CONSTANT('83'X);             /*@Y30LB22*/ 00740003
                              /* MODIFY GRP REQ. OP CODE     @Y30LB22*/ 00742003
     DCL   MGPLEN   FIXED(15) INIT (LENGTH(MGP));          /*@Y30LB22*/ 00744003
                              /* REQUEST BLOCK LENGTH        @Y30LB22*/ 00746003
     DCL                                                                00748803
       1        MGP BASED(MGPPTR) BDY(WORD),               /*@Y30LB22*/ 00750003
         2      MGPLNGTH  FIXED(31), /* REQ BLK LENGTH       @Y30LB22*/ 00800003
         2      MGPCODE   CHAR(4),   /* OPERATION ID         @Y30LB22*/ 00850003
           3    MGPOPCD   BIT(8),    /* OP CODE              @Y30LB22*/ 00900003
           3    *         CHAR(3),   /* UNUSED               @Y30LB22*/ 00950003
         2      MGPGROUP  CHAR(8),   /* USER DEFINED MSVGP   @Y30LB22*/ 01000003
         2      MGPOWNER  CHAR(10),  /* NAME/ID OF OWNER     @Y30LB22*/ 01050003
         2      MGPRI     FIXED(15), /* PRIM SPACE DEFAULT   @Y30LB22*/ 01100003
         2      MGPSEC    FIXED(15), /* SEC SPACE DEFAULT    @Y30LB22*/ 01150003
         2      MGPRETPD  FIXED(15), /* GRP RETENTION PERIOD @Y30LB22*/ 01250003
         2      MGPTHOLD  FIXED(8),  /* GRP THREHOLD PERCENT @Y30LB22*/ 01260003
         2      MGPCONUS  FIXED(8),  /* MAXIMUM NUMBER       @G24LB37   01262042
                                        OF CONCURRENT USERS  @G24LB37   01264042
                                        PER HOST TO A VOLUME @G24LB37   01266042
                                        WITHIN A GROUP       @G24LB37*/ 01268042
         2      MGPRESSP  FIXED(8),  /* PERCENT OF RESERVED  @G24LB37   01268442
                                        SPACE PER VOLUME     @G24LB37   01268842
                                        WITHIN A  GROUP      @G24LB37*/ 01269242
         2      *         CHAR(1),   /* UNUSED               @G24LB37*/ 01269642
         2      MGPDESCR  CHAR(30),  /* DESCRIPTIVE INFO     @Y30LB22*/ 01300003
         2      MGPADDR   CHAR(30),  /* MAILING ADDRESS      @Y30LB22*/ 01350003
         2      MGPFLAGA  BIT(32),   /* INDICATOR FLAGS      @Y30LB22*/ 01400003
           3    MGPRLSE   BIT(1),    /* UNUSED SPACE TO BE   @Y30LB22   01450003
                                        RELEASED             @Y30LB22*/ 01500003
           3    MGPNRLSE  BIT(1),    /* UNUSED SPACE NOT TO  @Y30LB22   01550003
                                        BE RELEASED          @Y30LB22*/ 01600003
           3    MGPBIND   BIT(1),    /* RESERVE ENTIRE VOL   @Y30LB22*/ 01650003
           3    MGPNBIND  BIT(1),    /* VOL WILL NOT BE      @Y30LB22   01700042
                                        BOUND TO THE         @Y30LB22   01750042
                                        STAGING VOLUME       @Y30LB22*/ 01760042
           3    MGPEXCL   BIT(1),    /* EXCLUSIVE USE        @Y30LB22*/ 01800003
           3    MGPSHARE  BIT(1),    /* SHAREABLE            @Y30LB22*/ 01850003
           3    MGPRONLY  BIT(1),    /* READ ONLY            @Y30LB22*/ 01900003
           3    MGPRW     BIT(1),    /* VOL IS READ/WRITE    @Y30LB22*/ 01950003
           3    MGPDERAS  BIT(1),    /* MSS HDWR WILL ERASE  @Y30LB22   02000003
                                        DATA ON DESTAGED VOL @Y30LB22*/ 02050003
           3    MGPNDERA  BIT(1),    /* MSS HDWR WILL NOT    @Y30LB22   02100042
                                        ERASE DATA  ON       @Y30LB22   02150042
                                        DESTAGED VOLUME      @Y30LB22*/ 02160042
           3    MGPFLGRO  BIT(1),    /* MGPGROUP  SPECIFIED  @Y30LB22*/ 02200003
           3    MGPFLOWN  BIT(1),    /* MGPOWNER  SPECIFIED  @Y30LB22*/ 02210003
           3    MGPFLPRI  BIT(1),    /* MGPPRI IS SPECIFIED  @Y30LB22*/ 02250003
           3    MGPFLSEC  BIT(1),    /* MGPSEC IS SPECIFIED  @Y30LB22*/ 02300003
           3    MGPFLTHO  BIT(1),    /* MGPTHOLD  SPECIFIED  @Y30LB22*/ 02350003
           3    MGPFLRET  BIT(1),    /* MGPRETPD  SPECIFIED  @Y30LB22*/ 02400003
           3    MGPFLDES  BIT(1),    /* MGPDESCR  SPECIFIED  @Y30LB22*/ 02410003
           3    MGPFLADD  BIT(1),    /* MGPADDR IS SPECIFIED @Y30LB22*/ 02450003
           3    MGPNTHLD  BIT(1),    /* NULLIFY THRESHOLD    @Y30LB22   02500003
                                        PERCENT              @Y30LB22*/ 02510042
           3    MGPNOWNR  BIT(1),    /* NULLIFY OWNER        @Y30LB22*/ 02550003
           3    MGPNRETP  BIT(1),    /* NULLIFY RETEN PERIOD @Y30LB22*/ 02600003
           3    MGPNDESC  BIT(1),    /* NULLIFY DESCRIPTION  @Y30LB22*/ 02650003
           3    MGPNADDR  BIT(1),    /* NULLIFY ADDRESS      @Y30LB22*/ 02700003
           3    MGPFLCON  BIT(1),    /* MGPCONUS SPECIFIED   @G24LB37*/ 02710042
           3    MGPFLRES  BIT(1),    /* MGPRESSP SPECIFIED   @G24LB37*/ 02720042
           3    *         BIT(7),    /* UNUSED               @G24LB37*/ 02730042
         2      *         CHAR(4);   /* UNUSED               @Y30LB22*/ 02850003
./  ADD  SSI=63410033,NAME=IEZMNTXT
*%GOTO   MNXPLS2;       /* MSSC MOUNT LIST EXTENSION MAP     @ZDR2048   01150003
         MACRO                                                          01150403
         IEZMNTXT                                                       01150803
**************************************************************@ZDR2048  01151203
*                                                             @ZDR2048  01161203
*      MACCOMP @ZDR2048       SC1DP/BL0019                    @ZDR2048  01163203
*      MACSTAT @ZDR2048       76.113                          @ZDR2048  01165203
*                                                             @ZDR2048  01175203
*     NAME -- MNTXT -- MSSC MOUNT PARAMETER LIST EXTENSION    @ZDR2048  01177203
*                                                             @ZDR2048  01177603
*     FUNCTION -- THIS IS A MAPPING MACRO FOR THE EXTENSION   @ZDR2048  01179203
*        TO THE MOUNT PARAMETER LIST WHICH MAY ACCOMPANY A    @ZDR2048  01179603
*        NONSPECIFIC MOUNT REQUEST TO THE MSSC SVC.           @ZDR2048  01179703
*        THE EXTENSION IS ADDRESSED FROM A FIELD IN THE       @ZDR2048  01179803
*        MOUNT PARAMETER LIST.                                @ZDR2048  01179903
*                                                             @ZDR2048  01181903
*     STATUS -- CHANGE LEVEL 0                                @ZDR2048  01182003
*                                                             @ZDR2048  01182103
**************************************************************@ZDR2048  01182303
MNTXT    DSECT               MOUNT PARAMETER LIST EXTENSION   @ZDR2048  01183203
MNTXJFCB DS    F             ADDRESS OF THE JFCB              @ZDR2048  01185203
MNTXJOBN DS    F             ADDRESS OF THE JOB NAME          @ZDR2048  01185603
MNTXSTEP DS    F             ADDRESS OF THE STEP NUMBER       @ZDR2048  01186403
MNTXREJT DS    F             COUNT OF VOLUME REJECTS          @ZDR2048  01232003
MNTXLGTH EQU   *-MNTXT       LENGTH OF EXTENSION              @ZDR2048  01323203
         MEND                                                           01368803
**/                                                                     01378803
*%MNXPLS2:;                                              /*  @ZDR2048*/ 01414403
*/***********************************************************@ZDR2048*/ 01460003
*/*                                                          @ZDR2048*/ 01470003
*/*   MACCOMP @ZDR2048     SC1DP/BL0019                      @ZDR2048*/ 01480003
*/*   MACSTAT @ZDR2048     76.113                            @ZDR2048*/ 01490003
*/*                                                          @ZDR2048*/ 01492003
*/*   NAME -- MNTXT -- MSSC MOUNT PARAMETER LIST EXTENSION   @ZDR2048*/ 01494003
*/*                                                          @ZDR2048*/ 01496003
*/*   FUNCTION -- THIS IS A MAPPING MACRO FOR THE EXTENSION  @ZDR2048*/ 01498003
*/*      TO THE MOUNT PARAMETER LIST WHICH MAY ACCOMPANY A   @ZDR2048*/ 01498403
*/*      NONSPECIFIC MOUNT REQUEST TO THE MSSC SVC.          @ZDR2048*/ 01498803
*/*      THE EXTENSION IS ADDRESSED FROM A FIELD IN THE      @ZDR2048*/ 01499203
*/*      MOUNT PARAMETER LIST.                               @ZDR2048*/ 01499603
*/*                                                          @ZDR2048*/ 01509603
*/*   STATUS -- CHANGE LEVEL 0                               @ZDR2048*/ 01519603
*/*                                                          @ZDR2048*/ 01520003
*/***********************************************************@ZDR2048*/ 01530003
*    DCL 1 MNTXT BASED,     /*MOUNT PARAMETER LIST EXTENSION @ZDR2048*/ 01540003
*          2 MNTXJFCB PTR(31),    /* ADDRESS OF THE JFCB     @ZDR2048*/ 01550003
*          2 MNTXJOBN PTR(31),    /* ADDRESS OF THE JOB NAME @ZDR2048*/ 01600003
*          2 MNTXSTEP PTR(31),    /* ADDRESS OF STEP NUMBER  @ZDR2048*/ 01700003
*          2 MNTXREJT FIXED(31);  /* COUNT OF VOLUME REJECTS @ZDR2048*/ 01710003
*%MNTXLGTH='LENGTH(MNTXT)';       /* LENGTH OF EXTENSION     @ZDR2048*/ 01800003
./  ADD  SSI=43010455,NAME=IEZMSGRQ
 /********************************************************************/ 00250003
 /*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00260003
 /*          MACSTAT  Y30LB22          74/171/341040         @Y30LB22*/ 00270003
 /*                                                          @Y30LB22*/ 00280003
 /*          NAME: IEZMSGRQ                                  @Y30LB22*/ 00290003
 /*                                                          @Y30LB22*/ 00292003
 /*          FUNCTION:                                       @Y30LB22*/ 00294003
 /*          MESSAGE DEFINITION PARAMETER LIST.  THIS LIST   @Y30LB22*/ 00296003
 /*          IS PASSED TO ICBVOP00 TO REQUEST THE PRINTING   @Y30LB22*/ 00298003
 /*          OF A MESSAGE.                                   @Y30LB22*/ 00298403
 /*                                                          @Y30LB22*/ 00299603
 /*          STATUS:  CHANGE LEVEL = 0                       #Y30LB22*/ 00299703
 /*                                                          #Y30LB22*/ 00299803
 /********************************************************************/ 00299903
                                                                        00349903
 /********************************************************************/ 09000003
  DCL 1 MSGRQ BDY(WORD),      /* MSG REQ PARM LIST           @Y30LB22*/ 12000003
         2 MSGID FIXED(31),   /* MESSAGE ID IN BINARY        @Y30LB22*/ 15000003
         2 MSGRPLV PTR(31),   /* ADDRESS OF THE RPLV         @Y30LB22*/ 18000003
         2 MSGRLEN BIT(8),    /* LENGTH OF OPERATOR REPLY    @Y30LB22*/ 21000003
         2 MSGREPLY PTR(24),  /* ADDR OF AREA FOR OP. REPLY  @Y30LB22*/ 24000003
         2 MSGLEN1 BIT(8),    /* LENGTH OF FIRST COMPLETION  @Y30LB22   27000003
                                 INFORMATION                 @Y30LB22*/ 27050003
         2 MSGTEXT1 PTR(24),  /* ADDR OF FIRST COMP. INF     @Y30LB22*/ 30000003
         2 MSGLEN2 BIT(8),    /* LENGTH OF SECOND COMP. INF  @Y30LB22*/ 33000003
         2 MSGTEXT2 PTR(24),  /* ADDR OF SECOND COMP. INF    @Y30LB22*/ 36000003
         2 MSGLEN3 BIT(8),    /* LENGTH OF THIRD COMP. INF   @Y30LB22*/ 39000003
         2 MSGTEXT3 PTR(24),  /* ADDR OF THIRD COMP. INF     @Y30LB22*/ 42000003
         2 MSGLEN4 BIT(8),    /* LENGTH OF FOURTH COMP. INF  @Y30LB22*/ 45000003
         2 MSGTEXT4 PTR(24),  /* ADDR OF FOURTH COMP. INF    @Y30LB22*/ 48000003
         2 MSGLEN5 BIT(8),    /* LENGTH OF FIFTH COMP. INF   @Y30LB22*/ 51000003
         2 MSGTEXT5 PTR(24);  /* ADDR OF FIFTH COMP. INF     @Y30LB22*/ 54000003
./  ADD  SSI=43010456,NAME=IEZMVR
 /********************************************************************/ 00200003
 /*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00250003
 /*          MACSTAT  Y30LB22          74/170/341040         @Y30LB22*/ 00300003
 /*                                                          @Y30LB22*/ 00350003
 /*          NAME: IEZMVR                                    @Y30LB22*/ 00400003
 /*                                                          @Y30LB22*/ 00450003
 /*          FUNCTION:                                       @Y30LB22*/ 00500003
 /*                  MAPS THE REQUEST BLOCK FOR A MODIFY     @Y30LB22*/ 00502003
 /*                  BASE OR COPY VOLUME RECORD REQUEST.     @Y30LB22*/ 00504003
 /*                  REGISTER 1 MUST POINT TO THE REQUEST    @Y30LB22*/ 00506003
 /*                  BLOCK WHEN THE REQUEST IS EXECUTED      @Y30LB22*/ 00508003
 /*                  (MACRO ICBVVIC - SVC 126).              @Y30LB22*/ 00508403
 /*                                                          @Y30LB22*/ 00550003
 /*          STATUS:  CHANGE LEVEL = 0                       @Y30LB22*/ 00600003
 /*                                                          @Y30LB22*/ 00650003
 /********************************************************************/ 00700003
   /* CONSTANTS                                              @Y30LB22*/ 00710003
    DCL MVRLEN FIXED(15) INIT (LENGTH(MVR)); /* LENGTH       @Y30LB22   00722003
                                           OF REQUEST BLOCK  @Y30LB22*/ 00722403
    DCL MVROP  BIT(8) CONSTANT('85'X); /* REQUEST OP CODE    @Y30LB22*/ 00724003
   /* MAPPING MACRO                                          @Y30LB22*/ 00742003
     DCL                                                                00748403
       1        MVR BASED(MVRPTR) BDY(WORD),               /*@Y30LB22*/ 00750003
         2      MVRLNGTH  FIXED(31), /* LENGTH OF REQ. BLK   @Y30LB22*/ 00800003
         2      MVRCODE   CHAR(4),   /* OPERATION IDENTIFIER @Y30LB22*/ 00850003
           3    MVROPCD   BIT(8),    /* OP CODE              @Y30LB22*/ 00900003
           3    *         CHAR(3),   /* UNUSED               @Y30LB22*/ 00950003
         2      MVRFLAGA  BIT(32),   /* INDICATOR FLAGS      @Y30LB22*/ 01000003
           3    MVRFLFOR  BIT(1),    /* MVRFOR IS SPECIFIED  @Y30LB22*/ 01050003
           3    MVRFLGRO  BIT(1),    /* MVRGROUP  SPECIFIED  @Y30LB22*/ 01100003
           3    MVRFLBAS  BIT(1),    /* MVRBVOL IS SPECIFIED @Y30LB22*/ 01110003
           3    MVRFLDES  BIT(1),    /* MVRDES IS SPECIFIED  @Y30LB22*/ 01150003
           3    MVRFLTO   BIT(1),    /* MVRTO IS SPECIFIED   @Y30LB22*/ 01200003
           3    MVRFLCSN  BIT(1),    /* MVRCSN IS SPECIFIED  @Y30LB22*/ 01210003
           3    MVRFLBK   BIT(1),    /* MVRBKUPN SPECIFIED   @Y30LB22*/ 01250003
           3    MVRFLLAB  BIT(1),    /* MVRLABEL SPECIFIED   @Y30LB22*/ 01260003
           3    MVRGEN    BIT(1),    /* GENERAL VOLUME       @Y30LB22*/ 01300003
           3    MVRRSTD   BIT(1),    /* RESTRICTED VOLUME    @Y30LB22*/ 01400003
           3    MVRNGRP   BIT(1),    /* CHANGE VOL TO NON-   @Y30LB22   01500003
                                        GROUPED              @Y30LB22*/ 01502003
           3    MVRBKUP   BIT(1),    /* CHANGE COPY TO BCKUP @Y30LB22*/ 01512003
           3    MVRNDESC  BIT(1),    /* NULLIFY DESCRIPTION  @Y30LB22*/ 01550003
           3    MVRNEXPD  BIT(1),    /* NULLIFY EXP. DATE    @Y30LB22*/ 01600003
           3    MVRSLMIS  BIT(1),    /* SET VOL. LABEL       @Y30LB22   01650003
                                        MISMATCH FLAG        @Y30LB22*/ 01700003
           3    MVRCLMIS  BIT(1),    /* CLEAR VOL. LABEL     @Y30LB22   01750003
                                        MISMATCH FLAG        @Y30LB22*/ 01800003
           3    MVRCIVCF  BIT(1),    /* CLEAR INCOMPLETE VOL @Y30LB22   01850003
                                        CREATION FLAG        @Y30LB22*/ 01860003
           3    MVRCICPY  BIT(1),    /* CLEAR INCOMPLETE VOL @Y30LB22   01870003
                                        COPY FLAG            @Y30LB22*/ 01880003
           3    *         BIT(14),   /* UNUSED               @Y30LB22*/ 01890003
         2      MVRBVOL   CHAR(6),   /* VOLID OF BASE OR     @Y30LB22   01910003
                                        COPY RECORD          @Y30LB22   01960003
                                        TO BE MODIFIED       @Y30LB22*/ 02000003
         2      MVRFOR    FIXED(15), /* NO. OF DAYS USED IN  @Y30LB22   02010003
                                        CALCULATING EXP DATE @Y30LB22*/ 02020003
         2      MVRGROUP  CHAR(8),   /* USER SPECIFIED MSVGP @Y30LB22*/ 02050003
         2      MVRDES    CHAR(30),  /* DESCRIPTIVE INFO     @Y30LB22*/ 02150003
         2      MVRTO     CHAR(4),   /* JULIAN EXP. DATE     @Y30LB22*/ 02200003
         2      MVRCSN    CHAR(12),  /* CARTRIDGE SERIAL     @Y30LB22   02210003
                                        NUMBER OF THE VOL    @Y30LB22*/ 02220003
         2      MVRBKUPN  FIXED(8),  /* MAX NO. OF ALLOWED   @Y30LB22   02250003
                                        BACKUP COPIES        @Y30LB22*/ 02300003
         2      MVRBLNK1  CHAR(1),   /* BLANK                @Y30LB22*/ 02350003
         2      MVRLABEL  CHAR(6),   /* SER. NO IN SOFTWARE  @Y30LB22*/ 02360003
                                     /* LABEL                @Y30LB22*/ 02370003
         2      *         CHAR(6);   /* UNUSED               @Y30LB22*/ 02400003
./  ADD  SSI=43260175,NAME=IEZNGVR
 /********************************************************************/ 00090003
 /*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00092003
 /*          MACSTAT  Y30LB22          74/170/341040         @Y30LB22*/ 00094003
 /*                                                                   */00096003
 /*          NAME: IEZNGVR                                   @Y30LB22*/ 00098003
 /*                                                                   */00098403
 /*          FUNCTION: MAPPING MACRO                         @Y30LB22*/ 00098803
 /*                  THE NONGROUP RECORD PROVIDES A MEANS OF ACCESS   */00098903
 /*                  TO THE BASE VOLUME RECORDS OF THE FIRST AND LAST */00104103
 /*                  MASS STORAGE VOLUMES IN THE NON-GROUPED CHAIN.   */00106603
 /*                                                          @Y30LB22*/ 00109103
 /*                                                                   */00116203
 /*          STATUS:  CHANGE LEVEL = 0                       @Y30LB22*/ 00124603
 /*                                                                   */00133003
 /********************************************************************/ 00141403
     DCL                                                                00149803
       1        NGVR BASED(NGVRPTR) BDY(WORD),                          00250003
         2      NGVNAME   CHAR(13),  /* KEY FOR THE NONGROUP            00300003
                                        RECORD               @Y30LB22*/ 00350003
         2      NGVRTYPE  BIT(16),   /* RECORD TYPE INDICATOR           00400003
                                        FLAGS                @Y30LB22*/ 00450003
           3    NGVRES1   BIT(7),    /* RESERVED             @Y30LB22*/ 00500003
           3    NGVHDR    BIT(1),    /* NONGROUP RECORD      @Y30LB22*/ 00550003
           3    NGVRES2   BIT(8),    /* RESERVED             @Y30LB22*/ 00600003
         2      *         CHAR(2),   /* UNUSED               @Y30LB2 */ 00610003
         2      NGVFVOL   CHAR(6),   /* VOL SER OF 1ST VOL   @Y30LB22*/ 00650003
         2      NGVLVOL   CHAR(6),   /* VOL SER OF LAST VOL  @Y30LB22*/ 00700003
         2      *         CHAR(1),   /* UNUSED               @Y30LB22*/ 00750003
         2      NGVNOVOL  FIXED(15), /* NUMBER OF VOLUMES IN @Y30LB22   00800003
                                        NONGROUP CHAIN       @Y30LB22*/ 00850003
         2      *         CHAR(8);   /* UNUSED               @Y30LB22*/ 00900003
./  ADD  SSI=63240113,NAME=IEZRPLV
 /********************************************************************/ 00240003
 /*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00242003
 /*          MACSTAT  Y30LB22          74/170/341040         @Y30LB22*/ 00244003
 /*                                                                   */00246003
 /*          NAME: IEZRPLV                                   @Y30LB22*/ 00248003
 /*                                                                   */00248403
 /*          FUNCTION:                                                */00248803
 /*          A MSVC REQUEST PARAMETER LIST IS CREATED BY     @Y30LB22*/ 00249203
 /*          ICBVPI00, ICBVIN01, ICBVIN02, OR ICBVQM00       @Y30LB22*/ 00249303
 /*          TO HAVE A SERVICE FUNCTION PROCESSED BY         @Y30LB22*/ 00249603
 /*          THE MSVC SUBTASK                                @Y30LB22*/ 00249703
 /*                                                                   */00249903
 /*          STATUS:  CHANGE LEVEL = 2                       @OZ09545*/ 00266603
 /*      CHANGE 01 04/14/76 ADD NEW FIELD TO SAVE RCODE      @OZ09545*/ 00268603
 /*      CHANGE 02 08/25/76 RECORD THE DATE THE RPLV WAS     @ZA13484*/ 00269103
 /*                         CREATED BY ICBVQM00 FOR RECOVERY @ZA13484*/ 00269603
 /*                                                          @Y30LB22*/ 00276603
 /********************************************************************/ 00278603
    /* CONSTANTS                                             @Y30LB22*/ 00280603
 DCL RPLVREAD  FIXED(8) CONSTANT(0); /* READ REQUEST         @Y30LB22*/ 00282603
 DCL RPLVPUT   FIXED(8) CONSTANT(1); /* PUT REQUEST          @Y30LB22*/ 00283003
 DCL RPLVDEL   FIXED(8) CONSTANT(5); /* DELETE REQUEST       @Y30LB22*/ 00283103
 DCL RPLVENDR  FIXED(8) CONSTANT(4); /* END REQUEST          @Y30LB22*/ 00283203
    /* MAPPING MACRO                                         @Y30LB22*/ 00288803
 DCL  1        RPLV      BASED(RPLVPTR) BDY(WORD),         /*@Y30LB22*/ 00294403
        2      RPLVQPTR  PTR(31),   /* CHAIN AHEAD POINTER   @Y30LB22*/ 00300003
        2      RPLVECB   PTR(31),   /* ECB                   @Y30LB22*/ 00350003
        2      RPLTCBPR  PTR(31),   /* VS/1 TCB POINTER      @Y30LB22*/ 00400003
          3    RPLASCBP  PTR(31),   /* VS/2 ASCB POINTER     @Y30LB22*/ 00450003
        2      RPLVVICB  PTR(31),   /* VVICB POINTER         @Y30LB22*/ 00460003
        2      RPLVRSV1  PTR(31),   /* RESERVED FOR SUBTASK  @Y30LB22   00470003
                                       POST                  @Y30LB22*/ 00472003
        2      RPLVRSV2  PTR(31),   /* RESERVED FOR SUBTASK  @Y30LB22   00480003
                                       POST                  @Y30LB22*/ 00482003
        2      RPLVRSV3  PTR(31),   /* RESERVED FOR SUBTASK  @Y30LB22   00490003
                                       POST                  @Y30LB22*/ 00500003
        2      RPLFLAGA  CHAR(2),   /* STATUS FLAGS          @Y30LB22*/ 00533303
          3    RPLFTIME  BIT(1),    /* 1ST TIME FOR THIS REQ @Y30LB22   00550003
                                       IF BIT 0=0 (OFF)      @Y30LB22   00600003
                                       2ND TIME FOR THIS REQ @Y30LB22   00650003
                                       IF BIT 0=1 (ON)       @Y30LB22*/ 00700003
          3    RPLVPOST  BIT(1),    /* ECB TO BE POSTED      @Y30LB22*/ 00750003
          3    RPLVPROG  BIT(1),    /* REQUEST IN PROGRESS   @Y30LB22*/ 00800003
          3    RPLVCOMP  BIT(1),    /* REQUEST LST COMPLETED @Y30LB22*/ 00850003
          3    RPLVVIN   BIT(1),    /* VIN CALL TO VSP       @Y30LB22*/ 00860003
          3    RPLVVOP   BIT(1),    /* VOP CALL TO VJL       @Y30LB22*/ 00870003
          3    RPLJRCVY  BIT(1),    /* JRNL RECOVERY RPLV    @Y30LB22*/ 00880003
          3    RPLVJRNL  BIT(1),    /* RPLV JOURNALLED       @Y30LB22*/ 00890003
          3    RPLVRES1  BIT(8),    /* RESERVED              @Y30LB22*/ 00900003
        2      RPLVTLEN  FIXED(15), /* TOTAL RPLV LENGTH     @Y30LB22*/ 00950003
        2      RPLRCODE  BIT(16),   /* REASON CODE           @Y30LB22*/ 01000003
        2      RPLVRETC  BIT(16),   /* RETURN CODE           @Y30LB22*/ 01050003
        2      RPLRMSCC  BIT(16),   /* REASON CODE           @OZ09545*/ 01050403
        2      RPLVDATE  CHAR(4),   /* DATE RPLV CREATED     @ZA13484*/ 01050903
        2      *         CHAR(14),  /* UNUSED                @OZ09545*/ 01052003
        2      RPLVSAM   CHAR(76)  BDY(WORD), /*VSAM I/O RPL @Y30LB22*/ 01060003
          3    *         CHAR(2),   /* RESERVED              @Y30LB22*/ 01070003
          3    RPLVTYP   PTR(8),    /* I/O TYPE              @Y30LB22*/ 01080003
          3    *         CHAR(21),  /* RESERVED              @Y30LB22*/ 01094003
          3    RPLVACB   PTR(31),   /* ACB POINTER           @Y30LB22*/ 01096003
          3    *         CHAR(4),   /* RESERVED              @Y30LB22*/ 01098003
          3    RPLVBUF   PTR(31),   /* DATA BUFFER PTR       @Y30LB22*/ 01098803
          3    RPLVKEY   PTR(31),   /* KEY POINTER           @Y30LB22*/ 01099203
          3    RPLVOPT   CHAR(4),   /* I/O OPTIONS           @Y30LB22*/ 01099603
            4  RPLVLOC   BIT(1),    /* MOVE MODE IF OFF      @Y30LB22   01103003
                                       LOCATE MODE IF ON     @Y30LB22*/ 01105003
            4  RPLVDIR   BIT(1),    /* DIRECT KEY PROCESSING #Y30LB22*/ 01109803
            4  RPLVNEXT  BIT(1),    /* NEXT SEQUENTIAL KEY   #Y30LB22   01113203
                                       PROCESSING            @Y30LB22*/ 01116603
            4  *         BIT(2),    /* RESERVED              @Y30LB22*/ 01126603
            4  RPLVKGE   BIT(1),    /* SEARCH KEY GT/EQ      @Y30LB22   01128603
                                       SEARCH KEY EQ IF OFF  @Y30LB22*/ 01130603
            4  *         BIT(8),    /* RESERVED              @Y30LB22*/ 01132603
            4  RPLVUPD   BIT(1),    /* READ/PUT UPDATE MODE  @Y30LB22   01133003
                                       RETRIEVAL-READ OR     @Y30LB22   01133103
                                       NEW-PUT IF OFF        @Y30LB22*/ 01133203
          3    *         CHAR(4),   /* RESERVED              @Y30LB22*/ 01138803
          3    RPLVRLN   FIXED(31), /* LENGTH OF RECORD      @Y30LB22*/ 01140803
          3    RPLVBLN   FIXED(31), /* LENGTH OF DATA BUFFER @Y30LB22*/ 01142803
        2      RPLVUTIL  CHAR(*) BDY(WORD);/* SVC 126 REQUEST BLOCK     01144403
                                              AND POSSIBLY REQUEST      01194403
                                              BLOCK EXTENSION OR        01244403
                                              JFCB.          @Y30LB22*/ 01294403
./  ADD  SSI=43010459,NAME=IEZRVR
 /********************************************************************/ 00090003
 /*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00092003
 /*          MACSTAT  Y30LB22          74/170/341040         @Y30LB22*/ 00094003
 /*                                                          @Y30LB22*/ 00096003
 /*          NAME: IEZRVR                                    @Y30LB22*/ 00098003
 /*                                                          @Y30LB22*/ 00098403
 /*          FUNCTION:                                       @Y30LB22*/ 00098803
 /*                  MAPS THE REQUEST BLOCK FOR A REMOVE     @Y30LB22*/ 00113903
 /*                  BASE OR COPY VOLUME RECORD REQUEST      @Y30LB22*/ 00123903
 /*                  REGISTER 1 MUST POINT TO THE REQUEST    @Y30LB22*/ 00125903
 /*                  BLOCK WHEN THE REQUEST IS EXECUTED      @Y30LB22*/ 00127903
 /*                  (MACRO ICBVVIC - SVC 126).              @Y30LB22*/ 00128303
 /*                                                          @Y30LB22*/ 00189603
 /*          STATUS:  CHANGE LEVEL = 0                       @Y30LB22*/ 00204703
 /*                                                          @Y30LB22*/ 00219803
 /********************************************************************/ 00229803
    /*                CONSTANTS                              @Y30LB22*/ 00244903
     DCL  RVRLEN  FIXED(15) INIT (LENGTH(RVR)); /* LENGTH OF @Y30LB22   00247303
                                              REQUEST BLOCK  @Y30LB22*/ 00247403
     DCL  RVROP   BIT(8) CONSTANT('81'X); /*REQUEST OP CODE  @Y30LB22*/ 00247703
 /********************************************************************/ 00249303
    /*               MAPPING MACRO                           @Y30LB22*/ 00249703
 /********************************************************************/ 00249803
     DCL                                                                00276603
       1        RVR BASED(RVRPTR) BDY(WORD),               /*@Y30LB22*/ 00283303
         2      RVRLNGTH  FIXED(31), /* LENGTH OF REQ BLK    @Y30LB22*/ 00300003
         2      RVRCODE   CHAR(4),   /* OPERATION IDENTIFIER @Y30LB22*/ 00350003
           3    RVROPCD   BIT(8),    /* OPCODE               @Y30LB22*/ 00400003
           3    *         CHAR(3),   /* UNUSED               @Y30LB22*/ 00450003
         2      RVRVOLID  CHAR(6),   /* SER NO OF VOL WHOSE  @Y30LB22   00500003
                                        REC IS TO BE REMOVED @Y30LB22*/ 00550003
         2      RVRBLNK1  CHAR(1),   /* BLANK                @Y30LB22*/ 00552003
         2      RVRCPYID  FIXED(8),  /* ID OF A COPY RECORD  @Y30LB22*/ 00560003
         2      RVRFLAGA  BIT(32),   /* INDICATOR FLAGS      @Y30LB22*/ 00600003
           3    RVRBASEV  BIT(1),    /* THE BASE VOLUME REC  @Y30LB22   00650003
                                        IS TO BE REMOVED     @Y30LB22*/ 00700003
           3    RVRCOPYV  BIT(1),    /* THE COPY VOLUME REC  @Y30LB22   00800003
                                        IS TO BE REMOVED     @Y30LB22*/ 00850003
           3    *         BIT(30),   /* UNUSED               @Y30LB22*/ 00900003
         2      *         CHAR(4);   /* UNUSED               @Y30LB22*/ 00950003
./  ADD  SSI=63380277,NAME=IEZRVVI
 /********************************************************************/ 00200003
 /*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00250003
 /*          MACSTAT  Y30LB22          74/171/341040         @Y30LB22*/ 00300003
 /*                                                                   */00350003
 /*          NAME: IEZRVVI                                   @Y30LB22*/ 00400003
 /*                                                                   */00450003
 /*          FUNCTION:                                       @Y30LB22*/ 00500003
 /*          MAPS THE REQUEST BLOCK FOR A READ  RECORD       @Y30LB22*/ 00512003
 /*          REQUEST.  REGISTER 1 MUST POINT TO THE REQUEST  @Y30LB22*/ 00514003
 /*          BLOCK WHEN THE REQUEST IS EXECUTED              @Y30LB22*/ 00516003
 /*          (MACRO ICBVVIC - SVC 126).                      @Y30LB22*/ 00518003
 /*                                                                   */00550003
 /*          STATUS:  CHANGE LEVEL = 03                      @ZDR2053*/ 00600003
 /*                                                          @Z40LB66*/ 00602003
 /* CHANGE 01  2/14/75  ADD RVVCIRCD FLAG                    @Z40LB66*/ 00610003
 /* CHANGE 02  4/16/75  ADD RVVCPURC FLAG                    @Z40LB66*/ 00620003
 /* CHANGE 03  7/4/76   ADD PLACE HOLDER FLAGS               @ZDR2053*/ 00630003
 /*                                                                   */00650003
 /********************************************************************/ 00700003
     /* CONSTANTS                                            @Y30LB22*/ 00710003
     DCL    RVVLEN   FIXED(15) INIT(LENGTH(RVVI)); /*        @Y30LB22   00770003
                                        REQUEST BLOCK LENGTH @Y30LB22*/ 00772003
     DCL    RVVOP    BIT(8)    CONSTANT('87'X); /* REQUEST   @Y30LB22   00780003
                                                   OP CODE   @Y30LB22*/ 00782003
     /* MAPPING MACRO                                        @Y30LB22*/ 00792003
     DCL                                                                00796003
       1        RVVI BASED(RVVIPTR) BDY(WORD),             /*@Y30LB22*/ 00800003
         2      RVVLNGTH  FIXED(31), /* LENGTH OF REQ. BLK   @Y30LB22*/ 00850003
         2      RVVOPCOD  CHAR(4),   /* OPERATION IDENTIFIER @Y30LB22*/ 00900003
           3    RVVCODE   BIT(8),    /* OPCODE               @Y30LB22*/ 00950003
           3    *         CHAR(3),   /* UNUSED               @Y30LB22*/ 01000003
         2      RVVOLUME  CHAR(6),   /* VOLID OF RECORD TO   @Y30LB22   01050003
                                         BE RETRIEVED        @Y30LB22*/ 01150003
         2      RVVGROUP  CHAR(8),   /* GROUP NAME OF GRP    @Y30LB22   01200003
                                        REC. TO BE RETRIEVED @Y30LB22*/ 01250003
         2      RVVARLN   FIXED(15), /* RESERVED FOR SUBTASK @Y30LB22*/ 01252003
         2      RVVAREA   PTR(31),   /* RESERVED FOR SUBTASK @Y30LB22*/ 01254003
         2      *         CHAR(2),   /* UNUSED               @Y30LB22*/ 01256003
         2      RVVBUFLN  FIXED(15), /* LENGTH OF CALLER     @Y30LB22   01260003
                                        PROVIDED REC BUFFER  @Y30LB22*/ 01270003
         2      RVVRTBUF  PTR(31),   /* PTR TO THE CALLER    @Y30LB22   01282003
                                        PROVIDED REC BUFFER  @Y30LB22*/ 01290003
         2      RVVEXPIR  FIXED(15), /* SPECIFIED NO OF DAYS @Y30LB22*/ 01300003
         2      RVVCDATE  CHAR(4),   /* DATE VOL WAS COPIED  @Y30LB22*/ 01350003
         2      RVVBLNK1  CHAR(1),   /* BLANK                @Y30LB22*/ 01460003
         2      RVVRDSEQ  FIXED(8),  /* SEQ. NO. OF THE COPY @Y30LB22*/ 01500003
         2      RVVRDCSN  CHAR(12),  /* SER. NO. OF CART.    @Y30LB22*/ 01550003
         2      RVVCPYID  FIXED(8),  /* COPY RECORD ID       @Y30LB22*/ 01600003
         2      RVVDUPID  FIXED(8),  /* DUPLICATE RECORD ID  @Y30LB22*/ 01650003
         2      RVVFLAGA  BIT(48),   /* INDICATOR FLAGS      @Y30LB22*/ 01700003
           3    RVVRMODE  BIT(8),    /* TYPE OF LOCATE       @Y30LB22   01750003
                                        TO PERFORM           @Y30LB22*/ 01800003
             4  RVVRDR    BIT(1),    /* READ RECORD DIRECT   @Y30LB22*/ 01850003
             4  RVVRDNR   BIT(1),    /* READ NEXT RECORD     @Y30LB22*/ 01900003
             4  RVVRDCH   BIT(1),    /* READ RECORD CHAIN    @Y30LB22*/ 01950003
             4  *         BIT(5),    /* UNUSED               @Y30LB22*/ 02000003
           3    RVVCHAIN  BIT(8),    /* INDICATES TYPE CHAIN @Y30LB22*/ 02050003
             4  RVVGPVOL  BIT(1),    /* LOC A GROUP RECORD   @Y30LB22*/ 02100003
             4  RVVNGVOL  BIT(1),    /* LOC NONGROUP RECORD  @Y30LB22*/ 02150003
             4  *         BIT(6),    /* UNUSED               @Y30LB22*/ 02200003
           3    RVVRDRCD  BIT(8),    /* INDICATE TYPE RECORD @Y30LB22*/ 02250003
             4  RVVBVRCD  BIT(1),    /* LOC. A BASE VOL REC. @Y30LB22*/ 02300003
             4  RVVGRPRC  BIT(1),    /* LOC A GROUP RECORD   @Y30LB22*/ 02350003
             4  RVVCPYRC  BIT(1),    /* LOC A COPY VOL REC.  @Y30LB22*/ 02400003
             4  RVVDUPRC  BIT(1),    /* LOC A DUPL VOL REC.  @Y30LB22*/ 02450003
             4  RVVRUNKN  BIT(1),    /* READ AN UNKNOWN REC  @Y30LB22*/ 02500003
             4  RVVCIRCD  BIT(1),    /* READ CART INDEX REC. @Z40LB66*/ 02510003
             4  RVVCPURC  BIT(1),    /* READ CPU RECORD      @Z40LB66*/ 02520003
             4  RVVALL    BIT(1),    /* READ VOLUME & PLACE  @ZDR2053*/ 02550003
                                     /* HOLDER RECORDS       @ZDR2053*/ 02560003
           3    RVVRTEST  BIT(8),    /* TEST TO MAKE         @Y30LB22*/ 02600003
             4  RVVEXPDT  BIT(1),    /* EXP DATE SPECIFIED   @Y30LB22*/ 02650003
             4  RVVTHOLD  BIT(1),    /* PAST THRESHOLD REQ'D @Y30LB22*/ 02700003
             4  RVVGSVOL  BIT(1),    /* GENERAL USE VOL REQ  @Y30LB22*/ 02750003
             4  RVVRSTD   BIT(1),    /* RESTRICTED VOL REQ'D @Y30LB22*/ 02800003
             4  RVVINACT  BIT(1),    /* INACTIVE VOL REQ'D   @Y30LB22*/ 02850003
             4  RVVACTV   BIT(1),    /* ACTIVE VOLUME REQ'D  @Y30LB22*/ 02900003
             4  RVVDVOL   BIT(1),    /* DUP VOLID ONLY       @Y30LB22   02910003
                                        SPECIFIED            @Y30LB22*/ 02920003
             4  RVVBPLHD  BIT(1),    /* BASE PLACE HOLDER    @ZDR2053*/ 02950003
           3    RVVCPYTP  BIT(8),    /* TYPE OF COPY RECORD  @Y30LB22   03000003
                                         TO BE RETURNED      @Y30LB22*/ 03050003
             4  RVVLBKUP  BIT(1),    /* LATEST BKUP REC REQ  @Y30LB22*/ 03150003
             4  RVVOBKUP  BIT(1),    /* OLDEST BKUP REC REQ  @Y30LB22*/ 03200003
             4  RVVLCOPY  BIT(1),    /* LATEST COPY REC REQ  @Y30LB22*/ 03250003
             4  RVVCPLHD  BIT(1),    /* COPY PLACE HOLDER    @ZDR2053*/ 03260003
             4  *         BIT(4),    /* UNUSED               @ZDR2053*/ 03300003
           3    RVVSPEC   BIT(8),    /* SPECIFICATION FIELD  @Y30LB22*/ 03350003
             4  RVVSGRP   BIT(1),    /* RVVGROUP SPECIFIED   @Y30LB22*/ 03360003
             4  RVVSEXP   BIT(1),    /* RVVEXPIR SPECIFIED   @Y30LB22*/ 03370003
             4  RVVSDTE   BIT(1),    /* RVVCDATE SPECIFIED   @Y30LB22*/ 03380003
             4  RVVSSEQ   BIT(1),    /* RVVRDSEQ SPECIFIED   @Y30LB22*/ 03400003
             4  RVVSCSN   BIT(1),    /* RVVRDCSN SPECIFIED   @Y30LB22*/ 03450003
             4  RVVSCPY   BIT(1),    /* RVVCPYID SPECIFIED   @Y30LB22*/ 03500003
             4  RVVSDUP   BIT(1),    /* RVVDUPID SPECIFIED   @Y30LB22*/ 03550003
             4  RVVSVOL   BIT(1),    /* RVVOLUME SPECIFIED   @Y30LB22*/ 03560003
         2      *         CHAR(4);   /* UNUSED               @Y30LB22*/ 03610003
./  ADD  SSI=63410034,NAME=IEZSDGLS
*%GOTO  SDGPLS2;           /* MSSC STAGING DRIVE GROUP MACRO   @G18MB04 02352000
        MACRO                                                           02354000
        IEZSDGLS                                                        02356000
***************************************************************@G18MB04 02358000
*                                                              @G18MB04 02358100
*     MACCOMP        @G18MB04    SC1DP/BLOO19                  @G18MB04 02358400
*     MACSTAT        @G18MB04    75.344                        @G18MB04 02358800
*                                                              @G18MB04 02359200
*                 *****MAPPING MACRO *****                     @G18MB04 02359600
*                                                              @G18MB04 02359700
*       NAME     SDGLS    MSSC STAGING DRIVE GROUP LIST        @G18MB04 02359800
*                                                              @G18MB04 02359900
*     FUNCTION - THIS IS A LIST OF UNIT NAMES, ONE FOR EACH    @G18MB04 02363200
*                POSSIBLE STAGING DRIVE GROUP THAT COULD EXIST @G18MB04 02365200
*                IN A MASS STORAGE SYSTEM.                     @G18MB04 02365600
*                THESE ARE SORTED IN ORDER OF BEST CHOICE      @G18MB04 02366000
*                (LEAST BUSY) TO WORST CHOICE.                 @G18MB04 02366400
*                                                              @G18MB04 02366500
*     STATUS   - CHANGE LEVEL = 0                              @G18MB04 02366600
*                                                              @G18MB04 02369900
***************************************************************@G18MB04 02370300
SDGLS    DSECT               MSSC STAGING DRIVE GROUP LIST     @G18MB04 02371900
SDGNNBBB DS    30CL8         UNIT NAMES FOR SDGS               @G18MB04 02372300
SDGLGTH  EQU   *-SDGLS                                         @G18MB04 02372400
         ORG   SDGNNBBB                                        @G18MB04 02372700
SDG      DS    CL3           EBCDIC LITERALS SDG               @G18MB04 02373100
SDGNN    DS    CL2           EBCDIC NUMBER OF SDG              @G18MB04 02373200
SDGBBB   DS    CL3           EBCDIC BLANKS                     @G18MB04 02373300
         ORG   SDGBBB                                          @G18MB04 02373400
SDGIX    DS    AL3           FOR USE IN MSSC SORT              @G18MB04 02378600
         MEND                                                  @G18MB04 02380600
**/                                                                     02381000
*%SDGPLS2:;                                                /*@G18MB04*/ 02382600
*/***********************************************************@G18MB04*/ 02383000
*/*   MACCOMP        @G18MB04    SC1DP/BL0019                @G18MB04*/ 02384100
*/*   MACSTAT        @G18MB04    75.344                      @G18MB04*/ 02389400
*/*                                                          @G18MB04*/ 02394700
*/*           ***** MAPPING MACRO *****                      @G18MB04*/ 02400000
*/*                                                          @G18MB04*/ 02410000
*/*   NAME    SDGLS     MSSC STAGING DRIVE GROUP LIST        @G18MB04*/ 02420000
*/*                                                          @G18MB04*/ 02430000
*/*  FUNCTION -  THIS IS A LIST OF UNIT NAMES, ONE FOR EACH  @G18MB04*/ 02460000
*/*           POSSIBLE STAGING DRIVE GROUP THAT COULD EXIST  @G18MB04*/ 02470000
*/*           IN A MASS STORAGE SYSTEM.                      @G18MB04*/ 02480000
*/*           THESE ARE SORTED IN ORDER OF BEST CHOICE       @G18MB04*/ 02490000
*/*           (LEAST BUSY) TO WORST CHOICE.                  @G18MB04*/ 02490400
*/*                                                          @G18MB04*/ 02492400
*/*   STATUS - CHANGE LEVEL = 0                              @G18MB04*/ 02494400
*/*                                                          @G18MB04*/ 02500000
*/***********************************************************@G18MB04*/ 02550000
*    DCL 1 SDGLS BASED,           /*STAGING DRIVE GROUP LIST @G18MB04*/ 02600000
*          2 SDGNNBBB(30) CHAR(8), /* UNIT NAMES FOR SDGS    @G18MB04*/ 02650000
*            3 SDG CHAR(3),        /* EBCDIC LITERALS SDG    @G18MB04*/ 02700000
*            3 SDGNN CHAR(2),      /* EBCDIC NUMBER OF SDG   @G18MB04*/ 02750000
*            3 SDGBBB CHAR(3),     /* EBCDIC BLANKS          @G18MB04*/ 02800000
*              4 SDGIX FIXED(24);  /* FOR USE IN MSSC SORT   @G18MB04*/ 02850000
*%SDGLGTH='LENGTH(SDGLS)';         /* SDG LIST LENGTH        @G18MB04*/ 05050000
./  ADD  SSI=53240028,NAME=IEZSENSE
 /********************************************************************/ 00050003
 /*     MACCOMP  Z40LB02                                             */ 00100003
 /*     MACSTAT  Z40LB02                                             */ 00150003
 /*                                                                  */ 00200003
 /*     NAME     IEZSENSE                                            */ 00250003
 /*                                                                  */ 00300003
 /*     FUNCTION-MAPS THE SENSE DATA AS IT APPEARS IN STORAGE        */ 00350003
 /*                                                                  */ 00400003
 /*     STATUS CHANGE LEVEL=0                                        */ 00450003
 /********************************************************************/ 00500003
     /*SENSE DATA MAPPING                                    @Z40LB02*/ 00650003
 DCL 1  EWOSNS BASED(SNSPTR),          /*STRUCTURE FOR 32    @Z40LB02   00700003
                                        BYTES OF SENSE DATA  @Z40LB02*/ 00750003
         2 EWOSNS0 BIT(8),             /*SENSE BYTE 0        @Z40LB02*/ 00800003
           3 CREJ BIT(1),              /*COMMAND REJECT      @Z40LB02*/ 00850003
           3 INTV BIT(1),              /*INTERVENTION REQD   @Z40LB02*/ 00900003
           3 BUSO BIT(1),              /*BUS OUT PARITY      @Z40LB02*/ 00950003
           3 EQU BIT(1),               /*EQUIPMENT CHECK     @Z40LB02*/ 01000003
           3 *   BIT(1),               /*NOT USED            @Z40LB02*/ 01050003
           3 HRET BIT(1),              /*HOST RETRY          @Z40LB02*/ 01100003
           3 PERR BIT(1),              /*PERMANENT ERROR     @Z40LB02*/ 01150003
           3 ENV BIT(1),               /*ENVIRONMENTAL DATA  @Z40LB02*/ 01200003
         2 EWOSSID BIT(16),            /*SSID FIELD          @Z40LB02*/ 01210003
           3 EWOSNS1 BIT(8),           /*SENSE BYTE 1        @Z40LB02*/ 01250003
             4 CEM BIT(1),             /*CE MESSAGE          @Z40LB02*/ 01300003
             4 SUU BIT(1),             /*SUBSYSTEM UNIT      @Z40LB02   01350003
                                         UNUSABLE            @Z40LB02*/ 01400003
             4  *   BIT(2),            /*MSG TYPE ETC        @Z40LB02*/ 01450003
             4  EWOSSID1  BIT(4),      /*1ST CHAR OF SSID    @Z40LB02*/ 01500003
           3 EWOSNS2 BIT(8),           /*SENSE BYTE 2        @Z40LB02*/ 01550003
             4  EWOSSID2  BIT(8),      /*2-3 CHARS OF SSID   @Z40LB02*/ 01600003
         2 EWOSNS3 BIT(8),             /*SENSE BYTE 3        @Z40LB02*/ 01650003
           3 FORMAT0 BIT(1),           /*FORMAT 0 - '80'X    @Z40LB02*/ 01700003
           3 FORMAT1 BIT(1),           /*FORMAT 1 - '40'X    @Z40LB02*/ 01750003
           3 FORMAT2 BIT(1),           /*FORMAT 2 - '20'X    @Z40LB02*/ 01800003
           3 FORMAT3 BIT(1),           /*FORMAT 3 - '10'X    @Z40LB02*/ 01850003
           3 FORMAT4 BIT(1),           /*FORMAT 4 - '08'X    @Z40LB02*/ 01900003
           3 FORMAT5 BIT(1),           /*FORMAT 5 - '04'X    @Z40LB02*/ 01950003
         2 EWOVOLID CHAR(6),           /*BYTES 4-9 -VOLID    @Z40LB02*/ 02000003
           3 EWOSNS4 BIT(8),           /*SENSE BYTE 4        @Z40LB02*/ 02050003
             4 *    BIT(1),            /*NOT USED            @Z40LB02*/ 02100003
             4 INTVREQ BIT(1),         /*INTERVENTION REQD   @Z40LB02*/ 02150003
             4 CHBOPAR BIT(1),         /*BUS OUT PAR         @Z40LB02*/ 02200003
             4 EQCHK BIT(1),           /*EQUIPMENT CHECK     @Z40LB02*/ 02250003
             4 DATACHK BIT(1),         /*DATA CHECK          @Z40LB02*/ 02300003
           3 EWOSNS5 BIT(8),           /*SENSE BYTE 5        @Z40LB02*/ 02350003
             4 *     BIT(1),           /*BIT NOT USED        @Z40LB02*/ 02410003
             4 RECON BIT(1),           /*RECONFIGURATION BIT @Z40LB02*/ 02420003
           3 EWOSNS6 BIT(8),           /*SENSE BYTE 6        @Z40LB02*/ 02450003
           3 EWOSNS7 BIT(8),           /*SENSE BYTE 7        @Z40LB02*/ 02500003
           3 EWOSNS8 BIT(8),           /*SENSE BYTE 8        @Z40LB02*/ 02550003
           3 EWOSNS9 BIT(8),           /*SENSE BYTE 9        @Z40LB02*/ 02600003
         2 EWOSNS10 BIT(8),            /*TABLE 10 IF AVAIL   @Z40LB02*/ 02650003
         2 EWOSNS11 BIT(8),            /*SENSE BYTE 11       @Z40LB02*/ 02700003
           3 EWOCHECK BIT(8),          /*EQ OR DATA CHECK    @Z40LB02*/ 02750003
             4 EWOMSGCD BIT(8),        /*MESSAGE CODE        @Z40LB02*/ 02800003
         2 EWOSNS12 BIT(8),            /*TERMINATION CODE    @Z40LB02*/ 02850003
           3 EWOCCOND BIT(4),          /*THIS VALUE MAY BE   @Z40LB02   02900003
                                         0, A, OR C          @Z40LB02*/ 02950003
           3 EWOCNUM BIT(4),           /*CASE NUMBER         @Z40LB02*/ 03000003
         2 EWOSNS13 BIT(8),            /*SENSE BYTE 13       @Z40LB02*/ 03050003
         2 EWOLZYX FIXED(16),          /*LZYX VALUE          @Z40LB02*/ 03100003
           3 EWOLZYX1 BIT(8),          /*MSF/ZY VALUE        @Z40LB02*/ 03150003
             4 MSFVALUE BIT(2),        /*MSF VALUE           @Z40LB02*/ 03200003
             4 ZVALUE BIT(1),          /*Z VALUE             @Z40LB02*/ 03250003
             4 YVALUE BIT(5),          /*Y VALUE             @Z40LB02*/ 03300003
           3 XVALUE BIT(8),            /*X VALUE             @Z40LB02*/ 03350003
         2 EWOCSN CHAR(12),            /*CARTRIDGE SERIAL    @Z40LB02   03400003
                                         NUMBER-BYTES 16                03450003
                                         THRU 27             @Z40LB02*/ 03500003
           3 EWOSNS16 CHAR(1),         /*SENSE BYTE 16       @Z40LB02*/ 03550003
           3 EWOSNS17 CHAR(1),         /*SENSE BYTE 17       @Z40LB02*/ 03600003
           3 EWOSNS18 CHAR(1),         /*SENSE BYTE 18       @Z40LB02*/ 03650003
           3 EWOSNS19 CHAR(1),         /*SENSE BYTE 19       @Z40LB02*/ 03700003
           3 EWOSNS20 CHAR(1),         /*SENSE BYTE 20       @Z40LB02*/ 03750003
           3 EWOSNS21 CHAR(1),         /*SENSE BYTE 21       @Z40LB02*/ 03800003
           3 EWOSNS22 CHAR(1),         /*SENSE BYTE 22       @Z40LB02*/ 03850003
           3 EWOSNS23 CHAR(1),         /*SENSE BYTE 23       @Z40LB02*/ 03900003
           3 EWOSNS24 CHAR(1),         /*SENSE BYTE 24       @Z40LB02*/ 03950003
           3 EWOSNS25 CHAR(1),         /*SENSE BYTE 25       @Z40LB02*/ 04000003
           3 EWOFSC CHAR(2),           /*FAULT SYMP CODE     @Z40LB02*/ 04050003
             4 EWOSNS26 CHAR(1),       /*SENSE BYTE 26       @Z40LB02*/ 04100003
             4 EWOSNS27 CHAR(1),       /*SENSE BYTE 27       @Z40LB02*/ 04150003
         2 EWOCYL CHAR(4),             /*SENSE BYTES 28-31   @Z40LB02   04200003
                                         WILL CONTAIN CYL    @Z40LB02   04250003
                                         IF AVAILABLE        @Z40LB02*/ 04300003
           3 CCHHR CHAR(4),            /*CCHHR VALUE         @Z40LB02*/ 04350003
             4 EWOCC CHAR(2);          /*CYLINDER INFO       @Z40LB02*/ 04400003
./  ADD  SSI=43010461,NAME=IEZSGP
 /********************************************************************/ 00200003
 /*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00250003
 /*          MACSTAT  Y30LB22          74/170/341040         @Y30LB22*/ 00300003
 /*                                                                   */00350003
 /*          NAME: IEZSGP                                             */00400003
 /*                                                                   */00450003
 /*          FUNCTION:                                                */00500003
 /*                  MAPS THE REQUEST BLOCK FOR A SCRATCH    @Y30LB22*/ 00502003
 /*                  GROUP RECORD REQUEST.  REGISTER         @Y30LB22*/ 00504003
 /*                  1 MUST POINT TO THE REQUEST BLOCK WHEN  @Y30LB22*/ 00506003
 /*                  THE REQUEST IS EXECUTED (MACRO ICBVVIC  @Y30LB22*/ 00508003
 /*                  - SVC 126).                             @Y30LB22*/ 00508403
 /*                                                                   */00550003
 /*          STATUS:  CHANGE LEVEL = 0                                */00600003
 /*                                                                   */00650003
 /********************************************************************/ 00700003
    /*                 CONSTANTS                             @Y30LB22*/ 00702003
     DCL  SGPLEN  FIXED(15) INIT (LENGTH(SGP)); /* LENGTH OF @Y30LB22   00720003
                                           REQUEST BLOCK     @Y30LB22*/ 00722003
     DCL  SGPOP BIT(8) CONSTANT('84'X);   /*REQ. OP CODE     @Y30LB22*/ 00730003
    /*                MAPPING MACRO                          @Y30LB22*/ 00742003
 DCL                                                                    00746003
    1        SGP BASED(SGPPTR) BDY(WORD),                  /*@Y30LB22*/ 00750003
       2     SGPLNGTH  FIXED(31), /* LENGTH OF REQUEST BLOCK @Y30LB22*/ 00800003
       2     SGPCODE   CHAR(4),   /* OPERATION IDENTIFIER    @Y30LB22*/ 00850003
          3  SGPOPCD   BIT(8),    /* OP CODE                 @Y30LB22*/ 00900003
          3  *         CHAR(3),   /* UNUSED                  @Y30LB22*/ 00950003
       2      SGPGROUP  CHAR(8),  /* NAME OF USER DEFINED    @Y30LB22   01000003
                                     GROUP                   @Y30LB22*/ 01050003
       2      *         CHAR(4);  /* UNUSED                  @Y30LB22*/ 01100003
./  ADD  SSI=80110024,NAME=IEZSSC
*%GOTO   ICBPLS2;     /* MAPPING MACRO                         @Y30LB04 00050003
         MACRO                                                          00100003
         IEZSSC                                                         00150003
************************************************************   @Y30LB04 00200003
*              ****** MAPPING MACRO *****                      @Y30LB04 00250003
*        IEZSSC - CONTROL BLOCK FOR MSSC                       @Y30LB04 00300003
*                                                              @Y30LB04 00380003
*        CHANGE ACTIVITY - ZD00046                             @ZD00046 00390003
*                          G24LB02                             @G24LB02 00390403
*          CHANGE 02 09/15/77 ADD ICBVSCRA AND ICBRESV FIELDS  @ZA24770 00390800
*          CHANGE 03 10/10/77 ADD ICBVVOLST TO ELIM AQR        @ZA27588 00391200
*                                                              @ZD00046 00392003
************************************************************   @Y30LB04 00400003
ICB2SSCB DSECT                                                 @Y30LB04 00450003
ICBSSNAM DS    CL8           CONTROL BLOCK ACRONYM             @ZM30190 00460003
ICBECB   DS    F             MSC ATTENTION ECB                 @Y30LB04 00500003
ICBACTV  DS    F             MSC ACTIVITY ECB                  @Y30LB04 00550003
ICBCOM   DS    F             MSC COMTASK ECB                   @Y30LB04 00600003
ICBIOR   DS    F             ECB FOR I/O RESTART               @Y30LB04 00660003
ICBCOMQ  DS    F             MSC COMTASK QUEUE PTR             @Y30LB04 00700003
ICBPUCB  DS    F             MSC PRIMARY UCB PTR               @Y30LB04 00750003
ICBAUCB  DS    F             MSC ALTERNATE UCB PTR             @Y30LB04 00800003
ICBQHEAD DS    F             MSSC RESPONSE QUEUE PTR           @Y30LB04 00850003
ICBTCB   DS    F             MSSC TASK TCB PTR                 @Y30LB04 00900003
ICBVN02P DS    F             PTR TO MSVC INITIALIZATION RTNE   @Y30LB04 00950003
ICBOPT   DS    0F            MSS ACTIVITY BFFR PTR AFTER NIP   @Y30LB04 00960003
ICBNVT   DS    F             DURING NIP, ADDRESS OF THE NVT    @Y30LB04 01010003
ICBFLG   DS    0F            MSS FLAG WORD                     @Y30LB04 01050003
ICBFG1   DS    XL1           MSS FLAG BYTE 1                   @Y30LB04 01100003
ICBI     EQU   X'80'         MSS INITIALIZED                   @Y30LB04 01150003
ICBR     EQU   X'40'         MSS READY                         @Y30LB04 01200003
ICBV     EQU   X'20'         MSVC INITIALIZED                  @Y30LB04 01210003
ICBB     EQU   X'10'         MSS BROKEN BOX                    @G24LB02 01220003
ICBS     EQU   X'08'         MSSC SUSPENDED                    @G24LB02 01230003
ICBMSCMP EQU   X'04'         MSC MP OPERATION                  @G24LB05 01240003
ICBMSCA  EQU   X'02'         MSC ASYMMETRIC OPERATION          @G24LB05 01242003
ICBFG2   DS    XL1           MSSC FLAG BYTE 2                  @Y30LB04 01250003
ICBFG3   DS    CL2           MSSC RESERVED FOR FLAGS           @ZA24770 01300000
ICB2ACTP DS    F             MSSC ACTIVITY RTN PTR             @Y30LB04 01400003
ICBIORCI DS    F             PTR TO MSSC I/O RESTART ROUTINE   @Y30LB04 01450003
ICBMEP   DS    F             PTR TO MSSC MOUNT EQUALZN RTNE    @Y30LB04 01500003
ICBSIOP  DS    F             PTR TO MSSC I/O DRIVER FRONT END  @Y30LB04 01510003
ICBVVIC  DS    F             MSSC MSVC PTR                     @Y30LB04 01550003
ICBVVICB DS    F             ADDR OF MSVC CONTROL BLOCK        @Y30LB04 01600003
ICBSRBP  DS    F             POINTER TO SRB FOR MSSC           @Y30LB04 01800003
ICBIPRGA DS    F             PTR TO MSSC I/O DRVR PRGE RTNE    @Y30LB04 01850003
ICBIATNA DS    F             PTR TO MSSC ATTENTION ROUTINE     @Y30LB04 01860003
ICBSIOBP DS    F             PTR TO MSSC I/O DRVR BACK END     @Y30LB04 01870003
ICBAEAP  DS    F             PTR TO MSSC ABE ROUTINE           @Y30LB04 01880003
ICBRSVP  DS    F             RESERVED POINTER FIELD            @Y30LB04 01890003
ICBMSSC  DS    F             MSSC INTERNAL USE                 @G24LB02 01892003
ICBFAB   DS    F             PTR TO ALLOCATN SERVICE RTNE      @Y30LB04 01894003
ICBCPUID DS  CL5             MSC CPUID                         @ZA24770 01894400
ICBRESVD DS  CL1             RESERVED FOR FUTURE USE           @ZA24770 01894500
ICBSAMP  DS  CL2             MSSC SAMPLE TIME                  @ZA24770 01894600
ICBVSCRA DS    F             PTR TO VVIC SCREEN ROUTINE        @ZA24770 01894900
ICBVOLST DS    F             PTR TO VVIC TRACK ROUTINE         @ZA27588 01895000
ICBRESV  DS  CL20            RESERVED AREA FOR FUTURE USE      @ZA27588 01895300
ICBOTRC  DS  64F             MSSC ORDER TRACE AREA             @ZD00046 01896003
ICBLORD  DS  32F             LATEST MSSC ORDER                 @ZD00046 01898003
ICBLGTH  EQU   *-ICB2SSCB    LENGTH OF CONTROL BLOCK           @Y30LB04 01900003
         MEND                                                @Y30LB04*/ 01950003
*%ICBPLS2:;                                                /*@Y30LB04*/ 02000003
*/***********************************************************@Y30LB04*/ 02050003
*/*           ***** MAPPING MACRO *****                      @Y30LB04*/ 02100003
*/*     IEZSSC - CONTROL BLOCK FOR MSSC                      @Y30LB04*/ 02150003
*/*                                                          @Y30LB04*/ 02210003
*/*     CHANGE ACTIVITY - ZD00046                            @ZD00046*/ 02220003
*/*                       G24LB02 RELEASE 3                  @G24LB02*/ 02230003
*/*   CHANGE 02 09/30/77  ADD ICBVSCRA & ICBFG3 & ICBRESVD   @ZA24770*/ 02240000
*/*   CHANGE 03 10/10/77  ADD ICBVVOLST TO ELIM AQR          @ZA27588*/ 02242000
*/***********************************************************@Y30LB04*/ 02250003
*    DCL 1 ICB2SSCB BASED(CVTICB) BDY(DWORD),              /*@Y30LB04*/ 02300003
*          2 ICBSSNAM  CHAR(8),     /* CONTROL BLOCK ACRONYM @ZM30190*/ 02350003
*          2 ICBECB    FIXED(31),   /*MSC ATTENTION ECB      @Y30LB04*/ 02360003
*          2 ICBACTV   FIXED(31),   /*MSC ACTIVITY ECB       @Y30LB04*/ 02400003
*          2 ICBCOM    FIXED(31),   /*MSC COMTASK ECB        @Y30LB04*/ 02450003
*          2 ICBIOR    FIXED(31),   /*ECB FOR I/O RESTART    @Y30LB04*/ 02510003
*          2 ICBCOMQ   POINTER(31), /*MSC COMTASK QUEUE PTR  @Y30LB04*/ 02550003
*          2 ICBPUCB   POINTER(31), /*MSC PRIMARY UCB PTR    @Y30LB04*/ 02600003
*          2 ICBAUCB   POINTER(31), /*MSC ALTERNATE UCB PTR  @Y30LB04*/ 02650003
*          2 ICBQHEAD  POINTER(31), /*MSSC RESPONSE QUEUE    @Y30LB04*/ 02700003
*                                   /*POINTER                @Y30LB04*/ 02710003
*          2 ICBTCB    POINTER(31), /*MSSC TASK TCB PTR      @Y30LB04*/ 02750003
*          2 ICBVN02P  POINTER(31), /*MSVC INITIALIZATION    @Y30LB04*/ 02800003
*                                   /*POINTER                @Y30LB04*/ 02810003
*          2 ICBOPT    POINTER(31), /*DUAL USE FIELD --      @Y30LB04*/ 02850003
*                                   /* AFTER NIP TIME,       @Y30LB04*/ 02852003
*                                   /*MSS ACTIVITY BUFFER    @Y30LB04*/ 02854003
*                                   /*POINTER                @Y30LB04*/ 02856003
*            3 ICBNVT  POINTER(31), /*DURING NIP, PTR TO NVT @Y30LB04*/ 02860003
*          2 ICBFLG,                /*MSSC FLAG WORD         @Y30LB04*/ 02900003
*            3 ICBFG1 CHAR(1),      /* FLAG BYTE 1           @Y30LB04*/ 02950003
*              4 ICBI BIT(1),       /*BIT0=1 FOR INITIALIZED @Y30LB04*/ 03000003
*              4 ICBR BIT(1),       /*BIT1=1 FOR READY       @Y30LB04*/ 03050003
*              4 ICBV BIT(1),       /*BIT2=1 FOR MSVC        @Y30LB04*/ 03060003
*                                   /*INITIALIZED            @Y30LB04*/ 03070003
*              4 ICBB BIT(1),       /*BIT3=1 FOR BROKEN BOX  @G24LB02*/ 03072003
*              4 ICBS BIT(1),       /*BIT4=1 FOR MSSC HAS    @G24LB02*/ 03080003
*                                   /*BEEN SUSPENDED         @G24LB02*/ 03090003
*              4 ICBMSCMP BIT(1),   /*MSC MP OPERATION       @G24LB05*/ 03092003
*              4 ICBMSCA BIT(1),    /*MSC ASYMMETRIC OPER.   @G24LB05*/ 03094003
*              4 *    BIT(1),       /* RESERVED              @G24LB05*/ 03100003
*            3 ICBFG2 CHAR(1),      /* FLAG BYTE 2           @Y30LB04*/ 03150003
*            3 ICBFG3 CHAR(2),     /* FLAGS FOR FUTURE USE   @ZA24770*/ 03200000
*          2 ICB2ACTP POINTER(31),  /* MSS ACTIVITY RTNE PTR @Y30LB04*/ 03300003
*          2 ICBIORCI POINTER(31),  /*PTR TO MSSC I/O        @Y30LB04*/ 03350003
*                                   /*RESTART ROUTINE        @Y30LB04*/ 03400003
*          2 ICBMEP   POINTER(31),  /*PTR TO MSSC MOUNT      @Y30LB04*/ 03450003
*                                   /*EQUALIZATION RTNE      @Y30LB04*/ 03500003
*          2 ICBSIOP  POINTER(31),  /*PTR TO MSSC I/O DRIVER @Y30LB04*/ 03510003
*                                   /*FRONT END              @Y30LB04*/ 03520003
*          2 ICBVVIC  POINTER(31),  /*PTR TO MSVC ROUTINE    @Y30LB04*/ 03550003
*          2 ICBVVICB POINTER(31),  /*PTR TO MSVC CTL BLOCK  @Y30LB04*/ 03600003
*          2 ICBSRBP  POINTER(31),  /*PTR TO MSSC SRB        @Y30LB04*/ 03800003
*          2 ICBIPRGA POINTER(31),  /*PTR TO MSSC I/O DRVR   @Y30LB04*/ 03850003
*                                   /*PURGE ROUTINE          @Y30LB04*/ 03860003
*          2 ICBIATNA POINTER(31),  /*PTR TO MSSC ATTENTION  @Y30LB04*/ 03900003
*                                   /* ROUTINE               @Y30LB04*/ 03902003
*          2 ICBSIOBP POINTER(31),  /*PTR TO MSSC I/O DRIVR  @Y30LB04*/ 03910003
*                                   /*BACK END               @Y30LB04*/ 03912003
*          2 ICBAEAP  POINTER(31),  /*PTR TO MSSC ABE RTNE   @Y30LB04*/ 03920003
*          2 ICBRSVP  POINTER(31),  /*RESERVED               @Y30LB04*/ 03930003
*          2 ICBMSSC  POINTER(31),  /*MSSC INTERNAL USE      @G24LB02*/ 03940003
*          2 ICBFAB   POINTER(31),  /*PTR TO ALLOCATION      @Y30LB04*/ 03942003
*                                   /*SERVICE ROUTINE        @Y30LB04*/ 03944003
*          2 ICBCPUID CHAR(5),      /*MSC CPUID              @ZA24770*/ 03944400
*          2 ICBRESVD CHAR(1),      /* RESVERED              @ZA24770*/ 03944500
*          2 ICBSAMP  CHAR(2),      /* MSC ACTIV SAMP TIME   @ZA24770*/ 03945100
*          2 ICBVSCRA POINTER(31),  /* PTR TO MSVC RTNE      @ZA24770*/ 03946400
*          2 ICBVOLST POINTER(31),  /* PTR TO TRACK RTNE     @ZA27588*/ 03946800
*          2 ICBRESV  CHAR(20),     /*RESERVED FIELD         @ZA27588*/ 03947000
*          2 ICBTRACE  CHAR(384),   /*MSSC TRACE AREA        @ZD00046*/ 03947600
*            3 ICBOTRC CHAR(256),   /*MSSC ORDER TRACE       @ZD00046*/ 03948200
*            3 ICBLORD CHAR(128);   /*LATEST MSSC ORDER      @ZD00046*/ 03948800
*%ICBLGTH='LENGTH(ICB2SSCB)';       /*ICB2SSCB LENGTH        @Y30LB04*/ 03950003
./  ADD  SSI=62790302,NAME=IEZSTPTB
 /*********************************************************  @G24LB18*/ 00050042
 /*                                                          @G24LB18*/ 00100042
 /* NAME - IEZSTPTB (MSVC STEP TABLE MAPPING MACRO)          @G24LB18*/ 00150042
 /*                                                          @G24LB18*/ 00200042
 /* STATUS - MVS                                             @G24LB18*/ 00250042
 /*                                                          @G24LB18*/ 00300042
 /* FUNCTION - MAPPING MACRO FOR THE MSVC STEP TABLES BUILT  @G24LB18*/ 00350042
 /*            AND MAINTAINED BY THE MSVC TABLE PROCESSOR    @G24LB18*/ 00400042
 /*            (ICBVTP00). THESE TABLES CONTAIN DD           @G24LB18*/ 00450042
 /*            INFORMATION ON A JOB STEP BASIS WHICH MSVC    @G24LB18*/ 00500042
 /*            USES IN SELECTING VOLUMES TO SATISFY MSVGP    @G24LB18*/ 00550042
 /*            REQUESTS AND IN KEEPING TRACK OF AVAILABLE    @G24LB18*/ 00600042
 /*            SPACE ON GENERAL-USE GROUP VOLUMES. EACH STEP @G24LB18*/ 00650042
 /*            TABLE CONSISTS OF A HEADER (STPTB) FOR THE    @G24LB18*/ 00700042
 /*            STEP AND A DD ENTRY (STPDDENT) FOR EACH       @G24LB18*/ 00750042
 /*            VIRTUAL DD IN THE STEP.                       @G24LB18*/ 00800042
 /*                                                          @G24LB18*/ 00850042
 /*********************************************************  @G24LB18*/ 00900042
 DCL                                                                    00950042
    1  STPTB  BDY(WORD) BASED,      /* MSVC STEP TABLE       @G24LB18*/ 01000042
                                    /* HEADER                @G24LB18*/ 01050042
       2  STPNXTTB PTR(31),         /* NEXT STEP TABLE PTR   @G24LB18*/ 01100042
       2  STPPRVTB PTR(31),         /* PREVIOUS STEP TABLE   @G24LB18*/ 01150042
                                    /* PTR                   @G24LB18*/ 01200042
       2  STPJOBID FIXED(31),       /* TCB ADDR(VS1) OR      @G24LB18*/ 01250042
                                    /* ASID(MVS)             @G24LB18*/ 01300042
       2  STPHDRLN FIXED(15),       /* LENGTH OF HEADER      @G24LB18*/ 01350042
       2  STPFLAGS,                 /* STEP FLAGS            @G24LB18*/ 01400042
          3  STPINVAL BIT(1),       /* STEP TABLE INVALID    @G24LB18*/ 01450042
          3  STPNOFRE BIT(1),       /* DON'T FREE STEP TABLE @G24LB18*/ 01500042
          3  *        BIT(6),       /* UNUSED                @G24LB18*/ 01550042
       2  STPICCGR FIXED(8),        /* INITIAL CALL COUNTER  @G24LB18*/ 01600000
       2  STPDDPTR PTR(31);         /* 1ST DD ENTRY PTR      @G24LB18*/ 01650042
 DCL                                                                    01700042
    1  STPDDENT BASED,              /* DD ENTRY              @G24LB18*/ 01750042
       2  STPDDNXT PTR(31),         /* NEXT DD ENTRY PTR     @G24LB18*/ 01800042
       2  STPDDLEN FIXED(15),       /* LENGTH OF ENTRY       @G24LB18*/ 01850042
       2  STPDDNUM FIXED(15),        /* INTERNAL DD NUMBER    @G24LB18*/01900042
       2  STPDDDVT CHAR(4),         /* INTERNAL DEVICE TYPE  @G24LB18*/ 02200042
                                    /* OR UCB ADDR IF        @G24LB18*/ 02250042
                                    /* SPECIFIC UNIT ADDR    @G24LB18*/ 02300042
                                    /* REQUEST               @G24LB18*/ 02350042
       2  STPDDGPN CHAR(8),         /* GROUP NAME            @G24LB18*/ 02400042
       2  STPDDGPI FIXED(8),        /* GROUP EXTENSION INDEX @G24LB18*/ 02450042
       2  STPDDGPS FIXED(8),        /* GROUP EXTENSION SLOT  @G24LB18*/ 02500042
                                    /* NUMBER                @G24LB18*/ 02550042
       2  STPDDPRM FIXED(15),       /* PRIMARY SPACE IN CYL  @G24LB18*/ 02600042
       2  STPDDFLG,                 /* DD FLAGS              @G24LB18*/ 02610042
          3  STPDDEXC BIT(1),       /* EXCLUSIVE USE REQUEST @G24LB18*/ 02620042
          3  STPDDSPL BIT(1),       /* PRIMARY OR SECONDARY  @G24LB18*/ 02630042
                                    /* SPLIT                 @G24LB18*/ 02640042
          3  *        BIT(6),       /* UNUSED                @G24LB18*/ 02642042
       2  STPDDNVL FIXED(8),        /* NO. OF VOL SERS       @G24LB18*/ 02650042
       2  STPDDVOL(*) CHAR(6);      /* VOL SER(S)            @G24LB18*/ 02750042
./  ADD  SSI=62790305,NAME=IEZTABP
 /*********************************************************  @G24LB18*/ 00050042
 /*                                                          @G24LB18*/ 00100042
 /* NAME - IEZTABP (TABLE PROCESSOR PARAMETER LIST MAPPING   @G24LB18*/ 00150042
 /*                 MACRO)                                   @G24LB18*/ 00200042
 /*                                                          @G24LB18*/ 00250042
 /* STATUS - MVS                                             @G24LB18*/ 00300042
 /*                                                          @G24LB18*/ 00350042
 /* FUNCTION - MAPPING MACRO FOR THE MSVC TABLE PROCESSOR    @G24LB18*/ 00400042
 /*            (ICBVTP00) PARAMETER LIST. THIS LIST DEFINES  @G24LB18*/ 00450042
 /*            THE FUNCTION TO BE PERFORMED BY THE TABLE     @G24LB18*/ 00500042
 /*            PROCESSOR AND CONTAINS THE INPUTS TO THE      @G24LB18*/ 00550042
 /*            TABLE PROCESSOR AND THE OUTPUTS FROM THE      @G24LB18*/ 00600042
 /*            TABLE PROCESSOR.                              @G24LB18*/ 00650042
 /*                                                          @G24LB18*/ 00700042
 /*********************************************************  @G24LB18*/ 00750042
 DCL                                                                    00800042
    1 TABP  BDY(WORD) BASED,        /* TABLE PROCESSOR REQ   @G24LB18*/ 00850042
                                    /* PARM LIST             @G24LB18*/ 00900042
      2  TABFLAGS,                  /* TABLE PROCESSOR FUNC  @G24LB18*/ 00950042
         3  TABFBLDE BIT(1),        /* BUILD DD ENTRY FUNC   @G24LB18*/ 01000042
         3  TABFSRCD BIT(1),        /* SEARCH FOR DD ENTRY   @G24LB18*/ 01050042
                                    /* FUNC                  @G24LB18*/ 01100042
         3  TABFBFIT BIT(1),        /* UPDATE BEST FIT TABLE @G24LB18*/ 01150042
                                    /* FUNC                  @G24LB18*/ 01200042
         3  TABFTSPC BIT(1),        /* GET TOTAL SPACE FOR   @G24LB18*/ 01250042
                                    /* VOLSER FUNC           @G24LB18*/ 01300042
         3  TABFUTRM BIT(1),        /* UNSUCCESSFUL          @G24LB18*/ 01350042
                                    /* TERMINATION FUNC      @G24LB18*/ 01400042
         3  TABFFREE BIT(1),        /* FREE STEP TABLE FUNC  @G24LB18*/ 01450042
         3  *        BIT(2),        /* UNUSED                @G24LB18*/ 01500042
      2  *        CHAR(1),          /* UNUSED                @G24LB18*/ 01510042
      2  TABVOLID CHAR(6),          /* VOL SER FOR SEARCH    @G24LB18*/ 01600042
         3  TABDDNUM FIXED(15),     /* DD # FOR SEARCH       @G24LB18*/ 01610042
         3  TABSELRB PTR(31),       /* SELECT REQ BLOCK ADDR @G24LB18*/ 01700042
            4  TABJOBID FIXED(31),  /* TCB ADDR(VS1) OR      @G24LB18*/ 01750042
                                    /* ASID(MVS)             @G24LB18*/ 01800042
               5  TABBFTBL PTR(31), /* BEST FIT TABLE ADDR   @G24LB18*/ 01850042
      2  TABDDRET PTR(31),          /* DD ENTRY ADDR RET     @G24LB18*/ 01900042
                                    /* AREA                  @G24LB18*/ 01950042
         3  TABHDRET PTR(31),       /* STEP TABLE HEADER     @G24LB18*/ 02000042
                                    /* ENTRY ADDR RETURN     @G24LB18*/ 02050042
                                    /* AREA                  @G24LB18*/ 02100042
            4  TABSPRET FIXED(15),  /* SELECTED SPACE RET    @G24LB18*/ 02150042
                                    /* AREA                  @G24LB18*/ 02200042
            4  *        CHAR(2);    /* UNUSED                @G24LB18*/ 02250042
./  ADD  SSI=62790306,NAME=IEZUNITP
 /********************************************************************/ 00050000
 /*                                                          @G24LB37*/ 00200000
 /*          NAME:  IEZUNITP                                 @G24LB37*/ 00250000
 /*                                                          @G24LB37*/ 00300000
 /*          FUNCTION:                                       @G24LB37*/ 00350000
 /*          MAPS THE REQUEST PARAMETER LIST FOR THE UNIT    @G24LB37*/ 00500000
 /*          PROCESSOR FUNCTION.  REGISTER 1 MUST POINT TO   @G24LB37*/ 00550000
 /*          THIS PARAMETER LIST WHEN THE REQUEST IS         @G24LB37*/ 00560000
 /*          EXECUTED.                                       @G24LB37*/ 00570000
 /*                                                          @G24LB37*/ 00600000
 /*          STATUS:  MVS                                    @G24LB37*/ 00650000
 /*                                                          @G24LB37*/ 00700000
 /*          CHANGE LEVEL:  NONE                             @G24LB37*/ 00702000
 /*                                                          @G24LB37*/ 00710000
 /********************************************************************/ 00750000
     DCL 1 UNITP BDY(WORD) BASED,    /* UNIT PROCESSOR RPL   @G24LB37*/ 00850000
           2 UNIDEVTP CHAR(4),       /* DEVICE TYPE          @G24LB37*/ 00900000
           2 UNIVOL   CHAR(6),       /* VOLUME SERIAL        @G24LB37*/ 00950000
           2 *        CHAR(2),       /* UNUSED               @G24LB37*/ 01000000
           2 UNIUCBP  PTR(31),       /* UCB ADDRESS          @G24LB37*/ 01050000
           2 UNIFLAGS,               /* REQUEST FLAGS        @G24LB37*/ 01100000
             3 UNIFMTD  BIT(1),      /* VOLUME MOUNTED       @G24LB37*/ 01150000
             3 UNIFINCL BIT(1),      /* UNIT INCLUDED        @G24LB37*/ 01200000
             3 UNIFALLV BIT(1),      /* UNITS ALL 3330V      @G24LB37*/ 01250000
             3 *        BIT(5);      /* UNUSED               @G24LB37*/ 01300000
./  ADD  SSI=62790307,NAME=IEZVOLRT
 /*********************************************************  @G24LB18*/ 00050000
 /*                                                          @G24LB18*/ 00100000
 /* NAME - IEZVOLRT (VOL SER RETURN AREA MAPPING MACRO)      @G24LB18*/ 00150000
 /*                                                          @G24LB18*/ 00200000
 /* STATUS - MVS                                             @G24LB18*/ 00250000
 /*                                                          @G24LB18*/ 00300000
 /* FUNCTION - MAPPING MACRO FOR THE VOL SER RETURN AREA.    @G24LB18*/ 00350000
 /*            THIS AREA IS PASSED TO MSVC BY ALLOCATION     @G24LB18*/ 00400000
 /*            FOR EACH MSVGP DD WHICH REQUIRES SELECTION    @G24LB18*/ 00450000
 /*            OF VOLUMES BY MSVC. MSVC PLACES THE VOL SERS  @G24LB18*/ 00500000
 /*            OF THE SELECTED VOLUMES IN THIS AREA AND      @G24LB18*/ 00550000
 /*            RETURNS IT TO ALLOCATION. THE AREA IS POINTED @G24LB18*/ 00600000
 /*            TO BY THE SELECT REQUEST BLOCK (FIELD         @G24LB18*/ 00650000
 /*            SELVLRET). ALLOCATION FILLS IN THE LENGTH OF  @G24LB18*/ 00700000
 /*            THE AREA AND MSVC FILLS IN THE NUMBER OF      @G24LB18*/ 00750000
 /*            VOLUMES SELECTED AND THE SELECTED VOL SERS.   @G24LB18*/ 00800000
 /*                                                          @G24LB18*/ 00850000
 /*********************************************************  @G24LB18*/ 00900000
 DCL                                                                    00950000
    1  VOLRT  BDY(WORD) BASED(SELVLRET), /* VOL SER RETURN   @G24LB18*/ 01000000
                                    /*AREA                   @G24LB18*/ 01050000
       2  VOLLEN   FIXED(15),       /* LENGTH OF RET AREA    @G24LB18*/ 01100000
       2  VOLNUM   FIXED(15),       /* NO. OF VOL SERS       @G24LB18*/ 01150000
       2  VOLSER(*) CHAR(6);        /* VOL SER(S)            @G24LB18*/ 01200000
./  ADD  SSI=80110020,NAME=IEZVVICB
*/********************************************************************/ 00310003
*/*          MACCOMP  Y30LB22          SC1DR/BL0019          @Y30LB22*/ 00360003
*/*          MACSTAT  Y30LB22          74/213/341040         @Y30LB22*/ 00410042
*/*                                                          @Y30LB22*/ 00460003
*/*          NAME: IEZVVICB                                  @Y30LB22*/ 00510003
*/*                                                          @Y30LB22*/ 00560003
*/*          FUNCTION:                                       @Y30LB22*/ 00610003
*/*                  MAPS THE MSSC VOLUME CONTROL BLOCK      @Y30LB22*/ 00612003
*/*                                                          @Y30LB22*/ 00660003
*/*          STATUS:  MVS                                    @G24LB04*/ 00710042
*/*                                                          @Y30LB22*/ 00760003
*/*   CHANGE-ACTIVITY = AS FOLLOWS                           @YM31134*/ 00770003
*/*      CHANGE 01 10/14/75 MSVI MULTI-HOST SHARABILITY      @YM31134*/ 00772003
*/*      CHANGE 02 05/13/76 ALLOCATE TO MOUNTED VOLUMES      @G24LB04*/ 00774042
*/*      CHANGE 03 07/14/77 SAVE AREA FOR OPCODE             @ZA26243*/ 00776000
*/*      CHANGE 04 10/20/77 ELIMINATE REDUN ACQUIRE          @ZA27588*/ 00778000
*/*                                                          @YM31134*/ 00780003
*/********************************************************************/ 00810003
*DCL                                                                    03200003
*  1   VVICB     BASED (VVIPTR) BDY(WORD),                 /*@Y30LB22*/ 03210003
*     2   VVICID        CHAR(4),    /* CTL BLOCK ID  'MSVC'  @Y30LB22*/ 03250003
*     2   VVIUCAT       CHAR(8),    /* USER CATALOG NAME     @Y30LB22*/ 03300003
*     2   VVICPUID      CHAR(2),    /* CPU ASSOCIATION MASK  @Y30LB22*/ 03350003
*     2   VVIALCON      CHAR(1),    /* LIB ALTERNATE CONSOLE @Y30LB22*/ 03400003
*     2   VVIFLGA       CHAR(1),    /* STATUS FLAG           @Y30LB22*/ 03450003
*       3   VVIFLG0       BIT(1),   /* BIT 0=1 TOTAL DISABLE @Y30LB22*/ 03500003
*       3   VVIFLG1       BIT(1),   /* BIT 1=1 INTERNAL      @YM31134   03550003
                                       DISABLE               @YM31134*/ 03552003
*       3   VVIFLG2       BIT(1),   /* BIT 2=1 JRNL. DISABLE @Y30LB22*/ 03560003
*       3   VVIFLG3       BIT(1),   /* BIT 3=1 MSGS JRNL.    @Y30LB22*/ 03600003
*       3   VVIFLG4       BIT(1),   /* BIT 4=1 DEQ REQ'D     @Y30LB22   03610003
                                       FOR INVENTORY         @Y30LB22*/ 03612003
*       3   VVIFLG5       BIT(1),   /* BIT 5=1 DEQ REQ'D     @Y30LB22   03622003
                                       FOR JOURNAL           @Y30LB22*/ 03632003
*       3   VVIFLG6       BIT(1),   /* BIT 6=1 WHEN SUBTASK  @G24LB04   03642042
                                       HOLDS LOCAL LOCK      @G24LB04*/ 03644042
*       3   VVIFLG7       BIT(1),   /* BIT 7=1 WHEN SUBTASK  @G24LB04   03646042
                                       HOLDS CMS LOCK        @G24LB04*/ 03648042
*     2   VVIACBAD      PTR(31),    /* USERCAT ACB ADDR      @Y30LB22*/ 03700003
*     2   VVIDCBAD      PTR(31),    /* USERCAT JRNL DCB ADDR @Y30LB22*/ 03750003
*     2   VVICATAD      PTR(31),    /* USER CATALOG ACB ADDR @Y30LB22*/ 03760003
*     2   VVIECB1       PTR(31),    /* ICBVVI00 ECB          @Y30LB22*/ 03800003
*     2   VVIVQMP       PTR(31),    /* QUEUE MANAGER POINTER @Y30LB22*/ 03810003
*     2   VVIOPCD       CHAR(1),    /* SAVE AREA FOR OPCODE  @ZA26243*/ 03830000
*     2   VVIVTRK       CHAR(3),    /* VOL TRKING COUNT      @ZA27588*/ 03840000
*     2   VVIQRPL1      PTR(31),    /* HIGH PRI RPLV QUE PTR @Y30LB22*/ 03850003
*     2   VVIQRPL2      PTR(31),    /* LOW PRI RPLV QUE PTR  @Y30LB22*/ 03900003
*     2   VVIQLSPL      PTR(31),    /* DEMOUNT LSPACE        @Y30LB22   03950003
*                                      PARAMETER LIST        @Y30LB22*/ 03960003
*     2   VVIVRR        PTR(31),    /* RES/REL W/AREA PTR    @Y30LB22*/ 04020000
*     2   VVIVJL        PTR(31),    /* JRNL PROC W/AREA PTR  @Y30LB22*/ 04050003
*     2   VVIUCB        PTR(31),    /* UCB ADDR TABLE PTR    @Y30LB22*/ 04100003
*     2   VVIRES4       PTR(31),    /* RES - USER TASK POST  @Y30LB22*/ 04110003
*     2   VVIRES5       PTR(31),    /* RES - USER TASK POST  @Y30LB22*/ 04120003
*     2   VVIRES6       PTR(31),    /* RES - USER TASK POST  @Y30LB22*/ 04130003
*     2   VVIIUCB       PTR(31),    /* MSVI UCB PTR          @YM31134*/ 04200003
*     2   VVIJUCB       PTR(31),    /* JRNL UCB PTR          @YM31134*/ 04250042
*     2   VVIDVMTA      PTR(31),    /* DEVICE MASK TABLE     @G24LB04   04300042
                                       ADDRESS               @G24LB04*/ 04310042
*     2   VVISTPTB      PTR(31),    /* MSVC STEP TABLE ADDR  @G24LB04*/ 04400042
*     2   VVIVSCRA      PTR(31),    /* MSVC SCREENING MODULE @G24LB04   04450042
                                       ADDRESS               @G24LB04*/ 04500042
*     2   VVISSOBA      PTR(31),    /* ADDR OF SSOB FOR      @G24LB04   04550042
                                        ALLOCATE TO MTD VOL  @G24LB04*/ 04600042
*     2   VVIVBSTF      PTR(31),    /* ADDR OF EXTRA STORAGE @G24LB04   04650042
                                      FOR VOL BEST FIT TABLE @G24LB04*/ 04700042
*     2   VVIDVMEL      FIXED(31),  /* LENGTH OF MASK IN DEV @G24LB04   04750042
                                       MASK TABLE ENTRY      @G24LB04*/ 04800042
*     2   VVITPFCH      PTR(31),    /* MSVC FREE CHAIN PTR   @G24LB04*/ 04810042
*     2   VVINUSDC      CHAR(4),    /* UNUSED                @G24LB04*/ 04850042
*     2   VVIUNUSD      FIXED(31);  /* UNUSED                @G24LB04*/ 04900042
./  ADD  SSI=53120271,NAME=ISDACSB5
                                                                        01000003
    /*****************************************************************/ 01500003
    /*                                                               */ 02000003
    /* DECLARES FOR CONSTANTS FOR ISDACSB0 AND 1             @Y30LB50*/ 02500003
    /*                                                               */ 03000003
    /*****************************************************************/ 03500003
                                                                        04000003
    DCL                                                                 04500003
      CVTPTR PTR(31) REG(2) RSTD;   /* WORKPTR SAVED         @Y30LB50*/ 05000003
    DCL                                                                 05500003
      RETCODE FIXED(31) REG(3) RSTD;/* RETURN CODE-ISDASDA0  @Y30LB50*/ 06000003
    DCL                                                                 06500003
      WORKPTR PTR(31);              /* INPUT PARM FROM IFCSDA00--       07000003
                                       POINTER TO SDACVT     @Y30LB50*/ 07500003
    DCL                                                                 08000003
      BLOCKKNT FIXED(15) CONSTANT(23);/* COUNT OF RECORDS THAT CAN BE   08500003
                                       HELD IN ONE BLOCK     @Y30LB50*/ 09000003
    DCL                                                                 09500003
      MAXCSS FIXED(15) CONSTANT(4); /* NUMBER OF CS'S POSSIBLE          10000003
                                                             @Y30LB50*/ 10500003
    DCL                                                                 11000003
      CSBSPNO BIT(8) CONSTANT('01'X);/* SUBPOOL NUMBER FOR CSB AND      11500003
                                       CSF ACCUMULATOR REQUESTS         12000003
                                                             @Y30LB50*/ 12500003
    DCL                                                                 13000003
      NFORCED FIXED(15) CONSTANT(4);/* NUMBER OF FORCED SENSE LOGS      13500003
                                       AFTER AN ERROR BUFFERED LOG      14000003
                                                             @Y30LB50*/ 14500003
    DCL                                                                 15000003
      R15 FIXED(31) REG(15) UNRSTD; /*                       @Y30LB50*/ 15500003
    DCL                                                                 16000003
      R0 FIXED(31) REG(0) UNRSTD;   /*                       @Y30LB50*/ 16500003
    DCL                                                                 17000003
      R1 FIXED(31) REG(1) UNRSTD;   /*                       @Y30LB50*/ 17500003
    DCL                                                                 18000003
      LWORKPTR PTR(31) REG(9) RSTD; /* WORKAREA PTR          @Y30LB50*/ 18500003
    DCL                                                                 19000003
      CSPTR PTR(31) REG(8) RSTD;    /* CS TABLE PTR          @Y30LB50*/ 19500003
    DCL                                                                 20000003
      ON BIT(1) CONSTANT('1'B);     /* MASK FOR DETERMINING SETTING     20500003
                                       OF BIT                @Y30LB50*/ 21000003
    DCL                                                                 21500003
      WORKSPNO CHAR(1) STATIC LOCAL INIT('00'X);/* SUBPOOL NUMBER FOR   22000003
                                       CSB WORK AREA         @Y30LB50*/ 22500003
    DCL                                                                 23000003
      1 PATCH CHAR(50) STATIC LOCAL,                                    23500003
       2 *(50) CHAR(1) INIT((50)'00'X);/* MAINTENANCE AREA   @Y30LB50   24000003
                                                                     */ 24500003
 @EJECT;                                                                25000003
    DCL                             /* DESCRIPTION OF INFO. FOR         25500003
                                       COLLECTING AND FORMATTING        26000003
                                       BUFFERED LOG DATA AND FORCED     26500003
                                       LOG DATA BY CS NUMBER @Y30LB50*/ 27000003
      1 CSTBLS BASED(CSPTR),        /*                       @Y30LB50*/ 27500003
       2 BFRCNT FIXED(15),          /* TOTAL-BUFFERED LOGS COLLECTED    28000003
                                                             @Y30LB50*/ 28500003
       2 FBFRCNT FIXED(15),         /* TOTAL-ERROR LOGS COLLECTED       29000003
                                                             @Y30LB50*/ 29500003
       2 ACCUM PTR(31),             /* ADDR OF FIRST CSB BLK FOR CS     30000003
                                                             @Y30LB50*/ 30500003
       2 ACCMPTR PTR(31),           /* ADDR OF CURRENT CSB BLOCK        31000003
                                                             @Y30LB50*/ 31500003
       2 NEXTCSB PTR(31),           /* ADDR TO STORE NEXT CSB RECORD    32000003
                                                             @Y30LB50*/ 32500003
       2 CSBCNT FIXED(15),          /* COUNT OF CSB LOGS IN CURR BLK    33000003
                                                             @Y30LB50*/ 33500003
       2 FRCDLOGS FIXED(15),        /* COUNT OF FORCED LOGS EXPECTED    34000003
                                                             @Y30LB50*/ 34500003
       2 CSBFIRST PTR(31),          /* PTR TO EARLIEST CSB RECORD       35000003
                                                             @Y30LB50*/ 35500003
       2 FACCUM PTR(31),            /* ADDR OF FIRST CSF BLK FOR CS     36000003
                                                             @Y30LB50*/ 36500003
       2 FACCMPTR PTR(31),          /* ADDR OF CURRENT CSF BLOCK        37000003
                                                             @Y30LB50*/ 37500003
       2 NEXTCSF PTR(31),           /* ADDR TO STORE NEXT CSF LOG       38000003
                                                             @Y30LB50*/ 38500003
       2 CSFFIRST PTR(31),          /* PTR TO EARLIEST CSF RECORD       39000003
                                                             @Y30LB50*/ 39500003
       2 CSFCNT FIXED(15),          /* COUNT OF CSF LOGS IN CURR BLK    40000003
                                                             @Y30LB50*/ 40500003
       2 CSNUMB CHAR(1),            /* CS NBR FOR THIS TABLE @Y30LB50*/ 41000003
       2 FILL2 CHAR(1);             /* FILLER BYTE FOR ALIGNMENT        41500003
                                                             @Y30LB50*/ 42000003
    %CSTBLSL='LENGTH(CSTBLS)';      /*                       @Y30LB50   42500003
                                                                     */ 43000003
 @EJECT;                                                                43500003
    DCL                             /* DESCRIPTION OF USAGE BUFFER      44000003
                                       LOG DATA SAVED        @Y30LB50*/ 44500003
      1 CSBDATA BASED(NEXTCSB),     /*                       @Y30LB50*/ 45000003
       2 CHAINPTR PTR(31),          /* CHAIN PTR FOR TIME SORTING       45500003
                                                             @Y30LB50*/ 46000003
       2 DAYTIME CHAR(8),           /* DAY AND TIME OF LOG   @Y30LB50*/ 46500003
        3 CSBDAY CHAR(4),           /* DAY AND YEAR OF RECORD           47000003
                                                             @Y30LB50*/ 47500003
         4 CSBYR CHAR(2),           /* YEAR OF RECORD        @Y30LB50*/ 48000003
         4 CSBDATE CHAR(2),         /* DAY OF RECORD         @Y30LB50*/ 48500003
        3 CSBTIME CHAR(4),          /* TIME-BUFFERED LOG RECORD         49000003
                                                             @Y30LB50*/ 49500003
         4 CSBHR CHAR(1),           /* HOUR OF RECORD        @Y30LB50*/ 50000003
         4 CSBMIN CHAR(1),          /* MINUTES OF RECORD     @Y30LB50*/ 50500003
         4 CSBSEC CHAR(1),          /* SECONDS OF RECORD     @Y30LB50*/ 51000003
         4 CSBHSEC CHAR(1),         /* HUNDREDTHS OF SECONDS @Y30LB50*/ 51500003
       2 CSBMSC CHAR(4),            /* MSC SENSE             @Y30LB50*/ 52000003
       2 CSBREC CHAR(24),           /* 24 BYTES OF BUFFERED RECORD      52500003
                                                             @Y30LB50*/ 53000003
        3 CSBSNSBY CHAR(2),         /* STATUS BYTES          @Y30LB50*/ 53500003
        3 CSB1CNTS CHAR(22);        /* BUFFERED LOG DATA COUNTS         54000003
                                                             @Y30LB50*/ 54500003
    %CSBDATAL='LENGTH(CSBDATA)';    /*                       @Y30LB50   55000003
                                                                     */ 55500003
 @EJECT;                                                                56000003
    DCL                             /* DESCRIPTION OF ERROR BUFFERED    56500003
                                       LOG DATA AND FORCED SENSE DATA   57000003
                                       SAVED                 @Y30LB50*/ 57500003
      1 CSFDATA BASED(NEXTCSF),     /*                       @Y30LB50*/ 58000003
       2 CSFCHAIN PTR(31),          /* CHAIN PTR FOR TIME SORTING       58500003
                                                             @Y30LB50*/ 59000003
       2 CSFDTIM CHAR(8),           /* DAY AND TIME OF LOG   @Y30LB50*/ 59500003
        3 CSFDAY CHAR(4),           /* DAY OF FORCED SENSE DATA SAVED   60000003
                                                             @Y30LB50*/ 60500003
        3 CSFTIME CHAR(4),          /* TIME OF FORCED SENSE DATA        61000003
                                                             @Y30LB50*/ 61500003
       2 CSFMSC CHAR(4),            /* MSC SENSE             @Y30LB50*/ 62000003
       2 CSFREC CHAR(28),           /* ERROR BUFFERED LOG-FORCED        62500003
                                       SENSE                 @Y30LB50*/ 63000003
        3 CSFSNS1 BIT(8),           /*                       @Y30LB50*/ 63500003
        3 CSFSNS2 BIT(8),           /*                       @Y30LB50*/ 64000003
         4 CSFBITS BIT(7),          /*                       @Y30LB50*/ 64500003
         4 CSFBFRBT BIT(1),         /* BUFFERED LOG DATA BIT @Y30LB50*/ 65000003
        3 CSFBYTES CHAR(26);        /*                       @Y30LB50*/ 65500003
    %CSFDATAL='LENGTH(CSFDATA)';    /*                       @Y30LB50   66000003
                                                                     */ 66500003
 @EJECT;                                                                67000003
    DCL                             /* WORK AREA FOR CS BUFFER LOG      67500003
                                       ROUTINES              @Y30LB50*/ 68000003
      1 CSBWORK BASED(LWORKPTR),    /*                       @Y30LB50*/ 68500003
       2 LOGPTR PTR(31),            /* ADDR OF HEADER INFO   @Y30LB50*/ 69000003
       2 NRECORD PTR(31),           /* PTR TO RECORD FOR TIME SORTING   69500003
                                                             @Y30LB50*/ 70000003
       2 PRECORD PTR(31),           /* PTR TO RECORD FOR TIME SORTING   70500003
                                                             @Y30LB50*/ 71000003
       2 STARTADR PTR(31),          /* CALLING PARM FOR CSBSORT         71500003
                                                             @Y30LB50*/ 72000003
       2 CURRADR PTR(31),           /* CALLING PARM FOR CSBSORT         72500003
                                                             @Y30LB50*/ 73000003
       2 CSTPTRS(4) PTR(31),        /* POINTERS TO CS TABLES @Y30LB50*/ 73500003
       2 NBRWORK CHAR(2),           /* SAVE CS NUMBER ALONE  @Y30LB50*/ 74000003
       2 I FIXED(15),               /* INDEX FOR LOOPING     @Y30LB50*/ 74500003
       2 SUMU FIXED(31),            /* USAGE COUNT FOR SUMMARY REPORT   75000003
                                                             @Y30LB50*/ 75500003
       2 SUMX FIXED(31),            /* X-STRIP CHKS FOR SUMMARY         76000003
                                       REPORT                @Y30LB50*/ 76500003
       2 SUMY FIXED(31),            /* Y-STRIP CHKS FOR SUMMARY         77000003
                                       REPORT                @Y30LB50*/ 77500003
       2 SUMS(12) FIXED(15),        /* TOTALS FOR SUMMARY REPORT        78000003
                                                             @Y30LB50*/ 78500003
       2 FRETCODE CHAR(2),          /* RETURN CODE FOR CSF REPORT       79000003
                                                             @Y30LB50*/ 79500003
       2 BRETCODE CHAR(2),          /* RETURN CODE FOR CSB REPORT       80000003
                                                             @Y30LB50*/ 80500003
       2 CNTINDX FIXED(15),         /* INDEX TO ACCESSOR COUNTS         81000003
                                                             @Y30LB50*/ 81500003
       2 ACCTOT FIXED(15),          /* COUNT OF RECORDS FOR ACCESSOR    82000003
                                                             @Y30LB50*/ 82500003
       2 PAGECNT FIXED(15),         /* COUNT OF RECORDS OR GROUPS ON    83000003
                                       PAGE                  @Y30LB50*/ 83500003
       2 HOLDDBL CHAR(8),           /* DOUBLE WORD FOR CONVERTING TO    84000003
                                       DECIMAL               @Y30LB50*/ 84500003
        3 HOLD0 CHAR(4),            /*                       @Y30LB50*/ 85000003
        3 HOLD2 CHAR(4),            /* OUTPUT CONVERSION WORKAREA       85500003
                                                             @Y30LB50*/ 86000003
         4 HOLD1 CHAR(1),           /*                       @Y30LB50*/ 86500003
         4 HOLD CHAR(3),            /*                       @Y30LB50*/ 87000003
       2 KWORK BINARY(16),          /* OUTPUT CONVERSION WORKAREA       87500003
                                                             @Y30LB50*/ 88000003
        3 CWORK CHAR(2),            /*                       @Y30LB50*/ 88500003
       2 GROUPS FIXED(15),          /* COUNT OF RECORDS TO SUMMARIZE    89000003
                                       TOGETHER FOR ONE GROUP           89500003
                                                             @Y30LB50*/ 90000003
       2 REMNDR FIXED(15),          /* COUNT OF EXTRA RECORDS TO        90500003
                                       SPREAD OUT, 1 PER SUMMARY        91000003
                                       GROUP                 @Y30LB50*/ 91500003
       2 GINDEX FIXED(15),          /* LOOP COUNTER FOR SUMMARIZING     92000003
                                                             @Y30LB50*/ 92500003
       2 J FIXED(15),               /* INDEX FOR LOOPING     @Y30LB50*/ 93000003
       2 K FIXED(15),               /* INDEX FOR LOOPING     @Y30LB50*/ 93500003
       2 L FIXED(15),               /* INDEX FOR LOOPING     @Y30LB50*/ 94000003
       2 M FIXED(15),               /* INDEX FOR LOOPING     @Y30LB50*/ 94500003
       2 FILLXX CHAR(2);            /* ALIGNED SPACE FOR CS TABLES      95000003
                                                             @Y30LB50*/ 95500003
    %CSBWORKL='LENGTH(CSBWORK)';    /*                       @Y30LB50*/ 96000003
./  ADD  SSI=53120272,NAME=ISDACVT
                                                                        00800003
    /*****************************************************************/ 01600003
    /*                                                               */ 02400003
    /* ISDACVT - SDA CONTROL VECTOR TABLE                            */ 03200003
    /*                                                               */ 04000003
    /*****************************************************************/ 04800003
                                                                        05600003
 /* %INCLUDE ISDADCLS(ISDACVT)                               @Y30LB55*/ 06400003
                                                                        07200003
    DCL                             /* SDA CONTROL VECTOR TABLE         08000003
                                                             @Y30LB55*/ 08800003
      1 ISDACVT BASED(CVTPTR),                                          09600003
       2 CVTPTRS0,                  /* PROC WORK POINTERS    @Y30LB55*/ 10400003
        3 DATAPTR PTR(31),          /* -> LOG RECORD (0)     @Y30LB55*/ 11200003
        3 SDATAPTR PTR(31),         /* -> SENSE DATA (4)     @Y30LB55*/ 12000003
        3 PARMPTR PTR(31),          /* -> SDA PARM TABLE (8) @Y30LB55*/ 12800003
        3 SDA00PTR PTR(31),         /* -> ISDASDA0 WORK AREA (12)       13600003
                                                             @Y30LB55*/ 14400003
        3 PARM0PTR PTR(31),         /* -> SDA PARM FIELD (16)@Y30LB55*/ 15200003
        3 TYPE0PTR PTR(31),         /* -> ISDATYPE WORKAREA (20)        16000003
                                                             @Y30LB55*/ 16800003
        3 GET00PTR PTR(31),         /* -> ISDAGET0 WORK AREA (24)       17600003
                                                             @Y30LB55*/ 18400003
        3 PRT00PTR PTR(31),         /* -> ISDAPRT0 WORK AREA (28)       19200003
                                                             @Y30LB55*/ 20000003
        3 HIST0PTR PTR(31),         /* -> ISDAHIST WORKAREA (32)        20800003
                                                             @Y30LB55*/ 21600003
        3 LOG00PTR PTR(31),         /* -> ISDALOG0 WORK AREA (36)       22400003
                                                             @Y30LB55*/ 23200003
        3 DCS00PTR PTR(31),         /* -> ISDADCS0 WORK AREA (40)       24000003
                                                             @Y30LB55*/ 24800003
        3 PAD00PTR PTR(31),         /* -> ISDAPAD0 WORK AREA (44)       25600003
                                                             @Y30LB55*/ 26400003
        3 SUM00PTR PTR(31),         /* -> ISDASUM0 WORK AREA (48)       27200003
                                                             @Y30LB55*/ 28000003
        3 DHE00PTR PTR(31),         /* -> ISDADHE0 WORK AREA (52)       28800003
                                                             @Y30LB55*/ 29600003
        3 FSC00PTR PTR(31),         /* -> ISDAFSC0 WORK AREA (56)       30400003
                                                             @Y30LB55*/ 31200003
        3 EQC00PTR PTR(31),         /* -> ISDAEQC0 WORK AREA (60)       32000003
                                                             @Y30LB55*/ 32800003
        3 DCK00PTR PTR(31),         /* -> ISDADCK0 WORK AREA (64)       33600003
                                                             @Y30LB55*/ 34400003
        3 CSB00PTR PTR(31),         /* -> ISDACSB0 WORK AREA (68)       35200003
                                                             @Y30LB55*/ 36000003
        3 DAT00PTR PTR(31),         /* -> ISDADAT0 WORK AREA (72)       36800003
                                                             @Y30LB55*/ 37600003
        3 DRC00PTR PTR(31),         /* -> ISDADRC0 WORK AREA (76)       38400003
                                                             @Y30LB55*/ 39200003
        3 APR00PTR PTR(31),         /* -> ISDAAPR0 WORK AREA (80)       40000003
                                                             @Y30LB55*/ 40800003
        3 PWR00PTR PTR(31),         /* SPARE - RESERVED      (84)       41600003
                                                             @ZM30976*/ 42400003
        3 CNFG0PTR PTR(31),         /* -> CONFIGUATION TABLE (88)       43200003
                                                             @Y30LB55*/ 44000003
        3 GEN00PTR PTR(31),         /* -> ISDAGEN0 WORKAREA (92)        44800003
                                                             @Y30LB55*/ 45600003
 /* TO CALL XXX(WORKPTR), SET R1=ADDR(WORKCALL) AND CALL XXX @Y30LB55*/ 46400003
                                                                        47200003
        3 WORKCALL PTR(31),         /* =ADDR(WORKPTR) (96)   @Y30LB55*/ 48000003
                                                                        48800003
      /***************************************************************/ 49600003
      /*                                                             */ 50400003
      /* PARAMETERS FOR ISDAGET0, ISDAGET1, AND ISDAFREE             */ 51200003
      /*                                                             */ 52000003
      /***************************************************************/ 52800003
                                                                        53600003
       2 GET0CALL,                  /* PARAMETERS FOR ISDAGET0 (100)    54400003
                                                             @Y30LB55*/ 55200003
        3 SPNOLEN FIXED(31),        /* SPNO + LENGTH         @Y30LB55*/ 56000003
         4 SPNO BIT(8),             /* SUBPOOL NUMBER        @Y30LB55*/ 56800003
         4 CORELEN FIXED(24),       /* LENGTH OF REQUESTED AREA         57600003
                                                             @Y30LB55*/ 58400003
        3 COREADDR PTR(31),         /* ADDRESS OF AREA, FILLED IN BY    59200003
                                       GET0                  @Y30LB55*/ 60000003
                                                                        60800003
      /***************************************************************/ 61600003
      /*                                                             */ 62400003
      /* PARAMETERS FOR ISDAHEXP                                     */ 63200003
      /*                                                             */ 64000003
      /***************************************************************/ 64800003
                                                                        65600003
       2 HEXPCALL,                  /* PARAMETERS FOR ISDAHEXP (108)    66400003
                                                             @Y30LB55*/ 67200003
        3 DUMPADDR PTR(31),         /* ADDRESS OF AREA TO DUMP          68000003
                                                             @Y30LB55*/ 68800003
        3 DUMPLEN FIXED(31),        /* LENGTH OF AREA TO DUMP@Y30LB55*/ 69600003
        3 DUMPIDNO FIXED(31),       /* ID NUMBER OF DUMP     @Y30LB55*/ 70400003
                                                                        71200003
      /***************************************************************/ 72000003
      /*                                                             */ 72800003
      /* PARAMETERS FOR ISDAPRT0 AND ISDATYPE                        */ 73600003
      /*                                                             */ 74400003
      /***************************************************************/ 75200003
                                                                        76000003
       2 PRT0CALL,                  /* PARAMETERS FOR ISDAPRT0 (120)    76800003
                                                             @Y30LB55*/ 77600003
        3 OUTLINE CHAR(133),        /* FULL OUTPUT LINE      @Y30LB55*/ 78400003
         4 ANSI CHAR(1),            /* PRINTER CONTROL CHARACTER        79200003
                                                             @Y30LB55*/ 80000003
         4 LINE CHAR(132),          /* TEXT FOR OUTPUT       @Y30LB55*/ 80800003
        3 SDARPTID CHAR(3),         /* REPORT ID FOR PAGE HEADER.       81600003
                                  SET TO 000000 TO NOT MOVE  @ZD00192*/ 82400003
                                                                        83200003
      /***************************************************************/ 84000003
      /*                                                             */ 84800003
      /* SDA SAVE AREAS AND WORK AREAS FOR DATAREG                   */ 85600003
      /*                                                             */ 86400003
      /***************************************************************/ 87200003
                                                                        88000003
       2 SDADATD,                   /* 160 BYTE SDA SAVE AREA FOR ALL   88800003
                                       PROCS                 @Y30LB55*/ 89600003
        3 SDASA001(18) FIXED(31),   /* MAIN SAVE AREA        @Y30LB55*/ 90400003
        3 SDAPC001 FIXED(31),       /* PARAMETER SAVE        @Y30LB55*/ 91200003
        3 SDASA002(15) FIXED(31),   /* INNER PROC SAVE AREA  @Y30LB55*/ 92000003
        3 SDATEMPS(6) FIXED(31),    /* TEMP SPACE            @Y30LB55*/ 92800003
       2 PRTDATD,                   /* 160 BYTE SAVE AREA FOR           93600003
                                       ISDAPRT0 AND ISDATYPE @Y30LB55*/ 94400003
        3 PRTSA001(40) FIXED(31);   /* 2ND LEVEL CALL SAVE   @Y30LB55*/ 95200003
    %SDACVTL='LENGTH(ISDACVT)';                            /*@Y30LB55*/ 96000003
                                                                        96800003
 /* %SDACVTL='LENGTH(ISDACVT)'                               @Y30LB55*/ 97600003
 /*   DCL CVTPTR PTR(31)  AND SET CVTPTR=WORKPTR             @Y30LB55*/ 98400003
./  ADD  SSI=42070297,NAME=ISDADAT5
                                                                        01800000
    /*****************************************************************/ 02700000
    /*                                                               */ 03600000
    /* DATWORK IS THE STRUCTURE FOR THE DAT WORK AREA        @Y30LB50*/ 04500000
    /*                                                               */ 05400000
    /*****************************************************************/ 06300000
                                                                        07200000
    DCL                                                                 08100000
      1 DATWORK BASED(DATPTR),      /*                       @Y30LB50*/ 09000000
       2 CSPTRS(4) PTR(31),         /* POINTERS TO ACCUMULATOR BLOCKS   09900000
                                       FOR EACH CARTRIDGE STORE         10800000
                                       ENCOUNTERED           @Y30LB50*/ 11700000
       2 TSUM FIXED(31),            /* TOTAL OF BIT COUNTS   @Y30LB50*/ 12600000
       2 WORK1 CHAR(8),             /* COMPACTED DAT CHECKS BYTES       13500000
                                                             @Y30LB50*/ 14400000
        3 WORK2 BIT(8),             /*                       @Y30LB50*/ 15300000
         4 CURRBIT BIT(1),          /* BIT BEING EXAMINED    @Y30LB50*/ 16200000
         4 RESTBITS BIT(7),         /*                       @Y30LB50*/ 17100000
        3 WORK3 BIT(56),            /*                       @Y30LB50*/ 18000000
       2 I FIXED(15),               /* LOOP INDEX            @Y30LB50*/ 18900000
       2 J FIXED(15),               /* LOOP INDEX            @Y30LB50*/ 19800000
       2 K FIXED(15),               /* LOOP INDEX            @Y30LB50*/ 20700000
       2 L FIXED(15),               /* LOOP INDEX            @Y30LB50*/ 21600000
       2 M FIXED(15),               /* LOOP INDEX            @Y30LB50*/ 22500000
       2 LOOPEND FIXED(15),         /* LOOP END COMPARAND    @Y30LB50*/ 23400000
       2 HOLDDBL CHAR(8),           /* DOUBLE WORD FOR CONVERTING       24300000
                                                             @Y30LB50*/ 25200000
        3 HOLD0 CHAR(4),            /*                       @Y30LB50*/ 26100000
        3 HOLD CHAR(4),             /* WORK AREA FOR CONVERTING         27000000
                                                             @Y30LB50*/ 27900000
         4 HOLD2 CHAR(1),           /*                       @Y30LB50*/ 28800000
         4 HOLD1 CHAR(3),           /*                       @Y30LB50*/ 29700000
          5 CSNUMB CHAR(2),         /* ISOLATE INFO FROM SSID           30600000
                                                             @Y30LB50*/ 31500000
           6 SSIDWORK CHAR(2),      /* ISOLATE UNIT          @Y30LB50*/ 32400000
          5 XXX CHAR(1);            /*                       @Y30LB50*/ 33300000
    %DATWORKL='LENGTH(DATWORK)';    /*                       @Y30LB50   34200000
                                                                     */ 35100000
 @EJECT;                                                                36000000
                                                                        36900000
    /*****************************************************************/ 37800000
    /*                                                               */ 38700000
    /* DESCRIPTION OF DAT ACCUMULATOR BLOCK                  @Y30LB50*/ 39600000
    /*                                                               */ 40500000
    /*****************************************************************/ 41400000
                                                                        42300000
    DCL                                                                 43200000
      1 DATACCM BASED(CSPTR),       /*                       @Y30LB50*/ 44100000
       2 BYTEBIT FIXED(15),         /* 2 BYTE COUNTER FOR ONE BIT FOR   45000000
                                       ONE DRC               @Y30LB50*/ 45900000
       2 BYTEBIT3 CHAR(22),         /* 2 BYTE COUNTER FOR ONE BIT FOR   46800000
                                       OTHER DRCS AND DRDS   @Y30LB50*/ 47700000
       2 BYTE0 CHAR(168),           /* BIT COUNTERS FOR OTHER BITS OF   48600000
                                       MSC BYTE 4            @Y30LB50*/ 49500000
        3 BIT0 CHAR(24),            /* BIT COUNTERS FOR ONE BIT         50400000
                                                             @Y30LB50*/ 51300000
        3 BITN CHAR(144),           /* BIT COUNTERS FOR OTHER BITS      52200000
                                                             @Y30LB50*/ 53100000
       2 BYTE1 CHAR(192),           /* BIT COUNTERS FOR MSC BYTE 5      54000000
                                                             @Y30LB50*/ 54900000
       2 BYTE2 CHAR(192),           /* BIT COUNTERS FOR MSC BYTE 13     55800000
                                                             @Y30LB50*/ 56700000
       2 BYTE3 CHAR(192),           /* BIT COUNTERS FOR MSC BYTE 14     57600000
                                                             @Y30LB50*/ 58500000
       2 BYTE4 CHAR(192);           /* BIT COUNTERS FOR MSC BYTE 15     59400000
                                                             @Y30LB50*/ 60300000
    %DATACCML='LENGTH(DATACCM)';    /*                       @Y30LB50   61200000
                                                                     */ 62100000
 @EJECT;                                                                63000000
                                                                        63900000
    /*****************************************************************/ 64800000
    /*                                                               */ 65700000
    /* DESCRIPTION OF ISDADAT0 AND ISDADAT1 CONSTANTS        @Y30LB50*/ 66600000
    /*                                                               */ 67500000
    /*****************************************************************/ 68400000
                                                                        69300000
    DCL                                                                 70200000
      CVTPTR PTR(31) REG(2) RSTD;   /* SDACVT POINTER        @Y30LB50*/ 71100000
    DCL                                                                 72000000
      RETRNREG FIXED(31) REG(9) RSTD;/* RETURN CODE          @Y30LB50*/ 72900000
    DCL                                                                 73800000
      DATPTR PTR(31) REG(10) RSTD;  /* DAT WORK AREA PTR     @Y30LB50*/ 74700000
    DCL                                                                 75600000
      CSPTR PTR(31) REG(8) RSTD;    /* CARTRIDGE STORE-DAT              76500000
                                       ACCUMULATOR POINTER   @Y30LB50*/ 77400000
    DCL                                                                 78300000
      WORKPTR PTR(31);              /* CALLING PARAMETER--SDACVT PTR    79200000
                                                             @Y30LB50*/ 80100000
    DCL                                                                 81000000
      R1 FIXED(31) REG(1) UNRSTD;   /*                       @Y30LB50*/ 81900000
    DCL                                                                 82800000
      R0 FIXED(31) REG(0) UNRSTD;   /*                       @Y30LB50*/ 83700000
    DCL                                                                 84600000
      R15 FIXED(31) REG(15) UNRSTD; /*                       @Y30LB50*/ 85500000
    DCL                                                                 86400000
      DATSPNO CHAR(1) STATIC LOCAL INIT('00'X);/* SUBPOOL NUMBER FOR    87300000
                                       DAT REQUESTS          @Y30LB50*/ 88200000
    DCL                                                                 89100000
      MAXDRC FIXED(15) CONSTANT(4); /* MAXIMUM NUMBER OF DRCS           90000000
                                                             @Y30LB50*/ 90900000
    DCL                                                                 91800000
      MAXCS  FIXED(15) CONSTANT(4); /*MAXIMUM NUMBER OF CARTRIDGE       92700000
                                      STORES                 @Y30LB50*/ 93600000
    DCL                                                                 94500000
      1 PATCH CHAR(50) STATIC LOCAL,                                    95400000
       2 *(50) CHAR(1) INIT((50)'00'X);/* MAINTENANCE AREA   @Y30LB50*/ 96300000
./  ADD  SSI=53120307,NAME=ISDADCS5
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */  00400003
 /*                                                          @Y30LB56*/ 00800003
 /*    EXTERNAL PROCEDURE                                    @Y30LB56*/ 01200003
 /*                                                          @Y30LB56*/ 01600003
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */  02000003
                                                                        02400003
    DCL                                                                 02800003
      ISDAFREE ENTRY,               /* FREEMAIN PROCEDURE    @Y30LB56*/ 03200003
      ISDAGET0 ENTRY;               /* GETMAIN PROCEDURE     @Y30LB56*/ 03600003
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */  04000003
 /*                                                          @Y30LB56*/ 04400003
 /*    GENERAL REGISTERS                                     @Y30LB56*/ 04800003
 /*                                                          @Y30LB56*/ 05200003
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */  05600003
                                                                        06000003
    DCL                                                                 06400003
      R1 PTR REG(1) UNRSTD,         /* PARAMETER REGISTER    @Y30LB56*/ 06800003
      R15 FIXED REG(15) UNRSTD;     /* RETURN CODE REGISTER  @Y30LB56*/ 07200003
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */  07600003
 /*                                                          @Y30LB56*/ 08000003
 /*    LOCAL POINTERS MUST BE ASSIGNED TO REGISTERS BY PLS2  @Y30LB56*/ 08400003
 /*                                                          @Y30LB56*/ 08800003
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */  09200003
                                                                        09600003
    DCL                                                                 10000003
      WORKPTR PTR,                  /* PARAMETER PTR TO SDACVT          10400003
                                                             @Y30LB56*/ 10800003
      CVTPTR PTR,                   /* POINTER TO SDACVT     @Y30LB56*/ 11200003
      GET0PTR PTR,                  /* POINTER TO ACTIVE WORK AREA      11600003
                                                             @Y30LB56*/ 12000003
      GET0INDX PTR,                 /* PTR TO NEXT AVAILABLE SPACE IN   12400003
                                       ACTIVE WORK AREA      @Y30LB56*/ 12800003
      LPARMPTR PTR;                 /* POINTER TO SDA CONTROL@Y30LB56   13200003
                                       STATEMENTS            @Y30LB56*/ 13600003
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */  14000003
 /*                                                          @Y30LB56*/ 14400003
 /*    MISCELANEOUS WORK AREAS, POINTERS AND CONSTANTS       @Y30LB56*/ 14800003
 /*                                                          @Y30LB56*/ 15200003
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */  15600003
                                                                        16000003
    DCL                                                                 16400003
      RETCODE FIXED(15),            /* RETURN CODE           @Y30LB56*/ 16800003
      WORKVAR FIXED,                /* WORK VARIABLE         @Y30LB56*/ 17200003
      WORKX1 PTR,                   /* WORK POINTER          @Y30LB56*/ 17600003
      WORKX2 PTR,                   /* WORK POINTER          @Y30LB56*/ 18000003
      I FIXED;                      /* DO LOOP COUNTER       @Y30LB56*/ 18400003
 @EJECT;                                                   /*@Y30LB56*/ 18800003
                                                                        19200003
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */  19600003
 /*                                                          @Y30LB56*/ 20000003
 /*    MAINTENANCE SPACE                                     @Y30LB56*/ 20400003
 /*                                                          @Y30LB56*/ 20800003
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */  21200003
                                                                        21600003
    DCL                                                                 22000003
      1 PATCH CHAR(50) STATIC,      /* RESERVED FOR PTF'S    @Y30LB56*/ 22400003
       2 *(50) CHAR(1) INIT((50)'00'X);                    /*@Y30LB56*/ 22800003
                                                                        23200003
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */  23600003
 /*                                                          @Y30LB56*/ 24000003
 /*    MAP OF REPORT CONTROLLED PORTION OF WORKAREA HEADER   @Y30LB56*/ 24400003
 /*                                                          @Y30LB56*/ 24800003
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */  25200003
                                                                        25600003
    DCL                                                                 26000003
      1 GET0HDR1 BASED(DCS00PTR) POS(29),                               26400003
       2 RATIO CHAR(2),             /* ERROR/USAGE=RATIO LOWER LIMIT    26800003
                                                             @Y30LB56*/ 27200003
       2 SUM CHAR(1),               /* SUMMARY=Y|N           @Y30LB56*/ 27600003
       2 * CHAR(1),                                                     28000003
       2 SER CHAR(12),              /* CARTRIDGE SERIAL NO FACTOR       28400003
                                                             @Y30LB56*/ 28800003
       2 RETCDSV FIXED(15),         /* RETURN CODE SAVE AREA @Y30LB56*/ 29200003
       2 * CHAR(2),                                                     29600003
       2 GET0PSV PTR,               /* SAVE AREA FOR GET0PTR @Y30LB56*/ 30000003
       2 GET0XSV PTR;               /* SAVE AREA FOR GET0INDX@Y30LB56*/ 30400003
     %GET0HD1L='LENGTH(GET0HDR1)';                                      30800003
 /*  %GET0HD1L='LENGTH(GET0HDR1)'                            @Y30LB56*/ 31200003
                                                                        31600003
 @EJECT;                                                   /*@Y30LB56*/ 32000003
                                                                        32400003
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */  32800003
 /*                                                          @Y30LB56*/ 33200003
 /*    MAP OF WORK AREA DCS ENTRIES                          @Y30LB56*/ 33600003
 /*                                                          @Y30LB56*/ 34000003
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */  34400003
                                                                        34800003
    DCL                                                                 35200003
      1 DCSENTRY BASED(GET0INDX),                                       35600003
       2 CHAINPTR PTR,              /* POINTER TO NEXT ENTRY IN CHRON   36000003
                                       ORDER (0 IF LAST)     @Y30LB56*/ 36400003
       2 DATIME BDY(WORD) CHAR(8),                                      36800003
        3 ADATE BIT(32),            /* DATE - 00YYDDDS       @Y30LB56*/ 37200003
        3 ATIME BIT(32),            /* TIME - HHMMSSTH       @Y30LB56*/ 37600003
       2 SNS4D BDY(WORD) CHAR(28),  /* SAVE SENSE AREA       @ZM30998*/ 38000003
        3 SNS1A2 CHAR(2),                                               38400003
         4 SNSBYT1 BIT(4),          /* SENSE BYTE 1, BITS 0-3@Y30LB56*/ 38800003
         4 SNSSID BIT(12),          /* DRD SUBSYSTEM ID      @Y30LB56*/ 39200003
        3 SNS9A10 CHAR(2),                                              39600003
         4 SNSBYT9 BIT(7),          /* SENSE BYTE 9, BITS 0-6@Y30LB56*/ 40000003
         4 SNSADDR BIT(9),          /* MSC LOWER INTERFACE ADDRESS      40400003
                                                             @Y30LB56*/ 40800003
        3 SNS12T31 BDY(WORD) CHAR(21), /* SENSE SAVEAREA     @ZM30998*/ 41200003
         4 SNSRDUC FIXED(16) UNSIGNED,/* READ USAGE COUNTER  @Y30LB56*/ 41600003
          5 OFLORDUC BIT(1),                                            42000003
         4 SNSRDCK FIXED(16) UNSIGNED,/* READ CHECK COUNTER  @Y30LB56*/ 42400003
          5 SNSBYT14 BIT(8),        /* HIGH BYTE WITH FLAGS  @ZM31073*/ 42450003
           6 * BIT(2),                                                  42800003
           6 OFLORDCK BIT(1),                                           43200003
         4 SNSWRUC FIXED(16) UNSIGNED,/* WRITE USAGE COUNTER @Y30LB56*/ 43600003
          5 OFLOWRUC BIT(1),                                            44000003
         4 SNSWRCK FIXED(16) UNSIGNED,/* WRITE CHECK COUNTER @Y30LB56*/ 44400003
          5 * BIT(2),                                                   44800003
          5 OFLOWRCK BIT(1),                                            45200003
         4 SNSBYT20 BIT(8),         /* BYTE 20 NOT USED      @ZM30998*/ 45600003
          5 SNSFORCE BIT(1),        /* FORCED LOGGING BIT    @ZM31073*/ 45650003
          5 SNSLDCHK BIT(1),        /* TEMP LOAD CHECK       @ZM31073*/ 45700003
          5 SNSAVAL4 BIT(1),        /* AVAIL STRIPES = 4     @ZM31073*/ 45750003
         4 SNSCSN CHAR(12),         /* CARTRIDGE SERIAL NUMBER          46000003
                                                             @Y30LB56*/ 46400003
        3 * CHAR(3),                /* SPARE                 @ZM30998*/ 46800003
       2 SNSRDRAT FIXED(8),         /* READ ERROR/USAGE=RATIO@Y30LB56*/ 47200003
       2 SNSWRAT FIXED(8),          /* WRITE ERROR/USAGE=RATIO          47600003
                                                             @Y30LB56*/ 48000003
       2 * CHAR(2);                                        /*@Y30LB56*/ 48400003
     %DCSENTRL='LENGTH(DCSENTRY)';                                      48800003
 /*  %DCSENTRL='LENGTH(DCSENTRY)'                            @Y30LB56*/ 49200003
                                                                        49600003
 @EJECT;                                                   /*@Y30LB56*/ 50000003
                                                                        50400003
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */  50800003
 /*                                                          @Y30LB56*/ 51200003
 /*    SUBPOOL AND BYTE COUNT FOR CALL TO ISDAGET0           @Y30LB56*/ 51600003
 /*                                                          @Y30LB56*/ 52000003
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */  52400003
                                                                        52800003
    DCL                                                                 53200003
      1 GETWORK FIXED STATIC,                                           53600003
       2 * BIT(8) INIT(1),          /* SUBPOOL 1             @Y30LB56*/ 54000003
       2 * FIXED(24) INIT(2048);    /* GET 2K OF WORKAREA    @Y30LB56   54400003
                                                             @Y30LB56*/ 54800003
 @EJECT;                                                   /*@Y30LB56*/ 55200003
                                                                        55600003
 /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 56000003
                                                                        56400003
 WORK AREA DATA FORMAT                                                  56800003
                                                                        57200003
                       BYTE                                             57600003
                 0    1    2    3                                       58000003
          WORD  ___________________                                     58400003
            0  |  STARTPTR         |    ADDRESS OF START OF DATA AREA   58800003
 WORK AREA     |___________________|     (POINTS TO OLDEST DCS ENTRY)   59200003
 HEADER.    1  | *ENDPTR           |    ADDRESS OF END OF DATA AREA     59600003
 (*) FIELDS    |___________________|                                    60000003
 SET BY     2  |*SPN| *LENGTH      |    SUBPOOL NUMBER AND LENGTH OF    60400003
 ISDAGET0.     |____|______________|    THIS WORKSPACE IN BYTES         60800003
            3  |    NEXTPTR        |    ADDRESS OF NEXT WORKSPACE       61200003
               |___________________|                                    61600003
            4  |    LASTPTR        |    ADDRESS OF PREVIOUS WORKSPACE   62000003
               |___________________|                                    62400003
            5  |    BLOCKID        |    OWNER BLOCK ID 'DCS '           62800003
               |___________________|                                    63200003
            6  |BLOCKCNT |         |    WORKSPACE COUNT / UNUSED        63600003
     _________ |_________|_________|                                    64000003
            7  | RATIO   |SUM |    |    RATIO, SUMMARY 'Y' OR 'N'       64400003
               |_________|____|____|     UNUSED BYTE                    64800003
 CONTROL    8  | SER               |                                    65200003
 STATEMENTS    |                   |    CARTRIDGE SERIAL NUMBER         65600003
            9  |                   |    FACTOR LEFT JUSTIFIED           66000003
               |                   |                                    66400003
 WORDS     10  |                   |                                    66800003
 7-13    _____ |___________________|                                    67200003
 SAVED     11  | RETCDSV | UNUSED  |     MODULE RETURN CODE             67600003
 IN FIRST      |_________|_________|                                    68000003
 WORKAREA  12  |  GET0PSV          |    GET0PTR SAVE AREA               68400003
 ONLY.         |___________________|                                    68800003
           13  |  GET0XSV          |    GET0INDX SAVE AREA              69200003
     _________ |___________________|                                    69600003
           14  |                   |                                    70000003
               |                   |    LOGREC DATA SAVE AREA           70400003
                         .              SEE ENTRY ILLUSTRATION BELOW    70800003
                         .                                              71200003
                         .                                              71600003
     @EJECT;                                               /*@Y30LB56*/ 72000003
 LOGREC DATA SAVE AREA - DCS ENTRY FORMAT                               72400003
                                                                        72800003
ONE ENTRY IS CREATED FOR EACH VALID LOGREC RECORD RECEIVED BY ISDADCS0. 73200003
THESE ENTRIES ARE SAVED IN THE PREVIOUSLY ILLUSTRATED WORK AREA.        73600003
                                                                        74000003
             BYTE                                                       74400003
       0    1    2    3                                                 74800003
      ___________________                                               75200003
     |    CHAINPTR       |    POINTER TO NEXT ENTRY IN LOGREC DATA.     75600003
     |___________________|                                              76000003
     |       DATE        |    OBR/MDR HEADER DATE. FORMAT: 00YYDDDS     76400003
     |___________________|                                              76800003
     |       TIME        |    OBR/MDR HEADER TIME. FORMAT: HHMMSSTH     77200003
     |___________________|                                              77600003
     | 1  | 2  | 9  | 10 |                                              78000003
     |____|____|____|____|                                              78400003
     | 12 | 13 | 14 | 15 |                                              78800003
     |____|____|____|____|    MSC FORMAT 4 - SA FORMAT D SENSE DATA     79200003
     | 16 | 17 | 18 | 19 |                                              79600003
     |____|____|____|____|                                              80000003
     | 20 | 21 | 22 | 23 |                                              80400003
     |____|____|____|____|                                              80800003
     | 24 | 25 | 26 | 27 |                                              81200003
     |____|____|____|____|                                              81600003
     | 28 | 29 | 30 | 31 |                                              82000003
     |____|____|____|____|                                              82400003
     |RDR |WRR | *  |  * |    RDR - READ ERROR/USAGE=RATIO              82800003
     |____|____|____|____|    WRR - WRITE ERROR/USAGE=RATIO             83200003
                                                                        83600003
     CHAINPTR ENTRIES ARE ARRAINGED IN ASCENDING CHRONOLOGICAL          84000003
     ORDER BY DATE/TIME.  CHAINPTR IS 0 ON THE LAST ENTRY.              84400003
   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 84800003
./  ADD  SSI=42070302,NAME=ISDADRC5
                                                                        02000000
    /*****************************************************************/ 03000000
    /*                                                               */ 04000000
    /* DRCWORK IS THE STRUCTURE FOR THE DRC WORK AREA        @Y30LB50*/ 05000000
    /*                                                               */ 06000000
    /*****************************************************************/ 07000000
                                                                        08000000
    DCL                                                                 09000000
      1 DRCWORK BASED(DRCPTR),      /*                       @Y30LB50*/ 10000000
       2 CSPTRS(4) PTR(31),         /* POINTERS TO ACCUMULATOR BLOCKS   11000000
                                       FOR EACH CARTRIDGE STORE         12000000
                                       ENCOUNTERED           @Y30LB50*/ 13000000
       2 TSUM FIXED(31),            /* TOTAL OF BIT COUNTS   @Y30LB50*/ 14000000
       2 WORK1 CHAR(4),             /* COMPACTED DRC CHECKS BYTES       15000000
                                                             @Y30LB50*/ 16000000
        3 WORK2 BIT(8),             /*                       @Y30LB50*/ 17000000
         4 CURRBIT BIT(1),          /*                       @Y30LB50*/ 18000000
         4 RESTBITS BIT(7),         /*                       @Y30LB50*/ 19000000
        3 WORK3 BIT(24),            /*                       @Y30LB50*/ 20000000
       2 I FIXED(15),               /* LOOP INDEX            @Y30LB50*/ 21000000
       2 J FIXED(15),               /* LOOP INDEX            @Y30LB50*/ 22000000
       2 K FIXED(15),               /* LOOP INDEX            @Y30LB50*/ 23000000
       2 L FIXED(15),               /* LOOP INDEX            @Y30LB50*/ 24000000
       2 HOLDDBL CHAR(8),           /* DOUBLE WORD FOR CONVERTING       25000000
                                                             @Y30LB50*/ 26000000
        3 HOLD0 CHAR(4),            /*                       @Y30LB50*/ 27000000
        3 HOLD CHAR(4),             /*                       @Y30LB50*/ 28000000
         4 HOLD2 CHAR(1),           /*                       @Y30LB50*/ 29000000
         4 HOLD1 CHAR(3),           /*                       @Y30LB50*/ 30000000
          5 CSNUMB CHAR(2),         /* SSID WORKAREA         @Y30LB50*/ 31000000
          5 XXX CHAR(1);            /*                       @Y30LB50*/ 32000000
    %DRCWORKL='LENGTH(DRCWORK)';    /*                       @Y30LB50   33000000
                                                                     */ 34000000
 @EJECT;                                                                35000000
                                                                        36000000
    /*****************************************************************/ 37000000
    /*                                                               */ 38000000
    /* DESCRIPTION OF DRC ACCUMULATOR BLOCK                  @Y30LB50*/ 39000000
    /*                                                               */ 40000000
    /*****************************************************************/ 41000000
                                                                        42000000
    DCL                                                                 43000000
      1 DRCACCM BASED(CSPTR),       /*                       @Y30LB50*/ 44000000
       2 BYTEBIT FIXED(15),         /* 2 BYTE COUNTER FOR ONE BIT FOR   45000000
                                       ONE DRC               @Y30LB50*/ 46000000
       2 BYTEBIT3 CHAR(6),          /* BIT COUNTERS FOR ONE BIT FOR     47000000
                                       OTHER DRCS            @Y30LB50*/ 48000000
       2 BYTE0 CHAR(56),            /* BIT COUNTERS FOR MSC BYTE 4      49000000
                                                             @Y30LB50*/ 50000000
        3 BIT0 CHAR(8),             /* BIT COUNTERS FOR ONE BIT         51000000
                                                             @Y30LB50*/ 52000000
        3 BITS1TO7 CHAR(48),        /* BIT COUNTERS FOR OTHER BITS      53000000
                                                             @Y30LB50*/ 54000000
       2 BYTE1 CHAR(64),            /* BIT COUNTERS FOR MSC BYTE 20     55000000
                                                             @Y30LB50*/ 56000000
       2 BYTE2 CHAR(64),            /* BIT COUNTERS FOR MSC BYTE 21     57000000
                                                             @Y30LB50*/ 58000000
       2 BYTE3 CHAR(64);            /* BIT COUNTERS FOR MSC BYTE 22     59000000
                                                             @Y30LB50*/ 60000000
    %DRCACCML='LENGTH(DRCACCM)';    /*                       @Y30LB50   61000000
                                                                     */ 62000000
 @EJECT;                                                                63000000
                                                                        64000000
    /*****************************************************************/ 65000000
    /*                                                               */ 66000000
    /* DESCRIPTION OF ISDADRC0 AND ISDADRC1 CONSTANTS        @Y30LB50*/ 67000000
    /*                                                               */ 68000000
    /*****************************************************************/ 69000000
                                                                        70000000
    DCL                                                                 71000000
      CVTPTR PTR(31) REG(2) RSTD;   /* SDACVT POINTER        @Y30LB50*/ 72000000
    DCL                                                                 73000000
      RETRNREG FIXED(31) REG(9) RSTD;/* RETURN CODE REG      @Y30LB50*/ 74000000
    DCL                                                                 75000000
      DRCPTR PTR(31) REG(10) RSTD;  /* DRC WORK AREA POINTER @Y30LB50*/ 76000000
    DCL                                                                 77000000
      CSPTR PTR(31) REG(8) RSTD;    /* CARTRIDGE STORE-DRC              78000000
                                       ACCUMULATOR POINTER   @Y30LB50*/ 79000000
    DCL                                                                 80000000
      WORKPTR PTR(31);              /* CALLING PARAMETER--SDACVT        81000000
                                       POINTER               @Y30LB50*/ 82000000
    DCL                                                                 83000000
      MAXCS FIXED(15) CONSTANT(4);  /* MAXIMUM NUMBER OF CARTRIDGE      84000000
                                       STORES                @Y30LB50*/ 85000000
    DCL                                                                 86000000
      R1 FIXED(31) REG(1) UNRSTD;   /*                       @Y30LB50*/ 87000000
    DCL                                                                 88000000
      R0 FIXED(31) REG(0) UNRSTD;   /*                       @Y30LB50*/ 89000000
    DCL                                                                 90000000
      R15 FIXED(31) REG(15) UNRSTD; /*                       @Y30LB50*/ 91000000
    DCL                                                                 92000000
      DRCSPNO CHAR(1) STATIC LOCAL INIT('00'X);/* SUBPOOL NUMBER FOR    93000000
                                       DRC ISDAGET1 REQUESTS @Y30LB50*/ 94000000
    DCL                                                                 95000000
      1 PATCH CHAR(50) STATIC LOCAL,                                    96000000
       2 *(50) CHAR(1) INIT((50)'00'X);/* MAINTENANCE AREA   @Y30LB50*/ 97000000
./  ADD  SSI=50310248,NAME=ISDAEQC5
                                                                        00700003
 /* EQC ACCUMULATOR WORK TABLE.                                      */ 01400003
                                                                        02100003
    /*****************************************************************/ 02800003
    /*                                                               */ 03500003
    /* EQCWORK -- EQC REPORT MODULES WORK TABLE. THIS TABLE SERVES AS*/ 04200003
    /* THE COMMUNICATIONS VECTOR TABLE (CVT) BETWEEN THE MODULES     */ 04900003
    /* (ISDAEQC0 AND ISDAEQC1) INVOLVED IN THE PREPARATION OF THE    */ 05600003
    /* EQUIPMENT CHECK (EQC) REPORT.                                 */ 06300003
    /*                                                               */ 07000003
    /*****************************************************************/ 07700003
                                                                        08400003
    DCL                                                                 09100003
      1 EQCWORK BASED(EQCWKPTR),    /*                       @Y30LB51*/ 09800003
       2 GET0PTR PTR(31),           /* PTR TO EQC TABLE.     @Y30LB51*/ 10500003
       2 PTRSAVE PTR(31),           /* PTR SAVE AREA.        @Y30LB51*/ 11200003
       2 LOGPTR PTR(31),            /* LOCAL PTR TO RECORD.  @Y30LB51*/ 11900003
       2 SENSEPTR PTR(31),          /* LOCAL PTR TO SENSE AREA.         12600003
                                                             @Y30LB51*/ 13300003
       2 FREEPTR PTR(31),           /* PTR TO FREE TABLE ENTRY.         14000003
                                                             @Y30LB51*/ 14700003
       2 OLDPTR PTR(31),            /* PTR TO EQC CHAIN START.          15400003
                                                             @Y30LB51*/ 16100003
       2 RUASAVE CHAR(2),           /* REAL UNIT ADDRESS SAVE AREA.     16800003
                                                             @ZD00149*/ 17500003
       2 SSIDSAVE CHAR(2),          /* SSID AND FLAGS SAVE AREA.        18200003
                                                             @Y30LB51*/ 18900003
        3 SSIDDEV CHAR(1),          /* DEVICE TYPE CHARACTER.@Y30LB51*/ 19600003
        3 * CHAR(1),                /*                       @Y30LB51*/ 20300003
       2 FSCSYSSV CHAR(2),          /* SAVE AREA FOR NON-LIBRARY FSC.   21000003
                                                             @Y30LB51*/ 21700003
       2 FSCSAVE1 CHAR(4),          /* FSC SAVE AREA (RIGHT ACCESSOR).  22400003
                                                             @Y30LB51*/ 23100003
       2 FSCSAVE2 CHAR(4),          /* FSC SAVE AREA (LEFT ACCESSOR).   23800003
                                                             @Y30LB51*/ 24500003
       2 RECCOUNT FIXED(15),        /* COUNT OF TABLE ELEMENTS.         25200003
                                                             @Y30LB51*/ 25900003
       2 LINECT FIXED(15),          /* COUNT OF PRINTED LINES.          26600003
                                                             @Y30LB51*/ 27300003
       2 I FIXED(15),               /* WORK COUNTER.         @Y30LB51*/ 28000003
       2 J FIXED(15),               /* WORK COUNTER.         @Y30LB51*/ 28700003
       2 K FIXED(15),               /* WORK COUNTER.         @Y30LB51*/ 29400003
       2 L FIXED(15),               /* WORK COUNTER.         @Y30LB51*/ 30100003
       2 SENSELEN FIXED(15),        /* SENSE DATA LENGTH.    @Y30LB51*/ 30800003
       2 EQCSW BIT(16),             /* SWITCHES.             @Y30LB51*/ 31500003
        3 FMT3ACC1 BIT(1),          /* RT ACC FSC FLAG.      @Y30LB51*/ 32200003
        3 FMT3ACC2 BIT(1),          /* LEFT ACC FSC FLAG.    @Y30LB51*/ 32900003
        3 WORKAPR BIT(1),           /* APR ALTERED SSID FLAG.@Y30LB51*/ 33600003
        3 NOFSC BIT(1),             /* NO FSC FLAG.          @Y30LB51*/ 34300003
        3 MSCREC BIT(1),            /* MSC RECORD FLAG.      @Y30LB51*/ 35000003
        3 * BIT(11),                /*                       @Y30LB51*/ 35700003
       2 DEVBYTES BIT(16),          /* WORK AREA FOR DEVICE IDS.        36400003
                                                             @ZD00149*/ 37100003
        3 DEVBYTEA BIT(8),          /* FIRST WORK BYTE.      @ZD00149*/ 37800003
        3 DEVBYTEB BIT(8);          /* SECOND WORK BYTE.     @ZD00149*/ 38500003
    %EQCWORKL='LENGTH(EQCWORK)';                                        39200003
 @EJECT;                                                                39900003
                                                                        40600003
 /* FORMAT OF THE EQC ACCUMULATOR TABLE ENTRY.                       */ 41300003
                                                                        42000003
    /*****************************************************************/ 42700003
    /*                                                               */ 43400003
    /* EQCTBL -- TABLE FOR THE ACCUMULATION OF THE MOST RECENT 100   */ 44100003
    /* EQUPMENT CHECK RECORDS.                                       */ 44800003
    /*                                                               */ 45500003
    /*****************************************************************/ 46200003
                                                                        46900003
    DCL                                                                 47600003
      1 EQCTBL BASED(TBLPTR),       /*                       @Y30LB51*/ 48300003
       2 EQCTPTR PTR(31),           /* PTR TO NEXT ELEMENT ON CHAIN.    49000003
                                                             @Y30LB51*/ 49700003
       2 EQCRUA CHAR(2),            /* REAL UNIT ADDRESS.    @ZD00149*/ 50400003
       2 EQCSSID CHAR(2),           /* SSID AND FLAGS AREA.  @Y30LB51*/ 51100003
        3 DEVCHAR CHAR(1),          /* DEVICE CHARACTER.     @Y30LB51*/ 51800003
        3 UNITCHAR CHAR(1),         /* UNIT CHARACTERS.      @Y30LB51*/ 52500003
       2 EQCFLAGS BIT(16),          /* ACCUMULATOR TABLE FLAGS.         53200003
                                                             @Y30LB51*/ 53900003
        3 FAKEFSC BIT(1),           /* GENERATED FSC.        @Y30LB51*/ 54600003
        3 DASDFLAG BIT(1),          /* DASD SSID.            @Y30LB51*/ 55300003
        3 REALDASD BIT(1),          /* READ DASD SSID.       @Y30LB51*/ 56000003
        3 VIRTDASD BIT(1),          /* VIRTUAL DASD SSID.    @Y30LB51*/ 56700003
        3 EQCNOFSC BIT(1),          /* NO FSC IN RECORD.     @Y30LB51*/ 57400003
        3 EQCAPR BIT(1),            /* APR ALTERED SSID FLAG.@Y30LB51*/ 58100003
        3 MSCFLAG BIT(1),           /* MSC RECORD FLAG.      @Y30LB51*/ 58800003
        3 CSFLAG BIT(1),            /* CS DEVICE FLAG.       @Y30LB51*/ 59500003
        3 DEVIN BIT(1),             /* DEVICE IDS FLAG.      @ZD00149*/ 60200003
        3 * BIT(7),                 /*                       @ZD00149*/ 60900003
       2 EQCFSC CHAR(4),            /* FSC AREA.             @Y30LB51*/ 61600003
        3 FSCSYS CHAR(2),           /* NON-LIBRARY DEVICE FSC.          62300003
                                                             @Y30LB51*/ 63000003
        3 * CHAR(2),                /*                       @Y30LB51*/ 63700003
       2 EQCDT CHAR(8),             /* DATE/TIME STAMP FROM RECORD.     64400003
                                                             @Y30LB51*/ 65100003
        3 EQCDATE CHAR(4),          /* DATE -- YEAR AND DAY. @Y30LB51*/ 65800003
         4 EQCYR CHAR(2),           /* YEAR.                 @Y30LB51*/ 66500003
         4 EQCDAY CHAR(2),          /* DAY.                  @Y30LB51*/ 67200003
        3 EQCTIME CHAR(4),          /* TIME.                 @Y30LB51*/ 67900003
         4 EQCHR CHAR(1),           /* HOURS.                @Y30LB51*/ 68600003
         4 EQCMIN CHAR(1),          /* MINUTES.              @Y30LB51*/ 69300003
         4 EQCSEC CHAR(1),          /* SECONDS.              @Y30LB51*/ 70000003
         4 EQCHSEC CHAR(1),         /* HUNDREDTHS OF A SECOND.          70700003
                                                             @Y30LB51*/ 71400003
       2 EQCUNIT CHAR(2),           /* UNIT IDS.             @ZD00149*/ 72100003
        3 CNTLUNIT CHAR(1),         /* CONTROL UNIT ID.      @ZD00149*/ 72800003
        3 UNITID CHAR(1),           /* DRIVE ID.             @ZD00149*/ 73500003
       2 EQCSENSE CHAR(32),         /* SENSE AREA.           @Y30LB51*/ 74200003
        3 DASDDATA CHAR(28),        /* DASD SENSE.           @Y30LB51*/ 74900003
        3 * CHAR(4);                /*                       @Y30LB51*/ 75600003
    %EQCTBLL='LENGTH(EQCTBL)';                                          76300003
 @EJECT;                                                                77000003
                                                                        77700003
 /* FORMAT OF THE DASD RECORD.                                       */ 78400003
                                                                        79100003
    /*****************************************************************/ 79800003
    /*                                                               */ 80500003
    /* MSCDASD -- DASD RECORD FORMAT. (THIS FORMAT MAY BE USED AS THE*/ 81200003
    /* FORMAT OF THE MSC FORMAT 5 RECORD BY ADDING 4 TO SENSEPTR.)   */ 81900003
    /*                                                               */ 82600003
    /*****************************************************************/ 83300003
                                                                        84000003
    DCL                                                                 84700003
      1 MSCDASD BASED(SENSEPTR),    /*                       @Y30LB51*/ 85400003
       2 * CHAR(4),                 /* BYTES 0 - 3.          @ZD00149*/ 86100003
       2 DRIVE BIT(8),              /* DRIVE ID.             @ZD00149*/ 86800003
       2 * CHAR(2),                 /* BYTES 5 AND 6.        @ZD00149*/ 87500003
       2 FMTMSG BIT(8),             /* BYTE 7.               @Y30LB51*/ 88200003
        3 DASDFMT BIT(4),           /* DASD SUBFORMAT CODE.  @Y30LB51*/ 88900003
        3 DASDMSG BIT(4),           /* DASD MESSAGE CODE.    @Y30LB51*/ 89600003
       2 * CHAR(2),                 /* BYTES 8 AND 9.        @Y30LB51*/ 90300003
       2 DASD10 BIT(8),             /* BYTE 10.              @Y30LB51*/ 91000003
        3 TIMEBIT BIT(1),           /* LATE/EARLY BIT.       @Y30LB51*/ 91700003
        3 CLOCKERR BIT(1),          /* CLOCK ERROR BIT.      @Y30LB51*/ 92400003
        3 * BIT(6),                 /*                       @Y30LB51*/ 93100003
       2 DASD11 BIT(8),             /* BYTE 11.              @Y30LB51*/ 93800003
       2 * CHAR(8),                 /* BYTES 12 - 19.        @Y30LB51*/ 94500003
       2 DASD20 BIT(8),             /* BYTE 20.              @Y30LB51*/ 95200003
       2 * CHAR(1),                 /* BYTE 21.              @Y30LB51*/ 95900003
       2 FSCDASD BIT(16),           /* BYTES 22 AND 23, FSC. @Y30LB51*/ 96600003
       2 * CHAR(2),                 /* BYTES 24 AND 25.      @ZD00149*/ 97300003
       2 DASDSSID CHAR(2);          /* DASD DRIVE SSID.      @ZD00149*/ 98000003
./  ADD  SSI=71790053,NAME=ISDAFSC5
                                                                        00400003
 /* FSC ACCUMULATOR WORK TABLE.                                      */ 00800003
                                                                        01200003
    /*****************************************************************/ 01600003
    /*                                                               */ 02000003
    /* FSCWORK -- FSC REPORT MODULES WORK TABLE. THIS TABLE SERVES AS*/ 02400003
    /* A COMMUNICATIONS VECTOR TABLE (CVT) BETWEEN THE MODULES       */ 02800003
    /* (ISDAFSC0, ISDAFSC1 AND ISDAFSC2) INVOLVED IN THE PREPARATION */ 03200003
    /* OF THE FAULT SYMPTOM CODE (FSC) REPORT.                       */ 03600003
    /*                                                               */ 04000003
    /*****************************************************************/ 04400003
                                                                        04800003
    DCL                                                                 05200003
      1 FSCWORK BASED(FSCWKPTR),    /*                       @Y30LB51*/ 05600003
       2 GET0PTR PTR(31),           /* PTR TO LAST FSC TABLE.@Y30LB51*/ 06000003
       2 PTRSAVE PTR(31),           /* POINTER SAVE AREA.    @Y30LB51*/ 06400003
       2 FSCPTR PTR(31),            /* POINTER TO FIRST FSC TABLE.      06800003
                                                             @Y30LB51*/ 07200003
       2 LOGPTR PTR(31),            /* PTR TO RECORD.        @Y30LB51*/ 07600003
       2 SENSEPTR PTR(31),          /* PTR TO SENSE AREA.    @Y30LB51*/ 08000003
       2 FREEPTR PTR(31),           /* FSC TABLE FREE ELEMENT PTR.      08400003
                                                             @Y30LB51*/ 08800003
       2 SUMTABLE PTR(31),          /* ADDRESS OF SUM TABLE. @Y30LB51*/ 09200003
       2 SUMSTART PTR(31),          /* PTR TO SUM CHAIN START.          09600003
                                                             @Y30LB51*/ 10000003
       2 CHAINTBL PTR(31),          /* ADDRESS OF CHAIN TABLE.          10400003
                                                             @Y30LB51*/ 10800003
       2 PRINTTBL PTR(31),          /* ADDRESS OF PRINT TABLE.          11200003
                                                             @Y30LB51*/ 11600003
       2 TBLPTRSV PTR(31),          /* TABLE POINTER SAVE AREA.         12000003
                                                             @Y30LB51*/ 12400003
       2 PRTPTR PTR(31),            /* POINTER TO PRINT TABLE.          12800003
                                                             @ZA20267*/ 13200003
       2 SUMPTR PTR(31),            /* POINTER TO SUM TABLE. @ZA20267*/ 13600003
       2 FSCTBLCT FIXED(15),        /* COUNT OF FSC TABLES.  @Y30LB51*/ 14000003
       2 SSIDCT FIXED(15),          /* MAXIMUM NR OF SSIDS IN SYSTEM.   14400003
                                                             @Y30LB51*/ 14800003
       2 SSIDCTR FIXED(15),         /* SSID CHAIN COUNTER.   @Y30LB51*/ 15200003
       2 TBLELMCT FIXED(15),        /* FSC TABLE ELEMENT COUNTER.       15600003
                                                             @Y30LB51*/ 16000003
       2 I FIXED(15),               /* WORK COUNTER.         @Y30LB51*/ 16400003
       2 WORKFLGS BIT(16),          /* WORK FLAGS.           @Y30LB51*/ 16800003
        3 MSCREC BIT(1),            /* MSC DEVICE RECORD.    @Y30LB51*/ 17200003
        3 SAREC BIT(1),             /* SA DEVICE RECORD.     @Y30LB51*/ 17600003
        3 DRCREC BIT(1),            /* DRC DEVICE RECORD.    @Y30LB51*/ 18000003
        3 DRDREC BIT(1),            /* DRD DEVICE RECORD.    @Y30LB51*/ 18400003
        3 CSREC BIT(1),             /* CS DEVICE RECORD.     @Y30LB51*/ 18800003
        3 DIRREC BIT(1),            /* 3830 DEVICE RECORD.   @Y30LB51*/ 19200003
        3 DAREC BIT(1),             /* 3330 DEVICE RECORD.   @Y30LB51*/ 19600003
        3 DASDREC BIT(1),           /* DASD DEVICE RECORD.   @Y30LB51*/ 20000003
        3 FMT3ACC1 BIT(1),          /* RT ACCESSOR FSC.      @Y30LB51*/ 20400003
        3 FMT3ACC2 BIT(1),          /* LEFT ACCESSOR FSC.    @Y30LB51*/ 20800003
        3 FSCCOUNT BIT(1),          /* COUNT BY FSC ONLY.    @Y30LB51*/ 21200003
        3 WORKAPR BIT(1),           /* APR ALTERED SSID.     @Y30LB51*/ 21600003
        3 TBLFULL BIT(1),           /* CHAIN TABLE FULL.     @ZA17155*/ 22000003
        3 PERMERR BIT(1),           /* PERMANENT ERROR.      @ZA20267*/ 22400003
        3 TEMPERR BIT(1),           /* TEMPORARY ERROR.      @ZA20267*/ 22800003
        3 ADDCORE BIT(1),           /* ADDED FSC TABLE NEEDED SW.       23200003
                                                             @Y30LB51*/ 23600003
       2 LSSID CHAR(2),             /* STORAGE FOR SSID.     @Y30LB51*/ 24000003
       2 LFSC CHAR(4),              /* STORAGE FOR LIBRARY FSC.         24400003
                                                             @Y30LB51*/ 24800003
       2 LFSCSYS CHAR(2),           /* STORAGE FOR NON-LIBRARY FSC.     25200003
                                                             @Y30LB51*/ 25600003
       2 LTYPE CHAR(2),             /* STORAGE FOR DEVICE TYPE.         26000003
                                                             @Y30LB51*/ 26400003
       2 SSIDSAVE BIT(16),          /* SSID AND FLAGS WORK AREA.        26800003
                                                             @Y30LB51*/ 27200003
        3 CUAFLAG BIT(4),           /* SSID FLAG.            @Y30LB51*/ 27600003
        3 SSIDDEV BIT(4),           /* DEVICE TYPE CHARACTER.           28000003
                                                             @Y30LB51*/ 28400003
        3 * BIT(8),                 /*                       @Y30LB51*/ 28800003
       2 SEVSAVE CHAR(2),           /* SEVERITY CODE SAVE AREA.         29200003
                                                             @ZA20267*/ 29600003
       2 SEVMASK BIT(16),           /* SEVERITY CODE SEARCH MASK.       30000003
                                                             @ZA20267*/ 30400003
        3 SEVMFMT BIT(8),           /* RECORD FORMAT.        @ZA20267*/ 30800003
        3 SEVMSFMT BIT(8),          /* SUBFMT AND MSG CODE.  @ZA20267*/ 31200003
       2 FSCSYSSV CHAR(2),          /* SAVE AREA FOR NON-LIBRARY FSC.   31600003
                                                             @Y30LB51*/ 32000003
       2 FSCSAVE1 CHAR(4),          /* FSC SAVE AREA (RT ACC).          32400003
                                                             @Y30LB51*/ 32800003
       2 FSCSAVE2 CHAR(4),          /* FSC SAVE AREA (LEFT ACC).        33200003
                                                             @Y30LB51*/ 33600003
       2 SUMBUILD FIXED(15),        /* WORK AREA TO COMPUTE SUM.        34000003
                                                             @Y30LB51*/ 34400003
       2 LINECT FIXED(15),          /* OUTPUT LINE COUNTER.  @Y30LB51*/ 34800003
       2 DEVBYTES BIT(16),          /* WORK AREA FOR DEVICE ID.         35200003
                                                             @ZD00149*/ 35600003
        3 DEVBYTEA BIT(8),          /* FIRST WORK BYTE.      @ZD00149*/ 36000003
        3 DEVBYTEB BIT(8);          /* SECOND WORK BYTE.     @ZD00149*/ 36400003
    %FSCWORKL='LENGTH(FSCWORK)';                                        36800003
 @EJECT;                                                                37200003
                                                                        37600003
 /*  FORMAT OF THE FSC TABLE ELEMENT.                                */ 38000003
                                                                        38400003
    /*****************************************************************/ 38800003
    /*                                                               */ 39200003
    /* FSCTBL -- TABLE FOR THE ACCUMULATION OF THE COUNT OF RECORDS  */ 39600003
    /* PROCESSED.                                                    */ 40000003
    /*                                                               */ 40400003
    /*****************************************************************/ 40800003
                                                                        41200003
     DCL 1 FSCTBL BASED(TBLPTR),    /*                       @Y30LB51*/ 41600003
       2 FSCSPTR PTR(31),           /* PTR TO NEXT ELEMENT ON SSID      42000003
                                       CHAIN.                @Y30LB51*/ 42400003
       2 FSCSSID CHAR(2),           /* SSID.                 @ZA20267*/ 42800003
        3 DEVCHAR CHAR(1),          /* DEVICE CHARACTER.     @Y30LB51*/ 43200003
        3 UNITCHAR CHAR(1),         /* UNIT CHARACTER.       @Y30LB51*/ 43600003
       2 FSCSEV FIXED(15),          /* SEVERITY CODE.        @ZA20267*/ 44000003
       2 FSCFSC CHAR(4),            /* FSC.                  @Y30LB51*/ 44400003
        3 FSCSYS CHAR(2),           /* SUBSYSTEM FSC.        @Y30LB51*/ 44800003
        3 * CHAR(1),                /*                       @ZD00149*/ 45200003
        3 CNTLUNIT BIT(8),          /* DASD CONTROL UNIT.    @ZD00149*/ 45600003
       2 FSCDT CHAR(8),             /* DATE/TIME STAMP.      @Y30LB51*/ 46000003
        3 FSCDATE CHAR(4),          /* DATE -- YEAR AND DAY. @Y30LB51*/ 46400003
         4 FSCYR CHAR(2),           /* YEAR.                 @Y30LB51*/ 46800003
         4 FSCDAY CHAR(2),          /* DAY.                  @Y30LB51*/ 47200003
        3 FSCTIME CHAR(4),          /* TIME.                 @Y30LB51*/ 47600003
         4 FSCHR CHAR(1),           /* HOURS.                @Y30LB51*/ 48000003
         4 FSCMIN CHAR(1),          /* MINUTES.              @Y30LB51*/ 48400003
         4 FSCSEC CHAR(1),          /* SECONDS.              @Y30LB51*/ 48800003
         4 FSCHSEC CHAR(1),         /* HUNDREDTHS OF A SECOND.          49200003
                                                             @Y30LB51*/ 49600003
       2 FSCCTR FIXED(15),          /* RECORD COUNTER.       @Y30LB51*/ 50000003
       2 FSCSUM FIXED(15),          /* TOTAL ERRORS FOR THIS SSID.      50400003
                                                             @Y30LB51*/ 50800003
       2 FSCPCT FIXED(15),          /* PERCENT (FSCCTR/FSCSUM).         51200003
                                                             @Y30LB51*/ 51600003
       2 FSCFLAGS BIT(16),          /* FSC TABLE FLAGS.      @Y30LB51*/ 52000003
        3 MSCFLAG BIT(1),           /* MSC DEVICE FLAG.      @Y30LB51*/ 52400003
        3 SAFLAG BIT(1),            /* SA DEVICE FLAG.       @Y30LB51*/ 52800003
        3 DRCFLAG BIT(1),           /* DRC DEVICE FLAG.      @Y30LB51*/ 53200003
        3 DRDFLAG BIT(1),           /* DRD DEVICE FLAG.      @Y30LB51*/ 53600003
        3 CSFLAG BIT(1),            /* CS DEVICE FLAG.       @Y30LB51*/ 54000003
        3 DIRFLAG BIT(1),           /* 3830 DEVICE FLAG.     @Y30LB51*/ 54400003
        3 DAFLAG BIT(1),            /* 3330 DEVICE FLAG.     @Y30LB51*/ 54800003
        3 DASDFLAG BIT(1),          /* DASD SSID FLAG.       @Y30LB51*/ 55200003
        3 REALDASD BIT(1),          /* REAL DASD FLAG.       @Y30LB51*/ 55600003
        3 VIRTDASD BIT(1),          /* VIRTUAL DASD FLAG.    @Y30LB51*/ 56000003
        3 FAKEFSC BIT(1),           /* GENERATED FSC FLAG.   @Y30LB51*/ 56400003
        3 FSCAPR BIT(1),            /* APR ALTERED SSID FLAG.           56800003
                                                             @Y30LB51*/ 57200003
        3 NOSEVCD BIT(1),           /* NO SEVERITY CODE.     @ZA20267*/ 57600003
        3 * BIT(2),                 /*                       @Y30LB51*/ 58000003
        3 INPRTTBL BIT(1),          /* ELEMENT IN PRINT TABLE FLAG.     58400003
                                                             @ZD00149*/ 58800003
       2 FSCDEVS BDY(WORD) CHAR(16),/* DEVICE COUNTERS.      @ZD00149*/ 59200003
        3 DEVACTR FIXED(15),        /* DEVICE A COUNTER.     @ZD00149*/ 59600003
        3 DEVBCTR FIXED(15),        /* DEVICE B COUNTER.     @ZD00149*/ 60000003
        3 DEVCCTR FIXED(15),        /* DEVICE C COUNTER.     @ZD00149*/ 60400003
        3 DEVDCTR FIXED(15),        /* DEVICE D COUNTER.     @ZD00149*/ 60800003
        3 DEVECTR FIXED(15),        /* DEVICE E COUNTER.     @ZD00149*/ 61200003
        3 DEVFCTR FIXED(15),        /* DEVICE F COUNTER.     @ZD00149*/ 61600003
        3 DEVGCTR FIXED(15),        /* DEVICE G COUNTER.     @ZD00149*/ 62000003
        3 DEVHCTR FIXED(15);        /* DEVICE H COUNTER.     @ZD00149*/ 62400003
    %FSCTBLL='LENGTH(FSCTBL)';                                          62800003
 @EJECT;                                                                63200003
                                                                        63600003
 /*  FORMAT OF THE CHAIN TABLE ELEMENT.                              */ 64000003
                                                                        64400003
    /*****************************************************************/ 64800003
    /*                                                               */ 65200003
    /* CHNTBL -- THIS TABLE CONTAINS THE SSIDS THAT HAVE BEEN        */ 65600003
    /* PROCESSED FOR THE FSC REPORT ALONG WITH A POINTER TO THE START*/ 66000003
    /* OF THE CHAIN OF ENTRIES IN THE FSC TABLE FOR EACH SSID.       */ 66400003
    /*                                                               */ 66800003
    /*****************************************************************/ 67200003
                                                                        67600003
    DCL                                                                 68000003
      1 CHNTBL BASED(CHNPTR),       /*                       @Y30LB51*/ 68400003
       2 CHNTPTR PTR(31),           /* PTR TO NEXT TABLE ELEMENT.       68800003
                                                             @Y30LB51*/ 69200003
       2 CHNSSIDF CHAR(2),          /* SSID AND FLAGS AREA.  @Y30LB51*/ 69600003
        3 SSIDFLGS BIT(4),          /* SSID FLAGS.           @Y30LB51*/ 70000003
        3 CHNSSID BIT(12),          /* SSID.                 @Y30LB51*/ 70400003
       2 * CHAR(2),                 /*                       @Y30LB51*/ 70800003
       2 FSCTPTR PTR(31);           /* PTR TO FSC TABLE.     @Y30LB51*/ 71200003
    %CHNTBLL='LENGTH(CHNTBL)';                                          71600003
 @EJECT;                                                                72000003
                                                                        72400003
 /* FORMAT OF THE SUM TABLE ELEMENT.                                 */ 72800003
                                                                        73200003
    /*****************************************************************/ 73600003
    /*                                                               */ 74000003
    /* SUMTBL -- THIS IS A WORK TABLE USED FOR THE COMPUTATION OF THE*/ 74400003
    /* TOTAL NUMBER OF RECORDS PROCESSED FOR EACH SSID.              */ 74800003
    /*                                                               */ 75200003
    /*****************************************************************/ 75600003
                                                                        76000003
    DCL                                                                 76400003
      1 SUMTBL BASED(SUMPTR),       /*                       @Y30LB51*/ 76800003
       2 SUMTPTR PTR(31),           /* PTR TO NEXT SUM CHAIN ELEMENT.   77200003
                                                             @Y30LB51*/ 77600003
       2 SUMSSID CHAR(2),           /* SSID.                 @Y30LB51*/ 78000003
       2 SUMTOTAL FIXED(15),        /* TOTAL RECORDS FOR THIS SSID.     78400003
                                                             @Y30LB51*/ 78800003
       2 SUMFPTR PTR(31),           /* PTR TO SSID CHAIN.    @Y30LB51*/ 79200003
       2 SUMSCTR FIXED(15),         /* COUNT OF ELEMENTS ON SSID        79600003
                                       CHAIN.                @Y30LB51*/ 80000003
       2 SUMPCTR FIXED(15);         /* COUNT OF ELEMENTS PROCESSED.     80400003
                                                             @Y30LB51*/ 80800003
    %SUMTBLL='LENGTH(SUMTBL)';                                          81200003
                                                                        81600003
 /* FORMAT OF THE PRINT TABLE ELEMENT.                               */ 82000003
                                                                        82400003
    /*****************************************************************/ 82800003
    /*                                                               */ 83200003
    /* PRTTBL -- THIS TABLE CONSISTS OF POINTERS TO THE FSC TABLE    */ 83600003
    /* ENTRIES IN THE ORDER IN WHICH THE FSC TABLE ENTRIES WILL      */ 84000003
    /* APPEAR IN THE REPORT.                                         */ 84400003
    /*                                                               */ 84800003
    /*****************************************************************/ 85200003
                                                                        85600003
    DCL                                                                 86000003
      1 PRTTBL BASED(PRTPTR),       /*                       @Y30LB51*/ 86400003
       2 PRTTPTR PTR(31);           /* PTR TO FSC TABLE ELEMENT.        86800003
                                                             @Y30LB51*/ 87200003
    %PRTTBLL='LENGTH(PRTTBL)';                                          87600003
./  ADD  SSI=42480224,NAME=ISDAFSPC
         MACRO                                                          03000003
         ISDAFSPC &OP,&LV=,&A=                                 @Y30LB55 06000003
         MEND                                                           09000003
./  ADD  SSI=53120320,NAME=ISDAGHDR
                                                                        03000003
    /*****************************************************************/ 06000003
    /*                                                               */ 09000003
    /* ISDAGHDR - ISDAGET0 HEADER DCL                                */ 12000003
    /*                                                               */ 15000003
    /*****************************************************************/ 18000003
                                                                        21000003
 /* %INCLUDE ISDADCLS(ISDAGHDR)                              @Y30LB55*/ 24000003
                                                                        27000003
    DCL                             /* ISDAGET0 HEADER DCL   @Y30LB55*/ 30000003
      1 ISDAGHDR BASED(GET0PTR),                                        33000003
       2 STARTPTR PTR(31),          /* PTR TO START OF DATA AREA        36000003
                                                             @Y30LB55*/ 39000003
       2 ENDPTR PTR(31),            /* PTR TO END OF DATA AREA          42000003
                                                             @Y30LB55*/ 45000003
       2 GET0SPLN FIXED(31),        /* SP NO. + LENGTH IN BYTES         48000003
                                                             @Y30LB55*/ 51000003
        3 GET0SPNO BIT(8),          /* SUBPOOL NUMBER        @Y30LB55*/ 54000003
        3 GET0LEN FIXED(24),        /* LENGTH OF BLOCK       @Y30LB55*/ 57000003
       2 NEXTPTR PTR(31),           /* PTR TO NEXT BLOCK     @ZM30730*/ 60000003
       2 LASTPTR PTR(31),           /* PTR TO PREVIOUS BLOCK @Y30LB55*/ 63000003
       2 BLOCKID CHAR(4),           /* 4 BYTE OWNER ID       @Y30LB55*/ 66000003
       2 BLOCKCNT FIXED(15),        /* 2 BYTE BLOCK COUNT    @Y30LB55*/ 69000003
       2 * CHAR(2);                 /* RESERVED FOR FUTURE USE          72000003
                                                             @Y30LB55*/ 75000003
    %GET0HDRL='LENGTH(ISDAGHDR)';                          /*@Y30LB55*/ 78000003
                                                                        81000003
 /*  %GET0HDRL='LENGTH(ISDAGHDR)'                            @Y30LB55*/ 84000003
 /* DCL DATA AREA AS STRUCTURE BASED(STARTPTR)               @Y30LB55*/ 87000003
./  ADD  SSI=42480225,NAME=ISDAGSPC
         MACRO                                                          03000003
         ISDAGSPC &OP,&LV=                                     @Y30LB55 06000003
         L     1,0(1) LOAD PTR TO CALLING SEQUENCE             @Y30LB55 09000003
         L     2,0(1) LOAD ADDRESS OF ISDACVT                  @Y30LB55 12000003
         USING ISDACVT,2 TEMP BASE REGISTER                    @Y30LB55 15000003
         LA    1,SDADATD LOAD ADDRESS OF SDASA001              @Y30LB55 18000003
         DROP  2 DROP BASE REGISTER                            @Y30LB55 21000003
         MEND                                                           24000003
./  ADD  SSI=42560286,NAME=ISDALOBR
                                                                        01000000
    /*****************************************************************/ 02000000
    /*                                                       @Y30LB55*/ 03000000
    /* ISDALOBR - FULL DCL FOR SDA INPUT RECORDS             @Y30LB55*/ 04000000
    /*                                                       @Y30LB55*/ 05000000
    /*****************************************************************/ 06000000
                                                                        07000000
 /* %INCLUDE ISDADCLS(ISDALOBR)                              @Y30LB55*/ 08000000
                                                                        09000000
    DCL                             /* BASE STRUCTURE FOR RECORDS       10000000
                                       FROM SYS1.LOGREC      @Y30LB55*/ 11000000
      1 OBRMDR BASED(LOGPTR),       /* 1832=BLKSIZE EREP0    @Y30LB55*/ 12000000
       2 SCW FIXED(31),             /* SEGMENT CONTROL WORD  @Y30LB55*/ 13000000
        3 SLENGTH FIXED(15),        /* LENGTH OF SEGMENT     @Y30LB55*/ 14000000
        3 SCODE BIT(8),             /* SEGMENT CODE          @Y30LB55*/ 15000000
        3 * CHAR(1),                /*                       @Y30LB55*/ 16000000
       2 CLASRC BIT(8),             /* 0                     @Y30LB55*/ 17000000
       2 SYSREL BIT(8),             /* 1                     @Y30LB55*/ 18000000
       2 SWITCHES CHAR(4),          /* 2                     @Y30LB55*/ 19000000
        3 SWITCH0 BIT(8),                                               20000000
        3 SWITCH1 BIT(8),           /* BIT 2 = 1 = OBR SHORT @Y30LB55*/ 21000000
        3 SWITCH2 BIT(8),           /* DEV TYPE FOR MDR      @Y30LB55*/ 22000000
        3 SWITCH3 BIT(8),           /*                       @Y30LB55*/ 23000000
       2 RCDCNT BIT(8),             /* 6                     @Y30LB55*/ 24000000
       2 RECENTRY BIT(8),           /* 7 REC TYPE ID FOR MDR @Y30LB55   25000000
                                       SHORT(SWAP)                   */ 26000000
       2 DATETIME CHAR(8),          /* 8 DATETIME USED FOR HI LOW       27000000
                                       COMPARES              @Y30LB55*/ 28000000
        3 DATE CHAR(4),             /* 8 PACKED YEAR AND DAY @Y30LB55*/ 29000000
         4 YEAR CHAR(2),            /* YEAR IN PACKED DECIMAL@Y30LB55*/ 30000000
         4 DAY CHAR(2),             /* DAY IN PACKED DECIMAL @Y30LB55*/ 31000000
        3 TIME CHAR(4),             /* 12 SEE BITS 1 AND 4 OF SWITCH0   32000000
                                                             @Y30LB55*/ 33000000
         4 HOUR CHAR(1),            /* HOUR IN PACKED DECIMAL@Y30LB55*/ 34000000
         4 MINUTE CHAR(1),          /* MINUTE IN PACKED DECIMAL         35000000
                                                             @Y30LB55*/ 36000000
         4 SECOND CHAR(1),          /* SECOND IN PACKED DECIMAL         37000000
                                                             @Y30LB55*/ 38000000
         4 TENSHUND CHAR(1),        /* TENTHS, HUNDRETHS PACKED         39000000
                                                             @Y30LB55*/ 40000000
       2 VERNO BIT(8),              /* 16                    @Y30LB55*/ 41000000
       2 CPUSERID CHAR(5),          /* 17-21 CPU USER+ID     @Y30LB55*/ 42000000
        3 CPUSER CHAR(3),           /* 17                    @Y30LB55*/ 43000000
        3 CPUID CHAR(2),            /* 20                    @Y30LB55*/ 44000000
       2 SDRCNT1 CHAR(2),           /* 22 OBR SHORT DATA LENGTH         45000000
                                                             @Y30LB55*/ 46000000
       2 DEVDEP1,                   /* 24 DEVICE DATA FOR MDR LONG      47000000
                                                             @Y30LB55*/ 48000000
        3 JOBID CHAR(8),            /* 24 OBR LONG           @Y30LB55*/ 49000000
         4 DEVTYPE1 CHAR(4),        /* 24 OBR SHORT UCBTYP   @Y30LB55*/ 50000000
          5 MDRCUA CHAR(2),         /* 24 CUA FOR ALL MDR    @Y30LB55*/ 51000000
         4 * CHAR(1),               /* 28 OBR SHORT          @Y30LB55*/ 52000000
         4 CUA2 CHAR(3),            /* 29 OBR SHORT          @Y30LB55*/ 53000000
        3 SDRINF,                   /* 32 OBR SHORT, ALL MDR DATA       54000000
                                                             @Y30LB55*/ 55000000
         4 FAILCCW CHAR(8),         /* 32 OBR LONG           @Y30LB55*/ 56000000
         4 CSW CHAR(8),             /* 40 OBR LONG           @Y30LB55*/ 57000000
         4 DEVDEPC CHAR(1),         /* 48 NO. DEVDEP/8       @Y30LB55*/ 58000000
         4 SECUA CHAR(3),           /* 49 OBR LONG           @Y30LB55*/ 59000000
         4 DEVTYPE2 CHAR(4),        /* 52 OBR LONG UCBTYP    @Y30LB55*/ 60000000
         4 SDRCNT2 CHAR(1),         /* 56 NO. SDR BYTES      @Y30LB55*/ 61000000
         4 PCUA CHAR(3),            /* 57 OBR LONG-PRIMARY CUA          62000000
                                                             @Y30LB55*/ 63000000
         4 IORETRY CHAR(2),         /* 60 OBR LONG           @Y30LB55*/ 64000000
         4 SENSCNT CHAR(2),         /* 62 SENSE LENGTH       @Y30LB55*/ 65000000
         4 DEVDEP2 CHAR(1764);      /* 64 OBR LONG DATA      @Y30LB55*/ 66000000
    %OBRMDRL='LENGTH(OBRMDR)';                             /*@Y30LB55*/ 67000000
    DCL                                                                 68000000
      1 DEVTYPE CHAR(4) BASED(DEVPTR),/* UCBTYP FIELD        @Y30LB55*/ 69000000
       2 IOFLAGS BIT(8),            /*                       @Y30LB55*/ 70000000
       2 OPTFLAGS BIT(8),           /*                       @Y30LB55*/ 71000000
       2 CLASTYPE BIT(16),          /*                       @Y30LB55*/ 72000000
        3 DEVCLASS BIT(8),          /*                       @Y30LB55*/ 73000000
        3 UNITTYPE BIT(8);                                 /*@Y30LB55*/ 74000000
                                                                        75000000
 /*  DCL DEVPTR PTR(31)  ADDRESS OF DEVTYPE1 OR DEVTYPE2     @Y30LB55*/ 76000000
 /*  DCL  LOGPTR PTR(31)  AND SET LOGPTR=DATAPTR             @Y30LB55*/ 77000000
 /*  %OBRMDRL='LENGTH(OBRMDR)'                               @Y30LB55*/ 78000000
./  ADD  SSI=42420285,NAME=ISDAMCFG
    /*****************************************************************/ 03000003
    /*                                                               */ 06000003
    /* THIS STRUCTURE MAPS THE FIXED PORTION OF THE CONFIGURATION    */ 09000003
    /* DATA. THIS STRUCTURE CONTAINS THE COUNTS OF ALL DEVICES IN THE*/ 12000003
    /* SUBSYSTEM BEING REPORTED ON. THE DATA IS FILLED IN BY THE     */ 15000003
    /* 'ISDACNFG' MODULE FROM THE 'SDACNFG' CONTROL INPUT.           */ 18000003
    /*                                                               */ 21000003
    /*****************************************************************/ 24000003
                                                                        27000003
    DCL                                                                 30000003
      1 PCNFG BASED(CNFG0PTR) BDY(WORD),/*                   @Y30LB52*/ 33000003
       2 CNFGFXD CHAR(16) BDY(WORD),/*                       @Y30LB52*/ 36000003
        3 MSFNO FIXED(15),          /* NUMBER OF MSF'S       @Y30LB52*/ 39000003
        3 CPUNO FIXED(15),          /* COUNT OF HOSTS        @Y30LB52*/ 42000003
        3 SPINO FIXED(15),          /* COUNT OF SPINDLES     @Y30LB52*/ 45000003
        3 SANO FIXED(15),           /* COUNT OF SA'S         @Y30LB52*/ 48000003
        3 LIBSIZS CHAR(4),          /* MSF SIZES             @Y30LB52*/ 51000003
        3 CHINTFNO FIXED(15),       /* COUNT OF INTERFACES   @Y30LB52*/ 54000003
        3 PCNFGL FIXED(15),         /* LENGTH OF CNFG AREA   @Y30LB52*/ 57000003
       2 LTPAD PTR(31),             /* ADDR OF DRC TABLE     @Y30LB52*/ 60000003
       2 CHCUAD PTR(31),            /* ADDR OF CPUID TABLE   @Y30LB52*/ 63000003
       2 CPUSERAD PTR(31),          /* ADDR OF CPU SERS      @Y30LB52*/ 66000003
       2 CNFGTOTL FIXED(15),        /* TOTAL DEVICES         @Y30LB52*/ 69000003
       2 * FIXED(15),               /*                       @Y30LB52*/ 72000003
       2 SAINTFP PTR(31);           /* POINTER TO SA INTERFACE ARRAY */ 75000003
./  ADD  SSI=42560287,NAME=ISDAMSCS
                                                                        01000000
    /*****************************************************************/ 02000000
    /*                                                               */ 03000000
    /* ISDAMSCS - 32 BYTE MSS SENSE DCL                              */ 04000000
    /*                                                               */ 05000000
    /*****************************************************************/ 06000000
                                                                        07000000
 /* %INCLUDE ISDADCLS(ISDAMSCS)                              @Y30LB55*/ 08000000
                                                                        09000000
    DCL                             /* MSC SENSE DATA        @Y30LB55*/ 10000000
      1 ISDAMSCS BASED(SENSEPTR),   /* 32 BYTE SENSE         @Y30LB55*/ 11000000
       2 STATUS BIT(8),             /* 0 MSC STATUS BYTE     @Y30LB55*/ 12000000
       2 SUBSYSID BIT(16),          /* 1,2 SSID IN BITS (4-15)          13000000
                                                             @Y30LB55*/ 14000000
        3 SSIDFLAG BIT(4),          /* CE,OFF LINE,HOST CHAN ID         15000000
                                                             @Y30LB55*/ 16000000
        3 SSID BIT(12),             /* 3 DIGIT SSID          @Y30LB55*/ 17000000
         4 SSIDTYPE BIT(4),         /* 0=DASD,1=CS,2=DRD,4=DRC,8=SA     18000000
                                                             @Y30LB55*/ 19000000
         4 SSIDLIBN BIT(4),         /* RSG 0-29,CS NO. 0-3,SA NO. 0-F   20000000
                                                             @Y30LB55*/ 21000000
         4 SSIDDEVT BIT(4),         /* LOWER DEVICE ID,      @Y30LB55   22000000
                                       0-7,0-2,0-7,0-3,0             */ 23000000
       2 FORMATNO BIT(8),           /* 3 FORMAT IN BITS(0-5) @Y30LB55*/ 24000000
       2 SUBSENSE CHAR(28),         /* 28 BYTE SENSE DATA    @Y30LB55*/ 25000000
        3 SUBSTAT4 BIT(8),          /* 4 BYTE 0 OF LOWER UNIT@Y30LB55*/ 26000000
        3 SUBSTAT5 BIT(8),          /* 5 BYTE 1 OF LOWER UNIT@Y30LB55*/ 27000000
        3 SALOWADD BIT(8),          /* 6 (SA BYTE 6)=LOWER LOGICAL      28000000
                                       ADDR                  @Y30LB55*/ 29000000
        3 DASDFMTN BIT(8),          /* 7 DASD OBR FORMAT NUMBER         30000000
                                                             @Y30LB55*/ 31000000
        3 * CHAR(1),                /* 8 SPARE               @Y30LB55*/ 32000000
        3 SARETRY BIT(8),           /* 9 (SA BYTE 5)= RETRY  @Y30LB55*/ 33000000
        3 SALOWAD2 BIT(8),          /* 10 SAME AS BYTE 6, SALOWADD      34000000
                                                             @Y30LB55*/ 35000000
        3 SUBFMTMG BIT(8),          /* 11 SUBFMT AND MSG CODE@Y30LB55*/ 36000000
         4 SUBFMTNO BIT(4),         /* SUBFORMAT NUMBER      @Y30LB55*/ 37000000
         4 MSGCODEN BIT(4),         /* MESSAGE CODE          @Y30LB55*/ 38000000
        3 * CHAR(10),               /* 12-21                 @Y30LB55*/ 39000000
        3 DASDFSC BIT(16),          /* 22,23 DASD OBR FAULT SYMPTOM     40000000
                                       CODE                  @Y30LB55*/ 41000000
        3 RUADASD BIT(8),           /* 24 DASD REAL UNIT ADDRESS        42000000
                                                             @Y30LB55*/ 43000000
        3 * CHAR(1),                /* 25                    @Y30LB55*/ 44000000
        3 MSCFSC BIT(16),           /* 26,27 (SA BYTE 22,23)=FMT 4,5    45000000
                                       FSC                   @Y30LB55*/ 46000000
        3 RUAMSCD BIT(8),           /* 28 RUA FOR VIRT DASD  @Y30LB55*/ 47000000
        3 RCYLMSCD BIT(16),         /* 29,30 REAL CYL FOR VIRT DASD     48000000
                                                             @Y30LB55*/ 49000000
        3 SANOMSCD BIT(8);          /* 31 SA NUMBER FOR VIRT DASD       50000000
                                                             @Y30LB55*/ 51000000
    %MSCSENSL='LENGTH(ISDAMSCS)';                          /*@Y30LB55*/ 52000000
                                                                        53000000
 /*  %MSCSENSL='LENGTH(ISDAMSCS)'                            @Y30LB55*/ 54000000
 /* DCL SENSEPTR PTR(31)  AND SET SENSEPTR=SDATAPTR          @Y30LB55*/ 55000000
./  ADD  SSI=42560288,NAME=ISDAMSC0
                                                                        03000000
    /*****************************************************************/ 06000000
    /*                                                       @Y30LB55*/ 09000000
    /* ISDAMSC0 - 28 BYTE FORMAT 0 DCL                       @Y30LB55*/ 12000000
    /*                                                       @Y30LB55*/ 15000000
    /*****************************************************************/ 18000000
                                                                        21000000
 /* %INCLUDE ISDADCLS(ISDAMSC0)                              @Y30LB55*/ 24000000
                                                                        27000000
    DCL                             /* FORMAT0 MSC MSG CODES 5,7        30000000
                                                             @Y30LB55*/ 33000000
      1 ISDAMSC0 CHAR(28) BASED(SENSEPTR) POS(5),                       36000000
       2 VOLID0 CHAR(6),            /* 4-9                   @Y30LB55*/ 39000000
        3 CHR0 CHAR(3),             /* 4-6                   @Y30LB55*/ 42000000
         4 SSID0 BIT(12),           /* 4,5                   @Y30LB55*/ 45000000
       2 TBLID0 CHAR(1),            /* 10                    @Y30LB55*/ 48000000
       2 MSGCODE0 CHAR(1),          /* 11 MESSAGE CODE       @Y30LB55*/ 51000000
       2 TERMCOD0 CHAR(1),          /* 12 TERMINATION CODE   @Y30LB55*/ 54000000
       2 * CHAR(1),                 /* 13                    @Y30LB55*/ 57000000
       2 XYZL0 CHAR(2),             /* 14,15                 @Y30LB55*/ 60000000
       2 RUSECNT0 CHAR(4),          /* 16-19 READ USAGE COUNTER         63000000
                                                             @Y30LB55*/ 66000000
       2 WUSECNT0 CHAR(4),          /* 20-23 WRITE USAGE COUNTER        69000000
                                                             @Y30LB55*/ 72000000
       2 SRCHECK0 CHAR(2),          /* 24,25 SOFT READ CHECKS@Y30LB55*/ 75000000
       2 SWCHECK0 CHAR(2),          /* 26,27 SOFT WRITE CHECKS          78000000
                                                             @Y30LB55*/ 81000000
       2 RWLOADS0 CHAR(2),          /* 28,29 NO. OF DRD LOADS@Y30LB55*/ 84000000
       2 LOADERR0 CHAR(2);          /* 30,31 NO. OF LOAD ERRORS         87000000
                                                             @Y30LB55*/ 90000000
./  ADD  SSI=42560289,NAME=ISDAMSC1
                                                                        03000000
    /*****************************************************************/ 06000000
    /*                                                       @Y30LB55*/ 09000000
    /* ISDAMSC1 - 28 BYTE FORMAT 1 DCL                       @Y30LB55*/ 12000000
    /*                                                       @Y30LB55*/ 15000000
    /*****************************************************************/ 18000000
                                                                        21000000
 /* %INCLUDE ISDADCLS(ISDAMSC1)                              @Y30LB55*/ 24000000
                                                                        27000000
    DCL                             /* FORMAT1 MSC EQUIP. CHECK         30000000
                                                             @Y30LB55*/ 33000000
      1 ISDAMSC1 CHAR(28) BASED(SENSEPTR) POS(5),                       36000000
       2 * CHAR(7),                 /* 4-10                  @Y30LB55*/ 39000000
       2 MSGCODE1 CHAR(1),          /* 11                    @Y30LB55*/ 42000000
       2 * CHAR(3),                 /* 12-14                 @Y30LB55*/ 45000000
       2 CNTLCKS1 BIT(8),           /* 15                    @Y30LB55*/ 48000000
       2 CHBOTA1 BIT(8),            /* 16                    @Y30LB55*/ 51000000
       2 CHBIMA1 BIT(8),            /* 17                    @Y30LB55*/ 54000000
       2 CHTAGBO1 BIT(8),           /* 18                    @Y30LB55*/ 57000000
       2 TCREG1 BIT(8),             /* 19                    @Y30LB55*/ 60000000
       2 IOCHNLC1 BIT(8),           /* 20                    @Y30LB55*/ 63000000
       2 CHCK2F1 BIT(8),            /* 21                    @Y30LB55*/ 66000000
       2 TAGIN1 BIT(8),             /* 22                    @Y30LB55*/ 69000000
       2 CHERRNO1 BIT(8),           /* 23                    @Y30LB55*/ 72000000
       2 TIMOUT1 BIT(8),            /* 24                    @Y30LB55*/ 75000000
       2 CHRESET1 BIT(8);           /* 25                    @Y30LB55*/ 78000000
./  ADD  SSI=42560290,NAME=ISDAMSC2
                                                                        03000000
    /*****************************************************************/ 06000000
    /*                                                       @Y30LB55*/ 09000000
    /* ISDAMSC2 - 28 BYTE FORMAT 2 DCL                       @Y30LB55*/ 12000000
    /*                                                       @Y30LB55*/ 15000000
    /*****************************************************************/ 18000000
                                                                        21000000
 /* %INCLUDE ISDADCLS(ISDAMSC2)                              @Y30LB55*/ 24000000
                                                                        27000000
    DCL                             /* FORMAT2 MSC DATA CHECK@Y30LB55*/ 30000000
      1 ISDAMSC2 CHAR(28) BASED(SENSEPTR) POS(5),                       33000000
       2 * CHAR(7),                 /* 4-10                  @Y30LB55*/ 36000000
       2 MSGCODE2 CHAR(1),          /* 11                    @Y30LB55*/ 39000000
       2 FAILADD2 CHAR(2),          /* 12,13 FAIL ADDR HI AND LOW       42000000
                                                             @Y30LB55*/ 45000000
       2 * CHAR(3),                 /* 14-16                 @Y30LB55*/ 48000000
       2 CHCTRLT2 CHAR(1),          /* 17                    @Y30LB55*/ 51000000
       2 HOSTITG2 CHAR(1),          /* 18                    @Y30LB55*/ 54000000
       2 * CHAR(1),                 /* 19                    @Y30LB55*/ 57000000
       2 STBYT0F2 CHAR(1),          /* 20                    @Y30LB55*/ 60000000
       2 STBYT1F2 CHAR(1),          /* 21                    @Y30LB55*/ 63000000
       2 STBYT2F2 CHAR(1),          /* 22                    @Y30LB55*/ 66000000
       2 STBYT3F2 CHAR(1),          /* 23                    @Y30LB55*/ 69000000
       2 ERLAT1F2 BIT(8),           /* 24                    @Y30LB55*/ 72000000
       2 ERLAT2F2 BIT(8);           /* 25                    @Y30LB55*/ 75000000
./  ADD  SSI=42560291,NAME=ISDAMSC3
                                                                        02000000
    /*****************************************************************/ 04000000
    /*                                                       @Y30LB55*/ 06000000
    /* ISDAMSC3 - 28 BYTE FORMAT 3 DCL                       @Y30LB55*/ 08000000
    /*                                                       @Y30LB55*/ 10000000
    /*****************************************************************/ 12000000
                                                                        14000000
 /* %INCLUDE ISDADCLS(ISDAMSC3)                              @Y30LB55*/ 16000000
                                                                        18000000
    DCL                             /* FORMAT3 CARTRIDGE STORE SENSE    20000000
                                                             @Y30LB55   22000000
                                       RECORD                        */ 24000000
      1 ISDAMSC3 CHAR(28) BASED(SENSEPTR) POS(5),/* CARTRIDGE STORE     26000000
                                                             @Y30LB55*/ 28000000
       2 STATUS3 BIT(8),            /* 0                     @Y30LB55*/ 30000000
       2 RECOVER3 BIT(8),           /* 1                     @Y30LB55*/ 32000000
       2 MOVES12 BIT(8),            /* 2 (0-3=ACC 1) (4-7=ACC 2)        34000000
                                                             @Y30LB55*/ 36000000
       2 QUEUE3 BIT(8),             /* 3                     @Y30LB55*/ 38000000
       2 FSCACC1 CHAR(4),           /* 4-7 FAULT SYMPTOM CODE ACC 1     40000000
                                                             @Y30LB55*/ 42000000
        3 MCHKACC1 BIT(8),          /* 4                     @Y30LB55*/ 44000000
        3 FAULT1F3 BIT(8),          /* 5                     @Y30LB55*/ 46000000
        3 PCHKACC1 BIT(8),          /* 6                     @Y30LB55*/ 48000000
        3 SHIFT1F3 BIT(8),          /* 7                     @Y30LB55*/ 50000000
       2 FSCACC2 CHAR(4),           /* 8-11 FAULT SYMPTOM CODE ACC 2    52000000
                                                             @Y30LB55*/ 54000000
        3 MCHKACC2 BIT(8),          /* 8 SAME AS 4           @Y30LB55*/ 56000000
        3 FAULT2F3 BIT(8),          /* 9 SAME AS 5           @Y30LB55*/ 58000000
        3 PCHKACC2 BIT(8),          /* 10 SAME AS 6          @Y30LB55*/ 60000000
        3 SHIFT2F3 BIT(8),          /* 11 SAME AS 7          @Y30LB55*/ 62000000
       2 MISCF3 BIT(8),             /* 12 MISC. CHECKS       @Y30LB55*/ 64000000
       2 IREGS1F3 BIT(8),           /* 13 INTERNAL REGS      @Y30LB55*/ 66000000
       2 IREGS2F3 BIT(8),           /* 14 INTERNAL REGS      @Y30LB55*/ 68000000
       2 IREGS3F3 BIT(8),           /* 15 INTERNAL REGS      @Y30LB55*/ 70000000
       2 * CHAR(12);                /* 16-27 ZEROS           @Y30LB55*/ 72000000
./  ADD  SSI=42560292,NAME=ISDAMSC4
                                                                        02000000
    /*****************************************************************/ 04000000
    /*                                                       @Y30LB55*/ 06000000
    /* ISDAMSC4 - 28 BYTE FORMAT 4 DCL                       @Y30LB55*/ 08000000
    /*                                                       @Y30LB55*/ 10000000
    /*****************************************************************/ 12000000
                                                                        14000000
 /* %INCLUDE ISDADCLS(ISDAMSC4)                              @Y30LB55*/ 16000000
                                                                        18000000
    DCL                             /* FORMAT4 SA,DRC,DRD    @Y30LB55*/ 20000000
      1 ISDAMSC4 CHAR(28) BASED(SENSEPTR) POS(5),                       22000000
       2 STATUS14 BIT(8),           /* 0                     @Y30LB55*/ 24000000
       2 STATUS24 BIT(8),           /* 1                     @Y30LB55*/ 26000000
       2 CHADDRF4 CHAR(1),          /* 2 CHANNEL ADDRESS     @Y30LB55*/ 28000000
       2 CMDERRF4 CHAR(1),          /* 3 COMMAND IN ERROR    @Y30LB55*/ 30000000
       2 * CHAR(1),                 /* 4 SPARE               @Y30LB55*/ 32000000
       2 RETRYF4 BIT(8),            /* 5                     @Y30LB55*/ 34000000
       2 LOWADDF4 CHAR(1),          /* 6 LOWER INTERFACE LOG. ADDR      36000000
                                                             @Y30LB55*/ 38000000
       2 FMTMSG4 BIT(8),            /* 7 FORMAT NO. (0-3), MESSAGE      40000000
                                       (4-7)                 @Y30LB55*/ 42000000
        3 SUBFMTN4 BIT(4),          /* SUBFORMAT NUMBER      @Y30LB55*/ 44000000
        3 MSGCODE4 BIT(4),          /* MESSAGE CODE          @Y30LB55*/ 46000000
       2 SASENSE CHAR(20),          /* 8-27 SUBFORMATS 9,A,B,C,D,E      48000000
                                                             @Y30LB55*/ 50000000
        3 BYTE8F4 BIT(8),           /* 8                     @Y30LB55*/ 52000000
        3 BYTE9F4 BIT(8),           /* 9                     @Y30LB55*/ 54000000
        3 BYTE10F4 BIT(8),          /* 10                    @Y30LB55*/ 56000000
        3 BYTE11F4 BIT(8),          /* 11                    @Y30LB55*/ 58000000
        3 BYTE12F4 BIT(8),          /* 12                    @Y30LB55*/ 60000000
        3 BYTE13F4 BIT(8),          /* 13                    @Y30LB55*/ 62000000
        3 BYTE14F4 BIT(8),          /* 14                    @Y30LB55*/ 64000000
        3 BYTE15F4 BIT(8),          /* 15                    @Y30LB55*/ 66000000
        3 BYTE16F4 BIT(8),          /* 16                    @Y30LB55*/ 68000000
        3 BYTE17F4 BIT(8),          /* 17                    @Y30LB55*/ 70000000
        3 BYTE18F4 BIT(8),          /* 18                    @Y30LB55*/ 72000000
        3 BYTE19F4 BIT(8),          /* 19                    @Y30LB55*/ 74000000
        3 BYTE20F4 BIT(8),          /* 20                    @Y30LB55*/ 76000000
        3 BYTE21F4 BIT(8),          /* 21                    @Y30LB55*/ 78000000
        3 FSCFMT4 BIT(16),          /* 22,23 FAULT SYMPTOM CODE         80000000
                                                             @Y30LB55*/ 82000000
        3 BYTE24F4 BIT(8),          /* 24                    @Y30LB55*/ 84000000
        3 BYTE25F4 BIT(8),          /* 25                    @Y30LB55*/ 86000000
        3 BYTE26F4 BIT(8),          /* 26                    @Y30LB55*/ 88000000
        3 BYTE27F4 BIT(8);          /* 27                    @Y30LB55*/ 90000000
 /* %INCLUDE ISDADCLS(ISDAMSC5)                              @Y30LB55*/ 92000000
./  ADD  SSI=42560293,NAME=ISDAMSC5
                                                                        02000000
    /*****************************************************************/ 04000000
    /*                                                       @Y30LB55*/ 06000000
    /* ISDAMSC5 - 28 BYTE FORMAT 5 DCL ---- BASE ISDAMSC5 ON SENSEPTR*/ 08000000
    /* POS(5) IF MSC RECORD. BASE ISDAMSC5 ON SENSEPTR IF DASD OBR   */ 10000000
    /* RECORD                                                @Y30LB55*/ 12000000
    /*                                                       @Y30LB55*/ 14000000
    /*****************************************************************/ 16000000
                                                                        18000000
    DCL                             /* FORMAT5 DASD          @Y30LB55*/ 20000000
      1 ISDAMSC5 CHAR(28) BASED,                                        22000000
       2 STATUS15 BIT(8),           /* 0                     @Y30LB55*/ 24000000
       2 STATUS25 BIT(8),           /* 1                     @Y30LB55*/ 26000000
       2 STATUS35 BIT(8),           /* 2                     @Y30LB55*/ 28000000
       2 RESTART5 BIT(8),           /* 3 RESTART             @Y30LB55*/ 30000000
       2 DRIVEID4 BIT(8),           /* 5 CHAN/DRIVE ID       @Y30LB55*/ 32000000
       2 LOWCYL5 BIT(8),            /* 5                     @Y30LB55*/ 34000000
       2 HIGHCYL5 BIT(8),           /* 6                     @Y30LB55*/ 36000000
       2 FMTMSG5 BIT(8),            /* 7 FORMAT NO. (0-3), MESSAGE      38000000
                                       (4-7)                 @Y30LB55*/ 40000000
        3 SUBFMTN5 BIT(4),          /* SUBFORMAT NUMBER      @Y30LB55*/ 42000000
        3 MSGCODE5 BIT(4),          /* MESSAGE CODE          @Y30LB55*/ 44000000
       2 DASDSENS CHAR(20),         /* 8-27 SUBFORMATS 0 - 6 @Y30LB55*/ 46000000
        3 BYTE8F5 BIT(8),           /* 8                     @Y30LB55*/ 48000000
        3 BYTE9F5 BIT(8),           /* 9                     @Y30LB55*/ 50000000
        3 BYTE10F5 BIT(8),          /* 10                    @Y30LB55*/ 52000000
        3 BYTE11F5 BIT(8),          /* 11                    @Y30LB55*/ 54000000
        3 BYTE12F5 BIT(8),          /* 12                    @Y30LB55*/ 56000000
        3 BYTE13F5 BIT(8),          /* 13                    @Y30LB55*/ 58000000
        3 BYTE14F5 BIT(8),          /* 14                    @Y30LB55*/ 60000000
        3 BYTE15F5 BIT(8),          /* 15                    @Y30LB55*/ 62000000
        3 BYTE16F5 BIT(8),          /* 16                    @Y30LB55*/ 64000000
        3 BYTE17F5 BIT(8),          /* 17                    @Y30LB55*/ 66000000
        3 BYTE18F5 BIT(8),          /* 18                    @Y30LB55*/ 68000000
        3 BYTE19F5 BIT(8),          /* 19                    @Y30LB55*/ 70000000
        3 BYTE20F5 BIT(8),          /* 20                    @Y30LB55*/ 72000000
        3 BYTE21F5 BIT(8),          /* 21                    @Y30LB55*/ 74000000
        3 FSCFMT5 BIT(16),          /* 22,23 FAULT SYMPTOM CODE         76000000
                                                             @Y30LB55*/ 78000000
        3 RUAFMT5 BIT(8),           /* 24                    @Y30LB55*/ 80000000
        3 REALCYL5 BIT(16),         /* 25,26                 @Y30LB55*/ 82000000
        3 BYTE27F5 BIT(8);          /* 27                    @Y30LB55*/ 84000000
./  ADD  SSI=42070319,NAME=ISDAPAD5
    /*****************************************************************/ 00500000
    /*                                                               */ 01000000
    /*                                                       @Y30LB52*/ 01500000
    /* THE FOLLOWING VARIABLES AND STRUCTURES MAP THE VARIABLE       */ 02000000
    /* CONFIGURATION DATA PRODUCED BY THE 'ISDACNFG' ROUTINE. THE    */ 02500000
    /* TABLES ARE ANCHORED BY POINTERS IN THE FIXED CONFIGURATION    */ 03000000
    /* STRUCTURE.                                            @Y30LB52*/ 03500000
    /*                                                       @Y30LB52*/ 04000000
    /*                                                               */ 04500000
    /*****************************************************************/ 05000000
                                                                        05500000
    DCL                                                                 06000000
                                                                        06500000
      /***************************************************************/ 07000000
      /*                                                             */ 07500000
      /*                                                     @Y30LB52*/ 08000000
      /* THE FOLLOWING IS A BASED VARIABLE MAPPING THE 16 POSSIBLE   */ 08500000
      /* CPU SERIAL ID'S ATTACHED TO THE SUBSYSTEM IN THE    @Y30LB52*/ 09000000
      /* CONFIGURATION DESCRIBED. EACH SERIAL IS 5 BYTES.    @Y30LB52*/ 09500000
      /*                                                     @Y30LB52*/ 10000000
      /*                                                             */ 10500000
      /***************************************************************/ 11000000
                                                                        11500000
      CPUSERS CHAR(80) BASED(CPUSERAD),/* CPU SERIALS        @Y30LB52*/ 12000000
                                                                        12500000
      /***************************************************************/ 13000000
      /*                                                             */ 13500000
      /*                                                     @Y30LB52*/ 14000000
      /* THIS STRUCTURE MAPS THE LOGICAL CONFIGURATION OF THE SS/1   */ 14500000
      /* DRC'S AND DRD'S ONTO THE PHYSICAL CONFIGURATION THIS@Y30LB52*/ 15000000
      /* STRUCTURE CONTAINS AN ENTRY FOR EACH DRC IN A PHYSICAL      */ 15500000
      /* LIBRARY. FOR EACH ENTRY THE PHYSICAL SA(FOR DRC) AND ITS    */ 16000000
      /* LOGICAL CONNECTION IS GIVEN.                        @Y30LB52*/ 16500000
      /*                                                     @Y30LB52*/ 17000000
      /*                                                             */ 17500000
      /***************************************************************/ 18000000
                                                                        18500000
      LTPDRDP PTR(31),              /* LOGICAL TO PHYSICAL TABLE BASE   19000000
                                                             @Y30LB52*/ 19500000
      1 LTPDRDTB CHAR(8) BDY(HWORD) BASED(LTPDRDP),/* LOGICAL TO        20000000
                                       PHYSICAL SA-CONTROLLER           20500000
                                       CONNECTION TABLE      @Y30LB52*/ 21000000
       2 LTPDRC(4) CHAR(2),         /* FOUR CONTROLLERS MAXIMUM PER     21500000
                                       CARTRIDGE STORE       @Y30LB52*/ 22000000
        3 DRCL0 CHAR(1),            /* SA AND LOGICAL CONNECTION FOR    22500000
                                       FIRST INTERFACE       @Y30LB52*/ 23000000
        3 DRCL1 CHAR(1),            /* SA CNTN AND LOGICALNO.           23500000
                                                             @Y30LB52   24000000
                                                                     */ 24500000
 @EJECT;                                                                25000000
                                                                        25500000
      /***************************************************************/ 26000000
      /*                                                             */ 26500000
      /*                                                     @Y30LB52*/ 27000000
      /* FOR EACH MSC, THERE IS A SA ARRAY                   @Y30LB52*/ 27500000
      /*                                                     @Y30LB52*/ 28000000
      /*                                                             */ 28500000
      /***************************************************************/ 29000000
                                                                        29500000
      1 SADRDDSD(16) CHAR(8) BDY(WORD) BASED,/* TWO LOWER LEVEL         30000000
                                       POINTERS FOR EACH SA  @Y30LB52*/ 30500000
       2 SADRDACC PTR(31),          /* PTR TO DRD ACCUMULATORS       */ 31000000
       2 SADASDAC PTR(31),          /* PTR TO DASD ACCUMULATORS      */ 31500000
      CSADRDDS CHAR(128) DEF(SADRDDSD),/* CHARACTER MAP OF THE ABOVE    32000000
                                       ARRAY                 @Y30LB52*/ 32500000
                                                                        33000000
      /***************************************************************/ 33500000
      /*                                                             */ 34000000
      /*                                                     @Y30LB52*/ 34500000
      /* FOR EACH SA, THERE IS A SEPARATE SET OF ACCUMULATORS@Y30LB52*/ 35000000
      /*                                                     @Y30LB52*/ 35500000
      /*                                                             */ 36000000
      /***************************************************************/ 36500000
                                                                        37000000
      DRDACCTB(4,4) CHAR(6) BDY(HWORD) BASED,/* ARRAY OF ERROR          37500000
                                       ACCUMULATORS FOR AN ENTIRE       38000000
                                       LIBRARY               @Y30LB52*/ 38500000
      CDRDACCT CHAR(96) DEF(DRDACCTB),/* CHARACTER MASK FOR THE         39000000
                                       ACCUMULATOR ARRAY     @Y30LB52*/ 39500000
      1 DRDACCS BASED,              /* THREE ERROR TYPES     @Y30LB52*/ 40000000
       2 DRDERRS FIXED(15),         /* DRD ERRORS            @Y30LB52*/ 40500000
       2 CTLIERRS FIXED(15),        /* CTL-I INTERFACE ERRORS@Y30LB52*/ 41000000
       2 DRCERRS FIXED(15),         /* DRD CONTROLLER ERRORS @Y30LB52   41500000
                                                                     */ 42000000
 @ EJECT;                                                               42500000
                                                                        43000000
      /***************************************************************/ 43500000
      /*                                                             */ 44000000
      /*                                                     @Y30LB52*/ 44500000
      /* THIS IS THE TOP LEVEL OF AN ALTERNATE MEANS OF ACCESSING THE*/ 45000000
      /* STRUCTURE OF HOST/SA DASD ERROR ACCUMULATORS. THIS IS AN    */ 45500000
      /* ARRAY OF POINTERS TO THE 'CHCUTAB' ENTRIES BASED ON 'SA'    */ 46000000
      /* NUMBER AND INTERFACE.                               @Y30LB52*/ 46500000
      /*                                                     @Y30LB52*/ 47000000
      /*                                                             */ 47500000
      /***************************************************************/ 48000000
                                                                        48500000
      SAINTF(3) PTR(31) BASED,      /* ONE POINTER FOR EACH UPPER       49000000
                                       INTERFACE ATTACHED TO A HOST     49500000
                                       CHANNEL               @Y30LB52*/ 50000000
                                                                        50500000
      /***************************************************************/ 51000000
      /*                                                             */ 51500000
      /*                                                     @Y30LB52*/ 52000000
      /* THIS STRUCTURE MAPS THE TABLE EQUATING CPU/CH/CU    @Y30LB52*/ 52500000
      /* IDENTIFICATIONS TO ABSOLUTE STORAGE ADAPTOR UPPER   @Y30LB52*/ 53000000
      /* INTERFACES. THIS TABLE ALSO PROVIDES A POINTER, FOR EACH    */ 53500000
      /* INTERFACE, TO AN ARRAY OF ACCUMULATORS FOR ERRORS IN A DASD */ 54000000
      /* PATH.                                               @Y30LB52*/ 54500000
      /*                                                     @Y30LB52*/ 55000000
      /*                                                             */ 55500000
      /***************************************************************/ 56000000
                                                                        56500000
      1 CHCUTAB CHAR(12) BDY(WORD) BASED,/* CHANNEL AND CONTROL UNIT    57000000
                                       TO SA TABLE           @Y30LB52*/ 57500000
       2 CPUIDSER CHAR(5),          /* HOST SERIAL           @Y30LB52*/ 58000000
       2 CHCU CHAR(1),              /* CHANNEL/CONTROL UNIT IDS      */ 58500000
       2 SA CHAR(1),                /* SA NUMBER             @Y30LB52*/ 59000000
       2 INTF CHAR(1),              /* WHICH INTERFACE       @Y30LB52*/ 59500000
       2 SPLTABP PTR(31),           /* PTR TO SPINDLE ACCUMULATORS   */ 60000000
                                                                        60500000
      /***************************************************************/ 61000000
      /*                                                             */ 61500000
      /*                                                     @Y30LB52*/ 62000000
      /* FOR EACH SA AND UPPER INTERFACE(B, C, D), THERE IS A SET OF */ 62500000
      /* ACCUMULATORS, ONE FOR EACH LOGICAL CONTROLLER AND PHYSICAL  */ 63000000
      /* DRIVE                                               @Y30LB52*/ 63500000
      /*                                                     @Y30LB52*/ 64000000
      /*                                                             */ 64500000
      /***************************************************************/ 65000000
                                                                        65500000
      SPNDLETB(4,8) CHAR(6) BDY(HWORD) BASED,/* SPINDLE ACCUMULATORS */ 66000000
      CSPNDLET CHAR(192) DEF(SPNDLETB),/* CHARACTER MAP      @Y30LB52*/ 66500000
      1 SPNDLES BASED,              /* THREE RECORDED ERRORS @Y30LB52*/ 67000000
       2 DRVEQCHK FIXED(15),        /* DRIVE CHECKS          @Y30LB52*/ 67500000
       2 STCTLCHK FIXED(15),        /* STORAGE CONTROL CHECKS@Y30LB52*/ 68000000
       2 STCTLCCK FIXED(15),        /* STORAGE CONTROL CONTROL CHECKS   68500000
                                                             @Y30LB52   69000000
                                                                     */ 69500000
 @EJECT;                                                                70000000
                                                                        70500000
      /***************************************************************/ 71000000
      /*                                                             */ 71500000
      /*                                                     @Y30LB52*/ 72000000
      /* THIS STRUCTURE MAPS THE HEADER OF THE FIRST BLOCK OF DYNAMIC*/ 72500000
      /* STORAGE OBTAINED.                                   @Y30LB52*/ 73000000
      /*                                                     @Y30LB52*/ 73500000
      /*                                                             */ 74000000
      /***************************************************************/ 74500000
                                                                        75000000
      1 P0WORK BDY(WORD) BASED(PAD00PTR),                               75500000
       2 PADFPTR PTR(31),           /* NEXT BLOCK ADDRESS    @Y30LB52*/ 76000000
       2 PADLASTB PTR(31),          /* LAST BLOCK ADDRESS    @Y30LB52*/ 76500000
       2 COREASG PTR(31),           /* NEXT AVAILABLE BYTE   @Y30LB52*/ 77000000
       2 ENDCORE PTR(31),           /* END OF BLOCK          @Y30LB52*/ 77500000
                                                                        78000000
      /***************************************************************/ 78500000
      /*                                                             */ 79000000
      /*                                                     @Y30LB52*/ 79500000
      /* THE HIGHEST LEVEL CONTAINS MSC UNIT ADDRESSES AND A POINTER */ 80000000
      /* TO AN SA TABLE                                      @Y30LB52*/ 80500000
      /*                                                     @Y30LB52*/ 81000000
      /*                                                             */ 81500000
      /***************************************************************/ 82000000
                                                                        82500000
       2 MSCDRDAC(8) CHAR(8) BDY(WORD),                                 83000000
        3 MSCINTF CHAR(2),          /* MSC UNIT ADDRESS      @Y30LB52*/ 83500000
        3 * CHAR(2),                                                    84000000
        3 SATABPTR PTR(31),         /* POINTER TO THE SA LEVEL       */ 84500000
                                                                        85000000
      /***************************************************************/ 85500000
      /*                                                             */ 86000000
      /* TOTAL ERROR ACCUMULATOR FOR CARTRIDGE STORE'S AND MSC'S     */ 86500000
      /*                                                             */ 87000000
      /***************************************************************/ 87500000
                                                                        88000000
      2 CSFTOTAL(4) FIXED(15),      /* CS TOTALS             @Y30LB52*/ 88500000
      2 MSCTOTAL FIXED(15),         /* TOTAL ERRORS FOR MSC(DASD)       89000000
                                                             @Y30LB52*/ 89500000
      2 HTOTAL FIXED(15),           /* TOTAL ERRORS FROM HOST(DASD)     90000000
                                                             @Y30LB52*/ 90500000
                                                                        91000000
      /***************************************************************/ 91500000
      /*                                                             */ 92000000
      /*                                                     @Y30LB52*/ 92500000
      /* THIS STRUCTURE MAPS THE HEADER OF ALL BLOCKS AFTER THE      */ 93000000
      /* FIRST.                                              @Y30LB52*/ 93500000
      /*                                                     @Y30LB52*/ 94000000
      /*                                                             */ 94500000
      /***************************************************************/ 95000000
                                                                        95500000
      1 P0WORK1 BDY(WORD) BASED,                                        96000000
       2 PADFPTR1 PTR(31);                                              96500000
./  ADD  SSI=53120333,NAME=ISDAPRMS
                                                                        01000003
    /*****************************************************************/ 02000003
    /*                            ISDAPRMS                           */ 03000003
    /* SDA PARAMATER CONTROL BLOCK. THIS CONTROL BLOCK IS USED BY THE*/ 04000003
    /* MAIN PROC FOR DISPATCHING. IF THE CONTROL FLAG FOR A          */ 05000003
    /* PARTICULAR REPORT IS '00'X THE REPORT PROC IS NEVER CALLED.   */ 06000003
    /* THOSE REPORTS THAT HAVE MORE THAN ONE FUNCTION MUST CHECK ITS */ 07000003
    /* CONTROL FLAG FOR THE VALUE '01'X=REPORT 1 ONLY, '02'X=REPORT2 */ 08000003
    /* ONLY, AND '03'X=BOTH REPORT 1 AND 2. IF AN ACCUMULATOR DECIDES*/ 09000003
    /* THAT IT CANNOT PRODUCE A MEANINGFUL REPORT, IT SHOULD RESET   */ 10000003
    /* ITS REPORT CONTROL FLAG TO '00'X. THIS WILL PREVENT THE       */ 11000003
    /* CONTROLLER FROM EVER CALLING EITHER THE ACCUMLATOR OR THE     */ 12000003
    /* OUTPUT FORMATER FOR THAT REPORT.                              */ 13000003
    /*                                                               */ 14000003
    /*****************************************************************/ 15000003
                                                                        16000003
 /* %INCLUDE ISDADCLS(ISDAPRMS)                              @Y30LB55*/ 17000003
                                                                        18000003
    DCL                             /* SDA CONTROL PARAMATERS@Y30LB55*/ 19000003
      1 ISDAPRMS BASED(LPARMPTR),                                       20000003
       2 CINPUT CHAR(2),            /* (XY) = INPUT SOURCE   @Y30LB55*/ 21000003
        3 CLOGIN CHAR(1),           /* (Y|N) = LOGREC        @Y30LB55*/ 22000003
        3 CHISTIN CHAR(1),          /* (Y|N) = HISTORY       @Y30LB55*/ 23000003
       2 CSTART CHAR(4),            /* (00YYDDDF) = START DATE          24000003
                                                             @Y30LB55*/ 25000003
        3 CSTYEAR CHAR(2),          /* (00YY) = YEAR         @ZD00192*/ 26000003
        3 CSTDAY  CHAR(2),          /* (DDDF) = DAY          @ZD00192*/ 27000003
       2 CEND CHAR(4),              /* (00YYDDDF) = END DATE @Y30LB55*/ 28000003
        3 CENDYEAR CHAR(2),         /* (00YY) = YEAR         @ZD00192*/ 29000003
        3 CENDDAY  CHAR(2),         /* (DDDF) = DAY          @ZD00192*/ 30000003
       2 CSUMMARY CHAR(1),          /* (X) = Y OR N          @Y30LB55*/ 31000003
       2 CTYPE CHAR(2),             /* (XX) = SA|RC|RD|CS|DA @Y30LB55*/ 32000003
       2 CFSCONLY CHAR(4),          /* (FSC)=FAULT SYMPTOM CODE (HEX)   33000003
                                                             @Y30LB55*/ 34000003
        3 CFSC12 CHAR(2),           /* 2 BYTE FSC FOR FMT 4 AND 5       35000003
                                                             @Y30LB55*/ 36000003
        3 CFSC34 CHAR(2),           /* ='00' WHEN 2 BYTE FSC @Y30LB55*/ 37000003
       2 CSSIDF CHAR(2),            /* (SSID) = SUBSYSTEM ID (HEX)      38000003
                                                             @Y30LB55*/ 39000003
        3 * BIT(4),                 /* ZERO                  @Y30LB55*/ 40000003
        3 CSSID BIT(12),            /* (SSID) = SUBSYSTEM ID @Y30LB55*/ 41000003
       2 CRATIO CHAR(2),            /* (XX) = ERROR RATIO TO PRINT      42000003
                                                             @Y30LB55*/ 43000003
       2 CSERIAL CHAR(12),          /* (XXX YYYYYYYY) CART SER          44000003
                                                             @Y30LB55*/ 45000003
        3 CIBM CHAR(3),             /* ALPHA ID OF CART      @Y30LB55*/ 46000003
        3 * CHAR(1),                /* BLANK                 @Y30LB55*/ 47000003
        3 CSERNO CHAR(8),           /* CART SERIAL NO.       @Y30LB55*/ 48000003
 /*  REPORT CONTROL FLAGS, '00'X = REPORT NOT REQUESTED      @Y30LB55*/ 49000003
                                                                        50000003
       2 CREPORTS,                  /* REPORT CONTROL FLAGS  @Y30LB55*/ 51000003
        3 CDCS BIT(8),              /* (X) = 00 OR 01 HEX    @Y30LB55*/ 52000003
        3 CPAD BIT(8),              /* (X) = 00 OR 01 HEX    @Y30LB55*/ 53000003
        3 CSUM BIT(8),              /* (X) = 00,01,02, OR 03 HEX        54000003
                                  01=SUM, 02=DETAIL, 03=BOTH @Y30LB55*/ 55000003
                                                                        56000003
        3 CDHEDHU BIT(8),           /* (X) = 00,01,02, OR 03 HEX        57000003
                                    01=DHE, 02=DHU, 03=BOTH  @Y30LB55*/ 58000003
                                                                        59000003
        3 CFSC BIT(8),              /* (X) = 00 OR 01 HEX    @Y30LB55*/ 60000003
        3 CEQC BIT(8),              /* (X) = 00 OR 01 HEX    @Y30LB55*/ 61000003
        3 CDCKTLX BIT(8),           /* (X) = 00,01,02, OR 03 HEX        62000003
                                    01=DCK, 02=TLX, 03=BOTH  @Y30LB55*/ 63000003
                                                                        64000003
        3 CCSBCSF BIT(8),           /* (X) = 00,01,02, OR 03 HEX        65000003
                                    01=CSB, 02=CSF, 03=BOTH  @Y30LB55*/ 66000003
                                                                        67000003
        3 CDAT BIT(8),              /* (X) = 00 OR 01 HEX    @Y30LB55*/ 68000003
        3 CDRC BIT(8),              /* (X) = 00 OR 01 HEX    @Y30LB55*/ 69000003
        3 CAPRSUU BIT(8),           /* (X) = 00,01,02, OR 03 HEX        70000003
                                  01=APR, 02=SUU, 03=BOTH    @ZD00192*/ 71000003
        3 CPWR BIT(8),              /* SPARE - RESERVED      @ZM30976*/ 72000003
       2 CPERIOD FIXED(8),          /* (X) = NO. DAYS TO REPORT         73000003
                                                             @Y30LB55*/ 74000003
       2 CDETAIL BIT(8),            /* (X) = SUMMARY PRINT MASK         75000003
                                                             @ZD00192*/ 76000003
  /*                                   BIT 0 = FORMAT 0                 77000003
                                       BIT 1 = FORMAT 1                 78000003
                                       BIT 2 = FORMAT 2                 79000003
                                       BIT 3 = FORMAT 3                 80000003
                                       BIT 4 = FORMAT 4                 81000003
                                       BIT 5 = FORMAT 5                 82000003
                                       BIT 6 = TRACE IN ISDASDA0        83000003
                                       BIT 7 = NOT USED              */ 84000003
       2 CGEN BIT(8),               /* (X)=00,01,02,04(NO,SUM,FSC,EQC)  85000003
                                                             @Y30LB55*/ 86000003
       2 CTRACE BIT(8);             /* (X)=00 FOR TRACE OFF, XX FOR     87000003
                                       TRACE ON              @Y30LB55*/ 88000003
    %SDAPARML='LENGTH(ISDAPRMS)';                          /*@Y30LB55*/ 89000003
                                                                        90000003
 /*  %SDAPARML='LENGTH(ISDAPRMS)'                            @Y30LB55*/ 91000003
 /* DCL LPARMPTR PTR(31)  AND SET LPARMPTR=PARMPTR           @Y30LB55*/ 92000003
./  ADD  SSI=42480226,NAME=ISDAPSPC
         MACRO                                                          03000003
         ISDAPSPC &OP,&LV=                                     @Y30LB55 06000003
         L     1,0(1) LOAD PTR TO CALLING SEQUENCE             @Y30LB55 09000003
         L     2,0(1) LOAD ADDRESS OF ISDACVT                  @Y30LB55 12000003
         USING ISDACVT,2 TEMP BASE REGISTER                    @Y30LB55 15000003
         LA    1,PRTDATD LOAD ADDRESS OF PRTSA001              @Y30LB55 18000003
         DROP  2 DROP BASE REGISTER                            @Y30LB55 21000003
         MEND                                                           24000003
./  ADD  SSI=42560297,NAME=ISDASOBR
                                                                        02000000
    /*****************************************************************/ 04000000
    /*                                                               */ 06000000
    /* ISDASOBR - SHORT DCL FOR SDA INPUT RECORDS                    */ 08000000
    /*                                                               */ 10000000
    /*****************************************************************/ 12000000
                                                                        14000000
 /* %INCLUDE ISDADCLS(ISDASOBR)                              @Y30LB55*/ 16000000
                                                                        18000000
    DCL                             /* SHORT STRUCTURE FOR RECORDS      20000000
                                       FROM SYS1.LOGREC      @Y30LB55*/ 22000000
      1 OBRMDR BASED(LOGPTR),       /* SHORT OBR-MDR HEADER  @Y30LB55*/ 24000000
       2 SCW FIXED(31),             /* SEGMENT CONTROL WORD  @Y30LB55*/ 26000000
        3 SLENGTH FIXED(15),        /* LENGTH OF SEGMENT     @Y30LB55*/ 28000000
        3 SCODE BIT(8),             /* SEGMENT CODE          @Y30LB55*/ 30000000
        3 * CHAR(1),                /*                       @Y30LB55*/ 32000000
       2 CLASRC BIT(8),             /* 0                     @Y30LB55*/ 34000000
       2 SYSREL BIT(8),             /* 1                     @Y30LB55*/ 36000000
       2 SWITCHES CHAR(4),          /* 2                     @Y30LB55*/ 38000000
        3 SWITCH0 BIT(8),           /*                       @Y30LB55*/ 40000000
        3 SWITCH1 BIT(8),           /* BIT 2 = 1 = OBR SHORT @Y30LB55*/ 42000000
        3 SWITCH2 BIT(8),           /* DEV TYPE FOR MDR      @Y30LB55*/ 44000000
        3 SWITCH3 BIT(8),           /*                       @Y30LB55*/ 46000000
       2 RCDCNT BIT(8),             /* 6                     @Y30LB55*/ 48000000
       2 RECENTRY BIT(8),           /* 7 REC TYPE ID FOR MDR @Y30LB55   50000000
                                       SHORT(SWAP)                   */ 52000000
       2 DATETIME CHAR(8),          /* 8 DATETIME USED FOR HI LOW       54000000
                                       COMPARES              @Y30LB55*/ 56000000
        3 DATE CHAR(4),             /* 8 PACKED YEAR AND DAY @Y30LB55*/ 58000000
         4 YEAR CHAR(2),            /* YEAR IN PACKED DECIMAL@Y30LB55*/ 60000000
         4 DAY CHAR(2),             /* DAY IN PACKED DECIMAL @Y30LB55*/ 62000000
        3 TIME CHAR(4),             /* 12 SEE BITS 1 AND 4 OF SWITCH0   64000000
                                                             @Y30LB55*/ 66000000
         4 HOUR CHAR(1),            /* HOUR IN PACKED DECIMAL@Y30LB55*/ 68000000
         4 MINUTE CHAR(1),          /* MINUTE IN PACKED DECIMAL         70000000
                                                             @Y30LB55*/ 72000000
         4 SECOND CHAR(1),          /* SECOND IN PACKED DECIMAL         74000000
                                                             @Y30LB55*/ 76000000
         4 TENSHUND CHAR(1),        /* TENTHS, HUNDRETHS PACKED         78000000
                                                             @Y30LB55*/ 80000000
       2 VERNO BIT(8),              /* 16                    @Y30LB55*/ 82000000
       2 CPUSERID CHAR(5),          /* 17-21 CPU USER+ID     @Y30LB55*/ 84000000
        3 CPUSER CHAR(3),           /* 17                    @Y30LB55*/ 86000000
        3 CPUID CHAR(2);            /* 20                    @Y30LB55*/ 88000000
    %OBRMDRL='LENGTH(OBRMDR)';                             /*@Y30LB55*/ 90000000
                                                                        92000000
 /*  %OBRMDRL='LENGTH(OBRMDR)'                               @Y30LB55*/ 94000000
 /* DCL LOGPTR PTR(31) AND SET LOGPTR=DATAPTR                @Y30LB55*/ 96000000
./  ADD  SSI=71790279,NAME=ISDASUM5
                                                                        00400003
    /*****************************************************************/ 00800003
    /*                                                               */ 01200003
    /* SUMWORK - LOCAL DYNAMIC WORKAREA                              */ 01600003
    /*                                                               */ 02000003
    /*****************************************************************/ 02400003
                                                                        02800003
    DCL                                                                 03200003
      1 SUMWORK BASED(SUMWKPTR),    /* ISDASUM0 WORK AREA    @Y30LB55*/ 03600003
       2 SUMWORK1,                  /* POINTERS AND COUNTERS @Y30LB55*/ 04000003
        3 ACCM0PTR PTR(31),         /* PTR TO ACCUMULATOR 0  @Y30LB55*/ 04400003
        3 ACCUMPTR PTR(31),         /* PTR TO START OF SUMACCUM         04800003
                                                             @Y30LB55*/ 05200003
        3 ACCM0END PTR(31),         /* PTR TO END OF SUMACCUM@Y30LB55*/ 05600003
        3 LOGPTR PTR(31),           /* PTR TO OBRMDR         @Y30LB55*/ 06000003
        3 SENSEPTR PTR(31),         /* PTR TO MSCSENSE       @Y30LB55*/ 06400003
        3 RCODEPTR PTR(31),         /* PTR TO RCODES         @ZM31074*/ 06800003
        3 RCODECNT FIXED(31),       /* COUNT OF REASON CODES @ZM31074*/ 07200003
        3 SUM2PTR PTR(31),          /* ADDR OF ISDASUM2 + 4  @Y30LB55*/ 07600003
        3 SEVSTART PTR(32),         /* START ADDR SEVRLIST   @ZA20267*/ 08000003
        3 SEVRLEN FIXED(32),        /* LENGTH OF SEVRLIST    @ZA20267*/ 08400003
        3 SEVRLCNT FIXED(32),       /* NO. SEVRLIST ENTRIES  @ZA20267*/ 08800003
        3 GTOTALS,                  /* GRAND TOTALS FOR FORMATS         09200003
                                                             @Y30LB55*/ 09600003
          5 CNTF0 FIXED(31),        /* COUNT OF FORMAT 0     @Y30LB55*/ 10000003
          5 CNTF1 FIXED(31),        /* COUNT OF FORMAT 1     @Y30LB55*/ 10400003
          5 CNTF2 FIXED(31),        /* COUNT OF FORMAT 2     @Y30LB55*/ 10800003
          5 CNTF3 FIXED(31),        /* COUNT OF FORMAT 3     @Y30LB55*/ 11200003
          5 CNTF4 FIXED(31),        /* COUNT OF FORMAT 4     @Y30LB55*/ 11600003
          5 CNTF5 FIXED(31),        /* COUNT OF FORMAT 5     @Y30LB55*/ 12000003
          5 CNTFDASD FIXED(31),     /* COUNT OF HOST DASD    @Y30LB55*/ 12400003
          5 CNTSENSE FIXED(31),     /* COUNT OF SENSE RECORDS@Y30LB55*/ 12800003
          5 CNTLOG FIXED(31),       /* COUNT OF BUFFERED LOG RECORDS    13200003
                                                             @Y30LB55*/ 13600003
        3 TOTPERMS FIXED(31),       /* NO. OF PERM ERRORS    @Y30LB55*/ 14000003
        3 TOTTEMPS FIXED(31),       /* NO. OF TEMP ERRORS    @Y30LB55*/ 14400003
        3 ACCUMCNT FIXED(16),       /* NO. OF ACCUMULATORS   @Y30LB55*/ 14800003
        3 SUMACCL FIXED(16),        /* LENGTH OF SUMACCUM    @Y30LB55*/ 15200003
        3 NCOUNTER FIXED(16),       /* NUMBER OF COUNTERS IN SUMACCUM   15600003
                                                             @Y30LB55*/ 16000003
        3 NCPUUSED FIXED(16),       /* NO. CPUIDS FOUND      @Y30LB55*/ 16400003
        3 NCPUCNTS FIXED(16),       /* MAX NO. CPUIDS ALLOWED@Y30LB55*/ 16800003
       2 SUMWORK2,                  /* CPU IDS               @Y30LB55*/ 17200003
        3 CPUFOUND(16) CHAR(5),     /* 16 CPUIDS TOTAL FOUND @Y30LB55*/ 17600003
       2 SUMTEMPS,                  /* TEMP AREA             @Y30LB55*/ 18000003
        3 TEMP9 CHAR(9),            /* USED FOR CVD          @Y30LB55*/ 18400003
         4 TEMP8 CHAR(8),           /* USED FOR CVD          @Y30LB55*/ 18800003
          5 TEMP7 CHAR(7),          /* USED FOR CVD          @Y30LB55*/ 19200003
           6 TEMP6 CHAR(6),         /* USED FOR CVD          @Y30LB55*/ 19600003
            7 TEMP5 CHAR(5),        /* USED FOR CVD          @Y30LB55*/ 20000003
             8 TEMP4 CHAR(4),       /* USED FOR CVD          @Y30LB55*/ 20400003
              9 TEMP3 CHAR(3),      /* USED FOR CVD          @Y30LB55*/ 20800003
               10 TEMP2 CHAR(2),    /* USED FOR CVD          @Y30LB55*/ 21200003
                11 TEMP1 CHAR(1),   /* TEMP CHAR             @Y30LB55*/ 21600003
        3 TEMP20 CHAR(20),          /* SAVEAREA FOR LINE 2 OF DETAIL    22000003
                                                             @Y30LB55*/ 22400003
         4 TEMP16 CHAR(6),          /* CPUSERM01             @Y30LB55*/ 22800003
         4 TEMP710 CHAR(4),         /* CPUIDM01              @Y30LB55*/ 23200003
         4 TEMP1113 CHAR(3),        /* SSIDM01               @Y30LB55*/ 23600003
         4 TEMP1417 CHAR(4),        /* FSCM01                @Y30LB55*/ 24000003
         4 TEMP1820 CHAR(3),        /* DEVCUA01              @Y30LB55*/ 24400003
        3 TEMP3032 CHAR(3),         /* END OF 32 BYTE AREA   @Y30LB55*/ 24800003
       2 SUMWORK3,                  /* MASKS AND FLAGS       @Y30LB55*/ 25200003
        3 SUMFLAGS BIT(8),          /* COMUNICATION BYTE     @Y30LB55*/ 25600003
 /*  SUMFLAGS - USED FOR COMMUNICATION BETWEEN ISDASUM0 AND ISDASUM1    26000003
     BIT 0 = 1 FOR SPECIAL CALL TO SUM0 TO PRINT SEVERITY REPORT        26400003
     BIT 1 = SPARE                                                      26800003
     BIT 2 = SPARE                                                      27200003
     BIT 3 = SPARE                                                      27600003
     BIT 4 = SPARE                                                      28000003
     BIT 5 = SPARE                                                      28400003
     BIT 6 = SPARE                                                      28800003
     BIT 7 = CPUFOUND TABLE OVERFLOWED                       @ZA20267*/ 29200003
                                                                        29600003
        3 FORMATNC CHAR(1),         /* EBCDIC FORMAT NUMBER  @Y30LB55*/ 30000003
        3 MAINMASK,                 /* 3 BYTE MASK           @Y30LB55*/ 30400003
          5 FORMATCK BIT(8),        /* FORMATNO BITS 0-5     @Y30LB55*/ 30800003
          5 FLAGMASK BIT(8),        /* FLAG MASK             @Y30LB55*/ 31200003
          5 SUBFMASK BIT(8),        /* SUBFMT MSG CODE MASK  @Y30LB55*/ 31600003
        3 FMTIDSV CHAR(7),          /* EBCDIC RECORD ID      @Y30LB55*/ 32000003
        3 SUBFIDSV CHAR(1),         /* EBCDIC SUBFORMAT NO.  @Y30LB55*/ 32400003
        3 MSGCODSV CHAR(1),         /* EBCDIC MESSAGE CODE   @Y30LB55*/ 32800003
        3 TSEVTEMP,                 /* SEVERITY WORK AREA    @ZA20267*/ 33200003
         4 TSEVCDID,                /* SEV CODE + SSID       @ZA20267*/ 33600003
          5 TSEVCODE CHAR(2),       /* SEVERITY CODE         @ZA20267*/ 34000003
          5 TSSID CHAR(2),          /* SSID                  @ZA20267*/ 34400003
         4 TPTFLAG BIT(8),          /* PERM-TEMP FLAG        @ZA20267*/ 34800003
         4 TSEVFMTS,                /* FORMAT + SUBFMT       @ZA20267*/ 35200003
          5 TSEVFMT BIT(8),         /* FORMAT                @ZA20267*/ 35600003
          5 TSEVSUBF BIT(8),        /* SUBFORMAT + MSG CODE  @ZA20267*/ 36000003
         4 TSEVMASK BIT(8),         /* RECORD TYPE MASK      @ZA20267*/ 36400003
         4 TSEVECOD BIT(8);         /* BYTE 12 OR BYTE 27    @ZA20267*/ 36800003
    %SUMWORKL='LENGTH(SUMWORK)';    /* LENGTH OF SUMWORK     @Y30LB55*/ 37200003
 /* %SUMWORKL='LENGTH(SUMWORK)'  LENGTH OF SUMWORK           @Y30LB55*/ 37600003
                                                                        38000003
    DCL                             /* OVERLAYS FOR UNPACK   @Y30LB55*/ 38400003
      TEMP68 CHAR(3) DEF(TEMP8) POS(6),/* BYTES 6-8          @Y30LB55*/ 38800003
      TEMP78 CHAR(2) DEF(TEMP8) POS(7);/* BYTES 7-8          @Y30LB55*/ 39200003
                                                                        39600003
    /*****************************************************************/ 40000003
    /*                                                               */ 40400003
    /* ACCUMULATOR FOR ISDASUM0                                      */ 40800003
    /*                                                               */ 41200003
    /*****************************************************************/ 41600003
                                                                        42000003
    DCL                                                                 42400003
      SUMACCUM BASED(ACCUMPTR);     /* FORMAT COUNTERS       @Y30LB55*/ 42800003
                                                                        43200003
    /*****************************************************************/ 43600003
    /*                                                               */ 44000003
    /* MODEL FOR DEFAULT TABLE ISDASUM2 (OFFSET 4)                   */ 44400003
    /*                                                               */ 44800003
    /*****************************************************************/ 45200003
                                                                        45600003
    DCL                             /* MODEL FOR DEVIDTB     @Y30LB55*/ 46000003
      1 MDEVIDTB BASED(DEVIDPTR),   /* 48 BYTES EACH ENTRY   @Y30LB55*/ 46400003
        3 MDFMTXXX,                 /* FORMAT X              @Y30LB55*/ 46800003
          5 MDMASK,                 /* 3 BYTE MASK           @Y30LB55*/ 47200003
            7 MDFXXX BIT(8),        /* FORMAT MASK           @Y30LB55*/ 47600003
 /* MDFLAG - 8 BIT FLAG FOR COMPARE WITH FLAGMASK            @Y30LB55   48000003
     BIT 0 = DRD UNLOAD FAILURE = SA FMT 9C,9D, OR 9E                   48400003
     BIT 1 = SPARE                                                      48800003
     BIT 2 = REAL 3330                                                  49200003
     BIT 3 = VIRTUAL 3330                                               49600003
     BIT 4 = FORMAT 0 UNIT UNUSABLE OR MEDIA FAILURE                    50000003
     BIT 5 = CS RECONFIGURED                                            50400003
     BIT 6 = CS FORCED LOGGING MODE                                     50800003
     BIT 7 = BUFFERED LOG DATA                               @Y30LB55*/ 51200003
                                                                        51600003
            7 MDFLAG BIT(8),        /* FLAG MASK             @Y30LB55*/ 52000003
            7 MDSMXXX BIT(8),       /* SUBFMT MSG CODE MASK  @Y30LB55*/ 52400003
          5 MDIDS,                  /* FORMAT IDS            @Y30LB55*/ 52800003
            7 MDCFXXX CHAR(4),      /* FORMAT ID             @Y30LB55*/ 53200003
            7 MDCSMXXX CHAR(2),     /* SUBFMT MSG CODE ID    @Y30LB55*/ 53600003
             8 MDCSXXX CHAR(1),     /* EBCDIC SA FORMAT      @Y30LB55*/ 54000003
             8 MDCMXXX CHAR(1),     /* EBCDIC MSG CODE       @Y30LB55*/ 54400003
            7 MDIDXXX CHAR(5),      /* DEVICE ID             @Y30LB55*/ 54800003
          5 MDMSGXXX CHAR(34);      /* FORMAT MESSAGE        @Y30LB55*/ 55200003
    %DFMTL='LENGTH(MDEVIDTB)';      /* LENGTH OF EACH ENTRY  @Y30LB55*/ 55600003
 /* DFMTL='LENGTH(MDEVIDTB)' LENGTH OF EACH ENTRY            @Y30LB55*/ 56000003
                                                                        56400003
    /*****************************************************************/ 56800003
    /*                                                               */ 57200003
    /* MODEL FOR COUNTERS - SUMACCUM                                 */ 57600003
    /*                                                               */ 58000003
    /*****************************************************************/ 58400003
                                                                        58800003
    DCL                             /* MODEL FOR SUMACCUM    @Y30LB55*/ 59200003
      1 MCOUNTER BASED(COUNTPTR),   /* 28 BYTES EACH ENTRY   @Y30LB55*/ 59600003
        3 MCFMTXXX,                 /* COUNTER FOR FORMAT X  @Y30LB55*/ 60000003
          5 MCADDXXX PTR(31),       /* ADDR OF DEFAULT TABLE FOR FMT    60400003
                                       X                     @Y30LB55*/ 60800003
          5 MCOUNTS,                /* COUNTS FOR FORMAT X   @Y30LB55*/ 61200003
            7 MCPXXX FIXED(16),     /* NO. PERM ERROR OR OBR @Y30LB55*/ 61600003
            7 MCTXXX FIXED(16),     /* NO. TEMP ERROR OR MDR @Y30LB55*/ 62000003
          5 MCMASK,                 /* 3 BYTE MASK           @Y30LB55*/ 62400003
            7 MCFXXX BIT(8),        /* FORMAT MASK           @Y30LB55*/ 62800003
            7 MCFLAG BIT(8),        /* FLAG MASK             @Y30LB55*/ 63200003
            7 MCSMXXX BIT(8),       /* SUBFMT MSG CODE MASK  @Y30LB55*/ 63600003
          5 MCSPARE BIT(8),         /* SPARE BYTE            @Y30LB55*/ 64000003
          5 MLDTIME CHAR(8),        /* LOW DATE + TIME       @Y30LB55*/ 64400003
            7 MLDATE CHAR(4),       /* LOW DATE              @Y30LB55*/ 64800003
            7 MLTIME CHAR(4),       /* LOW TIME              @Y30LB55*/ 65200003
          5 MHDTIME CHAR(8),        /* HIGH DATE + TIME      @Y30LB55*/ 65600003
            7 MHDATE CHAR(4),       /* HIGH DATE             @Y30LB55*/ 66000003
            7 MHTIME CHAR(4);       /* HISG TIME             @Y30LB55*/ 66400003
    %CFMTL='LENGTH(MCOUNTER)';      /* LENGTH OF EACH ENTRY  @Y30LB55*/ 66800003
 /* CFMTL='LENGTH(MCOUNTER)'  LENGTH OF EACH ENTRY           @Y30LB55*/ 67200003
                                                                        67600003
    /*****************************************************************/ 68000003
    /*                                                               */ 68400003
    /* DEFAULT TABLE - THE FIRST 4 BYTES IS A COUNT OF THE NUMBER OF */ 68800003
    /* ENTRIES. THE ACTUAL TABLE STARTS AT ISDASUM2 + 4              */ 69200003
    /*                                                               */ 69600003
    /*****************************************************************/ 70000003
                                                                        70400003
    DCL                                                                 70800003
      ISDASUM2 FIXED(31) BOUNDARY(WORD) NONLOCAL EXTERNAL; /*@Y30LB55*/ 71200003
    DCL                             /* REASON CODE DCLS      @ZM31074*/ 71600003
      RCODES (256)FIXED(16) BASED(RCODEPTR),/* 16X16 TABLE   @ZM31074*/ 72000003
      RCODELEN FIXED(31) CONSTANT(1024);/* LENGTH OF RCODES  @ZM31074*/ 72400003
                                                                        72800003
    /*****************************************************************/ 73200003
    /*                                                               */ 73600003
    /* SEVERITY CODE TABLE - 16 MOST SEVERE ERRORS                   */ 74000003
    /*                                                               */ 74400003
    /*****************************************************************/ 74800003
                                                                        75200003
    DCL                                                                 75600003
      1 SEVRLIST BASED(SEVRPTR),    /* SEVERITY DATA BUFFER  @ZA20267*/ 76000003
       2 SEVRCNT FIXED(16),         /* NUMBER OF OCCURRENCES @ZA20267*/ 76400003
       2 SEVHMOVE,                  /* HEADER                @ZA20267*/ 76800003
        3 SEVCDSID,                 /* SEV CODE + SSID       @ZA20267*/ 77200003
         4 SEVRCODE FIXED(16),      /* SEVERITY CODE         @ZA20267*/ 77600003
         4 SEVSSID CHAR(2),         /* SSID                  @ZA20267*/ 78000003
        3 PTFLAG BIT(8),            /* PERM-TEMP FLAG        @ZA20267*/ 78400003
        3 SEVFMT BIT(8),            /* FORMAT                @ZA20267*/ 78800003
        3 SEVSUBF BIT(8),           /* SUBFORMAT + MSG CODE  @ZA20267*/ 79200003
        3 SEVFMASK BIT(8),          /* RECORD TYPE MASK      @ZA20267*/ 79600003
        3 SEVECODE BIT(8),          /* BYTE 12 OR BYTE 27    @ZA20267*/ 80000003
       2 SEVSPARE BIT(8),           /* SPARE                 @ZA20267*/ 80400003
       2 SEVSDAWK CHAR(20),         /* SAVE SDAWORK AREA     @ZA20267*/ 80800003
       2 SEVSDPTR PTR(32),          /* OFFSET TO SENSE DATA  @ZA20267*/ 81200003
       2 SEVDEVPT PTR(32),          /* OFFSET TO DEVICE DATE @ZA20267*/ 81600003
       2 SEVDATA CHAR(128),         /* SAVE AREA FOR DATA    @ZA20267*/ 82000003
        3 * CHAR(12),               /*                       @ZA20267*/ 82400003
        3 SEVDATET CHAR(8);         /* DATE - TIME IN DATA   @ZA20267*/ 82800003
./  ADD  SSI=42560298,NAME=ISDAWORK
                                                                        02000000
    /*****************************************************************/ 04000000
    /*                                                               */ 06000000
    /* ISDAWORK - ISDASDA0 MAIN WORK AREA                            */ 08000000
    /*                                                               */ 10000000
    /*****************************************************************/ 12000000
                                                                        14000000
    DCL                                                                 16000000
      1 ISDAWORK BASED(SDA00PTR),   /* ISDASDA0 WORK AREA    @Y30LB55*/ 18000000
       2 INFLAGS FIXED(31),         /* INPUT IO FLAGS        @Y30LB55*/ 20000000
        3 IRECTYPE CHAR(1),         /* O=OBR, M=MDR          @Y30LB55*/ 22000000
        3 INSOURCE CHAR(1),         /* H=HISTORY, L=LOGREC   @Y30LB55*/ 24000000
        3 INDEVTYP CHAR(1),         /* S=SUBSYSTEM,V=VIRTUAL @Y30LB55   26000000
                                       DASD,R=REAL DASD              */ 28000000
 /* SDAFLAG0 - 8 BIT FLAG BYTE FOR COMMUNICATION BETWEEN PROCS          30000000
                                                             @Y30LB55   32000000
     BIT 0 - SPARE                                           @Y30LB55   34000000
     BIT 1 - SPARE                                           @Y30LB55   36000000
     BIT 2 - SPARE                                           @Y30LB55   38000000
     BIT 3 - SPARE                                           @Y30LB55   40000000
     BIT 4 - SPARE                                           @Y30LB55   42000000
     BIT 5 - SPARE                                           @Y30LB55   44000000
     BIT 6 - 1 IF RUNNING UNDER VM370/CMS                    @Y30LB55   46000000
     BIT 7 = 1 IF FAULT SYMPTOM CODE GENERATED BY ISDAGEN0   @Y30LB55*/ 48000000
                                                                        50000000
        3 SDAFLAG0 BIT(8),          /* SDA COMMUNICATION FLAG BYTE      52000000
                                                             @Y30LB55*/ 54000000
       2 DLENGTH FIXED(15),         /* SENSE DATA LENGTH     @Y30LB55*/ 56000000
       2 INRECCUA CHAR(2),          /* REAL CUA FOR INPUT RECORD        58000000
                                                             @Y30LB55*/ 60000000
         3 CUABYTE0 BIT(8),         /* CHANNEL               @Y30LB55*/ 62000000
         3 CUABYTE1 BIT(8),         /* SA-CTL-SPINDLE        @Y30LB55*/ 64000000
       2 NINREC FIXED(31),          /* INPUT RECORD COUNT    @Y30LB55*/ 66000000
       2 NOUTREC FIXED(31),         /* OUTPUT RECORD COUNT   @Y30LB55*/ 68000000
       2 DEVPTR PTR(31);            /* PTR TO UCBTYPE FIELD  @Y30LB55*/ 70000000
