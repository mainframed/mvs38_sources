./  ADD  SSI=41840030,NAME=IFDMSGAJ
         TITLE 'CUTEST MESSAGE MODULE'                                  00010000
         TITLE ' CUTEST MESSAGE MODULE '                                00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDMSGAJ CSECT ,                                                  0002  00050000
         DC    AL4(IFD244)                                              00060000
         DC    AL4(SHRDHDR)                                             00070000
         DC    AL4(ONLNHDR)                                             00080000
         DC    AL4(IFD127)                                     X01906   00090000
         DC    AL4(IFD243)                                              00100000
         DC    A(IFD399)                                       XM0088   00110000
         DC    A(IFD140)                                         Y02906 00120000
         DC    A(IFD469)               /*                    @Y30LPAW*/ 00130000
         DC    A(IFD470)               /*                    @Y30LPAW*/ 00140000
         DC    A(IFD472)                /*                   @Y30LPAW*/ 00150000
IFD244   WTO   'IFD244I                                                X00160000
                           ',MF=L,ROUTCDE=10,DESC=7                     00170000
SHRDHDR  WTO   'IFD244I THE FOLLOWING CU TEST DEVS ARE ASSUMED CPU SHARX00180000
               ED          ',MF=L,DESC=7,ROUTCDE=10                     00190000
ONLNHDR  WTO   'IFD244I THE FOLLOWING CU TEST DEVS ARE ONLINE,NON BTAM -00200000
               ALLOCATED   ',DESC=7,ROUTCDE=10,MF=L                     00210000
IFD127   WTO   'IFD127I NO CDS FOR         ',MF=L,ROUTCDE=10,DESC=7     00220000
         DS    0F                                                       00230000
IFD243   DC    XL1'00'                                                  00240000
         DC    XL3'00'                                                  00250000
         DC    XL4'00'                                                  00260000
         WTO   'IFD243D ARE SHARED DEVS USED BY OTHERS, REPLY YES OR NO-00270000
                           ',MF=L,ROUTCDE=10,DESC=7                     00280000
IFD399   WTO   'IFD399I EQUATED DEV ADDRESS AND $CUTEST ARE MUTUALLY EX*00290000
               CLUSIVE',ROUTCDE=10,DESC=7,MF=L                 XM0088   00300000
IFD140   WTO   'IFD140I 00000000 VARIED OFFLINE BY OLTEP',DESC=7,ROUTCD-00310000
               E=10,MF=L                                         Y02906 00320000
         DS    0F                       /*                   @Y30LPAW*/ 00330000
IFD469   DC    XL1'00'                  /*                   @Y30LPAW*/ 00340000
         DC    XL3'00'                  /*                   @Y30LPAW*/ 00350000
         DC    XL4'00'                  /*                   @Y30LPAW*/ 00360000
         WTO   'IFD469D ENTER SSID (S8XX) FOR 3830 OR CANCEL',MF=L,ROUTC00370000
               CDE=10,DESC=7       /*                        @Y30LPAW*/ 00380000
IFD470   WTO   'IFD470I ICBVARY ERROR CODE XXX UNEXPECTED - 3830 TESTINC00390000
               G BYPASSED',MF=L,ROUTCDE=10,DESC=7 /*         @Y30LPAW*/ 00400000
IFD472   WTO   'IFD472I CANNOT VARY OFF MORE THAN 1 3830',MF=L,ROUTCDE=C00410000
               10,DESC=7                /*                   @Y30LPAW*/ 00420000
         DS    0H                                                       00430000
*         END;                                                          00440000
@EL01    BCR   15,@E                                              0004  00450000
@DATA1   EQU   *                                                        00460000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00470000
@1       EQU   01                                                       00480000
@2       EQU   02                                                       00490000
@3       EQU   03                                                       00500000
@4       EQU   04                                                       00510000
@5       EQU   05                                                       00520000
@6       EQU   06                                                       00530000
@7       EQU   07                                                       00540000
@8       EQU   08                                                       00550000
@9       EQU   09                                                       00560000
@A       EQU   10                                                       00570000
@B       EQU   11                                                       00580000
@C       EQU   12                                                       00590000
@D       EQU   13                                                       00600000
@E       EQU   14                                                       00610000
@F       EQU   15                                                       00620000
         DS    0D                                                       00630000
@DATA    EQU   *                                                        00640000
         DS    00000000C                                                00650000
@TEMPS   DS    0F                                                       00660000
@DATEND  EQU   *                                                        00670000
         END    ,(C'PL/S',1400,74185)                                   00680000
./  ADD  SSI=33200995,NAME=IFDMSG00
         TITLE 'OLTEPS ROOT MESSAGE MODULE'                             00010000
         TITLE 'OLTEPS ROOT MESSAGE MODULE'                             00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDMSG00 CSECT ,                                                  0002  00050000
         DC    AL4(IFD100)                                              00060000
         DC    AL4(IFD102)                                              00070000
         DC    AL4(IFD103)                                              00080000
         DC    AL4(IFD105)                                              00090000
         DC    AL4(IFD106)                                              00100000
         DC    AL4(IFD108)                                              00110000
         DC    AL4(IFD117)                                              00120000
         DC    AL4(IFD166)              POINTER TO MESSAGE     X02008   00130000
         DC    AL4(IFD129)                                              00140000
         DC    AL4(IFD134)                                       M2364  00150000
         DC    AL4(IFD501)                                              00160000
         DC    AL4(IFD157)                                              00170000
         DC    AL4(IFD158)                                              00180000
         DC    A(IFD201)                PTR TO MESSAGE         X02008   00190000
         DC    AL4(IFD160)                                              00200000
         DC    AL4(IFD161)                                              00210000
         DC    AL4(IFD210)                                              00220000
         DC    A(IFD227)                                       X02008   00230000
         DC    AL4(IFD168)                                        M4501 00240000
         DC    AL4(IFD178)                                       21051  00250000
         DC    A(IFD231)                                       X02008   00260000
         DC    A(IFD313)                                       X02008   00270000
         DC    A(IFD502)                                       X02008   00280000
         DC    A(IFD503)                                       X02008   00290000
         DC    A(IFD200)                                       X02008   00300000
         DC    A(IFD202)                                       X02008   00310000
         DC    A(IFD203)                                       X02008   00320000
         DC    A(IFD205)                                       X02008   00330000
         DC    A(IFD911)                                         X02008 00340000
         DC    A(IFD901)                                       X02008   00350000
         DC    AL4(IFDMSG66)                                   X02008   00360000
         DC    A(IFD113)                                         X02008 00370000
         DC    A(IFD899)                                         XM0097 00380000
         DC    A(IFD260)                                         Y02068 00390000
         DC    A(IFD372)                                         Y02008 00400000
         DC    A(IFD248)                                         Y02008 00410000
         DC    A(IFD253)                                         Y02008 00420000
         DC    A(IFD229)                                         Y02008 00430000
IFD100   WTO   'IFD100I                                                X00440000
                                        ',MF=L,ROUTCDE=10,DESC=7        00450000
IFD102   WTO   'IFD102I OLTS RUNNING IN AN MP SYSTEM     ',MF=L,ROUTCDEX00460000
               =(2,10),DESC=7                                    Y02068 00470000
IFD103   WTO   'IFD103I UCB NOT READY BIT ON,          TESTS BYPASSED',X00480000
               MF=L,ROUTCDE=10,DESC=7                                   00490000
         DS    0F                                                       00500000
IFD105   DC    V(REPBUF)             REPBUF IN IFDOLT23                 00510000
         DC    V(ECB)                ECB IN IFDOLT30                    00520000
         WTO   'IFD105D ENTER-DEV/TEST/OPT/',MF=L,ROUTCDE=10,DESC=7     00530000
IFD106   WTO   'IFD106I INPUT DATA DOES NOT CONTAIN 3 SLASHES',MF=L,ROUX00540000
               TCDE=10,DESC=7                                           00550000
IFD108   WTO   'IFD108I INVALID ENTRY IN DEV FLD-04',MF=L,ROUTCDE=10,DEX00560000
               SC=7                                                     00570000
IFD117   WTO   'IFD117I SECTION          NOT FOUND',MF=L,ROUTCDE=10,DESX00580000
               C=7                                                      00590000
IFD166   WTO   'IFD166I OLT DOES NOT SUPPORT TALK',MF=L,ROUTCDE=10,DESCX00600000
               =7                                                       00610000
IFD129   WTO   'IFD129I FIRST ERROR COMM               UNIT            X00620000
                     ',MF=L,ROUTCDE=10,DESC=7                           00630000
IFD134   WTO   'IFD134I WARNING- DASD VOLUME LABELED CEPACK NOT PROTECTX00640000
               ED FROM WRITE',MF=L,ROUTCDE=10,DESC=7            SA51275 00650000
IFD501   WTO   'IFD501I XXXXXXXX BYPASSED, INVALID TEST',MF=L,ROUTCDE=1X00660000
               0,DESC=7                                                 00670000
IFD157   WTO   'IFD157I CATASTROPHIC ERROR ON DEVICE                   X00680000
               ',MF=L,ROUTCDE=10,DESC=7                                 00690000
IFD158   WTO   'IFD158I              UNIT                   V=  CPUID= X00700000
                ',MF=L,ROUTCDE=10,DESC=7                         Y02008 00710000
IFD201   WTO   'IFD201I DEVICE DESCRIPTORS DO NOT MEET XXXXXXXX REQUIREX00720000
               MENTS',MF=L,ROUTCDE=10,DESC=7                            00730000
IFD160   WTO   'IFD160I INSUFFICIENT CORE',MF=L,ROUTCDE=10,DESC=7       00740000
IFD161   WTO   'IFD161I FOR HELP ENTER PROMPT DEV TO NEXT DEV/TEST/OPT/X00750000
                MESSAGE',MF=L,ROUTCDE=10,DESC=7                         00760000
         DS    0F                                                       00770000
IFD210   WTO   'IFD210I ROUTINE XXXX BYPASSED, MANUAL INTV REQUIRED',MFX00780000
               =L,ROUTCDE=10,DESC=7                                     00790000
IFD168   DS    2F                                                 M4501 00800000
         WTO   'IFD168E TO COMMUNICATE WITH REMOTE SPECIALIST ENTER MESX00810000
               SAGE',MF=L,ROUTCDE=10,DESC=7                      S20203 00820000
IFD178   WTO   'IFD178I MESSAGE    ANSWERED BY REMOTE',MF=L,ROUTCDE=10,X00830000
               DESC=7                                                   00840000
IFD231   WTO   'IFD231I XXXXXXXX CANNOT RUN ON XXXXXXXX',MF=L,ROUTCDE=1X00850000
               0,DESC=7                                                 00860000
IFD313   WTO   'IFD313I TEST CANCELLED. ATTEMPTED TO WRITE ON FILE PROTX00870000
               ECTED DEVICE',MF=L,ROUTCDE=10,DESC=7                     00880000
IFD502   WTO   'IFD502I NO DEVICE DESCRIPTORS FOR DEVICE',MF=L,ROUTCDE=X00890000
               10,DESC=7                                                00900000
IFD503   WTO   'IFD503I HIGHEST SELECTED ROUTINE NOT FOUND',MF=L,ROUTCDX00910000
               E=10,DESC=7                                              00920000
IFD200   WTO   'IFD200I TEST XXXXXXXX EXCEEDS AVAILABLE CORE SPACE',MF=X00930000
               L,ROUTCDE=10,DESC=7                                      00940000
IFD227   WTO   'IFD227I INSUFFICIENT SUPPORT FOR XXXXXXXX-01',MF=L,ROUTX00950000
               CDE=10,DESC=7                                   X02008   00960000
IFD202   WTO   'IFD202I READ AN INVALID REP CARD',MF=L,ROUTCDE=10,DESC=X00970000
               7                                                        00980000
IFD203   WTO   'IFD203I EOF OCCURED BEFORE READING END CARD',MF=L,ROUTCX00990000
               DE=10,DESC=7                                             01000000
IFD205   WTO   'IFD205I I/O ERROR WHEN LOADING TEST',MF=L,ROUTCDE=10,DEX01010000
               SC=7                                                     01020000
IFD911   WTO   'IFD911I CANNOT LOAD MODULE         , INVALID CONTROL REC01030000
               CORD',MF=L,ROUTCDE=10,DESC=7                      X02008 01040000
IFD901   WTO   'IFD901I OLTCDSDD DDCARD FAILED TO OPEN',MF=L,ROUTCDE=10X01050000
               ,DESC=7                                                  01060000
IFDMSG66 WTO   'IFD166I OLT DOES NOT SUPPORT TALK',MF=L,ROUTCDE=10,DESCX01070000
               =7                                                       01080000
         DS    0F                                                X02008 01090000
IFD113   DC    V(REPBFR1)           REPBFR1 IN IFDOLT52          X02008 01100000
         DC    V(ECB1)              ECB1 IN IFDOLT52             X02008 01110000
         WTO   'IFD113I CAN CTL PGM ON MULTI-ADDR DEV XXXX BE DESTROYEDX01120000
                REPLY Y OR N',MF=L,ROUTCDE=10,DESC=7                    01130000
IFD899   WTO   'IFD899I OLTEP INITIALIZATION CONFLICTS, OLTEP MUST TERMX01140000
               INATE-01',MF=L,ROUTCDE=10,DESC=7                         01150000
IFD260   WTO   'IFD260I CPUAFFN VERB VALID IN A MULTI PROCESSOR SYSTEM X01160000
               ONLY',MF=L,ROUTCDE=10,DESC=7                      Y02068 01170000
IFD372   WTO   'IFD372I INVALID MODE REQUEST',MF=L,ROUTCDE=10,DESC=7    01180000
IFD248   WTO   'IFD248I THIS OLT FORCED TO RUN IN VIRTUAL, IT SHOULD RUX01190000
               N IN REAL',MF=L,ROUTCDE=10,DESC=7                        01200000
IFD253   WTO   'IFD253I OLT MODULE          NOT FOUND IN LIBRARY',MF=L,X01210000
               ROUTCDE=10,DESC=7                                        01220000
IFD229   WTO   'IFD229I OLT CANCELLED FOR $MODE REQUEST',MF=L,ROUTCDE=1X01230000
               0,DESC=7                                          Y02008 01240000
         DS    0H                                                       01250000
*         END;                                                          01260000
@EL01    BCR   15,@E                                              0004  01270000
@DATA1   EQU   *                                                        01280000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           01290000
@1       EQU   01                                                       01300000
@2       EQU   02                                                       01310000
@3       EQU   03                                                       01320000
@4       EQU   04                                                       01330000
@5       EQU   05                                                       01340000
@6       EQU   06                                                       01350000
@7       EQU   07                                                       01360000
@8       EQU   08                                                       01370000
@9       EQU   09                                                       01380000
@A       EQU   10                                                       01390000
@B       EQU   11                                                       01400000
@C       EQU   12                                                       01410000
@D       EQU   13                                                       01420000
@E       EQU   14                                                       01430000
@F       EQU   15                                                       01440000
         DS    0D                                                       01450000
@DATA    EQU   *                                                        01460000
         DS    00000000C                                                01470000
@TEMPS   DS    0F                                                       01480000
@DATEND  EQU   *                                                        01490000
         END                                                            01500000
./  ADD  SSI=81161458,NAME=IFDMSG03
         TITLE 'IFDMSG03 DATA PROTECTION TAPE MESSAGE MODULE'           00010000
         TITLE 'IFDMSG03 DATA PROTECTION TAPE MESSAGE MODULE'    X03906 00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDMSG03 CSECT ,                                                  0002  00050000
         DC    A(MSG1)             ADDRESS OF MESSAGE                   00060000
         DC    A(MSG2)             ADDRESS OF MESSAGE                   00070000
         DC    A(MSG3)             ADDRESS OF MESSAGE                   00080000
         DC    A(MSG4)             ADDRESS OF MESSAGE                   00090000
         DC    A(MSG5)             ADDRESS OF MESSAGE                   00100000
         DC    A(MSG6)             ADDRESS OF MESSAGE                   00110000
         DC    A(MSG7)             ADDRESS OF MESSAGE                   00120000
         DC    A(MSG8)             ADDRESS OF MESSAGE                   00130000
         DC    A(MSG9)             ADDRESS OF MESSAGE                   00140000
         DC    A(MSGA)             ADDRESS OF MESSAGE                   00150000
         DC    A(MSGB)                  ADDR OF IFD139D          Y01906 00160000
         DC    A(MSGC)                  ADDR OF IFD212I          Y02008 00170000
         DC    A(MSGD)                                         @ZA15468 00180000
         DC    A(MSGE)                                         @ZA15468 00190000
         DC    A(MSGF)                                         @ZA15468 00200000
         DC    A(MSGG)                                         @ZA15468 00210000
MSG1     WTO   'IFD109I XXXXXXXX YYYYYYY,ZZZZZZZZZZZ WILL NOT BE TESTEDX00220000
               ',MF=L,ROUTCDE=10,DESC=7                        @ZA06048 00230000
MSG2     WTO   'IFD118I UNREADABLE TAPE LABEL-XXXXXXXX',MF=L,ROUTCDE=10X00240000
               ,DESC=7                                           S21050 00250000
MSG3     WTO   'IFD137I CSW-XXYYYYYYYYYYYYYY SNS-XXXXXXXXXXXX',MF=L,ROUX00260000
               TCDE=10,DESC=7                                    Y01906 00270000
MSG4     WTO   'IFD119I NON-STANDARD TAPE LABEL-XXXXXXXX',MF=L,ROUTCDE=X00280000
               10,DESC=7                                         S21050 00290000
MSG5     WTO   'IFD122I VOL ON XXXXXXXX SECURITY PROTECTED',MF=L,ROUTCDX00300000
               E=10,DESC=7                                       S21050 00310000
MSG6     DS    2F'00'                                                   00320000
         WTO   'IFD139D REPLY B TO BYPASS,R TO RETRY,P TO PROCEED(MAY DX00330000
               ESTROY DATA)',MF=L,ROUTCDE=10,DESC=7                     00340000
MSG7     WTO   'IFD122I VOL ON XXXXXXXX UNEXPIRED DATE',MF=L,ROUTCDE=10X00350000
               ,DESC=7                                           S21050 00360000
MSG8     DS    2F'00'                                                   00370000
         WTO   'IFD139D REPLY B TO BYPASS,R TO RETRY',MF=L,ROUTCDE=10,DX00380000
               ESC=7                                                    00390000
MSG9     WTO   'IFD130I INTERVENTION REQ XXXXXXXX',MF=L,ROUTCDE=10,DESCX00400000
               =7                                              S21050   00410000
MSGA     WTO   'IFD138I DEV XXXXXXXX NOT OPERATIONAL, CC=3',MF=L,ROUTCDX00420000
               E=10,DESC=7                                       S21050 00430000
         SPACE                                                          00440000
MSGB     DC    2F'0'                    FOR 2-WAY MSGS           Y01906 00450000
         SPACE                                                          00460000
         WTO   'IFD139D REPLY B TO BYPASS,R TO RETRY,P TO PROCEED',MF=LX00470000
               ,ROUTCDE=10,DESC=7                                Y01906 00480000
         SPACE                                                          00490000
MSGC     WTO   'IFD212I CANNOT DATA PROTECT DEVICE XXXXXXXX',MF=L,ROUTCX00500000
               DE=10,DESC=7                                             00510000
MSGD     WTO   'IFD473I INTERFACE INIT STATUS FOR NNNNNNNN UNKNOWN',MF=*00520000
               L,ROUTCDE=10,DESC=7                             @ZA15468 00530000
MSGE     WTO   'IFD474I SEE MSS MLM FOR OLT T3850I',MF=L,ROUTCDE=10,DES*00540000
               C=7                                             @ZA15468 00550000
MSGF     DC    2F'0'                                           @ZA15468 00560000
         WTO   'IFD139D REPLY B TO BYPASS,P TO PROCEED(MAY DESTROY DATA*00570000
               )',MF=L,ROUTCDE=10,DESC=7                       @ZA15468 00580000
MSGG     WTO   'IFD475I INTERFACE XXXXXXXX INITIALIZED DIAGNOSTICALLY',*00590000
               MF=L,ROUTCDE=10,DESC=7                          @ZA15468 00600000
         DS    0H                                                       00610000
*         END;                                                          00620000
@EL01    BCR   15,@E                                              0004  00630000
@DATA1   EQU   *                                                        00640000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00650000
@1       EQU   01                                                       00660000
@2       EQU   02                                                       00670000
@3       EQU   03                                                       00680000
@4       EQU   04                                                       00690000
@5       EQU   05                                                       00700000
@6       EQU   06                                                       00710000
@7       EQU   07                                                       00720000
@8       EQU   08                                                       00730000
@9       EQU   09                                                       00740000
@A       EQU   10                                                       00750000
@B       EQU   11                                                       00760000
@C       EQU   12                                                       00770000
@D       EQU   13                                                       00780000
@E       EQU   14                                                       00790000
@F       EQU   15                                                       00800000
         DS    0D                                                       00810000
@DATA    EQU   *                                                        00820000
         DS    00000000C                                                00830000
@TEMPS   DS    0F                                                       00840000
@DATEND  EQU   *                                                        00850000
         END    ,(C'PL/S',1400,78116)                                   00860000
./  ADD  SSI=32570865,NAME=IFDMSG04
         TITLE 'IFDMSG04 - DRUM DATA PROTECTION MESSAGE MODULE'         00010000
         TITLE 'IFDMSG04 - DRUM DATA PROTECTION MESSAGE MODULE'         00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDMSG04 CSECT ,                                                  0002  00050000
         DC    AL4(IFD120)              PTR TO MSG IFD120D              00060000
         DC    AL4(IFD145)              PTR TO MSG IFD145D              00070000
         DC    AL4(IFD212)              PTR TO MSG IFD212I              00080000
IFD120   DC    2F'0'                    WTOR PARMLIST AREA              00090000
         WTO   'IFD120D CAN VOL DATA ON          BE DESTROYED, REPLY YEX00100000
               S OR NO',MF=L,ROUTCDE=10,DESC=7                          00110000
IFD145   DC    2F'0'                    WTOR PARMLIST AREA              00120000
         WTO   'IFD145D IS          OFFLINE TO ALL SHARING SYSTEMS, REPX00130000
               LY YES OR NO',MF=L,ROUTCDE=10,DESC=7                     00140000
IFD212   WTO   'IFD212I CANNOT DATA PROTECT DEVICE         ',MF=L,ROUTC*00150000
               DE=10,DESC=7                                             00160000
         DS    0H                                                       00170000
*         END;                           /* END OF MODULE             * 00180000
@EL01    BCR   15,@E                                              0004  00190000
@DATA1   EQU   *                                                        00200000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00210000
@1       EQU   01                                                       00220000
@2       EQU   02                                                       00230000
@3       EQU   03                                                       00240000
@4       EQU   04                                                       00250000
@5       EQU   05                                                       00260000
@6       EQU   06                                                       00270000
@7       EQU   07                                                       00280000
@8       EQU   08                                                       00290000
@9       EQU   09                                                       00300000
@A       EQU   10                                                       00310000
@B       EQU   11                                                       00320000
@C       EQU   12                                                       00330000
@D       EQU   13                                                       00340000
@E       EQU   14                                                       00350000
@F       EQU   15                                                       00360000
         DS    0D                                                       00370000
@DATA    EQU   *                                                        00380000
         DS    00000000C                                                00390000
@TEMPS   DS    0F                                                       00400000
@DATEND  EQU   *                                                        00410000
         END                                                            00420000
./  ADD  SSI=21080595,NAME=IFDMSG05
         TITLE '       EXIO MESSAGE MODULE     '                        00010000
         LCLA  &T,&SPN                                            0001  00020000
.@001    ANOP                                                     0001  00030000
IFDMSG05 CSECT ,                                                  0001  00040000
         DC    AL4(IFD109I)                                             00050000
         DC    AL4(IFD133I)                                             00060000
         DC    AL4(0)                                                   00070000
IFD109I  WTO   'IFD109I XXX NOT OFF-LINE',MF=L,ROUTCDE=10,DESC=7        00080000
IFD133I  WTO   'IFD133I TIMER NOT STEPPING. TIMING TEST BYPASSED',MF=L,C00090000
               ROUTCDE=10,DESC=7                                        00100000
         DS    0H                                                       00110000
*         END   IFDMSG05;                                               00120000
@EL01    BCR   15,@E                                              0003  00130000
@DATA1   EQU   *                                                        00140000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00150000
@1       EQU   01                                                       00160000
@2       EQU   02                                                       00170000
@3       EQU   03                                                       00180000
@4       EQU   04                                                       00190000
@5       EQU   05                                                       00200000
@6       EQU   06                                                       00210000
@7       EQU   07                                                       00220000
@8       EQU   08                                                       00230000
@9       EQU   09                                                       00240000
@A       EQU   10                                                       00250000
@B       EQU   11                                                       00260000
@C       EQU   12                                                       00270000
@D       EQU   13                                                       00280000
@E       EQU   14                                                       00290000
@F       EQU   15                                                       00300000
         DS    0D                                                       00310000
@DATA    EQU   *                                                        00320000
         DS    00000000C                                                00330000
@TEMPS   DS    0F                                                       00340000
@DATEND  EQU   *                                                        00350000
         END   IFDMSG05                                                 00360000
./  ADD  SSI=32570866,NAME=IFDMSG06
         TITLE '      OLD WAITIO MESSAGE MODULE IFDMSG06'               00010000
          TITLE  ' OLD WAITIO MESSAGE MODULE IFDMSG06  '                00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDMSG06 CSECT ,                                                  0002  00050000
         DC    A(MSG1)                  ADDRESS OF MESSAGE              00060000
MSG1     DS    8C                                                       00070000
         WTO   'IFD144D TIMEOUT, NO INTERRUPT-UNIT XXXXXXXX, REPLY WAITX00080000
                OR CANCEL',MF=L,ROUTCDE=10,DESC=7                S21050 00090000
         DS    0H                                                       00100000
*         END;                                                          00110000
@EL01    BCR   15,@E                                              0004  00120000
@DATA1   EQU   *                                                        00130000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00140000
@1       EQU   01                                                       00150000
@2       EQU   02                                                       00160000
@3       EQU   03                                                       00170000
@4       EQU   04                                                       00180000
@5       EQU   05                                                       00190000
@6       EQU   06                                                       00200000
@7       EQU   07                                                       00210000
@8       EQU   08                                                       00220000
@9       EQU   09                                                       00230000
@A       EQU   10                                                       00240000
@B       EQU   11                                                       00250000
@C       EQU   12                                                       00260000
@D       EQU   13                                                       00270000
@E       EQU   14                                                       00280000
@F       EQU   15                                                       00290000
         DS    0D                                                       00300000
@DATA    EQU   *                                                        00310000
         DS    00000000C                                                00320000
@TEMPS   DS    0F                                                       00330000
@DATEND  EQU   *                                                        00340000
         END                                                            00350000
./  ADD  SSI=32570867,NAME=IFDMSG07
         TITLE 'IFDMSG07 DATA PROTECTION PACK MESSAGE MODULE'           00010000
         TITLE 'IFDMSG07 DATA PROTECTION PACK MESSAGE MODULE'    X03906 00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDMSG07 CSECT ,                                                  0002  00050000
         DC    A(MSG1)             ADDRESS OF MESSAGE                   00060000
         DC    A(MSG2)             ADDRESS OF MESSAGE                   00070000
         DC    A(MSG2A)                 ADDR OF IFD124I (SHORT)  Y01906 00080000
         DC    A(MSG3)             ADDRESS OF MESSAGE                   00090000
         DC    A(MSG4)             ADDRESS OF MESSAGE                   00100000
         DC    A(MSG5)             ADDRESS OF MESSAGE                   00110000
         DC    A(MSG6)             ADDRESS OF MESSAGE                   00120000
         DC    A(MSG7)             ADDRESS OF MESSAGE            S20203 00130000
         DC    A(MSG8)             ADDRESS OF MESSAGE            S20203 00140000
MSG1     WTO   'IFD138I DEV XXXXXXXX NOT OPERATIONAL, CC=3',MF=L,ROUTCDX00150000
               E=10,DESC=7                                       S21050 00160000
MSG2     WTO   'IFD124I CEPACK NOT ON XXXXXXXX, VOLID=XXXXXX',MF=L,ROUTX00170000
               CDE=10,DESC=7                                     Y01906 00180000
MSG2A    WTO   'IFD124I CEPACK NOT ON XXXXXXXX',MF=L,ROUTCDE=10,DESC=7  00190000
*                                                                Y01906 00200000
MSG3     WTO   'IFD125I UNREADABLE LABEL ON XXXXXXXX',MF=L,ROUTCDE=10,DX00210000
               ESC=7                                             S21050 00220000
MSG4     WTO   'IFD130I INTERVENTION REQ XXXXXXXX',MF=L,ROUTCDE=10,DESCX00230000
               =7                                                S21050 00240000
MSG5     DS    2F'00'                                                   00250000
         WTO   'IFD139D REPLY B TO BYPASS,R TO RETRY,P TO PROCEED',MF=LX00260000
               ,ROUTCDE=10,DESC=7                                       00270000
MSG6     WTO   'IFD137I CSW-XXYYYYYYYYYYYYYY SNS=XXXXXXXXXXXX',MF=L,ROUX00280000
               TCDE=10,DESC=7                                    Y01906 00290000
MSG7     DS    2F'00'                                            S20203 00300000
         WTO   'IFD139D REPLY B TO BYPASS,R TO RETRY',MF=L,ROUTCDE=10,DX00310000
               ESC=7                                             S20203 00320000
MSG8     WTO   'IFD122I VOL ON XXXXXXXX SECURITY PROTECTED',MF=L,ROUTCDE00330000
               E=10,DESC=7                                       S21050 00340000
         DS    0H                                                       00350000
*         END;                                                          00360000
@EL01    BCR   15,@E                                              0004  00370000
@DATA1   EQU   *                                                        00380000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00390000
@1       EQU   01                                                       00400000
@2       EQU   02                                                       00410000
@3       EQU   03                                                       00420000
@4       EQU   04                                                       00430000
@5       EQU   05                                                       00440000
@6       EQU   06                                                       00450000
@7       EQU   07                                                       00460000
@8       EQU   08                                                       00470000
@9       EQU   09                                                       00480000
@A       EQU   10                                                       00490000
@B       EQU   11                                                       00500000
@C       EQU   12                                                       00510000
@D       EQU   13                                                       00520000
@E       EQU   14                                                       00530000
@F       EQU   15                                                       00540000
         DS    0D                                                       00550000
@DATA    EQU   *                                                        00560000
         DS    00000000C                                                00570000
@TEMPS   DS    0F                                                       00580000
@DATEND  EQU   *                                                        00590000
         END                                                            00600000
./  ADD  SSI=21080598,NAME=IFDMSG08
         TITLE '      IFDMSG08--OLD DPRINT MESSAGE MODULE.'             00010000
         TITLE '          IFDMSG08--OLD DPRINT MESSAGE MODULE.'         00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDMSG08 CSECT ,                                                  0002  00050000
         DC    A(IFD129)           POINTER TO MESSAGE IFD129I           00060000
 SPACE 2                                                                00070000
IFD129   WTO   'IFD129I  FIRST ERROR COMMUNICATION           UNIT    ',C00080000
               MF=L,ROUTCDE=10,DESC=7                                   00090000
         DS    0H                                                       00100000
*         END   IFDMSG08;                                               00110000
@EL01    BCR   15,@E                                              0004  00120000
@DATA1   EQU   *                                                        00130000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00140000
@1       EQU   01                                                       00150000
@2       EQU   02                                                       00160000
@3       EQU   03                                                       00170000
@4       EQU   04                                                       00180000
@5       EQU   05                                                       00190000
@6       EQU   06                                                       00200000
@7       EQU   07                                                       00210000
@8       EQU   08                                                       00220000
@9       EQU   09                                                       00230000
@A       EQU   10                                                       00240000
@B       EQU   11                                                       00250000
@C       EQU   12                                                       00260000
@D       EQU   13                                                       00270000
@E       EQU   14                                                       00280000
@F       EQU   15                                                       00290000
         DS    0D                                                       00300000
@DATA    EQU   *                                                        00310000
         DS    00000000C                                                00320000
@TEMPS   DS    0F                                                       00330000
@DATEND  EQU   *                                                        00340000
         END   IFDMSG08                                                 00350000
./  ADD  SSI=32851162,NAME=IFDMSG13
         TITLE '        IFDMSG13--CECOM MESSAGE MODULE.'                00010000
         TITLE '      IFDMSG13--CECOM MESSAGE MODULE.'                  00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDMSG13 CSECT ,                                                  0002  00050000
         DC    A(IFD100)           POINTER TO MESSAGE IFD100I           00060000
         DC    A(IFD101)           POINTER TO MESSAGE IFD101D           00070000
IFD100   WTO   'IFD100I                                                C00080000
                                ',MF=L,ROUTCDE=10,DESC=7                00090000
         DS    0F                                                       00100000
IFD101   DC    XL8'00'                                                  00110000
         WTO   'IFD101D                                                C00120000
                                   ',MF=L,ROUTCDE=10,DESC=7             00130000
         DS    0H                                                       00140000
*         END IFDMSG13;                                                 00150000
@EL01    BCR   15,@E                                              0004  00160000
@DATA1   EQU   *                                                        00170000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00180000
@1       EQU   01                                                       00190000
@2       EQU   02                                                       00200000
@3       EQU   03                                                       00210000
@4       EQU   04                                                       00220000
@5       EQU   05                                                       00230000
@6       EQU   06                                                       00240000
@7       EQU   07                                                       00250000
@8       EQU   08                                                       00260000
@9       EQU   09                                                       00270000
@A       EQU   10                                                       00280000
@B       EQU   11                                                       00290000
@C       EQU   12                                                       00300000
@D       EQU   13                                                       00310000
@E       EQU   14                                                       00320000
@F       EQU   15                                                       00330000
         DS    0D                                                       00340000
@DATA    EQU   *                                                        00350000
         DS    00000000C                                                00360000
@TEMPS   DS    0F                                                       00370000
@DATEND  EQU   *                                                        00380000
         END   IFDMSG13                                                 00390000
./  ADD  SSI=32570868,NAME=IFDMSG22
         TITLE 'ALLOCATE MESSAGE MODULE'                                00010000
         TITLE 'ALLOCATE MESSAGE MODULE'                                00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDMSG22 CSECT ,                                                  0002  00050000
         DC    AL4(IFD120)                                              00060000
         DC    AL4(IFD145)                                              00070000
         DC    AL4(IFD156)                                              00080000
         DC    AL4(IFD162)                                              00090000
         DS    0F                                                       00100000
IFD120   DC    XL1'00'                                                  00110000
         DC    XL3'00'                                                  00120000
         DC    XL4'00'                                                  00130000
         WTO   'IFD120D CAN VOL DATA ON          BE DESTROYED. REPLY, YX00140000
               ES OR NO',MF=L,ROUTCDE=10,DESC=7                         00150000
         DS    0F                                                       00160000
IFD145   DC    XL1'00'                                                  00170000
         DC    XL3'00'                                                  00180000
         DC    XL4'00'                                                  00190000
         WTO   'IFD145D IS          OFFLINE TO ALL SHARING SYSTEMS. REPX00200000
               LY, YES OR NO',MF=L,ROUTCDE=10,DESC=7                    00210000
IFD156   WTO   'IFD156I DEVICE          STATUS CHANGED. BYPASS TESTS',MX00220000
               F=L,ROUTCDE=10,DESC=7                                    00230000
IFD162   WTO   'IFD162I UNIT         , DSNAME=OSOLTEP  COULD NOT BE SCRX00240000
               ATCHED',MF=L,ROUTCDE=10,DESC=7                           00250000
         DS    0H                                                       00260000
*         END;                                                          00270000
@EL01    BCR   15,@E                                              0004  00280000
@DATA1   EQU   *                                                        00290000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00300000
@1       EQU   01                                                       00310000
@2       EQU   02                                                       00320000
@3       EQU   03                                                       00330000
@4       EQU   04                                                       00340000
@5       EQU   05                                                       00350000
@6       EQU   06                                                       00360000
@7       EQU   07                                                       00370000
@8       EQU   08                                                       00380000
@9       EQU   09                                                       00390000
@A       EQU   10                                                       00400000
@B       EQU   11                                                       00410000
@C       EQU   12                                                       00420000
@D       EQU   13                                                       00430000
@E       EQU   14                                                       00440000
@F       EQU   15                                                       00450000
         DS    0D                                                       00460000
@DATA    EQU   *                                                        00470000
         DS    00000000C                                                00480000
@TEMPS   DS    0F                                                       00490000
@DATEND  EQU   *                                                        00500000
         END                                                            00510000
./  ADD  SSI=53380046,NAME=IFDMSG31
         TITLE 'IFDMSG31 DEVICE DECODE MESSAGE MODULE'                  00010000
         TITLE 'IFDMSG31 DEVICE DECODE MESSAGE MODULE'                  00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDMSG31 CSECT ,                                                  0002  00050000
         DC    AL4(IFD108)                                              00060000
         DC    AL4(IFD111)                                              00070000
         DC    AL4(IFD179)                                              00080000
         DC    AL4(IFD161)                                              00090000
         DC    AL4(IFD127)                                              00100000
         DC    AL4(IFD165)                                       S20203 00110000
         DC    AL4(IFD251)                                       X03008 00120000
         DC    AL4(IFD252)                                       X03008 00130000
         DC    AL4(IFD140)                                       X03008 00140000
         DC    AL4(IFD109)                                       X03008 00150000
         DC    AL4(IFD467)                                       YM7253 00160000
IFD108   WTO   'IFD108I INVALID ENTRY IN DEV FLD-XX',MF=L,ROUTCDE=10,DEX00170000
               SC=7                                                     00180000
IFD111   WTO   'IFD111I NO DEVICES AVAILABLE FOR TEST',MF=L,ROUTCDE=10,X00190000
               DESC=7                                                   00200000
IFD179   WTO   'IFD179I NO UCB FOR ADDRESS          ',MF=L,ROUTCDE=10,DX00210000
               ESC=7                                                    00220000
IFD161   WTO   'IFD161I FOR HELP ENTER PROMPT DEV TO NEXT DEV/TEST/OPT/X00230000
               MESSAGE',MF=L,ROUTCDE=10,DESC=7                          00240000
IFD127   WTO   'IFD127I NO CDS FOR         ',MF=L,ROUTCDE=10,DESC=7     00250000
IFD165   WTO   'IFD165I ENTRY IN DEV FLD NOT ALLOWABLE BY REMOTE',MF=L,X00260000
               ROUTCDE=10,DESC=7                                  M4501 00270000
IFD251   WTO   'IFD251I DUPLICATE ENTRIES IN DEVICE FIELD',MF=L,ROUTCDEX00280000
               =10,DESC=7                                        X03008 00290000
IFD252   WTO   'IFD252I SYMBOLIC NAMES AND UNIT ADDRESSES MIXED IN DEVIX00300000
               CE FIELD',MF=L,ROUTCDE=10,DESC=7                  X03008 00310000
IFD140   WTO   'IFD140I XXXXXXXX VARIED OFFLINE BY OLTEP',MF=L,ROUTCDE=X00320000
               (2,10),DESC=7                                            00330000
IFD109   WTO   'IFD109I XXXXXXXX YYYYYYY,ZZZZZZZZZZZ WILL NOT BE TESTEDX00340000
               ',MF=L,ROUTCDE=10,DESC=7                        @ZA06048 00350000
IFD467   WTO   'IFD467I XXXXXXXX IN USE BY ANOTHER SYSTEM COMPONENT OR X00360000
               NOT AVAILABLE',MF=L,ROUTCDE=10,DESC=7             YM7253 00370000
         DS    0H                                                       00380000
*         END;                                                          00390000
@EL01    BCR   15,@E                                              0004  00400000
@DATA1   EQU   *                                                        00410000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00420000
@1       EQU   01                                                       00430000
@2       EQU   02                                                       00440000
@3       EQU   03                                                       00450000
@4       EQU   04                                                       00460000
@5       EQU   05                                                       00470000
@6       EQU   06                                                       00480000
@7       EQU   07                                                       00490000
@8       EQU   08                                                       00500000
@9       EQU   09                                                       00510000
@A       EQU   10                                                       00520000
@B       EQU   11                                                       00530000
@C       EQU   12                                                       00540000
@D       EQU   13                                                       00550000
@E       EQU   14                                                       00560000
@F       EQU   15                                                       00570000
         DS    0D                                                       00580000
@DATA    EQU   *                                                        00590000
         DS    00000000C                                                00600000
@TEMPS   DS    0F                                                       00610000
@DATEND  EQU   *                                                        00620000
         END    ,(C'PL/S',1400,75339)                                   00630000
./  ADD  SSI=32570871,NAME=IFDMSG32
         TITLE 'IFDMSG32 TEST DECODE MESSAGE MODULE'                    00010000
         TITLE 'IFDMSG32 TEST DECODE MESSAGE MODULE'                    00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDMSG32 CSECT ,                                                  0002  00050000
         DC    AL4(IFD112)                                              00060000
         DC    AL4(IFD161)                                              00070000
         DC    AL4(IFD155)                                              00080000
IFD112   WTO   'IFD112I INVALID ENTRY IN TEST FLD-XX',MF=L,ROUTCDE=10,DX00090000
               ESC=7                                                    00100000
IFD161   WTO   'IFD161I FOR HELP ENTER PROMPT TEST TO NEXT DEV/TEST/OPTX00110000
               / MESSAGE',MF=L,ROUTCDE=10,DESC=7                        00120000
IFD155   WTO   'IFD155I TEST SECTIONS MAY NOT EXCEED 26',MF=L,ROUTCDE=1X00130000
               0,DESC=7                                                 00140000
         DS    0H                                                       00150000
*         END;                                                          00160000
@EL01    BCR   15,@E                                              0004  00170000
@DATA1   EQU   *                                                        00180000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00190000
@1       EQU   01                                                       00200000
@2       EQU   02                                                       00210000
@3       EQU   03                                                       00220000
@4       EQU   04                                                       00230000
@5       EQU   05                                                       00240000
@6       EQU   06                                                       00250000
@7       EQU   07                                                       00260000
@8       EQU   08                                                       00270000
@9       EQU   09                                                       00280000
@A       EQU   10                                                       00290000
@B       EQU   11                                                       00300000
@C       EQU   12                                                       00310000
@D       EQU   13                                                       00320000
@E       EQU   14                                                       00330000
@F       EQU   15                                                       00340000
         DS    0D                                                       00350000
@DATA    EQU   *                                                        00360000
         DS    00000000C                                                00370000
@TEMPS   DS    0F                                                       00380000
@DATEND  EQU   *                                                        00390000
         END                                                            00400000
./  ADD  SSI=32570872,NAME=IFDMSG33
         TITLE 'IFDMSG33 OPTION DECODE MESSAGE MODULE'                  00010000
         TITLE 'IEDMSG33 OPTIONS DECODE MESSAGE MODULE'                 00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDMSG33 CSECT ,                                                  0002  00050000
         DC    AL4(IFD104)                                              00060000
         DC    AL4(IFD107)                                              00070000
         DC    AL4(IFD115)                                              00080000
         DC    AL4(IFD161)                                              00090000
         DC    AL4(IFD176)                                        M4501 00100000
         DC    AL4(IFD327)                                              00110000
IFD104   DC    XL1'00'                                                  00120000
         DC    XL3'00'                                                  00130000
         DC    XL4'00'                                                  00140000
         WTO   'IFD104E TO FORCE COMMUNICATION WITH OLTEP EXECUTIVE, ENX00150000
               TER ANY CHAR',MF=L,ROUTCDE=10,DESC=7                     00160000
*                                                                 M1006 00170000
IFD107   WTO   'IFD107I OPTIONS ARE NFE,NMI,NPP,NTL,NEL,NCP,NEP,NPR,NREX00180000
               ,NTR',DESC=7,ROUTCDE=10,MF=L                     X01906  00190000
IFD327   WTO   'IFD327I EXT=                                           X00200000
                             ',DESC=7,ROUTCDE=10,MF=L                   00210000
IFD115   WTO   'IFD115I INVALID ENTRY IN OPT FLD-           ',MF=L,ROUTX00220000
               CDE=10,DESC=7                                      M4501 00230000
IFD161   WTO   'IFD161I FOR HELP ENTER PROMPT  OPT TO NEXT DEV/TEST/OPTX00240000
               / MESSAGE',MF=L,ROUTCDE=10,DESC=7                        00250000
IFD176   WTO   'IFD176I MUTUALLY EXCLUSIVE OPTIONS HAVE BEEN SELECTED',X00260000
               MF=L,ROUTCDE=10,DESC=7                             M4501 00270000
         DS    0H                                                       00280000
*         END;                                                          00290000
@EL01    BCR   15,@E                                              0004  00300000
@DATA1   EQU   *                                                        00310000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00320000
@1       EQU   01                                                       00330000
@2       EQU   02                                                       00340000
@3       EQU   03                                                       00350000
@4       EQU   04                                                       00360000
@5       EQU   05                                                       00370000
@6       EQU   06                                                       00380000
@7       EQU   07                                                       00390000
@8       EQU   08                                                       00400000
@9       EQU   09                                                       00410000
@A       EQU   10                                                       00420000
@B       EQU   11                                                       00430000
@C       EQU   12                                                       00440000
@D       EQU   13                                                       00450000
@E       EQU   14                                                       00460000
@F       EQU   15                                                       00470000
         DS    0D                                                       00480000
@DATA    EQU   *                                                        00490000
         DS    00000000C                                                00500000
@TEMPS   DS    0F                                                       00510000
@DATEND  EQU   *                                                        00520000
         END                                                            00530000
./  ADD  SSI=32851168,NAME=IFDMSG37
         TITLE '        IFDMSG37--NEW CECOM MESSAGE MODULE.'            00010000
         TITLE '        IFDMSG37--NEW CECOM MESSAGE MODULE.'            00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDMSG37 CSECT ,                                                  0002  00050000
         DC    A(IFD100)           POINTER TO MESSAGE IFD100I           00060000
         DC    A(IFD101)           POINTER TO MESSAGE IFD101D           00070000
 SPACE 2                                                                00080000
IFD100   WTO   'IFD100I                                                C00090000
                                ',MF=L,ROUTCDE=10,DESC=7                00100000
         DS    0F                                                       00110000
IFD101   DC    XL8'00'                                                  00120000
         WTO   'IFD101D                                                C00130000
                                   ',MF=L,ROUTCDE=10,DESC=7             00140000
         DS    0F                                                       00150000
         DS    0H                                                       00160000
*         END   IFDMSG37;                                               00170000
@EL01    BCR   15,@E                                              0004  00180000
@DATA1   EQU   *                                                        00190000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00200000
@1       EQU   01                                                       00210000
@2       EQU   02                                                       00220000
@3       EQU   03                                                       00230000
@4       EQU   04                                                       00240000
@5       EQU   05                                                       00250000
@6       EQU   06                                                       00260000
@7       EQU   07                                                       00270000
@8       EQU   08                                                       00280000
@9       EQU   09                                                       00290000
@A       EQU   10                                                       00300000
@B       EQU   11                                                       00310000
@C       EQU   12                                                       00320000
@D       EQU   13                                                       00330000
@E       EQU   14                                                       00340000
@F       EQU   15                                                       00350000
         DS    0D                                                       00360000
@DATA    EQU   *                                                        00370000
         DS    00000000C                                                00380000
@TEMPS   DS    0F                                                       00390000
@DATEND  EQU   *                                                        00400000
         END   IFDMSG37                                                 00410000
./  ADD  SSI=32570873,NAME=IFDMSG38
         TITLE 'IFDMSG38 TEST ROUTINE DECODE MESSAGE MODULE'            00010000
         TITLE 'IFDMSG38 TEST ROUTINE DECODE MESSAGE MODULE'            00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDMSG38 CSECT ,                                                  0002  00050000
         DC    AL4(IFD112)                                              00060000
         DC    AL4(IFD161)                                              00070000
IFD112   WTO   'IFD112I INVALID ENTRY IN TEST FLD-XX',MF=L,ROUTCDE=10,DX00080000
               ESC=7                                                    00090000
IFD161   WTO   'IFD161I FOR HELP ENTER PROMPT TEST TO NEXT DEV/TEST/OPTX00100000
               / MESSAGE',MF=L,ROUTCDE=10,DESC=7                        00110000
         DS    0H                                                       00120000
*         END;                                                          00130000
@EL01    BCR   15,@E                                              0004  00140000
@DATA1   EQU   *                                                        00150000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00160000
@1       EQU   01                                                       00170000
@2       EQU   02                                                       00180000
@3       EQU   03                                                       00190000
@4       EQU   04                                                       00200000
@5       EQU   05                                                       00210000
@6       EQU   06                                                       00220000
@7       EQU   07                                                       00230000
@8       EQU   08                                                       00240000
@9       EQU   09                                                       00250000
@A       EQU   10                                                       00260000
@B       EQU   11                                                       00270000
@C       EQU   12                                                       00280000
@D       EQU   13                                                       00290000
@E       EQU   14                                                       00300000
@F       EQU   15                                                       00310000
         DS    0D                                                       00320000
@DATA    EQU   *                                                        00330000
         DS    00000000C                                                00340000
@TEMPS   DS    0F                                                       00350000
@DATEND  EQU   *                                                        00360000
         END                                                            00370000
./  ADD  SSI=32570874,NAME=IFDMSG50
         TITLE 'IFDMSG50 PROMPTING MESSAGE MODULE'                      00010000
         TITLE 'IFDMSG50 PROMPTING MESSAGE MODULE'                      00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDMSG50 CSECT ,                                                  0002  00050000
         DC    AL4(IFD147)                                              00060000
         DC    AL4(DMSG)                                                00070000
         DC    AL4(IFD148)                                              00080000
         DC    AL4(TMSG)                                                00090000
         DC    AL4(IFD149)                                              00100000
         DC    AL4(OMSG)                                                00110000
         DC    AL4(IFD146)                                              00120000
IFD147   WTO   'IFD147I                                                X00130000
                   ',MF=L,ROUTCDE=10,DESC=7                             00140000
IFD148   WTO   'IFD148I                                                X00150000
                   ',MF=L,ROUTCDE=10,DESC=7                             00160000
IFD149   WTO   'IFD149I                                                X00170000
                   ',MF=L,ROUTCDE=10,DESC=7                             00180000
IFD146   WTO   'IFD146I SEE SRL - ONLINE TEST EXECUTIVE PROGRAM',MF=L,RX00190000
               OUTCDE=10,DESC=7                                         00200000
DMSG     DC    CL51'EXAMPLES OF DEVICE FIELD'                           00210000
         DC    CL51'0181/           TEST DEVICE 181'                    00220000
         DC    CL51'0185-187/       TEST DEVICES 185,186 AND 187'       00230000
         DC    CL51'CHICAGO1,TP2/   TEST SYMBOLIC TP DEVICES'           00240000
         DC    CL51'                CHICAGO1 AND TP2'                   00250000
         DC    CL51'.NDR/           NO DEVICE REQUIRED FOR TEST'        00260000
         DC    CL51'/ (SLASH ALONE) TEST PREVIOUSLY SELECTED DEVICE(S)' 00270000
TMSG     DC    CL51'EXAMPLES OF TEST FIELD'                             00280000
         DC    CL51'2400/           TAPE TESTS (T2400A-T24000Z)'        00290000
         DC    CL51'2400A/          SEC. A OF TAPE TEST 2400'           00300000
         DC    CL51'2400C,2/        RTN 2, SEC. C, TEST 2400'           00310000
         DC    CL51'2400A-C,E,G/    SEC. A,B,C,E, AND G OF TEST 2400'   00320000
         DC    CL51'IOEPZZ/         SEC. ZZ OF EDIT-PRINT FUNCTION'     00330000
         DC    CL51'R2540AA/        SEC. AA OF READER TEST 2540'        00340000
         DC    CL51'/ (SLASH ALONE) RUN PREVIOUSLY SELECTED TESTS'      00350000
OMSG     DC    CL51'                             TABLE OF OPTIONS'      00360000
         DC    CL51'                     TO REQUEST    TO OMIT    BY'   00370000
         DC    CL51'    OPTION             OPTION       OPTION  DEFAULTX00380000
               '                                                        00390000
         DC    CL51'TESTING LOOP            TL           NTL      NTL'  00400000
         DC    CL51'                         TL(VALUE) VALUE=1-32767'   00410000
         DC    CL51'ERROR LOOP              EL           NEL      NEL'  00420000
         DC    CL51'                         EL(VALUE) VALUE=1-32767'   00430000
         DC    CL51'ERROR PRINT             EP           NEP      EP'   00440000
         DC    CL51'CONTROL PRINT           CP           NCP      CP'   00450000
         DC    CL51'PARALLEL PRINT          PP           NPP      NPP'  00460000
*                                                                 M1006 00470000
         DC    CL51'                         PP(LEVEL) LEVEL=0-3'       00480000
         DC    CL51'PRINT                   PR           NPR      PR'   00490000
*                                                                XM5088 00500000
         DC    CL51'FIRST ERROR             FE           NFE      FE'   00510000
         DC    CL51'COMMUNICATION'                                      00520000
         DC    CL51'MANUAL INTERVENTION     MI           NMI      NMI'  00530000
         DC    CL51'REMOTE FE CONTROL       RE           NRE      NRE'  00540000
         DC    CL51'TRACE                   TR           NTR      NTR'  00550000
*                                                               X02008  00560000
         DC    CL51'EXTERNAL DATA            EXT='                      00570000
*                                                                S20203 00580000
         DC    CL51'EXAMPLES OF OPTION FIELD'                           00590000
         DC    CL51'PP,NMI,RE/'                                         00600000
         DC    CL51'EP,TL(50),FE,EXT=A,B/'                              00610000
         DS    0H                                                       00620000
*         END;                                                          00630000
@EL01    BCR   15,@E                                              0004  00640000
@DATA1   EQU   *                                                        00650000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00660000
@1       EQU   01                                                       00670000
@2       EQU   02                                                       00680000
@3       EQU   03                                                       00690000
@4       EQU   04                                                       00700000
@5       EQU   05                                                       00710000
@6       EQU   06                                                       00720000
@7       EQU   07                                                       00730000
@8       EQU   08                                                       00740000
@9       EQU   09                                                       00750000
@A       EQU   10                                                       00760000
@B       EQU   11                                                       00770000
@C       EQU   12                                                       00780000
@D       EQU   13                                                       00790000
@E       EQU   14                                                       00800000
@F       EQU   15                                                       00810000
         DS    0D                                                       00820000
@DATA    EQU   *                                                        00830000
         DS    00000000C                                                00840000
@TEMPS   DS    0F                                                       00850000
@DATEND  EQU   *                                                        00860000
         END                                                            00870000
./  ADD  SSI=81161459,NAME=IFDMSG53
         TITLE 'IFDMSG53 RESTORE TAPE LABELS MESSAGE MODULE'            00010000
         TITLE 'IFDMSG53 RESTORE TAPE LABELS,MSS STATUS MESSAGE MODULE' 00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDMSG53 CSECT ,                                                  0002  00050000
         DC    A(MSG1)                                                  00060000
         DC    A(MSG2)                                                  00070000
         DC    A(MSG3)                                                  00080000
         DC    A(MSG4)                                         @ZA15468 00090000
         DC    A(MSG5)                                         @ZA15468 00100000
MSG1     WTO   'IFD174I UNABLE TO RESTORE LABEL ON XXXXXXXX',MF=L,ROUTCX00110000
               DE=10,DESC=7                                      S21050 00120000
MSG2     WTO   'IFD137I CSW XXYYYYYYYYYYYYYY SNS XXXXXXXXXXXX',MF=L,ROUX00130000
               TCDE=10,DESC=7                                    S21050 00140000
MSG3     DS    F                                                        00150000
         DS    F                                                        00160000
         WTO   'IFD139D REPLY R TO RETRY,P TO PROCEED',MF=L,ROUTCDE=10,X00170000
               DESC=7                                                   00180000
MSG4     WTO   'IFD476I INTERFACE          DIAGNOSTICALLY INITIALIZED',*00190000
               MF=L,ROUTCDE=10,DESC=7                          @ZA15468 00200000
MSG5     WTO   'IFD477I TO INITIALIZE FUNCTIONALLY, RUN OLT T3850I',MF=*00210000
               L,ROUTCDE=10,DESC=7                             @ZA15468 00220000
         DS    0H                                                       00230000
*         END;                                                          00240000
@EL01    BCR   15,@E                                              0004  00250000
@DATA1   EQU   *                                                        00260000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00270000
@1       EQU   01                                                       00280000
@2       EQU   02                                                       00290000
@3       EQU   03                                                       00300000
@4       EQU   04                                                       00310000
@5       EQU   05                                                       00320000
@6       EQU   06                                                       00330000
@7       EQU   07                                                       00340000
@8       EQU   08                                                       00350000
@9       EQU   09                                                       00360000
@A       EQU   10                                                       00370000
@B       EQU   11                                                       00380000
@C       EQU   12                                                       00390000
@D       EQU   13                                                       00400000
@E       EQU   14                                                       00410000
@F       EQU   15                                                       00420000
         DS    0D                                                       00430000
@DATA    EQU   *                                                        00440000
         DS    00000000C                                                00450000
@TEMPS   DS    0F                                                       00460000
@DATEND  EQU   *                                                        00470000
         END    ,(C'PL/S',1400,78116)                                   00480000
./  ADD  SSI=40381269,NAME=IFDMSG54
         TITLE ' RETAIN/370 INITIALIZATION MESSAGE MODULE IFDMSG54'     00010000
         TITLE 'RETAIN/370 INITIALIZATION MESSAGE MODULE IFDMSG54'      00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDMSG54 CSECT ,                                                  0002  00050000
         DC    AL4(MSG1)                                                00060000
         DC    AL4(MSG2)                                                00070000
         DC    AL4(MSG3)                                                00080000
         DC    AL4(MSG4)                                                00090000
         DC    AL4(IFD140)                                      Y02008  00100000
*                                                              S21051   00110000
MSG1     WTO   'IFD163I RETAIN/370 READY',MF=L,ROUTCDE=10,DESC=7        00120000
*                                                              S21051   00130000
MSG2     WTO   'IFD164I CANNOT LINK TO RETAIN/370 -                    X00140000
                            ',MF=L,ROUTCDE=10,DESC=7            X03008  00150000
MSG3     DS    2F                                                       00160000
         WTO   'IFD168E TO COMMUNICATE WITH REMOTE SPECIALIST ENTER MESC00170000
               SAGE',MF=L,ROUTCDE=10,DESC=7                             00180000
*                                                              S21051   00190000
MSG4     WTO   'IFD137I CSW YYXXXXXXXXXXXXXX SNS XXXXXXXXXXXX',MF=L,ROUX00200000
               TCDE=10,DESC=7                                           00210000
*                                                               M4503   00220000
IFD140   WTO   'IFD140I          VARIED OFFLINE BY OLTEP',MF=L,ROUTCDE=X00230000
               10,DESC=7                                                00240000
         DS    0H                                                       00250000
*         END;                                                          00260000
@EL01    BCR   15,@E                                              0004  00270000
@DATA1   EQU   *                                                        00280000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00290000
@1       EQU   01                                                       00300000
@2       EQU   02                                                       00310000
@3       EQU   03                                                       00320000
@4       EQU   04                                                       00330000
@5       EQU   05                                                       00340000
@6       EQU   06                                                       00350000
@7       EQU   07                                                       00360000
@8       EQU   08                                                       00370000
@9       EQU   09                                                       00380000
@A       EQU   10                                                       00390000
@B       EQU   11                                                       00400000
@C       EQU   12                                                       00410000
@D       EQU   13                                                       00420000
@E       EQU   14                                                       00430000
@F       EQU   15                                                       00440000
         DS    0D                                                       00450000
@DATA    EQU   *                                                        00460000
         DS    00000000C                                                00470000
@TEMPS   DS    0F                                                       00480000
@DATEND  EQU   *                                                        00490000
         END                                                            00500000
./  ADD  SSI=32570878,NAME=IFDMSG56
         TITLE ' RETAIN/370 TERMINATION MESSAGE MODULE IFDMSG56'        00010000
         TITLE 'RETAIN/370 TERMINATION MESSAGE MODULE IFDMSG56'         00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDMSG56 CSECT ,                                                  0002  00050000
         DC    AL4(MSG1)                                                00060000
         DC    AL4(MSG2)                                                00070000
         DC    AL4(MSG3)                                                00080000
         DC    AL4(MSG4)                                                00090000
*                                                              S21051   00100000
         DC    AL4(MSG5)                                                00110000
*                                                              S21051   00120000
MSG1     WTO   'IFD169I RETAIN/370 TERMINATED',MF=L,ROUTCDE=10,DESC=7   00130000
MSG2     WTO   'IFD121I    MESSAGE CANCELLED BY OLTEP.',MF=L,ROUTCDE=10C00140000
               ,DESC=7                                                  00150000
*                                                              S21051   00160000
MSG3     WTO   'IFD167I PERMANENT ERROR ON REI DEVICE',MF=L,ROUTCDE=10,X00170000
               DESC=7                                                   00180000
*                                                               M4503   00190000
MSG4     WTO   'IFD505I TIME INTERVAL EXPIRED,NO LINE ACTIVITY',MF=L,ROX00200000
               UTCDE=10,DESC=7                                          00210000
*                                                              S21051   00220000
MSG5     WTO   'IFD137I CSW YYXXXXXXXXXXXXXX SNS XX',MF=L,ROUTCDE=10,DEX00230000
               SC=7                                                     00240000
         DS    0H                                                       00250000
*         END;                                                          00260000
@EL01    BCR   15,@E                                              0004  00270000
@DATA1   EQU   *                                                        00280000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00290000
@1       EQU   01                                                       00300000
@2       EQU   02                                                       00310000
@3       EQU   03                                                       00320000
@4       EQU   04                                                       00330000
@5       EQU   05                                                       00340000
@6       EQU   06                                                       00350000
@7       EQU   07                                                       00360000
@8       EQU   08                                                       00370000
@9       EQU   09                                                       00380000
@A       EQU   10                                                       00390000
@B       EQU   11                                                       00400000
@C       EQU   12                                                       00410000
@D       EQU   13                                                       00420000
@E       EQU   14                                                       00430000
@F       EQU   15                                                       00440000
         DS    0D                                                       00450000
@DATA    EQU   *                                                        00460000
         DS    00000000C                                                00470000
@TEMPS   DS    0F                                                       00480000
@DATEND  EQU   *                                                        00490000
         END                                                            00500000
./  ADD  SSI=32570879,NAME=IFDMSG61
         TITLE 'IFDMSG61 DEVICE DECODE 2 MESSAGE MODULE'                00010000
         TITLE 'IFDMSG61 DEVICE DECODE 2 MESSAGE MODULE'                00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDMSG61 CSECT ,                                                  0002  00050000
         DC    AL4(IFD109)                                              00060000
         DC    AL4(IFD110)                                              00070000
         DC    AL4(IFD111)                                              00080000
         DC    AL4(IFD114)                                              00090000
         DC    AL4(IFD127)                                              00100000
         DC    AL4(IFD154)                                      X02906  00110000
IFD109   WTO   'IFD109I XXXXXXXX YYYYYYY,ZZZZZZZZZZZ WILL NOT BE TESTEDX00120000
               ',MF=L,ROUTCDE=10,DESC=7                         XA00530 00130000
IFD110   WTO   'IFD110I TESTABLE DEVICES MAY NOT EXCEED 16',MF=L,ROUTCDX00140000
               E=10,DESC=7                                              00150000
IFD111   WTO   'IFD111I NO DEVICES AVAILABLE FOR TEST',MF=L,ROUTCDE=10,X00160000
               DESC=7                                                   00170000
IFD114   WTO   'IFD114I ALL GRAPHICS ON CONTROL UNIT NOT OFFLINE',MF=L,X00180000
               ROUTCDE=10,DESC=7                                        00190000
IFD127   WTO   'IFD127I NO CDS FOR          ',MF=L,ROUTCDE=10,DESC=7    00200000
IFD154   WTO   'IFD154I DEV          CDS/UCB CLASS INCOMPATIBILITY, TESX00210000
               TING BYPASSED',MF=L,ROUTCDE=10,DESC=7            X02906  00220000
         DS    0H                                                       00230000
*         END;                                                          00240000
@EL01    BCR   15,@E                                              0004  00250000
@DATA1   EQU   *                                                        00260000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00270000
@1       EQU   01                                                       00280000
@2       EQU   02                                                       00290000
@3       EQU   03                                                       00300000
@4       EQU   04                                                       00310000
@5       EQU   05                                                       00320000
@6       EQU   06                                                       00330000
@7       EQU   07                                                       00340000
@8       EQU   08                                                       00350000
@9       EQU   09                                                       00360000
@A       EQU   10                                                       00370000
@B       EQU   11                                                       00380000
@C       EQU   12                                                       00390000
@D       EQU   13                                                       00400000
@E       EQU   14                                                       00410000
@F       EQU   15                                                       00420000
         DS    0D                                                       00430000
@DATA    EQU   *                                                        00440000
         DS    00000000C                                                00450000
@TEMPS   DS    0F                                                       00460000
@DATEND  EQU   *                                                        00470000
         END                                                            00480000
./  ADD  SSI=32851169,NAME=IFDMSG73
         LCLA  &T,&SPN                                            0001  00010000
.@001    ANOP                                                     0001  00020000
IFDMSG73 CSECT ,                                                  0001  00030000
         DC    AL4(MSG01)                                               00040000
         DC    AL4(MSG02)                                               00050000
         DC    AL4(MSG03)                                               00060000
         DC    AL4(MSG07)                                               00070000
         DC    AL4(MSG08)                                               00080000
         DC    AL4(MSG09)                                               00090000
         DC    AL4(MSG10)                                               00100000
         DC    AL4(MSG11)                                               00110000
         DC    AL4(IFD408)                                     Y02906   00120000
MSG01    WTO   'IFD413I REQUIRED CDS POINTER NOT PRESENT',MF=L,ROUTCDE=X00130000
               10,DESC=7                                                00140000
MSG02    WTO   'IFD400I TP LINE CONNECTION, LINE=XXXXXXXX, TERMINAL=XXXX00150000
               XXXXX',MF=L,ROUTCDE=10,DESC=7                            00160000
MSG03    WTO   'IFD415I REQUIRED DATA INCORRECT OR MISSING IN CDS',MF=LX00170000
               ,ROUTCDE=10,DESC=7                                       00180000
MSG07    WTO   'IFD405I OPERATOR CALL REQUIRED, TELEPHONE NUMBER NOT INX00190000
                CDS',MF=L,ROUTCDE=10,DESC=7                             00200000
MSG08    WTO   'IFD406I OPERATOR CALL TERMINAL ON NUMBER XXXXXXXXXXXXXXX00210000
               XXXXXX',MF=L,ROUTCDE=10,DESC=7                           00220000
MSG09    WTO   'IFD412I CCW CHAIN TERMINATED ON XXXXXXXXXXXXXXXX',MF=L,X00230000
               ROUTCDE=10,DESC=7                                        00240000
MSG10    WTO   'IFD407I OPERATOR CALL NOT COMPLETED WITHIN TIME LIMITS'X00250000
               ,MF=L,ROUTCDE=10,DESC=7                                  00260000
MSG11    WTO   'IFD137I CSW XXYYYYYYYYYYYYYY SNS XXXX',MF=L,ROUTCDE=10,X00270000
               DESC=7                                                   00280000
IFD408   WTO   'IFD408I 00000000 RETURNED A CC=3, NOT OPERATIONAL',DESCX00290000
               =7,ROUTCDE=10,MF=L                              Y02906   00300000
         DS    0H                                                       00310000
*         END;                                                          00320000
@EL01    BCR   15,@E                                              0003  00330000
@DATA1   EQU   *                                                        00340000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00350000
@1       EQU   01                                                       00360000
@2       EQU   02                                                       00370000
@3       EQU   03                                                       00380000
@4       EQU   04                                                       00390000
@5       EQU   05                                                       00400000
@6       EQU   06                                                       00410000
@7       EQU   07                                                       00420000
@8       EQU   08                                                       00430000
@9       EQU   09                                                       00440000
@A       EQU   10                                                       00450000
@B       EQU   11                                                       00460000
@C       EQU   12                                                       00470000
@D       EQU   13                                                       00480000
@E       EQU   14                                                       00490000
@F       EQU   15                                                       00500000
         DS    0D                                                       00510000
@DATA    EQU   *                                                        00520000
         DS    00000000C                                                00530000
@TEMPS   DS    0F                                                       00540000
@DATEND  EQU   *                                                        00550000
         END                                                            00560000
./  ADD  SSI=32851172,NAME=IFDMSG74
         TITLE 'IFDMSG74---LINE-CONNECTION DISABLE ROUTINE MSG MODULE'  00010000
         TITLE ' IFDMSG74-LINE-CONNECTION DISABLE ROUTINE MSG MODULE '  00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDMSG74 CSECT ,                                                  0002  00050000
         DC    AL4(IFD408)                                       Y02906 00060000
IFD408   WTO   'IFD408I 00000000 RETURNED A CC=3, NOT OPERATIONAL',DESCX00070000
               =7,ROUTCDE=10,MF=L                                Y02906 00080000
         DS    0H                                                       00090000
*         END;                                                          00100000
@EL01    BCR   15,@E                                              0004  00110000
@DATA1   EQU   *                                                        00120000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00130000
@1       EQU   01                                                       00140000
@2       EQU   02                                                       00150000
@3       EQU   03                                                       00160000
@4       EQU   04                                                       00170000
@5       EQU   05                                                       00180000
@6       EQU   06                                                       00190000
@7       EQU   07                                                       00200000
@8       EQU   08                                                       00210000
@9       EQU   09                                                       00220000
@A       EQU   10                                                       00230000
@B       EQU   11                                                       00240000
@C       EQU   12                                                       00250000
@D       EQU   13                                                       00260000
@E       EQU   14                                                       00270000
@F       EQU   15                                                       00280000
         DS    0D                                                       00290000
@DATA    EQU   *                                                        00300000
         DS    00000000C                                                00310000
@TEMPS   DS    0F                                                       00320000
@DATEND  EQU   *                                                        00330000
         END                                                            00340000
./  ADD  SSI=33191094,NAME=IFDOLTAA
         TITLE 'IFDOLTAA DDATE'                                         00700002
IFDOLTAA CSECT                                                          01400002
*********************************************************************** 02100002
*  MODULE NAME = IFDOLTAA                                             * 02200002
*                                                                     * 02300002
*  DESCRIPTIVE NAME = DDATE                                           * 02400002
*                                                                     * 02500002
*  COPYRIGHT = NONE                                                   * 02600002
*                                                                     * 02700002
*                                                                     * 02800002
*  STATUS                                                             * 05600002
*        CHANGE LEVEL 000                                             * 06300002
*                                                                     * 07000002
*  FUNCTION                                                           * 07700002
*        THIS MODULE SUPPORTS THE $DDATE MACRO. THE DATE IS RETRIEVED * 08400002
*        FROM THE SYSTEM AND PASSED TO THE OLT IN THE FORMAT MM/DD/YY.* 09100002
*                                                                     * 09800002
*  ENTRY POINTS                                                       * 10500002
*        IFDOLTAA                                                     * 11200002
*                                                                     * 11900002
*  INPUT                                                              * 12600002
*        REG 2 = POINTER TO OLTEP COMMON AREA                         * 13300002
*           13 = POINTER TO CALLER'S SAVE AREA                        * 14000002
*           14 = RETURN ADDRESS                                       * 14700002
*           15 = ENTRY POINT OF THIS MODULE                           * 15400002
*                                                                     * 16100002
*  OUTPUT                                                             * 16800002
*        RETURN CODES                                                 * 17500002
*           R15 = 00  SUCCESSFUL OPERATION                            * 18200002
*               = 04  DATE NOT AVAILABLE                              * 18900002
*        DATE IN                                                      * 19600002
*           R0  = MM/D                                                * 20300002
*           R1  = D/YY                                                * 21000002
*                                                                     * 21700002
*  EXTERNAL REFERENCES                                                * 22400002
*        ISSUES THE SYSTEM TIME MACRO                                 * 23100002
*                                                                     * 23800002
*  EXITS NORMAL                                                       * 24500002
*        AT THE LABEL - DATE0800                                      * 25200002
*                                                                     * 25900002
*  EXITS ERROR                                                        * 26600002
*        NONE                                                         * 27300002
*                                                                     * 28000002
*  TABLES AND WORKARES                                                * 28700002
*        INTERNAL TO THIS MODULE, NOT REFERENCED BY OTHER MODULES.    * 29400002
*                                                                     * 30100002
*  CHANGE ACTIVITY = AS FOLLOWS:                                      * 30200002
*        NONE                                                         * 30300002
*                                                                     * 30400002
*********************************************************************** 30800002
         SAVE  (14,12),,IFDOLTAA&SYSDATE   SAVE REGS (EXCEPT 13) X03906 31500002
         BALR  BASEREG,ZERO            ESTABLISH ADDRESSABILITY         32200002
         USING *,BASEREG               ASSIGN BASE REG                  32900002
         ST    SAVEREG,SAVEAREA+4      SAVE CALLER'S SVAREA ADDR        33600002
         LA    R15,SAVEAREA            MY SAVE AREA ADDR                34300002
         ST    R15,EIGHT(ZERO,SAVEREG)  PUT IT IN CALLER'S SVAREA       35000002
         LR    SAVEREG,R15             KEEP MY SAVE AREA ADDR IN R13    35700002
         SPACE                                                          35780002
         CLI   1(R1),2                    MACRO CALL LEVEL CHECK YM5400 35860002
         BE    GDLEVEL                    GOOD LEVEL PROCESSING  YM5400 35950002
         L     SAVEREG,FOUR(ZERO,SAVEREG) GET POINTER TO CALLERS YM5400 36040002
*                                           SAVE AREA            YM5400 36130002
         LM    R2,R12,28(SAVEREG)       RESTORE REGS 2-12        YM5400 36220002
         RETURN (14),T,RC=4                                      YM5400 36310002
         SPACE 4                                                        36400002
GDLEVEL  EQU   *                                                 YM5400 36700002
         TIME                                                           37100002
         SPACE                                                          37800002
         ST    R1,SAVE                     SAVE DATE FROM MACRO         38500002
         MVO   WORK+SIX(TWO),SAVE+ONE(ONE) GET YEAR                     39200002
         OI    WORK+SEVEN,HEX0F            CREATE A + SIGN              39900002
         UNPK  DATE+SIX(TWO),WORK+SIX(TWO) UNPACK YEAR (PRINTABLE)      40600002
         CVB   YEAR,WORK                   GET YEAR IN BINARY           41300002
         SR    REMAIN,REMAIN               CLEAR REG FOR DIVIDE         42000002
         LA    DIVISOR,FOUR            DIVIDE BY 4 TO CHK FOR LEAP      42700002
         DR    DIVIDEND,DIVISOR            DIVIDE YEAR                  43400002
         LA    TABLBASE,NOT            ASSUME NOT-LEAP TABL ADR-2       44100002
         LTR   REMAIN,REMAIN           LEAP YEAR?                       44800002
         BNZ   DATE0600                NO, ASSUMPTION CORRECT           45500002
         LA    TABLBASE,LEAP           YES, USE LEAP-YEAR TBL ADR-2     46200002
DATE0600 EQU   *                                                        46900002
         MVC   WORK+SIX(TWO),SAVE+TWO  GET DAY                          47600002
         CVB   DAYS,WORK               CONVERT TO BINARY                48300002
         LA    INDEX,TBLENGTH          SET INDEX REG TO TABLE LNGTH     49000002
DATE0700 EQU   *                                                        49700002
         LH    ENTRY,ZERO(INDEX,TABLBASE) GET ENTRY FROM TABLE          50400002
         CR    DAYS,ENTRY              IS THIS THE CORRECT ENTRY?       51100002
         BNH   DATE0900                NO, DECR INDEX & KEEP SEARCHING  51800002
         SR    DAYS,ENTRY              YES, GET DAY IN THIS MONTH       52500002
         CVD   DAYS,WORK               CONVERT  DAY TO PACKED DEC       53200002
         UNPK  DATE+THREE(TWO),WORK+SIX(TWO) UNPACK DAY                 53900002
         OI    DATE+FOUR,HEXF0         MAKE DAY PRINTABLE               54600002
         SPACE                                                          55300002
         SRL   INDEX,ONE               GET MONTH FROM INDEX REG         56000002
         CVD   MONTH,WORK              CONVERT MONTH TO PACKED DEC      56700002
         UNPK  DATE(TWO),WORK+SIX(TWO) UNPACK MONTH                     57400002
         OI    DATE+ONE,HEXF0          MAKE IT PRINTABLE                58100002
         L     R0,DATE                 PUT DATE - MM/D IN R0            58800002
         L     R1,DATE+4               PUT DATE - D/YY IN R1            59500002
         L     SAVEREG,FOUR(ZERO,SAVEREG) GET POINTER TO CALLERS SVAREA 60200002
         LM    R2,R12,28(SAVEREG)       RESTORE REGS 2-12               60900002
         RETURN (14),T,RC=0                                             61600002
         SPACE 2                                                        62300002
DATE0900 EQU   *                                                        63000002
         LA    R8,TWO                  DECREMENT VALUE                  63700002
         SR    INDEX,R8                POINT TO NEXT ENTRY DOWN         64400002
         B     DATE0700                GO CHECK OUT THIS ENTRY          65100002
R0       EQU   0                       REGISTER 0                       65800002
R1       EQU   1                       REGISTER 1                       66500002
R2       EQU   2                        REGISTER 2                      67200002
REMAIN   EQU   4                       REGISTER 4                       67900002
DAYS     EQU   4                       REGISTER 4                       68600002
DIVIDEND EQU   4                        REGISTER 4                      69300002
YEAR     EQU   5                       REGISTER 5                       70000002
TABLBASE EQU   5                       REGISTER 5                       70700002
DIVISOR  EQU   6                       REGISTER 6                       71400002
MONTH    EQU   6                       REGISTER 6                       72100002
INDEX    EQU   6                       REGISTER 6                       72800002
ENTRY    EQU   7                       REGISTER 7                       73500002
R8       EQU   8                       REGISTER 8                       74200002
BASEREG  EQU   11                      BASE REGISTER                    74900002
R12      EQU   12                       REGISTER 12                     75600002
SAVEREG  EQU   13                                                       76300002
R15      EQU   15                      REGISTER 15                      77000002
ZERO     EQU   0                       ZERO                             77700002
ONE      EQU   1                       ONE                              78400002
TWO      EQU   2                       TWO                              79100002
THREE    EQU   3                       THREE                            79800002
FOUR     EQU   4                       FOUR                             80500002
SIX      EQU   6                       SIX                              81200002
SEVEN    EQU   7                       SEVEN                            81900002
EIGHT    EQU   8                       EIGHT                            82600002
HEXF0    EQU   X'F0'                   TO MAKE LAST CHAR PRINTABLE      83300002
HEX0F    EQU   X'0F'                   SET + SIGN BIT                   84000002
WORK     DC    D'0'                                                     84700002
SAVE     DC    F'0'                                                     85400002
DATE     DC    C'00/00/00'                                              86100002
SAVEAREA DC    18F'0'                                                   86800002
LEAP     EQU   *-2                      ADDR OF LEAP TBL-2 FOR BASE     87500002
LEAPTABL DC    AL2(0,31,60,91,121,152,182,213,244,274,305,335)          88200002
NOT      EQU   *-2                      ADDR OF NOT LEAP TBL-2 (BASE)   88900002
LENGTH   EQU   *                        ADDR AT BEG OF TABLE            89600002
NONLPTBL DC    AL2(0,31,59,90,120,151,181,212,243,273,304,334)          90300002
TBLENGTH EQU   *-LENGTH                LENGTH OF TABLE                  91000002
         LTORG                                                          91700002
         END                                                            92400002
./  ADD  SSI=33191104,NAME=IFDOLTAB
         TITLE 'IFDOLTAB DTIME'                                         01000002
IFDOLTAB CSECT                                                          02000002
*********************************************************************** 03000002
*                                                                     * 03100002
*  MODULE NAME = IEDOLTAB                                             * 03200002
*                                                                     * 03300002
*  DESCRIPTIVE NAME = DTIME                                           * 03400002
*                                                                     * 03500002
*  COPYRIGHT = NONE                                                   * 03600002
*                                                                     * 04000002
*  STATUS                                                             * 08000002
*        CHANGE LEVEL 000                                             * 09000002
*                                                                     * 10000002
*  FUNCTION                                                           * 11000002
*        THIS MODULE SUPPORTS THE $DTIME MACRO. THE TIME IS RETRIEVED * 12000002
*        FROM THE SYSTEM AND PASSED TO THE OLT IN THE FORMAT HHMMSS00.* 13000002
*                                                                     * 14000002
*  ENTRY POINTS                                                       * 15000002
*        IFDOLTAB                                                     * 16000002
*                                                                     * 17000002
*  INPUT                                                              * 18000002
*        REG 2 = POINTER TO OLTEP COMMON AREA                         * 19000002
*           13 = POINTER TO CALLER'S SAVE AREA                        * 20000002
*           14 = RETURN ADDRESS                                       * 21000002
*           15 = ENTRY POINT OF THIS MODULE                           * 22000002
*                                                                     * 23000002
*  OUTPUT                                                             * 24000002
*        RETURN CODES                                                 * 25000002
*           R15 = 00  SUCCESSFUL OPERATION                            * 26000002
*               = 04  TIME NOT AVAILABLE                              * 27000002
*        TIME IN                                                      * 28000002
*            R1 = HHMMSS00                                            * 29000002
*                                                                     * 30000002
*  EXTERNAL REFERENCES                                                * 31000002
*        ISSUES THE SYSTEM TIME MACRO                                 * 32000002
*                                                                     * 33000002
*  EXITS NORMAL                                                       * 34000002
*        AT THE LABEL - TIME0800                                      * 35000002
*                                                                     * 36000002
*  EXITS ERROR                                                        * 37000002
*        NONE                                                         * 38000002
*                                                                     * 39000002
*  TABLES AND WORKAREAS                                               * 40000002
*        NONE                                                         * 41000002
*                                                                     * 42000002
*  CHANGE ACTIVITY = AS FOLLOWS:                                      * 42200002
*        NONE                                                         * 42400002
*                                                                     * 42600002
*********************************************************************** 43000002
         SPACE 3                                                        44000002
         SAVE  (14,12),,IFDOLTAB&SYSDATE  SAVE REGS (EXCEPT 13)  X03906 45000002
         BALR  BASEREG,ZERO            ESTABLISH ADDRESSABILITY         46000002
         USING *,BASEREG               ASSIGN BASE REG                  47000002
         SPACE                                                          48000002
         ST    SAVEREG,SAVEAREA+4      SAVE CALLER'S SAVAREA ADDR       49000002
         LA    R15,SAVEAREA            GET MY SAVAREA ADDR              50000002
         ST    R15,EIGHT(ZERO,SAVEREG) PUT IT IN CALLER'S SAV AREA      51000002
         LR    SAVEREG,R15             KEEP MY SAVE AREA ADDR IN R13    52000002
         SPACE                                                          52100002
         CLI   1(R1),2                    MACRO CALL LEVEL CHECK YM5400 52200002
         BE    GDLEVEL                    GOOD LEVEL MACRO CALL  YM5400 52300002
         L     SAVEREG,FOUR(ZERO,SAVEREG) GET POINTER TO CALLERS YM5400 52400002
*                                          SAVE AREA             YM5400 52500002
         L     R0,20(ZERO,SAVEREG)      RESTORE REG 0            YM5400 52600002
         LM    R2,R12,28(SAVEREG)       RESTORE REGS 2-12        YM5400 52700002
         RETURN (14),T,RC=4                                      YM5400 52800002
         SPACE 4                                                        53000002
GDLEVEL  EQU   *                                                 YM5400 53500002
         TIME  DEC                     GET PACKED DECIMAL TIME          54000002
         SPACE 2                                                        55000002
         LR    R1,R0                   GET TIME AS RETURNED FROM OS     56000002
         IC    R1,HEX00                ZERO OUT LOW BYTE                57000002
         L     SAVEREG,FOUR(ZERO,SAVEREG) GET POINTER TO CALLERS SVAREA 58000002
         L     R0,20(ZERO,SAVEREG)      RESTORE REG 0                   59000002
         LM    R2,R12,28(SAVEREG)       RESTORE REGS 2-12               60000002
         RETURN (14),T,RC=0                                             61000002
         SPACE 2                                                        62000002
R0       EQU   0                       REGISTER 0                       63000002
R1       EQU   1                       REGISTER 1                       64000002
R2       EQU   2                        REGISTER 2                      65000002
BASEREG  EQU   11                      BASE REGISTER                    66000002
R12      EQU   12                       REGISTER 12                     67000002
SAVEREG  EQU   13                      SAVE REGISTER                    68000002
R15      EQU   15                      REGISTER 15                      69000002
ZERO     EQU   0                       ZERO DISPLACEMENT                70000002
FOUR     EQU   4                       DISPLACEMENT 4                   71000002
EIGHT    EQU   8                       EIGHT DISPLACEMENT               72000002
HEX00    DC    X'00'                   TO ZERO R1, RIGHTMOST BYTE       73000002
SAVEAREA DC    18F'0'                   SAVE AREA                       74000002
         LTORG                                                          75000002
         END                                                            76000002
./  ADD  SSI=43440013,NAME=IFDOLTAJ
         TITLE 'IFDOLTAJ--CUTEST MODULE'                                00010000
         LCLA  &T,&SPN                                            0001  00020000
.@001    ANOP                                                     0001  00030000
IFDOLTAJ CSECT ,                                                  0001  00040000
         BC    15,24(0,@F)                                              00050000
         DC    C'IFDOLTAJ 10 DEC 74'                             0001  00060000
         ST    @E,12(0,@D)                                        0001  00070000
         STM   @0,@C,20(@D)                                       0001  00080000
         BALR  @B,0                                               0001  00090000
@PSTART  DS    0H                                                 0001  00100000
         USING @PSTART+00000,@B                                   0001  00110000
         ST    @D,@SAV001+4                                       0001  00120000
         LA    @F,@SAV001                                         0001  00130000
         ST    @F,8(0,@D)                                         0001  00140000
         LR    @D,@F                                              0001  00150000
         TITLE 'IFDOLTAJ CUTEST MODULE'                                 00160000
         DS    0H                                                       00170000
         USING CHASCT,2                ADDRESS COMMON AREA              00180000
         DS    0H                                                       00190000
*         R7=R1;                        /* ADDRESS PARAMETER LIST     * 00200000
         LR    @7,@1                                              0074  00210000
*         R5=ADDR(IFDMSGAJ);            /* SET POINTER TO MSG MOD     * 00220000
         L     @C,@V1              ADDRESS OF IFDMSGAJ            0075  00230000
         LR    @5,@C                                              0075  00240000
*         MODFLAGS='00'X;               /* CLEAR OUT FLAG BYTE.       * 00250000
         MVI   MODFLAGS,X'00'                                     0076  00260000
*         MYCUTEXT=CUTEXT;             /* COPY EXTPTR IN OLT  @Y30LPAW* 00270000
         MVC   MYCUTEXT(4),4(@7)                                  0077  00280000
*         EXTLIMIT='01'X;              /* INIT CNTR TO 1 EXT  @Y30LPAW* 00290000
         MVI   EXTLIMIT,X'01'                                     0078  00300000
*  IF RESENTB='1'B THEN                  /* CHECK INDICATOR     XM0088* 00310000
         TM    A00030,B'01000000'                                 0079  00320000
         BC    12,@9FF                                            0079  00330000
*    DO;                                 /* CDS EQUATE          XM0088* 00340000
*      R1=MSG399;                        /* MESSAGE ADDRESS     XM0088* 00350000
         L     @1,20(0,@5)                                        0081  00360000
*      GEN(PWTO  REG=(1));               /* ISSUE WTO           XM0088* 00370000
         PWTO  REG=(1)                                                  00380000
         DS    0H                                                       00390000
*      GOTO CUTEST1A;                    /* SET RETURN CODE     XM0088* 00400000
         BC    15,CUTEST1A                                        0083  00410000
*    END;                                /* END INDICATOR TEST  XM0088* 00420000
*                                                                       00430000
* CUTEST00:                                                             00440000
*                                                                       00450000
*         NEWBASE=CUBASE;               /* EXTENT UPDATE AREA         * 00460000
@9FF     EQU   *                                                  0085  00470000
CUTEST00 L     @C,MYCUTEXT                                        0085  00480000
         MVC   NEWBASE(4),0(@C)                                   0085  00490000
*         CULAST=CUBASE+CUFINISH-1;     /* LAST DEV ON CNTRL UNIT     * 00500000
         LH    @F,@D1                                             0086  00510000
         SR    @0,@0                                              0086  00520000
         IC    @0,4(0,@C)                                         0086  00530000
         AR    @F,@0                                              0086  00540000
         A     @F,0(0,@C)                                         0086  00550000
         ST    @F,CULAST                                          0086  00560000
*         BUFCOUNT='00'X;               /* CLEAR BUFR COUNTER         * 00570000
         LA    @F,X'00'                                           0087  00580000
         STH   @F,BUFCOUNT                                        0087  00590000
*         ENDOFTAB=DEVTBPTR+(TABLNGTH*(UNICTR-1));                      00600000
         SR    @F,@F                                              0088  00610000
         IC    @F,UNICTR                                          0088  00620000
         BCTR  @F,0                                               0088  00630000
         MH    @F,TABLNGTH                                        0088  00640000
         A     @F,DEVTBPTR                                        0088  00650000
         ST    @F,ENDOFTAB                                        0088  00660000
*                                                                       00670000
*         IF RETAINAC='1'B THEN         /* IF RETAIN ACTIVE           * 00680000
         TM    A00020,B'10000000'                                 0089  00690000
         BC    12,@9FE                                            0089  00700000
*           DPMSGREI='1'B;              /* D P MSG TO REMOTE   OY00427* 00710000
         OI    A00021,B'00000001'                                 0090  00720000
*                                                                       00730000
* CUTEST01:                                                             00740000
*                                                                       00750000
*                                                                       00760000
*         /*          CHECK CUTEST MACRO LEVEL PARAMETER              * 00770000
*         IF CUTLEVL<'02'X |           /* MACRO LVL 2 OR MORE @Y30LPAW* 00780000
*           CUTLEVL>'03'X THEN           /* MAC LEVEL 2 OR 3  @Y30LPAW* 00790000
@9FE     EQU   *                                                  0091  00800000
CUTEST01 CLI   1(@7),X'02'                                        0091  00810000
         BC    04,@9FD                                            0091  00820000
         CLI   1(@7),X'03'                                        0091  00830000
         BC    12,@9FC                                            0091  00840000
*          DO;                          /* ERROR IN MACRO CALL.       * 00850000
@9FD     EQU   *                                                  0092  00860000
* CUTEST1A:                              /* LABEL               XM0088* 00870000
*           RETCODE='04'X;              /* SET RETURN CODE TO 04.     * 00880000
CUTEST1A LA    @F,X'04'                                           0093  00890000
*           GO TO CUTEST09;             /* NO, ERROR, SET RC=04.      * 00900000
         BC    15,CUTEST09                                        0094  00910000
*          END;                                                         00920000
*         GO TO CUTEST2A;               /* CHECK CUTEST CU DEVSSA53534* 00930000
*                                                                       00940000
* CUTEST02:                                                             00950000
*                                                                       00960000
*          DO;                          /* SET RC FOR CUTEST NOT      * 00970000
*           RETCODE='0C'X;              /* AVAILABLE. RETURN TO       * 00980000
CUTEST02 LA    @F,X'0C'                                           0098  00990000
*           GO TO CUTEST09;             /* OLT.                       * 01000000
         BC    15,CUTEST09                                        0099  01010000
*          END;                                                         01020000
*                                                                       01030000
* CUTEST2A:                                                             01040000
*                                                                       01050000
*                                                                       01060000
*         /*          ARE ZERO  DEVICES SPECIFIED ON CONTROL UNIT     * 01070000
*         IF CUFINISH='00'X THEN        /* ZERO DEVICES ON CU.        * 01080000
CUTEST2A L     @C,MYCUTEXT                                        0101  01090000
         CLI   4(@C),X'00'                                        0101  01100000
*          GO TO CUTEST02;              /* YES, SET ERROR RETCOD      * 01110000
         BC    08,CUTEST02                                        0102  01120000
*                                                                       01130000
*                                                                       01140000
*         /*      CHECK CODE PARAMETER FOR 0,1 OR 2 VALUE     @Y30LPAW* 01150000
*         IF CUCODE¬<'03'X THEN     /* IF CODE PARM IS NOT    @Y30LPAW* 01160000
         CLI   8(@7),X'03'                                        0103  01170000
*          GO TO CUTEST02;              /* DEFINED SET RC=0C.         * 01180000
         BC    10,CUTEST02                                        0104  01190000
*         IF CUCODE='02'X &         /*   ALLOWED ONLY         @Y30LPAW* 01200000
*            CUTLEVL¬='03'X THEN    /* WITH LEVEL 3 MACRO     @Y30LPAW* 01210000
         CLI   8(@7),X'02'                                        0105  01220000
         BC    07,@9FB                                            0105  01230000
         CLI   1(@7),X'03'                                        0105  01240000
*            GOTO CUTEST02;         /*                        @Y30LPAW* 01250000
         BC    07,CUTEST02                                        0106  01260000
*                                                                       01270000
*         /*          CHECK IF BASE ADDRESS IS LEGITIMATE      Y02008*/ 01280000
*                                                                       01290000
*         IF CUBASE>'0000FFFF'X |        /* BASE ADDRESS VALID Y02008*/ 01300000
*          CUBASE<'00000000'X            /* BOTH HI AND LOW ?  Y02008*/ 01310000
*           THEN                         /* ERROR, NO SVC CALL Y02008*/ 01320000
@9FA     EQU   *                                                  0107  01330000
@9FB     L     @F,@X8                                             0107  01340000
         L     @C,MYCUTEXT                                        0107  01350000
         C     @F,0(0,@C)                                         0107  01360000
         BC    04,@9F9                                            0107  01370000
         L     @F,@X9                                             0107  01380000
         C     @F,0(0,@C)                                         0107  01390000
         BC    12,@9F8                                            0107  01400000
*            GO TO CUTEST08;             /* ATTEMPT LOCATE CDS Y02008*/ 01410000
         BC    03,CUTEST08                                        0108  01420000
*                                                                       01430000
*         IF CUTLEVL='03'X &             /* LEVL 3 MACRO AND  @Y30LPAW* 01440000
*           NUMEXTS='00'X              /* ZERO EXTENTS ON CU  @Y30LPAW* 01450000
*           THEN                       /* INVALID CUTEST RQST @Y30LPAW* 01460000
@9F8     CLI   1(@7),X'03'                                        0109  01470000
         BC    07,@9F7                                            0109  01480000
         CLI   9(@7),X'00'                                        0109  01490000
*           GOTO CUTEST02;             /* ISSUE 04 RET CODE   @Y30LPAW* 01500000
         BC    08,CUTEST02                                        0110  01510000
*                                                                       01520000
*         /*          SET UP FOR SVC 59 FUNCTION                      * 01530000
*                                                                       01540000
*         MODNUM='AJ';                  /* MOD ID IN SVC PLIST        * 01550000
@9F6     EQU   *                                                  0111  01560000
@9F7     MVC   A00010+2(2),@C10                                   0111  01570000
*         CUBASEAD=CUBASE;              /* BASE CU ADDRESS.           * 01580000
         L     @C,MYCUTEXT                                        0112  01590000
         MVC   A00010+4(4),0(@C)                                  0112  01600000
*         CURANGE=CUFINISH;             /* NUM OF DEVS ON CU.         * 01610000
         MVC   A00010+9(1),4(@C)                                  0113  01620000
         MVI   A00010+8,X'00'                                     0113  01630000
*         CUTCODE=CUCODE;               /* CU CODE .                  * 01640000
         MVC   A00010+11(1),8(@7)                                 0114  01650000
         MVI   A00010+10,X'00'                                    0114  01660000
*         MSGMODAJ=R5;                  /* PTR TO IFDMSGAJ.           * 01670000
         ST    @5,A00010+12                                       0115  01680000
*                                                                       01690000
*                                                                       01700000
* CUTEST06:                                                             01710000
*                                                                       01720000
*         R0=ADDR(ROPT);                /* ADDRESS SVC PARM LIST.     * 01730000
CUTEST06 LA    @0,ROPT                                            0116  01740000
*         R1='04'X;                     /* SVC CALLING CODE.   XA     * 01750000
         LA    @1,X'04'                                           0117  01760000
*         /*          ISSUE SUC59 TO TEST DEV STATUS,CUCODE,RTAM CNTRL* 01770000
*         GEN(SVC 59);                  /* SVC FOR CUTEST MACRO       * 01780000
         SVC 59                                                         01790000
         DS    0H                                                       01800000
*                                                                       01810000
*                                                                       01820000
*         /*          TEST SVC 59 FOR RET CODE. RC¬=0 MEANS DEV ERROR * 01830000
*         IF RC¬='00'X THEN             /* RC MEANS ONLINE DEVS       * 01840000
         LA    @0,X'00'                                           0119  01850000
         CR    @0,@F                                              0119  01860000
         BC    08,@9F5                                            0119  01870000
*          DO;                          /* OUTPUT ONLINE DEVICES      * 01880000
*                                                                       01890000
*           /*        CHECK TO DETERMINE IF HEADER MESSAGE OUTPUT     * 01900000
*           IF ONLHEADR='0'B THEN       /* HEADR MSG OUTPUT YET?      * 01910000
         TM    MODFLAGS,B'01000000'                               0121  01920000
         BC    05,@9F4                                            0121  01930000
*            DO;                        /* NO, PRINT IT.              * 01940000
*             R3=ADONLHDR;              /* IN HEADR MSG,FOLLOWED      * 01950000
         L     @3,8(0,@5)                                         0123  01960000
*             GEN(PWTO REG=(R3));       /* BY ONLINE DEVS             * 01970000
         PWTO REG=(R3)                                                  01980000
         DS    0H                                                       01990000
*             ONLHEADR='1'B;            /* SET FLG, HEADR OUTPUT      * 02000000
         OI    MODFLAGS,B'01000000'                               0125  02010000
*            END;                                                       02020000
*                                                                       02030000
*          /*         OUTPUT ONLINE DEVICES FOUND BY SVC 59           * 02040000
*                                                                       02050000
*          R3=ADMSG244;                 /* SVC ONLINE BUFFER MSG      * 02060000
@9F4     L     @3,0(0,@5)                                         0127  02070000
*          GEN(PWTO REG=(R3));          /* OUTPUT ONLINE DEVS         * 02080000
         PWTO REG=(R3)                                                  02090000
         DS    0H                                                       02100000
*          SHARDBUF=SHARDBUF&&SHARDBUF; /* CLEAR BUFFER FOR SVC       * 02110000
         XC    12(60,@3),12(@3)                                   0129  02120000
*                                                                       02130000
*                                                                       02140000
*          /*         MORE DEVICES FOR SVC 59 TO LOOK AT?             * 02150000
*          IF CURANGE>'00'X THEN        /* MORE DEVS TO CHECK?        * 02160000
         LA    @F,X'00'                                           0130  02170000
         CH    @F,A00010+8                                        0130  02180000
*           GO TO CUTEST06;             /* YES, REISSUE SVC 59        * 02190000
         BC    04,CUTEST06                                        0131  02200000
*                                                                       02210000
*                                                                       02220000
* CUTEST07:                                                             02230000
*                                                                       02240000
*          DO;                          /* OR DATA SET ON CU. SET     * 02250000
*           RETCODE='08'X;              /* RET CODE=08. RETURN TO     * 02260000
CUTEST07 LA    @F,X'08'                                           0133  02270000
*           GO TO CUTEST09;             /* OLT.                       * 02280000
         BC    15,CUTEST09                                        0134  02290000
*          END;                                                         02300000
*          END;                                                         02310000
*                                                                       02320000
*         /*          HAVE ONLINE DEVICES BEEN OUTPUT?          XM5092* 02330000
*                                                                       02340000
*         IF ONLHEADR='1'B THEN         /* IF HEADR MSG OUTPUT  XM5089* 02350000
@9F5     TM    MODFLAGS,B'01000000'                               0137  02360000
*           GO TO CUTEST07;             /* HAVE ERROR COND. RTRNXM5089* 02370000
         BC    01,CUTEST07                                        0138  02380000
*                                                                       02390000
*                                                                       02400000
* CUTEST08:                                                             02410000
*                                                                       02420000
*                                                                       02430000
*         /*          SET UP FOR CONVERSION FROM HEX TO EBCDIC        * 02440000
*         HEXADDR=NEWBASE;              /* ADDRESS C U LINE.          * 02450000
CUTEST08 MVC   HEXADDR(4),NEWBASE                                 0139  02460000
*         FROMADDR=ADDR(HEXADDR);   /*                        @Y30LPAW* 02470000
         LA    @F,HEXADDR                                         0140  02480000
         ST    @F,CONVERT+4                                       0140  02490000
*         TOADDR=ADDR(EBCDICAD);    /*                        @Y30LPAW* 02500000
         LA    @F,EBCDICAD                                        0141  02510000
         ST    @F,CONVERT+8                                       0141  02520000
*         FLGCNT='8004'X;      /* SET FLAG AND COUNT          @Y30LPAW* 02530000
         MVC   CONVERT+12(2),@X13                                 0142  02540000
*         R1=ADDR(CONVERT);             /* CONVERT PARM LIST.         * 02550000
         LA    @1,CONVERT                                         0143  02560000
*         R15=TAB28;                    /* TRANS MNGR FOR BRANCH.     * 02570000
         L     @F,TAB28                                           0144  02580000
*         GENERATE;                                                     02590000
         BALR  R14,R15                 CONVERT, HEX TO EBCDIC           02600000
         DS    0H                                                       02610000
*         CDSNAME=EBCDICA7;             /* PREPARE FOR CDS LOAD.      * 02620000
         MVC   PARMLIST+1(7),EBCDICAD+1                           0146  02630000
*         LOADADDR=ADDR(CDSENTRY);      /* WHERE CDS LOADED     Y01008* 02640000
         LA    @F,CDSENTRY                                        0147  02650000
         ST    @F,PARMLIST+8                                      0147  02660000
*         PARMFLGS='60'X;               /* CDS LOAD, COMPUTE.   X02008* 02670000
         MVI   PARMLIST+12,X'60'                                  0148  02680000
*         CDSLNGTH='14'X;               /* SET TO 20 BYTES LNGTHY01008* 02690000
         LA    @F,X'14'                                           0149  02700000
         STH   @F,PARMLIST+14                                     0149  02710000
*                                                                       02720000
*         /* ISSUE CALL TO LOADER TO LOAD CDS FOR THIS DEVICE   Y01008* 02730000
*                                                                       02740000
*         GEN(IFDMOD CALL='12',LIST=PARMLIST);                          02750000
         IFDMOD CALL='12',LIST=PARMLIST                                 02760000
         DS    0H                                                       02770000
*                                                                       02780000
*         RESTRICT(R1);                                                 02790000
*                                                                       02800000
*                                                                       02810000
*         /*          CHECK ENTRY POINT ADDR, MAKE SURE CDS LOADED    * 02820000
*         IF RC¬='00'X THEN             /* IF CDS NOT LOADED    Y02008* 02830000
         LA    @0,X'00'                                           0152  02840000
         CR    @0,@F                                              0152  02850000
         BC    08,@9F3                                            0152  02860000
*          DO;                          /* NO CDS , OUTPUT MSG  X01906* 02870000
*           R3=ADMSG127;                /* ADDRESS MSG IFD127I  X01906* 02880000
         L     @3,12(0,@5)                                        0154  02890000
*           MSG127I(12:19)=CDSNAME;     /* PLACE CDS NAME IN BUFX01906* 02900000
         MVC   23(7,@3),PARMLIST+1                                0155  02910000
         MVI   30(@3),C' '                                        0155  02920000
*           GEN(PWTO REG=(3));          /* OUTPUT MESSAGE.      X01906* 02930000
         PWTO REG=(3)                                                   02940000
         DS    0H                                                       02950000
*           GO TO CUTEST8A;             /* DEV ASSUMMED SHARED  Y02008* 02960000
         BC    15,CUTEST8A                                        0157  02970000
*          END;                                                         02980000
*                                                                       02990000
*                                                                       03000000
*         /*          CDS LOADED, CHECK DEV SHARED STATUS             * 03010000
*                                                                       03020000
*         IF DEVSHARD='1'B THEN         /* IS DEVICE SHARED           * 03030000
@9F3     TM    9(@1),B'01000000'                                  0159  03040000
         BC    12,@9F2                                            0159  03050000
*                                                                       03060000
*         /*          OUTPUT SHARED DEVICE HEADER MESSAGE.            * 03070000
*                                                                       03080000
*          DO;                          /* YES,                       * 03090000
* CUTEST8A:                                                             03100000
*          IF SHRHEADR='0'B THEN        /* IF SHARE BIT IS ON IN      * 03110000
CUTEST8A TM    MODFLAGS,B'10000000'                               0161  03120000
         BC    05,@9F1                                            0161  03130000
*           DO;                                                         03140000
*            R3=ADSHRHDR;               /* ADDRESS MESSAGE FORMAT     * 03150000
         L     @3,4(0,@5)                                         0163  03160000
*            GEN(PWTO REG=(R3));        /* OUTPUT HEADER MESSAGE.     * 03170000
         PWTO REG=(R3)                                                  03180000
         DS    0H                                                       03190000
*            SHRHEADR='1'B;             /* SET FLAG, HDR OUTPUT       * 03200000
         OI    MODFLAGS,B'10000000'                               0165  03210000
*            R3=ADMSG244;               /* ADDRESS SHARED DEV MSG     * 03220000
         L     @3,0(0,@5)                                         0166  03230000
*            SHARDBUF=SHARDBUF&&SHARDBUF;                               03240000
         XC    12(60,@3),12(@3)                                   0167  03250000
*            SHARPTR=ADDR(SHARDBUF);    /* ADDR SHARD MSG BUFR.       * 03260000
         LA    @F,12(0,@3)                                        0168  03270000
         ST    @F,SHARPTR                                         0168  03280000
*           END;                        /* END HEADR OUTPUT CODE.     * 03290000
*                                                                       03300000
*                                                                       03310000
*           DO;                         /* FILL SHARD BUFFER          * 03320000
*            SHARDDEV=EBCDICA7(5:7);                                    03330000
@9F1     L     @C,SHARPTR                                         0171  03340000
         MVC   0(3,@C),EBCDICAD+5                                 0171  03350000
         MVI   3(@C),C' '                                         0171  03360000
*            SHARDDEV(4)=',';           /* PUT DELIMETER IN BUFR      * 03370000
         MVI   3(@C),C','                                         0172  03380000
*            SHARPTR=SHARPTR+4;         /* UPDATE BUFR PTR.           * 03390000
         LA    @F,4                                               0173  03400000
         A     @F,SHARPTR                                         0173  03410000
         ST    @F,SHARPTR                                         0173  03420000
*            BUFCOUNT=BUFCOUNT+4;       /* UPDATE BUFR CNTR.          * 03430000
         LA    @F,4                                               0174  03440000
         AH    @F,BUFCOUNT                                        0174  03450000
         STH   @F,BUFCOUNT                                        0174  03460000
*           END;                                                        03470000
*          END;                                                         03480000
*                                                                       03490000
*         NEWBASE=NEWBASE+'01'X;        /* NEXT DEV ON C U            * 03500000
@9F2     LA    @F,X'01'                                           0177  03510000
         A     @F,NEWBASE                                         0177  03520000
         ST    @F,NEWBASE                                         0177  03530000
*                                                                       03540000
*                                                                       03550000
*         /*          OUTPUT SHARED DEVICES IF BUFFR IS FULL OR AT END* 03560000
*         IF NEWBASE>CULAST |           /* LAST DEV LOOKED AT OR      * 03570000
*          BUFCOUNT>=BUFMAX THEN        /* BUFR IS FULL,OUTPUT  XM5092* 03580000
         L     @F,CULAST                                          0178  03590000
         C     @F,NEWBASE                                         0178  03600000
         BC    04,@9F0                                            0178  03610000
         LH    @F,BUFMAX                                          0178  03620000
         CH    @F,BUFCOUNT                                        0178  03630000
         BC    02,@9EF                                            0178  03640000
*                                                                       03650000
*         /*          OUTPUT SHARED DEVICES IN MESSAGE BUFFER.        * 03660000
*                                                                       03670000
*          DO;                                                          03680000
*          IF SHRHEADR='1'B THEN        /* SHARED DEVS IF THEY        * 03690000
@9F0     TM    MODFLAGS,B'10000000'                               0180  03700000
         BC    12,@9EE                                            0180  03710000
*           DO;                         /* EXIST                      * 03720000
*            R3=ADMSG244;               /* ADDRESS MESSAGE            * 03730000
         L     @3,0(0,@5)                                         0182  03740000
*            GEN(PWTO REG=(R3));        /* OUTPUT SHARED DEVICES.     * 03750000
         PWTO REG=(R3)                                                  03760000
         DS    0H                                                       03770000
*            BUFCOUNT=0;                /* REINIT BUFR COUNTR         * 03780000
         SR    @F,@F                                              0184  03790000
         STH   @F,BUFCOUNT                                        0184  03800000
*            SHARDBUF=SHARDBUF&&SHARDBUF;                               03810000
         XC    12(60,@3),12(@3)                                   0185  03820000
*            SHARPTR=ADDR(SHARDBUF);    /* ADDR SHARD MSG BUFR.       * 03830000
         LA    @F,12(0,@3)                                        0186  03840000
         ST    @F,SHARPTR                                         0186  03850000
*           END;                                                        03860000
*          END;                                                         03870000
@9EE     EQU   *                                                  0188  03880000
*                                                                       03890000
*                                                                       03900000
*         /*          ALL DEVICES ON CONTROL UNIT CHECKED?            * 03910000
*         IF NEWBASE<=CULAST THEN       /* AT END OF EXTENT? NO,      * 03920000
@9EF     L     @F,CULAST                                          0189  03930000
         C     @F,NEWBASE                                         0189  03940000
*          GO TO CUTEST08;              /* LOOK AT NEXT DEVICE.       * 03950000
         BC    10,CUTEST08                                        0190  03960000
*                                                                       03970000
*         IF CUTLEVL='03'X &           /* LEVEL 3 MACRO       @Y30LPAW* 03980000
*           NUMEXTS>'01'X              /* MULTIPLE EXTENTS    @Y30LPAW* 03990000
*           THEN                       /* SET UP FOR NEXT     @Y30LPAW* 04000000
         CLI   1(@7),X'03'                                        0191  04010000
         BC    07,@9ED                                            0191  04020000
         CLI   9(@7),X'01'                                        0191  04030000
         BC    12,@9EC                                            0191  04040000
*           DO;                        /* EXTENT ON CU        @Y30LPAW* 04050000
*                                                                       04060000
*         IF NUMEXTS>EXTLIMIT       /* ALL EXTENTS CHECKED    @Y30LPAW* 04070000
*           THEN                       /* NO,PROCESS NEXT EXT @Y30LPAW* 04080000
         CLC   9(1,@7),EXTLIMIT                                   0193  04090000
         BC    12,@9EB                                            0193  04100000
*           DO;                        /* SETUP BASE AND CNT  @Y30LPAW* 04110000
*                                                                       04120000
*              EXTLIMIT=EXTLIMIT+'01'X; /* UPDATE CNTR        @Y30LPAW* 04130000
         LA    @F,X'01'                                           0195  04140000
         SR    @0,@0                                              0195  04150000
         IC    @0,EXTLIMIT                                        0195  04160000
         AR    @F,@0                                              0195  04170000
         STC   @F,EXTLIMIT                                        0195  04180000
*              MYCUTEXT=MYCUTEXT+'05'X; /* LOOK AT NEXT EXT   @Y30LPAW* 04190000
         LA    @F,X'05'                                           0196  04200000
         A     @F,MYCUTEXT                                        0196  04210000
         ST    @F,MYCUTEXT                                        0196  04220000
*              GOTO CUTEST00;           /* RET TO MAIN FLOW   @Y30LPAW* 04230000
         BC    15,CUTEST00                                        0197  04240000
*              END;                                                     04250000
*                                                                       04260000
*           END;                                                        04270000
@9EB     EQU   *                                                  0199  04280000
*                                                                       04290000
*         /*          OUTPUT PWTOR IF SHARED DEVICES ARE ON C U       * 04300000
*         IF SHRHEADR='1'B THEN         /* SHARD DEVS PRESENT         * 04310000
@9EC     EQU   *                                                  0200  04320000
@9ED     TM    MODFLAGS,B'10000000'                               0200  04330000
         BC    12,@9EA                                            0200  04340000
*          DO;                          /* YES, ASK OPERATOR IF       * 04350000
*           R3=ADMSG243;                /* ITS OK TO CONTINUE.        * 04360000
         L     @3,16(0,@5)                                        0202  04370000
*           ECB=ECB&&ECB;               /* CLEAR ECB FOR REPLY.       * 04380000
         XC    ECB(4),ECB                                         0203  04390000
*           INBUFAD=ADDR(INBUFR);       /* LOCATE REPLY BUFFER.       * 04400000
         LA    @F,INBUFR                                          0204  04410000
         ST    @F,WTORLIST                                        0204  04420000
*            WTORLNGT='03'X;            /* REPLY LENGTH.              * 04430000
         MVI   WTORLIST,X'03'                                     0205  04440000
*         ECBPTR=ADDR(ECB);             /* ADDRESS ECB FOR REPLY      * 04450000
         LA    @F,ECB                                             0206  04460000
         ST    @F,WTORLIST+4                                      0206  04470000
*            WTORPRFX=WTORLIST;         /* PLACE WTOR INFO IN MSG     * 04480000
         MVC   0(8,@3),WTORLIST                                   0207  04490000
*            REPLY=REPLY&&REPLY;        /* CLEAR REPLY BUFFER    M5092* 04500000
         XC    REPLY(3),REPLY                                     0208  04510000
*                                                                       04520000
*                                                                       04530000
*            /*            OUTPUT MESSAGE                             * 04540000
*            GEN(PWTOR REG=(R3),WAIT=YES);                              04550000
         PWTOR REG=(R3),WAIT=YES                                        04560000
         DS    0H                                                       04570000
*                                                                       04580000
*                                                                       04590000
*            /*       CHECK REPLY FROM OPERATOR                       * 04600000
*            IF REPLY ='YES' THEN       /* DEVS SHARD ARE NOT DIS     * 04610000
         CLC   REPLY(3),@C18                                      0210  04620000
*             GO TO CUTEST07;           /* CONNECTED. RC=08.          * 04630000
         BC    08,CUTEST07                                        0211  04640000
*           END;                                                        04650000
*         RETCODE='00'X;                /* CU TEST REQMNTS MET        * 04660000
@9EA     LA    @F,X'00'                                           0213  04670000
*         IF CUCODE¬='02'X THEN     /* IF REQUEST IS NOT      @Y30LPAW* 04680000
         CLI   8(@7),X'02'                                        0214  04690000
*           GOTO CUTEST09;          /*   CODE 2, RETURN       @Y30LPAW* 04700000
         BC    07,CUTEST09                                        0215  04710000
* CUTEST8B:                    /*                             @Y30LPAW* 04720000
*         R3=ADMSG469;              /* POINT TO DSID MSG      @Y30LPAW* 04730000
CUTEST8B L     @3,28(0,@5)                                        0216  04740000
*         ECB=ECB&&ECB;             /* CLEAR ECB              @Y30LPAW* 04750000
         XC    ECB(4),ECB                                         0217  04760000
*         INBUFAD=ADDR(INBUFR);     /* SET UP                 @Y30LPAW* 04770000
         LA    @F,INBUFR                                          0218  04780000
         ST    @F,WTORLIST                                        0218  04790000
*         WTORLNGT='06'X;           /* PARM LIST              @Y30LPAW* 04800000
         MVI   WTORLIST,X'06'                                     0219  04810000
*         ECBPTR=ADDR(ECB);         /*    FOR REPLY           @Y30LPAW* 04820000
         LA    @F,ECB                                             0220  04830000
         ST    @F,WTORLIST+4                                      0220  04840000
*         WTORPRFX=WTORLIST;        /*                        @Y30LPAW* 04850000
         MVC   0(8,@3),WTORLIST                                   0221  04860000
*         REPLYID=REPLYID&&REPLYID;   /* CLEAR IT             @Y30LPAW* 04870000
         XC    REPLYID(6),REPLYID                                 0222  04880000
*         GEN(PWTOR REG=(R3),WAIT=YES);  /* ISSUE WTOR        @Y30LPAW* 04890000
         PWTOR REG=(R3),WAIT=YES                                        04900000
         DS    0H                                                       04910000
*         DSID=REPLYID;        /* SAVE REPLY                  @Y30LPAW* 04920000
         MVC   DSID(6),REPLYID                                    0224  04930000
*         IF DSID='CANCEL' THEN          /* REPLIED CANCEL?   @Y30LPAW* 04940000
         CLC   DSID(6),@C20                                       0225  04950000
         BC    07,@9E9                                            0225  04960000
*            DO;                    /* IF SO-DO THIS          @Y30LPAW* 04970000
*               RETCODE='08'X;           /* SET RETCODE 08    @Y30LPAW* 04980000
         LA    @F,X'08'                                           0227  04990000
*               GOTO CUTEST09;      /* AND GET OUT            @Y30LPAW* 05000000
         BC    15,CUTEST09                                        0228  05010000
*            END;                   /*                        @Y30LPAW* 05020000
*         DO ICALL=1 TO 3 BY 1;     /* LOOK FOR S8            @Y30LPAW* 05030000
@9E9     LA    @F,1                                               0230  05040000
         ST    @F,ICALL                                           0230  05050000
*            IF DSID(ICALL:ICALL+1)='S8' THEN  /* IN REPLY    @Y30LPAW* 05060000
@DO9E8   L     @C,ICALL                                           0231  05070000
         LA    @A,DSID-1(@C)                                      0231  05080000
         CLC   0(2,@A),@C21                                       0231  05090000
*            GO TO L1;              /*                        @Y30LPAW* 05100000
         BC    08,L1                                              0232  05110000
*         END;                      /*                        @Y30LPAW* 05120000
* L1:                               /*                        @Y30LPAW* 05130000
*         IF ICALL>3 THEN           /* IF NOT THERE,GO ISSUE  @Y30LPAW* 05140000
         L     @F,ICALL                                           0233  05150000
         AH    @F,@D2                                             0233  05160000
@DO9E7   ST    @F,ICALL                                           0233  05170000
         CH    @F,@D3                                             0233  05180000
         BC    12,@DO9E8                                          0233  05190000
L1       LA    @F,3                                               0234  05200000
         C     @F,ICALL                                           0234  05210000
*            GOTO CUTEST8B;         /* AGAIN                  @Y30LPAW* 05220000
         BC    04,CUTEST8B                                        0235  05230000
*         IDNUM(1:2)=DSID(ICALL+2:ICALL+3);  /* SAVE THE ID   @Y30LPAW* 05240000
         LR    @C,@F                                              0236  05250000
         A     @C,ICALL                                           0236  05260000
         LA    @8,2                                               0236  05270000
         A     @8,ICALL                                           0236  05280000
         SR    @C,@8                                              0236  05290000
         LA    @E,DSID-1(@8)                                      0236  05300000
         LA    @A,IDNUM                                           0236  05310000
         MVI   0(@A),C' '                                         0236  05320000
         MVC   1(001,@A),0(@A)                                    0236  05330000
         EX    @C,@MVC                                            0236  05340000
*         FROMADDR=ADDR(IDNUM);     /* IF IT IS,              @Y30LPAW* 05350000
         LA    @F,IDNUM                                           0237  05360000
         ST    @F,CONVERT+4                                       0237  05370000
*         TOADDR=ADDR(DSIDHEX2);    /*  SET UP TO CONVERT     @Y30LPAW* 05380000
         LA    @F,DSIDHEX+1                                       0238  05390000
         ST    @F,CONVERT+8                                       0238  05400000
*         FLGCNT='0002'X;           /*  THE ID FROM           @Y30LPAW* 05410000
         MVC   CONVERT+12(2),@X22                                 0239  05420000
*         R1=ADDR(CONVERT);         /* EBCDIC TO HEX          @Y30LPAW* 05430000
         LA    @1,CONVERT                                         0240  05440000
*         R15=TAB28;                /* GET CONVERT ADDR       @Y30LPAW* 05450000
         L     @F,TAB28                                           0241  05460000
*         GEN(BALR  R14,R15);       /*  AND GO THERE          @Y30LPAW* 05470000
         BALR  R14,R15                                                  05480000
         DS    0H                                                       05490000
*         IF R15¬='00'X THEN        /*   IF CONVERT FAILS,    @Y30LPAW* 05500000
         LA    @0,X'00'                                           0243  05510000
         CR    @0,@F                                              0243  05520000
*            GO TO CUTEST8B;        /*   REISSUE MESSSAGE     @Y30LPAW* 05530000
         BC    07,CUTEST8B                                        0244  05540000
*         HEXDSID=DSIDHEX;          /* PUT DSID INTO SVC      @Y30LPAW* 05550000
         MVC   SVC59LST+4(2),DSIDHEX                              0245  05560000
*         EBCDSID=IDNUM;            /*   PARMLIST             @Y30LPAW* 05570000
         MVC   SVC59LST+6(2),IDNUM                                0246  05580000
*         MODID='AJ';                    /* MOVE IN ID        @Y60LPAW* 05590000
         MVC   SVC59LST+2(2),@C10                                 0247  05600000
*         R0=ADDR(ROPT);            /* SVC PARM LIST ADDR     @Y30LPAW* 05610000
         LA    @0,ROPT                                            0248  05620000
*         R1='0C'X;                 /* SVC CALL CODE          @Y30LPAW* 05630000
         LA    @1,X'0C'                                           0249  05640000
*         /*  ISSUE SVC 59 TO VARY OFF DSID                   @Y30LPAW* 05650000
*         GEN(SVC 59);              /*                        @Y30LPAW* 05660000
         SVC 59                                                         05670000
         DS    0H                                                       05680000
*         /*  TEST RETURN FROM SVC 59                         @Y30LPAW* 05690000
*         /*  R15='00'X MEANS OK                              @Y30LPAW* 05700000
*         /*  R15='04'X MEANS ONE DSID ALREADY VARIED OFF     @Y30LPAW* 05710000
*         /* OTHERWISE R15 HAS VARY ERROR CODE                @Y30LPAW* 05720000
*          IF R15=0 |            /*IF NO ERROR                @Y03LPMY* 05730000
*             R15='78'X THEN     /*OR ALREADY OFF THEN        @Y03LPMY* 05740000
         LTR   @F,@F                                              0251  05750000
         BC    08,@9E4                                            0251  05760000
         LA    @0,X'78'                                           0251  05770000
         CR    @0,@F                                              0251  05780000
         BC    07,@9E3                                            0251  05790000
*            GOTO CUTEST09;         /* IF 0 GO AROUND         @Y30LPAW* 05800000
         BC    08,CUTEST09                                        0252  05810000
*         IF R15='04'X THEN         /* IS RETURN 04           @Y30LPAW* 05820000
@9E3     LA    @0,X'04'                                           0253  05830000
         CR    @0,@F                                              0253  05840000
         BC    07,@9E2                                            0253  05850000
*            DO;                    /* IF 04 DO THIS          @Y30LPAW* 05860000
*               R3=ADMSG472;        /* POINT TO MSG472I       @Y30LPAW* 05870000
         L     @3,36(0,@5)                                        0255  05880000
*               GEN(PWTO REG=(R3));   /* GO WRITE IT          @Y30LPAW* 05890000
         PWTO REG=(R3)                                                  05900000
         DS    0H                                                       05910000
*               RETCODE='08'X;      /*  SET RETURN CODE 08    @Y30LPAW* 05920000
         LA    @F,X'08'                                           0257  05930000
*               GOTO CUTEST09;      /* AND RETURN             @Y30LPAW* 05940000
         BC    15,CUTEST09                                        0258  05950000
*            END;                   /*                        @Y30LPAW* 05960000
*         /*     R15=VARY ERROR CODE--PUT IT IN MSG           @Y30LPAW* 05970000
*         /*         IFD470I AND PRINT IT                     @Y30LPAW* 05980000
*         SVCRCODE=R15;             /* SAVE RETURN CODE       @Y30LPAW* 05990000
@9E2     ST    @F,SVCRCODE                                        0260  06000000
*         FROMADDR=ADDR(VARYCODE);  /* SET UP TO              @Y30LPAW* 06010000
         LA    @F,SVCRCODE+2                                      0261  06020000
         ST    @F,CONVERT+4                                       0261  06030000
*         TOADDR=ADDR(EBCCODE);          /* CONVERT CODE TO   @Y30LPAW* 06040000
         LA    @F,EBCCODE                                         0262  06050000
         ST    @F,CONVERT+8                                       0262  06060000
*         FLGCNT='8002'X;           /*  EBCDIC                @Y30LPAW* 06070000
         MVC   CONVERT+12(2),@X24                                 0263  06080000
*         R1=ADDR(CONVERT);         /* POINT TO PARMLIST      @Y30LPAW* 06090000
         LA    @1,CONVERT                                         0264  06100000
*         R15=TAB28;                /* POINT TO CONVERT       @Y30LPAW* 06110000
         L     @F,TAB28                                           0265  06120000
*         GEN(BALR  R14,R15);       /* AND GO CONVERT         @Y30LPAW* 06130000
         BALR  R14,R15                                                  06140000
         DS    0H                                                       06150000
*         ERRCODE=EBCCODE3;              /* PUT IT IN MSG     @Y30LPAW* 06160000
         L     @C,32(0,@5)                                        0267  06170000
         MVC   31(3,@C),EBCCODE+1                                 0267  06180000
*         R3=ADMSG470;              /* POINT TO MSG 470I      @Y30LPAW* 06190000
         L     @3,32(0,@5)                                        0268  06200000
*         GEN(PWTO REG=(R3));       /*  AND GO WRITE IT       @Y30LPAW* 06210000
         PWTO REG=(R3)                                                  06220000
         DS    0H                                                       06230000
*         RETCODE='08'X;            /* SET RERURN CODE 08     @Y30LPAW* 06240000
         LA    @F,X'08'                                           0270  06250000
*                                   /*  AND RETURN            @Y30LPAW* 06260000
*                                                                       06270000
*                                                                       06280000
* CUTEST09:                                                             06290000
*         DPMSGREI='0'B;                /* TURN OFF REM MSG FLGOY00427* 06300000
CUTEST09 NI    A00021,B'11111110'                                 0271  06310000
*                                                                       06320000
*         RETURN;                       /* RETURN TO OLT              * 06330000
*         END;                          /* END CU TEST MODULE         * 06340000
@EL01    L     @D,4(0,@D)                                         0273  06350000
         L     @E,12(0,@D)                                        0273  06360000
         LM    @0,@C,20(@D)                                       0273  06370000
         BCR   15,@E                                              0273  06380000
@DATA1   EQU   *                                                        06390000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           06400000
@1       EQU   01                                                       06410000
@2       EQU   02                                                       06420000
@3       EQU   03                                                       06430000
@4       EQU   04                                                       06440000
@5       EQU   05                                                       06450000
@6       EQU   06                                                       06460000
@7       EQU   07                                                       06470000
@8       EQU   08                                                       06480000
@9       EQU   09                                                       06490000
@A       EQU   10                                                       06500000
@B       EQU   11                                                       06510000
@C       EQU   12                                                       06520000
@D       EQU   13                                                       06530000
@E       EQU   14                                                       06540000
@F       EQU   15                                                       06550000
@D1      DC    H'-1'                                                    06560000
@D2      DC    H'1'                                                     06570000
@D3      DC    H'3'                                                     06580000
@MVC     MVC   0(1,@A),0(@E)                                            06590000
@V1      DC    V(IFDMSGAJ)                                              06600000
         DS    0F                                                       06610000
@X8      DC    X'0000FFFF'                                              06620000
@X9      DC    X'00000000'                                              06630000
@C10     DC    C'AJ'                                                    06640000
@X13     DC    X'8004'                                                  06650000
@C20     DC    C'CANCEL'                                                06660000
@C21     DC    C'S8'                                                    06670000
@X22     DC    X'0002'                                                  06680000
@X24     DC    X'8002'                                                  06690000
@C18     DC    C'YES'                                                   06700000
         DS    0D                                                       06710000
@DATA    EQU   *                                                        06720000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   06730000
R0       EQU   00000000            FULLWORD POINTER REGISTER            06740000
R1       EQU   00000001            FULLWORD POINTER REGISTER            06750000
R2       EQU   00000002            FULLWORD POINTER REGISTER            06760000
R3       EQU   00000003            FULLWORD POINTER REGISTER            06770000
R4       EQU   00000004            FULLWORD POINTER REGISTER            06780000
R5       EQU   00000005            FULLWORD POINTER REGISTER            06790000
DEVTABPT EQU   00000006            FULLWORD POINTER REGISTER            06800000
R7       EQU   00000007            FULLWORD POINTER REGISTER            06810000
R14      EQU   00000014            FULLWORD POINTER REGISTER            06820000
R15      EQU   00000015            FULLWORD POINTER REGISTER            06830000
RC       EQU   00000015            FULLWORD POINTER REGISTER            06840000
RETCODE  EQU   00000015            FULLWORD POINTER REGISTER            06850000
DEVTABLE EQU   00000000            36 BYTE(S) ON WORD                   06860000
A00000   EQU   DEVTABLE+00000000   12 BYTE(S)                           06870000
FLAG1    EQU   DEVTABLE+00000012   1 BYTE(S)                            06880000
A00001   EQU   DEVTABLE+00000012   1 BIT(S)                             06890000
PRIMDEV  EQU   DEVTABLE+00000012   1 BIT(S)                             06900000
A00002   EQU   DEVTABLE+00000012   3 BIT(S)                             06910000
GRABDEV  EQU   DEVTABLE+00000012   1 BIT(S)                             06920000
A00003   EQU   DEVTABLE+00000013   19 BYTE(S)                           06930000
DVHEXAD  EQU   DEVTABLE+00000032   FULLWORD INTEGER                     06940000
A00006   EQU   00000000            16 BYTE(S) ON WORD                   06950000
A00007   EQU   A00006+00000000     1 BYTE(S)                            06960000
CUTLEVL  EQU   A00006+00000001     1 BYTE(S)                            06970000
A00008   EQU   A00006+00000002     2 BYTE(S)                            06980000
CUTEXT   EQU   A00006+00000004     FULLWORD POINTER                     06990000
CUCODE   EQU   A00006+00000008     1 BYTE(S)                            07000000
NUMEXTS  EQU   A00006+00000009     1 BYTE(S)                            07010000
A00009   EQU   A00006+00000010     2 BYTE(S)                            07020000
CUDSMS   EQU   A00006+00000012     FULLWORD POINTER                     07030000
SVCRCODE EQU   @DATA+00000072      4 BYTE(S)                            07040000
A00014   EQU   SVCRCODE+00000000   2 BYTE(S)                            07050000
VARYCODE EQU   SVCRCODE+00000002   2 BYTE(S)                            07060000
CONVERT  EQU   @DATA+00000076      14 BYTE(S) ON WORD                   07070000
         ORG   CONVERT+00000000                                         07080000
A00015   EQU   *                   2 BYTE(S)                            07090000
         DC    X'0002'                                                  07100000
A00016   EQU   *                   2 BYTE(S)                            07110000
         DC    C'41'                                                    07120000
FROMADDR EQU   CONVERT+00000004    FULLWORD POINTER                     07130000
TOADDR   EQU   CONVERT+00000008    FULLWORD POINTER                     07140000
FLGCNT   EQU   CONVERT+00000012    2 BYTE(S)                            07150000
MYCUTEXT EQU   @DATA+00000092      FULLWORD POINTER                     07160000
A00017   EQU   00000000            5 BYTE(S) ON WORD                    07170000
CUBASE   EQU   A00017+00000000     FULLWORD INTEGER                     07180000
CUFINISH EQU   A00017+00000004     1 BYTE(S)                            07190000
CDSENTRY EQU   @DATA+00000096      20 BYTE(S) ON WORD                   07200000
PARMLIST EQU   @DATA+00000116      16 BYTE(S) ON WORD                   07210000
         ORG   PARMLIST+00000000                                        07220000
CDS1     EQU   *                   1 BYTE(S)                            07230000
         DC    C'G'                                                     07240000
CDSNAME  EQU   PARMLIST+00000001   7 BYTE(S)                            07250000
LOADADDR EQU   PARMLIST+00000008   FULLWORD POINTER                     07260000
PARMFLGS EQU   PARMLIST+00000012   1 BYTE(S)                            07270000
A00018   EQU   PARMLIST+00000013   1 BYTE(S)                            07280000
CDSLNGTH EQU   PARMLIST+00000014   HALFWORD INTEGER                     07290000
DEVCDS   EQU   00000000            20 BYTE(S)                           07300000
CDSDEVAD EQU   DEVCDS+00000000     4 BYTE(S)                            07310000
CDSDVDSC EQU   DEVCDS+00000004     4 BYTE(S)                            07320000
CDSSIZE  EQU   DEVCDS+00000008     1 BYTE(S)                            07330000
CDSFLAGS EQU   DEVCDS+00000009     1 BYTE(S)                            07340000
A00019   EQU   DEVCDS+00000009     1 BIT(S)                             07350000
DEVSHARD EQU   DEVCDS+00000009     1 BIT(S)                             07360000
MSGAJPTR EQU   00000000            40 BYTE(S) ON WORD                   07370000
ADMSG244 EQU   MSGAJPTR+00000000   FULLWORD POINTER                     07380000
ADSHRHDR EQU   MSGAJPTR+00000004   FULLWORD POINTER                     07390000
ADONLHDR EQU   MSGAJPTR+00000008   FULLWORD POINTER                     07400000
ADMSG127 EQU   MSGAJPTR+00000012   FULLWORD POINTER                     07410000
ADMSG243 EQU   MSGAJPTR+00000016   FULLWORD POINTER                     07420000
ADMSG399 EQU   MSGAJPTR+00000020   FULLWORD POINTER                     07430000
ADVARYMS EQU   MSGAJPTR+00000024   FULLWORD POINTER                     07440000
ADMSG469 EQU   MSGAJPTR+00000028   FULLWORD POINTER                     07450000
ADMSG470 EQU   MSGAJPTR+00000032   FULLWORD POINTER                     07460000
ADMSG472 EQU   MSGAJPTR+00000036   FULLWORD POINTER                     07470000
MSG244   EQU   00000000            72 BYTE(S) ON WORD                   07480000
A00023   EQU   MSG244+00000000     12 BYTE(S)                           07490000
SHARDBUF EQU   MSG244+00000012     60 BYTE(S)                           07500000
MSG127   EQU   00000000            31 BYTE(S) ON WORD                   07510000
A00024   EQU   MSG127+00000000     12 BYTE(S)                           07520000
MSG127I  EQU   MSG127+00000012     19 BYTE(S)                           07530000
MSG243   EQU   00000000            72 BYTE(S) ON WORD                   07540000
WTORPRFX EQU   MSG243+00000000     8 BYTE(S)                            07550000
A00025   EQU   MSG243+00000008     12 BYTE(S)                           07560000
A00026   EQU   MSG243+00000020     52 BYTE(S)                           07570000
MSG140   EQU   00000000            44 BYTE(S)                           07580000
MSG140I  EQU   MSG140+00000000     44 BYTE(S)                           07590000
A00027   EQU   MSG140+00000000     12 BYTE(S)                           07600000
VARYDEV  EQU   MSG140+00000012     8 BYTE(S)                            07610000
A00028   EQU   MSG140+00000020     24 BYTE(S)                           07620000
MSG470   EQU   00000000            34 BYTE(S) ON WORD                   07630000
A00029   EQU   MSG470+00000000     31 BYTE(S)                           07640000
ERRCODE  EQU   MSG470+00000031     3 BYTE(S)                            07650000
WTORLIST EQU   @DATA+00000132      8 BYTE(S) ON WORD                    07660000
INBUFAD  EQU   WTORLIST+00000000   FULLWORD POINTER                     07670000
WTORLNGT EQU   WTORLIST+00000000   1 BYTE(S)                            07680000
ECBPTR   EQU   WTORLIST+00000004   FULLWORD POINTER                     07690000
MSG399   EQU   00000020            FULLWORD POINTER                     07700000
MODFLAGS EQU   @DATA+00000140      1 BYTE(S)                            07710000
SHRHEADR EQU   MODFLAGS+00000000   1 BIT(S)                             07720000
ONLHEADR EQU   MODFLAGS+00000000   1 BIT(S)                             07730000
SHARPTR  EQU   @DATA+00000144      FULLWORD POINTER                     07740000
SHARDDEV EQU   00000000            4 BYTE(S)                            07750000
BUFCOUNT EQU   @DATA+00000148      HALFWORD INTEGER                     07760000
         ORG   @DATA+00000150                                           07770000
BUFMAX   EQU   *                   HALFWORD INTEGER                     07780000
         DC    FL2'60'                                                  07790000
NEWBASE  EQU   @DATA+00000152      FULLWORD INTEGER                     07800000
CULAST   EQU   @DATA+00000156      FULLWORD INTEGER                     07810000
ENDOFTAB EQU   @DATA+00000160      FULLWORD INTEGER                     07820000
HEXADDR  EQU   @DATA+00000164      4 BYTE(S)                            07830000
EXTLIMIT EQU   @DATA+00000168      1 BYTE(S)                            07840000
ECB      EQU   @DATA+00000172      4 BYTE(S) ON WORD                    07850000
EBCDICAD EQU   @DATA+00000176      8 BYTE(S)                            07860000
A00032   EQU   EBCDICAD+00000000   1 BYTE(S)                            07870000
EBCDICA7 EQU   EBCDICAD+00000001   7 BYTE(S)                            07880000
DSID     EQU   @DATA+00000184      6 BYTE(S)                            07890000
IDNUM    EQU   @DATA+00000190      2 BYTE(S)                            07900000
DSIDHEX  EQU   @DATA+00000192      2 BYTE(S)                            07910000
         ORG   DSIDHEX+00000000                                         07920000
DSIDHEX1 EQU   *                   1 BYTE(S)                            07930000
         DC    X'08'                                                    07940000
DSIDHEX2 EQU   DSIDHEX+00000001    1 BYTE(S)                            07950000
EBCCODE  EQU   @DATA+00000194      4 BYTE(S)                            07960000
A00033   EQU   EBCCODE+00000000    1 BYTE(S)                            07970000
EBCCODE3 EQU   EBCCODE+00000001    3 BYTE(S)                            07980000
ICALL    EQU   @DATA+00000200      FULLWORD INTEGER                     07990000
         ORG   @DATA                                                    08000000
         DS    00000204C                                                08010000
@TEMPS   DS    0F                                                       08020000
AJCOM    IFDCOM                                                         08030000
OLTEPSW3 EQU   CESWT3+00000000     1 BYTE(S)                            08040000
A00004   EQU   OLTEPSW3+00000000   4 BIT(S)                             08050000
SUSDEL   EQU   OLTEPSW3+00000000   1 BIT(S)                             08060000
OLTEPSW7 EQU   CESWT7+00000000     1 BYTE(S) ON WORD                    08070000
A00005   EQU   OLTEPSW7+00000000   7 BIT(S)                             08080000
CUTSTFLG EQU   OLTEPSW7+00000000   1 BIT(S)                             08090000
REPLY    EQU   INBUFR+00000000     3 BYTE(S)                            08100000
REPLYID  EQU   INBUFR+00000000     6 BYTE(S)                            08110000
A00010   EQU   ROPT-00000004       16 BYTE(S) ON WORD                   08120000
A00011   EQU   A00010+00000000     2 BYTE(S)                            08130000
MODNUM   EQU   A00010+00000002     2 BYTE(S)                            08140000
CUBASEAD EQU   A00010+00000004     FULLWORD INTEGER                     08150000
CURANGE  EQU   A00010+00000008     HALFWORD INTEGER                     08160000
CUTCODE  EQU   A00010+00000010     HALFWORD INTEGER                     08170000
A00012   EQU   A00010+00000010     1 BYTE(S)                            08180000
CDE      EQU   A00010+00000011     1 BYTE(S)                            08190000
MSGMODAJ EQU   A00010+00000012     FULLWORD POINTER                     08200000
SVC59LST EQU   ROPT-00000004       8 BYTE(S) ON WORD                    08210000
A00013   EQU   SVC59LST+00000000   2 BYTE(S)                            08220000
MODID    EQU   SVC59LST+00000002   2 BYTE(S)                            08230000
HEXDSID  EQU   SVC59LST+00000004   2 BYTE(S)                            08240000
EBCDSID  EQU   SVC59LST+00000006   2 BYTE(S)                            08250000
A00020   EQU   CESWTR+00000000     1 BYTE(S) ON WORD                    08260000
RETAINAC EQU   A00020+00000000     1 BIT(S)                             08270000
A00021   EQU   CESWTR2+00000000    1 BYTE(S) ON WORD                    08280000
A00022   EQU   A00021+00000000     7 BIT(S)                             08290000
DPMSGREI EQU   A00021+00000000     1 BIT(S)                             08300000
A00030   EQU   TABLNGTH+00000002   1 BYTE(S)                            08310000
CDSEQU   EQU   A00030+00000000     1 BIT(S)                             08320000
RESENTB  EQU   A00030+00000000     1 BIT(S)                             08330000
A00031   EQU   A00030+00000000     1 BIT(S)                             08340000
@DATEND  EQU   *                                                        08350000
@9FC     EQU   CUTEST2A                                                 08360000
@9F9     EQU   CUTEST08                                                 08370000
@9E4     EQU   CUTEST09                                                 08380000
         END    ,(C'PL/S',1400,74344)                                   08390000
./  ADD  SSI=32570884,NAME=IFDOLT0A
IFDOLT0A CSECT                                                          01000002
R1       EQU   1                       PARMLIST POINTER          Y02008 02000002
CVTREG   EQU   3                       CVT POINTER               Y02008 03000002
DIEPTR   EQU   4                       DIE POINTER       -       Y02008 04000002
R11      EQU   11                      BASE REGISTER             Y02008 05000002
R12      EQU   12                      REG 12                    Y02008 06000002
R13      EQU   13                      SAVE AREA POINTER         Y02008 07000002
R14      EQU   14                      RETURN ADDRESS POINTER    Y02008 08000002
R15      EQU   15                      REG 15                    Y02008 09000002
D0       EQU   0                       DISPLACEMENT 0            Y02008 10000002
D8       EQU   8                       DISPLACEMENT 8            Y02008 11000002
D12      EQU   12                      DISPLACEMENT 12           Y02008 12000002
D28      EQU   28                      DISPLACEMENT 28           Y02008 13000002
D38      EQU   38                      DISPLACEMENT 38           Y02008 14000002
FIVENINE EQU   59                      OLTEPS SVC CALL           Y02008 15000002
L2       EQU   2                       LENGTH 2                  Y02008 16000002
HEX10    EQU   X'10'                   HEX LOCATION 10           Y02008 17000002
CLEANUP  EQU   20                      CLEAN UP ACLL CODE        Y02008 18000002
         SAVE  (14,12),,IFDOLT0A&SYSDATE                         Y02008 19000002
         BALR  R11,0                   ESTABLISH ADDRESSABILITY  Y02008 20000002
         USING *,R11                                             Y02008 21000002
         ST    R13,SAVEAREA+4          SAVE CALLERS SAVE AREA PTRY02008 22000002
*                                      IN MY SAVE AREA           Y02008 23000002
         LA    R15,SAVEAREA            GET ADDR OF MY SAVE AREA  Y02008 24000002
         ST    R15,D8(R13)             SAVE ADDR OF MY SAVE AREA Y02008 25000002
*                                      IN CALLERS SAVE AREA      Y02008 26000002
         LR    R13,R15                 PLACE MY SAVE AREA ADDR   Y02008 27000002
*                                      IN REG 13                 Y02008 28000002
         L     R1,D0(R1)               GET POINTER TO PARM LIST  Y02008 29000002
         USING RMPL,R1                 PARMLIST ADDRESSABILITY   Y02008 30000002
*********************************************************************** 31000002
*                         IS THIS OLTEPS MEMORY                       * 32000002
*********************************************************************** 33000002
         USING CVTMAP,CVTREG           CVT ADDRESSABILITY        Y02008 34000002
         L     CVTREG,HEX10            GET CVT ADDRESS           Y02008 35000002
         L     CVTREG,CVTEXT2          GET CVT EXTENSION ADDRESS Y02008 36000002
         L     DIEPTR,D28(CVTREG)      GET DIE PTR FROM CVT OLTEP WORD  37000002
         LTR   DIEPTR,DIEPTR           IS DIE THERE              Y02008 38000002
         BZ    EXIT                    NO - CLEAN UP HAS BEEN    Y02008 39000002
*                                      DONE OR IT IS IMPOSSIBLE  Y02008 40000002
*                                      TO DO IT OR IT IS NOT     Y02008 41000002
*                                      OLTEPS MEMORY             Y02008 42000002
         CLC   D38(L2,DIEPTR),RMPLASID IS THIS OLTEPS MEMORY     Y02008 43000002
         BNE   EXIT                    NO, EXIT                  Y02008 44000002
         SPACE 4                                                        45000002
*********************************************************************** 46000002
*            THIS IS OLTEPS MEMORY - PERFORM TOTAL CLEANUP            * 47000002
*********************************************************************** 48000002
         LA    R1,CLEANUP              CLEAN UP CALL CODE        Y02008 49000002
         SVC   FIVENINE                GO CLEAN UP               Y02008 50000002
EXIT     EQU   *                       EXIT ROUTINE              Y02008 51000002
         L     R13,SAVEAREA+4          RESTORE CALLERS REGISTERS Y02008 52000002
         LM    R14,R12,D12(R13)                                  Y02008 53000002
         BR    R14                     RETURN TO CALLER          Y02008 54000002
SAVEAREA DC    18F'0'                  SAVE AREA                 Y02008 55000002
RMPLMAP  IHARMPL                       PARMLIST DSECT            Y02008 56000002
         CVT   SYS=AOS2,DSECT=YES,LIST=YES                       Y02008 57000002
         END                                                            58000002
./  ADD  SSI=71170048,NAME=IFDOLT00
         TITLE ' INITIALIZE IFDOLT.  IFDOLT00'                          00010000
         TITLE ' INITIALIZE IFDOLT.  IFDOLT00'                          00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT00 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT00 27 APR 77'                             0002  00070000
         STM   @E,@C,12(@D)                                       0002  00080000
         BALR  @B,0                                               0002  00090000
@PSTART  DS    0H                                                 0002  00100000
         USING @PSTART+00000,@B                                   0002  00110000
         ST    @D,@SAV001+4                                       0002  00120000
         LA    @F,@SAV001                                         0002  00130000
         ST    @F,8(0,@D)                                         0002  00140000
         LR    @D,@F                                              0002  00150000
*  GEN(USING TCBRBP,R6);                 /* TCB BLOCK           X02008* 00160000
         USING TCBRBP,R6                                                00170000
         DS    0H                                                       00180000
*  GEN(USING CHASCT,2);                  /* COMMON AREA BASE REGISTER * 00190000
         USING CHASCT,2                                                 00200000
         DS    0H                                                       00210000
* GENERATE DATA;                                                        00220000
*  /************************************************************Y02008* 00230000
*  /*                   REGISTER DECLARES                       Y02008* 00240000
*  /************************************************************Y02008* 00250000
*  DCL R0 REG(0) PTR;                    /* REGISTER 0          Y02008* 00260000
*  DCL R1 REG(1) PTR;                    /* REGISTER 1          Y02008* 00270000
*  DCL R2 REG(2) PTR;                    /* COMMON AREA PTR     Y02008* 00280000
*  DCL R3 REG(3) PTR;                    /* REGISTER 3          Y02008* 00290000
*  DCL R4 REG(4) PTR;                    /* REGISTER 4          Y02008* 00300000
*  DCL R5 REG(5) PTR;                    /* CVT POINTER         Y02008* 00310000
*  DCL R6 REG(6) PTR;                    /* REGISTER 6          Y02008* 00320000
*  DCL R7 REG(7) PTR;                    /* REGISTER 7          Y02008* 00330000
*  DCL R8 REG(8) PTR;                    /* REGISTER 8          Y02008* 00340000
*  DCL R9 REG(9) PTR;                    /* REGISTER 9          Y02008* 00350000
*  DCL R10 REG(10) PTR;                  /* REGISTER 10         Y02008* 00360000
*  DCL R11 REG(11) PTR;                  /* REGISTER 11         Y02008* 00370000
*  DCL R12 REG(12) PTR;                  /* REGISTER 12         Y02008* 00380000
*  DCL R13 REG(13) PTR;                  /* SAVE AREA POINTER   Y02008* 00390000
*  DCL R14 REG(14) PTR;                  /* REGISTER 14         Y02008* 00400000
*  DCL R15 REG(15) PTR;                  /* REGISTER 15         Y02008* 00410000
*  /************************************************************Y02008* 00420000
*  /*                  COMMON AREA DECLARES                     Y02008* 00430000
*  /************************************************************Y02008* 00440000
*  DCL CHASCT CHAR(37) GENERATED;        /* SEC CONT TABLE    @ZA15468* 00450000
*  DCL PRTBUFR CHAR(124) GENERATED;      /* PRINT BUFFER        Y02008* 00460000
*  DCL EXPAND1 FIXED(31) GENERATED;      /* PARTITION SIZE      Y02008* 00470000
*  DCL ENDJOB PTR(31) GENERATED;         /* POINTER TO IFDOLT00 Y02008* 00480000
*                                        /* SAVE AREA           Y02008* 00490000
*  DCL TSTDEBAD PTR(31) GENERATED;       /* TEST DEB ADDRESS    Y02008* 00500000
*  DCL CESWT3 CHAR(1) GENERATED;         /* OLTEP SWITCH 3      Y02008* 00510000
*   DCL 1 * CHAR(1) BASED(ADDR(CESWT3)), /* OLTEP SWITCH 3      Y02008* 00520000
*        3 * BIT(1),                     /* NA                  Y02008* 00530000
*        3 NURUN BIT(1),                 /* NEW RUN             Y02008* 00540000
*          5 * BIT(1);                   /* NA                  Y02008* 00550000
*  DCL MCT CHAR(100) GENERATED;          /* MODULE CONTROL TABLEY02008* 00560000
*  DCL ROPT CHAR(12) GENERATED;          /* SVC PARAMETER LIST  Y02008* 00570000
*  DCL 1 * BDY(WORD) BASED(ADDR(ROPT)),  /* SVC PARAMETER LIST  Y02008* 00580000
*        3 ROPTPTR1 PTR(31),             /* 1ST WORD            Y02008* 00590000
*        3 ROPTPTR2 PTR(31),             /* 2ND WORD          @ZA15468* 00600000
*        3 ROPTPTR3 PTR(31);             /* 3RD WORD          @ZA15468* 00610000
*  DCL WKSVC CHAR(16) GENERATED;         /* SVC WORK AREA       Y02008* 00620000
*  DCL VID CHAR(2) BASED(ADDR(WKSVC)+2); /* MODULE ID FOR SVC   Y02008* 00630000
*  DCL MID1 CHAR(2) BASED(ADDR(MCT)+10); /* MODULE ID FOR 00    Y02008* 00640000
*  DCL CESWT7 CHAR(1) GENERATED;         /* OLTEP SWITCH 7      Y02008* 00650000
*  DCL 1 * CHAR(1) BASED(ADDR(CESWT7)),  /* OLTEP SWITCH 7      Y02008* 00660000
*        3 * BIT(2),                     /* NA                  Y02008* 00670000
*        3 REMOTE BIT(1),                /* REMOTE TERM FLAG    Y02008* 00680000
*        3 * BIT(3),                     /* NA                  Y02008* 00690000
*        3 VIRTSPC BIT(1),               /* VIRTUAL OR REAL MEM.Y02008* 00700000
*        3 * BIT(1);                     /* NA                  Y02008* 00710000
*  DCL CESWT10 CHAR(1) GENERATED;        /* INTERNAL FLAGS      Y02008* 00720000
*  DCL 1 * CHAR(1) BASED(ADDR(CESWT10)), /* INTERNAL FLAGS      Y02008* 00730000
*        3 MPSYS BIT(1);                 /* 1-MP   0-NOT MP     Y02008* 00740000
*  DCL MSGMOD PTR GENERATED;             /* PTR TO ROOT MSG MOD.Y02008* 00750000
*  DCL 1 * BASED(MSGMOD),                /* MESSAGE MODULE      Y02008* 00760000
*        3 * PTR(31),                    /* NOT REFERENCED PTR  Y02008* 00770000
*        3 IFD102 PTR(31),               /* PTR TO MSG IFD102I  Y02008* 00780000
*        3 * CHAR(28),                   /* NOT REFERENCED PTRS Y02008* 00790000
*        3 IFD134 PTR(31),               /* PTR TO MSG IED134I  Y02008* 00800000
*        3 * CHAR(88),                   /* NOT REFERENCED PTRS Y02008* 00810000
*        3 IFD899 PTR(31);               /* PTR TO MSG IFD899I  Y02008* 00820000
*  DCL 1 MSG102 BDY(WORD) BASED(R1),     /* MSG IFD102I         Y02008* 00830000
*        3 * CHAR(25),                   /* 1ST 25 BYTES OF MSG Y02008* 00840000
*        3 MPMSG CHAR(20);               /* MP TEXT OF MSG      Y02008* 00850000
*  DCL 1 * BASED(R1),                   /* MSG IFD899I FORMAT   Y02906* 00860000
*        3 * CHAR(65),                  /* 1ST 65 CHAR          Y02906* 00870000
*        3 MSG899ID CHAR(2);            /* MSG ERROR CODE       Y02906* 00880000
*  DCL PARTITEM CHAR(8) GENERATED;       /* OLT PARTITION INFO  Y02008* 00890000
*  DCL 1 * BASED(ADDR(PARTITEM)),        /* OLT PARTITION INFO  Y02008* 00900000
*        3 PARADR PTR(31),               /* START ADDRESS       Y02008* 00910000
*          5 * CHAR(3),                  /* NA                  Y02008* 00920000
*          5 PAR4 CHAR(1),               /* LAST BYTE           Y02008* 00930000
*        3 PARSZ PTR(31);                /* SIZE                Y02008* 00940000
*  DCL REIUCB GENERATED PTR(31);         /* 2955 UCB ADDRES     Y02008* 00950000
*  DCL APPTRS CHAR(12) GENERATED;        /* PTRS TO APPENDAGES  Y02008* 00960000
*  DCL 1 NAPAPTRS CHAR(12) BDY(WORD) BASED(R1), /* 1ST 12 BYTES Y02008* 00970000
*                                        /* OF IFDOLT58         Y02008* 00980000
*        3 * CHAR(4),                    /* ENTRY TO PCI EXIT   Y02008* 00990000
*        3 NORMABNM CHAR(8);             /* PTRS TO NORMAL &    Y02008* 01000000
*                                        /* ABNORMAL EXIT RTNS  Y02008* 01010000
*  DCL PCIEXIT PTR(31) GENERATED;        /* PTR TO PCI EXIT RTN Y02008* 01020000
*  DCL RESTAB CHAR(64) BASED(ADDR(IFDOLT00)+32); /* WORK AREA   Y02008* 01030000
*  DCL DIEPTR PTR(31) GENERATED;         /* PTR TO IFDOLT57-DIE Y02008* 01040000
*  /************************************************************Y02008* 01050000
*  /*                   MISC SYS CNTRL BLKS                     Y02008* 01060000
*  /************************************************************Y02008* 01070000
*  DCL TCBMSS PTR GENERATED;             /* BOUNDARY BOX PTR    Y02008* 01080000
*  DCL ADRCVT PTR BASED(16);             /* CVT ADDRESS         Y02008* 01090000
*  DCL TCBWPTR PTR BASED(R5);            /* TCB WORDS POINTER   Y02008* 01100000
*  DCL 1 * BASED(TCBWPTR),               /* TCB WORDS           Y02008* 01110000
*        3 * PTR,                        /* NA                  Y02008* 01120000
*        3 ADRTCB PTR;                   /* TCB ADDRESS         Y02008* 01130000
*  DCL TCBPQE PTR GENERATED;             /* DUMMY PQE MINUS 8   Y02008* 01140000
*  DCL 1 * BDY(WORD) BASED(TCBPQE),      /* DUMMY PQE MINUS 8   Y02008* 01150000
*        3 *(2) PTR,                     /* NA                  Y02008* 01160000
*        3 FPQE PTR;                     /* FIRST PQE PTR       Y02008* 01170000
*  DCL 1 * BDY(WORD) BASED(FPQE),        /* FIRST PQE           Y02008* 01180000
*        3 *(5) PTR,                     /* NA                  Y02008* 01190000
*        3 REGSZ FIXED;                  /* REGION SIZE         Y02008* 01200000
*  /************************************************************Y02008* 01210000
*  /*               GETMAIN REQUIRED DECLARES                   Y02008* 01220000
*  /************************************************************Y02008* 01230000
*  /* TWO CONSECUTIVE FULLWORDS WHICH CONTAIN THE MINIMUM AND   Y02008* 01240000
*  /* MAXIMUM LENGTHS ACCEPTABLE FOR THE GETMAIN REQUEST        Y02008* 01250000
*  /************************************************************Y02008* 01260000
*  DCL 1 CORELNGT BDY(WORD) CHAR(8),     /* GETMAIN REQUIREMENTSY02008* 01270000
*        3 MINLNGTH FIXED(31) INIT(4096), /* 4K MINIMUM         YM7255* 01280000
*        3 MAXLNGTH FIXED(31);           /* MAXIMUM VARIES      Y02008* 01290000
*  /************************************************************Y02008* 01300000
*  /* TWO CONSECUTIVE FULLWORDS WHICH CONTAIN THE RESULTS OF THEY02008* 01310000
*  /* GETMAIN REQUEST. THE 1ST WORD CONTAINS THE ADDRESS OF THE Y02008* 01320000
*  /* ALLOCATED STORAGE, THE 2ND WORD CONTAINS THE LENGTH OF THEY02008* 01330000
*  /* STORAGE AREA ALLOCATED.                                   Y02008* 01340000
*  /************************************************************Y02008* 01350000
*  DCL 1 RESULTS CHAR(8) BDY(WORD),      /* GETMAIN RESULTS     Y02008* 01360000
*        3 * CHAR(4),                    /* GETMAIN AREA PTR    Y02008* 01370000
*        3 AREASIZE FIXED(31);           /* GETMAIN AREA SIZE   Y02008* 01380000
*  DCL SCTOL CHAR(2) BASED(R2+34);       /* SIZE IN WORDS       X02008* 01390000
*  DCL 1 I FIXED INIT(0),                /* WORK WORD           X02008* 01400000
*         2 * CHAR(2),                   /* NA                  X02008* 01410000
*         2 OLTSP CHAR(2);               /* WORK BYTES          X02008* 01420000
*  DCL 1 STAEDT CHAR(104) BASED(R5),     /* STAE AREA DATA.     X02008* 01430000
*        3 * CHAR(4),                    /* NA.                 X03008* 01440000
*        3 ABNDCC CHAR(4);               /* ABEND COMP. CODE.   X03008* 01450000
*  DCL SYS222 CHAR(4) INIT('00222000'X); /* SYSTEM 222 CC       Y02008* 01460000
*  DCL SVSTAEDT CHAR(104) BASED(R11+2);  /* SAVE STAE AREA DATA X02008* 01470000
*  DCL CHNBK PTR BASED(R13+4);           /* CHAIN BACK SAVE AREA */     01480000
*         DCL 1 FUNC14 FIXED INIT(0),    /*                     S21052* 01490000
*           2 * CHAR(2),                 /*                     S21052* 01500000
*           2 * CHAR(2) INIT('0014'X);   /*                      21937* 01510000
*  DCL IFDOLT18 EXT ENTRY;               /* TRANSIENT MANAGER ROOT */   01520000
*  DCL IFDOLT23 EXT ENTRY;               /* COMMON AREA MODULE NAME */  01530000
*  DCL IFDOLT30 EXT ENTRY;               /* CE COMMUNICATIONS ROOT */   01540000
*  DCL TMRADR PTR INIT(ADDR(IFDOLT18));  /* TRANSIENT MANAGER ADDRESS * 01550000
*  DCL COMADR PTR INIT(ADDR(IFDOLT23));  /* COMMON AREA ADDRESS */      01560000
*  DCL CECOMRT PTR INIT(ADDR(IFDOLT30)); /* CE COMMUNICATIONS ADDRESS * 01570000
*  DCL STAERT LABEL;                     /* STAE ERROR ROUTINE */       01580000
*  DCL LSTADR FIXED BASED(ADDR(I));      /* END PARTITION       X02008* 01590000
*  DCL 1 H FIXED INIT(15),               /* WORK AREA           X02008* 01600000
*         2 * CHAR(2),                   /* NA                  X02008* 01610000
*         2 RHFWD FIXED(15),             /* RIGHT HALF WORD     X02008* 01620000
*           3 * CHAR(1),                 /* NA                  X02008* 01630000
*           3 LBYT4 CHAR(1);             /* LAST BYTE           X02008* 01640000
*  DCL J FIXED INIT(0);                  /* WORK WORD           X02008* 01650000
*  DCL 1 * CHAR(1) INIT('00'X),          /* WORK SWITCHES       X02008* 01660000
*         2 DMPIND BIT(2),               /* DUMP INDICATORS     X02008* 01670000
*           3 INLN BIT(1),               /* ALTER INITIAL LINE  X02008* 01680000
*           3 FNLN BIT(1),               /* ALTER FINAL LINE    X02008* 01690000
*             4 * BIT(1);                /* NA                  X02008* 01700000
*  DCL LIST CHAR(16) INIT('0123456789ABCDEF'); /* ALPHA-NUMERIC X02008* 01710000
*  DCL 1 * CHAR(32) BASED(R8),           /* WORDS IN CORE       X02008* 01720000
*         2 WORD1 CHAR(4),               /* WORD IN CORE        X02008* 01730000
*         2 NXTWD CHAR(4);               /* NEXT WORD           X02008* 01740000
*  DCL 1 * BASED(R3),                    /* CORE LOCATION       X02008* 01750000
*         2 WD1T8 CHAR(32),              /* GROUP OF WORDS      X02008* 01760000
*         2 NXWD1T8 CHAR(32);            /* NEXT GROUP OF WORDS X02008* 01770000
*  DCL WD1T8A CHAR(31) BASED(ADDR(WD1T8)+1);  /* NEXT LOCATION  X02008* 01780000
*  DCL LGWRTCT CHAR(2) GENERATED;        /* LARGE WRITE COUNT   X02008* 01790000
*  DCL LGWRTFD CHAR(8) BASED(R2+92);     /* LARGE WRITE INFO    Y02008* 01800000
*  DCL DUMPHDR CHAR(19)                  /* DUMP HEADING        X02008* 01810000
*         INIT('OLTS PARTITION AREA');   /* TEXT OF MESSAGE     X02008* 01820000
*  DCL 1 * BASED(ADDR(PRTBUFR)+1),       /* PRINT BUFFER        X02008* 01830000
*         2 LINE CHAR(11),               /* START PRINT LINE    X02008* 01840000
*         2 LNWD1 CHAR(37),              /* 1ST PART OF LINE    X02008* 01850000
*         2 MDWAY CHAR(37),              /* 2ND PART OF LINE    X02008* 01860000
*         2 ASTLN CHAR(1),               /* 1ST ASTERISK        X02008* 01870000
*         2 LNCORE CHAR(32),             /* CORE BYTES          X02008* 01880000
*         2 ASTFINIS CHAR(1),            /* LAST ASTERISK       X02008* 01890000
*           3 * CHAR(1);                 /* NA                  X02008* 01900000
*  DCL LNCOR1 CHAR(31) BASED(ADDR(LNCORE)+1); /* NEXT LOCATION  X02008* 01910000
*  DCL EBCD CHAR(1) BASED(R6);           /* BYTE TO PRINT       X02008* 01920000
*  DCL NXTR6 CHAR(1) BASED(R6+1);        /* NEXT BYTE           X02008* 01930000
*  DCL 1 CVT BASED(R5),                  /* COMM. VECTOR TABLE  X02008* 01940000
*        3 * CHAR(312),                  /* N/A                 X02008* 01950000
*        3 CVTEORM FIXED(31);            /* END OF REAL MEMORY  X02008* 01960000
*  DCL 1 PARMFLD BASED(R3),              /* PARM FIELD AND COUNTX02008* 01970000
*        3 COUNT FIXED(15),              /* FIELD LENGTH        X02008* 01980000
*        3 FLD CHAR(3);                  /* FIELD TEXT          X02008* 01990000
*  DCL PSWHDR CHAR(12)                   /* PSW HEADER                * 02000000
*         INIT('PSW AT ABEND');                                         02010000
*  DCL REGSHDR CHAR(13)                  /* REGISTER HEADER           * 02020000
*         INIT('REGS AT ABEND');                                        02030000
*  DCL REGID07 CHAR(9)                   /* REGS 0-7 ID               * 02040000
*         INIT('REGS 0-7 ');                                            02050000
*  DCL REGID8F CHAR(4)                   /* REGS 8-F ID               * 02060000
*         INIT('8-15');                                                 02070000
*  DCL STAEREG PTR(31) BASED(R3);        /* REGISTER IN STAE BLOCK    * 02080000
*  RESTRICT(2,3,4,5,6,7,8,9);            /* REGS IN USE         X02008* 02090000
*  /************************************************************Y02008* 02100000
*  /*                  PERFORM INITIALIZATION                   Y02008* 02110000
*  /************************************************************Y02008* 02120000
*  R2=COMADR;                            /* INITIALIZE COMMON   Y02008* 02130000
         L     @2,COMADR                                          0234  02140000
*                                        /* AREA BASE REGISTER. Y02008* 02150000
*  ENDJOB=R13;                           /* INITIALIZE POINTER  Y02008* 02160000
         ST    @D,ENDJOB                                          0236  02170000
*                                        /* TO FORCE RETURN TO  Y02008* 02180000
*                                        /* SYSTEM.             Y02008* 02190000
*  R1='08'X;                             /* MP CALL TO SVC 59   Y02008* 02200000
         LA    @1,X'08'                                           0239  02210000
*  GEN(SVC   59);                        /* ISSUE SVC CALL      Y02008* 02220000
         SVC   59                                                       02230000
         DS    0H                                                       02240000
*  GEN(STC   R1,CESWT10);                /* SET MP FLAG         Y02008* 02250000
         STC   R1,CESWT10                                               02260000
         DS    0H                                                       02270000
*  R1=IFD102;                            /* PLACE POINTER TO    Y02008* 02280000
         L     @C,MSGMOD                                          0242  02290000
         L     @1,4(0,@C)                                         0242  02300000
*                                        /* MSG IFD102I IN R1.  Y02008* 02310000
*  IF MPSYS='0'B THEN                    /* IS IT AN MP SYSTEM  Y02008* 02320000
         TM    A00008,B'10000000'                                 0244  02330000
         BC    05,@9FF                                            0244  02340000
*    MPMSG=MPMSG&&MPMSG;                 /* NO, ELIMINATE MP    Y02008* 02350000
         XC    25(20,@1),25(@1)                                   0245  02360000
*                                        /* PART OF MSG IFD102I Y02008* 02370000
*  GEN(PWTO  REG=(R1));                  /* PRINT MSG IFD102I   Y02008* 02380000
@9FF     EQU   *                                                  0247  02390000
         PWTO  REG=(R1)                                                 02400000
         DS    0H                                                       02410000
*  R1=IFD134;                            /* GET POINTER TO MSG  Y02008* 02420000
         L     @1,36(0,@C)                                        0248  02430000
*                                        /* IFD134I IN R1.      Y02008* 02440000
*  GEN(PWTO  REG=(R1));                  /* PRINT MSG IFD134I   Y02008* 02450000
         PWTO  REG=(R1)                                                 02460000
         DS    0H                                                       02470000
*  R15=TMRADR;                           /* GO TO TRANSIENT MGR Y02008* 02480000
         L     @F,TMRADR                                          0251  02490000
*  GEN(BALR  R14,R15);                   /* & INITIALIZE MCT.   Y02008* 02500000
         BALR  R14,R15                                                  02510000
         DS    0H                                                       02520000
*  R5=ADRCVT;                            /* PLACE CVT ADDR IN   Y02008* 02530000
         L     @5,ADRCVT                                          0253  02540000
*                                        /* REGISTER 5.         Y02008* 02550000
*  R6=ADRTCB;                            /* TCB ADDRESSABILITY  Y02008* 02560000
         L     @C,0(0,@5)                                         0255  02570000
         L     @6,4(0,@C)                                         0255  02580000
*  EXPAND1=REGSZ;                        /* SAVE REGION SIZE    Y02008* 02590000
         L     @C,TCBPQE                                          0256  02600000
         L     @C,8(0,@C)          A00021                         0256  02610000
         MVC   EXPAND1(4),20(@C)                                  0256  02620000
*                                        /* IN COMMON AREA.     Y02008* 02630000
*  /************************************************************Y02008* 02640000
*  /*       LOAD NORMAL, ABNORMAL, PCI APPENDAGE (NAPA)         Y02008* 02650000
*  /************************************************************Y02008* 02660000
*  GEN(LOAD  EP=IFDOLT58);               /* LOAD IFDOLT58(NAPA) Y02008* 02670000
         LOAD  EP=IFDOLT58                                              02680000
         DS    0H                                                       02690000
*  R1=R0;                                /* INTO OLTEP REGION.  Y02008* 02700000
         LR    @1,@0                                              0262  02710000
*  PCIEXIT=R1;                           /* SAVE PTR TO PCI EXITY02008* 02720000
         ST    @1,PCIEXIT                                         0263  02730000
*                                        /* ROUTINE IN COM AREA Y02008* 02740000
*  APPTRS(5:12)=NORMABNM;                /* SAVE PTRS TO NORMAL Y02008* 02750000
         MVC   APPTRS+4(8),4(@1)                                  0265  02760000
*                                        /* AND ABNORMAL EXIT   Y02008* 02770000
*                                        /* ROUTINES IN COM AREAY02008* 02780000
*  /************************************************************Y02008* 02790000
*  /*           LOAD DISABLED INTERRUPT EXIT (DIE)              Y02008* 02800000
*  /************************************************************Y02008* 02810000
*  GEN(LOAD  EP=IFDOLT57);               /* LOAD IFDOLT57(DIE)  Y02008* 02820000
         LOAD  EP=IFDOLT57                                              02830000
         DS    0H                                                       02840000
*                                        /* IN PREPARATION FOR  Y02008* 02850000
*                                        /* BEING MOVED BY SVC. Y02008* 02860000
*  /************************************************************Y02008* 02870000
*  /*     HAVE SVC 59 PERFORM TOTAL OLTER INITIALIZATION        Y02008* 02880000
*  /*         - CHECK FOR 2 OLTEPS                              Y02008* 02890000
*  /*         - MOVE IFDOLT57 TO PROTECTED CORE-SUBPOOL 245     Y02008* 02900000
*  /*         - OBTAIN & SET UP UCB MASK TABLE                  Y02008* 02910000
*  /*         - OBTAIN SPACE FOR REI IEB                        Y02008* 02920000
*  /*         - SET TCBOLTEP FLAG ON IN TCB                     Y02008* 02930000
*  /*         - FIND 2955 UCB IC ONE EXISTS                     Y02008* 02940000
*  /*         - TELL CALLER IF IT HAS BEEN INVOKED V=R OR V=V   Y02008* 02950000
*  /************************************************************Y02008* 02960000
*  ROPTPTR1=R0;                          /* PLACE ADDR OF WHERE Y02008* 02970000
         ST    @0,A00003                                          0284  02980000
*                                        /* IFDOLT57 WAS LOADED Y02008* 02990000
*                                        /* IN SVC 59 PARAMETER Y02008* 03000000
*                                        /* LIST.               Y02008* 03010000
*  ROPTPTR2=ADDR(DIEPTR);                /* PLACE ADDR OF WHERE Y02008* 03020000
         LA    @F,DIEPTR                                          0288  03030000
         ST    @F,A00003+4                                        0288  03040000
*                                        /* THE DIE ADDRESS IS  Y02008* 03050000
*                                        /* STORED IN COMMON    Y02008* 03060000
*                                        /* AREA IN SVC 59      Y02008* 03070000
*                                        /* PARAMETER LIST.     Y02008* 03080000
*  ROPTPTR3=ADDR(CHASCT);                /* PLACE ADDRESS OF  @ZA15468* 03090000
         LA    @F,CHASCT                                          0293  03100000
         ST    @F,A00003+8                                        0293  03110000
*                                        /* SCT IN SVC 59     @ZA15468* 03120000
*                                        /* PARAMETER LIST    @ZA15468* 03130000
*  R15=0;                                /* ZERO REGISTER 15.   Y02008* 03140000
         SR    @F,@F                                              0296  03150000
*  R1='58'X;                             /* PLACE CALLING CODE  Y02008* 03160000
         LA    @1,X'58'                                           0297  03170000
*                                        /* 58 HEX IN REG 1.    Y02008* 03180000
*  R0=ADDR(ROPT);                        /* PLACE PARAMETER LISTY02008* 03190000
         LA    @0,ROPT                                            0299  03200000
*                                        /* ADDRESS IN R0.      Y02008* 03210000
*  GEN(SVC   59);                        /* ISSUE SVC 59.       Y02008* 03220000
         SVC   59                                                       03230000
         DS    0H                                                       03240000
*  REIUCB=R15;                           /* SAVE 2955 UCB ADDR, Y02008* 03250000
         ST    @F,REIUCB                                          0302  03260000
*                                        /* IF ONE EXISTS.      Y02008* 03270000
*  R7=R15;                               /* SAVE RETURN CODE    Y02008* 03280000
         LR    @7,@F                                              0304  03290000
*                                        /* FROM SVC 59 IN R7.  Y02008* 03300000
*  TSTDEBAD=R0+4;                        /* SAVE DEB AREA ADDR  Y02008* 03310000
         LA    @F,4                                               0306  03320000
         AR    @F,@0                                              0306  03330000
         ST    @F,TSTDEBAD                                        0306  03340000
*                                        /* IN SUBPOOL 254,     Y02008* 03350000
*                                        /* ADJUSTED FOR DBCHK. Y02008* 03360000
*  VIRTSPC='1'B;                         /* INDICATE OLTEP IS   Y02008* 03370000
         OI    A00004,B'00000010'                                 0309  03380000
*                                        /* IN VIRTUAL.         Y02008* 03390000
*  IF R1=0 THEN                          /* IS OLTEP IN VIRTUAL.Y02008* 03400000
         LTR   @1,@1                                              0311  03410000
         BC    07,@9FE                                            0311  03420000
*    VIRTSPC='0'B;                       /* NO, RESET FLAG TO 0,Y02008* 03430000
         NI    A00004,B'11111101'                                 0312  03440000
*                                        /* INDICATING CLTEP IS Y02008* 03450000
*                                        /* IN REAL.            Y02008* 03460000
*  GEN(DELETE EP=IFDOLT57);              /* DELETE IFDOLT57, IT Y02008* 03470000
@9FE     EQU   *                                                  0315  03480000
         DELETE EP=IFDOLT57                                             03490000
         DS    0H                                                       03500000
*                                        /* HAS BEEN MOVED BY   Y02008* 03510000
*                                        /* SVC 59.             Y02008* 03520000
*  R1=IFD899;                           /* PTR TO MSG IFD899I   Y02906* 03530000
         L     @C,MSGMOD                                          0318  03540000
         L     @1,128(0,@C)                                       0318  03550000
*  IF R7=4|                             /* SHOULD MSG BE PRINTEDY02906* 03560000
*    R7=8 THEN                          /* SHOULD MSG BE PRINTEDY02906* 03570000
         CH    @7,@D1                                             0319  03580000
         BC    08,@9FD                                            0319  03590000
         CH    @7,@D2                                             0319  03600000
         BC    07,@9FC                                            0320  03610000
*      DO;                              /* YES, 2 OLTEPS OR     Y02906* 03620000
@9FD     EQU   *                                                  0321  03630000
*                                       /* CALLER NOT AUTHORIZEDY02906* 03640000
* INT001:                               /*                      Y02906* 03650000
*      GEN(PWTO  REG=(R1));             /* OUTPUT MSG IFD899I   Y02906* 03660000
INT001   PWTO  REG=(R1)                                                 03670000
         DS    0H                                                       03680000
*           IF MSG899ID(2)='1' & R7=8     /* IF SECOND OLTEP  @ZA17684* 03690000
* THEN GO TO INT014;          /* NO NEED TO CLEANUP           @ZA17684* 03700000
         CLI   66(@1),C'1'                                        0325  03710000
         BC    07,@9FB                                            0325  03720000
         CH    @7,@D2                                             0325  03730000
         BC    08,INT014                                          0326  03740000
*       GO TO INT013B;                   /* TERMINATE           YM5414* 03750000
         BC    15,INT013B                                         0327  03760000
*      END;                             /*                      Y02906* 03770000
*  /************************************************************Y02008* 03780000
*  /*                  OBTAIN STORAGE FOR OLT                   Y02008* 03790000
*  /************************************************************Y02008* 03800000
*  MAXLNGTH=1048576;                     /* SET DEFAULT OLTSIZE Y02008* 03810000
@9FC     MVC   CORELNGT+4(4),@D3                                  0332  03820000
*                                        /* TO 1 MEG MAX        Y02008* 03830000
*  IF VIRTSPC='0'B THEN                  /* IS OLTEP IN REAL    Y02008* 03840000
         TM    A00004,B'00000010'                                 0334  03850000
         BC    05,@9F9                                            0334  03860000
*    MAXLNGTH=EXPAND1-65536;             /* YES, DETERMINE MAX  Y02008* 03870000
         L     @F,EXPAND1                                         0335  03880000
         S     @F,@D4                                             0335  03890000
         ST    @F,CORELNGT+4                                      0335  03900000
*                                        /* OLT SIZE..........  Y02008* 03910000
*                                        /* OLTEP MUST HAVE 64K Y02008* 03920000
*  IF MAXLNGTH<4096 THEN                 /* IS THERE 4K FOR OLT YM7255* 03930000
@9F9     LH    @F,@D5                                             0338  03940000
         C     @F,CORELNGT+4                                      0338  03950000
*    GOTO INT002;                        /* NO, PRINT IFD899I   YM7255* 03960000
         BC    02,INT002                                          0339  03970000
*  GEN(GETMAIN VC,LA=CORELNGT,A=RESULTS,BNDRY=PAGE);                    03980000
         GETMAIN VC,LA=CORELNGT,A=RESULTS,BNDRY=PAGE                    03990000
         DS    0H                                                       04000000
*                                        /* OBTAIN OLT AREA.    Y02008* 04010000
*                                                                       04020000
*  IF R15¬=0 THEN                        /* WAS CORE ALLOCATED. Y02008* 04030000
         LTR   @F,@F                                              0343  04040000
         BC    08,@9F8                                            0343  04050000
*    DO;                                /* NO, PRINT MSG IFD899IY02906* 04060000
*  INT002:                              /* AND TERMINATE        Y02906* 04070000
*    R1=IFD899;                         /* PTR TO MSG IFD899I   Y02906* 04080000
INT002   L     @C,MSGMOD                                          0345  04090000
         L     @1,128(0,@C)                                       0345  04100000
*    MSG899ID(2)='3';                   /* ID TO MSG IFD899I    Y02008* 04110000
         MVI   66(@1),C'3'                                        0347  04120000
*    GO TO INT001;                      /* GO PRINT MSG         Y02906* 04130000
         BC    15,INT001                                          0348  04140000
*    END;                               /* EXIT SYSTEM.         Y02906* 04150000
*  I=AREASIZE/4;                         /* PLACE SIZE OF OLT   Y02008* 04160000
@9F8     L     @E,RESULTS+4                                       0350  04170000
         SRDA  @E,32                                              0350  04180000
         LA    @0,4                                               0350  04190000
         DR    @E,@0                                              0350  04200000
         ST    @F,I                                               0350  04210000
*  SCTOL=OLTSP;                          /* AREA IN SCT.        Y02008* 04220000
         MVC   34(2,@2),I+2                                       0351  04230000
*  PARTITEM=RESULTS;                     /* PLACE GETMAIN       Y02008* 04240000
         MVC   PARTITEM(8),RESULTS                                0352  04250000
*                                        /* RESULTS IN COM AREA Y02008* 04260000
*  LGWRTFD(1:4)=PARTITEM(1:4);           /* LARGE WRITE FIELD   Y02008* 04270000
         MVC   92(4,@2),PARTITEM                                  0354  04280000
*                                        /* START ADDRESS.      Y02008* 04290000
*  LGWRTFD(5:6)=PARTITEM(7:8);           /* SIZE OF LARGE WRITE Y02008* 04300000
         MVC   96(2,@2),PARTITEM+6                                0356  04310000
*                                        /* FIELD IF IN REAL    Y02008* 04320000
*  IF VIRTSPC='1'B THEN                  /* IS OLTEP VIRTUAL    Y02008* 04330000
         TM    A00004,B'00000010'                                 0358  04340000
         BC    12,@9F7                                            0358  04350000
*    LGWRTFD(5:6)='7FFF'X;               /* YES, LARGE WRITE FLDY02008* 04360000
         MVC   96(2,@2),@X7                                       0359  04370000
*                                        /* SIZE IS 32K         Y02008* 04380000
*  /************************************************************Y02008* 04390000
*  /*                 PROVIDE DOUBLE ESTAE INTERFACE            Y02008* 04400000
*  /************************************************************Y02008* 04410000
*  GEN(ESTAE INT013A,XCTL=YES,PURGE=HALT,TERM=YES); /* 1ST ESTAEY02008* 04420000
@9F7     EQU   *                                                  0364  04430000
         ESTAE INT013A,XCTL=YES,PURGE=HALT,TERM=YES                     04440000
         DS    0H                                                       04450000
*  IF R15¬=0 THEN                       /* WAS ESTAE OK.        Y02008* 04460000
         LTR   @F,@F                                              0365  04470000
         BC    08,@9F6                                            0365  04480000
*    DO;                                /* NO, TERMINATE WITH   Y02008* 04490000
* NOESTAE:                              /* CONFLICTS MESSAGE.   Y02008* 04500000
*    R1=IFD899;                         /* PTR TO MSG IFD899I   Y02008* 04510000
NOESTAE  L     @C,MSGMOD                                          0367  04520000
         L     @1,128(0,@C)                                       0367  04530000
*    MSG899ID(2)='5';                   /* ID TO MSG IFD899I    Y02008* 04540000
         MVI   66(@1),C'5'                                        0369  04550000
*    GO TO INT001;                      /* PRINT ERROR MSG      Y02008* 04560000
         BC    15,INT001                                          0370  04570000
*    END;                               /*                      Y02008* 04580000
*  GEN(ESTAE STAERT,XCTL=YES,PURGE=HALT,TERM=YES); /* 2ND ESTAE Y02008* 04590000
@9F6     EQU   *                                                  0372  04600000
         ESTAE STAERT,XCTL=YES,PURGE=HALT,TERM=YES                      04610000
         DS    0H                                                       04620000
*  IF R15¬=0 THEN                       /* ESTAE OK             Y02008* 04630000
         LTR   @F,@F                                              0373  04640000
*    GO TO NOESTAE;                     /* NO-EXIT WITH CONFLICTY02008* 04650000
         BC    07,NOESTAE                                         0374  04660000
*  /************************************************************Y02008* 04670000
*  /*    GO TO DECODE MODULES, INITIALIZATION IS COMPLETE       Y02008* 04680000
*  /************************************************************Y02008* 04690000
*  RESTAB=RESTAB&&RESTAB;                /* ZERO RESIDENT TABLE.Y02008* 04700000
         L     @C,@A1              ADDRESS OF IFDOLT00            0378  04710000
         XC    32(64,@C),32(@C)                                   0378  04720000
*  R15=CECOMRT;                          /* PLACE CE COMM MODULEY02008* 04730000
         L     @F,CECOMRT                                         0379  04740000
*                                        /* ADDRESS IN R15.     Y02008* 04750000
*  GEN(BALR  R14,R15);                   /* GO TO COMMUNICATION Y02008* 04760000
         BALR  R14,R15                                                  04770000
         DS    0H                                                       04780000
*                                        /* ROOT MODULE.        Y02008* 04790000
*  GO TO INT014;                         /* GO TO EXIT ROUTINE. Y02008* 04800000
         BC    15,INT014                                          0383  04810000
* STAERT: ENTRY(X);                                                     04820000
STAERT   STM   @E,@C,12(@D)                                       0384  04830000
         BALR  @B,0                                               0384  04840000
         LA    @F,STAERT-IFDOLT00-24                              0384  04850000
         SR    @B,@F                                              0384  04860000
         ST    @D,@SAV001+4                                       0384  04870000
         LA    @F,@SAV001                                         0384  04880000
         ST    @F,8(0,@D)                                         0384  04890000
         LR    @D,@F                                              0384  04900000
@9F5     EQU   *                                                  0384  04910000
*         DCL UTENT PTR GENERATED;                                      04920000
*  DCL DEVICE CHAR(1) BASED(ADDR(CHASCT)+18);  /*ACTIVE DEVICE*/        04930000
*  DCL TAB28 PTR GENERATED;              /* TRANSIENT MANAGER ENTRY */  04940000
*  DCL ALOC CHAR(4) GENERATED;           /* PARAMETER LIST FOR ALOCAT * 04950000
*  DCL MCT1ADR PTR GENERATED;            /* MCT ADDRESS */              04960000
*  DCL 1 * CHAR(1) BASED(ADDR(MCT1ADR)+3), /* LAST BYTE MCT ADDRESS */  04970000
*         2 * BIT(7),                    /* NA */                       04980000
*         2 ABCOND BIT(1);               /* ABEND CONDITION */          04990000
*  DCL 1 * BASED(ADDR(CHASCT)+3),        /* CHASCT AREA         X02008* 05000000
*         2 * CHAR(1),                   /* NA                  X02008* 05010000
*           3 * BIT(3),                  /* NA                  X02008* 05020000
*           3 PARPRIN BIT(1),            /* PARALLEL PRINT BIT  X02008* 05030000
*             4 * BIT(1);                /* NA                  X02008* 05040000
*   DCL 1 * CHAR(1) BASED(ADDR(CHASCT)+33),   /*SWITCHES*/              05050000
*    2 * BIT(5),                                                        05060000
*   2 EXECKLEN BIT(1),              /* OLT EXECUTING CLEAN-UP   X03008* 05070000
*    2 * BIT(2);                                                        05080000
*  DCL 1 * CHAR(1) BASED(ADDR(CHASCT)+36),  /*SWITCHES*/                05090000
*    2 * BIT(1),                                                        05100000
*    2 CLEANUP BIT(1),                  /*OLT CLEANUP DESIRED*/         05110000
*    2 * BIT(6);                                                        05120000
*         DCL CESWT2 CHAR(1) GENERATED;  /*OLTEP SWITCHES*/             05130000
*   DCL 1 * CHAR(1) BASED(ADDR(CESWT2)),                                05140000
*    2 * BIT(6),                                                        05150000
*    2 TAPEHDR BIT(1),                                                  05160000
*    2 * BIT(1);                                                        05170000
*         DCL CESWT6 CHAR(1) GENERATED;                                 05180000
*         DCL 1 * BASED(ADDR(CESWT6)),                                  05190000
*          2 UTSCAL BIT(1),              /* MODULES CAN BE DELETED */   05200000
*          2 * BIT(6),                   /* NA */                       05210000
*           2 RTOSTAE BIT(1);                                           05220000
*  DCL CESWT8 CHAR(1) GENERATED;                                        05230000
*  DCL 1 * BASED(ADDR(CESWT8)),          /* SWITCHES FOR OLTEP        * 05240000
*        3 * BIT(5),                     /* NA                        * 05250000
*        3 SUTMSG BIT(1);                /* START MSG ISSUED          * 05260000
*         DCL CESWTR CHAR(1) GENERATED;  /* RETAIN 370 SWITCH   S20203* 05270000
*         DCL 1 * CHAR(1) BASED(ADDR(CESWTR)),   /*             S20203* 05280000
*           3 RETAINAC BIT(1),           /* REI ACTIVE FLAG     S20203* 05290000
*           3 * BIT(7);                  /*                     S20203* 05300000
*  DCL SCHEDSA PTR GENERATED;            /* SCHEDULER AREA            * 05310000
*         DCL CHAINBK PTR BASED(R13+4);                                 05320000
*         DCL SAVER(18) FIXED BASED(CHAINBK);                           05330000
*         R2=COMADR;                    /* PUT ADDRESS OF COMMON AREA   05340000
*                                         IN R2*/                       05350000
         L     @2,COMADR                                          0427  05360000
*  R5=R1;                                /* STAE REG AREA       X02008* 05370000
         LR    @5,@1                                              0429  05380000
*  TMRADR=R5;                            /* SAVE STAE REG       X02008* 05390000
         ST    @5,TMRADR                                          0430  05400000
*  SVSTAEDT=STAEDT;                      /* SAVE STAE AREA DATA X02008* 05410000
         MVC   2(104,@B),0(@5)                                    0431  05420000
*  RTOSTAE='1'B;                         /* INDICATE STAE RETURN      * 05430000
         OI    A00054,B'00000001'                                 0432  05440000
*  EXECKLEN='0'B;                        /* CLEAR CLEAN UP      X03008* 05450000
         NI    A00045,B'11111011'                                 0433  05460000
*                                        /* EXECUTING FLAG      X03008* 05470000
* INT010:                                                               05480000
*  IF ABNDCC(2:4)=SYS222(2:4) THEN       /* IS THIS A SYSTEM    Y02008* 05490000
INT010   CLC   5(3,@5),SYS222+1                                   0435  05500000
*                                        /* 222 ABEND.          X03008* 05510000
*    GO TO INT013;                       /* YES, BYPASS DUMP.   X03008* 05520000
         BC    08,INT013                                          0438  05530000
*  PARPRIN='0'B;                         /* NO PARALLEL PRINT   X02008* 05540000
         NI    A00041,B'11101111'                                 0439  05550000
*  GEN(BAL   R10,INT012F);               /* CLEAR PRINT BUFFER        * 05560000
         BAL   R10,INT012F                                              05570000
         DS    0H                                                       05580000
*  PRTBUFR(1)='8B'X;                     /* INDICATE PAGE IS TO BE    * 05590000
         MVI   PRTBUFR,X'8B'                                      0441  05600000
*                                        /* EJECTED                   * 05610000
*  GEN(BAL   R10,INT012D);               /* EJECT PAGE                * 05620000
         BAL   R10,INT012D                                              05630000
         DS    0H                                                       05640000
*  PRTBUFR(3:14)=PSWHDR;                 /* PLACE PSW HEADER IN       * 05650000
         MVC   PRTBUFR+2(12),PSWHDR                               0444  05660000
*                                        /* PRINT BUFFER              * 05670000
*  R5=SVSTAEDT(9:12);                    /* PREPARE TO CONVERT FIRST  * 05680000
         MVC   @TEMP4(4),10(@B)                                   0446  05690000
         L     @5,@TEMP4                                          0446  05700000
*                                        /* HALF OF PSW AT TIME OF    * 05710000
*                                        /* ABEND                     * 05720000
*  R6=ADDR(PRTBUFR(16));                 /* INDICATE WHERE PSW SHOULD * 05730000
         LA    @6,PRTBUFR+15                                      0449  05740000
*                                        /* BE PLACED IN PRINT BUFFER * 05750000
*  GEN(BAL   R10,INT012);                /* CONVERT FIRST HALF OF PSW * 05760000
         BAL   R10,INT012                                               05770000
         DS    0H                                                       05780000
*  R5=SVSTAEDT(13:16);                   /* PREPARE TO CONVERT SECOND * 05790000
         MVC   @TEMP4(4),14(@B)                                   0452  05800000
         L     @5,@TEMP4                                          0452  05810000
*                                        /* HALF OF PSW               * 05820000
*  GEN(BAL   R10,INT012);                /* CONVERT SECOND HALF OF    * 05830000
         BAL   R10,INT012                                               05840000
         DS    0H                                                       05850000
*                                        /* PSW                       * 05860000
*  GEN(BAL   R10,INT012D);               /* PRINT LINE WITH PSW AT    * 05870000
         BAL   R10,INT012D                                              05880000
         DS    0H                                                       05890000
*                                        /* TIME OF ABEND             * 05900000
*  PRTBUFR(54:66)=REGSHDR;               /* PLACE REG HEADER IN       * 05910000
         MVC   PRTBUFR+53(13),REGSHDR                             0458  05920000
*                                        /* PRINT BUFFER              * 05930000
*  GEN(BAL   R10,INT012D);               /* PRINT REG HEADER LINE     * 05940000
         BAL   R10,INT012D                                              05950000
         DS    0H                                                       05960000
*  R3=ADDR(SVSTAEDT)+24;                 /* FIND BEGINNING OF COPY OF * 05970000
         LA    @3,26(0,@B)                                        0461  05980000
*                                        /* STAE REGISTERS            * 05990000
*  PRTBUFR(2:10)=REGID07;                /* PLACE REGS ID IN PRINT    * 06000000
         MVC   PRTBUFR+1(9),REGID07                               0463  06010000
*                                        /* BUFFER                    * 06020000
*  DO R12=2 TO 1 BY -1;                  /* ESTABLISH LOOP TO PRINT   * 06030000
         LA    @C,2                                               0465  06040000
*                                        /* TWO LINES OF REGISTERS    * 06050000
*  R6=ADDR(PRTBUFR(12));                 /* INDICATE WHERE LINE       * 06060000
@DO9F4   LA    @6,PRTBUFR+11                                      0467  06070000
*                                        /* SHOULD START              * 06080000
*    DO R9=8 TO 1 BY -1;                 /* ESTABLISH LOOP TO CONVERT * 06090000
         LA    @9,8                                               0469  06100000
*                                        /* 8 REGS AND PRINT THEM     * 06110000
*    R5=STAEREG;                         /* PREPARE TO CONVERT REG    * 06120000
@DO9F0   L     @5,0(0,@3)                                         0471  06130000
*    GEN(BAL   R10,INT012);              /* CONVERT REG AND PLACE IT  * 06140000
         BAL   R10,INT012                                               06150000
         DS    0H                                                       06160000
*                                        /* IN THE PRINT BUFFER       * 06170000
*    R6=6+R6;                            /* POINT TO WHERE NEXT REG   * 06180000
         AH    @6,@D6                                             0474  06190000
*                                        /* SHOULD BE PLACED IN PRINT * 06200000
*                                        /* BUFFER                    * 06210000
*    R3=4+R3;                            /* POINT TO WHERE NEXT REG   * 06220000
         AH    @3,@D1                                             0477  06230000
*                                        /* TO BE CONVERTED IS        * 06240000
*    END;                                                               06250000
*  GEN(BAL   R10,INT012D);               /* PRINT LINE OF REGS        * 06260000
         BCT   @9,@DO9F0                                          0479  06270000
         BAL   R10,INT012D                                              06280000
         DS    0H                                                       06290000
*  PRTBUFR(7:10)=REGID8F;                /* PLACE REGS ID IN PRINT    * 06300000
         MVC   PRTBUFR+6(4),REGID8F                               0481  06310000
*                                        /* BUFFER                    * 06320000
*  END;                                                                 06330000
*  GO TO INT013;                        /* BYPASS OLT DUMP      Y02906* 06340000
         BCT   @C,@DO9F4                                          0483  06350000
         BC    15,INT013                                          0484  06360000
*  R3=PARADR;                            /* PARTITION STARTS    X02008* 06370000
         L     @3,A00016                                          0485  06380000
*  LBYT4=LBYT4&PAR4;                     /* LAST HEX CHAR       X02008* 06390000
         NC    H+3(1),A00016+3                                    0486  06400000
*  IF LBYT4='00'X THEN                   /* TEST HEX CHAR       X02008* 06410000
         CLI   H+3,X'00'                                          0487  06420000
*    GOTO INT010A;                       /* MULTIPLE OF 16      X02008* 06430000
         BC    08,INT010A                                         0488  06440000
*  R3=R3-H;                              /* ADDRESS IN MULTIPLESX02008* 06450000
         S     @3,H                                               0489  06460000
*  DMPIND='11'B;                         /* DUMP INDICATORS     X02008* 06470000
         OI    A00032,B'11000000'                                 0490  06480000
* INT010A:                                                              06490000
*  LSTADR=R3+PARSZ;                      /* PARTITION ENDS      X02008* 06500000
INT010A  L     @F,A00016+4                                        0491  06510000
         AR    @F,@3                                              0491  06520000
         ST    @F,LSTADR                                          0491  06530000
*  GEN(BAL   R10,INT012F);               /* CLEAR BUFFER        X02008* 06540000
         BAL   R10,INT012F                                              06550000
         DS    0H                                                       06560000
*  PRTBUFR(1)='8B'X;                     /* PAGE EJECT          X02008* 06570000
         MVI   PRTBUFR,X'8B'                                      0494  06580000
*  GEN(BAL   R10,INT012D);               /* EJECT PAGE          X02008* 06590000
         BAL   R10,INT012D                                              06600000
         DS    0H                                                       06610000
*  PRTBUFR(40:58)=DUMPHDR;               /* HEADING OF DUMP     X02008* 06620000
         MVC   PRTBUFR+39(19),DUMPHDR                             0496  06630000
* INT011:                                                               06640000
*  GEN(BAL   R10,INT012D);               /* PRINT LINE OR EJECT X02008* 06650000
INT011   BAL   R10,INT012D                                              06660000
         DS    0H                                                       06670000
*  RESTRICT(12);                                                        06680000
*  DO R12=56 TO 1 BY -1;                 /* LINES PER PAGE      X02008* 06690000
         LA    @C,56                                              0500  06700000
* RELEASE(4,5,6);                                                       06710000
*  IF INLN='1'B THEN                     /* TEST DUMP BIT       X02008* 06720000
@DO9EC   TM    A00032,B'10000000'                                 0502  06730000
         BC    12,@9E8                                            0502  06740000
*    DO;                                 /* INITIAL LINE        X02008* 06750000
*      LNCOR1(H:31)=WD1T8A(H:31);        /* INIT WORDS PER LINE X02008* 06760000
         L     @6,H                                               0504  06770000
         LA    @E,0(@6,@3)                                        0504  06780000
         LA    @4,31                                              0504  06790000
         SR    @4,@6                                              0504  06800000
         LA    @A,LNCOR1-1(@6)                                    0504  06810000
         EX    @4,@MVC                                            0504  06820000
*      INLN='0'B;                        /* ZERO DUMP BIT       X02008* 06830000
         NI    A00032,B'01111111'                                 0505  06840000
*      GOTO INT011C;                     /* DUMP LINE           X02008* 06850000
         BC    15,INT011C                                         0506  06860000
*    END;                                /* END BIT TEST        X02008* 06870000
*  IF R3¬<LSTADR THEN                    /* CHECK ADDRESS       X02008* 06880000
@9E8     C     @3,LSTADR                                          0508  06890000
         BC    04,@9E7                                            0508  06900000
*    IF FNLN='1'B THEN                   /* TEST DUMP BIT       X02008* 06910000
         TM    A00032,B'01000000'                                 0509  06920000
         BC    12,@9E6                                            0509  06930000
*      DO;                               /* FINAL LINE          X02008* 06940000
*        LNCORE(1:H)=WD1T8(1:H);         /* FINAL WORDS PER LINEX02008* 06950000
         LR    @E,@3                                              0511  06960000
         L     @6,H                                               0511  06970000
         BCTR  @6,0                                               0511  06980000
         LA    @A,A00036+86                                       0511  06990000
         EX    @6,@MVC                                            0511  07000000
*        FNLN='0'B;                      /* ZERO DUMP BIT       X02008* 07010000
         NI    A00032,B'10111111'                                 0512  07020000
*      END;                              /* END BIT TEST        X02008* 07030000
*    ELSE GOTO INT013;                   /* DUMP IS COMPLETE    X02008* 07040000
*  ELSE LNCORE=WD1T8;                    /* WORDS PER LINE      X02008* 07050000
         BC    15,@9E4                                            0515  07060000
@9E7     MVC   A00036+86(32),0(@3)                                0515  07070000
* INT011C:                                                              07080000
*  ASTLN='*';                            /* FIRST ASTERISK      X02008* 07090000
@9E4     EQU   *                                                  0516  07100000
INT011C  MVI   A00036+85,C'*'                                     0516  07110000
*  ASTFINIS='*';                         /* LAST ASTERISK       X02008* 07120000
         MVI   A00036+118,C'*'                                    0518  07130000
* RESTRICT(4,5,6);                                                      07140000
*  R5=R3;                                /* CORE ADDRESS        X02008* 07150000
         LR    @5,@3                                              0520  07160000
*  R6=ADDR(LINE);                        /* PRINT LINE ADR      X02008* 07170000
         LA    @6,A00036                                          0521  07180000
*  GEN(BAL   R10,INT012);                /* HEX ADDR TO EBCDIC  X02008* 07190000
         BAL   R10,INT012                                               07200000
         DS    0H                                                       07210000
*  R8=ADDR(LNCORE);                      /* CORE WORDS ADDRESS  X02008* 07220000
         LA    @8,A00036+86                                       0523  07230000
*  R6=ADDR(LNWD1);                       /* PRINT IMAGE ADDRESS X02008* 07240000
         LA    @6,A00036+11                                       0524  07250000
*  DO J=2 TO 1 BY -1;                    /* PARTS OF PRINT LINE X02008* 07260000
         LA    @F,2                                               0525  07270000
         ST    @F,J                                               0525  07280000
*    DO R9=4 TO 1 BY -1;                 /* WORDS PER PART      X02008* 07290000
@DO9E3   LA    @9,4                                               0526  07300000
*      R5=WORD1;                         /* WORD FROM CORE      X02008* 07310000
@DO9DF   MVC   @TEMP4(4),0(@8)                                    0527  07320000
         L     @5,@TEMP4                                          0527  07330000
*      GEN(BAL   R10,INT012);            /* HEX TO EBCDIC       X02008* 07340000
         BAL   R10,INT012                                               07350000
         DS    0H                                                       07360000
*      R8=ADDR(NXTWD);                   /* NEXT WORD TO PRINT  X02008* 07370000
         LA    @8,4(0,@8)                                         0529  07380000
*      R6=ADDR(NXTR6);                   /* NEXT PRINT LOCATION X02008* 07390000
         LA    @6,1(0,@6)                                         0530  07400000
*    END;                                /* END WORDS CHAECK    X02008* 07410000
*    R6=ADDR(MDWAY);                     /* NEXT PART OF LINE   X02008* 07420000
         BCT   @9,@DO9DF                                          0531  07430000
         LA    @6,A00036+48                                       0532  07440000
*  END;                                  /* END PARTS CHECK     X02008* 07450000
*  R3=ADDR(NXWD1T8);                     /* NEXT GROUP OF WORDS X02008* 07460000
         L     @F,J                                               0533  07470000
         BCTR  @F,0                                               0533  07480000
@DO9E2   ST    @F,J                                               0533  07490000
         CH    @F,@D7                                             0533  07500000
         BC    10,@DO9E3                                          0533  07510000
         LA    @3,32(0,@3)                                        0534  07520000
*  R6=ADDR(LNCORE);                      /* PRINT LOCATIONS     X02008* 07530000
         LA    @6,A00036+86                                       0535  07540000
*  DO R4=32 TO 1 BY -1;                  /* BYTES PER LINE      X02008* 07550000
         LA    @4,32                                              0536  07560000
*    IF EBCD=' ' THEN                    /* CHECK CHARACTER     X02008* 07570000
@DO9DB   CLI   0(@6),C' '                                         0537  07580000
*      GOTO INT011A;                     /* BLANK FOUND         X02008* 07590000
         BC    08,INT011A                                         0538  07600000
*    IF EBCD<'A'|                        /* CHECK CHARACTER     X02008* 07610000
*      EBCD>'9' THEN                     /* CHECK CHARACTER     X02008* 07620000
         CLI   0(@6),C'A'                                         0539  07630000
         BC    04,@9D7                                            0539  07640000
         CLI   0(@6),C'9'                                         0539  07650000
         BC    12,@9D6                                            0540  07660000
*        GOTO INT011D;                   /* NOT ALPHA-NUMERIC   X02008* 07670000
         BC    03,INT011D                                         0541  07680000
*    IF EBCD<'J'&                        /* CHECK CHARACTER     X02008* 07690000
*      EBCD>'I' THEN                     /* CHECK CHARACTER     X02008* 07700000
@9D6     CLI   0(@6),C'J'                                         0542  07710000
         BC    10,@9D5                                            0542  07720000
         CLI   0(@6),C'I'                                         0542  07730000
*        GOTO INT011D;                   /* NOT ALPHA-NUMERIC   X02008* 07740000
         BC    03,INT011D                                         0544  07750000
*    IF EBCD<'S'&                        /* CHECK CHARACTER     X02008* 07760000
*      EBCD>'R' THEN                     /* CHECK CHARACTER     X02008* 07770000
@9D4     EQU   *                                                  0545  07780000
@9D5     CLI   0(@6),C'S'                                         0545  07790000
         BC    10,@9D3                                            0545  07800000
         CLI   0(@6),C'R'                                         0545  07810000
*        GOTO INT011D;                   /* NOT ALPHA-NUMERIC   X02008* 07820000
         BC    03,INT011D                                         0547  07830000
*    IF EBCD<'0'&                        /* CHECK CHARACTER     X02008* 07840000
*      EBCD>'Z' THEN                     /* CHECK CHARACTER     X02008* 07850000
@9D2     EQU   *                                                  0548  07860000
@9D3     CLI   0(@6),C'0'                                         0548  07870000
         BC    10,@9D1                                            0548  07880000
         CLI   0(@6),C'Z'                                         0548  07890000
         BC    12,@9D0                                            0549  07900000
*        DO;                             /* NOT ALPHA-NUMERIC   X02008* 07910000
* INT011D:                                                              07920000
*          EBCD='.';                     /* REPLACE BYTE        X02008* 07930000
INT011D  MVI   0(@6),C'.'                                         0551  07940000
*        END;                            /* END CHARACTER CHECK X02008* 07950000
* INT011A:                                                              07960000
*    R6=ADDR(NXTR6);                     /* NEXT CHARACTER      X02008* 07970000
@9D0     EQU   *                                                  0554  07980000
@9D1     EQU   *                                                  0554  07990000
INT011A  LA    @6,1(0,@6)                                         0554  08000000
*  END;                                  /* END LINE CHECK      X02008* 08010000
*  GEN(BAL   R10,INT012D);               /* PRINT A LINE        X02008* 08020000
         BCT   @4,@DO9DB                                          0556  08030000
         BAL   R10,INT012D                                              08040000
         DS    0H                                                       08050000
*  END;                                  /* END LINES PER PAGE  X02008* 08060000
*  PRTBUFR(1)='8B'X;                     /* PAGE EJECT          X02008* 08070000
         BCT   @C,@DO9EC                                          0558  08080000
         MVI   PRTBUFR,X'8B'                                      0559  08090000
*  GOTO INT011;                          /* GO TO MAIN FLOW     X02008* 08100000
         BC    15,INT011                                          0560  08110000
*  RESTRICT(10);                         /* REG IN USE          X02008* 08120000
* INT012:                                                               08130000
*  DO R7=8 TO 1 BY -1;                   /* HEX CHAR PER WORD   X02008* 08140000
INT012   LA    @7,8                                               0562  08150000
*    R4=0;                               /* ZERO WORK REG       X02008* 08160000
@DO9CF   SR    @4,@4                                              0564  08170000
*    GEN(SLDL  R4,4);                    /* HEX CHAR TO CHECK   X02008* 08180000
         SLDL  R4,4                                                     08190000
         DS    0H                                                       08200000
*    GEN(IC    R4,LIST(R4));             /* EBCDIC CHARACTER    X02008* 08210000
         IC    R4,LIST(R4)                                              08220000
         DS    0H                                                       08230000
*    GEN(STC   R4,0(R6));                /* EBCDIC TO PRINT     X02008* 08240000
         STC   R4,0(R6)                                                 08250000
         DS    0H                                                       08260000
*    R6=ADDR(NXTR6);                     /* NEXT PRINT LOCATION X02008* 08270000
         LA    @6,1(0,@6)                                         0568  08280000
*  END;                                  /* END WORD CHECK      X02008* 08290000
*  GOTO R10;                             /* RETURN TO MAIN FLOW X02008* 08300000
         BCT   @7,@DO9CF                                          0569  08310000
         BCR   15,@A                                              0570  08320000
* INT012D:                                                              08330000
*  R1=121;                               /* PRINT LOCATIONS     X02008* 08340000
INT012D  LA    @1,121                                             0571  08350000
*  GEN(PWRT  SIZE=(1));                  /* PRINT A LINE        X02008* 08360000
         PWRT  SIZE=(1)                                                 08370000
         DS    0H                                                       08380000
* INT012F:                                                              08390000
*  PRTBUFR(1)=' ';                       /* CLEAR CONTROL CHAR  X02008* 08400000
INT012F  MVI   PRTBUFR,C' '                                       0574  08410000
*  PRTBUFR(2:124)=PRTBUFR(1:123);        /* CLEAR TOTAL BUFFER  X02008* 08420000
         MVC   PRTBUFR+1(123),PRTBUFR                             0576  08430000
*  GOTO R10;                             /* RETURN FROM ROUTINE X02008* 08440000
         BCR   15,@A                                              0577  08450000
*  RELEASE(3,4,5,6,7,8,9,10);                                           08460000
* INT013:                                                               08470000
*  IF RTOSTAE='0'B THEN                  /* TEST TERMINATION    X02008* 08480000
INT013   TM    A00054,B'00000001'                                 0579  08490000
*    GOTO INT014;                        /* NORMAL ENDING       X02008* 08500000
         BC    08,INT014                                          0581  08510000
*  UTSCAL='0'B;                          /* DELETE MODULES            * 08520000
         NI    A00054,B'01111111'                                 0582  08530000
*  NURUN='1'B;                           /* NEW RUN             YM3494* 08540000
         OI    A00000,B'01000000'                                 0583  08550000
*  IF SUTMSG='1'B THEN                   /* SHOULD SCHED RESUME       * 08560000
         TM    A00056,B'00000100'                                 0584  08570000
         BC    12,@9CB                                            0584  08580000
*  GEN(BAL   R14,RESUM48);               /* RESUME SCHEDULER          * 08590000
         BAL   R14,RESUM48                                              08600000
         DS    0H                                                       08610000
*  IF DEVICE='20'X THEN                  /* CHECK DEVICE              * 08620000
@9CB     CLI   DEVICE,X'20'                                       0586  08630000
         BC    07,@9CA                                            0586  08640000
*    DO;                                 /* DASD DEVICE INVOLVED      * 08650000
*          R1=ADDR(ALOC);                /* PARAMETER LIST FOR ALOCAT * 08660000
         LA    @1,ALOC                                            0588  08670000
*          R15=TAB28;                    /* TRANSIENT MANAGER ENTRY */  08680000
         L     @F,TAB28                                           0589  08690000
*          GEN(BALR  R14,R15);           /* LINK TO ALOCAT MODULE */    08700000
         BALR  R14,R15                                                  08710000
         DS    0H                                                       08720000
*           END;                                                        08730000
*  IF DEVICE='80'X THEN                  /* CHECK DEVICE              * 08740000
@9CA     CLI   DEVICE,X'80'                                       0592  08750000
         BC    07,@9C9                                            0592  08760000
*    DO;                                 /* TAPE DEVICE INVOLVED      * 08770000
*      TAPEHDR='1'B;                     /* INDICATE TAPE             * 08780000
         OI    A00051,B'00000010'                                 0594  08790000
*           CALL IFDOLT52;              /*GOTO DATA PROTECTION MODULE   08800000
*                                         FOR RESTORING TAPE LABEL*/    08810000
         L     @F,@V2              ADDRESS OF IFDOLT52            0595  08820000
         BALR  @E,@F                                              0595  08830000
*           END;                                                        08840000
*  IF RETAINAC='1'B THEN                 /* CHECK REI                 * 08850000
@9C9     TM    A00058,B'10000000'                                 0598  08860000
         BC    12,@9C8                                            0598  08870000
*           DO;                         /* REI ACTIVE           S20203* 08880000
*           GEN(IFDMOD CALL='56');      /* BRANCH TO REI TERM   S20203* 08890000
         IFDMOD CALL='56'                                               08900000
         DS    0H                                                       08910000
*           END;                         /*                     S20203* 08920000
*  IF REMOTE='1'B THEN                   /* REMOTE ENVOLVED           * 08930000
@9C8     TM    A00004,B'00100000'                                 0602  08940000
         BC    12,@9C7                                            0602  08950000
*           DO;                          /*YES -                        08960000
*      UTSCAL='0'B;                      /* DELETE MODULES            * 08970000
         NI    A00054,B'01111111'                                 0604  08980000
*             GEN(IFDMOD CALL='74');                                    08990000
         IFDMOD CALL='74'                                               09000000
         DS    0H                                                       09010000
*                                        /*BRANCH TO LINE DISABLING     09020000
*                                        /*  MODULE WITH PARAMETER ZERO 09030000
*           END;                                                        09040000
* INT013B:                               /*                     YM5414* 09050000
*      R1=FUNC14;                        /* FUNCTION CODE             * 09060000
@9C7     EQU   *                                                  0609  09070000
INT013B  L     @1,FUNC14                                          0609  09080000
*         R0=ADDR(ROPT);                 /* SET UP REG 0        S21052* 09090000
         LA    @0,ROPT                                            0611  09100000
*      VID=MID1;                    /* PLACE MODULE ID IN ROPT   21937* 09110000
         MVC   VID(2),MID1                                        0612  09120000
*      GEN(SVC   59);                    /* SVC CLEANUP               * 09130000
         SVC   59                                                       09140000
         DS    0H                                                       09150000
* INT014:                                                               09160000
*      SAVER(5)=0;                       /* RETURN CODE TO ABEND      * 09170000
INT014   SR    @F,@F                                              0614  09180000
         L     @3,4(0,@D)                                         0614  09190000
         ST    @F,16(0,@3)                                        0614  09200000
*  GEN;                                 /* CLOSE ALL DATA SETS  Y02008* 09210000
CLOSEM   CLOSE (0,,0,,0,,0,,0,,0,,0,)  DUMMY CLOSE               Y02008 09220000
         ORG   CLOSEM+4                RESOLVE DCB ADDRESSES     Y02008 09230000
         DC    V(OLTDCB)               OLTCDSDD DCB   IFDOLT12   Y02008 09240000
         DC    V(DPRDCB)               DIAGMSG DCB    IFDOLT39   Y02008 09250000
         DC    V(SYMLIB)               SYMSYM DCB     IFDOLT30   Y02008 09260000
         DC    V(CNTRLREC)             CNTRLIN DCB    IFDOLT30   Y02008 09270000
         DC    V(READDCB)              INPUT DCB      IFDOLT51   Y02008 09280000
         DC    V(XDCB)                 SERLOG DCB     IFDOLT46   Y02008 09290000
         DC    X'80'                   END OF LIST               Y02008 09300000
         DC    VL3(ACCUMDCB)           ACCIN DCB      IFDOLT46   Y02008 09310000
         ORG                                                            09320000
         DS    0H                                                       09330000
* INT005:                                                               09340000
*  RETURN;                               /* RETURN TO CALLER */         09350000
         BC    15,@EL01                                           0617  09360000
*  GEN(CNOP  0,4);                                                      09370000
         CNOP  0,4                                                      09380000
         DS    0H                                                       09390000
* INT013A:                               /* ESTAE EXIT          YM5414* 09400000
*  GENERATE;                                                            09410000
INT013A  EQU   *                                                  0620  09420000
         BALR  15,0                    LOCATE SELF               Y02008 09430000
         USING *,15                    ADDRESSABILITY            Y02008 09440000
         CH    0,*+16                  DID ESTAE PROVIDE SAVE    Y02008X09450000
                                       AREA                      Y02008 09460000
         BNE   *+86                    YES, CONTINUE             Y02008 09470000
         LA    13,18(15)               USE MY SAVE AREA          Y02008 09480000
         B     *+78                    CONTINUE                  Y02008 09490000
         DC    H'12'                   CODE 0C                   Y02008 09500000
         DC    18F'0'                  MY ESTAE SAVE AREA        Y02008 09510000
         DROP  15                                                       09520000
         DS    0H                                                       09530000
* GEN(STM   R14,R12,12(R13));            /* SAVE REGS           YM5414* 09540000
         STM   R14,R12,12(R13)                                          09550000
         DS    0H                                                       09560000
*  R1='14'X;                             /* TOTAL CLEANUP-SVC 59YM5414* 09570000
         LA    @1,X'14'                                           0623  09580000
*  GEN(SVC  59);                         /* GO CLEANUP          YM5414* 09590000
         SVC  59                                                        09600000
         DS    0H                                                       09610000
*  GEN(LM    R14,R12,12(R13));           /* RESTORE REGS        YM5414* 09620000
         LM    R14,R12,12(R13)                                          09630000
         DS    0H                                                       09640000
*  GEN(BR   R14);                        /* RETURN TO CALLER    YM5414* 09650000
         BR   R14                                                       09660000
         DS    0H                                                       09670000
* RESUM48:                                                              09680000
*  ABCOND='1'B;                          /* ABEND CONDITION           * 09690000
RESUM48  OI    A00039,B'00000001'                                 0627  09700000
*  GEN(STM   R14,R12,12(R13));           /* SAVE REGS                 * 09710000
         STM   R14,R12,12(R13)                                          09720000
         DS    0H                                                       09730000
*  R15=R13;                              /* SAVE AREA ADDRESS         * 09740000
         LR    @F,@D                                              0630  09750000
*  R13=SCHEDSA;                          /* SCHEDULER SAVE AREA       * 09760000
         L     @D,SCHEDSA                                         0631  09770000
*  CHNBK=R15;                            /* STAE SAVE AREA            * 09780000
         ST    @F,4(0,@D)                                         0632  09790000
*  GEN(LM    R14,R12,12(R13));           /* LOAD SCHEDULER REGS       * 09800000
         LM    R14,R12,12(R13)                                          09810000
         DS    0H                                                       09820000
*  GOTO R14;                             /* RETURN TO SCHEDULER       * 09830000
         BCR   15,@E                                              0634  09840000
*  GEN;                                                                 09850000
         CNOP  0,4                 ALIGNMENT                            09860000
ALOC     DC    XL2'02'                  MACRO LEVEL                     09870000
         DC    CL2'22'                  MACRO ID                        09880000
         DC    3F'00'                   NA                              09890000
         DC    AL1(2)                   SCRATCH FUNCTION                09900000
         DS    0H                                                       09910000
         DS    0H                                                       09920000
* END IFDOLT00;                                                         09930000
@EL01    L     @D,4(0,@D)                                         0636  09940000
         LM    @E,@C,12(@D)                                       0636  09950000
         BCR   15,@E                                              0636  09960000
@DATA1   EQU   *                                                        09970000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           09980000
@1       EQU   01                                                       09990000
@2       EQU   02                                                       10000000
@3       EQU   03                                                       10010000
@4       EQU   04                                                       10020000
@5       EQU   05                                                       10030000
@6       EQU   06                                                       10040000
@7       EQU   07                                                       10050000
@8       EQU   08                                                       10060000
@9       EQU   09                                                       10070000
@A       EQU   10                                                       10080000
@B       EQU   11                                                       10090000
@C       EQU   12                                                       10100000
@D       EQU   13                                                       10110000
@E       EQU   14                                                       10120000
@F       EQU   15                                                       10130000
@D3      DC    F'1048576'                                               10140000
@D4      DC    F'65536'                                                 10150000
@D1      DC    H'4'                                                     10160000
@D2      DC    H'8'                                                     10170000
@D5      DC    H'4096'                                                  10180000
@D6      DC    H'6'                                                     10190000
@D7      DC    H'1'                                                     10200000
@MVC     MVC   0(1,@A),0(@E)                                            10210000
@A1      DC    A(IFDOLT00)                                              10220000
@V2      DC    V(IFDOLT52)                                              10230000
         DS    0F                                                       10240000
@X7      DC    X'7FFF'                                                  10250000
         DS    0D                                                       10260000
@DATA    EQU   *                                                        10270000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   10280000
X        EQU   00000000            FULLWORD INTEGER                     10290000
R0       EQU   00000000            FULLWORD POINTER REGISTER            10300000
R1       EQU   00000001            FULLWORD POINTER REGISTER            10310000
R2       EQU   00000002            FULLWORD POINTER REGISTER            10320000
R3       EQU   00000003            FULLWORD POINTER REGISTER            10330000
R4       EQU   00000004            FULLWORD POINTER REGISTER            10340000
R5       EQU   00000005            FULLWORD POINTER REGISTER            10350000
R6       EQU   00000006            FULLWORD POINTER REGISTER            10360000
R7       EQU   00000007            FULLWORD POINTER REGISTER            10370000
R8       EQU   00000008            FULLWORD POINTER REGISTER            10380000
R9       EQU   00000009            FULLWORD POINTER REGISTER            10390000
R10      EQU   00000010            FULLWORD POINTER REGISTER            10400000
R11      EQU   00000011            FULLWORD POINTER REGISTER            10410000
R12      EQU   00000012            FULLWORD POINTER REGISTER            10420000
R13      EQU   00000013            FULLWORD POINTER REGISTER            10430000
R14      EQU   00000014            FULLWORD POINTER REGISTER            10440000
R15      EQU   00000015            FULLWORD POINTER REGISTER            10450000
A00009   EQU   00000000            132 BYTE(S) ON WORD                  10460000
A00010   EQU   A00009+00000000     FULLWORD POINTER                     10470000
IFD102   EQU   A00009+00000004     FULLWORD POINTER                     10480000
A00011   EQU   A00009+00000008     28 BYTE(S)                           10490000
IFD134   EQU   A00009+00000036     FULLWORD POINTER                     10500000
A00012   EQU   A00009+00000040     88 BYTE(S)                           10510000
IFD899   EQU   A00009+00000128     FULLWORD POINTER                     10520000
MSG102   EQU   00000000            45 BYTE(S) ON WORD                   10530000
A00013   EQU   MSG102+00000000     25 BYTE(S)                           10540000
MPMSG    EQU   MSG102+00000025     20 BYTE(S)                           10550000
A00014   EQU   00000000            67 BYTE(S) ON WORD                   10560000
A00015   EQU   A00014+00000000     65 BYTE(S)                           10570000
MSG899ID EQU   A00014+00000065     2 BYTE(S)                            10580000
NAPAPTRS EQU   00000000            12 BYTE(S) ON WORD                   10590000
A00018   EQU   NAPAPTRS+00000000   4 BYTE(S)                            10600000
NORMABNM EQU   NAPAPTRS+00000004   8 BYTE(S)                            10610000
RESTAB   EQU   IFDOLT00+00000032   64 BYTE(S)                           10620000
ADRCVT   EQU   00000016            FULLWORD POINTER                     10630000
TCBWPTR  EQU   00000000            FULLWORD POINTER                     10640000
A00019   EQU   00000000            8 BYTE(S) ON WORD                    10650000
A00020   EQU   A00019+00000000     FULLWORD POINTER                     10660000
ADRTCB   EQU   A00019+00000004     FULLWORD POINTER                     10670000
A00021   EQU   00000000            12 BYTE(S) ON WORD                   10680000
A00022   EQU   A00021+00000000     2*FULLWORD POINTER                   10690000
FPQE     EQU   A00021+00000008     FULLWORD POINTER                     10700000
A00023   EQU   00000000            24 BYTE(S) ON WORD                   10710000
A00024   EQU   A00023+00000000     5*FULLWORD POINTER                   10720000
REGSZ    EQU   A00023+00000020     FULLWORD INTEGER                     10730000
CORELNGT EQU   @DATA+00000072      8 BYTE(S) ON WORD                    10740000
         ORG   CORELNGT+00000000                                        10750000
MINLNGTH EQU   *                   FULLWORD INTEGER                     10760000
         DC    FL4'4096'                                                10770000
MAXLNGTH EQU   CORELNGT+00000004   FULLWORD INTEGER                     10780000
RESULTS  EQU   @DATA+00000080      8 BYTE(S) ON WORD                    10790000
A00025   EQU   RESULTS+00000000    4 BYTE(S)                            10800000
AREASIZE EQU   RESULTS+00000004    FULLWORD INTEGER                     10810000
SCTOL    EQU   00000034            2 BYTE(S)                            10820000
         ORG   @DATA+00000088                                           10830000
I        EQU   *                   FULLWORD INTEGER                     10840000
         DC    FL4'0'                                                   10850000
A00026   EQU   I+00000000          2 BYTE(S)                            10860000
OLTSP    EQU   I+00000002          2 BYTE(S)                            10870000
STAEDT   EQU   00000000            104 BYTE(S)                          10880000
A00027   EQU   STAEDT+00000000     4 BYTE(S)                            10890000
ABNDCC   EQU   STAEDT+00000004     4 BYTE(S)                            10900000
SYS222   EQU   *                   4 BYTE(S)                            10910000
         DC    X'00222000'                                              10920000
SVSTAEDT EQU   00000002            104 BYTE(S)                          10930000
CHNBK    EQU   00000004            FULLWORD POINTER                     10940000
FUNC14   EQU   *                   FULLWORD INTEGER                     10950000
         DC    FL4'0'                                                   10960000
A00028   EQU   FUNC14+00000000     2 BYTE(S)                            10970000
         ORG   FUNC14+00000002                                          10980000
A00029   EQU   *                   2 BYTE(S)                            10990000
         DC    X'0014'                                                  11000000
TMRADR   EQU   *                   FULLWORD POINTER                     11010000
         DC    VL4(IFDOLT18)                                            11020000
COMADR   EQU   *                   FULLWORD POINTER                     11030000
         DC    VL4(IFDOLT23)                                            11040000
CECOMRT  EQU   *                   FULLWORD POINTER                     11050000
         DC    VL4(IFDOLT30)                                            11060000
LSTADR   EQU   @DATA+00000088      FULLWORD INTEGER                     11070000
H        EQU   *                   FULLWORD INTEGER                     11080000
         DC    FL4'15'                                                  11090000
A00030   EQU   H+00000000          2 BYTE(S)                            11100000
RHFWD    EQU   H+00000002          HALFWORD INTEGER                     11110000
A00031   EQU   H+00000002          1 BYTE(S)                            11120000
LBYT4    EQU   H+00000003          1 BYTE(S)                            11130000
J        EQU   *                   FULLWORD INTEGER                     11140000
         DC    FL4'0'                                                   11150000
A00032   EQU   *                   1 BYTE(S)                            11160000
         DC    X'00'                                                    11170000
DMPIND   EQU   A00032+00000000     2 BIT(S)                             11180000
INLN     EQU   A00032+00000000     1 BIT(S)                             11190000
FNLN     EQU   A00032+00000000     1 BIT(S)                             11200000
A00033   EQU   A00032+00000000     1 BIT(S)                             11210000
LIST     EQU   *                   16 BYTE(S)                           11220000
         DC    C'0123456789ABCDEF'                                      11230000
A00034   EQU   00000000            32 BYTE(S)                           11240000
WORD1    EQU   A00034+00000000     4 BYTE(S)                            11250000
NXTWD    EQU   A00034+00000004     4 BYTE(S)                            11260000
A00035   EQU   00000000            64 BYTE(S) ON WORD                   11270000
WD1T8    EQU   A00035+00000000     32 BYTE(S)                           11280000
NXWD1T8  EQU   A00035+00000032     32 BYTE(S)                           11290000
WD1T8A   EQU   00000001            31 BYTE(S)                           11300000
LGWRTFD  EQU   00000092            8 BYTE(S)                            11310000
DUMPHDR  EQU   *                   19 BYTE(S)                           11320000
         DC    C'OLTS PARTITION AREA'                                   11330000
EBCD     EQU   00000000            1 BYTE(S)                            11340000
NXTR6    EQU   00000001            1 BYTE(S)                            11350000
CVT      EQU   00000000            316 BYTE(S) ON WORD                  11360000
A00038   EQU   CVT+00000000        312 BYTE(S)                          11370000
CVTEORM  EQU   CVT+00000312        FULLWORD INTEGER                     11380000
PARMFLD  EQU   00000000            5 BYTE(S) ON WORD                    11390000
COUNT    EQU   PARMFLD+00000000    HALFWORD INTEGER                     11400000
FLD      EQU   PARMFLD+00000002    3 BYTE(S)                            11410000
PSWHDR   EQU   *                   12 BYTE(S)                           11420000
         DC    C'PSW AT ABEND'                                          11430000
REGSHDR  EQU   *                   13 BYTE(S)                           11440000
         DC    C'REGS AT ABEND'                                         11450000
REGID07  EQU   *                   9 BYTE(S)                            11460000
         DC    C'REGS 0-7 '                                             11470000
REGID8F  EQU   *                   4 BYTE(S)                            11480000
         DC    C'8-15'                                                  11490000
STAEREG  EQU   00000000            FULLWORD POINTER                     11500000
CHAINBK  EQU   00000004            FULLWORD POINTER                     11510000
SAVER    EQU   00000000            18*FULLWORD INTEGER                  11520000
         ORG   @DATA                                                    11530000
         DS    00000194C                                                11540000
@TEMPS   DS    0F                                                       11550000
@TEMP4   DC    F'0'                                                     11560000
DSECT00  IFDCOM                                                         11570000
IFDTCB   IKJTCB SYS=BOTH,DSECT=YES      TCB MAP                X02008   11580000
IFDOLT00 CSECT                                                          11590000
A00000   EQU   CESWT3+00000000     1 BYTE(S)                            11600000
A00001   EQU   A00000+00000000     1 BIT(S)                             11610000
NURUN    EQU   A00000+00000000     1 BIT(S)                             11620000
A00002   EQU   A00000+00000000     1 BIT(S)                             11630000
A00003   EQU   ROPT+00000000       12 BYTE(S) ON WORD                   11640000
ROPTPTR1 EQU   A00003+00000000     FULLWORD POINTER                     11650000
ROPTPTR2 EQU   A00003+00000004     FULLWORD POINTER                     11660000
ROPTPTR3 EQU   A00003+00000008     FULLWORD POINTER                     11670000
VID      EQU   WKSVC+00000002      2 BYTE(S)                            11680000
MID1     EQU   MCT+00000010        2 BYTE(S)                            11690000
A00004   EQU   CESWT7+00000000     1 BYTE(S)                            11700000
A00005   EQU   A00004+00000000     2 BIT(S)                             11710000
REMOTE   EQU   A00004+00000000     1 BIT(S)                             11720000
A00006   EQU   A00004+00000000     3 BIT(S)                             11730000
VIRTSPC  EQU   A00004+00000000     1 BIT(S)                             11740000
A00007   EQU   A00004+00000000     1 BIT(S)                             11750000
A00008   EQU   CESWT10+00000000    1 BYTE(S)                            11760000
MPSYS    EQU   A00008+00000000     1 BIT(S)                             11770000
A00016   EQU   PARTITEM+00000000   8 BYTE(S) ON WORD                    11780000
PARADR   EQU   A00016+00000000     FULLWORD POINTER                     11790000
A00017   EQU   A00016+00000000     3 BYTE(S)                            11800000
PAR4     EQU   A00016+00000003     1 BYTE(S)                            11810000
PARSZ    EQU   A00016+00000004     FULLWORD POINTER                     11820000
A00036   EQU   PRTBUFR+00000001    119 BYTE(S) ON WORD                  11830000
LINE     EQU   A00036+00000000     11 BYTE(S)                           11840000
LNWD1    EQU   A00036+00000011     37 BYTE(S)                           11850000
MDWAY    EQU   A00036+00000048     37 BYTE(S)                           11860000
ASTLN    EQU   A00036+00000085     1 BYTE(S)                            11870000
LNCORE   EQU   A00036+00000086     32 BYTE(S)                           11880000
ASTFINIS EQU   A00036+00000118     1 BYTE(S)                            11890000
A00037   EQU   A00036+00000118     1 BYTE(S)                            11900000
LNCOR1   EQU   PRTBUFR+00000088    31 BYTE(S)                           11910000
DEVICE   EQU   CHASCT+00000018     1 BYTE(S)                            11920000
A00039   EQU   MCT1ADR+00000003    1 BYTE(S)                            11930000
A00040   EQU   A00039+00000000     7 BIT(S)                             11940000
ABCOND   EQU   A00039+00000000     1 BIT(S)                             11950000
A00041   EQU   CHASCT+00000003     1 BYTE(S) ON WORD                    11960000
A00042   EQU   A00041+00000000     1 BYTE(S)                            11970000
A00043   EQU   A00041+00000000     3 BIT(S)                             11980000
PARPRIN  EQU   A00041+00000000     1 BIT(S)                             11990000
A00044   EQU   A00041+00000000     1 BIT(S)                             12000000
A00045   EQU   CHASCT+00000033     1 BYTE(S)                            12010000
A00046   EQU   A00045+00000000     5 BIT(S)                             12020000
EXECKLEN EQU   A00045+00000000     1 BIT(S)                             12030000
A00047   EQU   A00045+00000000     2 BIT(S)                             12040000
A00048   EQU   CHASCT+00000036     1 BYTE(S)                            12050000
A00049   EQU   A00048+00000000     1 BIT(S)                             12060000
CLEANUP  EQU   A00048+00000000     1 BIT(S)                             12070000
A00050   EQU   A00048+00000000     6 BIT(S)                             12080000
A00051   EQU   CESWT2+00000000     1 BYTE(S)                            12090000
A00052   EQU   A00051+00000000     6 BIT(S)                             12100000
TAPEHDR  EQU   A00051+00000000     1 BIT(S)                             12110000
A00053   EQU   A00051+00000000     1 BIT(S)                             12120000
A00054   EQU   CESWT6+00000000     1 BYTE(S) ON WORD                    12130000
UTSCAL   EQU   A00054+00000000     1 BIT(S)                             12140000
A00055   EQU   A00054+00000000     6 BIT(S)                             12150000
RTOSTAE  EQU   A00054+00000000     1 BIT(S)                             12160000
A00056   EQU   CESWT8+00000000     1 BYTE(S) ON WORD                    12170000
A00057   EQU   A00056+00000000     5 BIT(S)                             12180000
SUTMSG   EQU   A00056+00000000     1 BIT(S)                             12190000
A00058   EQU   CESWTR+00000000     1 BYTE(S)                            12200000
RETAINAC EQU   A00058+00000000     1 BIT(S)                             12210000
A00059   EQU   A00058+00000000     7 BIT(S)                             12220000
@DATEND  EQU   *                                                        12230000
@9FB     EQU   INT013B                                                  12240000
@9FA     EQU   INT013B                                                  12250000
@9E6     EQU   INT013                                                   12260000
@9E5     EQU   @9E4                                                     12270000
@9D7     EQU   INT011D                                                  12280000
INT005   EQU   @EL01                                                    12290000
         END   IFDOLT00,(C'PL/S',1400,77117)                            12300000
./  ADD  SSI=81171499,NAME=IFDOLT03
         TITLE 'IFDOLT03 DATA PROTECT TAPE'                             00010000
         TITLE 'IFDOLT03  DATA PROTECT - TAPE AND UNIT RECORD' @ZA15468 00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT03 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT03 28 APR 78'                             0002  00070000
         STM   @E,@C,12(@D)                                       0002  00080000
         BALR  @B,0                                               0002  00090000
@PSTART  DS    0H                                                 0002  00100000
         USING @PSTART+00000,@B                                   0002  00110000
         ST    @D,@SAV001+4                                       0002  00120000
         LA    @F,@SAV001                                         0002  00130000
         ST    @F,8(0,@D)                                         0002  00140000
         LR    @D,@F                                              0002  00150000
*  GEN(USING CHASCT,2);                  /* COMMON AREA BASE REGISTER * 00160000
         USING CHASCT,2                                                 00170000
         DS    0H                                                       00180000
*  /******************************************************************* 00190000
*  /*                                                                 * 00200000
*  /*                CCW STRING FOR READING TAPE LABEL                * 00210000
*  /*                                                                 * 00220000
*  /******************************************************************* 00230000
*  GEN DATA;                                                            00240000
*                                                                       00250000
*                                                                       00260000
*  GEN DATA;                                                            00270000
*  GEN DATA;                                                            00280000
*         GEN DATA;                                                     00290000
*                                                                       00300000
* GENERATE DATA;                                                        00310000
*                                                                       00320000
*                                                                       00330000
*  /******************************************************************* 00340000
*  /*                                                                 * 00350000
*  /*                     DECLARED  REGISTERS                         * 00360000
*  /*                                                                 * 00370000
*  /******************************************************************* 00380000
*  DCL R0  REG(0)  PTR;                                                 00390000
*  DCL R1  REG(1)  PTR;                                                 00400000
*  DCL R2  REG(2)  PTR;                                                 00410000
*  DCL R3  REG(3)  PTR;                                                 00420000
*  DCL R4  REG(4)  PTR;                                                 00430000
*  DCL R5  REG(5)  PTR;                                                 00440000
*  DCL R6  REG(6)  PTR;                                                 00450000
*  DCL R7  REG(7)  PTR;                                                 00460000
*  DCL R8  REG(8)  PTR;                                                 00470000
*  DCL R9  REG(9)  PTR;                                                 00480000
*  DCL I REG(8);                         /* INDEX REGISTER      S21052* 00490000
*  DCL R10 REG(10) PTR;                                                 00500000
*  DCL R11 REG(11) PTR;                                                 00510000
*  DCL R12 REG(12) PTR;                                                 00520000
*  DCL R13 REG(13) PTR;                                                 00530000
*  DCL R14 REG(14) PTR;                                                 00540000
*  DCL R15 REG(15) PTR;                                                 00550000
*  RESTRICT(2,4,5,6,7,8);                                               00560000
*  DCL CESWT3 CHAR(1) GENERATED;         /* OLTEP SWITCHES       M4506* 00570000
*  DCL 1 * CHAR(1) BASED(ADDR(CESWT3)),  /* OLTEP SWITCHES       M4506* 00580000
*         2 * BIT(3),                    /* NA                   M4506* 00590000
*         2 GRBCTL BIT(1),               /* GRAB IN CONTROL      M4506* 00600000
*         2 SUSDEL BIT(1),               /* SUSPENDED DELETION   M4506* 00610000
*           3 * BIT(1);                  /* NA                   M4506* 00620000
*                                                                       00630000
*                                                                       00640000
*                                                                       00650000
*                                                                       00660000
*                                                                       00670000
*                                                                       00680000
*  /******************************************************************* 00690000
*  /*                                                                 * 00700000
*  /*                   SECTION CONTROL TABLE                         * 00710000
*  /*                                                                 * 00720000
*  /******************************************************************* 00730000
*  DCL CHASCT GENERATED;            /* SECTION CONTROL TABLE          * 00740000
*  DCL 1 * CHAR(1) BASED(ADDR(CHASCT)+10),  /* SCT STRUCTURE          * 00750000
*        3 * BIT(1),                /* NA                             * 00760000
*        3 FPM BIT(1);              /* FILE PROTECT MODE BIT          * 00770000
*                                                                       00780000
*  DCL MSSSTAT CHAR(1) GENERATED;       /* MSS STATUS BYTE    @ZA15468* 00790000
*  DCL 1 * BASED(ADDR(MSSSTAT)),        /*                    @ZA15468* 00800000
*        3 FINITSW BIT(1),              /* FUNCTIONALLY INIT  @ZA15468* 00810000
*        3 DINITSW BIT(1),              /* DIAGNOSTICALLY INIT@ZA15468* 00820000
*        3 INITSW  BIT(1),              /* INITIALIZED BIT    @ZA15468* 00830000
*        3   *     BIT(5);              /* SPARE BITS         @ZA15468* 00840000
*                                                                       00850000
*  /******************************************************************* 00860000
*  /*                                                                 * 00870000
*  /*           EXIO PARAMETER LIST                                   * 00880000
*  /*                                                                 * 00890000
*  /******************************************************************* 00900000
*                                                                       00910000
*                                       /* IO EFFECTOR CNTL BLK Y02906* 00920000
*                                       /* IN COMMON AREA       Y02906* 00930000
*  DCL EFCTRCB CHAR(20) GEND;           /* EFFECTOR CONTROL BLOCK     * 00940000
*  DCL CCWPTR PTR(31) GEND;             /* CCW LIST POINTER     Y02906* 00950000
*  DCL DVTPTR PTR(31) GEND;             /* DEVICE TABEL POINTER Y02906* 00960000
*  DCL FLGA   BIT(8)  GEND;             /* FLAG BYTE 1          Y02906* 00970000
*                                                                       00980000
*  DCL FLGB   BIT(8)  GEND;             /* FLAG BYTE 2          Y02906* 00990000
* DCL 1 FLG1A BIT(8) BASED(ADDR(FLGA)),                                 01000000
*       3 BYPASS BIT(1);                 /* BYPASS PREFIX       Y02906* 01010000
*                                                                       01020000
*                                                                       01030000
*  DCL 1 FLG2 BIT(8) BASED(ADDR(FLGB)),                       /*Y02906* 01040000
*        3 INTCALL BIT(1),              /* INTERNAL CALL FOR IO Y02906* 01050000
*        3 MODEREQ BIT(1);              /* IF ON MODE SET REQ   Y02906* 01060000
*  DCL FILEMSK CHAR(1) GEND;            /* FILE MSK FOR IOEFFEC Y02906* 01070000
* DCL SNSCNT CHAR(1) GEND;                                              01080000
* DCL TECBPTRX PTR(31) GEND;                                            01090000
*  DCL IORTNADR GEND;                   /* ADDR OF IO EFFECTOR  Y02906* 01100000
*         DCL 1 WAITLST CHAR(16) BDY(WORD), /* WAITIO LIST      Y02906* 01110000
*              3 XMGR CHAR(1) INIT('00'X), /* TRANS MGR STUFF   Y02906* 01120000
*              3 LVL CHAR(1) INIT('02'X),/* WAITIO LVL          Y02906* 01130000
*              3 MODID CHAR(2) INIT('36'), /* IFDOLT36 ID       Y02906* 01140000
*              3 TECBPTR PTR(31) INIT(ADDR(TECB)),/* TECB ADDR  Y02906* 01150000
*              3 CDSPTR PTR(31) INIT(0),  /*CDS = 0             Y02906* 01160000
*              3 FLG BIT(8) INIT('80'X), /* SET WAIT = YES      Y02906* 01170000
*               5 WAITYES BIT(1),        /* FLAG TO 1           Y02906* 01180000
*              3 TIME CHAR(2) INIT('001E'X); /* TIME IN SECONDS Y02906* 01190000
*                                                                       01200000
*                                                                       01210000
*                                                                       01220000
*  /******************************************************************* 01230000
*  /*                                                                 * 01240000
*  /*                COMMUNICATION SWITCH STRUCTURE                   * 01250000
*  /*                                                                 * 01260000
*  /******************************************************************* 01270000
*                                                                       01280000
*  DCL CESWT CHAR(5) GENERATED;     /* COMMUNICATION SWITCHES         * 01290000
*  DCL 1 * BASED(ADDR(CESWT)),      /*                                * 01300000
*        3 * BIT(8),                /* CESWT                          * 01310000
*          5 * BIT(1),              /* NA                             * 01320000
*          5 PROTECT BIT(1),        /* DP FOR PRIMARY OR SEC DEVICE   * 01330000
*          5 * BIT(6),              /* NA                             * 01340000
*        3 * BIT(8),                /* CESWT1                         * 01350000
*          5 * BIT(1),              /* NA                             * 01360000
*          5 SEEK2321 BIT(1),       /* SEEK ONLY COMMANDS ON 2321     * 01370000
*          5 SECONLOK BIT(1),       /* SEC DEV ONLINE OK              * 01380000
*          5 * BIT(1),              /* NA                             * 01390000
*          5 FILMSK BIT(1),         /* ALLOWS FILE MASK CHANGES       * 01400000
*          5 T2321 BIT(1),          /* T2321 IS DEV BEING TESTED      * 01410000
*          5 ONLINEOK BIT(1),       /* DEV IS ONLINE PROCEED          * 01420000
*          5 * BIT(1),              /* NA                             * 01430000
*        3 * BIT(8),                /* CESWT2                         * 01440000
*          5 NDCFO BIT(1),          /* PREV OCCUR OF DYN COMM INTERVAL* 01450000
*          5 DPONDEV BIT(1),        /* DP HAS BEEN DONE ON THIS DEV   * 01460000
*          5 * BIT(1),              /* NA                             * 01470000
*          5 CHANTEST BIT(1),       /* DATA PROT TO BE DONE ON CHAN   * 01480000
*          5 * BIT(1),              /* NA                             * 01490000
*          5 * BIT(1),              /* NA                             * 01500000
*          5 TAPEHDR BIT(1),        /* TAPE HEADER IS TO BE WRITTEN   * 01510000
*         5 AMERLDV BIT(1),              /* ASPEN DEVICE        S21052* 01520000
*        3 * BIT(8),                /* CESWT3                         * 01530000
*          5 * BIT(1),              /* NA                             * 01540000
*          5 BYPALDEV BIT(1),       /* BYPASS ALL TESTS AND DEVICES   * 01550000
*          5 BYPDEV BIT(1),         /* BYPASS TESTS ON THIS DEVICE    * 01560000
*          5 * BIT(1),              /* NA                             * 01570000
*          5 * BIT(1),              /* NA                             * 01580000
*          5 * BIT(1),              /* NA                             * 01590000
*          5 * BIT(1),              /* NA                             * 01600000
*          5 * BIT(1);              /* NA                             * 01610000
*                                                                       01620000
*                                                                       01630000
* /******************************************************************** 01640000
* /*                                                                  * 01650000
* /*                      DEVICE TABLE STRUCTURE                      * 01660000
* /*                                                                  * 01670000
* /******************************************************************** 01680000
*                                                                       01690000
*         DCL  1 * BASED(R7),          /*                       S21050* 01700000
*         3 DEVADEB CHAR(8),             /* DEV ADDR IN EBCDIC        * 01710000
*                3 UCBAD POINTER(31),  /* UCB ADDR (2BYTES)     S21050* 01720000
*                3 DEVFLG1 CHAR(1),    /* FLAG BYTE #1          S21050* 01730000
*                 5 STATUS BIT(1),     /* ON LINE VS. OFF-LINE  S21050* 01740000
*                 5 PRIMARY BIT(1),    /* PRIMARY BIT           S21050* 01750000
*                 5 DPDONE  BIT(1),    /* D.P. COMPLETE         S21050* 01760000
*                 5 *       BIT(3),    /* FILL                  S21050* 01770000
*                 5 FILEPROT BIT(1),   /* F.P. MODE OPERATION   S21050* 01780000
*                 5 *       BIT(1),    /* FILL                  S21050* 01790000
*                3 DEVFLG2 CHAR(1),    /* FLAG BYTE # 2         S21050* 01800000
*           5 * BIT(2),                  /* N/A                 S21050* 01810000
*           5 CEVOL BIT(1),              /* CE VOL ON DEVICE    S21050* 01820000
*                 5   STDLABL BIT(1),  /* STANDARD TAPE LABEL   S21050* 01830000
*                 5 * BIT(4),          /* FILL                  S21050* 01840000
*                3 DEVFLG3 CHAR(1),    /* FLAG BYTE # 3         S21050* 01850000
*                 5 * BIT(3),          /* N/A                         * 01860000
*                 5   TAPEBIT BIT(1),  /* NOTREADY RESTORE BIT  Y01906* 01870000
*                 5 * BIT(1),              /*                 @ZA06048* 01880000
*                 5 SYSALLOC BIT(1),       /* DEV ALLOC IN SYS        * 01890000
*                 5 * BIT(2),              /*                 @ZA06048* 01900000
*                3 DEVFLG4 CHAR(1),    /* FLAG BYTE # 3         S21050* 01910000
*                3 TAPELABL CHAR(16),  /* TAPE LABEL SAVE AREA  S21050* 01920000
*                 5 VOL CHAR(10),      /* VOL NAME              S21050* 01930000
*                 5 HDR CHAR (4),      /* HDR NAME              S21050* 01940000
*                 5 MODESV CHAR(1),    /* MODE SAVE AREA        S21050* 01950000
*                 5 * CHAR(1),         /* FILL                  S21050* 01960000
*                3 ADRHEX CHAR (4),    /* 4 BYTE HEX ADDRESS    S21050* 01970000
*                 5 * CHAR(2),         /* FILL                  S21050* 01980000
*                 5 HEXAD CHAR(2),      /* HEX ADDR (2 BYTES)   X02906* 01990000
*                3 CDSINFOR CHAR(16),    /* CDS INFORMATION     X02906* 02000000
*                  5 MODEL CHAR(1),      /* MODEL #             X02906* 02010000
*                  5 FEATURES CHAR(1),   /* FEATURES            X02906* 02020000
*                    7 STRACK BIT(1),    /* SEVEN TRACK TAPE    X02906* 02030000
*                    7 * BIT(7),         /* N/A                 X02906* 02040000
*                  5 CLASS CHAR(1),      /* CLASS               X02906* 02050000
*                  5 TYPE CHAR(1),       /* TYPE                X02906* 02060000
*                  5 * CHAR(12);         /* N/A                 X02906* 02070000
*                                                                       02080000
*                                                                       02090000
*  /******************************************************************* 02100000
*  /*                                                                 * 02110000
*  /*                  TEST EVENT CONTROL BLOCK FIELD                 * 02120000
*  /*                                                                 * 02130000
*  /******************************************************************* 02140000
*                                                                       02150000
*         DCL 1 TECB,                     /* EVENT BLOCK FOR IO Y02906* 02160000
*               2 FLDCNT CHAR(1) INIT('01'X),  /* NUMBER FDLS   Y02906* 02170000
*               2 FLDSIZE CHAR(1) INIT('0C'X), /* SIZE EACH FLD Y02906* 02180000
*               2 SOMETNG CHAR(1) INIT('00'X), /* N/A           Y02906* 02190000
*               2 SNSSIZE CHAR(1) INIT('18'X), /* SENSE EXPTD   Y02906* 02200000
*               2 FLG1 CHAR(1) INIT('00'X),    /* FLAGS         Y02906* 02210000
*               2 SNSCNTTB CHAR(1) INIT('01'X), /* XPECTED COUNTY02906* 02220000
*               2 CLRTECB CHAR(39),      /* LABEL TO CLEAR TECB YM3336* 02230000
*                 3 CNTSNS CHAR(1) INIT('00'X), /* NUMB OCCURED Y02906* 02240000
*                 3 CNTINT CHAR(1) INIT('00'X), /*NUMB INTERRUPTY02906* 02250000
*                 3 CCP CHAR(1),        /* SIO COND CODE        Y02906* 02260000
*                 3 * CHAR(3),          /* N/A                  YM3336* 02270000
*                 3 CSW1 CHAR(8),       /* CSW NO. ONE          Y02906* 02280000
*                   5 * CHAR(4),        /* N/A                  Y02906* 02290000
*                   5 STATUSX CHAR(2),  /* TWO STATUS BYTES     Y02906* 02300000
*                     7 EXIOK CHAR(1),  /* STATUS BYTE 1        Y02906* 02310000
*                       9 * BIT(6),     /* N/A                  Y02906* 02320000
*                       9 UNITCK BIT(1), /* UNIT CHECK          Y02906* 02330000
*                       9 UNITEXCP BIT(1), /* UNIT EXCEPTION BITY02906* 02340000
*                     7 BYTE2 CHAR(1),  /* STATUS BYTE 2        Y02906* 02350000
*                       9 * BIT(1),     /* N/A                  Y02906* 02360000
*                       9 INLENGTH  BIT(1), /* INCORR LNG IND   Y02906* 02370000
*                       9 * BIT(6),     /* N/A                  Y02906* 02380000
*                   5 * CHAR(2),        /* N/A                  Y02906* 02390000
*                 3 SENSE CHAR(24),     /* SENSE COUNT          Y02906* 02400000
*                   5 * CHAR(3),        /* N/A                  Y02906* 02410000
*                   5 SNS1 CHAR(7),     /* SENSE BYTES          Y02906* 02420000
*                     7 SNSFLD BIT(8),  /* BYTE0  SENSE         Y02906* 02430000
*                       9 * BIT(1),     /* N/A                  Y02906* 02440000
*                       9 SNS2 BIT(1),  /* BIT 1 SNS BYTE 0     Y02906* 02450000
*                     7 * CHAR(2),      /* SNS BYTES 1 & 2      Y02906* 02460000
*                     7 * BIT(8),       /* SNS BYTE 3           Y02906* 02470000
*                       9 * BIT(5),     /* FILL                 Y02906* 02480000
*                       9 PEIND BIT(1), /* BIT 5 BYTE3 OF SNS   Y02906* 02490000
*                     7 * CHAR(2),      /* SENCE BYTES 4 AND 5  Y02906* 02500000
*                     7 * CHAR(1),      /* SENCE BYTE 6         Y02906* 02510000
*                       9 * BIT(4),     /* NOT REFERENCED       Y02906* 02520000
*                       9 BIT4 BIT(1);  /* BIT FOUR FOR BIRTCH  Y03128* 02530000
*                                                                       02540000
*  DCL 1 LABEL1 CHAR(80),                                               02550000
*       2 TAPEVOL CHAR(10),                                             02560000
*        3 VOLAB CHAR(4),                                               02570000
*        3 VOLSERNO CHAR(6),                                            02580000
*       2 SECURE CHAR(1),              /* TAPE SECURITY BIT     Y01906* 02590000
*       2 * CHAR(69);                  /* N/A                   Y01906* 02600000
*  DCL 1 LABEL2 CHAR(80) BASED(ADDR(LABEL1)),                           02610000
*       3 HDRLAB CHAR(4),                                               02620000
*        3 * CHAR(43),                                                  02630000
*        3 * CHAR(7),                                                   02640000
*           5 * CHAR(1),                                                02650000
*           5 DATE1 CHAR(5),                                            02660000
*          5 * CHAR(1),                /* N/A                   Y01906* 02670000
*        3 * CHAR(26);                                                  02680000
*                                                                       02690000
*                                                                       02700000
*  /******************************************************************* 02710000
*  /*                                                                 * 02720000
*  /*                    MESSAGE STRUCTURES                           * 02730000
*  /*                                                                 * 02740000
*  /******************************************************************* 02750000
*                                                                       02760000
*  DCL IFDMSG03 EXT ENTRY;          /* MESSAGE MODULE                 * 02770000
*  DCL MSGPTR PTR INIT(ADDR(IFDMSG03)); /* POINTER TO MESSAGE MODULE  * 02780000
*  DCL 1 * BASED(R4),               /* MESSAGE ADDRESS                * 02790000
*        3 MSG1 PTR,                /* POINTER TO MESSAGE             * 02800000
*        3 MSG2 PTR,                /* POINTER TO MESSAGE             * 02810000
*        3 MSG3 PTR,                /* POINTER TO MESSAGE             * 02820000
*        3 MSG4 PTR,                /* POINTER TO MESSAGE             * 02830000
*        3 MSG5 PTR,                /* POINTER TO MESSAGE             * 02840000
*        3 MSG6 PTR,                /* POINTER TO MESSAGE             * 02850000
*        3 MSG7 PTR,                /* POINTER TO MESSAGE             * 02860000
*        3 MSG8 PTR,                     /* POINTER TO MESSAGE        * 02870000
*        3 MSG9 PTR,                     /* POINTER TO IFD130I  Y01906* 02880000
*        3 MSGA PTR,                     /* POINTER TO IFD138I  Y01906* 02890000
*        3 MSGB PTR,                     /* POINTER TO IFD139D  Y02008* 02900000
*        3 MSGC PTR,                    /* POINTER TO MSG C   @ZA15468* 02910000
*        3 MSGD PTR,                    /* POINTER TO MSG D   @ZA15468* 02920000
*        3 MSGE PTR,                    /* POINTER TO MSG E   @ZA15468* 02930000
*        3 MSGF PTR,                    /* POINTER TO MSG F   @ZA15468* 02940000
*'       3 MSGG PTR;                    /* POINTER TO MSG G   @ZA15468* 02950000
*'                                                                      02960000
*  DCL 1 MSG109 BASED(R1),                 /* FORMAT          @ZA06048* 02970000
*        3 * CHAR(12),                     /*                 @ZA06048* 02980000
*        3 MSGDVAD CHAR(8),                /* DEVICE ADDRESS  @ZA06048* 02990000
*        3 * CHAR(1),                      /*                 @ZA06048* 03000000
*        3 ONOROFF CHAR(8),                /* ON OR OFF LINE  @ZA06048* 03010000
*        3 ALORNOT CHAR(11);               /* ALLOCATED OR NOT        * 03020000
*  DCL MSGDVAD1 CHAR(8) BASED(R1+34);    /*DEV ADDR AREA IN MSG S21050* 03030000
*  DCL MSGDVAD2 CHAR(8) BASED(R1+36);    /*DEV ADDR AREA IN MSG S21050* 03040000
*  DCL MSGDVAD3 CHAR(8) BASED(R1+19);    /*DEV ADDR AREA IN MSG S21050* 03050000
*  DCL MSGDVAD4 CHAR(8) BASED(R1+19);    /*DEV ADDR AREA IN MSG S21050* 03060000
*  DCL MSGDVAD9 CHAR(8) BASED(R1+29);    /*DEV ADDR AREA IN MSG S21050* 03070000
*  DCL MSGDVADA CHAR(8) BASED(R1+16);    /*DEV ADDR AREA IN MSG S21050* 03080000
*  DCL MSGDVA39 CHAR(8) BASED(R1+39);    /*DEV ADDR AREA IN MSG Y02008* 03090000
*  DCL  MSGSNS CHAR(12) BASED (R1+37);   /* SENSE DATA IN 137I  Y01906* 03100000
*  DCL MSGCSW CHAR(14) BASED(R1+18);     /* CSW DATA AREA       S21050* 03110000
*  DCL MSGDVADD CHAR(8) BASED(R1+38);   /* DEVICE ADDRESS     @ZA15468* 03120000
*  DCL MSGDVADG CHAR(8) BASED(R1+22);   /* DEVICE ADDRESS     @ZA15468* 03130000
*  DCL MSGINIT CHAR(14) BASED(R1+43);   /* HOW INITIALIZED    @ZA15468* 03140000
*  DCL 1 MSGPARM BASED(R1),         /* NA                             * 03150000
*        3 LENGTH CHAR(1),          /* LENGTH OF RESPONSE             * 03160000
*        3 BUFAD PTR(24),           /* POINTER TO RESPONSE BUFFER     * 03170000
*        3 MSGECBAD FIXED;          /* ECB ADDRESS                    * 03180000
*  DCL DECB FIXED INIT(0);          /* EVENT CONTROL BLOCK            * 03190000
*   DCL INBUFR CHAR(72) GENERATED;                                      03200000
*    DCL BUFFER CHAR(1) BASED(ADDR(INBUFR));                            03210000
*                                                                       03220000
*                                                                       03230000
*  DCL SECDVPTR PTR(31) GENERATED;  /* DEVICE  TABLE POINTER          * 03240000
*  DCL 1 INBUF  CHAR(62),                /* INPUT BUFFER        S21052* 03250000
*         3 CSWIN CHAR(14),              /* CONVERTED CSW DATA  S21052* 03260000
*        3 * CHAR(6),                  /* CONVERTED DEV ADDR   Y02906*/ 03270000
*         3 SNSIN CHAR(48);              /* CONVERTED SNS DATA  S21052* 03280000
*  DCL AREA FIXED BDY(WORD) INIT(0);     /* AREA FOR PACKED DEC DATE  * 03290000
*  DCL AREA1 CHAR(6) INIT('000000000000'X); /* AREA FOR UNPACKED DATE * 03300000
*         DCL XAREA CHAR(5) BASED(ADDR(AREA1)+1);                       03310000
*  DCL RDLAB LABEL GENERATED;       /* CCW LABEL                      * 03320000
*  DCL RDLAB1 LABEL GENERATED;      /* CCW LABEL                      * 03330000
*  DCL URSNS LABEL GENERATED;            /* LABEL FOR CCW       Y01906* 03340000
*  DCL TAB28 PTR(31) GENERATED;     /* NEW MACRO ENTRY POINT          * 03350000
*  DCL CNVRT CHAR(14) GENERATED;    /* CONVERT PARAMETER LIST         * 03360000
*  /******************************************************************* 03370000
*  /*                                                                 * 03380000
*  /*                         ONLINE STATUS CHECK                     * 03390000
*  /*                                                                 * 03400000
*  /******************************************************************* 03410000
*  DPTAPE00:                                                            03420000
*         R4=MSGPTR;                     /*PUT PTR TO MESSAGE MODULE  * 03430000
DPTAPE00 L     @4,MSGPTR                                          0081  03440000
*  IF STATUS = '1'B THEN             /* IF DEVICE IS ONLINE   @ZA02796* 03450000
         TM    12(@7),B'10000000'                                 0082  03460000
         BC    12,@9FF                                            0082  03470000
*   DO;                              /*                       @ZA02796* 03480000
*    IF CLASS = '08'X &              /* IF DEVICE             @ZA02796* 03490000
*       TYPE = '42'X THEN            /* IS MSC                @ZA02796* 03500000
         CLI   38(@7),X'08'                                       0084  03510000
         BC    07,@9FE                                            0084  03520000
         CLI   39(@7),X'42'                                       0084  03530000
*       GOTO ONLINOK;                /* ONLINE IS OK          @ZA02796* 03540000
         BC    08,ONLINOK                                         0085  03550000
*     GOTO DPTAPE01;                 /* GO PRINT MESSAGE      @ZA02796* 03560000
         BC    15,DPTAPE01                                        0086  03570000
*   END;                                                    /*@ZA01047* 03580000
* ONLINOK:                           /*                       @ZA02796* 03590000
*         IF DPDONE='1'B THEN                                           03600000
@9FF     EQU   *                                                  0088  03610000
ONLINOK  TM    12(@7),B'00100000'                                 0088  03620000
*         RETURN;                                                       03630000
         BC    03,@EL01                                           0089  03640000
*         STDLABL='0'B;                  /* ZERO STANDARD LABEL BIT   * 03650000
@9FC     NI    13(@7),B'11101111'                                 0090  03660000
*  /******************************************************************* 03670000
*  /*                                                                 * 03680000
*  /*                          SET UP FOR EXIO                        * 03690000
*  /*                                                                 * 03700000
*  /******************************************************************* 03710000
*   PROTECT = '1'B;                      /*                     Y01906* 03720000
         OI    A00007,B'01000000'                                 0091  03730000
*   IF CLASS = '08'X THEN              /* IS IT UNIT RECORD DEV,Y01906* 03740000
         CLI   38(@7),X'08'                                       0092  03750000
*      GOTO URXIO;                     /* YES,GO CHECK FOR READYY01906* 03760000
         BC    08,URXIO                                           0093  03770000
*                                                                       03780000
*   MODEREQ = '1'B;                      /* REQUEST MODE SET    Y01906* 03790000
         OI    FLG2,B'01000000'                                   0094  03800000
*         CCWPTR = ADDR(RDLAB);         /* SET CCW PTR          Y02906* 03810000
         LA    @F,RDLAB                                           0095  03820000
         ST    @F,CCWPTR                                          0095  03830000
*         IF STRACK ='1'B THEN                                          03840000
         TM    37(@7),B'10000000'                                 0096  03850000
         BC    12,@9FB                                            0096  03860000
*           FILEMSK='AB'X;                                    /*Y02906* 03870000
         MVI   FILEMSK,X'AB'                                      0097  03880000
         BC    15,@9FA                                            0098  03890000
*         ELSE FILEMSK='03'X;                                 /*Y02906* 03900000
@9FB     MVI   FILEMSK,X'03'                                      0098  03910000
*  GEN(BAL   R5,IORTN);                  /* I/O ROUTINES         M4506* 03920000
@9FA     EQU   *                                                  0099  03930000
         BAL   R5,IORTN                                                 03940000
         DS    0H                                                       03950000
*  IF EXIOK = '0D'X THEN                 /* IF CE + DE + UE THENY01906* 03960000
         CLI   TECB+16,X'0D'                                      0100  03970000
*    GOTO DPTAPE03;                      /*                      M4506* 03980000
         BC    08,DPTAPE03                                        0101  03990000
*  IF EXIOK ¬= '0C'X THEN                /* IF NOT CE + DE THEN Y01906* 04000000
         CLI   TECB+16,X'0C'                                      0102  04010000
         BC    08,@9F9                                            0102  04020000
*   DO;                                  /* UC AND OTHER ERRORS Y01906* 04030000
*     IF  STRACK='0'B THEN               /* CHECK FOR 7-TRK     S21052* 04040000
         TM    37(@7),B'10000000'                                 0104  04050000
*       GOTO DPTAPE02;                   /* 9-TRK BRANCH        S21052* 04060000
         BC    08,DPTAPE02                                        0105  04070000
*     FILEMSK='2B'X;                     /* SET 7-TRK 200 BPI   Y02906* 04080000
         MVI   FILEMSK,X'2B'                                      0106  04090000
*     GEN(BAL   R5,IORTN);               /* EXECUTE I/O         S21052* 04100000
         BAL   R5,IORTN                                                 04110000
         DS    0H                                                       04120000
*     IF EXIOK='0D'X THEN                /* UNIT EXCEPTION      S21052* 04130000
         CLI   TECB+16,X'0D'                                      0108  04140000
*       GOTO DPTAPE03;                   /* NON-STD LABEL       S21052* 04150000
         BC    08,DPTAPE03                                        0109  04160000
*     IF EXIOK ¬='0C'X THEN              /* NOT OKAY            S21052* 04170000
         CLI   TECB+16,X'0C'                                      0110  04180000
         BC    08,@9F8                                            0110  04190000
*       DO;                              /*                     S21052* 04200000
*         FILEMSK='6B'X;                /* SET 7-TRK 556 BPI    Y02906* 04210000
         MVI   FILEMSK,X'6B'                                      0112  04220000
*         GEN(BAL   R5,IORTN);           /* EXECUTE I/O         S21052* 04230000
         BAL   R5,IORTN                                                 04240000
         DS    0H                                                       04250000
*         IF EXIOK='0D'X THEN            /* UNIT EXCEPTION      S21052* 04260000
         CLI   TECB+16,X'0D'                                      0114  04270000
*           GOTO DPTAPE03;               /* NON-STD LABEL       S21052* 04280000
         BC    08,DPTAPE03                                        0115  04290000
*         IF EXIOK ¬='0C'X THEN          /* NOT OKAY            S21052* 04300000
         CLI   TECB+16,X'0C'                                      0116  04310000
*           GOTO DPTAPE02;               /* UNREADABLE LABEL    S21052* 04320000
         BC    07,DPTAPE02                                        0117  04330000
*       END;                             /*                     S21052* 04340000
*   END;                                 /*                     S21052* 04350000
@9F8     EQU   *                                                  0119  04360000
*   TAPEBIT = '0'B;                      /* DRIVE IS READY      Y01906* 04370000
@9F9     NI    14(@7),B'11101111'                                 0120  04380000
*  /******************************************************************* 04390000
*  /*                                                                 * 04400000
*  /*                CHECK FOR CORRECT LENGTH & VOL1 IN LABEL         * 04410000
*  /*                                                                 * 04420000
*  /******************************************************************* 04430000
*  IF INLENGTH ='1'B |              /* IF INCORRECT LENGTH IND OR     * 04440000
*     VOLAB ¬= 'VOL1' THEN          /* IF VOL1 IS NOT IN THE LABEL    * 04450000
         TM    TECB+17,B'01000000'                                0121  04460000
         BC    01,@9F7                                            0121  04470000
         CLC   LABEL1(4),@C11                                     0121  04480000
         BC    08,@9F6                                            0121  04490000
*     GOTO DPTAPE03;                /* PRINT MESSAGE TO OPERATOR      * 04500000
         BC    07,DPTAPE03                                        0122  04510000
*  IF SECURE¬='F0'X &                    /* CHECK FOR KNOWN NON-Y01906* 04520000
*     SECURE¬='40'X &                    /* SECURITY CHARACTERS Y01906* 04530000
*     SECURE¬='00'X THEN                 /* IF NOT SECURE       Y01906* 04540000
@9F6     CLI   LABEL1+10,X'F0'                                    0123  04550000
         BC    08,@9F5                                            0123  04560000
         CLI   LABEL1+10,X'40'                                    0123  04570000
         BC    08,@9F4                                            0123  04580000
         CLI   LABEL1+10,X'00'                                    0123  04590000
*     GO TO DPTAPE06;               /* GO PRINT MSG 122I        Y01906* 04600000
         BC    07,DPTAPE06                                        0124  04610000
*         VOL=TAPEVOL;                   /*SAVE VOL SER # IN DEVTAB */  04620000
@9F3     EQU   *                                                  0125  04630000
@9F4     EQU   *                                                  0125  04640000
@9F5     MVC   16(10,@7),LABEL1                                   0125  04650000
*         IF STRACK='0'B THEN                                           04660000
         TM    37(@7),B'10000000'                                 0126  04670000
         BC    05,@9F2                                            0126  04680000
*             DO;                                            /* Y02128* 04690000
*            IF PEIND='1'B THEN                             /* Y02128*/ 04700000
         TM    TECB+26,B'00000100'                                0128  04710000
         BC    12,@9F1                                            0128  04720000
*              DO;                                          /* Y02128*/ 04730000
*               FILEMSK = 'C3'X;                             /* YM3334* 04740000
         MVI   FILEMSK,X'C3'                                      0130  04750000
*               GOTO SETEXIO;                                /* Y02128* 04760000
         BC    15,SETEXIO                                         0131  04770000
*             END;                                           /* Y02128* 04780000
*             FILEMSK = 'CB'X;                               /* YM3334* 04790000
@9F1     MVI   FILEMSK,X'CB'                                      0133  04800000
*           IF BIT4 =  '1'B THEN       /* IS THIS A BIRCH       X03128* 04810000
         TM    TECB+29,B'00001000'                                0134  04820000
         BC    12,@9F0                                            0134  04830000
*              FILEMSK='D3'X;          /* IF YES SET FILE MSK   X03128* 04840000
         MVI   FILEMSK,X'D3'                                      0135  04850000
*               END;                                         /* Y02128* 04860000
@9F0     EQU   *                                                  0136  04870000
*  /******************************************************************* 04880000
*  /*                                                                 * 04890000
*  /*                          SET UP FOR EXIO                        * 04900000
*  /*                                                                 * 04910000
*  /******************************************************************* 04920000
* SETEXIO:                                                   /* Y02128* 04930000
*         CCWPTR = ADDR(RDLAB1);        /* SET CCW PTR          Y02906* 04940000
@9F2     EQU   *                                                  0137  04950000
SETEXIO  LA    @F,RDLAB1                                          0137  04960000
         ST    @F,CCWPTR                                          0137  04970000
*  GEN(BAL   R5,IORTN);                  /* I/O ROUTINES         M4506* 04980000
         BAL   R5,IORTN                                                 04990000
         DS    0H                                                       05000000
*  IF UNITEXCP='1'B THEN            /* INDICATES TAPE MARK            * 05010000
         TM    TECB+16,B'00000001'                                0139  05020000
         BC    12,@9EF                                            0139  05030000
*    DO;                                                                05040000
*    HDR=' ';                       /*PUT BLANKS IN HDR AREA OF DEVTAB* 05050000
         MVI   26(@7),C' '                                        0141  05060000
         MVC   27(3,@7),26(@7)                                    0141  05070000
*    GOTO SETBITS;                                                      05080000
         BC    15,SETBITS                                         0142  05090000
*    END;                                                               05100000
*         IF EXIOK='0E'X THEN            /* WAS EXIO SUCESSFUL   M4505* 05110000
@9EF     CLI   TECB+16,X'0E'                                      0144  05120000
*           GOTO DPTAPE02;               /* YES, GO PRINT MSG    M4505* 05130000
         BC    08,DPTAPE02                                        0145  05140000
*  IF INLENGTH = '1'B |             /* IF INCORRECT LENGTH BIT IS ON  * 05150000
*     HDRLAB ¬= 'HDR1' THEN         /* OR HDR1 IS NOT ON TAPE         * 05160000
         TM    TECB+17,B'01000000'                                0146  05170000
         BC    01,@9EE                                            0146  05180000
         CLC   LABEL2(4),@C20                                     0146  05190000
         BC    08,@9ED                                            0146  05200000
*     GOTO DPTAPE03;                /* GO PRINT MESSAGE               * 05210000
         BC    07,DPTAPE03                                        0147  05220000
*  /******************************************************************* 05230000
*  /*                                                                 * 05240000
*  /*           HDR1, EXPIRATION DATE & DATA SECURITY CHECK           * 05250000
*  /*                                                                 * 05260000
*  /******************************************************************* 05270000
*                                        /* GET TODAY'S DATE    Y01906* 05280000
*  GEN;                                                                 05290000
@9ED     EQU   *                                                  0148  05300000
         TIME                                                           05310000
         DS    0H                                                       05320000
*  AREA = R1;                       /* PUT DATE TO BE UNPACKED IN AREA* 05330000
         ST    @1,AREA                                            0149  05340000
*  GEN;                                                                 05350000
         UNPK  AREA1(6),AREA+1(3)     UNPACK DATE                       05360000
         OI    AREA1+5,X'F0'          CHANGE LAST BYTE                  05370000
         DS    0H                                                       05380000
*         IF DATE1 > XAREA THEN    /*IF THE EXPIRATION DATE EXCEEDS*/   05390000
         CLC   LABEL2+48(5),XAREA                                 0151  05400000
         BC    12,@9EC                                            0151  05410000
*           DO;                                                         05420000
*           STDLABL='1'B;                /*SET STANDARD LABEL BIT     * 05430000
         OI    13(@7),B'00010000'                                 0153  05440000
*     GOTO DPTAPE08;                /* THE CURRENT DATE GO PRINT MSG. * 05450000
         BC    15,DPTAPE08                                        0154  05460000
*           END;                                                        05470000
*         HDR=HDRLAB;                    /*SAVE HDR1 IN DEVTAB  */      05480000
@9EC     MVC   26(4,@7),LABEL2                                    0156  05490000
*  SETBITS:                                                             05500000
*  STDLABL='1'B;                    /* SET STANDARD LABEL BIT         * 05510000
SETBITS  OI    13(@7),B'00010000'                                 0157  05520000
*       DPDONE='1'B;                                                    05530000
         OI    12(@7),B'00100000'                                 0158  05540000
*  GOTO DPTAPE10;                   /* AND RETRN TO CALLING MODULE    * 05550000
         BC    15,DPTAPE10                                        0159  05560000
*  /******************************************************************* 05570000
*  /*                                                                 * 05580000
*  /*                     PRINT MESSAGE IFD109I                       * 05590000
*  /*     XXXXXXXX NOT OFFLINE                                        * 05600000
*  /******************************************************************* 05610000
*  DPTAPE01:                                                            05620000
*  R1=MSG1;                         /* POINTER TO MESSAGE             * 05630000
DPTAPE01 L     @1,0(0,@4)                                         0160  05640000
*  MSGDVAD=DEVADEB;                 /* PUT DEVICE ADDRESS IN MSG1     * 05650000
         MVC   12(8,@1),0(@7)                                     0161  05660000
*  ONOROFF='ONLINE ,';                     /* SAY DEV ONLINE  @ZA06048* 05670000
         MVC   21(8,@1),@C21                                      0162  05680000
*  IF SYSALLOC='1'B                        /* CHECK ALLOCATION        * 05690000
*    THEN                                  /*                 @ZA06048* 05700000
         TM    14(@7),B'00000100'                                 0163  05710000
         BC    12,@9EB                                            0163  05720000
*      ALORNOT='ALLOCATED  ';              /* IF SO,SAY SO    @ZA06048* 05730000
         MVC   29(11,@1),@C22                                     0164  05740000
         BC    15,@9EA                                            0165  05750000
*    ELSE                                  /* IF NOT,         @ZA06048* 05760000
*      ALORNOT='UNALLOCATED';              /* AGAIN,SAY SO    @ZA06048* 05770000
@9EB     MVC   29(11,@1),@C23                                     0165  05780000
*  GEN(BAL   R5,DPTAPE13);               /* PRINT MESSAGE        M4506* 05790000
@9EA     EQU   *                                                  0166  05800000
         BAL   R5,DPTAPE13                                              05810000
         DS    0H                                                       05820000
*  BYPDEV='1'B;                     /* SET BYPASS BIT                 * 05830000
         OI    A00007+3,B'00100000'                               0167  05840000
*         RETURN;                                                       05850000
         BC    15,@EL01                                           0168  05860000
*  DPTAPE02:                                                            05870000
*  IF CCP='F3'X THEN                /* IF CC=3                  YM3332* 05880000
DPTAPE02 CLI   TECB+8,X'F3'                                       0169  05890000
*    GOTO DPTAPE12;                      /*GO PRINT MESSAGE           * 05900000
         BC    08,DPTAPE12                                        0170  05910000
*         IF SNS2='1'B THEN                                             05920000
         TM    TECB+23,B'01000000'                                0171  05930000
*    GOTO DPTAPE11;               /*PRINT INTERVENTION REQUIRED MSG   * 05940000
         BC    01,DPTAPE11                                        0172  05950000
*    IF CLASS = '08'X THEN               /* IF UNIT RECORD      Y02008* 05960000
         CLI   38(@7),X'08'                                       0173  05970000
         BC    07,@9E9                                            0173  05980000
*      DO;                               /* YES                 Y02008* 05990000
*        R1=MSGC;                        /* SET POINTER IFD212I Y02008* 06000000
         L     @1,44(0,@4)                                        0175  06010000
*        MSGDVA39 = DEVADEB;             /* DEVICE ADDR IN MSG  Y02008* 06020000
         MVC   39(8,@1),0(@7)                                     0176  06030000
*        GEN(BAL   R5,DPTAPE13);         /* GO PRINT            Y02008* 06040000
         BAL   R5,DPTAPE13                                              06050000
         DS    0H                                                       06060000
*        GOTO DPTAPE04;                  /* ISSUE NEXT          Y02008* 06070000
         BC    15,DPTAPE04                                        0178  06080000
*      END;                              /* NO                  Y02008* 06090000
*   TAPEBIT='0'B;                        /* NO RESTORE NTRDY BITY01906* 06100000
@9E9     NI    14(@7),B'11101111'                                 0180  06110000
*  /******************************************************************* 06120000
*  /*                                                                 * 06130000
*  /*                     PRINT MESSAGE IFD118I                       * 06140000
*  /*     UNREADABLE TAPE LABEL-XXXXXXXX                              * 06150000
*  /******************************************************************* 06160000
*  R1=MSG2;                         /* POINTER TO MESSAGE             * 06170000
         L     @1,4(0,@4)                                         0181  06180000
*  MSGDVAD1=DEVADEB;                /* PUT DEVICE ADDRESS IN MSG2     * 06190000
         MVC   34(8,@1),0(@7)                                     0182  06200000
*  GEN(BAL   R5,DPTAPE13);               /* PRINT MESSAGE        M4506* 06210000
         BAL   R5,DPTAPE13                                              06220000
         DS    0H                                                       06230000
*  GOTO DPTAPE04;                   /* GO PRINT SENSE/CSW DATA        * 06240000
         BC    15,DPTAPE04                                        0184  06250000
*  /******************************************************************* 06260000
*  /*                     PRINT MESSAGE IFD119I                       * 06270000
*  /*     NON-STANDARD TAPE LABEL-XXXXXXXX                            * 06280000
*  /*                                                                 * 06290000
*  /******************************************************************* 06300000
*  DPTAPE03:                                                            06310000
*  R1=MSG4;                         /* POINTER TO MESSAGE             * 06320000
DPTAPE03 L     @1,12(0,@4)                                        0185  06330000
*  MSGDVAD2=DEVADEB;                /* PUT DEVICE ADDRESS IN MSG4     * 06340000
         MVC   36(8,@1),0(@7)                                     0186  06350000
*  GEN(BAL   R5,DPTAPE13);               /* PRINT MESSAGE        M4506* 06360000
         BAL   R5,DPTAPE13                                              06370000
         DS    0H                                                       06380000
*  GOTO DPTAPE05;                   /* GO PRINT OPTION MESSAGE        * 06390000
         BC    15,DPTAPE05                                        0188  06400000
*  /******************************************************************* 06410000
*  /*                                                                 * 06420000
*  /*                     CONVERT SENSE/CSW DATA                      * 06430000
*  /*                                                                 * 06440000
*  /******************************************************************* 06450000
*  DPTAPE04:                                                            06460000
*  GEN(BAL   R14,NEWCONV);               /* CONVERT CALL         M4506* 06470000
DPTAPE04 BAL   R14,NEWCONV                                              06480000
         DS    0H                                                       06490000
*  SUSDEL='1'B;                          /* SUSPEND DELETION     M4506* 06500000
         OI    A00000,B'00001000'                                 0190  06510000
*  GEN(BAL   R14,NEWCONV);               /* CONVERT CALL         M4506* 06520000
         BAL   R14,NEWCONV                                              06530000
         DS    0H                                                       06540000
*  /******************************************************************* 06550000
*  /*                                                                 * 06560000
*  /*                     PRINT MESSAGE IFD137I                       * 06570000
*  /*           CSW-XXXXXXXXXXXXXXXX SNS-YYYYYYYYYYYY                 * 06580000
*  /******************************************************************* 06590000
*  R1=MSG3;                         /* POINTER TO MESSAGE             * 06600000
         L     @1,8(0,@4)                                         0192  06610000
*  MSGCSW=CSWIN;                    /* PUT CSW DATA IN MSG3           * 06620000
         MVC   18(14,@1),INBUF                                    0193  06630000
*         MSGSNS = SNSIN;                /* PUT SENSE IN MSG    X02906* 06640000
         MVC   37(12,@1),INBUF+20                                 0194  06650000
*         GEN(BAL  R5,DPTAPE13);         /* PRINT MSG           S21052* 06660000
         BAL  R5,DPTAPE13                                               06670000
         DS    0H                                                       06680000
*  /******************************************************************* 06690000
*  /*                                                                 * 06700000
*  /*                     PRINT MESSAGE IFD139D                       * 06710000
*  /* TAPE: REPLY B TO BYPASS,R TO RETRY,P TO PROCEED(MAY DESTROY DATA* 06720000
*  /*     UNIT RECORD:   REPLY B TO BYPASS, R TO RETRY,P TO PROCEED   * 06730000
*  /******************************************************************* 06740000
*  DPTAPE05:                                                            06750000
*  IF CLASS = '08'X THEN                 /* IF DEV IS UR,       Y01906* 06760000
DPTAPE05 CLI   38(@7),X'08'                                       0196  06770000
         BC    07,@9E8                                            0196  06780000
*    R1 = MSGB;                          /* PRINT SHORT FORM    Y01906* 06790000
         L     @1,40(0,@4)                                        0197  06800000
         BC    15,@9E7                                            0198  06810000
*    ELSE R1 = MSG6;                     /* PRT MAY DESTROY DATAX02906* 06820000
@9E8     L     @1,20(0,@4)                                        0198  06830000
*  BUFAD=ADDR(BUFFER);              /* SET UP BUFFER ADDRESS          * 06840000
@9E7     LA    @F,BUFFER                                          0199  06850000
         ST    @F,@TEMP4                                          0199  06860000
         MVC   1(3,@1),@TEMP4+1                                   0199  06870000
*  MSGECBAD=ADDR(DECB);             /* POINTER TO PWTO ECB            * 06880000
         LA    @F,DECB                                            0200  06890000
         ST    @F,4(0,@1)                                         0200  06900000
*     DECB=0;                       /* ZERO DECB                      * 06910000
         SR    @F,@F                                              0201  06920000
         ST    @F,DECB                                            0201  06930000
*  LENGTH='01'X;                    /* LENGTH OF RESPONSE             * 06940000
         MVI   0(@1),X'01'                                        0202  06950000
*  GEN(BAL   R5,DPTAPE14);               /* PRINT AND REPLY      M4506* 06960000
         BAL   R5,DPTAPE14                                              06970000
         DS    0H                                                       06980000
*  IF BUFFER='P' THEN DO;           /* IF REPLY IS PROCEED            * 06990000
         CLI   BUFFER,C'P'                                        0204  07000000
         BC    07,@9E6                                            0204  07010000
*         DPDONE='1'B;                                                  07020000
         OI    12(@7),B'00100000'                                 0206  07030000
*     GOTO DPTAPE10;                /* RETURN                         * 07040000
         BC    15,DPTAPE10                                        0207  07050000
*                    END;                                               07060000
*  IF BUFFER='B' THEN DO;           /* IF REPLY IS BYPASS             * 07070000
@9E6     CLI   BUFFER,C'B'                                        0209  07080000
         BC    07,@9E5                                            0209  07090000
*         IF PRIMARY ='1'B THEN                                         07100000
         TM    12(@7),B'01000000'                                 0211  07110000
         BC    12,@9E4                                            0211  07120000
*     BYPDEV='1'B;                  /* TURN ON BYPASS BIT             * 07130000
         OI    A00007+3,B'00100000'                               0212  07140000
*     GOTO DPTAPE10;                /* RETURN                         * 07150000
         BC    15,DPTAPE10                                        0213  07160000
*                    END;                                               07170000
*  IF BUFFER='R' THEN               /* IF REPLY IS RETRY              * 07180000
@9E5     CLI   BUFFER,C'R'                                        0215  07190000
*     GOTO DPTAPE00;                /* GOTO TO BEGINNING OF MODULE    * 07200000
         BC    08,DPTAPE00                                        0216  07210000
*  ELSE GOTO DPTAPE05;              /* TRY AGAIN REPLY NOT RECOGNIZED * 07220000
         BC    15,DPTAPE05                                        0217  07230000
*  /******************************************************************* 07240000
*  /*                                                                 * 07250000
*  /*        SET UP FOR SENSE FOR UNIT RECORD DEVICES                 * 07260000
*  /*                                                                 * 07270000
*  /******************************************************************* 07280000
*                                                                       07290000
* URXIO:                                                                07300000
*  IF TYPE='42'X THEN                   /* IF THE DEVICE IS   @ZA15468* 07310000
URXIO    CLI   39(@7),X'42'                                       0218  07320000
         BC    07,@9E3                                            0218  07330000
*    DO;                                /* AN MSS, CHECK TO   @ZA15468* 07340000
*      IF INITSW='1'B THEN              /* SEE IF IT IS       @ZA15468* 07350000
         TM    A00005,B'00100000'                                 0220  07360000
         BC    12,@9E2                                            0220  07370000
*        DO;                            /* INITIALIZED AND IF @ZA15468* 07380000
*          R1=MSGG;                     /* IT IS, TELL HOW    @ZA15468* 07390000
         L     @1,60(0,@4)                                        0222  07400000
*          MSGDVADG=DEVADEB;            /* EITHER FUNCTIONALLY@ZA15468* 07410000
         MVC   22(8,@1),0(@7)                                     0223  07420000
*          IF FINITSW='1'B THEN         /* OR DIAGNOSTICALLY  @ZA15468* 07430000
         TM    A00005,B'10000000'                                 0224  07440000
         BC    12,@9E1                                            0224  07450000
*            MSGINIT='FUNCTIONALLY  ';  /* WRITE THE MESSAGE  @ZA15468* 07460000
         MVC   43(14,@1),@C29                                     0225  07470000
         BC    15,@9E0                                            0226  07480000
*          ELSE                         /* TO THE USER.       @ZA15468* 07490000
*            MSGINIT='DIAGNOSTICALLY';  /*                    @ZA15468* 07500000
@9E1     MVC   43(14,@1),@C30                                     0226  07510000
*          GEN(BAL R5,DPTAPE13);        /*                    @ZA15468* 07520000
@9E0     EQU   *                                                  0227  07530000
         BAL R5,DPTAPE13                                                07540000
         DS    0H                                                       07550000
*          GO TO DPURMSC;               /* THEN CONTINUE WITH @ZA15468* 07560000
         BC    15,DPURMSC                                         0228  07570000
*        END;                           /* DATA PROTECTION.   @ZA15468* 07580000
*      R1=MSGD;                         /* IF THE INTERFACE   @ZA15468* 07590000
@9E2     L     @1,48(0,@4)                                        0230  07600000
*      MSGDVADD=DEVADEB;                /* IS NOT INITIALIZED @ZA15468* 07610000
         MVC   38(8,@1),0(@7)                                     0231  07620000
*      GEN(BAL R5,DPTAPE13);            /* TELL THE USER AND  @ZA15468* 07630000
         BAL R5,DPTAPE13                                                07640000
         DS    0H                                                       07650000
*      R1=MSGE;                         /* AND GIVE THE OPTION@ZA15468* 07660000
         L     @1,52(0,@4)                                        0233  07670000
*      GEN(BAL R5,DPTAPE13);            /* OF BYPASSING THE   @ZA15468* 07680000
         BAL R5,DPTAPE13                                                07690000
         DS    0H                                                       07700000
* DPMSGF:                               /* TEST OR TAKING A   @ZA15468* 07710000
*      R1=MSGF;                         /* CHANCE AND WIPING  @ZA15468* 07720000
DPMSGF   L     @1,56(0,@4)                                        0235  07730000
*      BUFAD=ADDR(BUFFER);              /* OUT A PACK.        @ZA15468* 07740000
         LA    @F,BUFFER                                          0236  07750000
         ST    @F,@TEMP4                                          0236  07760000
         MVC   1(3,@1),@TEMP4+1                                   0236  07770000
*      MSGECBAD=ADDR(DECB);             /* SET UP FOR A REPLY @ZA15468* 07780000
         LA    @F,DECB                                            0237  07790000
         ST    @F,4(0,@1)                                         0237  07800000
*      DECB=0;                          /* ZERO THE ECB       @ZA15468* 07810000
         SR    @F,@F                                              0238  07820000
         ST    @F,DECB                                            0238  07830000
*      LENGTH='01'X;                    /* SET MESSAGE LENGTH @ZA15468* 07840000
         MVI   0(@1),X'01'                                        0239  07850000
*      GEN(BAL R5,DPTAPE14);            /* GO WRITE MESSAGE   @ZA15468* 07860000
         BAL R5,DPTAPE14                                                07870000
         DS    0H                                                       07880000
*      IF BUFFER='P' THEN               /* IF USER REPLIED P  @ZA15468* 07890000
         CLI   BUFFER,C'P'                                        0241  07900000
*        GO TO DPURMSC;                 /* CONTINUE           @ZA15468* 07910000
         BC    08,DPURMSC                                         0242  07920000
*      IF BUFFER='B' THEN               /* IF USER REPLIED B  @ZA15468* 07930000
         CLI   BUFFER,C'B'                                        0243  07940000
         BC    07,@9DF                                            0243  07950000
*        DO;                            /* SET SWITCHES TO    @ZA15468* 07960000
*          IF PRIMARY='1'B THEN         /* BYPASS THE TEST    @ZA15468* 07970000
         TM    12(@7),B'01000000'                                 0245  07980000
         BC    12,@9DE                                            0245  07990000
*            BYPDEV='1'B;               /*                    @ZA15468* 08000000
         OI    A00007+3,B'00100000'                               0246  08010000
*          GO TO DPTAPE10;              /* RETURN TO IFDOLT52 @ZA15468* 08020000
         BC    15,DPTAPE10                                        0247  08030000
*        END;                           /*                    @ZA15468* 08040000
*      GO TO DPMSGF;                    /* REWRITE THE MESSAGE        * 08050000
*    END;                               /*                    @ZA15468* 08060000
* DPURMSC:                              /*                    @ZA15468* 08070000
*   MODEREQ = '0'B;                      /* NO MODE SET NEEDED  Y01906* 08080000
@9E3     EQU   *                                                  0251  08090000
DPURMSC  NI    FLG2,B'10111111'                                   0251  08100000
*         CCWPTR = ADDR(URSNS);         /* SET CCW PTR          Y02906* 08110000
         LA    @F,URSNS                                           0252  08120000
         ST    @F,CCWPTR                                          0252  08130000
*  IF TYPE='4C'X THEN                   /* IF DEVICE IS 3838  @G29AFAA* 08140000
         CLI   39(@7),X'4C'                                       0253  08150000
         BC    07,@9DD                                            0253  08160000
*    DO;                                /* ARRAY PROCESSOR    @G29AFAA* 08170000
*      DPDONE='1'B;                     /* SET DPDONE FLAG ON @G29AFAA* 08180000
         OI    12(@7),B'00100000'                                 0255  08190000
*      GO TO DPTAPE10;                  /* EXIT MODULE        @G29AFAA* 08200000
         BC    15,DPTAPE10                                        0256  08210000
*    END;                                                   /*@G29AFAA* 08220000
*  GEN(BAL   R5,IORTN);                  /* GO DO IO OP         Y01906* 08230000
@9DD     EQU   *                                                  0258  08240000
         BAL   R5,IORTN                                                 08250000
         DS    0H                                                       08260000
*  IF EXIOK='0C' THEN                    /* IS IO OP SUCCESSFUL Y01906* 08270000
         CLC   TECB+16(1),@C32                                    0259  08280000
         BC    07,@9DC                                            0259  08290000
*         DO;                           /*                      YM3384* 08300000
*         DPDONE='1'B;                  /* SET DPDONE FLG ON    YM3384* 08310000
         OI    12(@7),B'00100000'                                 0261  08320000
*          GO TO DPTAPE10;         /* EXIT MODULE               YM2271* 08330000
         BC    15,DPTAPE10                                        0262  08340000
*         END;                          /*                      YM3384* 08350000
*  IF SNS2='1'B THEN                     /* NO,IS INT, REQUIRED Y01906* 08360000
@9DC     TM    TECB+23,B'01000000'                                0264  08370000
*    GOTO DPTAPE11;                      /* YES,GO PUT OUT MSG. Y01906* 08380000
         BC    01,DPTAPE11                                        0265  08390000
*         DPDONE='1'B;                  /* SET DPDONE FLG ON    YM3384* 08400000
         OI    12(@7),B'00100000'                                 0266  08410000
*          GO TO DPTAPE10;         /* EXIT MODULE               YM2271* 08420000
         BC    15,DPTAPE10                                        0267  08430000
*  /******************************************************************* 08440000
*  /*                                                                 * 08450000
*  /*                          PRINT MESSAGE IFD122I                  * 08460000
*  /*     VOL ON XXXXXXXX SECURITY PROTECTED                          * 08470000
*  /******************************************************************* 08480000
*  DPTAPE06:                                                            08490000
*  R1=MSG5;                         /* POINTER TO MESSAGE             * 08500000
DPTAPE06 L     @1,16(0,@4)                                        0268  08510000
*  MSGDVAD3=DEVADEB;                /* PUT DEVICE ADDRESS IN MSG5     * 08520000
         MVC   19(8,@1),0(@7)                                     0269  08530000
*  GEN(BAL   R5,DPTAPE13);               /* PRINT MESSAGE        M4506* 08540000
         BAL   R5,DPTAPE13                                              08550000
         DS    0H                                                       08560000
*  /******************************************************************* 08570000
*  /*                                                                 * 08580000
*  /*                          PRINT MESSAGE IFD139D                  * 08590000
*  /*     REPLY B TO BYPASS, R TO RETRY                               * 08600000
*  /******************************************************************* 08610000
*  DPTAPE07:                                                            08620000
*  R1=MSG8;                         /* POINTER TO MESSAGE             * 08630000
DPTAPE07 L     @1,28(0,@4)                                        0271  08640000
*  BUFAD=ADDR(BUFFER);              /* SET UP BUFFER ADDRESS          * 08650000
         LA    @F,BUFFER                                          0272  08660000
         ST    @F,@TEMP4                                          0272  08670000
         MVC   1(3,@1),@TEMP4+1                                   0272  08680000
*  MSGECBAD=ADDR(DECB);             /* POINTER TO PWTOR ECB           * 08690000
         LA    @F,DECB                                            0273  08700000
         ST    @F,4(0,@1)                                         0273  08710000
*  LENGTH='01'X;                    /* LENGTH OF RESPONSE             * 08720000
         MVI   0(@1),X'01'                                        0274  08730000
*     DECB=0;                       /* ZERO DECB                      * 08740000
         SR    @F,@F                                              0275  08750000
         ST    @F,DECB                                            0275  08760000
*  GEN(BAL   R5,DPTAPE14);               /* PRINT AND REPLY      M4506* 08770000
         BAL   R5,DPTAPE14                                              08780000
         DS    0H                                                       08790000
*  IF BUFFER= 'B' THEN DO;          /* IF REPLY IS BYPASS             * 08800000
         CLI   BUFFER,C'B'                                        0277  08810000
         BC    07,@9DB                                            0277  08820000
*         IF PRIMARY ='1'B THEN                                         08830000
         TM    12(@7),B'01000000'                                 0279  08840000
         BC    12,@9DA                                            0279  08850000
*     BYPDEV='1'B;                  /* SET BYPASS BIT                 * 08860000
         OI    A00007+3,B'00100000'                               0280  08870000
*     GOTO DPTAPE10;                /* RETURN                         * 08880000
         BC    15,DPTAPE10                                        0281  08890000
*                     END;                                              08900000
*  IF BUFFER= 'R' THEN              /* IF REPLY IS RETRY              * 08910000
@9DB     CLI   BUFFER,C'R'                                        0283  08920000
*     GOTO DPTAPE00;                /* GOTO BEGINNING OF MODULE       * 08930000
         BC    08,DPTAPE00                                        0284  08940000
*  ELSE GOTO DPTAPE07;              /* TRY AGAIN REPY NOT RECOGNIZED  * 08950000
         BC    15,DPTAPE07                                        0285  08960000
*  /******************************************************************* 08970000
*  /*                                                                 * 08980000
*  /*     PRINT IFD122I VOL ON XXXXXXXX UNEXPIRED DATE                * 08990000
*  /*                                                                 * 09000000
*  /******************************************************************* 09010000
*  DPTAPE08:                                                            09020000
*  R1=MSG7;                         /* POINTER TO MESSAGE             * 09030000
DPTAPE08 L     @1,24(0,@4)                                        0286  09040000
*  MSGDVAD4=DEVADEB;                /* PUT DEVICE ADDRESS IN MSG7     * 09050000
         MVC   19(8,@1),0(@7)                                     0287  09060000
*  GEN(BAL   R5,DPTAPE13);               /* PRINT MESSAGE        M4506* 09070000
         BAL   R5,DPTAPE13                                              09080000
         DS    0H                                                       09090000
*  GOTO DPTAPE05;                   /* GO PRINT OPTION MESSAGE        * 09100000
         BC    15,DPTAPE05                                        0289  09110000
*                                                                       09120000
*  /******************************************************************* 09130000
*  /*                                                                 * 09140000
*  /*           PRINT IFD130I MESSAGE                                 * 09150000
*  /*     INTERVENTION REQ XXXXXXXX                                   * 09160000
*  /******************************************************************* 09170000
*  DPTAPE11:                                                            09180000
*         R1=MSG9;                       /* PUT PTR TO MSG IN R1      * 09190000
DPTAPE11 L     @1,32(0,@4)                                        0290  09200000
*         MSGDVAD9=DEVADEB;              /*PUT DEV ADDR IN MSG        * 09210000
         MVC   29(8,@1),0(@7)                                     0291  09220000
*  GEN(BAL   R5,DPTAPE13);               /* PRINT MESSAGE        M4506* 09230000
         BAL   R5,DPTAPE13                                              09240000
         DS    0H                                                       09250000
*     GO TO DPTAPE05;               /* GO GIVE OPTIONS B, R, P  Y01906* 09260000
         BC    15,DPTAPE05                                        0293  09270000
*  /******************************************************************* 09280000
*  /*                                                                 * 09290000
*  /*                          PRINT MESSAGE IFD138I                  * 09300000
*  /*     DEV XXXXXXXX NOT OPERATIONAL,CC=3                           * 09310000
*  /******************************************************************* 09320000
*  DPTAPE12:                                                            09330000
*         R1=MSGA;                       /* POINTER TO MESSAGE        * 09340000
DPTAPE12 L     @1,36(0,@4)                                        0294  09350000
*         MSGDVADA=DEVADEB;              /*PUT DEV ADDR IN MSG        * 09360000
         MVC   16(8,@1),0(@7)                                     0295  09370000
*  GEN(BAL   R5,DPTAPE13);               /* PRINT MESSAGE        M4506* 09380000
         BAL   R5,DPTAPE13                                              09390000
         DS    0H                                                       09400000
*         GOTO DPTAPE05;                 /*GO PRINT MSG IFD139D       * 09410000
         BC    15,DPTAPE05                                        0297  09420000
* DPTAPE13:                              /*                      M4506* 09430000
*  GEN(PWTO  REG=(1));                   /* PRINT MESSAGE        M4506* 09440000
DPTAPE13 PWTO  REG=(1)                                                  09450000
         DS    0H                                                       09460000
*  GOTO R5;                              /* RESUME PROGRAM       M4506* 09470000
         BCR   15,@5                                              0299  09480000
* DPTAPE14:                              /*                      M4506* 09490000
*  GEN(PWTOR REG=(1));                   /* PRINT AND REPLY      M4506* 09500000
DPTAPE14 PWTOR REG=(1)                                                  09510000
         DS    0H                                                       09520000
*  GOTO R5;                              /* RESUME PROGRAM       M4506* 09530000
         BCR   15,@5                                              0301  09540000
*  DPTAPE10:                                                            09550000
*         MODESV=FILEMSK;                                     /*Y02906* 09560000
DPTAPE10 MVC   30(1,@7),FILEMSK                                   0302  09570000
*         PROTECT='0'B;                                                 09580000
         NI    A00007,B'10111111'                                 0303  09590000
*  RETURN;                          /* RETURN TO CALLING MODULE       * 09600000
         BC    15,@EL01                                           0304  09610000
* IORTN:                                                                09620000
*         FLGB   = '00'X;               /* ZIP FLAGS            Y02906* 09630000
IORTN    MVI   FLGB,X'00'                                         0305  09640000
*         CLRTECB = CLRTECB && CLRTECB; /* CLEAR TECB           Y02906* 09650000
         XC    TECB+6(39),TECB+6                                  0306  09660000
*         DVTPTR = R7;                  /* SET DEVTAB ENTRY PTR Y02906* 09670000
         ST    @7,DVTPTR                                          0307  09680000
*         FLGA   = '00'X;               /* ZIP FLAGS            Y02906* 09690000
         MVI   FLGA,X'00'                                         0308  09700000
*         INTCALL = '1'B;               /* SET INTERNAL CALL SW Y02906* 09710000
         OI    FLG2,B'10000000'                                   0309  09720000
*         BYPASS = '1'B;                 /* SET BYPASS PREFIX SWY02906* 09730000
         OI    FLG1A,B'10000000'                                  0310  09740000
*         SNSCNT = '18'X;                /* SET SENSE COUNT     Y02906* 09750000
         MVI   SNSCNT,X'18'                                       0311  09760000
*         TECBPTRX = ADDR(TECB);         /* SET ADDR TECB       Y02906* 09770000
         LA    @F,TECB                                            0312  09780000
         ST    @F,TECBPTRX                                        0312  09790000
*         CDSPTR = ADDR(ADRHEX);        /* SET ADDR OF CDS DEV  Y02906* 09800000
         LA    @F,32(0,@7)                                        0313  09810000
         ST    @F,WAITLST+8                                       0313  09820000
*         R15  = IORTNADR;              /* GET EFFECTOR PTR     Y02906* 09830000
         L     @F,IORTNADR                                        0314  09840000
*         GEN(BALR R14,R15);            /* GO SIO               Y02906* 09850000
         BALR R14,R15                                                   09860000
         DS    0H                                                       09870000
*         R1 = ADDR(WAITLST);           /* GET POINTER FOR WAIT Y02906* 09880000
         LA    @1,WAITLST                                         0316  09890000
*         R15 = TAB28;                   /* GET TRANS MGR ENTRY Y02906* 09900000
         L     @F,TAB28                                           0317  09910000
*         GEN(BALR  14,15);             /* GO TO WAIT MODULE    Y02008* 09920000
         BALR  14,15                                                    09930000
         DS    0H                                                       09940000
*         GO TO R5;                     /* RETURN TO CALLER     Y02008* 09950000
         BCR   15,@5                                              0319  09960000
* NEWCONV:                                                              09970000
*  R1=ADDR(CNVRT);                       /* CONVERT PARAMETER    M4506* 09980000
NEWCONV  LA    @1,CNVRT                                           0320  09990000
*  R15=TAB28;                            /* TRANSIENT MANAGER    M4506* 10000000
         L     @F,TAB28                                           0321  10010000
*  GOTO R15;                             /* CALL CONVERT         M4506* 10020000
         BCR   15,@F                                              0322  10030000
*         END;                                                          10040000
@EL01    L     @D,4(0,@D)                                         0323  10050000
         LM    @E,@C,12(@D)                                       0323  10060000
         BCR   15,@E                                              0323  10070000
@DATA1   EQU   *                                                        10080000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           10090000
@1       EQU   01                                                       10100000
@2       EQU   02                                                       10110000
@3       EQU   03                                                       10120000
@4       EQU   04                                                       10130000
@5       EQU   05                                                       10140000
@6       EQU   06                                                       10150000
@7       EQU   07                                                       10160000
@8       EQU   08                                                       10170000
@9       EQU   09                                                       10180000
@A       EQU   10                                                       10190000
@B       EQU   11                                                       10200000
@C       EQU   12                                                       10210000
@D       EQU   13                                                       10220000
@E       EQU   14                                                       10230000
@F       EQU   15                                                       10240000
         DS    0F                                                       10250000
@C11     DC    C'VOL1'                                                  10260000
@C20     DC    C'HDR1'                                                  10270000
@C21     DC    C'ONLINE ,'                                              10280000
@C29     DC    C'FUNCTIONALLY  '                                        10290000
@C30     DC    C'DIAGNOSTICALLY'                                        10300000
@C32     DC    C'0C'                                                    10310000
@C22     DC    C'ALLOCATED  '                                           10320000
@C23     DC    C'UNALLOCATED'                                           10330000
         DS    0D                                                       10340000
@DATA    EQU   *                                                        10350000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   10360000
X        EQU   00000000            FULLWORD INTEGER                     10370000
R0       EQU   00000000            FULLWORD POINTER REGISTER            10380000
R1       EQU   00000001            FULLWORD POINTER REGISTER            10390000
R2       EQU   00000002            FULLWORD POINTER REGISTER            10400000
R3       EQU   00000003            FULLWORD POINTER REGISTER            10410000
R4       EQU   00000004            FULLWORD POINTER REGISTER            10420000
R5       EQU   00000005            FULLWORD POINTER REGISTER            10430000
R6       EQU   00000006            FULLWORD POINTER REGISTER            10440000
R7       EQU   00000007            FULLWORD POINTER REGISTER            10450000
R8       EQU   00000008            FULLWORD POINTER REGISTER            10460000
R9       EQU   00000009            FULLWORD POINTER REGISTER            10470000
I        EQU   00000008            FULLWORD INTEGER REGISTER            10480000
R10      EQU   00000010            FULLWORD POINTER REGISTER            10490000
R11      EQU   00000011            FULLWORD POINTER REGISTER            10500000
R12      EQU   00000012            FULLWORD POINTER REGISTER            10510000
R13      EQU   00000013            FULLWORD POINTER REGISTER            10520000
R14      EQU   00000014            FULLWORD POINTER REGISTER            10530000
R15      EQU   00000015            FULLWORD POINTER REGISTER            10540000
WAITLST  EQU   @DATA+00000072      16 BYTE(S) ON WORD                   10550000
         ORG   WAITLST+00000000                                         10560000
XMGR     EQU   *                   1 BYTE(S)                            10570000
         DC    X'00'                                                    10580000
LVL      EQU   *                   1 BYTE(S)                            10590000
         DC    X'02'                                                    10600000
MODID    EQU   *                   2 BYTE(S)                            10610000
         DC    C'36'                                                    10620000
TECBPTR  EQU   *                   FULLWORD POINTER                     10630000
         DC    AL4(TECB)                                                10640000
CDSPTR   EQU   *                   FULLWORD POINTER                     10650000
         DC    AL4(0)                                                   10660000
FLG      EQU   *                   8 BIT(S) ON BYTE                     10670000
         DC    X'80'                                                    10680000
WAITYES  EQU   WAITLST+00000012    1 BIT(S)                             10690000
TIME     EQU   *                   2 BYTE(S)                            10700000
         DC    X'001E'                                                  10710000
A00026   EQU   00000000            52 BYTE(S) ON WORD                   10720000
DEVADEB  EQU   A00026+00000000     8 BYTE(S)                            10730000
UCBAD    EQU   A00026+00000008     FULLWORD POINTER                     10740000
DEVFLG1  EQU   A00026+00000012     1 BYTE(S)                            10750000
STATUS   EQU   A00026+00000012     1 BIT(S)                             10760000
PRIMARY  EQU   A00026+00000012     1 BIT(S)                             10770000
DPDONE   EQU   A00026+00000012     1 BIT(S)                             10780000
A00027   EQU   A00026+00000012     3 BIT(S)                             10790000
FILEPROT EQU   A00026+00000012     1 BIT(S)                             10800000
A00028   EQU   A00026+00000012     1 BIT(S)                             10810000
DEVFLG2  EQU   A00026+00000013     1 BYTE(S)                            10820000
A00029   EQU   A00026+00000013     2 BIT(S)                             10830000
CEVOL    EQU   A00026+00000013     1 BIT(S)                             10840000
STDLABL  EQU   A00026+00000013     1 BIT(S)                             10850000
A00030   EQU   A00026+00000013     4 BIT(S)                             10860000
DEVFLG3  EQU   A00026+00000014     1 BYTE(S)                            10870000
A00031   EQU   A00026+00000014     3 BIT(S)                             10880000
TAPEBIT  EQU   A00026+00000014     1 BIT(S)                             10890000
A00032   EQU   A00026+00000014     1 BIT(S)                             10900000
SYSALLOC EQU   A00026+00000014     1 BIT(S)                             10910000
A00033   EQU   A00026+00000014     2 BIT(S)                             10920000
DEVFLG4  EQU   A00026+00000015     1 BYTE(S)                            10930000
TAPELABL EQU   A00026+00000016     16 BYTE(S)                           10940000
VOL      EQU   A00026+00000016     10 BYTE(S)                           10950000
HDR      EQU   A00026+00000026     4 BYTE(S)                            10960000
MODESV   EQU   A00026+00000030     1 BYTE(S)                            10970000
A00034   EQU   A00026+00000031     1 BYTE(S)                            10980000
ADRHEX   EQU   A00026+00000032     4 BYTE(S)                            10990000
A00035   EQU   A00026+00000032     2 BYTE(S)                            11000000
HEXAD    EQU   A00026+00000034     2 BYTE(S)                            11010000
CDSINFOR EQU   A00026+00000036     16 BYTE(S)                           11020000
MODEL    EQU   A00026+00000036     1 BYTE(S)                            11030000
FEATURES EQU   A00026+00000037     1 BYTE(S)                            11040000
STRACK   EQU   A00026+00000037     1 BIT(S)                             11050000
A00036   EQU   A00026+00000037     7 BIT(S)                             11060000
CLASS    EQU   A00026+00000038     1 BYTE(S)                            11070000
TYPE     EQU   A00026+00000039     1 BYTE(S)                            11080000
A00037   EQU   A00026+00000040     12 BYTE(S)                           11090000
TECB     EQU   @DATA+00000088      45 BYTE(S) ON WORD                   11100000
         ORG   TECB+00000000                                            11110000
FLDCNT   EQU   *                   1 BYTE(S)                            11120000
         DC    X'01'                                                    11130000
FLDSIZE  EQU   *                   1 BYTE(S)                            11140000
         DC    X'0C'                                                    11150000
SOMETNG  EQU   *                   1 BYTE(S)                            11160000
         DC    X'00'                                                    11170000
SNSSIZE  EQU   *                   1 BYTE(S)                            11180000
         DC    X'18'                                                    11190000
FLG1     EQU   *                   1 BYTE(S)                            11200000
         DC    X'00'                                                    11210000
SNSCNTTB EQU   *                   1 BYTE(S)                            11220000
         DC    X'01'                                                    11230000
CLRTECB  EQU   TECB+00000006       39 BYTE(S)                           11240000
CNTSNS   EQU   *                   1 BYTE(S)                            11250000
         DC    X'00'                                                    11260000
CNTINT   EQU   *                   1 BYTE(S)                            11270000
         DC    X'00'                                                    11280000
CCP      EQU   TECB+00000008       1 BYTE(S)                            11290000
A00038   EQU   TECB+00000009       3 BYTE(S)                            11300000
CSW1     EQU   TECB+00000012       8 BYTE(S)                            11310000
A00039   EQU   TECB+00000012       4 BYTE(S)                            11320000
STATUSX  EQU   TECB+00000016       2 BYTE(S)                            11330000
EXIOK    EQU   TECB+00000016       1 BYTE(S)                            11340000
A00040   EQU   TECB+00000016       6 BIT(S)                             11350000
UNITCK   EQU   TECB+00000016       1 BIT(S)                             11360000
UNITEXCP EQU   TECB+00000016       1 BIT(S)                             11370000
BYTE2    EQU   TECB+00000017       1 BYTE(S)                            11380000
A00041   EQU   TECB+00000017       1 BIT(S)                             11390000
INLENGTH EQU   TECB+00000017       1 BIT(S)                             11400000
A00042   EQU   TECB+00000017       6 BIT(S)                             11410000
A00043   EQU   TECB+00000018       2 BYTE(S)                            11420000
SENSE    EQU   TECB+00000020       24 BYTE(S)                           11430000
A00044   EQU   TECB+00000020       3 BYTE(S)                            11440000
SNS1     EQU   TECB+00000023       7 BYTE(S)                            11450000
SNSFLD   EQU   TECB+00000023       8 BIT(S)                             11460000
A00045   EQU   TECB+00000023       1 BIT(S)                             11470000
SNS2     EQU   TECB+00000023       1 BIT(S)                             11480000
A00046   EQU   TECB+00000024       2 BYTE(S)                            11490000
A00047   EQU   TECB+00000026       8 BIT(S)                             11500000
A00048   EQU   TECB+00000026       5 BIT(S)                             11510000
PEIND    EQU   TECB+00000026       1 BIT(S)                             11520000
A00049   EQU   TECB+00000027       2 BYTE(S)                            11530000
A00050   EQU   TECB+00000029       1 BYTE(S)                            11540000
A00051   EQU   TECB+00000029       4 BIT(S)                             11550000
BIT4     EQU   TECB+00000029       1 BIT(S)                             11560000
LABEL1   EQU   @DATA+00000133      80 BYTE(S)                           11570000
TAPEVOL  EQU   LABEL1+00000000     10 BYTE(S)                           11580000
VOLAB    EQU   LABEL1+00000000     4 BYTE(S)                            11590000
VOLSERNO EQU   LABEL1+00000004     6 BYTE(S)                            11600000
SECURE   EQU   LABEL1+00000010     1 BYTE(S)                            11610000
A00052   EQU   LABEL1+00000011     69 BYTE(S)                           11620000
LABEL2   EQU   @DATA+00000133      80 BYTE(S)                           11630000
HDRLAB   EQU   LABEL2+00000000     4 BYTE(S)                            11640000
A00053   EQU   LABEL2+00000004     43 BYTE(S)                           11650000
A00054   EQU   LABEL2+00000047     7 BYTE(S)                            11660000
A00055   EQU   LABEL2+00000047     1 BYTE(S)                            11670000
DATE1    EQU   LABEL2+00000048     5 BYTE(S)                            11680000
A00056   EQU   LABEL2+00000053     1 BYTE(S)                            11690000
A00057   EQU   LABEL2+00000054     26 BYTE(S)                           11700000
         ORG   @DATA+00000216                                           11710000
MSGPTR   EQU   *                   FULLWORD POINTER                     11720000
         DC    VL4(IFDMSG03)                                            11730000
A00058   EQU   00000000            64 BYTE(S) ON WORD                   11740000
MSG1     EQU   A00058+00000000     FULLWORD POINTER                     11750000
MSG2     EQU   A00058+00000004     FULLWORD POINTER                     11760000
MSG3     EQU   A00058+00000008     FULLWORD POINTER                     11770000
MSG4     EQU   A00058+00000012     FULLWORD POINTER                     11780000
MSG5     EQU   A00058+00000016     FULLWORD POINTER                     11790000
MSG6     EQU   A00058+00000020     FULLWORD POINTER                     11800000
MSG7     EQU   A00058+00000024     FULLWORD POINTER                     11810000
MSG8     EQU   A00058+00000028     FULLWORD POINTER                     11820000
MSG9     EQU   A00058+00000032     FULLWORD POINTER                     11830000
MSGA     EQU   A00058+00000036     FULLWORD POINTER                     11840000
MSGB     EQU   A00058+00000040     FULLWORD POINTER                     11850000
MSGC     EQU   A00058+00000044     FULLWORD POINTER                     11860000
MSGD     EQU   A00058+00000048     FULLWORD POINTER                     11870000
MSGE     EQU   A00058+00000052     FULLWORD POINTER                     11880000
MSGF     EQU   A00058+00000056     FULLWORD POINTER                     11890000
MSGG     EQU   A00058+00000060     FULLWORD POINTER                     11900000
MSG109   EQU   00000000            40 BYTE(S) ON WORD                   11910000
A00059   EQU   MSG109+00000000     12 BYTE(S)                           11920000
MSGDVAD  EQU   MSG109+00000012     8 BYTE(S)                            11930000
A00060   EQU   MSG109+00000020     1 BYTE(S)                            11940000
ONOROFF  EQU   MSG109+00000021     8 BYTE(S)                            11950000
ALORNOT  EQU   MSG109+00000029     11 BYTE(S)                           11960000
MSGDVAD1 EQU   00000034            8 BYTE(S)                            11970000
MSGDVAD2 EQU   00000036            8 BYTE(S)                            11980000
MSGDVAD3 EQU   00000019            8 BYTE(S)                            11990000
MSGDVAD4 EQU   00000019            8 BYTE(S)                            12000000
MSGDVAD9 EQU   00000029            8 BYTE(S)                            12010000
MSGDVADA EQU   00000016            8 BYTE(S)                            12020000
MSGDVA39 EQU   00000039            8 BYTE(S)                            12030000
MSGSNS   EQU   00000037            12 BYTE(S)                           12040000
MSGCSW   EQU   00000018            14 BYTE(S)                           12050000
MSGDVADD EQU   00000038            8 BYTE(S)                            12060000
MSGDVADG EQU   00000022            8 BYTE(S)                            12070000
MSGINIT  EQU   00000043            14 BYTE(S)                           12080000
MSGPARM  EQU   00000000            8 BYTE(S) ON WORD                    12090000
LENGTH   EQU   MSGPARM+00000000    1 BYTE(S)                            12100000
BUFAD    EQU   MSGPARM+00000001    3  BYTE  POINTER ON WORD+1           12110000
MSGECBAD EQU   MSGPARM+00000004    FULLWORD INTEGER                     12120000
DECB     EQU   *                   FULLWORD INTEGER                     12130000
         DC    FL4'0'                                                   12140000
INBUF    EQU   @DATA+00000224      62 BYTE(S)                           12150000
CSWIN    EQU   INBUF+00000000      14 BYTE(S)                           12160000
A00061   EQU   INBUF+00000014      6 BYTE(S)                            12170000
SNSIN    EQU   INBUF+00000020      48 BYTE(S)                           12180000
         ORG   @DATA+00000292                                           12190000
AREA     EQU   *                   FULLWORD INTEGER                     12200000
         DC    FL4'0'                                                   12210000
AREA1    EQU   *                   6 BYTE(S)                            12220000
         DC    X'000000000000'                                          12230000
XAREA    EQU   @DATA+00000297      5 BYTE(S)                            12240000
         ORG   @DATA                                                    12250000
         DS    00000302C                                                12260000
@TEMPS   DS    0F                                                       12270000
@TEMP4   DC    F'0'                                                     12280000
RDLAB    CCW   7,*,X'60',1       REWIND                                 12290000
         CCW   4,SNS1,X'60',24          SENSE                    X02906 12300000
         CCW   2,LABEL1,X'40',80    READ VOL1 RECORD                    12310000
         CCW   04,*,X'30',1       FORCE CHAN END DEV END, NO DATA TRANS 12320000
URSNS    CCW   3,*,X'60',1              NO-OP FOR UR RDY CHK   Y01906   12330000
         CCW   04,*,X'30',1       FORCE CHAN END DEV END, NO DATA TRANS 12340000
RDLAB1   CCW   2,LABEL1,X'40',80      READ HDR1 RECORD                  12350000
         CCW   04,*,X'30',1       FORCE CHAN END DEV END, NO DATA TRANS 12360000
CNVRT    DC    B'00000000'         CONTROL PROGRAM FLAGS                12370000
         DC    AL1(2)              MACRO LEVEL                          12380000
         DC    CL2'41'             MACRO ID                             12390000
        DC    A(CSW1+1)                                                 12400000
         DC    A(INBUF)                                                 12410000
         DC    AL2(31+32768)            COUNT AND TYPE           S21052 12420000
DSECTAA  IFDCOM                                                         12430000
A00000   EQU   CESWT3+00000000     1 BYTE(S)                            12440000
A00001   EQU   A00000+00000000     3 BIT(S)                             12450000
GRBCTL   EQU   A00000+00000000     1 BIT(S)                             12460000
SUSDEL   EQU   A00000+00000000     1 BIT(S)                             12470000
A00002   EQU   A00000+00000000     1 BIT(S)                             12480000
A00003   EQU   CHASCT+00000010     1 BYTE(S)                            12490000
A00004   EQU   A00003+00000000     1 BIT(S)                             12500000
FPM      EQU   A00003+00000000     1 BIT(S)                             12510000
A00005   EQU   MSSSTAT+00000000    1 BYTE(S) ON WORD                    12520000
FINITSW  EQU   A00005+00000000     1 BIT(S)                             12530000
DINITSW  EQU   A00005+00000000     1 BIT(S)                             12540000
INITSW   EQU   A00005+00000000     1 BIT(S)                             12550000
A00006   EQU   A00005+00000000     5 BIT(S)                             12560000
FLG1A    EQU   FLGA+00000000       8 BIT(S) ON BYTE                     12570000
BYPASS   EQU   FLG1A+00000000      1 BIT(S)                             12580000
FLG2     EQU   FLGB+00000000       8 BIT(S) ON BYTE                     12590000
INTCALL  EQU   FLG2+00000000       1 BIT(S)                             12600000
MODEREQ  EQU   FLG2+00000000       1 BIT(S)                             12610000
A00007   EQU   CESWT+00000000      4 BYTE(S) ON WORD                    12620000
A00008   EQU   A00007+00000000     8 BIT(S)                             12630000
A00009   EQU   A00007+00000000     1 BIT(S)                             12640000
PROTECT  EQU   A00007+00000000     1 BIT(S)                             12650000
A00010   EQU   A00007+00000000     6 BIT(S)                             12660000
A00011   EQU   A00007+00000001     8 BIT(S)                             12670000
A00012   EQU   A00007+00000001     1 BIT(S)                             12680000
SEEK2321 EQU   A00007+00000001     1 BIT(S)                             12690000
SECONLOK EQU   A00007+00000001     1 BIT(S)                             12700000
A00013   EQU   A00007+00000001     1 BIT(S)                             12710000
FILMSK   EQU   A00007+00000001     1 BIT(S)                             12720000
T2321    EQU   A00007+00000001     1 BIT(S)                             12730000
ONLINEOK EQU   A00007+00000001     1 BIT(S)                             12740000
A00014   EQU   A00007+00000001     1 BIT(S)                             12750000
A00015   EQU   A00007+00000002     8 BIT(S)                             12760000
NDCFO    EQU   A00007+00000002     1 BIT(S)                             12770000
DPONDEV  EQU   A00007+00000002     1 BIT(S)                             12780000
A00016   EQU   A00007+00000002     1 BIT(S)                             12790000
CHANTEST EQU   A00007+00000002     1 BIT(S)                             12800000
A00017   EQU   A00007+00000002     1 BIT(S)                             12810000
A00018   EQU   A00007+00000002     1 BIT(S)                             12820000
TAPEHDR  EQU   A00007+00000002     1 BIT(S)                             12830000
AMERLDV  EQU   A00007+00000002     1 BIT(S)                             12840000
A00019   EQU   A00007+00000003     8 BIT(S)                             12850000
A00020   EQU   A00007+00000003     1 BIT(S)                             12860000
BYPALDEV EQU   A00007+00000003     1 BIT(S)                             12870000
BYPDEV   EQU   A00007+00000003     1 BIT(S)                             12880000
A00021   EQU   A00007+00000003     1 BIT(S)                             12890000
A00022   EQU   A00007+00000003     1 BIT(S)                             12900000
A00023   EQU   A00007+00000003     1 BIT(S)                             12910000
A00024   EQU   A00007+00000003     1 BIT(S)                             12920000
A00025   EQU   A00007+00000003     1 BIT(S)                             12930000
BUFFER   EQU   INBUFR+00000000     1 BYTE(S)                            12940000
@DATEND  EQU   *                                                        12950000
@9FE     EQU   DPTAPE01                                                 12960000
@9FD     EQU   DPTAPE01                                                 12970000
@9F7     EQU   DPTAPE03                                                 12980000
@9EE     EQU   DPTAPE03                                                 12990000
@9E4     EQU   DPTAPE10                                                 13000000
@9DE     EQU   DPTAPE10                                                 13010000
@9DF     EQU   DPMSGF                                                   13020000
@9DA     EQU   DPTAPE10                                                 13030000
         END    ,(C'PL/S',1400,78118)                                   13040000
./  ADD  SSI=32570887,NAME=IFDOLT04
         TITLE 'IFDOLT04 - DRUM DATA PROTECTION'                        00010000
         LCLA  &T,&SPN                                            0001  00020000
.@001    ANOP                                                     0001  00030000
IFDOLT04 CSECT ,                                                  0001  00040000
         BC    15,24(0,@F)                                              00050000
         DC    C'IFDOLT04 14 SEP 73'                             0001  00060000
         STM   @E,@C,12(@D)                                       0001  00070000
         BALR  @B,0                                               0001  00080000
@PSTART  DS    0H                                                 0001  00090000
         USING @PSTART+00000,@B                                   0001  00100000
         ST    @D,@SAV001+4                                       0001  00110000
         LA    @F,@SAV001                                         0001  00120000
         ST    @F,8(0,@D)                                         0001  00130000
         LR    @D,@F                                              0001  00140000
         TITLE 'IFDOLT04 - DRUM DATA PROTECTION'                        00150000
         DS    0H                                                       00160000
*         GEN(USING CHASCT,2);           /*COMMON AREA BASE REGISTER  * 00170000
         USING CHASCT,2                                                 00180000
         DS    0H                                                       00190000
*         GEN DATA;                      /*OLTEP COMMON AREA          * 00200000
*         /************************************************************ 00210000
*         /*                                                          * 00220000
*         /*         DECLARED REGISTERS                               * 00230000
*         /*                                                          * 00240000
*         /************************************************************ 00250000
*         DCL R0 REG(0) PTR;             /* REGISTER ZERO             * 00260000
*         DCL R1 REG(1) PTR;             /* REGISTER 1                * 00270000
*         DCL R2 REG(2) PTR;             /* REGISTER 2                * 00280000
*         DCL R3 REG(3) PTR;             /*REGISTER 3                 * 00290000
*         DCL R4 REG(4) PTR;             /* REGISTER 4                * 00300000
*         DCL R5 REG(5) PTR;             /* REGISTER 5                * 00310000
*         DCL R6 REG(6) PTR;             /* REGISTER 6                * 00320000
*         DCL R7 REG(7) PTR;             /* REGISTER 7                * 00330000
*         DCL R8 REG(8) PTR;             /* REGISTER 8                * 00340000
*         DCL R9 REG(9) PTR;             /* REGISTER 9                * 00350000
*         DCL R10 REG(10) PTR;           /* REGISTER 10               * 00360000
*         DCL R11 REG(11) PTR;           /* REGISTER 11               * 00370000
*         DCL R12 REG(12) PTR;           /* REGISTER 12               * 00380000
*         DCL R13 REG(13) PTR;           /* REGISTER 13               * 00390000
*         DCL R14 REG(14) PTR;           /* REGISTER 14               * 00400000
*         DCL R15 REG(15) PTR;           /* REGISTER 15               * 00410000
*         RESTRICT(R1,R2,R3,R7);         /* RESTRICT REGISTERS        * 00420000
*         DCL IFDMSG04 EXT ENTRY;        /* MSG MODULE                * 00430000
*         DCL MSGPTR PTR                 /* PTR TO MESSAGE MODULE     * 00440000
*               INIT(ADDR(IFDMSG04));    /* INITIALIZE MSG PTR        * 00450000
*         /************************************************************ 00460000
*         /*    POINTERS TO MESSAGES                                  * 00470000
*         /************************************************************ 00480000
*         DCL 1 * BASED(R3),                                            00490000
*           3 IFD120 PTR,                /* PTR TO MSG IFD120D        * 00500000
*           3 IFD145 PTR,                /* PTR TO MSG IFD145D        * 00510000
*           3 IFD212 PTR;                /* PTR TO MSG IFD212I        * 00520000
*         DCL CESWT1 CHAR(1) GENERATED;  /* OLTEP SWITCHES            * 00530000
*         /************************************************************ 00540000
*         /*    SWITCH STRUCTURE FOR CESWT1                           * 00550000
*         /************************************************************ 00560000
*         DCL 1 * CHAR(1)                                               00570000
*               BASED(ADDR(CESWT1)),     /* FOR CESWT1                * 00580000
*           3 * BIT(4),                  /* N/A                       * 00590000
*           3 FILMSK BIT(1),             /* ALLOW FILMSK CHANGES      * 00600000
*           3 * BIT(1),                  /* N/A                       * 00610000
*           3 ONLINEOK BIT(1),           /* ONLINE FLAG               * 00620000
*           3 * BIT(1);                  /* N/A                       * 00630000
*         DCL CESWT3 CHAR(1) GENERATED;  /* OLTEP SWITCHES            * 00640000
*         /************************************************************ 00650000
*         /*    SWITCH STRUCTURE FOR CESWT3                           * 00660000
*         /************************************************************ 00670000
*         DCL 1 * CHAR(1)                                               00680000
*               BASED(ADDR(CESWT3)),     /* FOR CESWT3                * 00690000
*           3 * BIT(2),                  /* N/A                       * 00700000
*           3 NUDEV BIT(1),              /* BYPASS TESTS THIS DEVICE  * 00710000
*           3 * BIT(4),                  /* N/A                       * 00720000
*           3 NODP BIT(1);               /* NO DATA PROTECTION        * 00730000
*         DCL CHASCT  CHAR(88) GENERATED;/* SCT                       * 00740000
*         /************************************************************ 00750000
*         /*    SCT FLAG BYTE - OFFSET 10                             * 00760000
*         /************************************************************ 00770000
*         DCL 1 * CHAR(1)                                               00780000
*               BASED(ADDR(CHASCT)+10),  /* OFFSET 10                 * 00790000
*            3  * BIT(1),                /* N/A                       * 00800000
*            3  FPM BIT(1);              /* FILE PROTECT MODE BIT     * 00810000
*         /************************************************************ 00820000
*         /*    SCT FLAG BYTE - OFFSET 11                             * 00830000
*         /************************************************************ 00840000
*         DCL 1 * CHAR(1)                                               00850000
*               BASED(ADDR(CHASCT)+11),  /* OFFSET 11                 * 00860000
*            3 CDSFPM BIT(1),            /* FILE PROTECT FLAG         * 00870000
*            3 * BIT(7);                 /* N/A                       * 00880000
*         /************************************************************ 00890000
*         /* MAP OF DEVTAB - EACH ENTRY = 56 BYTES                    * 00900000
*         /************************************************************ 00910000
*         DCL 1 * BASED(R7),                                            00920000
*           3 DEVADEB CHAR(8),           /* DEV ADDR IN EBCDIC        * 00930000
*           3 DUCBA PTR(31),             /* UCB ADDR (TWO BYTE ADDR)  * 00940000
*           3 DEVFL1 CHAR(1),            /* FIRST FLAG BYTE IN DEVTAB * 00950000
*             5 ONLNE BIT(1),            /* DEVICE ON/OFF LINE STATUS * 00960000
*             5 PRIME BIT(1),            /* PRIMARY DEVICE INDICATOR  * 00970000
*             5 DPDONE BIT(1),           /* DATA PROTECTION COMPLETE  * 00980000
*             5 ACTVE BIT(1),            /* ACTIVE DEVICE             * 00990000
*             5 ALLCT BIT(1),            /* ALLOCATED DEVICE          * 01000000
*             5 GRBED BIT(1),            /* GRADDED (SECONDARY) DEV   * 01010000
*             5 FLPRT BIT(1),            /* FILE PROTECT MODE DEVICE  * 01020000
*             5 ACTSC BIT(1),            /* LAST ACTIVE SECONDARY DEV * 01030000
*           3 DEVFL2 CHAR(1),            /* SECOND FLAG BYTE IN DEVTAB* 01040000
*             5 DSNAME BIT(1),           /* DSNAME FLIP-FLOP          * 01050000
*             5 * BIT(1),                /* N/A                       * 01060000
*             5 CEVOL BIT(1),            /* C.E. VOLUME               * 01070000
*             5 STDLBL BIT(1),           /* STANDARD LABELED TAPE     * 01080000
*             5 CHANFUNC BIT(1),         /* CHANNEL FUNCTION          * 01090000
*             5 BYPS BIT(1),             /* BYPASS FUNCTION INVOKED   * 01100000
*             5 CEDE BIT(1),             /* CE-DE FUNCTION INVOKED    * 01110000
*             5 ATTN BIT(1),             /* ATTNIN FUNCTION INVOKED   * 01120000
*           3 DEVFL3 CHAR(1),            /* THIRD FLAG BYTE IN DEVTAB * 01130000
*             5 SPECEXP BIT(1),          /* SPECIFIC EXPOSURE FUNCTION* 01140000
*             5 * BIT(7),                /* EXPANSION                 * 01150000
*           3 DEVFL4 CHAR(1),            /* FOURTH FLAG BYTE IN DEVTAB* 01160000
*             5 RMTLNDAB BIT(1),         /* REMOTE LINE DISABLED      * 01170000
*             5 RMTLNENA BIT(1),         /* REMOTE LINE ENABLED       * 01180000
*             5 FRSTEXIO BIT(1),         /* FIRST EXIO ISSUED         * 01190000
*             5 * BIT(5),                /* EXPANSION                 * 01200000
*           3 DVEXT1 CHAR(6),            /* LOW DASD EXTENT           * 01210000
*           3 DVEXT2 CHAR(6),            /* HIGH DASD EXTENT          * 01220000
*             5 DVCCHH2 CHAR(4),         /* CC HH OF 2ND EXTENT       * 01230000
*           3 * CHAR(2),                 /* N/A                       * 01240000
*           3 MODESET CHAR(1),           /* MODE SET SAVE AREA        * 01250000
*           3 EXPOSURE CHAR(1),          /* EXPOSURE # FOR ZUES TYPE  * 01260000
*           3 DEHAD CHAR(4),             /* DEVICE ADDR IN HEX        * 01270000
*           3 CDSINFOR CHAR(16),         /* CDS INFO FOR THIS DEV     * 01280000
*             5 MODEL CHAR(1),           /* MODEL #                   * 01290000
*             5 FEATURES CHAR(1),        /* FEATURES ON THIS MODEL    * 01300000
*             5 CLASS  CHAR(1),          /* CLASS                     * 01310000
*             5 TYPE CHAR(1),            /* TYPE                      * 01320000
*             5 CDSCNT CHAR(1),          /* CDS BYTE COUNT            * 01330000
*             5 CDSFLAGS CHAR(1),        /* CDS FLAGS                 * 01340000
*               7 DVCDSFPM BIT(1),       /* FILE PROTECT FLAG   S21052* 01350000
*               7 * BIT(1),              /* -/A                 S21052* 01360000
*               7 DVCDECEV BIT(1),       /* CE VOLUME           S21052* 01370000
*             5 EXTSGMSK CHAR(2),        /* EXTERNAL SIGNAL MASK      * 01380000
*             5 SYMNAME CHAR(8),         /* SYMBOLIC NAME             * 01390000
*           3 * CHAR(4);                 /* EXPANSION                 * 01400000
*         /************************************************************ 01410000
*         /*    UCB                                                   * 01420000
*         /************************************************************ 01430000
*         DCL 1 * BASED(DUCBA),                                         01440000
*           3 *(4) FIXED,                /* N/A                       * 01450000
*           3 * CHAR(1),                 /* N/A                       * 01460000
*           3 * CHAR(1),                 /* N/A                       * 01470000
*             5 * BIT(2),                /* N/A                       * 01480000
*             5 SHARED BIT(1);           /* SHARED FLAG               * 01490000
*         /************************************************************ 01500000
*         /*    WTOR PARAMETER LIST                                   * 01510000
*         /************************************************************ 01520000
*         DCL 1 MSGPARM BASED(R1),                                      01530000
*           3 LENGTH CHAR(1),            /* LENGTH OF RESPONSE        * 01540000
*           3 BUFAD PTR(24),             /* BUFFER FOR RESPONSE       * 01550000
*           3 MSGECB PTR;                /* ECB ADDRESS               * 01560000
*         DCL DRUMECB FIXED INIT(0);     /* ECB                       * 01570000
*         DCL INBUFR CHAR(3) GENERATED;  /* BUFFER FOR RESPONSE       * 01580000
*         DCL MSGDVAD1 CHAR(8)           /* AREA FOR DEV ADDR IN MSG  * 01590000
*               BASED(R1+36);            /* OFFSET 36                 * 01600000
*         DCL MSGDVAD2 CHAR(8)           /* AREA FOR DEV ADDR IN MSG  * 01610000
*               BASED(R1+23);            /* OFFSET 23                 * 01620000
*         DCL MSGDVAD3 CHAR(8)           /* AREA FOR DEV ADDR IN MSG  * 01630000
*               BASED(R1+39);            /* OFFSET 39                 * 01640000
*         DCL BLANKS CHAR(3) INIT('   ');/* 3 BLANKS TO CLEAR INBUFR  * 01650000
*         DCL NOANS CHAR(3) INIT('NO '); /* CONSTANT ' NO '           * 01660000
*         DCL YANS CHAR(3) INIT('YES');  /* CONSTANT 'YES'            * 01670000
*         R3=MSGPTR;                     /* PTR TP MSG MOD            * 01680000
         L     @3,MSGPTR                                          0043  01690000
*         /* CHECK FOR NO DATA PROTECTION DONE                        * 01700000
*         IF NODP= '1'B THEN             /* ONLY PUT OUT MSG 120      * 01710000
         TM    A00005,B'00000001'                                 0044  01720000
*           GOTO DRUM00;                 /* GO PRINT MSG 212I         * 01730000
         BC    01,DRUM00                                          0045  01740000
*         /* CHECK FOR CE VOLUME ON DISK                              * 01750000
*         IF CEVOL = '1'B &              /* CE VOLUME ON DISK         * 01760000
*           SHARED='1'B THEN             /* SHARED DEVICE             * 01770000
         TM    13(@7),B'00100000'                                 0046  01780000
         BC    12,@9FF                                            0046  01790000
         L     @6,8(0,@7)                                         0046  01800000
         TM    17(@6),B'00100000'                                 0046  01810000
*               GOTO DRUM02;             /* OFFLINE IN ALL SYS MSG    * 01820000
         BC    03,DRUM02                                          0047  01830000
*         /* CHECK TO SEE IF DATA PROTECTION HAS BEEN DONE       M1468* 01840000
*         IF DPDONE='1'B THEN            /* IS DP DONE           M1468* 01850000
@9FE     EQU   *                                                  0048  01860000
@9FF     TM    12(@7),B'00100000'                                 0048  01870000
*           RETURN;                      /* YES, RETURN TO CALLERM1468* 01880000
         BC    03,@EL01                                           0049  01890000
*         /* CHECK FOR ONLINE DRUM                                    * 01900000
*         IF ONLNE= '1'B THEN            /* IS DEVICE ONLINE          * 01910000
@9FD     TM    12(@7),B'10000000'                                 0050  01920000
         BC    12,@9FC                                            0050  01930000
*           DO;                          /* SET ONLINE OK FLAGS       * 01940000
*             ONLINEOK='1'B;             /* YES SET FLAG              * 01950000
         OI    A00001,B'00000010'                                 0052  01960000
*             GOTO SETBITS;              /*GO SET OTHER BITS          * 01970000
         BC    15,SETBITS                                         0053  01980000
*           END;                         /* END OF DO GROUP           * 01990000
*         ONLINEOK='0'B;                 /* ZERO ONLINEOK FLAG        * 02000000
@9FC     NI    A00001,B'11111101'                                 0055  02010000
*         /* CHECK FOR SHARED DRUM                                    * 02020000
*         IF SHARED='1'B THEN            /* IS DEVICE SHARED          * 02030000
         L     @6,8(0,@7)                                         0056  02040000
         TM    17(@6),B'00100000'                                 0056  02050000
         BC    12,@9FB                                            0056  02060000
*           DO;                          /* SHARED DEVICE             * 02070000
* DRUM02:                                /* PUT OUT MSG  IFD145D      * 02080000
*             R1=IFD145;                 /* GET PTR TO MSG            * 02090000
DRUM02   L     @1,4(0,@3)                                         0058  02100000
*             BUFAD=ADDR(INBUFR);        /* ADDR OF RESPONSE BUFFER   * 02110000
         LA    @F,INBUFR                                          0059  02120000
         ST    @F,@TEMP4                                          0059  02130000
         MVC   1(3,@1),@TEMP4+1                                   0059  02140000
*             LENGTH='03'X;              /* LENGTH OF RESPONSE        * 02150000
         MVI   0(@1),X'03'                                        0060  02160000
*             DRUMECB=0;                 /* CLEAR ECB                 * 02170000
         SR    @F,@F                                              0061  02180000
         ST    @F,DRUMECB                                         0061  02190000
*             MSGECB=ADDR(DRUMECB);      /* GET ADDR OF ECB           * 02200000
         LA    @F,DRUMECB                                         0062  02210000
         ST    @F,4(0,@1)                                         0062  02220000
*             MSGDVAD2=DEVADEB;          /* PUT DEV ADDR IN MSG       * 02230000
         MVC   23(8,@1),0(@7)                                     0063  02240000
*             INBUFR=BLANKS;             /* CLEAR RESPONSE BUFFER     * 02250000
         MVC   INBUFR(3),BLANKS                                   0064  02260000
*             GEN(PWTOR  REG=(1));       /* PRINT MESSAGE             * 02270000
         PWTOR  REG=(1)                                                 02280000
         DS    0H                                                       02290000
*             /* CHECK FOR 'NO ' ANSWER                               * 02300000
*             IF INBUFR=NOANS THEN       /* NOT OFFLINE IN ALL SYS    * 02310000
         CLC   INBUFR(3),NOANS                                    0066  02320000
*                 GOTO SETBITS;          /* NOT OFFLINE  IN ALL SYSTEM* 02330000
         BC    08,SETBITS                                         0067  02340000
*             /* CHECK FOR NOT 'YES' ANSWER                           * 02350000
*             IF INBUFR ¬= YANS THEN     /* GO REPEAT MESSAGE         * 02360000
         CLC   INBUFR(3),YANS                                     0068  02370000
*               GOTO DRUM02;             /* IF ANSWER NOT YES OR NO   * 02380000
         BC    07,DRUM02                                          0069  02390000
*             /* CHECK FOR CEVOL                                      * 02400000
*             IF CEVOL = '1'B THEN       /* CEVOL                     * 02410000
         TM    13(@7),B'00100000'                                 0070  02420000
*               RETURN;                  /* RETURN TO CALLER          * 02430000
         BC    03,@EL01                                           0071  02440000
*           END;                         /* END OF DO GROUP           * 02450000
@9FA     EQU   *                                                  0072  02460000
* DRUM01:                                /* PUT OUT MESSAGE IFD120D   * 02470000
*         R1=IFD120;                     /* GET PTR TO MSG            * 02480000
@9FB     EQU   *                                                  0073  02490000
DRUM01   L     @1,0(0,@3)                                         0073  02500000
*         BUFAD=ADDR(INBUFR);            /* ADDR OF RESPONSE BUFFER   * 02510000
         LA    @F,INBUFR                                          0074  02520000
         ST    @F,@TEMP4                                          0074  02530000
         MVC   1(3,@1),@TEMP4+1                                   0074  02540000
*         LENGTH='03'X;                  /* LENGTH OF RESPONSE        * 02550000
         MVI   0(@1),X'03'                                        0075  02560000
*         DRUMECB=0;                     /* CLEAR ECB                 * 02570000
         SR    @F,@F                                              0076  02580000
         ST    @F,DRUMECB                                         0076  02590000
*         MSGECB=ADDR(DRUMECB);          /* GET ADDR OF ECB           * 02600000
         LA    @F,DRUMECB                                         0077  02610000
         ST    @F,4(0,@1)                                         0077  02620000
*         MSGDVAD1=DEVADEB;              /* PUT DEV ADDR IN MSG       * 02630000
         MVC   36(8,@1),0(@7)                                     0078  02640000
*         INBUFR=BLANKS;                 /* CLEAR BUFFER              * 02650000
         MVC   INBUFR(3),BLANKS                                   0079  02660000
*         GEN(PWTOR  REG=(1));           /* PRINT MSG                 * 02670000
         PWTOR  REG=(1)                                                 02680000
         DS    0H                                                       02690000
*         /* CHECK FOR 'NO ' ANSWER                                   * 02700000
*         IF INBUFR = NOANS THEN         /* ANSWER EQUALS NO          * 02710000
         CLC   INBUFR(3),NOANS                                    0081  02720000
         BC    07,@9F9                                            0081  02730000
*           DO;                          /* DO                        * 02740000
*             /* CHECK FOR NO DATA PROTECTION                         * 02750000
*             IF NODP= '1'B THEN         /* IF ON BYPASS TESTS ON DEV * 02760000
         TM    A00005,B'00000001'                                 0083  02770000
*               GOTO TSTPRIM;            /* GO TEST FOR PRIME DEV     * 02780000
         BC    01,TSTPRIM                                         0084  02790000
*             GOTO SETBITS;              /* ALLOW TO CONTINUE IN FPM  * 02800000
         BC    15,SETBITS                                         0085  02810000
*           END;                         /* END OF DO GROUP           * 02820000
*         /* CHECK FOR NOT 'YES' ANSWER                               * 02830000
*         IF INBUFR ¬= YANS THEN         /* ERROR - REPEAT MESSAGE    * 02840000
@9F9     CLC   INBUFR(3),YANS                                     0087  02850000
*           GOTO DRUM01;                 /* REPEAT MESSAGE            * 02860000
         BC    07,DRUM01                                          0088  02870000
*         /* CHECK FOR NO DATA PROTECTION                             * 02880000
*         IF NODP = '1'B THEN            /* IF ON RETURN TO SCHEDULER * 02890000
         TM    A00005,B'00000001'                                 0089  02900000
*           RETURN;                      /* RETURN TO CALLER          * 02910000
         BC    03,@EL01                                           0090  02920000
*         FPM='0'B;                      /* CLEAR FPM IN SCT    A48714* 02930000
@9F8     NI    A00008,B'10111111'                                 0091  02940000
*         FLPRT='0'B;                    /* CLEAR FPM IN DEVTAB A48714* 02950000
         NI    12(@7),B'11111101'                                 0092  02960000
*         DVCDSFPM='0'B;                 /* CLEAR DEVTAB FPM FLGA48714* 02970000
         NI    41(@7),B'01111111'                                 0093  02980000
*         CDSFPM='0'B;                   /* CLEAR CDSFPM IN SCT A48714* 02990000
         NI    A00010,B'01111111'                                 0094  03000000
*         GOTO DRUM03;                   /* BRANCH AROUND CODE        * 03010000
         BC    15,DRUM03                                          0095  03020000
* SETBITS:                               /* SET FILE PROTECT BITS     * 03030000
*         FPM='1'B;                      /* SET FPM BIT IN SCT        * 03040000
SETBITS  OI    A00008,B'01000000'                                 0096  03050000
*         FLPRT='1'B;                    /* SET FPM IN DEVTAB         * 03060000
         OI    12(@7),B'00000010'                                 0097  03070000
*         DVCDSFPM='1'B;                 /* SET DEVTAB FPM FLAG       * 03080000
         OI    41(@7),B'10000000'                                 0098  03090000
*         CDSFPM='1'B;                   /* SET CDSFPM BIT IN SCT     * 03100000
         OI    A00010,B'10000000'                                 0099  03110000
* DRUM03:                                /* SET OTHER BITS            * 03120000
*         FILMSK='1'B;                   /* ALLOW MODE SET CHGS       * 03130000
DRUM03   OI    A00001,B'00001000'                                 0100  03140000
*         DPDONE = '1'B;                 /* SET DP DONE FLAG          * 03150000
         OI    12(@7),B'00100000'                                 0101  03160000
*         RETURN;                        /* RETURN TO CALLER          * 03170000
         BC    15,@EL01                                           0102  03180000
* DRUM00:                                /* PUT OUT MESSAGE IFD212I   * 03190000
*         R1=IFD212;                     /* POINTER TO MESSAGE        * 03200000
DRUM00   L     @1,8(0,@3)                                         0103  03210000
*         MSGDVAD3=DEVADEB;              /* PUT DEV ADDR IN MSG       * 03220000
         MVC   39(8,@1),0(@7)                                     0104  03230000
*         GEN(PWTO  REG=(1));            /* PRINT MESSAGE             * 03240000
         PWTO  REG=(1)                                                  03250000
         DS    0H                                                       03260000
*         GOTO DRUM01;                   /* GO PRINT MSG 120          * 03270000
         BC    15,DRUM01                                          0106  03280000
* TSTPRIM:                               /* TEST IF PRIME DEV         * 03290000
*         /* CHECK FOR PRIMARY DEVICE                                 * 03300000
*         IF PRIME='1'B THEN             /* IF PRIMARY DEV SET        * 03310000
TSTPRIM  TM    12(@7),B'01000000'                                 0107  03320000
         BC    12,@9F7                                            0107  03330000
*           NUDEV='1'B;                  /* BYPASS BIT                * 03340000
         OI    A00005,B'00100000'                                 0108  03350000
*         RETURN;                        /* RETURN TO CALLER          * 03360000
*         END IFDOLT04;                  /* END OF IFDOLT04 MODULE    * 03370000
@EL01    L     @D,4(0,@D)                                         0110  03380000
         LM    @E,@C,12(@D)                                       0110  03390000
         BCR   15,@E                                              0110  03400000
@DATA1   EQU   *                                                        03410000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           03420000
@1       EQU   01                                                       03430000
@2       EQU   02                                                       03440000
@3       EQU   03                                                       03450000
@4       EQU   04                                                       03460000
@5       EQU   05                                                       03470000
@6       EQU   06                                                       03480000
@7       EQU   07                                                       03490000
@8       EQU   08                                                       03500000
@9       EQU   09                                                       03510000
@A       EQU   10                                                       03520000
@B       EQU   11                                                       03530000
@C       EQU   12                                                       03540000
@D       EQU   13                                                       03550000
@E       EQU   14                                                       03560000
@F       EQU   15                                                       03570000
         DS    0F                                                       03580000
         DS    0D                                                       03590000
@DATA    EQU   *                                                        03600000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   03610000
R0       EQU   00000000            FULLWORD POINTER REGISTER            03620000
R1       EQU   00000001            FULLWORD POINTER REGISTER            03630000
R2       EQU   00000002            FULLWORD POINTER REGISTER            03640000
R3       EQU   00000003            FULLWORD POINTER REGISTER            03650000
R4       EQU   00000004            FULLWORD POINTER REGISTER            03660000
R5       EQU   00000005            FULLWORD POINTER REGISTER            03670000
R6       EQU   00000006            FULLWORD POINTER REGISTER            03680000
R7       EQU   00000007            FULLWORD POINTER REGISTER            03690000
R8       EQU   00000008            FULLWORD POINTER REGISTER            03700000
R9       EQU   00000009            FULLWORD POINTER REGISTER            03710000
R10      EQU   00000010            FULLWORD POINTER REGISTER            03720000
R11      EQU   00000011            FULLWORD POINTER REGISTER            03730000
R12      EQU   00000012            FULLWORD POINTER REGISTER            03740000
R13      EQU   00000013            FULLWORD POINTER REGISTER            03750000
R14      EQU   00000014            FULLWORD POINTER REGISTER            03760000
R15      EQU   00000015            FULLWORD POINTER REGISTER            03770000
         ORG   @DATA+00000072                                           03780000
MSGPTR   EQU   *                   FULLWORD POINTER                     03790000
         DC    VL4(IFDMSG04)                                            03800000
A00000   EQU   00000000            12 BYTE(S) ON WORD                   03810000
IFD120   EQU   A00000+00000000     FULLWORD POINTER                     03820000
IFD145   EQU   A00000+00000004     FULLWORD POINTER                     03830000
IFD212   EQU   A00000+00000008     FULLWORD POINTER                     03840000
A00012   EQU   00000000            56 BYTE(S) ON WORD                   03850000
DEVADEB  EQU   A00012+00000000     8 BYTE(S)                            03860000
DUCBA    EQU   A00012+00000008     FULLWORD POINTER                     03870000
DEVFL1   EQU   A00012+00000012     1 BYTE(S)                            03880000
ONLNE    EQU   A00012+00000012     1 BIT(S)                             03890000
PRIME    EQU   A00012+00000012     1 BIT(S)                             03900000
DPDONE   EQU   A00012+00000012     1 BIT(S)                             03910000
ACTVE    EQU   A00012+00000012     1 BIT(S)                             03920000
ALLCT    EQU   A00012+00000012     1 BIT(S)                             03930000
GRBED    EQU   A00012+00000012     1 BIT(S)                             03940000
FLPRT    EQU   A00012+00000012     1 BIT(S)                             03950000
ACTSC    EQU   A00012+00000012     1 BIT(S)                             03960000
DEVFL2   EQU   A00012+00000013     1 BYTE(S)                            03970000
DSNAME   EQU   A00012+00000013     1 BIT(S)                             03980000
A00013   EQU   A00012+00000013     1 BIT(S)                             03990000
CEVOL    EQU   A00012+00000013     1 BIT(S)                             04000000
STDLBL   EQU   A00012+00000013     1 BIT(S)                             04010000
CHANFUNC EQU   A00012+00000013     1 BIT(S)                             04020000
BYPS     EQU   A00012+00000013     1 BIT(S)                             04030000
CEDE     EQU   A00012+00000013     1 BIT(S)                             04040000
ATTN     EQU   A00012+00000013     1 BIT(S)                             04050000
DEVFL3   EQU   A00012+00000014     1 BYTE(S)                            04060000
SPECEXP  EQU   A00012+00000014     1 BIT(S)                             04070000
A00014   EQU   A00012+00000014     7 BIT(S)                             04080000
DEVFL4   EQU   A00012+00000015     1 BYTE(S)                            04090000
RMTLNDAB EQU   A00012+00000015     1 BIT(S)                             04100000
RMTLNENA EQU   A00012+00000015     1 BIT(S)                             04110000
FRSTEXIO EQU   A00012+00000015     1 BIT(S)                             04120000
A00015   EQU   A00012+00000015     5 BIT(S)                             04130000
DVEXT1   EQU   A00012+00000016     6 BYTE(S)                            04140000
DVEXT2   EQU   A00012+00000022     6 BYTE(S)                            04150000
DVCCHH2  EQU   A00012+00000022     4 BYTE(S)                            04160000
A00016   EQU   A00012+00000028     2 BYTE(S)                            04170000
MODESET  EQU   A00012+00000030     1 BYTE(S)                            04180000
EXPOSURE EQU   A00012+00000031     1 BYTE(S)                            04190000
DEHAD    EQU   A00012+00000032     4 BYTE(S)                            04200000
CDSINFOR EQU   A00012+00000036     16 BYTE(S)                           04210000
MODEL    EQU   A00012+00000036     1 BYTE(S)                            04220000
FEATURES EQU   A00012+00000037     1 BYTE(S)                            04230000
CLASS    EQU   A00012+00000038     1 BYTE(S)                            04240000
TYPE     EQU   A00012+00000039     1 BYTE(S)                            04250000
CDSCNT   EQU   A00012+00000040     1 BYTE(S)                            04260000
CDSFLAGS EQU   A00012+00000041     1 BYTE(S)                            04270000
DVCDSFPM EQU   A00012+00000041     1 BIT(S)                             04280000
A00017   EQU   A00012+00000041     1 BIT(S)                             04290000
DVCDECEV EQU   A00012+00000041     1 BIT(S)                             04300000
EXTSGMSK EQU   A00012+00000042     2 BYTE(S)                            04310000
SYMNAME  EQU   A00012+00000044     8 BYTE(S)                            04320000
A00018   EQU   A00012+00000052     4 BYTE(S)                            04330000
A00019   EQU   00000000            18 BYTE(S) ON WORD                   04340000
A00020   EQU   A00019+00000000     4*FULLWORD INTEGER                   04350000
A00021   EQU   A00019+00000016     1 BYTE(S)                            04360000
A00022   EQU   A00019+00000017     1 BYTE(S)                            04370000
A00023   EQU   A00019+00000017     2 BIT(S)                             04380000
SHARED   EQU   A00019+00000017     1 BIT(S)                             04390000
MSGPARM  EQU   00000000            8 BYTE(S) ON WORD                    04400000
LENGTH   EQU   MSGPARM+00000000    1 BYTE(S)                            04410000
BUFAD    EQU   MSGPARM+00000001    3  BYTE  POINTER ON WORD+1           04420000
MSGECB   EQU   MSGPARM+00000004    FULLWORD POINTER                     04430000
DRUMECB  EQU   *                   FULLWORD INTEGER                     04440000
         DC    FL4'0'                                                   04450000
MSGDVAD1 EQU   00000036            8 BYTE(S)                            04460000
MSGDVAD2 EQU   00000023            8 BYTE(S)                            04470000
MSGDVAD3 EQU   00000039            8 BYTE(S)                            04480000
BLANKS   EQU   *                   3 BYTE(S)                            04490000
         DC    C'   '                                                   04500000
NOANS    EQU   *                   3 BYTE(S)                            04510000
         DC    C'NO '                                                   04520000
YANS     EQU   *                   3 BYTE(S)                            04530000
         DC    C'YES'                                                   04540000
         ORG   @DATA                                                    04550000
         DS    00000089C                                                04560000
@TEMPS   DS    0F                                                       04570000
@TEMP4   DC    F'0'                                                     04580000
DSECT04  IFDCOM                                                         04590000
A00001   EQU   CESWT1+00000000     1 BYTE(S)                            04600000
A00002   EQU   A00001+00000000     4 BIT(S)                             04610000
FILMSK   EQU   A00001+00000000     1 BIT(S)                             04620000
A00003   EQU   A00001+00000000     1 BIT(S)                             04630000
ONLINEOK EQU   A00001+00000000     1 BIT(S)                             04640000
A00004   EQU   A00001+00000000     1 BIT(S)                             04650000
A00005   EQU   CESWT3+00000000     1 BYTE(S)                            04660000
A00006   EQU   A00005+00000000     2 BIT(S)                             04670000
NUDEV    EQU   A00005+00000000     1 BIT(S)                             04680000
A00007   EQU   A00005+00000000     4 BIT(S)                             04690000
NODP     EQU   A00005+00000000     1 BIT(S)                             04700000
A00008   EQU   CHASCT+00000010     1 BYTE(S)                            04710000
A00009   EQU   A00008+00000000     1 BIT(S)                             04720000
FPM      EQU   A00008+00000000     1 BIT(S)                             04730000
A00010   EQU   CHASCT+00000011     1 BYTE(S)                            04740000
CDSFPM   EQU   A00010+00000000     1 BIT(S)                             04750000
A00011   EQU   A00010+00000000     7 BIT(S)                             04760000
@DATEND  EQU   *                                                        04770000
@9F7     EQU   @EL01                                                    04780000
         END   IFDOLT04                                                 04790000
./  ADD  SSI=33191011,NAME=IFDOLT05
         TITLE '       EXIO   MODULE   IFDOLT05'                        00010000
         LCLA  &T,&SPN                                            0001  00020000
.@001    ANOP                                                     0001  00030000
IFDOLT05 CSECT ,                                                  0001  00040000
         BC    15,24(0,@F)                                              00050000
         DC    C'IFDOLT05 15 NOV 73'                             0001  00060000
         ST    @E,12(0,@D)                                        0001  00070000
         STM   @0,@C,20(@D)                                       0001  00080000
         BALR  @B,0                                               0001  00090000
@PSTART  DS    0H                                                 0001  00100000
         USING @PSTART+00000,@B                                   0001  00110000
         ST    @D,@SAV001+4                                       0001  00120000
         LA    @F,@SAV001                                         0001  00130000
         ST    @F,8(0,@D)                                         0001  00140000
         LR    @D,@F                                              0001  00150000
*         GEN   (USING CHASCT,2);                                       00160000
         USING CHASCT,2                                                 00170000
         DS    0H                                                       00180000
*         GENERATE DATA;                                                00190000
*         GEN   (EJECT);                                                00200000
         EJECT                                                          00210000
         DS    0H                                                       00220000
*         /************************************************************ 00230000
*         /*        IFDOLT05 REGISTER DEFINITIONS                     * 00240000
*         /*                                                          * 00250000
*         /************************************************************ 00260000
*                                       /* REGISTERS THRU OUT EXIO    * 00270000
*         DCL   R0     REG(0) PTR(31);  /*                            * 00280000
*         DCL   LSTPTR REG(1) PTR(31);  /* PARAMETER LIST POINTER     * 00290000
*         DCL   COMMON REG(2) PTR(31);  /* COMMON AREA POINTER        * 00300000
*         DCL   R3     REG(3) PTR(31);  /* OCB POINTER          Y02008* 00310000
*         DCL   PNT4   REG(4) PTR(31);  /* DEBDCB POINTER             * 00320000
*         DCL   PNT5   REG(5) PTR(31);  /* DEVTAB POINTER             * 00330000
*         DCL   PNT6   REG(6) PTR(31);  /*                            * 00340000
*         DCL   PNT7   REG(7) PTR(31);  /*                            * 00350000
*         DCL   WRK1   REG(8);          /* WORKING REGISTER           * 00360000
*         DCL R9 REG(9);           /* WORK REGISTER             S20203* 00370000
*         DCL   R12    REG(12);         /*                            * 00380000
*         DCL   R13    REG(13) PTR(31); /* R13 IS SAVE AREA POINTER   * 00390000
*         DCL   R14    REG(14) PTR(31); /* ANOTHER NAME FOR LINK REG  * 00400000
*         DCL   LINK REG(14);           /* LINK REGISTER              * 00410000
*         DCL   R15    REG(15);         /*                            * 00420000
*         GEN   (EJECT);                                                00430000
         EJECT                                                          00440000
         DS    0H                                                       00450000
*         /************************************************************ 00460000
*         /*                   COMMON CORE MAP                        * 00470000
*         /************************************************************ 00480000
*         DCL DEVTBPTR PTR GEND;        /* POINTER TO DEVICE TBLY02008* 00490000
*         DCL TABLNGTH FIXED(15) GEND;  /* SIZE OF A DEVTAB     Y02008* 00500000
*         DCL   INBUFR GENERATED;       /* TYPEWRITER INPUT AREA      * 00510000
*         DCL   WKSVC CHAR(16) GENERATED;/* SVC PARAMETER LIST        * 00520000
*         DCL R1 REG(1) PTR;             /* PARAMETER LIST REG  Y02008* 00530000
*         DCL ROPT PTR GENERATED;        /* SVC PARAMETER LIST  Y02008* 00540000
*         DCL HEX14 INIT('00008014'X);   /* SVC 59 CLEAN-UP CODEY02008* 00550000
*         DCL VID CHAR(2) BASED(ADDR(WKSVC)+2); /* MOD ID IN SVCY02008* 00560000
*         DCL   SCHEDSA PTR GENERATED;   /*PNTR TO SCHEDULER SAVE AREA* 00570000
*         DCL   CESWT3 CHAR(1) GENERATED;/* OLTEP SWITCH 3            * 00580000
*                                       /* DYNAMIC COMMUNICATION RTRN * 00590000
*         DCL   CHASCT  GENERATED;      /* S C T IS IN DSECT          * 00600000
*         DCL   DEVTAB  GENERATED;      /* DEVTAB  IS IN DSECT        * 00610000
*         DCL   CESWT GENERATED;        /* CE SWITCHES IN COMMON AREA * 00620000
*         DCL    UNICTR CHAR(1) GENERATED;/*UNICTR IS IN DSECT        * 00630000
*         DCL   COMMINT GENERATED;      /* POINTER TO DYNAMIC COM AREA* 00640000
*         GEN   (EJECT);                                                00650000
         EJECT                                                          00660000
         DS    0H                                                       00670000
*         /************************************************************ 00680000
*         /*    INTERNAL DEFINITIONS AND CONSTANTS FOLLOW             * 00690000
*         /************************************************************ 00700000
*         DCL   SVPTR PTR BASED(R13+4); /* R13 SAVE AREA              * 00710000
*         DCL   XDVADR CHAR(2);         /* ADDRESS OF DEVICE INTERNAL * 00720000
*         DCL   MYID CHAR(2) INIT ('05');/* MY MODULE I.D.            * 00730000
*         DCL   1 COMCDE BASED(PNT7),   /* CCW COMMAND BYTE           * 00740000
*                3 * BIT (6),           /* NOT USED                   * 00750000
*                3 RDCM BIT(1),         /* READ COMMAND BIT IN CCW    * 00760000
*                3 WRCM BIT(1);         /* WRITE COMMAND BIT IN CCW   * 00770000
*         DCL   NXTCCW BASED(PNT7+8);   /* ADDRESS OF NEXT CCW        * 00780000
* DIAG:   GEN   (EQU   59);             /* EQUATE FOR SVC59           * 00790000
DIAG     EQU   59                                                       00800000
         DS    0H                                                       00810000
*         GEN   (EJECT);                                                00820000
         EJECT                                                          00830000
         DS    0H                                                       00840000
*         DECLARE                                                       00850000
*         /************************************************************ 00860000
*         /*                  SVC PARAMETER LIST MAP                  * 00870000
*         /************************************************************ 00880000
*               1 * BASED(ADDR(WKSVC)), /* LIST IS IN COMMON CORE     * 00890000
*               2 SVCPRM CHAR(16),         /* SVC PLIST LENGTH        * 00900000
*                3 * CHAR(2),           /* EXPANSION                  * 00910000
*                3 RPTID  CHAR(2),      /* CALLERS I.D.               * 00920000
*                3 RPTPRM1 CHAR(4),                                     00930000
*                3 RPTPRM2 CHAR(4);                                     00940000
*         GEN   (EJECT);                                                00950000
         EJECT                                                          00960000
         DS    0H                                                       00970000
*         DECLARE                                                       00980000
*         /************************************************************ 00990000
*         /*        SECTION CONTROL TABLE (SCT) MAP                   * 01000000
*         /************************************************************ 01010000
*               1 * BASED (ADDR(CHASCT)),/* R2 IS SCT POINTER         * 01020000
*                3 * CHAR(3),           /* CE LOOP AND OPTION FIELD   * 01030000
*                3 * CHAR(1),           /*                            * 01040000
*                 5 SETERR BIT(1),      /* SECTION ERROR BIT          * 01050000
*                3 * CHAR(4),           /* ROUTINE SELECTION AND SPARE* 01060000
*                3 * CHAR(2),           /* SPARE                      * 01070000
*                3 SDFLG CHAR(1),       /* PRIMARY DEVICE FLAG        * 01080000
*                 5 * BIT(1),           /* SPARE                      * 01090000
*                 5 SFLPRT BIT(1),      /* FILE PROTECT               * 01100000
*                 5 SCEVLM BIT(1),      /*  CE VOLUME                 * 01110000
*                 5 * BIT(5),           /*  FLAGS NOT USED IN IFDOLT05* 01120000
*                3 * CHAR(1),           /* SPARE                      * 01130000
*                3 SDVAD CHAR(4),       /* DEVICE ADDRESS HEX 4 BYTES * 01140000
*                 5 * CHAR(2),          /*                            * 01150000
*                 5 SDVAD2 CHAR(2),     /* DEVICE ADDRESS HEX 2 BYTES * 01160000
*                3 SDVDS CHAR(4),       /* DEVICE DESCRIPTORS         * 01170000
*                 5 * CHAR(2),          /*                            * 01180000
*                 5 SDVCLS CHAR(1),     /* DEVICE CLASS               * 01190000
*                  7 STP BIT(1),        /*  TAPE                      * 01200000
*                  7 STC BIT(1),        /*  TELECOMMUNICATIONS        * 01210000
*                  7 SDA BIT(1),        /*  DASD                      * 01220000
*                  7 SGD BIT(1),        /*  GRAPHIC DISPLAY           * 01230000
*                  7 SUR BIT(1),        /*  UNIT RECORD               * 01240000
*                  7 SMC BIT(1),        /*  MAGNETIC CHARACTER READERS* 01250000
*                  7 *   BIT(2),        /*  SPARES                    * 01260000
*                 5 SDVTYP CHAR(1),     /* DEVICE TYPE                * 01270000
*                3 * CHAR(4),           /* 2NDARY DEVICE FLAGS        * 01280000
*                3 * CHAR(4),           /* 2NDARY DEVICE ADDRESS      * 01290000
*                 5 * CHAR(2),          /*                            * 01300000
*                 5 SSDVAD2 CHAR(2),    /*  2 BYTE HEX ADDRS (2ND DEV)* 01310000
*                3 * CHAR(4),           /* 2NDARY DEVICE DESCRIPTORS  * 01320000
*                3 * CHAR(1),           /* TOTE ONLY BYTE             * 01330000
*                3 SEPFLG CHAR(1),      /* OLTEP FLAG                 * 01340000
*                3 * CHAR(2),           /* OLT SIZE IN WORDS          * 01350000
*                3 SOLTFL CHAR(4),      /* OLT FUNCTIONAL FLAGS       * 01360000
*                3 * CHAR(40);          /* SCT NOT USED IN THIS MODULE* 01370000
*         GEN   (EJECT);                                                01380000
         EJECT                                                          01390000
         DS    0H                                                       01400000
*         DECLARE                                                       01410000
*               /****************************************************** 01420000
*               /* EXIO PARAMETER LIST MAP                            * 01430000
*               /****************************************************** 01440000
*               1 OLTLST BASED(LSTPTR), /* R1 POINTS TO PARAMETERS    * 01450000
*                3 OTECB PTR(31),       /* OLT DECB POINTER           * 01460000
*                3 OCCWS PTR (31),      /* OLT CCW POINTER            * 01470000
*                 5 * CHAR(1),          /* OLT CCW POINTER            * 01480000
*                 5 OCCWS3 CHAR(3),     /* OLT CCW POINTER            * 01490000
*           3 DEVAD PTR(31),       /* THIS EXIO DEV POINTER     S20203* 01500000
*             5 DPSCND CHAR(2),    /* SET TO FOXES FOR SCND DP  S20203* 01510000
*                 5 OLTEPDV CHAR(2),    /* OLTEP DEVICE FOR DATA PROT.* 01520000
*                3 OCWCNT CHAR(1),      /* OLT CCW COUNT              * 01530000
*                3 OFLGS CHAR(1),       /* OLT OLTEP FLAGS            * 01540000
*                 5 * BIT(1),           /*  NOT USED BY THIS MODULE   * 01550000
*                 5 * BIT(1),           /*  NOT USED BY THIS MODULE   * 01560000
*                 5 ODAD  BIT(1),       /*  DASD DEVICE               * 01570000
*                 5 OFMMS BIT(1),       /*  OLT WANTS FRIMS CHANGE    * 01580000
*                 5 OLN0 BIT(1),        /*  LINE 0 FOR TP             * 01590000
*                 5 ORCAL BIT(1),       /* RECALIBRATE REQUESTED      * 01600000
*                 5 OGPTST BIT(2),      /*  TAPE GAP TEST             * 01610000
*                  7 OFNC24 BIT(1),     /* GAP FUNCTION 24 REQUESTED  * 01620000
*                  7 OFNC23 BIT(1),     /* GAP FUNCTION 23 REQUESTED  * 01630000
*                3 OMSKMD CHAR(1),      /* OLT FILEMASK/MODE SET      * 01640000
*                3 *      CHAR(1),      /* NOT USED                   * 01650000
*                3 OGPPAR CHAR(16),     /* TAPE GAP PARAMETERS -OR-   * 01660000
*                 5 OSKAD CHAR(6);      /* DASO SEEK ADDRESS          * 01670000
*         GEN   (EJECT);                                                01680000
         EJECT                                                          01690000
         DS    0H                                                       01700000
*         DECLARE                                                       01710000
*               /****************************************************** 01720000
*               /*  TEST EVENT CONTROL BLOCK (TECB) MAP               * 01730000
*               /****************************************************** 01740000
*               1 TTECB BASED(OTECB),   /* BASED ON PTR IN PARM LIST  * 01750000
*                3 TEVCB CHAR(4),       /* EVENT CONTROL BLOCK ECB    * 01760000
*                3 TCCPS CHAR(1),       /* CONDITION CODE POSTING     * 01770000
*                3 TCCW1 CHAR(7),       /* 7 BYTE CSW                 * 01780000
*                3 TSNS1 CHAR(8);       /* SENSE FIELD                * 01790000
*         GEN   (EJECT);                                                01800000
         EJECT                                                          01810000
         DS    0H                                                       01820000
*         DECLARE                                                       01830000
*               /****************************************************** 01840000
*               /*  SWITCHES IN OLTEP COMMON AREA USED IN IFDOLT05    * 01850000
*               /****************************************************** 01860000
*               1 * BASED(ADDR(CESWT)), /* BASED ON COMMON AREA PTR   * 01870000
*                3 OSW0 CHAR(1),        /* INTERNAL CESWT  LABEL      * 01880000
*                 5 * BIT(1),           /* NOT USED                   * 01890000
*                 5 DATPRSC BIT(1),     /* DATA PROTECT REQUIRES EXCP * 01900000
*                 5 * BIT(6),           /* NOT USED                   * 01910000
*                3 OSW1 CHAR(1),        /* INTERNAL CESWT1 LABEL      * 01920000
*                 5 *     BIT(1),       /*  NOT USED                  * 01930000
*                 5 SKTST BIT(1),       /*  2321 SEEKING BEYOND CE CL * 01940000
*                 5 *     BIT(1),       /*  NOT USED                  * 01950000
*                 5 WTFLG BIT(1),       /*  WAIT FLAG (2 GOES FOR TP) * 01960000
*                 5 CHNGM BIT(1),       /*  MODE/MASK CHNG O.K.       * 01970000
*                 5 *     BIT(1),       /*  NOT USED                  * 01980000
*                 5 OLNOK BIT(1),       /*  ON LINE O.K.              * 01990000
*                 5 TPACT BIT(1),       /*  T.P. (2 LINES) IN USE     * 02000000
*                3 OSW2 CHAR(1),        /* INTERNAL CESWT2 LABEL      * 02010000
*                 5 DYCMB BIT(1),       /*  DYNAMIC COMMUNICATION BYPS* 02020000
*             5 * BIT(6),                /* NA                   M4506* 02030000
*             5 AMERLDV BIT(1),          /* MERLIN DEVICE        M4506* 02040000
*                3 OSW3 CHAR(1),        /* INTERNAL CESWT3 LABEL      * 02050000
*                 5 * BIT(2),           /*                            * 02060000
*                 5 NOTSTNG BIT(1),     /* BYPASS TESTING THIS DEVICE * 02070000
*                3 OSW4 CHAR(1),        /* INTERNAL CESWT4 LABEL      * 02080000
*                3 OSW5 CHAR(1),        /* INTERNAL CESWT5 LABEL      * 02090000
*                3 OSW6 CHAR(1),        /* INTERNAL CESWT6 LABEL      * 02100000
*                 5 * BIT (3),                                          02110000
*                 5 FPVLTE BIT(1),      /* SECTION VIOLATED FILE PROT.* 02120000
*                 5 NOTMER BIT(1);      /* TIMER NOT RUNNING (GAP TST)* 02130000
*         GEN(EJECT);                                                   02140000
         EJECT                                                          02150000
         DS    0H                                                       02160000
*         DCL 1 FIXECB CHAR(4) BDY(WORD), /* THIOS ECB IS POSTED BY   * 02170000
*              3 * CHAR(3),             /* THE PAGE SUPERVISOR        * 02180000
*              3 * CHAR(1),                                             02190000
*               5 * BIT(5),                                             02200000
*               5 FIXLSTOK BIT(1);      /* THIS ON = N. G. FIX        * 02210000
*         DCL WORK1 FIXED;                                              02220000
*         DCL CESWT7 CHAR(1) GEND;                                      02230000
*         DCL 1 * CHAR(1) BASED(ADDR(CESWT7)),                          02240000
*                3 * BIT(6),                                            02250000
*                3 TCBRV BIT(1);        /* IF ON THIS ID,S VIRTUAL    * 02260000
*         DCL  ALL1S CHAR(3) INIT('FFFFFF'X);  /*ALL ONES       X03906* 02270000
* DCL CESWT8 CHAR(1) GEND;              /* SWITCH 8             X02008* 02280000
* DCL 1 * CHAR(1) BASED(ADDR(CESWT8)),  /*                      X02008* 02290000
*       3 * BIT(4),                     /* UNUSED               X02008* 02300000
*       3 OLTINVV BIT(1);               /* OLT IN VIRTUAL       X02008* 02310000
*                                                                       02320000
*         DCL CESWT9 CHAR(1) GEND;      /* SWITCH 9             Y02008* 02330000
*         DCL 1 * BASED(ADDR(CESWT9)),  /* FORMAT OF SWITCH     Y02008* 02340000
*           3 * BIT(7),                 /* NA                   Y02008* 02350000
*           3 OLTTERM BIT(1);           /* TERMINATE OLT SECTIONY02008* 02360000
*                                                                       02370000
*         DCL   ENDCOM LABEL GEND;                                      02380000
*         GEN   (EJECT);                                                02390000
         EJECT                                                          02400000
         DS    0H                                                       02410000
*     DECLARE                                                           02420000
* 1 * BASED(PNT5),                 /* PNTD POINTS TO THE ENTRY IN USE * 02430000
*  3 DEBAD CHAR(8),                                                     02440000
*  3 DUCBA PTR,                                                         02450000
*    5 * CHAR(1),                                                       02460000
*    5 DUCBA3 CHAR(3),                                                  02470000
*       7 * CHAR(1),                                                    02480000
*       7 UCB2BYTE CHAR(2),        /*  TWO BYTE ADDR            S21050* 02490000
*  3 DEVFL1 CHAR(1),               /* FIRST FLAG BYTE IN DEVTAB       * 02500000
*   5 ONLNE BIT(1),                /* DEVICE ON/OFF LINE STATUS       * 02510000
*   5 PRIME BIT(1),                /* PRIMARY DEVICE INDICATOR        * 02520000
*   5 DPDONE BIT(1),               /* DATA PROTECTION  COMPLETE       * 02530000
*   5 ACTVE  BIT(1),               /* ACTIVE  DEVICE                  * 02540000
*   5 ALLCT  BIT(1),               /* ALLOCATED  DEVICE               * 02550000
*   5 GRBED  BIT(1),               /* GRABBED (SECONDARY) DEVICE      * 02560000
*   5 FLPRT  BIT(1),               /* FILE PROTECT MODE DEVICE        * 02570000
*   5 ACTSC  BIT(1),               /* LAST ACTIVE SECONDARY DEVICE    * 02580000
*  3 DEVFL2 CHAR(1),               /* SECOND FLAG BYTE IN DEVTAB      * 02590000
*   5 DSNAME BIT(1),               /* DSNAME FLIP-FLOP                * 02600000
*   5 SHARED BIT(1),               /* SHARED VOLUME                   * 02610000
*   5 CEVOL  BIT(1),               /* C.E. VOLUME                     * 02620000
*   5 STDLBL BIT(1),               /* STANDARD LABELED  TAPE          * 02630000
*   5 CHANFUNC BIT(1),             /* CHANNEL FUNCTION                * 02640000
*   5 BYPS     BIT(1),             /* BYPASS FUNCTION INVOKED         * 02650000
*   5 CEDE     BIT(1),             /* CE-DE  FUNCTION INVOKED         * 02660000
*   5 ATTENTION BIT(1),            /* ATTNIN FUNCTION INVOKED         * 02670000
*  3 DEVFL3 CHAR(1),               /* THIRD FLAG BYTE IN DEVTAB       * 02680000
*   5  ANRNOTST BIT(1),            /* NO TEST BIT                     * 02690000
*   5  * BIT(1),                   /* FESERVED                        * 02700000
*   5 HIODONE BIT(1),              /* HIO ISSUED BIT                  * 02710000
*  3 DEVFL4 CHAR(1),               /* FOURTH FLAG BYTE IN DEVTAB      * 02720000
*   5 RMTLNDAB BIT(1),             /* REMOTE LINE DISABLED BY OLTEP   * 02730000
*   5 RMTLNENA BIT(1),             /* REMOTE LINE ENABLED             * 02740000
*   5 FRSTEXIO BIT(1),             /* FIRST EXIO ISSUED               * 02750000
*   5 *        BIT(5),             /* EXPANSION                       * 02760000
*  3 DVEXT1 CHAR(6),               /* LOW DASD EXTENT                 * 02770000
*  3 DVEXT2 CHAR(6),               /* HIGH DASD EXTENT                * 02780000
*     5  DVCCHH2 CHAR(4),          /* CC  HH  OF 2ND EXTENT           * 02790000
*     3 * CHAR(2),                                                      02800000
*  3 MODESET CHAR(1),              /* MODE SET SAVE AREA              * 02810000
*  3 EXPOSURE CHAR(1),             /* EXPOSURE # FOR ZUES TYPES       * 02820000
*   3  FULLADDR CHAR(4),           /* FOUR BYTE HEX  ADDRESS          * 02830000
*     5 FILL CHAR(2),              /* NNOT USED                       * 02840000
*     5 DEHAD CHAR(2),             /* TWO BYTE HEX ADDR               * 02850000
*   3 CDSINFOR CHAR(16),           /* CDS INFORMATION FOR THIS DEV    * 02860000
*   5 MODEL CHAR(1),               /* MODEL #                         * 02870000
*   5 FEATURES CHAR(1),            /* FEATURE ON THIS MODEL           * 02880000
*   5 CLASS    CHAR(1),            /* CLASS                           * 02890000
*     7 TAPE BIT(1),               /* 80  =   TAPE CLASS        S20105* 02900000
*     7 * BIT(1),                  /*                           S20105* 02910000
*     7 DASD BIT(1),               /* 20 = DASD CLASS           S20105* 02920000
*      7 * BIT(1),                 /* EXPANSION                 S21050* 02930000
*      7 UREC BIT(1),              /* UNIT RECORD DEVICE        Y02008* 02940000
*   5 TYPE     CHAR(1),            /* TYPE                            * 02950000
*   5 CDSCNT   CHAR(1),            /* CDS BYTE COUNT                  * 02960000
*   5 CDSFLAGS CHAR(1),            /* CDS FLAGS                       * 02970000
*     7 * BIT(7),                  /* NOT USED BY EXIO                * 02980000
*     7 DEVREM BIT(1),             /* THIS IS A REMOTE TERMINAL       * 02990000
*   5 EXTSGMSK CHAR(2),            /* EXTERNAL SIGNAL M ASK           * 03000000
*   5 SYMNAME  CHAR(8),            /* SYMBOLIC NAME                   * 03010000
*  3 * CHAR(4),                    /* EXPANSION                       * 03020000
*   5 SAVMDMSK CHAR(1);            /* FILEMASK/MODE SET DATA    Y02008* 03030000
*         /*         I/O EFFECTOR PARAMETER LIST FOR I/O EVENTS Y02008* 03040000
*                                                                       03050000
*         DCL IORTNADR PTR GEND;        /* I/O ROUTINE IN DOLT35Y02008* 03060000
*                                                                       03070000
*         DCL EFCTRCB CHAR(20) GEND;    /* I O EFFECTOR PLIST   Y02008* 03080000
*                                                                       03090000
*         /* PTR TO CCWS FOR ENBL Y02008*/                              03100000
*         DCL CCWPTR PTR GEND;                                          03110000
*                                                                       03120000
*         DCL DVTPTR PTR GEND;           /* PTR TO DEV TABLE     Y02008 03130000
*         DCL FLGA CHAR(1) GEND;         /* FLAG BYTE            Y02008 03140000
*         DCL BYPASPFX CHAR(1) GEND;     /* BYPASS INIT CCWS     Y02008 03150000
*         DCL GDP CHAR(1) GEND;          /* GUARANTEE DEV PATH   Y02008 03160000
*         DCL FLGB CHAR(1) GEND;         /* FLAG BYTE            Y02008 03170000
*         DCL INTERNAL CHAR(1) GEND;     /* INTERNAL IOSB CALL   Y02008 03180000
*         DCL ATTNIN CHAR(1) GEND;       /* ATTENTION INTERUPT   Y02008 03190000
*         DCL VIRTCCWS CHAR(1) GEND;     /* CCW STRING IN VIRTUALY02008 03200000
*         DCL FILEMSK CHAR(1) GEND;      /* DEV FILE MASK        Y02008 03210000
*         DCL OLDTECBX CHAR(1) GEND;     /* USE OLD TECB FORMAT  Y02008 03220000
*         DCL SNSCNT CHAR(1) GEND;          /* SNS BYTES EXPCTED Y02008 03230000
*         DCL TECBPTRX PTR GEND;        /* PTR TO ACTIVE TECB   Y02008* 03240000
*         DCL SEEKPTR PTR GEND;         /* SEEK ADDR FOR CCWS   Y02008* 03250000
*                                                                       03260000
*  DECLARE                                                              03270000
* 1 * BASED(DUCBA),                                                     03280000
*    3 * CHAR(1),                 /* NOT USED                         * 03290000
*    3 UCBID CHAR(1),             /* HEXFF IF VALID UCB               * 03300000
*    3 SRTESTAT CHAR(1),          /* STATUS BYTE                      * 03310000
*     5 UCBONLNE BIT(1),          /* ON-OFFLINE ID                    * 03320000
*     5 * BIT(7);                 /* NOT USED                         * 03330000
*         GEN   (EJECT);                                                03340000
         EJECT                                                          03350000
         DS    0H                                                       03360000
*         GEN   (TITLE '  OS OLTEP EXIO MODULE -IFDOLT05-');            03370000
         TITLE '  OS OLTEP EXIO MODULE -IFDOLT05-'                      03380000
         DS    0H                                                       03390000
*         /************************************************************ 03400000
*         /*        PERFORM MODULE INITIALIZATION                     * 03410000
*         /************************************************************ 03420000
*         RESTRICT (LSTPTR,COMMON);     /* R1 AND R2 CONTAIN INPUT    * 03430000
*         TTECB  = TTECB&&TTECB;        /* CLEAR THE TECB             * 03440000
         L     @3,0(0,@1)                                         0086  03450000
         XC    0(20,@3),0(@3)                                     0086  03460000
*         EFCTRCB=EFCTRCB&&EFCTRCB;     /* CLEAR EFFECTOR PLIST Y02008* 03470000
         XC    EFCTRCB(20),EFCTRCB                                0087  03480000
*         IF    TPACT = '0'B THEN       /* IF NOT A TELE COM RUN GO   * 03490000
         TM    A00025+1,B'00000001'                               0088  03500000
*               GOTO XIO001;       /* ELSE THE PRIMARY SET      S20203* 03510000
         BC    08,XIO001                                          0089  03520000
*         IF    OLN0 = '0' B THEN       /* IF TELE COM IS IT A LINE 0 * 03530000
         TM    13(@1),B'00001000'                                 0090  03540000
*          GO TO XIO001;                /* REQUEST GO TO SET UP PRIME * 03550000
         BC    08,XIO001                                          0091  03560000
*  SETSCND:   R9=0;                /* INITIALIZE REG 9 TO ZERO  S20203* 03570000
SETSCND  SR    @9,@9                                              0092  03580000
*         RESTRICT   (R3,PNT4,PNT5);    /* INTERNAL REGISTERS   Y02008* 03590000
*         XDVADR = SSDVAD2;             /* DEVICE ADDRESS IS 2NDARY   * 03600000
         MVC   XDVADR(2),A00003+26                                0094  03610000
*         GO TO XIO002;                 /* BYPASS PRIME DEV INITILIZE * 03620000
         BC    15,XIO002                                          0095  03630000
* XIO001:                               /* ENTRY TO INITILIZE PRIME   * 03640000
*         XDVADR = SDVAD2;              /* DEVICE ADDR OF PRIME       * 03650000
XIO001   MVC   XDVADR(2),A00003+14                                0096  03660000
* XIO002:                               /* ENTRY TO SEARCH DEVTAB     * 03670000
*         PNT5  =  DEVTBPTR;            /* GET PTR TO DEVTAB    S21050* 03680000
XIO002   L     @5,DEVTBPTR                                        0097  03690000
*         RESTRICT (WRK1);              /* REGISTER FOR DEVTAB SEARCH * 03700000
*         DO    WRK1 = UNICTR TO 1 BY-1;/* SEARCH BY AMOUNT OF DEVICES* 03710000
         SR    @8,@8                                              0099  03720000
         IC    @8,UNICTR                                          0099  03730000
         LTR   @8,@8                                              0099  03740000
         BC    12,@DO9FE                                          0099  03750000
*         IF XDVADR = DEHAD THEN        /* SEARCH FOR A  COMPARE OF   * 03760000
@DO9FF   CLC   XDVADR(2),34(@5)                                   0100  03770000
*          GO TO XIO003;                /* DEVICE ADDRESS             * 03780000
         BC    08,XIO003                                          0101  03790000
*          PNT5  =  PNT5  +  TABLNGTH;  /* GO TO NEXT ENTRY     S21050* 03800000
         AH    @5,TABLNGTH                                        0102  03810000
*         END;                          /* IF A DEVICE IS NOT FOUND A * 03820000
*         GOTO XIO004A;                  /* END JOB                   * 03830000
         BCT   @8,@DO9FF                                          0103  03840000
         BC    15,XIO004A                                         0104  03850000
*         RELEASE  (WRK1);              /* MAKE R8 AVAILABLE          * 03860000
*                                                                       03870000
*         GEN   (EJECT);                                                03880000
         EJECT                                                          03890000
         DS    0H                                                       03900000
*         /************************************************************ 03910000
*         /*    PERFORM DEVICE DEPENDENT SYS BLOCK INITIALIZATION     * 03920000
*         /************************************************************ 03930000
* XIO003:                                                               03940000
*                                                                       03950000
*         IF    ODAD = '1'B THEN        /* IF THIS IS A DASD DEVICE   * 03960000
XIO003   TM    13(@1),B'00100000'                                 0107  03970000
         BC    12,@9FB                                            0107  03980000
*          DO;                          /* EXECUTE FOLLOWING CODE     * 03990000
*          IF   SFLPRT = '1'B THEN      /* IF RUNNING FILE PROTECTED  * 04000000
         TM    A00003+10,B'01000000'                              0109  04010000
         BC    12,@9FA                                            0109  04020000
*           DO;                         /* THEN DO FOLLOWING TESTS    * 04030000
*           RESTRICT (PNT7,WRK1);       /* RESTRICT CCW POINTER       * 04040000
*           PNT7 = OCCWS;               /* INITIALIZE CCW POINTER     * 04050000
         L     @7,4(0,@1)                                         0112  04060000
*            DO WRK1 = OCWCNT TO 1 BY-1;/* LOOP TO SCAN ALL CCW'S     * 04070000
         SR    @F,@F                                              0113  04080000
         IC    @F,12(0,@1)                                        0113  04090000
         LTR   @8,@F                                              0113  04100000
         BC    12,@DO9F8                                          0113  04110000
*            IF COMCDE < '1F'X &        /* IF CCW COMMAND LESS THAN IF* 04120000
*               RDCM = '0'B &           /* AND THE READ BIT(6) IS OFF * 04130000
*               WRCM = '1'B THEN        /* WITH WRITE BIT(7) ON THEN  * 04140000
@DO9F9   CLI   0(@7),X'1F'                                        0114  04150000
         BC    10,@9F5                                            0114  04160000
         TM    0(@7),B'00000010'                                  0114  04170000
         BC    05,@9F4                                            0114  04180000
         TM    0(@7),B'00000001'                                  0114  04190000
         BC    12,@9F3                                            0114  04200000
*            DO;                        /* GO TO OLTEP WITH FILE PRTCT* 04210000
*            FPVLTE = '1'B;             /* VOLATION SET BECAUSE,      * 04220000
         OI    A00025+6,B'00010000'                               0116  04230000
*            GO TO XIOEX1;              /* CHAIN VIOLATES F.P.M.      * 04240000
         BC    15,XIOEX1                                          0117  04250000
*            END;                                                       04260000
*            PNT7  = ADDR(NXTCCW);      /* STEP TO NEXT CCW           * 04270000
@9F3     EQU   *                                                  0119  04280000
@9F4     EQU   *                                                  0119  04290000
@9F5     LA    @7,8(0,@7)                                         0119  04300000
*            END;                       /* IF NO VIOLATIONS           * 04310000
*           RELEASE (PNT7,WRK1);        /* RELEASE PNT7 TO USAGE AND  * 04320000
         BCT   @8,@DO9F9                                          0120  04330000
@DO9F8   EQU   *                                                  0120  04340000
*           END;                        /* END DASDI INITIALIZATION   * 04350000
*         SEEKPTR=ADDR(OSKAD);          /* GIVE IO EFFCTR SEEKADY02008* 04360000
@9FA     LA    @F,16(0,@1)                                        0123  04370000
         ST    @F,SEEKPTR                                         0123  04380000
*          END;                         /* BEGIN NOT DASDI INITLIZTN  * 04390000
*         GEN   (EJECT);                                                04400000
@9FB     EQU   *                                                  0125  04410000
         EJECT                                                          04420000
         DS    0H                                                       04430000
* EXECUTE:                                                              04440000
*        /*      INITIALIZE I/O EFFECTOR PARAMETER LIST         Y02008* 04450000
*                                                                       04460000
*         DVTPTR=PNT5;                  /* DEV TABLE PTR        Y02008* 04470000
EXECUTE  ST    @5,DVTPTR                                          0126  04480000
*         FLGA='00'X;                   /* CLEAR FLAG BYTE      Y02008* 04490000
         MVI   FLGA,X'00'                                         0127  04500000
*         FLGA=FLGA|'20'X;              /* SET ON GDP FLAG      Y02008* 04510000
         OI    FLGA,X'20'                                         0128  04520000
*         FLGB='00'X;                   /* CLEAR FLAG BYTE      Y02008* 04530000
         MVI   FLGB,X'00'                                         0129  04540000
*         FLGB=FLGB|'10'X;              /* SET ON OLD TECB FLAG Y02008* 04550000
         OI    FLGB,X'10'                                         0130  04560000
*         IF OFMMS='1'B                 /* IF OLT WANTS FILEMSK Y02008* 04570000
*          THEN                         /* CHANGED, THEN PUT NEWY02008* 04580000
         TM    13(@1),B'00010000'                                 0131  04590000
         BC    12,@9F2                                            0131  04600000
*          DO;                          /* OLT DEFINED          Y02008* 04610000
*           FILEMSK=OMSKMD;             /* FILEMSK IN PARM LIST Y02008* 04620000
         MVC   FILEMSK(1),14(@1)                                  0133  04630000
*           SAVMDMSK=FILEMSK;           /* SAVE NEW DEV MOD/MSK Y02008* 04640000
         MVC   52(1,@5),FILEMSK                                   0134  04650000
         BC    15,@9F1                                            0136  04660000
*          END;                                                         04670000
*                                                                       04680000
*          ELSE                         /* OR ELSE USE SAVED    Y02008* 04690000
*          DO;                          /* FILEMASK/MODESET     Y02008* 04700000
*           IF SAVMDMSK='00'X &         /* IF VALUE IS ZERO AND Y02008* 04710000
*            TAPE='1'B |                /* DEV IS TAPE OR DEV   Y02008* 04720000
*            UREC='1'B                  /* IS UNIT RECORD THEN  Y02008* 04730000
*             THEN                      /* MUST DEFINE MODE SET Y02008* 04740000
@9F2     CLI   52(@5),X'00'                                       0137  04750000
         BC    07,@9F0                                            0137  04760000
         TM    38(@5),B'10000000'                                 0137  04770000
         BC    01,@9EF                                            0137  04780000
@9F0     TM    38(@5),B'00001000'                                 0137  04790000
         BC    12,@9EE                                            0137  04800000
*              DO;                      /* FOR THESE DEVICES    Y02008* 04810000
*               FILEMSK='03'X;          /* PUT MODE IN PARMLIST Y02008* 04820000
@9EF     MVI   FILEMSK,X'03'                                      0139  04830000
*               SAVMDMSK='03'X;         /* PUT MODE IN DEVTAB   Y02008* 04840000
         MVI   52(@5),X'03'                                       0140  04850000
         BC    15,@9ED                                            0142  04860000
*              END;                                                     04870000
*             ELSE                      /* OR ELSE USE SAVED    Y02008* 04880000
*              FILEMSK=SAVMDMSK;        /* VODE/MASK IN DEVTAB  Y02008* 04890000
@9EE     MVC   FILEMSK(1),52(@5)                                  0142  04900000
*          END;                                                         04910000
@9ED     EQU   *                                                  0143  04920000
*                                                                       04930000
*         IF SFLPRT='1'B                /* IF DASD IS IN FILE   Y02008* 04940000
*          THEN                         /* PROTECT MODE, MUST   Y02008* 04950000
@9F1     TM    A00003+10,B'01000000'                              0144  04960000
         BC    12,@9EC                                            0144  04970000
*           DO;                         /* INHIBIT WRITES BY    Y02008* 04980000
*            FILEMSK=FILEMSK&'3F'X;     /* MASSAGEING FILE      Y02008* 04990000
         NI    FILEMSK,X'3F'                                      0146  05000000
*            FILEMSK=FILEMSK|'40'X;     /* MASK                 Y02008* 05010000
         OI    FILEMSK,X'40'                                      0147  05020000
*           END;                                                        05030000
*                                                                       05040000
*         IF OLTINVV='1'B               /* IF OLT IS IN VIRTUAL Y02008* 05050000
*          THEN                         /* STORAGE, MUST TELL   Y02008* 05060000
@9EC     TM    A00039,B'00001000'                                 0149  05070000
         BC    12,@9EB                                            0149  05080000
*         FLGB=FLGB|'20'X;              /* SET ON VIRT CCW FLAG Y02008* 05090000
         OI    FLGB,X'20'                                         0150  05100000
*                                                                       05110000
*         CCWPTR=OCCWS3;                /* PTR TO OLT CCWS      Y02008* 05120000
@9EB     MVC   CCWPTR+1(3),5(@1)                                  0151  05130000
         MVI   CCWPTR,X'00'                                       0151  05140000
*                                                                       05150000
*         IF ORCAL='1'B                 /* IF RECALIBRATE CCW   Y02008* 05160000
*          THEN                         /* WILL BE ISSUED, MUST Y02008* 05170000
         TM    13(@1),B'00000100'                                 0152  05180000
         BC    12,@9EA                                            0152  05190000
*          DO;                          /* FOR SEEK HEAD/CYL 0  Y02008* 05200000
*           CCWPTR=CCWPTR+16;           /* SKIP SEEK/SM CCWS,   Y02008* 05210000
         LA    @F,16                                              0154  05220000
         A     @F,CCWPTR                                          0154  05230000
         ST    @F,CCWPTR                                          0154  05240000
*           FLGA=FLGA|'80'X;            /* BYPASS SEEK/SET FLMSKY02008* 05250000
         OI    FLGA,X'80'                                         0155  05260000
*          END;                                                         05270000
*                                                                       05280000
*         SNSCNT='06'X;                 /* SIX BYTES OF SENSE   Y02008* 05290000
@9EA     MVI   SNSCNT,X'06'                                       0157  05300000
*         TECBPTRX=OTECB;               /* ADDR IF OLT TECB     Y02008* 05310000
         MVC   TECBPTRX(4),0(@1)                                  0158  05320000
*                                                                       05330000
*         /*        GO OUT TO I/O EFFECTOR ROUTINE TO DO I/O    Y02008* 05340000
*                                                                       05350000
*         R15=IORTNADR;                 /* ADDR IO EFFECTOR     Y02008* 05360000
         L     @F,IORTNADR                                        0159  05370000
*                                                                       05380000
*         GEN(BALR R14,R15);            /* BRANCH TO I/O EFFCTR Y02008* 05390000
         BALR R14,R15                                                   05400000
         DS    0H                                                       05410000
*                                                                       05420000
*         IF R15¬=0                     /* IF RET CODE FROM I/O Y02008* 05430000
*          THEN                         /* EFFECTOR IS NOT 0,   Y02008* 05440000
         LTR   @F,@F                                              0161  05450000
         BC    08,@9E9                                            0161  05460000
*           DO;                         /* ERROR CONDITION FOUNDY02008* 05470000
* XIO004A:                              /* LABEL, END OLT       Y02008* 05480000
*            OLTTERM='1'B;              /* SET BIT FOR OLT SCHEDY02008* 05490000
XIO004A  OI    A00041,B'00000001'                                 0163  05500000
*            GO TO XIOEX1;              /* TO CANCEL TEST.      Y02008* 05510000
         BC    15,XIOEX1                                          0164  05520000
*           END;                                                        05530000
* EXECDONE :                            /*                      X02008* 05540000
*         WRK1  = LSTPTR;               /* RESTORE REG 1 AND          * 05550000
@9E9     EQU   *                                                  0166  05560000
EXECDONE LR    @8,@1                                              0166  05570000
*         RELEASE  (WRK1);              /* AND RELEASE IT             * 05580000
*         GO TO  XIOEX4;                /* GO EXIT TO THE OLT         * 05590000
         BC    15,XIOEX4                                          0168  05600000
*         GEN   (EJECT);                                                05610000
         EJECT                                                          05620000
         DS    0H                                                       05630000
*         /************************************************************ 05640000
*         /*    ALL EXITS FROM IFDOLT05 ARE AFFECTED IN FOLLOWING CODE* 05650000
*         /************************************************************ 05660000
* XIOEX4:       /*  NORMAL EXIT TO OLT STARTS HERE                    * 05670000
*         IF    TPACT = '1'B THEN       /* IF T.P. IS ACTIVE THEN SET * 05680000
XIOEX4   TM    A00025+1,B'00000001'                               0170  05690000
         BC    12,@9E8                                            0170  05700000
*               WTFLG = '1'B;           /* THE WAIT FLAG              * 05710000
         OI    A00025+1,B'00010000'                               0171  05720000
*         GO TO XIOEND;                 /* AND RETURN TO OLT          * 05730000
         BC    15,XIOEND                                          0172  05740000
* XIOEX1:       /* ALL EXITS TO OLTEP SCHEDULER PASS HERE             * 05750000
*         SVPTR = SCHEDSA;              /* R13 POINTS TO SCHEDULER SVE* 05760000
XIOEX1   MVC   4(4,@D),SCHEDSA                                    0173  05770000
* XIOEND:                                                               05780000
*                                       /* LINKAGE CONVENTIONS FOLLOW * 05790000
*       END   IFDOLT05;                                                 05800000
XIOEND   EQU   *                                                  0174  05810000
@EL01    L     @D,4(0,@D)                                         0174  05820000
         L     @E,12(0,@D)                                        0174  05830000
         LM    @0,@C,20(@D)                                       0174  05840000
         BCR   15,@E                                              0174  05850000
@DATA1   EQU   *                                                        05860000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           05870000
@1       EQU   01                                                       05880000
@2       EQU   02                                                       05890000
@3       EQU   03                                                       05900000
@4       EQU   04                                                       05910000
@5       EQU   05                                                       05920000
@6       EQU   06                                                       05930000
@7       EQU   07                                                       05940000
@8       EQU   08                                                       05950000
@9       EQU   09                                                       05960000
@A       EQU   10                                                       05970000
@B       EQU   11                                                       05980000
@C       EQU   12                                                       05990000
@D       EQU   13                                                       06000000
@E       EQU   14                                                       06010000
@F       EQU   15                                                       06020000
         DS    0F                                                       06030000
         DS    0D                                                       06040000
@DATA    EQU   *                                                        06050000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   06060000
R0       EQU   00000000            FULLWORD POINTER REGISTER            06070000
LSTPTR   EQU   00000001            FULLWORD POINTER REGISTER            06080000
COMMON   EQU   00000002            FULLWORD POINTER REGISTER            06090000
R3       EQU   00000003            FULLWORD POINTER REGISTER            06100000
PNT4     EQU   00000004            FULLWORD POINTER REGISTER            06110000
PNT5     EQU   00000005            FULLWORD POINTER REGISTER            06120000
PNT6     EQU   00000006            FULLWORD POINTER REGISTER            06130000
PNT7     EQU   00000007            FULLWORD POINTER REGISTER            06140000
WRK1     EQU   00000008            FULLWORD INTEGER REGISTER            06150000
R9       EQU   00000009            FULLWORD INTEGER REGISTER            06160000
R12      EQU   00000012            FULLWORD INTEGER REGISTER            06170000
R13      EQU   00000013            FULLWORD POINTER REGISTER            06180000
R14      EQU   00000014            FULLWORD POINTER REGISTER            06190000
LINK     EQU   00000014            FULLWORD INTEGER REGISTER            06200000
R15      EQU   00000015            FULLWORD INTEGER REGISTER            06210000
R1       EQU   00000001            FULLWORD POINTER REGISTER            06220000
         ORG   @DATA+00000072                                           06230000
HEX14    EQU   *                   FULLWORD INTEGER                     06240000
         DC    XL4'00008014'                                            06250000
SVPTR    EQU   00000004            FULLWORD POINTER                     06260000
XDVADR   EQU   @DATA+00000076      2 BYTE(S)                            06270000
         ORG   @DATA+00000078                                           06280000
MYID     EQU   *                   2 BYTE(S)                            06290000
         DC    C'05'                                                    06300000
COMCDE   EQU   00000000            1 BYTE(S) ON WORD                    06310000
A00000   EQU   COMCDE+00000000     6 BIT(S)                             06320000
RDCM     EQU   COMCDE+00000000     1 BIT(S)                             06330000
WRCM     EQU   COMCDE+00000000     1 BIT(S)                             06340000
NXTCCW   EQU   00000008            FULLWORD INTEGER                     06350000
OLTLST   EQU   00000000            32 BYTE(S) ON WORD                   06360000
OTECB    EQU   OLTLST+00000000     FULLWORD POINTER                     06370000
OCCWS    EQU   OLTLST+00000004     FULLWORD POINTER                     06380000
A00021   EQU   OLTLST+00000004     1 BYTE(S)                            06390000
OCCWS3   EQU   OLTLST+00000005     3 BYTE(S)                            06400000
DEVAD    EQU   OLTLST+00000008     FULLWORD POINTER                     06410000
DPSCND   EQU   OLTLST+00000008     2 BYTE(S)                            06420000
OLTEPDV  EQU   OLTLST+00000010     2 BYTE(S)                            06430000
OCWCNT   EQU   OLTLST+00000012     1 BYTE(S)                            06440000
OFLGS    EQU   OLTLST+00000013     1 BYTE(S)                            06450000
A00022   EQU   OLTLST+00000013     1 BIT(S)                             06460000
A00023   EQU   OLTLST+00000013     1 BIT(S)                             06470000
ODAD     EQU   OLTLST+00000013     1 BIT(S)                             06480000
OFMMS    EQU   OLTLST+00000013     1 BIT(S)                             06490000
OLN0     EQU   OLTLST+00000013     1 BIT(S)                             06500000
ORCAL    EQU   OLTLST+00000013     1 BIT(S)                             06510000
OGPTST   EQU   OLTLST+00000013     2 BIT(S)                             06520000
OFNC24   EQU   OLTLST+00000013     1 BIT(S)                             06530000
OFNC23   EQU   OLTLST+00000013     1 BIT(S)                             06540000
OMSKMD   EQU   OLTLST+00000014     1 BYTE(S)                            06550000
A00024   EQU   OLTLST+00000015     1 BYTE(S)                            06560000
OGPPAR   EQU   OLTLST+00000016     16 BYTE(S)                           06570000
OSKAD    EQU   OLTLST+00000016     6 BYTE(S)                            06580000
TTECB    EQU   00000000            20 BYTE(S) ON WORD                   06590000
TEVCB    EQU   TTECB+00000000      4 BYTE(S)                            06600000
TCCPS    EQU   TTECB+00000004      1 BYTE(S)                            06610000
TCCW1    EQU   TTECB+00000005      7 BYTE(S)                            06620000
TSNS1    EQU   TTECB+00000012      8 BYTE(S)                            06630000
FIXECB   EQU   @DATA+00000080      4 BYTE(S) ON WORD                    06640000
A00034   EQU   FIXECB+00000000     3 BYTE(S)                            06650000
A00035   EQU   FIXECB+00000003     1 BYTE(S)                            06660000
A00036   EQU   FIXECB+00000003     5 BIT(S)                             06670000
FIXLSTOK EQU   FIXECB+00000003     1 BIT(S)                             06680000
WORK1    EQU   @DATA+00000084      FULLWORD INTEGER                     06690000
         ORG   @DATA+00000088                                           06700000
ALL1S    EQU   *                   3 BYTE(S)                            06710000
         DC    X'FFFFFF'                                                06720000
A00043   EQU   00000000            56 BYTE(S) ON WORD                   06730000
DEBAD    EQU   A00043+00000000     8 BYTE(S)                            06740000
DUCBA    EQU   A00043+00000008     FULLWORD POINTER                     06750000
A00044   EQU   A00043+00000008     1 BYTE(S)                            06760000
DUCBA3   EQU   A00043+00000009     3 BYTE(S)                            06770000
A00045   EQU   A00043+00000009     1 BYTE(S)                            06780000
UCB2BYTE EQU   A00043+00000010     2 BYTE(S)                            06790000
DEVFL1   EQU   A00043+00000012     1 BYTE(S)                            06800000
ONLNE    EQU   A00043+00000012     1 BIT(S)                             06810000
PRIME    EQU   A00043+00000012     1 BIT(S)                             06820000
DPDONE   EQU   A00043+00000012     1 BIT(S)                             06830000
ACTVE    EQU   A00043+00000012     1 BIT(S)                             06840000
ALLCT    EQU   A00043+00000012     1 BIT(S)                             06850000
GRBED    EQU   A00043+00000012     1 BIT(S)                             06860000
FLPRT    EQU   A00043+00000012     1 BIT(S)                             06870000
ACTSC    EQU   A00043+00000012     1 BIT(S)                             06880000
DEVFL2   EQU   A00043+00000013     1 BYTE(S)                            06890000
DSNAME   EQU   A00043+00000013     1 BIT(S)                             06900000
SHARED   EQU   A00043+00000013     1 BIT(S)                             06910000
CEVOL    EQU   A00043+00000013     1 BIT(S)                             06920000
STDLBL   EQU   A00043+00000013     1 BIT(S)                             06930000
CHANFUNC EQU   A00043+00000013     1 BIT(S)                             06940000
BYPS     EQU   A00043+00000013     1 BIT(S)                             06950000
CEDE     EQU   A00043+00000013     1 BIT(S)                             06960000
ATTENTIO EQU   A00043+00000013     1 BIT(S)                             06970000
DEVFL3   EQU   A00043+00000014     1 BYTE(S)                            06980000
ANRNOTST EQU   A00043+00000014     1 BIT(S)                             06990000
A00046   EQU   A00043+00000014     1 BIT(S)                             07000000
HIODONE  EQU   A00043+00000014     1 BIT(S)                             07010000
DEVFL4   EQU   A00043+00000015     1 BYTE(S)                            07020000
RMTLNDAB EQU   A00043+00000015     1 BIT(S)                             07030000
RMTLNENA EQU   A00043+00000015     1 BIT(S)                             07040000
FRSTEXIO EQU   A00043+00000015     1 BIT(S)                             07050000
A00047   EQU   A00043+00000015     5 BIT(S)                             07060000
DVEXT1   EQU   A00043+00000016     6 BYTE(S)                            07070000
DVEXT2   EQU   A00043+00000022     6 BYTE(S)                            07080000
DVCCHH2  EQU   A00043+00000022     4 BYTE(S)                            07090000
A00048   EQU   A00043+00000028     2 BYTE(S)                            07100000
MODESET  EQU   A00043+00000030     1 BYTE(S)                            07110000
EXPOSURE EQU   A00043+00000031     1 BYTE(S)                            07120000
FULLADDR EQU   A00043+00000032     4 BYTE(S)                            07130000
FILL     EQU   A00043+00000032     2 BYTE(S)                            07140000
DEHAD    EQU   A00043+00000034     2 BYTE(S)                            07150000
CDSINFOR EQU   A00043+00000036     16 BYTE(S)                           07160000
MODEL    EQU   A00043+00000036     1 BYTE(S)                            07170000
FEATURES EQU   A00043+00000037     1 BYTE(S)                            07180000
CLASS    EQU   A00043+00000038     1 BYTE(S)                            07190000
TAPE     EQU   A00043+00000038     1 BIT(S)                             07200000
A00049   EQU   A00043+00000038     1 BIT(S)                             07210000
DASD     EQU   A00043+00000038     1 BIT(S)                             07220000
A00050   EQU   A00043+00000038     1 BIT(S)                             07230000
UREC     EQU   A00043+00000038     1 BIT(S)                             07240000
TYPE     EQU   A00043+00000039     1 BYTE(S)                            07250000
CDSCNT   EQU   A00043+00000040     1 BYTE(S)                            07260000
CDSFLAGS EQU   A00043+00000041     1 BYTE(S)                            07270000
A00051   EQU   A00043+00000041     7 BIT(S)                             07280000
DEVREM   EQU   A00043+00000041     1 BIT(S)                             07290000
EXTSGMSK EQU   A00043+00000042     2 BYTE(S)                            07300000
SYMNAME  EQU   A00043+00000044     8 BYTE(S)                            07310000
A00052   EQU   A00043+00000052     4 BYTE(S)                            07320000
SAVMDMSK EQU   A00043+00000052     1 BYTE(S)                            07330000
A00053   EQU   00000000            3 BYTE(S) ON WORD                    07340000
A00054   EQU   A00053+00000000     1 BYTE(S)                            07350000
UCBID    EQU   A00053+00000001     1 BYTE(S)                            07360000
SRTESTAT EQU   A00053+00000002     1 BYTE(S)                            07370000
UCBONLNE EQU   A00053+00000002     1 BIT(S)                             07380000
A00055   EQU   A00053+00000002     7 BIT(S)                             07390000
         ORG   @DATA                                                    07400000
         DS    00000091C                                                07410000
@TEMPS   DS    0F                                                       07420000
EXIO000  IFDCOM                                                         07430000
VID      EQU   WKSVC+00000002      2 BYTE(S)                            07440000
A00001   EQU   WKSVC+00000000      16 BYTE(S) ON WORD                   07450000
SVCPRM   EQU   A00001+00000000     16 BYTE(S)                           07460000
A00002   EQU   A00001+00000000     2 BYTE(S)                            07470000
RPTID    EQU   A00001+00000002     2 BYTE(S)                            07480000
RPTPRM1  EQU   A00001+00000004     4 BYTE(S)                            07490000
RPTPRM2  EQU   A00001+00000008     4 BYTE(S)                            07500000
A00003   EQU   CHASCT+00000000     80 BYTE(S) ON WORD                   07510000
A00004   EQU   A00003+00000000     3 BYTE(S)                            07520000
A00005   EQU   A00003+00000003     1 BYTE(S)                            07530000
SETERR   EQU   A00003+00000003     1 BIT(S)                             07540000
A00006   EQU   A00003+00000004     4 BYTE(S)                            07550000
A00007   EQU   A00003+00000008     2 BYTE(S)                            07560000
SDFLG    EQU   A00003+00000010     1 BYTE(S)                            07570000
A00008   EQU   A00003+00000010     1 BIT(S)                             07580000
SFLPRT   EQU   A00003+00000010     1 BIT(S)                             07590000
SCEVLM   EQU   A00003+00000010     1 BIT(S)                             07600000
A00009   EQU   A00003+00000010     5 BIT(S)                             07610000
A00010   EQU   A00003+00000011     1 BYTE(S)                            07620000
SDVAD    EQU   A00003+00000012     4 BYTE(S)                            07630000
A00011   EQU   A00003+00000012     2 BYTE(S)                            07640000
SDVAD2   EQU   A00003+00000014     2 BYTE(S)                            07650000
SDVDS    EQU   A00003+00000016     4 BYTE(S)                            07660000
A00012   EQU   A00003+00000016     2 BYTE(S)                            07670000
SDVCLS   EQU   A00003+00000018     1 BYTE(S)                            07680000
STP      EQU   A00003+00000018     1 BIT(S)                             07690000
STC      EQU   A00003+00000018     1 BIT(S)                             07700000
SDA      EQU   A00003+00000018     1 BIT(S)                             07710000
SGD      EQU   A00003+00000018     1 BIT(S)                             07720000
SUR      EQU   A00003+00000018     1 BIT(S)                             07730000
SMC      EQU   A00003+00000018     1 BIT(S)                             07740000
A00013   EQU   A00003+00000018     2 BIT(S)                             07750000
SDVTYP   EQU   A00003+00000019     1 BYTE(S)                            07760000
A00014   EQU   A00003+00000020     4 BYTE(S)                            07770000
A00015   EQU   A00003+00000024     4 BYTE(S)                            07780000
A00016   EQU   A00003+00000024     2 BYTE(S)                            07790000
SSDVAD2  EQU   A00003+00000026     2 BYTE(S)                            07800000
A00017   EQU   A00003+00000028     4 BYTE(S)                            07810000
A00018   EQU   A00003+00000032     1 BYTE(S)                            07820000
SEPFLG   EQU   A00003+00000033     1 BYTE(S)                            07830000
A00019   EQU   A00003+00000034     2 BYTE(S)                            07840000
SOLTFL   EQU   A00003+00000036     4 BYTE(S)                            07850000
A00020   EQU   A00003+00000040     40 BYTE(S)                           07860000
A00025   EQU   CESWT+00000000      7 BYTE(S) ON WORD                    07870000
OSW0     EQU   A00025+00000000     1 BYTE(S)                            07880000
A00026   EQU   A00025+00000000     1 BIT(S)                             07890000
DATPRSC  EQU   A00025+00000000     1 BIT(S)                             07900000
A00027   EQU   A00025+00000000     6 BIT(S)                             07910000
OSW1     EQU   A00025+00000001     1 BYTE(S)                            07920000
A00028   EQU   A00025+00000001     1 BIT(S)                             07930000
SKTST    EQU   A00025+00000001     1 BIT(S)                             07940000
A00029   EQU   A00025+00000001     1 BIT(S)                             07950000
WTFLG    EQU   A00025+00000001     1 BIT(S)                             07960000
CHNGM    EQU   A00025+00000001     1 BIT(S)                             07970000
A00030   EQU   A00025+00000001     1 BIT(S)                             07980000
OLNOK    EQU   A00025+00000001     1 BIT(S)                             07990000
TPACT    EQU   A00025+00000001     1 BIT(S)                             08000000
OSW2     EQU   A00025+00000002     1 BYTE(S)                            08010000
DYCMB    EQU   A00025+00000002     1 BIT(S)                             08020000
A00031   EQU   A00025+00000002     6 BIT(S)                             08030000
AMERLDV  EQU   A00025+00000002     1 BIT(S)                             08040000
OSW3     EQU   A00025+00000003     1 BYTE(S)                            08050000
A00032   EQU   A00025+00000003     2 BIT(S)                             08060000
NOTSTNG  EQU   A00025+00000003     1 BIT(S)                             08070000
OSW4     EQU   A00025+00000004     1 BYTE(S)                            08080000
OSW5     EQU   A00025+00000005     1 BYTE(S)                            08090000
OSW6     EQU   A00025+00000006     1 BYTE(S)                            08100000
A00033   EQU   A00025+00000006     3 BIT(S)                             08110000
FPVLTE   EQU   A00025+00000006     1 BIT(S)                             08120000
NOTMER   EQU   A00025+00000006     1 BIT(S)                             08130000
A00037   EQU   CESWT7+00000000     1 BYTE(S)                            08140000
A00038   EQU   A00037+00000000     6 BIT(S)                             08150000
TCBRV    EQU   A00037+00000000     1 BIT(S)                             08160000
A00039   EQU   CESWT8+00000000     1 BYTE(S)                            08170000
A00040   EQU   A00039+00000000     4 BIT(S)                             08180000
OLTINVV  EQU   A00039+00000000     1 BIT(S)                             08190000
A00041   EQU   CESWT9+00000000     1 BYTE(S) ON WORD                    08200000
A00042   EQU   A00041+00000000     7 BIT(S)                             08210000
OLTTERM  EQU   A00041+00000000     1 BIT(S)                             08220000
@DATEND  EQU   *                                                        08230000
@DO9FE   EQU   XIO004A                                                  08240000
@9E8     EQU   XIOEND                                                   08250000
         END   IFDOLT05                                                 08260000
./  ADD  SSI=71820003,NAME=IFDOLT06
         TITLE 'IFDOLT06 - OLD WAITIO MODULE'                           00010000
         LCLA  &T,&SPN                                            0001  00020000
.@001    ANOP                                                     0001  00030000
IFDOLT06 CSECT ,                                                  0001  00040000
         BC    15,24(0,@F)                                              00050000
         DC    C'IFDOLT06 01 JUL 77'                             0001  00060000
         STM   @E,@C,12(@D)                                       0001  00070000
         BALR  @B,0                                               0001  00080000
@PSTART  DS    0H                                                 0001  00090000
         USING @PSTART+00000,@B                                   0001  00100000
         TITLE 'IFDOLT06 - OLD WAITIO MODULE'                           00110000
         DS    0H                                                       00120000
*         GEN(USING  CHASCT,PNT2);       /* SET UP BASE FOR COMMON    * 00130000
         USING  CHASCT,PNT2                                             00140000
         DS    0H                                                       00150000
*         GENERATE DATA;                 /* COMMON AREA               * 00160000
*         DECLARE                                                       00170000
*               /****************************************************** 00180000
*               /*  TEST EVENT CONTROL BLOCK (TECB) MAP               * 00190000
*               /****************************************************** 00200000
*               1 TTECB BASED(R5),       /* BASED ADDRESS IN R5       * 00210000
*                3 TEVCB CHAR(4),        /* EVENT CONTROL BLOCK ECB   * 00220000
*                3 TCCPS CHAR(1),        /* CONDITION CODE POSTING    * 00230000
*                 5 TIMEOUT BIT(1),      /* TIME-OUT BYPASS SWITCH    * 00240000
*                 5 * BIT(7),            /* N/A                       * 00250000
*                3 TCCW1 CHAR(7),        /* 7 BYTE CSW                * 00260000
*                3 TSNS1 CHAR(35);       /* SENSE FIELD               * 00270000
*                                                                       00280000
*         /************************************************************ 00290000
*         /*          SVC 59 PARM LIST                          Y02008* 00300000
*         /************************************************************ 00310000
*                                                                       00320000
*         DCL ROPT CHAR(12) GEND;       /* SVC PRM LIST         Y02008* 00330000
*                                                                       00340000
*         DCL 1 * BASED(ADDR(ROPT)-4),  /* FORMAT OF LIST       Y02008* 00350000
*           3 * CHAR(2),                                                00360000
*           3 MODID CHAR(2),            /* MOD IDENTIFIER       Y02008* 00370000
*           3 SVCIOSB CHAR(4),          /* PTR TO ACTIVE IOSB   Y02008* 00380000
*           3 SVC16 CHAR(4);            /* PURGE ,SVC 16        Y02008* 00390000
*                                                                       00400000
*                                                                       00410000
*         DCL IODEVTAB PTR GEND;        /* I O DEVICE,IOSB,ECB  Y02008* 00420000
*                                                                       00430000
*          DCL 1 IOSBCB CHAR(36) BASED(R3),/* IOSB CNTRL BLOCK Y02008*/ 00440000
*          3 * CHAR(20),                                                00450000
*          3 IOSCC CHAR(1),             /* IOS SIO COMP CODE    Y02008* 00460000
*          3 IOSCSW CHAR(7),            /* LAST CSW BYTES       Y02008* 00470000
*          3 * CHAR(4),                                                 00480000
*          3 IOSUSE PTR;                /* PTR TO IOS USER CB   Y02008* 00490000
*                                                                       00500000
*        DCL 1 IOSUSECB CHAR(20) BASED(IOSUSE), /* OUR IOS CB   Y02008* 00510000
*          3 OECBPTR PTR,               /* PTR TO OLTEP ECB     Y02008* 00520000
*          3 TECBPTR PTR,               /* PTR TO OLT TECB      Y02008* 00530000
*          3 IODVTBPT PTR,              /* PTR TO ACTIVE DEVTAB Y02008* 00540000
*          3 TCCWPTR PTR,               /* PTR TO CCW XLATOR    Y02008* 00550000
*          3 USEFLGA CHAR(1),           /* FLAG BYTE A          Y02008* 00560000
*            5 INUSE BIT(1),            /* THIS IOSB IN USE     Y02008* 00570000
*            5 ATTN BIT(1),             /* ATTENTION INTERP RQSTY02008* 00580000
*            5 VIRTCCW BIT(1),          /* VIRTUAL CCW STRING   Y02008* 00590000
*             5 OLDTECB BIT(1),         /* OLD TECB INDICATOR   Y02008* 00600000
*            5 INTRNLCB BIT(1),         /* INTERNAL IOSB RQST   Y02008* 00610000
*            5 PURGED BIT(1);           /* THIS I/O EVENT PURGEDY02008* 00620000
*                                                                       00630000
*                                                                       00640000
*         DCL 1 OECB CHAR(4) BASED(OECBPTR), /* OLTEP/OLT STAT  Y02008* 00650000
*           3 OSNSCNT CHAR(1),          /* I/O EVENT SENSE COUNTY02008* 00660000
*           3 OINCNT CHAR(1),           /* OECB INTERRUPT COUNT Y02008* 00670000
*           3 * CHAR(2);                                                00680000
*         DCL 1 DEVECBX CHAR(12) BASED(IODVTBPT),  /* IOSB DEVS Y02008* 00690000
*           3 ACTVDEV PTR,              /* ACTIVE DEVICE FOR I/OY02008* 00700000
*           3 ACTVIOSB PTR,             /* ACTIVE IOSB FOR EVENTY02008* 00710000
*           3 ACTVDEVECB CHAR(4),       /* ECB POSTED FOR EVENT Y02008* 00720000
*             5 COMPCODE CHAR(1),       /* SIO COMPLETION CODE  Y02008* 00730000
*               7 ECBWAIT BIT(1),       /* WAIT BIT IN ECB      Y02008* 00740000
*               7 ECBDONE BIT(1),       /* ECB POST BIT         Y02008* 00750000
*               7 * BIT(6),             /* N A                  Y02008* 00760000
*             5 * CHAR(1),              /* N A                  Y02008* 00770000
*             5 ECBPOSTCODE CHAR(2);    /* ECB POST CODE        Y02008* 00780000
*         DCL IOTABPTR PTR;             /* BASE PRT FOR IOTABLEXY02008* 00790000
*         DCL 1 IOTABLEX CHAR(12) BASED(IOTABPTR),                      00800000
*           3 IODEVX PTR,               /* CURRENT IO DEVICE    Y02008* 00810000
*           3 IOSBPTRX PTR,             /* CURRENT IOSB PTR     Y02008* 00820000
*           3 IOECBX   PTR;             /* CURRENT ECB  PTR     Y02008* 00830000
*                                                                       00840000
*         DCL TIME30 CHAR(8)             /* VALUE FOR STIMER          * 00850000
*               INIT('F0F0F0F0F3F0F0C0'X)/* INITIAL VALUE             * 00860000
*               BDY(DWORD);              /* BOUNDARY                  * 00870000
*         DCL ECB5 FIXED INIT(0);        /* ECB FOR WTOR              * 00880000
*         DCL INBUFR CHAR(124) GENERATED;/* INPUT BUFFER              * 00890000
*         DCL IOSBPTR1 PTR GEND;        /* PTR TO 1ST IOSB USED Y02008* 00900000
*         DCL RESPONSE CHAR(1)           /* RESPONSE BUFFER           * 00910000
*               BASED(ADDR(INBUFR));     /* BASED ADDRESS             * 00920000
*         DCL CESWT CHAR(1) GENERATED;   /* OLTEP SWITCHES            * 00930000
*         /************************************************************ 00940000
*         /*    CESWT SWITCH STRUCTURE                                * 00950000
*         /************************************************************ 00960000
*         DCL 1 * CHAR(1)                                               00970000
*               BASED(ADDR(CESWT)),      /* BASED ADDRESS             * 00980000
*               3 * BIT(1),              /* N/A                       * 00990000
*               3 DPENTRY BIT(1),        /* ENTRY FROM DATA PROTECT   * 01000000
*               3 * BIT(6);              /* N/A                       * 01010000
*         DCL CESWT1 CHAR(1) GENERATED;  /* OLTEP SWITCHES            * 01020000
*         /************************************************************ 01030000
*         /*    CESWT1 SWITCH STRUCTURE                               * 01040000
*         /************************************************************ 01050000
*         DCL 1 * CHAR(1)                                               01060000
*               BASED(ADDR(CESWT1)),     /* BASED ADDRESS             * 01070000
*               3 * BIT(3),              /* N/A                       * 01080000
*               3 WAITFG BIT(1),         /* WAIT FLAG                 * 01090000
*               3 * BIT(3),              /* N/A                       * 01100000
*               3 TPFLAG BIT(1);         /* TP FLAG                   * 01110000
*         DCL CESWT7 CHAR(1) GENERATED;  /* OLTEP SWITCHES            * 01120000
*         /************************************************************ 01130000
*         /*    CESWT7 SWITCH STRUCTURE                               * 01140000
*         /************************************************************ 01150000
*         DCL 1 * CHAR(1)                                               01160000
*               BASED(ADDR(CESWT7)),     /* BASED ADDRESS             * 01170000
*               3 * BIT(6),              /* N/A                       * 01180000
*               3 TCBRV BIT(1);          /* REAL OR VIRTUAL           * 01190000
*       DCL CESWT8 CHAR(1) GEND ;             /* SWITCH 8       Y02008* 01200000
*       DCL 1 * CHAR(1) BASED(ADDR(CESWT8)),  /*                Y02008* 01210000
*         3 * BIT(4),                   /* UNUSED               Y02008* 01220000
*         3 OLTINVV BIT(1) ;            /* OLT IN VIRTUAL       Y02008* 01230000
*         /************************************************************ 01240000
*         /*    DEVTAB ENTRY MAP                                      * 01250000
*         /************************************************************ 01260000
*         DCL 1 * BASED(ACTVDEV),       /* DEVICE TABLE LAYOUT  Y02008* 01270000
*           2 EDEVAD CHAR(8),            /* DEV ADDR IN EBCDIC        * 01280000
*           2 * CHAR(4),                 /* N/A                       * 01290000
*           2 * CHAR(1),                 /* FLAGS                     * 01300000
*             3 * BIT(3),                /* N/A                       * 01310000
*             3 ACTVE BIT(1),            /* EXIO ACTIVE FLAG    Y02008* 01320000
*             3 * BIT(1);                /* N/A                       * 01330000
*         DCL IFDMSG06 EXT ENTRY;        /* MESSAGE MODULE            * 01340000
*         /************************************************************ 01350000
*         /*    PARAMETER LIST FOR PWTOR                              * 01360000
*         /************************************************************ 01370000
*         DCL 1 MSGPARM BASED(MSGPTR),                                  01380000
*           2 LENGTH CHAR(1),            /* LENGTH OF RESPONSE        * 01390000
*           2 BUFAD PTR(24),             /* BUFFER FOR RESPONSE       * 01400000
*           2 MECBAD PTR;                /* ECB ADDRESS               * 01410000
*         DCL MSGDEVAD CHAR(8)           /* DEVICE ADDRESS AREA       * 01420000
*               BASED(MSGPTR+47);        /* IN MESSAGE                * 01430000
*         DCL SVDEVPTR PTR(24) INIT(0);  /* SAVE DEVTAB PTR HEREY02008* 01440000
*         DCL TENTHSEC CHAR(8) BDY(DWORD)/* STIMER VALUE        Y02008* 01450000
*           INIT('F0F0F0F0F0F0F1C0'X);   /* 1 TENTH SECOND      Y02008* 01460000
*         DCL SAVE1(18) FIXED;           /* 1ST SAVEAREA              * 01470000
*         DCL SAVE2(18) FIXED;           /* 2ND SAVEAREA              * 01480000
*         DCL 1 IOFLAGS CHAR(1),        /* I/O EVENT STATUS FLGSY02008* 01490000
*           3 WAITQUE BIT(1),           /* REQUEST IN QUE       Y02008* 01500000
*           3 DEVBUSY BIT(1),           /* DEVICE IS BUSY       Y02008* 01510000
*           3 CUBUSY BIT(1);            /* CONTROL UNIT BUSY    Y02008* 01520000
*                                                                       01530000
*         DCL 1 CONDCODE CHAR(6),           /* ISOLATE IOS COND Y02008* 01540000
*           3 TEMPCC CHAR(1) INIT('00'X),   /* COND CODE=IOSCC  Y02008* 01550000
*           3 MASKCODE CHAR(1) INIT('70'X), /* COND CODE=MASK   Y02008* 01560000
*           3 ZEROCODE CHAR(1) INIT('00'X), /* COND CODE=0      Y02008* 01570000
*           3 CCODE0 CHAR(1) INIT('40'X),   /* COND CODE=1      Y02008* 01580000
*           3 CCODE1 CHAR(1) INIT('50'X),   /* COND CODE=2      Y02008* 01590000
*           3 CCODE2 CHAR(1) INIT('60'X);   /* COND CODE=3      Y02008* 01600000
*                                                                       01610000
*         DCL CKCC1 LABEL INTERNAL LOCAL; /* LABEL,CHECK CC=1   Y02008* 01620000
*         DCL CKCC2 LABEL INTERNAL LOCAL; /* LABEL,CHECK CC=2   Y02008* 01630000
*         DCL GOODEXIT LABEL LOCAL INTERNAL; /* NORMAL 06 EXIT  Y02008* 01640000
*         DCL PURGEXIT LABEL LOCAL INTERNAL; /*  PURGE 06 EXIT  Y02008* 01650000
*         DCL GOODST1  LABEL LOCAL INTERNAL; /*  RE ISSUE WAIT  Y02008* 01660000
*                                                                       01670000
*         DCL K FIXED(15);               /* COUNTER FOR LOOPING Y02008* 01680000
*         GENERATE;                      /* GENERATE ENTRY CODE       * 01690000
         ST    R13,SAVE1+4              SAVE @ OF CALLER'S SAVEAREA     01700000
         LA    R15,SAVE1                GET @ OF OWN SAVEAREA           01710000
         ST    R15,8(R13)               SAVE IT IN CALLER'S SAVEAREA    01720000
         LR    R13,R15                  PUT IT IN REGISTER 13           01730000
         DS    0H                                                       01740000
*         R5=PL;                         /* SAVE PARAMETER LIST PTR   * 01750000
         LR    @5,@1                                              0060  01760000
*         IOTABPTR=ADDR(IODEVTAB);      /* ADDR IO TABLES       Y02008* 01770000
         LA    @F,IODEVTAB                                        0061  01780000
         ST    @F,IOTABPTR                                        0061  01790000
*         DO I=1 TO 3 BY 1;              /* SEARCH TECBS FOR    Y02008* 01800000
         LA    @7,1                                               0062  01810000
*         IF IOSBPTRX ¬= 0 THEN         /* IF IOSB PTR 0       ZA04295* 01820000
@DO9FF   SR    @F,@F                                              0063  01830000
         L     @1,IOTABPTR                                        0063  01840000
         MVC   @TEMP4(4),4(@1)                                    0063  01850000
         C     @F,@TEMP4                                          0063  01860000
         BC    08,@9FB                                            0063  01870000
*           DO;                         /* BYPASS THIS ENTRY   ZA04295* 01880000
*         R3=IOSBPTRX;                  /* ADDRESS AN IOSB      Y02008* 01890000
         MVC   @TEMP4(4),4(@1)                                    0065  01900000
         L     @3,@TEMP4                                          0065  01910000
*          IF R5=TECBPTR                /* MATCH, DOES OLT TECB Y02008* 01920000
*           THEN                         /* PTR MATCH THIS TECB Y02008* 01930000
         MVC   @TEMP4(4),32(@3)                                   0066  01940000
         L     @C,@TEMP4                                          0066  01950000
         MVC   @TEMP4(4),4(@C)                                    0066  01960000
         L     @F,@TEMP4                                          0066  01970000
         CR    @F,@5                                              0066  01980000
*            GO TO WAITIO01;             /* YES A MATCH, GO ON  Y02008* 01990000
         BC    08,WAITIO01                                        0067  02000000
*           END;                                            /* ZA04295* 02010000
*         IOTABPTR=IOTABPTR+12;         /* ADDR NEXT IO TABLES  Y02008* 02020000
@9FB     LA    @F,12                                              0069  02030000
         A     @F,IOTABPTR                                        0069  02040000
         ST    @F,IOTABPTR                                        0069  02050000
*         END;                                                          02060000
*                                                                       02070000
*         GO TO EXIT;                    /* ERROR IN OLT CALL   Y02008* 02080000
         AH    @7,@D1                                             0070  02090000
@DO9FE   CH    @7,@D2                                             0070  02100000
         BC    12,@DO9FF                                          0070  02110000
         BC    15,EXIT                                            0071  02120000
*                                                                       02130000
* WAITIO01:                                                             02140000
*         IF TPFLAG = '0'B               /* IF NO TP                  * 02150000
*            THEN                        /* AND NOT FROM DATA PROTECT * 02160000
WAITIO01 TM    A00011,B'00000001'                                 0072  02170000
*             GOTO WI0000X;              /* ALL SET UP                * 02180000
* WI0000X:                               /* BRANCH POINT              * 02190000
*         /* CHECK IF AN EXIO HAS BEEN ISSUED                         * 02200000
*         IF ACTVE= '0'B THEN           /* NO EXIO ISSUED       Y02008* 02210000
WI0000X  MVC   @TEMP4(4),32(@3)                                   0074  02220000
         L     @1,@TEMP4                                          0074  02230000
         MVC   @TEMP4(4),8(@1)                                    0074  02240000
         L     @1,@TEMP4           IOSUSECB                       0074  02250000
         MVC   @TEMP4(4),0(@1)                                    0074  02260000
         L     @1,@TEMP4           DEVECBX                        0074  02270000
         TM    12(@1),B'00010000'                                 0074  02280000
*           GOTO EXIT;                   /* RETURN TO CALLER          * 02290000
         BC    08,EXIT                                            0075  02300000
*         /* CHECK IF TIMEOUT IS TO BE BYPASSED                       * 02310000
*         IF TIMEOUT= '1'B THEN          /* IF FLAG IS ON             * 02320000
         TM    4(@5),B'10000000'                                  0076  02330000
*           GOTO WI0000;                 /* NO TIMER ISSUED           * 02340000
         BC    01,WI0000                                          0077  02350000
* /******************************************************************** 02360000
* /*  THE FOLLOWING SECTION OF CODE WILL ISSUE THE STIMER MACRO       * 02370000
* /*  INSTRUCTION IF AND ONLY IF THE SIO TO THE IOSB DEVICE HAS 'NOT' * 02380000
* /*  BEEN ISSUED BY THE OP SYSTEM. THIS WILL INSURE TIME OUT IN      * 02390000
* /* SYSTEM QUEUES DOES NOT OCCUR. THE MAXIMUM WAIT FOR SIO TO BE     * 02400000
* /*  ISSUED WILL BE THIRTY SECONDS IN INTERVALS OF ONE/TENTH SECONDS * 02410000
* /******************************************************************** 02420000
* WAITRTN:                                                              02430000
*         IOFLAGS='00'X;                 /* CLEAR I/O EVENT FLGSY02008* 02440000
WAITRTN  MVI   IOFLAGS,X'00'                                      0078  02450000
*         DO I=600 TO 1                  /* START LOOP TO CHECK FOR   * 02460000
*           BY  -1;                      /* SIO ISSUED                * 02470000
         LA    @7,600                                             0079  02480000
*            TEMPCC=IOSCC&MASKCODE;      /* IOSB SIO CCODE      Y02008* 02490000
@DO9FA   MVC   CONDCODE(1),CONDCODE+1                             0080  02500000
         NC    CONDCODE(1),20(@3)                                 0080  02510000
*            IF ZEROCODE=TEMPCC          /* IF SIO NOT ISSUED   Y02008* 02520000
*             THEN                       /* THEN SET FLG FOR WT Y02008* 02530000
         CLC   CONDCODE+2(1),CONDCODE                             0081  02540000
         BC    07,@9F6                                            0081  02550000
*             DO;                        /* IN IOS SIO QUE      Y02008* 02560000
*              WAITQUE=1;                /* SET LOCAL WAIT FLG  Y02008* 02570000
         MVI   IOFLAGS,1                                          0083  02580000
*              GO TO WTIME;              /* GO ISSUE STIMER     Y02008* 02590000
         BC    15,WTIME                                           0084  02600000
*             END;                                                      02610000
*                                                                       02620000
*           DO K=20 TO 1                 /* SIO CC IS NOT 0     Y02008* 02630000
*                  BY -1;                                               02640000
@9F6     LA    @F,20                                              0086  02650000
         STH   @F,K                                               0086  02660000
*            TEMPCC=IOSCC&MASKCODE;      /* WAIT FOR SIOF TO ENDY02008* 02670000
@DO9F5   MVC   CONDCODE(1),CONDCODE+1                             0087  02680000
         NC    CONDCODE(1),20(@3)                                 0087  02690000
*                                                                       02700000
*            IF CCODE0¬=TEMPCC           /* GET SIOCC=0,2ND INT Y02008* 02710000
*             THEN                                                      02720000
         CLC   CONDCODE+3(1),CONDCODE                             0088  02730000
*            GO TO CKCC1;                /* NO, CHECK FOR CC=1  Y02008* 02740000
         BC    07,CKCC1                                           0089  02750000
*            END;                                                       02760000
*                                                                       02770000
* CKCC1:                                                                02780000
*         IF TEMPCC¬=CCODE1              /* SIOCC NOT 1? CHECK  Y02008* 02790000
*          THEN                                                         02800000
         LH    @F,K                                               0090  02810000
         BCTR  @F,0                                               0090  02820000
@DO9F4   STH   @F,K                                               0090  02830000
         CH    @F,@D1                                             0090  02840000
         BC    10,@DO9F5                                          0090  02850000
CKCC1    CLC   CONDCODE(1),CONDCODE+4                             0091  02860000
*           GO TO CKCC2;                 /* CHECK FOR SIO CC=2  Y02008* 02870000
         BC    07,CKCC2                                           0092  02880000
*         IF OINCNT¬=0                   /* SIOCC=1, 1ST INTERPTY02008* 02890000
*          THEN                                                         02900000
         MVC   @TEMP4(4),32(@3)                                   0093  02910000
         L     @1,@TEMP4                                          0093  02920000
         MVC   @TEMP4(4),0(@1)                                    0093  02930000
         L     @1,@TEMP4           IOSUSECB                       0093  02940000
         CLI   1(@1),0                                            0093  02950000
*           GO TO GOODST;                /* YES, GO ON WITH WAITY02008* 02960000
         BC    07,GOODST                                          0094  02970000
*                                                                       02980000
*         IF WAITQUE=1 |                 /* IF EVENT QUED OR IF Y02008* 02990000
*            CUBUSY=1                    /* CU IS BUSY THEN     Y02008* 03000000
*          THEN                                                         03010000
         CLI   IOFLAGS,1                                          0095  03020000
         BC    08,@9F1                                            0095  03030000
         CLI   IOFLAGS,1                                          0095  03040000
         BC    07,@9F0                                            0095  03050000
*           GO TO WAITRTN;               /* MUST RE-ISSUE WAIT  Y02008* 03060000
         BC    08,WAITRTN                                         0096  03070000
*         DEVBUSY=1;                     /* OR ELSE DEV IS BUSY Y02008* 03080000
@9F0     MVI   IOFLAGS,1                                          0097  03090000
         MVI   IOFLAGS+1,1                                        0097  03100000
*         GO TO WTIME;                   /* RE-ISSUE STIMER     Y02008* 03110000
         BC    15,WTIME                                           0098  03120000
*                                                                       03130000
* CKCC2:                                                                03140000
*         IF TEMPCC¬=CCODE2              /* CHECK IOS CC=2. NO, Y02008* 03150000
*          THEN                                                         03160000
CKCC2    CLC   CONDCODE(1),CONDCODE+5                             0099  03170000
*           GO TO GOODST;                /* PROCESS EVENT       Y02008* 03180000
         BC    07,GOODST                                          0100  03190000
*                                                                       03200000
*         IF DEVBUSY=1 |                 /* IF DEV IS BUSY OR   Y02008* 03210000
*            CUBUSY=1                    /* IF CU IS BUSY       Y02008* 03220000
*          THEN                                                         03230000
         CLI   IOFLAGS,1                                          0101  03240000
         BC    08,@9EF                                            0101  03250000
         CLI   IOFLAGS,1                                          0101  03260000
         BC    07,@9EE                                            0101  03270000
*           GO TO WAITRTN;               /* GO TO WAIT AGAIN    Y02008* 03280000
         BC    08,WAITRTN                                         0102  03290000
*         CUBUSY=1;                      /* INDICATE CU IS BUSY Y02008* 03300000
@9EE     MVI   IOFLAGS,1                                          0103  03310000
         MVI   IOFLAGS+1,1                                        0103  03320000
*                                                                       03330000
* /*  ISSUE STIMER TO PAUSE FOR 1/10 TH SEC FOR I/O OPERATION TO START* 03340000
*                                                                       03350000
* WTIME:                                                                03360000
*         GEN(STIMER  WAIT,DINTVL=TENTHSEC);                            03370000
WTIME    STIMER  WAIT,DINTVL=TENTHSEC                                   03380000
         DS    0H                                                       03390000
*         END;                                                          03400000
*         GOTO PURGE;                    /* PURGE REQUEST             * 03410000
         BCT   @7,@DO9FA                                          0105  03420000
         BC    15,PURGE                                           0106  03430000
*                                                                       03440000
* /*     GET HERE IF IO OPERATION HAS STARTED SUCCESSFULLY      Y02008* 03450000
*                                                                       03460000
* GOODST:                                /* GOOD START ON SIC         * 03470000
*         IF ECBDONE = '1'B THEN        /* NAPA POSTED EVENT    Y02008* 03480000
GOODST   MVC   @TEMP4(4),32(@3)                                   0107  03490000
         L     @1,@TEMP4                                          0107  03500000
         MVC   @TEMP4(4),8(@1)                                    0107  03510000
         L     @1,@TEMP4           IOSUSECB                       0107  03520000
         TM    8(@1),B'01000000'                                  0107  03530000
*           GO TO GOODEXIT;             /* COMPLETE, RETURN     Y02008* 03540000
         BC    01,GOODEXIT                                        0108  03550000
* GOODST1:                                                              03560000
*          GENERATE;                                        /*@ZA17682* 03570000
GOODST1  EQU   *                                                  0109  03580000
         STM   PNT2,R3,SAVE2+28     SAVE REGS FOR TIMER EXIT   @ZA17682 03590000
         DS    0H                                                       03600000
*         GEN(STIMER REAL,TMNT30,DINTVL=TIME30);                        03610000
         STIMER REAL,TMNT30,DINTVL=TIME30                               03620000
         DS    0H                                                       03630000
* WI0000:                                /*                           * 03640000
*         R1=ADDR(ACTVDEVECB);           /* ADDRESS OF DEV ECB  Y02008* 03650000
WI0000   MVC   @TEMP4(4),32(@3)                                   0111  03660000
         L     @1,@TEMP4                                          0111  03670000
         MVC   @TEMP4(4),8(@1)                                    0111  03680000
         L     @1,@TEMP4           IOSUSECB                       0111  03690000
         LA    @1,8(0,@1)                                         0111  03700000
*         GEN(WAIT   ,ECB=(1));          /* WAIT FOR COMPLETION       * 03710000
         WAIT   ,ECB=(1)                                                03720000
         DS    0H                                                       03730000
*         GEN(TTIMER CANCEL);            /* CANCEL TIMER              * 03740000
         TTIMER CANCEL                                                  03750000
         DS    0H                                                       03760000
*          IF ECBPOSTCODE='00FF'X       /* IS ECB POSTED WITH A Y02008* 03770000
*           THEN                        /* 255 COMPLETION CODE? Y02008* 03780000
         MVC   @TEMP4(4),32(@3)                                   0114  03790000
         L     @1,@TEMP4                                          0114  03800000
         MVC   @TEMP4(4),8(@1)                                    0114  03810000
         L     @1,@TEMP4           IOSUSECB                       0114  03820000
         CLC   10(2,@1),@X4                                       0114  03830000
*            GO TO GOODST1;             /* YES, REISSUE WAIT    Y02008* 03840000
         BC    08,GOODST1                                         0115  03850000
*         IF ECBPOSTCODE ¬= '0100'X THEN /* IS ECB SELF-POSTED  Y02008* 03860000
         CLC   10(2,@1),@X5                                       0116  03870000
*           GOTO GOODEXIT;               /* NO- NORMAL POSTING  Y02008* 03880000
         BC    07,GOODEXIT                                        0117  03890000
*                                                                       03900000
* PURGE:                                 /* PURGE ROUTINE       Y02008* 03910000
*                                                                       03920000
*         /*          ISSUE SVC 59 CALL CODE = 50, PURGE RQST   Y02008* 03930000
*                                                                       03940000
*         R1='50'X;                     /* CALL CODE FOR SVC FN Y02008* 03950000
PURGE    LA    @1,X'50'                                           0118  03960000
*         GO TO PURGEXIT;               /* ISSUE SVC FOR PURGE  Y02008* 03970000
         BC    15,PURGEXIT                                        0119  03980000
*                                                                       03990000
* /******************************************************************** 04000000
* /*      STIMER EXIT ROUTINE  - 30  SECOND  INTERRUPT                * 04010000
* /******************************************************************** 04020000
* TMNT30:                                                               04030000
*         ENTRY;                         /* EXIT ROUTINE  ENTRY       * 04040000
TMNT30   STM   @E,@C,12(@D)                                       0120  04050000
         BALR  @B,0                                               0120  04060000
         LA    @F,TMNT30-IFDOLT06-24                              0120  04070000
         SR    @B,@F                                              0120  04080000
@9ED     EQU   *                                                  0120  04090000
*         GENERATE;                      /* GEN ENTRY CODE            * 04100000
         ST    R13,SAVE2+4              SAVE @ OF CALLER'S SAVEAREA     04110000
         LA    R15,SAVE2                GET @ OF OWN SAVEAREA           04120000
         ST    R15,8(R13)               SAVE IT IN CALLER'S SAVEAREA    04130000
         LR    R13,R15                  PUT IT IN REGISTER 13           04140000
         LM    PNT2,R3,SAVE2+28     RESTORE SAVED REGS                  04150000
         DS    0H                                                       04160000
* TMNT30C:                               /* BRANCH POINT              * 04170000
*         ECB5= 0;                       /* ZERO ECB                  * 04180000
TMNT30C  SR    @F,@F                                              0122  04190000
         ST    @F,ECB5                                            0122  04200000
*         MSGPTR = ADDR(IFDMSG06)+4;     /* GET MSG ADDRESS           * 04210000
         L     @1,@V1              ADDRESS OF IFDMSG06            0123  04220000
         LA    @4,4(0,@1)                                         0123  04230000
*         LENGTH= '06'X;                 /* PUT LENGTH IN PARMLIST    * 04240000
         MVI   0(@4),X'06'                                        0124  04250000
*         BUFAD = ADDR(INBUFR);          /* BUFFER ADDRESS            * 04260000
         LA    @F,INBUFR                                          0125  04270000
         ST    @F,@TEMP4                                          0125  04280000
         MVC   1(3,@4),@TEMP4+1                                   0125  04290000
*         MECBAD = ADDR(ECB5);           /* ECB ADDRESS               * 04300000
         LA    @F,ECB5                                            0126  04310000
         ST    @F,4(0,@4)                                         0126  04320000
*         MSGDEVAD = EDEVAD;             /* DEVICE ADDR TO MSG        * 04330000
         MVC   @TEMP4(4),32(@3)                                   0127  04340000
         L     @C,@TEMP4                                          0127  04350000
         MVC   @TEMP4(4),8(@C)                                    0127  04360000
         L     @C,@TEMP4           IOSUSECB                       0127  04370000
         MVC   @TEMP4(4),0(@C)                                    0127  04380000
         L     @C,@TEMP4           DEVECBX                        0127  04390000
         MVC   47(8,@4),0(@C)                                     0127  04400000
*         GEN(PWTOR  REG=(4));           /* OUTPUT MSG                * 04410000
         PWTOR  REG=(4)                                                 04420000
         DS    0H                                                       04430000
*         /* CHECK FOR WAIT RESPONSE                                  * 04440000
*         IF RESPONSE= 'W'  THEN         /* IS RESPONSE'WAIT'         * 04450000
         CLI   RESPONSE,C'W'                                      0129  04460000
         BC    07,@9EC                                            0129  04470000
*          DO;                          /* SET UP WAIT COMPCOD  Y02008* 04480000
*           R0=255;                     /* FOR THIS RESPONSE    Y02008* 04490000
         LA    @0,255                                             0131  04500000
*           GO TO POSTECB;              /* AND POST ECB WITH IT Y02008* 04510000
         BC    15,POSTECB                                         0132  04520000
*          END;                                                         04530000
*         /* CHECK FOR CANCEL RESPONSE                                * 04540000
*         IF RESPONSE ¬= 'C' THEN        /* IS RESPONSE CANCEL        * 04550000
@9EC     CLI   RESPONSE,C'C'                                      0134  04560000
*           GOTO TMNT30C;                /* NO- REPEAT THE MESSAGE    * 04570000
         BC    07,TMNT30C                                         0135  04580000
*         /* CHECK IF ECB HAS BEEN POSTED                             * 04590000
*         IF ECBDONE = '1'B THEN         /* IS ECB  POSTED      Y02008* 04600000
         MVC   @TEMP4(4),32(@3)                                   0136  04610000
         L     @1,@TEMP4                                          0136  04620000
         MVC   @TEMP4(4),8(@1)                                    0136  04630000
         L     @1,@TEMP4           IOSUSECB                       0136  04640000
         TM    8(@1),B'01000000'                                  0136  04650000
*           GOTO EXIT;                   /* YES RETURN                * 04660000
         BC    01,EXIT                                            0137  04670000
*         R0 = 256;                      /* 100 POST CODE             * 04680000
         LA    @0,256                                             0138  04690000
* POSTECB:                                                              04700000
*         R1= ADDR(ACTVDEVECB);          /* ADDR OF DEV ECB     Y02008* 04710000
POSTECB  MVC   @TEMP4(4),32(@3)                                   0139  04720000
         L     @1,@TEMP4                                          0139  04730000
         MVC   @TEMP4(4),8(@1)                                    0139  04740000
         L     @1,@TEMP4           IOSUSECB                       0139  04750000
         LA    @1,8(0,@1)                                         0139  04760000
*         GEN(POST (1),(0));             /* POST ECB                  * 04770000
         POST (1),(0)                                                   04780000
         DS    0H                                                       04790000
*         GO TO EXIT;                   /* RETURN TO MAIN CODE  Y02008* 04800000
         BC    15,EXIT                                            0141  04810000
*                                                                       04820000
* GOODEXIT:                                                             04830000
*         R1='8050'X;                   /* FREE UP I/0 BLOCKS   Y02008* 04840000
GOODEXIT L     @1,@X10                                            0142  04850000
*                                                                       04860000
* PURGEXIT:                                                             04870000
*         RESTRICT (R0,R1);                                             04880000
*         MODID='F0F6'X;                /* ID OF CALLING MOD    Y02008* 04890000
PURGEXIT MVC   A00001+2(2),@X11                                   0144  04900000
*         SVCIOSB=R3;                   /* PTR TO ACTIVE IOSB   Y02008* 04910000
         ST    @3,A00001+4                                        0145  04920000
*         SVC16=0;                      /* SVC 16 PURGE REQUEST Y02008* 04930000
         MVC   A00001+8(4),@D3                                    0146  04940000
*         R0=ADDR(ROPT);                /* ADDRESS SVC PARMLST  Y02008* 04950000
         LA    @0,ROPT                                            0147  04960000
*         GEN(  SVC 59);                /* ISSUE SVC 59 CALL    Y02008* 04970000
           SVC 59                                                       04980000
         DS    0H                                                       04990000
*         RELEASE (R0,R1);                                              05000000
*                                                                       05010000
*         WAITFG= '0'B;                  /* RESET FLAG                * 05020000
         NI    A00011,B'11101111'                                 0150  05030000
*         ACTVE='0'B;                   /* ZERO ACTV EXIO BIT   Y02008* 05040000
         MVC   @TEMP4(4),32(@3)                                   0151  05050000
         L     @1,@TEMP4                                          0151  05060000
         MVC   @TEMP4(4),8(@1)                                    0151  05070000
         L     @1,@TEMP4           IOSUSECB                       0151  05080000
         MVC   @TEMP4(4),0(@1)                                    0151  05090000
         L     @1,@TEMP4           DEVECBX                        0151  05100000
         NI    12(@1),B'11101111'                                 0151  05110000
*                                                                       05120000
* EXIT:                                  /* EXIT BRANCH               * 05130000
*         GEN(L R13,4(R13));             /* RESTORE REGISTER 13       * 05140000
EXIT     L R13,4(R13)                                                   05150000
         DS    0H                                                       05160000
*         END;                                                          05170000
@EL01    LM    @E,@C,12(@D)                                       0153  05180000
         BCR   15,@E                                              0153  05190000
@DATA1   EQU   *                                                        05200000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           05210000
@1       EQU   01                                                       05220000
@2       EQU   02                                                       05230000
@3       EQU   03                                                       05240000
@4       EQU   04                                                       05250000
@5       EQU   05                                                       05260000
@6       EQU   06                                                       05270000
@7       EQU   07                                                       05280000
@8       EQU   08                                                       05290000
@9       EQU   09                                                       05300000
@A       EQU   10                                                       05310000
@B       EQU   11                                                       05320000
@C       EQU   12                                                       05330000
@D       EQU   13                                                       05340000
@E       EQU   14                                                       05350000
@F       EQU   15                                                       05360000
@D3      DC    F'0'                                                     05370000
@D1      DC    H'1'                                                     05380000
@D2      DC    H'3'                                                     05390000
@V1      DC    V(IFDMSG06)                                              05400000
         DS    0F                                                       05410000
@X10     DC    X'00008050'                                              05420000
@X4      DC    X'00FF'                                                  05430000
@X5      DC    X'0100'                                                  05440000
@X11     DC    X'F0F6'                                                  05450000
         DS    0D                                                       05460000
@DATA    EQU   *                                                        05470000
R0       EQU   00000000            FULLWORD POINTER REGISTER            05480000
R1       EQU   00000001            FULLWORD POINTER REGISTER            05490000
PL       EQU   00000001            FULLWORD POINTER REGISTER            05500000
PNT2     EQU   00000002            FULLWORD POINTER REGISTER            05510000
R3       EQU   00000003            FULLWORD POINTER REGISTER            05520000
MSGPTR   EQU   00000004            FULLWORD POINTER REGISTER            05530000
R5       EQU   00000005            FULLWORD POINTER REGISTER            05540000
R6       EQU   00000006            FULLWORD POINTER REGISTER            05550000
I        EQU   00000007            FULLWORD INTEGER REGISTER            05560000
R13      EQU   00000013            FULLWORD POINTER REGISTER            05570000
R14      EQU   00000014            FULLWORD POINTER REGISTER            05580000
R15      EQU   00000015            FULLWORD POINTER REGISTER            05590000
TTECB    EQU   00000000            47 BYTE(S) ON WORD                   05600000
TEVCB    EQU   TTECB+00000000      4 BYTE(S)                            05610000
TCCPS    EQU   TTECB+00000004      1 BYTE(S)                            05620000
TIMEOUT  EQU   TTECB+00000004      1 BIT(S)                             05630000
A00000   EQU   TTECB+00000004      7 BIT(S)                             05640000
TCCW1    EQU   TTECB+00000005      7 BYTE(S)                            05650000
TSNS1    EQU   TTECB+00000012      35 BYTE(S)                           05660000
IOSBCB   EQU   00000000            36 BYTE(S)                           05670000
A00003   EQU   IOSBCB+00000000     20 BYTE(S)                           05680000
IOSCC    EQU   IOSBCB+00000020     1 BYTE(S)                            05690000
IOSCSW   EQU   IOSBCB+00000021     7 BYTE(S)                            05700000
A00004   EQU   IOSBCB+00000028     4 BYTE(S)                            05710000
IOSUSE   EQU   IOSBCB+00000032     4  BYTE  POINTER                     05720000
IOSUSECB EQU   00000000            20 BYTE(S)                           05730000
OECBPTR  EQU   IOSUSECB+00000000   4  BYTE  POINTER                     05740000
TECBPTR  EQU   IOSUSECB+00000004   4  BYTE  POINTER                     05750000
IODVTBPT EQU   IOSUSECB+00000008   4  BYTE  POINTER                     05760000
TCCWPTR  EQU   IOSUSECB+00000012   4  BYTE  POINTER                     05770000
USEFLGA  EQU   IOSUSECB+00000016   1 BYTE(S)                            05780000
INUSE    EQU   IOSUSECB+00000016   1 BIT(S)                             05790000
ATTN     EQU   IOSUSECB+00000016   1 BIT(S)                             05800000
VIRTCCW  EQU   IOSUSECB+00000016   1 BIT(S)                             05810000
OLDTECB  EQU   IOSUSECB+00000016   1 BIT(S)                             05820000
INTRNLCB EQU   IOSUSECB+00000016   1 BIT(S)                             05830000
PURGED   EQU   IOSUSECB+00000016   1 BIT(S)                             05840000
OECB     EQU   00000000            4 BYTE(S)                            05850000
OSNSCNT  EQU   OECB+00000000       1 BYTE(S)                            05860000
OINCNT   EQU   OECB+00000001       1 BYTE(S)                            05870000
A00005   EQU   OECB+00000002       2 BYTE(S)                            05880000
DEVECBX  EQU   00000000            12 BYTE(S)                           05890000
ACTVDEV  EQU   DEVECBX+00000000    4  BYTE  POINTER                     05900000
ACTVIOSB EQU   DEVECBX+00000004    4  BYTE  POINTER                     05910000
ACTVDEVE EQU   DEVECBX+00000008    4 BYTE(S)                            05920000
COMPCODE EQU   DEVECBX+00000008    1 BYTE(S)                            05930000
ECBWAIT  EQU   DEVECBX+00000008    1 BIT(S)                             05940000
ECBDONE  EQU   DEVECBX+00000008    1 BIT(S)                             05950000
A00006   EQU   DEVECBX+00000008    6 BIT(S)                             05960000
A00007   EQU   DEVECBX+00000009    1 BYTE(S)                            05970000
ECBPOSTC EQU   DEVECBX+00000010    2 BYTE(S)                            05980000
IOTABPTR EQU   @DATA+00000000      FULLWORD POINTER                     05990000
IOTABLEX EQU   00000000            12 BYTE(S)                           06000000
IODEVX   EQU   IOTABLEX+00000000   4  BYTE  POINTER                     06010000
IOSBPTRX EQU   IOTABLEX+00000004   4  BYTE  POINTER                     06020000
IOECBX   EQU   IOTABLEX+00000008   4  BYTE  POINTER                     06030000
         ORG   @DATA+00000008                                           06040000
TIME30   EQU   *                   8 BYTE(S) ON DWORD                   06050000
         DC    X'F0F0F0F0F3F0F0C0'                                      06060000
ECB5     EQU   *                   FULLWORD INTEGER                     06070000
         DC    FL4'0'                                                   06080000
A00018   EQU   00000000            13 BYTE(S) ON WORD                   06090000
EDEVAD   EQU   A00018+00000000     8 BYTE(S)                            06100000
A00019   EQU   A00018+00000008     4 BYTE(S)                            06110000
A00020   EQU   A00018+00000012     1 BYTE(S)                            06120000
A00021   EQU   A00018+00000012     3 BIT(S)                             06130000
ACTVE    EQU   A00018+00000012     1 BIT(S)                             06140000
A00022   EQU   A00018+00000012     1 BIT(S)                             06150000
MSGPARM  EQU   00000000            8 BYTE(S) ON WORD                    06160000
LENGTH   EQU   MSGPARM+00000000    1 BYTE(S)                            06170000
BUFAD    EQU   MSGPARM+00000001    3  BYTE  POINTER ON WORD+1           06180000
MECBAD   EQU   MSGPARM+00000004    FULLWORD POINTER                     06190000
MSGDEVAD EQU   00000047            8 BYTE(S)                            06200000
         ORG   @DATA+00000021                                           06210000
SVDEVPTR EQU   *                   3  BYTE  POINTER ON WORD+1           06220000
         DC    AL3(0)                                                   06230000
TENTHSEC EQU   *                   8 BYTE(S) ON DWORD                   06240000
         DC    X'F0F0F0F0F0F0F1C0'                                      06250000
SAVE1    EQU   @DATA+00000032      18*FULLWORD INTEGER                  06260000
SAVE2    EQU   @DATA+00000104      18*FULLWORD INTEGER                  06270000
IOFLAGS  EQU   @DATA+00000176      1 BYTE(S)                            06280000
WAITQUE  EQU   IOFLAGS+00000000    1 BIT(S)                             06290000
DEVBUSY  EQU   IOFLAGS+00000000    1 BIT(S)                             06300000
CUBUSY   EQU   IOFLAGS+00000000    1 BIT(S)                             06310000
CONDCODE EQU   @DATA+00000177      6 BYTE(S)                            06320000
         ORG   CONDCODE+00000000                                        06330000
TEMPCC   EQU   *                   1 BYTE(S)                            06340000
         DC    X'00'                                                    06350000
MASKCODE EQU   *                   1 BYTE(S)                            06360000
         DC    X'70'                                                    06370000
ZEROCODE EQU   *                   1 BYTE(S)                            06380000
         DC    X'00'                                                    06390000
CCODE0   EQU   *                   1 BYTE(S)                            06400000
         DC    X'40'                                                    06410000
CCODE1   EQU   *                   1 BYTE(S)                            06420000
         DC    X'50'                                                    06430000
CCODE2   EQU   *                   1 BYTE(S)                            06440000
         DC    X'60'                                                    06450000
K        EQU   @DATA+00000184      HALFWORD INTEGER                     06460000
         ENTRY TMNT30                                                   06470000
         ORG   @DATA                                                    06480000
         DS    00000186C                                                06490000
@TEMPS   DS    0F                                                       06500000
@TEMP4   DC    F'0'                                                     06510000
COMAREA  IFDCOM                                                         06520000
A00001   EQU   ROPT-00000004       12 BYTE(S) ON WORD                   06530000
A00002   EQU   A00001+00000000     2 BYTE(S)                            06540000
MODID    EQU   A00001+00000002     2 BYTE(S)                            06550000
SVCIOSB  EQU   A00001+00000004     4 BYTE(S)                            06560000
SVC16    EQU   A00001+00000008     4 BYTE(S)                            06570000
RESPONSE EQU   INBUFR+00000000     1 BYTE(S)                            06580000
A00008   EQU   CESWT+00000000      1 BYTE(S)                            06590000
A00009   EQU   A00008+00000000     1 BIT(S)                             06600000
DPENTRY  EQU   A00008+00000000     1 BIT(S)                             06610000
A00010   EQU   A00008+00000000     6 BIT(S)                             06620000
A00011   EQU   CESWT1+00000000     1 BYTE(S)                            06630000
A00012   EQU   A00011+00000000     3 BIT(S)                             06640000
WAITFG   EQU   A00011+00000000     1 BIT(S)                             06650000
A00013   EQU   A00011+00000000     3 BIT(S)                             06660000
TPFLAG   EQU   A00011+00000000     1 BIT(S)                             06670000
A00014   EQU   CESWT7+00000000     1 BYTE(S)                            06680000
A00015   EQU   A00014+00000000     6 BIT(S)                             06690000
TCBRV    EQU   A00014+00000000     1 BIT(S)                             06700000
A00016   EQU   CESWT8+00000000     1 BYTE(S)                            06710000
A00017   EQU   A00016+00000000     4 BIT(S)                             06720000
OLTINVV  EQU   A00016+00000000     1 BIT(S)                             06730000
@DATEND  EQU   *                                                        06740000
@9F1     EQU   WAITRTN                                                  06750000
@9EF     EQU   WAITRTN                                                  06760000
         END    ,(C'PL/S',1400,77182)                                   06770000
./  ADD  SSI=33200921,NAME=IFDOLT07
         TITLE 'IFDOLT07 DATA PROTECT PACK'                             00010000
         TITLE 'IFDOLT07 DATA PROTECT PACK'                             00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT07 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT07 16 NOV 73'                             0002  00070000
         STM   @E,@C,12(@D)                                       0002  00080000
         BALR  @B,0                                               0002  00090000
@PSTART  DS    0H                                                 0002  00100000
         USING @PSTART+00000,@B                                   0002  00110000
         ST    @D,@SAV001+4                                       0002  00120000
         LA    @F,@SAV001                                         0002  00130000
         ST    @F,8(0,@D)                                         0002  00140000
         LR    @D,@F                                              0002  00150000
*  GEN(USING CHASCT,2);                  /* COMMON AREA BASE REGISTER * 00160000
         USING CHASCT,2                                                 00170000
         DS    0H                                                       00180000
*         GEN DATA;                                                     00190000
* GENERATE DATA;                                                        00200000
*  /******************************************************************* 00210000
*  /*                                                                 * 00220000
*  /*                     DECLARED  REGISTERS                         * 00230000
*  /*                                                                 * 00240000
*  /******************************************************************* 00250000
*  DCL R0  REG(0)  PTR;                                                 00260000
*  DCL R1  REG(1)  PTR;                                                 00270000
*  DCL R2  REG(2)  PTR;                                                 00280000
*  DCL R3  REG(3)  PTR;                                                 00290000
*  DCL R4  REG(4)  PTR;                                                 00300000
*  DCL R5  REG(5)  PTR;                                                 00310000
*  DCL R6  REG(6)  PTR;                                                 00320000
*  DCL R7  REG(7)  PTR;                                                 00330000
*  DCL R8  REG(8)  PTR;                                                 00340000
*  DCL R9  REG(9)  PTR;                                                 00350000
*  DCL R10 REG(10) PTR;                                                 00360000
*  DCL R11 REG(11) PTR;                                                 00370000
*  DCL R12 REG(12) PTR;                                                 00380000
*  DCL R13 REG(13) PTR;                                                 00390000
*  DCL R14 REG(14) PTR;                                                 00400000
*  DCL R15 REG(15) PTR;                                                 00410000
*  RESTRICT(2,4,5,6,7,8);                                               00420000
*  DCL CESWT3 CHAR(1) GENERATED;         /* OLTEP SWITCHES       M4506* 00430000
*  DCL 1 * CHAR(1) BASED(ADDR(CESWT3)),  /* OLTEP SWITCHES       M4506* 00440000
*         2 * BIT(3),                    /* NA                   M4506* 00450000
*         2 GRBCTL BIT(1),               /* GRAB IN CONTROL      M4506* 00460000
*         2 SUSDEL BIT(1),               /* SUSPENDED DELETION   M4506* 00470000
*           3 * BIT(1);                  /* NA                   M4506* 00480000
*  DCL OLTTAB GENERATED;                 /* LINK TABLE           M4506* 00490000
*  DCL 1 * BDY(WORD) BASED(ADDR(OLTTAB)), /* LINK TABLE          M4506* 00500000
*         2 OLTTAB1 PTR,                 /* OLD EXIO             M4506* 00510000
*         2 OLTTAB2 PTR,                 /* OLD WAITIO           M4506* 00520000
*           3 * PTR;                     /* NA                   M4506* 00530000
*                                                                       00540000
*                                                                       00550000
*  /******************************************************************* 00560000
*  /*                                                                 * 00570000
*  /*                       SECTION CONTROL TABLE                     * 00580000
*  /*                                                                 * 00590000
*  /******************************************************************* 00600000
*                                                                       00610000
*  DCL CHASCT GENERATED;            /* SECTION CONTROL TABLE          * 00620000
*  DCL 1 * CHAR(1) BASED(ADDR(CHASCT)+10),  /* SCT STRUCTURE          * 00630000
*        3 * BIT(1),                /* NA                             * 00640000
*        3 FPM BIT(1);              /* FILE PROTECT MODE BIT          * 00650000
*  DCL 1 * CHAR(1) BASED(ADDR(CHASCT)+11),    /* SCT CDS FLAGS   M1006* 00660000
*        3 CDSFPM BIT(1),                /* FILE PROTECT MODE    M1006* 00670000
*        3 * BIT(1),                     /* NA                   M1006* 00680000
*        3 CDSCEVOL BIT(1),              /* CE VOLUME            M1006* 00690000
*        3 * BIT(5);                     /* NA                   M1006* 00700000
*                                                                       00710000
* /******************************************************************** 00720000
* /*                                                                  * 00730000
* /*                 COMMUNICATION SWITCHES STRUCTURE                 * 00740000
* /*                                                                  * 00750000
* /******************************************************************** 00760000
*                                                                       00770000
*                                                                       00780000
*  DCL CESWT CHAR(5) GENERATED;     /* COMMUNICATION SWITCHES         * 00790000
*  DCL 1 * BASED(ADDR(CESWT)),      /* CE SWITCHES                    * 00800000
*        3 * BIT(8),                /* CE SWITCH                      * 00810000
*          5 * BIT(1),              /* NA                             * 00820000
*          5 PROTECT BIT(1),        /* DATA PROT ON SEC DEV           * 00830000
*          5 * BIT(6),              /* NA                             * 00840000
*        3 * BIT(8),                /* CE SWITCH 1                    * 00850000
*          5 * BIT(4),              /* NA                             * 00860000
*          5 FILMSK BIT(1),         /* FILE MASK BIT                  * 00870000
*          5 * BIT(1),              /* NA                             * 00880000
*          5 ONLINEOK BIT(1),       /* ONLINE OK BIT                  * 00890000
*          5 * BIT(1),              /* NA                             * 00900000
*        3 * BIT(8),                /* CE SWITCH 2                    * 00910000
*          5 NDCFO BIT(1),          /* PREVENTS DYNAMIC COMM INTERVAL * 00920000
*          5 DPONDEV BIT(1),        /* DATA DONE ON THIS DEVICE       * 00930000
*          5 * BIT(1),              /* NA                             * 00940000
*          5 CHANTEST BIT(1),       /* INDICATES CHAN TEST ACTIVE     * 00950000
*          5 * BIT(1),              /* NA                             * 00960000
*          5 * BIT(1),              /* NA                             * 00970000
*          5 TAPEHDR BIT(1),        /* TAPE HEADER BIT                * 00980000
*          5 AMERLDV BIT(1),             /* MERLIN DEVICE        M4505* 00990000
*        3 * BIT(8),                /* CE SWITCH 3                    * 01000000
*          5 * BIT(1),              /* NA                             * 01010000
*          5 NURUN BIT(1),          /* BRING NEW TESTS                * 01020000
*          5 BYPDEV BIT(1),         /* BYPASS TESTS ON THIS DEVICE    * 01030000
*          5 * BIT(1),              /* NA                             * 01040000
*          5 * BIT(1),              /* NA                             * 01050000
*          5 * BIT(1),              /* NA                             * 01060000
*          5 * BIT(1),              /* NA                             * 01070000
*          5 STDLAB BIT(1);         /* STANDARD LABEL BIT             * 01080000
*                                                                       01090000
*  DCL I FIXED;                          /* WORK WORD           S20203* 01100000
*         DCL LABEL2 GENERATED;    /*                           S20203* 01110000
*                                                                       01120000
* /******************************************************************** 01130000
* /*                                                                  * 01140000
* /*                      DEVICE TABLE STRUCTURE                      * 01150000
* /*                                                                  * 01160000
* /******************************************************************** 01170000
*                                                                       01180000
*         DCL  1 * BASED(R7),          /*                       S21050* 01190000
*         3 DEVADEB CHAR(8),             /* DEV ADDR IN EBCDIC  S21050* 01200000
*                3 UCBAD POINTER(31),  /* UCB ADDR (2BYTES)     S21050* 01210000
*                3 DEVFLG1 CHAR(1),    /* FLAG BYTE #1          S21050* 01220000
*                 5 STATUS BIT(1),     /* ON LINE VS. OFF-LINE  S21050* 01230000
*                 5 PRIMARY BIT(1),    /* PRIMARY BIT           S21050* 01240000
*                 5 DPDONE  BIT(1),    /* D.P. COMPLETE         S21050* 01250000
*                 5 *       BIT(3),    /* FILL                  S21050* 01260000
*                 5 FILEPROT BIT(1),   /* F.P. MODE OPERATION   S21050* 01270000
*                 5 *       BIT(1),    /* FILL                  S21050* 01280000
*                3 DEVFLG2 CHAR(1),    /* FLAG BYTE # 2         S21050* 01290000
*           5 * BIT(2),                  /* N/A                 S21050* 01300000
*           5 CEVOL BIT(1),              /* CE VOL ON DEVICE    S21050* 01310000
*                 5   STDLABL BIT(1),  /* STANDARD TAPE LABEL   S21050* 01320000
*                 5 * BIT(4),          /* FILL                  S21050* 01330000
*                3 DEVFLG3 CHAR(1),    /* FLAG BYTE # 3         S21050* 01340000
*                3 DEVFLG4 CHAR(1),    /* FLAG BYTE # 3         S21050* 01350000
*                3 TAPELABL CHAR(16),  /* TAPE LABEL SAVE AREA  S21050* 01360000
*                 5 VOL CHAR(10),      /* VOL NAME              S21050* 01370000
*                 5 HDR CHAR (4),      /* HDR NAME              S21050* 01380000
*                 5 MODESV CHAR(1),    /* MODE SAVE AREA        S21050* 01390000
*                 5 * CHAR(1),         /* FILL                  S21050* 01400000
*                3 ADRHEX CHAR (4),    /* 4 BYTE HEX ADDRESS    S21050* 01410000
*                 5 * CHAR(2),         /* FILL                  S21050* 01420000
*               5 HEXAD CHAR(2),         /* 2 BYTE HEX ADDRESS  S21052* 01430000
*            3 CDSINFOR CHAR(16),        /* CDS INFORMATION     X02906* 01440000
*               5 FEATURES CHAR(1),      /* FEATURES            X02906* 01450000
*               5 MODEL CHAR(1),         /* MODEL #             X02906* 01460000
*               5 CLASS CHAR(1),         /* CLASS               X02906* 01470000
*               5 TYPE CHAR(1),          /* TYPE                X02906* 01480000
*               5 * CHAR(1),             /* N/A                 X02906* 01490000
*               5 CDSFLAGS CHAR(1),      /* CDS FLAGS           X02906* 01500000
*                 7 DVCDSFPM BIT(1),     /* FILE PROTECT MODE   X02906* 01510000
*                 7 * BIT(1),            /*                     X02906* 01520000
*                 7 DVCDSCEV BIT (1),    /* CE VOLUME MOUNTED   X02906* 01530000
*                 7 * BIT(5);            /*                     X02906* 01540000
*                                                                       01550000
*                                                                       01560000
*                                                                       01570000
*  /******************************************************************* 01580000
*  /*                                                                 * 01590000
*  /*           EXIO PARAMETER LIST                                   * 01600000
*  /*                                                                 * 01610000
*  /******************************************************************* 01620000
*                                                                       01630000
*                                       /* IO EFFECTOR CNTL BLK Y02906* 01640000
*                                       /* IN COMMON AREA       Y02906* 01650000
*  DCL EFCTRCB CHAR(20) GEND;           /* IO EFFECTOR CNTL BLK       * 01660000
*  DCL CCWPTR PTR(31) GEND;             /* CCW LIST POINTER     Y02906* 01670000
*  DCL DVTPTR PTR(31) GEND;             /* DEVICE TABEL POINTER Y02906* 01680000
*  DCL FLGA   BIT(8)  GEND;             /* FLAG BYTE 1          Y02906* 01690000
*                                                                       01700000
*  DCL FLGB   BIT(8)  GEND;             /* FLAG BYTE 2          Y02906* 01710000
*                                                                       01720000
* DCL 1 FLG1A BIT(8) BASED(ADDR(FLGA)),                                 01730000
*       3 BYPASS BIT(1);                 /* BYPASS PREFIX       Y02906* 01740000
*                                                                       01750000
*  DCL 1 FLG2 BIT(8) BASED(ADDR(FLGB)),                       /*Y02906* 01760000
*        3 INTCALL BIT(1),              /* INTERNAL CALL FOR IO Y02906* 01770000
*        3 MODEREQ BIT(1);              /* IF ON MODE SET REQ   Y02906* 01780000
*  DCL FILEMSK CHAR(1) GEND;            /* FILE MSK FOR IOEFFEC Y02906* 01790000
* DCL SNSCNT CHAR(1) GEND;                                              01800000
* DCL TECBPTRX PTR(31) GEND;                                            01810000
*  DCL IORTNADR GEND;                   /* ADDR OF IO EFFECTOR  Y02906* 01820000
*         DCL 1 WAITLST CHAR(16) BDY(WORD), /* WAITIO LIST      Y02906* 01830000
*              3 XMGR CHAR(1) INIT('00'X), /* TRANS MGR STUFF   Y02906* 01840000
*              3 LVL CHAR(1) INIT('02'X),/* WAITIO LVL          Y02906* 01850000
*              3 MODID CHAR(2) INIT('36'), /* IFDOLT36 ID       Y02906* 01860000
*              3 TECBPTR PTR(31) INIT(ADDR(TECB)),/* TECB ADDR  Y02906* 01870000
*              3 CDSPTR PTR(31) INIT(0),  /*CDS = 0             Y02906* 01880000
*              3 FLG BIT(8) INIT('80'X), /* SET WAIT = YES      Y02906* 01890000
*               5 WAITYES BIT(1),        /* FLAG TO 1           Y02906* 01900000
*              3 TIME CHAR(2) INIT('001E'X); /* TIME IN SECONDS Y02906* 01910000
*                                                                       01920000
*                                                                       01930000
*  /******************************************************************* 01940000
*  /*                                                                 * 01950000
*  /*                  TEST EVENT CONTROL BLOCK FIELD                 * 01960000
*  /*                                                                 * 01970000
*  /******************************************************************* 01980000
*                                                                       01990000
*         DCL 1 TECB,                     /* EVENT BLOCK FOR IO Y02906* 02000000
*               2 FLDCNT CHAR(1) INIT('01'X),  /* NUMBER FDLS   Y02906* 02010000
*               2 FLDSIZE CHAR(1) INIT('0C'X), /* SIZE EACH FLD Y02906* 02020000
*               2 SOMETNG CHAR(1) INIT('00'X), /* N/A           Y02906* 02030000
*               2 SNSSIZE CHAR(1) INIT('18'X), /* SENSE EXPTD   Y02906* 02040000
*               2 FLG1 CHAR(1) INIT('00'X),    /* FLAGS         Y02906* 02050000
*               2 SNSCNTTB CHAR(1) INIT('01'X), /* XPECTED COUNTY02906* 02060000
*               2 CLRTECB  CHAR(39),     /* LABEL TO CLEAR TECB YM3336* 02070000
*                 3 CNTSNS CHAR(1) INIT('00'X), /* NUMB OCCURED Y02906* 02080000
*                 3 CNTINT CHAR(1) INIT('00'X), /*NUMB INTERRUPTY02906* 02090000
*                 3 CCP CHAR(1),        /* SIO COND CODE        Y02906* 02100000
*                 3 * CHAR(3),          /* N/A                  YM3336* 02110000
*                 3 CSW1 CHAR(8),       /* CSW NO. ONE          Y02906* 02120000
*                   5 * CHAR(4),        /* N/A                  Y02906* 02130000
*                   5 STATUSX CHAR(2),  /* TWO STATUS BYTES     Y02906* 02140000
*                     7 EXIOK CHAR(1),  /* STATUS BYTE 1        Y02906* 02150000
*                       9 * BIT(6),     /* N/A                  Y02906* 02160000
*                       9 UNITCK BIT(1), /* UNIT CHECK          Y02906* 02170000
*                       9 UNITEXCP BIT(1), /* UNIT EXCEPTION BITY02906* 02180000
*                     7 BYTE2 CHAR(1),  /* STATUS BYTE 2        Y02906* 02190000
*                       9 * BIT(1),     /* N/A                  Y02906* 02200000
*                       9 INLENGTH  BIT(1), /* INCORR LNG IND   Y02906* 02210000
*                       9 * BIT(6),     /* N/A                  Y02906* 02220000
*                   5 * CHAR(2),        /* N/A                  Y02906* 02230000
*                 3 SENSE  CHAR(24),    /* SENSE COUNT          Y02906* 02240000
*                   5 * CHAR(3),        /* N/A                  Y02906* 02250000
*                   5 SNS1 CHAR(7),     /* SENSE BYTES          Y02906* 02260000
*                     7 SNSFLD BIT(8),  /* BYTE0  SENSE         Y02906* 02270000
*                       9 * BIT(1),     /* N/A                  Y02906* 02280000
*                       9 SNS2 BIT(1),  /* BIT 1 SNS BYTE 0     Y02906* 02290000
*                     7 * CHAR(2),      /* SNS BYTES 1 & 2      Y02906* 02300000
*                     7 * BIT(8),       /* SNS BYTE 3           Y02906* 02310000
*                       9 * BIT(5),     /* FILL                 Y02906* 02320000
*                       9 PEIND BIT(1), /* BIT 5 BYTE3 OF SNS   Y02906* 02330000
*                     7 * CHAR(2),      /* SENCE BYTES 4 AND 5  Y02906* 02340000
*                     7 * CHAR(1),      /* SENCE BYTE 6         Y02906* 02350000
*                       9 * BIT(4),     /* NOT REFERENCED       Y02906* 02360000
*                       9 BIT4 BIT(1);  /* BIT FOUR FOR BIRTCH  Y03128* 02370000
*  /******************************************************************* 02380000
*  /*                                                                 * 02390000
*  /*                         R0 DATA LENGTH FIELD                    * 02400000
*  /*                                                                 * 02410000
*  /******************************************************************* 02420000
*                                                                       02430000
*                                  /*                           S20203* 02440000
*         DCL 1 BUF CHAR(20),            /* LABEL BUFFER        S20203* 02450000
*               3 STLAB CHAR(4),         /* STAND LABEL         S20203* 02460000
*               3 CEVOL1 CHAR(6),        /* CE VOLUME           S20203* 02470000
*               3 SECBYT CHAR(1),        /* SECURITY BYTE       S20203* 02480000
*               3 * CHAR(9);             /* NA                  S20203* 02490000
*         DCL 1 BUF1 CHAR(5),            /* HA BUFFER           S20203* 02500000
*               3 * BIT(8),              /* NA                  S20203* 02510000
*                 5 * BIT(5),            /* NA                  S20203* 02520000
*                 5 MERLIN BIT(1),       /* 3330 CE BIT         S20203* 02530000
*                 5 * BIT(2),            /* NA                  S20203* 02540000
*               3 * CHAR(4);             /* NA                  S20203* 02550000
*         DCL 1 BUF2 CHAR(20),           /* F0FE BUFFER         S20203* 02560000
*               3 * CHAR(14),            /* NA                  S20203* 02570000
*               3 CEF0FE CHAR(5),        /* CE F0FE BIT         S20203* 02580000
*               3 * CHAR(1);             /* NA                  S20203* 02590000
*                                                                       02600000
*                                                                       02610000
*                                                                       02620000
*                                                                       02630000
*  DCL IFDMSG07 EXT ENTRY;          /* MESSAGE MODULE                 * 02640000
*  DCL MSGPTR PTR INIT(ADDR(IFDMSG07));   /* POINTER TO MESSAGE MODULE* 02650000
*  DCL 1 * BASED(R4),               /* MESSAGE ADDRESS                * 02660000
*        3 MSG1 PTR,                /* POINTER TO MESSAGE             * 02670000
*        3 MSG2 PTR,                /* POINTER TO MESSAGE             * 02680000
*        3 MSG2A PTR,                    /* PNTR TO IFD124I     Y01906* 02690000
*        3 MSG3 PTR,                /* POINTER TO MESSAGE             * 02700000
*        3 MSG4 PTR,                /* POINTER TO MESSAGE             * 02710000
*          3 MSG5 PTR,              /* POINTER TO MESSAGE             * 02720000
*         3 MSG6 PTR,                    /* POINTER TO MESSAGE  S20203* 02730000
*         3 MSG7 PTR,                    /* POINTER TO MESSAGE  S20203* 02740000
*         3 MSG8 PTR;               /* POINTER TO MESSAGE       S20203* 02750000
*   DCL MSGDVAD CHAR(8) BASED(R1+16);    /*DEV ADDR AREA IN MSG S21050* 02760000
*   DCL MSGDVAD1 CHAR(8) BASED(R1+26);   /* DEVAD IN IFD124I    Y01906* 02770000
*   DCL MSGVOLID CHAR(6) BASED(R1+42);   /* NON-CE VOLID IN 124IY01906* 02780000
*   DCL MSGDVAD2 CHAR(8) BASED(R1+32);   /*DEV ADDR AREA IN MSG S21050* 02790000
*   DCL MSGDVAD3 CHAR(8) BASED(R1+29);   /*DEV ADDR AREA IN MSG S21050* 02800000
*  DCL MSGDVAD4 CHAR(8) BASED(R1+19);    /*DEV ADDR AREA IN MSG S21050* 02810000
*  DCL MSGCSW CHAR(14) BASED(R1+18);     /* CSW DATA IN MESSAGE S20203* 02820000
* DCL MSGSNS CHAR(12) BASED(R1+37);      /* SNS DATA IN IFD137I Y01906* 02830000
*  DCL SIX CHAR(2) INIT('0006'X);   /* USED TO COMPARE R0 DATA LENGTH * 02840000
*  DCL 1 MSGPARM BASED(R1),         /* NA                             * 02850000
*        3 LENGTH CHAR(1),          /* LENGTH OF RESPONSE             * 02860000
*        3 BUFAD PTR(24),           /* POINTER TO RESPONSE BUFFER     * 02870000
*        3 MSGECBAD FIXED;          /* ECB ADDRESS                    * 02880000
*  DCL DECB FIXED INIT(0);          /* EVENT CONTROL BLOCK            * 02890000
*   DCL INBUFR CHAR(72) GENERATED;                                      02900000
*    DCL BUFFER CHAR(1) BASED(ADDR(INBUFR));                            02910000
*  DCL 1 INBUF CHAR(62),                 /* INPUT BUFFER        S20203* 02920000
*         3 CSWIN CHAR(14),              /* CONVERTED CSW DATA  S20203* 02930000
*         3 * CHAR(6),                  /* CONVERTED DEV ADDR   Y02906* 02940000
*         3 SNSIN CHAR(48);              /* CONVERTED SENSE DATAS20203* 02950000
*  DCL LABEL0 GENERATED;                 /*                     S20203* 02960000
*  DCL LABEL1 GENERATED;                 /*                     S20203* 02970000
*  DCL TAB28 PTR(31) GENERATED;     /* NEW MACRO ENTRY POINT          * 02980000
*  DCL CNVRT CHAR(14) GENERATED;    /* CONVERT PARAMETER LIST         * 02990000
*         DCL SEEKVOL CHAR(7) INIT('00000000000003'X);/* SEEK TO VOL1 * 03000000
*                                        /*                     S20203* 03010000
*         DCL SEEKF0FE CHAR(6) INIT('000000060000'X); /* SEEK TO F0FE * 03020000
*                                        /*                     S20203* 03030000
*  DCL SEEKMERL CHAR(6) INIT('000000000000'X);                /*S20203* 03040000
*  /******************************************************************* 03050000
*  /*                                                                 * 03060000
*  /*                  DETERMINE ONLINE OFFLINE STATUS                * 03070000
*  /*                                                                 * 03080000
*  /*                                                                 * 03090000
*         /************************************************************ 03100000
*                                                                       03110000
*         R4=MSGPTR;                     /* PUT PTR TO MSG MOD IN R4  * 03120000
         L     @4,MSGPTR                                          0075  03130000
*         IF STATUS  = '1'B THEN        /* IF DASD IS ONLINE    Y02906* 03140000
         TM    12(@7),B'10000000'                                 0076  03150000
         BC    12,@9FF                                            0076  03160000
*           DO;                         /* SET THE FOLLOWING    Y02906* 03170000
*           ONLINEOK  = '1'B;           /* ONLINE OK COMMO SW   Y02906* 03180000
         OI    A00010+1,B'00000010'                               0078  03190000
*           DPPACK01:                   /* AND                  Y02906* 03200000
*           FPM       = '1'B;           /* SCT F.P.MODE SW      Y02906* 03210000
DPPACK01 OI    A00005,B'01000000'                                 0079  03220000
*           FILEPROT  = '1'B;           /* DEVTAB F.P.MODE      Y02906* 03230000
         OI    12(@7),B'00000010'                                 0080  03240000
*           CDSFPM    = '1'B;           /* SCT F.P.M. IN CDS    Y02906* 03250000
         OI    A00007,B'10000000'                                 0081  03260000
*           DVCDSFPM  = '1'B;           /* DEVTAB CDS FPM       Y02906* 03270000
         OI    41(@7),B'10000000'                                 0082  03280000
*           DPDONE    = '1'B;           /* D.P. COMPLETE        Y02906* 03290000
         OI    12(@7),B'00100000'                                 0083  03300000
*           GO TO DPPACK08;             /* GO EXIT THIS         Y02906* 03310000
         BC    15,DPPACK08                                        0084  03320000
*           END;                        /* MODULE               Y02906* 03330000
*         IF DPDONE='1'B THEN                                           03340000
@9FF     TM    12(@7),B'00100000'                                 0086  03350000
*           GOTO DPPACK08;                                              03360000
         BC    01,DPPACK08                                        0087  03370000
*   DPPACK00:                            /*                     Y01906* 03380000
*         IF TYPE = '09'X |             /* IF THIS IS A 3330A   Y02906* 03390000
*            TYPE = '0D'X THEN          /* OR ICEBURG           Y02906* 03400000
DPPACK00 CLI   39(@7),X'09'                                       0088  03410000
         BC    08,@9FE                                            0088  03420000
         CLI   39(@7),X'0D'                                       0088  03430000
         BC    07,@9FD                                            0088  03440000
*           GO TO DPPACK14;             /* GO TO EXIO SETUP     Y02906* 03450000
         BC    08,DPPACK14                                        0089  03460000
*                                                                       03470000
*  /******************************************************************* 03480000
*  /*                                                                 * 03490000
*  /*                   SET UP PARAMETERS FOR EXIO                    * 03500000
*  /*                                                                 * 03510000
*  /******************************************************************* 03520000
*                                                                       03530000
*         CCWPTR = ADDR(LABEL1);        /* SET CCW POINTER      Y02906* 03540000
@9FD     LA    @F,LABEL1                                          0090  03550000
         ST    @F,CCWPTR                                          0090  03560000
*                                                                       03570000
*  GEN(BAL   R5,IORTN);                  /* I/O ROUTINES         M4506* 03580000
         BAL   R5,IORTN                                                 03590000
         DS    0H                                                       03600000
*  /******************************************************************* 03610000
*  /*                                                                 * 03620000
* /*                             CHECK FOR CE PACK              S20203* 03630000
*  /*                                                                 * 03640000
*  /******************************************************************* 03650000
*                                                                       03660000
*           IF CEF0FE='F0FE-' THEN       /* IS VOL F0FE PACK    S20203* 03670000
         CLC   BUF2+14(5),@C4                                     0092  03680000
*                 GOTO DPPACK09;         /* GO SET UP FOR EXIT  S20203* 03690000
         BC    08,DPPACK09                                        0093  03700000
*                                                                       03710000
*                                                                       03720000
*  /******************************************************************* 03730000
*  /*                                                                 * 03740000
*  /*                   SET UP PARAMETERS FOR EXIO              S20203* 03750000
*  /*                                                                 * 03760000
*  /******************************************************************* 03770000
*                                                                       03780000
*  DPPACK12:                             /*                     S20203* 03790000
*         CCWPTR = ADDR(LABEL0);        /* SET CCW POINTER      Y02906* 03800000
DPPACK12 LA    @F,LABEL0                                          0094  03810000
         ST    @F,CCWPTR                                          0094  03820000
*                                                                       03830000
*                                                                       03840000
*  GEN(BAL   R5,IORTN);                  /* I/O ROUTINES         M4506* 03850000
         BAL   R5,IORTN                                                 03860000
         DS    0H                                                       03870000
* /******************************************************************** 03880000
* /*                                                                  * 03890000
*  /*              CHECK LABEL AND SECURITY BIT                 S20203* 03900000
* /*                                                                  * 03910000
* /******************************************************************** 03920000
*                                                                       03930000
*         IF STLAB = 'VOL1' THEN         /* IF A STANDARD LABL, Y01906* 03940000
         CLC   BUF(4),@C5                                         0096  03950000
*            GOTO DPPAK12A;              /* CONTINUE CHECKING.  Y01906* 03960000
         BC    08,DPPAK12A                                        0097  03970000
*            ELSE DO;                    /*                     Y01906* 03980000
*               R1 = MSG2A;              /* IF NOT, PRINT -     Y01906* 03990000
         L     @1,8(0,@4)                                         0099  04000000
*               GO TO DPPACK13;          /* IFD124I SHORT FORM  Y01906* 04010000
         BC    15,DPPACK13                                        0100  04020000
*            END;                        /*                     Y01906* 04030000
*  DPPAK12A:                             /*                     Y01906* 04040000
*         IF SECBYT='F0'X|               /* NO SECURITY          M4506* 04050000
*           SECBYT='40'X |               /* NO SECURITY               * 04060000
*           SECBYT='00'X THEN            /* NO SECURITY          M4506* 04070000
DPPAK12A CLI   BUF+10,X'F0'                                       0102  04080000
         BC    08,@9FC                                            0102  04090000
         CLI   BUF+10,X'40'                                       0102  04100000
         BC    08,@9FB                                            0102  04110000
         CLI   BUF+10,X'00'                                       0102  04120000
         BC    07,@9FA                                            0102  04130000
*             IF CEVOL1='CEPACK' THEN    /* CE PACK IDENTITY     M4506* 04140000
@9FB     EQU   *                                                  0103  04150000
@9FC     CLC   BUF+4(6),@C9                                       0103  04160000
*               GOTO DPPACK09;           /* CE PACK FOUND        M4506* 04170000
         BC    08,DPPACK09                                        0104  04180000
*             ELSE DO;                   /* STD LABL, NOT CEPAK Y01906* 04190000
*                R1 = MSG2;              /* PRINT IFD124I(LONG) Y01906* 04200000
         L     @1,4(0,@4)                                         0106  04210000
*                MSGVOLID = CEVOL1;      /* PUT VOLID IN MSG    Y01906* 04220000
         MVC   42(6,@1),BUF+4                                     0107  04230000
*                GO TO DPPACK13;         /* GO PRINT IFD124I    Y01906* 04240000
         BC    15,DPPACK13                                        0108  04250000
*             END;                       /*                     Y01906* 04260000
*         ELSE GOTO DPPACK11;            /* SECURITY PROTECTED   M4506* 04270000
*  DPPACK14:                             /*                     S20203* 04280000
*                                                                       04290000
*                                                                       04300000
*  /******************************************************************* 04310000
*  /*                                                                 * 04320000
*  /*                   SET UP PARAMETERS FOR EXIO              S20203* 04330000
*  /*                                                                 * 04340000
*  /******************************************************************* 04350000
*                                                                       04360000
*         CCWPTR = ADDR(LABEL2);        /* SET CCW POINTER      Y02906* 04370000
@9F9     EQU   *                                                  0111  04380000
DPPACK14 LA    @F,LABEL2                                          0111  04390000
         ST    @F,CCWPTR                                          0111  04400000
*                                                                       04410000
*                                                                       04420000
*  GEN(BAL   R5,IORTN);                  /* I/O ROUTINES         M4506* 04430000
         BAL   R5,IORTN                                                 04440000
         DS    0H                                                       04450000
*  /******************************************************************* 04460000
*  /*                                                                 * 04470000
*  /*                   CHECK MERLIN CE BIT                     S20203* 04480000
*  /*                                                                 * 04490000
*  /******************************************************************* 04500000
*            IF MERLIN='1'B THEN         /* IS THE VOL A CE PACKS20203* 04510000
         TM    BUF1,B'00000100'                                   0113  04520000
*               GOTO DPPACK09;           /* GO SET UP FOR EXIT  S20203* 04530000
         BC    01,DPPACK09                                        0114  04540000
*                                        /*                     S20203* 04550000
*         GOTO DPPACK12;                 /* CHK FOR CEPACK LABL |01906* 04560000
         BC    15,DPPACK12                                        0115  04570000
*                                                                       04580000
*  /******************************************************************* 04590000
*  /*                                                                 * 04600000
*  /*                     PRINT IFD124I MESSAGE                       * 04610000
*  /*                                                                 * 04620000
*  /******************************************************************* 04630000
*  DPPACK13:                             /*                     S20203* 04640000
*         FILMSK='0'B;                   /*SET TO INHIBIT MODE SET CHG* 04650000
DPPACK13 NI    A00010+1,B'11110111'                               0116  04660000
*  MSGDVAD1=DEVADEB;                /* PUT DEV ADDR IN MSG2           * 04670000
         MVC   26(8,@1),0(@7)                                     0117  04680000
*  GEN(BAL   R5,DPPWTO);                 /* PRINT MESSAGE        M4506* 04690000
         BAL   R5,DPPWTO                                                04700000
         DS    0H                                                       04710000
*                                                                       04720000
*  GOTO DPPACK10;                        /*GO PRINT MSG IFD139D       * 04730000
         BC    15,DPPACK10                                        0119  04740000
*                                                                       04750000
*  DPPACK09:                             /*                     S20203* 04760000
*         DPDONE   ='1'B;               /* SET DP COMPLETE SW   Y02906* 04770000
DPPACK09 OI    12(@7),B'00100000'                                 0120  04780000
*         FILEPROT ='0'B;               /* OFF FPM  SW          Y02906* 04790000
         NI    12(@7),B'11111101'                                 0121  04800000
*         FPM      ='0'B;               /* OFF FPM  SW          Y02906* 04810000
         NI    A00005,B'10111111'                                 0122  04820000
*         DVCDSFPM ='0'B;               /* OFF FPM  SW          Y02906* 04830000
         NI    41(@7),B'01111111'                                 0123  04840000
*         DVCDSCEV ='1'B;               /* ON CE VOL SW         Y02906* 04850000
         OI    41(@7),B'00100000'                                 0124  04860000
*         CDSFPM   ='0'B;               /* OFF FPM SW           Y02906* 04870000
         NI    A00007,B'01111111'                                 0125  04880000
*         CDSCEVOL ='1'B;               /* ON CEVOL SW          Y02906* 04890000
         OI    A00007,B'00100000'                                 0126  04900000
*         CEVOL    ='1'B;               /* ON CEVOL SW          Y02906* 04910000
         OI    13(@7),B'00100000'                                 0127  04920000
*  GOTO DPPACK08;                        /*                     S20203* 04930000
         BC    15,DPPACK08                                        0128  04940000
*  DPPACK02:                                                            04950000
*  IF CCP='F3'X THEN                /* IF CC=3 GO PRINT          M1310* 04960000
DPPACK02 CLI   TECB+8,X'F3'                                       0129  04970000
*     GOTO DPPACK04;                /* MESSAGE                        * 04980000
         BC    08,DPPACK04                                        0130  04990000
*  IF SNS2='0'B THEN                /* IF INTERVENTION IS NOT REQUIRED* 05000000
         TM    TECB+23,B'01000000'                                0131  05010000
*     GOTO DPPACK05;                /* GO PRINT MESSAGE               * 05020000
         BC    08,DPPACK05                                        0132  05030000
*                                                                       05040000
*  R1=MSG4;                         /* POINTER TO MESSAGE             * 05050000
         L     @1,16(0,@4)                                        0133  05060000
*  MSGDVAD3=DEVADEB;                /* PUT DEV ADDR IN MSG4           * 05070000
         MVC   29(8,@1),0(@7)                                     0134  05080000
*  GEN(BAL   R5,DPPWTO);                 /* PRINT MESSAGE        M4506* 05090000
         BAL   R5,DPPWTO                                                05100000
         DS    0H                                                       05110000
*                                                                       05120000
*  GOTO DPPACK10;                        /* PRINT MSG IFD139D   Y01906* 05130000
         BC    15,DPPACK10                                        0136  05140000
*                                                                       05150000
*  DPPACK03:                                                            05160000
*  R1=MSG6;                         /* POINTER TO MESSAGE             * 05170000
DPPACK03 L     @1,24(0,@4)                                        0137  05180000
*  MSGCSW=CSWIN;                    /* PUT CONVERTED DATA IN MSG      * 05190000
         MVC   18(14,@1),INBUF                                    0138  05200000
*  MSGSNS = SNSIN;                       /* PUT SENSE IN IFD137IY01906* 05210000
         MVC   37(12,@1),INBUF+20                                 0139  05220000
*  GEN(BAL   R5,DPPWTO);                 /* PRINT MESSAGE        M4506* 05230000
         BAL   R5,DPPWTO                                                05240000
         DS    0H                                                       05250000
*  /******************************************************************* 05260000
*  /*                                                                 * 05270000
*  /*                          PRINT MESSAGE IFD139D                  * 05280000
*  /*                                                                 * 05290000
*  /******************************************************************* 05300000
*  DPPACK10:                                                            05310000
*  R1=MSG5;                         /* POINTER TO MESSAGE             * 05320000
DPPACK10 L     @1,20(0,@4)                                        0141  05330000
*  BUFAD=ADDR(BUFFER);              /* SET UP BUFFER ADDRESS          * 05340000
         LA    @F,BUFFER                                          0142  05350000
         ST    @F,@TEMP4                                          0142  05360000
         MVC   1(3,@1),@TEMP4+1                                   0142  05370000
*  MSGECBAD=ADDR(DECB);             /* PTR TO PWTOR ECB               * 05380000
         LA    @F,DECB                                            0143  05390000
         ST    @F,4(0,@1)                                         0143  05400000
*  LENGTH='01'X;                    /* LENGTH OF RESPONSE             * 05410000
         MVI   0(@1),X'01'                                        0144  05420000
*  DECB=0;                          /* CLEAR EVENT CONTROL BLOCK      * 05430000
         SR    @F,@F                                              0145  05440000
         ST    @F,DECB                                            0145  05450000
*  GEN(BAL   R5,DPPWTOR);                /* PRINT AND REPLY      M4506* 05460000
         BAL   R5,DPPWTOR                                               05470000
         DS    0H                                                       05480000
*  IF BUFFER='P' THEN               /* IF PROCEED GO SET UP FOR RETURN* 05490000
         CLI   BUFFER,C'P'                                        0147  05500000
*     GOTO DPPACK01;                /* TO CALLING MODULE              * 05510000
         BC    08,DPPACK01                                        0148  05520000
*  IF BUFFER='B' THEN DO;                                               05530000
         CLI   BUFFER,C'B'                                        0149  05540000
         BC    07,@9F8                                            0149  05550000
*  DPPACK07:                                                            05560000
*         IF PRIMARY ='1'B THEN                                         05570000
DPPACK07 TM    12(@7),B'01000000'                                 0151  05580000
         BC    12,@9F7                                            0151  05590000
*     BYPDEV='1'B;                                                      05600000
         OI    A00010+3,B'00100000'                               0152  05610000
*     GOTO DPPACK08;                                                    05620000
         BC    15,DPPACK08                                        0153  05630000
*                     END;                                              05640000
*  IF BUFFER='R' THEN               /* IF RETRY                       * 05650000
@9F8     CLI   BUFFER,C'R'                                        0155  05660000
*     GOTO DPPACK00;                /* GO READ R0 AGAIN               * 05670000
         BC    08,DPPACK00                                        0156  05680000
*  ELSE GOTO DPPACK10;              /* TRY AGAIN, DID NOT RECOGNIZE   * 05690000
         BC    15,DPPACK10                                        0157  05700000
*                                   /* REPLY                          * 05710000
*  /******************************************************************* 05720000
*  /*                                                                 * 05730000
*  /*                     PRINT MESSAGE IFD138I                       * 05740000
*  /*                                                                 * 05750000
*  /******************************************************************* 05760000
*  DPPACK04:                                                            05770000
*  R1=MSG1;                         /* POINTER TO MESSAGE             * 05780000
DPPACK04 L     @1,0(0,@4)                                         0158  05790000
*  MSGDVAD=DEVADEB;                 /* PUT DEV ADDR IN MSG1           * 05800000
         MVC   16(8,@1),0(@7)                                     0159  05810000
*  GEN(BAL   R5,DPPWTO);                 /* PRINT MESSAGE        M4506* 05820000
         BAL   R5,DPPWTO                                                05830000
         DS    0H                                                       05840000
*  GOTO DPPACK10;                                                       05850000
         BC    15,DPPACK10                                        0161  05860000
*                                                                       05870000
*  /******************************************************************* 05880000
*  /*                                                                 * 05890000
*  /*                     PRINT MESSAGE IFD125I                       * 05900000
*  /*                                                                 * 05910000
*  /******************************************************************* 05920000
*  DPPACK05:                                                            05930000
*  R1=MSG3;                         /* POINTER TO MESSAGE             * 05940000
DPPACK05 L     @1,12(0,@4)                                        0162  05950000
*  MSGDVAD2=DEVADEB;                /* PUT DEV ADDR IN MSG3           * 05960000
         MVC   32(8,@1),0(@7)                                     0163  05970000
*  GEN(BAL   R5,DPPWTO);                 /* PRINT MESSAGE        M4506* 05980000
         BAL   R5,DPPWTO                                                05990000
         DS    0H                                                       06000000
*  GOTO DPPACK06;                                                       06010000
         BC    15,DPPACK06                                        0165  06020000
*                                                                       06030000
*  /******************************************************************* 06040000
*  /*                                                                 * 06050000
*  /*                    CONVERT SENSE & CSW INFO                     * 06060000
*  /*                                                                 * 06070000
*  /******************************************************************* 06080000
*  DPPACK06:                                                            06090000
*  GEN(BAL   R14,NEWCONV);               /* CONVERT CALL         M4506* 06100000
DPPACK06 BAL   R14,NEWCONV                                              06110000
         DS    0H                                                       06120000
*  SUSDEL='1'B;                          /* SUSPEND DELETION     M4506* 06130000
         OI    A00000,B'00001000'                                 0167  06140000
*  GEN(BAL   R14,NEWCONV);               /* CONVERT CALL         M4506* 06150000
         BAL   R14,NEWCONV                                              06160000
         DS    0H                                                       06170000
*  GOTO DPPACK03;                   /* GO PRINT SNS/CSW INFO          * 06180000
         BC    15,DPPACK03                                        0169  06190000
*                                                                       06200000
*                                                                       06210000
* /******************************************************************** 06220000
* /*                                                                  * 06230000
* /*                       PRINT MESSAGE IFD122I                S20203* 06240000
* /*                                                                  * 06250000
* /******************************************************************** 06260000
*                                                                       06270000
* DPPACK11:                              /*                     S20203* 06280000
* R1=MSG8;                          /* PTR TO MSG               S20203* 06290000
DPPACK11 L     @1,32(0,@4)                                        0170  06300000
* MSGDVAD4=DEVADEB;                 /* PUT DEV ADDR IN MSG 8    S20203* 06310000
         MVC   19(8,@1),0(@7)                                     0171  06320000
*  GEN(BAL   R5,DPPWTO);                 /* PRINT MESSAGE        M4506* 06330000
         BAL   R5,DPPWTO                                                06340000
         DS    0H                                                       06350000
*                                                                       06360000
*                                                                       06370000
* /******************************************************************** 06380000
* /*                                                                  * 06390000
* /*                       PRINT MESSAGE IFD139D                S20203* 06400000
* /*                                                                  * 06410000
* /******************************************************************** 06420000
*                                                                       06430000
* R1=MSG7;                          /* POINTER TO MESSAGE       S20203* 06440000
         L     @1,28(0,@4)                                        0173  06450000
* BUFAD=ADDR(BUFFER);               /* SET UP BUFFER ADDR       S20203* 06460000
         LA    @F,BUFFER                                          0174  06470000
         ST    @F,@TEMP4                                          0174  06480000
         MVC   1(3,@1),@TEMP4+1                                   0174  06490000
* MSGECBAD=ADDR(DECB);                   /* POINTER TO PWTOR ECBS20203* 06500000
         LA    @F,DECB                                            0175  06510000
         ST    @F,4(0,@1)                                         0175  06520000
* LENGTH='01'X;                     /* LENGTH OF RESPONSE       S20203* 06530000
         MVI   0(@1),X'01'                                        0176  06540000
* DECB=0;                           /* CLEAR ECB                S20203* 06550000
         SR    @F,@F                                              0177  06560000
         ST    @F,DECB                                            0177  06570000
*  GEN(BAL   R5,DPPWTOR);                /* PRINT AND REPLY      M4506* 06580000
         BAL   R5,DPPWTOR                                               06590000
         DS    0H                                                       06600000
* IF BUFFER='B' THEN                /* BYPASS X                 S20203* 06610000
         CLI   BUFFER,C'B'                                        0179  06620000
*         GOTO DPPACK07;                 /*                     S20203* 06630000
         BC    08,DPPACK07                                        0180  06640000
* IF BUFFER='R' THEN                /* RETRY ?                  S20203* 06650000
         CLI   BUFFER,C'R'                                        0181  06660000
*         GOTO DPPACK00;                 /*                     S20203* 06670000
         BC    08,DPPACK00                                        0182  06680000
* ELSE    GOTO DPPACK11;            /* REPLY NOT RECOGNIZED  TRY AGAIN* 06690000
         BC    15,DPPACK11                                        0183  06700000
*                                        /*                     S20203* 06710000
*                                                                       06720000
* DPPWTO:                                                               06730000
*  GEN(PWTO  REG=(1));                   /* ISSUE WTO            M4506* 06740000
DPPWTO   PWTO  REG=(1)                                                  06750000
         DS    0H                                                       06760000
*  GOTO R5;                              /* RETURN               M4506* 06770000
         BCR   15,@5                                              0185  06780000
* DPPWTOR:                                                              06790000
*  GEN(PWTOR REG=(1));                   /* ISSUE WTOR           M4506* 06800000
DPPWTOR  PWTOR REG=(1)                                                  06810000
         DS    0H                                                       06820000
*  GOTO R5;                              /* RETURN               M4506* 06830000
         BCR   15,@5                                              0187  06840000
* IORTN:                                                                06850000
*  FILMSK='1'B;                          /* ALLOW MODE SET       M4506* 06860000
IORTN    OI    A00010+1,B'00001000'                               0188  06870000
*  PROTECT='1'B;                         /* FILE PROTECT MODE    M4506* 06880000
         OI    A00010,B'01000000'                                 0189  06890000
*         FLGB   = '00'X;               /* ZERO OUT FLGS        Y02906* 06900000
         MVI   FLGB,X'00'                                         0190  06910000
*         CLRTECB = CLRTECB && CLRTECB; /* CLEAR TECB           Y02906* 06920000
         XC    TECB+6(39),TECB+6                                  0191  06930000
*         DVTPTR = R7;                  /* SET DEVTAB ADDR      Y02906* 06940000
         ST    @7,DVTPTR                                          0192  06950000
*         FLGA   = '00'X;               /* ZERO OUT FLGS        Y02906* 06960000
         MVI   FLGA,X'00'                                         0193  06970000
*         INTCALL = '1'B;               /* SET INTERNAL CALL SW Y02906* 06980000
         OI    FLG2,B'10000000'                                   0194  06990000
*         BYPASS = '1'B;                 /* SET BYPASS PREFIX SWY02906* 07000000
         OI    FLG1A,B'10000000'                                  0195  07010000
*         SNSCNT = '18'X;                /* SET SENSE COUNT     Y02906* 07020000
         MVI   SNSCNT,X'18'                                       0196  07030000
*         TECBPTRX = ADDR(TECB);         /* SET ADDR TECB       Y02906* 07040000
         LA    @F,TECB                                            0197  07050000
         ST    @F,TECBPTRX                                        0197  07060000
*         CDSPTR = ADDR(ADRHEX);        /* SET ADDR OF CDS DEV  Y02906* 07070000
         LA    @F,32(0,@7)                                        0198  07080000
         ST    @F,WAITLST+8                                       0198  07090000
*         R15    = IORTNADR;            /* GET TO EFFECTOR ADDR Y02906* 07100000
         L     @F,IORTNADR                                        0199  07110000
*         GEN(BALR R14,R15);            /*                      Y02906* 07120000
         BALR R14,R15                                                   07130000
         DS    0H                                                       07140000
*         R1 = ADDR(WAITLST);           /* GET POINTER FOR WAIT Y02906* 07150000
         LA    @1,WAITLST                                         0201  07160000
*         R14 = ADDR(STATS);            /* GET WAIT RETURNADDR  Y02906* 07170000
         LA    @E,STATS                                           0202  07180000
*         R15 = TAB28;                   /* GET TRANS MGR ENTRY Y02906* 07190000
         L     @F,TAB28                                           0203  07200000
*         GO TO R15;                    /* GO TO THE WAIT MOD   Y02906* 07210000
         BCR   15,@F                                              0204  07220000
*       STATS:                          /* WAIT RETURN POINT    Y02906* 07230000
*  PROTECT='0'B;                         /* CLEAR BIT            M4506* 07240000
STATS    NI    A00010,B'10111111'                                 0205  07250000
*  IF EXIOK¬='0C'X THEN                  /* CHECK EXIO           M4506* 07260000
         CLI   TECB+16,X'0C'                                      0206  07270000
*    GOTO DPPACK02;                                                     07280000
         BC    07,DPPACK02                                        0207  07290000
*  GOTO R5;                              /* RETURN FROM ROUTINE  M4506* 07300000
         BCR   15,@5                                              0208  07310000
* NEWCONV:                                                              07320000
*  R1=ADDR(CNVRT);                       /* CONVERT PARAMETER    M4506* 07330000
NEWCONV  LA    @1,CNVRT                                           0209  07340000
*  R15=TAB28;                            /* TRANSIENT MANAGER    M4506* 07350000
         L     @F,TAB28                                           0210  07360000
*  GOTO R15;                             /* CALL CONVERT         M4506* 07370000
         BCR   15,@F                                              0211  07380000
*                                                                       07390000
*  DPPACK08:                                                            07400000
*  RETURN;                          /* RETURN TO CALLING MODULE       * 07410000
*         END;                                                          07420000
@EL01    L     @D,4(0,@D)                                         0213  07430000
         LM    @E,@C,12(@D)                                       0213  07440000
         BCR   15,@E                                              0213  07450000
@DATA1   EQU   *                                                        07460000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           07470000
@1       EQU   01                                                       07480000
@2       EQU   02                                                       07490000
@3       EQU   03                                                       07500000
@4       EQU   04                                                       07510000
@5       EQU   05                                                       07520000
@6       EQU   06                                                       07530000
@7       EQU   07                                                       07540000
@8       EQU   08                                                       07550000
@9       EQU   09                                                       07560000
@A       EQU   10                                                       07570000
@B       EQU   11                                                       07580000
@C       EQU   12                                                       07590000
@D       EQU   13                                                       07600000
@E       EQU   14                                                       07610000
@F       EQU   15                                                       07620000
         DS    0F                                                       07630000
@C5      DC    C'VOL1'                                                  07640000
@C9      DC    C'CEPACK'                                                07650000
@C4      DC    C'F0FE-'                                                 07660000
         DS    0D                                                       07670000
@DATA    EQU   *                                                        07680000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   07690000
Y        EQU   00000000            FULLWORD INTEGER                     07700000
R0       EQU   00000000            FULLWORD POINTER REGISTER            07710000
R1       EQU   00000001            FULLWORD POINTER REGISTER            07720000
R2       EQU   00000002            FULLWORD POINTER REGISTER            07730000
R3       EQU   00000003            FULLWORD POINTER REGISTER            07740000
R4       EQU   00000004            FULLWORD POINTER REGISTER            07750000
R5       EQU   00000005            FULLWORD POINTER REGISTER            07760000
R6       EQU   00000006            FULLWORD POINTER REGISTER            07770000
R7       EQU   00000007            FULLWORD POINTER REGISTER            07780000
R8       EQU   00000008            FULLWORD POINTER REGISTER            07790000
R9       EQU   00000009            FULLWORD POINTER REGISTER            07800000
R10      EQU   00000010            FULLWORD POINTER REGISTER            07810000
R11      EQU   00000011            FULLWORD POINTER REGISTER            07820000
R12      EQU   00000012            FULLWORD POINTER REGISTER            07830000
R13      EQU   00000013            FULLWORD POINTER REGISTER            07840000
R14      EQU   00000014            FULLWORD POINTER REGISTER            07850000
R15      EQU   00000015            FULLWORD POINTER REGISTER            07860000
I        EQU   @DATA+00000072      FULLWORD INTEGER                     07870000
A00028   EQU   00000000            52 BYTE(S) ON WORD                   07880000
DEVADEB  EQU   A00028+00000000     8 BYTE(S)                            07890000
UCBAD    EQU   A00028+00000008     FULLWORD POINTER                     07900000
DEVFLG1  EQU   A00028+00000012     1 BYTE(S)                            07910000
STATUS   EQU   A00028+00000012     1 BIT(S)                             07920000
PRIMARY  EQU   A00028+00000012     1 BIT(S)                             07930000
DPDONE   EQU   A00028+00000012     1 BIT(S)                             07940000
A00029   EQU   A00028+00000012     3 BIT(S)                             07950000
FILEPROT EQU   A00028+00000012     1 BIT(S)                             07960000
A00030   EQU   A00028+00000012     1 BIT(S)                             07970000
DEVFLG2  EQU   A00028+00000013     1 BYTE(S)                            07980000
A00031   EQU   A00028+00000013     2 BIT(S)                             07990000
CEVOL    EQU   A00028+00000013     1 BIT(S)                             08000000
STDLABL  EQU   A00028+00000013     1 BIT(S)                             08010000
A00032   EQU   A00028+00000013     4 BIT(S)                             08020000
DEVFLG3  EQU   A00028+00000014     1 BYTE(S)                            08030000
DEVFLG4  EQU   A00028+00000015     1 BYTE(S)                            08040000
TAPELABL EQU   A00028+00000016     16 BYTE(S)                           08050000
VOL      EQU   A00028+00000016     10 BYTE(S)                           08060000
HDR      EQU   A00028+00000026     4 BYTE(S)                            08070000
MODESV   EQU   A00028+00000030     1 BYTE(S)                            08080000
A00033   EQU   A00028+00000031     1 BYTE(S)                            08090000
ADRHEX   EQU   A00028+00000032     4 BYTE(S)                            08100000
A00034   EQU   A00028+00000032     2 BYTE(S)                            08110000
HEXAD    EQU   A00028+00000034     2 BYTE(S)                            08120000
CDSINFOR EQU   A00028+00000036     16 BYTE(S)                           08130000
FEATURES EQU   A00028+00000036     1 BYTE(S)                            08140000
MODEL    EQU   A00028+00000037     1 BYTE(S)                            08150000
CLASS    EQU   A00028+00000038     1 BYTE(S)                            08160000
TYPE     EQU   A00028+00000039     1 BYTE(S)                            08170000
A00035   EQU   A00028+00000040     1 BYTE(S)                            08180000
CDSFLAGS EQU   A00028+00000041     1 BYTE(S)                            08190000
DVCDSFPM EQU   A00028+00000041     1 BIT(S)                             08200000
A00036   EQU   A00028+00000041     1 BIT(S)                             08210000
DVCDSCEV EQU   A00028+00000041     1 BIT(S)                             08220000
A00037   EQU   A00028+00000041     5 BIT(S)                             08230000
WAITLST  EQU   @DATA+00000076      16 BYTE(S) ON WORD                   08240000
         ORG   WAITLST+00000000                                         08250000
XMGR     EQU   *                   1 BYTE(S)                            08260000
         DC    X'00'                                                    08270000
LVL      EQU   *                   1 BYTE(S)                            08280000
         DC    X'02'                                                    08290000
MODID    EQU   *                   2 BYTE(S)                            08300000
         DC    C'36'                                                    08310000
TECBPTR  EQU   *                   FULLWORD POINTER                     08320000
         DC    AL4(TECB)                                                08330000
CDSPTR   EQU   *                   FULLWORD POINTER                     08340000
         DC    AL4(0)                                                   08350000
FLG      EQU   *                   8 BIT(S) ON BYTE                     08360000
         DC    X'80'                                                    08370000
WAITYES  EQU   WAITLST+00000012    1 BIT(S)                             08380000
TIME     EQU   *                   2 BYTE(S)                            08390000
         DC    X'001E'                                                  08400000
TECB     EQU   @DATA+00000092      45 BYTE(S) ON WORD                   08410000
         ORG   TECB+00000000                                            08420000
FLDCNT   EQU   *                   1 BYTE(S)                            08430000
         DC    X'01'                                                    08440000
FLDSIZE  EQU   *                   1 BYTE(S)                            08450000
         DC    X'0C'                                                    08460000
SOMETNG  EQU   *                   1 BYTE(S)                            08470000
         DC    X'00'                                                    08480000
SNSSIZE  EQU   *                   1 BYTE(S)                            08490000
         DC    X'18'                                                    08500000
FLG1     EQU   *                   1 BYTE(S)                            08510000
         DC    X'00'                                                    08520000
SNSCNTTB EQU   *                   1 BYTE(S)                            08530000
         DC    X'01'                                                    08540000
CLRTECB  EQU   TECB+00000006       39 BYTE(S)                           08550000
CNTSNS   EQU   *                   1 BYTE(S)                            08560000
         DC    X'00'                                                    08570000
CNTINT   EQU   *                   1 BYTE(S)                            08580000
         DC    X'00'                                                    08590000
CCP      EQU   TECB+00000008       1 BYTE(S)                            08600000
A00038   EQU   TECB+00000009       3 BYTE(S)                            08610000
CSW1     EQU   TECB+00000012       8 BYTE(S)                            08620000
A00039   EQU   TECB+00000012       4 BYTE(S)                            08630000
STATUSX  EQU   TECB+00000016       2 BYTE(S)                            08640000
EXIOK    EQU   TECB+00000016       1 BYTE(S)                            08650000
A00040   EQU   TECB+00000016       6 BIT(S)                             08660000
UNITCK   EQU   TECB+00000016       1 BIT(S)                             08670000
UNITEXCP EQU   TECB+00000016       1 BIT(S)                             08680000
BYTE2    EQU   TECB+00000017       1 BYTE(S)                            08690000
A00041   EQU   TECB+00000017       1 BIT(S)                             08700000
INLENGTH EQU   TECB+00000017       1 BIT(S)                             08710000
A00042   EQU   TECB+00000017       6 BIT(S)                             08720000
A00043   EQU   TECB+00000018       2 BYTE(S)                            08730000
SENSE    EQU   TECB+00000020       24 BYTE(S)                           08740000
A00044   EQU   TECB+00000020       3 BYTE(S)                            08750000
SNS1     EQU   TECB+00000023       7 BYTE(S)                            08760000
SNSFLD   EQU   TECB+00000023       8 BIT(S)                             08770000
A00045   EQU   TECB+00000023       1 BIT(S)                             08780000
SNS2     EQU   TECB+00000023       1 BIT(S)                             08790000
A00046   EQU   TECB+00000024       2 BYTE(S)                            08800000
A00047   EQU   TECB+00000026       8 BIT(S)                             08810000
A00048   EQU   TECB+00000026       5 BIT(S)                             08820000
PEIND    EQU   TECB+00000026       1 BIT(S)                             08830000
A00049   EQU   TECB+00000027       2 BYTE(S)                            08840000
A00050   EQU   TECB+00000029       1 BYTE(S)                            08850000
A00051   EQU   TECB+00000029       4 BIT(S)                             08860000
BIT4     EQU   TECB+00000029       1 BIT(S)                             08870000
BUF      EQU   @DATA+00000137      20 BYTE(S)                           08880000
STLAB    EQU   BUF+00000000        4 BYTE(S)                            08890000
CEVOL1   EQU   BUF+00000004        6 BYTE(S)                            08900000
SECBYT   EQU   BUF+00000010        1 BYTE(S)                            08910000
A00052   EQU   BUF+00000011        9 BYTE(S)                            08920000
BUF1     EQU   @DATA+00000157      5 BYTE(S)                            08930000
A00053   EQU   BUF1+00000000       8 BIT(S)                             08940000
A00054   EQU   BUF1+00000000       5 BIT(S)                             08950000
MERLIN   EQU   BUF1+00000000       1 BIT(S)                             08960000
A00055   EQU   BUF1+00000000       2 BIT(S)                             08970000
A00056   EQU   BUF1+00000001       4 BYTE(S)                            08980000
BUF2     EQU   @DATA+00000162      20 BYTE(S)                           08990000
A00057   EQU   BUF2+00000000       14 BYTE(S)                           09000000
CEF0FE   EQU   BUF2+00000014       5 BYTE(S)                            09010000
A00058   EQU   BUF2+00000019       1 BYTE(S)                            09020000
         ORG   @DATA+00000184                                           09030000
MSGPTR   EQU   *                   FULLWORD POINTER                     09040000
         DC    VL4(IFDMSG07)                                            09050000
A00059   EQU   00000000            36 BYTE(S) ON WORD                   09060000
MSG1     EQU   A00059+00000000     FULLWORD POINTER                     09070000
MSG2     EQU   A00059+00000004     FULLWORD POINTER                     09080000
MSG2A    EQU   A00059+00000008     FULLWORD POINTER                     09090000
MSG3     EQU   A00059+00000012     FULLWORD POINTER                     09100000
MSG4     EQU   A00059+00000016     FULLWORD POINTER                     09110000
MSG5     EQU   A00059+00000020     FULLWORD POINTER                     09120000
MSG6     EQU   A00059+00000024     FULLWORD POINTER                     09130000
MSG7     EQU   A00059+00000028     FULLWORD POINTER                     09140000
MSG8     EQU   A00059+00000032     FULLWORD POINTER                     09150000
MSGDVAD  EQU   00000016            8 BYTE(S)                            09160000
MSGDVAD1 EQU   00000026            8 BYTE(S)                            09170000
MSGVOLID EQU   00000042            6 BYTE(S)                            09180000
MSGDVAD2 EQU   00000032            8 BYTE(S)                            09190000
MSGDVAD3 EQU   00000029            8 BYTE(S)                            09200000
MSGDVAD4 EQU   00000019            8 BYTE(S)                            09210000
MSGCSW   EQU   00000018            14 BYTE(S)                           09220000
MSGSNS   EQU   00000037            12 BYTE(S)                           09230000
SIX      EQU   *                   2 BYTE(S)                            09240000
         DC    X'0006'                                                  09250000
MSGPARM  EQU   00000000            8 BYTE(S) ON WORD                    09260000
LENGTH   EQU   MSGPARM+00000000    1 BYTE(S)                            09270000
BUFAD    EQU   MSGPARM+00000001    3  BYTE  POINTER ON WORD+1           09280000
MSGECBAD EQU   MSGPARM+00000004    FULLWORD INTEGER                     09290000
         ORG   @DATA+00000192                                           09300000
DECB     EQU   *                   FULLWORD INTEGER                     09310000
         DC    FL4'0'                                                   09320000
INBUF    EQU   @DATA+00000196      62 BYTE(S)                           09330000
CSWIN    EQU   INBUF+00000000      14 BYTE(S)                           09340000
A00060   EQU   INBUF+00000014      6 BYTE(S)                            09350000
SNSIN    EQU   INBUF+00000020      48 BYTE(S)                           09360000
         ORG   @DATA+00000264                                           09370000
SEEKVOL  EQU   *                   7 BYTE(S)                            09380000
         DC    X'00000000000003'                                        09390000
SEEKF0FE EQU   *                   6 BYTE(S)                            09400000
         DC    X'000000060000'                                          09410000
SEEKMERL EQU   *                   6 BYTE(S)                            09420000
         DC    X'000000000000'                                          09430000
         ORG   @DATA                                                    09440000
         DS    00000288C                                                09450000
@TEMPS   DS    0F                                                       09460000
@TEMP4   DC    F'0'                                                     09470000
*                                                                     * 09480000
*                                 CCW LIST                            * 09490000
*                                                                     * 09500000
*              SEEK LABEL  ON VOL1 PACK                               * 09510000
LABEL0   DS    0D                                                S20203 09520000
         CCW   07,SEEKVOL,X'60',6       SEEK LABEL               S20203 09530000
         CCW   49,SEEKVOL+2,X'60',5     SEARCH FOR VOL1 ON LABEL S20203 09540000
         CCW   08,*-8,X'60',1           TIC                      S20203 09550000
         CCW   06,BUF,X'60',20          GET VOL1&SEC DATA        S20203 09560000
         CCW   04,*,X'30',1      FORCE CHAN END DEV END, NO DATA TRANS  09570000
*                                                                     * 09580000
*              SEEK FOR DATA ON FOFE PACK                             * 09590000
LABEL1   DS    0D                                                S20203 09600000
         CCW   07,SEEKF0FE,X'60',6      SEEK FOR F0FE            S20203 09610000
         CCW   22,BUF2,X'60',20         GET F0FE DATA R0+14      S20203 09620000
         CCW   04,*,X'30',1      FORCE CHAN END DEV END, NO DATA TRANS  09630000
*                                                                     * 09640000
*              SEEK AND READ HOME ADDRESS  ON MERLIN DEVICE           * 09650000
LABEL2   DS    0D                                                S20203 09660000
         CCW   07,SEEKMERL,X'60',6   SEEK                        S20203 09670000
         CCW   26,BUF1,X'60',5      READ HOME ADDR               S20203 09680000
         CCW   04,*,X'30',1      FORCE CHAN END DEV END, NO DATA TRANS  09690000
*                                                                     * 09700000
*              PARAMETER LIST FOR CONVERT MODULE                      * 09710000
CNVRT    DC    B'00000000'         CONTROL PROGRAM FLAGS                09720000
         DC    AL1(2)              MACRO LEVEL                          09730000
         DC    CL2'41'             MACRO ID                             09740000
         DC    A(CSW1+1)                                                09750000
         DC    A(INBUF)                                                 09760000
         DC    AL2(31+32768)            COUNT AND TYPE           S20203 09770000
DSECTAA  IFDCOM                                                         09780000
A00000   EQU   CESWT3+00000000     1 BYTE(S)                            09790000
A00001   EQU   A00000+00000000     3 BIT(S)                             09800000
GRBCTL   EQU   A00000+00000000     1 BIT(S)                             09810000
SUSDEL   EQU   A00000+00000000     1 BIT(S)                             09820000
A00002   EQU   A00000+00000000     1 BIT(S)                             09830000
A00003   EQU   OLTTAB+00000000     8 BYTE(S) ON WORD                    09840000
OLTTAB1  EQU   A00003+00000000     FULLWORD POINTER                     09850000
OLTTAB2  EQU   A00003+00000004     FULLWORD POINTER                     09860000
A00004   EQU   A00003+00000004     FULLWORD POINTER                     09870000
A00005   EQU   CHASCT+00000010     1 BYTE(S)                            09880000
A00006   EQU   A00005+00000000     1 BIT(S)                             09890000
FPM      EQU   A00005+00000000     1 BIT(S)                             09900000
A00007   EQU   CHASCT+00000011     1 BYTE(S)                            09910000
CDSFPM   EQU   A00007+00000000     1 BIT(S)                             09920000
A00008   EQU   A00007+00000000     1 BIT(S)                             09930000
CDSCEVOL EQU   A00007+00000000     1 BIT(S)                             09940000
A00009   EQU   A00007+00000000     5 BIT(S)                             09950000
A00010   EQU   CESWT+00000000      4 BYTE(S) ON WORD                    09960000
A00011   EQU   A00010+00000000     8 BIT(S)                             09970000
A00012   EQU   A00010+00000000     1 BIT(S)                             09980000
PROTECT  EQU   A00010+00000000     1 BIT(S)                             09990000
A00013   EQU   A00010+00000000     6 BIT(S)                             10000000
A00014   EQU   A00010+00000001     8 BIT(S)                             10010000
A00015   EQU   A00010+00000001     4 BIT(S)                             10020000
FILMSK   EQU   A00010+00000001     1 BIT(S)                             10030000
A00016   EQU   A00010+00000001     1 BIT(S)                             10040000
ONLINEOK EQU   A00010+00000001     1 BIT(S)                             10050000
A00017   EQU   A00010+00000001     1 BIT(S)                             10060000
A00018   EQU   A00010+00000002     8 BIT(S)                             10070000
NDCFO    EQU   A00010+00000002     1 BIT(S)                             10080000
DPONDEV  EQU   A00010+00000002     1 BIT(S)                             10090000
A00019   EQU   A00010+00000002     1 BIT(S)                             10100000
CHANTEST EQU   A00010+00000002     1 BIT(S)                             10110000
A00020   EQU   A00010+00000002     1 BIT(S)                             10120000
A00021   EQU   A00010+00000002     1 BIT(S)                             10130000
TAPEHDR  EQU   A00010+00000002     1 BIT(S)                             10140000
AMERLDV  EQU   A00010+00000002     1 BIT(S)                             10150000
A00022   EQU   A00010+00000003     8 BIT(S)                             10160000
A00023   EQU   A00010+00000003     1 BIT(S)                             10170000
NURUN    EQU   A00010+00000003     1 BIT(S)                             10180000
BYPDEV   EQU   A00010+00000003     1 BIT(S)                             10190000
A00024   EQU   A00010+00000003     1 BIT(S)                             10200000
A00025   EQU   A00010+00000003     1 BIT(S)                             10210000
A00026   EQU   A00010+00000003     1 BIT(S)                             10220000
A00027   EQU   A00010+00000003     1 BIT(S)                             10230000
STDLAB   EQU   A00010+00000003     1 BIT(S)                             10240000
FLG1A    EQU   FLGA+00000000       8 BIT(S) ON BYTE                     10250000
BYPASS   EQU   FLG1A+00000000      1 BIT(S)                             10260000
FLG2     EQU   FLGB+00000000       8 BIT(S) ON BYTE                     10270000
INTCALL  EQU   FLG2+00000000       1 BIT(S)                             10280000
MODEREQ  EQU   FLG2+00000000       1 BIT(S)                             10290000
BUFFER   EQU   INBUFR+00000000     1 BYTE(S)                            10300000
@DATEND  EQU   *                                                        10310000
@9FE     EQU   DPPACK14                                                 10320000
@9FA     EQU   DPPACK11                                                 10330000
DPPACK08 EQU   @EL01                                                    10340000
@9F7     EQU   DPPACK08                                                 10350000
         END                                                            10360000
./  ADD  SSI=61560044,NAME=IFDOLT08
         TITLE '     IFDOLT08--OLD DPRINT  WRITE INTERFACE.'            00010000
         MACRO                                                          00020000
&NAME    OLDCONV &TYPE,&FROM,&TO,&CNT                                   00030000
         LCLA  &FLAG                                                    00040000
&NAME    LA    R14,R&SYSNDX .              RETURN ADDRESS               00050000
         L     R15,OLTTAB+12 .          TRANSIENT MANAGER ENTRY POINT   00060000
         CNOP  2,4 .                    BOUNDARY ALIGNMENT              00070000
         BALR  R1,R15  .                LINK TO TRANSIENT MANAGER       00080000
         DC    A(&FROM) .               FROM ADDRESS                    00090000
         DC    A(&TO) .                 TO ADDRESS                      00100000
         DC    A(*+4) .                 ADDRESS OF TYPE AND COUNT       00110000
         DC    XL2'00' .                BULL BYTES                      00120000
         AIF   ('&TYPE' EQ 'EH').SKP1                                   00130000
&FLAG    SETA  32768                                                    00140000
.SKP1    ANOP                                                           00150000
         DC    AL2(&CNT+&FLAG) .        TYPE AND COUNT                  00160000
R&SYSNDX DS    0H .                     RETURN POINT                    00170000
         MEND                                                           00180000
         TITLE '              IFDOLT08--OLD DPRINT  WRITE INTERFACE.'   00190000
         LCLA  &T,&SPN                                            0003  00200000
.@001    ANOP                                                     0003  00210000
IFDOLT08 CSECT ,                                                  0003  00220000
         BC    15,24(0,@F)                                              00230000
         DC    C'IFDOLT08 06 JUN 76'                             0003  00240000
         ST    @E,12(0,@D)                                        0003  00250000
         STM   @0,@C,20(@D)                                       0003  00260000
         BALR  @B,0                                               0003  00270000
@PSTART  DS    0H                                                 0003  00280000
         USING @PSTART+00000,@B                                   0003  00290000
         ST    @D,@SAV001+4                                       0003  00300000
         LA    @F,@SAV001                                         0003  00310000
         ST    @F,8(0,@D)                                         0003  00320000
         LR    @D,@F                                              0003  00330000
*   GEN(  USING CHASCT,2);               /* SET REG. 2 FOR DSECT      * 00340000
           USING CHASCT,2                                               00350000
         DS    0H                                                       00360000
*   GENERATE DATA;                                                      00370000
*         RESTRICT(2,3,5,6,7);           /* REGISTERS USED BY PROGRAM * 00380000
*         DCL R0 REG(0) PTR;                                            00390000
*         DCL R1 REG(1) PTR;             /* PARM LIST POINTER RECEIVED* 00400000
*         DCL R2 REG(2) PTR;             /* DSECT BASE REGISTER       * 00410000
*         DCL R3 REG(3) PTR;             /* ID AND ROUTINE NUMBER PTR * 00420000
*         DCL R4 REG(4) PTR;             /* CONTAIN SENSE COUNT       * 00430000
*         DCL R5 REG(5) PTR;             /* PRINT BUFFER POINTER      * 00440000
*         DCL R6 REG(6) PTR;             /* PARAMETER LIST POINTER    * 00450000
*         DCL R7 REG(7) PTR;                  /* WORK AREA POINTER    * 00460000
*         DCL R12 REG(12) PTR;                                          00470000
*         DCL R13 REG(13) PTR;           /* SAVE AREA POINTER         * 00480000
*         DCL R14 REG(14) PTR;                /* RETURN ADDR REGISTER * 00490000
*         DCL R15 REG(15) PTR;                /* RETURN CODE REGISTER * 00500000
*         DCL R9 REG(9) PTR;                  /* WORK REGISTER        * 00510000
*   GEN(EJECT);                                                         00520000
         EJECT                                                          00530000
         DS    0H                                                       00540000
*         /************************************************************ 00550000
*         /* THE FOLLOWING DEFINES AREAS REFERENCED EXTERNAL TO THIS  * 00560000
*         /* MODULE.                                                  * 00570000
*         /************************************************************ 00580000
*                                                                       00590000
*         DCL CESWT2 CHAR(1) GENERATED;  /* INTERNAL SWITCHES         * 00600000
*         DCL TAB28 PTR GENERATED;       /* LINK POINTER              * 00610000
*         DCL DEVDEPAD PTR GENERATED;         /* DEVICE ADDRESS       * 00620000
*         DCL CESWT CHAR(1) GENERATED;        /* FLAG AREA            * 00630000
*         DCL PRTBUFR CHAR(124) GENERATED;    /* PRINT BUFFER         * 00640000
*         DECLARE                                                       00650000
*             1 * BASED(ADDR(CESWT2)),                                  00660000
*               2 * BIT(2),                                             00670000
*               2 FECOND BIT(1);         /* FIRST ERROR CONDITION     * 00680000
*         DECLARE                                                       00690000
*             1 * BASED(ADDR(CESWT)),    /* FLAG AREA                 * 00700000
*               2 * BIT(6),              /* NOT REFERENCED            * 00710000
*               2 FERINT BIT(1);         /* FIRST ERROR SWITCH        * 00720000
*         DCL CESWT6 CHAR(1) GENERATED;  /*                      M4504* 00730000
*         DECLARE                                                       00740000
*             1 * BASED(DEVDEPAD),       /* DEVDEPAD POINTER TO AREA  * 00750000
*               2 * CHAR(6),             /* NOT REFERENCED            * 00760000
*               2 UNIT CHAR(2);          /* UNIT ADDRESS              * 00770000
*         DCL CHASCT CHAR(88) GENERATED; /* SECTION CONTROL TABLE     * 00780000
*         DECLARE                                                       00790000
*             1 * BASED(ADDR(CHASCT)),   /* SECTION CONTROL TABLE ADR.* 00800000
*               2 * CHAR(2),             /* NOT REFERENCED            * 00810000
*               2 * CHAR(1),                                            00820000
*                 3 * BIT(7),            /* NOT REFERENCED            * 00830000
*                 3 FERCOM BIT(1),       /* FIRST ERROR FLAG          * 00840000
*               2 CHASCT3 CHAR(1),       /* FIRST ERROR SWITCH        * 00850000
*                 3 CHASCTB BIT(1),                                     00860000
*                 3 * BIT(5),            /* NOT REFERENCED            * 00870000
*                 3 ERRLPB BIT(1);       /* ERROR LOOP FLAG           * 00880000
*         DCL COMMINT PTR GENERATED;     /* ADDRESS OF COMMUNICATIONS * 00890000
*         DECLARE                                                       00900000
*             1 BUFFERS BDY(DWORD),                                     00910000
*               2 * PTR,                 /* NOT USED                  * 00920000
*               2 FRMCON CHAR(1),        /* FORMS CONTROL CHARACTER   * 00930000
*               2 PRTBUFR1 CHAR(79),     /* BUFFER AREA               * 00940000
*               2 BUFFER2 CHAR(80);      /* BUFFER WORK AREA          * 00950000
*         DCL BUFR CHAR(79) BASED(R5);   /* BUFFER AREA               * 00960000
*  DCL CESWT5 CHAR(1) GENERATED;         /* OLTEP SWITCHES       M1390* 00970000
*  DCL 1 * BASED(ADDR(CESWT5)),          /* NA                   M1390* 00980000
*         2 * BIT(2),                    /* NA                   M1390* 00990000
*         2 FFEFLG BIT(1);               /* FIRST FIRST ERROR    M1390* 01000000
*   GEN(EJECT);                                                         01010000
         EJECT                                                          01020000
         DS    0H                                                       01030000
*         /************************************************************ 01040000
*         /* THE FOLLOWING MAP DESCRIBES THE PARAMETER LIST RECEIVED. * 01050000
*         /************************************************************ 01060000
*                                                                       01070000
*         DECLARE                                                       01080000
*             1 * BASED(R6),             /* REGISTER 6 CONTAINS THE   * 01090000
*               2 * CHAR(1),             /* ADDRESS OF THIS AREA.     * 01100000
*                 3 LASTFLG BIT(1),      /* LAST MESSAGE FLAG         * 01110000
*                 3 HEADFLG BIT(1),      /* HEADER REQUEST FLAG       * 01120000
*                 3 RSLTFLG BIT(1),      /* RESULT REQUEST FLAG       * 01130000
*                 3 OVRDFLG BIT(1),      /* OVER-RIDE REQUEST FLAG    * 01140000
*                 3 COMFLG BIT(1),       /* COMMENT REQUEST FLAG      * 01150000
*                 3 ERRFLG BIT(1),       /* ERROR MESSAGE FLAG        * 01160000
*                 3 * BIT(2),                                           01170000
*               2 FRMCNTL CHAR(1),       /* FORM CONTROL BYTE         * 01180000
*               2 * CHAR(1),                                            01190000
*               2 COUNT CHAR(1),         /* MESSAGE LENGTH            * 01200000
*               2 SUBCHK PTR;            /* POINTER TO SUBTASK OR     * 01210000
*                                        /* CHECKFIELDS               * 01220000
*   GEN(EJECT);                                                         01230000
         EJECT                                                          01240000
         DS    0H                                                       01250000
*         /************************************************************ 01260000
*         /* THE FOLLOWING MAP DESCRIBES THE SUBTASK AREA.            * 01270000
*         /************************************************************ 01280000
*                                                                       01290000
*         DECLARE                                                       01300000
*             1 * BASED(SUBCHK),         /* SUBCHK POINTS TO AREA.    * 01310000
*               2 * CHAR(1),             /* CONTAINS THE FOLLOWING    * 01320000
*                                        /* FLAGS:                    * 01330000
*                 3 DEVFLG BIT(1),       /* DEVICE INDICATOR          * 01340000
*                 3 LSTFLG BIT(1),       /* LAST PRINT INDICATOR      * 01350000
*                 3 * BIT(1),            /* NOT REFERENCED            * 01360000
*                 3 CCWFLG BIT(1),       /* CCW INDICATOR             * 01370000
*               2 LSTCCW CHAR(7);        /* CCW AREA                  * 01380000
*         DCL AREA CHAR(80) BASED(SUBCHK); /* COMMENT AREA            * 01390000
*   GEN(EJECT);                                                         01400000
         EJECT                                                          01410000
         DS    0H                                                       01420000
*         /************************************************************ 01430000
*         /* THE FOLLOWING MAP DESCRIBES THE CHECKFIELD AREA.         * 01440000
*         /************************************************************ 01450000
*                                                                       01460000
*         DECLARE                                                       01470000
*             1 * BASED(SUBCHK),                                        01480000
*               2 * CHAR(4),                                            01490000
*                 3 RELIF CHAR(1),       /* FLAG FIELDS INDICATING    * 01500000
*                                        /* AREAS TO BE PRINTED.      * 01510000
*                   4 RELAD BIT(1),      /* CSW COMMAND ADDRESS       * 01520000
*                   4 CC BIT(1),         /* CONDITION CODE            * 01530000
*                   4 CSWS1 BIT(1),      /* 1ST BYTE OF CSW STATUS    * 01540000
*                   4 CSWS2 BIT(1),      /* 2ND BYTE OF CSW STATUS    * 01550000
*                   4 CSWC BIT(1),       /* CSW COUNT                 * 01560000
*                   4 SNS BIT(1),        /* SENSE DATA                * 01570000
*                   4 * BIT(1),          /* NOT REFERENCED            * 01580000
*                   4 DATA BIT(1),       /* DATA FLAG                 * 01590000
*                 3 SNGLFLG BIT(1),      /* SINGLE LINE OF PRINT      * 01600000
*                 3 * BIT(7),            /* NOT USED                  * 01610000
*                 3 DTACNT CHAR(1),      /* DATA COUNT                * 01620000
*                 3 SCOUNT CHAR(1),      /* SENSE COUNT         Y02906* 01630000
*               2 TECBAD PTR,            /* TECB ADDRESS              * 01640000
*               2 EXPDINFO CHAR(16),     /* THIS FIELD CONTAINS       * 01650000
*                                        /* EXPECTED - CONDITION CODE * 01660000
*                                        /* CSW AND SENSE.            * 01670000
*               2 REDTADR PTR,           /* POINTER TO RECEIVED DATA  * 01680000
*               2 EXPDTADR PTR;          /* POINTER TO EXPECTED DATA  * 01690000
*         DCL RECEIV CHAR(256) BASED(REDTADR);  /* RECEIVED DATA AREA * 01700000
*         DCL EXPECT CHAR(256) BASED(EXPDTADR); /* EXPECTED DATA AREA * 01710000
*   GEN(EJECT);                                                         01720000
         EJECT                                                          01730000
         DS    0H                                                       01740000
*         /************************************************************ 01750000
*         /* THE FOLLOWING DEFINES INTERNAL WORK AREAS.               * 01760000
*         /************************************************************ 01770000
*                                                                       01780000
*         DCL WKARA1 CHAR(96);           /* WORK AREA                 * 01790000
*         DCL WKAREA CHAR(96) BASED(R7); /* REGISTER 7 POINTS TO AREA * 01800000
*         DECLARE                                                       01810000
*             1 * BASED(R13),            /* REG.13 POINTS TO SAVE AREA* 01820000
*               2 * PTR,                 /* NOT REFERENCED            * 01830000
*               2 OLTSVAD PTR;           /* POINTER TO OLT            * 01840000
*         DECLARE                                                       01850000
*             1 * BASED(OLTSVAD),                                       01860000
*               2 * CHAR(32),            /* NOT REFERENCED            * 01870000
*               2 IDAD PTR;              /* POINTER TO OLT ID         * 01880000
*         DECLARE                                                       01890000
*             1 * BASED(IDAD),                                          01900000
*               2 * CHAR(76),            /* NOT REFERENCED            * 01910000
*               2 ID CHAR(8),            /* OLT ID                    * 01920000
*               2 ROUTINE CHAR(1);       /* OLT ROUTINE NUMBER        * 01930000
*         DCL XLATE1 CHAR(10) INIT('0123456789');  /* TRANSLATE TABLE * 01940000
*   GEN(EJECT);                                                         01950000
         EJECT                                                          01960000
         DS    0H                                                       01970000
*         /************************************************************ 01980000
*         /* THE FOLLOWING MAPS DESCRIBE AREA'S REFERENCED FOR OPER-  * 01990000
*         /* ATOR COMMUNICATIONS                                      * 02000000
*         /************************************************************ 02010000
*                                                                       02020000
*         DCL IFDMSG08 EXT ENTRY;        /* IFDOLT08'S MESSAGE MODULE * 02030000
*         DCL MSGMOD08 PTR INIT(ADDR(IFDMSG08)); /* PTR. TO IFDMSG08  * 02040000
*         DECLARE                                                       02050000
*             1 * BASED(MSGMOD08),                                      02060000
*               2 MSG129 PTR;            /* ADDR OF MESSAGE IFD129I   * 02070000
*         DECLARE                                                       02080000
*             1 * BASED(MSG129),         /* MESSAGE IFD129I           * 02090000
*               2 * CHAR(39),            /* MESSAGE                   * 02100000
*               2 MSGID CHAR(6),         /* OLT ID                    * 02110000
*               2 * CHAR(1),             /* BLANK                     * 02120000
*               2 MSGRTN CHAR(2),        /* OLT ROUTINE NUMBER        * 02130000
*               2 * CHAR(6),             /* MESSAGE                   * 02140000
*               2 MSGUNIT CHAR(3);       /* UNIT ADDRESS              * 02150000
*   GEN(EJECT);                                                         02160000
         EJECT                                                          02170000
         DS    0H                                                       02180000
*         /************************************************************ 02190000
*         /* THE FOLLOWING MAP DESCRIBES THE TECB AREA                * 02200000
*         /************************************************************ 02210000
*                                                                       02220000
*         DECLARE                                                       02230000
*             1 * BASED(TECBAD),         /* TECB PTR IN CHECKFLD AREA * 02240000
*               2 * CHAR(4),             /* NOT REFERENCED            * 02250000
*               2 RCVDINFO CHAR(16);     /* THIS FIELD CONTAINS       * 02260000
*                                        /* RECEIVED - CONDITION CODE * 02270000
*                                        /* CSW AND SENSE.            * 02280000
*   GEN(EJECT);                                                         02290000
         EJECT                                                          02300000
         DS    0H                                                       02310000
*         /************************************************************ 02320000
*         /* THE FOLLOWING CODE WILL INITIALIZE REGISTERS AND DETER-  * 02330000
*         /* MINE THE FUNCTION OR FUNCTIONS TO BE PERFORMED.          * 02340000
*         /************************************************************ 02350000
*                                                                       02360000
*         R6 = R1;                       /* SET PARAMETER LIST PTR.   * 02370000
         LR    @6,@1                                              0061  02380000
* PRT000:                                                               02390000
*         R5 = ADDR(PRTBUFR1);           /* SET PRINT BUFFER PTR.     * 02400000
PRT000   LA    @5,BUFFERS+5                                       0062  02410000
*         R7 = ADDR(WKARA1);             /* SET WORK AREA PTR.        * 02420000
         LA    @7,WKARA1                                          0063  02430000
*          PRTBUFR(1:1)=' ';    /* CLEAR BUFFER               @ZA08978* 02440000
         MVI   PRTBUFR,C' '                                       0064  02450000
*          PRTBUFR(2:124)=PRTBUFR(1:123);                   /*@ZA08978* 02460000
         MVC   PRTBUFR+1(123),PRTBUFR                             0065  02470000
*          BUFFERS(1:1)=' ';    /* CLEAR BUFFERS              @ZA08978* 02480000
         MVI   BUFFERS,C' '                                       0066  02490000
*          BUFFERS(2:164)=BUFFERS(1:163);                   /*@ZA08978* 02500000
         MVC   BUFFERS+1(163),BUFFERS                             0067  02510000
*         IF FRMCNTL = 'D9'X THEN        /* FORMS CONTROL - RESTORE   * 02520000
         CLI   1(@6),X'D9'                                        0068  02530000
         BC    07,@9FF                                            0068  02540000
*           DO;                          /* DO THE FOLLOWING:         * 02550000
*           PRTBUFR(1:1) = '1B'X;        /* SET RESTORE CONTROL       * 02560000
         MVI   PRTBUFR,X'1B'                                      0070  02570000
*   GEN(  PWRT  SIZE=80);                /* INVOKE PRINT ROUTINE      * 02580000
           PWRT  SIZE=80                                                02590000
         DS    0H                                                       02600000
*           GO TO PRT0002;                                              02610000
         BC    15,PRT0002                                         0072  02620000
*           END;                         /* END OF RESTORE ROUTINE    * 02630000
*         IF FRMCNTL = 'F3'X THEN        /* FORMS CONTROL - SPACE 3   * 02640000
@9FF     CLI   1(@6),X'F3'                                        0074  02650000
         BC    07,@9FE                                            0074  02660000
*           DO;                          /* DO THE FOLLOWING:         * 02670000
*           FRMCON = '19'X;              /* SET SPACE 3 CONTROL       * 02680000
         MVI   BUFFERS+4,X'19'                                    0076  02690000
*           GO TO PRT0001;                                              02700000
         BC    15,PRT0001                                         0077  02710000
*           END;                         /* END OF SPACE 3 ROUTINE    * 02720000
*         IF FRMCNTL = 'F2'X THEN        /* FORMS CONTROL - SPACE 2   * 02730000
@9FE     CLI   1(@6),X'F2'                                        0079  02740000
         BC    07,@9FD                                            0079  02750000
*           DO;                          /* DO THE FOLLOWING:         * 02760000
*           FRMCON = '11'X;              /* SET SPACE 2 CONTROL       * 02770000
         MVI   BUFFERS+4,X'11'                                    0081  02780000
*           GO TO PRT0001;                                              02790000
         BC    15,PRT0001                                         0082  02800000
*           END;                         /* END OF SPACE 2 ROUTINE    * 02810000
* PRT0002:                                                              02820000
*         FRMCON = '09'X;                /* SET DEFAULT OF SPACE 1    * 02830000
@9FD     EQU   *                                                  0084  02840000
PRT0002  MVI   BUFFERS+4,X'09'                                    0084  02850000
* PRT0001:                                                              02860000
*         IF HEADFLG = '1'B THEN         /* REQUEST FOR HEADER PRINT  * 02870000
PRT0001  TM    0(@6),B'01000000'                                  0085  02880000
*           GO TO PRT003;                /* YES-GO TO HEADER ROUTINE  * 02890000
         BC    01,PRT003                                          0086  02900000
*         IF RSLTFLG = '1'B THEN         /* REQUEST FOR RESULT PRINT  * 02910000
         TM    0(@6),B'00100000'                                  0087  02920000
*           GO TO PRT010;                /* YES-GO TO RESULT ROUTINE  * 02930000
         BC    01,PRT010                                          0088  02940000
*         IF COMFLG = '1'B THEN          /* REQUEST FOR COMMENT PRINT * 02950000
         TM    0(@6),B'00001000'                                  0089  02960000
*           GO TO PRT022;                /* YES-GO TO COMMENT ROUTINE * 02970000
         BC    01,PRT022                                          0090  02980000
*         BUFR(2:4) = 'BUG';             /* NO- INDICATE ERROR        * 02990000
         MVC   1(3,@5),@C10                                       0091  03000000
*         PRTBUFR(1:80) = BUFFERS(5:84); /* SET PRINT BUFFER          * 03010000
         MVC   PRTBUFR(80),BUFFERS+4                              0092  03020000
*   GEN(  PWRT  SIZE=80);                /* INVOKE PRINT ROUTINE      * 03030000
           PWRT  SIZE=80                                                03040000
         DS    0H                                                       03050000
*                                                                       03060000
* PRT001:                                                               03070000
*  IF FFEFLG='1'B THEN                   /* CHECK SWITCH         M1390* 03080000
PRT001   TM    A00012,B'00100000'                                 0094  03090000
*    GOTO PRT002;                        /* PREVIOUS FIRST ERROR M1390* 03100000
         BC    01,PRT002                                          0095  03110000
*         IF FERCOM = '0'B THEN          /* 1ST ERROR COMMUNICATION   * 03120000
         TM    A00006+2,B'00000001'                               0096  03130000
*           GO TO PRT002;                /* GO CHECK ERROR LOOP       * 03140000
         BC    08,PRT002                                          0097  03150000
*         IF CHASCTB = '0'B THEN         /* FIRST ERROR COMMUNICATION * 03160000
         TM    A00006+3,B'10000000'                               0098  03170000
*           GO TO PRT002;                /* GO CHECK ERROR LOOP       * 03180000
         BC    08,PRT002                                          0099  03190000
* PRT001C:                                                              03200000
*         FERINT = '1'B;                 /* SET FIRST ERROR SWITCH    * 03210000
PRT001C  OI    A00002,B'00000010'                                 0100  03220000
*         MSGID = ID(1:6);               /* SET OLT ID IN MESSAGE     * 03230000
         L     @4,4(0,@D)                                         0101  03240000
         L     @4,32(0,@4)         A00027                         0101  03250000
         L     @C,MSGMOD08                                        0101  03260000
         L     @C,0(0,@C)          A00031                         0101  03270000
         MVC   39(6,@C),76(@4)                                    0101  03280000
*         R9 = ROUTINE;                  /* SETUP FOR TRANSLATE       * 03290000
         SR    @9,@9                                              0102  03300000
         IC    @9,84(0,@4)                                        0102  03310000
*   GENERATE;                                                           03320000
         CVD   R9,BUFFER2+4                                             03330000
         UNPK  BUFFER2(2),BUFFER2+10(2)                                 03340000
         NI    BUFFER2+1,X'0F'                                          03350000
         TR    BUFFER2+1(1),XLATE1                                      03360000
         DS    0H                                                       03370000
*         MSGRTN = BUFFER2(1:2);         /* SET OLT ROUTINE IN MESSAGE* 03380000
         MVC   46(2,@C),BUFFERS+84                                0104  03390000
*         BUFFER2(9:10) = UNIT;          /* SET UNIT ADDRESS IN BUFFER* 03400000
         L     @8,DEVDEPAD                                        0105  03410000
         MVC   BUFFERS+92(2),6(@8)                                0105  03420000
*         R9 = ADDR(LINK1);              /* SET LINK ADDRESS POINTER  * 03430000
         LA    @9,LINK1                                           0106  03440000
*         GO TO CONVERT1;                /* GO TO CONVERT ROUTINE     * 03450000
         BC    15,CONVERT1                                        0107  03460000
* LINK1:                                                                03470000
*         MSGUNIT = BUFFER2(28:30);      /* SET UNIT ADDRESS IN MSG.  * 03480000
LINK1    L     @4,MSGMOD08                                        0108  03490000
         L     @4,0(0,@4)          A00031                         0108  03500000
         MVC   54(3,@4),BUFFERS+111                               0108  03510000
*         R9 = MSG129;                   /* SET MESSAGE POINTER       * 03520000
         L     @C,MSGMOD08                                        0109  03530000
         L     @9,0(0,@C)                                         0109  03540000
*   GEN(  PWTO  REG=(R9));               /* INVOKE PARALLEL PRINT RTN * 03550000
           PWTO  REG=(R9)                                               03560000
         DS    0H                                                       03570000
*  FFEFLG='1'B;                          /* FIRST FIRST ERROR    M1390* 03580000
         OI    A00012,B'00100000'                                 0111  03590000
* PRT001B:                                                              03600000
*         FECOND = '1'B;                 /* SET FIRST ERROR CONDITION * 03610000
PRT001B  OI    A00000,B'00100000'                                 0112  03620000
*  CESWT6=CESWT6&'7F'X;                  /* CLEAR 1ST BIT IN SW  M4504* 03630000
         NI    CESWT6,X'7F'                                       0113  03640000
*         R15 = TAB28;                   /* SET LINK POINTER          * 03650000
         L     @F,TAB28                                           0114  03660000
*   GEN;                                                                03670000
         L     R13,4(R13)          RESTORE REGISTERS                    03680000
         L     R14,12(R13)         FOR RETURN TO TRANS. MANAGER         03690000
         LM    R0,R12,20(R13)                                           03700000
         DS    0H                                                       03710000
*         GOTO R15;                      /* RETURN TO TRANS. MANAGER  * 03720000
         BCR   15,@F                                              0116  03730000
*                                                                       03740000
* PRT002:                                                               03750000
*         IF ERRLPB = '0'B THEN          /* IF ERROR LOOP IS NOT ON   * 03760000
PRT002   TM    A00006+3,B'00000010'                               0117  03770000
*           GO TO FINISH;                /* GO TO EXIT ROUTINE        * 03780000
         BC    08,FINISH                                          0118  03790000
*         CHASCT3 = CHASCT3 & 'DF'X;     /* RESET CATASTROPHIC FLAG   * 03800000
         NI    A00006+3,X'DF'                                     0119  03810000
*         GO TO FINISH;             /* GO TO EXIT ROUTINE             * 03820000
         BC    15,FINISH                                          0120  03830000
*   GEN(EJECT);                                                         03840000
         EJECT                                                          03850000
         DS    0H                                                       03860000
*         /************************************************************ 03870000
*         /* THE FOLLOWING ROUTINE WILL PRINT HEADING REQUESTS        * 03880000
*         /************************************************************ 03890000
* PRT003:                                                               03900000
*         IF OVRDFLG = '1'B THEN         /* OVER-RIDE REQUEST         * 03910000
PRT003   TM    0(@6),B'00010000'                                  0122  03920000
*           GO TO PRT009;                /* YES - GO CHECK LAST ENTRY * 03930000
         BC    01,PRT009                                          0123  03940000
*         IF ERRFLG = '0'B THEN          /* ERROR PRINT REQUEST       * 03950000
         TM    0(@6),B'00000100'                                  0124  03960000
*           GO TO PRT004;                /* NO- GO TO HEADER SETUP    * 03970000
         BC    08,PRT004                                          0125  03980000
*         BUFR(1:1) = '*';               /* INDICATE ERROR MESSAGE    * 03990000
         MVI   0(@5),C'*'                                         0126  04000000
*         R5 = R5 + 1;                   /* INCREMENT PRT BUFFER PTR  * 04010000
         AH    @5,@D1                                             0127  04020000
* PRT004:                                                               04030000
*         BUFR(1:8) = ID;                /* SET ID IN HEADER          * 04040000
PRT004   L     @4,4(0,@D)                                         0128  04050000
         L     @4,32(0,@4)         A00027                         0128  04060000
         MVC   0(8,@5),76(@4)                                     0128  04070000
*         R5 = R5 + 9;                   /* INCREMENT PRT BUFFER PTR  * 04080000
         AH    @5,@D2                                             0129  04090000
*         R9 = ROUTINE;                  /* SETUP FOR TRANSLATE       * 04100000
         SR    @9,@9                                              0130  04110000
         IC    @9,84(0,@4)                                        0130  04120000
*   GENERATE;                                                           04130000
         CVD   R9,BUFFER2+4                                             04140000
         UNPK  BUFFER2(2),BUFFER2+10(2)                                 04150000
         NI    BUFFER2+1,X'0F'                                          04160000
         TR    BUFFER2+1(1),XLATE1                                      04170000
         DS    0H                                                       04180000
*         BUFR(1:2) = BUFFER2(1:2);      /* SET ROUTINE NUMBER IN MSG.* 04190000
         MVC   0(2,@5),BUFFERS+84                                 0132  04200000
*         R5 = R5 + 3;                   /* INCREMENT PRT BUFFER PTR  * 04210000
         AH    @5,@D3                                             0133  04220000
*         BUFFER2(2:8) = LSTCCW;         /* GET LISTING & CCW ADDRESS * 04230000
         L     @C,4(0,@6)                                         0134  04240000
         MVC   BUFFERS+85(7),1(@C)                                0134  04250000
*         BUFFER2(9:10) = UNIT;          /* GET UNIT ADDRESS          * 04260000
         L     @8,DEVDEPAD                                        0135  04270000
         MVC   BUFFERS+92(2),6(@8)                                0135  04280000
*         R9 = ADDR(LINK2);              /* SET LINK ADDRESS POINTER  * 04290000
         LA    @9,LINK2                                           0136  04300000
*         GO TO CONVERT1;                /* GO TO CONVERT ROUTINE     * 04310000
         BC    15,CONVERT1                                        0137  04320000
* LINK2:                                                                04330000
*         IF LSTFLG = '0'B THEN          /* IS LISTING ADDRESS PRESENT* 04340000
LINK2    L     @4,4(0,@6)                                         0138  04350000
         TM    0(@4),B'01000000'                                  0138  04360000
*           GO TO PRT005;                /* NO-GO CHECK FOR CCW       * 04370000
         BC    08,PRT005                                          0139  04380000
*         BUFR(1:3) = 'IC-';             /* SET PREFIX IN MESSAGE     * 04390000
         MVC   0(3,@5),@C15                                       0140  04400000
*         BUFR(4:8) = BUFFER2(14:18);    /* SET LISTING ADDRESS IN MSG* 04410000
         MVC   3(5,@5),BUFFERS+97                                 0141  04420000
*         R5 = R5 + 9;                   /* INCREMENT PRT BUFFER PTR  * 04430000
         AH    @5,@D2                                             0142  04440000
* PRT005:                                                               04450000
*         IF CCWFLG = '0'B THEN          /* CCW PRESENT               * 04460000
PRT005   L     @4,4(0,@6)                                         0143  04470000
         TM    0(@4),B'00010000'                                  0143  04480000
*           GO TO PRT006;                /* NO-GO CHECK FOR DEVICE    * 04490000
         BC    08,PRT006                                          0144  04500000
*         BUFR(1:4) = 'CCW-';            /* SET PREFIX IN MESSAGE     * 04510000
         MVC   0(4,@5),@C16                                       0145  04520000
*         BUFR(5:9) = BUFFER2(22:26);    /* SET CCW IN MESSAGE        * 04530000
         MVC   4(5,@5),BUFFERS+105                                0146  04540000
*         R5 = R5 + 10;                  /* INCREMENT PRT BUFFER PTR  * 04550000
         AH    @5,@D4                                             0147  04560000
* PRT006:                                                               04570000
*         IF DEVFLG = '0'B THEN          /* DEVICE PRESENT            * 04580000
PRT006   L     @4,4(0,@6)                                         0148  04590000
         TM    0(@4),B'10000000'                                  0148  04600000
*           GO TO PRT008;                /* NO-GO CHECK               * 04610000
         BC    08,PRT008                                          0149  04620000
*         BUFR(1:9) = 'I/O ADDR-';       /* SET I/O ADDRESS PREFIX    * 04630000
         MVC   0(9,@5),@C17                                       0150  04640000
*         BUFR(10:12) = BUFFER2(28:30);  /* SET UNIT ID               * 04650000
         MVC   9(3,@5),BUFFERS+111                                0151  04660000
*         R5 = R5+13;                    /* INCREMENT PRT BUFFER PTR. * 04670000
         AH    @5,@D5                                             0152  04680000
* PRT008:                                                               04690000
*         PRTBUFR(1:80) = BUFFERS(5:84); /* SET PRINT BUFFER          * 04700000
PRT008   MVC   PRTBUFR(80),BUFFERS+4                              0153  04710000
*   GEN(  PWRT  SIZE=80);                /* INVOKE PRINT ROUTINE      * 04720000
           PWRT  SIZE=80                                                04730000
         DS    0H                                                       04740000
* PRT009:                                                               04750000
*         IF LASTFLG = '1'B THEN         /* LAST ENTRY                * 04760000
PRT009   TM    0(@6),B'10000000'                                  0155  04770000
*           GO TO PRT001;                /* YES-GO CHECK FIRST ERROR  * 04780000
         BC    01,PRT001                                          0156  04790000
*         R6 = R6 + 8;                   /* SET POINTER TO NEXT ENTRY * 04800000
         AH    @6,@D6                                             0157  04810000
*           GO TO PRT000;                /* GO BACK TO THE BEGINNING  * 04820000
         BC    15,PRT000                                          0158  04830000
*   GEN(EJECT);                                                         04840000
         EJECT                                                          04850000
         DS    0H                                                       04860000
*         /************************************************************ 04870000
*         /* THE FOLLOWING ROUTINE WILL PRINT RESULT REQUESTS         * 04880000
*         /************************************************************ 04890000
* PRT010:                                                               04900000
*         IF OVRDFLG = '1'B THEN         /* OVER-RIDE ON              * 04910000
PRT010   TM    0(@6),B'00010000'                                  0160  04920000
*           GO TO PRT009;                /* YES-CHECK FOR LAST ENTRY  * 04930000
         BC    01,PRT009                                          0161  04940000
*         R5 = ADDR(PRTBUFR1);           /* SET PRINT BUFFER POINTER  * 04950000
         LA    @5,BUFFERS+5                                       0162  04960000
*         BUFR(1:5) = 'RCVD ';           /* SET RECEIVED PREFIX       * 04970000
         MVC   0(5,@5),@C18                                       0163  04980000
*         BUFFER2(1:5) = 'XPCTD';        /* SET EXPECTED PREFIX       * 04990000
         MVC   BUFFERS+84(5),@C19                                 0164  05000000
*         R5 = R5+6;                     /* INCREMENT PRT BUFFER PTR  * 05010000
         AH    @5,@D7                                             0165  05020000
*         WKAREA(1:16) = RCVDINFO;       /* SET RECEIVED CONDITION    * 05030000
         L     @4,4(0,@6)                                         0166  05040000
         L     @4,4(0,@4)          A00021                         0166  05050000
         MVC   0(16,@7),4(@4)                                     0166  05060000
*                                        /* CODE,CSW AND SENSE IN     * 05070000
*                                        /* WORK AREA.                * 05080000
*         WKAREA(17:32) = EXPDINFO;      /* SET EXPECTED CONDITION    * 05090000
         L     @C,4(0,@6)                                         0167  05100000
         MVC   16(16,@7),8(@C)                                    0167  05110000
*                                        /* CODE,CSW AND SENSE IN     * 05120000
*                                        /* WORK AREA.                * 05130000
*         R9 = ADDR(LINK3);              /* SET LINK ADDRESS POINTER  * 05140000
         LA    @9,LINK3                                           0168  05150000
*         GO TO CONVERT2;                /* GO TO CONVERT ROUTINE 2   * 05160000
         BC    15,CONVERT2                                        0169  05170000
* LINK3:                                                                05180000
*         IF CC = '0'B THEN              /* CONDITION CODE RELEVANT   * 05190000
LINK3    L     @4,4(0,@6)                                         0170  05200000
         TM    0(@4),B'01000000'                                  0170  05210000
*           GO TO PRT011;                /* NO-GO CHECK CSW           * 05220000
         BC    08,PRT011                                          0171  05230000
*         BUFR(1:3) = 'CC-';             /* SET CONDITION CODE PREFIX * 05240000
         MVC   0(3,@5),@C20                                       0172  05250000
*         BUFR(4:4) = WKAREA(33:33);     /* RECEIVED AND EXPECTED IN  * 05260000
         MVC   3(1,@5),32(@7)                                     0173  05270000
*         BUFR(83:83) = WKAREA(66:66);   /* PRINT BUFFER              * 05280000
         MVC   82(1,@5),65(@7)                                    0174  05290000
*         R5 = R5+5;                     /* INCREMENT PRT BUFFER PTR  * 05300000
         AH    @5,@D8                                             0175  05310000
* PRT011:                                                               05320000
*         R9 = ADDR(RELIF);              /* SET FLAG FIELD ADDRESS    * 05330000
PRT011   L     @4,4(0,@6)                                         0176  05340000
         LR    @9,@4                                              0176  05350000
*   GEN;                                                                05360000
         TM    0(R9),X'B8'              CSW RELEVANT                    05370000
         BZ    PRT016                      GO CHECK SENSE               05380000
         DS    0H                                                       05390000
*         BUFR(1:6) = 'CSW-XX';          /* SET CSW RECEIVED AND      * 05400000
         MVC   0(6,@5),@C21                                       0178  05410000
*         BUFR(80:85) = 'CSW-XX';        /* EXPECTED PREFIX IN BUF    * 05420000
         MVC   79(6,@5),@C21                                      0179  05430000
*                                                                       05440000
* PRT012:                                                               05450000
*         R5 = R5+7;                     /* INCREMENT PRT BUFFER PTR  * 05460000
PRT012   AH    @5,@D9                                             0180  05470000
*         BUFR(80:96)='XXXXXX XXXX XXXX '; /* ASSUME TEMPORARY FIELDS * 05480000
         MVC   79(17,@5),@C22                                     0181  05490000
*         BUFR(1:6) = WKAREA(35:40);     /* SET ADDRESS IN PRT BUFFER * 05500000
         MVC   0(6,@5),34(@7)                                     0182  05510000
*         BUFR(8:11) = WKAREA(41:44);    /* SET STATUS IN PRT BUFFER  * 05520000
         MVC   7(4,@5),40(@7)                                     0183  05530000
*         BUFR(13:16) = WKAREA(45:48);   /* SET COUNT IN PRT BUFFER   * 05540000
         MVC   12(4,@5),44(@7)                                    0184  05550000
*         IF SNGLFLG = '1'B THEN         /* SINGLE LINE PRINT         * 05560000
         L     @4,4(0,@6)                                         0185  05570000
         TM    1(@4),B'10000000'                                  0185  05580000
*           GO TO PRT015;                /* YES-GO CHECK SENSE        * 05590000
         BC    01,PRT015                                          0186  05600000
*         IF RELAD = '0'B THEN           /* CSW ADDRESS RELEVANT      * 05610000
         TM    0(@4),B'10000000'                                  0187  05620000
*           GO TO PRT013;                /* YES-GO CHECK STATUS       * 05630000
         BC    08,PRT013                                          0188  05640000
*         BUFR(80:85) = WKAREA(67:72);   /* SET ADDRESS IN PRT BUFFER * 05650000
         MVC   79(6,@5),66(@7)                                    0189  05660000
* PRT013:                                                               05670000
*         IF CSWS1 = '0'B &              /* STATUS RELEVANT           * 05680000
*           CSWS2 = '0'B THEN                                           05690000
PRT013   L     @4,4(0,@6)                                         0190  05700000
         TM    0(@4),B'00100000'                                  0190  05710000
         BC    05,@9FC                                            0190  05720000
         TM    0(@4),B'00010000'                                  0190  05730000
*             GO TO PRT014;              /* YES-GO CHECK COUNT        * 05740000
         BC    10,PRT014                                          0191  05750000
*         BUFR(87:90) = WKAREA(73:76);   /* SET STATUS IN PRT BUFFER  * 05760000
@9FB     EQU   *                                                  0192  05770000
@9FC     MVC   86(4,@5),72(@7)                                    0192  05780000
* PRT014:                                                               05790000
*         IF CSWC = '0'B THEN            /* CSW COUNT RELEVANT        * 05800000
PRT014   L     @4,4(0,@6)                                         0193  05810000
         TM    0(@4),B'00001000'                                  0193  05820000
*           GO TO PRT015;                /* YES-GO CHECK SENSE        * 05830000
         BC    08,PRT015                                          0194  05840000
*         BUFR(92:95) = WKAREA(77:80);   /* SET COUNT IN PRT BUFFER   * 05850000
         MVC   91(4,@5),76(@7)                                    0195  05860000
* PRT015:                                                               05870000
*         R5 = R5+17;                    /* INCREMENT PRT BUFFER PTR  * 05880000
PRT015   AH    @5,@D10                                            0196  05890000
* PRT016:                                                               05900000
*         IF SNS = '0'B THEN             /* SENSE RELEVANT            * 05910000
PRT016   L     @4,4(0,@6)                                         0197  05920000
         TM    0(@4),B'00000100'                                  0197  05930000
*           GO TO PRT018;                /* YES-GO CHECK DATA         * 05940000
         BC    08,PRT018                                          0198  05950000
*         BUFR(1:4) = 'SNS-';            /* SET SENSE PREFIX IN BUFFER* 05960000
         MVC   0(4,@5),@C23                                       0199  05970000
*         R5 = R5+4;                     /* INCREMENT PRT BUFFER PTR  * 05980000
         AH    @5,@D11                                            0200  05990000
* PRT017:                                                               06000000
*         RESTRICT(R4);                  /* RESTRICT SENSE COUNT REG. * 06010000
*         DO                                                            06020000
*           R4 = SCOUNT TO 1             /* SET SENSE COUNT     Y02906* 06030000
*           BY - 1;                                                     06040000
PRT017   L     @C,4(0,@6)                                         0202  06050000
         SR    @F,@F                                              0202  06060000
         IC    @F,3(0,@C)                                         0202  06070000
         LTR   @4,@F                                              0202  06080000
         BC    12,@DO9F9                                          0202  06090000
*           BUFR(1:2) = WKAREA(49:50);   /* MOVE SENSE RECEIVED       * 06100000
@DO9FA   MVC   0(2,@5),48(@7)                                     0203  06110000
*           BUFR(80:81) = WKAREA(81:82); /* MOVE SENSE EXPECTED       * 06120000
         MVC   79(2,@5),80(@7)                                    0204  06130000
*           R5 = R5+3;                   /* STEP PRINT BUFFER POINTER * 06140000
         AH    @5,@D3                                             0205  06150000
*           R7 = R7+2;                   /* STEP WORK AREA POINTER    * 06160000
         AH    @7,@D12                                            0206  06170000
*         END;                           /* END OF SENSE FORMAT RTN.  * 06180000
*         RELEASE(R4);                   /* RELEASE SENSE COUNT REG.  * 06190000
         BCT   @4,@DO9FA                                          0207  06200000
@DO9F9   EQU   *                                                  0207  06210000
* PRT018:                                                               06220000
*         IF DATA = '0'B THEN            /* DATA RELEVANT             * 06230000
PRT018   L     @4,4(0,@6)                                         0209  06240000
         TM    0(@4),B'00000001'                                  0209  06250000
*           GO TO PRT021;                /* YES-GO TO PRINT ROUTINE   * 06260000
         BC    08,PRT021                                          0210  06270000
*         BUFR(1:5) = 'DATA-';           /* SET DATA PREFIX           * 06280000
         MVC   0(5,@5),@C24                                       0211  06290000
*         R5 = R5+5;                     /* INCREMENT PRT BUFFER PTR  * 06300000
         AH    @5,@D8                                             0212  06310000
*         RESTRICT(R4,R9);                                              06320000
*         R4 = ADDR(BUFFER2);            /* SET MAXIMUM BUFFER SIZE   * 06330000
         LA    @4,BUFFERS+84                                      0214  06340000
*         R4 = R4-(R5);                  /* SET BUFFER RESIDUE        * 06350000
         LR    @F,@5                                              0215  06360000
         LCR   @F,@F                                              0215  06370000
         AR    @4,@F                                              0215  06380000
*         R4 = (R4-8)/2;                 /* DIVIDE RESIDUE BY 2       * 06390000
         LR    @E,@4                                              0216  06400000
         SH    @E,@D6                                             0216  06410000
         SRDA  @E,32                                              0216  06420000
         LA    @0,2                                               0216  06430000
         DR    @E,@0                                              0216  06440000
         LR    @4,@F                                              0216  06450000
*         R9 = DTACNT;                   /* SET DATA CNT              * 06460000
         L     @8,4(0,@6)                                         0217  06470000
         SR    @9,@9                                              0217  06480000
         IC    @9,2(0,@8)                                         0217  06490000
*         IF R4 ¬< R9 THEN               /* DATA COUNT > RESIDUE      * 06500000
         CR    @4,@9                                              0218  06510000
*           GO TO PRT019;                /* NO-GO TO DATA CONVERT     * 06520000
         BC    10,PRT019                                          0219  06530000
*         R9 = R4;                       /* USED RESIDUE AS DATA CNT  * 06540000
         LR    @9,@4                                              0220  06550000
* PRT019:                                                               06560000
*         R9 = R9 + R9;                  /* DOUBLE COUNT              * 06570000
PRT019   AR    @9,@9                                              0221  06580000
*         WKAREA(1:30) = RECEIV(1:30);   /* GET RECEIVED DATA         * 06590000
         L     @8,4(0,@6)                                         0222  06600000
         L     @8,24(0,@8)         A00021                         0222  06610000
         MVC   0(30,@7),0(@8)                                     0222  06620000
*         R4 = R9;                                                      06630000
         LR    @4,@9                                              0223  06640000
*         R9 = ADDR(LINK4);              /* SET LINK POINTER          * 06650000
         LA    @9,LINK4                                           0224  06660000
*         GO TO CONVERT2;                /* GO TO CONVERT ROUTINE     * 06670000
         BC    15,CONVERT2                                        0225  06680000
* LINK4:                                                                06690000
*         BUFR(1:R4) = WKAREA(33:R4);    /* SET DATA IN PRINT BUFFER  * 06700000
LINK4    LA    @E,32(0,@7)                                        0226  06710000
         LR    @8,@4                                              0226  06720000
         BCTR  @8,0                                               0226  06730000
         LR    @A,@5                                              0226  06740000
         EX    @8,@MVC                                            0226  06750000
*         IF SNGLFLG = '1'B THEN         /* SINGLE LINE OF PRINT      * 06760000
         L     @8,4(0,@6)                                         0227  06770000
         TM    1(@8),B'10000000'                                  0227  06780000
*           GO TO PRT020;                /* YES-GO PRINT LINE         * 06790000
         BC    01,PRT020                                          0228  06800000
*         WKAREA(1:30) = EXPECT(1:30);   /* SET EXPECTED DATA IN WKARA* 06810000
         L     @C,28(0,@8)         A00021                         0229  06820000
         MVC   0(30,@7),0(@C)                                     0229  06830000
*         R9 = ADDR(LINK5);              /* SET LINK ADDRESS          * 06840000
         LA    @9,LINK5                                           0230  06850000
*         GO TO CONVERT2;                /* GO TO CONVERT ROUTINE     * 06860000
         BC    15,CONVERT2                                        0231  06870000
* LINK5:                                                                06880000
*         R5 = R5+79;                    /* SET DATA MOVE POINTER     * 06890000
LINK5    AH    @5,@D13                                            0232  06900000
*         BUFR(1:R4) = WKAREA(33:R4);    /* SET EXPECTED DATA IN BUFR * 06910000
         LA    @E,32(0,@7)                                        0233  06920000
         LR    @8,@4                                              0233  06930000
         BCTR  @8,0                                               0233  06940000
         LR    @A,@5                                              0233  06950000
         EX    @8,@MVC                                            0233  06960000
*         R5 = R5-(79);                  /* RESET DATA MOVE POINTER   * 06970000
         LA    @F,79                                              0234  06980000
         LCR   @F,@F                                              0234  06990000
         AR    @5,@F                                              0234  07000000
* PRT020:                                                               07010000
*         R5 = R4+R5+1;                  /* AJUST PRINT BUFFER POINTER* 07020000
PRT020   LA    @F,1                                               0235  07030000
         AR    @F,@5                                              0235  07040000
         AR    @F,@4                                              0235  07050000
         LR    @5,@F                                              0235  07060000
* PRT021:                                                               07070000
*         PRTBUFR(1:80) = BUFFERS(5:84); /* SET PRINT BUFFER          * 07080000
PRT021   MVC   PRTBUFR(80),BUFFERS+4                              0236  07090000
*   GEN(  PWRT  SIZE=80);                /* INVOKE PRINT ROUTINE      * 07100000
           PWRT  SIZE=80                                                07110000
         DS    0H                                                       07120000
*         IF SNGLFLG = '1'B THEN         /* SINGLE LINE PRINT         * 07130000
         L     @8,4(0,@6)                                         0238  07140000
         TM    1(@8),B'10000000'                                  0238  07150000
*           GO TO PRT009;                /* YES-CHECK LAST ENTRY      * 07160000
         BC    01,PRT009                                          0239  07170000
*         BUFFERS(6:77) = BUFFER2(1:72); /* SET NEXT LINE OF PRINT    * 07180000
         MVC   BUFFERS+5(72),BUFFERS+84                           0240  07190000
*         GO TO PRT008;                  /* GO PROCESS                * 07200000
         BC    15,PRT008                                          0241  07210000
*   GEN(EJECT);                                                         07220000
         EJECT                                                          07230000
         DS    0H                                                       07240000
*         /************************************************************ 07250000
*         /* THE FOLLOWING ROUTINE WILL PRINT COMMENT REQUESTS        * 07260000
*         /************************************************************ 07270000
* PRT022:                                                               07280000
*         IF OVRDFLG = '1'B THEN         /* OVER-RIDE ON              * 07290000
PRT022   TM    0(@6),B'00010000'                                  0243  07300000
*           GO TO PRT009;                /* YES-GO CHECK LAST ENTRY   * 07310000
         BC    01,PRT009                                          0244  07320000
*         IF COUNT ¬> '50'X THEN         /* COUNT > 80                * 07330000
         CLI   3(@6),X'50'                                        0245  07340000
*           GO TO PRT023;                /* NO-SETUP FOR PRINT        * 07350000
         BC    12,PRT023                                          0246  07360000
*         COUNT = '50'X;                 /* SET COUNT TO 80           * 07370000
         MVI   3(@6),X'50'                                        0247  07380000
* PRT023:                                                               07390000
*         R9 = COUNT;                    /* SET NEEDED COUNT          * 07400000
PRT023   SR    @9,@9                                              0248  07410000
         IC    @9,3(0,@6)                                         0248  07420000
*         BUFR(1:R9) = AREA(1:R9);         /* SET PRINT BUFFER        * 07430000
         L     @8,4(0,@6)                                         0249  07440000
         LR    @E,@8                                              0249  07450000
         LR    @C,@9                                              0249  07460000
         BCTR  @C,0                                               0249  07470000
         LR    @A,@5                                              0249  07480000
         EX    @C,@MVC                                            0249  07490000
*         GO TO PRT008;                    /* GO TO PRINT ROUTINE     * 07500000
         BC    15,PRT008                                          0250  07510000
*   GEN(EJECT);                                                         07520000
         EJECT                                                          07530000
         DS    0H                                                       07540000
*         /************************************************************ 07550000
*         /* THE FOLLOWING ROUTINE CONTAIN COMMON CONVERT MACRO'S     * 07560000
*         /* REFERENCED BY THIS MODULE.                               * 07570000
*         /************************************************************ 07580000
* CONVERT1:                                   /* CONVERT BUFFER2 FROM * 07590000
*   GEN(  OLDCONV HE,BUFFER2,BUFFER2+10,10);                            07600000
CONVERT1   OLDCONV HE,BUFFER2,BUFFER2+10,10                             07610000
         DS    0H                                                       07620000
*         GO TO R9;                                                     07630000
         BCR   15,@9                                              0253  07640000
*                                                                       07650000
* CONVERT2:                                   /*CONVERT WKAREA FROM   * 07660000
*   GEN(  OLDCONV HE,WKARA1,WKARA1+32,32);                              07670000
CONVERT2   OLDCONV HE,WKARA1,WKARA1+32,32                               07680000
         DS    0H                                                       07690000
*         GO TO R9;                                                     07700000
         BCR   15,@9                                              0255  07710000
* FINISH:                                                               07720000
*         RETURN;                        /* RETURN TO CALLER          * 07730000
*         END   IFDOLT08;                                               07740000
@EL01    L     @D,4(0,@D)                                         0257  07750000
         L     @E,12(0,@D)                                        0257  07760000
         LM    @0,@C,20(@D)                                       0257  07770000
         BCR   15,@E                                              0257  07780000
@DATA1   EQU   *                                                        07790000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           07800000
@1       EQU   01                                                       07810000
@2       EQU   02                                                       07820000
@3       EQU   03                                                       07830000
@4       EQU   04                                                       07840000
@5       EQU   05                                                       07850000
@6       EQU   06                                                       07860000
@7       EQU   07                                                       07870000
@8       EQU   08                                                       07880000
@9       EQU   09                                                       07890000
@A       EQU   10                                                       07900000
@B       EQU   11                                                       07910000
@C       EQU   12                                                       07920000
@D       EQU   13                                                       07930000
@E       EQU   14                                                       07940000
@F       EQU   15                                                       07950000
@D1      DC    H'1'                                                     07960000
@D2      DC    H'9'                                                     07970000
@D3      DC    H'3'                                                     07980000
@D4      DC    H'10'                                                    07990000
@D5      DC    H'13'                                                    08000000
@D6      DC    H'8'                                                     08010000
@D7      DC    H'6'                                                     08020000
@D8      DC    H'5'                                                     08030000
@D9      DC    H'7'                                                     08040000
@D10     DC    H'17'                                                    08050000
@D11     DC    H'4'                                                     08060000
@D12     DC    H'2'                                                     08070000
@D13     DC    H'79'                                                    08080000
@MVC     MVC   0(1,@A),0(@E)                                            08090000
         DS    0F                                                       08100000
@C16     DC    C'CCW-'                                                  08110000
@C23     DC    C'SNS-'                                                  08120000
@C21     DC    C'CSW-XX'                                                08130000
@C10     DC    C'BUG'                                                   08140000
@C15     DC    C'IC-'                                                   08150000
@C17     DC    C'I/O ADDR-'                                             08160000
@C18     DC    C'RCVD '                                                 08170000
@C19     DC    C'XPCTD'                                                 08180000
@C20     DC    C'CC-'                                                   08190000
@C22     DC    C'XXXXXX XXXX XXXX '                                     08200000
@C24     DC    C'DATA-'                                                 08210000
         DS    0D                                                       08220000
@DATA    EQU   *                                                        08230000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   08240000
X        EQU   00000000            FULLWORD INTEGER                     08250000
R0       EQU   00000000            FULLWORD POINTER REGISTER            08260000
R1       EQU   00000001            FULLWORD POINTER REGISTER            08270000
R2       EQU   00000002            FULLWORD POINTER REGISTER            08280000
R3       EQU   00000003            FULLWORD POINTER REGISTER            08290000
R4       EQU   00000004            FULLWORD POINTER REGISTER            08300000
R5       EQU   00000005            FULLWORD POINTER REGISTER            08310000
R6       EQU   00000006            FULLWORD POINTER REGISTER            08320000
R7       EQU   00000007            FULLWORD POINTER REGISTER            08330000
R12      EQU   00000012            FULLWORD POINTER REGISTER            08340000
R13      EQU   00000013            FULLWORD POINTER REGISTER            08350000
R14      EQU   00000014            FULLWORD POINTER REGISTER            08360000
R15      EQU   00000015            FULLWORD POINTER REGISTER            08370000
R9       EQU   00000009            FULLWORD POINTER REGISTER            08380000
A00004   EQU   00000000            8 BYTE(S) ON WORD                    08390000
A00005   EQU   A00004+00000000     6 BYTE(S)                            08400000
UNIT     EQU   A00004+00000006     2 BYTE(S)                            08410000
BUFFERS  EQU   @DATA+00000072      164 BYTE(S) ON DWORD                 08420000
A00011   EQU   BUFFERS+00000000    FULLWORD POINTER                     08430000
FRMCON   EQU   BUFFERS+00000004    1 BYTE(S)                            08440000
PRTBUFR1 EQU   BUFFERS+00000005    79 BYTE(S)                           08450000
BUFFER2  EQU   BUFFERS+00000084    80 BYTE(S)                           08460000
BUFR     EQU   00000000            79 BYTE(S)                           08470000
A00014   EQU   00000000            8 BYTE(S) ON WORD                    08480000
A00015   EQU   A00014+00000000     1 BYTE(S)                            08490000
LASTFLG  EQU   A00014+00000000     1 BIT(S)                             08500000
HEADFLG  EQU   A00014+00000000     1 BIT(S)                             08510000
RSLTFLG  EQU   A00014+00000000     1 BIT(S)                             08520000
OVRDFLG  EQU   A00014+00000000     1 BIT(S)                             08530000
COMFLG   EQU   A00014+00000000     1 BIT(S)                             08540000
ERRFLG   EQU   A00014+00000000     1 BIT(S)                             08550000
A00016   EQU   A00014+00000000     2 BIT(S)                             08560000
FRMCNTL  EQU   A00014+00000001     1 BYTE(S)                            08570000
A00017   EQU   A00014+00000002     1 BYTE(S)                            08580000
COUNT    EQU   A00014+00000003     1 BYTE(S)                            08590000
SUBCHK   EQU   A00014+00000004     FULLWORD POINTER                     08600000
A00018   EQU   00000000            8 BYTE(S) ON WORD                    08610000
A00019   EQU   A00018+00000000     1 BYTE(S)                            08620000
DEVFLG   EQU   A00018+00000000     1 BIT(S)                             08630000
LSTFLG   EQU   A00018+00000000     1 BIT(S)                             08640000
A00020   EQU   A00018+00000000     1 BIT(S)                             08650000
CCWFLG   EQU   A00018+00000000     1 BIT(S)                             08660000
LSTCCW   EQU   A00018+00000001     7 BYTE(S)                            08670000
AREA     EQU   00000000            80 BYTE(S)                           08680000
A00021   EQU   00000000            32 BYTE(S) ON WORD                   08690000
A00022   EQU   A00021+00000000     4 BYTE(S)                            08700000
RELIF    EQU   A00021+00000000     1 BYTE(S)                            08710000
RELAD    EQU   A00021+00000000     1 BIT(S)                             08720000
CC       EQU   A00021+00000000     1 BIT(S)                             08730000
CSWS1    EQU   A00021+00000000     1 BIT(S)                             08740000
CSWS2    EQU   A00021+00000000     1 BIT(S)                             08750000
CSWC     EQU   A00021+00000000     1 BIT(S)                             08760000
SNS      EQU   A00021+00000000     1 BIT(S)                             08770000
A00023   EQU   A00021+00000000     1 BIT(S)                             08780000
DATA     EQU   A00021+00000000     1 BIT(S)                             08790000
SNGLFLG  EQU   A00021+00000001     1 BIT(S)                             08800000
A00024   EQU   A00021+00000001     7 BIT(S)                             08810000
DTACNT   EQU   A00021+00000002     1 BYTE(S)                            08820000
SCOUNT   EQU   A00021+00000003     1 BYTE(S)                            08830000
TECBAD   EQU   A00021+00000004     FULLWORD POINTER                     08840000
EXPDINFO EQU   A00021+00000008     16 BYTE(S)                           08850000
REDTADR  EQU   A00021+00000024     FULLWORD POINTER                     08860000
EXPDTADR EQU   A00021+00000028     FULLWORD POINTER                     08870000
RECEIV   EQU   00000000            256 BYTE(S)                          08880000
EXPECT   EQU   00000000            256 BYTE(S)                          08890000
WKARA1   EQU   @DATA+00000236      96 BYTE(S)                           08900000
WKAREA   EQU   00000000            96 BYTE(S)                           08910000
A00025   EQU   00000000            8 BYTE(S) ON WORD                    08920000
A00026   EQU   A00025+00000000     FULLWORD POINTER                     08930000
OLTSVAD  EQU   A00025+00000004     FULLWORD POINTER                     08940000
A00027   EQU   00000000            36 BYTE(S) ON WORD                   08950000
A00028   EQU   A00027+00000000     32 BYTE(S)                           08960000
IDAD     EQU   A00027+00000032     FULLWORD POINTER                     08970000
A00029   EQU   00000000            85 BYTE(S) ON WORD                   08980000
A00030   EQU   A00029+00000000     76 BYTE(S)                           08990000
ID       EQU   A00029+00000076     8 BYTE(S)                            09000000
ROUTINE  EQU   A00029+00000084     1 BYTE(S)                            09010000
         ORG   @DATA+00000332                                           09020000
XLATE1   EQU   *                   10 BYTE(S)                           09030000
         DC    C'0123456789'                                            09040000
         ORG   @DATA+00000344                                           09050000
MSGMOD08 EQU   *                   FULLWORD POINTER                     09060000
         DC    VL4(IFDMSG08)                                            09070000
A00031   EQU   00000000            4 BYTE(S) ON WORD                    09080000
MSG129   EQU   A00031+00000000     FULLWORD POINTER                     09090000
A00032   EQU   00000000            57 BYTE(S) ON WORD                   09100000
A00033   EQU   A00032+00000000     39 BYTE(S)                           09110000
MSGID    EQU   A00032+00000039     6 BYTE(S)                            09120000
A00034   EQU   A00032+00000045     1 BYTE(S)                            09130000
MSGRTN   EQU   A00032+00000046     2 BYTE(S)                            09140000
A00035   EQU   A00032+00000048     6 BYTE(S)                            09150000
MSGUNIT  EQU   A00032+00000054     3 BYTE(S)                            09160000
A00036   EQU   00000000            20 BYTE(S) ON WORD                   09170000
A00037   EQU   A00036+00000000     4 BYTE(S)                            09180000
RCVDINFO EQU   A00036+00000004     16 BYTE(S)                           09190000
         ORG   @DATA                                                    09200000
         DS    00000368C                                                09210000
@TEMPS   DS    0F                                                       09220000
DSECT08  IFDCOM                                                         09230000
A00000   EQU   CESWT2+00000000     1 BYTE(S) ON WORD                    09240000
A00001   EQU   A00000+00000000     2 BIT(S)                             09250000
FECOND   EQU   A00000+00000000     1 BIT(S)                             09260000
A00002   EQU   CESWT+00000000      1 BYTE(S) ON WORD                    09270000
A00003   EQU   A00002+00000000     6 BIT(S)                             09280000
FERINT   EQU   A00002+00000000     1 BIT(S)                             09290000
A00006   EQU   CHASCT+00000000     4 BYTE(S) ON WORD                    09300000
A00007   EQU   A00006+00000000     2 BYTE(S)                            09310000
A00008   EQU   A00006+00000002     1 BYTE(S)                            09320000
A00009   EQU   A00006+00000002     7 BIT(S)                             09330000
FERCOM   EQU   A00006+00000002     1 BIT(S)                             09340000
CHASCT3  EQU   A00006+00000003     1 BYTE(S)                            09350000
CHASCTB  EQU   A00006+00000003     1 BIT(S)                             09360000
A00010   EQU   A00006+00000003     5 BIT(S)                             09370000
ERRLPB   EQU   A00006+00000003     1 BIT(S)                             09380000
A00012   EQU   CESWT5+00000000     1 BYTE(S) ON WORD                    09390000
A00013   EQU   A00012+00000000     2 BIT(S)                             09400000
FFEFLG   EQU   A00012+00000000     1 BIT(S)                             09410000
@DATEND  EQU   *                                                        09420000
FINISH   EQU   @EL01                                                    09430000
         END   IFDOLT08,(C'PL/S',1400,76158)                            09440000
./  ADD  SSI=32570894,NAME=IFDOLT09
         LCLA  &T,&SPN                                            0001  00010000
.@001    ANOP                                                     0001  00020000
IFDOLT09 CSECT ,                                                  0001  00030000
         BC    15,24(0,@F)                                              00040000
         DC    C'IFDOLT09 14 SEP 73'                             0001  00050000
         ST    @E,12(0,@D)                                        0001  00060000
         STM   @0,@C,20(@D)                                       0001  00070000
         BALR  @B,0                                               0001  00080000
@PSTART  DS    0H                                                 0001  00090000
         USING @PSTART+00000,@B                                   0001  00100000
         ST    @D,@SAV001+4                                       0001  00110000
         LA    @F,@SAV001                                         0001  00120000
         ST    @F,8(0,@D)                                         0001  00130000
         LR    @D,@F                                              0001  00140000
*         R5 = CHKFLD;                   /* SET REG 5 TO CHECKFLD PTR * 00150000
         L     @5,0(0,@1)                                         0018  00160000
*         R6 = TECBAD;                   /* SET REG 6 TO TECB PTR.    * 00170000
         L     @6,4(0,@5)                                         0019  00180000
*         ERRFLG = '00'X;                /* CLEAR ERROR FLAG FIELD    * 00190000
         MVI   ERRFLG,X'00'                                       0020  00200000
*   GENERATE;                                                           00210000
         TM    0(5),X'FC'                                               00220000
         BZ    CMP006                                                   00230000
         DS    0H                                                       00240000
*         IF RELVT2 = '0'B THEN          /* CONDITION CODE TEST       * 00250000
         TM    0(@5),B'01000000'                                  0022  00260000
*           GO TO CMP001;                /* NO-BRANCH TO COMMAND      * 00270000
         BC    08,CMP001                                          0023  00280000
*                                        /* ADDRESS TEST.             * 00290000
*         IF EXPCC = TRECC THEN          /* VALID CONDITION CODE      * 00300000
         CLC   8(1,@5),4(@6)                                      0024  00310000
*           GO TO CMP001;                /* YES-BRANCH TO COMMAND     * 00320000
         BC    08,CMP001                                          0025  00330000
*                                        /* ADDRESS TEST              * 00340000
*         ERRFLG = ERRFLG | '40'X;       /* NO-SET ERROR FLAG         * 00350000
         OI    ERRFLG,X'40'                                       0026  00360000
* CMP001:                                                               00370000
*         IF RELVT1 = '0'B THEN          /* COMMAND ADDRESS TEST      * 00380000
CMP001   TM    0(@5),B'10000000'                                  0027  00390000
*           GO TO CMP002;                /* NO-BRANCH TO 1ST CSW      * 00400000
         BC    08,CMP002                                          0028  00410000
*                                        /* STATUS TEST.              * 00420000
*         IF ADDR1 = TRECSW1 THEN        /* VALID COMMAND ADDRESS     * 00430000
         MVC   @TEMP3+1(3),5(@6)                                  0029  00440000
         L     @F,@TEMP3                                          0029  00450000
         MVC   @TEMP3+1(3),9(@5)                                  0029  00460000
         C     @F,@TEMP3                                          0029  00470000
*           GO TO CMP002;                /* YES-BRANCH TO 1ST CSW     * 00480000
         BC    08,CMP002                                          0030  00490000
*                                        /* STATUS TEST               * 00500000
*         ERRFLG = ERRFLG | '80'X;       /* NO-SET ERROR FLAG         * 00510000
         OI    ERRFLG,X'80'                                       0031  00520000
* CMP002:                                                               00530000
*         IF RELVT3 = '0'B THEN          /* 1ST CSW STATUS TEST       * 00540000
CMP002   TM    0(@5),B'00100000'                                  0032  00550000
*           GO TO CMP003;                /* NO-BRANCH TO 2ND CSW      * 00560000
         BC    08,CMP003                                          0033  00570000
*                                        /* STATUS TEST.              * 00580000
*         IF STATUS1 = RESTAT1 THEN      /* VALID CSW STATUS          * 00590000
         CLC   12(1,@5),8(@6)                                     0034  00600000
*           GO TO CMP003;                /* YES-BRANCH TO 2ND CSW     * 00610000
         BC    08,CMP003                                          0035  00620000
*                                        /* STATUS TEST.              * 00630000
*         ERRFLG = ERRFLG | '20'X;       /* NO-SET ERROR FLAG         * 00640000
         OI    ERRFLG,X'20'                                       0036  00650000
* CMP003:                                                               00660000
*         IF RELVT4 = '0'B THEN          /* 2ND CSW STATUS TEST       * 00670000
CMP003   TM    0(@5),B'00010000'                                  0037  00680000
*           GO TO CMP004;                /* NO-BRANCH TO CSW COUNT    * 00690000
         BC    08,CMP004                                          0038  00700000
*                                        /* TEST.                     * 00710000
*         IF STATUS2 = RESTAT2 THEN      /* VALID CSW STATUS          * 00720000
         CLC   13(1,@5),9(@6)                                     0039  00730000
*           GO TO CMP004;                /* YES-BRANCH TO CSW COUNT   * 00740000
         BC    08,CMP004                                          0040  00750000
*                                        /* TEST.                     * 00760000
*         ERRFLG = ERRFLG | '10'X;       /* NO-SET ERROR FLAG         * 00770000
         OI    ERRFLG,X'10'                                       0041  00780000
* CMP004:                                                               00790000
*         IF RELVT5 = '0'B THEN          /* CSW COUNT TEST            * 00800000
CMP004   TM    0(@5),B'00001000'                                  0042  00810000
*           GO TO CMP005;                /* NO-BRANCH TO SENSE DATA   * 00820000
         BC    08,CMP005                                          0043  00830000
*                                        /* TEST.                     * 00840000
*         IF COUNT = RECNT THEN          /* VALID CSW COUNT           * 00850000
         CLC   14(2,@5),10(@6)                                    0044  00860000
*           GO TO CMP005;                /* YES-BRANCH TO SENSE DATA  * 00870000
         BC    08,CMP005                                          0045  00880000
*                                        /* TEST.                     * 00890000
*         ERRFLG = ERRFLG | '08'X;       /* NO-SET ERROR FLAG         * 00900000
         OI    ERRFLG,X'08'                                       0046  00910000
* CMP005:                                                               00920000
*         IF RELVT6 = '0'B THEN          /* SENSE DATA TEST           * 00930000
CMP005   TM    0(@5),B'00000100'                                  0047  00940000
*           GO TO CMP006;                /* NO-BRANCH TO DATA COMPARE * 00950000
         BC    08,CMP006                                          0048  00960000
*                                        /* TEST.                     * 00970000
*         IF EXPSNS(1:SNSCNT) = RECSNS(1:SNSCNT) THEN  /* VALID SENSE * 00980000
         LA    @E,12(0,@6)                                        0049  00990000
         SR    @4,@4                                              0049  01000000
         IC    @4,3(0,@5)                                         0049  01010000
         BCTR  @4,0                                               0049  01020000
         LA    @A,16(0,@5)                                        0049  01030000
         EX    @4,@CLC                                            0049  01040000
*           GO TO CMP006;                /* DATA-YES-BRANCH TO DATA   * 01050000
         BC    08,CMP006                                          0050  01060000
*                                        /* COMPARE TEST.             * 01070000
*         ERRFLG = ERRFLG | '04'X;       /* NO-SET ERROR FLAG         * 01080000
         OI    ERRFLG,X'04'                                       0051  01090000
*                                                                       01100000
*         IF SNSERR ¬= 'FF'X THEN        /* ERROR SENSE TEST VALID    * 01110000
         CLI   12(@6),X'FF'                                       0052  01120000
*           GO TO CMP006;                /* YES-BRANCH TO DATA COMPARE* 01130000
         BC    07,CMP006                                          0053  01140000
*                                        /* TEST.                     * 01150000
*         ERRFLG = ERRFLG | '02'X;       /* NO-SET ERROR FLAG.        * 01160000
         OI    ERRFLG,X'02'                                       0054  01170000
* CMP006:                                                               01180000
*         IF RELVT8 = '0'B THEN          /* DATA COMPARE TEST         * 01190000
CMP006   TM    0(@5),B'00000001'                                  0055  01200000
*           GO TO CMP007;                /* NO-BRANCH TO EXIT ROUTINE * 01210000
         BC    08,CMP007                                          0056  01220000
*         IF RECEIV(1:CNT) = EXPECT(1:CNT) THEN       /* VALID DATA   * 01230000
         L     @4,28(0,@5)                                        0057  01240000
         LR    @E,@4                                              0057  01250000
         SR    @7,@7                                              0057  01260000
         IC    @7,2(0,@5)                                         0057  01270000
         BCTR  @7,0                                               0057  01280000
         L     @C,24(0,@5)                                        0057  01290000
         LR    @A,@C                                              0057  01300000
         EX    @7,@CLC                                            0057  01310000
*           GO TO CMP007;                /* COMPARE-YES-BRANCH TO     * 01320000
         BC    08,CMP007                                          0058  01330000
*                                        /* EXIT ROUTINE              * 01340000
*         ERRFLG = ERRFLG | '01'X;       /* NO-SET ERROR FLAG         * 01350000
         OI    ERRFLG,X'01'                                       0059  01360000
* CMP007:                                                               01370000
*         IF ERRFLG = '00'X THEN         /* IF NO ERRORS OCCURRED     * 01380000
CMP007   CLI   ERRFLG,X'00'                                       0060  01390000
*           GO TO CMP008;                /* BRANCH TO NORMAL RETURN   * 01400000
         BC    08,CMP008                                          0061  01410000
*         SAVRTN = ERRTNAD;              /* ELSE-SET ERROR RETURN ADR.* 01420000
         L     @4,4(0,@D)                                         0062  01430000
         MVC   12(4,@4),4(@1)                                     0062  01440000
*         R15 = ERRFLG;             /* SET ERROR RETURN FLAGS         * 01450000
         SR    @F,@F                                              0063  01460000
         IC    @F,ERRFLG                                          0063  01470000
*           GO TO CMP009;                /* BRANCH TO RETURN          * 01480000
         BC    15,CMP009                                          0064  01490000
* CMP008:                                                               01500000
*         R15 = '00'X;                   /* SET NORMAL RETURN CODE    * 01510000
CMP008   LA    @F,X'00'                                           0065  01520000
* CMP009:                                                               01530000
*         RETURN;                        /* RETURN TO CALLER          * 01540000
*         END   IFDOLT09;                /* END OF COMPARE MODULE     * 01550000
@EL01    L     @D,4(0,@D)                                         0067  01560000
         L     @E,12(0,@D)                                        0067  01570000
         LM    @0,@C,20(@D)                                       0067  01580000
         BCR   15,@E                                              0067  01590000
@DATA1   EQU   *                                                        01600000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           01610000
@1       EQU   01                                                       01620000
@2       EQU   02                                                       01630000
@3       EQU   03                                                       01640000
@4       EQU   04                                                       01650000
@5       EQU   05                                                       01660000
@6       EQU   06                                                       01670000
@7       EQU   07                                                       01680000
@8       EQU   08                                                       01690000
@9       EQU   09                                                       01700000
@A       EQU   10                                                       01710000
@B       EQU   11                                                       01720000
@C       EQU   12                                                       01730000
@D       EQU   13                                                       01740000
@E       EQU   14                                                       01750000
@F       EQU   15                                                       01760000
@CLC     CLC   0(1,@A),0(@E)                                            01770000
         DS    0F                                                       01780000
         DS    0D                                                       01790000
@DATA    EQU   *                                                        01800000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   01810000
X        EQU   00000000            FULLWORD INTEGER                     01820000
R1       EQU   00000001            FULLWORD POINTER REGISTER            01830000
R5       EQU   00000005            FULLWORD POINTER REGISTER            01840000
R6       EQU   00000006            FULLWORD POINTER REGISTER            01850000
R13      EQU   00000013            FULLWORD POINTER REGISTER            01860000
R14      EQU   00000014            FULLWORD POINTER REGISTER            01870000
R15      EQU   00000015            FULLWORD POINTER REGISTER            01880000
A00000   EQU   00000000            8 BYTE(S) ON WORD                    01890000
A00001   EQU   A00000+00000000     FULLWORD POINTER                     01900000
CALLSA   EQU   A00000+00000004     FULLWORD POINTER                     01910000
A00002   EQU   00000000            16 BYTE(S) ON WORD                   01920000
A00003   EQU   A00002+00000000     12 BYTE(S)                           01930000
SAVRTN   EQU   A00002+00000012     FULLWORD POINTER                     01940000
A00004   EQU   00000000            8 BYTE(S) ON WORD                    01950000
CHKFLD   EQU   A00004+00000000     FULLWORD POINTER                     01960000
ERRTNAD  EQU   A00004+00000004     FULLWORD POINTER                     01970000
A00005   EQU   00000000            32 BYTE(S) ON WORD                   01980000
A00006   EQU   A00005+00000000     4 BYTE(S)                            01990000
RELVT    EQU   A00005+00000000     1 BYTE(S)                            02000000
RELVT1   EQU   A00005+00000000     1 BIT(S)                             02010000
RELVT2   EQU   A00005+00000000     1 BIT(S)                             02020000
RELVT3   EQU   A00005+00000000     1 BIT(S)                             02030000
RELVT4   EQU   A00005+00000000     1 BIT(S)                             02040000
RELVT5   EQU   A00005+00000000     1 BIT(S)                             02050000
RELVT6   EQU   A00005+00000000     1 BIT(S)                             02060000
RELVT7   EQU   A00005+00000000     1 BIT(S)                             02070000
RELVT8   EQU   A00005+00000000     1 BIT(S)                             02080000
A00007   EQU   A00005+00000001     1 BYTE(S)                            02090000
CNT      EQU   A00005+00000002     1 BYTE(S)                            02100000
SNSCNT   EQU   A00005+00000003     1 BYTE(S)                            02110000
TECBAD   EQU   A00005+00000004     FULLWORD POINTER                     02120000
A00008   EQU   A00005+00000008     4 BYTE(S)                            02130000
EXPCC    EQU   A00005+00000008     1 BYTE(S)                            02140000
ADDR1    EQU   A00005+00000009     3  BYTE  POINTER                     02150000
STATUS1  EQU   A00005+00000012     1 BYTE(S)                            02160000
STATUS2  EQU   A00005+00000013     1 BYTE(S)                            02170000
COUNT    EQU   A00005+00000014     2 BYTE(S)                            02180000
EXPSNS   EQU   A00005+00000016     8 BYTE(S)                            02190000
RECDATA  EQU   A00005+00000024     FULLWORD POINTER                     02200000
EXPDATA  EQU   A00005+00000028     FULLWORD POINTER                     02210000
RECEIV   EQU   00000000            256 BYTE(S)                          02220000
EXPECT   EQU   00000000            256 BYTE(S)                          02230000
A00009   EQU   00000000            20 BYTE(S) ON WORD                   02240000
A00010   EQU   A00009+00000000     4 BYTE(S)                            02250000
A00011   EQU   A00009+00000004     4 BYTE(S)                            02260000
TRECC    EQU   A00009+00000004     1 BYTE(S)                            02270000
TRECSW1  EQU   A00009+00000005     3 BYTE(S)                            02280000
RESTAT1  EQU   A00009+00000008     1 BYTE(S)                            02290000
RESTAT2  EQU   A00009+00000009     1 BYTE(S)                            02300000
RECNT    EQU   A00009+00000010     2 BYTE(S)                            02310000
RECSNS   EQU   A00009+00000012     8 BYTE(S)                            02320000
SNSERR   EQU   A00009+00000012     1 BYTE(S)                            02330000
A00012   EQU   A00009+00000013     7 BYTE(S)                            02340000
ERRFLG   EQU   @DATA+00000072      1 BYTE(S)                            02350000
         DS    00000073C                                                02360000
@TEMPS   DS    0F                                                       02370000
@TEMP3   DC    F'0'                                                     02380000
         IFDPATCH                      PATCH AREA                       02390000
@DATEND  EQU   *                                                        02400000
CMP009   EQU   @EL01                                                    02410000
         END   IFDOLT09                                                 02420000
./  ADD  SSI=32570898,NAME=IFDOLT10
         TITLE 'IFDOLT10 CONVERT MODULE'                                00010000
         TITLE 'IFDOLT10 CONVERT MODULE'                                00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT10 CSECT ,                                                  0002  00050000
         ST    @E,12(0,@D)                                        0002  00060000
         STM   @0,@C,20(@D)                                       0002  00070000
         BALR  @4,0                                               0002  00080000
@PSTART  DS    0H                                                 0002  00090000
         USING @PSTART+00000,@4                                   0002  00100000
*         R5=FROMADDR;              /* GET FROM ADDRESS INTO REG. 5.*/  00110000
         L     @5,0(0,@1)                                         0024  00120000
*         R6=TOADDR;                /* GET TO ADDRESS INTO REG. 6.  */  00130000
         L     @6,4(0,@1)                                         0025  00140000
*         R7=FLGCOUNT;              /* GET COUNT IN REG. 7.         */  00150000
         MVC   @TEMP2+2(2),14(@1)                                 0026  00160000
         L     @7,@TEMP2                                          0026  00170000
*         R7=R7&LOW15;                                                  00180000
         N     @7,LOW15                                           0027  00190000
*         IF R7=0 THEN              /* IF COUNT IS ZERO, RETURN TO  */  00200000
         LTR   @7,@7                                              0028  00210000
*           GO TO CNVERT06;         /* CALLER. OTHERWISE CONVERT.   */  00220000
         BC    08,CNVERT06                                        0029  00230000
*         AXFLGA='00'X;             /* CLEAR FLAG.                  */  00240000
         MVI   AXFLGA,X'00'                                       0030  00250000
*         ENDADDR=R5+R7;            /* FIND END OF CONVERSION DATA. */  00260000
         LR    @2,@7                                              0031  00270000
         AR    @2,@5                                              0031  00280000
*         R3=ADDR(AXATBL);          /* SET POINTER TO CHAR TABLE.   */  00290000
         LA    @3,AXATBL                                          0032  00300000
*         IF HEXBIT='1'B THEN       /* IS CONVERSION HEX TO EBCDIC. */  00310000
         TM    14(@1),B'10000000'                                 0033  00320000
*           GO TO CNVERT05;         /* YES, GO TO HEX TO EBCDIC     */  00330000
         BC    01,CNVERT05                                        0034  00340000
*                                   /* ROUTINE.                     */  00350000
* CNVERT01: /* EBCDIC TO HEX CONVERSION */                              00360000
*         DO I=16 TO 1 BY -1;       /* SEE IF INPUT CHAR HAS A VALID*/  00370000
CNVERT01 LA    @9,16                                              0035  00380000
*         IF INBUF=AXATBL(I) THEN   /* HEX NUMBER EQUIVALENT.       */  00390000
@DO9FF   LR    @8,@9                                              0036  00400000
         LA    @E,AXATBL-1(@8)                                    0036  00410000
         CLC   0(1,@5),0(@E)                                      0036  00420000
*           GO TO CNVERT02;         /* YES, CONVERT IT.             */  00430000
         BC    08,CNVERT02                                        0037  00440000
*         END;                                                          00450000
*         RC=INBUF;                 /* PUT BAD CHARACTER IN REG. 15 */  00460000
         BCT   @9,@DO9FF                                          0038  00470000
         SR    @F,@F                                              0039  00480000
         IC    @F,0(0,@5)                                         0039  00490000
*         GO TO CNVERT07;           /* AND RETURN TO CALLER.        */  00500000
         BC    15,CNVERT07                                        0040  00510000
* CNVERT02:                                                             00520000
*         R11=I-1;                  /* SAVE EQUIVALENT HEX CHAR.    */  00530000
CNVERT02 LH    @B,@D1                                             0041  00540000
         AR    @B,@9                                              0041  00550000
*         IF AXFLGA¬='00'X THEN     /* IF 2ND BYTE, GO TO ROUTINE   */  00560000
         CLI   AXFLGA,X'00'                                       0042  00570000
*           GO TO CNVERT03;         /* THAT WILL OUTPUT HEX EQUIV.  */  00580000
         BC    07,CNVERT03                                        0043  00590000
*         R12=R11*16;               /* PUT 1ST HEX CHAR IN R12  TFF001* 00600000
         LR    @F,@B                                              0044  00610000
         SLA   @F,4                                               0044  00620000
         LR    @C,@F                                              0044  00630000
*         AXFLGA='F0'X;             /* SET FLAG TO NON-ZERO TO      */  00640000
         MVI   AXFLGA,X'F0'                                       0045  00650000
*                                   /* INDICATE ONLY ONE CHARACTER  */  00660000
*                                   /* HAS BEEN CONVERTED.          */  00670000
*         GO TO CNVERT04;           /* GO TO ROUTINE THAT DETERMINES*/  00680000
         BC    15,CNVERT04                                        0046  00690000
*                                   /* IF MORE CONVERSION MUST BE   */  00700000
*                                   /* DONE                         */  00710000
* CNVERT03: /* OUTPUT ROUTINE FOR EBCDIC TO HEX CONVERSION  */          00720000
*         R12=R12|R11;              /* COMBINE TWO HEX CHARACTERS.  */  00730000
CNVERT03 OR    @C,@B                                              0047  00740000
*         GEN(STC   R12,0(R6));     /* PUT CHAR IN OUTPUT AREA.     */  00750000
         STC   R12,0(R6)                                                00760000
         DS    0H                                                       00770000
*         R6=R6+1;                  /* STEP TO ADDRESS BY 1.        */  00780000
         LA    @6,1(0,@6)                                         0049  00790000
*         AXFLGA='00'X;             /* SET FLAG TO ZERO.            */  00800000
         MVI   AXFLGA,X'00'                                       0050  00810000
* CNVERT04: /* IS MORE CONVERSION NECESSARY */                          00820000
*         R5=R5+1;                  /* STEP FROM ADDRESS BY 1.      */  00830000
CNVERT04 LA    @5,1(0,@5)                                         0051  00840000
*         IF R5<ENDADDR THEN        /* IS CONVERSION DONE. NO, GO   */  00850000
         CR    @5,@2                                              0052  00860000
*           GO TO CNVERT01;         /* AND DO IT.                   */  00870000
         BC    04,CNVERT01                                        0053  00880000
*         IF LSTCNT='1'B THEN       /* YES, WAS CONVERSION FROM EH  */  00890000
         TM    15(@1),B'00000001'                                 0054  00900000
         BC    12,@9FB                                            0054  00910000
*           GEN(STC   R12,0(R6));   /* FOR AN ODD NUMBER OF CHAR.   */  00920000
         STC   R12,0(R6)                                                00930000
         DS    0H                                                       00940000
*         GO TO CNVERT06;           /* NO, GO TO FINISH ROUTINE.    */  00950000
         BC    15,CNVERT06                                        0056  00960000
*                                   /* YES, PUT CONVERTED CHAR IN   */  00970000
*                                   /* OUTPUT  AREA.                */  00980000
* CNVERT05: /* HEX TO EBCDIC ROUTINE */                                 00990000
*         R9=INBUF;                 /* GET INPUT CHAR. INTO REG. 9. */  01000000
CNVERT05 SR    @9,@9                                              0057  01010000
         IC    @9,0(0,@5)                                         0057  01020000
*         R11=R9/16;                /* GET BIT3 0-3 OF INPUT CHAR   */  01030000
         LR    @E,@9                                              0058  01040000
         SRA   @E,4                                               0058  01050000
         LR    @B,@E                                              0058  01060000
*                                   /* INTO REG. 11.                */  01070000
*         R9=R9&15;                 /* GET BITS 4-7 OF INPUT CHAR   */  01080000
         N     @9,@D2                                             0059  01090000
*                                   /* INTO REG. 9.                 */  01100000
*         AXTBLPTR=R3+R11;          /* SET POINTER TO CHAR TABLE.   */  01110000
         LR    @7,@B                                              0060  01120000
         AR    @7,@3                                              0060  01130000
*         OUTBUF=AXATBLEL;          /* STORE FIRST EBCDIC CHAR IN   */  01140000
         MVC   0(1,@6),0(@7)                                      0061  01150000
*                                   /* OUTPUT AREA.                 */  01160000
*         AXTBLPTR=R3+R9;           /* SET POINTER TO CHAR TABLE.   */  01170000
         LR    @7,@9                                              0062  01180000
         AR    @7,@3                                              0062  01190000
*         OUTBUF1=AXATBLEL;         /* STORE SECOND EBCDIC CHAR IN  */  01200000
         MVC   1(1,@6),0(@7)                                      0063  01210000
*                                   /* OUTPUT AREA.                 */  01220000
*         R6=R6+2;                  /* STEP TO ADDRESS BY 2.        */  01230000
         LA    @6,2(0,@6)                                         0064  01240000
*         R5=R5+1;                  /* STEP FROM ADDRESS BY 1.      */  01250000
         LA    @5,1(0,@5)                                         0065  01260000
*         IF R5<ENDADDR THEN        /* IS CONVERSION DONE. NO, GO   */  01270000
         CR    @5,@2                                              0066  01280000
*           GO TO CNVERT05;         /* AND DO IT. YES, EXIT.        */  01290000
         BC    04,CNVERT05                                        0067  01300000
* CNVERT06: /* FINISH ROUTINE FOR SUCCESSFUL CONVERSION */              01310000
*         RC=0;                     /* SET RETURN CODE TO ZERO TO   */  01320000
CNVERT06 SR    @F,@F                                              0068  01330000
*                                   /* INDICATE SUCCESSFUL CONVERT. */  01340000
* CNVERT07: /* RESTORE REGISTERS AND RETURN */                          01350000
*         RETURN;                   /* RETURN TO CALLER             */  01360000
*         END;                                                          01370000
@EL01    L     @E,12(0,@D)                                        0070  01380000
         LM    @0,@C,20(@D)                                       0070  01390000
         BCR   15,@E                                              0070  01400000
@DATA1   EQU   *                                                        01410000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           01420000
@1       EQU   01                                                       01430000
@2       EQU   02                                                       01440000
@3       EQU   03                                                       01450000
@4       EQU   04                                                       01460000
@5       EQU   05                                                       01470000
@6       EQU   06                                                       01480000
@7       EQU   07                                                       01490000
@8       EQU   08                                                       01500000
@9       EQU   09                                                       01510000
@A       EQU   10                                                       01520000
@B       EQU   11                                                       01530000
@C       EQU   12                                                       01540000
@D       EQU   13                                                       01550000
@E       EQU   14                                                       01560000
@F       EQU   15                                                       01570000
@D2      DC    F'15'                                                    01580000
@D1      DC    H'-1'                                                    01590000
         DS    0F                                                       01600000
         DS    0D                                                       01610000
@DATA    EQU   *                                                        01620000
PL       EQU   00000001            FULLWORD POINTER REGISTER            01630000
ENDADDR  EQU   00000002            FULLWORD POINTER REGISTER            01640000
R3       EQU   00000003            3  BYTE  POINTER REGISTER            01650000
R5       EQU   00000005            3  BYTE  POINTER REGISTER            01660000
R6       EQU   00000006            3  BYTE  POINTER REGISTER            01670000
AXTBLPTR EQU   00000007            FULLWORD POINTER REGISTER            01680000
R7       EQU   00000007            FULLWORD POINTER REGISTER            01690000
R8       EQU   00000008            FULLWORD POINTER REGISTER            01700000
I        EQU   00000009            3  BYTE  POINTER REGISTER            01710000
R9       EQU   00000009            FULLWORD POINTER REGISTER            01720000
R11      EQU   00000011            FULLWORD POINTER REGISTER            01730000
R12      EQU   00000012            FULLWORD POINTER REGISTER            01740000
RC       EQU   00000015            3  BYTE  POINTER REGISTER            01750000
LOW15    EQU   *                   4 BYTE(S) ON WORD                    01760000
         DC    X'00007FFF'                                              01770000
PARMLIST EQU   00000000            16 BYTE(S) ON WORD                   01780000
FROMADDR EQU   PARMLIST+00000000   FULLWORD POINTER                     01790000
TOADDR   EQU   PARMLIST+00000004   FULLWORD POINTER                     01800000
A00000   EQU   PARMLIST+00000008   FULLWORD POINTER                     01810000
A00001   EQU   PARMLIST+00000012   2 BYTE(S)                            01820000
FLGCOUNT EQU   PARMLIST+00000014   HALFWORD POINTER                     01830000
HEXBIT   EQU   PARMLIST+00000014   1 BIT(S)                             01840000
A00002   EQU   PARMLIST+00000014   14 BIT(S)                            01850000
LSTCNT   EQU   PARMLIST+00000015   1 BIT(S)                             01860000
AXATBL   EQU   *                   16 BYTE(S)                           01870000
         DC    C'0123456789ABCDEF'                                      01880000
AXFLGA   EQU   @DATA+00000020      1 BYTE(S)                            01890000
INBUF    EQU   00000000            1 BYTE(S)                            01900000
OUTAREA  EQU   00000000            2 BYTE(S)                            01910000
OUTBUF   EQU   OUTAREA+00000000    1 BYTE(S)                            01920000
OUTBUF1  EQU   OUTAREA+00000001    1 BYTE(S)                            01930000
AXATBLEL EQU   00000000            1 BYTE(S)                            01940000
         ORG   @DATA                                                    01950000
         DS    00000021C                                                01960000
@TEMPS   DS    0F                                                       01970000
@TEMP2   DC    F'0'                                                     01980000
@DATEND  EQU   *                                                        01990000
@9FB     EQU   CNVERT06                                                 02000000
CNVERT07 EQU   @EL01                                                    02010000
         END                                                            02020000
./  ADD  SSI=32570899,NAME=IFDOLT11
         TITLE '         IFDOLT11--RANDOM DATA GENERATOR.'              00010000
         TITLE 'IFDOLT11--RANDOM DATA GENERATOR.'                       00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT11 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT11 14 SEP 73'                             0002  00070000
         STM   @E,@C,12(@D)                                       0002  00080000
         BALR  @4,0                                               0002  00090000
@PSTART  DS    0H                                                 0002  00100000
         USING @PSTART+00000,@4                                   0002  00110000
*  R8=R1;                                /* PARAMETER LIST ADDRESS */   00120000
         LR    @8,@1                                              0016  00130000
*  R5=RINPA;                             /* INPUT ADDRESS */            00140000
         L     @5,0(0,@8)                                         0017  00150000
*  H4=RCNT4&'03'X;                       /* EXCESS OF MULTIPLES */      00160000
         MVI   H4,X'03'                                           0018  00170000
         NC    H4(1),11(@8)                                       0018  00180000
*  IF RD10=0 THEN                        /* RANDOM NUMBER IS ZERO */    00190000
         CLC   RD10(4),@D1                                        0019  00200000
         BC    07,@9FF                                            0019  00210000
*    RD103='1234'X;                      /* OBTAIN A RANDOM NUMBER */   00220000
         MVC   RD10+2(2),@X2                                      0020  00230000
*  I4='04'X;                             /* FOUR BYTES PER MULTIPLE */  00240000
@9FF     MVI   I+3,X'04'                                          0021  00250000
*  DO R6=(RCNT+3)/4 TO 1 BY -1;          /* MOVE FOUR BYTES AT A TIME * 00260000
         LA    @E,3                                               0022  00270000
         A     @E,8(0,@8)                                         0022  00280000
         SRDA  @E,32                                              0022  00290000
         LA    @0,4                                               0022  00300000
         DR    @E,@0                                              0022  00310000
         LTR   @6,@F                                              0022  00320000
         BC    12,@DO9FD                                          0022  00330000
@DO9FE   EQU   *                                                  0022  00340000
*     GEN(L     15,RD11);                /* OBTAIN AND         SA56524* 00350000
         L     15,RD11                                                  00360000
         DS    0H                                                       00370000
*     GEN(M     14,RD10);                /*   STORE A          SA56524* 00380000
         M     14,RD10                                                  00390000
         DS    0H                                                       00400000
*     GEN(SRDL  14,2);                   /*     RANDOM         SA56524* 00410000
         SRDL  14,2                                                     00420000
         DS    0H                                                       00430000
*     GEN(ST    15,RD10);                /*       NUMBER       SA56524* 00440000
         ST    15,RD10                                                  00450000
         DS    0H                                                       00460000
*    IF R6=1 THEN                        /* LAST DATA TO BE STORED */   00470000
         CH    @6,@D2                                             0027  00480000
         BC    07,@9FA                                            0027  00490000
*      IF H4>'00'X THEN                  /* EXCESS OF MULTIPLES */      00500000
         CLI   H4,X'00'                                           0028  00510000
         BC    12,@9F9                                            0028  00520000
*        I4=H4;                          /* LESS THAN A MULTIPLE */     00530000
         MVC   I+3(1),H4                                          0029  00540000
*    RDDT1(1:I)=RD10;                    /* DATA INTO STORAGE AREA */   00550000
@9F9     EQU   *                                                  0030  00560000
@9FA     LA    @E,RD10                                            0030  00570000
         L     @1,I                                               0030  00580000
         BCTR  @1,0                                               0030  00590000
         LR    @A,@5                                              0030  00600000
         EX    @1,@MVC                                            0030  00610000
*    R5=ADDR(RDDT2);                     /* NEXT STORAGE AREA */        00620000
         LA    @5,4(0,@5)                                         0031  00630000
*  END;                                  /* DATA STORAGE COMPLETED */   00640000
*  RETURN;                               /* RETURN TO CALLER */         00650000
         BCT   @6,@DO9FE                                          0032  00660000
* END;                                   /* END RANDOM DATA GENERATOR * 00670000
@EL01    LM    @E,@C,12(@D)                                       0034  00680000
         BCR   15,@E                                              0034  00690000
@DATA1   EQU   *                                                        00700000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00710000
@1       EQU   01                                                       00720000
@2       EQU   02                                                       00730000
@3       EQU   03                                                       00740000
@4       EQU   04                                                       00750000
@5       EQU   05                                                       00760000
@6       EQU   06                                                       00770000
@7       EQU   07                                                       00780000
@8       EQU   08                                                       00790000
@9       EQU   09                                                       00800000
@A       EQU   10                                                       00810000
@B       EQU   11                                                       00820000
@C       EQU   12                                                       00830000
@D       EQU   13                                                       00840000
@E       EQU   14                                                       00850000
@F       EQU   15                                                       00860000
@D1      DC    F'0'                                                     00870000
@D2      DC    H'1'                                                     00880000
@MVC     MVC   0(1,@A),0(@E)                                            00890000
         DS    0F                                                       00900000
@X2      DC    X'1234'                                                  00910000
         DS    0D                                                       00920000
@DATA    EQU   *                                                        00930000
R1       EQU   00000001            FULLWORD POINTER REGISTER            00940000
R5       EQU   00000005            FULLWORD POINTER REGISTER            00950000
R6       EQU   00000006            FULLWORD POINTER REGISTER            00960000
R7       EQU   00000007            FULLWORD POINTER REGISTER            00970000
R8       EQU   00000008            FULLWORD POINTER REGISTER            00980000
R10      EQU   00000010            FULLWORD POINTER REGISTER            00990000
A00000   EQU   00000000            8 BYTE(S) ON WORD                    01000000
RDDT1    EQU   A00000+00000000     4 BYTE(S)                            01010000
RDDT2    EQU   A00000+00000004     4 BYTE(S)                            01020000
A00001   EQU   00000000            12 BYTE(S) ON WORD                   01030000
RINPA    EQU   A00001+00000000     FULLWORD POINTER                     01040000
A00002   EQU   A00001+00000004     FULLWORD POINTER                     01050000
RCNT     EQU   A00001+00000008     FULLWORD INTEGER                     01060000
A00003   EQU   A00001+00000008     3 BYTE(S)                            01070000
RCNT4    EQU   A00001+00000011     1 BYTE(S)                            01080000
I        EQU   *                   FULLWORD INTEGER                     01090000
         DC    FL4'0'                                                   01100000
A00004   EQU   I+00000000          3 BYTE(S)                            01110000
I4       EQU   I+00000003          1 BYTE(S)                            01120000
RD10     EQU   @DATA+00000004      4 BYTE(S) ON WORD                    01130000
A00005   EQU   RD10+00000000       2 BYTE(S)                            01140000
RD103    EQU   RD10+00000002       2 BYTE(S)                            01150000
         ORG   @DATA+00000008                                           01160000
A00006   EQU   *                   FULLWORD INTEGER                     01170000
         DC    FL4'65539'                                               01180000
RD11     EQU   A00006+00000000     4 BYTE(S)                            01190000
H4       EQU   @DATA+00000012      1 BYTE(S)                            01200000
         ORG   @DATA                                                    01210000
         DS    00000013C                                                01220000
@TEMPS   DS    0F                                                       01230000
@DATEND  EQU   *                                                        01240000
@DO9FD   EQU   @EL01                                                    01250000
         END                                                            01260000
./  ADD  SSI=80450071,NAME=IFDOLT12
         TITLE 'IFDOLT12 - OLTEP LOADER'                                00100002
IFDOLT12 CSECT                                                          00200002
         ENTRY OLTDCB                   OLTCDSDD DCB             Y02008 00200402
*********************************************************************** 00200902
*                                                                     * 00201802
* MODULE NAME= IFDOLT12                                               * 00201902
*                                                                     * 00202002
* DESCRIPTIVE NAME= OLTEP LOADER                                      * 00202102
*                                                                     * 00202202
* COPYRIGHT= NONE                                                     * 00202302
*                                                                     * 00202402
* STATUS: CHANGE LEVEL 000     SUPPORT CODE: X02008                   * 00202702
*                                                                     * 00203602
* FUNCTION:                                                           * 00204502
*           1. CALCULATES THE SIZE OF THE MODULE (OLT AND PLINK).     * 00205402
*              IF IT IS NOT A CDS LOAD, IT WILL PASS THE SIZE BACK    * 00206302
*              TO THE CALLER. IF IT IS A CDS LOAD, IT WILL LOAD THE   * 00207202
*              REQUESTED NUMBER OF BYTES INTO CORE.                   * 00208102
*                                                                     * 00209002
*           2. LOADS THE REQUESTED OLT, PLINK OR CDS INFORMATION      * 00209902
*              AND RETURNS THE STARTING ADDRESS OF THE LOADED MODULE  * 00210802
*              TO THE CALLER.                                         * 00211702
*                                                                     * 00212602
* ENTRY POINTS: IFDOLT12                                              * 00213502
*                                                                     * 00214402
* INPUT: UPON ENTRY TO THIS MODULE REGISTER 1 POINTS TO A LIST WITH   * 00215302
*        THE FOLLOWING PARAMETERS:                                    * 00216202
*                   DS    C  INDICATORS FOR TRANSIENT MANAGER         * 00217102
*                   DS    C  MACRO LEVEL                              * 00218002
*                   DS    2C IDENTITY OF MACRO EXPANSION              * 00218902
*                   DS    F  POINTER TO PARAMETER LIST                * 00219802
*        THIS PARAMETER LIST HAS THE FOLLOWING FORMAT:                * 00220702
*                   DS    8C MODULE NAME                              * 00221602
*                   DS    F  POINTER TO WHERE MODULE SHOULD BE LOADED * 00222502
*                   DS    C  FLAGS                                    * 00223402
*                   DS    C  RESERVED FOR FUTURE USE                  * 00224302
*                   DS    H  CDS MODULE COUNT                         * 00225202
*                                                                     * 00226102
* OUTPUT:  REGISTER 0 WILL CONTAIN MODULE SIZE(FOR COMPUTE REQUEST)   * 00227002
*          REGISTER 1 WILL CONTAIN STARTING ADDRESS OF LOADED MODULE. * 00227902
*          REGISTER 15 WILL CONTAIN RETURN CODES:                     * 00228802
*                   X'00'   LOAD SUCCESSFUL/COMPUTE SUCCESSFUL        * 00229702
*                   X'04'   NO END CARD                               * 00230602
*                   X'08'   READ ERROR                                * 00231502
*                   X'0C'   MODULE NOT FOUND                          * 00232402
*                   X'10'   REP CARD ERROR                            * 00233302
*                   X'14'   LOAD CALLED BEFORE COMPUTE                * 00234202
*                   X'18'   ORDER ERROR                               * 00235102
*                                                                     * 00236002
*          THE FOLLOWING MESSAGES ARE OUTPUTTED:                      * 00236902
*                                                                     * 00237802
*                 1. IFD202I  -  THIS MESSAGE WILL INFORM THE USER    * 00238702
*                                THAT AN INVALID REP CARD EXISTS FOR  * 00239602
*                                THE SPECIFIED TEST SECTION.          * 00240502
*                 2. IFD203I  -  THIS MESSAGE TELLS THE USER THAT AN  * 00241402
*                                END OF FILE INDICATION OCCURED       * 00242302
*                                UNEXPECTANTLY. DATASET MAY HAVE BEEN * 00243202
*                                CREATED INCORRECTLY.                 * 00244102
*                 3. IFD205I  -  THIS MESSAGE TELLS THE USER THAT AN  * 00245002
*                                I/O ERROR OCCURED DURING THE LOADING * 00245902
*                                OF THE TEST SECTION.                 * 00246802
*                 4. IFD901I  -  THIS MESSAGE TELLS THE USER THAT THE * 00247702
*                                DD CARD NAMED XXXXXXXX COULD NOT BE  * 00248602
*                                OPENED, THEREFORE THE DATASET IS NOT * 00249502
*                                ACCESSIBLE.                          * 00250402
*                 5. IFD911I  -  THIS MESSAGE TELLS THE USER THAT AN  * 00251302
*                                INVALID OR UNRECOGNIZEABLE CONTROL   * 00252202
*                                CARD HAS BEEN DETECTED. DATASET MAY  * 00253102
*                                HAVE BEEN CREATED INCORRECTLY.       * 00254002
*                                                                     * 00254902
* EXTERNAL ROUTINES:                                                  * 00255802
*                                                                     * 00256702
*          THIS MODULE WILL ISSUE THE FOLLOWING SYSTEM MACROS:        * 00257602
*                                                                     * 00258502
*                 1. OPEN   TO INITIATE PROCESSING OF REQUIRED DATASET* 00259402
*                 2. CLOSE  TO COMPLETE PROCESSING OF DATA SETS       * 00260302
*                 3. FIND   TO DETERMINE IF A MODULE EXISTS           * 00261202
*                 4. POINT  TO FIND THE RECORD THAT MUST BE READ      * 00262102
*                 5. READ   TO GET THE CONTROL CARDS & MODULE TEXT    * 00263002
*                            INTO CORE                                * 00263902
*                 6. CHECK  TO WAIT FOR COMPLETION OF READ REQUEST    * 00264802
*                 7. NOTE   TO KEEP TRACK OF THE LAST RECORD READ     * 00265702
*                 8. DCB    TO DEFINE THE OLT LIB DCB                 * 00266602
*                 9. SAVE   TO SAVE REGISTERS                         * 00267502
*                 10.SYNADAFF  TO PERFORM SYNAD ANALYSIS       @ZA14111 00267737
*                 11.SYNADRLS  TO RELEASE SAVE AREA OBTAINED   @ZA14111 00267937
*                              BY SYNADAD                      @ZA14111 00268137
*                                                                     * 00268402
* NORMAL EXITS:                                                       * 00269302
*          TO CALLER WITH RETURN CODE EQUAL TO ZERO.                  * 00270202
*                                                                     * 00271102
* ERROR EXITS:                                                        * 00272002
*          TO CALLER WITH RETURN CODE NOT EQUAL TO ZERO               * 00272902
*                                                                     * 00273802
* TABLES/WORKAREAS:                                                   * 00274702
*          PATCH12 - PATCH AREA                                       * 00275602
*          SAVEAREA- SAVE AREA                                        * 00276502
*          BUFFER  - READ IN BUFFER FOR CONTROL RECORDS(IE ESD, ETC)  * 00277402
*          RLCOREAD- REAL CORE ADDRESS OF MODULE                      * 00278302
*          ASSEMAD - ASSEMBLED ADDRESS OF MODULE(RELATIVE TO ZERO)    * 00279202
*          B28WORK - WORK AREA                                        * 00280102
*          WORK    - WORK AREA                                        * 00281002
*          RELFT   - RELOCATION FACTOR FOR RLD DATA ITEMS             * 00281902
*          RDBUFAD - ADDRESS/POINTER TO READ IN AREA                  * 00282802
*          RDLNGTH - LENGTH OF READ                                   * 00283702
*          RETCODE - RETURN CODE SAVE AREA (DEBUG AID)                * 00284602
*          TTRZ    - TTRZ FOR READ ROUTINE                            * 00285502
*          SIZEAREA- AREA USED TO STORE MODULE SIZE                   * 00286402
*          OLTDCB  - DCB FOR OLT LIBRARY                              * 00287302
*          CHARTBL - TABLE USED TO VALIDATE REP DATA                  * 00288202
*          LDSWITCH- INTERNAL FLAG BYTE                               * 00289102
*             BIT 0- COMPUTE HAS BEEN DONE FOR REQUESTED MODULE       * 00290002
*             BIT 1- THIS IS A TRUNCATED(CDS) LOAD REQUEST            * 00290902
*             BIT 2- TXTHDR & TXT INFORMATION MUST BE PROCESSED       * 00291802
*             BIT 3- COMPUTE HAS BEEN STARTED                         * 00292702
*             BIT 4- FLAG USED TO INDICATE WHICH BYTE OF REP DATA     * 00293602
*                    BEING CONVERTED                                  * 00294502
*             BIT 5- I/O ERROR OCCURED ON LOAD                        * 00295402
*             BIT 6- UNUSED AT PRESENT TIME                           * 00296302
*             BIT 7- UNUSED AT PRESENT TIME                           * 00297202
*                                                                     * 00298102
* CHANGE ACTIVITY = AS FOLLOWS                                        * 00299002
*    PTM XM0088 ADDITION OF CDS EQUATING SUPPORT               XM0088 * 00299302
*    PTM XM0794 FIX MISSING BASE REG AND CORRECT PARMLIST LBLS XM0794 * 00299602
*    APAR XA29758 PROVIDE SUPPORT FOR SOSPC RELEASE 10         @ZA29758 00300000
*********************************************************************** 00400000
*                               EQUATES                               * 00500000
*********************************************************************** 00600002
*                              REGISTERS                              * 00700002
*********************************************************************** 00800002
R0       EQU   0                       REGISTER 0                       00900002
R1       EQU   1                       REGISTER 1                       01000002
R2       EQU   2                       REGISTER 2                       01100002
R3       EQU   3                       REGISTER 3                       01200002
R4       EQU   4                       REGISTER 4                       01300002
R5       EQU   5                       REGISTER 5                       01400002
R6       EQU   6                       REGISTER 6                       01500002
R7       EQU   7                       REGISTER 7                       01600002
R8       EQU   8                       REGISTER 8                       01700002
R9       EQU   9                       REGISTER 9                       01800002
R10      EQU   10                      REGISTER 10                      01900002
R11      EQU   11                      BASE REGISTER                    02000002
R12      EQU   12                      REGISTER 12                      02100002
R13      EQU   13                      REGISTER 13                      02200002
R14      EQU   14                      REGISTER 14                      02300002
R15      EQU   15                      REGISTER 15                      02400002
REPPTR   EQU   1                       POINTER TO WHERE REP STARTS      02500002
DEBREG   EQU   1                       POINTER TO NEEDED DEB     Y02008 02550002
PLISTREG EQU   3                       PARAMETER LIST POINTER           02600002
FROMADDR EQU   5                       FROM ADDRESS FOR CONVERT         02700002
TOADDR   EQU   6                       TO ADDRESS FOR CONVERT           02800002
LNGTHREG EQU   6                       LENGTH OF READ                   02900002
COUNT    EQU   7                       COUNT FOR CONVERSION ROUTINE     03000002
DATAPTR  EQU   8                       POINTER TO RLD DATA FIELD        03100002
CHAR     EQU   8                       CHARACTER TO BE MATCHED          03200002
NAMEPTR  EQU   8                       POINTER TO MODULE NAME           03300002
RLDBTCNT EQU   9                       NO OF 4 BYTE AREAS IN RLD CARD   03400002
DCBPTR   EQU   9                       POINTER TO NEEDED DCB            03500002
REPBYTE  EQU   9                       CHARACTER TO BE CONVERTED        03600002
TXTBTCNT EQU   9                       TXT BYTE COUNT                   03700002
ESDBTCNT EQU   9                       ESD BYTE COUNT                   03800002
AREAPTR  EQU   10                      POINTER TO READ BUFFER           03900002
TTRZPTR  EQU   10                      POINTER TO TTRZ FOR READ         04000002
INDEX    EQU   10                      INDEX REGISTER                   04100002
*********************************************************************** 04200002
*                       INTERNAL FLAG EQUATES                         * 04300002
*********************************************************************** 04400002
CPTSW    EQU   X'80'                   COMPUTE DONE                     04500002
TRNCL    EQU   X'40'                   TRUNCATED LOAD                   04600002
TWOREADS EQU   X'20'                   TWO READS REQUESTED              04700002
CMPTSTRT EQU   X'10'                   COMPUTE HAS BEEN STARTED         04800002
IOERROR  EQU   X'04'                   I/O ERROR FLAG                   04900002
*********************************************************************** 05000002
*                       PARAMETER LIST EQUATES                        * 05100002
*********************************************************************** 05200002
PLNK     EQU   X'80'                   PLINK REQUESTED                  05300002
CMPTE    EQU   X'40'                   COMPUTE REQUESTED                05400002
CDS      EQU   X'20'                   CDS LOAD                         05500002
SYMBOLIC EQU   X'08'                   SYMBOLIC CDS                     05550002
NAME     EQU   0                       MODULE NAME DISPLACEMENT         05600002
AD       EQU   8                       REAL CORE ADDRESS DISPLACEMENT   05700002
FLAG     EQU   12                      FLAG FIELD DISPLACEMENT          05800002
TCNT     EQU   14                      TRUNCATED COUNT DISPLACEMENT     05900002
*********************************************************************** 06000002
*                       MISCELLANEOUS EQUATES                         * 06100002
*********************************************************************** 06200002
TWICE    EQU   2                       MULTIPLY BY FOUR                 06300002
D0       EQU   0                       DISPLACEMENT ZERO                06400002
SAMEPTR  EQU   1                       SAME ESD ID                      06500002
D1       EQU   1                       DISPLACEMENT ONE                 06600002
D4       EQU   4                       DISPLACEMENT FOUR                06700002
L3       EQU   3                       LENGTH THREE                     06800002
TMFLG    EQU   X'01'                   TRANSIENT MANAGER FLAG           06900002
OFLGS    EQU   X'10'                   OPEN FLAG                        07000002
ZEROONE  EQU   X'01'                   HEX 01                           07200002
HIHALF   EQU   240                     HIGH HALF OF A BYTE              07300002
ALL      EQU   255                     WHOLE BYTE                       07400002
NEW      EQU   X'10'                   NEW OLT                          07500002
OLD      EQU   X'20'                   OLD OLT                          07600002
TYTST    EQU   X'04'                   ESD TYPE                         07700002
FIRST    EQU   X'F7'                   FIRST BYTE OF DATA FLAG          07800002
SECOND   EQU   X'08'                   SECOND BYTE OF DATA FLAG         07900002
RLDFLG   EQU   X'02'                   POS OR NEG RELOCATION            08000002
VIRTREAL EQU   X'01'                   OLT-VIRTUAL OR REAL       X03008 08000802
VIRTUAL  EQU   X'20'                   OLT CAN RUN IN VIRTUAL    X03008 08001602
REAL     EQU   X'DF'                   OLT MUST RUN IN REAL      X03008 08002402
ROOTID   EQU   C'T'                    FIRST LETTER OF A ROOT MOD NAME C08003202
                                       USED IN V=V V=R INIT      X03008 08004002
D44      EQU   44                      DISPLACEMENT 44           Y02008 08005002
D66      EQU   66                      DISPLACEMENT 66           Y02008 08007002
MSG202   EQU   100                      DISPLACEMENT TO MSG IFD202I     08010002
MSG203   EQU   104                      DISPLACEMENT TO MSG IFD203I     08020002
MSG205   EQU   108                      DISPLACEMENT TO MSG IFD205I     08030002
MSG911   EQU   112                     DISPLACEMENT TO MSG IFD911I      08040002
MSG901   EQU   116                      DISPLACEMENT TO MSG IFD901I     08050002
MSG899   EQU   128                     DISP TO MSG IFD899I       Y02008 08070002
         EJECT                                                          08100002
         SAVE  (14,12),,IFDOLT12&SYSDATE                                08200002
         BALR  R11,0                   ESTABLISH ADDRESSABILITY         08500002
         USING *,R11                                                    08600002
         ST    R13,SAVEAREA+4          SAVE CALLERS SAVE AREA POINTER  C08700002
                                       IN MY SAVE AREA                  08800002
         LA    R15,SAVEAREA            GET ADDRESS OF THE SAVE AREA     08900002
         ST    R15,8(0,R13)            STORE ADDRESS OF MY SAVE AREA   C09000002
                                       IN CALLERS SAVE AREA             09100002
         LR    R13,R15                 PLACE MY SAVE AREA ADDRESS IN   C09200002
                                       REGISTER 13                      09300002
         USING CHASCT,R2                                                09400002
*********************************************************************** 09500002
*                             INITIALIZE                              * 09600002
*********************************************************************** 09700002
         L     PLISTREG,4(R1)          PUT POINTER TO PARAMETER LIST   C09800002
                                       IN REG 3                         09900002
         MVC   RLCOREAD(4),AD(PLISTREG) GET REAL CORE ADDRESS OF WHERE C10000002
                                       MODULE SHOULD BE LOADED          10100002
         NI    LDSWITCH,CPTSW          TURN OFF ALL INTERNAL FLAGS     C10200002
                                       EXCEPT FOR COMPUTE               10300002
         MVI   CDSIND,X'00'             ZERO INDICATOR         XM0088   10303002
         TM    TABLNGTH+2,X'40'         TEST CDS EQUATE BIT    XM0088   10306002
         BZ    LDINIT08                 NO CDS EQUATE ENTRY    XM0088   10309002
         TM    FLAG(PLISTREG),CDS       TEST PARAMETER FLAG    XM0088   10312002
         BZ    LDINIT08                 NO CDS REQUEST         XM0088   10315002
         CLC   NAME+1(3,PLISTREG),=C'000' CHECK CDS NAME       XM0794   10318002
         BNE   LDINIT08                 NOT CREATED FROM DEVICEXM0088   10321002
         MVC   SREALDEV(4),NAME+4(PLISTREG) SAVE REAL DEVICE   XM0088   10324002
         LA    R1,EHLIST                CONVERT PARAMETER LIST XM0088   10327002
         L     R15,TAB28                TRANSIENT MANAGER      XM0088   10330002
         BALR  R14,R15                  GO TO ENTRY POINT      XM0088   10333002
         LA    R4,16                    MAXIMUM CDS ENTRIES    XM0088   10336002
         L     R5,MCT+128               ROOT MODULE ADDRESS    XM0088   10339002
         LA    R5,32(R5)                RESIDENT CDS TABLE     XM0088   10342002
LDINIT02 DS    0H                                              XM0088   10345002
         CLC   0(2,R5),SREALHEX         CHECK CDS DEVICE       XM0088   10348002
         BE    LDINIT03                 DEVICE IN TABLE        XM0088   10351002
         LA    R5,4(R5)                 NEXT DEVICE            XM0088   10354002
         BCT   R4,LDINIT02              CHECK NEXT ITEM        XM0088   10357002
         B     LDINIT08                 NORMAL CDS REQUEST     XM0088   10360002
LDINIT03 DS    0H                                              XM0088   10363002
         MVC   SCDSHEX(2),2(R5)         CDS EQUATE DEVICE      XM0088   10366002
         LA    R1,HELIST                CONVERT PARAMETER LIST XM0088   10369002
         L     R15,TAB28                TRANSIENT MANAGER      XM0088   10372002
         BALR  R14,R15                  GO TO ENTRY POINT      XM0088   10375002
         MVI   CDSIND,X'80'             EQUATED CDS NAME USED  XM0088   10378002
         MVC   NAME+4(4,PLISTREG),SCDSDEV NEW NAME TO USE      XM0088   10381002
LDINIT08 DS    0H                                              XM0088   10384002
         TM    FLAG(PLISTREG),CMPTE    IS THIS A COMPUTE REQUEST        10400002
         BNO   LDTXT006                NO, GO TO CODE THAT WILL LOAD   C10500002
                                       AND RELOCATE THE MODULE          10600002
         NI    LDSWITCH,0              TURN OFF INTERNAL COMPUTE SWITCHC10700002
                                       THIS IS A NEW REQUEST            10800002
         XC    BUFFER(80),BUFFER       CLEAR READ BUFFER                10900002
         SPACE 1                                                        11000002
*********************************************************************** 11100002
*                         ESD CARD HANDLING                           * 11200002
*********************************************************************** 11300002
LDESD001 EQU   *                                                        11400002
         BAL   R4,LDIOSUB              GO TO IO SUBROUTINE TO READ     C11500002
                                       FIRST ESD CARD                   11600002
         CLC   BUFFER+1(L3),=C'ESD'    IS THIS AN ESD CARD              11700002
         BNE   LDESD001                NO, FIND FIRST ESD               11800002
         CLC   BUFFER+14(2),ONE1       IS THIS THE FIRST ESD CARD       11900002
         BNE   LDESD001                NO, FIND FIRST ESD               12000002
         SPACE 1                                                        12100002
LDESD006 EQU   *                                                        12200002
         CLC   BUFFER+16(8),NAME(PLISTREG) DOES THIS ESD CARD HAVE NAMEC12300002
                                       OF REQUESTED UNIT TEST MODULE    12400002
         BE    LDESD011                YES, GO TO ROUTINE THAT WILL    C12500002
                                       CONTINUE ESD PROCESSING          12600002
         CLC   BUFFER+32(8),NAME(PLISTREG) DOES THIS ESD CARD HAVE NAMEC12700002
                                       OF REQUESTED UNIT TEST MODULE    12800002
         BNE   LDESD001                NO, GO TO ROUTINE THAT WILL GET C12900002
                                       NEXT CARD                        13000002
         SPACE 1                                                        13100002
LDESD011 EQU   *                                                        13200002
         OI    LDSWITCH,CPTSW          TURN ON INTERNAL COMPUTE FLAG    13300002
         TM    FLAG(PLISTREG),CDS+PLNK IS THIS REQUEST FOR A CDS OR    C13400002
                                       PLINK MODULE                     13500002
         BM    LDESD021                YES, BYPASS DETERMINING IF THIS C13600002
                                       IS A NEW OLT                     13700002
         NI    CESWT,ALL-OLD-NEW       CLEAR OLD AND NEW TEST FLAGS     13800002
         CLC   BUFFER+32(3),=CL3'#OL'  IS THIS A NEW OLT       @ZA29758 13900000
         BNE   LDESD016                NO, GO TO ROUTINE THAT WILL SET C14000002
                                       OLD UNIT TEST FLAG               14100002
         OI    CESWT,NEW               SET NEW UNIT TEST FLAG           14200002
         CLI   NAME(PLISTREG),ROOTID   IS THIS A PLINK           X03008 14206002
         BC    2,LDESD021              YES,NO SET UP FOR V=V V=R X03008C14212002
                                       CAPABILITY                X03008 14218002
         TM    BUFFER+38,VIRTREAL      CAN OLT RUN VIRTUAL       X03008 14224002
         BNO   LDESD013                NO, GO ZERO FLAG IN COMMONX03008C14230002
                                       AREA, TELLING SCHED THAT  X03008C14236002
                                       OLT MUST RUN REAL         X03008 14242002
         OI    TABLNGTH+2,VIRTUAL      YES, SET FLAG IN COMMON   X03008C14248002
                                       AREA TO 1 TELLING SCHED   X03008C14254002
                                       OLT CAN RUN VIRTUAL       X03008 14260002
         B     LDESD021                CONTINUE                  X03008 14266002
LDESD013 EQU   *                                                 X03008 14272002
         NI    TABLNGTH+2,REAL         ZERO FLAG IN COMMON AREA  X03008C14278002
                                       TELLING SCHED THAT OLT    X03008C14284002
                                       MUST RUN REAL             X03008 14290002
         B     LDESD021                                                 14300002
         SPACE 1                                                        14400002
LDESD016 EQU   *                                                        14500002
         OI    CESWT,OLD               SET OLD UNIT TEST FLAG           14600002
         NI    TABLNGTH+2,REAL         ZERO FLAG IN COMMON AREA  X03008C14620002
                                       TELLING SCHED THAT OLT    X03008C14640002
                                       MUST RUN REAL             X03008 14660002
         SPACE 1                                                        14700002
LDESD021 EQU   *                                                        14800002
         MVC   B28WORK+1(L3),BUFFER+25 GET THE ADDR OF WHERE THIS      C14900002
                                       MODULE WAS ASSEMBLED AT INTO    C15000002
                                       WORK AREA                        15100002
         SR    R7,R7                   CLEAR ESD LENGTH REG             15200002
         L     R6,B28WORK              PUT ASSEMBLE ADDRESS INTO REG 6  15300002
         ST    R6,ASSEMAD              SAVE THE ASSEMBLED ADDRESS FOR  C15400002
                                       LATTER USE                       15500002
         SPACE 1                                                        15600002
LDESD026 EQU   *                                                        15700002
         SR    ESDBTCNT,ESDBTCNT       CLEAR ESD BYTE COUNT REG         15800002
         IC    ESDBTCNT,BUFFER+11      GET NUMBER OF BYTES OF ESD DATA C15900002
                                       ON THIS CARD                     16000002
         SR    R8,R8                   CLEAR REG 8                      16100002
         LA    R5,16                   SET REG 5 TO CONTAIN LENGTH OF  C16200002
                                       ESD DATA FIELD                   16300002
         DR    R8,R5                   DIVIDE NO. OF BYTES OF ESD DATA C16400002
                                       BY LNGTH OF ESD DATA FLD TO FINDC16500002
                                       NUMBER OF FLDS IN ESD CARD       16600002
         LA    R5,BUFFER+8             PRIME REG 5 WITH ADDRESS OF ESD C16700002
                                       CARD TO SIMPLIFY LOOPING ON     C16800002
                                       ESD DATA FIELDS ON ONE CARD      16900002
         SPACE 1                                                        17000002
LDESD031 EQU   *                                                        17100002
         LA    R5,16(R5)               BUMP POINTER TO ESD CARD TO     C17200002
                                       POINT TO MIDDLE OF ESD DATA     C17300002
                                       FIELD                            17400002
         TM    0(R5),ALL               IS THIS AN SD TYPE               17500002
         BZ    LDESD036                YES, GO TO ROUTINE WHICH WILL   C17600002
                                       SUM ESD LENGTH FIELDS            17700002
         TM    0(R5),TYTST             DOES THIS ESD HAVE ANY LENGTH   C17800002
                                       ATTRIBUTE                        17900002
         BZ    LDESD041                NO, GO TO ROUTINE WHICH         C18000002
                                       DETERMINES IF THERE ARE ANY MOREC18100002
                                       ESD DATA FIELDS                  18200002
         SPACE 1                                                        18300002
LDESD036 EQU   *                                                        18400002
         MVC   B28WORK+1(L3),5(R5)     MOVE LENGTH INTO WORK AREA       18500002
         A     R7,B28WORK              ADD THIS LENGTH TO SUM OF       C18600002
                                       PREVIOUS LENGTHS                 18700002
         SPACE 1                                                        18800002
LDESD041 EQU   *                                                        18900002
         BCT   ESDBTCNT,LDESD031       DECREMENT NUMBER OF ESD DATA    C19000002
                                       FIELDS BY ONE AND IF THERE ARE  C19100002
                                       ANY LEFT, PROCESS THIS ONE       19200002
         BAL   R4,LDIOSUB              GO TO IO SUBROUTINE TO READ NEXTC19300002
                                       CARD                             19400002
         CLC   BUFFER+1(L3),=C'ESD'    IS THIS CARD AN ESD              19500002
         BE    LDESD026                YES, GO TO ROUTINE TO SUM LENGTHC19600002
                                       ON ESD CARDS                     19700002
         CLC   BUFFER+1(L3),=C'TXT'    IS THIS CARD A TXT               19800002
         BNE   LDRLD046                NO, ORDER ERROR OR GARBAGE,     C19900002
                                       GO TO ROUTINE THAT RETURNS 24   C20000002
                                       IN REG 15                        20100002
         EJECT                                                          20200002
*********************************************************************** 20300002
*                         TXT CARD HANDLING                           * 20400002
*********************************************************************** 20500002
LDTXT001 EQU   *                                                        20600002
         NI    LDSWITCH,ALL-TWOREADS   SET FLAG INDICATING TWO READS   C20700002
                                       ARE REQUIRED                     20800002
         LH    R5,TCNT(PLISTREG)       TAKE TRUNCATED LOAD COUNT AND    20900002
         LTR   R5,R5                   LOOK AT IT                       21000002
         BZ    CMPTDONE                IF ZERO, GO TO RETURN TO CALLER C21100002
                                       EXIT ROUTINE                     21200002
         OI    LDSWITCH,TRNCL          SET TRUNCATED LOAD FLAG ON       21300002
         SPACE 1                                                        21400002
LDTXT006 EQU   *                                                        21500002
         LA    R15,20                  PLACE ERROR CODE 20 IN REG 15   C21600002
                                       FOR FAILURE TO DO COMPUTE        21700002
         TM    LDSWITCH,CPTSW          HAS A COMPUTE BEEN DONE          21800002
         BNO   LDRETERR                NO, GO TO ROUTINE THAT          C21900002
                                       DETERMINES IF THIS IS OK         22000002
         L     R6,ASSEMAD              GET ASSEMBLED ADDRESS OF MODULE  22100002
         TM    FLAG(PLISTREG),PLNK     IS THIS MODULE A PLINK MODULE    22200002
         BNO   LDTXT011                NO, BYPASS UPDATING REAL CORE AD 22300002
         A     R6,PARTITEM             ADD ADDRESS OF OLT TO ASSEMBLED C22400002
                                       ADDRESS OF PLINK MODULE          22500002
         ST    R6,RLCOREAD             SAVE NEW REAL CORE ADDRESS       22600002
         SPACE 1                                                        22700002
LDTXT011 EQU   *                                                        22800002
         L     R6,RLCOREAD             GET REAL CORE ADDRESS OF MODULE  22900002
         S     R6,ASSEMAD              SUBTRACT ASSEMBLED ADDRESS FROM C23000002
                                       TARGET ADDRESS TO GET RELOCATIONC23100002
                                       FACTOR                           23200002
         ST    R6,RELFT                SAVE RELOCATION FACTOR           23300002
         SPACE 1                                                        23400002
LDTXT016 EQU   *                                                        23500002
         LH    TXTBTCNT,BUFFER+22      GET BYTE COUNT OF FOLLOWING DATAC23600002
                                       RECORD FROM TXTHDR CARD INTO    C23700002
                                       REG 9                            23800002
         TM    LDSWITCH,TRNCL          IS THIS A TRUNCATED LOAD- A CDS C23900002
                                       LOAD                             24000002
         BNO   LDTXT026                NO, GO TO ROUTINE THAT HANDLES  C24100002
                                       PLACING TXT CARDS INTO CORE      24200002
         LTR   R5,R5                   HAS IT BEEN DONE-LOOK AT        C24300002
                                       TRUNCATED COUNT IN PARM LIST     24400002
         BZ    LDRLD051                YES, GO TO SUCCESSFUL EXIT      C24500002
                                       SUBROUTINE                       24600002
         CR    R5,TXTBTCNT             CHECK BYTES REQUESTED VS LENGTH C24700002
                                       OF TXT RECORD                    24800002
         BH    LDTXT021                ANOTHER RECORD IS NEEDED, GO TO C24900002
                                       CODE THAT PREPARES FOR THIS      25000002
         LR    TXTBTCNT,R5             SET LENGTH EQUAL TO BYTES       C25100002
                                       REQUESTED                        25200002
         SPACE 1                                                        25300002
LDTXT021 EQU   *                                                        25400002
         SR    R5,TXTBTCNT             SET BYTES REQUESTED EQUAL TO    C25500002
                                       DIFFERENCE OF ORIGINAL REQUEST  C25600002
                                       AND LENGTH                       25700002
         SPACE 1                                                        25800002
LDTXT026 EQU   *                                                        25900002
         MVC   B28WORK+1(L3),BUFFER+17 PUT ASSEMBLED ADDR OF FOLLOWING C26000002
                                       TXT RECORD IN WORK AREA          26100002
         L     R6,B28WORK              GET THIS ASSEMBLED ADDR IN REG 6 26200002
         A     R6,RELFT                ADD RELOCATION FACTOR TO THIS   C26300002
                                       ASSEMBLED ADDRESS                26400002
         ST    R6,RDBUFAD              STORE THIS ADDR IN READ COMMAND  26500002
         ST    R9,RDLNGTH              STORE LENGTH IN READ COMMAND     26600002
         OI    LDSWITCH,TWOREADS       INDICATE 2 READS ARE NECESSARY   26700002
LDTXT031 EQU   *                                                        26800002
         BAL   R4,LDIOSUB              GO TO IO SUBROUTINE TO READ     C26900002
                                       TXT DATA CARD INTO CORE AND     C27000002
                                       READ NEXT TXTHDR CARD            27100002
         CLC   BUFFER+1(L3),=C'TXT'    IS THIS A TXTHDR CARD            27200002
         BNE   LDREP011                NO, GO SEE IF IT IS A REP        27300002
         B     LDTXT016                YES, DECODE AND HANDLE THIS TXT C27400002
                                       CARD                             27500002
         EJECT                                                          27600002
*********************************************************************** 27700002
*                         REP CARD HANDLING                           * 27800002
*********************************************************************** 27900002
LDREP001 EQU   *                                                        28000002
         LA    COUNT,6                 PUT NUMBER OF CHARACTERS TO BE  C28100002
                                       CONVERTED INTO COUNT REG         28200002
         LA    FROMADDR,BUFFER+6       PUT STARTING ADDRESS OF THE     C28300002
                                       CONVERT IN THE FROMADDR REG      28400002
         LA    TOADDR,B28WORK+1        PUT THE TO ADDRESS OF CONVERT   C28500002
                                       IN TOADDR REG                    28600002
         BAL   R4,LDCNV001             GO TO CONVERT ROUTINE AND OBTAINC28700002
                                       WHERE REP SHOULD OCCUR           28800002
         L     REPPTR,B28WORK          PLACE ADDRESS OF WHERE REP      C28900002
                                       SHOULD START IN REPPTR           29000002
         A     REPPTR,RELFT            ADD RELOCATION FACTOR TO THIS   C29100002
                                       AND GET REAL CORE ADDRESS OF    C29200002
                                       WHERE REP SHOULD START           29300002
         LA    FROMADDR,BUFFER+16      PUT STARTING ADDRESS OF REP ON  C29400002
                                       THE REP CARD INTO THE FROMADDR  C29500002
                                       REG SO CONVERSION CAN BE DONE    29600002
         SPACE 1                                                        29700002
LDREP006 EQU   *                                                        29800002
         LA    COUNT,4                 PUT NUMBER OF CHARACTERS TO BE  C29900002
                                       CONERTED INTO COUNT REG          30000002
         LA    TOADDR,B28WORK+2        PUT TO ADDRESS OF CONVERT INTO  C30100002
                                       TOADDR REG                       30200002
         BAL   R4,LDCNV001             GO TO CONVERT ROUTINE AND       C30300002
                                       CONVERT TWO BYTES OF THE REP     30400002
         MVC   0(2,REPPTR),B28WORK+2   MOVE THIS TWO BYTES OF REP TO   C30500002
                                       WHERE IT BELONGS IN CORE         30600002
         CLI   0(FROMADDR),C','        IS A COMMA THE NEXT CHARACTER   C30700002
                                       ON THE REP CARD                  30800002
         BE    LDREP016                YES, GO TO ROUTINE WHICH WILL   C30900002
                                       SET UP TO CONVERT NEXT TWO BYTESC31000002
                                       OF REP DATA                      31100002
         CLI   0(FROMADDR),C' '        NO, IS THE REP FINISHED OR IS   C31200002
                                       THERE A BLANK AS NEXT CHARACTER C31300002
                                       ON THE REP CARD                  31400002
         BNE   LDREP021                NO, GO TO REP CARD ERROR EXIT   C31500002
                                       ROUTINE                          31600002
         BAL   R4,LDIOSUB              GO TO IO SUBROUTINE AND READ    C31700002
                                       NEXT RECORD                      31800002
         SPACE 1                                                        31900002
LDREP011 EQU   *                                                        32000002
         CLC   BUFFER+1(L3),=C'REP'    IS THIS NEXT RECORD A REP CARD   32100002
         BE    LDREP001                YES, GO TO REP CARD HANDLING    C32200002
                                       ROUTINE                          32300002
         B     LDRLD041                GO TO RLD CARD HANDLING ROUTINE C32400002
                                       AND SEE IF IT IS AN RLD RECORD   32500002
         SPACE 1                                                        32600002
LDREP016 EQU   *                                                        32700002
         LA    FROMADDR,1(FROMADDR)    INCREMENT FROMADDR BY ONE TO    C32800002
                                       POINT TO NEXT TWO BYTES OF REP  C32900002
                                       DATA                             33000002
         LA    REPPTR,2(REPPTR)        INCREMENT REAL CORE ADDR OF REP C33100002
                                       BY TWO TO POINT TO WHERE NEXT   C33200002
                                       TWO BYTES OF REP DATA SHOULD GO  33300002
         B     LDREP006                GO TO ROUTINE TO DECODE NEXT    C33400002
                                       TWO BYTES OF REP DATA            33500002
         SPACE 1                                                        33600002
LDREP021 EQU   *                                                        33700002
         L     R1,MSGMOD                GET POINTER TO MESSAGE MODULE   33800002
         L     R1,MSG202(R1)            GET POINTER TO MESSAGE IFD202I  33900002
         PWTO  REG=(R1)                WRITE MESSAGE IFD202I            34000002
         LA    R15,16                  PUT 16 IN RETURN CODE REGISTER, C34100002
                                       INDICATING REP CARD ERROR        34200002
         B     LDRETERR                GO TO ERROR EXIT LINKAGE         34300002
         EJECT                                                          34400002
*********************************************************************** 34500002
**********  CONVERT SUBROUTINE USED FOR REP CARD HANDLING    ********** 34600002
*********************************************************************** 34700002
         SPACE 1                                                        34800002
LDCNV001 EQU   *                                                        34900002
         SR    CHAR,CHAR               CLEAR REGISTER WHICH WILL BE    C35000002
                                       USED FOR SEARCH OF CHARACTER    C35100002
                                       TABLE                            35200002
         SPACE 1                                                        35300002
LDCNV006 EQU   *                                                        35400002
         NI    LDSWITCH,FIRST          ZERO FLAG WHICH TELLS WHICH BYTEC35500002
                                       OF DATA BEING CONVERTED. ZERO   C35600002
                                       IMPLIES 1ST BYTE, ONE - 2ND BYTE 35700002
         SR    REPBYTE,REPBYTE         CLEAR REGISTER WHICH WILL       C35800002
                                       CONTAIN BYTE OF REP DATA BEING  C35900002
                                       PROCESSED                        36000002
         SPACE 1                                                        36100002
LDCNV011 EQU   *                                                        36200002
         IC    REPBYTE,0(FROMADDR)     PUT CHARACTER TO BE CONVERTED   C36300002
                                       INTO REP DATA BYTE REG           36400002
         LA    INDEX,16                PUT 16 INTO INDEX REGISTER IN   C36500002
                                       PREPARATION FOR SEARCH OF TABLE  36600002
         SPACE 1                                                        36700002
LDCNV016 EQU   *                                                        36800002
         IC    CHAR,CHARTBL-1(INDEX)   GET A CHARACTER FROM TABLE AND  C36900002
                                       PUT IT IN REG USED FOR SEARCH    37000002
         CLR   CHAR,REPBYTE            DOES CHAR ON REP CARD EQUAL     C37100002
                                       THIS CHAR FROM TABLE             37200002
         BE    LDCNV021                YES, GO TO ROUTINE WHICH HANDLESC37300002
                                       A SUCCESSFUL MATCH               37400002
         BCT   INDEX,LDCNV016          TRY NEXT CHARACTER IN TABLE, IF C37500002
                                       ANY LEFT                         37600002
         B     LDREP021                IF NONE ARE LEFT, GO TO ROUTINE C37700002
                                       WHICH WILL INDICATE REP CARD    C37800002
                                       ERROR                            37900002
         SPACE 1                                                        38000002
LDCNV021 EQU   *                                                        38100002
         LA    FROMADDR,1(FROMADDR)    ADVANCE FROM ADDR REG BY ONE TO C38200002
                                       POINT TO NEXT CHARACTER TO BE   C38300002
                                       CONVERTED                        38400002
         BCTR  INDEX,0                 DECREMENT INDEX BY ONE AS THIS  C38500002
                                       IS THE HEX EQUIVALENT OF EBCDIC C38600002
                                       CHARACTER ON REP CARD            38700002
         SPACE 1                                                        38800002
LDCNV026 EQU   *                                                        38900002
         TM    LDSWITCH,SECOND         HAVE TWO BYTES OF REP DATA BEEN C39000002
                                       CONVERTED                        39100002
         BO    LDCNV031                YES, GO TO ROUTINE WHICH WILL   C39200002
                                       PLACE REP DATA IN SPECIFIED AREA 39300002
         LR    R14,INDEX               SAVE FIRST CONVERSION RESULT IN C39400002
                                       REG 14                           39500002
         SR    REPBYTE,REPBYTE         CLEAR REGISTER USED TO CONTAIN  C39600002
                                       BYTE OF REP DATA BEING PROCESSED 39700002
         OI    LDSWITCH,SECOND         SET FLAG WHICH INDICATES WHICH  C39800002
                                       BYTE OF DATA IS BEING CONVERTED C39900002
                                       TO 1, 1 IMPLIES THIS IS 2ND BYTE 40000002
         SLL   R14,4                   LEFT JUSTIFY FIRST CONVERTED    C40100002
                                       BYTE IN REG 14                   40200002
         BCT   COUNT,LDCNV011          GO CONVERT NEXT BYTE OF REP DATAC40300002
                                       IF THERE IS ANY                  40400002
         LA    COUNT,1                 SINCE THERE ARE NONE, SET COUNT C40500002
                                       TO 1 SO PROCESSING WILL NOT LOOPC40600002
                                       FOREVER BELOW                    40700002
         SPACE 1                                                        40800002
LDCNV031 EQU   *                                                        40900002
         OR    R14,INDEX               COMBINE TWO CONVERSIONS TO BE   C41000002
                                       ONE BYTE                         41100002
         STC   R14,0(TOADDR)           PUT TWO CONVERTED BY INTO AREA  C41200002
                                       SPECIFIED BY TO ADDR REG         41300002
         LA    TOADDR,1(TOADDR)        BUMP TO ADDR REG BY ONE TO POINTC41400002
                                       TO NEXT BYTE IN TOADDR FIELD     41500002
         BCT   R7,LDCNV006             GO CONVERT NEXT CHARACTER, IF   C41600002
                                       THERE IS ONE                     41700002
         BR    R4                      NONE LEFT, RETURN TO CALLER      41800002
         SPACE 3                                                        41900002
*********************************************************************** 42000002
*                TABLE USED TO VALIDATE REP INFORMATION               * 42100002
*********************************************************************** 42200002
CHARTBL  DC    C'0123456789ABCDEF'                                      42300002
         EJECT                                                          42400002
*********************************************************************** 42500002
*                         RLD CARD HANDLING                           * 42600002
*********************************************************************** 42700002
         SPACE 1                                                        42800002
LDRLD001 EQU   *                                                        42900002
         SR    RLDBTCNT,RLDBTCNT       CLEAR RLD BYTE COUNT REG         43000002
         IC    RLDBTCNT,BUFFER+11      GET RLD DATA BYTE COUNT          43100002
         SRL   RLDBTCNT,TWICE          DIVIDE COUNT BY FOUR AND GET    C43200002
                                       NUMBER OF POSSIBLE 4 BYTE RLD   C43300002
                                       DATA ITEMS                       43400002
         LA    DATAPTR,BUFFER+16       GET ADDRESS OF FIRST BYTE OF    C43500002
                                       RLD DATA                         43600002
         BCT   RLDBTCNT,LDRLD016       SINCE THIS IS FIRST DATA FIELD, C43700002
                                       DECREMENT NO. OF 4 BYTE RLD DATAC43800002
                                       ITEMS BY 1, GO DECODE RLD DATA   43900002
         SPACE 1                                                        44000002
LDRLD006 EQU   *                                                        44100002
         TM    D0(DATAPTR),SAMEPTR     DOES RLD HAVE SAME R OR P PTR    44200002
         BO    LDRLD016                BRANCH IF YES                    44300002
         SPACE 1                                                        44400002
LDRLD011 EQU   *                                                        44500002
         LA    DATAPTR,D4(DATAPTR)     BUMP RLD DATA POINTER BY 4 TO   C44600002
                                       AVOID THE ESD ID INDICATORS AND C44700002
                                       TO POINT TO DATA FIELD           44800002
         BCTR  RLDBTCNT,0              DECREMENT NUMBER OF 4 BYTE RLD  C44900002
                                       DATA ITEMS BY ONE                45000002
         SPACE 1                                                        45100002
LDRLD016 EQU   *                                                        45200002
         LA    DATAPTR,D4(DATAPTR)     BUMP RLD DATA POINTER BY 4       45300002
         MVC   B28WORK+1(L3),D1(DATAPTR) GET ADDRESS THAT MUST BE      C45400002
                                       UPDATED                          45500002
         L     R6,B28WORK              PLACE THIS ADDRESS IN REG 6      45600002
         A     R6,RELFT                ADD RELOCATION FACTOR            45700002
         SPACE 1                                                        45800002
LDRLD021 EQU   *                                                        45900002
         TM    D0(DATAPTR),HIHALF      IS THIS AN ADCON OR CCW          46000002
         BNZ   LDRLD036                NO, BRANCH TO DECODE NEXT RLD   C46100002
                                       DATA ITEM IF NECESSARY           46200002
         XC    WORK(4),WORK            CLEAR WORK AREA                  46300002
         IC    R7,D0(DATAPTR)          GET LENGTH OF DATA ITEM          46400002
         N     R7,FULL15               STRIP INDICATORS FROM LENGTH     46500002
         SRL   R7,TWICE                ADJUST LENGTH                    46600002
         EX    R7,MVC01                MOVE DATA REQUIRING UPDATE TO   C46700002
                                       WORK AREA                        46800002
         L     R5,WORK                 PUT DATA REQUIRING UPDATE IN    C46900002
                                       REG 5                            47000002
         LA    R1,3                    PLACE MAX SIZE ADDRESS THAT     C47100002
                                       COULD BE UPDATED, THREE IMPLIES C47200002
                                       A FOUR BYTE ADDRESS              47300002
         SR    R1,R7                   SUBTRACT LNGTH OF ITEM FROM MAX C47400002
                                       LNGTH, REMAINDER IS NO. OF BYTESC47500002
                                       NOT USED, I.E. 1 EQ. 3 BYTE ADDR 47600002
         SLL   R1,3                    TAKE REMAINDER AND CONVERT IT TOC47700002
                                       THE BIT SHIFT REQUIRED TO RIGHT C47800002
                                       JUSTIFY ADDR BEING WORKED ON     47900002
         SRL   R5,D0(R1)               RIGHT JUSTIFY THE ADDRESS IN    C48000002
                                       REG 5                            48100002
         TM    D0(DATAPTR),RLDFLG      TEST RLD FLAG BIT- POS OR NEG    48200002
         BO    LDRLD026                BRANCH IF NEGATIVE               48300002
         A     R5,RELFT                ADD RELOCATION FACTOR            48400002
         B     LDRLD031                GO TO ROUTINE THAT STORES       C48500002
                                       UPDATED ADDRESS IN THE PROGRAM   48600002
         SPACE 1                                                        48700002
LDRLD026 EQU   *                                                        48800002
         S     R5,RELFT                SUBTRACT RELOCATION FACTOR       48900002
         SPACE 1                                                        49000002
LDRLD031 EQU   *                                                        49100002
         SLL   R5,D0(R1)               LEFT JUSTIFY UPDATED ADDRESS     49200002
         ST    R5,WORK                 STORE UPDATED ADDRESS IN WORK   C49300002
                                       AREA                             49400002
         EX    R7,MVC02                MOVE UPDATED ADDRESS IN WORK    C49500002
                                       AREA TO ITS HOME IN PROGRAM      49600002
         SPACE 1                                                        49700002
LDRLD036 EQU   *                                                        49800002
         BCT   RLDBTCNT,LDRLD006       DECREMENT NUMBER OF 4 BYTE RLD  C49900002
                                       DATA ITEMS BY ONE, IF THERE ARE C50000002
                                       ANY LEFT, GO DECODE THEM         50100002
         SPACE 1                                                        50200002
         BAL   R4,LDIOSUB              GO TO IO SUBROUTINE AND GET     C50300002
                                       NEXT CARD                        50400002
         SPACE 1                                                        50500002
LDRLD041 EQU   *                                                        50600002
         CLC   BUFFER+1(L3),=C'RLD'    IS THIS CARD AN RLD CARD         50700002
         BE    LDRLD001                YES, GO TO RLD CARD HANDLER      50800002
         CLC   BUFFER+1(L3),=C'END'    IS THIS CARD AN END CARD         50900002
         BE    LDRLD051                YES, END LOADER, GO TO FINISH   C51000002
                                       ROUTINE                          51100002
         SPACE 1                                                        51200002
LDRLD046 EQU   *                                                        51300002
         L     R1,MSGMOD                GET POINTER TO MESSAGE MODULE   51400002
         L     R1,MSG911(R1)           GET POINTER TO MESSAGE IFD911I   51500002
         MVC   31(8,R1),NAME(PLISTREG) PLACE MODULE NAME IN MESSAGE     51560002
         PWTO  REG=(R1)                WRITE MESSAGE IFD911I            51620002
         LA    R15,24                  PUT 24 IN RETURN CODE REGISTER, C51700002
                                       INDICATING ORDER ERROR OR       C51800002
                                       GARBAGE                          51900002
         B     LDRETERR                GO TO ERROR EXIT LINKAGE         52000002
         SPACE 1                                                        52100002
LDRLD051 EQU   *                                                        52200002
         L     R1,RLCOREAD             PLACE ADDRESS OF WHERE MODULE   C52300002
                                       WAS LOADED IN REGISTER ONE       52400002
         B     LDRET00                 GO TO SUCCESSFUL EXIT LINKAGE    52500002
MVC01    MVC   WORK(0),D0(R6)          MOVE ADDRESS TO WORK AREA        52600002
MVC02    MVC   D0(0,R6),WORK           MOVE UPDATED ADDRESS TO ITS     C52700002
                                       PLACE IN PROGRAM                 52800002
         EJECT                                                          52900002
*********************************************************************** 53000002
*                           IO SUBROUTINE                             * 53100002
*********************************************************************** 53200002
LDIOSUB  EQU   *                                                        53300002
         LA    DCBPTR,OLTDCB           GET POINTER TO DCB FOR OLT      C53400002
                                       LIBRARY IN DCB REG               53500002
         TM    48(DCBPTR),OFLGS        IS OLT LIB OPEN                  53600002
         BO    LDIO0010                YES, BYPASS DOING OPEN           53700002
         OPEN  ((DCBPTR),(INPUT))      ATTEMPT TO OPEN OLT DCB          53800002
         TM    48(DCBPTR),OFLGS        DID OLT LIB OPEN                 53900002
         BO    LDIO0010                YES, CONTINUE                    54000002
         L     R1,MSGMOD                GET POINTER TO MESSAGE MODULE   54100002
         L     R1,MSG901(R1)            GET POINTER TO MESSAGE IFD901I  54200002
         MVC   12(8,R1),=C'OLTCDSDD'   PLACE DD CARD NAME IN MSG901I    54230002
LDIO0005 EQU   *                                                        54260002
         PWTO  REG=(R1)                WRITE MESSAGE IFD901I            54300002
         B     LDIO0030                RETURN ERROR CODE INDICATING    C54400002
                                       MODULE NOT FOUND                 54500002
         SPACE 1                                                        54600002
LDIO0010 EQU   *                                                        54700002
         USING DEBBASIC,DEBREG                                   YM4762 54709002
         L     DEBREG,D44(DCBPTR)      GET ASSOCIATED DEB ADDR   Y02008 54718002
         LA    DEBREG,D0(DEBREG)       CLEAR HIGH ORDER BYTE     Y02008 54727002
         TM    DEBFLGS1,DEBAPFIN       IS LIBRARY AUTHORIZED     Y02008 54736002
         BO    LDIO0015                YES, CONTINUE LOAD REQ    Y02008 54745002
LDIO0013 EQU   *                                                 Y02008 54754002
         L     R1,MSGMOD               GET POINTER TO MSG MODULE Y02008 54763002
         L     R1,MSG899(R1)           GET PTR TO MSG IFD899I    Y02008 54772002
         MVI   D66(R1),X'F4'           PUT 04 CODE IN MSG        Y02008 54776002
         B     LDIO0005                PRINT ERROR MESSAGE       Y02008 54781002
LDIO0015 EQU   *                                                 Y02008 54790002
         TM    FLAG(PLISTREG),SYMBOLIC IS THIS A SYMBOLIC CDS REQUEST   54800002
         BNO   LDIO0020                NO, PERFORM REQUESTED LOAD       54900002
         L     DCBPTR,SYMPTR           GET POINTER TO DCB FOR SYMBOLIC C55000002
                                       CDS IN DCB REG                   55100002
         L     R1,MSGMOD               GET POINTER TO MESSAGE MODULE    55120002
         L     R1,MSG901(R1)           GET POINTER TO MESSAGE IFD901I   55140002
         MVC   12(8,R1),=C'SYMSYM  '   PLACE DD CARD NAME IN MSG901I    55160002
         TM    48(DCBPTR),OFLGS        IS SYMBOLIC DCB OPEN             55200002
         BNO   LDIO0005                NO, INDICATE SYMSYM DD CARD     C55300002
                                       FAILED TO OPEN                   55400002
         L     DEBREG,D44(DCBPTR)      GET ASSOCIATED DEB ADDR   Y02008 55410002
         LA    DEBREG,D0(DEBREG)       CLEAR HIGH ORDER BYTE     Y02008 55420002
         TM    DEBFLGS1,DEBAPFIN       IS LIBRARY AUTHORIZED     Y02008 55430002
         BNO   LDIO0013                NO, PRINT ERROR MESSAGE   Y02008 55440002
         DROP  DEBREG                                                   55450002
         SPACE 1                                                        55500002
LDIO0020 EQU   *                                                        55600002
         TM    FLAG(PLISTREG),CMPTE    IS CALLER ASKING FOR A COMPUTE   55700002
         BNO   LDIO0040                NO, READ NEXT RECORD OF MODULE   55800002
         TM    LDSWITCH,CMPTSTRT       HAS COMPUTE BEEN STARTED         55900002
         BO    LDIO0040                YES, GO TO ROUTINE TO READ NEXT C56000002
                                       RECORD                           56100002
         LA    NAMEPTR,NAME(PLISTREG)  GET POINTER TO REQUESTED DATA   C56200002
                                       SET MEMBER NAME                  56300002
         FIND  (DCBPTR),(NAMEPTR),D    ISSUE FIND FOR REQUESTED MEMBER  56400002
         OI    LDSWITCH,CMPTSTRT       INDICATE COMPUTE HAS STARTED     56500002
         LTR   R15,R15                 WAS FIND SUCCESSFUL              56600002
         BZ    LDIO0050                SUCCESSFUL FIND, GO READ FIRST  C56700002
                                       CARD IN MODULE                   56800002
         SPACE 1                                                        56900002
LDIO0030 EQU   *                                                        57000002
         SR    R0,R0                   CLEAR REGISTER ZERO INDICATING  C57100002
                                       MODULE NOT FOUND                 57200002
         LA    R15,12                  PUT 0C IN REG 15 TO INDICATE    C57300002
                                       MODULE NOT FOUND                 57400002
         B     LDRESET                 RETURN TO CALLER                 57500002
         SPACE 1                                                        57600002
LDIO0040 EQU   *                                                        57700002
         LA    TTRZPTR,TTRZ            GET POINTER TO TTRZ FOR POINT    57800002
         POINT (DCBPTR),(TTRZPTR)      POINT TO RECORD THAT MUST BE    C57900002
                                       READ                             58000002
         SPACE 1                                                        58100002
LDIO0050 EQU   *                                                        58200002
         TM    LDSWITCH,TWOREADS       IS THIS REQUEST FOR TWO READS    58300002
         BNO   LDIO0060                NO, SET UP TO PERFORM ONE READ   58400002
         L     AREAPTR,RDBUFAD         GET POINTER TO BUFFER AREA IN   C58500002
                                       AREA POINTER REG                 58600002
         L     LNGTHREG,RDLNGTH        GET LENGTH OF READ IN LENGTH REG 58700002
         B     LDIO0070                GO TO READ ROUTINE               58800002
         SPACE 1                                                        58900002
LDIO0060 EQU   *                                                        59000002
         LA    AREAPTR,BUFFER          GET POINTER TO MY BUFFER AREA   C59100002
                                       IN  AREA POINTER REG             59200002
         LA    LNGTHREG,80             PUT LENGTH OF 80 IN LENGTH REG   59300002
         SPACE 1                                                        59400002
LDIO0070 EQU   *                                                        59500002
         READ  DECB,SF,(DCBPTR),(AREAPTR),(LNGTHREG) READ A RECORD      59600002
         CHECK DECB                    WAIT UNTIL READ COMPLETES        59700002
         TM    LDSWITCH,IOERROR        WAS THERE AN I/O ERROR           59800002
         BNO   LDIO0075                NO, CONTINUE NORMALLY            59900002
         L     R1,MSGMOD                GET POINTER TO MESSAGE MODULE   60000002
         L     R1,MSG205(R1)            GET POINTER TO MESSAGE IFD205I  60100002
         PWTO  REG=(R1)                WRITE MESSAGE IFD205I INDICATINGC60200002
                                       AN I/O ERROR HAS OCCURED         60300002
         LA    R1,IOERRMSG         PRINT I/O ERROR REASON      @ZA14111 60330037
         PWTO  REG=(R1)                                        @ZA14111 60360037
         NI    LDSWITCH,ALL-IOERROR    CLEAR I/O ERROR FLAG             60400002
         LA    R15,8                   PLACE 08 RETURN CODE IN REG 15   60500002
         B     LDRETERR                RETURN TO CALLER INDICATING     C60600002
                                       READ ERROR                       60700002
         SPACE 1                                                        60800002
LDIO0075 EQU   *                                                        60900002
         NOTE  (DCBPTR)                FIND OUT WHERE THIS READ WAS     61000002
         ST    R1,TTRZ                 SAVE IT TO PERFORM NEXT READ     61100002
         MVI   TTRZ+3,X'01'            UPDATE TTRZ SO NEXT RECORD MAY  C61200002
                                       BE READ                          61300002
         AIF   ('&SYSPARM' NE 'DEBUG').BYPASS                           61350002
         MVC   MESSAGE+8(7),BUFFER                                      61400002
MESSAGE  WTO   '       '                                                61500002
.BYPASS  ANOP                                                           61550002
         TM    LDSWITCH,TWOREADS       IS THIS A REQUEST TO DO TWO     C61600002
                                       READS                            61700002
         BNO   LDIO0080                GO TO ROUTINE WHICH RETURNS TO  C61800002
                                       CALLER                           61900002
         NI    LDSWITCH,ALL-TWOREADS   CLEAR TWO READ REQUEST FLAG SO  C62000002
                                       NEXT READ WILL BE LAST           62100002
         B     LDIO0040                GO TO ROUTINE WHICH WILL POINT  C62200002
                                       TO NEXT RECORD AND READ IT       62300002
         SPACE 1                                                        62400002
LDIO0080 EQU   *                                                        62500002
         BR    R4                      RETURN TO CALLER                 62600002
         EJECT                                                          62700002
*********************************************************************** 62800002
*                    RETURN TO CALLER EXIT ROUTINE                    * 62900002
*********************************************************************** 63000002
CMPTDONE EQU   *                                                        63100002
         ST    R7,SIZEAREA             PLACE SIZE OF MODULE IN SIZE    C63200002
                                       AREA                             63300002
         TM    FLAG(PLISTREG),PLNK     IS THIS A REQUEST TO LOAD A     C63400002
                                       PLINK MODULE                     63500002
         BNO   LDEXT006                NO, BYPASS ADJUSTING MODULE     C63600002
                                       SIZE TO COMPENSATE FOR POSSIBLE C63700002
                                       NON ZERO ORIGIN                  63800002
         A     R7,ASSEMAD              ADD ORIGIN TO LENGTH OF PLINK   C63900002
                                       MODULE AND GET ADJUSTED LENGTH   64000002
         LR    R0,R7                   PLACE SIZE OF MODULE IN REGISTERC64100002
                                       ZERO                             64200002
         B     LDRET00                 INDICATE TO CALLER SUCCESSFUL   C64300002
                                       COMPUTE                          64400002
         SPACE 1                                                        64500002
LDEXT006 EQU   *                                                        64600002
         A     R7,ONE                  ADD ONE TO SIZE OF MODULE        64700002
         ST    R7,SIZEAREA             PLACE SIZE OF MODULE IN SIZE    C64800002
                                       AREA                             64900002
         TM    CESWT,OLD               IS THIS OLT AN OLD ONE           65000002
         BNO   LDEXT011                NO, IT MUST BE A NEW OLT         65100002
         OI    SIZEAREA+3,TMFLG        INDICATE TO TRANS. MGR. THAT    C65200002
                                       THIS IS AN OLD OLT BY SETTING   C65300002
                                       LAST BIT IN MOD. SIZE FLD TO 1   65400002
         L     R0,SIZEAREA             PLACE SIZE OF MODULE IN REGISTERC65500002
                                       ZERO                             65600002
         B     LDRET00                 RETURN TO CALLER INDICATING     C65700002
                                       COMPUTE FINISHED                 65800002
         SPACE 1                                                        65900002
LDEXT011 EQU   *                                                        66000002
         NI    SIZEAREA+3,ALL-TMFLG    INDICATE TO TRANS. MGR. THAT    C66100002
                                       THIS IS A NEW OLT BY SETTING    C66200002
                                       LAST BIT IN MOD. SIZE FLD TO 0   66300002
         L     R0,SIZEAREA             PLACE SIZE OF MODULE IN REGISTERC66400002
                                       ZERO                             66500002
         SPACE 1                                                        66600002
LDRET00  EQU   *                                                        66700002
         SR    R15,R15                 INDICATE TO CALLER SUCCESSFUL   C66800002
                                       LOAD                             66900002
         SPACE 1                                                        67000002
LDRETERR EQU   *                                                        67100002
         TM    FLAG(PLISTREG),CMPTE    IS THIS A COMPUTE REQUEST        67200002
         BO    LDEXTRET                YES, EVERYTHING OK               67300002
LDRESET  EQU   *                                                        67400002
         NI    LDSWITCH,ALL-CPTSW      CLEAR INTERNAL COMPUTE FLAG      67500002
         SPACE 1                                                        67600002
LDEXTRET EQU   *                                                        67700002
         TM    CDSIND,X'80'             TEST CDS INDICATOR     XM0088   67710002
         BZ    LDEXT04                  NO SUBSTITUTED NAME    XM0088   67720002
         MVC   NAME+4(4,PLISTREG),SREALDEV ORIGINAL NAME       XM0088   67730002
         CLC   TCNT(2,PLISTREG),FOUR    CHECK AREA FOR LOAD    XM0794   67740002
         BL    LDEXT04                  SIZE TOO SMALL         XM0088   67750002
         L     R7,AD(PLISTREG)          CDS ADDRESS            XM0088   67760002
         MVC   2(2,R7),SREALHEX         REAL DEVICE            XM0088   67770002
LDEXT04  DS    0H                                              XM0088   67780002
         ST    R15,RETCODE             SAVE RET CODE FOR DEBUGGING      67800002
         L     R13,SAVEAREA+4          RESTORE POINTER TO CALLERS SAVE C67900002
                                       AREA                             68000002
         L     R14,12(0,R13)           RESTORE RETURN ADDRESS OF CALLER 68100002
         LM    R2,R12,28(R13)          RESTORE CALLERS REGISTERS        68200002
         BR    R14                     RETURN TO CALLER                 68300002
         EJECT                                                          68400002
*********************************************************************** 68500002
*                           EODAD ROUTINE                             * 68600002
*********************************************************************** 68700002
ENDATA   EQU   *                                                        68800002
         CLOSE ((DCBPTR))              CLOSE OLT LIB DCB                68900002
         L     R1,MSGMOD                GET POINTER TO MESSAGE MODULE   69000002
         L     R1,MSG203(R1)            GET POINTER TO MESSAGE IFD203I  69100002
         PWTO  REG=(R1)                WRITE MESSAGE IFD203I            69200002
         LA    R15,24                  PLACE 24 RETURN CODE IN REG 15   69300002
         B     LDRETERR                RETURN TO CALLER INDICATING     C69400002
                                       ORDER ERROR OR GARBAGE           69500002
*********************************************************************** 69600002
*                           SYNAD ROUTINE                             * 69700002
*********************************************************************** 69800002
ERROR    EQU   *                                                        69900002
         SYNADAF   ACSMETH=BPAM    GET THE I/O ERROR           @ZA14111 69920037
         MVC   IOERRMSG+9(78),42(1)  MOVE IT TO BE PRINTED     @ZA14111 69940037
         ST    R14,SAVE14            SAVE RETURN ADDRESS       @ZA14111 69960037
         OI    LDSWITCH,IOERROR        INDICATE TO SELF THAT AN I/O    C70000002
                                       ERROR HAS OCCURRED               70100002
         SYNADRLS                                              @ZA14111 70200037
*                                   RELEASE THE SAVE AREA FROM SYNADAF  70230037
         L     R14,SAVE14          RESORE RETURN ADDR          @ZA14111 70260037
         BR    R14                     RETURN TO CALLER                 70300002
         EJECT                                                          70400002
*********************************************************************** 70500002
*                              DECLARES                               * 70600002
*********************************************************************** 70700002
SAVEAREA DC    18F'0'                  SAVE AREA                        70800002
BUFFER   DC    20F'0'                  READ BUFFER                      70900002
RLCOREAD DC    F'0'                    REAL CORE ADDRESS OF MODULE      71000002
ASSEMAD  DC    F'0'                    ASSEMBLED ADDRESS OF MODULE      71100002
B28WORK  DC    F'0'                    FULLWORD WORK AREA               71200002
WORK     DC    F'0'                    FULLWORD WORK AREA               71300002
RELFT    DC    F'0'                    RELOCATION FACTOR                71400002
RDBUFAD  DC    F'0'                    BUFFER ADDRESS                   71500002
RDLNGTH  DC    F'0'                    LENGTH OF READ                   71600002
RETCODE  DC    F'0'                    RETURN CODE AREA                 71700002
FULL15   DC    F'15'                   FULLWORD CONSTANT EQUAL 15       71800002
ONE      DC    F'1'                    FULLWORD CONSTANT EQUAL 1        71900002
ONE1     EQU   ONE+2                   HALFWORD CONSTANT EQUAL 1        72000002
TTRZ     DC    F'0'                    TTRZ FOR READ ROUTINE            72100002
SIZEAREA DC    F'0'                    SIZE WORK AREA                   72200002
LDSWITCH DC    X'00'                   INTERNAL FLAGS                   72400002
EHLIST   DS    0F                       EBCDIC TO HEX CONVERT  XM0794   72410002
         DC    XL2'02'                  MACRO LEVEL            XM0088   72420002
         DC    CL2'41'                  CONVERT MACRO ID       XM0088   72430002
         DC    A(SREALDEV)              FROM EBCDIC AREA       XM0088   72440002
         DC    A(SREALHEX)              TO HEX AREA            XM0088   72450002
         DC    AL2(4)                   COUNT AND TYPE         XM0088   72460002
SREALHEX DC    XL2'00'                  REAL DEVICE IN HEX     XM0088   72470002
SREALDEV DC    CL4' '                   SAVE REAL DEVICE       XM0088   72480002
HELIST   DS    0F                       HEX TO EBCDIC CONVERT  XM0794   72490002
         DC    XL2'02'                  MACRO LEVEL            XM0088   72500002
         DC    CL2'41'                  CONVERT MACRO ID       XM0088   72510002
         DC    A(SCDSHEX)               FROM HEX AREA          XM0088   72520002
         DC    A(SCDSDEV)               TO EBCDIC AREA         XM0088   72530002
         DC    AL2(2+32768)             COUNT AND TYPE         XM0088   72540002
SCDSHEX  DC    XL2'00'                  EQUATED DEVICE IN HEX  XM0088   72550002
FOUR     DC    H'4'                     HALFWORD 4             XM0794   72560002
SCDSDEV  EQU   WORK                     EQUATED DEVICE         XM0088   72570002
CDSIND   EQU   SCDSHEX                  CDS INDICATOR          XM0088   72580002
SAVE14   DC    F'0'                SAVE R14                    @ZA14111 72584037
IOERRMSG WTO   '                                               @ZA14111X72588037
                                                               @ZA14111X72592037
                        ',MF=L,ROUTCDE=10,DESC=7               @ZA14111 72596037
*********************************************************************** 72600002
*                           OLT LIB DCB                               * 72700002
*********************************************************************** 72800002
OLTDCB   DCB   BLKSIZE=3600,LRECL=80,DDNAME=OLTCDSDD,DSORG=PO,         C72900002
               MACRF=R,RECFM=UT,EODAD=ENDATA,SYNAD=ERROR                73000002
*********************************************************************** 73200002
*                         COMMON AREA DSECT                           * 73300002
*********************************************************************** 73400002
LOADER   IFDCOM                                                         73500002
         IEZDEB                        DSECT FOR DEB             Y02008 73550002
         END                                                            73600002
./  ADD  SSI=32570901,NAME=IFDOLT13
         TITLE '     IFDOLT13--CECOM  WTO/R INTERFACE.'                 00010000
         TITLE '        IFDOLT13--CECOM  WTO/R INTERFACE.'              00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT13 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT13 14 SEP 73'                             0002  00070000
         ST    @E,12(0,@D)                                        0002  00080000
         STM   @0,@C,20(@D)                                       0002  00090000
         BALR  @B,0                                               0002  00100000
@PSTART  DS    0H                                                 0002  00110000
         USING @PSTART+00000,@B                                   0002  00120000
         ST    @D,@SAV001+4                                       0002  00130000
         LA    @F,@SAV001                                         0002  00140000
         ST    @F,8(0,@D)                                         0002  00150000
         LR    @D,@F                                              0002  00160000
*         GEN   (USING CHASCT,2);                                       00170000
         USING CHASCT,2                                                 00180000
         DS    0H                                                       00190000
*         GENERATE DATA;                                                00200000
*         RESTRICT(2,5);                 /* REGISTERS USED BY PROGRAM * 00210000
*         DCL R0 REG(0) PTR;                                            00220000
*         DCL R1 REG(1) PTR;             /* ADDRESS OF PARAMETER LIST * 00230000
*         DCL R5 REG(5) PTR;             /* ADDRESS OF IN MSG.        * 00240000
*         DCL R14 REG(14) PTR;           /* RETURN REGISTER           * 00250000
*         DCL R15 REG(15) PTR;           /* RETURN CODE REGISTER      * 00260000
*   GEN(EJECT);                                                         00270000
         EJECT                                                          00280000
         DS    0H                                                       00290000
*         /************************************************************ 00300000
*         /* THE FOLLOWING MAP DESCRIBES THE PARAMETER LIST PASSED    * 00310000
*         /* TO IFDOLT13. REGISTER 1 WILL CONTAIN THE LIST ADDRESS.   * 00320000
*         /************************************************************ 00330000
*         DECLARE                                                       00340000
*             1 * BASED(R1),                                            00350000
*               2 OUTMSGAD PTR,          /* ADDRESS OF OUT MESSAGE    * 00360000
*               2 OUTCNTAD PTR,          /* ADDRESS OF OUT MESSAGE    * 00370000
*                                        /* COUNT                     * 00380000
*               2 INMSGAD PTR,           /* ADDRESS OF IN MESSAGE     * 00390000
*               2 INCNTAD PTR;           /* ADDRESS OF IN MESSAGE     * 00400000
*                                        /* COUNT                     * 00410000
*   GEN(EJECT);                                                         00420000
         EJECT                                                          00430000
         DS    0H                                                       00440000
*         /************************************************************ 00450000
*         /* THE FOLLOWING MAPS DESCRIBE THE AREAS USED DURING THE    * 00460000
*         /* PROCESSING OF MESSAGES.                                  * 00470000
*         /************************************************************ 00480000
*         DCL OUTCNT CHAR(1) BASED(OUTCNTAD);    /* OUT MESSAGE COUNT * 00490000
*         DCL INCNT CHAR(1) BASED(INCNTAD);      /* IN MESSAGE COUNT  * 00500000
*         DCL OUTMSG CHAR(61) BASED(OUTMSGAD);   /* OUT MESSAGE       * 00510000
*         DCL INBUFR CHAR(72) GENERATED; /* WTOR REPLY BUFFER         * 00520000
*         DCL ECB13 FIXED INIT(0);       /* ECB USED BY WTOR AND WAIT * 00530000
*         DCL IFDMSG13 EXT ENTRY;       /* IFDOLT13'S MESSAGE MODULE  * 00540000
*         DCL MSGMOD13 PTR INIT(ADDR(IFDMSG13));       /* ADDRESS OF  * 00550000
*                                                      /* IFDMSG13    * 00560000
*  /* THE FOLLOWING BITS ARE OLTEP'S ROUTING & DESCRIPTOR CODES       * 00570000
*         DCL ROUTCD BIT(32) INIT('00000010000000000000000001000000'B); 00580000
*   GEN(EJECT);                                                         00590000
         EJECT                                                          00600000
         DS    0H                                                       00610000
*         /************************************************************ 00620000
*         /* THE FOLLOWING MAP DESCRIBES THE POINTERS TO THE LIST     * 00630000
*         /* FORM OF MESSAGES IN MODULE IFDMSG13.                     * 00640000
*         /************************************************************ 00650000
*         DECLARE                                                       00660000
*             1 * BASED(MSGMOD13),                                      00670000
*               2 WTOPTR PTR,            /* ADDRESS OF WTO IFD100I    * 00680000
*               2 WTORPTR PTR;           /* ADDRESS OF WTOR IFD101D   * 00690000
*   GEN(EJECT);                                                         00700000
         EJECT                                                          00710000
         DS    0H                                                       00720000
*         /************************************************************ 00730000
*         /* THE FOLLOWING MAP DESCRIBES THE AREAS CONTAINED WITHIN   * 00740000
*         /* THE LIST FORM OF THE MESSAGES IN MODULE IFDMSG13.        * 00750000
*         /************************************************************ 00760000
*         DECLARE                                                       00770000
*             1 * BASED(WTOPTR),         /* LIST FORM OF WTO          * 00780000
*               2 WTOLEN PTR(15),        /* MESSAGE LENGTH            * 00790000
*               2 * CHAR(10),            /* MESSAGE ID                * 00800000
*               2 MSAGE CHAR(63);        /* MESSAGE AREA              * 00810000
*         DECLARE                                                       00820000
*             1 * BASED(WTORPTR),        /* LIST FORM OF WTOR         * 00830000
*               2 REPLYCNT CHAR(1),      /* WTOR REPLY COUNT          * 00840000
*               2 INBUFRAD PTR(24),      /* ADDRESS OF REPLY BUFFER   * 00850000
*               2 ECB13ADR PTR,          /* ADDRESS OF WTOR ECB       * 00860000
*               2 WTORLEN PTR(15),       /* MESSAGE LENGTH            * 00870000
*               2 * CHAR(10),            /* MESSAGE ID                * 00880000
*               2 WRMSAGE CHAR(63);      /* WTOR MESSAGE AREA         * 00890000
*         DCL OLTBUF CHAR(61) BASED(R5);         /* OLT REPLY BUFFER  * 00900000
*         DCL OUTCNT13 CHAR(1);          /* THE OUT MESSAGE LENGTH    * 00910000
*         DCL INCNT13 CHAR(1);           /* THE IN MESSAGE LENGTH     * 00920000
*   GEN(EJECT);                                                         00930000
         EJECT                                                          00940000
         DS    0H                                                       00950000
*         /************************************************************ 00960000
*         /* THE FOLLOWING CODE WILL PERFORM THE FUNCTIONS PROVIDED   * 00970000
*         /* BY CECOM (IFDOLT13).                                     * 00980000
*         /************************************************************ 00990000
*         IF OUTCNT = '00'X THEN        /* IF COUNT IS ZERO           * 01000000
         L     @3,4(0,@1)                                         0031  01010000
         CLI   0(@3),X'00'                                        0031  01020000
         BC    07,@9FF                                            0031  01030000
*           DO;                         /* DO THE FOLLOWING:          * 01040000
*           OUTCNT13 = '01'X;           /* SET COUNT TO 1             * 01050000
         MVI   OUTCNT13,X'01'                                     0033  01060000
*           GO TO CHKWTOR;              /* BRANCH TO WTOR CHECK       * 01070000
         BC    15,CHKWTOR                                         0034  01080000
*           END;                        /* END OUT COUNT TEST         * 01090000
*         IF OUTCNT > '3D'X THEN         /* SET LIMIT ON LENGTH OF    * 01100000
@9FF     L     @3,4(0,@1)                                         0036  01110000
         CLI   0(@3),X'3D'                                        0036  01120000
         BC    12,@9FE                                            0036  01130000
*           OUTCNT13 = '3D'X;            /* OUT MESSAGE TO 61         * 01140000
         MVI   OUTCNT13,X'3D'                                     0037  01150000
         BC    15,@9FD                                            0038  01160000
*         ELSE                           /* HONOR ALL REQUESTS THAT   * 01170000
*           OUTCNT13 = OUTCNT;           /* ARE LESS THAN 61          * 01180000
@9FE     MVC   OUTCNT13(1),0(@3)                                  0038  01190000
* CHKWTOR:                                                              01200000
*         IF R0 = '000001E6'X THEN       /* IF TWO-WAY COMMUNICATIONS * 01210000
@9FD     EQU   *                                                  0039  01220000
CHKWTOR  C     @0,@X4                                             0039  01230000
*           GO TO SETWTO;                /* IS NOT REQUESTED BRANCH   * 01240000
         BC    08,SETWTO                                          0040  01250000
*                                        /* TO SETUP FOR ONE-WAY      * 01260000
*                                        /* COMMUNICATIONS.           * 01270000
*         ELSE                           /* ELSE-SETUP FOR TWO-WAY    * 01280000
*           DO;                          /* COMMUNICATIONS.           * 01290000
*         R5 = INMSGAD;                  /* SET REG 5 TO OLTBUF ADDR  * 01300000
         L     @5,8(0,@1)                                         0042  01310000
*           IF INCNT = '00'X THEN       /* IF REPLY COUNT IS ZERO     * 01320000
         L     @3,12(0,@1)                                        0043  01330000
         CLI   0(@3),X'00'                                        0043  01340000
         BC    07,@9FC                                            0043  01350000
*             DO;                       /* DO THE FOLLOWING:          * 01360000
*             INCNT13 = '01'X;          /* SET CECOM IN COUNT TO 1    * 01370000
         MVI   INCNT13,X'01'                                      0045  01380000
*             REPLYCNT = '01'X;         /* SET WTOR REPLY COUNT TO 1  * 01390000
         L     @4,MSGMOD13                                        0046  01400000
         L     @4,4(0,@4)          A00001                         0046  01410000
         MVI   0(@4),X'01'                                        0046  01420000
*             GO TO SETUP;              /* BRANCH TO SETUP            * 01430000
         BC    15,SETUP                                           0047  01440000
*             END;                      /* END OF COUNT ZERO CHECK    * 01450000
*           IF INCNT > '3D'X THEN        /* SET LIMIT OF REPLY LENGTH * 01460000
@9FC     L     @3,12(0,@1)                                        0049  01470000
         CLI   0(@3),X'3D'                                        0049  01480000
         BC    12,@9FB                                            0049  01490000
*             DO;                        /* TO 61                     * 01500000
*             REPLYCNT = '3D'X;          /* SET REPLY LENGTH IN WTOR  * 01510000
         L     @4,MSGMOD13                                        0051  01520000
         L     @4,4(0,@4)          A00001                         0051  01530000
         MVI   0(@4),X'3D'                                        0051  01540000
*                                        /* PARAMETER LIST            * 01550000
*             INCNT13 = '3D'X;           /* RECORD LENGTH IN CECOM.   * 01560000
         MVI   INCNT13,X'3D'                                      0052  01570000
         BC    15,@9FA                                            0054  01580000
*             END;                                                      01590000
*           ELSE                         /* ELSE- SET REPLY LENGTH IN * 01600000
*             DO;                        /* WTOR PARAMETER LIST TO    * 01610000
*             INCNT13 = INCNT;           /* REQUESTED LENGTH, AND     * 01620000
@9FB     L     @3,12(0,@1)                                        0055  01630000
         MVC   INCNT13(1),0(@3)                                   0055  01640000
*             REPLYCNT = INCNT;          /* RECORD LENGTH IN CECOM.   * 01650000
         L     @4,MSGMOD13                                        0056  01660000
         L     @4,4(0,@4)          A00001                         0056  01670000
         MVC   0(1,@4),0(@3)                                      0056  01680000
*             END;                                                      01690000
*           END;                                                        01700000
@9FA     EQU   *                                                  0058  01710000
* SETUP:                                                                01720000
*         ECB13ADR = ADDR(ECB13);        /* SET WTOR PARAMETER LIST   * 01730000
SETUP    LA    @F,ECB13                                           0059  01740000
         L     @3,MSGMOD13                                        0059  01750000
         L     @3,4(0,@3)          A00001                         0059  01760000
         ST    @F,4(0,@3)                                         0059  01770000
*                                        /* ECB ADDRESS               * 01780000
*         INBUFRAD = ADDR(INBUFR);       /* SET WTOR PARAMETER LIST   * 01790000
         LA    @F,INBUFR                                          0060  01800000
         ST    @F,@TEMP4                                          0060  01810000
         MVC   1(3,@3),@TEMP4+1                                   0060  01820000
*                                        /* REPLY BUFFER ADDRESS      * 01830000
*         WRMSAGE(1:OUTCNT13) = OUTMSG(1:OUTCNT13);     /* MOVE WTOR  * 01840000
         L     @4,0(0,@1)                                         0061  01850000
         LR    @E,@4                                              0061  01860000
         SR    @C,@C                                              0061  01870000
         IC    @C,OUTCNT13                                        0061  01880000
         BCTR  @C,0                                               0061  01890000
         LA    @A,20(0,@3)                                        0061  01900000
         EX    @C,@MVC                                            0061  01910000
*                                        /* MESSAGE INTO WTOR LIST    * 01920000
*         WRMSAGE(OUTCNT13+1:OUTCNT13+5)=ROUTCD; /* SET ROUT & DESC   * 01930000
         LA    @E,ROUTCD                                          0062  01940000
         LA    @C,5                                               0062  01950000
         SR    @0,@0                                              0062  01960000
         IC    @0,OUTCNT13                                        0062  01970000
         AR    @C,@0                                              0062  01980000
         LA    @8,1                                               0062  01990000
         IC    @0,OUTCNT13                                        0062  02000000
         AR    @8,@0                                              0062  02010000
         SR    @C,@8                                              0062  02020000
         LA    @A,19(@8,@3)                                       0062  02030000
         EX    @C,@MVC                                            0062  02040000
*         WTORLEN = OUTCNT13 + 12;       /* SET WTOR OUT MESSAGE LEN. * 02050000
         LA    @F,12                                              0063  02060000
         IC    @0,OUTCNT13                                        0063  02070000
         AR    @F,@0                                              0063  02080000
         STH   @F,8(0,@3)                                         0063  02090000
*         INBUFR = INBUFR && INBUFR;     /* SET REPLY BUFFER TO ZERO  * 02100000
         XC    INBUFR(72),INBUFR                                  0064  02110000
*         ECB13 = 0 ;                    /* SET ECB TO ZERO           * 02120000
         SR    @F,@F                                              0065  02130000
         ST    @F,ECB13                                           0065  02140000
*         R1 = WTORPTR;                  /* SET REG.1 TO ADDRESS OF   * 02150000
         L     @9,MSGMOD13                                        0066  02160000
         L     @1,4(0,@9)                                         0066  02170000
*                                        /* WTOR                      * 02180000
*   GEN(  PWTOR REG=(1),WAIT=YES); /* INVOKE PARALLEL PRINT ROUTINE   * 02190000
           PWTOR REG=(1),WAIT=YES                                       02200000
         DS    0H                                                       02210000
*         OLTBUF(1:INCNT13) = INBUFR(1:INCNT13);   /* MOVE REPLY TO   * 02220000
         LA    @E,INBUFR                                          0068  02230000
         SR    @4,@4                                              0068  02240000
         IC    @4,INCNT13                                         0068  02250000
         BCTR  @4,0                                               0068  02260000
         LR    @A,@5                                              0068  02270000
         EX    @4,@MVC                                            0068  02280000
*                                                  /* OLT AREA        * 02290000
*         GO TO FINISH;                  /* BRANCH TO END ROUTINE     * 02300000
         BC    15,FINISH                                          0069  02310000
*   GEN(EJECT);                                                         02320000
         EJECT                                                          02330000
         DS    0H                                                       02340000
*         /************************************************************ 02350000
*         /* THE FOLLOWING CODE WILL PROVIDE ONE-WAY COMMUNICATION.   * 02360000
*         /************************************************************ 02370000
* SETWTO:                                                               02380000
*         WTOLEN = OUTCNT13 + 12 ;       /* SET OUT MESSAGE LENGTH IN * 02390000
SETWTO   LA    @F,12                                              0071  02400000
         SR    @0,@0                                              0071  02410000
         IC    @0,OUTCNT13                                        0071  02420000
         AR    @F,@0                                              0071  02430000
         L     @3,MSGMOD13                                        0071  02440000
         L     @3,0(0,@3)          A00001                         0071  02450000
         STH   @F,0(0,@3)                                         0071  02460000
*                                        /* WTO PARAMETER LIST        * 02470000
*         MSAGE(1:OUTCNT13) = OUTMSG(1:OUTCNT13);  /* MOVE OUT MESSAGE* 02480000
         L     @4,0(0,@1)                                         0072  02490000
         LR    @E,@4                                              0072  02500000
         SR    @C,@C                                              0072  02510000
         IC    @C,OUTCNT13                                        0072  02520000
         BCTR  @C,0                                               0072  02530000
         LA    @A,12(0,@3)                                        0072  02540000
         EX    @C,@MVC                                            0072  02550000
*                                        /* INTO WTO PARAMETER LIST   * 02560000
*           MSAGE(OUTCNT13+1:OUTCNT13+5)=ROUTCD; /* SET ROUT & DESC   * 02570000
         LA    @E,ROUTCD                                          0073  02580000
         LA    @C,5                                               0073  02590000
         IC    @0,OUTCNT13                                        0073  02600000
         AR    @C,@0                                              0073  02610000
         LA    @8,1                                               0073  02620000
         IC    @0,OUTCNT13                                        0073  02630000
         AR    @8,@0                                              0073  02640000
         SR    @C,@8                                              0073  02650000
         LA    @A,11(@8,@3)                                       0073  02660000
         EX    @C,@MVC                                            0073  02670000
*         R1 = WTOPTR;                   /* SET REG.1 TO WTO ADDRESS  * 02680000
         L     @9,MSGMOD13                                        0074  02690000
         L     @1,0(0,@9)                                         0074  02700000
*   GEN(  PWTO  REG=(1));           /* INVOKE PARALLEL PRINT ROUTINE  * 02710000
           PWTO  REG=(1)                                                02720000
         DS    0H                                                       02730000
* FINISH:                                /* END ROUTINE               * 02740000
*         R15 = '00'X;                   /* SET REG.15 TO ZERO        * 02750000
FINISH   LA    @F,X'00'                                           0076  02760000
*         RETURN;                        /* RETURN TO CALLER          * 02770000
*         END   IFDOLT13;                /* END OF IFDOLT13 MODULE    * 02780000
@EL01    L     @D,4(0,@D)                                         0078  02790000
         L     @E,12(0,@D)                                        0078  02800000
         LM    @0,@C,20(@D)                                       0078  02810000
         BCR   15,@E                                              0078  02820000
@DATA1   EQU   *                                                        02830000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           02840000
@1       EQU   01                                                       02850000
@2       EQU   02                                                       02860000
@3       EQU   03                                                       02870000
@4       EQU   04                                                       02880000
@5       EQU   05                                                       02890000
@6       EQU   06                                                       02900000
@7       EQU   07                                                       02910000
@8       EQU   08                                                       02920000
@9       EQU   09                                                       02930000
@A       EQU   10                                                       02940000
@B       EQU   11                                                       02950000
@C       EQU   12                                                       02960000
@D       EQU   13                                                       02970000
@E       EQU   14                                                       02980000
@F       EQU   15                                                       02990000
@MVC     MVC   0(1,@A),0(@E)                                            03000000
         DS    0F                                                       03010000
@X4      DC    X'000001E6'                                              03020000
         DS    0D                                                       03030000
@DATA    EQU   *                                                        03040000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   03050000
X        EQU   00000000            FULLWORD INTEGER                     03060000
R0       EQU   00000000            FULLWORD POINTER REGISTER            03070000
R1       EQU   00000001            FULLWORD POINTER REGISTER            03080000
R5       EQU   00000005            FULLWORD POINTER REGISTER            03090000
R14      EQU   00000014            FULLWORD POINTER REGISTER            03100000
R15      EQU   00000015            FULLWORD POINTER REGISTER            03110000
A00000   EQU   00000000            16 BYTE(S) ON WORD                   03120000
OUTMSGAD EQU   A00000+00000000     FULLWORD POINTER                     03130000
OUTCNTAD EQU   A00000+00000004     FULLWORD POINTER                     03140000
INMSGAD  EQU   A00000+00000008     FULLWORD POINTER                     03150000
INCNTAD  EQU   A00000+00000012     FULLWORD POINTER                     03160000
OUTCNT   EQU   00000000            1 BYTE(S)                            03170000
INCNT    EQU   00000000            1 BYTE(S)                            03180000
OUTMSG   EQU   00000000            61 BYTE(S)                           03190000
         ORG   @DATA+00000072                                           03200000
ECB13    EQU   *                   FULLWORD INTEGER                     03210000
         DC    FL4'0'                                                   03220000
MSGMOD13 EQU   *                   FULLWORD POINTER                     03230000
         DC    VL4(IFDMSG13)                                            03240000
ROUTCD   EQU   *                   32 BIT(S) ON BYTE                    03250000
         DC    B'00000010000000000000000001000000'                      03260000
A00001   EQU   00000000            8 BYTE(S) ON WORD                    03270000
WTOPTR   EQU   A00001+00000000     FULLWORD POINTER                     03280000
WTORPTR  EQU   A00001+00000004     FULLWORD POINTER                     03290000
A00002   EQU   00000000            75 BYTE(S) ON WORD                   03300000
WTOLEN   EQU   A00002+00000000     HALFWORD POINTER                     03310000
A00003   EQU   A00002+00000002     10 BYTE(S)                           03320000
MSAGE    EQU   A00002+00000012     63 BYTE(S)                           03330000
A00004   EQU   00000000            83 BYTE(S) ON WORD                   03340000
REPLYCNT EQU   A00004+00000000     1 BYTE(S)                            03350000
INBUFRAD EQU   A00004+00000001     3  BYTE  POINTER ON WORD+1           03360000
ECB13ADR EQU   A00004+00000004     FULLWORD POINTER                     03370000
WTORLEN  EQU   A00004+00000008     HALFWORD POINTER                     03380000
A00005   EQU   A00004+00000010     10 BYTE(S)                           03390000
WRMSAGE  EQU   A00004+00000020     63 BYTE(S)                           03400000
OLTBUF   EQU   00000000            61 BYTE(S)                           03410000
OUTCNT13 EQU   @DATA+00000084      1 BYTE(S)                            03420000
INCNT13  EQU   @DATA+00000085      1 BYTE(S)                            03430000
         ORG   @DATA                                                    03440000
         DS    00000086C                                                03450000
@TEMPS   DS    0F                                                       03460000
@TEMP4   DC    F'0'                                                     03470000
DSECT13  IFDCOM                                                         03480000
@DATEND  EQU   *                                                        03490000
         END   IFDOLT13                                                 03500000
./  ADD  SSI=33190546,NAME=IFDOLT14
 TITLE  'IFDOLT14  SCAN, HEADER AND DESCRIPTION LINE SECTIONS'          00200020
****************************** PROLOGUE ******************************* 00400020
*                                                                     * 00600020
*  MODULE NAME: IFDOLT14                                              * 00800002
*                                                                     * 00840002
*  DESCRIPTIVE NAME: SCAN, HEADER AND DESCRIPTION LINES SECTION       * 00880002
*                                                                     * 00920002
*  COPYRIGHT: NONE                                                    * 00960002
*                                                                     * 01000020
*  STATUS: CHANGE LEVEL - 001                                         * 01200001
*                                                                     * 01400020
*  FUNCTION: THIS MODULE IS DESIGNED AS FOLLOWS:                      * 01600020
*                                                                     * 01800020
*            SCAN SECTION                                             * 02000020
*            1) DPRINT OPTIONS CHECKED; ALSO FIRST ERROR AND          * 02200020
*               CATASTROPHIC ERROR CONDITIONS.                        * 02400020
*            2) FORMS CONTROL SETUP                                   * 02600020
*            3) SCAN DPRINT CONTROL WORD AND CALL DPRINT MODULES      * 02800020
*               REQUIRED FOR UNIT TEST ERROR PRINTOUT.                * 03000020
*            4) PRINT FIRST ERROR OR CATASTROPHIC ERROR MESSAGE       * 03200020
*                                                                     * 03400020
*            HEADER, DESCRIPTION SECTION                              * 03600020
*            1) SETUP HEADER LINE FOR PRINT                           * 03800020
*            2) SETUP DESCRIPTION LINES FOR PRINT                     * 04000020
*                                                                     * 04200020
*  ENTRY POINT: IFDOLT14                                              * 04400020
*                                                                     * 04600020
*  INPUTS: DPRINT PARAMETER LISTS                                     * 04800020
*                                                                     * 05000020
*  REGISTER USAGE: R1  - ADDRESS OF DPRINT PARAMETERS                 * 05200020
*                  R2  - ADDRESS OF SECTION CTRL TABLE IN OLTEP ROOT  * 05400020
*                  R3  - BASE REG FOR UNIT TEST SECTION PREFACE       * 05600020
*                  R4  - BASE REG FOR THIS MODULE                     * 05800020
*                  R5-R11 - MISC.                                     * 06000020
*                  R12 - ADDRESS OF DPRINT PARAMETER CTRL WORD        * 06200020
*                  R13 - ADDRESS OF CALLERS SAVE AREA; CONVERT ADDR   * 06400020
*                  R14 - ADDRESS OF CALLERS RETURN PT; CONVERT ADDR   * 06600020
*                  R15 - LINK ADDR; CONVERT COUNT; RETURN CODE        * 06800020
*                                                                     * 07000020
*  EXTERNAL ROUTINES: IFDOLT39- PARALLEL PRINT OUTPUT WRITER          * 07200020
*                                                                     * 07400020
*  EXITS - NORMAL: RETURN TO ENTRY-EXIT SECTION OF IFDOLT39           * 07600020
*           ERROR: NONE                                               * 07800020
*                                                                     * 08000020
*  ATTRIBUTES: SERIALLY REUSABLE                                      * 08200020
*                                                                     * 08400020
* APAR OX01058 SAVE RTN CODES                                  0X01058* 08450002
*********************************************************************** 08600020
*  CHANGE 03/71 - HANDLING OF EP/NEP,FE/NFE,ETC PARAMETERS            * 08630001
*               - CHAIN=YES SUPPORT                                   * 08660001
*               - SPACE BETWEEN OLT DPRINTS                           * 08690001
*               - SYMBOLIC NAME IN HEADER                             * 08720001
*                                                                     * 08724002
*  CHANGE ACTIVITY: AS FOLLOWS                                        * 08728002
*                                                                     * 08732002
*    CLEANUP:                                                   Y02906* 08736002
*      C170000,A170600,D828000                                        * 08740002
*    PTM #05407:                                                YM5407* 08741002
*      A936460                                                        * 08745002
*********************************************************************** 08750001
         EJECT                                                          08800020
IFDOLT14 CSECT                                                          09000020
*A646000                                                         A52641 09060001
*        TO FIX ABEND DUE TO FE OPTION,ERROR DPRINT W/O HEADER        * 09120001
         SPACE                                                          09200020
         USING IFDOLT14,R4         HEADER MODULE BASE REG               09400020
         USING CHASCT,R2                                                09600020
         USING RTN#,R3             BASE REG FOR SECTION PREFACE         09800020
         SPACE                                                          10000020
R1       EQU   1                                                        10200020
R2       EQU   2                                                        10400020
R3       EQU   3                                                        10600020
R4       EQU   4                                                        10800020
R5       EQU   5                                                        11000020
R6       EQU   6                                                        11200020
R7       EQU   7                                                        11400020
R8       EQU   8                                                        11600020
R9       EQU   9                                                        11800020
R10      EQU   10                                                       12000020
R11      EQU   11                                                       12200020
R12      EQU   12                                                       12400020
R13      EQU   13                                                       12600020
R14      EQU   14                                                       12800020
R15      EQU   15                                                       13000020
WTOFLG   EQU   X'01'                                                    13200020
RSTRFLG  EQU   X'80'                                                    13400020
WRTFLG   EQU   X'10'                                                    13600020
NFEFLG   EQU   X'08'                                                    13800020
DPRFLG   EQU   X'40'                                                    14000020
HDRFLG   EQU   X'80'                                                    14200020
FERINT   EQU   X'02'                                                    14400020
NDRFLG   EQU   X'04'                                                    14600020
FFEFLG   EQU   X'20'                                                    14800020
FCEFLG   EQU  X'10'                                                     15000020
PFEMSG   EQU  X'08'                                                     15200020
PCEMSG   EQU  X'04'                                                     15400020
NPROPT   EQU   X'04'                                                    15600020
NEPOPT   EQU   X'04'                                                    15800020
SYMNAME  EQU   X'08'                                                    15860001
SYMBFLG  EQU   X'02'                                                    15920001
         EJECT                                                          16000020
*********************************************************************** 16200020
*        SCAN DPRINT PARAMETERS                                       * 16400020
*********************************************************************** 16600020
         SPACE                                                          16800020
DPR000   SAVE (14,12),,IFDOLT14&SYSDATE                                 17000002
*        ESTABLISH DATE AND SAVE REGS                                   17060002
         SPACE  3                                                       17120002
         LR    R4,R15              LOAD BASE REG                        17200020
         L     R3,SECPTR           BASE REG FOR UNIT TEST SECT PREF.    17400020
         AH    R3,10(R3)           ADD DISPLACEMENT FOR RTN# ADDR       17600020
         LA    R5,SHDSA            ADDRESS OF MODULE REG SAVE AREA      17800020
         ST    R5,8(R13)           STORE IT IN CALLER'S SA              18000020
         ST    R13,4(R5)           STORE ADDR OF CALLER'S SA            18200020
         L     R1,4(R1)            DPRINT PARAMETER ADDRESS       M4506 18400020
         ST    R1,SAVER1           SAVE IT                              18600020
         SPACE                                                          18800020
         XC    DPRTRNCD(4),DPRTRNCD  CLEAR RETURN CODE WORD             19000020
         CLI   1(R1),X'03'         MACRO LEVEL OK?                      19200001
         BNH   DPRSCAN             YES.                                 19400001
         MVI   DPRTRNCD+3,X'04'    NO.  SET RETURN CODE TO 04           19600020
         B     DPR111A             RETURN VIA COMM INTERVAL RTN         19800001
         SPACE                                                          20000020
DPRSCAN  L     R12,4(R1)           DPRINT CONTROL WORD ADDR             20200020
         MVI   PRTBUFR+1,C' '      FILL PRINT BUFFER WITH BLANKS        20400020
         MVC   PRTBUFR+2(120),PRTBUFR+1                                 20600020
         SPACE                                                          20800020
* CHECK DPRINT OPTIONS; FIRST ERROR, CATASTROPHIC ERROR CONDITIONS.     21000020
         SPACE                                                          21200020
DPR100   TM    0(R12),X'02'        ERROR DPRINT REQUESTED               21400001
         BZ    DPR100A             NO.  BRANCH                          21600001
         OI    CHASCT+3,X'C0'      YES. SET TEST ERR, ASTERIK BITS      21800001
DPR100A  TM    CHASCT+3,X'03'      ERROR LOOP OR TEST LOOP REQUESTED    22000001
         BZ    DPR100B             NO.  BR IF BOTH OFF                  22200001
         TM    CHASCT+2,NPROPT     YES. PRINT OPTION ON                 22400001
         BZ    DPR113              NO.  BYPASS PRINT                    22600001
         SPACE                                                          22800001
DPR100B  TM    0(R12),X'02'        ERROR DPRINT REQUESTED               23000001
         BZ    DPR101              NO.  CONTINUE                        23200001
         TM    CHASCT+3,X'20'      YES. CATASTROPHIC ERROR BIT ON       23400001
         BZ    DPR100C             NO.  BRANCH                          23600001
         TM    CESWT5,FCEFLG       YES. FIRST CAT ERROR FLAG ON         23800001
         BNZ   DPR100C             YES. BRANCH                          24000001
         OI    CESWT5,FCEFLG       NO.  SET IT ON                       24200001
         OI    CESWT5,PCEMSG       TURN ON PRINT CAT ERR MSG FLAG       24400001
         SPACE                                                          24600001
DPR100C  TM    CHASCT+2,X'01'      FE COMM OPTION ON                    24800001
         BNZ   DPR100D             YES.  BRANCH                         25000001
         TM    CHASCT+3,NEPOPT     NO.  ERROR PRINT OPTION ON           25200001
         BZ    DPR101              YES. CONTINUE                        25400001
         B     DPR100E             BRANCH                               25500001
DPR100D  TM    CESWT5,FFEFLG       FIRST FE FLAG                        25600001
         BNZ   DPR100E             YES. BRANCH                          25800001
         OI    CESWT5,FFEFLG       NO.  SET IT ON                       26000001
         OI    CESWT5,PFEMSG       TURN ON PRINT FE MSG FLAG            26200001
DPR100E  TM    CHASCT+3,NEPOPT     ERROR PRINT OPTION ON                26400001
         BZ    DPR101              YES. BRANCH                          26600001
         TM    CESWT5,PFEMSG+PCEMSG  NO. PRINT FE OR CAT ERR MSG.       26800001
         BZ    DPR113                                                   27000001
         SPACE                                                          27600020
* FORMS CONTROL SETUP                                                   27800020
         SPACE                                                          28000020
DPR101   SR    R8,R8               CLEAR R8                             28200020
         IC    R8,0(R12)           GET FORMS CONTROL BITS               28400020
         SRL   R8,5                SHIFT BITS                           28600020
         XC    FORMS(2),FORMS      CLEAR                                28800020
         STC   R8,FORMS            STORE FORMS CONTROL                  29000020
         CLI   FORMS,X'05'         RESTORE PAGE ?                       29200020
         BE    DPR110C             YES.                                 29400020
         MVI   PRTBUFR,X'09'       NO. LOAD CTRL CHARC-SPACE 1 LINE     29600020
         SPACE                                                          29800020
* CHECK DPRINT CONTROL WORD FOR ACTIVE PARAMETERS                       30000020
         SPACE                                                          30200020
DPR106   TM    0(R12),X'10'        PRINT HEADER LINE                    30400020
         BZ    DPR107              NO.                                  30600020
         BAL   R14,DPRHDR          YES. HEADER SECTION                  30800020
         B     DPR108              BRANCH TO CHECK RSLTS PRINTOUT       31000020
         SPACE                                                          31200020
* TEST FOR DESCRIPTION LINES PRINT                                      31400020
         SPACE                                                          31600020
DPR107   TM    2(R12),X'80'        PRINT DESCRIPTION LINES              31800020
         BZ    DPR108              NO.                                  32000020
         BAL   R14,DPR030          YES. DESCRIPTION SECTION             32200020
         SPACE                                                          32400001
* TEST FOR RESULTS PRINT                                                32800020
         SPACE                                                          33000020
DPR108   LA    R13,SHDSA           SAVE AREA ADDRESS              M4506 33200020
         TM    2(R12),X'7F'        PRINT RESULTS                  M4506 33400020
         BZ    DPR109              NO PRINT                       M4506 33600020
         B     DPR109A             PRINT                          M4506 33800020
DPR109   TM    3(R12),X'EC'        PRINT DATA, CC                 M4506 34000020
         BZ    DPR110              NO PRINT                       M4506 34200020
DPR109A  BAL   R9,DPRCL15          CALL MODULE ROUTINE            M4506 34400020
         CLI   DPRTRNCD+3,X'00'    ANY RETURN CODE ALREADY SET?         34600001
         BNE   DPR109B             YES.  BYPASS STORE                   34800001
         STC   R15,DPRTRNCD+3      NO.  STORE IT                        35000001
DPR109B  OI    CESWT3,X'08'        SUSPEND DELETION               M4506 35200020
         BAL   R9,DPRCL15          CALL MODULE ROUTINE            M4506 35400020
         B     DPR110                                             M4506 35600020
DPRCL15  IFDMOD CALL='15',LIST=SAVER1                             M4506 35800020
         BCR   15,R9               RETURN                         M4506 36000020
DPRCL17  IFDMOD CALL='17',LIST=SAVER1                             M4506 36200020
         BCR   15,R9               RETURN                       0X01058 36400002
         SPACE                                                          36600001
* TEST FOR MESSAGE LINES PRINT                                          37000020
         SPACE                                                          37200020
DPR110   TM    1(R12),X'01'        PRINT MESSAGES                       37400020
         BZ    DPR110A             NO.                                  37600020
         LA    R13,SHDSA           SAVE AREA ADDRESS                    37800020
         BAL   R9,DPRCL17          CALL MODULE ROUTINE            M4506 38000020
         LTR   R15,R15      IS RET ZERO?                        0X01058 38050002
         BZ    DPRCL17X   IF ZERO DONT SAVE                     0X01058 38060002
         ST    R15,DPRTRNCD        SAVE RETURN CODE              XM0796 38070002
DPRCL17X OI    CESWT3,X'08'        SUSPEND DELETION               M4506 38200002
         BAL   R9,DPRCL17          CALL MODULE ROUTINE            M4506 38400020
         SPACE                                                          38600020
* FORMS CONTROL- SPACE 2, 3 LINES, OR RESTORE PAGE.                     38800020
         SPACE                                                          39000020
DPR110A  CLI   FORMS,X'04'         PRINT RESTORE ?                      39200020
         BE    DPR110C             YES.                                 39400020
         CLI   FORMS,X'02'         NO. SPACE 2 LINES ?                  39600020
         BNE   DPR110B             NO.                                  39800020
         MVI   PRTBUFR,X'09'       YES. LOAD CTRL CHARC FOR 1 LINE      40000020
         B     DPR110D                                                  40200020
DPR110B  CLI   FORMS,X'03'         SPACE 3 LINES ?                      40400020
         BNE   DPR111              NO.                                  40600020
         MVI   PRTBUFR,X'11'       YES. LOAD CTRL CHARC FOR 2 LINES     40800020
         B     DPR110D                                                  41000020
DPR110C  MVI   PRTBUFR,X'8B'       RESTORE PAGR CTRL CHARC              41200020
         OI    CESWT4,RSTRFLG                                           41400020
DPR110D  LA    R13,SHDSA           SAVE AREA ADDRESS                    41600020
         PWRT  SIZE=70             RESTORE PAGE                         41800020
         MVI   PRTBUFR,X'09'       DEFAULT TO SPACE 1 LINE              42000020
         CLI   FORMS,X'05'         RESTORE PAGE OP ?                    42200020
         BE    DPR113              YES. TO EXIT ROUTINE                 42400020
         SPACE 2                                                        42600001
*********************************************************************** 43000020
*        FIRST ERROR, CATASTROPHIC ERROR MESSAGES OUTPUT              * 43200020
*********************************************************************** 43400020
         SPACE                                                          43600020
DPR111   TM    0(R12),X'08'        DPRINT CHAINING REQUESTED            43800001
         BO    DPR113              YES.                                 43860001
         TM    0(R12),X'02'        NO.  IS IT AN ERROR DPRINT     M5076 43862001
         BZ    DPR113              BRANCH IF NO                   M5076 43864001
         TM    CESWT5,PFEMSG+PCEMSG  PRINT FIRST ERR OR CAT ERR MSG?   X43867001
                                                                  21051 43874001
         BZ    DPR113              NO.                            21051 43881001
         TM    0(R12),X'10'        YES. HAS HEADER BEEN PRINTED?  21051 43888001
         BO    DPR111A             YES.                           21051 43895001
         BAL   R9,DPR010           NO. USE HDR RTN TO GET DEVADR, ETC. X43902001
                                                                  21051 43909001
DPR111A  TM    CESWT5,PFEMSG       NO.  PRINT FIRST ERROR MSG           43920001
         BO    DPR117              YES.  GO PRINT IT                    44000020
DPR112   TM    CESWT5,PCEMSG       NO.  PRINT FIRST CAT ERROR MSG       44200020
         BO    DPR118              YES.  GO PRINT IT.                   44400020
         SPACE                                                          44800020
* RETURN TO ENTRY-EXIT ROOT SECTION                                     45000020
         SPACE                                                          45200020
DPR113   L     R13,SHDSA+4         ADDRESS OF CALLER'S SA               45400020
         MVC   16(4,R13),DPRTRNCD  RETURN CODE IN R15 SAVE AREA         45600020
         LM    R14,R12,12(R13)     RESTORE REGS                         45800020
         BR    R14                 RETURN TO ENTRY-EXIT DPRINT ROOT     46000020
         SPACE                                                          46200020
* INITIATE FIRST ERROR COMMUNICATION MESSAGE                            46400020
         SPACE                                                          46600020
DPR117   LA    R1,IFDMSG14         MESSAGE TABLE ADDRESS                46800020
         L     R1,0*4(R1)          GET MESSAGE ADDRESS                  47000020
         L     R7,SECPTR           SECTION PREFACE POINTER              47200020
         MVC   38(8,R1),0(R7)      UNIT TEST ID                         47400020
         SPACE                                                          47600020
         MVC   47(3,R1),RTNNUM+1   ROUTINE NUMBER INTO MSG              47800001
         MVC   56(4,R1),DEVADR     DEVICE ADDR INTO MSG- EBCDIC         48800001
         MVC   61(8,R1),SYMBNM     SYMBOLIC NAME  OR BLANKS             49800001
         SPACE                                                          51000020
         LA    R13,SHDSA           SAVE AREA ADDRESS                    51200020
         PWTO  REG=(1)             WRITE TO OPERATOR MESSAGE            51400020
         B     DPR112              RETURN HERE                          51600020
         SPACE                                                          51800001
* INITIATE CATASTROPHIC ERROR MESSAGE TO OPERATOR                       52400020
         SPACE                                                          52600020
DPR118   LA    R1,IFDMSG14         MESSAGE TABLE ADDRESS                52800001
         L     R1,1*4(R1)          GET MESSAGE ADDRESS                  53200001
         MVC   41(4,R1),DEVADR     DEVICE ADDRESS - EBCDIC              53600001
         MVC   46(8,R1),SYMBNM     SYMBOLIC NAME OR BLANKS              54000001
         SPACE                                                          54600020
         LA    R13,SHDSA           SAVE AREA ADDRESS                    54800020
         PWTO  REG=(1)             WRITE TO OPERATOR MESSAGE            55000020
         B     DPR113              RETURN HERE                          55200020
         SPACE                                                          55400020
         CNOP  0,8                                                      55600020
SHDSA    DS    18F                 REGISTER SAVE AREA                   55800020
         CNOP  0,4                                                      56000020
SAVER1   DC    XL4'0'                                                   56200020
RTNNUM   DS    CL4' '              ROUTINE NUMBER- EBCDIC               56250001
DEVADR   DS    CL4' '              DEVICE ADDRESS- EBCDIC               56300001
SYMBNM   DS    CL8' '              DEVICE SYMBOLIC NAME                 56350001
DPRTRNCD DC    XL4'0'              RETURN CODE                          56400020
FORMS    DC    XL2'0'              FORMS CONTROL                        56600020
         SPACE 2                                                        56800001
*********************************************************************** 57000020
*        HEADER                                                       * 57200020
*********************************************************************** 57400020
         SPACE                                                          57600020
DPRHDR   ST    R14,SAVE14          SAVE LINK ADDRESS                    57800020
         L     R12,4(R1)           ADDRESS OF DPRINT CONTROL WORD       58000020
         TM    0(R12),X'10'        PRINT HEADER ?                       58200020
         BZ    DPR030+4            NO                                   58400020
         BAL   R10,DPRWRT          YES. PRINT BLANK LINE FOR SPACE      58600001
         TM    0(R12),X'02'        IS IT AN ERROR HEADER                58700001
         BZ    DPR010              NO                                   58800020
         MVI   PB,C'*'             YES.  PREFIX WITH '*'                59000020
         OI    3(R2),X'C0'         SET ERROR MSG BITS IN SCT            59100001
         SPACE                                                          59200020
* GET TEST SECTION ID, ROUTINE NO. FROM SECTION PREFACE.                59400020
         SPACE                                                          59600020
DPR010   L     R7,SECPTR           POINTER TO SECTION PREFACE           59800020
         MVC   PB+1(8),0(R7)       UNIT TEST ID FROM SECT PREF          60000020
         MVI   PB+9,X'60'          PUT DASH IN BUFFER                   60200020
         MVC   PB+10(2),8(R7)      ADD LEVEL TO IT                      60400020
         MVC   PB+14(3),=C'RTN'    PUT 'RTN' IN PRINT BUFFER            60600020
         SR    R7,R7              CLEAR R7.                             60800020
         IC    R7,RTN#            GET ROUTINE NUMBER.                   61000020
         CVD   R7,WRK             CONVERT TO DECIMAL.                   61200020
         SPACE                                                          61400020
         LA    R13,WRK+6          GET ADDR OF RTN NO.                   61600020
         LA    R14,WRK            GET OUTPUT ADDR.                      61800020
         LA    R15,2              GET COUNT                             62000020
         BAL   R10,DPRCNV         CONVERT RTN NO. TO EBCDIC.            62200020
         MVC   PB+18(3),WRK        PUT RTN NUMBER IN PRINT BUFFER       62400020
         MVC   RTNNUM+1(3),WRK     SAVE FOR FIRST ERR MSG               62500001
         SPACE                                                          62600020
* GET DEVICE ADDRESS FROM EITHER DPRINT PARAM TABLE, TECB, OR SCT.      62800020
         SPACE                                                          63000020
         MVC   PB+24(11),=C'DEV/LN NONE'  PUT IN PRINT BUFFER           63200001
         TM    CESWT2,NDRFLG       IS A DEVICE REQUESTED                63400020
         BZ    DPR011              YES                                  63600020
         B     DPR016              BRANCH TO BYPASS DEV ADDRESS LOAD    63800001
DPR011   MVC   DPRDEVAD+2(2),9(R12)  GET DEVICE ADDRESS PARAMETER       64200001
         CLC   DPRDEVAD+2(2),=X'0000'  IS IT ZERO                       64400001
         BNE   DPR015              BRANCH IF NO                         64600001
         L     R1,SAVER1               GET PARM LIST ADDR       A52641  64700001
         SPACE                                                          64800020
         L     R13,12(R1)         GET TECB ADDRESS.                     65000020
         LTR   R13,R13            IS A TECB ADDRESS SUPPLIED ?          65200020
         BZ    DPR012              NO. GET ADDRESS FROM SCT             65400020
         CLI   7(R13),X'00'        YES. IS THERE A POSTED EVENT FIELD   65600020
         BE    DPR012              NO.                                  65800020
         MVC   DPRDEVAD+1(3),9(R13)     GET DEV ADDR FROM TECB          66000001
         B     DPR015                                                   66200020
DPR012   MVC   DPRDEVAD(4),CHASCT+12  GET PRIME DEV ADDR FROM SCT       66400001
         SPACE                                                          66600020
DPR015   LA    R13,DPRDEVAD+2      INPUT ADDRESS FOR CONVERT            66800001
         LA    R14,PB+31           OUTPUT ADDRESS FOR CONVERT           66900001
         LA    R15,2              GET COUNT.                            67000020
         BAL   R10,DPRCNV         CONVERT DEV ADDR TO EBCDIC.           67200020
         CLC   DPRDEVAD(4),CHASCT+12   SAME DEV AS IN SCT?              67400001
         BNE   DPR016              NO. BYPASS SYMBOLIC NAME CHECK       67430001
         TM    CHASCT+11,SYMNAME   YES.  DEV SYMBOLIC NAME GIVEN?       67460001
         BZ    DPR016              NO.                                  67490001
         MVC   PB+36(8),CHASCT+24  YES. PUT IT IN PRINT BUFFER          67520001
         MVC   SYMBNM(8),CHASCT+24 SAVE FOR FIRST ERR, CAT ERR MSGS     67550001
         OI    CESWT5,SYMBFLG      SYMBOLIC NAME FLAG                   67580001
         B     DPR016A                                                  67610001
DPR016   MVI   SYMBNM,C' '         CLEAR WITH BLANKS                    67640001
         MVC   SYMBNM+1(7),SYMBNM                                       67670001
DPR016A  MVC   DEVADR(4),PB+31     SAVE DEV ADDR FOR FE, CAT ERR MSGS   67700001
         TM    0(R12),X'10'        REGULAR PRINT HEADER ENTRY?    21051 67706001
         BO    DPR020              YES.                           21051 67712001
         BR    R9                  NO.  RETURN TO FIRST ERROR MSG RTN. X67718001
                                                                  21051 67724001
         SPACE                                                          67730001
* GET REFERENCE NO., ECA NO. FROM SECTION PREFACE.                      67800020
         SPACE                                                          68000020
DPR020   LA    R6,PB+3             GET PRINT BUFR ADDR FOR ADJUSTMENT   68200001
         TM    CESWT5,SYMBFLG      IS SYMBOLIC NAME TO BE PRINTED       68250001
         BZ    DPR020A             NO                                   68300001
         LA    R6,8(R6)            YES.  MOVE OVER ECA                  68350001
DPR020A  MVC   35(3,R6),=C'ECA'    PUT 'ECA' IN PRINT BUFFER            68400001
         MVC   39(3,R6),ECA#       ALSO ECA NUMBER                      68450001
         SPACE                                                          68500001
DPR023   TM    0(R12),X'01'        IS REFNUM TO BE PRINTED              68600020
         BZ    DPR025              BRANCH IF NO                         68800020
         SPACE                                                          69000020
         MVC   44(6,R6),=C'REFNUM'  PUT IN PRINT BUFFER                 69200001
         MVC   WRK(1),REFNUM      MOVE 1ST 2 DIGITS TO WORK AREA.       69400020
         MVC   WRK+1(2),7(R12)     MOVE LAST 3 DIGITS TO WORK AREA      69600020
         LA    R13,WRK            GET INPUT ADDR FOR CONVERT.           69800020
         LA    R14,WRK+8          GET OUTPUT ADDR FOR CONVERT.          70000020
         LA    R15,3              GET COUNT.                            70200020
         BAL   R10,DPRCNV         CONVERT REFNUM TO EBCDIC.             70400020
         MVC   51(2,R6),WRK+8      PUT FIRST 2 DIGITD IN PRINT BUFFER   70600001
         MVC   53(3,R6),WRK+11     PUT NEXT 3 DIGITS IN PRINT BUFFER    70800001
         SPACE                                                          71000020
DPR025   OI    CESWT5,HDRFLG       SET HEADER FLAG                      71200020
         BAL   R10,DPRWRT          PRINT HEADER LINE                    71400020
         NI    CESWT5,255-HDRFLG    RESET THIS FLAG                     71600020
         NI    CESWT5,255-HDRFLG-SYMBFLG  RESET THESE FLAGS             71700001
         B     DPR030+4            PRINT DESCRIPTION LINES              71800020
         SPACE 2                                                        72000020
*********************************************************************** 72200020
*        DESCRIPTION                                                  * 72400020
*********************************************************************** 72600020
         SPACE                                                          72800020
DPR030   ST    R14,SAVE14          SAVE LINK ADDR FOR RETURN            73000020
         TM    2(R12),X'80'        PRINT DESCRIPTION LINES?             73200020
         BZ    DPR041              NO.  EXIT ROUTINE                    73400020
         SR    R7,R7               YES.  CLEAR R7                       73600020
         IC    R7,16(R12)          GET NUMBER OF DESC LINES             73800020
         LTR   R7,R7               NO. OF LINES = 0 ?                   74000020
         BZ    DPR042              YES.  EXIT RTN                 M5076 74200001
         LA    R11,60(R1)          POINTER TO DESC LINE ADDRESS         74400020
         LA    R8,23(R12)          ADDRESS OF BYTE COUNT                74600020
         SPACE                                                          74800020
DPR035   SR    R6,R6              CLEAR R6.                             75000020
         IC    R6,0(R8)           GET COUNT.                            75200020
         LTR   R6,R6              COUNT = 0 ?                           75400020
         BZ    DPR040             BRANCH YES.                           75600020
         LH    R5,MAXCNT          GET MAX NO. BYTES ALLOWED.            75800020
         CR    R6,R5              COUNT GREATER THAN MAX ?              76000020
         BNH   DPR037             BRANCH IF NO.                         76200020
         LR    R6,R5               SET COUNT TO MAX                     76400020
         SPACE                                                          76600001
DPR037   L     R5,0(R11)           GET DESC LINE ADDR                   77000020
         BCTR  R6,0               REDUCE COUNT FOR EXECUTE OF MVC.      77200020
         EX    R6,DPR605          MOVE DESC LINE TO PRINT BUFFER.       77400020
         BAL   R10,DPRWRT          GO PRINT DESCRIPTION LINE            77600020
         SPACE                                                          77800020
DPR040   LA    R11,4(R11)         GET ADDR OF DESC LINE 2 ADDR.         78000020
         LA    R8,1(R8)            GET NEXT COUNT ADDRESS         M1010 78200020
         BCT   R7,DPR035          PROCESS LINE 2.                       78400020
         SPACE                                                          78600020
DPR041   L     R14,SAVE14          RESTORE LINK ADDRESS                 78800020
         BR    R14                 RETURN TO SCAN SECTION               79000020
DPR042   MVI   DPRTRNCD+3,X'0C'    SET RETURN CODE                M5076 79060001
         B     DPR041                                             M5076 79120001
         SPACE                                                          79200020
DPR605   MVC   PB(0),0(R5)         MOVE TO PRINT BUFFER                 79400020
         EJECT                                                          79600001
*********************************************************************** 79800020
*    PRINT HEADER, DESCRIPTION LINE VIA PARALLEL PRINT OUTPUT WRITER  * 80000020
*********************************************************************** 80200020
         SPACE                                                          80400020
DPRWRT   LA    R13,SHDSA           SAVE AREA ADDRESS                    80600020
         PWRT  SIZE=120                                         SA46329 80800001
         MVI   PB,C' '             CLEAR PRINT BUFFER WITH BLANKS       81000020
         MVC   PB+1(120),PB                                             81200020
         L     R1,SAVER1           RESTORE DPRINT PARAMETER PTR         81400020
         L     R12,4(R1)           ADDRESS OF DPRINT CTRL WORD          81600020
         BR    R10                 RETURN TO CALLING ROUTINE            81800020
         SPACE                                                          82000020
WRK      DS    16D                                                      82200020
DPRDEVAD DC    XL4'0'              DEVICE ADDRESS - HEX                 82300001
SAVE14   DC    XL4'0'                                                   82400020
MAXCNT   DC    H'119'              MAX PRINT CHARACTERS           M1010 82600020
         SPACE                                                          83000020
*********************************************************************** 83200020
*              DPRINT MESSAGE SECTION                                 * 83400020
*********************************************************************** 83600020
         SPACE 1                                                        83800020
IFDMSG14 DC    A(IFD129)                                                84000020
         DC    A(IFD157)                                                84200020
         SPACE                                                          84400020
IFD129   WTO   'IFD129I FIRST ERROR COMMUNICATION XXXXXXXX YYY UNIT ZZZX84600001
               Z SSSSSSSS',MF=L,ROUTCDE=10,DESC=7                       84800001
IFD157   WTO   'IFD157I CATASTROPHIC ERROR ON DEVICE XXXX SSSSSSSS',MF=X85000001
               L,ROUTCDE=10,DESC=7                                      85200001
         EJECT                                                          85400020
*********************************************************************** 85600020
*        DPRCNV - HEX TO EBCDIC CONVERT                               * 85800020
*                                                                     * 86000020
*              CALL SEQ -  R13 = INPUT ADDRESS                        * 86200020
*                          R14 = OUTPUT ADDRESS                       * 86400020
*                          R15 = INPUT BYTE COUNT                     * 86600020
*                                                                     * 86800020
*                          BAL R10,DPRCNV                             * 87000020
*********************************************************************** 87200020
         SPACE                                                          87400020
DPRCNV   STM   R5,R6,SAVREGS2      SAVE REGS 5, 6                       87600020
         STM   R13,R15,SAVREGS3    SAVE REGS 13-15                      87800020
         SPACE                                                          88000020
         LTR   R15,R15            COUNT = 0 ?                           88200020
         BZ    DPRCNV8            BRANCH IF YES.                        88400020
         SPACE                                                          88600020
         AR    R14,R15         ADD COUNT TO OUTPUT ADDR.                88800020
         AR    R14,R15            ADD COUNT AGAIN.                      89000020
         AR    R13,R15            ADD COUNT TO INPUT ADDR.              89200020
         SR    R5,R5              CLEAR R5.                             89400020
         SR    R6,R6              CLEAR R6.                             89600020
         SPACE                                                          89800020
DPRCNV4  S     R14,=F'2'          GET ADDR OF LAST BYTE OF OUTPUT.      90000020
         BCTR  R13,0              GET ADDR OF LAST BYTE OF INPUT.       90200020
         IC    R6,0(R13)          GET HEX BYTE.                         90400020
         LR    R5,R6              PUT IN R5.                            90600020
         SRL   R6,4               GET BITS 0-3 IN R6.                   90800020
         N     R5,=F'15'          GET BITS 4-7 IN R5.                   91000020
         IC    R6,DPREBC(R6)      CONVERT BITS 0-3 TO EBCDIC CHAR.      91200020
         IC    R5,DPREBC(R5)      CONVERT BITS 4-7 TO EBCDIC CHAR.      91400020
         STC   R6,0(R14)          STORE 1ST EBCDIC CHAR IN OUTPUT.      91600020
         STC   R5,1(R14)          STORE 2ND EBCDIC CHAR IN OUTPUT.      91800020
         BCT   R15,DPRCNV4        GET NEXT HEX BYTE.                    92000020
DPRCNV8  LM    R5,R6,SAVREGS2      RESTORE REGS 5, 6                    92200020
         LM    R13,R15,SAVREGS3    RESTORE REGS 13-15                   92400020
         BR    R10                RETURN TO CALLER.                     92600020
         SPACE                                                          92800020
DPREBC   DC    C'0123456789ABCDEF' HEX TO EBCDIC CONVERT TABLE.         93000020
         CNOP  0,4                                                      93200020
SAVREGS2 DC    2F'00'                                                   93400020
SAVREGS3 DC    3F'00'                                                   93600020
SECPREF  DSECT                         SECTION PREFACE                  93607002
RTN#     DS    CL1                                                      93614002
         DS    CL16                                                     93621002
REFNUM   DS    CL1                                                      93628002
         DS    CL14                                                     93635002
ECA#     DS    CL3                                                      93642002
IFDOLT14 CSECT                                                   YM5407 93646002
DPRCOM   IFDCOM                                                         93650002
PB       EQU   PRTBUFR+1                                                93720002
         SPACE                                                          93800020
         SPACE                                                          95200020
         END                                                            95800020
./  ADD  SSI=33190512,NAME=IFDOLT15
 TITLE  'IFDOLT15  RESULTS AND DATA SECTIONS'                           00100020
*                                                                       00130002
*                                                                       00160002
****************************** PROLOGUE ******************************* 00200020
*                                                                     * 00300020
*  MODULE NAME: IFDOLT15                                              * 00400002
*                                                                     * 00420002
*  DESCRIPTIVE NAME: DPRINT RESULTS AND DATA                          * 00440002
*                                                                     * 00460002
*  COPYRIGHT: NONE                                                    * 00480002
*                                                                     * 00500020
*  STATUS: CHANGE LEVEL - 000                                         * 00600020
*                                                                     * 00700020
*  FUNCTION: THIS MODULE IS DESIGNED AS FOLLOWS:                      * 00800020
*                                                                     * 00900020
*            1) TEST DPRINT CONTROL FIELD DEFINITION BITS TO          * 01000020
*               DETERMINE IF THE FOLLOWING  ARE TO BE PRINTED:        * 01100020
*                 CAW, CCW'S, ICW                                     * 01200020
*                 EXPECTED, RECEIVED CONDITION CODE                   * 01300020
*                 EXPECTED, RECEIVED CSW                              * 01400020
*                 EXPECTED, RECEIVED SENSE DATA                       * 01500020
*                 EXPECTED, RECEIVED, WRITTEN DATA                    * 01600020
*            2) GET THE ADDRESS AND BYTE COUNT FOR THE ITEM.          * 01700020
*               IF EITHER IS NOT GIVEN, SET THE RETURN CODE TO 0C.    * 01800020
*            3) GET, CONVERT TO EBCDIC, AND LOAD A RESULT OR DATA     * 01900020
*               LINE IN THE PRINT BUFFER.                             * 02000020
*            4) IDENTIFY AN ERROR LINE WITH AN ASTERISK.              * 02100020
*            5) PRINT THE RESULT OR DATA LINE WITH A COMMON           * 02200020
*               PWRT INNER MACRO ROUTINE.                             * 02300020
*            6) DO THE ABOVE UNTIL ALL LINES HAVE BEEN PRINTED.       * 02400020
*                                                                     * 02500020
*  ENTRY POINT: IFDOLT15 - FROM THE SCAN SECTION OF IFDOLT14.         * 02600020
*                                                                     * 02700020
*  INPUT: DPRINT PARAMETER LIST IN TEST SECTION.                      * 02800020
*                                                                     * 02900020
*  REGISTER USAGE: R1  - ADDRESS OF DPRINT PARAMETER LIST.            * 03000020
*                  R2  - ADDRESS OF SECT CTRL TABLE IN OLTEP ROOT.    * 03100020
*                  R3  - ADDRESS OF TECB MAP.                         * 03200020
*                  R4  - BASE REG FOR THIS MODULE.                    * 03300020
*                  R5-R11 - MISCELLANEOUS                             * 03400020
*                  R12 - ADDRESS OF DPRINT CONTROL FIELD WORD.        * 03500020
*                  R13 - ADDR OF CALLER'S SAVE AREA; ALSO CONVERT RTN * 03600020
*                  R14 - ADDR OF CALLER'S RETURN PT; ALSO CONVERT RTN * 03700020
*                  R15 - LINK ADDR; CONVERT COUNT; RETURN CODE.       * 03800020
*                                                                     * 03900020
*  EXTERNAL ROUTINES: IFDOLT39 -PARALLEL PRINT OUTPUT WRITER.         * 04000020
*                                                                     * 04100020
*  EXITS - NORMAL: RETURN TO SCAN SECTION OF IFDOLT14.                * 04200020
*        -  ERROR: NONE                                               * 04300020
*                                                                     * 04400020
*  ATTRIBUTES: SERIALLY REUSABLE                                      * 04500020
*                                                                     * 04600020
*  CHANGE ACTIVITY: CLEANUP - C072000,A072300,D696000           Y02906* 04630002
*                   PTM #03338 - C313000,D313070-313140,D313600,Y03338* 04640002
*                                A313620                        Y03338* 04650002
*                   PTM #05407 - A709500                        Y05407* 04655002
*                                                                     * 04660002
*********************************************************************** 04700020
         EJECT                                                          04800020
         SPACE 2                                                        04900020
IFDOLT15 CSECT                                                          05000020
*  IMPLEMENT EMPTY TECB FUNCTION                                 Y01906 05020002
*D282000                                                         A42315 05050001
*A147300,A147600                                                SA53321 05070001
         USING IFDOLT15,R4         BASE REG FOR MODULE                  05100020
         USING CHASCT,R2           BASE REG FOR SECTION CTRL TABLE      05200020
         USING TECBMAP,R3                                               05300020
         SPACE                                                          05400020
R1       EQU   1                                                        05500020
R2       EQU   2                                                        05600020
R3       EQU   3                                                        05700020
R4       EQU   4                                                        05800020
R5       EQU   5                                                        05900020
R6       EQU   6                                                        06000020
R7       EQU   7                                                        06100020
R8       EQU   8                                                        06200020
R9       EQU   9                                                        06300020
R10      EQU   10                                                       06400020
R11      EQU   11                                                       06500020
R12      EQU   12                                                       06600020
R13      EQU   13                                                       06700020
R14      EQU   14                                                       06800020
R15      EQU   15                                                       06900020
RSLTFLG  EQU   X'40'                                                    07000020
         SPACE                                                          07100020
DPRRSLTS SAVE (14,12),,IFDOLR15&SYSDATE                                 07200002
*        ESTABLISH DATE AND SAVE REGS                                   07230002
         SPACE  3                                                       07260002
         LR    R4,R15              LOAD BASE REG                        07300020
         LA    R5,RSLTSA           ADDRESS OF RESULTS SAVE AREA         07400020
         ST    R5,8(R13)           STORE IN CALLER'S SA                 07500020
         ST    R13,4(R5)           STORE ADDRESS OF CALLER'S SA         07600020
         L     R5,4(R1)            ADR PTR SAVE AREA              M4506 07700020
         L     R1,0(R5)            GET DPRINT PARAMETER PTR             07800020
         L     R12,4(R1)           PTR TO DPRINT CTRL FIELD WORD        07900020
         L     R3,12(R1)           TECB ADDRESS                         08000020
         ST    R1,SAVER1           SAVE DPRINT PARAMETER PTR            08100020
         XC    RETCODE(4),RETCODE  CLEAR IT                             08200020
         EJECT                                                          08300020
*********************************************************************** 08400020
*              SET UP DEVICE ADDRESS                                  * 08500020
*********************************************************************** 08600020
         SPACE                                                          08700020
DPR001   MVC   DPRDEVAD+2(2),9(R12)  GET DEV ADDR FROM OLT              08800020
         CLC   DPRDEVAD+2(2),=X'0000'  IS IT 0?                         08900020
         BNE   DPR050              BRANCH IF NO                         09000020
         L     R9,12(R1)           PTR TO TECB                          09100020
         LTR   R9,R9               IS TECB ADDR GIVEN ?                 09200020
         BZ    DPR002              BR IF NO                             09300020
         CLI   TCBEVOC,X'00'       IS THERE A POSTED EVENT FIELD        09400020
         BE    DPR002              BR IF NO                             09500020
         MVC   DPRDEVAD+1(3),TCBFD01+1  PUT DEV ADDR IN BUFFER          09600020
         B     DPR050                                                   09700020
DPR002   MVC   DPRDEVAD(4),12(R2)  GET PRIME DEV ADDR                   09800020
         SPACE                                                          09900020
*********************************************************************** 10000020
*   CAW   CCW                                                           10100020
*********************************************************************** 10200020
         SPACE                                                          10300020
DPR050   TM    2(R12),X'40'        PRINT CCW?                           10400020
         BZ    DPR060              BR IF NO                             10500020
         L     R7,20(R1)           GET CCW ADDRESS                      10600020
         LTR   R7,R7               IS IT 0?                             10700020
         BNZ   DPR052              BR IF NO                             10800020
DPR050A  MVI   DPRTRNCD,X'0C'      SET RETURN CODE 0C                   10900020
         B     DPR060              GO CHK FOR CC PRINT                  11000020
         SPACE                                                          11100020
DPR052   MVC   PB+32(3),=C'CAW'    PUT ' CAW' IN PRINT BUFFER           11200020
         LA    R13,20(R1)          GET CCW ADDRESS                      11300020
         LA    R14,PB+37           GET OUTPUT ADDR FOR CONVERT          11400020
         LA    R15,4               GET COUNT                            11500020
         BAL   R10,DPRCNV          CONVERT CCW ADDR TO EBCDIC           11600020
         SR    R8,R8               CLEAR                                11700020
DPR052A  IC    R8,11(R12)          GET CCW COUNT                        11800020
         LTR   R8,R8               IS IT 0?                             11900020
         BZ    DPR050A             BR IF YES                            12000020
         SR    R5,R5               CLEAR                                12100020
         IC    R5,12(R12)          GET NO. OF FAILING CCW               12200020
         LA    R6,1                SET CCW NO.                          12300020
DPR053   MVC   PB+1(3),=C'CCW'     PUT 'CCW' IN PRINT BUFFER            12400020
         TM    3(R12),X'10'        ICW ?                                12500020
         BZ    DPR053A             BR IF NO                             12600020
         MVI   PB+1,C'I'           PUT 'I' IN BUFFER                    12700020
DPR053A  CVD   R6,WRK              CONVERT CCW NO. TO DECIMAL           12800020
         SPACE                                                          12900020
         LA    R13,WRK+6           GET ADDR OF CCW NO.                  13000020
         LA    R14,WRK             GET OUTPUT ADDR                      13100020
         LA    R15,2               GET COUNT                            13200020
         BAL   R10,DPRCNV          CONVERT CCW NO. TO EBCDIC            13300020
DPR054   MVC   PB+4(2),WRK+1       PUT CCW NO. IN PRINT BUFFER          13400020
         SPACE                                                          13500020
DPR056   LR    R13,R7              GET CCW ADDR                         13600020
         LA    R14,WRK             GET OUTPUT ADDR FOR CONVERT          13700020
         LA    R15,8               GET COUNT                            13800020
         BAL   R10,DPRCNV          CONVERT CCW TO EBCDIC                13900020
         MVC   PB+7(2),WRK         MOVE CMND CODE                       14000020
         MVC   PB+10(6),WRK+2         DATA ADDR                         14100020
         MVC   PB+17(2),WRK+8           FLAGS                           14200020
         MVC   PB+20(2),WRK+10             UNUSED FLD                   14300020
         MVC   PB+23(4),WRK+12               BUTE COUNT TO BUFFER       14400020
         SPACE                                                          14500020
         CR    R6,R5               IS THIS FAILING CCW?                 14600020
         BNE   DPR058              BR IF NO                             14700020
         TM    1(R12),X'40'            IS IT ERROR CCW?         SA53321 14730001
         BZ    DPR058                  BR IF NOT                SA53321 14760001
         MVI   PB,C'*'             PREFIX CCW WITH *                    14800020
DPR058   BAL   R10,DPRWRT          GO PRINT CCW LINE                    14900020
         SPACE                                                          15000020
         LA    R6,1(R6)            BUMP CCW NO.                         15100020
         LA    R7,8(R7)            POINT TO NEXT CCW                    15200020
         BCT   R8,DPR053           GO PROCESS NEXT CCW                  15300020
         SPACE                                                          15400020
*********************************************************************** 15500020
*   CONDITION CODE                                                    * 15600020
*********************************************************************** 15700020
         SPACE                                                          15800020
DPR060   DS    0H                                                Y01906 15900002
         MVI   DPRFLAG,X'00'           CLEAR IT                  Y01906 15930002
         TM    3(R12),X'04'            PRINT CC?                 Y01906 15960002
         BZ    DPR080              BR IF NO                             16000020
         SR    R6,R6               CLEAR                                16100020
         IC    R6,6(R12)           GET EXPECTED CC                      16200020
         LTR   R6,R6               IS IT GIVEN?                         16300020
         BZ    DPR070              BR IF NO                             16400020
         L     R5,16(R1)           GET RECEIVED CC ADDRESS              16500020
         LTR   R5,R5               IS IT 0?                             16600020
         BNZ   DPR061              BR IF NO                       21051 16700001
         SPACE                                                          16800020
* GET RECEIVED CONDITION CODE FROM A TECB FIELD.                        16820001
         SPACE                                                          16840001
         OI    DPRFLAG,DPRLKCC     TURN ON LOOK FOR CC FLAG       21051 16860001
         LTR   R3,R3                   TECB ADDR 0?              Y01906 16870002
         BZ    DPR070                  YES-BRANCH                Y01906 16880002
         BAL   R10,DPR175          GO FIND FLD IN TECB                  16900020
         TM    DPRFLAG,DPRSCHFL    SEARCH FAIL?                         17000020
         BO    DPR061A                 YES-BRANCH                Y01906 17100002
         TM    DPRFLAG,DPRQUED         QUEUED?                   Y01906 17110002
         BNO   DPR060A                 NO-BRANCH                 Y01906 17120002
         MVC   PB+22(6),=C'QUEUED'     YES-SAY SO                Y01906 17130002
         B     DPR064                  GO AROUND                 Y01906 17140002
DPR060A  DS    0H                                                Y01906 17150002
         LR    R5,R13              PUT POINTER IN R5                    17200020
DPR061   DS    0H                                                 21051 17250001
         CLI   0(R5),X'FF'         IS CODE 'FF'                         17300020
         BNE   DPR062              BR IF NO                             17400020
DPR061A  DS    0H                                                Y01906 17450002
         MVI   PB+22,X'F0'         PUT CC 0 IN PRINT BUFFER             17500020
         B     DPR064                                                   17600020
         SPACE                                                          17700020
DPR062   CLI   0(R5),C'0'          IS CC=0,1,2,3?                 21051 17730001
         BE    DPR063                                             21051 17760001
         CLI   0(R5),C'1'                                         21051 17790001
         BE    DPR063                                             21051 17820001
         CLI   0(R5),C'2'                                         21051 17850001
         BE    DPR063                                             21051 17880001
         CLI   0(R5),C'3'                                         21051 17910001
         BNE   DPR070              NO.  SET RETURN CODE TO 0C     21051 17940001
DPR063   MVC   PB+22(1),0(R5)      MOVE CC TO PRINT BUFFER              18000020
DPR064   STC   R6,PB+9             PUT XPTD CC IN BUFFER                18100020
         MVC   PB+1(7),=C'XPTD CC'  PUT 'XPTD CC' IN BUFFER             18200020
         MVC   PB+14(7),=C'RCVD CC'  PUT 'RCVD CC' IN BUFFER            18300020
         TM    3(R12),X'02'        IS CC IN ERROR?                      18400020
         BZ    DPR066              BR IF NO                             18500020
         MVI   PB,C'*'             PUT * IN BUFFER                      18600020
         SPACE                                                          18700020
DPR066   BAL   R10,DPRWRT          GO PRINT CC LINE                     18800020
         B     DPR080              GO CHK FOR XPTD CSW PRINT            18900020
         SPACE                                                          19000020
DPR070   MVI   DPRTRNCD,X'0C'      SET RTRN CODE TO 0C                  19100020
         MVI   DPRFLAG,X'00'           CLEAR IT                  Y01906 19200002
         B     DPR080              GO CHK FOR XPTD CSW PRINT            19300020
         SPACE                                                          19400020
*********************************************************************** 19500020
*        EXPECTED  CSW                                                * 19600020
*********************************************************************** 19700020
         SPACE                                                          19800020
DPR080   DS    0H                                                Y01906 19900002
         MVI   DPRFLAG,X'00'           CLEAR IT                  Y01906 19930002
         SR    R7,R7                   CLEAR IT                  Y01906 19960002
         IC    R7,13(R12)          GET XPTD CSW MASKS                   20000020
         STC   R7,DPRMASK          SAVE IT                              20100020
         TM    2(R12),X'20'        PRINT CSW1?                          20200020
         BNZ   DPR086              BR IF YES                            20300020
         SPACE                                                          20400020
DPR082   LA    R11,DPR100          GET RTRN ADDR                        20500020
         LA    R5,PB+11            POINT TO FLD IN BUFR                 20600020
         BAL   R10,DPR092          GO CHK FOR XCSW2 PRINT               20700020
         SPACE                                                          20800020
         MVC   PB+1(9),=C'XPTD CSW2'  PUT 'XPTD CSW2' IN BUFR           20900020
         TM    3(R12),X'01'        PSW PRINT?                           21000020
         BZ    DPR084              BR IF NO                             21100020
         MVI   PB+6,C'P'           PUT 'P' IN BUFR                      21200020
DPR084   B     DPR098              GO PRINT                             21300020
         SPACE                                                          21400020
DPR086   L     R13,24(R1)          GET XPTD CSW1 ADDRESS                21500020
         LTR   R13,R13             IS IT 0?                             21600020
         BNZ   DPR088              BR IF NO                             21700020
         MVI   DPRTRNCD,X'0C'      SET RTRN CODE 0C                     21800020
         B     DPR082              BR TO CHK XCSW2                      21900020
         SPACE                                                          22000020
DPR088   MVC   PB+1(9),=C'XPTD CSW1'  PUT 'XPTD CSW1' IN BUFR           22100020
         TM    3(R12),X'01'        PSW?                                 22200020
         BZ    DPR090              BR IF NO                             22300020
         MVI   PB+6,C'P'           PUT 'P' IN BUFR                      22400020
DPR090   LA    R5,PB+11            GET FLD IN BUFR                      22500020
         BAL   R11,DPR450          GO SET UP FOR PRINT                  22600020
         SPACE                                                          22700001
         LA    R11,DPR098          GET RTRN ADDR                        22900020
         LA    R5,PB+37            GET FLD ADDR IN BUFR                 23000020
         BAL   R10,DPR092          GO CHK FOR XCSW2 PRINT               23100020
         MVC   PB+32(4),=C'CSW2'   PUT 'CSW2' IN BUFR                   23200020
         TM    3(R12),X'01'        PSW ?                                23300020
         BZ    DPR098              BR IF NO                             23400020
         MVI   PB+32,C'P'          PUT 'P' IN BUFR                      23500020
         B     DPR098              BR TO PRINT                          23600020
         SPACE                                                          23700020
DPR092   TM    2(R12),X'08'        PRINT XCSW2?                         23800020
         BNZ   DPR094              BR IF YES                            23900020
         BR    R11                 RETURN                               24000020
         SPACE                                                          24100020
DPR094   SR    R7,R7               CLEAR                                24200020
         IC    R7,DPRMASK          GET MASK                             24300020
         SLL   R7,28                  FOR XCSW2                         24400020
         SRL   R7,24                                                    24500020
         STC   R7,DPRMASK          PUT BACK                             24600020
         L     R13,32(R1)          GET XCSW2 ADDRESS                    24700020
         LTR   R13,R13             IS IT 0?                             24800020
         BNZ   DPR096              BR IF NO                             24900020
         MVI   DPRTRNCD,X'0C'      SET RTRN CODE 0C                     25000020
         BR    R11                 RETURN                               25100020
         SPACE                                                          25200020
DPR096   BAL   R11,DPR450          GO SET UP FOR PRINT                  25300020
         BR    R10                 RETURN                               25400020
         SPACE                                                          25500020
DPR098   BAL   R10,DPRWRT          GO PRINT EXPECTED CSW LINE           25600020
         B     DPR100                                                   25700020
         SPACE                                                          25800020
*********************************************************************** 25900020
*        RECEIVED  CSW                                                * 26000020
*********************************************************************** 26100020
         SPACE                                                          26200020
DPR100   MVI   DPRMASK,X'FF'           SET MASK TO ONES                 26300020
         MVI   DPRFLAG,X'00'           CLEAR IT                  Y01906 26350002
         TM    2(R12),X'10'            PRINT RCVD CSW1?                 26400020
         BNZ   DPR102              BR IF YES                            26500020
DPR101   LA    R11,DPR200          GET RTRN ADDR                        26600020
         LA    R5,PB+11            GET FIELD ADDR IN PRINT BUFFER       26700020
         BAL   R10,DPR150          GO CHK FOR CSW2 PRINT                26800020
         BAL   R11,DPR450              GO SET UP                 Y01906 26850002
         MVC   PB+1(9),=C'RCVD CSW2'  PUT 'RCVD CSW2 IN PRINT BUFFER    26900020
         TM    3(R12),X'01'        PSW PRINT?                           27000020
         BZ    DPR101A             BR IF NO                             27100020
         MVI   PB+6,C'P'           PUT 'P' IN BUFFER                    27200020
DPR101A  B     DPR110B             GO PRINT                             27300020
         SPACE                                                          27400020
DPR102   L     R13,28(R1)          GET RCVD CSW1 ADDRESS                27500020
         LTR   R13,R13             IS ADDR GIVEN?                       27600020
         BNZ   DPR105              BR IF YES                            27700020
         LTR   R3,R3                   TECB ADDR 0?              Y01906 27710002
         BNZ   DPR102A                 NO-BRANCH                 Y01906 27720002
         MVI   DPRTRNCD,X'0C'          SET RTRN CODE X'0C'       Y01906 27730002
         B     DPR200                  GO CHK FOR SNS PRINT      Y01906 27740002
DPR102A  DS    0H                                                Y01906 27750002
         BAL   R10,DPR175          GO FIND EVENT IN TECB                27800020
         MVC   PB+11(4),DPRNONE        ASSUME NONE               Y01906 27900002
         LA    R13,4(R13)              ASSUME SOME               Y01906 28000002
         SPACE                                                          28300020
DPR105   TM    1(R12),X'20'        RCVD CSW1 ERROR ?                    28400020
         BZ    DPR110              BR IF NO                             28500020
         MVI   PB,C'*'             PREFIX CSW WITH '*'                  28600020
DPR110   MVC   PB+1(9),=C'RCVD CSW1'  PUT 'RCVD CSW1' IN PRINT BUFFER   28700020
         TM    3(R12),X'01'        PSW PRINT?                           28800020
         BZ    DPR110A             BR IF NO                             28900020
         MVI   PB+6,C'P'           PUT 'P' IN BUFFER                    29000020
DPR110A  LA    R5,PB+11            GET FLD ADDR IN PRINT BUFFER         29100020
         BAL   R11,DPR450          GO SET UP FOR PRINT                  29200020
         NI    DPRFLAG,255-DPRSCHFL-DPRQUED  CLEAR EM            Y01906 29250002
         SPACE                                                          29300020
         LA    R11,DPR115          GET RETURN ADDR                      29400020
         LA    R5,PB+37            GET FLD ADDR IN BUFR                 29500020
         BAL   R10,DPR150          GO CHK FOR CSW2 PRINT                29600020
         BAL   R11,DPR450                                        Y01906 29650002
         MVC   PB+32(4),=C'CSW2'   PUT 'CSW2' IN PRINT BUFFER           29700020
         TM    3(R12),X'01'        PSW PRINT?                           29800020
         BZ    DPR110B             BR IF NO                             29900020
         MVI   PB+32,C'P'          PUT PSW IN BUFFER                    30000020
DPR110B  TM    1(R12),X'10'        CSW2 ERROR?                          30100020
         BZ    DPR115              BR IF NO                             30200020
         MVI   PB,C'*'             PREFIX LINE WITH *                   30300020
         SPACE                                                          30400020
DPR115   BAL   R10,DPRWRT          GO PRINT RECEIVED CSW LINE           30500020
         B     DPR200              GO CHK FOR XPTD SNS PRINT            30600020
         SPACE                                                          30700020
DPR150   TM    2(R12),X'04'        PRINT CSW2 ?                         30800020
         BNZ   DPR155              BR IF YES                            30900020
         BR    R11                 RETURN ON R11                        31000020
DPR155   L     R13,36(R1)          GET RECEIVED CSW2 ADDRESS            31100020
         LTR   R13,R13             IS ADDRESS GIGEN                     31150002
         BCR   7,R10               YES, GO AROUND CHECK          Y03338 31200002
DPR160   DS    0H                                                Y01906 31321002
         LTR   R3,R3                   TECB ADDR ZERO?           Y01906 31330002
         BNZ   DPR160A                 YES-GO AROUND             Y03338 31337002
         MVI   DPRTRNCD,X'0C'          NO-SET RTN CODE 0C        Y01906 31344002
         BR    R11                     GO BACK                   Y01906 31351002
DPR160A  DS    0H                                                Y03338 31360002
         MVI   DPRFLAG,DPRSCH02    TURN ON FLG FOR CSW2 SEARCH          31400020
         ST    R10,DSAVERGS        SAVE REG 10                          31500020
         MVC   0(4,R5),DPRNONE         SAY NONE                  Y01906 31550002
         BAL   R10,DPR175          GO FIND CSW2 IN TECB                 31600020
         L     R10,DSAVERGS        RESTORE R10                          31700020
         LA    R13,4(R13)              ASSUME SOME               Y01906 31800002
         BR    R10                 RETURN ON R10                        32300020
         SPACE                                                          32400020
*********************************************************************** 32500020
* ENTER HERE TO FIND FLD IN TECB FOR CC, CSW, PSW                     * 32600001
*********************************************************************** 32700020
         SPACE                                                          32800020
DPR175   SR    R15,R15             CLEAR                                32900020
         SR    R14,R14             CLEAR                                33000020
         NI    DPRFLAG,255-DPRSCHFL-DPRQUED  CLEAR EM            Y01906 33200002
         IC    R15,TCBEVOC             GET NO FLDS TO CHK        Y01906 33250002
         CLC   TCBEVOC(1),TCBFDCT  COMPARE CNT TO EVNT COUNT            33300020
         BC    12,DPR177           BR ON EVNT CNT LE TO FLD CNT         33400020
         IC    R15,TCBFDCT         GET NO. OF FIELDS TO CHECK           33500020
DPR177   DS    0H                                                Y01906 33600002
         LTR   R15,R15             IS EVOC 0 ?                          33900020
         BZ    DPR185              BR IF 0                              34000020
DPR179   IC    R14,TCBFDLN         GET FLD LNGTH                        34100020
         LA    R13,TCBFD01         PTR TO FIRST EVENT FLD               34200020
DPR181   CLC   1(3,R13),DPRDEVAD+1  EVENT FLD FOR DEV?                  34300020
         BNE   DPR183              BR IF NO                             34400020
         TM    DPRFLAG,DPRLKCC     LOOKING FOR CC?                21051 34408001
         BZ    DPR181A             NO.                            21051 34416001
         TM    0(R13),X'F0'        YES.  IS THERE A CC ENTRY?     21051 34424001
         BO    DPR187              YES.                           21051 34432001
         B     DPR183              NO.  TRY NEXT FIELD.           21051 34440001
         SPACE                                                          34448001
DPR181A  TM    3(R12),X'01'        LOOKING FOR A PSW?             21051 34456001
         BNZ   DPR183A             YES.                           21051 34464001
         CLI   0(R13),X'F0'        NO.  CC=0 FIELD?               21051 34472001
         BE    DPR183              YES                            21051 34480001
DPR182A  DS    0H                                                 21051 34488001
         TM    DPRFLAG,DPRSCH02    THIS THE ONE I WANT?                 34500020
         BZ    DPR187              BR IF YES                            34600020
         SPACE                                                          34700020
         NI    DPRFLAG,255-DPRSCH02  TURN OFF SEARCH CSW2 FLAG          34800020
DPR183   AR    R13,R14             BUMP TO NEXT FLD                     34900020
         BCT   R15,DPR181          GO CHK IF CORRECT FLD                35000020
         SPACE                                                          35100020
DPR185   DS    0H                                                Y01906 35200002
         TM    TCBFLGS,QUEUED          SIO QUEUED?               Y01906 35210002
         BNO   DPR185A                 NO-BRANCH                 Y01906 35220002
         OI    DPRFLAG,DPRQUED         TURN ON Q FLG             Y01906 35230002
         BR    R10                     GO                        Y01906 35240002
DPR185A  DS    0H                                                Y01906 35250002
         OI    DPRFLAG,DPRSCHFL    TURN ON SEARCH FAIL FLAG             35300020
DPR187   BR    R10                 RETURN                               35400020
DPR183A  DS    0H                                                 21051 35420001
         TM    0(R13),X'F0'        IS IT A PSW ENTRY?             21051 35440001
         BNO   DPR182A             BRANCH IF NOT A COND CODE      21051 35460001
         B     DPR183              CHECK NEXT ENTRY               21051 35480001
         SPACE                                                          35500020
*********************************************************************** 35600020
*        EXPECTED SENSE                                               * 35700020
*********************************************************************** 35800020
         SPACE                                                          35900020
         SPACE                                                          36000020
DPR200   DS    0H                                                Y01906 36100002
         MVI   DPRFLAG,X'00'           CLEAR IT                  Y01906 36130002
         TM    2(R12),X'02'            PRINT XPTD SNS?           Y01906 36160002
         BZ    DPR210              NO. BRANCH                     M1005 36200020
         L     R13,40(R1)          YES. GET EXPECTED SENSE ADDR   M1005 36300020
         LTR   R13,R13             IS ADDRESS GIVEN               M1005 36400020
         BNZ   DPR201              YES. BRANCH                    M1005 36500020
DPR200A  MVI   DPRTRNCD,X'0C'      NO. SET RETURN CODE 0C         M1005 36600020
         B     DPR210              GO CHK FOR RCVD SENSE PRINT    M1005 36700020
         SPACE                                                          36800020
DPR201   SR    R7,R7               CLEAR REG                      M1005 36900020
         IC    R7,14(R12)          GET EXPECTED SENSE BYTE COUNT  M1005 37000020
         LTR   R7,R7               IS IT 0?                       M1005 37100020
         BZ    DPR200A             YES. BRANCH                    M1005 37200020
         SPACE                                                          37300020
DPR203   MVC   PB+1(8),=C'XPTD SNS'  LOAD IN PRINT BUFFER         M1005 37400020
         BAL   R10,DPR218AA        LOAD SENSE DATA IN PB          M1005 37500020
         B     DPR210              GO CHK FOR RCVD SENSE PRINT    M1005 37600020
         SPACE                                                          37700020
*********************************************************************** 37800020
*        RECEIVED SENSE                                               * 37900020
*********************************************************************** 38000020
         SPACE                                                          38100020
DPR210   DS    0H                                                Y01906 38200002
         MVI   DPRFLAG,X'00'           CLEAR IT                  Y01906 38230002
         TM    2(R12),X'01'            PRINT RCVD SNS?           Y01906 38260002
         BZ    DPR230              NO. BRANCH                     M1005 38300020
         L     R13,44(R1)          YES. GET RCVD SENSE ADDRESS    M1005 38400020
         LTR   R13,R13             IS ADDRESS GIVEN?              M1005 38500020
         BZ    DPR211              NO. CHK IF TECB ADDR GIVEN     M1005 38600020
         SPACE                                                          38700020
         SR    R7,R7               CLEAR REG                      M1005 38800020
         IC    R7,15(R12)          GET SENSE BYTE COUNT           M1005 38900020
         LTR   R7,R7               IS IT 0?                       M1005 39000020
         BZ    DPR212              YES. BRANCH                    M1005 39100020
DPR210A  MVC   PB+1(8),=C'RCVD SNS'  LOAD IN PRINT BUFFER         M1005 39200020
         TM    1(R12),X'02'        IS THERE A SENSE ERROR?        M1005 39300020
         BZ    DPR210B             NO. BRANCH                     M1005 39400020
         MVI   PB,C'*'             YES. IDENTIFY IT WITH AN *     M1005 39500020
DPR210B  BAL   R10,DPR218AA        LOAD SENSE INFO IN PRINT BUFR  M1005 39600020
         B     DPR230              GO CHECK FOR DATA PRINT        M1005 39700020
         SPACE                                                          39800020
* GET RECEIVED SENSE DATA FROM TECB                                     39900020
         SPACE                                                          40000020
DPR211   DS    0H                                                Y01906 40100002
         LTR   R3,R3                   ZERO?                     Y01906 40200002
         BZ    DPR212                  BR IF YES                  M1005 40300002
         BAL   R10,DPR213          GET RCVD SENSE FROM TECB       M1005 40400020
         B     DPR210A             GO LOAD IT IN PRINT BUFFER     M1005 40500020
DPR212   MVI   DPRTRNCD,X'0C'      SET RETURN CODE 0C             M1005 40600020
         B     DPR230              GO CHECK FOR DATA PRINT        M1005 40700020
         SPACE                                                          40800020
DPR213   ST    R10,SAVER10         SAVE R10                       M1005 40900020
         SR    R10,R10             CLEAR REG                      M1005 41000020
         SR    R14,R14             CLEAR REG                      M1005 41100020
         IC    R10,TCBSNOC             GET NO FLDS TO CHK        Y01906 41150002
         CLC   TCBSNOC(1),TCBSNCT  COMPARE EVENT COUNT TO FLD CNT M1005 41200020
         BC    12,DPR215               BR IF EVNT CNT LE FLD CNT Y01906 41300002
         IC    R10,TCBSNCT         GET NUMBER OF FLDS TO CHECK    M1005 41400020
DPR215   LTR   R10,R10             IS IT 0?                       M1005 41800020
         BNZ   DPR215B                 NO-BRANCH                 Y01906 41900002
DPR215A  DS    0H                                                Y01906 41920002
         OI    DPRFLAG,DPRSCHFL        TURN ON FAIL FLAG         Y01906 41940002
         B     DPR218                  GO RTRN                   Y01906 41960002
DPR215B  DS    0H                                                Y01906 41980002
         LH    R14,TCBSNLN         NO. GET FIELD LENGTH           M1005 42000020
         SR    R6,R6               CLEAR REG                      M1005 42100020
         SR    R7,R7               CLEAR REG                      M1005 42200020
         SR    R8,R8               CLEAR REG                      M1005 42300020
         IC    R7,TCBFDLN          GET FIELD SIZE                 M1005 42400020
         IC    R8,TCBFDCT          GET NUMBER OF FIELDS           M1005 42500020
         MR    R6,R8               MULTIPLY BY NUMBER OF FIELDS   M1005 42600020
         LA    R8,8                ADD 8 TO                       M1005 42700020
         AR    R7,R8               TOTAL LENGTH OF FIELDS         M1005 42800020
         AR    R7,R3                   POINT TO 1ST TECB SNSFLD  Y01906 42900002
         LR    R13,R7              PUT SENSE FIELD ADDRESS IN R13 M1005 43000020
         SPACE                                                          43100020
DPR216   CLC   0(3,R13),DPRDEVAD+1  CHK DEV ADDR FOR RIGHT FIELD  M1005 43200020
         BE    DPR217              YES. BRANCH TO GET SENSE INFO  M1005 43300020
         AR    R13,R14             NO. BUMP TO NEXT FIELD         M1005 43400020
         BCT   R10,DPR216          GO CHECK FIELD                 M1005 43500020
         B     DPR215A                 NO FLD FOUND              Y01906 43600002
         SPACE                                                          43700020
DPR217   LA    R13,3(R13)          POINT TO SENSE DATA            M1005 43800020
         SR    R7,R7               CLEAR REG                      M1005 43900020
         IC    R7,15(R12)          GET RCVD SNS CNT FROM PARM LISTM1005 44000020
         LTR   R7,R7               IS IT 0?                       M1005 44100020
         BNZ   DPR218              NO. BRANCH                     M1005 44200020
         LH    R7,TCBSNLN              GET TECB RCVD SNS CNT     Y01906 44300002
         SH    R7,THREE                MINUS 3                   Y01906 44350002
         LTR   R7,R7               IS IT 0?                       M1005 44400020
         BZ    DPR215A                 YES-BRANCH                Y01906 44500002
DPR218   L     R10,SAVER10         RESTORE REG                    M1005 44600020
         BR    R10                 RETURN                         M1005 44700020
         SPACE                                                          44800020
* CONVERT EXPECTED OR RECEIVED SENSE DATA AND LOAD PRINT BUFFER   M1005 44900020
         SPACE                                                          45000020
DPR218AA ST    R10,SAVER10         SAVE REG                       M1005 45100020
DPR218AB DS    0H                                                Y01906 45200002
         TM    DPRFLAG,DPRSCHFL        SEARCH FAIL?              Y01906 45210002
         BZ    DPR218AC                NO- BRANCH                Y01906 45220002
         MVC   PB+12(4),DPRNONE        YES-SAY NONE              Y01906 45230002
         OI    DPRFLAG,DPRLINE         TURN ON LAST LINE FLG     Y01906 45240002
         B     DPR219A                 GO                        Y01906 45250002
DPR218AC DS    0H                                                Y01906 45260002
         LA    R14,WRK                 GET OUTPUT ADDR FOR CNVRT Y01906 45270002
         CH    R7,MAXSNS           COUNT GREATER THAN LINE MAX?   M1005 45300020
         BNH   DPR218A             NO. BRANCH                     M1005 45400020
         LH    R15,MAXSNS          YES. PUT MAX COUNT IN R15      M1005 45500020
         B     DPR218B                                            M1005 45600020
         SPACE                                                          45700020
DPR218A  OI    DPRFLAG,DPRLINE     TURN ON LAST SENSE LINE FLAG   M1005 45800020
         LR    R15,R7              PUT COUNT IN R15               M1005 45900020
DPR218B  BAL   R10,DPRCNV          CONVERT RCVD SENSE TO EBCDIC   M1005 46000020
         LA    R6,PB+12            PRINT BUFR ADDR FOR FIRST BYTE M1005 46100020
         LA    R5,WRK              GET ADDR OF 1ST SENSE BYTE     M1005 46200020
DPR219   MVC   0(2,R6),0(R5)       MOVE SENSE ONE BYTE AT A TIME  M1005 46300020
         LA    R6,3(R6)            GET NEXT PRINT BUFR ADDRESS    M1005 46400020
         LA    R5,2(R5)            GET NEXT SENSE BYTE ADDRESS    M1005 46500020
         BCT   R15,DPR219          MOVE NEXT BYTE                 M1005 46600020
DPR219A  DS    0H                                                Y01906 46650002
         BAL   R10,DPRWRT          PRINT SENSE LINE               M1005 46700020
         TM    DPRFLAG,DPRLINE     LAST LINE?                     M1005 46800020
         BZ    DPR220              NO. BRANCH FOR NEXT LINE       M1005 46900020
         NI    DPRFLAG,255-DPRLINE  YES.  CLEAR FLAG              M1005 47000020
         L     R10,SAVER10         RESTORE R10                    M1005 47100020
         BR    R10                 RETURN TO XPTCD/RCVD RTN       M1005 47200020
         SPACE                                                          47300020
DPR220   AH    R13,MAXSNS          POINT TO NEXT LINE OF SENSE    M1005 47400020
         SH    R7,MAXSNS           SUBTRACT FOR REMAINING BYTES   M1005 47500020
         B     DPR218AB            GO SET UP NEXT LINE FOR PRINT  M1005 47600020
         SPACE                                                          47700020
*********************************************************************** 47800020
*        EXPECTED DATA                                                * 47900020
*********************************************************************** 48000020
         SPACE                                                          48100020
DPR230   MVI   DPRFLAG,X'00'           CLEAR IT                  Y01906 48200002
         TM    3(R12),X'80'            PRINT XPTD DATA?          Y01906 48250002
         BZ    DPR240              BR IF NO                             48300020
         L     R8,48(R1)           GET EXPECTED DATA ADDRESS            48400020
         MVC   WRK(2),17(R12)      GET EXPECTED DATA COUNT              48500020
         LH    R7,WRK              GET XPTD DATA COUNT                  48600020
         LA    R11,DPR240          GET RTRN ADDR                        48700020
         MVC   PB+1(9),=C'XPTD DATA'  MOVE 'XPTD DATA' TO PRINT BUFFER  48800020
         BAL   R9,DPR260           GO SET UP AND PRINT                  48900020
         SPACE                                                          49000020
*********************************************************************** 49100020
*        RECEIVED DATA                                                * 49200020
*********************************************************************** 49300020
         SPACE                                                          49400020
DPR240   TM    3(R12),X'40'        PRINT RCVD DATA?                     49500020
         BZ    DPR250              BR IF NO                             49600020
         L     R8,52(R1)           GET RECEIVED DATA ADDRESS            49700020
         MVC   WRK(2),19(R12)      GET RECEIVED DATA COUNT              49800020
         LH    R7,WRK              GET RCVD DATA COUNT                  49900020
         LA    R11,DPR250          GET RTRN ADDR                        50000020
         TM    3(R12),X'08'        RCVD DATA ERROR ?                    50100020
         BZ    DPR242              BR IF NO                             50200020
         MVI   PB,C'*'             PUT * IN LINE                        50300020
DPR242   MVC   PB+1(9),=C'RCVD DATA' MOVE 'RCVD DATA' TO PRINT BUFFER   50400020
         BAL   R9,DPR260           GO SET UP AND PRINT                  50500020
         SPACE                                                          50600020
         EJECT                                                          50700020
*********************************************************************** 50800020
*        WRITTEN DATA                                                 * 50900020
*********************************************************************** 51000020
         SPACE                                                          51100020
DPR250   TM    3(R12),X'20'        PRINT WRITTEN DATA ?                 51200020
         BZ    DPREXIT             NO.  EXIT RTN                        51300020
         L     R8,56(R1)           GET WRITTEN DATA ADDRESS             51400020
         MVC   WRK(2),21(R12)      GET WRITTEN DATA COUNT               51500020
         LH    R7,WRK              GET WRTN DATA COUNT                  51600020
         LA    R11,DPREXIT         GET EXIT RTN ADDRESS                 51700020
         MVC   PB+1(9),=C'WRTN DATA'  PUT 'WRTN DATA INTO PRINT BUFFER  51800020
         BAL   R9,DPR260           GO SET UP AND PRINT                  51900020
         B     DPREXIT             BRANCH TO EXIT MODULE                52000020
         SPACE                                                          52100020
DPR260   LTR   R8,R8               ADDR GIVEN ?                         52200020
         BNZ   DPR262              BR IF YES                            52300020
DPR261   MVI   DPRTRNCD,X'0C'      SET RETURN CODE 0C                   52400020
         XC    PB(10),PB           CLEAR BUFFER                         52500020
         BR    R11                 BRANCH TO EXIT RTN             M1005 52600020
DPR262   LTR   R7,R7               IS COUNT 0 ?                         52700020
         BZ    DPR261              BRANCH IF NO                   M1005 52800020
         SPACE                                                          52900020
DPR262A  TM    1(R12),X'08'        DON'T CONVERT BIT ON?          M1005 53000020
         BZ    DPR262B             NO.  BRANCH                    M1005 53100020
         MVI   LIMIT+1,50          YES. CHANGE LIMIT TO 50        M1005 53200020
DPR262B  CH    R7,LIMIT            MORE THAN 1 LINE?              M1005 53300020
         BNH   DPR263              BR IF NO                       M1005 53400020
         LH    R15,LIMIT           SET MAX COUNT                  M1005 53500020
         B     DPR264              GO SET UP FOR CONVERT          M1005 53600020
DPR263   LR    R15,R7              SET COUNT                      M1005 53700020
         OI    DPRFLAG,DPRLINE     TURN ON LAST LINE FLAG         M1005 53800020
         SPACE                                                          53900020
DPR264   TM    1(R12),X'08'        DONT CONVERT BIT ON            M1005 54000020
         BZ    DPR264A             YES. BRANCH                    M1005 54100020
         BCTR  R15,0               NO. SUBT 1 FOR MVC CNT         M1005 54200020
         EX    R15,DPRMVDAT        MOVE DATA TO PRINT BUFFER      M1005 54300020
         B     DPR264B                                            M1005 54400020
DPR264A  LR    R13,R8                                             M1005 54500020
         LA    R14,PB+11           GET OUTPUT ADDR FOR CONVERT    M1005 54600020
         BAL   R10,DPRCNV          GO CONVERT TO EBCDIC           M1005 54700020
DPR264B  BAL   R10,DPRWRT                                         M1005 54800020
         SPACE                                                          54900020
         TM    DPRFLAG,DPRLINE     LAST LINE?                           55000020
         BZ    DPR265              BR IF NO                             55100020
         NI    DPRFLAG,255-DPRLINE TURN OFF LAST LINE FLAG              55200020
         BR    R9                  RETURN                               55300020
         SPACE                                                          55400020
DPR265   AH    R8,LIMIT            POINT TO NEXT LINE OF DATA           55500020
         SH    R7,LIMIT            GET NO BYTES                         55600020
         B     DPR262A             GO SET UP FOR LINE PRINT             55700020
         SPACE                                                          55800020
DPRMVDAT MVC   PB+11(0),4(R8)                                     M1005 55900020
*********************************************************************** 56000020
*   ENTER HERE TO MOVE CSW/PSW INFO INTO PRINT BUFFER                 * 56100020
*********************************************************************** 56200020
         SPACE                                                          56300020
DPR450   ST    R10,DSAVERGS+20     SAVE R10                             56400020
         TM    DPRFLAG,DPRSCHFL+DPRQUED   FAIL?                  Y01906 56430002
         BCR   7,R11                   YES-GO BACK               Y01906 56460002
         LA    R14,WRK             GET OUTPUT ADDR FOR CONVERT          56500020
         LA    R15,8               GET COUNT                            56600020
         BAL   R10,DPRCNV          GO CONVERT                           56700020
         L     R10,DSAVERGS+20     RESOTRE R10                          56800020
         LA    R6,WRK                                                   56900020
         LA    R7,DPRMASK          POINT TO CSW MASK                    57000020
         TM    3(R12),X'01'        IS IT PSW PRINT?                     57100020
         BZ    DPR450A             BR IF NO                             57200020
         MVC   0(16,R5),0(R6)      PUT PSW IN BUFFER                    57300020
         B     DPR460                                                   57400020
DPR450A  MVC   0(19,R5),=C'XX XXXXXX XXXX XXXX'  SET UP FOR UNUSED      57500020
         TM    0(R7),X'80'         KEY GIVEN?                           57600020
         BO    DPR452              BR IF YES                            57700020
         SPACE                                                          57800020
         TM    0(R7),X'40'         CMND ADDR GIVEN?                     57900020
         BO    DPR454              BR IF YES                            58000020
         SPACE                                                          58100020
         TM    0(R7),X'20'         STATUS GIVEN?                        58200020
         BO    DPR456              BR IF YES                            58300020
         SPACE                                                          58400020
         TM    0(R7),X'10'         RESIDUAL COUNT GIVEN?                58500020
         BO    DPR458              BR IF YES                            58600020
         BR    R11                 RETURN                               58700020
         SPACE                                                          58800020
DPR452   MVC   0(2,R5),0(R6)       PUT KEY IN PRINT BUFFER              58900020
         LA    R6,2(R6)            POINT TO CMND ADDR                   59000020
         SPACE                                                          59100020
DPR454   TM    0(R7),X'40'         CMND ADDR GIVEN?                     59200020
         BZ    DPR460              BR IF NO                             59300020
         MVC   3(6,R5),0(R6)       PUT CMND ADDR IN PRINT BUFFER        59400020
         LA    R6,6(R6)            POINT TO STATUS                      59500020
         SPACE                                                          59600020
DPR456   TM    0(R7),X'20'         STATUS GIVEN?                        59700020
         BZ    DPR460              BR IF NO                             59800020
         MVC   10(4,R5),0(R6)      PUT STATUS IN PRINT BUFFER           59900020
         LA    R6,4(R6)            POINT TO RESIDUAL COUNT              60000020
         SPACE                                                          60100020
DPR458   TM    0(R7),X'10'         RESIDUAL COUNT GIVEN?                60200020
         BZ    DPR460              BR IF NO                             60300020
         MVC   15(4,R5),0(R6)      PUT RESIDUAL COUNT IN PRINT BUFFER   60400020
DPR460   BR    R11                 RETURN                               60500020
         SPACE                                                          60600020
         EJECT                                                          60700020
*********************************************************************** 60800020
*              RETURN TO SCAN SECTION                                 * 60900020
*********************************************************************** 61000020
         SPACE                                                          61100020
DPREXIT  L     R13,RSLTSA+4        ADDRESS OF CALLER'S SA               61200020
         MVC   16(4,R13),RETCODE   RETURN CODE TO R15 SAVE AREA LOC     61300020
         LM    R14,R12,12(R13)     RESTORE REGS                         61400020
         BR    R14                 RETURN                               61500020
         SPACE                                                          61600020
*********************************************************************** 61700020
*        PRINT RESULTS, DATA LINE VIA PARALLEL PRINT OUTPUT WRITER    * 61800020
*********************************************************************** 61900020
         SPACE                                                          62000020
DPRWRT   ST    R13,DSAVERGS        SAVE R13                       M1010 62100020
         LA    R13,RSLTSA          SAVE AREA ADDRESS              M1010 62200020
         OI    CESWT5,RSLTFLG      SET RESULTS LINE PRINT FLAG          62300020
         PWRT  SIZE=120                                         SA46329 62400001
         MVI   PB,C' '             CLEAR PRINT BUFFER WITH BLANKS       62500020
         MVC   PB+1(120),PB                                             62600020
         L     R1,SAVER1           RESTORE DPRINT PARAMETER PTR         62700020
         L     R12,4(R1)           ADDRESS OF DPRINT CTRL WORD          62800020
         L     R13,DSAVERGS        RESTORE R13                    M1010 62900020
         BR    R10                 RETURN TO CALLING ROUTINE            63000020
         EJECT                                                          63100020
*********************************************************************** 63200020
*        DPRCNV - HEX TO EBCDIC CONVERT                               * 63300020
*                                                                     * 63400020
*              CALL SEQ -  R13 = INPUT ADDRESS                        * 63500020
*                          R14 = OUTPUT ADDRESS                       * 63600020
*                          R15 = INPUT BYTE COUNT                     * 63700020
*                                                                     * 63800020
*                          BAL R10,DPRCNV                             * 63900020
*********************************************************************** 64000020
         SPACE                                                          64100020
DPRCNV   STM   R5,R6,DSAVERGS      SAVE R5,R6                           64200020
         STM   R13,R15,DSAVERGS+8  SAVE R13,R14,R15                     64300020
         SPACE                                                          64400020
         LTR   R15,R15            COUNT = 0 ?                           64500020
         BZ    DPRCNV8            YES. BYPASS CONVERT                   64600020
         AR    R14,R15         ADD COUNT TO OUTPUT ADDR.                64700020
         AR    R14,R15            ADD COUNT AGAIN.                      64800020
         AR    R13,R15            ADD COUNT TO INPUT ADDR.              64900020
         SR    R5,R5              CLEAR R5.                             65000020
         SR    R6,R6              CLEAR R6.                             65100020
         SPACE                                                          65200020
DPRCNV4  S     R14,=F'2'          GET ADDR OF LAST BYTE OF OUTPUT.      65300020
         BCTR  R13,0              GET ADDR OF LAST BYTE OF INPUT.       65400020
         IC    R6,0(R13)          GET HEX BYTE.                         65500020
         LR    R5,R6              PUT IN R5.                            65600020
         SRL   R6,4               GET BITS 0-3 IN R6.                   65700020
         N     R5,=F'15'          GET BITS 4-7 IN R5.                   65800020
         IC    R6,DPREBC(R6)      CONVERT BITS 0-3 TO EBCDIC CHAR.      65900020
         IC    R5,DPREBC(R5)      CONVERT BITS 4-7 TO EBCDIC CHAR.      66000020
         STC   R6,0(R14)          STORE 1ST EBCDIC CHAR IN OUTPUT.      66100020
         STC   R5,1(R14)          STORE 2ND EBCDIC CHAR IN OUTPUT.      66200020
         BCT   R15,DPRCNV4        GET NEXT HEX BYTE.                    66300020
DPRCNV8  LM    R5,R6,DSAVERGS      RESTORE R5,R6                        66400020
         LM    R13,R15,DSAVERGS+8  RESTORE R13,R14,R15                  66500020
         BR    R10                RETURN TO CALLER.                     66600020
         SPACE                                                          66700020
DPREBC   DC    C'0123456789ABCDEF' HEX TO EBCDIC CONVERT TABLE.         66800020
         SPACE 2                                                        66900020
*********************************************************************** 67000020
*              CONSTANTS, ETC.                                        * 67100020
*********************************************************************** 67200020
         SPACE                                                          67300020
RSLTSA   DS    18F                 REG SAVE AREA                        67400020
LIMIT   DC    H'25'               MAX NO. OF DATA BYTES PER LINE        67500020
MAXCNT   DC    H'61'               MAX NO. BYTES TO PRINT               67600020
MAXSNS  DC    H'17'               MAX NO. SNS BYTES PER LINE            67700020
THREE    DC    H'03'                                             Y01906 67750002
DPR600   MVC   PB(0),0(R11)       MOVE MSGE TO PRINT BUFFER.            67800020
DPR605   MVC   PB+1(0),0(R5)       MOVE DESC LINE TO PRINT BUFFER       67900020
         CNOP  0,8                                                      68000020
WRK      DS    12F                 WORKAREA                             68100020
SAVER1   DC    XL4'0'                                                   68200020
DSAVERGS DS    6F                  REG SAVE BUFRS                       68300020
DPRDEVAD DS    1F                  DEV ADDR                             68400020
DPROLTSP DC    XL4'0'              TO SAVE OLT SECT PREF ADDR           68500020
DPROLTLP DC    XL4'0'              TO SAVE OLT LOAD POINT ADR           68600020
RETCODE  DC    XL4'0'              RETURN CODE                          68700020
DPRTFORM DC    X'00'               FORMS                                68800020
DPRFLAG  DC    X'00'               FLAGS                                68900020
DPRMASK  DC    X'00'               CSW MASK                             69000020
DPRNONE  DC    C'NONE'                                           Y01906 69050002
DPRLINE  EQU   X'04'               LINECOUNT FLAG IN DPRFLAG            69100020
DPRSCHFL EQU   X'02'               SEARCH FAIL FLAG IN DPRFLAG          69200020
DPRSCH02 EQU   X'01'               SEARCH FOR CSW2 FLAG IN DPRFLAG      69300020
DPRLKCC  EQU   X'10'               CC FLAG IN DPRFLAG             21051 69350001
DPRTRNCD EQU   RETCODE+3                                                69400020
SAVER10  EQU   DSAVERGS+20                                              69500020
DPRQUED  EQU   X'80'                   Q FLAG IN DPRFLAG         Y01906 69530002
QUEUED   EQU   X'80'                   Q FLAG IN TECB            Y01906 69560002
         SPACE 2                                                        69700020
         LTORG                                                          69800020
         SPACE                                                          69900020
TECBMAP  DSECT                                                          70000020
TCBFDCT  DS    C                                                        70100020
TCBFDLN  DS    C                                                        70200020
TCBSNLN  DS    2C                                                       70300020
TCBFLGS  DS    C                                                        70400020
TCBSNCT  DS    C                                                        70500020
TCBSNOC  DS    C                                                        70600020
TCBEVOC  DS    C                                                        70700020
TCBFD01  DS    C                                                        70800020
         SPACE                                                          70900020
IFDOLT15 CSECT                                                   YM5407 70950002
DPRCOM   IFDCOM                                                         71000020
PB       EQU   PRTBUFR+1                                                71100020
         END                                                            71200020
./  ADD  SSI=32600838,NAME=IFDOLT16
         TITLE 'IFDOLT16 GETCONFIG'                                     00010000
         TITLE 'IFDOLT16 GETCONFIG'                          /*X03906*/ 00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT16 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT16 17 SEP 73'                             0002  00070000
         ST    @E,12(0,@D)                                        0002  00080000
         STM   @0,@C,20(@D)                                       0002  00090000
         BALR  @B,0                                               0002  00100000
@PSTART  DS    0H                                                 0002  00110000
         USING @PSTART+00000,@B                                   0002  00120000
         ST    @D,@SAV001+4                                       0002  00130000
         LA    @F,@SAV001                                         0002  00140000
         ST    @F,8(0,@D)                                         0002  00150000
         LR    @D,@F                                              0002  00160000
*         GEN( USING CHASCT,2);                                         00170000
          USING CHASCT,2                                                00180000
         DS    0H                                                       00190000
*         GENERATE DATA;                                                00200000
*         DCL CESWT3 CHAR(1) GENERATED;     /*OLTEP SWITCHES*/          00210000
*         DCL 1 SWITCHES CHAR(1) BASED(ADDR(CESWT3)),                   00220000
*           2 * BIT(6),                                                 00230000
*           2 CDSEXIST BIT(1),                                          00240000
*           2 * BIT(1);                                                 00250000
*         DCL PRIDVPTR PTR GENERATED;     /*PRIMARY DEVICE PTR*/        00260000
*         DCL 1 * BASED(PRIDVPTR),  /* PRIMARY DEVICE TABLE STRUCT21051 00270000
*           3 * CHAR(1),            /* DEVICE NAME IN EBCDIC     21051* 00280000
*           3 EBNAME CHAR(7),       /* DEVICE MAME IN EBCDIC.    21051* 00290000
*           3 * CHAR(24),           /* CDS IN DEVTABLE           21051* 00300000
*           3 DVTABCDS CHAR(20),    /*CDS ENTRY IN DEVTABLE.     21051* 00310000
*             5 * CHAR(9),                                              00320000
*             5   DVCDSFLG CHAR(1), /* CDS FLAG BYTE.            21051* 00330000
*               7 * BIT(4),                                             00340000
*               7 SYMEXIST BIT(1),  /* SET IF SYM NAME EXISTS    21051* 00350000
*               7 * BIT(1),                                             00360000
*               7 REMCDS BIT(1),    /* SET IF CDS IS IN REMOTE FIL21051 00370000
*             5 * CHAR(2),                                              00380000
*             5 DEVSYMNM CHAR(8);   /* SYMBOLIC NAME OF DEVICE.  21051* 00390000
*         DCL 1 * BASED(ADDR(NAME)) CHAR(8),                            00400000
*           2 PFIRST CHAR(1),                                           00410000
*           2 PRIMENM CHAR(7);                                          00420000
*         DCL CESWT7 CHAR(1) GENERATED;  /*---CESWT7 FORMAT------21050* 00430000
*         DCL  1 OLTEPSW7 BASED(ADDR(CESWT7)), /* C E SWT FORMAT.21050* 00440000
*               3 INCLST BIT(1),   /* INCLUSIVE SERIES OF DEVICES21050* 00450000
*           3 RETTO31 BIT(1),      /* NEED TO RET TO IFDOLT31.   21050* 00460000
*               3 REMOTE BIT(1),   /* REMOTE TERMINAL IN SYSTEM. 21051* 00470000
*           3 LOADCDS BIT(1);            /* LOAD CDS FROM REM FILE21050 00480000
*         PARMFLGS='60'X;               /* CDS LOAD,COMPUTE     X02008* 00490000
         MVI   LOADLIST+12,X'60'                                  0038  00500000
*         PARMPTR=R1;                   /*PUT PTR TO PARMLIST IN REG 5* 00510000
         LR    @5,@1                                              0039  00520000
*         IF MACROLEV < '02'X THEN      /* CHECK MACRO LEVEL*/          00530000
         CLI   1(@5),X'02'                                        0040  00540000
         BC    10,@9FF                                            0040  00550000
*           DO;                                                         00560000
*           CODE=4;                     /*RETURN CODE FOR WRONG MACRO   00570000
*                                         LEVEL*/                       00580000
         LA    @4,4                                               0042  00590000
*           GOTO RTRN;                                                  00600000
         BC    15,RTRN                                            0043  00610000
*           END;                                                        00620000
*         IF MODLEV < MACROLEV THEN     /*COMPARE MACRO LEVEL WITH      00630000
*                                         MODULE LEVEL*/                00640000
@9FF     CLC   MODLEV(1),1(@5)                                    0045  00650000
         BC    10,@9FE                                            0045  00660000
*           DO;                                                         00670000
*           CODE=4;                     /*RETURN CODE FOR WRONG MACRO   00680000
*                                         LEVEL*/                       00690000
         LA    @4,4                                               0047  00700000
*           GOTO RTRN;                                                  00710000
         BC    15,RTRN                                            0048  00720000
*           END;                                                        00730000
*         IF CDSEXIST='0'B THEN         /*IS CDS AVAILABLE?*/           00740000
@9FE     TM    SWITCHES,B'00000010'                               0050  00750000
         BC    05,@9FD                                            0050  00760000
*           DO;                                                         00770000
*           CODE=4;                     /*RETURN CODE FOR CDS NOT       00780000
*                                         AVAILABLE*/                   00790000
         LA    @4,4                                               0052  00800000
*           GOTO RTRN;                  /*BRANCH IF CDS NOT AVAILABLE*/ 00810000
         BC    15,RTRN                                            0053  00820000
*           END;                                                        00830000
*         IF SIZE=0 THEN                /* IS SIZE 0           OX01385* 00840000
@9FD     CLI   12(@5),0                                           0055  00850000
         BC    07,@9FC                                            0055  00860000
*           DO;                         /* YES,                OX01385* 00870000
*           CODE=8;                     /* RETURN CODE 8       OX01385* 00880000
         LA    @4,8                                               0057  00890000
*           GO TO RTRN;                 /* EXIT                OX01385* 00900000
         BC    15,RTRN                                            0058  00910000
*           END;                        /*                     OX01385* 00920000
*         IF CDSADR=0 THEN                                              00930000
@9FC     SR    @F,@F                                              0060  00940000
         C     @F,4(0,@5)                                         0060  00950000
         BC    07,@9FB                                            0060  00960000
*           DO;                         /*PRIMARY DEVICE */             00970000
*           IF SYMEXIST='1'B THEN  /* IS A SYMBOLIC NAME FOR THES21050* 00980000
         L     @1,PRIDVPTR                                        0062  00990000
         TM    41(@1),B'00001000'                                 0062  01000000
         BC    12,@9FA                                            0062  01010000
*             DO;                  /* DEVICE EXIST IN  THE SCT?  21050* 01020000
*       NAME=DEVSYMNM;              /* PREPARE TO LOAD SYM ENTRY 21051* 01030000
         MVC   NAME(8),44(@1)                                     0064  01040000
*         IF REMCDS='1'B THEN      /* CDS IN REMOTE FILE?        21051* 01050000
         TM    41(@1),B'00000010'                                 0065  01060000
*             GO TO CHEKFILE;      /* LOAD IN CDS ENTRY.         21051* 01070000
         BC    01,CHEKFILE                                        0066  01080000
*         GO TO LOADENT;           /* LOAD ENTRY FROM LOCAL FILE.21051* 01090000
         BC    15,LOADENT                                         0067  01100000
*             END;                 /*                            21050* 01110000
*          PFIRST='G';                                                  01120000
@9FA     MVI   A00018,C'G'                                        0069  01130000
*           PRIMENM=EBNAME;                                             01140000
         L     @1,PRIDVPTR                                        0070  01150000
         MVC   A00018+1(7),1(@1)                                  0070  01160000
*           GOTO LOADENT;                                               01170000
         BC    15,LOADENT                                         0071  01180000
*           END;                                                        01190000
*         IF NAMEBIT='1'B THEN                                          01200000
@9FB     L     @1,4(0,@5)                                         0073  01210000
         TM    9(@1),B'00001000'                                  0073  01220000
         BC    12,@9F9                                            0073  01230000
*           DO;                                                         01240000
*           NAME=SYMNAME;                /*USE SYMBOLIC NAME          * 01250000
         MVC   NAME(8),12(@1)                                     0075  01260000
*         IF REMFILE='1'B THEN                                          01270000
         TM    9(@1),B'00000010'                                  0076  01280000
*             GO TO CHEKFILE;      /* LOAD IN CDS ENTRY.         21051* 01290000
         BC    01,CHEKFILE                                        0077  01300000
*         GO TO LOADENT;           /* LOAD ENTRY FROM LOCAL FILE.21051* 01310000
         BC    15,LOADENT                                         0078  01320000
*           END;                                                        01330000
*     /* THE FOLLOWING SECTION OF CODE TRANSLATES THE DEVICE ADDRESS    01340000
*        FROM HEX TO EBCDIC*/                                           01350000
*         WORK2=UNITAD;                  /*PUT DEV ADDR IN REG */       01360000
@9F9     L     @1,4(0,@5)                                         0080  01370000
         MVC   @TEMP4(4),0(@1)                                    0080  01380000
         L     @9,@TEMP4                                          0080  01390000
*         DO I = 1 TO 8;                                                01400000
         LA    @7,1                                               0081  01410000
*         WORK1=0;                       /*CLEAR INDEX REGISTER */      01420000
@DO9F8   SR    @8,@8                                              0082  01430000
*         GEN(SLDL WORK1,4);             /*PUT NUMBER IN REG */         01440000
         SLDL WORK1,4                                                   01450000
         DS    0H                                                       01460000
*         WORK1=WORK1+1;                                                01470000
         AH    @8,@D1                                             0084  01480000
*         IF I=1 THEN                                                   01490000
         CH    @7,@D1                                             0085  01500000
         BC    07,@9F4                                            0085  01510000
*           ADD(1)=TAB1(WORK1);          /*1ST CHAR*/                   01520000
         LR    @1,@8                                              0086  01530000
         LA    @E,TAB1-1(@1)                                      0086  01540000
         MVC   NAME(1),0(@E)                                      0086  01550000
         BC    15,@9F3                                            0087  01560000
*         ELSE ADD(I)=TAB(WORK1);                                       01570000
@9F4     LR    @1,@8                                              0087  01580000
         LA    @E,TAB-1(@1)                                       0087  01590000
         LR    @C,@7                                              0087  01600000
         LA    @A,NAME-1(@C)                                      0087  01610000
         MVC   0(1,@A),0(@E)                                      0087  01620000
*         END;                                                          01630000
*         GO TO LOADENT;           /* LOAD IN CDS ENTRY.         21051* 01640000
@9F3     AH    @7,@D1                                             0088  01650000
@DO9F7   CH    @7,@D2                                             0088  01660000
         BC    12,@DO9F8                                          0088  01670000
         BC    15,LOADENT                                         0089  01680000
*     /* END OF TRANSLATE ROUTINE*/                                     01690000
* CHEKFILE:                                                             01700000
*         PARMFLGS='68'X;               /* SYMBOLIC,CDS,COMPUTE X02008* 01710000
CHEKFILE MVI   LOADLIST+12,X'68'                                  0090  01720000
*  LOADENT:                                                             01730000
*         CDSNAME=NAME;                 /* NAME OF CDS TO LOAD  Y01008* 01740000
LOADENT  MVC   LOADLIST(8),NAME                                   0091  01750000
*         LOADADDR=ADDR(CDSENTRY);      /* WHERE CDS LOADED     Y01008* 01760000
         LA    @F,CDSENTRY                                        0092  01770000
         ST    @F,LOADLIST+8                                      0092  01780000
*         CDSLNGTH='FF'X;               /* LOAD 255 BYTES       Y01008* 01790000
         LA    @F,X'FF'                                           0093  01800000
         STH   @F,LOADLIST+14                                     0093  01810000
*                                                                       01820000
*         /* ISSUE CALL TO LOADER TO LOAD CDS FOR THIS DEVICE   Y01008* 01830000
*                                                                       01840000
*         GEN(IFDMOD CALL='12',LIST=LOADLIST);                          01850000
         IFDMOD CALL='12',LIST=LOADLIST                                 01860000
         DS    0H                                                       01870000
*         LOADRTRN=R15;                 /* SAVE LOADER RETURNCD X02906* 01880000
         STH   @F,LOADRTRN                                        0095  01890000
* CHEKLOAD:                                                             01900000
*         IF LOADRTRN>0 THEN            /* CDS NOT LOADED,RC>0  X02906* 01910000
CHEKLOAD SR    @F,@F                                              0096  01920000
         CH    @F,LOADRTRN                                        0096  01930000
         BC    10,@9F2                                            0096  01940000
*           DO;                                                         01950000
*  RTRN12:                                                              01960000
*           CODE=12;                    /*RETURN CODE FOR NO RECORD     01970000
*                                         FOUND*/                       01980000
RTRN12   LA    @4,12                                              0098  01990000
*           GOTO RTRN;                                                  02000000
         BC    15,RTRN                                            0099  02010000
*           END;                                                        02020000
*  CONTIN:                                                              02030000
*         IF COUNT=<SIZE THEN           /* IS COUNT WITHIN SIZEOX01385* 02040000
@9F2     EQU   *                                                  0101  02050000
CONTIN   CLC   CDSENTRY+8(1),12(@5)                               0101  02060000
         BC    02,@9F1                                            0101  02070000
*           DO;                         /* YES, RETURN CODE 0  OX01385* 02080000
*           CODE=0;                     /*                     OX01385* 02090000
         SR    @4,@4                                              0103  02100000
*           COUNTR=COUNT;               /* USE COUNT FOR MOVE  OX01385* 02110000
         SR    @6,@6                                              0104  02120000
         IC    @6,CDSENTRY+8                                      0104  02130000
*           GO TO CONTIN1;              /* MOVE CDS INFO       OX01385* 02140000
         BC    15,CONTIN1                                         0105  02150000
*           END;                        /*                     OX01385* 02160000
*         CODE=8;                       /* COUNT > SIZE REQUESTED01385* 02170000
@9F1     LA    @4,8                                               0107  02180000
*                                       /* RETURN CODE 8.      OX01385* 02190000
*         COUNTR=SIZE;                  /* USE SIZE FOR MOVE   OX01385* 02200000
         SR    @6,@6                                              0108  02210000
         IC    @6,12(0,@5)                                        0108  02220000
* CONTIN1:                              /*                     OX01385* 02230000
*         BUFFER(1:COUNTR)=CDSENTRY(1:COUNTR);   /*MOVE ENTRY INTO      02240000
*                                                  BUFFER*/             02250000
CONTIN1  LA    @E,CDSENTRY                                        0109  02260000
         LR    @1,@6                                              0109  02270000
         BCTR  @1,0                                               0109  02280000
         L     @C,8(0,@5)                                         0109  02290000
         LR    @A,@C                                              0109  02300000
         EX    @1,@MVC                                            0109  02310000
*  DELEET:                                                              02320000
*         GEN(ANYMOD DELETE=NAME);      /*DELETE ENTRY*/                02330000
DELEET   ANYMOD DELETE=NAME                                             02340000
         DS    0H                                                       02350000
*  RTRN:                                                                02360000
*         RTRNCODE = CODE;              /*PUT RETURN CODE IN REG 15*/   02370000
RTRN     LR    @F,@4                                              0111  02380000
*  END;                                                                 02390000
@EL01    L     @D,4(0,@D)                                         0112  02400000
         L     @E,12(0,@D)                                        0112  02410000
         LM    @0,@C,20(@D)                                       0112  02420000
         BCR   15,@E                                              0112  02430000
@DATA1   EQU   *                                                        02440000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           02450000
@1       EQU   01                                                       02460000
@2       EQU   02                                                       02470000
@3       EQU   03                                                       02480000
@4       EQU   04                                                       02490000
@5       EQU   05                                                       02500000
@6       EQU   06                                                       02510000
@7       EQU   07                                                       02520000
@8       EQU   08                                                       02530000
@9       EQU   09                                                       02540000
@A       EQU   10                                                       02550000
@B       EQU   11                                                       02560000
@C       EQU   12                                                       02570000
@D       EQU   13                                                       02580000
@E       EQU   14                                                       02590000
@F       EQU   15                                                       02600000
@D1      DC    H'1'                                                     02610000
@D2      DC    H'8'                                                     02620000
@MVC     MVC   0(1,@A),0(@E)                                            02630000
         DS    0F                                                       02640000
         DS    0D                                                       02650000
@DATA    EQU   *                                                        02660000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   02670000
R1       EQU   00000001            FULLWORD POINTER REGISTER            02680000
P        EQU   00000002            FULLWORD POINTER REGISTER            02690000
ADENTRY  EQU   00000003            FULLWORD POINTER REGISTER            02700000
CODE     EQU   00000004            FULLWORD INTEGER REGISTER            02710000
PARMPTR  EQU   00000005            FULLWORD POINTER REGISTER            02720000
LOADRTRN EQU   @DATA+00000072      HALFWORD INTEGER                     02730000
COUNTR   EQU   00000006            FULLWORD INTEGER REGISTER            02740000
I        EQU   00000007            FULLWORD INTEGER REGISTER            02750000
WORK1    EQU   00000008            FULLWORD INTEGER REGISTER            02760000
WORK2    EQU   00000009            FULLWORD INTEGER REGISTER            02770000
R14      EQU   00000014            FULLWORD INTEGER REGISTER            02780000
R15      EQU   00000015            FULLWORD INTEGER REGISTER            02790000
RTRNCODE EQU   00000015            FULLWORD INTEGER REGISTER            02800000
         ORG   @DATA+00000074                                           02810000
MODLEV   EQU   *                   1 BYTE(S)                            02820000
         DC    X'02'                                                    02830000
PARMLIST EQU   00000000            13 BYTE(S) ON WORD                   02840000
A00000   EQU   PARMLIST+00000000   1 BYTE(S)                            02850000
MACROLEV EQU   PARMLIST+00000001   1 BYTE(S)                            02860000
A00001   EQU   PARMLIST+00000002   2 BYTE(S)                            02870000
CDSADR   EQU   PARMLIST+00000004   FULLWORD POINTER                     02880000
ADBUF    EQU   PARMLIST+00000008   FULLWORD POINTER                     02890000
SIZE     EQU   PARMLIST+00000012   1 BYTE(S)                            02900000
LOADLIST EQU   @DATA+00000076      16 BYTE(S) ON WORD                   02910000
CDSNAME  EQU   LOADLIST+00000000   8 BYTE(S)                            02920000
LOADADDR EQU   LOADLIST+00000008   FULLWORD POINTER                     02930000
PARMFLGS EQU   LOADLIST+00000012   1 BYTE(S)                            02940000
A00002   EQU   LOADLIST+00000013   1 BYTE(S)                            02950000
CDSLNGTH EQU   LOADLIST+00000014   HALFWORD INTEGER                     02960000
BUFFER   EQU   00000000            256 BYTE(S)                          02970000
CDSENTRY EQU   @DATA+00000092      256 BYTE(S)                          02980000
A00003   EQU   CDSENTRY+00000000   8 BYTE(S)                            02990000
COUNT    EQU   CDSENTRY+00000008   1 BYTE(S)                            03000000
A00004   EQU   CDSENTRY+00000009   247 BYTE(S)                          03010000
NAME     EQU   @DATA+00000348      8 BYTE(S)                            03020000
ADD      EQU   NAME+00000000       8*1 BYTE(S)                          03030000
CDSDATA  EQU   00000000            20 BYTE(S)                           03040000
UNITAD   EQU   CDSDATA+00000000    4 BYTE(S)                            03050000
DEVDESC  EQU   CDSDATA+00000004    4 BYTE(S)                            03060000
A00005   EQU   CDSDATA+00000008    1 BYTE(S)                            03070000
FLGBYTE  EQU   CDSDATA+00000009    1 BYTE(S)                            03080000
A00006   EQU   CDSDATA+00000009    4 BIT(S)                             03090000
NAMEBIT  EQU   CDSDATA+00000009    1 BIT(S)                             03100000
A00007   EQU   CDSDATA+00000009    1 BIT(S)                             03110000
REMFILE  EQU   CDSDATA+00000009    1 BIT(S)                             03120000
A00008   EQU   CDSDATA+00000010    2 BYTE(S)                            03130000
SYMNAME  EQU   CDSDATA+00000012    8 BYTE(S)                            03140000
         ORG   @DATA+00000356                                           03150000
TAB      EQU   *                   16*1 BYTE(S)                         03160000
         DC    X'F0'                                                    03170000
         DC    X'F1'                                                    03180000
         DC    X'F2'                                                    03190000
         DC    X'F3'                                                    03200000
         DC    X'F4'                                                    03210000
         DC    X'F5'                                                    03220000
         DC    X'F6'                                                    03230000
         DC    X'F7'                                                    03240000
         DC    X'F8'                                                    03250000
         DC    X'F9'                                                    03260000
         DC    X'C1'                                                    03270000
         DC    X'C2'                                                    03280000
         DC    X'C3'                                                    03290000
         DC    X'C4'                                                    03300000
         DC    X'C5'                                                    03310000
         DC    X'C6'                                                    03320000
TAB1     EQU   *                   16*1 BYTE(S)                         03330000
         DC    C'G'                                                     03340000
         DC    C'H'                                                     03350000
         DC    C'I'                                                     03360000
         DC    C'J'                                                     03370000
         DC    C'K'                                                     03380000
         DC    C'L'                                                     03390000
         DC    C'M'                                                     03400000
         DC    C'N'                                                     03410000
         DC    C'O'                                                     03420000
         DC    C'P'                                                     03430000
         DC    C'Q'                                                     03440000
         DC    C'R'                                                     03450000
         DC    C'S'                                                     03460000
         DC    C'T'                                                     03470000
         DC    C'U'                                                     03480000
         DC    C'V'                                                     03490000
A00011   EQU   00000000            52 BYTE(S) ON WORD                   03500000
A00012   EQU   A00011+00000000     1 BYTE(S)                            03510000
EBNAME   EQU   A00011+00000001     7 BYTE(S)                            03520000
A00013   EQU   A00011+00000008     24 BYTE(S)                           03530000
DVTABCDS EQU   A00011+00000032     20 BYTE(S)                           03540000
A00014   EQU   A00011+00000032     9 BYTE(S)                            03550000
DVCDSFLG EQU   A00011+00000041     1 BYTE(S)                            03560000
A00015   EQU   A00011+00000041     4 BIT(S)                             03570000
SYMEXIST EQU   A00011+00000041     1 BIT(S)                             03580000
A00016   EQU   A00011+00000041     1 BIT(S)                             03590000
REMCDS   EQU   A00011+00000041     1 BIT(S)                             03600000
A00017   EQU   A00011+00000042     2 BYTE(S)                            03610000
DEVSYMNM EQU   A00011+00000044     8 BYTE(S)                            03620000
A00018   EQU   @DATA+00000348      8 BYTE(S)                            03630000
PFIRST   EQU   A00018+00000000     1 BYTE(S)                            03640000
PRIMENM  EQU   A00018+00000001     7 BYTE(S)                            03650000
         ORG   @DATA                                                    03660000
         DS    00000388C                                                03670000
@TEMPS   DS    0F                                                       03680000
@TEMP4   DC    F'0'                                                     03690000
COMAREA  IFDCOM                                                         03700000
SWITCHES EQU   CESWT3+00000000     1 BYTE(S)                            03710000
A00009   EQU   SWITCHES+00000000   6 BIT(S)                             03720000
CDSEXIST EQU   SWITCHES+00000000   1 BIT(S)                             03730000
A00010   EQU   SWITCHES+00000000   1 BIT(S)                             03740000
OLTEPSW7 EQU   CESWT7+00000000     1 BYTE(S) ON WORD                    03750000
INCLST   EQU   OLTEPSW7+00000000   1 BIT(S)                             03760000
RETTO31  EQU   OLTEPSW7+00000000   1 BIT(S)                             03770000
REMOTE   EQU   OLTEPSW7+00000000   1 BIT(S)                             03780000
LOADCDS  EQU   OLTEPSW7+00000000   1 BIT(S)                             03790000
@DATEND  EQU   *                                                        03800000
         END                                                            03810000
./  ADD  SSI=32561108,NAME=IFDOLT17
 TITLE  'IFDOLT17  MESSAGE LINES'                                       00800020
****************************** PROLOGUE ******************************* 01600020
*                                                                     * 02400020
*  TITLE DPRINT MESSAGES (COMMENTS)                                   * 03200020
*                                                                     * 04000020
*  FUNCTION: THIS MODULE IS DESIGNED TO SETUP UNIT TEST MESSAGE       * 04800020
*            LINES FOR PRINTING                                       * 05600020
*                                                                     * 06400020
*  ENTRY POINT: IFDOLT17                                              * 07200020
*                                                                     * 08000020
*  INPUTS: DPRINT PARAMETER LIST                                      * 08800020
*                                                                     * 09600020
*  REGISTER USAGE: R1  - ADDRESS OF DPRINT PARAMETER LIST             * 10400020
*                  R2  - ADDRESS OF SECTION CTRL TABLE IN OLTEP ROOT  * 11200020
*                  R4  - BASE REGISTER FOR THIS MODULE                * 12000020
*                  R5-R11 - MISC.                                     * 12800020
*                  R12 - ADDRESS OF DPRINT PARAMETER CTRL WORD        * 13600020
*                  R13 - ADDRESS OF CALLERS SAVE AREA                 * 14400020
*                  R14 - ADDRESS OF CALLERS RETURN POINT              * 15200020
*                  R15 - LINK ADDRESS                                 * 16000020
*                                                                     * 16800020
*  EXTERNAL ROUTINE: IFDOLT39- PARALLEL PRINT OUTPUT WRITER           * 17600020
*                                                                     * 18400020
*  EXITS - NORMAL: - RETURN TO SCAN SECTION OF IFDOLT14               * 19200020
*           ERROR: - NONE                                             * 20000020
*                                                                     * 20800020
*  ATTRIBUTES: SERIALLY REUSABLE                                      * 21600020
*                                                                     * 22400020
*********************************************************************** 23200020
         SPACE 2                                                        24000020
IFDOLT17 CSECT                                                          24800020
         USING IFDOLT17,R4         BASE REG FOR THIS MODULE             25600020
         USING CHASCT,R2           BASE REG FOR COM SECTION             26400020
         SPACE                                                          27200020
R1       EQU   1                                                        28000020
R2       EQU   2                                                        28800020
R3       EQU   3                                                        29600020
R4       EQU   4                                                        30400020
R5       EQU   5                                                        31200020
R6       EQU   6                                                        32000020
R7       EQU   7                                                        32800020
R8       EQU   8                                                        33600020
R9       EQU   9                                                        34400020
R10      EQU   10                                                       35200020
R11      EQU   11                                                       36000020
R12      EQU   12                                                       36800020
R13      EQU   13                                                       37600020
R14      EQU   14                                                       38400020
R15      EQU   15                                                       39200020
         SPACE                                                          40000020
DPRMSG   SAVE (14,12),,IFDOLT17&SYSDATE                                 40800002
*        ESTABLISH DATE AND SAVE REGS                                   41000002
         SPACE  3                                                       41200002
         LR    R4,R15              LOAD BASE REG                        41600020
         LA    R5,MSGSA            ADDRESS OF SAVE AREA                 42400020
         ST    R5,8(R13)           STORE IN CALLER'S SA                 43200020
         ST    R13,4(R5)           STORE ADDR OF CALLER'S SA            44000020
         L     R5,4(R1)            ADR PTR SAVE AREA              M4506 44800020
         L     R1,0(R5)            GET DPRINT PARAMETER PTR             45600020
         L     R12,4(R1)           ADDRESS OF DPRINT CTRL WORD          46400020
         ST    R1,SAVER1           SAVE DPRINT PARAMETER PTR            47200020
         XC    DPRTRNCD(4),DPRTRNCD  CLEAR WORD                   M2413 47600001
         SPACE                                                          48000020
DPR300  TM    1(R12),X'01'        PRINT MSG ?                           48800020
         BZ    DPR311              NO.  EXIT RTN.                       49600020
DPR303A SR    R7,R7               CLEAR R7                              50400020
         IC    R7,4(R12)          GET NO. OF MSGE LINES.                51200020
         LTR   R7,R7              NO. LINES = 0 ?                       52000020
         BZ    DPR312              YES.  EXIT RTN.                M2413 52800001
         SPACE                                                          53600020
         L     R8,8(R1)           GET ADDR OF MSGE ADDRESSES.           54400020
         SR    R9,R9              CLEAR R9.                             55200020
         IC    R9,5(R12)          GET DISPLACEMENT TO MSGE FIELDS.      56000020
         LA    R5,0(R9,R12)       GET ADDR OF MSGE FIELDS.              56800020
         SPACE                                                          57600020
DPR305   SR    R9,R9              CLEAR R9.                             58400020
         IC    R9,0(R5)           GET COUNT.                            59200020
         LTR   R9,R9              IS COUNT = 0 ?                        60000020
         BZ    DPR310             BRANCH IF YES                         60800020
         LH    R6,MAXCNT          GET MAX NO. BYTES ALLOWED.            61600020
         CR    R9,R6              COUNT GREATER THAN MAX ?              62400020
         BNH   DPR307             BRANCH IF NO.                         63200020
         LR    R9,R6              SET COUNT = MAX.                      64000020
DPR307   L     R11,0(R8)          GET ADDR OF MSGE LINE.                64800020
         SPACE                                                          65600020
DPR309   BCTR  R9,0                REDUCE COUNT FOR MVC INSTR.          66400020
         EX    R9,DPR600          EXECUTE MVC TO PLACE MSGE IN BUFFER.  67200020
         ST    R5,DSAVE5           SAVE REG 5                           68000020
         L     R5,DSAVE5           RESTORE REG                          68800020
         BAL   R10,DPRWRT          GO PRINT COMMENT LINE                69600020
         SPACE                                                          70400020
DPR310   LA    R8,4(R8)           GET NEXT MSGE ADDR.                   71200020
         LA    R5,1(R5)            BUMP FOR NEXT ADDR FIELD             72000020
         BCT   R7,DPR305          PRINT NEXT LINE.                      72800020
         SPACE                                                          73600020
* RETURN TO SCAN SECTION.                                               74400020
         SPACE                                                          75200020
DPR311   L     R13,MSGSA+4         ADDRESS OF CALLER'S SA               76000020
         MVC   16(4,R13),DPRTRNCD  RETURN CODE TO R15 SAVE AREA   M2413 76400001
         LM    R14,R12,12(R13)     RESTORE REGS                         76800020
         BR    R14                 RETURN                               77600020
DPR312   MVI   DPRTRNCD+3,X'0C'    SET RETURN CODE                M2413 77800001
         B     DPR311                                             M2413 78000001
         SPACE                                                          78400020
DPR600   MVC   PB(0),0(R11)        MOVE TO PRINT BUFFER                 79200020
         SPACE                                                          80000020
*********************************************************************** 80800020
*        PRINT COMMENT LINE VIA PARALLEL PRINT OUTPUT WRITER          * 81600020
*********************************************************************** 82400020
         SPACE                                                          83200020
DPRWRT   LA    R13,MSGSA           SAVE AREA ADDRESS                    84000020
         PWRT  SIZE=120                                         SA46329 84800001
         MVI   PB,C' '             CLEAR PRINT BUFFER WITH BLANKS       85600020
         MVC   PB+1(120),PB                                             86400020
         L     R1,SAVER1           RESTORE DPRINT PARAMETER POINTER     87200020
         L     R12,4(R1)           ADDRESS OF DPRINT CTRL WORD          88000020
         BR    R10                 RETURN TO CALLING ROUTINE            88800020
         SPACE 4                                                        89600020
MSGSA    DS    18F                 REG SAVE AREA                        90400020
SAVER1   DC    XL4'0'                                                   91200020
DSAVE5   DC    XL4'0'                                                   92000020
DPRTRNCD DC    XL4'0'              RETURN CODE                    M2413 92400001
MAXCNT   DC    H'119'              MAX PRINT CHARACTERS           M1010 92800020
DPRCOM   IFDCOM                                                         93600020
PB       EQU   PRTBUFR+1                                                94400020
         END                                                            95200020
./  ADD  SSI=33201000,NAME=IFDOLT18
         TITLE ' RESIDENT TRANSIENT MANAGER.  IFDOLT18'                 00010000
         TITLE ' RESIDENT TRANSIENT MANAGER.  IFDOLT18'                 00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT18 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT18 17 NOV 73'                             0002  00070000
         STM   @E,@C,12(@D)                                       0002  00080000
         BALR  @B,0                                               0002  00090000
@PSTART  DS    0H                                                 0002  00100000
         USING @PSTART+00000,@B                                   0002  00110000
         ST    @D,@SAV001+4                                       0002  00120000
         LA    @F,@SAV001                                         0002  00130000
         ST    @F,8(0,@D)                                         0002  00140000
         LR    @D,@F                                              0002  00150000
*  GEN(USING CHASCT,2);                  /* COMMON AREA BASE REGISTER * 00160000
         USING CHASCT,2                                                 00170000
         DS    0H                                                       00180000
* GENERATE DATA;                                                        00190000
*  RESTRICT(2,3,4,5,6,7,8,9);                                           00200000
*  DCL R0 REG(0) PTR;                                                   00210000
*  DCL R1 REG(1) PTR;                                                   00220000
*  DCL R2 REG(2) PTR;                    /* POINTER TO COMMON AREA */   00230000
*  DCL R3 REG(3) PTR;                                                   00240000
*  DCL R4 REG(4) PTR;                                                   00250000
*  DCL R5 REG(5) PTR;                                                   00260000
*  DCL R6 REG(6) PTR;                                                   00270000
*  DCL R7 REG(7) PTR;                    /* REGISTER 7 */               00280000
*  DCL R8 REG(8) PTR;                                                   00290000
*  DCL R9 REG(9) PTR;                    /* REGISTER 9 */               00300000
*  DCL R11 REG(11) PTR;                  /* BASE REGISTER       X02008* 00310000
*  DCL R12 REG(12) PTR;                                                 00320000
*  DCL R13 REG(13) PTR;                                                 00330000
*  DCL R14 REG(14) PTR;                  /* RETURN REGISTER */          00340000
*  DCL R15 REG(15) PTR;                                                 00350000
*  DCL MSGMOD PTR GENERATED;             /* MESSAGE MODULE */           00360000
*  DCL SCHEDSA PTR GENERATED;            /* SCHEDULER SAVE AREA */      00370000
*  DCL LOGADR PTR GENERATED;             /* POINTER TO LOGSCAN MODULE * 00380000
*  DCL TRA000 CHAR(1) GENERATED;         /* PROGRAM LOCATION    X02008* 00390000
*  DCL TRA001 LABEL;                     /* INDIVIDUAL ENTRY POINTS */  00400000
*  DCL TRA002C LABEL;                                                   00410000
*  DCL TRA002 INT ENTRY;                 /* COMMON ENTRY POINT */       00420000
*  DCL IFDOLT23 EXT ENTRY;               /* COMMON AREA MODULE */       00430000
*  DCL IFDOLT39 EXT ENTRY;                                              00440000
*  DCL COMADR PTR INIT(ADDR(IFDOLT23));  /* COMMON AREA ADDRESS */      00450000
*  DCL WKSVC GENERATED;                  /* SVC WORK AREA */            00460000
*  DCL TABAD PTR GENERATED;              /* POINTER TO LINK TABLE */    00470000
*  DCL MCT CHAR(208) GENERATED;          /* MODULE CONTROL TABLE */     00480000
*  DCL CESWT2 GENERATED;                 /* OLTEP SWITCHES */           00490000
*  DCL CESWT6 GENERATED;                 /* OLTEP SWITCHES */           00500000
*  DCL COMMINT PTR GENERATED;            /* DYN COMMUNICATE */          00510000
*  DCL ECB3 FIXED GENERATED;             /* ECB FOR DYN COMMUNICATE */  00520000
*  DCL DEVTBPTR PTR GENERATED;           /* DEVICE TABLE PTR    X02008* 00530000
*  DCL LGWRTCT CHAR(2) GENERATED;        /* LARGE WRITE COUNT   X02008* 00540000
*  DCL LGWRTFLD PTR BASED(ADDR(LGWRTCT)-4); /* LARGE WRITE ADR  X02008* 00550000
*  DCL EXPAND1 FIXED GENERATED;          /* PARTITION SIZE            * 00560000
*  DCL OPFLG BIT(8) BASED(R9+48);        /* OPEN BIT                  * 00570000
*  DCL 1 * BIT(8) BASED(ADDR(CESWT2)),   /* OLTEP SWITCHES */           00580000
*         2 NDCFO BIT(1),                /* NO DYN COMMUN */            00590000
*         2 PLKMRB BIT(1),               /* PLINK OR MORECORE REQUEST * 00600000
*         2 FECOND BIT(1),               /* FIRST ERROR CONDITION */    00610000
*         2 * BIT(1);                    /* NA */                       00620000
*  DCL CESWT3 CHAR(1) GENERATED;         /* OLTEP SWITCHES       M4506* 00630000
*  DCL 1 * CHAR(1) BASED(ADDR(CESWT3)),  /* OLTEP SWITCHES       M4506* 00640000
*         2 * BIT(3),                    /* NA                   M4506* 00650000
*         2 GRBCTL BIT(1),               /* GRAB IN CONTROL      M4506* 00660000
*         2 SUSDEL BIT(1),               /* SUSPENDED DELETION   M4506* 00670000
*           3 * BIT(1);                  /* NA                   M4506* 00680000
*  DCL 1 * BIT(8) BASED(ADDR(CESWT6)),   /* OLTEP SWITCHES */           00690000
*         2 UTSCAL BIT(1);               /* UTS CALLER */               00700000
*  DCL CHASCT CHAR(80) GENERATED;        /* SCT ADDRESS */              00710000
*  DCL SECLST GENERATED;                 /* SECTION LIST */             00720000
*  DCL PARTITEM CHAR(12) GENERATED;      /* PARTITION ITEMS     X02008* 00730000
*  DCL 1 * BDY(WORD) BASED(ADDR(PARTITEM)), /* PARTITION ITEMS  X02008* 00740000
*         2 PARADR PTR,                  /* PARTITION ADDRESS   X02008* 00750000
*         2 PARSZ FIXED,                 /* PARTITION SIZE      X02008* 00760000
*               9 * CHAR(1);             /* NA                  X02008* 00770000
*  DCL OLTTAB PTR GENERATED;             /* LINK TABLE */               00780000
*  DCL SECPTR PTR GENERATED;             /* UTS GENERATED */            00790000
*  DCL HRTSEL CHAR(2) GENERATED;         /* HIGHEST ROUTINE BYTES */    00800000
*  DCL 1 * BASED(ADDR(HRTSEL)),          /* HIGHEST ROUTINE BYTES */    00810000
*         2 TERTN CHAR(1),               /* LAST ROUTINE IN UTS */      00820000
*         2 HIRTN CHAR(1);               /* HIGHEST ROUTINE SELECTED */ 00830000
*  DCL 1 * BASED(ADDR(OLTTAB)),          /* LINK TABLE */               00840000
*         2 *(8) PTR,                    /* ENTRY POINTS FOR MACROS */  00850000
*         2 TMCOMAD PTR,                 /* TRANSIENT MANAGER AREA */   00860000
*         2 SECPRF PTR,                  /* SECTION PREFACE ADDRESS */  00870000
*           3 * PTR;                     /* LAST POINTER */             00880000
*  DCL 1 * BASED(R3+4),                  /* FLAG SECTION OF ROUTINE */  00890000
*         2 RTNEXT PTR,                  /* NEXT ROUTINE ADDRESS */     00900000
*         2 RTNN CHAR(1),                /* ROUTINE NUMBER */           00910000
*         2 REFN CHAR(1),                /* REFERENCE NUMBER */         00920000
*         2 RFLG BIT(8),                 /* ROUTINE FLAGS */            00930000
*           3 MIMK BIT(1),               /* MI MASK BIT */              00940000
*           3 TERM BIT(1),               /* TERMINATION BIT */          00950000
*           3 * BIT(1);                  /* END OF BYTE */              00960000
*  DCL RTN CHAR(1) BASED(R7);            /* ROUTINE NUMBER */           00970000
*  DCL REFNUM CHAR(1) BASED(R7+17);      /* REFERENCE NUMBER */         00980000
*  DCL 1 * BASED(ADDR(CHASCT)),          /* SECTION CONTROL TABLE */    00990000
*         2 SCTW0 FIXED,                 /* SCT WORD 0 */               01000000
*           3 * CHAR(2),                 /* FIRST BYTES OF WORD */      01010000
*           3 * BIT(8),                  /* BYTE OF BITS */             01020000
*             4 * BIT(5),                /* BIT ALIGNMENT */            01030000
*             4 NPR BIT(1),              /* NO PRINT INDICATOR */       01040000
*           3 * BIT(8),                  /* FLAGS */                    01050000
*             4 ERBT BIT(1),             /* ERROR BIT FOR ROUTINE */    01060000
*             4 ASTERB BIT(1),           /* ASTERISK INDICATES ERROR */ 01070000
*             4 CATB1 BIT(1),            /* CATASTROPHIC BIT */         01080000
*             4 * BIT(3),                /* NA */                       01090000
*             4 ERLOP BIT(1),            /* ERROR LOOP */               01100000
*         2 SCTW1 FIXED,                 /* SCT WORD 1 */               01110000
*         2 SCTW2 FIXED,                 /* SCT WORD 2 */               01120000
*         2 SCTW3 FIXED,                 /* SCT WORD 3 */               01130000
*         2 SCTW4 FIXED,                 /* SCT WORD 4 */               01140000
*         2 SCTW5 FIXED,                 /* SCT WORD 5 */               01150000
*         2 SCTW6 FIXED,                 /* SCT WORD 6 */               01160000
*         2 SCTW7 FIXED,                 /* SCT WORD 7 */               01170000
*         2 SCTW8 FIXED,                 /* SCT WORD 8 */               01180000
*           3 * CHAR(1),                 /* ROUTINE MASK COUNT LENGTH * 01190000
*           3 * BIT(8),                  /* FLAGS */                    01200000
*             4 * BIT(5),                /* NA                  X02008* 01210000
*             4 CLEANUP BIT(1),          /* UTS CLEAN UP ENTRY  X02008* 01220000
*           3 SCTW82 FIXED(15),          /* UTS SIZE IN FULL WORDS */   01230000
*         2 SCTW9 FIXED,                 /* SCT WORD 9 */               01240000
*           3 * BIT(8),                  /* FLAGS */                    01250000
*             4 MIBT BIT(1),             /* MI BIT */                   01260000
*            4 CLEANRT BIT(1),           /* OLT HAS CLEANUP     X03008* 01270000
*            4 * BIT(2),                 /* NA                  X03008* 01280000
*             4 RETCODE BIT(1),          /* RETURN CODE SUPPORT X02008* 01290000
*             4 TRACE BIT(1),            /* TRACE FUNCTION      X02008* 01300000
*           3 * CHAR(1),                                                01310000
*           3 SCTW9C CHAR(2),                                           01320000
*         2 SCTW10 FIXED,                /* SCT WORD 10 TO 17 */        01330000
*         2 *(2) PTR;                    /* TOTE USE */                 01340000
*  DCL 1 * BASED(R5),                    /* ROUTINE MASK */             01350000
*         2 RTN8(32) CHAR(1);            /* ROUTINE MASK ADDRESS */     01360000
*  DCL 1 * BASED(R5),                    /* ROUTINE TO RUN */           01370000
*         2 RTNB BIT(8);                 /* INDIVIDUAL ROUTINE */       01380000
*  DCL RST15 PTR BASED(R13+16);          /* REG 15 SAVED */             01390000
*  DCL 1 * BASED(R13),                   /* SAVE AREA           X02008* 01400000
*         2 * FIXED,                     /* FIRST WORD          X02008* 01410000
*         2 CHNBK PTR,                   /* CALLER SAVE AREA    X02008* 01420000
*         2 SR13 PTR,                    /* REG 13 SAVED        X02008* 01430000
*         2 SR14 PTR,                    /* REG 14 SAVED        X02008* 01440000
*         2 SR15 PTR,                    /* REG 15 SAVED        X02008* 01450000
*         2 SR0 PTR,                     /* REG 0 SAVED         X02008* 01460000
*         2 SR1 PTR,                     /* REG 1 SAVED         X02008* 01470000
*           3 * PTR;                     /* LAST ITEM           X02008* 01480000
*  DCL 1 I FIXED,                        /* FIXED WORD WORK AREAX02008* 01490000
*         2 * CHAR(3),                   /* WORK BYTES          X02008* 01500000
*         2 I4 CHAR(1);                  /* WORK BYTE           X02008* 01510000
*  DCL RID CHAR(1) BASED(ADDR(MCT)+9);   /* ROOT ID BLOCK       X02008* 01520000
*  DCL 1 MCA BDY(WORD) BASED(R8),        /* MODULE CONTROL TABLEX02008* 01530000
*         2 MPRE PTR,                    /* PREVIOUS MCT IF ANY X02008* 01540000
*         2 MNXT PTR,                    /* NEXT MCT IF ANY     X02008* 01550000
*         2 MITEM(20) CHAR(6),           /* MCT ENTRY FORMAT    X02008* 01560000
*           3 MNM CHAR(2),               /* MODULE INDICATOR    X02008* 01570000
*             4 MNM1 CHAR(1),            /* FIRST INDICATOR BYTEX02008* 01580000
*               5 MB1 BIT(1),            /* NOT TO DELETE BIT   X02008* 01590000
*               5 MB2 BIT(1),            /* PRESENTLY ACTIVE BITX02008* 01600000
*               5 * BIT(5),              /* WORK BITS           X02008* 01610000
*               5 MB8 BIT(1),            /* WORK BIT            X02008* 01620000
*             4 MNM2 CHAR(1),            /* MODULE BLOCK ID     X02008* 01630000
*           3 MNAM CHAR(2),              /* OLTEP MODULE ID     X02008* 01640000
*             4 MN1 CHAR(1),             /* FIRST BYTE OF ID    X02008* 01650000
*           3 MMSIZ CHAR(2),             /* MODULE SIZE         X02008* 01660000
*         2 TITEM(20) PTR;               /* ADDRESS TABLE       X02008* 01670000
*  DCL MCTADS CHAR(1) BASED(R8+128);     /* MCT ADDRESSES       X02008* 01680000
*  DCL TADR(20) PTR BASED(R5);           /* MODULES ADDRESSES   X02008* 01690000
*  DCL 1 BMCT18 BIT(8),                  /* MCT INDICATORS      X02008* 01700000
*         2 BMCT12 BIT(2),               /* CORE FOR MCT        X02008* 01710000
*           3 BMCT1 BIT(1),              /* FIRST ATTEMPT MADE  X02008* 01720000
*           3 BMCT2 BIT(1),              /* SECOND ATTEMPT MADE X02008* 01730000
*         2 PLKBIT BIT(1),               /* PLINK REQUEST       X02008* 01740000
*         2 MOD8 BIT(1),                 /* EIGHT CHARACTER NAMEX02008* 01750000
*         2 BMCT45 BIT(2),               /* CORE DELETED        X02008* 01760000
*           3 BMCT4 BIT(1),              /* CORE DELETED        X02008* 01770000
*           3 BMCT5 BIT(1),              /* MORECORE REQUEST    X02008* 01780000
*         2 MINMOR BIT(1),               /* MINIMUM MORECORE    X02008* 01790000
*             4 * BIT(1);                /* LAST BIT            X02008* 01800000
*  DCL 1 SVR14 PTR BASED(CHNBK+12),      /* REG 14 SAVE AREA */         01810000
*         2 SVR141 CHAR(1);              /* 1ST BYTE OF REG 14 SAVED */ 01820000
*  DCL SV15 PTR BASED(CHNBK+16);         /* REG 15 SAVE AREA */         01830000
*  DCL SVR3 PTR BASED(CHNBK+32);         /* REG 3 SAVED */              01840000
*  DCL 1 * BASED(R3),                    /* PARAMETER LIST */           01850000
*         2 PMW1 CHAR(10),               /* PARM LIST           X02008* 01860000
*           3 * CHAR(1),                 /* NA                  X02008* 01870000
*           3 PLEV CHAR(1),              /* MACRO LEVEL         X02008* 01880000
*           3 PLID CHAR(2),              /* MACRO ID            X02008* 01890000
*             4 * CHAR(1);               /* NA                  X02008* 01900000
*  DCL MIRTNM CHAR(4) BASED(R1+20);      /* ROUTINE NUMBER      X02008* 01910000
*  DCL CLIST CHAR(16)                    /* EBCDIC CHARACTERS   X02008* 01920000
*         INIT('0123456789ABCDEF');                                     01930000
*  DCL EBCD CHAR(1) BASED(R8);           /* EBCDIC CHARACTER    X02008* 01940000
*  DCL 1 RETMSG CHAR(41)                                                01950000
*         INIT('IFD450I * RTN XXX,ID YY,AT ZZZZZZZZ,RC WW'),            01960000
*         2 * CHAR(8),                   /* MESSAGE ID          X02008* 01970000
*         2 RTAST CHAR(1),               /* ASTERISK OR BLANK   X02008* 01980000
*         2 * CHAR(4),                   /* NA                  X02008* 01990000
*         2 RTNM14 CHAR(4),              /* BYTES IN GROUP      X02008* 02000000
*           3 * CHAR(1),                 /* NA                  X02008* 02010000
*           3 RTRTNM CHAR(3),            /* ROUTINE NUMBER      X02008* 02020000
*         2 * CHAR(4),                   /* NA                  X02008* 02030000
*         2 RTMCID CHAR(2),              /* MACRO ID            X02008* 02040000
*         2 * CHAR(4),                   /* NA                  X02008* 02050000
*         2 RTLOC CHAR(8),               /* RETURN LOCATION     X02008* 02060000
*         2 * CHAR(4),                   /* NA                  X02008* 02070000
*         2 RTTERM CHAR(2);              /* RETURN CODE         X02008* 02080000
*  DCL 1 * CHAR(8) BASED(R7),            /* RETURN CODE AREA    X02008* 02090000
*         2 RTLOC1 CHAR(1),              /* 1ST LOCATION        X02008* 02100000
*         2 RTLOC2 CHAR(1),              /* 2ND LOCATION        X02008* 02110000
*         2 NXTRTL CHAR(1);              /* NEXT LOCATION       X02008* 02120000
*  DCL 1 * BASED(R5),                    /* ADDRESS TABLE */            02130000
*         2 TAB1 PTR,                    /* ADDRESS TABLE ENTRY */      02140000
*         2 TAB2 PTR;                    /* NEXT ENTRY IN TABLE */      02150000
*  DCL 1 * BASED(R4),                    /* BRANCH INSTRUCTION TABLE */ 02160000
*         2 * CHAR(4),                   /* BRANCH INSTRUCTION */       02170000
*         2 MIDOLD CHAR(2),              /* MODULE ID */                02180000
*           3 MIDOLD1 CHAR(1),           /* FIRST CHARACTER OF ID */    02190000
*         2 MAC2 CHAR(4);                /* NEXT BRANCH INSTRUCTION */  02200000
*  DCL 1 * BASED(R6),                    /* MODULE CONTROL TABLE */     02210000
*         2 *(2) PTR,                    /* MCT POINTERS */             02220000
*         2 * CHAR(1),                   /* INDICATORS */               02230000
*           3 * BIT(1),                  /* NA                   M4506* 02240000
*           3 ACTMD BIT(1),              /* ACTIVE MODULE        M4506* 02250000
*         2 MBK1 CHAR(1),                /* BLOCK ASSIGNMENT */         02260000
*         2 MID1 CHAR(2),                /* MODULE IDENTITY */          02270000
*         2 MSZ1 CHAR(2);                /* MODULE SIZE */              02280000
*  DCL MCT2 BASED(R6+6);                 /* NEXT ITEM IN MCT */         02290000
*  DCL 1 TMCOM BDY(WORD),                /* TRANSIENT MODULE COMMON */  02300000
*         2 WKAREA CHAR(60) BDY(WORD),   /* BLDL AND WORK AREA  X02008* 02310000
*           3 * FIXED(15) INIT(1),       /* NUMBER OF ENTRIES */        02320000
*           3 * FIXED(15) INIT(56),      /* SIZE OF EACH ENTRY  X02008* 02330000
*           3 WITEM CHAR(32),            /* BLDL ITEM */                02340000
*             4 WTOTNM CHAR(8),          /* MODULE NAME */              02350000
*               5 WNM CHAR(6) INIT('IFDOLT'), /* COMMON PART OF NAME */ 02360000
*               5 WNAM CHAR(2),          /* VARYING PART MODULE NAME */ 02370000
*             4 WTTRK CHAR(6),           /* MODULE LOCATION */          02380000
*               5 * CHAR(2),             /* TRACK AND CYLINDER */       02390000
*               5 WR CHAR(1),            /* RECORD */                   02400000
*             4 * CHAR(11),              /* BLDL DATA */                02410000
*             4 WMSIZ CHAR(2),           /* MODULE SIZE */              02420000
*             4 * CHAR(1),               /* SPARE BYTE */               02430000
*           3 WK24 CHAR(24) BDY(WORD),   /* WORK BYTES          X02008* 02440000
*             5 GAVL CHAR(8),            /* CORE LIST           X02008* 02450000
*             5 GSIZS CHAR(8),           /* SIZES               X02008* 02460000
*             5 GAVL1 BDY(WORD) CHAR(8), /* WORK AREA           X02008* 02470000
*         2 KNT CHAR(8)                  /* OLTEP MODULE NAME */        02480000
*               INIT('IFDOLT  '),        /* IDENTITY OF OLTEP MODULES * 02490000
*           3 KNAME CHAR(6),             /* COMMON PART MODULE NAME */  02500000
*           3 KNMV CHAR(2),              /* VARYING PART MODULE NAME */ 02510000
*         2 MODNN CHAR(8)                /* NON-OLTEP MODULE NAME */    02520000
*               INIT('IFDOLT  '),        /* INITIALLY ALL OLTEP NAMES * 02530000
*           3 MODNN6 CHAR(6),            /* FIRST SIX LETTERS OF NAME * 02540000
*         2 BDEL FIXED INIT(1),          /* BLOCK INDICATORS    S21937* 02550000
*           3 BIN CHAR(1),               /* BLOCK SEQUENCING */         02560000
*           3 WK1BYT CHAR(1),            /* WORK BYTE */                02570000
*           3 BHB CHAR(1),               /* HIGHEST BLOCK ASSIGNED */   02580000
*           3 BHLD CHAR(1),              /* LAST HIGH BLOCK DELETED */  02590000
*         2 GTCOR PTR,                   /* ADDRESS OF OBTAINED CORE */ 02600000
*         2 SVPMW1 CHAR(10),             /* DATA SAVED FROM PARM LIST * 02610000
*           3 SVP1 CHAR(2),              /* MODULE INDICATORS */        02620000
*             4 P1BITS BIT(8),           /* BIT INDICATORS */           02630000
*               5 P1B0 BIT(1),           /* EIGHT CHARACTER NAME */     02640000
*               5 P1B1 BIT(1),           /* NOT A MODULE REQUEST */     02650000
*             5 P1B23 BIT(2),            /* LOAD DELETE BITS     M4506* 02660000
*               7 P1B2 BIT(1),           /* LOAD MODULE          M4506* 02670000
*               7 P1B3 BIT(1),           /* DELETE MODULE        M4506* 02680000
*               5 P1B4 BIT(1),           /* WORK BIT */                 02690000
*               5 P1B5 BIT(1),           /* UNIT TEST MODULE */         02700000
*               5 P1B6 BIT(1),           /* ROOT MODULE */              02710000
*               5 P1B7 BIT(1),           /* OLD MODULE AND WORK BIT */  02720000
*             4 SVPL CHAR(1),            /* MACRO LEVEL */              02730000
*           3 SVP8 CHAR(8),              /* EIGHT CHARACTER NAME */     02740000
*             4 SVP2 CHAR(2);            /* TWO CHARACTER NAME */       02750000
*  DCL VID CHAR(2) BASED(ADDR(WKSVC)+2); /* MODULE ID FOR SVC USE */    02760000
*  DCL NXMCT PTR BASED(R8+4);            /* NEXT MCT */                 02770000
*  DCL MCTAD1 PTR BASED(R8+128);         /* FIRST ADDRESS IN MCT */     02780000
*  DCL 1 * BDY(WORD) BASED(ADDR(MCT)+128), /* MCT ADDRESSES */          02790000
*         2 RTADR1 PTR,                  /* ROOT MODULE ADDRESS */      02800000
*         2 TMADR1 PTR,                  /* TRANSIENT MANAGER ADDRESS * 02810000
*         2 *(18) PTR;                   /* ADDRESSES */                02820000
*  DCL OLDMAC CHAR(2) INIT('0102'X);     /* OLD MACRO INDICATORS */     02830000
*  DCL 1 * BASED(R1),                    /* WTO ADDRESS */              02840000
*         2 * CHAR(13),                  /* SET VALUES AND IDENTITY */  02850000
*         2 WTOFORM CHAR(60);            /* MESSAGE TEXT */             02860000
*  DCL 1 BLDLIST BASED(R5),              /* BLDL LIST           X02008* 02870000
*         2 LENTCT FIXED(15),            /* NUMBER OF ENTRIES */        02880000
*         2 LENTSZ FIXED(15);            /* SIZE OF EACH ENTRY */       02890000
*  DCL 1 * BDY(WORD) BASED(ADDR(WK24)),  /* NA                  X02008* 02900000
*         2 AVADR PTR,                   /* CORE LOCATION       X02008* 02910000
*         2 AVSEZ FIXED,                 /* CORE SIZE           X02008* 02920000
*           3 * CHAR(2),                 /* NA                  X02008* 02930000
*           3 AVSIZ CHAR(2),             /* SIZE LIMITED        X02008* 02940000
*         2 LOSIZ FIXED,                 /* MINIMUM CORE REQUESTX02008* 02950000
*         2 HHSIZ FIXED,                 /* MAXIMUM CORE REQUESTX02008* 02960000
*           3 HHSIZC CHAR(4),            /* MAXIMUM CORE REQUESTX02008* 02970000
*             4 * CHAR(2),               /* NA                  X02008* 02980000
*             4 HISIZ CHAR(2),           /* MAXIMUM SIZE        X02008* 02990000
*               9 * CHAR(1);             /* NA                  X02008* 03000000
*  DCL WK1PTR PTR;                       /* WORK AREA POINTER   X02008* 03010000
*  DCL SAVR8 PTR;                        /* SAVE AREA           X02008* 03020000
*  DCL 1 * BDY(WORD) BASED(ADDR(WKAREA)), /* BLDL AND WORK AREA X02008* 03030000
*         2 *(5) PTR,                    /* FIRST FIVE WORDS    X02008* 03040000
*         2 NMCT CHAR(14),               /* SIMULATE NEW MCT    X02008* 03050000
*           3 NTADR PTR;                 /* NEW ADDRESS TABLE   X02008* 03060000
*  DCL 1 BLIST1 CHAR(60) BASED(R5),      /* BLDL LIST           X02008* 03070000
*         2 * CHAR(4),                   /* ENTRY SIZE AND COUNT */     03080000
*         2 * CHAR(8),                   /* NAME OF MODULE */           03090000
*           3 LNM2 CHAR(6),              /* COMMON PART OF NAME */      03100000
*           3 LNAM2 CHAR(2),             /* VARYING PART OF NAME */     03110000
*         2 LTTRK CHAR(6),               /* DATA LOCATION */            03120000
*           3 * CHAR(2),                 /* TRACK LOCATION */           03130000
*           3 LR CHAR(1),                /* RECORD NUMBER */            03140000
*         2 * CHAR(11),                  /* USER DATA */                03150000
*         2 LSIZ CHAR(2);                /* MODULE SIZE */              03160000
*  DCL BLIST2 BASED(R5+56);              /* NEXT BLDL ITEM      X02008* 03170000
*  DCL 1 * BDY(WORD) BASED(ADDR(TMCOM)+12), /* NA               X02008* 03180000
*         2 SV1T8 CHAR(8),               /* WORK AREA           X02008* 03190000
*           3 SV1 FIXED,                 /* 1ST HEX CHAR AREA   X02008* 03200000
*           3 SV2 FIXED,                 /* 2ND HEX CHAR AREA   X02008* 03210000
*           7 * CHAR(1);                 /* NA                  X02008* 03220000
*  DCL 1 * BASED(R5),                    /* SAVE AREA           X02008* 03230000
*         2 SV1C CHAR(1),                /* 1ST CHARACTER       X02008* 03240000
*         2 NXTSVC CHAR(3),              /* NEXT CHARACTERS     X02008* 03250000
*         2 SV2C CHAR(1);                /* 2ND WORD            X02008* 03260000
*  DCL MDMASK CHAR(1) BASED(R4);         /* MODULE MASK BIT     X02008* 03270000
*  DCL FKLKTBA PTR GENERATED;            /* FAKE TABLE ADDRESS  X02008* 03280000
*  DCL 1 * BDY(WORD) BASED(R2),          /* CHASCT              X02008* 03290000
*         2 *(17) PTR,                   /* NA                  X02008* 03300000
*         2 * PTR,                       /* NA                  X02008* 03310000
*           3 * CHAR(2),                 /* NA                  X02008* 03320000
*           3 RTMASK CHAR(1),            /* RETURN CODE MASK    X02008* 03330000
*         2 *(2) PTR,                    /* NA                  X02008* 03340000
*         2 SCTW20 PTR,                  /* BRANCH TABLE ADDRESSX02008* 03350000
*           3 * PTR;                     /* NA                  X02008* 03360000
*  DCL UTRET PTR BDY(WORD) INIT(0);      /* UTS RETURN ADDRESS  X02008* 03370000
*  DCL 1 BRID CHAR(2),                   /* BRANCH ID           X02008* 03380000
*         2 BRID1 CHAR(1),               /* FIRST ID BYTE       X02008* 03390000
*           3 BRIDB14 BIT(4);            /* ID BITS             X02008* 03400000
*  DCL 1 LIST CHAR(9) LOCAL INT,         /* WORK LIST           X02008* 03410000
*         2 RR CHAR(1),                  /* WORK BYTE           X02008* 03420000
*         2 MASK(8) CHAR(1)              /* MASK BITS           X02008* 03430000
*         INIT('80'X,'40'X,'20'X,'10'X,  /* BIT SET IN EACH MASK */     03440000
*              '08'X,'04'X,'02'X,'01'X); /* BIT SET IN EACH MASK */     03450000
*  DCL 1 * BASED(MSGMOD),                /* MESSAGE MODULE */           03460000
*         2 *(14) PTR,                   /* NA                  X02008* 03470000
*         2 IFD160 PTR,                  /* POINTER TO IFD160 MESSAGE * 03480000
*         2 * PTR,                       /* NA                        * 03490000
*         2 IFD210 PTR,                  /* PTR TO IFD210 MSG         * 03500000
*         2 * PTR,                       /* NA                        * 03510000
*         2 IFD168 PTR,                 /* PTR TO IFD168 MSG    S20203* 03520000
*         2 *(18) PTR,                   /* NA                  Y02008* 03530000
*         2 IFD229 PTR,                  /* PTR TO IFD229I MSG  Y02008* 03540000
*           3 * PTR;                     /* LAST POINTER */             03550000
*  DCL 1 * BASED(R1),                   /*                      S20203* 03560000
*    2 LENGTH CHAR(1),                  /* LENGTH OF RESPONSE   S20203* 03570000
*    2 BUFAD PTR(24),                   /* ADDR OF RESP BUFFER  S20203* 03580000
*    2 MECBAD PTR;                      /* ECB ADDRESS          S20203* 03590000
*  DCL 1 * BASED(ADDR(ECB3)),            /* ECB FOR DYN COMMUNICATE */  03600000
*         2 * CHAR(1),                   /* FIRST BYTE */               03610000
*           3 * BIT(1),                  /* BIT ALIGNMENT */            03620000
*           3 ECB3POST BIT(1);           /* DYN COMMUNICATE BIT */      03630000
*  DCL 1 * BDY(WORD) BASED(ADDR(TRA000)-12), /* WORK AREA       X02008* 03640000
*         2 MCTTWO CHAR(208),            /* SECOND MCT                * 03650000
*           3 FSTMCT PTR,                /* FIRST MCT PTR             * 03660000
*           3 RMCT2 CHAR(204);           /* REST OF SECOND MCT        * 03670000
*  DCL 1 * BDY(WORD),                    /* STORAGE AREA              * 03680000
*         2 SVDYN(18) PTR,               /* DYN SAVE AREA */            03690000
*         2 SVT13 PTR,                   /* TRANSIENT MANAGER AREA */   03700000
*         2 SVU13 PTR,                   /* UTS SAVE AREA */            03710000
*           3 * PTR;                     /* NA */                       03720000
*  DCL CESWTR CHAR(1) GENERATED;        /* REI SWITCHES         S20203* 03730000
*  DCL 1 * CHAR(1) BASED(ADDR(CESWTR)),  /* REI SWITCHES        S20203* 03740000
*    2 * BIT(1),                        /* NA                   S20203* 03750000
*    2 REMERR BIT(1),                   /* ERROR FLAG           S20203* 03760000
*    2 REMNOMSG BIT(1),                 /* REMOTE NO MSG        S20203* 03770000
*     2 CENOMSG BIT(1),                  /* ONSITE NO MSG       S20203* 03780000
*         2 TRANSMSG BIT(1),             /*                     S20203* 03790000
*  2 * BIT(1),                          /*                      S20203* 03800000
*           2 * BIT(2);                  /*                     S20203* 03810000
*  DCL CESWTR1 CHAR(1) GENERATED;       /* REI SWITCHES         S20203* 03820000
*  DCL 1 * CHAR(1) BASED(ADDR(CESWTR1)),  /*                    S20203* 03830000
*           2 ILLRESP BIT(1),            /*                     S20203* 03840000
*    2 EXECANS BIT(1),                  /* ANS TO IFD104E       S20203* 03850000
*    2 * BIT(2),                        /* NA                   S20203* 03860000
*    2 RETRIEVE BIT(1),                 /* MSG IN FROM REMOTE   S20203* 03870000
*           2 REMANS BIT(1),             /*                     S20203* 03880000
*           2 * BIT(2);                  /*                     S20203* 03890000
*  DCL CESWTR2 CHAR(1) GENERATED;        /*  REI SWITCHES       S20203* 03900000
*  DCL 1 * CHAR(1) BASED(ADDR(CESWTR2)),  /* REI SWITCHES       S20203* 03910000
*         3 * BIT(2),                    /*                     S20203* 03920000
*         3 ONCOMM BIT(1),               /* ONSITE DYNCOMM      S20203* 03930000
*         3 RECOMM BIT(1),               /* REMOTE TALK IN      S20203* 03940000
*         3 * BIT(4);                    /*                     S20203* 03950000
*  DCL TALKECB FIXED GENERATED;         /* ECB FOR CE TO RE     S20203* 03960000
*  DCL 1 * BASED(ADDR(TALKECB)),        /*                      S20203* 03970000
*    2 * CHAR(1),                       /* FIRST BYTE           S20203* 03980000
*      3 * BIT(1),                      /* BIT ALIGNMENT        S20203* 03990000
*      3 TALKPOST BIT(1);               /* CE COMMUNICATION     S20203* 04000000
*  DCL REIECB FIXED GENERATED;          /* REMOTE ECB           S20203* 04010000
*  DCL 1 * BASED(ADDR(REIECB)),         /* REMOTE ECB           S20203* 04020000
*    2 * CHAR(1),                       /* FIRST BYTE           S20203* 04030000
*      3 * BIT(1),                      /* BIT ALIGNMENT        S20203* 04040000
*      3 REIPOST BIT(1);                /* REMOTE ANSWERED BIT  S20203* 04050000
*  DCL RTALKBUF PTR GENERATED;          /* PTR TO DED BUF       S20203* 04060000
*  DCL DEDBUF CHAR(72) BASED(RTALKBUF);  /* DEDICATED BUFFER    S20203* 04070000
*  DCL PRTBUFR CHAR(124) GENERATED;     /* PRINT BUFFER         S20203* 04080000
*  DCL TALKID CHAR(8) BASED(ADDR(PRTBUFR)+1);  /*               S20203* 04090000
*  DCL RPTBUF CHAR(115) BASED(ADDR(PRTBUFR)+9);   /* PRT BUF    S20203* 04100000
*  DCL RTALKID CHAR(8) INIT('IFD255I ');  /*                    S20203* 04110000
*  DCL MHRPTR PTR GENERATED;            /* PTR TO MHR           S20203* 04120000
*    GEN(EJECT);                                                        04130000
         EJECT                                                          04140000
         DS    0H                                                       04150000
* /*********************************/                                   04160000
* /***   INITIALIZE LINK TABLE   ***/                                   04170000
* /*********************************/                                   04180000
*  GEN(CNOP  0,4);                                                      04190000
         CNOP  0,4                                                      04200000
         DS    0H                                                       04210000
*  GEN;                                                                 04220000
TRA000   DS    0F                                              X02008   04230000
         DS    0H                                                       04240000
*  TMCOMAD=ADDR(TMCOM);                  /* TRANSIENT MANAGER AREA */   04250000
         LA    @F,TMCOM                                           0130  04260000
         ST    @F,A00009+32                                       0130  04270000
*  R8=ADDR(MCT);                         /* MCT ADDRESS */              04280000
         LA    @8,MCT                                             0131  04290000
*  R5=TABAD;                             /* LINK TABLE ADDRESS */       04300000
         L     @5,TABAD                                           0132  04310000
*  R4=ADDR(TRA001);                      /* FIRST ADDRESS FOR TABLE */  04320000
         LA    @4,TRA001                                          0133  04330000
*  DO R6=8 TO 1 BY -1;                   /* INITIALIZE TABLE */         04340000
         LA    @6,8                                               0134  04350000
*    TAB1=R4;                            /* STORE ADDRESS INTO TABLE */ 04360000
@DO9FF   ST    @4,0(0,@5)                                         0135  04370000
*    R5=ADDR(TAB2);                      /* NEXT TABLE ENTRY */         04380000
         LA    @5,4(0,@5)                                         0136  04390000
*    R4=ADDR(MAC2);                      /* NEXT ADDRESS TO STORE */    04400000
         LA    @4,6(0,@4)                                         0137  04410000
*  END;                                  /* COMPLETE WHOLE TABLE */     04420000
*  R5=DEVTBPTR;                          /* BLDL LIST ADDRESS   X02008* 04430000
         BCT   @6,@DO9FF                                          0138  04440000
         L     @5,DEVTBPTR                                        0139  04450000
*  R6=R8;                                /* MCT ADDRESS */              04460000
         LR    @6,@8                                              0140  04470000
*  VID=MID1;                             /* OLTEP MODULE ID */          04480000
         MVC   VID(2),10(@6)                                      0141  04490000
*  LENTSZ=56;                            /* ENTRY SIZE IN BLDL  X02008* 04500000
         LA    @F,56                                              0142  04510000
         STH   @F,2(0,@5)                                         0142  04520000
*  LENTCT=10;                            /* ENTRIES IN BLDL */          04530000
         LA    @F,10                                              0143  04540000
         STH   @F,0(0,@5)                                         0143  04550000
*  DO R4=10 TO 1 BY -1;                  /* COUNT OF ENTRIES */         04560000
         LR    @4,@F                                              0144  04570000
*    LNM2=KNAME;                         /* COMMON PART MODULE NAME */  04580000
@DO9FB   MVC   4(6,@5),TMCOM+60                                   0145  04590000
*    LNAM2=MID1;                         /* VARYING PART MODULE NAME */ 04600000
         MVC   10(2,@5),10(@6)                                    0146  04610000
*    R5=ADDR(BLIST2);                    /* NEXT ENTRY IN BLDL */       04620000
         LA    @5,56(0,@5)                                        0147  04630000
*    R6=ADDR(MCT2);                      /* NEXT ITEM IN MCT */         04640000
         LA    @6,6(0,@6)                                         0148  04650000
*  END;                                  /* ALL OLD MODULES IN BLDL */  04660000
*  R5=DEVTBPTR;                          /* BLDL LIST ADDRESS   X02008* 04670000
         BCT   @4,@DO9FB                                          0149  04680000
         L     @5,DEVTBPTR                                        0150  04690000
*  R0=R5;                                /* LIST ADDRESS FOR BLDL */    04700000
         LR    @0,@5                                              0151  04710000
*  GEN(BLDL  0,(0));                     /* ISSUE BLDL SYSTEM MACRO */  04720000
         BLDL  0,(0)                                                    04730000
         DS    0H                                                       04740000
* /*************************************************/                   04750000
* /***   INITIALIZE FIRST MODULE CONTROL TABLE   ***/                   04760000
* /*************************************************/                   04770000
*  R6=R8;                                /* MCT ADDRESS */              04780000
         LR    @6,@8                                              0153  04790000
*  MBK1=RTADR1/2048;                     /* ROOT MODULE BLOCK ID */     04800000
         L     @E,A00057                                          0154  04810000
         SRA   @E,11                                              0154  04820000
         STC   @E,9(0,@6)                                         0154  04830000
*  LGWRTCT=LSIZ;                         /* LARGE WRITE COUNT   X02008* 04840000
         MVC   LGWRTCT(2),29(@5)                                  0155  04850000
*  IF MBK1='00'X THEN                    /* TEST ROOT MODULE BLOCK ID * 04860000
         CLI   9(@6),X'00'                                        0156  04870000
         BC    07,@9F7                                            0156  04880000
*    MBK1='01'X;                         /* REASSIGN BLOCK ID */        04890000
         MVI   9(@6),X'01'                                        0157  04900000
*  DO R4=10 TO 1 BY -1;                  /* COUNT OF ENTRIES */         04910000
@9F7     LA    @4,10                                              0158  04920000
*    IF LR¬='00'X THEN                   /* TEST IF MODULE PRESENT */   04930000
@DO9F6   CLI   14(@5),X'00'                                       0159  04940000
         BC    08,@9F2                                            0159  04950000
*      MSZ1=LSIZ+48;                     /* MODULE SIZE RECORDED */     04960000
         LA    @F,48                                              0160  04970000
         MVC   @TEMP2+2(2),29(@5)                                 0160  04980000
         A     @F,@TEMP2                                          0160  04990000
         STH   @F,12(0,@6)                                        0160  05000000
*    BLIST1=BLIST1&&BLIST1;              /* ZERO OUT AREA IN BLDL */    05010000
@9F2     XC    0(60,@5),0(@5)                                     0161  05020000
*    R5=ADDR(BLIST2);                    /* NEXT ENTRY IN BLDL */       05030000
         LA    @5,56(0,@5)                                        0162  05040000
*    R6=ADDR(MCT2);                      /* NEXT ITEM IN MCT */         05050000
         LA    @6,6(0,@6)                                         0163  05060000
*  END;                                  /* ALL ENTRIES RECORDED */     05070000
*  SCTW20=FKLKTBA;                       /* LINK TABLE FOR UTS  X02008* 05080000
         BCT   @4,@DO9F6                                          0164  05090000
         MVC   80(4,@2),FKLKTBA                                   0165  05100000
*  RMCT2=RMCT2&&RMCT2;                   /* ZERO SECOND MCT           * 05110000
         XC    A00090+4(204),A00090+4                             0166  05120000
*  GOTO TRA016;                          /* RETURN */                   05130000
         BC    15,TRA016                                          0167  05140000
*  GEN;                                                                 05150000
         DS    0F                                                       05160000
FKLKTBA  DC    A(TRA000A-28)            FAKE LINK TABLE ADDRESS         05170000
TRA000A  DC    A(TRA001A)               ENTRY FROM UTS                  05180000
         DS    0H                                                       05190000
* TRA001:                                                               05200000
*  GEN;                                                                 05210000
TRA001   EQU   *                                                  0169  05220000
UN       EQU   15                                                       05230000
         BC    UN,TRA002-*(R15)         OLD EXIO                        05240000
         DC    CL2'05'                  EXIO ID                         05250000
         BC    UN,TRA002-*(R15)         OLD WAITIO                      05260000
         DC    CL2'06'                  WAITIO ID                       05270000
         BC    UN,TRA002-*(R15)         OLD COMPARE                     05280000
         DC    CL2'09'                  COMPARE ID                      05290000
         BC    UN,TRA002-*(R15)         OLD CONVERT                     05300000
         DC    CL2'10'                  CONVERT ID                      05310000
         BC    UN,TRA002-*(R15)         OLD CECOM                       05320000
         DC    CL2'13'                  CECOM ID                        05330000
         BC    UN,TRA002-*(R15)         OLD DPRINT                      05340000
         DC    CL2'08'                  DPRINT ID                       05350000
         BC    UN,TRA002-*(R15)         OLD RDATA                       05360000
         DC    CL2'11'                  RDATA ID                        05370000
         BC    UN,TRA002-*(R15)         NEW MACRO ENTRY                 05380000
         DC    XL2'0100'                NEW MODULES                     05390000
TRA001A  BC    UN,TRA002-*(R15)         UTS ENTRY                       05400000
         DC    XL2'0200'                INDICATE UTS CALL               05410000
         DS    0H                                                       05420000
*    GEN(EJECT);                                                        05430000
         EJECT                                                          05440000
         DS    0H                                                       05450000
         BC    15,@9F1                                            0171  05460000
* TRA002:                                                               05470000
*  ENTRY(X);                                                            05480000
TRA002   STM   @E,@C,12(@D)                                       0171  05490000
         BALR  @B,0                                               0171  05500000
         LA    @F,TRA002-IFDOLT18-24                              0171  05510000
         SR    @B,@F                                              0171  05520000
         ST    @D,@SAV001+4                                       0171  05530000
         LA    @F,@SAV001                                         0171  05540000
         ST    @F,8(0,@D)                                         0171  05550000
         LR    @D,@F                                              0171  05560000
*  R3=R1;                                /* PARAMETER LIST POINTER */   05570000
@9F1     LR    @3,@1                                              0172  05580000
*  R2=COMADR;                            /* COMMON AREA ADDRESS */      05590000
         L     @2,COMADR                                          0173  05600000
*  SVR141='00'X;                         /* 1ST BYTE OF REG 14 SAVED */ 05610000
         L     @C,4(0,@D)                                         0174  05620000
         MVI   12(@C),X'00'                                       0174  05630000
*  R5=SVR14;                             /* RETURN REGISTER VALUE */    05640000
         L     @5,12(0,@C)                                        0175  05650000
*  R4=SV15;                              /* ORIGINAL R15 VALUE  X02008* 05660000
         L     @4,16(0,@C)                                        0176  05670000
*  BRID=MIDOLD;                          /* SAVE BRANCH ID      X02008* 05680000
         MVC   BRID(2),4(@4)                                      0177  05690000
*  IF BRID1='02'X THEN                   /* CHECK ID            X02008* 05700000
         CLI   BRID,X'02'                                         0178  05710000
         BC    07,@9F0                                            0178  05720000
*    GEN(BAL   R9,TRA012D);              /* RETURN OR TRACE TESTX02008* 05730000
         BAL   R9,TRA012D                                               05740000
         DS    0H                                                       05750000
*  IF GRBCTL='1'B THEN                   /* IS GRAB ACTIVE       M4506* 05760000
@9F0     TM    A00002,B'00010000'                                 0180  05770000
         BC    12,@9EF                                            0180  05780000
*    UTSCAL='1'B;                        /* MODULES ACTIVE       M4506* 05790000
         OI    A00005,B'10000000'                                 0181  05800000
*  RR='00'X;                             /* ALL MODULES TO DELETE */    05810000
@9EF     MVI   LIST,X'00'                                         0182  05820000
*  IF SUSDEL='1'B THEN                   /* TEST INDICATOR       M4507* 05830000
         TM    A00002,B'00001000'                                 0183  05840000
*    GOTO TRA002B;                       /* SUSPENDED DELETION   M4507* 05850000
         BC    01,TRA002B                                         0184  05860000
*  R8=ADDR(MCT);                         /* MCT ADDRESS */              05870000
         LA    @8,MCT                                             0185  05880000
*  IF FECOND='1'B THEN                   /* TEST INDICATOR */           05890000
         TM    A00000,B'00100000'                                 0186  05900000
         BC    12,@9EE                                            0186  05910000
*    DO;                                 /* FIRST ERROR CONDITION */    05920000
*      IF CLEANUP='1'B THEN              /* IS CLEANUP RTN      Y02008* 05930000
         TM    A00014+33,B'00000100'                              0188  05940000
*                                        /* EXECUTING           Y02008* 05950000
*      GO TO TRA002D;                    /* YES, DONT ALLOW FE  Y02008* 05960000
         BC    01,TRA002D                                         0189  05970000
*                                        /* COMMUNICATION INT.  Y02008* 05980000
*      FECOND='0'B;                      /* CLEAR FIRST ERROR BIT */    05990000
         NI    A00000,B'11011111'                                 0190  06000000
*      GEN(BAL   R9,TRA002A);            /* GO TO CE COMMUNICATIONS */  06010000
         BAL   R9,TRA002A                                               06020000
         DS    0H                                                       06030000
*      IF ERLOP='1'B THEN                /* ERROR LOOP ON */            06040000
         TM    A00014+3,B'00000010'                               0192  06050000
         BC    12,@9ED                                            0192  06060000
*        CATB1='0'B;                     /* CLEAR CATASTROPHIC BIT */   06070000
         NI    A00014+3,B'11011111'                               0193  06080000
*      RETURN;                           /* RETURN */                   06090000
         BC    15,@EL01                                           0194  06100000
*    END;                                /* END FIRST ERROR CHECK */    06110000
* TRA002D:                               /*                     Y02008* 06120000
*  R6=PARADR;                            /* PARTITION STARTS    X02008* 06130000
@9EE     EQU   *                                                  0196  06140000
TRA002D  L     @6,A00006                                          0196  06150000
*  R7=PARSZ+R6;                          /* END OF PARTITION    X02008* 06160000
         LR    @7,@6                                              0197  06170000
         A     @7,A00006+4                                        0197  06180000
*  IF R5>R6&                             /* RETURN IS AFTER UTS ENTRY * 06190000
*    R5<R7 THEN                          /* RETURN IS BEFORE UTS END */ 06200000
         CR    @5,@6                                              0198  06210000
         BC    12,@9EC                                            0198  06220000
         CR    @5,@7                                              0198  06230000
         BC    10,@9EB                                            0198  06240000
*      GEN(BAL   R9,TRA012D);            /* RETURN OR TRACE TESTX02008* 06250000
         BAL   R9,TRA012D                                               06260000
         DS    0H                                                       06270000
*  ELSE GOTO TRA002B;                    /* NO DYN COMMUNICATION TEST * 06280000
*  GEN(BAL   R9,TRA029);                 /* ALLOW DELETIONS     X02008* 06290000
@9EA     EQU   *                                                  0201  06300000
         BAL   R9,TRA029                                                06310000
         DS    0H                                                       06320000
*  IF REMERR='1'B THEN                   /* REI ERROR           S20203* 06330000
         TM    A00093,B'01000000'                                 0202  06340000
*    GOTO REIERROR;                      /*                     S20203* 06350000
         BC    01,REIERROR                                        0203  06360000
*  IF NDCFO='0'B&                        /* TEST DYN INDICATOR */       06370000
*      ECB3POST='1'B THEN                /* TEST DYN COMMUNICATE */     06380000
         TM    A00000,B'10000000'                                 0204  06390000
         BC    05,@9E9                                            0204  06400000
         TM    A00087,B'01000000'                                 0204  06410000
         BC    12,@9E8                                            0204  06420000
*    DO;                                 /* BIT SET */                  06430000
*    IF CLEANUP='1'B THEN                /* IS CLEANUP RTN      Y02008* 06440000
         TM    A00014+33,B'00000100'                              0206  06450000
*                                        /* EXECUTING           Y02008* 06460000
*      GO TO TRA002C;                    /* YES, DONT ALLOW     Y02008* 06470000
         BC    01,TRA002C                                         0207  06480000
*                                        /* DYN COMM INTERVAL   Y02008* 06490000
*  REIERROR:                             /*                     S20203* 06500000
*      R9=ADDR(TRA002C);                 /* RETURN ADDRESS */           06510000
REIERROR LA    @9,TRA002C                                         0208  06520000
* TRA002A:                                                              06530000
*      SVT13=R13;                        /* NORMAL SAVE AREA */         06540000
TRA002A  ST    @D,A00091+72                                       0209  06550000
*      SVU13=CHNBK;                      /* UNIT TEST SAVE AREA */      06560000
         MVC   A00091+76(4),4(@D)                                 0210  06570000
*      R13=ADDR(SVDYN);                  /* DYN SAVE AREA */            06580000
         LA    @D,A00091                                          0211  06590000
*      R15=COMMINT;                      /* ENTRY TO CE COMMUNICATION * 06600000
         L     @F,COMMINT                                         0212  06610000
*      GEN(BALR  R14,R15);               /* LINK TO CE COMMUNICATIONS * 06620000
         BALR  R14,R15                                                  06630000
         DS    0H                                                       06640000
*      R13=SVT13;                        /* NORMAL SAVE AREA */         06650000
         L     @D,A00091+72                                       0214  06660000
*      CHNBK=SVU13;                      /* UNIT TEST SAVE AREA */      06670000
         MVC   4(4,@D),A00091+76                                  0215  06680000
*      GOTO R9;                          /* RETURN TO MAIN FLOW */      06690000
         BCR   15,@9                                              0216  06700000
*    END;                                /* END DYN COMMUNICATE TEST */ 06710000
* TRA002C:                                                              06720000
*  IF TALKPOST='1'B THEN                /* TEST CE TO RE COMM   S20203* 06730000
@9E8     EQU   *                                                  0218  06740000
@9E9     EQU   *                                                  0218  06750000
TRA002C  TM    A00103,B'01000000'                                 0218  06760000
         BC    12,@9E7                                            0218  06770000
*    DO;                                /* CE WANTS TO TALK     S20203* 06780000
*    CENOMSG='1'B;                      /* DON'T SEND ONSITE    S20203* 06790000
         OI    A00093,B'00010000'                                 0220  06800000
*  TALKID=RTALKID;                       /* MSG ID              S20203* 06810000
         MVC   TALKID(8),RTALKID                                  0221  06820000
*    RPTBUF=DEDBUF;                      /* MOVE MSG TO PRTBUFR S20203* 06830000
         L     @C,RTALKBUF                                        0222  06840000
         MVC   RPTBUF(72),0(@C)                                   0222  06850000
         MVI   RPTBUF+72,C' '                                     0222  06860000
         MVC   RPTBUF+73(42),RPTBUF+72                            0222  06870000
*         TRANSMSG='1'B;                 /*                     S20203* 06880000
         OI    A00093,B'00001000'                                 0223  06890000
*    GEN(PWRT  SIZE=72);                /* ISSUE PWRITE         S20203* 06900000
         PWRT  SIZE=72                                                  06910000
         DS    0H                                                       06920000
*         TRANSMSG='0'B;                 /*                     S20203* 06930000
         NI    A00093,B'11100111'                                 0225  06940000
*    CENOMSG='0'B;                      /* ZERO CENOMSG FLAG    S20203* 06950000
*    DEDBUF(1)=' ';                      /* CLEAR DEDBUF        S20203* 06960000
         MVI   0(@C),C' '                                         0227  06970000
*    DEDBUF(2:72)= DEDBUF(1:71);         /*                     S20203* 06980000
         MVC   1(71,@C),0(@C)                                     0228  06990000
*    R1=IFD168;                         /* ADDR OF MSG TO R1    S20203* 07000000
         L     @C,MSGMOD                                          0229  07010000
         L     @1,72(0,@C)                                        0229  07020000
*    BUFAD=RTALKBUF;                    /* ADDR OF RESP BUFFER  S20203* 07030000
         MVC   1(3,@1),RTALKBUF+1                                 0230  07040000
*    LENGTH='48'X;                      /* LENGTH OF BUFFER     S20203* 07050000
         MVI   0(@1),X'48'                                        0231  07060000
*    MECBAD=ADDR(TALKECB);              /* ADDR OF ECB          S20203* 07070000
         LA    @F,TALKECB                                         0232  07080000
         ST    @F,4(0,@1)                                         0232  07090000
*    TALKECB=0;                          /* ZERO ECB            S20203* 07100000
         SR    @F,@F                                              0233  07110000
         ST    @F,TALKECB                                         0233  07120000
*    REMNOMSG='1'B;                     /* DON'T SEND TO RE     S20203* 07130000
         OI    A00093,B'00100000'                                 0234  07140000
*    GEN(PWTOR REG=(1),WAIT=NO);        /* ISSUE WTOR           S20203* 07150000
         PWTOR REG=(1),WAIT=NO                                          07160000
         DS    0H                                                       07170000
*    REMNOMSG='0'B;                     /* ZERO REMNOMSG FLAG   S20203* 07180000
         NI    A00093,B'11011111'                                 0236  07190000
*    END;                               /*                      S20203* 07200000
*  IF REIPOST='1'B THEN                  /* RE WANTS TO TALK    S20203* 07210000
@9E7     TM    A00106,B'01000000'                                 0238  07220000
         BC    12,@9E6                                            0238  07230000
*    DO;                                /* POSTED-GOTO MHR      S20203* 07240000
*      RETRIEVE='1'B;                   /* SET TO RETRIEVE MSG  S20203* 07250000
         OI    A00097,B'00001000'                                 0240  07260000
*      SVT13=R13;                       /*NORMAL SAVE AREA      S20203* 07270000
         ST    @D,A00091+72                                       0241  07280000
*      SVU13=CHNBK;                     /* UNIT TEST SAVE AREA  S20203* 07290000
         MVC   A00091+76(4),4(@D)                                 0242  07300000
*      R13=ADDR(SVDYN);                 /* DYN SAVE AREA        S20203* 07310000
         LA    @D,A00091                                          0243  07320000
*      R15=MHRPTR;                      /* ENTRY TO MSG HANDLER S20203* 07330000
         L     @F,MHRPTR                                          0244  07340000
*      GEN(BALR R14,R15);               /* LINK TO MHR          S20203* 07350000
         BALR R14,R15                                                   07360000
         DS    0H                                                       07370000
*      R13=SVT13;                       /* NORMAL SAVEAREA      S20203* 07380000
         L     @D,A00091+72                                       0246  07390000
*      CHNBK=SVU13;                     /* UNIT TEST SAVEAREA   S20203* 07400000
         MVC   4(4,@D),A00091+76                                  0247  07410000
*      RETRIEVE='0'B;                   /*   ZERO RETRIEVE FLAG S20203* 07420000
         NI    A00097,B'11110111'                                 0248  07430000
*         CESWTR1 = CESWTR1 & 'EF'X;     /* ZERO INFOMSG FLAG    M4502* 07440000
         NI    CESWTR1,X'EF'                                      0249  07450000
*      IF REMERR='1'B THEN              /* CHECK FOR ERROR      S20203* 07460000
         TM    A00093,B'01000000'                                 0250  07470000
*         GOTO TRA002R;                  /*                      M4502* 07480000
         BC    01,TRA002R                                         0251  07490000
*     IF ILLRESP='1'B THEN              /* WAS RESPONSE OKAY    S20203* 07500000
         TM    A00097,B'10000000'                                 0252  07510000
         BC    12,@9E5                                            0252  07520000
*         DO;                           /* NO                   S20203* 07530000
*         ILLRESP='0'B;                 /* ZERO ILLRSP FLAG     S20203* 07540000
         NI    A00097,B'01111111'                                 0254  07550000
*         GOTO TRA002B;                  /* NO CONTINUE         X02008* 07560000
         BC    15,TRA002B                                         0255  07570000
*         END;                           /*                     S20203* 07580000
*      IF EXECANS='1'B THEN             /* DOES REMOTE WANT COM S20203* 07590000
@9E5     TM    A00097,B'01000000'                                 0257  07600000
         BC    12,@9E4                                            0257  07610000
*         DO;                           /* YES                  S20203* 07620000
* TRA002R:                                                              07630000
*         GEN(BAL R9,TRA002A);          /* GOTO CE COMM         S20203* 07640000
TRA002R  BAL R9,TRA002A                                                 07650000
         DS    0H                                                       07660000
*         END;                          /*                      S20203* 07670000
*      END;                             /*                      S20203* 07680000
@9E4     EQU   *                                                  0261  07690000
*         GEN(EJECT);                                                   07700000
@9E6     EQU   *                                                  0262  07710000
         EJECT                                                          07720000
         DS    0H                                                       07730000
* TRA002B:                                                              07740000
*  R8=ADDR(MCT);                         /* MCT ADDRESS */              07750000
TRA002B  LA    @8,MCT                                             0263  07760000
*  SVPMW1=PMW1;                          /* SAVE DATA FROM PARM LIST */ 07770000
         MVC   TMCOM+84(10),0(@3)                                 0264  07780000
*  R4=SV15;                              /* ENTRY POINT ADDRESS */      07790000
         L     @C,4(0,@D)                                         0265  07800000
         L     @4,16(0,@C)                                        0265  07810000
*  IF MIDOLD1¬>'02'X THEN                /* CHECK ENTRY         X02008* 07820000
         CLI   4(@4),X'02'                                        0266  07830000
*    GOTO TRA003;                        /* NEW MODULE INDICATED */     07840000
         BC    12,TRA003                                          0267  07850000
*  SVP1=OLDMAC;                          /* OLD MODULE INDICATORS */    07860000
         MVC   TMCOM+84(2),OLDMAC                                 0268  07870000
*  SVP2=MIDOLD;                          /* STORE OLD MODULE ID */      07880000
         MVC   TMCOM+86(2),4(@4)                                  0269  07890000
*  KNMV=MIDOLD;                          /* OLD MODULE IDENTITY */      07900000
         MVC   TMCOM+66(2),4(@4)                                  0270  07910000
* TRA003:                                                               07920000
*  IF SVPL<'02'X THEN                    /* TEST MACRO LEVEL */         07930000
TRA003   CLI   TMCOM+85,X'02'                                     0271  07940000
*    GOTO TRA025;                        /* LEVEL NOT SUPPORTED */      07950000
         BC    04,TRA025                                          0272  07960000
*  WTOTNM=SVP8;                          /* EIGHT CHARACTER NAME */     07970000
         MVC   TMCOM+4(8),TMCOM+86                                0273  07980000
*  IF P1B0='1'B THEN                     /* TEST CHARACTERS IN NAME */  07990000
         TM    TMCOM+84,B'10000000'                               0274  08000000
*    GOTO TRA004;                        /* EIGHT CHARACTERS IN NAME */ 08010000
         BC    01,TRA004                                          0275  08020000
*  WNM=KNAME;                            /* COMMON PART OF NAME */      08030000
         MVC   TMCOM+4(6),TMCOM+60                                0276  08040000
*  WNAM=SVP2;                            /* VARYING PART OF NAME */     08050000
         MVC   TMCOM+10(2),TMCOM+86                               0277  08060000
* TRA004:                                                               08070000
*  IF WNM=KNAME THEN                     /* TEST MODULE NAME */         08080000
TRA004   CLC   TMCOM+4(6),TMCOM+60                                0278  08090000
         BC    07,@9E3                                            0278  08100000
*    DO;                                 /* OLTEP MODULE */             08110000
*      IF WNAM='40' THEN                 /* TEST FOR MODE MACRO */      08120000
         CLC   TMCOM+10(2),@C9                                    0280  08130000
         BC    07,@9E2                                            0280  08140000
*        DO;                             /* MODE MACRO NOT      Y02008* 08150000
*                                        /* SUPPORTED           Y02008* 08160000
*        R1=IFD229;                      /* PRINT MSG EXPLAININGY02008* 08170000
         L     @C,MSGMOD                                          0282  08180000
         L     @1,148(0,@C)                                       0282  08190000
*        GEN(PWTO  REG=(1));             /* THAT OLT WAS        Y02008* 08200000
         PWTO  REG=(1)                                                  08210000
         DS    0H                                                       08220000
*        GO TO TRA028;                   /* CANCELLED BECAUSE   Y02008* 08230000
         BC    15,TRA028                                          0284  08240000
*        END;                            /* MODE NOT SUPPORTED  Y02008* 08250000
*      IF WNAM='47' THEN                 /* TEST FOR ROUTINE MACRO */   08260000
@9E2     CLC   TMCOM+10(2),@C10                                   0286  08270000
*        GOTO TRA022;                    /* GO TO ROUTINE CODE */       08280000
         BC    08,TRA022                                          0287  08290000
*      IF NPR='1'B THEN                  /* TEST NO PRINT INDICATOR */  08300000
         TM    A00014+2,B'00000100'                               0288  08310000
*        GOTO TRA006;                    /* PRINTING ALLOWED */         08320000
         BC    01,TRA006                                          0289  08330000
*      IF WNAM='08' THEN                 /* TEST OLD DPRINT     X02008* 08340000
         CLC   TMCOM+10(2),@C11                                   0290  08350000
*        GOTO TRA019;                    /* SKIP PRINTING       X02008* 08360000
         BC    08,TRA019                                          0291  08370000
*      IF WNAM='39' THEN                 /* TEST NEW DPRINT     X02008* 08380000
         CLC   TMCOM+10(2),@C12                                   0292  08390000
*        GOTO TRA019;                    /* SKIP PRINTING       X02008* 08400000
         BC    08,TRA019                                          0293  08410000
*      GOTO TRA006;                      /* NO SPECIAL MODULES TO DO */ 08420000
         BC    15,TRA006                                          0294  08430000
*    END;                                /* END OF FREECORE CHECK */    08440000
*  R4=4;                                 /* NA INDICATOR */             08450000
@9E3     LA    @4,4                                               0296  08460000
*  IF MODNN6=KNAME THEN                  /* TEST A PREVIOUS MODULE */   08470000
         CLC   TMCOM+68(6),TMCOM+60                               0297  08480000
*    GOTO TRA005;                        /* ONLY OLTEP MODULES */       08490000
         BC    08,TRA005                                          0298  08500000
*  GEN(DELETE EPLOC=MODNN);              /* DELETE NON-OLTEP MODULE */  08510000
         DELETE EPLOC=MODNN                                             08520000
         DS    0H                                                       08530000
* TRA005:                                                               08540000
*  IF P1B3='1'B THEN                     /* TEST FUNCTION TO PERFORM */ 08550000
TRA005   TM    TMCOM+84,B'00010000'                               0300  08560000
         BC    12,@9E1                                            0300  08570000
*    IF WTOTNM=MODNN THEN                /* DELETION JUST MADE */       08580000
         CLC   TMCOM+4(8),TMCOM+68                                0301  08590000
*      GOTO TRA005A;                     /* CONTINUE */                 08600000
         BC    08,TRA005A                                         0302  08610000
*    ELSE DO;                                                           08620000
*           GEN(DELETE EPLOC=WTOTNM);                                   08630000
         DELETE EPLOC=WTOTNM                                            08640000
         DS    0H                                                       08650000
* TRA005A:                                                              08660000
*           MODNN=KNT;                                                  08670000
TRA005A  MVC   TMCOM+68(8),TMCOM+60                               0305  08680000
*           GOTO TRA019;                 /* RETURN */                   08690000
         BC    15,TRA019                                          0306  08700000
*         END;                                                          08710000
*  ELSE;                                                                08720000
*    GOTO TRA006;                                                       08730000
*  MODNN=WTOTNM;                         /* NON-OLTEP MODULE TO LOAD */ 08740000
         MVC   TMCOM+68(8),TMCOM+4                                0310  08750000
*         GEN(EJECT);                                                   08760000
         EJECT                                                          08770000
         DS    0H                                                       08780000
* TRA006:                                                               08790000
*  IF P1B23='11'B THEN                   /* CHECK BITS           M4506* 08800000
TRA006   TM    TMCOM+84,B'00110000'                               0312  08810000
         BC    12,@9DF                                            0312  08820000
*    SUSDEL='1'B;                        /* SUSPEND DELETION     M4506* 08830000
         OI    A00002,B'00001000'                                 0313  08840000
*  BIN='00'X;                            /* ZERO INDICATOR VALUEX02008* 08850000
@9DF     MVI   TMCOM+76,X'00'                                     0314  08860000
*  BMCT18='00'X;                         /* ZERO OUT INDICATORS X02008* 08870000
         MVI   BMCT18,X'00'                                       0315  08880000
*  R8=ADDR(MCT);                         /* MODULE CONTROL TABLEX02008* 08890000
         LA    @8,MCT                                             0316  08900000
*  HHSIZ=0;                              /* ZERO CORE SIZE REQUEST    * 08910000
         SR    @F,@F                                              0317  08920000
         ST    @F,A00061+12                                       0317  08930000
*  UTSCAL='1'B;                          /* ZERO CORE SIZE      X02008* 08940000
         OI    A00005,B'10000000'                                 0318  08950000
*  WK1BYT='00'X;                         /* ZERO ITEM INDICATOR X02008* 08960000
         MVI   TMCOM+77,X'00'                                     0319  08970000
*  IF P1B0='0'B THEN                     /* TEST NAME SIZE      X02008* 08980000
         TM    TMCOM+84,B'10000000'                               0320  08990000
*    GOTO TRA103;                        /* IFDOLT MODULE ID    X02008* 09000000
         BC    08,TRA103                                          0321  09010000
* /********************************/                                    09020000
* /***   EIGHT CHARACTER NAME   ***/                                    09030000
* /********************************/                                    09040000
*  MOD8='1'B;                            /* EIGHT CHARACTER NAMEX02008* 09050000
         OI    BMCT18,B'00010000'                                 0322  09060000
*  WTOTNM=SVP8;                          /* EIGHT CHARACTER NAMEX02008* 09070000
         MVC   TMCOM+4(8),TMCOM+86                                0323  09080000
*  R8=ADDR(NMCT);                        /* SIMULATE NEW MCT    X02008* 09090000
         LA    @8,A00065+20                                       0324  09100000
*  R5=R8;                                /* NEW ADDRESS TABLE   X02008* 09110000
         LR    @5,@8                                              0325  09120000
*  WK1BYT='01'X;                         /* FIRST NEW MCT ITEM  X02008* 09130000
         MVI   TMCOM+77,X'01'                                     0326  09140000
*  GOTO TRA021;                          /* FIND MODULE         X02008* 09150000
         BC    15,TRA021                                          0327  09160000
* /******************************/                                      09170000
* /***   TWO CHARACTER NAME   ***/                                      09180000
* /******************************/                                      09190000
* TRA103:                                                               09200000
*  WNM=KNAME;                            /* COMMON OLTEP NAME   X02008* 09210000
TRA103   MVC   TMCOM+4(6),TMCOM+60                                0328  09220000
*  WNAM=SVP2;                            /* VARYING PART NAME   X02008* 09230000
         MVC   TMCOM+10(2),TMCOM+86                               0329  09240000
* TRA017:                                                               09250000
*  DO I=1 TO 20;                         /* ITEMS PER MCT       X02008* 09260000
TRA017   LA    @F,1                                               0330  09270000
         ST    @F,I                                               0330  09280000
*    IF WNAM=MNAM(I) THEN                /* TEST FOR MODULE     X02008* 09290000
@DO9DE   L     @C,I                                               0331  09300000
         BCTR  @C,0                                               0331  09310000
         MH    @C,@D1                                             0331  09320000
         LA    @E,10(@C,@8)                                       0331  09330000
         CLC   TMCOM+10(2),0(@E)                                  0331  09340000
         BC    07,@9DA                                            0331  09350000
*      DO;                               /* NAME APPEARS IN MCT X02008* 09360000
*        WK1BYT=I4;                      /* ITEM IN MCT         X02008* 09370000
         MVC   TMCOM+77(1),I+3                                    0333  09380000
*        MB2(I)='0'B;                    /* NOT ACTIVE          X02008* 09390000
         LA    @A,8(@C,@8)                                        0334  09400000
         NI    0(@A),B'10111111'                                  0334  09410000
*        GOTO TRA027;                    /* FIND MODULE         X02008* 09420000
         BC    15,TRA027                                          0335  09430000
*      END;                                                             09440000
*    IF WK1BYT¬='00'X                    /* TEST IF ITEM FOUND  X02008* 09450000
*          |MN1(I)¬='00'X THEN           /* AVAILABLE ITEM TEST X02008* 09460000
@9DA     CLI   TMCOM+77,X'00'                                     0337  09470000
         BC    07,@9D9                                            0337  09480000
         L     @C,I                                               0337  09490000
         BCTR  @C,0                                               0337  09500000
         MH    @C,@D1                                             0337  09510000
         LA    @A,10(@C,@8)                                       0337  09520000
         CLI   0(@A),X'00'                                        0337  09530000
         BC    08,@9D8                                            0337  09540000
*      GOTO TRA018;                      /* ITEM ASSIGNED       X02008* 09550000
         BC    07,TRA018                                          0338  09560000
*    WK1PTR=R8;                          /* ZEROED ITEM IN MCT  X02008* 09570000
@9D8     ST    @8,WK1PTR                                          0339  09580000
*    WK1BYT=I4;                          /* ZEROED ITEM IN MCT  X02008* 09590000
         MVC   TMCOM+77(1),I+3                                    0340  09600000
* TRA018:                                                               09610000
*  END;                                                                 09620000
*  IF MNXT¬=0 THEN                       /* TEST FOR NEXT MCT   X02008* 09630000
TRA018   L     @F,I                                               0341  09640000
         AH    @F,@D2                                             0341  09650000
@DO9DD   ST    @F,I                                               0341  09660000
         CH    @F,@D3                                             0341  09670000
         BC    12,@DO9DE                                          0341  09680000
         SR    @F,@F                                              0342  09690000
         C     @F,4(0,@8)                                         0342  09700000
         BC    08,@9D7                                            0342  09710000
*    DO;                                 /* ANOTHER MCT EXISTS  X02008* 09720000
*      R8=MNXT;                          /* ADDRESS OF NEXT MCT X02008* 09730000
         L     @8,4(0,@8)                                         0344  09740000
*      GOTO TRA017;                      /* RESUME TEST OF MCT  X02008* 09750000
         BC    15,TRA017                                          0345  09760000
*    END;                                                               09770000
*  IF WK1BYT¬='00'X THEN                 /* TEST ITEM INDICATOR X02008* 09780000
@9D7     CLI   TMCOM+77,X'00'                                     0347  09790000
         BC    08,@9D6                                            0347  09800000
*    DO;                                 /* AVAILABLE ITEM      X02008* 09810000
*      R8=WK1PTR;                        /* MCT ADDRESS         X02008* 09820000
         L     @8,WK1PTR                                          0349  09830000
*      R5=ADDR(MCTADS);                  /* MCT ADDRESSES       X02008* 09840000
         LA    @5,128(0,@8)                                       0350  09850000
*      GOTO TRA021;                      /* FIND MODULE         X02008* 09860000
         BC    15,TRA021                                          0351  09870000
*    END;                                                               09880000
*  GEN(EJECT);                                                          09890000
@9D6     EQU   *                                                  0353  09900000
         EJECT                                                          09910000
         DS    0H                                                       09920000
* /*********************************/                                   09930000
* /***   CREATE ADDITIONAL MCT   ***/                                   09940000
* /*********************************/                                   09950000
*  LOSIZ=0;                              /* MINIMUM SIZE ZERO   X02008* 09960000
         SR    @F,@F                                              0354  09970000
         ST    @F,A00061+8                                        0354  09980000
*  HHSIZ=208;                            /* MAXIMUM SIZE REQUESTX02008* 09990000
         LA    @F,208                                             0355  10000000
         ST    @F,A00061+12                                       0355  10010000
*  I4=RID;                               /* ROOT ID BLOCK       X02008* 10020000
         MVC   I+3(1),RID                                         0356  10030000
* TRA018A:                                                              10040000
*  GEN(BAL   R6,TRA040);                 /* GET CORE ROUTINE    X02008* 10050000
TRA018A  BAL   R6,TRA040                                                10060000
         DS    0H                                                       10070000
*  IF AVSEZ¬<HHSIZ THEN                  /* TEST CORE OBTAINED  X02008* 10080000
         L     @F,A00061+12                                       0358  10090000
         C     @F,A00061+4                                        0358  10100000
*    GOTO TRA020;                        /* SUCCESSFUL          X02008* 10110000
         BC    12,TRA020                                          0359  10120000
*  GEN(BAL   R6,TRA041);                 /* FREE CORE           X02008* 10130000
         BAL   R6,TRA041                                                10140000
         DS    0H                                                       10150000
*  IF BMCT2='1'B THEN                    /* TEST ATTEMPTS       X02008* 10160000
         TM    BMCT18,B'01000000'                                 0361  10170000
*    GOTO TRA032A;                       /* SECOND ATTEMPT      X02008* 10180000
         BC    01,TRA032A                                         0362  10190000
*  BMCT1='1'B;                           /* FIRST TRY TO FREE   X02008* 10200000
         OI    BMCT18,B'11000000'                                 0363  10210000
*    BMCT2='1'B;                         /* PREVIOUS ATTEMPT    X02008* 10220000
*  GOTO TRA128;                          /* DELETE MODULES      X02008* 10230000
         BC    15,TRA128                                          0365  10240000
* TRA020:                                                               10250000
*  R7=AVADR;                             /* LOCATION OF CORE    X02008* 10260000
TRA020   L     @7,A00061                                          0366  10270000
*  MNXT=R7;                              /* NEW NEXT MCT        X02008* 10280000
         ST    @7,4(0,@8)                                         0367  10290000
*  R7->MCA=R7->MCA&&R7->MCA;             /* ZERO OUT MCT        X02008* 10300000
         XC    0(208,@7),0(@7)                                    0368  10310000
*  R7->MPRE=R8;                          /* ADDRESS RECORDED    X02008* 10320000
         ST    @8,0(0,@7)                                         0369  10330000
*  R8=R7;                                /* NEW MCT ADDRESS     X02008* 10340000
         LR    @8,@7                                              0370  10350000
*  R5=ADDR(MCTADS);                      /* MCT ADDRESSES       X02008* 10360000
         LA    @5,128(0,@8)                                       0371  10370000
*  WK1BYT='01'X;                         /* FIRST ITEM IN MCT   X02008* 10380000
         MVI   TMCOM+77,X'01'                                     0372  10390000
*  GEN(EJECT);                                                          10400000
         EJECT                                                          10410000
         DS    0H                                                       10420000
* /**********************************/                                  10430000
* /***   PREPARE TO LOAD MODULE   ***/                                  10440000
* /**********************************/                                  10450000
* TRA021:                                                               10460000
*  R0=ADDR(WKAREA);                      /* BLDL LIST           X02008* 10470000
TRA021   LA    @0,TMCOM                                           0374  10480000
*  GEN(BLDL  0,(0));                     /* ISSUE BLDL          X02008* 10490000
         BLDL  0,(0)                                                    10500000
         DS    0H                                                       10510000
*  WK24=WK24&&WK24;                      /* ZERO WORK BYTES     X02008* 10520000
         XC    TMCOM+36(24),TMCOM+36                              0376  10530000
*  IF WR='00'X THEN                      /* TEST FOR MODULE     X02008* 10540000
         CLI   TMCOM+14,X'00'                                     0377  10550000
*    GOTO TRA038;                        /* NO MODULE           X02008* 10560000
         BC    08,TRA038                                          0378  10570000
*  HISIZ=WMSIZ+116;                      /* MODULE SIZE          M4507* 10580000
         LA    @F,116                                             0379  10590000
         MVC   @TEMP2+2(2),TMCOM+29                               0379  10600000
         A     @F,@TEMP2                                          0379  10610000
         STH   @F,A00061+14                                       0379  10620000
*  MMSIZ(WK1BYT)=HISIZ;                  /* MODULE SIZE         X02008* 10630000
         SR    @C,@C                                              0380  10640000
         IC    @C,TMCOM+77                                        0380  10650000
         BCTR  @C,0                                               0380  10660000
         MH    @C,@D1                                             0380  10670000
         LA    @A,12(@C,@8)                                       0380  10680000
         MVC   0(2,@A),A00061+14                                  0380  10690000
*  MNAM(WK1BYT)=WNAM;                    /* NAME INTO MCT       X02008* 10700000
         LA    @A,10(@C,@8)                                       0381  10710000
         MVC   0(2,@A),TMCOM+10                                   0381  10720000
* TRA123:                                                               10730000
*  I4=BHLD;                              /* NEXT BLOCK TO DELETEX02008* 10740000
TRA123   MVC   I+3(1),TMCOM+79                                    0382  10750000
*  BHB='00'X;                            /* FIRST PASS          X02008* 10760000
         MVI   TMCOM+78,X'00'                                     0383  10770000
*  IF HISIZ<662 THEN                                                    10780000
         CLC   A00061+14(2),@D4                                   0384  10790000
         BC    10,@9D5                                            0384  10800000
*    HISIZ=662;                                                         10810000
         MVC   A00061+14(2),@D4                                   0385  10820000
* TRA023A:                                                              10830000
*  LOSIZ=0;                              /* LOWEST MINIMUM SIZE X02008* 10840000
@9D5     EQU   *                                                  0386  10850000
TRA023A  SR    @F,@F                                              0386  10860000
         ST    @F,A00061+8                                        0386  10870000
*  IF BHB='01'X THEN                                                    10880000
         CLI   TMCOM+78,X'01'                                     0387  10890000
*    GOTO TRA023B;                                                      10900000
         BC    08,TRA023B                                         0388  10910000
*  IF BHB='03'X THEN                                                    10920000
         CLI   TMCOM+78,X'03'                                     0389  10930000
*    GOTO TRA023F;                       /*                      M4507* 10940000
         BC    08,TRA023F                                         0390  10950000
*  GEN(BAL   R6,TRA040);                 /* LINK TO OBTAIN CORE X02008* 10960000
         BAL   R6,TRA040                                                10970000
         DS    0H                                                       10980000
*  IF AVSIZ<HISIZ THEN                   /* TEST MODULE SIZE    X02008* 10990000
         CLC   A00061+6(2),A00061+14                              0392  11000000
*    GOTO TRA027A;                       /* MODULE TOO LARGE    X02008* 11010000
         BC    04,TRA027A                                         0393  11020000
*  BHB='01'X;                                                           11030000
         MVI   TMCOM+78,X'01'                                     0394  11040000
*  GAVL1=GAVL;                                                          11050000
         MVC   TMCOM+52(8),TMCOM+36                               0395  11060000
* TRA023B:                                                              11070000
*  GEN(BAL   R6,TRA040);                                                11080000
TRA023B  BAL   R6,TRA040                                                11090000
         DS    0H                                                       11100000
*  IF AVSIZ<HISIZ THEN                                                  11110000
         CLC   A00061+6(2),A00061+14                              0397  11120000
*    GOTO TRA027A;                                                      11130000
         BC    04,TRA027A                                         0398  11140000
*  BHB='02'X;                                                           11150000
         MVI   TMCOM+78,X'02'                                     0399  11160000
*  GEN(BAL   R6,TRA041);                                                11170000
         BAL   R6,TRA041                                                11180000
         DS    0H                                                       11190000
* TRA023C:                                                              11200000
*  GAVL=GAVL1;                                                          11210000
TRA023C  MVC   TMCOM+36(8),TMCOM+52                               0401  11220000
*  GEN(BAL   R6,TRA041);                                                11230000
         BAL   R6,TRA041                                                11240000
         DS    0H                                                       11250000
*  IF BHB='02'X THEN                                                    11260000
         CLI   TMCOM+78,X'02'                                     0403  11270000
*    GOTO TRA023E;                                                      11280000
         BC    08,TRA023E                                         0404  11290000
* TRA023D:                                                              11300000
*  BHB='03'X;                                                           11310000
TRA023D  MVI   TMCOM+78,X'03'                                     0405  11320000
*  GEN(BAL   R6,TRA044);                 /* GET LOAD WORK AREA  X02008* 11330000
         BAL   R6,TRA044                                                11340000
         DS    0H                                                       11350000
*  HISIZ=HISIZ+662;                                                     11360000
         LA    @F,662                                             0407  11370000
         MVC   @TEMP2+2(2),A00061+14                              0407  11380000
         A     @F,@TEMP2                                          0407  11390000
         STH   @F,A00061+14                                       0407  11400000
* TRA023F:                               /*                      M4507* 11410000
*  GEN(BAL   R6,TRA040);                                                11420000
TRA023F  BAL   R6,TRA040                                                11430000
         DS    0H                                                       11440000
*  IF AVSIZ<HISIZ THEN                                                  11450000
         CLC   A00061+6(2),A00061+14                              0409  11460000
*    GOTO TRA027A;                                                      11470000
         BC    04,TRA027A                                         0410  11480000
*  GEN(BAL   R6,TRA041);                                                11490000
         BAL   R6,TRA041                                                11500000
         DS    0H                                                       11510000
*  GEN(BAL   R6,TRA043);                 /* FREE WORK AREA      X02008* 11520000
         BAL   R6,TRA043                                                11530000
         DS    0H                                                       11540000
*         GEN(EJECT);                                                   11550000
         EJECT                                                          11560000
         DS    0H                                                       11570000
* /***********************/                                             11580000
* /***   LOAD MODULE   ***/                                             11590000
* /***********************/                                             11600000
* TRA023E:                                                              11610000
*  R0=ADDR(WITEM);                       /* MODULE NAME         X02008* 11620000
TRA023E  LA    @0,TMCOM+4                                         0414  11630000
*  GEN(LOAD  EPLOC=(0));                 /* LOAD MODULE         X02008* 11640000
         LOAD  EPLOC=(0)                                                11650000
         DS    0H                                                       11660000
*  WK1PTR=R0;                            /* MODULE ENTRY POINT  X02008* 11670000
         ST    @0,WK1PTR                                          0416  11680000
*  I=(R0/2048);                          /* BLOCK ID ASSIGNED   X02008* 11690000
         LR    @E,@0                                              0417  11700000
         SRA   @E,11                                              0417  11710000
         ST    @E,I                                               0417  11720000
*  IF I4='00'X THEN                      /* TEST BLOCK ID       X02008* 11730000
         CLI   I+3,X'00'                                          0418  11740000
         BC    07,@9D4                                            0418  11750000
*    I4='01'X;                           /* ASSIGN NEXT ID      X02008* 11760000
         MVI   I+3,X'01'                                          0419  11770000
*  MNM2(WK1BYT)=I4;                      /* BLOCK ASSIGNMENT ID X02008* 11780000
@9D4     SR    @C,@C                                              0420  11790000
         IC    @C,TMCOM+77                                        0420  11800000
         BCTR  @C,0                                               0420  11810000
         MH    @C,@D1                                             0420  11820000
         LA    @A,9(@C,@8)                                        0420  11830000
         MVC   0(1,@A),I+3                                        0420  11840000
*  MB2(WK1BYT)='1'B;                     /* MODULE IN CORE      X02008* 11850000
         LA    @A,8(@C,@8)                                        0421  11860000
         OI    0(@A),B'01000000'                                  0421  11870000
*  TADR(WK1BYT)=WK1PTR;                  /* MODULE ADDRESS      X02008* 11880000
         L     @F,WK1PTR                                          0422  11890000
         SR    @C,@C                                              0422  11900000
         IC    @C,TMCOM+77                                        0422  11910000
         BCTR  @C,0                                               0422  11920000
         SLA   @C,2                                               0422  11930000
         ST    @F,0(@C,@5)                                        0422  11940000
*  IF I4='FF'X THEN                      /* TEST BLOCK ID       X02008* 11950000
         CLI   I+3,X'FF'                                          0423  11960000
         BC    07,@9D3                                            0423  11970000
*    I4='00'X;                           /* PREPARE LOWEST ID   X02008* 11980000
         MVI   I+3,X'00'                                          0424  11990000
*  I=I+1;                                /* NEXT BLOCK ID       X02008* 12000000
@9D3     LA    @F,1                                               0425  12010000
         A     @F,I                                               0425  12020000
         ST    @F,I                                               0425  12030000
*  BHLD=I4;                              /* NEXT BLOCK TO DELETEX02008* 12040000
         MVC   TMCOM+79(1),I+3                                    0426  12050000
* TRA125:                                                               12060000
*  R4=WK1PTR;                            /* ADDRESS FOR REG 15  X02008* 12070000
TRA125   L     @4,WK1PTR                                          0427  12080000
*  IF P1B23¬='00'B THEN                  /* CHECK INDICATORS    X02008* 12090000
         TM    TMCOM+84,B'00110000'                               0428  12100000
*    GOTO TRA016;                        /* RETURN TO CALLER    X02008* 12110000
         BC    05,TRA016                                          0429  12120000
* /***********************************/                                 12130000
* /***   BRANCH TO CALLED MODULE   ***/                                 12140000
* /***********************************/                                 12150000
* TRA013:                                                               12160000
*  R13=CHNBK;                            /* SAVE AREA OF CALLER X02008* 12170000
TRA013   L     @D,4(0,@D)                                         0430  12180000
*  GEN(L     R14,12(R13));               /* RESTORE REG 14      X02008* 12190000
         L     R14,12(R13)                                              12200000
         DS    0H                                                       12210000
*  R15=R4;                               /* RESTORE REG 15      X02008* 12220000
         LR    @F,@4                                              0432  12230000
*  GEN(LM    R0,R12,20(R13));            /* RESTORE REGS        X02008* 12240000
         LM    R0,R12,20(R13)                                           12250000
         DS    0H                                                       12260000
*  GOTO R15;                             /* GO TO MODULE        X02008* 12270000
         BCR   15,@F                                              0434  12280000
* /****************************/                                        12290000
* /***   RETURN TO CALLER   ***/                                        12300000
* /****************************/                                        12310000
* TRA019:                                                               12320000
*  R4=0;                                 /* RETURN CODE         X02008* 12330000
TRA019   SR    @4,@4                                              0435  12340000
* TRA016:                                                               12350000
*  SUSDEL='0'B;                          /* ZERO OUT BIT        X02008* 12360000
TRA016   NI    A00002,B'11110111'                                 0436  12370000
*  R13=CHNBK;                            /* CALLER SAVE AREA */         12380000
         L     @D,4(0,@D)                                         0437  12390000
*  GEN(L     R14,12(R13));               /* RESTORE REG 14 */           12400000
         L     R14,12(R13)                                              12410000
         DS    0H                                                       12420000
*  R15=R4;                               /* REG 15 VALUE */             12430000
         LR    @F,@4                                              0439  12440000
*  GEN(LM    R0,R12,20(R13));            /* RESTORE REGS 0 THRU 12 */   12450000
         LM    R0,R12,20(R13)                                           12460000
         DS    0H                                                       12470000
*  GOTO R14;                             /* RETURN */                   12480000
         BCR   15,@E                                              0441  12490000
*         GEN(EJECT);                                                   12500000
         EJECT                                                          12510000
         DS    0H                                                       12520000
* /**************************************/                              12530000
* /***   TRACE OR RETURN CODE SETUP   ***/                              12540000
* /**************************************/                              12550000
* TRA012D:                               /* RETURN OR TRACE TESTX02008* 12560000
*  IF TRACE='1'B THEN                    /* CHECK FOR TRACE     X02008* 12570000
TRA012D  TM    A00014+36,B'00000100'                              0443  12580000
*    GOTO TRA012F;                       /* TRACE REQUESTED     X02008* 12590000
         BC    01,TRA012F                                         0444  12600000
*  IF CLEANUP='0'B&                      /* CHECK FOR NO CLEANUPX02008* 12610000
*    RTMASK¬='00'X THEN                  /* CHECK RETURN MASK   X02008* 12620000
         TM    A00014+33,B'00000100'                              0445  12630000
         BC    05,@9D2                                            0445  12640000
         CLI   70(@2),X'00'                                       0445  12650000
         BC    08,@9D1                                            0445  12660000
*      DO;                               /* RETURN CODE SET UP  X02008* 12670000
* TRA012F:                               /* PREPARE RETURN      X02008* 12680000
*        IF BRIDB14='0000'B THEN         /* CHECK MACRO         X02008* 12690000
TRA012F  TM    BRID,B'11110000'                                   0447  12700000
         BC    05,@9D0                                            0447  12710000
*          DO;                           /* NEW MACRO CALL      X02008* 12720000
*            RTMCID=PLID;                /* MACRO ID            X02008* 12730000
         MVC   RETMSG+21(2),2(@3)                                 0449  12740000
*            GOTO TRA012G;               /* SKIP STATEMENTS     X02008* 12750000
         BC    15,TRA012G                                         0450  12760000
*          END;                          /* END MACRO CHECK     X02008* 12770000
*        RTMCID=BRID;                    /* OLD MACRO ID        X02008* 12780000
@9D0     MVC   RETMSG+21(2),BRID                                  0452  12790000
*        RTNM14(2:4)=RTNM14(1:3);        /* CLEAR ROUTINE NUM   X02008* 12800000
         MVC   RETMSG+14(3),RETMSG+13                             0453  12810000
* TRA012G:                                                              12820000
*        UTRET=R5;                       /* SAVE UTS RETURN     X02008* 12830000
TRA012G  ST    @5,UTRET                                           0454  12840000
*        SVR14=ADDR(TRA130);             /* RETURN CODE HANDLER X02008* 12850000
         LA    @F,TRA130                                          0455  12860000
         L     @C,4(0,@D)                                         0455  12870000
         ST    @F,12(0,@C)                                        0455  12880000
*      END;                              /* END CHECK           X02008* 12890000
*  UTSCAL='0'B;                          /* UTS CALL            X02008* 12900000
@9D1     EQU   *                                                  0457  12910000
@9D2     NI    A00005,B'01111111'                                 0457  12920000
*  GOTO R9;                              /* RETURN TO MAIN FLOW X02008* 12930000
         BCR   15,@9                                              0458  12940000
* /*************************************/                               12950000
* /***   MODULE ID RECORDED IN MCT   ***/                               12960000
* /*************************************/                               12970000
* TRA027:                                                               12980000
*  IF SUSDEL='1'B THEN                   /* CHECK INDICATOR     X02008* 12990000
TRA027   TM    A00002,B'00001000'                                 0459  13000000
*    GOTO TRA019;                        /* SUSPEND DELETION    X02008* 13010000
         BC    01,TRA019                                          0460  13020000
*  IF P1B3='1'B THEN                     /* CHECK FUNCTION      X02008* 13030000
         TM    TMCOM+84,B'00010000'                               0461  13040000
         BC    12,@9CF                                            0461  13050000
*    DO;                                 /* DELETE FUNCTION     X02008* 13060000
*      IF MB1(WK1BYT)='1'B THEN          /*IS THIS MODULE PER- X03008*/ 13070000
         SR    @C,@C                                              0463  13080000
         IC    @C,TMCOM+77                                        0463  13090000
         BCTR  @C,0                                               0463  13100000
         MH    @C,@D1                                             0463  13110000
         LA    @A,8(@C,@8)                                        0463  13120000
         TM    0(@A),B'10000000'                                  0463  13130000
*                                        /* MANENTLY RESIDENT. X03008*/ 13140000
*        GO TO TRA019;                   /* YES, BYPASS DELETE X03008*/ 13150000
         BC    01,TRA019                                          0464  13160000
*                                        /* REQUEST.           X03008*/ 13170000
*      GEN(DELETE EPLOC=WTOTNM);         /* DELETE MODULE       X02008* 13180000
         DELETE EPLOC=WTOTNM                                            13190000
         DS    0H                                                       13200000
*      TITEM(WK1BYT)=0;                  /* ZERO ADDRESS        X02008* 13210000
         SR    @F,@F                                              0466  13220000
         SR    @C,@C                                              0466  13230000
         IC    @C,TMCOM+77                                        0466  13240000
         BCTR  @C,0                                               0466  13250000
         SLA   @C,2                                               0466  13260000
         ST    @F,128(@C,@8)                                      0466  13270000
*      MNM2(WK1BYT)='00'X;               /* BLOCK ID            X02008* 13280000
         SR    @C,@C                                              0467  13290000
         IC    @C,TMCOM+77                                        0467  13300000
         BCTR  @C,0                                               0467  13310000
         MH    @C,@D1                                             0467  13320000
         LA    @A,9(@C,@8)                                        0467  13330000
         MVI   0(@A),X'00'                                        0467  13340000
*      GOTO TRA019;                      /* RETURN              X02008* 13350000
         BC    15,TRA019                                          0468  13360000
*    END;                                /* END CHECKING        X02008* 13370000
*  IF TITEM(WK1BYT)¬=0 THEN              /* TEST MODULE IN CORE X02008* 13380000
@9CF     SR    @F,@F                                              0470  13390000
         SR    @C,@C                                              0470  13400000
         IC    @C,TMCOM+77                                        0470  13410000
         BCTR  @C,0                                               0470  13420000
         SLA   @C,2                                               0470  13430000
         C     @F,128(@C,@8)                                      0470  13440000
         BC    08,@9CE                                            0470  13450000
*    DO;                                 /* MODULE IN CORE      X02008* 13460000
*      WK1PTR=TITEM(WK1BYT);             /* ADDRESS OF MODULE   X02008* 13470000
         L     @F,128(@C,@8)                                      0472  13480000
         ST    @F,WK1PTR                                          0472  13490000
*      MB2(WK1BYT)='1'B;                 /* MODULE ACTIVE       X02008* 13500000
         SR    @C,@C                                              0473  13510000
         IC    @C,TMCOM+77                                        0473  13520000
         BCTR  @C,0                                               0473  13530000
         MH    @C,@D1                                             0473  13540000
         LA    @A,8(@C,@8)                                        0473  13550000
         OI    0(@A),B'01000000'                                  0473  13560000
*      GOTO TRA125;                      /* GO TO MODULE        X02008* 13570000
         BC    15,TRA125                                          0474  13580000
*    END;                                                               13590000
*  HISIZ=MMSIZ(WK1BYT)+48;               /* MAXIMUM REQUEST     X02008* 13600000
@9CE     LA    @F,48                                              0476  13610000
         SR    @C,@C                                              0476  13620000
         IC    @C,TMCOM+77                                        0476  13630000
         BCTR  @C,0                                               0476  13640000
         MH    @C,@D1                                             0476  13650000
         LA    @A,12(@C,@8)                                       0476  13660000
         MVC   @TEMP2+2(2),0(@A)                                  0476  13670000
         A     @F,@TEMP2                                          0476  13680000
         STH   @F,A00061+14                                       0476  13690000
*  R5=ADDR(MCTADS);                      /* MCT ADDRESSES       X02008* 13700000
         LA    @5,128(0,@8)                                       0477  13710000
*  GOTO TRA123;                          /* CHECK FOR SIZE      X02008* 13720000
         BC    15,TRA123                                          0478  13730000
*  GEN(EJECT);                                                          13740000
         EJECT                                                          13750000
         DS    0H                                                       13760000
* /********************************/                                    13770000
* /***   DELETE OLTEP MODULES   ***/                                    13780000
* /********************************/                                    13790000
* TRA027A:                                                              13800000
*  GEN(BAL   R6,TRA041);                 /* LINK TO FREE CORE   X02008* 13810000
TRA027A  BAL   R6,TRA041                                                13820000
         DS    0H                                                       13830000
* TRA128:                                                               13840000
*  BMCT4='0'B;                           /* NO DELETIONS        X02008* 13850000
TRA128   NI    BMCT18,B'11110111'                                 0481  13860000
* TRA029:                                                               13870000
*  SAVR8=R8;                             /* SAVE REG 8 VALUE    X02008* 13880000
TRA029   ST    @8,SAVR8                                           0482  13890000
* TRA030:                                                               13900000
*  R8=ADDR(MCT);                         /* MCT ADDRESS         X02008* 13910000
TRA030   LA    @8,MCT                                             0483  13920000
* TRA031:                                                               13930000
*  DO R4=20 TO 1 BY -1;                  /* ITEMS IN MCT        X02008* 13940000
TRA031   LA    @4,20                                              0484  13950000
*    IF UTSCAL='0'B THEN                 /* TEST IF UTS CALL    X02008* 13960000
@DO9CD   TM    A00005,B'10000000'                                 0485  13970000
         BC    05,@9C9                                            0485  13980000
*      DO;                               /* CALL FROM UTS       X02008* 13990000
*        MB2(R4)='0'B;                   /* NOT ACTIVE FOR UTS  X02008* 14000000
         LR    @C,@4                                              0487  14010000
         BCTR  @C,0                                               0487  14020000
         MH    @C,@D1                                             0487  14030000
         LA    @A,8(@C,@8)                                        0487  14040000
         NI    0(@A),B'10111111'                                  0487  14050000
*        GOTO TRA032;                    /* ZERO ALL ACTIVE BITSX02008* 14060000
         BC    15,TRA032                                          0488  14070000
*      END;                              /* END OF BIT UPDATE   X02008* 14080000
*    IF MNM2(R4)=I4                      /* TEST FOR BLOCK ID   X02008* 14090000
*          &MB1(R4)='0'B                 /* TEST NO DELETE BIT  X02008* 14100000
*          &MB2(R4)='0'B THEN            /* TEST ACTIVE FOR UTS X02008* 14110000
@9C9     LR    @C,@4                                              0490  14120000
         BCTR  @C,0                                               0490  14130000
         MH    @C,@D1                                             0490  14140000
         LA    @A,9(@C,@8)                                        0490  14150000
         CLC   0(1,@A),I+3                                        0490  14160000
         BC    07,@9C8                                            0490  14170000
         LA    @A,8(@C,@8)                                        0490  14180000
         TM    0(@A),B'10000000'                                  0490  14190000
         BC    05,@9C7                                            0490  14200000
         TM    0(@A),B'01000000'                                  0490  14210000
         BC    05,@9C6                                            0490  14220000
*      DO;                               /* DELETE MODULE OK    X02008* 14230000
*        KNMV=MNAM(R4);                  /* VARYING PART OF NAMEX02008* 14240000
         LA    @E,10(@C,@8)                                       0492  14250000
         MVC   TMCOM+66(2),0(@E)                                  0492  14260000
*        IF LOGADR¬=0 THEN               /* CHECK LOGSCAN       X02008* 14270000
         SR    @F,@F                                              0493  14280000
         C     @F,LOGADR                                          0493  14290000
         BC    08,@9C5                                            0493  14300000
*          DO;                           /* LOGSCAN ACTIVE      X02008* 14310000
*            IF KNMV='26' THEN           /* LOGSCAN ID          X02008* 14320000
         CLC   TMCOM+66(2),@C18                                   0495  14330000
*              GOTO TRA032;              /* SKIP DELETIONS      X02008* 14340000
         BC    08,TRA032                                          0496  14350000
*            IF KNMV='46' THEN           /* EXTRACTOR ID        X02008* 14360000
         CLC   TMCOM+66(2),@C19                                   0497  14370000
*              GOTO TRA032;              /* SKIP DELETIONS      X02008* 14380000
         BC    08,TRA032                                          0498  14390000
*          END;                          /* DELETE MODULES      X02008* 14400000
*        MNM2(R4)='00'X;                 /* ZERO OUT BLOCK ID   X02008* 14410000
@9C5     LR    @C,@4                                              0500  14420000
         BCTR  @C,0                                               0500  14430000
         MH    @C,@D1                                             0500  14440000
         LA    @A,9(@C,@8)                                        0500  14450000
         MVI   0(@A),X'00'                                        0500  14460000
*        R0=ADDR(KNT);                   /* MODULE NAME         X02008* 14470000
         LA    @0,TMCOM+60                                        0501  14480000
*        GEN(DELETE EPLOC=(0));          /* DELETE MODULE       X02008* 14490000
         DELETE EPLOC=(0)                                               14500000
         DS    0H                                                       14510000
*        TITEM(R4)=0;                    /* MODULE NOT IN CORE  X02008* 14520000
         SR    @F,@F                                              0503  14530000
         LR    @C,@4                                              0503  14540000
         BCTR  @C,0                                               0503  14550000
         SLA   @C,2                                               0503  14560000
         ST    @F,128(@C,@8)                                      0503  14570000
*        BMCT4='1'B;                     /* INDICATE DELETIONS  X02008* 14580000
         OI    BMCT18,B'00001000'                                 0504  14590000
*      END;                              /* END UPDATING MODULE X02008* 14600000
* TRA032:                                                               14610000
*  END;                                  /* COMPLETE MCT TESTED X02008* 14620000
@9C6     EQU   *                                                  0506  14630000
@9C7     EQU   *                                                  0506  14640000
@9C8     EQU   *                                                  0506  14650000
*  R8=MNXT;                              /* NEXT MCT IF ANY     X02008* 14660000
TRA032   BCT   @4,@DO9CD                                          0506  14670000
         L     @8,4(0,@8)                                         0507  14680000
*  IF R8¬=0 THEN                         /* TEST NEXT MCT       X02008* 14690000
         LTR   @8,@8                                              0508  14700000
*    GOTO TRA031;                        /* TEST NEXT MCT       X02008* 14710000
         BC    07,TRA031                                          0509  14720000
*  R8=SAVR8;                             /* RESTORE REG 8 VALUE X02008* 14730000
         L     @8,SAVR8                                           0510  14740000
*  GEN(EJECT);                                                          14750000
         EJECT                                                          14760000
         DS    0H                                                       14770000
* /*******************************/                                     14780000
* /***   RETURN TO MAIN FLOW   ***/                                     14790000
* /*******************************/                                     14800000
*  IF UTSCAL='0'B THEN                   /* TEST FIRST UTS CALL X02008* 14810000
         TM    A00005,B'10000000'                                 0512  14820000
*    GOTO R9;                            /* CALL FROM UTS       X02008* 14830000
         BCR   08,@9                                              0513  14840000
*  IF I4=BHLD THEN                       /* TEST BLOCK ID       X02008* 14850000
         CLC   I+3(1),TMCOM+79                                    0514  14860000
         BC    07,@9C4                                            0514  14870000
*    BIN=BIN+1;                          /* BLOCK COUNT STARTS  X02008* 14880000
         LA    @F,1                                               0515  14890000
         SR    @0,@0                                              0515  14900000
         IC    @0,TMCOM+76                                        0515  14910000
         AR    @F,@0                                              0515  14920000
         STC   @F,TMCOM+76                                        0515  14930000
*  I=I+1;                                /* NEXT BLOCK ID       X02008* 14940000
@9C4     LA    @F,1                                               0516  14950000
         A     @F,I                                               0516  14960000
         ST    @F,I                                               0516  14970000
*  IF I4='00'X THEN                      /* TEST FOR VALID ID   X02008* 14980000
         CLI   I+3,X'00'                                          0517  14990000
         BC    07,@9C3                                            0517  15000000
*    I4='01'X;                           /* LOWEST VALID ID     X02008* 15010000
         MVI   I+3,X'01'                                          0518  15020000
*  IF BMCT4='0'B&                        /* NO DELETIONS MADE   X02008* 15030000
*    BIN¬>'02'X THEN                     /* INCOMPLETE PASS      M4506* 15040000
@9C3     TM    BMCT18,B'00001000'                                 0519  15050000
         BC    05,@9C2                                            0519  15060000
         CLI   TMCOM+76,X'02'                                     0519  15070000
*      GOTO TRA030;                      /* DELETE NEXT BLOCK   X02008* 15080000
         BC    13,TRA030                                          0520  15090000
*  IF BMCT1='1'B THEN                    /* TEST REQUEST        X02008* 15100000
@9C1     EQU   *                                                  0521  15110000
@9C2     TM    BMCT18,B'10000000'                                 0521  15120000
*    GOTO TRA018A;                       /* MCT CORE REQUEST    X02008* 15130000
         BC    01,TRA018A                                         0522  15140000
*  IF BMCT4='1'B THEN                    /* TEST DELETION BIT   X02008* 15150000
         TM    BMCT18,B'00001000'                                 0523  15160000
*    GOTO TRA023A;                       /* DELETIONS MADE      X02008* 15170000
         BC    01,TRA023A                                         0524  15180000
*  IF BIN¬>'02'X THEN                    /* TEST DELETIONS       M4506* 15190000
         CLI   TMCOM+76,X'02'                                     0525  15200000
*    GOTO TRA030;                        /* DELETE MORE MODULES X02008* 15210000
         BC    12,TRA030                                          0526  15220000
*  IF BHB='00'X THEN                                                    15230000
         CLI   TMCOM+78,X'00'                                     0527  15240000
*    GOTO TRA023D;                                                      15250000
         BC    08,TRA023D                                         0528  15260000
*  IF BHB='01'X THEN                                                    15270000
         CLI   TMCOM+78,X'01'                                     0529  15280000
*    GOTO TRA023C;                                                      15290000
         BC    08,TRA023C                                         0530  15300000
*  GEN(BAL   R6,TRA043);                 /* FREE WORK AREA      X02008* 15310000
         BAL   R6,TRA043                                                15320000
         DS    0H                                                       15330000
* /***************************/                                         15340000
* /***   NOT ENOUGH CORE   ***/                                         15350000
* /***************************/                                         15360000
* TRA032A:                                                              15370000
*  R1=IFD160;                            /* INSUFFICIENT CORE   X02008* 15380000
TRA032A  L     @C,MSGMOD                                          0532  15390000
         L     @1,56(0,@C)                                        0532  15400000
* TRA024A:                                                              15410000
*  GEN(PWTO  REG=(1));                   /* ISSUE A WTO         X02008* 15420000
TRA024A  PWTO  REG=(1)                                                  15430000
         DS    0H                                                       15440000
* TRA025:                                                               15450000
*  R4=4;                                 /* MODULE NOT AVAILABLEX02008* 15460000
TRA025   LA    @4,4                                               0534  15470000
*  GOTO TRA016;                          /* RETURN TO CALLER    X02008* 15480000
         BC    15,TRA016                                          0535  15490000
* TRA038:                                                               15500000
*  IF MOD8='1'B THEN                     /* TEST MODULE NAME    X02008* 15510000
TRA038   TM    BMCT18,B'00010000'                                 0536  15520000
         BC    12,@9C0                                            0536  15530000
*    MODNN=KNT;                          /* NON OLTEP MODULE    X02008* 15540000
         MVC   TMCOM+68(8),TMCOM+60                               0537  15550000
*  GOTO TRA025;                          /* MODULE NOT FOUND    X02008* 15560000
         BC    15,TRA025                                          0538  15570000
* /*****************************************/                           15580000
* /***   GETMAIN AND FREEMAIN ROUTINES   ***/                           15590000
* /*****************************************/                           15600000
* TRA040:                                                               15610000
*  GAVL=GAVL&&GAVL;                      /* ZERO OUT WORK AREA  X02008* 15620000
TRA040   XC    TMCOM+36(8),TMCOM+36                               0539  15630000
*  IF HHSIZ=0 THEN                       /* TEST SIZE           X02008* 15640000
         SR    @F,@F                                              0540  15650000
         C     @F,A00061+12                                       0540  15660000
*    GOTO R6;                            /* SIZE IS ZERO        X02008* 15670000
         BCR   08,@6                                              0541  15680000
*  GEN(GETMAIN VC,LA=GSIZS,A=GAVL);      /* GET AVAILABLE CORE  X02008* 15690000
         GETMAIN VC,LA=GSIZS,A=GAVL                                     15700000
         DS    0H                                                       15710000
*  GOTO R6;                              /* BRANCH BACK         X02008* 15720000
         BCR   15,@6                                              0543  15730000
* TRA041:                                                               15740000
*  IF AVSEZ=0 THEN                       /* TEST SIZE           X02008* 15750000
TRA041   SR    @F,@F                                              0544  15760000
         C     @F,A00061+4                                        0544  15770000
*    GOTO R6;                            /* MISSING VALUE       X02008* 15780000
         BCR   08,@6                                              0545  15790000
*  IF AVADR=0 THEN                       /* TEST ADDRESS        X02008* 15800000
         C     @F,A00061                                          0546  15810000
*    GOTO R6;                            /* MISSING VALUE       X02008* 15820000
         BCR   08,@6                                              0547  15830000
*  GEN(FREEMAIN V,A=GAVL);               /* FREE OBTAINED CORE  X02008* 15840000
         FREEMAIN V,A=GAVL                                              15850000
         DS    0H                                                       15860000
*  GAVL=GAVL&&GAVL;                      /* ZERO OUT WORK AREA  X02008* 15870000
         XC    TMCOM+36(8),TMCOM+36                               0549  15880000
*  GOTO R6;                              /* BRANCH BACK         X02008* 15890000
         BCR   15,@6                                              0550  15900000
* TRA043:                                                               15910000
*  AVADR=GTCOR;                          /* GOTTEN CORE ADDRESS X02008* 15920000
TRA043   MVC   A00061(4),TMCOM+80                                 0551  15930000
*  IF GTCOR=0 THEN                       /* TEST SIZE           X02008* 15940000
         SR    @F,@F                                              0552  15950000
         C     @F,TMCOM+80                                        0552  15960000
*    GOTO R6;                            /* MISSING VALUE       X02008* 15970000
         BCR   08,@6                                              0553  15980000
*  GEN(FREEMAIN E,LV=656,A=AVADR);       /* FREE CORE           X02008* 15990000
         FREEMAIN E,LV=656,A=AVADR                                      16000000
         DS    0H                                                       16010000
*  GTCOR=0;                              /* NO CORE             X02008* 16020000
         SR    @F,@F                                              0555  16030000
         ST    @F,TMCOM+80                                        0555  16040000
*  GOTO R6;                              /* BRANCH BACK         X02008* 16050000
         BCR   15,@6                                              0556  16060000
* TRA044:                                                               16070000
*  AVADR=0;                              /* NO CORE             X02008* 16080000
TRA044   SR    @F,@F                                              0557  16090000
         ST    @F,A00061                                          0557  16100000
*  GEN(GETMAIN EC,LV=656,A=AVADR);       /* OBTAIN CORE         X02008* 16110000
         GETMAIN EC,LV=656,A=AVADR                                      16120000
         DS    0H                                                       16130000
*  IF R15¬=0 THEN                        /* TEST CONDITION CODE X02008* 16140000
         LTR   @F,@F                                              0559  16150000
         BC    08,@9BF                                            0559  16160000
*    AVADR=0;                            /* NOT SUCCESSFUL      X02008* 16170000
         SR    @F,@F                                              0560  16180000
         ST    @F,A00061                                          0560  16190000
*  GTCOR=AVADR;                          /* SAVE CORE ADDRESS   X02008* 16200000
@9BF     MVC   TMCOM+80(4),A00061                                 0561  16210000
*  GOTO R6;                              /* BRANCH BACK         X02008* 16220000
         BCR   15,@6                                              0562  16230000
*    GEN(EJECT);                                                        16240000
         EJECT                                                          16250000
         DS    0H                                                       16260000
* /***************************/                                         16270000
* /***   ROUTINE HANDLER   ***/                                         16280000
* /***************************/                                         16290000
* TRA022:                                                               16300000
*  SVR14=R5;                             /* UTS RETURN ADDRESS  X02008* 16310000
TRA022   L     @C,4(0,@D)                                         0564  16320000
         ST    @5,12(0,@C)                                        0564  16330000
*  RTMASK='00'X;                         /* CLEAR RETURN MASK   X02008* 16340000
         MVI   70(@2),X'00'                                       0565  16350000
*  IF SVPL>'02'X THEN                    /* CHECK MACRO LEVEL */        16360000
         CLI   TMCOM+85,X'02'                                     0566  16370000
*    GOTO TRA025;                        /* LEVEL NOT SUPPORTED */      16380000
         BC    02,TRA025                                          0567  16390000
*  R4=RTNN;                              /* ROUTINE NUMBER */           16400000
         SR    @4,@4                                              0568  16410000
         IC    @4,8(0,@3)                                         0568  16420000
*  GEN(CVD   R4,64(R13));                /* ROUTINE IN DECIMAL        * 16430000
         CVD   R4,64(R13)                                               16440000
         DS    0H                                                       16450000
*  GEN(UNPK  RTLOC(4),64(8,R13));        /* UNPACK              X02008* 16460000
         UNPK  RTLOC(4),64(8,R13)                                       16470000
         DS    0H                                                       16480000
*  GEN(MVZ   RTLOC+3(1),RTLOC+2);        /* MOVE ZONE           X02008* 16490000
         MVZ   RTLOC+3(1),RTLOC+2                                       16500000
         DS    0H                                                       16510000
*  RTRTNM=RTLOC(2:4);                    /* ROUTINE NUMBER      X02008* 16520000
         MVC   RETMSG+14(3),RETMSG+28                             0572  16530000
*  IF RTNN>TERTN THEN                    /* CHECK ROUTINE NUMBER      * 16540000
         CLC   8(1,@3),A00008                                     0573  16550000
         BC    12,@9BE                                            0573  16560000
*                                        /*                     A45731* 16570000
*    TERTN=RTNN;                         /* INSERT HIGHEST NUMBER     * 16580000
         MVC   A00008(1),8(@3)                                    0574  16590000
*                                        /*                     A45731* 16600000
*  R6=R4/8;                              /* MULTIPLES OF EIGHT */       16610000
@9BE     LR    @E,@4                                              0575  16620000
         SRA   @E,3                                               0575  16630000
         LR    @6,@E                                              0575  16640000
*  R4=R4-(R6*8);                         /* BIT COUNT */                16650000
         LA    @F,8                                               0576  16660000
         MR    @E,@6                                              0576  16670000
         LCR   @F,@F                                              0576  16680000
         AR    @4,@F                                              0576  16690000
*  IF R4=0 THEN                          /* TEST BIT COUNT */           16700000
         LTR   @4,@4                                              0577  16710000
         BC    07,@9BD                                            0577  16720000
*    R4=8;                               /* EIGHTH BIT OF BYTE */       16730000
         LA    @4,8                                               0578  16740000
         BC    15,@9BC                                            0579  16750000
*  ELSE R6=R6+1;                         /* BYTE COUNT */               16760000
@9BD     AH    @6,@D2                                             0579  16770000
*  IF R6>2 THEN                          /* TEST ROUTINE NUMBER */      16780000
@9BC     CH    @6,@D5                                             0580  16790000
         BC    12,@9BB                                            0580  16800000
*    R5=ADDR(SCTW9C);                    /* MASK FOR ABOVE ROUTINE 2 */ 16810000
         LA    @5,A00014+38                                       0581  16820000
         BC    15,@9BA                                            0582  16830000
*  ELSE R5=ADDR(SCTW1);                  /* MASK FOR ROUTINES 1 OR 2 */ 16840000
@9BB     LA    @5,A00014+4                                        0582  16850000
*  RR=MASK(R4)&RTN8(R6);                 /* MASK OUT ROUTINE BIT */     16860000
@9BA     LR    @C,@6                                              0583  16870000
         BCTR  @C,0                                               0583  16880000
         LA    @E,0(@C,@5)                                        0583  16890000
         MVC   LIST(1),0(@E)                                      0583  16900000
         LR    @C,@4                                              0583  16910000
         LA    @E,LIST(@C)                                        0583  16920000
         NC    LIST(1),0(@E)                                      0583  16930000
*  IF RR='00'X THEN                      /* TEST ROUTINE TO GO TO */    16940000
         CLI   LIST,X'00'                                         0584  16950000
*    GOTO TRA023;                        /* GO TO NEXT ROUTINE */       16960000
         BC    08,TRA023                                          0585  16970000
*  IF MIMK='1'B&                         /* TEST MASK BIT IN MACRO */   16980000
*    MIBT='0'B THEN                      /* TEST MI BIT IN SCT */       16990000
         TM    10(@3),B'10000000'                                 0586  17000000
         BC    12,@9B9                                            0586  17010000
         TM    A00014+36,B'10000000'                              0586  17020000
         BC    05,@9B8                                            0586  17030000
*      DO;                               /* SKIP ROUTINE              * 17040000
*        R1=IFD210;                      /* PTR TO IFD210 MSG         * 17050000
         L     @C,MSGMOD                                          0588  17060000
         L     @1,64(0,@C)                                        0588  17070000
*        MIRTNM=RTLOC(1:4);              /* ROUTINE NUMBER      X02008* 17080000
         MVC   20(4,@1),RETMSG+27                                 0589  17090000
*        GEN(PWTO  REG=(1));             /* ISSUE WTO                 * 17100000
         PWTO  REG=(1)                                                  17110000
         DS    0H                                                       17120000
* TRA023:                                                               17130000
*        R4=RTNEXT;                      /* NEXT ROUTINE        X02008* 17140000
TRA023   L     @4,4(0,@3)                                         0591  17150000
*        GOTO TRA013;                    /* GO TO ROUTINE       X02008* 17160000
         BC    15,TRA013                                          0592  17170000
*      END;                              /* END SKIPPING              * 17180000
*        R7=SECPRF;                      /* ROUTINE NUMBER ADDRESS */   17190000
@9B8     EQU   *                                                  0594  17200000
@9B9     L     @7,A00009+36                                       0594  17210000
*        ERBT='0'B;                      /* ZERO ERROR BIT IN SCT */    17220000
         NI    A00014+3,B'01111111'                               0595  17230000
*        RTN=RTNN;                       /* RTN INTO SECTION PREFACE */ 17240000
         MVC   0(1,@7),8(@3)                                      0596  17250000
*        IF REFN¬='00'X THEN             /* TEST FOR REFERENCE NUMBER * 17260000
         CLI   9(@3),X'00'                                        0597  17270000
         BC    08,@9B7                                            0597  17280000
*          REFNUM=REFN;                  /* NUMBER INTO SECTION */      17290000
         MVC   17(1,@7),9(@3)                                     0598  17300000
*        RETURN;                         /* NORMAL RETURN */            17310000
         BC    15,@EL01                                           0599  17320000
* TRA028:                                                               17330000
*  IF CLEANRT='1'B THEN                  /* DOES OLT HAVE CLN-UPX03008* 17340000
TRA028   TM    A00014+36,B'01000000'                              0600  17350000
         BC    12,@9B6                                            0600  17360000
*    CLEANUP='1'B;                       /* YES, MAKE SURE      X03008* 17370000
         OI    A00014+33,B'00000100'                              0601  17380000
*                                        /* CLEANUP EXECUTED    X03008* 17390000
*  ASTERB='1'B;                          /* INDICATE ASTERISK */        17400000
@9B6     OI    A00014+3,B'01000000'                               0602  17410000
*  CHNBK=SCHEDSA;                        /* SCHEDULER SAVE AREA */      17420000
         MVC   4(4,@D),SCHEDSA                                    0603  17430000
*  RETURN;                               /* RETURN TO SCHEDULER */      17440000
         BC    15,@EL01                                           0604  17450000
*         GEN(EJECT);                                                   17460000
         EJECT                                                          17470000
         DS    0H                                                       17480000
         BC    15,@9B5                                            0606  17490000
* TRA130:                                                               17500000
*  ENTRY(X);                             /* RETURN CODE HANDLER X02008* 17510000
TRA130   STM   @E,@C,12(@D)                                       0606  17520000
         BALR  @B,0                                               0606  17530000
         LA    @F,TRA130-IFDOLT18-24                              0606  17540000
         SR    @B,@F                                              0606  17550000
         ST    @D,@SAV001+4                                       0606  17560000
         LA    @F,@SAV001                                         0606  17570000
         ST    @F,8(0,@D)                                         0606  17580000
         LR    @D,@F                                              0606  17590000
*  SVR14=UTRET;                          /* UTS RETURN ADDRESS  X02008* 17600000
@9B5     L     @C,4(0,@D)                                         0607  17610000
         MVC   12(4,@C),UTRET                                     0607  17620000
*  R4=SV15;                              /* RETURN CODE         X02008* 17630000
         L     @4,16(0,@C)                                        0608  17640000
*  R5=R4;                                /* RETURN CODE SAVED   X02008* 17650000
         LR    @5,@4                                              0609  17660000
*  RTAST=' ';                            /* BLANK CHARACTER     X02008* 17670000
         MVI   RETMSG+8,C' '                                      0610  17680000
*  IF CLEANUP='1'B THEN                  /* CHECK FOR CLEANUP   X02008* 17690000
         TM    A00014+33,B'00000100'                              0611  17700000
*    GOTO TRA035;                        /* CHECK TRACE REQUEST X02008* 17710000
         BC    01,TRA035                                          0612  17720000
*  IF RTMASK='00'X THEN                  /* TEST RETURN CODE    X02008* 17730000
         CLI   70(@2),X'00'                                       0613  17740000
*    GOTO TRA035;                        /* NO RETURN CODE MASK X02008* 17750000
         BC    08,TRA035                                          0614  17760000
*  IF R4=0 THEN                          /* CHECK RETURN CODE   X02008* 17770000
         LTR   @4,@4                                              0615  17780000
*    GOTO TRA035;                        /* GOOD RETURN CODE    X02008* 17790000
         BC    08,TRA035                                          0616  17800000
*  IF R4>32 THEN                         /* CHECK RETURN CODE   X02008* 17810000
         CH    @4,@D6                                             0617  17820000
*    GOTO TRA035;                        /* ILLEGAL RETURN CODE X02008* 17830000
         BC    02,TRA035                                          0618  17840000
*  R4=R4/4;                              /* MULTIPLE OF FOUR    X02008* 17850000
         LR    @E,@4                                              0619  17860000
         SRA   @E,2                                               0619  17870000
         LR    @4,@E                                              0619  17880000
*  RR=RTMASK;                            /* MASK BITS FROM SCT  X02008* 17890000
         MVC   LIST(1),70(@2)                                     0620  17900000
*  R4=R4+ADDR(LIST);                     /* MASK BIT RETURNED   X02008* 17910000
         LA    @F,LIST                                            0621  17920000
         AR    @4,@F                                              0621  17930000
*  RR=RR&MDMASK;                         /* AND MASK TOGETHER   X02008* 17940000
         NC    LIST(1),0(@4)                                      0622  17950000
*  IF RR¬=MDMASK THEN                    /* CHECK IF BITS MATCH X02008* 17960000
         CLC   LIST(1),0(@4)                                      0623  17970000
*    GOTO TRA035;                        /* CHECK TRACE REQUEST X02008* 17980000
         BC    07,TRA035                                          0624  17990000
*  RTAST='*';                            /* RETCODE REQUEST     X02008* 18000000
         MVI   RETMSG+8,C'*'                                      0625  18010000
*  GOTO TRA037;                          /* RETCODE REQUEST     X02008* 18020000
         BC    15,TRA037                                          0626  18030000
* TRA035:                                                               18040000
*    IF TRACE='0'B THEN                  /* CHECK TRACE         X02008* 18050000
TRA035   TM    A00014+36,B'00000100'                              0627  18060000
*    RETURN;                             /* RETURN TO UTS       X02008* 18070000
         BC    10,@EL01                                           0628  18080000
* TRA037:                                                               18090000
*  GEN(BAL   R9,TRA039);                 /* HEX TO EBCDIC       X02008* 18100000
@9B4     EQU   *                                                  0629  18110000
TRA037   BAL   R9,TRA039                                                18120000
         DS    0H                                                       18130000
*  RTTERM=RTLOC(7:8);                    /* RETURN CODE TO PRINTX02008* 18140000
         MVC   RETMSG+39(2),RETMSG+33                             0630  18150000
*  R5=UTRET;                             /* UTS RETURN ADDRESS  X02008* 18160000
         L     @5,UTRET                                           0631  18170000
*  GEN(BAL   R9,TRA039);                 /* HEX TO EBCDIC       X02008* 18180000
         BAL   R9,TRA039                                                18190000
         DS    0H                                                       18200000
*  PRTBUFR(1)=' ';                       /* CLEAR PRINT LOCATIONX02008* 18210000
         MVI   PRTBUFR,C' '                                       0633  18220000
*  PRTBUFR(2:124)=PRTBUFR(1:123);        /* CLEAR PRINT BUFFER  X02008* 18230000
         MVC   PRTBUFR+1(123),PRTBUFR                             0634  18240000
*  PRTBUFR(2:42)=RETMSG;                 /* MESSAGE INTO BUFFER X02008* 18250000
         MVC   PRTBUFR+1(41),RETMSG                               0635  18260000
*  R1=42;                                /* MESSAGE SIZE        X02008* 18270000
         LA    @1,42                                              0636  18280000
*  GEN(PWRT  SIZE=(1));                  /* PRINT MESSAGE       X02008* 18290000
         PWRT  SIZE=(1)                                                 18300000
         DS    0H                                                       18310000
*  IF RTAST=' ' THEN                     /* CHECK FOR TRACE     X02008* 18320000
         CLI   RETMSG+8,C' '                                      0638  18330000
*    RETURN;                             /* RETURN TO UTS       X02008* 18340000
         BC    08,@EL01                                           0639  18350000
*  GOTO TRA028;                          /* RETURN TO SCHEDULER X02008* 18360000
         BC    15,TRA028                                          0640  18370000
* TRA039:                                                               18380000
*  SV1T8(1)='0F'X;                       /* INITIALIZE          X02008* 18390000
TRA039   MVI   A00071,X'0F'                                       0641  18400000
*  SV1T8(2:8)=SV1T8(1:7);                /* INITIALIZE          X02008* 18410000
         MVC   A00071+1(7),A00071                                 0642  18420000
*  SV2=R5&SV2;                           /* EVEN HEX CHARACTERS X02008* 18430000
         L     @F,A00071+4                                        0643  18440000
         NR    @F,@5                                              0643  18450000
         ST    @F,A00071+4                                        0643  18460000
*  R5=R5/16;                             /* SHIFT A HEX CHAR    X02008* 18470000
         LR    @E,@5                                              0644  18480000
         SRA   @E,4                                               0644  18490000
         LR    @5,@E                                              0644  18500000
*  SV1=R5&SV1;                           /* ODD HEX CHARACTERS  X02008* 18510000
         L     @F,A00071                                          0645  18520000
         NR    @F,@5                                              0645  18530000
         ST    @F,A00071                                          0645  18540000
*  R5=ADDR(SV1T8);                       /* SAVE AREA           X02008* 18550000
         LA    @5,A00071                                          0646  18560000
*  R6=ADDR(CLIST);                       /* LIST ADDRESS        X02008* 18570000
         LA    @6,CLIST                                           0647  18580000
*  R7=ADDR(RTLOC);                       /* RETURN LOCATION     X02008* 18590000
         LA    @7,RETMSG+27                                       0648  18600000
*  DO R4=4 TO 1 BY -1;                   /* CONVERT ROUTINE     X02008* 18610000
         LA    @4,4                                               0649  18620000
*    R8=R6+SV1C;                         /* CHARACTER ADDRESS   X02008* 18630000
@DO9B2   SR    @8,@8                                              0650  18640000
         IC    @8,0(0,@5)                                         0650  18650000
         AR    @8,@6                                              0650  18660000
*    RTLOC1=EBCD;                        /* CHARACTER TO PRINT  X02008* 18670000
         MVC   0(1,@7),0(@8)                                      0651  18680000
*    R8=R6+SV2C;                         /* CHARACTER ADDRESS   X02008* 18690000
         SR    @8,@8                                              0652  18700000
         IC    @8,4(0,@5)                                         0652  18710000
         AR    @8,@6                                              0652  18720000
*    RTLOC2=EBCD;                        /* CHARACTER TO PRINT  X02008* 18730000
         MVC   1(1,@7),0(@8)                                      0653  18740000
*    R7=ADDR(NXTRTL);                    /* NEXT LOCATION       X02008* 18750000
         LA    @7,2(0,@7)                                         0654  18760000
*    R5=ADDR(NXTSVC);                    /* NEXT CHARACTER      X02008* 18770000
         LA    @5,1(0,@5)                                         0655  18780000
*  END;                                  /* END ROUTINE         X02008* 18790000
*  GOTO R9;                              /* RETURN TO MAIN FLOW X02008* 18800000
         BCT   @4,@DO9B2                                          0656  18810000
         BCR   15,@9                                              0657  18820000
* END;                                                                  18830000
@EL01    L     @D,4(0,@D)                                         0658  18840000
         LM    @E,@C,12(@D)                                       0658  18850000
         BCR   15,@E                                              0658  18860000
@DATA1   EQU   *                                                        18870000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           18880000
@1       EQU   01                                                       18890000
@2       EQU   02                                                       18900000
@3       EQU   03                                                       18910000
@4       EQU   04                                                       18920000
@5       EQU   05                                                       18930000
@6       EQU   06                                                       18940000
@7       EQU   07                                                       18950000
@8       EQU   08                                                       18960000
@9       EQU   09                                                       18970000
@A       EQU   10                                                       18980000
@B       EQU   11                                                       18990000
@C       EQU   12                                                       19000000
@D       EQU   13                                                       19010000
@E       EQU   14                                                       19020000
@F       EQU   15                                                       19030000
@D1      DC    H'6'                                                     19040000
@D2      DC    H'1'                                                     19050000
@D3      DC    H'20'                                                    19060000
@D4      DC    H'662'                                                   19070000
@D5      DC    H'2'                                                     19080000
@D6      DC    H'32'                                                    19090000
         DS    0F                                                       19100000
@C9      DC    C'40'                                                    19110000
@C10     DC    C'47'                                                    19120000
@C11     DC    C'08'                                                    19130000
@C12     DC    C'39'                                                    19140000
@C18     DC    C'26'                                                    19150000
@C19     DC    C'46'                                                    19160000
         DS    0D                                                       19170000
@DATA    EQU   *                                                        19180000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   19190000
X        EQU   00000000            FULLWORD INTEGER                     19200000
R0       EQU   00000000            FULLWORD POINTER REGISTER            19210000
R1       EQU   00000001            FULLWORD POINTER REGISTER            19220000
R2       EQU   00000002            FULLWORD POINTER REGISTER            19230000
R3       EQU   00000003            FULLWORD POINTER REGISTER            19240000
R4       EQU   00000004            FULLWORD POINTER REGISTER            19250000
R5       EQU   00000005            FULLWORD POINTER REGISTER            19260000
R6       EQU   00000006            FULLWORD POINTER REGISTER            19270000
R7       EQU   00000007            FULLWORD POINTER REGISTER            19280000
R8       EQU   00000008            FULLWORD POINTER REGISTER            19290000
R9       EQU   00000009            FULLWORD POINTER REGISTER            19300000
R11      EQU   00000011            FULLWORD POINTER REGISTER            19310000
R12      EQU   00000012            FULLWORD POINTER REGISTER            19320000
R13      EQU   00000013            FULLWORD POINTER REGISTER            19330000
R14      EQU   00000014            FULLWORD POINTER REGISTER            19340000
R15      EQU   00000015            FULLWORD POINTER REGISTER            19350000
         ORG   @DATA+00000072                                           19360000
COMADR   EQU   *                   FULLWORD POINTER                     19370000
         DC    VL4(IFDOLT23)                                            19380000
OPFLG    EQU   00000048            8 BIT(S) ON BYTE                     19390000
A00012   EQU   00000004            7 BYTE(S) ON WORD                    19400000
RTNEXT   EQU   A00012+00000000     FULLWORD POINTER                     19410000
RTNN     EQU   A00012+00000004     1 BYTE(S)                            19420000
REFN     EQU   A00012+00000005     1 BYTE(S)                            19430000
RFLG     EQU   A00012+00000006     8 BIT(S)                             19440000
MIMK     EQU   A00012+00000006     1 BIT(S)                             19450000
TERM     EQU   A00012+00000006     1 BIT(S)                             19460000
A00013   EQU   A00012+00000006     1 BIT(S)                             19470000
RTN      EQU   00000000            1 BYTE(S)                            19480000
REFNUM   EQU   00000017            1 BYTE(S)                            19490000
A00027   EQU   00000000            32 BYTE(S) ON WORD                   19500000
RTN8     EQU   A00027+00000000     32*1 BYTE(S)                         19510000
A00028   EQU   00000000            1 BYTE(S) ON WORD                    19520000
RTNB     EQU   A00028+00000000     8 BIT(S)                             19530000
RST15    EQU   00000016            FULLWORD POINTER                     19540000
A00029   EQU   00000000            28 BYTE(S) ON WORD                   19550000
A00030   EQU   A00029+00000000     FULLWORD INTEGER                     19560000
CHNBK    EQU   A00029+00000004     FULLWORD POINTER                     19570000
SR13     EQU   A00029+00000008     FULLWORD POINTER                     19580000
SR14     EQU   A00029+00000012     FULLWORD POINTER                     19590000
SR15     EQU   A00029+00000016     FULLWORD POINTER                     19600000
SR0      EQU   A00029+00000020     FULLWORD POINTER                     19610000
SR1      EQU   A00029+00000024     FULLWORD POINTER                     19620000
A00031   EQU   A00029+00000024     FULLWORD POINTER                     19630000
I        EQU   @DATA+00000076      FULLWORD INTEGER                     19640000
A00032   EQU   I+00000000          3 BYTE(S)                            19650000
I4       EQU   I+00000003          1 BYTE(S)                            19660000
MCA      EQU   00000000            208 BYTE(S) ON WORD                  19670000
MPRE     EQU   MCA+00000000        FULLWORD POINTER                     19680000
MNXT     EQU   MCA+00000004        FULLWORD POINTER                     19690000
MITEM    EQU   MCA+00000008        20*6 BYTE(S)                         19700000
MNM      EQU   MCA+00000008        2 BYTE(S)                            19710000
MNM1     EQU   MCA+00000008        1 BYTE(S)                            19720000
MB1      EQU   MCA+00000008        1 BIT(S)                             19730000
MB2      EQU   MCA+00000008        1 BIT(S)                             19740000
A00033   EQU   MCA+00000008        5 BIT(S)                             19750000
MB8      EQU   MCA+00000008        1 BIT(S)                             19760000
MNM2     EQU   MCA+00000009        1 BYTE(S)                            19770000
MNAM     EQU   MCA+00000010        2 BYTE(S)                            19780000
MN1      EQU   MCA+00000010        1 BYTE(S)                            19790000
MMSIZ    EQU   MCA+00000012        2 BYTE(S)                            19800000
TITEM    EQU   MCA+00000128        20*FULLWORD POINTER                  19810000
MCTADS   EQU   00000128            1 BYTE(S)                            19820000
TADR     EQU   00000000            20*FULLWORD POINTER                  19830000
BMCT18   EQU   @DATA+00000080      8 BIT(S) ON BYTE                     19840000
BMCT12   EQU   BMCT18+00000000     2 BIT(S)                             19850000
BMCT1    EQU   BMCT18+00000000     1 BIT(S)                             19860000
BMCT2    EQU   BMCT18+00000000     1 BIT(S)                             19870000
PLKBIT   EQU   BMCT18+00000000     1 BIT(S)                             19880000
MOD8     EQU   BMCT18+00000000     1 BIT(S)                             19890000
BMCT45   EQU   BMCT18+00000000     2 BIT(S)                             19900000
BMCT4    EQU   BMCT18+00000000     1 BIT(S)                             19910000
BMCT5    EQU   BMCT18+00000000     1 BIT(S)                             19920000
MINMOR   EQU   BMCT18+00000000     1 BIT(S)                             19930000
A00034   EQU   BMCT18+00000000     1 BIT(S)                             19940000
SVR14    EQU   00000012            FULLWORD POINTER                     19950000
SVR141   EQU   SVR14+00000000      1 BYTE(S)                            19960000
SV15     EQU   00000016            FULLWORD POINTER                     19970000
SVR3     EQU   00000032            FULLWORD POINTER                     19980000
A00035   EQU   00000000            10 BYTE(S) ON WORD                   19990000
PMW1     EQU   A00035+00000000     10 BYTE(S)                           20000000
A00036   EQU   A00035+00000000     1 BYTE(S)                            20010000
PLEV     EQU   A00035+00000001     1 BYTE(S)                            20020000
PLID     EQU   A00035+00000002     2 BYTE(S)                            20030000
A00037   EQU   A00035+00000002     1 BYTE(S)                            20040000
MIRTNM   EQU   00000020            4 BYTE(S)                            20050000
         ORG   @DATA+00000081                                           20060000
CLIST    EQU   *                   16 BYTE(S)                           20070000
         DC    C'0123456789ABCDEF'                                      20080000
EBCD     EQU   00000000            1 BYTE(S)                            20090000
RETMSG   EQU   *                   41 BYTE(S)                           20100000
         DC    C'IFD450I * RTN XXX,ID YY,AT ZZZZZZZZ,RC WW'             20110000
A00038   EQU   RETMSG+00000000     8 BYTE(S)                            20120000
RTAST    EQU   RETMSG+00000008     1 BYTE(S)                            20130000
A00039   EQU   RETMSG+00000009     4 BYTE(S)                            20140000
RTNM14   EQU   RETMSG+00000013     4 BYTE(S)                            20150000
A00040   EQU   RETMSG+00000013     1 BYTE(S)                            20160000
RTRTNM   EQU   RETMSG+00000014     3 BYTE(S)                            20170000
A00041   EQU   RETMSG+00000017     4 BYTE(S)                            20180000
RTMCID   EQU   RETMSG+00000021     2 BYTE(S)                            20190000
A00042   EQU   RETMSG+00000023     4 BYTE(S)                            20200000
RTLOC    EQU   RETMSG+00000027     8 BYTE(S)                            20210000
A00043   EQU   RETMSG+00000035     4 BYTE(S)                            20220000
RTTERM   EQU   RETMSG+00000039     2 BYTE(S)                            20230000
A00044   EQU   00000000            8 BYTE(S)                            20240000
RTLOC1   EQU   A00044+00000000     1 BYTE(S)                            20250000
RTLOC2   EQU   A00044+00000001     1 BYTE(S)                            20260000
NXTRTL   EQU   A00044+00000002     1 BYTE(S)                            20270000
A00045   EQU   00000000            8 BYTE(S) ON WORD                    20280000
TAB1     EQU   A00045+00000000     FULLWORD POINTER                     20290000
TAB2     EQU   A00045+00000004     FULLWORD POINTER                     20300000
A00046   EQU   00000000            10 BYTE(S) ON WORD                   20310000
A00047   EQU   A00046+00000000     4 BYTE(S)                            20320000
MIDOLD   EQU   A00046+00000004     2 BYTE(S)                            20330000
MIDOLD1  EQU   A00046+00000004     1 BYTE(S)                            20340000
MAC2     EQU   A00046+00000006     4 BYTE(S)                            20350000
A00048   EQU   00000000            14 BYTE(S) ON WORD                   20360000
A00049   EQU   A00048+00000000     2*FULLWORD POINTER                   20370000
A00050   EQU   A00048+00000008     1 BYTE(S)                            20380000
A00051   EQU   A00048+00000008     1 BIT(S)                             20390000
ACTMD    EQU   A00048+00000008     1 BIT(S)                             20400000
MBK1     EQU   A00048+00000009     1 BYTE(S)                            20410000
MID1     EQU   A00048+00000010     2 BYTE(S)                            20420000
MSZ1     EQU   A00048+00000012     2 BYTE(S)                            20430000
MCT2     EQU   00000006            FULLWORD INTEGER                     20440000
TMCOM    EQU   @DATA+00000140      94 BYTE(S) ON WORD                   20450000
WKAREA   EQU   TMCOM+00000000      60 BYTE(S) ON WORD                   20460000
         ORG   TMCOM+00000000                                           20470000
A00052   EQU   *                   HALFWORD INTEGER                     20480000
         DC    FL2'1'                                                   20490000
A00053   EQU   *                   HALFWORD INTEGER                     20500000
         DC    FL2'56'                                                  20510000
WITEM    EQU   TMCOM+00000004      32 BYTE(S)                           20520000
WTOTNM   EQU   TMCOM+00000004      8 BYTE(S)                            20530000
WNM      EQU   *                   6 BYTE(S)                            20540000
         DC    C'IFDOLT'                                                20550000
WNAM     EQU   TMCOM+00000010      2 BYTE(S)                            20560000
WTTRK    EQU   TMCOM+00000012      6 BYTE(S)                            20570000
A00054   EQU   TMCOM+00000012      2 BYTE(S)                            20580000
WR       EQU   TMCOM+00000014      1 BYTE(S)                            20590000
A00055   EQU   TMCOM+00000018      11 BYTE(S)                           20600000
WMSIZ    EQU   TMCOM+00000029      2 BYTE(S)                            20610000
A00056   EQU   TMCOM+00000031      1 BYTE(S)                            20620000
WK24     EQU   TMCOM+00000036      24 BYTE(S) ON WORD                   20630000
GAVL     EQU   TMCOM+00000036      8 BYTE(S)                            20640000
GSIZS    EQU   TMCOM+00000044      8 BYTE(S)                            20650000
GAVL1    EQU   TMCOM+00000052      8 BYTE(S) ON WORD                    20660000
         ORG   TMCOM+00000060                                           20670000
KNT      EQU   *                   8 BYTE(S)                            20680000
         DC    C'IFDOLT  '                                              20690000
KNAME    EQU   TMCOM+00000060      6 BYTE(S)                            20700000
KNMV     EQU   TMCOM+00000066      2 BYTE(S)                            20710000
MODNN    EQU   *                   8 BYTE(S)                            20720000
         DC    C'IFDOLT  '                                              20730000
MODNN6   EQU   TMCOM+00000068      6 BYTE(S)                            20740000
BDEL     EQU   *                   FULLWORD INTEGER                     20750000
         DC    FL4'1'                                                   20760000
BIN      EQU   TMCOM+00000076      1 BYTE(S)                            20770000
WK1BYT   EQU   TMCOM+00000077      1 BYTE(S)                            20780000
BHB      EQU   TMCOM+00000078      1 BYTE(S)                            20790000
BHLD     EQU   TMCOM+00000079      1 BYTE(S)                            20800000
GTCOR    EQU   TMCOM+00000080      FULLWORD POINTER                     20810000
SVPMW1   EQU   TMCOM+00000084      10 BYTE(S)                           20820000
SVP1     EQU   TMCOM+00000084      2 BYTE(S)                            20830000
P1BITS   EQU   TMCOM+00000084      8 BIT(S)                             20840000
P1B0     EQU   TMCOM+00000084      1 BIT(S)                             20850000
P1B1     EQU   TMCOM+00000084      1 BIT(S)                             20860000
P1B23    EQU   TMCOM+00000084      2 BIT(S)                             20870000
P1B2     EQU   TMCOM+00000084      1 BIT(S)                             20880000
P1B3     EQU   TMCOM+00000084      1 BIT(S)                             20890000
P1B4     EQU   TMCOM+00000084      1 BIT(S)                             20900000
P1B5     EQU   TMCOM+00000084      1 BIT(S)                             20910000
P1B6     EQU   TMCOM+00000084      1 BIT(S)                             20920000
P1B7     EQU   TMCOM+00000084      1 BIT(S)                             20930000
SVPL     EQU   TMCOM+00000085      1 BYTE(S)                            20940000
SVP8     EQU   TMCOM+00000086      8 BYTE(S)                            20950000
SVP2     EQU   TMCOM+00000086      2 BYTE(S)                            20960000
NXMCT    EQU   00000004            FULLWORD POINTER                     20970000
MCTAD1   EQU   00000128            FULLWORD POINTER                     20980000
         ORG   @DATA+00000234                                           20990000
OLDMAC   EQU   *                   2 BYTE(S)                            21000000
         DC    X'0102'                                                  21010000
A00059   EQU   00000000            73 BYTE(S) ON WORD                   21020000
A00060   EQU   A00059+00000000     13 BYTE(S)                           21030000
WTOFORM  EQU   A00059+00000013     60 BYTE(S)                           21040000
BLDLIST  EQU   00000000            4 BYTE(S) ON WORD                    21050000
LENTCT   EQU   BLDLIST+00000000    HALFWORD INTEGER                     21060000
LENTSZ   EQU   BLDLIST+00000002    HALFWORD INTEGER                     21070000
A00061   EQU   @DATA+00000176      16 BYTE(S) ON WORD                   21080000
AVADR    EQU   A00061+00000000     FULLWORD POINTER                     21090000
AVSEZ    EQU   A00061+00000004     FULLWORD INTEGER                     21100000
A00062   EQU   A00061+00000004     2 BYTE(S)                            21110000
AVSIZ    EQU   A00061+00000006     2 BYTE(S)                            21120000
LOSIZ    EQU   A00061+00000008     FULLWORD INTEGER                     21130000
HHSIZ    EQU   A00061+00000012     FULLWORD INTEGER                     21140000
HHSIZC   EQU   A00061+00000012     4 BYTE(S)                            21150000
A00063   EQU   A00061+00000012     2 BYTE(S)                            21160000
HISIZ    EQU   A00061+00000014     2 BYTE(S)                            21170000
A00064   EQU   A00061+00000014     1 BYTE(S)                            21180000
WK1PTR   EQU   @DATA+00000236      FULLWORD POINTER                     21190000
SAVR8    EQU   @DATA+00000240      FULLWORD POINTER                     21200000
A00065   EQU   @DATA+00000140      34 BYTE(S) ON WORD                   21210000
A00066   EQU   A00065+00000000     5*FULLWORD POINTER                   21220000
NMCT     EQU   A00065+00000020     14 BYTE(S)                           21230000
NTADR    EQU   A00065+00000020     4  BYTE  POINTER                     21240000
BLIST1   EQU   00000000            60 BYTE(S)                           21250000
A00067   EQU   BLIST1+00000000     4 BYTE(S)                            21260000
A00068   EQU   BLIST1+00000004     8 BYTE(S)                            21270000
LNM2     EQU   BLIST1+00000004     6 BYTE(S)                            21280000
LNAM2    EQU   BLIST1+00000010     2 BYTE(S)                            21290000
LTTRK    EQU   BLIST1+00000012     6 BYTE(S)                            21300000
A00069   EQU   BLIST1+00000012     2 BYTE(S)                            21310000
LR       EQU   BLIST1+00000014     1 BYTE(S)                            21320000
A00070   EQU   BLIST1+00000018     11 BYTE(S)                           21330000
LSIZ     EQU   BLIST1+00000029     2 BYTE(S)                            21340000
BLIST2   EQU   00000056            FULLWORD INTEGER                     21350000
A00071   EQU   @DATA+00000152      8 BYTE(S) ON WORD                    21360000
SV1T8    EQU   A00071+00000000     8 BYTE(S)                            21370000
SV1      EQU   A00071+00000000     4  BYTE  INTEGER                     21380000
SV2      EQU   A00071+00000004     4  BYTE  INTEGER                     21390000
A00072   EQU   A00071+00000004     1 BYTE(S)                            21400000
A00073   EQU   00000000            5 BYTE(S) ON WORD                    21410000
SV1C     EQU   A00073+00000000     1 BYTE(S)                            21420000
NXTSVC   EQU   A00073+00000001     3 BYTE(S)                            21430000
SV2C     EQU   A00073+00000004     1 BYTE(S)                            21440000
MDMASK   EQU   00000000            1 BYTE(S)                            21450000
A00074   EQU   00000000            84 BYTE(S) ON WORD                   21460000
A00075   EQU   A00074+00000000     17*FULLWORD POINTER                  21470000
A00076   EQU   A00074+00000068     FULLWORD POINTER                     21480000
A00077   EQU   A00074+00000068     2 BYTE(S)                            21490000
RTMASK   EQU   A00074+00000070     1 BYTE(S)                            21500000
A00078   EQU   A00074+00000072     2*FULLWORD POINTER                   21510000
SCTW20   EQU   A00074+00000080     FULLWORD POINTER                     21520000
A00079   EQU   A00074+00000080     FULLWORD POINTER                     21530000
         ORG   @DATA+00000244                                           21540000
UTRET    EQU   *                   FULLWORD POINTER                     21550000
         DC    AL4(0)                                                   21560000
BRID     EQU   @DATA+00000248      2 BYTE(S)                            21570000
BRID1    EQU   BRID+00000000       1 BYTE(S)                            21580000
BRIDB14  EQU   BRID+00000000       4 BIT(S)                             21590000
LIST     EQU   @DATA+00000250      9 BYTE(S)                            21600000
RR       EQU   LIST+00000000       1 BYTE(S)                            21610000
         ORG   LIST+00000001                                            21620000
MASK     EQU   *                   8*1 BYTE(S)                          21630000
         DC    X'80'                                                    21640000
         DC    X'40'                                                    21650000
         DC    X'20'                                                    21660000
         DC    X'10'                                                    21670000
         DC    X'08'                                                    21680000
         DC    X'04'                                                    21690000
         DC    X'02'                                                    21700000
         DC    X'01'                                                    21710000
A00080   EQU   00000000            152 BYTE(S) ON WORD                  21720000
A00081   EQU   A00080+00000000     14*FULLWORD POINTER                  21730000
IFD160   EQU   A00080+00000056     FULLWORD POINTER                     21740000
A00082   EQU   A00080+00000060     FULLWORD POINTER                     21750000
IFD210   EQU   A00080+00000064     FULLWORD POINTER                     21760000
A00083   EQU   A00080+00000068     FULLWORD POINTER                     21770000
IFD168   EQU   A00080+00000072     FULLWORD POINTER                     21780000
A00084   EQU   A00080+00000076     18*FULLWORD POINTER                  21790000
IFD229   EQU   A00080+00000148     FULLWORD POINTER                     21800000
A00085   EQU   A00080+00000148     FULLWORD POINTER                     21810000
A00086   EQU   00000000            8 BYTE(S) ON WORD                    21820000
LENGTH   EQU   A00086+00000000     1 BYTE(S)                            21830000
BUFAD    EQU   A00086+00000001     3  BYTE  POINTER ON WORD+1           21840000
MECBAD   EQU   A00086+00000004     FULLWORD POINTER                     21850000
A00091   EQU   @DATA+00000260      80 BYTE(S) ON WORD                   21860000
SVDYN    EQU   A00091+00000000     18*FULLWORD POINTER                  21870000
SVT13    EQU   A00091+00000072     FULLWORD POINTER                     21880000
SVU13    EQU   A00091+00000076     FULLWORD POINTER                     21890000
A00092   EQU   A00091+00000076     FULLWORD POINTER                     21900000
DEDBUF   EQU   00000000            72 BYTE(S)                           21910000
         ORG   @DATA+00000340                                           21920000
RTALKID  EQU   *                   8 BYTE(S)                            21930000
         DC    C'IFD255I '                                              21940000
         ENTRY TRA130                                                   21950000
         ORG   @DATA                                                    21960000
         DS    00000352C                                                21970000
@TEMPS   DS    0F                                                       21980000
@TEMP2   DC    F'0'                                                     21990000
DSECT18  IFDCOM                                                         22000000
IFDOLT18 CSECT                                                          22010000
LGWRTFLD EQU   LGWRTCT-00000004    FULLWORD POINTER                     22020000
A00000   EQU   CESWT2+00000000     8 BIT(S) ON BYTE                     22030000
NDCFO    EQU   A00000+00000000     1 BIT(S)                             22040000
PLKMRB   EQU   A00000+00000000     1 BIT(S)                             22050000
FECOND   EQU   A00000+00000000     1 BIT(S)                             22060000
A00001   EQU   A00000+00000000     1 BIT(S)                             22070000
A00002   EQU   CESWT3+00000000     1 BYTE(S)                            22080000
A00003   EQU   A00002+00000000     3 BIT(S)                             22090000
GRBCTL   EQU   A00002+00000000     1 BIT(S)                             22100000
SUSDEL   EQU   A00002+00000000     1 BIT(S)                             22110000
A00004   EQU   A00002+00000000     1 BIT(S)                             22120000
A00005   EQU   CESWT6+00000000     8 BIT(S) ON BYTE                     22130000
UTSCAL   EQU   A00005+00000000     1 BIT(S)                             22140000
A00006   EQU   PARTITEM+00000000   8 BYTE(S) ON WORD                    22150000
PARADR   EQU   A00006+00000000     FULLWORD POINTER                     22160000
PARSZ    EQU   A00006+00000004     FULLWORD INTEGER                     22170000
A00007   EQU   A00006+00000004     1 BYTE(S)                            22180000
A00008   EQU   HRTSEL+00000000     2 BYTE(S) ON WORD                    22190000
TERTN    EQU   A00008+00000000     1 BYTE(S)                            22200000
HIRTN    EQU   A00008+00000001     1 BYTE(S)                            22210000
A00009   EQU   OLTTAB+00000000     40 BYTE(S) ON WORD                   22220000
A00010   EQU   A00009+00000000     8*FULLWORD POINTER                   22230000
TMCOMAD  EQU   A00009+00000032     FULLWORD POINTER                     22240000
SECPRF   EQU   A00009+00000036     FULLWORD POINTER                     22250000
A00011   EQU   A00009+00000036     FULLWORD POINTER                     22260000
A00014   EQU   CHASCT+00000000     52 BYTE(S) ON WORD                   22270000
SCTW0    EQU   A00014+00000000     FULLWORD INTEGER                     22280000
A00015   EQU   A00014+00000000     2 BYTE(S)                            22290000
A00016   EQU   A00014+00000002     8 BIT(S)                             22300000
A00017   EQU   A00014+00000002     5 BIT(S)                             22310000
NPR      EQU   A00014+00000002     1 BIT(S)                             22320000
A00018   EQU   A00014+00000003     8 BIT(S)                             22330000
ERBT     EQU   A00014+00000003     1 BIT(S)                             22340000
ASTERB   EQU   A00014+00000003     1 BIT(S)                             22350000
CATB1    EQU   A00014+00000003     1 BIT(S)                             22360000
A00019   EQU   A00014+00000003     3 BIT(S)                             22370000
ERLOP    EQU   A00014+00000003     1 BIT(S)                             22380000
SCTW1    EQU   A00014+00000004     FULLWORD INTEGER                     22390000
SCTW2    EQU   A00014+00000008     FULLWORD INTEGER                     22400000
SCTW3    EQU   A00014+00000012     FULLWORD INTEGER                     22410000
SCTW4    EQU   A00014+00000016     FULLWORD INTEGER                     22420000
SCTW5    EQU   A00014+00000020     FULLWORD INTEGER                     22430000
SCTW6    EQU   A00014+00000024     FULLWORD INTEGER                     22440000
SCTW7    EQU   A00014+00000028     FULLWORD INTEGER                     22450000
SCTW8    EQU   A00014+00000032     FULLWORD INTEGER                     22460000
A00020   EQU   A00014+00000032     1 BYTE(S)                            22470000
A00021   EQU   A00014+00000033     8 BIT(S)                             22480000
A00022   EQU   A00014+00000033     5 BIT(S)                             22490000
CLEANUP  EQU   A00014+00000033     1 BIT(S)                             22500000
SCTW82   EQU   A00014+00000034     HALFWORD INTEGER                     22510000
SCTW9    EQU   A00014+00000036     FULLWORD INTEGER                     22520000
A00023   EQU   A00014+00000036     8 BIT(S)                             22530000
MIBT     EQU   A00014+00000036     1 BIT(S)                             22540000
CLEANRT  EQU   A00014+00000036     1 BIT(S)                             22550000
A00024   EQU   A00014+00000036     2 BIT(S)                             22560000
RETCODE  EQU   A00014+00000036     1 BIT(S)                             22570000
TRACE    EQU   A00014+00000036     1 BIT(S)                             22580000
A00025   EQU   A00014+00000037     1 BYTE(S)                            22590000
SCTW9C   EQU   A00014+00000038     2 BYTE(S)                            22600000
SCTW10   EQU   A00014+00000040     FULLWORD INTEGER                     22610000
A00026   EQU   A00014+00000044     2*FULLWORD POINTER                   22620000
RID      EQU   MCT+00000009        1 BYTE(S)                            22630000
VID      EQU   WKSVC+00000002      2 BYTE(S)                            22640000
A00057   EQU   MCT+00000128        80 BYTE(S) ON WORD                   22650000
RTADR1   EQU   A00057+00000000     FULLWORD POINTER                     22660000
TMADR1   EQU   A00057+00000004     FULLWORD POINTER                     22670000
A00058   EQU   A00057+00000008     18*FULLWORD POINTER                  22680000
A00087   EQU   ECB3+00000000       1 BYTE(S) ON WORD                    22690000
A00088   EQU   A00087+00000000     1 BYTE(S)                            22700000
A00089   EQU   A00087+00000000     1 BIT(S)                             22710000
ECB3POST EQU   A00087+00000000     1 BIT(S)                             22720000
A00090   EQU   TRA000-00000012     208 BYTE(S) ON WORD                  22730000
MCTTWO   EQU   A00090+00000000     208 BYTE(S)                          22740000
FSTMCT   EQU   A00090+00000000     4  BYTE  POINTER                     22750000
RMCT2    EQU   A00090+00000004     204 BYTE(S)                          22760000
A00093   EQU   CESWTR+00000000     1 BYTE(S)                            22770000
A00094   EQU   A00093+00000000     1 BIT(S)                             22780000
REMERR   EQU   A00093+00000000     1 BIT(S)                             22790000
REMNOMSG EQU   A00093+00000000     1 BIT(S)                             22800000
CENOMSG  EQU   A00093+00000000     1 BIT(S)                             22810000
TRANSMSG EQU   A00093+00000000     1 BIT(S)                             22820000
A00095   EQU   A00093+00000000     1 BIT(S)                             22830000
A00096   EQU   A00093+00000000     2 BIT(S)                             22840000
A00097   EQU   CESWTR1+00000000    1 BYTE(S)                            22850000
ILLRESP  EQU   A00097+00000000     1 BIT(S)                             22860000
EXECANS  EQU   A00097+00000000     1 BIT(S)                             22870000
A00098   EQU   A00097+00000000     2 BIT(S)                             22880000
RETRIEVE EQU   A00097+00000000     1 BIT(S)                             22890000
REMANS   EQU   A00097+00000000     1 BIT(S)                             22900000
A00099   EQU   A00097+00000000     2 BIT(S)                             22910000
A00100   EQU   CESWTR2+00000000    1 BYTE(S)                            22920000
A00101   EQU   A00100+00000000     2 BIT(S)                             22930000
ONCOMM   EQU   A00100+00000000     1 BIT(S)                             22940000
RECOMM   EQU   A00100+00000000     1 BIT(S)                             22950000
A00102   EQU   A00100+00000000     4 BIT(S)                             22960000
A00103   EQU   TALKECB+00000000    1 BYTE(S) ON WORD                    22970000
A00104   EQU   A00103+00000000     1 BYTE(S)                            22980000
A00105   EQU   A00103+00000000     1 BIT(S)                             22990000
TALKPOST EQU   A00103+00000000     1 BIT(S)                             23000000
A00106   EQU   REIECB+00000000     1 BYTE(S) ON WORD                    23010000
A00107   EQU   A00106+00000000     1 BYTE(S)                            23020000
A00108   EQU   A00106+00000000     1 BIT(S)                             23030000
REIPOST  EQU   A00106+00000000     1 BIT(S)                             23040000
TALKID   EQU   PRTBUFR+00000001    8 BYTE(S)                            23050000
RPTBUF   EQU   PRTBUFR+00000009    115 BYTE(S)                          23060000
@DATEND  EQU   *                                                        23070000
@9ED     EQU   @EL01                                                    23080000
@9EC     EQU   TRA002B                                                  23090000
@9EB     EQU   TRA002B                                                  23100000
@9E0     EQU   TRA006                                                   23110000
@9E1     EQU   TRA006                                                   23120000
@9D9     EQU   TRA018                                                   23130000
@9C0     EQU   TRA025                                                   23140000
@9B7     EQU   @EL01                                                    23150000
@9B3     EQU   TRA028                                                   23160000
         END                                                            23170000
./  ADD  SSI=40871600,NAME=IFDOLT21
         TITLE 'IFDOLT21 GRAB MODULE'                                   00010000
         TITLE 'IFDOLT21 GRAB MODULE'                                   00020000
         MACRO                                                          00030000
&NAME    GRAB  &CTRL=,&CLASS=,&TYPE=,&CDSADR=,&MAP=NO,&LSTNAME=,&MF=    00040000
.*                                                                      00050000
         GBLB  &EXECUTV,&E536454                                        00060000
         LCLA  &FLAGS,&COUNT,&A                                         00070000
         LCLC  &C,&T,&F,&Z,&CHAR                                        00080000
.*                                                                      00090000
         AIF   ('&MAP' EQ 'YES').MAP1                                   00100000
         AGO   .EXIT                                                    00110000
.MAP1    ANOP                                                           00120000
GRABMAP  DSECT                                                          00130000
&Z       SETC  '$'                                                      00140000
         AIF   (&E536454).ZIPPER                                        00150000
           DC  XL1'0' .            CONTROL PROGRAM FLAGS                00160000
           DC  XL1'0' .            MACRO LEVEL                          00170000
           DC  XL2'0' .            MACRO ID                             00180000
         AGO   .ZIPPED                                                  00190000
.ZIPPER  ANOP                                                           00200000
&Z.GRBTRMG DC  XL1'0' .            CONTROL PROGRAM FLAGS                00210000
&Z.GRBLEVL DC  XL1'0' .            MACRO LEVEL                          00220000
&Z.GRBIDNT DC  XL2'0' .            MACRO ID                             00230000
.ZIPPED  ANOP                                                           00240000
&Z.GRABCDS DC  A(0) .              ADDRESS OF AREA TO RECEIVE CDS INFO  00250000
&Z.GRABFLG DC  XL1'0' .            FLAGS                                00260000
&Z.GRABCLS DC  XL1'0' .            CLASS                                00270000
&Z.GRABTYP DC  XL1'0' .            TYPE                                 00280000
&Z.GRABCNT DC  XL1'0' .            # OF CDS BYTES.                      00290000
.EXIT    MEND                                                           00300000
         EJECT                                                          00310000
         LCLA  &T,&SPN                                            0003  00320000
.@001    ANOP                                                     0003  00330000
IFDOLT21 CSECT ,                                                  0003  00340000
         BC    15,24(0,@F)                                              00350000
         DC    C'IFDOLT21 29 MAR 74'                             0003  00360000
         ST    @E,12(0,@D)                                        0003  00370000
         STM   @0,@C,20(@D)                                       0003  00380000
         BALR  @B,0                                               0003  00390000
@PSTART  DS    0H                                                 0003  00400000
         USING @PSTART+00000,@B                                   0003  00410000
         ST    @D,@SAV001+4                                       0003  00420000
         LA    @F,@SAV001                                         0003  00430000
         ST    @F,8(0,@D)                                         0003  00440000
         LR    @D,@F                                              0003  00450000
         USING GRABMAP,1                                                00460000
         USING CHASCT,2                                                 00470000
         DS    0H                                                       00480000
*  GRBCTL='1'B;                          /* GRAB ACTIVE          M4506* 00490000
         OI    A00008,B'00010000'                                 0059  00500000
*         GRAB10=ADDR(GRAB10A);          /* ADDRESS IN PROGRAM   M4506* 00510000
         LA    @9,GRAB10A                                         0060  00520000
*         DUMMYCTR=UNICTR;          /* FIND NUMBER OF DEVICES */        00530000
         MVC   UNITCTR+3(1),UNICTR                                0061  00540000
*                                   /* IN DEVTABLE.           */        00550000
*         R4=PRIDVPTR;              /* GET PRIMARY DEVICE POINTER. */   00560000
         L     @4,PRIDVPTR                                        0062  00570000
*         IF MACROLVL¬='02'X|       /* FACILITY DOES NOT EXIST IN */    00580000
*             CDSPTR=0|                                        /*21051* 00590000
*               NDR='1'B THEN       /* THIS OPERATING ENVIRONMENT */    00600000
         CLI   MACROLVL,X'02'                                     0063  00610000
         BC    07,@9FF                                            0063  00620000
         SR    @F,@F                                              0063  00630000
         C     @F,CDSPTR                                          0063  00640000
         BC    08,@9FE                                            0063  00650000
         TM    OLTEPSW2,B'00000100'                               0063  00660000
         BC    12,@9FD                                            0063  00670000
*           DO;                     /* RETURN TO CALLER WITH      */    00680000
@9FE     EQU   *                                                  0064  00690000
*           RC=4;                   /* RETURN CODE 04.            */    00700000
@9FF     LA    @F,4                                               0065  00710000
*           GO TO GRAB28;                                               00720000
         BC    15,GRAB28                                          0066  00730000
*           END;                                                        00740000
*         IF UNICTR='01'X THEN      /* ENTRY LIST CONTAINED ONLY */     00750000
@9FD     CLI   UNICTR,X'01'                                       0068  00760000
         BC    07,@9FC                                            0068  00770000
*           DO;                     /* ONE DEVICE. RETURN TO     */     00780000
*           RC=12;                  /* CALLER WITH RETURN CODE 0C*/     00790000
         LA    @F,12                                              0070  00800000
*           GO TO GRAB28;                                               00810000
         BC    15,GRAB28                                          0071  00820000
*           END;                                                        00830000
*         ENDOFTAB=DEVTBPTR+(UNITCTR-1)*TABLNGTH;  /* ESTABLISH X03008* 00840000
@9FC     L     @F,UNITCTR                                         0073  00850000
         BCTR  @F,0                                               0073  00860000
         MH    @F,TABLNGTH                                        0073  00870000
         A     @F,DEVTBPTR                                        0073  00880000
         ST    @F,ENDOFTAB                                        0073  00890000
*                                                 /* DEVTABLE ADDRESS * 00900000
*         IF SECDVPTR=0 THEN        /* IS THIS THE INITIAL GRAB. */     00910000
         SR    @F,@F                                              0074  00920000
         C     @F,SECDVPTR                                        0074  00930000
         BC    07,@9FB                                            0074  00940000
*           DO;                                                         00950000
*         R5=PRIDVPTR+TABLNGTH;    /* YES, SET POINTER TO ENTRY X03008* 00960000
         LH    @5,TABLNGTH                                        0076  00970000
         A     @5,PRIDVPTR                                        0076  00980000
*           GO TO GRAB01;           /* FOLLOWING PRIMARY ENTRY */       00990000
         BC    15,GRAB01                                          0077  01000000
*           END;                                                        01010000
*         R5=SECDVPTR+TABLNGTH;    /* NO, SET POINTER TO ENTRY  X03008* 01020000
@9FB     LH    @5,TABLNGTH                                        0079  01030000
         A     @5,SECDVPTR                                        0079  01040000
*                                   /* FOLLOWING LAST ACTIVE    */      01050000
*                                   /*    SECONDARY ENTRY       */      01060000
* GRAB01:                                                               01070000
*         /************************************************************ 01080000
*         /*                START SEARCH FOR DEVICE                   * 01090000
*         /************************************************************ 01100000
*         SEARCHED=0;               /* INITIALIZE SEARCHED COUNTER. */  01110000
GRAB01   SR    @3,@3                                              0080  01120000
* GRAB02:                                                               01130000
*         /************************************************************ 01140000
*         /*   LOOK AT EACH DEVICE IN DEVTABLE UNTIL DEVICE FOUND     * 01150000
*         /************************************************************ 01160000
*         DO COUNTER=1 TO UNITCTR;                                      01170000
GRAB02   LA    @6,1                                               0081  01180000
         BC    15,@DO9F9                                          0081  01190000
*           IF R5>ENDOFTAB THEN     /* HAS THE END OF THE TABLE BEEN */ 01200000
@DO9FA   C     @5,ENDOFTAB                                        0082  01210000
         BC    12,@9F6                                            0082  01220000
*         R5=DEVTBPTR;              /* REACHED. YES, SEARCH FROM 21051* 01230000
         L     @5,DEVTBPTR                                        0083  01240000
*                                   /* BEGINNING OF THE DEVTABLE */     01250000
*           SEARCHED=SEARCHED+1;    /* INCREMENT SEARCHED COUNTER */    01260000
@9F6     LA    @3,1(0,@3)                                         0084  01270000
*         IF SOSPRUN='SOSP' THEN                                        01280000
         CLC   SOSPRUN(4),@C4                                     0085  01290000
*           GO TO GRAB02A;         /* SOSP UTILITY IS IN SYSTEM  21051* 01300000
         BC    08,GRAB02A                                         0086  01310000
*           IF GRABBED='1'B |       /* HAS THE DEVICE ALREADY BEEN  */  01320000
*             PRIMARY='1'B THEN     /* GRABBED OR IS IT THE PRIMARY   * 01330000
         TM    12(@5),B'00000100'                                 0087  01340000
         BC    01,@9F5                                            0087  01350000
         TM    12(@5),B'01000000'                                 0087  01360000
         BC    12,@9F4                                            0087  01370000
*                                                             /*X03008* 01380000
*             GO TO GRAB10;         /* DEVICE. YES, UPDATE AND TRY  */  01390000
@9F5     BCR   15,@9                                              0088  01400000
*                                   /* ANOTHER DEVICE.              */  01410000
* GRAB02A:                                                              01420000
* GRAB02B:                                                    /*XM0099* 01430000
*         IF FLAGS='03'X THEN           /* GRAB FOR NEXT DEVICE XM0099* 01440000
@9F4     EQU   *                                                  0089  01450000
GRAB02A  EQU   *                                                  0089  01460000
GRAB02B  CLI   FLAGS,X'03'                                        0089  01470000
*             GO TO GRAB20;         /* DEVICE ON THE LIST. YES, GO */   01480000
         BC    08,GRAB20                                          0090  01490000
*                                   /* AND DO DATA PROTECTION */        01500000
*           IF FLAGS<'03'X THEN     /* IS THE GRAB ACCORDING TO */      01510000
         CLI   FLAGS,X'03'                                        0091  01520000
*             GO TO GRAB08;         /* CLASS AND OR TYPE ONLY */        01530000
         BC    04,GRAB08                                          0092  01540000
*                                   /* YES, GO TO CLASS DECODE */       01550000
*         /************************************************************ 01560000
*         /*                                                          * 01570000
*         /*                     CHANNEL DECODE                       * 01580000
*         /*                                                          * 01590000
*         /************************************************************ 01600000
*           IF CHANCODE='00'B THEN  /* DOES USER CARE ABOUT THE CHAN */ 01610000
         TM    FLAGS,B'11000000'                                  0093  01620000
*             GO TO GRAB04;         /* NO, GO TO CONTROL UNIT DECODE.*/ 01630000
         BC    08,GRAB04                                          0094  01640000
*           IF DCH='1'B THEN        /* IS IT A REQUEST FOR A DIFF.CH.*/ 01650000
         TM    FLAGS,B'10000000'                                  0095  01660000
*             GO TO GRAB03;         /* YES, GET DIFFERENT CHANNEL.*/    01670000
         BC    01,GRAB03                                          0096  01680000
*           IF PRICHAN=SECCHAN THEN /* NO, FIND DEV.AD WITH SAME CHAN * 01690000
         CLC   5(1,@4),5(@5)                                      0097  01700000
*             GO TO GRAB04;         /* FOUND, GO LOOK AT CU REQUEST.*/  01710000
         BC    08,GRAB04                                          0098  01720000
*           GO TO GRAB10;           /* LOOK AT NEXT ENTRY IN DEVTABLE.* 01730000
         BCR   15,@9                                              0099  01740000
* GRAB03:                                                               01750000
*         /************************************************************ 01760000
*         /*             REQUEST FOR DIFFERENT CHANNEL                * 01770000
*         /************************************************************ 01780000
*           IF PRICHAN=SECCHAN THEN /* IS IT A DIFFERENT CHANNEL.*/     01790000
GRAB03   CLC   5(1,@4),5(@5)                                      0100  01800000
*             GO TO GRAB10;         /* YES, LOOK AT CU REQUEST. NO, */  01810000
         BCR   08,@9                                              0101  01820000
*                                   /* LOOK AT NEXT ENTRY IN DEVTABLE * 01830000
* GRAB04:                                                               01840000
*         /************************************************************ 01850000
*         /*                                                          * 01860000
*         /*                  CONTROL UNIT DECODE                     * 01870000
*         /*                                                          * 01880000
*         /************************************************************ 01890000
*           IF CUCODE='00'B THEN    /* DOES USER CARE ABOUT THE CU.*/   01900000
GRAB04   TM    FLAGS,B'00110000'                                  0102  01910000
*             GO TO GRAB06;         /* NO, GO TO DEVICE DECODE. */      01920000
         BC    08,GRAB06                                          0103  01930000
*           IF DCU='1'B THEN        /* IS IT A REQUEST FOR A DIFF.CU. * 01940000
         TM    FLAGS,B'00100000'                                  0104  01950000
*           GO TO GRAB05;           /* YES, GET DIFFERENT CU. */        01960000
         BC    01,GRAB05                                          0105  01970000
*           IF PRICU=SECCU THEN     /* NO, FIND DEV.AD WITH SAME CU */  01980000
         CLC   6(1,@4),6(@5)                                      0106  01990000
*             GO TO GRAB06;         /* FOUND, GO LOOK AT DEV REQUEST.*/ 02000000
         BC    08,GRAB06                                          0107  02010000
*           GO TO GRAB10;           /* LOOK AT NEXT ENTRY IN DEVTABLE.* 02020000
         BCR   15,@9                                              0108  02030000
* GRAB05:                                                               02040000
*         /************************************************************ 02050000
*         /*           REQUEST FOR DIFFERENT CONTROL UNIT             * 02060000
*         /************************************************************ 02070000
*           IF PRICU=SECCU THEN     /* IS IT A DIFFERENT CU. */         02080000
GRAB05   CLC   6(1,@4),6(@5)                                      0109  02090000
*             GO TO GRAB10;         /* YES, LOOK AT DEVICE REQUEST. NO* 02100000
         BCR   08,@9                                              0110  02110000
*                                   /* LOOK AT NEXT ENTRY IN DEVTABLE * 02120000
* GRAB06:                                                               02130000
*         /************************************************************ 02140000
*         /*                                                          * 02150000
*         /*                      DEVICE DECODE                       * 02160000
*         /*                                                          * 02170000
*         /************************************************************ 02180000
*           IF DEVCODE='00'B THEN   /* DOES USER CARE ABOUT DEVICE. */  02190000
GRAB06   TM    FLAGS,B'00001100'                                  0111  02200000
*             GO TO GRAB08;         /* NO, GO TO CLASS DECODE. */       02210000
         BC    08,GRAB08                                          0112  02220000
*           IF DDV='1'B THEN        /* IS IT A REQUEST FOR A DIFF.DEV.* 02230000
         TM    FLAGS,B'00001000'                                  0113  02240000
*             GO TO GRAB07;         /* YES, GET DIFFERENT DEVICE. */    02250000
         BC    01,GRAB07                                          0114  02260000
*           IF PRIDEV=SECDEV THEN   /* NO,FIND DEV.AD WITH SAME DEVICE* 02270000
         CLC   7(1,@4),7(@5)                                      0115  02280000
*             GO TO GRAB08;         /* FOUND, GO LOOK AT CLASS REQUEST* 02290000
         BC    08,GRAB08                                          0116  02300000
*           GO TO GRAB10;           /* LOOK AT NEXT ENTRY IN DEVTABLE.* 02310000
         BCR   15,@9                                              0117  02320000
* GRAB07:                                                               02330000
*         /************************************************************ 02340000
*         /*              REQUEST FOR DIFFERENT DEVICE                * 02350000
*         /************************************************************ 02360000
*           IF PRIDEV=SECDEV THEN   /* IS IT A DIFFERENT DEVICE. */     02370000
GRAB07   CLC   7(1,@4),7(@5)                                      0118  02380000
*             GO TO GRAB10;         /* YES, LOOK AT CLASS REQUEST. NO,* 02390000
         BCR   08,@9                                              0119  02400000
*                                   /* LOOK AT NEXT ENTRY IN DEVTABLE * 02410000
* GRAB08:                                                               02420000
*         /************************************************************ 02430000
*         /*                                                          * 02440000
*         /*                      CLASS DECODE                        * 02450000
*         /*                                                          * 02460000
*         /************************************************************ 02470000
*           IF CLAS='1'B THEN       /* IS CLASS APPLICABLE. */          02480000
GRAB08   TM    FLAGS,B'00000010'                                  0120  02490000
*             GO TO GRAB09;         /* NO, GO TO TYPE DECODE. */        02500000
         BC    01,GRAB09                                          0121  02510000
*           IF CLASS¬=CDSCLASS THEN /* IS IT SAME CLASS AS SPECIFIED.*/ 02520000
         CLC   CLASS(1),38(@5)                                    0122  02530000
*             GO TO GRAB10;         /* NO, LOOK AT NEXT ENTRY */        02540000
         BCR   07,@9                                              0123  02550000
*                                   /* IN DEVTABLE.           */        02560000
* GRAB09:                                                               02570000
*         /************************************************************ 02580000
*         /*                                                          * 02590000
*         /*                      TYPE DECODE                         * 02600000
*         /*                                                          * 02610000
*         /************************************************************ 02620000
*           IF TYP='1'B THEN        /* IS TYPE APPLICABLE. */           02630000
GRAB09   TM    FLAGS,B'00000001'                                  0124  02640000
*             GO TO GRAB20;         /* NO, GO TO DATA PROTECTION. */    02650000
         BC    01,GRAB20                                          0125  02660000
*           IF TYPE=CDSTYPE THEN    /* IS IT SAME TYPE AS SPECIFIED */  02670000
         CLC   TYPE(1),39(@5)                                     0126  02680000
*             GO TO GRAB20;         /* YES, GO TO DATA PROTECTION. */   02690000
         BC    08,GRAB20                                          0127  02700000
*  GRAB10A:                                                             02710000
*         /************************************************************ 02720000
*         /*                                                          * 02730000
*         /*            UPDATE TO NEXT ENTRY IN DEVTABLE              * 02740000
*         /*                                                          * 02750000
*         /************************************************************ 02760000
*         R5=R5+TABLNGTH;           /* UPDATE DEV TAB POINTER   X03008* 02770000
GRAB10A  AH    @5,TABLNGTH                                        0128  02780000
*           IF SEARCHED=UNITCTR THEN/* HAVE ALL ENTRIES BEEN EXAMINED * 02790000
         C     @3,UNITCTR                                         0129  02800000
         BC    07,@9F3                                            0129  02810000
*             DO;                   /* YES, SET RETURN CODE OF 8 AND  * 02820000
*             RC=8;                 /*        RETURN TO CALLER.       * 02830000
         LA    @F,8                                               0131  02840000
*             GO TO GRAB28;                                             02850000
         BC    15,GRAB28                                          0132  02860000
*             END;                                                      02870000
*         END;                                                          02880000
* GRAB20:                                                               02890000
*         /************************************************************ 02900000
*         /*                                                          * 02910000
*         /* CHECK FOR GRAB OF SAME DEVICE DIFFERENT CHANNEL          * 02920000
*         /*                                                          * 02930000
*         /************************************************************ 02940000
*         LOOPPTR = DEVTBPTR;       /* POINTER TO START         YM5417* 02950000
@9F3     AH    @6,@D1                                             0134  02960000
@DO9F9   C     @6,UNITCTR                                         0134  02970000
         BC    12,@DO9FA                                          0134  02980000
GRAB20   MVC   LOOPPTR(4),DEVTBPTR                                0135  02990000
*         SUM = UNICTR;             /* NUMBER OF DEVICES        YM5417* 03000000
         MVC   SUM+1(1),UNICTR                                    0136  03010000
         MVI   SUM,X'00'                                          0136  03020000
*         DO Z=1 TO SUM BY +1;      /* SCAN ALL DEV ENTRIES     YM7636* 03030000
         LA    @F,1                                               0137  03040000
         BC    15,@DO9F1                                          0137  03050000
*           IF SECUCBAD = UCBADRX THEN /*IS UCB SAME            YM5417* 03060000
@DO9F2   L     @C,LOOPPTR                                         0138  03070000
         MVC   @TEMP4(4),8(@C)                                    0138  03080000
         L     @F,@TEMP4                                          0138  03090000
         C     @F,8(0,@5)                                         0138  03100000
         BC    07,@9EE                                            0138  03110000
*             DO;                   /* YES, IS THE DEVICE       YM5417* 03120000
*               IF PRIMX='1'B THEN       /* A PRIMARY, GO UPDATEYM7636* 03130000
         TM    12(@C),B'01000000'                                 0140  03140000
*                 GO TO GRAB10A;         /* DEVTAB PTR-TRY AGAINYM7636* 03150000
         BC    01,GRAB10A                                         0141  03160000
*               IF GRABEDX='1'B THEN     /* A GRABBED DEVICE    YM7636* 03170000
         TM    12(@C),B'00000100'                                 0142  03180000
         BC    12,@9ED                                            0142  03190000
*                 DO;                    /* YES,                YM7636* 03200000
*                 IF SOSPRUN¬='SOSP' THEN /* IS THIS SOSP       YM7636* 03210000
         CLC   SOSPRUN(4),@C4                                     0144  03220000
*                   GO TO GRAB10A;       /* YES, OK. NO, GO     YM7636* 03230000
         BC    07,GRAB10A                                         0145  03240000
*                                        /* UPDATE PTR AND TRY  YM7636* 03250000
*                   END;                 /* AGAIN               YM7636* 03260000
*             END;                  /* NO, OK TO GRAB           YM5417* 03270000
@9ED     EQU   *                                                  0147  03280000
*           LOOPPTR=LOOPPTR+TABLNGTH; /* NO, CHECK NEXT DEVICE  YM5417* 03290000
@9EE     LH    @F,TABLNGTH                                        0148  03300000
         A     @F,LOOPPTR                                         0148  03310000
         ST    @F,LOOPPTR                                         0148  03320000
*         END;                      /* END OF SCAN              YM5417* 03330000
*         /************************************************************ 03340000
*         /*                                                          * 03350000
*         /*                PERFORM DATA PROTECTION                   * 03360000
*         /*                                                          * 03370000
*         /************************************************************ 03380000
*         SAVE=SECDVPTR;            /* SAVE POINTER TO LAST GRABBED   * 03390000
         MVC   @TEMP2+2(2),Z                                      0149  03400000
         L     @F,@TEMP2                                          0149  03410000
         AH    @F,@D1                                             0149  03420000
@DO9F1   STH   @F,Z                                               0149  03430000
         MVC   @TEMP2+2(2),SUM                                    0149  03440000
         C     @F,@TEMP2                                          0149  03450000
         BC    12,@DO9F2                                          0149  03460000
         MVC   SAVE(4),SECDVPTR                                   0150  03470000
*                                   /* DEVICE.                        * 03480000
*         SECDVPTR=R5;              /* PUT POINTER TO POSSIBLE        * 03490000
         ST    @5,SECDVPTR                                        0151  03500000
*                                   /* SECONDARY DEVICE IN SECDVPTR   * 03510000
*                                   /* FOR D.P. MODULE.               * 03520000
*         IF DPDONE='0'B THEN       /* HAS DATA PROTECTION BEEN DONE  * 03530000
         TM    12(@5),B'00100000'                                 0152  03540000
         BC    05,@9EC                                            0152  03550000
*                                   /* ON THIS DEVICE.                * 03560000
*           DO;                     /* NO,                            * 03570000
*           PROTECT='1'B;           /* SET FLAG TO INDICATE TO D.P.   * 03580000
         OI    OLTEPSW,B'01000000'                                0154  03590000
*                                   /* MODULE THAT THIS IS FOR A      * 03600000
*                                   /* SECONDARY DEVICE.              * 03610000
*           R15=DATPTR;             /* PUT POINTER TO D.P. MODULE IN  * 03620000
         L     @F,DATPTR                                          0155  03630000
*                                   /* REGISTER 15.                   * 03640000
*           GEN(BALR  R14,R15);     /* GO TO DATA PROTECTION.         * 03650000
         BALR  R14,R15                                                  03660000
         DS    0H                                                       03670000
*           PROTECT='0'B;           /* CLEAR TYPE OF PROTECTION FLAG. * 03680000
         NI    OLTEPSW,B'10111111'                                0157  03690000
*           IF DPDONE='0'B THEN     /* WAS DATA PROTECTION DONE       * 03700000
         TM    12(@5),B'00100000'                                 0158  03710000
         BC    05,@9EB                                            0158  03720000
*                                   /* SUCCESSFULLY.                  * 03730000
*             DO;                   /* NO,                            * 03740000
*         R5=R5+TABLNGTH;           /* UPDATE DEV TAB POINTER   X03008* 03750000
         AH    @5,TABLNGTH                                        0160  03760000
*             SECDVPTR=SAVE;        /* RESTORE ADDRESS OF LAST GRABBED* 03770000
         MVC   SECDVPTR(4),SAVE                                   0161  03780000
*                                   /* DEVICE.                        * 03790000
*             GO TO GRAB02;         /* CONTINUE SEARCH.               * 03800000
         BC    15,GRAB02                                          0162  03810000
*             END;                                                      03820000
*           END;                                                        03830000
@9EB     EQU   *                                                  0164  03840000
*         R7=CDSPTR;                /* GET POINTER TO CDS AREA WITHIN * 03850000
@9EC     L     @7,CDSPTR                                          0165  03860000
*                                   /* THE OLT.                       * 03870000
*         R8=GRABCNT;               /* GET GRAB CNT.                  * 03880000
         SR    @8,@8                                              0166  03890000
         IC    @8,GRABCNT                                         0166  03900000
*         IF CDSDSCRT=0 THEN DO;   /* ARE CDS DEV DSCRPTRS = 0?  21050* 03910000
         CLC   36(4,@5),@D2                                       0167  03920000
         BC    07,@9EA                                            0167  03930000
*         RC='10'X;                /* YES, SET RET CODE AND RETURN21050 03940000
         LA    @F,X'10'                                           0169  03950000
*           GO TO GRAB27;                                      /*21050* 03960000
         BC    15,GRAB27                                          0170  03970000
*           END;                                               /*21050* 03980000
*         RC=0;                                                         03990000
@9EA     SR    @F,@F                                              0172  04000000
*         IF GRABCNT<'0C'X &        /* DOES OLT WANT EXT SIG MASK     * 04010000
*           EXTSGMSK='1'B THEN      /* BUT SPECIFY SMALL BUFFER,      * 04020000
         CLI   GRABCNT,X'0C'                                      0173  04030000
         BC    10,@9E9                                            0173  04040000
         TM    41(@5),B'00010000'                                 0173  04050000
         BC    12,@9E8                                            0173  04060000
*           RC='14'X;               /* YES, SET RET CODE  & GO ON     * 04070000
         LA    @F,X'14'                                           0174  04080000
*         IF GRABCNT<'14'X &        /* DOES OLT WANT SYM NAME BUT     * 04090000
*           SYMNMFLG='1'B THEN      /* BUFFER TOO SMALL, YES,         * 04100000
@9E8     EQU   *                                                  0175  04110000
@9E9     CLI   GRABCNT,X'14'                                      0175  04120000
         BC    10,@9E7                                            0175  04130000
         TM    41(@5),B'00001000'                                 0175  04140000
         BC    12,@9E6                                            0175  04150000
*           RC='14'X;               /* GIVE RET CODE & GO ON.         * 04160000
         LA    @F,X'14'                                           0176  04170000
*         CDSAREA(1:R8)=SECCDS(1:R8); /* LOAD OLT CDS AREA       21050* 04180000
@9E6     EQU   *                                                  0177  04190000
@9E7     LA    @E,32(0,@5)                                        0177  04200000
         LR    @C,@8                                              0177  04210000
         BCTR  @C,0                                               0177  04220000
         LR    @A,@7                                              0177  04230000
         EX    @C,@MVC                                            0177  04240000
*         IF FPMODE='1'B THEN       /* IS DEVICE FILE PROTECTED.      * 04250000
         TM    12(@5),B'00000010'                                 0178  04260000
         BC    12,@9E5                                            0178  04270000
*           FILEPRT='1'B;           /* YES, SET FILE PROTECT FLAG ON  * 04280000
         OI    9(@7),B'10000000'                                  0179  04290000
*                                   /* IN THIS AREA.                  * 04300000
*         IF SHARED='1'B THEN       /* IS THIS A SHARED DEVICE.       * 04310000
@9E5     L     @C,8(0,@5)                                         0180  04320000
         TM    17(@C),B'00100000'                                 0180  04330000
         BC    12,@9E4                                            0180  04340000
*           UNITSHRD='1'B;          /* YES, SET SHARED DEVICE FLAG ON * 04350000
         OI    9(@7),B'01000000'                                  0181  04360000
*                                   /* IN THIS AREA.                  * 04370000
*         IF CEVOLUME='1'B THEN     /* IS THIS A C.E. VOLUME. YES, SET* 04380000
@9E4     TM    13(@5),B'00100000'                                 0182  04390000
         BC    12,@9E3                                            0182  04400000
*           UNITCEVL='1'B;          /* C.E. VOLUME FLAG ON IN THIS    * 04410000
         OI    9(@7),B'00100000'                                  0183  04420000
*                                   /* AREA.                          * 04430000
* GRAB27:                                                               04440000
*         /************************************************************ 04450000
*         /*  SUCCESSFUL COMPLETION, DEVICE DESCRIPTORS NOT AVAILABLE * 04460000
*         /************************************************************ 04470000
*         GRABBED='1'B;             /* SET GRABBED INDICATOR ON */      04480000
@9E3     EQU   *                                                  0184  04490000
GRAB27   OI    12(@5),B'00000100'                                 0184  04500000
*                                   /* IN THIS ENTRY.           */      04510000
* GRAB28:                                                               04520000
*         /************************************************************ 04530000
*         /*         RESTORE REGISTERS AND RETURN TO CALLER           * 04540000
*         /************************************************************ 04550000
*  GRBCTL='0'B;                          /* GRAB COMPLETE        M4506* 04560000
GRAB28   NI    A00008,B'11101111'                                 0185  04570000
*         RETURN;                                                       04580000
*         END;                                                          04590000
@EL01    L     @D,4(0,@D)                                         0187  04600000
         L     @E,12(0,@D)                                        0187  04610000
         LM    @0,@C,20(@D)                                       0187  04620000
         BCR   15,@E                                              0187  04630000
@DATA1   EQU   *                                                        04640000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           04650000
@1       EQU   01                                                       04660000
@2       EQU   02                                                       04670000
@3       EQU   03                                                       04680000
@4       EQU   04                                                       04690000
@5       EQU   05                                                       04700000
@6       EQU   06                                                       04710000
@7       EQU   07                                                       04720000
@8       EQU   08                                                       04730000
@9       EQU   09                                                       04740000
@A       EQU   10                                                       04750000
@B       EQU   11                                                       04760000
@C       EQU   12                                                       04770000
@D       EQU   13                                                       04780000
@E       EQU   14                                                       04790000
@F       EQU   15                                                       04800000
@D2      DC    F'0'                                                     04810000
@D1      DC    H'1'                                                     04820000
@MVC     MVC   0(1,@A),0(@E)                                            04830000
         DS    0F                                                       04840000
@C4      DC    C'SOSP'                                                  04850000
         DS    0D                                                       04860000
@DATA    EQU   *                                                        04870000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   04880000
PL       EQU   00000001            FULLWORD POINTER REGISTER            04890000
R1       EQU   00000001            FULLWORD POINTER REGISTER            04900000
R2       EQU   00000002            FULLWORD POINTER REGISTER            04910000
R3       EQU   00000003            FULLWORD POINTER REGISTER            04920000
SEARCHED EQU   00000003            3  BYTE  POINTER REGISTER            04930000
R4       EQU   00000004            FULLWORD POINTER REGISTER            04940000
R5       EQU   00000005            FULLWORD POINTER REGISTER            04950000
COUNTER  EQU   00000006            3  BYTE  POINTER REGISTER            04960000
R7       EQU   00000007            FULLWORD POINTER REGISTER            04970000
R8       EQU   00000008            FULLWORD POINTER REGISTER            04980000
GRAB10   EQU   00000009            FULLWORD POINTER REGISTER            04990000
R14      EQU   00000014            FULLWORD POINTER REGISTER            05000000
R15      EQU   00000015            FULLWORD POINTER REGISTER            05010000
RC       EQU   00000015            3  BYTE  POINTER REGISTER            05020000
CDS      EQU   00000000            256 BYTE(S)                          05030000
CDSAREA  EQU   00000000            20 BYTE(S) ON WORD                   05040000
A00000   EQU   CDSAREA+00000000    2 BYTE(S)                            05050000
UNITADDR EQU   CDSAREA+00000002    2 BYTE(S)                            05060000
UNITDSCP EQU   CDSAREA+00000004    4 BYTE(S)                            05070000
CDSLNGTH EQU   CDSAREA+00000008    1 BYTE(S)                            05080000
UNITFLGS EQU   CDSAREA+00000009    1 BYTE(S)                            05090000
FILEPRT  EQU   CDSAREA+00000009    1 BIT(S)                             05100000
UNITSHRD EQU   CDSAREA+00000009    1 BIT(S)                             05110000
UNITCEVL EQU   CDSAREA+00000009    1 BIT(S)                             05120000
A00001   EQU   CDSAREA+00000010    2 BYTE(S)                            05130000
CDSSYMNM EQU   CDSAREA+00000012    8 BYTE(S)                            05140000
Z        EQU   @DATA+00000072      HALFWORD POINTER                     05150000
SUM      EQU   @DATA+00000074      HALFWORD POINTER                     05160000
LOOPPTR  EQU   @DATA+00000076      FULLWORD POINTER                     05170000
A00002   EQU   00000000            56 BYTE(S)                           05180000
A00003   EQU   A00002+00000000     8 BYTE(S)                            05190000
UCBADRX  EQU   A00002+00000008     4  BYTE  POINTER                     05200000
A00004   EQU   A00002+00000012     1 BYTE(S)                            05210000
A00005   EQU   A00002+00000012     1 BIT(S)                             05220000
PRIMX    EQU   A00002+00000012     1 BIT(S)                             05230000
A00006   EQU   A00002+00000012     3 BIT(S)                             05240000
GRABEDX  EQU   A00002+00000012     1 BIT(S)                             05250000
ENDOFTAB EQU   @DATA+00000080      FULLWORD POINTER                     05260000
PRIDEV1  EQU   00000000            8 BYTE(S) ON WORD                    05270000
A00012   EQU   PRIDEV1+00000000    8 BYTE(S)                            05280000
A00013   EQU   PRIDEV1+00000000    5 BYTE(S)                            05290000
PRICHAN  EQU   PRIDEV1+00000005    1 BYTE(S)                            05300000
PRICU    EQU   PRIDEV1+00000006    1 BYTE(S)                            05310000
PRIDEV   EQU   PRIDEV1+00000007    1 BYTE(S)                            05320000
SECDEV2  EQU   00000000            52 BYTE(S) ON WORD                   05330000
A00014   EQU   SECDEV2+00000000    8 BYTE(S)                            05340000
A00015   EQU   SECDEV2+00000000    5 BYTE(S)                            05350000
SECCHAN  EQU   SECDEV2+00000005    1 BYTE(S)                            05360000
SECCU    EQU   SECDEV2+00000006    1 BYTE(S)                            05370000
SECDEV   EQU   SECDEV2+00000007    1 BYTE(S)                            05380000
SECUCBAD EQU   SECDEV2+00000008    FULLWORD POINTER                     05390000
FLG1X    EQU   SECDEV2+00000012    1 BYTE(S)                            05400000
A00016   EQU   SECDEV2+00000012    1 BIT(S)                             05410000
PRIMARY  EQU   SECDEV2+00000012    1 BIT(S)                             05420000
DPDONE   EQU   SECDEV2+00000012    1 BIT(S)                             05430000
A00017   EQU   SECDEV2+00000012    2 BIT(S)                             05440000
GRABBED  EQU   SECDEV2+00000012    1 BIT(S)                             05450000
FPMODE   EQU   SECDEV2+00000012    1 BIT(S)                             05460000
FLG2X    EQU   SECDEV2+00000013    1 BYTE(S)                            05470000
A00018   EQU   SECDEV2+00000013    1 BIT(S)                             05480000
A00019   EQU   SECDEV2+00000013    1 BIT(S)                             05490000
CEVOLUME EQU   SECDEV2+00000013    1 BIT(S)                             05500000
STDLABL  EQU   SECDEV2+00000013    1 BIT(S)                             05510000
A00020   EQU   SECDEV2+00000014    18 BYTE(S)                           05520000
SECCDS   EQU   SECDEV2+00000032    20 BYTE(S)                           05530000
SECDEVPT EQU   SECDEV2+00000032    4 BYTE(S)                            05540000
CDSDSCRT EQU   SECDEV2+00000036    4 BYTE(S)                            05550000
A00021   EQU   SECDEV2+00000036    2 BYTE(S)                            05560000
CDSCLASS EQU   SECDEV2+00000038    1 BYTE(S)                            05570000
CDSTYPE  EQU   SECDEV2+00000039    1 BYTE(S)                            05580000
CDSSIZE  EQU   SECDEV2+00000040    1 BYTE(S)                            05590000
CDSFLAGS EQU   SECDEV2+00000041    1 BYTE(S)                            05600000
A00022   EQU   SECDEV2+00000041    3 BIT(S)                             05610000
EXTSGMSK EQU   SECDEV2+00000041    1 BIT(S)                             05620000
SYMNMFLG EQU   SECDEV2+00000041    1 BIT(S)                             05630000
A00023   EQU   SECDEV2+00000041    1 BIT(S)                             05640000
REMFILE  EQU   SECDEV2+00000041    1 BIT(S)                             05650000
A00024   EQU   SECDEV2+00000042    2 BYTE(S)                            05660000
SYMNAME  EQU   SECDEV2+00000044    8 BYTE(S)                            05670000
UCBDVDSC EQU   00000016            4 BYTE(S)                            05680000
A00025   EQU   UCBDVDSC+00000000   1 BYTE(S)                            05690000
FEATURES EQU   UCBDVDSC+00000001   1 BYTE(S)                            05700000
A00026   EQU   UCBDVDSC+00000001   2 BIT(S)                             05710000
SHARED   EQU   UCBDVDSC+00000001   1 BIT(S)                             05720000
         ORG   @DATA+00000084                                           05730000
UNITCTR  EQU   *                   FULLWORD INTEGER                     05740000
         DC    FL4'0'                                                   05750000
A00027   EQU   UNITCTR+00000000    3 BYTE(S)                            05760000
DUMMYCTR EQU   UNITCTR+00000003    1 BYTE(S)                            05770000
SAVE     EQU   @DATA+00000088      FULLWORD POINTER                     05780000
MODNAME  EQU   @DATA+00000092      8 BYTE(S)                            05790000
         ORG   MODNAME+00000000                                         05800000
TCDS0    EQU   *                   5 BYTE(S)                            05810000
         DC    C'G0000'                                                 05820000
CDSDEV   EQU   MODNAME+00000005    3 BYTE(S)                            05830000
TABLEADR EQU   @DATA+00000100      FULLWORD POINTER                     05840000
GRABDEVS EQU   00000000            14 BYTE(S)                           05850000
A00028   EQU   GRABDEVS+00000000   8 BYTE(S)                            05860000
COMPUCB  EQU   GRABDEVS+00000008   4  BYTE  POINTER                     05870000
COMPFLAG EQU   GRABDEVS+00000012   8 BIT(S)                             05880000
A00029   EQU   GRABDEVS+00000012   5 BIT(S)                             05890000
A00030   EQU   GRABDEVS+00000012   1 BIT(S)                             05900000
         ORG   @DATA                                                    05910000
         DS    00000104C                                                05920000
@TEMPS   DS    0F                                                       05930000
@TEMP2   DC    F'0'                                                     05940000
@TEMP4   DC    F'0'                                                     05950000
         GLOBAL                                                         05960000
GRAB     IFDCOM                                                         05970000
         GRAB  MAP=YES                                                  05980000
CDSPTR   EQU   $GRABCDS                                                 05990000
GRABFLG  EQU   $GRABFLG                                                 06000000
CLASS    EQU   $GRABCLS                                                 06010000
TYPE     EQU   $GRABTYP                                                 06020000
MACROLVL EQU   $GRBLEVL                                                 06030000
GRABCNT  EQU   $GRABCNT                                                 06040000
SOSPRUN  EQU   SECLST+00000003     4 BYTE(S)                            06050000
FLAGS    EQU   GRABFLG+00000000    1 BYTE(S)                            06060000
CHANCODE EQU   FLAGS+00000000      2 BIT(S)                             06070000
DCH      EQU   FLAGS+00000000      1 BIT(S)                             06080000
CH       EQU   FLAGS+00000000      1 BIT(S)                             06090000
CUCODE   EQU   FLAGS+00000000      2 BIT(S)                             06100000
DCU      EQU   FLAGS+00000000      1 BIT(S)                             06110000
CU       EQU   FLAGS+00000000      1 BIT(S)                             06120000
DEVCODE  EQU   FLAGS+00000000      2 BIT(S)                             06130000
DDV      EQU   FLAGS+00000000      1 BIT(S)                             06140000
DV       EQU   FLAGS+00000000      1 BIT(S)                             06150000
CLAS     EQU   FLAGS+00000000      1 BIT(S)                             06160000
TYP      EQU   FLAGS+00000000      1 BIT(S)                             06170000
OLTEPSW2 EQU   CESWT2+00000000     1 BYTE(S)                            06180000
A00007   EQU   OLTEPSW2+00000000   5 BIT(S)                             06190000
NDR      EQU   OLTEPSW2+00000000   1 BIT(S)                             06200000
A00008   EQU   CESWT3+00000000     1 BYTE(S)                            06210000
A00009   EQU   A00008+00000000     3 BIT(S)                             06220000
GRBCTL   EQU   A00008+00000000     1 BIT(S)                             06230000
A00010   EQU   A00008+00000000     1 BIT(S)                             06240000
OLTEPSW  EQU   CESWT+00000000      1 BYTE(S)                            06250000
A00011   EQU   OLTEPSW+00000000    1 BIT(S)                             06260000
PROTECT  EQU   OLTEPSW+00000000    1 BIT(S)                             06270000
@DATEND  EQU   *                                                        06280000
         END                                                            06290000
./  ADD  SSI=40871601,NAME=IFDOLT22
         TITLE 'IFDOLT22 ALLOCATE MODULE'                               00010000
         TITLE 'IFDOLT22 ALLOCATE MODULE'                               00020000
         PRINT OFF                                                      00030000
         MACRO                                                          00040000
&NAME   ALOCAT &CDSADR=0,&TYPE=,&SCRATCH=,&MF=,&MAP=NO,&LSTNAME=        00050000
.*                                                                      00060000
         GBLB  &EXECUTV,&E536454                                        00070000
         LCLA  &A,&B,&COUNT                                             00080000
         LCLB  &SWITCH,&B1,&B2,&B3                                      00090000
         LCLC  &F,&Z,&CHAR                                              00100000
.*                                                                      00110000
         AIF   ('&MAP' EQ 'YES').MAP1                                   00120000
         AIF   (T'&MF EQ 'O').STD                                       00130000
         AIF   ('&MF' EQ 'L' OR '&MF' EQ 'S').STD                       00140000
         AIF   ('&MF'(1,3) NE '(E,').MFERROR                            00150000
&CHAR    SETC  '&NAME'                                                  00160000
         AIF   ('&MF'(4,3) EQ '(1)').RG1                                00170000
         AIF   ('&MF'(4,1) EQ '(').RG2                                  00180000
&CHAR    LA    R1,&MF(2) .         ADDRESS OF PARAMETER LIST            00190000
&CHAR    SETC  ' '                                                      00200000
         AGO   .RG1                                                     00210000
.RG2     ANOP                                                           00220000
&COUNT   SETA  K'&MF(2)-2                                               00230000
&F       SETC  '&MF(2)'(2,&COUNT)                                       00240000
         AIF   ('&F'(1,1) EQ 'R').C724                                  00250000
&CHAR    LR    R1,R&F .            ADDRESS OF PARAMETER LIST            00260000
&CHAR    SETC  ' '                                                      00270000
         AGO   .RG1                                                     00280000
.C724    ANOP                                                           00290000
&CHAR    LR    R1,&F .             ADDRESS OF PARAMETER LIST            00300000
&CHAR    SETC  ' '                                                      00310000
.RG1     ANOP                                                           00320000
&CHAR    BAL   R14,#EXIT .        BRANCH TO LINKAGE SUBROUTINE          00330000
         MEXIT                                                          00340000
.MFERROR MNOTE 8,'MF VALUE (&MF) INCORRECT, NO STATEMENTS GENERATED.'   00350000
         MEXIT                                                          00360000
.STD     ANOP                                                           00370000
&B1      SETB  (N'&TYPE GT 0)                                           00380000
&B2      SETB  (T'&SCRATCH NE 'O')                                      00390000
         AIF   (&B1+&B2 EQ 2).ERR                                       00400000
         AIF   (&B1).ALO                                                00410000
         AIF   (&B2).ALO2                                               00420000
         AGO   .ALO3                                                    00430000
.ALO     ANOP                                                           00440000
         AIF   (N'&TYPE NE 3).ERR1                                      00450000
&A       SETA  1                                                        00460000
.TST1    ANOP                                                           00470000
         AIF   (K'&TYPE(2) EQ 0).ERR2                                   00480000
.TST2    ANOP                                                           00490000
         AIF   (K'&TYPE(3) EQ 0).ERR3                                   00500000
         AIF   (&B3).EXIT                                               00510000
         AIF   ('&TYPE(1)' NE 'CYL').ALO1                               00520000
&B       SETA  200                                                      00530000
         AGO   .ALO3                                                    00540000
.ALO1    ANOP                                                           00550000
         AIF   (K'&TYPE(1) EQ 0 OR '&TYPE(1)' EQ 'TRK').ALO1A           00560000
         MNOTE 8,'TYPE= PARAMETER INCORRECTLY SPECIFIED.'               00570000
&B3      SETB  1                                                        00580000
.ALO1A   ANOP                                                           00590000
&B       SETA  136                                                      00600000
         AGO   .ALO3                                                    00610000
.ALO2    ANOP                                                           00620000
&A       SETA  2                                                        00630000
.ALO3    ANOP                                                           00640000
         AIF   ('&MF' EQ 'L').LIST                                      00650000
&NAME    LA    R14,R&SYSNDX .     RETURN ADDRESS                        00660000
         CNOP  0,4                                                      00670000
         BAL   R1,#EXIT .          BRANCH TO LINKAGE SUBROUTINE         00680000
&CHAR    SETC  '&LSTNAME'                                               00690000
         AGO   .STD1                                                    00700000
.LIST    ANOP                                                           00710000
&CHAR    SETC  '&NAME'                                                  00720000
.STD1    ANOP                                                           00730000
         AIF   (&EXECUTV).OLTSEP                                        00740000
&CHAR    DC    B'00000000' .       CONTROL PROGRAM FLAGS                00750000
         AGO   .OLTSEP1                                                 00760000
.OLTSEP  ANOP                                                           00770000
&CHAR    DC    B'00000001' .       CONTROL PROGRAM FLAGS                00780000
.OLTSEP1 ANOP                                                           00790000
         DC    AL1(2) .            MACRO LEVEL                          00800000
         DC    CL2'22' .           MACRO ID                             00810000
         DC    A(&CDSADR) .        ADDRESS OF CDS INFO                  00820000
         AIF   (&B1).ALO4                                               00830000
         DC    A(0) .              ADDRESS OF EXTENTS                   00840000
         AGO   .ALO5                                                    00850000
.ALO4    ANOP                                                           00860000
         DC    A(&TYPE(3)) .       ADDRESS OF EXTENTS                   00870000
.ALO5    ANOP                                                           00880000
         AIF   (&B1).ALO6                                               00890000
         DC    AL3(0)              AMOUNT OF SPACE REQUIRED             00900000
         AGO   .ALO7                                                    00910000
.ALO6    ANOP                                                           00920000
         DC    AL3(&TYPE(2)) .     AMOUNT OF SPACE REQUIRED             00930000
.ALO7    ANOP                                                           00940000
         DC    AL1(&B) .           TYPE                                 00950000
*                                                                       00960000
*                                  TYPE FLAGS DEFINITION:               00970000
*                                  200  CYL                             00980000
*                                  136  TRK                             00990000
*                                                                       01000000
         DC    AL1(&A) .           FUNCTION FLAGS                       01010000
*                                                                       01020000
*                                  FUNCTION FLAGS DEFINITION:           01030000
*                                  0  DEMOUNTABLE ALLOCATION            01040000
*                                  1  ALLOCATE                          01050000
*                                  2  SCRATCH                           01060000
         AIF   ('&MF' EQ 'L').EXIT                                      01070000
R&SYSNDX DS    0H .                RETURN ON HALFWORD BOUNDARY          01080000
         AGO   .EXIT                                                    01090000
.ERR     MNOTE 8,'TYPE= AND SCRATCH= MAY NOT BE USED TOGETHER.'         01100000
&B3      SETB  1                                                        01110000
         AGO   .ALO                                                     01120000
.ERR1    MNOTE 8,'TYPE= PARAMETER INCORRECTLY SPECIFIED.'               01130000
&B3      SETB  1                                                        01140000
         AGO   .TST1                                                    01150000
.ERR2    MNOTE 8,'AMOUNT MUST BE SPECIFIED WHEN USING TYPE=.'           01160000
&B3      SETB  1                                                        01170000
         AGO   .TST2                                                    01180000
.ERR3    MNOTE 8,'EXTENT ADDRESS MUST BE SPECIFIED WHEN USING TYPE=.'   01190000
         MEXIT                                                          01200000
.MAP1    ANOP                                                           01210000
ALOMAP   DSECT                                                          01220000
&Z       SETC  '$'                                                      01230000
         AIF   (&E536454).ZIPPER                                        01240000
         DC    XL1'0' .            CONTROL PROGRAM FLAGS                01250000
         DC    XL1'0' .            MACROL LEVEL                         01260000
         DC    XL2'0' .            MACROL ID                            01270000
         AGO   .ZIPPED                                                  01280000
.ZIPPER  ANOP                                                           01290000
&Z.ALTORMG DC  XL1'0' .            CONTROL PROGRAM FLAGS                01300000
&Z.ALOLEVL DC  XL1'0' .            MACRO LEVEL                          01310000
&Z.ALOIDNT DC  XL2'0' .            MACRO ID                             01320000
.ZIPPED  ANOP                                                           01330000
&Z.ALOCDSA DC  A(0) .              ADDRESS OF CDS INFO                  01340000
&Z.ALOCADR DC  A(0) .              ADDRESS OF EXTENTS                   01350000
&Z.ALOAMT  DC  XL3'0' .            AMOUNT OF SPACE REQUIRED             01360000
&Z.ALOFLGT DC  XL1'0' .            TYPE                                 01370000
&Z.ALOFLAG DC  XL1'0' .            FUNCTION FLAGS                       01380000
.EXIT    MEND                                                           01390000
         EJECT                                                          01400000
         PRINT ON                                                       01410000
         LCLA  &T,&SPN                                            0003  01420000
.@001    ANOP                                                     0003  01430000
IFDOLT22 CSECT ,                                                  0003  01440000
         BC    15,24(0,@F)                                              01450000
         DC    C'IFDOLT22 29 MAR 74'                             0003  01460000
         ST    @E,12(0,@D)                                        0003  01470000
         STM   @0,@C,20(@D)                                       0003  01480000
         BALR  @B,0                                               0003  01490000
@PSTART  DS    0H                                                 0003  01500000
         USING @PSTART+00000,@B                                   0003  01510000
         ST    @D,@SAV001+4                                       0003  01520000
         LA    @F,@SAV001                                         0003  01530000
         ST    @F,8(0,@D)                                         0003  01540000
         LR    @D,@F                                              0003  01550000
DIAG     EQU   59                                                       01560000
THREETWO EQU   32                                                       01570000
         USING ALOMAP,5                                                 01580000
         USING CHASCT,2                                                 01590000
         DS    0H                                                       01600000
*         R5=R1;                    /* SAVE REG. 1 IN REG. 5.         * 01610000
         LR    @5,@1                                              0073  01620000
*         R9=ADDR(IFDMSG22);        /* POINTER TO MESSAGE MODULE 21050* 01630000
         L     @C,@V1              ADDRESS OF IFDMSG22            0074  01640000
         LR    @9,@C                                              0074  01650000
*         R7=UNICTR;                /* GET NUMBER OF DEVICES UNDER TST* 01660000
         SR    @7,@7                                              0075  01670000
         IC    @7,UNICTR                                          0075  01680000
*         R3=DEVTBPTR;              /* INITIALIZE DEVTAB POINTER      * 01690000
         L     @3,DEVTBPTR                                        0076  01700000
*         ALOCATSW='00'X;           /* CLEAR IFDOLT22'S FLAGS AND     * 01710000
         MVI   ALOCATSW,X'00'                                     0077  01720000
*                                   /* DECODE PARAMETERS.             * 01730000
*         IF RETAINAC='1'B THEN          /* IS REI ACTIVE?      S20203* 01740000
         TM    A00019,B'10000000'                                 0078  01750000
         BC    12,@9FF                                            0078  01760000
*         DPMSGREI='1'B;                /* REM SITE GETS MSG    XM0097* 01770000
         OI    A00022,B'00000001'                                 0079  01780000
* ALOCAT05:                                                             01790000
*         IF STAEXIT='1'B THEN      /* IS STAE EXIT IN CONTROL.       * 01800000
@9FF     EQU   *                                                  0080  01810000
ALOCAT05 TM    OLTEPSW6,B'00000001'                               0080  01820000
         BC    12,@9FE                                            0080  01830000
*           DO;                     /* YES,                           * 01840000
*           IF NDR='1'B THEN        /* ARE THERE DEVICES ENTERED.     * 01850000
         TM    OLTEPSW2,B'00000100'                               0082  01860000
*             GO TO ALOCAT50;       /* NO, RETURN TO STAE EXIT ROUTINE* 01870000
         BC    01,ALOCAT50                                        0083  01880000
*           IF ALLOCATE='0'B THEN   /* WAS THIS DEVICE ALLOCATED.     * 01890000
         TM    12(@3),B'00001000'                                 0084  01900000
         BC    05,@9FD                                            0084  01910000
*             DO;                   /* NO,                            * 01920000
*             R7=R7-1;              /* DECREMENT NUMBER OF DEVICES.   * 01930000
         BCTR  @7,0                                               0086  01940000
*             R3=R3+56;             /* POINT TO NEXT DEVICE      21050* 01950000
         AH    @3,@D1                                             0087  01960000
*                                   /* IN TABLE.                 21050* 01970000
*             IF R7=0 THEN          /* ARE ALL DEVICES CHECKED.       * 01980000
         LTR   @7,@7                                              0088  01990000
*               GO TO ALOCAT50;     /* YES, RETURN TO STAE EXIT.      * 02000000
         BC    08,ALOCAT50                                        0089  02010000
*             GO TO ALOCAT05;       /* CHECK NEXT DEVICE.             * 02020000
         BC    15,ALOCAT05                                        0090  02030000
*             END;                                                      02040000
*             UNUNIT1(5:14)=DDNAME(ALCINDEX); /* PUT DDNAME     YM7637* 02050000
@9FD     SR    @C,@C                                              0092  02060000
         IC    @C,54(0,@3)                                        0092  02070000
         MH    @C,@D2                                             0092  02080000
         LA    @E,DDNAME-10(@C)                                   0092  02090000
         MVC   UNTUNIT+4(10),0(@E)                                0092  02100000
*                                        /* IN DYN UNALLOC PLISTYM7637* 02110000
*           GO TO ALOCAT10;         /* DEVICE WAS ALLOCATED.          * 02120000
         BC    15,ALOCAT10                                        0093  02130000
*           END;                                                        02140000
*         IF ALOLEVL¬='02'X|        /* IS THIS MACRO LEVEL SUPPORTED. * 02150000
*           NDR='1'B THEN           /* NO, RETURN CODE 04. ARE DEVICES* 02160000
@9FE     CLI   ALOLEVL,X'02'                                      0095  02170000
         BC    07,@9FC                                            0095  02180000
         TM    OLTEPSW2,B'00000100'                               0095  02190000
         BC    12,@9FB                                            0095  02200000
*             GO TO ALOCAT52;       /* ENTERED. NO, RETURN CODE 04.   * 02210000
         BC    03,ALOCAT52                                        0096  02220000
*         IF ALOCDSA=0 THEN         /* FIND THE DEVICE ADDRESS THAT   * 02230000
@9FB     SR    @F,@F                                              0097  02240000
         C     @F,ALOCDSA                                         0097  02250000
         BC    07,@9FA                                            0097  02260000
*           DO;                     /* WANTS ALLOCATION.              * 02270000
*           R3=PRIDVPTR;            /* PRIMARY ALLOCATION, GET POINTER* 02280000
         L     @3,PRIDVPTR                                        0099  02290000
*           GO TO ALOCAT10;         /* FROM COMMON AREA.              * 02300000
         BC    15,ALOCAT10                                        0100  02310000
*           END;                                                        02320000
*         DO I=R7 TO 1 BY -1;       /* SECONDARY ALLOCATION, FIND21050* 02330000
@9FA     LR    @4,@7                                              0102  02340000
         LTR   @4,@4                                              0102  02350000
         BC    12,@DO9F8                                          0102  02360000
*         IF CDSDEVAD=DEVAD THEN    /* ENTRY IN DEVTABLE THAT MATCHES * 02370000
@DO9F9   L     @C,ALOCDSA                                         0103  02380000
         CLC   0(4,@C),32(@3)                                     0103  02390000
         BC    07,@9F5                                            0103  02400000
*           DO;                     /* DEVICE REQUESTING THE          * 02410000
*           IF GRABBED='1'B|        /* ALLOCATION. IS IT THE     21050* 02420000
*              PRIMARY='1'B THEN    /* RIGHT MATCH. YES,         21050* 02430000
         TM    12(@3),B'00000100'                                 0105  02440000
         BC    01,@9F4                                            0105  02450000
         TM    12(@3),B'01000000'                                 0105  02460000
         BC    12,@9F3                                            0105  02470000
*                GO TO ALOCAT10;    /* CONTINUE. NO, FIND RIGHT  21050* 02480000
         BC    03,ALOCAT10                                        0106  02490000
*           END;                    /* DEVICE.                   21050* 02500000
@9F3     EQU   *                                                  0107  02510000
*         R3=R3+56;                 /* CHECK NEXT DEVICE IN      21050* 02520000
@9F5     AH    @3,@D1                                             0108  02530000
*                                   /* DEVICE TABLE.             21050* 02540000
*         END;                                                          02550000
*         GO TO ALOCAT52;           /* RETURN CODE 04.                * 02560000
         BCT   @4,@DO9F9                                          0109  02570000
         BC    15,ALOCAT52                                        0110  02580000
* ALOCAT10:                                                             02590000
*         /************************************************************ 02600000
*         /*             ROUTINE TO CHECK DEVICE STATUS               * 02610000
*         /************************************************************ 02620000
*         R8=UCBPTR;                /* GET POINTER TO UCB.       21050* 02630000
ALOCAT10 L     @8,8(0,@3)                                         0111  02640000
*         ROPTMIN2='22';            /* SET UP TO PASS SVC SECURITY.   * 02650000
         MVC   ROPTMIN2(2),@C5                                    0112  02660000
*         UCBADDRS=UCBADDR;         /* PUT DEVICE REQUESTING          * 02670000
         MVC   SVCPLIST(4),8(@3)                                  0113  02680000
*                                   /* ALLOCATION UCB ADDRESS IN FIRST* 02690000
*                                   /* WORD OF SVC PARAMETER LIST.    * 02700000
*         R0=ADDR(ROPT);            /* INITIALIZE POINTER TO SVCPLIST.* 02710000
         LA    @0,ROPT                                            0114  02720000
*         R1='003C'X;               /* PUT PROPER CALL CODE IN  YM7282* 02730000
         L     @1,@X6                                             0115  02740000
*                                   /* REG. 1 FOR SVC CALL.           * 02750000
*         GEN(SVC   DIAG);          /* ISSUE SVC FOR DEVICE STATUS.   * 02760000
         SVC   DIAG                                                     02770000
         DS    0H                                                       02780000
*         IF STAEXIT='1'B THEN      /* IS STAE EXIT IN CONTROL.       * 02790000
         TM    OLTEPSW6,B'00000001'                               0117  02800000
*           GO TO ALOCAT42;         /* YES, PERFORM SCRATCH.          * 02810000
         BC    01,ALOCAT42                                        0118  02820000
*         IF STATUS='1'B&           /* CHECK TO MAKE SURE DEVICE 21050* 02830000
*           DEVSTAT='1'B THEN       /* STATUS HAS NOT CHANGED,   21050* 02840000
         TM    3(@8),B'10000000'                                  0119  02850000
         BC    12,@9F2                                            0119  02860000
         TM    12(@3),B'10000000'                                 0119  02870000
*             GO TO ALOCAT20;       /* SINCE TEST RUN DEFINITION 21050* 02880000
         BC    03,ALOCAT20                                        0120  02890000
*         IF STATUS='0'B&           /* TIME.                     21050* 02900000
*           DEVSTAT='0'B THEN       /*                           21050* 02910000
@9F1     EQU   *                                                  0121  02920000
@9F2     TM    3(@8),B'10000000'                                  0121  02930000
         BC    05,@9F0                                            0121  02940000
         TM    12(@3),B'10000000'                                 0121  02950000
*             GO TO ALOCAT20;       /*                           21050* 02960000
         BC    10,ALOCAT20                                        0122  02970000
*         /************************************************************ 02980000
*         /*     PWTO MESSAGE INDICATING DEVICE STATUS CHANGED.       * 02990000
*         /************************************************************ 03000000
*         R1=MSGPTR56;              /* GET POINTER TO MESSAGE IFD156I.* 03010000
@9EF     EQU   *                                                  0123  03020000
@9F0     L     @1,8(0,@9)                                         0123  03030000
*         MSG56I(16:23)=EBCDICAD;   /* PUT EBCDIC DEVICE ADDR IN 21050* 03040000
         MVC   19(8,@1),0(@3)                                     0124  03050000
*                                   /* MESSAGE.                       * 03060000
*         GEN(PWTO  REG=(1));       /* PRINT MESSAGE.                 * 03070000
         PWTO  REG=(1)                                                  03080000
         DS    0H                                                       03090000
*         BYPTST='1'B;              /* SET FLAG TO BYPASS TESTS.      * 03100000
         OI    OLTEPSW3,B'00100000'                               0126  03110000
*         SAVE4=SCHEDSA;            /* GET SET TO RETURN TO SCHEDULER.* 03120000
         MVC   4(4,@D),SCHEDSA                                    0127  03130000
*         GO TO ALOCAT60;           /* RETURN TO SCHEDULER.           * 03140000
         BC    15,ALOCAT60                                        0128  03150000
* ALOCAT20:                                                             03160000
*         /************************************************************ 03170000
*         /*            DETERMINE WHAT IS REQUESTED BY USER           * 03180000
*         /************************************************************ 03190000
*         IF CLASS¬='20'X THEN      /* IS DEVICE DASD. NO, RETURN21050* 03200000
ALOCAT20 CLI   18(@8),X'20'                                       0129  03210000
*           GO TO ALOCAT52;         /* CODE 04.                  21050* 03220000
         BC    07,ALOCAT52                                        0130  03230000
*         IF TYPE>'05'X&            /* LEGAL DEVICE              01906* 03240000
*           TYPE<'10'X THEN         /*                           21050* 03250000
         CLI   19(@8),X'05'                                       0131  03260000
         BC    12,@9EE                                            0131  03270000
         CLI   19(@8),X'10'                                       0131  03280000
*             GO TO ALOCAT22;       /*                           21050* 03290000
         BC    05,ALOCAT22                                        0132  03300000
*         GO TO ALOCAT52;           /*                           21050* 03310000
         BC    15,ALOCAT52                                        0133  03320000
* ALOCAT22:                                                             03330000
*         IF ALCINDEX='00'X THEN    /* HAS THIS BEEN ALLOCATED  YM7282* 03340000
ALOCAT22 CLI   54(@3),X'00'                                       0134  03350000
*           GO TO ALOCAT34;         /* PREVIOUSLY. NO, CONTINUE YM7282* 03360000
         BC    08,ALOCAT34                                        0135  03370000
*                                   /* YES, PLACE DDNAME IN SVC YM7282* 03380000
*                                   /* 99 PLIST FOR UNALLOC     YM7282* 03390000
*         UNUNIT1(5:14)=DDNAME(ALCINDEX); /*                    YM7282* 03400000
         SR    @C,@C                                              0136  03410000
         IC    @C,54(0,@3)                                        0136  03420000
         MH    @C,@D2                                             0136  03430000
         LA    @E,DDNAME-10(@C)                                   0136  03440000
         MVC   UNTUNIT+4(10),0(@E)                                0136  03450000
* ALOCAT34:                         /*                          YM7282* 03460000
*         IF ALOFLAG='02'X THEN     /* IS A SCRATCH REQUESTED.        * 03470000
ALOCAT34 CLI   ALOFLAG,X'02'                                      0137  03480000
*           GO TO ALOCAT40;         /* YES, GO TO SCRATCH ROUTINE.    * 03490000
         BC    08,ALOCAT40                                        0138  03500000
*         IF ALOFLAG='01'X THEN     /* IS ALLOCATION FOR NON-DEMOUNT- * 03510000
         CLI   ALOFLAG,X'01'                                      0139  03520000
*           GO TO ALOCAT30;         /* ABLES. YES, GO TO ROUTINE FOR  * 03530000
         BC    08,ALOCAT30                                        0140  03540000
*                                   /* NON-DEMOUNTABLE ALLOCATION.    * 03550000
*         IF ALOFLAG¬='00'X THEN    /* IS REQUEST FOR FULL EXTENTS    * 03560000
         CLI   ALOFLAG,X'00'                                      0141  03570000
*           GO TO ALOCAT52;         /* DEMOUNTABLE ALLOCATION. NO,    * 03580000
         BC    07,ALOCAT52                                        0142  03590000
*                                   /* RETURN CODE 04.                * 03600000
*         /************************************************************ 03610000
*         /*                                                          * 03620000
*         /*                 DEMOUNTABLE ALLOCATION                   * 03630000
*         /*                                                          * 03640000
*         /************************************************************ 03650000
* ALOCAT21:                                                             03660000
*         IF FPMODE='0'B THEN       /* IS FILE PROTECT MODE PRESENT.  * 03670000
ALOCAT21 TM    12(@3),B'00000010'                                 0143  03680000
*           GO TO ALOCAT50;         /* RETURN CODE 00 TO INDICATE ALL * 03690000
         BC    08,ALOCAT50                                        0144  03700000
*                                   /* OF VOLUME AVAILABLE AND NOT    * 03710000
*                                   /* FILE PROTECTED.                * 03720000
*         IF DEVSTAT='1'B THEN      /* IS VOLUME ON-LINE. YES, RETURN * 03730000
         TM    12(@3),B'10000000'                                 0145  03740000
*           GO TO ALOCAT58;         /* CODE 10 TO INDICATE SPACE NOT  * 03750000
         BC    01,ALOCAT58                                        0146  03760000
*                                   /* ALLOCATED AND VOLUME FILE      * 03770000
*                                   /* PROTECTED.                     * 03780000
* ALOCAT25:                                                             03790000
*         IF FEATURES(3)='1'B THEN  /* IS DEVICE BEING SHARED.   21050* 03800000
ALOCAT25 TM    17(@8),B'00100000'                                 0147  03810000
         BC    12,@9EC                                            0147  03820000
*                                   /* YES,                      21050* 03830000
*           DO;                     /* FIND OUT IF IT IS OFF-LINE IN  * 03840000
*           RESPAREA=RESPAREA&&RESPAREA; /* OTHER SYSTEMS. CLEAR 21050* 03850000
         XC    RESPAREA(7),RESPAREA                               0149  03860000
*                                        /* THE ECB AND REPBUF.  21050* 03870000
*           R1=MSGPTR45;            /* GET POINTER TO MESSAGE IFD145D.* 03880000
         L     @1,4(0,@9)                                         0150  03890000
*           WTORPRF2=WTORLIST;      /* PUT NECESSARY INFORMATION IN   * 03900000
         MVC   0(8,@1),WTORLIST                                   0151  03910000
*                                   /* WTOR EXPANSION.                * 03920000
*           MSG45D(12:19)=EBCDICAD; /* PUT EBCDIC DEVICE ADDR IN 21050* 03930000
         MVC   23(8,@1),0(@3)                                     0152  03940000
*                                   /* MESSAGE.                       * 03950000
*           GEN(PWTOR REG=(1),WAIT=YES);                                03960000
         PWTOR REG=(1),WAIT=YES                                         03970000
         DS    0H                                                       03980000
*           IF REPBUF(1)='N' THEN   /* WAS DEV OFFLINE EVERYWHERE21050* 03990000
         CLI   RESPAREA+4,C'N'                                    0154  04000000
*             GO TO ALOCAT58;       /* NO, RETURN CODE 10.            * 04010000
         BC    08,ALOCAT58                                        0155  04020000
*           IF REPBUF(1)¬='Y' THEN  /* WAS REPLY YES. NO, REPEAT21050*/ 04030000
         CLI   RESPAREA+4,C'Y'                                    0156  04040000
*             GO TO ALOCAT25;       /* THE MESSAGE. YES, CONTINUE.    * 04050000
         BC    07,ALOCAT25                                        0157  04060000
*           END;                                                        04070000
*         /************************************************************ 04080000
*         /*         CAN DATA ON THIS DEVICE BE DESTROYED.            * 04090000
*         /************************************************************ 04100000
* ALOCAT28:                                                             04110000
*         RESPAREA=RESPAREA&&RESPAREA; /* CLEAR ECB AND REPBUF.  21050* 04120000
@9EC     EQU   *                                                  0159  04130000
ALOCAT28 XC    RESPAREA(7),RESPAREA                               0159  04140000
*         R1=MSGPTR20;              /* GET POINTER TO MESSAGE IFD120D.* 04150000
         L     @1,0(0,@9)                                         0160  04160000
*         WTORPRF1=WTORLIST;        /* PUT NECESSARY INFORMATION IN   * 04170000
         MVC   0(8,@1),WTORLIST                                   0161  04180000
*                                   /* WTOR EXPANSION.                * 04190000
*         MSG20D(25:32)=EBCDICAD;   /* PUT EBCDIC DEVICE ADDR IN 21050* 04200000
         MVC   36(8,@1),0(@3)                                     0162  04210000
*                                   /* MESSAGE.                       * 04220000
*         GEN(PWTOR REG=(1),WAIT=YES);                                  04230000
         PWTOR REG=(1),WAIT=YES                                         04240000
         DS    0H                                                       04250000
*         IF REPBUF(1)='N' THEN     /* CAN DATA BE DESTROYED. NO,21050* 04260000
         CLI   RESPAREA+4,C'N'                                    0164  04270000
*           GO TO ALOCAT58;         /* RETURN CODE 10.                * 04280000
         BC    08,ALOCAT58                                        0165  04290000
*         IF REPBUF(1)¬='Y' THEN    /* WAS REPLY YES. NO,REPEAT  21050* 04300000
         CLI   RESPAREA+4,C'Y'                                    0166  04310000
*           GO TO ALOCAT28;         /* MESSAGE. YES, CONTINUE.        * 04320000
         BC    07,ALOCAT28                                        0167  04330000
*         FPMODE='0'B;              /* TURN OFF FILE-PROTECT FLAG IN  * 04340000
         NI    12(@3),B'11111101'                                 0168  04350000
*                                   /* DEVTABLE ENTRY.                * 04360000
*         CDSFPM='0'B;              /* TURN OFF FPM FLAG IN CDS. 21050* 04370000
         NI    41(@3),B'01111111'                                 0169  04380000
*         IF PRIMARY='1'B THEN      /* IS ALLOCATION FOR PRIMARY      * 04390000
         TM    12(@3),B'01000000'                                 0170  04400000
         BC    12,@9EB                                            0170  04410000
*           DO;                     /* DEVICE. YES, TURN FILE PROTECT * 04420000
*           FILEPROT='0'B;          /* FLAGS OFF IN THE SCT.          * 04430000
         NI    SCT+10,B'10111111'                                 0172  04440000
*           FPMODCDS='0'B;                                              04450000
         NI    SCT+11,B'01111111'                                 0173  04460000
*           END;                                                        04470000
*                                   /* FLAG OFF IN THE SCT.           * 04480000
*         GO TO ALOCAT50;           /* RETURN CODE 00 INDICATING ALL  * 04490000
         BC    15,ALOCAT50                                        0175  04500000
*                                   /* OF VOLUME AVAILABLE AND NOT    * 04510000
*                                   /* FILE PROTECTED.                * 04520000
* ALOCAT30:                                                             04530000
*         /************************************************************ 04540000
*         /*                                                          * 04550000
*         /*               NON-DEMOUNTABLE ALLOCATION                 * 04560000
*         /*                                                          * 04570000
*         /************************************************************ 04580000
*         IF TYPE='08'X  |          /* CAN ALLOCATE ON 2314 DEV X03008* 04590000
*            TYPE='09'X  |          /* ON A 3330 DEVICE         X30008* 04600000
*            TYPE='0A'X  |          /* ON A WINCHESTER DEV    XL030130* 04610000
*            TYPE='0D'X             /* ON AN ICEBERG DEVICE     X03008* 04620000
*             THEN                  /* NO, CANNOT ALLOCATE      X03008* 04630000
ALOCAT30 CLI   19(@8),X'08'                                       0176  04640000
         BC    08,@9EA                                            0176  04650000
         CLI   19(@8),X'09'                                       0176  04660000
         BC    08,@9E9                                            0176  04670000
         CLI   19(@8),X'0A'                                       0176  04680000
         BC    08,@9E8                                            0176  04690000
         CLI   19(@8),X'0D'                                       0176  04700000
         BC    07,@9E7                                            0176  04710000
*              GO TO ALOCAT52;      /* ON THIS DEVICE TYPE.     X03008* 04720000
         BC    08,ALOCAT52                                        0177  04730000
* ALOCAT32:                                                             04740000
*         IF DEVSTAT='0'B THEN      /* IS DEVICE OFFLINE        YM7282* 04750000
@9E7     EQU   *                                                  0178  04760000
ALOCAT32 TM    12(@3),B'10000000'                                 0178  04770000
*           GO TO ALOCAT58;         /* YES, SPACE NOT ALLOCATED YM7282* 04780000
         BC    08,ALOCAT58                                        0179  04790000
*         IF FPMODE='0'B THEN       /* IS DEVICE FILE PROTECTED. NO,  * 04800000
         TM    12(@3),B'00000010'                                 0180  04810000
         BC    05,@9E6                                            0180  04820000
*           DO;                     /* HAS IT ALREADY BEEN ALLOCATED. * 04830000
*           IF ALLOCATE='0'B THEN   /* NO, RETURN CODE 00. YES, SET   * 04840000
         TM    12(@3),B'00001000'                                 0182  04850000
*             GO TO ALOCAT50;       /* BIT IN ALLOCATE FLAGS TO SAY   * 04860000
         BC    08,ALOCAT50                                        0183  04870000
*           REALOCAT='1'B;          /* RE-ALLOCATION IS NECESSARY.    * 04880000
         OI    ALOCATSW,B'10000000'                               0184  04890000
*           END;                                                        04900000
*         /************************************************************ 04910000
*         /*               BUILD DYN ALLOC TEXT UNITS           YM7282* 04920000
*         /************************************************************ 04930000
*         IF ALOAMT=ZERO THEN       /* IS AMOUNT OF SPACE REQUIRED 0. * 04940000
@9E6     CLC   ALOAMT(3),FULL                                     0186  04950000
*           GO TO ALOCAT52;         /* YES, RETURN CODE 04. NO, BUILD * 04960000
         BC    08,ALOCAT52                                        0187  04970000
*                                   /* SVC 99 PARMLIST.         YM7282* 04980000
*         ALCU6PRM=ALOAMT;          /* PUT AMOUNT OF SPACE      YM7282* 04990000
         MVC   ALCTUNIT+81(3),ALOAMT                              0188  05000000
*                                   /* REQUESTED IN SVC 99 PLISTYM7282* 05010000
*         ALCU8PRM=EBCDICAD(6:8);   /* PLACE EBCDIC DEVICE ADDR YM7282* 05020000
         MVC   ALCTUNIT+97(3),5(@3)                               0189  05030000
*                                   /* IN SVC 99 PLIST          YM7282* 05040000
*         ALCU8PRM(3)=ALCU8PRM(3)&'F8'X; /* MAKE SURE EBCDIC    YM7282* 05050000
         NI    ALCTUNIT+99,X'F8'                                  0190  05060000
*                                   /* ADDR IS BASE ADDR        YM7282* 05070000
*         ALCTYPE(2)='07'X;         /* ASSUME TRK ALLOCATION    YM7282* 05080000
         MVI   ALCTUNIT+72,X'07'                                  0191  05090000
*         IF ALOFLGT¬='88'X THEN    /* IS IT TRK REQUEST        YM7282* 05100000
         CLI   ALOFLGT,X'88'                                      0192  05110000
         BC    08,@9E5                                            0192  05120000
*           ALCTYPE(2)='08'X;       /* NO, INDICATE CYL ALLOC   YM7282* 05130000
         MVI   ALCTUNIT+72,X'08'                                  0193  05140000
*         ALCU9LNG(2)='08'X;        /* INSURE RETURN OF DDNAME  YM7282* 05150000
@9E5     MVI   ALCTUNIT+105,X'08'                                 0194  05160000
*         ALCU9PRM=ALCU9PRM&&ALCU9PRM; /* FROM SVC 99.          YM7282* 05170000
         XC    ALCTUNIT+106(8),ALCTUNIT+106                       0195  05180000
*         ALCU1PRM(8)='1';          /* DSNAME FOR THIS ALLOCATE YM7282* 05190000
         MVI   ALCTUNIT+13,C'1'                                   0196  05200000
*         IF REALOCAT='1'B&         /* IF THIS IS A REQUEST FOR RE-   * 05210000
*           DSNAMEFF='1'B THEN      /* ALLOCATION AND EXISTING DSNAME * 05220000
         TM    ALOCATSW,B'10000000'                               0197  05230000
         BC    12,@9E4                                            0197  05240000
         TM    13(@3),B'10000000'                                 0197  05250000
         BC    12,@9E3                                            0197  05260000
*             ALCU1PRM(8)='2';      /* WAS OSOLTEP1, USE DSN=   YM7282* 05270000
         MVI   ALCTUNIT+13,C'2'                                   0198  05280000
*                                   /* TO OSOLTEP2.                   * 05290000
* ALOCAT35:                                                             05300000
*         /************************************************************ 05310000
*         /*         ISSUE SVC 99 FOR DYNAMIC ALLOCATION        YM7282* 05320000
*         /************************************************************ 05330000
*         S99RBPTR=ADDR(S99RBALC);  /* SET UP S99RBPTR          YM7282* 05340000
@9E3     EQU   *                                                  0199  05350000
@9E4     EQU   *                                                  0199  05360000
ALOCAT35 LA    @F,S99RBALC                                        0199  05370000
         ST    @F,S99RB                                           0199  05380000
*         S99RB(1)='80'X;           /* INSURE HIGH ORDER BIT    YM7282* 05390000
         MVI   S99RB,X'80'                                        0200  05400000
*                                   /* OF S99RBPTR IS ON.       YM7282* 05410000
*         R1=ADDR(S99RB);           /* INITIALIZE R1 TO POINT TOYM7282* 05420000
         LA    @1,S99RB                                           0201  05430000
*                                   /* RB PTR WORD.             YM7282* 05440000
*         GEN(SVC   99);            /* ATTEMPT ALLOCATION       YM7282* 05450000
         SVC   99                                                       05460000
         DS    0H                                                       05470000
*         IF RC¬=0 THEN             /* WAS ALLOC SUCCESSFUL     YM7282* 05480000
         LTR   @F,@F                                              0203  05490000
*           GO TO ALOCAT58;         /* NO, RETURN CODE 10, SPACEYM7282* 05500000
         BC    07,ALOCAT58                                        0204  05510000
*                                   /* REQUESTED NOT AVAILABLE  YM7282* 05520000
*         IF ALCINDEX¬='00'X THEN   /* IS THERE AN ENTRY IN     YM7282* 05530000
         CLI   54(@3),X'00'                                       0205  05540000
         BC    08,@9E2                                            0205  05550000
*                                   /* INDEX FLD OF DEVTAB      YM7282* 05560000
*           DO;                     /* YES, USE IT AS INDEX     YM7282* 05570000
*           R6=ALCINDEX;            /* PREPARE TO USE INDEX     YM7282* 05580000
         SR    @6,@6                                              0207  05590000
         IC    @6,54(0,@3)                                        0207  05600000
*           GO TO ALOCAT36;         /* SAVE NEW DDNAME          YM7282* 05610000
         BC    15,ALOCAT36                                        0208  05620000
*           END;                    /*                          YM7282* 05630000
*         DO R6=1 TO 16 BY +1;      /* FIND AVAILABLE SLOT IN   YM7282* 05640000
@9E2     LA    @6,1                                               0210  05650000
*         IF DDNAME(R6,2)='00'X THEN /* DDNAME SAVE AREA        YM7282* 05660000
@DO9E1   LR    @C,@6                                              0211  05670000
         MH    @C,@D2                                             0211  05680000
         LA    @A,DDNAME-9(@C)                                    0211  05690000
         CLI   0(@A),X'00'                                        0211  05700000
*           GO TO ALOCAT36;         /* SLOT FOUND, USE IT       YM7282* 05710000
         BC    08,ALOCAT36                                        0212  05720000
*         END;                      /* TRY AGAIN                YM7282* 05730000
*         GO TO ALOCAT58;           /* EXIT NO SLOT AVAILABLE   YM7282* 05740000
         AH    @6,@D3                                             0213  05750000
@DO9E0   CH    @6,@D4                                             0213  05760000
         BC    12,@DO9E1                                          0213  05770000
         BC    15,ALOCAT58                                        0214  05780000
* ALOCAT36:                         /*                          YM7282* 05790000
*         DDNAME(R6)=ALCUNIT9(5:14);/* SAVE DDNAME              YM7282* 05800000
ALOCAT36 LR    @C,@6                                              0215  05810000
         MH    @C,@D2                                             0215  05820000
         LA    @A,DDNAME-10(@C)                                   0215  05830000
         MVC   0(10,@A),ALCTUNIT+104                              0215  05840000
*         ALCINDEX=R6;              /* SAVE INDEX               YM7282* 05850000
         STC   @6,54(0,@3)                                        0216  05860000
*         /************************************************************ 05870000
*         /*         READ DATA SET CONTROL BLOCK INTO CORE            * 05880000
*         /************************************************************ 05890000
*         GEN(OBTAIN ALOCDSCB);     /* ISSUE OBTAIN MACRO.            * 05900000
         OBTAIN ALOCDSCB                                                05910000
         DS    0H                                                       05920000
*         IF RC¬=0 THEN             /* WAS OBTAIN SUCCESSFUL. NO,     * 05930000
         LTR   @F,@F                                              0218  05940000
*           GO TO ALOCAT58;         /* RETURN CODE 10.                * 05950000
         BC    07,ALOCAT58                                        0219  05960000
*         R4=ALOCADR;               /* PREPARE TO PUT EXTENTS IN U.T..* 05970000
         L     @4,ALOCADR                                         0220  05980000
*         BBSTRT=BBSTRT&&BBSTRT;    /* ZERO BIN ADDRESS, BOTH START   * 05990000
         XC    0(2,@4),0(@4)                                      0221  06000000
*         BBEND=BBSTRT;             /* AND END ADDRESS.               * 06010000
         MVC   8(2,@4),0(@4)                                      0222  06020000
*         CCHHSTRT=LOWLIMIT;        /* PUT START ADDRESS OF ALLOCATED * 06030000
         MVC   2(4,@4),WORKAREA+63                                0223  06040000
*                                   /* EXTENTS IN UNIT TEST AREA.     * 06050000
*         CCHHEND=UPLIMIT;          /* PUT END ADDRESS OF ALLOCATED   * 06060000
         MVC   10(4,@4),WORKAREA+67                               0224  06070000
*                                   /* EXTENTS IN UNIT TEST AREA.     * 06080000
*         STARTAD=STRTAD;           /* PUT START ADDRESS IN DEVTAB.   * 06090000
         MVC   16(6,@3),0(@4)                                     0225  06100000
*         ENDAD=CCHHEND;            /* PUT END ADDRESS IN DEVTAB.     * 06110000
         MVC   22(4,@3),10(@4)                                    0226  06120000
*         IF ALOFLGT='88'X THEN     /* WAS REQUEST FOR TRKS. YES, PUT * 06130000
         CLI   ALOFLGT,X'88'                                      0227  06140000
         BC    07,@9DD                                            0227  06150000
*           NOTRKS=ALOAMT(2:3);     /* AMOUNT IN DEVTAB. NO, REQUEST  * 06160000
         MVC   26(2,@3),ALOAMT+1                                  0228  06170000
         BC    15,@9DC                                            0229  06180000
*         ELSE                      /* WAS FOR CYLS. CALCULATE NUMBER * 06190000
*           DO;                     /* OF TRKS PER CYLINDER AND PUT   * 06200000
*           IF TYPE='02'X THEN      /* THAT IN DEVTAB.                * 06210000
@9DD     CLI   19(@8),X'02'                                       0230  06220000
         BC    07,@9DB                                            0230  06230000
*             DO;                   /*  2301 -- 1 CYL OF 200 TRKS.    * 06240000
*             NOTRKS='00C8'X;       /*  2303 -- 80 CYL OF 10 TRKS EACH* 06250000
         MVC   26(2,@3),@X22                                      0232  06260000
*             GO TO ALOCAT37;                                           06270000
         BC    15,ALOCAT37                                        0233  06280000
*             END;                                                      06290000
*           R4=ALOAMT(3)*10;        /* TAKE NUMBER OF CYL AND MULTIPLY* 06300000
@9DB     LA    @F,10                                              0235  06310000
         SR    @0,@0                                              0235  06320000
         IC    @0,ALOAMT+2                                        0235  06330000
         MR    @E,@0                                              0235  06340000
         LR    @4,@F                                              0235  06350000
*           NUMTRKS=R4;             /* BY TEN TO FIND NUMBER OF TRKS. * 06360000
         STH   @4,26(0,@3)                                        0236  06370000
*           END;                    /* PUT AMOUNT IN DEVTAB.          * 06380000
* ALOCAT37:                                                             06390000
*         IF REALOCAT='1'B THEN     /* IF THIS WAS REALLOCATION,      * 06400000
@9DC     EQU   *                                                  0238  06410000
ALOCAT37 TM    ALOCATSW,B'10000000'                               0238  06420000
*           GO TO ALOCAT40;         /* SCRATCH OTHER DSNAME.          * 06430000
         BC    01,ALOCAT40                                        0239  06440000
* ALOCAT38:                                                             06450000
*         DSNAMEFF='1'B;            /* FIRST ALLOCATE, TURN ON DSNAME * 06460000
ALOCAT38 OI    13(@3),B'10000000'                                 0240  06470000
*                                   /* ALLOCATE BIT IN DEVTAB.        * 06480000
*         FPMODE='0'B;              /* TURN OFF FILE PROTECT BITS.    * 06490000
         NI    12(@3),B'11111101'                                 0241  06500000
*         CDSFPM='0'B;              /*                           21050* 06510000
         NI    41(@3),B'01111111'                                 0242  06520000
*         IF PRIMARY='1'B THEN                                          06530000
         TM    12(@3),B'01000000'                                 0243  06540000
         BC    12,@9DA                                            0243  06550000
*           DO;                                                         06560000
*           FILEPROT='0'B;                                              06570000
         NI    SCT+10,B'10111111'                                 0245  06580000
*           FPMODCDS='0'B;                                              06590000
         NI    SCT+11,B'01111111'                                 0246  06600000
*           END;                                                        06610000
*         ALLOCATE='1'B;            /* TURN ALLOCATE BIT ON IN DEVTAB.* 06620000
@9DA     OI    12(@3),B'00001000'                                 0248  06630000
*         GO TO ALOCAT56;           /* RETURN CODE 0C.                * 06640000
         BC    15,ALOCAT56                                        0249  06650000
* ALOCAT40:                                                             06660000
*         /************************************************************ 06670000
*         /*                                                          * 06680000
*         /*                        SCRATCH                           * 06690000
*         /*                                                          * 06700000
*         /************************************************************ 06710000
*         IF TYPE='08'X  |          /* CAN ALLOCATE ON 2314 DEV X03008* 06720000
*            TYPE='09'X  |          /* ON A 3330 DEVICE         X30008* 06730000
*            TYPE='0A'X  |          /* ON A WINCHESTER DEV    XL030130* 06740000
*            TYPE='0D'X             /* ON AN ICEBERG DEVICE     X03008* 06750000
*             THEN                  /* NO, CANNOT ALLOCATE      X03008* 06760000
ALOCAT40 CLI   19(@8),X'08'                                       0250  06770000
         BC    08,@9D9                                            0250  06780000
         CLI   19(@8),X'09'                                       0250  06790000
         BC    08,@9D8                                            0250  06800000
         CLI   19(@8),X'0A'                                       0250  06810000
         BC    08,@9D7                                            0250  06820000
         CLI   19(@8),X'0D'                                       0250  06830000
         BC    07,@9D6                                            0250  06840000
*              GO TO ALOCAT51;      /* ON THIS DEVICE TYPE.     X03008* 06850000
         BC    08,ALOCAT51                                        0251  06860000
* ALOCAT42:                                                             06870000
*         IF ALLOCATE='0'B THEN     /* HAS DRUM BEEN ALLOCATED. NO,   * 06880000
@9D6     EQU   *                                                  0252  06890000
ALOCAT42 TM    12(@3),B'00001000'                                 0252  06900000
*  GO TO ALOCAT50;                 /* SET RETURN CODE = '00'          * 06910000
         BC    08,ALOCAT50                                        0253  06920000
* ALOCAT45:                                                             06930000
*         /************************************************************ 06940000
*         /*             ATTEMPT DYNAMIC UNALLOCATION           YM7282* 06950000
*         /************************************************************ 06960000
*         DO R6=3 TO 1 BY -1;       /* PERFORM SCRATCH.               * 06970000
ALOCAT45 LA    @6,3                                               0254  06980000
*         S99RBPTR=ADDR(S99RBUNA);  /* SET UP S99RBPTR          YM7282* 06990000
@DO9D5   LA    @F,S99RBUNA                                        0255  07000000
         ST    @F,S99RB                                           0255  07010000
*         S99RB(1)='80'X;           /* INSURE HIGH ORDER BIT    YM7282* 07020000
         MVI   S99RB,X'80'                                        0256  07030000
*                                   /* OF S99RBPTR IS ON.       YM7282* 07040000
*         R1=ADDR(S99RB);           /* INITIALIZE R1 TO POINT TOYM7282* 07050000
         LA    @1,S99RB                                           0257  07060000
*                                   /* RB PTR WORD.             YM7282* 07070000
*         GEN(SVC   99);            /* ATTEMPT UNALLOCATION     YM7282* 07080000
         SVC   99                                                       07090000
         DS    0H                                                       07100000
*         IF RC=0 THEN              /* WAS SCRATCH SUCCESSFUL. NO,    * 07110000
         LTR   @F,@F                                              0259  07120000
*           GO TO ALOCAT47;         /* REPEAT IT AT LEAST TWICE. IF   * 07130000
         BC    08,ALOCAT47                                        0260  07140000
*         END;                      /* IT CANNOT BE SCRATCHED, PRINT  * 07150000
*                                   /* ERROR MESSAGE.            21050* 07160000
*         R1=MSGPTR62;              /* GET POINTER TO MESSAGE IFD162I.* 07170000
         BCT   @6,@DO9D5                                          0261  07180000
         L     @1,12(0,@9)                                        0262  07190000
*         MSG62I(14:21)=EBCDICAD;   /* PUT DEVICE ADDR IN MESSAGE21050* 07200000
         MVC   17(8,@1),0(@3)                                     0263  07210000
*         MSG62I(31:37)=ALCU1PRM(1:7); /* DSN COMMON PART TO MSGYM7282* 07220000
         MVC   34(7,@1),ALCTUNIT+6                                0264  07230000
*         MSG62I(38)='1';           /* ASSUME OSOLTEP1          YM7282* 07240000
         MVI   41(@1),C'1'                                        0265  07250000
*         IF DSNAMEFF='0'B THEN     /* IS IT OSOLTEP1           YM7282* 07260000
         TM    13(@3),B'10000000'                                 0266  07270000
         BC    05,@9D1                                            0266  07280000
*           MSG62I(38)='2';         /* NO, SET UP OSOLTEP2      YM7282* 07290000
         MVI   41(@1),C'2'                                        0267  07300000
*         DPMSGREI='0'B;                /* TURN OFF REM MSG FLG XM0097* 07310000
@9D1     NI    A00022,B'11111110'                                 0268  07320000
*         GEN(PWTO  REG=(1));       /* PRINT MESSAGE.                 * 07330000
         PWTO  REG=(1)                                                  07340000
         DS    0H                                                       07350000
*         IF REALOCAT='1'B THEN     /* WAS THIS RE-ALLOCATION. YES,   * 07360000
         TM    ALOCATSW,B'10000000'                               0270  07370000
         BC    12,@9D0                                            0270  07380000
*           DO;                                                         07390000
*           MARK='1'B;              /* SET MARK ON WALL.              * 07400000
         OI    ALOCATSW,B'00100000'                               0272  07410000
*           IF DUPLICTE='1'B THEN   /* IS THIS A DUP REQUEST.         * 07420000
         TM    ALOCATSW,B'01000000'                               0273  07430000
*             GO TO ALOCAT49;       /* YES, PREPARE TO EXIT.          * 07440000
         BC    01,ALOCAT49                                        0274  07450000
*           GO TO ALOCAT48;         /* CHANGE STATUS OF DSNAME   21050* 07460000
         BC    15,ALOCAT48                                        0275  07470000
*                                   /* FLIP-FLOP AND RETURN CODE 21050* 07480000
*                                   /* 0C.                       21050* 07490000
*           END;                                                        07500000
*         IF STAEXIT='1'B THEN      /* IS STAE EXIT IN CONTROL.       * 07510000
@9D0     TM    OLTEPSW6,B'00000001'                               0277  07520000
*           GO TO ALOCAT05;         /* YES, CHECK NEXT DEVICE.        * 07530000
         BC    01,ALOCAT05                                        0278  07540000
*         GO TO ALOCAT54;           /* RETURN CODE 08.                * 07550000
         BC    15,ALOCAT54                                        0279  07560000
* ALOCAT47:                                                             07570000
*         IF DUPLICTE='1'B THEN     /* WAS SCRATCH DONE BECAUSE OF    * 07580000
ALOCAT47 TM    ALOCATSW,B'01000000'                               0280  07590000
*           GO TO ALOCAT35;         /* DUPLICATE DSNAME. YES, GO BACK * 07600000
         BC    01,ALOCAT35                                        0281  07610000
*                                   /* AND TRY NEW ALLOCATE.          * 07620000
*         IF REALOCAT='1'B THEN     /* WAS THIS SCRATCH CAUSED BY     * 07630000
         TM    ALOCATSW,B'10000000'                               0282  07640000
         BC    12,@9CF                                            0282  07650000
*           DO;                     /* REQUEST FOR REALLOCATION. YES, * 07660000
* ALOCAT48:                                                             07670000
*           FLAG2=FLAG2&&'80'X;     /* CHANGE STATUS OF DSNAME FLIP-  * 07680000
ALOCAT48 XI    13(@3),X'80'                                       0284  07690000
*           GO TO ALOCAT56;         /* FLOP AND RETURN CODE 0C.       * 07700000
         BC    15,ALOCAT56                                        0285  07710000
*           END;                                                        07720000
* ALOCAT49:                                                             07730000
*         ALLOCATE='0'B;            /* TURN ALLOCATE BIT OFF IN DEVTAB* 07740000
@9CF     EQU   *                                                  0287  07750000
ALOCAT49 NI    12(@3),B'11110111'                                 0287  07760000
*         EXTENTS=FULL;             /* MOVE FULL EXTENTS TO DEVTAB.   * 07770000
         MVC   16(12,@3),FULL                                     0288  07780000
*         FPMODE='1'B;              /* TURN FILE PROTECT BIT ON IN    * 07790000
         OI    12(@3),B'00000010'                                 0289  07800000
*                                   /* DEVTAB ENTRY.                  * 07810000
*         CDSFPM='1'B;              /* TURN FPM FLAG ON IN CDS   21050* 07820000
         OI    41(@3),B'10000000'                                 0290  07830000
*                                   /* FLAG BYTE.                21050* 07840000
*         DDNAME(ALCINDEX)=DDNAME(ALCINDEX)&&DDNAME(ALCINDEX);/*YM7282* 07850000
         SR    @C,@C                                              0291  07860000
         IC    @C,54(0,@3)                                        0291  07870000
         MH    @C,@D2                                             0291  07880000
         LA    @E,DDNAME-10(@C)                                   0291  07890000
         LA    @A,DDNAME-10(@C)                                   0291  07900000
         XC    0(10,@A),0(@E)                                     0291  07910000
*         ALCINDEX='00'X;           /* CLEAR INDEX IN DEVTAB    YM7282* 07920000
         MVI   54(@3),X'00'                                       0292  07930000
*         IF PRIMARY='1'B THEN      /* IF THIS IS PRIMARY DEVICE, TURN* 07940000
         TM    12(@3),B'01000000'                                 0293  07950000
         BC    12,@9CE                                            0293  07960000
*           DO;                     /* FILE PROTECT BITS ON IN SCT.   * 07970000
*           FILEPROT='1'B;                                              07980000
         OI    SCT+10,B'01000000'                                 0295  07990000
*           FPMODCDS='1'B;                                              08000000
         OI    SCT+11,B'10000000'                                 0296  08010000
*           END;                                                        08020000
*         IF MARK='1'B THEN         /* IS MARK ON WALL.               * 08030000
@9CE     TM    ALOCATSW,B'00100000'                               0298  08040000
*           GO TO ALOCAT54;         /* YES, RETURN 08.                * 08050000
         BC    01,ALOCAT54                                        0299  08060000
*         IF STAEXIT='1'B THEN      /* IS STAE EXIT IN CONTROL.       * 08070000
         TM    OLTEPSW6,B'00000001'                               0300  08080000
*           GO TO ALOCAT05;         /* YES, CHECK NEXT DEVICE.        * 08090000
         BC    01,ALOCAT05                                        0301  08100000
* ALOCAT50:                                                             08110000
*         /************************************************************ 08120000
*         /*                      RETURN CODES                        * 08130000
*         /************************************************************ 08140000
*         R15=0;                    /* SET RETURN CODE REGISTER TO 00 * 08150000
ALOCAT50 SR    @F,@F                                              0302  08160000
*                                   /* INDICATING ALL OF VOLUME       * 08170000
*                                   /* AVAILABLE AND NOT FILE PROT,   * 08180000
*                                   /* OR SCRATCH WAS SUCCESSFUL.     * 08190000
*         GO TO ALOCAT60;           /* RETURN.                        * 08200000
         BC    15,ALOCAT60                                        0303  08210000
* ALOCAT51:                                                             08220000
*         IF FPMODE='0'B THEN       /* WAS ALLOCATE DONE         01906* 08230000
ALOCAT51 TM    12(@3),B'00000010'                                 0304  08240000
*           GO TO ALOCAT50;         /* YES                       01906* 08250000
         BC    08,ALOCAT50                                        0305  08260000
* ALOCAT52:                                                             08270000
*         R15=4;                    /* SET RETURN CODE REGISTER TO 04 * 08280000
ALOCAT52 LA    @F,4                                               0306  08290000
*                                   /* INDICATING FACILITY NOT        * 08300000
*                                   /* AVAILABLE.                     * 08310000
*         GO TO ALOCAT60;           /* RETURN.                        * 08320000
         BC    15,ALOCAT60                                        0307  08330000
* ALOCAT54:                                                             08340000
*         R15=8;                    /* SET RETURN CODE REGISTER TO 08 * 08350000
ALOCAT54 LA    @F,8                                               0308  08360000
*                                   /* INDICATING SPACE NOT ALLOCATED * 08370000
*                                   /* AND VOLUME FILE PROTECTED, OR  * 08380000
*                                   /* SCRATCH NOT SUCCESSFUL.        * 08390000
*         GO TO ALOCAT60;           /* RETURN.                        * 08400000
         BC    15,ALOCAT60                                        0309  08410000
* ALOCAT56:                                                             08420000
*         R15=12;                   /* SET RETURN CODE REGISTER TO 0C * 08430000
ALOCAT56 LA    @F,12                                              0310  08440000
*                                   /* INDICATING REQUESTED SPACE     * 08450000
*                                   /* ALLOCATED,EXTENTS AT ADDRESS   * 08460000
*                                   /* PROVIDED,VOLUME NOT FILE       * 08470000
*                                   /* PROTECTED.                     * 08480000
*         GO TO ALOCAT60;           /* RETURN.                        * 08490000
         BC    15,ALOCAT60                                        0311  08500000
* ALOCAT58:                                                             08510000
*         R15=16;                   /* SET RETURN CODE REGISTER TO 10 * 08520000
ALOCAT58 LA    @F,16                                              0312  08530000
*                                   /* INDICATING AMOUNT OF SPACE     * 08540000
*                                   /* REQUESTED NOT AVAILABLE.       * 08550000
* ALOCAT60:                                                             08560000
*         DPMSGREI='0'B;                /* TURN OFF REM MSG FLG XM0097* 08570000
ALOCAT60 NI    A00022,B'11111110'                                 0313  08580000
*         RETURN;                   /* RETURN TO CALLER.              * 08590000
*         END;                                                          08600000
@EL01    L     @D,4(0,@D)                                         0315  08610000
         L     @E,12(0,@D)                                        0315  08620000
         LM    @0,@C,20(@D)                                       0315  08630000
         BCR   15,@E                                              0315  08640000
@DATA1   EQU   *                                                        08650000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           08660000
@1       EQU   01                                                       08670000
@2       EQU   02                                                       08680000
@3       EQU   03                                                       08690000
@4       EQU   04                                                       08700000
@5       EQU   05                                                       08710000
@6       EQU   06                                                       08720000
@7       EQU   07                                                       08730000
@8       EQU   08                                                       08740000
@9       EQU   09                                                       08750000
@A       EQU   10                                                       08760000
@B       EQU   11                                                       08770000
@C       EQU   12                                                       08780000
@D       EQU   13                                                       08790000
@E       EQU   14                                                       08800000
@F       EQU   15                                                       08810000
@D1      DC    H'56'                                                    08820000
@D2      DC    H'10'                                                    08830000
@D3      DC    H'1'                                                     08840000
@D4      DC    H'16'                                                    08850000
@V1      DC    V(IFDMSG22)                                              08860000
         DS    0F                                                       08870000
@X6      DC    X'0000003C'                                              08880000
@C5      DC    C'22'                                                    08890000
@X22     DC    X'00C8'                                                  08900000
         DS    0D                                                       08910000
@DATA    EQU   *                                                        08920000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   08930000
R0       EQU   00000000            FULLWORD POINTER REGISTER            08940000
R1       EQU   00000001            FULLWORD POINTER REGISTER            08950000
R2       EQU   00000002            FULLWORD POINTER REGISTER            08960000
R3       EQU   00000003            FULLWORD POINTER REGISTER            08970000
I        EQU   00000004            3  BYTE  POINTER REGISTER            08980000
R4       EQU   00000004            FULLWORD POINTER REGISTER            08990000
RETCODE  EQU   00000004            FULLWORD POINTER REGISTER            09000000
R5       EQU   00000005            FULLWORD POINTER REGISTER            09010000
R6       EQU   00000006            FULLWORD POINTER REGISTER            09020000
R7       EQU   00000007            FULLWORD POINTER REGISTER            09030000
R8       EQU   00000008            FULLWORD POINTER REGISTER            09040000
R9       EQU   00000009            FULLWORD POINTER REGISTER            09050000
R13      EQU   00000013            FULLWORD POINTER REGISTER            09060000
R14      EQU   00000014            FULLWORD POINTER REGISTER            09070000
R15      EQU   00000015            FULLWORD POINTER REGISTER            09080000
RC       EQU   00000015            FULLWORD POINTER REGISTER            09090000
S99RBALC EQU   @DATA+00000072      20 BYTE(S) ON WORD                   09100000
         ORG   S99RBALC+00000000                                        09110000
ALCRBLN  EQU   *                   1 BYTE(S)                            09120000
         DC    X'14'                                                    09130000
ALCVERB  EQU   *                   1 BYTE(S)                            09140000
         DC    X'01'                                                    09150000
ALCFLAG1 EQU   *                   2 BYTE(S)                            09160000
         DC    X'0000'                                                  09170000
ALCERROR EQU   *                   2 BYTE(S)                            09180000
         DC    X'0000'                                                  09190000
ALCINFO  EQU   *                   2 BYTE(S)                            09200000
         DC    X'0000'                                                  09210000
ALCTXTPP EQU   *                   FULLWORD POINTER                     09220000
         DC    AL4(ALCTUPL)                                             09230000
A00003   EQU   *                   4 BYTE(S)                            09240000
         DC    X'00000000'                                              09250000
ALCFLAG2 EQU   *                   4 BYTE(S)                            09260000
         DC    X'00000000'                                              09270000
ALCTUPL  EQU   @DATA+00000092      40 BYTE(S) ON WORD                   09280000
ALCTXTP1 EQU   *                   FULLWORD POINTER                     09290000
         DC    AL4(ALCUNIT1)                                            09300000
ALCTXTP2 EQU   *                   FULLWORD POINTER                     09310000
         DC    AL4(ALCUNIT2)                                            09320000
ALCTXTP3 EQU   *                   FULLWORD POINTER                     09330000
         DC    AL4(ALCUNIT3)                                            09340000
ALCTXTP4 EQU   *                   FULLWORD POINTER                     09350000
         DC    AL4(ALCUNIT4)                                            09360000
ALCTXTP5 EQU   *                   FULLWORD POINTER                     09370000
         DC    AL4(ALCUNIT5)                                            09380000
ALCTXTP6 EQU   *                   FULLWORD POINTER                     09390000
         DC    AL4(ALCUNIT6)                                            09400000
ALCTXTP7 EQU   *                   FULLWORD POINTER                     09410000
         DC    AL4(ALCUNIT7)                                            09420000
ALCTXTP8 EQU   *                   FULLWORD POINTER                     09430000
         DC    AL4(ALCUNIT8)                                            09440000
ALCTXTP9 EQU   *                   FULLWORD POINTER                     09450000
         DC    AL4(ALCUNIT9)                                            09460000
ALCTXTPA EQU   ALCTUPL+00000036    4 BYTE(S)                            09470000
A00004   EQU   *                   1 BYTE(S)                            09480000
         DC    X'80'                                                    09490000
A00005   EQU   *                   3  BYTE  POINTER                     09500000
         DC    AL3(ALCUNITA)                                            09510000
ALCTUNIT EQU   @DATA+00000132      126 BYTE(S) ON WORD                  09520000
ALCUNIT1 EQU   ALCTUNIT+00000000   50 BYTE(S)                           09530000
DALDSNAM EQU   *                   2 BYTE(S)                            09540000
         DC    X'0002'                                                  09550000
ALCU1NUM EQU   *                   2 BYTE(S)                            09560000
         DC    X'0001'                                                  09570000
ALCU1LNG EQU   *                   2 BYTE(S)                            09580000
         DC    X'002C'                                                  09590000
ALCU1PRM EQU   ALCTUNIT+00000006   44 BYTE(S)                           09600000
A00006   EQU   *                   7 BYTE(S)                            09610000
         DC    C'OSOLTEP'                                               09620000
A00007   EQU   *                   37*1 BYTE(S)                         09630000
         DC    00037X'40'                                               09640000
ALCUNIT2 EQU   ALCTUNIT+00000050   7 BYTE(S)                            09650000
DALSTATS EQU   *                   2 BYTE(S)                            09660000
         DC    X'0004'                                                  09670000
ALCU2NUM EQU   *                   2 BYTE(S)                            09680000
         DC    X'0001'                                                  09690000
ALCU2LNG EQU   *                   2 BYTE(S)                            09700000
         DC    X'0001'                                                  09710000
ALCU2PRM EQU   *                   1 BYTE(S)                            09720000
         DC    X'04'                                                    09730000
ALCUNIT3 EQU   ALCTUNIT+00000057   7 BYTE(S)                            09740000
DALNDISP EQU   *                   2 BYTE(S)                            09750000
         DC    X'0005'                                                  09760000
ALCU3NUM EQU   *                   2 BYTE(S)                            09770000
         DC    X'0001'                                                  09780000
ALCU3LNG EQU   *                   2 BYTE(S)                            09790000
         DC    X'0001'                                                  09800000
ALCU3PRM EQU   *                   1 BYTE(S)                            09810000
         DC    X'04'                                                    09820000
ALCUNIT4 EQU   ALCTUNIT+00000064   7 BYTE(S)                            09830000
DALCDISP EQU   *                   2 BYTE(S)                            09840000
         DC    X'0006'                                                  09850000
ALCU4NUM EQU   *                   2 BYTE(S)                            09860000
         DC    X'0001'                                                  09870000
ALCU4LNG EQU   *                   2 BYTE(S)                            09880000
         DC    X'0001'                                                  09890000
ALCU4PRM EQU   *                   1 BYTE(S)                            09900000
         DC    X'04'                                                    09910000
ALCUNIT5 EQU   ALCTUNIT+00000071   4 BYTE(S)                            09920000
ALCTYPE  EQU   *                   2 BYTE(S)                            09930000
         DC    X'0000'                                                  09940000
ALCU5NUM EQU   *                   2 BYTE(S)                            09950000
         DC    X'0000'                                                  09960000
ALCUNIT6 EQU   ALCTUNIT+00000075   9 BYTE(S)                            09970000
DALPRIME EQU   *                   2 BYTE(S)                            09980000
         DC    X'000A'                                                  09990000
ALCU6NUM EQU   *                   2 BYTE(S)                            10000000
         DC    X'0001'                                                  10010000
ALCU6LNG EQU   *                   2 BYTE(S)                            10020000
         DC    X'0003'                                                  10030000
ALCU6PRM EQU   *                   3 BYTE(S)                            10040000
         DC    X'000000'                                                10050000
ALCUNIT7 EQU   ALCTUNIT+00000084   7 BYTE(S)                            10060000
DALSPFRM EQU   *                   2 BYTE(S)                            10070000
         DC    X'000E'                                                  10080000
ALCU7NUM EQU   *                   2 BYTE(S)                            10090000
         DC    X'0001'                                                  10100000
ALCU7LNG EQU   *                   2 BYTE(S)                            10110000
         DC    X'0001'                                                  10120000
ALCU7PRM EQU   *                   1 BYTE(S)                            10130000
         DC    X'08'                                                    10140000
ALCUNIT8 EQU   ALCTUNIT+00000091   9 BYTE(S)                            10150000
DALUNIT  EQU   *                   2 BYTE(S)                            10160000
         DC    X'0015'                                                  10170000
ALCU8NUM EQU   *                   2 BYTE(S)                            10180000
         DC    X'0001'                                                  10190000
ALCU8LNG EQU   *                   2 BYTE(S)                            10200000
         DC    X'0003'                                                  10210000
ALCU8PRM EQU   *                   3 BYTE(S)                            10220000
         DC    X'000000'                                                10230000
ALCUNIT9 EQU   ALCTUNIT+00000100   14 BYTE(S)                           10240000
DALRTDDN EQU   *                   2 BYTE(S)                            10250000
         DC    X'0055'                                                  10260000
ALCU9NUM EQU   *                   2 BYTE(S)                            10270000
         DC    X'0001'                                                  10280000
ALCU9LNG EQU   *                   2 BYTE(S)                            10290000
         DC    X'0008'                                                  10300000
ALCU9PRM EQU   *                   8 BYTE(S)                            10310000
         DC    X'0000000000000000'                                      10320000
ALCUNITA EQU   ALCTUNIT+00000114   12 BYTE(S)                           10330000
DALRTVOL EQU   *                   2 BYTE(S)                            10340000
         DC    X'005D'                                                  10350000
ALCUANUM EQU   *                   2 BYTE(S)                            10360000
         DC    X'0001'                                                  10370000
ALCUALNG EQU   *                   2 BYTE(S)                            10380000
         DC    X'0006'                                                  10390000
ALCUAPRM EQU   *                   6 BYTE(S)                            10400000
         DC    X'000000000000'                                          10410000
S99RBUNA EQU   @DATA+00000260      20 BYTE(S) ON WORD                   10420000
         ORG   S99RBUNA+00000000                                        10430000
UNRBLN   EQU   *                   1 BYTE(S)                            10440000
         DC    X'14'                                                    10450000
UNVERB   EQU   *                   1 BYTE(S)                            10460000
         DC    X'02'                                                    10470000
UNFLAG1  EQU   *                   2 BYTE(S)                            10480000
         DC    X'0000'                                                  10490000
UNERROR  EQU   *                   2 BYTE(S)                            10500000
         DC    X'0000'                                                  10510000
UNINFO   EQU   *                   2 BYTE(S)                            10520000
         DC    X'0000'                                                  10530000
UNTXTPP  EQU   *                   FULLWORD POINTER                     10540000
         DC    AL4(UNTUPL)                                              10550000
A00008   EQU   *                   4 BYTE(S)                            10560000
         DC    X'00000000'                                              10570000
UNFLAG2  EQU   *                   4 BYTE(S)                            10580000
         DC    X'00000000'                                              10590000
UNTUPL   EQU   @DATA+00000280      4 BYTE(S) ON WORD                    10600000
UNTXTP1  EQU   UNTUPL+00000000     4 BYTE(S)                            10610000
A00009   EQU   *                   1 BYTE(S)                            10620000
         DC    X'80'                                                    10630000
A00010   EQU   *                   3  BYTE  POINTER                     10640000
         DC    AL3(UNUNIT1)                                             10650000
UNTUNIT  EQU   @DATA+00000284      14 BYTE(S) ON WORD                   10660000
UNUNIT1  EQU   UNTUNIT+00000000    14 BYTE(S)                           10670000
DUNDDNAM EQU   *                   2 BYTE(S)                            10680000
         DC    X'0001'                                                  10690000
UNU1NUM  EQU   *                   2 BYTE(S)                            10700000
         DC    X'0001'                                                  10710000
UNU1LNG  EQU   *                   2 BYTE(S)                            10720000
         DC    X'0000'                                                  10730000
UNU1PRM  EQU   *                   8 BYTE(S)                            10740000
         DC    X'0000000000000000'                                      10750000
S99RB    EQU   @DATA+00000300      4 BYTE(S) ON WORD                    10760000
S99RBPTR EQU   S99RB+00000000      FULLWORD POINTER                     10770000
ALOCATSW EQU   @DATA+00000304      1 BYTE(S)                            10780000
REALOCAT EQU   ALOCATSW+00000000   1 BIT(S)                             10790000
DUPLICTE EQU   ALOCATSW+00000000   1 BIT(S)                             10800000
MARK     EQU   ALOCATSW+00000000   1 BIT(S)                             10810000
RESPAREA EQU   @DATA+00000308      7 BYTE(S) ON WORD                    10820000
ECB      EQU   RESPAREA+00000000   4 BYTE(S)                            10830000
REPBUF   EQU   RESPAREA+00000004   3 BYTE(S)                            10840000
SAVE4    EQU   00000004            FULLWORD POINTER                     10850000
         ORG   @DATA+00000315                                           10860000
FULL     EQU   *                   12 BYTE(S)                           10870000
         DC    X'000000000000FFFFFFFFFFFF'                              10880000
ZEROES   EQU   FULL+00000000       6 BYTE(S)                            10890000
ZERO     EQU   FULL+00000000       3 BYTE(S)                            10900000
MSGPTR   EQU   00000000            16 BYTE(S) ON WORD                   10910000
MSGPTR20 EQU   MSGPTR+00000000     FULLWORD POINTER                     10920000
MSGPTR45 EQU   MSGPTR+00000004     FULLWORD POINTER                     10930000
MSGPTR56 EQU   MSGPTR+00000008     FULLWORD POINTER                     10940000
MSGPTR62 EQU   MSGPTR+00000012     FULLWORD POINTER                     10950000
MSSGE20D EQU   00000000            70 BYTE(S) ON WORD                   10960000
WTORPRF1 EQU   MSSGE20D+00000000   8 BYTE(S)                            10970000
A00011   EQU   MSSGE20D+00000008   4 BYTE(S)                            10980000
MSG20D   EQU   MSSGE20D+00000012   58 BYTE(S)                           10990000
MSSGE45D EQU   00000000            76 BYTE(S) ON WORD                   11000000
WTORPRF2 EQU   MSSGE45D+00000000   8 BYTE(S)                            11010000
A00012   EQU   MSSGE45D+00000008   4 BYTE(S)                            11020000
MSG45D   EQU   MSSGE45D+00000012   64 BYTE(S)                           11030000
MSSGE56I EQU   00000000            51 BYTE(S) ON WORD                   11040000
A00013   EQU   MSSGE56I+00000000   4 BYTE(S)                            11050000
MSG56I   EQU   MSSGE56I+00000004   47 BYTE(S)                           11060000
MSSGE62I EQU   00000000            60 BYTE(S) ON WORD                   11070000
A00014   EQU   MSSGE62I+00000000   4 BYTE(S)                            11080000
MSG62I   EQU   MSSGE62I+00000004   56 BYTE(S)                           11090000
WTORLIST EQU   @DATA+00000328      8 BYTE(S) ON WORD                    11100000
         ORG   WTORLIST+00000000                                        11110000
REPLYLEN EQU   *                   1 BYTE(S)                            11120000
         DC    X'03'                                                    11130000
REPLYADR EQU   *                   3  BYTE  POINTER ON WORD+1           11140000
         DC    AL3(REPBUF)                                              11150000
ECBADDR  EQU   *                   FULLWORD POINTER                     11160000
         DC    AL4(ECB)                                                 11170000
DDNAME   EQU   *                   16*10 BYTE(S)                        11180000
         DC    00016X'00000000000000000000'                             11190000
WORKAREA EQU   @DATA+00000496      140 BYTE(S) ON DWORD                 11200000
DSCBDATA EQU   WORKAREA+00000000   96 BYTE(S)                           11210000
A00015   EQU   WORKAREA+00000000   63 BYTE(S)                           11220000
LOWLIMIT EQU   WORKAREA+00000063   4 BYTE(S)                            11230000
UPLIMIT  EQU   WORKAREA+00000067   4 BYTE(S)                            11240000
DEVENTRY EQU   00000000            56 BYTE(S) ON WORD                   11250000
EBCDICAD EQU   DEVENTRY+00000000   8 BYTE(S)                            11260000
UCBADDR  EQU   DEVENTRY+00000008   4 BYTE(S)                            11270000
UCBPTR   EQU   DEVENTRY+00000008   4  BYTE  POINTER                     11280000
FLAG1    EQU   DEVENTRY+00000012   1 BYTE(S)                            11290000
DEVSTAT  EQU   DEVENTRY+00000012   1 BIT(S)                             11300000
PRIMARY  EQU   DEVENTRY+00000012   1 BIT(S)                             11310000
DPDONE   EQU   DEVENTRY+00000012   1 BIT(S)                             11320000
EXIOACT  EQU   DEVENTRY+00000012   1 BIT(S)                             11330000
ALLOCATE EQU   DEVENTRY+00000012   1 BIT(S)                             11340000
GRABBED  EQU   DEVENTRY+00000012   1 BIT(S)                             11350000
FPMODE   EQU   DEVENTRY+00000012   1 BIT(S)                             11360000
LSTACSEC EQU   DEVENTRY+00000012   1 BIT(S)                             11370000
FLAG2    EQU   DEVENTRY+00000013   1 BYTE(S)                            11380000
DSNAMEFF EQU   DEVENTRY+00000013   1 BIT(S)                             11390000
SHARED   EQU   DEVENTRY+00000013   1 BIT(S)                             11400000
CEVOLUME EQU   DEVENTRY+00000013   1 BIT(S)                             11410000
STDLABEL EQU   DEVENTRY+00000013   1 BIT(S)                             11420000
A00024   EQU   DEVENTRY+00000013   1 BIT(S)                             11430000
BYPASSFI EQU   DEVENTRY+00000013   1 BIT(S)                             11440000
CEDEFI   EQU   DEVENTRY+00000013   1 BIT(S)                             11450000
ATTNINFI EQU   DEVENTRY+00000013   1 BIT(S)                             11460000
FLAG3    EQU   DEVENTRY+00000014   1 BYTE(S)                            11470000
FLAG4    EQU   DEVENTRY+00000015   1 BYTE(S)                            11480000
EXTENTS  EQU   DEVENTRY+00000016   12 BYTE(S)                           11490000
STARTAD  EQU   DEVENTRY+00000016   6 BYTE(S)                            11500000
ENDAD    EQU   DEVENTRY+00000022   4 BYTE(S)                            11510000
NOTRKS   EQU   DEVENTRY+00000026   2 BYTE(S)                            11520000
NUMTRKS  EQU   DEVENTRY+00000026   2  BYTE  INTEGER                     11530000
A00025   EQU   DEVENTRY+00000028   2 BYTE(S)                            11540000
MSSAVE   EQU   DEVENTRY+00000030   1 BYTE(S)                            11550000
EXPOSURE EQU   DEVENTRY+00000031   1 BYTE(S)                            11560000
DEVAD    EQU   DEVENTRY+00000032   4 BYTE(S)                            11570000
CDSDSCRP EQU   DEVENTRY+00000036   4 BYTE(S)                            11580000
CDSBYCNT EQU   DEVENTRY+00000040   1 BYTE(S)                            11590000
CDSFLAGS EQU   DEVENTRY+00000041   1 BYTE(S)                            11600000
CDSFPM   EQU   DEVENTRY+00000041   1 BIT(S)                             11610000
CDSEXTMK EQU   DEVENTRY+00000042   2 BYTE(S)                            11620000
SYMNAME  EQU   DEVENTRY+00000044   8 BYTE(S)                            11630000
A00026   EQU   DEVENTRY+00000052   2 BYTE(S)                            11640000
ALCINDEX EQU   DEVENTRY+00000054   1  BYTE  POINTER                     11650000
A00027   EQU   DEVENTRY+00000055   1 BYTE(S)                            11660000
CNFGDATA EQU   00000000            4 BYTE(S) ON WORD                    11670000
CDSDEVAD EQU   CNFGDATA+00000000   4 BYTE(S)                            11680000
EXTNTS   EQU   00000000            16 BYTE(S) ON WORD                   11690000
BEGINAD  EQU   EXTNTS+00000000     8 BYTE(S)                            11700000
STRTAD   EQU   EXTNTS+00000000     6 BYTE(S)                            11710000
BBSTRT   EQU   EXTNTS+00000000     2 BYTE(S)                            11720000
CCHHSTRT EQU   EXTNTS+00000002     4 BYTE(S)                            11730000
ENDADDR  EQU   EXTNTS+00000008     8 BYTE(S)                            11740000
BBEND    EQU   EXTNTS+00000008     2 BYTE(S)                            11750000
CCHHEND  EQU   EXTNTS+00000010     4 BYTE(S)                            11760000
UCBFRMAT EQU   00000000            34 BYTE(S) ON WORD                   11770000
A00028   EQU   UCBFRMAT+00000000   3 BYTE(S)                            11780000
UCBFLAGS EQU   UCBFRMAT+00000003   1 BYTE(S)                            11790000
STATUS   EQU   UCBFRMAT+00000003   1 BIT(S)                             11800000
A00029   EQU   UCBFRMAT+00000004   12 BYTE(S)                           11810000
DESCRPTR EQU   UCBFRMAT+00000016   4 BYTE(S)                            11820000
A00030   EQU   UCBFRMAT+00000016   1 BYTE(S)                            11830000
FEATURES EQU   UCBFRMAT+00000017   8 BIT(S)                             11840000
CLASTYPE EQU   UCBFRMAT+00000018   2 BYTE(S)                            11850000
CLASS    EQU   UCBFRMAT+00000018   1 BYTE(S)                            11860000
TYPE     EQU   UCBFRMAT+00000019   1 BYTE(S)                            11870000
A00031   EQU   UCBFRMAT+00000020   8 BYTE(S)                            11880000
UCBVSER  EQU   UCBFRMAT+00000028   6 BYTE(S)                            11890000
         ORG   @DATA                                                    11900000
         DS    00000636C                                                11910000
@TEMPS   DS    0F                                                       11920000
ALOCDSCB CAMLST SEARCH,ALCU1PRM,ALCUAPRM,WORKAREA                YM7282 11930000
ALOCAT   IFDCOM                                                         11940000
         GLOBAL                                                         11950000
         ALOCAT MAP=YES                                                 11960000
ALOLEVL  EQU   $ALOLEVL                                                 11970000
ALOCADR  EQU   $ALOCADR                                                 11980000
ALOCDSA  EQU   $ALOCDSA                                                 11990000
ALOAMT   EQU   $ALOAMT                                                  12000000
ALOFLGT  EQU   $ALOFLGT                                                 12010000
ALOFLAG  EQU   $ALOFLAG                                                 12020000
ROPTMIN2 EQU   ROPT-00000002       2 BYTE(S)                            12030000
SVCPLIST EQU   ROPT+00000000       8 BYTE(S) ON WORD                    12040000
UCBADDRS EQU   SVCPLIST+00000000   4 BYTE(S)                            12050000
VOLSERPT EQU   SVCPLIST+00000004   FULLWORD POINTER                     12060000
SCT      EQU   CHASCT+00000000     12 BYTE(S) ON WORD                   12070000
A00000   EQU   SCT+00000000        10 BYTE(S)                           12080000
FLAGS    EQU   SCT+00000010        1 BYTE(S)                            12090000
A00001   EQU   SCT+00000010        1 BIT(S)                             12100000
FILEPROT EQU   SCT+00000010        1 BIT(S)                             12110000
A00002   EQU   SCT+00000011        1 BYTE(S)                            12120000
FPMODCDS EQU   SCT+00000011        1 BIT(S)                             12130000
OLTEPSW2 EQU   CESWT2+00000000     1 BYTE(S)                            12140000
A00016   EQU   OLTEPSW2+00000000   5 BIT(S)                             12150000
NDR      EQU   OLTEPSW2+00000000   1 BIT(S)                             12160000
OLTEPSW3 EQU   CESWT3+00000000     1 BYTE(S)                            12170000
A00017   EQU   OLTEPSW3+00000000   2 BIT(S)                             12180000
BYPTST   EQU   OLTEPSW3+00000000   1 BIT(S)                             12190000
OLTEPSW6 EQU   CESWT6+00000000     1 BYTE(S)                            12200000
A00018   EQU   OLTEPSW6+00000000   7 BIT(S)                             12210000
STAEXIT  EQU   OLTEPSW6+00000000   1 BIT(S)                             12220000
A00019   EQU   CESWTR+00000000     1 BYTE(S)                            12230000
RETAINAC EQU   A00019+00000000     1 BIT(S)                             12240000
A00020   EQU   A00019+00000000     1 BIT(S)                             12250000
REMNOMSG EQU   A00019+00000000     1 BIT(S)                             12260000
A00021   EQU   A00019+00000000     5 BIT(S)                             12270000
A00022   EQU   CESWTR2+00000000    1 BYTE(S) ON WORD                    12280000
A00023   EQU   A00022+00000000     7 BIT(S)                             12290000
DPMSGREI EQU   A00022+00000000     1 BIT(S)                             12300000
@DATEND  EQU   *                                                        12310000
@9FC     EQU   ALOCAT52                                                 12320000
@9F4     EQU   ALOCAT10                                                 12330000
@DO9F8   EQU   ALOCAT52                                                 12340000
@9EE     EQU   ALOCAT52                                                 12350000
@9ED     EQU   ALOCAT52                                                 12360000
@9EB     EQU   ALOCAT50                                                 12370000
@9EA     EQU   ALOCAT52                                                 12380000
@9E9     EQU   ALOCAT52                                                 12390000
@9E8     EQU   ALOCAT52                                                 12400000
@9D9     EQU   ALOCAT51                                                 12410000
@9D8     EQU   ALOCAT51                                                 12420000
@9D7     EQU   ALOCAT51                                                 12430000
         END                                                            12440000
./  ADD  SSI=40230322,NAME=IFDOLT23
         TITLE ' OLTEP COMMON AREA.  IFDOLT23'                          00010000
         TITLE ' OLTEP COMMON AREA.  IFDOLT23'                          00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT23 CSECT ,                                                  0002  00050000
* GEN(COMCOM);                                                          00060000
         COMCOM                                                         00070000
         DS    0H                                                       00080000
* END;                                                                  00090000
@EL01    BCR   15,@E                                              0004  00100000
@DATA1   EQU   *                                                        00110000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00120000
@1       EQU   01                                                       00130000
@2       EQU   02                                                       00140000
@3       EQU   03                                                       00150000
@4       EQU   04                                                       00160000
@5       EQU   05                                                       00170000
@6       EQU   06                                                       00180000
@7       EQU   07                                                       00190000
@8       EQU   08                                                       00200000
@9       EQU   09                                                       00210000
@A       EQU   10                                                       00220000
@B       EQU   11                                                       00230000
@C       EQU   12                                                       00240000
@D       EQU   13                                                       00250000
@E       EQU   14                                                       00260000
@F       EQU   15                                                       00270000
         DS    0D                                                       00280000
@DATA    EQU   *                                                        00290000
         DS    00000000C                                                00300000
@TEMPS   DS    0F                                                       00310000
@DATEND  EQU   *                                                        00320000
         END                                                            00330000
./  ADD  SSI=61760152,NAME=IFDOLT24
         TITLE 'IFDOLT24 READD'                                         00010000
         TITLE 'IFDOLT24 - READD'                                       00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT24 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT24 18 MAY 76'                             0002  00070000
         ST    @E,12(0,@D)                                        0002  00080000
         STM   @0,@C,20(@D)                                       0002  00090000
         BALR  @B,0                                               0002  00100000
@PSTART  DS    0H                                                 0002  00110000
         USING @PSTART+00000,@B                                   0002  00120000
         ST    @D,@SAV001+4                                       0002  00130000
         LA    @F,@SAV001                                         0002  00140000
         ST    @F,8(0,@D)                                         0002  00150000
         LR    @D,@F                                              0002  00160000
*         GEN(USING CHASCT,2);                                          00170000
         USING CHASCT,2                                                 00180000
         DS    0H                                                       00190000
*         GENERATE DATA;                                                00200000
*         DCL MODLEV CHAR(1) INIT('02'X);  /*MODULE LEVEL*/             00210000
*         DCL 1 PARMLIST BASED(R3),      /*PARAMETER LIST*/             00220000
*           3 * CHAR(1),                                                00230000
*           3 MACROLEV CHAR(1),          /*MACRO LEVEL*/                00240000
*           3 * CHAR(2),                 /*MACRO ID*/                   00250000
*           3 ADINAREA PTR,              /*ADDRESS OF INPUT AREA*/      00260000
*           3 SIZE FIXED,                /*SIZE OF INPUT AREA*/         00270000
*           3 VOLSERNO CHAR(6),          /*VOLUME SERIAL NUMBER OF      00280000
*                                          DATASET TO BE READ*/         00290000
*           3 FLAGS CHAR(1),                                            00300000
*             5 * BIT(6),                                               00310000
*             5 BKSPACE BIT(1),          /*BACKSPACE REQUIRED IF ON*/   00320000
*             5 RESETB BIT(1),           /*RESET REQUIRED IF ON */      00330000
*           3 NUMB CHAR(1);              /*NUMBER OF RECORDS TO         00340000
*                                          BACKSPACE*/                  00350000
*         DCL RDCBPTR PTR GENERATED;     /*PTR TO DCB*/                 00360000
*         DCL 1 * BASED(DCBPTR),                                        00370000
*           3 * CHAR(17),                                               00380000
*           3 DEVTYPE CHAR(1),           /*DEVICE TYPE*/                00390000
*             5 * BIT(2),                                               00400000
*             5 DASDKEY BIT(1),          /*DASD INDICATOR*/             00410000
*             5 * BIT(5),                                               00420000
*           3 * CHAR(19),                                               00430000
*           3 DXLST PTR(24),             /*SPACE FOR EXIT LIST ADDR*/   00440000
*           3 * CHAR(8),                                                00450000
*           3 * CHAR(1),                                                00460000
*             5 * BIT(3),                                               00470000
*             5 OPENFLG BIT(1),          /*INDICATES SUCCESSFUL OPEN*/  00480000
*             5 * BIT(4),                                               00490000
*           3 * CHAR(43),                                               00500000
*             5 * CHAR(1),                                              00510000
*             5 DMACRF CHAR(1),          /*MACRO FORM                 * 00520000
*             5 * CHAR(41);                                             00530000
*         DCL CESWT8 CHAR(1) GENERATED;  /*CE SWITCHES         SA54318* 00540000
*         DCL 1 * CHAR(1) BASED(ADDR(CESWT8)), /*CE SWITCH8    SA54318* 00550000
*           2 * BIT(3),                  /*  N/A               SA54318* 00560000
*           2 READDCHK BIT(1),           /* NEW SECT FLG       SA54318* 00570000
*             3 * BIT(1);                /*  N/A               SA54318* 00580000
*         DCL READDSV CHAR(6) GENERATED; /*SAVE VOLUME SERIAL NUMBER    00590000
*                                          HERE*/                       00600000
*         DCL JFCBAREA CHAR(176) BDY(WORD);   /*SPACE FOR JFCB*/        00610000
*         DCL 1 * BASED(ADDR(JFCBAREA)),  /*DSECT OF JFCB*/             00620000
*         3 DATASNM CHAR(44),                                           00630000
*         3 * CHAR(22),                                                 00640000
*             5 * CHAR(8),                                              00650000
*             5 * CHAR(1),                                              00660000
*               7 * BIT(2),                                             00670000
*               7 SYSINBIT BIT(1),       /* INDICATES CARD INPUT      * 00680000
*               7 * BIT(5),                                             00690000
*             5 * CHAR(13),                                             00700000
*           3 * CHAR(1),                                                00710000
*             5 * BIT(6),                                               00720000
*             5 SLABEL BIT(1),           /*STANDARD LABEL FLAG*/        00730000
*             5 * BIT(1),                                               00740000
*           3 * CHAR(27),                                               00750000
*             5 * CHAR(20),                                             00760000
*             5 JINDBIT CHAR(1),         /* DATA SET INDICATOR        * 00770000
*             5 JBUFNO CHAR(1),          /* NUMBER OF BUFFERS         * 00780000
*             5 * CHAR(1),                                              00790000
*             5 JBUFL CHAR(2),           /*LENGTH OF BUFFERS          * 00800000
*             5 * CHAR(1),                                              00810000
*             5 JMODE CHAR(1),           /* MODE,STACKER BYTE         * 00820000
*           3 TAPEDEN CHAR(1),           /* TAPE DENSITY              * 00830000
*           3 * CHAR(23),                                               00840000
*             5 * CHAR(5),                                              00850000
*             5 JRECFM CHAR(1),          /* RECORD FORMAT             * 00860000
*             5 * CHAR(1),                                              00870000
*             5 JBLKSZ CHAR(2),          /* BLOCK SIZE                * 00880000
*             5 JRECL  CHAR(2),          /* RECORD LENGTH             * 00890000
*             5 * CHAR(11),                                             00900000
*           5 JVOLNUM CHAR(1),           /* NUMBER OF VOLUMES         * 00910000
*           3 VOLSERL CHAR(6),           /*VOLUME SERIAL NUMBER*/       00920000
*           3 * CHAR(53);                                               00930000
*         DCL 1 XITLIST BDY(WORD),                                      00940000
*           3 * CHAR(1) INIT('87'X),    /* OPEN FLAGS          YM3407*/ 00950000
*           3 * PTR(24) INIT(ADDR(JFCBAREA));                           00960000
*         DCL CKEND CHAR(5) BASED(BUFREG);                              00970000
*         DCL 1 LABEL1 CHAR(80),                                        00980000
*           3 VOLAB CHAR(4),                                            00990000
*           3 LABELNUM CHAR(6),                                         01000000
*           3 * CHAR(70);                                               01010000
*         DCL READDMOD PTR GENERATED;                                   01020000
*         DCL 1 INTFLAG CHAR(1)          /* INTERNAL FLAGS            * 01030000
*               INIT('00'X),             /* INITIAL VALUE             * 01040000
*           2 FIRSTRD BIT(1),            /* FIRST READ THIS DATASET   * 01050000
*           2 * BIT(1);                  /* N/A                       * 01060000
*         DCL PATCH CHAR(80) BDY(HWORD) INIT(' ');                      01070000
*         R3=R1;                         /*SAVE PARAMETER LIST PTR*/    01080000
         LR    @3,@1                                              0033  01090000
*         IF MACROLEV < '02'X            /*CHECK MACRO LEVEL AND MODULE 01100000
*                                          LEVEL FOR COMPATIBILITY*/    01110000
*              | MODLEV < MACROLEV THEN                                 01120000
         CLI   1(@3),X'02'                                        0034  01130000
         BC    04,@9FF                                            0034  01140000
         CLC   MODLEV(1),1(@3)                                    0034  01150000
         BC    10,@9FE                                            0034  01160000
*           GO TO RTRN4;                                                01170000
         BC    05,RTRN4                                           0035  01180000
*         READAD=READDMOD;                                              01190000
@9FE     L     @8,READDMOD                                        0036  01200000
*         DCBPTR=RDCBPTR;                /*PUT PTR TO DCB IN R7*/       01210000
         L     @7,RDCBPTR                                         0037  01220000
*         DXLST=ADDR(XITLIST);           /*PUT EXIT LIST ADDR IN DCB*/  01230000
         LA    @F,XITLIST                                         0038  01240000
         ST    @F,@TEMP4                                          0038  01250000
         MVC   37(3,@7),@TEMP4+1                                  0038  01260000
*         IF OPENFLG = '0'B THEN         /* IF THE DATASET IS @ZA08983* 01270000
         TM    48(@7),B'00010000'                                 0039  01280000
*            GO TO NOCLOSE;              /* NOT OPEN, DONT    @ZA08983* 01290000
         BC    08,NOCLOSE                                         0040  01300000
*                                        /* CLOSE IT.         @ZA08983* 01310000
*         IF READDSV='000000000000'X THEN                               01320000
         CLC   READDSV(6),@X3                                     0041  01330000
*           GOTO NOCLOSE;                                               01340000
         BC    08,NOCLOSE                                         0042  01350000
*         IF READDSV=VOLSERNO THEN                                      01360000
         CLC   READDSV(6),12(@3)                                  0043  01370000
*           GOTO CKRESET;                /*SAME DATASET-NO CLOSE        01380000
*                                          NEEDED*/                     01390000
         BC    08,CKRESET                                         0044  01400000
*         GEN(CLOSE   ((DCBPTR)));       /*CLOSE DATA SET*/             01410000
         CLOSE   ((DCBPTR))                                             01420000
         DS    0H                                                       01430000
*  NOCLOSE:                                                             01440000
*         READDSV=VOLSERNO;              /*SAVE VOL SERIAL NUMBER IN    01450000
*                                          COMMON AREA*/                01460000
NOCLOSE  MVC   READDSV(6),12(@3)                                  0046  01470000
*         READDCHK = '0'B;               /* FIRST READD CALL   SA54318* 01480000
         NI    A00015,B'11101111'                                 0047  01490000
*         GEN(RDJFCB  ((DCBPTR),(INPUT))); /*READ THE JFCB*/            01500000
         RDJFCB  ((DCBPTR),(INPUT))                                     01510000
         DS    0H                                                       01520000
*           IF SYSINBIT='1'B THEN                                       01530000
         TM    A00018+52,B'00100000'                              0049  01540000
*           GOTO SKIPCHG;                /* CARD INPUT                * 01550000
         BC    01,SKIPCHG                                         0050  01560000
*         IF JVOLNUM='01'X THEN                                         01570000
         CLI   A00018+117,X'01'                                   0051  01580000
*           GOTO TAPEIN;                 /*BRANCH FOR TAPE INPUT      * 01590000
         BC    08,TAPEIN                                          0052  01600000
*           JBUFNO='01'X;                /*NUMBER OF BUFFERS          * 01610000
         MVI   A00018+88,X'01'                                    0053  01620000
*           JBUFL='0050'X;               /*BUFFER LENGTH              * 01630000
         MVC   A00018+90(2),@X6                                   0054  01640000
*         JMODE='41'X;                   /* EBCDIC MODE,STACKER 1     * 01650000
         MVI   A00018+93,X'41'                                    0055  01660000
*           JRECFM='80'X;                /*RECORD FORMAT              * 01670000
         MVI   A00018+100,X'80'                                   0056  01680000
*           JBLKSZ='0050'X;              /*BLOCK SIZE                 * 01690000
         MVC   A00018+102(2),@X6                                  0057  01700000
*           JRECL='0050'X;               /*RECORD LENGTH              * 01710000
         MVC   A00018+104(2),@X6                                  0058  01720000
*         DMACRF='20'X;                  /*NO CNTRL                   * 01730000
         MVI   50(@7),X'20'                                       0059  01740000
*           GOTO SKIPCHG;                                               01750000
         BC    15,SKIPCHG                                         0060  01760000
*  TAPEIN:                                                              01770000
*         DMACRF='22'X;                  /* CNTRL USED                * 01780000
TAPEIN   MVI   50(@7),X'22'                                       0061  01790000
*         VOLSERL=VOLSERNO;              /*PUT VOLUME SERIAL NUMBER IN  01800000
*                                          JFCB*/                       01810000
         MVC   A00018+118(6),12(@3)                               0062  01820000
*         DATASNM='OLT.READD.DATASET';                                  01830000
         MVC   A00018(17),@C11                                    0063  01840000
         MVI   A00018+17,C' '                                     0063  01850000
         MVC   A00018+18(26),A00018+17                            0063  01860000
*  SKIPCHG:                                                             01870000
*         GEN(OPEN  ((DCBPTR),(INPUT)),TYPE=J);  /*OPEN DATA SET*/      01880000
SKIPCHG  OPEN  ((DCBPTR),(INPUT)),TYPE=J                                01890000
         DS    0H                                                       01900000
*         IF OPENFLG ='0'B THEN                                         01910000
         TM    48(@7),B'00010000'                                 0065  01920000
         BC    05,@9FD                                            0065  01930000
*           DO;                          /*ERROR IN OPEN*/              01940000
*           RTRNCODE=4;                  /* RETURN 04                 * 01950000
         LA    @F,4                                               0067  01960000
*           READDSV=READDSV && READDSV;  /* CLEAR COMMON AREA    M1371* 01970000
         XC    READDSV(6),READDSV                                 0068  01980000
*           FIRSTRD='0'B;                /* RESET FLAG                * 01990000
         NI    INTFLAG,B'01111111'                                0069  02000000
*           RETURN;                                                     02010000
         BC    15,@EL01                                           0070  02020000
*           END;                                                        02030000
*         FIRSTRD='1'B;                  /* SET FIRST READ FLAG       * 02040000
@9FD     OI    INTFLAG,B'10000000'                                0072  02050000
*         IF SLABEL¬='1'B THEN                                          02060000
         TM    A00018+66,B'00000010'                              0073  02070000
*           GOTO RTRN4;                 /* NONSTANDARD LABEL RETURN 4 * 02080000
         BC    12,RTRN4                                           0074  02090000
*         IF DEVTYPE¬='81'X & DEVTYPE ¬= '83'X THEN         /* OX01064* 02100000
         CLI   17(@7),X'81'                                       0075  02110000
         BC    08,@9FC                                            0075  02120000
         CLI   17(@7),X'83'                                       0075  02130000
         BC    08,@9FB                                            0075  02140000
*           DO;                          /*CARD OR DASD INPUT*/         02150000
*           READDSV= READDSV && READDSV; /* ZERO VOL SER SAVE AREA    * 02160000
         XC    READDSV(6),READDSV                                 0077  02170000
*           COUNT=80;                    /*SIZE OF INPUT AREA*/         02180000
         LA    @4,80                                              0078  02190000
*           BUFREG=ADDR(LABEL1);         /*ADDR OF INPUT AREA*/         02200000
         LA    @6,LABEL1                                          0079  02210000
*         GEN(BALR  14,8);                                              02220000
         BALR  14,8                                                     02230000
         DS    0H                                                       02240000
*           SAVE15=8;               /*COMPARE VALUE FOR RTRNCODE */     02250000
         LA    @5,8                                               0081  02260000
*           IF RTRNCODE=SAVE15 THEN                                     02270000
         CR    @F,@5                                              0082  02280000
*             RETURN;               /*ERROR RETURN */                   02290000
         BC    08,@EL01                                           0083  02300000
*           IF RTRNCODE¬=0 THEN                                         02310000
@9FA     LTR   @F,@F                                              0084  02320000
*             GOTO RTRN4;                /* WRONG DATA SET            * 02330000
         BC    07,RTRN4                                           0085  02340000
*           IF VOLAB¬='VOL1' THEN                                       02350000
         CLC   LABEL1(4),@C14                                     0086  02360000
*             GOTO RTRN4;                /* WRONG DATA SET            * 02370000
         BC    07,RTRN4                                           0087  02380000
*           IF LABELNUM¬= VOLSERNO THEN  /* CHECK DSNAME              * 02390000
         CLC   LABEL1+4(6),12(@3)                                 0088  02400000
*             GOTO RTRN4;                /* WRONG DATA SET            * 02410000
         BC    07,RTRN4                                           0089  02420000
*         GEN(BALR  14,8);                                              02430000
         BALR  14,8                                                     02440000
         DS    0H                                                       02450000
*           SAVE15=8;               /*COMPARE VALUE FOR RTRNCODE */     02460000
         LA    @5,8                                               0091  02470000
*           IF RTRNCODE=SAVE15 THEN                                     02480000
         CR    @F,@5                                              0092  02490000
*             RETURN;               /*ERROR RETURN */                   02500000
         BC    08,@EL01                                           0093  02510000
*           IF RTRNCODE¬=0 THEN                                         02520000
@9F9     LTR   @F,@F                                              0094  02530000
*             GOTO RTRN4;                /* WRONG DATA SET            * 02540000
         BC    07,RTRN4                                           0095  02550000
*           IF VOLAB¬='HDR1' THEN                                       02560000
         CLC   LABEL1(4),@C15                                     0096  02570000
*             GOTO RTRN4;                /* WRONG DATA SET            * 02580000
         BC    07,RTRN4                                           0097  02590000
*           READDSV=VOLSERNO;            /* SAVE VOL SER NO.          * 02600000
         MVC   READDSV(6),12(@3)                                  0098  02610000
*           GOTO CKRESET;                                               02620000
         BC    15,CKRESET                                         0099  02630000
*           END;                                                        02640000
*         IF SLABEL ='0'B THEN                                          02650000
@9FB     EQU   *                                                  0101  02660000
@9FC     TM    A00018+66,B'00000010'                              0101  02670000
*           GOTO RTRN4;                  /*NOT A STANDARD LABEL*/       02680000
         BC    08,RTRN4                                           0102  02690000
*  CKRESET:                                                             02700000
*         IF RESETB= '1'B |              /*RESET CALL OR NEW   SA54318* 02710000
*            READDCHK = '1'B THEN        /* SECTION CALL       SA54318* 02720000
CKRESET  TM    18(@3),B'00000001'                                 0103  02730000
         BC    01,@9F8                                            0103  02740000
         TM    A00015,B'00010000'                                 0103  02750000
         BC    12,@9F7                                            0103  02760000
*           DO;                                                         02770000
*           IF DEVTYPE='81'X | DEVTYPE = '83'X THEN     /*     0X01064* 02780000
@9F8     CLI   17(@7),X'81'                                       0105  02790000
         BC    08,@9F6                                            0105  02800000
         CLI   17(@7),X'83'                                       0105  02810000
         BC    07,@9F5                                            0105  02820000
*             DO;                                                       02830000
@9F6     EQU   *                                                  0106  02840000
*             GEN(CLOSE  ((DCBPTR),REREAD),TYPE=T); /*RESET TO BEGINNIN 02850000
*                                                     OF TAPE*/         02860000
         CLOSE  ((DCBPTR),REREAD),TYPE=T                                02870000
         DS    0H                                                       02880000
*         RTRNCODE=0;                                                   02890000
         SR    @F,@F                                              0108  02900000
*         READDCHK = '0'B;               /* RESET NEW SECT FLAGSA54318* 02910000
         NI    A00015,B'11101111'                                 0109  02920000
*             GOTO PROCESS;              /*CONTINUE WITH READ*/         02930000
         BC    15,PROCESS                                         0110  02940000
*             END;                                                      02950000
*  RTRN4:                                                               02960000
*           RTRNCODE=4;                  /*NOT TAPE OR DASD-RETURN*/    02970000
@9F5     EQU   *                                                  0112  02980000
RTRN4    LA    @F,4                                               0112  02990000
*         FIRSTRD='0'B;                  /* RESET FLAG                * 03000000
         NI    INTFLAG,B'01111111'                                0113  03010000
*           RETURN;                                                     03020000
         BC    15,@EL01                                           0114  03030000
*           END;                                                        03040000
*         IF BKSPACE='1'B THEN           /*CHECK BACKSPACE PARAMETER*/  03050000
@9F7     TM    18(@3),B'00000010'                                 0116  03060000
         BC    12,@9F4                                            0116  03070000
*           DO;                                                         03080000
*           IF DEVTYPE='81'X | DEVTYPE = '83'X THEN     /*     0X01064* 03090000
         CLI   17(@7),X'81'                                       0118  03100000
         BC    08,@9F3                                            0118  03110000
         CLI   17(@7),X'83'                                       0118  03120000
         BC    07,@9F2                                            0118  03130000
*             DO;                                                       03140000
*         SAVE15=0;                      /* ZERO SAVE15 */              03150000
@9F3     SR    @5,@5                                              0120  03160000
*         COUNT=NUMB;                                                   03170000
         SR    @4,@4                                              0121  03180000
         IC    @4,19(0,@3)                                        0121  03190000
*             GEN(CNTRL  (DCBPTR),BSR,(COUNT));    /*BACKSPACE */       03200000
         CNTRL  (DCBPTR),BSR,(COUNT)                                    03210000
         DS    0H                                                       03220000
*             IF SAVE15 ¬=0 THEN                                        03230000
         LTR   @5,@5                                              0123  03240000
         BC    08,@9F1                                            0123  03250000
*               DO;                                                     03260000
* RTRN8:                                 /* ERROR RETURN              * 03270000
*         FIRSTRD='0'B;                  /* RESET FLAG                * 03280000
RTRN8    NI    INTFLAG,B'01111111'                                0125  03290000
*               RTRNCODE=8;                                             03300000
         LA    @F,8                                               0126  03310000
*               RETURN;                                                 03320000
         BC    15,@EL01                                           0127  03330000
*               END;                                                    03340000
*             RTRNCODE=0;                                               03350000
@9F1     SR    @F,@F                                              0129  03360000
*             GOTO PROCESS;              /*CONTINUE WITH READ*/         03370000
*             END;                                                      03380000
*           GOTO RTRN4;                  /*NOT TAPE OR DASD-RETURN*/    03390000
*           END;                                                        03400000
*  PROCESS:                                                             03410000
*         BUFREG=ADINAREA;               /*PUT BUFFER ADDR IN R6*/      03420000
@9F4     EQU   *                                                  0134  03430000
PROCESS  L     @6,4(0,@3)                                         0134  03440000
*         IF BUFREG=0 THEN RETURN;                                      03450000
         LTR   @6,@6                                              0135  03460000
         BC    08,@EL01                                           0136  03470000
*         COUNT=SIZE;                    /*PUT SIZE OF BUFFER IN R4*/   03480000
@9F0     L     @4,8(0,@3)                                         0137  03490000
*         IF COUNT =0 THEN               /* IF BUFFER SIZE =0         * 03500000
         LTR   @4,@4                                              0138  03510000
*           GOTO RTRN8;                  /* THEN ERROR RETURN         * 03520000
         BC    08,RTRN8                                           0139  03530000
*         GEN(BALR  14,8);                                              03540000
         BALR  14,8                                                     03550000
         DS    0H                                                       03560000
*         SAVE15=RTRNCODE;               /*SAVE REGISTER 15*/           03570000
         LR    @5,@F                                              0141  03580000
*         IF SAVE15=0 THEN                                              03590000
         LTR   @5,@5                                              0142  03600000
         BC    07,@9EF                                            0142  03610000
*           DO;                                                         03620000
*         IF DEVTYPE¬='81'X & DEVTYPE ¬= '83'X THEN         /* OX01064* 03630000
         CLI   17(@7),X'81'                                       0144  03640000
         BC    08,@9EE                                            0144  03650000
         CLI   17(@7),X'83'                                       0144  03660000
         BC    08,@9ED                                            0144  03670000
*             DO;                        /*CARD OR DASD INPUT*/         03680000
*             IF CKEND='//END' THEN                                     03690000
         CLC   0(5,@6),@C16                                       0146  03700000
         BC    07,@9EC                                            0146  03710000
*               DO;                      /* CHECK FOR EMPTY           * 03720000
*               IF FIRSTRD='1'B THEN     /* DATA SET                  * 03730000
         TM    INTFLAG,B'10000000'                                0148  03740000
         BC    12,@9EB                                            0148  03750000
*                 RTRNCODE=16;           /* RETURN 16                 * 03760000
         LA    @F,16                                              0149  03770000
         BC    15,@9EA                                            0150  03780000
*               ELSE RTRNCODE=12;        /* END OF DATA               * 03790000
@9EB     LA    @F,12                                              0150  03800000
*               END;                     /* END OF DO GROUP           * 03810000
@9EA     EQU   *                                                  0151  03820000
*             FIRSTRD='0'B;              /* RESET FLAG                * 03830000
@9EC     NI    INTFLAG,B'01111111'                                0152  03840000
*             RETURN;                                                   03850000
         BC    15,@EL01                                           0153  03860000
*             END;                                                      03870000
*           FIRSTRD='0'B;                /* RESET FLAG                * 03880000
@9ED     EQU   *                                                  0155  03890000
@9EE     NI    INTFLAG,B'01111111'                                0155  03900000
*           RETURN;                      /*NORMAL RETURN-CODE=0*/       03910000
         BC    15,@EL01                                           0156  03920000
*           END;                                                        03930000
*         IF SAVE15=8 THEN                                              03940000
@9EF     CH    @5,@D1                                             0158  03950000
*           GOTO RTRN8;                  /* ERROR RETURN              * 03960000
         BC    08,RTRN8                                           0159  03970000
*         IF FIRSTRD='1'B THEN           /* FIRST READ                * 03980000
         TM    INTFLAG,B'10000000'                                0160  03990000
*             GOTO RTRN4;                /* EMPTY DATA SET            * 04000000
         BC    01,RTRN4                                           0161  04010000
*           IF DEVTYPE='81'X | DEVTYPE = '83'X THEN     /*     0X01064* 04020000
         CLI   17(@7),X'81'                                       0162  04030000
         BC    08,@9E9                                            0162  04040000
         CLI   17(@7),X'83'                                       0162  04050000
         BC    07,@9E8                                            0162  04060000
*           GEN(CLOSE ((DCBPTR),REREAD),TYPE=T);   /*RESET TO BEGINNING 04070000
*                                                    OF DATA SET*/      04080000
@9E9     EQU   *                                                  0163  04090000
         CLOSE ((DCBPTR),REREAD),TYPE=T                                 04100000
         DS    0H                                                       04110000
*         RTRNCODE=SAVE15;               /*SET RETURN CODE-END OF DATA* 04120000
@9E8     LR    @F,@5                                              0164  04130000
*         END;                                                          04140000
@EL01    L     @D,4(0,@D)                                         0165  04150000
         L     @E,12(0,@D)                                        0165  04160000
         LM    @0,@C,20(@D)                                       0165  04170000
         BCR   15,@E                                              0165  04180000
@DATA1   EQU   *                                                        04190000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           04200000
@1       EQU   01                                                       04210000
@2       EQU   02                                                       04220000
@3       EQU   03                                                       04230000
@4       EQU   04                                                       04240000
@5       EQU   05                                                       04250000
@6       EQU   06                                                       04260000
@7       EQU   07                                                       04270000
@8       EQU   08                                                       04280000
@9       EQU   09                                                       04290000
@A       EQU   10                                                       04300000
@B       EQU   11                                                       04310000
@C       EQU   12                                                       04320000
@D       EQU   13                                                       04330000
@E       EQU   14                                                       04340000
@F       EQU   15                                                       04350000
@D1      DC    H'8'                                                     04360000
         DS    0F                                                       04370000
@C14     DC    C'VOL1'                                                  04380000
@C15     DC    C'HDR1'                                                  04390000
@X3      DC    X'000000000000'                                          04400000
@X6      DC    X'0050'                                                  04410000
@C11     DC    C'OLT.READD.DATASET'                                     04420000
@C16     DC    C'//END'                                                 04430000
         DS    0D                                                       04440000
@DATA    EQU   *                                                        04450000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   04460000
R1       EQU   00000001            FULLWORD POINTER REGISTER            04470000
R2       EQU   00000002            FULLWORD POINTER REGISTER            04480000
R3       EQU   00000003            FULLWORD POINTER REGISTER            04490000
COUNT    EQU   00000004            FULLWORD INTEGER REGISTER            04500000
SAVE15   EQU   00000005            FULLWORD INTEGER REGISTER            04510000
BUFREG   EQU   00000006            FULLWORD POINTER REGISTER            04520000
DCBPTR   EQU   00000007            FULLWORD POINTER REGISTER            04530000
READAD   EQU   00000008            FULLWORD POINTER REGISTER            04540000
R14      EQU   00000014            FULLWORD POINTER REGISTER            04550000
R15      EQU   00000015            FULLWORD INTEGER REGISTER            04560000
RTRNCODE EQU   00000015            FULLWORD INTEGER REGISTER            04570000
         ORG   @DATA+00000072                                           04580000
MODLEV   EQU   *                   1 BYTE(S)                            04590000
         DC    X'02'                                                    04600000
PARMLIST EQU   00000000            20 BYTE(S) ON WORD                   04610000
A00000   EQU   PARMLIST+00000000   1 BYTE(S)                            04620000
MACROLEV EQU   PARMLIST+00000001   1 BYTE(S)                            04630000
A00001   EQU   PARMLIST+00000002   2 BYTE(S)                            04640000
ADINAREA EQU   PARMLIST+00000004   FULLWORD POINTER                     04650000
SIZE     EQU   PARMLIST+00000008   FULLWORD INTEGER                     04660000
VOLSERNO EQU   PARMLIST+00000012   6 BYTE(S)                            04670000
FLAGS    EQU   PARMLIST+00000018   1 BYTE(S)                            04680000
A00002   EQU   PARMLIST+00000018   6 BIT(S)                             04690000
BKSPACE  EQU   PARMLIST+00000018   1 BIT(S)                             04700000
RESETB   EQU   PARMLIST+00000018   1 BIT(S)                             04710000
NUMB     EQU   PARMLIST+00000019   1 BYTE(S)                            04720000
A00003   EQU   00000000            92 BYTE(S) ON WORD                   04730000
A00004   EQU   A00003+00000000     17 BYTE(S)                           04740000
DEVTYPE  EQU   A00003+00000017     1 BYTE(S)                            04750000
A00005   EQU   A00003+00000017     2 BIT(S)                             04760000
DASDKEY  EQU   A00003+00000017     1 BIT(S)                             04770000
A00006   EQU   A00003+00000017     5 BIT(S)                             04780000
A00007   EQU   A00003+00000018     19 BYTE(S)                           04790000
DXLST    EQU   A00003+00000037     3  BYTE  POINTER ON WORD+1           04800000
A00008   EQU   A00003+00000040     8 BYTE(S)                            04810000
A00009   EQU   A00003+00000048     1 BYTE(S)                            04820000
A00010   EQU   A00003+00000048     3 BIT(S)                             04830000
OPENFLG  EQU   A00003+00000048     1 BIT(S)                             04840000
A00011   EQU   A00003+00000048     4 BIT(S)                             04850000
A00012   EQU   A00003+00000049     43 BYTE(S)                           04860000
A00013   EQU   A00003+00000049     1 BYTE(S)                            04870000
DMACRF   EQU   A00003+00000050     1 BYTE(S)                            04880000
A00014   EQU   A00003+00000051     41 BYTE(S)                           04890000
JFCBAREA EQU   @DATA+00000076      176 BYTE(S) ON WORD                  04900000
A00018   EQU   @DATA+00000076      177 BYTE(S) ON WORD                  04910000
DATASNM  EQU   A00018+00000000     44 BYTE(S)                           04920000
A00019   EQU   A00018+00000044     22 BYTE(S)                           04930000
A00020   EQU   A00018+00000044     8 BYTE(S)                            04940000
A00021   EQU   A00018+00000052     1 BYTE(S)                            04950000
A00022   EQU   A00018+00000052     2 BIT(S)                             04960000
SYSINBIT EQU   A00018+00000052     1 BIT(S)                             04970000
A00023   EQU   A00018+00000052     5 BIT(S)                             04980000
A00024   EQU   A00018+00000053     13 BYTE(S)                           04990000
A00025   EQU   A00018+00000066     1 BYTE(S)                            05000000
A00026   EQU   A00018+00000066     6 BIT(S)                             05010000
SLABEL   EQU   A00018+00000066     1 BIT(S)                             05020000
A00027   EQU   A00018+00000066     1 BIT(S)                             05030000
A00028   EQU   A00018+00000067     27 BYTE(S)                           05040000
A00029   EQU   A00018+00000067     20 BYTE(S)                           05050000
JINDBIT  EQU   A00018+00000087     1 BYTE(S)                            05060000
JBUFNO   EQU   A00018+00000088     1 BYTE(S)                            05070000
A00030   EQU   A00018+00000089     1 BYTE(S)                            05080000
JBUFL    EQU   A00018+00000090     2 BYTE(S)                            05090000
A00031   EQU   A00018+00000092     1 BYTE(S)                            05100000
JMODE    EQU   A00018+00000093     1 BYTE(S)                            05110000
TAPEDEN  EQU   A00018+00000094     1 BYTE(S)                            05120000
A00032   EQU   A00018+00000095     23 BYTE(S)                           05130000
A00033   EQU   A00018+00000095     5 BYTE(S)                            05140000
JRECFM   EQU   A00018+00000100     1 BYTE(S)                            05150000
A00034   EQU   A00018+00000101     1 BYTE(S)                            05160000
JBLKSZ   EQU   A00018+00000102     2 BYTE(S)                            05170000
JRECL    EQU   A00018+00000104     2 BYTE(S)                            05180000
A00035   EQU   A00018+00000106     11 BYTE(S)                           05190000
JVOLNUM  EQU   A00018+00000117     1 BYTE(S)                            05200000
VOLSERL  EQU   A00018+00000118     6 BYTE(S)                            05210000
A00036   EQU   A00018+00000124     53 BYTE(S)                           05220000
XITLIST  EQU   @DATA+00000252      4 BYTE(S) ON WORD                    05230000
         ORG   XITLIST+00000000                                         05240000
A00037   EQU   *                   1 BYTE(S)                            05250000
         DC    X'87'                                                    05260000
A00038   EQU   *                   3  BYTE  POINTER ON WORD+1           05270000
         DC    AL3(JFCBAREA)                                            05280000
CKEND    EQU   00000000            5 BYTE(S)                            05290000
LABEL1   EQU   @DATA+00000256      80 BYTE(S)                           05300000
VOLAB    EQU   LABEL1+00000000     4 BYTE(S)                            05310000
LABELNUM EQU   LABEL1+00000004     6 BYTE(S)                            05320000
A00039   EQU   LABEL1+00000010     70 BYTE(S)                           05330000
         ORG   @DATA+00000336                                           05340000
INTFLAG  EQU   *                   1 BYTE(S)                            05350000
         DC    X'00'                                                    05360000
FIRSTRD  EQU   INTFLAG+00000000    1 BIT(S)                             05370000
A00040   EQU   INTFLAG+00000000    1 BIT(S)                             05380000
         ORG   @DATA+00000338                                           05390000
PATCH    EQU   *                   80 BYTE(S) ON HWORD                  05400000
         DC    C' '                                                     05410000
         DC    00079C' '                                                05420000
         ORG   @DATA                                                    05430000
         DS    00000418C                                                05440000
@TEMPS   DS    0F                                                       05450000
@TEMP4   DC    F'0'                                                     05460000
COMAREA  IFDCOM                                                         05470000
A00015   EQU   CESWT8+00000000     1 BYTE(S)                            05480000
A00016   EQU   A00015+00000000     3 BIT(S)                             05490000
READDCHK EQU   A00015+00000000     1 BIT(S)                             05500000
A00017   EQU   A00015+00000000     1 BIT(S)                             05510000
@DATEND  EQU   *                                                        05520000
@9FF     EQU   RTRN4                                                    05530000
@9F2     EQU   RTRN4                                                    05540000
         END    ,(C'PL/S',1400,76139)                                   05550000
./  ADD  SSI=61730086,NAME=IFDOLT26
         TITLE '      LOGSCN IFDOLT26'                                  00010000
         TITLE   'LOGSCAN IFDOLT26  '                                   00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT26 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT26 22 JUN 76'                             0002  00070000
         ST    @E,12(0,@D)                                        0002  00080000
         STM   @0,@C,20(@D)                                       0002  00090000
         BALR  @B,0                                               0002  00100000
@PSTART  DS    0H                                                 0002  00110000
         USING @PSTART+00000,@B                                   0002  00120000
         ST    @D,@SAV001+4                                       0002  00130000
         LA    @F,@SAV001                                         0002  00140000
         ST    @F,8(0,@D)                                         0002  00150000
         LR    @D,@F                                              0002  00160000
*         GEN(USING CHASCT,2);                                          00170000
         USING CHASCT,2                                                 00180000
         DS    0H                                                       00190000
*         DCL CESWT6 CHAR(1) GENERATED;  /*OLTEP SWITCHES*/             00200000
*         DCL 1 * CHAR(1) BASED(ADDR(CESWT6)),                          00210000
*           2 * BIT(2),                                                 00220000
*           2 EOJBIT BIT(1),             /*END OF JOB INDICATOR*/       00230000
*           2 * BIT(5);                                                 00240000
*         DCL PATCH CHAR(80) BDY(HWORD) INIT(' ');                      00250000
*         DCL LOGADR PTR GENERATED;                                     00260000
*         GENERATE DATA;                                                00270000
*         ADEXT=SAVEADEX;               /*PUT AD OF EXTRACTOR IN REG12* 00280000
         L     @C,SAVEADEX                                        0034  00290000
*         IF EOJBIT= '1'B THEN          /*TEST FOR LAST CALL*/          00300000
         TM    A00018,B'00100000'                                 0035  00310000
         BC    12,@9FF                                            0035  00320000
*           DO;                         /*END OF JOB ROUTINE*/          00330000
*           S='00'X;                    /*RESET SWITCHES TO 0*/         00340000
         MVI   S,X'00'                                            0037  00350000
*           EOJBIT='0'B;                /*RESET EOJBIT TO 0*/           00360000
         NI    A00018,B'11011111'                                 0038  00370000
*           LOGADR=0;                   /*ZERO LOGADR*/                 00380000
         SR    @F,@F                                              0039  00390000
         ST    @F,LOGADR                                          0039  00400000
*           RTRNPT= ADDR(ENDJOB1);        /* PUT RETURN ADDRESS IN R14* 00410000
         LA    @E,ENDJOB1                                         0040  00420000
*   EOJ:                                                                00430000
*           ENTPTR=ADEXT + 8;                                           00440000
EOJ      LA    @7,8                                               0041  00450000
         AR    @7,@C                                              0041  00460000
*           GOTO ENTPTR;                /*BRANCH TO EXTRACTOR END OF    00470000
*                                         JOB ROUTINE*/                 00480000
         BCR   15,@7                                              0042  00490000
*  ENDJOB1:                                                             00500000
*           GEN(IFDMOD DELETE='46');     /*DELETE EXTRACTOR   */        00510000
ENDJOB1  IFDMOD DELETE='46'                                             00520000
         DS    0H                                                       00530000
*           RETURN;                                                     00540000
         BC    15,@EL01                                           0044  00550000
*           END;                                                        00560000
*         SAVEREG1=PARMPTR;             /*SAVE REG 1 (ADDRESS OF MACRO  00570000
*                                         PARMLIST)*/                   00580000
@9FF     LR    @3,@1                                              0046  00590000
*         IF MACROLEV < '02'X THEN                                      00600000
         CLI   1(@3),X'02'                                        0047  00610000
         BC    10,@9FE                                            0047  00620000
*           DO;                                                         00630000
*           RTRNCODE=4;                                                 00640000
         LA    @F,4                                               0049  00650000
*           RETURN;                                                     00660000
         BC    15,@EL01                                           0050  00670000
*           END;                                                        00680000
*         IF MODLEV < MACROLEV THEN                                     00690000
@9FE     CLC   MODLEV(1),1(@3)                                    0052  00700000
         BC    10,@9FD                                            0052  00710000
*           DO;                                                         00720000
* RTRN4:                                                                00730000
*           RTRNCODE=4;                                                 00740000
RTRN4    LA    @F,4                                               0054  00750000
*           RETURN;                                                     00760000
         BC    15,@EL01                                           0055  00770000
*           END;                                                        00780000
*         IF ESVBIT='1'B THEN                                           00790000
@9FD     TM    16(@3),B'00000100'                                 0057  00800000
         BC    12,@9FC                                            0057  00810000
*           DO;                          /*ESV RECORDS NOT SUPPORTED*/  00820000
* RTRN16:                                                               00830000
*           RTRNCODE=16;                 /* UNSUPPORTED RECORD TYPE   * 00840000
RTRN16   LA    @F,16                                              0059  00850000
*           RETURN;                                                     00860000
         BC    15,@EL01                                           0060  00870000
*           END;                                                        00880000
*          IF SIZE= 0 &          /* BUFFER SIZE = 0 AND       @ZA09699* 00890000
*           RESETB = '0'B THEN   /*RESET IS  OFF              @ZA09699* 00900000
@9FC     SR    @F,@F                                              0062  00910000
         C     @F,8(0,@3)                                         0062  00920000
         BC    07,@9FB                                            0062  00930000
         TM    16(@3),B'00000001'                                 0062  00940000
         BC    05,@9FA                                            0062  00950000
*           DO;                          /* ERROR                     * 00960000
* ERRETRN:                               /* BRANCH ENTRY              * 00970000
*             RTRNCODE=8;                /* RETURN CODE               * 00980000
ERRETRN  LA    @F,8                                               0064  00990000
*             RETURN;                    /* RETURN TO CALLER          * 01000000
         BC    15,@EL01                                           0065  01010000
*           END;                         /* END OF DO GROUP           * 01020000
*         ADBUF=ADINAREA;               /*PUT ADDRESS OF BUFFER IN      01030000
*                                         REG 5 */                      01040000
@9FA     EQU   *                                                  0067  01050000
@9FB     L     @5,4(0,@3)                                         0067  01060000
*         IF PASSBIT ='0'B THEN         /*TEST IF EXTRACTOR MUST BE     01070000
*                                         LOADED*/                      01080000
         TM    S,B'00100000'                                      0068  01090000
         BC    05,@9F9                                            0068  01100000
*           DO;                                                         01110000
*           GENERATE (CENXTR);           /*LOAD EXTRACTOR*/             01120000
         CENXTR                                                         01130000
         DS    0H                                                       01140000
*           ADEXT = RTRNCODE;           /*STORE BASE ADDRESS OF EXTRACT 01150000
*                                         IN REG 12*/                   01160000
         LR    @C,@F                                              0071  01170000
*           IF ADEXT<100 THEN            /*WAS EXTRACTOR LOADED       * 01180000
         CH    @C,@D1                                             0072  01190000
         BC    10,@9F8                                            0072  01200000
*             DO;                                                       01210000
*             RTRNCODE=4;                /*NO ROOM FOR EXTRACTOR*/      01220000
         LA    @F,4                                               0074  01230000
*             RETURN;                                                   01240000
         BC    15,@EL01                                           0075  01250000
*             END;                                                      01260000
*           SAVEADEX=ADEXT;             /*STORE ADDRESS OF EXTRACTOR*/  01270000
@9F8     ST    @C,SAVEADEX                                        0077  01280000
*           PASSBIT='1'B;               /*SET PASSBIT SO EXTRACTOR WON' 01290000
*                                         HAVE TO BE LOADED IF CALLED   01300000
*                                         AGAIN*/                       01310000
         OI    S,B'10100000'                                      0078  01320000
*           FIRSTRD='1'B;                /* SET FIRST READ FLAG       * 01330000
*           LOGADR=ADDR(IFDOLT26);                                      01340000
         L     @8,@A1              ADDRESS OF IFDOLT26            0080  01350000
         ST    @8,LOGADR                                          0080  01360000
*           END;                                                        01370000
*          IF RESETB = '1'B THEN /* RESET REQUIRED            @ZA09699* 01380000
@9F9     TM    16(@3),B'00000001'                                 0082  01390000
         BC    12,@9F7                                            0082  01400000
*           DO;                  /*                           @ZA09699* 01410000
*            RTRNPT=ADDR(RTRNSET); /*RETURN ADDRESS           @ZA09699* 01420000
         LA    @E,RTRNSET                                         0084  01430000
*            ENTPTR=ADEXT+4;       /* INTO R14 AND GO         @ZA09699* 01440000
         LA    @7,4                                               0085  01450000
         AR    @7,@C                                              0085  01460000
*            GO TO ENTPTR;         /* TO EXTRACT              @ZA09699* 01470000
         BCR   15,@7                                              0086  01480000
* RTRNSET:                       /* RESTART                   @ZA09699* 01490000
*            RETURN;               /*                         @ZA09699* 01500000
*         END;                     /*                         @ZA09699* 01510000
*         PARMPTR=ADDR(PARMLIST);       /*PUT ADDRESS OF PARMLIST FOR   01520000
*                                         EXTRACTOR IN REG 1*/          01530000
@9F7     LA    @1,PARMLIST                                        0089  01540000
*         ADRDBUF=ADBUF;                /*SET UP PARMLIST*/             01550000
         ST    @5,PARMLIST                                        0090  01560000
*         BYTECT=SIZE;                                                  01570000
         MVC   PARMLIST+4(2),10(@3)                               0091  01580000
*         IF ANYBIT='1'B THEN            /* ANY RECORD OKAY      M1013* 01590000
         TM    16(@3),B'00000010'                                 0092  01600000
*           GOTO REAPROC;                                               01610000
         BC    01,REAPROC                                         0093  01620000
*         IF CPUBIT='1'B THEN            /* CKECK IF CPU DESIRED M1013* 01630000
         TM    16(@3),B'00010000'                                 0094  01640000
         BC    12,@9F6                                            0094  01650000
*           DO;                          /*                      M1013* 01660000
*           RECTYPE='10'X;               /* SET RECKEY           M1013* 01670000
         MVI   PARMLIST+8,X'10'                                   0096  01680000
*           GOTO REAPROC;                /* GO READ RECORD       M1013* 01690000
         BC    15,REAPROC                                         0097  01700000
*           END;                         /*                      M1013* 01710000
*         IF OBRBIT='1'B THEN           /*CHECK IF OBR DESIRED*/        01720000
@9F6     TM    16(@3),B'10000000'                                 0099  01730000
         BC    12,@9F5                                            0099  01740000
*           DO;                                                         01750000
*           RECTYPE='30'X;              /*SET CODE IN PARMLIST*/        01760000
         MVI   PARMLIST+8,X'30'                                   0101  01770000
*           GOTO REAPROC;                                               01780000
         BC    15,REAPROC                                         0102  01790000
*           END;                                                        01800000
*         IF SDRBIT='1'B THEN           /*CHECK IF SDR DESIRED*/        01810000
@9F5     TM    16(@3),B'01000000'                                 0104  01820000
*           GOTO RTRN16;                 /* RECORD UNSUPPORTED        * 01830000
         BC    01,RTRN16                                          0105  01840000
*         IF TPBIT='1'B THEN             /* CHECK FOR TP RECORD       * 01850000
         TM    16(@3),B'00001000'                                 0106  01860000
*           GOTO RTRN16;                 /* RECORD UNSUPPORTED        * 01870000
         BC    01,RTRN16                                          0107  01880000
*         IF CHIBIT='1'B THEN           /*CHECK IF CHI RECORD DESIRED*/ 01890000
         TM    16(@3),B'00100000'                                 0108  01900000
         BC    12,@9F4                                            0108  01910000
*           RECTYPE='20'X;              /*SET REC TYPE CODE IN PARMLST* 01920000
         MVI   PARMLIST+8,X'20'                                   0109  01930000
*  REAPROC:                                                             01940000
*           REAUSED='1'B;                                               01950000
@9F4     EQU   *                                                  0110  01960000
REAPROC  OI    S,B'00010000'                                      0110  01970000
*           RTRNPT=ADDR(RTRNREA);       /*PUT RETURN ADDRESS IN REG14*/ 01980000
         LA    @E,RTRNREA                                         0111  01990000
*           GOTO ADEXT;                 /*BRANCH TO EXTRACTOR FOR READ  02000000
*                                         FROM REA ROUTINE*/            02010000
         BCR   15,@C                                              0112  02020000
*  RTRNREA:                                                             02030000
*           COMPREG=12;                  /* CHECK FOR BOTH OPENS      * 02040000
RTRNREA  LA    @9,12                                              0113  02050000
*           IF RTRNCODE=COMPREG THEN     /* FAILING                   * 02060000
         CR    @F,@9                                              0114  02070000
*             GOTO RTRN4;                /* ERROR                     * 02080000
         BC    08,RTRN4                                           0115  02090000
*           COMPREG=4;                                                  02100000
         LA    @9,4                                               0116  02110000
*           IF RTRNCODE=COMPREG THEN    /*CHECK FOR END OF DATA*/       02120000
         CR    @F,@9                                              0117  02130000
         BC    07,@9F3                                            0117  02140000
*           DO;                                                         02150000
*  TESTMORE:                                                            02160000
*             RTRNPT=ADDR(RTRNTEST);     /*PUT RETURN ADDR IN REG(14)*/ 02170000
TESTMORE LA    @E,RTRNTEST                                        0119  02180000
*             ENTPTR = ADEXT + 28;                                      02190000
         LA    @7,28                                              0120  02200000
         AR    @7,@C                                              0120  02210000
*             GOTO ENTPTR;              /*BRANCH TO EXTRACTOR FOR TEST  02220000
*                                         FOR ADDITIONAL RECORDS        02230000
*                                         ROUTINE*/                     02240000
         BCR   15,@7                                              0121  02250000
*  RTRNTEST:                                                            02260000
*             COMPREG=48;                                               02270000
RTRNTEST LA    @9,48                                              0122  02280000
*             IF RTRNCODE=COMPREG THEN                                  02290000
         CR    @F,@9                                              0123  02300000
*               GOTO REAPROC;                                           02310000
         BC    08,REAPROC                                         0124  02320000
*           IF FIRSTRD='1'B THEN         /* IS THIS FIRST READ        * 02330000
         TM    S,B'10000000'                                      0125  02340000
         BC    12,@9F2                                            0125  02350000
*             RTRNCODE=16;               /* EMPTY DATA SET            * 02360000
         LA    @F,16                                              0126  02370000
         BC    15,@9F1                                            0127  02380000
*           ELSE RTRNCODE=12;            /* NO. END OF DATA SET       * 02390000
@9F2     LA    @F,12                                              0127  02400000
*           FIRSTRD='0'B;                /* RESET FLAG                * 02410000
@9F1     NI    S,B'01111111'                                      0128  02420000
*           RETURN;                                                     02430000
         BC    15,@EL01                                           0129  02440000
*           END;                                                        02450000
*           FIRSTRD='0'B;                /* RESET FLAG                * 02460000
@9F3     NI    S,B'01111111'                                      0131  02470000
*           COMPREG=0;                                                  02480000
         SR    @9,@9                                              0132  02490000
*           IF RTRNCODE¬=COMPREG THEN   /*CHECK FOR ERROR IN READ*/     02500000
         CR    @F,@9                                              0133  02510000
*             GOTO ERRETRN;             /*AN ERROR HAS OCCURRED-RETURN* 02520000
         BC    07,ERRETRN                                         0134  02530000
*               IF RECOUNT > '11'X THEN  /* IF PART OF MULTIPLE X02906* 02540000
         CLI   14(@5),X'11'                                       0135  02550000
*                 GOTO REAPROC;          /* RECORD, READ ANOTHERX02906* 02560000
         BC    02,REAPROC                                         0136  02570000
*           IF ANYBIT='1'B THEN                                         02580000
         TM    16(@3),B'00000010'                                 0137  02590000
*                GOTO A;                 /* CHK FOR PARAMETERS  X02906* 02600000
         BC    01,A                                               0138  02610000
*         VALIDREC=RECTYPE | '0F'X;      /* GET UPPER LIMIT      M1013* 02620000
         MVI   VALIDREC,X'0F'                                     0139  02630000
         OC    VALIDREC(1),PARMLIST+8                             0139  02640000
*         IF RECKEY < RECTYPE |          /* LESS THAN LOWER LIM  M1013* 02650000
*           RECKEY > VALIDREC THEN       /* GREATER THAN UPPER   M1013* 02660000
         CLC   8(1,@5),PARMLIST+8                                 0140  02670000
         BC    04,@9F0                                            0140  02680000
         CLC   8(1,@5),VALIDREC                                   0140  02690000
         BC    12,@9EF                                            0140  02700000
*           GOTO REAPROC;                /* READ ANOTHER REC     M1013* 02710000
         BC    03,REAPROC                                         0141  02720000
*         IF CPUBIT = '1'B THEN          /* SUCCESSFUL READ CPU X02906* 02730000
@9EF     TM    16(@3),B'00010000'                                 0142  02740000
*             GOTO RTRNZERO;                                            02750000
         BC    01,RTRNZERO                                        0143  02760000
*  A:                                                                   02770000
*           IF SRCHAD ¬='FFFF'X THEN                                    02780000
A        CLC   14(2,@3),@X10                                      0144  02790000
         BC    08,@9EE                                            0144  02800000
*             DO;                        /*SEARCH ON DEVICE ADDRESS*/   02810000
*           IF RECKEY >= '20'X &         /*   CHI REC            M1013* 02820000
*               RECKEY <='2F'X THEN      /*                      M1013* 02830000
         CLI   8(@5),X'20'                                        0146  02840000
         BC    04,@9ED                                            0146  02850000
         CLI   8(@5),X'2F'                                        0146  02860000
         BC    02,@9EC                                            0146  02870000
*               DO;                      /*CHI RECORD*/                 02880000
*               IF SRCHAD=CHIDEVAD THEN                                 02890000
         CLC   14(2,@3),82(@5)                                    0148  02900000
*                 GOTO CLTYPCHK;         /* CHECK FOR CLASS&TYPEX02906* 02910000
         BC    08,CLTYPCHK                                        0149  02920000
*               ELSE GOTO REAPROC;       /* WRONG ADR-READ ANOTHR X0290 02930000
*                                          RECORD*/                     02940000
         BC    15,REAPROC                                         0150  02950000
*               END;                                                    02960000
*                                                                       02970000
*           IF RECKEY >= '30'X &         /* IF OBR REC READ (ON X02906* 02980000
*             RECKEY <= '3F'X THEN       /* ANY REQ) CHK DEVADR X02906* 02990000
@9EC     EQU   *                                                  0152  03000000
@9ED     CLI   8(@5),X'30'                                        0152  03010000
         BC    04,@9EB                                            0152  03020000
         CLI   8(@5),X'3F'                                        0152  03030000
         BC    02,@9EA                                            0152  03040000
*               IF SRCHAD ¬= OBRDEVAD THEN /* IF DEV ADDR       X02906* 03050000
         CLC   14(2,@3),66(@5)                                    0153  03060000
*               GOTO REAPROC;            /*WRONG ADDR -READ ANOTHER     03070000
*                                          RECORD*/                     03080000
         BC    07,REAPROC                                         0154  03090000
*             END;                                                      03100000
@9EA     EQU   *                                                  0155  03110000
@9EB     EQU   *                                                  0155  03120000
*                                                                       03130000
*   CLTYPCHK:                            /*                     X02906* 03140000
*           IF RECKEY >= '20'X &         /*   CHI REC            M1013* 03150000
*               RECKEY <='2F'X THEN      /*                      M1013* 03160000
@9EE     EQU   *                                                  0156  03170000
CLTYPCHK CLI   8(@5),X'20'                                        0156  03180000
         BC    04,@9E9                                            0156  03190000
         CLI   8(@5),X'2F'                                        0156  03200000
         BC    02,@9E8                                            0156  03210000
*             DO;                                                       03220000
*           IF DEVCL = '00'X THEN        /* IF NO CLASS SPEC,   X02906* 03230000
         CLI   12(@3),X'00'                                       0158  03240000
*             GOTO TYPONLY1;             /* CHECK FOR TYPE      X02906* 03250000
         BC    08,TYPONLY1                                        0159  03260000
*           IF CHIDEVCL ¬= DEVCL THEN    /* NO MATCH            X02906* 03270000
         CLC   78(1,@5),12(@3)                                    0160  03280000
*             GOTO REAPROC;              /* READ ANOTHER RECCORDX02906* 03290000
         BC    07,REAPROC                                         0161  03300000
*   TYPONLY1:                            /*                     X02906* 03310000
*           IF DEVTYPE='00'X THEN        /* NO TYPE SPECIFIED   X02906* 03320000
TYPONLY1 CLI   13(@3),X'00'                                       0162  03330000
*             GOTO RTRNZERO;             /* GOOD RETURN         X02906* 03340000
         BC    08,RTRNZERO                                        0163  03350000
*           IF CHIDEVTP = DEVTYPE THEN   /* DO TYPES MATCH      X02906* 03360000
         CLC   79(1,@5),13(@3)                                    0164  03370000
*               GOTO RTRNZERO;           /* GOOD RETURN         X02906* 03380000
         BC    08,RTRNZERO                                        0165  03390000
*             ELSE GOTO REAPROC;         /* WRONG TYP-READ ANTHRX02906* 03400000
         BC    15,REAPROC                                         0166  03410000
*             END;                                                      03420000
*         IF RECKEY >= '30'X &           /* IF OBR REC READ (ON X02906* 03430000
*           RECKEY <= '3F'X THEN         /* ANY REQ) CHK CL&TYP X02906* 03440000
@9E8     EQU   *                                                  0168  03450000
@9E9     CLI   8(@5),X'30'                                        0168  03460000
         BC    04,@9E7                                            0168  03470000
         CLI   8(@5),X'3F'                                        0168  03480000
         BC    02,@9E6                                            0168  03490000
*           DO;                          /*                     X02906* 03500000
*           IF DEVCL = '00'X THEN        /* IF NO CLASS SPEC,   X02906* 03510000
         CLI   12(@3),X'00'                                       0170  03520000
*             GOTO TYPONLY2;             /* CHECK FOR TYPE      X02906* 03530000
         BC    08,TYPONLY2                                        0171  03540000
*         IF OBRDEVCL ¬= DEVCL THEN      /* CLASSES DONT MATCH  X02906* 03550000
         CLC   62(1,@5),12(@3)                                    0172  03560000
*           GOTO REAPROC;                /* READ ANOTHER REC    X02906* 03570000
         BC    07,REAPROC                                         0173  03580000
*   TYPONLY2:                            /*                     X02906* 03590000
*         IF DEVTYPE='00'X THEN          /* NO DEVICE TYPE      X02906* 03600000
TYPONLY2 CLI   13(@3),X'00'                                       0174  03610000
*           GOTO RTRNZERO;               /* GOOD RETURN         X02906* 03620000
         BC    08,RTRNZERO                                        0175  03630000
*         IF OBRDEVTP ¬= DEVTYPE THEN    /* IF TYPES NOT SAME   X02906* 03640000
         CLC   63(1,@5),13(@3)                                    0176  03650000
*         GOTO REAPROC;                  /* GO READ ANOTHER REC X02906* 03660000
         BC    07,REAPROC                                         0177  03670000
*           END;                                                        03680000
*   RTRNZERO:                                                           03690000
*         FIRSTRD='0'B;                  /* RESET FLAG                * 03700000
@9E6     EQU   *                                                  0179  03710000
@9E7     EQU   *                                                  0179  03720000
RTRNZERO NI    S,B'01111111'                                      0179  03730000
*         RTRNCODE=0;                    /*RETURN CODE*/                03740000
         SR    @F,@F                                              0180  03750000
*         END;                                                          03760000
@EL01    L     @D,4(0,@D)                                         0181  03770000
         L     @E,12(0,@D)                                        0181  03780000
         LM    @0,@C,20(@D)                                       0181  03790000
         BCR   15,@E                                              0181  03800000
@DATA1   EQU   *                                                        03810000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           03820000
@1       EQU   01                                                       03830000
@2       EQU   02                                                       03840000
@3       EQU   03                                                       03850000
@4       EQU   04                                                       03860000
@5       EQU   05                                                       03870000
@6       EQU   06                                                       03880000
@7       EQU   07                                                       03890000
@8       EQU   08                                                       03900000
@9       EQU   09                                                       03910000
@A       EQU   10                                                       03920000
@B       EQU   11                                                       03930000
@C       EQU   12                                                       03940000
@D       EQU   13                                                       03950000
@E       EQU   14                                                       03960000
@F       EQU   15                                                       03970000
@D1      DC    H'100'                                                   03980000
@A1      DC    A(IFDOLT26)                                              03990000
         DS    0F                                                       04000000
@X10     DC    X'FFFF'                                                  04010000
         DS    0D                                                       04020000
@DATA    EQU   *                                                        04030000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   04040000
         ORG   @DATA+00000072                                           04050000
MODLEV   EQU   *                   1 BYTE(S)                            04060000
         DC    X'02'                                                    04070000
R1       EQU   00000001            FULLWORD POINTER REGISTER            04080000
PARMPTR  EQU   00000001            FULLWORD POINTER REGISTER            04090000
R2       EQU   00000002            FULLWORD POINTER REGISTER            04100000
SAVEREG1 EQU   00000003            FULLWORD POINTER REGISTER            04110000
ADBUF    EQU   00000005            FULLWORD POINTER REGISTER            04120000
ENTPTR   EQU   00000007            FULLWORD POINTER REGISTER            04130000
COMPREG  EQU   00000009            FULLWORD INTEGER REGISTER            04140000
ADEXT    EQU   00000012            FULLWORD POINTER REGISTER            04150000
R14      EQU   00000014            FULLWORD POINTER REGISTER            04160000
RTRNPT   EQU   00000014            FULLWORD POINTER REGISTER            04170000
R15      EQU   00000015            FULLWORD POINTER REGISTER            04180000
RTRNCODE EQU   00000015            FULLWORD INTEGER REGISTER            04190000
A00000   EQU   00000000            17 BYTE(S) ON WORD                   04200000
A00001   EQU   A00000+00000000     1 BYTE(S)                            04210000
MACROLEV EQU   A00000+00000001     1 BYTE(S)                            04220000
A00002   EQU   A00000+00000002     2 BYTE(S)                            04230000
ADINAREA EQU   A00000+00000004     FULLWORD POINTER                     04240000
SIZE     EQU   A00000+00000008     FULLWORD INTEGER                     04250000
DEVCL    EQU   A00000+00000012     1 BYTE(S)                            04260000
DEVTYPE  EQU   A00000+00000013     1 BYTE(S)                            04270000
SRCHAD   EQU   A00000+00000014     2 BYTE(S)                            04280000
DATA     EQU   A00000+00000016     1 BYTE(S)                            04290000
OBRBIT   EQU   A00000+00000016     1 BIT(S)                             04300000
SDRBIT   EQU   A00000+00000016     1 BIT(S)                             04310000
CHIBIT   EQU   A00000+00000016     1 BIT(S)                             04320000
CPUBIT   EQU   A00000+00000016     1 BIT(S)                             04330000
TPBIT    EQU   A00000+00000016     1 BIT(S)                             04340000
ESVBIT   EQU   A00000+00000016     1 BIT(S)                             04350000
ANYBIT   EQU   A00000+00000016     1 BIT(S)                             04360000
RESETB   EQU   A00000+00000016     1 BIT(S)                             04370000
PARMLIST EQU   @DATA+00000076      10 BYTE(S) ON WORD                   04380000
ADRDBUF  EQU   PARMLIST+00000000   FULLWORD POINTER                     04390000
BYTECT   EQU   PARMLIST+00000004   HALFWORD INTEGER                     04400000
         ORG   PARMLIST+00000006                                        04410000
A00003   EQU   *                   16 BIT(S) ON BYTE                    04420000
         DC    X'0020'                                                  04430000
A00004   EQU   PARMLIST+00000006   8 BIT(S)                             04440000
SELRECT  EQU   PARMLIST+00000007   1 BIT(S)                             04450000
FULLKEY  EQU   PARMLIST+00000007   1 BIT(S)                             04460000
CONCAT   EQU   PARMLIST+00000007   1 BIT(S)                             04470000
A00005   EQU   PARMLIST+00000007   5 BIT(S)                             04480000
RECTYPE  EQU   PARMLIST+00000008   1 BYTE(S)                            04490000
         ORG   PARMLIST+00000009                                        04500000
A00006   EQU   *                   1 BYTE(S)                            04510000
         DC    X'00'                                                    04520000
S        EQU   *                   8 BIT(S) ON BYTE                     04530000
         DC    X'00'                                                    04540000
FIRSTRD  EQU   S+00000000          1 BIT(S)                             04550000
A00007   EQU   S+00000000          1 BIT(S)                             04560000
PASSBIT  EQU   S+00000000          1 BIT(S)                             04570000
REAUSED  EQU   S+00000000          1 BIT(S)                             04580000
A00008   EQU   S+00000000          4 BIT(S)                             04590000
A00009   EQU   00000000            84 BYTE(S) ON WORD                   04600000
A00010   EQU   A00009+00000000     78 BYTE(S)                           04610000
CHIDEVCL EQU   A00009+00000078     1 BYTE(S)                            04620000
CHIDEVTP EQU   A00009+00000079     1 BYTE(S)                            04630000
A00011   EQU   A00009+00000080     2 BYTE(S)                            04640000
CHIDEVAD EQU   A00009+00000082     2 BYTE(S)                            04650000
A00012   EQU   00000000            68 BYTE(S) ON WORD                   04660000
A00013   EQU   A00012+00000000     62 BYTE(S)                           04670000
OBRDEVCL EQU   A00012+00000062     1 BYTE(S)                            04680000
OBRDEVTP EQU   A00012+00000063     1 BYTE(S)                            04690000
A00014   EQU   A00012+00000064     2 BYTE(S)                            04700000
OBRDEVAD EQU   A00012+00000066     2 BYTE(S)                            04710000
A00015   EQU   00000000            15 BYTE(S)                           04720000
A00016   EQU   A00015+00000000     8 BYTE(S)                            04730000
RECKEY   EQU   A00015+00000008     1 BYTE(S)                            04740000
A00017   EQU   A00015+00000009     5 BYTE(S)                            04750000
RECOUNT  EQU   A00015+00000014     1 BYTE(S)                            04760000
VALIDREC EQU   @DATA+00000087      1 BYTE(S)                            04770000
SAVEADEX EQU   @DATA+00000088      FULLWORD POINTER                     04780000
         ORG   @DATA+00000092                                           04790000
PATCH    EQU   *                   80 BYTE(S) ON HWORD                  04800000
         DC    C' '                                                     04810000
         DC    00079C' '                                                04820000
         ORG   @DATA                                                    04830000
         DS    00000172C                                                04840000
@TEMPS   DS    0F                                                       04850000
COMAREA  IFDCOM                                                         04860000
A00018   EQU   CESWT6+00000000     1 BYTE(S)                            04870000
A00019   EQU   A00018+00000000     2 BIT(S)                             04880000
EOJBIT   EQU   A00018+00000000     1 BIT(S)                             04890000
A00020   EQU   A00018+00000000     5 BIT(S)                             04900000
@DATEND  EQU   *                                                        04910000
RTRNSET  EQU   @EL01                                                    04920000
@9F0     EQU   REAPROC                                                  04930000
         END    ,(C'PL/S',1400,76174)                                   04940000
./  ADD  SSI=33600469,NAME=IFDOLT28
         TITLE ' PLINK MODULE IFDOLT28'                                 00010000
         TITLE 'PLINK MODULE IFDOLT28'                                  00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT28 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT28 26 DEC 73'                             0002  00070000
         ST    @E,12(0,@D)                                        0002  00080000
         STM   @0,@C,20(@D)                                       0002  00090000
         BALR  @B,0                                               0002  00100000
@PSTART  DS    0H                                                 0002  00110000
         USING @PSTART+00000,@B                                   0002  00120000
         ST    @D,@SAV001+4                                       0002  00130000
         LA    @F,@SAV001                                         0002  00140000
         ST    @F,8(0,@D)                                         0002  00150000
         LR    @D,@F                                              0002  00160000
*         GEN(USING CHASCT,2);                                          00170000
         USING CHASCT,2                                                 00180000
         DS    0H                                                       00190000
*         /************************************************************ 00200000
*         /*    REGISTER  DEFINITION                                  * 00210000
*         /************************************************************ 00220000
*         DCL R0 REG(0);                                                00230000
*         DCL R1 REG(1) PTR;                                            00240000
*         DCL R2 REG(2) PTR;                                            00250000
*         DCL R3 REG(3);                                                00260000
*         DCL R4 REG(4) PTR;                                            00270000
*         DCL R5 REG(5);                                                00280000
*         DCL R6 REG(6);                                                00290000
*         DCL R7 REG(7);                                                00300000
*         DCL R8 REG(8) PTR;                                            00310000
*         DCL R9 REG(9);                                                00320000
*         DCL R10 REG(10);                                              00330000
*         DCL R11 REG(11);                                              00340000
*         DCL R12 REG(12);                                              00350000
*         DCL R13 REG(13);                                              00360000
*         DCL R14 REG(14);                                              00370000
*         DCL R15 REG(15) PTR;                                          00380000
*         DCL R1SAVE PTR;               /* REG 1 SAVEAREA               00390000
*         /************************************************************ 00400000
*         /*    PARAMETER LIST                                        * 00410000
*         /************************************************************ 00420000
*         DCL   1 * BASED(R1SAVE),                                      00430000
*                3 * CHAR(4),                                           00440000
*                 5 * CHAR(1),           /* N/A                         00450000
*                 5 MACROLVL CHAR(1),    /* MACRO LEVEL                 00460000
*                 5 * CHAR(2),           /* N/A                         00470000
*                3 PLNKENP PTR,         /*ADDR TABLE TO RECEIVE EP ADR* 00480000
*                3 PLNCTRL CHAR(1),     /*CONTROL BYTES               * 00490000
*                 5 LOAD BIT(1),        /* LOAD OP                    * 00500000
*                 5 CLL  BIT(1),        /* N/A                        * 00510000
*                 5 NOMCPLK  BIT(1),    /* IF ON NO PLK IN MORECORE   * 00520000
*                                       /*                      X03008* 00530000
*                 5 * BIT(1),           /* N/A                        * 00540000
*                 5 DELETE BIT(1),      /* DELETE OP                  * 00550000
*                 5 RET BIT(1),         /* N/A                        * 00560000
*                 5 * BIT(1),           /* N/A                        * 00570000
*                 5 SIZE BIT(1),        /* N/A                        * 00580000
*                3 PLNKCOR CHAR(1),     /* CORE NEED IN 1K MULTIPLES  * 00590000
*                3 PLNKLOD CHAR(1),     /* # OF MODULES TO BE LOADED  * 00600000
*                3 PLNKDEL CHAR(1),     /* # OF MODULES TO BE DELETED * 00610000
*                3 PLNMODS(10) CHAR(8);  /* MODULES UP TO 10            00620000
*         /*EPLIST TABLE                                              * 00630000
*         DCL EPLSTAB(10) PTR BDY(WORD) BASED(PLNKENP);                 00640000
*         DCL INSTADR PTR BDY(WORD) BASED(R1+12);                       00650000
*         /************************************************************ 00660000
*         /*    COMMON CORE MAP                                       * 00670000
*         /************************************************************ 00680000
*         DCL PARTITEM GEND;             /* PARTITION ITEMS FOR PLINK   00690000
*         DCL   1 * BASED(ADDR(PARTITEM)),                              00700000
*                3 OLTAREA PTR,         /* POINTER TO OLT AREA        * 00710000
*                3 OLTSIZE PTR,         /* TOTAL SIZE OF OLT AREA     * 00720000
*                3 USESIZE PTR;         /* SIZE OF PLINK AREA         * 00730000
*         /************************************************************ 00740000
*         /*    LOADER PARAMETER LIST                                 * 00750000
*         /************************************************************ 00760000
*         DCL   1 LPARM BDY(WORD) CHAR(16),                             00770000
*                3 MODNAME CHAR(8),     /* NAME OF MODULE TO BE LOADED* 00780000
*                3 TARGADDR PTR,        /* TARGET ADDRESS             * 00790000
*                3 CONTROL CHAR(1),     /* CONTROL BITS               * 00800000
*                 5 PLINK BIT(1),       /* LOAD MODULE                * 00810000
*                 5 COMPUTE BIT(1),     /* COMPUTE                    * 00820000
*                 5 * BIT(6),           /* N/A                        * 00830000
*                3 * CHAR(3) INIT('000000'X);/* N/A                   * 00840000
*         DCL PLKMOR GEND;              /* COMMON AREA REF      X03008* 00850000
*         DCL 1 * BASED(ADDR(PLKMOR)),  /* NOT USED             X03008* 00860000
*               3 * CHAR(8),            /* NOT USED             X03008* 00870000
*               3 HEAD PTR;             /* POINTER TO MORE CORE AREA  * 00880000
*                                       /*                      X03008* 00890000
*        DCL  1 * BASED(R8),            /*  MORE CORE MAP       X03008* 00900000
*               3 SIZ  PTR,             /*  SIZE MORECORE       X03008* 00910000
*                5 ENDID CHAR(1),       /*  END MORECORE AREA   X03008* 00920000
*                 7 INUSE BIT(1),       /*  ACTIVE MORECORE AREA      * 00930000
*                 7 PLINKED BIT(1),     /*  IF ON A PLINK LIVES HERE  * 00940000
*                                       /*                      X03008* 00950000
*               3 NEXT PTR,             /*  ADDR NXT AREA       X03008* 00960000
*               3 MODULEID CHAR(8),     /* POSSIBLE MOD NAME    X03008* 00970000
*               3 * CHAR(4),            /* NOT REFED            X03008* 00980000
*               3 BEGINPTR PTR;         /* ACTUAL LOAD PTR      X03008* 00990000
*        DCL 1 MORELIST BDY(WORD)  CHAR(12),  /* MORECORE PARMS X03008* 01000000
*             3 * CHAR(1) INIT('00'X),  /* XMGR FLAGS           X03008* 01010000
*             3 LVL CHAR(1) INIT('02'X), /* MAC LVL             X03008* 01020000
*             3 * CHAR(2) INIT('42'),   /* MOD ID               X03008* 01030000
*             3 MAX PTR,                /* MAX CORE NEEDED      X03008* 01040000
*             3 MIN PTR;                /* MIN CORE NEEDED      X03008* 01050000
*         DCL CHASCT GEND;              /* COMMON AREA REFS     X03008* 01060000
*      DCL 1 *  BASED(OLTAREA),         /* ADDR OF OLT          X03008* 01070000
*              3  * CHAR(10),           /* NOT REFED.           X03008* 01080000
*              3  SECTPREF FIXED(15);  /* WILL HAVE DISP TO SC PREF  */ 01090000
*      DCL 1 *  BASED (R4),             /* WILL POINT TO PREF X03008*/  01100000
*              3 * CHAR(16),            /*                      X03008* 01110000
*              3 * BIT(8),              /* NOT USED             X03008* 01120000
*                5 * BIT(2),            /* NOT USED             X03008* 01130000
*                5 QUESTION BIT(1);     /* IF ON PLINK INTO MORECORE  * 01140000
*         DCL MSGMOD  PTR GEND;         /* USED TO REF MSG      X03008* 01150000
*         DCL 1 * BASED(MSGMOD),        /* NOT USED             X03008* 01160000
*               3 * CHAR(144),          /* NOT USED             X03008* 01170000
*               3 IFD253 PTR;           /* MOD NAME NOT FOUND   X03008* 01180000
*         DCL 1 * BASED(R1),       /* POINTER TO MSG IFD253I    X03008* 01190000
*             3 * CHAR(23),              /* BEGINNING OF MSG    X03008* 01200000
*             3 SUBMODID CHAR(8);    /*MODULE NAME              X03008* 01210000
*         DCL TAB28 GEND;               /* USED TO XFER OUT     X03008* 01220000
*         RESTRICT(R1,R2,R4,R5,R6,R7,R8);                               01230000
*         R1SAVE=R1;                    /*SAVE PARM LIST POINTER      * 01240000
         ST    @1,R1SAVE                                          0040  01250000
*         IF MACROLVL¬='02'X THEN        /* CHECK MACRO LEVEL         * 01260000
         L     @3,R1SAVE                                          0041  01270000
         CLI   1(@3),X'02'                                        0041  01280000
*          GOTO ERRCOND4;                /* ERROR RETURN              * 01290000
         BC    07,ERRCOND4                                        0042  01300000
*         IF DELETE = '1'B THEN          /*  DELETE OPERATION ?       * 01310000
         TM    8(@3),B'00001000'                                  0043  01320000
*          GO TO RETRN;                  /* GO EXIT MOD GO SCAN       * 01330000
         BC    01,RETRN                                           0044  01340000
*         /* CHECK PARAMETER LIST                                     * 01350000
*         IF LOAD¬='1'B THEN            /* LOAD OPERATION ?           * 01360000
         TM    8(@3),B'10000000'                                  0045  01370000
*          GOTO ERRCOND4;               /* NO,OTHER OPTION NOT AVAIL. * 01380000
         BC    12,ERRCOND4                                        0046  01390000
*         /************************************************************ 01400000
*         /*    LOAD OPERATION                                        * 01410000
*         /************************************************************ 01420000
* LOADCK:                               /* ENTER HERE FOR LOADS X03008* 01430000
*         R4 = OLTAREA+SECTPREF;        /* SET ADDR OF BIT      X03008* 01440000
LOADCK   L     @3,A00006                                          0047  01450000
         LH    @4,10(0,@3)                                        0047  01460000
         A     @4,A00006                                          0047  01470000
*         R5=PLNKLOD;                   /* # OF MODULES TO LOAD       * 01480000
         L     @9,R1SAVE                                          0048  01490000
         SR    @5,@5                                              0048  01500000
         IC    @5,10(0,@9)                                        0048  01510000
*         IF R5=0 THEN                  /* NO MODULES ?               * 01520000
         LTR   @5,@5                                              0049  01530000
*          GOTO ERRCOND8;               /* YES ERROR                  * 01540000
         BC    08,ERRCOND8                                        0050  01550000
*         /* IS ORIGIN WITHIN OLTAREA                                 * 01560000
*         IF PLNKENP<OLTAREA THEN       /* OUTSIDE  OLT AREA ?        * 01570000
         L     @F,A00006                                          0051  01580000
         C     @F,4(0,@9)                                         0051  01590000
*          GOTO ERRCOND8;               /* YES,ERROR                  * 01600000
         BC    02,ERRCOND8                                        0052  01610000
*         /************************************************************ 01620000
*         /*    COMPUTE MODULE LENGTH                                 * 01630000
*         /************************************************************ 01640000
*         DO R7=1 TO R5 BY 1;            /* LOOP FOR LOADING MODULES  * 01650000
         LA    @7,1                                               0053  01660000
         BC    15,@DO9FE                                          0053  01670000
*           MODNAME=PLNMODS(R7);         /*MODULE NAME FOR LOADER     * 01680000
@DO9FF   LR    @3,@7                                              0054  01690000
         BCTR  @3,0                                               0054  01700000
         SLA   @3,3                                               0054  01710000
         L     @9,R1SAVE                                          0054  01720000
         LA    @E,12(@3,@9)                                       0054  01730000
         MVC   LPARM(8),0(@E)                                     0054  01740000
*           IF NOMCPLK = '1'B THEN       /* PLK IN MORECOR?     X03008* 01750000
         TM    8(@9),B'00100000'                                  0055  01760000
*             GO TO NORMAL;              /* IF BIT ON DONOT...  X03008* 01770000
         BC    01,NORMAL                                          0056  01780000
*           IF QUESTION ¬= '1'B THEN     /* IS THIS A LOAD DIR  X03008* 01790000
         TM    16(@4),B'00100000'                                 0057  01800000
*             GO TO NORMAL;              /* NO, BRANCH          X03008* 01810000
         BC    12,NORMAL                                          0058  01820000
*           R8 = HEAD;                   /* SET R8 TO MOR COR   X03008* 01830000
         L     @8,A00009+8                                        0059  01840000
*           IF R8 >= 0 THEN              /* MORCORS ACTIVE      X03008* 01850000
         LTR   @8,@8                                              0060  01860000
*                                        /* IF MINUS BRANCH     X03008* 01870000
*           GO TO KOMPUTE;               /* IF NO GO COMP       X03008* 01880000
         BC    10,KOMPUTE                                         0061  01890000
* ENDCK:                                 /* ELSE, SEARCH        X03008* 01900000
*           IF ENDID = 'EF'X THEN        /* IS THIS END OF STG  X03008* 01910000
ENDCK    CLI   0(@8),X'EF'                                        0062  01920000
*             GO TO KOMPUTE;             /* IF YES GO COMP      X03008* 01930000
         BC    08,KOMPUTE                                         0063  01940000
*           IF INUSE ¬= '1'B  THEN       /* IS AREA ACTIVE      X03008* 01950000
         TM    0(@8),B'10000000'                                  0064  01960000
         BC    01,@9FB                                            0064  01970000
*             DO;                        /* IF NOT THEN         X03008* 01980000
* GETNEXT:                               /* GET NEXT MORE-      X03008* 01990000
*               R8 = NEXT;               /* CORE POINTER        X03008* 02000000
GETNEXT  L     @8,4(0,@8)                                         0066  02010000
*               GO TO ENDCK;             /* AND PROCEED         X03008* 02020000
         BC    15,ENDCK                                           0067  02030000
*             END;                       /* THRU MORCOR         X03008* 02040000
*           IF MODNAME = MODULEID &      /* ELSE, IS THIS       X03008* 02050000
*              PLINKED = '1'B THEN       /* A PLINK MODULE      X03008* 02060000
@9FB     CLC   LPARM(8),8(@8)                                     0069  02070000
         BC    07,@9FA                                            0069  02080000
         TM    0(@8),B'01000000'                                  0069  02090000
         BC    12,@9F9                                            0069  02100000
*             DO;                        /* THE MOD TO BE       X03008* 02110000
*               R1=ADDR(MODULEID);       /* LOADED              YM5418* 02120000
         LA    @1,8(0,@8)                                         0071  02130000
*               GO TO NEXTMOD;           /* IS YES SET ADDR AND X03008* 02140000
         BC    15,NEXTMOD                                         0072  02150000
*             END;                       /* GO GET NEXT PLINK   X03008* 02160000
*           GO TO GETNEXT;               /* NO MATCH, CONT      X03008* 02170000
* KOMPUTE:                               /* OBTAIN MOD SIZ      X03008* 02180000
*           CONTROL = '40'X;             /* SET COMP BIT        X03008* 02190000
KOMPUTE  MVI   LPARM+12,X'40'                                     0075  02200000
*           GEN(IFDMOD CALL='12',LIST=LPARM);   /* GO COMP      X03008* 02210000
         IFDMOD CALL='12',LIST=LPARM                                    02220000
         DS    0H                                                       02230000
*           IF R15 ¬= 0 THEN             /* MOD FOUND           X03008* 02240000
         LTR   @F,@F                                              0077  02250000
*             GO TO ERRCOND;             /* IF NO ,EXIT         X03008* 02260000
         BC    07,ERRCOND                                         0078  02270000
*           MAX = R0;                    /* ELSE SET SIZ        X03008* 02280000
         ST    @0,MORELIST+4                                      0079  02290000
*           MIN = R0;                    /* OF MOD FOR XFER     X03008* 02300000
         ST    @0,MORELIST+8                                      0080  02310000
*           R15 = TAB28;                 /* SET XMGR ADDR       X03008* 02320000
         L     @F,TAB28                                           0081  02330000
*           R1 = ADDR(MORELIST);         /* SET PARM ADDR       X03008* 02340000
         LA    @1,MORELIST                                        0082  02350000
*           R14 = ADDR(MORECK);          /* SET RTN ADDR        X03008* 02360000
         LA    @E,MORECK                                          0083  02370000
*           GO TO R15;                   /* GO TO MORECORE      X03008* 02380000
         BCR   15,@F                                              0084  02390000
* MORECK:                                /* WAS IT OK           X03008* 02400000
*           IF R15 ¬= 0 THEN             /* MORCOR OK?          X03008* 02410000
MORECK   LTR   @F,@F                                              0085  02420000
*             GO TO NORMAL;              /* IF NOT CONT         X03008* 02430000
         BC    07,NORMAL                                          0086  02440000
*           CONTROL = '00'X;             /* ELSE, SET LOAD      X03008* 02450000
         MVI   LPARM+12,X'00'                                     0087  02460000
*           TARGADDR   =  R1;            /* AND ADDR            X03008* 02470000
         ST    @1,LPARM+8                                         0088  02480000
*           GEN(IFDMOD CALL='12',LIST=LPARM); /* FOR LOADER     X03008* 02490000
         IFDMOD CALL='12',LIST=LPARM                                    02500000
         DS    0H                                                       02510000
*           IF R15 ¬= 0 THEN             /* LOAD  OK??          X03008* 02520000
         LTR   @F,@F                                              0090  02530000
*            GO TO ERRCOND;              /* IF NO EXIT          X03008* 02540000
         BC    07,ERRCOND                                         0091  02550000
*           R8 = TARGADDR;               /* GET ADDR WHERE MOD  X03008* 02560000
         L     @8,LPARM+8                                         0092  02570000
*           R8 = R8 - 8;                 /* LOADED -8 SO TO     X03008* 02580000
         SH    @8,@D1                                             0093  02590000
*           PLINKED = '1'B;              /* SET PLINK MOD ID    X03008* 02600000
         OI    0(@8),B'01000000'                                  0094  02610000
*           GO TO NEXTMOD;               /* ELSE CONT           X03008* 02620000
         BC    15,NEXTMOD                                         0095  02630000
* NORMAL:                                /* NORMAL LOAD         X03008* 02640000
*           TARGADDR=OLTAREA;            /*ADDRESS FOR LOAD             02650000
NORMAL   MVC   LPARM+8(4),A00006                                  0096  02660000
*           CONTROL='C0'X;               /* "COMPUTE" FIRST          */ 02670000
         MVI   LPARM+12,X'C0'                                     0097  02680000
*           GEN(IFDMOD CALL='12',LIST=LPARM);                           02690000
         IFDMOD CALL='12',LIST=LPARM                                    02700000
         DS    0H                                                       02710000
*           /* ERROR                                                    02720000
*           IF R15¬=0 THEN               /* YES                         02730000
         LTR   @F,@F                                              0099  02740000
*             GOTO ERRCOND;                                             02750000
         BC    07,ERRCOND                                         0100  02760000
*           /* CHECK MODULE SIZE                                        02770000
*           IF R0>OLTSIZE |                                             02780000
*             R0>USESIZE THEN            /* IF YES THEN ,ERROR          02790000
         C     @0,A00006+4                                        0101  02800000
         BC    02,@9F8                                            0101  02810000
         C     @0,A00006+8                                        0101  02820000
         BC    12,@9F7                                            0101  02830000
*             GOTO ERRCND10;                                            02840000
         BC    03,ERRCND10                                        0102  02850000
*           /********************************************************** 02860000
*           /* LOAD MODULE                                              02870000
*           /********************************************************** 02880000
*           CONTROL='80'X;               /* "LOAD" MODULE               02890000
@9F7     MVI   LPARM+12,X'80'                                     0103  02900000
*           /* CALL LOADER                                              02910000
*           GEN(IFDMOD CALL='12',LIST=LPARM);                           02920000
         IFDMOD CALL='12',LIST=LPARM                                    02930000
         DS    0H                                                       02940000
*           /* ERROR                                                    02950000
*           IF R15¬=0 THEN               /* YES                         02960000
         LTR   @F,@F                                              0105  02970000
*             GOTO ERRCOND;                                             02980000
         BC    07,ERRCOND                                         0106  02990000
* NEXTMOD:                               /* ENTER HERE FROM DIR LOAD    03000000
*           EPLSTAB(R7)=INSTADR;         /*MODULE ENTRY POINT           03010000
NEXTMOD  L     @F,12(0,@1)                                        0107  03020000
         LR    @3,@7                                              0107  03030000
         BCTR  @3,0                                               0107  03040000
         SLA   @3,2                                               0107  03050000
         L     @9,R1SAVE                                          0107  03060000
         L     @9,4(0,@9)          A00000                         0107  03070000
         ST    @F,0(@3,@9)                                        0107  03080000
*         END;                                                          03090000
*         GOTO RETRN;                    /* RETURN TO CALLER            03100000
         AH    @7,@D2                                             0108  03110000
@DO9FE   CR    @7,@5                                              0108  03120000
         BC    12,@DO9FF                                          0108  03130000
         BC    15,RETRN                                           0109  03140000
*         /************************************************************ 03150000
*         /*    RETURN CODES                                          * 03160000
*         /************************************************************ 03170000
*  ERRCOND:                                                             03180000
*         /* CHECK CONDITION CODE                                     * 03190000
*         IF R15=12 THEN                /* MODULE NOT FOUND           * 03200000
ERRCOND  CH    @F,@D3                                             0110  03210000
         BC    07,@9F6                                            0110  03220000
*           DO;                         /*  ISSUE MSG 253I AND EXIT   * 03230000
*            R1 = IFD253;               /*                      X03008* 03240000
         L     @3,MSGMOD                                          0112  03250000
         L     @1,144(0,@3)                                       0112  03260000
*            SUBMODID = MODNAME;        /* GET MODULE NAME      X03008* 03270000
         MVC   23(8,@1),LPARM                                     0113  03280000
*  GENERATE;                                                            03290000
       PWTO  REG=(R1)                                                   03300000
         DS    0H                                                       03310000
*          GOTO ERRCONDC;               /* GO LOAD CONDITION CODE     * 03320000
         BC    15,ERRCONDC                                        0115  03330000
*           END;                                                        03340000
* ERRCOND4:                                                             03350000
*         R15=4;                        /* FUNCTION NOT AVAILABLE     * 03360000
@9F6     EQU   *                                                  0117  03370000
ERRCOND4 LA    @F,4                                               0117  03380000
*         GOTO RETRN1;                  /* RETURN                     * 03390000
         BC    15,RETRN1                                          0118  03400000
* ERRCOND8:                                                             03410000
*         R15=8;                        /* PARAMETER LIST INCORRECT   * 03420000
ERRCOND8 LA    @F,8                                               0119  03430000
*         GOTO RETRN1;                  /* RETURN                     * 03440000
         BC    15,RETRN1                                          0120  03450000
* ERRCONDC:                                                             03460000
*         R15=12;                       /* MODULE NOT FOUND           * 03470000
ERRCONDC LA    @F,12                                              0121  03480000
*         GOTO RETRN1;                  /* RETURN                     * 03490000
         BC    15,RETRN1                                          0122  03500000
* ERRCND10:                                                             03510000
*         R15=16;                       /* NO SPACE                   * 03520000
ERRCND10 LA    @F,16                                              0123  03530000
*         GOTO RETRN1;                  /* RETURN                     * 03540000
         BC    15,RETRN1                                          0124  03550000
*    RETRN:                                                             03560000
*         R15=0;                                                        03570000
RETRN    SR    @F,@F                                              0125  03580000
*   RETRN1:                                                             03590000
*         RETURN;                                                       03600000
*         END;                                                          03610000
@EL01    L     @D,4(0,@D)                                         0127  03620000
         L     @E,12(0,@D)                                        0127  03630000
         LM    @0,@C,20(@D)                                       0127  03640000
         BCR   15,@E                                              0127  03650000
@DATA1   EQU   *                                                        03660000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           03670000
@1       EQU   01                                                       03680000
@2       EQU   02                                                       03690000
@3       EQU   03                                                       03700000
@4       EQU   04                                                       03710000
@5       EQU   05                                                       03720000
@6       EQU   06                                                       03730000
@7       EQU   07                                                       03740000
@8       EQU   08                                                       03750000
@9       EQU   09                                                       03760000
@A       EQU   10                                                       03770000
@B       EQU   11                                                       03780000
@C       EQU   12                                                       03790000
@D       EQU   13                                                       03800000
@E       EQU   14                                                       03810000
@F       EQU   15                                                       03820000
@D1      DC    H'8'                                                     03830000
@D2      DC    H'1'                                                     03840000
@D3      DC    H'12'                                                    03850000
         DS    0F                                                       03860000
         DS    0D                                                       03870000
@DATA    EQU   *                                                        03880000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   03890000
R0       EQU   00000000            FULLWORD INTEGER REGISTER            03900000
R1       EQU   00000001            FULLWORD POINTER REGISTER            03910000
R2       EQU   00000002            FULLWORD POINTER REGISTER            03920000
R3       EQU   00000003            FULLWORD INTEGER REGISTER            03930000
R4       EQU   00000004            FULLWORD POINTER REGISTER            03940000
R5       EQU   00000005            FULLWORD INTEGER REGISTER            03950000
R6       EQU   00000006            FULLWORD INTEGER REGISTER            03960000
R7       EQU   00000007            FULLWORD INTEGER REGISTER            03970000
R8       EQU   00000008            FULLWORD POINTER REGISTER            03980000
R9       EQU   00000009            FULLWORD INTEGER REGISTER            03990000
R10      EQU   00000010            FULLWORD INTEGER REGISTER            04000000
R11      EQU   00000011            FULLWORD INTEGER REGISTER            04010000
R12      EQU   00000012            FULLWORD INTEGER REGISTER            04020000
R13      EQU   00000013            FULLWORD INTEGER REGISTER            04030000
R14      EQU   00000014            FULLWORD INTEGER REGISTER            04040000
R15      EQU   00000015            FULLWORD POINTER REGISTER            04050000
R1SAVE   EQU   @DATA+00000072      FULLWORD POINTER                     04060000
A00000   EQU   00000000            92 BYTE(S) ON WORD                   04070000
A00001   EQU   A00000+00000000     4 BYTE(S)                            04080000
A00002   EQU   A00000+00000000     1 BYTE(S)                            04090000
MACROLVL EQU   A00000+00000001     1 BYTE(S)                            04100000
A00003   EQU   A00000+00000002     2 BYTE(S)                            04110000
PLNKENP  EQU   A00000+00000004     FULLWORD POINTER                     04120000
PLNCTRL  EQU   A00000+00000008     1 BYTE(S)                            04130000
LOAD     EQU   A00000+00000008     1 BIT(S)                             04140000
CLL      EQU   A00000+00000008     1 BIT(S)                             04150000
NOMCPLK  EQU   A00000+00000008     1 BIT(S)                             04160000
A00004   EQU   A00000+00000008     1 BIT(S)                             04170000
DELETE   EQU   A00000+00000008     1 BIT(S)                             04180000
RET      EQU   A00000+00000008     1 BIT(S)                             04190000
A00005   EQU   A00000+00000008     1 BIT(S)                             04200000
SIZE     EQU   A00000+00000008     1 BIT(S)                             04210000
PLNKCOR  EQU   A00000+00000009     1 BYTE(S)                            04220000
PLNKLOD  EQU   A00000+00000010     1 BYTE(S)                            04230000
PLNKDEL  EQU   A00000+00000011     1 BYTE(S)                            04240000
PLNMODS  EQU   A00000+00000012     10*8 BYTE(S)                         04250000
EPLSTAB  EQU   00000000            10*FULLWORD POINTER                  04260000
INSTADR  EQU   00000012            FULLWORD POINTER                     04270000
LPARM    EQU   @DATA+00000076      16 BYTE(S) ON WORD                   04280000
MODNAME  EQU   LPARM+00000000      8 BYTE(S)                            04290000
TARGADDR EQU   LPARM+00000008      FULLWORD POINTER                     04300000
CONTROL  EQU   LPARM+00000012      1 BYTE(S)                            04310000
PLINK    EQU   LPARM+00000012      1 BIT(S)                             04320000
COMPUTE  EQU   LPARM+00000012      1 BIT(S)                             04330000
A00007   EQU   LPARM+00000012      6 BIT(S)                             04340000
         ORG   LPARM+00000013                                           04350000
A00008   EQU   *                   3 BYTE(S)                            04360000
         DC    X'000000'                                                04370000
A00011   EQU   00000000            24 BYTE(S) ON WORD                   04380000
SIZ      EQU   A00011+00000000     FULLWORD POINTER                     04390000
ENDID    EQU   A00011+00000000     1 BYTE(S)                            04400000
INUSE    EQU   A00011+00000000     1 BIT(S)                             04410000
PLINKED  EQU   A00011+00000000     1 BIT(S)                             04420000
NEXT     EQU   A00011+00000004     FULLWORD POINTER                     04430000
MODULEID EQU   A00011+00000008     8 BYTE(S)                            04440000
A00012   EQU   A00011+00000016     4 BYTE(S)                            04450000
BEGINPTR EQU   A00011+00000020     FULLWORD POINTER                     04460000
MORELIST EQU   @DATA+00000092      12 BYTE(S) ON WORD                   04470000
A00013   EQU   *                   1 BYTE(S)                            04480000
         DC    X'00'                                                    04490000
LVL      EQU   *                   1 BYTE(S)                            04500000
         DC    X'02'                                                    04510000
A00014   EQU   *                   2 BYTE(S)                            04520000
         DC    C'42'                                                    04530000
MAX      EQU   MORELIST+00000004   FULLWORD POINTER                     04540000
MIN      EQU   MORELIST+00000008   FULLWORD POINTER                     04550000
A00015   EQU   00000000            12 BYTE(S) ON WORD                   04560000
A00016   EQU   A00015+00000000     10 BYTE(S)                           04570000
SECTPREF EQU   A00015+00000010     HALFWORD INTEGER                     04580000
A00017   EQU   00000000            17 BYTE(S) ON WORD                   04590000
A00018   EQU   A00017+00000000     16 BYTE(S)                           04600000
A00019   EQU   A00017+00000016     8 BIT(S)                             04610000
A00020   EQU   A00017+00000016     2 BIT(S)                             04620000
QUESTION EQU   A00017+00000016     1 BIT(S)                             04630000
A00021   EQU   00000000            148 BYTE(S) ON WORD                  04640000
A00022   EQU   A00021+00000000     144 BYTE(S)                          04650000
IFD253   EQU   A00021+00000144     FULLWORD POINTER                     04660000
A00023   EQU   00000000            31 BYTE(S) ON WORD                   04670000
A00024   EQU   A00023+00000000     23 BYTE(S)                           04680000
SUBMODID EQU   A00023+00000023     8 BYTE(S)                            04690000
         ORG   @DATA                                                    04700000
         DS    00000108C                                                04710000
@TEMPS   DS    0F                                                       04720000
PLKCOMM  IFDCOM                                                         04730000
IFDOLT28 CSECT                                                          04740000
A00006   EQU   PARTITEM+00000000   12 BYTE(S) ON WORD                   04750000
OLTAREA  EQU   A00006+00000000     FULLWORD POINTER                     04760000
OLTSIZE  EQU   A00006+00000004     FULLWORD POINTER                     04770000
USESIZE  EQU   A00006+00000008     FULLWORD POINTER                     04780000
A00009   EQU   PLKMOR+00000000     12 BYTE(S) ON WORD                   04790000
A00010   EQU   A00009+00000000     8 BYTE(S)                            04800000
HEAD     EQU   A00009+00000008     FULLWORD POINTER                     04810000
@DATEND  EQU   *                                                        04820000
@9FA     EQU   GETNEXT                                                  04830000
@9F9     EQU   GETNEXT                                                  04840000
@9F8     EQU   ERRCND10                                                 04850000
RETRN1   EQU   @EL01                                                    04860000
         END                                                            04870000
./  ADD  SSI=70600090,NAME=IFDOLT30
         TITLE 'IFDOLT30 CE COMMUNICATIONS ROOT MODULE'                 00010000
         TITLE 'IFDOLT30 C.E. COMMUNICATIONS ROOT MODULE'               00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT30 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT30 01 MAR 77'                             0002  00070000
         ST    @E,12(0,@D)                                        0002  00080000
         STM   @0,@C,20(@D)                                       0002  00090000
         BALR  @B,0                                               0002  00100000
@PSTART  DS    0H                                                 0002  00110000
         USING @PSTART+00000,@B                                   0002  00120000
         ST    @D,@SAV001+4                                       0002  00130000
         LA    @F,@SAV001                                         0002  00140000
         ST    @F,8(0,@D)                                         0002  00150000
         LR    @D,@F                                              0002  00160000
         ENTRY ECB                                                      00170000
         ENTRY CECINP02                                                 00180000
         ENTRY CECINP03                                                 00190000
         ENTRY CNTRLREC                                                 00200000
         ENTRY SYMLIB                                                   00210000
         DS    0H                                                       00220000
*         GEN(USING CHASCT,2);                                          00230000
         USING CHASCT,2                                                 00240000
         DS    0H                                                       00250000
*         GENERATE DATA;                                                00260000
*         /************************************************************ 00270000
*         /*                                                          * 00280000
*         /*                        DECLARES                          * 00290000
*         /*                                                          * 00300000
*         /************************************************************ 00310000
*         DCL R0 REG(0) PTR(31);                                        00320000
*         DCL R1 REG(1) PTR(31);                                        00330000
*         DCL R2 REG(2) PTR(31);                                        00340000
*         DCL I REG(5) PTR(24);                                         00350000
*         DCL R6 REG(6) PTR(31);         /* REGISTER 6.               * 00360000
*         DCL R7 REG(7) PTR;             /*                      M4506* 00370000
*         DCL R8 REG(8) PTR(31);                                        00380000
*         DCL SLASHCNT REG(9) PTR(24);                                  00390000
*         DCL RETCODE REG(9) PTR(24);                                   00400000
*         DCL R9 REG(9) PTR(31);                                        00410000
*         DCL SA REG(13) PTR(31);                                       00420000
*         DCL R13 REG(13) PTR(31);                                      00430000
*         DCL R14 REG(14) PTR(31);                                      00440000
*         DCL R15 REG(15) PTR(31);                                      00450000
*         DCL RC REG(15) PTR(24);                                       00460000
*         DCL SAVE4 PTR(31) BASED(R13+4);                               00470000
*         DCL SECLST CHAR(138) GENERATED;                               00480000
*         DCL SOSPRUN CHAR(4) BASED(ADDR(SECLST)+3) ;/*SOSP IN SYSTEM?* 00490000
*                                        /*                     S20203* 00500000
*         DCL 1 CDSBLDL BASED(ADDR(SECLST)),                            00510000
*               3 ENTRIES FIXED(15),                                    00520000
*               3 LENGTH FIXED(15),                                     00530000
*               3 NAME CHAR(8);                                         00540000
*         DCL TPSAVE CHAR(4) GENERATED;                                 00550000
*  DCL ECB FIXED;                        /* WTOR ECB                  * 00560000
*         DCL UNICTR PTR(8) GEND;                                       00570000
*         DCL DEVTBPTR PTR(31) GENERATED; /* PTR TO DEV TABLES.  21050* 00580000
*  DCL TABLNGTH FIXED(15) GENERATED;     /* DEVICE TABLE SIZE         * 00590000
*  DCL 1 * BASED(R8),                    /* DEVICE TABLE              * 00600000
*         2 DVT CHAR(16),                /* TABLE AREA                * 00610000
*         2 DVTN CHAR(16);               /* NEXT TABLE AREA           * 00620000
*  DCL 1 STOPREI CHAR(7) INIT('STOPREI'), /* STOPREI CONSTANT         * 00630000
*         2 * CHAR(4),                   /* NA                        * 00640000
*         2 REI CHAR(3);                 /* REI CONSTANT              * 00650000
*  DCL 1 FECSA BASED(SA),                /* SAVE AREA                 * 00660000
*               3 * CHAR(4),                                            00670000
*               3 INTSAPTR PTR(31);                                     00680000
*         DCL 1 SVAREA BDY(WORD) BASED(ADDR(IFDOLT30)+20), /* SA      * 00690000
*               3 * CHAR(4),                                            00700000
*               3 SVR13 PTR(31);                                        00710000
*         DCL 1 INITSA BASED(SVR13),                                    00720000
*               3 * CHAR(8),                                            00730000
*               3 SAVAREAD PTR(31);                                     00740000
*         DCL INBUFR CHAR(72) GENERATED;                                00750000
*         DCL INPUTBUF CHAR(72) BASED(ADDR(INBUFR));                    00760000
*  DCL 1 * BASED(R8),                    /* BUFFER LOCATION           * 00770000
*         2 B1ST CHAR(1),                /* FIRST LOCATION            * 00780000
*         2 TESTTYPE CHAR(5),            /* TEST TYPE                 * 00790000
*           3 B2ND CHAR(1);              /* SECOND LOCATION           * 00800000
*         DCL CNTRLREC CHAR(92) GENERATED;                              00810000
*         DCL SYMLIB CHAR(92) GENERATED; /* REMOTE CDS DCB       21051* 00820000
*         DCL OFLAGS BIT(8) BASED(ADDR(CNTRLREC)+48);                   00830000
*         DCL CAN CHAR(1) INIT('FF'X);                                  00840000
*       DCL CANFLG CHAR(1);     /* SAVE CANCEL INDICATOR      @ZA08985* 00850000
*         DCL REPBUFLN CHAR(1) BASED(R1);/* REPLY BUFFER LENGTH.      * 00860000
*         DCL 1 MSGPTR BASED(R6),        /*-FORMAT OF MESSAGE MODULE--* 00870000
*               3 MSGPTR00 PTR(31),      /* POINTER TO MESSAGE IFD100I* 00880000
*               3 MSGPTR02 PTR(31),      /* POINTER TO MESSAGE IFD102I* 00890000
*               3 MSGPTR03 PTR(31),      /* POINTER TO MESSAGE IFD103I* 00900000
*               3 MSGPTR05 PTR(31),      /* POINTER TO MESSAGE IFD105D* 00910000
*               3 MSGPTR06 PTR(31),      /* POINTER TO MESSAGE IFD106I* 00920000
*               3 MSGPTR08 PTR(31),      /* POINTER TO MESSAGE IFD108I* 00930000
*               3 MSGPTR17 PTR(31),      /* POINTER TO MESSAGE IFD117I* 00940000
*               3 MSGPR166 PTR(31),      /* PTR TO MSG IFD166I  Y02008* 00950000
*               3 MSGPTR29 PTR(31),      /* POINTER TO MESSAGE IFD129I* 00960000
*               3 MSGPTR34 PTR(31),      /* PTR TO MSG IFD134I  Y02008* 00970000
*               3 MSGPR501 PTR(31),      /* PTR TO MSG IFD501I  Y02008* 00980000
*               3 MSGPTR57 PTR(31),      /* POINTER TO MESSAGE IFD157I* 00990000
*               3 MSGPTR58 PTR(31),      /* POINTER TO MESSAGE IFD158I* 01000000
*               3 MSGPTR59 PTR(31),      /* POINTER TO MESSAGE IFD159I* 01010000
*               3 MSGPTR60 PTR(31),      /* POINTER TO MESSAGE IFD160I* 01020000
*               3 MSGPTR61 PTR(31),     /* PTR TO MSG IFD161I   X02008* 01030000
*               3 * CHAR(56),                                           01040000
*               3 MSGPTR66 PTR(31),      /* PTR TO MSG IFD166I  X03008* 01050000
*               3 MSGPTR13 PTR(31),      /* PTR TO MSG IFD113I  YM3333* 01060000
*               3 MSGPTR99 PTR(31),      /* PTR TO MSG IFD899I  YM3333* 01070000
*               3 MSGPR260 PTR(31);      /* PTR TO MSG IFD260I  Y02068* 01080000
*         DCL 1 IFD100 BASED(R1),        /*-FORMAT OF MESSAGE IFD100I-* 01090000
*               3 * CHAR(4),             /* MSG. LENGTH & MCS FLAGS.  * 01100000
*               3 IFD100I CHAR(80);      /* MESSAGE TEXT.             * 01110000
*         DCL 1 * BASED(R1),       /*-FORMAT OF MESSAGE IFD899I-YM3333* 01120000
*               3 * CHAR(65),      /* OFFSET                    YM3333* 01130000
*               3 MSG899ID CHAR(2); /* MESSAGE VARABLE          YM3333* 01140000
*         DCL 1 MSSGE BASED(R1),                                        01150000
*               3 * CHAR(4),                                            01160000
*               3 MESSAGE1 CHAR(40);                                    01170000
*         DCL CESWT  CHAR(1) GENERATED;                                 01180000
*         DCL 1 OLTEPSW  CHAR(1) BASED(ADDR(CESWT)),                    01190000
*           3 LEGALTST BIT(1),          /* LEGAL TEST ENTRY      M4832* 01200000
*           3 * BIT(3),                                                 01210000
*               3 LEGALDEV BIT(1),                                      01220000
*               3 * BIT(1),                                             01230000
*               3 FERINT BIT(1);                                        01240000
*         DCL CESWT1 CHAR(1) GENERATED;  /*                     S20203* 01250000
*         DCL 1 OLTEPSW1 CHAR(1) BASED(ADDR(CESWT1)),         /*S20203* 01260000
*                3 RTNFLD BIT(1);   /* SET ON WHEN NEW RTNS DECODED OR  01270000
*                                   /* BY IFDOLT32 IF RTNS PRESENT      01280000
*                                        /*                     S20203* 01290000
*         DCL CESWT2 CHAR(1) GENERATED;                                 01300000
*         DCL 1 OLTEPSW2 CHAR(1) BASED(ADDR(CESWT2)),                   01310000
*               3 NDCFO BIT(1),                                         01320000
*               3 * BIT(3),                                             01330000
*               3 INITENT BIT(1),                                       01340000
*               3 NDR BIT(1),                                           01350000
*               3 TAPEHDR BIT(1);                                       01360000
*         DCL CESWT3 CHAR(1) GENERATED;                                 01370000
*         DCL 1 OLTEPSW3 CHAR(1) BASED(ADDR(CESWT3)),                   01380000
*           3 TALKVERB BIT(1),          /* TALK RQST BY CE MADE X02008* 01390000
*               3 BYPALDEV BIT(1),                                      01400000
*           3 * BIT(2),                  /* NA                   M4506* 01410000
*           3 SUSDEL BIT(1),             /* SUSPENDED DELETION   M4506* 01420000
*           3 * BIT(1),                  /* NA                   M4506* 01430000
*               3 CDSEXIST BIT(1);                                      01440000
*         DCL CESWT5 CHAR(1) GENERATED;                                 01450000
*         DCL 1 OLTEPSW5 CHAR(1) BASED(ADDR(CESWT5)),                   01460000
*               3 * BIT(3),                                             01470000
*               3 DPRINTFL BIT(2),                                      01480000
*               3 * BIT(2),                                             01490000
*               3 PRNTOPTN BIT(1); /* PRINT OPTIONS FROM PREVIOUS 21050 01500000
*                                  /* DTO ENTRY, OR DEFAULT OPNS 21050* 01510000
*         DCL CESWT6 CHAR(1) GENERATED;                                 01520000
*         DCL 1 OLTEPSW6 CHAR(1) BASED(ADDR(CESWT6)),                   01530000
*               3 UTSCAL BIT(1),         /* CALL NOT RESIDENT OLTEP.  * 01540000
*               3 ATM BIT(1);                                           01550000
*         DCL CESWT7 CHAR(1) GENERATED;                                 01560000
*         DCL 1 OLTEPSW7 CHAR(1) BASED(ADDR(CESWT7)), /*         21050* 01570000
*               3 * BIT(1),        /* NOT USED                   21050* 01580000
*               3 RETTO31 BIT(1),  /* RETURN TO IFDOLT31         21050* 01590000
*           3 REMOTE BIT(1),            /* REMOTE TP DEVICE      M4832* 01600000
*           3 * BIT(3),                                       /*X03008* 01610000
*           3 VIRTUAL BIT(1),           /*OLTEP LOADED VIRTUAL  X03008* 01620000
*           3 GOTINPUT BIT(1);          /* D/T/O/ ENTRY MADE     M4832* 01630000
*         DCL CESWT8 CHAR(1) GEND;      /* CESWT 8 IN COMM AREA X02008* 01640000
*                                                                       01650000
*         DCL 1 OLTEPSW8 CHAR(1) BASED(ADDR(CESWT8)),                   01660000
*           3 * BIT(5),                                       /*X03008* 01670000
*           3 SUTMSG BIT(1),            /*OLT IN PROCESS        X03008* 01680000
*           3 * BIT(1),                                       /*X03008* 01690000
*           3 TALKHERE BIT(1);          /* TALK VERB ENTERED IN X02008* 01700000
*                                       /* IN THIS COMM INTVL.  X02008* 01710000
*         DCL CESWT9 CHAR(1) GEND;      /*CESWT 9 IN COMM AREA  X03008* 01720000
*         DCL 1 OLTEPSW9 CHAR(1) BASED(ADDR(CESWT9)),         /*X03008* 01730000
*               3 CDSEQU BIT(1),        /* CDS EQUATE           X03906* 01740000
*               3 RESENTB BIT(1),       /* RESIDENT ENTRY       X03906* 01750000
*               3 * BIT(1),                                   /*X03008* 01760000
*               3 MODEV BIT(1),         /*OLT TOBE RUN VIRTUAL  X03008* 01770000
*               3 MODER BIT(1),         /*OLT TOBE RUN REAL     X03008* 01780000
*               3 MIXDEV BIT(1),        /* SET SYMB 1ST INPUT   X03008* 01790000
*               3 * BIT(2);                                   /*X03008* 01800000
*         DCL CESWT10 CHAR(1) GEND;      /* CE SW 10 IN C A     Y02068* 01810000
*         DCL 1 OLTPSW10 CHAR(1) BASED(ADDR(CESWT10)),        /*Y02068* 01820000
*               3 MPSYS BIT(1),          /* OLTEP IN MP SYSTEM  Y02068* 01830000
*               3 AFFNSET BIT(1),        /* CPU AFFINITY SET    Y02068* 01840000
*               3 VERBCALL BIT(1),       /* VERB ENTERED        Y02068* 01850000
*               3 * BIT(5);              /* NOT LOOKED AT       Y02068* 01860000
*         DCL CESWTR CHAR(1) GENERATED;  /* RETAIN 370 SWITCHES S20203* 01870000
*         DCL 1 * CHAR(1) BASED(ADDR(CESWTR)),  /*              S20203* 01880000
*               3 RETAINAC BIT(1),       /* REI ACTIVE          S20203* 01890000
*               3 REMERR BIT(1),         /* ERROR OCCURRED      S20203* 01900000
*               3 REMNOMSG BIT(1),       /* REMOTE NO MSG       S20203* 01910000
*               3 CENOMSG BIT(1),        /* ONSITE NO MSG       S20203* 01920000
*               3 PRTNOMSG BIT(1),       /* SYSOUT NO MSG       S20203* 01930000
*               3 IMRESP BIT(1),         /* IMMEDIATE RESP MSG  S20203* 01940000
*               3 EXECOUT BIT(1),        /* MSG IFD104E ISSUED  S20203* 01950000
*               3 CECOMOUT BIT(1);       /* MSG IFD154E ISSUED  S20203* 01960000
*         DCL CESWTR1 CHAR(1) GENERATED; /*                     S20203* 01970000
*         DCL 1 * CHAR(1) BASED(ADDR(CESWTR1)),  /*             S20203* 01980000
*               3 ILLRESP BIT(1),        /* ILLEGAL RESP FROM R S20203* 01990000
*               3 EXECANS BIT(1),        /* REMOTE ANS IFD104E  S20203* 02000000
*               3 CECOMANS BIT(1),       /* REMOTE ANS IFD154E  S20203* 02010000
*               3 INFOMSG BIT(1),        /* CE TALK TO REMOTE   S20203* 02020000
*               3 RETRIEVE BIT(1),       /* MSG IN FROM REMOTE  S20203* 02030000
*               3 REMANS BIT(1),         /* REMOTE ANS IMMEDIAT S20203* 02040000
*               3 EDTOMSG BIT(1),        /* MSG IFD105D ISSUED  S20203* 02050000
*               3 * BIT(1);              /* NOT USED            S20203* 02060000
*         DCL CESWTR2 CHAR(1) GENERATED;    /* REI SWITCHES     S20203* 02070000
*         DCL 1 * CHAR(1) BASED(ADDR(CESWTR2)),     /*          S20203* 02080000
*               2 * BIT(2),              /*                     S20203* 02090000
*               2 ONCOMM BIT(1),         /*                     S20203* 02100000
*               2 * BIT(5);              /*                     S20203* 02110000
*         DCL CECINP03 LABEL;            /*                     S20203* 02120000
*         DCL INBUFPTR PTR(31) GENERATED;                               02130000
*         DCL SAVEBUF CHAR(72);         /* SAVE D/T/O/ ENTRY     M4832* 02140000
*         DCL CHASCT CHAR(116) GENERATED;                               02150000
*         DCL 1 SCT BASED(ADDR(CHASCT)),                                02160000
*               3 * CHAR(3),                                            02170000
*               3 FLAGS CHAR(1),                                        02180000
*                 5 SETERROR BIT(1),                                    02190000
*                 5 ASTERB BIT(1),                                      02200000
*                 5 UTCATAS BIT(1),      /*                     S20203* 02210000
*               3 RTNFLDXX CHAR(2),      /* NORMAL ROUTINE SELECTION  * 02220000
*                                        /* FIELD.              S20203* 02230000
*               3 * CHAR(27),            /* NOT LOOKED AT.      S20203* 02240000
*               3 EXPGMFLG CHAR(1),      /* EXECUTIVE PROGRAM FLAGS.  * 02250000
*                                        /*                     S20203* 02260000
*                 5 * BIT(2),            /* NOT LOOKED AT.      S20203* 02270000
*                 5 RTNSLCTN BIT(1),     /* ROUTINES SELECTED FLAG.   * 02280000
*                                        /*                     S20203* 02290000
*           3 * CHAR(2),                                                02300000
*           3 OLTFLGS CHAR(1),          /* OLT FLAGS            X02008* 02310000
*             5 * BIT(7),                                               02320000
*             5 TALKOLT BIT(1),         /* OLT CAN HANDLE TALK  X02008* 02330000
*           3 OLTFLG2 CHAR(1),          /* OLT FLAGS            X02008* 02340000
*             5 TALKCE BIT(1),          /* CE HAS NTRD TALK VERBX02008* 02350000
*           3 * CHAR(2),                /*                      X02008* 02360000
*               3 EXPANDED CHAR(30);     /* EXPANDED ROUTINE SELECTION* 02370000
*                                        /* FIELD.              S20203* 02380000
*         DCL ZUESUCB CHAR(2) GEND;      /* DEVICE EXPO IN C.A. X03008* 02390000
*         DCL ROPT CHAR(8) GENERATED;                                   02400000
*         DCL ROPTMIN2 CHAR(2) BASED(ADDR(ROPT)-2);                     02410000
*         DCL REIDEBAD PTR BASED(ADDR(ROPT)+8);  /* REI DEB PTR S20203* 02420000
*         DCL TSTDEBAD PTR GENERATED;    /* PTR TO TEST DEB     S20203* 02430000
*         DCL SCHEDSA PTR(31) GENERATED;                                02440000
*         DCL ADSVAREA PTR(31) GENERATED;                               02450000
*         DCL DATPTR PTR(31) GENERATED;                                 02460000
*         DCL MSGMOD PTR(31) GENERATED;                                 02470000
*         DCL IFDOLT48 LABEL NONLOCAL EXTERNAL;                         02480000
*         RESTRICT(1,2,5,6,7,8,9);                                      02490000
*         DCL TALK CHAR(4) INIT('TALK');/* COMPARE FOR TALK VERBX02008* 02500000
*                                                                       02510000
*         DCL 1 PARMLIST CHAR(16) BDY(WORD), /* LIST FOR LOADER X02008* 02520000
*           3 CDSNAME CHAR(8),          /* NAME OF MOD TO LOAD. X02008* 02530000
*           3 LOADPT PTR,               /* LOAD ADDR FOR CDS    X02008* 02540000
*           3 PFLAGS CHAR(1),           /* LOADER FLAGS NEEDED  X02008* 02550000
*           3 * CHAR(1),                                                02560000
*           3 CDSSIZE CHAR(2);          /* SIZE OF MODULE TO LD X02008* 02570000
*                                                                       02580000
*  SVR13=INTSAPTR;                       /* SECOND SAVE AREA          * 02590000
         L     @3,@A1              ADDRESS OF IFDOLT30            0093  02600000
         MVC   24(4,@3),4(@D)                                     0093  02610000
*  SA=ADDR(SVAREA);                      /* SAVE AREA ADDRESS         * 02620000
         LA    @D,20(0,@3)                                        0094  02630000
*  ADSVAREA=SA;                          /* SAVE ADDRESS              * 02640000
         ST    @D,ADSVAREA                                        0095  02650000
*  SAVAREAD=SA;                          /* CHAINBACK ADDRESS         * 02660000
         L     @4,@A1              ADDRESS OF IFDOLT30            0096  02670000
         L     @4,24(0,@4)         SVAREA                         0096  02680000
         ST    @D,8(0,@4)                                         0096  02690000
*         CDSNAME='TCDSMDUM';           /* DUMMY CDS ENTRY. IF  X02008* 02700000
         MVC   PARMLIST(8),@C1                                    0097  02710000
*                                       /* IT EXISTS, CDS FILE  X02008* 02720000
*                                       /* IS PRESENT           X02008* 02730000
*         LOADPT=ADDR(LOADPT);          /* ADDR OF WHERE MOD LD X02008* 02740000
         LA    @F,PARMLIST+8                                      0098  02750000
         ST    @F,PARMLIST+8                                      0098  02760000
*         PFLAGS='60'X;                 /* COMPUTE, CDS FLGS SETX02008* 02770000
         MVI   PARMLIST+12,X'60'                                  0099  02780000
*         CDSSIZE='0001'X;              /* LOAD ONLY ONE BYTE   X02008* 02790000
         MVC   PARMLIST+14(2),@X3                                 0100  02800000
*                                                                       02810000
*                                                                       02820000
*         /*          ISSUE LOAD FOR DUMMY CDS MODULE           X02008* 02830000
*                                                                       02840000
*         GEN(IFDMOD CALL='12',LIST=PARMLIST);                          02850000
         IFDMOD CALL='12',LIST=PARMLIST                                 02860000
         DS    0H                                                       02870000
*                                                                       02880000
*         RETCODE=RC;                                                   02890000
         LR    @9,@F                                              0102  02900000
*                                                                       02910000
*           /*        NON ZERO RETURN CODE ENDS OLTEP,NO CDS LOADED.  * 02920000
*                                                                       02930000
*         IF RETCODE ¬= '00'X THEN  /* DID OPEN GO OK          XA01373* 02940000
         LA    @F,X'00'                                           0103  02950000
         CR    @F,@9                                              0103  02960000
         BC    08,@9FF                                            0103  02970000
*            DO;                    /*  ISSUE A TOTAL CLEANUP  XA01373* 02980000
*             ROPTMIN2 = '00';      /* IF NO OPEN, SET MYID    XA01373* 02990000
         MVC   ROPTMIN2(2),@C4                                    0105  03000000
*             R0 = ADDR(ROPT);      /* SET ROPT ADDRESS        XA01373* 03010000
         LA    @0,ROPT                                            0106  03020000
*             R1 = '14'X;           /* SET TOTAL CALL CODE     XA01373* 03030000
         LA    @1,X'14'                                           0107  03040000
*             GEN( SVC 59);         /* ISSUE SVC TO EFFECT CLEANS01373* 03050000
          SVC 59                                                        03060000
         DS    0H                                                       03070000
*             R6 = MSGMOD;          /* PTR TO MSG MOD FOR WTO   YM3333* 03080000
         L     @6,MSGMOD                                          0109  03090000
*             R1 = MSGPTR99;      /* PTR TO MSG IFD899I FOR WTO YM3333* 03100000
         L     @1,128(0,@6)                                       0110  03110000
*             IF MSG899ID(2) ¬= '4' THEN /* HAS MSG BEEN ISSUED BEFORE* 03120000
         CLI   66(@1),C'4'                                        0111  03130000
         BC    08,@9FE                                            0111  03140000
*               DO;                        /* NO, NOW ISSUE IT  YM3333* 03150000
*                 MSG899ID(2) = '2';    /* MSG IDENT            YM3333* 03160000
         MVI   66(@1),C'2'                                        0113  03170000
*                 GEN(PWTO   REG=(1));  /* ISSUE MSG IFD899I    YM3333* 03180000
         PWTO   REG=(1)                                                 03190000
         DS    0H                                                       03200000
*               END;                                          /*YM3333* 03210000
*             GO TO CECINP17;       /* AND EXIT MOD            XA01373* 03220000
         BC    15,CECINP17                                        0116  03230000
*            END;                   /* END OF DO LOOP          XA01373* 03240000
*                                                                       03250000
*    CDSEXIST='1'B;                      /* CDS EXISTS INDICATED      * 03260000
@9FF     OI    OLTEPSW3,B'00000010'                               0118  03270000
*    IF MPSYS = '1'B THEN                /* IS OLTEP IN MP SYSTMY02068* 03280000
         TM    OLTPSW10,B'10000000'                               0119  03290000
         BC    12,@9FD                                            0119  03300000
*      DO;                               /* YES, SET SEFAULT AFFY02068* 03310000
*      VERBCALL = '0'B;                  /* SET TO INDICATE DEF Y02068* 03320000
         NI    OLTPSW10,B'10011111'                               0121  03330000
*      AFFNSET  = '0'B;                  /* SET TO NOT SET      Y02068* 03340000
*        GEN;                            /* CALL IFDOLT62 AFFN  Y02068* 03350000
         IFDMOD CALL='62'                * SET DEFAULT AFFINITY Y02068* 03360000
         IFDMOD DELETE='62'              * DELETE MODULE        Y02068* 03370000
         DS    0H                                                       03380000
*        IF  AFFNSET='0'B THEN           /* AND AFFINIY NOT SET Y02068* 03390000
         TM    OLTPSW10,B'01000000'                               0124  03400000
*           GOTO CECINP17;               /*CANCEL EXIT FROM AFFNY02068* 03410000
         BC    08,CECINP17                                        0125  03420000
*      END;                              /* CONTINUE PROCESSING Y02068* 03430000
* CECINP01:                                                             03440000
*         /************************************************************ 03450000
*         /*             CAN CONTROL RECORD INPUT BE USED             * 03460000
*         /************************************************************ 03470000
*  GEN(OPEN  (CNTRLREC,(INPUT),SYMLIB,(INPUT))); /* CONTROL AND REMOTE* 03480000
@9FD     EQU   *                                                  0127  03490000
CECINP01 OPEN  (CNTRLREC,(INPUT),SYMLIB,(INPUT))                        03500000
         DS    0H                                                       03510000
*                                      /* INPUT DATA SET.     */        03520000
* CECINP02:                                                             03530000
*         /************************************************************ 03540000
*         /*             DID CONTROL RECORD DATA SET OPEN             * 03550000
*         /************************************************************ 03560000
*         IF OFLAGS(4)='0'B THEN    /* WAS THERE A SUCCESSFUL OPEN. */  03570000
CECINP02 TM    OFLAGS,B'00010000'                                 0128  03580000
*           GO TO CECINP03;         /* NO, GET INPUT FROM CONSOLE. */   03590000
         BC    08,CECINP03                                        0129  03600000
*         ONCOMM='0'B;                   /* ZERO ONCOMM SWITCH  S20203* 03610000
         NI    A00028,B'11011111'                                 0130  03620000
*         IF RETAINAC='1'B               /* REI ACTIVE          S20203* 03630000
*           & REMANS='1'B                /* RE OPTION           S20203* 03640000
*               THEN GOTO CECINP03;      /* BRANCH              S20203* 03650000
         TM    A00025,B'10000000'                                 0131  03660000
         BC    12,@9FC                                            0131  03670000
         TM    A00026,B'00000100'                                 0131  03680000
         BC    03,CECINP03                                        0132  03690000
*         R9=ADDR(INPUTBUF);                                            03700000
@9FB     EQU   *                                                  0133  03710000
@9FC     LA    @9,INPUTBUF                                        0133  03720000
*         GEN;                      /* READ A RECORD */                 03730000
          READ  CNTLDECB,SF,CNTRLREC,(9),'S'                            03740000
          CHECK CNTLDECB                                                03750000
         DS    0H                                                       03760000
*         R6=MSGMOD;                /* GET POINTER TO MESSAGE MODULE. * 03770000
         L     @6,MSGMOD                                          0135  03780000
*         R1=MSGPTR00;              /* GET POINTER TO MESSAGE.        * 03790000
         L     @1,0(0,@6)                                         0136  03800000
*         IFD100I(9:80)=INPUTBUF;   /* PUT RECORD READ INTO MESSAGE.  * 03810000
         MVC   12(72,@1),INPUTBUF                                 0137  03820000
*         GEN(BAL   R7,CECPWTO);         /* ISSUE WTO            M4506* 03830000
         BAL   R7,CECPWTO                                               03840000
         DS    0H                                                       03850000
*         ONCOMM='1'B;                   /* CARD INPUT          S20203* 03860000
         OI    A00028,B'00100000'                                 0139  03870000
*         GO TO CECINP04;           /* LOOK AT INPUT. */                03880000
         BC    15,CECINP04                                        0140  03890000
* CECINP18:                                                             03900000
*         /************************************************************ 03910000
*         /*                       END OF FILE                        * 03920000
*         /************************************************************ 03930000
*         GEN(CLOSE (CNTRLREC));    /* CLOSE CNTRLIN.                 * 03940000
CECINP18 CLOSE (CNTRLREC)                                               03950000
         DS    0H                                                       03960000
* CECINP03:                                                             03970000
*         /************************************************************ 03980000
*         /*                                                          * 03990000
*         /*                 GET INPUT FROM CONSOLE                   * 04000000
*         /*                                                          * 04010000
*         /************************************************************ 04020000
*  IF CDSEQU='1'B THEN                   /* CHECK INDICATOR     XM0088* 04030000
CECINP03 TM    OLTEPSW9,B'10000000'                               0142  04040000
         BC    12,@9FA                                            0142  04050000
*    DO;                                 /* CDS EQUATE REQUEST  XM0088* 04060000
*      GEN(IFDMOD CALL='49');            /* CALL MODULE         XM0088* 04070000
         IFDMOD CALL='49'                                               04080000
         DS    0H                                                       04090000
*      GEN(IFDMOD DELETE='49');          /* DELETE MODULE       XM4982* 04100000
         IFDMOD DELETE='49'                                             04110000
         DS    0H                                                       04120000
*      LEGALDEV='0'B;                    /* NO DEVICE ENTRY     XM0088* 04130000
         NI    OLTEPSW,B'11110111'                                0146  04140000
*      CDSEQU='0'B;                      /* CDS EQUATES DONE    XM0088* 04150000
         NI    OLTEPSW9,B'01111111'                               0147  04160000
*    END;                                /* END CHECK           XM0088* 04170000
*         NDCFO='1'B;                    /* NO DYN COMM ALLOWEDXA01054* 04180000
@9FA     OI    OLTEPSW2,B'10000000'                               0149  04190000
*         PRNTOPTN='1'B;           /* SET FLAG TO INDECATE PREVIOUS OR* 04200000
         OI    OLTEPSW5,B'00000001'                               0150  04210000
*                                  /* DEFAULT OPTIONS  PRINTED   PRIOR  04220000
*                                  /* TO DTO MESSAGE OUTPUT.     21050* 04230000
*         GEN;                                                          04240000
CL33OPTN IFDMOD CALL='33'                                               04250000
         DS    0H                                                       04260000
*         GEN;                                                          04270000
DLT33    IFDMOD DELETE='33'             DELETE IFDOLT33                 04280000
         DS    0H                                                       04290000
*         PRNTOPTN='0'B;           /* RESET OPTN PRNT FLAG.      21050* 04300000
         NI    OLTEPSW5,B'11111110'                               0153  04310000
*         ECB=ECB&&ECB;                /* CLEAR ECB.    */              04320000
         XC    ECB(4),ECB                                         0154  04330000
*         INPUTBUF(1)=' ';          /* CLEAR INBUFR.                  * 04340000
         MVI   INPUTBUF,C' '                                      0155  04350000
*         INPUTBUF(2:72)=INPUTBUF(1:71);                                04360000
         MVC   INPUTBUF+1(71),INPUTBUF                            0156  04370000
*         /************************************************************ 04380000
*         /*                                                          * 04390000
*         /*                 PWTO MESSAGE IFD105D                     * 04400000
*         /*                                                          * 04410000
*         /************************************************************ 04420000
*         R6=MSGMOD;                /* GET POINTER TO MESSAGE MODULE. * 04430000
         L     @6,MSGMOD                                          0157  04440000
*         R1=MSGPTR05;              /* GET POINTER TO MESSAGE IFD105D * 04450000
         L     @1,12(0,@6)                                        0158  04460000
*         REPBUFLN='48'X;           /* PUT REPLY BUFFER LENGTH IN     * 04470000
         MVI   0(@1),X'48'                                        0159  04480000
*                                   /* WTOR PARAMETER LIST.           * 04490000
*         REMERR='0'B;                   /* ZERO RE ERROR FLAG   M4502* 04500000
         NI    A00025,B'10111111'                                 0160  04510000
*         ONCOMM='0'B;                   /* ZERO FLAG           S20203* 04520000
         NI    A00028,B'11011111'                                 0161  04530000
*         EDTOMSG='1'B;                  /* IDENTIFY MSG        S20203* 04540000
         OI    A00026,B'00000010'                                 0162  04550000
*         GEN(PWTOR REG=(1),WAIT=YES);                                  04560000
         PWTOR REG=(1),WAIT=YES                                         04570000
         DS    0H                                                       04580000
*         EDTOMSG='0'B;                  /* ZERO EDTOMSG FLAG   S20203* 04590000
         NI    A00026,B'11111101'                                 0164  04600000
* CECINP04:                                                             04610000
*         NDCFO='1'B;               /* SET BYPASS FOR DYNAMIC COMM.   * 04620000
CECINP04 OI    OLTEPSW2,B'10000000'                               0165  04630000
*         INBUFPTR=ADDR(INBUFR);    /* INITIALIZE INBUFR POINTER. */    04640000
         LA    @F,INBUFR                                          0166  04650000
         ST    @F,INBUFPTR                                        0166  04660000
*         /************************************************************ 04670000
*         /*                                                          * 04680000
*         /*             ARE 3 SLASH DELIMITERS PRESENT               * 04690000
*         /*                                                          * 04700000
*         /************************************************************ 04710000
*         R8=ADDR(INPUTBUF);            /* ADDRESS INPUTBUFFER   M4832* 04720000
         LA    @8,INPUTBUF                                        0167  04730000
*         SLASHCNT=0;               /* INITIALIZE SLASH COUNTER. */     04740000
         SR    @9,@9                                              0168  04750000
*  DO I=72 BY -1 TO 1;                   /* SEARCH BUFFER             * 04760000
         LA    @5,72                                              0169  04770000
*    IF B1ST='/' THEN                    /* CHECK FOR SLASH           * 04780000
@DO9F9   CLI   0(@8),C'/'                                         0170  04790000
         BC    07,@9F5                                            0170  04800000
*           DO;                                                         04810000
*           SLASHCNT=SLASHCNT+1;    /* YES, INCREMENT SLASH COUNTER. */ 04820000
         LA    @9,1(0,@9)                                         0172  04830000
*           IF SLASHCNT=1&                  /* IS SLASH COUNTER A ONE * 04840000
*            B2ND¬='/' THEN              /* AND TEST ENTERED          * 04850000
         CH    @9,@D1                                             0173  04860000
         BC    07,@9F4                                            0173  04870000
         CLI   1(@8),C'/'                                         0173  04880000
         BC    08,@9F3                                            0173  04890000
*              DO;                       /* SAVE TEST TYPE            * 04900000
*             IF TESTTYPE(1)='T'|                                       04910000
*                   TESTTYPE(1)='P'|                                    04920000
*                         TESTTYPE(1)='N'|                              04930000
*                               TESTTYPE(1)='R' THEN                    04940000
         CLI   1(@8),C'T'                                         0175  04950000
         BC    08,@9F2                                            0175  04960000
         CLI   1(@8),C'P'                                         0175  04970000
         BC    08,@9F1                                            0175  04980000
         CLI   1(@8),C'N'                                         0175  04990000
         BC    08,@9F0                                            0175  05000000
         CLI   1(@8),C'R'                                         0175  05010000
         BC    07,@9EF                                            0175  05020000
*               TPSAVE=TESTTYPE(2:5);                                   05030000
@9F0     EQU   *                                                  0176  05040000
@9F1     EQU   *                                                  0176  05050000
@9F2     MVC   TPSAVE(4),2(@8)                                    0176  05060000
         BC    15,@9EE                                            0177  05070000
*             ELSE                                                      05080000
*               TPSAVE=TESTTYPE(1:4);                                   05090000
@9EF     MVC   TPSAVE(4),1(@8)                                    0177  05100000
*             END;                                                      05110000
@9EE     EQU   *                                                  0178  05120000
*           END;                                                        05130000
@9F3     EQU   *                                                  0179  05140000
@9F4     EQU   *                                                  0179  05150000
*        R8=ADDR(B2ND);                  /* NEXT CHARACTER            * 05160000
@9F5     LA    @8,1(0,@8)                                         0180  05170000
*  END;                                  /* NEXT CHARACTER            * 05180000
* CECINP4B:                             /* LABEL, SLASH CHECK   X02008* 05190000
*         IF SLASHCNT¬=3 THEN           /* THREE SLASHES IN BUF XM5089* 05200000
         BCT   @5,@DO9F9                                          0181  05210000
CECINP4B CH    @9,@D2                                             0182  05220000
*           GO TO CECINP4A;             /* CHECK FOR SPECIALS   XM5089* 05230000
         BC    07,CECINP4A                                        0183  05240000
*         IF INPUTBUF(1:2)='//' &       /* SAME DEV AND TEST?    M4832* 05250000
*          LEGALDEV='1'B &              /* VALID DEV TO TEST     M4832* 05260000
*          LEGALTST='1'B THEN           /* VALID TEST ENTERED    M4823* 05270000
         CLC   INPUTBUF(2),@C16                                   0184  05280000
         BC    07,@9ED                                            0184  05290000
         TM    OLTEPSW,B'00001000'                                0184  05300000
         BC    12,@9EC                                            0184  05310000
         TM    OLTEPSW,B'10000000'                                0184  05320000
         BC    12,@9EB                                            0184  05330000
*           DO;                         /* YES, THEN SET UP      M4832* 05340000
*            INBUFPTR=INBUFPTR+1;       /* INPUT BUFFER FOR      M4832* 05350000
         LA    @F,1                                               0186  05360000
         A     @F,INBUFPTR                                        0186  05370000
         ST    @F,INBUFPTR                                        0186  05380000
*            GO TO CECINP15;            /* OPTION DECODE,DYN COM M4832* 05390000
         BC    15,CECINP15                                        0187  05400000
*           END;                                                        05410000
*         IF FERINT='1'B THEN           /* 1ST ERROR, DYN COMM?  M4832* 05420000
@9EB     EQU   *                                                  0189  05430000
@9EC     EQU   *                                                  0189  05440000
@9ED     TM    OLTEPSW,B'00000010'                                0189  05450000
         BC    12,@9EA                                            0189  05460000
*          DO;                          /* YES, SETUP FOR OLT    M4832* 05470000
*           SAVEBUF=INPUTBUF;           /* CLEANUP BY SAVING BUFRM4832* 05480000
         MVC   SAVEBUF(72),INPUTBUF                               0191  05490000
*           GOTINPUT='1'B;              /* SET BIT ON,SET UP FOR M4832* 05500000
         OI    OLTEPSW7,B'00000001'                               0192  05510000
*           GO TO CECINP09;             /* OLT SCHEDULER.        M4832* 05520000
         BC    15,CECINP09                                        0193  05530000
*          END;                                                         05540000
*         GO TO CECINP07;               /* CONTINUE DECODING BUFXM5089* 05550000
* CECINP4A:                                                             05560000
*         /************************************************************ 05570000
*         /*                                                          * 05580000
*         /*         LOOK FOR SPECIAL ENTRIES                         * 05590000
*         /*                                                          * 05600000
*         /************************************************************ 05610000
*                                        /* CPUAFFN VERB CHECK  Y02068* 05620000
*         IF INPUTBUF(1:8)¬='CPUAFFN=' THEN/* IF AFFN VERB NOT  Y02068* 05630000
CECINP4A CLC   INPUTBUF(8),@C17                                   0196  05640000
*           GOTO CECINP4D;               /* ENTERED CHECK NEXT  Y02068* 05650000
         BC    07,CECINP4D                                        0197  05660000
*         IF FERINT='1'B                 /* IF THIS IS FIRST ERRY02068* 05670000
*           | UTCATAS='1'B THEN          /* REPLY OR CATASTROFICY02068* 05680000
         TM    OLTEPSW,B'00000010'                                0198  05690000
         BC    01,@9E9                                            0198  05700000
         TM    SCT+3,B'00100000'                                  0198  05710000
         BC    12,@9E8                                            0198  05720000
*             GOTO CECINP4D;             /* CPUAFFN REQ INVALID Y02068* 05730000
         BC    03,CECINP4D                                        0199  05740000
*         IF RETAINAC='1'B               /* IF REI ACTIVE & THISY02068* 05750000
*           & ONCOMM='0'B THEN           /* IS NOT A ONSITE COMMY02068* 05760000
@9E8     TM    A00025,B'10000000'                                 0200  05770000
         BC    12,@9E7                                            0200  05780000
         TM    A00028,B'00100000'                                 0200  05790000
*             GOTO CECINP4D;             /* CPUAFFN REQUEST NO GY02068* 05800000
         BC    10,CECINP4D                                        0201  05810000
*         IF MPSYS='0'B THEN             /* IF IS CHECK IF MP   Y02068* 05820000
@9E6     EQU   *                                                  0202  05830000
@9E7     TM    OLTPSW10,B'10000000'                               0202  05840000
         BC    05,@9E5                                            0202  05850000
*           DO;                          /* SYSTEM IF NOT THEN  Y02068* 05860000
*             R1 = MSGPR260;             /* ISSUE MSG IFD260I   Y02068* 05870000
         L     @1,132(0,@6)                                       0204  05880000
*             GEN(BAL   R7,CECPWTO);     /* VERB NOT VALID      Y02068* 05890000
         BAL   R7,CECPWTO                                               05900000
         DS    0H                                                       05910000
*             GOTO CECINP03;             /* REDEFINE E DTO MSG  Y02068* 05920000
         BC    15,CECINP03                                        0206  05930000
*           END;                         /* IFD105D             Y02068* 05940000
*         VERBCALL = '1'B;               /* INDICATE THIS IS VRBY02068* 05950000
@9E5     OI    OLTPSW10,B'00100000'                               0208  05960000
*         AFFNSET = '0'B;                /* SHOW AFFN NOT SET   Y02068* 05970000
         NI    OLTPSW10,B'10111111'                               0209  05980000
*         GEN;                           /* GOTO CPU AFFINITY   Y02068* 05990000
         IFDMOD CALL='62'                * CALL IFDOLT62        Y02068* 06000000
         IFDMOD DELETE='62'              * DELETE MODULE        Y02068* 06010000
         DS    0H                                                       06020000
*         IF AFFNSET = '1'B THEN         /* COMPLETE?           Y02068* 06030000
         TM    OLTPSW10,B'01000000'                               0211  06040000
*           GOTO CECINP02;               /* YES, READ NEXT      Y02068* 06050000
         BC    01,CECINP02                                        0212  06060000
*         IF  AFFNSET='0'B THEN          /* NO  AFFINIY NOT SET Y02068* 06070000
         TM    OLTPSW10,B'01000000'                               0213  06080000
*           GOTO CECINP17;               /*CANCEL EXIT FROM AFFNY02068* 06090000
         BC    08,CECINP17                                        0214  06100000
* CECINP4D:                                                   /*Y02068* 06110000
*                                        /* ELSE EQU VERB CHECK Y02068* 06120000
*  IF RETAINAC='1'B&                     /* REI ACTIVE          XM0088* 06130000
*    ONCOMM='0'B THEN                    /* NOT ONSITE          XM0088* 06140000
CECINP4D TM    A00025,B'10000000'                                 0215  06150000
         BC    12,@9E4                                            0215  06160000
         TM    A00028,B'00100000'                                 0215  06170000
*      GOTO CECINP4C;                    /* EQUATE NOT ALLOWED  XM0088* 06180000
         BC    10,CECINP4C                                        0216  06190000
*  IF INPUTBUF(1:3)='EQU' THEN           /* CHECK REPLY         XM0088* 06200000
@9E3     EQU   *                                                  0217  06210000
@9E4     CLC   INPUTBUF(3),@C18                                   0217  06220000
         BC    07,@9E2                                            0217  06230000
*    DO;                                 /* CDS EQUATE REQUEST  XM0088* 06240000
*      CDSEQU='1'B;                      /* INDICATE CDS EQUATE XM0088* 06250000
         OI    OLTEPSW9,B'10000000'                               0219  06260000
*      IF FERINT='1'B THEN               /* CHECK INDICATOR     XM0088* 06270000
         TM    OLTEPSW,B'00000010'                                0220  06280000
*        GOTO CECINP09;                  /* DYN COMMUNICATIONS  XM0088* 06290000
         BC    01,CECINP09                                        0221  06300000
*      GOTO CECINP02;                    /* ISSUE WTOR          XM0088* 06310000
         BC    15,CECINP02                                        0222  06320000
*    END;                                /* END REPLY CHECK     XM0088* 06330000
* CECINP4C:                              /* LABEL               XM0088* 06340000
*  IF INPUTBUF(1:3)¬=REI THEN            /* IS REI SPECIFIED          * 06350000
@9E2     EQU   *                                                  0224  06360000
CECINP4C CLC   INPUTBUF(3),STOPREI+4                              0224  06370000
*    GOTO CECINP20;                      /* NO CONTINUE               * 06380000
         BC    07,CECINP20                                        0225  06390000
*         IF RETAINAC='1'B THEN          /* IF REI ALREADY      S20203* 06400000
         TM    A00025,B'10000000'                                 0226  06410000
*           GOTO CECINP02;               /* GO REDEFINE TEST    S20203* 06420000
         BC    01,CECINP02                                        0227  06430000
*  GEN;                                                                 06440000
CL54     IFDMOD CALL='54'               MODULE CALL               M4506 06450000
DLT54    IFDMOD DELETE='54'             DELETE IFDOLT54                 06460000
         DS    0H                                                       06470000
*         IF RETAINAC='0'B THEN          /* NO REI GOTO CONSOLE S20203* 06480000
         TM    A00025,B'10000000'                                 0229  06490000
*           GOTO CECINP03;               /*                     S20203* 06500000
         BC    08,CECINP03                                        0230  06510000
*         GOTO CECINP02;                 /* GO REDEFINE TEST    S20203* 06520000
         BC    15,CECINP02                                        0231  06530000
*  CECINP20:                             /*                     S20203* 06540000
*  IF INPUTBUF(1:7)¬=STOPREI THEN        /* IS STOPREI ENTERED        * 06550000
CECINP20 CLC   INPUTBUF(7),STOPREI                                0232  06560000
*           GOTO CECINP21;               /* NO CONTINUE         S20203* 06570000
         BC    07,CECINP21                                        0233  06580000
*         IF RETAINAC='0'B THEN          /* IF REI NOT ACTIVE   S20203* 06590000
         TM    A00025,B'10000000'                                 0234  06600000
*           GOTO CECINP02;               /* GO REDEFINE TEST    S20203* 06610000
         BC    08,CECINP02                                        0235  06620000
*  GEN;                                                                 06630000
CL56     IFDMOD CALL='56'               MODULE CALL               M4506 06640000
DLT56    IFDMOD DELETE='56'             DELETE IFDOLT56                 06650000
         DS    0H                                                       06660000
*         GOTO CECINP02;                 /* GO REDEFINE TEST    S20203* 06670000
         BC    15,CECINP02                                        0237  06680000
*  CECINP21:                             /*                     S20203* 06690000
*         IF INPUTBUF(1:3)¬='CAN' THEN /* IS CANCEL SPECIFIED. */       06700000
CECINP21 CLC   INPUTBUF(3),@C19                                   0238  06710000
*           GO TO CECINP05;           /* NO, CONTINUE.        */        06720000
         BC    07,CECINP05                                        0239  06730000
*         IF RETAINAC='1'B               /* REI ACTIVE          S20203* 06740000
*           & ONCOMM='0'B THEN           /* NOT ONSITE DYN COMM S20203* 06750000
         TM    A00025,B'10000000'                                 0240  06760000
         BC    12,@9E1                                            0240  06770000
         TM    A00028,B'00100000'                                 0240  06780000
*           GOTO CECINP02;               /* GO REDEFINE TEST    S20203* 06790000
         BC    10,CECINP02                                        0241  06800000
*         IF RETAINAC='1'B THEN          /* IS REI ACTIVE.      S20203* 06810000
@9E0     EQU   *                                                  0242  06820000
@9E1     TM    A00025,B'10000000'                                 0242  06830000
         BC    12,@9DF                                            0242  06840000
*           DO;                          /* YES.                S20203* 06850000
*  GEN(BAL   R14,CL56+4);                /* MODULE IDENTITY      M4506* 06860000
         BAL   R14,CL56+4                                               06870000
         DS    0H                                                       06880000
*  GEN(BAL   R14,DLT56+4);               /* DELETE IFDOLT56           * 06890000
         BAL   R14,DLT56+4                                              06900000
         DS    0H                                                       06910000
*           END;                         /* CONTINUE            S20203* 06920000
*         INPUTBUF(1)=CAN;          /* PUT CANCEL INDICATOR IN INBUFR.* 06930000
@9DF     MVC   INPUTBUF(1),CAN                                    0247  06940000
*         IF FERINT='1'B|           /* IS A TEST STILL IN PROCESS. */   06950000
*               UTCATAS='1'B THEN   /* YES, FREE IT UP AND BY-PASS */   06960000
         TM    OLTEPSW,B'00000010'                                0248  06970000
         BC    01,@9DE                                            0248  06980000
         TM    SCT+3,B'00100000'                                  0248  06990000
         BC    12,@9DD                                            0248  07000000
*           DO;                     /* ALL OTHERS.                 */   07010000
*           BYPALDEV='1'B;          /* SET BYPASS FLAG ON. */           07020000
@9DE     OI    OLTEPSW3,B'01000000'                               0250  07030000
*  GEN;                                                     /*@ZA16985* 07040000
         L     R13,SCHEDSA        /* SET UP TO GO */           @ZA16985 07050000
         BC    15,@EL01+4         /* TO SCHEDULER */           @ZA16985 07060000
         DS    0H                                                       07070000
*           END;                                                        07080000
*         GO TO CECINP16;           /* CLEAN-UP. */                     07090000
         BC    15,CECINP16                                        0253  07100000
* CECINP05:                                                             07110000
*                                                                       07120000
*         /*          DOES CE  WISH TO 'TALK' TO THE OLT?       X02008* 07130000
*                                                                       07140000
*         IF INPUTBUF(1:4)¬=TALK THEN   /* IS TALK SPECIFIED?   X02008* 07150000
CECINP05 CLC   INPUTBUF(4),TALK                                   0254  07160000
*           GO TO CECINP19;             /* NO, GO ON.           X02008* 07170000
         BC    07,CECINP19                                        0255  07180000
*         IF FERINT='0'B &              /* NOT DYN COM OR FIRST X02008* 07190000
*           UTCATAS='0'B THEN           /* ERROR OR CATAS ERROR X02008* 07200000
         TM    OLTEPSW,B'00000010'                                0256  07210000
         BC    05,@9DC                                            0256  07220000
         TM    SCT+3,B'00100000'                                  0256  07230000
*           GO TO CECINP19;             /* COMM THEN GO  OUTPUT X02008* 07240000
         BC    10,CECINP19                                        0257  07250000
*                                       /* IFD106I MESSAGE.     X02008* 07260000
*         TALKVERB='1'B;                /* TALK VERB ENTERED.   X02008* 07270000
@9DB     EQU   *                                                  0258  07280000
@9DC     OI    OLTEPSW3,B'10000000'                               0258  07290000
*                                                                       07300000
*         /* CAN THE OLT ENTERED HANDLE THE TALK FACILITY?      X02008* 07310000
*                                                                       07320000
*         IF TALKOLT='1'B THEN          /* CAN OLT HANDLE TALK? X02008* 07330000
         TM    SCT+36,B'00000001'                                 0259  07340000
         BC    12,@9DA                                            0259  07350000
*           DO;                         /* YES,                 X02008* 07360000
*             TALKCE='1'B;              /* TURN ON FLAG FOR CE. X02008* 07370000
         OI    SCT+37,B'10000000'                                 0261  07380000
*             TALKHERE='1'B;            /* SET SWITCH, TALK ENT X02008* 07390000
         OI    OLTEPSW8,B'00000001'                               0262  07400000
*             GO TO CECINP15;           /* CONT.--ISSUE MSG 104 X02008* 07410000
         BC    15,CECINP15                                        0263  07420000
*           END;                        /* END LOOP.            X02008* 07430000
*                                                                       07440000
*         R1=MSGPTR66;                  /* ADDRESS TALK MSG.    X02008* 07450000
@9DA     L     @1,120(0,@6)                                       0265  07460000
*         GEN(BAL R7,CECPWTO);          /* ISSUE MESSAGE        X02008* 07470000
         BAL R7,CECPWTO                                                 07480000
         DS    0H                                                       07490000
*         TALKHERE='1'B;                /* SET SWITCH, TALK ENT X02008* 07500000
         OI    OLTEPSW8,B'00000001'                               0267  07510000
*         GO TO CECINP15;               /* CONTINUE DECODE PROCEX02008* 07520000
         BC    15,CECINP15                                        0268  07530000
* CECINP19:                             /* LABEL                X02008* 07540000
*         /************************************************************ 07550000
*         /*                                                          * 07560000
*         /*                 IS PROMPTING SPECIFIED                   * 07570000
*         /*                                                          * 07580000
*         /************************************************************ 07590000
*         IF INPUTBUF(1:6)='PROMPT' THEN /* IS PROMPTING DESIRED. */    07600000
CECINP19 CLC   INPUTBUF(6),@C20                                   0269  07610000
         BC    07,@9D9                                            0269  07620000
*           DO;                          /* YES, IS IT A VALID    */    07630000
*           IF INPUTBUF(8)='A'|          /* REQUEST. YES, PROMPT. */    07640000
*                 INPUTBUF(8)='D'|       /* NO, CONTINUE.         */    07650000
*                       INPUTBUF(8)='T'|                                07660000
*                             INPUTBUF(8)='O' THEN                      07670000
         CLI   INPUTBUF+7,C'A'                                    0271  07680000
         BC    08,@9D8                                            0271  07690000
         CLI   INPUTBUF+7,C'D'                                    0271  07700000
         BC    08,@9D7                                            0271  07710000
         CLI   INPUTBUF+7,C'T'                                    0271  07720000
         BC    08,@9D6                                            0271  07730000
         CLI   INPUTBUF+7,C'O'                                    0271  07740000
         BC    07,@9D5                                            0271  07750000
*             DO;                                                       07760000
@9D6     EQU   *                                                  0272  07770000
@9D7     EQU   *                                                  0272  07780000
@9D8     EQU   *                                                  0272  07790000
*  GEN;                                                                 07800000
CL50     IFDMOD CALL='50'               MODULE CALL               M4506 07810000
DLT50    IFDMOD DELETE='50'             DELETE IFDOLT50                 07820000
         DS    0H                                                       07830000
*             GO TO CECINP03;                                           07840000
         BC    15,CECINP03                                        0274  07850000
*             END;                                                      07860000
*           END;                                                        07870000
@9D5     EQU   *                                                  0276  07880000
*         /************************************************************ 07890000
*         /*                                                          * 07900000
*         /*                 PWTO MESSAGE IFD106I                     * 07910000
*         /*                                                          * 07920000
*         /************************************************************ 07930000
*         R1=MSGPTR06;              /* MESSAGE IFD106I. */              07940000
@9D9     L     @1,16(0,@6)                                        0277  07950000
*         GEN(BAL   R7,CECPWTO);         /* ISSUE WTO            M4506* 07960000
         BAL   R7,CECPWTO                                               07970000
         DS    0H                                                       07980000
*         GO TO CECINP03;           /* TRY AGAIN. */                    07990000
         BC    15,CECINP03                                        0279  08000000
* CECINP06:                                                             08010000
*         /************************************************************ 08020000
*         /*                                                          * 08030000
*         /*            REWRITE TAPE LABELS AND CLEAN UP              * 08040000
*         /*                                                          * 08050000
*         /************************************************************ 08060000
*         TAPEHDR='1'B;             /* REWRITE TAPE LABELS.           * 08070000
CECINP06 OI    OLTEPSW2,B'00000010'                               0280  08080000
*            CANFLG = INPUTBUF(1); /* SAVE CAN FLAG           @ZA08985* 08090000
         MVC   CANFLG(1),INPUTBUF                                 0281  08100000
*         R15=DATPTR;                                                   08110000
         L     @F,DATPTR                                          0282  08120000
*         GEN(BALR  14,15);                                             08130000
         BALR  14,15                                                    08140000
         DS    0H                                                       08150000
*            INPUTBUF(1)=CANFLG;  /* RESTORE CAN FLG          @ZA08985* 08160000
         MVC   INPUTBUF(1),CANFLG                                 0284  08170000
* CECINP6A:                              /*                     S20203* 08180000
*         TAPEHDR='0'B;                  /* RESET TAPE LABEL FLGS20203* 08190000
CECINP6A NI    OLTEPSW2,B'11111101'                               0285  08200000
*         IF REMOTE='1'B THEN       /* REMOTE TERMINAL IN D/T/O/.     * 08210000
         TM    OLTEPSW7,B'00100000'                               0286  08220000
         BC    12,@9D4                                            0286  08230000
*           DO;                     /* YES, DISABLE ANY UP LINES.     * 08240000
*      GEN(IFDMOD CALL='74',LIST=0);     /* DISABLE                   * 08250000
         IFDMOD CALL='74',LIST=0                                        08260000
         DS    0H                                                       08270000
*      GEN(IFDMOD DELETE='74');          /* DELETE MODULE       XM4982* 08280000
         IFDMOD DELETE='74'                                             08290000
         DS    0H                                                       08300000
*           END;                    /* END DISABLE PROCEEDURE.        * 08310000
*         ROPTMIN2='00';            /* ISSUE SVC 59 TO CLEAN UP. */     08320000
@9D4     MVC   ROPTMIN2(2),@C4                                    0291  08330000
*         IF RETAINAC='1'B THEN          /* IF REI ACTIVE       S20203* 08340000
         TM    A00025,B'10000000'                                 0292  08350000
         BC    12,@9D3                                            0292  08360000
*           REIDEBAD=TSTDEBAD+128;       /* PTR TO REI DEB      S20203* 08370000
         LA    @F,128                                             0293  08380000
         A     @F,TSTDEBAD                                        0293  08390000
         ST    @F,REIDEBAD                                        0293  08400000
         BC    15,@9D2                                            0294  08410000
*           ELSE REIDEBAD=0;             /* NO. SET TO ZERO     S20203* 08420000
@9D3     SR    @F,@F                                              0294  08430000
         ST    @F,REIDEBAD                                        0294  08440000
*         R0=ADDR(ROPT);                                                08450000
@9D2     LA    @0,ROPT                                            0295  08460000
*                                                                       08470000
*         IF INPUTBUF(1)¬=CAN           /* CAN IN INPUT BUFR    XM0097* 08480000
*         THEN                          /* NO ISSUE SVC FOR     XM0097* 08490000
         CLC   INPUTBUF(1),CAN                                    0296  08500000
         BC    08,@9D1                                            0296  08510000
*         R1='8014'X;                   /* PARTIAL CLEANUP.     XM0097* 08520000
         L     @1,@X24                                            0297  08530000
         BC    15,@9D0                                            0298  08540000
*         ELSE                          /* YES,  TOTAL CLEANUP. XM0097* 08550000
*         R1='14'X;                                                     08560000
@9D1     LA    @1,X'14'                                           0298  08570000
*         GEN(SVC   59);                /* GO CLEAN UP          X03008* 08580000
@9D0     EQU   *                                                  0299  08590000
         SVC   59                                                       08600000
         DS    0H                                                       08610000
*         ZUESUCB=ZUESUCB&&ZUESUCB;    /* CLEAN UP DEVICE EXPO  X03008* 08620000
         XC    ZUESUCB(2),ZUESUCB                                 0300  08630000
*         GO TO R8;                 /* RETURN.                        * 08640000
         BCR   15,@8                                              0301  08650000
* CECINP07:                                                             08660000
*         /************************************************************ 08670000
*         /*                HAS A DEVICE BEEN ENTERED                 * 08680000
*         /************************************************************ 08690000
*         IF INPUTBUF(1)='/' THEN   /* HAS A DEVICE BEEN ENTERED. */    08700000
CECINP07 CLI   INPUTBUF,C'/'                                      0302  08710000
*           GO TO CECINP08;         /* NO, CONTINUE. */                 08720000
         BC    08,CECINP08                                        0303  08730000
*         IF INPUTBUF(1:2)='.N' THEN                                    08740000
         CLC   INPUTBUF(2),@C25                                   0304  08750000
*           GOTO CECINP22;               /* YES. BRANCH         S20203* 08760000
         BC    08,CECINP22                                        0305  08770000
*         IF RETAINAC='1'B               /*                     S20203* 08780000
*           & ONCOMM='0'B THEN           /*                     S20203* 08790000
         TM    A00025,B'10000000'                                 0306  08800000
         BC    12,@9CF                                            0306  08810000
         TM    A00028,B'00100000'                                 0306  08820000
*               GOTO CECINP13;           /* REMOTE ANSWERED     S20203* 08830000
         BC    10,CECINP13                                        0307  08840000
*  CECINP22:                             /*                     S20203* 08850000
*         IF INITENT='1'B | LEGALDEV='1'B THEN                /*YM6196* 08860000
@9CE     EQU   *                                                  0308  08870000
@9CF     EQU   *                                                  0308  08880000
CECINP22 TM    OLTEPSW2,B'00001000'                               0308  08890000
         BC    01,@9CD                                            0308  08900000
         TM    OLTEPSW,B'00001000'                                0308  08910000
         BC    12,@9CC                                            0308  08920000
*                            /* YES, IS IT THE INITIAL ENTRY.   YM6196* 08930000
*           DO;                     /* NO, CLEAN-UP BY REWRITING TAPE * 08940000
@9CD     EQU   *                                                  0309  08950000
*           GEN(BAL   R8,CECINP06); /* REWRITE TAPE LABELS AND CLEANUP* 08960000
         BAL   R8,CECINP06                                              08970000
         DS    0H                                                       08980000
*                                   /* LABELS, BY ISSUEING SVC 59 AND * 08990000
*                                   /* CLEARING THE DEVTABLE.         * 09000000
*         REIDEBAD=0;                   /* CLEAR ROPT DEB ADDR  XM6301* 09010000
         SR    @F,@F                                              0311  09020000
         ST    @F,REIDEBAD                                        0311  09030000
*  R8=DEVTBPTR;                          /* DEVICE TABLES             * 09040000
         L     @8,DEVTBPTR                                        0312  09050000
*  DO R9=TABLNGTH BY -1 TO 1;            /* TABLE LENGTH              * 09060000
         LH    @9,TABLNGTH                                        0313  09070000
         LTR   @9,@9                                              0313  09080000
         BC    12,@DO9CA                                          0313  09090000
*    DVT=DVT&&DVT;                       /* ZERO TABLE AREA           * 09100000
@DO9CB   XC    0(16,@8),0(@8)                                     0314  09110000
*    R8=ADDR(DVTN);                      /* NEXT TABLE AREA           * 09120000
         LA    @8,16(0,@8)                                        0315  09130000
*  END;                                  /* ZERO TOTAL TABLE          * 09140000
*           DPRINTFL='00'B;         /* CLEAR DPRINT INTERNAL FLAGS.   * 09150000
         BCT   @9,@DO9CB                                          0316  09160000
@DO9CA   NI    OLTEPSW5,B'11100111'                               0317  09170000
*           END;                                                        09180000
*         GO TO CECINP09;           /* CONTINUE. */                     09190000
         BC    15,CECINP09                                        0319  09200000
* CECINP08:                                                             09210000
*         /************************************************************ 09220000
*         /*                 HAS A TEST BEEN ENTERED                  * 09230000
*         /************************************************************ 09240000
*         IF INPUTBUF(2)='/' THEN   /* HAS A TEST BEEN ENTERED. */      09250000
CECINP08 CLI   INPUTBUF+1,C'/'                                    0320  09260000
*           GO TO CECINP11;         /* NO, CONTINUE.            */      09270000
         BC    08,CECINP11                                        0321  09280000
* CECINP09:                                                             09290000
*         /************************************************************ 09300000
*         /*                SHOULD TESTS BE CANCELED                  * 09310000
*         /************************************************************ 09320000
*         IF FERINT¬='1'B THEN      /* IS THIS FIRST ERROR COMM. */     09330000
CECINP09 TM    OLTEPSW,B'00000010'                                0322  09340000
*           GO TO CECINP11;         /* NO, CONTINUE. */                 09350000
         BC    12,CECINP11                                        0323  09360000
*         BYPALDEV='1'B;            /* BYPASS ALL TESTING. */           09370000
         OI    OLTEPSW3,B'01000000'                               0324  09380000
*         ATM='1'B;                 /* SET ABNORMAL TERMINATION */      09390000
         OI    OLTEPSW6,B'01000000'                               0325  09400000
*                                   /* MESSAGE FLAG ON.         */      09410000
*         TALKVERB='0'B;                /* ZERO TALKVERB FLAG   X02008* 09420000
         NI    OLTEPSW3,B'01111111'                               0326  09430000
*         TALKCE='0'B;                  /* ZERO TALK FLG IN SCT X02008* 09440000
         NI    SCT+37,B'01111111'                                 0327  09450000
*         ASTERB = '1'B;               /* TERMINATE OLT WITH * T MSG  * 09460000
         OI    SCT+3,B'01000000'                                  0328  09470000
*  GEN;                                                     /*@ZA16985* 09480000
         L     R13,SCHEDSA      /* SET UP TO GO */             @ZA16985 09490000
         BC    15,@EL01+4       /* TO SCHEDULER */             @ZA16985 09500000
         DS    0H                                                       09510000
* CECINP10:                                                             09520000
*         FERINT='0'B;              /* CLEAR FERINT INDICATOR. */       09530000
CECINP10 NI    OLTEPSW,B'11111101'                                0330  09540000
*         SETERROR='0'B;            /* CLEAR ERROR BIT IN SCT. */       09550000
         NI    SCT+3,B'01111111'                                  0331  09560000
*         ATM='0'B;                 /* CLEAR ATM FLAG. */               09570000
         NI    OLTEPSW6,B'10111111'                               0332  09580000
*         BYPALDEV='0'B;            /* CLEAR BYPASS ALL DEVICES FLAG. * 09590000
         NI    OLTEPSW3,B'10111111'                               0333  09600000
*  IF CDSEQU='1'B THEN                   /* CHECK INDICATOR     XM0088* 09610000
         TM    OLTEPSW9,B'10000000'                               0334  09620000
*    GOTO CECINP02;                      /* CDS EQUATES         XM0088* 09630000
         BC    01,CECINP02                                        0335  09640000
*         IF GOTINPUT='1'B THEN         /* D/T/O/ ENTERED?       M4832* 09650000
         TM    OLTEPSW7,B'00000001'                               0336  09660000
         BC    12,@9C7                                            0336  09670000
*          DO;                          /* YES, RESET BIT TO ZEROM4832* 09680000
*           GOTINPUT='0'B;              /* AND RESTORE INBUT BUF M4832* 09690000
         NI    OLTEPSW7,B'11111110'                               0338  09700000
*           INPUTBUF=SAVEBUF;           /* FER, CONTINUE DECODINGM4832* 09710000
         MVC   INPUTBUF(72),SAVEBUF                               0339  09720000
*           GO TO CECINP04;             /* CHECK SLASH DELIMITERXM6301* 09730000
         BC    15,CECINP04                                        0340  09740000
*          END;                         /*                       M4832* 09750000
* CECINP11:                                                             09760000
*         IF INPUTBUF(1)¬='/' THEN  /* IS CHAR. A SLASH. */             09770000
@9C7     EQU   *                                                  0342  09780000
CECINP11 CLI   INPUTBUF,C'/'                                      0342  09790000
*           GO TO CECINP13;             /* DECODE DEVICE FIELD. SM2411* 09800000
         BC    07,CECINP13                                        0343  09810000
*         IF LEGALDEV¬='1'B THEN    /* HAVE LEGAL DEVICES BEEN ENTERED* 09820000
         TM    OLTEPSW,B'00001000'                                0344  09830000
*           GO TO CECINP12;         /* PREVIOUSLY. NO, ERROR.         * 09840000
*         GO TO CECINP14;           /* DECODE TESTS. */                 09850000
         BC    03,CECINP14                                        0346  09860000
* CECINP12:                                                             09870000
*         /************************************************************ 09880000
*         /*                                                          * 09890000
*         /*                 PWTO MESSAGE IFD108I                     * 09900000
*         /*                                                          * 09910000
*         /************************************************************ 09920000
*         R1=MSGPTR08;              /* GET POINTER TO MESSAGE IFD108I.* 09930000
CECINP12 L     @1,20(0,@6)                                        0347  09940000
*         GEN(BAL   R7,CECPWTO);         /* ISSUE WTO            M4506* 09950000
         BAL   R7,CECPWTO                                               09960000
         DS    0H                                                       09970000
*         R1=MSGPTR61;              /* GIVE MEANS OF PROMPTING, IF */   09980000
         L     @1,60(0,@6)                                        0349  09990000
*         GEN(BAL   R7,CECPWTO);         /* ISSUE WTO            M4506* 10000000
         BAL   R7,CECPWTO                                               10010000
         DS    0H                                                       10020000
*         GO TO CECINP03;           /* CONTINUE. */                     10030000
         BC    15,CECINP03                                        0351  10040000
* CECINP13:                                                             10050000
*         /************************************************************ 10060000
*         /*                                                          * 10070000
*         /*                     DECODE DEVICES                       * 10080000
*         /*                                                          * 10090000
*         /************************************************************ 10100000
*         IF INPUTBUF(1)<'A'|       /* IS DEV ENTRY EQUAL TO    X03008* 10110000
*            INPUTBUF(1)>'Z' THEN   /* DEV ADDR OR SYMBOLIC     X03008* 10120000
CECINP13 CLI   INPUTBUF,C'A'                                      0352  10130000
         BC    04,@9C6                                            0352  10140000
         CLI   INPUTBUF,C'Z'                                      0352  10150000
         BC    12,@9C5                                            0352  10160000
*           MIXDEV='0'B;            /* ADDRESS ENTRY = DEV ADDR X03008* 10170000
@9C6     NI    OLTEPSW9,B'11111011'                               0353  10180000
         BC    15,@9C4                                            0354  10190000
*         ELSE                                                /*X03008* 10200000
*           MIXDEV='1'B;            /* SYMBOLIC ENTRY           X03008* 10210000
@9C5     OI    OLTEPSW9,B'00000100'                               0354  10220000
* CECIN13A:                         /* MORE ENTRIES DEV TABLE   X03008* 10230000
*         REMOTE='0'B;              /* NO REMOTE DEV DECODED YET. 21051 10240000
@9C4     EQU   *                                                  0355  10250000
CECIN13A NI    OLTEPSW7,B'11011111'                               0355  10260000
*  GEN;                                                                 10270000
CL31     IFDMOD CALL='31'               MODULE CALL               M4506 10280000
DLT31    IFDMOD DELETE='31'             DELETE IFDOLT31                 10290000
         DS    0H                                                       10300000
*         IF UNICTR=0|                                                  10310000
*           NDR='1'B THEN                                               10320000
         CLI   UNICTR,0                                           0357  10330000
         BC    08,@9C3                                            0357  10340000
         TM    OLTEPSW2,B'00000100'                               0357  10350000
         BC    12,@9C2                                            0357  10360000
*           GO TO CECINP14;                                             10370000
         BC    03,CECINP14                                        0358  10380000
*         GEN;                                                          10390000
@9C2     EQU   *                                                  0359  10400000
CL61     IFDMOD CALL='61'                                               10410000
DLT61    IFDMOD DELETE='61'             DELETE IFDOLT61                 10420000
         DS    0H                                                       10430000
*         IF RETTO31='1'B THEN     /* RETURN TO IFDOLT31,CONT DECODING* 10440000
         TM    OLTEPSW7,B'01000000'                               0360  10450000
*           GO TO CECIN13A;        /* DTO ENTRY & FILL DEV TABS.X03008* 10460000
         BC    01,CECIN13A                                        0361  10470000
* CECINP14:                                                             10480000
*         /************************************************************ 10490000
*         /*                                                          * 10500000
*         /*                      DECODE TEST SECTIONS                  10510000
*         /*                                                          * 10520000
*         /************************************************************ 10530000
*  GEN;                                                                 10540000
CECINP14 EQU   *                                                  0362  10550000
CL32     IFDMOD CALL='32'               MODULE CALL               M4506 10560000
DLT32    IFDMOD DELETE='32'             DELETE IFDOLT32                 10570000
         DS    0H                                                       10580000
*         IF RTNSLCTN='0'B & RTNFLD='1'B THEN DO; /* ROUTINES SELECTED* 10590000
         TM    SCT+33,B'00100000'                                 0363  10600000
         BC    05,@9C1                                            0363  10610000
         TM    OLTEPSW1,B'10000000'                               0363  10620000
         BC    12,@9C0                                            0363  10630000
*                                  /* IN IFDOLT32 BUT NOT DECODED YET?* 10640000
*                                        /*                     S20203* 10650000
*         /************************************************************ 10660000
*         /*                                                          * 10670000
*         /*                   DECODE TEST ROUTINES                   * 10680000
*         /*                                                          * 10690000
*         /************************************************************ 10700000
*  GEN;                                                                 10710000
CL38     IFDMOD CALL='38'               MODULE CALL               M4506 10720000
DLT38    IFDMOD DELETE='38'             DELETE IFDOLT38                 10730000
         DS    0H                                                       10740000
*         END;                           /*                     S20203* 10750000
* CECINP15:                                                             10760000
*         /************************************************************ 10770000
*         /*                                                          * 10780000
*         /*                     DECODE OPTIONS                       * 10790000
*         /*                                                          * 10800000
*         /************************************************************ 10810000
*  GEN;                                                                 10820000
@9C0     EQU   *                                                  0367  10830000
@9C1     EQU   *                                                  0367  10840000
CECINP15 EQU   *                                                  0367  10850000
CL33     IFDMOD CALL='33'               MODULE CALL               M4506 10860000
DLTE33   IFDMOD DELETE='33'             DELETE IFDOLT33                 10870000
         DS    0H                                                       10880000
*         /************************************************************ 10890000
*         /*                                                          * 10900000
*         /*                PERFORM DATA PROTECTION                   * 10910000
*         /*                                                          * 10920000
*         /************************************************************ 10930000
*         R15=ADDR(IFDOLT48);       /* GET ADDRESS OF IFDOLT48.       * 10940000
         L     @3,@V2              ADDRESS OF IFDOLT48            0368  10950000
         LR    @F,@3                                              0368  10960000
*         GEN(BALR  14,15);         /* GO TO DATA PROTECTION.         * 10970000
         BALR  14,15                                                    10980000
         DS    0H                                                       10990000
* CECINP16:                                                             11000000
*         /************************************************************ 11010000
*         /*                                                          * 11020000
*         /*                     FINISH ROUTINE                       * 11030000
*         /*                                                          * 11040000
*         /************************************************************ 11050000
*         IF FERINT='1'B&           /* SHOULD PROCESSING CONTINUE. */   11060000
*               ATM='1'B THEN       /* YES, START DECODING NEW ENTRY*/  11070000
CECINP16 TM    OLTEPSW,B'00000010'                                0370  11080000
         BC    12,@9BF                                            0370  11090000
         TM    OLTEPSW6,B'01000000'                               0370  11100000
*           GO TO CECINP10;                                             11110000
         BC    03,CECINP10                                        0371  11120000
*                                   /* NO, FINISH. */                   11130000
*         IF INPUTBUF(1)¬=CAN THEN  /* IS CANCEL IN INPUT BUFFER.     * 11140000
@9BE     EQU   *                                                  0372  11150000
@9BF     CLC   INPUTBUF(1),CAN                                    0372  11160000
*           GO TO CECINP02;         /* NO, GET NEXT TEST DEFINITION.  * 11170000
         BC    07,CECINP02                                        0373  11180000
*         GEN(BAL   R8,CECINP06);   /* REWRITE TAPE LABELS AND CLEANUP* 11190000
         BAL   R8,CECINP06                                              11200000
         DS    0H                                                       11210000
* CECINP17:                                                             11220000
*         R15=0;                                                        11230000
CECINP17 SR    @F,@F                                              0375  11240000
*         R13=ADDR(SVAREA);                                             11250000
         L     @3,@A1              ADDRESS OF IFDOLT30            0376  11260000
         LA    @D,20(0,@3)                                        0376  11270000
*         RETURN;                                                       11280000
         BC    15,@EL01                                           0377  11290000
*  GEN;                                                                 11300000
CECPWTO  PWTO  REG=(1)                  ISSUE WTO                 M4506 11310000
         DS    0H                                                       11320000
*  GOTO R7;                              /* RESUME               M4506* 11330000
         BCR   15,@7                                              0379  11340000
*  GEN(DS     0H);                                                      11350000
         DS     0H                                                      11360000
         DS    0H                                                       11370000
*  GOTO FISTERR6;                        /* DYNAMIC ENTRY             * 11380000
         BC    15,FISTERR6                                        0381  11390000
* FISTERR:                                                              11400000
*         /************************************************************ 11410000
*         /*                                                          * 11420000
*         /*   DYNAMIC, FIRST-ERROR OR CATASTROPHIC COMMUNICATION     * 11430000
*         /*                                                          * 11440000
*         /************************************************************ 11450000
*         ENTRY;                                                        11460000
FISTERR  ST    @E,12(0,@D)                                        0382  11470000
         STM   @0,@C,20(@D)                                       0382  11480000
         BALR  @B,0                                               0382  11490000
         LA    @F,FISTERR-IFDOLT30-24                             0382  11500000
         SR    @B,@F                                              0382  11510000
         ST    @D,@SAV001+4                                       0382  11520000
         LA    @F,@SAV001                                         0382  11530000
         ST    @F,8(0,@D)                                         0382  11540000
         LR    @D,@F                                              0382  11550000
*         RESTRICT(1,2,5,6,8,9);                                        11560000
*         IF FERINT='1'B                 /* FIRST ERROR COMM     M4502* 11570000
*           | REMERR='1'B THEN           /* REMOTE ERROR         M4502* 11580000
@9BD     TM    OLTEPSW,B'00000010'                                0384  11590000
         BC    01,@9BC                                            0384  11600000
         TM    A00025,B'01000000'                                 0384  11610000
         BC    12,@9BB                                            0384  11620000
*               GOTO CECINP23;           /* DONT ZERO SWITCHES   M4502* 11630000
         BC    03,CECINP23                                        0385  11640000
*         EXECOUT='0'B;                  /* ZERO EXECOUT FLAG   S20203* 11650000
@9BB     NI    A00025,B'11111101'                                 0386  11660000
*         EXECANS='0'B;                  /* ZERO EXECANS FLG    S20203* 11670000
         NI    A00026,B'10111111'                                 0387  11680000
*  CECINP23:                             /*                      M4502* 11690000
*         REMERR='0'B;                   /* ZERO ERROR FLAG     S20203* 11700000
CECINP23 NI    A00025,B'10111111'                                 0388  11710000
*         IF UTCATAS='1'B THEN      /* IS IT CATASTROPHIC COMM. */      11720000
         TM    SCT+3,B'00100000'                                  0389  11730000
*           DO;                     /* YES, PRINT MESSAGE IFD157I */    11740000
*                                   /* AND FIND OUT WHAT USER WANTS*/   11750000
*                                   /* TO DO.                      */   11760000
*           GO TO CECINP03;                                             11770000
         BC    03,CECINP03                                        0391  11780000
*           END;                                                        11790000
*         FERINT='1'B;              /* INDICATE THIS IS DYNAMIC */      11800000
@9BA     OI    OLTEPSW,B'00000010'                                0393  11810000
*                                   /* COMMUNICATION.           */      11820000
*         GO TO CECINP03;                                               11830000
         BC    15,CECINP03                                        0394  11840000
* FISTERR6:                                                             11850000
*  GEN(BAL   R14,DLTE33+4);              /* DELETE IFDOLT33           * 11860000
FISTERR6 BAL   R14,DLTE33+4                                             11870000
         DS    0H                                                       11880000
*         RETURN;                   /* RETURN THROUGH DYNAMIC   */      11890000
*         END;                      /* COMMUNICATION SAVE AREA. */      11900000
@EL01    L     @D,4(0,@D)                                         0397  11910000
         L     @E,12(0,@D)                                        0397  11920000
         LM    @0,@C,20(@D)                                       0397  11930000
         BCR   15,@E                                              0397  11940000
@DATA1   EQU   *                                                        11950000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           11960000
@1       EQU   01                                                       11970000
@2       EQU   02                                                       11980000
@3       EQU   03                                                       11990000
@4       EQU   04                                                       12000000
@5       EQU   05                                                       12010000
@6       EQU   06                                                       12020000
@7       EQU   07                                                       12030000
@8       EQU   08                                                       12040000
@9       EQU   09                                                       12050000
@A       EQU   10                                                       12060000
@B       EQU   11                                                       12070000
@C       EQU   12                                                       12080000
@D       EQU   13                                                       12090000
@E       EQU   14                                                       12100000
@F       EQU   15                                                       12110000
@D1      DC    H'1'                                                     12120000
@D2      DC    H'3'                                                     12130000
@A1      DC    A(IFDOLT30)                                              12140000
@V2      DC    V(IFDOLT48)                                              12150000
         DS    0F                                                       12160000
@C1      DC    C'TCDSMDUM'                                              12170000
@C17     DC    C'CPUAFFN='                                              12180000
@X24     DC    X'00008014'                                              12190000
@X3      DC    X'0001'                                                  12200000
@C4      DC    C'00'                                                    12210000
@C16     DC    C'//'                                                    12220000
@C20     DC    C'PROMPT'                                                12230000
@C25     DC    C'.N'                                                    12240000
@C18     DC    C'EQU'                                                   12250000
@C19     DC    C'CAN'                                                   12260000
         DS    0D                                                       12270000
@DATA    EQU   *                                                        12280000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   12290000
R0       EQU   00000000            FULLWORD POINTER REGISTER            12300000
R1       EQU   00000001            FULLWORD POINTER REGISTER            12310000
R2       EQU   00000002            FULLWORD POINTER REGISTER            12320000
I        EQU   00000005            3  BYTE  POINTER REGISTER            12330000
R6       EQU   00000006            FULLWORD POINTER REGISTER            12340000
R7       EQU   00000007            FULLWORD POINTER REGISTER            12350000
R8       EQU   00000008            FULLWORD POINTER REGISTER            12360000
SLASHCNT EQU   00000009            3  BYTE  POINTER REGISTER            12370000
RETCODE  EQU   00000009            3  BYTE  POINTER REGISTER            12380000
R9       EQU   00000009            FULLWORD POINTER REGISTER            12390000
SA       EQU   00000013            FULLWORD POINTER REGISTER            12400000
R13      EQU   00000013            FULLWORD POINTER REGISTER            12410000
R14      EQU   00000014            FULLWORD POINTER REGISTER            12420000
R15      EQU   00000015            FULLWORD POINTER REGISTER            12430000
RC       EQU   00000015            3  BYTE  POINTER REGISTER            12440000
SAVE4    EQU   00000004            FULLWORD POINTER                     12450000
ECB      EQU   @DATA+00000072      FULLWORD INTEGER                     12460000
A00000   EQU   00000000            32 BYTE(S) ON WORD                   12470000
DVT      EQU   A00000+00000000     16 BYTE(S)                           12480000
DVTN     EQU   A00000+00000016     16 BYTE(S)                           12490000
         ORG   @DATA+00000076                                           12500000
STOPREI  EQU   *                   7 BYTE(S)                            12510000
         DC    C'STOPREI'                                               12520000
A00001   EQU   STOPREI+00000000    4 BYTE(S)                            12530000
REI      EQU   STOPREI+00000004    3 BYTE(S)                            12540000
FECSA    EQU   00000000            8 BYTE(S) ON WORD                    12550000
A00002   EQU   FECSA+00000000      4 BYTE(S)                            12560000
INTSAPTR EQU   FECSA+00000004      FULLWORD POINTER                     12570000
SVAREA   EQU   IFDOLT30+00000020   8 BYTE(S) ON WORD                    12580000
A00003   EQU   SVAREA+00000000     4 BYTE(S)                            12590000
SVR13    EQU   SVAREA+00000004     FULLWORD POINTER                     12600000
INITSA   EQU   00000000            12 BYTE(S) ON WORD                   12610000
A00004   EQU   INITSA+00000000     8 BYTE(S)                            12620000
SAVAREAD EQU   INITSA+00000008     FULLWORD POINTER                     12630000
A00005   EQU   00000000            6 BYTE(S) ON WORD                    12640000
B1ST     EQU   A00005+00000000     1 BYTE(S)                            12650000
TESTTYPE EQU   A00005+00000001     5 BYTE(S)                            12660000
B2ND     EQU   A00005+00000001     1 BYTE(S)                            12670000
CAN      EQU   *                   1 BYTE(S)                            12680000
         DC    X'FF'                                                    12690000
CANFLG   EQU   @DATA+00000084      1 BYTE(S)                            12700000
REPBUFLN EQU   00000000            1 BYTE(S)                            12710000
MSGPTR   EQU   00000000            136 BYTE(S) ON WORD                  12720000
MSGPTR00 EQU   MSGPTR+00000000     FULLWORD POINTER                     12730000
MSGPTR02 EQU   MSGPTR+00000004     FULLWORD POINTER                     12740000
MSGPTR03 EQU   MSGPTR+00000008     FULLWORD POINTER                     12750000
MSGPTR05 EQU   MSGPTR+00000012     FULLWORD POINTER                     12760000
MSGPTR06 EQU   MSGPTR+00000016     FULLWORD POINTER                     12770000
MSGPTR08 EQU   MSGPTR+00000020     FULLWORD POINTER                     12780000
MSGPTR17 EQU   MSGPTR+00000024     FULLWORD POINTER                     12790000
MSGPR166 EQU   MSGPTR+00000028     FULLWORD POINTER                     12800000
MSGPTR29 EQU   MSGPTR+00000032     FULLWORD POINTER                     12810000
MSGPTR34 EQU   MSGPTR+00000036     FULLWORD POINTER                     12820000
MSGPR501 EQU   MSGPTR+00000040     FULLWORD POINTER                     12830000
MSGPTR57 EQU   MSGPTR+00000044     FULLWORD POINTER                     12840000
MSGPTR58 EQU   MSGPTR+00000048     FULLWORD POINTER                     12850000
MSGPTR59 EQU   MSGPTR+00000052     FULLWORD POINTER                     12860000
MSGPTR60 EQU   MSGPTR+00000056     FULLWORD POINTER                     12870000
MSGPTR61 EQU   MSGPTR+00000060     FULLWORD POINTER                     12880000
A00006   EQU   MSGPTR+00000064     56 BYTE(S)                           12890000
MSGPTR66 EQU   MSGPTR+00000120     FULLWORD POINTER                     12900000
MSGPTR13 EQU   MSGPTR+00000124     FULLWORD POINTER                     12910000
MSGPTR99 EQU   MSGPTR+00000128     FULLWORD POINTER                     12920000
MSGPR260 EQU   MSGPTR+00000132     FULLWORD POINTER                     12930000
IFD100   EQU   00000000            84 BYTE(S) ON WORD                   12940000
A00007   EQU   IFD100+00000000     4 BYTE(S)                            12950000
IFD100I  EQU   IFD100+00000004     80 BYTE(S)                           12960000
A00008   EQU   00000000            67 BYTE(S) ON WORD                   12970000
A00009   EQU   A00008+00000000     65 BYTE(S)                           12980000
MSG899ID EQU   A00008+00000065     2 BYTE(S)                            12990000
MSSGE    EQU   00000000            44 BYTE(S) ON WORD                   13000000
A00010   EQU   MSSGE+00000000      4 BYTE(S)                            13010000
MESSAGE1 EQU   MSSGE+00000004      40 BYTE(S)                           13020000
SAVEBUF  EQU   @DATA+00000085      72 BYTE(S)                           13030000
         ORG   @DATA+00000157                                           13040000
TALK     EQU   *                   4 BYTE(S)                            13050000
         DC    C'TALK'                                                  13060000
PARMLIST EQU   @DATA+00000164      16 BYTE(S) ON WORD                   13070000
CDSNAME  EQU   PARMLIST+00000000   8 BYTE(S)                            13080000
LOADPT   EQU   PARMLIST+00000008   FULLWORD POINTER                     13090000
PFLAGS   EQU   PARMLIST+00000012   1 BYTE(S)                            13100000
A00037   EQU   PARMLIST+00000013   1 BYTE(S)                            13110000
CDSSIZE  EQU   PARMLIST+00000014   2 BYTE(S)                            13120000
         ENTRY FISTERR                                                  13130000
         ORG   @DATA                                                    13140000
         DS    00000180C                                                13150000
@TEMPS   DS    0F                                                       13160000
CNTRLREC DCB   DSORG=PS,BLKSIZE=80,DDNAME=CNTRLIN,DEVD=DA,             X13170000
               EODAD=CECINP18,LRECL=80,MACRF=(R),RECFM=F,NCP=1,        X13180000
               SYNAD=CECINP18                                  SA46803  13190000
SYMLIB   DCB   DDNAME=SYMSYM,DSORG=PO,RECFM=UT,BLKSIZE=3600,LRECL=80,  X13200000
               MACRF=R                                                  13210000
INPCOMM  IFDCOM                                                         13220000
SOSPRUN  EQU   SECLST+00000003     4 BYTE(S)                            13230000
CDSBLDL  EQU   SECLST+00000000     12 BYTE(S) ON WORD                   13240000
ENTRIES  EQU   CDSBLDL+00000000    HALFWORD INTEGER                     13250000
LENGTH   EQU   CDSBLDL+00000002    HALFWORD INTEGER                     13260000
NAME     EQU   CDSBLDL+00000004    8 BYTE(S)                            13270000
INPUTBUF EQU   INBUFR+00000000     72 BYTE(S)                           13280000
OFLAGS   EQU   CNTRLREC+00000048   8 BIT(S) ON BYTE                     13290000
OLTEPSW  EQU   CESWT+00000000      1 BYTE(S)                            13300000
LEGALTST EQU   OLTEPSW+00000000    1 BIT(S)                             13310000
A00011   EQU   OLTEPSW+00000000    3 BIT(S)                             13320000
LEGALDEV EQU   OLTEPSW+00000000    1 BIT(S)                             13330000
A00012   EQU   OLTEPSW+00000000    1 BIT(S)                             13340000
FERINT   EQU   OLTEPSW+00000000    1 BIT(S)                             13350000
OLTEPSW1 EQU   CESWT1+00000000     1 BYTE(S)                            13360000
RTNFLD   EQU   OLTEPSW1+00000000   1 BIT(S)                             13370000
OLTEPSW2 EQU   CESWT2+00000000     1 BYTE(S)                            13380000
NDCFO    EQU   OLTEPSW2+00000000   1 BIT(S)                             13390000
A00013   EQU   OLTEPSW2+00000000   3 BIT(S)                             13400000
INITENT  EQU   OLTEPSW2+00000000   1 BIT(S)                             13410000
NDR      EQU   OLTEPSW2+00000000   1 BIT(S)                             13420000
TAPEHDR  EQU   OLTEPSW2+00000000   1 BIT(S)                             13430000
OLTEPSW3 EQU   CESWT3+00000000     1 BYTE(S)                            13440000
TALKVERB EQU   OLTEPSW3+00000000   1 BIT(S)                             13450000
BYPALDEV EQU   OLTEPSW3+00000000   1 BIT(S)                             13460000
A00014   EQU   OLTEPSW3+00000000   2 BIT(S)                             13470000
SUSDEL   EQU   OLTEPSW3+00000000   1 BIT(S)                             13480000
A00015   EQU   OLTEPSW3+00000000   1 BIT(S)                             13490000
CDSEXIST EQU   OLTEPSW3+00000000   1 BIT(S)                             13500000
OLTEPSW5 EQU   CESWT5+00000000     1 BYTE(S)                            13510000
A00016   EQU   OLTEPSW5+00000000   3 BIT(S)                             13520000
DPRINTFL EQU   OLTEPSW5+00000000   2 BIT(S)                             13530000
A00017   EQU   OLTEPSW5+00000000   2 BIT(S)                             13540000
PRNTOPTN EQU   OLTEPSW5+00000000   1 BIT(S)                             13550000
OLTEPSW6 EQU   CESWT6+00000000     1 BYTE(S)                            13560000
UTSCAL   EQU   OLTEPSW6+00000000   1 BIT(S)                             13570000
ATM      EQU   OLTEPSW6+00000000   1 BIT(S)                             13580000
OLTEPSW7 EQU   CESWT7+00000000     1 BYTE(S)                            13590000
A00018   EQU   OLTEPSW7+00000000   1 BIT(S)                             13600000
RETTO31  EQU   OLTEPSW7+00000000   1 BIT(S)                             13610000
REMOTE   EQU   OLTEPSW7+00000000   1 BIT(S)                             13620000
A00019   EQU   OLTEPSW7+00000000   3 BIT(S)                             13630000
VIRTUAL  EQU   OLTEPSW7+00000000   1 BIT(S)                             13640000
GOTINPUT EQU   OLTEPSW7+00000000   1 BIT(S)                             13650000
OLTEPSW8 EQU   CESWT8+00000000     1 BYTE(S)                            13660000
A00020   EQU   OLTEPSW8+00000000   5 BIT(S)                             13670000
SUTMSG   EQU   OLTEPSW8+00000000   1 BIT(S)                             13680000
A00021   EQU   OLTEPSW8+00000000   1 BIT(S)                             13690000
TALKHERE EQU   OLTEPSW8+00000000   1 BIT(S)                             13700000
OLTEPSW9 EQU   CESWT9+00000000     1 BYTE(S)                            13710000
CDSEQU   EQU   OLTEPSW9+00000000   1 BIT(S)                             13720000
RESENTB  EQU   OLTEPSW9+00000000   1 BIT(S)                             13730000
A00022   EQU   OLTEPSW9+00000000   1 BIT(S)                             13740000
MODEV    EQU   OLTEPSW9+00000000   1 BIT(S)                             13750000
MODER    EQU   OLTEPSW9+00000000   1 BIT(S)                             13760000
MIXDEV   EQU   OLTEPSW9+00000000   1 BIT(S)                             13770000
A00023   EQU   OLTEPSW9+00000000   2 BIT(S)                             13780000
OLTPSW10 EQU   CESWT10+00000000    1 BYTE(S)                            13790000
MPSYS    EQU   OLTPSW10+00000000   1 BIT(S)                             13800000
AFFNSET  EQU   OLTPSW10+00000000   1 BIT(S)                             13810000
VERBCALL EQU   OLTPSW10+00000000   1 BIT(S)                             13820000
A00024   EQU   OLTPSW10+00000000   5 BIT(S)                             13830000
A00025   EQU   CESWTR+00000000     1 BYTE(S)                            13840000
RETAINAC EQU   A00025+00000000     1 BIT(S)                             13850000
REMERR   EQU   A00025+00000000     1 BIT(S)                             13860000
REMNOMSG EQU   A00025+00000000     1 BIT(S)                             13870000
CENOMSG  EQU   A00025+00000000     1 BIT(S)                             13880000
PRTNOMSG EQU   A00025+00000000     1 BIT(S)                             13890000
IMRESP   EQU   A00025+00000000     1 BIT(S)                             13900000
EXECOUT  EQU   A00025+00000000     1 BIT(S)                             13910000
CECOMOUT EQU   A00025+00000000     1 BIT(S)                             13920000
A00026   EQU   CESWTR1+00000000    1 BYTE(S)                            13930000
ILLRESP  EQU   A00026+00000000     1 BIT(S)                             13940000
EXECANS  EQU   A00026+00000000     1 BIT(S)                             13950000
CECOMANS EQU   A00026+00000000     1 BIT(S)                             13960000
INFOMSG  EQU   A00026+00000000     1 BIT(S)                             13970000
RETRIEVE EQU   A00026+00000000     1 BIT(S)                             13980000
REMANS   EQU   A00026+00000000     1 BIT(S)                             13990000
EDTOMSG  EQU   A00026+00000000     1 BIT(S)                             14000000
A00027   EQU   A00026+00000000     1 BIT(S)                             14010000
A00028   EQU   CESWTR2+00000000    1 BYTE(S)                            14020000
A00029   EQU   A00028+00000000     2 BIT(S)                             14030000
ONCOMM   EQU   A00028+00000000     1 BIT(S)                             14040000
A00030   EQU   A00028+00000000     5 BIT(S)                             14050000
SCT      EQU   CHASCT+00000000     70 BYTE(S) ON WORD                   14060000
A00031   EQU   SCT+00000000        3 BYTE(S)                            14070000
FLAGS    EQU   SCT+00000003        1 BYTE(S)                            14080000
SETERROR EQU   SCT+00000003        1 BIT(S)                             14090000
ASTERB   EQU   SCT+00000003        1 BIT(S)                             14100000
UTCATAS  EQU   SCT+00000003        1 BIT(S)                             14110000
RTNFLDXX EQU   SCT+00000004        2 BYTE(S)                            14120000
A00032   EQU   SCT+00000006        27 BYTE(S)                           14130000
EXPGMFLG EQU   SCT+00000033        1 BYTE(S)                            14140000
A00033   EQU   SCT+00000033        2 BIT(S)                             14150000
RTNSLCTN EQU   SCT+00000033        1 BIT(S)                             14160000
A00034   EQU   SCT+00000034        2 BYTE(S)                            14170000
OLTFLGS  EQU   SCT+00000036        1 BYTE(S)                            14180000
A00035   EQU   SCT+00000036        7 BIT(S)                             14190000
TALKOLT  EQU   SCT+00000036        1 BIT(S)                             14200000
OLTFLG2  EQU   SCT+00000037        1 BYTE(S)                            14210000
TALKCE   EQU   SCT+00000037        1 BIT(S)                             14220000
A00036   EQU   SCT+00000038        2 BYTE(S)                            14230000
EXPANDED EQU   SCT+00000040        30 BYTE(S)                           14240000
ROPTMIN2 EQU   ROPT-00000002       2 BYTE(S)                            14250000
REIDEBAD EQU   ROPT+00000008       FULLWORD POINTER                     14260000
@DATEND  EQU   *                                                        14270000
@9FE     EQU   CECINP17                                                 14280000
@9EA     EQU   CECINP07                                                 14290000
@9E9     EQU   CECINP4D                                                 14300000
@9DD     EQU   CECINP16                                                 14310000
@9CC     EQU   CECINP09                                                 14320000
@9C3     EQU   CECINP14                                                 14330000
@9BC     EQU   CECINP23                                                 14340000
         END    ,(C'PL/S',1400,77060)                                   14350000
./  ADD  SSI=53380048,NAME=IFDOLT31
         TITLE 'IFDOLT31 DEVICE DECODE'                                 00010000
         TITLE 'IFDOLT31 DEVICE DECODE'                                 00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT31 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT31 05 DEC 75'                             0002  00070000
         STM   @E,@C,12(@D)                                       0002  00080000
         BALR  @B,0                                               0002  00090000
@PSTART  DS    0H                                                 0002  00100000
         USING @PSTART+00000,@B                                   0002  00110000
         ST    @D,@SAV001+4                                       0002  00120000
         LA    @F,@SAV001                                         0002  00130000
         ST    @F,8(0,@D)                                         0002  00140000
         LR    @D,@F                                              0002  00150000
*         GEN(USING CHASCT,2);                                          00160000
         USING CHASCT,2                                                 00170000
         DS    0H                                                       00180000
*         GENERATE DATA;                                                00190000
*         /************************************************************ 00200000
*         /*                                                    X03906* 00210000
*         /*                        REGISTERS                         * 00220000
*         /*                                                    X03906* 00230000
*         /************************************************************ 00240000
*         DCL R0 REG(0) PTR(31);         /* REGISTER 0.               * 00250000
*         DCL R1 REG(1) PTR(24);         /* REGISTER 1.               * 00260000
*         DCL R2 REG(2) PTR(31);         /* REGISTER 2.               * 00270000
*         DCL R3 REG(3) PTR(31);         /* REGISTER 3.               * 00280000
*         DCL I REG(3) PTR(31);          /* REGISTER 3.               * 00290000
*         DCL R4 REG(4) PTR(31);         /* REGISTER 4.               * 00300000
*         DCL R5 REG(5) PTR(31);         /* REGISTER 5.               * 00310000
*         DCL R7 REG(7) PTR(31);         /*                     X03008* 00320000
*         DCL GOODENT REG(6) PTR(24);    /* GOOD DEV ADDRS ENTERED    * 00330000
*         DCL UCBLOOK REG(7) PTR(24);    /* DEVS NEEDING UCB LOOKUPS  * 00340000
*         DCL R8 REG(8) PTR(31);         /* REGISTER 8.         X03008* 00350000
*         DCL DEVTABPT REG(8) PTR(31);   /* REGISTER 8.               * 00360000
*         DCL R9 REG(9) PTR(24);         /* REGISTER 9.               * 00370000
*         DCL Z REG(10) PTR(24);         /*                     X03008* 00380000
*         DCL R13 REG(13) PTR(31);       /* REGISTER 13.              * 00390000
*         DCL R14 REG(14) PTR(31);       /* REGISTER 14.              * 00400000
*         DCL RC REG(15) PTR(31);        /* REGISTER 15.              * 00410000
*         DCL R15 REG(15) PTR(31);       /* REGISTER 15.              * 00420000
*         /************************************************************ 00430000
*         /*                                                    X03906* 00440000
*         /*                       SAVE AREAS                         * 00450000
*         /*                                                    X03906* 00460000
*         /************************************************************ 00470000
*         DCL 1 MYSAVE BASED(R13),       /*---MY SAVE AREA FORMAT-----* 00480000
*               3 * CHAR(4),             /* NOT LOOKED AT.            * 00490000
*               3 YOURR13 PTR(31);       /* CALLER SAVE AREA ADDRESS. * 00500000
*         DCL 1 YOURSAVE BASED(YOURR13), /* CALLERS SAVE AREA FORMAT. * 00510000
*               3 * CHAR(12),            /* NOT NEEDED.               * 00520000
*               3 YOURR14 PTR(31);       /* CALLERS RETURN POINT.     * 00530000
*         /************************************************************ 00540000
*         /*                                                    X03906* 00550000
*         /*                  SECTION CONTROL TABLE                   * 00560000
*         /*                                                    X03906* 00570000
*         /************************************************************ 00580000
*         DCL CHASCT CHAR(88) GENERATED;                                00590000
*         DCL 1 SCT BASED(ADDR(CHASCT)), /*--------SCT FORMAT---------* 00600000
*               3 HEADER CHAR(8),        /* HEADER.                   * 00610000
*               3 PRIDVSCT CHAR(12);     /* PRIMARY DEVICE ENTRY.     * 00620000
*         /************************************************************ 00630000
*         /*                                                    X03906* 00640000
*         /*                       INPUT BUFFER                       * 00650000
*         /*                                                    X03906* 00660000
*         /************************************************************ 00670000
*         DCL INBUFR CHAR(120) GENERATED;                               00680000
*         DCL INPUTBUF CHAR(10) BASED(R5); /* INPUT BUFFER      21050 * 00690000
*         DCL INBUFPTR PTR(31) GENERATED;/* POINTER TO SLASH DELIMITER* 00700000
*         /************************************************************ 00710000
*         /*                                                    X03906* 00720000
*         /*                        SWITCHES                          * 00730000
*         /*                                                    X03906* 00740000
*         /************************************************************ 00750000
*         DCL CESWT CHAR(1) GENERATED;                                  00760000
*         DCL 1 OLTEPSW BASED(ADDR(CESWT)),/*-----CESWT FORMAT--------* 00770000
*               3 * BIT(4),              /* NOT LOOKED AT.            * 00780000
*               3 LEGALDEV BIT(1),       /* LEGAL DEVICE FLAG.        * 00790000
*               3 REINT BIT(1);          /* RE-INITIALIZE FLAG.       * 00800000
*         DCL CESWT2 CHAR(1) GENERATED;                                 00810000
*         DCL 1 OLTEPSW2 BASED(ADDR(CESWT2)),/*---CESWT2 FORMAT-------* 00820000
*               3 * BIT(3),              /* NOT LOOKED AT.            * 00830000
*               3 CHANTEST BIT(1),       /* CHANNEL TEST FLAG.        * 00840000
*               3 * BIT(1),              /* NOT LOOKED AT.            * 00850000
*               3 NDR BIT(1);            /* NO DEVICE REQUIRED FLAG.  * 00860000
*         DCL CESWT7 CHAR(1) GENERATED;  /*---CESWT7 FORMAT------21050* 00870000
*         DCL  1 OLTEPSW7 BASED(ADDR(CESWT7)), /* C E SWT FORMAT.21050* 00880000
*                3 INCLST BIT(1), /* INCLUSIVE SERIES OF DEVICESX03906* 00890000
*                3 RETTO31 BIT(1), /* NEED TO RET TO IFDOLT31.  X03906* 00900000
*                3 REMOTE BIT(1),  /* REMOTE TERMINAL IN SYSTEM.X03906* 00910000
*                3 LOADCDS BIT(1); /* LOAD CDS FROM REM FILE    X03906* 00920000
*         DCL CESWT9 CHAR(1) GENERATED;  /* CESWT9 IN COMM AREA X03008* 00930000
*         DCL 1 OLTEPSW9 BASED(ADDR(CESWT9)), /* CESWT9 FORMAT  X03008* 00940000
*               3 * BIT(5),        /* NOT LOOKED AT             X03008* 00950000
*               3 MIXDEV BIT(1),   /* CHECK DEV ENTRY  SYM      X03008* 00960000
*               3 * BIT(2);        /* NOT LOOKED AT             X03008* 00970000
*         DCL CESWTR CHAR(1) GENERATED;  /*                      20203* 00980000
*         DCL 1 * CHAR(1) BASED(ADDR(CESWTR)),  /*               20203* 00990000
*               3 RETAINAC BIT(1),       /* REI ACTIVE FLAG      S20203 01000000
*               3 * BIT(1),              /*                      S20203 01010000
*               3 REMNOMSG BIT(1),       /* REMOTE NO MSG        S20203 01020000
*               3 * BIT(5);              /*                      S20203 01030000
*         DCL CESWTR1 CHAR(1) GENERATED; /*                      21050* 01040000
*         DCL 1 * CHAR(1) BASED(ADDR(CESWTR1)),  /*              21050* 01050000
*               3 * BIT(5),              /*                      21050* 01060000
*               3 REMANS BIT(1),         /* REMOTE ANSWERS       21050* 01070000
*               3 * BIT(2);              /*                      21050* 01080000
*         DCL CESWTR2 CHAR(1) GENERATED; /* REI SWITCHES         20203* 01090000
*         DCL 1 * CHAR(1) BASED(ADDR(CESWTR2)), /*               20203* 01100000
*               3 * BIT(2),              /*                      20203* 01110000
*               3 ONCOMM BIT(1),         /* ONSITE DYN COMM      S20203 01120000
*           3 * BIT(4),                                                 01130000
*           3 DPMSGREI BIT(1);          /* DATA PROT MSG        YM2273* 01140000
*         /************************************************************ 01150000
*         /*                                                    X03906* 01160000
*         /*                   SVC PARAMETER LIST                     * 01170000
*         /*                                                    X03906* 01180000
*         /************************************************************ 01190000
*         DCL ROPT CHAR(8) GENERATED;                                   01200000
*         DCL 1 SVCPLIST BASED(ADDR(ROPT)-4),/*--FORMAT-SVC PLIST-----* 01210000
*               3 * CHAR(2),             /* NOT USED.                 * 01220000
*               3 MODNUM CHAR(2),        /* NAME OF CALLING MODULE.   * 01230000
*               3 ADDRDEV PTR(31),       /* BEGIN ADDR FOR UCBLOOK UP.* 01240000
*               3 ENTRIES FIXED(31),     /* NUMBER OF LOOK UPS  X03008* 01250000
*               3 SVCSAPTR PTR(31);      /* ADDR OF S.A. FOR 59 X03008* 01260000
*         /************************************************************ 01270000
*         /*                                                    X03906* 01280000
*         /*                FORMAT OF DEVTABLE ENTRY                  * 01290000
*         /*                                                    X03906* 01300000
*         /************************************************************ 01310000
*         DCL DEVTBPTR PTR GEND;   /* POINTER TO DEVICE TABLES   21050* 01320000
*         DCL 1 DEVTABXX CHAR(56)  BASED(DEVTABPT), /*           21050* 01330000
*               3 DEVADDR CHAR(8),       /* EBCDIC DEVICE ADDR   21050* 01340000
*               3 UCBADDR PTR(31),       /* UCB ADDRESS.              * 01350000
*               3 FLG1 CHAR(1),          /* FIRST FLAG FIELD.         * 01360000
*                 5 ONOFF BIT(1),        /* DEVICE STATUS FLAG.       * 01370000
*                 5 PRIMARY BIT(1),      /* PRIMARY DEVICE FLAG.      * 01380000
*               3 * CHAR(1),             /* SECOND FLAG FIELD.  YM7253* 01390000
*               3 FLG3 CHAR(1),          /* 3RD FLAG FEILD      YM7253* 01400000
*                 5 * BIT(4),            /* NOT LOOKED AT       YM7253* 01410000
*                 5 NOGODEV BIT(1),      /* DEV INUSE OR NOTAVAIYM7253* 01420000
*                 5 SYSALLOC BIT(1),       /* DEV ALLOC       @ZA06048* 01430000
*                 5 * BIT(2),              /* NOT LOOKED AT   @ZA06048* 01440000
*               3 FLG4 CHAR(1),          /* 4TH FLAG FEILD      Y02008* 01450000
*                 5 *    BIT(4),         /* NOT LOOKED AT       Y02008* 01460000
*                 5 DEVVAR BIT(1),       /* OLTEP VARIED DEV OFFLINE  * 01470000
*                 5 DEVENQNG BIT(1),     /* OLTEP ENQ OF DEV FAILED   * 01480000
*                 5 *    BIT(2),         /* NOT LOOKED AT       Y02008* 01490000
*               3 * CHAR(16),            /* EXTENTS OR TAPE LABEL     * 01500000
*                                        /* SAVE AREA.                * 01510000
*               3 HEXADDR CHAR(4),       /* DEV ADDR IN HEX      21050* 01520000
*               3 CDSDVDSC CHAR(4),      /* CDS DEVICE DSCRPTRS  21050* 01530000
*                 5 MODEL CHAR(1), /* MODEL OF DEVICE.           21050* 01540000
*                 5 FEATURES CHAR(1), /* DEVICE FEATURES.        21050* 01550000
*                 5 CLASS CHAR(1), /* DEVICE CLASS.              21050* 01560000
*                 5 TYPE CHAR(1),  /* DEVICE TYPE.               21050* 01570000
*               3 BYTECNT CHAR(1), /* CDS BYTE COUNT.            21050* 01580000
*               3 CDSFLAGS CHAR(1), /* CDS FLAG BYTE             21050* 01590000
*                 5 * BIT(4),      /* NOT NEEDED HERE.           21050* 01600000
*                 5 SYMDEVIC BIT(1), /* SET IF SYMBOLIC DEVICE.  21050* 01610000
*                 5 * BIT(2),      /*                            21050* 01620000
*                 5 REMLINE BIT(1),/* SET IF REMOTE LINE NEEDS TO     * 01630000
*                             /*   BE ENABLED FOR REMOTE TESTING 21050* 01640000
*               3 EXTSGMSK CHAR(2),/* EXGERNAL SIGNAL MASK       21050* 01650000
*               3 SYMNAME CHAR(8); /* SYMBOLICALLY NAMED ENTRY.  21050* 01660000
*         /************************************************************ 01670000
*         /*                                                    X03906* 01680000
*         /*                        MESSAGES                          * 01690000
*         /*                                                    X03906* 01700000
*         /************************************************************ 01710000
*         DCL IFDMSG31 LABEL NONLOCAL EXTERNAL;                         01720000
*         DCL 1 MSGPTR BASED(R4),        /*-----MESSAGE POINTERS------* 01730000
*               3 MSGPTR08 PTR(31),      /* POINTER TO MESSAGE IFD108I* 01740000
*               3 MSGPTR11 PTR(31),      /* POINTER TO MESSAGE IFD111I* 01750000
*               3 MSGPTR79 PTR(31),      /* POINTER TO MESSAGE IFD127I* 01760000
*               3 MSGPTR61 PTR(31),      /* POINTER TO MESSAGE IFD161I* 01770000
*               3 MSGPTR27 PTR(31),      /* PTR TO MSG IFD127I  X03008* 01780000
*               3 MSGPTR65 PTR(31),      /* PTR TO MSG IFD165I  X03008* 01790000
*               3 MSGPTR51 PTR(31),      /* PTR TO MSG IFD251I  X03008* 01800000
*               3 MSGPTR52 PTR(31),      /* PTR TO MSG IFD252I  X03008* 01810000
*               3 MSGPTR14 PTR(31),      /* PTR TO MSG IFD140I  Y02008* 01820000
*               3 MSGPTR19 PTR(31),      /* PTR TO MSG IFD109I  Y02008* 01830000
*               3 MSGPTR67 PTR(31);      /* PTR TO MSG IFD467I  YM7253* 01840000
*         DCL 1 MSG108 BASED(R1),        /* MESSAGE IFD108I FORMAT.   * 01850000
*               3 * CHAR(12),            /* NOT LOOKED AT.            * 01860000
*               3 MSG108I CHAR(28);      /* MESSAGE TEXT.             * 01870000
*         DCL 1 MSG140 BASED(R1),        /* MESSAGE IFD140I FORMAT.   * 01880000
*               3 * CHAR(12),            /* NOT LOOKED AT.            * 01890000
*               3 MSG140DV CHAR(8);      /* MESSAGE TEXT.             * 01900000
*         DCL 1 MSG467 BASED(R1),        /* MESSAGE IFD467I FORMYM7253* 01910000
*               3 * CHAR(12),            /* NOT LOOKED AT.      YM7253* 01920000
*               3 MSG467DV CHAR(8);      /* MESSAGE TEXT.       YM7253* 01930000
*         DCL 1 MSG190 BASED(R1),        /* MESSAGE IFD109I FORMAT.   * 01940000
*               3 * CHAR(12),            /* NOT LOOKED AT.            * 01950000
*               3 MSG109DV CHAR(8),        /* FORMAT FOR 109  @ZA06048* 01960000
*               3 * CHAR(1),               /*                 @ZA06048* 01970000
*               3 ONOROFF CHAR(8),         /* ON OR OFF LINE  @ZA06048* 01980000
*               3 ALORNOT CHAR(11);        /* ALLOCATED?      @ZA06048* 01990000
*         DCL 1 MSG179 BASED(R1),        /* MESSAGE IFD127I FORMAT.   * 02000000
*               3 * CHAR(12),            /* NOT LOOKED AT.              02010000
*               3 MSG179I CHAR(27);      /* MESSAGE TEXT.        21050* 02020000
*         DCL 1 MSG127 BASED(R1),                                       02030000
*           3 * CHAR(12),                                               02040000
*           3 MSG127I CHAR(19);                                         02050000
*         /************************************************************ 02060000
*         /*                                                    X03906* 02070000
*         /*            OTHER COMMON AREA CONSTANTS USED              * 02080000
*         /*                                                    X03906* 02090000
*         /************************************************************ 02100000
*         DCL DIEPTR PTR(31) GENERATED;  /* POINTER TO DIE IN CAY02008* 02110000
*         DCL UNICTR CHAR(1) GENERATED;  /* UNIT COUNTER.             * 02120000
*         DCL REDEFINE PTR(31) GENERATED;/* RETURN POINT TO REDEFINE  * 02130000
*                                        /* TEST DEFINITION.          * 02140000
*         DCL UNITUSE CHAR(1) GENERATED; /* UNIT USED COUNTER.        * 02150000
*         DCL NEXTREC PTR(31) GENERATED; /* RETURN POINT TO READ NEXT * 02160000
*                                        /* RECORD.                   * 02170000
*         DCL TAB28 PTR(31) GENERATED;   /* NEW MACRO ENTRY POINT.    * 02180000
*         DCL TABLNGTH PTR(15) GENERATED;/* INDEX VALUE FOR TAB X03008* 02190000
*         /************************************************************ 02200000
*         /*                                                    X03906* 02210000
*         /*                   INTERNAL CONSTANTS                     * 02220000
*         /*                                                    X03906* 02230000
*         /************************************************************ 02240000
*         DCL 1 * BASED(R8),             /* DEVICE TABLE        X03008* 02250000
*                3 DVT CHAR(16),         /* TABLE AREA          X03008* 02260000
*                3 DVTN CHAR(16);        /* NEXT TABLE AREA     X03008* 02270000
*         DCL SUM PTR(24);               /*                     X03008* 02280000
*         DCL SAVLOOKT PTR(24);          /*                     X03008* 02290000
*         DCL 1 PARMLIST CHAR(16) BDY(WORD),                            02300000
*           3 MODNAME CHAR(8),                                          02310000
*             5 TCDSO CHAR(1) INIT('G'),                                02320000
*             5 CDSDEV CHAR(7),                                         02330000
*           3 TARGETAD PTR,                                             02340000
*           3 PARMFLGS CHAR(1),                                         02350000
*           3 * CHAR(1),                                                02360000
*           3 CDSLNGTH FIXED(15);                                       02370000
*         DCL COUNT REG(7) PTR(31);                                     02380000
*         DCL CNVRT1 CHAR(14) GENERATED; /* FIRST CONVERT PARMLIST.   * 02390000
*         DCL CNVRT2 CHAR(14) GENERATED; /* SECOND CONVERT PARMLIST.  * 02400000
*         DCL CNVRT3 CHAR(14) GENERATED; /* THIRD CONVERT PARMLIST.   * 02410000
*         DCL AVAILBLE PTR(31);          /* POINTER TO NEXT AVAILABLE * 02420000
*                                        /* ENTRY IN DEVTABLE.        * 02430000
*         DCL DEVTABLE CHAR(56) BASED(AVAILBLE); /*              21050* 02440000
*         DCL 1 DEVAREA CHAR(16),           /* DEVICE AREA      X03906* 02450000
*               3 FSTDEV FIXED(31),      /* FIRST DEVICE IN A SERIES. * 02460000
*                 5 FSTDEV2 CHAR(4), /* CONVERT AREA FOR EBCDIC  21050* 02470000
*                   7 HEX CHAR(4),       /* DEVICE ADDRESS.      21050* 02480000
*               3 FINDEV FIXED(31),      /* FINAL DEVICE IN A SERIES. * 02490000
*                 5 FINDEV2 CHAR(4); /* FINAL DEV ADDR IN HEX.   21050* 02500000
*         DCL LOOPPTR PTR(31);           /* INDEXED TABLE PTR   X03008* 02510000
*         DCL 1 * CHAR(56) BASED(LOOPPTR), /* DEVICE TBL OVERLAYX03008* 02520000
*               3 * CHAR(32),            /* NOT LOOKED AT       X03008* 02530000
*               3 HXADDR CHAR(4),        /* DEVICE ADDRESS      X03008* 02540000
*               3 * CHAR(8),             /* NOT LOOKED AT       X03008* 02550000
*               3 SYMBNM CHAR(8);        /* DEVICE SYMB NAME    X03008* 02560000
*         DCL  NEWADDR CHAR(4);          /* HOLD AREA FOR SCAN  X03008* 02570000
*         DCL LIMIT FIXED(15);           /* LIMIT OF UCB LOOK UPS     * 02580000
*                                        /* THAT CAN BE PERFORMED.    * 02590000
*         DCL 1 X FIXED(15),             /* COUNTER & WORK AREA.      * 02600000
*               3 UNITCTR FIXED(15),                                    02610000
*                 5 * CHAR(1),                                          02620000
*                 5 UNITCTR1 CHAR(1);                                   02630000
*         DCL ERRCODE CHAR(2);           /* ERROR CODE.               * 02640000
*         DCL NUMBERS CHAR(16)           /* VALID NUMBERS.            * 02650000
*              INITIAL('0123456789ABCDEF');                             02660000
*         DCL NUMBER CHAR(1) BASED(R9);                                 02670000
*         DCL 1 DEVAD CHAR(8) INIT('0000'),/* CONVERT FROM AREA. 21050* 02680000
*               3 DEVAD1 CHAR(8);                              /*21050* 02690000
*         DCL 1 SWITCHES CHAR(1),        /* FLAGS.                    * 02700000
*               3 FRSTPASS BIT(1);       /* FIRST PASS FLAG.          * 02710000
*                                        /* FLAG.                     * 02720000
*         DCL UCBDVDSC CHAR(4) BASED(UCBADDR+16); /* UCB DEV DSSC21050* 02730000
*      DCL 1  CDSENTRY CHAR(20) BASED(R1),  /* CDS ENTRY LOADED  21050* 02740000
*               3 * CHAR(4),             /* DEVICE ADDRESS.           * 02750000
*               3 DSCRPTRS CHAR(4);/* CDS DEV DSCRPTRS           21050* 02760000
*         DCL CHARCNTR FIXED(15);  /* COUNTS CHARS IN ADDRESS    21050* 02770000
*         DCL EIGHT FIXED(15) INIT(8);  /* CONSTANT USED IN BUFR 21050* 02780000
*         DCL BLANKFLD CHAR(8) INIT((8)' ');                            02790000
*         DCL SYMNAM   CHAR(8);    /* HOLDS SYMBOLIC NAME  ENTRY 21050* 02800000
*         DCL IGNORE FIXED(15);    /* ADDRESS FIELD NOT APPLICABLE21050 02810000
*         DCL SAVENT  FIXED(31) GEND;    /* SAV DEV IN INCLSV SER.21050 02820000
*         DCL OFLGS BIT(8) BASED(R9+48); /* CHECK FOR OPENED CDS 21051* 02830000
*                                                                       02840000
*         /*  BYTE IN DCB IS ZERO FOR DUMMY DD CARDS             01906* 02850000
*         DCL DDDUMMY CHAR(1) BASED(R9+17);                             02860000
*                                                                       02870000
*         DCL SYMPTR PTR GEND;                                          02880000
*         RESTRICT(1,2,3,4,5,6,7,8,9,10);                     /*X03008* 02890000
*         /************************************************************ 02900000
*         /*                                                          * 02910000
*         /*                   PERFORM INITIALIZATION                 * 02920000
*         /*                                                          * 02930000
*         /************************************************************ 02940000
*         R4=ADDR(IFDMSG31);        /* GET POINTER TO MESSAGE MODULE. * 02950000
         L     @C,@V1              ADDRESS OF IFDMSG31            0097  02960000
         LR    @4,@C                                              0097  02970000
*         R5=INBUFPTR;              /* GET POINTER TO INPUT BUFFER.   * 02980000
         L     @5,INBUFPTR                                        0098  02990000
*         /************************************************************ 03000000
*         /*                                                    X03906* 03010000
*         /*   IF RETAIN/370 INTERFACE IS ACTIVE, CHECK TO SEE WHO    * 03020000
*         /*   ANSWERED. ISSUE MSG IFD165I IF REMOTE SPECIALIST DID.  * 03030000
*         /*                                                    X03906* 03040000
*         /************************************************************ 03050000
*         IF RETAINAC='0'B THEN    /* IS RETAIN INACTIVE.        21050* 03060000
         TM    A00007,B'10000000'                                 0099  03070000
*           GO TO INITIAL;         /* YES, CONT INITIALIZATION.  21050* 03080000
         BC    08,INITIAL                                         0100  03090000
*         IF INPUTBUF(1:2)='.N' THEN /* REMOTE CAN ANS NDR OR '/'21050* 03100000
         CLC   0(2,@5),@C2                                        0101  03110000
*           GO TO INITIAL;         /* CONTINUE ONITIALIZATION.   21050* 03120000
         BC    08,INITIAL                                         0102  03130000
*         IF INPUTBUF(1)='/' THEN  /*       SLASH ENTERED        21050* 03140000
         CLI   0(@5),C'/'                                         0103  03150000
*           GO TO INITIAL;         /* CONTINUE ONITIALIZATION.   21050* 03160000
         BC    08,INITIAL                                         0104  03170000
*         IF ONCOMM='1'B THEN      /* ONSITE DYN COMM           X03906* 03180000
         TM    A00013,B'00100000'                                 0105  03190000
*           GO TO INITIAL;         /* BYPASS ERROR MSG           21050* 03200000
         BC    01,INITIAL                                         0106  03210000
*         R1=MSGPTR65;             /* MSG PTR FOR IFD165I       X03906* 03220000
         L     @1,20(0,@4)                                        0107  03230000
*         GEN(PWTO REG=(1));       /* PRINT ERROR MESSAGE       X03906* 03240000
         PWTO REG=(1)                                                   03250000
         DS    0H                                                       03260000
*         GO TO CECDEV47;          /* RETURN TO REDEFINE        X03906* 03270000
         BC    15,CECDEV47                                        0109  03280000
* INITIAL:                                                    /*X03906* 03290000
*         IF RETAINAC='1'B THEN    /* IS REI ACTIVE?            X03906* 03300000
INITIAL  TM    A00007,B'10000000'                                 0110  03310000
         BC    12,@9FF                                            0110  03320000
*           DPMSGREI='1'B;              /* NO REPLY FROM REI    XM9156* 03330000
         OI    A00013,B'00000001'                                 0111  03340000
*         DEVAREA=DEVAREA&&DEVAREA; /* CLEAR FSTDEV AND FINDEV.       * 03350000
@9FF     XC    DEVAREA(16),DEVAREA                                0112  03360000
*         UCBLOOK=0;                /* INITIALIZE UCB LOOK UP COUNTER * 03370000
         SR    @7,@7                                              0113  03380000
*                                   /* TO ZERO.                       * 03390000
*         CHARCNTR=0;              /* INITIALIZE CHAR COUNTER    21050* 03400000
         SR    @F,@F                                              0114  03410000
         STH   @F,CHARCNTR                                        0114  03420000
*         IF RETTO31='1'B THEN DO; /* IS THIS RETURN FROM SECOND 21050* 03430000
         TM    OLTEPSW7,B'01000000'                               0115  03440000
         BC    12,@9FE                                            0115  03450000
*           GOODENT=UNICTR;        /* HALF OF DEVICE DECODE MOD. 21050* 03460000
         SR    @6,@6                                              0117  03470000
         IC    @6,UNICTR                                          0117  03480000
*           DEVTABPT=DEVTBPTR+(UNICTR*TABLNGTH);                        03490000
         LH    @F,TABLNGTH                                        0118  03500000
         SR    @0,@0                                              0118  03510000
         IC    @0,UNICTR                                          0118  03520000
         MR    @E,@0                                              0118  03530000
         A     @F,DEVTBPTR                                        0118  03540000
         LR    @8,@F                                              0118  03550000
*                                        /* INIT PTRS AND CNTRS X03008* 03560000
*           FRSTPASS='1'B;         /* INIT FIRST PASS THRU COUNTER21050 03570000
         OI    SWITCHES,B'10000000'                               0119  03580000
*           AVAILBLE=DEVTABPT;     /* LOCATE NEXT AVAIL TABLE.   21050* 03590000
         ST    @8,AVAILBLE                                        0120  03600000
*           LIMIT=16-UNICTR;       /* REINIT AVAIL TABLE LIMIT.  21050* 03610000
         LA    @F,16                                              0121  03620000
         IC    @0,UNICTR                                          0121  03630000
         SR    @F,@0                                              0121  03640000
         STH   @F,LIMIT                                           0121  03650000
*         IF INCLST='1'B THEN DO;  /* IS INCLUSIVE SERIES OF     21050* 03660000
         TM    OLTEPSW7,B'10000000'                               0122  03670000
         BC    12,@9FD                                            0122  03680000
*           FSTDEV=SAVENT;         /* DEVICES ENTERED. YES% THEN 21050* 03690000
         MVC   DEVAREA(4),SAVENT                                  0124  03700000
*           GO TO CECDEV39;        /* REINIT LAST DEV USED, CONT. 21050 03710000
         BC    15,CECDEV39                                        0125  03720000
*           END;                   /* INCLUSIVE DEVICE SEARCH.   21050* 03730000
*         GO TO CECDEV19;          /* CHECK FOR DELIMETER.       21050* 03740000
*           END;                                                        03750000
*         GOODENT=0;                /* INITIALIZE VALID ENTRIES       * 03760000
@9FE     SR    @6,@6                                              0129  03770000
*                                   /* COUNTER TO ZERO.               * 03780000
*         DEVTABPT=DEVTBPTR;       /* INITIALIZE DEVICE TABLE PTR21050* 03790000
         L     @8,DEVTBPTR                                        0130  03800000
*         AVAILBLE=DEVTABPT;        /* GET POINTER TO NEXT AVAILABLE  * 03810000
         ST    @8,AVAILBLE                                        0131  03820000
*                                   /* ENTRY IN DEVTABLE.             * 03830000
*         INCLST='0'B;              /* SET INCLST FLAG OFF.           * 03840000
         NI    OLTEPSW7,B'01111111'                               0132  03850000
*         FRSTPASS='0'B;            /* INITIALIZE FIRST PASS FLAG.    * 03860000
         NI    SWITCHES,B'01111111'                               0133  03870000
*         NDR='0'B;                 /* SET NDR FLAG OFF.              * 03880000
         NI    OLTEPSW2,B'11111011'                               0134  03890000
*         LIMIT=16;                 /* INITIALIZE LIMIT TO 16.        * 03900000
         LA    @F,16                                              0135  03910000
         STH   @F,LIMIT                                           0135  03920000
*         REINT='1'B;               /* SET REINT FLAG ON.             * 03930000
         OI    OLTEPSW,B'00000100'                                0136  03940000
*                                                                       03950000
*         /************************************************************ 03960000
*         /*                                                          * 03970000
*         /*          IS ' .NDR ' ENTERED?                      X02906* 03980000
*         /*                                                          * 03990000
*         /************************************************************ 04000000
* CECDEV00:                                                             04010000
*         IF INPUTBUF(1)='.' THEN       /* IS .NDR SPECIFIED?   X02906* 04020000
CECDEV00 CLI   0(@5),C'.'                                         0137  04030000
         BC    07,@9FC                                            0137  04040000
*            DO;                   /* YES, THEN INCREMENT BUFFER 21050* 04050000
*            R5=R5+1;              /* TO NEXT CHAR.  ARE MORE    21050* 04060000
         AH    @5,@D1                                             0139  04070000
*            IF FRSTPASS='1'B THEN /* ENTRIES IN DEV FLD? CH,NDR 21050* 04080000
         TM    SWITCHES,B'10000000'                               0140  04090000
*              GO TO CECDEV41;     /*MUST BE ONLY ENTRIES.  MORE 21050* 04100000
         BC    01,CECDEV41                                        0141  04110000
*                                  /* ENTRIES INDICATE ERROR.    21050* 04120000
*            GO TO CECDEV27;       /* IF NOT, CHECK FOR CH,NDR   21050* 04130000
         BC    15,CECDEV27                                        0142  04140000
*            END;                  /*                            21050* 04150000
*                                                                       04160000
*         /************************************************************ 04170000
*         /*                                                          * 04180000
*         /*               SCAN ADDRESS CHARACTERS                    * 04190000
*         /*                                                          * 04200000
*         /************************************************************ 04210000
* CECDEV01:                        /*                            21050* 04220000
*         R3=ADDR(CECDEV05);       /* SAVE ADDR OF ALPHA CHECK   21050* 04230000
@9FC     EQU   *                                                  0144  04240000
CECDEV01 LA    @3,CECDEV05                                        0144  04250000
* CECDEV03:                        /*                            21050* 04260000
*         CHARCNTR=CHARCNTR+1;     /* NUM OF CHAR IN DEV ADDR.   21050* 04270000
CECDEV03 LA    @F,1                                               0145  04280000
         AH    @F,CHARCNTR                                        0145  04290000
         STH   @F,CHARCNTR                                        0145  04300000
*         R5=R5+1;                 /* MOVE TO NEXT ADDR CHAR.    21050* 04310000
         AH    @5,@D1                                             0146  04320000
*         IF CHARCNTR>8 THEN       /* ERROR IN DEV ENTRY IF MORE 21050* 04330000
         LA    @F,8                                               0147  04340000
         CH    @F,CHARCNTR                                        0147  04350000
*            GO TO CECDEV43;       /* THAN 8 CHARS ENTERED.      21050* 04360000
         BC    04,CECDEV43                                        0148  04370000
*         IF INPUTBUF(1)=','|      /* WHAT DELIMETER IS PRESENT? 21050* 04380000
*            INPUTBUF(1)='-'|      /*                            21050* 04390000
*            INPUTBUF(1)='/' THEN  /*                            21050* 04400000
         CLI   0(@5),C','                                         0149  04410000
         BC    08,@9FB                                            0149  04420000
         CLI   0(@5),C'-'                                         0149  04430000
         BC    08,@9FA                                            0149  04440000
         CLI   0(@5),C'/'                                         0149  04450000
         BC    07,@9F9                                            0149  04460000
*           DO;                    /* YES, RETURN TO FIRST CHAR  21050* 04470000
@9FA     EQU   *                                                  0150  04480000
*            R5=R5-CHARCNTR;       /* IN DEV ADDR AND GO TO POR- 21050* 04490000
@9FB     SH    @5,CHARCNTR                                        0151  04500000
*            GO TO R3;             /* TION OF CODE WHICH CHECKS  21050* 04510000
         BCR   15,@3                                              0152  04520000
*            END;                  /* FOR ALPHABETIC ENTRY.      21050* 04530000
*         GO TO CECDEV03;          /* NO DELIMITER. CHECK NEXT   21050* 04540000
*                                  /* DEVICE ADDRESS CHARACTER   21050* 04550000
* CECDEV05:                        /* HAS A SYMBOLIC NAME BEEN   21050* 04560000
*         IF INPUTBUF(1)<'A'|      /* ENTERED IN THE DEV FIELD?  21050* 04570000
*            INPUTBUF(1)>'Z'       /* CHECK FOR NON ALPHA CHARS. 21050* 04580000
*            THEN                  /* IF TRUE,                  X03008* 04590000
CECDEV05 CLI   0(@5),C'A'                                         0155  04600000
         BC    04,@9F8                                            0155  04610000
         CLI   0(@5),C'Z'                                         0155  04620000
         BC    12,@9F7                                            0155  04630000
*              DO;                                            /*X03008* 04640000
*                IF MIXDEV='1'B THEN /* CHECK IF SYMB NAME      X03008* 04650000
@9F8     TM    OLTEPSW9,B'00000100'                               0157  04660000
*                  GOTO CECDEV40;    /* MIXED ENTRY, YES ERROR  X03008* 04670000
         BC    01,CECDEV40                                        0158  04680000
*                GO TO CECDEV11;   /*CHECK FOR NUMERIC ADDRESS.  21050* 04690000
         BC    15,CECDEV11                                        0159  04700000
*              END;                                           /*X03008* 04710000
*        IF MIXDEV='0'B THEN       /* CHECK IF DEVICE ENTRY     X03008* 04720000
@9F7     TM    OLTEPSW9,B'00000100'                               0161  04730000
*          GOTO CECDEV40;          /* MIXED, YES ERROR          X03008* 04740000
         BC    08,CECDEV40                                        0162  04750000
*        REMOTE='1'B;              /* REMOTE TERMINAL IN SYSTEM. 21051* 04760000
         OI    OLTEPSW7,B'00100000'                               0163  04770000
*         SYMNAM=BLANKFLD;         /*SYMBOLIC ENTRY DETECTED.    21050* 04780000
         MVC   SYMNAM(8),BLANKFLD                                 0164  04790000
*         RELEASE(9);                                                   04800000
*         SYMNAM(1:CHARCNTR)=INPUTBUF(1:CHARCNTR); /* FILL SYMNAME21050 04810000
         LR    @E,@5                                              0166  04820000
         LH    @9,CHARCNTR                                        0166  04830000
         BCTR  @9,0                                               0166  04840000
         LA    @A,SYMNAM                                          0166  04850000
         EX    @9,@MVC                                            0166  04860000
*                                  /* SYMNAME IN BUFFER AND LOAD 21050* 04870000
*         MODNAME=SYMNAM;                                               04880000
         MVC   PARMLIST(8),SYMNAM                                 0167  04890000
*         TARGETAD=DEVTABPT+32;                                         04900000
         LA    @F,32                                              0168  04910000
         AR    @F,@8                                              0168  04920000
         ST    @F,PARMLIST+8                                      0168  04930000
*         PARMFLGS='68'X;               /* SYMBOLIC CDS,COMPUTE X02008* 04940000
         MVI   PARMLIST+12,X'68'                                  0169  04950000
*         CDSLNGTH='14'X;                                               04960000
         LA    @F,X'14'                                           0170  04970000
         STH   @F,PARMLIST+14                                     0170  04980000
*                                                                       04990000
*         GEN(IFDMOD CALL='12',LIST=PARMLIST);                          05000000
         IFDMOD CALL='12',LIST=PARMLIST                                 05010000
         DS    0H                                                       05020000
*                                                                       05030000
*         R1=RC;                                                        05040000
         LR    @1,@F                                              0172  05050000
*         IF R1>0 THEN                                                  05060000
         LTR   @1,@1                                              0173  05070000
         BC    12,@9F6                                            0173  05080000
*          DO;                                                          05090000
*           R5=R5+CHARCNTR;                                             05100000
         AH    @5,CHARCNTR                                        0175  05110000
*           RESTRICT(1);                                                05120000
*           R1=MSGPTR27;                                                05130000
         L     @1,16(0,@4)                                        0177  05140000
*           MSG127I(12:19)=SYMNAM;                                      05150000
         MVC   23(8,@1),SYMNAM                                    0178  05160000
*         GEN(PWTO REG=(1));                                            05170000
         PWTO REG=(1)                                                   05180000
         DS    0H                                                       05190000
*           RELEASE(1);                                                 05200000
*           GO TO CECDEV15;                                             05210000
         BC    15,CECDEV15                                        0181  05220000
*          END;                                                         05230000
*         FSTDEV2=HEXADDR;         /* PREPARE PARM LIST FOR CNVRT 21050 05240000
@9F6     MVC   DEVAREA(4),32(@8)                                  0183  05250000
*         R1=ADDR(CNVRT3);         /* MODULE. HEX TO EBCDIC .     21050 05260000
         LA    @1,CNVRT3                                          0184  05270000
*         R15=TAB28;               /* SET PTR TO TRANS MNGR       21050 05280000
         L     @F,TAB28                                           0185  05290000
*         GEN(BALR 14,15);                                              05300000
         BALR 14,15                                                     05310000
         DS    0H                                                       05320000
*         IF RC¬=0 THEN            /* IF RETURN CODE NOT 0 GO AND 21051 05330000
         LTR   @F,@F                                              0187  05340000
*         GO TO CECDEV43;          /* PRINT ERROR MESSAGE.       21051* 05350000
         BC    07,CECDEV43                                        0188  05360000
*         SUM=GOODENT+UCBLOOK;     /* ADD TOLAL NO. DEVTAB ENTRYX03008* 05370000
         LR    @F,@7                                              0189  05380000
         AR    @F,@6                                              0189  05390000
         ST    @F,@TEMP4                                          0189  05400000
         MVC   SUM(3),@TEMP4+1                                    0189  05410000
*         IF SUM>'000000'X THEN    /* CHECK IF FIRST ENTRY      X03008* 05420000
         L     @F,@X11                                            0190  05430000
         MVC   @TEMP3+1(3),SUM                                    0190  05440000
         C     @F,@TEMP3                                          0190  05450000
*           GOTO CECDE39A;         /* NO, THEN CHECK FOR DUP    X03008* 05460000
         BC    04,CECDE39A                                        0191  05470000
* CECDEV06:                                                   /*X03008* 05480000
*         DEVADDR=DEVAD1;          /* PUT EBCDIC ADDR IN DEV TABLE21050 05490000
CECDEV06 MVC   0(8,@8),DEVAD                                      0192  05500000
*         FRSTPASS='1'B;           /* FLAG TO SHOW => 1 DEV ENTRD21050* 05510000
         OI    SWITCHES,B'10000000'                               0193  05520000
*         GO TO CECDEV13;          /* BOLIC NAME ENTRY.          21050* 05530000
         BC    15,CECDEV13                                        0194  05540000
* CECDEV11:                        /*                            21050* 05550000
*         IF CHARCNTR>4 THEN            /* OS ALLOWS 3 CHARS,         * 05560000
CECDEV11 LA    @F,4                                               0195  05570000
         CH    @F,CHARCNTR                                        0195  05580000
*          GO TO CECDEV43;              /* ANY OTHER LENGTH INVAL     * 05590000
         BC    04,CECDEV43                                        0196  05600000
*         IF CHARCNTR=4 THEN            /* FOUR CHAR DEV ADDR?        * 05610000
         CH    @F,CHARCNTR                                        0197  05620000
         BC    07,@9F5                                            0197  05630000
*          DO;                          /* YES,                       * 05640000
*           IF INPUTBUF(1:4)>'0999' THEN/* IS 4 CHAR ENTRY VALID      * 05650000
         CLC   0(4,@5),@C12                                       0199  05660000
*            GO TO CECDEV43;            /* NO, TOO LARGE DEV ADDR     * 05670000
         BC    02,CECDEV43                                        0200  05680000
*          END;                                                         05690000
*         FRSTPASS='1'B;           /* INDICATE => 1 DEV ENTERED  21050* 05700000
@9F5     OI    SWITCHES,B'10000000'                               0202  05710000
*         IGNORE=EIGHT-CHARCNTR+1; /* ZERO FIELD IN ADDRESS      21050* 05720000
         LA    @F,1                                               0203  05730000
         SH    @F,CHARCNTR                                        0203  05740000
         AH    @F,EIGHT                                           0203  05750000
         STH   @F,IGNORE                                          0203  05760000
*         RELEASE(9);                                                   05770000
*         DEVADDR='00000000';       /* CLEAR DEV ADDR FIELD.     21051* 05780000
         MVC   0(8,@8),@C13                                       0205  05790000
*         DEVADDR(IGNORE:8)=INPUTBUF(1:CHARCNTR);/* ADDR IN DEVTAB21050 05800000
         LR    @E,@5                                              0206  05810000
         LA    @1,8                                               0206  05820000
         LH    @9,IGNORE                                          0206  05830000
         SR    @1,@9                                              0206  05840000
         LA    @A,0(@9,@8)                                        0206  05850000
         BCTR  @A,0                                               0206  05860000
         EX    @1,@MVC                                            0206  05870000
*         RESTRICT(9);                                                  05880000
*         DEVAD1=DEVADDR;          /* TAB. CONVERT DEV ADDR IN   21050* 05890000
         MVC   DEVAD(8),0(@8)                                     0208  05900000
*         R1=ADDR(CNVRT1);         /* EBCDIC TO HEX.  GET ADDR OF21050* 05910000
         LA    @1,CNVRT1                                          0209  05920000
*         R15=TAB28;               /* CONVERT RTN PARM LIST. GET 21050* 05930000
         L     @F,TAB28                                           0210  05940000
*                                  /*ENTRY PT ADDR TO  NEW MACROS21050* 05950000
*         GEN(BALR R14,R15);       /* BRANCH TO CNVERT RTN(41).  21050* 05960000
         BALR R14,R15                                                   05970000
         DS    0H                                                       05980000
*         IF RC¬=0 THEN            /* CHECK RETURN CODE. NOT=0   21050* 05990000
         LTR   @F,@F                                              0212  06000000
*            GO TO CECDEV43;       /* MEANS AN ERROR. GET NEW DTO21050* 06010000
         BC    07,CECDEV43                                        0213  06020000
*         SUM=GOODENT+UCBLOOK;     /* ADD TOTAL NO. DEVTAB ENTRYX03008* 06030000
         LR    @F,@7                                              0214  06040000
         AR    @F,@6                                              0214  06050000
         ST    @F,@TEMP4                                          0214  06060000
         MVC   SUM(3),@TEMP4+1                                    0214  06070000
*         IF SUM>'000000'X THEN    /* CHECK IF FIRST ENTRY      X03008* 06080000
         L     @F,@X11                                            0215  06090000
         MVC   @TEMP3+1(3),SUM                                    0215  06100000
         C     @F,@TEMP3                                          0215  06110000
         BC    10,@9F4                                            0215  06120000
*           DO;                    /* NO                        X03008* 06130000
*             NEWADDR=HEX;         /* PLACE ADDR IN SCAN HOLD   X03008* 06140000
         MVC   NEWADDR(4),DEVAREA                                 0217  06150000
*             SAVLOOKT=UCBLOOK;    /* SAVE REG BEFOR SCAN       X03008* 06160000
         ST    @7,@TEMP4                                          0218  06170000
         MVC   SAVLOOKT(3),@TEMP4+1                               0218  06180000
*             GEN(BAL   R7,CECDE39B); /* CHECK FOR DUP ADDR     X03008* 06190000
         BAL   R7,CECDE39B                                              06200000
         DS    0H                                                       06210000
*             UCBLOOK=SAVLOOKT;    /*RESTORE REG AFTER GOOD SCANX03008* 06220000
         MVC   @TEMP3+1(3),SAVLOOKT                               0220  06230000
         L     @7,@TEMP3                                          0220  06240000
*           END;                                              /*X03008* 06250000
*         HEXADDR=HEX;             /* PUT RETURNED HEX ADDR IN   21050* 06260000
@9F4     MVC   32(4,@8),DEVAREA                                   0222  06270000
*                                  /* DEV TAB ENTRY. ADD CHARCNTR21050* 06280000
* CECDEV13:                        /*                            21050* 06290000
*         R5=R5+CHARCNTR  ;        /* INCREMENT TO CHAR AFTER SYM21050* 06300000
CECDEV13 AH    @5,CHARCNTR                                        0223  06310000
*         DEVTABPT=DEVTABPT+TABLNGTH;/*INCREMENT DEVTAB POINTER X03008* 06320000
         AH    @8,TABLNGTH                                        0224  06330000
*         UCBLOOK=UCBLOOK+1;        /* INCREMENT UCB LOOK UP COUNTER  * 06340000
         LA    @7,1(0,@7)                                         0225  06350000
*                                   /* BY ONE.                        * 06360000
*         IF LIMIT=UCBLOOK THEN     /* IS LIMIT OF UCB LOOK UPS       * 06370000
         CH    @7,LIMIT                                           0226  06380000
         BC    07,@9F3                                            0226  06390000
*           DO;                     /* REACHED. YES, GO TO UCB LOOK UP* 06400000
*           R3=ADDR(CECDEV15);      /* FUNCTION. SET RETURN ADDRESS   * 06410000
         LA    @3,CECDEV15                                        0228  06420000
*                                  /*                            21050* 06430000
*           GO TO CECDEV31;         /* IN REGISTER 3.            21050* 06440000
         BC    15,CECDEV31                                        0229  06450000
*           END;                                                        06460000
* CECDEV15:                                                    /*21050* 06470000
*         /************************************************************ 06480000
*         /*                                                    X03906* 06490000
*         /*        IS AN INCLUSIVE SERIES OF DEVICES ENTERED         * 06500000
*         /*                                                    X03906* 06510000
*         /************************************************************ 06520000
*         IF INPUTBUF(1)='-' THEN  /* A '-' DELIMITER INDICATES  21050* 06530000
@9F3     EQU   *                                                  0231  06540000
CECDEV15 CLI   0(@5),C'-'                                         0231  06550000
         BC    07,@9F2                                            0231  06560000
*            DO;                   /* AN INCLUSIVE SERIES. IF    21050* 06570000
*            IF INPUTBUF(2)>='A' & /* IT IS, MUST HAVE NUMERIC   21050* 06580000
*              INPUTBUF(2)<='Z'    /* ENTRY. NO INCLUSIVE SYMBOL 21050* 06590000
*              THEN GO TO CECDEV43;/* ICS, HAVE ERROR CONDITION. 21050* 06600000
         CLI   1(@5),C'A'                                         0233  06610000
         BC    04,@9F1                                            0233  06620000
         CLI   1(@5),C'Z'                                         0233  06630000
         BC    13,CECDEV43                                        0234  06640000
*                                  /* ENTRY IS INCLUSIVE & NUMBER21050* 06650000
*         INCLST='1'B;             /* SET INCLUSIVE ENTRY FLG ON.21050* 06660000
@9F0     EQU   *                                                  0235  06670000
@9F1     OI    OLTEPSW7,B'10000000'                               0235  06680000
*         R5=R5+1;                 /* INCREMENT TO CHAR AFTER'-'.21050* 06690000
         AH    @5,@D1                                             0236  06700000
*         CHARCNTR=0;              /* RESET CHARACTER COUNTER    21050* 06710000
         SR    @F,@F                                              0237  06720000
         STH   @F,CHARCNTR                                        0237  06730000
*         R3=ADDR(CECDEV17);       /* RET PT AFTER CHAR SCAN.    21050* 06740000
         LA    @3,CECDEV17                                        0238  06750000
*         GO TO CECDEV03;          /* GO TO START OF SCAN CODE   21050* 06760000
         BC    15,CECDEV03                                        0239  06770000
* CECDEV17:                                                    /*21050* 06780000
*         DEVAD1='00000000';       /* CLEAR FIELD FOR CONVERT.   21051* 06790000
CECDEV17 MVC   DEVAD(8),@C13                                      0240  06800000
*         IGNORE=EIGHT-CHARCNTR+1; /* DETERMINE NON SIGNIFICANT  21050* 06810000
         LA    @F,1                                               0241  06820000
         SH    @F,CHARCNTR                                        0241  06830000
         AH    @F,EIGHT                                           0241  06840000
         STH   @F,IGNORE                                          0241  06850000
*                                  /* PART OF ADDRESS FIELD.     21050* 06860000
*         RELEASE(9);                                                   06870000
*         DEVAD1(IGNORE:8)=INPUTBUF(1:CHARCNTR); /*LOAD PARM FLD 21050* 06880000
         LR    @E,@5                                              0243  06890000
         LA    @1,8                                               0243  06900000
         LR    @9,@F                                              0243  06910000
         SR    @1,@9                                              0243  06920000
         LA    @A,DEVAD-1(@9)                                     0243  06930000
         EX    @1,@MVC                                            0243  06940000
*         RESTRICT(9);                                                  06950000
*         R1=ADDR(CNVRT2);         /* LST FOR CONVRT RTN. SET    21050* 06960000
         LA    @1,CNVRT2                                          0245  06970000
*         R15=TAB28;               /* PTRS TO RTN AND NEW MACROS 21050* 06980000
         L     @F,TAB28                                           0246  06990000
*         GEN(BALR R14,R15);       /* BRANCH TO CONVERSION MODULE21050* 07000000
         BALR R14,R15                                                   07010000
         DS    0H                                                       07020000
*         IF RC¬=0 THEN            /* IF RETURN CODE NOT 0, THEN 21050* 07030000
         LTR   @F,@F                                              0248  07040000
*            GO TO CECDEV43;       /* PRNT MSG & REDEFINE TEST.  21050* 07050000
         BC    07,CECDEV43                                        0249  07060000
*         ERRCODE='60' ;           /* ERROR. SET INCLUSIVE VALID 21050* 07070000
         MVC   ERRCODE(2),@C14                                    0250  07080000
*                                  /* CODE AND CHECK FOR VALID EN21050* 07090000
*         IF FSTDEV>FINDEV THEN    /* CLUSIVE RANGE. 2F 1ST DEV  21050* 07100000
         L     @F,DEVAREA+4                                       0251  07110000
         C     @F,DEVAREA                                         0251  07120000
*            GO TO CECDEV45;       /* ADDR IS > LAST DEV ADDR,   21050* 07130000
         BC    04,CECDEV45                                        0252  07140000
*         R5=R5+CHARCNTR  ;        /* PRNT ERROR MSG. MOVE TO    21050* 07150000
         AH    @5,CHARCNTR                                        0253  07160000
*         GO TO CECDEV39;          /* NEXT DELIMITER.  GO TO CODE21050* 07170000
         BC    15,CECDEV39                                        0254  07180000
*         END;                     /* THAT HANDLES INCLSVE SERIES21050* 07190000
* CECDEV19:                                                    /*21050* 07200000
*         /************************************************************ 07210000
*         /*                   IS DELIMITER A COMMA                   * 07220000
*         /************************************************************ 07230000
*         IF INPUTBUF(1)=',' THEN   /* IS CHAR IN INBUFR A COMMA.     * 07240000
@9F2     EQU   *                                                  0256  07250000
CECDEV19 CLI   0(@5),C','                                         0256  07260000
         BC    07,@9EF                                            0256  07270000
*           DO;                     /* YES,                           * 07280000
*           R5=R5+1;                /* INCREMENT INBUFR POINTER TO    * 07290000
         AH    @5,@D1                                             0258  07300000
*                                   /* POINT TO NEXT DEVICE IN INBUFR.* 07310000
*         CHARCNTR=0;              /* RESET CHARACTER COUNTER    21050* 07320000
         SR    @F,@F                                              0259  07330000
         STH   @F,CHARCNTR                                        0259  07340000
*           GO TO CECDEV00;         /* GO TO ROUTINE THAT DECODES     * 07350000
         BC    15,CECDEV00                                        0260  07360000
*           END;                    /* THE DEVICES ENTERED.           * 07370000
*         /************************************************************ 07380000
*         /*                   IS DELIMITER A SLASH                   * 07390000
*         /************************************************************ 07400000
*         IF INPUTBUF(1)¬='/' THEN  /* IS CHAR IN INBUFR A SLASH.     * 07410000
@9EF     CLI   0(@5),C'/'                                         0262  07420000
*           GO TO CECDEV41;         /* NO, ERROR - PRINT MESSAGE.21050* 07430000
         BC    07,CECDEV41                                        0263  07440000
*         IF UCBLOOK¬=0 THEN        /* ARE MORE UCB LOOK UPS REQUIRED.* 07450000
         LTR   @7,@7                                              0264  07460000
         BC    08,@9EE                                            0264  07470000
*           DO;                     /* YES,                           * 07480000
*           R3=ADDR(CECDEV21);      /* SUPPLY UCB LOOK UP WITH RETURN * 07490000
         LA    @3,CECDEV21                                        0266  07500000
*                                  /*                            21050* 07510000
*           GO TO CECDEV31;         /* ADDRESS & GO TO UCB LOOK UP21050 07520000
         BC    15,CECDEV31                                        0267  07530000
*           END;                    /* ROUTINE.                       * 07540000
* CECDEV21:                                                    /*21050* 07550000
*         /************************************************************ 07560000
*         /*                ARE THERE ANY GOOD ENTRIES                * 07570000
*         /************************************************************ 07580000
*         IF GOODENT=0 THEN         /* ARE THERE ANY GOOD ENTRIES.    * 07590000
@9EE     EQU   *                                                  0269  07600000
CECDEV21 LTR   @6,@6                                              0269  07610000
         BC    07,@9ED                                            0269  07620000
*           DO;                     /* NO,                            * 07630000
* CECDEV23:                                                    /*21050* 07640000
*           R1=MSGPTR11;            /* PRINT ERROR MESSAGE.           * 07650000
CECDEV23 L     @1,4(0,@4)                                         0271  07660000
*           GEN(PWTO  REG=(1));     /* PRINT MESSAGE.                 * 07670000
         PWTO  REG=(1)                                                  07680000
         DS    0H                                                       07690000
*           GEN(BAL   R7,CECDE40B); /* CLEAR DEVICE TABLE       X03008* 07700000
         BAL   R7,CECDE40B                                              07710000
         DS    0H                                                       07720000
*           GO TO CECDEV47;         /* RETURN TO REDEFINE       X03008* 07730000
         BC    15,CECDEV47                                        0274  07740000
*           END;                                                        07750000
* CECDEV25:                                                    /*21050* 07760000
*         /************************************************************ 07770000
*         /*                                                          * 07780000
*         /*                      EXIT ROUTINE                        * 07790000
*         /*                                                          * 07800000
*         /************************************************************ 07810000
*         UNITCTR=GOODENT;          /* SAVE UNIT COUNTER. */            07820000
@9ED     EQU   *                                                  0276  07830000
CECDEV25 STH   @6,X                                               0276  07840000
*         UNICTR=UNITCTR1;                                              07850000
         MVC   UNICTR(1),X+1                                      0277  07860000
*         UNITUSE='00'X;            /* INITIALIZE UNIT USE COUNTER. */  07870000
         MVI   UNITUSE,X'00'                                      0278  07880000
*         INBUFPTR=R5;              /* SAVE INBUFR POINTER. */          07890000
         ST    @5,INBUFPTR                                        0279  07900000
*         GO TO CECDEV49;           /* SUCCESSFUL ENTRY IN DEV FIELD. * 07910000
         BC    15,CECDEV49                                        0280  07920000
*                                                              /*21050* 07930000
* CECDEV27:                                                    /*21050* 07940000
*         /************************************************************ 07950000
*         /*                                                          * 07960000
*         /*              ROUTINE FOR SPECIAL ENTRIES                 * 07970000
*         /*                                                          * 07980000
*         /************************************************************ 07990000
* CECDEV29:                                                    /*21050* 08000000
*         IF INPUTBUF(1:4)¬='NDR/' THEN/* DOES INPUT BUFFER CONTAIN   * 08010000
CECDEV27 EQU   *                                                  0281  08020000
CECDEV29 CLC   0(4,@5),@C15                                       0281  08030000
*           GO TO CECDEV43;         /* NDR/. NO, PRINT ERROR MESSAGE. * 08040000
         BC    07,CECDEV43                                        0282  08050000
*                                                              /*21050* 08060000
*         R5=R5+3;                  /* YES, INCREMENT INBUFR POINTER. * 08070000
         AH    @5,@D2                                             0283  08080000
*         NDR='1'B;                 /* SET NDR FLAG ON.               * 08090000
         OI    OLTEPSW2,B'00000100'                               0284  08100000
*         PRIDVSCT=PRIDVSCT&&PRIDVSCT;/* CLEAR PRIMARY ENTRY IN SCT.  * 08110000
         XC    SCT+8(12),SCT+8                                    0285  08120000
*         LEGALDEV='1'B;            /* .NDR IS LEGAL DEVICE ENTRY 21051 08130000
         OI    OLTEPSW,B'00001000'                                0286  08140000
*         GO TO CECDEV25;           /* GO TO FINISH ROUTINE.     21050* 08150000
         BC    15,CECDEV25                                        0287  08160000
* CECDEV31:                                                    /*21050* 08170000
*         /************************************************************ 08180000
*         /*                                                          * 08190000
*         /*     UCB LOOK UP FUNCTION FOR VALID DEVICE ENTRIES        * 08200000
*         /*                                                          * 08210000
*         /************************************************************ 08220000
*         MODNUM='31';              /* PUT NAME OF CALLING MODULE IN  * 08230000
CECDEV31 MVC   SVCPLIST+2(2),@C16                                 0288  08240000
*                                   /* SVC PARAMETER LIST.            * 08250000
*         DEVTABPT=DEVTABPT-(UCBLOOK*TABLNGTH);                         08260000
         LH    @F,TABLNGTH                                        0289  08270000
         MR    @E,@7                                              0289  08280000
         LCR   @F,@F                                              0289  08290000
         AR    @8,@F                                              0289  08300000
*                                   /* GIVE SVC POINTER TO LIST X03008* 08310000
*         ADDRDEV=DEVTABPT;         /* THAT MUST BE CHECKED.     21050* 08320000
         ST    @8,SVCPLIST+4                                      0290  08330000
*         ENTRIES=UCBLOOK;          /* TELL SVC HOW MANY UCB LOOK UPS * 08340000
         ST    @7,SVCPLIST+8                                      0291  08350000
*                                   /* IT MUST PERFORM.               * 08360000
*         SVCSAPTR=DIEPTR+40; /* ADDR OF SA IN PARM LIST Y02008 */      08370000
         LA    @F,40                                              0292  08380000
         A     @F,DIEPTR                                          0292  08390000
         ST    @F,SVCPLIST+12                                     0292  08400000
*         RESTRICT(1);                                                  08410000
*         R1=64;                    /* SET SVC CALLING CODE PARAMETER * 08420000
         LA    @1,64                                              0294  08430000
*                                   /* IN REGISTER 1.                 * 08440000
*         R0=ADDR(ADDRDEV);         /* SET POINTER TO PARAMETER LIST. * 08450000
         LA    @0,SVCPLIST+4                                      0295  08460000
*         RELEASE(1);                                                   08470000
*         GEN(SVC   59);            /* ISSUE SVC 59 FOR UCB LOOK UP.  * 08480000
         SVC   59                                                       08490000
         DS    0H                                                       08500000
*         X=0;                      /* INITIALIZE COUNTER TO ZERO.    * 08510000
         SR    @F,@F                                              0298  08520000
         STH   @F,X                                               0298  08530000
* CECDEV33:                                                    /*21050* 08540000
*         /************************************************************ 08550000
*         /*           DO DEVICES ENTERED HAVE VALID UCBS             * 08560000
*         /************************************************************ 08570000
*         IF DEVENQNG = '1'B THEN   /*  IS THE DEV UCB NOT AVAILABLE  * 08580000
CECDEV33 TM    15(@8),B'00000100'                                 0299  08590000
         BC    12,@9EC                                            0299  08600000
*           DO;                     /* YES                            * 08610000
*             RESTRICT(1);                                              08620000
*             R1=MSGPTR19;          /* GET POINTER TO MESSAGE.        * 08630000
         L     @1,36(0,@4)                                        0302  08640000
*             MSG109DV(01:08)=DEVADDR;   /* PUT DEV ADDR IN MSG       * 08650000
         MVC   12(8,@1),0(@8)                                     0303  08660000
*             IF ONOFF='1'B                /* CHECK DEV STATUS        * 08670000
*               THEN                       /* IF ITS ONLINE,  @ZA06048* 08680000
         TM    12(@8),B'10000000'                                 0304  08690000
         BC    12,@9EB                                            0304  08700000
*                 ONOROFF='ONLINE ,';      /* SAY SO          @ZA06048* 08710000
         MVC   21(8,@1),@C17                                      0305  08720000
         BC    15,@9EA                                            0306  08730000
*               ELSE                       /* IF ITS NOT      @ZA06048* 08740000
*                 ONOROFF='OFFLINE,';      /* SAY SO          @ZA06048* 08750000
@9EB     MVC   21(8,@1),@C18                                      0306  08760000
*             IF SYSALLOC='1'B             /* CHECK ALLOC     @ZA06048* 08770000
*               THEN                       /* IF ITS ALLOCATED        * 08780000
@9EA     TM    14(@8),B'00000100'                                 0307  08790000
         BC    12,@9E9                                            0307  08800000
*                 ALORNOT='ALLOCATED  ';   /* SAY SO          @ZA06048* 08810000
         MVC   29(11,@1),@C19                                     0308  08820000
         BC    15,@9E8                                            0309  08830000
*               ELSE                       /* IF ITS NOT      @ZA06048* 08840000
*                 ALORNOT='UNALLOCATED';   /* SAY SO          @ZA06048* 08850000
@9E9     MVC   29(11,@1),@C20                                     0309  08860000
*             RELEASE(1);                                               08870000
@9E8     EQU   *                                                  0310  08880000
*             GEN(PWTO  REG=(1));   /* PRINT MESSAGE.                 * 08890000
         PWTO  REG=(1)                                                  08900000
         DS    0H                                                       08910000
*             DEVENQNG = '0'B;      /* ZERO BIT                       * 08920000
         NI    15(@8),B'11111011'                                 0312  08930000
*           END;                                                        08940000
*         IF NOGODEV = '1'B THEN   /*  IS THE DEV NOT AVAILABLE YM7253* 08950000
@9EC     TM    14(@8),B'00001000'                                 0314  08960000
         BC    12,@9E7                                            0314  08970000
*           DO;                     /* YES                      YM7253* 08980000
*             RESTRICT(1);                                    /*YM7253* 08990000
*             R1=MSGPTR67;          /* GET POINTER TO MESSAGE.  YM7253* 09000000
         L     @1,40(0,@4)                                        0317  09010000
*             MSG467DV(01:08)=DEVADDR;/* PUT DEV ADDR IN MSG    YM7253* 09020000
         MVC   12(8,@1),0(@8)                                     0318  09030000
*             RELEASE(1);                                     /*YM7253* 09040000
*             GEN(PWTO  REG=(1));   /* PRINT MESSAGE.           YM7253* 09050000
         PWTO  REG=(1)                                                  09060000
         DS    0H                                                       09070000
*             GOTO CECDEV37;        /* GOTO NEXT DEVICE         YM7253* 09080000
         BC    15,CECDEV37                                        0321  09090000
*           END;                                              /*YM7253* 09100000
*         IF UCBADDR=0 THEN         /* IS IT A VALID DEVICE.          * 09110000
@9E7     SR    @F,@F                                              0323  09120000
         MVC   @TEMP4(4),8(@8)                                    0323  09130000
         C     @F,@TEMP4                                          0323  09140000
         BC    07,@9E6                                            0323  09150000
*           DO;                     /* NO,                            * 09160000
*           RESTRICT(1);                                                09170000
*           R1=MSGPTR79;            /* GET POINTER TO MESSAGE.        * 09180000
         L     @1,8(0,@4)                                         0326  09190000
*           MSG179I(20:27)=DEVADDR;      /* PUT DEV ADDR IN MSG  21050* 09200000
         MVC   31(8,@1),0(@8)                                     0327  09210000
*           RELEASE(1);                                                 09220000
*           GEN(PWTO  REG=(1));     /* PRINT MESSAGE.                 * 09230000
         PWTO  REG=(1)                                                  09240000
         DS    0H                                                       09250000
*           GO TO CECDEV37;         /* SKIP ENTRY.               21050* 09260000
         BC    15,CECDEV37                                        0330  09270000
*           END;                                                        09280000
*         IF DEVVAR ='1'B THEN      /*  HAS THE DEVICE BEEN VARRIED OF* 09290000
@9E6     TM    15(@8),B'00001000'                                 0332  09300000
         BC    12,@9E5                                            0332  09310000
*           DO;                     /* YES                            * 09320000
*           RESTRICT(1);                                                09330000
*           R1=MSGPTR14;            /* GET POINTER TO MESSAGE.        * 09340000
         L     @1,32(0,@4)                                        0335  09350000
*           MSG140DV(01:08)=DEVADDR;     /* PUT DEV ADDR IN MSG       * 09360000
         MVC   12(8,@1),0(@8)                                     0336  09370000
*           RELEASE(1);                                                 09380000
*           GEN(PWTO  REG=(1));     /* PRINT MESSAGE.                 * 09390000
         PWTO  REG=(1)                                                  09400000
         DS    0H                                                       09410000
*           DEVVAR = '0'B;                                              09420000
         NI    15(@8),B'11110111'                                 0339  09430000
*           END;                                                        09440000
* CECDEV35:                                                    /*21050* 09450000
*         /************************************************************ 09460000
*         /*                UPDATE OR PUSH UP ROUTINE                 * 09470000
*         /************************************************************ 09480000
*         GOODENT=GOODENT+1;        /* INCREMENT GOOD ENTRIES COUNTER.* 09490000
@9E5     EQU   *                                                  0341  09500000
CECDEV35 LA    @6,1(0,@6)                                         0341  09510000
*         DEVTABLE=DEVTABXX;        /* PUSH UP INFORMATION IN DEVTAB. * 09520000
         L     @1,AVAILBLE                                        0342  09530000
         MVC   0(56,@1),0(@8)                                     0342  09540000
*         IF AVAILBLE¬=DEVTABPT THEN/* IS THIS A PUSH UP.             * 09550000
         C     @8,AVAILBLE                                        0343  09560000
         BC    08,@9E4                                            0343  09570000
*         DEVTABXX=DEVTABXX&&DEVTABXX; /* ZERO DEVTABLE TO AVOID 21050* 09580000
         XC    0(56,@8),0(@8)                                     0344  09590000
*                                   /* ERROR IN OTHER POSSIBLE UCB    * 09600000
*                                   /* LOOK UPS.                      * 09610000
*         AVAILBLE=AVAILBLE+TABLNGTH;                                   09620000
@9E4     LH    @F,TABLNGTH                                        0345  09630000
         A     @F,AVAILBLE                                        0345  09640000
         ST    @F,AVAILBLE                                        0345  09650000
*                             /* INCREMENT AVAILABLE POINTER TO X03008* 09660000
*                                   /* NEXT AVAILABLE DEVTAB ENTRY21050 09670000
* CECDEV37:                                                    /*21050* 09680000
*         /************************************************************ 09690000
*         /*   ROUTINE THAT DETERMINES IF MORE UCBS ARE OUTSTANDING   * 09700000
*         /************************************************************ 09710000
*         X=X+1;                    /* INCREMENT COUNTER.             * 09720000
CECDEV37 LA    @F,1                                               0346  09730000
         AH    @F,X                                               0346  09740000
         STH   @F,X                                               0346  09750000
*         DEVTABPT=DEVTABPT+TABLNGTH;/*INCREMENT DEVTABLE POINTERX03008 09760000
         AH    @8,TABLNGTH                                        0347  09770000
*         IF X¬=UCBLOOK THEN        /* ARE ALL UCBS CHECKED.          * 09780000
         CH    @7,X                                               0348  09790000
*           GO TO CECDEV33;         /* NO, LOOP.  YES, CONTINUE. 21050* 09800000
         BC    07,CECDEV33                                        0349  09810000
*         IF GOODENT=16 THEN        /* ARE THERE 16 GOOD ENTRIES.     * 09820000
         CH    @6,@D3                                             0350  09830000
*             GO TO CECDEV25;      /* YES, GO TO EXIT ROUTINE.   21050* 09840000
         BC    08,CECDEV25                                        0351  09850000
*         UCBLOOK=0;                /* SET UCBLOOK UP COUNTER TO 0.   * 09860000
         SR    @7,@7                                              0352  09870000
*         X=0;                      /* SET COUNTER TO 0.              * 09880000
         SR    @F,@F                                              0353  09890000
         STH   @F,X                                               0353  09900000
*         DEVTABPT=AVAILBLE;        /* SET DEVTAB POINTER TO NEXT     * 09910000
         L     @8,AVAILBLE                                        0354  09920000
*                                   /* AVAILABLE ENTRY IN DEVTAB.     * 09930000
*         LIMIT=16-GOODENT;         /* FIND NEW LIMIT.                * 09940000
         LA    @F,16                                              0355  09950000
         SR    @F,@6                                              0355  09960000
         STH   @F,LIMIT                                           0355  09970000
*         GO TO R3;                /* RET TO POINT IN REG 3.     21050* 09980000
         BCR   15,@3                                              0356  09990000
* CECDEV39:                                                    /*21050* 10000000
*         /************************************************************ 10010000
*         /*                                                          * 10020000
*         /*     ROUTINE THAT HANDLES INCLUSIVE SERIES OF DEVICES     * 10030000
*         /*                                                          * 10040000
*         /************************************************************ 10050000
*         FSTDEV=FSTDEV+1;          /* INCREMENT FSTDEV BY ONE.       * 10060000
CECDEV39 LA    @F,1                                               0357  10070000
         A     @F,DEVAREA                                         0357  10080000
         ST    @F,DEVAREA                                         0357  10090000
*         SAVENT=FSTDEV;           /* SAVE DEVICE FOR LATER USE. 21050* 10100000
         MVC   SAVENT(4),DEVAREA                                  0358  10110000
*         IF FSTDEV>FINDEV THEN     /* HAS INCLUSIVE SERIES BEEN FULLY* 10120000
         L     @F,DEVAREA+4                                       0359  10130000
         C     @F,DEVAREA                                         0359  10140000
         BC    10,@9E3                                            0359  10150000
*           DO;                     /* DECODED. YES, RESET INCLUSIVE  * 10160000
*           INCLST='0'B;            /* FLAG. MAKE SURE NEXT DELIMITER * 10170000
         NI    OLTEPSW7,B'01111111'                               0361  10180000
*           IF INPUTBUF(1)¬='-' THEN/* IS NOT A HYPHEN.               * 10190000
         CLI   0(@5),C'-'                                         0362  10200000
*             GO TO CECDEV19;                                  /*21050* 10210000
         BC    07,CECDEV19                                        0363  10220000
*           GO TO CECDEV41;         /* ERROR, PRINT MESSAGE.     21050* 10230000
         BC    15,CECDEV41                                        0364  10240000
*           END;                                                        10250000
*         SUM=GOODENT+UCBLOOK;      /*ADD TOTAL NO. DEVTAB ENTRYX03008* 10260000
@9E3     LR    @F,@7                                              0366  10270000
         AR    @F,@6                                              0366  10280000
         ST    @F,@TEMP4                                          0366  10290000
         MVC   SUM(3),@TEMP4+1                                    0366  10300000
*         IF SUM>'000000'X THEN     /* CHECK IF THIS FIRST DEV  X03008* 10310000
         L     @F,@X11                                            0367  10320000
         MVC   @TEMP3+1(3),SUM                                    0367  10330000
         C     @F,@TEMP3                                          0367  10340000
         BC    10,@9E2                                            0367  10350000
*           DO;                     /* NO                       X03008* 10360000
*             NEWADDR=FSTDEV2;      /* ADDR OF DEV IN SCAN HOLD X03008* 10370000
         MVC   NEWADDR(4),DEVAREA                                 0369  10380000
*             SAVLOOKT=UCBLOOK;     /* SAVE REG BEFOR SCAN      X03008* 10390000
         ST    @7,@TEMP4                                          0370  10400000
         MVC   SAVLOOKT(3),@TEMP4+1                               0370  10410000
*             GEN(BAL   R7,CECDE39B); /* SCAN TABLE FOR DUP ADDRX03008* 10420000
         BAL   R7,CECDE39B                                              10430000
         DS    0H                                                       10440000
*             UCBLOOK=SAVLOOKT;     /* RESTORE REG AFTER SCAN   X03008* 10450000
         MVC   @TEMP3+1(3),SAVLOOKT                               0372  10460000
         L     @7,@TEMP3                                          0372  10470000
*           END;                                              /*X03008* 10480000
*         HEXADDR=FSTDEV2;          /* PUT HEX DEVICE ADDRESS IN      * 10490000
@9E2     MVC   32(4,@8),DEVAREA                                   0374  10500000
*                                   /* DEVTABLE ENTRY.                * 10510000
*         R1=ADDR(CNVRT3);          /* GET ADDRESS OF CONVERT PARMLIST* 10520000
         LA    @1,CNVRT3                                          0375  10530000
*         R15=TAB28;                /* GET ENTRY POINT ADDRESS.       * 10540000
         L     @F,TAB28                                           0376  10550000
*         GEN(BALR R14,R15);        /* EXECUTE CONVERT MODULE.        * 10560000
         BALR R14,R15                                                   10570000
         DS    0H                                                       10580000
*         IF RC¬=0 THEN            /* IF RETURN CODE NOT 0 GO AND 21051 10590000
         LTR   @F,@F                                              0378  10600000
*         GO TO CECDEV43;          /* PRINT ERROR MESSAGE.       21051* 10610000
         BC    07,CECDEV43                                        0379  10620000
*         DEVADDR=DEVAD1;           /* PUT EBCDIC DEVICE ADDRESS IN   * 10630000
         MVC   0(8,@8),DEVAD                                      0380  10640000
*                                   /* DEVTABLE ENTRY.                * 10650000
*         UCBLOOK=UCBLOOK+1;        /* INCREMENT UCB LOOK UP COUNTER  * 10660000
         LA    @7,1(0,@7)                                         0381  10670000
*                                   /* BY ONE.                        * 10680000
*         DEVTABPT=DEVTABPT+TABLNGTH;/* INCREMENT DEVTABLE POINTER TO * 10690000
         AH    @8,TABLNGTH                                        0382  10700000
*                                   /* POINT TO NEXT ENTRY.     X03008* 10710000
*         IF UCBLOOK=LIMIT THEN     /* IS LIMIT OF UCB LOOK UPS       * 10720000
         CH    @7,LIMIT                                           0383  10730000
         BC    07,@9E1                                            0383  10740000
*           DO;                     /* REACHED. YES, GO TO UCB LOOK UP* 10750000
*                                   /* ROUTINE.                       * 10760000
*           R3=ADDR(CECDEV39);      /* GIVE UCB LOOK UP ROUTINE A 21050 10770000
         LA    @3,CECDEV39                                        0385  10780000
*                                   /* RETURN ADDRESS.                * 10790000
*           GO TO CECDEV31;         /* GO TO UCBLOOK UP ROUTINE. 21050* 10800000
         BC    15,CECDEV31                                        0386  10810000
*           END;                                                        10820000
*         GO TO CECDEV39;           /* CONTINUE WITH INCLUSIVE DEVICE * 10830000
*                                   /* HANDLING.                 21050* 10840000
* CECDE39A:                                                   /*X03008* 10850000
*        /******************************************************X03008* 10860000
*        /*                                                     X03008* 10870000
*        /* DUPLICATE DEVICE SYMBOLIC ENTRY CHECK               X03008* 10880000
*        /*                                                     X03008* 10890000
*        /******************************************************X03008* 10900000
*        LOOPPTR=DEVTBPTR;          /*SET SCAN BASE START OF TABX03008* 10910000
CECDE39A MVC   LOOPPTR(4),DEVTBPTR                                0389  10920000
*        SUM=GOODENT+UCBLOOK;       /*TOTAL NO. DEV IN TAB CNTL.X03008* 10930000
         LR    @F,@7                                              0390  10940000
         AR    @F,@6                                              0390  10950000
         ST    @F,@TEMP4                                          0390  10960000
         MVC   SUM(3),@TEMP4+1                                    0390  10970000
*          DO Z=1 TO SUM     BY +1; /* SCAN DEVICE TAB SYMBOLIC X03008* 10980000
         LA    @A,1                                               0391  10990000
         BC    15,@DO9DF                                          0391  11000000
*            IF SYMNAM=SYMBNM THEN  /* IS NEW ENTRY EQ OLD ENTRYX03008* 11010000
@DO9E0   L     @1,LOOPPTR                                         0392  11020000
         CLC   SYMNAM(8),44(@1)                                   0392  11030000
*              GOTO   CECDE40A;     /* YES, ERROR               X03008* 11040000
         BC    08,CECDE40A                                        0393  11050000
*            LOOPPTR=LOOPPTR+TABLNGTH; /* INDEX BASE CHECK NEXT X03008* 11060000
         LH    @F,TABLNGTH                                        0394  11070000
         A     @F,LOOPPTR                                         0394  11080000
         ST    @F,LOOPPTR                                         0394  11090000
*         END;                      /* NO DUP SYMB NAME FOUND   X03008* 11100000
*        GOTO CECDEV06;             /* RETURN TO PROCESSING     X03008* 11110000
         AH    @A,@D1                                             0395  11120000
@DO9DF   MVC   @TEMP3+1(3),SUM                                    0395  11130000
         C     @A,@TEMP3                                          0395  11140000
         BC    12,@DO9E0                                          0395  11150000
         BC    15,CECDEV06                                        0396  11160000
* CECDE39B:                                                   /*X03008* 11170000
*        /******************************************************X03008* 11180000
*        /*                                                     X03008* 11190000
*        /* DUPLICATE DEVICE ADDRESS ENTRY CHECK                X03008* 11200000
*        /*                                                     X03008* 11210000
*        /******************************************************X03008* 11220000
*        LOOPPTR=DEVTBPTR;          /*SET SCAN BASE START OF TABX03008* 11230000
CECDE39B MVC   LOOPPTR(4),DEVTBPTR                                0397  11240000
*        SUM=GOODENT+SAVLOOKT;      /*TOTAL NO. DEV IN TAB CNTL.X03008* 11250000
         MVC   @TEMP3+1(3),SAVLOOKT                               0398  11260000
         L     @F,@TEMP3                                          0398  11270000
         AR    @F,@6                                              0398  11280000
         ST    @F,@TEMP4                                          0398  11290000
         MVC   SUM(3),@TEMP4+1                                    0398  11300000
*          DO Z=1 TO SUM     BY +1; /* SCAN DEVICE TAB ADDRESS  X03008* 11310000
         LA    @A,1                                               0399  11320000
         BC    15,@DO9DB                                          0399  11330000
*            IF NEWADDR=HXADDR THEN /* IS NEW ENTRY EQ OLD ENTRYX03008* 11340000
@DO9DC   L     @1,LOOPPTR                                         0400  11350000
         CLC   NEWADDR(4),32(@1)                                  0400  11360000
*              GOTO CECDE40A;       /* YES, ERROR               X03008* 11370000
         BC    08,CECDE40A                                        0401  11380000
*            LOOPPTR=LOOPPTR+TABLNGTH; /* INDEX BASE CHECK NEXT X03008* 11390000
         LH    @F,TABLNGTH                                        0402  11400000
         A     @F,LOOPPTR                                         0402  11410000
         ST    @F,LOOPPTR                                         0402  11420000
*          END;                     /* NO DUP ADDR FOUND        X03008* 11430000
*        GEN(BR     R7);            /* RETURN TO PROCESSING     X03008* 11440000
         AH    @A,@D1                                             0403  11450000
@DO9DB   MVC   @TEMP3+1(3),SUM                                    0403  11460000
         C     @A,@TEMP3                                          0403  11470000
         BC    12,@DO9DC                                          0403  11480000
         BR     R7                                                      11490000
         DS    0H                                                       11500000
* CECDEV40:                                                   /*X03008* 11510000
*        /******************************************************X03008* 11520000
*        /*                                                     X03008* 11530000
*        /* OUTPUT IFD252I NO MIX OF ADDR AND SYMBOLIC IN DEV INPUT   * 11540000
*        /*                                                     X03008* 11550000
*        /******************************************************X03008* 11560000
*        R1=MSGPTR52;               /* SET MSG PTR TO IFD252I   X03008* 11570000
CECDEV40 L     @1,28(0,@4)                                        0405  11580000
*        GEN(PWTO  REG=(1));        /* ISSUE MESSAGE            X03008* 11590000
         PWTO  REG=(1)                                                  11600000
         DS    0H                                                       11610000
*        GEN(BAL   R7,CECDE40B);    /* CLEAR DEVICE TABLE       X03008* 11620000
         BAL   R7,CECDE40B                                              11630000
         DS    0H                                                       11640000
*        GOTO CECDEV46;             /* ISSUE PROMPTING          X03008* 11650000
         BC    15,CECDEV46                                        0408  11660000
* CECDE40A:                                                   /*X03008* 11670000
*        /******************************************************X03008* 11680000
*        /*                                                     X03008* 11690000
*        /* OUTPUT IFD251I DUPLICATE ENTRIES IN DEVICE FEILD    X03008* 11700000
*        /*                                                     X03008* 11710000
*        /******************************************************X03008* 11720000
*        R1=MSGPTR51;               /* SET MSG PTR TO IFD251I   X03008* 11730000
CECDE40A L     @1,24(0,@4)                                        0409  11740000
*        GEN(PWTO  REG=(1));        /* ISSUE MESSAGE            X03008* 11750000
         PWTO  REG=(1)                                                  11760000
         DS    0H                                                       11770000
*        GEN(BAL   R7,CECDE40B);    /* CLEAR DEVICE TABLE       X03008* 11780000
         BAL   R7,CECDE40B                                              11790000
         DS    0H                                                       11800000
*        GOTO CECDEV46;             /* ISSUE PROMPTING          X03008* 11810000
         BC    15,CECDEV46                                        0412  11820000
* CECDE40B:                                                   /*X03008* 11830000
*        /******************************************************X03008* 11840000
*        /*                                                     X03008* 11850000
*        /* CLEAR DEVICE TABLE ON ERROR                         X03008* 11860000
*        /*                                                     X03008* 11870000
*        /******************************************************X03008* 11880000
*         R8=DEVTBPTR;              /* DEVICE TABLES            X03008* 11890000
CECDE40B L     @8,DEVTBPTR                                        0413  11900000
*         DO R9=TABLNGTH BY -1 TO 1;/* TABLE LENGTH             X03008* 11910000
         LH    @9,TABLNGTH                                        0414  11920000
         LTR   @9,@9                                              0414  11930000
         BC    12,@DO9D7                                          0414  11940000
*           DVT=DVT&&DVT;           /* ZERO TABLE AREA          X03008* 11950000
@DO9D8   XC    0(16,@8),0(@8)                                     0415  11960000
*           R8=ADDR(DVTN);          /* NEXT TABLE AREA          X03008* 11970000
         LA    @8,16(0,@8)                                        0416  11980000
*         END;                      /* DEVICE TABLE CLEARED     X03008* 11990000
*         GEN(BR   R7);             /* RETURN                   X03008* 12000000
         BCT   @9,@DO9D8                                          0417  12010000
@DO9D7   EQU   *                                                  0417  12020000
         BR   R7                                                        12030000
         DS    0H                                                       12040000
* CECDEV41:                                                    /*21050* 12050000
*         /************************************************************ 12060000
*         /*                                                          * 12070000
*         /*  PARALLEL PRINT MESSAGE IFD108I AND RETURN TO REDEFINE   * 12080000
*         /*                                                          * 12090000
*         /************************************************************ 12100000
*         ERRCODE='01';             /* SET ERROR CODE TO 01.          * 12110000
CECDEV41 MVC   ERRCODE(2),@C21                                    0419  12120000
*         GO TO CECDEV45;           /* GO PRINT MESSAGE.         21050* 12130000
         BC    15,CECDEV45                                        0420  12140000
* CECDEV43:                                                    /*21050* 12150000
*         ERRCODE='02';             /* SET ERROR CODE TO 02.          * 12160000
CECDEV43 MVC   ERRCODE(2),@C22                                    0421  12170000
* CECDEV45:                                                    /*21050* 12180000
*         R1=MSGPTR08;              /* GET POINTER TO MESSAGE.        * 12190000
CECDEV45 L     @1,0(0,@4)                                         0422  12200000
*         MSG108I(26:27)=ERRCODE;       /* PUT ERROR CODE IN MSG.     * 12210000
         MVC   37(2,@1),ERRCODE                                   0423  12220000
*         GEN(PWTO  REG=(1));       /* PRINT MESSAGE.                 * 12230000
         PWTO  REG=(1)                                                  12240000
         DS    0H                                                       12250000
* CECDEV46:                                                   /*X03906* 12260000
*        /******************************************************X03906* 12270000
*        /*                                                     X03906* 12280000
*        /* OUTPUT IFD161I PROMPTING                            X03906* 12290000
*        /*                                                     X03906* 12300000
*        /******************************************************X03906* 12310000
*         R1=MSGPTR61;              /* GET POINTER TO MESSAGE.        * 12320000
CECDEV46 L     @1,12(0,@4)                                        0425  12330000
*         GEN(PWTO  REG=(1));       /* PRINT MESSAGE.                 * 12340000
         PWTO  REG=(1)                                                  12350000
         DS    0H                                                       12360000
* CECDEV47:                                                             12370000
*         /************************************************************ 12380000
*         /*    CHANGE RETURN POINT SO THAT TEST CAN BE REDEFINED     * 12390000
*         /************************************************************ 12400000
*         LEGALDEV='0'B;                /* INVALID D/T/O/ ENTRY.      * 12410000
CECDEV47 NI    OLTEPSW,B'11110111'                                0427  12420000
*         YOURR14=REDEFINE;         /* ALTER RETURN POINT TO IFDOLT30.* 12430000
         L     @1,4(0,@D)                                         0428  12440000
         MVC   12(4,@1),REDEFINE                                  0428  12450000
* CECDEV49:                                                    /*21050* 12460000
*         /************************************************************ 12470000
*         /*                    RETURN TO CALLER                      * 12480000
*         /************************************************************ 12490000
*         DPMSGREI='0'B;                /* TURN OFF DP MSG REI  XM9156* 12500000
CECDEV49 NI    A00013,B'11111110'                                 0429  12510000
*         RETURN;                                                       12520000
*         END;                                                          12530000
@EL01    L     @D,4(0,@D)                                         0431  12540000
         LM    @E,@C,12(@D)                                       0431  12550000
         BCR   15,@E                                              0431  12560000
@DATA1   EQU   *                                                        12570000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           12580000
@1       EQU   01                                                       12590000
@2       EQU   02                                                       12600000
@3       EQU   03                                                       12610000
@4       EQU   04                                                       12620000
@5       EQU   05                                                       12630000
@6       EQU   06                                                       12640000
@7       EQU   07                                                       12650000
@8       EQU   08                                                       12660000
@9       EQU   09                                                       12670000
@A       EQU   10                                                       12680000
@B       EQU   11                                                       12690000
@C       EQU   12                                                       12700000
@D       EQU   13                                                       12710000
@E       EQU   14                                                       12720000
@F       EQU   15                                                       12730000
@D1      DC    H'1'                                                     12740000
@D2      DC    H'3'                                                     12750000
@D3      DC    H'16'                                                    12760000
@MVC     MVC   0(1,@A),0(@E)                                            12770000
@V1      DC    V(IFDMSG31)                                              12780000
         DS    0F                                                       12790000
@X11     DC    X'00000000'                                              12800000
@C12     DC    C'0999'                                                  12810000
@C13     DC    C'00000000'                                              12820000
@C15     DC    C'NDR/'                                                  12830000
@C17     DC    C'ONLINE ,'                                              12840000
@C18     DC    C'OFFLINE,'                                              12850000
@C2      DC    C'.N'                                                    12860000
@C14     DC    C'60'                                                    12870000
@C16     DC    C'31'                                                    12880000
@C21     DC    C'01'                                                    12890000
@C22     DC    C'02'                                                    12900000
@C19     DC    C'ALLOCATED  '                                           12910000
@C20     DC    C'UNALLOCATED'                                           12920000
         DS    0D                                                       12930000
@DATA    EQU   *                                                        12940000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   12950000
R0       EQU   00000000            FULLWORD POINTER REGISTER            12960000
R1       EQU   00000001            3  BYTE  POINTER REGISTER            12970000
R2       EQU   00000002            FULLWORD POINTER REGISTER            12980000
R3       EQU   00000003            FULLWORD POINTER REGISTER            12990000
I        EQU   00000003            FULLWORD POINTER REGISTER            13000000
R4       EQU   00000004            FULLWORD POINTER REGISTER            13010000
R5       EQU   00000005            FULLWORD POINTER REGISTER            13020000
R7       EQU   00000007            FULLWORD POINTER REGISTER            13030000
GOODENT  EQU   00000006            3  BYTE  POINTER REGISTER            13040000
UCBLOOK  EQU   00000007            3  BYTE  POINTER REGISTER            13050000
R8       EQU   00000008            FULLWORD POINTER REGISTER            13060000
DEVTABPT EQU   00000008            FULLWORD POINTER REGISTER            13070000
R9       EQU   00000009            3  BYTE  POINTER REGISTER            13080000
Z        EQU   00000010            3  BYTE  POINTER REGISTER            13090000
R13      EQU   00000013            FULLWORD POINTER REGISTER            13100000
R14      EQU   00000014            FULLWORD POINTER REGISTER            13110000
RC       EQU   00000015            FULLWORD POINTER REGISTER            13120000
R15      EQU   00000015            FULLWORD POINTER REGISTER            13130000
MYSAVE   EQU   00000000            8 BYTE(S) ON WORD                    13140000
A00000   EQU   MYSAVE+00000000     4 BYTE(S)                            13150000
YOURR13  EQU   MYSAVE+00000004     FULLWORD POINTER                     13160000
YOURSAVE EQU   00000000            16 BYTE(S) ON WORD                   13170000
A00001   EQU   YOURSAVE+00000000   12 BYTE(S)                           13180000
YOURR14  EQU   YOURSAVE+00000012   FULLWORD POINTER                     13190000
INPUTBUF EQU   00000000            10 BYTE(S)                           13200000
DEVTABXX EQU   00000000            56 BYTE(S)                           13210000
DEVADDR  EQU   DEVTABXX+00000000   8 BYTE(S)                            13220000
UCBADDR  EQU   DEVTABXX+00000008   4  BYTE  POINTER                     13230000
FLG1     EQU   DEVTABXX+00000012   1 BYTE(S)                            13240000
ONOFF    EQU   DEVTABXX+00000012   1 BIT(S)                             13250000
PRIMARY  EQU   DEVTABXX+00000012   1 BIT(S)                             13260000
A00017   EQU   DEVTABXX+00000013   1 BYTE(S)                            13270000
FLG3     EQU   DEVTABXX+00000014   1 BYTE(S)                            13280000
A00018   EQU   DEVTABXX+00000014   4 BIT(S)                             13290000
NOGODEV  EQU   DEVTABXX+00000014   1 BIT(S)                             13300000
SYSALLOC EQU   DEVTABXX+00000014   1 BIT(S)                             13310000
A00019   EQU   DEVTABXX+00000014   2 BIT(S)                             13320000
FLG4     EQU   DEVTABXX+00000015   1 BYTE(S)                            13330000
A00020   EQU   DEVTABXX+00000015   4 BIT(S)                             13340000
DEVVAR   EQU   DEVTABXX+00000015   1 BIT(S)                             13350000
DEVENQNG EQU   DEVTABXX+00000015   1 BIT(S)                             13360000
A00021   EQU   DEVTABXX+00000015   2 BIT(S)                             13370000
A00022   EQU   DEVTABXX+00000016   16 BYTE(S)                           13380000
HEXADDR  EQU   DEVTABXX+00000032   4 BYTE(S)                            13390000
CDSDVDSC EQU   DEVTABXX+00000036   4 BYTE(S)                            13400000
MODEL    EQU   DEVTABXX+00000036   1 BYTE(S)                            13410000
FEATURES EQU   DEVTABXX+00000037   1 BYTE(S)                            13420000
CLASS    EQU   DEVTABXX+00000038   1 BYTE(S)                            13430000
TYPE     EQU   DEVTABXX+00000039   1 BYTE(S)                            13440000
BYTECNT  EQU   DEVTABXX+00000040   1 BYTE(S)                            13450000
CDSFLAGS EQU   DEVTABXX+00000041   1 BYTE(S)                            13460000
A00023   EQU   DEVTABXX+00000041   4 BIT(S)                             13470000
SYMDEVIC EQU   DEVTABXX+00000041   1 BIT(S)                             13480000
A00024   EQU   DEVTABXX+00000041   2 BIT(S)                             13490000
REMLINE  EQU   DEVTABXX+00000041   1 BIT(S)                             13500000
EXTSGMSK EQU   DEVTABXX+00000042   2 BYTE(S)                            13510000
SYMNAME  EQU   DEVTABXX+00000044   8 BYTE(S)                            13520000
MSGPTR   EQU   00000000            44 BYTE(S) ON WORD                   13530000
MSGPTR08 EQU   MSGPTR+00000000     FULLWORD POINTER                     13540000
MSGPTR11 EQU   MSGPTR+00000004     FULLWORD POINTER                     13550000
MSGPTR79 EQU   MSGPTR+00000008     FULLWORD POINTER                     13560000
MSGPTR61 EQU   MSGPTR+00000012     FULLWORD POINTER                     13570000
MSGPTR27 EQU   MSGPTR+00000016     FULLWORD POINTER                     13580000
MSGPTR65 EQU   MSGPTR+00000020     FULLWORD POINTER                     13590000
MSGPTR51 EQU   MSGPTR+00000024     FULLWORD POINTER                     13600000
MSGPTR52 EQU   MSGPTR+00000028     FULLWORD POINTER                     13610000
MSGPTR14 EQU   MSGPTR+00000032     FULLWORD POINTER                     13620000
MSGPTR19 EQU   MSGPTR+00000036     FULLWORD POINTER                     13630000
MSGPTR67 EQU   MSGPTR+00000040     FULLWORD POINTER                     13640000
MSG108   EQU   00000000            40 BYTE(S) ON WORD                   13650000
A00025   EQU   MSG108+00000000     12 BYTE(S)                           13660000
MSG108I  EQU   MSG108+00000012     28 BYTE(S)                           13670000
MSG140   EQU   00000000            20 BYTE(S) ON WORD                   13680000
A00026   EQU   MSG140+00000000     12 BYTE(S)                           13690000
MSG140DV EQU   MSG140+00000012     8 BYTE(S)                            13700000
MSG467   EQU   00000000            20 BYTE(S) ON WORD                   13710000
A00027   EQU   MSG467+00000000     12 BYTE(S)                           13720000
MSG467DV EQU   MSG467+00000012     8 BYTE(S)                            13730000
MSG190   EQU   00000000            40 BYTE(S) ON WORD                   13740000
A00028   EQU   MSG190+00000000     12 BYTE(S)                           13750000
MSG109DV EQU   MSG190+00000012     8 BYTE(S)                            13760000
A00029   EQU   MSG190+00000020     1 BYTE(S)                            13770000
ONOROFF  EQU   MSG190+00000021     8 BYTE(S)                            13780000
ALORNOT  EQU   MSG190+00000029     11 BYTE(S)                           13790000
MSG179   EQU   00000000            39 BYTE(S) ON WORD                   13800000
A00030   EQU   MSG179+00000000     12 BYTE(S)                           13810000
MSG179I  EQU   MSG179+00000012     27 BYTE(S)                           13820000
MSG127   EQU   00000000            31 BYTE(S) ON WORD                   13830000
A00031   EQU   MSG127+00000000     12 BYTE(S)                           13840000
MSG127I  EQU   MSG127+00000012     19 BYTE(S)                           13850000
A00032   EQU   00000000            32 BYTE(S) ON WORD                   13860000
DVT      EQU   A00032+00000000     16 BYTE(S)                           13870000
DVTN     EQU   A00032+00000016     16 BYTE(S)                           13880000
SUM      EQU   @DATA+00000073      3  BYTE  POINTER ON WORD+1           13890000
SAVLOOKT EQU   @DATA+00000077      3  BYTE  POINTER ON WORD+1           13900000
PARMLIST EQU   @DATA+00000080      16 BYTE(S) ON WORD                   13910000
MODNAME  EQU   PARMLIST+00000000   8 BYTE(S)                            13920000
         ORG   PARMLIST+00000000                                        13930000
TCDSO    EQU   *                   1 BYTE(S)                            13940000
         DC    C'G'                                                     13950000
CDSDEV   EQU   PARMLIST+00000001   7 BYTE(S)                            13960000
TARGETAD EQU   PARMLIST+00000008   FULLWORD POINTER                     13970000
PARMFLGS EQU   PARMLIST+00000012   1 BYTE(S)                            13980000
A00033   EQU   PARMLIST+00000013   1 BYTE(S)                            13990000
CDSLNGTH EQU   PARMLIST+00000014   HALFWORD INTEGER                     14000000
COUNT    EQU   00000007            FULLWORD POINTER REGISTER            14010000
AVAILBLE EQU   @DATA+00000096      FULLWORD POINTER                     14020000
DEVTABLE EQU   00000000            56 BYTE(S)                           14030000
DEVAREA  EQU   @DATA+00000100      16 BYTE(S)                           14040000
FSTDEV   EQU   DEVAREA+00000000    4  BYTE  INTEGER                     14050000
FSTDEV2  EQU   DEVAREA+00000000    4 BYTE(S)                            14060000
HEX      EQU   DEVAREA+00000000    4 BYTE(S)                            14070000
FINDEV   EQU   DEVAREA+00000004    4  BYTE  INTEGER                     14080000
FINDEV2  EQU   DEVAREA+00000004    4 BYTE(S)                            14090000
LOOPPTR  EQU   @DATA+00000116      FULLWORD POINTER                     14100000
A00034   EQU   00000000            56 BYTE(S)                           14110000
A00035   EQU   A00034+00000000     32 BYTE(S)                           14120000
HXADDR   EQU   A00034+00000032     4 BYTE(S)                            14130000
A00036   EQU   A00034+00000036     8 BYTE(S)                            14140000
SYMBNM   EQU   A00034+00000044     8 BYTE(S)                            14150000
NEWADDR  EQU   @DATA+00000120      4 BYTE(S)                            14160000
LIMIT    EQU   @DATA+00000124      HALFWORD INTEGER                     14170000
X        EQU   @DATA+00000126      HALFWORD INTEGER                     14180000
UNITCTR  EQU   X+00000000          HALFWORD INTEGER                     14190000
A00037   EQU   X+00000000          1 BYTE(S)                            14200000
UNITCTR1 EQU   X+00000001          1 BYTE(S)                            14210000
ERRCODE  EQU   @DATA+00000128      2 BYTE(S)                            14220000
         ORG   @DATA+00000130                                           14230000
NUMBERS  EQU   *                   16 BYTE(S)                           14240000
         DC    C'0123456789ABCDEF'                                      14250000
NUMBER   EQU   00000000            1 BYTE(S)                            14260000
DEVAD    EQU   *                   8 BYTE(S)                            14270000
         DC    C'0000'                                                  14280000
         DC    00004C' '                                                14290000
DEVAD1   EQU   DEVAD+00000000      8 BYTE(S)                            14300000
SWITCHES EQU   @DATA+00000154      1 BYTE(S)                            14310000
FRSTPASS EQU   SWITCHES+00000000   1 BIT(S)                             14320000
UCBDVDSC EQU   00000016            4 BYTE(S)                            14330000
CDSENTRY EQU   00000000            20 BYTE(S)                           14340000
A00038   EQU   CDSENTRY+00000000   4 BYTE(S)                            14350000
DSCRPTRS EQU   CDSENTRY+00000004   4 BYTE(S)                            14360000
CHARCNTR EQU   @DATA+00000156      HALFWORD INTEGER                     14370000
         ORG   @DATA+00000158                                           14380000
EIGHT    EQU   *                   HALFWORD INTEGER                     14390000
         DC    FL2'8'                                                   14400000
BLANKFLD EQU   *                   8 BYTE(S)                            14410000
&T       SETA  00001                                                    14420000
.L099999 ANOP                                                           14430000
         DC    C' '                                                     14440000
         DC    00007C' '                                                14450000
SYMNAM   EQU   @DATA+00000168      8 BYTE(S)                            14460000
IGNORE   EQU   @DATA+00000176      HALFWORD INTEGER                     14470000
OFLGS    EQU   00000048            8 BIT(S) ON BYTE                     14480000
DDDUMMY  EQU   00000017            1 BYTE(S)                            14490000
         ORG   @DATA                                                    14500000
         DS    00000192C                                                14510000
@TEMPS   DS    0F                                                       14520000
@TEMP3   DC    F'0'                                                     14530000
@TEMP4   DC    F'0'                                                     14540000
         CNOP  0,4                                                      14550000
CNVRT1   DC    B'00000000'                                              14560000
         DC    AL1(2)                                                   14570000
         DC    CL2'41'                                                  14580000
         DC    A(DEVAD)                                                 14590000
         DC    A(HEX)                                                   14600000
C0021    DC    AL2(8+0)                                          21050  14610000
         CNOP  0,4                                                      14620000
CNVRT2   DC    B'00000000'                                              14630000
         DC    AL1(2)                                                   14640000
         DC    CL2'41'                                                  14650000
         DC    A(DEVAD)                                                 14660000
         DC    A(FINDEV2)                                               14670000
C0022    DC    AL2(8+0)                                          21050  14680000
         CNOP  0,4                                                      14690000
CNVRT3   DC    B'00000000'                                              14700000
         DC    AL1(2)                                                   14710000
         DC    CL2'41'                                                  14720000
         DC    A(FSTDEV2)                                               14730000
         DC    A(DEVAD)                                                 14740000
C0023    DC    AL2(4+32768)                                             14750000
DEVCOM   IFDCOM                                                         14760000
SCT      EQU   CHASCT+00000000     20 BYTE(S) ON WORD                   14770000
HEADER   EQU   SCT+00000000        8 BYTE(S)                            14780000
PRIDVSCT EQU   SCT+00000008        12 BYTE(S)                           14790000
OLTEPSW  EQU   CESWT+00000000      1 BYTE(S) ON WORD                    14800000
A00002   EQU   OLTEPSW+00000000    4 BIT(S)                             14810000
LEGALDEV EQU   OLTEPSW+00000000    1 BIT(S)                             14820000
REINT    EQU   OLTEPSW+00000000    1 BIT(S)                             14830000
OLTEPSW2 EQU   CESWT2+00000000     1 BYTE(S) ON WORD                    14840000
A00003   EQU   OLTEPSW2+00000000   3 BIT(S)                             14850000
CHANTEST EQU   OLTEPSW2+00000000   1 BIT(S)                             14860000
A00004   EQU   OLTEPSW2+00000000   1 BIT(S)                             14870000
NDR      EQU   OLTEPSW2+00000000   1 BIT(S)                             14880000
OLTEPSW7 EQU   CESWT7+00000000     1 BYTE(S) ON WORD                    14890000
INCLST   EQU   OLTEPSW7+00000000   1 BIT(S)                             14900000
RETTO31  EQU   OLTEPSW7+00000000   1 BIT(S)                             14910000
REMOTE   EQU   OLTEPSW7+00000000   1 BIT(S)                             14920000
LOADCDS  EQU   OLTEPSW7+00000000   1 BIT(S)                             14930000
OLTEPSW9 EQU   CESWT9+00000000     1 BYTE(S) ON WORD                    14940000
A00005   EQU   OLTEPSW9+00000000   5 BIT(S)                             14950000
MIXDEV   EQU   OLTEPSW9+00000000   1 BIT(S)                             14960000
A00006   EQU   OLTEPSW9+00000000   2 BIT(S)                             14970000
A00007   EQU   CESWTR+00000000     1 BYTE(S)                            14980000
RETAINAC EQU   A00007+00000000     1 BIT(S)                             14990000
A00008   EQU   A00007+00000000     1 BIT(S)                             15000000
REMNOMSG EQU   A00007+00000000     1 BIT(S)                             15010000
A00009   EQU   A00007+00000000     5 BIT(S)                             15020000
A00010   EQU   CESWTR1+00000000    1 BYTE(S)                            15030000
A00011   EQU   A00010+00000000     5 BIT(S)                             15040000
REMANS   EQU   A00010+00000000     1 BIT(S)                             15050000
A00012   EQU   A00010+00000000     2 BIT(S)                             15060000
A00013   EQU   CESWTR2+00000000    1 BYTE(S)                            15070000
A00014   EQU   A00013+00000000     2 BIT(S)                             15080000
ONCOMM   EQU   A00013+00000000     1 BIT(S)                             15090000
A00015   EQU   A00013+00000000     4 BIT(S)                             15100000
DPMSGREI EQU   A00013+00000000     1 BIT(S)                             15110000
SVCPLIST EQU   ROPT-00000004       16 BYTE(S) ON WORD                   15120000
A00016   EQU   SVCPLIST+00000000   2 BYTE(S)                            15130000
MODNUM   EQU   SVCPLIST+00000002   2 BYTE(S)                            15140000
ADDRDEV  EQU   SVCPLIST+00000004   FULLWORD POINTER                     15150000
ENTRIES  EQU   SVCPLIST+00000008   FULLWORD INTEGER                     15160000
SVCSAPTR EQU   SVCPLIST+00000012   FULLWORD POINTER                     15170000
@DATEND  EQU   *                                                        15180000
@9FD     EQU   CECDEV19                                                 15190000
@9F9     EQU   CECDEV03                                                 15200000
@9E1     EQU   CECDEV39                                                 15210000
         END    ,(C'PL/S',1400,75339)                                   15220000
./  ADD  SSI=80450066,NAME=IFDOLT32
         TITLE 'IFDOLT32 TEST DECODE'                                   00010000
         TITLE 'IFDOLT32 TEST DECODE'                                   00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT32 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT32 14 FEB 78'                             0002  00070000
         STM   @E,@C,12(@D)                                       0002  00080000
         BALR  @B,0                                               0002  00090000
@PSTART  DS    0H                                                 0002  00100000
         USING @PSTART+00000,@B                                   0002  00110000
         ST    @D,@SAV001+4                                       0002  00120000
         LA    @F,@SAV001                                         0002  00130000
         ST    @F,8(0,@D)                                         0002  00140000
         LR    @D,@F                                              0002  00150000
*         GEN(USING CHASCT,2);                                          00160000
         USING CHASCT,2                                                 00170000
         DS    0H                                                       00180000
*         GENERATE DATA;                                                00190000
*         /************************************************************ 00200000
*         /*                        REGISTERS                         * 00210000
*         /************************************************************ 00220000
*         DCL R1 REG(1) PTR(31);         /* REGISTER 1.               * 00230000
*         DCL R2 REG(2) PTR(31);         /* REGISTER 2.               * 00240000
*         DCL I REG(3) PTR(24);          /* REGISTER 3.               * 00250000
*         DCL RETCODE REG(3) PTR(24);    /* REGISTER 3.               * 00260000
*         DCL R5 REG(5) PTR(31);         /* REGISTER 5.               * 00270000
*         DCL R6 REG(6) PTR(31);         /* REGISTER 6.               * 00280000
*         DCL R7 REG(7) PTR(31);         /* REGISTER 7.               * 00290000
*         DCL SECCNTR REG(7) PTR(24);    /* REGISTER 7.               * 00300000
*         DCL R8 REG(8) PTR(31);         /* REGISTER 8.               * 00310000
*         DCL R13 REG(13) PTR(31);       /* REGISTER 13.              * 00320000
*         DCL R14 REG(14) PTR(31);       /* REGISTER 14.              * 00330000
*         DCL RC REG(15) PTR(24);        /* REGISTER 15.              * 00340000
*         DCL R15 REG(15) PTR(31);       /* REGISTER 15.              * 00350000
*         /************************************************************ 00360000
*         /*                       SAVE AREAS                         * 00370000
*         /************************************************************ 00380000
*         DCL 1 MYSAVE BASED(R13),                                      00390000
*               3 * CHAR(4),                                            00400000
*               3 YOURR13 PTR(31);                                      00410000
*         DCL 1 YOURSAVE BASED(YOURR13),                                00420000
*               3 * CHAR(12),                                           00430000
*               3 YOURR14 PTR(31);                                      00440000
*         /************************************************************ 00450000
*         /*                  SECTION CONTROL TABLE                   * 00460000
*         /************************************************************ 00470000
*         DCL CHASCT CHAR(88) GENERATED;                                00480000
*         DCL 1 SCT BASED(ADDR(CHASCT)), /*--------SCT FORMAT---------* 00490000
*               3 * CHAR(4),             /* NOT LOOKED AT.            * 00500000
*               3 RTNFLDXX CHAR(2),      /* NORMAL ROUTINE SELECTION  * 00510000
*                                        /* FIELD.                    * 00520000
*               3 * CHAR(27),            /* NOT LOOKED AT.            * 00530000
*               3 EXPGMFLG CHAR(1),      /* EXECUTIVE PROGRAM FLAGS.  * 00540000
*                 5 * BIT(2),            /* NOT LOOKED AT.            * 00550000
*                 5 RTNSLCTN BIT(1),     /* ROUTINES SELECTED FLAG.   * 00560000
*               3 * CHAR(6),             /* NOT LOOKED AT.            * 00570000
*               3 EXPANDED CHAR(30);     /* EXPANDED ROUTINE SELECTION* 00580000
*                                        /* FIELD.                    * 00590000
*         /************************************************************ 00600000
*         /*                        MESSAGES                          * 00610000
*         /************************************************************ 00620000
*         DCL IFDMSG32 LABEL NONLOCAL EXTERNAL;                         00630000
*         DCL 1 MSGPTR BASED(R1),        /* MESSAGE POINTERS.         * 00640000
*               3 MSGPTR12 PTR(31),      /* POINTER TO MESSAGE IFD112I* 00650000
*               3 MSGPTR61 PTR(31),      /* POINTER TO MESSAGE IFD161I* 00660000
*               3 MSGPTR55 PTR(31);      /* POINTER TO MESSAGE IFD155I* 00670000
*         DCL 1 MSG112 CHAR(41) BASED(R1),/* MESSAGE IFD112I FORMAT.  * 00680000
*               3 * CHAR(4),             /* LENGTH AND FLAGS.         * 00690000
*               3 MSG112I CHAR(37);      /* MESSAGE TEXT.             * 00700000
*         /************************************************************ 00710000
*         /*                      SECTION LIST                        * 00720000
*         /************************************************************ 00730000
*         DCL SECLST CHAR(138) GENERATED;                               00740000
*         DCL 1 SECLIST BASED(ADDR(SECLST)),/*---SECLST FORMAT--------* 00750000
*               3 NUMENTRY FIXED(15),    /* NUMBER OF SECTIONS IN LIST* 00760000
*               3 PREFIXID CHAR(5),      /* PREFIX AND TEST TYPE.     * 00770000
*                 5 PREFIX CHAR(1),      /* TEST PREFIX.              * 00780000
*                 5 ID CHAR(4),          /* TEST ID OR TEST TYPE.     * 00790000
*               3 SECLST7 CHAR(5);       /* ENTRIES BEGIN HERE.       * 00800000
*         DCL 1 SECLSTXX BASED(R8),      /*-------ENTRY FORMAT--------* 00810000
*               3 TSTSECTN CHAR(3),      /* SECTION NAME.             * 00820000
*                 5 TSTSCTN3 CHAR(3),    /* SECTION NAME OF LENGTH 3. * 00830000
*                   7 TSTSCTN2 CHAR(2),  /* SECTION NAME OF LENGTH 2. * 00840000
*                     8 TSTSCTN1 CHAR(1),/* SECTION NAME OF LENGTH 1. * 00850000
*               3 SECLNGTH CHAR(2);      /* LENGTH OF SECTION.        * 00860000
*         DCL 1 DOUBLEWD BDY(DWORD) CHAR(8),                            00870000
*               3 SAVR14 PTR(31);                                       00880000
*         DCL LET1PTR PTR(31);      /* POINTER TO LETTER IN ALPHABET */ 00890000
*                                   /* THAT MATCHES LAST LETTER IN   */ 00900000
*                                   /* FSTSEC.                       */ 00910000
*         DCL LET2PTR PTR(31);                                          00920000
*         DCL LET3PTR PTR(31);                                          00930000
*         DCL J FIXED(15);                                              00940000
*         DCL ALPHABET CHAR(26)                                         00950000
*            INITIAL('ABCDEFGHIJKLMNOPQRSTUVWXYZ');                     00960000
*         DCL LETTER CHAR(1) BASED(R6);                                 00970000
*         DCL NUMBERS CHAR(10) INITIAL('0123456789');                   00980000
*         DCL NUMBER CHAR(1) BASED(R6);                                 00990000
*         DCL 1 SWITCHES CHAR(1) INITIAL('00'X),                        01000000
*               3 SECTIONS BIT(3),                                      01010000
*                 5 SECT1 BIT(1),   /* TEST SECTION OF LENGTH 1 */      01020000
*                 5 SECT2 BIT(1),   /* TEST SECTION OF LENGTH 2 */      01030000
*                 5 SECT3 BIT(1),   /* TEST SECTION OF LENGTH 3 */      01040000
*               3 EXPFLG BIT(1),                                        01050000
*               3 DUBNUM BIT(1),                                        01060000
*               3 TRINUM BIT(1);                                        01070000
*         DCL 1 FSTSEC CHAR(3),                                         01080000
*               3 * CHAR(1),                                            01090000
*               3 FSTSEC1 CHAR(2),                                      01100000
*                 5 FSTSECT1 CHAR(1),                                   01110000
*                 5 FSTSEC2 CHAR(1);                                    01120000
*         DCL 1 LSTSEC CHAR(3),                                         01130000
*               3 * CHAR(1),                                            01140000
*               3 LSTSEC1 CHAR(2),                                      01150000
*                 5 * CHAR(1),                                          01160000
*                 5 LSTSEC2 CHAR(1);                                    01170000
*         DCL ERRCODE CHAR(2);                                          01180000
*         DCL INPUTBUF CHAR(4) BASED(R5);                               01190000
*         DCL SOSPBUF CHAR(6) BASED(R5);/* SOSP CHAR BUFFER      M4833* 01200000
*         DCL RTNFIELD CHAR(1) BASED(R7);                               01210000
*         DCL PGMTAB CHAR(8) GENERATED;                                 01220000
*         DCL PGMTBL CHAR(8) BASED(ADDR(PGMTAB));                       01230000
*         DCL INBUFPTR PTR(31) GENERATED;                               01240000
*         DCL REDEFINE PTR(31) GENERATED;                               01250000
*         DCL ADSVAREA PTR(31) GENERATED;                               01260000
*         DCL HRTSEL FIXED(15) GENERATED;                               01270000
*         DCL UNITUSE CHAR(1) GENERATED;                                01280000
*         DCL SECTUSE CHAR(1) GENERATED;                                01290000
*         /************************************************************ 01300000
*         /*                        SWITCHES                          * 01310000
*         /************************************************************ 01320000
*         DCL CESWT CHAR(1) GENERATED;                                  01330000
*         DCL 1 OLTEPSW CHAR(1) BASED(ADDR(CESWT)),                     01340000
*               3 LEGALTST BIT(1),                                      01350000
*               3 * BIT(4),                                             01360000
*               3 REINT BIT(1);                                         01370000
*         DCL CESWT1 CHAR(1) GENERATED;                                 01380000
*         DCL 1 OLTEPSW1 CHAR(1) BASED(ADDR(CESWT1)),                   01390000
*               3 RTNFLD BIT(1);                                        01400000
*         RESTRICT(2,3,5,6,7,8,9);                                      01410000
*         R5=INBUFPTR+1;            /* GET INBUFR POINTER */            01420000
         LA    @5,1                                               0057  01430000
         A     @5,INBUFPTR                                        0057  01440000
*         IF INPUTBUF(1)¬='/' THEN  /* IS THE CHAR IN INBUFR+0 A /. */  01450000
         CLI   0(@5),C'/'                                         0058  01460000
*           GO TO CECTST04;         /* NO, CONTINUE TO DECODE */        01470000
         BC    07,CECTST04                                        0059  01480000
*         IF LEGALTST='1'B THEN     /* WAS THERE A LEGAL TEST ENTRY */  01490000
         TM    OLTEPSW,B'10000000'                                0060  01500000
*           GO TO CECTST99;         /* YES, RETURN TO CALLER        */  01510000
         BC    01,CECTST99                                        0061  01520000
*         ERRCODE='04';             /* NO, SET ERROR CODE -04- IN */    01530000
         MVC   ERRCODE(2),@C3                                     0062  01540000
*                                   /* ERROR MESSAGE IFD112I AND  */    01550000
*                                   /* RETURN TO REDEFINE TEST    */    01560000
*         RESTRICT(1);                                                  01570000
* CECTST03:                                                             01580000
*         /************************************************************ 01590000
*         /*                                                          * 01600000
*         /*          PWTO MESSAGES IFD112I AND IFD161I               * 01610000
*         /*                                                          * 01620000
*         /************************************************************ 01630000
*         R1=ADDR(IFDMSG32);        /* GET POINTER TO MESSAGE MODULE  * 01640000
CECTST03 L     @4,@V1              ADDRESS OF IFDMSG32            0064  01650000
         LR    @1,@4                                              0064  01660000
*         R1=MSGPTR12;              /* GET POINTER TO MESSAGE IFD112I.* 01670000
         L     @1,0(0,@1)                                         0065  01680000
*         MSG112I(35:36)=ERRCODE;  /* PUT ERROR CODE IN MSG.     21051* 01690000
         MVC   38(2,@1),ERRCODE                                   0066  01700000
*         GEN(PWTO  REG=(1));       /* PRINT MESSAGE.                 * 01710000
         PWTO  REG=(1)                                                  01720000
         DS    0H                                                       01730000
*         R1=ADDR(IFDMSG32);        /* GET POINTER TO MESSAGE MODULE  * 01740000
         LR    @1,@4                                              0068  01750000
*         R1=MSGPTR61;              /* GET POINTER TO MESSAGE IFD161I * 01760000
         L     @1,4(0,@1)                                         0069  01770000
*         RELEASE(1);                                                   01780000
*         GEN(PWTO  REG=(1));       /* PRINT MESSAGE.                 * 01790000
         PWTO  REG=(1)                                                  01800000
         DS    0H                                                       01810000
*         YOURR14=REDEFINE;         /* CHANGE RETURN POINT SO THAT */   01820000
         L     @1,4(0,@D)                                         0072  01830000
         MVC   12(4,@1),REDEFINE                                  0072  01840000
*                                   /* TEST CAN BE REDEFINED.      */   01850000
*         RETURN;                   /* RETURN TO CALLER. */             01860000
         BC    15,@EL01                                           0073  01870000
* CECTST04:                                                             01880000
*         /************************************************************ 01890000
*         /*                                                          * 01900000
*         /*                DECODE THE TESTS ENTERED                  * 01910000
*         /*                                                          * 01920000
*         /************************************************************ 01930000
*         SECTUSE='00'X;            /* CLEAR SECTIONS-USED COUNTER */   01940000
CECTST04 MVI   SECTUSE,X'00'                                      0074  01950000
*         UNITUSE='00'X;            /* CLEAR UNIT USE COUNTER. */       01960000
         MVI   UNITUSE,X'00'                                      0075  01970000
*         SECLST(1)=' ';            /* INITIALIZE SECLST AREA. */       01980000
         MVI   SECLST,C' '                                        0076  01990000
*         SECLST(2:138)=SECLST(1:137);                                  02000000
         MVC   SECLST+1(137),SECLST                               0077  02010000
*         REINT='1'B;               /* SET REINT INDICATOR ON */        02020000
         OI    OLTEPSW,B'00000100'                                0078  02030000
*         LEGALTST='0'B;            /* CLEAR LEGALTST INDICATOR */      02040000
         NI    OLTEPSW,B'01111111'                                0079  02050000
*         RTNFLD='0'B;              /* CLEAR ROUTINE FIELD INDICATOR */ 02060000
         NI    OLTEPSW1,B'01111111'                               0080  02070000
*         RTNSLCTN='0'B;            /* CLEAR ROUTINES SELECTED BIT IN * 02080000
         NI    SCT+33,B'11011111'                                 0081  02090000
*                                   /* EXECUTIVE PROGRAM FLAGS.       * 02100000
*         RTNFLDXX=RTNFLDXX&&RTNFLDXX; /* CLEAR ROUTINE FIELDS OF */    02110000
         XC    SCT+4(2),SCT+4                                     0082  02120000
*                                      /* SCT(NORMAL & EXPANDED)  */    02130000
*         EXPANDED=EXPANDED&&EXPANDED;                                  02140000
         XC    SCT+40(30),SCT+40                                  0083  02150000
*         SECCNTR=0;                /* INITIALIZE SECTION COUNTER. */   02160000
         SR    @7,@7                                              0084  02170000
*         R8=ADDR(SECLST7);         /* INITIALIZE REG. 8. */            02180000
         LA    @8,SECLIST+7                                       0085  02190000
*         PREFIX='T';               /* DEFAULT PREFIX IS T */           02200000
         MVI   SECLIST+2,C'T'                                     0086  02210000
*         IF INPUTBUF(1)='T'|       /* IS THE TYPE OF ROOT MODULE */    02220000
*            INPUTBUF(1)='P'|       /* PRESENT. YES, SET PREFIX   */    02230000
*            INPUTBUF(1)='N'|       /* EQUAL TO IT AND INCREMENT  */    02240000
*            INPUTBUF(1)='R' THEN   /* INBUFR PTR BY ONE. NO, USE */    02250000
         CLI   0(@5),C'T'                                         0087  02260000
         BC    08,@9FF                                            0087  02270000
         CLI   0(@5),C'P'                                         0087  02280000
         BC    08,@9FE                                            0087  02290000
         CLI   0(@5),C'N'                                         0087  02300000
         BC    08,@9FD                                            0087  02310000
         CLI   0(@5),C'R'                                         0087  02320000
         BC    07,@9FC                                            0087  02330000
*            DO;                    /* THE DEFAULT PREFIX         */    02340000
@9FD     EQU   *                                                  0088  02350000
@9FE     EQU   *                                                  0088  02360000
*           PREFIX=INPUTBUF(1);                                         02370000
@9FF     MVC   SECLIST+2(1),0(@5)                                 0089  02380000
*            R5=R5+1;                                                   02390000
         AH    @5,@D1                                             0090  02400000
*            END;                                                       02410000
*         IF SOSPBUF='SOSPC/' THEN      /*SOSPC IN TEST FIELD @ZA29758* 02420000
@9FC     CLC   0(6,@5),@C11                                       0092  02430000
*           GO TO CECTST13;             /* GOOD TEST ENTRY       M4833* 02440000
         BC    08,CECTST13                                        0093  02450000
* CECTST11:                                                             02460000
*         /************************************************************ 02470000
*         /*                                                          * 02480000
*         /*                   IS TEST ID NUMERIC                     * 02490000
*         /*                                                          * 02500000
*         /************************************************************ 02510000
*         DO J=1 TO 4;              /* ARE ALL CHARACTERS IN */         02520000
CECTST11 LA    @F,1                                               0094  02530000
         STH   @F,J                                               0094  02540000
*         R6=ADDR(NUMBERS);         /* ID NUMERIC. NO, SET   */         02550000
@DO9FB   LA    @6,NUMBERS                                         0095  02560000
*           DO I=10 TO 1 BY -1;     /* ERROR CODE TO -05-    */         02570000
         LA    @3,10                                              0096  02580000
*           IF INPUTBUF(J)=NUMBER THEN /* AND PRINT ERROR    */         02590000
@DO9F7   LH    @1,J                                               0097  02600000
         LA    @A,0(@1,@5)                                        0097  02610000
         BCTR  @A,0                                               0097  02620000
         CLC   0(1,@A),0(@6)                                      0097  02630000
*             GO TO CECTST12;          /* MESSAGE IFD112I    */         02640000
         BC    08,CECTST12                                        0098  02650000
*           R6=R6+1;                /* YES, CONTINUE TO      */         02660000
         AH    @6,@D1                                             0099  02670000
*           END;                    /* DECODE                */         02680000
*         ERRCODE='05';                                                 02690000
         BCT   @3,@DO9F7                                          0100  02700000
         MVC   ERRCODE(2),@C12                                    0101  02710000
*         GO TO CECTST03;                                               02720000
         BC    15,CECTST03                                        0102  02730000
* CECTST12:                                                             02740000
*         END;                                                          02750000
* CECTST13:                                                             02760000
*         /************************************************************ 02770000
*         /*                                                          * 02780000
*         /*       DECODE SECTIONS ENTERED, IF THERE ARE ANY.         * 02790000
*         /*       IF NONE ARE ENTERED, USE DEFAULT RANGE A-Z.        * 02800000
*         /*                                                          * 02810000
*         /************************************************************ 02820000
*         ID=INPUTBUF;              /* SAVE ID */                       02830000
CECTST12 LH    @F,J                                               0103  02840000
         AH    @F,@D1                                             0103  02850000
@DO9FA   STH   @F,J                                               0103  02860000
         CH    @F,@D2                                             0103  02870000
         BC    12,@DO9FB                                          0103  02880000
CECTST13 MVC   SECLIST+3(4),0(@5)                                 0104  02890000
*         R5=R5+4;                  /* INCREMENT INBUFR POINTER BY 4 */ 02900000
         AH    @5,@D2                                             0105  02910000
*         IF INPUTBUF(1)='/' THEN   /* IS CHAR IN INBUFR+0 A SLASH.*/   02920000
         CLI   0(@5),C'/'                                         0106  02930000
         BC    07,@9F3                                            0106  02940000
*           DO;                     /* YES, SET BIT INDICATING    */    02950000
*           SECTIONS='100'B;        /* TEST SECTION HAS A LENGTH  */    02960000
         OI    SWITCHES,B'10000000'                               0108  02970000
         NI    SWITCHES,B'10011111'                               0108  02980000
*                                   /* OF ONE & SET DEFAULT RANGE */    02990000
*           FSTSEC='  A';           /* OF SECTIONS A-Z & SET      */    03000000
         MVC   FSTSEC(3),@C14                                     0109  03010000
*           LSTSEC='  Z';           /* POINTER 1 TO ADDRESS OF 1ST*/    03020000
         MVC   LSTSEC(3),@C15                                     0110  03030000
*           LET1PTR=ADDR(ALPHABET); /* LETTER IN ALPHABET & GO TO */    03040000
         LA    @F,ALPHABET                                        0111  03050000
         ST    @F,LET1PTR                                         0111  03060000
*           GO TO CECTST29;         /* ROUTINE THAT BUILDS SECLST */    03070000
         BC    15,CECTST29                                        0112  03080000
*           END;                                                        03090000
* CECTST14:                                                             03100000
*         /************************************************************ 03110000
*         /*                                                          * 03120000
*         /*              DECODE THE ENTERED SECTIONS                 * 03130000
*         /*                                                          * 03140000
*         /************************************************************ 03150000
*         FSTSEC='   ';             /* INITIALIZE CONSTANTS */          03160000
@9F3     EQU   *                                                  0114  03170000
CECTST14 MVC   FSTSEC(3),@C16                                     0114  03180000
*         LSTSEC=FSTSEC;            /* TO DECODE SECTIONS   */          03190000
         MVC   LSTSEC(3),FSTSEC                                   0115  03200000
*         R6=ADDR(ALPHABET);        /* IS THE CHAR. IN INBUFR */        03210000
         LA    @6,ALPHABET                                        0116  03220000
*         DO I=26 TO 1 BY -1;       /* ALPHABETIC. YES, SET   */        03230000
         LA    @3,26                                              0117  03240000
*           IF INPUTBUF(1)=LETTER THEN /* POINTER TO IT AND */          03250000
@DO9F2   CLC   0(1,@5),0(@6)                                      0118  03260000
         BC    07,@9EE                                            0118  03270000
*             DO;                   /* CONTINUE DECODING. NO  */        03280000
*             LET1PTR=R6;           /* SET ERROR CODE -06- AND*/        03290000
         ST    @6,LET1PTR                                         0120  03300000
*             GO TO CECTST15;       /* PRINT ERROR MESSAGE    */        03310000
         BC    15,CECTST15                                        0121  03320000
*             END;                  /* IFD112I                */        03330000
*           R6=R6+1;                                                    03340000
@9EE     AH    @6,@D1                                             0123  03350000
*         END;                                                          03360000
*         GO TO CECTST05;                                               03370000
         BCT   @3,@DO9F2                                          0124  03380000
         BC    15,CECTST05                                        0125  03390000
* CECTST15:/* DOES SECTION NAME HAVE LENGTH TWO */                      03400000
*         SECTIONS='000'B;          /* CLEAR BITS THAT INDICATE THE */  03410000
CECTST15 NI    SWITCHES,B'00011111'                               0126  03420000
*                                   /* LENGTH OF THE TEST SECTION   */  03430000
*         R6=ADDR(ALPHABET);        /* IS THE CHAR IN INBUFR+1 */       03440000
         LA    @6,ALPHABET                                        0127  03450000
*         DO I=26 TO 1 BY -1;       /* ALPHABETIC. YES, SET A  */       03460000
         LA    @3,26                                              0128  03470000
*           IF INPUTBUF(2)=LETTER THEN /* POINTER TO IT AND CONTINUE*/  03480000
@DO9ED   CLC   1(1,@5),0(@6)                                      0129  03490000
         BC    07,@9E9                                            0129  03500000
*             DO;                   /* TO DECODE.              */       03510000
*             LET2PTR=LET1PTR;                                          03520000
         MVC   LET2PTR(4),LET1PTR                                 0131  03530000
*             LET1PTR=R6;                                               03540000
         ST    @6,LET1PTR                                         0132  03550000
*             GO TO CECTST21;                                           03560000
         BC    15,CECTST21                                        0133  03570000
*             END;                                                      03580000
*           R6=R6+1;                                                    03590000
@9E9     AH    @6,@D1                                             0135  03600000
*         END;                                                          03610000
*         SECT1='1'B;               /* NO, SET BIT INDICATING TEST */   03620000
         BCT   @3,@DO9ED                                          0136  03630000
         OI    SWITCHES,B'10000000'                               0137  03640000
*                                   /* SECTION OF LENGTH ONE       */   03650000
*         FSTSEC2=INPUTBUF(1);      /* RETAIN SECTION NAME. */          03660000
         MVC   FSTSEC+2(1),0(@5)                                  0138  03670000
*         IF INPUTBUF(2)='-' THEN   /* IS THE CHAR. IN INBUFR+1 */      03680000
         CLI   1(@5),C'-'                                         0139  03690000
*           GO TO CECTST17;         /* A HYPHEN. YES,CONTINUE   */      03700000
         BC    08,CECTST17                                        0140  03710000
*                                   /* DECODING. NO, SET LAST   */      03720000
* CECTST16:/* ROUTINE FOR INCLUSIVE SECTIONS OF LENGTH ONE */           03730000
*         LSTSEC2=INPUTBUF(1);      /* SECTION EQUAL TO FIRST  */       03740000
CECTST16 MVC   LSTSEC+2(1),0(@5)                                  0141  03750000
*                                   /* SECTION                  */      03760000
*         R5=R5+1;                  /* INCREMENT INBUFR PTR */          03770000
         AH    @5,@D1                                             0142  03780000
*         GO TO CECTST29;           /* GO TO ROUTINE THAT */            03790000
         BC    15,CECTST29                                        0143  03800000
*                                   /* BUILDS SECLST      */            03810000
* CECTST17:                                                             03820000
*         /************************************************************ 03830000
*         /*                                                          * 03840000
*         /*           IS A VALID INCLUSIVE RANGE ENTERED             * 03850000
*         /*                                                          * 03860000
*         /************************************************************ 03870000
*         R6=ADDR(ALPHABET);        /* IS THE CHAR. IN INBUFR+2 */      03880000
CECTST17 LA    @6,ALPHABET                                        0144  03890000
*         DO I=26 TO 1 BY -1;       /* ALPHABETIC. NO, SET ERROR*/      03900000
         LA    @3,26                                              0145  03910000
*           IF INPUTBUF(3)=LETTER THEN /* CODE 07 AND PRINT ERROR*/     03920000
@DO9E8   CLC   2(1,@5),0(@6)                                      0146  03930000
*             GO TO CECTST19;       /* MESSAGE IFD112I. YES,    */      03940000
         BC    08,CECTST19                                        0147  03950000
*           R6=R6+1;                /* CONTINUE TO DECODE       */      03960000
         AH    @6,@D1                                             0148  03970000
*         END;                                                          03980000
* CECTST18:                                                             03990000
*         /************************************************************ 04000000
*         /*                                                          * 04010000
*         /*            ERROR, INVALID RANGE OF SECTIONS              * 04020000
*         /*                                                          * 04030000
*         /************************************************************ 04040000
*         ERRCODE='07';                                                 04050000
         BCT   @3,@DO9E8                                          0149  04060000
CECTST18 MVC   ERRCODE(2),@C19                                    0150  04070000
*         GO TO CECTST03;                                               04080000
         BC    15,CECTST03                                        0151  04090000
* CECTST19:/* IS SECTION NAME OF INCLUSIVE RANGE LENGTH TWO */          04100000
*         R5=R5+2;                  /* INCREMENT INBUFR PTR */          04110000
CECTST19 AH    @5,@D3                                             0152  04120000
*         R6=ADDR(ALPHABET);        /* IS THE CHAR. IN INBUFR+1 */      04130000
         LA    @6,ALPHABET                                        0153  04140000
*         DO I=26 TO 1 BY -1;       /* ALPHABETIC. NO, GO TO    */      04150000
         LA    @3,26                                              0154  04160000
*           IF INPUTBUF(2)=LETTER THEN /* ROUTINE FOR INCLUSIVE */      04170000
@DO9E4   CLC   1(1,@5),0(@6)                                      0155  04180000
*             GO TO CECTST20;       /* SECTIONS OF LENGTH ONE   */      04190000
         BC    08,CECTST20                                        0156  04200000
*           R6=R6+1;                /* YES, CONTINUE TO DECODE  */      04210000
         AH    @6,@D1                                             0157  04220000
*         END;                                                          04230000
*         GO TO CECTST16;           /* CONTINUE DECODING. */            04240000
         BCT   @3,@DO9E4                                          0158  04250000
         BC    15,CECTST16                                        0159  04260000
* CECTST20:/* IS SECTION NAME OF INCLUSIVE RANGE LENGTH THREE */        04270000
*         R6=ADDR(ALPHABET);        /* IS THE CHAR. IN INBUFR+2 */      04280000
CECTST20 LA    @6,ALPHABET                                        0160  04290000
*         DO I=26 TO 1 BY -1;       /* ALPHABETIC. NO,GO TO     */      04300000
         LA    @3,26                                              0161  04310000
*           IF INPUTBUF(3)=LETTER THEN /* ROUTINE FOR INCLUSIVE */      04320000
@DO9E0   CLC   2(1,@5),0(@6)                                      0162  04330000
*             GO TO CECTST26;       /* SECTIONS OF LENGTH TWO   */      04340000
         BC    08,CECTST26                                        0163  04350000
*           R6=R6+1;                /* YES,GO TO ROUTINE FOR    */      04360000
         AH    @6,@D1                                             0164  04370000
*         END;                      /* INCLUSIVE SECTIONS OF    */      04380000
*         GO TO CECTST22;           /* LENGTH THREE.            */      04390000
         BCT   @3,@DO9E0                                          0165  04400000
         BC    15,CECTST22                                        0166  04410000
* CECTST21:/* DOES SECTION NAME HAVE LENGTH THREE */                    04420000
*         R6=ADDR(ALPHABET);        /* IS THE CHAR. IN INBUFR+2 */      04430000
CECTST21 LA    @6,ALPHABET                                        0167  04440000
*         DO I=26 TO 1 BY -1;       /* ALPHABETIC. YES, SET     */      04450000
         LA    @3,26                                              0168  04460000
*           IF INPUTBUF(3)=LETTER THEN /* POINTER TO IT AND     */      04470000
@DO9DC   CLC   2(1,@5),0(@6)                                      0169  04480000
         BC    07,@9D8                                            0169  04490000
*             DO;                   /* CONTINUE TO DECODE       */      04500000
*             LET3PTR=LET2PTR;                                          04510000
         MVC   LET3PTR(4),LET2PTR                                 0171  04520000
*             LET2PTR=LET1PTR;                                          04530000
         MVC   LET2PTR(4),LET1PTR                                 0172  04540000
*             LET1PTR=R6;                                               04550000
         ST    @6,LET1PTR                                         0173  04560000
*             GO TO CECTST25;                                           04570000
         BC    15,CECTST25                                        0174  04580000
*             END;                                                      04590000
*           R6=R6+1;                                                    04600000
@9D8     AH    @6,@D1                                             0176  04610000
*         END;                                                          04620000
*         SECTIONS='010'B;          /* NO, SET BIT INDICATING */        04630000
         BCT   @3,@DO9DC                                          0177  04640000
         OI    SWITCHES,B'01000000'                               0178  04650000
         NI    SWITCHES,B'01011111'                               0178  04660000
*                                   /* TEST SECTION OF LENGTH */        04670000
*                                   /* TWO & SAVE THE SECTION */        04680000
*         FSTSEC1=INPUTBUF(1:2);    /* IN FSTSEC.             */        04690000
         MVC   FSTSEC+1(2),0(@5)                                  0179  04700000
*         IF INPUTBUF(3)='-' THEN   /* IS CHAR. IN INBUFR+2 A -.*/      04710000
         CLI   2(@5),C'-'                                         0180  04720000
*           GO TO CECTST23;         /* YES, CONTINUE TO DECODE  */      04730000
         BC    08,CECTST23                                        0181  04740000
* CECTST22:/* ROUTINE FOR INCLUSIVE SECTIONS OF LENGTH TWO */           04750000
*         LSTSEC1=INPUTBUF(1:2);    /* PUT SECTION IN LSTSEC */         04760000
CECTST22 MVC   LSTSEC+1(2),0(@5)                                  0182  04770000
*         R5=R5+2;                  /* INCREMENT INBUFR POINTER */      04780000
         AH    @5,@D3                                             0183  04790000
*         GO TO CECTST29;           /* GO TO THE ROUTINE FOR */         04800000
         BC    15,CECTST29                                        0184  04810000
*                                   /* BUILDING SECLST       */         04820000
* CECTST23:/* IS INCLUSIVE RANGE VALID */                               04830000
*         R5=R5+3;                  /* INCREMENT INBUFR PTR */          04840000
CECTST23 AH    @5,@D4                                             0185  04850000
*         DO J=1 TO 2;              /* ARE THE CHAR. IN INBUFR AND */   04860000
         LA    @F,1                                               0186  04870000
         STH   @F,J                                               0186  04880000
*         R6=ADDR(ALPHABET);        /* INBUFR+1 ALPHABETIC. YES,   */   04890000
@DO9D7   LA    @6,ALPHABET                                        0187  04900000
*           DO I=26 TO 1 BY -1;     /* CONTINUE TO DECODE. NO, SET */   04910000
         LA    @3,26                                              0188  04920000
*             IF INPUTBUF(J)=LETTER THEN  /* ERROR CODE TO -07-    */   04930000
@DO9D3   LH    @1,J                                               0189  04940000
         LA    @A,0(@1,@5)                                        0189  04950000
         BCTR  @A,0                                               0189  04960000
         CLC   0(1,@A),0(@6)                                      0189  04970000
*               GO TO CECTST24;           /* AND PRINT ERROR       */   04980000
         BC    08,CECTST24                                        0190  04990000
*             R6=R6+1;                    /* MESSAGE IFD112I       */   05000000
         AH    @6,@D1                                             0191  05010000
*           END;                                                        05020000
*         GO TO CECTST18;                                               05030000
         BCT   @3,@DO9D3                                          0192  05040000
         BC    15,CECTST18                                        0193  05050000
* CECTST24:                                                             05060000
*         END;                                                          05070000
*         R6=ADDR(ALPHABET);        /* IS THE CHAR. IN INBUFR+2 */      05080000
CECTST24 LH    @F,J                                               0194  05090000
         AH    @F,@D1                                             0194  05100000
@DO9D6   STH   @F,J                                               0194  05110000
         CH    @F,@D3                                             0194  05120000
         BC    12,@DO9D7                                          0194  05130000
         LA    @6,ALPHABET                                        0195  05140000
*         DO I=26 TO 1 BY -1;       /* ALPHABETIC. YES,GO TO THE*/      05150000
         LA    @3,26                                              0196  05160000
*           IF INPUTBUF(3)=LETTER THEN /* ROUTINE FOR INCLUSIVE */      05170000
@DO9CF   CLC   2(1,@5),0(@6)                                      0197  05180000
*             GO TO CECTST26;       /* SECTIONS OF LENGTH THREE */      05190000
         BC    08,CECTST26                                        0198  05200000
*           R6=R6+1;                /* NO, SEE IF INPUTBUF(1:2) */      05210000
         AH    @6,@D1                                             0199  05220000
*         END;                      /* IS > FSTSEC+1. YES,      */      05230000
*         IF INPUTBUF(1:2)>FSTSEC1 THEN /* CONTINUE TO DECODE. NO, */   05240000
         BCT   @3,@DO9CF                                          0200  05250000
         CLC   0(2,@5),FSTSEC+1                                   0201  05260000
*           GO TO CECTST22;         /* SET ERROR CODE -07- AND  */      05270000
         BC    02,CECTST22                                        0202  05280000
*         GO TO CECTST18;           /* PRINT ERROR MESSAGE IFD112I*/    05290000
         BC    15,CECTST18                                        0203  05300000
* CECTST25:/* SECTION NAME OF LENGTH THREE */                           05310000
*         SECTIONS='001'B;          /* SET BIT TO INDICATE SECTION */   05320000
CECTST25 OI    SWITCHES,B'00100000'                               0204  05330000
         NI    SWITCHES,B'00111111'                               0204  05340000
*                                   /* NAME OF LENGTH THREE        */   05350000
*         FSTSEC=INPUTBUF(1:3);     /* SAVE SECTION NAME */             05360000
         MVC   FSTSEC(3),0(@5)                                    0205  05370000
*         IF INPUTBUF(4)='-' THEN   /* IS THE CHAR. IN INBUFR+3 A    */ 05380000
         CLI   3(@5),C'-'                                         0206  05390000
*           GO TO CECTST27;         /* HYPHEN. YES,CONTINUE TO DECODE * 05400000
         BC    08,CECTST27                                        0207  05410000
*                                   /* NO, GO TO ROUTINE THAT         * 05420000
*                                   /* BUILDS SECLST                  * 05430000
* CECTST26:/* ROUTINE FOR INCLUSIVE SECTIONS OF LENGTH THREE */         05440000
*         LSTSEC=INPUTBUF(1:3);     /* SET LSTSEC EQUAL TO SECTION*/    05450000
CECTST26 MVC   LSTSEC(3),0(@5)                                    0208  05460000
*                                   /* IN INBUFR                  */    05470000
*         R5=R5+3;                  /* INCREMENT INBUFR PTR */          05480000
         AH    @5,@D4                                             0209  05490000
*         GO TO CECTST29;           /* GO TO ROUTINE THAT */            05500000
         BC    15,CECTST29                                        0210  05510000
*                                   /* BUILDS SECLST      */            05520000
* CECTST27:/* IS SECTION NAME OF INCLUSIVE RANGE LENGTH THREE */        05530000
*          /* AND IS IT A VALID INCLUSIVE RANGE             */          05540000
*         R5=R5+4;                  /* INCREMENT INBUFR PTR */          05550000
CECTST27 AH    @5,@D2                                             0211  05560000
*         DO J=1 TO 3;              /* ARE THE CHAR. INBUFR,INBUFR+1 */ 05570000
         LA    @F,1                                               0212  05580000
         STH   @F,J                                               0212  05590000
*         R6=ADDR(ALPHABET);        /* AND INBUFR+2 ALPHABETIC. YES  */ 05600000
@DO9CB   LA    @6,ALPHABET                                        0213  05610000
*           DO I=26 TO 1 BY -1;     /* CONTINUE TO DECODE. NO,SET    */ 05620000
         LA    @3,26                                              0214  05630000
*             IF INPUTBUF(J)=LETTER THEN  /* ERROR CODE -07- AND     */ 05640000
@DO9C7   LH    @1,J                                               0215  05650000
         LA    @A,0(@1,@5)                                        0215  05660000
         BCTR  @A,0                                               0215  05670000
         CLC   0(1,@A),0(@6)                                      0215  05680000
*               GO TO CECTST28;           /* PRINT ERROR MESSAGE     */ 05690000
         BC    08,CECTST28                                        0216  05700000
*             R6=R6+1;                    /* IFD112I                 */ 05710000
         AH    @6,@D1                                             0217  05720000
*           END;                                                        05730000
*         GO TO CECTST18;                                               05740000
         BCT   @3,@DO9C7                                          0218  05750000
         BC    15,CECTST18                                        0219  05760000
* CECTST28:                                                             05770000
*         END;                                                          05780000
*         GO TO CECTST26;           /* GO TO ROUTINE FOR INCLUSIVE*/    05790000
CECTST28 LH    @F,J                                               0220  05800000
         AH    @F,@D1                                             0220  05810000
@DO9CA   STH   @F,J                                               0220  05820000
         CH    @F,@D4                                             0220  05830000
         BC    12,@DO9CB                                          0220  05840000
         BC    15,CECTST26                                        0221  05850000
*                                   /* SECTIONS OF LENGTH THREE.  */    05860000
* CECTST29:                                                             05870000
*         /************************************************************ 05880000
*         /*                                                          * 05890000
*         /*             ROUTINE FOR BUILDING SECLST                  * 05900000
*         /*                                                          * 05910000
*         /************************************************************ 05920000
*         IF FSTSEC>LSTSEC THEN     /* IS INCLUSIVE RANGE VALID.  */    05930000
CECTST29 CLC   FSTSEC(3),LSTSEC                                   0222  05940000
*           GO TO CECTST18;         /* NO, PRINT ERROR MESSAGE   */     05950000
         BC    02,CECTST18                                        0223  05960000
*                                   /* IFD112I WITH ERROR CODE 07.*/    05970000
*         IF SECCNTR=26 THEN        /* IS SECTION COUNTER 26. YES,*/    05980000
         CH    @7,@D5                                             0224  05990000
*           GO TO CECTST06;         /* FIND SLASH AND PRINT       */    06000000
         BC    08,CECTST06                                        0225  06010000
*                                   /* MESSAGE INDICATING MORE    */    06020000
*                                   /* THAN 26 SECTIONS SPECIFIED */    06030000
*         IF SECT1='1'B THEN        /* PUT SECTION NAME IN SECLST. */   06040000
         TM    SWITCHES,B'10000000'                               0226  06050000
         BC    12,@9C3                                            0226  06060000
*           TSTSCTN1=FSTSEC2;                                           06070000
         MVC   0(1,@8),FSTSEC+2                                   0227  06080000
*         IF SECT2='1'B THEN                                            06090000
@9C3     TM    SWITCHES,B'01000000'                               0228  06100000
         BC    12,@9C2                                            0228  06110000
*           TSTSCTN2=FSTSEC1;                                           06120000
         MVC   0(2,@8),FSTSEC+1                                   0229  06130000
*         IF SECT3='1'B THEN                                            06140000
@9C2     TM    SWITCHES,B'00100000'                               0230  06150000
         BC    12,@9C1                                            0230  06160000
*           TSTSCTN3=FSTSEC;                                            06170000
         MVC   0(3,@8),FSTSEC                                     0231  06180000
*         SECLNGTH=SECLNGTH&&SECLNGTH; /* ZERO SECTION LENGTH. */       06190000
@9C1     XC    3(2,@8),3(@8)                                      0232  06200000
*         SECCNTR=SECCNTR+1;        /* INCREMENT SECTION COUNTER */     06210000
         LA    @7,1(0,@7)                                         0233  06220000
*         R8=R8+5;                  /* UPDATE SECLST POINTER. */        06230000
         AH    @8,@D6                                             0234  06240000
*         IF LSTSEC=FSTSEC THEN     /* HAS THIS BEEN FULLY DECODED */   06250000
         CLC   LSTSEC(3),FSTSEC                                   0235  06260000
*           GO TO CECTST34;         /* YES, CONTINUE TO DECODE */       06270000
         BC    08,CECTST34                                        0236  06280000
*         IF SECT1¬='1'B THEN       /* DOES THE SECTION NAME HAVE */    06290000
         TM    SWITCHES,B'10000000'                               0237  06300000
*           GO TO CECTST31;         /* LENGTH ONE. NO, FIND HOW   */    06310000
         BC    12,CECTST31                                        0238  06320000
*                                   /* LONG IT IS.                */    06330000
*         IF FSTSEC2='Z' THEN       /* YES, SEE IF AN UPDATE MUST */    06340000
         CLI   FSTSEC+2,C'Z'                                      0239  06350000
         BC    07,@9C0                                            0239  06360000
*           DO;                     /* OCCUR.  YES, PERFORM UPDATE*/    06370000
*           SECTIONS='010'B;        /* NO, CONTINUE.              */    06380000
         OI    SWITCHES,B'01000000'                               0241  06390000
         NI    SWITCHES,B'01011111'                               0241  06400000
*           FSTSEC=' AA';                                               06410000
         MVC   FSTSEC(3),@C23                                     0242  06420000
*           LET1PTR=ADDR(ALPHABET);                                     06430000
         LA    @F,ALPHABET                                        0243  06440000
         ST    @F,LET1PTR                                         0243  06450000
*           LET2PTR=LET1PTR;                                            06460000
         MVC   LET2PTR(4),LET1PTR                                 0244  06470000
*           GO TO CECTST29;                                             06480000
         BC    15,CECTST29                                        0245  06490000
*           END;                                                        06500000
* CECTST30:/* UPDATE POINTER TO LAST LETTER IN SECTION NAME */          06510000
*         R6=LET1PTR+1;             /* UPDATE POINTER TO POINT TO */    06520000
@9C0     EQU   *                                                  0247  06530000
CECTST30 LA    @6,1                                               0247  06540000
         A     @6,LET1PTR                                         0247  06550000
*         FSTSEC2=LETTER;           /* NEXT LETTER IN ALPHABET AND*/    06560000
         MVC   FSTSEC+2(1),0(@6)                                  0248  06570000
*         LET1PTR=R6;               /* UPDATE FIRST SECTION TO    */    06580000
         ST    @6,LET1PTR                                         0249  06590000
*         GO TO CECTST29;           /* REFLECT CHANGE AND CONTINUE*/    06600000
         BC    15,CECTST29                                        0250  06610000
* CECTST31:/* UPDATE POINTERS TO SHOW SECTION HAS REACHED LENGTH THREE* 06620000
*         IF SECT2¬='1'B THEN       /* DOES SECTION NAME HAVE */        06630000
CECTST31 TM    SWITCHES,B'01000000'                               0251  06640000
*           GO TO CECTST33;         /* LENGTH ONE. NO, FIND   */        06650000
         BC    12,CECTST33                                        0252  06660000
*                                   /* HOW LONG IT IS.        */        06670000
*         IF FSTSEC2¬='Z' THEN      /* YES, SEE IF LAST LETTER OF NAME* 06680000
         CLI   FSTSEC+2,C'Z'                                      0253  06690000
*           GO TO CECTST30;         /* IS A Z.  NO,GO TO ROUTINE THAT * 06700000
         BC    07,CECTST30                                        0254  06710000
*                                   /* PERFORMS UPDATE OF LAST LETTER * 06720000
*         IF FSTSEC(2)='Z' THEN     /* YES, SEE IF MIDDLE LETTER OF   * 06730000
         CLI   FSTSEC+1,C'Z'                                      0255  06740000
         BC    07,@9BF                                            0255  06750000
*           DO;                     /* NAME IS A Z. YES,PERFORM UPDATE* 06760000
*           SECTIONS='001'B;        /* TO SECTION OF LENGTH THREE. NO,* 06770000
         OI    SWITCHES,B'00100000'                               0257  06780000
         NI    SWITCHES,B'00111111'                               0257  06790000
*           FSTSEC='AAA';           /* PERFORM REGULAR UPDATE FOR     * 06800000
         MVC   FSTSEC(3),@C24                                     0258  06810000
*           LET1PTR=ADDR(ALPHABET); /* MIDDLE LETTER OF SECTION NAME  * 06820000
         LA    @F,ALPHABET                                        0259  06830000
         ST    @F,LET1PTR                                         0259  06840000
*           LET2PTR=LET1PTR;                                            06850000
         MVC   LET2PTR(4),LET1PTR                                 0260  06860000
*           LET3PTR=LET1PTR;                                            06870000
         MVC   LET3PTR(4),LET1PTR                                 0261  06880000
*           GO TO CECTST29;                                             06890000
         BC    15,CECTST29                                        0262  06900000
*           END;                                                        06910000
* CECTST32:/* UPDATE POINTER TO MIDDLE OR FIRST LETTER IN SECTION NAME* 06920000
*         R6=LET2PTR+1;             /* PERFORM UPDATE FOR MIDDLE */     06930000
@9BF     EQU   *                                                  0264  06940000
CECTST32 LA    @6,1                                               0264  06950000
         A     @6,LET2PTR                                         0264  06960000
*         FSTSEC(2)=LETTER;         /* LETTER OF SECTION NAME    */     06970000
         MVC   FSTSEC+1(1),0(@6)                                  0265  06980000
*         LET2PTR=R6;                                                   06990000
         ST    @6,LET2PTR                                         0266  07000000
*         FSTSEC2='A';                                                  07010000
         MVI   FSTSEC+2,C'A'                                      0267  07020000
*         LET1PTR=ADDR(ALPHABET);                                       07030000
         LA    @F,ALPHABET                                        0268  07040000
         ST    @F,LET1PTR                                         0268  07050000
*         GO TO CECTST29;           /* CONTINUE                  */     07060000
         BC    15,CECTST29                                        0269  07070000
* CECTST33:/* UPDATE POINTERS FOR FIRST LETTER OF SECTION LENGTH THREE* 07080000
*         IF FSTSEC2¬='Z' THEN      /* TRIPLE LETTER SECTION. IS  LAST* 07090000
CECTST33 CLI   FSTSEC+2,C'Z'                                      0270  07100000
*           GO TO CECTST30;         /* LETTER IN NAME A Z. NO, PERFORM* 07110000
         BC    07,CECTST30                                        0271  07120000
*                                   /* NORMAL UPDATE FOR LAST LETTER  * 07130000
*                                   /* IN TEST SECTION NAME           * 07140000
*         IF FSTSEC(2)¬='Z' THEN    /* IS MIDDLE LETTER IN NAME A Z */  07150000
         CLI   FSTSEC+1,C'Z'                                      0272  07160000
*           GO TO CECTST32;         /* NO, PERFORM NORMAL UPDATE FOR*/  07170000
         BC    07,CECTST32                                        0273  07180000
*                                   /* MIDDLE LETTER IN SECTION NAME*/  07190000
*         IF FSTSEC(1)='Z' THEN     /* IF FIRST LETTER IN TRIPLE */     07200000
         CLI   FSTSEC,C'Z'                                        0274  07210000
*           GO TO CECTST18;         /* LETTER SECTION NAME IS Z, */     07220000
         BC    08,CECTST18                                        0275  07230000
*                                   /* SET ERROR CODE -07- AND   */     07240000
*                                   /* PRINT ERROR MESSAGE IFD112I*/    07250000
*         R6=LET3PTR+1;             /* NO, PERFORM NORMAL UPDATE  */    07260000
         LA    @6,1                                               0276  07270000
         A     @6,LET3PTR                                         0276  07280000
*         FSTSEC(1)=LETTER;         /* FOR FIRST LETTER OF TRIPLE */    07290000
         MVC   FSTSEC(1),0(@6)                                    0277  07300000
*         LET3PTR=R6;               /* SECTION NAME               */    07310000
         ST    @6,LET3PTR                                         0278  07320000
*         FSTSEC1='AA';                                                 07330000
         MVC   FSTSEC+1(2),@C25                                   0279  07340000
*         LET1PTR=ADDR(ALPHABET);                                       07350000
         LA    @F,ALPHABET                                        0280  07360000
         ST    @F,LET1PTR                                         0280  07370000
*         LET2PTR=LET1PTR;                                              07380000
         MVC   LET2PTR(4),LET1PTR                                 0281  07390000
*         GO TO CECTST29;           /* CONTINUE                   */    07400000
         BC    15,CECTST29                                        0282  07410000
* CECTST34:                                                             07420000
*         /************************************************************ 07430000
*         /*                                                          * 07440000
*         /*                  DECODE THE DELIMITERS                   * 07450000
*         /*                                                          * 07460000
*         /************************************************************ 07470000
*         IF INPUTBUF(1)='/' THEN   /* IS CHAR. IN INBUFR+0 A  */       07480000
CECTST34 CLI   0(@5),C'/'                                         0283  07490000
*           GO TO CECTST35;         /* SLASH. YES, CONTINUE TO  */      07500000
         BC    08,CECTST35                                        0284  07510000
*         IF INPUTBUF(1)¬=',' THEN  /* DECODE. NO, IS THE CHAR. */      07520000
         CLI   0(@5),C','                                         0285  07530000
*           GO TO CECTST56;         /* IN INBUFR A COMMA. NO,SET*/      07540000
         BC    07,CECTST56                                        0286  07550000
*                                   /* ERROR CODE -01- AND PRINT*/      07560000
*                                   /* ERROR MESSAGE IFD112I.   */      07570000
*         R6=ADDR(NUMBERS);         /* YES,SEE IF THE CHAR. IN  */      07580000
         LA    @6,NUMBERS                                         0287  07590000
*         DO I=10 TO 1 BY -1;       /* INBUFR+1 NUMERIC. YES,   */      07600000
         LA    @3,10                                              0288  07610000
*           IF INPUTBUF(2)=NUMBER THEN /* STOP LOOKING FOR TEST */      07620000
@DO9BE   CLC   1(1,@5),0(@6)                                      0289  07630000
*             GO TO CECTST35;       /* SECTIONS. NO,CONTINUE TO */      07640000
         BC    08,CECTST35                                        0290  07650000
*           R6=R6+1;                /* DECODE                   */      07660000
         AH    @6,@D1                                             0291  07670000
*         END;                                                          07680000
*         R5=R5+1;                                                      07690000
         BCT   @3,@DO9BE                                          0292  07700000
         AH    @5,@D1                                             0293  07710000
*         GO TO CECTST14;                                               07720000
         BC    15,CECTST14                                        0294  07730000
* CECTST35:                                                             07740000
*         NUMENTRY=SECCNTR;         /* PUT SECTION COUNTER IN SECLST */ 07750000
CECTST35 STH   @7,SECLIST                                         0295  07760000
*         HRTSEL=0;                 /* CLEAR HIGHEST ROUTINE SELECTED.* 07770000
         SR    @F,@F                                              0296  07780000
         STH   @F,HRTSEL                                          0296  07790000
*         IF INPUTBUF(1)='/' THEN   /* IS CHAR. IN INBUFR+0 A SLASH  */ 07800000
         CLI   0(@5),C'/'                                         0297  07810000
*           GO TO CECTST99;         /* YES, RETURN TO IFDOLT30. NO,   * 07820000
         BC    08,CECTST99                                        0298  07830000
*                                   /* CONTINUE DECODING              * 07840000
*         R5=R5+1;                  /* INCREMENT INBUFR COUNTER */      07850000
         AH    @5,@D1                                             0299  07860000
*         IF SECCNTR=1 THEN DO;    /* CAN ROUTINES BE SPECIFIED S20203* 07870000
         CH    @7,@D1                                             0300  07880000
         BC    07,@9BA                                            0300  07890000
*         RTNFLD = '1'B;           /* SET FLG TO DECODE ROUTINESS20203* 07900000
         OI    OLTEPSW1,B'10000000'                               0302  07910000
* CECTST99:/* EXIT ROUTINE                                      S20203* 07920000
*         INBUFPTR=R5;              /* SAVE INBUFR POINTER      S20203* 07930000
CECTST99 ST    @5,INBUFPTR                                        0303  07940000
*         RETURN;                  /* RETURN TO CALLER          S20203* 07950000
         BC    15,@EL01                                           0304  07960000
*         END;                     /*                           S20203* 07970000
*         ERRCODE='08';             /* NO, SET ERROR CODE -08- & */     07980000
@9BA     MVC   ERRCODE(2),@C27                                    0306  07990000
*         GO TO CECTST03;           /* PRINT ERROR MESSAGE IFD112I*/    08000000
         BC    15,CECTST03                                        0307  08010000
* CECTST56:                                                             08020000
*         /************************************************************ 08030000
*         /*                                                          * 08040000
*         /*                 ERROR, ILLEGAL DELIMITER                 * 08050000
*         /*                                                          * 08060000
*         /************************************************************ 08070000
*         ERRCODE='01';             /* SET ERROR CODE -01- AND    */    08080000
CECTST56 MVC   ERRCODE(2),@C28                                    0308  08090000
*         GO TO CECTST03;           /* PRINT ERROR MESSAGE IFD112I*/    08100000
         BC    15,CECTST03                                        0309  08110000
* CECTST05:/* ERROR, SECTION IS NOT ALPHABETIC */                       08120000
*         ERRCODE='06';             /* SET ERROR CODE -06- AND PRINT */ 08130000
CECTST05 MVC   ERRCODE(2),@C29                                    0310  08140000
*         GO TO CECTST03;           /* ERROR MESSAGE IFD112I         */ 08150000
         BC    15,CECTST03                                        0311  08160000
* CECTST06:/* FIND THE SLASH DELIMITER */                               08170000
*         IF INPUTBUF(1)='/' THEN   /* IS CHAR IN INBUFR+0 A SLASH.YES* 08180000
CECTST06 CLI   0(@5),C'/'                                         0312  08190000
         BC    07,@9B9                                            0312  08200000
*           DO;                                                         08210000
*           /********************************************************** 08220000
*           /*                                                        * 08230000
*           /*               PWTO MESSAGE IFD155I                     * 08240000
*           /*                                                        * 08250000
*           /********************************************************** 08260000
*           RESTRICT(1);                                                08270000
*           R1=ADDR(IFDMSG32);      /* GET POINTER TO MESSAGE MODULE  * 08280000
         L     @4,@V1              ADDRESS OF IFDMSG32            0315  08290000
         LR    @1,@4                                              0315  08300000
*           R1=MSGPTR55;            /* GET POINTER TO MESSAGE IFD155I * 08310000
         L     @1,8(0,@1)                                         0316  08320000
*           RELEASE(1);                                                 08330000
*           GEN(PWTO  REG=(1));     /* PRINT MESSAGE.                 * 08340000
         PWTO  REG=(1)                                                  08350000
         DS    0H                                                       08360000
*           GO TO CECTST35;         /* CONTINUE */                      08370000
         BC    15,CECTST35                                        0319  08380000
*           END;                                                        08390000
*         R5=R5+1;                  /* INCREMENT INBUFR POINTER */      08400000
@9B9     AH    @5,@D1                                             0321  08410000
*         GO TO CECTST06;           /* LOOP UNTIL SLASH FOUND */        08420000
         BC    15,CECTST06                                        0322  08430000
*         END IFDOLT32;                                                 08440000
@EL01    L     @D,4(0,@D)                                         0323  08450000
         LM    @E,@C,12(@D)                                       0323  08460000
         BCR   15,@E                                              0323  08470000
@DATA1   EQU   *                                                        08480000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           08490000
@1       EQU   01                                                       08500000
@2       EQU   02                                                       08510000
@3       EQU   03                                                       08520000
@4       EQU   04                                                       08530000
@5       EQU   05                                                       08540000
@6       EQU   06                                                       08550000
@7       EQU   07                                                       08560000
@8       EQU   08                                                       08570000
@9       EQU   09                                                       08580000
@A       EQU   10                                                       08590000
@B       EQU   11                                                       08600000
@C       EQU   12                                                       08610000
@D       EQU   13                                                       08620000
@E       EQU   14                                                       08630000
@F       EQU   15                                                       08640000
@D1      DC    H'1'                                                     08650000
@D2      DC    H'4'                                                     08660000
@D3      DC    H'2'                                                     08670000
@D4      DC    H'3'                                                     08680000
@D5      DC    H'26'                                                    08690000
@D6      DC    H'5'                                                     08700000
@V1      DC    V(IFDMSG32)                                              08710000
         DS    0F                                                       08720000
@C3      DC    C'04'                                                    08730000
@C11     DC    C'SOSPC/'                                                08740000
@C12     DC    C'05'                                                    08750000
@C19     DC    C'07'                                                    08760000
@C25     DC    C'AA'                                                    08770000
@C27     DC    C'08'                                                    08780000
@C28     DC    C'01'                                                    08790000
@C29     DC    C'06'                                                    08800000
@C14     DC    C'  A'                                                   08810000
@C15     DC    C'  Z'                                                   08820000
@C16     DC    C'   '                                                   08830000
@C23     DC    C' AA'                                                   08840000
@C24     DC    C'AAA'                                                   08850000
         DS    0D                                                       08860000
@DATA    EQU   *                                                        08870000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   08880000
R1       EQU   00000001            FULLWORD POINTER REGISTER            08890000
R2       EQU   00000002            FULLWORD POINTER REGISTER            08900000
I        EQU   00000003            3  BYTE  POINTER REGISTER            08910000
RETCODE  EQU   00000003            3  BYTE  POINTER REGISTER            08920000
R5       EQU   00000005            FULLWORD POINTER REGISTER            08930000
R6       EQU   00000006            FULLWORD POINTER REGISTER            08940000
R7       EQU   00000007            FULLWORD POINTER REGISTER            08950000
SECCNTR  EQU   00000007            3  BYTE  POINTER REGISTER            08960000
R8       EQU   00000008            FULLWORD POINTER REGISTER            08970000
R13      EQU   00000013            FULLWORD POINTER REGISTER            08980000
R14      EQU   00000014            FULLWORD POINTER REGISTER            08990000
RC       EQU   00000015            3  BYTE  POINTER REGISTER            09000000
R15      EQU   00000015            FULLWORD POINTER REGISTER            09010000
MYSAVE   EQU   00000000            8 BYTE(S) ON WORD                    09020000
A00000   EQU   MYSAVE+00000000     4 BYTE(S)                            09030000
YOURR13  EQU   MYSAVE+00000004     FULLWORD POINTER                     09040000
YOURSAVE EQU   00000000            16 BYTE(S) ON WORD                   09050000
A00001   EQU   YOURSAVE+00000000   12 BYTE(S)                           09060000
YOURR14  EQU   YOURSAVE+00000012   FULLWORD POINTER                     09070000
MSGPTR   EQU   00000000            12 BYTE(S) ON WORD                   09080000
MSGPTR12 EQU   MSGPTR+00000000     FULLWORD POINTER                     09090000
MSGPTR61 EQU   MSGPTR+00000004     FULLWORD POINTER                     09100000
MSGPTR55 EQU   MSGPTR+00000008     FULLWORD POINTER                     09110000
MSG112   EQU   00000000            41 BYTE(S)                           09120000
A00006   EQU   MSG112+00000000     4 BYTE(S)                            09130000
MSG112I  EQU   MSG112+00000004     37 BYTE(S)                           09140000
SECLSTXX EQU   00000000            5 BYTE(S) ON WORD                    09150000
TSTSECTN EQU   SECLSTXX+00000000   3 BYTE(S)                            09160000
TSTSCTN3 EQU   SECLSTXX+00000000   3 BYTE(S)                            09170000
TSTSCTN2 EQU   SECLSTXX+00000000   2 BYTE(S)                            09180000
TSTSCTN1 EQU   SECLSTXX+00000000   1 BYTE(S)                            09190000
SECLNGTH EQU   SECLSTXX+00000003   2 BYTE(S)                            09200000
DOUBLEWD EQU   @DATA+00000072      8 BYTE(S) ON DWORD                   09210000
SAVR14   EQU   DOUBLEWD+00000000   FULLWORD POINTER                     09220000
LET1PTR  EQU   @DATA+00000080      FULLWORD POINTER                     09230000
LET2PTR  EQU   @DATA+00000084      FULLWORD POINTER                     09240000
LET3PTR  EQU   @DATA+00000088      FULLWORD POINTER                     09250000
J        EQU   @DATA+00000092      HALFWORD INTEGER                     09260000
         ORG   @DATA+00000094                                           09270000
ALPHABET EQU   *                   26 BYTE(S)                           09280000
         DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ'                            09290000
LETTER   EQU   00000000            1 BYTE(S)                            09300000
NUMBERS  EQU   *                   10 BYTE(S)                           09310000
         DC    C'0123456789'                                            09320000
NUMBER   EQU   00000000            1 BYTE(S)                            09330000
SWITCHES EQU   *                   1 BYTE(S)                            09340000
         DC    X'00'                                                    09350000
SECTIONS EQU   SWITCHES+00000000   3 BIT(S)                             09360000
SECT1    EQU   SWITCHES+00000000   1 BIT(S)                             09370000
SECT2    EQU   SWITCHES+00000000   1 BIT(S)                             09380000
SECT3    EQU   SWITCHES+00000000   1 BIT(S)                             09390000
EXPFLG   EQU   SWITCHES+00000000   1 BIT(S)                             09400000
DUBNUM   EQU   SWITCHES+00000000   1 BIT(S)                             09410000
TRINUM   EQU   SWITCHES+00000000   1 BIT(S)                             09420000
FSTSEC   EQU   @DATA+00000131      3 BYTE(S)                            09430000
A00007   EQU   FSTSEC+00000000     1 BYTE(S)                            09440000
FSTSEC1  EQU   FSTSEC+00000001     2 BYTE(S)                            09450000
FSTSECT1 EQU   FSTSEC+00000001     1 BYTE(S)                            09460000
FSTSEC2  EQU   FSTSEC+00000002     1 BYTE(S)                            09470000
LSTSEC   EQU   @DATA+00000134      3 BYTE(S)                            09480000
A00008   EQU   LSTSEC+00000000     1 BYTE(S)                            09490000
LSTSEC1  EQU   LSTSEC+00000001     2 BYTE(S)                            09500000
A00009   EQU   LSTSEC+00000001     1 BYTE(S)                            09510000
LSTSEC2  EQU   LSTSEC+00000002     1 BYTE(S)                            09520000
ERRCODE  EQU   @DATA+00000137      2 BYTE(S)                            09530000
INPUTBUF EQU   00000000            4 BYTE(S)                            09540000
SOSPBUF  EQU   00000000            6 BYTE(S)                            09550000
RTNFIELD EQU   00000000            1 BYTE(S)                            09560000
         ORG   @DATA                                                    09570000
         DS    00000139C                                                09580000
@TEMPS   DS    0F                                                       09590000
TESTCOMM IFDCOM                                                         09600000
SCT      EQU   CHASCT+00000000     70 BYTE(S) ON WORD                   09610000
A00002   EQU   SCT+00000000        4 BYTE(S)                            09620000
RTNFLDXX EQU   SCT+00000004        2 BYTE(S)                            09630000
A00003   EQU   SCT+00000006        27 BYTE(S)                           09640000
EXPGMFLG EQU   SCT+00000033        1 BYTE(S)                            09650000
A00004   EQU   SCT+00000033        2 BIT(S)                             09660000
RTNSLCTN EQU   SCT+00000033        1 BIT(S)                             09670000
A00005   EQU   SCT+00000034        6 BYTE(S)                            09680000
EXPANDED EQU   SCT+00000040        30 BYTE(S)                           09690000
SECLIST  EQU   SECLST+00000000     12 BYTE(S) ON WORD                   09700000
NUMENTRY EQU   SECLIST+00000000    HALFWORD INTEGER                     09710000
PREFIXID EQU   SECLIST+00000002    5 BYTE(S)                            09720000
PREFIX   EQU   SECLIST+00000002    1 BYTE(S)                            09730000
ID       EQU   SECLIST+00000003    4 BYTE(S)                            09740000
SECLST7  EQU   SECLIST+00000007    5 BYTE(S)                            09750000
PGMTBL   EQU   PGMTAB+00000000     8 BYTE(S)                            09760000
OLTEPSW  EQU   CESWT+00000000      1 BYTE(S)                            09770000
LEGALTST EQU   OLTEPSW+00000000    1 BIT(S)                             09780000
A00010   EQU   OLTEPSW+00000000    4 BIT(S)                             09790000
REINT    EQU   OLTEPSW+00000000    1 BIT(S)                             09800000
OLTEPSW1 EQU   CESWT1+00000000     1 BYTE(S)                            09810000
RTNFLD   EQU   OLTEPSW1+00000000   1 BIT(S)                             09820000
@DATEND  EQU   *                                                        09830000
         END   IFDOLT32,(C'PL/S',1400,78045)                            09840000
./  ADD  SSI=80450069,NAME=IFDOLT33
         TITLE 'IFDOLT33 OPTIONS DECODE'                                00010000
         TITLE 'IFDOLT33 OPTIONS DECODE'                                00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT33 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT33 14 FEB 78'                             0002  00070000
         STM   @E,@C,12(@D)                                       0002  00080000
         BALR  @B,0                                               0002  00090000
@PSTART  DS    0H                                                 0002  00100000
         USING @PSTART+00000,@B                                   0002  00110000
         ST    @D,@SAV001+4                                       0002  00120000
         LA    @F,@SAV001                                         0002  00130000
         ST    @F,8(0,@D)                                         0002  00140000
         LR    @D,@F                                              0002  00150000
*         GEN(USING CHASCT,2);                                          00160000
         USING CHASCT,2                                                 00170000
         DS    0H                                                       00180000
*         GENERATE DATA;                                                00190000
*         /************************************************************ 00200000
*         /*                        REGISTERS                         * 00210000
*         /************************************************************ 00220000
*         DCL R1 REG(1) PTR(31);         /* REGISTER 1.               * 00230000
*         DCL R2 REG(2) PTR(31);         /* REGISTER 2.               * 00240000
*         DCL R3 REG(3) PTR(31);         /* REGISTER 3.               * 00250000
*         DCL R4 REG(4) PTR(31);         /* REGISTER 4.               * 00260000
*         DCL R5 REG(5) PTR(31);         /* REGISTER 5.               * 00270000
*         DCL R6 REG(6) PTR(31);         /* REGISTER 6.               * 00280000
*         DCL I REG(7) PTR(24);          /* REGISTER 7.               * 00290000
*         DCL J REG(8) PTR(24);          /* REGISTER 8.               * 00300000
*         DCL R8 REG(8) PTR(31);         /* REGISTER 8.               * 00310000
*         DCL K REG(9) PTR(24);          /* REGISTER 9.               * 00320000
*         DCL R9 REG(9) PTR(24);         /* REGISTER 9.               * 00330000
*         DCL R13 REG(13) PTR(31);       /* REGISTER 13.              * 00340000
*         DCL R14 REG(14) PTR(31);       /* REGISTER 14.              * 00350000
*         DCL R15 REG(15) PTR(24);       /* REGISTER 15.              * 00360000
*         /************************************************************ 00370000
*         /*                       SAVE AREAS                         * 00380000
*         /************************************************************ 00390000
*         DCL 1 MYSAVE BASED(R13),                                      00400000
*               3 * CHAR(4),                                            00410000
*               3 YOURR13 PTR(31);                                      00420000
*         DCL 1 YOURSAVE BASED(YOURR13),                                00430000
*               3 * CHAR(12),                                           00440000
*               3 YOURR14 PTR(31);                                      00450000
*         /************************************************************ 00460000
*         /*                  SECTION CONTROL TABLE                   * 00470000
*         /************************************************************ 00480000
*         DCL CHASCT CHAR(88) GENERATED;                                00490000
*         DCL 1 SCT BASED(ADDR(CHASCT)), /*--------SCT FORMAT---------* 00500000
*               3 CELOOPCT FIXED(15),    /* ERROR LOOP COUNT.         * 00510000
*               3 TESTOPT CHAR(2),       /* OPTION FIELDS.            * 00520000
*                 5 OPTBYT CHAR(1),      /* FIRST OPTION FIELD.       * 00530000
*                   7 * BIT(5),          /* NOT LOOKED AT.            * 00540000
*                   7 NPR BIT(1),        /* PRINT FLAG.               * 00550000
*                   7 INDEFLP BIT(1),    /* NOT LOOKED AT.      Y02008* 00560000
*                   7 FRSTERR BIT(1),    /* FIRST ERROR COMM. FLAG.   * 00570000
*                 5 OPTBYTE CHAR(1),     /* SECOND OPTION FIELD.      * 00580000
*                   7 * BIT(2),          /* NOT LOOKED AT.            * 00590000
*                   7 UTCATAS BIT(1),    /* CATASTROPHIC ERROR FLAG.  * 00600000
*                   7 PP BIT(1),         /* PARALLEL PRINT FLAG  M1006* 00610000
*                   7 NCP BIT(1),        /* CONTROL PRINT FLAG.       * 00620000
*                   7 NEP BIT(1),        /* ERROR PRINT FLAG.         * 00630000
*                   7 EL BIT(1),         /* ERROR LOOP FLAG.          * 00640000
*                   7 TL BIT(1),         /* TEST LOOP FLAG.           * 00650000
*               3 * CHAR(29),            /* NOT LOOKED AT.            * 00660000
*               3 EXPGMFLG CHAR(1),      /* EXECUTIVE PROGRAM FLAGS.  * 00670000
*                 5 CECOMRPL BIT(1),     /* REPLY TO AN OUTSTANDING   * 00680000
*                                        /* OLT MESSAGE ISSUED BY     * 00690000
*                                        /* CECOM HAS BEEN MADE.      * 00700000
*                 5 MOREONE BIT(1),      /* MORE THAN 1 DEVICE TO BE  * 00710000
*                                        /* TESTED.                   * 00720000
*                 5 ROUTINES BIT(1),     /* OPERATOR HAS MADE ROUTINE * 00730000
*                                        /* SELECTION.                * 00740000
*                 5 ELCOUNT BIT(1),      /* OPERATOR HAS SPECIFIED A  * 00750000
*                                        /* COUNT FOR THE ERROR LOOP  * 00760000
*                                        /* OPTION.                   * 00770000
*                 5 FINAL BIT(1),        /* SET BY FINAL MACRO.       * 00780000
*                 5 CLEANUP BIT(1),      /* INDICATES CLEANUP ENTRY   * 00790000
*                                        /* FOR OLT.                  * 00800000
*               3 * CHAR(2),             /* NOT LOOKED AT.            * 00810000
*               3 FUNCFLGS CHAR(1),      /* OLT FUNCTIONAL FLAGS.     * 00820000
*                 5 MI BIT(1),           /* MANUAL INTERVENTION TESTS * 00830000
*                                        /* SELECTED BY THE OPERATOR. * 00840000
*             5 CLNUPPRV BIT(1),        /* INDICATES TO EXEC THAT     * 00850000
*                                       /* CLEANUP HAS BEEN PRO-      * 00860000
*                                       /* VIDED BY THE OLT.          * 00870000
*             5 * BIT(3),                                               00880000
*             5 TR BIT(1);              /* TRACE FUNCTION HAS   X02008* 00890000
*                                       /* BEEN REQSTD BY THE OLT     * 00900000
*         /************************************************************ 00910000
*         /*                        SWITCHES                          * 00920000
*         /************************************************************ 00930000
*         DCL CESWT CHAR(1) GENERATED;                                  00940000
*         DCL 1 OLTEPSW CHAR(1) BASED(ADDR(CESWT)),                     00950000
*               3 LEGALTST BIT(1),       /* LEGAL TEST FLAG.          * 00960000
*               3 * BIT(3),              /* NOT LOOKED AT.            * 00970000
*               3 LEGALDEV BIT(1),       /* LEGAL DEVICE FLAG.        * 00980000
*               3 REINT BIT(1),          /* RE-INITIALIZE FLAG.       * 00990000
*               3 FERINT BIT(1),         /* FIRST ERROR COMM. INTERVAL* 01000000
*               3 FERCOM BIT(1);         /* FIRST ERROR COMM. FLAG.   * 01010000
*         DCL CESWT1 CHAR(1) GENERATED;                                 01020000
*         DCL 1 OLTEPSW1 CHAR(1) BASED(ADDR(CESWT1)),                   01030000
*               3 * BIT(7),              /* NOT LOOKED AT.            * 01040000
*               3 TPFLAG BIT(1);         /* TP FLAG.                  * 01050000
*         DCL CESWT2 CHAR(1) GENERATED;                                 01060000
*         DCL 1 OLTEPSW2 CHAR(1) BASED(ADDR(CESWT2)),                   01070000
*               3 NDCFO BIT(1),                                         01080000
*               3 * BIT(3),                                             01090000
*               3 INITENT BIT(1);        /* INITIAL ENTRY FLAG.       * 01100000
*         DCL CESWT5 CHAR(1) GEND;                                      01110000
*         DCL 1 OLTEPSW5 CHAR(1) BASED(ADDR(CESWT5)),                   01120000
*              3 * BIT(7),                                              01130000
*               3 PRNTOPTN BIT(1);  /* PRINT OPTIONS FROM PREVIOUS21051 01140000
*                                   /* D/T/O/ ENTRY OR DEFAULT    21051 01150000
*                                   /* OPTNS ON FIRST ENTRY.      21051 01160000
*         DCL CESWT8 CHAR(1) GEND;      /* CESWT 8 IN COMM AREA X02008* 01170000
*         DCL 1 OLTEPSW8 CHAR(1) BASED(ADDR(CESWT8)),         /*X02008* 01180000
*           3 * BIT(7),                                                 01190000
*           3 TALKHERE BIT(1);          /* TALK VERB ENTERED IN X02008* 01200000
*                                       /* THIS COMM INTERVAL.  X02008* 01210000
*         DCL CESWTR CHAR(1) GENERATED;  /* RETAIN 370 SWITCHES S20203* 01220000
*         DCL 1 * CHAR(1) BASED(ADDR(CESWTR)),   /*             S20203* 01230000
*               3 RETAINAC BIT(1),       /* REI ACTIVE          S20203* 01240000
*               3 * BIT(1),              /*                     S20203* 01250000
*               3 REMNOMSG BIT(1),       /* REMOTE NO MSG       S20203* 01260000
*               3 * BIT(3),              /*                     S20203* 01270000
*               3 EXECOUT BIT(1),        /* MSG IFD104E ISSUED  S20203* 01280000
*               3 * BIT(1);              /*                     S20203* 01290000
*         DCL CESWTR1 CHAR(1) GENERATED; /*                     S20203* 01300000
*         DCL 1 * CHAR(1) BASED(ADDR(CESWTR1)),  /*             S20203* 01310000
*               3 * BIT(5),              /*                     S20203* 01320000
*               3 REMANS BIT(1),         /* REMOTE ANSWERS IM   S20203* 01330000
*               3 * BIT(2);              /*                     S20203* 01340000
*         DCL CESWTR2 CHAR(1) GENERATED;    /* REI SWITCHES     S20203* 01350000
*         DCL 1 * CHAR(1) BASED(ADDR(CESWTR2)),     /*          S20203* 01360000
*               2 REPLY00 BIT(1),        /* REPLY 00 TO MSG     S20203* 01370000
*               2 * BIT(1),              /*                     S20203* 01380000
*               2 ONCOMM BIT(1),         /* ONSITE ANSWERED FLG S20203* 01390000
*               2 * BIT(2),              /*                     S20203* 01400000
*               2 OPTERR BIT(1),         /*  ERROR IN OPT       S20203* 01410000
*               2 * BIT(1),                                             01420000
*               2 DPMSGREI BIT(1);      /* DP MODULE MSG BIT    YM2273* 01430000
*         DCL INBUFR CHAR(72) GENERATED;                                01440000
*         DCL INPUTBUF CHAR(7) BASED(R5);                               01450000
*         DCL PRTBUFR CHAR(1) GENERATED;                                01460000
*         DCL OPTSAVE CHAR(4);                                          01470000
*         DCL ELSAVE FIXED(15);                                         01480000
*         DCL TLSAVE FIXED(15);                                         01490000
*         DCL LVLSAVE CHAR(1);                                          01500000
*         DCL REISAVE CHAR(1);           /* CESWTR1 SAVEAREA    S20203* 01510000
*         DCL 1 SWITCHES CHAR(1),                                       01520000
*               3 FSTSCN BIT(1),         /*                     S20203* 01530000
*               3 TWOBYTE BIT(1),        /*                     S20203* 01540000
*               3 THREEB BIT(1),         /*                     S20203* 01550000
*               3 FOURBYTE BIT(1);       /*                     S20203* 01560000
*         DCL 1 OPTAB(10) CHAR(5)       /* OPTION TABLE         X02008* 01570000
*           INITIAL('D5C6C5FE01'X,                                      01580000
*                   'D5D4C97F80'X,                                      01590000
*                   'D5D7D9FB04'X,                                      01600000
*                   'D5D7D7EF10'X,       /*                      M1006* 01610000
*                   'D5E3D3FE01'X,                                      01620000
*                   'D5C5D3FD02'X,                                      01630000
*                   'D5C3D7F708'X,                                      01640000
*                   'D5C5D7FB04'X,       /*                     S20203* 01650000
*                   'D5D9C5FB04'X,                                      01660000
*                   'D5E3D9FB04'X),     /*    TRACE OPTION      X02008* 01670000
*                 5 OPTION CHAR(3),                                     01680000
*                   7 * CHAR(1),                                        01690000
*                   7 OPTION1 CHAR(2),                                  01700000
*                 5 AND CHAR(1),                                        01710000
*                 5 OR CHAR(1);                                         01720000
*         DCL NUMBERS CHAR(10) INIT('0123456789');                      01730000
*         DCL NUMBER CHAR(1) BASED(R6);                                 01740000
*         DCL 1 AREA CHAR(8) BDY(DWORD),                                01750000
*               3 DUMMY FIXED(31),                                      01760000
*                 5 * CHAR(3),                                          01770000
*                 5 I3 CHAR(1);                                         01780000
*         DCL CNVRT CHAR(5);                                            01790000
*         DCL INBUFPTR PTR(31) GENERATED;                               01800000
*         DCL DPLEVEL CHAR(1) GENERATED;                                01810000
*         DCL LEVELIND CHAR(1) BASED(ADDR(DPLEVEL));                    01820000
*         DCL DYNCOM CHAR(1) GENERATED;                                 01830000
*         DCL TLCOUNT FIXED(15) GENERATED;                              01840000
*         DCL TLRUN FIXED(15) BASED(ADDR(TLCOUNT)+6);                   01850000
*         DCL ECB3 CHAR(4) GENERATED;                                   01860000
*         DCL 1 ECB CHAR(4) BASED(ADDR(ECB3)),                          01870000
*               3 * CHAR(1),                                            01880000
*                 5 * BIT(1),                                           01890000
*                 5 ECB3POST BIT(1);                                    01900000
*         DCL DEVDEPAD PTR(31) GENERATED;                               01910000
*         DCL REGX PTR(31) GENERATED;                                   01920000
*         DCL PGMTAB CHAR(8) GENERATED;                                 01930000
*         DCL PGMTBL CHAR(8) BASED(ADDR(PGMTAB));                       01940000
*         DCL SECLST CHAR(10) GENERATED;                                01950000
*         DCL 1 SECLIST CHAR(10) BASED(ADDR(SECLST)),                   01960000
*               3 * CHAR(2),                                            01970000
*               3 SECLST2 CHAR(8);                                      01980000
*         DCL SECTUSE CHAR(1) GENERATED;                                01990000
*         DCL UNITUSE CHAR(1) GENERATED;                                02000000
*         DCL TUCBAD1 PTR(31) GENERATED;                                02010000
*         DCL TUCBAD2 PTR(31) GENERATED;                                02020000
*         DCL DEVTAB CHAR(896) GENERATED;                               02030000
*         DCL DEVTBPTR PTR GENERATED;                                   02040000
*         DCL 1 DEVTABLE BASED(DEVTBPTR),                               02050000
*               3 DEVICE(16) CHAR(56) BDY(WORD),                        02060000
*                 5 * CHAR(8),                                          02070000
*                 5 DVTABUCB PTR(31);                                   02080000
*         DCL REDEFINE PTR(31) GENERATED;                               02090000
*         DCL COMMINT PTR(31) GENERATED;                                02100000
*         DCL 1 MSGPTR BASED(R3),                                       02110000
*               3 MSGPTR04 PTR(31),                                     02120000
*               3 MSGPTR07 PTR(31),                                     02130000
*               3 MSGPTR15 PTR(31),                                     02140000
*               3 MSGPTR61 PTR(31),      /*                     S20203* 02150000
*           3 MSGPTXXX,                                                 02160000
*           3 MSGPTR27;                 /* MESSAGE IFD327I      X02008* 02170000
*         DCL 1 MSG327 BASED(R1),       /* EXT BUFFER MESSAGE.  X02008* 02180000
*           3 * CHAR(16),               /* FLAGS, MSG ID        X02008* 02190000
*           3 EXTMSG CHAR(55);          /* EXT MESSAGE BUFFER   X02008* 02200000
*         DCL 1 WTOR104D CHAR(8) BDY(WORD),                             02210000
*               3 REPLYAD PTR(31),                                      02220000
*                 5 REPLYLEN CHAR(1),                                   02230000
*               3 ECB3ADDR PTR(31);                                     02240000
*         DCL 1 MSG104 CHAR(79) BASED(R1),                              02250000
*               3 MSGPRFX CHAR(8),                                      02260000
*               3 * CHAR(4),                                            02270000
*               3 MSG104D CHAR(67);                                     02280000
*         DCL 1 MSG107 BASED(R1),                                       02290000
*               3 * CHAR(4),                                            02300000
*               3 MSG107I CHAR(51);                                     02310000
*         DCL 1 NEGMSG BASED(R8),                                       02320000
*               3 NOT CHAR(1);                                          02330000
*  DCL SAVR5 PTR;                        /*                      M4501* 02340000
*  DCL MSG115A CHAR(10) BASED(R1+38);    /*                      M4501* 02350000
*         DCL EXTBUF CHAR(56) GENERATED;                                02360000
*         DCL SATAB CHAR(12) GENERATED;                                 02370000
*         DCL OPSYS CHAR(1) BASED(ADDR(SATAB));                         02380000
*         DCL IFDMSG33 LABEL NONLOCAL EXTERNAL;                         02390000
*         RESTRICT(2,3,4,5,6,7,8,9);                                    02400000
*         /************************************************************ 02410000
*         /*                                                          * 02420000
*         /*               SETUP AND SAVE OLD OPTIONS                 * 02430000
*         /*                                                          * 02440000
*         /************************************************************ 02450000
*         IF INITENT='0'B THEN      /* IS THIS INITIAL CALL OF OPTION * 02460000
         TM    OLTEPSW2,B'00001000'                               0089  02470000
         BC    05,@9FF                                            0089  02480000
*           DO;                     /* DECODE MODULE. YES, SET THE    * 02490000
*           NCP='1'B;               /* DEFAULT OPTIONS INTO EFFECT.   * 02500000
         OI    SCT+3,B'00001000'                                  0091  02510000
*           FRSTERR='0'B;            /*     NFE DEFAULT       @ZA29758* 02520000
         NI    SCT+2,B'11111110'                                  0092  02530000
*           NPR='1'B;                                                   02540000
         OI    SCT+2,B'00000100'                                  0093  02550000
*           END;                    /* NO, CONTINUE.                  * 02560000
*         R3=ADDR(IFDMSG33);                                            02570000
@9FF     L     @1,@V1              ADDRESS OF IFDMSG33            0095  02580000
         LR    @3,@1                                              0095  02590000
*         IF TALKHERE='1'B THEN         /* IF TALK ENTERED THIS X02008* 02600000
         TM    OLTEPSW8,B'00000001'                               0096  02610000
*           GO TO CECNP46A;             /* COMM INTERVAL, GIVE  X02008* 02620000
         BC    01,CECNP46A                                        0097  02630000
*                                       /* OLT DYN COMM AGAIN.  X02008* 02640000
*         IF PRNTOPTN='1'B THEN     /* NEED OPTIONS PRINTED?      21051 02650000
         TM    OLTEPSW5,B'00000001'                               0098  02660000
*           GO TO CECOPT46;         /* YES, GO TO OPTN MSG.       21051 02670000
         BC    01,CECOPT46                                        0099  02680000
*         R5=INBUFPTR+1;            /* INCREMENT INBUFR POINTER.*/      02690000
         LA    @5,1                                               0100  02700000
         A     @5,INBUFPTR                                        0100  02710000
*         OPTSAVE(1:2)=TESTOPT;     /* SAVE OLD OPTIONS.            */  02720000
         MVC   OPTSAVE(2),SCT+2                                   0101  02730000
*         OPTSAVE(3)=EXPGMFLG;      /* SAVE EXECUTIVE PROGRAM FLAGS.*/  02740000
         MVC   OPTSAVE+2(1),SCT+33                                0102  02750000
*         OPTSAVE(4)=FUNCFLGS;      /* SAVE OLT FUNCTIONAL FLAGS.   */  02760000
         MVC   OPTSAVE+3(1),SCT+36                                0103  02770000
*         REISAVE=CESWTR1;               /* SAVE REI SWITCHES   S20203* 02780000
         MVC   REISAVE(1),CESWTR1                                 0104  02790000
*         LVLSAVE=LEVELIND;         /* SAVE LEVEL OF PRINTING. */       02800000
         MVC   LVLSAVE(1),LEVELIND                                0105  02810000
*         ELSAVE=CELOOPCT;          /* SAVE C.E. ERROR LOOP COUNT. */   02820000
         MVC   ELSAVE(2),SCT                                      0106  02830000
*         TLSAVE=TLCOUNT;           /* SAVE C.E. TEST LOOP COUNT. */    02840000
         MVC   TLSAVE(2),TLCOUNT                                  0107  02850000
*         LEGALTST='1'B;            /* SET LEGAL TEST INDICATOR TO ONE* 02860000
         OI    OLTEPSW,B'10000000'                                0108  02870000
*         IF INPUTBUF(1)='/' THEN   /* ARE DEFAULT OR EXISTING */       02880000
         CLI   0(@5),C'/'                                         0109  02890000
         BC    07,@9FE                                            0109  02900000
*           DO;                     /* OPTIONS DESIRED. YES,          * 02910000
*           R4=R5+1;                /* GO TO FINISH UP ROUTINE.       * 02920000
         LA    @4,1                                               0111  02930000
         AR    @4,@5                                              0111  02940000
*           GO TO CECOPT42;                                             02950000
         BC    15,CECOPT42                                        0112  02960000
*           END;                                                        02970000
* CECOPT01:                                                             02980000
*         /************************************************************ 02990000
*         /*          DETERMINE WHAT OPTIONS ARE SELECTED             * 03000000
*         /************************************************************ 03010000
*         FSTSCN='1'B;              /* SET FIRST SCAN */                03020000
@9FE     EQU   *                                                  0114  03030000
CECOPT01 OI    SWITCHES,B'10000000'                               0114  03040000
*                                   /* INDICATOR ON.  */                03050000
* CECOPT02:                                                             03060000
*  SAVR5=R5;                             /* SAVE ADDRESS         M4501* 03070000
CECOPT02 ST    @5,SAVR5                                           0115  03080000
*         /************************************************************ 03090000
*         /*                                                          * 03100000
*         /*       IS IT FIRST OR SECOND SCAN OF OPTION TABLE         * 03110000
*         /*                                                          * 03120000
*         /************************************************************ 03130000
*         IF FSTSCN¬='1'B THEN      /* IS IT THE FIRST SCAN. NO, */     03140000
         TM    SWITCHES,B'10000000'                               0116  03150000
*           GO TO CECOPT10;         /* CHECK TWO BYTE OPTIONS.   */     03160000
         BC    12,CECOPT10                                        0117  03170000
*                                   /* YES, CHECK THREE BYTE OPTIONS.*/ 03180000
*         IF INPUTBUF(1:3)¬=OPTION(1) THEN  /* IS NFE SPECIFIED. */     03190000
         CLC   0(3,@5),OPTAB                                      0118  03200000
*           GO TO CECOPT03;                 /* NO, CHECK NEXT    */     03210000
         BC    07,CECOPT03                                        0119  03220000
*                                           /* THREE BYTE OPTION.*/     03230000
*         OPTBYT=OPTBYT&AND(1);     /* YES, SET FIRST ERROR */          03240000
         NC    SCT+2(1),OPTAB+3                                   0120  03250000
*                                   /* COMM. INDICATOR OFF. */          03260000
*         GO TO CECOPT30;           /* GO TO ROUTINE THAT WILL */       03270000
         BC    15,CECOPT30                                        0121  03280000
*                                   /* DECODE DELIMITERS.      */       03290000
* CECOPT03:                                                             03300000
*         /************************************************************ 03310000
*         /*                                                          * 03320000
*         /*                 IS NMI OPTION SPECIFIED                  * 03330000
*         /*                                                          * 03340000
*         /************************************************************ 03350000
*         IF INPUTBUF(1:3)¬=OPTION(2) THEN  /* IS NMI SPECIFIED. */     03360000
CECOPT03 CLC   0(3,@5),OPTAB+5                                    0122  03370000
*          GO TO CEOPT04A;              /* CHECK NTR OPTION.    X02008* 03380000
         BC    07,CEOPT04A                                        0123  03390000
*         FUNCFLGS=FUNCFLGS&AND(2); /* YES, SET MANUAL INT. */          03400000
         NC    SCT+36(1),OPTAB+8                                  0124  03410000
*                                   /* INDICATOR OFF.       */          03420000
*         GO TO CECOPT30;           /* GO TO ROUTINE THAT WILL */       03430000
         BC    15,CECOPT30                                        0125  03440000
*                                   /* DECODE DELIMITERS.      */       03450000
* CEOPT04A:                                                             03460000
*         /************************************************************ 03470000
*         /*                                                          * 03480000
*         /*          IS NTR OPTION SPECIFIED                   X02008* 03490000
*         /*                                                          * 03500000
*         /************************************************************ 03510000
*         IF INPUTBUF(1:3)¬=OPTION(10) THEN                             03520000
CEOPT04A CLC   0(3,@5),OPTAB+45                                   0126  03530000
*          GO TO CECOPT04;              /* CHECK RE OPTION      X02008* 03540000
         BC    07,CECOPT04                                        0127  03550000
*          FUNCFLGS=FUNCFLGS&AND(10);   /* TURN OFF TR BIT IN SCT     * 03560000
         NC    SCT+36(1),OPTAB+48                                 0128  03570000
*          GO TO CECOPT30;              /* CHECK DELIMETER.     X02008* 03580000
         BC    15,CECOPT30                                        0129  03590000
*                                           /* THREE BYTE OPTION.*/     03600000
* CECOPT04:                                                             03610000
*         /************************************************************ 03620000
*         /*                                                          * 03630000
*         /*                 IS NPR OPTION SPECIFIED                  * 03640000
*         /*                                                          * 03650000
*         /************************************************************ 03660000
*         IF INPUTBUF(1:3)¬=OPTION(3) THEN  /* IS NPR SPECIFIED. */     03670000
CECOPT04 CLC   0(3,@5),OPTAB+10                                   0130  03680000
*           GOTO CECOPT61;               /* NO, CHECK NEXT      S20203* 03690000
         BC    07,CECOPT61                                        0131  03700000
*                                           /* THREE BYTE OPTION.*/     03710000
*         OPTBYT=OPTBYT&AND(3);     /* YES, SET NO PRINT */             03720000
         NC    SCT+2(1),OPTAB+13                                  0132  03730000
*                                   /* INDICATOR OFF.    */             03740000
*         GO TO CECOPT30;           /* GO TO ROUTINE THAT WILL */       03750000
         BC    15,CECOPT30                                        0133  03760000
*                                   /* DECODE DELIMITERS.      */       03770000
* CECOPT61:                              /*                     S20203* 03780000
*         /************************************************************ 03790000
*         /*                                                          * 03800000
*         /*                  IS NRE OPTION SPECIFIED                 * 03810000
*         /*                                                          * 03820000
*         /************************************************************ 03830000
*         IF INPUTBUF(1:3)¬=OPTION(9) THEN   /* IS NRE SPEC     S20203* 03840000
CECOPT61 CLC   0(3,@5),OPTAB+40                                   0134  03850000
*           GOTO CECOPT05;               /* NO. CHECK NEXT      S20203* 03860000
         BC    07,CECOPT05                                        0135  03870000
*                                        /* THREE BYTE OPTION   S20203* 03880000
*         REMANS='0'B;                   /* ZERO REMANS SWITCH  S20203* 03890000
         NI    A00016,B'11111011'                                 0136  03900000
*         GOTO CECOPT30;                 /* GOTO ROUTINE THAT   S20203* 03910000
         BC    15,CECOPT30                                        0137  03920000
*                                        /* WILL DECODE DELIM   S20203* 03930000
* CECOPT05:                                                             03940000
*         /************************************************************ 03950000
*         /*                                                          * 03960000
*         /*   IS SPECIFIED OPTION ONE OF THE OTHER 3 BYTE OPTIONS    * 03970000
*         /*                                                          * 03980000
*         /************************************************************ 03990000
*         DO I=8 TO 4 BY -1;              /* IS OPTION ANOTHER 3 */     04000000
CECOPT05 LA    @7,8                                               0138  04010000
*         IF INPUTBUF(1:3)=OPTION(I) THEN /* BYTE OPTION. YES,   */     04020000
@DO9FD   LR    @1,@7                                              0139  04030000
         MH    @1,@D1                                             0139  04040000
         LA    @E,OPTAB-5(@1)                                     0139  04050000
         CLC   0(3,@5),0(@E)                                      0139  04060000
*           GO TO CECOPT06;               /* CONTINUE PROCESSING.*/     04070000
         BC    08,CECOPT06                                        0140  04080000
*         END;                                                          04090000
*         FSTSCN='0'B;                    /* NO, SET FIRST SCAN  */     04100000
         BCTR  @7,0                                               0141  04110000
@DO9FC   CH    @7,@D2                                             0141  04120000
         BC    10,@DO9FD                                          0141  04130000
         NI    SWITCHES,B'01111111'                               0142  04140000
*         GO TO CECOPT10;                 /* INDICATOR OFF AND   */     04150000
         BC    15,CECOPT10                                        0143  04160000
*                                         /* CHECK IF OPTION     */     04170000
*                                         /* MIGHT BE A 2 BYTE   */     04180000
*                                         /* ONE.                */     04190000
* CECOPT06:                                                             04200000
*         /************************************************************ 04210000
*         /*                                                          * 04220000
*         /*                  IS NCP OR NEP SPECIFIED                 * 04230000
*         /*                                                          * 04240000
*         /************************************************************ 04250000
*         IF I=8 THEN               /* IS NEP SPECIFIED. YES, SET NEP * 04260000
CECOPT06 CH    @7,@D3                                             0144  04270000
         BC    07,@9F9                                            0144  04280000
*           OPTBYTE=OPTBYTE|OR(8);  /* INDICATOR ON AND CONTINUE      * 04290000
         OC    SCT+3(1),OPTAB+39                                  0145  04300000
         BC    15,@9F8                                            0146  04310000
*                                   /* DECODING.                      * 04320000
*         ELSE                                                          04330000
*         OPTBYTE=OPTBYTE&AND(I);   /* NO, SET NCP/NTL/NEL FLAG OFF.  * 04340000
@9F9     LR    @1,@7                                              0146  04350000
         MH    @1,@D1                                             0146  04360000
         LA    @E,OPTAB-2(@1)                                     0146  04370000
         NC    SCT+3(1),0(@E)                                     0146  04380000
*         IF I=5 THEN               /* IF NTL, ZERO TEST LOOP COUNT   * 04390000
@9F8     CH    @7,@D1                                             0147  04400000
         BC    07,@9F7                                            0147  04410000
*         DO;                                                           04420000
*          TLCOUNT=0;              /* CLEAR TL COUNT IN COMM AREA     * 04430000
         SR    @F,@F                                              0149  04440000
         STH   @F,TLCOUNT                                         0149  04450000
*          TLRUN =0;               /* CLEAR SCHEDULER COUNTER.  S21052* 04460000
         STH   @F,TLRUN                                           0150  04470000
*         END;                                                          04480000
*         IF I=6 THEN               /* IS NEL OPT SELECTED      Y02008* 04490000
@9F7     CH    @7,@D4                                             0152  04500000
         BC    07,@9F6                                            0152  04510000
*           DO;                     /* YES,                     Y02008* 04520000
*             INDEFLP = '0'B;       /* SET INFINITE LOOP OFF    Y02008* 04530000
         NI    SCT+2,B'11111101'                                  0154  04540000
*             ELCOUNT = '0'B;       /* SET COUNT LOOP OFF       Y02008* 04550000
         NI    SCT+33,B'11101111'                                 0155  04560000
*           END;                    /* NO, NEL NOT SELECTED     Y02008* 04570000
*         GO TO CECOPT30;           /* GO TO ROUTINE THAT */            04580000
         BC    15,CECOPT30                                        0157  04590000
*                                   /* DECODES DELIMITERS.*/            04600000
* CECOPT10:                                                             04610000
*         /************************************************************ 04620000
*         /*                                                          * 04630000
*         /*                   IS IT A 2 BYTE OPTION                  * 04640000
*         /*                                                          * 04650000
*         /************************************************************ 04660000
*         IF INPUTBUF(1:2)¬=OPTION1(1) THEN /* IS FE SPECIFIED. */      04670000
CECOPT10 CLC   0(2,@5),OPTAB+1                                    0158  04680000
*           GO TO CECOPT11;                 /* NO, CHECK NEXT 2 */      04690000
         BC    07,CECOPT11                                        0159  04700000
*                                           /* BYTE OPTION.     */      04710000
*         OPTBYT=OPTBYT|OR(1);              /* YES, SET FIRST   */      04720000
         OC    SCT+2(1),OPTAB+4                                   0160  04730000
*                                           /* ERROR COMM.      */      04740000
*                                           /* INDICATOR ON.    */      04750000
*         GO TO CECOPT29;           /* GO TO ROUTINE THAT WILL */       04760000
         BC    15,CECOPT29                                        0161  04770000
*                                   /* DECODE DELIMITERS.      */       04780000
* CECOPT11:                                                             04790000
*         /************************************************************ 04800000
*         /*                                                          * 04810000
*         /*                     IS MI SPECIFIED                      * 04820000
*         /*                                                          * 04830000
*         /************************************************************ 04840000
*         IF INPUTBUF(1:2)¬=OPTION1(2) THEN  /* IS MI SPECIFIED. */     04850000
CECOPT11 CLC   0(2,@5),OPTAB+6                                    0162  04860000
*           GO TO CECOPT12;                  /* NO, CHECK NEXT 2 */     04870000
         BC    07,CECOPT12                                        0163  04880000
*                                            /* BYTE OPTION.     */     04890000
*         FUNCFLGS=FUNCFLGS|OR(2);           /* YES, SET MANUAL  */     04900000
         OC    SCT+36(1),OPTAB+9                                  0164  04910000
*                                            /* INTERVENTION IND.*/     04920000
*                                            /* ON AND CONTINUE  */     04930000
*                                            /* DECODING.        */     04940000
*         GO TO CECOPT29;           /* GO TO ROUTINE THAT WILL */       04950000
         BC    15,CECOPT29                                        0165  04960000
*                                   /* DECODE DELIMITERS.      */       04970000
* CECOPT12:                                                             04980000
*         /************************************************************ 04990000
*         /*                                                          * 05000000
*         /*                     IS PR SPECIFIED                      * 05010000
*         /*                                                          * 05020000
*         /************************************************************ 05030000
*         IF INPUTBUF(1:2)¬=OPTION1(3) THEN  /* IS PR SPECIFIED.  */    05040000
CECOPT12 CLC   0(2,@5),OPTAB+11                                   0166  05050000
*          GO TO CEOPT12A;              /* CHECK FOR TRACE FNCTNX02008* 05060000
         BC    07,CEOPT12A                                        0167  05070000
*         OPTBYT=OPTBYT|OR(3);      /* YES, SET PRINT FLAG ON.        * 05080000
         OC    SCT+2(1),OPTAB+14                                  0168  05090000
*                                            /* INDICATOR OFF.    */    05100000
*         GO TO CECOPT29;           /* GO TO ROUTINE THAT WILL */       05110000
         BC    15,CECOPT29                                        0169  05120000
*                                   /* DECODE DELIMITERS.      */       05130000
* CEOPT12A:                                                             05140000
*         /************************************************************ 05150000
*         /*                                                          * 05160000
*         /*          IS TR OPTION SPECIFIED                    X02008* 05170000
*         /*                                                          * 05180000
*         /************************************************************ 05190000
*         IF INPUTBUF(1:2)¬=OPTION1(10) THEN                            05200000
CEOPT12A CLC   0(2,@5),OPTAB+46                                   0170  05210000
*          GO TO CECOPT60;              /* CHECK FOR RE OPTION. X02008* 05220000
         BC    07,CECOPT60                                        0171  05230000
*          FUNCFLGS=FUNCFLGS|OR(10);    /* TURN ON TR BIT IN SCTX02008* 05240000
         OC    SCT+36(1),OPTAB+49                                 0172  05250000
*          GOTO CECOPT29;               /* CHECK DELIMETER.     X02008* 05260000
         BC    15,CECOPT29                                        0173  05270000
*         /************************************************************ 05280000
*         /*                                                          * 05290000
*         /*                   IS RE SPECIFIED                        * 05300000
*         /*                                                          * 05310000
*         /************************************************************ 05320000
* CECOPT60:                              /*                     S20203* 05330000
*         IF INPUTBUF(1:2)¬=OPTION1(9) THEN  /* IS RE SPECIFIED S20203* 05340000
CECOPT60 CLC   0(2,@5),OPTAB+41                                   0174  05350000
*           GOTO CECOPT13;                   /* NO.CHECK NEXT 2 S20203* 05360000
         BC    07,CECOPT13                                        0175  05370000
*         IF RETAINAC='1'B THEN              /* IS REI ACTIVE.  S20203* 05380000
         TM    A00012,B'10000000'                                 0176  05390000
         BC    12,@9F5                                            0176  05400000
*           DO;                              /*                 S20203* 05410000
*           REMANS='1'B;                 /* SET RE OPT FLAG     S20203* 05420000
         OI    A00016,B'00000100'                                 0178  05430000
*           GOTO CECOPT29;          /* GOTO ROUTINE THAT WILL   S20203* 05440000
         BC    15,CECOPT29                                        0179  05450000
*                                   /* DECODE DELIMITERS.       S20203* 05460000
*           END;                         /*                     S20203* 05470000
*         GOTO CECOPT33;                     /* NO.ERROR        S20203* 05480000
* CECOPT13:                                                             05490000
*         /************************************************************ 05500000
*         /*                                                          * 05510000
*         /*                     IS PP SPECIFIED                M1006*/ 05520000
*         /*                                                          * 05530000
*         /************************************************************ 05540000
*         IF INPUTBUF(1:2)¬=OPTION1(4) THEN  /* IS PP SPECIFIED. M1006* 05550000
CECOPT13 CLC   0(2,@5),OPTAB+16                                   0182  05560000
*           GO TO CECOPT14;                  /* NO, CHECK NEXT 2  */    05570000
         BC    07,CECOPT14                                        0183  05580000
*                                            /* BYTE OPTION.      */    05590000
*         OPTBYTE=OPTBYTE|OR(4);             /* YES, SET ALTERNATE*/    05600000
         OC    SCT+3(1),OPTAB+19                                  0184  05610000
*                                            /* PRINTER IND. ON.  */    05620000
*         IF INPUTBUF(3)¬='(' &        /* IS A LEVEL OF PRINTING */     05630000
*                                                                       05640000
*               INPUTBUF(5)¬=')' THEN  /* SPECIFIED. NO, SET     */     05650000
         CLI   2(@5),C'('                                         0185  05660000
         BC    08,@9F4                                            0185  05670000
         CLI   4(@5),C')'                                         0185  05680000
         BC    08,@9F3                                            0185  05690000
*                 DO;                  /* DEFAULT AS LEVEL OF    */     05700000
*                 LEVELIND='2';                                         05710000
         MVI   LEVELIND,C'2'                                      0187  05720000
*                 GO TO CECOPT29;      /* PRINT AND GO DECODE    */     05730000
         BC    15,CECOPT29                                        0188  05740000
*                 END;                 /* DELIMITER.             */     05750000
*         IF INPUTBUF(4:5)='0)'|        /* CHECK DELIMITERS           * 05760000
*              INPUTBUF(4:5)='1)'|                                      05770000
*                INPUTBUF(4:5)='2)'|                                    05780000
*                  INPUTBUF(4:5)='3)' THEN                              05790000
@9F3     EQU   *                                                  0190  05800000
@9F4     CLC   3(2,@5),@C7                                        0190  05810000
         BC    08,@9F2                                            0190  05820000
         CLC   3(2,@5),@C8                                        0190  05830000
         BC    08,@9F1                                            0190  05840000
         CLC   3(2,@5),@C9                                        0190  05850000
         BC    08,@9F0                                            0190  05860000
         CLC   3(2,@5),@C10                                       0190  05870000
         BC    07,@9EF                                            0190  05880000
*               DO;                                                     05890000
@9F0     EQU   *                                                  0191  05900000
@9F1     EQU   *                                                  0191  05910000
*               LEVELIND=INPUTBUF(4); /* YES, PUT IT IN COMMON AREA */  05920000
@9F2     MVC   LEVELIND(1),3(@5)                                  0192  05930000
*               R5=R5+5;               /* INCREMENT INBUFR POINTER. */  05940000
         AH    @5,@D1                                             0193  05950000
*               GO TO CECOPT31;        /* DECODE DELIMITER FILLOWING */ 05960000
         BC    15,CECOPT31                                        0194  05970000
*               END;                   /* SPECIFIED OPTION.          */ 05980000
*         GO TO CECOPT33;              /* NO, ERROR IN OPTION FIELD  */ 05990000
* CECOPT14:                                                             06000000
*         /************************************************************ 06010000
*         /*                                                          * 06020000
*         /*   IS SPECIFIED OPTION ONE OF THE OTHER 2 BYTE OPTIONS    * 06030000
*         /*                                                          * 06040000
*         /************************************************************ 06050000
*         DO I=8 TO 5 BY -1;        /* IS OPTION ANOTHER 2 BYTE OPTION* 06060000
CECOPT14 LA    @7,8                                               0197  06070000
*         IF INPUTBUF(1:2)=OPTION1(I) THEN  /* YES, CONTINUE DECODING.* 06080000
@DO9EE   LR    @1,@7                                              0198  06090000
         MH    @1,@D1                                             0198  06100000
         LA    @E,OPTAB-4(@1)                                     0198  06110000
         CLC   0(2,@5),0(@E)                                      0198  06120000
*           GO TO CECOPT15;                                             06130000
         BC    08,CECOPT15                                        0199  06140000
*         END;                                                          06150000
*         GO TO CECOPT20;           /* NO, SEE IF EXT= IS SPECIFIED */  06160000
         BCTR  @7,0                                               0200  06170000
@DO9ED   CH    @7,@D1                                             0200  06180000
         BC    10,@DO9EE                                          0200  06190000
         BC    15,CECOPT20                                        0201  06200000
* CECOPT15:                                                             06210000
*         /************************************************************ 06220000
*         /*                                                          * 06230000
*         /*                    IS CP/EP SPECIFIED                    * 06240000
*         /*                                                          * 06250000
*         /************************************************************ 06260000
*         IF I=8 THEN               /* IS EP SPECIFIED. YES, SET EP   * 06270000
CECOPT15 CH    @7,@D3                                             0202  06280000
         BC    07,@9EA                                            0202  06290000
*           DO;                     /* INDICATOR OFF AND CONTINUE     * 06300000
*           OPTBYTE=OPTBYTE&AND(8); /* DECODING.                      * 06310000
         NC    SCT+3(1),OPTAB+38                                  0204  06320000
*           GO TO CECOPT29;         /* GO TO ROUTINE THAT WILL */       06330000
         BC    15,CECOPT29                                        0205  06340000
*           END;                    /* DECODE DELIMITERS.      */       06350000
*         OPTBYTE=OPTBYTE|OR(I);    /* SET TL/EL/CP INDICATOR ON.     * 06360000
@9EA     LR    @1,@7                                              0207  06370000
         MH    @1,@D1                                             0207  06380000
         LA    @E,OPTAB-1(@1)                                     0207  06390000
         OC    SCT+3(1),0(@E)                                     0207  06400000
*         IF I=7 THEN               /* IF CP IS SPECIFIED, CONTINUE   * 06410000
         CH    @7,@D5                                             0208  06420000
*           GO TO CECOPT29;         /* DECODING.                      * 06430000
         BC    08,CECOPT29                                        0209  06440000
*         R5=R5+2;                  /* INCREMENT INBUFR POINTER. */     06450000
         AH    @5,@D6                                             0210  06460000
*         IF INPUTBUF(1)='(' THEN   /* IS A COUNT SPECIFIED IN */       06470000
         CLI   0(@5),C'('                                         0211  06480000
*                                   /* THE TL/EL OPTION.       */       06490000
*           GO TO CECOPT23;         /* YES, DECODE IT. */               06500000
         BC    08,CECOPT23                                        0212  06510000
*         IF I=5 THEN               /* IF NO COUNT IS SPECIFIED FOR  */ 06520000
         CH    @7,@D1                                             0213  06530000
         BC    07,@9E9                                            0213  06540000
*         DO;                                                           06550000
*          TLCOUNT=10;             /* TL, ASSIGN DEFAULT OF 10. S21052* 06560000
         LA    @F,10                                              0215  06570000
         STH   @F,TLCOUNT                                         0215  06580000
*          TLRUN=0;                /* CLEAR SCHEDULER COUNTER.  S21052* 06590000
         SR    @F,@F                                              0216  06600000
         STH   @F,TLRUN                                           0216  06610000
         BC    15,@9E8                                            0218  06620000
*         END;                                                          06630000
*         ELSE                      /* SET ERROR LOOP INDICATOR */      06640000
*           ELCOUNT='0'B;           /* IN SCT TO INDICATE C.E.  */      06650000
@9E9     NI    SCT+33,B'11101111'                                 0218  06660000
*                                   /* DID NOT SPECIFY A COUNT. */      06670000
*         GO TO CECOPT31;           /* GO TO ROUTINE THAT WILL */       06680000
         BC    15,CECOPT31                                        0219  06690000
*                                   /* DECODE DELIMITERS.      */       06700000
* CECOPT20:                                                             06710000
*         /************************************************************ 06720000
*         /*                                                          * 06730000
*         /*                     IS EXT= SPECIFIED                    * 06740000
*         /*                                                          * 06750000
*         /************************************************************ 06760000
*         IF INPUTBUF(1:4)¬='EXT=' THEN /* IS EXT= PRESENT IN THE  */   06770000
CECOPT20 CLC   0(4,@5),@C11                                       0220  06780000
*           GO TO CECOPT33;             /* OPTION FIELD. NO, ERROR.*/   06790000
         BC    07,CECOPT33                                        0221  06800000
*         R5=R5+4;                  /* INCREMENT INBUFR POINTER. */     06810000
         AH    @5,@D2                                             0222  06820000
*         FOURBYTE='1'B;                 /* FOUR BYTE OPTION    S20203* 06830000
         OI    SWITCHES,B'00010000'                               0223  06840000
*         DO I=1 TO 55;             /* FIND FINAL SLASH. */             06850000
         LA    @7,1                                               0224  06860000
*         IF INPUTBUF(I)='/' THEN                                       06870000
@DO9E7   LR    @1,@7                                              0225  06880000
         LA    @A,0(@1,@5)                                        0225  06890000
         BCTR  @A,0                                               0225  06900000
         CLI   0(@A),C'/'                                         0225  06910000
         BC    07,@9E3                                            0225  06920000
*           DO;                                                         06930000
*           R4=R5+I;                                                    06940000
         LR    @4,@7                                              0227  06950000
         AR    @4,@5                                              0227  06960000
*           GO TO CECOPT21;                                             06970000
         BC    15,CECOPT21                                        0228  06980000
*           END;                                                        06990000
*         END;                                                          07000000
*         GO TO CECOPT33;           /* SLASH NOT FOUND BEFORE LIMIT */  07010000
@9E3     AH    @7,@D7                                             0230  07020000
@DO9E6   CH    @7,@D8                                             0230  07030000
         BC    12,@DO9E7                                          0230  07040000
         BC    15,CECOPT33                                        0231  07050000
*                                   /* REACHED. ERROR.              */  07060000
* CECOPT21:                                                             07070000
*         /************************************************************ 07080000
*         /*                                                          * 07090000
*         /*             DECODE WHAT IS IN THE EXT= FIELD             * 07100000
*         /*                                                          * 07110000
*         /************************************************************ 07120000
*         EXTBUF=EXTBUF&&EXTBUF;    /* CLEAR EXT AREA. */               07130000
CECOPT21 XC    EXTBUF(56),EXTBUF                                  0232  07140000
*         IF I=1 THEN               /* DOES EXT AREA CONTAIN    */      07150000
         CH    @7,@D7                                             0233  07160000
*           GO TO CECOPT22;         /* NOTHING.YES LEAVE EXT    */      07170000
         BC    08,CECOPT22                                        0234  07180000
*                                   /* AREA CLEAR.              */      07190000
*         EXTBUF(2:I)=INPUTBUF(1:I-1); /* PUT INFORMATION IN */         07200000
         LR    @E,@5                                              0235  07210000
         LR    @1,@7                                              0235  07220000
         SH    @1,@D6                                             0235  07230000
         LA    @A,EXTBUF+1                                        0235  07240000
         EX    @1,@MVC                                            0235  07250000
*                                      /* EXT AREA.          */         07260000
* CECOPT22:                                                             07270000
*         /************************************************************ 07280000
*         /*                PUT COUNT IN EXT BUFFER                   * 07290000
*         /************************************************************ 07300000
*         DUMMY=I-1;                /* CALCULATE AMOUNT OF INFORMATION* 07310000
CECOPT22 LR    @F,@7                                              0236  07320000
         BCTR  @F,0                                               0236  07330000
         ST    @F,AREA                                            0236  07340000
*                                   /* IN EXT= OPTION.                * 07350000
*         EXTBUF(1)=I3;             /* PUT THIS COUNT IN FIRST BYTE */  07360000
         MVC   EXTBUF(1),AREA+3                                   0237  07370000
*                                   /* OF EXT AREA.                 */  07380000
*         GO TO CECOPT42;           /* GO TO FINISH UP ROUTINE. */      07390000
         BC    15,CECOPT42                                        0238  07400000
* CECOPT23:                                                             07410000
*         /************************************************************ 07420000
*         /*                                                          * 07430000
*         /*              DECODE COUNT THAT WAS SPECIFIED             * 07440000
*         /*                                                          * 07450000
*         /************************************************************ 07460000
*         TWOBYTE='1'B;                  /* TWO BYTE OPTION     S20203* 07470000
CECOPT23 OI    SWITCHES,B'01000000'                               0239  07480000
*         IF I=6 THEN               /* IF  EL OPTION            Y02008* 07490000
         CH    @7,@D4                                             0240  07500000
         BC    07,@9E2                                            0240  07510000
*           DO;                     /* YES,                     Y02008* 07520000
*             INDEFLP = '0'B;       /* RESET INFINITE LOOP      Y02008* 07530000
         NI    SCT+2,B'11111101'                                  0242  07540000
*             IF INPUTBUF(2:3) = 'I)' THEN /* IS INF LOOP SELECTY02008* 07550000
         CLC   1(2,@5),@C12                                       0243  07560000
         BC    07,@9E1                                            0243  07570000
*               DO;                 /* YES,                     Y02008* 07580000
*                 INDEFLP = '1'B;   /* SET INFINITE LOOP ON     Y02008* 07590000
         OI    SCT+2,B'00000010'                                  0245  07600000
*                 R5 = R5+3;        /* INDEX TO END THIS OPT    Y02008* 07610000
         AH    @5,@D9                                             0246  07620000
*                 GOTO CECOPT31;    /* GO CHECK DELIMITER       Y02008* 07630000
         BC    15,CECOPT31                                        0247  07640000
*               END;                /* NO, NOT INFINITE SELECTIOY02008* 07650000
*             ELCOUNT = '1'B;       /* SET COUNT SELECT ON      Y02008* 07660000
@9E1     OI    SCT+33,B'00010000'                                 0249  07670000
*           END;                    /* NO, EL OPTION            Y02008* 07680000
*         DO K=2 TO 7;              /* DECODE NUMBER. */                07690000
@9E2     LA    @9,2                                               0251  07700000
*         R6=ADDR(NUMBERS);         /* INITIALIZE POINTER TO NUM. TAB.* 07710000
@DO9E0   LA    @6,NUMBERS                                         0252  07720000
*           DO J=10 TO 1 BY -1;     /* FIND LENGTH. */                  07730000
         LA    @8,10                                              0253  07740000
*           IF INPUTBUF(K)=NUMBER THEN /* IS THIS A VALID NUMBER. */    07750000
@DO9DC   LR    @1,@9                                              0254  07760000
         LA    @A,0(@1,@5)                                        0254  07770000
         BCTR  @A,0                                               0254  07780000
         CLC   0(1,@A),0(@6)                                      0254  07790000
*             GO TO CECOPT24;          /* YES, CHECK NEXT CHAR.   */    07800000
         BC    08,CECOPT24                                        0255  07810000
*           R6=R6+1;                   /* NO, INCREMENT PTR TO NUM.TAB* 07820000
         AH    @6,@D7                                             0256  07830000
*           END;                                                        07840000
*         IF K=2|                   /* IS THE NUMBER OF LENGTH 0 OR IS* 07850000
*              INPUTBUF(K)¬=')' THEN/* THE NUMBER NOT ENCLOSED IN A ) * 07860000
         BCT   @8,@DO9DC                                          0257  07870000
         CH    @9,@D6                                             0258  07880000
         BC    08,@9D8                                            0258  07890000
         LR    @1,@9                                              0258  07900000
         LA    @A,0(@1,@5)                                        0258  07910000
         BCTR  @A,0                                               0258  07920000
         CLI   0(@A),C')'                                         0258  07930000
         BC    08,@9D7                                            0258  07940000
*            GO TO CECOPT33;        /* PARENTHESIS. YES, ERROR.       * 07950000
         BC    07,CECOPT33                                        0259  07960000
*         GO TO CECOPT25;           /* CONVERT THIS NUMBER.           * 07970000
         BC    15,CECOPT25                                        0260  07980000
* CECOPT24:                                                             07990000
*         END;                                                          08000000
* CECOPT25:                                                             08010000
*         /************************************************************ 08020000
*         /*                                                          * 08030000
*         /*                  CONVERT COUNT SPECIFIED                 * 08040000
*         /*                                                          * 08050000
*         /************************************************************ 08060000
*         CNVRT=CNVRT&&CNVRT;       /* CLEAR CONVERSION AREA. */        08070000
CECOPT24 AH    @9,@D7                                             0261  08080000
@DO9DF   CH    @9,@D5                                             0261  08090000
         BC    12,@DO9E0                                          0261  08100000
CECOPT25 XC    CNVRT(5),CNVRT                                     0262  08110000
*         CNVRT(8-K:5)=INPUTBUF(2:K-1); /* PLACE COUNT IN  */           08120000
         LA    @E,1(0,@5)                                         0263  08130000
         LA    @1,5                                               0263  08140000
         LCR   @C,@9                                              0263  08150000
         AH    @C,@D3                                             0263  08160000
         SR    @1,@C                                              0263  08170000
         LA    @A,CNVRT-1(@C)                                     0263  08180000
         EX    @1,@MVC                                            0263  08190000
*                                       /* CONVERSION AREA.*/           08200000
*         GEN;                          /* CONVERT IT. */               08210000
         PACK  AREA(8),CNVRT(5)                                         08220000
         CVB   R6,AREA                                                  08230000
         DS    0H                                                       08240000
*         IF R6>0 &                 /* IS COUNT WITH-IN LIMITS */       08250000
*               R6<32768 THEN       /* YES, PLACE COUNT  */             08260000
         LTR   @6,@6                                              0265  08270000
         BC    12,@9D6                                            0265  08280000
         C     @6,@D10                                            0265  08290000
         BC    10,@9D5                                            0265  08300000
*            DO;                    /* WHERE IT BELONGS. */             08310000
*            R5=R5+K;               /* INCREMENT INBUFR POINTER. */     08320000
         AR    @5,@9                                              0267  08330000
*            IF I=5 THEN            /* PUT TL COUNT IN COMMON AREA. */  08340000
         CH    @7,@D1                                             0268  08350000
         BC    07,@9D4                                            0268  08360000
*         DO;                                                           08370000
*          TLRUN=0;                /* CLEAR SCHEDULER FLAG      S21052* 08380000
         SR    @F,@F                                              0270  08390000
         STH   @F,TLRUN                                           0270  08400000
*          TLCOUNT=R6;             /* PUT TL COUNT IN COMM AREA S21052* 08410000
         STH   @6,TLCOUNT                                         0271  08420000
         BC    15,@9D3                                            0273  08430000
*         END;                                                          08440000
*            ELSE                                                       08450000
*              CELOOPCT=R6;         /* PUT EL COUNT IN SCT. */          08460000
@9D4     STH   @6,SCT                                             0273  08470000
*            GO TO CECOPT31;                                            08480000
         BC    15,CECOPT31                                        0274  08490000
*            END;                                                       08500000
*         GO TO CECOPT33;           /* ERROR. */                        08510000
* CECOPT29:                                                             08520000
*         /************************************************************ 08530000
*         /*                                                          * 08540000
*         /*              ROUTINE THAT DECODES DELIMITERS             * 08550000
*         /*                                                          * 08560000
*         /************************************************************ 08570000
*         TWOBYTE='1'B;                  /* VALID 2-BYTE OPT    S20203* 08580000
CECOPT29 OI    SWITCHES,B'01000000'                               0277  08590000
*         R5=R5+2;                  /* INCREMENT INBUFR POINTER */      08600000
         AH    @5,@D6                                             0278  08610000
*         GO TO CECOPT31;           /* DECODE DELIMITER. */             08620000
         BC    15,CECOPT31                                        0279  08630000
* CECOPT30:                                                             08640000
*         THREEB='1'B;                   /* VALID 3-BYTE OPT    S20203* 08650000
CECOPT30 OI    SWITCHES,B'00100000'                               0280  08660000
*         R5=R5+3;                  /* INCREMENT INBUFR POINTER. */     08670000
         AH    @5,@D9                                             0281  08680000
* CECOPT31:                                                             08690000
*         /************************************************************ 08700000
*         /*                   IS DELIMITER A COMMA                   * 08710000
*         /************************************************************ 08720000
*         IF INPUTBUF(1)¬=',' THEN  /* IS CHAR IN INBUFR A COMMA. */    08730000
CECOPT31 CLI   0(@5),C','                                         0282  08740000
*           GO TO CECOPT32;         /* NO, FIND OUT WHAT IT IS.   */    08750000
         BC    07,CECOPT32                                        0283  08760000
*         TWOBYTE='0'B;                  /* ZERO 2-BYTE SWITCH  S20203* 08770000
         NI    SWITCHES,B'10001111'                               0284  08780000
*         THREEB='0'B;                   /* ZERO 3-BYTE SWITCH  S20203* 08790000
*         FOURBYTE='0'B;                 /*                     S20203* 08800000
*         R5=R5+1;                  /* YES, INCREMENT INBUFR POINTER. * 08810000
         AH    @5,@D7                                             0287  08820000
*         GO TO CECOPT01;           /* DECODE NEXT OPTION. */           08830000
         BC    15,CECOPT01                                        0288  08840000
* CECOPT32:                                                             08850000
*         /************************************************************ 08860000
*         /*                   IS DELIMITER A SLASH                   * 08870000
*         /************************************************************ 08880000
*         IF INPUTBUF(1)='/' THEN   /* IS CHAR IN INBUFR A SLASH.   */  08890000
CECOPT32 CLI   0(@5),C'/'                                         0289  08900000
         BC    07,@9D2                                            0289  08910000
*           DO;                     /* YES, GO TO FINISH UP ROUTINE.  * 08920000
*         TWOBYTE='0'B;                  /* ZERO 2-BYTE SWITCH  S20203* 08930000
         NI    SWITCHES,B'10001111'                               0291  08940000
*         THREEB='0'B;                   /* ZERO 3-BYTE SWITCH  S20203* 08950000
*         FOURBYTE='0'B;                 /*                     S20203* 08960000
*           R4=R5+1;                                                    08970000
         LA    @4,1                                               0294  08980000
         AR    @4,@5                                              0294  08990000
*           GO TO CECOPT42;                                             09000000
         BC    15,CECOPT42                                        0295  09010000
*           END;                                                        09020000
* CECOPT33:                                                             09030000
*         /************************************************************ 09040000
*         /*                                                          * 09050000
*         /*       RESTORE OLD OPTIONS, PRINT MESSAGE IFD115I         * 09060000
*         /*              AND RETURN TO REDEFINE TEST                 * 09070000
*         /*                                                          * 09080000
*         /************************************************************ 09090000
*         CESWTR1=REISAVE;               /* RESTORE REI FLAGS   S20203* 09100000
@9D2     EQU   *                                                  0297  09110000
CECOPT33 MVC   CESWTR1(1),REISAVE                                 0297  09120000
*         TESTOPT=OPTSAVE(1:2);     /* RESTORE OLD OPTIONS. */          09130000
         MVC   SCT+2(2),OPTSAVE                                   0298  09140000
*         EXPGMFLG=OPTSAVE(3);      /* RESTORE EXEC. PROGRAM FLAGS. */  09150000
         MVC   SCT+33(1),OPTSAVE+2                                0299  09160000
*         FUNCFLGS=OPTSAVE(4);      /* RESTORE OLT FUNCTIONAL FLAGS. */ 09170000
         MVC   SCT+36(1),OPTSAVE+3                                0300  09180000
*         LEVELIND=LVLSAVE;         /* RESTORE LEVEL OF PRINTING. */    09190000
         MVC   LEVELIND(1),LVLSAVE                                0301  09200000
*         CELOOPCT=ELSAVE;          /* RESTORE C.E. ERROR LOOP COUNT. * 09210000
         MVC   SCT(2),ELSAVE                                      0302  09220000
*         TLCOUNT=TLSAVE;           /* RESTORE C.E. TEST LOOP COUNT. */ 09230000
         MVC   TLCOUNT(2),TLSAVE                                  0303  09240000
*         IF OPTERR='1'B THEN            /*  NO MESSAGE         S20203* 09250000
         TM    A00019,B'00000100'                                 0304  09260000
*           GOTO CECOPT62;               /* BRANCH AROUND MSG   S20203* 09270000
         BC    01,CECOPT62                                        0305  09280000
*  DO I=2 TO 10 BY 1;                    /* CHECK FOR UPTO 10 BY M4501* 09290000
         LA    @7,2                                               0306  09300000
*    IF INPUTBUF(2)='/'|                 /* CHECK FOR SLASH      M4501* 09310000
*         INPUTBUF(2)=','|               /* CHECK FOR COMMA      M4501* 09320000
*           INPUTBUF(2)=' ' THEN         /* CHECK FOR BLANK      M4501* 09330000
@DO9D1   CLI   1(@5),C'/'                                         0307  09340000
         BC    08,@9CD                                            0307  09350000
         CLI   1(@5),C','                                         0307  09360000
         BC    08,@9CC                                            0307  09370000
         CLI   1(@5),C' '                                         0307  09380000
         BC    07,@9CB                                            0307  09390000
*          DO;                           /* DELIMITER FOUND      M4501* 09400000
@9CC     EQU   *                                                  0308  09410000
*           INPUTBUF(2)=' ';             /* BLANK OUT DELIMITER  M4501* 09420000
@9CD     MVI   1(@5),C' '                                         0309  09430000
*         GOTO CECOPT38;                 /* GO SETUP MESSAGE     M4501* 09440000
         BC    15,CECOPT38                                        0310  09450000
*          END;                          /* SEARCH COMPLETE      M4501* 09460000
*    R5=R5+1;                            /* NEXT INPUT LOCATION  M4501* 09470000
@9CB     AH    @5,@D7                                             0312  09480000
*  END;                                  /* SEARCH COMPLETE      M4501* 09490000
* CECOPT38:                              /*                      M4501* 09500000
*  R5=SAVR5;                             /* RESTORE ADDRESS      M4501* 09510000
         AH    @7,@D7                                             0313  09520000
@DO9D0   CH    @7,@D11                                            0313  09530000
         BC    12,@DO9D1                                          0313  09540000
CECOPT38 L     @5,SAVR5                                           0314  09550000
*         RESTRICT(1);                                                  09560000
*         R1=MSGPTR15;              /* GET POINTER TO MESSAGE IFD115I.* 09570000
         L     @1,8(0,@3)                                         0316  09580000
*         RELEASE (9);                                                  09590000
*         IF TWOBYTE='1'B THEN           /* ADJUST FOR 2-BYTE   S20203* 09600000
         TM    SWITCHES,B'01000000'                               0318  09610000
         BC    12,@9CA                                            0318  09620000
*           I=I+2;                       /* OPT AT BEGINNING    S20203* 09630000
         LA    @7,2(0,@7)                                         0319  09640000
*         IF THREEB='1'B THEN            /* ADJUST FOR 3-BYTE   S20203* 09650000
@9CA     TM    SWITCHES,B'00100000'                               0320  09660000
         BC    12,@9C9                                            0320  09670000
*           I=I+3;                       /* OPT AT BEGINNING    S20203* 09680000
         LA    @7,3(0,@7)                                         0321  09690000
*         IF FOURBYTE='1'B THEN          /*                     S20203* 09700000
@9C9     TM    SWITCHES,B'00010000'                               0322  09710000
         BC    12,@9C8                                            0322  09720000
*           I=I+4;                       /*                     S20203* 09730000
         LA    @7,4(0,@7)                                         0323  09740000
*         IF I>10 THEN                   /* SET MAX VALUE FOR I S20203* 09750000
@9C8     CH    @7,@D11                                            0324  09760000
         BC    12,@9C7                                            0324  09770000
*           I=10;                        /* IF I > 10           S20203* 09780000
         LA    @7,10                                              0325  09790000
*  MSG115A(1)=' ';                       /* CLEAR BYT            M4501* 09800000
@9C7     MVI   38(@1),C' '                                        0326  09810000
*  MSG115A(2:10)=MSG115A(1:9);           /* CLEAR ARE            M4501* 09820000
         MVC   39(9,@1),38(@1)                                    0327  09830000
*  MSG115A(1:I)=INPUTBUF(1:I);           /* PUT ERROR INTO MESS  M4501* 09840000
         LR    @E,@5                                              0328  09850000
         LR    @9,@7                                              0328  09860000
         BCTR  @9,0                                               0328  09870000
         LA    @A,38(0,@1)                                        0328  09880000
         EX    @9,@MVC                                            0328  09890000
*         RESTRICT (9);                                                 09900000
*         RELEASE(1);                                                   09910000
*         GEN(PWTO  REG=(1));       /* PRINT MESSAGE.                 * 09920000
         PWTO  REG=(1)                                                  09930000
         DS    0H                                                       09940000
*  CECOPT62:                             /*                     S20203* 09950000
*         TWOBYTE='0'B;                  /* ZERO 2-BYTE SWITCH  S20203* 09960000
CECOPT62 NI    SWITCHES,B'10001111'                               0332  09970000
*         THREEB='0'B;                   /* ZERO 3-BYTE SWITCH  S20203* 09980000
*         FOURBYTE='0'B;                 /*                     S20203* 09990000
*         OPTERR='0'B;                   /* ZERO FLAG           S20203* 10000000
         NI    A00019,B'11111011'                                 0335  10010000
*         RESTRICT(1);                                                  10020000
*         IF RETAINAC='1'B THEN          /* IS REI ACTIVE?      S20203* 10030000
         TM    A00012,B'10000000'                                 0337  10040000
         BC    12,@9C6                                            0337  10050000
*           DPMSGREI='1'B;              /* REPLY TO NO DP MSGS  XM9156* 10060000
         OI    A00019,B'00000001'                                 0338  10070000
*         R1=MSGPTR61;              /* GET POINTER TO MESSAGE IFD161I.* 10080000
@9C6     L     @1,12(0,@3)                                        0339  10090000
*         RELEASE(1);                                                   10100000
*         GEN(PWTO  REG=(1));       /* PRINT MESSAGE.                 * 10110000
         PWTO  REG=(1)                                                  10120000
         DS    0H                                                       10130000
*         DPMSGREI='0'B;                /* TURN OFF DM MSG FLG  XM9156* 10140000
         NI    A00019,B'11111110'                                 0342  10150000
*         OPTERR='1'B;                   /* SET ERROR FLAG      S2020O* 10160000
         OI    A00019,B'00000100'                                 0343  10170000
*         GO TO CECOPT50;           /* GO TO ROUTINE THAT FORCES TEST*/ 10180000
         BC    15,CECOPT50                                        0344  10190000
*                                   /* DEFINITION TO BE REDEFINED.   */ 10200000
* CECOPT42:                                                             10210000
*         /************************************************************ 10220000
*         /*                                                          * 10230000
*         /*                    FINISH UP ROUTINE                     * 10240000
*         /*                                                          * 10250000
*         /************************************************************ 10260000
*         R5=R4;                    /* PREPARE TO SCAN BUFR FOR BLANKS* 10270000
CECOPT42 LR    @5,@4                                              0345  10280000
*         R4=ADDR(PRTBUFR);         /* GET ADDRESS OF INBUFR END.     * 10290000
         LA    @4,PRTBUFR                                         0346  10300000
*         DO I=1 TO 72;             /* SCAN BUFFER.                   * 10310000
         LA    @7,1                                               0347  10320000
*           IF R5=R4 THEN           /* IS WHOLE BUFFER SCANNED. YES,  * 10330000
@DO9C5   CR    @5,@4                                              0348  10340000
*             GO TO CECOPT46;       /* FINISH UP.                     * 10350000
         BC    08,CECOPT46                                        0349  10360000
*           IF INPUTBUF(1)¬=' ' THEN/*ERROR, RESTORE ALL PREVIOUS     * 10370000
         CLI   0(@5),C' '                                         0350  10380000
         BC    08,@9C1                                            0350  10390000
*             DO;                        /*                     S20203* 10400000
*             SAVR5=R5;                  /*                     S20203* 10410000
         ST    @5,SAVR5                                           0352  10420000
*             GO TO CECOPT33;       /* OPTIONS.                       * 10430000
         BC    15,CECOPT33                                        0353  10440000
*             END;                       /*                     S20203* 10450000
*           R5=R5+1;                /* POINT TO NEXT CHAR. IN INBUFR. * 10460000
@9C1     AH    @5,@D7                                             0355  10470000
*         END;                                                          10480000
* CECOPT46:                                                             10490000
*         IF MI='1'B & REMANS='1'B THEN  /* MI & RE BOTH        S20203* 10500000
         AH    @7,@D7                                             0356  10510000
@DO9C4   CH    @7,@D12                                            0356  10520000
         BC    12,@DO9C5                                          0356  10530000
CECOPT46 TM    SCT+36,B'10000000'                                 0357  10540000
         BC    12,@9C0                                            0357  10550000
         TM    A00016,B'00000100'                                 0357  10560000
         BC    12,@9BF                                            0357  10570000
*           DO;                          /*                     S20203* 10580000
*           R1=MSGPTXXX;                 /* GET MSG PTR         S20203* 10590000
         L     @1,16(0,@3)                                        0359  10600000
*           GEN(PWTO REG=(1));           /* PRINT MESSAGE       S20203* 10610000
         PWTO REG=(1)                                                   10620000
         DS    0H                                                       10630000
*         OPTERR='1'B;                   /* SET FLAG            S20203* 10640000
         OI    A00019,B'00000100'                                 0361  10650000
*           GOTO CECOPT33;               /* GO TO REDEFINE TEST S20203* 10660000
         BC    15,CECOPT33                                        0362  10670000
*           END;                         /*                     S20203* 10680000
*         /************************************************************ 10690000
*         /*              PWTO OPTIONS THAT ARE SELECTED              * 10700000
*         /************************************************************ 10710000
*         RESTRICT(1);                                                  10720000
@9BF     EQU   *                                                  0364  10730000
*         R1=MSGPTR07;              /* GET POINTER TO MESSAGE IFD107I.* 10740000
@9C0     L     @1,4(0,@3)                                         0365  10750000
*         R8=R1+24;                 /* GET POINTER TO BEGINNING OF */   10760000
         LA    @8,24                                              0366  10770000
         AR    @8,@1                                              0366  10780000
*                                   /* OPTIONS IN MESSAGE IFD107I. */   10790000
*         DO R9=10 TO 1 BY -1;          /* CHECK FOR OPTIONS    X02008* 10800000
         LA    @9,10                                              0367  10810000
*         NOT='N';                                                      10820000
@DO9BE   MVI   0(@8),C'N'                                         0368  10830000
*         R8=R8+4;                  /* STEP POINTER AND LOOP. */        10840000
         AH    @8,@D2                                             0369  10850000
*         END;                                                          10860000
*         IF FRSTERR='1'B THEN      /* IS IT NFE.      */               10870000
         BCT   @9,@DO9BE                                          0370  10880000
         TM    SCT+2,B'00000001'                                  0371  10890000
         BC    12,@9BA                                            0371  10900000
*           MSG107I(21)=' ';        /* NO, BLANK OUT N.*/               10910000
         MVI   24(@1),C' '                                        0372  10920000
*         IF MI='1'B THEN           /* YES. IS IT NMI. */               10930000
@9BA     TM    SCT+36,B'10000000'                                 0373  10940000
         BC    12,@9B9                                            0373  10950000
*           MSG107I(25)=' ';        /* NO, BLANK OUT N.*/               10960000
         MVI   28(@1),C' '                                        0374  10970000
*         IF PP='1'B THEN           /* YES. IS IT NPP.          M1006*/ 10980000
@9B9     TM    SCT+3,B'00010000'                                  0375  10990000
         BC    12,@9B8                                            0375  11000000
*           MSG107I(29)=' ';        /* NO, BLANK OUT N.*/               11010000
         MVI   32(@1),C' '                                        0376  11020000
*         IF TL='1'B THEN           /* YES. IS IT NTL. */               11030000
@9B8     TM    SCT+3,B'00000001'                                  0377  11040000
         BC    12,@9B7                                            0377  11050000
*           MSG107I(33)=' ';        /* NO, BLANK OUT N.*/               11060000
         MVI   36(@1),C' '                                        0378  11070000
*         IF EL='1'B THEN           /* YES. IS IT NEL. */               11080000
@9B7     TM    SCT+3,B'00000010'                                  0379  11090000
         BC    12,@9B6                                            0379  11100000
*           MSG107I(37)=' ';        /* NO, BLANK OUT N.*/               11110000
         MVI   40(@1),C' '                                        0380  11120000
*         IF NCP='1'B THEN          /* YES, IS IT NCP. */               11130000
@9B6     TM    SCT+3,B'00001000'                                  0381  11140000
         BC    12,@9B5                                            0381  11150000
*           MSG107I(41)=' ';        /* NO, BLANK OUT N.*/               11160000
         MVI   44(@1),C' '                                        0382  11170000
*         IF NEP='0'B THEN          /* YES. IS IT NEP. */               11180000
@9B5     TM    SCT+3,B'00000100'                                  0383  11190000
         BC    05,@9B4                                            0383  11200000
*           MSG107I(45)=' ';        /* NO, BLANK OUT N.*/               11210000
         MVI   48(@1),C' '                                        0384  11220000
*         IF NPR='1'B THEN          /* YES, IS IT NPR. */               11230000
@9B4     TM    SCT+2,B'00000100'                                  0385  11240000
         BC    12,@9B3                                            0385  11250000
*           MSG107I(49)=' ';        /* NO, BLANK OUT N.*/               11260000
         MVI   52(@1),C' '                                        0386  11270000
*         IF REMANS='1'B THEN            /* YES, IS IT NRE?     S20203* 11280000
@9B3     TM    A00016,B'00000100'                                 0387  11290000
         BC    12,@9B2                                            0387  11300000
*           MSG107I(53)=' ';             /* NO, BLANK OUT N     S20203* 11310000
         MVI   56(@1),C' '                                        0388  11320000
*         IF TR='1'B THEN               /* TRACE BIT ON?        X02008* 11330000
@9B2     TM    SCT+36,B'00000100'                                 0389  11340000
         BC    12,@9B1                                            0389  11350000
*          MSG107I(57)=' ';             /* ALTER MSG FOR TR.    X02008* 11360000
         MVI   60(@1),C' '                                        0390  11370000
*         IF PRNTOPTN='1'B THEN         /* PRINT OPTIONS HERE?        * 11380000
@9B1     TM    OLTEPSW5,B'00000001'                               0391  11390000
         BC    12,@9B0                                            0391  11400000
*          DO;                          /* SET UP FOR OPTION MSG      * 11410000
*          RELEASE(1);                                                  11420000
*          GEN(PWTO REG=(1));           /* OUTPUT MESSAGE.            * 11430000
         PWTO REG=(1)                                                   11440000
         DS    0H                                                       11450000
*            IF EXTBUF(1)¬='00'X THEN   /* IS BUFFER FILLED?    X02008* 11460000
         CLI   EXTBUF,X'00'                                       0395  11470000
         BC    08,@9AF                                            0395  11480000
*             DO;                       /* YES, CHECK NEXT CHAR.      * 11490000
*             RESTRICT(1);                                              11500000
*             R1=MSGPTR27;              /* ADDRESS EXT MSG.           * 11510000
         L     @1,20(0,@3)                                        0398  11520000
*             EXTMSG=EXTBUF(2:56);      /* SET UP MSG BUFFER    X02008* 11530000
         MVC   16(55,@1),EXTBUF+1                                 0399  11540000
*             GEN(PWTO REG=(1));        /* OUTPUT EXT BUFFER          * 11550000
         PWTO REG=(1)                                                   11560000
         DS    0H                                                       11570000
*             RETURN;                                                   11580000
         BC    15,@EL01                                           0401  11590000
*             END;                                                      11600000
*          RETURN;                                                      11610000
*         END;                                                          11620000
*         RELEASE(1);                                                   11630000
*         IF UTCATAS='1'B THEN      /* IS REDEFINITION CAUSED BY   */   11640000
@9B0     TM    SCT+3,B'00100000'                                  0406  11650000
         BC    12,@9AE                                            0406  11660000
*           DO;                     /* RECOGNIZING OF CATASTROPHIC */   11670000
*                                   /* FAILURE.                    */   11680000
*           IF REINT='0'B THEN      /* YES, DID DEVICES AND OR   */     11690000
         TM    OLTEPSW,B'00000100'                                0408  11700000
         BC    05,@9AD                                            0408  11710000
*             UTCATAS='0'B;         /* TESTS CHANGE. NO, RESET   */     11720000
         NI    SCT+3,B'11011111'                                  0409  11730000
*                                   /* CATASTROPHIC BIT TO TELL  */     11740000
*                                   /* SCHEDULER REDEFINITION OF */     11750000
*                                   /* DEVICES&|TESTS DID NOT    */     11760000
*                                   /* OCCUR.                    */     11770000
*           GO TO CECOPT55;         /* RETURN TO IFDOLT30 AT THE */     11780000
         BC    15,CECOPT55                                        0410  11790000
*           END;                    /* POINT FISTERR6.           */     11800000
*         ELSE                      /* NO, DID DEVICES AND OR TESTS */  11810000
*         IF REINT='1'B THEN        /* CHANGE. YES, GO TO ROUTINE THAT* 11820000
@9AE     TM    OLTEPSW,B'00000100'                                0412  11830000
*           GO TO CECOPT43;         /* WILL CONTINUE TO FINISH UP.    * 11840000
         BC    01,CECOPT43                                        0413  11850000
* CECNP46A:                                                             11860000
*                                                                       11870000
*                                                                       11880000
*         TALKHERE='0'B;                /* CLEAR CECOM TALK FLG X02008* 11890000
@9AC     EQU   *                                                  0414  11900000
CECNP46A NI    OLTEPSW8,B'11111110'                               0414  11910000
*                                       /* FOR USE NEXT COMM INTX02008* 11920000
*         IF FERINT¬='1'B THEN      /* NO, IS REDEFINITION CAUSED BY */ 11930000
         TM    OLTEPSW,B'00000010'                                0415  11940000
*           GO TO CECOPT45;         /* FIRST ERROR COMMUNICATION     */ 11950000
         BC    12,CECOPT45                                        0416  11960000
*                                   /* INTERVAL. NO, CONTINUE.       */ 11970000
*         IF NDCFO='1'B THEN        /* REISSUE OUTSTANDING WTOR FOR UT* 11980000
         TM    OLTEPSW2,B'10000000'                               0417  11990000
*           GO TO CECOPT45;                                             12000000
         BC    01,CECOPT45                                        0418  12010000
*         GO TO CECOPT55;           /* RETURN TO IFDOLT30 AT THE */     12020000
         BC    15,CECOPT55                                        0419  12030000
*                                   /* POINT FISTERR6.           */     12040000
* CECOPT43:/* CONTINUE FINISH UP ROUTINE */                             12050000
*         SECTUSE='00'X;            /* CLEAR SECTIONS USED COUNTER. */  12060000
CECOPT43 MVI   SECTUSE,X'00'                                      0420  12070000
*         UNITUSE='00'X;            /* CLEAR UNITS USE COUNTER. */      12080000
         MVI   UNITUSE,X'00'                                      0421  12090000
*         TUCBAD1=DVTABUCB(1);      /* INITIALIZE UCB POINTER.*/        12100000
         L     @1,DEVTBPTR                                        0422  12110000
         MVC   TUCBAD1(4),8(@1)                                   0422  12120000
*         IF TPFLAG='1'B THEN       /* IS IT TPTEST.*/ /* FOR OLD */    12130000
         TM    OLTEPSW1,B'00000001'                               0423  12140000
*           GO TO CECOPT44;         /* YES, SET DEVDEPAD TO POINT */    12150000
         BC    01,CECOPT44                                        0424  12160000
*                                   /* TO CHASCT+20.              */    12170000
*         DEVDEPAD=ADDR(CHASCT)+8;  /* INITIALIZE  DEVDEPAD */          12180000
         LA    @F,CHASCT+8                                        0425  12190000
         ST    @F,DEVDEPAD                                        0425  12200000
*         REGX=ADDR(DVTABUCB(1));   /* AND REGX             */          12210000
         LA    @F,8(0,@1)                                         0426  12220000
         ST    @F,REGX                                            0426  12230000
*         GO TO CECOPT45;                                               12240000
         BC    15,CECOPT45                                        0427  12250000
* CECOPT44: /* FOR OLD TP */                                            12260000
*         DEVDEPAD=ADDR(CHASCT)+20;                                     12270000
CECOPT44 LA    @F,CHASCT+20                                       0428  12280000
         ST    @F,DEVDEPAD                                        0428  12290000
*         REGX=ADDR(DVTABUCB(2));                                       12300000
         L     @1,DEVTBPTR                                        0429  12310000
         LA    @F,64(0,@1)                                        0429  12320000
         ST    @F,REGX                                            0429  12330000
*         TUCBAD2=DVTABUCB(2);                                          12340000
         MVC   TUCBAD2(4),64(@1)                                  0430  12350000
* CECOPT45:                                                             12360000
*         /************************************************************ 12370000
*         /*                                                          * 12380000
*         /*      GIVE USER DYNAMIC COMMUNICATION POSSIBILITY         * 12390000
*         /*                                                          * 12400000
*         /************************************************************ 12410000
*         IF INITENT='0'B THEN      /* IS THIS THE INITIAL ENTRY.     * 12420000
CECOPT45 TM    OLTEPSW2,B'00001000'                               0431  12430000
         BC    05,@9AB                                            0431  12440000
*           DO;                     /* YES,                           * 12450000
*           ECB3POST='1'B;          /* FAKE POSTING ECB3.             * 12460000
         OI    ECB,B'01000000'                                    0433  12470000
*           INITENT='1'B;           /* INDICATE THAT FURTHER ENTRIES  * 12480000
         OI    OLTEPSW2,B'00001000'                               0434  12490000
*           END;                    /* WILL NOT BE INITIAL ENTRIES.   * 12500000
*         IF ECB3POST¬='0'B THEN    /* HAS USER ABILITY TO FORCE */     12510000
@9AB     TM    ECB,B'01000000'                                    0436  12520000
         BC    08,@9AA                                            0436  12530000
*           DO;                     /* COMMUNICATION WITH OLTEP. NO */  12540000
*           ECB3=ECB3&&ECB3;        /* CLEAR ECB3 AND GIVE IT TO HIM*/  12550000
         XC    ECB3(4),ECB3                                       0438  12560000
*           REPLYAD=ADDR(DYNCOM);   /* GET NECESSARY INFORMATION */     12570000
         LA    @F,DYNCOM                                          0439  12580000
         ST    @F,WTOR104D                                        0439  12590000
*           REPLYLEN='01'X;         /* TO ISSUE WTOR.            */     12600000
         MVI   WTOR104D,X'01'                                     0440  12610000
*           ECB3ADDR=ADDR(ECB3);                                        12620000
         LA    @F,ECB3                                            0441  12630000
         ST    @F,WTOR104D+4                                      0441  12640000
*         IF RETAINAC='1'B               /* REI ACTIVE          S20203* 12650000
*           & REMANS='0'B                /* ONSITE IN CHARGE    S20203* 12660000
*               THEN DPMSGREI='1'B;     /* NO REPLY TO DP MSGS  XM9156* 12670000
         TM    A00012,B'10000000'                                 0442  12680000
         BC    12,@9A9                                            0442  12690000
         TM    A00016,B'00000100'                                 0442  12700000
         BC    05,@9A8                                            0442  12710000
         OI    A00019,B'00000001'                                 0443  12720000
*         EXECOUT='1'B;                  /* MSG 104E ISSUED     S20203* 12730000
@9A8     EQU   *                                                  0444  12740000
@9A9     OI    A00012,B'00000010'                                 0444  12750000
*         REPLY00='1'B;                  /* SET REPLY00 FLAG    S20203* 12760000
         OI    A00019,B'10000000'                                 0445  12770000
*           RESTRICT(1);                                                12780000
*           R1=MSGPTR04;            /* GET POINTER TO MESSAGE IFD104D.* 12790000
         L     @1,0(0,@3)                                         0447  12800000
*           MSGPRFX=WTOR104D;       /* PUT INFORMATION IN MESSAGE. */   12810000
         MVC   0(8,@1),WTOR104D                                   0448  12820000
*           RELEASE(1);                                                 12830000
*           GEN(PWTOR REG=(1),WAIT=NO);                                 12840000
         PWTOR REG=(1),WAIT=NO                                          12850000
         DS    0H                                                       12860000
*         REPLY00='0'B;                  /* ZERO REPLY00 FLAG   S20203* 12870000
         NI    A00019,B'01111110'                                 0451  12880000
*         DPMSGREI='0'B;                /* TURN OFF DPMSG FLAG  XM9156* 12890000
*           END;                                                        12900000
*         IF FERINT¬='1'B THEN      /* IS THIS DYNAMIC COMMUNICATION. * 12910000
@9AA     TM    OLTEPSW,B'00000010'                                0454  12920000
*           GO TO CECOPT56;         /* NO, RETURN NORMALLY.           * 12930000
         BC    12,CECOPT56                                        0455  12940000
*         GO TO CECOPT55;           /* YES, RETURN TO OLTEP SCHEDULER.* 12950000
         BC    15,CECOPT55                                        0456  12960000
* CECOPT50:                                                             12970000
*         /************************************************************ 12980000
*         /*                                                          * 12990000
*         /*          RETURN AND REDEFINE TEST DEFINITION             * 13000000
*         /*                                                          * 13010000
*         /************************************************************ 13020000
*         YOURR14=REDEFINE;         /* PREPARE TO RETURN TO IFDOLT30 */ 13030000
CECOPT50 L     @1,4(0,@D)                                         0457  13040000
         MVC   12(4,@1),REDEFINE                                  0457  13050000
*                                   /* TO REDEFINE TEST.             */ 13060000
*         GO TO CECOPT56;           /* RETURN */                        13070000
         BC    15,CECOPT56                                        0458  13080000
* CECOPT55:                                                             13090000
*         /************************************************************ 13100000
*         /*                                                          * 13110000
*         /*         RETURN AFTER COMMUNICATION INTERVAL              * 13120000
*         /*                                                          * 13130000
*         /************************************************************ 13140000
*         IF REINT='1'B THEN        /* SHOULD CONTROL RETURN TO U.T.  * 13150000
CECOPT55 TM    OLTEPSW,B'00000100'                                0459  13160000
*           GO TO CECOPT56;         /* NO.                            * 13170000
         BC    01,CECOPT56                                        0460  13180000
*         YOURR14=COMMINT-4;        /* PREPARE TO RETURN.        21051* 13190000
         L     @F,COMMINT                                         0461  13200000
         SH    @F,@D2                                             0461  13210000
         L     @1,4(0,@D)                                         0461  13220000
         ST    @F,12(0,@1)                                        0461  13230000
*                                   /* AFTER COMMUNICATION INT  S20203* 13240000
* CECOPT56:                                                             13250000
*         /************************************************************ 13260000
*         /*                                                          * 13270000
*         /*                     RETURN TO CALLER                     * 13280000
*         /*                                                          * 13290000
*         /************************************************************ 13300000
*         ONCOMM='0'B;                   /* ZERO ONCOMM FLG     S20203* 13310000
CECOPT56 NI    A00019,B'11011111'                                 0462  13320000
*         IF FERINT='1'B &               /* DYN COMM            S2020O* 13330000
*           OPTERR='1'B THEN             /* OPT ERROR           S2020O* 13340000
         TM    OLTEPSW,B'00000010'                                0463  13350000
         BC    12,@9A7                                            0463  13360000
         TM    A00019,B'00000100'                                 0463  13370000
*           GOTO CECOPT63;               /*                     S20203* 13380000
         BC    03,CECOPT63                                        0464  13390000
*         REINT='0'B;               /* CLEAR REINT INDICATOR. */        13400000
@9A6     EQU   *                                                  0465  13410000
@9A7     NI    OLTEPSW,B'11111011'                                0465  13420000
*         NDCFO='0'B;               /* CLEAR DYN. COMM. BYPASS FLAG.  * 13430000
         NI    OLTEPSW2,B'01111111'                               0466  13440000
*         FERINT='0'B;              /* CLEAR FERINT INDICATOR.        * 13450000
         NI    OLTEPSW,B'11111101'                                0467  13460000
*    CECOPT63:                           /*                     S20203* 13470000
*         OPTERR='0'B;                   /* ZERO ERROR FLAG     S2020O* 13480000
CECOPT63 NI    A00019,B'11111011'                                 0468  13490000
*         RETURN;                                                       13500000
*         END;                                                          13510000
@EL01    L     @D,4(0,@D)                                         0470  13520000
         LM    @E,@C,12(@D)                                       0470  13530000
         BCR   15,@E                                              0470  13540000
@DATA1   EQU   *                                                        13550000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           13560000
@1       EQU   01                                                       13570000
@2       EQU   02                                                       13580000
@3       EQU   03                                                       13590000
@4       EQU   04                                                       13600000
@5       EQU   05                                                       13610000
@6       EQU   06                                                       13620000
@7       EQU   07                                                       13630000
@8       EQU   08                                                       13640000
@9       EQU   09                                                       13650000
@A       EQU   10                                                       13660000
@B       EQU   11                                                       13670000
@C       EQU   12                                                       13680000
@D       EQU   13                                                       13690000
@E       EQU   14                                                       13700000
@F       EQU   15                                                       13710000
@D10     DC    F'32768'                                                 13720000
@D1      DC    H'5'                                                     13730000
@D2      DC    H'4'                                                     13740000
@D3      DC    H'8'                                                     13750000
@D4      DC    H'6'                                                     13760000
@D5      DC    H'7'                                                     13770000
@D6      DC    H'2'                                                     13780000
@D7      DC    H'1'                                                     13790000
@D8      DC    H'55'                                                    13800000
@D9      DC    H'3'                                                     13810000
@D11     DC    H'10'                                                    13820000
@D12     DC    H'72'                                                    13830000
@MVC     MVC   0(1,@A),0(@E)                                            13840000
@V1      DC    V(IFDMSG33)                                              13850000
         DS    0F                                                       13860000
@C11     DC    C'EXT='                                                  13870000
@C7      DC    C'0)'                                                    13880000
@C8      DC    C'1)'                                                    13890000
@C9      DC    C'2)'                                                    13900000
@C10     DC    C'3)'                                                    13910000
@C12     DC    C'I)'                                                    13920000
         DS    0D                                                       13930000
@DATA    EQU   *                                                        13940000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   13950000
R1       EQU   00000001            FULLWORD POINTER REGISTER            13960000
R2       EQU   00000002            FULLWORD POINTER REGISTER            13970000
R3       EQU   00000003            FULLWORD POINTER REGISTER            13980000
R4       EQU   00000004            FULLWORD POINTER REGISTER            13990000
R5       EQU   00000005            FULLWORD POINTER REGISTER            14000000
R6       EQU   00000006            FULLWORD POINTER REGISTER            14010000
I        EQU   00000007            3  BYTE  POINTER REGISTER            14020000
J        EQU   00000008            3  BYTE  POINTER REGISTER            14030000
R8       EQU   00000008            FULLWORD POINTER REGISTER            14040000
K        EQU   00000009            3  BYTE  POINTER REGISTER            14050000
R9       EQU   00000009            3  BYTE  POINTER REGISTER            14060000
R13      EQU   00000013            FULLWORD POINTER REGISTER            14070000
R14      EQU   00000014            FULLWORD POINTER REGISTER            14080000
R15      EQU   00000015            3  BYTE  POINTER REGISTER            14090000
MYSAVE   EQU   00000000            8 BYTE(S) ON WORD                    14100000
A00000   EQU   MYSAVE+00000000     4 BYTE(S)                            14110000
YOURR13  EQU   MYSAVE+00000004     FULLWORD POINTER                     14120000
YOURSAVE EQU   00000000            16 BYTE(S) ON WORD                   14130000
A00001   EQU   YOURSAVE+00000000   12 BYTE(S)                           14140000
YOURR14  EQU   YOURSAVE+00000012   FULLWORD POINTER                     14150000
INPUTBUF EQU   00000000            7 BYTE(S)                            14160000
OPTSAVE  EQU   @DATA+00000072      4 BYTE(S)                            14170000
ELSAVE   EQU   @DATA+00000076      HALFWORD INTEGER                     14180000
TLSAVE   EQU   @DATA+00000078      HALFWORD INTEGER                     14190000
LVLSAVE  EQU   @DATA+00000080      1 BYTE(S)                            14200000
REISAVE  EQU   @DATA+00000081      1 BYTE(S)                            14210000
SWITCHES EQU   @DATA+00000082      1 BYTE(S)                            14220000
FSTSCN   EQU   SWITCHES+00000000   1 BIT(S)                             14230000
TWOBYTE  EQU   SWITCHES+00000000   1 BIT(S)                             14240000
THREEB   EQU   SWITCHES+00000000   1 BIT(S)                             14250000
FOURBYTE EQU   SWITCHES+00000000   1 BIT(S)                             14260000
         ORG   @DATA+00000083                                           14270000
OPTAB    EQU   *                   10*5 BYTE(S)                         14280000
         DC    X'D5C6C5FE01'                                            14290000
         DC    X'D5D4C97F80'                                            14300000
         DC    X'D5D7D9FB04'                                            14310000
         DC    X'D5D7D7EF10'                                            14320000
         DC    X'D5E3D3FE01'                                            14330000
         DC    X'D5C5D3FD02'                                            14340000
         DC    X'D5C3D7F708'                                            14350000
         DC    X'D5C5D7FB04'                                            14360000
         DC    X'D5D9C5FB04'                                            14370000
         DC    X'D5E3D9FB04'                                            14380000
OPTION   EQU   OPTAB+00000000      3 BYTE(S)                            14390000
A00023   EQU   OPTAB+00000000      1 BYTE(S)                            14400000
OPTION1  EQU   OPTAB+00000001      2 BYTE(S)                            14410000
AND      EQU   OPTAB+00000003      1 BYTE(S)                            14420000
OR       EQU   OPTAB+00000004      1 BYTE(S)                            14430000
NUMBERS  EQU   *                   10 BYTE(S)                           14440000
         DC    C'0123456789'                                            14450000
NUMBER   EQU   00000000            1 BYTE(S)                            14460000
AREA     EQU   @DATA+00000144      8 BYTE(S) ON DWORD                   14470000
DUMMY    EQU   AREA+00000000       FULLWORD INTEGER                     14480000
A00024   EQU   AREA+00000000       3 BYTE(S)                            14490000
I3       EQU   AREA+00000003       1 BYTE(S)                            14500000
CNVRT    EQU   @DATA+00000152      5 BYTE(S)                            14510000
DEVTABLE EQU   00000000            896 BYTE(S) ON WORD                  14520000
DEVICE   EQU   DEVTABLE+00000000   16*56 BYTE(S) ON WORD                14530000
A00028   EQU   DEVTABLE+00000000   8 BYTE(S)                            14540000
DVTABUCB EQU   DEVTABLE+00000008   FULLWORD POINTER                     14550000
MSGPTR   EQU   00000000            24 BYTE(S) ON WORD                   14560000
MSGPTR04 EQU   MSGPTR+00000000     FULLWORD POINTER                     14570000
MSGPTR07 EQU   MSGPTR+00000004     FULLWORD POINTER                     14580000
MSGPTR15 EQU   MSGPTR+00000008     FULLWORD POINTER                     14590000
MSGPTR61 EQU   MSGPTR+00000012     FULLWORD POINTER                     14600000
MSGPTXXX EQU   MSGPTR+00000016     FULLWORD INTEGER                     14610000
MSGPTR27 EQU   MSGPTR+00000020     FULLWORD INTEGER                     14620000
MSG327   EQU   00000000            71 BYTE(S) ON WORD                   14630000
A00029   EQU   MSG327+00000000     16 BYTE(S)                           14640000
EXTMSG   EQU   MSG327+00000016     55 BYTE(S)                           14650000
WTOR104D EQU   @DATA+00000160      8 BYTE(S) ON WORD                    14660000
REPLYAD  EQU   WTOR104D+00000000   FULLWORD POINTER                     14670000
REPLYLEN EQU   WTOR104D+00000000   1 BYTE(S)                            14680000
ECB3ADDR EQU   WTOR104D+00000004   FULLWORD POINTER                     14690000
MSG104   EQU   00000000            79 BYTE(S)                           14700000
MSGPRFX  EQU   MSG104+00000000     8 BYTE(S)                            14710000
A00030   EQU   MSG104+00000008     4 BYTE(S)                            14720000
MSG104D  EQU   MSG104+00000012     67 BYTE(S)                           14730000
MSG107   EQU   00000000            55 BYTE(S) ON WORD                   14740000
A00031   EQU   MSG107+00000000     4 BYTE(S)                            14750000
MSG107I  EQU   MSG107+00000004     51 BYTE(S)                           14760000
NEGMSG   EQU   00000000            1 BYTE(S) ON WORD                    14770000
NOT      EQU   NEGMSG+00000000     1 BYTE(S)                            14780000
SAVR5    EQU   @DATA+00000168      FULLWORD POINTER                     14790000
MSG115A  EQU   00000038            10 BYTE(S)                           14800000
         ORG   @DATA                                                    14810000
         DS    00000172C                                                14820000
@TEMPS   DS    0F                                                       14830000
OPTCOMM  IFDCOM                                                         14840000
SCT      EQU   CHASCT+00000000     37 BYTE(S) ON WORD                   14850000
CELOOPCT EQU   SCT+00000000        HALFWORD INTEGER                     14860000
TESTOPT  EQU   SCT+00000002        2 BYTE(S)                            14870000
OPTBYT   EQU   SCT+00000002        1 BYTE(S)                            14880000
A00002   EQU   SCT+00000002        5 BIT(S)                             14890000
NPR      EQU   SCT+00000002        1 BIT(S)                             14900000
INDEFLP  EQU   SCT+00000002        1 BIT(S)                             14910000
FRSTERR  EQU   SCT+00000002        1 BIT(S)                             14920000
OPTBYTE  EQU   SCT+00000003        1 BYTE(S)                            14930000
A00003   EQU   SCT+00000003        2 BIT(S)                             14940000
UTCATAS  EQU   SCT+00000003        1 BIT(S)                             14950000
PP       EQU   SCT+00000003        1 BIT(S)                             14960000
NCP      EQU   SCT+00000003        1 BIT(S)                             14970000
NEP      EQU   SCT+00000003        1 BIT(S)                             14980000
EL       EQU   SCT+00000003        1 BIT(S)                             14990000
TL       EQU   SCT+00000003        1 BIT(S)                             15000000
A00004   EQU   SCT+00000004        29 BYTE(S)                           15010000
EXPGMFLG EQU   SCT+00000033        1 BYTE(S)                            15020000
CECOMRPL EQU   SCT+00000033        1 BIT(S)                             15030000
MOREONE  EQU   SCT+00000033        1 BIT(S)                             15040000
ROUTINES EQU   SCT+00000033        1 BIT(S)                             15050000
ELCOUNT  EQU   SCT+00000033        1 BIT(S)                             15060000
FINAL    EQU   SCT+00000033        1 BIT(S)                             15070000
CLEANUP  EQU   SCT+00000033        1 BIT(S)                             15080000
A00005   EQU   SCT+00000034        2 BYTE(S)                            15090000
FUNCFLGS EQU   SCT+00000036        1 BYTE(S)                            15100000
MI       EQU   SCT+00000036        1 BIT(S)                             15110000
CLNUPPRV EQU   SCT+00000036        1 BIT(S)                             15120000
A00006   EQU   SCT+00000036        3 BIT(S)                             15130000
TR       EQU   SCT+00000036        1 BIT(S)                             15140000
OLTEPSW  EQU   CESWT+00000000      1 BYTE(S)                            15150000
LEGALTST EQU   OLTEPSW+00000000    1 BIT(S)                             15160000
A00007   EQU   OLTEPSW+00000000    3 BIT(S)                             15170000
LEGALDEV EQU   OLTEPSW+00000000    1 BIT(S)                             15180000
REINT    EQU   OLTEPSW+00000000    1 BIT(S)                             15190000
FERINT   EQU   OLTEPSW+00000000    1 BIT(S)                             15200000
FERCOM   EQU   OLTEPSW+00000000    1 BIT(S)                             15210000
OLTEPSW1 EQU   CESWT1+00000000     1 BYTE(S)                            15220000
A00008   EQU   OLTEPSW1+00000000   7 BIT(S)                             15230000
TPFLAG   EQU   OLTEPSW1+00000000   1 BIT(S)                             15240000
OLTEPSW2 EQU   CESWT2+00000000     1 BYTE(S)                            15250000
NDCFO    EQU   OLTEPSW2+00000000   1 BIT(S)                             15260000
A00009   EQU   OLTEPSW2+00000000   3 BIT(S)                             15270000
INITENT  EQU   OLTEPSW2+00000000   1 BIT(S)                             15280000
OLTEPSW5 EQU   CESWT5+00000000     1 BYTE(S)                            15290000
A00010   EQU   OLTEPSW5+00000000   7 BIT(S)                             15300000
PRNTOPTN EQU   OLTEPSW5+00000000   1 BIT(S)                             15310000
OLTEPSW8 EQU   CESWT8+00000000     1 BYTE(S)                            15320000
A00011   EQU   OLTEPSW8+00000000   7 BIT(S)                             15330000
TALKHERE EQU   OLTEPSW8+00000000   1 BIT(S)                             15340000
A00012   EQU   CESWTR+00000000     1 BYTE(S)                            15350000
RETAINAC EQU   A00012+00000000     1 BIT(S)                             15360000
A00013   EQU   A00012+00000000     1 BIT(S)                             15370000
REMNOMSG EQU   A00012+00000000     1 BIT(S)                             15380000
A00014   EQU   A00012+00000000     3 BIT(S)                             15390000
EXECOUT  EQU   A00012+00000000     1 BIT(S)                             15400000
A00015   EQU   A00012+00000000     1 BIT(S)                             15410000
A00016   EQU   CESWTR1+00000000    1 BYTE(S)                            15420000
A00017   EQU   A00016+00000000     5 BIT(S)                             15430000
REMANS   EQU   A00016+00000000     1 BIT(S)                             15440000
A00018   EQU   A00016+00000000     2 BIT(S)                             15450000
A00019   EQU   CESWTR2+00000000    1 BYTE(S)                            15460000
REPLY00  EQU   A00019+00000000     1 BIT(S)                             15470000
A00020   EQU   A00019+00000000     1 BIT(S)                             15480000
ONCOMM   EQU   A00019+00000000     1 BIT(S)                             15490000
A00021   EQU   A00019+00000000     2 BIT(S)                             15500000
OPTERR   EQU   A00019+00000000     1 BIT(S)                             15510000
A00022   EQU   A00019+00000000     1 BIT(S)                             15520000
DPMSGREI EQU   A00019+00000000     1 BIT(S)                             15530000
LEVELIND EQU   DPLEVEL+00000000    1 BYTE(S)                            15540000
TLRUN    EQU   TLCOUNT+00000006    HALFWORD INTEGER                     15550000
ECB      EQU   ECB3+00000000       4 BYTE(S)                            15560000
A00025   EQU   ECB+00000000        1 BYTE(S)                            15570000
A00026   EQU   ECB+00000000        1 BIT(S)                             15580000
ECB3POST EQU   ECB+00000000        1 BIT(S)                             15590000
PGMTBL   EQU   PGMTAB+00000000     8 BYTE(S)                            15600000
SECLIST  EQU   SECLST+00000000     10 BYTE(S)                           15610000
A00027   EQU   SECLIST+00000000    2 BYTE(S)                            15620000
SECLST2  EQU   SECLIST+00000002    8 BYTE(S)                            15630000
OPSYS    EQU   SATAB+00000000      1 BYTE(S)                            15640000
@DATEND  EQU   *                                                        15650000
@9F6     EQU   CECOPT30                                                 15660000
@9F5     EQU   CECOPT33                                                 15670000
@9EF     EQU   CECOPT33                                                 15680000
@9E8     EQU   CECOPT31                                                 15690000
@9D8     EQU   CECOPT33                                                 15700000
@9D7     EQU   CECOPT25                                                 15710000
@9D3     EQU   CECOPT31                                                 15720000
@9D6     EQU   CECOPT33                                                 15730000
@9D5     EQU   CECOPT33                                                 15740000
@9AF     EQU   @EL01                                                    15750000
@9AD     EQU   CECOPT55                                                 15760000
         END    ,(C'PL/S',1400,78045)                                   15770000
./  ADD  SSI=52860076,NAME=IFDOLT35
FD35    TITLE '***  IFDOLT35 - OLTEP AR-145 EXIO. BASE MODULE  ***'     00100002
IFDOLT35 START                                                          00200002
*A000000,999999                                                 @Y02008 00300002
*D-392000             VS 2-2 PTM YM08623                       @YM08623 00350002
         SPACE 3                                                        00400002
*********************************************************************** 00500002
*                                                                     * 00600002
*MODULE NAME: IFDOLT35                                                * 00700002
*                                                                     * 00800002
*DESCRIPTIVE NAME: OLTEP AR-145 EXIO                                  * 00900002
*                                                                     * 01000002
*COPYRIGHT: NONE                                                      * 01100002
*                                                                     * 01200002
*STATUS: RECODED IN BAL FOR OS-VS/2 RELEASE 2 VERSION 0               * 01300002
*                                                                     * 01400002
*FUNCTION: THIS MODULE RECIEVES CONTROL FROM AN AR-145 LEVEL OLT VIA  * 01500002
*   THE OLTEP TRANSIENT MANAGER. UPON ENTRY REGISTER ONE CONTAINS THE * 01600002
*   ADDRESS OF A PARAMETER LIST FROM THE OLT. THIS PARAMETER LIST     * 01700002
*   CONTAINS POINTERS TO THE DEVICE, THE TECB, THE CCW'S; A COUNT OF  * 01800002
*   THE CCW'S; A FLAG BYTE; AND A MACRO CALL LEVEL NUMBER.            * 01900002
*      FIRST THE VALIDITY OF THE REQUEST IS CHECKED.                  * 02000002
*         1.ALL NECESSARY PARAMETERS PASSED AND VALID.                * 02100002
*         2.IS DEVICE IN DEVTAB, EITHER PRIMARY OR SECONDARY, AND NOT * 02200002
*          ACTIVE.                                                    * 02300002
*      NEXT A CHECK IS MADE FOR A REMOTE DEVICE WHICH REQUIRES LINE   * 02400002
*     CONNECTION. IF SO, IFDOLT73 IS GIVEN CONTROL TO PERFORM THIS    * 02500002
*     OPERATION. IF IFDOLT73 IS SUCCESSFUL OR NOT REQUIRED THE I/O    * 02600002
*     EFFECTOR CONTROL BLOCK, EFCTRCB, IS FILLED WITH THE APPROPRIATE * 02700002
*     INFORMATION. IF THE DEVICE IS A DIRECT ACCESS TYPE THE CCW'S ARE* 02800002
*     SCANNED FOR VIOLATIONS WHEN THE DEVICE IS FILE PROTECTED OR     * 02900002
*     ALLOCATED.                                                      * 03000002
*                                                                     * 03100002
* I/O EFFECTOR: THE I/O EFFECTOR IS A CLOSED SUBROUTINE RESIDING IN   * 03200002
*   THE IFDOLT35 CSECT. IT CAN BE CALLED BY ANY OLTEP MODULE WISHING  * 03300002
*   AN I/O EVENT TO BE STARTED. IT IS PASSED ALL NECESSARY PARAMETERS * 03400002
*   IN THE I/O EFFECTOR CONTROL BLOCK, RESIDING IN THE OLTEP COMMON   * 03500002
*   AREA. THE EFFECTOR BUILDS A BASIC IOSB AND IOS USE CONTROL BLOCK, * 03600002
*   IOSUSECB, IN THE COMMON AREA. IT THEN SETS THE FIRST WORD OF ROPT * 03700002
*   TO POINT TO THE IOSB AND THE SECOND WORD OF ROPT WITH THE ADDRESS * 03800002
*   OF THE DEVTAB ENTRY FOR THIS I/O REQUEST. IT THEN ISSUES OLTEP'S  * 03900002
*   SVC-59, CALL X'5C' TO FIND A IOSCB (SRB/IOSB/IOSUSECB/OECB SET)   * 04000002
*   FOR THE I/O EVENT, MOVE THE IOSB/IOSUSECB PASSED TO THE AVAILABLE * 04100002
*   IOSCB IN SUBPOOL 245, FILL IN THE REMAINING FIELDS IN THE IOSCB,  * 04200002
*   LINK TO THE IOS CCW TRANSLATOR IF THE CCW'S ARE VIRTUAL, AND ISSUE* 04300002
*   THE IOS 'STARTIO' MACRO. SVC-59 THEN RETURNS TO THE I/O EFFECTOR. * 04400002
*                                                                     * 04500002
*NOTES: SEE BELOW                                                     * 04600002
*                                                                     * 04700002
*  DEPENDENCIES: THIS MODULE HAS NO HARDWARE DEPENDENCIES.            * 04800002
*                                                                     * 04900002
*  RESTRICTIONS: NOT COMPATABLE FOR VS/1.                             * 05000002
*                                                                     * 05100002
*  REGISTER CONVENTIONS:                                              * 05200002
*    ENTRY: ALL REGISTERS ARE SAVED UPON ENTRY TO BOTH IFDOLT35 AND   * 05300002
*   THE I/O EFFECTOR.                                                 * 05400002
*      FOR IFDOLT35:                                                  * 05500002
*         REG  1 = POINTER TO OLT'S EXIO PARAMETER LIST.              * 05600002
*         REG  2 = POINTER TO OLTEP COMMON AREA.                      * 05700002
*         REG 12 = BASE REGISTER FOR THIS ENTRY POINT                 * 05800002
*         REG 13 = POINTER TO OLT'S SAVE AREA:                        * 05900002
*         REG 14 = RETURN POINT IN OLT.                               * 06000002
*      FOR I/O EFFECTOR:                                              * 06100002
*         REG  2 = POINTER TO OLTEP COMMON AREA.                      * 06200002
*         REG 13 = POINTER TO CALLERS SAVE AREA.                      * 06300002
*         REG 14 = RETURN POINT IN CALLER.                            * 06400002
*                                                                     * 06500002
*         REG 15 = ENTRY POINT OF I/O EFFECTOR                        * 06600002
*                                                                     * 06700002
*    EXIT:                                                            * 06800002
*      FOR IFDOLT35:                                                  * 06900002
*         REG 15 = 00        STARTIO ISSUED                           * 07000002
*                = 04        MACRO LEVEL NOT 2 OR 3                   * 07100002
*                = 08        DEVICE NOT PRIMARY,GRABBED,OR DATA       * 07200002
*                             PROTECTED.DEVICE ALREADY ACTIVE.DEVICE  * 07300002
*                             NOT IN DEVTAB.NO IOSCB AVAILABLE FOR    * 07400002
*                             USE.(ALREADY TWO OUTSTANDING ACTIVE I/O)* 07500002
*                = 0C        CCW CHAIN VIOLATES DATA PROTECTION MODE. * 07600002
*                = 10        SENSE = NO NOT PROCESSED.                * 07700002
*                = 14        TP LINE CONNECTION FAILED.               * 07800002
*                                                                     * 07900002
*      FOR THE I/O EFFECTOR:                                          * 08000002
*         REG 15 = 00        STARTIO ISSUED.                          * 08100002
*                = 04        NO IOSB AVAILABLE FOR THIS REQUEST.      * 08200002
*                = 08        NOT USED.                                * 08300002
*                = 0C        RETURNED TO INTERNAL CALLERS (TP LINE    * 08400002
*                             CONNECT,DATA PROTECTION) IF CCW'S ARE   * 08500002
*                             VIRTUAL AND IOS CCW TRANSLATOR FAILS.   * 08600002
*                                                                     * 08700002
*    SEE REGISTER EQUATES FOR SYMBOLS OF REGISTERS USED IN THIS       * 08800002
*    MODULE.                                                          * 08900002
*                                                                     * 09000002
*  PATCH-LABEL: PATCH35                                               * 09100002
*                                                                     * 09200002
*MODULE TYPE: PROCEDURE                                               * 09300002
*                                                                     * 09400002
*  PROCESSOR: OS/VS ASSEMBLER                                         * 09500002
*                                                                     * 09600002
*  MODULE SIZE: APPROXIMATELY 2K                                      * 09700002
*                                                                     * 09800002
*  ATTRIBUTES: SERIALLY REUSEABLE                                     * 09900002
*                                                                     * 10000002
*ENTRY POINTS:                                                        * 10100002
*                                                                     * 10200002
*  EXIO (AR-145): IFDOLT35                                            * 10300002
*                                                                     * 10400002
*     PURPOSE: TO PROVIDE OLT'S CODED TO THE AR-145 INTERFACE A METHOD* 10500002
*      OF INITIATING AN I/O OPERATION.                                * 10600002
*                                                                     * 10700002
*     LINKAGE: MACRO CALL TO OLTEP TRANSIENT MANAGER FOR BRANCH AND   * 10800002
*      LINKAGE.                                                       * 10900002
*                                                                     * 11000002
*  I/O EFFECTOR: IOEFFCTR                                             * 11100002
*                                                                     * 11200002
*     PURPOSE: TO ACCEPT A PARAMETER LIST FROM THE CALLER AND INITIATE* 11300002
*      AN I/O EVENT THROUGH THE SVC-59 STARTIO FUNCTION.              * 11400002
*                                                                     * 11500002
*     LINKAGE: BRANCH AND LINK WITH NORMAL LINKAGE CONVENTIONS. THE   * 11600002
*      ADDRESS OF THIS ENTRY POINT EXISTS IN OLTEP'S COMMON AREA      * 11700002
*      AT 'IORTNADR'.                                                 * 11800002
*                                                                     * 11900002
*                                                                     * 12000002
*INPUT:                                                               * 12100002
*                                                                     * 12200002
*  EXIO:                                                              * 12300002
*       A PARAMETER LIST FROM THE OLT POINTED TO BY REGISTER 1 WHICH  * 12400002
*   CONTAINS THE ADDRESSES OF THE DEVICE CDS FOR THIS REQUEST,THE CCW * 12500002
*   CHAIN,THE TECB,AND A BYTE OF FLAGS.                               * 12600002
*  I/O EFFECTOR:                                                      * 12700002
*                                                                     * 12800002
*       A PARAMETER LIST RESIDING IN THE COMMON AREA AT 'EFCTRCB'.    * 12900002
*   THE PARAMETER LIST CONTAINS POINTERS TO THE CCW CHAIN, THE DEVTAB * 13000002
*   ENTRY FOR THIS REQUEST, AND THE TECB. IT ALSO CONTAINS TWO FLAG   * 13100002
*   BYTES FOR THE CALLER TO INDICATE WHAT SPECIAL FUNCTIONS (CE/DE    * 13200002
*   SEPARATION,BYPASS PREFIX,SPECIFIC EXPOSURE) ARE REQUIRED. THE TWO * 13300002
*   REMAINING BYTES ARE FOR THE FILE MASK/MODE SET COMMAND AND THE    * 13400002
*   EXPECTED NUMBER OF SENSE BYTES ON UNIT CHECK.                     * 13500002
*                                                                     * 13600002
*OUTPUT:                                                              * 13700002
*                                                                     * 13800002
*  EXIO:                                                              * 13900002
*       NO SPECIFIC OUTPUT                                            * 14000002
*                                                                     * 14100002
*  I/O EFFECTOR:                                                      * 14200002
*       NO SPECIFIC OUTPUT                                            * 14300002
*                                                                     * 14400002
*EXITS: NORMAL                                                        * 14500002
*                                                                     * 14600002
*  EXIO:                                                              * 14700002
*       RETURN TO THE OLT                                             * 14800002
*                                                                     * 14900002
*  I/O EFFECTOR                                                       * 15000002
*       RETURN TO CALLER ON REGISTER 14 + 0                           * 15100002
*                                                                     * 15200002
*EXITS: ABNORMAL                                                      * 15300002
*                                                                     * 15400002
*  EXIO:                                                              * 15500002
*       N/A                                                           * 15600002
*                                                                     * 15700002
*  I/O EFFECTOR:                                                      * 15800002
*       TO SCHEDULER (IFDOLT48) WITH 'OLTTERM' BIT IN CE SWITCHES ON  * 15900002
*        TO TERMINATE THE OLT IF THE CCW TRANSLATOR FAILS FOR AN OLT  * 16000002
*        CALL.                                                        * 16100002
*                                                                     * 16200002
*EXTERNAL REFERENCES:                                                 * 16300002
*                                                                     * 16400002
*  ROUTINES:                                                          * 16500002
*     EXIO: IFDOLT73                                                  * 16600002
*                                                                     * 16700002
*     I/O EFFECTOR: SVC-59 (STARTIO FUNCTION)                         * 16800002
*                                                                     * 16900002
*  DATA AREAS:                                                        * 17000002
*     EXIO: DEVTAB                                                    * 17100002
*           EFCTRCB                                                   * 17200002
*                                                                     * 17300002
*     I/O EFFECTOR: EFCTRCB                                           * 17400002
*                   DEVTAB                                            * 17500002
*                   ROPT                                              * 17600002
*                                                                     * 17700002
*  CONTROL BLOCKS:                                                    * 17800002
*     EXIO: NONE                                                      * 17900002
*                                                                     * 18000002
*     I/O EFFECTOR: IOSCB                                             * 18100002
*                                                                     * 18200002
*TABLES: NONE                                                         * 18300002
*                                                                     * 18400002
*MACROS: NONE                                                         * 18500002
*                                                                     * 18600002
*CHANGE ACTIVITY:                                                     * 18700002
*                                                                     * 18800002
*                                                                     * 18900002
*                                                                     * 19000002
*                                                                     * 19100002
*                                                                     * 19200002
*********************************************************************** 19300002
         EJECT                                                          19400002
*********************************************************************** 19500002
*              REGISTER EQUATES FOR IFDOLT35 EXIO                     * 19600002
*********************************************************************** 19700002
         SPACE                                                          19800002
PLISTPTR EQU   1                  OLT PARAMETER LIST POINTER            19900002
COMPTREG EQU   2                  COMMON AREA POINTER                   20000002
WORKREG3 EQU   3                  WORK REG #3                           20100002
CDSPTREG EQU   4                  CDS POINTER REGISTER                  20200002
DVTBCNTR EQU   5                  REG TO CONTROL DEVTAB SCAN            20300002
TECBPREG EQU   6                  TECB POINTER REG                      20400002
WORKREG2 EQU   7                  WORKING GPR # 2                       20500002
LSTCCWAD EQU   7                  POINTER TO LAST CCW IN CHAIN FOR SCAN 20600002
LINKREG  EQU   10                 INTERNAL LINKAGE REGISTER             20700002
CCWPTREG EQU   11                 REG USED TO POINT TO CCW LIST         20800002
BASEREG  EQU   12                 BASE REGISTER FOR THIS CSECT          20900002
REG15    EQU   15                 NAME FOR REG 15                       21000002
*********************************************************************** 21100002
*              MISC EQUATES FOR IFDOLT35 EXIO                         * 21200002
*********************************************************************** 21300002
         SPACE                                                          21400002
CCWCOMND EQU   0                  DISPLACEMENT INTO CCW FOR OP-CODE     21500002
SENSELOC EQU   2                  DISPLACEMENT INTO TECB FOR SENSE      21600002
*                                  FIELD SIZE                           21700002
THREE    EQU   3                  NAME FOR NUMERIC 3                    21800002
RETHEX04 EQU   4                  VALUE OF 4 FOR RETURN CODE            21900002
L4       EQU   4                  CCHH LENGTH OF SEEK ADDRESS           22000002
L6       EQU   6                  SEEK ADDRESS LENGTH OF 6              22100002
DEC16    EQU   16                 VALUE OF 16 FOR CONSTANT              22200002
WRT      EQU   X'01'              WRITE BIT                             22300002
RD       EQU   X'02'              READ BIT                              22400002
NOOP     EQU   X'03'              NO-OP OP CODE                         22500002
SENSE    EQU   X'04'              SENSE OP CODE                         22600002
U2305TY1 EQU   X'06'              2305 TYPE 1 UNIT TYPE CODE            22700002
U2305TY2 EQU   X'07'              2305 TYPE 2 UNIT TYPE CODE            22800002
TIC      EQU   X'08'              TIC OP-CODE                           22900002
BITS45   EQU   X'0C'              NAME FOR THESE BITS                   23000002
FRMTWRT  EQU   X'10'              MASK FOR FORMATED WRITE BIT           23100002
RESTORE  EQU   X'17'              RESTORE CCW OP CODE                   23200002
SFM      EQU   X'1F'              SET FILE MASK COMMAND CODE            23300002
MAXSNSCT EQU   X'23'              THE MAX SIZE FOR SENSE INFO           23400002
TAPE     EQU   X'80'              CLASS CODE FOR TAPE DEVICES           23500002
MULTITRK EQU   X'80'              MULTI TRACK BIT IN CCW COMMAND        23600002
         EJECT                                                          23700002
*********************************************************************** 23800002
*                   ESTABLISH ADDRESSABILITY AND PERFORM STANDARD     * 23900002
*                   LINKAGE                                           * 24000002
*********************************************************************** 24100002
         SPACE                                                          24200002
         SAVE  (14,12),,IFDOLT35&SYSDATE    SAVE CALLER'S REGS          24300002
         LR    BASEREG,ENTRYREG   SET UP BASE REG                       24400002
         USING IFDOLT35,BASEREG   ESTABLISH ADDRESSABILITY FOR CSECT    24500002
         ST    SAVEREG,SAVEARE1+4 SAVE CALLERS SAVE AREA ADDRESS IN ME  24600002
         LA    REG15,SAVEARE1     GET MY SAVE AREA ADDRESS              24700002
         ST    REG15,8(SAVEREG)   PUT IT INTO CALLER'S SAVEAREA         24800002
         LR    SAVEREG,REG15      PUT MY SAVE AREA ADDRESS INTO SAVEREG 24900002
         USING EXIOPLST,PLISTPTR  ESTABLISH OLT PARM LIST,DEVTAB,AND    25000002
         USING TECB,TECBPREG       TECB ADDRESSABILITY                  25100002
         USING DEVTABMP,DVTABPTR                                        25200002
         USING CHASCT,2                                                 25300002
         USING DEVTABMP,DVTABPTR  SET ADDRESSABILITY TO DEVTAB          25400002
         MVI   IFD35SW1,X'00'     ZERO THIS MODULE'S SWITCH BYTE        25500002
*********************************************************************** 25600002
*                   CHECK VALIDITY OF MACRO CALL                      * 25700002
*********************************************************************** 25800002
         SPACE                                                          25900002
         CLI   OEXIOLVL,THREE     IS EXIO LEVEL 3                       26000002
         BNH   IFD35000           IF 3 OR LESS GO PROCESS               26100002
         LA    RETCODER,RETHEX04  IF MORE THAN 3 GIVE RETURN OF 4       26200002
         B     IFD35200           GO RESTORE REGS AND RETURN            26300002
IFD35000 EQU   *                                                        26400002
         ICM   CDSPTREG,B'1111',OCDSADR     GET CDS ADDRESS FROM OLT'S  26500002
*                                 PARAMETER LIST AND SEE IF IT'S ZEROES 26600002
         BNZ   IFD35010           GO SET-UP AND SEARCH DEVICE TABLE     26700002
*                                  USING PASSED CDS ADDRESS.            26800002
         L     DVTABPTR,PRIDVPTR  HERE BECAUSE OLT DEFAULTS TO PRIMARY  26900002
*                                  DEVICE                               27000002
         B     IFD35060           GO PROCESS ON                         27100002
IFD35010 EQU   *                                                        27200002
         L     DVTABPTR,DEVTBPTR  GET ADDRESS OF 1ST DEVTAB ENTRY       27300002
         USING CDSMAP,CDSPTREG    SET ADDRESSABILITY TO CDS             27400002
         LA    DVTBCNTR,DEC16     SET DEVICE ENTRY COUNTER TO 16        27500002
IFD35020 EQU   *                                                        27600002
         TM    CDEVFLAG,CSYMBIT   IS THIS CDS A SYMBOLIC NAMED ONE      27700002
         BO    IFD35030           YES-GO COMPARE CDS/DEVTAB SYMBOLIC    27800002
*                                  DEVICE NAMES                         27900002
         CLC   DEVAD,CDEVADDR+2   DO HEX DEVICE ADDRESSES MATCH         28000002
         BE    IFD35060           YES-GOCHECK IF PRIMARY OR SECONDARY   28100002
         B     IFD35040           NO-GO UPDATE POINTER TO NEXT DEVTAB   28200002
IFD35030 EQU   *                                                        28300002
         CLC   DEVSYMAM,CDSYMNAM  DO SYMBOLIC NAMES MATCH               28400002
         BE    IFD35060           YES-GO CHECK IF PRIMARY OR SECONDARY  28500002
IFD35040 EQU   *                                                        28600002
         LA    DVTABPTR,DVTABEND-DEVTABMP(DVTABPTR) POINT TO NEXT ENTRY 28700002
         CLI   DEVEBCAD,X'00'     IS THERE AN ENTRY HERE (NOT HEX 00)   28800002
         BE    IFD35050           NO-IT'S ZEROES-GO GIVE BAD RETURN =8  28900002
         BCT   DVTBCNTR,IFD35020  GO CHECK NEXT ENTRY IF IT EXISTS      29000002
IFD35050 EQU   *                  IF NOT- RETURN TO OLT WITH CODE OF 8  29100002
         B     IFD35170                                                 29200002
         SPACE 2                                                        29300002
IFD35060 EQU   *                                                        29400002
         TM    DEVFLAG1,PRIMARY+GRABED IS THIS DEVICE ASSIGNED AS PRI-  29500002
*                                       MARY OR SECONDARY               29600002
         BZ    IFD35050           NO-NEITHER ONE- GO GIVE ERROR RETURN  29700002
         NI    DEVFLAG2,ALL-HIODONE    TURN OFF HALT I/O DONE BIT       29800002
         ICM   TECBPREG,B'1111',OTECBADR    GET TECB ADDR AND CHECK IF  29900002
*                                 IT'S ZEROES                           30000002
         BZ    IFD35050           YES-IT'S ZEROES- GO GIVE RETURN OF 8  30100002
         TM    CDSFLAG1,CDSLNCON  IS THIS A REMOTE DEVICE               30200002
         BNO   IFD35080           NO-GO CHECK FOR DASD. BYPASS CALL-73  30300002
         ICM   CDSPTREG,B'1111',OCDSADR     GET CDS ADDRESS AND CHECK   30400002
*                                 FOR ZERO                              30500002
         BZ    IFD35070           IF ZERO-GO STRAIGHT TO CALL-73        30600002
         TM    CDEVFLAG,CLCRREQ   IS THIS A LINE CONNECTION REQUEST     30700002
         BNO   IFD35080           NO-BYPASS CALL-73                     30800002
         SPACE                                                          30900002
IFD35070 EQU   *                  CALL-73                               31000002
         ST    CDSPTREG,C73PCDSP  PUT CDS ADDR INTO CALL-73 PARM LIST   31100002
         ST    DVTABPTR,C73PDVTB  PUT DEVTAB ADDR INTO CALL-73 PARMLIST 31200002
         LR    WORKREG1,PLISTPTR  SAVE OLT EXIO PARM LIST PTR           31300002
         SPACE                                                          31400002
         IFDMOD CALL='73',LIST=C73PLIST     CALL IFDOLT73               31500002
         SPACE                                                          31600002
         LR    PLISTPTR,WORKREG1  RESTORE OLT EXIO PARM LIST PTR        31700002
         LTR   RETCODER,RETCODER  DID IFDOLT73 GIVE RETURN CODE = 0     31800002
         BNZ   IFD35200           NO-GO RETURN TO OLT                   31900002
         EJECT                                                          32000002
IFD35080 EQU   *                                                        32100002
         XC    EFCTRCB,EFCTRCB    ZERO I/O EFFECTOR PARM LIST           32200002
         ICM   CCWPTREG,B'1111',OCCWPTR     GET CCW ADDR FROM OLT PLIST 32300002
         BZ    IFD35050           IF ZEROES- GO GIVE BAD RETURN         32400002
         ST    CCWPTREG,CCWPTR    PUT CCW POINTER INTO EFECTR PARM LIST 32500002
         ST    TECBPREG,TECBPTRX  PUT TECB POINTER INTO IOEFFECTOR LIST 32600002
         ST    DVTABPTR,DVTPTR    PUT DEVTAB POINTER INTO IOEFFCTR LIST 32700002
         SR    WORKREG1,WORKREG1  ZERO WORK REG 1                       32800002
         LH    WORKREG1,SENSELOC(TECBPREG)  GET SENSE FIELD SIZE FROM   32900002
*                                  TECB                                 33000002
         LA    WORKREG2,THREE     SET A CONSTANT OF 3                   33100002
         SR    WORKREG1,WORKREG2  SUBTRACT DEVICE ADDRESS FIELD SIZE    33200002
*                                  FROM SENSE FIELD SIZE.               33300002
         LA    WORKREG2,MAXSNSCT  SET MAX SENSE SIZE                    33400002
         CR    WORKREG1,WORKREG2  IS SENSE SIZE > MAX ALLOWED           33500002
         BNH   IFD35090           NO-IT'S OK-GO MOVE IT                 33600002
         LR    WORKREG1,WORKREG2  IT'S > THAN 35- SO SET IT TO 35       33700002
         SPACE                                                          33800002
IFD35090 EQU   *                                                        33900002
         STC   WORKREG1,SNSCNT    SET SENSE COUNT IN EFFECTOR PARM LIST 34000002
         CLI   DEVCLASS,DASD      IS THIS A DIRECT ACCESS DEVICE        34100002
         BNE   IFD35120           NO-GO CHECK FOR TAPE                  34200002
         TM    DEVFLAG1,ALOCATED+FILEPRT    IS DEVICE EITHER ALOCATED   34300002
*                                  OR FILE PROTECTED?                   34400002
         BZ    IFD35100           NEITHER ONE - GO CHECK IF 2305        34500002
         BAL   LINKREG,IFD35400   GO TO SCAN CCW                        34600002
         BNZ   IFD35180           OLT CCW CHAIN IN ERROR-SO GO RETURN   34700002
*                                  WITH RET CODE = 12                   34800002
         SPACE                                                          34900002
*********************************************************************** 35000002
*                                                                     * 35100002
*  THIS ROUTINE SET THE APPROPRIATE BITS FOR THE I/O EFFECTOR TO START* 35200002
*AN I/O OPERATION. THE BITS ARE SET IN THE 'EFCTRCB' RESIDING IN THE  * 35300002
*COMMON AREA. BITS ARE SET AS FOLLOWS:                                * 35400002
*                                                                     * 35500002
*     1.) BYPASS PREFIX                                               * 35600002
*            SET IF DEVICE IS TAPE OR DASD                            * 35700002
*     2.) CE/DE SEPARATION                                            * 35800002
*            SET IF 'ATTN' NOT REQUESTED FOR ALL DEVICES              * 35900002
*     3.) ATTN                                                        * 36000002
*            SET FOR ALL DEVICES IF REQUESTED BY THE OLT TO ALLOW ONE * 36100002
*          MORE INTERRUPT AFTER CE/DE                                 * 36200002
*     4.) SPECIFIC EXPOSURE                                           * 36300002
*            SET FOR ALL I/O REQUESTS TO A 2305 TYPE DASD             * 36400002
*     5.) GDP                                                         * 36500002
*            SET FOR ALL I/O REQUESTS THROUGH THIS MODULE             * 36600002
*                                                                     * 36700002
*********************************************************************** 36800002
         SPACE 2                                                        36900002
IFD35100 EQU   *                                                        37000002
         CLI   DEVUNTYP,U2305TY1  IS THIS DASD A 2305 TYPE 1            37100002
         BE    IFD35110           GO SET SPECIFIC EXPOSURE BIT FOR I/O  37200002
*                                 EFFECTOR                              37300002
         CLI   DEVUNTYP,U2305TY2  IS DEVICE A 2305 TYPE 2               37400002
         BNE   IFD35130           GO SET BYPASS PREFIX BIT              37500002
IFD35110 EQU   *                                                        37600002
         OI    FLGA,SPEXPOS       SET 2305 SPECIFIC EXPOSURE BIT        37700002
         B     IFD35130           GO SET BYPASS PREFIX BIT              37800002
         SPACE                                                          37900002
IFD35120 EQU   *                                                        38000002
         CLI   DEVCLASS,TAPE      IS THIS A TAPE DEVICE                 38100002
         BNE   IFD35140           GO CHECK FOR ATTN REQUEST             38200002
IFD35130 EQU   *                                                        38300002
         OI    FLGA,BYPASPFX      SET TO BYPASS PREFIX                  38400002
IFD35140 EQU   *                                                        38500002
         TM    OEXIOFLG,ATTNREQ   CHECK IF ATTN REQUESTED               38600002
         BNO   IFD35150           GO SET UP FOR CE/DE POSTING           38700002
         OI    IFD35SW1,SCANFNCT  SET SCAN RTN SW FOR NO-OP/SENSE SCAN  38800002
         BAL   LINKREG,IFD35400   GO SCAN FOR NO-OP/SENSE AT LAST CCW   38900002
         BNZ   IFD35170           INVALID CHAIN -GO RETURN WITH RC = 8  39000002
         OI    FLGB,ATTNIN        SET BIT TO ALLOW EXTRA INTERRUPT      39100002
IFD35150 EQU   *                                                        39300002
         OI    FLGA,CEDEPOST      ALLOW FOR CE/DE SEPARATE POSTING      39400002
IFD35160 EQU   *                                                        39500002
         OI    FLGA,GDP           SET FOR GUARENTEED DEVICE PATH        39600002
         TM    DEVFLAG1,ACTIVE    IS THIS DEVTAB ACTIVE                 39610002
         BO    IFD35170           YES-GO GIVE BAD RETURN TO OLT         39620002
         NI    DEVFLAG2,ALL-EXIOLVL3   SET THE EXIO LEVEL=3 BIT OFF     39630002
         CLI   OEXIOLVL,THREE     IS THIS EXIO CALL A LEVEL 3           39640002
         BNE   IFD35165           NO-GO PROCESS FOR NON-LEVEL=3         39650002
         OI    DEVFLAG2,EXIOLVL3  IT'S A LEVEL 3,SO SET EXIO LEVEL=3    39660002
         SPACE 3                                                        39700002
IFD35165 EQU   *                                                        39750002
         NI    TBFLAGS,ALL-TBSIONOG    SET BIT = 0 FOR INDI-            39800002
*                                  CATION TO DPRINT IF WAITIO FINDS SIO 39900002
*                                  DIDN'T GO. THAT IS TECB IS EMPTY     40000002
         L     R15,IORTNADR       GET I/O EFFECTOR ENTRY ADDRESS        40100002
         BALR  R14,R15            GO TO I/O EFFECTOR TO ISSUE STARTIO   40200002
         LTR   RETCODER,RETCODER  IS RETURN CODE = 0                    40300002
         BZ    IFD35190           ALL IS OK - GO RESTORE REGS AND RETRN 40400002
         SPACE                                                          40500002
IFD35170 EQU   *                                                        40600002
         LA    RETCODER,RETHEX8   GIVE RETURN CODE OF 8 TO OLT          40700002
         B     IFD35200                                                 40800002
         SPACE                                                          40900002
IFD35180 EQU   *                                                        41000002
         LA    RETCODER,RETHEXC                                         41100002
         B     IFD35200                                                 41200002
IFD35190 EQU   *                                                        41300002
         TM    OEXIOFLG,SNSEQNO   IS THIS EXIO FOR SENSE = NO AFTER     41400002
*                                  UNIT CHECK                           41500002
         BNO   IFD35200           GO RESTORE CALLERS REGS               41600002
         LA    RETCODER,RETHEX10  SET REG 15 = X'10'                    41700002
IFD35200 EQU   *                                                        41800002
         L     SAVEREG,SAVEARE1+4   GET HIS SAVEAREA POINTER            41900002
         L     REG14,12(SAVEREG)  RESTORE REG UJ                        42000002
         LM    REG0,REG12,20(SAVEREG)  RESTORE REGS 0 - 12              42050002
         BR    REG14              RETURN TO CALLER                      42100002
         EJECT                                                          42200002
*********************************************************************** 42300002
*                   SCAN SUBROUTINE                                   * 42400002
*   THIS ROUTINE PERFORMS TWO FUNCTIONS BASED ON SCAN FUNCTION FLAG   * 42500002
* IN IFD35SW1,SCANFNCT.                                               * 42600002
*        1. IF SCANFNCT = 0 DO:                                       * 42700002
*          SCAN CCW'S POINTED TO BY 'CCWPTREG' TO DETERMINE IF OLT IS * 42800002
*        VIOLATING THE FILE PROTECTED OR ALLOCATED DIRACT ACCESS      * 42900002
*        DEVICE.                                                      * 43000002
*        2. IF SCANFUCT = 1 DO:                                       * 43100002
*          SCAN TO END OF CCW CHAIN POINTED TO BY 'CCWPTREG' TO SEE   * 43200002
*        IF THE OLT TERMINATES THE CCW CHAIN WITH A 'NO-OP' OR 'SENSE'* 43300002
*        COMMAND. THIS IS REQUIRED IF THE OLT WISHES THE 'ATTENTION'  * 43400002
*        FUNCTION INVOKED FOR THIS REQUEST.                           * 43500002
*   THIS ROUTINE SETS THE CONDITION TO ZERO IF THE CCW CHAIN IS OK.   * 43600002
* IT SETS THE CONDITION CODE TO NOT-ZERO IF A VIOLATION IS FOUND.     * 43700002
*                                                                     * 43800002
*********************************************************************** 43900002
         SPACE 3                                                        44000002
IFD35400 EQU   *                                                        44100002
         XC    FILMSKSV,FILMSKSV  ZERO THE FILE MASK SAVE AREA          44200002
         SR    WORKREG1,WORKREG1  ZERO WORK REG # 1                     44300002
         IC    WORKREG1,OCCWCNT   GET CCW COUNT                         44400002
         BCTR  WORKREG1,0         SUBTRACT 1 FROM THE COUNT             44500002
         SLL   WORKREG1,THREE     MULTIPLY CCW COUNT-1 BY 8 TO GET      44530002
*                                  DISPLACEMENT TO LAST CCW             44560002
         LA    LSTCCWAD,0(WORKREG1,CCWPTREG)     POINT TO LAST CCW IN   44600002
*                                  THIS CHNL PROGRAM.                   44700002
         LR    WORKREG1,CCWPTREG  GET COPY OF 1ST CCW ADDRESS           44800002
IFD35410 EQU   *                  SCAN LOOP START                       44900002
         MVC   CCWCOPY1,0(WORKREG1)    GET A COPY OF THIS CCW           45000002
         TM    IFD35SW1,SCANFNCT       IS REQUEST TO SEARCH FOR         45100002
*                                       CHAIN END OF NO-OP/SENSE        45200002
         BO    IFD35430                YES-GO CHECK FOR TIC             45300002
         TM    CCWCOPY1+CCWCOMND,TICFILL    IS THIS A 'TIC' CCW         45400002
         BZ    IFD35430           YES- GO TO TIC CHECKING RTN           45500002
         NI    CCWCOPY1+CCWCOMND,ALL-MULTITRK    ZERO MULTI TRACK BIT   45600002
         CLI   CCWCOPY1+CCWCOMND,SFM   IS COMMAND A SET FILE MASK       45700002
         BNE   IFD35420           NO-GO AROUND FILE MASK SAVE           45800002
         L     WORKREG3,CCWCOPY1  GET FILE MASK ADDRESS FROM SFM CCW    45900002
         LA    WORKREG3,0(WORKREG3)    ZERO HIGH ORDER BYTE             46000002
         MVC   FILMSKSV,0(WORKREG3)    SAVE FILE MASK                   46100002
IFD35420 EQU   *                                                        46200002
         BNL   IFD35440                IF COMMAND > X'1E' WRITE COUNT,  46300002
*                                       KEY,DATA -THEN COMMAND DOESN'T  46400002
*                                       NEED CHECKING-GO CHECK CHAINING 46500002
         TM    CCWCOPY1+CCWCOMND,RD+WRT     IS READ OR WRITE BIT ON     46600002
         BM    IFD35510           YES-ONE IS.SO GO CHECK WHICH          46700002
         BZ    IFD35430           NEITHER ARE-GO LOOK FOR TIC OR SENSE  46800002
         TM    CCWCOPY1+CCWCOMND,BITS45     ARE BITS 4 AND 5 ON OR OFF  46900002
         BNM   IFD35440           EITHER ALL ON OR OFF - GO CHECK NEXT  47000002
         CLI   CCWCOPY1+CCWCOMND,RESTORE    IS IT A RESTORE             47100002
         BE    IFD35440           YES-GO TO NEXT CCW                    47200002
         SPACE 2                                                        47300002
*  HERE BECAUSE CCW IS A SEEK - DO EXTENT CHECKING                      47400002
         SPACE                                                          47500002
         L     WORKREG3,CCWCOPY1  GET SEEK ADDRESS POINTER              47600002
         LA    WORKREG3,0(WORKREG3)    ZERO HIGH ORDER BYTE             47700002
         CLC   0(L6,WORKREG3),DEVLOEXT IS SEEK LOWER THAN LOWEST VALID  47800002
         BL    IFD35530           YES-GO GIVE ERROR RETURN              47900002
         CLC   2(L4,WORKREG3),DEVHIEXT IS SEEK HIGHER THAN HIGHEST VAL  48000002
         BH    IFD35530           YES-GO GIVE ERROR RETURN              48100002
IFD35430 EQU   *                                                        48200002
         NI    CCWCOPY1+CCWCOMND,LOBITS     ZERO TIC MODIFIERS          48300002
         CLI   CCWCOPY1+CCWCOMND,TIC   IS THIS A 'TIC'                  48400002
         BNE   IFD35440           NO-GO CHECK CHAINING FLAGS            48500002
         L     WORKREG3,CCWCOPY1+CCWCOMND   GET TIC TO ADDRESS          48600002
         LA    WORKREG3,0(WORKREG3)    ZERO HI ORDER BYTE               48700002
         CR    WORKREG3,CCWPTREG  IS TIC 'TO' ADDRESS LESS THAN START   48800002
         BL    IFD35530           YES-GO GIVE ERROR RETURN              48900002
         CR    WORKREG3,LSTCCWAD  IS TIC 'TO' ADDRESS MORE THAN END     49000002
         BH    IFD35530           YES-GO GIVE ERROR RETURN              49100002
         LA    WORKREG1,8(WORKREG1)    POINT TO NEXT CCW                49200002
         CR    WORKREG1,LSTCCWAD  DOES SCAN CCW POINDER POINT PAST LAST 49300002
         BNH   IFD35410           NO-GO CHECK THE NEXT CCW              49400002
         B     IFD35470           PAST CHAIN-GO SEE IF OK TO END IN TIC 49500002
         SPACE 2                                                        49600002
*  CHECK CCW CHAINING FLAGS                                             49700002
         SPACE                                                          49800002
IFD35440 EQU   *                                                        49900002
         TM    CCWCOPY1+CCWFLAGS,DATACHAN+CMNDCHAN    ARE ANY CHAINING  50000002
*                                  BITS ON                              50100002
         BZ    IFD35490           NO-GO SEE IF END OF CCW LIST          50200002
         TM    CCWCOPY1+CCWFLAGS,CMNDCHAN   IS IT COMMAND CHAINING      50300002
         BO    IFD35500           YES-GO UPDATE TO NEXT CCW ADDR        50400002
IFD35450 EQU   *                                                        50500002
         LA    WORKREG1,8(WORKREG1)    POINT TO NEXT CCW                50600002
         TM    CCWFLAGS(WORKREG1),DATACHAN  DOES THIS SHOW DATA CHAIN   50700002
         BO    IFD35450           YES-GO UPDATE AND CHECK NEXT          50800002
IFD35460 EQU   *                                                        50900002
         CR    WORKREG1,LSTCCWAD  HAS SCAN POINTER GONE PAST LAST CCW   51000002
         BH    IFD35530           YES-GO GIVE ERROR                     51100002
         BL    IFD35410           IT'S LOW-GO SCAN THIS CCW             51200002
IFD35470 EQU   *                                                        51300002
         TM    IFD35SW1,SCANFNCT  IS ONLY NO-OP/SENSE SCAN WANTED       51400002
         BZ    IFD35480           NO-GO GIVE OK CONDITION               51500002
         CLI   CCWCOPY1+CCWCOMND,NOOP  IS IT A NO-OP                    51600002
         BE    IFD35480           YES-GO GIVE OK CONDITION              51700002
         CLI   CCWCOPY1+CCWCOMND,SENSE IS IT A SENSE                    51800002
         BNE   IFD35530           NO-GO GIVE NON-ZERO RETURN CODE       51900002
IFD35480 EQU   *                                                        52000002
         CR    LSTCCWAD,LSTCCWAD  SET CC = 0                            52100002
         BR    LINKREG            RETURN TO CALLER                      52200002
         SPACE                                                          52300002
IFD35490 EQU   *                                                        52400002
         LA    WORKREG1,8(WORKREG1)    POINT TO NEXT CCW                52500002
         CR    WORKREG1,LSTCCWAD  END OF CHAIN                          52600002
         BNH   IFD35410           NO-GO CHECK THIS CCW                  52700002
         B     IFD35470           YES-GO SEE IF LAST CCW OK             52800002
         SPACE                                                          52900002
IFD35500 EQU   *                                                        53000002
         LA    WORKREG1,8(WORKREG1)    POINT TO NEXT CCW                53100002
         CR    WORKREG1,LSTCCWAD  IS IT PAST LAST CCW                   53200002
         BNH   IFD35410           NO-GO SCAN THIS CCW                   53300002
         B     IFD35530           YES-GO GIVE ERROR RETURN              53400002
         SPACE 3                                                        53500002
*  CHECK FOR READ/WRITE OP CODES                                        53600002
         SPACE                                                          53700002
IFD35510 EQU   *                                                        53800002
         TM    CCWCOPY1+CCWCOMND,RD+MULTITRK ON                         53900002
         BNZ   IFD35440           YES-GO CHECK CHAINING FLAGS           54000002
         TM    DEVFLAG1,FILEPRT   IS DEVICE FILE PROTECTED              54100002
         BO    IFD35520           YES-GO CHECK IF 3340 FOR OK WRITE     54200002
         TM    DEVFLAG1,ALOCATED  IS DEVICE ALLOCATED                   54300002
         BNO   IFD35440           NO-GO CHECK CHAINING FLAGS            54400002
         TM    CCWCOPY1+CCWCOMND,FRMTWRT    IS IT A FORMATED WRITE      54500002
         BNO   IFD35440           NO-GO CHECK CHAINING FLAGS            54600002
         TM    CCWCOPY1+CCWCOMND,BITS45    (REST OF FORMATED WRITE BITS 54700002
         BO    IFD35440           WRITE IS OK-GO CHECK FLAGS            54800002
IFD35520 EQU   *                                                        54900002
IFD35530 EQU   *                                                        55400002
         LTR   LSTCCWAD,LSTCCWAD  SET CC = NOT 0                        55500002
         BR    LINKREG            RETURN TO CALLER                      55600002
         TITLE '***  IFDOLT35 - OLTEP AR-145 EXIO. I/O EFFECTOR  ***'   55700002
         EJECT                                                          55800002
         ENTRY IOEFFCTR           ENTRY POINT TO I/O EFFECTOR           55900002
IOEFFCTR DS    0H                                                       56000002
         SPACE                                                          56100002
*********************************************************************** 56200002
*                                                                     * 56300002
*                I/O EFFECTOR                                         * 56400002
*                                                                     * 56500002
*   THIS ROUTINE IS ENTERED BY A BRANCH AND LINK INTERFACE FROM       * 56600002
*  ANY OLTEP MODULE THAT WISHES A STARTIO ISSUED TO A DEVICE.         * 56700002
*  THE ENTRY POINT TO THIS MODULE EXISTS IN THE OLTEP COMMON          * 56800002
*  AREA POINTED TO BY REGISTER 2. THE LABEL IN THE COMMON AREA        * 56900002
*  IS 'IORTNADR'.                                                     * 57000002
*   UPON ENTRY THIS MODULE EXPECTS THE I/O EFFECTOR CONTROL           * 57100002
*  BLOCK TO BE INITIALIZED. THIS CONTROL BLOCK RESIDES IN THE         * 57200002
*  OLTEP COMMON AREA AND IS MAPPED THERE BEGINNING AT THE LABEL       * 57300002
*  'EFCTRCB'. IF THE CCW, DEVICE TABLE, OR TECB POINTERS OR THE       * 57400002
*  SENSE COUNT IS ZEROES A RETURN OF X'10' IS RETURNED TO THE         * 57500002
*  CALLER. TRYING TO START AN ACTIVE DEVICE RESULTS IN A RETURN       * 57600002
*  CODE OF X'8'. IF NO IOSB CONTROL BLOCK SET IS AVAILABLE TO         * 57700002
*  INIATE THE I/O EVENT A RETURN CODE OF X'4' IS PASSED FROM          * 57800002
*  SVC-59 TO THE CALLER. IF THE CCW TRANSLATOR FAILS, A MESSAGE       * 57900002
*  IS OUTPUTTED FROM THIS ROUTINE AND A RETURN CODE OF X'C' IS        * 58000002
*  RETURNED TO THE CALLER IF IT IS AN INTERNAL CALL, E.G. DATA        * 58100002
*  PROTECTION. IF NOT AN INTERNAL CALL THE TERMINATE OLT BIT IS       * 58200002
*  SET AND OLTEP'S SCHEDULER'S REG ARE RESTORED AND RETURN IS         * 58300002
*  MADE TO THE SCHEDULER.                                             * 58400002
*                                                                     * 58500002
*********************************************************************** 58600002
         EJECT                                                          58700002
*********************************************************************** 58800002
*                   REGISTER EQUATES                                    58900002
*********************************************************************** 59000002
         SPACE                                                          59100002
REG0     EQU   0                  NAME FOR REG 0                        59200002
REG1     EQU   1                  NAME FOR REG 1                        59300002
R1       EQU   1                  NAME FOR REG 1                        59400002
SVCALLRG EQU   1                  SVC-59 CALL CODE REG = 1              59500002
IOSBREG  EQU   5                  POINTER TO MODEL IOSB                 59600002
WORKREG1 EQU   8                  A WORKING GPR # 1                     59700002
DVTABPTR EQU   9                  DEVTAB ENTRY POINTER                  59800002
CHARPTR  EQU   12                 REG POINTS TO CONVERT CHAR            59900002
REG12    EQU   12                 NAME FOR REG 12                       60000002
SAVEREG  EQU   13                 SAVE AREA POINTER REG                 60100002
R14      EQU   14                 NAME FOR REG 14                       60200002
REG14    EQU   14                 NAME FOR REG 14                       60300002
RETCODER EQU   15                 NAME FOR RETURN CODE REG 15           60400002
R15      EQU   15                 NAME FOR REG 15                       60500002
ENTRYREG EQU   15                 THIS REG CONTAINS THE ENTRY POINT     60600002
         EJECT                                                          60700002
*********************************************************************** 60800002
*                  MISC EQUATES                                       * 60900002
*********************************************************************** 61000002
         SPACE                                                          61100002
L1       EQU   1                  VALUE FOR LENGTH OF 1                 61200002
CCWFLAGS EQU   4                  DISPLACEMENT INTO CCW FOR FLAG        61300002
FOUR     EQU   4                  A DECIMAL VALUE OF 4                  61400002
SEEKLGN  EQU   6                  SEEK ADDRESS CHARACTER LENGTH         61500002
L4WDS    EQU   16                 NAME FOR A LENGTH OF 4 WORDS          61600002
OLTEPSVC EQU   59                 OLTEP'S SVC NUMBER                    61700002
OLTTERM  EQU   X'01'               VALUE FOR THE OLT TERM SWITCH IN     61800002
*                                  CE SWITCH 9                          61900002
VIRTSPC  EQU   X'02'              MASK FOR 'OLTEP IN VIRTUAL' BIT IN    62000002
*                                  CESWT7 IN COMMON AREA                62100002
SEEKOP   EQU   X'07'              SEEK CCW OP CODE                      62200002
TICFILL  EQU   X'07'              TIC CCW LOW ORDER BITS                62300002
TICBIT   EQU   X'08'              TIC CCW OP CODE BIT                   62400002
RETHEX8  EQU   X'08'              VALUE FOR A RETURN CODE OF 8          62500002
RETHEX10 EQU   X'10'              VALUE FOR A RETURN CODE OF 16         62600002
DASD     EQU   X'20'              DIRECT ACCESS DEVICE CLASS            62700002
CMNDCHAN EQU   X'40'              CCW FLAG COMMAND CHAINING BIT         62800002
DATACHAN EQU   X'80'              CCW FLAG DATA CHAINING BIT            62900002
SVCSIOCD EQU   X'5C'              SVC-59 SIO CALL CODE                  63000002
LOBITS   EQU   X'0F'              VALUE FOR CONVERTING RET CODES        63100002
HIBITS   EQU   X'F0'              VALUE FOR CONVERTING RET CODES        63200002
ALL      EQU   X'FF'              VALUE FOR ALL FLAG BITS               63300002
RETHEXC  EQU   X'0C'              VALUE FOR A RETURN CODE OF 12         63400002
*                                  FOR VIRTUAL CCW XLATION ERROR        63480002
*                                  ON INTERNAL CALLS                    63560002
BYTEZERO EQU   X'00'              A HEX BYTE OF ZERO                    63650002
         EJECT                                                          63700002
         USING IOSB,IOSBREG       SET MODEL IOSB ADDRESSABILITY       * 63800002
         STM   REG14,REG12,12(SAVEREG) SAVE CALLERS REGS IN HIS         63830002
*                                  SAVE AREA                            63860002
         LR    BASEREG,ENTRYREG   GET ENTRY POINT VALUE                 63900002
         LA    ENTRYREG,IOEFFCTR-IFDOLT35   VALUE TO ADJUST ENTRY POINT 64000002
*                                            FOR ADDRESSABILITY         64100002
         SR    BASEREG,ENTRYREG   ADJUST ENTRY POINT FOR MODULE         64200002
*                                  ADDRESSABILITY                       64300002
         SPACE 3                                                        64400002
         ST    SAVEREG,SAVEAREA+4 SAVE CALLERS SAVE AREA POINTER        64700002
         LA    REG14,SAVEAREA     GET MY SAVE AREA ADDRESS              64800002
         ST    REG14,8(SAVEREG)   PUT MY SAVE AREA POINTER INTO         64900002
*                                  CALLERS SAVE AREA                    65000002
         LR    SAVEREG,REG14      PUT MY SAVE AREA ADDRESS INTO         65100002
*                                  SAVE AREA REG                        65200002
         LA    IOSBREG,MODIOSB    GET MODEL IOSB ADDRESS                65300002
         ICM   DVTABPTR,B'1111',DVTPTR GET DEVTAB ENTRY ADDRESS         65400002
*                                 IS POINTER ZEROES                     65500002
         BZ    EFF35160           YES-GO ERROR RETURN CODE X'10'        65600002
         TM    DEVFLAG1,ACTIVE    IS THIS DEVICE ALREADY ACTIVE         65700002
         BO    EFF35150           YES-GO ERROR RETURN CODE X'08'        65800002
         OI    DEVFLAG1,ACTIVE    NO-SET IT ACTIVE                      65900002
         NI    DEVFLAG2,ALL-PCIIND   SET THE PIC INDICATOR BIT OFF      65950002
         XC    IOSCB,IOSCB        ZERO THE MODEL IOSB AND IOSUSE        66000002
*                                  CONTROL BLOCKS IN THE COMMON         66100002
*                                  AREA                                 66200002
         ICM   WORKREG1,B'1111',TECBPTRX     GET TECB POINTER           66300002
*                                  FROM EFFECTOR CONTROL BLOCK          66400002
         BZ    EFF35160           IT'S ZERO-GO GIVE RETURN OF 16        66500002
         ST    WORKREG1,TECBPTR   PUT TECB POINTER INTO MODEL           66600002
*                                  IOS USE CONTROL BLOCK                66700002
         LA    WORKREG1,IODEVTAB  GET ADDRESS OF 1ST IODEVTAB           66800002
         ST    WORKREG1,IODVTBPT  PUT IT INTO I/O USE CTRL BLK          66900002
         SPACE 3                                                        67000002
         TM    FLGB,INTERNAL      IS INTERNAL CALL BIT ON               67100002
         BNO   EFF35000           NO-GO CHECK NEXT BIT                  67200002
         OI    USEFLAGA,INTRNLCB  SET USE CB BIT ON FOR INTERNAL        67300002
         SPACE                                                          67400002
EFF35000 EQU   *                   CALL                                 67500002
         TM    FLGB,ATTNIN        IS ATTENTION REQUESTED                67600002
         BNO   EFF35010           NO-GO CHECK NEXT BIT                  67700002
         OI    USEFLAGA,ATTN      TURN ON USE CB ATTN BIT               67800002
         SPACE                                                          67900002
EFF35010 EQU   *                                                        68000002
         TM    CESWT7,VIRTSPC     CHECK IF OLTEP/OLT ARE VIRTUAL FOR    68100002
*                                  SETTING THE VIRTUAL CCW BIT          68200002
         BNO   EFF35020           NO-GO CHECK NEXT BIT                  68300002
         OI    USEFLAGA,VIRTCCW   TURN ON USE CB VIRTUAL CCW BIT        68400002
         SPACE                                                          68500002
EFF35020 EQU   *                                                        68600002
         TM    FLGB,OLDTECBX      IS THIS FOR A P3116 TECB              68700002
         BNO   EFF35030           NO-DON'T TURN ON OLD TECB BIT         68800002
         OI    USEFLAGA,OLDTECB   SET USE CB OLD TECB BIT ON            68900002
         SPACE                                                          69000002
EFF35030 EQU   *                                                        69100002
         TM    FLGA,BYPASPFX      IS BYPASS IOS CCW PREFIX ON           69200002
         BNO   EFF35040           NO-GO CHECK NEXT FUNCTION             69300002
         OI    IOSOPT,IOSBYP      TURN ON BYPASS BIT IN IOSB            69400002
         SPACE                                                          69500002
EFF35040 EQU   *                                                        69600002
         TM    FLGA,CEDEPOST      IS CHNL END/DEVICE END POSTING        69700002
*                                  REQUESTED                            69800002
         BNO   EFF35050           GO CHECK NEXT BIT                     69900002
         OI    IOSOPT,IOSDEP      TURN ON IOSB CE/DE POST BIT           70000002
         SPACE                                                          70100002
EFF35050 EQU   *                                                        70200002
         OI    IOSPATH,IOSGDP     SET IOSB GDP BIT                      70500002
EFF35060 EQU   *                                                        70600002
         TM    FLGA,SPEXPOS       IS SPECIFIC EXPOSURE REQUESTED        70700002
         BNO   EFF35070           NO-GO AROUND SETTING BIT              70800002
         OI    IOSPATH,IOSEXP     SET SPECIFIC EXPOSURE BIT-IOSB        70900002
         SPACE 3                                                        71000002
EFF35070 EQU   *                                                        71100002
         OI    IOSOPT,IOSNERP+IOSTSLL    SET 'NO ERP' AND NO LOCAL      71200002
*                                     LOCK ON TERM RTN IN IOSB          71250002
         OC    IOSPATH,DEVAD      MOVE HEX DEVICE ADDRESS TO            71300002
*                                  IOSB FROM DEVTAB                     71400002
         MVC   IOSPCI(L4WDS),PCIEXIT   MOVE PCI, NORMAL, ABNOR-         71500002
*                                  MAL,AND DISABLED INTERRUPT           71600002
*                                  ADDRESSES FROM COMMON AREA TO        71700002
*                                  IOSB                                 71800002
         ICM   WORKREG1,B'1111',CCWPTR GET CCW POINTER                  71900002
         BZ    EFF35160           IF ZERO GO EXIT-BAD-RETCODE=16        72000002
         ST    WORKREG1,IOSVST    PUT CCW ADDRESS INTO IOSB             72100002
         MVC   IOSUCB,DEVUCBAD    MOVE UCB ADDRESS FROM DEVTAB          72200002
*                                  TO IOSB                              72300002
         CLI   DEVCLASS,DASD      IS THE DEVICE A DIRECT ACCESS         72400002
         BNE   EFF35130           NO-BYPASS MOVING SEEK ADDR            72500002
         ICM   WORKREG2,B'1111',SEEKPTR     GET SEEK ADDRESS PTR IF     72502002
*                                  CALL IS FOR OLD 'P3116' OLT          72504002
         BZ    EFF35090           CALL NOT FROM OLD OLT . GO PROCESS    72506002
*                                  FOR NEW CHAINS                       72508002
         MVC   IOSSKBB(SEEKLGN),0(WORKREG2)      MOVE SEEK ADDR TO      72508402
*                                  IOSB                                 72508802
         B     EFF35130           GO FINISH IOSB                        72509202
         SPACE                                                          72600002
EFF35090 EQU   *                                                        72700002
         CLI   0(WORKREG1),SEEKOP IS THIS CCW A SEEK                    72800002
         BE    EFF35120           YES-GO MOVE SEEK ADDRESS              72900002
         CLI   0(WORKREG1),X'13'    IS THIS CCW A RECALIBRATE  @UZ00852 72930003
         BE    EFF35120             YES GO MOVE CCW            @UZ00852 72960003
         TM    0(WORKREG1),TICBIT IS TIC BIT ON                         73000002
         BNO   EFF35100           NO-CHECK FOR CHAINING                 73100002
         TM    0(WORKREG1),TICFILL IS THIS A REAL TIC                   73200002
         BNZ   EFF35100           NO-GO CHECK FOR CHAINING              73300002
         ICM   WORKREG1,B'0111',1(WORKREG1) GET TICKED-TO CCW           73400002
*                                  ADDRESS                              73500002
         B     EFF35090           CONTINUE                              73600002
EFF35100 EQU   *                                                        73700002
         TM    CCWFLAGS(WORKREG1),CMNDCHAN WANT COMMAND CHAINING        73800002
         BNZ   EFF35110           YES-GO INCREMENT AND CONTINUE         73900002
         TM    CCWFLAGS(WORKREG1),DATACHAN WANT DATA CHAINING           74000002
         BNO   EFF35130           NO-END CHAIN                          74100002
         LA    WORKREG1,8(WORKREG1) ADD 8 TO CCW INCREMENTER REG        74200002
         B     EFF35100           GO CHECK CHAINING FLAGS               74300002
         SPACE 2                                                        74400002
EFF35110 EQU   *                                                        74500002
         LA    WORKREG1,8(WORKREG1) ADD 8 TO CCW INCREMENTER REG        74600002
         B     EFF35090           GO CONTINUE SCAN                      74700002
         SPACE 2                                                        74800002
EFF35120 EQU   *                                                        74900002
         ICM   WORKREG1,B'0111',1(WORKREG1) GET SEEK ADDRESS PTR        75000002
         MVC   IOSSKBB(SEEKLGN),0(WORKREG1) MOVE BBCCHH TO IOSB         75100002
         SPACE                                                          75200002
EFF35130 EQU   *                                                        75300002
         ST    IOSBREG,ROPT       PUT MODEL IOSB ADDR INTO SVC59        75400002
*                                  PARM LIST WORD 1.                    75500002
         ST    DVTABPTR,ROPT+4    PUT DEVTAB ENTRY POINTER INTO         75600002
*                                  SVC-59 PARM LIST                     75700002
         XR    WORKREG1,WORKREG1  ZERO WORKREG1                         75800002
         ICM   WORKREG1,B'0001',SNSCNT GET THE PASSED SENSE CNT         75900002
         BZ    EFF35160           IS IT ZERO                            76000002
         STC   WORKREG1,OECBSNSC  NO-PUT EXPECTED SENSE COUNT           76100002
*                                  INTO MODEL OECB WORD 1               76200002
         MVC   IOSFMSK(L'FILEMSK),FILEMSK GET FILEMASK/MODESET          76300002
*                                   FOR THIS REQUEST                    76400002
         MVI   DEVINTPT,BYTEZERO  SET DEVTAB INTERRUPT COUNTER TO       76410002
*                                 ZEROES                                76420002
*                                   FOR THIS REQUEST                    76430002
         LA     SVCALLRG,SVCSIOCD PUT START IO CALL CODE INTO           76500002
*                                  SVC-59 CALL CODE REG                 76600002
         LA    REG0,ROPT          PUT ADDR OF ROPT INTO REG 0 FOR SVC-  76700002
         SPACE                                                          76800002
         SVC   OLTEPSVC           ISSUE SVC-59 FOR A STARTI0            76900002
         SPACE 2                                                        77000002
         LTR   RETCODER,RETCODER  IS RETURN CODE = 0                    77100002
         BZ    EFF35190           YES-GO RESTORE REGS AND RETURN        77200002
         SPACE                                                          77300002
         LA    WORKREG1,FOUR      SET A REG = 4 TO COMPARE RETCD        77400002
         CR    RETCODER,WORKREG1  IS RETURN CODE = 4                    77500002
         BE    EFF35180           HERE BECAUSE SVC-59 SAYS NO IOSB.     77600002
*                                  SO GO TURN OFF ACTIVE BIT IN DEVTAB  77700002
*                                  AND RETURN TO CALLER                 77800002
         SPACE 2                                                        77900002
EFF35140 EQU   *                                                        78000002
         NI    DEVFLAG1,ALL-ACTIVE   TURN OFF ACTIVE BIT                78100002
         LA    WORKREG1,LOBITS    GET 'AND' MASK FOR LOW BITS ON        78200002
         NR    WORKREG1,RETCODER  'AND' OUT HIGH BITS                   78300002
         LA    CHARPTR,CONVCHAR(WORKREG1)   POINT TO EBCDIC CHAR        78400002
*                                            FOR LOW CHAR BITS          78500002
         MVC   MSGCODE+1(L1),0(CHARPTR)     PUT LOW ORDER OF RET        78600002
*                                            CODE INTO MSG              78700002
         LA    WORKREG1,HIBITS    MASK FOR HIGH ORDER RETURNCODE        78800002
         NR    WORKREG1,RETCODER  ZERO LOW ORDER RET CDE BITS           78900002
         LA    CHARPTR,CONVCHAR(WORKREG1)   GET ADDR OF EBCDIC          79000002
*                                  RETURN CODE HIGH ORDER BITS          79100002
         MVC   MSGCODE(L1),0(CHARPTR)  MOVE HIGH ORDER RET CODE         79200002
*                                  BITS TO MESSAGE                      79300002
         LA    REG1,IFD310        GET MESSAGE ADDRESS                   79400002
         PWTO  REG=(REG1)         OUTPUT MSG3101                        79500002
         SPACE 3                                                        79600002
         TM    FLGB,INTERNAL      WAS IT AN INTERNAL CALL               79700002
         BE    EFF35170           YES-GO RETURN TO CALLER               79800002
         OI    CESWT9,OLTTERM     NO-SET TERMINATE OLT SW ON            79900002
         L     SAVEREG,SCHEDSA    GET ADDRESS OF SCHEDULER'S            80000002
*                                  SAVE AREA                            80100002
         LM    REG14,REG12,12(SAVEREG) RESTORE SCHEDULERS REGS          80200002
         BR    REG14              RETURN TO SCHEDULER                   80300002
         SPACE 2                                                        80400002
EFF35150 EQU   *                                                        80500002
         LA    RETCODER,RETHEX8   SET RETURN CODE OF 8                  80600002
         B     EFF35190           GO RESTORE REGS AND RETURN            80700002
         SPACE 3                                                        80800002
EFF35160 EQU   *                                                        80900002
         LA    RETCODER,RETHEX10  SET RETURN CODE OF 16                 81000002
         B     EFF35180           GO RESTORE REGS AND RETURN            81100002
         SPACE 3                                                        81200002
EFF35170 EQU   *                                                        81300002
         LA    RETCODER,RETHEXC   SET RETURN CODE OF 12                 81400002
EFF35180 EQU   *                                                        81500002
         NI    DEVFLAG1,ALL-ACTIVE     SET DEVTAB ACTIVE BIT OFF        81600002
EFF35190 EQU   *                                                        81700002
         L     SAVEREG,SAVEAREA+4 GET ADDRESS OF CALLERS SAVE AREA      81800002
         L     REG14,12(SAVEREG)  RESTORE REG 14                        81900002
         LM    REG0,REG12,20(SAVEREG)  RESTORE REST OF REGS AND         82000002
         BR    REG14               RETURN TO CALLER                     82100002
         TITLE '***  IFDOLT35 - OLTEP AR-145 EXIO. BASE MODULE  ***'    82200002
         EJECT                                                          82300002
*********************************************************************** 82400002
*                   MISC CONSTANTS AND DATA AREAS                     * 82500002
*********************************************************************** 82600002
         SPACE                                                          82700002
         SPACE                                                          82800002
SAVEAREA DC    18F'0'             I/O EFFECTOR SAVE AREA                82900002
SAVEARE1 DC    18F'0'             IFDOLT35 SAVE AREA                    83000002
CCWCOPY1 DC    XL8'00'            SCAN ROUTINE WORK AREA                83100002
         SPACE                                                          83200002
C73PLIST DS    2F                 PARAMETER LIST FOR IFDOLT73 LINE      83300002
*                                  CONNECTION REQUEST                   83400002
C73PDVTB EQU   C73PLIST+0         DEVTAB POINTER FOR IFDOLT73           83500002
C73PCDSP EQU   C73PLIST+4         CDS ADDRESS IN OLT FOR IFDOLT73       83600002
CT3340   DC    XL2'200C'          CONSTANT FOR 3340 CLASS AND TYPE      83700002
CT3350   DC    XL2'200B'          CONSTANT FOR 3350 CLASS/TYPE @Z30RSAG 83750003
IFD35SW1 DC    XL1'00'            IFDOLT35 SWITCH BYTE # 1              83800002
FILMSKSV DC    XL1'00'            SAVE AREA FOR SCAN CCW FILEMASK       83900002
CETRKWRT EQU   X'04'              3340 FILE MASK FOR CE TRACK WRTS ONLY 84000002
*  BIT NAMES FOR 'IFD35SW1'                                             84100002
SCANFNCT EQU   X'80'              CCW SCAN SEARCH CHAIN END-NO-OP/SENSE 84200002
*        EQU   X'40'              UNUSED                                84300002
*        EQU   X'20'              UNUSED                                84400002
*        EQU   X'10'              UNUSED                                84500002
*        EQU   X'08'              UNUSED                                84600002
*        EQU   X'04'              UNUSED                                84700002
*        EQU   X'02'              UNUSED                                84800002
*        EQU   X'01'              UNUSED                                84900002
CONVCHAR DC    C'0123456789ABCDEF'     CHARACTERS TO CONVERT IOS        85000002
*                                  CCW XLATOR ERROR CODE                85100002
*                                  FOR MSG IFD310I                      85200002
         EJECT                                                          85300002
*********************************************************************** 85400002
*                   MESSAGES                                          * 85500002
*********************************************************************** 85600002
         SPACE                                                          85700002
*  MESSAGE TO NOTIFY OPERATOR OF IOS CCW XLATOR ERRORS                  85800002
IFD310   WTO   'IFD310I OLT VIRTUAL CCW TRANSLATION ERROR - XX',MF=L,ROX85900002
               UTCDE=10,DESC=7                                          86000002
MSGCODE  EQU   IFD310+44          DISPLACEMENT INTO MSG 310I FOR        86100002
*                                  THE RETURN CODE FROM XLATOR          86200002
         EJECT                                                          86300002
*********************************************************************** 86400002
*                   DSECTS                                            * 86500002
*********************************************************************** 86600002
         SPACE                                                          86700002
*  OLTEP COMMON AREA MACRO                                              86800002
COM      IFDCOM                                                         86900002
         SPACE 5                                                        87000002
         IECDIOSB                                                       87100002
         SPACE 5                                                        87200002
*  DESCT FOR OLTEP'S IOSB USER CONTROL BLOCK AND EVENT CONTROL BLOCK    87300002
         SPACE 2                                                        87400002
IOSUSECB EQU   *                                                        87500002
USERCB   DS    0CL24              START OF IOSB USER CONTROL BLOCK      87600002
OECBPTR  DS    F                  POINTER TO OLTEP EVENT CONTROL BLOCK  87700002
TECBPTR  DS    F                  OLT'S TECB POINTER FOR THIS EVENT     87800002
IODVTBPT DS    F                  POINTER TO 3 WORDS IN OLTEP COMMON    87900002
*                                   AREA WHICH HAVE:                    88000002
*                                       0   DEVTAB ENTRY POINTER        88100002
*                                       4   POINTER TO THIS IOSB        88200002
*                                       8   THE ECB FOR THIS EVENT      88300002
TCCWPTR  DS    F                  POINTER TO THE TCCW SYSTEM CONTROL    88400002
*                                    BLOCK FOR THE CCW TRANSLATOR       88500002
USEFLAGS DS    0F                 A WORD OF FLAGS                       88600002
USEFLAGA DS    1C                 FIRST FLAG BYTE FOR THIS CB SET       88700002
INUSE    EQU   X'80'              THIS IOSB IS IN USE                   88800002
ATTN     EQU   X'40'              ATTENTION=YES REQUEST (OFF IF DONE)   88900002
VIRTCCW  EQU   X'20'              THE CCW'S ARE IN VIRTUAL              89000002
OLDTECB  EQU   X'10'              OLD TECB TO BE POSTED                 89100002
INTRNLCB EQU   X'08'              REQUEST IS INTERNAL (LINE CONNECT,DP) 89200002
PURGED   EQU   X'04'              THIS I/O EVENT IS PURGED              89300002
PCIENTRY EQU   X'02'              PCI EXIT OPERATING                    89400002
USEFLAGB DS    1C                 UNUSED                                89500002
USEFLAGC DS    1C                 UNUSED                                89600002
USEFLAGD DS    1C                 UNUSED                                89700002
USERSVD  DS    F                  RESERVED FOR FUTURE                   89800002
         SPACE                                                          89900002
OECB     DS    0CL64              START OF OLTEP'S EVENT CONTROL BLOCK  90000002
OSNSCNT  DS    CL1                OLT'S SENSE BYTES REQUESTED COUNT     90100002
OINCNT   DS    CL1                NUMBER OF INTERRUPTS IN OECB          90200002
UNUSED   DS    CL2                NOT USED                              90300002
OCSW1    DS    0CL8               FIRST INTERRUPT POSTED IN OECB        90400002
OCSWCC1  DS    CL1                IOS SIO CONDITION CODE                90500002
OCSWCMD1 DS    CL3                CSW COMMAND ADDRESS                   90600002
OCSWSTS1 DS    0CL2               CSW1 STATUS BYTES                     90700002
OCSWSTA1 DS    CL1                CSW1 STATUS BYTE A                    90800002
OCSWSTB1 DS    CL1                CSW1 STATUS BYTE B                    90900002
OCSWBYT1 DS    CL2                CSW1 RESIDUAL BYTE COUNT              91000002
OCSW2    DS    0CL8               SECOND INTERRUPT POSTED IN OECB       91100002
OCSWCC2  DS    CL1                IOS SIO CONDITION CODE                91200002
OCSWCMD2 DS    CL3                CSW COMMAND ADDRESS                   91300002
OCSWSTS2 DS    0CL2               CSW2 STATUS BYTES                     91400002
OCSWSTA2 DS    CL1                CSW2 STATUS BYTESA                    91500002
OCSWSTB2 DS    CL1                CSW2 STATUS BYTESB                    91600002
OCSWBYT2 DS    CL2                CSW2 RESIDUAL BYTE COUNT              91700002
OCSW3    DS    0CL8               THIRD INTERRUPT POSTED IN OECB        91800002
OCSWCC3  DS    CL1                IOS SIO CONDITION CODE                91900002
OCSWCMD3 DS    CL3                CSW COMMAND ADDRESS                   92000002
OCSWSTS3 DS    0CL2               CSW3 STATUS BYTES                     92100002
OCSWSTA3 DS    CL1                CSW3 STATUS BYTESA                    92200002
OCSWSTB3 DS    CL1                CSW3 STATUS BYTESB                    92300002
OCSWBYT3 DS    CL2                CSW3 RESIDUAL BYTE COUNT              92400002
OSNS1    DS    CL36               SENSE SAVE AREA FOR UNIT CHECK ON     92500002
*                                   THIS REQUEST                        92600002
*  OLTEP DEVICE TABLE ENTRY MAP MACRO                                   92700002
         IFDEVTAB                                                       92800002
DVTABEND EQU   *                                                        92850002
         SPACE 5                                                        92900002
*  OLT TEST EVENT CONTROL BLOCK MAP                                     93000002
TECB     DSECT                                                          93100002
TBFLDCNT DS    CL1                                                      93200002
TBFLDSZE DS    CL1                                                      93300002
TBSNSIZE DS    CL2                                                      93400002
TBFLAGS  DS    CL1                                                      93500002
TBSIONOG EQU   X'80'                                                    93600002
TBSNSCNT DS    CL1                                                      93700002
TBSNSPST DS    CL1                                                      93800002
TBEVTPST DS    CL1                                                      93900002
TECBDATA EQU   *                  START OF TECB DATA FIELDS             94000002
         SPACE 5                                                        94100002
*  OLT EXIO PARAMETER LIST MAP                                          94200002
EXIOPLST DSECT                                                          94300002
OPLSTFLG DS    CL1                CONTROL PROGRAM FLAG                  94400002
OEXIOLVL DS    CL1                                                      94500002
OMACROID DS    CL2                                                      94600002
OTECBADR DS    A                                                        94700002
OCDSADR  DS    A                                                        94800002
OCCWPTR  DS    A                                                        94900002
OCCWCNT  DS    CL1                                                      95000002
OEXIOFLG DS    CL1                                                      95100002
ATTNREQ  EQU   X'80'                                                    95200002
SNSEQNO  EQU   X'40'                                                    95300002
         SPACE 5                                                        95400002
*  MAP OF A BASIC CDS (CONFIGURATION DATA SET ENTRY)                    95500002
CDSMAP   DSECT                                                          95600002
CDEVADDR DS    CL4                CDS DEVICE ADDRESS IN HEX             95700002
CDEVDISC DS    0CL4               WORD OF DEVICE DESCRIPTORS            95800002
CDEVMODL DS    CL1                DEVICE MODEL                          95900002
CDEVFEAT DS    CL1                DEVICE FEATURES                       96000002
CDEVCLAS DS    CL1                DEVICE CLASS                          96100002
CDEVUNIT DS    CL1                DEVICE UNIT TYPE                      96200002
CDEVBCNT DS    CL1                CDS ENTRY BYTE COUNT                  96300002
CDEVFLAG DS    CL2                CDS FLAGS                             96400002
CSYMBIT  EQU   X'08'              BIT SAYS CDS IS SYMBOLIC NAMED        96500002
CLCRREQ  EQU   X'01'              LINE CONNECTION ROUTINE REQUIRED      96600002
CDEVEXTM DS    CL1                CDS EXTERNAL SIGNAL MASK AREA         96700002
CDSYMNAM DS    CL8                CDS DEVICE SYMBOLIC NAME FIELD        96800002
         END                                                            96900002
./  ADD  SSI=71110121,NAME=IFDOLT36
         TITLE 'IFDOLT36 - WAITIO MODULE                               *00001000
                        '                                               00002000
IFDOLT36 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IFDOLT36  77.111'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  ST    @14,12(,@13)                                        0001 00010000
         STM   @00,@12,20(@13)                                     0001 00011000
         BALR  @12,0                                               0001 00012000
@PSTART  DS    0H                                                  0001 00013000
         USING @PSTART,@12                                         0001 00014000
         EJECT                                                          00015000
         EJECT                                                          00016000
         EJECT                                                          00017000
         EJECT                                                          00018000
         EJECT                                                          00019000
*   R14=R13;                        /* PUT SVPTR IN R14              */ 00020000
         LR    R14,R13                                             0104 00021000
*   R13=ADDR(SAVE1);                /* POINT TO MY SVAREA            */ 00022000
         LA    R13,SAVE1                                           0105 00023000
*   BACKSAVE(3)=R13;                /* SAVE MINE IN HIS              */ 00024000
         ST    R13,BACKSAVE+8(,R14)                                0106 00025000
*   SAVE1(2)=R14;                   /* SAVE HIS IN MINE              */ 00026000
         ST    R14,SAVE1+4                                         0107 00027000
*   SAVE3=COMMAPT;                  /* SAVE COMMON AREA PTR          */ 00028000
*                                                                  0108 00029000
         ST    COMMAPT,SAVE3                                       0108 00030000
*   /*****************************************************************/ 00031000
*   /*                                                               */ 00032000
*   /* INITIALIZATION & PARAMETER LIST VALIDITY CHECK                */ 00033000
*   /*                                                               */ 00034000
*   /*****************************************************************/ 00035000
*                                                                  0109 00036000
*   WAITPTR=R1;                     /* SAVE WAITIO PARMPTR           */ 00037000
         LR    WAITPTR,R1                                          0109 00038000
*   SAVEPARM=R1;                    /* SAVE PARM ADDR        @ZA00442*/ 00039000
         LR    SAVEPARM,R1                                         0110 00040000
*   SWITCHES=0;                     /* CLEAR THEM                    */ 00041000
         MVI   SWITCHES,X'00'                                      0111 00042000
*   TIMEPARM=0;                     /* CLEAR IT                      */ 00043000
         LA    @15,THIRTY                                          0112 00044000
         SLR   @14,@14                                             0112 00045000
         ST    @14,@TF00001                                        0112 00046000
         MVC   TIMEPARM(4,@15),@TF00001                            0112 00047000
*   TEMPCC=0;                       /* CLEAR IT                      */ 00048000
         MVI   TEMPCC,X'00'                                        0113 00049000
*LVLCHK:                            /*                               */ 00050000
*   IF WTIOLVL<2|                   /* INCORRECT MACRO               */ 00051000
*       WTIOLVL>3|                  /* LEVELS OR                     */ 00052000
*       WTIOLVL=2&                  /* TIME ONLY REQ ON              */ 00053000
*       TECBADR=0                   /* LVL 2                         */ 00054000
*     THEN                          /* GETS                          */ 00055000
LVLCHK   CLI   WTIOLVL(WAITPTR),2                                  0114 00056000
         BL    @RT00114                                            0114 00057000
         CLI   WTIOLVL(WAITPTR),3                                  0114 00058000
         BH    @RT00114                                            0114 00059000
         CLI   WTIOLVL(WAITPTR),2                                  0114 00060000
         BNE   @RF00114                                            0114 00061000
         L     @15,TECBADR(,WAITPTR)                               0114 00062000
         LTR   @15,@15                                             0114 00063000
         BZ    @RT00114                                            0114 00064000
*     GOTO SET04;                   /* RETCODE 04                    */ 00065000
*TIMECK:                            /*                               */ 00066000
*   IF WTIOLVL=3&                   /* MACRO LEVEL 3 AND             */ 00067000
*       TECBADR=0                   /* TIME ONLY REQ                 */ 00068000
*     THEN                          /* HANDLED                       */ 00069000
@RF00114 DS    0H                                                  0116 00070000
TIMECK   CLI   WTIOLVL(WAITPTR),3                                  0116 00071000
         BNE   @RF00116                                            0116 00072000
         L     @15,TECBADR(,WAITPTR)                               0116 00073000
         LTR   @15,@15                                             0116 00074000
         BZ    @RT00116                                            0116 00075000
*     GOTO SETIMER;                 /* AT SETIMER.                   */ 00076000
*VALRQCK:                           /*                               */ 00077000
*   IF DERQ='1'B|                   /* WAITDE OR WAITANY             */ 00078000
*       ANYRQ='1'B|                 /* OR                            */ 00079000
*       WAITRQ='0'B&                /* NONE OF VALID                 */ 00080000
*       POLLRQ='0'B&                /* WAITIO REQUESTS               */ 00081000
*       PURGRQ='0'B                 /* GETS                          */ 00082000
*     THEN                          /* RETCODE 04                    */ 00083000
@RF00116 DS    0H                                                  0118 00084000
VALRQCK  TM    DERQ(WAITPTR),B'00011000'                           0118 00085000
         BNZ   @RT00118                                            0118 00086000
         TM    WAITRQ(WAITPTR),B'11100000'                         0118 00087000
         BZ    @RT00118                                            0118 00088000
*     GOTO SET04;                   /*                               */ 00089000
*                                                                  0119 00090000
*   /*****************************************************************/ 00091000
*   /*                                                               */ 00092000
*   /* GET WAITIO DEVICE ADDRESS                                     */ 00093000
*   /*                                                               */ 00094000
*   /*****************************************************************/ 00095000
*                                                                  0120 00096000
*DEVCK:                             /*                               */ 00097000
*   DEVTABPT=DEVTBPTR;              /* GET DEV TABLE PTR             */ 00098000
@RF00118 DS    0H                                                  0120 00099000
DEVCK    MVC   DEVTABPT(4),DEVTBPTR(COMMAPT)                       0120 00100000
*   DO I=1 TO 16;                   /* SEARCH DEVTAB                 */ 00101000
         LA    I,1                                                 0121 00102000
@DL00121 DS    0H                                                  0122 00103000
*     IF CDSADR=0                   /* FOR PRIMARY                   */ 00104000
*       THEN                        /* DEVICE IF                     */ 00105000
         L     @07,CDSADR(,WAITPTR)                                0122 00106000
         LTR   @07,@07                                             0122 00107000
         BNZ   @RF00122                                            0122 00108000
*       DO;                         /* OLT DOES NOT                  */ 00109000
*         IF PRIMARY='1'B           /* GIVE                          */ 00110000
*           THEN                    /* CDSADR                        */ 00111000
         L     @07,DEVTABPT                                        0124 00112000
         TM    PRIMARY(@07),B'01000000'                            0124 00113000
         BO    @RT00124                                            0124 00114000
*           GOTO TECBCK;            /* ADDRESS.                      */ 00115000
*         GOTO BUMPI;               /*                               */ 00116000
         B     BUMPI                                               0126 00117000
*       END;                        /*                               */ 00118000
*     IF SYMBOLIC='1'B              /* IF CDSADR ADDRESS             */ 00119000
*       THEN                        /* IS GIVEN, SEARCH              */ 00120000
@RF00122 L     @07,CDSADR(,WAITPTR)                                0128 00121000
         TM    SYMBOLIC(@07),B'00001000'                           0128 00122000
         BNO   @RF00128                                            0128 00123000
*       DO;                         /* ON BASIS OF                   */ 00124000
*         IF CDSSYMNE=CDSYMNAM      /* SYMBOLIC OR                   */ 00125000
*           THEN                    /* HEX ADDRESS                   */ 00126000
         L     @01,DEVTABPT                                        0130 00127000
         CLC   CDSSYMNE(8,@07),CDSYMNAM(@01)                       0130 00128000
         BE    @RT00130                                            0130 00129000
*           GOTO TECBCK;            /* AS DEFINED                    */ 00130000
*         GOTO BUMPI;               /* AT                            */ 00131000
         B     BUMPI                                               0132 00132000
*       END;                        /* CDSADR.                       */ 00133000
*     IF CDSDAD=DEVHEXAD            /* WHEN FOUND, GO TO             */ 00134000
*       THEN                        /* CHECK TECB ADDRESS            */ 00135000
@RF00128 L     @07,CDSADR(,WAITPTR)                                0134 00136000
         L     @01,DEVTABPT                                        0134 00137000
         CLC   CDSDAD(4,@07),DEVHEXAD(@01)                         0134 00138000
         BE    @RT00134                                            0134 00139000
*       GOTO TECBCK;                /* IF NOT FOUND,                 */ 00140000
*BUMPI:                             /* GO                            */ 00141000
*     DEVTABPT=DEVTABPT+56;         /* BUMP SEARCH PTR               */ 00142000
BUMPI    LA    @07,56                                              0136 00143000
         AL    @07,DEVTABPT                                        0136 00144000
         ST    @07,DEVTABPT                                        0136 00145000
*   END;                            /* RETURN                        */ 00146000
         AH    I,@CH00055                                          0137 00147000
         CH    I,@CH00167                                          0137 00148000
         BNH   @DL00121                                            0137 00149000
*   GOTO SET0C;                     /* CODE 0C.                      */ 00150000
*                                                                  0138 00151000
         B     SET0C                                               0138 00152000
*   /*****************************************************************/ 00153000
*   /*                                                               */ 00154000
*   /* CHECK FOR CORRECT TECB ADDRESS AND DEVICE ACTIVE              */ 00155000
*   /*                                                               */ 00156000
*   /*****************************************************************/ 00157000
*                                                                  0139 00158000
*TECBCK:                            /*                               */ 00159000
*   DO J=1 TO 3;                    /*                               */ 00160000
TECBCK   LA    @15,1                                               0139 00161000
         ST    @15,J                                               0139 00162000
@DL00139 DS    0H                                                  0140 00163000
*     IF IODEV1(J)=DEVTABPT         /* IF TECB ADDRESSES ARE         */ 00164000
*       THEN                        /* THE SAME, GO CHECK IF         */ 00165000
         MH    @15,@CH00033                                        0140 00166000
         L     @14,IODEV1-12(@15,COMMAPT)                          0140 00167000
         C     @14,DEVTABPT                                        0140 00168000
         BNE   @RF00140                                            0140 00169000
*       DO;                         /* DEVICE IS                     */ 00170000
*         IOSBPTR=IOSBPTR1(J);      /* ACTIVE                        */ 00171000
         L     IOSBPTR,IOSBPTR1-12(@15,COMMAPT)                    0142 00172000
*         ROPT=IOSBPTR;             /* IOSB PTR TO SVC 59 PARM LIST  */ 00173000
         ST    IOSBPTR,ROPT(,COMMAPT)                              0143 00174000
*         IF TECBADR=TECBPTR        /*                               */ 00175000
*           THEN                    /*                               */ 00176000
         L     @05,IOSUSE(,IOSBPTR)                                0144 00177000
         CLC   TECBADR(4,WAITPTR),TECBPTR(@05)                     0144 00178000
         BE    @RT00144                                            0144 00179000
*           GOTO ACTVCK;            /* IF TECB ADDRESSES             */ 00180000
*       END;                        /* ARE NOT                       */ 00181000
*BUMPJ:                             /* THE SAME,                     */ 00182000
*   END;                            /* GIVE                          */ 00183000
@RF00140 DS    0H                                                  0147 00184000
BUMPJ    LA    @15,1                                               0147 00185000
         AL    @15,J                                               0147 00186000
         ST    @15,J                                               0147 00187000
         CH    @15,@CH00124                                        0147 00188000
         BNH   @DL00139                                            0147 00189000
*   GOTO SET0C;                     /* RETURN CODE 0C.               */ 00190000
         B     SET0C                                               0148 00191000
*ACTVCK:                            /*                               */ 00192000
*   IF ACTIVE='1'B                  /* IF DEVICE                     */ 00193000
*     THEN                          /* IS ACTIVE, GO                 */ 00194000
ACTVCK   L     @05,DEVTABPT                                        0149 00195000
         TM    ACTIVE(@05),B'00010000'                             0149 00196000
         BO    @RT00149                                            0149 00197000
*     GOTO PURGCK;                  /* CHK FOR PURGE REQ.            */ 00198000
*   IF HIODONE='1'B                 /* IF NOT ACTIVE,                */ 00199000
*     THEN                          /* CHK IF HIO ISSUED.            */ 00200000
         TM    HIODONE(@05),B'00001000'                            0151 00201000
         BO    @RT00151                                            0151 00202000
*     GOTO OINCTCK;                 /* IF SO,GO CHK INTRPS           */ 00203000
*   GOTO SET0C;                     /* IF NOT,RETCODE 0C.            */ 00204000
*                                                                  0153 00205000
         B     SET0C                                               0153 00206000
*   /*****************************************************************/ 00207000
*   /*                                                               */ 00208000
*   /* DETERMINE WAITIO REQUESTED FUNCTION                           */ 00209000
*   /*                                                               */ 00210000
*   /*****************************************************************/ 00211000
*                                                                  0154 00212000
*PURGCK:                            /*                               */ 00213000
*   IF PURGRQ='1'B                  /* IF PURGE REQUEST,             */ 00214000
*     THEN                          /*                               */ 00215000
PURGCK   TM    PURGRQ(WAITPTR),B'00100000'                         0154 00216000
         BO    @RT00154                                            0154 00217000
*     GOTO PURGRTN;                 /* GO DO IT.                     */ 00218000
*WAITCK:                            /*                               */ 00219000
*   IF WAITRQ='1'B                  /* IF WAIT REQUEST,              */ 00220000
*     THEN                          /*                               */ 00221000
WAITCK   TM    WAITRQ(WAITPTR),B'10000000'                         0156 00222000
         BO    @RT00156                                            0156 00223000
*     GOTO WAITRTN;                 /* GO DO IT.                     */ 00224000
*                                                                  0157 00225000
*   /*****************************************************************/ 00226000
*   /*                                                               */ 00227000
*   /* HANDLE POLL REQUEST                                           */ 00228000
*   /*                                                               */ 00229000
*   /*****************************************************************/ 00230000
*                                                                  0158 00231000
*POLLRTN:                           /*                               */ 00232000
*   IF POSTBIT(J)='1'B              /* IF ECB POSTED COMPLETE        */ 00233000
*     THEN                          /*                               */ 00234000
POLLRTN  L     @05,J                                               0158 00235000
         MH    @05,@CH00033                                        0158 00236000
         ALR   @05,COMMAPT                                         0158 00237000
         TM    POSTBIT-12(@05),B'01000000'                         0158 00238000
         BO    @RT00158                                            0158 00239000
*     GOTO SET00A;                  /* GIVE RETCODE 00.        YM5409*/ 00240000
*PCICHK:                            /*                               */ 00241000
*   IF PCIIND='1'B                  /* IF PCI OCCURRED,              */ 00242000
*     THEN                          /* TURN OFF BIT                  */ 00243000
PCICHK   L     @05,DEVTABPT                                        0160 00244000
         TM    PCIIND(@05),B'00000010'                             0160 00245000
         BNO   @RF00160                                            0160 00246000
*     DO;                           /* AND                           */ 00247000
*       PCIIND='0'B;                /* GIVE                          */ 00248000
         NI    PCIIND(@05),B'11111101'                             0162 00249000
*       GOTO SET10;                 /* RETCODE 10.                   */ 00250000
         B     SET10                                               0163 00251000
*     END;                          /*                               */ 00252000
*                                                                  0164 00253000
*   /*****************************************************************/ 00254000
*   /*                                                               */ 00255000
*   /* CHECK FOR INTERUPTS                                           */ 00256000
*   /*                                                               */ 00257000
*   /*****************************************************************/ 00258000
*                                                                  0165 00259000
*OINCTCK:                           /*                               */ 00260000
*   WAITPOST='1'B;                  /* TELL NAPA I'M HERE            */ 00261000
@RF00160 DS    0H                                                  0165 00262000
OINCTCK  L     @05,DEVTABPT                                        0165 00263000
         OI    WAITPOST(@05),B'00000010'                           0165 00264000
*   IF OINCNT¬=0                    /* IF INTRPTS OCCURRED           */ 00265000
*     THEN                          /*                               */ 00266000
         L     @05,IOSUSE(,IOSBPTR)                                0166 00267000
         L     @05,OECBPTR(,@05)                                   0166 00268000
         CLI   OINCNT(@05),0                                       0166 00269000
         BNE   @RT00166                                            0166 00270000
*     GOTO PSTDCK;                  /* CHK IF POSTED                 */ 00271000
*   TEMPCC=IOSCC&CCMSK;                                            0168 00272000
         MVC   TEMPCC(1),IOSCC(IOSBPTR)                            0168 00273000
         NC    TEMPCC(1),CCMSK                                     0168 00274000
*   IF CCZ=TEMPCC THEN              /* IF IOSCC=0,                   */ 00275000
         CLC   CCZ(1),TEMPCC                                       0169 00276000
         BE    @RT00169                                            0169 00277000
*     GOTO DONECK;                  /* GO WRAP UP                    */ 00278000
*   DO K=20 TO 1 BY-1;              /* WAIT FOR DEFERRED CC          */ 00279000
         LA    K,20                                                0171 00280000
@DL00171 DS    0H                                                  0172 00281000
*     TEMPCC=IOSCC&CCMSK;                                          0172 00282000
         MVC   TEMPCC(1),IOSCC(IOSBPTR)                            0172 00283000
         NC    TEMPCC(1),CCMSK                                     0172 00284000
*     IF CC0¬=TEMPCC THEN           /* IF IOSCC NOT 40,              */ 00285000
         CLC   CC0(1),TEMPCC                                       0173 00286000
         BNE   @RT00173                                            0173 00287000
*       GOTO CKCC1;                 /* CONTINUE. DEFERRED CC IN      */ 00288000
*   END;                                                           0175 00289000
         BCTR  K,0                                                 0175 00290000
         LTR   K,K                                                 0175 00291000
         BP    @DL00171                                            0175 00292000
*   GOTO PSTDCKA;                   /* DEFERRED CC = 0, GO POST      */ 00293000
         B     PSTDCKA                                             0176 00294000
*CKCC1:                                                            0177 00295000
*   IF CC1¬=TEMPCC THEN             /* IF IOSCC NOT 50,              */ 00296000
CKCC1    CLC   CC1(1),TEMPCC                                       0177 00297000
         BNE   @RT00177                                            0177 00298000
*     GOTO CKCC2;                   /* GO CHECK FOR CC 2             */ 00299000
*   IF OINCNT¬=0                    /* IF CU AND DEVICE NOT BUSY,    */ 00300000
*     THEN                                                         0179 00301000
         L     @05,IOSUSE(,IOSBPTR)                                0179 00302000
         L     @05,OECBPTR(,@05)                                   0179 00303000
         CLI   OINCNT(@05),0                                       0179 00304000
         BNE   @RT00179                                            0179 00305000
*     GOTO PSTDCKA;                 /* ERROR, GO POST                */ 00306000
*   GOTO DONECK;                    /* IF BUSY, WRAP UP              */ 00307000
         B     DONECK                                              0181 00308000
*CKCC2:                                                            0182 00309000
*   IF CC2¬=TEMPCC THEN             /* IF IOSCC NOT 60,              */ 00310000
CKCC2    CLC   CC2(1),TEMPCC                                       0182 00311000
         BNE   @RT00182                                            0182 00312000
*     GOTO PSTDCKA;                 /* IT IS CC 3. GO POST           */ 00313000
*DONECK:                            /*                               */ 00314000
*   WAITPOST='0'B;                  /* TURN OFF NAPA FLAG            */ 00315000
DONECK   L     @03,DEVTABPT                                        0184 00316000
         NI    WAITPOST(@03),B'11111101'                           0184 00317000
*   IF RET08='1'B THEN              /* IF '08' RETURN        @ZA00442*/ 00318000
         TM    RET08,B'01000000'                                   0185 00319000
         BO    @RT00185                                            0185 00320000
*     GOTO SET08;                   /* GO SET IT             @ZA00442*/ 00321000
*   IF HIODONE='1'B THEN            /* IF HIO ISSUED           YM5409*/ 00322000
         TM    HIODONE(@03),B'00001000'                            0187 00323000
         BO    @RT00187                                            0187 00324000
*     GOTO SET00;                   /* GO RETCODE 00.          YM5409*/ 00325000
*   IF POSTBIT(J)='1'B              /* EVENT COMPLETE          YM5409*/ 00326000
*     THEN                          /* POSTED,                       */ 00327000
         L     @03,J                                               0189 00328000
         MH    @03,@CH00033                                        0189 00329000
         ALR   @03,COMMAPT                                         0189 00330000
         TM    POSTBIT-12(@03),B'01000000'                         0189 00331000
         BO    @RT00189                                            0189 00332000
*     GOTO SET00A;                  /* GO RETCODE 00.          YM5409*/ 00333000
*   IF RET10='1'B                   /* IF SWITCH IS ON,              */ 00334000
*     THEN                          /* GO RETCODE 10,                */ 00335000
         TM    RET10,B'10000000'                                   0191 00336000
         BO    @RT00191                                            0191 00337000
*     GOTO SET10;                   /* OTHERWISE                     */ 00338000
*   GOTO SET08;                     /* GO RETCODE 08.                */ 00339000
         B     SET08                                               0193 00340000
*PSTDCK:                            /*                               */ 00341000
*   IF OINCNT¬>DEVINTPT             /* IF ALL IS POSTED              */ 00342000
*     THEN                          /* TO TECB,                      */ 00343000
PSTDCK   L     @05,IOSUSE(,IOSBPTR)                                0194 00344000
         L     @05,OECBPTR(,@05)                                   0194 00345000
         L     @01,DEVTABPT                                        0194 00346000
         CLC   OINCNT(1,@05),DEVINTPT(@01)                         0194 00347000
         BNH   @RT00194                                            0194 00348000
*     GOTO DONECK;                  /* GO WRAP IT UP.                */ 00349000
*PSTDCKA:                           /*                               */ 00350000
*   TEMPCC=IOSCC&'30'X;             /* TURN OFF ALL BUT      @ZA16992*/ 00351000
*                                                                  0196 00352000
PSTDCKA  MVC   TEMPCC(1),IOSCC(IOSBPTR)                            0196 00353000
         NI    TEMPCC,X'30'                                        0196 00354000
*   /*****************************************************************/ 00355000
*   /*                                                               */ 00356000
*   /* SIO CC CODE                                           @ZA16992*/ 00357000
*   /*                                                               */ 00358000
*   /*****************************************************************/ 00359000
*                                                                  0197 00360000
*   TEMPCC=TEMPCC/16;               /* SHIFT TO LOW ORDER BITS     0197 00361000
*                                                            @ZA16992*/ 00362000
         SLR   @15,@15                                             0197 00363000
         IC    @15,TEMPCC                                          0197 00364000
         SRL   @15,4                                               0197 00365000
         STC   @15,TEMPCC                                          0197 00366000
*   TEMPCC=TEMPCC|'F0'X;            /* GET CC INTO PRINTABLE FORM    */ 00367000
         OI    TEMPCC,X'F0'                                        0198 00368000
*   EVFLDPTR=TECBADR                /* SET UP POINTER                */ 00369000
*       +8                          /* TO AVAILABLE                  */ 00370000
*       +FLDSZE*CNTINT;             /* TECB EVENT FIELD.             */ 00371000
         L     @15,TECBADR(,WAITPTR)                               0199 00372000
         LA    EVFLDPTR,8                                          0199 00373000
         ALR   EVFLDPTR,@15                                        0199 00374000
         SLR   @01,@01                                             0199 00375000
         IC    @01,CNTINT(,@15)                                    0199 00376000
         MVC   @ZT00003+3(1),FLDSZE(@15)                           0199 00377000
         M     @00,@ZT00003                                        0199 00378000
         ALR   EVFLDPTR,@01                                        0199 00379000
*   IF EXIOLVL3¬='1'B               /* IF EXIO NOT LEVEL3,           */ 00380000
*     THEN                          /* SKIP CC0 POSTING.             */ 00381000
         L     @14,DEVTABPT                                        0200 00382000
         TM    EXIOLVL3(@14),B'00000100'                           0200 00383000
         BNO   @RT00200                                            0200 00384000
*     GOTO PSTTECB;                 /*                               */ 00385000
*   EXIOLVL3='0'B;                  /* TURN OFF THE FLAG.            */ 00386000
         NI    EXIOLVL3(@14),B'11111011'                           0202 00387000
*   IF FLDCNT¬>CNTINT               /* IF NO TECB ROOM               */ 00388000
*     THEN                          /* TO POST, GO CHK               */ 00389000
         CLC   FLDCNT(1,@15),CNTINT(@15)                           0203 00390000
         BNH   @RT00203                                            0203 00391000
*     GOTO EVTCTCK;                 /* EVENT COUNT.                  */ 00392000
*   IF TEMPCC='F0'X|                /* IF CC IS 0 OR 3,              */ 00393000
*       TEMPCC='F3'X                /*                               */ 00394000
*     THEN                          /* PUT CC AND                    */ 00395000
         CLI   TEMPCC,X'F0'                                        0205 00396000
         BE    @RT00205                                            0205 00397000
         CLI   TEMPCC,X'F3'                                        0205 00398000
         BNE   @RF00205                                            0205 00399000
@RT00205 DS    0H                                                  0206 00400000
*     DO;                           /* DEVICE ADDR IN                */ 00401000
*       CCFLG=TEMPCC;               /* TECB AND                      */ 00402000
         MVC   CCFLG(1,EVFLDPTR),TEMPCC                            0207 00403000
*       EVDAD=DEVAD;                /* GO BUMP                       */ 00404000
         L     @01,DEVTABPT                                        0208 00405000
         MVC   EVDAD(2,EVFLDPTR),DEVAD(@01)                        0208 00406000
*       GOTO BUMPEVT;               /* TECB EVENT COUNT.             */ 00407000
         B     BUMPEVT                                             0209 00408000
*     END;                          /*                               */ 00409000
*   GOTO PSTDCK;                    /*                               */ 00410000
         B     PSTDCK                                              0211 00411000
*EVTCTCK:                           /*                               */ 00412000
*   IF CNTINT='FF'X                 /* IF TECB EVENT COUNT           */ 00413000
*     THEN                          /* IS FULL, DONT                 */ 00414000
EVTCTCK  L     @05,TECBADR(,WAITPTR)                               0212 00415000
         CLI   CNTINT(@05),X'FF'                                   0212 00416000
         BNE   @RF00212                                            0212 00417000
*     DO;                           /* BUMP IT, SET FLG              */ 00418000
*       RET10='1'B;                 /* FOR RETCODE 10                */ 00419000
         OI    RET10,B'10000000'                                   0214 00420000
*       GOTO DONECK;                /* AND GO WRAP UP.               */ 00421000
         B     DONECK                                              0215 00422000
*     END;                          /*                               */ 00423000
*BUMPEVT:                           /*                               */ 00424000
*   CNTINT=CNTINT+1;                /* BUMP TECB EVENT               */ 00425000
@RF00212 DS    0H                                                  0217 00426000
BUMPEVT  L     @05,TECBADR(,WAITPTR)                               0217 00427000
         LA    @15,1                                               0217 00428000
         MVC   @ZT00003+3(1),CNTINT(@05)                           0217 00429000
         AL    @15,@ZT00003                                        0217 00430000
         STC   @15,CNTINT(,@05)                                    0217 00431000
*   RET10='1'B;                     /* COUNT AND SET FLG             */ 00432000
         OI    RET10,B'10000000'                                   0218 00433000
*   GOTO PSTDCK;                    /* FOR RETCODE 10.               */ 00434000
*                                                                  0219 00435000
         B     PSTDCK                                              0219 00436000
*   /*****************************************************************/ 00437000
*   /*                                                               */ 00438000
*   /* POST CC, CSW, SENSE AND DEVICE ADDRESS                        */ 00439000
*   /*                                                               */ 00440000
*   /*****************************************************************/ 00441000
*                                                                  0220 00442000
*PSTTECB:                           /*                               */ 00443000
*   IF OINCNT=0|                    /* IF NO INTRPTS OR              */ 00444000
*       OINCNT=DEVINTPT             /* ALL HAVE BEEN                 */ 00445000
*     THEN                          /* POSTED IN TECB,               */ 00446000
PSTTECB  L     @01,IOSUSE(,IOSBPTR)                                0220 00447000
         L     @15,OECBPTR(,@01)                                   0220 00448000
         CLI   OINCNT(@15),0                                       0220 00449000
         BE    @RT00220                                            0220 00450000
         L     @14,DEVTABPT                                        0220 00451000
         CLC   OINCNT(1,@15),DEVINTPT(@14)                         0220 00452000
         BE    @RT00220                                            0220 00453000
*     GOTO DONECK;                  /* GO WRAP UP.                   */ 00454000
*   IF FLDCNT¬>CNTINT               /* IF NO ROOM TO POST            */ 00455000
*     THEN                          /* IN TECB,                      */ 00456000
         L     @15,TECBADR(,WAITPTR)                               0222 00457000
         CLC   FLDCNT(1,@15),CNTINT(@15)                           0222 00458000
         BH    @RF00222                                            0222 00459000
*     DO;                           /* BUMP                          */ 00460000
*       DEVINTPT=                   /* EVENT HANDLED                 */ 00461000
*           DEVINTPT+1;             /* COUNT AND GO CHK              */ 00462000
         LA    @05,1                                               0224 00463000
         MVC   @ZT00003+3(1),DEVINTPT(@14)                         0224 00464000
         AL    @05,@ZT00003                                        0224 00465000
         STC   @05,DEVINTPT(,@14)                                  0224 00466000
*       GOTO EVTCTCK;               /* TECB EVENT COUNT.             */ 00467000
         B     EVTCTCK                                             0225 00468000
*     END;                                                         0226 00469000
*   OCSWPTR=ADDR(OCSWA)+8*(DEVINTPT);/* GET OCSW PTR                 */ 00470000
@RF00222 L     @01,IOSUSE(,IOSBPTR)                                0227 00471000
         L     OCSWPTR,OECBPTR(,@01)                               0227 00472000
         LA    OCSWPTR,OCSWA(,OCSWPTR)                             0227 00473000
         L     @01,DEVTABPT                                        0227 00474000
         SLR   @00,@00                                             0227 00475000
         IC    @00,DEVINTPT(,@01)                                  0227 00476000
         SLA   @00,3                                               0227 00477000
         ALR   OCSWPTR,@00                                         0227 00478000
*   CCFLG=TEMPCC;                   /* CC IN TECB.                   */ 00479000
         MVC   CCFLG(1,EVFLDPTR),TEMPCC                            0228 00480000
*   IF TEMPCC='F0'X                 /* IF CC IS 0,                   */ 00481000
*     THEN                          /* PUT FF IN TECB,               */ 00482000
         CLI   TEMPCC,X'F0'                                        0229 00483000
         BNE   @RF00229                                            0229 00484000
*     CCFLG='FF'X;                  /* OTHERWISE PUT                 */ 00485000
         MVI   CCFLG(EVFLDPTR),X'FF'                               0230 00486000
*   EVDAD=DEVAD;                    /* PUT DEV ADDR AND              */ 00487000
@RF00229 L     @07,DEVTABPT                                        0231 00488000
         MVC   EVDAD(2,EVFLDPTR),DEVAD(@07)                        0231 00489000
*   EVCSWST=OCSW1;                  /* CSW IN TECB                   */ 00490000
         MVC   EVCSWST(7,EVFLDPTR),OCSW1(OCSWPTR)                  0232 00491000
*   IF VIRT='0'B                    /* IF REAL STORAGE,              */ 00492000
*     THEN                                                         0233 00493000
         L     @07,IOSUSE(,IOSBPTR)                                0233 00494000
         TM    VIRT(@07),B'00100000'                               0233 00495000
         BZ    @RT00233                                            0233 00496000
*     GOTO REALCCW;                 /* DON'T TRANSLATE               */ 00497000
*   IF OCSWCMD=0                    /* IF COMMAND ADDRESS IS 0,      */ 00498000
*     THEN                                                         0235 00499000
         MVC   @ZT00001+1(3),OCSWCMD(OCSWPTR)                      0235 00500000
         L     @07,@ZT00001                                        0235 00501000
         LTR   @07,@07                                             0235 00502000
         BZ    @RT00235                                            0235 00503000
*     GOTO REALCCW;                 /* DON'T TRANSLATE               */ 00504000
*   IF CHCTRBIT='1'B|UNITCHK='1'B   /* IF CHANNEL OR INTRFACE CONTROL*/ 00505000
*     THEN                                                         0237 00506000
         TM    CHCTRBIT(OCSWPTR),B'00000110'                       0237 00507000
         BNZ   @RT00237                                            0237 00508000
*     GOTO REALCCW;                 /* CHECK, DON'T TRANSLATE        */ 00509000
*   WKSVC(9)=0;                     /* CLEAR UPPER BYTE              */ 00510000
         MVI   WKSVC+8(COMMAPT),X'00'                              0239 00511000
*   WKSVC(10:12)=OCSWCMD-1;         /* CSW CMD ADDR-1 TO PARM LIST 0240 00512000
*                                                            @ZA04299*/ 00513000
         MVC   @ZT00001+1(3),OCSWCMD(OCSWPTR)                      0240 00514000
         L     @07,@ZT00001                                        0240 00515000
         BCTR  @07,0                                               0240 00516000
         ST    @07,@TF00001                                        0240 00517000
         MVC   WKSVC+9(3,COMMAPT),@TF00001+1                       0240 00518000
*   R0=ADDR(ROPT);                  /* PARM LIST PTR                 */ 00519000
         LA    R0,ROPT(,COMMAPT)                                   0241 00520000
*   R1='4C'X;                       /* CALL CODE 4C                  */ 00521000
         LA    R1,76                                               0242 00522000
*   GEN(SVC 59);                    /* REQUEST CCW XLATE FUNCTION    */ 00523000
         SVC 59                                                         00524000
*   CSWCOMAD=R0;                    /* TRANSLATED ADDRESS TO TECB    */ 00525000
         ST    R0,@TF00001                                         0244 00526000
         MVC   CSWCOMAD(3,EVFLDPTR),@TF00001+1                     0244 00527000
*REALCCW:                           /* BUMP INTERUPT                 */ 00528000
*   DEVINTPT=DEVINTPT+1;            /* HANDLED COUNT.                */ 00529000
REALCCW  L     @07,DEVTABPT                                        0245 00530000
         LA    @05,1                                               0245 00531000
         MVC   @ZT00003+3(1),DEVINTPT(@07)                         0245 00532000
         AL    @05,@ZT00003                                        0245 00533000
         STC   @05,DEVINTPT(,@07)                                  0245 00534000
*   IF UNITCHK¬='1'B                /* IF UNIT CHECK IS              */ 00535000
*     THEN                          /* NOT IN STATUS,GO              */ 00536000
         TM    UNITCHK(OCSWPTR),B'00000010'                        0246 00537000
         BNO   @RT00246                                            0246 00538000
*     GOTO BUMPEVT;                 /* BUMP TECB EVNTOT.             */ 00539000
*   IF SNSCT¬>CNTSNS                /* IF NO ROOM TO POST            */ 00540000
*     THEN                          /* SNS DATA, GO BUMP             */ 00541000
         L     @05,TECBADR(,WAITPTR)                               0248 00542000
         CLC   SNSCT(1,@05),CNTSNS(@05)                            0248 00543000
         BNH   @RT00248                                            0248 00544000
*     GOTO BUMPSNS;                 /* SNS EVNT COUNT.               */ 00545000
*   SNSFLDPT=TECBADR                /* FIND AVAILABLE TECB           */ 00546000
*       +8                          /* SENSE FIELD.                  */ 00547000
*       +FLDSZE*FLDCNT              /*                               */ 00548000
*       +SNSIZE*CNTSNS;             /*                               */ 00549000
         L     @06,TECBADR(,WAITPTR)                               0250 00550000
         LA    SNSFLDPT,8                                          0250 00551000
         ALR   SNSFLDPT,@06                                        0250 00552000
         SLR   @01,@01                                             0250 00553000
         IC    @01,FLDCNT(,@06)                                    0250 00554000
         MVC   @ZT00003+3(1),FLDSZE(@06)                           0250 00555000
         M     @00,@ZT00003                                        0250 00556000
         ALR   SNSFLDPT,@01                                        0250 00557000
         SLR   @01,@01                                             0250 00558000
         IC    @01,CNTSNS(,@06)                                    0250 00559000
         MVC   @ZT00002+2(2),SNSIZE(@06)                           0250 00560000
         M     @00,@ZT00002                                        0250 00561000
         ALR   SNSFLDPT,@01                                        0250 00562000
*   SNDAD=DEVAD;                    /* PUT IN DEV ADDR               */ 00563000
         MVC   SNDAD(2,SNSFLDPT),DEVAD(@07)                        0251 00564000
*   SNFLD=OSNS1(1:OSNSCNT);         /* PUT IN SENSE DATA             */ 00565000
         MVI   SNFLD+1(SNSFLDPT),C' '                              0252 00566000
         MVC   SNFLD+2(34,SNSFLDPT),SNFLD+1(SNSFLDPT)              0252 00567000
         L     @01,IOSUSE(,IOSBPTR)                                0252 00568000
         L     @15,OECBPTR(,@01)                                   0252 00569000
         SLR   @14,@14                                             0252 00570000
         IC    @14,OSNSCNT(,@15)                                   0252 00571000
         BCTR  @14,0                                               0252 00572000
         EX    @14,@SM00892                                        0252 00573000
*BUMPSNS:                           /*                               */ 00574000
*   CNTSNS=CNTSNS+1;                /* BUMP TECB SNS COUNT           */ 00575000
BUMPSNS  L     @05,TECBADR(,WAITPTR)                               0253 00576000
         LA    @15,1                                               0253 00577000
         MVC   @ZT00003+3(1),CNTSNS(@05)                           0253 00578000
         AL    @15,@ZT00003                                        0253 00579000
         STC   @15,CNTSNS(,@05)                                    0253 00580000
*   GOTO BUMPEVT;                   /* GO BUMP EVENT COUNT           */ 00581000
*                                                                  0254 00582000
         B     BUMPEVT                                             0254 00583000
*   /*****************************************************************/ 00584000
*   /*                                                               */ 00585000
*   /* HANDLE WAIT REQUEST                                           */ 00586000
*   /*                                                               */ 00587000
*   /*****************************************************************/ 00588000
*                                                                  0255 00589000
*WAITRTN:                           /*                               */ 00590000
*   WTQ='0'B;                       /* RESET INTERUPT FLAGS          */ 00591000
WAITRTN  DS    0H                                                  0256 00592000
*   DBSY='0'B;                                                     0256 00593000
*   CBSY='0'B;                                                     0257 00594000
         NI    WTQ,B'11000111'                                     0257 00595000
*   DO K=600 TO 1 BY-1;                                            0258 00596000
         LA    K,600                                               0258 00597000
@DL00258 DS    0H                                                  0259 00598000
*     TEMPCC=IOSCC&CCMSK;           /* IF I/O IN QUEUE,              */ 00599000
         MVC   TEMPCC(1),IOSCC(IOSBPTR)                            0259 00600000
         NC    TEMPCC(1),CCMSK                                     0259 00601000
*     IF CCZ=TEMPCC THEN            /* SET QUEUED FLAG,              */ 00602000
         CLC   CCZ(1),TEMPCC                                       0260 00603000
         BNE   @RF00260                                            0260 00604000
*       DO;                                                        0261 00605000
*         WTQ='1'B;                 /* AND WAIT                      */ 00606000
         OI    WTQ,B'00100000'                                     0262 00607000
*         GOTO WTIME;               /* 1/10 SECOND                   */ 00608000
         B     WTIME                                               0263 00609000
*       END;                                                       0264 00610000
*     DO I=20 TO 1 BY-1;            /* WAIT FOR              @ZA12060*/ 00611000
@RF00260 LA    I,20                                                0265 00612000
@DL00265 DS    0H                                                  0266 00613000
*       TEMPCC=IOSCC&CCMSK;                                        0266 00614000
         MVC   TEMPCC(1),IOSCC(IOSBPTR)                            0266 00615000
         NC    TEMPCC(1),CCMSK                                     0266 00616000
*       IF CC0¬=TEMPCC THEN         /* DEFERRED                      */ 00617000
         CLC   CC0(1),TEMPCC                                       0267 00618000
         BNE   @RT00267                                            0267 00619000
*         GOTO CKCC1W;              /* CC                            */ 00620000
*     END;                                                         0269 00621000
         BCTR  I,0                                                 0269 00622000
         LTR   I,I                                                 0269 00623000
         BP    @DL00265                                            0269 00624000
*CKCC1W:                                                           0270 00625000
*     IF CC1¬=TEMPCC THEN           /* IF NOT CC 1,                  */ 00626000
CKCC1W   CLC   CC1(1),TEMPCC                                       0270 00627000
         BNE   @RT00270                                            0270 00628000
*       GOTO CKCC2W;                /* GO CHECK FOR CC 2             */ 00629000
*     IF OINCNT¬=0                  /* IF NOT BUSY                   */ 00630000
*       THEN                                                       0272 00631000
         L     @01,IOSUSE(,IOSBPTR)                                0272 00632000
         L     @01,OECBPTR(,@01)                                   0272 00633000
         CLI   OINCNT(@01),0                                       0272 00634000
         BNE   @RT00272                                            0272 00635000
*       GOTO SETIMER;               /* DO REQUESTED WAIT             */ 00636000
*     IF WTQ='1'B|CBSY='1'B         /* IF I/O QUEUED OR CHANNEL BUSY,*/ 00637000
*       THEN                                                       0274 00638000
         TM    WTQ,B'00101000'                                     0274 00639000
         BNZ   @RT00274                                            0274 00640000
*       GOTO WAITRTN;               /* START OVER                    */ 00641000
*     DBSY='1'B;                    /* DEVICE BUSY                   */ 00642000
         OI    DBSY,B'00010000'                                    0276 00643000
*     GOTO WTIME;                   /* WAIT 1/10 SECOND              */ 00644000
         B     WTIME                                               0277 00645000
*CKCC2W:                                                           0278 00646000
*     IF CC2¬=TEMPCC THEN           /* IF NOT CC 2, THEN CC3         */ 00647000
CKCC2W   CLC   CC2(1),TEMPCC                                       0278 00648000
         BNE   @RT00278                                            0278 00649000
*       GOTO SETIMER;               /* GO DO REQUESTED WAIT          */ 00650000
*     IF WTQ='1'B|DBSY='1'B         /* IF I/O QUEUED OR DEVICE BUSY, */ 00651000
*       THEN                                                       0280 00652000
         TM    WTQ,B'00110000'                                     0280 00653000
         BNZ   @RT00280                                            0280 00654000
*       GOTO WAITRTN;               /* START OVER                    */ 00655000
*     CBSY='1'B;                    /* CHANNEL BUSY                  */ 00656000
         OI    CBSY,B'00001000'                                    0282 00657000
*WTIME:                                                            0283 00658000
*     GEN(STIMER  WAIT,DINTVL=TENTHSEC);                           0283 00659000
WTIME    STIMER  WAIT,DINTVL=TENTHSEC                                   00660000
*   END;                                                           0284 00661000
         BCTR  K,0                                                 0284 00662000
         LTR   K,K                                                 0284 00663000
         BP    @DL00258                                            0284 00664000
*   SIOQUEUE='1'B;                  /* TURN ON FLG IN TECB           */ 00665000
         L     @01,TECBADR(,WAITPTR)                               0285 00666000
         OI    SIOQUEUE(@01),B'10000000'                           0285 00667000
*   RET08='1'B;                     /* SET X'08' RETURN      @ZA00442*/ 00668000
         OI    RET08,B'01000000'                                   0286 00669000
*   GOTO PURGRTN;                   /* TO TELL DPRINT WE             */ 00670000
*                                                                  0287 00671000
         B     PURGRTN                                             0287 00672000
*   /*****************************************************************/ 00673000
*   /*                                                               */ 00674000
*   /* HANDLE TIME REQUEST                                           */ 00675000
*   /*                                                               */ 00676000
*   /*****************************************************************/ 00677000
*                                                                  0288 00678000
*SETIMER:                           /* TIMED OUT IN QUEU             */ 00679000
*   IF WTIOTIME>1800                /* OLT WAITTIME GETS             */ 00680000
*     THEN                          /* RETCODE 0C.                   */ 00681000
SETIMER  CLC   WTIOTIME(2,WAITPTR),@CH00850                        0288 00682000
         BH    @RT00288                                            0288 00683000
*     GOTO SET0C;                   /*                               */ 00684000
*   TIME=WTIOTIME;                  /*                               */ 00685000
         MVC   @ZT00002+2(2),WTIOTIME(WAITPTR)                     0290 00686000
         L     TIME,@ZT00002                                       0290 00687000
*   IF WTIOTIME=0                   /* OLT WAITTIME OF 0             */ 00688000
*     THEN                          /* DEFAULTS TO 30                */ 00689000
         MVC   @ZT00002+2(2),WTIOTIME(WAITPTR)                     0291 00690000
         L     @05,@ZT00002                                        0291 00691000
         LTR   @05,@05                                             0291 00692000
         BNZ   @RF00291                                            0291 00693000
*     TIME=30;                      /* SECONDS.                      */ 00694000
         LA    TIME,30                                             0292 00695000
*   DO T=30 TO 1                    /* GET THE TIME TO               */ 00696000
*         BY-1;                     /* WAIT                          */ 00697000
@RF00291 LA    T,30                                                0293 00698000
@DL00293 DS    0H                                                  0294 00699000
*     IF TIME<60                    /* INTO                          */ 00700000
*       THEN                        /* ELEMENTS OF                   */ 00701000
         LA    @15,60                                              0294 00702000
         CR    TIME,@15                                            0294 00703000
         BL    @RT00294                                            0294 00704000
*       GOTO SETSEC;                /* 10 MIN MULTIPLES,             */ 00705000
*     TIME=TIME-60;                 /* AND MINUTES,                  */ 00706000
         SLR   TIME,@15                                            0296 00707000
*     DO;                           /*                               */ 00708000
*       IF MIN=9                    /*                               */ 00709000
*         THEN                      /*                               */ 00710000
         LA    @15,THIRTY                                          0298 00711000
         CLI   MIN(@15),9                                          0298 00712000
         BNE   @RF00298                                            0298 00713000
*         DO;                       /*                               */ 00714000
*           TMIN=TMIN+1;            /*                               */ 00715000
         LA    @14,1                                               0300 00716000
         MVC   @ZT00003+3(1),TMIN(@15)                             0300 00717000
         AL    @14,@ZT00003                                        0300 00718000
         STC   @14,TMIN(,@15)                                      0300 00719000
*           MIN=0;                  /*                               */ 00720000
         MVI   MIN(@15),X'00'                                      0301 00721000
*         END;                      /*                               */ 00722000
*       GOTO BUMPM;                 /*                               */ 00723000
         B     BUMPM                                               0303 00724000
*     END;                          /*                               */ 00725000
*BUMPM:                             /* AND                           */ 00726000
*     MIN=MIN+1;                    /*                               */ 00727000
BUMPM    LA    @15,THIRTY                                          0305 00728000
         LA    @14,1                                               0305 00729000
         MVC   @ZT00003+3(1),MIN(@15)                              0305 00730000
         AL    @14,@ZT00003                                        0305 00731000
         STC   @14,MIN(,@15)                                       0305 00732000
*   END;                            /*                               */ 00733000
         BCTR  T,0                                                 0306 00734000
         LTR   T,T                                                 0306 00735000
         BP    @DL00293                                            0306 00736000
*SETSEC:                            /*                               */ 00737000
*   DO T=6 TO 1                     /* 10 SEC MULTIPLES,             */ 00738000
*         BY-1;                     /* AND SECONDS.                  */ 00739000
SETSEC   LA    T,6                                                 0307 00740000
@DL00307 DS    0H                                                  0308 00741000
*     IF TIME<10                    /*                               */ 00742000
*       THEN                        /* THEN GO SET                   */ 00743000
         CH    TIME,@CH00750                                       0308 00744000
         BNL   @RF00308                                            0308 00745000
*       DO;                         /* CORRECT FORM.                 */ 00746000
*         SEC=TIME;                 /*                               */ 00747000
         LA    @05,THIRTY                                          0310 00748000
         STC   TIME,SEC(,@05)                                      0310 00749000
*         GOTO FORMREQ;             /*                               */ 00750000
         B     FORMREQ                                             0311 00751000
*       END;                        /*                               */ 00752000
*     TIME=TIME-10;                 /*                               */ 00753000
@RF00308 SH    TIME,@CH00750                                       0313 00754000
*     TSEC=TSEC+1;                  /*                               */ 00755000
         LA    @15,THIRTY                                          0314 00756000
         LA    @14,1                                               0314 00757000
         MVC   @ZT00003+3(1),TSEC(@15)                             0314 00758000
         AL    @14,@ZT00003                                        0314 00759000
         STC   @14,TSEC(,@15)                                      0314 00760000
*   END;                            /*                               */ 00761000
         BCTR  T,0                                                 0315 00762000
         LTR   T,T                                                 0315 00763000
         BP    @DL00307                                            0315 00764000
*FORMREQ:                           /*                               */ 00765000
*   TIMEPARM=TIMEPARM|              /* SET CORRECT FORM              */ 00766000
*       'F0F0F0F0'X;                /* FOR STIMER.                   */ 00767000
FORMREQ  LA    @15,THIRTY                                          0316 00768000
         OC    TIMEPARM(4,@15),@CB00859                            0316 00769000
*   IF TECBADR=0                    /* IF THIS IS TIME               */ 00770000
*     THEN                          /* ONLY REQ,                     */ 00771000
         L     @15,TECBADR(,WAITPTR)                               0317 00772000
         LTR   @15,@15                                             0317 00773000
         BNZ   @RF00317                                            0317 00774000
*     DO;                           /* JUST STALL.                   */ 00775000
*       GEN(STIMER  WAIT,DINTVL=THIRTY);                           0319 00776000
         STIMER  WAIT,DINTVL=THIRTY                                     00777000
*       GOTO SET08;                 /* GO RETCODE 08                 */ 00778000
         B     SET08                                               0320 00779000
*     END;                          /*                               */ 00780000
*   GEN(STIMER  REAL,TMEOUT,DINTVL=THIRTY);                        0322 00781000
@RF00317 DS    0H                                                  0322 00782000
         STIMER  REAL,TMEOUT,DINTVL=THIRTY                              00783000
*   IF POSTBIT(J)¬='1'B             /* IF ECB IS NOT POSTED,         */ 00784000
*     THEN                          /* WAIT                          */ 00785000
         L     @03,J                                               0323 00786000
         MH    @03,@CH00033                                        0323 00787000
         ST    @03,@TF00001                                        0323 00788000
         ALR   @03,COMMAPT                                         0323 00789000
         TM    POSTBIT-12(@03),B'01000000'                         0323 00790000
         BO    @RF00323                                            0323 00791000
*     DO;                           /* FOR                           */ 00792000
*       R1=ADDR(IOECB1(J));         /* IT.                           */ 00793000
         L     R1,@TF00001                                         0325 00794000
         LA    R1,IOECB1-12(R1,COMMAPT)                            0325 00795000
*       GEN(WAIT  ,ECB=(1));        /*                               */ 00796000
         WAIT  ,ECB=(1)                                                 00797000
*     END;                          /*                               */ 00798000
*   IF WTCMPCD(J)='100'X            /* IF WAITIO POSTED              */ 00799000
*     THEN                          /* IT,                           */ 00800000
@RF00323 L     @03,J                                               0328 00801000
         MH    @03,@CH00033                                        0328 00802000
         ALR   @03,COMMAPT                                         0328 00803000
         MVC   @TS00001(2),WTCMPCD-12(@03)                         0328 00804000
         NC    @TS00001(2),@CB00898                                0328 00805000
         CLC   @TS00001(2),@CB00900                                0328 00806000
         BNE   @RF00328                                            0328 00807000
*     DO;                           /*                               */ 00808000
*       RET08='1'B;                 /* SET FLG FOR CODE 08           */ 00809000
         OI    RET08,B'01000000'                                   0330 00810000
*       GOTO PURGRTN;               /* AND GO PURGE                  */ 00811000
         B     PURGRTN                                             0331 00812000
*     END;                          /*                               */ 00813000
*   GEN(TTIMER CANCEL);             /*                               */ 00814000
@RF00328 DS    0H                                                  0333 00815000
         TTIMER CANCEL                                                  00816000
*   GOTO SET00A;                    /* FREE CONTROL BLOCKS     YM5409*/ 00817000
*                                                                  0334 00818000
         B     SET00A                                              0334 00819000
*   /*****************************************************************/ 00820000
*   /*                                                               */ 00821000
*   /* TIMEOUT ROUTINE                                               */ 00822000
*   /*                                                               */ 00823000
*   /*****************************************************************/ 00824000
*                                                                  0335 00825000
*TMEOUT:                            /* FROM SCP ON TIMEOUT     YM3329*/ 00826000
*   PROC OPTIONS(NOSAVEAREA,NOSAVE(15));/*                     YM3329*/ 00827000
TMEOUT   ST    @14,12(,@13)                                        0335 00828000
         STM   @00,@12,20(@13)                                     0335 00829000
*   GEN(BALR  12,0);                /* ESTABLISH                     */ 00830000
         BALR  12,0                                                     00831000
*   GEN(LA    15,TMEOUT-IFDOLT36-22);/* ADDRESSABILITY               */ 00832000
         LA    15,TMEOUT-IFDOLT36-22                                    00833000
*   GEN(SR    12,15);               /*                               */ 00834000
         SR    12,15                                                    00835000
*   R14=R13;                        /* PUT SVPTR IN R14              */ 00836000
         LR    R14,R13                                             0339 00837000
*   R13=ADDR(SAVE2);                /* POINT TO MY SVAREA            */ 00838000
         LA    R13,SAVE2                                           0340 00839000
*   BACKSAVE(3)=R13;                /* SAVE MINE IN HIS              */ 00840000
         ST    R13,BACKSAVE+8(,R14)                                0341 00841000
*   SAVE2(2)=R14;                   /* SAVE HIS IN MINE              */ 00842000
         ST    R14,SAVE2+4                                         0342 00843000
*   COMMAPT=SAVE3;                  /* RESTORE COMMON AREA PTR       */ 00844000
         L     COMMAPT,SAVE3                                       0343 00845000
*   IF POSTBIT(J)¬='1'B             /* IF ECB IS NOT                 */ 00846000
*     THEN                          /*                               */ 00847000
         L     @03,J                                               0344 00848000
         MH    @03,@CH00033                                        0344 00849000
         ST    @03,@TF00001                                        0344 00850000
         ALR   @03,COMMAPT                                         0344 00851000
         TM    POSTBIT-12(@03),B'01000000'                         0344 00852000
         BO    @RF00344                                            0344 00853000
*     DO;                           /* GET                           */ 00854000
*       R1=ADDR(IOECB1(J));         /* IT                            */ 00855000
         L     R1,@TF00001                                         0346 00856000
         LA    R1,IOECB1-12(R1,COMMAPT)                            0346 00857000
*       R0=256;                     /* POSTED.                       */ 00858000
         LA    R0,256                                              0347 00859000
*       GEN(POST (1),(0));          /*                               */ 00860000
         POST (1),(0)                                                   00861000
*     END;                          /*                               */ 00862000
*   R13=SAVE2(2);                   /* GO BACK TO CALLER.            */ 00863000
@RF00344 L     R13,SAVE2+4                                         0350 00864000
*   END TMEOUT;                     /*                         Y02906*/ 00865000
*                                                                  0351 00866000
@EL00002 DS    0H                                                  0351 00867000
@EF00002 DS    0H                                                  0351 00868000
@ER00002 L     @14,12(,@13)                                        0351 00869000
         LM    @00,@12,20(@13)                                     0351 00870000
         BR    @14                                                 0351 00871000
*   /*****************************************************************/ 00872000
*   /*                                                               */ 00873000
*   /* PURGE ROUTINE                                                 */ 00874000
*   /*                                                               */ 00875000
*   /*****************************************************************/ 00876000
*                                                                  0352 00877000
*PURGRTN:                           /*                               */ 00878000
*   R0=ADDR(ROPT);                  /* PARAMETER LIST POINTER        */ 00879000
PURGRTN  LA    R0,ROPT(,COMMAPT)                                   0352 00880000
*   R1=80;                          /* CALL CODE = X'50'             */ 00881000
         LA    R1,80                                               0353 00882000
*   WKSVC(9)='00'X;                 /* SVC 16                        */ 00883000
         MVI   WKSVC+8(COMMAPT),X'00'                              0354 00884000
*SVC33:                                                            0355 00885000
*   GEN(SVC 59);                    /* SVC 59                        */ 00886000
SVC33    SVC 59                                                         00887000
*   IF RET08='0'B                   /* RETURN CODE 8?          YM4985*/ 00888000
*     THEN                                                         0356 00889000
         TM    RET08,B'01000000'                                   0356 00890000
         BZ    @RT00356                                            0356 00891000
*     GOTO SET00;                   /* NO, GIVE RETURN CODE 0  YM4985*/ 00892000
*   ACTIVE='0'B;                    /* YES, RESET ACTIVE FLAG  YM4985*/ 00893000
         L     @03,DEVTABPT                                        0358 00894000
         NI    ACTIVE(@03),B'11101111'                             0358 00895000
*   GOTO SET08;                     /* GO RETURN CODE 8      @ZA05492*/ 00896000
*                                                                  0359 00897000
         B     SET08                                               0359 00898000
*   /*****************************************************************/ 00899000
*   /*                                                               */ 00900000
*   /* SET RETURN CODE, RETURN TO CALLER                             */ 00901000
*   /*                                                               */ 00902000
*   /*****************************************************************/ 00903000
*                                                                  0360 00904000
*SET00A:                            /*                         YM5409*/ 00905000
*   R0=ADDR(ROPT);                  /* PARAMETER LIST POINTER  YM5409*/ 00906000
SET00A   LA    R0,ROPT(,COMMAPT)                                   0360 00907000
*   R1='8050'X;                     /* CALL CODE = X'8050'     YM5409*/ 00908000
         L     R1,@CF00872                                         0361 00909000
*   GEN(SVC 59);                    /* SVC 59                  YM5409*/ 00910000
         SVC 59                                                         00911000
*SET00:                             /*                               */ 00912000
*   ACTIVE='0'B;                    /* TURN OFF ACTIVE FLG           */ 00913000
SET00    L     @03,DEVTABPT                                        0363 00914000
         NI    ACTIVE(@03),B'11101111'                             0363 00915000
*   R15='00'X;                      /* SET RETCODE 00                */ 00916000
         SLR   R15,R15                                             0364 00917000
*   GOTO RETRN1;                    /* AND GO RETURN.                */ 00918000
         B     RETRN1                                              0365 00919000
*SET04:                             /*                               */ 00920000
*   R15='04'X;                      /* SET RETCODE 04                */ 00921000
SET04    LA    R15,4                                               0366 00922000
*   GOTO RETRN1;                    /* AND GO RETURN.                */ 00923000
         B     RETRN1                                              0367 00924000
*SET08:                             /*                               */ 00925000
*   R15='08'X;                      /* SET RETCODE 08                */ 00926000
SET08    LA    R15,8                                               0368 00927000
*   GOTO RETRN1;                    /* AND GO RETURN.                */ 00928000
         B     RETRN1                                              0369 00929000
*SET0C:                             /*                               */ 00930000
*   R15='0C'X;                      /* SET RETCODE 0C                */ 00931000
SET0C    LA    R15,12                                              0370 00932000
*   GOTO RETRN1;                    /* AND GO RETURN.                */ 00933000
         B     RETRN1                                              0371 00934000
*SET10:                             /*                               */ 00935000
*   R15='10'X;                      /* SET RETCODE 10 AND            */ 00936000
SET10    LA    R15,16                                              0372 00937000
*RETRN1:                            /*                               */ 00938000
*   R13=SAVE1(2);                   /* RETURN TO CALLER.             */ 00939000
RETRN1   L     R13,SAVE1+4                                         0373 00940000
*   RETURN;                         /*                               */ 00941000
@EL00001 DS    0H                                                  0374 00942000
@EF00001 DS    0H                                                  0374 00943000
@ER00001 L     @14,12(,@13)                                        0374 00944000
         LM    @00,@12,20(@13)                                     0374 00945000
         BR    @14                                                 0374 00946000
*   END IFDOLT36                                                   0375 00947000
*                                                                  0375 00948000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00949000
*/*%INCLUDE SYSLIB  (IFDPF1  )                                       */ 00950000
*/*%INCLUDE SYSLIB  (IECDIOSB)                                       */ 00951000
*/*%INCLUDE SYSLIB  (IFDEVTAB)                                       */ 00952000
*                                                                  0375 00953000
*       ;                                                          0375 00954000
@DATA    DS    0H                                                       00955000
@CH00055 DC    H'1'                                                     00956000
@CH00124 DC    H'3'                                                     00957000
@CH00750 DC    H'10'                                                    00958000
@CH00033 DC    H'12'                                                    00959000
@CH00167 DC    H'16'                                                    00960000
@CH00850 DC    H'1800'                                                  00961000
@SM00892 MVC   SNFLD(0,SNSFLDPT),OSNS1(@15)                             00962000
         DS    0F                                                       00963000
@TF00001 DS    F                                                        00964000
@ZTEMPS  DS    0F                                                       00965000
@ZT00001 DC    F'0'                                                     00966000
@ZT00002 DC    F'0'                                                     00967000
@ZT00003 DC    F'0'                                                     00968000
@ZTEMPND EQU   *                                                        00969000
@ZLEN    EQU   @ZTEMPND-@ZTEMPS                                         00970000
         DS    0F                                                       00971000
@CF00872 DC    XL4'8050'                                                00972000
         DS    0D                                                       00973000
DEVTABPT DS    A                                                        00974000
SAVE3    DS    F                                                        00975000
J        DS    F                                                        00976000
TEN      DC    H'10'                                                    00977000
@TS00001 DS    CL2                                                      00978000
@CB00859 DC    X'F0F0F0F0'                                              00979000
@CB00898 DC    B'0000111111111111'                                      00980000
@CB00900 DC    B'0000000100000000'                                      00981000
THIRTY   DC    X'F0F0F0F0F3F0F0C0'                                      00982000
TENTHSEC DC    X'F0F0F0F0F0F0F1C0'                                      00983000
TEMPCC   DS    CL1                                                      00984000
TELCOMM  DC    X'40'                                                    00985000
TELCOMN  DC    X'42'                                                    00986000
TELCONM  DC    X'10'                                                    00987000
SWITCHES DS    CL1                                                      00988000
         ORG   SWITCHES                                                 00989000
RET10    DS    BL1                                                      00990000
RET08    EQU   SWITCHES+0                                               00991000
WTQ      EQU   SWITCHES+0                                               00992000
DBSY     EQU   SWITCHES+0                                               00993000
CBSY     EQU   SWITCHES+0                                               00994000
         ORG   SWITCHES+1                                               00995000
CCZ      DC    X'00'                                                    00996000
CC0      DC    X'40'                                                    00997000
CC1      DC    X'50'                                                    00998000
CC2      DC    X'60'                                                    00999000
CCMSK    DC    X'70'                                                    01000000
         DS    CL2                                                      01001000
SAVE1    DS    18F                                                      01002000
SAVE2    DS    18F                                                      01003000
IFDOLT36 CSECT                                                          01004000
*                /*                                                     01005000
        IFDPATCH                                                        01006000
IFDOLT36 CSECT                                                          01007000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01008000
@01      EQU   01                                                       01009000
@02      EQU   02                                                       01010000
@03      EQU   03                                                       01011000
@04      EQU   04                                                       01012000
@05      EQU   05                                                       01013000
@06      EQU   06                                                       01014000
@07      EQU   07                                                       01015000
@08      EQU   08                                                       01016000
@09      EQU   09                                                       01017000
@10      EQU   10                                                       01018000
@11      EQU   11                                                       01019000
@12      EQU   12                                                       01020000
@13      EQU   13                                                       01021000
@14      EQU   14                                                       01022000
@15      EQU   15                                                       01023000
T        EQU   @05                                                      01024000
K        EQU   @05                                                      01025000
I        EQU   @06                                                      01026000
SAVEPARM EQU   @04                                                      01027000
TIME     EQU   @04                                                      01028000
SNSFLDPT EQU   @05                                                      01029000
OCSWPTR  EQU   @06                                                      01030000
EVFLDPTR EQU   @05                                                      01031000
IOSBPTR  EQU   @04                                                      01032000
WAITPTR  EQU   @03                                                      01033000
R1       EQU   @01                                                      01034000
R0       EQU   @00                                                      01035000
R13      EQU   @13                                                      01036000
R14      EQU   @14                                                      01037000
R15      EQU   @15                                                      01038000
COMMAPT  EQU   @02                                                      01039000
BACKSAVE EQU   0                                                        01040000
COMMAP   EQU   0                                                        01041000
CHASCT   EQU   COMMAP                                                   01042000
MSSSTAT  EQU   CHASCT+71                                                01043000
IOSCB    EQU   COMMAP+512                                               01044000
OECBWRD1 EQU   IOSCB+132                                                01045000
EFCTRCB  EQU   COMMAP+648                                               01046000
FLGA     EQU   EFCTRCB+8                                                01047000
FLGB     EQU   EFCTRCB+9                                                01048000
IODEVTAB EQU   COMMAP+672                                               01049000
IODEV1   EQU   IODEVTAB                                                 01050000
IOSBPTR1 EQU   IODEVTAB+4                                               01051000
IOECB1   EQU   IODEVTAB+8                                               01052000
CMPLT    EQU   IOECB1                                                   01053000
POSTBIT  EQU   CMPLT                                                    01054000
@NM00013 EQU   IOECB1+2                                                 01055000
WTCMPCD  EQU   @NM00013                                                 01056000
DEVTBPTR EQU   COMMAP+856                                               01057000
CESWT9   EQU   COMMAP+862                                               01058000
CESWT10  EQU   COMMAP+863                                               01059000
MCT      EQU   COMMAP+888                                               01060000
WKSVC    EQU   COMMAP+1100                                              01061000
ROPT     EQU   WKSVC+4                                                  01062000
OLTTAB   EQU   COMMAP+1116                                              01063000
CESWITCH EQU   COMMAP+1456                                              01064000
CESWT    EQU   CESWITCH                                                 01065000
CESWT1   EQU   CESWITCH+1                                               01066000
CESWT2   EQU   CESWITCH+2                                               01067000
CESWT3   EQU   CESWITCH+3                                               01068000
CESWT4   EQU   CESWITCH+4                                               01069000
CESWT5   EQU   CESWITCH+5                                               01070000
CESWT6   EQU   CESWITCH+6                                               01071000
CESWT7   EQU   CESWITCH+7                                               01072000
CESWT8   EQU   CESWITCH+8                                               01073000
CESWTR   EQU   COMMAP+1532                                              01074000
CESWTR1  EQU   COMMAP+1533                                              01075000
CESWTR2  EQU   COMMAP+1534                                              01076000
IOSB     EQU   0                                                        01077000
IOSFLA   EQU   IOSB                                                     01078000
IOSACHN  EQU   IOSFLA                                                   01079000
IOSFLB   EQU   IOSB+1                                                   01080000
IOSFLC   EQU   IOSB+2                                                   01081000
IOSDVALT EQU   IOSFLC                                                   01082000
IOSPKEY  EQU   IOSB+12                                                  01083000
IOSOPT   EQU   IOSB+14                                                  01084000
IOSOPT2  EQU   IOSB+15                                                  01085000
@NM00042 EQU   IOSB+20                                                  01086000
IOSCC    EQU   @NM00042                                                 01087000
IOSCSW   EQU   @NM00042+1                                               01088000
IOSTATUS EQU   IOSCSW+3                                                 01089000
IOSUSE   EQU   IOSB+32                                                  01090000
IOSIPIB  EQU   IOSB+44                                                  01091000
IOSDIE   EQU   IOSB+68                                                  01092000
IOSDIEFG EQU   IOSDIE                                                   01093000
IOSPATH  EQU   IOSB+86                                                  01094000
IOSCHN   EQU   IOSPATH                                                  01095000
IOSCKEY  EQU   IOSB+89                                                  01096000
IOSEEKA  EQU   IOSB+100                                                 01097000
IOSCCHH  EQU   IOSEEKA+3                                                01098000
IOSSKHH  EQU   IOSCCHH+2                                                01099000
DEVTABMP EQU   0                                                        01100000
DEVFLAG1 EQU   DEVTABMP+12                                              01101000
PRIMARY  EQU   DEVFLAG1                                                 01102000
ACTIVE   EQU   DEVFLAG1                                                 01103000
DEVFLAG2 EQU   DEVTABMP+13                                              01104000
HIODONE  EQU   DEVFLAG2                                                 01105000
EXIOLVL3 EQU   DEVFLAG2                                                 01106000
PCIIND   EQU   DEVFLAG2                                                 01107000
DEVFLAG3 EQU   DEVTABMP+14                                              01108000
WAITPOST EQU   DEVFLAG3                                                 01109000
DEVFLAG4 EQU   DEVTABMP+15                                              01110000
DEVLOEXT EQU   DEVTABMP+16                                              01111000
DEVHIEXT EQU   DEVTABMP+22                                              01112000
DEVHEXAD EQU   DEVTABMP+32                                              01113000
DEVAD    EQU   DEVHEXAD+2                                               01114000
DEVDESCR EQU   DEVTABMP+36                                              01115000
DEVCDSFG EQU   DEVTABMP+41                                              01116000
CDSFLAG1 EQU   DEVCDSFG                                                 01117000
CDSFLAG2 EQU   DEVCDSFG+1                                               01118000
CDSYMNAM EQU   DEVTABMP+44                                              01119000
DEVINTPT EQU   DEVTABMP+53                                              01120000
IOSUSECB EQU   0                                                        01121000
USERCB   EQU   IOSUSECB                                                 01122000
OECBPTR  EQU   USERCB                                                   01123000
TECBPTR  EQU   USERCB+4                                                 01124000
USEFLAGS EQU   USERCB+16                                                01125000
USEFLAGA EQU   USEFLAGS                                                 01126000
VIRT     EQU   USEFLAGA                                                 01127000
OECB     EQU   0                                                        01128000
OSNSCNT  EQU   OECB                                                     01129000
OINCNT   EQU   OECB+1                                                   01130000
OCSWA    EQU   OECB+4                                                   01131000
OSNS1    EQU   OECB+28                                                  01132000
OCSW     EQU   0                                                        01133000
OCSW1    EQU   OCSW+1                                                   01134000
OCSWCMD  EQU   OCSW1                                                    01135000
OCSWSTS  EQU   OCSW1+3                                                  01136000
OCSWSTB  EQU   OCSWSTS+1                                                01137000
CHCTRBIT EQU   OCSWSTB                                                  01138000
UNITCHK  EQU   OCSWSTB                                                  01139000
WAITLIST EQU   0                                                        01140000
WTIOLVL  EQU   WAITLIST+1                                               01141000
TECBADR  EQU   WAITLIST+4                                               01142000
CDSADR   EQU   WAITLIST+8                                               01143000
WAITFLAG EQU   WAITLIST+12                                              01144000
WAITRQ   EQU   WAITFLAG                                                 01145000
POLLRQ   EQU   WAITFLAG                                                 01146000
PURGRQ   EQU   WAITFLAG                                                 01147000
DERQ     EQU   WAITFLAG                                                 01148000
ANYRQ    EQU   WAITFLAG                                                 01149000
WTIOTIME EQU   WAITLIST+13                                              01150000
TECBLIST EQU   0                                                        01151000
FLDCNT   EQU   TECBLIST                                                 01152000
FLDSZE   EQU   TECBLIST+1                                               01153000
SNSIZE   EQU   TECBLIST+2                                               01154000
TECBFL   EQU   TECBLIST+4                                               01155000
SIOQUEUE EQU   TECBFL                                                   01156000
SNSCT    EQU   TECBLIST+5                                               01157000
CNTSNS   EQU   TECBLIST+6                                               01158000
CNTINT   EQU   TECBLIST+7                                               01159000
EVFLDS   EQU   0                                                        01160000
CCFLG    EQU   EVFLDS                                                   01161000
EVDAD    EQU   EVFLDS+2                                                 01162000
EVCSW    EQU   EVFLDS+4                                                 01163000
EVCSWST  EQU   EVCSW+1                                                  01164000
CSWCOMAD EQU   EVCSWST                                                  01165000
SNSFLDS  EQU   0                                                        01166000
SNDAD    EQU   SNSFLDS+1                                                01167000
SNFLD    EQU   SNSFLDS+3                                                01168000
CDS      EQU   0                                                        01169000
CDSDAD   EQU   CDS                                                      01170000
CDSFLG   EQU   CDS+9                                                    01171000
SYMBOLIC EQU   CDSFLG                                                   01172000
CDSSYMNE EQU   CDS+12                                                   01173000
@NM00076 EQU   0                                                        01174000
TIMEPARM EQU   @NM00076+2                                               01175000
TMIN     EQU   TIMEPARM                                                 01176000
MIN      EQU   TIMEPARM+1                                               01177000
TSEC     EQU   TIMEPARM+2                                               01178000
SEC      EQU   TIMEPARM+3                                               01179000
IOSATTSC EQU   IOSIPIB                                                  01180000
IOSWTOWA EQU   IOSIPIB                                                  01181000
IOSPCISC EQU   IOSIPIB                                                  01182000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01183000
IOSPCIWA EQU   IOSPCISC+44                                              01184000
IOSPCIRS EQU   IOSPCISC+8                                               01185000
@NM00047 EQU   IOSPCISC+4                                               01186000
@NM00046 EQU   IOSPCISC                                                 01187000
IOSWRNDR EQU   IOSWTOWA+4                                               01188000
IOSWTOPT EQU   IOSWTOWA+3                                               01189000
IOSWTOCP EQU   IOSWTOWA+2                                               01190000
IOSWTOCH EQU   IOSWTOWA                                                 01191000
IOSATTWA EQU   IOSATTSC+40                                              01192000
@NM00045 EQU   IOSATTSC+24                                              01193000
IOSATTSN EQU   IOSATTSC                                                 01194000
@NM00078 EQU   @NM00076+6                                               01195000
@NM00077 EQU   @NM00076                                                 01196000
@NM00075 EQU   CDS+10                                                   01197000
@NM00074 EQU   CDSFLG                                                   01198000
@NM00073 EQU   CDS+8                                                    01199000
@NM00072 EQU   CDS+4                                                    01200000
@NM00071 EQU   SNSFLDS                                                  01201000
@NM00070 EQU   EVCSWST+3                                                01202000
EVCSWB1  EQU   EVCSW                                                    01203000
@NM00069 EQU   EVFLDS+1                                                 01204000
@NM00068 EQU   WAITLIST+2                                               01205000
@NM00067 EQU   WAITLIST                                                 01206000
OCSWBYT  EQU   OCSW1+5                                                  01207000
@NM00066 EQU   OCSWSTB                                                  01208000
@NM00065 EQU   OCSWSTB                                                  01209000
OCSWSTA  EQU   OCSWSTS                                                  01210000
OCSWCC   EQU   OCSW                                                     01211000
UNUSED   EQU   OECB+2                                                   01212000
USEFLAGD EQU   USEFLAGS+3                                               01213000
USEFLAGC EQU   USEFLAGS+2                                               01214000
USEFLAGB EQU   USEFLAGS+1                                               01215000
@NM00064 EQU   USEFLAGA                                                 01216000
PCIENTRY EQU   USEFLAGA                                                 01217000
PURGED   EQU   USEFLAGA                                                 01218000
INTRNLCB EQU   USEFLAGA                                                 01219000
OLDTECB  EQU   USEFLAGA                                                 01220000
ATTN     EQU   USEFLAGA                                                 01221000
INUSE    EQU   USEFLAGA                                                 01222000
TCCWPTR  EQU   USERCB+12                                                01223000
IODVTBPT EQU   USERCB+8                                                 01224000
DEVEXPAN EQU   DEVTABMP+54                                              01225000
SAVMDMSK EQU   DEVTABMP+52                                              01226000
CDSEXTSG EQU   DEVTABMP+43                                              01227000
@NM00063 EQU   CDSFLAG2                                                 01228000
@NM00062 EQU   CDSFLAG2                                                 01229000
@NM00061 EQU   CDSFLAG2                                                 01230000
@NM00060 EQU   CDSFLAG2                                                 01231000
@NM00059 EQU   CDSFLAG2                                                 01232000
@NM00058 EQU   CDSFLAG2                                                 01233000
@NM00057 EQU   CDSFLAG2                                                 01234000
CDSNOPRI EQU   CDSFLAG2                                                 01235000
CDSLNCON EQU   CDSFLAG1                                                 01236000
CDSREMDV EQU   CDSFLAG1                                                 01237000
CDS2CHSW EQU   CDSFLAG1                                                 01238000
CDSYMBLC EQU   CDSFLAG1                                                 01239000
CDSEXMSK EQU   CDSFLAG1                                                 01240000
CDSCEMNT EQU   CDSFLAG1                                                 01241000
CDSSHRED EQU   CDSFLAG1                                                 01242000
CDSFILPT EQU   CDSFLAG1                                                 01243000
DEVCDSCT EQU   DEVTABMP+40                                              01244000
DEVUNTYP EQU   DEVDESCR+3                                               01245000
DEVCLASS EQU   DEVDESCR+2                                               01246000
DEVFEATR EQU   DEVDESCR+1                                               01247000
DEVMODEL EQU   DEVDESCR                                                 01248000
DEVADDR  EQU   DEVAD+1                                                  01249000
DEVCTRLU EQU   DEVAD+1                                                  01250000
DEVCHANL EQU   DEVAD                                                    01251000
@NM00056 EQU   DEVAD                                                    01252000
DEVADPAD EQU   DEVHEXAD                                                 01253000
DEVEXPOS EQU   DEVTABMP+31                                              01254000
DEVMODE  EQU   DEVTABMP+30                                              01255000
@NM00055 EQU   DEVTABMP+29                                              01256000
TAPELABL EQU   DEVTABMP+28                                              01257000
HIEXTHH  EQU   DEVHIEXT+4                                               01258000
HIEXTCC  EQU   DEVHIEXT+2                                               01259000
HIEXTBB  EQU   DEVHIEXT                                                 01260000
LOEXTHH  EQU   DEVLOEXT+4                                               01261000
LOEXTCC  EQU   DEVLOEXT+2                                               01262000
LOEXTBB  EQU   DEVLOEXT                                                 01263000
@NM00054 EQU   DEVFLAG4                                                 01264000
@NM00053 EQU   DEVFLAG4                                                 01265000
@NM00052 EQU   DEVFLAG4                                                 01266000
@NM00051 EQU   DEVFLAG4                                                 01267000
RESERVD2 EQU   DEVFLAG4                                                 01268000
RESERVD1 EQU   DEVFLAG4                                                 01269000
DEVREMEA EQU   DEVFLAG4                                                 01270000
DEVREMDA EQU   DEVFLAG4                                                 01271000
REISPEUD EQU   DEVFLAG3                                                 01272000
DEVALC   EQU   DEVFLAG3                                                 01273000
NOTEST   EQU   DEVFLAG3                                                 01274000
TAPEBIT  EQU   DEVFLAG3                                                 01275000
@NM00050 EQU   DEVFLAG3                                                 01276000
@NM00049 EQU   DEVFLAG3                                                 01277000
ANRNOTST EQU   DEVFLAG3                                                 01278000
@NM00048 EQU   DEVFLAG2                                                 01279000
STANDLBL EQU   DEVFLAG2                                                 01280000
CEVOLUMN EQU   DEVFLAG2                                                 01281000
SHARED   EQU   DEVFLAG2                                                 01282000
DSNAME   EQU   DEVFLAG2                                                 01283000
SYMBSSID EQU   DEVFLAG1                                                 01284000
FILEPRT  EQU   DEVFLAG1                                                 01285000
GRABED   EQU   DEVFLAG1                                                 01286000
ALOCATED EQU   DEVFLAG1                                                 01287000
DPDONE   EQU   DEVFLAG1                                                 01288000
ONLINE   EQU   DEVFLAG1                                                 01289000
DEVUCBAD EQU   DEVTABMP+8                                               01290000
DEVEBCAD EQU   DEVTABMP                                                 01291000
IOSEND   EQU   IOSB+108                                                 01292000
IOSSKR   EQU   IOSEEKA+7                                                01293000
IOSSKH2  EQU   IOSSKHH+1                                                01294000
IOSSKH1  EQU   IOSSKHH                                                  01295000
IOSSKCC  EQU   IOSCCHH                                                  01296000
IOSSKBB  EQU   IOSEEKA+1                                                01297000
IOSSKM   EQU   IOSEEKA                                                  01298000
IOSEEK   EQU   IOSB+92                                                  01299000
IOSMDM   EQU   IOSB+91                                                  01300000
IOSMDB   EQU   IOSB+90                                                  01301000
IOSCKEY7 EQU   IOSCKEY                                                  01302000
IOSCKEY6 EQU   IOSCKEY                                                  01303000
IOSCKEY5 EQU   IOSCKEY                                                  01304000
IOSCKEY4 EQU   IOSCKEY                                                  01305000
@NM00044 EQU   IOSCKEY                                                  01306000
IOSFMSK  EQU   IOSB+88                                                  01307000
IOSCUDEV EQU   IOSPATH+1                                                01308000
@NM00043 EQU   IOSCHN                                                   01309000
IOSPATH3 EQU   IOSCHN                                                   01310000
IOSPATH2 EQU   IOSCHN                                                   01311000
IOSEXP   EQU   IOSCHN                                                   01312000
IOSGDP   EQU   IOSCHN                                                   01313000
IOSAFF   EQU   IOSB+85                                                  01314000
IOSRSS1B EQU   IOSB+84                                                  01315000
IOSDSID  EQU   IOSB+80                                                  01316000
IOSVST   EQU   IOSB+76                                                  01317000
IOSRST   EQU   IOSB+72                                                  01318000
IOSNOTRS EQU   IOSDIEFG                                                 01319000
IOSABN   EQU   IOSB+64                                                  01320000
IOSNRM   EQU   IOSB+60                                                  01321000
IOSPCI   EQU   IOSB+56                                                  01322000
IOSERP   EQU   IOSB+52                                                  01323000
IOSPCHN  EQU   IOSB+48                                                  01324000
IOSSNS   EQU   IOSB+42                                                  01325000
IOSAPMSK EQU   IOSB+40                                                  01326000
IOSRES4A EQU   IOSB+36                                                  01327000
IOSSRB   EQU   IOSB+28                                                  01328000
IOSCSWRC EQU   IOSCSW+5                                                 01329000
IOSTSB   EQU   IOSTATUS+1                                               01330000
IOSTSA   EQU   IOSTATUS                                                 01331000
IOSCSWCA EQU   IOSCSW                                                   01332000
IOSUCB   EQU   IOSB+16                                                  01333000
IOSOPT2X EQU   IOSOPT2                                                  01334000
IOSHTP   EQU   IOSOPT2                                                  01335000
IOSRELSE EQU   IOSOPT                                                   01336000
IOSAPR   EQU   IOSOPT                                                   01337000
IOSTSLL  EQU   IOSOPT                                                   01338000
IOSNERP  EQU   IOSOPT                                                   01339000
IOSPSLL  EQU   IOSOPT                                                   01340000
IOSQISCE EQU   IOSOPT                                                   01341000
IOSDEP   EQU   IOSOPT                                                   01342000
IOSBYP   EQU   IOSOPT                                                   01343000
IOSCOD   EQU   IOSB+13                                                  01344000
IOSPKY7  EQU   IOSPKEY                                                  01345000
IOSPGDPX EQU   IOSPKEY                                                  01346000
IOSIDR   EQU   IOSPKEY                                                  01347000
IOSLCL   EQU   IOSPKEY                                                  01348000
@NM00041 EQU   IOSPKEY                                                  01349000
IOSPGAD  EQU   IOSB+8                                                   01350000
IOSASID  EQU   IOSB+6                                                   01351000
IOSPRLVL EQU   IOSB+5                                                   01352000
IOSDVRID EQU   IOSB+4                                                   01353000
IOSPROC  EQU   IOSB+3                                                   01354000
IOSFLC7  EQU   IOSFLC                                                   01355000
IOSCTCNR EQU   IOSFLC                                                   01356000
IOSRWAIT EQU   IOSFLC                                                   01357000
IOSTP    EQU   IOSFLC                                                   01358000
IOSCC3WE EQU   IOSFLC                                                   01359000
IOSVERIF EQU   IOSDVALT                                                 01360000
IOSDVMNT EQU   IOSFLC                                                   01361000
IOSLOG   EQU   IOSFLB                                                   01362000
IOSBDCST EQU   IOSFLB                                                   01363000
IOSMSG   EQU   IOSFLB                                                   01364000
IOSFLB4  EQU   IOSFLB                                                   01365000
IOSFLB3  EQU   IOSFLB                                                   01366000
IOSFLB2  EQU   IOSFLB                                                   01367000
IOSSDR   EQU   IOSFLB                                                   01368000
IOSDIESE EQU   IOSFLB                                                   01369000
IOSIOSB  EQU   IOSFLA                                                   01370000
IOSDOM   EQU   IOSFLA                                                   01371000
IOSEX    EQU   IOSFLA                                                   01372000
IOSSMDB  EQU   IOSFLA                                                   01373000
IOSSMDA  EQU   IOSFLA                                                   01374000
IOSERR   EQU   IOSFLA                                                   01375000
IOSCCHN  EQU   IOSACHN                                                  01376000
IOSDCHN  EQU   IOSACHN                                                  01377000
DEVTAB   EQU   COMMAP+2020                                              01378000
THIRDMCT EQU   COMMAP+1812                                              01379000
NEXTMCT  EQU   COMMAP+1604                                              01380000
@NM00040 EQU   COMMAP+1596                                              01381000
VRSIZE   EQU   COMMAP+1592                                              01382000
CORERSLT EQU   COMMAP+1584                                              01383000
PGFXOLT  EQU   COMMAP+1576                                              01384000
PARTITEM EQU   COMMAP+1564                                              01385000
PGFXLIST EQU   COMMAP+1548                                              01386000
SYMPTR   EQU   COMMAP+1544                                              01387000
EXPAND1  EQU   COMMAP+1540                                              01388000
@NM00039 EQU   COMMAP+1538                                              01389000
ZUESUCB  EQU   COMMAP+1536                                              01390000
CESWTR3  EQU   COMMAP+1535                                              01391000
DPMSGREI EQU   CESWTR2                                                  01392000
@NM00038 EQU   CESWTR2                                                  01393000
OPTERR   EQU   CESWTR2                                                  01394000
WAIT     EQU   CESWTR2                                                  01395000
COMLOOP  EQU   CESWTR2                                                  01396000
ONCOMM   EQU   CESWTR2                                                  01397000
@NM00037 EQU   CESWTR2                                                  01398000
REPLY00  EQU   CESWTR2                                                  01399000
REIENTRY EQU   CESWTR1                                                  01400000
EDOTMSG  EQU   CESWTR1                                                  01401000
REMANS   EQU   CESWTR1                                                  01402000
RETRIEVE EQU   CESWTR1                                                  01403000
INFOMSG  EQU   CESWTR1                                                  01404000
CECOMANS EQU   CESWTR1                                                  01405000
EXECANS  EQU   CESWTR1                                                  01406000
ILLRESP  EQU   CESWTR1                                                  01407000
@NM00036 EQU   CESWTR                                                   01408000
EXECOUT  EQU   CESWTR                                                   01409000
IMRESP   EQU   CESWTR                                                   01410000
TRANSMSG EQU   CESWTR                                                   01411000
CENOMSG  EQU   CESWTR                                                   01412000
REMONMSG EQU   CESWTR                                                   01413000
REMERR   EQU   CESWTR                                                   01414000
RETAINAC EQU   CESWTR                                                   01415000
REIUCB   EQU   COMMAP+1528                                              01416000
RESPBUF  EQU   COMMAP+1524                                              01417000
TALKECB  EQU   COMMAP+1520                                              01418000
REIECB   EQU   COMMAP+1516                                              01419000
REIOBPTR EQU   COMMAP+1512                                              01420000
REIDCBPT EQU   COMMAP+1508                                              01421000
RINBUF   EQU   COMMAP+1504                                              01422000
RTALKBUF EQU   COMMAP+1500                                              01423000
MHRPTR   EQU   COMMAP+1496                                              01424000
ENDJOB   EQU   COMMAP+1492                                              01425000
MSGMOD   EQU   COMMAP+1488                                              01426000
RDCBPTR  EQU   COMMAP+1484                                              01427000
READDMOD EQU   COMMAP+1480                                              01428000
@NM00035 EQU   COMMAP+1477                                              01429000
READDSV  EQU   COMMAP+1471                                              01430000
CNT37    EQU   COMMAP+1470                                              01431000
DPLEVEL  EQU   COMMAP+1469                                              01432000
UNITUSE  EQU   COMMAP+1468                                              01433000
UNICTR   EQU   COMMAP+1467                                              01434000
SECTUSE  EQU   COMMAP+1466                                              01435000
DYNCOM   EQU   COMMAP+1465                                              01436000
TALKHERE EQU   CESWT8                                                   01437000
SNEWRUN  EQU   CESWT8                                                   01438000
SUTMSG   EQU   CESWT8                                                   01439000
OLTINVV  EQU   CESWT8                                                   01440000
READDCHK EQU   CESWT8                                                   01441000
@NM00034 EQU   CESWT8                                                   01442000
@NM00033 EQU   CESWT8                                                   01443000
LISTFIX  EQU   CESWT8                                                   01444000
GOTINPUT EQU   CESWT7                                                   01445000
VIRTUAL  EQU   CESWT7                                                   01446000
@NM00032 EQU   CESWT7                                                   01447000
@NM00031 EQU   CESWT7                                                   01448000
@NM00030 EQU   CESWT7                                                   01449000
REMOTE   EQU   CESWT7                                                   01450000
RETTO31  EQU   CESWT7                                                   01451000
INCLST   EQU   CESWT7                                                   01452000
RTSTAE   EQU   CESWT6                                                   01453000
SECRUN   EQU   CESWT6                                                   01454000
NORUN    EQU   CESWT6                                                   01455000
CODE5    EQU   CESWT6                                                   01456000
PFPMSG   EQU   CESWT6                                                   01457000
EOFBIT   EQU   CESWT6                                                   01458000
ATM      EQU   CESWT6                                                   01459000
UTSCAL   EQU   CESWT6                                                   01460000
PRNTOPTN EQU   CESWT5                                                   01461000
SYMBFLG  EQU   CESWT5                                                   01462000
PCEMSG   EQU   CESWT5                                                   01463000
PFEMSG   EQU   CESWT5                                                   01464000
FCEFLG   EQU   CESWT5                                                   01465000
FFEFLG   EQU   CESWT5                                                   01466000
RSLTFLG  EQU   CESWT5                                                   01467000
HDRFLG   EQU   CESWT5                                                   01468000
WTOFLG   EQU   CESWT4                                                   01469000
RPLYFLG  EQU   CESWT4                                                   01470000
WTORFLG  EQU   CESWT4                                                   01471000
@NM00029 EQU   CESWT4                                                   01472000
WRTFLG   EQU   CESWT4                                                   01473000
WAITFLG  EQU   CESWT4                                                   01474000
DPRFLG   EQU   CESWT4                                                   01475000
RSTRFLG  EQU   CESWT4                                                   01476000
NODP     EQU   CESWT3                                                   01477000
CDEXIST  EQU   CESWT3                                                   01478000
TP1419   EQU   CESWT3                                                   01479000
SUSDEL   EQU   CESWT3                                                   01480000
GRBCNTL  EQU   CESWT3                                                   01481000
BYPDEV   EQU   CESWT3                                                   01482000
BYPALDEV EQU   CESWT3                                                   01483000
TALKVERB EQU   CESWT3                                                   01484000
@NM00028 EQU   CESWT2                                                   01485000
TAPEHDR  EQU   CESWT2                                                   01486000
NDR      EQU   CESWT2                                                   01487000
INITENT  EQU   CESWT2                                                   01488000
@NM00027 EQU   CESWT2                                                   01489000
FECOND   EQU   CESWT2                                                   01490000
@NM00026 EQU   CESWT2                                                   01491000
NDCFO    EQU   CESWT2                                                   01492000
TPFLAG   EQU   CESWT1                                                   01493000
ONLINEOK EQU   CESWT1                                                   01494000
@NM00025 EQU   CESWT1                                                   01495000
FILMSK   EQU   CESWT1                                                   01496000
WAITFG   EQU   CESWT1                                                   01497000
@NM00024 EQU   CESWT1                                                   01498000
SKTST    EQU   CESWT1                                                   01499000
RTNFLD   EQU   CESWT1                                                   01500000
@NM00023 EQU   CESWT                                                    01501000
FERINT   EQU   CESWT                                                    01502000
REINT    EQU   CESWT                                                    01503000
LEGALDEV EQU   CESWT                                                    01504000
NUTS     EQU   CESWT                                                    01505000
OUTS     EQU   CESWT                                                    01506000
SECDEV   EQU   CESWT                                                    01507000
LEGALTST EQU   CESWT                                                    01508000
SAVENT   EQU   COMMAP+1452                                              01509000
@NM00022 EQU   COMMAP+1450                                              01510000
SAVECNT  EQU   COMMAP+1448                                              01511000
HRTSEL   EQU   COMMAP+1446                                              01512000
TLCOUNT  EQU   COMMAP+1444                                              01513000
TPSAVE   EQU   COMMAP+1440                                              01514000
MSGAD37  EQU   COMMAP+1436                                              01515000
REPLY37  EQU   COMMAP+1364                                              01516000
ECB37    EQU   COMMAP+1360                                              01517000
ADSVAREA EQU   COMMAP+1356                                              01518000
NEXTREC  EQU   COMMAP+1352                                              01519000
COMMINT  EQU   COMMAP+1348                                              01520000
REDEFINE EQU   COMMAP+1344                                              01521000
SECDVPTR EQU   COMMAP+1340                                              01522000
PRIDVPTR EQU   COMMAP+1336                                              01523000
DPRDEBAD EQU   COMMAP+1332                                              01524000
EXTBUF   EQU   COMMAP+1276                                              01525000
UTCOM    EQU   COMMAP+1212                                              01526000
ECB3     EQU   COMMAP+1208                                              01527000
TSTDEBAD EQU   COMMAP+1204                                              01528000
TUCBAD2  EQU   COMMAP+1200                                              01529000
TUCBAD1  EQU   COMMAP+1196                                              01530000
REGX     EQU   COMMAP+1192                                              01531000
PLKMOR   EQU   COMMAP+1176                                              01532000
SATAB    EQU   COMMAP+1164                                              01533000
SCHEDSA  EQU   COMMAP+1160                                              01534000
LOGADR   EQU   COMMAP+1156                                              01535000
@NM00021 EQU   OLTTAB+32                                                01536000
TAB28    EQU   OLTTAB+28                                                01537000
@NM00020 EQU   OLTTAB                                                   01538000
@NM00019 EQU   WKSVC+8                                                  01539000
@NM00018 EQU   WKSVC                                                    01540000
MCT1ADR  EQU   COMMAP+1096                                              01541000
@NM00017 EQU   MCT+168                                                  01542000
PARPRADR EQU   MCT+164                                                  01543000
@NM00016 EQU   MCT                                                      01544000
UTCOMAD  EQU   COMMAP+884                                               01545000
TABAD    EQU   COMMAP+880                                               01546000
DEVDEPAD EQU   COMMAP+876                                               01547000
PSCT     EQU   COMMAP+872                                               01548000
OPEN3    EQU   COMMAP+868                                               01549000
OPEN2    EQU   COMMAP+864                                               01550000
VERBCALL EQU   CESWT10                                                  01551000
AFFNSET  EQU   CESWT10                                                  01552000
MPSYS    EQU   CESWT10                                                  01553000
@NM00015 EQU   CESWT9                                                   01554000
VRCAP    EQU   CESWT9                                                   01555000
RESTBENT EQU   CESWT9                                                   01556000
CDSEQU   EQU   CESWT9                                                   01557000
TABLNGTH EQU   COMMAP+860                                               01558000
XXXXXXXX EQU   COMMAP+712                                               01559000
CHARAFFN EQU   COMMAP+710                                               01560000
SELAFFN  EQU   COMMAP+708                                               01561000
@NM00014 EQU   @NM00013                                                 01562000
PSUDPOST EQU   @NM00013                                                 01563000
@NM00012 EQU   IOECB1+1                                                 01564000
CMPLCODE EQU   CMPLT                                                    01565000
WAITBIT  EQU   CMPLT                                                    01566000
IOEFTRAD EQU   COMMAP+668                                               01567000
SEEKPTR  EQU   EFCTRCB+16                                               01568000
TECBPTRX EQU   EFCTRCB+12                                               01569000
SNSCNT   EQU   EFCTRCB+11                                               01570000
FILEMSK  EQU   EFCTRCB+10                                               01571000
@NM00011 EQU   FLGB                                                     01572000
@NM00010 EQU   FLGB                                                     01573000
@NM00009 EQU   FLGB                                                     01574000
@NM00008 EQU   FLGB                                                     01575000
OLDTECBX EQU   FLGB                                                     01576000
VIRTCCWS EQU   FLGB                                                     01577000
ATTNIN   EQU   FLGB                                                     01578000
INTIRNAL EQU   FLGB                                                     01579000
@NM00007 EQU   FLGA                                                     01580000
@NM00006 EQU   FLGA                                                     01581000
@NM00005 EQU   FLGA                                                     01582000
@NM00004 EQU   FLGA                                                     01583000
SPEXPOS  EQU   FLGA                                                     01584000
GDP      EQU   FLGA                                                     01585000
CEDEPOST EQU   FLGA                                                     01586000
BYPASPFX EQU   FLGA                                                     01587000
DVTPTR   EQU   EFCTRCB+4                                                01588000
CCWPTR   EQU   EFCTRCB                                                  01589000
OECBX    EQU   OECBWRD1+2                                               01590000
OECBINCT EQU   OECBWRD1+1                                               01591000
OECBSNSC EQU   OECBWRD1                                                 01592000
MODUSECB EQU   IOSCB+108                                                01593000
MODIOSB  EQU   IOSCB                                                    01594000
DIEPTR   EQU   COMMAP+508                                               01595000
ABNMEXIT EQU   COMMAP+504                                               01596000
NORMEXIT EQU   COMMAP+500                                               01597000
PCIEXIT  EQU   COMMAP+496                                               01598000
SECLST   EQU   COMMAP+358                                               01599000
PGMTAB   EQU   COMMAP+350                                               01600000
DATIND   EQU   COMMAP+348                                               01601000
DATPTR   EQU   COMMAP+344                                               01602000
UTENT    EQU   COMMAP+340                                               01603000
SECPTR   EQU   COMMAP+336                                               01604000
PRTBUFR  EQU   COMMAP+212                                               01605000
INBUFR   EQU   COMMAP+140                                               01606000
INBUFPTR EQU   COMMAP+136                                               01607000
LGWRTCT  EQU   COMMAP+96                                                01608000
DOLT00PT EQU   COMMAP+92                                                01609000
@NM00003 EQU   CHASCT+78                                                01610000
CPUID    EQU   CHASCT+73                                                01611000
@NM00002 EQU   CHASCT+72                                                01612000
INITSW   EQU   MSSSTAT                                                  01613000
DINITSW  EQU   MSSSTAT                                                  01614000
FINITSW  EQU   MSSSTAT                                                  01615000
@NM00001 EQU   CHASCT                                                   01616000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01617000
@RT00114 EQU   SET04                                                    01618000
@RT00116 EQU   SETIMER                                                  01619000
@RT00118 EQU   SET04                                                    01620000
@RT00124 EQU   TECBCK                                                   01621000
@RT00130 EQU   TECBCK                                                   01622000
@RT00134 EQU   TECBCK                                                   01623000
@RT00144 EQU   ACTVCK                                                   01624000
@RT00149 EQU   PURGCK                                                   01625000
@RT00151 EQU   OINCTCK                                                  01626000
@RT00154 EQU   PURGRTN                                                  01627000
@RT00156 EQU   WAITRTN                                                  01628000
@RT00158 EQU   SET00A                                                   01629000
@RT00166 EQU   PSTDCK                                                   01630000
@RT00169 EQU   DONECK                                                   01631000
@RT00173 EQU   CKCC1                                                    01632000
@RT00177 EQU   CKCC2                                                    01633000
@RT00179 EQU   PSTDCKA                                                  01634000
@RT00182 EQU   PSTDCKA                                                  01635000
@RT00185 EQU   SET08                                                    01636000
@RT00187 EQU   SET00                                                    01637000
@RT00189 EQU   SET00A                                                   01638000
@RT00191 EQU   SET10                                                    01639000
@RT00194 EQU   DONECK                                                   01640000
@RT00200 EQU   PSTTECB                                                  01641000
@RT00203 EQU   EVTCTCK                                                  01642000
@RF00205 EQU   PSTDCK                                                   01643000
@RT00220 EQU   DONECK                                                   01644000
@RT00233 EQU   REALCCW                                                  01645000
@RT00235 EQU   REALCCW                                                  01646000
@RT00237 EQU   REALCCW                                                  01647000
@RT00246 EQU   BUMPEVT                                                  01648000
@RT00248 EQU   BUMPSNS                                                  01649000
@RT00267 EQU   CKCC1W                                                   01650000
@RT00270 EQU   CKCC2W                                                   01651000
@RT00272 EQU   SETIMER                                                  01652000
@RT00274 EQU   WAITRTN                                                  01653000
@RT00278 EQU   SETIMER                                                  01654000
@RT00280 EQU   WAITRTN                                                  01655000
@RT00288 EQU   SET0C                                                    01656000
@RT00294 EQU   SETSEC                                                   01657000
@RF00298 EQU   BUMPM                                                    01658000
@RT00356 EQU   SET00                                                    01659000
@ENDDATA EQU   *                                                        01660000
         END   IFDOLT36,(C'PLS2046',0701,77111)                         01661000
./  ADD  SSI=32570915,NAME=IFDOLT37
         TITLE '        NEW CECOM WTO/R INTERFACE--IFDOLT37.'           00010000
         PRINT OFF                                                      00020000
         MACRO                                                          00030000
&NAME    CECOM &OUTMSG=,&INMSG=,&OUTSD=,&FREE=,&POLL=,&MF=,            X00040000
               &MAP=NO,&LSTNAME=                                        00050000
.*                                                                      00060000
         GBLB  &EXECUTV,&E536454                                        00070000
         LCLA  &A,&COUNT                                                00080000
         LCLC  &F,&Z,&CHAR                                              00090000
.*                                                                      00100000
         AIF   ('&MAP' EQ 'YES').MAP1                                   00110000
         AIF   (T'&MF EQ 'O').STD                                       00120000
         AIF   ('&MF' EQ 'L' OR '&MF' EQ 'S').STD                       00130000
         AIF   ('&MF'(1,3) NE '(E,').MFERROR                            00140000
&CHAR    SETC  '&NAME'                                                  00150000
         AIF   ('&MF'(4,3) EQ '(1)').RG1                                00160000
         AIF   ('&MF'(4,1) EQ '(').RG2                                  00170000
&CHAR    LA    R1,&MF(2) .         ADDRESS OF PARAMETER LIST            00180000
&CHAR    SETC  ' '                                                      00190000
         AGO   .RG1                                                     00200000
.RG2     ANOP                                                           00210000
&COUNT   SETA  K'&MF(2)-2                                               00220000
&F       SETC  '&MF(2)'(2,&COUNT)                                       00230000
         AIF   ('&F'(1,1) EQ 'R').C724                                  00240000
&CHAR    LR    R1,R&F .            ADDRESS OF PARAMETER LIST            00250000
&CHAR    SETC  ' '                                                      00260000
         AGO   .RG1                                                     00270000
.C724    ANOP                                                           00280000
&CHAR    LR    R1,&F .             ADDRESS OF PARAMETER LIST            00290000
&CHAR    SETC  ' '                                                      00300000
.RG1     ANOP                                                           00310000
&CHAR    BAL   R14,#EXIT .         BRANCH TO LINKAGE SUBROUTINE         00320000
         MEXIT                                                          00330000
.MFERROR MNOTE 8,'MF VALUE (&MF) INCORRECT, NO STATEMENTS GENERATED.'   00340000
         MEXIT                                                          00350000
.STD     ANOP                                                           00360000
         AIF   (T'&FREE NE 'O').FREE                                    00370000
         AIF   (T'&POLL NE 'O').POLL                                    00380000
         AIF   (T'&OUTMSG EQ 'O').ERR1                                  00390000
         AIF   (N'&OUTMSG EQ 1).ERR2                                    00400000
         AGO   .NO3                                                     00410000
.FREE    ANOP                                                           00420000
         AIF   (T'&OUTMSG NE 'O' OR T'&INMSG NE 'O').ERR4               00430000
         AIF   (T'&POLL NE 'O' OR T'&OUTSD NE 'O').ERR4                 00440000
&A       SETA  64                                                       00450000
         AGO   .NO3                                                     00460000
.POLL    ANOP                                                           00470000
         AIF   (T'&OUTMSG NE 'O' OR T'&INMSG NE 'O').ERR4               00480000
         AIF   (T'&FREE NE 'O' OR T'&OUTSD NE 'O').ERR4                 00490000
&A       SETA  32                                                       00500000
.NO3     ANOP                                                           00510000
         AIF   (T'&INMSG EQ 'O').NO3A                                   00520000
         AIF   (N'&INMSG NE 2).ERR3                                     00530000
.NO3A    ANOP                                                           00540000
         AIF   (T'&OUTSD EQ 'O').NO5A                                   00550000
         AIF   (T'&OUTMSG NE 'O' AND T'&INMSG NE 'O').NO5               00560000
         MNOTE 8,'OUTSD WITHOUT BOTH OUTMSG AND INMSG INVALID'          00570000
         MEXIT                                                          00580000
.NO5     ANOP                                                           00590000
&A       SETA  128                                                      00600000
.NO5A    ANOP                                                           00610000
         AIF   ('&MF(1)' EQ 'L').LST                                    00620000
&NAME    LA    R14,R&SYSNDX        RETURN ADDRESS                       00630000
         CNOP  0,4                                                      00640000
         BAL   R1,#EXIT .          BRANCH TO LINKAGE SUBROUTINE         00650000
&CHAR    SETC  '&LSTNAME'                                               00660000
         AGO   .STD1                                                    00670000
.LST     ANOP                                                           00680000
&CHAR    SETC  '&NAME'                                                  00690000
.STD1    ANOP                                                           00700000
         AIF   (&EXECUTV).OLTSEP                                        00710000
&CHAR    DC    B'00000000' .       CONTROL PROGRAM FLAGS                00720000
         AGO   .OLTSEP1                                                 00730000
.OLTSEP  ANOP                                                           00740000
&CHAR    DC    B'00000001' .       CONTROL PROGRAM FLAGS                00750000
.OLTSEP1 ANOP                                                           00760000
         DC    AL1(2) .            MACRO LEVEL                          00770000
         DC    CL2'37' .           MACRO ID                             00780000
         AIF   (T'&OUTMSG NE 'O').NO6                                   00790000
         DC    A(0) .              OUTMSG ADDRESS                       00800000
         DC    A(0) .              OUTMSG COUNT                         00810000
         AGO   .NO6A                                                    00820000
.NO6     ANOP                                                           00830000
         DC    A(&OUTMSG(1)) .     OUTMSG ADDRESS                       00840000
         DC    A(&OUTMSG(2)) .     OUTMSG COUNT                         00850000
.NO6A    ANOP                                                           00860000
         AIF   (T'&INMSG NE 'O').NO7                                    00870000
         DC    A(0) .              INMSG ADDRESS                        00880000
         DC    A(0) .              INMSG COUNT                          00890000
         AGO   .NO9                                                     00900000
.NO7     ANOP                                                           00910000
         DC    A(&INMSG(1)) .      INMSG ADDRESS                        00920000
         DC    A(&INMSG(2)) .      INMSG COUNT                          00930000
.NO9     ANOP                                                           00940000
         DC    AL1(&A) .           FLAGS                                00950000
** FLAGS                                                                00960000
** POLL  32                                                             00970000
** FREE  64                                                             00980000
** OUTSD 128                                                            00990000
         AIF   ('&MF' EQ 'L').EXIT                                      01000000
R&SYSNDX DS    0H                                                       01010000
         MEXIT                                                          01020000
.ERR1    MNOTE 8,'NO OUTMSG OPERAND'                                    01030000
         MEXIT                                                          01040000
.ERR2    MNOTE 8,'INVALID OUTMSG PARAMETER'                             01050000
         MEXIT                                                          01060000
.ERR3    ANOP                                                           01070000
         MNOTE 8,'INVALID INMSG OPERAND'                                01080000
         MEXIT                                                          01090000
.ERR4    ANOP                                                           01100000
         MNOTE 8,'FREE OR POLL OPERAND MUST BE ALONE'                   01110000
         MEXIT                                                          01120000
.MAP1    ANOP                                                           01130000
CECOMMAP DSECT                                                          01140000
&Z       SETC  '$'                                                      01150000
         AIF   (&E536454).ZIPPER                                        01160000
           DC  XL1'0' .            CONTROL PROGRAM FLAGS                01170000
           DC  XL1'0' .            MACRO LEVEL                          01180000
           DC  XL2'0' .            MACRO ID                             01190000
         AGO   .ZIPPED                                                  01200000
.ZIPPER  ANOP                                                           01210000
&Z.CECTRMG DC  XL1'0' .            CONTROL PROGRAM FLAGS                01220000
&Z.CECLEVL DC  XL1'0' .            MACRO LEVEL                          01230000
&Z.CECIDNT DC  XL2'0' .            MACRO ID                             01240000
.ZIPPED  ANOP                                                           01250000
&Z.CEOUTAD DC  A(0) .              ADDRESS OF OUTPUT MESSAGE            01260000
&Z.CEOUTCT DC  A(0) .              LENGTH  OF OUTPUT MESSAGE            01270000
&Z.CEINADR DC  A(0) .              ADDRESS OF INPUT  MESSAGE            01280000
&Z.CEINCT  DC  A(0) .              LENGTH  OF INPUT  MESSAGE            01290000
&Z.CECFLAG DC  XL1'0' .            FLAGS                                01300000
.EXIT    MEND                                                           01310000
         EJECT                                                          01320000
         PRINT ON                                                       01330000
         LCLA  &T,&SPN                                            0002  01340000
.@001    ANOP                                                     0002  01350000
IFDOLT37 CSECT ,                                                  0002  01360000
         BC    15,24(0,@F)                                              01370000
         DC    C'IFDOLT37 14 SEP 73'                             0002  01380000
         ST    @E,12(0,@D)                                        0002  01390000
         STM   @0,@C,20(@D)                                       0002  01400000
         BALR  @B,0                                               0002  01410000
@PSTART  DS    0H                                                 0002  01420000
         USING @PSTART+00000,@B                                   0002  01430000
         ST    @D,@SAV001+4                                       0002  01440000
         LA    @F,@SAV001                                         0002  01450000
         ST    @F,8(0,@D)                                         0002  01460000
         LR    @D,@F                                              0002  01470000
*         GEN   (USING CHASCT,2);                                       01480000
         USING CHASCT,2                                                 01490000
         DS    0H                                                       01500000
*         GENERATE DATA;                                                01510000
*         RESTRICT(2,6);                 /* REGISTERS USED BY PROGRAM * 01520000
*         DCL R0 REG(0) PTR;             /* CONTAINS ADDRESS OF ROPT  * 01530000
*         DCL R1 REG(1) PTR;             /* ADDRESS OF PARAMETER LIST * 01540000
*         DCL R4 REG(4) PTR;             /* REPLY COUNT               * 01550000
*         DCL R6 REG(6) PTR;             /* ADDRESS OF PARAMETER LIST * 01560000
*         DCL R14 REG(14) PTR;           /* RETURN REGISTER           * 01570000
*         DCL R15 REG(15) PTR;           /* RETURN CODE REGISTER      * 01580000
*         DCL ECBCE37 FIXED INIT(0);     /* ECB USED BY WTOR AND WAIT * 01590000
*   GEN(EJECT);                                                         01600000
         EJECT                                                          01610000
         DS    0H                                                       01620000
*         /************************************************************ 01630000
*         /* THE FOLLOWING LABELS DEFINE IFDOLT37 REFERENCES TO THE   * 01640000
*         /* CECOM PARAMETER LIST. THEY ARE FOLLOWED BY THE MAP       * 01650000
*         /* SUPPLIED BY DIAGNOSTIC ENGINEERING WITH EQUATED LABELS.  * 01660000
*         /************************************************************ 01670000
*         DCL TRNMGR CHAR(1) GENERATED;  /* INDICATORS                * 01680000
*         DCL LEVEL CHAR(1) GENERATED;   /* MACRO LEVEL               * 01690000
*         DCL MACID CHAR(2) GENERATED;   /* MACRO ID                  * 01700000
*         DCL OUTMSGAD PTR GENERATED;    /* ADDRESS OF OUTPUT MESSAGE * 01710000
*         DCL OUTCNT FIXED GENERATED;    /* LENGTH OF OUTPUT MESSAGE  * 01720000
*         DCL INMSGAD PTR GENERATED;     /* ADDRESS OF INPUT MESSAGE  * 01730000
*         DCL INCNT FIXED GENERATED;     /* IN MESSAGE COUNT          * 01740000
*         DCL FLAGS CHAR(1) GENERATED;   /* FLAG AREA-OUTSD,FREE,POLL * 01750000
*         DECLARE                                                       01760000
*             1 * BASED(ADDR(INCNT)),    /* IN MESSAGE COUNT AREA     * 01770000
*               2 * CHAR(3),             /* NOT USED                  * 01780000
*               2 INCNT3 CHAR(1);        /* IN MESSAGE LENGTH         * 01790000
*   GEN(  USING CECOMMAP,6);             /* PARAMETER LIST POINTER    * 01800000
           USING CECOMMAP,6                                             01810000
         DS    0H                                                       01820000
*   GENERATE DATA;                                                      01830000
*         DCL IFDMSG37 EXT ENTRY;         /* IFDOLT37 MESSAGE MODULE  * 01840000
*         DCL   MSGMOD37 PTR INIT(ADDR(IFDMSG37)); /* ADDRESS OF      * 01850000
*                                                  /* MESSAGE MODULE  * 01860000
*   GEN(EJECT);                                                         01870000
         EJECT                                                          01880000
         DS    0H                                                       01890000
*         /************************************************************ 01900000
*         /* THE FOLLOWING MAP DESCRIBES THE POINTERS TO THE LIST     * 01910000
*         /* FORM OF WTO'S AND WTOR'S IN MESSAGE MODULE IFDMSG37.     * 01920000
*         /************************************************************ 01930000
*         DECLARE                                                       01940000
*             1 * BASED(MSGMOD37),       /* MESSAGE MODULE ADDRESS    * 01950000
*               2 WTOPTR PTR,            /* ADDRESS OF WTO IFD100I    * 01960000
*               2 WTORPTR PTR;           /*ADDRESS WTOR IFD101D X02008* 01970000
*         DECLARE                                                       01980000
*             1 * BASED(WTOPTR),         /* LIST FORM OF WTO          * 01990000
*               2 WTOLEN PTR(15),        /* MESSAGE LENGTH            * 02000000
*               2 * CHAR(10),            /* MESSAGE ID                * 02010000
*               2 MSAGE CHAR(63);        /* MESSAGE AREA              * 02020000
*         DECLARE                                                       02030000
*             1 * BASED(WTORPTR),        /* LIST FORM OF WTOR         * 02040000
*               2 REPLYCNT CHAR(1),      /* WTOR REPLY COUNT          * 02050000
*               2 INBUFRAD PTR(24),      /* REPLY BUFFER ADDRESS      * 02060000
*               2 ECBCE37A PTR,          /* REPLY ECB ADDRESS         * 02070000
*               2 WTORLEN PTR(15),       /* MESSAGE LENGTH            * 02080000
*               2 * CHAR(10),            /* MESSAGE ID                * 02090000
*               2 WRMSAGE CHAR(63);      /* MESSAGE AREA              * 02100000
*   GEN(EJECT);                                                         02110000
         EJECT                                                          02120000
         DS    0H                                                       02130000
*         /************************************************************ 02140000
*         /* THE FOLLOWING MAP DESCRIBES THE AREA'S GENERATED BY      * 02150000
*         /* OLTEP'S COMMON AREA DSECT MAPPING.                       * 02160000
*         /************************************************************ 02170000
*         DCL INBUFR CHAR(72) GENERATED;      /* INPUT BUFFER         * 02180000
*         DECLARE                                                       02190000
*             1 * BASED(INMSGAD),                                       02200000
*               2 INRPCNT CHAR(1),       /* REPLY LENGTH RECEIVED     * 02210000
*               2 UTINMSG CHAR(61);      /* OLT REPLY BUFFER AREA     * 02220000
*         DCL UTOUTMSG CHAR(61) BASED(OUTMSGAD); /* OUT MESSAGE AREA  * 02230000
*         DCL   RESCNT37 CHAR(1);        /* ACTUAL REPLY LENGTH       * 02240000
*         DCL   OUTMSCNT FIXED;          /* ACTUAL MESSAGE LENGTH     * 02250000
*   GEN(EJECT);                                                         02260000
         EJECT                                                          02270000
         DS    0H                                                       02280000
*  /* THE FOLLOWING BITS ARE OLTEP'S ROUTING & DESCRIPTOR CODES       * 02290000
*         DCL ROUTCD BIT(32) INIT('00000010000000000000000001000000'B); 02300000
*   GEN(EJECT);                                                         02310000
         EJECT                                                          02320000
         DS    0H                                                       02330000
*         /************************************************************ 02340000
*         /* THE FOLLOWING CODE WILL TAKE CARE OF EVERYTHING.         * 02350000
*         /************************************************************ 02360000
*         R6 = R1;                       /* POINT REG 6 TO PARM LIST  * 02370000
         LR    @6,@1                                              0040  02380000
*         IF LEVEL ¬= '02'X THEN         /* NOT A LEVEL 2 MACRO       * 02390000
         CLI   LEVEL,X'02'                                        0041  02400000
         BC    08,@9FF                                            0041  02410000
*           DO;                                                         02420000
*           R15 = '04'X;                 /* SET RETURN CODE HEX 4     * 02430000
         LA    @F,X'04'                                           0043  02440000
*           GO TO FINISH;                /* BRANCH TO EXIT ROUTINE    * 02450000
         BC    15,FINISH                                          0044  02460000
*           END;                         /* END-NOT LEVEL 2 MACRO RTN * 02470000
*       IF OUTMSGAD = 0 THEN             /* NON-MESSAGE REQUEST       * 02480000
@9FF     SR    @F,@F                                              0046  02490000
         C     @F,OUTMSGAD                                        0046  02500000
*           GO TO RTRN8;                 /* ERROR RETURN POINT. X02008* 02510000
         BC    08,RTRN8                                           0047  02520000
*         IF OUTCNT < '01'X THEN        /* IF COUNT IS ZERO           * 02530000
         LA    @F,X'01'                                           0048  02540000
         C     @F,OUTCNT                                          0048  02550000
         BC    12,@9FE                                            0048  02560000
*           DO;                         /* DO THE FOLLOWING:          * 02570000
* RTRN8:                                 /* LABEL               X02008* 02580000
*           R15 = '08'X;                /* SET ERROR RETURN CODE 8    * 02590000
RTRN8    LA    @F,X'08'                                           0050  02600000
*           GO TO FINISH;               /* BRANCH TO EXIT ROUTINE     * 02610000
         BC    15,FINISH                                          0051  02620000
*           END;                        /* END OF OUT COUNT CHECK     * 02630000
*         IF OUTCNT > 61 THEN            /* IF OUT MESSAGE LENGTH IS  * 02640000
@9FE     LA    @F,61                                              0053  02650000
         C     @F,OUTCNT                                          0053  02660000
         BC    10,@9FD                                            0053  02670000
*           OUTMSCNT = 61;               /* GREATER THAN 61-SET TO 61 * 02680000
         ST    @F,OUTMSCNT                                        0054  02690000
         BC    15,@9FC                                            0055  02700000
*         ELSE                           /* IF NOT GREATER            * 02710000
*           OUTMSCNT = OUTCNT;           /* SET ACTUAL LENGTH         * 02720000
@9FD     MVC   OUTMSCNT(4),OUTCNT                                 0055  02730000
*         IF INMSGAD = 0 THEN            /* IS WTOR REQUESTED         * 02740000
@9FC     SR    @F,@F                                              0056  02750000
         C     @F,INMSGAD                                         0056  02760000
*           GO TO SETWTO;                /* NO-BRANCH TO WTO ROUTINE  * 02770000
         BC    08,SETWTO                                          0057  02780000
*         IF INCNT < '01'X THEN          /* IF INCOUNT IS ZERO   M1005* 02790000
         LA    @F,X'01'                                           0058  02800000
         C     @F,INCNT                                           0058  02810000
         BC    12,@9FB                                            0058  02820000
*           DO;                          /* DO THE FOLLOWING:         * 02830000
*           R15 = '08'X;                 /* SET ERROR RETURN CODE 8   * 02840000
         LA    @F,X'08'                                           0060  02850000
*           GO TO FINISH;                /* BRANCH TO EXIT ROUTINE    * 02860000
         BC    15,FINISH                                          0061  02870000
*           END;                         /* END OF IN COUNT CHECK     * 02880000
*         IF INCNT> 61 THEN              /* IF IN MSG LENGTH IS  M1005* 02890000
@9FB     LA    @F,61                                              0063  02900000
         C     @F,INCNT                                           0063  02910000
         BC    10,@9FA                                            0063  02920000
*           RESCNT37 = '3D'X;            /* GREATER THAN 61-SET TO 61 * 02930000
         MVI   RESCNT37,X'3D'                                     0064  02940000
         BC    15,@9F9                                            0065  02950000
*         ELSE                           /* IF NOT GREATER            * 02960000
*           RESCNT37 = INCNT3;           /* SET LENGTH           M1005* 02970000
@9FA     MVC   RESCNT37(1),A00000+3                               0065  02980000
*         GO TO SETWTOR;                 /* GO TO WTOR ROUTINE  X02008* 02990000
         BC    15,SETWTOR                                         0066  03000000
*   GEN(EJECT);                                                         03010000
         EJECT                                                          03020000
         DS    0H                                                       03030000
*         /************************************************************ 03040000
*         /* THE FOLLOWING CODE WILL HANDLE WTO REQUESTS.             * 03050000
*         /************************************************************ 03060000
* SETWTO:                                                               03070000
*         WTOLEN = OUTMSCNT+12;          /* SET OUT MESSAGE LENGTH    * 03080000
SETWTO   LA    @F,12                                              0068  03090000
         A     @F,OUTMSCNT                                        0068  03100000
         L     @3,MSGMOD37                                        0068  03110000
         L     @3,0(0,@3)          A00002                         0068  03120000
         STH   @F,0(0,@3)                                         0068  03130000
*         MSAGE(OUTMSCNT+1:OUTMSCNT+5)=ROUTCD; /* SET ROUTING & DESC  * 03140000
         LA    @E,ROUTCD                                          0069  03150000
         LA    @7,5                                               0069  03160000
         A     @7,OUTMSCNT                                        0069  03170000
         LA    @C,1                                               0069  03180000
         A     @C,OUTMSCNT                                        0069  03190000
         SR    @7,@C                                              0069  03200000
         LA    @A,11(@C,@3)                                       0069  03210000
         EX    @7,@MVC                                            0069  03220000
*         MSAGE(1:OUTMSCNT) = UTOUTMSG(1:OUTMSCNT); /* SETUP MESSAGE  * 03230000
         L     @7,OUTMSGAD                                        0070  03240000
         LR    @E,@7                                              0070  03250000
         L     @8,OUTMSCNT                                        0070  03260000
         BCTR  @8,0                                               0070  03270000
         LA    @A,12(0,@3)                                        0070  03280000
         EX    @8,@MVC                                            0070  03290000
*         R1 = WTOPTR;                   /* SET POINTER TO WTO        * 03300000
         L     @8,MSGMOD37                                        0071  03310000
         L     @1,0(0,@8)                                         0071  03320000
*   GEN(  PWTO  REG=(1));                /* INVOKE PARALLEL PRINT RTN * 03330000
           PWTO  REG=(1)                                                03340000
         DS    0H                                                       03350000
*         R15 = '00'X;                   /* SET NORMAL RETURN CODE    * 03360000
         LA    @F,X'00'                                           0073  03370000
*         GO TO FINISH;                  /* BRANCH TO EXIT ROUTINE    * 03380000
         BC    15,FINISH                                          0074  03390000
*         /*                *** END OF WTO ROUTINE ***                * 03400000
*   GEN(EJECT);                                                         03410000
         EJECT                                                          03420000
         DS    0H                                                       03430000
*         /************************************************************ 03440000
*         /* THE FOLLOWING CODE WILL HANDLE WTOR REQUESTS.            * 03450000
*         /************************************************************ 03460000
* SETWTOR:                                                              03470000
*         REPLYCNT = RESCNT37;           /* SET ACTUAL REPLY LENGTH   * 03480000
SETWTOR  L     @3,MSGMOD37                                        0076  03490000
         L     @3,4(0,@3)          A00002                         0076  03500000
         MVC   0(1,@3),RESCNT37                                   0076  03510000
*         INBUFRAD = ADDR(INBUFR);       /* SET REPLY BUFFER ADDRESS  * 03520000
         LA    @F,INBUFR                                          0077  03530000
         ST    @F,@TEMP4                                          0077  03540000
         MVC   1(3,@3),@TEMP4+1                                   0077  03550000
*         ECBCE37A = ADDR(ECBCE37);      /* SET REPLY ECB ADDRESS     * 03560000
         LA    @F,ECBCE37                                         0078  03570000
         ST    @F,4(0,@3)                                         0078  03580000
*         WTORLEN = OUTMSCNT+12;         /* SET OUT MESSAGE LENGTH    * 03590000
         LA    @F,12                                              0079  03600000
         A     @F,OUTMSCNT                                        0079  03610000
         STH   @F,8(0,@3)                                         0079  03620000
*       WRMSAGE(OUTMSCNT+1:OUTMSCNT+5)=ROUTCD; /* SET ROUTING & DESC  * 03630000
         LA    @E,ROUTCD                                          0080  03640000
         LA    @7,5                                               0080  03650000
         A     @7,OUTMSCNT                                        0080  03660000
         LA    @C,1                                               0080  03670000
         A     @C,OUTMSCNT                                        0080  03680000
         SR    @7,@C                                              0080  03690000
         LA    @A,19(@C,@3)                                       0080  03700000
         EX    @7,@MVC                                            0080  03710000
*         WRMSAGE(1:OUTMSCNT) = UTOUTMSG(1:OUTMSCNT);/* SETUP MESSAGE * 03720000
         L     @7,OUTMSGAD                                        0081  03730000
         LR    @E,@7                                              0081  03740000
         L     @8,OUTMSCNT                                        0081  03750000
         BCTR  @8,0                                               0081  03760000
         LA    @A,20(0,@3)                                        0081  03770000
         EX    @8,@MVC                                            0081  03780000
*         INBUFR = INBUFR && INBUFR;     /* ZERO OUT REPLY BUFFER.    * 03790000
         XC    INBUFR(72),INBUFR                                  0082  03800000
*         ECBCE37 = 0;                   /* ZERO OUT REPLY ECB        * 03810000
         SR    @F,@F                                              0083  03820000
         ST    @F,ECBCE37                                         0083  03830000
*         R1 = WTORPTR;                  /* SET WTOR POINTER          * 03840000
         L     @8,MSGMOD37                                        0084  03850000
         L     @1,4(0,@8)                                         0084  03860000
*   GENERATE;                                                           03870000
         PWTOR REG=(1)             INVOKE PARALELL PRINT ROUNTINE       03880000
         DS    0H                                                       03890000
*         RESTRICT(R4);                                                 03900000
*         DO R4 = 1 BY 1 TO RESCNT37;    /* SCAN REPLY BUFFER FOR CNT * 03910000
         LA    @4,1                                               0087  03920000
         BC    15,@DO9F7                                          0087  03930000
*            IF INBUFR(R4) = '00'X THEN  /* SHORT RESPONSE WILL BE    * 03940000
@DO9F8   LR    @3,@4                                              0088  03950000
         LA    @A,INBUFR-1(@3)                                    0088  03960000
         CLI   0(@A),X'00'                                        0088  03970000
*             GO TO SHRTRPLY;            /* PADDED WITH HEX ZERO'S    * 03980000
         BC    08,SHRTRPLY                                        0089  03990000
*         END;                                                          04000000
*         INRPCNT = RESCNT37;            /* SET CNT IN 1ST BYTE OF    * 04010000
         AH    @4,@D1                                             0090  04020000
@DO9F7   SR    @0,@0                                              0090  04030000
         IC    @0,RESCNT37                                        0090  04040000
         CR    @4,@0                                              0090  04050000
         BC    12,@DO9F8                                          0090  04060000
         L     @3,INMSGAD                                         0091  04070000
         MVC   0(1,@3),RESCNT37                                   0091  04080000
*         GO TO SKIPSHRT;                /* CALLER'S REPLY BUFFER     * 04090000
         BC    15,SKIPSHRT                                        0092  04100000
* SHRTRPLY:                                                             04110000
*         INRPCNT = R4-1;                /* SET CNT IN OLT BUFFER     * 04120000
SHRTRPLY LR    @F,@4                                              0093  04130000
         BCTR  @F,0                                               0093  04140000
         L     @3,INMSGAD                                         0093  04150000
         STC   @F,0(0,@3)                                         0093  04160000
* SKIPSHRT:                                                             04170000
*         RELEASE(4);                                                   04180000
*         UTINMSG(1:RESCNT37) = INBUFR(1:RESCNT37); /* MOVE REPLY     * 04190000
SKIPSHRT LA    @E,INBUFR                                          0095  04200000
         SR    @3,@3                                              0095  04210000
         IC    @3,RESCNT37                                        0095  04220000
         BCTR  @3,0                                               0095  04230000
         L     @7,INMSGAD                                         0095  04240000
         LA    @A,1(0,@7)                                         0095  04250000
         EX    @3,@MVC                                            0095  04260000
*                                                   /* TO OUT AREA    * 04270000
*         R15 = '00'X;                   /* SET NORMAL RETURN CODE    * 04280000
         LA    @F,X'00'                                           0096  04290000
* FINISH:                                /* EXIT ROUTINE              * 04300000
*         RETURN;                        /* RETURN TO CALLER          * 04310000
*         END   IFDOLT37;                /* END OF IFDOLT37           * 04320000
@EL01    L     @D,4(0,@D)                                         0098  04330000
         L     @E,12(0,@D)                                        0098  04340000
         LM    @0,@C,20(@D)                                       0098  04350000
         BCR   15,@E                                              0098  04360000
@DATA1   EQU   *                                                        04370000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           04380000
@1       EQU   01                                                       04390000
@2       EQU   02                                                       04400000
@3       EQU   03                                                       04410000
@4       EQU   04                                                       04420000
@5       EQU   05                                                       04430000
@6       EQU   06                                                       04440000
@7       EQU   07                                                       04450000
@8       EQU   08                                                       04460000
@9       EQU   09                                                       04470000
@A       EQU   10                                                       04480000
@B       EQU   11                                                       04490000
@C       EQU   12                                                       04500000
@D       EQU   13                                                       04510000
@E       EQU   14                                                       04520000
@F       EQU   15                                                       04530000
@D1      DC    H'1'                                                     04540000
@MVC     MVC   0(1,@A),0(@E)                                            04550000
         DS    0F                                                       04560000
         DS    0D                                                       04570000
@DATA    EQU   *                                                        04580000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   04590000
X        EQU   00000000            FULLWORD INTEGER                     04600000
R0       EQU   00000000            FULLWORD POINTER REGISTER            04610000
R1       EQU   00000001            FULLWORD POINTER REGISTER            04620000
R4       EQU   00000004            FULLWORD POINTER REGISTER            04630000
R6       EQU   00000006            FULLWORD POINTER REGISTER            04640000
R14      EQU   00000014            FULLWORD POINTER REGISTER            04650000
R15      EQU   00000015            FULLWORD POINTER REGISTER            04660000
         ORG   @DATA+00000072                                           04670000
ECBCE37  EQU   *                   FULLWORD INTEGER                     04680000
         DC    FL4'0'                                                   04690000
MSGMOD37 EQU   *                   FULLWORD POINTER                     04700000
         DC    VL4(IFDMSG37)                                            04710000
A00002   EQU   00000000            8 BYTE(S) ON WORD                    04720000
WTOPTR   EQU   A00002+00000000     FULLWORD POINTER                     04730000
WTORPTR  EQU   A00002+00000004     FULLWORD POINTER                     04740000
A00003   EQU   00000000            75 BYTE(S) ON WORD                   04750000
WTOLEN   EQU   A00003+00000000     HALFWORD POINTER                     04760000
A00004   EQU   A00003+00000002     10 BYTE(S)                           04770000
MSAGE    EQU   A00003+00000012     63 BYTE(S)                           04780000
A00005   EQU   00000000            83 BYTE(S) ON WORD                   04790000
REPLYCNT EQU   A00005+00000000     1 BYTE(S)                            04800000
INBUFRAD EQU   A00005+00000001     3  BYTE  POINTER ON WORD+1           04810000
ECBCE37A EQU   A00005+00000004     FULLWORD POINTER                     04820000
WTORLEN  EQU   A00005+00000008     HALFWORD POINTER                     04830000
A00006   EQU   A00005+00000010     10 BYTE(S)                           04840000
WRMSAGE  EQU   A00005+00000020     63 BYTE(S)                           04850000
A00007   EQU   00000000            62 BYTE(S) ON WORD                   04860000
INRPCNT  EQU   A00007+00000000     1 BYTE(S)                            04870000
UTINMSG  EQU   A00007+00000001     61 BYTE(S)                           04880000
UTOUTMSG EQU   00000000            61 BYTE(S)                           04890000
RESCNT37 EQU   @DATA+00000080      1 BYTE(S)                            04900000
OUTMSCNT EQU   @DATA+00000084      FULLWORD INTEGER                     04910000
         ORG   @DATA+00000088                                           04920000
ROUTCD   EQU   *                   32 BIT(S) ON BYTE                    04930000
         DC    B'00000010000000000000000001000000'                      04940000
         ORG   @DATA                                                    04950000
         DS    00000092C                                                04960000
@TEMPS   DS    0F                                                       04970000
@TEMP4   DC    F'0'                                                     04980000
DSECT37  IFDCOM                                                         04990000
         GLOBAL                                                         05000000
         CECOM MAP=YES                                                  05010000
TRNMGR   EQU   $CECTRMG            LABEL FOR TRANSIENT MANAGER FLAGS    05020000
LEVEL    EQU   $CECLEVL            LABEL FOR MACRO LEVEL                05030000
MACID    EQU   $CECIDNT            LABEL FOR MACRO ID                   05040000
OUTMSGAD EQU   $CEOUTAD            LABEL FOR OUT MESSAGE ADDRESS        05050000
OUTCNT   EQU   $CEOUTCT            LABEL FOR OUT MESSAGE COUNT          05060000
INMSGAD  EQU   $CEINADR            LABEL FOR IN MESSAGE ADDRESS         05070000
INCNT    EQU   $CEINCT             LABEL FOR IN MESSAGE COUNT           05080000
FLAGS    EQU   $CECFLAG            LABEL FOR FLAGS                      05090000
A00000   EQU   INCNT+00000000      4 BYTE(S) ON WORD                    05100000
A00001   EQU   A00000+00000000     3 BYTE(S)                            05110000
INCNT3   EQU   A00000+00000003     1 BYTE(S)                            05120000
@DATEND  EQU   *                                                        05130000
@9F9     EQU   SETWTOR                                                  05140000
FINISH   EQU   @EL01                                                    05150000
         END   IFDOLT37                                                 05160000
./  ADD  SSI=32570917,NAME=IFDOLT38
         TITLE 'IFDOLT38 TEST ROUTINE DECODE'                           00010000
         TITLE 'IFDOLT38 TEST ROUTINE DECODE'                           00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT38 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT38 14 SEP 73'                             0002  00070000
         STM   @E,@C,12(@D)                                       0002  00080000
         BALR  @B,0                                               0002  00090000
@PSTART  DS    0H                                                 0002  00100000
         USING @PSTART+00000,@B                                   0002  00110000
         ST    @D,@SAV001+4                                       0002  00120000
         LA    @F,@SAV001                                         0002  00130000
         ST    @F,8(0,@D)                                         0002  00140000
         LR    @D,@F                                              0002  00150000
*         GEN(USING CHASCT,2);                                          00160000
         USING CHASCT,2                                                 00170000
         DS    0H                                                       00180000
*         GENERATE DATA;                                                00190000
*         /************************************************************ 00200000
*         /*                        REGISTERS                         * 00210000
*         /************************************************************ 00220000
*         DCL R1 REG(1) PTR(31);         /* REGISTER 1.               * 00230000
*         DCL R2 REG(2) PTR(31);         /* REGISTER 2.               * 00240000
*         DCL I REG(3) PTR(24);          /* REGISTER 3.               * 00250000
*         DCL RETCODE REG(3) PTR(24);    /* REGISTER 3.               * 00260000
*         DCL R5 REG(5) PTR(31);         /* REGISTER 5.               * 00270000
*         DCL R6 REG(6) PTR(31);         /* REGISTER 6.               * 00280000
*         DCL R7 REG(7) PTR(31);         /* REGISTER 7.               * 00290000
*         DCL FSTRTN REG(8) PTR(24);     /* REGISTER 8.               * 00300000
*         DCL R8 REG(8) PTR(31);         /* REGISTER 8.               * 00310000
*         DCL LSTRTN REG(9) PTR(24);     /* REGISTER 9.               * 00320000
*         DCL R13 REG(13) PTR(31);       /* REGISTER 13.              * 00330000
*         DCL R14 REG(14) PTR(31);       /* REGISTER 14.              * 00340000
*         DCL RC REG(15) PTR(24);        /* REGISTER 15.              * 00350000
*         DCL R15 REG(15) PTR(31);       /* REGISTER 15.              * 00360000
*         /************************************************************ 00370000
*         /*                       SAVE AREAS                         * 00380000
*         /************************************************************ 00390000
*         DCL 1 MYSAVE BASED(R13),                                      00400000
*               3 * CHAR(4),                                            00410000
*               3 YOURR13 PTR(31);                                      00420000
*         DCL 1 YOURSAVE BASED(YOURR13),                                00430000
*               3 * CHAR(12),                                           00440000
*               3 YOURR14 PTR(31);                                      00450000
*         /************************************************************ 00460000
*         /*                  SECTION CONTROL TABLE                   * 00470000
*         /************************************************************ 00480000
*         DCL CHASCT CHAR(88) GENERATED;                                00490000
*         DCL 1 SCT BASED(ADDR(CHASCT)), /*--------SCT FORMAT---------* 00500000
*               3 * CHAR(4),             /* NOT LOOKED AT.            * 00510000
*               3 RTNFLDXX CHAR(2),      /* NORMAL ROUTINE SELECTION  * 00520000
*                                        /* FIELD.                    * 00530000
*               3 * CHAR(27),            /* NOT LOOKED AT.            * 00540000
*               3 EXPGMFLG CHAR(1),      /* EXECUTIVE PROGRAM FLAGS.  * 00550000
*                 5 * BIT(2),            /* NOT LOOKED AT.            * 00560000
*                 5 RTNSLCTN BIT(1),     /* ROUTINES SELECTED FLAG.   * 00570000
*               3 * CHAR(6),             /* NOT LOOKED AT.            * 00580000
*               3 EXPANDED CHAR(30);     /* EXPANDED ROUTINE SELECTION* 00590000
*                                        /* FIELD.                    * 00600000
*         /************************************************************ 00610000
*         /*                        MESSAGES                          * 00620000
*         /************************************************************ 00630000
*         DCL IFDMSG38 LABEL NONLOCAL EXTERNAL;                         00640000
*         DCL 1 MSGPTR BASED(R1),        /* MESSAGE POINTERS.         * 00650000
*               3 MSGPTR12 PTR(31),      /* POINTER TO MESSAGE IFD112I* 00660000
*               3 MSGPTR61 PTR(31),      /* POINTER TO MESSAGE IFD161I* 00670000
*               3 MSGPTR55 PTR(31);      /* POINTER TO MESSAGE IFD155I* 00680000
*         DCL 1 MSG112 CHAR(41) BASED(R1),/* MESSAGE IFD112I FORMAT.  * 00690000
*               3 * CHAR(4),             /* LENGTH AND FLAGS.         * 00700000
*               3 MSG112I CHAR(37);      /* MESSAGE TEXT.             * 00710000
*         DCL 1 DOUBLEWD BDY(DWORD) CHAR(8),                            00720000
*               3 SAVR14 PTR(31);                                       00730000
*         DCL 1 FRSTRTN CHAR(4) BDY(WORD),                              00740000
*               2 LASTRTN CHAR(4),                                      00750000
*                 3 * CHAR(1),                                          00760000
*                 3 FRSTRTN1 CHAR(3),                                   00770000
*                   4 LASTRTN1 CHAR(3),                                 00780000
*                     5 * CHAR(1),                                      00790000
*                     5 FRSTRTN2 CHAR(2),                               00800000
*                       6 LASTRTN2 CHAR(2),                             00810000
*                         7 * CHAR(1),                                  00820000
*                         7 FRSTRTN3 CHAR(1),                           00830000
*                           8 LASTRTN3 CHAR(1);                         00840000
*         DCL J FIXED(15);                                              00850000
*         DCL NUMBERS CHAR(10) INITIAL('0123456789');                   00860000
*         DCL NUMBER CHAR(1) BASED(R6);                                 00870000
*         DCL 1 SWITCHES CHAR(1) INITIAL('00'X),                        00880000
*               3 SECTIONS BIT(3),                                      00890000
*                 5 SECT1 BIT(1),   /* TEST SECTION OF LENGTH 1 */      00900000
*                 5 SECT2 BIT(1),   /* TEST SECTION OF LENGTH 2 */      00910000
*                 5 SECT3 BIT(1),   /* TEST SECTION OF LENGTH 3 */      00920000
*               3 EXPFLG BIT(1),                                        00930000
*               3 DUBNUM BIT(1),                                        00940000
*               3 TRINUM BIT(1);                                        00950000
*         DCL MSKTABLE CHAR(8) INITIAL('0180402010080402'X);            00960000
*         DCL MASK CHAR(1) BASED(R6);                                   00970000
*         DCL ERRCODE CHAR(2);                                          00980000
*         DCL CECTST78 INTERNAL ENTRY;                                  00990000
*         DCL CECTST80 INTERNAL ENTRY;                                  01000000
*         DCL INPUTBUF CHAR(4) BASED(R5);                               01010000
*         DCL RTNFIELD CHAR(1) BASED(R7);                               01020000
*         DCL INBUFPTR PTR(31) GENERATED;                               01030000
*         DCL REDEFINE PTR(31) GENERATED;                               01040000
*         DCL ADSVAREA PTR(31) GENERATED;                               01050000
*         DCL HRTSEL FIXED(15) GENERATED;                               01060000
*         /************************************************************ 01070000
*         /*                        SWITCHES                          * 01080000
*         /************************************************************ 01090000
*         DCL CESWT CHAR(1) GENERATED;                                  01100000
*         DCL 1 OLTEPSW CHAR(1) BASED(ADDR(CESWT)),                     01110000
*               3 LEGALTST BIT(1),                                      01120000
*               3 * BIT(4),                                             01130000
*               3 REINT BIT(1);                                         01140000
*         DCL CESWT1 CHAR(1) GENERATED;                                 01150000
*         DCL 1 OLTEPSW1 CHAR(1) BASED(ADDR(CESWT1)),                   01160000
*               3 RTNFLD BIT(1);                                        01170000
*         DCL CESWTR CHAR(1) GENERATED;  /* REI SWITCHES        S20203* 01180000
*         DCL 1 * CHAR(1) BASED(ADDR(CESWTR)),   /*             S20203* 01190000
*               3 RETAINAC BIT(1),       /* REI ACTIVE          S20203* 01200000
*               3 * BIT(1),              /*                     S20203* 01210000
*               3 REMNOMSG BIT(1),       /* REMOTE NO MSG       S20203* 01220000
*               3 * BIT(5);              /*                     S20203* 01230000
*                                                                       01240000
*         DCL CESWTR2 CHAR(1) GEND;     /* CE SWITCH IN COMAREA YM2273* 01250000
*         DCL 1 * CHAR(1) BASED(ADDR(CESWTR2)),              /* YM2273* 01260000
*           3 * BIT(7),                                      /* YM2273* 01270000
*           3 DPMSGREI BIT(1);          /* DP MSG FLG FOR REI   YM2273* 01280000
*         RESTRICT(2,3,5,6,7,8,9);                                      01290000
*         RESTRICT(1);                                                  01300000
*         R5=INBUFPTR;              /* PTR TO ROUTINE FIELD IN I/O BUF  01310000
         L     @5,INBUFPTR                                        0053  01320000
*         RTNFLD ='0'B;             /* RESET FLAG BEFORE DECODING RTNS  01330000
         NI    OLTEPSW1,B'01111111'                               0054  01340000
* CECTST38:                                                             01350000
*         /************************************************************ 01360000
*         /*                                                          * 01370000
*         /*                DECODE ROUTINES SELECTED                  * 01380000
*         /*                                                          * 01390000
*         /************************************************************ 01400000
*         FRSTRTN=FRSTRTN&&FRSTRTN; /* CLEAR AREA SET ASIDE FOR */      01410000
CECTST38 XC    FRSTRTN(4),FRSTRTN                                 0055  01420000
*         R6=ADDR(NUMBERS);         /* DECODING ROUTINE NUMBER  */      01430000
         LA    @6,NUMBERS                                         0056  01440000
*         DO I=10 TO 1 BY -1;       /* IS THE CHAR IN INBUFR NUMERIC */ 01450000
         LA    @3,10                                              0057  01460000
*           IF INPUTBUF(1)=NUMBER THEN /* YES, DECODE ROUTINE NUMBER  * 01470000
@DO9FF   CLC   0(1,@5),0(@6)                                      0058  01480000
*             GO TO CECTST39;       /* NO, SET ERROR CODE -09- AND   */ 01490000
         BC    08,CECTST39                                        0059  01500000
*           R6=R6+1;                /* PRINT ERROR MESSAGE IFD112I   */ 01510000
         AH    @6,@D1                                             0060  01520000
*         END;                                                          01530000
* CECTST36:                                                             01540000
*         ERRCODE='09';                                                 01550000
         BCT   @3,@DO9FF                                          0061  01560000
CECTST36 MVC   ERRCODE(2),@C2                                     0062  01570000
*         GO TO CECTST03;                                               01580000
         BC    15,CECTST03                                        0063  01590000
* CECTST39:/* IS DOUBLE NUMBER ROUTINE SELECTED */                      01600000
*         DUBNUM='1'B;              /* SET DOUBLE NUMBER INDICATOR */   01610000
CECTST39 OI    SWITCHES,B'00001000'                               0064  01620000
*         R6=ADDR(NUMBERS);         /* IS THE CHAR. IN INBUFR+1 */      01630000
         LA    @6,NUMBERS                                         0065  01640000
*         DO I=10 TO 1 BY -1;       /* NUMERIC. YES, CONTINUE TO*/      01650000
         LA    @3,10                                              0066  01660000
*           IF INPUTBUF(2)=NUMBER THEN /* DECODE. NO, CLEAR DOUBLE*/    01670000
@DO9FB   CLC   1(1,@5),0(@6)                                      0067  01680000
*             GO TO CECTST40;       /* NUMBER INDICATOR AND GO  */      01690000
         BC    08,CECTST40                                        0068  01700000
*           R6=R6+1;                /* TO ROUTINE WHICH SETS THE*/      01710000
         AH    @6,@D1                                             0069  01720000
*         END;                      /* SCT ROUTINE FLAGS        */      01730000
*         DUBNUM='0'B;                                                  01740000
         BCT   @3,@DO9FB                                          0070  01750000
         NI    SWITCHES,B'11110111'                               0071  01760000
*         GO TO CECTST42;                                               01770000
         BC    15,CECTST42                                        0072  01780000
* CECTST40:/* IS TRIPLE NUMBER ROUTINE SELECTED */                      01790000
*         TRINUM='1'B;              /* SET TRIPLE NUMBER INDICATOR */   01800000
CECTST40 OI    SWITCHES,B'00000100'                               0073  01810000
*         R6=ADDR(NUMBERS);         /* IS THE CHAR. IN INBUFR+2 */      01820000
         LA    @6,NUMBERS                                         0074  01830000
*         DO I=10 TO 1 BY -1;       /* NUMERIC. YES, CONTINUE TO*/      01840000
         LA    @3,10                                              0075  01850000
*           IF INPUTBUF(3)=NUMBER THEN /* DECODE. NO, CLEAR TRIPLE */   01860000
@DO9F7   CLC   2(1,@5),0(@6)                                      0076  01870000
*             GO TO CECTST41;       /* NUMBER INDICATOR.        */      01880000
         BC    08,CECTST41                                        0077  01890000
*           R6=R6+1;                                                    01900000
         AH    @6,@D1                                             0078  01910000
*         END;                                                          01920000
*         TRINUM='0'B;                                                  01930000
         BCT   @3,@DO9F7                                          0079  01940000
         NI    SWITCHES,B'11111011'                               0080  01950000
*         GO TO CECTST42;           /* BYPASS CLEARING DOUBLE   */      01960000
         BC    15,CECTST42                                        0081  01970000
*                                   /* NUMBER ROUTINE INDICATOR.*/      01980000
* CECTST41:/* CLEAR DOUBLE NUMBER INDICATOR */                          01990000
*         DUBNUM='0'B;              /* CLEAR DOUBLE NUMBER INDICATOR */ 02000000
CECTST41 NI    SWITCHES,B'11110111'                               0082  02010000
* CECTST42:/* DETERMINE WHICH TYPE OF ROUTINE SELECTED */               02020000
*         RTNFLD='1'B;              /* SET RTNFLD INDICATOR ON TO */    02030000
CECTST42 OI    OLTEPSW1,B'10000000'                               0083  02040000
*                                   /* INDICATE ROUTINES HAVE BEEN*/    02050000
*                                   /* SELECTED                   */    02060000
*         RTNSLCTN='1'B;            /* SET BIT IN EXECUTIVE PROGRAM   * 02070000
         OI    SCT+33,B'00100000'                                 0084  02080000
*                                   /* FLAGS TO 1 TO INDICATE OPERATOR* 02090000
*                                   /* HAS MADE A ROUTINE SELECTION.  * 02100000
*         IF DUBNUM='1'B THEN       /* HAS A DOUBLE NUMBER ROUTINE */   02110000
         TM    SWITCHES,B'00001000'                               0085  02120000
*           GO TO CECTST43;         /* BEEN ENTERED. YES, GO TO    */   02130000
         BC    01,CECTST43                                        0086  02140000
*                                   /* DOUBLE NUMBER ROUTINE       */   02150000
*         IF TRINUM='1'B THEN       /* HAS A TRIPLE NUMBER ROUTINE */   02160000
         TM    SWITCHES,B'00000100'                               0087  02170000
*           GO TO CECTST59;         /* BEEN ENTERED. YES, GO TO    */   02180000
         BC    01,CECTST59                                        0088  02190000
*                                   /* TRIPLE NUMBER ROUTINE       */   02200000
*         GO TO CECTST64;           /* GO TO SINGLE NUMBER ROUTINE */   02210000
         BC    15,CECTST64                                        0089  02220000
* CECTST43:/* ROUTINE TO HANDLE DOUBLE NUMBER ROUTINE SELECTED */       02230000
*         FRSTRTN2=INPUTBUF(1:2);   /* CONVERT DOUBLE NUMBER */         02240000
CECTST43 MVC   FRSTRTN+2(2),0(@5)                                 0090  02250000
*         GEN;                      /* ROUTINE TO BINARY     */         02260000
         PACK  DOUBLEWD(8),FRSTRTN(4)                                   02270000
         CVB   FSTRTN,DOUBLEWD                                          02280000
         DS    0H                                                       02290000
*         R5=R5+2;                  /* INCREMENT INBUFR POINTER */      02300000
         AH    @5,@D2                                             0092  02310000
*         DUBNUM='0'B;              /* RESET DOUBLE NUMBER INDICATOR */ 02320000
         NI    SWITCHES,B'11110111'                               0093  02330000
*         IF FSTRTN>16 THEN         /* IS FIRST ROUTINE > 16. YES, GO * 02340000
         CH    @8,@D3                                             0094  02350000
*           GO TO CECTST50;         /* TO ROUTINE FOR ROUTINES > 16.  * 02360000
         BC    02,CECTST50                                        0095  02370000
*         IF INPUTBUF(1)¬='-' THEN  /* IS CHAR. IN INBUFR+0 A HYPHEN. * 02380000
         CLI   0(@5),C'-'                                         0096  02390000
*           GO TO CECTST46;         /* NO, CONTINUE BY FINDING OUT    * 02400000
         BC    07,CECTST46                                        0097  02410000
*                                   /* WHAT IT IS                     * 02420000
*         R5=R5+1;                  /* INCREMENT INBUFR POINTER */      02430000
         AH    @5,@D1                                             0098  02440000
*         DO J=1 TO 2;              /* ARE THE CHAR. IN INBUFR+0 AND */ 02450000
         LA    @F,1                                               0099  02460000
         STH   @F,J                                               0099  02470000
*         R6=ADDR(NUMBERS);         /* INBUFR+1 NUMERIC. YES, CONTINUE* 02480000
@DO9F3   LA    @6,NUMBERS                                         0100  02490000
*           DO I=10 TO 1 BY -1;     /* TO DECODE. NO, SET ERROR CODE */ 02500000
         LA    @3,10                                              0101  02510000
*           IF INPUTBUF(J)=NUMBER THEN /* -10- AND PRINT ERROR MESSAGE* 02520000
@DO9EF   LH    @4,J                                               0102  02530000
         LA    @A,0(@4,@5)                                        0102  02540000
         BCTR  @A,0                                               0102  02550000
         CLC   0(1,@A),0(@6)                                      0102  02560000
*             GO TO CECTST45;       /* IFD112I                       */ 02570000
         BC    08,CECTST45                                        0103  02580000
*           R6=R6+1;                                                    02590000
         AH    @6,@D1                                             0104  02600000
*           END;                                                        02610000
* CECTST44:                                                             02620000
*         /************************************************************ 02630000
*         /*                                                          * 02640000
*         /*       ERROR, INVALID INCLUSIVE RANGE OF ROUTINES         * 02650000
*         /*                                                          * 02660000
*         /************************************************************ 02670000
*         ERRCODE='10';                                                 02680000
         BCT   @3,@DO9EF                                          0105  02690000
CECTST44 MVC   ERRCODE(2),@C5                                     0106  02700000
*         GO TO CECTST03;                                               02710000
         BC    15,CECTST03                                        0107  02720000
* CECTST45:                                                             02730000
*         END;                                                          02740000
*         R6=ADDR(NUMBERS);         /* IS THE CHAR. IN INBUFR+2    */   02750000
CECTST45 LH    @F,J                                               0108  02760000
         AH    @F,@D1                                             0108  02770000
@DO9F2   STH   @F,J                                               0108  02780000
         CH    @F,@D2                                             0108  02790000
         BC    12,@DO9F3                                          0108  02800000
         LA    @6,NUMBERS                                         0109  02810000
*         DO I=10 TO 1 BY -1;       /* NUMERIC. YES, GO TO ROUTINE */   02820000
         LA    @3,10                                              0110  02830000
*           IF INPUTBUF(3)=NUMBER THEN /* THAT CONVERTS TRIPLE     */   02840000
@DO9EB   CLC   2(1,@5),0(@6)                                      0111  02850000
*             GO TO CECTST75;       /* NUMBER FOR LAST ROUTINE IN  */   02860000
         BC    08,CECTST75                                        0112  02870000
*           R6=R6+1;                /* AN INCLUSIVE SERIES OF      */   02880000
         AH    @6,@D1                                             0113  02890000
*         END;                      /* ROUTINES. NO, GO TO ROUTINE */   02900000
*         GO TO CECTST73;           /* THAT CONVERTS DOUBLE NUMBER */   02910000
         BCT   @3,@DO9EB                                          0114  02920000
         BC    15,CECTST73                                        0115  02930000
*                                   /* FOR LAST ROUTINE IN AN      */   02940000
*                                   /* INCLUSIVE SERIES OF ROUTINES*/   02950000
* CECTST46:/* FIRST ROUTINE EQUALS LAST ROUTINE. */                     02960000
*          /* NORMAL ROUTINE SELECTION FIELD.    */                     02970000
*         LSTRTN=FSTRTN;            /* SET LAST ROUTINE EQUAL TO FIRST* 02980000
CECTST46 LR    @9,@8                                              0116  02990000
*         CALL CECTST80;            /* ROUTINE AND GO TO SUB-ROUTINE  * 03000000
         BAL   @E,CECTST80                                        0117  03010000
*                                   /* THAT SETS ROUTINE FLAGS IN THE * 03020000
*                                   /* NORMAL ROUTINE AREA            * 03030000
*         GO TO CECTST58;           /* CONTINUE TO DECODE. */           03040000
         BC    15,CECTST58                                        0118  03050000
* CECTST50:/* ROUTINE FOR HANDLING ROUTINES IN */                       03060000
*          /* EXPANDED ROUTINE SELECTION FIELD.*/                       03070000
*         IF INPUTBUF(1)¬='-' THEN  /* IS CHAR. IN INBUFR+0 A HYPHEN. * 03080000
CECTST50 CLI   0(@5),C'-'                                         0119  03090000
*           GO TO CECTST53;         /* NO, FIND OUT WHAT IT IS        * 03100000
         BC    07,CECTST53                                        0120  03110000
*         R5=R5+1;                  /* YES, INCREMENT INBUFR POINTER  * 03120000
         AH    @5,@D1                                             0121  03130000
*         DO J=1 TO 2;              /* ARE THE CHAR. IN INBUFR AND */   03140000
         LA    @F,1                                               0122  03150000
         STH   @F,J                                               0122  03160000
*         R6=ADDR(NUMBERS);         /* INBUFR+1 NUMERIC. NO, SET   */   03170000
@DO9E7   LA    @6,NUMBERS                                         0123  03180000
*           DO I=10 TO 1 BY -1;     /* ERROR CODE -10- AND PRINT   */   03190000
         LA    @3,10                                              0124  03200000
*           IF INPUTBUF(J)=NUMBER THEN /* ERROR MESSAGE IFD112I    */   03210000
@DO9E3   LH    @4,J                                               0125  03220000
         LA    @A,0(@4,@5)                                        0125  03230000
         BCTR  @A,0                                               0125  03240000
         CLC   0(1,@A),0(@6)                                      0125  03250000
*             GO TO CECTST51;       /* YES, CONTINUE TO DECODE     */   03260000
         BC    08,CECTST51                                        0126  03270000
*           R6=R6+1;                                                    03280000
         AH    @6,@D1                                             0127  03290000
*           END;                                                        03300000
*         GO TO CECTST44;                                               03310000
         BCT   @3,@DO9E3                                          0128  03320000
         BC    15,CECTST44                                        0129  03330000
* CECTST51:                                                             03340000
*         END;                                                          03350000
*         R6=ADDR(NUMBERS);         /* IS THE CHAR IN INBUFR+2 NUMERIC* 03360000
CECTST51 LH    @F,J                                               0130  03370000
         AH    @F,@D1                                             0130  03380000
@DO9E6   STH   @F,J                                               0130  03390000
         CH    @F,@D2                                             0130  03400000
         BC    12,@DO9E7                                          0130  03410000
         LA    @6,NUMBERS                                         0131  03420000
*         DO I=10 TO 1 BY -1;       /* YES, GO TO ROUTINE THAT        * 03430000
         LA    @3,10                                              0132  03440000
*           IF INPUTBUF(3)=NUMBER THEN /* CONVERTS A TRIPLE NUMBER FOR* 03450000
@DO9DF   CLC   2(1,@5),0(@6)                                      0133  03460000
*             GO TO CECTST62;       /* A LAST ROUTINE IN AN INCLUSIVE * 03470000
         BC    08,CECTST62                                        0134  03480000
*           R6=R6+1;                /* RANGE. NO,                     * 03490000
         AH    @6,@D1                                             0135  03500000
*         END;                      /*    CONVERT A DOUBLE NUMBER FOR * 03510000
*                                   /* A LAST ROUTINE IN AN INCLUSIVE * 03520000
*                                   /* RANGE                          * 03530000
*         LASTRTN2=INPUTBUF(1:2);                                       03540000
         BCT   @3,@DO9DF                                          0136  03550000
         MVC   FRSTRTN+2(2),0(@5)                                 0137  03560000
*         GEN;                                                          03570000
         PACK  DOUBLEWD(8),LASTRTN(4)                                   03580000
         CVB   LSTRTN,DOUBLEWD                                          03590000
         DS    0H                                                       03600000
*         IF LSTRTN<FSTRTN THEN     /* IS INCLUSIVE RANGE VALID. */     03610000
         CR    @9,@8                                              0139  03620000
*           GO TO CECTST44;         /* NO, SET ERROR CODE 10,    */     03630000
         BC    04,CECTST44                                        0140  03640000
*                                   /* PRINT MESSAGE IFD112I AND */     03650000
*                                   /* RETURN TO CALLER.         */     03660000
*                                   /* YES, CONTINUE.            */     03670000
*         R5=R5+2;                  /* INCREMENT INBUFR POINTER */      03680000
         AH    @5,@D2                                             0141  03690000
*         CALL CECTST78;            /* GO TO ROUTINE TO SET ROUTINE */  03700000
         BAL   @E,CECTST78                                        0142  03710000
*         GO TO CECTST58;           /* FLAGS IN EXPANDED AREA OF SCT*/  03720000
         BC    15,CECTST58                                        0143  03730000
*                                   /* AND UPON RETURN CONTINUE TO  */  03740000
*                                   /* DECODE                       */  03750000
* CECTST53:/* FIRST ROUTINE EQUALS LAST ROUTINE, */                     03760000
*          /* EXPANDED ROUTINE SELECTION FIELD.  */                     03770000
*         LSTRTN=FSTRTN;            /* SET LAST ROUTINE EQUAL TO FIRST* 03780000
CECTST53 LR    @9,@8                                              0144  03790000
*         CALL CECTST78;            /* CALL ROUTINE TO SET ROUTINE */   03800000
         BAL   @E,CECTST78                                        0145  03810000
*                                   /* FLAGS IN EXPANDED AREA OF SCT*/  03820000
* CECTST58:                                                             03830000
*         /************************************************************ 03840000
*         /*                                                          * 03850000
*         /*                   DECODE DELIMITERS                      * 03860000
*         /*                                                          * 03870000
*         /************************************************************ 03880000
*         IF INPUTBUF(1)¬=',' THEN  /* IS CHAR. IN INBUFR+0 A COMMA.  * 03890000
CECTST58 CLI   0(@5),C','                                         0146  03900000
*           GO TO CECTST55;         /* NO, FIND OUT WHAT IT IS    */    03910000
         BC    07,CECTST55                                        0147  03920000
* CECTST54:/* DELIMITER IS LEGAL, CONTINUE TO DECODE */                 03930000
*         R5=R5+1;                  /* YES, INCREMENT INBUFR POINTER */ 03940000
CECTST54 AH    @5,@D1                                             0148  03950000
*         GO TO CECTST38;           /* AND CONTINUE TO DECODE        */ 03960000
         BC    15,CECTST38                                        0149  03970000
* CECTST55:/* IS THE DELIMITER A SLASH */                               03980000
*         IF INPUTBUF(1)='/' THEN   /* IS CHAR. IN INBUFR+0 A SLASH. */ 03990000
CECTST55 CLI   0(@5),C'/'                                         0150  04000000
*           GO TO CECTST99;         /* YES, RETURN TO CALLER. NO, */    04010000
         BC    08,CECTST99                                        0151  04020000
* CECTST56:                                                             04030000
*         /************************************************************ 04040000
*         /*                                                          * 04050000
*         /*                 ERROR, ILLEGAL DELIMITER                 * 04060000
*         /*                                                          * 04070000
*         /************************************************************ 04080000
*         ERRCODE='01';             /* SET ERROR CODE -01- AND    */    04090000
CECTST56 MVC   ERRCODE(2),@C8                                     0152  04100000
*         GO TO CECTST03;           /* PRINT ERROR MESSAGE IFD112I*/    04110000
         BC    15,CECTST03                                        0153  04120000
* CECTST59:/* ROUTINE TO HANDLE TRIPLE NUMBER ROUTINE SELECTED */       04130000
*         FRSTRTN1=INPUTBUF(1:3);   /* PUT TRIPLE NUMBER IN FRSTRTN */  04140000
CECTST59 MVC   FRSTRTN+1(3),0(@5)                                 0154  04150000
*         GEN;                      /* AND CONVERT IT TO BINARY     */  04160000
         PACK  DOUBLEWD(8),FRSTRTN(4)                                   04170000
         CVB   FSTRTN,DOUBLEWD                                          04180000
         DS    0H                                                       04190000
*         TRINUM='0'B;              /* CLEAR TRIPLE NUMBER INDICATOR */ 04200000
         NI    SWITCHES,B'11111011'                               0156  04210000
*         IF FSTRTN>255 THEN        /* IS ROUTINE NUMBER > 255. YES, */ 04220000
         CH    @8,@D4                                             0157  04230000
*           GO TO CECTST36;         /* SET ERROR CODE -09- AND PRINT */ 04240000
         BC    02,CECTST36                                        0158  04250000
*                                   /* ERROR MESSAGE IFD112I         */ 04260000
*         R5=R5+3;                  /* NO, INCREMENT INBUFR POINTER */  04270000
         AH    @5,@D5                                             0159  04280000
*         IF INPUTBUF(1)¬='-' THEN  /* IS CHAR. IN INBUFR+0 A HYPHEN. * 04290000
         CLI   0(@5),C'-'                                         0160  04300000
*           GO TO CECTST53;         /* NO, FIND OUT WHAT IT IS        * 04310000
         BC    07,CECTST53                                        0161  04320000
*         R5=R5+1;                  /* YES, INCREMENT INBUFR POINTER */ 04330000
         AH    @5,@D1                                             0162  04340000
*         DO J=1 TO 3;              /* ARE THE CHAR. IN INBUFR+0,*/     04350000
         LA    @F,1                                               0163  04360000
         STH   @F,J                                               0163  04370000
*         R6=ADDR(NUMBERS);         /* INBUFR+1 AND INBUFR+2     */     04380000
@DO9DB   LA    @6,NUMBERS                                         0164  04390000
*           DO I=10 TO 1 BY -1;     /* NUMERIC. YES, CONTINUE    */     04400000
         LA    @3,10                                              0165  04410000
*           IF INPUTBUF(J)=NUMBER THEN /* NO, SET ERROR CODE -10-*/     04420000
@DO9D7   LH    @4,J                                               0166  04430000
         LA    @A,0(@4,@5)                                        0166  04440000
         BCTR  @A,0                                               0166  04450000
         CLC   0(1,@A),0(@6)                                      0166  04460000
*             GO TO CECTST61;       /* AND PRINT ERROR MESSAGE   */     04470000
         BC    08,CECTST61                                        0167  04480000
*           R6=R6+1;                /* IFD112I                   */     04490000
         AH    @6,@D1                                             0168  04500000
*           END;                                                        04510000
*         GO TO CECTST44;                                               04520000
         BCT   @3,@DO9D7                                          0169  04530000
         BC    15,CECTST44                                        0170  04540000
* CECTST61:                                                             04550000
*         END;                                                          04560000
* CECTST62:/* ROUTINE FOR INCLUSIVE ROUTINES IN */                      04570000
*          /* EXPANDED ROUTINE SELECTION FIELD  */                      04580000
*         LASTRTN1=INPUTBUF(1:3);   /* PUT TRIPLE NUMBER IN LASTRTN*/   04590000
CECTST61 LH    @F,J                                               0171  04600000
         AH    @F,@D1                                             0171  04610000
@DO9DA   STH   @F,J                                               0171  04620000
         CH    @F,@D5                                             0171  04630000
         BC    12,@DO9DB                                          0171  04640000
CECTST62 MVC   FRSTRTN+1(3),0(@5)                                 0172  04650000
*         GEN;                      /* AND CONVERT IT TO BINARY    */   04660000
         PACK  DOUBLEWD(8),LASTRTN(4)                                   04670000
         CVB   LSTRTN,DOUBLEWD                                          04680000
         DS    0H                                                       04690000
*         IF LSTRTN<FSTRTN THEN     /* IS INCLUSIVE RANGE VALID. */     04700000
         CR    @9,@8                                              0174  04710000
*           GO TO CECTST44;         /* NO, SET ERROR CODE 10,    */     04720000
         BC    04,CECTST44                                        0175  04730000
*                                   /* PRINT MESSAGE IFD112I AND */     04740000
*                                   /* RETURN TO CALLER.         */     04750000
*                                   /* YES, CONTINUE.            */     04760000
*         IF LSTRTN>255 THEN        /* IS LAST ROUTINE OUTSIDE LIMITS * 04770000
         CH    @9,@D4                                             0176  04780000
*           GO TO CECTST44;         /* OF ALLOWED ROUTINES. YES, SET  * 04790000
         BC    02,CECTST44                                        0177  04800000
*                                   /* ERROR CODE -10- AND PRINT ERROR* 04810000
*                                   /* MESSAGE IFD112I . NO, INCREMENT* 04820000
*         R5=R5+3;                  /* INBUFR POINTER BY THREE        * 04830000
         AH    @5,@D5                                             0178  04840000
*         CALL CECTST78;            /* SET ROUTINE FLAGS IN EXPANDED */ 04850000
         BAL   @E,CECTST78                                        0179  04860000
*                                   /* AREA                          */ 04870000
*         GO TO CECTST58;           /* CONTINUE TO DECODE. */           04880000
         BC    15,CECTST58                                        0180  04890000
* CECTST64:/* ROUTINE TO HANDLE SINGLE NUMBER ROUTINE SELECTED */       04900000
*         FRSTRTN3=INPUTBUF(1);      /* PUT SINGLE NUMBER IN FRSTRTN  * 04910000
CECTST64 MVC   FRSTRTN+3(1),0(@5)                                 0181  04920000
*         GEN;                      /* AND CONVERT IT TO BINARY.      * 04930000
         PACK  DOUBLEWD(8),LASTRTN(4)                                   04940000
         CVB   FSTRTN,DOUBLEWD                                          04950000
         DS    0H                                                       04960000
*         IF FSTRTN=0 THEN          /* IS ROUTINE 0 SPECIFIED. */       04970000
         LTR   @8,@8                                              0183  04980000
*           GO TO CECTST36;         /* YES, ERROR. */                   04990000
         BC    08,CECTST36                                        0184  05000000
*         R5=R5+1;                  /* INCREMENT INBUFR POINTER       * 05010000
         AH    @5,@D1                                             0185  05020000
*         IF INPUTBUF(1)='-' THEN   /* IS CHAR. IN INBUFR+0 A HYPHEN  * 05030000
         CLI   0(@5),C'-'                                         0186  05040000
*           GO TO CECTST68;         /* YES, DECODE NUMBER THAT FOLLOWS* 05050000
         BC    08,CECTST68                                        0187  05060000
*         LSTRTN=FSTRTN;            /* PUT FIRST ROUTINE IN LSTRTN */   05070000
         LR    @9,@8                                              0188  05080000
*         CALL CECTST80;            /* GO TO ROUTINE THAT SETS FLAGS */ 05090000
         BAL   @E,CECTST80                                        0189  05100000
*                                   /* IN NORMAL ROUTINE AREA        */ 05110000
*         GO TO CECTST58;           /* CONTINUE TO DECODE. */           05120000
         BC    15,CECTST58                                        0190  05130000
* CECTST68:/* ROUTINE TO HANDLE INCLUSIVE ROUTINES SELECTED THAT      * 05140000
*          /* CARRY OVER INTO BOTH THE NORMAL AND EXPANDED ROUTINE    * 05150000
*          /* SELECTION FIELD.                                        * 05160000
*         R5=R5+1;                  /* INCREMENT INBUFR POINTER */      05170000
CECTST68 AH    @5,@D1                                             0191  05180000
*         R6=ADDR(NUMBERS);         /* IS THE CHAR. IN INBUFR NUMERIC * 05190000
         LA    @6,NUMBERS                                         0192  05200000
*         DO I=10 TO 1 BY -1;       /* NO, SET ERROR CODE -10- AND    * 05210000
         LA    @3,10                                              0193  05220000
*         IF INPUTBUF(1)=NUMBER THEN/* PRINT ERROR MESSAGE IFD112I.   * 05230000
@DO9D3   CLC   0(1,@5),0(@6)                                      0194  05240000
*           GO TO CECTST69;         /* YES, CONTINUE TO DECODE        * 05250000
         BC    08,CECTST69                                        0195  05260000
*         R6=R6+1;                                                      05270000
         AH    @6,@D1                                             0196  05280000
*         END;                                                          05290000
*         GO TO CECTST44;                                               05300000
         BCT   @3,@DO9D3                                          0197  05310000
         BC    15,CECTST44                                        0198  05320000
* CECTST69:                                                             05330000
*         R6=ADDR(NUMBERS);         /* IS THE CHAR. IN INBUFR+1 */      05340000
CECTST69 LA    @6,NUMBERS                                         0199  05350000
*         DO I=10 TO 1 BY -1;       /* NUMERIC. YES, CONTINUE TO*/      05360000
         LA    @3,10                                              0200  05370000
*         IF INPUTBUF(2)=NUMBER THEN/*DECODE. NO, PUT INCLUSIVE*/       05380000
@DO9CF   CLC   1(1,@5),0(@6)                                      0201  05390000
*           GO TO CECTST72;         /* ROUTINE NUMBER IN LASTRTN*/      05400000
         BC    08,CECTST72                                        0202  05410000
*         R6=R6+1;                  /* AND CONVERT IT TO BINARY */      05420000
         AH    @6,@D1                                             0203  05430000
*         END;                                                          05440000
*         LASTRTN3=INPUTBUF(1);     /* PUT SINGLE NUMBER IN LASTRTN   * 05450000
         BCT   @3,@DO9CF                                          0204  05460000
         MVC   FRSTRTN+3(1),0(@5)                                 0205  05470000
*         GEN;                      /* AND CONVERT IT TO BINARY.      * 05480000
         PACK  DOUBLEWD(8),LASTRTN(4)                                   05490000
         CVB   LSTRTN,DOUBLEWD                                          05500000
         DS    0H                                                       05510000
*         IF LSTRTN<FSTRTN THEN     /* IS INCLUSIVE RANGE VALID. */     05520000
         CR    @9,@8                                              0207  05530000
*           GO TO CECTST44;         /* NO, SET ERROR CODE 10,    */     05540000
         BC    04,CECTST44                                        0208  05550000
*                                   /* PRINT MESSAGE IFD112I AND */     05560000
*                                   /* RETURN TO CALLER.         */     05570000
*                                   /* YES, CONTINUE.            */     05580000
*         R5=R5+1;                  /* INCREMENT INBUFR POINTER AND GO* 05590000
         AH    @5,@D1                                             0209  05600000
* CECTST70:                                                             05610000
*         CALL CECTST80;            /* TO ROUTINE WHICH FLAGS ROUTINES* 05620000
CECTST70 BAL   @E,CECTST80                                        0210  05630000
*         GO TO CECTST58;           /* SELECTED IN NORMAL AREA, THEN  * 05640000
         BC    15,CECTST58                                        0211  05650000
*                                   /* CONTINUE TO DECODE.            * 05660000
* CECTST72:                                                             05670000
*         R6=ADDR(NUMBERS);         /* IS THE CHAR. IN INBUFR+2 */      05680000
CECTST72 LA    @6,NUMBERS                                         0212  05690000
*         DO I=10 TO 1 BY -1;       /* NUMERIC. YES, HANDLE TRIPLE */   05700000
         LA    @3,10                                              0213  05710000
*         IF INPUTBUF(3)=NUMBER THEN/* NUMBER ROUTINE. NO, CONVERT */   05720000
@DO9CB   CLC   2(1,@5),0(@6)                                      0214  05730000
*           GO TO CECTST75;         /* DOUBLE NUMBER TO BINARY AND */   05740000
         BC    08,CECTST75                                        0215  05750000
*         R6=R6+1;                  /* SET ROUTINE FLAGS IN SCT    */   05760000
         AH    @6,@D1                                             0216  05770000
*         END;                                                          05780000
* CECTST73:/* ROUTINE THAT CONVERTS DOUBLE NUMBER FOR LAST */           05790000
*          /* ROUTINE IN AN INCLUSIVE SERIES OF ROUTINES   */           05800000
*         LASTRTN2=INPUTBUF(1:2);   /* CONVERT DOUBLE NUMBER */         05810000
         BCT   @3,@DO9CB                                          0217  05820000
CECTST73 MVC   FRSTRTN+2(2),0(@5)                                 0218  05830000
*         GEN;                      /* TO BINARY             */         05840000
         PACK  DOUBLEWD(8),LASTRTN(4)                                   05850000
         CVB   LSTRTN,DOUBLEWD                                          05860000
         DS    0H                                                       05870000
*         R5=R5+2;                  /* INCREMENT INBUFR POINTER */      05880000
         AH    @5,@D2                                             0220  05890000
*         IF LSTRTN¬>16 THEN        /* IS LSTRTN > 16. NO, GO TO */     05900000
         CH    @9,@D3                                             0221  05910000
*           GO TO CECTST70;         /* ROUTINE THAT SETS ROUTINE */     05920000
         BC    12,CECTST70                                        0222  05930000
*         LASTRTN=LSTRTN;           /* FLAGS IN NORMAL AREA.     */     05940000
         ST    @9,FRSTRTN                                         0223  05950000
*         LSTRTN=16;                /* YES, SET FLAGS IN BOTH    */     05960000
         LA    @9,16                                              0224  05970000
*         CALL CECTST80;            /* AREAS RESERVED FOR ROUTINE*/     05980000
         BAL   @E,CECTST80                                        0225  05990000
*         FSTRTN=17;                /* FLAGS                     */     06000000
         LA    @8,17                                              0226  06010000
*         LSTRTN=LASTRTN;                                               06020000
         L     @9,FRSTRTN                                         0227  06030000
*         CALL CECTST78;                                                06040000
         BAL   @E,CECTST78                                        0228  06050000
*         GO TO CECTST58;           /* CONTINUE TO DECODE       */      06060000
         BC    15,CECTST58                                        0229  06070000
* CECTST75:                                                             06080000
*         LSTRTN=16;                /* SETS ROUTINE FLAGS IN  */        06090000
CECTST75 LA    @9,16                                              0230  06100000
*         CALL CECTST80;            /* NORMAL AREA            */        06110000
         BAL   @E,CECTST80                                        0231  06120000
* CECTST76:                                                             06130000
*         LASTRTN1=INPUTBUF(1:3);   /* CONVERT TRIPLE NUMBER TO BINARY* 06140000
CECTST76 MVC   FRSTRTN+1(3),0(@5)                                 0232  06150000
*         GEN;                                                          06160000
         PACK  DOUBLEWD(8),LASTRTN(4)                                   06170000
         CVB   LSTRTN,DOUBLEWD                                          06180000
         DS    0H                                                       06190000
*         IF LSTRTN>255 THEN        /* IS LAST INCLUSIVE ROUTINE */     06200000
         CH    @9,@D4                                             0234  06210000
*           GO TO CECTST44;         /* OUTSIDE LEGAL LIMITS. YES,*/     06220000
         BC    02,CECTST44                                        0235  06230000
*         R5=R5+3;                  /* SET ERROR CODE -10- AND   */     06240000
         AH    @5,@D5                                             0236  06250000
*         FSTRTN=17;                /* PRINT ERROR MESSAGE IFD112I*/    06260000
         LA    @8,17                                              0237  06270000
*         CALL CECTST78;            /* NO, SET ROUTINE FLAGS ON  */     06280000
         BAL   @E,CECTST78                                        0238  06290000
*         GO TO CECTST58;           /* IN SCT                    */     06300000
         BC    15,CECTST58                                        0239  06310000
* CECTST99:/* EXIT ROUTINE */                                           06320000
*         INBUFPTR=R5;              /* SAVE INBUFR POINTER */           06330000
CECTST99 ST    @5,INBUFPTR                                        0240  06340000
*         RETURN;                   /* RETURN TO CALLER */              06350000
         BC    15,@EL01                                           0241  06360000
* CECTST03:                                                             06370000
*         /************************************************************ 06380000
*         /*                                                          * 06390000
*         /*          PWTO MESSAGES IFD112I AND IFD161I               * 06400000
*         /*                                                          * 06410000
*         /************************************************************ 06420000
*         R1=ADDR(IFDMSG38);        /* GET PTR TO MESSAGE MODULE        06430000
CECTST03 L     @4,@V1              ADDRESS OF IFDMSG38            0242  06440000
         LR    @1,@4                                              0242  06450000
*         R1=MSGPTR12;              /* GET POINTER TO MESSAGE IFD112I.* 06460000
         L     @1,0(0,@1)                                         0243  06470000
*         MSG112I(35:36)=ERRCODE;       /* PUT ERROR CODE IN MSG      * 06480000
         MVC   38(2,@1),ERRCODE                                   0244  06490000
*         GEN(PWTO  REG=(1));       /* PRINT MESSAGE.                 * 06500000
         PWTO  REG=(1)                                                  06510000
         DS    0H                                                       06520000
*         R1=ADDR(IFDMSG38);        /* GET PTR TO MESSAGE MODULE        06530000
         LR    @1,@4                                              0246  06540000
*         IF RETAINAC ='1'B THEN         /* IS REI ACTIVE?      S20203* 06550000
         TM    A00011,B'10000000'                                 0247  06560000
         BC    12,@9C7                                            0247  06570000
*           DPMSGREI='1'B;              /* NO REPLY TO DP MSGS  XM9156* 06580000
         OI    A00014,B'00000001'                                 0248  06590000
*         R1=MSGPTR61;              /* GET POINTER TO MESSAGE IFD161I * 06600000
@9C7     L     @1,4(0,@1)                                         0249  06610000
*         RELEASE(1);                                                   06620000
*         GEN(PWTO  REG=(1));       /* PRINT MESSAGE.                 * 06630000
         PWTO  REG=(1)                                                  06640000
         DS    0H                                                       06650000
*         DPMSGREI='0'B;                /* TURN OFF DP MSG FLAG XM9156* 06660000
         NI    A00014,B'11111110'                                 0252  06670000
*         YOURR14=REDEFINE;         /* CHANGE RETURN POINT SO THAT */   06680000
         L     @1,4(0,@D)                                         0253  06690000
         MVC   12(4,@1),REDEFINE                                  0253  06700000
*                                   /* TEST CAN BE REDEFINED.      */   06710000
*         RETURN;                   /* RETURN TO CALLER. */             06720000
* CECTST78:                                                             06730000
*         /************************************************************ 06740000
*         /*                                                          * 06750000
*         /* SUBROUTINE FOR SETTING ROUTINE FLAGS IN EXPANDED AND     * 06760000
*         /* NORMAL ROUTINE SELECTION FIELDS.                         * 06770000
*         /*                                                          * 06780000
*         /************************************************************ 06790000
*         PROC OPTIONS(NOSAVEAREA,DONTSAVE);                            06800000
@EL01    L     @D,4(0,@D)                                         0255  06810000
         LM    @E,@C,12(@D)                                       0255  06820000
         BCR   15,@E                                              0255  06830000
*         RESTRICT(2,3,5,6,7,8,9);                                      06840000
*         SAVR14=R14;               /* SAVE RETURN REGISTER */          06850000
CECTST78 ST    @E,DOUBLEWD                                        0257  06860000
*         EXPFLG='1'B;              /* SET INDICATOR SAYING FLAGS */    06870000
         OI    SWITCHES,B'00010000'                               0258  06880000
*                                   /* ARE IN EXPANDED AREA       */    06890000
* CECTST79:                                                             06900000
*         R7=ADDR(EXPANDED);        /* CALCULATE POINTER TO NEEDED */   06910000
CECTST79 LA    @7,SCT+40                                          0259  06920000
*         R7=(FSTRTN+7)/8-3+R7;     /* EXPANDED ROUTINE BYTE       */   06930000
         LA    @E,7                                               0260  06940000
         AR    @E,@8                                              0260  06950000
         SRDA  @E,32                                              0260  06960000
         LA    @0,8                                               0260  06970000
         DR    @E,@0                                              0260  06980000
         SH    @F,@D5                                             0260  06990000
         AR    @7,@F                                              0260  07000000
*         GO TO CECTST82;           /* SKIP TO NEXT NEEDED INSTRUCTION* 07010000
         BC    15,CECTST82                                        0261  07020000
* CECTST80:                                                             07030000
*         /************************************************************ 07040000
*         /*                                                          * 07050000
*         /*         SUBROUTINE FOR SETTING ROUTINE FLAGS IN          * 07060000
*         /*             NORMAL ROUTINE SELECTION FIELD               * 07070000
*         /*                                                          * 07080000
*         /************************************************************ 07090000
*         ENTRY;                                                        07100000
CECTST80 EQU   *                                                  0262  07110000
*         SAVR14=R14;               /* SAVE RETURN REGISTER. */         07120000
@9C6     ST    @E,DOUBLEWD                                        0263  07130000
* CECTST81:                                                             07140000
*         R7=ADDR(RTNFLDXX)-1;      /* CALCULATE POINTER TO NEEDED */   07150000
CECTST81 LH    @F,@D6                                             0264  07160000
         LA    @0,SCT+4                                           0264  07170000
         AR    @F,@0                                              0264  07180000
         LR    @7,@F                                              0264  07190000
*         R7=(FSTRTN+7)/8+R7;       /* NORMAL ROUTINE BYTE         */   07200000
         LA    @E,7                                               0265  07210000
         AR    @E,@8                                              0265  07220000
         SRDA  @E,32                                              0265  07230000
         LA    @0,8                                               0265  07240000
         DR    @E,@0                                              0265  07250000
         AR    @7,@F                                              0265  07260000
* CECTST82:                                                             07270000
*         R6=(FSTRTN//8)+ADDR(MSKTABLE); /* CALC. PTR */                07280000
CECTST82 LR    @E,@8                                              0266  07290000
         SRDA  @E,32                                              0266  07300000
         LA    @0,8                                               0266  07310000
         DR    @E,@0                                              0266  07320000
         LA    @0,MSKTABLE                                        0266  07330000
         AR    @E,@0                                              0266  07340000
         LR    @6,@E                                              0266  07350000
*         RTNFIELD=RTNFIELD|MASK;   /* SET BIT IN ROUTINE FIELD */      07360000
         OC    0(1,@7),0(@6)                                      0267  07370000
*         FSTRTN=FSTRTN+1;          /* INCREMENT FIRST ROUTINE */       07380000
         LA    @8,1(0,@8)                                         0268  07390000
*         IF FSTRTN>LSTRTN THEN     /* IS ROUTINE FINISHED. YES, CLEAN* 07400000
         CR    @8,@9                                              0269  07410000
*           GO TO CECTST83;         /* UP. NO, DETERMINE WHICH SUB-   * 07420000
         BC    02,CECTST83                                        0270  07430000
*         IF EXPFLG='1'B THEN       /* ROUTINE IS BEING USED AND DO   * 07440000
         TM    SWITCHES,B'00010000'                               0271  07450000
*           GO TO CECTST79;         /* IT AGAIN                       * 07460000
         BC    01,CECTST79                                        0272  07470000
*         GO TO CECTST81;                                               07480000
         BC    15,CECTST81                                        0273  07490000
* CECTST83:                                                             07500000
*         EXPFLG='0'B;              /* CLEANUP AND RETURN */            07510000
CECTST83 NI    SWITCHES,B'11101111'                               0274  07520000
*         HRTSEL=LSTRTN;            /* SAVE HIGHEST ROUTINE SELECTED. * 07530000
         STH   @9,HRTSEL                                          0275  07540000
*         R14=SAVR14;               /* RESTORE RETURN REGISTER */       07550000
         L     @E,DOUBLEWD                                        0276  07560000
*         RETURN;                                                       07570000
*         END CECTST78;                                                 07580000
@EL02    BCR   15,@E                                              0278  07590000
*         END IFDOLT38;                                                 07600000
@DATA1   EQU   *                                                        07610000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           07620000
@1       EQU   01                                                       07630000
@2       EQU   02                                                       07640000
@3       EQU   03                                                       07650000
@4       EQU   04                                                       07660000
@5       EQU   05                                                       07670000
@6       EQU   06                                                       07680000
@7       EQU   07                                                       07690000
@8       EQU   08                                                       07700000
@9       EQU   09                                                       07710000
@A       EQU   10                                                       07720000
@B       EQU   11                                                       07730000
@C       EQU   12                                                       07740000
@D       EQU   13                                                       07750000
@E       EQU   14                                                       07760000
@F       EQU   15                                                       07770000
@D1      DC    H'1'                                                     07780000
@D2      DC    H'2'                                                     07790000
@D3      DC    H'16'                                                    07800000
@D4      DC    H'255'                                                   07810000
@D5      DC    H'3'                                                     07820000
@D6      DC    H'-1'                                                    07830000
@V1      DC    V(IFDMSG38)                                              07840000
         DS    0F                                                       07850000
@C2      DC    C'09'                                                    07860000
@C5      DC    C'10'                                                    07870000
@C8      DC    C'01'                                                    07880000
         DS    0D                                                       07890000
@DATA    EQU   *                                                        07900000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   07910000
R1       EQU   00000001            FULLWORD POINTER REGISTER            07920000
R2       EQU   00000002            FULLWORD POINTER REGISTER            07930000
I        EQU   00000003            3  BYTE  POINTER REGISTER            07940000
RETCODE  EQU   00000003            3  BYTE  POINTER REGISTER            07950000
R5       EQU   00000005            FULLWORD POINTER REGISTER            07960000
R6       EQU   00000006            FULLWORD POINTER REGISTER            07970000
R7       EQU   00000007            FULLWORD POINTER REGISTER            07980000
FSTRTN   EQU   00000008            3  BYTE  POINTER REGISTER            07990000
R8       EQU   00000008            FULLWORD POINTER REGISTER            08000000
LSTRTN   EQU   00000009            3  BYTE  POINTER REGISTER            08010000
R13      EQU   00000013            FULLWORD POINTER REGISTER            08020000
R14      EQU   00000014            FULLWORD POINTER REGISTER            08030000
RC       EQU   00000015            3  BYTE  POINTER REGISTER            08040000
R15      EQU   00000015            FULLWORD POINTER REGISTER            08050000
MYSAVE   EQU   00000000            8 BYTE(S) ON WORD                    08060000
A00000   EQU   MYSAVE+00000000     4 BYTE(S)                            08070000
YOURR13  EQU   MYSAVE+00000004     FULLWORD POINTER                     08080000
YOURSAVE EQU   00000000            16 BYTE(S) ON WORD                   08090000
A00001   EQU   YOURSAVE+00000000   12 BYTE(S)                           08100000
YOURR14  EQU   YOURSAVE+00000012   FULLWORD POINTER                     08110000
MSGPTR   EQU   00000000            12 BYTE(S) ON WORD                   08120000
MSGPTR12 EQU   MSGPTR+00000000     FULLWORD POINTER                     08130000
MSGPTR61 EQU   MSGPTR+00000004     FULLWORD POINTER                     08140000
MSGPTR55 EQU   MSGPTR+00000008     FULLWORD POINTER                     08150000
MSG112   EQU   00000000            41 BYTE(S)                           08160000
A00006   EQU   MSG112+00000000     4 BYTE(S)                            08170000
MSG112I  EQU   MSG112+00000004     37 BYTE(S)                           08180000
DOUBLEWD EQU   @DATA+00000072      8 BYTE(S) ON DWORD                   08190000
SAVR14   EQU   DOUBLEWD+00000000   FULLWORD POINTER                     08200000
FRSTRTN  EQU   @DATA+00000080      4 BYTE(S) ON WORD                    08210000
LASTRTN  EQU   FRSTRTN+00000000    4 BYTE(S)                            08220000
A00007   EQU   FRSTRTN+00000000    1 BYTE(S)                            08230000
FRSTRTN1 EQU   FRSTRTN+00000001    3 BYTE(S)                            08240000
LASTRTN1 EQU   FRSTRTN+00000001    3 BYTE(S)                            08250000
A00008   EQU   FRSTRTN+00000001    1 BYTE(S)                            08260000
FRSTRTN2 EQU   FRSTRTN+00000002    2 BYTE(S)                            08270000
LASTRTN2 EQU   FRSTRTN+00000002    2 BYTE(S)                            08280000
A00009   EQU   FRSTRTN+00000002    1 BYTE(S)                            08290000
FRSTRTN3 EQU   FRSTRTN+00000003    1 BYTE(S)                            08300000
LASTRTN3 EQU   FRSTRTN+00000003    1 BYTE(S)                            08310000
J        EQU   @DATA+00000084      HALFWORD INTEGER                     08320000
         ORG   @DATA+00000086                                           08330000
NUMBERS  EQU   *                   10 BYTE(S)                           08340000
         DC    C'0123456789'                                            08350000
NUMBER   EQU   00000000            1 BYTE(S)                            08360000
SWITCHES EQU   *                   1 BYTE(S)                            08370000
         DC    X'00'                                                    08380000
SECTIONS EQU   SWITCHES+00000000   3 BIT(S)                             08390000
SECT1    EQU   SWITCHES+00000000   1 BIT(S)                             08400000
SECT2    EQU   SWITCHES+00000000   1 BIT(S)                             08410000
SECT3    EQU   SWITCHES+00000000   1 BIT(S)                             08420000
EXPFLG   EQU   SWITCHES+00000000   1 BIT(S)                             08430000
DUBNUM   EQU   SWITCHES+00000000   1 BIT(S)                             08440000
TRINUM   EQU   SWITCHES+00000000   1 BIT(S)                             08450000
MSKTABLE EQU   *                   8 BYTE(S)                            08460000
         DC    X'0180402010080402'                                      08470000
MASK     EQU   00000000            1 BYTE(S)                            08480000
ERRCODE  EQU   @DATA+00000105      2 BYTE(S)                            08490000
INPUTBUF EQU   00000000            4 BYTE(S)                            08500000
RTNFIELD EQU   00000000            1 BYTE(S)                            08510000
         ORG   @DATA                                                    08520000
         DS    00000107C                                                08530000
@TEMPS   DS    0F                                                       08540000
TESTCOMM IFDCOM                                                         08550000
SCT      EQU   CHASCT+00000000     70 BYTE(S) ON WORD                   08560000
A00002   EQU   SCT+00000000        4 BYTE(S)                            08570000
RTNFLDXX EQU   SCT+00000004        2 BYTE(S)                            08580000
A00003   EQU   SCT+00000006        27 BYTE(S)                           08590000
EXPGMFLG EQU   SCT+00000033        1 BYTE(S)                            08600000
A00004   EQU   SCT+00000033        2 BIT(S)                             08610000
RTNSLCTN EQU   SCT+00000033        1 BIT(S)                             08620000
A00005   EQU   SCT+00000034        6 BYTE(S)                            08630000
EXPANDED EQU   SCT+00000040        30 BYTE(S)                           08640000
OLTEPSW  EQU   CESWT+00000000      1 BYTE(S)                            08650000
LEGALTST EQU   OLTEPSW+00000000    1 BIT(S)                             08660000
A00010   EQU   OLTEPSW+00000000    4 BIT(S)                             08670000
REINT    EQU   OLTEPSW+00000000    1 BIT(S)                             08680000
OLTEPSW1 EQU   CESWT1+00000000     1 BYTE(S)                            08690000
RTNFLD   EQU   OLTEPSW1+00000000   1 BIT(S)                             08700000
A00011   EQU   CESWTR+00000000     1 BYTE(S)                            08710000
RETAINAC EQU   A00011+00000000     1 BIT(S)                             08720000
A00012   EQU   A00011+00000000     1 BIT(S)                             08730000
REMNOMSG EQU   A00011+00000000     1 BIT(S)                             08740000
A00013   EQU   A00011+00000000     5 BIT(S)                             08750000
A00014   EQU   CESWTR2+00000000    1 BYTE(S)                            08760000
A00015   EQU   A00014+00000000     7 BIT(S)                             08770000
DPMSGREI EQU   A00014+00000000     1 BIT(S)                             08780000
@DATEND  EQU   *                                                        08790000
         END   IFDOLT38                                                 08800000
./  ADD  SSI=33600092,NAME=IFDOLT39
 TITLE  'IFDOLT39  ENTRY-EXIT, PARALLEL PRINT OUTPUT WRITER SECTIONS'   00100020
****************************** PROLOGUE ******************************* 00200020
*                                                                     * 00300020
*  MODULE NAME: IFDOLT39                                              * 00400002
*                                                                     * 00410002
*  DESCRIPTIVE NAME: DPRINT ENTRY-EXIT AND PRINT ROUTINES             * 00420002
*                                                                     * 00430002
*  COPYRIGHT: NONE                                                    * 00440002
*                                                                     * 00450002
*                                                                     * 00500020
*  STATUS: CHANGE LEVEL - 001                                         * 00600001
*                                                                     * 00700020
*  FUNCTION: THIS MODULE IS DESIGNED AS FOLLOWS:                      * 00800020
*                                                                     * 00900020
*            ENTRY-EXIT SECTION                                       * 01000020
*            1) 5 ENTRY POINTS FOR PRINT REQUESTS BY AN OLT           * 01100020
*               OR OLTEP MODULE.                                      * 01200020
*            2) LINKAGE ROUTINES TO PARALLEL PRINT OR DPRINT MODULES  * 01300020
*            3) CALLING ROUTINE FOR CECOMM ON FIRST ERROR OR          * 01400020
*               CATASTROPHIC ERROR CONDITIONS.                        * 01500020
*            4) COMMON EXIT RTN FOR RETURNING TO THE CALLING OLT OR   * 01600020
*               OLTEP MODULE, WITH THE RETURN CODE IN R15.            * 01700020
*            5) REGISTER SAVE AREA 1 USED WHEN CALLING OLTEP MODULES  * 01800020
*               IFDOLT14, IFDOLT30.                                   * 01900020
*            6) REGISTER SAVE AREA 2 USED WHEN CALLING OS MODULES     * 02000020
*               VIA WRITE, SVC.                                       * 02100020
*                                                                     * 02200020
*            PRINT SECTION                                            * 02300020
*            1) PRINTS WTO AND WTOR MESSAGES, REPLIES.                * 02400020
*            2) PRINTS OLT RESULTS, DATA, AND MESSAGES.               * 02500020
*            3) TRANSLATES REPLIES FOR PRINTING.                      * 02600020
*            4) OUTPUTS WTO AND WTOR MESSAGES TO THE CONSOLE.         * 02700020
*            5) OUTPUTS OLT RESULTS, ETC TO A CONSOLE WITH LEVEL      * 02800020
*               CONTROL WHEN PARALLEL PRINT IS REQUESTED              * 02900020
*                                                                     * 03000020
*  ENTRY POINTS: DPRINT - DPRINT CALLED - FROM OLT MOD                * 03100020
*                PWTO   - WTO ENTRY   )                               * 03200020
*                PWRT   - WRITE ENTRY ) - FROM OLTEP MODS             * 03300020
*                PRPLY  - REPLY WRITE )                               * 03400020
*                PWTOR  - WTOR ENTRY  )                               * 03500020
*                                                                     * 03600020
*  INPUTS: PARAMETER LISTS OF CALLING MACROS.                         * 03700020
*                                                                     * 03800020
*  REGISTER USAGE: R1  - ADDRESS OF PARAMETERS OF CALLING MACROS.     * 03900020
*                  R2  -  ADDRESS OF SECT CTRL TABLE IN OLTEP ROOT.   * 04000020
*                  R4  - BASE REG OF THIS MODULE                      * 04100020
*                  R5-R12 - MISC                                      * 04200020
*                  R13 - ADDRESS OF CALLER'S SAVE AREA                * 04300020
*                  R14 - ADDRESS OF CALLER'S RETURN POINT             * 04400020
*                  R15 - ADDRESS OF ENTRY POINT                       * 04500020
*                                                                     * 04600020
*  EXTERNAL ROUTINES: OS ROUTINES                                     * 04700020
*                     IFDOLT14- DPRINT MODULES.                       * 04800020
*                                                                     * 04900020
*  EXITS - NORMAL: RETURN TO OLT OR OLTEP MODULE                      * 05000020
*           ERROR: IFDOLT30- CECOMM MOD                                 05100020
*                                                                     * 05200020
*  ATTRIBUTES: SERIALLY REUSABLE                                      * 05300020
*                                                                     * 05330002
*  CHANGE ACTIVITY: CLEANUP - C137500,D608000                         * 05360002
*                                                                     * 05400020
*********************************************************************** 05500020
*  CHANGE 02/71 - RETAIN 370 INTERFACE                                * 05520001
*  CHANGE 03/71 - CHAIN=YES SUPPORT                                   * 05540001
*********************************************************************** 05560001
         SPACE                                                          05580001
         EJECT                                                          05600020
IFDOLT39 CSECT                                                          05700020
*C400000                                                        X02906  05750002
         ENTRY DPRXLATE                                                 05800020
         ENTRY DPRPPOW                                                  05900020
         ENTRY DPRDCB                   DIAGMSG DD DCB           Y02008 05950002
         USING *,R15               LINK REG AS BASE REG                 06000020
         USING CHASCT,R2           COM BASE REG                         06100020
         SPACE                                                          06200020
R1       EQU   1                                                        06300020
R2       EQU   2                                                        06400020
R3       EQU   3                                                        06500020
R4       EQU   4                                                        06600020
R5       EQU   5                                                        06700020
R6       EQU   6                                                        06800020
R7       EQU   7                                                        06900020
R8       EQU   8                                                        07000020
R9       EQU   9                                                        07100020
R10      EQU   10                                                       07200020
R11      EQU   11                                                       07300020
R12      EQU   12                                                       07400020
R13      EQU   13                                                       07500020
R14      EQU   14                                                       07600020
R15      EQU   15                                                       07700020
RSTRFLG  EQU   X'80'                                                    07800020
WTOFLG   EQU   X'01'                                                    07900020
RPLYFLG  EQU   X'02'                                                    08000020
WTORFLG  EQU   X'04'                                                    08100020
WRTFLG   EQU   X'10'                                                    08200020
DPRFLG   EQU   X'40'                                                    08300020
WAITFLG  EQU   X'20'                                                    08400020
CPOPT     EQU  X'08'                                                    08500020
NPROPT    EQU  X'04'                                                    08600020
NEPOPT      EQU  X'04'                                                  08700020
FECOPT   EQU   X'01'                                                    08800020
NFEFLG   EQU   X'08'                                                    08900020
CATFLG   EQU   X'10'                                                    09000020
HDRFLG   EQU   X'80'                                                    09100020
RSLTFLG  EQU   X'40'                                                    09200020
PFEMSG   EQU   X'08'                                                    09300020
PCEMSG   EQU   X'04'                                                    09400020
FCEFLG   EQU   X'10'                                                    09500020
FFEFLG   EQU   X'20'                                                    09600020
FERINT   EQU   X'02'                                                    09700020
RETAINAC EQU   X'80'                                              M4501 09790020
REMERR   EQU   X'40'                                              M4501 09880020
REMNOMSG EQU   X'20'                                              M4501 09970020
CENOMSG  EQU   X'10'                                              M4501 10060020
TRANSMSG EQU   X'08'                                              M4501 10150020
IMRESP   EQU   X'04'                                              M4501 10240020
EXECOUT  EQU   X'02'                                              M4501 10330020
CECOMOUT EQU   X'01'                                              M4501 10420020
ILLRESP  EQU   X'80'                                              M4501 10510020
EXECANS  EQU   X'40'                                              M4501 10600020
CECOMANS EQU   X'20'                                              M4501 10690020
INFOMSG  EQU   X'10'                                              M4501 10780020
RETRIEVE EQU   X'08'                                              M4501 10870020
REMANS   EQU   X'04'                                              M4501 10960020
EDOTMSG  EQU   X'02'                                              M4501 11050020
SETIM    EQU   X'FB'                                              M4501 11140020
SETRET   EQU   X'F7'                                              M4501 11230020
ONCOMM   EQU   X'20'                                              M4501 11320020
REIENTRY EQU   X'01'                                              M4501 11410020
REPLY00  EQU   X'80'                                              M4501 11500020
POSTBIT  EQU   X'40'                                              M4501 11590020
COMMLOOP EQU   X'10'                                              M4501 11680020
WAIT3    EQU   X'08'                                              M4501 11770020
REPLY02  EQU   X'40'                                              M4502 11860020
PRTONLY  EQU   X'02'                                           X02008   11960001
         EJECT                                                          12100020
*********************************************************************** 12200020
*        DPRINT MODULE - ENTRY-EXIT SECTION                           * 12300020
*********************************************************************** 12400020
         SPACE                                                          12500020
* ENTRY POINTS FOR DPRINT AND INNER MACROS.                             12600020
         SPACE                                                          12700020
DPRINT   BC    15,DPRENT-*(15)     DPRINT CALLED                        12800020
         DC    X'0100'                                                  12900020
PWTO     BC    15,DPRENT-*(15)     WTO ENTRY                            13000020
         DC    X'0200'                                                  13100020
PWRT     BC    15,DPRENT-*(15)     WRITE ENTRY                          13200020
         DC    X'0300'                                                  13300020
PRPLY    BC    15,DPRENT-*(15)     REPLY WRITE ENTRY                    13400020
         DC    X'0400'                                                  13500020
PWTOR    BC    15,DPRENT-*(15)     WTOR ENTRY                           13600020
         DC    X'0500'                                                  13700020
         DC    C'IFDOLT39&SYSDATE'       IDENTIFIER             Y02906* 13750002
DPRENT   STM   R14,R12,12(R13)     SAVE CALLER'S REGS                   13800002
         BALR  R4,0                BASE REG                             14000020
         USING *,R4                                                     14100020
         TM    CESWTR1,REIENTRY         ENTRY FROM REI           S20203 14200020
         BO    DPRENT3                  YES. USE SAVE AREA 3    S20203  14300020
         CLI   4(R15),X'01'        ENTRY FROM A UNIT TEST FOR DPRINT    14400020
         BNE   DPRENT1             NO.  USE SAVE AREA 2                 14500020
         LA    R7,DPRSA1           YES. USE SAVE AREA 1                 14600020
         ST    R7,8(R13)           STORE IN CALLER'S SA                 14700020
         ST    R13,4(R7)           STORE ADDR OF CALLER'S SA            14800020
         NI    CESWT4,X'00'        CLEAR FLAGS                          14900020
         L     R12,4(R1)           DPRINT CONTROL WORD ADDRESS          14950001
         B     DPRENT2                                                  15000020
DPRENT3  LA    R7,DPRSA3                SA3 USED FOR REI ENTRY   S20203 15100020
         ST    R7,8(R13)                STORE IN CALLER'S SA     S20203 15200020
         ST R13,4(R7)                   STORE ADDR OF CALLERS SA S20203 15300020
         LR    R13,R7                   ADDRESS OF OWN SA        S20203 15400020
         NI    CESWT4,X'E0'             CLEAR SELECTED FLGS      S20203 15500020
         B     DPRENT2                                           S20203 15600020
DPRENT1  LA    R7,DPRSA2           SA2 USED FOR PWRT,PWTO/R,PRPLY,      15700020
         ST    R7,8(R13)           SAVE IT IN CALLER'S SA               15800020
         ST    R13,4(R7)           STORE ADDR OF CALLER'S SA            15900020
         LA    R13,DPRSA2          ADDRESS OF OWN SA2                   16000020
         NI    CESWT4,X'E0'        CLEAR FLGS EXCEPT RSTR,WAIT,DPR      16100020
DPRENT2  XC    RETCODE(4),RETCODE  CLEAR IT                             16200020
         SPACE                                                          16300020
* SELECT EFFECTIVE ENTRY ROUTINE                                        16400020
         SPACE                                                          16500020
         CLI   4(R15),X'01'        DPRINT ?                             16600020
         BE    DPRPRT                                                   16700020
         CLI   4(R15),X'02'        WTO ?                                16800020
         BE    DPRWTO                                                   16900020
         CLI   4(R15),X'03'        WRITE ?                              17000020
         BE    DPRWRT                                                   17100020
         CLI   4(R15),X'04'        REPLY WRITE ?                        17200020
         BE    DPRRPLY                                                  17300020
         CLI   4(R15),X'05'        WTOR ?                               17400020
         BE    DPRWTOR                                                  17500020
         SPACE                                                          17600001
* UNIT TEST DPRINT ENTRY                                                17800020
         SPACE                                                          17900020
DPRPRT   LA    R13,DPRSA1          SAVE AREA ADDRESS              M4506 18000020
         OI    CESWT4,DPRFLG       SET DPRINT OP                  M4506 18100020
         NI    CESWT6,X'7F'             CLEAR UTS BIT          XM5847   18150001
         BAL   R5,DPRCL14          CALL MODULE ROUTINE            M4506 18200020
         ST    R15,RETCODE         RETURN CODE                    M4506 18300020
         OI    CESWT3,X'08'        SUSPEND DELETION               M4506 18400020
         BAL   R5,DPRCL14          CALL MODULE ROUTINE            M4506 18500020
         SPACE                                                          18900020
* CALL CECOMM MODULE IF FIRST ERROR OR CATASTROPHIC ERROR CONDITION     19000020
         SPACE                                                          19100020
         TM    0(R12),X'08'        DPRINT CHAINING REQUESTED            19300001
         BO    DPRPRT6             YES.  BYPASS CECOM CALL.             19360001
         TM    0(R12),X'02'        NO.  IS IT AN ERROR DPRINT?    M5076 19380001
         BZ    DPRPRT6             IF NOT BRANCH TO BYPASS CECOM  M5076 19400001
         TM    CESWT5,PFEMSG+PCEMSG   YES.  TEST FOR ERRORS       M4506 19420001
         BZ    DPRPRT6             NO ERROR                       M4506 19500020
         SPACE                                                          19800020
DPRPRT7  NI    CESWT4,255-DPRFLG   CLEAR FLAG                           19900020
         NI    CESWT5,255-PCEMSG-PFEMSG   CLEAR FLAGS             21937 20000001
         OI    CESWT,FERINT        FIRST ERROR INTERVAL                 20100020
         LA    R13,DPRSA1          SAVE AREA 1 ADDRESS                  20200020
         L     R15,COMMINT         CECOMM MODULE ADDRESS                20300020
         BALR  R14,R15             TO CECOMM                            20400020
DPRPRT6  NI    CESWT4,255-DPRFLG   CLEAR DPRINT OP FLAG           M4506 20440020
         B     DPREXIT1            TO EXIT ROUTINE                M4506 20480020
         SPACE                                                          20500001
DPRCL14  IFDMOD CALL='14',LIST=(R1) CALL IFDOLT14                 M4506 20520020
DLT14    IFDMOD DELETE='14'        DELETE IFDOLT14               YM4982 20540002
         BCR   15,R5               RESUME PROGRAM                 M4506 20560020
         SPACE                                                          20600020
* SET FLAG FOR OLTEP WRITE TO PRINTER.                                  20700020
         SPACE                                                          20800020
DPRWRT   OI    CESWT4,WRTFLG       WRITE SET ON                         20900020
         ST    R1,MSGLGTH          WRITE MESSAGE LENGTH                 21000020
         STC   R1,MHRPARM+3             MESSAGE LENGTH           S20203 21100020
         TM    CESWTR,TRANSMSG                                    M4501 21200020
         BZ    DPREI132                                           M4501 21300020
         LA    R6,DPRXLATE                                      S20203  21400020
         LA    R8,PRTBUFR                                       S20203  21500020
         EX    R1,REPXLATE                                        M4501 21600020
DPREI132 BAL   R14,DPRPPOW                                        M4501 21700020
         TM    CESWTR2,COMMLOOP         IS THIS INTERNAL PWRITE  S20203 21800020
         BO    DPREI29                                           S20203 21900020
         B     DPREXIT2            RETURN HERE AND EXIT                 22000020
         SPACE                                                          22100020
* SETUP WTO MESSAGE LENGTH, ADDRESS, AND FLAG.                          22200020
* RESTORE PAGE FOR 'OLTS RUNNING' MESSAGE                               22300020
         SPACE                                                          22400020
DPRWTO   ST    R1,SAVER1           SAVE POINTER                         22500020
         SR    R7,R7               CLEAR                                22600020
         IC    R7,1(R1)            MESSAGE LENGTH                       22700020
         LA    R9,4                                                     22800020
         SR    R7,R9               ACTUAL MESSAGE BYTE COUNT            22900020
         ST    R7,MSGLGTH          SAVE IT                              23000020
         STC   R7,MHRPARM+3             MESSAGE LENGTH           S20203 23100020
         LA    R7,4(R1)            MESSAGE ADDRESS                      23200020
         ST    R7,MSGADR           SAVE                                 23300020
         CLC   4(6,R1),OLTRUN      IS IT WTO MSG 'OLTS RUNNING'         23400020
         BE    DPRWTO2             YES.  RESTORE PRINT PAGE             23500020
DPRWTO1  OI    CESWT4,WTOFLG       NO.  SET WTO FLAG                    23600020
         BAL   R14,DPRPPOW         TO PARALLEL PRINT OUTPUT WRITER      23700020
         B     DPREXIT2            RETURN HERE AND EXIT                 23800020
         SPACE                                                          23900020
DPRWTO2  MVI   PRTBUFR+1,C' '      LOAD PRINT BUFFER WITH BLANKS        24000020
         MVC   PRTBUFR+2(120),PRTBUFR+1                                 24100020
         MVI   PRTBUFR,X'8B'       RESTORE PAGE CTRL CHARC              24200020
         OI    CESWT4,RSTRFLG      SET RESTORE FLAG                     24300020
         BAL   R14,DPRPPOW         TO PARALLEL PRINT OUTPUT WRITER      24400020
         NI    CESWT4,255-RSTRFLG  CLEAR RESTORE FLAG                   24500020
         MVI   PRTBUFR,X'09'       RESTORE 1 LINE SPACE                 24600020
         B     DPRWTO1                                                  24700020
         SPACE                                                          24800020
* SETUP WTOR MSG AND REPLY LENGTHS, ADDRESSES, FLAG.  ALSO ECB ADDR.    24900020
         SPACE                                                          25000020
DPRWTOR  ST    R1,SAVER1           SAVE POINTER                         25100020
         SR    R7,R7               CLEAR                                25200020
         TM    CESWTR2,COMMLOOP         IS THIS INTERNAL RWTOR    M4502 25220020
         BO    DPREI44                  YES. BRANCH               M4502 25240020
         OI    CESWTR2,WAIT3            SET WTOR INDICATOR        M4502 25260020
         L     R7,0(R1)            REPLY LENGTH AND ADDRESS             25300020
         ST    R7,REPLGTAD         SAVE                                 25400020
         ST    R7,RESPBUF               STORE ADDRESS FOR MHR    S20203 25700020
DPREI44  L     R7,4(R1)                 REPLY ECB ADDRESS        S20203 25800020
         ST    R7,REPECBAD         SAVE                                 25900020
         IC    R7,9(R1)            MESSAGE LENGTH                       26000020
         LA    R9,4                                                     26100020
         SR    R7,R9               ACTUAL MESSAGE BYTE COUNT            26200020
         ST    R7,MSGLGTH          SAVE IT                              26300020
         STC   R7,MHRPARM+3             MESSAGE LENGTH           S20203 26400020
         TM    CESWT4,WAITFLG           IS WAIT CALLED FOR     S20203   26500020
         BO    *+8                     NO. DONT SET SWITCH     S20203   26600020
         OI    CESWTR,IMRESP            SET IM REPLY             S20203 26700020
         LA    R7,12(R1)           MESSAGE ADDRESS                      26800020
         ST    R7,MSGADR           SAVE                                 26900020
         OI    CESWT4,WTORFLG      WTOR FLAG SET ON                     27000020
         BAL   R14,DPRPPOW         TO PARALLEL PRINT OUTPUT WRITER      27100020
         TM    CESWTR2,COMMLOOP         IS THIS INTERNAL PWTOR   S20203 27200020
         BO    DPREI40                                           S20203 27300020
         NI    CESWTR2,255-WAIT3        ZERO WTOR INDICATOR       M4502 27350020
         B     DPREXIT2            RETURN HERE AND EXIT                 27400020
         SPACE                                                          27500020
* SET FLAG FOR REPLY PRINT ONLY.                                        27600020
         SPACE                                                          27700020
DPRRPLY  OI    CESWT4,RPLYFLG      REPLY FLAG SET ON                    27800020
         LA    R8,INBUFR           INBUFR ADDR AS REPLY ADDR      M1370 27830001
         ST    R8,REPLGTAD         STORE                          M1370 27860001
         STC   R1,REPLGTAD         REPLY LENGTH                         27900020
         BAL   R14,DPRPPOW         TO PARALLEL PRINT OUTPUT WRITER      28000020
         B     DPREXIT2            RETURN HERE AND EXIT                 28100020
         SPACE                                                          28200020
* RETURN TO CALLER.  PUT ANY RETURN CODE IN R15 SAVE AREA.              28300001
         SPACE                                                          28400020
DPREXIT1 L     R13,DPRSA1+4        ADDR OF CALLER'S SA - UNIT TEST      28500020
         MVC   16(4,R13),RETCODE   RETURN CODE TO R15 SAVE AREA         28600020
         LM    R14,R12,12(R13)     RESTORE CALLER'S REGS                28700020
         BR    R14                 RETURN TO CALLER                     28800020
DPREXIT2 TM    CESWTR1,REIENTRY         REI ENTRY                S20203 28900020
         BZ    DPREXIT3                 SA3 WAS USED             S20203 29000020
         L     R13,DPRSA3+4             ADDR OF CALLERS SA - REI S20203 29100020
         B     DPREXIT3+4               RETURN                   S20203 29200020
DPREXIT3 L     R13,DPRSA2+4             ADDR OF SA - OLTEP MOD   S20203 29300020
         MVC   16(4,R13),RETCODE   RETURN CODE TO R15 SAVE AREA         29400020
         LM    R14,R12,12(R13)     RESTORE ITS REGS                     29500020
         BR    R14                 RETURN TO IT                         29600020
         SPACE                                                          29700020
         CNOP  0,4                                                      29800020
DPRSA1   DS    18F                 SAVE AREA                            29900020
DPRSA2   DS    18F                 SAVE AREA 2                          30000020
RETCODE  DC    XL4'0'              RETURN CODE                          30100020
MSGLGTH  DC    XL4'0'                                                   30200020
MSGADR   DC    XL4'0'                                                   30300020
REPLGTAD DC    XL4'0'                                                   30400020
REPECBAD DC    XL4'0'                                                   30500020
SAVER1   DC    XL4'0'                                                   30600020
OLTRUN   DC    C'IFD102'                                                30700020
DPRSA3   DC    18F'0'                   SAVE AREA 3              S20203 30800020
RESAVER1 DC    F'0'                                              S20203 30900020
         SPACE 2                                                        31000001
*********************************************************************** 31300020
*                PRINT OUTPUT WRITER                                  * 31400020
*********************************************************************** 31500020
         SPACE                                                          31600020
         SPACE                                                          31700020
DPRPPOW  ST    R14,SAVE14          SAVE LINK ADDRESS                    31800020
         TM    CESWT4,RSTRFLG      IS THIS A RESTORE PAGE PRINT         31900020
         BO    DPR201              YES.                                 32000020
DPR200   TM    CESWT4,RPLYFLG      NO.  IS THIS A REPLY PRINT           32100020
         BZ    DPR200A             NO                                   32200020
         B     DPR211              YES. TRANSLATE, MOVE IT TO PRINT BFR 32300020
         SPACE                                                          32400020
* LOAD PRINT BUFFER FOR PRINT IF A WTO/R                                32500020
         SPACE                                                          32600020
DPR200A  TM    CESWT4,WTOFLG       IS IT AN OPERATOR MESSAGE            32700020
         BO    DPR200B             YES                                  32800020
         TM    CESWT4,WTORFLG      NO.  IS IT A WTOR.                   32900020
         BZ    DPR201              NO                                   33000020
DPR200B  MVI   PRTBUFR+1,C' '      YES. SETUP FOR PARALLEL PRINT        33100020
         MVC   PRTBUFR+2(120),PRTBUFR+1  CLEAR WITH BLANKS              33200020
         MVI   PRTBUFR,X'09'       LOAD PRINT CTRL - SPACE 1 LINE       33300020
         L     R9,MSGLGTH          WTO MESSAGE LENGTH                   33400020
         BCT   R9,*+4              SUBT 1 TO ADJUST FOR MVC COUNT       33500020
         L     R8,MSGADR           WTO MESSAGE ADDRESS                  33600020
         EX    R9,DPRMVC           MOVE MSG INTO PRINT BUFFER           33700020
         SPACE                                                          33800020
* OPEN DPRINT IF FIRST PASS.                                            33900020
         SPACE                                                          34000020
DPR201   LA    R8,DPRDCB           DPRINT DCB ADDR                      34100020
         TM    48(R8),X'10'        HAS IT BEEN OPENED                   34200020
         BO    DPR202              YES. BYPASS OPEN                     34300020
         OPEN  (DPRDCB,(OUTPUT))   NO.  OPEN IT                         34400020
         TM    48(R8),X'10'        WAS DCB OPENED ?                     34420001
         BO    DPR202              YES.                                 34440001
         MVI   RETCODE,X'04'       NO.  SET RETURN CODE TO 04           34460001
         B     DPR210              GO TO END                            34480001
         SPACE                                                          34500020
DPR202   PRTOV DPRDCB,12           CHECK FOR OVERFLOW                   34600020
         SPACE                                                          34700001
* EXECUTE WRITE OPERATION.                                              34900020
         SPACE                                                          35000020
         LA    R9,PRTBUFR          PRINT BUFFER ADDRESS                 35100020
         ST    R9,DPRDECB+12       LOAD AS AREA ADDRESS                 35200020
         WRITE DPRDECB,SF,DPRDCB,PB,'S'    PRINT                        35300020
         SPACE                                                          35400020
         CHECK DPRDECB                                                  35500020
         SPACE                                                          35600020
* BYPASS WTO IF REPLY OR RESTORE PRINT.                                 35700020
         SPACE                                                          35800020
         TM    CESWT4,RSTRFLG      RESTORE PAGE PRINT                   35900020
         BO    DPR210              YES.  BYPASS WTO                     36000020
         TM    CESWTR,RETAINAC          IS REI ACTIVE            S20203 36100020
         BZ    DPREI10                  NO. CONTINUE             S20203 36200020
         TM    CESWTR2,PRTONLY                                 X02008   36230001
         BO    DPR210                                          X02008   36260001
         TM    CESWTR,REMNOMSG          DOES REMOTE GET MSG.     S20203 36300020
         BO    DPREI10                  NO. CONTINUE             S20203 36400020
         TM    CESWT4,RPLYFLG           IS THIS REPLY PRINT      S20203 36500020
         BZ    DPREI12                  NO. SEND TO REMOTE       S20203 36600020
         TM    CESWTR,CENOMSG           DID ONSITE ANSWER        S20203 36700020
         BZ    DPR206                   NO. PUT TO CONSOLE       S20203 36800020
DPREI12  L     R1,MHRPARM               PUT MSG LENGTH IN R1     S20203 36900020
         MVC   RESAVER1(4),SAVER1       SAVE R1 FROM BEFORE      S20203 37000020
         MVC   SAVESW4(1),CESWT4        SAVE FLAGS               S20203 37100020
DPREI02  L     R15,MHRPTR               GET ADDR OF MSG HANDLER  S20203 37200020
         BALR  R14,R15                  BRANCH TO MSG HANDLER    S20203 37300020
         TM    CESWTR,REMERR            DID ERROR OCCUR.         S20203 37400020
         BZ    DPREI11                  NO. CONTINUE             S20203 37500020
         MVC   SAVER1(4),RESAVER1       RESTORE R1 SAVE AREA     S20203 37600020
         MVC   CESWT4(1),SAVESW4        RESTORE FLAGS            S20203 37700020
         TM    CESWTR1,EDOTMSG          IS IT IFD105D MSG        S20203 37800020
         BZ    DPREI11                  NO. CONTINUE.FLAG SET.   S20203 37900020
DPREI26  NI    CESWTR,255-REMERR        ZERO ERROR FLAG          S20203 38000020
         L     R13,DPRSA2+4             CALLERS SAVE ADDR        S20203 38100020
         MVC   12(4,R13),REDEFINE       MOVE IN NEW RETURN ADDR  S20203 38200020
         B     DPREXIT2                 GO BACK TO IFDOLT30      S20203 38300020
DPREI11  TM    CESWTR1,RETRIEVE         IS THIS RETRIEVE        S20203  38400020
         BO    DPREI05                  YES. GO CHECK REPLY      S20203 38500020
DPREI10  TM    CESWT4,RPLYFLG           IS THIS A REPLY PRINT    S20203 38600020
         BO    DPR210                   YES. BYPASS WTO          S20203 38700020
DPREI09  TM    CESWT4,WTOFLG            IS IT A WTO.             S20203 38800020
         BO    DPR208              YES                                  38900020
         TM    CESWT4,WTORFLG      IS IT A WTOR                         39000020
         BO    DPR209              YES                                  39100020
         TM    CESWTR,CENOMSG           DOES ONSITE GET MSG     S20203  39200020
         BO    DPR210                   NO. BRANCH TO EXIT      S20203  39300020
         SPACE                                                          39400020
* PARALLEL PRINT TO CONSOLE WITH LEVEL CONTROL                          39500020
         SPACE                                                          39600020
DPR203   TM    CHASCT+3,X'10'      PARALLEL PRINT REQUESTED       M1005 39700020
         BZ    DPR210              NO.  BYPASS WTO                      39800020
         TM    CESWT4,DPRFLG       YES.  IS IT A DPRINT OP.             39900020
         BZ    DPR210                  NO-BYPASS CONSOLE PRINT  X02906  40000002
         CLI   DPLEVEL,X'F3'       YES. CHECK LEVEL CTRLS               40100020
         BE    DPR206              YES. LOAD FOR WTO                    40200020
         CLI   DPLEVEL,X'F2'       NO. IS IT LEVEL 2                    40300020
         BE    DPR204              YES  LOAD IF HEADER OR RESULTS       40400020
         CLI   DPLEVEL,X'F1'       NO. IS IT LEVEL 1                    40500020
         BE    DPR205              YES. LOAD IF HDR, DESC, COMMENT.     40600020
         B     DPR204A             LEVEL 0 ASSUMED. TEST IF HEADER      40700020
         SPACE                                                          40800001
DPR204   TM    CESWT5,RSLTFLG      IS IT A RESULT                       41000020
         BO    DPR206              YES.                                 41100020
DPR204A  TM    CESWT5,HDRFLG       NO. IS IT A HEADER                   41200020
         BO    DPR206              YES                                  41300020
         B     DPR210              NO.  BYPASS IF DESC OR MSG LINE      41400020
         SPACE                                                          41500020
DPR205   TM    CESWT5,RSLTFLG      IS IT A RESULT                       41600020
         BO    DPR210              YES. BYPASS WTO                      41700020
         B     DPR206              NO. LOAD HDR, DESC, COMMENT          41800020
         SPACE                                                          41900020
* LOAD MSG, ROUTING, DESCRIPTOR CODES FOR PARALLEL PRINT TO CONSOLE     42000020
         SPACE                                                          42100020
DPR206   L     R1,MSGMOD           ADDRESS OF MESSAGE TABLE             42200020
         L     R1,0(R1)            MESSAGE ADDRESS                      42300020
         SR    R9,R9               CLEAR REGS                     M1005 42400020
         SR    R7,R7                                              M1005 42500020
         CLI   MSGLGTH+3,X'3D'     MSG GREATER THAN 61 CHARCS     M1005 42600020
         BH    DPR207              YES. BRANCH                    M1005 42700020
         IC    R9,MSGLGTH+3        NO. USE GIVEN LENGTH           M1005 42800020
         B     *+8                                                M1005 42900020
DPR207   IC    R9,MSGMAX+1         USE MAX- 61 CHARCS             M1005 43000020
         LA    R7,12(R9)           SETUP WTO MSG BYTE COUNT       M1005 43100020
         STC   R7,1(R1)            PUT IT IN WTO MSG              M1005 43200020
         LA    R7,12(R1)           PTR TO START OF ACTUAL MSG     M1005 43300020
         AR    R7,R9               POINTER TO ROUTING-DESC CODES  M1005 43400020
         BCT   R9,*+4              SUBT 1 TO ADJUST FOR MVC COUNT M1005 43500020
         LA    R8,PRTBUFR+1                                       M1005 43600020
         CLC   0(7,R8),OURMSGID    IS THIS OLTEP MESSAGE          01906 43610001
         BC    7,DPR207A           NO. MOVE MSG INTO WTO AREA     01906 43620001
         EX    R9,MSGMVC1          YES. MOVE ID AND MSG INTO WTO AREA   43630001
         BC    15,DPR207B          CONTINUE NORMAL PROCESSING     01906 43640001
DPR207A  EQU   *                                                  01906 43650001
         EX    R9,MSGMVC           MOVE FROM PRINT BUFR TO WTO    M1005 43700020
DPR207B  EQU   *                                                  01906 43750001
         MVC   0(4,R7),=X'02000040'  LOAD ROUT-DESC CODES         M1005 43800020
         B     DPR208+4                                                 43900020
         SPACE                                                          44000020
* WTO/R EXECUTION                                                       44100020
         SPACE                                                          44200020
DPR208   L     R1,SAVER1           RESTORE WTO MESSAGE PTR              44300020
         WTO   MF=(E,(1))          DO WRITE TO OPERATOR                 44400020
         L     R5,MSGMOD                ADDR OF MSG MOD         S20203  44500020
         L     R5,0(R5)                 MSG 100I ADDR           S20203  44600020
         MVI   1(R5),X'54'              MSG LENGTH              S20203  44700020
         B     DPR210              TO EXIT                              44800020
         SPACE                                                          44900020
DPR209   L     R1,SAVER1           RESTORE WTOR MESSAGE PTR             45000020
         TM    CESWTR,RETAINAC          IS REI ACTIVE            S20203 45100020
         BZ    DPREI08                  NO. WTOR                 S20203 45200020
         LA    R10,TALKECB              ADDRESS OF TALK ECB      S20203 45500020
         ST    R10,ECB1R                STORE IN LIST            S20203 45600020
         LA    R10,REIECB               ADDRESS OF REMOTE ECB    S20203 45700020
         ST    R10,ECB2R                STORE IN LIST            S20203 45800020
         TM    CESWTR,REMNOMSG          DOES REMOTE GET MESSAGE   M4506 45830020
         BO    DPREI08                  NO. EXECUTE WTOR          M4506 45860020
         TM    CESWTR1,REMANS           WHEN REI ACTIVE IS RE AN S20203 45900020
         BZ    DPREI08                  NO.  CONTINUE            S20203 46000020
         TM    CESWTR2,REPLY00                                   S20203 46100020
         B     DPREI08                                         X02008   46200002
DPREI42  L     R10,REPECBAD             LOCAL ECB                S20203 47300020
         ST    R10,ECB3R                STORE IN LIST            S20203 47400020
         MVI   ECB3R,X'80'              SET HIGH ORDER BIT       S20203 47500020
DPREI30  WAIT  1,ECBLIST=ECB1R                                   S20203 47600020
         L     R9,ECB3R                 ADDR OF LOCAL ECB        S20203 47700020
         TM    0(R9),POSTBIT            HAS IFD105D BEEN ANS     S20203 47800020
         BZ    DPREI43                  NO. CHECK NEXT ECB       S20203 47900020
         OI    CESWTR,CENOMSG           YES. CE ANSWERED         S20203 48000020
         OI    CESWTR2,ONCOMM           ONSITE ANSWERED          S20203 48100020
         B     DPREI06                  CONTINUE                 S20203 48200020
DPREI43  TM    TALKECB,POSTBIT          DOES ONSITE WANT COMM    S20203 48300020
         BZ    DPREI31                  NO. BRANCH                M4501 48400020
DPREI24  MVC   RESAVE14(4),SAVE14       DAVE R 14                S20203 48500020
         OI    CESWTR2,COMMLOOP         SET SWITCH               S20203 48600020
         MVC   CSWTRSV(1),CESWTR        SAVE CESWTR               M4502 48630020
         NI    CESWTR,255-REMNOMSG      ZERO REMNOMSG             M4502 48660020
         OI    CESWTR,CENOMSG           ONSITE NO MSG            S20203 48700020
         LA    R1,71                    LENGTH OF MSG - 1         M4502 48800020
         LA    R6,DPRXLATE              ADDR OF TRANS TABLE      S20203 48900020
         L     R8,RTALKBUF              ADDR OF DED BUFFER       S20203 49000020
         EX    R1,REPXLATE              TRANSLATE MSG            S20203 49100020
         MVC   PRTBUFR+1(8),RTALKID     MSG ID                 S20203   49200020
         MVC   PRTBUFR+9(72),0(R8)      MOVE MSG TO PRTBUFR      S20203 49300020
         MVI   PRTBUFR+81,C' '          BLANK REST OF BUFFER     S20203 49400020
         MVC   PRTBUFR+82(41),PRTBUFR+81                         S20203 49500020
         NI    CESWTR1,255-RETRIEVE                               M4501 49600020
         MVC   SAVESW4(1),CESWT4                                  M4501 49700020
         MVI   CESWT4,X'00'                                       M4501 49800020
         B     DPRWRT                   BRANCH TO PWRITE         S20203 49900020
DPREI29  NI    CESWTR,255-CENOMSG       ZERO FLAG                S20203 50000020
         L     R10,RTALKBUF                                       M4501 50100020
         MVC   CESWT4(1),SAVESW4                                  M4501 50200020
         MVI   0(R10),C' '              CLEAR DED BUF            S20203 50300020
         MVC   1(71,R10),0(R10)                                  S20203 50400020
         L     R10,MSGMOD               MSG MODULE ADDR          S20203 50500020
         L     R1,72(0,R10)             MSG                      S20203 50600020
         MVC   1(3,R1),RTALKBUF+1       BUFFER ADDR TO PARMLIST  S20203 50700020
         MVI   0(R1),X'48'              LENGTH OF RESPONSE       S20203 50800020
         LA    R10,TALKECB              ECB ADDR                 S20203 50900020
         ST    R10,4(0,R1)              STORE IN PARMLIST        S20203 51000020
         SR    R10,R10                  ZERO REG 10              S20203 51100020
         ST    R10,TALKECB              STORE IN PARMLIST        S20203 51200020
         OI    CESWTR,REMNOMSG          RE NO MSG                S20203 51300020
         NI    CESWTR1,255-RETRIEVE                               M4501 51400020
         MVC   SAVESW4(1),CESWT4                                  M4501 51500020
         MVI   CESWT4,X'00'                                       M4501 51600020
         OI    CESWT4,X'20'             NO WAIT                  S20203 51700020
         B     DPRWTOR                                           S20203 51800020
DPREI40  MVC   CESWTR(1),CSWTRSV        RESTORE CESWTR            M4502 51900020
         MVC   CESWT4(1),SAVESW4                                  M4501 52000020
         NI    CESWTR2,255-COMMLOOP     RESET SWITCH             S20203 52100020
         MVC   SAVE14(4),RESAVE14       RESTORE R14              S20203 52200020
DPREI31  TM    REIECB,POSTBIT           DOES RE WANT COMM        S20203 52300020
         BZ    DPREI30                  NO REISSUE WAIT          S20203 52400020
DPREI25  OI    CESWTR1,RETRIEVE         SET RETRIEVE FLAG        S20203 52500020
         MVC   RESAVE14(4),SAVE14       SAVE R14                  M4502 52550020
         L     R1,ECB3R                 ADDR OF LOCAL ECB        S20203 52600020
         L     R15,MHRPTR               GET MHR PTR ADDR         S20203 52700020
         BALR  R14,R15                  BRANCH TO MSG HANDLER    S20203 52800020
         MVC   SAVE14(4),RESAVE14       RESTORE R 14              M4502 52850020
         NI    CESWTR1,255-RETRIEVE                               M4501 52920020
         TM    CESWTR,REMERR            REI ERROR                S20203 53000020
         BZ    DPREI27                  NO.BRANCH                S20203 53100020
         TM    CESWTR1,EDOTMSG          IS IT 105D                M4502 53140020
         BZ    DPREI45                  NO.DONT ZERO SWITCH       M4502 53180020
         NI    CESWTR,255-REMERR        ZERO ERROR FLAG           M4502 53220020
DPREI45  L     R9,ECB3R                 LOCAL ECB ADDR            M4502 53260020
         B     DPREI07                  BRANCH TO WAIT           S20203 53300020
DPREI27  TM    CESWTR1,ILLRESP+INFOMSG  IS REPLY OKAY            S20203 53400020
         BZ    DPREI06                  YES.CONTINUE             S20203 53500020
         NI    CESWTR1,255-ILLRESP-INFOMSG  ZERO FLAGS           S20203 53600020
         B     DPREI30                  REISSUE WAIT             S20203 53700020
DPREI08  WTOR  MF=(E,(1))               DO WTOR                  S20203 53800020
         TM    CESWT4,WAITFLG      IS A WAIT CALLED FOR                 53900020
         BO    DPR210              NO.  BRANCH TO EXIT                  54000020
         L     R9,REPECBAD         GET REPLY ECB ADDRESS                54100020
         TM    CESWTR,RETAINAC          IS REI ACTIVE            S20203 54200020
         BZ    DPREI07                  NO. GO WAIT FOR REPLY    S20203 54300020
         TM CESWTR,IMRESP               IMMEDIATE REPLY           M4502 54400020
         BO    DPREI42                  YES. BRANCH              S20203 54500020
         OI    CESWTR,CENOMSG           SET CENOMSG FLAG         S20203 54600020
DPREI07  WAIT  ,ECB=(R9)                 WAIT FOR REPLY          S20203 54700020
         TM    CESWTR1,RETRIEVE         CHECK IF WAIT ON REMOTE  S20203 54800020
         BO    DPREI02                  BRANCH TO MSG HANDLER    S20203 54900020
DPREI06  OI    CESWT4,RPLYFLG           SET REPLY FLAG           S20203 55000020
         NI    CESWT4,255-WTORFLG-WAITFLG  RESET THESE FLAGS            55100020
         B     DPR211                                                   55200020
DPREI05  TM    CESWTR1,ILLRESP+INFOMSG   IS REPLY OKAY         S20203   55300020
         BZ    DPREI04                  YES. CONTINUE            S20203 55400020
         NI    CESWTR1,255-ILLRESP-INFOMSG                        M4501 55500020
         B     DPREI07                  GO WAIT FOR NEW REPLY    S20203 55600020
DPREI04  NI    CESWTR,SETIM             ZERO IMMEDIATE FLAG      S20203 55700020
         NI    CESWTR1,SETRET           ZERO RETRIEVE FLAG        M4501 55800020
         TM    CESWTR,REMERR            REI ERROR                S20203 55900020
         BO    DPR210                   YES. GOTO END            S20203 56000020
         B     DPREI06                                            M4501 56100020
         SPACE                                                          56200020
* CLEAR FLAGS.  EXIT PPOW.                                              56300020
         SPACE                                                          56400020
DPR210   NI    CESWT4,X'40'        RESET FLAGS EXCEPT DPRFLG            56500020
         NI    CESWT5,255-HDRFLG-RSLTFLG  CLEAR THESE FLAGS             56600020
         TM    CESWTR1,REIENTRY         ENTRY FROM MSGHANDLER    S20203 56700020
         BO    DPREI41                  YES.DONT ZERO SWITCHES   S20203 56800020
         NI    CESWTR,255-CENOMSG           ZERO FLAGS            M4502 56820020
         TM    CESWTR2,WAIT3            IS WTOR FLAG ON           M4502 56840020
         BZ    DPREI46                  NO. DONT ZERO ONCOMM      M4502 56860020
         TM    CESWTR1,EDOTMSG          MSG 105D                  M4502 56880020
         BO    DPREI46                  YES. DONT ZERO FLAG       M4502 56900020
         NI    CESWTR2,255-ONCOMM       ZERO ONCOMM FLAG          M4502 56920020
DPREI46  NI    CESWTR1,255-RETRIEVE                               M4502 56940020
         TM    CESWTR2,COMMLOOP         INTERNAL PWT              M4502 56960020
         BO    DPREI41                  YES. DONT ZERO SWITCH     M4502 56980020
         NI    CESWTR,255-IMRESP        ZERO IM RESP FLAG         M4502 57000020
DPREI41  L     R14,SAVE14          RESTORE LINK ADDRESS          S20203 57100020
         BR    R14               RETURN TO CALLING ENTRY-EXIT RTN       57200020
         SPACE                                                          57300020
* TRANSLATE AND MOVE REPLY TO PRINT BUFFER.                             57400020
         SPACE                                                          57500020
DPR211   L     R8,REPLGTAD         REPLY ADDRESS                  01906 57600001
         LA    R6,DPRXLATE         TRANSLATE TABLE ADDRESS              57700020
         SR    R9,R9               CLEAR                                57800020
         IC    R9,REPLGTAD         GET REPLY LENGTH FOR TRANSLATE       57900020
         ST    R9,MHRPARM               MESSAGE LENGTH           S20203 58000020
         EX    R9,REPXLATE         TRANSLATE INBUFR                     58100020
         SPACE                                                          58200020
         MVI   PRTBUFR+1,C' '      LOAD BLANK                           58300020
         MVC   PRTBUFR+2(120),PRTBUFR+1  CLEAR WITH BLANKS              58400020
         MVI   PRTBUFR,X'09'       LOAD PRINT CTRL CHARC- SPACE 1 LINE  58500020
         L     R8,REPLGTAD         REPLY ADDRESS                  01906 58600001
         SR    R9,R9               CLEAR REG                            58700020
         CLI   REPLGTAD,X'48'      CHECK REPLY IS NOT OVER 72 CHARCS.   58800020
         BNH   DPR211A             NO.  LESS OR EQUAL                   58900020
         IC    R9,INBUFMAX         YES.  LOAD 72 AS REPLY LENGTH        59000020
         B     *+8                                                      59100020
DPR211A  IC    R9,REPLGTAD         REPLY LENGTH                         59200020
         LA    R7,1                                                     59300020
         SR    R9,R7               SUBT 1 TO ADJUST MVC COUNT           59400020
         EX    R9,DPRMVC           MOVE TO PRINT BUFFER                 59500020
         B     DPR201              GO PRINT REPLY                       59600020
         SPACE                                                          59700020
DPRMVC   MVC   PRTBUFR+1,0(R8)     MOVE TO PRINT BUFFER                 59800020
REPXLATE TR    0(0,R8),0(R6)       TRANSLATE REPLY - INBUFR             59900020
MSGMVC   MVC   12(0,R1),0(R8)      MOVE TO WTO MESSAGE            M1005 60000020
MSGMVC1  MVC   4(0,R1),0(R8)       MOVE TO WTO MESSAGE            01906 60050001
ECB1R    DC    F'0'                     ECBLIST FOR MULT WAIT    S20203 60100020
ECB2R    DC    F'0'                                              S20203 60200020
ECB3R    DC    F'0'                                              S20203 60300020
RESAVE14 DC    F'0'                                              S20203 60400020
SAVESW4  DC    X'00'                                              M4501 60480020
CSWTRSV  DC    X'00'                                              M4502 60560020
MHRPARM  DC    F'0'                                               M4501 60640020
RTALKID  DC    C'IFD255I '                                        M4501 60720020
OURMSGID DC    C'IFD100I'          OUR MESSAGE ID                 01906 60760001
         SPACE                                                          60900020
         SPACE                                                          61000020
DPRDCB   DCB   DSORG=PS,MACRF=WC,DDNAME=DIAGMSG,BLKSIZE=120,RECFM=FM,  X61100020
               SYNAD=DPRERR                                             61200020
         SPACE                                                          61300020
* SET RETURN CODE FOR ANY ERROR.                                        61400020
         SPACE                                                          61500020
DPRERR   CLI   RETCODE,X'00'       ANY CODE ALREADY SET                 61600020
         BZ    *+8                 YES   BYPASS                         61700020
         MVI   RETCODE,X'08'       NO.  SET ERROR RETURN CODE           61800020
         BR    R14                 RETURN TO CONTINUE PARALLEL PRINT    61900020
         SPACE                                                          62000020
         CNOP  0,4                                                      62100020
DPRECB1  DC    XL4'0'              DPRINT ECB                           62200020
WAITECB  DC    XL4'0'                                                   62300020
SAVE14   DC    XL4'0'                                                   62400020
INBUFMAX DC    X'4800'                                                  62500020
MSGMAX   DC    X'003D'             61 CHARACTERS MAX FOR WTO MSG  M1005 62600020
PB       EQU   *                                                        62700020
         SPACE 2                                                        62800001
*********************************************************************** 63100020
*     TRANSLATE TABLE FOR WTOR REPLY - LOWER TO UPPER CASE EBCDIC     * 63200020
*********************************************************************** 63300020
         SPACE                                                          63400020
DPRXLATE DC    256CL1'01'                                               63500020
         ORG   DPRXLATE                                                 63600020
         DC    X'00'                                                    63700020
         ORG   DPRXLATE+C' '       SPECIAL CHARACTERS             M1005 63800001
         DC    C' '                                                     63900020
         ORG   DPRXLATE+C'!'                                            64000020
         DC    C'!'                                                     64100020
         ORG   DPRXLATE+C'¢'                                            64200020
         DC    C'¢'                                                     64300020
         ORG   DPRXLATE+C'.'                                            64400020
         DC    C'.'                                                     64500020
         ORG   DPRXLATE+C'<'                                            64600020
         DC    C'<'                                                     64700020
         ORG   DPRXLATE+C'('                                            64800020
         DC    C'('                                                     64900020
         ORG   DPRXLATE+C'+'                                            65000020
         DC    C'+'                                                     65100020
         ORG   DPRXLATE+C'|'                                            65200020
         DC    C'|'                                                     65300020
         ORG   DPRXLATE+C'&&'                                           65400020
         DC    C'&&'                                                    65500020
         ORG   DPRXLATE+C'$'                                            65600020
         DC    C'$'                                                     65700020
         ORG   DPRXLATE+C'*'                                            65800020
         DC    C'*'                                                     65900020
         ORG   DPRXLATE+C')'                                            66000020
         DC    C')'                                                     66100020
         ORG   DPRXLATE+C';'                                            66200020
         DC    C';'                                                     66300020
         ORG   DPRXLATE+C'¬'                                            66400020
         DC    C'¬'                                                     66500020
         ORG   DPRXLATE+C'-'                                            66600020
         DC    C'-'                                                     66700020
         ORG   DPRXLATE+C'/'                                            66800020
         DC    C'/'                                                     66900020
         ORG   DPRXLATE+C','                                            67000020
         DC    C','                                                     67100020
         ORG   DPRXLATE+C'%'                                            67200020
         DC    C'%'                                                     67300020
         ORG   DPRXLATE+C'_'                                            67400020
         DC    C'_'                                                     67500020
         ORG   DPRXLATE+C'>'                                            67600020
         DC    C'>'                                                     67700020
         ORG   DPRXLATE+C'?'                                            67800020
         DC    C'?'                                                     67900020
         ORG   DPRXLATE+C':'                                            68000020
         DC    C':'                                                     68100020
         ORG   DPRXLATE+C'#'                                            68200020
         DC    C'#'                                                     68300020
         ORG   DPRXLATE+C'@'                                            68400020
         DC    C'@'                                                     68500020
         ORG   DPRXLATE+C''''                                           68600020
         DC    C''''                                                    68700020
         ORG   DPRXLATE+C'='                                            68800020
         DC    C'='                                                     68900020
         ORG   DPRXLATE+C'"'                                            69000020
         DC    C'"'                                                     69100020
         ORG   DPRXLATE+C'a'       LOWER CASE                     M1005 69200020
         DC    C'A'                                                     69300020
         ORG   DPRXLATE+C'b'                                            69400020
         DC    C'B'                                                     69500020
         ORG   DPRXLATE+C'c'                                            69600020
         DC    C'C'                                                     69700020
         ORG   DPRXLATE+C'd'                                            69800020
         DC    C'D'                                                     69900020
         ORG   DPRXLATE+C'e'                                            70000020
         DC    C'E'                                                     70100020
         ORG   DPRXLATE+C'f'                                            70200020
         DC    C'F'                                                     70300020
         ORG   DPRXLATE+C'g'                                            70400020
         DC    C'G'                                                     70500020
         ORG   DPRXLATE+C'h'                                            70600020
         DC    C'H'                                                     70700020
         ORG   DPRXLATE+C'i'                                            70800020
         DC    C'I'                                                     70900020
         ORG   DPRXLATE+C'j'                                            71000020
         DC    C'J'                                                     71100020
         ORG   DPRXLATE+C'k'                                            71200020
         DC    C'K'                                                     71300020
         ORG   DPRXLATE+C'l'                                            71400020
         DC    C'L'                                                     71500020
         ORG   DPRXLATE+C'm'                                            71600020
         DC    C'M'                                                     71700020
         ORG   DPRXLATE+C'n'                                            71800020
         DC    C'N'                                                     71900020
         ORG   DPRXLATE+C'o'                                            72000020
         DC    C'O'                                                     72100020
         ORG   DPRXLATE+C'p'                                            72200020
         DC    C'P'                                                     72300020
         ORG   DPRXLATE+C'q'                                            72400020
         DC    C'Q'                                                     72500020
         ORG   DPRXLATE+C'r'                                            72600020
         DC    C'R'                                                     72700020
         ORG   DPRXLATE+C's'                                            72800020
         DC    C'S'                                                     72900020
         ORG   DPRXLATE+C't'                                            73000020
         DC    C'T'                                                     73100020
         ORG   DPRXLATE+C'u'                                            73200020
         DC    C'U'                                                     73300020
         ORG   DPRXLATE+C'v'                                            73400020
         DC    C'V'                                                     73500020
         ORG   DPRXLATE+C'w'                                            73600020
         DC    C'W'                                                     73700020
         ORG   DPRXLATE+C'x'                                            73800020
         DC    C'X'                                                     73900020
         ORG   DPRXLATE+C'y'                                            74000020
         DC    C'Y'                                                     74100020
         ORG   DPRXLATE+C'z'                                            74200020
         DC    C'Z'                                                     74300020
         ORG   DPRXLATE+C'A'       UPPER CASE                     M1005 74400020
         DC    C'A'                                                     74500020
         ORG   DPRXLATE+C'B'                                            74600020
         DC    C'B'                                                     74700020
         ORG   DPRXLATE+C'C'                                            74800020
         DC    C'C'                                                     74900020
         ORG   DPRXLATE+C'D'                                            75000020
         DC    C'D'                                                     75100020
         ORG   DPRXLATE+C'E'                                            75200020
         DC    C'E'                                                     75300020
         ORG   DPRXLATE+C'F'                                            75400020
         DC    C'F'                                                     75500020
         ORG   DPRXLATE+C'G'                                            75600020
         DC    C'G'                                                     75700020
         ORG   DPRXLATE+C'H'                                            75800020
         DC    C'H'                                                     75900020
         ORG   DPRXLATE+C'I'                                            76000020
         DC    C'I'                                                     76100020
         ORG   DPRXLATE+C'J'                                            76200020
         DC    C'J'                                                     76300020
         ORG   DPRXLATE+C'K'                                            76400020
         DC    C'K'                                                     76500020
         ORG   DPRXLATE+C'L'                                            76600020
         DC    C'L'                                                     76700020
         ORG   DPRXLATE+C'M'                                            76800020
         DC    C'M'                                                     76900020
         ORG   DPRXLATE+C'N'                                            77000020
         DC    C'N'                                                     77100020
         ORG   DPRXLATE+C'O'                                            77200020
         DC    C'O'                                                     77300020
         ORG   DPRXLATE+C'P'                                            77400020
         DC    C'P'                                                     77500020
         ORG   DPRXLATE+C'Q'                                            77600020
         DC    C'Q'                                                     77700020
         ORG   DPRXLATE+C'R'                                            77800020
         DC    C'R'                                                     77900020
         ORG   DPRXLATE+C'S'                                            78000020
         DC    C'S'                                                     78100020
         ORG   DPRXLATE+C'T'                                            78200020
         DC    C'T'                                                     78300020
         ORG   DPRXLATE+C'U'                                            78400020
         DC    C'U'                                                     78500020
         ORG   DPRXLATE+C'V'                                            78600020
         DC    C'V'                                                     78700020
         ORG   DPRXLATE+C'W'                                            78800020
         DC    C'W'                                                     78900020
         ORG   DPRXLATE+C'X'                                            79000020
         DC    C'X'                                                     79100020
         ORG   DPRXLATE+C'Y'                                            79200020
         DC    C'Y'                                                     79300020
         ORG   DPRXLATE+C'Z'                                            79400020
         DC    C'Z'                                                     79500020
         ORG   DPRXLATE+C'0'                                            79600020
         DC    C'0'                                                     79700020
         ORG   DPRXLATE+C'1'                                            79800020
         DC    C'1'                                                     79900020
         ORG   DPRXLATE+C'2'                                            80000020
         DC    C'2'                                                     80100020
         ORG   DPRXLATE+C'3'                                            80200020
         DC    C'3'                                                     80300020
         ORG   DPRXLATE+C'4'                                            80400020
         DC    C'4'                                                     80500020
         ORG   DPRXLATE+C'5'                                            80600020
         DC    C'5'                                                     80700020
         ORG   DPRXLATE+C'6'                                            80800020
         DC    C'6'                                                     80900020
         ORG   DPRXLATE+C'7'                                            81000020
         DC    C'7'                                                     81100020
         ORG   DPRXLATE+C'8'                                            81200020
         DC    C'8'                                                     81300020
         ORG   DPRXLATE+C'9'                                            81400020
         DC    C'9'                                                     81500020
         SPACE                                                          81600020
         SPACE                                                          81700020
         SPACE                                                          81800020
DPRCOM   IFDCOM                                                         81900020
         END                                                            82000020
./  ADD  SSI=32570918,NAME=IFDOLT41
         TITLE 'IFDOLT41 CONVERT MODULE'                                00010000
         TITLE 'IFDOLT41 CONVERT MODULE'                                00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT41 CSECT ,                                                  0002  00050000
         ST    @E,12(0,@D)                                        0002  00060000
         ST    @0,20(0,@D)                                        0002  00070000
         STM   @2,@C,28(@D)                                       0002  00080000
         BALR  @4,0                                               0002  00090000
@PSTART  DS    0H                                                 0002  00100000
         USING @PSTART+00000,@4                                   0002  00110000
*         GEN(USING CONVMAP,1);                                         00120000
         USING CONVMAP,1                                                00130000
         DS    0H                                                       00140000
*         GENERATE DATA;                                                00150000
*         /************************************************************ 00160000
*         /*                        REGISTERS                         * 00170000
*         /************************************************************ 00180000
*         DCL PL REG(1) PTR(31);         /* REGISTER 1.               * 00190000
*         DCL ENDADDR REG(2) PTR(31);    /* REGISTER 2.               * 00200000
*         DCL R3 REG(3) PTR(24);         /* REGISTER 3.               * 00210000
*         DCL R5 REG(5) PTR(24);         /* REGISTER 5.               * 00220000
*         DCL R6 REG(6) PTR(24);         /* REGISTER 6.               * 00230000
*         DCL AXTBLPTR REG(7) PTR(31);   /* REGISTER 7.               * 00240000
*         DCL R7 REG(7) PTR(31);         /* REGISTER 7.               * 00250000
*         DCL R8 REG(8) PTR(31);         /* REGISTER 8.               * 00260000
*         DCL I REG(9) PTR(24);          /* REGISTER 9.               * 00270000
*         DCL R9 REG(9) PTR(31);         /* REGISTER 9.               * 00280000
*         DCL R11 REG(11) PTR(31);       /* REGISTER 11.              * 00290000
*         DCL R12 REG(12) PTR(31);       /* REGISTER 12.              * 00300000
*         DCL RC REG(15) PTR(24);        /* REGISTER 15.              * 00310000
*         DCL LOW15 CHAR(4) BDY(WORD) INIT('00007FFF'X);                00320000
*         DCL MACROLVL CHAR(1) GENERATED;                               00330000
*         DCL FROMADDR PTR(31) GENERATED;                               00340000
*         DCL TOADDR PTR(31) GENERATED;                                 00350000
*         DCL FLGCOUNT PTR(16) GENERATED;                               00360000
*         DCL 1 CNVCT BASED(ADDR(FLGCOUNT)),                            00370000
*               3 HEXBIT BIT(1),         /* TYPE OF CONVERSION FLAG.  * 00380000
*               3 * BIT(14),             /* COUNT.                    * 00390000
*               3 LSTCNT BIT(1);         /* ODD OR EVEN COUNT.        * 00400000
*         DCL AXATBL CHAR(16) INIT('0123456789ABCDEF');                 00410000
*         DCL AXFLGA CHAR(1);                                           00420000
*         DCL INBUF CHAR(1) BASED(R5);                                  00430000
*         DCL 1 OUTAREA CHAR(2) BASED(R6),                              00440000
*               3 OUTBUF CHAR(1),                                       00450000
*               3 OUTBUF1 CHAR(1);                                      00460000
*         DCL AXATBLEL CHAR(1) BASED(AXTBLPTR);                         00470000
*         RESTRICT(1,2,3,5,6,7,9,11,12);                                00480000
*         IF MACROLVL='02'X THEN    /* IS THIS MACRO LEVEL SUPPORTED*/  00490000
         CLI   MACROLVL,X'02'                                     0030  00500000
*           GO TO CNVERT00;         /* YES, CONTINUE.               */  00510000
         BC    08,CNVERT00                                        0031  00520000
*         RC=4;                     /* NO, SET REG. 15 TO 04 AND    */  00530000
         LA    @F,4                                               0032  00540000
*         GO TO CNVERT07;           /* RETURN TO CALLER.            */  00550000
         BC    15,CNVERT07                                        0033  00560000
* CNVERT00:                                                             00570000
*         /************************************************************ 00580000
*         /*               SETUP TO PERFORM CONVERSION                * 00590000
*         /************************************************************ 00600000
*         R5=FROMADDR;              /* GET FROM ADDRESS INTO REG. 5.*/  00610000
CNVERT00 L     @5,FROMADDR                                        0034  00620000
*         R6=TOADDR;                /* GET TO ADDRESS INTO REG. 6.  */  00630000
         L     @6,TOADDR                                          0035  00640000
*         R7=FLGCOUNT;              /* GET COUNT IN REG. 7.         */  00650000
         MVC   @TEMP2+2(2),FLGCOUNT                               0036  00660000
         L     @7,@TEMP2                                          0036  00670000
*         R7=R7&LOW15;                                                  00680000
         N     @7,LOW15                                           0037  00690000
*         IF R7=0 THEN              /* IF COUNT IS ZERO, RETURN TO  */  00700000
         LTR   @7,@7                                              0038  00710000
*           GO TO CNVERT06;         /* CALLER. OTHERWISE CONVERT.   */  00720000
         BC    08,CNVERT06                                        0039  00730000
*         AXFLGA='00'X;             /* CLEAR FLAG.                  */  00740000
         MVI   AXFLGA,X'00'                                       0040  00750000
*         ENDADDR=R5+R7;            /* FIND END OF CONVERSION DATA. */  00760000
         LR    @2,@7                                              0041  00770000
         AR    @2,@5                                              0041  00780000
*         R3=ADDR(AXATBL);          /* SET POINTER TO CHAR TABLE.   */  00790000
         LA    @3,AXATBL                                          0042  00800000
*         IF HEXBIT='1'B THEN       /* IS CONVERSION HEX TO EBCDIC. */  00810000
         TM    CNVCT,B'10000000'                                  0043  00820000
*           GO TO CNVERT05;         /* YES, GO TO HEX TO EBCDIC     */  00830000
         BC    01,CNVERT05                                        0044  00840000
*                                   /* ROUTINE.                     */  00850000
* CNVERT01:                                                             00860000
*         /************************************************************ 00870000
*         /*                                                          * 00880000
*         /*                EBCDIC TO HEX CONVERSION                  * 00890000
*         /*                                                          * 00900000
*         /************************************************************ 00910000
*         DO I=16 TO 1 BY -1;       /* SEE IF INPUT CHAR HAS A VALID*/  00920000
CNVERT01 LA    @9,16                                              0045  00930000
*         IF INBUF=AXATBL(I) THEN   /* HEX NUMBER EQUIVALENT.       */  00940000
@DO9FF   LR    @8,@9                                              0046  00950000
         LA    @E,AXATBL-1(@8)                                    0046  00960000
         CLC   0(1,@5),0(@E)                                      0046  00970000
*           GO TO CNVERT02;         /* YES, CONVERT IT.             */  00980000
         BC    08,CNVERT02                                        0047  00990000
*         END;                                                          01000000
*         RC=8;                     /* NO, SET RETURN CODE TO       */  01010000
         BCT   @9,@DO9FF                                          0048  01020000
         LA    @F,8                                               0049  01030000
*         PL=R5;                    /* INDICATE FAILURE OCCURED     */  01040000
         LR    @1,@5                                              0050  01050000
*                                   /* DURING AN EH CONVERSION AND  */  01060000
*                                   /* PLACE ADDRESS OF FAILING     */  01070000
*                                   /* CHARACTER IN REGISTER 1 AND  */  01080000
*         GO TO CNVERT07;           /* RETURN TO CALLER             */  01090000
         BC    15,CNVERT07                                        0051  01100000
* CNVERT02:                                                             01110000
*         R11=I-1;                  /* SAVE EQUIVALENT HEX CHAR.    */  01120000
CNVERT02 LH    @B,@D1                                             0052  01130000
         AR    @B,@9                                              0052  01140000
*         IF AXFLGA¬='00'X THEN     /* IF 2ND BYTE, GO TO ROUTINE   */  01150000
         CLI   AXFLGA,X'00'                                       0053  01160000
*           GO TO CNVERT03;         /* THAT WILL OUTPUT HEX EQUIV.  */  01170000
         BC    07,CNVERT03                                        0054  01180000
*         R12=R11*16;               /* PUT FIRST HEX CHAR IN REG. 12*/  01190000
         LR    @F,@B                                              0055  01200000
         SLA   @F,4                                               0055  01210000
         LR    @C,@F                                              0055  01220000
*         AXFLGA='F0'X;             /* SET FLAG TO NON-ZERO TO      */  01230000
         MVI   AXFLGA,X'F0'                                       0056  01240000
*                                   /* INDICATE ONLY ONE CHARACTER  */  01250000
*                                   /* HAS BEEN CONVERTED.          */  01260000
*         GO TO CNVERT04;           /* GO TO ROUTINE THAT DETERMINES*/  01270000
         BC    15,CNVERT04                                        0057  01280000
*                                   /* IF MORE CONVERSION MUST BE   */  01290000
*                                   /* DONE.                        */  01300000
* CNVERT03:                                                             01310000
*         /************************************************************ 01320000
*         /*       OUTPUT ROUTINE FOR EBCDIC TO HEX CONVERSION        * 01330000
*         /************************************************************ 01340000
*         R12=R12|R11;              /* COMBINE TWO HEX CHARACTERS.  */  01350000
CNVERT03 OR    @C,@B                                              0058  01360000
*         GEN(STC   R12,0(R6));     /* PUT CHAR IN OUTPUT AREA      */  01370000
         STC   R12,0(R6)                                                01380000
         DS    0H                                                       01390000
*         R6=R6+1;                  /* STEP TO ADDRESS BY 1         */  01400000
         LA    @6,1(0,@6)                                         0060  01410000
*         AXFLGA='00'X;             /* SET FLAG TO ZERO             */  01420000
         MVI   AXFLGA,X'00'                                       0061  01430000
* CNVERT04:                                                             01440000
*         /************************************************************ 01450000
*         /*             IS MORE CONVERSION NECESSARY                 * 01460000
*         /************************************************************ 01470000
*         R5=R5+1;                  /* STEP FROM ADDRESS BY 1       */  01480000
CNVERT04 LA    @5,1(0,@5)                                         0062  01490000
*         IF R5<ENDADDR THEN        /* IS CONVERSION DONE. NO, GO   */  01500000
         CR    @5,@2                                              0063  01510000
*           GO TO CNVERT01;         /* AND DO IT.                   */  01520000
         BC    04,CNVERT01                                        0064  01530000
*         IF LSTCNT='1'B THEN       /* YES, WAS CONVERSION FROM EH  */  01540000
         TM    CNVCT+1,B'00000001'                                0065  01550000
         BC    12,@9FB                                            0065  01560000
*           GEN(STC   R12,0(R6));   /* FOR AN ODD NUMBER OF CHAR.   */  01570000
         STC   R12,0(R6)                                                01580000
         DS    0H                                                       01590000
*         GO TO CNVERT06;           /* NO, GO TO FINISH ROUTINE.    */  01600000
         BC    15,CNVERT06                                        0067  01610000
*                                   /* YES, PUT CONVERTED CHAR      */  01620000
*                                   /* IN OUTPUT AREA.              */  01630000
* CNVERT05:                                                             01640000
*         /************************************************************ 01650000
*         /*                                                          * 01660000
*         /*                HEX TO EBCDIC CONVERSION                  * 01670000
*         /*                                                          * 01680000
*         /************************************************************ 01690000
*         R9=INBUF;                 /* GET INPUT CHAR. INTO REG. 9. */  01700000
CNVERT05 SR    @9,@9                                              0068  01710000
         IC    @9,0(0,@5)                                         0068  01720000
*         R11=R9/16;                /* GET BITS 0-3 OF INPUT CHAR   */  01730000
         LR    @E,@9                                              0069  01740000
         SRA   @E,4                                               0069  01750000
         LR    @B,@E                                              0069  01760000
*                                   /* INTO REG. 11.                */  01770000
*         R9=R9&15;                 /* GET BITS 4-7 OF INPUT CHAR   */  01780000
         N     @9,@D2                                             0070  01790000
*                                   /* INTO REG. 9.                 */  01800000
*         AXTBLPTR=R3+R11;          /* SET POINTER TO CHAR TABLE.   */  01810000
         LR    @7,@B                                              0071  01820000
         AR    @7,@3                                              0071  01830000
*         OUTBUF=AXATBLEL;          /* STORE FIRST EBCDIC CHAR IN   */  01840000
         MVC   0(1,@6),0(@7)                                      0072  01850000
*                                   /* OUTPUT AREA.                 */  01860000
*         AXTBLPTR=R3+R9;           /* SET POINTER TO CHAR TABLE.   */  01870000
         LR    @7,@9                                              0073  01880000
         AR    @7,@3                                              0073  01890000
*         OUTBUF1=AXATBLEL;         /* STORE SECOND EBCDIC CHAR IN  */  01900000
         MVC   1(1,@6),0(@7)                                      0074  01910000
*                                   /* OUTPUT AREA.                 */  01920000
*         R6=R6+2;                  /* STEP TO ADDRESS BY 2.        */  01930000
         LA    @6,2(0,@6)                                         0075  01940000
*         R5=R5+1;                  /* STEP FROM ADDRESS BY 1.      */  01950000
         LA    @5,1(0,@5)                                         0076  01960000
*         IF R5<ENDADDR THEN        /* IS CONVERSION DONE. NO, GO   */  01970000
         CR    @5,@2                                              0077  01980000
*           GO TO CNVERT05;         /* AND DO IT. YES, EXIT.        */  01990000
         BC    04,CNVERT05                                        0078  02000000
* CNVERT06:                                                             02010000
*         /************************************************************ 02020000
*         /*         FINISH ROUTINE FOR SUCCESSFUL CONVERSION         * 02030000
*         /************************************************************ 02040000
*         RC=0;                     /* SET RETURN CODE TO ZERO TO   */  02050000
CNVERT06 SR    @F,@F                                              0079  02060000
*                                   /* INDICATE SUCCESSFUL CONVERT  */  02070000
* CNVERT07:                                                             02080000
*         /************************************************************ 02090000
*         /*                                                          * 02100000
*         /*              RESTORE REGISTERS AND RETURN                * 02110000
*         /*                                                          * 02120000
*         /************************************************************ 02130000
*         RETURN;                   /* RETURN TO CALLER             */  02140000
*         END;                                                          02150000
@EL01    L     @E,12(0,@D)                                        0081  02160000
         L     @0,20(0,@D)                                        0081  02170000
         LM    @2,@C,28(@D)                                       0081  02180000
         BCR   15,@E                                              0081  02190000
@DATA1   EQU   *                                                        02200000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           02210000
@1       EQU   01                                                       02220000
@2       EQU   02                                                       02230000
@3       EQU   03                                                       02240000
@4       EQU   04                                                       02250000
@5       EQU   05                                                       02260000
@6       EQU   06                                                       02270000
@7       EQU   07                                                       02280000
@8       EQU   08                                                       02290000
@9       EQU   09                                                       02300000
@A       EQU   10                                                       02310000
@B       EQU   11                                                       02320000
@C       EQU   12                                                       02330000
@D       EQU   13                                                       02340000
@E       EQU   14                                                       02350000
@F       EQU   15                                                       02360000
@D2      DC    F'15'                                                    02370000
@D1      DC    H'-1'                                                    02380000
         DS    0F                                                       02390000
         DS    0D                                                       02400000
@DATA    EQU   *                                                        02410000
PL       EQU   00000001            FULLWORD POINTER REGISTER            02420000
ENDADDR  EQU   00000002            FULLWORD POINTER REGISTER            02430000
R3       EQU   00000003            3  BYTE  POINTER REGISTER            02440000
R5       EQU   00000005            3  BYTE  POINTER REGISTER            02450000
R6       EQU   00000006            3  BYTE  POINTER REGISTER            02460000
AXTBLPTR EQU   00000007            FULLWORD POINTER REGISTER            02470000
R7       EQU   00000007            FULLWORD POINTER REGISTER            02480000
R8       EQU   00000008            FULLWORD POINTER REGISTER            02490000
I        EQU   00000009            3  BYTE  POINTER REGISTER            02500000
R9       EQU   00000009            FULLWORD POINTER REGISTER            02510000
R11      EQU   00000011            FULLWORD POINTER REGISTER            02520000
R12      EQU   00000012            FULLWORD POINTER REGISTER            02530000
RC       EQU   00000015            3  BYTE  POINTER REGISTER            02540000
LOW15    EQU   *                   4 BYTE(S) ON WORD                    02550000
         DC    X'00007FFF'                                              02560000
AXATBL   EQU   *                   16 BYTE(S)                           02570000
         DC    C'0123456789ABCDEF'                                      02580000
AXFLGA   EQU   @DATA+00000020      1 BYTE(S)                            02590000
INBUF    EQU   00000000            1 BYTE(S)                            02600000
OUTAREA  EQU   00000000            2 BYTE(S)                            02610000
OUTBUF   EQU   OUTAREA+00000000    1 BYTE(S)                            02620000
OUTBUF1  EQU   OUTAREA+00000001    1 BYTE(S)                            02630000
AXATBLEL EQU   00000000            1 BYTE(S)                            02640000
         ORG   @DATA                                                    02650000
         DS    00000021C                                                02660000
@TEMPS   DS    0F                                                       02670000
@TEMP2   DC    F'0'                                                     02680000
CNVPATCH DC    7XL2'0700'                                               02690000
CONVMAP  DSECT                                                          02700000
$CNVTRMG DC    XL1'0' .            CONTROL PROGRAM FLAGS                02710000
$CNVLEVL DC    XL1'0' .            MACRO LEVEL                          02720000
$CNVIDNT DC    XL2'0' .            MACRO ID                             02730000
$CNVFROM DC    A(0) .              FROM ADDRESS                         02740000
$CNVTO   DC    A(0) .              TO ADDRESS                           02750000
$CNVCT   DC    XL2'0' .            TYPE & COUNT                         02760000
FROMADDR EQU   $CNVFROM                                                 02770000
TOADDR   EQU   $CNVTO                                                   02780000
FLGCOUNT EQU   $CNVCT                                                   02790000
MACROLVL EQU   $CNVLEVL                                                 02800000
CNVCT    EQU   FLGCOUNT+00000000   2 BYTE(S) ON WORD                    02810000
HEXBIT   EQU   CNVCT+00000000      1 BIT(S)                             02820000
A00000   EQU   CNVCT+00000000      14 BIT(S)                            02830000
LSTCNT   EQU   CNVCT+00000001      1 BIT(S)                             02840000
@DATEND  EQU   *                                                        02850000
@9FB     EQU   CNVERT06                                                 02860000
CNVERT07 EQU   @EL01                                                    02870000
         END                                                            02880000
./  ADD  SSI=33031265,NAME=IFDOLT42
         TITLE 'IFDOLT42  MORECORE MODULE'                              00200002
IFDOLT42 CSECT          ENTRY POINT                                     00400002
*********************************************************************** 00600002
*                            PROLOGUE                                 * 00800002
*                                                                     * 01000002
*                                                                     * 01200002
*   STATUS:                                                           * 01400002
*           CHANGE LEVEL 002                      OCT 4, 1971         * 01600002
*           THIS IS A RE-WRITE OF THE MORECORE MODULE AND IS          * 01800002
*           APPLICABLE TO RELEASES AFTER                              * 02000002
*                 1. RELEASE 21 OF OS                                 * 02200002
*                    AND TO ALL RELEASES OF VS1 AFTER REL 1          *  02400002
*                    AND VS2 REL 1..                                 *  02500002
*                                                                     * 02600002
*                                                                     * 02800002
*                                                                     * 03000002
*   FUNCTION:                                                         * 03200002
*           THE FUNCTION OF THIS MODULE IS TO ALLOCATE MAIN STORAGE   * 03400002
*           SPACE TO THE OLT  VIA THE MORECORE MACRO INSTRUCTION.     * 03600002
*           THIS MODULE WILL LOCATE THE MORECORE AREA AND THE TOTAL   * 03800002
*           NUMBER OF BYTES AVAILABLE TO THE OLT FOR MORECORE         * 04000002
*           REQUESTS FROM THE COMMON AREA.                            * 04200002
*                                                                     * 04400002
*           THE REQUESTOR CAN REQUEST CORE IN THREE FORMATS,          * 04600002
*           THEY ARE AS FOLLOWS.                                      * 04800002
*                                                                     * 05000002
*             A. BY SPECIFYING ONLY ONE PARAMETER , THAT IS,          * 05200002
*                THE MAXIMUM NUMBER OF BYTES THE OLT  MUST            * 05400002
*                HAVE TO CONTINUE.                                    * 05600002
*                                                                     * 05800002
*                                                                     * 06000002
*             B. BY SPECIFYING A MAXIMUM  AND A MINIMUM               * 06200002
*                NUMBER OF BYTES THE OLT MUST  HAVE  TO               * 06400002
*                CONTINUE                                             * 06600002
*                                                                     * 06800002
*                                                                     * 07000002
*             C. BY SPECIFYING THE MAXIMUM, THE MINIMUM AND           * 07200002
*                SETTING AN INDICATOR SPECIFYING  THAT IF THE         * 07400002
*                MAXIMUM CANNOT BE ALLOCATED, TO ALLOCATE THE LARGEST * 07600002
*                VALUE BETWEEN MAXIMUM AND MINIMUM. THIS              * 07800002
*                IS FOR LEVEL THREE CALLS ONLY                        * 08000002
*                                                                     * 08200002
*           TO QUALIFY FOR A MORECORE ALLOCATION THE OLT MOST         * 08400002
*           HAVE SPECIFAED 1T LEAST 24  (TWENTY FOUR) BYTES           * 08600002
*           OF MORE-CORE SPACE IN THE INITIALIZE PORTION OF           * 08800002
*           THE OLT. ALSO, NO LESS THAN A DOUBLE WORD OF              * 09000002
*           MAIN STORAGE SPACE WILL BE ALLOCATED.                     * 09200002
*                                                                     * 09400002
*                                                                     * 09600002
*           THIS MODULE WILL, ON THE FIRST CALL BULID THE             * 09800002
*           NECESSARY CONTROL BLOCKS TO INDICATE THE BEGINNING        * 10000002
*           AND END OF THE MORECORE AREA. EACH SUBSEQUENT CALL        * 10200002
*           WILL MERGE ALL CONSECTIVE FREE AREAS BEFORE               * 10400002
*           ATTEMPTING TO ALLOCATE MAIN STORAGE SPACE.                * 10600002
*                                                                     * 10800002
*                                                                     * 11000002
*   ENTRY POINT:                                                      * 11200002
*           IFDOLT42 IS THE MAIN AND OLNY ENTRY POINT TO              * 11400002
*           THIS MODULE.                                              * 11600002
*                                                                     * 11800002
*                                                                     * 12000002
*   INPUT:                                                            * 12200002
*           REGISTER TWO WILL POINT TO THE OLTEP COMMON AREA          * 12400002
*           REGISTER ONE WILL POINT TO THE OLTS PARAMETER LIST        * 12600002
*           REGISTER THIRTEEN WILL POINT TO THE OLTS SAVE AREA        * 12800002
*           REGISTER FOURTEEN WILL POINT TO THE RETURN ADDRESS        * 13000002
*                                                                     * 13200002
*   OUTPUT:                                                           * 13400002
*           IF UNSUCCESSFUL REGISTER FIFTEEN WILL BE AS FOLLOWS:      * 13600002
*                                                                     * 13800002
*              R15 = 04  FOR FUNCTION NOT AVAILABLE, THAT IS          * 14000002
*                     A. THE MACRO LEVEL IS INCORRECT                 * 14200002
*                     B. THE OLT REQUESTED A NEGITIVE AMOUNT          * 14400002
*                        OF CORE, OR A ZERO AMOUNT OF CORE.           * 14600002
*              R15 = 08 WHEN CORE COULD NOT BE ALLOTTED TO THE        * 14800002
*                    OLT.                                             * 15000002
*                                                                     * 15200002
*           IF SUCCESSFUL R15 WILL ALWAYS CONTAIN 00.                 * 15400002
*              ALSO R1 = ADDRESS OF MORECORE AREA USEABLE BY          * 15600002
*                        THE OLT                                      * 15800002
*                                                                     * 16000002
*                   R0 = THE NUMBER OF BYTES AVAILABLE TO THE         * 16200002
*                        OLT FOR MORECORE USEAGE.                     * 16400002
*                                                                     * 16600002
*                                                                     * 16800002
*   EXTERNAL ROUTINES:                                                * 17000002
*           THERE ARE NO EXTERNAL ROUTINES.                           * 17200002
*                                                                     * 17400002
*                                                                     * 17600002
*   EXITS NORMAL:                                                     * 17800002
*           NORMAL EXITS ARE MADE AT THE LABEL EXIT00                 * 18000002
*                                                                     * 18200002
*                                                                     * 18400002
*   EXITS ERROR:                                                      * 18600002
*           ERROR EXITS ARE MADE AT THE LABELS EXIT04                 * 18800002
*           AND EXIT08.                                               * 19000002
*                                                                     * 19200002
*                                                                     * 19400002
*   TABLES AND WORK AREAS:                                            * 19600002
*           A. OLTEPS COMMON AREA                                     * 19800002
*           B. OLTS MORECORE AREA WHICH IS ZERO UPON ENTRY            * 20000002
*                                                                     * 20200002
*********************************************************************** 20400002
         EJECT                                                          20600002
*********************************************************************** 20800002
*                           GENERAL PURPOSE                             21000002
*                           REGISTER EQUATES                            21200002
*********************************************************************** 21400002
WORKREG1 EQU   15                 USED FOR ARITWMETICS.                 21600002
PARMREG  EQU   1                  POINTS TO OLTS PARMETER LIST.         21800002
COMMON   EQU   2                  POINTS TO OLTEP COMMON AREA.          22000002
MAX      EQU   3                  CONTAINS MAXIMUM CORE OLT REQS        22200002
MIN      EQU   4                  CONTAINS MINIMUM CORE OLT REQS        22400002
HEAD     EQU   5                  POINTS TO BEGIN OF MORECORE           22600002
*                                 SPACE.                                22800002
TOTAL    EQU   6                  CONTAIN TOTAL NUMBER OF BYTES         23000002
*                                 AVAIL. TO OLT-OLTEP MORECORE          23200002
*                                 WORKINGS.                             23400002
NEWHEAD  EQU   7                  POINTS TO NEXT SLOT OF AVAIL.         23600002
*                                 CORE WHEN A SPLIT OF A LARGE          23800002
*                                 BLOCK OF CORE IS IN PROCESS.          24000002
SIZE     EQU     8                CONTAINS NUMBER OF BYTES AVAIL        24200002
*                                 FOR A BLOCK OF MORECORE SPACE.        24400002
NEXT     EQU   9                  POINTS TO NEXT AREA OF MORE-          24600002
*                                 CORE SPACE.                           24800002
NEWSIZE  EQU   10                 CONTAINS SIZE OF SPLIT BLOCK          25000002
*                                 DURING SPLIT PROCESSING               25200002
NEWNEXT  EQU   12                 POINTS TO SPLIT BLOCK DURIN           25400002
*                                 SPLIT PROCESSING                      25600002
BASEREG  EQU   11                 BASE REGISTER FOR IFDOLT42            25800002
SAVE     EQU   13                 SAVE AREA POINTER                     26000002
EXIT     EQU   14                 RETURN POINT IN OLT                   26200002
MINPASS  EQU   14                 CONTAINS MIN ON SECOND PASS           26400002
RETURNRG EQU   15               RETURN CODE REGISTER                    26600002
         EJECT                                                          26800002
*********************************************************************** 27000002
*                                                                     * 27200002
*  DISPLACEMENTS, LENGTH CODES, RETURN CODES, MASKS, AND LOAD         * 27400002
*  ADDRESS CONSTANTS                                                  * 27600002
*                                                                     * 27800002
*********************************************************************** 28000002
ZERO     EQU   0                  REGISTER ZERO AND CONSTANT ZERO       28200002
D0       EQU   0                  DISPLACEMENT OF ZERO                  28400002
D1       EQU   1                  DISPLACEMENT OF ONE                   28600002
TWO      EQU   2                  DISPLACEMENT OF TWO                   28800002
THREE    EQU   3                  DISPLACEMENT OF THREE                 29000002
L4       EQU   4                  LENGTH OF FOUR                        29200002
D4       EQU   4                  DISPLACEMENT OF FOUR                  29400002
D7       EQU   7                  DISPLACEMENT OF SEVEN                 29600002
D8       EQU   8                  DISPLACEMENT OF EIGHT                 29800002
EIGHT    EQU   8                  DISPLACEMENT OF EIGHT                 30000002
D12      EQU   12                 DISPLACEMENT OF 12                    30200002
TWELVE   EQU   12                 DISPLACEMENT VALUE                    30400002
COND12   EQU   12                 BRANCH MASK                           30600002
D20      EQU   20                 DISPLACEMENT OF 20                    30800002
D28      EQU   28                 DISPLACEMENT OF 28                    31000002
HEX00    EQU   X'00'              MASK FIELD OF 00                      31200002
HEX03    EQU   X'03'              MASK FIELD OF 03                      31400002
HEX04    EQU   X'04'              MASK FIELD OF 04                      31600002
HEX08    EQU   X'08'              MASK FIELD OF 08                      31800002
HEX10    EQU   X'10'              MASK FIELD OF 10                      32000002
HEX18    EQU   X'18'              MASK FIELD OF 18                      32200002
HEX80    EQU   X'80'              MASK FIELD OF 80                      32400002
HEXEF    EQU   X'EF'              MASK FIELD OF EF                      32600002
*********************************************************************** 33200002
*                STANDARD  LINKAGE  CONVENTIONS  FOLLOW               * 33400002
*********************************************************************** 33600002
         SAVE  (14,12),,IFDOLT42&SYSDATE SAVE MODID, DATE & REGS        33800002
*                                 SAVE REGISTERS IN OLT SAVE            34000002
*                                 AREA                                  34200002
         BALR  BASEREG,ZERO       ESTABLISH ADDRESSABILITY              34400002
         USING *,BASEREG          OBTAIN ADDR OF BASE                   34600002
         USING AAAAA,COMMON                                             34800002
         SPACE 2                                                        35000002
         MVC   SAVE1(72),D0(SAVE) SAVE HIS REGISERS IN MY AREA          35200002
         LM    MAX,MIN,D4(PARMREG)                                      35400002
*                                 OBTAIN PARMETES PASSED FOR            35600002
*                                 SIZE OF CORE REQUIRED                 35800002
         CLI   D1(PARMREG),HEX03  IS MACRO LEVEL OK                     36000002
         BH    EXIT04             NO, RETURN CODE 04 ***ERROR***        36200002
         LTR   MAX,MAX            IS AMOUNT NEEDED FOR MAX ZERO         36400002
*                                 OR MINUS                              36600002
         BC    COND12,EXIT04      YES, RETURN CODE 04 **ERROR***        36800002
         SPACE 2                                                        37000002
*                                 MACRO LEVEL IS OK AS IS AMOUNT        37200002
*                                 OF CORE REQUESTED.                    37400002
         SPACE 2                                                        37600002
*                                 OBTAIN MORCORE PARAMETRS              37800002
         LM    HEAD,TOTAL,PLKMOR+D8                                     38000002
*                                 ADDRESS OF MORECORE AREA              38200002
*                                 AND THE NUMBER OF BYTES               38400002
*                                 AVAILABLE.                            38600002
         LTR   HEAD,HEAD          IS THIS THE FIRST PASS THRU           38800002
         BNZ   MERGE01            IF THIS IS NOT THE FIRST PASS         39000002
*                                 SKIP THE FOLLOWING SET UP SECTION     39200002
         LM    HEAD,TOTAL,PARTITEM GET OLT AREA POINTER                 39400002
*                                 AND AND OLT PARTITION SIZE            39600002
         A     HEAD,PARTITEM+D8 ADD IN ROOT +PLINK SIZE                 39800002
*                                 TO GET MORECORE AREA ADDRESS          40000002
         S     TOTAL,PARTITEM+D8 GET NO. OF MORECORE BYTES AVAIL BY     40200002
*                                 TAKING OLT SIZE FROM GETMAIN AND      40400002
*                                 SUBTRACTING OUT THE ROOT + PLINK SIZE 40600002
         LA    WORKREG1,HEX18     SET MINIMUM CORE SIZE OLTEP CAN       41400002
*                                 OPERATE IN                            41600002
         CR    TOTAL,WORKREG1     IS THERE ENOUGH ROOM FOR              41800002
*                                 MORECORE REQUESTS                     42000002
         BL    EXIT08A            NO, RETURN CODE 08                    42200002
         ST    TOTAL,PLKMOR+D12   SAVE BYTE COUNT OF MORE CORE AREA     42220002
*                                                               YM04752 42240002
         ST    HEAD,PLKMOR+D8     SAVE MORECORE BEGIN ADDRESS           42260002
*                                 FIRST PASS.                   YM04752 42280002
         EJECT                                                          42300002
         SPACE 2                                                        42400002
*                                 PROCEED TO SET UP PRIMARY             42600002
*                                 CONTROL BLOCKS USED DURING            42800002
*                                 MORECORE REQUESTS                     43000002
         SPACE 2                                                        43200002
         LA    WORKREG1,HEX08     OBTAIN MORECORE ENDING ADDRESS        43400002
         SR    TOTAL,WORKREG1                                           43600002
*                                 OBTAIN END ADDR FOR CONTROL           43800002
         LA    WORKREG1,D0(HEAD,TOTAL) BLOCK AT MORECORE END            44000002
         MVI   D0(WORKREG1),HEXEF SET END ID AT MORE CORE AREA END      44200002
*                                 ENDING ADDRESS.                       44400002
         ST    WORKREG1,D4(HEAD)  STORE POINTER TO NEXT M.C.AREA        44600002
         LA    WORKREG1,HEX08     GET CONSTANT TO  OBTAIN               44800002
         SR    TOTAL,WORKREG1     REAL AVAILABLE CORE FOR MORE CORE     45000002
         ST    TOTAL,D0(HEAD)     STORE NUMBER OF BYTES AVAIL.          45200002
         OI    PLKMOR+D8,HEX80    SET FLAG TO BYPASS BUILD OF HEAD      45400002
*                                 ROUTINE.                              45600002
         XR    TOTAL,TOTAL        ZERO OUT REG FOR MAX AVAIL PASS       45800002
         ST    TOTAL,PLKMOR+D12   SAVE MAX AMOUNT AVAIL IN              46000002
*                                 OLTEP COMMON AREA                     46200002
         EJECT                                                          46400002
*                                 THIS SECTION OF CODE WILL MERGE       46600002
*                                 ALL FREE CONTIGOUS BLOCK OF           46800002
*                                 MORECORE SPACE                        47000002
         SPACE 2                                                        47200002
MERGE00  CLI   D0(HEAD),HEXEF     IS THE END OF MORECORE AREA           47400002
         BE    MAXAVL00           GO TO ROUTINT TO GET MAX AVAIL        47600002
         SPACE 1                                                        47800002
MERGE01  EQU   *                  GET SIZE AND POINTER TO NEXT          48000002
         LM    SIZE,NEXT,D0(HEAD) AVAILABLE MC AREA                     48200002
         LTR   SIZE,SIZE          IS SPACE ALLOCATED                    48400002
         BNM   MERGE03            NO, GO CHECK FOR AVAIL.               48600002
MERGE02  LR    HEAD,NEXT          YES, SET POINTER NEXT                 48800002
         B     MERGE00            GO CHECK FOR M.C. END                 49000002
MERGE03  CLI   D0(NEXT),HEX00     IS NEXT BLOCK ELIGIBLE FOR            49200002
         BNE   MERGE02            MERGING., NO, GET NEXT                49400002
         MVC   D4(L4,HEAD),D4(NEXT)                                     49600002
*                                 UPDATE POINT TO MERGE TWO             49800002
*                                 BLOCKS                                50000002
         L     NEWSIZE,D0(NEXT)   OBTAIN NEW SIZE BY ADDING             50200002
         LA    NEWSIZE,D8(SIZE,NEWSIZE)                                 50400002
*                                 BOTH BLOCK SIZES AND EIGHT            50600002
*                                 BYTES FOR CONTROL BLOCK WHICH         50800002
*                                 WAS PURGED.                           51000002
         ST    NEWSIZE,D0(HEAD)   SAVE NEW SIZE OF TWO MERGED           51200002
*                                 BLOCKS.                               51400002
*                                 GO CONTINUE SCANNING FOR MORE         51600002
*                                 FREE CONTIGOUS BLOCKS                 51800002
         CL    NEWSIZE,PLKMOR+D12   IS NEWSIZE GREATER THAN OLD         52000002
*                                 GREATER SAVE AREA SIZE                52200002
         BNH   MERGE04            NO,DO NOT RESTORE MAX AVAIL AREA      52400002
         ST    NEWSIZE,PLKMOR+D12  YES, SAVE LAGREST AVAIL IN OLTEP     52600002
         SPACE  2                                                       52800002
MERGE04  EQU   *                  CONTINUE PROCESSING MERGE ROUTINE     53000002
         L     WORKREG1,D4(HEAD)  GET POINTER TO NEXT AVAIL             53200002
         CLI   D0(WORKREG1),HEXEF BLOCK. IS THIS THE END                53400002
         BNE   MERGE01            GO GET PTR TO NEXT AREA               53600002
*                                 END- OF MERGE ROUTINE                 53800002
         EJECT                                                          54000002
*                                 THIS SECTION OF CODE WILL CALCULATE   54200002
*                                 THE SIZE OF THE LARGEST AVAILABLE     54400002
*                                 BLOCK OF MORECORE AND STORE IT INTO   54600002
*                                 OLTEPS COMMON AREA.                   54800002
MAXAVL00 EQU   *                  BEGIN PROCESSING LARGEST AVAILABLE    55000002
         L     HEAD,PLKMOR+D8     GET POINTER TO MORECORE AREA FROM     55200002
         XC    PLKMOR+D12(4),PLKMOR+D12                                 55400002
*                                 COMMON AREA                           55600002
MAXAVL01 CLI D0(HEAD),HEXEF       IS THIS THE LAST BLOCK MORECORE       55800002
*                                 SPACE                                 56000002
         BE    BOUNDRY            YES, GO PROCESS REQUEST               56200002
         LM    SIZE,NEXT,D0(HEAD) OBTAIN SIZE AND NUMBER OF BYTES       56400002
*                                 FOR THIS BLOCK OF MORECORE SPACE      56600002
         LTR   SIZE,SIZE          IS THIS BLOCK AVAILABLE FOR MORE      56800002
*                                 CORE REQUESTS                         57000002
         BM    MAXAVL02                                                 57200002
         CL    SIZE,PLKMOR+D12    YES IS THIS BLOCK SIZE GREATER THAN   57400002
*                                 PREVIOUS AVAL BLK SIZE                57600002
         BNH   MAXAVL02           NO, USE OLD VALUE FOR THE MAXIMUM     57800002
*                                 AVAILABLE BLOCK SIZE                  58000002
         ST    SIZE,PLKMOR+D12    YES, SAVE THIS BLOCK SIZE AS          58200002
*                                 LARGEST AVAILABLE BLOCK SIZE          58400002
MAXAVL02 LR    HEAD,NEXT          GET POINTER TO NEXT AVAIL BLOCK       58600002
*                                 FOR THIS PASS                         58800002
         B     MAXAVL01           GO PROCESS NEXT BLOCK OF CORE         59000002
         EJECT                                                          59200002
BOUNDRY  EQU   *                  SAVE REAL SIZE REQUETED               59400002
         ST    MAX,MAXSAVE        SAVE BYTE COUNT REQUESTED             59600002
*                                 THIS SECTION OF CODE WILL ROUND       59800002
*                                 THE OLTS REQUEST TO THE               60000002
         LA    MAX,D7(MAX)        NEAREST DOUBLE WORD                   60200002
         SRL   MAX,THREE          ROUND OFF THE                         60400002
         SLL   MAX,THREE          SIZE THE OLT REQUEST FOR              60600002
         LTR   MAX,MAX            CORE TO THE NEAREST UPWARD            60800002
         BNZ   ASSIGN00           BOUNDRY ON A DOUBLE WORD.             61000002
         LA    MAX,EIGHT          INSURE NON-ZERO                       61200002
ASSIGN00 EQU   *                  IF THIS POINT IS REACHED AN           61400002
*                                 ATTEMPT TO ASSIGN THE OLT CORE        61600002
*                                 WILL BE MADE. OBTAIN FROM COMMO       61800002
*                                 AREA POINTR TO M.C. AREA AND          62000002
*                                 NUMBER OF BYTES AVAIL.                62200002
         L     HEAD,PLKMOR+D8     GET MORECORE POINTER                  62400002
ASSIGN01 LM    SIZE,NEXT,D0(HEAD) GET SIZE, FLAG, AND PTR TO            62600002
         CLI   D0(HEAD),HEXEF     NEXT AVAIL. IS THIS END               62800002
         BE    EXIT08             YES, RETURN CODE = 08 **ERROR**       63000002
         LTR   SIZE,SIZE          IS THIS BLOCK AVAIL                   63200002
         BP    ASSIGN03           YES, GO CHECK SIZE REQ.0              63400002
ASSIGN02 LR    HEAD,NEXT          NO, GET NEXT POINTER TO HEAD          63600002
         B     ASSIGN01           CONTINUE SCANNING                     63800002
ASSIGN03 CR    MAX,SIZE           IS THIS SLOT LARGE ENOUGH             64000002
         BH    ASSIGN02           NO, GET NEXT POINTER                  64200002
         EJECT                                                          64400002
*                                 DETERMINE IF A SPLIT OF               64600002
*                                 BLOCKS IS POSSIBLE SINCE              64800002
*                                 MAX IS NOT GREATER THAN               65000002
*                                 AVAIL SIZE                            65200002
SPLIT00  LA    WORKREG1,HEX10(MAX) IS THERE ROOM FOR TWO WORD           65400002
         CR    SIZE,WORKREG1      CONTROL BLOCKS AND EIGHT              65600002
         BL    RETURN00           BYTES OF MORECORE SPACE.              65800002
*                                 YES, SET UP NEW CTL WORDS             66000002
SPLIT01  LA    NEWHEAD,D8(HEAD,MAX) GET PTR TO NEW CTL WORD             66200002
         ST    NEXT,D4(NEWHEAD)    SAVE PTR TO NEXT IN NEW              66400002
*                                  CTL WORD                             66600002
         ST    NEWHEAD,D4(HEAD)    SAVE PTR TO NEW CTL WD IN            66800002
*                                  OLD CTL WORD                         67000002
         ST    MAX,D0(HEAD)        SAVE MAX IN SIZE SLOT OF             67200002
*                                  OLD CTL WORD                         67400002
         SR    NEXT,NEWHEAD        CAL. USABLE SIZE OF NEW              67600002
*                                  BLOCK AFTER SPLIT                    67800002
         LA    WORKREG1,HEX08      SET SUBTRAHAND                       68000002
         SR    NEXT,WORKREG1       NEXT EQUALS SIZE OF NEW              68200002
         ST    NEXT,D0(NEWHEAD)    BLOCK. SAVE SIZE IN NEW              68400002
RETURN00 OI    D0(HEAD),HEX80      CTR WORD. SET ACTIVE ID              68600002
         XR    RETURNRG,RETURNRG   SET SUCCESSFUL RETURN                68800002
         LA    PARMREG,D8(HEAD)   SET RETURN ADDR FOR OLTS USE          69000002
         L     ZERO,MAXSAVE       RETURN NUMBER OF BYTES REQUESTED      69200002
         B     EXIT00             GO RESTORE  G. P. REGISTERS           69400002
*                                 AND EXIT.                             69600002
         EJECT                                                          69800002
EXIT04   LA    RETURNRG,HEX04     SET ERROR RETURN CODE                 70000002
         B     EXIT00             GO RESTORE G. P. REGISTERS            70200002
*                                 AND EXIT.                             70400002
EXIT08   EQU   *                                                        70600002
*                                 THIS SECTION HANDLES MORECORE         70800002
*                                 BETWEEN AND MORECORE MIN-PASS-        71000002
*                                 ES THRU THIS MODULE.                  71200002
         LTR   MIN,MIN            WAS THE MIN PARAMETER SUPPLIED        71400002
         BNZ   MINPAS00           YES, GO PROCESS IT                    71600002
         SPACE 2                                                        71800002
EXIT08A  EQU   *                  ENTER HERE ON NO CORE SITUATIONS      71880002
         LA    RETURNRG,HEX08     SET RETURN CODE                       71960002
         B     EXIT00             GO EXIT MODULE                        72040002
         SPACE 2                                                        72120002
MINPAS00 EQU   *                  HANDLE MIN PASS SUBROUTINE            72200002
         L     MINPASS,PLKMOR+D12 GET SIZE OF LARGEST AVAIL BLOCK       72400002
         LR    MAX,MIN            SET MAX TO MIN FOR NEXT               72600002
         XR    MIN,MIN            PASS AND SET MIN TO ZERO              72800002
         CLI   D1(PARMREG),HEX03  WAS THE BETWEEN  PARM GIVEN           73000002
         BNE   BOUNDRY            NO GO HANDLE THIS WITH MIN            73200002
         CR    MINPASS,MAX        IS OUR MAX AVAIL LESS                 73400002
*                                 THAN OLTS MIN RETURN                  73600002
         BL    EXIT08             A CODE 08          *** ERROR ***      73800002
*                                 IF EQUAL OR GREATER USE OUR           74000002
*                                 MAX AVAIL FROM SAVE REGISTER          74200002
         LR    MAX,MINPASS        USE OLTEPS LARGER SIZE FOR            74400002
*                                 SEAREC ARGUMENT ON MIN PASS           74600002
         B     BOUNDRY            GO ATTEMPT TO ALLOCATE                74800002
EXIT00   EQU   *                  BEGIN EXTI OF MORECORE MODULE         75000002
         L     EXIT,D12(SAVE)     GET RETURN POINT REGISTERS            75200002
         LM    TWO,TWELVE,D28(SAVE) RESTORE OLT REGISTER 2              75400002
         BR    EXIT               THRU 12 AND EXIT                      75600002
SAVE1    DC    18F'0'             TEMP A SAVE AREA                      75800002
MAXSAVE  DC    F'0'               SAVE AREA FOR ACTUAL BYTE COUNT       76000002
DC       DC    C'IFDOLT42 PATCH AREA ' DUMP PATCH ID                    76200002
AAAAA     IFDCOM                                                        76800002
         END                                                            77000002
./  ADD  SSI=32600848,NAME=IFDOLT43
         TITLE 'IFDOLT43  FREECORE MODULE'                              00700002
IFDOLT43 CSECT          ENTRY POINT                                     01400002
*********************************************************************** 02100002
*                                                                     / 02800002
*                             PROLOGUE                                * 03500002
*                                                                     * 04200002
*   STATUS: THIS IS THE SECOND LEVEL OF THE FREECORE MODULE.          * 04900002
*                                                                     * 05600002
*                                                                     * 06300002
*   FUNCTION;                                                         * 07000002
*           THIS MODULE WILL FREE ALLOCATED MAIN STORAGE SPACE        * 07700002
*           FROM THE MORECORE AREA. THE MODULE ACCOMPLISHES           * 08400002
*           THIS BY SCANNING THE STORAGE QUEUE ELEMENTS CONST-        * 09100002
*           RUCTED BY IFDOLT42 IN SEARCH FOR A MATCH BETWEEN          * 09800002
*           THE INPUT PARAMETER AND THE CONTENTS OF EACH QUEUE        * 10500002
*           ELEMENT. WHEN A MATCH IS FOUND THE INUSE BIT IS           * 11200002
*           SET TO ZERO AND THE CORE IS MADE AVAILABLE TO THE         * 11900002
*           OLT ON ANY SUBSEQUENT MORECORE MACRO REQUEST.             * 12600002
*                                                                     * 13300002
*                                                                     * 14000002
*   ENTRY POINT;                                                      * 14700002
*           IFDOLT43 IS THE MAIN AND ONLY ENTRY POINT TO THIS         * 15400002
*           MODULE.                                                   * 16100002
*                                                                     * 16800002
*                                                                     * 17500002
*   INPUT:  REGISTER ONE WILL POINT TO A PARAMETER LIST CONTAINING    * 18200002
*           THE ADDRESS OF THE CORE TO BE FREED.                      * 18900002
*                                                                     * 19600002
*                                                                     * 20300002
*   OUTPUT: REGISTER 15 WILL CONTAIN ONE OF THE FOLLOWING RETURN      * 21000002
*           CODES                                                     * 21700002
*                   A. X'00'  FREECORE WAS SUCCESSFUL                 * 22400002
*                                                                     * 23100002
*                   B. X'04'  FACILITY NOT AVAILABLE                  * 23800002
*                                                                     * 24500002
*                   C. X'08' INPUT PARAMETER ERROR.                   * 25200002
*                             I.E. ADDRESS NOT IN QUEUE ELEMENT       * 25900002
*                                                                     * 26600002
*                                                                     * 27300002
*   EXTERNAL ROUTINES:                                                * 28000002
*           NONE                                                      * 28700002
*                                                                     * 29400002
*                                                                     * 30100002
*   EXITS NORMAL:                                                     * 30800002
*           ALL NORMAL EXITS WILL BE AT THE LABEL EXIT00              * 31500002
*                                                                     * 32200002
*                                                                     * 32900002
*   EXITS ERROR;                                                      * 33600002
*     ALL ERROR EXITS WILL BE AT THE LABEL EXIT04 OR EXIT08.          * 34300002
*                                                                     * 35000002
*                                                                     * 35700002
*   TABLES/WORKAREAS:                                                 * 36400002
*     OLTEPS COMMON AREA IS THE ONLY EXTERNAL TABLE REFERENCED        * 37100002
*     BY IFDOLT43                                                     * 37800002
*                                                                     * 38500002
*                                                                     * 39200002
*********************************************************************** 39900002
         EJECT                                                          40600002
*********************************************************************** 41300002
*                                                                     * 42000002
*                   REGISTER EQUATES FOLLOW                           * 42700002
*                                                                     * 43400002
*********************************************************************** 44100002
ZERO     EQU   0                                                        44800002
PARMREG  EQU   1                  PARAMETER LIST POINTER                45500002
COMMON   EQU   2                  OLTEP COMMON AREA POINTER             46200002
FREEADDR EQU   3                  ADDRESS OF AREA TO BE FREED           46900002
HEAD     EQU   5                  POINTS TO MORECORE SPACE              47600002
TESTREG  EQU   6                  POINTS TO OLTS MORECORE AREA          48300002
BASEREG  EQU   11                 IFDOLT43 BASE REGISTER                49000002
SAVE     EQU   13                 REG13 FOR SAVING REGISTERS            49700002
EXIT     EQU   14                 RETURN REGISTER                       50400002
RETURNRG EQU   15                 RETURN CODE REGISTER                  51100002
D0       EQU   0                  DISPLACEMENT VALUE                    51800002
D1       EQU   1                  DISPLACEMENT VALUE                    52500002
D4       EQU   4                  DISPLACEMENT VALUE                    53200002
D8       EQU   8                  DISPLACEMENT VALUE                    53900002
TWELVE   EQU   12                 DISPLACEMENT OF 12                    54600002
D12      EQU   12                 DISPLACEMENT VALUE                    55300002
D20      EQU   20                 DISPLACEMENT VALUE                    56000002
HEX00    EQU   X'00'              INDICATES FREE SPACE                  56700002
HEX01    EQU   X'01'              DISPLACEMENT FIELD                    57400002
HEX02    EQU   X'02'              MACRO LEVEL EXPECTED                  58100002
HEX08    EQU   X'08'              DISPLACEMENT FIELD                    58800002
HEX80    EQU   X'80'              INDICATES ALLOCATED SPACE             59500002
HEXEF    EQU   X'EF'              END OF CORE SPACE                     60200002
**********************************************************************  60900002
         EJECT                                                          61200002
         SPACE  2                                                       61600002
         SPACE  2                                                       62300002
         SAVE  (14,12),,IFDOLT43&SYSDATE SAVE MOD ID, DATE, GPRS        63000002
         BALR  BASEREG,ZERO       ESTABLISH ADDRESSABILITY              63700002
         USING *,BASEREG          SET UP ADDRESSABILITY                 64400002
         USING AAAAA,COMMON       SET UP ADDRESSABALITY FOR COMMON      65100002
*                                 AREA                                  65800002
         ST    SAVE,SAVE1+D4      SAVE ADDRESS OF CALLER SAVE AREA      66100002
         XR    RETURNRG,RETURNRG  CLEAR RETURN CODE REGISTER            67200002
LVLCHK   CLI   D1(PARMREG),HEX02  IS THE MACRO LEVEL OK                 67900002
         BNE   EXIT04             NO, PACK HIM IN        **ERROR**      68600002
         L     HEAD,PLKMOR+D8   GET POINTER TO MORE CORE AREA           69300002
         LTR   HEAD,HEAD          HAS A MORE CORE ALLOCATION            70000002
*                                 BEEN SUCCESSFULLY ISSUED              70700002
         BNM   EXIT08             NO MORECORE SPACE DEFINRD             71400002
*                                 CONTROL QUEUE BLOCK.                  72100002
         L     FREEADDR,D4(PARMREG) OBTAIN ADDRESS TO BE FREED          72800002
         L     FREEADDR,D0(FREEADDR) GET ACTUAL ADDRESS TO BE FREED     73500002
FREECHK  LA    TESTREG,D8(HEAD)   GET EQUILIVANT  ADDR SUPPLIED         74200002
*                                 TO OLT AT MORECORE TIME               74900002
         CR    FREEADDR,TESTREG   IS THIS THE ADDRESS TO BE FREED       75600002
         BNE   HEADUP             NO, GO GET ADDR OF NEXT BLK           76300002
         TM    D0(HEAD),HEX80     WAS THIS CORE ASSGND.TO OLT   XA01373 77000002
         BNO   EXIT08             NO****OLT IN ERROR****        XA01373 78000002
FREEBLK  MVI   D0(HEAD),HEX00     FREE ALLOCATED SPACE                  78500002
         B     EXIT00             GO RETURN A SUCCESSFUL  RETURN        79100002
HEADUP   EQU   *                                                        79800002
         CLI   D0(HEAD),HEXEF     NO, IS THIS THE END OF M.C.           80500002
*                                 AREA                                  81200002
         BE    EXIT08             YES, EXIT WITH ERROR                  81900002
         L     HEAD,D4(HEAD)      GET POINTER TO NEXT BLK               82600002
         B     FREECHK            CONTINUE SCANNING                     83300002
*                                 SET RETURN CODE AS WARRENTS           84000002
EXIT08   LA    RETURNRG,D4(RETURNRG)                                    84700002
EXIT04   LA    RETURNRG,D4(RETURNRG)                                    85400002
EXIT00   L     EXIT,D12(SAVE)     LOAD RETURN POINT                     86100002
         LM    ZERO,TWELVE,D20(SAVE) RESTORE OCT REGS                   86800002
         BR    EXIT               EXIT THIS MODULE                      87500002
SAVE1    DC    18F'0'             SAVE AREA FOR DEBUGGING               88200002
AAAAA    IFDCOM                                                         89600002
         END                                                            90300002
./  ADD  SSI=40230080,NAME=IFDOLT44
         TITLE 'IFDOLT44 DIO (HIO) HANDLER'                             00010000
         TITLE 'IFDOLT44 DIO (HALTIO) HANDLER'                          00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT44 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT44 23 JAN 74'                             0002  00070000
         ST    @E,12(0,@D)                                        0002  00080000
         STM   @0,@C,20(@D)                                       0002  00090000
         BALR  @B,0                                               0002  00100000
@PSTART  DS    0H                                                 0002  00110000
         USING @PSTART+00000,@B                                   0002  00120000
*         PURGE: GEN(EQU X'3B');         /* SVC59               YM5411* 00130000
PURGE    EQU X'3B'                                                      00140000
         DS    0H                                                       00150000
*         /* CONSTANT USED TO MAKE BINARY CHECKS                      * 00160000
*         DECLARE ON CHAR(1) INIT('01'X);                               00170000
*         /* CONSTANT  USED  TO  TEST  FOR  NO  OPERAND GIVEN         * 00180000
*         DCL ZERO FIXED(31) INIT('00000000'X);                         00190000
*         /* CONSTANT USED FOR ERROR RETURN CODE                      * 00200000
*         DCL FOUR FIXED(31) INIT('00000004'X);                         00210000
*         /* SVC 33 PARM                                        Y02008* 00220000
*         DCL XFF CHAR(1) INIT('FF'X);   /*                     Y02008* 00230000
*         /* SVC 16 PARM                                              * 00240000
*         DCL X00 CHAR(1) INIT('00'X);   /*                     Y02008* 00250000
*         DCL ONER FIXED(31) INIT('00000001'X);                         00260000
*    GENERATE DATA;                  /* PATCH AREA                    * 00270000
*         /* GET DSECT FOR COMMON  AREA                               * 00280000
*         GEN(EJECT);                                                   00290000
         EJECT                                                          00300000
         DS    0H                                                       00310000
**                                                                      00320000
**/******************************************************************** 00330000
**/*      COMMON AREA MAP                                             * 00340000
**/******************************************************************** 00350000
** DECLARE                                                              00360000
**  1 COMMAP BASED(COMMAPT) BDY(WORD),                                  00370000
**    3 CHASCT CHAR(92),                 /* SECTION CONTROL TABLE     * 00380000
**    3 DOLT00PT PTR(31),                /* INITIALIZATION MODULE     * 00390000
**    3 LGWRTCT CHAR(40),                /* LAST SCT WORDS            * 00400000
**    3 INBUFPTR PTR(31),                /* ADDR OF ITEM IN BUFFER    * 00410000
**    3 INBUFR CHAR(72),                 /* INPUT BUFFER              * 00420000
**    3 PRTBUFR CHAR(124),               /* PRINTING BUFFER           * 00430000
**    3 SECPTR PTR(31),                  /* ACTIVE SECTION ENTRY POINT* 00440000
**    3 UTENT PTR(31),                   /* 1ST UT INSTRUCTION        * 00450000
**    3 DATPTR PTR(31),                  /* PTR TO DP ROOT MODULE     * 00460000
**    3 DATIND CHAR(2),                  /* OLTEP DATA INDICATOR      * 00470000
**    3 PGMTAB CHAR(8),                  /* ACTIVE PGM ID             * 00480000
**    3 SECLST CHAR(138),                /* SECTION LIST              * 00490000
**    3 PCIEXIT PTR(31),                 /* PTR TO PCI EXIT           * 00500000
**    3 NORMEXIT PTR(31),                /* PTR TO NORMAL EXIT        * 00510000
**    3 ABNMEXIT PTR(31),                /* PTR TO ABNORMAL EXIT      * 00520000
**    3 DIEPTR PTR(31),                  /* PTR TO DISABLED INT HNDLR * 00530000
**    3 IOSCB CHAR(136),                 /* CTRL BLK SET FOR IOS      * 00540000
**      5 MODIOSB CHAR(108),             /* MODEL IOSB                * 00550000
**      5 MODUSECB CHAR(24),             /* MODEL USE CONTROL BLOCK   * 00560000
**      5 OECBWRD1 CHAR(4),              /* 1ST WORD OF OECB          * 00570000
**        7 OECBSNSC CHAR(1),            /* SENSE COUNT FOR THIS REQ  * 00580000
**        7 OECBINCT CHAR(1),            /* INTERRUPT COUNT FLD       * 00590000
**        7 OECBX CHAR(2),               /* NOT USED                  * 00600000
**    3 EFCTRCB CHAR(20) BDY(WORD),      /* IOEFFECTOR CNTRL BLOCK    * 00610000
**      5 CCWPTR PTR(31),                /* PTR TO CCW LIST           * 00620000
**      5 DVTPTR PTR(31),                /* PTR TO DEVTBLE ENTRY      * 00630000
**      5 FLGA CHAR(1),                  /* FLAGS:                    * 00640000
**        7 BYPASPFX BIT(1),             /*   BYPASS PREFIX           * 00650000
**        7 CEDEPOST BIT(1),             /*   CE DE SEPERATION        * 00660000
**        7 GDP BIT(1),                  /*   GUARANTEED DEV PATH     * 00670000
**        7 SPEXPOS BIT(1),              /*   SPECIFIC EXPOSURE       * 00680000
**        7 * BIT(1),                    /*   NOT USED                * 00690000
**        7 * BIT(1),                    /*   NOT USED                * 00700000
**        7 * BIT(1),                    /*   NOT USED                * 00710000
**        7 * BIT(1),                    /*   NOT USED                * 00720000
**      5 FLGB CHAR(1),                  /* FLAGS:                    * 00730000
**        7 INTIRNAL BIT(1),             /*   INTERNAL CALL BY DP ETC.* 00740000
**        7 ATTNIN BIT(1),               /*   ATTENTION FUNCTION      * 00750000
**        7 VIRTCCWS BIT(1),             /*   CCWS ARE VIRTUAL        * 00760000
**        7 OLDTECBX BIT(1),             /*   P3116 TECB              * 00770000
**        7 * BIT(1),                    /*   NOT USED                * 00780000
**        7 * BIT(1),                    /*   NOT USED                * 00790000
**        7 * BIT(1),                    /*   NOT USED                * 00800000
**        7 * BIT(1),                    /*   NOT USED                * 00810000
**      5 FILEMSK CHAR(1),               /*   FILEMASK OR MODE SET    * 00820000
**      5 SNSCNT CHAR(1),                /*   SENSE BYTE COUNT        * 00830000
**      5 TECBPTRX PTR(31),              /*   PTR TO TECB             * 00840000
**      5 SEEKPTR PTR(31),               /*   PTR TO SEEK ADDR        * 00850000
**    3 IOEFTRAD PTR(31),                /*   PTR TO IO EFFECTOR      * 00860000
**    3 IODEVTAB(3) CHAR(12) BDY(WORD),  /* IO DEVICE TABLES          * 00870000
**      5 IODEV1 PTR(31),                /*      PTR TO DEV TBLE NTRY * 00880000
**      5 IOSBPTR1 PTR(31),              /*      PTR TO IOSB          * 00890000
**      5 IOECB1 CHAR(4),                /*      ECB                  * 00900000
**        7 CMPLT CHAR(1),               /*                           * 00910000
**          9 WAITBIT BIT(1),            /* ECB WAITED ON             * 00920000
**          9 POSTBIT BIT(1),            /* ECB POSTED                * 00930000
**          9 CMPLCODE BIT(6),           /* SYSTEM COMPLETION CODE    * 00940000
**        7 * CHAR(1),                   /* NOT USED                  * 00950000
**        7 * CHAR(2),                   /*                           * 00960000
**          9 PSUDPOST BIT(1),           /* SET BY NAPA               * 00970000
**          9 * BIT(3),                  /* NOT USED                  * 00980000
**          9 WTCMPCD BIT(12),           /* SET BY WAITIO ON TMOUT    * 00990000
**    3 SELAFFN CHAR(2),                 /* SELECTED AFFN             * 01000000
**    3 CHARAFFN CHAR(2),                /* CHAR REP OF SEL AFFN      * 01010000
**    3 XXXXXXXX CHAR(144),              /* NOT USED                  * 01020000
**    3 DEVTBPTR PTR(31),                /* PTR TO DEVICE TABLES      * 01030000
**    3 TABLNGTH FIXED(15),              /* LENGTH OF EACH TABLE      * 01040000
**    3 CESWT9 CHAR(1),                  /* SWITCHES:                 * 01050000
**      5 CDSEQU BIT(1),                 /*   CDS EQUATE REQ          * 01060000
**      5 RESTBENT BIT(1),               /*   RESIDENT TBL ENTRY      * 01070000
**      5 VRCAP BIT(1),                  /*   VIRTUAL OR REAL OLT     * 01080000
**      5 *  BIT(4),                     /*   NOT USED                * 01090000
**    3 CESWT10 CHAR(1),                 /* SWITCHES OR FLAGS         * 01100000
**      5 MPSYS BIT(1),                  /* MP SYSTEM                 * 01110000
**      5 AFFNSET BIT(1),                /* AFFN SET                  * 01120000
**      5 VERBCALL BIT(1),               /* VERB SELECTED             * 01130000
**    3 OPEN2 PTR(31),                   /* NOT USED                  * 01140000
**    3 OPEN3 PTR(31),                   /* NOT USED                  * 01150000
**    3 PSCT PTR(31),                    /* PTR TO SCT                * 01160000
**    3 DEVDEPAD PTR(31),                /* ACTIVE SCT ENTRY PTR      * 01170000
**    3 TABAD PTR(31),                   /* UNIT TESTING TBLE PTR     * 01180000
**    3 UTCOMAD PTR(31),                 /* POINTER TO PASSON AREA    * 01190000
**    3 MCT CHAR(208) BDY(WORD),         /* MODULE CONTROL TABLE      * 01200000
**      5 * CHAR(164),                   /*                           * 01210000
**      5 PARPRADR PTR(31),              /* DPRINT MODULE ADDR        * 01220000
**      5 * CHAR(40),                    /*                           * 01230000
**    3 MCT1ADR PTR(31),                 /* PTR TO MCT                * 01240000
**    3 WKSVC CHAR(16) BDY(WORD),        /* SVC WORK AREA             * 01250000
**      5 * CHAR(4),                     /*                           * 01260000
**      5 ROPT PTR(31),                  /* SVC PARM LIST             * 01270000
**      5 * CHAR(8),                     /*                           * 01280000
**    3 OLTTAB CHAR(40) BDY(WORD),       /* LINK TABLE                * 01290000
**      5 * CHAR(28),                    /*                           * 01300000
**      5 TAB28 PTR(31),                 /* NEW MACRO ENTRY POINT     * 01310000
**      5 * CHAR(8),                     /*                           * 01320000
**    3 LOGADR PTR(31),                  /* PTR TO LOGSCAN MODULE     * 01330000
**    3 SCHEDSA PTR(31),                 /* PTR TO SCHEDULER SVAREA   * 01340000
**    3 SATAB CHAR(12),                  /* SYSTEM ASSIGNMENT TABLE   * 01350000
**    3 PLKMOR CHAR(16),                 /* PLINK AND MORECORE MNGMT  * 01360000
**    3 REGX PTR(31),                    /* ACTIVE UCB ADDR PTR       * 01370000
**    3 TUCBAD1 PTR(31),                 /* 1ST ACTIVE UCB ADDR       * 01380000
**    3 TUCBAD2 PTR(31),                 /* 2ND ACTIVE UCB ADDR       * 01390000
**    3 TSTDEBAD PTR(31),                /* TEST DEB ADDR             * 01400000
**    3 ECB3 CHAR(4),                    /* DYNAMIC COMMUNICATION ECB * 01410000
**    3 UTCOM CHAR(64),                  /* PASSON AREA               * 01420000
**    3 EXTBUF CHAR(56),                 /* EXTERNAL BUFFER           * 01430000
**    3 DPRDEBAD PTR(31),                /* PTR TO DPRINT DEB         * 01440000
**    3 PRIDVPTR PTR(31),                /* PTR TO ACTIVE PRIME DEVTAB* 01450000
**    3 SECDVPTR PTR(31),                /* PTR TO LAST GRAB DEVICE   * 01460000
**    3 REDEFINE PTR(31),                /* CE COMM ENTRY IN    Y02906* 01470000
**                                       /* IFDOLT30            Y02906* 01480000
**    3 COMMINT PTR(31),                 /* DYN COMM ENTRY IN   Y02906* 01490000
**                                       /* IFDOLT30            Y02906* 01500000
**    3 NEXTREC PTR(31),                 /* NEXT INPUT RECORD   Y02906* 01510000
**                                       /* ENTRY IN IFDOLT30   Y02906* 01520000
**    3 ADSVAREA PTR(31),                /* IFDOLT30 1ST SVAREA ADDR  * 01530000
**    3 ECB37 CHAR(4),                   /* CECOM ECB                 * 01540000
**    3 REPLY37 CHAR(72),                /* CECOM INPUT BUFFER        * 01550000
**    3 MSGAD37 PTR(31),                 /* OLTS BUFFER ADDR          * 01560000
**    3 TPSAVE CHAR(4),                  /* TEST ID                   * 01570000
**    3 TLCOUNT FIXED(15),               /* TEST LOOP COUNT           * 01580000
**    3 HRTSEL FIXED(15),                /* HIGHEST ROUTINE SELECTED  * 01590000
**    3 SAVECNT CHAR(2),                 /* COUNTER FOR DEVICE DELODE * 01600000
**    3 * CHAR(2),                       /* TEST LOOP RUN             * 01610000
**    3 SAVENT CHAR(4),                  /* LAST INCLUSIVE SERIES     * 01620000
**    3 CESWITCH CHAR(9),                /* OLTEP SWITCHES            * 01630000
**      5 CESWT CHAR(1),                 /* CE SWITCH                 * 01640000
**        7 LEGALTST BIT(1),             /* LEGAL TEST ENTRY          * 01650000
**        7 SECDEV BIT(1),               /* DO DP FOR SEC DEV         * 01660000
**        7 OUTS BIT(1),                 /* OLD OLT LOADED            * 01670000
**        7 NUTS BIT(1),                 /* NEW OLT LOADED            * 01680000
**        7 LEGALDEV BIT(1),             /* LEGAL DEVICE ENTRY        * 01690000
**        7 REINT BIT(1),                /* NEW D/T/O/ ENTRY          * 01700000
**        7 FERINT BIT(1),               /* COMMUNICATION INTERVAL    * 01710000
**        7 * BIT(1),                    /*                           * 01720000
**      5 CESWT1 CHAR(1),                /* SWITCH 1:                 * 01730000
**        7 RTNFLD BIT(1),               /* ROUTINES SELECTED         * 01740000
**        7 SKTST BIT(1),                /*                           * 01750000
**        7 * BIT(1),                    /*                           * 01760000
**        7 WAITFG BIT(1),               /* WAITIO NEEDED             * 01770000
**        7 FILMSK BIT(1),               /* ALLOW MODESET CHANGE      * 01780000
**        7 * BIT(1),                    /*                           * 01790000
**        7 ONLINEOK BIT(1),             /* ONLINE TESTING OK         * 01800000
**        7 TPFLAG BIT(1),               /* UNITS COUNTER GTR THEN 1  * 01810000
**      5 CESWT2 CHAR(1),                /* SWITCH 2:                 * 01820000
**        7 NDCFO BIT(1),                /* NO DYN COMM FOR OLTEP     * 01830000
**        7 * BIT(1),                    /*                           * 01840000
**        7 FECOND BIT(1),               /* FIRST ERROR CONDITION     * 01850000
**        7 * BIT(1),                    /*                           * 01860000
**        7 INITENT BIT(1),              /* OPTION ENTRY DECODED      * 01870000
**        7 NDR BIT(1),                  /* NDR ENTRY                 * 01880000
**        7 TAPEHDR BIT(1),              /* TAPE LABEL TO RESTORE     * 01890000
**        7 * BIT(1),                    /*                           * 01900000
**      5 CESWT3 CHAR(1),                /* SWITCH 3:                 * 01910000
**        7 TALKVERB BIT(1),             /* TALK REQUESTED            * 01920000
**        7 BYPALDEV BIT(1),             /* STOP SCHEDULING DEVICES   * 01930000
**        7 BYPDEV BIT(1),               /* STOP TESTING CURRENT DEV  * 01940000
**        7 GRBCNTL BIT(1),              /* GRAB MACRO ISSUED         * 01950000
**        7 SUSDEL BIT(1),               /* MODULE CAN BE DELETED     * 01960000
**        7 TP1419 BIT(1),               /* TP DEVICES IN SYSTEM      * 01970000
**        7 CDEXIST BIT(1),              /* CDS LIBRARY EXISTS        * 01980000
**        7 NODP BIT(1),                 /* CANT DO DATA PROJECT      * 01990000
**      5 CESWT4 CHAR(1),                /* SWITCH 4:                 * 02000000
**        7 RSTRFLG BIT(1),              /* PAGE RESTORE -BYPASS WTO  * 02010000
**        7 DPRFLG BIT(1),               /* USE DPRINT 2ND SVAREA     * 02020000
**        7 WAITFLG BIT(1),              /* BYPASS DPRINT INTRNL WAIT * 02030000
**        7 WRTFLG BIT(1),               /* DPRINT WRITE REQUEST      * 02040000
**        7 * BIT(1),                    /* NOT USED                  * 02050000
**        7 WTORFLG BIT(1),              /* DPRINT WTOR REQUEST       * 02060000
**        7 RPLYFLG BIT(1),              /* REPLY EXPECTED            * 02070000
**        7 WTOFLG BIT(1),               /* DPRINT WTO REQUEST        * 02080000
**      5 CESWT5 CHAR(1),                /* SWITCH 5:                 * 02090000
**        7 HDRFLG BIT(1),               /* PRINT HEADER LINE         * 02100000
**        7 RSLTFLG BIT(1),              /* PRINT RESULTS             * 02110000
**        7 FFEFLG BIT(1),               /* 1ST ERROR HAS OCCURRED    * 02120000
**        7 FCEFLG BIT(1),               /* 1ST CAT ERROR HAS OCCURRED* 02130000
**        7 PFEMSG BIT(1),               /* PRINT 1ST ERROR MSG       * 02140000
**        7 PCEMSG BIT(1),               /* PRINT CAT ERROR MSG       * 02150000
**        7 SYMBFLG BIT(1),              /* SYMBOLIC NAME IN HEADER   * 02160000
**        7 PRNTOPTN BIT(1),             /* PRINT PRIOR OPTIONS MSG   * 02170000
**      5 CESWT6 CHAR(1),                /* SWITCH 6:                 * 02180000
**        7 UTSCAL BIT(1),               /* UNIT TEST MACRO CALL      * 02190000
**        7 ATM BIT(1),                  /* PRINT * ON TERM MSG       * 02200000
**        7 EOFBIT BIT(1),               /* RESET INTERNAL SWITCHES   * 02210000
**        7 PFPMSG BIT(1),               /* PRINT FP MSG-CANCEL OLT   * 02220000
**        7 CODE5 BIT(1),                /* REPEAT TESTS              * 02230000
**        7 NORUN BIT(1),                /* DONT RUN SCHEDULED TEST   * 02240000
**        7 SECRUN BIT(1),               /* SCHEDULED TEST DONE       * 02250000
**        7 RTSTAE BIT(1),               /* ENTRY TO STAE             * 02260000
**      5 CESWT7 CHAR(1),                /* SWITCH 7:                 * 02270000
**        7 INCLST BIT(1),               /* INCLUSIVE DEVICE ENTRY    * 02280000
**        7 RETTO31 BIT(1),              /* NOT ALL DEVICES VALID     * 02290000
**       7 REMOTE BIT(1),                /* REMOTE TERM IN DEV ENTRY  * 02300000
**        7 * BIT(1),                    /* NOT USED                  * 02310000
**        7 * BIT(1),                    /* NOT USED                  * 02320000
**        7 * BIT(1),                    /* NOT USED                  * 02330000
**        7 VIRTUAL BIT(1),              /* RUNNING IN VIRTUAL        * 02340000
**        7 GOTINPUT BIT(1),             /* ENTRY TO D/T/O            * 02350000
**      5 CESWT8 CHAR(1),                /* SWITCH 8:                 * 02360000
**        7 LISTFIX BIT(1),              /* PARMLIST FIXED            * 02370000
**        7 * BIT(1),                    /* NOT USED                  * 02380000
**        7 * BIT(1),                    /* NOT USED                  * 02390000
**        7 READDCHK BIT(1),             /* READD ENTERED             * 02400000
**        7 OLTINVV BIT(1),              /* OLT IN VIRTUAL            * 02410000
**        7 SUTMSG BIT(1),               /* MSG 158I ISSUED           * 02420000
**        7 SNEWRUN BIT(1),              /* NEW TEST RUN              * 02430000
**        7 TALKHERE BIT(1),             /* TALK VERB ENTERED         * 02440000
**    3 DYNCOM CHAR(1),                  /* RESPONSE BUFFER DYN MSG   * 02450000
**    3 SECTUSE  CHAR(1),                /* NO. OF SECTIONS RUNYM03331* 02460000
**    3 UNICTR  CHAR(1),                 /* NO. OF UNITS TO RUNYM03331* 02470000
**    3 UNITUSE  CHAR(1),                /* NO.   OF UNITS RUN YM03331* 02480000
**    3 DPLEVEL CHAR(1),                 /* MSG PRINTING LEVEL        * 02490000
**    3 CNT37  CHAR(1),                  /* CECOM REPLY LENGTH YM03331* 02500000
**    3 READDSV CHAR(6),                 /* READD SVAREA              * 02510000
**    3 * CHAR(3),                       /* NOT USED                  * 02520000
**    3 READDMOD PTR(31),                /* PTR TO READD MODULE       * 02530000
**    3 RDCBPTR PTR(31),                 /* READD DCB PTRPTR -  Y02906* 02540000
**                                       /* DCB IN IFDOLT51     Y02906* 02550000
**    3 MSGMOD PTR(31),                  /* PTR TO RESIDENT MSG MODULE* 02560000
**    3 ENDJOB PTR(31),                  /* PTR TO INIT SVAREA        * 02570000
**    3 MHRPTR PTR(31),                  /*                           * 02580000
**    3 RTALKBUF PTR(31),                /* PTR TO TALK BUFFER- Y02906* 02590000
**                                       /* BUFFER IN IFDOLT55  Y02906* 02600000
**    3 RINBUF PTR(31),                  /* PTR TO REMOTE INBUFRY02906* 02610000
**                                       /* BUFR IN IFDOLT55    Y02906* 02620000
**    3 REIDCBPT PTR(31),                /* PTR TO REI DCB-     Y02906* 02630000
**                                       /* DCB IN IFDOLT55     Y02906* 02640000
**    3 REIOBPTR PTR(31),                /* PTR TO REI IOB-     Y02906* 02650000
**                                       /* IOB IN IFDOLT55     Y02906* 02660000
**    3 REIECB CHAR(4),                  /* REMOTE COMM ECB           * 02670000
**    3 TALKECB CHAR(4),                 /* ONSITE COMM ECB           * 02680000
**    3 RESPBUF PTR(31),                 /* PTR TO REPLY BUFR         * 02690000
**    3 REIUCB PTR(31),                  /* 2955 UCB ADDR             * 02700000
**    3 CESWTR CHAR(1),                  /* RETAIN SWITCHES:          * 02710000
**      5 RETAINAC BIT(1),               /* RETAIN ACTIVE             * 02720000
**      5 REMERR BIT(1),                 /* REMOTE ERROR              * 02730000
**      5 REMONMSG BIT(1),               /* DONT SEND TO REMOTE       * 02740000
**      5 CENOMSG BIT(1),                /* DONT SEND TO CONSOLE      * 02750000
**      5 TRANSMSG BIT(1),               /* TRANSLATE MSG             * 02760000
**      5 IMRESP BIT(1),                 /*  ATTACH 04 REPLY CODE     * 02770000
**      5 EXECOUT BIT(1),                /*  SCCEPT 00 REPLY CODE     * 02780000
**      5 * BIT(1),                      /*  NOT USED                 * 02790000
**    3 CESWTR1 CHAR(1),                 /*  REMOTE SWITCH1:          * 02800000
**      5 ILLRESP BIT(1),                /*  INVALID RESP BY REMOTE   * 02810000
**      5 EXECANS BIT(1),                /*  REMOTE REPLIED TO 104E   * 02820000
**      5 CECOMANS BIT(1),               /*  REMOTE REPLIED TO OUTSMSG* 02830000
**      5 INFOMSG BIT(1),                /*   3 MSG RCVD FROM REMOTE  * 02840000
**      5 RETRIEVE BIT(1),               /*  REIECB POSTED            * 02850000
**      5 REMANS BIT(1),                 /*  REMOTE CAN REPLY         * 02860000
**      5 EDOTMSG BIT(1),                /*  ATTACH 01 REPLY CODE     * 02870000
**      5 REIENTRY BIT(1),               /*  ENTRY FROM REI           * 02880000
**    3 CESWTR2 CHAR(1),                 /*  REMOTE SWITCH2:          * 02890000
**      5 REPLY00 BIT(1),                /*  ATTACH 00 REPLY CODE     * 02900000
**      5 * BIT(1),                      /*  NOT USED                 * 02910000
**      5 ONCOMM BIT(1),                 /*  ONSITE REPLIED           * 02920000
**      5 COMLOOP BIT(1),                /*  105D ISSUED - TALK REPLY * 02930000
**      5 WAIT BIT(1),                   /*  ISSUE WTOR               * 02940000
**      5 OPTERR BIT(1),                 /*  RE AND MI OPTIONS SELECT * 02950000
**      5 * BIT(1),                      /*  NOT USED                 * 02960000
**      5 DPMSGREI BIT(1),               /* REI REPLY NOT ALLOWED     * 02970000
**    3 CESWTR3 CHAR(1),                 /*  REMOTE SWITCH3           * 02980000
**    3 ZUESUCB FIXED(15),               /*  SPEC EXP BASE UCB ADDR   * 02990000
**    3 * CHAR(2),                       /*  NOT USED                 * 03000000
**    3 EXPAND1 CHAR(4),                 /* EXPANSION BYTES           * 03010000
**    3 SYMPTR PTR(31),                  /* SYMBOLIC LIB DCB PTRY02906* 03020000
**                                       /* DCB IN IFDOLT30     Y02906* 03030000
**    3 PGFXLIST CHAR(16),               /* PAGEFIX LIST              * 03040000
**    3 PARTITEM CHAR(12),               /* PARTITION ITEMS           * 03050000
**    3 PGFXOLT CHAR(8),                 /* OLT PAGEFIX LIST          * 03060000
**    3 CORERSLT CHAR(8),                /* GETMAIN CORE RESULTS      * 03070000
**    3 VRSIZE FIXED(31),                /* REAL CORE AREA SIZE       * 03080000
**    3 * CHAR(8),                       /* NOT USED                  * 03090000
**    3 NEXTMCT CHAR(208),               /* NEXT MCT                  * 03100000
**    3 THIRDMCT CHAR(208),              /* THIRD MCT                 * 03110000
**    3 DEVTAB CHAR(896);                /* START OF DEVICE TABLES    * 03120000
**                                                                      03130000
**/*************************************************************Y02906* 03140000
**/*                 DEVTAB                                     Y02906* 03150000
**/*      DEVICE TABLE ENTRY MAP FOR OLTEP                      Y02906* 03160000
**/*                                                            Y02906* 03170000
**/* OLTEP/VS2 RELEASE 2                                        Y02906* 03180000
**/*                                                            Y02906* 03190000
**/* METHOD OF ACCESS                                           Y02906* 03200000
**/*    BAL - DSECT NAMED 'DEVTAB' IS PRODUCED                  Y02906* 03210000
**/*          A 'USING' ON SYMBOL 'DEVTAB' GIVES ADDRESSABILITY Y02906* 03220000
**/*           FOR ALL SYMBOLS.                                 Y02906* 03230000
**/*                                                            Y02906* 03240000
**/*    PL/S -   DECLARE DEVTABPT PTR,  IS NECESSARY FOR ADDRESSY02906* 03250000
**/*              ABILITY                                       Y02906* 03260000
**/*                                                            Y02906* 03270000
**/*************************************************************Y02906* 03280000
**                                                                      03290000
** DECLARE                                                              03300000
**   1 DEVTABMP CHAR(56) BASED(DEVTABPT) BDY(WORD),                     03310000
**     3 DEVEBCAD CHAR(8),         /* EBCDIC DEVICE ADDRESS           * 03320000
**     3 DEVUCBAD PTR(31),         /* UCB POINTER FOR THIS DEVICE     * 03330000
**     3 DEVFLAG1 CHAR(1),         /* DEVICE FLAG BYTE 1              * 03340000
**       5 ONLINE BIT(1),          /* IF 1- DEVICE IS ONLINE          * 03350000
**       5 PRIMARY BIT(1),         /* IF 1- DEVICE IS PRIMARY         * 03360000
**       5 DPDONE BIT(1),          /* IF 1- DEVICE IS DATA PROTECTED  * 03370000
**       5 ACTIVE BIT(1),          /* IF 1- DEVICE IS ACTIVE          * 03380000
**       5 ALOCATED BIT(1),        /* IF 1- DEVICE IS ALOCATED        * 03390000
**       5 GRABED BIT(1),          /* IF 1- DEVICE IS GRABBED 2NDARY  * 03400000
**       5 FILEPRT BIT(1),         /* IF 1- DEVICE IS FILE PROTECTED  * 03410000
**       5 *        BIT(1),        /* UNUSED BIT                      * 03420000
**     3 DEVFLAG2 CHAR(1),         /* DEVICE FLAG BYTE 2              * 03430000
**       5 DSNAME BIT(1),          /* IF 0 AND ALOCATED=1-DATA SET    * 03440000
**                                 /*  NAME IS OSOLTEP1.              * 03450000
**                                 /* IF 1 AND ALOCATED=1-DATA SET    * 03460000
**                                 /*  NAME IS OSOLTEP2.              * 03470000
**       5 SHARED BIT(1),          /* IF 1-DEVICE IS SHARED           * 03480000
**       5 CEVOLUMN BIT(1),        /* IF 1-DASD   HAS A CE VOLUME ON  * 03490000
**       5 STANDLBL BIT(1),        /* IF 1-TAPE   HAS A STANDARD LABLE* 03500000
**       5 HIODONE BIT(1),         /* IF 1-HALT I/O DONE TO THIS DEV  * 03510000
**       5 EXIOLVL3 BIT(1),        /* IF 1-EXIO MACRO WAS A LEVEL 3   * 03520000
**       5 PCIIND BIT(1),          /* IF 1-A PCI INTERRUPT OCCURRED   * 03530000
**       5 *        BIT(1),        /* UNUSED                          * 03540000
**     3 DEVFLAG3 CHAR(1),         /* DEVICE FLAG BYTE 3              * 03550000
**       5 ANRNOTST BIT(1),        /*                                 * 03560000
**       5 *        BIT(1),        /* UNUSED                          * 03570000
**       5 *        BIT(1),        /* UNUSED                          * 03580000
**       5 TAPEBIT  BIT(1),        /* UNUSED                          * 03590000
**       5 NOTEST   BIT(1),        /* NOT TESTABLE                    * 03600000
**       5 DEVALC   BIT(1),        /* ALLOCATED                       * 03610000
**       5 WAITPOST BIT(1),        /* WAITIO IS POSTING               * 03620000
**       5 REISPEUD BIT(1),        /* REI PSEUDO DEV TAB              * 03630000
**     3 DEVFLAG4 CHAR(1),         /* DEVICE FLAG BYTE 4              * 03640000
**       5 DEVREMDA BIT(1),        /*                                 * 03650000
**       5 DEVREMEA BIT(1),        /*                                 * 03660000
**       5 RESERVD1 BIT(1),        /*                                 * 03670000
**       5 RESERVD2 BIT(1),        /* UNUSED                          * 03680000
**       5 *        BIT(1),        /* UNUSED                          * 03690000
**       5 *        BIT(1),        /* UNUSED                          * 03700000
**       5 *        BIT(1),        /* UNUSED                          * 03710000
**       5 *        BIT(1),        /* UNUSED                          * 03720000
**     3 DEVLOEXT CHAR(6),         /* LOW EXTENT FOR THIS DEVICE      * 03730000
**       5 LOEXTBB CHAR(2),        /* LOW EXTENT BB                   * 03740000
**       5 LOEXTCC CHAR(2),        /* LOW EXTENT CC                   * 03750000
**       5 LOEXTHH CHAR(2),        /* LOW EXTENT HH                   * 03760000
**     3 DEVHIEXT CHAR(6),         /* HIGH EXTENT FOR THIS DEVICE     * 03770000
**       5 HIEXTBB CHAR(2),        /* HIGH EXTENT BB                  * 03780000
**       5 HIEXTCC CHAR(2),        /* HIGH EXTENT CC                  * 03790000
**       5 HIEXTHH CHAR(2),        /* HIGH EXTENT BB                  * 03800000
**     3 TAPELABL CHAR(1),         /* DATA BYTE FOR TAPE LABEL SAVE   * 03810000
**     3 *        CHAR(1),         /* UNUSED                          * 03820000
**     3 DEVMODE CHAR(1),          /* MODE SET SAVE AREA FOR TAPE     * 03830000
**     3 DEVEXPOS CHAR(1),         /* EXPOSURE NUMBER FOR MULTI-EXPO- * 03840000
**                                 /*  SURE TYPE DEVICE-2305.         * 03850000
**     3 DEVHEXAD CHAR(4),         /* DEVICE ADDRESS IN HEX           * 03860000
**       5 DEVADPAD CHAR(2),       /* 2 BYTES PADDING                 * 03870000
**       5 DEVAD    CHAR(2),       /* 2 BYTE HEX DEVICE ADDRESS       * 03880000
**         7 *        BIT(4),      /* NOT APPLICABLE                  * 03890000
**         7 DEVCHANL BIT(4),      /* DEVICE CHANNEL ADDRESS          * 03900000
**         7 DEVCTRLU BIT(4),      /* DEVICE CONTROL UNIT ADDRESS     * 03910000
**         7 DEVADDR  BIT(4),      /* DEVICE ADDRESS                  * 03920000
**     3 DEVDESCR CHAR(4),         /* DEVICE DESCRIPTORS              * 03930000
**       5 DEVMODEL CHAR(1),       /* DEVICE MODEL NUMBER             * 03940000
**       5 DEVFEATR CHAR(1),       /* DEVICE FEATURES                 * 03950000
**       5 DEVCLASS CHAR(1),       /* DEVICE CLASS                    * 03960000
**       5 DEVUNTYP CHAR(1),       /* DEVICE UNIT TYPE                * 03970000
**     3 DEVCDSCT CHAR(1),         /* ACTUAL CDS INFORMATION BYTE CNT * 03980000
**     3 DEVCDSFG CHAR(2),         /* FLAG BYTES FROM CDS             * 03990000
**       5 CDSFLAG1 CHAR(1),       /* CDS FLAG BYTE 1                 * 04000000
**         7 CDSFILPT BIT(1),      /* RUN FILE PROTECT MODE IF 1      * 04010000
**         7 CDSSHRED BIT(1),      /* DEVICE IS SHARED IF 1           * 04020000
**         7 CDSCEMNT BIT(1),      /* CE VOLUME IS MOUNTED IF 1       * 04030000
**         7 CDSEXMSK BIT(1),      /* EXTERNAL SIGNAL MASK IN CDS BYTE* 04040000
**                                 /*  11 IF 1                        * 04050000
**         7 CDSYMBLC BIT(1),      /* SYMBOLIC NAME IN CDS BYTES 12-19* 04060000
**                                 /*  IF 1                           * 04070000
**         7 CDS2CHSW BIT(1),      /* 2 CHANNEL SWITCH ON THIS DEVICE * 04080000
**                                 /*  IF 1                           * 04090000
**         7 CDSREMDV BIT(1),      /* THIS CDS FOR A REMOTE DEVICE    * 04100000
**                                 /*  IF 1                           * 04110000
**         7 CDSLNCON BIT(1),      /* LINE CONNECTION REQUIRED FOR    * 04120000
**                                 /*  THIS DEVICE IF 1               * 04130000
**       5 CDSFLAG2 CHAR(1),       /* CDS FLAG BYTE 2                 * 04140000
**         7 CDSNOPRI BIT(1),      /* DON'T ASSIGN THIS DEVICE AS     * 04150000
**                                 /*  PRIMARY IF 1                   * 04160000
**         7 *        BIT(1),      /* UNDEFINED                       * 04170000
**         7 *        BIT(1),      /* UNDEFINED                       * 04180000
**         7 *        BIT(1),      /* UNDEFINED                       * 04190000
**         7 *        BIT(1),      /* UNDEFINED                       * 04200000
**         7 *        BIT(1),      /* UNDEFINED                       * 04210000
**         7 *        BIT(1),      /* UNDEFINED                       * 04220000
**         7 *        BIT(1),      /* UNDEFINED                       * 04230000
**     3 CDSEXTSG CHAR(1),         /* CDS EXTERNAL SIGNAL MASK IF FLAG* 04240000
**                                 /*  1 BIT 3 IS 1                   * 04250000
**     3 CDSYMNAM CHAR(8),         /* SYMBOLIC NAME FOR THIS DEVICE   * 04260000
**                                 /*  IF FLAG 1 BIT 4 IS ON          * 04270000
**     3 SAVMDMSK CHAR(1),         /* SAVED MODESET/FILEMASK          * 04280000
**     3 DEVINTPT CHAR(1),         /* COUNT OF INTERRUPTS POSTED IN   * 04290000
**                                 /*  OECB TO THIS POINT. USED TO    * 04300000
**                                 /*  SYNCHRONIZE WAITIO-POLL POSTING* 04310000
**                                 /*  AND NAPA-IFDOLT58              * 04320000
**     3 DEVEXPAN CHAR(2);         /* 3 CHAR FOR EXPANSION            * 04330000
*         /* GO TO NEXT PAGE                                          * 04340000
*         GEN (EJECT);                                                  04350000
         EJECT                                                          04360000
         DS    0H                                                       04370000
*         /* PARAMETER LISTING MAP                                    * 04380000
*         DECLARE 1 * BASED(LSTPTR),    /* PARM LIST FOLLOWS          * 04390000
*                  3 * CHAR(1),         /* FILL                       * 04400000
*                  3 DIOLVL CHAR(1),    /* MACRO LEVEL                * 04410000
*                  3 * CHAR(2),         /* MORE FILL                  * 04420000
*                  3 CDSADR PTR(31),    /* CDS POINTER                * 04430000
*                  3 TECBADR PTR(31),   /* EVENT BLOCK POINTER        * 04440000
*                  3 OPERANDS CHAR(1);  /* OPERATION REQUESTED        * 04450000
*    DCL 1 IOSB BASED(ROPT),            /* MAP FOR                    * 04460000
*          3 * CHAR(112),               /*   TECB ADDRESS             * 04470000
*          3 TECBPTR;                   /*     CHECK                  * 04480000
*    DCL 1 * BASED(DVADPTR),         /* CALLERS DEVICE        @YM03331* 04490000
*          3 HEXADCDS CHAR(4);       /* HEX ADDRESS           @YM03331* 04500000
*         /* GO TO NEXT PAGE                                          * 04510000
*         GEN (EJECT);                                                  04520000
         EJECT                                                          04530000
         DS    0H                                                       04540000
*         /*     SECTION CONTROL TABLE MAP                            * 04550000
*         DCL 1 * BASED(COMMAPT),        /* SCT MAP             Y02008* 04560000
*              3 * CHAR(12),             /* FILL                Y02008* 04570000
*              3 PDEVADR CHAR(4);        /* HEX PRIMARY DEV ADDRY02008* 04580000
*         GEN (EJECT);                                                  04590000
         EJECT                                                          04600000
         DS    0H                                                       04610000
*         /* GO AHEAD BIG BOY                                         * 04620000
*         DEVTABPT=DEVTBPTR;             /* GET DEV TAB PTR     Y02906* 04630000
         L     @6,856(0,@2)                                       0034  04640000
*         /* CHECK MACRO LEVEL                                        * 04650000
*         IF DIOLVL  =  MACLVL THEN     /* IS MACRO LEVEL LEGIT       * 04660000
         CLC   1(1,@1),MACLVL                                     0035  04670000
*         GO TO  OPTIONCK;              /*IF SO ,GO                   * 04680000
         BC    08,OPTIONCK                                        0036  04690000
*         /*  SET ERROR RETURN CODE                                   * 04700000
*         ERROUT:                       /* LEAVE  DIO  MODULE         * 04710000
*         R15  =  FOUR;                 /* TO CALLER                  * 04720000
ERROUT   L     @F,FOUR                                            0037  04730000
*         RETURN;                       /* EXIT                       * 04740000
         BC    15,@EL01                                           0038  04750000
*         /* CHECK OUT OPTIONS SUPPLIED BY CALLER                     * 04760000
*         OPTIONCK:                     /* LOOK AT OPTIONS            * 04770000
*         IF OPERANDS ¬= ON THEN        /* IF ANYTHING OTHER THAN     * 04780000
OPTIONCK CLC   12(1,@1),ON                                        0039  04790000
*           GO TO ERROUT;               /* HIO SPECIFIED GO CAN REQST * 04800000
         BC    07,ERROUT                                          0040  04810000
*         /* INSURE TECB ADDRESS IS SUPPLIED                          * 04820000
*         TECBCHK:                      /* CHECK TECB ADDRESS         * 04830000
*         IF TECBADR  =  ZERO THEN      /* IF TECB ADDRESS WAS NOT    * 04840000
TECBCHK  L     @F,ZERO                                            0041  04850000
         C     @F,8(0,@1)                                         0041  04860000
*           GO TO ERROUT;               /* PACK HIM IN                * 04870000
         BC    08,ERROUT                                          0042  04880000
*            IF CDSADR = 0               /* IF NO CDS ADDRESS GIVEN,  * 04890000
*               THEN DO;                 /*   SEARCH            Y02008* 04900000
         SR    @F,@F                                              0043  04910000
         C     @F,4(0,@1)                                         0043  04920000
         BC    07,@9FF                                            0043  04930000
*                 DVADPTR = ADDR(PDEVADR);  /*  FOR             Y02008* 04940000
         LA    @4,12(0,@2)                                        0045  04950000
*                 GOTO DVTBSRCH;         /*  PRIMARY DEVICE     Y02008* 04960000
         BC    15,DVTBSRCH                                        0046  04970000
*              END;                      /*                     Y02008* 04980000
*              DVADPTR = CDSADR;         /* SEARCH FOR REQ'D DEVY02008* 04990000
@9FF     L     @4,4(0,@1)                                         0048  05000000
* DVTBSRCH:                              /*                     Y02008* 05010000
*         /* SEARCH DEVICE TABLE FOR A DEVICE MATCH                   * 05020000
*         DO WKREG1 = UNICTR TO ONE  BY -ONE;                           05030000
DVTBSRCH SR    @F,@F                                              0049  05040000
         IC    @F,1467(0,@2)                                      0049  05050000
         LR    @7,@F                                              0049  05060000
         BC    15,@DO9FD                                          0049  05070000
*         IF HEXADCDS=DEVHEXAD       /* IF MATCH              @YM03331* 05080000
*            THEN GOTO IOSBCK;           /*   GET IOSB PTR      Y02008* 05090000
@DO9FE   CLC   0(4,@4),32(@6)                                     0050  05100000
         BC    08,IOSBCK                                          0051  05110000
*         DEVTABPT=DEVTABPT+TABLNGTH;    /* GET NEXT DEV ENTRY  Y02906* 05120000
         AH    @6,860(0,@2)                                       0052  05130000
*         END;                          /* CONTINUE SCAN              * 05140000
*         /* GO TO ERROR EXITOR                                       * 05150000
*         GO TO ERROUT;                 /* PACK HIM IN                * 05160000
         SR    @0,@0                                              0053  05170000
         IC    @0,ONE                                             0053  05180000
         SR    @7,@0                                              0053  05190000
@DO9FD   SR    @0,@0                                              0053  05200000
         IC    @0,ONE                                             0053  05210000
         CR    @7,@0                                              0053  05220000
         BC    10,@DO9FE                                          0053  05230000
         BC    15,ERROUT                                          0054  05240000
* IOSBCK:                                /*                     Y02008* 05250000
*         /*     GET IOSB POINTER                               Y02008* 05260000
*         IF DEVTABPT=IODEV1(1)          /* SEARCH IO DEV TAB   Y02008* 05270000
*            THEN DO;                    /*   FOR IOSB PTR      Y02008* 05280000
IOSBCK   C     @6,672(0,@2)                                       0055  05290000
         BC    07,@9FA                                            0055  05300000
*               ROPT=IOSBPTR1(1);        /*     OF REQUESTED DEVY02008* 05310000
         MVC   1104(4,@2),676(@2)                                 0057  05320000
*               IF TECBADR=TECBPTR THEN  /* MAY NOT BE DP CALL        * 05330000
         L     @3,1104(0,@2)                                      0058  05340000
         L     @F,112(0,@3)                                       0058  05350000
         C     @F,8(0,@1)                                         0058  05360000
*                  GOTO CLASSCK;         /* IF DP, CHECK CLASS  Y02008* 05370000
         BC    08,CLASSCK                                         0059  05380000
*            END;                        /*                     Y02008* 05390000
*         IF DEVTABPT=IODEV1(2)          /*                     Y02008* 05400000
*            THEN DO;                    /*                     Y02008* 05410000
@9FA     C     @6,684(0,@2)                                       0061  05420000
         BC    07,@9F9                                            0061  05430000
*               ROPT=IOSBPTR1(2);        /*                     Y02008* 05440000
         MVC   1104(4,@2),688(@2)                                 0063  05450000
*               GOTO CLASSCK;            /*                     Y02008* 05460000
         BC    15,CLASSCK                                         0064  05470000
*            END;                        /*                     Y02008* 05480000
*         IF DEVTABPT=IODEV1(3)          /*                     Y02008* 05490000
*            THEN DO;                    /*                     Y02008* 05500000
@9F9     C     @6,696(0,@2)                                       0066  05510000
         BC    07,@9F8                                            0066  05520000
*               ROPT=IOSBPTR1(3);        /*                     Y02008* 05530000
         MVC   1104(4,@2),700(@2)                                 0068  05540000
*               GOTO CLASSCK;            /*                     Y02008* 05550000
*            END;                        /*                     Y02008* 05560000
*         GOTO ERROUT;                   /* ERROR               Y02008* 05570000
*         /* CHECK  CLASS OF REQUESTED  DEVICE                        * 05580000
*         CLASSCK:                      /* CK CLASS OF THIS DEVICE    * 05590000
*         IF ACTIVE='0'B THEN            /* IF NOTHING ACTIVE,  Y02906* 05600000
CLASSCK  TM    12(@6),B'00010000'                                 0072  05610000
*            GOTO CKOUT;                 /*  EXIT               Y02906* 05620000
         BC    08,CKOUT                                           0073  05630000
*         /*        ISSUE PURGE REQUEST                         Y02008* 05640000
*         R0=ADDR(ROPT);                 /* PARAMETER LIST PTR  Y02008* 05650000
         LA    @0,1104(0,@2)                                      0074  05660000
*         WKSVC(9) = XFF;                /* SVC33               Y02008* 05670000
         MVC   1108(1,@2),XFF                                     0075  05680000
*         IF DEVCLASS=TELCOMM |          /* IF                  Y02906* 05690000
*            DEVCLASS=TELCOMN |          /*  TP                 Y02906* 05700000
*            DEVCLASS=TELCONM  THEN      /*  DEVICE,            Y02906* 05710000
         CLC   38(1,@6),TELCOMM                                   0076  05720000
         BC    08,@9F7                                            0076  05730000
         CLC   38(1,@6),TELCOMN                                   0076  05740000
         BC    08,@9F6                                            0076  05750000
         CLC   38(1,@6),TELCONM                                   0076  05760000
         BC    07,@9F5                                            0076  05770000
*           GO TO SVC33;                /* GO ISSUE SVC33 FOR PURGE   * 05780000
         BC    08,SVC33                                           0077  05790000
*               WKSVC(9) = X00;          /* SVC 16              Y02008* 05800000
@9F5     MVC   1108(1,@2),X00                                     0078  05810000
* SVC33:                            /*                          Y02008* 05820000
*         LSTPTR=80;                     /* CALL CODE = X'50'   Y02008* 05830000
SVC33    LA    @1,80                                              0079  05840000
*         GEN(SVC PURGE);                /* SVC 59              Y02008* 05850000
         SVC PURGE                                                      05860000
         DS    0H                                                       05870000
*         CKOUT:                        /* EXIT THIS MODULE           * 05880000
*         ACTIVE='0'B;                   /* TURN OFF ACTIVE FLAGY02906* 05890000
CKOUT    NI    12(@6),B'11101111'                                 0081  05900000
*         HIODONE='1'B;                  /* TURN ON HIO DONE FLGY02906* 05910000
         OI    13(@6),B'00001000'                                 0082  05920000
*         R15  =  R15  &&  R15;         /* SET RETURN CODE            * 05930000
         XR    @F,@F                                              0083  05940000
*         END IFDOLT44                  /* EXIT THIS MODULE           * 05950000
* /* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.       05960000
* /*%INCLUDE SYSLIB  (IFDPF1  )                                         05970000
* /*%INCLUDE SYSLIB  (IFDEVTAB)                                         05980000
* ;                                                                     05990000
@EL01    L     @E,12(0,@D)                                        0084  06000000
         LM    @0,@C,20(@D)                                       0084  06010000
         BCR   15,@E                                              0084  06020000
@DATA1   EQU   *                                                        06030000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           06040000
@1       EQU   01                                                       06050000
@2       EQU   02                                                       06060000
@3       EQU   03                                                       06070000
@4       EQU   04                                                       06080000
@5       EQU   05                                                       06090000
@6       EQU   06                                                       06100000
@7       EQU   07                                                       06110000
@8       EQU   08                                                       06120000
@9       EQU   09                                                       06130000
@A       EQU   10                                                       06140000
@B       EQU   11                                                       06150000
@C       EQU   12                                                       06160000
@D       EQU   13                                                       06170000
@E       EQU   14                                                       06180000
@F       EQU   15                                                       06190000
         DS    0F                                                       06200000
         DS    0D                                                       06210000
@DATA    EQU   *                                                        06220000
LSTPTR   EQU   00000001            FULLWORD POINTER REGISTER            06230000
COMMAPT  EQU   00000002            FULLWORD POINTER REGISTER            06240000
DVADPTR  EQU   00000004            FULLWORD POINTER REGISTER            06250000
DEVTABPT EQU   00000006            FULLWORD POINTER REGISTER            06260000
WKREG1   EQU   00000007            FULLWORD POINTER REGISTER            06270000
R0       EQU   00000000            FULLWORD POINTER REGISTER            06280000
R15      EQU   00000015            FULLWORD POINTER REGISTER            06290000
MACLVL   EQU   *                   1 BYTE(S)                            06300000
         DC    X'02'                                                    06310000
ONE      EQU   *                   1 BYTE(S)                            06320000
         DC    X'01'                                                    06330000
TELCOMM  EQU   *                   1 BYTE(S)                            06340000
         DC    X'40'                                                    06350000
TELCONM  EQU   *                   1 BYTE(S)                            06360000
         DC    X'42'                                                    06370000
TELCOMN  EQU   *                   1 BYTE(S)                            06380000
         DC    X'10'                                                    06390000
ON       EQU   *                   1 BYTE(S)                            06400000
         DC    X'01'                                                    06410000
         ORG   @DATA+00000008                                           06420000
ZERO     EQU   *                   FULLWORD INTEGER                     06430000
         DC    XL4'00000000'                                            06440000
FOUR     EQU   *                   FULLWORD INTEGER                     06450000
         DC    XL4'00000004'                                            06460000
XFF      EQU   *                   1 BYTE(S)                            06470000
         DC    X'FF'                                                    06480000
X00      EQU   *                   1 BYTE(S)                            06490000
         DC    X'00'                                                    06500000
         ORG   @DATA+00000020                                           06510000
ONER     EQU   *                   FULLWORD INTEGER                     06520000
         DC    XL4'00000001'                                            06530000
COMMAP   EQU   00000000            2916 BYTE(S) ON WORD                 06540000
CHASCT   EQU   COMMAP+00000000     92 BYTE(S)                           06550000
DOLT00PT EQU   COMMAP+00000092     FULLWORD POINTER                     06560000
LGWRTCT  EQU   COMMAP+00000096     40 BYTE(S)                           06570000
INBUFPTR EQU   COMMAP+00000136     FULLWORD POINTER                     06580000
INBUFR   EQU   COMMAP+00000140     72 BYTE(S)                           06590000
PRTBUFR  EQU   COMMAP+00000212     124 BYTE(S)                          06600000
SECPTR   EQU   COMMAP+00000336     FULLWORD POINTER                     06610000
UTENT    EQU   COMMAP+00000340     FULLWORD POINTER                     06620000
DATPTR   EQU   COMMAP+00000344     FULLWORD POINTER                     06630000
DATIND   EQU   COMMAP+00000348     2 BYTE(S)                            06640000
PGMTAB   EQU   COMMAP+00000350     8 BYTE(S)                            06650000
SECLST   EQU   COMMAP+00000358     138 BYTE(S)                          06660000
PCIEXIT  EQU   COMMAP+00000496     FULLWORD POINTER                     06670000
NORMEXIT EQU   COMMAP+00000500     FULLWORD POINTER                     06680000
ABNMEXIT EQU   COMMAP+00000504     FULLWORD POINTER                     06690000
DIEPTR   EQU   COMMAP+00000508     FULLWORD POINTER                     06700000
IOSCB    EQU   COMMAP+00000512     136 BYTE(S)                          06710000
MODIOSB  EQU   COMMAP+00000512     108 BYTE(S)                          06720000
MODUSECB EQU   COMMAP+00000620     24 BYTE(S)                           06730000
OECBWRD1 EQU   COMMAP+00000644     4 BYTE(S)                            06740000
OECBSNSC EQU   COMMAP+00000644     1 BYTE(S)                            06750000
OECBINCT EQU   COMMAP+00000645     1 BYTE(S)                            06760000
OECBX    EQU   COMMAP+00000646     2 BYTE(S)                            06770000
EFCTRCB  EQU   COMMAP+00000648     20 BYTE(S) ON WORD                   06780000
CCWPTR   EQU   COMMAP+00000648     FULLWORD POINTER                     06790000
DVTPTR   EQU   COMMAP+00000652     FULLWORD POINTER                     06800000
FLGA     EQU   COMMAP+00000656     1 BYTE(S)                            06810000
BYPASPFX EQU   COMMAP+00000656     1 BIT(S)                             06820000
CEDEPOST EQU   COMMAP+00000656     1 BIT(S)                             06830000
GDP      EQU   COMMAP+00000656     1 BIT(S)                             06840000
SPEXPOS  EQU   COMMAP+00000656     1 BIT(S)                             06850000
A00000   EQU   COMMAP+00000656     1 BIT(S)                             06860000
A00001   EQU   COMMAP+00000656     1 BIT(S)                             06870000
A00002   EQU   COMMAP+00000656     1 BIT(S)                             06880000
A00003   EQU   COMMAP+00000656     1 BIT(S)                             06890000
FLGB     EQU   COMMAP+00000657     1 BYTE(S)                            06900000
INTIRNAL EQU   COMMAP+00000657     1 BIT(S)                             06910000
ATTNIN   EQU   COMMAP+00000657     1 BIT(S)                             06920000
VIRTCCWS EQU   COMMAP+00000657     1 BIT(S)                             06930000
OLDTECBX EQU   COMMAP+00000657     1 BIT(S)                             06940000
A00004   EQU   COMMAP+00000657     1 BIT(S)                             06950000
A00005   EQU   COMMAP+00000657     1 BIT(S)                             06960000
A00006   EQU   COMMAP+00000657     1 BIT(S)                             06970000
A00007   EQU   COMMAP+00000657     1 BIT(S)                             06980000
FILEMSK  EQU   COMMAP+00000658     1 BYTE(S)                            06990000
SNSCNT   EQU   COMMAP+00000659     1 BYTE(S)                            07000000
TECBPTRX EQU   COMMAP+00000660     FULLWORD POINTER                     07010000
SEEKPTR  EQU   COMMAP+00000664     FULLWORD POINTER                     07020000
IOEFTRAD EQU   COMMAP+00000668     FULLWORD POINTER                     07030000
IODEVTAB EQU   COMMAP+00000672     3*12 BYTE(S) ON WORD                 07040000
IODEV1   EQU   COMMAP+00000672     FULLWORD POINTER                     07050000
IOSBPTR1 EQU   COMMAP+00000676     FULLWORD POINTER                     07060000
IOECB1   EQU   COMMAP+00000680     4 BYTE(S)                            07070000
CMPLT    EQU   COMMAP+00000680     1 BYTE(S)                            07080000
WAITBIT  EQU   COMMAP+00000680     1 BIT(S)                             07090000
POSTBIT  EQU   COMMAP+00000680     1 BIT(S)                             07100000
CMPLCODE EQU   COMMAP+00000680     6 BIT(S)                             07110000
A00008   EQU   COMMAP+00000681     1 BYTE(S)                            07120000
A00009   EQU   COMMAP+00000682     2 BYTE(S)                            07130000
PSUDPOST EQU   COMMAP+00000682     1 BIT(S)                             07140000
A00010   EQU   COMMAP+00000682     3 BIT(S)                             07150000
WTCMPCD  EQU   COMMAP+00000682     12 BIT(S)                            07160000
SELAFFN  EQU   COMMAP+00000708     2 BYTE(S)                            07170000
CHARAFFN EQU   COMMAP+00000710     2 BYTE(S)                            07180000
XXXXXXXX EQU   COMMAP+00000712     144 BYTE(S)                          07190000
DEVTBPTR EQU   COMMAP+00000856     FULLWORD POINTER                     07200000
TABLNGTH EQU   COMMAP+00000860     HALFWORD INTEGER                     07210000
CESWT9   EQU   COMMAP+00000862     1 BYTE(S)                            07220000
CDSEQU   EQU   COMMAP+00000862     1 BIT(S)                             07230000
RESTBENT EQU   COMMAP+00000862     1 BIT(S)                             07240000
VRCAP    EQU   COMMAP+00000862     1 BIT(S)                             07250000
A00011   EQU   COMMAP+00000862     4 BIT(S)                             07260000
CESWT10  EQU   COMMAP+00000863     1 BYTE(S)                            07270000
MPSYS    EQU   COMMAP+00000863     1 BIT(S)                             07280000
AFFNSET  EQU   COMMAP+00000863     1 BIT(S)                             07290000
VERBCALL EQU   COMMAP+00000863     1 BIT(S)                             07300000
OPEN2    EQU   COMMAP+00000864     FULLWORD POINTER                     07310000
OPEN3    EQU   COMMAP+00000868     FULLWORD POINTER                     07320000
PSCT     EQU   COMMAP+00000872     FULLWORD POINTER                     07330000
DEVDEPAD EQU   COMMAP+00000876     FULLWORD POINTER                     07340000
TABAD    EQU   COMMAP+00000880     FULLWORD POINTER                     07350000
UTCOMAD  EQU   COMMAP+00000884     FULLWORD POINTER                     07360000
MCT      EQU   COMMAP+00000888     208 BYTE(S) ON WORD                  07370000
A00012   EQU   COMMAP+00000888     164 BYTE(S)                          07380000
PARPRADR EQU   COMMAP+00001052     FULLWORD POINTER                     07390000
A00013   EQU   COMMAP+00001056     40 BYTE(S)                           07400000
MCT1ADR  EQU   COMMAP+00001096     FULLWORD POINTER                     07410000
WKSVC    EQU   COMMAP+00001100     16 BYTE(S) ON WORD                   07420000
A00014   EQU   COMMAP+00001100     4 BYTE(S)                            07430000
ROPT     EQU   COMMAP+00001104     FULLWORD POINTER                     07440000
A00015   EQU   COMMAP+00001108     8 BYTE(S)                            07450000
OLTTAB   EQU   COMMAP+00001116     40 BYTE(S) ON WORD                   07460000
A00016   EQU   COMMAP+00001116     28 BYTE(S)                           07470000
TAB28    EQU   COMMAP+00001144     FULLWORD POINTER                     07480000
A00017   EQU   COMMAP+00001148     8 BYTE(S)                            07490000
LOGADR   EQU   COMMAP+00001156     FULLWORD POINTER                     07500000
SCHEDSA  EQU   COMMAP+00001160     FULLWORD POINTER                     07510000
SATAB    EQU   COMMAP+00001164     12 BYTE(S)                           07520000
PLKMOR   EQU   COMMAP+00001176     16 BYTE(S)                           07530000
REGX     EQU   COMMAP+00001192     FULLWORD POINTER                     07540000
TUCBAD1  EQU   COMMAP+00001196     FULLWORD POINTER                     07550000
TUCBAD2  EQU   COMMAP+00001200     FULLWORD POINTER                     07560000
TSTDEBAD EQU   COMMAP+00001204     FULLWORD POINTER                     07570000
ECB3     EQU   COMMAP+00001208     4 BYTE(S)                            07580000
UTCOM    EQU   COMMAP+00001212     64 BYTE(S)                           07590000
EXTBUF   EQU   COMMAP+00001276     56 BYTE(S)                           07600000
DPRDEBAD EQU   COMMAP+00001332     FULLWORD POINTER                     07610000
PRIDVPTR EQU   COMMAP+00001336     FULLWORD POINTER                     07620000
SECDVPTR EQU   COMMAP+00001340     FULLWORD POINTER                     07630000
REDEFINE EQU   COMMAP+00001344     FULLWORD POINTER                     07640000
COMMINT  EQU   COMMAP+00001348     FULLWORD POINTER                     07650000
NEXTREC  EQU   COMMAP+00001352     FULLWORD POINTER                     07660000
ADSVAREA EQU   COMMAP+00001356     FULLWORD POINTER                     07670000
ECB37    EQU   COMMAP+00001360     4 BYTE(S)                            07680000
REPLY37  EQU   COMMAP+00001364     72 BYTE(S)                           07690000
MSGAD37  EQU   COMMAP+00001436     FULLWORD POINTER                     07700000
TPSAVE   EQU   COMMAP+00001440     4 BYTE(S)                            07710000
TLCOUNT  EQU   COMMAP+00001444     HALFWORD INTEGER                     07720000
HRTSEL   EQU   COMMAP+00001446     HALFWORD INTEGER                     07730000
SAVECNT  EQU   COMMAP+00001448     2 BYTE(S)                            07740000
A00018   EQU   COMMAP+00001450     2 BYTE(S)                            07750000
SAVENT   EQU   COMMAP+00001452     4 BYTE(S)                            07760000
CESWITCH EQU   COMMAP+00001456     9 BYTE(S)                            07770000
CESWT    EQU   COMMAP+00001456     1 BYTE(S)                            07780000
LEGALTST EQU   COMMAP+00001456     1 BIT(S)                             07790000
SECDEV   EQU   COMMAP+00001456     1 BIT(S)                             07800000
OUTS     EQU   COMMAP+00001456     1 BIT(S)                             07810000
NUTS     EQU   COMMAP+00001456     1 BIT(S)                             07820000
LEGALDEV EQU   COMMAP+00001456     1 BIT(S)                             07830000
REINT    EQU   COMMAP+00001456     1 BIT(S)                             07840000
FERINT   EQU   COMMAP+00001456     1 BIT(S)                             07850000
A00019   EQU   COMMAP+00001456     1 BIT(S)                             07860000
CESWT1   EQU   COMMAP+00001457     1 BYTE(S)                            07870000
RTNFLD   EQU   COMMAP+00001457     1 BIT(S)                             07880000
SKTST    EQU   COMMAP+00001457     1 BIT(S)                             07890000
A00020   EQU   COMMAP+00001457     1 BIT(S)                             07900000
WAITFG   EQU   COMMAP+00001457     1 BIT(S)                             07910000
FILMSK   EQU   COMMAP+00001457     1 BIT(S)                             07920000
A00021   EQU   COMMAP+00001457     1 BIT(S)                             07930000
ONLINEOK EQU   COMMAP+00001457     1 BIT(S)                             07940000
TPFLAG   EQU   COMMAP+00001457     1 BIT(S)                             07950000
CESWT2   EQU   COMMAP+00001458     1 BYTE(S)                            07960000
NDCFO    EQU   COMMAP+00001458     1 BIT(S)                             07970000
A00022   EQU   COMMAP+00001458     1 BIT(S)                             07980000
FECOND   EQU   COMMAP+00001458     1 BIT(S)                             07990000
A00023   EQU   COMMAP+00001458     1 BIT(S)                             08000000
INITENT  EQU   COMMAP+00001458     1 BIT(S)                             08010000
NDR      EQU   COMMAP+00001458     1 BIT(S)                             08020000
TAPEHDR  EQU   COMMAP+00001458     1 BIT(S)                             08030000
A00024   EQU   COMMAP+00001458     1 BIT(S)                             08040000
CESWT3   EQU   COMMAP+00001459     1 BYTE(S)                            08050000
TALKVERB EQU   COMMAP+00001459     1 BIT(S)                             08060000
BYPALDEV EQU   COMMAP+00001459     1 BIT(S)                             08070000
BYPDEV   EQU   COMMAP+00001459     1 BIT(S)                             08080000
GRBCNTL  EQU   COMMAP+00001459     1 BIT(S)                             08090000
SUSDEL   EQU   COMMAP+00001459     1 BIT(S)                             08100000
TP1419   EQU   COMMAP+00001459     1 BIT(S)                             08110000
CDEXIST  EQU   COMMAP+00001459     1 BIT(S)                             08120000
NODP     EQU   COMMAP+00001459     1 BIT(S)                             08130000
CESWT4   EQU   COMMAP+00001460     1 BYTE(S)                            08140000
RSTRFLG  EQU   COMMAP+00001460     1 BIT(S)                             08150000
DPRFLG   EQU   COMMAP+00001460     1 BIT(S)                             08160000
WAITFLG  EQU   COMMAP+00001460     1 BIT(S)                             08170000
WRTFLG   EQU   COMMAP+00001460     1 BIT(S)                             08180000
A00025   EQU   COMMAP+00001460     1 BIT(S)                             08190000
WTORFLG  EQU   COMMAP+00001460     1 BIT(S)                             08200000
RPLYFLG  EQU   COMMAP+00001460     1 BIT(S)                             08210000
WTOFLG   EQU   COMMAP+00001460     1 BIT(S)                             08220000
CESWT5   EQU   COMMAP+00001461     1 BYTE(S)                            08230000
HDRFLG   EQU   COMMAP+00001461     1 BIT(S)                             08240000
RSLTFLG  EQU   COMMAP+00001461     1 BIT(S)                             08250000
FFEFLG   EQU   COMMAP+00001461     1 BIT(S)                             08260000
FCEFLG   EQU   COMMAP+00001461     1 BIT(S)                             08270000
PFEMSG   EQU   COMMAP+00001461     1 BIT(S)                             08280000
PCEMSG   EQU   COMMAP+00001461     1 BIT(S)                             08290000
SYMBFLG  EQU   COMMAP+00001461     1 BIT(S)                             08300000
PRNTOPTN EQU   COMMAP+00001461     1 BIT(S)                             08310000
CESWT6   EQU   COMMAP+00001462     1 BYTE(S)                            08320000
UTSCAL   EQU   COMMAP+00001462     1 BIT(S)                             08330000
ATM      EQU   COMMAP+00001462     1 BIT(S)                             08340000
EOFBIT   EQU   COMMAP+00001462     1 BIT(S)                             08350000
PFPMSG   EQU   COMMAP+00001462     1 BIT(S)                             08360000
CODE5    EQU   COMMAP+00001462     1 BIT(S)                             08370000
NORUN    EQU   COMMAP+00001462     1 BIT(S)                             08380000
SECRUN   EQU   COMMAP+00001462     1 BIT(S)                             08390000
RTSTAE   EQU   COMMAP+00001462     1 BIT(S)                             08400000
CESWT7   EQU   COMMAP+00001463     1 BYTE(S)                            08410000
INCLST   EQU   COMMAP+00001463     1 BIT(S)                             08420000
RETTO31  EQU   COMMAP+00001463     1 BIT(S)                             08430000
REMOTE   EQU   COMMAP+00001463     1 BIT(S)                             08440000
A00026   EQU   COMMAP+00001463     1 BIT(S)                             08450000
A00027   EQU   COMMAP+00001463     1 BIT(S)                             08460000
A00028   EQU   COMMAP+00001463     1 BIT(S)                             08470000
VIRTUAL  EQU   COMMAP+00001463     1 BIT(S)                             08480000
GOTINPUT EQU   COMMAP+00001463     1 BIT(S)                             08490000
CESWT8   EQU   COMMAP+00001464     1 BYTE(S)                            08500000
LISTFIX  EQU   COMMAP+00001464     1 BIT(S)                             08510000
A00029   EQU   COMMAP+00001464     1 BIT(S)                             08520000
A00030   EQU   COMMAP+00001464     1 BIT(S)                             08530000
READDCHK EQU   COMMAP+00001464     1 BIT(S)                             08540000
OLTINVV  EQU   COMMAP+00001464     1 BIT(S)                             08550000
SUTMSG   EQU   COMMAP+00001464     1 BIT(S)                             08560000
SNEWRUN  EQU   COMMAP+00001464     1 BIT(S)                             08570000
TALKHERE EQU   COMMAP+00001464     1 BIT(S)                             08580000
DYNCOM   EQU   COMMAP+00001465     1 BYTE(S)                            08590000
SECTUSE  EQU   COMMAP+00001466     1 BYTE(S)                            08600000
UNICTR   EQU   COMMAP+00001467     1 BYTE(S)                            08610000
UNITUSE  EQU   COMMAP+00001468     1 BYTE(S)                            08620000
DPLEVEL  EQU   COMMAP+00001469     1 BYTE(S)                            08630000
CNT37    EQU   COMMAP+00001470     1 BYTE(S)                            08640000
READDSV  EQU   COMMAP+00001471     6 BYTE(S)                            08650000
A00031   EQU   COMMAP+00001477     3 BYTE(S)                            08660000
READDMOD EQU   COMMAP+00001480     FULLWORD POINTER                     08670000
RDCBPTR  EQU   COMMAP+00001484     FULLWORD POINTER                     08680000
MSGMOD   EQU   COMMAP+00001488     FULLWORD POINTER                     08690000
ENDJOB   EQU   COMMAP+00001492     FULLWORD POINTER                     08700000
MHRPTR   EQU   COMMAP+00001496     FULLWORD POINTER                     08710000
RTALKBUF EQU   COMMAP+00001500     FULLWORD POINTER                     08720000
RINBUF   EQU   COMMAP+00001504     FULLWORD POINTER                     08730000
REIDCBPT EQU   COMMAP+00001508     FULLWORD POINTER                     08740000
REIOBPTR EQU   COMMAP+00001512     FULLWORD POINTER                     08750000
REIECB   EQU   COMMAP+00001516     4 BYTE(S)                            08760000
TALKECB  EQU   COMMAP+00001520     4 BYTE(S)                            08770000
RESPBUF  EQU   COMMAP+00001524     FULLWORD POINTER                     08780000
REIUCB   EQU   COMMAP+00001528     FULLWORD POINTER                     08790000
CESWTR   EQU   COMMAP+00001532     1 BYTE(S)                            08800000
RETAINAC EQU   COMMAP+00001532     1 BIT(S)                             08810000
REMERR   EQU   COMMAP+00001532     1 BIT(S)                             08820000
REMONMSG EQU   COMMAP+00001532     1 BIT(S)                             08830000
CENOMSG  EQU   COMMAP+00001532     1 BIT(S)                             08840000
TRANSMSG EQU   COMMAP+00001532     1 BIT(S)                             08850000
IMRESP   EQU   COMMAP+00001532     1 BIT(S)                             08860000
EXECOUT  EQU   COMMAP+00001532     1 BIT(S)                             08870000
A00032   EQU   COMMAP+00001532     1 BIT(S)                             08880000
CESWTR1  EQU   COMMAP+00001533     1 BYTE(S)                            08890000
ILLRESP  EQU   COMMAP+00001533     1 BIT(S)                             08900000
EXECANS  EQU   COMMAP+00001533     1 BIT(S)                             08910000
CECOMANS EQU   COMMAP+00001533     1 BIT(S)                             08920000
INFOMSG  EQU   COMMAP+00001533     1 BIT(S)                             08930000
RETRIEVE EQU   COMMAP+00001533     1 BIT(S)                             08940000
REMANS   EQU   COMMAP+00001533     1 BIT(S)                             08950000
EDOTMSG  EQU   COMMAP+00001533     1 BIT(S)                             08960000
REIENTRY EQU   COMMAP+00001533     1 BIT(S)                             08970000
CESWTR2  EQU   COMMAP+00001534     1 BYTE(S)                            08980000
REPLY00  EQU   COMMAP+00001534     1 BIT(S)                             08990000
A00033   EQU   COMMAP+00001534     1 BIT(S)                             09000000
ONCOMM   EQU   COMMAP+00001534     1 BIT(S)                             09010000
COMLOOP  EQU   COMMAP+00001534     1 BIT(S)                             09020000
WAIT     EQU   COMMAP+00001534     1 BIT(S)                             09030000
OPTERR   EQU   COMMAP+00001534     1 BIT(S)                             09040000
A00034   EQU   COMMAP+00001534     1 BIT(S)                             09050000
DPMSGREI EQU   COMMAP+00001534     1 BIT(S)                             09060000
CESWTR3  EQU   COMMAP+00001535     1 BYTE(S)                            09070000
ZUESUCB  EQU   COMMAP+00001536     HALFWORD INTEGER                     09080000
A00035   EQU   COMMAP+00001538     2 BYTE(S)                            09090000
EXPAND1  EQU   COMMAP+00001540     4 BYTE(S)                            09100000
SYMPTR   EQU   COMMAP+00001544     FULLWORD POINTER                     09110000
PGFXLIST EQU   COMMAP+00001548     16 BYTE(S)                           09120000
PARTITEM EQU   COMMAP+00001564     12 BYTE(S)                           09130000
PGFXOLT  EQU   COMMAP+00001576     8 BYTE(S)                            09140000
CORERSLT EQU   COMMAP+00001584     8 BYTE(S)                            09150000
VRSIZE   EQU   COMMAP+00001592     FULLWORD INTEGER                     09160000
A00036   EQU   COMMAP+00001596     8 BYTE(S)                            09170000
NEXTMCT  EQU   COMMAP+00001604     208 BYTE(S)                          09180000
THIRDMCT EQU   COMMAP+00001812     208 BYTE(S)                          09190000
DEVTAB   EQU   COMMAP+00002020     896 BYTE(S)                          09200000
DEVTABMP EQU   00000000            56 BYTE(S) ON WORD                   09210000
DEVEBCAD EQU   DEVTABMP+00000000   8 BYTE(S)                            09220000
DEVUCBAD EQU   DEVTABMP+00000008   FULLWORD POINTER                     09230000
DEVFLAG1 EQU   DEVTABMP+00000012   1 BYTE(S)                            09240000
ONLINE   EQU   DEVTABMP+00000012   1 BIT(S)                             09250000
PRIMARY  EQU   DEVTABMP+00000012   1 BIT(S)                             09260000
DPDONE   EQU   DEVTABMP+00000012   1 BIT(S)                             09270000
ACTIVE   EQU   DEVTABMP+00000012   1 BIT(S)                             09280000
ALOCATED EQU   DEVTABMP+00000012   1 BIT(S)                             09290000
GRABED   EQU   DEVTABMP+00000012   1 BIT(S)                             09300000
FILEPRT  EQU   DEVTABMP+00000012   1 BIT(S)                             09310000
A00037   EQU   DEVTABMP+00000012   1 BIT(S)                             09320000
DEVFLAG2 EQU   DEVTABMP+00000013   1 BYTE(S)                            09330000
DSNAME   EQU   DEVTABMP+00000013   1 BIT(S)                             09340000
SHARED   EQU   DEVTABMP+00000013   1 BIT(S)                             09350000
CEVOLUMN EQU   DEVTABMP+00000013   1 BIT(S)                             09360000
STANDLBL EQU   DEVTABMP+00000013   1 BIT(S)                             09370000
HIODONE  EQU   DEVTABMP+00000013   1 BIT(S)                             09380000
EXIOLVL3 EQU   DEVTABMP+00000013   1 BIT(S)                             09390000
PCIIND   EQU   DEVTABMP+00000013   1 BIT(S)                             09400000
A00038   EQU   DEVTABMP+00000013   1 BIT(S)                             09410000
DEVFLAG3 EQU   DEVTABMP+00000014   1 BYTE(S)                            09420000
ANRNOTST EQU   DEVTABMP+00000014   1 BIT(S)                             09430000
A00039   EQU   DEVTABMP+00000014   1 BIT(S)                             09440000
A00040   EQU   DEVTABMP+00000014   1 BIT(S)                             09450000
TAPEBIT  EQU   DEVTABMP+00000014   1 BIT(S)                             09460000
NOTEST   EQU   DEVTABMP+00000014   1 BIT(S)                             09470000
DEVALC   EQU   DEVTABMP+00000014   1 BIT(S)                             09480000
WAITPOST EQU   DEVTABMP+00000014   1 BIT(S)                             09490000
REISPEUD EQU   DEVTABMP+00000014   1 BIT(S)                             09500000
DEVFLAG4 EQU   DEVTABMP+00000015   1 BYTE(S)                            09510000
DEVREMDA EQU   DEVTABMP+00000015   1 BIT(S)                             09520000
DEVREMEA EQU   DEVTABMP+00000015   1 BIT(S)                             09530000
RESERVD1 EQU   DEVTABMP+00000015   1 BIT(S)                             09540000
RESERVD2 EQU   DEVTABMP+00000015   1 BIT(S)                             09550000
A00041   EQU   DEVTABMP+00000015   1 BIT(S)                             09560000
A00042   EQU   DEVTABMP+00000015   1 BIT(S)                             09570000
A00043   EQU   DEVTABMP+00000015   1 BIT(S)                             09580000
A00044   EQU   DEVTABMP+00000015   1 BIT(S)                             09590000
DEVLOEXT EQU   DEVTABMP+00000016   6 BYTE(S)                            09600000
LOEXTBB  EQU   DEVTABMP+00000016   2 BYTE(S)                            09610000
LOEXTCC  EQU   DEVTABMP+00000018   2 BYTE(S)                            09620000
LOEXTHH  EQU   DEVTABMP+00000020   2 BYTE(S)                            09630000
DEVHIEXT EQU   DEVTABMP+00000022   6 BYTE(S)                            09640000
HIEXTBB  EQU   DEVTABMP+00000022   2 BYTE(S)                            09650000
HIEXTCC  EQU   DEVTABMP+00000024   2 BYTE(S)                            09660000
HIEXTHH  EQU   DEVTABMP+00000026   2 BYTE(S)                            09670000
TAPELABL EQU   DEVTABMP+00000028   1 BYTE(S)                            09680000
A00045   EQU   DEVTABMP+00000029   1 BYTE(S)                            09690000
DEVMODE  EQU   DEVTABMP+00000030   1 BYTE(S)                            09700000
DEVEXPOS EQU   DEVTABMP+00000031   1 BYTE(S)                            09710000
DEVHEXAD EQU   DEVTABMP+00000032   4 BYTE(S)                            09720000
DEVADPAD EQU   DEVTABMP+00000032   2 BYTE(S)                            09730000
DEVAD    EQU   DEVTABMP+00000034   2 BYTE(S)                            09740000
A00046   EQU   DEVTABMP+00000034   4 BIT(S)                             09750000
DEVCHANL EQU   DEVTABMP+00000034   4 BIT(S)                             09760000
DEVCTRLU EQU   DEVTABMP+00000035   4 BIT(S)                             09770000
DEVADDR  EQU   DEVTABMP+00000035   4 BIT(S)                             09780000
DEVDESCR EQU   DEVTABMP+00000036   4 BYTE(S)                            09790000
DEVMODEL EQU   DEVTABMP+00000036   1 BYTE(S)                            09800000
DEVFEATR EQU   DEVTABMP+00000037   1 BYTE(S)                            09810000
DEVCLASS EQU   DEVTABMP+00000038   1 BYTE(S)                            09820000
DEVUNTYP EQU   DEVTABMP+00000039   1 BYTE(S)                            09830000
DEVCDSCT EQU   DEVTABMP+00000040   1 BYTE(S)                            09840000
DEVCDSFG EQU   DEVTABMP+00000041   2 BYTE(S)                            09850000
CDSFLAG1 EQU   DEVTABMP+00000041   1 BYTE(S)                            09860000
CDSFILPT EQU   DEVTABMP+00000041   1 BIT(S)                             09870000
CDSSHRED EQU   DEVTABMP+00000041   1 BIT(S)                             09880000
CDSCEMNT EQU   DEVTABMP+00000041   1 BIT(S)                             09890000
CDSEXMSK EQU   DEVTABMP+00000041   1 BIT(S)                             09900000
CDSYMBLC EQU   DEVTABMP+00000041   1 BIT(S)                             09910000
CDS2CHSW EQU   DEVTABMP+00000041   1 BIT(S)                             09920000
CDSREMDV EQU   DEVTABMP+00000041   1 BIT(S)                             09930000
CDSLNCON EQU   DEVTABMP+00000041   1 BIT(S)                             09940000
CDSFLAG2 EQU   DEVTABMP+00000042   1 BYTE(S)                            09950000
CDSNOPRI EQU   DEVTABMP+00000042   1 BIT(S)                             09960000
A00047   EQU   DEVTABMP+00000042   1 BIT(S)                             09970000
A00048   EQU   DEVTABMP+00000042   1 BIT(S)                             09980000
A00049   EQU   DEVTABMP+00000042   1 BIT(S)                             09990000
A00050   EQU   DEVTABMP+00000042   1 BIT(S)                             10000000
A00051   EQU   DEVTABMP+00000042   1 BIT(S)                             10010000
A00052   EQU   DEVTABMP+00000042   1 BIT(S)                             10020000
A00053   EQU   DEVTABMP+00000042   1 BIT(S)                             10030000
CDSEXTSG EQU   DEVTABMP+00000043   1 BYTE(S)                            10040000
CDSYMNAM EQU   DEVTABMP+00000044   8 BYTE(S)                            10050000
SAVMDMSK EQU   DEVTABMP+00000052   1 BYTE(S)                            10060000
DEVINTPT EQU   DEVTABMP+00000053   1 BYTE(S)                            10070000
DEVEXPAN EQU   DEVTABMP+00000054   2 BYTE(S)                            10080000
A00054   EQU   00000000            13 BYTE(S) ON WORD                   10090000
A00055   EQU   A00054+00000000     1 BYTE(S)                            10100000
DIOLVL   EQU   A00054+00000001     1 BYTE(S)                            10110000
A00056   EQU   A00054+00000002     2 BYTE(S)                            10120000
CDSADR   EQU   A00054+00000004     FULLWORD POINTER                     10130000
TECBADR  EQU   A00054+00000008     FULLWORD POINTER                     10140000
OPERANDS EQU   A00054+00000012     1 BYTE(S)                            10150000
IOSB     EQU   00000000            116 BYTE(S) ON WORD                  10160000
A00057   EQU   IOSB+00000000       112 BYTE(S)                          10170000
TECBPTR  EQU   IOSB+00000112       FULLWORD INTEGER                     10180000
A00058   EQU   00000000            4 BYTE(S) ON WORD                    10190000
HEXADCDS EQU   A00058+00000000     4 BYTE(S)                            10200000
A00059   EQU   00000000            16 BYTE(S) ON WORD                   10210000
A00060   EQU   A00059+00000000     12 BYTE(S)                           10220000
PDEVADR  EQU   A00059+00000012     4 BYTE(S)                            10230000
         ORG   @DATA                                                    10240000
         DS    00000024C                                                10250000
@TEMPS   DS    0F                                                       10260000
         IFDPATCH                                                       10270000
@DATEND  EQU   *                                                        10280000
@9F8     EQU   ERROUT                                                   10290000
@9F7     EQU   SVC33                                                    10300000
@9F6     EQU   SVC33                                                    10310000
         END   IFDOLT44                                                 10320000
./  ADD  SSI=71390226,NAME=IFDOLT46
         TITLE  'CENTRALIZED EXTRACTOR IFDOLT46'                        00100000
*********************************************************************** 00102000
*                                                                     * 00104000
*TITLE                                                                * 00106000
*    IFDOLT46 - CENTRALIZED EXTRACTOR                                 * 00108000
*      A028000,C299400-300100,402000,A403000,660300             XM2361  00109001
*                                                                     * 00110000
*STATUS                                                               * 00112000
*    CHANGE LEVEL 000                                                 * 00114000
*                                                                     * 00116000
* FUNCTION                                                            * 00118000
*    THIS MODULE PROVIDES THE FOLLOWING FUNCTIONS:                    * 00120000
*        1.READS RECORDS FROM THE RECORD ENTRY AREA OF SYS1.LOGREC    * 00122000
*          OR FROM A HISTORY DATA SET                                 * 00124000
*        2.READS RECORDS FROM THE SDR AREA OF SYS1.LOGREC             * 00126000
*        3.RESETS TO READ FROM THE BEGINNING OF THE DATA SET          * 00128000
*        4.PERFORMS AN END OF JOB FUNCTION                            * 00130000
*        5.PERFORMS A TEST TO DETERMINE IF MORE RECORDS WERE WRITTEN  * 00132000
*          ON THE SYS1.LOGREC DATA SET WHILE THAT SET WAS BEING       * 00134000
*          READ BY THE MODULE AND SETS TO READ THESE RECORD IF        * 00136000
*          REQUESTED TO DO SO                                         * 00138000
*                                                                     * 00140000
*ENTRY POINTS                                                         * 00142000
*    FROM IFDOLT26                                                    * 00144000
*                                                                     * 00146000
*INPUT                                                                * 00148000
*    WHEN THIS MODULE IS ENTERED REG 1 POINTS TO A PARAMETER LIST     * 00150000
*    WHICH IS SET UP AS FOLLOWS:                                      * 00152000
*        WORD1:  ADDRESS OF READ BUFFER                               * 00154000
*        WORD2:  BYTES 0-1  BYTE COUNT                                * 00156000
*                BYTE 2     RESERVED                                  * 00158000
*                BYTE 3     OPTION SWITCHES                           * 00160000
*        WORD3:  BYTE 0     RECORD TYPE                               * 00162000
*                BYTE 1     ADDITIONAL SEARCH KEY                     * 00164000
*                BYTES 2-3   NOT USED                                 * 00166000
*                                                                     * 00168000
*OUTPUT                                                               * 00170000
*    REGISTER 15 WILL CONTAIN A RETURN CODE DEPENDING ON THE STATUS   * 00172000
*    OF THE OPERATION                                                 * 00174000
*                                                                     * 00176000
*EXITS                                                                * 00178000
*    TO OPEN,CLOSE,ENQ,DEQ,READ,CHECK,EXCP MACROS                     * 00180000
*    RETURN TO IFDOLT26                                               * 00182000
*                                                                     * 00184000
* D579000-580000,C577000                                       YM05878* 00185002
*********************************************************************** 00186000
IFDOLT46 CSECT                                                          00200000
         ENTRY IFD46                                                    00300000
         ENTRY XDCB                    SERLOG DCB                Y02008 00330002
         ENTRY ACCUMDCB                ACCIN DCB                 Y02008 00360002
IFD46    DS    0F                                                       00400000
         USING *,XBASEREG                                               00500000
*********************************************************************** 00600000
*                                                                     * 00700000
*****                    TABLE OF EQUATES                         ***** 00800000
*                                                                     * 00900000
*********************************************************************** 01000000
R0       EQU   0                                                        01010000
R12      EQU   12                                                       01020000
R13      EQU   13                                                       01030000
R14      EQU   14                                                       01040000
R15      EQU   15                                                       01050000
         SPACE 2                                                        01100000
XMSGMODR EQU   15             CONDITION CODE RETURN REGISTER            01200000
XPARMREG EQU   1              PARAMETER REGISTER                        01300000
XWORK1   EQU   2              WORK REGISTER                             01400000
XWORK2   EQU   3              WORK REGISTER                             01500000
XWORK3   EQU   4              WORK REGISTER                             01600000
XWORK4   EQU   5              WORK REGISTER                             01700000
XWORK5   EQU   6              WORK REGISTER                             01800000
XWORK6   EQU   7              WORK REGISTER                             01900000
XWORK7   EQU   8              WORK REGISTER                             02000000
XWORK8   EQU   9              WORK REGISTER                             02100000
LINKNAME EQU   10             LINK NAME POINTER REGISTER                02200000
RETURNAD EQU   11             RETURN ADDR REGISTER TO MAIN CODE         02300000
XMISCREG EQU   0              MISCELLANEOUS                             02400000
XGRSAVE  EQU   13             GPR SAVE AREA ADDR REGISTER               02500000
XRETREG  EQU   14             RETURN ADDR REGISTER TO SUP               02600000
XBASEREG EQU   12             MODULE BASE REGISTER                      02700000
ZERO     EQU   0                                                        02800000
ERR      EQU   X'FF'                   ERROR CODE               XM2361  02850001
NORMAL   EQU   X'7F'                                                    02900000
INTCEPT  EQU   X'44'                                                    03000000
XFOXESX  EQU   X'FF'                                                    03100000
ONE      EQU   1                                                        03200000
TWO      EQU   2                                                        03300000
THREE    EQU   3                                                        03400000
FOUR     EQU   4                                                        03500000
FIVE     EQU   5                                                        03600000
SIX      EQU   6                                                        03700000
SEVEN    EQU   7                                                        03800000
EIGHT    EQU   8                                                        03900000
NINE     EQU   9                                                        04000000
TEN      EQU   10                                                       04100000
SIXTEEN  EQU   16                                                       04200000
NINETEEN EQU   19                                                       04300000
TWENTY   EQU   20                                                       04400000
TWENTY2  EQU   22                                                       04450037
TWENTY6  EQU   26                                                       04500000
TWENTY7  EQU   27                                                       04600000
TWENTY8  EQU   28                                                       04700000
THIRTY   EQU   30                                                       04800000
THIRTY7  EQU   37                                                       04900000
THIRTY8  EQU   38                                                       05000000
FORTY    EQU   40                                                       05100000
FORTY8   EQU   48                                                       05200000
FIFTY    EQU   50                                                       05300000
XTEN     EQU   X'10'                                                    05400000
CONCAT   EQU   X'08'                                                    05500000
HIST1ST  EQU   X'04'                                                    05600000
NOSELECT EQU   X'00'                                                    05700000
RECSELCT EQU   X'80'                                                    05800000
FULLKEY  EQU   X'40'                                                    05900000
INITSW   EQU   X'02'                                                    06000000
SYSFIRST EQU   X'20'                                                    06100000
XDCBF0   EQU   44                                                       06200000
XDEBF0   EQU   36                                                       06300000
XDCBF1   EQU   28                                                       06400000
EXTENTNG EQU   X'42'                                                    06500000
LOGFIRST EQU   X'20'                                                    06600000
HISFIRST EQU   X'04'                                                    06700000
HISTOFF  EQU   X'FB'                                                    06800000
UNITXCPT EQU   X'01'                                                    06900000
SYSDONE  EQU   X'10'                                                    07000000
LOGRECIN EQU   X'80'                                                    07100000
HISTIN   EQU   X'40'                                                    07200000
HISTDONE EQU   X'20'                                                    07300000
         EJECT                                                          07400000
*********************************************************************** 07500000
*                                                                     * 07600000
*****                   B R A N C H    T A B L E                  ***** 07700000
*                                                                     * 07800000
*********************************************************************** 07900000
         SPACE 2                                                        08000000
XREADENV B     RDENVREC            READ ENVIRONMENT RECORDS             08100000
XSTAGAIN B     RESTART             RESTART FROM BEGINNING OF DATA SET   08200000
XENDJOB  B     ENDOFJOB            PERFORM END OF JOB                   08300000
XCLEARSY B     XCLEARSY                 EREP USE ONLY                   08400000
XREADSDR B     XREADSDR                 EREP USE ONLY                   08500001
XWRITSDR B     XWRITSDR                 EREP USE ONLY                   08600000
XWRITREA B     XWRITREA                 EREP USE ONLY                   08700000
XMOREREC B     MOREREC             TEST FOR MORE RECORDS                08800000
EXSWITCH DC    X'00'                                                    08900000
         EJECT                                                          09000000
*********************************************************************** 09100000
*                                                                     * 09200000
*****                    INITIALIZATION                           ***** 09300000
*                                                                     * 09400000
*********************************************************************** 09500000
         DC    C'IFDOLT46 &SYSDATE'    * ID FOR OBJECT                * 09550002
         SPACE 2                                                        09600000
INITIALZ TM    EXSWITCH,INITSW               Q/IS THIS INITIAL ENTRY    09700000
         BNO   INITLZ01                      YES--INITIALIZE            09800000
         BR    XWORK8                        NO--RETURN                 09900000
INITLZ01 MVI   EXSWITCH,INITSW               TURN ON INITIAL ENTRY SW.  10000000
         ST    XPARMREG,PARMSAVE             SAVE PARAMETER REG.        10100000
         MVC   XRDCCW+ONE(THREE),ONE(XPARMREG) READ BUFFER ADDR TO CCW  10200000
         MVC   XRDCCW+SIX(TWO),FOUR(XPARMREG)  BYTE COUNT TO CCW        10300000
         ENQ   (LOGREC,RESID,E,,STEP),RET=HAVE                          10400001
         RDJFCB (XDCB,INOUT)       READ THE JFCB FOR SERLOG             10420000
         CLC   JDSNAME(8),COMPNAME COMPERE DATASET NAME FOR NULLFILE    10440000
         BE    SKIPSYS1            DON'T OPEN SYS1.LOGREC               10460000
         OPEN  (XDCB,INOUT)                                             10500000
SKIPSYS1 OPEN  (ACCUMDCB,INPUT)        OPEN HISTORY                     10600000
         L     XPARMREG,PARMSAVE             RESTORE PARM REG           10700000
         TM    XDCB+FORTY8,XTEN              Q/ DID SYS1.LOGREC OPEN    10800000
         BNO   INITLZ02                      NO--CHECK HISTORY          10900000
         OI    EXSWITCH,LOGRECIN             TURN ON LOGREC INPUT SW    11000000
         TM    ACCUMDCB+FORTY8,XTEN          Q/ DID HISTORY OPEN        11100000
         BNO   INITLZ03                      NO--SYS1.LOGREC ONLY INPUT 11200000
         OI    EXSWITCH,HISTIN               TURN ON HISTORY INPUT SW   11300000
         OI    EXSWITCH,CONCAT               TURN ON CONCATENATION SW   11400000
         TM    SEVEN(XPARMREG),LOGFIRST      Q/ SYS1.LOGREC 1ST INPUT   11500000
         BO    INITLZ03                      YES--READ SYS1.LOGREC 1ST  11600000
         OI    EXSWITCH,HISFIRST             NO--TURN ON HISTORY 1ST SW 11700000
         B     INITLZ03                      PREPARE TO READ HISTORY    11800000
INITLZ02 TM    ACCUMDCB+FORTY8,XTEN          Q/ DID HISTORY OPEN        11900000
         BNO   INITERR                       NO--ERROR   RETURN         12000000
         OI    EXSWITCH,HISFIRST             TURN ON HISTORY 1ST SW     12100000
         B     INITLZ04                      PREPARE TO READ HISTORY    12200000
INITLZ03 MVC   XRDCCW+ONE(THREE),ONE(XPARMREG) READ BUFFER ADDR TO CCW  12300000
         MVC   XRDCCW+SIX(TWO),FOUR(XPARMREG) BYTE COUNT TO CCW         12400000
*        MOVE SEEK ADDRESS FROM DEB TO EXCP SEEK BUFFER                 12500000
         L     XWORK1,XDCB+XDCBF0            LOAD DEB POINTER           12600000
         MVC   XSEEKBUF+ONE(SIX),XDEBF0(XWORK1)   MOVE BBCCHH TO IOB    12700000
         MVI   XSEEKBUF+SEVEN,ZERO           SET ID FIELD IN SEEKBUF 0  12800000
*        STORE IOB ADDRESS IN DCB                                       12900000
         LA    XWORK1,XIOB                   ADDRESS OF IOB             13000000
         ST    XWORK1,XDCB+XDCBF1            STORE IOB ADDRESS IN DCB   13100000
*        BRANCH TO READ HEADER RECORD                                   13200000
         LA    XWORK6,XRCCWS                 ADDR OF CCW CHAIN          13300000
         BAL   RETURNAD,XRDAD                READ SYS1.LOGREC           13400000
         B     RDHDRERR                      EOD RETURN                 13500000
         B     RDHDRERR                      ERROR RETURN               13600000
         L     XPARMREG,PARMSAVE             LOAD PARMAMETER REG        13700000
         L     XWORK2,ZERO(XPARMREG)         GET READ BUFFER ADDRESS    13800000
         MVC   XHDRBUF(FIFTY),ZERO(XWORK2)   SAVE HEADER RECORD         13900000
         MVI   XRESTART+SIX,ZERO             RESTART ADDR ID TO 0       14000000
         MVC   UCBCNT(TWO),THIRTY7(XWORK2)   NO.OF SYSTEM UCB'S         14100000
*        VERIFY AUTHENTICITY OF HEADER RECORD                           14200000
         CLI   XSAFBYTE,XFOXESX              CHECK SAFETY BYTE          14300000
         BNE   RDHDRERR                                                 14400000
         BR    XWORK8                        RETURN TO CALLING ROUTINE  14500000
INITLZ04 BR    XWORK8                                                   14600000
INITERR  LA    R15,12                   BOTH OPENS FAILED               14700000
         B     COMRTRN                  COMMON RETURN                   14800000
RDHDRERR LA    R15,16                   READ HEADER ERROR               14900000
         B     COMRTRN                  COMMON RETURN                   15000000
*********************************************************************** 15200000
*****       READ FROM STATISTICAL DATA RECORDER ESDRN AREA        ***** 15300000
*                                                                     * 15400000
*                                                                     * 15500000
*********************************************************************** 15600000
         SPACE 2                                                        15700000
         EJECT                                                          18500000
*********************************************************************** 18600000
*                                                                     * 18700000
*****               READ FROM RECORD ENTRY AREA                   ***** 18800000
*                                                                     * 18900000
*********************************************************************** 19000000
         SPACE 2                                                        19100000
RDENVREC SAVE  (14,12)                                                  19200000
         LR    RETURNAD,XGRSAVE        FOLLOW                           19300000
         ST    XGRSAVE,MYSAVE+FOUR       STANDARD                       19400000
         LA    XGRSAVE,MYSAVE             LINKAGE                       19500000
         ST    XGRSAVE,EIGHT(RETURNAD)     CONVENTIONS                  19600000
         TM    EXSWITCH,INITSW               Q/INITIAL ENTRY            19700000
         BO    RDBEGIN                       NO--CONTINUE               19800000
         BAL   XWORK8,INITIALZ               INITIALIZE                 19900000
         MVC   XSEEKBUF+ONE(SEVEN),XHDRBUF+NINETEEN YES-UPDATE SEEK     20000000
*                                                    ADDR TO START OF   20100000
*                                                     RECORD ENTRY AREA 20200000
RDBEGIN  L     XPARMREG,PARMSAVE             RESTORE PARM REG           20300000
         LH    XWORK4,FOUR(XPARMREG)    SAVE COUNT               S21052 20350001
         L     XWORK2,ZERO(XPARMREG)         GET READ BUFFER ADDRESS    20400000
         TM    EXSWITCH,HISFIRST             Q/IS HISTORY 1ST ON        20500000
         BNO   READSYS1                      NO--GO READ SYS1.LOGREC    20600000
RDENVR02 BAL   XWORK8,XACCINPT               GO READ HISTORY            20900000
         B     NORMRTRN                      EQUAL NORMAL RETURN        22300000
READSYS1 L     XPARMREG,PARMSAVE             RESTORE PARM REG           22400000
         L     XWORK2,ZERO(XPARMREG)         RESTORE BUFFER REG         22500000
         CLC   XHDRBUF+THIRTY(SEVEN),XSEEKBUF+ONE  CHECK FOR EOD        22600000
         BNE   READTYPE                      NO-- CHK TYPE OF READ      22700000
RDSYS001 OI    EXSWITCH,SYSDONE              TURN ON LOGREC READ SW     22800000
         TM    EXSWITCH,CONCAT               Q/CONCATENATION            22900000
         BNO   ENDDATA                       NO--GIVE END OF DATA RETRN 23000000
         NI    EXSWITCH,HISTOFF              TURN OFF HISTORY 1ST SW    23100000
         TM    EXSWITCH,HISTDONE             Q/HAS HISTORY BEEN READ    23200000
         BO    ENDDATA                       YES--GIVE EOD  RETURN      23300000
         B     RDENVR02                 NO--GO READ HISTORY             23400000
READTYPE TM    SEVEN(XPARMREG),RECSELCT      Q/ SELECT BY RECORD TYPE   23500000
         BNO   READALL                       NO-- SET TO READ ALL REC.  23600000
         TM    SEVEN(XPARMREG),FULLKEY       Q/ SELECT BY FULL KEY      23700000
         BO    PARMERR                       YES--PARAMETER ERROR       23800000
READALL  LA    XWORK6,XRCCWS                 ADDR OF CCW CHAIN          24300000
         MVC   XRDCCW+ONE(THREE),ONE(XPARMREG) READ BUFFER ADDR TO CCW  24400000
         MVC   XRDCCW+SIX(TWO),FOUR(XPARMREG)  COUNT TO CCW             24500000
RDSYS002 BAL   RETURNAD,XRDAD                READ SYS1.LOGREC           28000000
         B     RDSYS001                      EOD RETURN                 28100000
         B     DISKERR                       ERROR RETURN               28200000
         B     NORMRTRN                      MORMAL RETURN              28300000
** TAPE EOD RETURN                                                      28400000
HISTEOD  OI    EXSWITCH,HISTDONE             TURN ON HISTORY READ SW    28500000
         TM    EXSWITCH,CONCAT               Q/CONCATENATION            28600000
         BNO   ENDDATA                       NO--GIVE EOD RETURN        28700000
         NI    EXSWITCH,HISTOFF              YES--TURN OFF HIST 1ST SW  28800000
         TM    EXSWITCH,SYSDONE              Q/HAS LOGREC BEEN READ     28900000
         BO    ENDDATA                       YES-- GIVE EOD RETURN      29000000
         B     READSYS1                                                 29100000
DISKERR  LA    R15,20                   DISK READ ERROR RETURN          29170000
         B     COMRTRN                  COMMON RETURN                   29240000
NORMRTRN LA    R15,0                    NORMAL RETURN                   29310000
COMRTRN  L     XGRSAVE,FOUR(XGRSAVE)    RESTORE REG 13                  29380000
         L     R14,12(R13)              RESTORE REG 14                  29450000
         LM    R0,R12,20(R13)           RESTORE REGS                    29520000
         MVI   12(R13),X'FF'            RETURN INDICATION               29590000
         BR    14                       RETURN                          29660000
ENDDATA  LA    R15,4                    END OF DATA FOR SDR             29730000
         B     COMRTRN                  COMMON RETURN                   29800000
*ERROR  TAPE                                                            29870000
TAPERRTN MVI   ERRORSW,ERR             SET ERR RET TO OS        X02008  29940002
         BR    R14                     RETURN                   X02008  30010002
PARMERR  LA    R15,52                   PARM FIELD ERROR                30080000
         B     COMRTRN                  COMMON RETURN                   30150000
         EJECT                                                          30300000
*********************************************************************** 30400000
*                                                                     * 30500000
*****               RESTART FROM BEGINNING OF DATA SET            ***** 30600000
*                                                                     * 30700000
*********************************************************************** 30800000
         SPACE 2                                                        30900000
RESTART  SAVE  (14,12)                                                  31000000
         LR    RETURNAD,XGRSAVE        FOLLOW                           31100000
         ST    XGRSAVE,MYSAVE+FOUR       STANDARD                       31200000
         LA    XGRSAVE,MYSAVE             LINKAGE                       31300000
         ST    XGRSAVE,EIGHT(RETURNAD)     CONVENTIONS                  31400000
         TM    ACCUMDCB+FORTY8,XTEN          Q/ WAS HISTORY INPUT       31500000
         BNO   RESTART1                       NO/- BRANCH               31600000
         CLOSE (ACCUMDCB,REREAD)                                AZ17685 31700037
         OPEN  (ACCUMDCB,INPUT)                                 AZ17685 31710037
         TM    ACCUMDCB+FORTY8,XTEN        DID IT OPEN          AZ17685 31720037
         BO    RESTAROK            YES                          AZ17685 31730037
         LA    R15,8               RESET ERROR                  AZ17685 31740037
RESTAROK EQU  *                                                 AZ17685 31750037
         NI    EXSWITCH,X'DF'  TURN OFF HISTORY READ SWITCH             31800000
RESTART1 TM    XDCB+FORTY8,XTEN              Q/ WASSYS1.LOGREC INPUT    31900000
         BNO   RESRTRN                        NO/RETURN                 32000000
         CLOSE (XDCB,REREAD),TYPE=T          ISSUE TEMP CLOSE           32100000
         NI    EXSWITCH,X'EF'  TURN OFF LOGREC READ SWITCH              32200000
         MVC   XSEEKBUF+ONE(SEVEN),XHDRBUF+NINETEEN                     32300000
         MVI   XSEEKBUF+SEVEN,ZERO           SET ID FIELD TO ZERO       32400000
RESRTRN  B    NORMRTRN             NORMAL RETURN                        32500000
         EJECT                                                          32700000
*********************************************************************** 32800000
*                                                                     * 32900000
*****               CHECK FOR ADDITIONAL RECORDS                      * 33000000
*                                                                     * 33100000
*********************************************************************** 33200000
         SPACE 2                                                        33300000
MOREREC  SAVE  (14,12)                                                  33400000
         LR    RETURNAD,XGRSAVE        FOLLOW                           33500000
         ST    XGRSAVE,MYSAVE+FOUR       STANDARD                       33600000
         LA    XGRSAVE,MYSAVE             LINKAGE                       33700000
         ST    XGRSAVE,EIGHT(RETURNAD)     CONVENTIONS                  33800000
         TM    EXSWITCH,INITSW               Q/IS THIS INITIAL ENTRY    33900000
         BNO   MORERROR                      YES--INDICATE ERROR        34000000
         TM    XDCB+FORTY8,XTEN              Q/IS LOGREC OPEN           34100000
         BNO   MORERROR                                                 34200000
         L     XWORK2,ZERO(XPARMREG)         GET READ BUFFER ADDRESS    34300000
         MVC   XSEEKBUF+THREE(FIVE),ZERO(XWORK2) UPDATE SEEK            34400000
         MVC   XSAVEBUF(FORTY),XHDRBUF+TEN   SAVE DATA FIELD OF HDR     34500000
         BAL   XWORK8,INITLZ03               RE-READ HDR RECORD         34600000
         CLC   XSAVEBUF+TWENTY(SEVEN),XHDRBUF+THIRTY  COMPARE HDR RECS  34700000
         BE    NORMRTRN                 NORMAL RETURN                   34800000
* HDR RECORDS UNEQUAL--UPDATE SEEK ADDRESS                              34900000
        MVC   XSEEKBUF+THREE(FIVE),XSAVEBUF+TWENTY2             AZ19039 34950037
         LA    R15,48                   MORE RECORD RETURN              35000000
         B     COMRTRN                  COMMON RETURN                   35100000
MORERROR B     PARMERR                  PARM ERROR                      35200000
         EJECT                                                          35600000
*********************************************************************** 35700000
*                                                                     * 35800000
*****               ROUTINE TO READ SYS1.LOGREC (DISK)            ***** 35900000
*                                                                     * 36000000
*********************************************************************** 36100000
         SPACE 2                                                        36200000
XRDAD    STM   XMISCREG,XMSGMODR,XGREGSAV    SAVE GPRS                  36300000
         LR    XWORK1,XWORK6                 ADDR OF CCW CHAIN          36400000
*                                             WILL BE ALTERED BY        36500000
*                                              READ REA ROUTINE         36600000
         ST    XWORK1,XIOBCCW                STORE IN IOB               36700000
         MVC   XIOBSEEK(8),XSEEKBUF          MOVE SEEK ADDR TO IOB      36800000
XRDAD01  XC    XRWECB(4),XRWECB              CLEAR ECB                  36900000
         L     XWORK2,ZERO(XPARMREG)         GET READ BUFFER ADDRESS    37000000
         LA    XPARMREG,XIOB                 ADDRESS OF IOB             37100000
         SVC   EXCP                          EXECUTE CHANNEL PROGRAM    37200000
         WAIT  1,ECB=XRWECB                                             37300000
         CLI   XRWECB,NORMAL                 CHECK FOR NORMAL           37400000
         BE    XRDADOK                        BRANCH IF READ OK         37500000
         CLI   XRWECB,INTCEPT                CHECK FOR INTERCEPT        37600000
         BE    XRDAD01                        TRY AGAIN                 37700000
         CLI   XRWECB,EXTENTNG               CHECK FOR OUT OF EXTENT    37800000
         BE    XRDADND                        BRANCH ON OUT OF EXTENT   37900000
         TM    XIOBCSW+4,UNITXCPT            TEST FOR UNIT EXCEPTION    38000000
         BNO   XRDADNG                        BRANCH NOT EOF            38100000
*EOD CONDITION                                                          38200000
XRDADND  XC    XDADBUF(EIGHT),XDADBUF        CLEAR DATA BUFFER ON EOF   38300000
         LM    XMISCREG,XMSGMODR,XGREGSAV    RESTORE REGS               38400000
         BR    RETURNAD                      RETURN TO EOD RETURN       38500000
*READ OK                                                                38600000
XRDADOK  MVC   XSEEKBUF+THREE(FIVE),ZERO(XWORK2) UPDATE SEEK ADDR       38700000
         LM    XMISCREG,XMSGMODR,XGREGSAV    RESTORE REGS               38800000
         LA    RETURNAD,EIGHT(RETURNAD)      INCREMENT LINK REG         38900000
         BR    RETURNAD                      READ OK RETURN             39000000
XRDADNG  MVC   XSEEKBUF+THREE(FIVE),ZERO(XWORK2) UPDATE SEEK ADDR       39100000
         LM    XMISCREG,XMSGMODR,XGREGSAV    RESTORE REGS               39200000
         LA    RETURNAD,FOUR(RETURNAD)       INCREMENT LINK REG         39300000
         BR    RETURNAD                      READ ERROR RETURN          39400000
         EJECT                                                          39500000
*********************************************************************** 39600000
*                                                                     * 39700000
*****               ROUTINE TO READ FROM HISTORY TAPE             ***** 39800000
*                                                                     * 39900000
*********************************************************************** 40000000
         SPACE                                                          40100000
XACCINPT MVI   ERRORSW,ZERO            CLEAR ERROR SWITCH       X02008  40200002
         GET  ACCUMDCB                                         @Z37LIMD 40250000
         CLI   ERRORSW,ERR             HAS ERROR OCCURRED?      XM2361  40320001
         BC     7,MOVDATA          NO ERROR CONDITION          @Z37LIMD 40340000
         LA    R15,28                  YES, ERROR CONDITION     XM2361  40360001
         B     COMRTRN                                          XM2361  40380001
MOVDATA  LR     XWORK5,XPARMREG       GET ADDR BUFFER          @Z37LIMD 40383000
         LH     XWORK6,0(0,XPARMREG)    PICK UP REC LTH READ   @Z37LIMD 40384000
         CLR    XWORK4,XWORK6         IS REQUESTED CNT GT ACTUAL 37LIMD 40385000
         BH     CNTHIGH               YES                      @Z37LIMD 40386000
         LR     XWORK6,XWORK4         USE REQUESTED LTH        @Z37LIMD 40387000
         B      MOVDATA1                                       @Z37LIMD 40388000
CNTHIGH  LR     XWORK4,XWORK6         USE ACTUAL               @Z37LIMD 40389000
MOVDATA1 LA     XWORK3,4(XWORK2)      ADDR OLT BUFFER          @Z37LIMD 40390000
         MVCL   XWORK3,XWORK5         MOVE FROM BUFFER TO OLT  @Z37LIMD 40391000
         L      XPARMREG,PARMSAVE     RESTORE PARM REG         @Z37LIMD 40392000
         BR    XWORK8                                                   40400000
       EJECT                                                            40500000
*********************************************************************** 40600000
*                                                                     * 40700000
*****               WRITE HEADER RECORD (CLEAR SYS1.LOGREC)       ***** 40800000
*                                                                     * 40900000
*********************************************************************** 41000000
         SPACE 2                                                        41100000
       EJECT                                                            43600000
*********************************************************************** 43700000
*                                                                     * 43800000
*****               WRITE INTO RECORD ENTRY AREA                  ***** 43900000
*                                                                     * 44000000
*********************************************************************** 44100000
         SPACE 2                                                        44200000
       EJECT                                                            46500000
*********************************************************************** 46600000
*                                                                     * 46700000
*****                    WRITE INTO SDR AREA                      ***** 46800000
*                                                                     * 46900000
*********************************************************************** 47000000
         SPACE 2                                                        47100000
       EJECT                                                            49400000
*********************************************************************** 49500000
*                                                                     * 49600000
*****               ROUTINE TO WRITE SYS1.LOGREC (DISK)           ***** 49700000
*                                                                     * 49800000
*********************************************************************** 49900000
         SPACE                                                          50000000
         EJECT                                                          52200000
*********************************************************************** 52300000
*                                                                     * 52400000
*****                   END OF JOB ROUTINE                            * 52500000
*                                                                     * 52600000
*********************************************************************** 52700000
         SPACE 2                                                        52800000
ENDOFJOB SAVE  (14,12)                                                  52900000
         LR    RETURNAD,XGRSAVE        FOLLOW                           53000000
         ST    XGRSAVE,MYSAVE+FOUR       STANDARD                       53100000
         LA    XGRSAVE,MYSAVE             LINKAGE                       53200000
         ST    XGRSAVE,EIGHT(RETURNAD)     CONVENTIONS                  53300000
         TM    EXSWITCH,INITSW               Q/IS THIS INITIAL ENTRY    53400000
         BNO   PARMERR                  PARM ERROR                      53500000
         DEQ   (LOGREC,RESID,,STEP)                                     53600000
         TM    EXSWITCH,CONCAT               Q/IS THIS CONCATENATION    53700000
         BNO   EOJ001                        NO--SEE WHICH IS INPUT     53800000
         CLOSE (ACCUMDCB,REREAD)                                 SM2412 53900001
EOJ002   CLOSE (XDCB,LEAVE)                                             54000000
EOJ003   L     XPARMREG,PARMSAVE             RESTORE PARM REG           54100000
         MVI   EXSWITCH,0                    TURN OFF MY SWITCHES       54200000
         B     NORMRTRN                 NORMAL RETURN                   54300000
EOJ001   TM    XDCB+FORTY8,XTEN              Q/ WAS LOGREC INPUT        54400000
         BO    EOJ002                        YES--GO CLOSE SYS1.LOGREC  54500000
         CLOSE (ACCUMDCB,REREAD)                                 SM2412 54600001
         B     EOJ003                                                   54700000
         EJECT                                                          55100000
*********************************************************************** 55200000
*                                                                     * 55300000
*****          EVENT CONTROL BLOCK AND I/O BLOCK FOR SYS1.LOGREC  ***** 55400000
*                                                                     * 55500000
*********************************************************************** 55600000
         SPACE 2                                                        55700000
XRWECB   DC    1F'0'               EVENT CONTROL BLOCK                  55800000
         SPACE                                                          55900000
XIOB     DC    X'42000000'         IOB FLAGS                            56000000
XIOBECB  DC    AL4(XRWECB)         ADDRESS OF ECB                       56100000
XIOBCSW  DC    2F'0'               CSW IN IOB                           56200000
XIOBCCW  DC    AL4(XRCCWS)         FIRST CCW ADDRESS IN IOB             56300000
XIOBDCB  DC    AL4(XDCB)           DCB ADDRESS                          56400000
XIOBRA   DC    1F'0'               RESTART ADDRESS                      56500000
XIOBBCEC DC    1F'0'               BLOCK COUNT-ERROR COUNT              56600000
XIOBSEEK DC    2F'0'               SEEK ADDRESS                         56700000
         EJECT                                                          56800000
*********************************************************************** 56900000
*                                                                     * 57000000
*****          DATA CONTROL BLOCK FOR SYS1.LOGREC                 ***** 57100000
*                                                                     * 57200000
*********************************************************************** 57300000
         SPACE 2                                                        57400000
XDCB     DCB   DDNAME=SERLOG,                                          C57500000
               DSORG=PS,                                               C57600000
               MACRF=(E),                                        YM5878C57700002
               RECFM=U,                                                C57800000
               DEVD=DA,                                                C58060000
               EXLST=JFCBXLST                                           58120000
         EJECT                                                          58200000
*********************************************************************** 58300000
*                                                                     * 58400000
*****          DATA CONTROL BLOCK FOR HISTORY DEVICE              ***** 58500000
*                                                                     * 58600000
*********************************************************************** 58700000
         SPACE 2                                                        58800000
ACCUMDCB DCB   DDNAME=ACCIN,                                           C58900000
               DSORG=PS,                                               C59000000
               MACRF=(GL),                                     @Z37LIMDC59100000
               LRECL=1900,                                     @Z37LIMDC59200000
               EODAD=HISTEOD,                                          C59400000
               SYNAD=TAPERRTN                                           59500000
         EJECT                                                          59600000
*********************************************************************** 59700000
*                                                                     * 59800000
*****          CHANNEL COMMAND WORDS USED BY EXCP                 ***** 59900000
*                                                                     * 60000000
*********************************************************************** 60100000
         SPACE 2                                                        60200000
EXCP     EQU   0                                                        60300000
SIDE     EQU   X'31'                                                    60400000
TIC      EQU   X'08'                                                    60500000
RCKDMT   EQU   X'9E'                                                    60600000
WDATA    EQU   X'05'                                                    60700000
WKD      EQU   X'0D'                                                    60800000
RKD      EQU   X'8E'                                                    60900000
RCT      EQU   X'92'                                                    61000000
CC       EQU   X'40'                                                    61100000
SILI     EQU   X'20'                                                    61200000
SKE      EQU   X'29'                                                    61300000
RR0      EQU   X'16'                                                    61400000
ALL      EQU   X'70'                                                    61500000
CCSILI   EQU   X'60'                                                    61600000
         SPACE 2                                                        61700000
XRCCWS   CCW   SIDE,XSEEKBUF+3,CC,5     SEARCH ID EQUAL                 61800000
         CCW   TIC,XRCCWS,CC,1          TJL                             61900000
XRDCCW   CCW   RCKDMT,XCNTBUF,SILI,1586 READ COUNT,KEY,DATA-MULTI TRACK 62000000
       SPACE                                                            62100000
       EJECT                                                            63900000
TEMPADDR DC    F'0'                                                     64000000
PARMSAVE DC    F'0'                                                     64100000
MYSAVE   DC    18F'0'                                                   64200000
SEARCHKY DC    X'0'                                                     64300000
XSEEKBUF DC    XL8'0'                                                   64400000
XHDRBUF  DC    5XL8'0'                                                  64500000
XHDRBUFX DC    2XL8'0'                                                  64600000
RECDTYPE DC    X'0000'                                                  64700000
XCNTBUF  DC    5XL8'0'                                                  64800000
UCBCNT   DC    X'0000'                                                  64900000
XGREGSAV DC    16F'0'                                                   65000000
XSAVEBUF DC    5XL8'0'                                                  65100000
TEMP     DC    F'0'                                                     65200000
SRCHON2  DC    X'0002'                                                  65300000
SRCHON1  DC    X'0001'                                                  65400000
TAPEINP  DC    C'HISTORY'                                               65500000
LOGREC   DC    CL8'SERLOG'                                              65600000
RESID    DC    C'SYS1.LOGREC'                                           65700000
ACCUM    DC    CL8'ACCIN'                                               65800000
XDADBUF  DC    5XL8'00'                                                 65900000
SRCHKEY  DC    X'0000'                                                  66000000
JFCBXLST DS    0F                                                       66010000
         DC    X'07'                                                    66020000
         DC    AL3(JFCBAREA)                                            66030000
ERRORSW  DC    X'00'                   I/O ERROR SWITSCH        XM2361  66035001
JFCBAREA DS    0F                                                       66040000
JDSNAME  DS    CL8                                                      66050000
         DS    CL168                                                    66060000
COMPNAME DC    C'NULLFILE'                                              66070000
XRESTART EQU   XHDRBUF+11          RECORD ENTRY START AREA              66100000
XSAFBYTE EQU   XHDRBUF+47                                               66200000
HDRSAVE  EQU   XHDRBUF                                                  66300000
PATCH46  DC    20XL2'0700'              PATCH AREA               S21052 66350001
         END                                                            66400000
./  ADD  SSI=61530081,NAME=IFDOLT48
         TITLE ' RESIDENT DEVICE AND TEST SCHEDULER.  IFDOLT48'         00010000
         TITLE ' RESIDENT DEVICE AND TEST SCHEDULER.  IFDOLT48'         00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT48 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT48 01 JUN 76'                             0002  00070000
         STM   @E,@C,12(@D)                                       0002  00080000
         BALR  @B,0                                               0002  00090000
@PSTART  DS    0H                                                 0002  00100000
         USING @PSTART+00000,@B                                   0002  00110000
         ST    @D,@SAV001+4                                       0002  00120000
         LA    @F,@SAV001                                         0002  00130000
         ST    @F,8(0,@D)                                         0002  00140000
         LR    @D,@F                                              0002  00150000
*  GEN(USING CHASCT,2);                  /* COMMON AREA BASE REGISTER * 00160000
         USING CHASCT,2                                                 00170000
         DS    0H                                                       00180000
* GENERATE DATA;                                                        00190000
*  RESTRICT(2,3,4,5,6,7,8,9);             /* RESTRICT REG USAGE S21937* 00200000
*  DCL R0 REG(0) PTR;                                                   00210000
*  DCL R1 REG(1) PTR;                                                   00220000
*  DCL R2 REG(2) PTR;                                                   00230000
*  DCL R3 REG(3) PTR;                                                   00240000
*  DCL R4 REG(4) PTR;                                                   00250000
*  DCL R5 REG(5) PTR;                                                   00260000
*  DCL R6 REG(6) PTR;                                                   00270000
*  DCL R7 REG(7) PTR;                                                   00280000
*  DCL R8 REG(8) PTR;                                                   00290000
*  DCL R9 REG(9) PTR;                                                   00300000
*  DCL R10 REG(10) PTR;                                                 00310000
*  DCL R11 REG(11) PTR;                                                 00320000
*  DCL R12 REG(12) PTR;                                                 00330000
*  DCL R13 REG(13) PTR;                                                 00340000
*  DCL R14 REG(14) PTR;                                                 00350000
*  DCL R15 REG(15) PTR;                                                 00360000
*  DCL SECDVPTR PTR GENERATED;           /* LAST GRAB DEVICE */         00370000
*  DCL REPBUF EXT ENTRY;                 /* REPLY BUFFER */             00380000
*  DCL CESWT4 GENERATED;                 /* OLTEP SWITCHES */           00390000
*  DCL CE46 CHAR(3) BASED(ADDR(CESWT4)); /* OLTEP SWITCHES */           00400000
*  DCL MSGMOD PTR GENERATED;             /* MESSAGE MODULE */           00410000
*  DCL DATPTR PTR GENERATED;             /* DATA PROTECT ROOT MODULE */ 00420000
*  DCL CHASCT CHAR(88) GENERATED;        /* SECTION CONTROL TABLE */    00430000
*  DCL PRIDVPTR PTR GENERATED;           /* PRIME DEVICE TABLE */       00440000
*  DCL DEVDEPAD PTR GENERATED;           /* DEVICE ADDRESS */           00450000
*  DCL REGX PTR GENERATED;               /* POINTER TO UCB ADDRESS */   00460000
*  DCL UTCOM CHAR(64) GENERATED;         /* PASSON AREA */              00470000
*  DCL INBUFR CHAR(72) GENERATED;        /* INPUT OR OUTPUT BUFFER */   00480000
*  DCL PSCT GENERATED;                   /* SECTION CONTROL TABLE */    00490000
*  DCL SCHEDSA PTR GENERATED;            /* SAVE AREA ADDRESS */        00500000
*  DCL DEVTBPTR PTR GENERATED;           /* DEVICE TABLE ADDRESS      * 00510000
*  DCL TABLNGTH FIXED(15) GENERATED;     /* DEVICE TABLE LENGTH       * 00520000
*  DCL SECLST CHAR(10) GENERATED;        /* SECTION LIST */             00530000
*  DCL ECB37 FIXED GENERATED;            /* CECOM ECB */                00540000
*  DCL TAB28 PTR GENERATED;              /* NEW MACRO ENTRY POINT */    00550000
*  DCL OLTTAB PTR GENERATED;             /* LINK TABLE */               00560000
*  DCL LOGADR PTR GENERATED;             /* LOGSCAN MODULE ADDRESS */   00570000
*  DCL SECTUSE CHAR(1) GENERATED;        /* NUMBER OF SECTIONS RUN */   00580000
*  DCL UNICTR CHAR(1) GENERATED;         /* NUMBER OF DEVICES TO RUN */ 00590000
*  DCL UNITUSE CHAR(1) GENERATED;        /* NUMBER OF DEVICES RUN */    00600000
*  DCL PLKMOR PTR GENERATED;             /* FIRST PLINKED MODULE */     00610000
*  DCL DATIND GENERATED;                 /* PARAMETER LIST FOR OLTEP */ 00620000
*  DCL SECPTR PTR GENERATED;             /* ACTIVE SECTION ENTRY */     00630000
*  DCL UTENT PTR GENERATED;              /* FIRST UTS INSTRUCTION */    00640000
*  DCL CESWT CHAR(5) GENERATED;                                         00650000
*  DCL PRTBUFR CHAR(120) GENERATED;      /* PRINT BUFFER */             00660000
*  DCL TLCOUNT FIXED(15) GENERATED;      /* TEST LOOP COUNT */          00670000
*  DCL WKSVC GENERATED;                  /* SVC WORK AREA */            00680000
*  DCL MCT GENERATED;                    /* MODULE CONTROL TABLE */     00690000
*  DCL ROPT GENERATED;                   /* SVC AREA */                 00700000
*  DCL EXPAND1 GENERATED;                                               00710000
*  DCL PARTITEM CHAR(12) GENERATED;      /* PARTITION ITEMS     X02008* 00720000
*  DCL 1 * BDY(WORD) BASED(ADDR(PARTITEM)), /* PARTITION ITEMS  X02008* 00730000
*         2 PARADR PTR,                  /* OLTS AREA ADDRESS   X02008* 00740000
*         2 PARSZ FIXED,                 /* OLTS TOTAL WORK AREAX02008* 00750000
*         2 RTPLKSZ FIXED,               /* ROOT AND PLINK SIZE X02008* 00760000
*           3 DBLZ CHAR(2),              /* DOUBLE ZERO         X02008* 00770000
*           3 UTSIZ CHAR(2),             /* UTS SIZE            X02008* 00780000
*             5 * CHAR(1),               /* NA                  X02008* 00790000
*             5 * BIT(8),                /* NA                  X02008* 00800000
*              6 * BIT(5),               /* NA                  X02008* 00810000
*              6 TRPBITS BIT(3),         /* LAST THREE BITS     X02008* 00820000
*               7 * BIT(2),              /* NA                  X02008* 00830000
*               7 CLRBIT BIT(1),         /* OLD UTS INDICATOR   X02008* 00840000
*                 9 * BIT(1);            /* NA                  X02008* 00850000
*  DCL HRTSEL CHAR(2) GENERATED;         /* HIGHEST ROUTINE BYTES */    00860000
*  DCL 1 * BASED(ADDR(HRTSEL)),          /* HIGHEST ROUTINE BYTES */    00870000
*         2 TERTN CHAR(1),               /* LAST ROUTINE IN UTS */      00880000
*         2 HIRTN CHAR(1);               /* HIGHEST ROUTINE SELECTED */ 00890000
*  DCL VID CHAR(2) BASED(ADDR(WKSVC)+2); /* MODULE ID FOR SVC USE */    00900000
*  DCL MID1 CHAR(2) BASED(ADDR(MCT)+10); /* OLTEP MODULE ID */          00910000
*  DCL HCODE CHAR(1) BASED(132);         /* HCODE EQUATED */            00920000
*  DCL 1 * BDY(WORD) BASED(R5+16),       /* WORK AREA */                00930000
*         2 WKBY FIXED,                  /* WORK WORD */                00940000
*           3 * CHAR(2),                 /* BYTE ALIGNMENT */           00950000
*           3 WKBY34 CHAR(2);            /* WORK BYTES */               00960000
*  DCL 1 * BASED(MSGMOD),                /* MESSAGE MODULE */           00970000
*         2 IFD100 PTR,                  /* IFD100 MESSAGE PTR  S21937* 00980000
*         2 *(5) PTR,                    /* NA                  S21937* 00990000
*         2 IFD117 PTR,                  /* POINTER TO IFD117 MESSAGE * 01000000
*         2 IFD121 PTR,                  /* POINTER TO IFD121 MESSAGE * 01010000
*         2 * PTR,                       /* NA */                       01020000
*         2 IFD135 PTR,                  /* POINTER TO IFD135 MESSAGE * 01030000
*         2 IFD501 PTR,                  /* IFD501 MESSAGE PTR  S21937* 01040000
*         2 * PTR,                       /* NA */                       01050000
*         2 IFD158 PTR,                  /* POINTER TO IFD158 MESSAGE * 01060000
*         2 IFD201 PTR,                  /* PTR TO MESSAGE      X02008* 01070000
*         2 *(6) PTR,                    /* NA                  X02008* 01080000
*         2 IFD231 PTR,                  /* PTR TO MESSAGE      X02008* 01090000
*         2 IFD313 PTR,                  /* PTR TO MESSAGE      X02008* 01100000
*         2 IFD502 PTR,                  /* PTR TO MESSAGE      X02008* 01110000
*         2 IFD503 PTR,                  /* PTR TO MESSAGE      X02008* 01120000
*         2 IFD200 PTR,                  /* PTR TO MESSAGE      X02008* 01130000
*         2 *(10) PTR,                   /* NA                  Y02008* 01140000
*         2 IFD248 PTR,                  /* PTR TO MSG IFD248I  Y02008* 01150000
*           3 * PTR;                     /* LAST POINTER */             01160000
*  DCL IFD227 PTR BASED(MSGMOD+68);      /* IFD227 MSG PTR      X02008* 01170000
*  DCL 1 * BASED(IFD227),                /* IFD227 MESSAGE      X02008* 01180000
*         2 * CHAR(37),                  /* NA                  X02008* 01190000
*         2 UT227 CHAR(8);               /* UNIT TEST NAME      X02008* 01200000
*  DCL SECLEV CHAR(1) BASED(R3+11);      /* SCT LEVEL OF OLTS   X02008* 01210000
*  DCL 1 * BASED(IFD100),                /* IFD100 MESSAGE      S21937* 01220000
*         2 * CHAR(4),                   /* NA                  S21937* 01230000
*         2 MSG100A CHAR(78),            /* MESSAGE TEXT        S21937* 01240000
*           3 * CHAR(8),                 /* NA                  S21937* 01250000
*           3 MSG100 CHAR(70);           /* MESSAGE LESS ID     S21937* 01260000
*  DCL 1 SVR8 FIXED,                     /* SAVE AREA           X02008* 01270000
*         2 * CHAR(2),                   /* NA                  X02008* 01280000
*         2 SVR834 CHAR(2),              /* LAST HALF WORD      X02008* 01290000
*           3 * CHAR(1),                 /* NA                  X02008* 01300000
*           3 SVR84 CHAR(1);             /* LOW ORDER BYTE      X02008* 01310000
*  DCL RETCODE FIXED INIT(0);            /* RETURN CODE */              01320000
*  DCL TLRUN FIXED(15) BASED(ADDR(TLCOUNT)+6); /* TEST LOOP RUN S21937* 01330000
*  DCL INBF1 CHAR(1) BASED(ADDR(INBUFR)); /* FIRST BUFFER CHARACTER */  01340000
*  DCL 1 * BASED(ADDR(OLTTAB)),          /* LINK TABLE */               01350000
*         2 *(8) PTR,                    /* ENTRY POINTS FOR MACROS */  01360000
*         2 TMCOMAD PTR,                 /* TRANSIENT MANAGER AREA */   01370000
*         2 SECPRF PTR,                  /* SECTION PREFACE ADDRESS */  01380000
*           3 * PTR;                     /* LAST POINTER */             01390000
*  DCL 1 WK1TO8 CHAR(8) BASED(R5+4),     /* WORK AREA */                01400000
*         2 WK1TO4 CHAR(4),              /* FIRST WORD IN AREA */       01410000
*         2 WK5TO8 CHAR(4);              /* SECOND WORD IN AREA */      01420000
*  DCL 1 * BDY(WORD) BASED(R4),          /* MODULE ADDRESS */           01430000
*         2 INZNM CHAR(8),               /* MODULE NAME */              01440000
*         2 INZLV CHAR(2),               /* MACRO LEVEL */              01450000
*         2 INZRT FIXED(15),             /* DISPLACEMENT TO ROUTINE */  01460000
*         2 INZIN PTR,                   /* FIRST INSTRUCTION ADDRESS * 01470000
*           3 * CHAR(1);                 /* ITEM IN STRUCTURE */        01480000
*  DCL 1 WANTDONT CHAR(8) BASED(R3+1),   /* MASK FOR DESCRIPTS */       01490000
*         2 WANT CHAR(4),                /* BITS THAT MUST BE SET */    01500000
*         2 DONTWANT CHAR(4),            /* BITS THAT MUST NOT BE SET * 01510000
*             9 * CHAR(1);               /* NA                  X02008* 01520000
*  DCL 1 * BDY(WORD) BASED(R3+20),       /* NA                  X02008* 01530000
*         2 RTSIZ FIXED,                 /* ROOT AND PLINK SIZE X02008* 01540000
*         2 MOSIZ FIXED,                 /* MORECORE SIZE       X02008* 01550000
*           3 * CHAR(1);                 /* ITEM IN STRUCTURE */        01560000
*  DCL 1 * BDY(WORD) BASED(R4),          /* MODULE ADDRESS */           01570000
*         2 *(19) PTR,                   /* BRANCH AND SAVE AREA */     01580000
*         2 SECID CHAR(8),               /* OLD UTS NAME */             01590000
*         2 RTMSK CHAR(2);               /* ROUTINE */                  01600000
*  DCL 1 * BASED(R4),                    /* MESSAGE ADDRESS */          01610000
*         2 * CHAR(13),                  /* WTO MESSAGE */              01620000
*         2 WTO12 CHAR(2),               /* CHARACTERS TO MODIFY */     01630000
*           3 WTO1 CHAR(1),              /* CHARACTER TO MODIFY */      01640000
*         2 * CHAR(1),                   /* BLANK CHARACTER */          01650000
*         2 MSGTEST CHAR(8),             /* TEST SECTION */             01660000
*           3 * CHAR(7),                 /* NA                        * 01670000
*           3 OLDTEST CHAR(1),           /* OLD UTS                   * 01680000
*         2 BLKUNIT CHAR(26),            /* UNIT MESSAGE        Y02008* 01690000
*           3 * CHAR(1),                 /* BLANK CHARACTER */          01700000
*           3 MSGUNIT CHAR(22),          /* UNIT DEVICE AND SYM       * 01710000
*             4 KUNIT CHAR(4),           /* UNIT LABEL */               01720000
*             4 * CHAR(1),               /* BLANK CHARACTER */          01730000
*             4 MSGDEV CHAR(8),                                         01740000
*             4 * CHAR(1),               /* NA                        * 01750000
*             4 MSGSYB CHAR(8),          /* SYMBOLIC NAME             * 01760000
*           3 * CHAR(3),                 /* BLANK WITH V=       Y02008* 01770000
*           3 MSGVR CHAR(1),             /* V OR R - HOW OLT IS Y02008* 01780000
*                                        /* BEING RUN           Y02008* 01790000
*           3 MPCPUID CHAR(9),           /* BLANK FOLLOWED BY   Y02008* 01800000
*                                        /* CPUID=              Y02008* 01810000
*             5 * CHAR(7),               /* BLANK FOLLOWED BY   Y02008* 01820000
*                                        /* CPUID=              Y02008* 01830000
*             5 MSGCPUID CHAR(2),        /* CPU ID, EITHER 00   Y02008* 01840000
*                                        /* OR 01               Y02008* 01850000
*         2 * CHAR(1);                   /* LAST CHARACTER */           01860000
*  DCL 1 * BASED(ADDR(PLKMOR)),          /* PLINK AND MORECORE AREA */  01870000
*         2 ZIP16 CHAR(16),              /* PLINK MORECORE POINTER */   01880000
*           3 * CHAR(8),                 /* NA                  X02008* 01890000
*           3 ZIP8 CHAR(8);              /* PLINK POINTERS */           01900000
*  DCL 1 TMWK BASED(TMCOMAD),            /* TRANSIENT MGR WORK AREA */  01910000
*         2 * CHAR(36),                  /* NA */                       01920000
*         2 KNT CHAR(8),                 /* OLTEP MODULE NAME */        01930000
*           3 KNAME CHAR(6),             /* COMMON PART MODULE NAME */  01940000
*         2 MODNN CHAR(8),               /* NON OLTEP MODULE NAME */    01950000
*           3 MODNN6 CHAR(6),            /* FIRST SIX LETTERS OF NAME * 01960000
*         2 * CHAR(4),                   /* NA */                       01970000
*         2 GTCOR PTR;                   /* OBTAINED CORE ADDRESS */    01980000
*  DCL 1 * BASED(R8),                    /* DEVICES TO TEST */          01990000
*         2 * CHAR(56),                  /* ACTIVE DEVICE TABLE       * 02000000
*           3 DVEBC CHAR(8),                                            02010000
*           3 DVUCB PTR,                 /* UCB ADDRESS               * 02020000
*           3 * BIT(8),                  /* FLAGS */                    02030000
*             4 * BIT(1),                /* ALIGNMENT BIT */            02040000
*             4 PRIMBIT BIT(1),          /* PRIMARY DEVICE BIT */       02050000
*             4 * BIT(1),                /* NA                 SA51754* 02060000
*             4 EXIOACT BIT(1),          /* EXIO ACTIVE        SA51754* 02070000
*             4 * BIT(1),                /* NA                 SA51754* 02080000
*             4 GRABIT BIT(1),           /* GRAB BIT */                 02090000
*             4 * BIT(1),                /* NA                @Y30LPAW* 02100000
*             4 SYMBSSID BIT(1),         /* SSID IN SYMB FLD  @Y30LPAW* 02110000
*           3 * CHAR(19),                /* FLAGS AND DATA            * 02120000
*             4 * BIT(8),                /* NA                 SA51755* 02130000
*             5 * BIT(1),                /* NA                  X02008* 02140000
*             5 LETGOB BIT(1),           /* LETGO BIT           X02008* 02150000
*               5 CEVOL BIT(1),          /* CE PACK            SA51755* 02160000
*             3 DVTABCDS CHAR(20),                                      02170000
*               5 DVADR CHAR(4),                                        02180000
*               5 DVCDS CHAR(4),                                        02190000
*             5 * CHAR(1),                                              02200000
*             5 CDSFLAG CHAR(1),                                        02210000
*               7 * BIT(4),              /* NA                 SA51754* 02220000
*               7 SYMBIT BIT(1),         /* SYMBOLIC NAME      SA51754* 02230000
*             5 * BIT(8),                /* NA                  X02008* 02240000
*               7 * BIT(1),              /* NA                  X02008* 02250000
*               7 SKIPRIM BIT(1),        /* SKIP PRIMARY DEVICE X02008* 02260000
*             5 * CHAR(1),               /* NA                  X02008* 02270000
*               5 SYMNAME CHAR(8);                                      02280000
*  DCL 1 * BASED(DVUCB),                 /* UCB MAP                   * 02290000
*         2 *(4) FIXED,                  /* NA                        * 02300000
*         2 DVUDD CHAR(4);               /* DEVICE DESCRIPTORS        * 02310000
*  DCL DCNT1 CHAR(1) BASED(ADDR(UNITUSE)); /* DEVICES RUN */            02320000
*  DCL DCNT2 CHAR(1) BASED(ADDR(UNICTR)); /* DEVICES TO RUN */          02330000
*  DCL SCNT1 CHAR(1) BASED(ADDR(SECTUSE)); /* SECTIONS RUN */           02340000
*  DCL 1 PARM12 CHAR(12) BDY(WORD),      /* LIST FOR LOADER     X02008* 02350000
*         2 BNAME CHAR(8),               /* SECTION NAME        X02008* 02360000
*           3 BNAMCM CHAR(5),            /* SECTION TYPE        X02008* 02370000
*           3 BNAMVR CHAR(3),            /* SECTION VARIABLE    X02008* 02380000
*         2 TARGADR FIXED,               /* TARGET ADDRESS      X02008* 02390000
*         2 * FIXED INIT(0),             /* NA                  X02008* 02400000
*           3 FUNC12 CHAR(1),            /* LOADER FUNCTION     X02008* 02410000
*             5 * BIT(1),                /* NA                  X02008* 02420000
*             5 COMPUTB BIT(1),          /* COMPUTE SIZE        X02008* 02430000
*             5 * BIT(1),                /* NA                  X02008* 02440000
*             5 UTSENVL BIT(1),          /* UTS ENVOLVED        X02008* 02450000
*        9 * CHAR(1);                    /* NA                  X02008* 02460000
*  DCL 1 LDLIST BDY(WORD),                                              02470000
*         2 * FIXED(15) INIT(2),                                        02480000
*         2 * CHAR(2) INIT('12'),                                       02490000
*         2 * PTR INIT(ADDR(PARM12));    /* LOADER LIST         X02008* 02500000
*  DCL 1 UTSPL BASED(ADDR(PARM12)),      /* LIST FOR LOADER     X02008* 02510000
*         2 PLNAM CHAR(8),               /* SECTION NAME */             02520000
*           3 * CHAR(1),                 /* FIRST CHARACTER IN NAME */  02530000
*           4 PLNM15 CHAR(5),            /* FIRST PART OF NAME */       02540000
*           4 PLNM68 CHAR(3),            /* REST OF NAME */             02550000
*           3 PLSNM CHAR(6),             /* VARIABLE IN NAME */         02560000
*             4 PLTYPE CHAR(4),          /* DEVICE TYPE */              02570000
*             4 PLNAM6 CHAR(2),          /* SPECIAL TEST */             02580000
*           3 * CHAR(1);                 /* LAST CHARACTER */           02590000
*  DCL 1 * BASED(ADDR(SECLST)),          /* SECTION LIST */             02600000
*         2 * CHAR(1),                   /* FIRST CHARACTER IN LIST */  02610000
*         2 SCNT2 CHAR(1),               /* COUNT OF SECTIONS TO RUN */ 02620000
*         2 SNAM CHAR(5),                /* TYPE OF SECTION */          02630000
*           3 * CHAR(1),                 /* PREFIX LETTER */            02640000
*           3 STYPEN CHAR(4),            /* SECTION TYPE NUMBER */      02650000
*         2 SNAMST CHAR(5);              /* FIRST SECTION ENTRY */      02660000
*  DCL 1 * BASED(R9),                    /* SECTION TO RUN */           02670000
*         2 SNAM1 CHAR(3),               /* ACTIVE SECTION */           02680000
*         2 SLNG1 CHAR(2),               /* ACTIVE SECTION LENGTH */    02690000
*           3 * CHAR(1),                 /* BYTE ALIGNMENT */           02700000
*           3 * BIT(8),                  /* BYTE OF BITS */             02710000
*             4 * BIT(5),                /* NA                  X02008* 02720000
*             4 DBLBIT BIT(2),           /* BITS 5 AND 6        X02008* 02730000
*             4 OLDUT BIT(1),            /* OLD UTS */                  02740000
*         2 SNAM2 CHAR(3);               /* NEXT SECTION */             02750000
*  DCL 1 * BASED(ADDR(CHASCT)),          /* SECTION CONTROL TABLE */    02760000
*         2 * CHAR(8),                   /* TWO WORDS OF DATA */        02770000
*           3 ERRLPCT CHAR(2),           /* EL COUNT           SA51757* 02780000
*           3 * BIT(8),                  /* BYTE OF BITS */             02790000
*             4 * BIT(5),                /* NA */                       02800000
*             4 NPR BIT(1),              /* NO PRINT INDICATOR */       02810000
*             4 INDEFLP BIT(1),          /* INDEFINITE LOOP     X02008* 02820000
*             4 FECOM BIT(1),            /* 1ST ERROR COMMUNICATION */  02830000
*           3 * BIT(8),                  /* BYTE OF BITS */             02840000
*             4 SCTASTER BIT(2),         /* ERROR INDICATORS */         02850000
*               5 SCTERB BIT(1),         /* UNIT TEST IN ERROR */       02860000
*               5 ASTERB BIT(1),         /* ASTERISK INDICATES ERROR */ 02870000
*             4 CATB1 BIT(1),            /* CATASTROPHIC BIT */         02880000
*             4 AP BIT(1),               /* ALTERNATE PRINT */          02890000
*             4 NCP BIT(1),              /* NO CONTROL PRINT */         02900000
*             4 NEP BIT(1),              /* NO ERROR PRINT */           02910000
*             4 ERLOP BIT(1),            /* ERROR LOOP */               02920000
*             4 TSLOP BIT(1),            /* TEST LOOP */                02930000
*           3 * CHAR(3),                 /* NA                  X02008* 02940000
*           3 SCTLEV CHAR(1),            /* SCT LEVEL           X02008* 02950000
*         2 DVSEC1 CHAR(2),              /* PRIME DEVICE SECTION */     02960000
*         2 PDFLG CHAR(2),               /* PRIME DEVICE FLAGS */       02970000
*           3 * BIT(8),                  /* NA                 SA51755* 02980000
*           3 * BIT(8),                  /* NA                 SA51755* 02990000
*             4 * BIT(2),                /* NA                 SA51755* 03000000
*             4 CEVOLUM BIT(1),          /* CE VOLUME          SA51755* 03010000
*         2 PDPAD1 CHAR(8),                                             03020000
*           3 PDPA1 CHAR(4),                                            03030000
*           3 PDDD1 CHAR(4),             /* PRIME DEVICE DESCRIPTS */   03040000
*             4 * CHAR(2),               /* BYTE ALIGNMENT */           03050000
*             4 DCLAS CHAR(1),           /* DEVICE CLASS */             03060000
*         2 DVSEC2 CHAR(2),              /* SECONDARY DEVICE SECTION */ 03070000
*         2 * CHAR(2),                                                  03080000
*         2 PDPAD2 CHAR(8),                                             03090000
*           3 PDPA2 CHAR(4),                                            03100000
*           3 PDDD2 CHAR(4),             /* SEC DEVICE DESCRIPTS */     03110000
*         2 * CHAR(1),                   /* BYTE ALIGNMENT */           03120000
*         2 * BIT(8),                    /* BYTE OF BITS */             03130000
*           3 * BIT(3),                  /* NA                 SA51757* 03140000
*           3 ERRCNT BIT(1),             /* EL COUNT IN OPTION SA51757* 03150000
*           3 ONEPRIM BIT(1),            /* ONE PRIME DEVICE ONLY */    03160000
*           3 CLEANUP BIT(1),            /* UTS CLEANING UP           * 03170000
*         2 * CHAR(2),                   /* NA                        * 03180000
*         2 * BIT(8),                    /* NA                        * 03190000
*           3 * BIT(1),                  /* NA                        * 03200000
*           3 CLEANRT BIT(1),            /* UTS HAS CLEANUP           * 03210000
*           3 * BIT(4),                  /* NA                   M1463* 03220000
*           3 LASTSEC BIT(1),            /* LAST SECTION RUNNING M1463* 03230000
*          3 DYCOM BIT(1),               /* OLT CAN HANDLE DYN  X02008* 03240000
*        2 * BIT(8),                     /* FLAGS               X02008* 03250000
*          3 TALKFLAG BIT(1),            /* CE WANTS TALK       X02008* 03260000
*             9 * CHAR(1);                                              03270000
*  DCL CDS8TO19 CHAR(12) BASED(ADDR(CHASCT)+20); /* CDS ITEMS         * 03280000
*  DCL 1 * BASED(ADDR(CHASCT)+4),        /* SCT WORD 1 */               03290000
*         2 SCTWD17 CHAR(28),            /* SCT WORDS 1 THRU 7 */       03300000
*           3 RTNM1ST CHAR(2),           /* 1ST ROUTINES MASK */        03310000
*         2 * CHAR(1),                   /* NA */                       03320000
*         2 * BIT(8),                    /* FLAGS */                    03330000
*           3 * BIT(2),                  /* NA */                       03340000
*           3 CSELRTN BIT(1),            /* CONSOLE SELECTED ROUTINES * 03350000
*         2 * CHAR(6),                   /* NA */                       03360000
*         2 RTNMLST CHAR(30);            /* EXTENDED ROUTINES MASK */   03370000
*  DCL 1 * BASED(ADDR(CESWT)),           /* OLTEP SWITCHES GROUP */     03380000
*         2 * BIT(8),                    /* OLTEP SWITCHES */           03390000
*           3 * BIT(2),                  /* NA */                       03400000
*           3 OORN BIT(2),               /* OLD OR NEW UTS */           03410000
*             4 OUTS BIT(1),             /* OLD UNIT TEST SECTIONS */   03420000
*             4 NUTS BIT(1),             /* NEW UNIT TEST SECTIONS */   03430000
*         2 * BIT(8),                    /* OLTEP SWITCHES */           03440000
*           3 * BIT(1),                                                 03450000
*           3 SEEK2321 BIT(1),           /* 2321 SPECIAL SECTION */     03460000
*           3 T2321T BIT(1),             /* 2321T TEST */               03470000
*           3 * BIT(2),                  /* NA */                       03480000
*           3 T2321 BIT(1),              /* 2321 SECTION */             03490000
*           3 * BIT(1),                  /* NA */                       03500000
*           3 TPFLAG BIT(1),             /* TP TESTS */                 03510000
*         2 * BIT(8),                    /* OLTEP SWITCHES */           03520000
*           3 NDCFO BIT(1),              /* PREVENTS DYN COM */         03530000
*           3 DPONDEV BIT(1),            /* DATA PROTECT DONE */        03540000
*           3 * BIT(3),                  /* NA */                       03550000
*           3 NDR BIT(1),                /* NO DEVICE REQUIRED */       03560000
*           3 TAPEHDR BIT(1),            /* TAPE HEADER BIT */          03570000
*         2 * BIT(8),                    /* OLTEP SWITCHES */           03580000
*           3 OSTWTOR BIT(1),            /* OUTSTANDING WTOR */         03590000
*           3 BYPDEV BIT(2),             /* BYPASS ONE OR ALL DEVICES * 03600000
*             4 NURUN BIT(1),            /* BYPASS ALL DEVICE TESTS */  03610000
*             4 NUDEV BIT(1),            /* BYPASS THIS DEVICE */       03620000
*           3 * BIT(2),                                                 03630000
*           3 TP1419 BIT(1),             /* ACTIVE TP OR 1419 */        03640000
*         2 CE45 CHAR(2),                /* OLTEP SWITCHES      S21937* 03650000
*           3 CE4 BIT(8),                /* SWITCH 4            S21937* 03660000
*           3 CE5 BIT(8),                /* SWITCH 5            S21937* 03670000
*             4 * BIT(2),                /* NA                  S21937* 03680000
*             4 FEITEMS BIT(4),          /* FIRST ERROR ITEMS   S21937* 03690000
*               6 FFEFCE BIT(2),         /* 1ST ERROR BITS       M5851* 03700000
*         2 CE6 BIT(8),                  /* OLTEP SWITCHES      S21937* 03710000
*           3 UTSCAL BIT(1),             /* UTS CALLED INDICATION */    03720000
*           3 * BIT(1),                  /* ALIGNMENT BIT */            03730000
*           3 EOJLOG BIT(1),             /* EOJ LOGSCAN */              03740000
*           3 PFPMSG BIT(1),             /* PRINT FILE PROTECT */       03750000
*           3 CODE5 BIT(1),              /* CONDITION CODE 5 */         03760000
*           3 NORUN BIT(1),              /* DO NOT RUN SECTION */       03770000
*           3 SECRUN BIT(1),             /* SECTION RUN */              03780000
*           3 RTSTAE BIT(1),             /* STAE ROUTINE */             03790000
*         2 * BIT(8),                    /* OLTEP SWITCHES            * 03800000
*           3 * BIT(2),                                                 03810000
*           3 REMOTE BIT(1),                                            03820000
*           3 * BIT(3),                  /* NA                  Y02008* 03830000
*           3 VIRTUAL BIT(1),            /* OLTEP IN V=V OR V=R Y02008* 03840000
*         2 CE8 BIT(8),                  /* OLTEP SWITCHES     SA51756* 03850000
*         3 * BIT(3),                    /*   NA               SA54318* 03860000
*         3 READDCHK BIT(1),             /* READD FLAG         SA54318* 03870000
*         3 OLTINVV BIT(1),              /* OLT IS IN VIRTUAL   Y02008* 03880000
*           3 SUTMSG BIT(1),             /* START MSG ISSUED   SA51756* 03890000
*           3 SNEWRUN BIT(1),            /* START NEW RUN      SA51756* 03900000
*             4 * BIT(1);                /* LAST OLTEP SWITCH */        03910000
*         DCL CESWTR CHAR(1) GENERATED;  /* RETAIN 370 SWITCHES S20203* 03920000
*         DCL 1 * CHAR(1) BASED(ADDR(CESWTR)),  /*              S20203* 03930000
*               3 RETAINAC BIT(1),       /* REI ACTIVE          S20203* 03940000
*               3 REMERR BIT(1),         /* ERROR OCCURRED      S20203* 03950000
*               3 REMNOMSG BIT(1),       /* REMOTE NO MSG       S20203* 03960000
*               3 CENOMSG BIT(1),        /* ONSITE NO MSG       S20203* 03970000
*               3 PRTNOMSG BIT(1),       /* SYSOUT NO MSG       S20203* 03980000
*               3 IMRESP BIT(1),         /* IMMEDIATE RESP MSG  S20203* 03990000
*               3 EXECOUT BIT(1),        /* MSG IFD104E ISSUED  S20203* 04000000
*               3 CECOMOUT BIT(1);       /* MSG IFD154E ISSUED  S20203* 04010000
*  DCL CESWTR1 CHAR(1) GENERATED;        /* REI SWITCHES        S20203* 04020000
*  DCL 1 * CHAR(1) BASED(ADDR(CESWTR1)),  /*                    S20203* 04030000
*         3 * BIT(2),                    /*                     S20203* 04040000
*         3 CECOMANS BIT(1),             /*                     S20203* 04050000
*         3 * BIT(2),                    /*                     S20203* 04060000
*         3 REMANS BIT(1),               /*                     S20203* 04070000
*         3 * BIT(2);                    /*                     S20203* 04080000
*         DCL BNAMCMSV CHAR(5);          /*                     S20203* 04090000
*  DCL 1 * CHAR(4),                      /* MESSAGE MODIFIERS */        04100000
*         2 MSGSTR CHAR(2) INIT(' S'),   /* START MESSAGE */            04110000
*         2 MSGEND CHAR(2) INIT(' T');   /* TERMINATE MESSAGE */        04120000
*  DCL UTS201 CHAR(8) BASED(R1+43);      /* UTS NAME            X02008* 04130000
*  DCL 1 MSG231 BASED(R1),               /* IFD231 MESSAGE      X02008* 04140000
*         2 * CHAR(12),                  /* NA                  X02008* 04150000
*         2 WMSGTEST CHAR(8),            /* UNIT TEST NAME */           04160000
*         2 * CHAR(15),                  /* NA                  X02008* 04170000
*         2 WMSGDEV CHAR(8);                                            04180000
*  DCL RTMASK CHAR(1) BASED(R2+70);      /* RETURN CODE MASK    X02008* 04190000
*  DCL MSGUTS CHAR(8) BASED(R1+12);      /* SECTION NAME         M1463* 04200000
*  DCL 1 * BASED(R4),                    /* WTO MESSAGE */              04210000
*         2 * CHAR(20),                  /* ALIGNMENT BYTES */          04220000
*         2 WTO4NM CHAR(8);              /* SECTION NAME */             04230000
*  DCL 1 MSG200 BASED(R1),               /* IFD200 MESSAGE      X02008* 04240000
*         2 * CHAR(17),                  /* NA                  X02008* 04250000
*         2 NM200 CHAR(8);               /* SECTION NAME        X02008* 04260000
*  DCL IODEVTAB CHAR(36) GENERATED;      /* IO DEVICE TABLE     Y02008* 04270000
*  DCL 1 DEVTBENT CHAR(12) BASED(R5),    /* IO DEV TAB FORMAT   Y02008* 04280000
*        3 DEVPTR PTR(31),               /* DEVTAB PTR          Y02008* 04290000
*        3 IOSBPTR PTR(31),              /* IOSB PTR            Y02008* 04300000
*        3 * CHAR(4);                    /* NA                  Y02008* 04310000
*  DCL 1 IOSB CHAR(116) BDY(WORD) BASED(R1), /* IOSB FORMAT     Y02008* 04320000
*        3 * CHAR(112),                  /* NA                  Y02008* 04330000
*        3 PTRTECB PTR(31);              /* TECB PTR            Y02008* 04340000
*  DCL INDEX FIXED(15);                  /* INDEX FOR LOOP      Y02008* 04350000
*  DCL 1 DIOPARM BDY(WORD),              /* DIO PARM LIST      SA51754* 04360000
*         2 * FIXED(15) INIT(2),         /* NA                  X02008* 04370000
*         2 * CHAR(2) INIT('44'),        /* DIO ID             SA51754* 04380000
*         2 DIOCDSAD PTR,                /* CDS ADDRESS        SA51754* 04390000
*         2 DIOTECB PTR,                 /* TECB ADDRESS       SA51754* 04400000
*         2 * CHAR(1) INIT('01'X),       /* HIO REQUEST        SA51754* 04410000
*           3 * CHAR(1);                 /* NA                 SA51754* 04420000
*  DCL ACTSECT CHAR(8);                 /* ACTIVE SECTION NAME  Y02008* 04430000
*  DCL SPCOUNT CHAR(2) BASED(R3+18);     /* OLTS EL COUNT      SA51757* 04440000
*  DCL CESWT9 CHAR(1) GENERATED;         /* OLTEP FLAG FLD 9    Y02008* 04450000
*  DCL 1 * CHAR(1) BASED(ADDR(CESWT9)),  /* OLTEP FLAG FLD 9    Y02008* 04460000
*        3 * BIT(2),                     /* CDS EQUATE FLAGS    Y02008* 04470000
*        3 VRCAP BIT(1),                 /* VIRTUAL OR REAL OLT Y02008* 04480000
*        3 * BIT(4),                     /* NA                        * 04490000
*        3 OLTTERM BIT(1);               /* OLT FORCED TO TERM  Y02008* 04500000
*  DCL OLTADDR FIXED(31);                /* OLT AREA ADDRESS    Y02008* 04510000
*  DCL CHARAFFN CHAR(2) GENERATED;       /* SELECTED CPU AFFN   Y02008* 04520000
*  DCL CESWT10 CHAR(1) GENERATED;        /* INTERNAL FLAGS      Y02008* 04530000
*  DCL 1 * CHAR(1) BASED(ADDR(CESWT10)), /* INTERNAL FLAGS      Y02008* 04540000
*        3 MPSYS BIT(1);                 /* 1-MP   0-NOT MP     Y02008* 04550000
*  GEN(EJECT);                                                          04560000
         EJECT                                                          04570000
         DS    0H                                                       04580000
*  R5=TMCOMAD;                           /* BLDL LIST */                04590000
         L     @5,A00023+32                                       0123  04600000
* SCH001:                                                               04610000
*  SNEWRUN='0'B;                         /* CLEAR NEW RUN BIT  SA51756* 04620000
SCH001   NI    A00105+8,B'11111101'                               0124  04630000
*  TLRUN=1;                              /* INIT TEST LOOP RUN  Y02008* 04640000
         LA    @F,1                                               0125  04650000
         STH   @F,TLRUN                                           0125  04660000
*  SCHEDSA=R13;                          /* SAVE AREA ADDRESS */        04670000
         ST    @D,SCHEDSA                                         0126  04680000
*  IF RETCODE¬=0 THEN                    /* TEST PREVIOUS RETURN CODE * 04690000
         SR    @F,@F                                              0127  04700000
         C     @F,RETCODE                                         0127  04710000
         BC    08,@9FF                                            0127  04720000
*    DO;                                 /* RETURN CODE HANDLED */      04730000
*      CODE5='1'B;                       /* INDICATE RETURN BACK HERE * 04740000
         OI    A00105+6,B'00001000'                               0129  04750000
*      RETCODE=0;                        /* ZERO RETURN CODE */         04760000
         SR    @F,@F                                              0130  04770000
         ST    @F,RETCODE                                         0130  04780000
*      GOTO SCH015;                      /* GO HANDLE PREVIOUS RETURN * 04790000
         BC    15,SCH015                                          0131  04800000
*    END;                                /* END RETURN CODE TESTING */  04810000
* SCH002:                                                               04820000
*  CODE5='0'B;                           /* INITIALIZE RETURN CODE */   04830000
@9FF     EQU   *                                                  0133  04840000
SCH002   NI    A00105+6,B'11110111'                               0133  04850000
*  R9=ADDR(SNAMST);                      /* FIRST SECTION */            04860000
         LA    @9,A00073+7                                        0134  04870000
*  BNAMCM=SNAM;                          /* SECTION TYPE */             04880000
         MVC   PARM12(5),A00073+2                                 0135  04890000
*  TARGADR=PARADR;                       /* TARGET ADDRESS      X02008* 04900000
         MVC   PARM12+8(4),A00000                                 0136  04910000
*  UTSENVL='1'B;                         /* UTS ENVOLVED        X02008* 04920000
         OI    PARM12+12,B'00010000'                              0137  04930000
*  SVR8=0;                               /* ZERO SAVE AREA      X02008* 04940000
         SR    @F,@F                                              0138  04950000
         ST    @F,SVR8                                            0138  04960000
*  DO R8=1 TO SCNT2 BY 1;                /* SECTION COUNT       X02008* 04970000
         LA    @F,1                                               0139  04980000
         LR    @8,@F                                              0139  04990000
@DO9FE   SR    @F,@F                                              0139  05000000
         IC    @F,A00073+1                                        0139  05010000
         CR    @F,@8                                              0139  05020000
         BC    04,@DO9FB                                          0139  05030000
         BC    15,@DO9FC                                          0139  05040000
@DO9FD   LA    @F,1                                               0139  05050000
         AR    @8,@F                                              0139  05060000
         BC    15,@DO9FE                                          0139  05070000
*    BNAMVR=SNAM1;                       /* SECTION NAME */             05080000
@DO9FC   MVC   PARM12+5(3),0(@9)                                  0140  05090000
*    RTPLKSZ=0;                          /* ZERO OUT AREA       X02008* 05100000
         SR    @F,@F                                              0141  05110000
         ST    @F,A00000+8                                        0141  05120000
*    IF SLNG1¬=DBLZ THEN                 /* CHECK SIZE          X02008* 05130000
         CLC   3(2,@9),A00000+8                                   0142  05140000
*      GOTO SCH002M;                     /* SIZE GIVEN          X02008* 05150000
         BC    07,SCH002M                                         0143  05160000
*    GEN(BAL   R7,CALLCOMP);             /* CALL COMPUTE        X02008* 05170000
         BAL   R7,CALLCOMP                                              05180000
         DS    0H                                                       05190000
*    IF R15¬=0 THEN                      /* CHECK RETURN        X02008* 05200000
         LTR   @F,@F                                              0145  05210000
         BC    08,@9FA                                            0145  05220000
*      DO;                               /* SECTION NOT FOUND */        05230000
*        R4=IFD117;                      /* MESSAGE ADDRESS */          05240000
         L     @C,MSGMOD                                          0147  05250000
         L     @4,24(0,@C)                                        0147  05260000
*        WTO4NM=BNAME;                   /* SECTION NAME */             05270000
         MVC   20(8,@4),PARM12                                    0148  05280000
*        GEN(BAL   R7,SCH026A);          /* WTO MESSAGE */              05290000
         BAL   R7,SCH026A                                               05300000
         DS    0H                                                       05310000
*        GOTO SCH002P;                   /* NEXT SECTION        X02008* 05320000
         BC    15,SCH002P                                         0150  05330000
*      END;                              /* END OF MESSAGE */           05340000
*    SVR8=R0;                            /* STORE LENGTH        X02008* 05350000
@9FA     ST    @0,SVR8                                            0152  05360000
*    SLNG1=SVR834;                       /* SAVE LENGTH         X02008* 05370000
         MVC   3(2,@9),SVR8+2                                     0153  05380000
* SCH002M:                                                              05390000
*    SVR8=R8;                            /* SAVE COUNT          X02008* 05400000
SCH002M  ST    @8,SVR8                                            0154  05410000
* SCH002P:                                                              05420000
*    R9=ADDR(SNAM2);                     /* NEXT SECTION */             05430000
SCH002P  LA    @9,5(0,@9)                                         0155  05440000
         BC    15,@DO9FD                                          0156  05450000
*  END;                                  /* CONTINUE SECTION TEST */    05460000
*  SCNT2=SVR84;                          /* LAST SECTION COUNT  X02008* 05470000
@DO9FB   MVC   A00073+1(1),SVR8+3                                 0157  05480000
*  GEN(EJECT);                                                          05490000
         EJECT                                                          05500000
         DS    0H                                                       05510000
* SCH003:                                                               05520000
*  CE46=CE46&&CE46;                      /* CLEAR SWITCHES      S21937* 05530000
SCH003   XC    CE46(3),CE46                                       0159  05540000
*  OORN='00'B;                           /* OLD OR NEW UTS INDICATOR */ 05550000
         NI    A00105,B'11001111'                                 0160  05560000
*  DCNT1='00'X;                          /* INITIAL DEVICE COUNT */     05570000
         MVI   DCNT1,X'00'                                        0161  05580000
*  R8=DEVTBPTR;                          /* FIRST DEVICE TABLE        * 05590000
         L     @8,DEVTBPTR                                        0162  05600000
*  IF NDR='1'B THEN                      /* CHECK INDICATOR     X02008* 05610000
         TM    A00105+2,B'00000100'                               0163  05620000
*    GOTO SCH006;                        /* NO DEVICE NEEDED    X02008* 05630000
         BC    01,SCH006                                          0164  05640000
*  DO R7=DCNT2 TO 1 BY -1;               /* CHECK DEVICE        X02008* 05650000
         SR    @F,@F                                              0165  05660000
         IC    @F,DCNT2                                           0165  05670000
         LTR   @7,@F                                              0165  05680000
         BC    12,@DO9F8                                          0165  05690000
*    IF SKIPRIM='0'B THEN                /* TEST SKIP PRIME BIT Y02008* 05700000
@DO9F9   TM    42(@8),B'01000000'                                 0166  05710000
*        GOTO SCH003M;                   /* USE DEVICE ENTRY    X02008* 05720000
         BC    08,SCH003M                                         0167  05730000
*    R8=R8+TABLNGTH;                     /* NEXT DEVICE ENTRY   X02008* 05740000
         AH    @8,TABLNGTH                                        0168  05750000
*    DCNT1=DCNT1+1;                      /* NEXT DEVICE         X02008* 05760000
         LA    @F,1                                               0169  05770000
         SR    @0,@0                                              0169  05780000
         IC    @0,DCNT1                                           0169  05790000
         AR    @F,@0                                              0169  05800000
         STC   @F,DCNT1                                           0169  05810000
*  END;                                  /* ALL DEVICES         X02008* 05820000
*  GOTO SCH024A;                         /* END TEST            X02008* 05830000
         BCT   @7,@DO9F9                                          0170  05840000
         BC    15,SCH024A                                         0171  05850000
* SCH003M:                                                              05860000
*  PRIDVPTR=R8;                          /* PRIME DEVICE TABLE */       05870000
SCH003M  ST    @8,PRIDVPTR                                        0172  05880000
*  DEVDEPAD=ADDR(DVSEC1);                /* PRIME DEVICE SCT SECTION */ 05890000
         LA    @F,A00080+8                                        0173  05900000
         ST    @F,DEVDEPAD                                        0173  05910000
*      REGX=ADDR(DVUCB);                 /* ACTIVE UCB ADDRESS */       05920000
         LA    @F,8(0,@8)                                         0174  05930000
         ST    @F,REGX                                            0174  05940000
*  IF TPFLAG='1'B THEN                   /* TEST TP FLAG */             05950000
         TM    A00105+1,B'00000001'                               0175  05960000
         BC    12,@9F5                                            0175  05970000
*    DO;                                 /* TP DEVICE */                05980000
*  GEN(BAL   R7,SCHA05);                 /* UPDATE SCT          S21937* 05990000
         BAL   R7,SCHA05                                                06000000
         DS    0H                                                       06010000
*      GEN(BAL   R7,SCH029);             /* LINK TO DATA PROTECT */     06020000
         BAL   R7,SCH029                                                06030000
         DS    0H                                                       06040000
*      DCNT1=DCNT1+1;                    /* NEXT DEVICE ENTRY   X02008* 06050000
         LA    @F,1                                               0179  06060000
         SR    @0,@0                                              0179  06070000
         IC    @0,DCNT1                                           0179  06080000
         AR    @F,@0                                              0179  06090000
         STC   @F,DCNT1                                           0179  06100000
*      R8=R8+TABLNGTH;                   /* NEXT DEVICE TABLE         * 06110000
         AH    @8,TABLNGTH                                        0180  06120000
*      IF DCNT1=DCNT2 THEN               /* CHECK DEVICE COUNT  X02008* 06130000
         CLC   DCNT1(1),DCNT2                                     0181  06140000
*        GOTO SCH024A;                   /* ALL DEVICES CHECKED X02008* 06150000
         BC    08,SCH024A                                         0182  06160000
*    END;                                /* END OF FIRST TP DEVICE */   06170000
*  GOTO SCH006;                          /* BYPASS NEXT DEVICE BYPASS * 06180000
         BC    15,SCH006                                          0184  06190000
* SCH004:                                                               06200000
*  DCNT1='00'X;                          /* NEW DEVICES TO RUN */       06210000
SCH004   MVI   DCNT1,X'00'                                        0185  06220000
* SCH005:                                                               06230000
*  R8=R8+TABLNGTH;                       /* NEXT DEVICE TABLE         * 06240000
SCH005   AH    @8,TABLNGTH                                        0186  06250000
* SCH006:                                                               06260000
*  CATB1='0'B;                           /* ZERO OUT CATASTRPHIC BIT */ 06270000
SCH006   NI    A00080+3,B'11011111'                               0187  06280000
*  CE6=CE6&'02'X;                        /* CLEAR SWITCHES      S21937* 06290000
         NI    A00105+6,X'02'                                     0188  06300000
*  CE45=CE45&&CE45;                      /* CLEAR SWITCHES      S21937* 06310000
         XC    A00105+4(2),A00105+4                               0189  06320000
*  BYPDEV='00'B;                         /* ZERO OUT BYPASS SWITCHES */ 06330000
         NI    A00105+3,B'10011111'                               0190  06340000
*  SCNT1='01'X;                          /* FIRST SECTION FOR DEVICE */ 06350000
         MVI   SCNT1,X'01'                                        0191  06360000
*  LASTSEC='0'B;                         /* LAST SECTION NOT RUN M1463* 06370000
         NI    A00080+36,B'11111101'                              0192  06380000
*  R9=ADDR(SNAMST);                      /* FIRST SECTION TO RUN */     06390000
         LA    @9,A00073+7                                        0193  06400000
*  IF NDR='1'B THEN                      /* TEST IF DEVICE REQUIRED */  06410000
         TM    A00105+2,B'00000100'                               0194  06420000
*    GOTO SCH007;                        /* TEST NOT REQUIRED */        06430000
         BC    01,SCH007                                          0195  06440000
*  DCNT1=DCNT1+1;                        /* NEXT DEVICE */              06450000
         LA    @F,1                                               0196  06460000
         SR    @0,@0                                              0196  06470000
         IC    @0,DCNT1                                           0196  06480000
         AR    @F,@0                                              0196  06490000
         STC   @F,DCNT1                                           0196  06500000
*  IF SKIPRIM='1'B THEN                  /* TEST SKIP PRIME BIT Y02008* 06510000
         TM    42(@8),B'01000000'                                 0197  06520000
*      GOTO SCH023L;                     /* NEXT DEVICE         X02008* 06530000
         BC    01,SCH023L                                         0198  06540000
*  GEN(BAL   R7,SCHA05);                 /* UPDATE SCT          S21937* 06550000
         BAL   R7,SCHA05                                                06560000
         DS    0H                                                       06570000
*  GEN(BAL   R7,SCH029);                 /* LINK TO DATA PROTECT */     06580000
         BAL   R7,SCH029                                                06590000
         DS    0H                                                       06600000
* SCH007:                                                               06610000
*  SECPTR=0;                             /* NO UTS LOADED */            06620000
SCH007   SR    @F,@F                                              0201  06630000
         ST    @F,SECPTR                                          0201  06640000
*  PLNM15=SNAM;                          /* TYPE OF SECTION */          06650000
         MVC   UTSPL(5),A00073+2                                  0202  06660000
*  PLNM68=SNAM1;                         /* COMPLETE THE SECTION NAME * 06670000
         MVC   UTSPL+5(3),0(@9)                                   0203  06680000
*  CLEANRT='0'B;                         /* ZERO SWITCH          M1390* 06690000
         NI    A00080+36,B'10111111'                              0204  06700000
*  IF LASTSEC='1'B THEN                  /* TEST LAST SECTION    M1463* 06710000
         TM    A00080+36,B'00000010'                              0205  06720000
*    GOTO SCH022;                        /* ALL SECTIONS RUN */         06730000
         BC    01,SCH022                                          0206  06740000
*  IF SCNT2¬>SCNT1 THEN                  /* CHECK SECTION COUNT  M1463* 06750000
         CLC   A00073+1(1),SCNT1                                  0207  06760000
         BC    02,@9F4                                            0207  06770000
*    LASTSEC='1'B;                       /* LAST SECTION RUN     M1463* 06780000
         OI    A00080+36,B'00000010'                              0208  06790000
*  IF SLNG1='0000'X THEN                 /* TEST SECTION LENGTH */      06800000
@9F4     CLC   3(2,@9),@X7                                        0209  06810000
         BC    07,@9F3                                            0209  06820000
* SCH008:                                                               06830000
*    DO;                                 /* NO SIZE MEANS NO SECTION */ 06840000
*      R9=ADDR(SNAM2);                   /* NEXT SECTION ENTRY */       06850000
SCH008   LA    @9,5(0,@9)                                         0211  06860000
* SCH009:                                                               06870000
*      SCNT1=SCNT1+1;                    /* NEXT SECTIONS */            06880000
SCH009   LA    @F,1                                               0212  06890000
         SR    @0,@0                                              0212  06900000
         IC    @0,SCNT1                                           0212  06910000
         AR    @F,@0                                              0212  06920000
         STC   @F,SCNT1                                           0212  06930000
*      GOTO SCH007;                      /* TEST NEXT SECTION */        06940000
         BC    15,SCH007                                          0213  06950000
*    END;                                /* NO SECTION FOUND LOOP END * 06960000
*  IF TPFLAG='1'B&                       /* TEST TP FLAG */             06970000
*    SECRUN='1'B&                        /* SECTION RUN ALREADY */      06980000
*      OLDUT='0'B THEN                   /* NEW UTS */                  06990000
@9F3     TM    A00105+1,B'00000001'                               0215  07000000
         BC    12,@9F2                                            0215  07010000
         TM    A00105+6,B'00000010'                               0215  07020000
         BC    12,@9F1                                            0215  07030000
         TM    4(@9),B'00000001'                                  0215  07040000
*        GOTO SCH008;                    /* NEXT SECTION */             07050000
         BC    10,SCH008                                          0216  07060000
*  OORN='00'B;                                                          07070000
@9F0     EQU   *                                                  0217  07080000
@9F1     EQU   *                                                  0217  07090000
@9F2     NI    A00105,B'11001111'                                 0217  07100000
*  UTSIZ=SLNG1;                                                         07110000
         MVC   A00000+10(2),3(@9)                                 0218  07120000
*  IF CLRBIT='1'B THEN                                                  07130000
         TM    A00000+11,B'00000001'                              0219  07140000
         BC    12,@9EF                                            0219  07150000
*    OUTS='1'B;                                                         07160000
         OI    A00105,B'00100000'                                 0220  07170000
         BC    15,@9EE                                            0221  07180000
*  ELSE NUTS='1'B;                                                      07190000
@9EF     OI    A00105,B'00010000'                                 0221  07200000
*  CLRBIT='0'B;                                                         07210000
@9EE     NI    A00000+11,B'11111110'                              0222  07220000
*  IF RTPLKSZ>PARSZ THEN                 /* CHECK SIZE          X02008* 07230000
         L     @F,A00000+4                                        0223  07240000
         C     @F,A00000+8                                        0223  07250000
         BC    10,@9ED                                            0223  07260000
*    DO;                                 /* UTS TOO LARGE       X02008* 07270000
*      R1=IFD200;                        /* IFD200 MESSAGE      X02008* 07280000
         L     @C,MSGMOD                                          0225  07290000
         L     @1,96(0,@C)                                        0225  07300000
*      NM200=PLNAM;                      /* SECTION NAME        X02008* 07310000
         MVC   17(8,@1),UTSPL                                     0226  07320000
*      GOTO SCH025A;                     /* ISSUE WTO           X02008* 07330000
         BC    15,SCH025A                                         0227  07340000
*    END;                                /* END CORE CHECK      X02008* 07350000
*  IF PLSNM='2400W ' THEN                /* TAPE GAP TEST       S21937* 07360000
@9ED     CLC   UTSPL+1(6),@C8                                     0229  07370000
*    GOTO SCH025;                        /* BYPASS TEST         S21937* 07380000
         BC    08,SCH025                                          0230  07390000
* SCH010:                                                               07400000
*  UTSCAL='0'B;                          /* UTS NOT CALLED YET */       07410000
SCH010   NI    A00105+6,B'01111111'                               0231  07420000
*  NDCFO='1'B;                           /* NO DYN COMMUNICATION TEST * 07430000
         OI    A00105+2,B'10000000'                               0232  07440000
*  R7=DEVTBPTR;                          /* FIRST DEVICE TABLE        * 07450000
         L     @7,DEVTBPTR                                        0233  07460000
*  DO R4=16 TO 1 BY -1;                  /* COUNT OF DEVICES     M4507* 07470000
         LA    @4,16                                              0234  07480000
*    R7->GRABIT='0'B;                    /* CLEAR GRAB BIT       M4507* 07490000
@DO9EC   NI    12(@7),B'11111011'                                 0235  07500000
*    R7=R7+TABLNGTH;                     /* NEXT DEVICE TABLE         * 07510000
         AH    @7,TABLNGTH                                        0236  07520000
*  END;                                  /* LOOP FOR TABLE       M4507* 07530000
*  CLEANRT='0'B;                         /* NO CLEAN UP          M1390* 07540000
         BCT   @4,@DO9EC                                          0237  07550000
         NI    A00080+36,B'10111111'                              0238  07560000
*  IF PLNAM=ACTSECT THEN                /* IS THIS SAME SECTION Y02008* 07570000
         CLC   UTSPL(8),ACTSECT                                   0239  07580000
*    GO TO SCH010A;                     /* YES, NO NEED TO      Y02008* 07590000
         BC    08,SCH010A                                         0240  07600000
*                                       /* RE-LOAD..CONTINUE    Y02008* 07610000
*  GEN(BAL   R7,CALLCOMP);               /* CALL COMPUTE        X02008* 07620000
         BAL   R7,CALLCOMP                                              07630000
         DS    0H                                                       07640000
*  GEN(BAL   R7,CALLOAD);                /* CALL LOADER         X02008* 07650000
         BAL   R7,CALLOAD                                               07660000
         DS    0H                                                       07670000
*  IF R15¬=0 THEN                       /* WAS LOAD OK          Y02008* 07680000
         LTR   @F,@F                                              0243  07690000
*    GO TO SCH008;                      /* NO, TRY NEXT SECTION Y02008* 07700000
         BC    07,SCH008                                          0244  07710000
*  ACTSECT=PLNAM;                       /* SAVE SECTION NAME    Y02008* 07720000
         MVC   ACTSECT(8),UTSPL                                   0245  07730000
*  OLTADDR=R1;                           /* SAVE OLT ADDRESS    Y02008* 07740000
         ST    @1,OLTADDR                                         0246  07750000
*  OLTINVV='0'B;                         /* OLT IS IN V=R       Y02008* 07760000
         NI    A00105+8,B'11110111'                               0247  07770000
*  IF VIRTUAL='1'B THEN                  /* IS OLTEP IN VIRTUAL Y02008* 07780000
         TM    A00105+7,B'00000010'                               0248  07790000
         BC    12,@9E8                                            0248  07800000
*    DO;                                 /* YES, THEN OLT WILL  Y02008* 07810000
*    OLTINVV='1'B;                       /* BE TOO              Y02008* 07820000
         OI    A00105+8,B'00001000'                               0250  07830000
*    IF VRCAP='0'B THEN                  /* DOES OLT HAVE V=V   Y02008* 07840000
         TM    A00140,B'00100000'                                 0251  07850000
         BC    05,@9E7                                            0251  07860000
*                                        /* CAPABILITY          Y02008* 07870000
*      DO;                               /* NO, PRINT MSGIFD248IY02008* 07880000
*      R4=IFD248;                        /* GET PTR TO MSG 248I Y02008* 07890000
         L     @C,MSGMOD                                          0253  07900000
         L     @4,140(0,@C)                                       0253  07910000
*      GEN(BAL   R7,SCH026A);            /* PRINT MESSAGE       Y02008* 07920000
         BAL   R7,SCH026A                                               07930000
         DS    0H                                                       07940000
*      END;                              /*                     Y02008* 07950000
*    END;                                /*                     Y02008* 07960000
@9E7     EQU   *                                                  0256  07970000
* SCH010A:                              /*                      Y02008* 07980000
*  R4=OLTADDR;                           /* RESTORE OLT ADDRESS Y02008* 07990000
@9E8     EQU   *                                                  0257  08000000
SCH010A  L     @4,OLTADDR                                         0257  08010000
*  NDCFO='0'B;                           /* TEST DYN COMMUNICATIONS */  08020000
         NI    A00105+2,B'01111111'                               0258  08030000
*  GO TO SCH011;                        /* PREPARE TO ENTER OLT Y02008* 08040000
         BC    15,SCH011                                          0259  08050000
* SCHA05:                                                               08060000
*  CDS8TO19=DVTABCDS(9:20);              /* CDS BYTES TO SCT    S21937* 08070000
SCHA05   MVC   CDS8TO19(12),40(@8)                                0260  08080000
* SCHA06:                                                               08090000
*  DEVDEPAD=ADDR(DVSEC1);                /* PRIMARY ENTRY       S21937* 08100000
SCHA06   LA    @F,A00080+8                                        0261  08110000
         ST    @F,DEVDEPAD                                        0261  08120000
*  IF DVCDS=0 THEN                       /* TEST DESCRIPTORS    S21937* 08130000
         CLC   36(4,@8),@D1                                       0262  08140000
         BC    07,@9E6                                            0262  08150000
*    PDDD1=DVUDD;                        /* USE UCB DESCRIPTORS S21937* 08160000
         L     @C,8(0,@8)                                         0263  08170000
         MVC   A00080+16(4),16(@C)                                0263  08180000
         BC    15,@9E5                                            0264  08190000
*  ELSE PDDD1=DVCDS;                     /* USE DEVICE CDS      S21937* 08200000
@9E6     MVC   A00080+16(4),36(@8)                                0264  08210000
*  PRIMBIT='1'B;                         /* PRIME BIT SET       S21937* 08220000
@9E5     OI    12(@8),B'01000000'                                 0265  08230000
*  PDPA1=DVADR;                          /* DEVICE ADDRESS      S21937* 08240000
         MVC   A00080+12(4),32(@8)                                0266  08250000
*  GOTO R7;                              /* RETURN TO MAIN FLOW S21937* 08260000
         BCR   15,@7                                              0267  08270000
* SCH011:                                                               08280000
*  SECPTR=R4;                            /* SAVE ENTRY POINT ADDRESS */ 08290000
SCH011   ST    @4,SECPTR                                          0268  08300000
*  GEN(EJECT);                                                          08310000
         EJECT                                                          08320000
         DS    0H                                                       08330000
*  IF NUTS='1'B THEN                     /* CHECK UTS           X02008* 08340000
         TM    A00105,B'00010000'                                 0270  08350000
         BC    12,@9E4                                            0270  08360000
*    DO;                                 /* NEW UTS             X02008* 08370000
*      R3=R4+INZRT;                      /* POINTER TO ROUTINE */       08380000
         LH    @3,10(0,@4)                                        0272  08390000
         AR    @3,@4                                              0272  08400000
*      IF RTPLKSZ<RTSIZ THEN             /* TEST UTS SIZE TO USEX02008* 08410000
         L     @F,20(0,@3)                                        0273  08420000
         C     @F,A00000+8                                        0273  08430000
         BC    12,@9E3                                            0273  08440000
*        RTPLKSZ=RTSIZ;                  /* USE UTS AND PLINK   X02008* 08450000
         MVC   A00000+8(4),20(@3)                                 0274  08460000
*      UTENT=INZIN;                      /* FIRST INSTRUCTION ADDRESS * 08470000
@9E3     MVC   UTENT(4),12(@4)                                    0275  08480000
*      IF ERLOP='1'B&                    /* EL OPTION ENTERED  SA51757* 08490000
*        ERRCNT='0'B THEN                /* NO EL COUNT ENTER  SA51757* 08500000
         TM    A00080+3,B'00000010'                               0276  08510000
         BC    12,@9E2                                            0276  08520000
         TM    A00080+33,B'00010000'                              0276  08530000
         BC    05,@9E1                                            0276  08540000
*          ERRLPCT=SPCOUNT;              /* USE OLTS EL COUNT  SA51757* 08550000
         MVC   A00080(2),18(@3)                                   0277  08560000
*      IF SECLEV¬>SCTLEV THEN            /* CHECK SCT LEVEL     X02008* 08570000
@9E1     EQU   *                                                  0278  08580000
@9E2     CLC   11(1,@3),A00080+7                                  0278  08590000
*        GOTO SCH012;                    /* UTS SUPPORTED       X02008* 08600000
         BC    12,SCH012                                          0279  08610000
*      UT227=PLNAM;                      /* SECTION NAME        X02008* 08620000
         L     @C,MSGMOD                                          0280  08630000
         L     @C,68(0,@C)         IFD227                         0280  08640000
         MVC   37(8,@C),UTSPL                                     0280  08650000
*      R1=IFD227;                        /* IFD227 MESSAGE      X02008* 08660000
         L     @C,MSGMOD                                          0281  08670000
         L     @1,68(0,@C)                                        0281  08680000
*      GOTO SCH025A;                     /* WTO MESSAGE         X02008* 08690000
         BC    15,SCH025A                                         0282  08700000
*    END;                                /* END UTS INITIALIZATION */   08710000
*  R3=ADDR(RTMSK);                       /* POINTER TO ROUTINE */       08720000
@9E4     LA    @3,84(0,@4)                                        0284  08730000
*  UTENT=R4;                             /* FIRST INSTRUCTION ADDRESS * 08740000
         ST    @4,UTENT                                           0285  08750000
* SCH012:                                                               08760000
*  RTPLKSZ=RTPLKSZ+7;                    /* ROUND UP TO DWORD   X02008* 08770000
SCH012   LA    @F,7                                               0286  08780000
         A     @F,A00000+8                                        0286  08790000
         ST    @F,A00000+8                                        0286  08800000
*  TRPBITS='000'B;                       /* ZERO LOW ORDER BITS X02008* 08810000
         NI    A00000+11,B'11111000'                              0287  08820000
*  SECPRF=R3;                            /* ROUTINE ADDRESS */          08830000
         ST    @3,A00023+36                                       0288  08840000
*  UTSCAL='0'B;                          /* INDICATE GOING TO UTS */    08850000
         NI    A00105+6,B'01111111'                               0289  08860000
*  R4=IFD158;                            /* MESSAGE ADDRESS */          08870000
         L     @C,MSGMOD                                          0290  08880000
         L     @4,48(0,@C)                                        0290  08890000
*  MSGTEST=PLNAM;                        /* SECTION BEING RUN */        08900000
         MVC   16(8,@4),UTSPL                                     0291  08910000
*  IF OUTS='1'B THEN                     /* CHECK TEST                * 08920000
         TM    A00105,B'00100000'                                 0292  08930000
         BC    12,@9E0                                            0292  08940000
*    OLDTEST='$';                        /* INDICATE OLD TEST         * 08950000
         MVI   23(@4),C'$'                                        0293  08960000
*  MSGUNIT=BLKUNIT;                      /* CLEAR UNIT MESSAGE        * 08970000
@9E0     MVC   25(22,@4),24(@4)                                   0294  08980000
*  IF SYMBIT='1'B |                 /* CHECK IF SYMBOLIC OR   @Y30LPAW* 08990000
*     SYMBSSID='1'B THEN            /* SSID IN SYMB NAME FLD  @Y30LPAW* 09000000
         TM    41(@8),B'00001000'                                 0295  09010000
         BC    01,@9DF                                            0295  09020000
         TM    12(@8),B'00000001'                                 0295  09030000
         BC    12,@9DE                                            0295  09040000
*    MSGSYB=SYMNAME;                     /* SYMBOLIC NAME             * 09050000
@9DF     MVC   39(8,@4),44(@8)                                    0296  09060000
*  MSGVR='R';                            /* INDICATE OLT IS IN  Y02008* 09070000
@9DE     MVI   50(@4),C'R'                                        0297  09080000
*                                        /* REAL                Y02008* 09090000
*  IF OLTINVV='1'B THEN                  /* IS OLT IN VIRTUAL   Y02008* 09100000
         TM    A00105+8,B'00001000'                               0298  09110000
         BC    12,@9DD                                            0298  09120000
*    MSGVR='V';                          /* YES, PUT V IN START Y02008* 09130000
         MVI   50(@4),C'V'                                        0299  09140000
*                                        /* MESSAGE             Y02008* 09150000
*  MSGCPUID=CHARAFFN;                    /* PLACE SELECTED AFFN Y02008* 09160000
@9DD     MVC   58(2,@4),CHARAFFN                                  0300  09170000
*                                        /* IN START TERM MSG   Y02008* 09180000
*  IF MPSYS='0'B THEN                    /* IS IT AN MP SYSTEM  Y02008* 09190000
         TM    A00143,B'10000000'                                 0301  09200000
         BC    05,@9DC                                            0301  09210000
*    MPCPUID=MPCPUID&&MPCPUID;           /* NO, ELIMATE MP      Y02008* 09220000
         XC    51(9,@4),51(@4)                                    0302  09230000
*                                        /* PART OF MSG IFD158I Y02008* 09240000
*  KUNIT='UNIT';                         /* INSERT UNIT CONSTANTY02008* 09250000
@9DC     MVC   25(4,@4),@C13                                      0303  09260000
*  MSGDEV='NONE    ';                    /* PLACE UNIT EQUAL TO Y02008* 09270000
         MVC   30(8,@4),@C14                                      0304  09280000
*                                        /* IN ALL CASES.       Y02008* 09290000
*  IF NDR='1'B THEN                      /* TEST IF DEV ARE REQ Y02008* 09300000
         TM    A00105+2,B'00000100'                               0305  09310000
*    GO TO SCH013;                       /* NO DEVICES-UNIT=NONEY02008* 09320000
         BC    01,SCH013                                          0306  09330000
*                                        /* IS OK IN S T MSG    Y02008* 09340000
*  MSGDEV=DVEBC;                         /* DEVICE ADDRESS */           09350000
         MVC   30(8,@4),0(@8)                                     0307  09360000
*  SVR8=R8;                              /* SAVE REG            S21937* 09370000
         ST    @8,SVR8                                            0308  09380000
*  IF TPFLAG='0'B THEN                   /* TEST TP FLAG        S21937* 09390000
         TM    A00105+1,B'00000001'                               0309  09400000
*    GOTO SCHA04;                        /* NO TP DEVICE        S21937* 09410000
         BC    08,SCHA04                                          0310  09420000
*  IF NUTS='1'B THEN                     /* TEST UTS            S21937* 09430000
         TM    A00105,B'00010000'                                 0311  09440000
         BC    12,@9DB                                            0311  09450000
*    DO;                                 /* NEW UTS             S21937* 09460000
*      PRIMBIT='0'B;                     /* ZERO PRIME BIT      S21937* 09470000
         NI    12(@8),B'10111111'                                 0313  09480000
*      R8=DEVTBPTR;                      /* FIRST DEVICE TABLE  S21937* 09490000
         L     @8,DEVTBPTR                                        0314  09500000
*      GEN(BAL   R7,SCHA05);             /* LOAD SCT            S21937* 09510000
         BAL   R7,SCHA05                                                09520000
         DS    0H                                                       09530000
*      MSGDEV=DVEBC;                     /* DEVICE ADDRESS      S21937* 09540000
         MVC   30(8,@4),0(@8)                                     0316  09550000
*      GOTO SCHA04;                      /* RESUME PROGRAM      S21937* 09560000
         BC    15,SCHA04                                          0317  09570000
*    END;                                /* END NEW TP CHECK    S21937* 09580000
*  GEN(BAL   R7,SCHA06);                 /* UPDATE SCT          S21937* 09590000
@9DB     EQU   *                                                  0319  09600000
         BAL   R7,SCHA06                                                09610000
         DS    0H                                                       09620000
*  PRIMBIT='0'B;                         /* CLEAR PRIME BIT     S21937* 09630000
         NI    12(@8),B'10111111'                                 0320  09640000
*  PDPAD2=PDPAD1;                        /* SECONDARY IN SCT    S21937* 09650000
         MVC   A00080+24(8),A00080+12                             0321  09660000
*  R8=R8-TABLNGTH;                       /* PREVIOUS DEVICE     S21937* 09670000
         SH    @8,TABLNGTH                                        0322  09680000
*  GEN(BAL   R7,SCHA06);                 /* UPDATE SCT          S21937* 09690000
         BAL   R7,SCHA06                                                09700000
         DS    0H                                                       09710000
*  DEVDEPAD=ADDR(DVSEC2);                /* SECONDARY ENTRY     S21937* 09720000
         LA    @F,A00080+20                                       0324  09730000
         ST    @F,DEVDEPAD                                        0324  09740000
* SCHA04:                                                               09750000
* PRIDVPTR=R8;                           /* PRIME DEVICE TABLE   M1398* 09760000
SCHA04   ST    @8,PRIDVPTR                                        0325  09770000
*  R8=SVR8;                              /* RESTORE REG         S21937* 09780000
         L     @8,SVR8                                            0326  09790000
* SCH013:                                                               09800000
*  IF NUTS='0'B THEN                     /* TEST UTS */                 09810000
SCH013   TM    A00105,B'00010000'                                 0327  09820000
*    GOTO SCH014;                        /* NOT NEW UTS */              09830000
         BC    08,SCH014                                          0328  09840000
*  IF NDR='1'B THEN                      /* TEST IF DEVICE REQUIRED */  09850000
         TM    A00105+2,B'00000100'                               0329  09860000
         BC    12,@9DA                                            0329  09870000
*    DO;                                 /* CHECK OLTS          X02008* 09880000
*      IF WANT(3:4)='0000'X THEN         /* CHECK CLASS AND TYPEX02008* 09890000
         CLC   3(2,@3),@X7                                        0331  09900000
*        GOTO SCH014;                    /* NONE NEEDED         X02008* 09910000
         BC    08,SCH014                                          0332  09920000
*      R1=IFD201;                        /* IFD201 MESSAGE      X02008* 09930000
         L     @C,MSGMOD                                          0333  09940000
         L     @1,52(0,@C)                                        0333  09950000
*      UTS201=MSGTEST;                   /* SECTION NAME        X02008* 09960000
         MVC   43(8,@1),16(@4)                                    0334  09970000
*      GOTO SCH013D;                     /* ISSUE WTO           X02008* 09980000
         BC    15,SCH013D                                         0335  09990000
*    END;                                /* END OLTS CHECK      X02008* 10000000
*  IF DVCDS=0 THEN                       /* TEST DEVICE DESCRIPTORS */  10010000
@9DA     CLC   36(4,@8),@D1                                       0337  10020000
         BC    07,@9D9                                            0337  10030000
*        DO;                             /* SECTION CAN NOT BE RUN */   10040000
*         ASTERB='1'B;                   /* INDICATE ERROR */           10050000
         OI    A00080+3,B'01000000'                               0339  10060000
*         R1=IFD502;                     /* IFD502 MESSAGE      X02008* 10070000
         L     @C,MSGMOD                                          0340  10080000
         L     @1,88(0,@C)                                        0340  10090000
*         GOTO SCH013D;                  /* WTO MESSAGE         X02008* 10100000
         BC    15,SCH013D                                         0341  10110000
*        END;                            /* END OF SECTION CHECK */     10120000
*  RETCODE=2;                            /* INCORRECT DEVICE CODE */    10130000
@9D9     LA    @F,2                                               0343  10140000
         ST    @F,RETCODE                                         0343  10150000
*  WK1TO4=PDDD1;                         /* DESCRIPTS INTO WORK AREA */ 10160000
         MVC   4(4,@5),A00080+16                                  0344  10170000
*  WK5TO8=PDDD1;                         /* DESCRIPTS INTO WORK AREA */ 10180000
         MVC   8(4,@5),A00080+16                                  0345  10190000
*  WK1TO8=WK1TO8&WANTDONT;               /* SELECT BITS TO CHECK */     10200000
         NC    4(8,@5),1(@3)                                      0346  10210000
*  WK1TO4=WK1TO4&&WANT;                  /* REMOVE UNWANTED BITS */     10220000
         XC    4(4,@5),1(@3)                                      0347  10230000
*       IF PDDD1(4) ¬= DONTWANT(4) THEN /* IF TYPE NOT WANTED @ZA09701* 10240000
         CLC   A00080+19(1),8(@3)                                 0348  10250000
         BC    08,@9D8                                            0348  10260000
*          DO;                          /* NOT EQUAL TYPE GIVEN */      10270000
*            WK5TO8(4) = '00'X;         /* ZERO OUT RESULT BYTE*/       10280000
         MVI   11(@5),X'00'                                       0350  10290000
*          END;                                             /*@ZA09701* 10300000
*  IF WK1TO8¬=ZIP8 THEN                  /* TEST DESCRIPTS */           10310000
@9D8     CLC   4(8,@5),A00043+8                                   0352  10320000
         BC    08,@9D7                                            0352  10330000
*    DO;                                 /* DEV DESC DONT MATCH Y02008* 10340000
*    R1=IFD201;                          /* PRINT MSG INDICATINGY02008* 10350000
         L     @C,MSGMOD                                          0354  10360000
         L     @1,52(0,@C)                                        0354  10370000
*    UTS201=MSGTEST;                     /* DEVICE NO GOOD FOR  Y02008* 10380000
         MVC   43(8,@1),16(@4)                                    0355  10390000
*    GEN(BAL   R7,SCH027);               /* TEST EXECUTION      Y02008* 10400000
         BAL   R7,SCH027                                                10410000
         DS    0H                                                       10420000
*    GO TO SCH015;                       /*                     Y02008* 10430000
         BC    15,SCH015                                          0357  10440000
*    END;                                /*                     Y02008* 10450000
* SCH014:                                                               10460000
*  IF OUTS='1'B&                         /* OLD UTS */                  10470000
*    CSELRTN='1'B&                       /* CONSOLE SELECTED ROUTINES * 10480000
*      RTNM1ST='0000'X THEN             /* ROUTINES 1-16 MASK */        10490000
@9D7     EQU   *                                                  0359  10500000
SCH014   TM    A00105,B'00100000'                                 0359  10510000
         BC    12,@9D6                                            0359  10520000
         TM    A00100+29,B'00100000'                              0359  10530000
         BC    12,@9D5                                            0359  10540000
         CLC   A00100(2),@X7                                      0359  10550000
*        GOTO SCH014A;                   /* INCORRECT ROUTINES */       10560000
         BC    08,SCH014A                                         0360  10570000
*  WTO12=MSGSTR;                         /* START MESSAGE      SA51756* 10580000
@9D4     EQU   *                                                  0361  10590000
@9D5     EQU   *                                                  0361  10600000
@9D6     MVC   13(2,@4),A00128                                    0361  10610000
*  GEN(BAL   R7,SCH026);                 /* WTO MESSAGE        SA51756* 10620000
         BAL   R7,SCH026                                                10630000
         DS    0H                                                       10640000
*  WTO12=MSGEND;                         /* TERMINATE MESSAGE  SA51756* 10650000
         MVC   13(2,@4),A00128+2                                  0363  10660000
*  SUTMSG='1'B;                          /* START MSG ISSUED   SA51756* 10670000
         OI    A00105+8,B'00000100'                               0364  10680000
*  R7=ADDR(SCH014AB);                    /* RETURN ADDRESS            * 10690000
         LA    @7,SCH014AB                                        0365  10700000
*  READDCHK='1'B;                        /* TELL READD SECT ENTSA54318* 10710000
         OI    A00105+8,B'00010000'                               0366  10720000
* SCH014AA:                                                             10730000
*  R1=ADDR(PSCT);                        /* SECTION CONTROL TABLE */    10740000
SCH014AA LA    @1,PSCT                                            0367  10750000
*  R15=UTENT;                            /* ENTRY POINT TO UTS */       10760000
         L     @F,UTENT                                           0368  10770000
*  GEN(BALR  R14,R15);                   /* LINK TO SECTION */          10780000
         BALR  R14,R15                                                  10790000
         DS    0H                                                       10800000
*  RTMASK='00'X;                         /* RETURN CODE MASK    X02008* 10810000
         MVI   70(@2),X'00'                                       0370  10820000
*  UTSCAL='0'B;                          /* DELETE MODULES      XM5847* 10830000
         NI    A00105+6,B'01111111'                               0371  10840000
*  GOTO R7;                              /* RETURN FROM ROUTINE       * 10850000
         BCR   15,@7                                              0372  10860000
* SCH014AB:                                                             10870000
*  IF BYPDEV¬='00'B&                     /* BYPASS TEST               * 10880000
*    CLEANRT='1'B THEN                   /* UTS HAS CLEANUP           * 10890000
SCH014AB TM    A00105+3,B'01100000'                               0373  10900000
         BC    08,@9D3                                            0373  10910000
         TM    A00080+36,B'01000000'                              0373  10920000
         BC    12,@9D2                                            0373  10930000
*      CLEANUP='1'B;                     /* CLEAN UP UTS              * 10940000
         OI    A00080+33,B'00000100'                              0374  10950000
*  RETCODE=R15;                          /* SAVE RETURN CODE */         10960000
@9D2     EQU   *                                                  0375  10970000
@9D3     ST    @F,RETCODE                                         0375  10980000
*  IF OLTTERM='1'B &                     /* WAS OLT FORCED TO   Y02008* 10990000
*    CLEANRT='1'B THEN                   /* TERM & IS CLEANUP   Y02008* 11000000
         TM    A00140,B'00000001'                                 0376  11010000
         BC    12,@9D1                                            0376  11020000
         TM    A00080+36,B'01000000'                              0376  11030000
         BC    12,@9D0                                            0376  11040000
*      CLEANUP='1'B;                     /* NEEDED. YES, CLEANUPY02008* 11050000
         OI    A00080+33,B'00000100'                              0377  11060000
* SCH014A:                                                              11070000
*  SECDVPTR=0;                           /* LAST GRAB DEVICE */         11080000
@9D0     EQU   *                                                  0378  11090000
@9D1     EQU   *                                                  0378  11100000
SCH014A  SR    @F,@F                                              0378  11110000
         ST    @F,SECDVPTR                                        0378  11120000
*  R0=ADDR(MODNN);                       /* ADDRESS OF MODULE NAME */   11130000
         L     @C,A00023+32        A00023                         0379  11140000
         LA    @0,44(0,@C)                                        0379  11150000
*  MODNN=KNT;                            /* OLTEP MODULE NAME */        11160000
         MVC   44(8,@C),36(@C)                                    0380  11170000
*  IF RTSTAE='1'B THEN                   /* STAE IN CONTROL           * 11180000
         TM    A00105+6,B'00000001'                               0381  11190000
*    GOTO SCH017;                        /* CHECK LOGSCAN             * 11200000
         BC    01,SCH017                                          0382  11210000
*  IF CSELRTN='0'B THEN                  /* TEST ROUTINES SELECTED */   11220000
         TM    A00100+29,B'00100000'                              0383  11230000
         BC    05,@9CF                                            0383  11240000
*    DO;                                 /* NOT SELECTED FROM CONSOLE * 11250000
*      RTNM1ST=RTNM1ST&&RTNM1ST;         /* ZERO FIRST ROUTINES MASK */ 11260000
         XC    A00100(2),A00100                                   0385  11270000
*      RTNMLST=RTNMLST&&RTNMLST;         /* ZERO LAST ROUTINES MASK */  11280000
         XC    A00100+36(30),A00100+36                            0386  11290000
*    END;                                /* ROUTINES MASKS ZEROED */    11300000
*  IF TERTN<HIRTN THEN                   /* TEST ROUTINES IN UTS */     11310000
@9CF     CLC   A00006(1),A00006+1                                 0388  11320000
         BC    10,@9CE                                            0388  11330000
*    DO;                                 /* SOME ROUTINES NOT PRESENT * 11340000
*      R1=IFD503;                        /* IFD503 MESSAGE      X02008* 11350000
         L     @C,MSGMOD                                          0390  11360000
         L     @1,92(0,@C)                                        0390  11370000
*      GEN(BAL   R7,SCH027);             /* ISSUE WTO           X02008* 11380000
         BAL   R7,SCH027                                                11390000
         DS    0H                                                       11400000
*                                        /*                     A45731* 11410000
*    END;                                /* END ROUTINE TEST */         11420000
* SCH015:                                                               11430000
*         DYCOM='0'B;                    /* ZERO DYN COMM FLAG  X02008* 11440000
@9CE     EQU   *                                                  0393  11450000
SCH015   NI    A00080+36,B'11111110'                              0393  11460000
*         TALKFLAG ='0'B;                /* ZERO TALK FLAG      X02008* 11470000
         NI    A00080+37,B'01111111'                              0394  11480000
* SCH016:                                                               11490000
*  IF RETCODE=2 THEN                     /* TEST RETURN CODE */         11500000
SCH016   LA    @F,2                                               0395  11510000
         C     @F,RETCODE                                         0395  11520000
         BC    07,@9CD                                            0395  11530000
*    DO;                                 /* INCORRECT DEVICE */         11540000
*      R1=IFD231;                        /* IFD231 MESSAGE      X02008* 11550000
         L     @C,MSGMOD                                          0397  11560000
         L     @1,80(0,@C)                                        0397  11570000
*      WMSGTEST=MSGTEST;                 /* SECTION NAME */             11580000
         MVC   12(8,@1),16(@4)                                    0398  11590000
*      WMSGDEV=MSGDEV;                   /* DEVICE ADDRESS */           11600000
         MVC   35(8,@1),30(@4)                                    0399  11610000
*      WTO1='*';                         /* TERMINATE WITH AN ERROR */  11620000
         MVI   13(@4),C'*'                                        0400  11630000
*       GOTO SCH013D;                    /* WTO MESSAGE         X02008* 11640000
         BC    15,SCH013D                                         0401  11650000
*    END;                                /* END MESSAGE OUTPUT */       11660000
*  IF PFPMSG='1'B THEN                   /* TEST FILE PROTECT BIT */    11670000
@9CD     TM    A00105+6,B'00010000'                               0403  11680000
         BC    12,@9CC                                            0403  11690000
*    DO;                                 /* TEST CANCELLED */           11700000
*      R1=IFD313;                        /* IFD313 MESSAGE      X02008* 11710000
         L     @C,MSGMOD                                          0405  11720000
         L     @1,84(0,@C)                                        0405  11730000
*      GEN(BAL   R7,SCH027);             /* ISSUE WTO           X02008* 11740000
         BAL   R7,SCH027                                                11750000
         DS    0H                                                       11760000
*      PFPMSG='0'B;                      /* CLEAR FILE PROTECT BIT */   11770000
         NI    A00105+6,B'11101111'                               0407  11780000
*      WTO1='*';                         /* TERMINATE WITH AN ERROR */  11790000
         MVI   13(@4),C'*'                                        0408  11800000
*    END;                                /* END OF FILE PROTECT LOOP */ 11810000
*  RESTRICT(6);                                                         11820000
@9CC     EQU   *                                                  0410  11830000
* SCH017:                                                               11840000
*  R6=LOGADR;                            /* LOGSCAN ADDRESS IF ANY */   11850000
SCH017   L     @6,LOGADR                                          0411  11860000
*  IF R6=0 THEN                          /* TEST IF LOGSCAN USED */     11870000
         LTR   @6,@6                                              0412  11880000
*    GOTO SCH018;                        /* NO LOGSCAN USED */          11890000
         BC    08,SCH018                                          0413  11900000
*  EOJLOG='1'B;                          /* INDICATE END OF LOGSCAN */  11910000
         OI    A00105+6,B'00100000'                               0414  11920000
*  R15=R6;                               /* ENTRY TO LOGSCAN */         11930000
         LR    @F,@6                                              0415  11940000
*  GEN(BALR  R14,R15);                   /* LINK TO LOGSCAN */          11950000
         BALR  R14,R15                                                  11960000
         DS    0H                                                       11970000
*  RELEASE(6);                                                          11980000
* SCH018:                                                               11990000
*  IF CLEANUP='1'B THEN                  /* CLEAN UP UTS              * 12000000
SCH018   TM    A00080+33,B'00000100'                              0418  12010000
         BC    12,@9CB                                            0418  12020000
*    DO;                                 /* CLEAN UP PRESENT   SA51756* 12030000
*    CLEANRT='0'B;                       /* ZERO OLT HAS CLEANUPX03008* 12040000
         NI    A00080+36,B'10111111'                              0420  12050000
*                                        /* FLAG                X03008* 12060000
*      FFEFCE='11'B;                     /* 1ST ERROR BITS     SA51756* 12070000
         OI    A00105+5,B'00110000'                               0421  12080000
*    GEN(BAL   R7,SCH014AA);             /* GO TO UTS                 * 12090000
         BAL   R7,SCH014AA                                              12100000
         DS    0H                                                       12110000
*    END;                                /* END CLEAN UP CHECK SA51756* 12120000
*  OLTTERM='0'B;                         /* CLEAR OLT FORCED TO Y02008* 12130000
@9CB     NI    A00140,B'11111110'                                 0424  12140000
*                                        /* TERMINATE FLAG      Y02008* 12150000
*  CLEANUP='0'B;                         /* NO CLEANUP                * 12160000
         NI    A00080+33,B'11111011'                              0425  12170000
*  R7=DEVTBPTR;                          /* DEVICE TABLE       SA51754* 12180000
         L     @7,DEVTBPTR                                        0426  12190000
*  DO R6=16 TO 1 BY -1;                  /* COUNT OF DEVICES   SA51754* 12200000
         LA    @6,16                                              0427  12210000
*    IF R7->EXIOACT='0'B THEN            /* CHECK DEVICE       SA51754* 12220000
@DO9CA   TM    12(@7),B'00010000'                                 0428  12230000
*      GOTO SCH018D;                     /* DEVICE NOT ACTIVE  SA51754* 12240000
         BC    08,SCH018D                                         0429  12250000
*    DIOCDSAD=R7+32;                     /* CDS ADDRESS         X02008* 12260000
         LA    @F,32                                              0430  12270000
         AR    @F,@7                                              0430  12280000
         ST    @F,DIOPARM+4                                       0430  12290000
*    R5=ADDR(IODEVTAB(13));              /* POINT TO 2ND        YM4758* 12300000
         LA    @5,IODEVTAB+12                                     0431  12310000
*                                        /* IODEVTAB            YM4758* 12320000
*    DO INDEX=2 TO 1 BY -1;              /* FIND RIGHT TECB PTR YM4758* 12330000
         LA    @F,2                                               0432  12340000
         STH   @F,INDEX                                           0432  12350000
*    IF R7=DEVPTR THEN                   /* DOES THIS IO DEVTAB Y02008* 12360000
@DO9C6   MVC   @TEMP4(4),0(@5)                                    0433  12370000
         L     @F,@TEMP4                                          0433  12380000
         CR    @F,@7                                              0433  12390000
         BC    07,@9C2                                            0433  12400000
*                                        /* ENTRY POINT TO      Y02008* 12410000
*                                        /* CORRECT DEVTAB ENTRYY02008* 12420000
*      DO;                               /* YES, DO DIO PREP    Y02008* 12430000
*      R1=IOSBPTR;                       /* REG 1 IS IOSB PTR   Y02008* 12440000
         MVC   @TEMP4(4),4(@5)                                    0435  12450000
         L     @1,@TEMP4                                          0435  12460000
*      DIOTECB=PTRTECB;                  /* PUT TECB PTR IN DIO Y02008* 12470000
         MVC   DIOPARM+8(4),112(@1)                               0436  12480000
*                                        /* PARMLIST            Y02008* 12490000
*      GO TO SCH018C;                    /* GO DO DIO           Y02008* 12500000
         BC    15,SCH018C                                         0437  12510000
*      END;                              /*                     Y02008* 12520000
*    R5=R5+12;                           /* POINT TO NEXT IO    Y02008* 12530000
@9C2     AH    @5,@D2                                             0439  12540000
*                                        /* DEVTAB              Y02008* 12550000
*    END;                                /*                     Y02008* 12560000
*  GO TO SCH018C1;                       /* CANNOT FIND CONTROL YM4758* 12570000
         LH    @F,INDEX                                           0440  12580000
         BCTR  @F,0                                               0440  12590000
@DO9C5   STH   @F,INDEX                                           0440  12600000
         CH    @F,@D3                                             0440  12610000
         BC    10,@DO9C6                                          0440  12620000
         BC    15,SCH018C1                                        0441  12630000
*                                        /* BLOCK MATCH, BYPASS YM4758* 12640000
*                                        /* DIO ATTEMPT         YM4758* 12650000
* SCH018C:                               /*                     Y02008* 12660000
*    R5=TMCOMAD;                         /* RESTORE REG 5       Y02008* 12670000
SCH018C  L     @5,A00023+32                                       0442  12680000
*    R1=ADDR(DIOPARM);                   /* DIO PARM LIST      SA51754* 12690000
         LA    @1,DIOPARM                                         0443  12700000
*    R15=TAB28;                          /* ENTRY POINT        SA51754* 12710000
         L     @F,TAB28                                           0444  12720000
*    GEN(BALR  R14,R15);                 /* LINK TO DIO        SA51754* 12730000
         BALR  R14,R15                                                  12740000
         DS    0H                                                       12750000
* SCH018C1:                              /*                     YM4758* 12760000
*    R7->EXIOACT='0'B;                   /* DEVICE NOT ACTIVE   X02008* 12770000
SCH018C1 NI    12(@7),B'11101111'                                 0446  12780000
* SCH018D:                                                              12790000
*    R7=R7+TABLNGTH;                     /* NEXT DEVICE ENTRY  SA51754* 12800000
SCH018D  AH    @7,TABLNGTH                                        0447  12810000
*    END;                                /* END DEVICE CHECK   SA51754* 12820000
*  IF RTSTAE='1'B THEN                   /* STAE IN CONTROL     X03008* 12830000
         BCT   @6,@DO9CA                                          0448  12840000
         TM    A00105+6,B'00000001'                               0449  12850000
*    GO TO SCH019;                       /* YES% CHECK PLINK    X03008* 12860000
         BC    01,SCH019                                          0450  12870000
* SCH018F:                                                              12880000
*  UTSCAL='0'B;                          /* DELETE MODULES      XM5847* 12890000
SCH018F  NI    A00105+6,B'01111111'                               0451  12900000
*  R4=IFD158;                            /* TERMINATE MESSAGE   X02008* 12910000
         L     @6,MSGMOD                                          0452  12920000
         L     @4,48(0,@6)                                        0452  12930000
*  IF SCTASTER¬='00'B THEN               /* TEST ERROR INDICATORS */    12940000
         TM    A00080+3,B'11000000'                               0453  12950000
         BC    08,@9C1                                            0453  12960000
*    WTO1='*';                           /* TERMINATE ERROR MESSAGE */  12970000
         MVI   13(@4),C'*'                                        0454  12980000
*  SCTASTER='00'B;                       /* CLEAR ERROR BITS */         12990000
@9C1     NI    A00080+3,B'00011111'                               0455  13000000
*  CATB1='0'B;                           /* CLEAR CATASTROPHIC OY01377* 13010000
*                                        /* ERROR FLAG AT DTERMOY01377* 13020000
*                                        /* TIME.              OY01377* 13030000
*  IF SUTMSG='1'B THEN                   /* START MSG ISSUED   SA51756* 13040000
         TM    A00105+8,B'00000100'                               0457  13050000
         BC    12,@9C0                                            0457  13060000
*  GEN(BAL   R7,SCH026);                 /* WTO MESSAGE */              13070000
         BAL   R7,SCH026                                                13080000
         DS    0H                                                       13090000
*  SUTMSG='0'B;                          /* CLEAR BIT          SA51756* 13100000
@9C0     NI    A00105+8,B'11111011'                               0459  13110000
*  SECPTR=0;                             /* UTS DELETED               * 13120000
         SR    @F,@F                                              0460  13130000
         ST    @F,SECPTR                                          0460  13140000
*  RETCODE=0;                            /* RETURN CODE HANDLED */      13150000
         ST    @F,RETCODE                                         0461  13160000
*  TERTN='00'X;                          /* ZERO LAST ROUTINE NUMBER */ 13170000
         MVI   A00006,X'00'                                       0462  13180000
*  GEN(EJECT);                                                          13190000
         EJECT                                                          13200000
         DS    0H                                                       13210000
* SCH019:                                                               13220000
*  ZIP16=ZIP16&&ZIP16;                   /* ZERO PLINK MORECORE X02008* 13230000
SCH019   XC    A00043(16),A00043                                  0464  13240000
*  IF RTSTAE='1'B THEN                   /* STAE IN CONTROL           * 13250000
         TM    A00105+6,B'00000001'                               0465  13260000
*    RETURN;                             /* RETURN TO STAE            * 13270000
         BC    03,@EL01                                           0466  13280000
*  IF FECOM='0'B THEN                    /* TEST 1ST ERROR */           13290000
@9BF     TM    A00080+2,B'00000001'                               0467  13300000
         BC    05,@9BE                                            0467  13310000
*    CATB1='0'B;                         /* NO 1ST ERROR */             13320000
         NI    A00080+3,B'11011111'                               0468  13330000
*  IF NPR='0'B|                          /* TEST NO PRINT OPTION */     13340000
*    NEP='1'B THEN                       /* TEST NO ERROR PRINT */      13350000
@9BE     TM    A00080+2,B'00000100'                               0469  13360000
         BC    08,@9BD                                            0469  13370000
         TM    A00080+3,B'00000100'                               0469  13380000
         BC    12,@9BC                                            0469  13390000
*       CATB1='0'B;                      /* ZERO CAT BIT IF NO PRINT */ 13400000
@9BD     NI    A00080+3,B'11011111'                               0470  13410000
*  IF CODE5='1'B THEN                    /* TEST IF LOOP BACK */        13420000
@9BC     TM    A00105+6,B'00001000'                               0471  13430000
*    GOTO SCH002;                        /* RETURN TO START */          13440000
         BC    01,SCH002                                          0472  13450000
*  IF BYPDEV¬='00'B THEN                 /* TEST BYPASS BITS */         13460000
         TM    A00105+3,B'01100000'                               0473  13470000
*    GOTO SCH022;                        /* BYPASS THIS DEVICE */       13480000
         BC    05,SCH022                                          0474  13490000
*  IF SNEWRUN='1'B THEN                  /* TEST BIT           SA51756* 13500000
         TM    A00105+8,B'00000010'                               0475  13510000
*    GOTO SCH001;                        /* NEW DEVICES AND TESTS */    13520000
         BC    01,SCH001                                          0476  13530000
*  IF LASTSEC='0'B THEN                  /* CHECK SECTION COUNT  M1463* 13540000
         TM    A00080+36,B'00000010'                              0477  13550000
*    GOTO SCH008;                        /* NEXT SECTION */             13560000
         BC    08,SCH008                                          0478  13570000
* SCH022:                                                               13580000
*  SECRUN='1'B;                          /* ALL SECTIONS RUN */         13590000
SCH022   OI    A00105+6,B'00000010'                               0479  13600000
* SCH023:                                                               13610000
*  UTCOM=UTCOM&&UTCOM;                   /* ZERO OUT PASSON AREA */     13620000
SCH023   XC    UTCOM(64),UTCOM                                    0480  13630000
*  PRIMBIT='0'B;                         /* CLEAR PRIMARY DEVICE BIT */ 13640000
         NI    12(@8),B'10111111'                                 0481  13650000
*  IF NURUN='1'B THEN                    /* TEST BYPASS ALL DEVICES */  13660000
         TM    A00105+3,B'01000000'                               0482  13670000
*    GOTO SCH024A;                       /* END TEST RUN */             13680000
         BC    01,SCH024A                                         0483  13690000
*  BYPDEV='00'B;                         /* ZERO OUT BYPASS SWITCHES */ 13700000
         NI    A00105+3,B'10011111'                               0484  13710000
*  IF NDR='1'B THEN                      /* TEST IF DEVICE REQUIRED */  13720000
         TM    A00105+2,B'00000100'                               0485  13730000
*    GOTO SCH024;                        /* DEVICE NOT REQUIRED */      13740000
         BC    01,SCH024                                          0486  13750000
*  IF ONEPRIM='1'B THEN                  /* TEST ONE PRIME DEVICE BIT * 13760000
         TM    A00080+33,B'00001000'                              0487  13770000
*    GOTO SCH024;                        /* END OF DEVICE TESTING */    13780000
         BC    01,SCH024                                          0488  13790000
* SCH023L:                                                              13800000
*  IF DCNT1¬<DCNT2 THEN                  /* TEST DEVICE COUNT */        13810000
SCH023L  CLC   DCNT1(1),DCNT2                                     0489  13820000
         BC    04,@9BB                                            0489  13830000
*      DO;                               /* NO MORE DEVICES TO TEST */  13840000
* SCH024:                                                               13850000
*        ONEPRIM='0'B;                   /* ZERO ONE PRIME DEVICE BIT * 13860000
SCH024   NI    A00080+33,B'11110111'                              0491  13870000
*        DCNT1='00'X;                    /* ZERO DEVICE COUNT */        13880000
         MVI   DCNT1,X'00'                                        0492  13890000
*        IF TLCOUNT>'0000'X&             /* CHECK TEST LOOP COUNT */    13900000
*          TLRUN<TLCOUNT THEN            /* CHECK TEST LOOP RUN */      13910000
         L     @F,@X17                                            0493  13920000
         CH    @F,TLCOUNT                                         0493  13930000
         BC    10,@9BA                                            0493  13940000
         LH    @F,TLCOUNT                                         0493  13950000
         CH    @F,TLRUN                                           0493  13960000
         BC    12,@9B9                                            0493  13970000
*            DO;                         /* LOOP THRU TESTS AGAIN */    13980000
*              TLRUN=TLRUN+1;            /* COUNT TEST RUNS */          13990000
         LA    @F,1                                               0495  14000000
         AH    @F,TLRUN                                           0495  14010000
         STH   @F,TLRUN                                           0495  14020000
*              GOTO SCH003;              /* RERUN TESTS */              14030000
         BC    15,SCH003                                          0496  14040000
*            END;                        /* END OF LOOP CHECK */        14050000
* SCH024A:                                                              14060000
*        RETURN;                         /* NORMAL RETURN */            14070000
*      END;                              /* ALL ACTIONS COMPLETED */    14080000
*  GOTO SCH005;                          /* NEXT DEVICE */              14090000
* CALLCOMP:                                                             14100000
*  COMPUTB='1'B;                         /* COMPUTE ONLY        X02008* 14110000
CALLCOMP OI    PARM12+12,B'01000000'                              0501  14120000
*  GOTO CALL12;                          /* GO TO LOADER        X02008* 14130000
         BC    15,CALL12                                          0502  14140000
* CALLOAD:                                                              14150000
*  COMPUTB='0'B;                         /* LOAD MODULE         X02008* 14160000
CALLOAD  NI    PARM12+12,B'10111111'                              0503  14170000
* CALL12:                                                               14180000
*  R1=ADDR(LDLIST);                                                     14190000
CALL12   LA    @1,LDLIST                                          0504  14200000
*  R15=TAB28;                            /* ENTRY POINT         X02008* 14210000
         L     @F,TAB28                                           0505  14220000
*  GEN(BALR  R14,R15);                                                  14230000
         BALR  R14,R15                                                  14240000
         DS    0H                                                       14250000
*  GOTO R7;                                                             14260000
         BCR   15,@7                                              0507  14270000
* SCH025:                                                               14280000
*  R1=IFD501;                            /* MESSAGE ADDRESS      M1463* 14290000
SCH025   L     @6,MSGMOD                                          0508  14300000
         L     @1,40(0,@6)                                        0508  14310000
*  MSGUTS=PLNAM;                         /* SECTION NAME        S21937* 14320000
         MVC   12(8,@1),UTSPL                                     0509  14330000
* SCH025A:                                                              14340000
*  SLNG1='0000'X;                        /* ZERO SIZE VALUE     X02008* 14350000
SCH025A  MVC   3(2,@9),@X7                                        0510  14360000
* SCH013D:                                                              14370000
*  GEN(BAL   R7,SCH027);                 /* WTO MESSAGE */              14380000
SCH013D  BAL   R7,SCH027                                                14390000
         DS    0H                                                       14400000
*  GOTO SCH018F;                         /* NEXT TEST           X02008* 14410000
         BC    15,SCH018F                                         0512  14420000
*  RESTRICT(7);                                                         14430000
* SCH026:                                                               14440000
*  FEITEMS='0000'B;                      /* ZERO 1ST ERROR ITEM S21937* 14450000
SCH026   NI    A00105+5,B'11000011'                               0514  14460000
*  IF NCP='0'B THEN                      /* TEST NO CONTROL PRINT */    14470000
         TM    A00080+3,B'00001000'                               0515  14480000
*    GOTO R7;                            /* NO START OR TERMINATE */    14490000
         BCR   08,@7                                              0516  14500000
* SCH026A:                                                              14510000
*  R1=R4;                                /* MESSAGE ADDRESS */          14520000
SCH026A  LR    @1,@4                                              0517  14530000
*  GEN;                                                                 14540000
SCH027   PWTO  REG=(1)                  ISSUE A WTO                     14550000
         DS    0H                                                       14560000
*  GOTO R7;                              /* RETURN TO MAIN FLOW */      14570000
         BCR   15,@7                                              0519  14580000
* SCH029:                                                               14590000
*  PDFLG(2)=CDSFLAG;                                                    14600000
SCH029   MVC   A00080+11(1),41(@8)                                0520  14610000
*  NDCFO='1'B;                           /* NO DYN COMMUNICATION TEST * 14620000
         OI    A00105+2,B'10000000'                               0521  14630000
*  UTSCAL='0'B;                          /* UTS NOT CALLED YET */       14640000
         NI    A00105+6,B'01111111'                               0522  14650000
*  R15=DATPTR;                           /* DATA PROTECT ROOT MODULE */ 14660000
         L     @F,DATPTR                                          0523  14670000
*  GEN(BALR  R14,R15);                   /* GO TO DATA PROTECT */       14680000
         BALR  R14,R15                                                  14690000
         DS    0H                                                       14700000
*  IF CEVOL='1'B THEN                    /* CHECK FOR CE PACK  SA51755* 14710000
         TM    13(@8),B'00100000'                                 0525  14720000
         BC    12,@9B8                                            0525  14730000
*    CEVOLUM='1'B;                       /* CE VOLUME          SA51755* 14740000
         OI    A00080+11,B'00100000'                              0526  14750000
*  NDCFO='0'B;                           /* TEST DYN COMMUNICATIONS */  14760000
@9B8     NI    A00105+2,B'01111111'                               0527  14770000
*  IF BYPDEV¬='00'B THEN                 /* TEST BYPASS BITS */         14780000
         TM    A00105+3,B'01100000'                               0528  14790000
*    GOTO SCH023;                        /* BYPASS ONE OR ALL TESTS */  14800000
         BC    05,SCH023                                          0529  14810000
*  GOTO R7;                              /* RETURN TO MAIN FLOW */      14820000
         BCR   15,@7                                              0530  14830000
* END;                                   /* END OF MAIN PROCEDURE */    14840000
@EL01    L     @D,4(0,@D)                                         0531  14850000
         LM    @E,@C,12(@D)                                       0531  14860000
         BCR   15,@E                                              0531  14870000
@DATA1   EQU   *                                                        14880000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           14890000
@1       EQU   01                                                       14900000
@2       EQU   02                                                       14910000
@3       EQU   03                                                       14920000
@4       EQU   04                                                       14930000
@5       EQU   05                                                       14940000
@6       EQU   06                                                       14950000
@7       EQU   07                                                       14960000
@8       EQU   08                                                       14970000
@9       EQU   09                                                       14980000
@A       EQU   10                                                       14990000
@B       EQU   11                                                       15000000
@C       EQU   12                                                       15010000
@D       EQU   13                                                       15020000
@E       EQU   14                                                       15030000
@F       EQU   15                                                       15040000
@D1      DC    F'0'                                                     15050000
@D2      DC    H'12'                                                    15060000
@D3      DC    H'1'                                                     15070000
         DS    0F                                                       15080000
@C13     DC    C'UNIT'                                                  15090000
@C14     DC    C'NONE    '                                              15100000
@X17     DC    X'00000000'                                              15110000
@X7      DC    X'0000'                                                  15120000
@C8      DC    C'2400W '                                                15130000
         DS    0D                                                       15140000
@DATA    EQU   *                                                        15150000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   15160000
X        EQU   00000000            FULLWORD INTEGER                     15170000
R0       EQU   00000000            FULLWORD POINTER REGISTER            15180000
R1       EQU   00000001            FULLWORD POINTER REGISTER            15190000
R2       EQU   00000002            FULLWORD POINTER REGISTER            15200000
R3       EQU   00000003            FULLWORD POINTER REGISTER            15210000
R4       EQU   00000004            FULLWORD POINTER REGISTER            15220000
R5       EQU   00000005            FULLWORD POINTER REGISTER            15230000
R6       EQU   00000006            FULLWORD POINTER REGISTER            15240000
R7       EQU   00000007            FULLWORD POINTER REGISTER            15250000
R8       EQU   00000008            FULLWORD POINTER REGISTER            15260000
R9       EQU   00000009            FULLWORD POINTER REGISTER            15270000
R10      EQU   00000010            FULLWORD POINTER REGISTER            15280000
R11      EQU   00000011            FULLWORD POINTER REGISTER            15290000
R12      EQU   00000012            FULLWORD POINTER REGISTER            15300000
R13      EQU   00000013            FULLWORD POINTER REGISTER            15310000
R14      EQU   00000014            FULLWORD POINTER REGISTER            15320000
R15      EQU   00000015            FULLWORD POINTER REGISTER            15330000
HCODE    EQU   00000132            1 BYTE(S)                            15340000
A00007   EQU   00000016            4 BYTE(S) ON WORD                    15350000
WKBY     EQU   A00007+00000000     FULLWORD INTEGER                     15360000
A00008   EQU   A00007+00000000     2 BYTE(S)                            15370000
WKBY34   EQU   A00007+00000002     2 BYTE(S)                            15380000
A00009   EQU   00000000            144 BYTE(S) ON WORD                  15390000
IFD100   EQU   A00009+00000000     FULLWORD POINTER                     15400000
A00010   EQU   A00009+00000004     5*FULLWORD POINTER                   15410000
IFD117   EQU   A00009+00000024     FULLWORD POINTER                     15420000
IFD121   EQU   A00009+00000028     FULLWORD POINTER                     15430000
A00011   EQU   A00009+00000032     FULLWORD POINTER                     15440000
IFD135   EQU   A00009+00000036     FULLWORD POINTER                     15450000
IFD501   EQU   A00009+00000040     FULLWORD POINTER                     15460000
A00012   EQU   A00009+00000044     FULLWORD POINTER                     15470000
IFD158   EQU   A00009+00000048     FULLWORD POINTER                     15480000
IFD201   EQU   A00009+00000052     FULLWORD POINTER                     15490000
A00013   EQU   A00009+00000056     6*FULLWORD POINTER                   15500000
IFD231   EQU   A00009+00000080     FULLWORD POINTER                     15510000
IFD313   EQU   A00009+00000084     FULLWORD POINTER                     15520000
IFD502   EQU   A00009+00000088     FULLWORD POINTER                     15530000
IFD503   EQU   A00009+00000092     FULLWORD POINTER                     15540000
IFD200   EQU   A00009+00000096     FULLWORD POINTER                     15550000
A00014   EQU   A00009+00000100     10*FULLWORD POINTER                  15560000
IFD248   EQU   A00009+00000140     FULLWORD POINTER                     15570000
A00015   EQU   A00009+00000140     FULLWORD POINTER                     15580000
IFD227   EQU   00000068            FULLWORD POINTER                     15590000
A00016   EQU   00000000            45 BYTE(S) ON WORD                   15600000
A00017   EQU   A00016+00000000     37 BYTE(S)                           15610000
UT227    EQU   A00016+00000037     8 BYTE(S)                            15620000
SECLEV   EQU   00000011            1 BYTE(S)                            15630000
A00018   EQU   00000000            82 BYTE(S) ON WORD                   15640000
A00019   EQU   A00018+00000000     4 BYTE(S)                            15650000
MSG100A  EQU   A00018+00000004     78 BYTE(S)                           15660000
A00020   EQU   A00018+00000004     8 BYTE(S)                            15670000
MSG100   EQU   A00018+00000012     70 BYTE(S)                           15680000
SVR8     EQU   @DATA+00000072      FULLWORD INTEGER                     15690000
A00021   EQU   SVR8+00000000       2 BYTE(S)                            15700000
SVR834   EQU   SVR8+00000002       2 BYTE(S)                            15710000
A00022   EQU   SVR8+00000002       1 BYTE(S)                            15720000
SVR84    EQU   SVR8+00000003       1 BYTE(S)                            15730000
         ORG   @DATA+00000076                                           15740000
RETCODE  EQU   *                   FULLWORD INTEGER                     15750000
         DC    FL4'0'                                                   15760000
WK1TO8   EQU   00000004            8 BYTE(S)                            15770000
WK1TO4   EQU   WK1TO8+00000000     4 BYTE(S)                            15780000
WK5TO8   EQU   WK1TO8+00000004     4 BYTE(S)                            15790000
A00026   EQU   00000000            16 BYTE(S) ON WORD                   15800000
INZNM    EQU   A00026+00000000     8 BYTE(S)                            15810000
INZLV    EQU   A00026+00000008     2 BYTE(S)                            15820000
INZRT    EQU   A00026+00000010     HALFWORD INTEGER                     15830000
INZIN    EQU   A00026+00000012     FULLWORD POINTER                     15840000
A00027   EQU   A00026+00000012     1 BYTE(S)                            15850000
WANTDONT EQU   00000001            8 BYTE(S)                            15860000
WANT     EQU   WANTDONT+00000000   4 BYTE(S)                            15870000
DONTWANT EQU   WANTDONT+00000004   4 BYTE(S)                            15880000
A00028   EQU   WANTDONT+00000004   1 BYTE(S)                            15890000
A00029   EQU   00000020            8 BYTE(S) ON WORD                    15900000
RTSIZ    EQU   A00029+00000000     FULLWORD INTEGER                     15910000
MOSIZ    EQU   A00029+00000004     FULLWORD INTEGER                     15920000
A00030   EQU   A00029+00000004     1 BYTE(S)                            15930000
A00031   EQU   00000000            86 BYTE(S) ON WORD                   15940000
A00032   EQU   A00031+00000000     19*FULLWORD POINTER                  15950000
SECID    EQU   A00031+00000076     8 BYTE(S)                            15960000
RTMSK    EQU   A00031+00000084     2 BYTE(S)                            15970000
A00033   EQU   00000000            60 BYTE(S) ON WORD                   15980000
A00034   EQU   A00033+00000000     13 BYTE(S)                           15990000
WTO12    EQU   A00033+00000013     2 BYTE(S)                            16000000
WTO1     EQU   A00033+00000013     1 BYTE(S)                            16010000
A00035   EQU   A00033+00000015     1 BYTE(S)                            16020000
MSGTEST  EQU   A00033+00000016     8 BYTE(S)                            16030000
A00036   EQU   A00033+00000016     7 BYTE(S)                            16040000
OLDTEST  EQU   A00033+00000023     1 BYTE(S)                            16050000
BLKUNIT  EQU   A00033+00000024     26 BYTE(S)                           16060000
A00037   EQU   A00033+00000024     1 BYTE(S)                            16070000
MSGUNIT  EQU   A00033+00000025     22 BYTE(S)                           16080000
KUNIT    EQU   A00033+00000025     4 BYTE(S)                            16090000
A00038   EQU   A00033+00000029     1 BYTE(S)                            16100000
MSGDEV   EQU   A00033+00000030     8 BYTE(S)                            16110000
A00039   EQU   A00033+00000038     1 BYTE(S)                            16120000
MSGSYB   EQU   A00033+00000039     8 BYTE(S)                            16130000
A00040   EQU   A00033+00000047     3 BYTE(S)                            16140000
MSGVR    EQU   A00033+00000050     1 BYTE(S)                            16150000
MPCPUID  EQU   A00033+00000051     9 BYTE(S)                            16160000
A00041   EQU   A00033+00000051     7 BYTE(S)                            16170000
MSGCPUID EQU   A00033+00000058     2 BYTE(S)                            16180000
A00042   EQU   A00033+00000050     1 BYTE(S)                            16190000
TMWK     EQU   00000000            60 BYTE(S) ON WORD                   16200000
A00045   EQU   TMWK+00000000       36 BYTE(S)                           16210000
KNT      EQU   TMWK+00000036       8 BYTE(S)                            16220000
KNAME    EQU   TMWK+00000036       6 BYTE(S)                            16230000
MODNN    EQU   TMWK+00000044       8 BYTE(S)                            16240000
MODNN6   EQU   TMWK+00000044       6 BYTE(S)                            16250000
A00046   EQU   TMWK+00000052       4 BYTE(S)                            16260000
GTCOR    EQU   TMWK+00000056       FULLWORD POINTER                     16270000
A00047   EQU   00000000            56 BYTE(S) ON WORD                   16280000
A00048   EQU   A00047+00000000     56 BYTE(S)                           16290000
DVEBC    EQU   A00047+00000000     8 BYTE(S)                            16300000
DVUCB    EQU   A00047+00000008     4  BYTE  POINTER                     16310000
A00049   EQU   A00047+00000012     8 BIT(S)                             16320000
A00050   EQU   A00047+00000012     1 BIT(S)                             16330000
PRIMBIT  EQU   A00047+00000012     1 BIT(S)                             16340000
A00051   EQU   A00047+00000012     1 BIT(S)                             16350000
EXIOACT  EQU   A00047+00000012     1 BIT(S)                             16360000
A00052   EQU   A00047+00000012     1 BIT(S)                             16370000
GRABIT   EQU   A00047+00000012     1 BIT(S)                             16380000
A00053   EQU   A00047+00000012     1 BIT(S)                             16390000
SYMBSSID EQU   A00047+00000012     1 BIT(S)                             16400000
A00054   EQU   A00047+00000013     19 BYTE(S)                           16410000
A00055   EQU   A00047+00000013     8 BIT(S)                             16420000
A00056   EQU   A00047+00000013     1 BIT(S)                             16430000
LETGOB   EQU   A00047+00000013     1 BIT(S)                             16440000
CEVOL    EQU   A00047+00000013     1 BIT(S)                             16450000
DVTABCDS EQU   A00047+00000032     20 BYTE(S)                           16460000
DVADR    EQU   A00047+00000032     4 BYTE(S)                            16470000
DVCDS    EQU   A00047+00000036     4 BYTE(S)                            16480000
A00057   EQU   A00047+00000040     1 BYTE(S)                            16490000
CDSFLAG  EQU   A00047+00000041     1 BYTE(S)                            16500000
A00058   EQU   A00047+00000041     4 BIT(S)                             16510000
SYMBIT   EQU   A00047+00000041     1 BIT(S)                             16520000
A00059   EQU   A00047+00000042     8 BIT(S)                             16530000
A00060   EQU   A00047+00000042     1 BIT(S)                             16540000
SKIPRIM  EQU   A00047+00000042     1 BIT(S)                             16550000
A00061   EQU   A00047+00000043     1 BYTE(S)                            16560000
SYMNAME  EQU   A00047+00000044     8 BYTE(S)                            16570000
A00062   EQU   00000000            20 BYTE(S) ON WORD                   16580000
A00063   EQU   A00062+00000000     4*FULLWORD INTEGER                   16590000
DVUDD    EQU   A00062+00000016     4 BYTE(S)                            16600000
PARM12   EQU   @DATA+00000080      12 BYTE(S) ON WORD                   16610000
BNAME    EQU   PARM12+00000000     8 BYTE(S)                            16620000
BNAMCM   EQU   PARM12+00000000     5 BYTE(S)                            16630000
BNAMVR   EQU   PARM12+00000005     3 BYTE(S)                            16640000
TARGADR  EQU   PARM12+00000008     FULLWORD INTEGER                     16650000
         ORG   PARM12+00000012                                          16660000
A00064   EQU   *                   FULLWORD INTEGER                     16670000
         DC    FL4'0'                                                   16680000
FUNC12   EQU   PARM12+00000012     1 BYTE(S)                            16690000
A00065   EQU   PARM12+00000012     1 BIT(S)                             16700000
COMPUTB  EQU   PARM12+00000012     1 BIT(S)                             16710000
A00066   EQU   PARM12+00000012     1 BIT(S)                             16720000
UTSENVL  EQU   PARM12+00000012     1 BIT(S)                             16730000
A00067   EQU   PARM12+00000013     1 BYTE(S)                            16740000
LDLIST   EQU   @DATA+00000096      8 BYTE(S) ON WORD                    16750000
A00068   EQU   *                   HALFWORD INTEGER                     16760000
         DC    FL2'2'                                                   16770000
A00069   EQU   *                   2 BYTE(S)                            16780000
         DC    C'12'                                                    16790000
A00070   EQU   *                   FULLWORD POINTER                     16800000
         DC    AL4(PARM12)                                              16810000
UTSPL    EQU   @DATA+00000080      8 BYTE(S) ON WORD                    16820000
PLNAM    EQU   UTSPL+00000000      8 BYTE(S)                            16830000
A00071   EQU   UTSPL+00000000      1 BYTE(S)                            16840000
PLNM15   EQU   UTSPL+00000000      5 BYTE(S)                            16850000
PLNM68   EQU   UTSPL+00000005      3 BYTE(S)                            16860000
PLSNM    EQU   UTSPL+00000001      6 BYTE(S)                            16870000
PLTYPE   EQU   UTSPL+00000001      4 BYTE(S)                            16880000
PLNAM6   EQU   UTSPL+00000005      2 BYTE(S)                            16890000
A00072   EQU   UTSPL+00000007      1 BYTE(S)                            16900000
A00076   EQU   00000000            8 BYTE(S) ON WORD                    16910000
SNAM1    EQU   A00076+00000000     3 BYTE(S)                            16920000
SLNG1    EQU   A00076+00000003     2 BYTE(S)                            16930000
A00077   EQU   A00076+00000003     1 BYTE(S)                            16940000
A00078   EQU   A00076+00000004     8 BIT(S)                             16950000
A00079   EQU   A00076+00000004     5 BIT(S)                             16960000
DBLBIT   EQU   A00076+00000004     2 BIT(S)                             16970000
OLDUT    EQU   A00076+00000004     1 BIT(S)                             16980000
SNAM2    EQU   A00076+00000005     3 BYTE(S)                            16990000
BNAMCMSV EQU   @DATA+00000104      5 BYTE(S)                            17000000
A00128   EQU   @DATA+00000109      4 BYTE(S)                            17010000
         ORG   A00128+00000000                                          17020000
MSGSTR   EQU   *                   2 BYTE(S)                            17030000
         DC    C' S'                                                    17040000
MSGEND   EQU   *                   2 BYTE(S)                            17050000
         DC    C' T'                                                    17060000
UTS201   EQU   00000043            8 BYTE(S)                            17070000
MSG231   EQU   00000000            43 BYTE(S) ON WORD                   17080000
A00129   EQU   MSG231+00000000     12 BYTE(S)                           17090000
WMSGTEST EQU   MSG231+00000012     8 BYTE(S)                            17100000
A00130   EQU   MSG231+00000020     15 BYTE(S)                           17110000
WMSGDEV  EQU   MSG231+00000035     8 BYTE(S)                            17120000
RTMASK   EQU   00000070            1 BYTE(S)                            17130000
MSGUTS   EQU   00000012            8 BYTE(S)                            17140000
A00131   EQU   00000000            28 BYTE(S) ON WORD                   17150000
A00132   EQU   A00131+00000000     20 BYTE(S)                           17160000
WTO4NM   EQU   A00131+00000020     8 BYTE(S)                            17170000
MSG200   EQU   00000000            25 BYTE(S) ON WORD                   17180000
A00133   EQU   MSG200+00000000     17 BYTE(S)                           17190000
NM200    EQU   MSG200+00000017     8 BYTE(S)                            17200000
DEVTBENT EQU   00000000            12 BYTE(S)                           17210000
DEVPTR   EQU   DEVTBENT+00000000   4  BYTE  POINTER                     17220000
IOSBPTR  EQU   DEVTBENT+00000004   4  BYTE  POINTER                     17230000
A00134   EQU   DEVTBENT+00000008   4 BYTE(S)                            17240000
IOSB     EQU   00000000            116 BYTE(S) ON WORD                  17250000
A00135   EQU   IOSB+00000000       112 BYTE(S)                          17260000
PTRTECB  EQU   IOSB+00000112       FULLWORD POINTER                     17270000
INDEX    EQU   @DATA+00000114      HALFWORD INTEGER                     17280000
DIOPARM  EQU   @DATA+00000116      13 BYTE(S) ON WORD                   17290000
         ORG   DIOPARM+00000000                                         17300000
A00136   EQU   *                   HALFWORD INTEGER                     17310000
         DC    FL2'2'                                                   17320000
A00137   EQU   *                   2 BYTE(S)                            17330000
         DC    C'44'                                                    17340000
DIOCDSAD EQU   DIOPARM+00000004    FULLWORD POINTER                     17350000
DIOTECB  EQU   DIOPARM+00000008    FULLWORD POINTER                     17360000
         ORG   DIOPARM+00000012                                         17370000
A00138   EQU   *                   1 BYTE(S)                            17380000
         DC    X'01'                                                    17390000
A00139   EQU   DIOPARM+00000012    1 BYTE(S)                            17400000
ACTSECT  EQU   @DATA+00000129      8 BYTE(S)                            17410000
SPCOUNT  EQU   00000018            2 BYTE(S)                            17420000
OLTADDR  EQU   @DATA+00000140      FULLWORD INTEGER                     17430000
         ORG   @DATA                                                    17440000
         DS    00000148C                                                17450000
@TEMPS   DS    0F                                                       17460000
@TEMP4   DC    F'0'                                                     17470000
DSECT48  IFDCOM                                                         17480000
IFDOLT48 CSECT                                                          17490000
CE46     EQU   CESWT4+00000000     3 BYTE(S)                            17500000
A00000   EQU   PARTITEM+00000000   12 BYTE(S) ON WORD                   17510000
PARADR   EQU   A00000+00000000     FULLWORD POINTER                     17520000
PARSZ    EQU   A00000+00000004     FULLWORD INTEGER                     17530000
RTPLKSZ  EQU   A00000+00000008     FULLWORD INTEGER                     17540000
DBLZ     EQU   A00000+00000008     2 BYTE(S)                            17550000
UTSIZ    EQU   A00000+00000010     2 BYTE(S)                            17560000
A00001   EQU   A00000+00000010     1 BYTE(S)                            17570000
A00002   EQU   A00000+00000011     8 BIT(S)                             17580000
A00003   EQU   A00000+00000011     5 BIT(S)                             17590000
TRPBITS  EQU   A00000+00000011     3 BIT(S)                             17600000
A00004   EQU   A00000+00000011     2 BIT(S)                             17610000
CLRBIT   EQU   A00000+00000011     1 BIT(S)                             17620000
A00005   EQU   A00000+00000011     1 BIT(S)                             17630000
A00006   EQU   HRTSEL+00000000     2 BYTE(S) ON WORD                    17640000
TERTN    EQU   A00006+00000000     1 BYTE(S)                            17650000
HIRTN    EQU   A00006+00000001     1 BYTE(S)                            17660000
VID      EQU   WKSVC+00000002      2 BYTE(S)                            17670000
MID1     EQU   MCT+00000010        2 BYTE(S)                            17680000
TLRUN    EQU   TLCOUNT+00000006    HALFWORD INTEGER                     17690000
INBF1    EQU   INBUFR+00000000     1 BYTE(S)                            17700000
A00023   EQU   OLTTAB+00000000     40 BYTE(S) ON WORD                   17710000
A00024   EQU   A00023+00000000     8*FULLWORD POINTER                   17720000
TMCOMAD  EQU   A00023+00000032     FULLWORD POINTER                     17730000
SECPRF   EQU   A00023+00000036     FULLWORD POINTER                     17740000
A00025   EQU   A00023+00000036     FULLWORD POINTER                     17750000
A00043   EQU   PLKMOR+00000000     16 BYTE(S) ON WORD                   17760000
ZIP16    EQU   A00043+00000000     16 BYTE(S)                           17770000
A00044   EQU   A00043+00000000     8 BYTE(S)                            17780000
ZIP8     EQU   A00043+00000008     8 BYTE(S)                            17790000
DCNT1    EQU   UNITUSE+00000000    1 BYTE(S)                            17800000
DCNT2    EQU   UNICTR+00000000     1 BYTE(S)                            17810000
SCNT1    EQU   SECTUSE+00000000    1 BYTE(S)                            17820000
A00073   EQU   SECLST+00000000     12 BYTE(S) ON WORD                   17830000
A00074   EQU   A00073+00000000     1 BYTE(S)                            17840000
SCNT2    EQU   A00073+00000001     1 BYTE(S)                            17850000
SNAM     EQU   A00073+00000002     5 BYTE(S)                            17860000
A00075   EQU   A00073+00000002     1 BYTE(S)                            17870000
STYPEN   EQU   A00073+00000003     4 BYTE(S)                            17880000
SNAMST   EQU   A00073+00000007     5 BYTE(S)                            17890000
A00080   EQU   CHASCT+00000000     38 BYTE(S) ON WORD                   17900000
A00081   EQU   A00080+00000000     8 BYTE(S)                            17910000
ERRLPCT  EQU   A00080+00000000     2 BYTE(S)                            17920000
A00082   EQU   A00080+00000002     8 BIT(S)                             17930000
A00083   EQU   A00080+00000002     5 BIT(S)                             17940000
NPR      EQU   A00080+00000002     1 BIT(S)                             17950000
INDEFLP  EQU   A00080+00000002     1 BIT(S)                             17960000
FECOM    EQU   A00080+00000002     1 BIT(S)                             17970000
A00084   EQU   A00080+00000003     8 BIT(S)                             17980000
SCTASTER EQU   A00080+00000003     2 BIT(S)                             17990000
SCTERB   EQU   A00080+00000003     1 BIT(S)                             18000000
ASTERB   EQU   A00080+00000003     1 BIT(S)                             18010000
CATB1    EQU   A00080+00000003     1 BIT(S)                             18020000
AP       EQU   A00080+00000003     1 BIT(S)                             18030000
NCP      EQU   A00080+00000003     1 BIT(S)                             18040000
NEP      EQU   A00080+00000003     1 BIT(S)                             18050000
ERLOP    EQU   A00080+00000003     1 BIT(S)                             18060000
TSLOP    EQU   A00080+00000003     1 BIT(S)                             18070000
A00085   EQU   A00080+00000004     3 BYTE(S)                            18080000
SCTLEV   EQU   A00080+00000007     1 BYTE(S)                            18090000
DVSEC1   EQU   A00080+00000008     2 BYTE(S)                            18100000
PDFLG    EQU   A00080+00000010     2 BYTE(S)                            18110000
A00086   EQU   A00080+00000010     8 BIT(S)                             18120000
A00087   EQU   A00080+00000011     8 BIT(S)                             18130000
A00088   EQU   A00080+00000011     2 BIT(S)                             18140000
CEVOLUM  EQU   A00080+00000011     1 BIT(S)                             18150000
PDPAD1   EQU   A00080+00000012     8 BYTE(S)                            18160000
PDPA1    EQU   A00080+00000012     4 BYTE(S)                            18170000
PDDD1    EQU   A00080+00000016     4 BYTE(S)                            18180000
A00089   EQU   A00080+00000016     2 BYTE(S)                            18190000
DCLAS    EQU   A00080+00000018     1 BYTE(S)                            18200000
DVSEC2   EQU   A00080+00000020     2 BYTE(S)                            18210000
A00090   EQU   A00080+00000022     2 BYTE(S)                            18220000
PDPAD2   EQU   A00080+00000024     8 BYTE(S)                            18230000
PDPA2    EQU   A00080+00000024     4 BYTE(S)                            18240000
PDDD2    EQU   A00080+00000028     4 BYTE(S)                            18250000
A00091   EQU   A00080+00000032     1 BYTE(S)                            18260000
A00092   EQU   A00080+00000033     8 BIT(S)                             18270000
A00093   EQU   A00080+00000033     3 BIT(S)                             18280000
ERRCNT   EQU   A00080+00000033     1 BIT(S)                             18290000
ONEPRIM  EQU   A00080+00000033     1 BIT(S)                             18300000
CLEANUP  EQU   A00080+00000033     1 BIT(S)                             18310000
A00094   EQU   A00080+00000034     2 BYTE(S)                            18320000
A00095   EQU   A00080+00000036     8 BIT(S)                             18330000
A00096   EQU   A00080+00000036     1 BIT(S)                             18340000
CLEANRT  EQU   A00080+00000036     1 BIT(S)                             18350000
A00097   EQU   A00080+00000036     4 BIT(S)                             18360000
LASTSEC  EQU   A00080+00000036     1 BIT(S)                             18370000
DYCOM    EQU   A00080+00000036     1 BIT(S)                             18380000
A00098   EQU   A00080+00000037     8 BIT(S)                             18390000
TALKFLAG EQU   A00080+00000037     1 BIT(S)                             18400000
A00099   EQU   A00080+00000037     1 BYTE(S)                            18410000
CDS8TO19 EQU   CHASCT+00000020     12 BYTE(S)                           18420000
A00100   EQU   CHASCT+00000004     66 BYTE(S) ON WORD                   18430000
SCTWD17  EQU   A00100+00000000     28 BYTE(S)                           18440000
RTNM1ST  EQU   A00100+00000000     2 BYTE(S)                            18450000
A00101   EQU   A00100+00000028     1 BYTE(S)                            18460000
A00102   EQU   A00100+00000029     8 BIT(S)                             18470000
A00103   EQU   A00100+00000029     2 BIT(S)                             18480000
CSELRTN  EQU   A00100+00000029     1 BIT(S)                             18490000
A00104   EQU   A00100+00000030     6 BYTE(S)                            18500000
RTNMLST  EQU   A00100+00000036     30 BYTE(S)                           18510000
A00105   EQU   CESWT+00000000      9 BYTE(S) ON WORD                    18520000
A00106   EQU   A00105+00000000     8 BIT(S)                             18530000
A00107   EQU   A00105+00000000     2 BIT(S)                             18540000
OORN     EQU   A00105+00000000     2 BIT(S)                             18550000
OUTS     EQU   A00105+00000000     1 BIT(S)                             18560000
NUTS     EQU   A00105+00000000     1 BIT(S)                             18570000
A00108   EQU   A00105+00000001     8 BIT(S)                             18580000
A00109   EQU   A00105+00000001     1 BIT(S)                             18590000
SEEK2321 EQU   A00105+00000001     1 BIT(S)                             18600000
T2321T   EQU   A00105+00000001     1 BIT(S)                             18610000
A00110   EQU   A00105+00000001     2 BIT(S)                             18620000
T2321    EQU   A00105+00000001     1 BIT(S)                             18630000
A00111   EQU   A00105+00000001     1 BIT(S)                             18640000
TPFLAG   EQU   A00105+00000001     1 BIT(S)                             18650000
A00112   EQU   A00105+00000002     8 BIT(S)                             18660000
NDCFO    EQU   A00105+00000002     1 BIT(S)                             18670000
DPONDEV  EQU   A00105+00000002     1 BIT(S)                             18680000
A00113   EQU   A00105+00000002     3 BIT(S)                             18690000
NDR      EQU   A00105+00000002     1 BIT(S)                             18700000
TAPEHDR  EQU   A00105+00000002     1 BIT(S)                             18710000
A00114   EQU   A00105+00000003     8 BIT(S)                             18720000
OSTWTOR  EQU   A00105+00000003     1 BIT(S)                             18730000
BYPDEV   EQU   A00105+00000003     2 BIT(S)                             18740000
NURUN    EQU   A00105+00000003     1 BIT(S)                             18750000
NUDEV    EQU   A00105+00000003     1 BIT(S)                             18760000
A00115   EQU   A00105+00000003     2 BIT(S)                             18770000
TP1419   EQU   A00105+00000003     1 BIT(S)                             18780000
CE45     EQU   A00105+00000004     2 BYTE(S)                            18790000
CE4      EQU   A00105+00000004     8 BIT(S)                             18800000
CE5      EQU   A00105+00000005     8 BIT(S)                             18810000
A00116   EQU   A00105+00000005     2 BIT(S)                             18820000
FEITEMS  EQU   A00105+00000005     4 BIT(S)                             18830000
FFEFCE   EQU   A00105+00000005     2 BIT(S)                             18840000
CE6      EQU   A00105+00000006     8 BIT(S)                             18850000
UTSCAL   EQU   A00105+00000006     1 BIT(S)                             18860000
A00117   EQU   A00105+00000006     1 BIT(S)                             18870000
EOJLOG   EQU   A00105+00000006     1 BIT(S)                             18880000
PFPMSG   EQU   A00105+00000006     1 BIT(S)                             18890000
CODE5    EQU   A00105+00000006     1 BIT(S)                             18900000
NORUN    EQU   A00105+00000006     1 BIT(S)                             18910000
SECRUN   EQU   A00105+00000006     1 BIT(S)                             18920000
RTSTAE   EQU   A00105+00000006     1 BIT(S)                             18930000
A00118   EQU   A00105+00000007     8 BIT(S)                             18940000
A00119   EQU   A00105+00000007     2 BIT(S)                             18950000
REMOTE   EQU   A00105+00000007     1 BIT(S)                             18960000
A00120   EQU   A00105+00000007     3 BIT(S)                             18970000
VIRTUAL  EQU   A00105+00000007     1 BIT(S)                             18980000
CE8      EQU   A00105+00000008     8 BIT(S)                             18990000
A00121   EQU   A00105+00000008     3 BIT(S)                             19000000
READDCHK EQU   A00105+00000008     1 BIT(S)                             19010000
OLTINVV  EQU   A00105+00000008     1 BIT(S)                             19020000
SUTMSG   EQU   A00105+00000008     1 BIT(S)                             19030000
SNEWRUN  EQU   A00105+00000008     1 BIT(S)                             19040000
A00122   EQU   A00105+00000008     1 BIT(S)                             19050000
A00123   EQU   CESWTR+00000000     1 BYTE(S)                            19060000
RETAINAC EQU   A00123+00000000     1 BIT(S)                             19070000
REMERR   EQU   A00123+00000000     1 BIT(S)                             19080000
REMNOMSG EQU   A00123+00000000     1 BIT(S)                             19090000
CENOMSG  EQU   A00123+00000000     1 BIT(S)                             19100000
PRTNOMSG EQU   A00123+00000000     1 BIT(S)                             19110000
IMRESP   EQU   A00123+00000000     1 BIT(S)                             19120000
EXECOUT  EQU   A00123+00000000     1 BIT(S)                             19130000
CECOMOUT EQU   A00123+00000000     1 BIT(S)                             19140000
A00124   EQU   CESWTR1+00000000    1 BYTE(S)                            19150000
A00125   EQU   A00124+00000000     2 BIT(S)                             19160000
CECOMANS EQU   A00124+00000000     1 BIT(S)                             19170000
A00126   EQU   A00124+00000000     2 BIT(S)                             19180000
REMANS   EQU   A00124+00000000     1 BIT(S)                             19190000
A00127   EQU   A00124+00000000     2 BIT(S)                             19200000
A00140   EQU   CESWT9+00000000     1 BYTE(S)                            19210000
A00141   EQU   A00140+00000000     2 BIT(S)                             19220000
VRCAP    EQU   A00140+00000000     1 BIT(S)                             19230000
A00142   EQU   A00140+00000000     4 BIT(S)                             19240000
OLTTERM  EQU   A00140+00000000     1 BIT(S)                             19250000
A00143   EQU   CESWT10+00000000    1 BYTE(S)                            19260000
MPSYS    EQU   A00143+00000000     1 BIT(S)                             19270000
@DATEND  EQU   *                                                        19280000
@9F5     EQU   SCH006                                                   19290000
SCH024A  EQU   @EL01                                                    19300000
@9BA     EQU   @EL01                                                    19310000
@9B9     EQU   @EL01                                                    19320000
@9BB     EQU   SCH005                                                   19330000
@DO9F8   EQU   SCH024A                                                  19340000
         END    ,(C'PL/S',1400,76153)                                   19350000
./  ADD  SSI=32561111,NAME=IFDOLT49
         TITLE 'IFDOLT49 CDS EQUATING'                                  00010000
         TITLE ' CDS EQUATING.  IFDOLT49'                               00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT49 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT49 13 SEP 73'                             0002  00070000
         STM   @E,@C,12(@D)                                       0002  00080000
         BALR  @B,0                                               0002  00090000
@PSTART  DS    0H                                                 0002  00100000
         USING @PSTART+00000,@B                                   0002  00110000
         ST    @D,@SAV001+4                                       0002  00120000
         LA    @F,@SAV001                                         0002  00130000
         ST    @F,8(0,@D)                                         0002  00140000
         LR    @D,@F                                              0002  00150000
*  GEN(USING CHASCT,2);                  /* COMMON AREA MAP           * 00160000
         USING CHASCT,2                                                 00170000
         DS    0H                                                       00180000
*  GENERATE DATA;                                                       00190000
*  DCL R0 REG(0) PTR;                    /* GP REGISTER               * 00200000
*  DCL R1 REG(1) PTR;                    /* GP REGISTER               * 00210000
*  DCL R2 REG(2) PTR;                    /* GP REGISTER               * 00220000
*  DCL R3 REG(3) PTR;                    /* GP REGISTER               * 00230000
*  DCL R4 REG(4) PTR;                    /* GP REGISTER               * 00240000
*  DCL R5 REG(5) PTR;                    /* GP REGISTER               * 00250000
*  DCL R6 REG(6) PTR;                    /* GP REGISTER               * 00260000
*  DCL R7 REG(7) PTR;                    /* GP REGISTER               * 00270000
*  DCL R8 REG(8) PTR;                    /* GP REGISTER               * 00280000
*  DCL R9 REG(9) PTR;                    /* GP REGISTER               * 00290000
*  DCL R10 REG(10) PTR;                  /* GP REGISTER               * 00300000
*  DCL R11 REG(11) PTR;                  /* GP REGISTER               * 00310000
*  DCL R12 REG(12) PTR;                  /* GP REGISTER               * 00320000
*  DCL R13 REG(13) PTR;                  /* GP REGISTER               * 00330000
*  DCL R14 REG(14) PTR;                  /* GP REGISTER               * 00340000
*  DCL R15 REG(15) PTR;                  /* GP REGISTER               * 00350000
*  DCL DEVTBPTR PTR GENERATED;           /* DEVICE TABLE PTR          * 00360000
*  DCL TABLNGTH GENERATED;               /* TABLE SIZE PER DEVICE     * 00370000
*  DCL 1 * CHAR(1) BASED(ADDR(TABLNGTH)+2), /* OLTEP SWITCHES         * 00380000
*         3 * BIT(1),                    /* NA                  XM3338* 00390000
*         3 RESENTB BIT(1),              /* RESIDENT ENTRIES    XM3338* 00400000
*         3 * BIT(4),                                         /*XM0095* 00410000
*         3 FSTEQU BIT(1),               /* FIRST EQU ENTERED   XM0095* 00420000
*         3 * BIT(1);                                         /*XM0095* 00430000
*  DCL MCT GENERATED;                    /* MCT                       * 00440000
*  DCL ROOTPTR PTR BASED(ADDR(MCT)+128); /* IFDOLT00 ADDRESS          * 00450000
*  DCL IFDMSG49 CHAR(1) GENERATED;                                      00460000
*  DCL 1 * BDY(WORD) BASED(ADDR(IFDMSG49)), /* MESSAGE POINTERS       * 00470000
*         2 IFD394 PTR,                  /* MESSAGE ADDRESS           * 00480000
*         2 IFD395 PTR,                  /* MESSAGE ADDRESS           * 00490000
*         2 IFD396 PTR,                  /* MESSAGE ADDRESS           * 00500000
*         2 IFD397 PTR,                  /* MESSAGE ADDRESS           * 00510000
*         2 IFD398 PTR,                  /* MESSAGE ADDRESS           * 00520000
*         2 IFD373 PTR(31),              /* MESSAGE ADDRESS     XM0095* 00530000
*         9 * CHAR(1);                   /* NA                        * 00540000
*  DCL EQUECB FIXED;                     /* CDS EQUATE ECB            * 00550000
*  DCL LSTSLH FIXED;                     /* LAST SLASH                * 00560000
*  DCL L FIXED;                          /* LOW ITEM                  * 00570000
*  DCL H FIXED;                          /* HIGH ITEM                 * 00580000
*  DCL RESTPTR PTR;                      /* RESIDENT TABLE PTR        * 00590000
*  DCL 1 * BDY(WORD) BASED(RESTPTR),     /* RESIDENT TABLE            * 00600000
*         2 RESTAB CHAR(64);             /* CDS RESIDENT TABLE        * 00610000
*  DCL 1 SETWTOR BDY(WORD) CHAR(8),      /* WTOR ADDRESSES            * 00620000
*         2 * PTR INIT(ADDR(RBUF)),      /* REPLY BUFFER              * 00630000
*         2 * PTR INIT(ADDR(EQUECB));    /* EQUATE ECB                * 00640000
*  DCL 1 * BDY(WORD) FIXED INIT(0),      /* ZERO CONSTANT             * 00650000
*         2 KZIP4 CHAR(4),               /* CONSTANT                  * 00660000
*           3 KZIP2 CHAR(2);             /* CONSTANT                  * 00670000
*  DCL 1 * BDY(WORD),                    /* TABLE ADDRESSES           * 00680000
*         2 ADRENT2 PTR,                 /* 2ND WORK TABLE            * 00690000
*         2 ADRENT3 PTR;                 /* 3RD WORK TABLE            * 00700000
*  DCL THIDK FIXED(15);                  /* AVAILABLE CDS             * 00710000
*  DCL 1 * BDY(WORD) BASED(DEVTBPTR),    /* WORK AREA TABLES          * 00720000
*         2 FSTENT12 CHAR(256),          /* 1ST AND 2ND AREAS         * 00730000
*           3 FSTENT1 CHAR(128),         /* 1ST WORK AREA             * 00740000
*           3 FSTENT2 CHAR(128),         /* 2ND WORK AREA             * 00750000
*         2 FSTENT3 CHAR(128),           /* 3RD WORK AREA             * 00760000
*           3 ENDTABS CHAR(1);           /* END WORK TABLES           * 00770000
*  DCL 1 * BDY(WORD) BASED(R3),          /* WORK TABLE                * 00780000
*         2 FSTD FIXED(15),              /* 1ST DEVICE                * 00790000
*         2 SECD FIXED(15),              /* 2ND DEVICE                * 00800000
*         2 THID FIXED(15);              /* 3RD DEVICE                * 00810000
*  DCL 1 * BDY(WORD) BASED(R3),          /* WORK TABLE                * 00820000
*         2 RESLST CHAR(2),              /* LAST DEVICE               * 00830000
*           3 RES1 CHAR(1),              /* 1ST BYTE                  * 00840000
*           3 RES2 CHAR(1);              /* 2ND BYTE                  * 00850000
*  DCL INCR3 CHAR(1) BASED(R3+1);        /* ADD ONE TO REG            * 00860000
*  DCL SETCODS CHAR(4) BASED(R3);        /* END MESSAGE TEXT            00870000
*  DCL WTORADRS CHAR(8) BASED(R4);       /* REPLY AND ECB PTR         * 00880000
*  DCL 1 * BASED(R4+11),                 /* NA                        * 00890000
*         2 MSG3951 CHAR(23),            /* MESSAGE TEXT              * 00900000
*           3 * CHAR(1),                 /* NA                        * 00910000
*           3 MSG395 CHAR(23),           /* MESSAGE TEXT              * 00920000
*               9 * CHAR(1);             /* NA                        * 00930000
*  DCL 1 * BASED(R4),                    /* IFD397 MESSAGE              00940000
*         2 * CHAR(26),                  /* NA                          00950000
*           3 * CHAR(1),                 /* NA                          00960000
*           3 MSGSZ CHAR(1),             /* MESSAGE SIZE                00970000
*         2 INVR CHAR(48),               /* MESSAGE TEXT                00980000
*         2 * CHAR(4),                   /* NA                          00990000
*         2 RTDESC CHAR(4);              /* ROUTCDE AND DESC            01000000
*  DCL 1 SBUF CHAR(4) BASED(R5),         /* SAVE EBCDIC DEVICE        * 01010000
*         2 * CHAR(1),                   /* NA                        * 01020000
*         2 SBUF1 CHAR(3);               /* SAVE EBCDIC DEVICE        * 01030000
*  DCL HEXWD FIXED BDY(WORD) BASED(R7);  /* RESIDENT TABLE WORD       * 01040000
*  DCL ZIPENT2 CHAR(128) BASED(R7);      /* 2ND WORK TABLE            * 01050000
*  DCL 1 * BDY(WORD) BASED(R7),          /* NEW ENTRIES               * 01060000
*         2 DEVLK CHAR(4),               /* COMPLETE ENTRY            * 01070000
*           3 DEVLK1 CHAR(2),            /* 1ST DEVICE                * 01080000
*           3 DEVLK2 CHAR(2),            /* 2ND DEVICE                * 01090000
*         2 NXTLK CHAR(4);               /* NEXT ENTRY                * 01100000
*  DCL R7P1 CHAR(1) BASED(R7+1);         /* NEXT ITEM                 * 01110000
*  DCL 1 * BDY(HWORD) BASED(R7),         /* WORK TABLE                * 01120000
*         2 TB2 CHAR(1),                 /* 1ST BYTE                  * 01130000
*         2 TB2A CHAR(1),                /* 2ND BYTE                  * 01140000
*         2 NXTTB CHAR(1);               /* NEXT BYTES                * 01150000
*  DCL NXTWK CHAR(1) BASED(R7+128);      /* NEXT WORK TABLE           * 01160000
*  DCL 1 * BDY(WORD) BASED(R8),          /* SAVE RESIDENT TABLE       * 01170000
*         2 DEVCOP CHAR(4),              /* COMPLETE ENTRY            * 01180000
*           3 DEV1 CHAR(2),              /* 1ST DEVICE                * 01190000
*           3 DEV2 CHAR(2),              /* 2ND DEVICE                * 01200000
*         2 NXTENT CHAR(8);              /* NEXT ENTRY                * 01210000
*  DCL ABYT CHAR(1) BASED(R8);           /* 1ST ENTRY BYTE            * 01220000
*  DCL 1 * BASED(R8),                    /* EBCDIC RESIDENT           * 01230000
*         2 PDEV1 CHAR(4),               /* 1ST PRINTABLE DEVICE      * 01240000
*         2 PDEV2 CHAR(4),               /* 2ND PRINTABLE DEVICE      * 01250000
*         2 PDEVNXT CHAR(4);             /* NEXT DEVICE               * 01260000
*  DCL KCLRSL CHAR(4) INIT('CLR/');      /* CONSTANT                  * 01270000
*  DCL KENDSL CHAR(4) INIT('END/');      /* CONSTANT                  * 01280000
*  DCL KNONE CHAR(4) INIT('NONE');       /* CONSTANT                  * 01290000
*  DCL KYES CHAR(3) INIT('YES');         /* CONSTANT                  * 01300000
*  DCL KNO CHAR(3) INIT('NO ');          /* CONSTANT                  * 01310000
*  DCL 1 LIST CHAR(16)                   /* HEX CHARACTERS            * 01320000
*         INIT('0123456789ABCDEF'),      /* IN EBCDIC                 * 01330000
*         2 * CHAR(1),                   /* NA                        * 01340000
*         2 LIST1 CHAR(15);              /* NON ZERO ITEMS            * 01350000
*  DCL 1 REP0T81 CHAR(82),               /* REPLY AREA                * 01360000
*         2 REP0T79 CHAR(80),            /* REPLY AREA START          * 01370000
*           3 * CHAR(1) INIT(' '),       /* NA                        * 01380000
*           3 RBUF CHAR(80),             /* REPLY BUFFER              * 01390000
*           3 * CHAR(1) INIT(' ');       /* NA                        * 01400000
*  DCL 1 CHIND CHAR(1),                  /* CHARACTER INDICATOR       * 01410000
*         2 BLKBIT BIT(1),               /* BLANK                     * 01420000
*         2 EQDASCOM BIT(3),             /* EQUAL SIGN DASH COMMA     * 01430000
*           3 EQUBIT BIT(1),             /* EQUAL SIGN                * 01440000
*           3 DASCOM BIT(2),             /* DASH, COMMA               * 01450000
*             4 DASBIT BIT(1),           /* DASH                      * 01460000
*             4 COMBIT BIT(1),           /* COMMA                     * 01470000
*               9 * BIT(1);              /* NA                        * 01480000
*  DCL SBC CHAR(1);                      /* SAVE BUFFER CHAR          * 01490000
*  DCL ACEQSEL CHAR(23)                  /* CONSTANT                  * 01500000
*         INIT('ACTIVE EQUATES SELECTED'); /* TEXT                    * 01510000
*  DCL CESWTR CHAR(1) GENERATED;         /*                     XM3317* 01520000
*  DCL 1 * CHAR(1) BASED(ADDR(CESWTR)),  /*                     XM3317* 01530000
*        3 RETAINAC BIT(1);              /* RETAIN ACTIVE FLAG  XM3317* 01540000
*  DCL CESWTR2 CHAR(1) GENERATED;        /*                     XM3317* 01550000
*  DCL 1 * CHAR(1) BASED(ADDR(CESWTR2)), /* REI SWITCHES        XM3317* 01560000
*        3 * BIT(7),                     /*                     XM3317* 01570000
*        3 DPMSGREI BIT(1);              /* DATA PROT MSG       XM3317* 01580000
*  RESTRICT(2,3,4,5,6,7,8,9);            /* RESTRICT REGS             * 01590000
*  GEN(EJECT);                                                          01600000
         EJECT                                                          01610000
         DS    0H                                                       01620000
*  IF RETAINAC='1'B THEN                 /* IS RETAIN ACTIVE    XM3317* 01630000
         TM    A00030,B'10000000'                                 0072  01640000
         BC    12,@9FF                                            0072  01650000
*    DPMSGREI='1'B;                      /* YES, NO REPLY FROM  XM3317* 01660000
         OI    A00031,B'00000001'                                 0073  01670000
*                                        /* REMOTE              XM3317* 01680000
*  R7=DEVTBPTR;                          /* 1ST WORK TABLE            * 01690000
@9FF     L     @7,DEVTBPTR                                        0074  01700000
*  R7=ADDR(NXTWK);                       /* 2ND WORK TABLE            * 01710000
         LA    @7,128(0,@7)                                       0075  01720000
*  ADRENT2=R7;                           /* STORE ADDRESS             * 01730000
         ST    @7,A00010                                          0076  01740000
*  R7=ADDR(NXTWK);                       /* 3RD WORK TABLE            * 01750000
         LA    @7,128(0,@7)                                       0077  01760000
*  ADRENT3=R7;                           /* STORE ADDRESS             * 01770000
         ST    @7,A00010+4                                        0078  01780000
*  RESTPTR=ROOTPTR+32;                   /* RESIDENT TABLE PTR        * 01790000
         LA    @F,32                                              0079  01800000
         A     @F,ROOTPTR                                         0079  01810000
         ST    @F,RESTPTR                                         0079  01820000
*  IF FSTEQU='0'B THEN                   /* IS THIS FIRST TIME  XM0095* 01830000
         TM    A00000,B'00000010'                                 0080  01840000
         BC    05,@9FE                                            0080  01850000
*    DO;                                 /* EQU ENTERED, YES    XM0095* 01860000
*      FSTEQU='1'B;                      /* SET NOT FIRST TIME  XM0095* 01870000
         OI    A00000,B'00000010'                                 0082  01880000
*      R4=IFD373;                        /* SET MSG IFD373I FOR XM0095* 01890000
         L     @4,A00004+20                                       0083  01900000
*      GEN(BAL   R9,CDS140);             /* WARNING MESSAGE     XM0095* 01910000
         BAL   R9,CDS140                                                01920000
         DS    0H                                                       01930000
*    END;                                /* NO                  XM0095* 01940000
* CDS010:                                /* LABEL                     * 01950000
*  GEN(BAL   R9,CDS212);                 /* ZERO WORK TABLES          * 01960000
@9FE     EQU   *                                                  0086  01970000
CDS010   BAL   R9,CDS212                                                01980000
         DS    0H                                                       01990000
*  R4=DEVTBPTR;                          /* WORK AREA ADDRESS         * 02000000
         L     @4,DEVTBPTR                                        0087  02010000
*  R4->FSTENT3(1:64)=RESTAB;             /* SAVE RESIDENT TABLE       * 02020000
         L     @C,RESTPTR                                         0088  02030000
         MVC   256(64,@4),0(@C)                                   0088  02040000
*  R4=IFD394;                            /* REPLY EQU, CLR OR END     * 02050000
         L     @4,A00004                                          0089  02060000
*  GEN(BAL   R9,CDS170);                 /* ISSUE WTOR                * 02070000
         BAL   R9,CDS170                                                02080000
         DS    0H                                                       02090000
* CDS022:                                /* LABEL                     * 02100000
*  DO R3=80 TO 1 BY -1;                  /* SCAN REPLY BUFFER         * 02110000
CDS022   LA    @3,80                                              0091  02120000
*    IF RBUF(R3)¬=' ' THEN               /* TEST FOR END REPLY        * 02130000
@DO9FD   LR    @C,@3                                              0092  02140000
         LA    @A,REP0T81(@C)                                     0092  02150000
         CLI   0(@A),C' '                                         0092  02160000
*      GOTO CDS023;                      /* LAST NON-BLANK            * 02170000
         BC    07,CDS023                                          0093  02180000
*  END;                                  /* END SCANNING              * 02190000
* CDS023:                                /* LABEL                     * 02200000
*  R3=R3+1;                              /* LAST SLASH ITEM           * 02210000
         BCT   @3,@DO9FD                                          0094  02220000
CDS023   AH    @3,@D1                                             0095  02230000
*  RBUF(R3)='/';                         /* END OF LAST ENTRY         * 02240000
         LR    @C,@3                                              0096  02250000
         LA    @A,REP0T81(@C)                                     0096  02260000
         MVI   0(@A),C'/'                                         0096  02270000
*  LSTSLH=R3;                            /* LAST SLASH                * 02280000
         ST    @3,LSTSLH                                          0097  02290000
* CDS028:                                /* LABEL                     * 02300000
*  L=1;                                  /* 1ST REPLY ITEM            * 02310000
CDS028   LA    @F,1                                               0098  02320000
         ST    @F,L                                               0098  02330000
*  GOTO CDS034;                          /* CHECK 1ST ENTRY           * 02340000
         BC    15,CDS034                                          0099  02350000
* CDS030:                                /* LABEL                     * 02360000
*  GEN(BAL   R9,CDS210);                 /* ZERO TABLE                * 02370000
CDS030   BAL   R9,CDS210                                                02380000
         DS    0H                                                       02390000
* CDS031:                                /* LABEL                     * 02400000
*  GEN(BAL   R9,CDS216);                 /* ZERO WORK TABLES          * 02410000
CDS031   BAL   R9,CDS216                                                02420000
         DS    0H                                                       02430000
*  GEN(BAL   R9,CDS160);                 /* WORK TO RESIDENT          * 02440000
         BAL   R9,CDS160                                                02450000
         DS    0H                                                       02460000
* CDS032:                                /* LABEL                     * 02470000
*  L=H+2;                                /* START OF ENTRY            * 02480000
CDS032   LA    @F,2                                               0103  02490000
         A     @F,H                                               0103  02500000
         ST    @F,L                                               0103  02510000
* CDS034:                                /* LABEL                     * 02520000
*  CHIND='00'X;                          /* CLEAR INDICATORS          * 02530000
CDS034   MVI   CHIND,X'00'                                        0104  02540000
*  H=0;                                  /* END OF ENTRY              * 02550000
         SR    @F,@F                                              0105  02560000
         ST    @F,H                                               0105  02570000
*  DO R3=L TO LSTSLH BY 1;               /* SEARCH ENTRY              * 02580000
         L     @3,L                                               0106  02590000
         BC    15,@DO9F8                                          0106  02600000
*    IF RBUF(R3)=' ' THEN                /* TEST FOR BLANK            * 02610000
@DO9F9   LR    @C,@3                                              0107  02620000
         LA    @A,REP0T81(@C)                                     0107  02630000
         CLI   0(@A),C' '                                         0107  02640000
         BC    07,@9F5                                            0107  02650000
*      BLKBIT='1'B;                      /* BLANK FOUND               * 02660000
         OI    CHIND,B'10000000'                                  0108  02670000
*    IF RBUF(R3)='/' THEN                /* TEST FOR SLASH            * 02680000
@9F5     LA    @A,REP0T81(@C)                                     0109  02690000
         CLI   0(@A),C'/'                                         0109  02700000
*      GOTO CDS040;                      /* END OF ENTRY              * 02710000
         BC    08,CDS040                                          0110  02720000
*    H=R3;                               /* LAST ENTRY                * 02730000
         ST    @3,H                                               0111  02740000
*  END;                                  /* END ENTRY SEARCH          * 02750000
*  GOTO CDS010;                          /* END OF REPLY              * 02760000
         AH    @3,@D1                                             0112  02770000
@DO9F8   C     @3,LSTSLH                                          0112  02780000
         BC    12,@DO9F9                                          0112  02790000
         BC    15,CDS010                                          0113  02800000
* CDS040:                                /* LABEL                     * 02810000
*  IF H=0 THEN                           /* CHECK ENTRY               * 02820000
CDS040   SR    @F,@F                                              0114  02830000
         C     @F,H                                               0114  02840000
         BC    07,@9F4                                            0114  02850000
*    DO;                                 /* NO ENTRY ITEM             * 02860000
* CDS042:                                /* LABEL                     * 02870000
*      L=ADDR(INCR3);                    /* START OF NEXT ENTRY       * 02880000
CDS042   LA    @F,1(0,@3)                                         0116  02890000
         ST    @F,L                                               0116  02900000
*      GOTO CDS034;                      /* SCAN ENTRY                * 02910000
         BC    15,CDS034                                          0117  02920000
*    END;                                /* END ENTRY CHECK           * 02930000
*  IF RBUF(L:L+3)=KCLRSL THEN            /* CHECK REPLY               * 02940000
@9F4     L     @C,L                                               0119  02950000
         LA    @A,REP0T81(@C)                                     0119  02960000
         CLC   0(4,@A),KCLRSL                                     0119  02970000
*    GOTO CDS030;                        /* CLEAR RESIDENT TABLE      * 02980000
         BC    08,CDS030                                          0120  02990000
*  IF RBUF(L:L+3)=KENDSL THEN            /* CHECK REPLY               * 03000000
         CLC   0(4,@A),KENDSL                                     0121  03010000
*    GOTO CDS180;                        /* END ENTRIES               * 03020000
         BC    08,CDS180                                          0122  03030000
*  IF BLKBIT='1'B THEN                   /* CHECK INDICATOR           * 03040000
         TM    CHIND,B'10000000'                                  0123  03050000
*    GOTO CDS130;                        /* ENBEDDED BLANK            * 03060000
         BC    01,CDS130                                          0124  03070000
*  R5=ADRENT3;                           /* END 2ND WORK TABLE        * 03080000
         L     @5,A00010+4                                        0125  03090000
*  GEN(BAL   R6,CDS066);                 /* SET UP WORK TABLE         * 03100000
         BAL   R6,CDS066                                                03110000
         DS    0H                                                       03120000
*  DO R3=H TO L BY -1;                   /* SCAN ENTRY                * 03130000
         L     @3,H                                               0127  03140000
         BC    15,@DO9F2                                          0127  03150000
*    SBC=RBUF(R3);                       /* SAVE BUFFER CHAR          * 03160000
@DO9F3   LR    @C,@3                                              0128  03170000
         LA    @E,REP0T81(@C)                                     0128  03180000
         MVC   SBC(1),0(@E)                                       0128  03190000
*    DO R6=16 TO 1 BY -1;                /* SCAN EBCDIC LIST          * 03200000
         LA    @6,16                                              0129  03210000
*      IF SBC=LIST(R6) THEN              /* CHECK ENTRY ITEM          * 03220000
@DO9EF   LR    @C,@6                                              0130  03230000
         LA    @E,LIST-1(@C)                                      0130  03240000
         CLC   SBC(1),0(@E)                                       0130  03250000
         BC    07,@9EB                                            0130  03260000
*        DO;                             /* ITEM IN LIST              * 03270000
*          IF R4=0 THEN                  /* TEST DEVICE ADDRESS       * 03280000
         LTR   @4,@4                                              0132  03290000
*            GOTO CDS130;                /* TOO MANY CHARACTERS       * 03300000
         BC    08,CDS130                                          0133  03310000
*          SBUF(R4)=SBC;                 /* SAVE ITEM                 * 03320000
         LR    @C,@4                                              0134  03330000
         LA    @A,0(@C,@5)                                        0134  03340000
         BCTR  @A,0                                               0134  03350000
         MVC   0(1,@A),SBC                                        0134  03360000
*          R4=R4-1;                      /* COUNT OF ITEMS            * 03370000
         BCTR  @4,0                                               0135  03380000
*          GOTO CDS068;                  /* TEST NEXT ITEM            * 03390000
         BC    15,CDS068                                          0136  03400000
*        END;                            /* END SAVING ITEM           * 03410000
*    END;                                /* END SCANNING LIST         * 03420000
*    IF SBUF(2)='00'X THEN               /* TEST DEVICE ADDRESS       * 03430000
@9EB     BCT   @6,@DO9EF                                          0138  03440000
         CLI   1(@5),X'00'                                        0139  03450000
*      GOTO CDS130;                      /* TOO FEW CHARACTERS        * 03460000
         BC    08,CDS130                                          0140  03470000
*    IF SBC='=' THEN                     /* CHECK ENTRY ITEM          * 03480000
         CLI   SBC,C'='                                           0141  03490000
         BC    07,@9EA                                            0141  03500000
*      DO;                               /* SPECIAL CHARACTER         * 03510000
*        IF EQDASCOM¬='000'B THEN        /* TEST FOR SPECIALS         * 03520000
         TM    CHIND,B'01110000'                                  0143  03530000
*          GOTO CDS130;                  /* NOT FIRST SPECIAL         * 03540000
         BC    05,CDS130                                          0144  03550000
*        EQUBIT='1'B;                    /* INDICATE EQUAL SIGN       * 03560000
         OI    CHIND,B'01000000'                                  0145  03570000
*        GOTO CDS064;                    /* NEXT DEVICE               * 03580000
         BC    15,CDS064                                          0146  03590000
*      END;                              /* END EQUAL SIGN TEST       * 03600000
*    IF EQUBIT='0'B THEN                 /* TEST INDICATOR            * 03610000
@9EA     TM    CHIND,B'01000000'                                  0148  03620000
*      GOTO CDS130;                      /* NO EQUAL SIGN             * 03630000
         BC    08,CDS130                                          0149  03640000
*    IF SBC='-' THEN                     /* CHECK ENTRY ITEM          * 03650000
         CLI   SBC,C'-'                                           0150  03660000
         BC    07,@9E9                                            0150  03670000
*      DO;                               /* DASH FOUND                * 03680000
*        IF DASCOM¬='00'B THEN           /* TEST INDICATORS           * 03690000
         TM    CHIND,B'00110000'                                  0152  03700000
*          GOTO CDS130;                  /* PREVIOUS DASH/COMMA       * 03710000
         BC    05,CDS130                                          0153  03720000
*        DASBIT='1'B;                    /* INDICATE DASH             * 03730000
         OI    CHIND,B'00100000'                                  0154  03740000
*        GOTO CDS064;                    /* NEXT DEVICE               * 03750000
         BC    15,CDS064                                          0155  03760000
*      END;                              /* END DASH TEST             * 03770000
*    IF SBC¬=',' THEN                    /* CHECK ENTRY ITEM          * 03780000
@9E9     CLI   SBC,C','                                           0157  03790000
*      GOTO CDS130;                      /* COMMA NOT FOUND           * 03800000
         BC    07,CDS130                                          0158  03810000
*    COMBIT='1'B;                        /* INDICATE COMMA            * 03820000
         OI    CHIND,B'00010000'                                  0159  03830000
*    IF DASBIT='1'B THEN                 /* TEST INDICATOR            * 03840000
         TM    CHIND,B'00100000'                                  0160  03850000
*      GOTO CDS130;                      /* PREVIOUS DASH             * 03860000
         BC    01,CDS130                                          0161  03870000
* CDS064:                                /* LABEL                     * 03880000
*    R6=ADDR(CDS068);                    /* RESUME ADDRESS            * 03890000
CDS064   LA    @6,CDS068                                          0162  03900000
* CDS066:                                /* LABEL                     * 03910000
*    R4=4;                               /* MAXIMUM DEVICE ITEM       * 03920000
CDS066   LA    @4,4                                               0163  03930000
*    R5=R5-R4;                           /* NEXT SAVE WORD            * 03940000
         SR    @5,@4                                              0164  03950000
*    SBUF(1)='0';                        /* SET UP WORD               * 03960000
         MVI   0(@5),C'0'                                         0165  03970000
*    GOTO R6;                            /* RESUME                    * 03980000
         BCR   15,@6                                              0166  03990000
* CDS068:                                /* LABEL                     * 04000000
*  END;                                  /* END SCANNING ENTRY        * 04010000
*  IF EQUBIT='0'B THEN                   /* TEST INDICATOR            * 04020000
CDS068   BCTR  @3,0                                               0167  04030000
@DO9F2   C     @3,L                                               0167  04040000
         BC    10,@DO9F3                                          0167  04050000
         TM    CHIND,B'01000000'                                  0168  04060000
*    GOTO CDS130;                        /* NO EQUAL SIGN             * 04070000
         BC    08,CDS130                                          0169  04080000
*  IF SBUF(2)='00'X THEN                 /* TEST DEVICE ADDRESS       * 04090000
         CLI   1(@5),X'00'                                        0170  04100000
*    GOTO CDS130;                        /* TOO FEW CHARACTERS        * 04110000
         BC    08,CDS130                                          0171  04120000
*  R7=ADRENT3;                           /* END 2ND WORK TABLE        * 04130000
         L     @7,A00010+4                                        0172  04140000
*  IF DASBIT='0'B THEN                   /* TEST INDICATOR            * 04150000
         TM    CHIND,B'00100000'                                  0173  04160000
*    GOTO CDS080;                        /* NO DASH BIT               * 04170000
         BC    08,CDS080                                          0174  04180000
*  R5=12;                                /* BYTES TO CONVERT          * 04190000
         LA    @5,12                                              0175  04200000
*  R7=R7-R5;                             /* CONTAIN EBCDIC            * 04210000
         SR    @7,@5                                              0176  04220000
*  GEN(BAL   R9,CDS120);                 /* EBCDIC TO HEX             * 04230000
         BAL   R9,CDS120                                                04240000
         DS    0H                                                       04250000
* CDS069:                                /* LABEL                     * 04260000
*  R3=DEVTBPTR;                          /* 1ST WORK AREA             * 04270000
CDS069   L     @3,DEVTBPTR                                        0178  04280000
*  R5=FSTD;                              /* 1ST DEVICE                * 04290000
         LH    @5,0(0,@3)                                         0179  04300000
*  R4=SECD;                              /* 2ND DEVICE                * 04310000
         LH    @4,2(0,@3)                                         0180  04320000
*  R6=R4-R5;                             /* DEVICE RANGE              * 04330000
         LCR   @6,@5                                              0181  04340000
         AR    @6,@4                                              0181  04350000
*  IF R6<0 THEN                          /* CHECK SEQUENCE            * 04360000
         LTR   @6,@6                                              0182  04370000
*    GOTO CDS130;                        /* DECREASING ORDER          * 04380000
         BC    04,CDS130                                          0183  04390000
*  IF R6¬<16 THEN                        /* CHECK DEVICES             * 04400000
         CH    @6,@D2                                             0184  04410000
*    GOTO CDS130;                        /* EXCEEDS MAX DEVICES       * 04420000
         BC    10,CDS130                                          0185  04430000
         BC    15,@DO9E7                                          0186  04440000
*  DO R5=R5 TO R4 BY 1;                  /* DEVICE RANGE              * 04450000
@DO9E8   EQU   *                                                  0186  04460000
*    GEN(STH   R5,0(R7));                /* REAL DEVICE               * 04470000
         STH   R5,0(R7)                                                 04480000
         DS    0H                                                       04490000
*    DEVLK2=THIDK;                       /* CDS DEVICE                * 04500000
         MVC   2(2,@7),THIDK                                      0188  04510000
*    R7=ADDR(NXTLK);                     /* NEXT EQUATE               * 04520000
         LA    @7,4(0,@7)                                         0189  04530000
*  END;                                  /* END DEVICE RANGE          * 04540000
*  GOTO CDS070;                          /* CHECK RESIDENT AREA       * 04550000
         AH    @5,@D1                                             0190  04560000
@DO9E7   CR    @5,@4                                              0190  04570000
         BC    12,@DO9E8                                          0190  04580000
* CDS070:                                /* LABEL                     * 04590000
*  R7=ADRENT2;                           /* NEW ENTRIES IN HEX        * 04600000
CDS070   L     @7,A00010                                          0192  04610000
* CDS072:                                /* LABEL                     * 04620000
*  R8=ADRENT3;                           /* RESIDENT AREA SAVED       * 04630000
CDS072   L     @8,A00010+4                                        0193  04640000
*  IF DEVLK=KZIP4 THEN                   /* CHECK NEW ENTRY           * 04650000
         CLC   0(4,@7),A00009                                     0194  04660000
*    GOTO CDS031;                        /* NO MORE ENTRIES           * 04670000
         BC    08,CDS031                                          0195  04680000
*  R5=0;                                 /* NO RESIDENT ADDRESS       * 04690000
         SR    @5,@5                                              0196  04700000
*  DO R3=16 TO 1 BY -1;                  /* RESIDENT ENTRIES          * 04710000
         LA    @3,16                                              0197  04720000
*    IF DEV1=DEVLK1 THEN                 /* CHECK REAL DEVICE         * 04730000
@DO9E4   CLC   0(2,@8),0(@7)                                      0198  04740000
*      GOTO CDS074;                      /* ITS IN RESIDENT AREA      * 04750000
         BC    08,CDS074                                          0199  04760000
*    IF DEVCOP=KZIP4&                    /* RESIDENT AREA UNUSED      * 04770000
*      R5=0 THEN                         /* NO PREVIOUS AREA          * 04780000
         CLC   0(4,@8),A00009                                     0200  04790000
         BC    07,@9E0                                            0200  04800000
         LTR   @5,@5                                              0200  04810000
         BC    07,@9DF                                            0200  04820000
*        R5=R8;                          /* SAVE OPEN AREA            * 04830000
         LR    @5,@8                                              0201  04840000
*    R8=ADDR(NXTENT);                    /* NEXT RESIDENT ITEM        * 04850000
@9DF     EQU   *                                                  0202  04860000
@9E0     LA    @8,4(0,@8)                                         0202  04870000
*  END;                                  /* END RESIDENT PASS         * 04880000
*  R8=R5;                                /* LOAD ADDRESS              * 04890000
         BCT   @3,@DO9E4                                          0203  04900000
         LR    @8,@5                                              0204  04910000
*  IF R8=0 THEN                          /* CHECK VALUE               * 04920000
         LTR   @8,@8                                              0205  04930000
*    GOTO CDS176;                        /* RESIDENT TABLE FULL       * 04940000
         BC    08,CDS176                                          0206  04950000
* CDS074:                                /* LABEL                     * 04960000
*  IF DEVLK1=DEVLK2 THEN                 /* CHECK DEVICE              * 04970000
CDS074   CLC   0(2,@7),2(@7)                                      0207  04980000
         BC    07,@9DE                                            0207  04990000
*    DEVLK=DEVLK&&DEVLK;                 /* DEVICES THE SAME          * 05000000
         XC    0(4,@7),0(@7)                                      0208  05010000
*  DEVCOP=DEVLK;                         /* UPDATE RESIDENT AREA      * 05020000
@9DE     MVC   0(4,@8),0(@7)                                      0209  05030000
*  R7=ADDR(NXTLK);                       /* NEXT ENTRY                * 05040000
         LA    @7,4(0,@7)                                         0210  05050000
*  GOTO CDS072;                          /* REPEAT SEARCH             * 05060000
         BC    15,CDS072                                          0211  05070000
* CDS080:                                /* LABEL                     * 05080000
*  R5=0;                                 /* ZERO BYTE COUNT           * 05090000
CDS080   SR    @5,@5                                              0212  05100000
* CDS082:                                /* LABEL                     * 05110000
*  R7=R7-4;                              /* NEXT DEVICE ENTRY         * 05120000
CDS082   SH    @7,@D3                                             0213  05130000
*  IF R7P1='00'X THEN                    /* CHECK ENTRY               * 05140000
         CLI   1(@7),X'00'                                        0214  05150000
*    GOTO CDS084;                        /* NO MORE ENTRIES           * 05160000
         BC    08,CDS084                                          0215  05170000
*  R5=R5+4;                              /* BYTES TO CONVERT          * 05180000
         AH    @5,@D3                                             0216  05190000
*  GOTO CDS082;                          /* SEARCH FOR ENTRY          * 05200000
         BC    15,CDS082                                          0217  05210000
* CDS084:                                /* LABEL                     * 05220000
*  R7=R7+4;                              /* 1ST ENTRY IN EBCDIC       * 05230000
CDS084   AH    @7,@D3                                             0218  05240000
*  GEN(BAL   R9,CDS120);                 /* EBCDIC TO HEX             * 05250000
         BAL   R9,CDS120                                                05260000
         DS    0H                                                       05270000
*  R8=DEVTBPTR;                          /* 1ST WORK TABLE            * 05280000
         L     @8,DEVTBPTR                                        0220  05290000
* CDS086:                                /* LABEL                     * 05300000
*  IF DEV1=KZIP2 THEN                    /* CHECK NEW ENTRY           * 05310000
CDS086   CLC   0(2,@8),A00009                                     0221  05320000
*    GOTO CDS070;                        /* NO ENTRY LEFT             * 05330000
         BC    08,CDS070                                          0222  05340000
*  DEVLK1=DEV1;                          /* REAL DEVICE EQUATED       * 05350000
         MVC   0(2,@7),0(@8)                                      0223  05360000
*  DEVLK2=THIDK;                         /* CDS DEVICE EQUATE         * 05370000
         MVC   2(2,@7),THIDK                                      0224  05380000
*  R8=ADDR(DEV2);                        /* NEXT DEVICE               * 05390000
         LA    @8,2(0,@8)                                         0225  05400000
*  R7=ADDR(NXTLK);                       /* NEXT EQUATE               * 05410000
         LA    @7,4(0,@7)                                         0226  05420000
*  GOTO CDS086;                          /* CHECK                     * 05430000
         BC    15,CDS086                                          0227  05440000
*  GEN(EJECT);                                                          05450000
         EJECT                                                          05460000
         DS    0H                                                       05470000
* /******************************************************************** 05480000
* /* HEX TO EBCDIC CONVERSION                                         * 05490000
* /******************************************************************** 05500000
* CDS110:                                /* LABEL                     * 05510000
*  DO R6=16 TO 1 BY -1;                  /* SCAN TABLE ENTRIES        * 05520000
CDS110   LA    @6,16                                              0229  05530000
*    R5=HEXWD;                           /* WORD TO CONVERT           * 05540000
@DO9DD   L     @5,0(0,@7)                                         0230  05550000
*    IF R5=0 THEN                        /* CHECK WORD                * 05560000
         LTR   @5,@5                                              0231  05570000
*      GOTO R9;                          /* NO ENTRY                  * 05580000
         BCR   08,@9                                              0232  05590000
*    DO R3=8 TO 1 BY -1;                 /* HEX IN WORD               * 05600000
         LA    @3,8                                               0233  05610000
*      R4=0;                             /* ZERO WORK REG             * 05620000
@DO9D9   SR    @4,@4                                              0234  05630000
*      GEN(SLDL  R4,4);                  /* LOAD HEX CHARACTER        * 05640000
         SLDL  R4,4                                                     05650000
         DS    0H                                                       05660000
*      GEN(IC    R4,LIST(R4));           /* HEX VALUE IN EBCDIC       * 05670000
         IC    R4,LIST(R4)                                              05680000
         DS    0H                                                       05690000
*      GEN(STC   R4,0(R8));              /* STORE EBCDIC VALUE        * 05700000
         STC   R4,0(R8)                                                 05710000
         DS    0H                                                       05720000
*      R8=R8+1;                          /* NEXT STORAGE AREA         * 05730000
         AH    @8,@D1                                             0238  05740000
*    END;                                /* END HEX IN WORD           * 05750000
*    R7=ADDR(NXTLK);                     /* NEXT WORD                 * 05760000
         BCT   @3,@DO9D9                                          0239  05770000
         LA    @7,4(0,@7)                                         0240  05780000
*  END;                                  /* END TABLE SCANNING        * 05790000
*  GOTO R9;                              /* RETURN TO MAIN FLOW       * 05800000
         BCT   @6,@DO9DD                                          0241  05810000
         BCR   15,@9                                              0242  05820000
* /******************************************************************** 05830000
* /* EBCDIC TO HEX CONVERTION                                         * 05840000
* /******************************************************************** 05850000
* CDS120:                                /* LABEL                     * 05860000
*  R3=DEVTBPTR;                          /* 1ST WORK TABLE            * 05870000
CDS120   L     @3,DEVTBPTR                                        0243  05880000
*  DO R5=R5/2 TO 1 BY -1;                /* BYTES TO CONVERT          * 05890000
         LR    @F,@5                                              0244  05900000
         SRA   @F,1                                               0244  05910000
         LTR   @5,@F                                              0244  05920000
         BC    12,@DO9D4                                          0244  05930000
*    R4=0;                               /* ZERO HEX VALUE            * 05940000
@DO9D5   SR    @4,@4                                              0245  05950000
*    DO R6=15 TO 1 BY -1;                /* CONVERSION LIST           * 05960000
         LA    @6,15                                              0246  05970000
*      IF TB2=LIST1(R6) THEN             /* CHECK ODD BYTE            * 05980000
@DO9D1   LR    @C,@6                                              0247  05990000
         LA    @E,LIST(@C)                                        0247  06000000
         CLC   0(1,@7),0(@E)                                      0247  06010000
         BC    07,@9CD                                            0247  06020000
*        R4=R4|R6*16;                    /* HEX VALUE FOUND           * 06030000
         LR    @F,@6                                              0248  06040000
         SLA   @F,4                                               0248  06050000
         OR    @4,@F                                              0248  06060000
*      IF TB2A=LIST1(R6) THEN            /* CHECK EVEN BYTE           * 06070000
@9CD     LA    @E,LIST(@C)                                        0249  06080000
         CLC   1(1,@7),0(@E)                                      0249  06090000
         BC    07,@9CC                                            0249  06100000
*        R4=R4|R6;                       /* HEX VALUE FOUND           * 06110000
         OR    @4,@6                                              0250  06120000
*    END;                                /* END CONVERSION LIST       * 06130000
*    GEN(STC   R4,0(R3));                /* STORE HEX VALUE           * 06140000
@9CC     BCT   @6,@DO9D1                                          0251  06150000
         STC   R4,0(R3)                                                 06160000
         DS    0H                                                       06170000
*    R3=ADDR(RES2);                      /* NEXT HEX STORE AREA       * 06180000
         LA    @3,1(0,@3)                                         0253  06190000
*    R7=ADDR(NXTTB);                     /* NEXT EBCDIC ITEM          * 06200000
         LA    @7,2(0,@7)                                         0254  06210000
*  END;                                  /* END CONVERSION            * 06220000
*  R3=R3-2;                              /* LAST HEX AREA             * 06230000
         BCT   @5,@DO9D5                                          0255  06240000
@DO9D4   SH    @3,@D4                                             0256  06250000
*  THIDK=RESLST;                         /* LAST HEX DEVICE           * 06260000
         MVC   THIDK(2),0(@3)                                     0257  06270000
*  RESLST=RESLST&&RESLST;                /* ZERO OUT DEVICE           * 06280000
         XC    0(2,@3),0(@3)                                      0258  06290000
*  R7=ADRENT2;                           /* TO HOLD HEX EQUATES       * 06300000
         L     @7,A00010                                          0259  06310000
*  ZIPENT2=ZIPENT2&&ZIPENT2;             /* ZERO TABLE OUT            * 06320000
         XC    0(128,@7),0(@7)                                    0260  06330000
*  GOTO R9;                              /* RETURN TO MAIN FLOW       * 06340000
         BCR   15,@9                                              0261  06350000
*  GEN(EJECT);                                                          06360000
         EJECT                                                          06370000
         DS    0H                                                       06380000
* /******************************************************************** 06390000
* /* INVALID ENTRY MESSAGE                                            * 06400000
* /******************************************************************** 06410000
* CDS130:                                /* LABEL                     * 06420000
*  R4=IFD397;                            /* WTO ADDRESS               * 06430000
CDS130   L     @4,A00004+12                                       0263  06440000
*  R3=H-L+27;                            /* VARIABLE REPLY SIZE         06450000
         LA    @3,27                                              0264  06460000
         S     @3,L                                               0264  06470000
         A     @3,H                                               0264  06480000
*  IF R3>74 THEN                         /* CHECK REPLY SIZE            06490000
         CH    @3,@D5                                             0265  06500000
         BC    12,@9CB                                            0265  06510000
*    R3=74;                              /* MAX SIZE                    06520000
         LA    @3,74                                              0266  06530000
*  INVR(1:48)=RBUF(L:L+47);              /* INVALID REPLY TEXT          06540000
@9CB     L     @C,L                                               0267  06550000
         LA    @E,REP0T81(@C)                                     0267  06560000
         MVC   26(48,@4),0(@E)                                    0267  06570000
*  GEN(STC   R3,1(R4));                  /* MESSAGE SIZE TO WTO       * 06580000
         STC   R3,1(R4)                                                 06590000
         DS    0H                                                       06600000
*  R3=R3+R4;                             /* END OF MESSAGE              06610000
         AR    @3,@4                                              0269  06620000
*  SETCODS=RTDESC;                       /* ROUTCDE, DESC CODES         06630000
         MVC   0(4,@3),78(@4)                                     0270  06640000
*  GEN(BAL   R9,CDS140);                 /* ISSUE WTO                 * 06650000
         BAL   R9,CDS140                                                06660000
         DS    0H                                                       06670000
*  GOTO CDS010;                          /* REQUEST ENTRY             * 06680000
         BC    15,CDS010                                          0272  06690000
* CDS140:                                /* LABEL                     * 06700000
*  R1=R4;                                /* WTO ADDRESS               * 06710000
CDS140   LR    @1,@4                                              0273  06720000
*  GEN(PWTO  REG=(1));                   /* ISSUE WTO                 * 06730000
         PWTO  REG=(1)                                                  06740000
         DS    0H                                                       06750000
*  GOTO R9;                              /* RETURN TO MAIN FLOW       * 06760000
         BCR   15,@9                                              0275  06770000
* CDS160:                                /* LABEL                     * 06780000
*  R7=RESTPTR;                           /* RESIDENT TABLE            * 06790000
CDS160   L     @7,RESTPTR                                         0276  06800000
*  R7->RESTAB=R7->RESTAB&&R7->RESTAB;    /* ZERO RESIDENT TABLE       * 06810000
         XC    0(64,@7),0(@7)                                     0277  06820000
*  R8=ADRENT3;                           /* RESIDENT AREA SAVED       * 06830000
         L     @8,A00010+4                                        0278  06840000
*  DO R4=16 TO 1 BY -1;                  /* ITEMS TO CHECK            * 06850000
         LA    @4,16                                              0279  06860000
*    IF DEV1=KZIP2 THEN                  /* CHECK DEVICE ENTRY        * 06870000
@DO9CA   CLC   0(2,@8),A00009                                     0280  06880000
*     GOTO CDS162;                       /* NO ENTRY                  * 06890000
         BC    08,CDS162                                          0281  06900000
*    DEVLK=DEVCOP;                       /* ENTRY TO RESIDENT         * 06910000
         MVC   0(4,@7),0(@8)                                      0282  06920000
*    R7=ADDR(NXTLK);                     /* NEXT RESIDENT AREA        * 06930000
         LA    @7,4(0,@7)                                         0283  06940000
* CDS162:                                /* LABEL                     * 06950000
*    R8=ADDR(NXTENT);                    /* NEXT ITEM TO CHECK        * 06960000
CDS162   LA    @8,4(0,@8)                                         0284  06970000
*  END;                                  /* END ITEM CHECKING         * 06980000
*  GOTO R9;                              /* RETURN TO MAIN FLOW       * 06990000
         BCT   @4,@DO9CA                                          0285  07000000
         BCR   15,@9                                              0286  07010000
* CDS210:                                /* LABEL                     * 07020000
*  RESTAB=RESTAB&&RESTAB;                /* ZERO RESIDENT TABLE       * 07030000
CDS210   L     @C,RESTPTR                                         0287  07040000
         XC    0(64,@C),0(@C)                                     0287  07050000
* CDS212:                                /* LABEL                     * 07060000
*  FSTENT3=FSTENT3&&FSTENT3;             /* ZERO WORK TABLE           * 07070000
CDS212   L     @C,DEVTBPTR                                        0288  07080000
         XC    256(128,@C),256(@C)                                0288  07090000
* CDS216:                                /* LABEL                     * 07100000
*  FSTENT12=FSTENT12&&FSTENT12;          /* ZERO WORK AREA            * 07110000
CDS216   L     @C,DEVTBPTR                                        0289  07120000
         XC    0(256,@C),0(@C)                                    0289  07130000
*  GOTO R9;                              /* RETURN TO MAIN FLOW       * 07140000
         BCR   15,@9                                              0290  07150000
*  GEN(EJECT);                                                          07160000
         EJECT                                                          07170000
         DS    0H                                                       07180000
* /******************************************************************** 07190000
* /* ENTER DEV EQUATES/END/CLR                                        * 07200000
* /******************************************************************** 07210000
* CDS170:                                /* LABEL                     * 07220000
*  EQUECB=0;                             /* ZERO OUT ECB              * 07230000
CDS170   SR    @F,@F                                              0292  07240000
         ST    @F,EQUECB                                          0292  07250000
*  RBUF=REP0T79;                         /* CLEAR REPLY BUFFER        * 07260000
         MVC   REP0T81+1(80),REP0T81                              0293  07270000
*  R1=R4;                                /* WTOR ADDRESS              * 07280000
         LR    @1,@4                                              0294  07290000
*  WTORADRS(2:8)=SETWTOR(2:8);           /* UPDATE WTOR               * 07300000
         MVC   1(7,@4),SETWTOR+1                                  0295  07310000
*  GEN(PWTOR  REG=(1));                  /* ISSUE WTOR ADDRESSES      * 07320000
         PWTOR  REG=(1)                                                 07330000
         DS    0H                                                       07340000
*  GOTO R9;                              /* RETURN TO MAIN FLOW       * 07350000
         BCR   15,@9                                              0297  07360000
* CDS176:                                /* LABEL                     * 07370000
*  R4=IFD398;                            /* EXCEEDS MAXIMUM           * 07380000
CDS176   L     @4,A00004+16                                       0298  07390000
*  GEN(BAL   R9,CDS140);                 /* ISSUE WTO                 * 07400000
         BAL   R9,CDS140                                                07410000
         DS    0H                                                       07420000
*  GEN(BAL   R9,CDS216);                 /* ZERO WORK TABLES          * 07430000
         BAL   R9,CDS216                                                07440000
         DS    0H                                                       07450000
*  GEN(BAL   R9,CDS160);                 /* WORK TO RESIDENT          * 07460000
         BAL   R9,CDS160                                                07470000
         DS    0H                                                       07480000
*  GOTO CDS180;                          /* OUTPUT EQUATES            * 07490000
* /******************************************************************** 07500000
* /* WORK TABLE TO RESIDENT TABLE                                     * 07510000
* /******************************************************************** 07520000
* CDS180:                                /* LABEL                     * 07530000
*  R8=DEVTBPTR;                          /* 1ST WORK TABLE            * 07540000
CDS180   L     @8,DEVTBPTR                                        0303  07550000
*  R7=RESTPTR;                           /* RESIDENT TABLE PTR        * 07560000
         L     @7,RESTPTR                                         0304  07570000
*  GEN(BAL   R9,CDS110);                 /* HEX TO EBCDIC             * 07580000
         BAL   R9,CDS110                                                07590000
         DS    0H                                                       07600000
*  R4=IFD395;                            /* MESSAGE ADDRESS           * 07610000
         L     @4,A00004+4                                        0306  07620000
*  MSG395=ACEQSEL;                       /* EQUATES SELECTED          * 07630000
         MVC   12(23,@4),ACEQSEL                                  0307  07640000
*  GEN(BAL   R9,CDS140);                 /* ISSUE WTO                 * 07650000
         BAL   R9,CDS140                                                07660000
         DS    0H                                                       07670000
* CDS181:                                /* LABEL                     * 07680000
*  MSG395=MSG3951;                       /* BLANK VARIABLES           * 07690000
CDS181   MVC   12(23,@4),11(@4)                                   0309  07700000
*  RESENTB='1'B;                         /* RESIDENT ENTRIES          * 07710000
         OI    A00000,B'01000000'                                 0310  07720000
*  R8=DEVTBPTR;                          /* 1ST WORK TABLE            * 07730000
         L     @8,DEVTBPTR                                        0311  07740000
*  IF ABYT='00'X THEN                    /* CHECK 1ST ENTRY           * 07750000
         CLI   0(@8),X'00'                                        0312  07760000
         BC    07,@9C6                                            0312  07770000
*    DO;                                 /* NO DEVICE EQUATES         * 07780000
*      RESENTB='0'B;                     /* NO RESIDENT ENTRIES       * 07790000
         NI    A00000,B'10111111'                                 0314  07800000
*      MSG395(1:4)=KNONE;                /* INDICATE SUCH             * 07810000
         MVC   12(4,@4),KNONE                                     0315  07820000
*      GEN(BAL   R9,CDS140);             /* ISSUE WTO                 * 07830000
         BAL   R9,CDS140                                                07840000
         DS    0H                                                       07850000
*    END;                                /* END ENTRY CHECK           * 07860000
*  DO R6=16 TO 1 BY -1;                  /* RESIDENT ENTRIES          * 07870000
@9C6     LA    @6,16                                              0318  07880000
*    IF ABYT='00'X THEN                  /* CHECK ENTRY               * 07890000
@DO9C5   CLI   0(@8),X'00'                                        0319  07900000
*      GOTO CDS184;                      /* NO DEVICE                 * 07910000
         BC    08,CDS184                                          0320  07920000
*    MSG395(1:4)=PDEV1;                  /* REAL DEVICE               * 07930000
         MVC   12(4,@4),0(@8)                                     0321  07940000
*    MSG395(5)='=';                      /* EQUAL SIGN                * 07950000
         MVI   16(@4),C'='                                        0322  07960000
*    MSG395(6:9)=PDEV2;                  /* CDS EQUATE                * 07970000
         MVC   17(4,@4),4(@8)                                     0323  07980000
*    GEN(BAL   R9,CDS140);               /* ISSUE WTO                 * 07990000
         BAL   R9,CDS140                                                08000000
         DS    0H                                                       08010000
*    R8=ADDR(PDEVNXT);                   /* NEXT EQUATE               * 08020000
         LA    @8,8(0,@8)                                         0325  08030000
*  END;                                  /* END ENTRY CHECK           * 08040000
* CDS184:                                /* LABEL                     * 08050000
*  GOTO CDS192;                          /* VERIFY EQUATES            * 08060000
         BCT   @6,@DO9C5                                          0326  08070000
* CDS192:                                /* LABEL                     * 08080000
*  R4=IFD396;                            /* VERIFICATION              * 08090000
CDS192   L     @4,A00004+8                                        0328  08100000
*  GEN(BAL   R9,CDS170);                 /* ISSUE WTOR                * 08110000
         BAL   R9,CDS170                                                08120000
         DS    0H                                                       08130000
*  IF RBUF(1:3)=KNO THEN                 /* CHECK REPLY               * 08140000
         CLC   REP0T81+1(3),KNO                                   0330  08150000
*    GOTO CDS010;                        /* NO REPLIED                * 08160000
         BC    08,CDS010                                          0331  08170000
*  IF RBUF(1:3)¬=KYES THEN               /* CHECK REPLY               * 08180000
         CLC   REP0T81+1(3),KYES                                  0332  08190000
*    GOTO CDS192;                        /* NOT YES                   * 08200000
         BC    07,CDS192                                          0333  08210000
*  GEN(BAL   R9,CDS212);                 /* ZERO WORK TABLES          * 08220000
         BAL   R9,CDS212                                                08230000
         DS    0H                                                       08240000
*  DPMSGREI='0'B;                        /* ZERO DP MSG REI     XM3317* 08250000
         NI    A00031,B'11111110'                                 0335  08260000
*  RETURN;                               /* RETURN TO CALLER          * 08270000
* END IFDOLT49;                                                         08280000
@EL01    L     @D,4(0,@D)                                         0337  08290000
         LM    @E,@C,12(@D)                                       0337  08300000
         BCR   15,@E                                              0337  08310000
@DATA1   EQU   *                                                        08320000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           08330000
@1       EQU   01                                                       08340000
@2       EQU   02                                                       08350000
@3       EQU   03                                                       08360000
@4       EQU   04                                                       08370000
@5       EQU   05                                                       08380000
@6       EQU   06                                                       08390000
@7       EQU   07                                                       08400000
@8       EQU   08                                                       08410000
@9       EQU   09                                                       08420000
@A       EQU   10                                                       08430000
@B       EQU   11                                                       08440000
@C       EQU   12                                                       08450000
@D       EQU   13                                                       08460000
@E       EQU   14                                                       08470000
@F       EQU   15                                                       08480000
@D1      DC    H'1'                                                     08490000
@D2      DC    H'16'                                                    08500000
@D3      DC    H'4'                                                     08510000
@D4      DC    H'2'                                                     08520000
@D5      DC    H'74'                                                    08530000
         DS    0F                                                       08540000
         DS    0D                                                       08550000
@DATA    EQU   *                                                        08560000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   08570000
X        EQU   00000000            FULLWORD INTEGER                     08580000
R0       EQU   00000000            FULLWORD POINTER REGISTER            08590000
R1       EQU   00000001            FULLWORD POINTER REGISTER            08600000
R2       EQU   00000002            FULLWORD POINTER REGISTER            08610000
R3       EQU   00000003            FULLWORD POINTER REGISTER            08620000
R4       EQU   00000004            FULLWORD POINTER REGISTER            08630000
R5       EQU   00000005            FULLWORD POINTER REGISTER            08640000
R6       EQU   00000006            FULLWORD POINTER REGISTER            08650000
R7       EQU   00000007            FULLWORD POINTER REGISTER            08660000
R8       EQU   00000008            FULLWORD POINTER REGISTER            08670000
R9       EQU   00000009            FULLWORD POINTER REGISTER            08680000
R10      EQU   00000010            FULLWORD POINTER REGISTER            08690000
R11      EQU   00000011            FULLWORD POINTER REGISTER            08700000
R12      EQU   00000012            FULLWORD POINTER REGISTER            08710000
R13      EQU   00000013            FULLWORD POINTER REGISTER            08720000
R14      EQU   00000014            FULLWORD POINTER REGISTER            08730000
R15      EQU   00000015            FULLWORD POINTER REGISTER            08740000
EQUECB   EQU   @DATA+00000072      FULLWORD INTEGER                     08750000
LSTSLH   EQU   @DATA+00000076      FULLWORD INTEGER                     08760000
L        EQU   @DATA+00000080      FULLWORD INTEGER                     08770000
H        EQU   @DATA+00000084      FULLWORD INTEGER                     08780000
RESTPTR  EQU   @DATA+00000088      FULLWORD POINTER                     08790000
A00006   EQU   00000000            64 BYTE(S) ON WORD                   08800000
RESTAB   EQU   A00006+00000000     64 BYTE(S)                           08810000
SETWTOR  EQU   @DATA+00000092      8 BYTE(S) ON WORD                    08820000
         ORG   SETWTOR+00000000                                         08830000
A00007   EQU   *                   FULLWORD POINTER                     08840000
         DC    AL4(RBUF)                                                08850000
A00008   EQU   *                   FULLWORD POINTER                     08860000
         DC    AL4(EQUECB)                                              08870000
A00009   EQU   *                   FULLWORD INTEGER                     08880000
         DC    FL4'0'                                                   08890000
KZIP4    EQU   A00009+00000000     4 BYTE(S)                            08900000
KZIP2    EQU   A00009+00000000     2 BYTE(S)                            08910000
A00010   EQU   @DATA+00000104      8 BYTE(S) ON WORD                    08920000
ADRENT2  EQU   A00010+00000000     FULLWORD POINTER                     08930000
ADRENT3  EQU   A00010+00000004     FULLWORD POINTER                     08940000
THIDK    EQU   @DATA+00000112      HALFWORD INTEGER                     08950000
A00011   EQU   00000000            384 BYTE(S) ON WORD                  08960000
FSTENT12 EQU   A00011+00000000     256 BYTE(S)                          08970000
FSTENT1  EQU   A00011+00000000     128 BYTE(S)                          08980000
FSTENT2  EQU   A00011+00000128     128 BYTE(S)                          08990000
FSTENT3  EQU   A00011+00000256     128 BYTE(S)                          09000000
ENDTABS  EQU   A00011+00000256     1 BYTE(S)                            09010000
A00012   EQU   00000000            6 BYTE(S) ON WORD                    09020000
FSTD     EQU   A00012+00000000     HALFWORD INTEGER                     09030000
SECD     EQU   A00012+00000002     HALFWORD INTEGER                     09040000
THID     EQU   A00012+00000004     HALFWORD INTEGER                     09050000
A00013   EQU   00000000            2 BYTE(S) ON WORD                    09060000
RESLST   EQU   A00013+00000000     2 BYTE(S)                            09070000
RES1     EQU   A00013+00000000     1 BYTE(S)                            09080000
RES2     EQU   A00013+00000001     1 BYTE(S)                            09090000
INCR3    EQU   00000001            1 BYTE(S)                            09100000
SETCODS  EQU   00000000            4 BYTE(S)                            09110000
WTORADRS EQU   00000000            8 BYTE(S)                            09120000
A00014   EQU   00000011            24 BYTE(S) ON WORD                   09130000
MSG3951  EQU   A00014+00000000     23 BYTE(S)                           09140000
A00015   EQU   A00014+00000000     1 BYTE(S)                            09150000
MSG395   EQU   A00014+00000001     23 BYTE(S)                           09160000
A00016   EQU   A00014+00000001     1 BYTE(S)                            09170000
A00017   EQU   00000000            82 BYTE(S) ON WORD                   09180000
A00018   EQU   A00017+00000000     26 BYTE(S)                           09190000
A00019   EQU   A00017+00000000     1 BYTE(S)                            09200000
MSGSZ    EQU   A00017+00000001     1 BYTE(S)                            09210000
INVR     EQU   A00017+00000026     48 BYTE(S)                           09220000
A00020   EQU   A00017+00000074     4 BYTE(S)                            09230000
RTDESC   EQU   A00017+00000078     4 BYTE(S)                            09240000
SBUF     EQU   00000000            4 BYTE(S)                            09250000
A00021   EQU   SBUF+00000000       1 BYTE(S)                            09260000
SBUF1    EQU   SBUF+00000001       3 BYTE(S)                            09270000
HEXWD    EQU   00000000            FULLWORD INTEGER                     09280000
ZIPENT2  EQU   00000000            128 BYTE(S)                          09290000
A00022   EQU   00000000            8 BYTE(S) ON WORD                    09300000
DEVLK    EQU   A00022+00000000     4 BYTE(S)                            09310000
DEVLK1   EQU   A00022+00000000     2 BYTE(S)                            09320000
DEVLK2   EQU   A00022+00000002     2 BYTE(S)                            09330000
NXTLK    EQU   A00022+00000004     4 BYTE(S)                            09340000
R7P1     EQU   00000001            1 BYTE(S)                            09350000
A00023   EQU   00000000            3 BYTE(S) ON HWORD                   09360000
TB2      EQU   A00023+00000000     1 BYTE(S)                            09370000
TB2A     EQU   A00023+00000001     1 BYTE(S)                            09380000
NXTTB    EQU   A00023+00000002     1 BYTE(S)                            09390000
NXTWK    EQU   00000128            1 BYTE(S)                            09400000
A00024   EQU   00000000            12 BYTE(S) ON WORD                   09410000
DEVCOP   EQU   A00024+00000000     4 BYTE(S)                            09420000
DEV1     EQU   A00024+00000000     2 BYTE(S)                            09430000
DEV2     EQU   A00024+00000002     2 BYTE(S)                            09440000
NXTENT   EQU   A00024+00000004     8 BYTE(S)                            09450000
ABYT     EQU   00000000            1 BYTE(S)                            09460000
A00025   EQU   00000000            12 BYTE(S) ON WORD                   09470000
PDEV1    EQU   A00025+00000000     4 BYTE(S)                            09480000
PDEV2    EQU   A00025+00000004     4 BYTE(S)                            09490000
PDEVNXT  EQU   A00025+00000008     4 BYTE(S)                            09500000
         ORG   @DATA+00000114                                           09510000
KCLRSL   EQU   *                   4 BYTE(S)                            09520000
         DC    C'CLR/'                                                  09530000
KENDSL   EQU   *                   4 BYTE(S)                            09540000
         DC    C'END/'                                                  09550000
KNONE    EQU   *                   4 BYTE(S)                            09560000
         DC    C'NONE'                                                  09570000
KYES     EQU   *                   3 BYTE(S)                            09580000
         DC    C'YES'                                                   09590000
KNO      EQU   *                   3 BYTE(S)                            09600000
         DC    C'NO '                                                   09610000
LIST     EQU   *                   16 BYTE(S)                           09620000
         DC    C'0123456789ABCDEF'                                      09630000
A00026   EQU   LIST+00000000       1 BYTE(S)                            09640000
LIST1    EQU   LIST+00000001       15 BYTE(S)                           09650000
REP0T81  EQU   @DATA+00000148      82 BYTE(S)                           09660000
REP0T79  EQU   REP0T81+00000000    80 BYTE(S)                           09670000
A00027   EQU   *                   1 BYTE(S)                            09680000
         DC    C' '                                                     09690000
RBUF     EQU   REP0T81+00000001    80 BYTE(S)                           09700000
         ORG   REP0T81+00000081                                         09710000
A00028   EQU   *                   1 BYTE(S)                            09720000
         DC    C' '                                                     09730000
CHIND    EQU   @DATA+00000230      1 BYTE(S)                            09740000
BLKBIT   EQU   CHIND+00000000      1 BIT(S)                             09750000
EQDASCOM EQU   CHIND+00000000      3 BIT(S)                             09760000
EQUBIT   EQU   CHIND+00000000      1 BIT(S)                             09770000
DASCOM   EQU   CHIND+00000000      2 BIT(S)                             09780000
DASBIT   EQU   CHIND+00000000      1 BIT(S)                             09790000
COMBIT   EQU   CHIND+00000000      1 BIT(S)                             09800000
A00029   EQU   CHIND+00000000      1 BIT(S)                             09810000
SBC      EQU   @DATA+00000231      1 BYTE(S)                            09820000
         ORG   @DATA+00000232                                           09830000
ACEQSEL  EQU   *                   23 BYTE(S)                           09840000
         DC    C'ACTIVE EQUATES SELECTED'                               09850000
         ORG   @DATA                                                    09860000
         DS    00000255C                                                09870000
@TEMPS   DS    0F                                                       09880000
IFDMSG49 DS    0F                                                       09890000
         DC    A(MSG1)                                                  09900000
         DC    A(MSG2)                                                  09910000
         DC    A(MSG3)                                                  09920000
         DC    A(MSG4)                                                  09930000
         DC    A(MSG5)                                                  09940000
         DC    A(MSG6)                                           XM0095 09950000
MSG1     DS    0F                                                       09960000
         DC    X'50'                                                    09970000
         DC    XL7'00'                                                  09980000
         WTO   'IFD394D ENTER DEV EQUATES/END/CLR',ROUTCDE=10,DESC=7,MFX09990000
               =L                                                       10000000
MSG2     WTO   'IFD395I ACTIVE EQUATES SELECTED',ROUTCDE=10,DESC=7,MF=L 10010000
MSG3     DS    0F                                                       10020000
         DC    X'03'                                                    10030000
         DC    XL7'00'                                                  10040000
         WTO   'IFD396D ARE EQUATES CORRECT?  YES/NO',ROUTCDE=10,DESC=7X10050000
               ,MF=L                                                    10060000
MSG4     WTO   'IFD397I INVALID ENTRY                                  X10070000
                                  ',ROUTCDE=10,DESC=7,MF=L              10080000
MSG5     WTO   'IFD398I EQUATED DEVICES EXCEED 16',ROUTCDE=10,DESC=7,MFX10090000
               =L                                                       10100000
MSG6     WTO   'IFD373I WARNING, EQUATING CDS TO SHARED DEV COULD DESTRX10110000
               OY DATA',ROUTCDE=10,DESC=7,MF=L                          10120000
DSECT49  IFDCOM                                                         10130000
IFDOLT49 CSECT                                                          10140000
A00000   EQU   TABLNGTH+00000002   1 BYTE(S)                            10150000
A00001   EQU   A00000+00000000     1 BIT(S)                             10160000
RESENTB  EQU   A00000+00000000     1 BIT(S)                             10170000
A00002   EQU   A00000+00000000     4 BIT(S)                             10180000
FSTEQU   EQU   A00000+00000000     1 BIT(S)                             10190000
A00003   EQU   A00000+00000000     1 BIT(S)                             10200000
ROOTPTR  EQU   MCT+00000128        FULLWORD POINTER                     10210000
A00004   EQU   IFDMSG49+00000000   24 BYTE(S) ON WORD                   10220000
IFD394   EQU   A00004+00000000     FULLWORD POINTER                     10230000
IFD395   EQU   A00004+00000004     FULLWORD POINTER                     10240000
IFD396   EQU   A00004+00000008     FULLWORD POINTER                     10250000
IFD397   EQU   A00004+00000012     FULLWORD POINTER                     10260000
IFD398   EQU   A00004+00000016     FULLWORD POINTER                     10270000
IFD373   EQU   A00004+00000020     FULLWORD POINTER                     10280000
A00005   EQU   A00004+00000020     1 BYTE(S)                            10290000
A00030   EQU   CESWTR+00000000     1 BYTE(S)                            10300000
RETAINAC EQU   A00030+00000000     1 BIT(S)                             10310000
A00031   EQU   CESWTR2+00000000    1 BYTE(S)                            10320000
A00032   EQU   A00031+00000000     7 BIT(S)                             10330000
DPMSGREI EQU   A00031+00000000     1 BIT(S)                             10340000
@DATEND  EQU   *                                                        10350000
CDS184   EQU   CDS192                                                   10360000
         END   IFDOLT49                                                 10370000
./  ADD  SSI=32570920,NAME=IFDOLT50
         TITLE 'IFDOLT50 PROMPTING MODULE'                              00010000
         TITLE 'IFDOLT50 PROMPTING MODULE'                              00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT50 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT50 14 SEP 73'                             0002  00070000
         STM   @E,@C,12(@D)                                       0002  00080000
         BALR  @B,0                                               0002  00090000
@PSTART  DS    0H                                                 0002  00100000
         USING @PSTART+00000,@B                                   0002  00110000
         ST    @D,@SAV001+4                                       0002  00120000
         LA    @F,@SAV001                                         0002  00130000
         ST    @F,8(0,@D)                                         0002  00140000
         LR    @D,@F                                              0002  00150000
*         GEN(USING CHASCT,2);                                          00160000
         USING CHASCT,2                                                 00170000
         DS    0H                                                       00180000
*         GENERATE DATA;                                                00190000
*         /************************************************************ 00200000
*         /*                                                          * 00210000
*         /*                        DECLARES                          * 00220000
*         /*                                                          * 00230000
*         /************************************************************ 00240000
*         DCL R1 REG(1) PTR(31);                                        00250000
*         DCL R2 REG(2) PTR(31);                                        00260000
*         DCL LINEPTR REG(5) PTR(31);                                   00270000
*         DCL I REG(6) PTR(24);                                         00280000
*         DCL R7 REG(7) PTR(31);                                        00290000
*         DCL R8 REG(8) PTR(31);                                        00300000
*         DCL R14 REG(14) PTR(31);                                      00310000
*         DCL R15 REG(15) PTR(31);                                      00320000
*         DCL 1 MSSGE BASED(R8),                                        00330000
*               3 MESLNGTH CHAR(2),                                     00340000
*               3 MCSFLAGS CHAR(2),                                     00350000
*               3 MSGID CHAR(8),                                        00360000
*               3 MESSAGE CHAR(51);                                     00370000
*         DCL LINE CHAR(51) BASED(LINEPTR);                             00380000
*         DCL 1 MSGPTR BASED(R7),                                       00390000
*               3 MSGPTR47 PTR(31),                                     00400000
*               3 ADDRDMSG PTR(31),                                     00410000
*               3 MSGPTR48 PTR(31),                                     00420000
*               3 ADDRTMSG PTR(31),                                     00430000
*               3 MSGPTR49 PTR(31),                                     00440000
*               3 ADDROMSG PTR(31),                                     00450000
*               3 MSGPTR46 PTR(31);                                     00460000
*         DCL CESWTR CHAR(1) GENERATED;  /* RETAIN 370 SWITCHES S20203* 00470000
*         DCL 1 * CHAR(1) BASED(ADDR(CESWTR)),   /*             S20203* 00480000
*           3 RETAINAC BIT(1),           /* REI ACTIVE          S20203* 00490000
*           3 * BIT(1),                  /*                     S20203* 00500000
*           3 REMNOMSG BIT(1),           /* REMOTE NO MSG       S20203* 00510000
*           3 * BIT(5);                  /*                     S20203* 00520000
*         DCL INBUFR GENERATED;                                         00530000
*         DCL INPUTBUF CHAR(8) BASED(ADDR(INBUFR));                     00540000
*         DCL IFDMSG50 LABEL NONLOCAL EXTERNAL;                         00550000
*         RESTRICT(1,2,5,6,7,8);                                        00560000
*         R7=ADDR(IFDMSG50);        /* FIND ADDRESS OF MESSAGE MODULE.* 00570000
         L     @3,@V1              ADDRESS OF IFDMSG50            0022  00580000
         LR    @7,@3                                              0022  00590000
*         /************************************************************ 00600000
*         /*                 IS PROMPT ALL SPECIFIED                  * 00610000
*         /************************************************************ 00620000
*         IF INPUTBUF(8)='A' THEN   /* IS PROMPT ALL SPECIFIED. */      00630000
         CLI   INPUTBUF+7,C'A'                                    0023  00640000
*           GO TO PROMPT01;         /* YES, PERFORM ALL PROMPTING.*/    00650000
         BC    08,PROMPT01                                        0024  00660000
*         /************************************************************ 00670000
*         /*                 IS PROMPT DEV SPECIFIED                  * 00680000
*         /************************************************************ 00690000
*         IF INPUTBUF(8)¬='D' THEN  /* IS PROMPT DEV SPECIFIED. */      00700000
         CLI   INPUTBUF+7,C'D'                                    0025  00710000
*           GO TO PROMPT02;         /* NO, WHAT IS SPECIFIED.   */      00720000
         BC    07,PROMPT02                                        0026  00730000
* PROMPT01:                                                             00740000
*         /************************************************************ 00750000
*         /*                                                          * 00760000
*         /*                PERFORM PROMPTING FOR DEV                 * 00770000
*         /*                                                          * 00780000
*         /************************************************************ 00790000
*         LINEPTR=ADDRDMSG;         /* INITIALIZE LINE POINTER. */      00800000
PROMPT01 L     @5,4(0,@7)                                         0027  00810000
*         R8=MSGPTR47;              /* GET POINTER TO MESSAGE IFD147I * 00820000
         L     @8,0(0,@7)                                         0028  00830000
*                                   /* IN THE MESSAGE MODULE.         * 00840000
*         DO I=7 TO 1 BY -1;                                            00850000
         LA    @6,7                                               0029  00860000
*         MESSAGE=LINE;             /* DEV PROMPTING.                */ 00870000
@DO9FF   MVC   12(51,@8),0(@5)                                    0030  00880000
*         R1=MSGPTR47;              /* PRINT LINE. */                   00890000
         L     @1,0(0,@7)                                         0031  00900000
*         GEN(PWTO  REG=(1));       /* PRINT MESSAGE.                 * 00910000
         PWTO  REG=(1)                                                  00920000
         DS    0H                                                       00930000
*         LINEPTR=LINEPTR+51;       /* UPDATE LINE POINTER TO POINT */  00940000
         AH    @5,@D1                                             0033  00950000
*                                   /* TO NEXT LINE OF MESSAGE AND  */  00960000
*         END;                      /* CONTINUE DEV PROMPTING.      */  00970000
*         IF INPUTBUF(8)='A' THEN   /* IS PROMPT ALL SPECIFIED. */      00980000
         BCT   @6,@DO9FF                                          0034  00990000
         CLI   INPUTBUF+7,C'A'                                    0035  01000000
*           GO TO PROMPT03;         /* YES, CONTINUE PROMPTING. */      01010000
         BC    08,PROMPT03                                        0036  01020000
*         GO TO PROMPT06;           /* GO TO FINISH UP ROUTINE. */      01030000
         BC    15,PROMPT06                                        0037  01040000
* PROMPT02:                                                             01050000
*         /************************************************************ 01060000
*         /*                 IS PROMPT TEST SPECIFIED                 * 01070000
*         /************************************************************ 01080000
*         IF INPUTBUF(8)¬='T' THEN  /* IS PROMPT TEST SPECIFIED. */     01090000
PROMPT02 CLI   INPUTBUF+7,C'T'                                    0038  01100000
*           GO TO PROMPT04;         /* NO, WHAT IS SPECIFIED. */        01110000
         BC    07,PROMPT04                                        0039  01120000
* PROMPT03:                                                             01130000
*         /************************************************************ 01140000
*         /*                                                          * 01150000
*         /*                PERFORM PROMPTING FOR TEST                * 01160000
*         /*                                                          * 01170000
*         /************************************************************ 01180000
*         LINEPTR=ADDRTMSG;         /* INITIALIZE LINE POINTER. */      01190000
PROMPT03 L     @5,12(0,@7)                                        0040  01200000
*         R8=MSGPTR48;              /* GET POINTER TO MESSAGE IFD148I * 01210000
         L     @8,8(0,@7)                                         0041  01220000
*                                   /* IN THE MESSAGE MODULE.         * 01230000
*         DO I=8 TO 1 BY -1;       /* ISSUE 8 LINES OF PROMPT FOR21051* 01240000
         LA    @6,8                                               0042  01250000
*         MESSAGE=LINE;             /* TEST PROMPTING.               */ 01260000
@DO9FB   MVC   12(51,@8),0(@5)                                    0043  01270000
*         R1=MSGPTR48;              /* PRINT LINE. */                   01280000
         L     @1,8(0,@7)                                         0044  01290000
*         GEN(PWTO  REG=(1));       /* PRINT MESSAGE.                 * 01300000
         PWTO  REG=(1)                                                  01310000
         DS    0H                                                       01320000
*         LINEPTR=LINEPTR+51;       /* UPDATE LINE POINTER TO POINT */  01330000
         AH    @5,@D1                                             0046  01340000
*                                   /* TO NEXT LINE OF MESSAGE AND  */  01350000
*         END;                      /* CONTINUE PROMPTING.          */  01360000
*         IF INPUTBUF(8)='A' THEN   /* IS PROMPT ALL SPECIFIED. */      01370000
         BCT   @6,@DO9FB                                          0047  01380000
         CLI   INPUTBUF+7,C'A'                                    0048  01390000
*           GO TO PROMPT05;         /* YES, CONTINUE PROMPTING. */      01400000
         BC    08,PROMPT05                                        0049  01410000
*         GO TO PROMPT06;           /* NO, GO TO FINISH ROUTINE. */     01420000
         BC    15,PROMPT06                                        0050  01430000
* PROMPT04:                                                             01440000
*         /************************************************************ 01450000
*         /*                 IS PROMPT OPT SPECIFIED                  * 01460000
*         /************************************************************ 01470000
*         IF INPUTBUF(8)¬='O' THEN  /* IS PROMPT OPT SPECIFIED. */      01480000
PROMPT04 CLI   INPUTBUF+7,C'O'                                    0051  01490000
*           GO TO PROMPT06;         /* NO, SEE SRL.             */      01500000
         BC    07,PROMPT06                                        0052  01510000
* PROMPT05:                                                             01520000
*         /************************************************************ 01530000
*         /*                                                          * 01540000
*         /*                PERFORM PROMPTING FOR OPT                 * 01550000
*         /*                                                          * 01560000
*         /************************************************************ 01570000
*         LINEPTR=ADDROMSG;         /* INITIALIZE LINE POINTER. */      01580000
PROMPT05 L     @5,20(0,@7)                                        0053  01590000
*         R8=MSGPTR49;              /* GET POINTER TO MESSAGE IFD149I * 01600000
         L     @8,16(0,@7)                                        0054  01610000
*                                   /* IN THE MESSAGE MODULE.         * 01620000
*                                                                       01630000
*         DO I=21 TO 1 BY -1;       /* ISSUE 21 PROMPT LINES    X02008* 01640000
         LA    @6,21                                              0055  01650000
*         MESSAGE=LINE;             /* FOR OPT PROMPTING.          */   01660000
@DO9F7   MVC   12(51,@8),0(@5)                                    0056  01670000
*         R1=MSGPTR49;              /* PRINT LINE. */                   01680000
         L     @1,16(0,@7)                                        0057  01690000
*         GEN(PWTO  REG=(1));       /* PRINT MESSAGE.                 * 01700000
         PWTO  REG=(1)                                                  01710000
         DS    0H                                                       01720000
*         LINEPTR=LINEPTR+51;       /* UPDATE LINE POINTER TO POINT */  01730000
         AH    @5,@D1                                             0059  01740000
*                                   /* TO NEXT LINE OF MESSAGE AND  */  01750000
*         END;                      /* CONTINUE PROMPTING.          */  01760000
* PROMPT06:                                                             01770000
*         /************************************************************ 01780000
*         /*                                                          * 01790000
*         /*                   GIVE SRL REFERENCE                     * 01800000
*         /*                                                          * 01810000
*         /************************************************************ 01820000
*         R1=MSGPTR46;              /* TELL USER OF SRL REFERENCE. */   01830000
         BCT   @6,@DO9F7                                          0060  01840000
PROMPT06 L     @1,24(0,@7)                                        0061  01850000
*         GEN(PWTO  REG=(1));       /* PRINT MESSAGE.                 * 01860000
         PWTO  REG=(1)                                                  01870000
         DS    0H                                                       01880000
*         RETURN;                   /* RETURN TO CALLER. */             01890000
*         END;                                                          01900000
@EL01    L     @D,4(0,@D)                                         0064  01910000
         LM    @E,@C,12(@D)                                       0064  01920000
         BCR   15,@E                                              0064  01930000
@DATA1   EQU   *                                                        01940000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           01950000
@1       EQU   01                                                       01960000
@2       EQU   02                                                       01970000
@3       EQU   03                                                       01980000
@4       EQU   04                                                       01990000
@5       EQU   05                                                       02000000
@6       EQU   06                                                       02010000
@7       EQU   07                                                       02020000
@8       EQU   08                                                       02030000
@9       EQU   09                                                       02040000
@A       EQU   10                                                       02050000
@B       EQU   11                                                       02060000
@C       EQU   12                                                       02070000
@D       EQU   13                                                       02080000
@E       EQU   14                                                       02090000
@F       EQU   15                                                       02100000
@D1      DC    H'51'                                                    02110000
@V1      DC    V(IFDMSG50)                                              02120000
         DS    0F                                                       02130000
         DS    0D                                                       02140000
@DATA    EQU   *                                                        02150000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   02160000
R1       EQU   00000001            FULLWORD POINTER REGISTER            02170000
R2       EQU   00000002            FULLWORD POINTER REGISTER            02180000
LINEPTR  EQU   00000005            FULLWORD POINTER REGISTER            02190000
I        EQU   00000006            3  BYTE  POINTER REGISTER            02200000
R7       EQU   00000007            FULLWORD POINTER REGISTER            02210000
R8       EQU   00000008            FULLWORD POINTER REGISTER            02220000
R14      EQU   00000014            FULLWORD POINTER REGISTER            02230000
R15      EQU   00000015            FULLWORD POINTER REGISTER            02240000
MSSGE    EQU   00000000            63 BYTE(S) ON WORD                   02250000
MESLNGTH EQU   MSSGE+00000000      2 BYTE(S)                            02260000
MCSFLAGS EQU   MSSGE+00000002      2 BYTE(S)                            02270000
MSGID    EQU   MSSGE+00000004      8 BYTE(S)                            02280000
MESSAGE  EQU   MSSGE+00000012      51 BYTE(S)                           02290000
LINE     EQU   00000000            51 BYTE(S)                           02300000
MSGPTR   EQU   00000000            28 BYTE(S) ON WORD                   02310000
MSGPTR47 EQU   MSGPTR+00000000     FULLWORD POINTER                     02320000
ADDRDMSG EQU   MSGPTR+00000004     FULLWORD POINTER                     02330000
MSGPTR48 EQU   MSGPTR+00000008     FULLWORD POINTER                     02340000
ADDRTMSG EQU   MSGPTR+00000012     FULLWORD POINTER                     02350000
MSGPTR49 EQU   MSGPTR+00000016     FULLWORD POINTER                     02360000
ADDROMSG EQU   MSGPTR+00000020     FULLWORD POINTER                     02370000
MSGPTR46 EQU   MSGPTR+00000024     FULLWORD POINTER                     02380000
         DS    00000072C                                                02390000
@TEMPS   DS    0F                                                       02400000
PRMPTCOM IFDCOM                                                         02410000
A00000   EQU   CESWTR+00000000     1 BYTE(S)                            02420000
RETAINAC EQU   A00000+00000000     1 BIT(S)                             02430000
A00001   EQU   A00000+00000000     1 BIT(S)                             02440000
REMNOMSG EQU   A00000+00000000     1 BIT(S)                             02450000
A00002   EQU   A00000+00000000     5 BIT(S)                             02460000
INPUTBUF EQU   INBUFR+00000000     8 BYTE(S)                            02470000
@DATEND  EQU   *                                                        02480000
         END                                                            02490000
./  ADD  SSI=33190590,NAME=IFDOLT51
         TITLE 'IFDOLT51 READD READ MODULE'                             00010000
         TITLE 'IFDOLT51 READD READ MODULE'                             00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT51 CSECT ,                                                  0002  00050000
         ST    @E,12(0,@D)                                        0002  00060000
         STM   @0,@C,20(@D)                                       0002  00070000
         BALR  @B,0                                               0002  00080000
@PSTART  DS    0H                                                 0002  00090000
         USING @PSTART+00000,@B                                   0002  00100000
         ST    @D,@SAV001+4                                       0002  00110000
         LA    @F,@SAV001                                         0002  00120000
         ST    @F,8(0,@D)                                         0002  00130000
         LR    @D,@F                                              0002  00140000
*         GEN(ENTRY  READDCB);                                          00150000
         ENTRY  READDCB                                                 00160000
         DS    0H                                                       00170000
*         DCL READDCB ENTRY GENERATED;                                  00180000
*         GENERATE DATA;                                                00190000
*         GEN;                                                          00200000
         READ  RDDECB,SF,READDCB,(6),(4)          READ                  00210000
         CHECK RDDECB                             WAIT FOR COMPLETION   00220000
         DS    0H                                                       00230000
*         RTRNCODE=0;                    /*SET RETURN CODE*/            00240000
         SR    @F,@F                                              0008  00250000
*         RETURN;                                                       00260000
         BC    15,@EL01                                           0009  00270000
*   ENDFILE:                                                            00280000
*         RTRNCODE=12;                                                  00290000
ENDFILE  LA    @F,12                                              0010  00300000
*         RETURN;                                                       00310000
         BC    15,@EL01                                           0011  00320000
*   ERRETRN:                                                            00330000
*         GEN;                                                          00340000
ERRETRN  EQU   *                                                  0012  00350000
         ST    1,0(13)                                                  00360000
         TM    0(13),X'20'                                              00370000
         BZ    RTRN8                                                    00380000
         LA    5,8                                                      00390000
         BR    14                                                       00400000
         DS    0H                                                       00410000
*  RTRN8:                                                               00420000
*         RTRNCODE=8;                                                   00430000
RTRN8    LA    @F,8                                               0013  00440000
*         END;                                                          00450000
@EL01    L     @D,4(0,@D)                                         0014  00460000
         L     @E,12(0,@D)                                        0014  00470000
         LM    @0,@C,20(@D)                                       0014  00480000
         BCR   15,@E                                              0014  00490000
@DATA1   EQU   *                                                        00500000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00510000
@1       EQU   01                                                       00520000
@2       EQU   02                                                       00530000
@3       EQU   03                                                       00540000
@4       EQU   04                                                       00550000
@5       EQU   05                                                       00560000
@6       EQU   06                                                       00570000
@7       EQU   07                                                       00580000
@8       EQU   08                                                       00590000
@9       EQU   09                                                       00600000
@A       EQU   10                                                       00610000
@B       EQU   11                                                       00620000
@C       EQU   12                                                       00630000
@D       EQU   13                                                       00640000
@E       EQU   14                                                       00650000
@F       EQU   15                                                       00660000
         DS    0D                                                       00670000
@DATA    EQU   *                                                        00680000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   00690000
RTRNCODE EQU   00000015            FULLWORD INTEGER REGISTER            00700000
         DS    00000072C                                                00710000
@TEMPS   DS    0F                                                       00720000
READDCB  DCB   DSORG=PS,EODAD=ENDFILE,SYNAD=ERRETRN,                   X00730000
               RECFM=U,MACRF=(RC),DDNAME=INPUT                          00740000
         DC    C'IFDOLT51&SYSDATE'                                      00750000
         IFDPATCH                                                       00760000
@DATEND  EQU   *                                                        00770000
         END                                                            00780000
./  ADD  SSI=63220107,NAME=IFDOLT52
         TITLE 'IFDOLT52 DATA PROTECTION GENERAL'                       00010000
         LCLA  &T,&SPN                                            0001  00020000
.@001    ANOP                                                     0001  00030000
IFDOLT52 CSECT ,                                                  0001  00040000
         BC    15,24(0,@F)                                              00050000
         DC    C'IFDOLT52 17 NOV 76'                             0001  00060000
         STM   @E,@C,12(@D)                                       0001  00070000
         BALR  @B,0                                               0001  00080000
@PSTART  DS    0H                                                 0001  00090000
         USING @PSTART+00000,@B                                   0001  00100000
         ST    @D,@SAV001+4                                       0001  00110000
         LA    @F,@SAV001                                         0001  00120000
         ST    @F,8(0,@D)                                         0001  00130000
         LR    @D,@F                                              0001  00140000
         TITLE 'IFDOLT52 - DATA PROCTECTION GENERAL'                    00150000
         ENTRY ECB1                                            X02008   00160000
         ENTRY REPBFR1                                         X02008   00170000
         DS    0H                                                       00180000
*  GEN(USING CHASCT,2);                  /* COMMON AREA BASE REGISTER * 00190000
         USING CHASCT,2                                                 00200000
         DS    0H                                                       00210000
*  GENERATE DATA;                        /* OLTEP COMMON AREA         * 00220000
*  DCL R0 REG(0) PTR;                    /* REGISTER 0                * 00230000
*  DCL R1 REG(1) PTR;                    /* REGISTER 1                * 00240000
*  DCL R2 REG(2) PTR;                    /* REGISTER 2                * 00250000
*  DCL R3 REG(3) PTR;                    /* REGISTER 3                * 00260000
*  DCL R4 REG(4) PTR;                    /* REGISTER 4                * 00270000
*  DCL R5 REG(5) PTR;                    /* REGISTER 5                * 00280000
*  DCL R6 REG(6) PTR;                    /* REGISTER 6                * 00290000
*  DCL R7 REG(7) PTR;                    /* REGISTER 7                * 00300000
*  DCL R8 REG(8) PTR;                    /* REGISTER 8                * 00310000
*  DCL R9 REG(9) PTR;                    /* REGISTER 9                * 00320000
*  DCL R10 REG(10) PTR;                  /* REGISTER 10               * 00330000
*  DCL R11 REG(11) PTR;                  /* REGISTER 11               * 00340000
*  DCL R12 REG(12) PTR;                  /* REGISTER 12               * 00350000
*  DCL R13 REG(13) PTR;                  /* REGISTER 13               * 00360000
*  DCL R14 REG(14) PTR;                  /* REGISTER 14               * 00370000
*  DCL R15 REG(15) PTR;                  /* REGISTER 15               * 00380000
*  RESTRICT(R2,R3,R4,R5,R6,R7,R8,R9);    /* RESTRICT REGISTERS        * 00390000
*  DCL IFD34CL LABEL GENERATED;          /* GENERATED LABEL           * 00400000
*  DCL MSGMOD PTR GENERATED;             /* MESSAGE MODULE            * 00410000
*  DCL CHASCT CHAR(88) GENERATED;        /* SECTION CONTROL TABLE     * 00420000
*  DCL WKSVC GENERATED;                  /* SVC WORK AREA             * 00430000
*  DCL MCT GENERATED;                    /* MODULE CONTROL TABLE      * 00440000
*  DCL ROPT GENERATED;                   /* SVC AREA                  * 00450000
*  DCL VID CHAR(2) BASED(ADDR(WKSVC)+2); /* MODULE ID FOR SVC USE     * 00460000
*  DCL MID1 CHAR(2) BASED(ADDR(MCT)+10); /* OLTEP MODULE ID           * 00470000
*  DCL CESWT CHAR(5) GENERATED;          /* OLTEP SWITCHES            * 00480000
*  /******************************************************************* 00490000
*  /*     OLTEP SWITCHES                                              * 00500000
*  /******************************************************************* 00510000
*  DCL 1 * BASED(ADDR(CESWT)),                                          00520000
*         2 * BIT(8),                    /* N/A                       * 00530000
*          3 * BIT(1),                   /* N/A                       * 00540000
*          3 PROTECT BIT(1),             /* DATA PROT CALLING         * 00550000
*          3 OORN BIT(2),                /* OLD OR NEW UTS            * 00560000
*         2 * BIT(8),                    /* SWITCH 2                  * 00570000
*          3 * BIT(4),                   /* N/A                       * 00580000
*          3 FILMSK BIT(1),              /* FILE MASK BIT             * 00590000
*         2 * BIT(8),                    /* SWITCH 3                  * 00600000
*          3 * BIT(3),                   /* N/A                       * 00610000
*          3 CHANTEST BIT(1),            /* CHANNEL TEST ACTIVE       * 00620000
*          3 * BIT(2),                   /* N/A                       * 00630000
*          3 TAPEHDR BIT(1),             /* RESTORE TPAE LABEL FLAG   * 00640000
*         2 * BIT(8),                    /* SWITCH 4                  * 00650000
*          3 * BIT(1),                   /* N/A                       * 00660000
*          3 BYPDEV BIT(2),              /* BYPASS 1 OR ALL DEVICES   * 00670000
*            4 NURUN BIT(1),             /* BYPASS ALL DEVICE TESTS   * 00680000
*            4 NUDEV BIT(1),             /* BYPASS THIS DEVICE        * 00690000
*          3 * BIT(1),                   /* N/A                  M4506* 00700000
*          3 SUSDEL BIT(1),              /* SUSPEND DELETION     M4506* 00710000
*          3 * BIT(2),                   /* N/A                       * 00720000
*          3 NODP BIT(1),                /* NO DATA PROT ON DEV S20203* 00730000
*         2 * BIT(8),                    /* SWITCH 5                  * 00740000
*         2 * BIT(8),                    /* SWITCH 6                  * 00750000
*         2 * BIT(8),                    /* SWITCH 7                  * 00760000
*          3 UTSCAL BIT(1),              /* UTS CALLED FLAG           * 00770000
*            4 * BIT(1);                 /* LAST OLTEP FLAG           * 00780000
*         DCL CESWTR CHAR(1) GENERATED;  /* RETAIN 370 SWITCHES S20203* 00790000
*  /******************************************************************* 00800000
*  /*     OLTEP  RETAIN/370 SWITCHES                            S20203* 00810000
*  /******************************************************************* 00820000
*  DCL 1 * CHAR(1) BASED(ADDR(CESWTR)),                                 00830000
*           3 RETAINAC BIT(1),           /* REI ACTIVE FLAG     S20203* 00840000
*           3 * BIT(1),                  /*                     S20203* 00850000
*           3 REMNOMSG BIT(1),           /* REMOTE NO MSG       S20203* 00860000
*           3 * BIT(5);                  /*                     S20203* 00870000
*         DCL CESWTR2 CHAR(1) GENERATED;     /* REI SWTCHS      X02008* 00880000
*         DCL 1 * CHAR(1) BASED(ADDR(CESWTR2)),   /*            X02008* 00890000
*              3 * BIT(7),         /* N/A                       X02008* 00900000
*              3 DPMSG BIT(1);     /* DATA PROT MSG             X02008* 00910000
*  GEN(EJECT);                                                          00920000
         EJECT                                                          00930000
         DS    0H                                                       00940000
*  /******************************************************************* 00950000
*  /*     SCT SWITCH STRUCTURE -OFFSET 10                             * 00960000
*  /******************************************************************* 00970000
*  DCL 1 * CHAR(1)                                                      00980000
*        BASED(ADDR(CHASCT)+10),         /* OFFSET 10                 * 00990000
*        3 * BIT(1),                     /* N/A                       * 01000000
*        3 FPM BIT(1);                   /* FILE PROTECT MODE BIT     * 01010000
*  /******************************************************************* 01020000
*  /*     SCT SWITCH STRUCTURE - OFFSET 11                            * 01030000
*  /******************************************************************* 01040000
*  DCL 1 * CHAR(1)                                                      01050000
*        BASED(ADDR(CHASCT)+11),         /* OFFSET 11                 * 01060000
*        3 CDSFPM BIT(1),                /* FILE PROTECT MODE    M1006* 01070000
*        3 * BIT(1),                     /* NA                   M1006* 01080000
*        3 CDSCEVOL BIT(1),              /* CE VOLUME            M1006* 01090000
*        3 * BIT(5);                     /* NA                   M1006* 01100000
*                                                                       01110000
*  /******************************************************************* 01120000
*  /*     DEVICE TABLE STRUCTURE                                      * 01130000
*  /******************************************************************* 01140000
*  DCL 1 * BASED(R7),                                                   01150000
*               3 DEVADEB CHAR(8),       /* DEV ADDR IN EBCDIC  S21052* 01160000
*               3 DUCBA PTR(31),         /* UCB ADDR            S21052* 01170000
*               3 DEVFL1 CHAR(1),        /* FLAG BYTE 1         S21052* 01180000
*                5 ONLNE BIT(1),         /* ON/OFF LINE STATUS  S21052* 01190000
*                5 PRIME BIT(1),         /* PRIMARY DEV FLAG    S21052* 01200000
*                5 DPDONE BIT(1),        /* DATA PROTECTION DON S21052* 01210000
*                5 ACTVE BIT(1),         /* ACTIVE DEVICE       S21052* 01220000
*                5 ALLCT BIT(1),         /* ALLOCATED DEVICE    S21052* 01230000
*                5 GRBED BIT(1),         /* SECONDARY DEVICE    S21052* 01240000
*                5 FLPRT BIT(1),         /* FILE PROTECT MODE   S21052* 01250000
*                5 ACTSC BIT(1),         /* LAST SECONDARY DEV  S21052* 01260000
*               3 DEVFL2 CHAR(1),        /* SEOND FLAG BYTE     S21052* 01270000
*                5 DSNAME BIT(1),        /* DSNAME FLIP-FLOP    S21052* 01280000
*                5 SHARED BIT(1),        /* SHARED VOLUME       S21052* 01290000
*                5 CEVOL BIT(1),         /* C.E. VOLUME         S21052* 01300000
*                5 STDLBL BIT(1),        /* STANDARD LABEL TAPE S21052* 01310000
*                5 CHANFUNC BIT(1),      /* CHANNEL FUNCTION    S21052* 01320000
*                5 BYPS BIT(1),          /* BYPASS FUNC INVOKED S21052* 01330000
*                5 CEDE BIT(1),          /* CE-DE FUNC INVOKED  S21052* 01340000
*                5 ATTN BIT(1),          /* ATTNIN FUNC INVOKED S21052* 01350000
*               3 DEVFL3 CHAR(1),        /* 3RD FLAG BYTE       S21052* 01360000
*                5 * BIT(3),             /* N/A                       * 01370000
*                5 TAPEBIT BIT(1),       /* NOT/READY RESTORE   Y01906* 01380000
*             5 * BIT(2),               /* N.A. BITS           SA63144* 01390000
*             5 CESHRMSG BIT(1),        /* CEVOL MSG OUTPUT FLGSA63144* 01400000
*               3 DEVFL4 CHAR(1),        /* 4TH FLAG BYTE       S21052* 01410000
*               3 DVEXT1 CHAR(6),        /* LOW DASD EXTENT     S21052* 01420000
*               3 DVEXT2 CHAR(6),        /* HIGH DASD EXTENT    S21052* 01430000
*               3 * CHAR(2),             /* N/A                 S21052* 01440000
*               3 MODESET CHAR(1),       /* MODE SET SAVE AREA  S21052* 01450000
*               3 EXPOSURE CHAR(1),      /* EXPOSURE # FOR ZEUS S21052* 01460000
*               3 DEHAD CHAR(4),         /* DEV ADDR IN HEX     S21052* 01470000
*               3 CDSINFOR CHAR(16),     /* CDS INFORMATION     S21052* 01480000
*                5 MODEL CHAR(1),        /* MODEL #             S21052* 01490000
*                5 FEATURES CHAR(1),     /* FEATURES THIS MODEL S21052* 01500000
*                5 CLASSD CHAR(1),       /* CLASS               S21052* 01510000
*                5 TYPED CHAR(1),        /* TYPE                S21052* 01520000
*                5 CDSCNT CHAR(1),       /* CDS BYTE COUNT      S21052* 01530000
*                5 CDSFLAGS CHAR(1),     /* CDS FLAGS           S21052* 01540000
*                 7 DVCDSFPM BIT(1),     /* FILE PROTECT FLAG   S21052* 01550000
*                 7 * BIT(1),            /* N/A                 S21052* 01560000
*                 7 DVCDSCEV BIT(1),     /* CE VOLUME           S21052* 01570000
*                 7 * BIT(4),            /* N/A                 S21052* 01580000
*                 7 REMLINE BIT(1),      /* REMOTE LINE         S21052* 01590000
*                5 EXTSGMSK CHAR(2),     /* EXTERNAL SIGNAL MSK S21052* 01600000
*                5 SYMNAME CHAR(8),      /* SYMBOLIC NAME       S21052* 01610000
*               3 * CHAR(4);             /* EXPANSION           S21052* 01620000
*  /******************************************************************* 01630000
*  /*           SYSTEM 7 CONSTANTS                              X02008* 01640000
*  /******************************************************************* 01650000
*  /******************************************************************* 01660000
*  /*     DEVICE DESCRIPTORS                                          * 01670000
*  /******************************************************************* 01680000
*  DCL 1 * CHAR(2) BASED(R8),                                           01690000
*           3 CLASS BIT(8),              /* CLASS               S21050* 01700000
*               5 TAPE BIT(1),           /* CLASS=TAPE          S21050* 01710000
*               5 TP BIT(1),             /* CLASS=TP            S21050* 01720000
*               5 DASD BIT(1),           /* CLASS=DASD          S21050* 01730000
*               5 GRAPH BIT(1),          /* CLASS=GRAPHICS      S21050* 01740000
*               5 UNIT BIT(1),           /* CLASS=UNIT RECORD   S21050* 01750000
*               5 * BIT(3),              /* N/A                 S21050* 01760000
*           3 TYPE BIT(8);               /* TYPE                S21050* 01770000
*  /******************************************************************* 01780000
*  /*     MAP OF UCB                                            S21052* 01790000
*  /******************************************************************* 01800000
*  DCL 1 DEVUCB BASED(DUCBA),                                           01810000
*           3 * FIXED,                   /* N/A                 S21050* 01820000
*           3 * FIXED,                   /* N/A                 S21050* 01830000
*             5 * CHAR(2),               /* N/A                 S21050* 01840000
*             5 * CHAR(1),               /* N/A                 S21050* 01850000
*           3 *(2) FIXED,                /* N/A                 S21050* 01860000
*           3 * CHAR(1),                 /* N/A                 S21050* 01870000
*           3 * CHAR(1),                 /* FLAGS               S21050* 01880000
*             5 * BIT(2),                /* N/A                 S21052* 01890000
*             5 DEVSHRD BIT(1),          /* SHARED FLAG         S21052* 01900000
*             5 * BIT(5),                /* N/A                 S21052* 01910000
*           3 UCBDEVDS CHAR(2);          /* UCB DEVICE DESC     S21050* 01920000
*  DCL SECDVPTR PTR(31) GENERATED;       /* SECONDARY DEV PTR   S21052* 01930000
*  /******************************************************************* 01940000
*  /*     PARAMETER LIST FOR SVC59                                    * 01950000
*  /******************************************************************* 01960000
*  DCL 1 * BASED(ADDR(ROPT)),                                           01970000
*         3 UCBADDR CHAR(4),             /* UCB ADDR FOR DEV          * 01980000
*         3 FLAG1 CHAR(4),               /* FLAGS INDICATION          * 01990000
*           5 * BIT(8),                  /* FIRST FLAG BYTE           * 02000000
*             7 NOTRDY BIT(1),           /* NOT READY BIT STATUS      * 02010000
*             7 * BIT(7),                /* N/A                       * 02020000
*           5 * CHAR(3);                 /* N/A                       * 02030000
*  DCL HCODE CHAR(1) BASED(84);          /* CODE FOR SVC CALL         * 02040000
*  /******************************************************************* 02050000
*  /*    SVC LIST                                                     * 02060000
*  /******************************************************************* 02070000
*  DCL 1 SVCLIST BASED(ADDR(ROPT)),                                     02080000
*         3 * FIXED,                     /* N/A                       * 02090000
*         3 SVCFLG CHAR(1);              /* FLAG                      * 02100000
*  /******************************************************************* 02110000
*  /*     POINTER TO MESSAGE IFD103I                                  * 02120000
*  /******************************************************************* 02130000
*  DCL 1 * BASED(MSGMOD),                                               02140000
*         2 *(2) PTR,                    /* N/A                       * 02150000
*         2 IFD103 PTR,                  /* PTR TO MSG IFD103I  X02008* 02160000
*         2 *(28)  PTR,                  /* FILLER              X02008* 02170000
*         2 IFD113 PTR;                  /* PTR TO MSG IFD113I  X02008* 02180000
*  DCL MSGDVAD CHAR(8) BASED(R1+34);     /* DEVICE ADDR IN MSG  Y01906* 02190000
*  DCL MSGDVAD1 CHAR(4) BASED(R1+50);    /* DEV ADDR POS IN MSG X02008* 02200000
*  DCL REPLYLGN CHAR(1) BASED(R1);       /* REPLY IN COUNT POS  X02008* 02210000
*  DCL ECB1 FIXED;                       /* ECB FOR MSG IFD113I X02008* 02220000
*  DCL REPBFR1 CHAR(1);                  /* REPLY BUFFER        X02008* 02230000
*  GEN(EJECT);                                                          02240000
         EJECT                                                          02250000
         DS    0H                                                       02260000
*                                                                       02270000
*  /******************************************************************* 02280000
*  /*                                                                 * 02290000
*  /*     DETERMINATION OF TAPE HDR,SEC.OR PRIMARY DEVICE             * 02300000
*  /*                                                                 * 02310000
*  /******************************************************************* 02320000
*                                                                       02330000
*  UTSCAL= '0'B;                         /* MODULES CAN BE DELETED    * 02340000
         NI    A00000+6,B'01111111'                               0053  02350000
*  NODP='0'B;                            /* TURN OFF NO DP BIT        * 02360000
         NI    A00000+3,B'11111110'                               0054  02370000
*         DPMSG='1'B;              /* TURN ON DP MSG FLG        X02008* 02380000
         OI    A00019,B'00000001'                                 0055  02390000
*  /* CHECK IF CALLED TO REWRITE TAPE LABELS                          * 02400000
*  IF TAPEHDR = '1'B THEN                /* ARE TAPE LABELS TO BE     * 02410000
         TM    A00000+2,B'00000010'                               0056  02420000
         BC    12,@9FF                                            0056  02430000
*    DO;                                 /* WRITTEN?                  * 02440000
*      GEN;                              /* YES. GOTO IFDOLT53        * 02450000
CLM53    IFDMOD CALL='53'               CALL IFDOLT53             M4506 02460000
         DS    0H                                                       02470000
*      GEN(IFDMOD DELETE='53');          /* DELETE MODULE       YM4982* 02480000
         IFDMOD DELETE='53'                                             02490000
         DS    0H                                                       02500000
*      TAPEHDR= '0'B;                    /* RESET TAPEHDR BIT         * 02510000
         NI    A00000+2,B'11111101'                               0060  02520000
*      GOTO TORET;                       /* NORMAL RETURN             * 02530000
         BC    15,TORET                                           0061  02540000
*     END;                               /* END OF DO GROUP           * 02550000
*  /* CHECK IF PRIMARY OR SECONDARY DEVICE                            * 02560000
*  IF PROTECT= '1'B THEN                 /*                           * 02570000
@9FF     TM    A00000,B'01000000'                                 0063  02580000
         BC    12,@9FE                                            0063  02590000
*    DO;                                 /* SECONDARY DEVICE          * 02600000
*      R7= SECDVPTR;                     /* DEVTAB PTR FOR SEC DEV    * 02610000
         L     @7,SECDVPTR                                        0065  02620000
*      GOTO DPSSVC59;                    /* ISSUE SVC59 FOR STATUS    * 02630000
         BC    15,DPSSVC59                                        0066  02640000
*    END;                                /* END OF DO GROUP           * 02650000
*    ELSE                                /*                           * 02660000
*      R7= R8;                           /* DEVTAB FOR PRIMARY DEV    * 02670000
@9FE     LR    @7,@8                                              0068  02680000
*                                                                       02690000
*                                                                       02700000
*                                                                       02710000
* /******************************************************************** 02720000
* /*                                                                  * 02730000
* /*                         ISSUE SVC59 ROUTINE                      * 02740000
* /*                                                                  * 02750000
* /******************************************************************** 02760000
*                                                                       02770000
* DPSSVC59:                              /* SVC59 BRANCH              * 02780000
*  /* CHECK IF DATA PROTECTION HAS BEEN DONE                          * 02790000
*  IF DPDONE = '0'B THEN                 /* HAS DP BEEN DONE?         * 02800000
@9FD     EQU   *                                                  0069  02810000
DPSSVC59 TM    12(@7),B'00100000'                                 0069  02820000
         BC    05,@9FC                                            0069  02830000
*    DO;                                 /* NO. RESET FLAGS           * 02840000
*      FPM= '0'B;                        /* SET FILE PROTECT MODE     * 02850000
         NI    A00021,B'10111111'                                 0071  02860000
*      FILMSK = '0'B;                    /* ZERO FILE MASK BIT        * 02870000
         NI    A00000+1,B'11110111'                               0072  02880000
*      FLPRT = '0'B;                     /* ZERO FILE PROTECT FLAG    * 02890000
         NI    12(@7),B'11111101'                                 0073  02900000
*      CDSFPM= '0'B;                     /* ZERO CDS FILE PROTECT SCT * 02910000
         NI    A00023,B'01111111'                                 0074  02920000
*      DVCDSFPM= '0'B;                   /* ZERO DEVTAB CDS FLAG      * 02930000
         NI    41(@7),B'01111111'                                 0075  02940000
*    END;                                /* END OF DO GROUP           * 02950000
*          R8=ADDR(CLASSD);         /*USE CDS DEVICE DESCRIPTION*/      02960000
@9FC     LA    @8,38(0,@7)                                        0077  02970000
*          IF DASD='1'B THEN       /* IF ITS AN               @Y03LPMY* 02980000
         TM    0(@8),B'00100000'                                  0078  02990000
         BC    12,@9FB                                            0078  03000000
*           DO;                                             /*@Y03LPMY* 03010000
*           IF FEATURES='10'X &     /* SS1 3330-1 OR          @Y03LPMY* 03020000
*              TYPE='09'X |         /* AN SS1                 @Y03LPMY* 03030000
*              TYPE='0D'X &         /* 3330-11                @Y03LPMY* 03040000
*              FEATURES='10'X THEN  /*                        @Y03LPMY* 03050000
         CLI   37(@7),X'10'                                       0080  03060000
         BC    07,@9FA                                            0080  03070000
         CLI   1(@8),X'09'                                        0080  03080000
         BC    08,@9F9                                            0080  03090000
@9FA     CLI   1(@8),X'0D'                                        0080  03100000
         BC    07,@9F8                                            0080  03110000
         CLI   37(@7),X'10'                                       0080  03120000
         BC    07,@9F7                                            0080  03130000
*            DO;                    /* CALL SS1               @Y03LPMY* 03140000
@9F9     EQU   *                                                  0081  03150000
*              GEN(IFDMOD CALL='67'); /* DATAPROTECTION       @Y03LPMY* 03160000
         IFDMOD CALL='67'                                               03170000
         DS    0H                                                       03180000
*              IF R15=4 THEN        /*IF IT CANT BE TESTED    @Y03LPMY* 03190000
         CH    @F,@D1                                             0083  03200000
         BC    07,@9F6                                            0083  03210000
*                DO;                                        /*@Y03LPMY* 03220000
*                NUDEV='1'B;        /*SET FLAG TO BYPASS      @Y03LPMY* 03230000
         OI    A00000+3,B'00100000'                               0085  03240000
*                GOTO TORET;        /*     AND RETURN         @Y03LPMY* 03250000
         BC    15,TORET                                           0086  03260000
*                END;                                       /*@Y03LPMY* 03270000
*            END;                                           /*@Y03LPMY* 03280000
@9F6     EQU   *                                                  0088  03290000
*           END;                                            /*@Y03LPMY* 03300000
@9F7     EQU   *                                                  0089  03310000
@9F8     EQU   *                                                  0089  03320000
*  ROPT= DUCBA;                          /* UCB ADDRESS               * 03330000
@9FB     MVC   ROPT(4),8(@7)                                      0090  03340000
*  IF TAPE = '1'B THEN                   /* IF CLASS IS TAPE,         * 03350000
         TM    0(@8),B'10000000'                                  0091  03360000
         BC    12,@9F5                                            0091  03370000
*    SVCFLG = '80'X;                     /* SET FLAG IN SVC LISTY01906* 03380000
         MVI   SVCLIST+4,X'80'                                    0092  03390000
         BC    15,@9F4                                            0093  03400000
*    ELSE SVCFLG  = '00'X;               /* NOT A TAPE DEV      Y01906* 03410000
@9F5     MVI   SVCLIST+4,X'00'                                    0093  03420000
*  VID=MID1;                             /* RESIDENT MODULE ID        * 03430000
@9F4     MVC   VID(2),MID1                                        0094  03440000
*  R0= ADDR(ROPT);                       /* PARMLIST ADDRESS          * 03450000
         LA    @0,ROPT                                            0095  03460000
*  R1=ADDR(HCODE);                       /* CALLING CODE              * 03470000
         LA    @1,HCODE                                           0096  03480000
*  GEN(SVC  59);                         /* ISSUE SVC 59              * 03490000
         SVC  59                                                        03500000
         DS    0H                                                       03510000
*  IF R15 ¬= 'FF'X THEN                  /* IF DEV IS READY     Y01906* 03520000
         LA    @0,X'FF'                                           0098  03530000
         CR    @0,@F                                              0098  03540000
*    GOTO DEVCHK;                        /* CONTINUE CHECKING   Y01906* 03550000
         BC    07,DEVCHK                                          0099  03560000
*  IF TAPE ¬= '1'B THEN                  /* IF NOTRDY & NOT TAPEY01906* 03570000
         TM    0(@8),B'10000000'                                  0100  03580000
*    GOTO DPMSG1;                        /* GO ISSUE MESSAGE          * 03590000
         BC    12,DPMSG1                                          0101  03600000
*  TAPEBIT = '1'B;                       /* UCB NOTRDY BIT OFF  Y01906* 03610000
         OI    14(@7),B'00010000'                                 0102  03620000
*                                                                       03630000
*                                                                       03640000
*                                                                       03650000
*  /******************************************************************* 03660000
*  /*                                                                 * 03670000
*  /*           DETERMINE CLASS AND TYPE OF DEVICE                    * 03680000
*  /*                                                                 * 03690000
*  /******************************************************************* 03700000
*                                                                       03710000
*         DEVCHK:                       /*                      Y02906* 03720000
*         IF TP = '1'B |                /* IF DEVICE IS EITHER  Y02906* 03730000
*            GRAPH = '1'B THEN          /* OR GRAPHICS NO READ  Y02906* 03740000
DEVCHK   TM    0(@8),B'01000000'                                  0103  03750000
         BC    01,@9F3                                            0103  03760000
         TM    0(@8),B'00010000'                                  0103  03770000
         BC    12,@9F2                                            0103  03780000
*            DO;                        /* ARE NEEDED THERE-    Y02906* 03790000
*             DPDONE = '1'B;            /* FORE SET DP COMPLETE Y02906* 03800000
@9F3     OI    12(@7),B'00100000'                                 0105  03810000
*             GO TO TORET;              /* BIT IN DEVTAB AND    Y02906* 03820000
         BC    15,TORET                                           0106  03830000
*            END;                       /* GO EXIT MODULE       Y02906* 03840000
*                                       /*                      Y02906* 03850000
*         IF TAPE = '1'B |              /* IF DEVICE IS ETHER   Y02906* 03860000
*            UNIT = '1'B THEN           /* TAPE OR UNIT RECORD  Y02906* 03870000
@9F2     TM    0(@8),B'10000000'                                  0108  03880000
         BC    01,@9F1                                            0108  03890000
         TM    0(@8),B'00001000'                                  0108  03900000
         BC    12,@9F0                                            0108  03910000
*            DO;                        /* GO TO TAPE PROTECT   Y02906* 03920000
*             UTSCAL = '0'B;            /* MODULES MAY BE DELETEY02906* 03930000
@9F1     NI    A00000+6,B'01111111'                               0110  03940000
*         CLM03: GEN( IFDMOD CALL='03');/* CALL IFDOLTO3        Y02906* 03950000
CLM03     IFDMOD CALL='03'                                              03960000
         DS    0H                                                       03970000
*            R6 = R15;                  /* SAVE RTN CODE IN R6  Y02906* 03980000
         LR    @6,@F                                              0112  03990000
*            GEN(IFDMOD DELETE='03');   /* DELETE MODULE        YM4982* 04000000
         IFDMOD DELETE='03'                                             04010000
         DS    0H                                                       04020000
*         RTNCHK:                       /* CHECK THE RETURN     Y02906* 04030000
*            IF R6 = 4 |                /* CODE FOR NOT ENOUGH  Y02906* 04040000
*               R6 = 8 THEN             /* CORE OR MODULE NOT   Y02906* 04050000
RTNCHK   CH    @6,@D1                                             0114  04060000
         BC    08,@9EF                                            0114  04070000
         CH    @6,@D2                                             0114  04080000
         BC    07,@9EE                                            0114  04090000
*               NURUN = '1'B;           /* FOUND. IF NON ZERO   Y02906* 04100000
@9EF     OI    A00000+3,B'01000000'                               0115  04110000
*            GO TO TORET;               /* SET NURUN  BIT AND   Y02906* 04120000
         BC    15,TORET                                           0116  04130000
*            END;                       /* EXIT MODULE          Y02906* 04140000
*         IF DASD = '1'B THEN DO;       /* IS THIS A DASD AND   YM4764* 04150000
@9F0     TM    0(@8),B'00100000'                                  0118  04160000
         BC    12,@9ED                                            0118  04170000
*          DVEXT2='FFFFFFFFFFFF'X;                            /*YM4764* 04180000
         MVC   22(6,@7),@X9                                       0120  04190000
*           IF  TYPE = '06'X |          /* A 2305 MOD I OR      YM4764* 04200000
*            TYPE = '07'X |             /* A 2305 MOD II OR   @ZA15466* 04210000
*            TYPE = '0B'X THEN          /* A 3350?            @ZA15466* 04220000
         CLI   1(@8),X'06'                                        0121  04230000
         BC    08,@9EC                                            0121  04240000
         CLI   1(@8),X'07'                                        0121  04250000
         BC    08,@9EB                                            0121  04260000
         CLI   1(@8),X'0B'                                        0121  04270000
         BC    07,@9EA                                            0121  04280000
*             DO;                       /* IF YES               Y02906* 04290000
@9EB     EQU   *                                                  0122  04300000
@9EC     EQU   *                                                  0122  04310000
*         CALL04: UTSCAL = '0'B;        /* TURN OFF UNIT TST CULY02906* 04320000
CALL04   NI    A00000+6,B'01111111'                               0123  04330000
*         CLM04:  GEN(IFDMOD CALL='04');/* AND GO TO IFDOLTO4   Y02906* 04340000
CLM04    IFDMOD CALL='04'                                               04350000
         DS    0H                                                       04360000
*                 R6 = R15;             /* SAVE  04 RTN CODE    Y02906* 04370000
         LR    @6,@F                                              0125  04380000
*                 GEN(IFDMOD DELETE='04'); /* DELETE MODULE     YM4982* 04390000
         IFDMOD DELETE='04'                                             04400000
         DS    0H                                                       04410000
*                 GOTO RTNCHK;          /* GO CK RTN FROM 04    Y02906* 04420000
         BC    15,RTNCHK                                          0127  04430000
*             END;                      /* CONT                 Y02906* 04440000
*        IF  TYPE = '08'X |             /* A 2314  OR           YM4764* 04450000
*             TYPE = '09'X |            /* A 3330A OR         @Y30LPAW* 04460000
*             TYPE = '0A'X |            /* A 3340 OR          @ZA04251* 04470000
*             TYPE = '0D'X THEN          /* A 3330-11         @Y30LPAW* 04480000
@9EA     CLI   1(@8),X'08'                                        0129  04490000
         BC    08,@9E9                                            0129  04500000
         CLI   1(@8),X'09'                                        0129  04510000
         BC    08,@9E8                                            0129  04520000
         CLI   1(@8),X'0A'                                        0129  04530000
         BC    08,@9E7                                            0129  04540000
         CLI   1(@8),X'0D'                                        0129  04550000
         BC    07,@9E6                                            0129  04560000
*             DO;                       /* IF YES               Y02906* 04570000
@9E7     EQU   *                                                  0130  04580000
@9E8     EQU   *                                                  0130  04590000
@9E9     EQU   *                                                  0130  04600000
*         CALL07:                  /* SET UP TO CALL IFDOLT07         * 04610000
*                 UTSCAL = '0'B;        /* TURN OFF UNIT TST CALY02906* 04620000
CALL07   NI    A00000+6,B'01111111'                               0131  04630000
*         CLM07:  GEN(IFDMOD CALL='07');/* AND GO TO IFDOLT07   Y02906* 04640000
CLM07    IFDMOD CALL='07'                                               04650000
         DS    0H                                                       04660000
*                 R6 = R15;             /* SAVE RTN CODE FROM 07Y02906* 04670000
         LR    @6,@F                                              0133  04680000
*                 GEN(IFDMOD DELETE='07'); /* DELETE MODULE     YM4982* 04690000
         IFDMOD DELETE='07'                                             04700000
         DS    0H                                                       04710000
*                 IF CEVOL ='1'B &      /* IF DEV IS CEVOL AND  Y02906* 04720000
*                    DEVSHRD = '1'B THEN/* IS SHARED            Y02906* 04730000
         TM    13(@7),B'00100000'                                 0135  04740000
         BC    12,@9E5                                            0135  04750000
         L     @C,8(0,@7)                                         0135  04760000
         TM    17(@C),B'00100000'                                 0135  04770000
*                    GO TO CALL04;      /* GO CALL IFDOLT07     Y02906* 04780000
         BC    03,CALL04                                          0136  04790000
*                 GO TO RTNCHK;         /* ELSE CHK 07 RTN COD  Y02906* 04800000
         BC    15,RTNCHK                                          0137  04810000
*             END;                      /* CONT                 Y02906* 04820000
*      END;                                                   /*YM4764* 04830000
@9E6     EQU   *                                                  0139  04840000
*         IF CLASSD = '02'X &           /* IS THIS DEVICE       X02008* 04850000
*             TYPED   = '01'X THEN      /* IS THIS DEVICE       X02008* 04860000
@9ED     CLI   38(@7),X'02'                                       0140  04870000
         BC    07,@9E3                                            0140  04880000
         CLI   39(@7),X'01'                                       0140  04890000
*             GO TO SYS7DP;             /* IF YES GO TO MSG RTN X02008* 04900000
         BC    08,SYS7DP                                          0141  04910000
*         NODP =  '1'B;                 /* CANNOT DATA PROTECT  Y02906* 04920000
@9E2     EQU   *                                                  0142  04930000
@9E3     OI    A00000+3,B'00000001'                               0142  04940000
*         GO TO CALL04;                 /* CALL 04 FOR MSG      Y02906* 04950000
         BC    15,CALL04                                          0143  04960000
* /******************************************************************** 04970000
* /*                                                                  * 04980000
* /*                           EXITS                                  * 04990000
* /*                                                                  * 05000000
* /******************************************************************** 05010000
*                                                                       05020000
*  SYS7DP:                               /* GIVE SYSTEM 7 MSG   X02008* 05030000
*   R1 = IFD113;                         /* POINT TO MSG        X02008* 05040000
SYS7DP   L     @C,MSGMOD                                          0144  05050000
         L     @1,124(0,@C)                                       0144  05060000
*   MSGDVAD1 = DEVADEB(5:8);             /* MOVE DEV ADDR TO MSGX02008* 05070000
         MVC   50(4,@1),4(@7)                                     0145  05080000
*  REPLYLGN = '01'X;                     /* SET REPLY LENGTH =1 X02008* 05090000
         MVI   0(@1),X'01'                                        0146  05100000
*   ECB1 = ECB1&&ECB1;                   /* CLEAR THE ECB       X02008* 05110000
         XC    ECB1(4),ECB1                                       0147  05120000
*   REPBFR1 = ' ';                       /* BLANK INPUT BFR     X02008* 05130000
         MVI   REPBFR1,C' '                                       0148  05140000
*   GEN(PWTOR REG=(1));                  /* GO GIVE THE MSG     X02008* 05150000
         PWTOR REG=(1)                                                  05160000
         DS    0H                                                       05170000
*  /* IF 'Y' FOR YES-SET DPDONE AND RETURN; IF 'N' FOR NO-SET   X02008* 05180000
*  /* BYPASS DEVICE AND RETURN; IF NEITHER GIVE MSG AGAIN.      X02008* 05190000
*  IF REPBFR1 = 'Y'                      /* IS REPLY = Y        X02008* 05200000
*     THEN DO;                           /* YES                 X02008* 05210000
         CLI   REPBFR1,C'Y'                                       0150  05220000
         BC    07,@9E1                                            0150  05230000
*      DPDONE = '1'B;                    /* SET DPDONE CE SWITCHX02008* 05240000
         OI    12(@7),B'00100000'                                 0152  05250000
*      GOTO TORET;                       /* RETURN              X02008* 05260000
         BC    15,TORET                                           0153  05270000
*     END;                               /*                     X02008* 05280000
*  IF REPBFR1 = 'N'                      /* IS REPLY = N        X02008* 05290000
*     THEN DO;                           /* YES                 X02008* 05300000
@9E1     CLI   REPBFR1,C'N'                                       0155  05310000
         BC    07,@9E0                                            0155  05320000
*      NUDEV = '1'B;                     /* SET BYPASS DEVICE SWX02008* 05330000
         OI    A00000+3,B'00100000'                               0157  05340000
*      GOTO TORET;                       /* RETURN              X02008* 05350000
         BC    15,TORET                                           0158  05360000
*     END;                               /*                     X02008* 05370000
*     GOTO SYS7DP;                       /* NOT Y OR N REISSUE  X02008* 05380000
* DPMSG1:                                /* MSG BRANCH                * 05390000
*  R1=IFD103;                            /* POINTER TO MSG            * 05400000
DPMSG1   L     @C,MSGMOD                                          0161  05410000
         L     @1,8(0,@C)                                         0161  05420000
*  MSGDVAD = DEVADEB;                    /* DEVICE ADDR TO MSG        * 05430000
         MVC   34(8,@1),0(@7)                                     0162  05440000
*  GEN(PWTO  REG=(1));                   /* PRINT MESSAGE             * 05450000
         PWTO  REG=(1)                                                  05460000
         DS    0H                                                       05470000
*  GOTO TSTPRIM;                         /* TEST FOR PRIMARY DEVICE   * 05480000
*                                                                       05490000
*                                                                       05500000
*                                                                       05510000
*                                                                       05520000
* TSTPRIM:                               /* TEST FOR PRIMARY DEVICE   * 05530000
*          IF PRIME = '1'B THEN          /* PRIMARY DEVICE?           * 05540000
TSTPRIM  TM    12(@7),B'01000000'                                 0165  05550000
         BC    12,@9DF                                            0165  05560000
*            NUDEV = '1'B;               /* SET BYPASS BIT            * 05570000
         OI    A00000+3,B'00100000'                               0166  05580000
* TORET:                                 /* RETURN BRANCH             * 05590000
*  UTSCAL= '0'B;                         /* MODULES CAN BE DELETED    * 05600000
@9DF     EQU   *                                                  0167  05610000
TORET    NI    A00000+6,B'01111111'                               0167  05620000
*         DPMSG='0'B;              /*TURN OFF DP MSG FLAG       X02008* 05630000
         NI    A00019,B'11111110'                                 0168  05640000
*  RETURN;                               /* RETURN TO CALLER          * 05650000
*  END;                                                                 05660000
@EL01    L     @D,4(0,@D)                                         0170  05670000
         LM    @E,@C,12(@D)                                       0170  05680000
         BCR   15,@E                                              0170  05690000
@DATA1   EQU   *                                                        05700000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           05710000
@1       EQU   01                                                       05720000
@2       EQU   02                                                       05730000
@3       EQU   03                                                       05740000
@4       EQU   04                                                       05750000
@5       EQU   05                                                       05760000
@6       EQU   06                                                       05770000
@7       EQU   07                                                       05780000
@8       EQU   08                                                       05790000
@9       EQU   09                                                       05800000
@A       EQU   10                                                       05810000
@B       EQU   11                                                       05820000
@C       EQU   12                                                       05830000
@D       EQU   13                                                       05840000
@E       EQU   14                                                       05850000
@F       EQU   15                                                       05860000
@D1      DC    H'4'                                                     05870000
@D2      DC    H'8'                                                     05880000
         DS    0F                                                       05890000
@X9      DC    X'FFFFFFFFFFFF'                                          05900000
         DS    0D                                                       05910000
@DATA    EQU   *                                                        05920000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   05930000
Y        EQU   00000000            FULLWORD INTEGER                     05940000
R0       EQU   00000000            FULLWORD POINTER REGISTER            05950000
R1       EQU   00000001            FULLWORD POINTER REGISTER            05960000
R2       EQU   00000002            FULLWORD POINTER REGISTER            05970000
R3       EQU   00000003            FULLWORD POINTER REGISTER            05980000
R4       EQU   00000004            FULLWORD POINTER REGISTER            05990000
R5       EQU   00000005            FULLWORD POINTER REGISTER            06000000
R6       EQU   00000006            FULLWORD POINTER REGISTER            06010000
R7       EQU   00000007            FULLWORD POINTER REGISTER            06020000
R8       EQU   00000008            FULLWORD POINTER REGISTER            06030000
R9       EQU   00000009            FULLWORD POINTER REGISTER            06040000
R10      EQU   00000010            FULLWORD POINTER REGISTER            06050000
R11      EQU   00000011            FULLWORD POINTER REGISTER            06060000
R12      EQU   00000012            FULLWORD POINTER REGISTER            06070000
R13      EQU   00000013            FULLWORD POINTER REGISTER            06080000
R14      EQU   00000014            FULLWORD POINTER REGISTER            06090000
R15      EQU   00000015            FULLWORD POINTER REGISTER            06100000
A00026   EQU   00000000            56 BYTE(S) ON WORD                   06110000
DEVADEB  EQU   A00026+00000000     8 BYTE(S)                            06120000
DUCBA    EQU   A00026+00000008     FULLWORD POINTER                     06130000
DEVFL1   EQU   A00026+00000012     1 BYTE(S)                            06140000
ONLNE    EQU   A00026+00000012     1 BIT(S)                             06150000
PRIME    EQU   A00026+00000012     1 BIT(S)                             06160000
DPDONE   EQU   A00026+00000012     1 BIT(S)                             06170000
ACTVE    EQU   A00026+00000012     1 BIT(S)                             06180000
ALLCT    EQU   A00026+00000012     1 BIT(S)                             06190000
GRBED    EQU   A00026+00000012     1 BIT(S)                             06200000
FLPRT    EQU   A00026+00000012     1 BIT(S)                             06210000
ACTSC    EQU   A00026+00000012     1 BIT(S)                             06220000
DEVFL2   EQU   A00026+00000013     1 BYTE(S)                            06230000
DSNAME   EQU   A00026+00000013     1 BIT(S)                             06240000
SHARED   EQU   A00026+00000013     1 BIT(S)                             06250000
CEVOL    EQU   A00026+00000013     1 BIT(S)                             06260000
STDLBL   EQU   A00026+00000013     1 BIT(S)                             06270000
CHANFUNC EQU   A00026+00000013     1 BIT(S)                             06280000
BYPS     EQU   A00026+00000013     1 BIT(S)                             06290000
CEDE     EQU   A00026+00000013     1 BIT(S)                             06300000
ATTN     EQU   A00026+00000013     1 BIT(S)                             06310000
DEVFL3   EQU   A00026+00000014     1 BYTE(S)                            06320000
A00027   EQU   A00026+00000014     3 BIT(S)                             06330000
TAPEBIT  EQU   A00026+00000014     1 BIT(S)                             06340000
A00028   EQU   A00026+00000014     2 BIT(S)                             06350000
CESHRMSG EQU   A00026+00000014     1 BIT(S)                             06360000
DEVFL4   EQU   A00026+00000015     1 BYTE(S)                            06370000
DVEXT1   EQU   A00026+00000016     6 BYTE(S)                            06380000
DVEXT2   EQU   A00026+00000022     6 BYTE(S)                            06390000
A00029   EQU   A00026+00000028     2 BYTE(S)                            06400000
MODESET  EQU   A00026+00000030     1 BYTE(S)                            06410000
EXPOSURE EQU   A00026+00000031     1 BYTE(S)                            06420000
DEHAD    EQU   A00026+00000032     4 BYTE(S)                            06430000
CDSINFOR EQU   A00026+00000036     16 BYTE(S)                           06440000
MODEL    EQU   A00026+00000036     1 BYTE(S)                            06450000
FEATURES EQU   A00026+00000037     1 BYTE(S)                            06460000
CLASSD   EQU   A00026+00000038     1 BYTE(S)                            06470000
TYPED    EQU   A00026+00000039     1 BYTE(S)                            06480000
CDSCNT   EQU   A00026+00000040     1 BYTE(S)                            06490000
CDSFLAGS EQU   A00026+00000041     1 BYTE(S)                            06500000
DVCDSFPM EQU   A00026+00000041     1 BIT(S)                             06510000
A00030   EQU   A00026+00000041     1 BIT(S)                             06520000
DVCDSCEV EQU   A00026+00000041     1 BIT(S)                             06530000
A00031   EQU   A00026+00000041     4 BIT(S)                             06540000
REMLINE  EQU   A00026+00000041     1 BIT(S)                             06550000
EXTSGMSK EQU   A00026+00000042     2 BYTE(S)                            06560000
SYMNAME  EQU   A00026+00000044     8 BYTE(S)                            06570000
A00032   EQU   A00026+00000052     4 BYTE(S)                            06580000
A00033   EQU   00000000            2 BYTE(S)                            06590000
CLASS    EQU   A00033+00000000     8 BIT(S)                             06600000
TAPE     EQU   A00033+00000000     1 BIT(S)                             06610000
TP       EQU   A00033+00000000     1 BIT(S)                             06620000
DASD     EQU   A00033+00000000     1 BIT(S)                             06630000
GRAPH    EQU   A00033+00000000     1 BIT(S)                             06640000
UNIT     EQU   A00033+00000000     1 BIT(S)                             06650000
A00034   EQU   A00033+00000000     3 BIT(S)                             06660000
TYPE     EQU   A00033+00000001     8 BIT(S)                             06670000
DEVUCB   EQU   00000000            20 BYTE(S) ON WORD                   06680000
A00035   EQU   DEVUCB+00000000     FULLWORD INTEGER                     06690000
A00036   EQU   DEVUCB+00000004     FULLWORD INTEGER                     06700000
A00037   EQU   DEVUCB+00000004     2 BYTE(S)                            06710000
A00038   EQU   DEVUCB+00000006     1 BYTE(S)                            06720000
A00039   EQU   DEVUCB+00000008     2*FULLWORD INTEGER                   06730000
A00040   EQU   DEVUCB+00000016     1 BYTE(S)                            06740000
A00041   EQU   DEVUCB+00000017     1 BYTE(S)                            06750000
A00042   EQU   DEVUCB+00000017     2 BIT(S)                             06760000
DEVSHRD  EQU   DEVUCB+00000017     1 BIT(S)                             06770000
A00043   EQU   DEVUCB+00000017     5 BIT(S)                             06780000
UCBDEVDS EQU   DEVUCB+00000018     2 BYTE(S)                            06790000
HCODE    EQU   00000084            1 BYTE(S)                            06800000
A00049   EQU   00000000            128 BYTE(S) ON WORD                  06810000
A00050   EQU   A00049+00000000     2*FULLWORD POINTER                   06820000
IFD103   EQU   A00049+00000008     FULLWORD POINTER                     06830000
A00051   EQU   A00049+00000012     28*FULLWORD POINTER                  06840000
IFD113   EQU   A00049+00000124     FULLWORD POINTER                     06850000
MSGDVAD  EQU   00000034            8 BYTE(S)                            06860000
MSGDVAD1 EQU   00000050            4 BYTE(S)                            06870000
REPLYLGN EQU   00000000            1 BYTE(S)                            06880000
ECB1     EQU   @DATA+00000072      FULLWORD INTEGER                     06890000
REPBFR1  EQU   @DATA+00000076      1 BYTE(S)                            06900000
         DS    00000077C                                                06910000
@TEMPS   DS    0F                                                       06920000
DSECT48  IFDCOM                                                         06930000
VID      EQU   WKSVC+00000002      2 BYTE(S)                            06940000
MID1     EQU   MCT+00000010        2 BYTE(S)                            06950000
A00000   EQU   CESWT+00000000      7 BYTE(S) ON WORD                    06960000
A00001   EQU   A00000+00000000     8 BIT(S)                             06970000
A00002   EQU   A00000+00000000     1 BIT(S)                             06980000
PROTECT  EQU   A00000+00000000     1 BIT(S)                             06990000
OORN     EQU   A00000+00000000     2 BIT(S)                             07000000
A00003   EQU   A00000+00000001     8 BIT(S)                             07010000
A00004   EQU   A00000+00000001     4 BIT(S)                             07020000
FILMSK   EQU   A00000+00000001     1 BIT(S)                             07030000
A00005   EQU   A00000+00000002     8 BIT(S)                             07040000
A00006   EQU   A00000+00000002     3 BIT(S)                             07050000
CHANTEST EQU   A00000+00000002     1 BIT(S)                             07060000
A00007   EQU   A00000+00000002     2 BIT(S)                             07070000
TAPEHDR  EQU   A00000+00000002     1 BIT(S)                             07080000
A00008   EQU   A00000+00000003     8 BIT(S)                             07090000
A00009   EQU   A00000+00000003     1 BIT(S)                             07100000
BYPDEV   EQU   A00000+00000003     2 BIT(S)                             07110000
NURUN    EQU   A00000+00000003     1 BIT(S)                             07120000
NUDEV    EQU   A00000+00000003     1 BIT(S)                             07130000
A00010   EQU   A00000+00000003     1 BIT(S)                             07140000
SUSDEL   EQU   A00000+00000003     1 BIT(S)                             07150000
A00011   EQU   A00000+00000003     2 BIT(S)                             07160000
NODP     EQU   A00000+00000003     1 BIT(S)                             07170000
A00012   EQU   A00000+00000004     8 BIT(S)                             07180000
A00013   EQU   A00000+00000005     8 BIT(S)                             07190000
A00014   EQU   A00000+00000006     8 BIT(S)                             07200000
UTSCAL   EQU   A00000+00000006     1 BIT(S)                             07210000
A00015   EQU   A00000+00000006     1 BIT(S)                             07220000
A00016   EQU   CESWTR+00000000     1 BYTE(S)                            07230000
RETAINAC EQU   A00016+00000000     1 BIT(S)                             07240000
A00017   EQU   A00016+00000000     1 BIT(S)                             07250000
REMNOMSG EQU   A00016+00000000     1 BIT(S)                             07260000
A00018   EQU   A00016+00000000     5 BIT(S)                             07270000
A00019   EQU   CESWTR2+00000000    1 BYTE(S)                            07280000
A00020   EQU   A00019+00000000     7 BIT(S)                             07290000
DPMSG    EQU   A00019+00000000     1 BIT(S)                             07300000
A00021   EQU   CHASCT+00000010     1 BYTE(S)                            07310000
A00022   EQU   A00021+00000000     1 BIT(S)                             07320000
FPM      EQU   A00021+00000000     1 BIT(S)                             07330000
A00023   EQU   CHASCT+00000011     1 BYTE(S)                            07340000
CDSFPM   EQU   A00023+00000000     1 BIT(S)                             07350000
A00024   EQU   A00023+00000000     1 BIT(S)                             07360000
CDSCEVOL EQU   A00023+00000000     1 BIT(S)                             07370000
A00025   EQU   A00023+00000000     5 BIT(S)                             07380000
A00044   EQU   ROPT+00000000       8 BYTE(S) ON WORD                    07390000
UCBADDR  EQU   A00044+00000000     4 BYTE(S)                            07400000
FLAG1    EQU   A00044+00000004     4 BYTE(S)                            07410000
A00045   EQU   A00044+00000004     8 BIT(S)                             07420000
NOTRDY   EQU   A00044+00000004     1 BIT(S)                             07430000
A00046   EQU   A00044+00000004     7 BIT(S)                             07440000
A00047   EQU   A00044+00000005     3 BYTE(S)                            07450000
SVCLIST  EQU   ROPT+00000000       5 BYTE(S) ON WORD                    07460000
A00048   EQU   SVCLIST+00000000    FULLWORD INTEGER                     07470000
SVCFLG   EQU   SVCLIST+00000004    1 BYTE(S)                            07480000
@DATEND  EQU   *                                                        07490000
@9EE     EQU   TORET                                                    07500000
@9E5     EQU   RTNCHK                                                   07510000
@9E4     EQU   RTNCHK                                                   07520000
@9E0     EQU   SYS7DP                                                   07530000
         END    ,(C'PL/S',1400,76322)                                   07540000
./  ADD  SSI=81161462,NAME=IFDOLT53
         TITLE 'IFDOLT53 RESTORE TAPE LABELS'                           00010000
         TITLE 'IFDOLT53 RESTORE TAPE LABELS,INDICATE MSS STATUS'       00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT53 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT53 26 APR 78'                             0002  00070000
         STM   @E,@C,12(@D)                                       0002  00080000
         BALR  @B,0                                               0002  00090000
@PSTART  DS    0H                                                 0002  00100000
         USING @PSTART+00000,@B                                   0002  00110000
         ST    @D,@SAV001+4                                       0002  00120000
         LA    @F,@SAV001                                         0002  00130000
         ST    @F,8(0,@D)                                         0002  00140000
         LR    @D,@F                                              0002  00150000
*  GEN(USING CHASCT,2);                  /* COMMON AREA BASE REGISTER * 00160000
         USING CHASCT,2                                                 00170000
         DS    0H                                                       00180000
* /******************************************************************** 00190000
* /*                                                                  * 00200000
* /*                 CCW STRING FOR WRITING TAPE LABEL                * 00210000
* /*                                                                  * 00220000
* /******************************************************************** 00230000
*         GENERATE DATA;                                                00240000
*         GEN DATA;                                                     00250000
* GENERATE DATA;                                                        00260000
*  /******************************************************************* 00270000
*  /*                                                                 * 00280000
*  /*                     DECLARED  REGISTERS                         * 00290000
*  /*                                                                 * 00300000
*  /******************************************************************* 00310000
*  DCL R0  REG(0)  PTR;                                                 00320000
*  DCL R1  REG(1)  PTR;                                                 00330000
*  DCL R2  REG(2)  PTR;                                                 00340000
*  DCL R3  REG(3)  PTR;                                                 00350000
*  DCL R4  REG(4)  PTR;                                                 00360000
*  DCL R5  REG(5)  PTR;                                                 00370000
*  DCL R6  REG(6)  PTR;                                                 00380000
*  DCL R7  REG(7)  PTR;                                                 00390000
*  DCL R8  REG(8)  PTR;                                                 00400000
*  DCL R9  REG(9)  PTR;                                                 00410000
*  DCL R10 REG(10) PTR;                                                 00420000
*  DCL R11 REG(11) PTR;                                                 00430000
*  DCL R12 REG(12) PTR;                                                 00440000
*  DCL R13 REG(13) PTR;                                                 00450000
*  DCL R14 REG(14) PTR;                                                 00460000
*  DCL R15 REG(15) PTR;                                                 00470000
*         RESTRICT(2,4,5,7,8);                              /*@ZA15468* 00480000
*  DCL ROPT GENERATED;                   /* SVC AREA            X02906* 00490000
*  DCL WKSVC GENERATED;                  /* SVC WORK AREA       X02906* 00500000
*  DCL MCT GENERATED;                    /* MODULE CONTROL TABLEX02906* 00510000
*  DCL VID CHAR(2) BASED(ADDR(WKSVC)+2); /* MODID IN SVC PLIST  X02906* 00520000
*  DCL MID1 CHAR(2) BASED(ADDR(MCT)+10); /* MY MODID            X02906* 00530000
*                                                                       00540000
*  /******************************************************************* 00550000
*  /*                                                                 * 00560000
*  /*           EXIO PARAMETER LIST                                   * 00570000
*  /*                                                                 * 00580000
*  /******************************************************************* 00590000
*                                                                       00600000
*                                       /* IO EFFECTOR CNTL BLK Y02906* 00610000
*                                       /* IN COMMON AREA       Y02906* 00620000
*  DCL EFCTRCB CHAR(20) GEND;           /* IO EFFECTOR CONTROL BLOCK  * 00630000
*  DCL CCWPTR PTR(31) GEND;             /* CCW LIST POINTER     Y02906* 00640000
*  DCL DVTPTR PTR(31) GEND;             /* DEVICE TABEL POINTER Y02906* 00650000
*  DCL FLGA   BIT(8)  GEND;             /* FLAG BYTE 1          Y02906* 00660000
*                                                                       00670000
*  DCL FLGB   BIT(8)  GEND;             /* FLAG BYTE 2          Y02906* 00680000
*                                                                       00690000
* DCL 1 FLG1A BIT(8) BASED(ADDR(FLGA)),                                 00700000
*       3 BYPASS BIT(1);                 /* BYPASS PREFIX       Y02906* 00710000
*                                                                       00720000
*  DCL 1 FLG2 BIT(8) BASED(ADDR(FLGB)),                       /*Y02906* 00730000
*        3 INTCALL BIT(1),              /* INTERNAL CALL FOR IO Y02906* 00740000
*        3 MODEREQ BIT(1);              /* IF ON MODE SET REQ   Y02906* 00750000
*  DCL FILEMSK CHAR(1) GEND;            /* FILE MSK FOR IOEFFEC Y02906* 00760000
* DCL SNSCNT CHAR(1) GEND;                                              00770000
* DCL TECBPTRX PTR(31) GEND;                                            00780000
*  DCL IORTNADR GEND;                   /* ADDR OF IO EFFECTOR  Y02906* 00790000
*         DCL 1 WAITLST CHAR(16) BDY(WORD), /* WAITIO LIST      Y02906* 00800000
*              3 XMGR CHAR(1) INIT('00'X), /* TRANS MGR STUFF   Y02906* 00810000
*              3 LVL CHAR(1) INIT('02'X),/* WAITIO LVL          Y02906* 00820000
*              3 MODID CHAR(2) INIT('36'), /* IFDOLT36 ID       Y02906* 00830000
*              3 TECBPTR PTR(31) INIT(ADDR(TECB)),/* TECB ADDR  Y02906* 00840000
*              3 CDSPTR PTR(31) INIT(0),  /*CDS = 0             Y02906* 00850000
*              3 FLG BIT(8) INIT('80'X), /* SET WAIT = YES      Y02906* 00860000
*               5 WAITYES BIT(1),        /* FLAG TO 1           Y02906* 00870000
*              3 TIME CHAR(2) INIT('001E'X); /* TIME IN SECONDS Y02906* 00880000
*                                                                       00890000
*                                                                       00900000
*                                                                       00910000
*  /******************************************************************* 00920000
*  /*                                                                 * 00930000
*  /*                COMMUNICATION SWITCH STRUCTURE                   * 00940000
*  /*                                                                 * 00950000
*  /******************************************************************* 00960000
*                                                                       00970000
*  DCL CESWT CHAR(5) GENERATED;     /* COMMUNICATION SWITCHES         * 00980000
*  DCL 1 * BASED(ADDR(CESWT)),      /*                                * 00990000
*        3 * BIT(8),                /* CESWT                          * 01000000
*          5 * BIT(1),              /* NA                             * 01010000
*          5 PROTECT BIT(1),        /* DP FOR PRIMARY OR SEC DEVICE   * 01020000
*          5 * BIT(6),              /* NA                             * 01030000
*        3 * BIT(8),                /* CESWT1                         * 01040000
*          5 * BIT(1),              /* NA                             * 01050000
*          5 SEEK2321 BIT(1),       /* SEEK ONLY COMMANDS ON 2321     * 01060000
*          5 SECONLOK BIT(1),       /* SEC DEV ONLINE OK              * 01070000
*          5 * BIT(1),              /* NA                             * 01080000
*          5 FILMSK BIT(1),         /* ALLOWS FILE MASK CHANGES       * 01090000
*          5 T2321 BIT(1),          /* T2321 IS DEV BEING TESTED      * 01100000
*          5 ONLINEOK BIT(1),       /* DEV IS ONLINE PROCEED          * 01110000
*          5 * BIT(1),              /* NA                             * 01120000
*        3 * BIT(8),                /* CESWT2                         * 01130000
*          5 NDCFO BIT(1),          /* PREV OCCUR OF DYN COMM INTERVAL* 01140000
*          5 DPONDEV BIT(1),        /* DP HAS BEEN DONE ON THIS DEV   * 01150000
*          5 * BIT(1),              /* NA                             * 01160000
*          5 CHANTEST BIT(1),       /* DATA PROT TO BE DONE ON CHAN   * 01170000
*          5 * BIT(1),              /* NA                             * 01180000
*          5 * BIT(1),              /* NA                             * 01190000
*          5 TAPEHDR BIT(1),        /* TAPE HEADER IS TO BE WRITTEN   * 01200000
*          5 DEVDPOK BIT(1),        /* DP ON DEVICE WAS SUCCESSFUL    * 01210000
*        3 * BIT(8),                /* CESWT3                         * 01220000
*          5 * BIT(1),              /* NA                             * 01230000
*          5 BYPALDEV BIT(1),       /* BYPASS ALL TESTS AND DEVICES   * 01240000
*          5 BYPDEV BIT(1),         /* BYPASS TESTS ON THIS DEVICE    * 01250000
*          5 * BIT(1),              /* NA                             * 01260000
*         5 SUSDEL BIT(1),               /* SUSPENDED DELETION   M4506* 01270000
*          5 * BIT(1),              /* NA                             * 01280000
*          5 * BIT(1),              /* NA                             * 01290000
*          5 STDLAB BIT(1);         /* STANDARD LABEL                 * 01300000
*                                                                       01310000
*         DCL   CESWT8 CHAR(1) GENERATED; /* ADDRESS OF SWITCH  X02906* 01320000
*         DCL   1 * BASED(ADDR(CESWT8)), /* SET ADDR FOR LETGO CHECK*/  01330000
*                 3 * BIT(2),            /* NOT USED BITS            */ 01340000
*                 3  LETGO BIT(1);       /* LETGO REQUEST       X02906* 01350000
*                                                                       01360000
* /******************************************************************** 01370000
* /*                                                                  * 01380000
* /*                      DEVICE TABLE STRUCTURE                      * 01390000
* /*                                                                  * 01400000
* /******************************************************************** 01410000
*                                                                       01420000
*         DCL DEVTBPTR PTR GENERATED;      /* PTR TO DEVTAB      21050* 01430000
*         DCL TABLNGTH FIXED(15)         /* LENGTH OF DEVTAB    S21050* 01440000
*           GENERATED;                   /* ENTRY               S21050* 01450000
*         DCL  1 * BASED(R7),          /*                       S21050* 01460000
*         3 DEVADEB CHAR(8),             /* DEV ADDR IN EBCDIC        * 01470000
*                3 UCBAD POINTER(31),  /* UCB ADDR (2BYTES)     S21050* 01480000
*                3 DEVFLG1 CHAR(1),    /* FLAG BYTE #1          S21050* 01490000
*                 5 STATUS BIT(1),     /* ON LINE VS. OFF-LINE  S21050* 01500000
*                 5 PRIMARY BIT(1),    /* PRIMARY BIT           S21050* 01510000
*                 5 DPDONE  BIT(1),    /* D.P. COMPLETE         S21050* 01520000
*                 5 *       BIT(3),    /* FILL                  S21050* 01530000
*                 5 FILEPROT BIT(1),   /* F.P. MODE OPERATION   S21050* 01540000
*                 5 *       BIT(1),    /* FILL                  S21050* 01550000
*                3 DEVFLG2 CHAR(1),    /* FLAG BYTE # 2         S21050* 01560000
*                 5 * BIT(3),          /* FILL                  S21050* 01570000
*                 5   STDLABL BIT(1),  /* STANDARD TAPE LABEL   S21050* 01580000
*                 5 * BIT(4),          /* FILL                  S21050* 01590000
*                3 DEVFLG3 CHAR(1),    /* FLAG BYTE # 3         S21050* 01600000
*                 5 * BIT(3),            /* N/A                 X02906* 01610000
*                 5 TAPEBIT BIT (1),     /* RESET UCB NOTRDY FLGX02906* 01620000
*                 5 * BIT(4),            /* N/A                 X02906* 01630000
*                3 DEVFLG4 CHAR(1),    /* FLAG BYTE # 3         S21050* 01640000
*                3 TAPELABL CHAR(16),  /* TAPE LABEL SAVE AREA  S21050* 01650000
*                 5 VOL CHAR(10),      /* VOL NAME              S21050* 01660000
*                 5 HDR CHAR (4),      /* HDR NAME              S21050* 01670000
*                 5 MODESV CHAR(1),    /* MODE SAVE AREA        S21050* 01680000
*                 5 * CHAR(1),         /* FILL                  S21050* 01690000
*                3 ADRHEX CHAR (4),    /* 4 BYTE HEX ADDRESS    S21050* 01700000
*                 5 * CHAR(2),         /* FILL                  S21050* 01710000
*                 5 HEXAD CHAR(2);     /* 2 BYTE HEX ADDRESS    S21050* 01720000
*                                                                       01730000
*  /**********************************************************@ZA15468* 01740000
*  /*                                                         @ZA15468* 01750000
*  /*                     UCB DEVICE CLASS-TYPE STRUCTURE     @ZA15468* 01760000
*  /*                                                         @ZA15468* 01770000
*  /**********************************************************@ZA15468* 01780000
*                                                                       01790000
*  DCL 1 * BASED(R8),                    /*                   @ZA15468* 01800000
*        3 UCBOB CHAR(24),               /* UCB STRUCTURE     @ZA15468* 01810000
*          5 *        CHAR(16),          /* N/A               @ZA15468* 01820000
*          5 MODEL    CHAR(1),           /* MODEL OPTIONS     @ZA15468* 01830000
*          5 FEATURES CHAR(1),           /* DEVICE FEATURES   @ZA15468* 01840000
*          5 CLASS    CHAR(1),           /* DEVICE CLASS      @ZA15468* 01850000
*          5 TYPE     CHAR(1);           /* DEVICE TYPE       @ZA15468* 01860000
*                                                                       01870000
*                                                                       01880000
*  /******************************************************************* 01890000
*  /*                                                                 * 01900000
*  /*                  TEST EVENT CONTROL BLOCK FIELD                 * 01910000
*  /*                                                                 * 01920000
*  /******************************************************************* 01930000
*                                                                       01940000
*         DCL 1 TECB,                     /* EVENT BLOCK FOR IO Y02906* 01950000
*               2 FLDCNT CHAR(1) INIT('01'X),  /* NUMBER FDLS   Y02906* 01960000
*               2 FLDSIZE CHAR(1) INIT('0C'X), /* SIZE EACH FLD Y02906* 01970000
*               2 SOMETNG CHAR(1) INIT('00'X), /* N/A           Y02906* 01980000
*               2 SNSSIZE CHAR(1) INIT('18'X), /* SENSE EXPTD   Y02906* 01990000
*               2 FLG1 CHAR(1) INIT('00'X),    /* FLAGS         Y02906* 02000000
*               2 SNSCNTTB CHAR(1) INIT('01'X), /* XPECTED COUNTY02906* 02010000
*               2 CLRTECB  CHAR(39),     /* LABEL TO CLEAR TECB YM3336* 02020000
*                 3 CNTSNS CHAR(1) INIT('00'X), /* NUMB OCCURED Y02906* 02030000
*                 3 CNTINT CHAR(1) INIT('00'X), /*NUMB INTERRUPTY02906* 02040000
*                 3 CCP CHAR(1),        /* SIO COND CODE        Y02906* 02050000
*                 3 * CHAR(3),          /* N/A                  YM3336* 02060000
*                 3 CSW1 CHAR(8),       /* CSW NO. ONE          Y02906* 02070000
*                   5 * CHAR(4),        /* N/A                  Y02906* 02080000
*                   5 STATUSX CHAR(2),  /* TWO STATUS BYTES     Y02906* 02090000
*                     7 EXIOK CHAR(1),  /* STATUS BYTE 1        Y02906* 02100000
*                       9 * BIT(6),     /* N/A                  Y02906* 02110000
*                       9 UNITCK BIT(1), /* UNIT CHECK          Y02906* 02120000
*                       9 UNITEXCP BIT(1), /* UNIT EXCEPTION BITY02906* 02130000
*                     7 BYTE2 CHAR(1),  /* STATUS BYTE 2        Y02906* 02140000
*                       9 * BIT(1),     /* N/A                  Y02906* 02150000
*                       9 INLENGTH  BIT(1), /* INCORR LNG IND   Y02906* 02160000
*                       9 * BIT(6),     /* N/A                  Y02906* 02170000
*                   5 * CHAR(2),        /* N/A                  Y02906* 02180000
*                 3 SENSE CHAR(24),     /* SENSE COUNT          Y02906* 02190000
*                   5 * CHAR(3),        /* N/A                  Y02906* 02200000
*                   5 SNS1 CHAR(7),     /* SENSE BYTES          Y02906* 02210000
*                     7 SNSFLD BIT(8),  /* BYTE0  SENSE         Y02906* 02220000
*                       9 * BIT(1),     /* N/A                  Y02906* 02230000
*                       9 SNS2 BIT(1),  /* BIT 1 SNS BYTE 0     Y02906* 02240000
*                     7 * CHAR(2),      /* SNS BYTES 1 & 2      Y02906* 02250000
*                     7 * BIT(8),       /* SNS BYTE 3           Y02906* 02260000
*                       9 * BIT(5),     /* FILL                 Y02906* 02270000
*                       9 PEIND BIT(1), /* BIT 5 BYTE3 OF SNS   Y02906* 02280000
*                     7 * CHAR(2),      /* SENCE BYTES 4 AND 5  Y02906* 02290000
*                     7 * CHAR(1),      /* SENCE BYTE 6         Y02906* 02300000
*                       9 * BIT(4),     /* NOT REFERENCED       Y02906* 02310000
*                       9 BIT4 BIT(1);  /* BIT FOUR FOR BIRTCH  Y03128* 02320000
*  /**********************************************************@ZA15468* 02330000
*  /*                                                         @ZA15468* 02340000
*  /*                     MSS STATUS BYTE STRUCTURE           @ZA15468* 02350000
*  /*                                                         @ZA15468* 02360000
*  /**********************************************************@ZA15468* 02370000
*                                                                       02380000
*  DCL MSSSTAT CHAR(1) GENERATED;        /* MSS STATUS BYTE   @ZA15468* 02390000
*  DCL 1 * CHAR(1) BASED(ADDR(MSSSTAT)), /*                   @ZA15468* 02400000
*        3 FINITSW BIT(1),               /* FUNCT INIT BIT    @ZA15468* 02410000
*        3 DINITSW BIT(1),               /* DIAGN INIT BIT    @ZA15468* 02420000
*        3 INITSW  BIT(1),               /* INTERFACE STATUS  @ZA15468* 02430000
*        3 *       BIT(5);               /* N/A               @ZA15468* 02440000
*                                                                       02450000
*  /******************************************************************* 02460000
*  /*                                                                 * 02470000
*  /*                    MESSAGE STRUCTURES                           * 02480000
*  /*                                                                 * 02490000
*  /******************************************************************* 02500000
*                                                                       02510000
*         DCL IFDMSG53 EXT ENTRY;        /*MESSAGE MODULE             * 02520000
*  DCL 1 * BASED(R4),               /* MESSAGE ADDRESS                * 02530000
*        3 MSG1 PTR,                /* POINTER TO MESSAGE             * 02540000
*        3 MSG2 PTR,                     /* PTR TO IFD137I    @ZA15468* 02550000
*        3 MSG3 PTR,                     /* PTR TO IFD139D    @ZA15468* 02560000
*        3 MSG4 PTR,                     /* PTR TO IFD476I    @ZA15468* 02570000
*        3 MSG5 PTR;                     /* PTR TO IFD477I    @ZA15468* 02580000
*  DCL MSGSNS CHAR(12) BASED(R1+37);     /* SENSE DATA AREA     S21050* 02590000
*  DCL MSGCSW CHAR(14) BASED(R1+18);     /* CSW DATA AREA       S21050* 02600000
*  DCL MSGDEVAD CHAR(8) BASED(R1+39);    /*DEV ADDR AREA IN MSG S21050* 02610000
*         DCL MECB FIXED;                /* ECB FOR PWTOR             * 02620000
*         DCL INBUF1 CHAR(1);            /*BUFFER FOR REPLY           * 02630000
*         DCL 1 * BASED(R1),             /* PARMLIST FOR WTOR         * 02640000
*           3 LENGTH CHAR(1),                                           02650000
*           3 REPLYAD PTR(24),                                          02660000
*           3 ECBAD PTR;                                                02670000
*                                                                       02680000
*  DCL MSG4DVAD CHAR(8) BASED(R1+22);    /* DEVICE ADDRESS IN @ZA15468* 02690000
*                                        /* MESSAGE IFD476I   @ZA15468* 02700000
*                                                                       02710000
*  DCL 1 OUTBUFRI CHAR(13),         /* OUTPUT BUFFER                  * 02720000
*        3 SNSOUT CHAR(6),          /* SENSE DATA TO BE CONVERTED     * 02730000
*        3 CSWOUT CHAR(7);          /* CSW DATA TO BE CONVERTED       * 02740000
*  DCL 1 INBUF CHAR(26),            /* INPUT BUFFER                   * 02750000
*        3 SNSIN CHAR(12),          /* CONVERTED SENSE DATA           * 02760000
*        3 CSWIN CHAR(14);          /* CONVERTED CSW DATA             * 02770000
*  DCL OLTTAB PTR GENERATED;             /* LINK TABLE           M4506* 02780000
*  DCL OLTTAB2 PTR BASED(ADDR(OLTTAB)+4); /* WAITIO INDICATOR    M4506* 02790000
*  DCL TAB28 PTR(31) GENERATED;     /* NEW MACRO ENTRY POINT          * 02800000
*  DCL CNVRT CHAR(14) GENERATED;    /* CONVERT PARAMETER LIST         * 02810000
*             DCL UNICTR CHAR(1) GENERATED;                             02820000
*         DCL DEVTAB CHAR(576) GENERATED;    /*DEVICE TABLE           * 02830000
*         DCL TPSAVE CHAR(4) GENERATED;  /* ID OF OLT BEING RUNOX01386* 02840000
*         DCL WRTBOTH LABEL GENERATED;      /*CCW LABEL               * 02850000
*         DCL 1 VOL1BUF CHAR(80),        /*OUTPUT BUFFER FOR VOL1 REC * 02860000
*           3 VOLNAME CHAR(10),                                         02870000
*           3 *(70) CHAR(1) INIT((70)'0');                              02880000
*         DCL 1 HDR1BUF CHAR(80),        /*OUTPUT BUFFER FOR HDR1 REC * 02890000
*           3 HDRNAME CHAR(4) INIT('HDR1'),                             02900000
*           3 *(76) CHAR(1) INIT((76)'0');                              02910000
*                                                                       02920000
*  /******************************************************************* 02930000
*  /*                                                                 * 02940000
*  /*     PARAMETER LIST FOR SVC59                                    * 02950000
*  /*                                                                 * 02960000
*  /******************************************************************* 02970000
*                                                                       02980000
*  DCL 1 * BASED(ADDR(ROPT)),            /*                     X02906* 02990000
*         3 UCBADDR CHAR(4),             /* UCB ADDR OF DEV     X02906* 03000000
*         3 FLAGS CHAR(4),               /*                     X02906* 03010000
*           5 SVCFLG CHAR(1),            /* FIRST FLAG BYTE     X02906* 03020000
*           5 * CHAR(3);                 /* N/A                 X02906* 03030000
*  DCL HCODE CHAR(1) BASED(84);          /* FUNC 21 SVC CODE #  X02906* 03040000
*                                                                       03050000
*          R4=ADDR(IFDMSG53);            /* GET ADD OF MSG53  @ZA15468* 03060000
         L     @3,@V1              ADDRESS OF IFDMSG53            0075  03070000
         LR    @4,@3                                              0075  03080000
*         R7  =  DEVTBPTR;         /* SET R 7 TO HEAD OF DEVTAB       * 03090000
         L     @7,DEVTBPTR                                        0076  03100000
*             DO R5=UNICTR TO 1 BY -1;                                  03110000
         SR    @5,@5                                              0077  03120000
         IC    @5,UNICTR                                          0077  03130000
         LTR   @5,@5                                              0077  03140000
         BC    12,@DO9FE                                          0077  03150000
*          R8=UCBAD;                     /* GET ADD OF UCB    @ZA15468* 03160000
@DO9FF   L     @8,8(0,@7)                                         0078  03170000
*          IF CLASS='08'X &              /* IF THE DEVICE IS  @ZA15468* 03180000
*             TYPE='42'X THEN            /* AN MSS, CHECK TO  @ZA15468* 03190000
         CLI   18(@8),X'08'                                       0079  03200000
         BC    07,@9FB                                            0079  03210000
         CLI   19(@8),X'42'                                       0079  03220000
         BC    07,@9FA                                            0079  03230000
*               DO;                      /* SEE HOW IT WAS    @ZA15468* 03240000
*                 IF INITSW='0'B |       /* INITIALIZED. IF   @ZA15468* 03250000
*                    FINITSW='1'B THEN   /* FUNCTIONALLY OR   @ZA15468* 03260000
         TM    A00044,B'00100000'                                 0081  03270000
         BC    08,@9F9                                            0081  03280000
         TM    A00044,B'10000000'                                 0081  03290000
         BC    12,@9F8                                            0081  03300000
*                   GO TO INCRPTR;       /* NOT, GO           @ZA15468* 03310000
         BC    03,INCRPTR                                         0082  03320000
*                                        /* AHEAD NORMALLY.   @ZA15468* 03330000
*                 R1=MSG4;               /* ELSE,DIAGNOSTICALLY       * 03340000
@9F8     L     @1,12(0,@4)                                        0083  03350000
*                 MSG4DVAD=DEVADEB;      /* TELL THE CE.      @ZA15468* 03360000
         MVC   22(8,@1),0(@7)                                     0084  03370000
*                 GEN(PWTO REG=(1));     /*                   @ZA15468* 03380000
         PWTO REG=(1)                                                   03390000
         DS    0H                                                       03400000
*                 R1=MSG5;               /* TELL HOW TO CLEAR @ZA15468* 03410000
         L     @1,16(0,@4)                                        0086  03420000
*                 GEN(PWTO REG=(1));     /* IT.               @ZA15468* 03430000
         PWTO REG=(1)                                                   03440000
         DS    0H                                                       03450000
*                 GO TO INCRPTR;         /*                   @ZA15468* 03460000
         BC    15,INCRPTR                                         0088  03470000
*               END;                     /*                   @ZA15468* 03480000
*         IF TPSAVE='SOSP' THEN          /* IS THIS SOSP       OX01386* 03490000
@9FA     EQU   *                                                  0090  03500000
@9FB     CLC   TPSAVE(4),@C5                                      0090  03510000
*           GO TO RTRNWT;                /* YES, DONT RESTORE  OX01386* 03520000
         BC    08,RTRNWT                                          0091  03530000
*                                        /* TAPE LABEL.        OX01386* 03540000
*         IF STDLABL='1'B THEN                                          03550000
         TM    13(@7),B'00010000'                                 0092  03560000
*           GOTO WRLAB;                  /*GO WRITE LABEL             * 03570000
         BC    01,WRLAB                                           0093  03580000
*  RTRNWT:                                                              03590000
*                                                                       03600000
*         IF TAPEBIT¬='1'B THEN          /* SET UCB NOTRDY FLG? X02906* 03610000
RTRNWT   TM    14(@7),B'00010000'                                 0094  03620000
*           GOTO INCRPTR;                /* NO                  X02906* 03630000
         BC    12,INCRPTR                                         0095  03640000
*  ROPT= UCBAD;                          /*UCB ADDR             X02906* 03650000
         MVC   ROPT(4),8(@7)                                      0096  03660000
*  SVCFLG= '40'X;                        /* RESET NOTRDY FLG    X02906* 03670000
         MVI   A00050+4,X'40'                                     0097  03680000
*  VID= MID1;                            /* MY ID IN SVC PLIST  X02906* 03690000
         MVC   VID(2),MID1                                        0098  03700000
*  R0= ADDR(ROPT);                       /* SVC PLIST ADDRESS   X02906* 03710000
         LA    @0,ROPT                                            0099  03720000
*  R1= ADDR(HCODE);                      /* FUNC 21 SVC CODE #  X02906* 03730000
         LA    @1,HCODE                                           0100  03740000
*  GEN(SVC 59);                          /* ISSUE SVC 59        X02906* 03750000
         SVC 59                                                         03760000
         DS    0H                                                       03770000
*                                                                       03780000
*  INCRPTR:                              /*                     X02906* 03790000
*         R7=R7 + TABLNGTH;              /* INCREMENT DEVTAB PTR 21050* 03800000
INCRPTR  AH    @7,TABLNGTH                                        0102  03810000
*                                        /* TO NEXT ENTRY        21050* 03820000
*         END;                                                          03830000
*         RETURN;                                                       03840000
         BCT   @5,@DO9FF                                          0103  03850000
         BC    15,@EL01                                           0104  03860000
*                                                                       03870000
*  WRLAB:                                                               03880000
*                                                                       03890000
*  /******************************************************************* 03900000
*  /*                                                                 * 03910000
*  /*                          SET UP FOR EXIO                        * 03920000
*  /*                                                                 * 03930000
*  /******************************************************************* 03940000
*         EFCTRCB = EFCTRCB&&EFCTRCB; /* CLEAR EFFECTOR CONTROL BLOCK * 03950000
WRLAB    XC    EFCTRCB(20),EFCTRCB                                0105  03960000
*         VOLNAME=VOL;             /*PUT VOL SER # IN OUTPUT BUFFER   * 03970000
         MVC   VOL1BUF(10),16(@7)                                 0106  03980000
*         FILEMSK = MODESV;          /* SET FILE MODE FOR DRIVE YM5401* 03990000
         MVC   FILEMSK(1),30(@7)                                  0107  04000000
*         CCWPTR = ADDR(WRTBOTH);       /* SET POINTER TO CCWS  Y02906* 04010000
         LA    @F,WRTBOTH                                         0108  04020000
         ST    @F,CCWPTR                                          0108  04030000
*         DVTPTR = R7;                  /* SET POINTER TO DEVTABY02906* 04040000
         ST    @7,DVTPTR                                          0109  04050000
*         FLGA = '00'X;                 /* SET FLG TO ZERO      Y02906* 04060000
         MVI   FLGA,X'00'                                         0110  04070000
*         INTCALL = '1'B;               /* SET INTERNAL CALL    Y02906* 04080000
         OI    FLG2,B'10000000'                                   0111  04090000
*         CLRTECB = CLRTECB &&CLRTECB;  /* CLEAR TECB FOR IO    Y02906* 04100000
         XC    TECB+6(39),TECB+6                                  0112  04110000
*         OUTBUFRI = OUTBUFRI &&OUTBUFRI;/* SET FEILD TO ZEROS  Y02906* 04120000
         XC    OUTBUFRI(13),OUTBUFRI                              0113  04130000
*         BYPASS = '1'B;                 /* SET BYPASS PREFIX SWY02906* 04140000
         OI    FLG1A,B'10000000'                                  0114  04150000
*         SNSCNT = '18'X;                /* SET SENSE COUNT     Y02906* 04160000
         MVI   SNSCNT,X'18'                                       0115  04170000
*         TECBPTRX = ADDR(TECB);         /* SET ADDR TECB       Y02906* 04180000
         LA    @F,TECB                                            0116  04190000
         ST    @F,TECBPTRX                                        0116  04200000
*         CDSPTR = ADDR(ADRHEX);        /* SET ADDR OF CDS DEV  Y02906* 04210000
         LA    @F,32(0,@7)                                        0117  04220000
         ST    @F,WAITLST+8                                       0117  04230000
*         R15 = IORTNADR;               /* GET PTR OF IO EFFECTRY02906* 04240000
         L     @F,IORTNADR                                        0118  04250000
*         GEN(BALR  14,15);             /* GO TO IO EFFECTOR    Y02906* 04260000
         BALR  14,15                                                    04270000
         DS    0H                                                       04280000
*         GEN(LTR   R15,R15);           /* IF EXIO FAILED       Y02906* 04290000
         LTR   R15,R15                                                  04300000
         DS    0H                                                       04310000
*         GEN(BNZ   RSTORE1);           /* GO PUT OUT MSG       Y02906* 04320000
         BNZ   RSTORE1                                                  04330000
         DS    0H                                                       04340000
*         R1 = ADDR(WAITLST);           /* GET POINTER FOR WAIT Y02906* 04350000
         LA    @1,WAITLST                                         0122  04360000
*         R14 = ADDR(STATS);            /* GET WAIT RETURNADDR  Y02906* 04370000
         LA    @E,STATS                                           0123  04380000
*         R15 = TAB28;                   /* GET TRANS MGR ENTRY Y02906* 04390000
         L     @F,TAB28                                           0124  04400000
*         GO TO R15;                    /* GO TO THE WAIT MOD   Y02906* 04410000
         BCR   15,@F                                              0125  04420000
*                                       /* GO TO WAITIO         Y02906* 04430000
*       STATS:                          /* WAIT RETURN POINT    Y02906* 04440000
*         GEN(LTR   R15,R15);           /* WAS HE SUCCESSFUL    Y02906* 04450000
STATS    LTR   R15,R15                                                  04460000
         DS    0H                                                       04470000
*         GEN(BNZ   RSTORE1);           /* IF NOT GO PUT MSG    Y02906* 04480000
         BNZ   RSTORE1                                                  04490000
         DS    0H                                                       04500000
*    FILMSK='1'B;                                                       04510000
         OI    A00000+1,B'00001000'                               0128  04520000
*         PROTECT='0'B;                  /* CLEAR BIT           S21050* 04530000
         NI    A00000,B'10111111'                                 0129  04540000
*  IF EXIOK¬='0C'X THEN                  /* CHECK EXIO RUN       M4506* 04550000
         CLI   TECB+16,X'0C'                                      0130  04560000
*    GOTO WRTAPE;                        /* UNSUCCESSFUL         M4506* 04570000
*         GOTO RTRNWT;                   /*CHECK NEXT DEVICE          * 04580000
         BC    08,RTRNWT                                          0132  04590000
*  WRTAPE:                                                              04600000
*  R1=MSG1;                         /* POINTER TO MESSAGE             * 04610000
WRTAPE   L     @1,0(0,@4)                                         0133  04620000
*         MSGDEVAD=DEVADEB;              /*PUT UNIT ADDR IN MESSAGE   * 04630000
         MVC   39(8,@1),0(@7)                                     0134  04640000
*         GEN(PWTO REG=(1));             /*PRINT MESSAGE TO OPERATOR  * 04650000
         PWTO REG=(1)                                                   04660000
         DS    0H                                                       04670000
*  /******************************************************************* 04680000
*  /*                                                                 * 04690000
*  /*                     CONVERT SENSE/CSW DATA                      * 04700000
*  /*                                                                 * 04710000
*  /******************************************************************* 04720000
*  SNSOUT=SNS1;                     /* SENSE DATA TO BE CONVERTED     * 04730000
         MVC   OUTBUFRI(6),TECB+23                                0136  04740000
*  CSWOUT=CSW1;                     /* CSW DATA TO BE CONVERTED       * 04750000
         MVC   OUTBUFRI+6(7),TECB+12                              0137  04760000
*  R1=ADDR(CNVRT);                  /* GET ADDR OF CONVERT PARMLIST   * 04770000
         LA    @1,CNVRT                                           0138  04780000
*  R15=TAB28;                       /* GET ENTRY POINT ADDRESS        * 04790000
         L     @F,TAB28                                           0139  04800000
*  GEN(BALR R14,R15);               /* EXECUTE CONVERT MODULE         * 04810000
         BALR R14,R15                                                   04820000
         DS    0H                                                       04830000
*  /******************************************************************* 04840000
*  /*                                                                 * 04850000
*  /*                     PRINT MESSAGE IFD137I                       * 04860000
*  /*                                                                 * 04870000
*  /******************************************************************* 04880000
*  R1=MSG2;                         /* POINTER TO MESSAGE             * 04890000
         L     @1,4(0,@4)                                         0141  04900000
*  MSGSNS=SNSIN;                    /* PUT SENSE DATA IN MSG3         * 04910000
         MVC   37(12,@1),INBUF                                    0142  04920000
*  MSGCSW=CSWIN;                    /* PUT CSW DATA IN MSG3           * 04930000
         MVC   18(14,@1),INBUF+12                                 0143  04940000
*  GEN    (PWTO REG=(1));           /* PRINT MESSAGE                  * 04950000
         PWTO REG=(1)                                                   04960000
         DS    0H                                                       04970000
*         /************************************************************ 04980000
*         /*                                                          * 04990000
*         /*        PRINT MESSAGE IFD139D                             * 05000000
*         /*                                                          * 05010000
*         /************************************************************ 05020000
*  RSTORE1:                                                             05030000
*         R4=ADDR(IFDMSG53);             /*ADDR OF MESSAGE MODULE     * 05040000
RSTORE1  L     @3,@V1              ADDRESS OF IFDMSG53            0145  05050000
         LR    @4,@3                                              0145  05060000
*         MECB=0;                        /* CLEAR ECB                 * 05070000
         SR    @F,@F                                              0146  05080000
         ST    @F,MECB                                            0146  05090000
*         R1=MSG3;                       /*POINTER TO MESSAGE         * 05100000
         L     @1,8(0,@4)                                         0147  05110000
*         LENGTH='01'X;                  /*LENGTH OF RESPONSE         * 05120000
         MVI   0(@1),X'01'                                        0148  05130000
*         INBUF1=' ';                    /*CLEAR INBUF1               * 05140000
         MVI   INBUF1,C' '                                        0149  05150000
*         REPLYAD=ADDR(INBUF1);                                         05160000
         LA    @F,INBUF1                                          0150  05170000
         ST    @F,@TEMP4                                          0150  05180000
         MVC   1(3,@1),@TEMP4+1                                   0150  05190000
*         ECBAD=ADDR(MECB);              /*ADDRESS OF ECB             * 05200000
         LA    @F,MECB                                            0151  05210000
         ST    @F,4(0,@1)                                         0151  05220000
*         GEN(PWTOR REG=(1));                                           05230000
         PWTOR REG=(1)                                                  05240000
         DS    0H                                                       05250000
*         IF INBUF1 = 'R' THEN                                          05260000
         CLI   INBUF1,C'R'                                        0153  05270000
*           GOTO WRLAB;                  /*RETRY                      * 05280000
         BC    08,WRLAB                                           0154  05290000
*         IF INBUF1¬='P' THEN                                           05300000
         CLI   INBUF1,C'P'                                        0155  05310000
*           GOTO RSTORE1;                /* REPEAT MESSAGE            * 05320000
         BC    07,RSTORE1                                         0156  05330000
*         PROTECT='0'B;                  /* CLEAR BIT           A50386* 05340000
         NI    A00000,B'10111111'                                 0157  05350000
*         GOTO RTRNWT;                   /*CHECK NEXT DEVICE          * 05360000
         BC    15,RTRNWT                                          0158  05370000
*         END;                                                          05380000
@EL01    L     @D,4(0,@D)                                         0159  05390000
         LM    @E,@C,12(@D)                                       0159  05400000
         BCR   15,@E                                              0159  05410000
@DATA1   EQU   *                                                        05420000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           05430000
@1       EQU   01                                                       05440000
@2       EQU   02                                                       05450000
@3       EQU   03                                                       05460000
@4       EQU   04                                                       05470000
@5       EQU   05                                                       05480000
@6       EQU   06                                                       05490000
@7       EQU   07                                                       05500000
@8       EQU   08                                                       05510000
@9       EQU   09                                                       05520000
@A       EQU   10                                                       05530000
@B       EQU   11                                                       05540000
@C       EQU   12                                                       05550000
@D       EQU   13                                                       05560000
@E       EQU   14                                                       05570000
@F       EQU   15                                                       05580000
@V1      DC    V(IFDMSG53)                                              05590000
         DS    0F                                                       05600000
@C5      DC    C'SOSP'                                                  05610000
         DS    0D                                                       05620000
@DATA    EQU   *                                                        05630000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   05640000
Y        EQU   00000000            FULLWORD INTEGER                     05650000
R0       EQU   00000000            FULLWORD POINTER REGISTER            05660000
R1       EQU   00000001            FULLWORD POINTER REGISTER            05670000
R2       EQU   00000002            FULLWORD POINTER REGISTER            05680000
R3       EQU   00000003            FULLWORD POINTER REGISTER            05690000
R4       EQU   00000004            FULLWORD POINTER REGISTER            05700000
R5       EQU   00000005            FULLWORD POINTER REGISTER            05710000
R6       EQU   00000006            FULLWORD POINTER REGISTER            05720000
R7       EQU   00000007            FULLWORD POINTER REGISTER            05730000
R8       EQU   00000008            FULLWORD POINTER REGISTER            05740000
R9       EQU   00000009            FULLWORD POINTER REGISTER            05750000
R10      EQU   00000010            FULLWORD POINTER REGISTER            05760000
R11      EQU   00000011            FULLWORD POINTER REGISTER            05770000
R12      EQU   00000012            FULLWORD POINTER REGISTER            05780000
R13      EQU   00000013            FULLWORD POINTER REGISTER            05790000
R14      EQU   00000014            FULLWORD POINTER REGISTER            05800000
R15      EQU   00000015            FULLWORD POINTER REGISTER            05810000
WAITLST  EQU   @DATA+00000072      16 BYTE(S) ON WORD                   05820000
         ORG   WAITLST+00000000                                         05830000
XMGR     EQU   *                   1 BYTE(S)                            05840000
         DC    X'00'                                                    05850000
LVL      EQU   *                   1 BYTE(S)                            05860000
         DC    X'02'                                                    05870000
MODID    EQU   *                   2 BYTE(S)                            05880000
         DC    C'36'                                                    05890000
TECBPTR  EQU   *                   FULLWORD POINTER                     05900000
         DC    AL4(TECB)                                                05910000
CDSPTR   EQU   *                   FULLWORD POINTER                     05920000
         DC    AL4(0)                                                   05930000
FLG      EQU   *                   8 BIT(S) ON BYTE                     05940000
         DC    X'80'                                                    05950000
WAITYES  EQU   WAITLST+00000012    1 BIT(S)                             05960000
TIME     EQU   *                   2 BYTE(S)                            05970000
         DC    X'001E'                                                  05980000
A00019   EQU   00000000            36 BYTE(S) ON WORD                   05990000
DEVADEB  EQU   A00019+00000000     8 BYTE(S)                            06000000
UCBAD    EQU   A00019+00000008     FULLWORD POINTER                     06010000
DEVFLG1  EQU   A00019+00000012     1 BYTE(S)                            06020000
STATUS   EQU   A00019+00000012     1 BIT(S)                             06030000
PRIMARY  EQU   A00019+00000012     1 BIT(S)                             06040000
DPDONE   EQU   A00019+00000012     1 BIT(S)                             06050000
A00020   EQU   A00019+00000012     3 BIT(S)                             06060000
FILEPROT EQU   A00019+00000012     1 BIT(S)                             06070000
A00021   EQU   A00019+00000012     1 BIT(S)                             06080000
DEVFLG2  EQU   A00019+00000013     1 BYTE(S)                            06090000
A00022   EQU   A00019+00000013     3 BIT(S)                             06100000
STDLABL  EQU   A00019+00000013     1 BIT(S)                             06110000
A00023   EQU   A00019+00000013     4 BIT(S)                             06120000
DEVFLG3  EQU   A00019+00000014     1 BYTE(S)                            06130000
A00024   EQU   A00019+00000014     3 BIT(S)                             06140000
TAPEBIT  EQU   A00019+00000014     1 BIT(S)                             06150000
A00025   EQU   A00019+00000014     4 BIT(S)                             06160000
DEVFLG4  EQU   A00019+00000015     1 BYTE(S)                            06170000
TAPELABL EQU   A00019+00000016     16 BYTE(S)                           06180000
VOL      EQU   A00019+00000016     10 BYTE(S)                           06190000
HDR      EQU   A00019+00000026     4 BYTE(S)                            06200000
MODESV   EQU   A00019+00000030     1 BYTE(S)                            06210000
A00026   EQU   A00019+00000031     1 BYTE(S)                            06220000
ADRHEX   EQU   A00019+00000032     4 BYTE(S)                            06230000
A00027   EQU   A00019+00000032     2 BYTE(S)                            06240000
HEXAD    EQU   A00019+00000034     2 BYTE(S)                            06250000
A00028   EQU   00000000            24 BYTE(S) ON WORD                   06260000
UCBOB    EQU   A00028+00000000     24 BYTE(S)                           06270000
A00029   EQU   A00028+00000000     16 BYTE(S)                           06280000
MODEL    EQU   A00028+00000016     1 BYTE(S)                            06290000
FEATURES EQU   A00028+00000017     1 BYTE(S)                            06300000
CLASS    EQU   A00028+00000018     1 BYTE(S)                            06310000
TYPE     EQU   A00028+00000019     1 BYTE(S)                            06320000
TECB     EQU   @DATA+00000088      45 BYTE(S) ON WORD                   06330000
         ORG   TECB+00000000                                            06340000
FLDCNT   EQU   *                   1 BYTE(S)                            06350000
         DC    X'01'                                                    06360000
FLDSIZE  EQU   *                   1 BYTE(S)                            06370000
         DC    X'0C'                                                    06380000
SOMETNG  EQU   *                   1 BYTE(S)                            06390000
         DC    X'00'                                                    06400000
SNSSIZE  EQU   *                   1 BYTE(S)                            06410000
         DC    X'18'                                                    06420000
FLG1     EQU   *                   1 BYTE(S)                            06430000
         DC    X'00'                                                    06440000
SNSCNTTB EQU   *                   1 BYTE(S)                            06450000
         DC    X'01'                                                    06460000
CLRTECB  EQU   TECB+00000006       39 BYTE(S)                           06470000
CNTSNS   EQU   *                   1 BYTE(S)                            06480000
         DC    X'00'                                                    06490000
CNTINT   EQU   *                   1 BYTE(S)                            06500000
         DC    X'00'                                                    06510000
CCP      EQU   TECB+00000008       1 BYTE(S)                            06520000
A00030   EQU   TECB+00000009       3 BYTE(S)                            06530000
CSW1     EQU   TECB+00000012       8 BYTE(S)                            06540000
A00031   EQU   TECB+00000012       4 BYTE(S)                            06550000
STATUSX  EQU   TECB+00000016       2 BYTE(S)                            06560000
EXIOK    EQU   TECB+00000016       1 BYTE(S)                            06570000
A00032   EQU   TECB+00000016       6 BIT(S)                             06580000
UNITCK   EQU   TECB+00000016       1 BIT(S)                             06590000
UNITEXCP EQU   TECB+00000016       1 BIT(S)                             06600000
BYTE2    EQU   TECB+00000017       1 BYTE(S)                            06610000
A00033   EQU   TECB+00000017       1 BIT(S)                             06620000
INLENGTH EQU   TECB+00000017       1 BIT(S)                             06630000
A00034   EQU   TECB+00000017       6 BIT(S)                             06640000
A00035   EQU   TECB+00000018       2 BYTE(S)                            06650000
SENSE    EQU   TECB+00000020       24 BYTE(S)                           06660000
A00036   EQU   TECB+00000020       3 BYTE(S)                            06670000
SNS1     EQU   TECB+00000023       7 BYTE(S)                            06680000
SNSFLD   EQU   TECB+00000023       8 BIT(S)                             06690000
A00037   EQU   TECB+00000023       1 BIT(S)                             06700000
SNS2     EQU   TECB+00000023       1 BIT(S)                             06710000
A00038   EQU   TECB+00000024       2 BYTE(S)                            06720000
A00039   EQU   TECB+00000026       8 BIT(S)                             06730000
A00040   EQU   TECB+00000026       5 BIT(S)                             06740000
PEIND    EQU   TECB+00000026       1 BIT(S)                             06750000
A00041   EQU   TECB+00000027       2 BYTE(S)                            06760000
A00042   EQU   TECB+00000029       1 BYTE(S)                            06770000
A00043   EQU   TECB+00000029       4 BIT(S)                             06780000
BIT4     EQU   TECB+00000029       1 BIT(S)                             06790000
A00046   EQU   00000000            20 BYTE(S) ON WORD                   06800000
MSG1     EQU   A00046+00000000     FULLWORD POINTER                     06810000
MSG2     EQU   A00046+00000004     FULLWORD POINTER                     06820000
MSG3     EQU   A00046+00000008     FULLWORD POINTER                     06830000
MSG4     EQU   A00046+00000012     FULLWORD POINTER                     06840000
MSG5     EQU   A00046+00000016     FULLWORD POINTER                     06850000
MSGSNS   EQU   00000037            12 BYTE(S)                           06860000
MSGCSW   EQU   00000018            14 BYTE(S)                           06870000
MSGDEVAD EQU   00000039            8 BYTE(S)                            06880000
MECB     EQU   @DATA+00000136      FULLWORD INTEGER                     06890000
INBUF1   EQU   @DATA+00000140      1 BYTE(S)                            06900000
A00047   EQU   00000000            8 BYTE(S) ON WORD                    06910000
LENGTH   EQU   A00047+00000000     1 BYTE(S)                            06920000
REPLYAD  EQU   A00047+00000001     3  BYTE  POINTER ON WORD+1           06930000
ECBAD    EQU   A00047+00000004     FULLWORD POINTER                     06940000
MSG4DVAD EQU   00000022            8 BYTE(S)                            06950000
OUTBUFRI EQU   @DATA+00000141      13 BYTE(S)                           06960000
SNSOUT   EQU   OUTBUFRI+00000000   6 BYTE(S)                            06970000
CSWOUT   EQU   OUTBUFRI+00000006   7 BYTE(S)                            06980000
INBUF    EQU   @DATA+00000154      26 BYTE(S)                           06990000
SNSIN    EQU   INBUF+00000000      12 BYTE(S)                           07000000
CSWIN    EQU   INBUF+00000012      14 BYTE(S)                           07010000
VOL1BUF  EQU   @DATA+00000180      80 BYTE(S)                           07020000
VOLNAME  EQU   VOL1BUF+00000000    10 BYTE(S)                           07030000
         ORG   VOL1BUF+00000010                                         07040000
A00048   EQU   *                   70*1 BYTE(S)                         07050000
         DC    00070C'0'                                                07060000
HDR1BUF  EQU   @DATA+00000260      80 BYTE(S)                           07070000
HDRNAME  EQU   *                   4 BYTE(S)                            07080000
         DC    C'HDR1'                                                  07090000
A00049   EQU   *                   76*1 BYTE(S)                         07100000
         DC    00076C'0'                                                07110000
HCODE    EQU   00000084            1 BYTE(S)                            07120000
         ORG   @DATA                                                    07130000
         DS    00000344C                                                07140000
@TEMPS   DS    0F                                                       07150000
@TEMP4   DC    F'0'                                                     07160000
WRTBOTH  CCW   7,*,X'60',1              REWIND                          07170000
         CCW   1,VOL1BUF,X'60',80       WRITE VOL1 RECORD               07180000
         CCW   1,HDR1BUF,X'60',80       WRITE HDR1 RECORD               07190000
         CCW   04,*,X'30',1  FORCE CHAN END AND DEV END, NO DATA TRANS  07200000
CNVRT    DC    B'00000000'         CONTROL PROGRAM FLAGS                07210000
         DC    AL1(2)              MACRO LEVEL                          07220000
         DC    CL2'41'             MACRO ID                             07230000
         DC    A(OUTBUFRI)                                              07240000
         DC    A(INBUF)                                                 07250000
         DC    AL2(13+32768)       COUNT AND TYPE INFORMATION           07260000
DSECT53  IFDCOM                                                         07270000
VID      EQU   WKSVC+00000002      2 BYTE(S)                            07280000
MID1     EQU   MCT+00000010        2 BYTE(S)                            07290000
FLG1A    EQU   FLGA+00000000       8 BIT(S) ON BYTE                     07300000
BYPASS   EQU   FLG1A+00000000      1 BIT(S)                             07310000
FLG2     EQU   FLGB+00000000       8 BIT(S) ON BYTE                     07320000
INTCALL  EQU   FLG2+00000000       1 BIT(S)                             07330000
MODEREQ  EQU   FLG2+00000000       1 BIT(S)                             07340000
A00000   EQU   CESWT+00000000      4 BYTE(S) ON WORD                    07350000
A00001   EQU   A00000+00000000     8 BIT(S)                             07360000
A00002   EQU   A00000+00000000     1 BIT(S)                             07370000
PROTECT  EQU   A00000+00000000     1 BIT(S)                             07380000
A00003   EQU   A00000+00000000     6 BIT(S)                             07390000
A00004   EQU   A00000+00000001     8 BIT(S)                             07400000
A00005   EQU   A00000+00000001     1 BIT(S)                             07410000
SEEK2321 EQU   A00000+00000001     1 BIT(S)                             07420000
SECONLOK EQU   A00000+00000001     1 BIT(S)                             07430000
A00006   EQU   A00000+00000001     1 BIT(S)                             07440000
FILMSK   EQU   A00000+00000001     1 BIT(S)                             07450000
T2321    EQU   A00000+00000001     1 BIT(S)                             07460000
ONLINEOK EQU   A00000+00000001     1 BIT(S)                             07470000
A00007   EQU   A00000+00000001     1 BIT(S)                             07480000
A00008   EQU   A00000+00000002     8 BIT(S)                             07490000
NDCFO    EQU   A00000+00000002     1 BIT(S)                             07500000
DPONDEV  EQU   A00000+00000002     1 BIT(S)                             07510000
A00009   EQU   A00000+00000002     1 BIT(S)                             07520000
CHANTEST EQU   A00000+00000002     1 BIT(S)                             07530000
A00010   EQU   A00000+00000002     1 BIT(S)                             07540000
A00011   EQU   A00000+00000002     1 BIT(S)                             07550000
TAPEHDR  EQU   A00000+00000002     1 BIT(S)                             07560000
DEVDPOK  EQU   A00000+00000002     1 BIT(S)                             07570000
A00012   EQU   A00000+00000003     8 BIT(S)                             07580000
A00013   EQU   A00000+00000003     1 BIT(S)                             07590000
BYPALDEV EQU   A00000+00000003     1 BIT(S)                             07600000
BYPDEV   EQU   A00000+00000003     1 BIT(S)                             07610000
A00014   EQU   A00000+00000003     1 BIT(S)                             07620000
SUSDEL   EQU   A00000+00000003     1 BIT(S)                             07630000
A00015   EQU   A00000+00000003     1 BIT(S)                             07640000
A00016   EQU   A00000+00000003     1 BIT(S)                             07650000
STDLAB   EQU   A00000+00000003     1 BIT(S)                             07660000
A00017   EQU   CESWT8+00000000     1 BYTE(S) ON WORD                    07670000
A00018   EQU   A00017+00000000     2 BIT(S)                             07680000
LETGO    EQU   A00017+00000000     1 BIT(S)                             07690000
A00044   EQU   MSSSTAT+00000000    1 BYTE(S)                            07700000
FINITSW  EQU   A00044+00000000     1 BIT(S)                             07710000
DINITSW  EQU   A00044+00000000     1 BIT(S)                             07720000
INITSW   EQU   A00044+00000000     1 BIT(S)                             07730000
A00045   EQU   A00044+00000000     5 BIT(S)                             07740000
OLTTAB2  EQU   OLTTAB+00000004     FULLWORD POINTER                     07750000
A00050   EQU   ROPT+00000000       8 BYTE(S) ON WORD                    07760000
UCBADDR  EQU   A00050+00000000     4 BYTE(S)                            07770000
FLAGS    EQU   A00050+00000004     4 BYTE(S)                            07780000
SVCFLG   EQU   A00050+00000004     1 BYTE(S)                            07790000
A00051   EQU   A00050+00000005     3 BYTE(S)                            07800000
@DATEND  EQU   *                                                        07810000
@9F9     EQU   INCRPTR                                                  07820000
@DO9FE   EQU   @EL01                                                    07830000
         END    ,(C'PL/S',1400,78116)                                   07840000
./  ADD  SSI=41050007,NAME=IFDOLT54
         TITLE ' RETAIN/370 INITIALIZATION IFDOLT54'                    00010000
         TITLE 'RETAIN/370 INITIALIZATION IFDOLT54'                     00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT54 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT54 15 APR 74'                             0002  00070000
         STM   @E,@C,12(@D)                                       0002  00080000
         BALR  @B,0                                               0002  00090000
@PSTART  DS    0H                                                 0002  00100000
         USING @PSTART+00000,@B                                   0002  00110000
         ST    @D,@SAV001+4                                       0002  00120000
         LA    @F,@SAV001                                         0002  00130000
         ST    @F,8(0,@D)                                         0002  00140000
         LR    @D,@F                                              0002  00150000
*         GEN(USING  CHASCT,2);                                         00160000
         USING  CHASCT,2                                                00170000
         DS    0H                                                       00180000
*  GENERATE DATA;                                                       00190000
*  /******************************************************************* 00200000
*  /*     CCW BREAK DOWN                                              * 00210000
*  /******************************************************************* 00220000
*         DCL CCWENABL    CHAR(8) BDY(DWORD) GENERATED;                 00230000
*         DCL CCWPREP    CHAR(8) BDY(DWORD) GENERATED;                  00240000
*         DCL CCWREADD CHAR(8) BDY(DWORD) GENERATED;                    00250000
*         DCL 1 READCP CHAR(8) BASED(ADDR(CCWREADD)),                   00260000
*              2 OP BIT(8),                                             00270000
*              2 BUFADR PTR(24),                                        00280000
*              2 FLG BIT(8),                                            00290000
*              2 * BIT(8),                                              00300000
*              2 BYTECNT BIT(16);                                       00310000
*         DCL CCWWRPOS CHAR(8) BDY(DWORD) GENERATED;                    00320000
*         DCL 1 WRPOS CHAR(8) BASED(ADDR(CCWWRPOS)),                    00330000
*              2 OP1 BIT(8),                                            00340000
*              2 BUFADR1 PTR(24),                                       00350000
*              2 FLG1 BIT(8),                                           00360000
*              2 * BIT(8),                                              00370000
*              2 BYTECNT1 BIT(16);                                      00380000
*         DCL CCWRDEOT CHAR(8) BDY(DWORD) GENERATED;                    00390000
*         DCL 1 RDEOT CHAR(8) BASED(ADDR(CCWRDEOT)),                    00400000
*              2 OP2 BIT(8),                                            00410000
*              2 BUFADR2 PTR(24),                                       00420000
*              2 FLG2 BIT(8),                                           00430000
*              2 * BIT(8),                                              00440000
*              2 BYTECNT2 BIT(16);                                      00450000
*         DCL POS CHAR(1) INIT('76'X);  /*                      X02008* 00460000
*         DCL RESPONSE CHAR(5);         /* EOT BUFFER                 * 00470000
*  /******************************************************************* 00480000
*  /*     REGISTERS                                                   * 00490000
*  /******************************************************************* 00500000
*         DCL R0 REG(0) PTR;                                            00510000
*         DCL R1 REG(1) PTR;                                            00520000
*         DCL R2 REG(2) PTR;                                            00530000
*         DCL R3 REG(3);                                                00540000
*         DCL R4 REG(4);                                                00550000
*         DCL R5 REG(5);                                                00560000
*         DCL R6 REG(6);                                                00570000
*         DCL R7 REG(7);                                                00580000
*         DCL R8 REG(8);                                                00590000
*         DCL R9 REG(9);                                                00600000
*         DCL R10 REG(10);                                              00610000
*         DCL R11 REG(11);                                              00620000
*         DCL R12 REG(12);                                              00630000
*         DCL R13 REG(13);                                              00640000
*         DCL R14 REG(14);                                              00650000
*         DCL R15 REG(15);                                              00660000
*  /******************************************************************* 00670000
*  /* FOR PWTO'S                                                      * 00680000
*  /******************************************************************* 00690000
*  /*                                                                 * 00700000
*         DCL  1 * BASED(R1),                                           00710000
*               2 LENGTH CHAR(1),       /* LENGTH OF MESSAGE          * 00720000
*               2 BUFAD PTR(24),        /* ADDR OF RESP BUFFER        * 00730000
*               2 MECBAD PTR;           /* ECB ADDRESS                * 00740000
*         DCL IFDMSG54 LABEL NONLOCAL EXTERNAL;                         00750000
*         DCL MSGPTR PTR INIT(ADDR(IFDMSG54));                          00760000
*         DCL 1 * BASED(MSGPTR),                                        00770000
*               3 IFD163 PTR(31),        /* PTR TO MESSAGE            * 00780000
*               3 IFD164 PTR(31),        /* PTR TO MESSAGE            * 00790000
*               3 IFD168 PTR(31),                                       00800000
*               3 IFD137 PTR(31),                                       00810000
*               3 IFD140 PTR(31);        /* PTR TO VARY-OFF MSG Y02008* 00820000
*         DCL 1 ERRMSG CHAR(47) BASED(IFD137),                          00830000
*              3 * CHAR(4),              /*USED BY PWTO               * 00840000
*              3 * CHAR(14),            /*                      S21051* 00850000
*              3 MSGCSW CHAR(14),       /*                      S21051* 00860000
*              3 * CHAR(5),             /*                      S21051* 00870000
*              3 MSGSNS CHAR(12);       /*                      S21051* 00880000
*         DCL 1 LINKMSG CHAR(68) BASED(IFD164),                         00890000
*           3 * CHAR(40),                                               00900000
*           3 LINKTEXT CHAR(32);                                        00910000
*         DCL 1 MSGTEXT CHAR(106),      /* NO HOOKUP EXPLANATIONX03008* 00920000
*           3 NOUCBTXT CHAR(23) INIT('NO UCB SYSGEND FOR 2955'),        00930000
*           3 NAVAILTXT CHAR(28) INIT('2955 CU NOT FREE FOR TESTING'),  00940000
*           3 TOUTTXT CHAR(31) INIT('INITIAL REMOTE RESPONSE TIMEOUT'), 00950000
*           3 RIWTOTXT CHAR(28) INIT('TIMEOUT ON READ INITIAL WAIT'),   00960000
*           3 EQMPTTXT CHAR(24) INIT('HARDWARE/INTERFACE ERROR');       00970000
*                                                                       00980000
*         DCL 1 MSG140 BASED(IFD140) CHAR(20),                          00990000
*              3 * CHAR(12),             /* N. A.               Y02008* 01000000
*              3 MSG140DV CHAR(8);       /* DEV VARIED OFFLINE  Y02008* 01010000
*                                                                       01020000
*         DCL 1 INBUF CHAR(18),          /* MACRO OUTPUT              * 01030000
*              3 SNSIN CHAR(4),          /* SENSE IN EBCDIC           * 01040000
*              3 CSWIN CHAR(14);         /* CSW IN EBCDIC             * 01050000
*         DCL 1 OUTBUFR CHAR(9),         /* MACRO INPUT               * 01060000
*              3 SNSOUT CHAR(2),         /* SENSE IN HEX              * 01070000
*              3 CSWOUT CHAR(7);        /* CSW OUTPUT                 * 01080000
*         DCL CNVRT CHAR(14) GENERATED; /*CALLING SEQUENCE            * 01090000
*         DCL TAB28 PTR(31) GENERATED;  /* POINTER TO CONVERT MACRO   * 01100000
*  /******************************************************************* 01110000
*  /* CONTROL BLOCK POINTERS                                          * 01120000
*  /******************************************************************* 01130000
*         DCL AVTPTR PTR GENERATED;      /* I/O APPENDAGE VECTOR TABLE* 01140000
*         DCL DEVTBPTR PTR GEND;         /* DEV TAB PTR IN C A  X03008* 01150000
*         DCL REIUCB PTR GENERATED;      /* 2955 UCB ADDRESS          * 01160000
*         DCL TSTDEBAD PTR GENERATED;    /* TEST DEB ADDRESS (SP254)  * 01170000
*         /************************************************************ 01180000
*         /*               SVC PARAMETER LIST                         * 01190000
*         /************************************************************ 01200000
*         DCL ROPT CHAR(8) GENERATED;                                   01210000
*         DCL ROPTMIN2 CHAR(2) BASED(ADDR(ROPT)-2);                     01220000
*         DCL 1 SVCPLIST BASED(ADDR(ROPT)),   /* SVC PARAMETER LIST   * 01230000
*               3 ROPT0 PTR(31),         /* FROM ADDRESS              * 01240000
*               3 ROPT4 PTR(31),         /* TO ADDRESS                * 01250000
*               3 ROPT8 PTR(31);         /* IOSGEN WKAREA       X03008* 01260000
*  /******************************************************************* 01270000
*  /*     STIMER MACRO DATA                                           * 01280000
*  /******************************************************************* 01290000
*         DCL (TIMEOUT) INTERNAL ENTRY; /* TIME OUT EXIT ROUTINE      * 01300000
*         DCL TIME2 CHAR(8) BDY(DWORD)  /* TEN MINUTES ON WAIT        * 01310000
*           INIT('F0F0F1F0F0F0F0C0'X);                                  01320000
*         DCL 1 UCB2955 BASED(REIUCB) CHAR(16), /* REI UCB     X03008*/ 01330000
*           3 * CHAR(4),                /* N.A.                X03008*/ 01340000
*           3 UCBDEVAD CHAR(2),         /* UCB DEVICE ADDRESS  X03008*/ 01350000
*             5 UCBCHNAD CHAR(1),       /* CHANNEL ADDR OF DEV X03008*/ 01360000
*             5 UCBUADR CHAR(1),        /* UCB UNIT ADDR CU,U  X03008*/ 01370000
*           3 * CHAR(7),                /* N.A.                Y02008*/ 01380000
*           3 UCBNAME CHAR(3);          /* DEV NAME IN EBCDIC  Y02008*/ 01390000
*         DCL ONEDEV FIXED INIT('00000001'X);  /* 1 DEVICE     X03008*/ 01400000
*         DCL 1 DEVTAB54(36) CHAR(1) INIT((36)'00'X),/*REI DVTBX03008*/ 01410000
*           3 * CHAR(8),                /* NA                  X03008*/ 01420000
*           3 DEVUCB PTR,               /* DEV UCB ADDR        X03008*/ 01430000
*           3 DEVFLGS CHAR(4),          /* DEV TAB FLAGS       X03008*/ 01440000
*             5 * CHAR(2),              /* NA                  X03008*/ 01450000
*             5 FLAG3 CHAR(1),          /* FLAG FIELD 3        X03008*/ 01460000
*               7 * BIT(7),             /* NA                  X03008*/ 01470000
*               7 PSEUDODVTAB BIT(1),   /* PSEUDO DEV TAB FOR  X03008*/ 01480000
*                                       /* REI DEVICE          X03008*/ 01490000
*             5 FLAG4 CHAR(1),          /* NA                  X03008*/ 01500000
*               7 * BIT(4),             /* N. A.               Y02008*/ 01510000
*               7 DEVVAR BIT(1),        /* DEV VARY OFF BY US  Y02008*/ 01520000
*           3 * CHAR(16),               /* NA                  X03008*/ 01530000
*           3 CDSDEVAD CHAR(4),         /* CDS DEVICE ADDR     X03008*/ 01540000
*             5 * CHAR(2),              /* N.A.                X03008*/ 01550000
*             5 DEVADDR CHAR(2),        /* HEX DEV ADDR        X03008*/ 01560000
*               7 CHANADR CHAR(1);      /* CHANNEL ADDR        X03008*/ 01570000
*                                                                       01580000
*         /************************************************************ 01590000
*         /*  ADDRESS OF CVT                                            01600000
*         DCL CVTADPTR PTR INIT(16);                                    01610000
*         DCL CVTADDR PTR BASED(CVTADPTR);                              01620000
*         DCL   1 CVT BASED(CVTADDR),    /* CVT                         01630000
*                3 * CHAR(40),                                          01640000
*                3 CVTILK2 PTR,          /* PTR TO UCB LOOKUP TABLE  */ 01650000
*                3 * CHAR(284),          /* N.A. IN CVT         X03008* 01660000
*                3 CVTEXT2 PTR;          /* PTR TO CVT EXTENSIONX03008* 01670000
*         DCL CVTOLTEP BASED(CVTEXT2+28) PTR; /* OLTEP PTR,CVT  X03008* 01680000
*         DCL 1 OLTEPTAB CHAR(24) BASED(CVTOLTEP), /* OLTEP TAB X03008* 01690000
*                3 DIEHEAD CHAR(4),     /* HEAD OF DIE MODULE   Y02008* 01700000
*                3 REIDEBAD PTR,        /* PTR OLTEPS REI DEB   Y02008* 01710000
*                3 * CHAR(20),          /* PTRS FOR DIE USE     Y02008* 01720000
*                3 OLTEPUCB PTR,        /* OLTEP UCBS FOR TEST  X03008* 01730000
*                3 REIUCBAD PTR,        /* DEV UCB ADDRESS      X03008* 01740000
*                3 * CHAR(4),           /* N A                  Y02008* 01750000
*                3 IOSGENTBL (18) FIXED;/* IOS WORK AREA        X03008* 01760000
*         /************************************************************ 01770000
*         /*                    REI DEB                               * 01780000
*         /************************************************************ 01790000
*         DCL 1 REIDEB CHAR(48) BDY(WORD),                              01800000
*           3 *(4) CHAR(1) INIT((4) '00'X), /* NA INIT TO 0    YA01378* 01810000
*           3 NXTDEBAD PTR(31),             /* NEXT DEB ADDRESSYA01378* 01820000
*           3 *(8) CHAR(1) INIT((8) '00'X), /* NA INIT TO 0    YA01378* 01830000
*               3 NEXTS CHAR(1) INIT('00'X),  /* NUMBER OF EXTENTS    * 01840000
*               3 *(7) CHAR(1) INIT((7)'00'X),     /* NA              * 01850000
*               3 DEBID CHAR(1) INIT('0F'X),    /* DEB IDENTIFIER     * 01860000
*               3 DEBDCBAD PTR(24),           /* DCB ADDRESS          * 01870000
*               3 RDEB28C CHAR(1) INIT('02'X),  /*  EXTENT CODE       * 01880000
*               3 RDEB28 PTR(24),             /* I/O APPENDAGE TAB AD * 01890000
*               3 RUCBAD PTR(31),             /* UCB ADDRESS          * 01900000
*               3 *(12) CHAR(1) INIT((12)'00'X);   /* NA              * 01910000
*         /************************************************************ 01920000
*         /*                    REI DCB                               * 01930000
*         /************************************************************ 01940000
*         DCL REIDCBPT PTR GENERATED;   /* POINTER TO REMOTE DCB      * 01950000
*         DCL 1 REIDCB CHAR(72) BASED(REIDCBPT),   /* REI DCB         * 01960000
*              2 *(18) FIXED,                                   /*5035* 01970000
*               3 * CHAR(44),                      /* NA              * 01980000
*               3 RDCB44 PTR(31),                  /* PTR TO DEB      * 01990000
*                5 RDCB44C CHAR(1),     /* FLAGS                 M4502* 02000000
*              2 ADRTABLE(5) FIXED;     /*VECTOR TABLE           M4502* 02010000
*  /******************************************************************* 02020000
*  /*     REI IOB                                                     * 02030000
*  /******************************************************************* 02040000
*         DCL REIOBPTR PTR GENERATED;   /* POINTER TO REMOTE IOB      * 02050000
*         DCL 1 IOB CHAR(40) BASED(REIOBPTR),     /* BREAK DOWN IOB   * 02060000
*             2 IOB1 CHAR(32),          /* USED BY EXCP               * 02070000
*              3 FLAGS BIT(8),                    /*                  * 02080000
*               5 DCH BIT(1),                     /* DATA CHAINING BIT* 02090000
*               5 CCH BIT(1),                     /*  CCW CHAINING BIT* 02100000
*               5 * BIT(6),                       /*                  * 02110000
*              3 * CHAR(1),                                             02120000
*              3 SENSE CHAR(2),         /* SENSE                      * 02130000
*              3 ECBC BIT(8),                     /* ECB CODE         * 02140000
*              3 ECBA PTR(24),                    /* ECB ADDRESS      * 02150000
*              3 * CHAR(1),                                             02160000
*              3 CSW CHAR(7),           /* CSW                        * 02170000
*              3 * BIT(8),                                              02180000
*              3 CPA PTR(24),                     /* CHANNEL PROG.ADDR* 02190000
*              3 * BIT(8),                        /*                  * 02200000
*              3 DCBA PTR(24),                    /* DCB ADDRESS      * 02210000
*              3 *(4) FIXED;                      /*                  * 02220000
*  /******************************************************************* 02230000
*  /*     REI COMMON AREA SWITCHES                                    * 02240000
*  /******************************************************************* 02250000
*         DCL CHASCT CHAR(116) GENERATED;    /* COMMON AREA           * 02260000
*         DCL CESWTR CHAR(1) GENERATED; /* COMMON AREA SWITCHES       * 02270000
*        DCL 1 * BASED(ADDR(CESWTR)),    /*                           * 02280000
*              3 RETAINAC BIT(1),        /* REI ACTIVE SWITCH         * 02290000
*              3 REMERR BIT(1),          /* PERMANENT ERROR SWITCH    * 02300000
*              3 REMNOMSG BIT(1),       /*  REMOTE NO MESSAGE SWITCH  * 02310000
*              3 * BIT(5);                                              02320000
*        DCL 1 * BASED(ADDR(CHASCT)),    /*                           * 02330000
*             3 * (9) FIXED,             /*                           * 02340000
*             3 * FIXED,                 /*                           * 02350000
*               5 * BIT(2),              /*                           * 02360000
*               5 RETSWT BIT(1),         /* ANOTHER REI ACTIVE SWITCH * 02370000
*               5 * BIT(29);             /*                           * 02380000
*  /******************************************************************* 02390000
*  /* REI BUFFERS AND ECBS                                            * 02400000
*  /******************************************************************* 02410000
*         DCL REIECB GENERATED;         /* REMOTE ECB                 * 02420000
*        DCL RECB BASED(ADDR(REIECB));   /*                           * 02430000
*  /*                                                                 * 02440000
*         DCL 1 ENECB CHAR(4) BDY(WORD),     /* ENABLE ECB            * 02450000
*               3 ENCODE CHAR(1),            /* COMPLETION CODE       * 02460000
*               3 * CHAR(1),                                            02470000
*               3 * CHAR(1),                                            02480000
*                5 * BIT(7),                                            02490000
*                5 SELFPOST BIT(1),     /* TIMEOUT BIT                * 02500000
*               3 * CHAR(1);                                            02510000
*  /*                                                                 * 02520000
*         DCL RINBUF PTR GENERATED;     /* INPUT BUFFER POINTER       * 02530000
*        DCL REIBUF CHAR(80) BASED(RINBUF);                             02540000
*  /*                                                                 * 02550000
*         DCL RTALKBUF PTR GENERATED;   /* TALK BUFFER ADDRESS        * 02560000
*         DCL TALKBUF CHAR(72) BASED(RTALKBUF);   /* TALK BUFFER      * 02570000
*         DCL TALKECB FIXED GENERATED;  /* TALK ECB                   * 02580000
*         RESTRICT(R1);                                                 02590000
*  /******************************************************************* 02600000
*  /* CHECK FOR RETAIN ALREADY ACTIVE                                 * 02610000
*  /******************************************************************* 02620000
*  /*                                                                 * 02630000
*         IOB1=IOB1&&IOB1;                   /* ZERO IOB              * 02640000
         L     @C,REIOBPTR                                        0080  02650000
         XC    0(32,@C),0(@C)                                     0080  02660000
*         ENECB=0;                      /* ZERO-ENABLE ECB      S21051* 02670000
         MVC   ENECB(4),@D1                                       0081  02680000
*         IF RETAINAC='1'B THEN          /* IS REI ACTIVE.            * 02690000
         TM    A00034,B'10000000'                                 0082  02700000
*           RETURN;                      /* YES. RETURN.              * 02710000
         BC    03,@EL01                                           0083  02720000
*         IF REIUCB=0 THEN              /* NO REI UCB?         X03008*/ 02730000
@9FF     SR    @F,@F                                              0084  02740000
         C     @F,REIUCB                                          0084  02750000
         BC    07,@9FE                                            0084  02760000
*          DO;                          /* NO REI UCB,SEND     X03008*/ 02770000
*           R1=IFD164;                  /* ADDRESS MSG IFD164I X03008*/ 02780000
         L     @8,MSGPTR                                          0086  02790000
         L     @1,4(0,@8)                                         0086  02800000
*           LINKTEXT=LINKTEXT&&LINKTEXT;                                02810000
         L     @9,MSGPTR                                          0087  02820000
         L     @9,4(0,@9)          A00004                         0087  02830000
         XC    40(32,@9),40(@9)                                   0087  02840000
*           LINKTEXT=NOUCBTXT;          /* NO 2955 UCB IN SYS  X03008*/ 02850000
         MVC   40(23,@9),MSGTEXT                                  0088  02860000
         MVI   63(@9),C' '                                        0088  02870000
         MVC   64(8,@9),63(@9)                                    0088  02880000
*           GO TO NOUCBMSG;             /* PRINT MESSAGE       X03008*/ 02890000
         BC    15,NOUCBMSG                                        0089  02900000
*          END;                                                         02910000
*         DEVADDR=UCBDEVAD;             /* GET UCB DEV ADDR    X03008*/ 02920000
@9FE     L     @C,REIUCB                                          0091  02930000
         MVC   DEVTAB54+34(2),4(@C)                               0091  02940000
*         CHANADR=CHANADR&'3F'X;        /* IGNORE ALT PATHBITS X03008*/ 02950000
         NI    DEVTAB54+34,X'3F'                                  0092  02960000
*         PSEUDODVTAB='1'B;             /* SET BIT FOR SVC59   X03008*/ 02970000
         OI    DEVTAB54+14,B'00000001'                            0093  02980000
*         ROPT0=ADDR(DEVTAB54);         /* ADDRESS DEVTABS IN  X03008*/ 02990000
         LA    @F,DEVTAB54                                        0094  03000000
         ST    @F,SVCPLIST                                        0094  03010000
*         ROPT4=ONEDEV;                 /* ONE DEV TO LOOKUP  XM04008*/ 03020000
         MVC   SVCPLIST+4(4),ONEDEV                               0095  03030000
*         ROPT8=ADDR(IOSGENTBL);        /* IOS WORK AREA       X03008*/ 03040000
         L     @8,CVTADPTR                                        0096  03050000
         L     @8,0(0,@8)          CVTADDR                        0096  03060000
         L     @8,328(0,@8)        CVT                            0096  03070000
         L     @8,28(0,@8)         CVTOLTEP                       0096  03080000
         LA    @F,40(0,@8)                                        0096  03090000
         ST    @F,SVCPLIST+8                                      0096  03100000
*         R1=64;                        /* UCB LOOK UP FNCTN   X03008*/ 03110000
         LA    @1,64                                              0097  03120000
*         R0=ADDR(ROPT);                /* ADDR SVC PARM LIST  X03008*/ 03130000
         LA    @0,ROPT                                            0098  03140000
*         GEN(SVC 59);                  /* ISSUE UCB LOOKUP    X03008*/ 03150000
         SVC 59                                                         03160000
         DS    0H                                                       03170000
*         IF REIUCBAD=0 THEN            /* IF NO 2955 UCB      X03008*/ 03180000
         SR    @F,@F                                              0100  03190000
         MVC   @TEMP4(4),32(@8)                                   0100  03200000
         C     @F,@TEMP4                                          0100  03210000
         BC    07,@9FD                                            0100  03220000
*          DO;                       /* SET UP MESSAGE IFD164I  X03008* 03230000
*           R1=IFD164;               /* ADDRESS MESSAGE         X03008* 03240000
         L     @9,MSGPTR                                          0102  03250000
         L     @1,4(0,@9)                                         0102  03260000
*           LINKTEXT=LINKTEXT&&LINKTEXT;                                03270000
         L     @6,MSGPTR                                          0103  03280000
         L     @6,4(0,@6)          A00004                         0103  03290000
         XC    40(32,@6),40(@6)                                   0103  03300000
*                                    /* CLEAR VARIABLE IN MSG   X03008* 03310000
*           LINKTEXT=NAVAILTXT;      /* NO NO 2955 CU IN SYS    X03008* 03320000
         MVC   40(28,@6),MSGTEXT+23                               0104  03330000
         MVI   68(@6),C' '                                        0104  03340000
         MVC   69(3,@6),68(@6)                                    0104  03350000
*                                                                       03360000
* NOUCBMSG:                                                             03370000
*                                                                       03380000
*         R1=IFD164I;                /* ADDRESS MSG IFD164I     Y02008* 03390000
NOUCBMSG L     @1,IFD164I                                         0105  03400000
*         GEN( PWTO REG=(1));        /* ISSUE MESSAGE           Y02008* 03410000
          PWTO REG=(1)                                                  03420000
         DS    0H                                                       03430000
*         RETURN;                                          /*  Y02008*/ 03440000
         BC    15,@EL01                                           0107  03450000
*          END;                      /*                         X03008* 03460000
*                                                                       03470000
*         /*  OUTPUT MSG IFD140I IF OLTEP VARIED 2955 OFFLINE   Y02008* 03480000
*                                                                       03490000
*         IF DEVVAR='1'B             /* DEV VARY BIT ON BY SVC? Y02008* 03500000
*          THEN                                              /* Y02008* 03510000
@9FD     TM    DEVTAB54+15,B'00001000'                            0109  03520000
         BC    12,@9FC                                            0109  03530000
*           DO;                      /* OUTPUT IFD140I MSG      Y02008* 03540000
*            RESTRICT(R1);           /* RESTRICT REG FOR MSG    Y02008* 03550000
*            R1=IFD140;              /* ADDRESS MSG IN IFDOLT54 Y02008* 03560000
         L     @C,MSGPTR                                          0112  03570000
         L     @1,16(0,@C)                                        0112  03580000
*            MSG140DV(6:8)=UCBNAME;  /* PUT DEV NAME IN MSG     Y02008* 03590000
         L     @8,REIUCB                                          0113  03600000
         L     @9,MSGPTR                                          0113  03610000
         L     @9,16(0,@9)         A00004                         0113  03620000
         MVC   17(3,@9),13(@8)                                    0113  03630000
*            GEN (PWTO REG=(1));     /* ISSUE MSG TO SYSTEM     Y02008* 03640000
         PWTO REG=(1)                                                   03650000
         DS    0H                                                       03660000
*            DEVVAR='0'B;            /* ZERO DEV VARY BIT       Y02008* 03670000
         NI    DEVTAB54+15,B'11110111'                            0115  03680000
*           END;                                             /* Y02008* 03690000
*         /************************************************************ 03700000
*         /*                   BUILD DEB AND DCB                      * 03710000
*         /************************************************************ 03720000
*         ROPT4=TSTDEBAD;                /* DEB ADDRESS         Y02008* 03730000
@9FC     MVC   SVCPLIST+4(4),TSTDEBAD                             0117  03740000
*         ROPT0=ADDR(REIDEB);                                           03750000
         LA    @F,REIDEB                                          0118  03760000
         ST    @F,SVCPLIST                                        0118  03770000
*         DEBDCBAD=REIDCBPT;             /* PUT DCB ADDRESS IN DEB    * 03780000
         MVC   REIDEB+25(3),REIDCBPT+1                            0119  03790000
*         RDEB28=ADDR(ADRTABLE);        /* PUT ADDR OF I/O APPENDAGE  * 03800000
         L     @C,REIDCBPT                                        0120  03810000
         LA    @F,72(0,@C)                                        0120  03820000
         ST    @F,@TEMP4                                          0120  03830000
         MVC   REIDEB+29(3),@TEMP4+1                              0120  03840000
*                                       /*                       M4502* 03850000
*                                        /* VECTOR TABLE IN DEB       * 03860000
*         RUCBAD=REIUCB;                 /* PUT UCB ADDRESS IN DEB    * 03870000
         MVC   REIDEB+32(4),REIUCB                                0121  03880000
*         RDCB44= ROPT4;                 /* DEB ADDRESS IN SP254      * 03890000
         MVC   44(4,@C),SVCPLIST+4                                0122  03900000
*         RDCB44C='00'X;                 /* SET DCB FLAGS FOR NO ERP  * 03910000
         MVI   44(@C),X'00'                                       0123  03920000
*         NXTDEBAD=0;                    /* ZERO ADR OF NXT DEBXA01050* 03930000
         SR    @F,@F                                              0124  03940000
         ST    @F,REIDEB+4                                        0124  03950000
*         /************************************************************ 03960000
*         /*                   MOVE DEB                               * 03970000
*         /************************************************************ 03980000
*         ROPTMIN2='54';                 /* PUT ID IN SVC PARMLIST    * 03990000
         MVC   ROPTMIN2(2),@C5                                    0125  04000000
*         R1='48'X;                      /* PUT ONE DEB MOVE CALLING  * 04010000
         LA    @1,X'48'                                           0126  04020000
*                                       /* PARAMETER IN R1            * 04030000
*         R0=ADDR(ROPT);                 /* PUT ADDR OF SVC PARAMETER * 04040000
         LA    @0,ROPT                                            0127  04050000
*                                        /* LIST IN R0                * 04060000
*         GEN(SVC  59);                  /* MOVE DEB                  * 04070000
         SVC  59                                                        04080000
         DS    0H                                                       04090000
*  /******************************************************************* 04100000
*  /* ENABLE 2955 AND TRY TO ESTABLISH CONTACT                        * 04110000
*  /******************************************************************* 04120000
*         FLAGS = '42'X;                     /* INDICATE CCW CHAINING * 04130000
         L     @8,REIOBPTR                                        0129  04140000
         MVI   0(@8),X'42'                                        0129  04150000
*         ECBA = ADDR(ENECB);                /* ADDR OF ECB FOR IOB   * 04160000
         LA    @F,ENECB                                           0130  04170000
         ST    @F,@TEMP4                                          0130  04180000
         MVC   5(3,@8),@TEMP4+1                                   0130  04190000
*         CPA = ADDR(CCWENABL);              /* ADDR OF CHAN PROG     * 04200000
         LA    @F,CCWENABL                                        0131  04210000
         ST    @F,@TEMP4                                          0131  04220000
         MVC   17(3,@8),@TEMP4+1                                  0131  04230000
*         DCBA = REIDCBPT;                   /* DCB ADDRESS           * 04240000
         MVC   21(3,@8),REIDCBPT+1                                0132  04250000
*         BUFADR=RINBUF;            /* ADDRESS OF BUFR INTO CCW       * 04260000
         MVC   READCP+1(3),RINBUF+1                               0133  04270000
*         R1=REIOBPTR;                  /* ADDRESS OF IOB IN REG 1    * 04280000
         L     @1,REIOBPTR                                        0134  04290000
*         GEN;                                                          04300000
CONTACT  EXCP  (1)                     *ENABLE 2955&CONTACT RAC         04310000
STRTCLCK STIMER REAL,TIMEOUT,DINTVL=TIME2                               04320000
WAITENBL WAIT  ECB=ENECB                     * WAIT FOR COMPLETION      04330000
STOPCLCK TTIMER CANCEL                                                  04340000
         DS    0H                                                       04350000
*                                                                       04360000
*         IF SELFPOST¬='1'B THEN GOTO CHKECB; /*TIMEOUT ?             * 04370000
         TM    ENECB+2,B'00000001'                                0136  04380000
         BC    12,CHKECB                                          0137  04390000
*                                                                       04400000
*         R1=IFD164;                    /* ADDR MESSAGE IFD164  X03008* 04410000
         L     @9,MSGPTR                                          0138  04420000
         L     @1,4(0,@9)                                         0138  04430000
*         LINKTEXT=LINKTEXT&&LINKTEXT;                                  04440000
         L     @6,MSGPTR                                          0139  04450000
         L     @6,4(0,@6)          A00004                         0139  04460000
         XC    40(32,@6),40(@6)                                   0139  04470000
*         LINKTEXT=TOUTTXT;            /* TIMEOUT MESSAGE       X03008* 04480000
         MVC   40(31,@6),MSGTEXT+51                               0140  04490000
         MVI   71(@6),C' '                                        0140  04500000
*         GOTO FAILED;                                                  04510000
         BC    15,FAILED                                          0141  04520000
*  CHKECB:                                                              04530000
*         IF ENCODE¬='7F'X THEN        /* I/O NOT DONE          X03008* 04540000
CHKECB   CLI   ENECB,X'7F'                                        0142  04550000
         BC    08,@9FB                                            0142  04560000
*          DO;                         /* HARDWARE/INTERFACE    X03008* 04570000
*          R1=IFD164;                  /* ADDR MESSAGE          X03008* 04580000
         L     @C,MSGPTR                                          0144  04590000
         L     @1,4(0,@C)                                         0144  04600000
*          LINKTEXT=LINKTEXT&&LINKTEXT;  /* CLEAR VARIABLE MSG  X03008* 04610000
         L     @8,MSGPTR                                          0145  04620000
         L     @8,4(0,@8)          A00004                         0145  04630000
         XC    40(32,@8),40(@8)                                   0145  04640000
*          LINKTEXT=EQMPTTXT;          /* HDWRE/INTRFC ERR      X03008* 04650000
         MVC   40(24,@8),MSGTEXT+110                              0146  04660000
         MVI   64(@8),C' '                                        0146  04670000
         MVC   65(7,@8),64(@8)                                    0146  04680000
*          GO TO FAILED;               /* GO PRINT MESSAGE      X03008* 04690000
         BC    15,FAILED                                          0147  04700000
*         END;                         /*                       X03008* 04710000
*  /******************************************************************* 04720000
*  /* CONTACT ESTABLISHED,WRITE POSITIVE RESPONSE TO REMOTE           * 04730000
*  /******************************************************************* 04740000
*  WRTRSP:ENECB=0;                      /* ZERO THE ECB               * 04750000
@9FB     EQU   *                                                  0149  04760000
WRTRSP   MVC   ENECB(4),@D1                                       0149  04770000
*         IOB1=IOB1&&IOB1;                   /* ZERO IOB              * 04780000
         L     @C,REIOBPTR                                        0150  04790000
         XC    0(32,@C),0(@C)                                     0150  04800000
*         FLAGS='42'X;                  /* INDICATE CCW CHAINING      * 04810000
         MVI   0(@C),X'42'                                        0151  04820000
*         ECBA=ADDR(ENECB);             /* ADDRESS OF ECB IN IOB      * 04830000
         LA    @F,ENECB                                           0152  04840000
         ST    @F,@TEMP4                                          0152  04850000
         MVC   5(3,@C),@TEMP4+1                                   0152  04860000
*         CPA=ADDR(CCWWRPOS);           /* CHAN PROG ADDR IN IOB      * 04870000
         LA    @F,CCWWRPOS                                        0153  04880000
         ST    @F,@TEMP4                                          0153  04890000
         MVC   17(3,@C),@TEMP4+1                                  0153  04900000
*         BUFADR1=ADDR(POS);            /* ADDRESS OF DATA INTO CCW   * 04910000
         LA    @F,POS                                             0154  04920000
         ST    @F,@TEMP4                                          0154  04930000
         MVC   WRPOS+1(3),@TEMP4+1                                0154  04940000
*         BUFADR2=ADDR(RESPONSE);       /*ADDRESS OF RECEIVE BUF IN CC* 04950000
         LA    @F,RESPONSE                                        0155  04960000
         ST    @F,@TEMP4                                          0155  04970000
         MVC   RDEOT+1(3),@TEMP4+1                                0155  04980000
*         DCBA=REIDCBPT;                /*ADDRESS OF DCB INTO IOB     * 04990000
         MVC   21(3,@C),REIDCBPT+1                                0156  05000000
*         R1=REIOBPTR;                  /* ADDRESS OF IOB IN REG 1    * 05010000
         L     @1,REIOBPTR                                        0157  05020000
*         GEN;                                                          05030000
WRITRESP EXCP  (1)                     *WRITE Y READ EOT                05040000
STRTCLK1 STIMER REAL,TIMEOUT,DINTVL=TIME2   *                     M4502 05050000
WAITRESP WAIT  ECB=ENECB                                                05060000
STOPCLK1 TTIMER CANCEL                      *                     M4502 05070000
         TM    ENECB,X'7F'                                              05080000
         BO    ESTABL                                          X02008   05090000
         DS    0H                                                       05100000
*         R1=IFD164;                   /* ADDRESS MESSAGE       X03008* 05110000
         L     @8,MSGPTR                                          0159  05120000
         L     @1,4(0,@8)                                         0159  05130000
*         LINKTEXT=LINKTEXT&&LINKTEXT; /* CLEAR MESSAGE         X03008* 05140000
         L     @9,MSGPTR                                          0160  05150000
         L     @9,4(0,@9)          A00004                         0160  05160000
         XC    40(32,@9),40(@9)                                   0160  05170000
*         LINKTEXT=RIWTOTXT;           /* ADDR READ INIT WAIT   X03008* 05180000
         MVC   40(28,@9),MSGTEXT+82                               0161  05190000
         MVI   68(@9),C' '                                        0161  05200000
         MVC   69(3,@9),68(@9)                                    0161  05210000
*  /******************************************************************* 05220000
*  /* FAILED TO ESTABLISH CONTACT TELL ON-SITE VIA PWTO              */ 05230000
*  /******************************************************************* 05240000
*  FAILED:R1 = IFD164;                  /* ADDRESS OF ERROR MESSAGE   * 05250000
FAILED   L     @C,MSGPTR                                          0162  05260000
         L     @1,4(0,@C)                                         0162  05270000
*         GEN(PWTO  REG=(1));           /* ISSUE IT                   * 05280000
         PWTO  REG=(1)                                                  05290000
         DS    0H                                                       05300000
*         IF SELFPOST¬='1'B             /* WAS THERE TIME OUT  X03008*/ 05310000
*          THEN                         /* IN INTERFACE ?      X03008*/ 05320000
         TM    ENECB+2,B'00000001'                                0164  05330000
*           GO TO AA1;                  /* NO, PRNT OUT SENSE  X03008*/ 05340000
*         RETURN;                                                       05350000
         BC    03,@EL01                                           0166  05360000
*     AA1:SNSOUT=SENSE;                 /* GET SENSE BYTES            * 05370000
AA1      L     @C,REIOBPTR                                        0167  05380000
         MVC   OUTBUFR(2),2(@C)                                   0167  05390000
*         CSWOUT=CSW;                   /* GET CSW BYTES              * 05400000
         MVC   OUTBUFR+2(7),9(@C)                                 0168  05410000
*         R1=ADDR(CNVRT);               /* POINT TO CALLING SEQUENCE  * 05420000
         LA    @1,CNVRT                                           0169  05430000
*         R15=TAB28;                    /* POINT TO CONVERT MACRO     * 05440000
         L     @F,TAB28                                           0170  05450000
*         GEN(BALR R14,R15);            /* CONVERT SNS&CSW TO EBCDIC  * 05460000
         BALR R14,R15                                                   05470000
         DS    0H                                                       05480000
*         R1=IFD137;                    /* SET UP FOR PWTO            * 05490000
         L     @8,MSGPTR                                          0172  05500000
         L     @1,12(0,@8)                                        0172  05510000
*         MSGSNS=SNSIN;                 /* PUT IN SENSE DATA          * 05520000
         L     @9,MSGPTR                                          0173  05530000
         L     @9,12(0,@9)         A00004                         0173  05540000
         MVC   37(4,@9),INBUF                                     0173  05550000
         MVI   41(@9),C' '                                        0173  05560000
         MVC   42(7,@9),41(@9)                                    0173  05570000
*         MSGCSW=CSWIN;                 /* PUT IN CSW DATA            * 05580000
         MVC   18(14,@9),INBUF+4                                  0174  05590000
*         GEN(PWTO REG=(1));            /* WRITE IT                   * 05600000
         PWTO REG=(1)                                                   05610000
         DS    0H                                                       05620000
*         R1=REIUCB;                    /* YES                        * 05630000
         L     @1,REIUCB                                          0176  05640000
*         GEN;                          /* SETUP TO PURGE EXCP        * 05650000
HIOENABL SVC   33                      * PURGE                          05660000
         DS    0H                                                       05670000
*         RETURN;                                                       05680000
         BC    15,@EL01                                           0178  05690000
*  /******************************************************************* 05700000
*  /* CONNECTION IS CONFIRMED TELL ON-SITE,ISSUE OUTSTANDING          * 05710000
*  /* COMMUNICATIONS WTOR,SET APPROPRIATE SWITCHES AND ISSUE READ     * 05720000
*  /* INITIAL CHANNEL PROGRAM BEFORE RETURNING                        * 05730000
*  /******************************************************************* 05740000
*  ESTABL:R1=IFD163;                                                    05750000
ESTABL   L     @C,MSGPTR                                          0179  05760000
         L     @1,0(0,@C)                                         0179  05770000
*         RETAINAC = '1'B;                   /* SET RETAIN ACTIVE SWT * 05780000
         OI    A00034,B'10000000'                                 0180  05790000
*         RETSWT = '1'B;                     /* ANOTHER ACTIVE SWT    * 05800000
         OI    A00036+36,B'00100000'                              0181  05810000
*         REMNOMSG='1'B;                /* REMOTE NO MESSAGE          * 05820000
         OI    A00034,B'00100000'                                 0182  05830000
*         GEN(PWTO   REG=(1));                                          05840000
         PWTO   REG=(1)                                                 05850000
         DS    0H                                                       05860000
*         REMNOMSG='0'B;                /* RESET FLAG                 * 05870000
         NI    A00034,B'11011111'                                 0184  05880000
*         R1=IFD168;                    /* ADDR OF MSG TO R1          * 05890000
         L     @1,8(0,@C)                                         0185  05900000
*         BUFAD=RTALKBUF;               /* ADDR OF RESPONSE BUFFER    * 05910000
         MVC   1(3,@1),RTALKBUF+1                                 0186  05920000
*         TALKBUF(1)=' ';                /*                      M5842* 05930000
         L     @8,RTALKBUF                                        0187  05940000
         MVI   0(@8),C' '                                         0187  05950000
*         TALKBUF(2:72)=TALKBUF(1:71);   /*                      M5842* 05960000
         MVC   1(71,@8),0(@8)                                     0188  05970000
*         LENGTH='48'X;                 /* LENGTH OF BUFFER           * 05980000
         MVI   0(@1),X'48'                                        0189  05990000
*         TALKECB=0;                    /* ZERO ECB                   * 06000000
         SR    @F,@F                                              0190  06010000
         ST    @F,TALKECB                                         0190  06020000
*         MECBAD=ADDR(TALKECB);         /* ADDR OF ECB                * 06030000
         LA    @F,TALKECB                                         0191  06040000
         ST    @F,4(0,@1)                                         0191  06050000
*         REMNOMSG='1'B;                /* DONT SEND TO REMOTE        * 06060000
         OI    A00034,B'00100000'                                 0192  06070000
*         GEN(PWTOR  REG=(1),WAIT=NO);   /* ISSUE WTOR                * 06080000
         PWTOR  REG=(1),WAIT=NO                                         06090000
         DS    0H                                                       06100000
*         REMNOMSG='0'B;                 /*ZERO REMNOMSG FLAG         * 06110000
         NI    A00034,B'11011111'                                 0194  06120000
*         REIBUF=REIBUF&&REIBUF;    /* ZERO REMOTE INPUT BUFFER       * 06130000
         L     @9,RINBUF                                          0195  06140000
         XC    0(80,@9),0(@9)                                     0195  06150000
*         IOB1=IOB1&&IOB1;                   /* ZERO IOB              * 06160000
         L     @6,REIOBPTR                                        0196  06170000
         XC    0(32,@6),0(@6)                                     0196  06180000
*         FLAGS='42'X;                  /* CCW CHAINING IN IOB        * 06190000
         MVI   0(@6),X'42'                                        0197  06200000
*         RECB = 0;                          /* ZERO REMOTE ECB       * 06210000
         SR    @F,@F                                              0198  06220000
         ST    @F,RECB                                            0198  06230000
*         ECBA = ADDR(RECB);                 /* ADDR OF REMOTE ECB    * 06240000
         LA    @F,RECB                                            0199  06250000
         ST    @F,@TEMP4                                          0199  06260000
         MVC   5(3,@6),@TEMP4+1                                   0199  06270000
*         CPA = ADDR(CCWPREP);               /* ADDR OF READ INIT CP  * 06280000
         LA    @F,CCWPREP                                         0200  06290000
         ST    @F,@TEMP4                                          0200  06300000
         MVC   17(3,@6),@TEMP4+1                                  0200  06310000
*         DCBA = REIDCBPT;                   /* DCB ADDRESS           * 06320000
         MVC   21(3,@6),REIDCBPT+1                                0201  06330000
*         R1=REIOBPTR;                  /* ADDRESS OF IOB IN REG 1    * 06340000
         L     @1,REIOBPTR                                        0202  06350000
*         GEN;                                                          06360000
READINIT EXCP  (1)                                                      06370000
         DS    0H                                                       06380000
*         RETURN;                                                       06390000
*  /******************************************************************* 06400000
*  /* STIMER EXIT ROUTINE-2 MINUTE INTERUPT                           * 06410000
*  /******************************************************************* 06420000
*  TIMEOUT:PROCEDURE;                                                   06430000
@EL01    L     @D,4(0,@D)                                         0205  06440000
         LM    @E,@C,12(@D)                                       0205  06450000
         BCR   15,@E                                              0205  06460000
TIMEOUT  STM   @E,@C,12(@D)                                       0205  06470000
         ST    @D,@SAV002+4                                       0205  06480000
         LA    @F,@SAV002                                         0205  06490000
         ST    @F,8(0,@D)                                         0205  06500000
         LR    @D,@F                                              0205  06510000
*         GENERATE;                                                     06520000
* POST 100 COMPLETION CODE                                              06530000
POSTECB  POST  ENECB,256                                                06540000
         DS    0H                                                       06550000
*         RETURN;                                                       06560000
*         END TIMEOUT;                                                  06570000
@EL02    L     @D,4(0,@D)                                         0208  06580000
         LM    @E,@C,12(@D)                                       0208  06590000
         BCR   15,@E                                              0208  06600000
*         END IFDOLT54;                                                 06610000
@DATA1   EQU   *                                                        06620000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           06630000
@1       EQU   01                                                       06640000
@2       EQU   02                                                       06650000
@3       EQU   03                                                       06660000
@4       EQU   04                                                       06670000
@5       EQU   05                                                       06680000
@6       EQU   06                                                       06690000
@7       EQU   07                                                       06700000
@8       EQU   08                                                       06710000
@9       EQU   09                                                       06720000
@A       EQU   10                                                       06730000
@B       EQU   11                                                       06740000
@C       EQU   12                                                       06750000
@D       EQU   13                                                       06760000
@E       EQU   14                                                       06770000
@F       EQU   15                                                       06780000
@D1      DC    F'0'                                                     06790000
         DS    0F                                                       06800000
@C5      DC    C'54'                                                    06810000
         DS    0D                                                       06820000
@DATA    EQU   *                                                        06830000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   06840000
         ORG   @DATA+00000072                                           06850000
POS      EQU   *                   1 BYTE(S)                            06860000
         DC    X'76'                                                    06870000
RESPONSE EQU   @DATA+00000073      5 BYTE(S)                            06880000
R0       EQU   00000000            FULLWORD POINTER REGISTER            06890000
R1       EQU   00000001            FULLWORD POINTER REGISTER            06900000
R2       EQU   00000002            FULLWORD POINTER REGISTER            06910000
R3       EQU   00000003            FULLWORD INTEGER REGISTER            06920000
R4       EQU   00000004            FULLWORD INTEGER REGISTER            06930000
R5       EQU   00000005            FULLWORD INTEGER REGISTER            06940000
R6       EQU   00000006            FULLWORD INTEGER REGISTER            06950000
R7       EQU   00000007            FULLWORD INTEGER REGISTER            06960000
R8       EQU   00000008            FULLWORD INTEGER REGISTER            06970000
R9       EQU   00000009            FULLWORD INTEGER REGISTER            06980000
R10      EQU   00000010            FULLWORD INTEGER REGISTER            06990000
R11      EQU   00000011            FULLWORD INTEGER REGISTER            07000000
R12      EQU   00000012            FULLWORD INTEGER REGISTER            07010000
R13      EQU   00000013            FULLWORD INTEGER REGISTER            07020000
R14      EQU   00000014            FULLWORD INTEGER REGISTER            07030000
R15      EQU   00000015            FULLWORD INTEGER REGISTER            07040000
A00003   EQU   00000000            8 BYTE(S) ON WORD                    07050000
LENGTH   EQU   A00003+00000000     1 BYTE(S)                            07060000
BUFAD    EQU   A00003+00000001     3  BYTE  POINTER ON WORD+1           07070000
MECBAD   EQU   A00003+00000004     FULLWORD POINTER                     07080000
         ORG   @DATA+00000080                                           07090000
MSGPTR   EQU   *                   FULLWORD POINTER                     07100000
         DC    VL4(IFDMSG54)                                            07110000
A00004   EQU   00000000            20 BYTE(S) ON WORD                   07120000
IFD163   EQU   A00004+00000000     FULLWORD POINTER                     07130000
IFD164   EQU   A00004+00000004     FULLWORD POINTER                     07140000
IFD168   EQU   A00004+00000008     FULLWORD POINTER                     07150000
IFD137   EQU   A00004+00000012     FULLWORD POINTER                     07160000
IFD140   EQU   A00004+00000016     FULLWORD POINTER                     07170000
ERRMSG   EQU   00000000            47 BYTE(S)                           07180000
A00005   EQU   ERRMSG+00000000     4 BYTE(S)                            07190000
A00006   EQU   ERRMSG+00000004     14 BYTE(S)                           07200000
MSGCSW   EQU   ERRMSG+00000018     14 BYTE(S)                           07210000
A00007   EQU   ERRMSG+00000032     5 BYTE(S)                            07220000
MSGSNS   EQU   ERRMSG+00000037     12 BYTE(S)                           07230000
LINKMSG  EQU   00000000            68 BYTE(S)                           07240000
A00008   EQU   LINKMSG+00000000    40 BYTE(S)                           07250000
LINKTEXT EQU   LINKMSG+00000040    32 BYTE(S)                           07260000
MSGTEXT  EQU   @DATA+00000084      106 BYTE(S)                          07270000
NOUCBTXT EQU   *                   23 BYTE(S)                           07280000
         DC    C'NO UCB SYSGEND FOR 2955'                               07290000
NAVAILTX EQU   *                   28 BYTE(S)                           07300000
         DC    C'2955 CU NOT FREE FOR TESTING'                          07310000
TOUTTXT  EQU   *                   31 BYTE(S)                           07320000
         DC    C'INITIAL REMOTE RESPONSE TIMEOUT'                       07330000
RIWTOTXT EQU   *                   28 BYTE(S)                           07340000
         DC    C'TIMEOUT ON READ INITIAL WAIT'                          07350000
EQMPTTXT EQU   *                   24 BYTE(S)                           07360000
         DC    C'HARDWARE/INTERFACE ERROR'                              07370000
MSG140   EQU   00000000            20 BYTE(S)                           07380000
A00009   EQU   MSG140+00000000     12 BYTE(S)                           07390000
MSG140DV EQU   MSG140+00000012     8 BYTE(S)                            07400000
INBUF    EQU   @DATA+00000218      18 BYTE(S)                           07410000
SNSIN    EQU   INBUF+00000000      4 BYTE(S)                            07420000
CSWIN    EQU   INBUF+00000004      14 BYTE(S)                           07430000
OUTBUFR  EQU   @DATA+00000236      9 BYTE(S)                            07440000
SNSOUT   EQU   OUTBUFR+00000000    2 BYTE(S)                            07450000
CSWOUT   EQU   OUTBUFR+00000002    7 BYTE(S)                            07460000
         ORG   @DATA+00000248                                           07470000
TIME2    EQU   *                   8 BYTE(S) ON DWORD                   07480000
         DC    X'F0F0F1F0F0F0F0C0'                                      07490000
UCB2955  EQU   00000000            16 BYTE(S)                           07500000
A00010   EQU   UCB2955+00000000    4 BYTE(S)                            07510000
UCBDEVAD EQU   UCB2955+00000004    2 BYTE(S)                            07520000
UCBCHNAD EQU   UCB2955+00000004    1 BYTE(S)                            07530000
UCBUADR  EQU   UCB2955+00000005    1 BYTE(S)                            07540000
A00011   EQU   UCB2955+00000006    7 BYTE(S)                            07550000
UCBNAME  EQU   UCB2955+00000013    3 BYTE(S)                            07560000
ONEDEV   EQU   *                   FULLWORD INTEGER                     07570000
         DC    XL4'00000001'                                            07580000
DEVTAB54 EQU   *                   36*1 BYTE(S)                         07590000
         DC    00036X'00'                                               07600000
A00012   EQU   DEVTAB54+00000000   8 BYTE(S)                            07610000
DEVUCB   EQU   DEVTAB54+00000008   4  BYTE  POINTER                     07620000
DEVFLGS  EQU   DEVTAB54+00000012   4 BYTE(S)                            07630000
A00013   EQU   DEVTAB54+00000012   2 BYTE(S)                            07640000
FLAG3    EQU   DEVTAB54+00000014   1 BYTE(S)                            07650000
A00014   EQU   DEVTAB54+00000014   7 BIT(S)                             07660000
PSEUDODV EQU   DEVTAB54+00000014   1 BIT(S)                             07670000
FLAG4    EQU   DEVTAB54+00000015   1 BYTE(S)                            07680000
A00015   EQU   DEVTAB54+00000015   4 BIT(S)                             07690000
DEVVAR   EQU   DEVTAB54+00000015   1 BIT(S)                             07700000
A00016   EQU   DEVTAB54+00000016   16 BYTE(S)                           07710000
CDSDEVAD EQU   DEVTAB54+00000032   4 BYTE(S)                            07720000
A00017   EQU   DEVTAB54+00000032   2 BYTE(S)                            07730000
DEVADDR  EQU   DEVTAB54+00000034   2 BYTE(S)                            07740000
CHANADR  EQU   DEVTAB54+00000034   1 BYTE(S)                            07750000
         ORG   @DATA+00000332                                           07760000
CVTADPTR EQU   *                   FULLWORD POINTER                     07770000
         DC    AL4(16)                                                  07780000
CVTADDR  EQU   00000000            FULLWORD POINTER                     07790000
CVT      EQU   00000000            332 BYTE(S) ON WORD                  07800000
A00018   EQU   CVT+00000000        40 BYTE(S)                           07810000
CVTILK2  EQU   CVT+00000040        FULLWORD POINTER                     07820000
A00019   EQU   CVT+00000044        284 BYTE(S)                          07830000
CVTEXT2  EQU   CVT+00000328        FULLWORD POINTER                     07840000
CVTOLTEP EQU   00000028            FULLWORD POINTER                     07850000
OLTEPTAB EQU   00000000            24 BYTE(S)                           07860000
DIEHEAD  EQU   OLTEPTAB+00000000   4 BYTE(S)                            07870000
REIDEBAD EQU   OLTEPTAB+00000004   4  BYTE  POINTER                     07880000
A00020   EQU   OLTEPTAB+00000008   20 BYTE(S)                           07890000
OLTEPUCB EQU   OLTEPTAB+00000028   4  BYTE  POINTER                     07900000
REIUCBAD EQU   OLTEPTAB+00000032   4  BYTE  POINTER                     07910000
A00021   EQU   OLTEPTAB+00000036   4 BYTE(S)                            07920000
IOSGENTB EQU   OLTEPTAB+00000040   18*4  BYTE  INTEGER                  07930000
REIDEB   EQU   @DATA+00000336      48 BYTE(S) ON WORD                   07940000
A00022   EQU   *                   4*1 BYTE(S)                          07950000
         DC    00004X'00'                                               07960000
NXTDEBAD EQU   REIDEB+00000004     FULLWORD POINTER                     07970000
         ORG   REIDEB+00000008                                          07980000
A00023   EQU   *                   8*1 BYTE(S)                          07990000
         DC    00008X'00'                                               08000000
NEXTS    EQU   *                   1 BYTE(S)                            08010000
         DC    X'00'                                                    08020000
A00024   EQU   *                   7*1 BYTE(S)                          08030000
         DC    00007X'00'                                               08040000
DEBID    EQU   *                   1 BYTE(S)                            08050000
         DC    X'0F'                                                    08060000
DEBDCBAD EQU   REIDEB+00000025     3  BYTE  POINTER ON WORD+1           08070000
         ORG   REIDEB+00000028                                          08080000
RDEB28C  EQU   *                   1 BYTE(S)                            08090000
         DC    X'02'                                                    08100000
RDEB28   EQU   REIDEB+00000029     3  BYTE  POINTER ON WORD+1           08110000
RUCBAD   EQU   REIDEB+00000032     FULLWORD POINTER                     08120000
         ORG   REIDEB+00000036                                          08130000
A00025   EQU   *                   12*1 BYTE(S)                         08140000
         DC    00012X'00'                                               08150000
REIDCB   EQU   00000000            72 BYTE(S)                           08160000
A00026   EQU   REIDCB+00000000     18*4  BYTE  INTEGER                  08170000
A00027   EQU   REIDCB+00000000     44 BYTE(S)                           08180000
RDCB44   EQU   REIDCB+00000044     4  BYTE  POINTER                     08190000
RDCB44C  EQU   REIDCB+00000044     1 BYTE(S)                            08200000
ADRTABLE EQU   REIDCB+00000072     5*4  BYTE  INTEGER                   08210000
IOB      EQU   00000000            40 BYTE(S)                           08220000
IOB1     EQU   IOB+00000000        32 BYTE(S)                           08230000
FLAGS    EQU   IOB+00000000        8 BIT(S)                             08240000
DCH      EQU   IOB+00000000        1 BIT(S)                             08250000
CCH      EQU   IOB+00000000        1 BIT(S)                             08260000
A00028   EQU   IOB+00000000        6 BIT(S)                             08270000
A00029   EQU   IOB+00000001        1 BYTE(S)                            08280000
SENSE    EQU   IOB+00000002        2 BYTE(S)                            08290000
ECBC     EQU   IOB+00000004        8 BIT(S)                             08300000
ECBA     EQU   IOB+00000005        3  BYTE  POINTER                     08310000
A00030   EQU   IOB+00000008        1 BYTE(S)                            08320000
CSW      EQU   IOB+00000009        7 BYTE(S)                            08330000
A00031   EQU   IOB+00000016        8 BIT(S)                             08340000
CPA      EQU   IOB+00000017        3  BYTE  POINTER                     08350000
A00032   EQU   IOB+00000020        8 BIT(S)                             08360000
DCBA     EQU   IOB+00000021        3  BYTE  POINTER                     08370000
A00033   EQU   IOB+00000024        4*4  BYTE  INTEGER                   08380000
ENECB    EQU   @DATA+00000384      4 BYTE(S) ON WORD                    08390000
ENCODE   EQU   ENECB+00000000      1 BYTE(S)                            08400000
A00041   EQU   ENECB+00000001      1 BYTE(S)                            08410000
A00042   EQU   ENECB+00000002      1 BYTE(S)                            08420000
A00043   EQU   ENECB+00000002      7 BIT(S)                             08430000
SELFPOST EQU   ENECB+00000002      1 BIT(S)                             08440000
A00044   EQU   ENECB+00000003      1 BYTE(S)                            08450000
REIBUF   EQU   00000000            80 BYTE(S)                           08460000
TALKBUF  EQU   00000000            72 BYTE(S)                           08470000
IFD164I  EQU   @DATA+00000388      FULLWORD INTEGER                     08480000
@SAV002  EQU   @DATA+00000392      72 BYTE(S) ON WORD                   08490000
         ORG   @DATA                                                    08500000
         DS    00000464C                                                08510000
@TEMPS   DS    0F                                                       08520000
@TEMP4   DC    F'0'                                                     08530000
CCWENABL CCW   39,0,96,1                                                08540000
CCWPREP  CCW   6,0,96,1                                                 08550000
CCWREADD CCW   2,0,32,78                                                08560000
CCWWRPOS CCW   1,0,96,1                                        X02008   08570000
CCWRDEOT CCW   2,0,32,1                                        X02008   08580000
         SPACE                                                          08590000
CNVRT    DC    B'00000000'                                              08600000
         DC    AL1(2)                                                   08610000
         DC    CL2'41'                                                  08620000
         DC    A(OUTBUFR)                                               08630000
         DC    A(INBUF)                                                 08640000
         DC    AL2(9+32768)                                             08650000
RACINIT  IFDCOM                                                         08660000
READCP   EQU   CCWREADD+00000000   8 BYTE(S)                            08670000
OP       EQU   READCP+00000000     8 BIT(S)                             08680000
BUFADR   EQU   READCP+00000001     3  BYTE  POINTER                     08690000
FLG      EQU   READCP+00000004     8 BIT(S)                             08700000
A00000   EQU   READCP+00000005     8 BIT(S)                             08710000
BYTECNT  EQU   READCP+00000006     16 BIT(S)                            08720000
WRPOS    EQU   CCWWRPOS+00000000   8 BYTE(S)                            08730000
OP1      EQU   WRPOS+00000000      8 BIT(S)                             08740000
BUFADR1  EQU   WRPOS+00000001      3  BYTE  POINTER                     08750000
FLG1     EQU   WRPOS+00000004      8 BIT(S)                             08760000
A00001   EQU   WRPOS+00000005      8 BIT(S)                             08770000
BYTECNT1 EQU   WRPOS+00000006      16 BIT(S)                            08780000
RDEOT    EQU   CCWRDEOT+00000000   8 BYTE(S)                            08790000
OP2      EQU   RDEOT+00000000      8 BIT(S)                             08800000
BUFADR2  EQU   RDEOT+00000001      3  BYTE  POINTER                     08810000
FLG2     EQU   RDEOT+00000004      8 BIT(S)                             08820000
A00002   EQU   RDEOT+00000005      8 BIT(S)                             08830000
BYTECNT2 EQU   RDEOT+00000006      16 BIT(S)                            08840000
ROPTMIN2 EQU   ROPT-00000002       2 BYTE(S)                            08850000
SVCPLIST EQU   ROPT+00000000       12 BYTE(S) ON WORD                   08860000
ROPT0    EQU   SVCPLIST+00000000   FULLWORD POINTER                     08870000
ROPT4    EQU   SVCPLIST+00000004   FULLWORD POINTER                     08880000
ROPT8    EQU   SVCPLIST+00000008   FULLWORD POINTER                     08890000
A00034   EQU   CESWTR+00000000     1 BYTE(S) ON WORD                    08900000
RETAINAC EQU   A00034+00000000     1 BIT(S)                             08910000
REMERR   EQU   A00034+00000000     1 BIT(S)                             08920000
REMNOMSG EQU   A00034+00000000     1 BIT(S)                             08930000
A00035   EQU   A00034+00000000     5 BIT(S)                             08940000
A00036   EQU   CHASCT+00000000     40 BYTE(S) ON WORD                   08950000
A00037   EQU   A00036+00000000     9*FULLWORD INTEGER                   08960000
A00038   EQU   A00036+00000036     FULLWORD INTEGER                     08970000
A00039   EQU   A00036+00000036     2 BIT(S)                             08980000
RETSWT   EQU   A00036+00000036     1 BIT(S)                             08990000
A00040   EQU   A00036+00000036     29 BIT(S)                            09000000
RECB     EQU   REIECB+00000000     FULLWORD INTEGER                     09010000
@DATEND  EQU   *                                                        09020000
         END   IFDOLT54                                                 09030000
./  ADD  SSI=71600010,NAME=IFDOLT55
         TITLE ' RETAIN/370 MESSAGE HANDLER IFDOLT55'                   00010000
         TITLE 'RETAIN/370 MESSAGE HANDLER IFDOLT55'                    00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT55 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT55 15 APR 74'                             0002  00070000
         STM   @E,@C,12(@D)                                       0002  00080000
         BALR  @B,0                                               0002  00090000
@PSTART  DS    0H                                                 0002  00100000
         USING @PSTART+00000,@B                                   0002  00110000
         ST    @D,@SAV001+4                                       0002  00120000
         LA    @F,@SAV001                                         0002  00130000
         ST    @F,8(0,@D)                                         0002  00140000
         LR    @D,@F                                              0002  00150000
*         GEN(USING  CHASCT,2);                                         00160000
         USING  CHASCT,2                                                00170000
         DS    0H                                                       00180000
*  GENERATE DATA;                                                       00190000
*         DCL CCWWRIN CHAR(8) GENERATED;                                00200000
*         DCL 1 WWRIN CHAR(8) BASED(ADDR(CCWWRIN)),                     00210000
*              3 * CHAR(6),                                             00220000
*              3 DISP PTR(15);          /* CCW CHARACTER COUNT        * 00230000
*         DCL CCWWREOT CHAR(8) GENERATED;                               00240000
*         DCL CCWRDI CHAR(8) GENERATED;                                 00250000
*         DCL CCWWRRSP CHAR(8) GENERATED;                               00260000
*  GEN(EJECT);                                                          00270000
         EJECT                                                          00280000
         DS    0H                                                       00290000
*  /******************************************************************* 00300000
*  /*              REGISTERS                                          * 00310000
*  /******************************************************************* 00320000
*         DCL R0 REG(0) PTR;                                            00330000
*         DCL R1 REG(1) PTR;                                            00340000
*         DCL R2 REG(2) PTR;                                            00350000
*         DCL R3 REG(3);                                                00360000
*         DCL R4 REG(4);                                                00370000
*         DCL R5 REG(5);                                                00380000
*         DCL R6 REG(6);                                                00390000
*         DCL R7 REG(7);                                                00400000
*         DCL R8 REG(8) PTR;                                            00410000
*         DCL R9 REG(9);                                                00420000
*         DCL R10 REG(10);                                              00430000
*         DCL R11 REG(11);                                              00440000
*         DCL R12 REG(12);                                              00450000
*         DCL R13 REG(13);                                              00460000
*         DCL R14 REG(14);                                              00470000
*         DCL R15 REG(15);                                              00480000
*         RESTRICT (2,3,4,5,6,7,8,9);                                   00490000
*         DCL R1SAVE PTR;               /* REG 1 SAVE AREA            * 00500000
*  /******************************************************************* 00510000
*  /* LABELS AND POINTERS FOR INDIRECT ADDRESSING OF THE FREE PWTOR   * 00520000
*  /* SECTION AND THE EXCP SECTION                                    * 00530000
*  /******************************************************************* 00540000
*         DCL OUTSTD LABEL;             /* OUTSTANDING PWTOR'S        * 00550000
*         DCL RPLIMD LABEL;             /* IMMEDIATE PWTOR'S          * 00560000
*         DCL FREEPTR PTR;              /* RETURN AREA POINTER        * 00570000
*         DCL FREERTRN LABEL BASED(FREEPTR); /*RETURN LABEL           * 00580000
*  /*                                                                 * 00590000
*         DCL AA LABEL;                  /* RETURN LABEL              * 00600000
*         DCL BB LABEL;                  /* RETURN LABEL              * 00610000
*         DCL CONTEN LABEL;             /* RETURN LABEL               * 00620000
*         DCL EXCPPTR PTR;               /* RETURN LABEL POINTER      * 00630000
*         DCL EXCPRTRN LABEL BASED(EXCPPTR); /* ADDR OF RETURN LABEL  * 00640000
*  /******************************************************************* 00650000
*  /*                RETAIN/370 IOB                                   * 00660000
*  /******************************************************************* 00670000
*         GEN(ENTRY REIOB);                                             00680000
         ENTRY REIOB                                                    00690000
         DS    0H                                                       00700000
*         DCL 1 REIOB CHAR(52) BDY(WORD), /* IOB                      * 00710000
*             2 REIOB1 CHAR(32),                                        00720000
*              3 FLAGS BIT(8),                                          00730000
*               5 DCH BIT(1),           /* DATA CHAINING              * 00740000
*               5 CCH BIT(1),           /* COMMAND CHAINING           * 00750000
*               5 * BIT(6),             /*                            * 00760000
*              3 * BIT(24),             /*                            * 00770000
*              3 ECBC BIT(8),           /* ECB CODE                   * 00780000
*              3 ECBA PTR(24),          /* ECB ADDRESS                * 00790000
*              3 CSW BIT(64),           /* CSW                        * 00800000
*               5 * BIT(32),            /*                            * 00810000
*               5 CEDEUE BIT(8),        /*                            * 00820000
*                7 CE BIT(1),           /* CHANNEL END BIT            * 00830000
*                7 DE BIT(1),           /* DEVICE  END BIT            * 00840000
*                7 * BIT(1),            /*                            * 00850000
*                7 UE BIT(1),           /* UNIT EXCEPTION BIT         * 00860000
*                7 * BIT(4),            /*                            * 00870000
*               5 * BIT(24),            /*                            * 00880000
*              3 * BIT(8),              /*                            * 00890000
*              3 CPA PTR(24),           /* CHANNEL PROGRAM ADDRESS    * 00900000
*              3 * BIT(8),              /*                            * 00910000
*              3 DCBA PTR(24),          /* DCB ADDRESS                * 00920000
*              3 * BIT(8),                                              00930000
*              3 * CHAR(8),                                             00940000
*             2 ERPWORK PTR(31) INIT(ADDR(CCWWORK)),  /* ERP WORK AREA* 00950000
*             2 EOTRESP PTR(31) INIT(ADDR(EOT)), /*PTR TO END OF TRANS* 00960000
*             2 NEGRESP PTR(31) INIT(ADDR(NEG)), /*PTR TO NEGATIVE RSP* 00970000
*             2 REMINPTR PTR(31) INIT(ADDR(REMINBUF)); /*IN BUFFER PTR* 00980000
*  /******************************************************************* 00990000
*  /* ERP'S CCW WORK AREA                                             * 01000000
*  /******************************************************************* 01010000
*       DCL 1 CCWWORK CHAR(48) BDY(DWORD),   /*                  M4502* 01020000
*            2 CCWS(6) CHAR(8) INIT((6)'0000000000000000'X);   /*M4502* 01030000
*  /******************************************************************* 01040000
*  /*     RETAIN/370 DCB                                              * 01050000
*  /******************************************************************* 01060000
*         GEN(ENTRY REIDCB);                                            01070000
         ENTRY REIDCB                                                   01080000
         DS    0H                                                       01090000
*         DCL 1 REIDCB BDY(WORD),                                       01100000
*               3 *(18) FIXED INIT((18)0),   /*                  M4502* 01110000
*               3 *(5) FIXED,                /*                  M4502* 01120000
*                5 * PTR INIT(ADDR(RETRN)),  /*                  M4502* 01130000
*                5 * PTR INIT(ADDR(RETRN)),  /*                  M4502* 01140000
*                5 * PTR INIT(ADDR(RETRN)),  /*                  M4502* 01150000
*                5 * PTR INIT(ADDR(RETRN)),  /*                  M4502* 01160000
*                5 * PTR INIT(ADDR(RETRN)),  /*                  M4502* 01170000
*               3 RETRN CHAR(2) INIT('07FE'X); /*                M4502* 01180000
*  /******************************************************************* 01190000
*  /*     RETAIN/370 UCB                                              * 01200000
*  /******************************************************************* 01210000
*         DCL REIUCB PTR GENERATED;     /* UCB                        * 01220000
*  /******************************************************************* 01230000
*  /*  E B C D I C  TO  TRANSMISSION CODE TRANSLATE TABLE             * 01240000
*  /******************************************************************* 01250000
*  DECLARE               /* 0 1 2 3 4 5 6 7 8 9 A B C D E F           * 01260000
*  OUTTBL  BIT(128)  INIT('81E2E4E7E8EBEDEEF0F3A0768493E187'X),  /* C * 01270000
*  OUTTBL1 BIT(128)  INIT('61C3C5C6C9CACCCFD1D2D757909587F6'X),  /* D * 01280000
*  OUTTBL2 BIT(128)  INIT('4023A5A6A9AAACAFB1B281378BC08EA3'X),  /* E * 01290000
*  OUTTBL3 BIT(128)  INIT('15020407080B0D0E10138816208D8296'X);  /* F * 01300000
*  /******************************************************************* 01310000
*  /*  TRANSMISSION CODE TO E B C D I C  TRANSLATE TABLE              * 01320000
*  /******************************************************************* 01330000
*  DECLARE                                                              01340000
*   INTBL  CHAR(16)  INIT(' 1234567890#    '),                          01350000
*   INTBL1 CHAR(16)  INIT('@/STUVWXYZ ,    '),                          01360000
*   INTBL2 CHAR(16)  INIT('-JKLMNOPQR $    '),                          01370000
*   INTBL3 CHAR(16)  INIT('&ABCDEFGHI .    '),                          01380000
*   INTBL4 CHAR(16)  INIT(' =<;:% >*()"    '),                          01390000
*   INTBL5 CHAR(16)  INIT(' ?STUVWXYZ |    '),                          01400000
*   INTBL6 CHAR(16)  INIT('_JKLMNOPQR      '),                          01410000
*   INTBL7 CHAR(16)  INIT('+ABCDEFGHI ¬    ');                          01420000
*  /******************************************************************* 01430000
*  /* DEDICATED BUFFER FOR ONSITE TO REMOTE COMMUNICATIONS            * 01440000
*  /******************************************************************* 01450000
*         GEN(ENTRY DEDBUF);                                            01460000
         ENTRY DEDBUF                                                   01470000
         DS    0H                                                       01480000
*         DCL DEDBUF CHAR(72) BDY(WORD) INIT((72)'40'X);                01490000
*  /******************************************************************* 01500000
*  /* BUFFER FOR RECEIVING IMMEDIATE RESPONSES FROM REMOTE            * 01510000
*  /******************************************************************* 01520000
*         DCL   RESPBUF PTR GENERATED;                                  01530000
*         DCL 1 RSPBUF CHAR(4) BASED(ADDR(RESPBUF)),                    01540000
*              3 RSPCNT CHAR(1),                                        01550000
*              3 RSPADR CHAR(3);                                        01560000
*  /******************************************************************* 01570000
*  /*     REMOTE ECB                                                  * 01580000
*  /******************************************************************* 01590000
*         DCL   REIECB FIXED GENERATED; /* REMOTE ECB                 * 01600000
*         DCL 1 RECB FIXED BASED(ADDR(REIECB)), /* REMOTE ECB         * 01610000
*              3 COMPCODE BIT(8),               /* COMPLETION CODE    * 01620000
*              3 * BIT(24);                                             01630000
*  /******************************************************************* 01640000
*  /* BUFFER FOR OUTPUTTING MESSAGES TO REMOTE                        * 01650000
*  /******************************************************************* 01660000
*         DCL 1 ROUTBUF CHAR(130) BDY(WORD), /*OUTPUT BUFFER     M1373* 01670000
*              3 EOA CHAR(1) INIT('16'X),       /* END OF ADDRESS     * 01680000
*              3 OUTTEXT CHAR(125);          /*TEXT              M1373* 01690000
*  /******************************************************************* 01700000
*  /* FOLLOWING IS THE '*0X '  IN TRANSMISSION CODE,TO BE ATTACHED    * 01710000
*  /* TO MESSAGES REQUIRING A REPLY.'X'WILL CONTAIN THE CODE (0-4)    * 01720000
*  /******************************************************************* 01730000
*         DCL 1 SENDCODE CHAR(4) INIT('90158181'X),  /*ATTACHED TO    * 01740000
*                                       /*                       M4502* 01750000
*              3 * CHAR(2),                     /* REPLY TYPE MESSAGES* 01760000
*                                       /*                       M4502* 01770000
*              3 SCD CHAR(1),                   /* REPLY CODE         * 01780000
*              3 * CHAR(1);                                             01790000
*  /******************************************************************* 01800000
*  /* 2955 LINE CONTROL CHARACTERS                                    * 01810000
*  /******************************************************************* 01820000
*  /*                                                                 * 01830000
*         DCL EOT CHAR(1) INIT('1F'X);  /* END OF TRANS      X02008*/   01840000
*         DCL POS CHAR(1) INIT('76'X);  /* POSITIVE RESPONSE   X02008   01850000
*         DCL NEG CHAR(1) INIT('40'X);  /* NEGATIVE RESPONSE   X02008   01860000
*  /******************************************************************* 01870000
*  /* MESSAGE FOR REMOTE INDICATING ILLEGAL REPLY CODE                * 01880000
*  /******************************************************************* 01890000
*         DCL 1 ILLRPL CHAR(29) BDY(WORD)  /* MSG FOR REMOTE INDICAT- * 01900000
*                                        /*                      M5049* 01910000
*         INIT('IFD173I REPLY    NOT VERIFIED'), /* ING ILLEGAL  M5049* 01920000
*               5 * CHAR(14),            /* REPLY CODE           M5049* 01930000
*              5 ILRC CHAR(2),                                          01940000
*              5 * CHAR(13);                                            01950000
*                                                                       01960000
*         /*    PURGE PARAMETER LIST FOR SVC 16                 Y02008* 01970000
*                                                                       01980000
*         DCL 1 PURGELST CHAR(16) BDY(WORD), /* PURGE PARMLST   Y02008* 01990000
*           3 PPLDSID CHAR(4),         /* DSID INFORMATION      Y02008* 02000000
*             5 PPLOPT1 CHAR(1) INIT('E4'X),  /* OPTION BYTE    Y02008* 02010000
*             5 PPLDSIDA PTR(24),      /* ADDR OF REI DEB       Y02008* 02020000
*           3 * CHAR(12);              /* N A                   Y02008* 02030000
*                                                                       02040000
*                                                                       02050000
*  /******************************************************************* 02060000
*  /* ON-SITE ECBS ASSOCIATED WITH OUTSTANDING OLT AND OLTEP MESSAGES * 02070000
*  /* ALSO BUFFERS AND COUNTS ASSOCIATED WITH SAME                    * 02080000
*  /******************************************************************* 02090000
*         DCL   ECB3 FIXED GENERATED;              /*ECB FOR OUTSTAND-* 02100000
*         DCL 1 RECB3 FIXED BASED(ADDR(ECB3)),     /*ING OLTEP MESSAGE* 02110000
*              2 ECB3C CHAR(1),          /* COMPLETION CODE           * 02120000
*              2 * CHAR(3);              /* NA                        * 02130000
*         DCL   DYNCOM CHAR(1) GENERATED;          /*BUFFER FOR SAME  * 02140000
*         DCL   RDYNCOM CHAR(1) BASED(ADDR(DYNCOM));                    02150000
*  /*                                                                 * 02160000
*         DCL   ECB37 FIXED GENERATED;             /*ECB FOR OUTSTAND-* 02170000
*         DCL 1 RECB37 FIXED BASED(ADDR(ECB37)),   /*ING CECOM MESSAGE* 02180000
*              2 ECB37C CHAR(1),         /* COMPLETION CODE           * 02190000
*              2 * CHAR(3);             /* NA                         * 02200000
*         DCL   REPLY37 CHAR(72)  GENERATED;       /*BUFFER FOR SAME  * 02210000
*         DCL   RREPLY37 CHAR(72)  BASED(ADDR(REPLY37));                02220000
*         DCL   CNT37 CHAR(1) GENERATED;           /*BYTE COUNT FOR   * 02230000
*         DCL   RCNT37 CHAR(1) BASED(ADDR(CNT37)); /* SAME            * 02240000
*  /*                                                                 * 02250000
*         DCL 1 ECB01 FIXED BASED(R1SAVE), /*ECB FOR LOCAL D/T/O/ MSG * 02260000
*              2 ECB01C CHAR(1),         /* COMPLETION CODE           * 02270000
*              2 * CHAR(3);              /* NA                        * 02280000
*  /******************************************************************* 02290000
*  /* SVC 59 CALLING SEQUENCE FOR FREEING OUTSTANDING LOCAL ECBS      * 02300000
*  /******************************************************************* 02310000
*         DCL   WKSVC PTR GENERATED;                                    02320000
*         DCL   ROPT CHAR(8)  GENERATED;                                02330000
*         DCL  1 * BASED(ADDR(ROPT)),              /*SVC 59 CALLING   * 02340000
*               3 ROPT4 PTR,                       /* SEQUENCE        * 02350000
*               3 ROPT8 PTR;                                            02360000
*         DCL   MODID BASED(ADDR(WKSVC));                               02370000
*         DCL   MSGMOD PTR GENERATED;    /* MESSAGE MODULE ADDRESS    * 02380000
*         DCL 1 * BASED(MSGMOD),                                        02390000
*               3 *(19) PTR(31),         /* SPACE TO APPROPRIATE MSGS.* 02400000
*               3 WTORANS  PTR(31);      /*REMOTE HAS RESPONDED TO MSG* 02410000
*         DCL 1 * BASED(WTORANS),        /*REMOTE HAS RESPONDED TO XX * 02420000
*               3 * CHAR(4),            /* USED BY WTO                * 02430000
*               3 * CHAR(16),            /*                           * 02440000
*               3 MID CHAR(2);           /* MESSAGE ID FOR ANSWERED   * 02450000
*                                        /* MESSAGE.                  * 02460000
*         DCL 1 WKWDID CHAR(4) BDY(WORD),/* RETURN ID WORK AREA       * 02470000
*               3 * CHAR(2),             /*                           * 02480000
*               3 DUMID CHAR(2);         /* SYSTEM ASSIGNED ID        * 02490000
*  /******************************************************************* 02500000
*  /* STIMER MACRO CALLING SEQUENCE                                   * 02510000
*  /******************************************************************* 02520000
*         DCL TIMEOUT PTR GENERATED;                                    02530000
*         DCL SAVE2(18) FIXED;          /* TIMEOUT SAVEAREA           * 02540000
*         DCL TIME10 CHAR(8) BDY(DWORD) /* TEN MINUTES ON WAIT        * 02550000
*           INIT('F0F0F1F0F0F0F0C0'X);                                  02560000
*  /******************************************************************* 02570000
*  /* REMOTE INPUT BUFFER AND SETUP FOR WTO                           * 02580000
*  /******************************************************************* 02590000
*         GEN(ENTRY REMINBUF);                                          02600000
         ENTRY REMINBUF                                                 02610000
         DS    0H                                                       02620000
*         DCL 1 WTOBUF CHAR(130) BDY(WORD),  /* WRITE TO OP  X02008   * 02630000
*              2 WTOCNT CHAR(2),        /* WTO COUNT                  * 02640000
*              2 WTOFLG BIT(16) INIT('1000000000000000'B),/* WTO FLAGS* 02650000
*              2 MSGID CHAR(122),       /* MSG ID            X02008   * 02660000
*               3 * CHAR(2),            /* NA                         * 02670000
*               3 REMINBUF CHAR(120),   /* REMOTE IN BUF     X02008   * 02680000
*                5 REPLY CHAR(4),       /* REPLY CODE R XX            * 02690000
*                 7 * CHAR(3),          /* R X PORTION                * 02700000
*                 7 CODE CHAR(1),       /* X PORTION                  * 02710000
*                5 * CHAR(2),           /* COMMA AND APOSTROPHE       * 02720000
*                5 INTEXT CHAR(72),     /* MESSAGE TEXT               * 02730000
*              2 RTEDSC CHAR(4) INIT('02000040'X); /* RTE&DSC CODES   * 02740000
*  /*                                                                 * 02750000
*         DCL WTOID CHAR(8) INIT('IFD255I '); /*COMMUNICATION MSG ID  * 02760000
*  /*                                                                 * 02770000
*         DCL 1 WRKCNT CHAR(4) BDY(WORD), /* WTO COUNT WORK AREA      * 02780000
*              3 * CHAR(2),             /* NA                         * 02790000
*              3 COUNT CHAR(2);         /*  WTO COUNT                 * 02800000
*  /******************************************************************* 02810000
*  /* COMMON AREA AND COMMON AREA SWITCHES FOR RETAIN                 * 02820000
*  /******************************************************************* 02830000
*         DCL   CHASCT CHAR(116) GENERATED;                             02840000
*  /*                                                                 * 02850000
*         DCL   CESWTR BIT(8) GENERATED; /* RETAIN SWITCHES           * 02860000
*         DCL 1 SWTR BIT(8) BASED(ADDR(CESWTR)),                        02870000
*              3 RETAINAC BIT(1),   /* INTERFACE ACTIVE      N/A      * 02880000
*              3 REMERR BIT(1),     /* PERMANENT ERROR                * 02890000
*              3 REMNOMSG BIT(1),   /* DATA PROTECTION       N/A      * 02900000
*              3 CENOMSG BIT(1),    /* CE DOES NOT GET MSG            * 02910000
*              3 PRTNOMSG BIT(1),   /* MSG. NOT PRINTED               * 02920000
*              3 IMRESP BIT(1),     /* IMMEDIATE RESPONSE MSG. ISSUED * 02930000
*              3 EXECOUT BIT(1),    /* FORCE COMMUNICATIONS MSG.ISSUED* 02940000
*              3 CECOMOUT BIT(1);   /* OUTSTANDING MSG. ISSUED        * 02950000
*  /*                                                                 * 02960000
*         DCL   CESWTR1 BIT(8) GENERATED; /*RETAIN SWITCHES           * 02970000
*         DCL 1 SWTR1 BIT(8) BASED(ADDR(CESWTR1)),                      02980000
*              3 ILLRESP BIT(1),    /* ILLEGAL RESPONSE               * 02990000
*              3 EXECANS BIT(1),    /* FORCE COMMUNICATION RESPONSE   * 03000000
*              3 CECOMANS BIT(1),   /* OUSTANDING MSG. RESPONSE       * 03010000
*              3 INFOMSG BIT(1),    /* 'TALK' RESPONSE                * 03020000
*              3 RETRIEVE BIT(1),   /* 1=RETRIEVE MSG, 0=SEND MSG     * 03030000
*              3 REMANS BIT(1),     /*                                * 03040000
*              3 EDTOMSG BIT(1),                                        03050000
*              3 MSGHND BIT(1);         /* IFDOLT55 IN CONTROL SWTCH  * 03060000
*  /*                                                                 * 03070000
*         DCL   CESWTR2 BIT(8) GENERATED;    /* RETAIN SWITCHES       * 03080000
*         DCL 1 SWTR2 BIT(8) BASED(ADDR(CESWTR2)),                      03090000
*              3 REPLY00 BIT(1),             /*TYPE OF MSG=DEV/TEST/OP* 03100000
*              3 REPLY02 BIT(1),             /*TYPE OF MSG=OUTST CECOM* 03110000
*              3 ONCOMM BIT(1),             /*ONSITE WILL ANSWER D/T/O* 03120000
*              3 COMMLOOP BIT(1),        /*E D/T/O/ MSG NO REPLY CODE * 03130000
*              3 WAIT3 BIT(1),          /* N/A               X02008   * 03140000
*              3 OPTERR BIT(1),         /* N/A               X02008   * 03150000
*              3 PRTONLY BIT(1),        /* PRINT ONLY FLG    X02008   * 03160000
*              3 DPMSG BIT(1);     /*DP MESSAGE FLAG            X02008* 03170000
*  /*                                                                 * 03180000
*         DCL PRTBUFR CHAR(120) GENERATED;         /* PRINT BUFFER    * 03190000
*  /*                                                                 * 03200000
*         DCL 1 SWTSAVE BIT(8),         /* SWITCH SAVE AREA      M4502* 03210000
*              2 SWT1 BIT(1),           /*                       M4502* 03220000
*              2 SWT2 BIT(1),           /*                       M4502* 03230000
*              2 SWT3 BIT(1),           /*                       M4502* 03240000
*              2 SWT4 BIT(1),           /*                       M4502* 03250000
*              2 SWT5 BIT(1),           /*                       M4502* 03260000
*              2 SWT6 BIT(1),           /*                       M4502* 03270000
*              2 SWT7 BIT(1),           /*                       M4502* 03280000
*              2 SWT8 BIT(1);           /*                       M4502* 03290000
*                                                                       03300000
*                                                                       03310000
*         /************************************************************ 03320000
*         /*  ADDRESS OF CVT                                            03330000
*         DCL CVTADPTR PTR INIT(16);                                    03340000
*         DCL CVTADDR PTR BASED(CVTADPTR);                              03350000
*         DCL   1 CVT BASED(CVTADDR),    /* CVT                         03360000
*                3 * CHAR(40),                                          03370000
*                3 CVTILK2 PTR,          /* PTR TO UCB LOOKUP TABLE  */ 03380000
*                3 * CHAR(284),          /* N.A. IN CVT         X03008* 03390000
*                3 CVTEXT2 PTR;          /* PTR TO CVT EXTENSIONX03008* 03400000
*         DCL CVTOLTEP BASED(CVTEXT2+28) PTR; /* OLTEP PTR,CVT  X03008* 03410000
*         DCL 1 OLTEPTAB CHAR(24) BASED(CVTOLTEP), /* OLTEP TAB X03008* 03420000
*                3 DIEHEAD CHAR(4),     /* HEAD OF DIE MODULE   Y02008* 03430000
*                3 REIDEBAD PTR,        /* PTR OLTEPS REI DEB   Y02008* 03440000
*                3 * CHAR(20),          /* PTRS FOR DIE USE     Y02008* 03450000
*                3 OLTEPUCB PTR,        /* OLTEP UCBS FOR TEST  X03008* 03460000
*                3 REIUCBAD PTR,        /* DEV UCB ADDRESS      X03008* 03470000
*                3 * CHAR(4),           /* N A                  Y02008* 03480000
*                3 IOSGENTBL (18) FIXED;/* IOS WORK AREA        X03008* 03490000
*  /******************************************************************* 03500000
*  /* DETERMINE IF SEND OR RECEIVE OPERATION                          * 03510000
*  /******************************************************************* 03520000
*         R1SAVE=R1;                    /* SAVE REG 1                 * 03530000
         ST    @1,R1SAVE                                          0100  03540000
*         GEN(TTIMER CANCEL);           /* CANCEL TIMER               * 03550000
         TTIMER CANCEL                                                  03560000
         DS    0H                                                       03570000
*         MSGHND='1'B;                  /*SET IFDOLT55 IN CTRL SWT ON * 03580000
         OI    SWTR1,B'00000001'                                  0102  03590000
*         SWTSAVE=CESWTR;               /* SAVE SWITCHES         M5049* 03600000
         MVC   SWTSAVE(1),CESWTR                                  0103  03610000
*         IF RETRIEVE='1'B THEN GOTO RECEIVE;/* GO IF RECIEVE OPER.   * 03620000
         TM    SWTR1,B'00001000'                                  0104  03630000
         BC    01,RECEIVE                                         0105  03640000
*                                                                       03650000
*         PPLDSIDA=REIDEBAD;            /* ADDRESS DEB FOR CHKS Y02008* 03660000
         L     @1,CVTADPTR                                        0106  03670000
         L     @1,0(0,@1)          CVTADDR                        0106  03680000
         L     @1,328(0,@1)        CVT                            0106  03690000
         L     @1,28(0,@1)         CVTOLTEP                       0106  03700000
         MVC   PURGELST+1(3),5(@1)                                0106  03710000
*         R1=ADDR(PURGELST);       /* ADDRESS PURGE PARM LIST   Y02008* 03720000
         LA    @1,PURGELST                                        0107  03730000
*         GEN;                     /* PURGE READ INIT. CHANNEL PROG   * 03740000
HIORDINT SVC   16                 * HIO ON READ INITIAL CHANNEL PROG    03750000
         DS    0H                                                       03760000
*         R7=ADDR(PRTBUFR)+1;           /* GET ADDRESS OF MESSAGE     * 03770000
         LA    @7,PRTBUFR+1                                       0109  03780000
*  /******************************************************************* 03790000
*  /* DETERMINE REPLY CODE TO ATTACH TO MESSAGE                       * 03800000
*  /******************************************************************* 03810000
*  CHKRPL:R6 = ADDR(OUTTEXT);       /* ADDRESS OF OUTPUT BUFFER       * 03820000
CHKRPL   LA    @6,ROUTBUF+1                                       0110  03830000
*         IF REMANS = '0'B THEN GOTO CHKRP1;/*ONSITE WILL ANSWER      * 03840000
         TM    SWTR1,B'00000100'                                  0111  03850000
         BC    08,CHKRP1                                          0112  03860000
*         IF COMMLOOP='1'B THEN GOTO CHKRP1; /* COMM   MSG NO REPLY CD* 03870000
         TM    SWTR2,B'00010000'                                  0113  03880000
         BC    01,CHKRP1                                          0114  03890000
*         IF DPMSG='1'B THEN       /*IS THIS A DP MESSAGE       X02008* 03900000
         TM    SWTR2,B'00000001'                                  0115  03910000
*           GOTO CHKRP1;           /* YES                       X02008* 03920000
         BC    01,CHKRP1                                          0116  03930000
*         IF REPLY00 = '1'B THEN    /* TO FORCE COMMUNICATIONS MSG ?  * 03940000
         TM    SWTR2,B'10000000'                                  0117  03950000
         BC    12,@9FF                                            0117  03960000
*                                       /*                       M4502* 03970000
*           DO;                     /* YES                       M4502* 03980000
*         SCD = '15'X;                  /* REPLY CODE = 0 ADDAPTER CD * 03990000
         MVI   SENDCODE+2,X'15'                                   0119  04000000
*                                       /*                       M4502* 04010000
*         GOTO BCDCN;               /* CONVERT IT                M4502* 04020000
         BC    15,BCDCN                                           0120  04030000
*         END;                          /*                       M4502* 04040000
*           ELSE;                       /*                       M4502* 04050000
@9FF     EQU   *                                                  0122  04060000
*         IF ONCOMM='1'B THEN GOTO CHKRP1; /*ONSITE WILL ANSWER D/T/O/* 04070000
@9FE     TM    SWTR2,B'00100000'                                  0123  04080000
         BC    01,CHKRP1                                          0124  04090000
*         IF EDTOMSG = '1'B THEN        /*ENTER D/T/O MSG ?      M5049* 04100000
         TM    SWTR1,B'00000010'                                  0125  04110000
         BC    12,@9FD                                            0125  04120000
*           DO;                         /* YES                   M5049* 04130000
*         SCD = '02'X;                  /* REPLY CODE = 1 ADDAPTER CD * 04140000
         MVI   SENDCODE+2,X'02'                                   0127  04150000
*         GOTO BCDCN;               /* CONVERT IT                     * 04160000
         BC    15,BCDCN                                           0128  04170000
*         END;                                                          04180000
*           ELSE;                                                       04190000
@9FD     EQU   *                                                  0130  04200000
*         IF IMRESP = '1'B THEN     /* IMMEDIATE RESPONSE MESSAGE     * 04210000
@9FC     TM    SWTR,B'00000100'                                   0131  04220000
         BC    12,@9FB                                            0131  04230000
*           DO;                     /* YES                            * 04240000
*         SCD = '08'X;                  /* REPLY CODE = 4 ADDAPTER CD * 04250000
         MVI   SENDCODE+2,X'08'                                   0133  04260000
*         GOTO BCDCN;               /* CONVERT IT                     * 04270000
         BC    15,BCDCN                                           0134  04280000
*         END;                                                          04290000
*           ELSE;                                                       04300000
@9FB     EQU   *                                                  0136  04310000
*         IF REPLY02 = '1'B THEN    /* OUTSTANDING OLT MESSAGE ?      * 04320000
@9FA     TM    SWTR2,B'01000000'                                  0137  04330000
         BC    12,@9F9                                            0137  04340000
*           DO;                     /* YES                            * 04350000
*         SCD = '04'X;                  /* REPLY CODE = 2 ADDAPTER CD * 04360000
         MVI   SENDCODE+2,X'04'                                   0139  04370000
*         GOTO  BCDCN;              /* CONVERT IT                     * 04380000
         BC    15,BCDCN                                           0140  04390000
*         END;                                                          04400000
*           ELSE;                                                       04410000
@9F9     EQU   *                                                  0142  04420000
*  CHKRP1:R8=1;                         /* NO REPLY CODE TO ATTACH    * 04430000
@9F8     EQU   *                                                  0143  04440000
CHKRP1   LA    @8,1                                               0143  04450000
*                                       /*                       M4502* 04460000
*         GEN(MVI  OUTTEXT,X'81');      /* MOVE IN BLANK FOR OFFSET   * 04470000
         MVI  OUTTEXT,X'81'                                             04480000
         DS    0H                                                       04490000
*                                       /*                       M4502* 04500000
*         GOTO BCDCN1;                  /* CONVERT MESSAGE            * 04510000
         BC    15,BCDCN1                                          0145  04520000
*  /******************************************************************* 04530000
*  /* MOVE REPLY CODE ON MESSAGE AND CONVERT MESSAGE TO TRANS CODE    * 04540000
*  /******************************************************************* 04550000
*   BCDCN:OUTTEXT(1:4) = SENDCODE(1:4); /* MOVE REPLY CODE ON MESSAGE * 04560000
BCDCN    MVC   ROUTBUF+1(4),SENDCODE                              0146  04570000
*                                       /*                       M4502* 04580000
*         R8=4;                         /* DISPLACMENT FOR REPLY CODE * 04590000
         LA    @8,4                                               0147  04600000
*                                       /*                       M4502* 04610000
*  BCDCN1:R6=R6+R8;                     /* ADD DISPLACEMENT TO ADDR   * 04620000
BCDCN1   AR    @6,@8                                              0148  04630000
*         R1=R1SAVE;                    /* RESTORE REG 1              * 04640000
         L     @1,R1SAVE                                          0149  04650000
*         IF R1 > 120 THEN R1 = 120;    /* MAX OF 120 CHARS ALLOWED   * 04660000
         CH    @1,@D1                                             0150  04670000
         BC    12,@9F7                                            0150  04680000
         LA    @1,120                                             0151  04690000
*         R3=R1-1;                      /* MINUS 1 FOR EXECUTE        * 04700000
@9F7     LH    @3,@D2                                             0152  04710000
         AR    @3,@1                                              0152  04720000
*         GEN;                                                          04730000
         MVI   0(R6),X'3F'              MOVE TO FIRST BYTE IN OUTPUT    04740000
         EX    R3,BCDCN2                * PROPAGATE IT                  04750000
         EX    R3,BCDCN3                * AND OFF 0&1 BITS FROM INPUT   04760000
         EX    R3,BCDCN4                * TRANSLATE TO TRANS  CODE      04770000
         B     BCDCN5                   * SET UP TO SEND MESSAGE        04780000
BCDCN2   MVC   1(0,R6),0(R6)           * PROPAGATE                      04790000
BCDCN3   NC    0(0,R6),0(R7)           * AND OFF 0&1 BITS               04800000
BCDCN4   TR    0(0,R6),OUTTBL          * TRANSLATE                      04810000
         DS    0H                                                       04820000
*  BCDCN5:R8=R8+R1+1;                   /* 1ST BYTE FOLLOWING DATA    * 04830000
BCDCN5   LA    @F,1                                               0154  04840000
         AR    @F,@1                                              0154  04850000
         AR    @8,@F                                              0154  04860000
*         OUTTEXT(R8)='3D'X;            /*MOVE EOB ON MSG        M1373* 04870000
         LR    @1,@8                                              0155  04880000
         LA    @A,ROUTBUF(@1)                                     0155  04890000
         MVI   0(@A),X'3D'                                        0155  04900000
*         DISP=R8+1;                    /*ADD EOA CCW CNT    X02008     04910000
         LA    @F,1                                               0156  04920000
         AR    @F,@8                                              0156  04930000
         ST    @F,@TEMP4                                          0156  04940000
         MVC   WWRIN+6(2),@TEMP4+2                                0156  04950000
*  /******************************************************************* 04960000
*  /* WRITE MESSAGE AND                                               * 04970000
*  /* BRING READ INITIAL BACK UP                                      * 04980000
*  /******************************************************************* 04990000
*         REIOB1=REIOB1&&REIOB1;        /* INITIALIZE IOB             * 05000000
         XC    REIOB(32),REIOB                                    0157  05010000
*         RECB=0;                       /* AND THE ECB                * 05020000
         SR    @F,@F                                              0158  05030000
         ST    @F,RECB                                            0158  05040000
*         FLAGS='42'X;                  /* INDICATE CCW CHAINING      * 05050000
         MVI   REIOB,X'42'                                        0159  05060000
*         CPA=ADDR(CCWWRIN);            /* WRITE INITIAL              * 05070000
         LA    @F,CCWWRIN                                         0160  05080000
         ST    @F,@TEMP4                                          0160  05090000
         MVC   REIOB+17(3),@TEMP4+1                               0160  05100000
*         EXCPPTR=ADDR(AA);              /* RETURN TO ADDRESS         * 05110000
         LA    @F,AA                                              0161  05120000
         ST    @F,EXCPPTR                                         0161  05130000
*         GOTO CPINIT;                   /* EXCP                      * 05140000
         BC    15,CPINIT                                          0162  05150000
*      AA:CPA=ADDR(CCWWREOT);           /* WRITE EOT                  * 05160000
AA       LA    @F,CCWWREOT                                        0163  05170000
         ST    @F,@TEMP4                                          0163  05180000
         MVC   REIOB+17(3),@TEMP4+1                               0163  05190000
*         FLAGS='42'X;               /* UNRELATED,CMND-CHN CCWS Y02008* 05200000
         MVI   REIOB,X'42'                                        0164  05210000
*         EXCPPTR=ADDR(CONTEN);         /* RETURN TO ADDRESS          * 05220000
         LA    @F,CONTEN                                          0165  05230000
         ST    @F,EXCPPTR                                         0165  05240000
*         GOTO CPINIT;                   /* EXCP                      * 05250000
         BC    15,CPINIT                                          0166  05260000
*  CONTEN:CPA=ADDR(CCWRDI);             /* READ INITIAL               * 05270000
CONTEN   LA    @F,CCWRDI                                          0167  05280000
         ST    @F,@TEMP4                                          0167  05290000
         MVC   REIOB+17(3),@TEMP4+1                               0167  05300000
*         FLAGS='42'X;                  /*INDICATE CCW CHAINING       * 05310000
         MVI   REIOB,X'42'                                        0168  05320000
*         ECBA = ADDR(RECB);            /* ADDRESS OF ECB INTO IOB    * 05330000
         LA    @F,RECB                                            0169  05340000
         ST    @F,@TEMP4                                          0169  05350000
         MVC   REIOB+5(3),@TEMP4+1                                0169  05360000
*         DCBA = ADDR(REIDCB);          /* LIKEWISE THE DCB ADDR      * 05370000
         LA    @F,REIDCB                                          0170  05380000
         ST    @F,@TEMP4                                          0170  05390000
         MVC   REIOB+21(3),@TEMP4+1                               0170  05400000
*         GEN;                                                          05410000
RDINITRS EXCP  REIOB                                                    05420000
STRTCLOK STIMER REAL,TIMEOUT,DINTVL=TIME10                              05430000
         DS    0H                                                       05440000
*    FINI:IF SWT3='1'B THEN REMNOMSG='1'B; /* RESTORE REMNOMSG SWT    * 05450000
FINI     TM    SWTSAVE,B'00100000'                                0172  05460000
         BC    12,@9F6                                            0172  05470000
         OI    SWTR,B'00100000'                                   0173  05480000
*                                       /*                       M4502* 05490000
*         MSGHND='0'B;                  /* TURN OFF '55' IN CONTROL SW* 05500000
@9F6     NI    SWTR1,B'11111110'                                  0174  05510000
*                                       /*                       M4502* 05520000
*         RETURN;                                                       05530000
         BC    15,@EL01                                           0175  05540000
*  /******************************************************************* 05550000
*  /* RECEIVE OPERATION,TRANSLATE REMOTE RESPONSE                     * 05560000
*  /******************************************************************* 05570000
*  RECEIVE:IF COMPCODE¬='7F'X THEN GOTO ERROR; /*ERROR ON READ?       * 05580000
RECEIVE  CLI   RECB,X'7F'                                         0176  05590000
         BC    07,ERROR                                           0177  05600000
*         R3=0;                         /* ZERO REG                   * 05610000
         SR    @3,@3                                              0178  05620000
*         R5=120;                       /* TOTAL SIZE        X02008   * 05630000
         LA    @5,120                                             0179  05640000
*         R4=ADDR(REMINBUF);            /* ADDRESS OF INPUT AND OUTPUT* 05650000
         LA    @4,WTOBUF+6                                        0180  05660000
*         R4=R4+R5-1;                   /* END OF BUFFER ADDRESS      * 05670000
         LH    @F,@D2                                             0181  05680000
         AR    @F,@5                                              0181  05690000
         AR    @4,@F                                              0181  05700000
*         GEN;                                                          05710000
SHIFT1   IC    R3,0(R4)                 * GET A CHARACTER               05720000
         SRL   R3,1                     * SHIFT OFF 'C' BIT             05730000
         STC   R3,0(R4)                 * PUT IT BACK                   05740000
         BCTR  R4,0                     * DECREMENT DATA ADDRESS        05750000
         BCT   R5,SHIFT1                * DECR COUNT,LOOP TILL DONE     05760000
         DS    0H                                                       05770000
*         GEN(TR    REMINBUF(120),INTBL); /*TRANS MSG        X02008   * 05780000
         TR    REMINBUF(120),INTBL                                      05790000
         DS    0H                                                       05800000
*  /******************************************************************* 05810000
*  /* THE FOLLOWING CHECKS THE REPLY CODE AND DETERMINES LEGALITY     * 05820000
*  /* AS WELL AS PERFORMING ANY PRELIMINARY FUNCTIONS                 * 05830000
*  /******************************************************************* 05840000
*         IF REMINBUF(1)='7B'X THEN     /* CHECK FOR EOA CHAR IN      * 05850000
         CLI   WTOBUF+6,X'7B'                                     0184  05860000
         BC    07,@9F5                                            0184  05870000
*                                       /*                       M4502* 05880000
*           REMINBUF(1:119)=REMINBUF(2:120); /*ADJUST MSG    X02008   * 05890000
         MVC   WTOBUF+6(119),WTOBUF+7                             0185  05900000
*         IF REMINBUF(1)='@' THEN            /* PRINT ONLY?  X02008   * 05910000
@9F5     CLI   WTOBUF+6,C'@'                                      0186  05920000
         BC    07,@9F4                                            0186  05930000
*           DO;                              /* YES          X02008   * 05940000
*              WTOBUF(5:124)=REMINBUF(1:120);/* MOVE TO PRT  X02008   * 05950000
         MVC   WTOBUF+4(120),WTOBUF+6                             0188  05960000
*              WTOBUF(125:128)=RTEDSC(1:4);  /* RTE&DSC      X02008   * 05970000
         MVC   WTOBUF+124(4),WTOBUF+126                           0189  05980000
*              INFOMSG='1'B;                 /*INFO MSG      X02008   * 05990000
         OI    SWTR1,B'00010000'                                  0190  06000000
*              PRTONLY='1'B;                 /*PRT ONLY      X02008   * 06010000
         OI    SWTR2,B'00000010'                                  0191  06020000
*              R9=120;                       /*MSG SIZE      X02008   * 06030000
         LA    @9,120                                             0192  06040000
*              GOTO MOVIT3;                  /*MOVE MSG      X02008   * 06050000
         BC    15,MOVIT3                                          0193  06060000
*              END;                          /*              X02008   * 06070000
*                                       /*                       M4502* 06080000
*         IF REMINBUF(3)¬='0'           /*CHK 1ST CHAR RPLY CODE FOR 0* 06090000
*            | REMINBUF(5)¬=',' THEN    /*CHK 5TH CHAR FOR COMMA      * 06100000
@9F4     CLI   WTOBUF+8,C'0'                                      0195  06110000
         BC    07,@9F3                                            0195  06120000
         CLI   WTOBUF+10,C','                                     0195  06130000
         BC    08,@9F2                                            0195  06140000
*         GOTO UNVER;                   /* UNVERIFIED RESPONSE        * 06150000
         BC    07,UNVER                                           0196  06160000
*         IF REMANS='0'B THEN GOTO RPLCD3; /*IF YES ONLY 03 ACCEPTED  * 06170000
@9F2     TM    SWTR1,B'00000100'                                  0197  06180000
         BC    08,RPLCD3                                          0198  06190000
*         IF EDTOMSG ='1'B THEN GOTO RPLCD1;  /*DO WE EXPECT D/T/O MSG* 06200000
         TM    SWTR1,B'00000010'                                  0199  06210000
         BC    01,RPLCD1                                          0200  06220000
*         IF IMRESP='1'B THEN GOTO RPLCD4;    /*NO,HOW ABOUT AN IMMED * 06230000
         TM    SWTR,B'00000100'                                   0201  06240000
         BC    01,RPLCD4                                          0202  06250000
*         IF CODE¬='0' THEN GOTO RPLCD2; /*OUTSTANDING OLTEP RESPONSE?* 06260000
         CLI   WTOBUF+9,C'0'                                      0203  06270000
         BC    07,RPLCD2                                          0204  06280000
*         IF EXECOUT¬='1'B THEN GOTO UNVER; /*YES,CAN WE ACCEPT IT ?  * 06290000
         TM    SWTR,B'00000010'                                   0205  06300000
         BC    12,UNVER                                           0206  06310000
*         IF ECB3C='40'X THEN GOTO UNVER; /*YES,HAS CE ANSWERED IT?   * 06320000
         CLI   RECB3,X'40'                                        0207  06330000
         BC    08,UNVER                                           0208  06340000
*         ROPT4=ADDR(ECB3);             /*NO,SETUP TO FREE LOCAL ECB  * 06350000
         LA    @F,ECB3                                            0209  06360000
         ST    @F,A00027                                          0209  06370000
*         FREEPTR=ADDR(OUTSTD);         /* RETURN ADDRESS             * 06380000
         LA    @F,OUTSTD                                          0210  06390000
         ST    @F,FREEPTR                                         0210  06400000
*         GOTO FREE;                    /* FREE PWTOR                 * 06410000
         BC    15,FREE                                            0211  06420000
*  OUTSTD:EXECANS='1'B;                 /*SET FLAG FOR OUTST OLTEP RSP* 06430000
OUTSTD   OI    SWTR1,B'01000000'                                  0212  06440000
*         R3=1;                         /*CHAR COUNT OF EXPECTED MSG  * 06450000
         LA    @3,1                                               0213  06460000
*         R4=ADDR(DYNCOM);              /*ADDR OF APPROPRIATE OLTEP BF* 06470000
         LA    @4,DYNCOM                                          0214  06480000
*         GOTO MOVIT;                   /*MOVE TO BUFR & WRITE TO CE  * 06490000
         BC    15,MOVIT                                           0215  06500000
*  RPLCD1:IF CODE¬='1' THEN GOTO RPLCD2; /*ENTER DEV/TEST/OPT MESSAGE?* 06510000
RPLCD1   CLI   WTOBUF+9,C'1'                                      0216  06520000
         BC    07,RPLCD2                                          0217  06530000
*  CHKECB:IF ECB01C='40'X THEN GOTO UNVER; /* HAS CE ANSWERED MSG     * 06540000
CHKECB   L     @1,R1SAVE                                          0218  06550000
         CLI   0(@1),X'40'                                        0218  06560000
         BC    08,UNVER                                           0219  06570000
*                                       /*                       M4502* 06580000
*         ROPT4=R1SAVE;                 /* NO,SETUP TO FREE LOCAL ECB * 06590000
         MVC   A00027(4),R1SAVE                                   0220  06600000
*         FREEPTR=ADDR(RPLIMD);         /* RETURN ADDRESS             * 06610000
         LA    @F,RPLIMD                                          0221  06620000
         ST    @F,FREEPTR                                         0221  06630000
*         GOTO FREE;                    /* FREE PWTOR                 * 06640000
         BC    15,FREE                                            0222  06650000
*  RPLIMD:R3=RSPCNT;                     /*YES,GET EXPECTED CHAR COUNT* 06660000
RPLIMD   SR    @3,@3                                              0223  06670000
         IC    @3,RSPBUF                                          0223  06680000
*         R4=RSPADR;                     /*ADDRESS OF OLTEP RESP BUFF * 06690000
         MVC   @TEMP3+1(3),RSPBUF+1                               0224  06700000
         L     @4,@TEMP3                                          0224  06710000
*         GOTO MOVIT;                    /*MOVE TO BUFR & WRITE TO CE * 06720000
         BC    15,MOVIT                                           0225  06730000
*  RPLCD2:IF CODE¬='2' THEN GOTO RPLCD3; /*OUTSTANDING OLT MESSAGE ?  * 06740000
RPLCD2   CLI   WTOBUF+9,C'2'                                      0226  06750000
         BC    07,RPLCD3                                          0227  06760000
*         IF CECOMOUT¬='1'B THEN GOTO UNVER; /*CAN WE ACCEPT IT       * 06770000
         TM    SWTR,B'00000001'                                   0228  06780000
         BC    12,UNVER                                           0229  06790000
*         IF ECB37C='40'X THEN GOTO UNVER; /*YES,HAS CE ANSWERED MSG  * 06800000
         CLI   RECB37,X'40'                                       0230  06810000
         BC    08,UNVER                                           0231  06820000
*         CECOMANS='1'B;                 /*SET FLAG FOR OUTST CECOM AN* 06830000
         OI    SWTR1,B'00100000'                                  0232  06840000
*         R3=RCNT37;                     /*GET EXPECTED CHAR COUNT    * 06850000
         SR    @3,@3                                              0233  06860000
         IC    @3,RCNT37                                          0233  06870000
*         R4=ADDR(RREPLY37);             /*ADDR OF REPLY BUFFER       * 06880000
         LA    @4,RREPLY37                                        0234  06890000
*         GOTO MOVIT;                    /*MOVE TO BUFR & WRITE TO CE * 06900000
         BC    15,MOVIT                                           0235  06910000
*  RPLCD3:IF CODE¬='3' THEN GOTO UNVER;  /* COMMUNICATIONS RESPONSE?  * 06920000
RPLCD3   CLI   WTOBUF+9,C'3'                                      0236  06930000
         BC    07,UNVER                                           0237  06940000
*         INFOMSG='1'B;                  /*YES,SET FLAG FOR OLTEP     * 06950000
         OI    SWTR1,B'00010000'                                  0238  06960000
*         GOTO  MOVIT1;                  /*WRITE MESSAGE TO CE        * 06970000
         BC    15,MOVIT1                                          0239  06980000
*  RPLCD4:IF CODE¬= '4' THEN GOTO RPLCD3;/* IMMEDIATE OLT RESPONSE ?  * 06990000
RPLCD4   CLI   WTOBUF+9,C'4'                                      0240  07000000
         BC    07,RPLCD3                                          0241  07010000
*                                       /*                       M4502* 07020000
*         IF DPMSG='0'B &               /* NOT DP MOD MSG       YM2273* 07030000
*           REMNOMSG='0'B THEN          /* NO MSG TO REMOTE     YM2273* 07040000
         TM    SWTR2,B'00000001'                                  0242  07050000
         BC    05,@9F1                                            0242  07060000
         TM    SWTR,B'00100000'                                   0242  07070000
*           GO TO CHKECB;               /* CHECK ECB FOR CMPLTN YM2273* 07080000
         BC    10,CHKECB                                          0243  07090000
*                                                                       07100000
*                                       /*                       M4502* 07110000
*   UNVER:ILLRPL(15:16)=REMINBUF(3:4);  /*ILL REP CODE TO MSG    M5049* 07120000
@9F0     EQU   *                                                  0244  07130000
@9F1     EQU   *                                                  0244  07140000
UNVER    MVC   ILLRPL+14(2),WTOBUF+8                              0244  07150000
*         ILLRESP='1'B;                  /*SET ILL RESP FLAG FOR OLTEP* 07160000
         OI    SWTR1,B'10000000'                                  0245  07170000
*         GOTO INITIN;                   /*GO TELL REMOTE             * 07180000
         BC    15,INITIN                                          0246  07190000
*  /******************************************************************* 07200000
*  /* THIS SECTION FREES LOCAL 'UNANSWERED' PWTOR'S WHEN ANSWERED BY  * 07210000
*  /* REMOTE                                                          * 07220000
*  /******************************************************************* 07230000
*    FREE:WKSVC='F0F0'X;                /* MODULE ID                  * 07240000
FREE     MVC   WKSVC(4),@X19                                      0247  07250000
*         R1 = '00'X;                    /* SET CALL CODE PARM  Y02008* 07260000
         LA    @1,X'00'                                           0248  07270000
*         R0 = ADDR(ROPT);               /* SET PARAMETER LIST ADDRESS* 07280000
         LA    @0,ROPT                                            0249  07290000
*     GEN(SVC   59);                     /* FREE WTOR                 * 07300000
         SVC   59                                                       07310000
         DS    0H                                                       07320000
*         WKWDID=R0;                    /* SAVE ID                    * 07330000
         ST    @0,WKWDID                                          0251  07340000
*         MID=DUMID;                     /* SET ID IN MESSAGE         * 07350000
         L     @1,MSGMOD                                          0252  07360000
         L     @1,76(0,@1)         A00028                         0252  07370000
         MVC   20(2,@1),WKWDID+2                                  0252  07380000
*         R1=WTORANS;                    /* ADDRESS OF MESSAGE        * 07390000
         L     @C,MSGMOD                                          0253  07400000
         L     @1,76(0,@C)                                        0253  07410000
*         REMNOMSG='1'B;                 /* REMOTE DOES NOT GET MSG   * 07420000
         OI    SWTR,B'00100000'                                   0254  07430000
*         GEN(PWTO  REG=(1));                                           07440000
         PWTO  REG=(1)                                                  07450000
         DS    0H                                                       07460000
*         REMNOMSG='0'B;                 /* RESTORE SWITCH            * 07470000
         NI    SWTR,B'11011111'                                   0256  07480000
*         GOTO FREERTRN;                /* RETURN                     * 07490000
         L     @1,FREEPTR                                         0257  07500000
         BCR   15,@1                                              0257  07510000
*  /******************************************************************* 07520000
*  /* MOVE MESSAGE TO APPROPRIATE OLTEP BUFFER                        * 07530000
*  /******************************************************************* 07540000
*   MOVIT:GEN;                                                          07550000
MOVIT    EQU   *                                                  0258  07560000
         BCTR  R3,0                    * SUB ONE FROM COUNT FOR EXECUTE 07570000
         LA    R5,INTEXT(R3)           GET A INPUT BYTE         SA52876 07580000
         CLI   0(R5),X'40'             IS IT A BLANK            SA52876 07590000
         BE    MOVIT                   YES,GET NEXT BYTE        SA52876 07600000
         EX    R3,MOVE                 * MOVE DATA TO BUFFER            07610000
         B     INITIN                                                   07620000
MOVE     MVC   0(0,R4),INTEXT          * MOVE DATA FROM INPUT BUFFER    07630000
         DS    0H                                                       07640000
*  /******************************************************************* 07650000
*  /* COMMUNICATION MESSAGE SET UP FOR WTO                            * 07660000
*  /******************************************************************* 07670000
*  MOVIT1:DO R9=84 BY -1 TO 1;                                          07680000
MOVIT1   LA    @9,84                                              0259  07690000
*         IF WTOBUF(R9)¬=' ' THEN       /*SCAN FOR END OF MESSAGE     * 07700000
@DO9EF   LR    @1,@9                                              0260  07710000
         LA    @A,WTOBUF-1(@1)                                    0260  07720000
         CLI   0(@A),C' '                                         0260  07730000
         BC    08,@9EB                                            0260  07740000
*           DO;                                                         07750000
*  MOVIT2:MSGID(1:8)=WTOID(1:8);        /* MOVE WTO ID ON MESSAGE     * 07760000
MOVIT2   MVC   WTOBUF+4(8),WTOID                                  0262  07770000
*         WTOBUF(R9+1:R9+4)=            /* MOVE ROUTING AND DESCRIPTOR* 07780000
*         RTEDSC(1:4);                  /* CODES ON MESSAGE FOR PWTO  * 07790000
         LA    @E,WTOBUF+126                                      0263  07800000
         LA    @1,4                                               0263  07810000
         AR    @1,@9                                              0263  07820000
         LA    @C,1                                               0263  07830000
         AR    @C,@9                                              0263  07840000
         SR    @1,@C                                              0263  07850000
         LA    @A,WTOBUF-1(@C)                                    0263  07860000
         EX    @1,@MVC                                            0263  07870000
*  MOVIT3:                              /*                   X02008   * 07880000
*  MOVIT3:                              /*                   X02008   * 07890000
*         WRKCNT=R9;                    /* MOVE COUNT INTO WORK AREA  * 07900000
MOVIT3   ST    @9,WRKCNT                                          0264  07910000
*         WTOCNT=COUNT;                 /* COUNT INTO WTO             * 07920000
         MVC   WTOBUF(2),WRKCNT+2                                 0265  07930000
*         REMNOMSG='1'B;                /* REMOTE DOES NOT GET MSG    * 07940000
         OI    SWTR,B'00100000'                                   0266  07950000
*         R1=ADDR(WTOBUF);              /* POINT TO MESSAGE           * 07960000
         LA    @1,WTOBUF                                          0267  07970000
*         GEN(PWTO  REG=(1));           /* ISSUE MESSAGE              * 07980000
         PWTO  REG=(1)                                                  07990000
         DS    0H                                                       08000000
*         REMNOMSG='0'B;                /* RESTORE SWITCH             * 08010000
         NI    SWTR,B'11011111'                                   0269  08020000
*         PRTONLY='0'B;                 /*PRT FLG OFF        X02008   * 08030000
         NI    SWTR2,B'11111101'                                  0270  08040000
*         GOTO  INITIN;                                                 08050000
         BC    15,INITIN                                          0271  08060000
*         END;                                                          08070000
*           ELSE;                                                       08080000
@9EB     EQU   *                                                  0273  08090000
*         END MOVIT1;                                                   08100000
*  /******************************************************************* 08110000
*  /* WRITE RESPONSE TO REMOTE                                        * 08120000
*  /* SET UP TO WRITE Y AND READ EOT                                  * 08130000
*  /******************************************************************* 08140000
*  INITIN:REMINBUF=REMINBUF&&REMINBUF;  /* ZERO THE INPUT BUFFER      * 08150000
@9EA     BCT   @9,@DO9EF                                          0274  08160000
INITIN   XC    WTOBUF+6(120),WTOBUF+6                             0275  08170000
*         FLAGS='42'X;                  /*SET IOB FLAGS FOR CCW CHAIN * 08180000
         MVI   REIOB,X'42'                                        0276  08190000
*         CPA=ADDR(CCWWRRSP);           /* WRITE Y READ EOT           * 08200000
         LA    @F,CCWWRRSP                                        0277  08210000
         ST    @F,@TEMP4                                          0277  08220000
         MVC   REIOB+17(3),@TEMP4+1                               0277  08230000
*         EXCPPTR=ADDR(BB);              /* RETURN TO ADDRESS         * 08240000
         LA    @F,BB                                              0278  08250000
         ST    @F,EXCPPTR                                         0278  08260000
*         GOTO CPINIT;                   /* EXCP                      * 08270000
         BC    15,CPINIT                                          0279  08280000
*      BB:IF ILLRESP¬='1'B THEN              /*IF RESPONSE OK,GO BACK * 08290000
BB       TM    SWTR1,B'10000000'                                  0280  08300000
*         GOTO CONTEN;                                                  08310000
         BC    12,CONTEN                                          0281  08320000
*  /******************************************************************* 08330000
*  /* RESPONSE ILLEGAL SEND REMOTE THE MESSAGE                        * 08340000
*  /******************************************************************* 08350000
*         R6=ADDR(OUTTEXT);             /* ADDRESS OF TRANSMIT BUFFER * 08360000
         LA    @6,ROUTBUF+1                                       0282  08370000
*         R1SAVE=29;                    /*CHAR COUNT OF MSG      M5049* 08380000
         LA    @F,29                                              0283  08390000
         ST    @F,R1SAVE                                          0283  08400000
*         R7=ADDR(ILLRPL);              /* ADDRESS OF ERROR MESSAGE   * 08410000
         LA    @7,ILLRPL                                          0284  08420000
*         GOTO CHKRP1;                  /* SEND MESSAGE               * 08430000
         BC    15,CHKRP1                                          0285  08440000
*  /******************************************************************* 08450000
*  /*THIS  SECTION  ISSUES THE EXCP AND WAIT,CHECK FOR PERMANENT ERROR* 08460000
*  /*AND REINITIALIZES BLOCKS ASSOCIATED WITH THE EXCP MACRO          * 08470000
*  /******************************************************************* 08480000
*  CPINIT:ECBA = ADDR(RECB);                  /*ADDR OF ECB INTO IOB  * 08490000
CPINIT   LA    @F,RECB                                            0286  08500000
         ST    @F,@TEMP4                                          0286  08510000
         MVC   REIOB+5(3),@TEMP4+1                                0286  08520000
*         DCBA = ADDR(REIDCB);                /*LIKEWISE THE DCB      * 08530000
         LA    @F,REIDCB                                          0287  08540000
         ST    @F,@TEMP4                                          0287  08550000
         MVC   REIOB+21(3),@TEMP4+1                               0287  08560000
*         GEN;                                                          08570000
EXECUTE  EXCP  REIOB                                                    08580000
STRTCLK1 STIMER REAL,TIMEOUT,DINTVL=TIME10  *                     M4502 08590000
WAITCP   WAIT  ECB=RECB                                                 08600000
STOPCLK1 TTIMER CANCEL                                                  08610000
         DS    0H                                                       08620000
*         IF COMPCODE='7F'X THEN GOTO CONTIN; /* GO IF SUCCESSFUL     * 08630000
         CLI   RECB,X'7F'                                         0289  08640000
         BC    08,CONTIN                                          0290  08650000
*   ERROR:REMERR='1'B;                        /* SET PERM ERROR FLAG  * 08660000
ERROR    OI    SWTR,B'01000000'                                   0291  08670000
*         GEN;                                                          08680000
         IFDMOD CALL='56'                                               08690000
         IFDMOD DELETE='56'                                             08700000
         DS    0H                                                       08710000
*         GOTO FINI;                          /* GO BACK TO OLTEP     * 08720000
         BC    15,FINI                                            0293  08730000
*  CONTIN:REIOB1=REIOB1&&REIOB1;        /* INITIALIZE IOB             * 08740000
CONTIN   XC    REIOB(32),REIOB                                    0294  08750000
*         RECB=0;                             /* ZERO THE ECB         * 08760000
         SR    @F,@F                                              0295  08770000
         ST    @F,RECB                                            0295  08780000
*         GOTO EXCPRTRN;                 /* RETURN                    * 08790000
         L     @1,EXCPPTR                                         0296  08800000
         BCR   15,@1                                              0296  08810000
*  /******************************************************************* 08820000
*  /* STIMER EXIT ROUTINE-10 MINUTE INTERRUPT                    M4502* 08830000
*  /******************************************************************* 08840000
*         GENERATE;                                                     08850000
TIMEOUT  STM   R14,R12,12(R13)         * SAVE CALLERS REGS              08860000
         BALR  R11,0                   * SET                            08870000
         LA    R15,TIMEOUT-IFDOLT55    *     UP                         08880000
         SR    R11,R15                 *        BASE REGISTER           08890000
         ST    R13,SAVE2+4             * SAVE @ OF CALLERS SAVEAREA     08900000
         LA    R15,SAVE2               * GET @ OF OWN SAVEAREA          08910000
         ST    R15,8(R13)              * SAVE IN CALLERS SAVEAREA       08920000
         LR    R13,R15                 * PUT IT IN SAVE REG (13)        08930000
POSTECB  POST  RECB,256                *POST 100 COMPLETION CODE        08940000
         DS    0H                                                       08950000
*         RETURN;                                                       08960000
*         END IFDOLT55;                                                 08970000
@EL01    L     @D,4(0,@D)                                         0299  08980000
         LM    @E,@C,12(@D)                                       0299  08990000
         BCR   15,@E                                              0299  09000000
@DATA1   EQU   *                                                        09010000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           09020000
@1       EQU   01                                                       09030000
@2       EQU   02                                                       09040000
@3       EQU   03                                                       09050000
@4       EQU   04                                                       09060000
@5       EQU   05                                                       09070000
@6       EQU   06                                                       09080000
@7       EQU   07                                                       09090000
@8       EQU   08                                                       09100000
@9       EQU   09                                                       09110000
@A       EQU   10                                                       09120000
@B       EQU   11                                                       09130000
@C       EQU   12                                                       09140000
@D       EQU   13                                                       09150000
@E       EQU   14                                                       09160000
@F       EQU   15                                                       09170000
@D1      DC    H'120'                                                   09180000
@D2      DC    H'-1'                                                    09190000
@MVC     MVC   0(1,@A),0(@E)                                            09200000
         DS    0F                                                       09210000
@X19     DC    X'0000F0F0'                                              09220000
         DS    0D                                                       09230000
@DATA    EQU   *                                                        09240000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   09250000
R0       EQU   00000000            FULLWORD POINTER REGISTER            09260000
R1       EQU   00000001            FULLWORD POINTER REGISTER            09270000
R2       EQU   00000002            FULLWORD POINTER REGISTER            09280000
R3       EQU   00000003            FULLWORD INTEGER REGISTER            09290000
R4       EQU   00000004            FULLWORD INTEGER REGISTER            09300000
R5       EQU   00000005            FULLWORD INTEGER REGISTER            09310000
R6       EQU   00000006            FULLWORD INTEGER REGISTER            09320000
R7       EQU   00000007            FULLWORD INTEGER REGISTER            09330000
R8       EQU   00000008            FULLWORD POINTER REGISTER            09340000
R9       EQU   00000009            FULLWORD INTEGER REGISTER            09350000
R10      EQU   00000010            FULLWORD INTEGER REGISTER            09360000
R11      EQU   00000011            FULLWORD INTEGER REGISTER            09370000
R12      EQU   00000012            FULLWORD INTEGER REGISTER            09380000
R13      EQU   00000013            FULLWORD INTEGER REGISTER            09390000
R14      EQU   00000014            FULLWORD INTEGER REGISTER            09400000
R15      EQU   00000015            FULLWORD INTEGER REGISTER            09410000
R1SAVE   EQU   @DATA+00000072      FULLWORD POINTER                     09420000
FREEPTR  EQU   @DATA+00000076      FULLWORD POINTER                     09430000
EXCPPTR  EQU   @DATA+00000080      FULLWORD POINTER                     09440000
REIOB    EQU   @DATA+00000084      52 BYTE(S) ON WORD                   09450000
REIOB1   EQU   REIOB+00000000      32 BYTE(S)                           09460000
FLAGS    EQU   REIOB+00000000      8 BIT(S)                             09470000
DCH      EQU   REIOB+00000000      1 BIT(S)                             09480000
CCH      EQU   REIOB+00000000      1 BIT(S)                             09490000
A00001   EQU   REIOB+00000000      6 BIT(S)                             09500000
A00002   EQU   REIOB+00000001      24 BIT(S)                            09510000
ECBC     EQU   REIOB+00000004      8 BIT(S)                             09520000
ECBA     EQU   REIOB+00000005      3  BYTE  POINTER                     09530000
CSW      EQU   REIOB+00000008      64 BIT(S)                            09540000
A00003   EQU   REIOB+00000008      32 BIT(S)                            09550000
CEDEUE   EQU   REIOB+00000012      8 BIT(S)                             09560000
CE       EQU   REIOB+00000012      1 BIT(S)                             09570000
DE       EQU   REIOB+00000012      1 BIT(S)                             09580000
A00004   EQU   REIOB+00000012      1 BIT(S)                             09590000
UE       EQU   REIOB+00000012      1 BIT(S)                             09600000
A00005   EQU   REIOB+00000012      4 BIT(S)                             09610000
A00006   EQU   REIOB+00000013      24 BIT(S)                            09620000
A00007   EQU   REIOB+00000016      8 BIT(S)                             09630000
CPA      EQU   REIOB+00000017      3  BYTE  POINTER                     09640000
A00008   EQU   REIOB+00000020      8 BIT(S)                             09650000
DCBA     EQU   REIOB+00000021      3  BYTE  POINTER                     09660000
A00009   EQU   REIOB+00000024      8 BIT(S)                             09670000
A00010   EQU   REIOB+00000025      8 BYTE(S)                            09680000
         ORG   REIOB+00000032                                           09690000
ERPWORK  EQU   *                   FULLWORD POINTER                     09700000
         DC    AL4(CCWWORK)                                             09710000
EOTRESP  EQU   *                   FULLWORD POINTER                     09720000
         DC    AL4(EOT)                                                 09730000
NEGRESP  EQU   *                   FULLWORD POINTER                     09740000
         DC    AL4(NEG)                                                 09750000
REMINPTR EQU   *                   FULLWORD POINTER                     09760000
         DC    AL4(REMINBUF)                                            09770000
CCWWORK  EQU   @DATA+00000136      48 BYTE(S) ON DWORD                  09780000
         ORG   CCWWORK+00000000                                         09790000
CCWS     EQU   *                   6*8 BYTE(S)                          09800000
         DC    00006X'0000000000000000'                                 09810000
REIDCB   EQU   @DATA+00000184      108 BYTE(S) ON WORD                  09820000
A00011   EQU   *                   18*FULLWORD INTEGER                  09830000
         DC    00018FL4'0'                                              09840000
A00012   EQU   REIDCB+00000072     5*FULLWORD INTEGER                   09850000
A00013   EQU   *                   FULLWORD POINTER                     09860000
         DC    AL4(RETRN)                                               09870000
A00014   EQU   *                   FULLWORD POINTER                     09880000
         DC    AL4(RETRN)                                               09890000
A00015   EQU   *                   FULLWORD POINTER                     09900000
         DC    AL4(RETRN)                                               09910000
A00016   EQU   *                   FULLWORD POINTER                     09920000
         DC    AL4(RETRN)                                               09930000
A00017   EQU   *                   FULLWORD POINTER                     09940000
         DC    AL4(RETRN)                                               09950000
RETRN    EQU   *                   2 BYTE(S)                            09960000
         DC    X'07FE'                                                  09970000
         ORG   @DATA+00000292                                           09980000
OUTTBL   EQU   *                   128 BIT(S) ON BYTE                   09990000
         DC    X'81E2E4E7E8EBEDEEF0F3A0768493E187'                      10000000
OUTTBL1  EQU   *                   128 BIT(S) ON BYTE                   10010000
         DC    X'61C3C5C6C9CACCCFD1D2D757909587F6'                      10020000
OUTTBL2  EQU   *                   128 BIT(S) ON BYTE                   10030000
         DC    X'4023A5A6A9AAACAFB1B281378BC08EA3'                      10040000
OUTTBL3  EQU   *                   128 BIT(S) ON BYTE                   10050000
         DC    X'15020407080B0D0E10138816208D8296'                      10060000
INTBL    EQU   *                   16 BYTE(S)                           10070000
         DC    C' 1234567890#    '                                      10080000
INTBL1   EQU   *                   16 BYTE(S)                           10090000
         DC    C'@/STUVWXYZ ,    '                                      10100000
INTBL2   EQU   *                   16 BYTE(S)                           10110000
         DC    C'-JKLMNOPQR $    '                                      10120000
INTBL3   EQU   *                   16 BYTE(S)                           10130000
         DC    C'&&ABCDEFGHI .    '                                     10140000
INTBL4   EQU   *                   16 BYTE(S)                           10150000
         DC    C' =<;:% >*()"    '                                      10160000
INTBL5   EQU   *                   16 BYTE(S)                           10170000
         DC    C' ?STUVWXYZ |    '                                      10180000
INTBL6   EQU   *                   16 BYTE(S)                           10190000
         DC    C'_JKLMNOPQR      '                                      10200000
INTBL7   EQU   *                   16 BYTE(S)                           10210000
         DC    C'+ABCDEFGHI ¬    '                                      10220000
DEDBUF   EQU   *                   72 BYTE(S) ON WORD                   10230000
&T       SETA  00001                                                    10240000
.L099997 ANOP                                                           10250000
         DC    X'40'                                                    10260000
         DC    00071X'40'                                               10270000
ROUTBUF  EQU   @DATA+00000556      130 BYTE(S) ON WORD                  10280000
EOA      EQU   *                   1 BYTE(S)                            10290000
         DC    X'16'                                                    10300000
OUTTEXT  EQU   ROUTBUF+00000001    125 BYTE(S)                          10310000
         ORG   @DATA+00000686                                           10320000
SENDCODE EQU   *                   4 BYTE(S)                            10330000
         DC    X'90158181'                                              10340000
A00019   EQU   SENDCODE+00000000   2 BYTE(S)                            10350000
SCD      EQU   SENDCODE+00000002   1 BYTE(S)                            10360000
A00020   EQU   SENDCODE+00000003   1 BYTE(S)                            10370000
EOT      EQU   *                   1 BYTE(S)                            10380000
         DC    X'1F'                                                    10390000
POS      EQU   *                   1 BYTE(S)                            10400000
         DC    X'76'                                                    10410000
NEG      EQU   *                   1 BYTE(S)                            10420000
         DC    X'40'                                                    10430000
         ORG   @DATA+00000696                                           10440000
ILLRPL   EQU   *                   29 BYTE(S) ON WORD                   10450000
         DC    C'IFD173I REPLY    NOT VERIFIED'                         10460000
A00021   EQU   ILLRPL+00000000     14 BYTE(S)                           10470000
ILRC     EQU   ILLRPL+00000014     2 BYTE(S)                            10480000
A00022   EQU   ILLRPL+00000016     13 BYTE(S)                           10490000
PURGELST EQU   @DATA+00000728      16 BYTE(S) ON WORD                   10500000
PPLDSID  EQU   PURGELST+00000000   4 BYTE(S)                            10510000
         ORG   PURGELST+00000000                                        10520000
PPLOPT1  EQU   *                   1 BYTE(S)                            10530000
         DC    X'E4'                                                    10540000
PPLDSIDA EQU   PURGELST+00000001   3  BYTE  POINTER                     10550000
A00023   EQU   PURGELST+00000004   12 BYTE(S)                           10560000
ECB01    EQU   00000000            FULLWORD INTEGER                     10570000
ECB01C   EQU   ECB01+00000000      1 BYTE(S)                            10580000
A00026   EQU   ECB01+00000001      3 BYTE(S)                            10590000
A00028   EQU   00000000            80 BYTE(S) ON WORD                   10600000
A00029   EQU   A00028+00000000     19*FULLWORD POINTER                  10610000
WTORANS  EQU   A00028+00000076     FULLWORD POINTER                     10620000
A00030   EQU   00000000            22 BYTE(S) ON WORD                   10630000
A00031   EQU   A00030+00000000     4 BYTE(S)                            10640000
A00032   EQU   A00030+00000004     16 BYTE(S)                           10650000
MID      EQU   A00030+00000020     2 BYTE(S)                            10660000
WKWDID   EQU   @DATA+00000744      4 BYTE(S) ON WORD                    10670000
A00033   EQU   WKWDID+00000000     2 BYTE(S)                            10680000
DUMID    EQU   WKWDID+00000002     2 BYTE(S)                            10690000
SAVE2    EQU   @DATA+00000748      18*FULLWORD INTEGER                  10700000
         ORG   @DATA+00000824                                           10710000
TIME10   EQU   *                   8 BYTE(S) ON DWORD                   10720000
         DC    X'F0F0F1F0F0F0F0C0'                                      10730000
WTOBUF   EQU   @DATA+00000832      130 BYTE(S) ON WORD                  10740000
WTOCNT   EQU   WTOBUF+00000000     2 BYTE(S)                            10750000
         ORG   WTOBUF+00000002                                          10760000
WTOFLG   EQU   *                   16 BIT(S) ON BYTE                    10770000
         DC    B'1000000000000000'                                      10780000
MSGID    EQU   WTOBUF+00000004     122 BYTE(S)                          10790000
A00034   EQU   WTOBUF+00000004     2 BYTE(S)                            10800000
REMINBUF EQU   WTOBUF+00000006     120 BYTE(S)                          10810000
REPLY    EQU   WTOBUF+00000006     4 BYTE(S)                            10820000
A00035   EQU   WTOBUF+00000006     3 BYTE(S)                            10830000
CODE     EQU   WTOBUF+00000009     1 BYTE(S)                            10840000
A00036   EQU   WTOBUF+00000010     2 BYTE(S)                            10850000
INTEXT   EQU   WTOBUF+00000012     72 BYTE(S)                           10860000
         ORG   WTOBUF+00000126                                          10870000
RTEDSC   EQU   *                   4 BYTE(S)                            10880000
         DC    X'02000040'                                              10890000
WTOID    EQU   *                   8 BYTE(S)                            10900000
         DC    C'IFD255I '                                              10910000
WRKCNT   EQU   @DATA+00000972      4 BYTE(S) ON WORD                    10920000
A00037   EQU   WRKCNT+00000000     2 BYTE(S)                            10930000
COUNT    EQU   WRKCNT+00000002     2 BYTE(S)                            10940000
SWTSAVE  EQU   @DATA+00000976      8 BIT(S) ON BYTE                     10950000
SWT1     EQU   SWTSAVE+00000000    1 BIT(S)                             10960000
SWT2     EQU   SWTSAVE+00000000    1 BIT(S)                             10970000
SWT3     EQU   SWTSAVE+00000000    1 BIT(S)                             10980000
SWT4     EQU   SWTSAVE+00000000    1 BIT(S)                             10990000
SWT5     EQU   SWTSAVE+00000000    1 BIT(S)                             11000000
SWT6     EQU   SWTSAVE+00000000    1 BIT(S)                             11010000
SWT7     EQU   SWTSAVE+00000000    1 BIT(S)                             11020000
SWT8     EQU   SWTSAVE+00000000    1 BIT(S)                             11030000
         ORG   @DATA+00000980                                           11040000
CVTADPTR EQU   *                   FULLWORD POINTER                     11050000
         DC    AL4(16)                                                  11060000
CVTADDR  EQU   00000000            FULLWORD POINTER                     11070000
CVT      EQU   00000000            332 BYTE(S) ON WORD                  11080000
A00038   EQU   CVT+00000000        40 BYTE(S)                           11090000
CVTILK2  EQU   CVT+00000040        FULLWORD POINTER                     11100000
A00039   EQU   CVT+00000044        284 BYTE(S)                          11110000
CVTEXT2  EQU   CVT+00000328        FULLWORD POINTER                     11120000
CVTOLTEP EQU   00000028            FULLWORD POINTER                     11130000
OLTEPTAB EQU   00000000            24 BYTE(S)                           11140000
DIEHEAD  EQU   OLTEPTAB+00000000   4 BYTE(S)                            11150000
REIDEBAD EQU   OLTEPTAB+00000004   4  BYTE  POINTER                     11160000
A00040   EQU   OLTEPTAB+00000008   20 BYTE(S)                           11170000
OLTEPUCB EQU   OLTEPTAB+00000028   4  BYTE  POINTER                     11180000
REIUCBAD EQU   OLTEPTAB+00000032   4  BYTE  POINTER                     11190000
A00041   EQU   OLTEPTAB+00000036   4 BYTE(S)                            11200000
IOSGENTB EQU   OLTEPTAB+00000040   18*4  BYTE  INTEGER                  11210000
         ORG   @DATA                                                    11220000
         DS    00000984C                                                11230000
@TEMPS   DS    0F                                                       11240000
@TEMP3   DC    F'0'                                                     11250000
@TEMP4   DC    F'0'                                                     11260000
* WRITE INITIAL                                                         11270000
CCWWRIN  CCW   1,ROUTBUF,X'60',0       * WRITE DATA               M4502 11280000
CCWWRIN1 CCW   2,REMINBUF,X'20',1           * READ RESPONSE   X02008    11290000
         SPACE                                                          11300000
* WRITE END OF TRANSMISSION (C)                                   M4502 11310000
CCWWREOT CCW   1,EOT,X'20',1                * WRITE EOT       X02008    11320000
         SPACE                                                          11330000
* READ INITIAL                                                    M4502 11340000
CCWRDI   CCW   6,0,X'60',1             * PREPARE                  M4502 11350000
CCWRDI1  CCW   2,REMINBUF,X'20',120         * READ DATA       X02008    11360000
         SPACE                                                          11370000
* WRITE Y READ EOT                                                M4502 11380000
CCWWRRSP CCW   1,POS,X'60',1                * WRITE RESPONSE  X02008    11390000
CCWRDEOT CCW   2,REMINBUF,X'20',1           * READ EOT        X02008    11400000
OPTCOMM  IFDCOM                                                         11410000
IFDOLT55 CSECT                                                          11420000
WWRIN    EQU   CCWWRIN+00000000    8 BYTE(S)                            11430000
A00000   EQU   WWRIN+00000000      6 BYTE(S)                            11440000
DISP     EQU   WWRIN+00000006      2  BYTE  POINTER                     11450000
RSPBUF   EQU   RESPBUF+00000000    4 BYTE(S)                            11460000
RSPCNT   EQU   RSPBUF+00000000     1 BYTE(S)                            11470000
RSPADR   EQU   RSPBUF+00000001     3 BYTE(S)                            11480000
RECB     EQU   REIECB+00000000     FULLWORD INTEGER                     11490000
COMPCODE EQU   RECB+00000000       8 BIT(S)                             11500000
A00018   EQU   RECB+00000001       24 BIT(S)                            11510000
RECB3    EQU   ECB3+00000000       FULLWORD INTEGER                     11520000
ECB3C    EQU   RECB3+00000000      1 BYTE(S)                            11530000
A00024   EQU   RECB3+00000001      3 BYTE(S)                            11540000
RDYNCOM  EQU   DYNCOM+00000000     1 BYTE(S)                            11550000
RECB37   EQU   ECB37+00000000      FULLWORD INTEGER                     11560000
ECB37C   EQU   RECB37+00000000     1 BYTE(S)                            11570000
A00025   EQU   RECB37+00000001     3 BYTE(S)                            11580000
RREPLY37 EQU   REPLY37+00000000    72 BYTE(S)                           11590000
RCNT37   EQU   CNT37+00000000      1 BYTE(S)                            11600000
A00027   EQU   ROPT+00000000       8 BYTE(S) ON WORD                    11610000
ROPT4    EQU   A00027+00000000     FULLWORD POINTER                     11620000
ROPT8    EQU   A00027+00000004     FULLWORD POINTER                     11630000
MODID    EQU   WKSVC+00000000      FULLWORD INTEGER                     11640000
SWTR     EQU   CESWTR+00000000     8 BIT(S) ON BYTE                     11650000
RETAINAC EQU   SWTR+00000000       1 BIT(S)                             11660000
REMERR   EQU   SWTR+00000000       1 BIT(S)                             11670000
REMNOMSG EQU   SWTR+00000000       1 BIT(S)                             11680000
CENOMSG  EQU   SWTR+00000000       1 BIT(S)                             11690000
PRTNOMSG EQU   SWTR+00000000       1 BIT(S)                             11700000
IMRESP   EQU   SWTR+00000000       1 BIT(S)                             11710000
EXECOUT  EQU   SWTR+00000000       1 BIT(S)                             11720000
CECOMOUT EQU   SWTR+00000000       1 BIT(S)                             11730000
SWTR1    EQU   CESWTR1+00000000    8 BIT(S) ON BYTE                     11740000
ILLRESP  EQU   SWTR1+00000000      1 BIT(S)                             11750000
EXECANS  EQU   SWTR1+00000000      1 BIT(S)                             11760000
CECOMANS EQU   SWTR1+00000000      1 BIT(S)                             11770000
INFOMSG  EQU   SWTR1+00000000      1 BIT(S)                             11780000
RETRIEVE EQU   SWTR1+00000000      1 BIT(S)                             11790000
REMANS   EQU   SWTR1+00000000      1 BIT(S)                             11800000
EDTOMSG  EQU   SWTR1+00000000      1 BIT(S)                             11810000
MSGHND   EQU   SWTR1+00000000      1 BIT(S)                             11820000
SWTR2    EQU   CESWTR2+00000000    8 BIT(S) ON BYTE                     11830000
REPLY00  EQU   SWTR2+00000000      1 BIT(S)                             11840000
REPLY02  EQU   SWTR2+00000000      1 BIT(S)                             11850000
ONCOMM   EQU   SWTR2+00000000      1 BIT(S)                             11860000
COMMLOOP EQU   SWTR2+00000000      1 BIT(S)                             11870000
WAIT3    EQU   SWTR2+00000000      1 BIT(S)                             11880000
OPTERR   EQU   SWTR2+00000000      1 BIT(S)                             11890000
PRTONLY  EQU   SWTR2+00000000      1 BIT(S)                             11900000
DPMSG    EQU   SWTR2+00000000      1 BIT(S)                             11910000
@DATEND  EQU   *                                                        11920000
@9F3     EQU   UNVER                                                    11930000
         END   IFDOLT55                                                 11940000
./  ADD  SSI=40230330,NAME=IFDOLT56
         TITLE ' RETAIN/370 TERMINATION IFDOLT56'                       00010000
         TITLE 'RETAIN/370 TERMINATION IFDOLT56'                        00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT56 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT56 23 JAN 74'                             0002  00070000
         STM   @E,@C,12(@D)                                       0002  00080000
         BALR  @B,0                                               0002  00090000
@PSTART  DS    0H                                                 0002  00100000
         USING @PSTART+00000,@B                                   0002  00110000
         ST    @D,@SAV001+4                                       0002  00120000
         LA    @F,@SAV001                                         0002  00130000
         ST    @F,8(0,@D)                                         0002  00140000
         LR    @D,@F                                              0002  00150000
*         GEN(USING CHASCT,2);                                          00160000
         USING CHASCT,2                                                 00170000
         DS    0H                                                       00180000
*         GENERATE DATA;                                                00190000
*  /******************************************************************* 00200000
*  /*     CNVRT MACRO CALLING SEQUENCE                                * 00210000
*  /******************************************************************* 00220000
*         GENERATE DATA;                                                00230000
*         GENERATE DATA;                                                00240000
*         DCL CCWDIS(2) FIXED GENERATED;                                00250000
*  /******************************************************************* 00260000
*  /* REGISTERS                                                       * 00270000
*  /******************************************************************* 00280000
*         DCL R0 REG(0) PTR;                                            00290000
*         DCL R1 REG(1) PTR;                                            00300000
*         DCL R2 REG(2) PTR;                                            00310000
*         DCL R3 REG(3);                                                00320000
*         DCL R4 REG(4);                                                00330000
*         DCL R5 REG(5);                                                00340000
*         DCL R6 REG(6);                                                00350000
*         DCL R7 REG(7);                                                00360000
*         DCL R8 REG(8);                                                00370000
*         DCL R9 REG(9);                                                00380000
*         DCL R10 REG(10);                                              00390000
*         DCL R11 REG(11);                                              00400000
*         DCL R12 REG(12);                                              00410000
*         DCL R13 REG(13);                                              00420000
*         DCL R14 REG(14);                                              00430000
*         DCL R15 REG(15);                                              00440000
*  /******************************************************************* 00450000
*  /*     REI IOB                                                     * 00460000
*  /******************************************************************* 00470000
*         DCL REIOBPTR PTR GENERATED;   /* POINTER TO REMOTE IOB      * 00480000
*         DCL 1 IOB CHAR(40) BASED(REIOBPTR),     /* IOB BREAK DOWN   * 00490000
*             2 IOB1 CHAR(32),          /* USED BY EXCP               * 00500000
*              3 FLAGS BIT(8),          /*                            * 00510000
*               5 DCH BIT(1),           /* DATA CHAINING              * 00520000
*               5 CCH BIT(1),           /* COMMAND CHAINING           * 00530000
*               5 * BIT(6),             /*                            * 00540000
*              3 * CHAR(1),                                             00550000
*              3 SENSE CHAR(2),         /* SENSE                      * 00560000
*              3 ECBC BIT(8),           /* ECB CODE                   * 00570000
*              3 ECBA PTR(24),          /* ECB ADDRESS                * 00580000
*              3 * CHAR(1),                                             00590000
*              3 CSW CHAR(7),           /* CSW                        * 00600000
*              3 * BIT(8),                                              00610000
*              3 CPA PTR(24),           /* CHANNEL PROGRAM ADDRESS    * 00620000
*              3 * BIT(8),              /*                            * 00630000
*              3 DCBA PTR(24),          /* DCB ADDRESS                * 00640000
*              3 * BIT(8),                                              00650000
*              3 * CHAR(8),                                             00660000
*             2 ERPWORK PTR(31);        /* PTR TO ERP WORKAREA        * 00670000
*  /******************************************************************* 00680000
*  /*     ERP'S WORKAREA                                              * 00690000
*  /******************************************************************* 00700000
*         DCL CCWWORK CHAR(48) BASED(ERPWORK); /* WORKAREA            * 00710000
*  /******************************************************************* 00720000
*  /* COMMON AREA REI SWITCHES                                        * 00730000
*  /******************************************************************* 00740000
*         DCL CESWTR CHAR(1) GENERATED; /* COMMON AREA SWITCHES       * 00750000
*        DCL 1 * BASED(ADDR(CESWTR)),    /*                           * 00760000
*              3 RETAINAC BIT(1),        /* REI ACTIVE SWITCH         * 00770000
*              3 REMERR BIT(1),          /* PERMANENT ERROR SWITCH    * 00780000
*              3 REMNOMSG BIT(1),       /* REMOTE NO MESSAGE SWITCH   * 00790000
*              3 * BIT(5);               /*                           * 00800000
*         DCL   CESWTR1 BIT(8) GENERATED; /*RETAIN SWITCHES           * 00810000
*         DCL 1 SWTR1 BIT(8) BASED(ADDR(CESWTR1)),                      00820000
*              3 * BIT(5),                                              00830000
*              3 REMANS BIT(1),     /*    REMOTE WILL ANSWER          * 00840000
*              3 * BIT(2);                                              00850000
*         DCL CESWTR2 BIT(8) GENERATED; /* RETAIN SWITCHES            * 00860000
*         DCL CHASCT CHAR(1) GENERATED; /* COMMON AREA SWITCHES       * 00870000
*        DCL 1 * BASED(ADDR(CHASCT)),                                   00880000
*             3 * (9) FIXED,             /*                           * 00890000
*             3 * FIXED,                 /*                           * 00900000
*               5 * BIT(2),              /*                           * 00910000
*               5 RETSWT BIT(1),         /* ANOTHER REI ACTIVE SWITCH * 00920000
*               5 * BIT(29);             /*                           * 00930000
*  /******************************************************************* 00940000
*  /* BUFFERS AND ASSOCIATED ECBS                                     * 00950000
*  /******************************************************************* 00960000
*         DCL REIECB GENERATED;         /* REMOTE ECB                 * 00970000
*         DCL 1 RECB BASED(ADDR(REIECB)),                               00980000
*               3 * CHAR(2),                                            00990000
*               3 * CHAR(1),                                            01000000
*                5 * BIT(7),                                            01010000
*                5 SELFPOST BIT(1),                                     01020000
*               3 * CHAR(1);                                            01030000
*  /*                                                                 * 01040000
*         DCL RINBUF PTR GENERATED;     /* INPUT BUFFER POINTER       * 01050000
*         DCL REIBUF CHAR(80) BASED(RINBUF);/* REI INPUT BUFFER       * 01060000
*  /*                                                                 * 01070000
*         DCL REIDCBPT PTR GENERATED;   /* POINTER TO REMOTE DCB      * 01080000
*         DCL 1 REIDCB CHAR(72) BASED(REIDCBPT),                        01090000
*               3 * CHAR(44),           /* NA                         * 01100000
*               3 RDCB44 PTR(31),       /* POINTER TO DEB             * 01110000
*                5 RDCB44C CHAR(1);     /* FLAGS                      * 01120000
*  /*                                                                 * 01130000
*         DCL TALKECB FIXED GENERATED;  /* TALK ECB                   * 01140000
*  /*                                                                 * 01150000
*         DCL REIUCB PTR(31) GENERATED; /* UCB ADDRESS                * 01160000
*  /* OLTEP PRINT BUFFER AND PRINT BUFFER SAVE AREA                   * 01170000
*                                       /*                       M4502* 01180000
*         DCL PRTBUFR CHAR(120) GENERATED;                              01190000
*                                       /*                       M4502* 01200000
*         DCL PRINTBUF CHAR(120) BASED(ADDR(PRTBUFR));                  01210000
*                                       /*                       M4502* 01220000
*         DCL PRINTSAV CHAR(120);                                       01230000
*                                       /*                       M4502* 01240000
*  /******************************************************************* 01250000
*  /* SVC 59 CALLING SEQUENCE AND PWTO INFORMATION                    * 01260000
*  /******************************************************************* 01270000
*         DCL IFDMSG56 LABEL NONLOCAL EXTERNAL;   /* MESSAGE MODULE   * 01280000
*         DCL MSGPTR PTR INIT(ADDR(IFDMSG56));                          01290000
*         DCL 1 * BASED(MSGPTR),                                        01300000
*              3 IFD169 PTR(31),        /* MESSAGE POINTERS           * 01310000
*               3 IFD121 PTR(31),                                       01320000
*               3 IFD167 PTR(31),                                       01330000
*              3 IFDXXX PTR(31),        /*                      S21051* 01340000
*              3 IFD137 PTR(31);        /*                      S21051* 01350000
*         DCL 1 * BASED(IFD121),        /* CANCELLED MESSAGE          * 01360000
*              3 * CHAR(12),                                            01370000
*              3 MID CHAR(2);           /* CANCELLED MESSAGE ID       * 01380000
*         DCL 1 WKWDID CHAR(4) BDY(WORD),                               01390000
*              3 * CHAR(2),                                             01400000
*              3 DUMID CHAR(2);                                         01410000
*         DCL WKSVC PTR GENERATED;      /* SVC WORK AREA              * 01420000
*         DCL ROPT CHAR(8) GENERATED;   /* SVC CALLING SEQUENCE       * 01430000
*         DCL 1 * BASED(ADDR(ROPT)),    /* BREAK DOWN                 * 01440000
*              3 ROPT4 PTR,             /* POINTER TO ECB             * 01450000
*              3 ROPT8 PTR;                                             01460000
*         DCL MODID BASED(ADDR(WKSVC));                                 01470000
*         DCL 1 CSWSNSMS CHAR(35) BASED(IFD137),  /*            S21051* 01480000
*              3 * CHAR(4),             /* USED BY PWTO         S21051* 01490000
*              3 * CHAR(14),            /*                      S21051* 01500000
*              3 MSGCSW CHAR(14),       /* CSW                        * 01510000
*              3 * CHAR(5),             /*                      S21051* 01520000
*              3 MSGSNS CHAR(2);        /* SENSE                      * 01530000
*         DCL 1 INBUF CHAR(18),          /* MACRO OUTPUT              * 01540000
*              3 SNSIN CHAR(4),          /* SENSE IN EBCDIC           * 01550000
*              3 CSWIN CHAR(14);        /* CSW INPUT                  * 01560000
*         DCL 1 OUTBUFR CHAR(9),        /* CNVRT MACRO OUTPUT         * 01570000
*              3 SNSOUT CHAR(2),        /* SENSE OUTPUT               * 01580000
*              3 CSWOUT CHAR(7);        /* CSW OUTPUT                 * 01590000
*         DCL CNVRT CHAR(14) GENERATED; /*CALLING SEQUENCE            * 01600000
*         DCL TAB28 PTR(31) GENERATED;  /* POINTER TO CONVERT MACRO   * 01610000
*  /******************************************************************* 01620000
*  /* STIMER MACRO CALLING SEQUENCE                                   * 01630000
*  /******************************************************************* 01640000
*         DCL TIMEOUT PTR GENERATED;                                    01650000
*         DCL SAVE2(18) FIXED;          /* TIMEOUT SAVEAREA           * 01660000
*         DCL TIME2 CHAR(8) BDY(DWORD)  /* TWO MINUTES ON WAIT        * 01670000
*           INIT('F0F0F0F2F0F0F0C0'X);                                  01680000
*  /******************************************************************* 01690000
*  /* PURGE READ INITIAL CHANNEL PROGRAM BEFORE DISABLING LINE        * 01700000
*  /******************************************************************* 01710000
*         GEN(TTIMER CANCEL);                                           01720000
         TTIMER CANCEL                                                  01730000
         DS    0H                                                       01740000
*         GEN(MVC  PRINTSAV(120),PRINTBUF);  /* SAVE PRINT BUFFER     * 01750000
         MVC  PRINTSAV(120),PRINTBUF                                    01760000
         DS    0H                                                       01770000
*                                       /*                       M4502* 01780000
*         REMNOMSG='1'B;                /* REMOTE NO MESSAGE          * 01790000
         OI    A00007,B'00100000'                                 0064  01800000
*         RETSWT='0'B;                  /* TURN OFF REI SWT SA51639   * 01810000
         NI    A00011+36,B'11011111'                              0065  01820000
*         RETSWT='0'B;                  /* TURN OFF RETAIN SW  SA56139* 01830000
*         IF REMERR¬='1'B THEN GOTO PURGE;  /* PERMANENT ERROR ?      * 01840000
         TM    A00007,B'01000000'                                 0067  01850000
         BC    12,PURGE                                           0068  01860000
*         IF SELFPOST¬='1'B THEN GOTO AA1;                              01870000
         TM    RECB+2,B'00000001'                                 0069  01880000
         BC    12,AA1                                             0070  01890000
*         R1=IFDXXX;                                                    01900000
         L     @1,MSGPTR                                          0071  01910000
         L     @1,12(0,@1)                                        0071  01920000
*         GEN(PWTO REG=(1));                                            01930000
         PWTO REG=(1)                                                   01940000
         DS    0H                                                       01950000
*         GOTO PURGE;                                                   01960000
         BC    15,PURGE                                           0073  01970000
*     AA1:SNSOUT=SENSE;                 /* GET SENSE BYTES            * 01980000
AA1      L     @1,REIOBPTR                                        0074  01990000
         MVC   OUTBUFR(2),2(@1)                                   0074  02000000
*         CSWOUT=CSW;                   /* GET CSW BYTES              * 02010000
         MVC   OUTBUFR+2(7),9(@1)                                 0075  02020000
*         R1=ADDR(CNVRT);               /* POINT TO CALLING SEQUENCE  * 02030000
         LA    @1,CNVRT                                           0076  02040000
*         R15=TAB28;                    /* POINT TO CONVERT MACRO     * 02050000
         L     @F,TAB28                                           0077  02060000
*         GEN(BALR R14,R15);            /* CONVERT SNS&CSW TO EBCDIC  * 02070000
         BALR R14,R15                                                   02080000
         DS    0H                                                       02090000
*         R1=IFD167;                    /* SET UP FOR PWTO            * 02100000
         L     @1,MSGPTR                                          0079  02110000
         L     @1,8(0,@1)                                         0079  02120000
*         GEN(PWTO REG=(1));            /*                      S21051* 02130000
         PWTO REG=(1)                                                   02140000
         DS    0H                                                       02150000
*         R1=IFD137;                    /*                      S21051* 02160000
         L     @1,MSGPTR                                          0081  02170000
         L     @1,16(0,@1)                                        0081  02180000
*         MSGSNS=SNSIN;                 /* PUT IN SENSE DATA          * 02190000
         L     @C,MSGPTR                                          0082  02200000
         L     @C,16(0,@C)         A00021                         0082  02210000
         MVC   37(2,@C),INBUF                                     0082  02220000
*         MSGCSW=CSWIN;                 /* PUT IN CSW DATA            * 02230000
         MVC   18(14,@C),INBUF+4                                  0083  02240000
*         GEN(PWTO REG=(1));            /* WRITE IT                   * 02250000
         PWTO REG=(1)                                                   02260000
         DS    0H                                                       02270000
*   PURGE:R1=REIUCB;                    /* GET UCB ADDRESS            * 02280000
PURGE    L     @1,REIUCB                                          0085  02290000
*         GEN;                          /* PURGE READ INITIAL CHAN PRG* 02300000
HIORDINT SVC   33                       * HIO ON READ INITIAL CHAN PRG  02310000
HIOWAIT  WAIT  ECB=RECB                * WAIT FOR HIO                   02320000
         DS    0H                                                       02330000
*  /******************************************************************* 02340000
*  /* IF NESSECARY FREE LOCAL COMMUNICATIONS ECB                      * 02350000
*  /******************************************************************* 02360000
*         WKSVC='F5F6'X;                /* MODULE ID                  * 02370000
         MVC   WKSVC(4),@X3                                       0087  02380000
*         R1='00'X;                     /* FLAGS               XA     * 02390000
         LA    @1,X'00'                                           0088  02400000
*         ROPT4=ADDR(TALKECB);          /* ADDRESS OF TALK ECB        * 02410000
         LA    @F,TALKECB                                         0089  02420000
         ST    @F,A00025                                          0089  02430000
*         R0=ADDR(ROPT);                /* ADDRESS OF CALLING SEQ     * 02440000
         LA    @0,ROPT                                            0090  02450000
*         GEN(SVC   59);                /* FREE ECB                   * 02460000
         SVC   59                                                       02470000
         DS    0H                                                       02480000
*         IF R1¬=0                      /* SVC DID NOT FREE ECB X03008* 02490000
*          THEN                         /* THEREFORE DONT PRNT  X03008* 02500000
         LTR   @1,@1                                              0092  02510000
*           GO TO DISABL;               /* FREE MSG IFD121I     X03008* 02520000
         BC    07,DISABL                                          0093  02530000
*         WKWDID=R0;                    /* SAVE REG WITH MSG ID X03008* 02540000
         ST    @0,WKWDID                                          0094  02550000
*         MID=DUMID;                    /* ID INTO MESSAGE            * 02560000
         L     @1,MSGPTR                                          0095  02570000
         L     @1,4(0,@1)          A00021                         0095  02580000
         MVC   12(2,@1),WKWDID+2                                  0095  02590000
*         R1=IFD121;                    /* POINT TO MESSAGE           * 02600000
         L     @C,MSGPTR                                          0096  02610000
         L     @1,4(0,@C)                                         0096  02620000
*         REMNOMSG='1'B;                /* REMOTE NO MESSAGE          * 02630000
         OI    A00007,B'00100000'                                 0097  02640000
*         GEN(PWTO  REG=(1));           /* ISSUE MESSAGE              * 02650000
         PWTO  REG=(1)                                                  02660000
         DS    0H                                                       02670000
*         REMNOMSG='0'B;                /* RESET FLAG                 * 02680000
         NI    A00007,B'11011111'                                 0099  02690000
*  /******************************************************************* 02700000
*  /* DISABLE 2955 AND SET REI INACTIVE SWITCHES BEFORE RETURNING     * 02710000
*  /******************************************************************* 02720000
*  DISABL:IOB1=IOB1&&IOB1;              /* ZERO THE IOB               * 02730000
DISABL   L     @1,REIOBPTR                                        0100  02740000
         XC    0(32,@1),0(@1)                                     0100  02750000
*         FLAGS='02'X;                                                  02760000
         MVI   0(@1),X'02'                                        0101  02770000
*         RECB = 0;                     /* ZERO THE ECB               * 02780000
         MVC   RECB(4),@D1                                        0102  02790000
*         ECBA = ADDR(RECB);            /* ADDRESS OF ECB             * 02800000
         LA    @F,RECB                                            0103  02810000
         ST    @F,@TEMP4                                          0103  02820000
         MVC   5(3,@1),@TEMP4+1                                   0103  02830000
*         CPA = ADDR(CCWDIS);           /* CHANNEL PROGRAM ADDRESS    * 02840000
         LA    @F,CCWDIS                                          0104  02850000
         ST    @F,@TEMP4                                          0104  02860000
         MVC   17(3,@1),@TEMP4+1                                  0104  02870000
*         DCBA = REIDCBPT;                   /* DCB ADDRESS           * 02880000
         MVC   21(3,@1),REIDCBPT+1                                0105  02890000
*         R1=REIOBPTR;                  /* ADDRESS OF IOB FOR EXCP    * 02900000
         L     @1,REIOBPTR                                        0106  02910000
*         GEN;                          /*                            * 02920000
DISABLE  EXCP  (1)                      * DISABLE THE 2955              02930000
STRTCLCK STIMER REAL,TIMEOUT,DINTVL=TIME2                               02940000
WAITDIS  WAIT  ECB=REIECB                    * WAIT FOR COMPLETION      02950000
STOPCLCK TTIMER CANCEL                                                  02960000
         DS    0H                                                       02970000
*         IF SELFPOST¬='1'B THEN GOTO BB1;                              02980000
         TM    RECB+2,B'00000001'                                 0108  02990000
         BC    12,BB1                                             0109  03000000
*         R1=IFDXXX;                                                    03010000
         L     @1,MSGPTR                                          0110  03020000
         L     @1,12(0,@1)                                        0110  03030000
*         GEN(PWTO REG=(1));                                            03040000
         PWTO REG=(1)                                                   03050000
         DS    0H                                                       03060000
*     BB1:IOB1=IOB1&&IOB1;              /* INITIALIZE IOB             * 03070000
BB1      L     @1,REIOBPTR                                        0112  03080000
         XC    0(32,@1),0(@1)                                     0112  03090000
*         FLAGS='02'X;                                                  03100000
         MVI   0(@1),X'02'                                        0113  03110000
*         RECB=0;                       /* INITIALIZE ECB             * 03120000
         MVC   RECB(4),@D1                                        0114  03130000
*         TALKECB=0;                    /* ZERO COMMUNICATIONS ECB    * 03140000
         SR    @F,@F                                              0115  03150000
         ST    @F,TALKECB                                         0115  03160000
*         R1=IFD169;                    /* POINT TO MESSAGE           * 03170000
         L     @C,MSGPTR                                          0116  03180000
         L     @1,0(0,@C)                                         0116  03190000
*         REMNOMSG='1'B;                /* REMOTE NO MESSAGE          * 03200000
         OI    A00007,B'00100000'                                 0117  03210000
*         GEN(PWTO  REG=(1));           /* ISSUE MESSAGE              * 03220000
         PWTO  REG=(1)                                                  03230000
         DS    0H                                                       03240000
*         GEN( NI    CESWTR,X'43');     /* INITIALIZE                 * 03250000
          NI    CESWTR,X'43'                                            03260000
         DS    0H                                                       03270000
*         CESWTR1='00'X;                /*          RETAIN            * 03280000
         MVI   CESWTR1,X'00'                                      0120  03290000
*         CESWTR2='00'X;                /*               SWITCHES     * 03300000
         MVI   CESWTR2,X'00'                                      0121  03310000
*         CCWWORK=CCWWORK&&CCWWORK;     /* ZERO ERP WORKAREA          * 03320000
         L     @1,REIOBPTR                                        0122  03330000
         MVC   @TEMP4(4),32(@1)                                   0122  03340000
         L     @1,@TEMP4           IOB                            0122  03350000
         XC    0(48,@1),0(@1)                                     0122  03360000
*         GEN(MVC  PRINTBUF(120),PRINTSAV);  /* RESTORE PRINT BUFFER  * 03370000
         MVC  PRINTBUF(120),PRINTSAV                                    03380000
         DS    0H                                                       03390000
*                                       /*                       M4502* 03400000
*         RETURN;                            /* RETURN TO DEVICE DEC. * 03410000
         BC    15,@EL01                                           0124  03420000
*  /******************************************************************* 03430000
*  /* STIMER EXIT ROUTINE-2 MINUTE INTERRUPT                          * 03440000
*  /******************************************************************* 03450000
*         GENERATE;                                                     03460000
TIMEOUT  STM   R14,R12,12(R13)         * SAVE CALLERS REGS              03470000
         BALR  R11,0                   * SET                            03480000
         LA    R15,TIMEOUT-IFDOLT56    *     UP                         03490000
         SR    R11,R15                 *        BASE REGISTER           03500000
         ST    R13,SAVE2+4             * SAVE @ OF CALLERS SAVEAREA     03510000
         LA    R15,SAVE2               * GET @ OF OWN SAVEAREA          03520000
         ST    R15,8(R13)              * SAVE IN CALLERS SAVEAREA       03530000
         LR    R13,R15                 * PUT IT IN SAVE REG (13)        03540000
POSTECB  POST  RECB,256                *POST 100 COMPLETION CODE        03550000
         DS    0H                                                       03560000
*         RETURN;                                                       03570000
*         END IFDOLT56;                                                 03580000
@EL01    L     @D,4(0,@D)                                         0127  03590000
         LM    @E,@C,12(@D)                                       0127  03600000
         BCR   15,@E                                              0127  03610000
@DATA1   EQU   *                                                        03620000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           03630000
@1       EQU   01                                                       03640000
@2       EQU   02                                                       03650000
@3       EQU   03                                                       03660000
@4       EQU   04                                                       03670000
@5       EQU   05                                                       03680000
@6       EQU   06                                                       03690000
@7       EQU   07                                                       03700000
@8       EQU   08                                                       03710000
@9       EQU   09                                                       03720000
@A       EQU   10                                                       03730000
@B       EQU   11                                                       03740000
@C       EQU   12                                                       03750000
@D       EQU   13                                                       03760000
@E       EQU   14                                                       03770000
@F       EQU   15                                                       03780000
@D1      DC    F'0'                                                     03790000
         DS    0F                                                       03800000
@X3      DC    X'0000F5F6'                                              03810000
         DS    0D                                                       03820000
@DATA    EQU   *                                                        03830000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   03840000
R0       EQU   00000000            FULLWORD POINTER REGISTER            03850000
R1       EQU   00000001            FULLWORD POINTER REGISTER            03860000
R2       EQU   00000002            FULLWORD POINTER REGISTER            03870000
R3       EQU   00000003            FULLWORD INTEGER REGISTER            03880000
R4       EQU   00000004            FULLWORD INTEGER REGISTER            03890000
R5       EQU   00000005            FULLWORD INTEGER REGISTER            03900000
R6       EQU   00000006            FULLWORD INTEGER REGISTER            03910000
R7       EQU   00000007            FULLWORD INTEGER REGISTER            03920000
R8       EQU   00000008            FULLWORD INTEGER REGISTER            03930000
R9       EQU   00000009            FULLWORD INTEGER REGISTER            03940000
R10      EQU   00000010            FULLWORD INTEGER REGISTER            03950000
R11      EQU   00000011            FULLWORD INTEGER REGISTER            03960000
R12      EQU   00000012            FULLWORD INTEGER REGISTER            03970000
R13      EQU   00000013            FULLWORD INTEGER REGISTER            03980000
R14      EQU   00000014            FULLWORD INTEGER REGISTER            03990000
R15      EQU   00000015            FULLWORD INTEGER REGISTER            04000000
IOB      EQU   00000000            40 BYTE(S)                           04010000
IOB1     EQU   IOB+00000000        32 BYTE(S)                           04020000
FLAGS    EQU   IOB+00000000        8 BIT(S)                             04030000
DCH      EQU   IOB+00000000        1 BIT(S)                             04040000
CCH      EQU   IOB+00000000        1 BIT(S)                             04050000
A00000   EQU   IOB+00000000        6 BIT(S)                             04060000
A00001   EQU   IOB+00000001        1 BYTE(S)                            04070000
SENSE    EQU   IOB+00000002        2 BYTE(S)                            04080000
ECBC     EQU   IOB+00000004        8 BIT(S)                             04090000
ECBA     EQU   IOB+00000005        3  BYTE  POINTER                     04100000
A00002   EQU   IOB+00000008        1 BYTE(S)                            04110000
CSW      EQU   IOB+00000009        7 BYTE(S)                            04120000
A00003   EQU   IOB+00000016        8 BIT(S)                             04130000
CPA      EQU   IOB+00000017        3  BYTE  POINTER                     04140000
A00004   EQU   IOB+00000020        8 BIT(S)                             04150000
DCBA     EQU   IOB+00000021        3  BYTE  POINTER                     04160000
A00005   EQU   IOB+00000024        8 BIT(S)                             04170000
A00006   EQU   IOB+00000025        8 BYTE(S)                            04180000
ERPWORK  EQU   IOB+00000032        4  BYTE  POINTER                     04190000
CCWWORK  EQU   00000000            48 BYTE(S)                           04200000
REIBUF   EQU   00000000            80 BYTE(S)                           04210000
REIDCB   EQU   00000000            72 BYTE(S)                           04220000
A00020   EQU   REIDCB+00000000     44 BYTE(S)                           04230000
RDCB44   EQU   REIDCB+00000044     4  BYTE  POINTER                     04240000
RDCB44C  EQU   REIDCB+00000044     1 BYTE(S)                            04250000
PRINTSAV EQU   @DATA+00000072      120 BYTE(S)                          04260000
         ORG   @DATA+00000192                                           04270000
MSGPTR   EQU   *                   FULLWORD POINTER                     04280000
         DC    VL4(IFDMSG56)                                            04290000
A00021   EQU   00000000            20 BYTE(S) ON WORD                   04300000
IFD169   EQU   A00021+00000000     FULLWORD POINTER                     04310000
IFD121   EQU   A00021+00000004     FULLWORD POINTER                     04320000
IFD167   EQU   A00021+00000008     FULLWORD POINTER                     04330000
IFDXXX   EQU   A00021+00000012     FULLWORD POINTER                     04340000
IFD137   EQU   A00021+00000016     FULLWORD POINTER                     04350000
A00022   EQU   00000000            14 BYTE(S) ON WORD                   04360000
A00023   EQU   A00022+00000000     12 BYTE(S)                           04370000
MID      EQU   A00022+00000012     2 BYTE(S)                            04380000
WKWDID   EQU   @DATA+00000196      4 BYTE(S) ON WORD                    04390000
A00024   EQU   WKWDID+00000000     2 BYTE(S)                            04400000
DUMID    EQU   WKWDID+00000002     2 BYTE(S)                            04410000
CSWSNSMS EQU   00000000            35 BYTE(S)                           04420000
A00026   EQU   CSWSNSMS+00000000   4 BYTE(S)                            04430000
A00027   EQU   CSWSNSMS+00000004   14 BYTE(S)                           04440000
MSGCSW   EQU   CSWSNSMS+00000018   14 BYTE(S)                           04450000
A00028   EQU   CSWSNSMS+00000032   5 BYTE(S)                            04460000
MSGSNS   EQU   CSWSNSMS+00000037   2 BYTE(S)                            04470000
INBUF    EQU   @DATA+00000200      18 BYTE(S)                           04480000
SNSIN    EQU   INBUF+00000000      4 BYTE(S)                            04490000
CSWIN    EQU   INBUF+00000004      14 BYTE(S)                           04500000
OUTBUFR  EQU   @DATA+00000218      9 BYTE(S)                            04510000
SNSOUT   EQU   OUTBUFR+00000000    2 BYTE(S)                            04520000
CSWOUT   EQU   OUTBUFR+00000002    7 BYTE(S)                            04530000
SAVE2    EQU   @DATA+00000228      18*FULLWORD INTEGER                  04540000
         ORG   @DATA+00000304                                           04550000
TIME2    EQU   *                   8 BYTE(S) ON DWORD                   04560000
         DC    X'F0F0F0F2F0F0F0C0'                                      04570000
         ORG   @DATA                                                    04580000
         DS    00000312C                                                04590000
@TEMPS   DS    0F                                                       04600000
@TEMP4   DC    F'0'                                                     04610000
CCWDIS   CCW   47,0,32,1                    * DISABLE                   04620000
CNVRT    DC    B'00000000'                                              04630000
         DC    AL1(2)                                                   04640000
         DC    CL2'41'                                                  04650000
         DC    A(OUTBUFR)                                               04660000
         DC    A(INBUF)                                                 04670000
         DC    AL2(9+32768)                                             04680000
RACTERM  IFDCOM                                                         04690000
A00007   EQU   CESWTR+00000000     1 BYTE(S) ON WORD                    04700000
RETAINAC EQU   A00007+00000000     1 BIT(S)                             04710000
REMERR   EQU   A00007+00000000     1 BIT(S)                             04720000
REMNOMSG EQU   A00007+00000000     1 BIT(S)                             04730000
A00008   EQU   A00007+00000000     5 BIT(S)                             04740000
SWTR1    EQU   CESWTR1+00000000    8 BIT(S) ON BYTE                     04750000
A00009   EQU   SWTR1+00000000      5 BIT(S)                             04760000
REMANS   EQU   SWTR1+00000000      1 BIT(S)                             04770000
A00010   EQU   SWTR1+00000000      2 BIT(S)                             04780000
A00011   EQU   CHASCT+00000000     40 BYTE(S) ON WORD                   04790000
A00012   EQU   A00011+00000000     9*FULLWORD INTEGER                   04800000
A00013   EQU   A00011+00000036     FULLWORD INTEGER                     04810000
A00014   EQU   A00011+00000036     2 BIT(S)                             04820000
RETSWT   EQU   A00011+00000036     1 BIT(S)                             04830000
A00015   EQU   A00011+00000036     29 BIT(S)                            04840000
RECB     EQU   REIECB+00000000     4 BYTE(S) ON WORD                    04850000
A00016   EQU   RECB+00000000       2 BYTE(S)                            04860000
A00017   EQU   RECB+00000002       1 BYTE(S)                            04870000
A00018   EQU   RECB+00000002       7 BIT(S)                             04880000
SELFPOST EQU   RECB+00000002       1 BIT(S)                             04890000
A00019   EQU   RECB+00000003       1 BYTE(S)                            04900000
PRINTBUF EQU   PRTBUFR+00000000    120 BYTE(S)                          04910000
A00025   EQU   ROPT+00000000       8 BYTE(S) ON WORD                    04920000
ROPT4    EQU   A00025+00000000     FULLWORD POINTER                     04930000
ROPT8    EQU   A00025+00000004     FULLWORD POINTER                     04940000
MODID    EQU   WKSVC+00000000      FULLWORD INTEGER                     04950000
@DATEND  EQU   *                                                        04960000
         END   IFDOLT56                                                 04970000
./  ADD  SSI=41070306,NAME=IFDOLT57
IFD57    TITLE '*** IFDOLT57 - OLTEP DISABLED INTERUPT RTN - DIE ***'   00300002
IFDOLT57 START                                                          00600002
*A-000000-999999                                                @Y02008 00900002
*C-318000,808000      VS2-2 PTM 8623                           @YM08623 01000002
*********************************************************************** 01200002
*                                                                     * 01500002
*MODULE NAME: IFDOLT57                                                * 01800002
*                                                                     * 02100002
*DESCRIPITIVE NAME: OLTEP DISABLED INTERRUPT RTN -  DIE               * 02400002
*                                                                     * 02700002
*COPYRIGHT: NONE                                                      * 03000002
*                                                                     * 03030002
*STATUS: FIRST RELEASE FOR OS-VS/2 RELEASE 2   VERSION 0              * 03600002
*                                                                     * 03900002
*FUNCTION: THIS MODULE RECIEVES CONTROL FROM IOS INTERRUPT HANDLER.   * 04200002
*      IT IS ENTERED TWICE FOR I/O OPERATIONS WITH DEVICE END POST    * 04500002
*   INVOKED, ONCE FOR NON-ENDING STATUS PCI'S, AND TWICE IF CHANNEL   * 04800002
*   END-UNIT CHECK COME IN AND DEVICE END POSTING IS ENVOKED WITH     * 05100002
*   DEVICE END SEPARATE. IT IS ENTERED AFTER CHANNEL CHECK HANDLER    * 05400002
*   PROCESSING AND AFTER UNIT CHECK IS CLEARED WITH A SENSE. IT SAVES * 05700002
*   THE CSW FROM THE IOSB AND SAVES THE SENSE INFORMATION FROM THE    * 06000002
*   ERP WORK AREA IN THE OECB-AN AREA POINTED TO BY A WORD IN OLTEP'S * 06300002
*   CONTROL BLOCK WHICH IS LOCATED BY THE IOSUSE FIELD IN THE IOSB.   * 06600002
*      IF ATTENTION HANDLING IS REQUESTED-A BIT IN THE IOSUSE CONTROL * 06900002
*   BLOCK, THE UCB BUSY BIT AND THE UCB POST BIT ARE TURNED ON TO     * 07200002
*   ALLOW ONE MORE INTERRUPT FROM THE ASSOCIATED DEVICE.              * 07500002
*      RETURN TO IOS IS ALWAYS TO REG 14 + 0.                         * 07800002
*                                                                     * 08100002
*NOTES:                                                               * 08400002
*   DEPENDENCIES- NO HARDWARE DEPENDENCIES.                           * 08700002
*               - SOFTWARE OF VS2 RELEASE 2 OR GREATER.               * 09000002
*                                                                     * 09300002
*   RESTRICTIONS- NOT COMPATIBLE FOR VS1.                             * 09600002
*                                                                     * 09900002
*   REGISTER CONVENTIONS:                                             * 10200002
*     ENTRY- ALL REGS ARE SAVED                                       * 10500002
*       REG 2 = IOSB POINTER.                                         * 10800002
*           7 = UCB POINTER.                                          * 11100002
*          13 = POINTER TO A 16 WORD SAVE AREA.                       * 11400002
*          14 = RETURN POINT TO IOS.                                  * 11700002
*     EXIT- N/A.                                                      * 12000002
*                                                                     * 12300002
*   SAVE AREA: SINCE NO EXTERNAL CALLS ARE MADE, NO SAVE AREA EXISTS. * 12600002
*                                                                     * 12900002
*   PATCH AREA LABEL: PATCH57.                                        * 13200002
*                                                                     * 13500002
*MODULE TYPE: PROCEDURE.                                              * 13800002
*                                                                     * 14100002
*   PROCESSOR: OS/VS ASSEMBLER.                                       * 14400002
*                                                                     * 14700002
*   MODULE SIZE: APPROXIMATELY 1.5K BYTES.                            * 15000002
*                                                                     * 15300002
*   ATTRIBUTES: REENTRANT,PRIVILEGED,DISABLED,KEY 0,FIXED,GLOBAL.     * 15600002
*                                                                     * 15900002
*ENTRY POINT: AT IFDOLT57.                                            * 16200002
*                                                                     * 16500002
*   PURPOSE: TO SAVE STATUS AND SENSE TO LATER BE POSTED (BY IFDOLT58)* 16800002
*     INTO THE OLT AND PERFORM THE OLT ATTENTION FUNCTION (ALLOW ONE  * 17100002
*     MORE INTERRUPT AFTER DEVICE END).                               * 17400002
*                                                                     * 17700002
*   LINKAGE: FROM IOS INTERRUPT HANDLER FOR EACH EXPECTED OLTEP DEVICE* 18000002
*     INTERRUPT.                                                      * 18300002
*                                                                     * 18600002
*INPUT: THE IOSB WHICH WAS SCHEDULED FOR THE I/O OPERATION.           * 18900002
*                                                                     * 19200002
*OUTPUT: THE STATUS,AND SENSE IF NEEDED, IS SAVED IN THE OECB-A WORK  * 19500002
*     AREA ASSOCIATED WITH THE IOSB.                                  * 19800002
*                                                                     * 20100002
*EXIT-NORMAL: BACK TO IOS ON REG 14+0.                                * 20400002
*                                                                     * 20700002
*EXIT-ABNORMAL: N/A                                                   * 21000002
*                                                                     * 21300002
*EXTERNAL REFERENCES:                                                 * 21600002
*                                                                     * 21900002
*     ROUTINES: NONE                                                  * 22200002
*                                                                     * 22500002
*     DATA AREAS: OLTEP EVENT CONTROL BLOCK (OECB).                   * 22800002
*                                                                     * 23100002
*     CONTROL BLOCK: IOSB IN SUBPOOL 245.                             * 23400002
*                                                                     * 23700002
*TABLES: NO INTERNAL TABLES.                                          * 24000002
*                                                                     * 24300002
*MACROS: NONE.                                                        * 24600002
*                                                                     * 24900002
*CHANGE ACTIVITY: BELOW.                                              * 25200002
*                                                                     * 25500002
*                                                                     * 25800002
*********************************************************************** 26100002
         EJECT                                                          26400002
         USING *,BASEREG1                                               26700002
         B     IFD57000           BRANCH AROUND POINTERS/CONSTANTS      27000002
         DC    XL4'80000000'      RETAIN/370 DEB POINTER                27300002
         DC    F'0'               INITIALING OLTEP'S TCB POINTER        27600002
         DC    A(IFD57999-IFDOLT57)    SIZE OF THIS MODULE              27900002
         DC    A(OLTDICB1-IFDOLT57)    DISPLACEMENT TO CNTRL BLK SET 1  28200002
         DC    A(OLTDICB2-IFDOLT57)    DISPLACEMENT TO CNTRL BLK SET 2  28500002
         DC    A(OLTDICB3-IFDOLT57)    DISPLACEMENT TO CNTRL BLK SET 3  28800002
         DC    F'0'               UCB BIT MASK TABLE POINTER            29100002
         DC    F'0'               RETAIN/370 UCB ADDRESS                29400002
         DC    F'0'               MEMORY ASID FOR THIS OLTEP            29500002
         DC    18F'0'             SAVE AREA FOR OLTEP SVC-59'S USE      29700002
*********************************************************************** 30000002
*                   INITIALIZATION                                    * 30300002
*********************************************************************** 30600002
         DC    C'IFDOLT57&SYSDATE'     NAME OF MOD & ASM DATE  @YM03321 30700002
         DS    0H                                              @YM03321 30800002
IFD57000 EQU   *                                                        30900002
         STM   REG0,REG15,0(SAVEREG)   SAVE REGS IN LCCA SAVE AREA      31200002
         USING IOSB,IOSBREG       ADDRESSABILITY FOR IOSB               31500002
         USING UCB,UCBREG         ADDRESSABILITY FOR THE UCB    YM08623 31800002
         EJECT                                                          32700002
*********************************************************************** 33000002
*                  MISC EQUATES                                       * 33300002
*********************************************************************** 33600002
         SPACE 3                                                        33900002
PCIBIT   EQU   X'80'              PROGRAM CNTRLD INTRUPT CSW BIT        38400002
CEBIT    EQU   X'08'              CHANNEL END CSW BIT                   38700002
DEBIT    EQU   X'04'              DEVICE END CSW BIT                    39000002
UCBIT    EQU   X'02'              UNIT CHECK CSW BIT                    39300002
ATTNBIT  EQU   X'80'              ATTENTION CSW BIT                     39600002
UEXBIT   EQU   X'01'              UNIT EXCEPTION CSW BIT                39900002
INCLHBIT EQU   X'40'              INCORRECT LENGTH CSW BIT              40200002
PGMCKBIT EQU   X'20'              PROGRAM CHECK CSW BIT                 40500002
PROTCBIT EQU   X'10'              PROTECT CHECK CSW BIT                 40800002
CHDATBIT EQU   X'08'              DATA CHECK CSW BIT                    41100002
CHCTRBIT EQU   X'04'              CONTROL CHECK CSW BIT                 41400002
IFCTRBIT EQU   X'02'              INTERFACE CHECK CSW BIT               41700002
CHCHNBIT EQU   X'01'              CHAINING CHECK CSW BIT                42000002
ALL      EQU   X'FF'              BIT MASK FOR ALL BITS                 42300002
STATCNT  EQU   6                  STATUS COUNT REGISTER                 42600002
THREE    EQU   3                  DECIMAL CONSTANT OF 3                 42900002
ERPWKPTR EQU   4                  RESISTER TO ADDRESS ERP WORK AREA     43200002
STATPTR  EQU   5                  REGISTER TO POINT TO OECB STATUS SLOT 43500002
EXECUTRG EQU   6                  REGISTER TO USE FOR EXECUTE INSTRUCTS 43800002
ONE      EQU   1                  DECIMAL CONSTANT OF 1                 44100002
EWASNS   EQU   X'20'              DISPLACEMENT TO SENSE IN ERP WORK     45400002
*                                 AREA                                  45500002
         EJECT                                                          45562002
*********************************************************************** 45564002
*                  REGISTER EQUATES                                   * 45566002
*********************************************************************** 45568002
         SPACE 2                                                        45570002
REG0     EQU   0                  NAME FOR REGISTER 0                   45572002
IOSBREG  EQU   2                  POINTER TO IOSB FOR THIS INTERRUPT    45574002
*                                  FROM IOS FOR THE IOSB DSECT          45576002
UCBREG   EQU   7                  POINTER TO UCB FOR THIS INTERRUPT     45578002
*                                  FROM IOS FOR THE UCB DSECT           45580002
WORKREG  EQU   8                  A WORKING REGISTER                    45582002
REG12    EQU 12                   NAME FOR REGISTER 12                  45584002
SAVEREG  EQU   13                 IOS SAVE AREA POINTER REG             45586002
REG14    EQU   14                 RETURN POINT TO IOS                   45588002
REG15    EQU   15                 NAME FOR REGISTER 15                  45590002
BASEREG1 EQU   15                 ENTRY POINT AND BASE REGISTER         45592002
         EJECT                                                          45600002
*   IF PCI WITHOUT ENDING STATUS DON'T SAVE THIS CSW. THE PCI EXIT    * 45900002
*     POSTS IT DIRECTLY INTO THE OLT'S TECB.                            46200002
         TM    IOSTSA,CEBIT+DEBIT+UCBIT+UEXBIT      ANY THESE BITS ON   46500002
         BNZ   IFD57010           YES-GO SAVE CSW                       46800002
         TM    IOSTSB,PCIBIT      IS PCI BIT ON                         47100002
         BNO   IFD57010           NO-GONO-GO SAVE CSW                   47400002
         TM    IOSTSB,ALL-PCIBIT  ANY BITS OTHER THAN PCI ON?           47700002
         BZ    IFD57060                NO-LET PCI EXIT POST IT IN TECB  48000002
*   THIS ROUTINE SAVES THE CSW IN THE OECB TO BE LATER POSTED.          48300002
IFD57010 EQU   *                                                        48600002
         CLI   OINCNT,THREE       IS INTERRUPT > THREE                  49200002
         BNL   IFD57060           YES-GO RESTORE THE REGS               49500002
         XR    STATCNT,STATCNT    ZERO STATUS COUNT REG                 49800002
         IC    STATCNT,OINCNT     GET COUNT OF EVENTS                   50100002
         SLL   STATCNT,THREE      ADJUST BYTE COUNT FROM # OF DOUBLE    50400002
*                                   WORDS BY MULTIPLYING BY 8           50700002
         LA    STATPTR,OCSW1      POINT TO FIRST EVENT LOCATION         51000002
         LA    STATPTR,0(STATCNT,STATPTR)   POINT TO LOCATION FOR NEXT  51300002
*                                             EVENT                     51600002
         LTR   STATCNT,STATCNT    IS EVENT COUNT ZERO                   51900002
         BZ    IFD57030           YES-GO MOVE 1ST EVENT                 52200002
         SPACE 2                                                        52500002
*   THIS POINT IS REACHED IF THIS ISN'T 1ST INTERRUPT                   52800002
         TM    IOSTSA,CEBIT       IS CHANNEL END IN THIS INTERRUPT      53100002
         BNO   IFD57050           NO-GO MOVE THIS EVENT                 53400002
         OC    OCSWSTS1(L'OCSWSTS1),IOSTATUS     YES-THIS IS OR'D       53700002
*                                   STATUS SO POST AS ONE EVENT WITH    54000002
*                                   OR'D STATUS                         54300002
         TM    OCSWSTA1,UCBIT     DID UNIT CHECK OCCUR                  54600002
         BNO   IFD57060           NO-GO RESTORE REGS AND RETURN         54900002
IFD57020 EQU   *                  MOVE THE SENSE FROM ERP WORK TO OECB  55200002
         L     ERPWKPTR,IOSERP    GET ERP WORK AREA ADDRESS             55500002
         XR    EXECUTRG,EXECUTRG  CLEAR THE EXECUTE REGISTER            55800002
         IC    EXECUTRG,OSNSCNT   GET SENSE COUNT OLT EXPECTS           56100002
         BCTR  EXECUTRG,0         SUBTRACT 1 FROM COUNT FOR MVC EXECUTE 56400002
         EX    EXECUTRG,MOVESNS   MOVE THE SENSE FROM ERP WORK AREA TO  56700002
*                                   THE OECB SENSE AREA.                57000002
         B     IFD57060           GO RESTORE REGS AND RETURN            57300002
         SPACE 3                                                        57600002
*   MOVE THE FIRST CSW TO THE OECB - OCSW1                              57900002
IFD57030 EQU   *                                                        58200002
         MVC   OCSW1(L'OCSW1),IOSCC    MOVE SIO COND CODE AND CSW TO    58500002
*                                        OECB                           58800002
         MVI   OINCNT,ONE         SET THE OINCNT EQUAL TO 1             59100002
         TM    OCSWSTA1,UCBIT     DID UNIT CHECK OCCUR                  59400002
         BNO   IFD57040           NO-GO CHECK IF ATTENTION TO BE SET    59700002
         TM    OCSWSTA1,DEBIT     YES-DID DEVICE END COME WITH IT       60000002
         BO    IFD57020           YES-EVENT DONE-GO GET SENSE-NOTE THE  60600002
*                                   ATTN=YES IS IGNORED HERE.           60900002
         TM    OCSWSTA1,CEBIT     HAS CHNL END COME IN WITH UNIT        60930002
*                                  CHECK ON 1ST INTERRUPT WITH OUT DEV  60960002
*                                  END                                  60990002
         BNO   IFD57020           NO-EVENT COMPLETE. GO SAVE SENSE      61020002
         TM    IOSOPT,IOSDEP      IS DE POSTING ACTIVE                  61050002
         BNO   IFD57020           NO-THIS ONLY ENTRY.GO SAVE SENSE      61080002
         B     IFD57060           GET SENSE ON ENTRY FOR DEV END.       61110002
*                                  SENSE NOT AVAIL NOW. GO RESTORE REGS 61140002
         SPACE 5                                                        61200002
*********************************************************************** 61500002
*                                                                     * 61800002
*   THIS ROUTINE CHECKS IF ATTENTION=YES REQUESTED. IF YES-ONE MORE   * 62100002
*     INTERRUPT IS ALLOWED AFTER THE FIRST INTERRUPT (CHANNEL END AND * 62400002
*     DEVICE END TOGETHER). THIS IS DONE BY TURNING ON THE UCB POST   * 62700002
*     AND BUSY BITS THEN RETURNING TO IOS.                            * 63000002
*                                                                     * 63300002
*********************************************************************** 63600002
IFD57040 EQU   *                                                        63900002
         TM    USEFLAGA,ATTN      IS ATTENTION REQUESTED                64200002
         BNO   IFD57060           NO-GO RESTORE REGS AND RETURN         64500002
         OI    UCBFLA,UCBBSY+UCBPST    TURN ON UCB BUSY AND POST FLAGS  64800002
*                                   FOR ATTN FUNCTION                   65100002
         NI    USEFLAGA,ALL-ATTN  TURN OFF ATTENTION BIT IN USER CB     65400002
         B     IFD57060           GO RESTORE REGS AND RETURN            65700002
         SPACE 5                                                        66000002
IFD57050 EQU   *                                                        66300002
*   THIS ROUTINE SAVES THE SECOND EVENT IN THE OECB                     66600002
         MVC   0(L'OCSW2,STATPTR),IOSCC     SAVE THIS INTERRUPT AND     66900002
*                                             SIO COND CODE             67200002
         IC    WORKREG,OINCNT     GET THE NUMBER OF EVENTS POSTED COUNT 67500002
         LA    WORKREG,ONE(WORKREG)    ADD 1 TO IT                      67800002
         STC   WORKREG,OINCNT     PUT NEW COUNT INTO OECB               68100002
         TM    IOSTSA,UCBIT       IS THERE A UNIT CHECK WITH THIS EVENT 68400002
         BO    IFD57020           YES-GO GET SENSE                      68700002
*   RESTORE IOS REGS AND RETURN TO THEM.                                69000002
IFD57060 EQU   *                                                        69300002
         LM    REG0,REG15,0(SAVEREG)   RESTORE IOS REGS                 69600002
         BR    REG14              RETURN TO IOS                         69900002
         SPACE 5                                                        70000002
*********************************************************************** 70200002
*                  EXECUTE  INSTRUCTIONS                              * 70500002
*********************************************************************** 70800002
MOVESNS  MVC   OSNS1(0),EWASNS(ERPWKPTR)    MOVE THE SENSE FROM THE     71100002
*                                             ERP WORK AREA TO THE OECB 71400002
*                                             SENSE AREA.               71700002
         EJECT                                                          72000002
*********************************************************************** 72300002
*                  CONSTANTS FOR THIS MODULE                          * 72600002
*********************************************************************** 72900002
         DS    0F                                                       73000002
OLTDICB1 DS    0CL240             OLTEP I/O CONTROL BLOCK 1             73200002
         SPACE                                                          73500002
DIESRB1  DC    XL44'0'            SRB FOR IOS TO SCHEDULE               73800002
DIEIOSB1 DC    XL108'0'           IOSB-OLTEP/IOS COMMUNICATION          74100002
DIEUSE1  DC    XL24'0'            OLTEP'S IOSB USER CNTRL BLK  @YM03321 74200002
DIEOECB1 DC    XL64'0'            OLTEP'S EVENT CONTROL BLOCK           74700002
         SPACE 5                                                        75000002
         DS    0F                                                       75100002
OLTDICB2 DS    0CL240             OLTEP I/O CONTROL BLOCK 2             75300002
         SPACE                                                          75600002
DIESRB2  DC    XL44'0'            SRB FOR IOS TO SCHEDULE               75900002
DIEIOSB2 DC    XL108'0'           IOSB-OLTEP/IOS COMMUNICATION          76200002
DIEUSE2  DC    XL24'0'            OLTEP'S IOSB USER CNTRL BLK  @YM03321 76500002
DIEOECB2 DC    XL64'0'            OLTEP'S EVENT CONTROL BLOCK           76800002
         SPACE 5                                                        77100002
         DS    0F                                                       77200002
OLTDICB3 DS    0CL240             OLTEP I/O CONTROL BLOCK 3             77400002
         SPACE                                                          77700002
DIESRB3  DC    XL44'0'            SRB FOR IOS TO SCHEDULE               78000002
DIEIOSB3 DC    XL108'0'           IOSB-OLTEP/IOS COMMUNICATION          78300002
DIEUSE3  DC    XL24'0'            OLTEP'S IOSB USER CNTRL BLK  @YM03321 78600002
DIEOECB3 DC    XL64'0'            OLTEP'S EVENT CONTROL BLOCK           78900002
         SPACE 5                                                        79000002
         IFDPATCH                                                       79100002
IFD57999 EQU   *                  END OF THIS MODULE                    79200002
         EJECT                                                          79500002
*********************************************************************** 79800002
*                   DSECTS                                            * 80100002
*********************************************************************** 80400002
         IEFUCBOB PREFIX=YES      DSECT FOR THE SYSTEM UCB              81000002
         SPACE 5                                                        81300002
         IHASRB                   DSECT FOR THE SYSTEM SRB              81600002
         SPACE 3                                                        81900002
         IECDIOSB                 DSECT FOR THE SYSTEM IOSB             82200002
         SPACE  3                                                       82500002
*  DESCT FOR OLTEP'S IOSB USER CONTROL BLOCK AND EVENT CONTROL BLOCK    82800002
         SPACE                                                          83100002
IOSUSECB EQU   *                  START OF USER CONTROL BLOCK           83400002
USERCB   DS    0CL24              START OF IOSB USER CONTROL BLOCK      83700002
OECBPTR  DS    F                  POINTER TO OLTEP EVENT CONTROL BLOCK  84000002
TECBPTR  DS    F                  OLT'S TECB POINTER FOR THIS EVENT     84300002
IODVTBPT DS    F                  POINTER TO THREE WORDS IN OLTEP       84600002
*                                  COMMON                               84700002
*                                   AREA WHICH HAVE:                    84900002
*                                       0   DEVTAB ENTRY POINTER        85200002
*                                       4   POINTER TO THIS IOSB        85500002
*                                       8   THE ECB FOR THIS EVENT      85800002
TCCWPTR  DS    F                  POINTER TO THE TCCW SYSTEM CONTROL    86100002
*                                    BLOCK FOR THE CCW TRANSLATOR       86400002
USEFLAGS DS    0F                 A WORD OF FLAGS                       86700002
USEFLAGA DS    1C                 FIRST FLAG BYTE FOR THIS CB SET       87000002
INUSE    EQU   X'80'              THIS IOSB IS IN USE                   87300002
ATTN     EQU   X'40'              ATTENTION=YES REQUEST (OFF IF DONE)   87600002
VIRTCCW  EQU   X'20'              THE CCW'S ARE IN VIRTUAL              87900002
OLDTECB  EQU   X'10'              OLD TECB TO BE POSTED                 88200002
INTRNLCB EQU   X'08'              REQUEST IS INTERNAL (LINE CONNECT,DP) 88500002
PURGED   EQU   X'04'              THIS I/O EVENT IS PURGED              88800002
USEFLAGB DS    1C                 UNUSED                                89100002
USEFLAGC DS    1C                 UNUSED                                89400002
USEFLAGD DS    1C                 UNUSED                                89700002
USERSVD  DS    F                  RESERVED FOR FUTURE                   89800002
         SPACE                                                          90000002
OECB     DS    0CL64              START OF OLTEP'S EVENT CONTROL BLOCK  90300002
OSNSCNT  DS    CL1                OLT'S SENSE BYTES REQUESTED COUNT     90600002
OINCNT   DS    CL1                NUMBER OF INTERRUPTS IN OECB          90900002
UNUSED   DS    CL2                NOT USED                              91200002
OCSW1    DS    0CL8               FIRST INTERRUPT POSTED IN OECB        91500002
OCSWCC1  DS    CL1                IOS SIO CONDITION CODE                91800002
OCSWCMD1 DS    CL3                CSW COMMAND ADDRESS                   92100002
OCSWSTS1 DS    0CL2               CSW1 STATUS BYTES                     92400002
OCSWSTA1 DS    CL1                CSW1 STATUS BYTE A                    92700002
OCSWSTB1 DS    CL1                CSW1 STATUS BYTE B                    93000002
OCSWBYT1 DS    CL2                CSW1 RESIDUAL BYTE COUNT              93300002
OCSW2    DS    0CL8               SECOND INTERRUPT POSTED IN OECB       93600002
OCSWCC2  DS    CL1                IOS SIO CONDITION CODE                93900002
OCSWCMD2 DS    CL3                CSW COMMAND ADDRESS                   94200002
OCSWSTS2 DS    0CL2               CSW2 STATUS BYTES                     94500002
OCSWSTA2 DS    CL1                CSW2 STATUS BYTESA                    94800002
OCSWSTB2 DS    CL1                CSW2 STATUS BYTESB                    95100002
OCSWBYT2 DS    CL2                CSW2 RESIDUAL BYTE COUNT              95400002
OCSW3    DS    0CL8               THIRD INTERRUPT POSTED IN OECB        95700002
OCSWCC3  DS    CL1                IOS SIO CONDITION CODE                96000002
OCSWCMD3 DS    CL3                CSW COMMAND ADDRESS                   96300002
OCSWSTS3 DS    0CL2               CSW3 STATUS BYTES                     96600002
OCSWSTA3 DS    CL1                CSW3 STATUS BYTESA                    96900002
OCSWSTB3 DS    CL1                CSW3 STATUS BYTESB                    97200002
OCSWBYT3 DS    CL2                CSW3 RESIDUAL BYTE COUNT              97500002
OSNS1    DS    CL36               SENSE SAVE AREA FOR UNIT CHECK ON     97800002
*                                   THIS REQUEST                        98100002
         END                                                            98400002
./  ADD  SSI=71110002,NAME=IFDOLT58
IFD58    TITLE '*** IFDOLT58 - OLTEP NORMAL/ABNORMAL/PCI EXIT-NAPA ***' 00100002
IFDOLT58 START                                                          00200002
*A-000000-999999                                                @Y02008 00300002
*********************************************************************** 00400002
*                                                                     * 00500002
*MODULE NAME: IFDOLT58                                                * 00600002
*                                                                     * 00700002
*DESCRIPTIVE NAME: OLTEP NORMAL/ABNORMAL/PCI EXITS - NAPA             * 00800002
*                                                                     * 00900002
*COPYRIGHT: NONE                                                      * 01000002
*                                                                     * 01100002
*STATUS: OS-VS/2 RELEASE 2 VERSION 0                                    01200002
*                                                                     * 01300002
*FUNCTION: THIS MODULE RECIEVES CONTROL FROM THE POST STATUS ROUTINE  * 01400002
*   OF IOS. IT HAS THREE ENTRY POINTS AS FOLLOWS:                     * 01500002
*              1. NORMAL EXIT                                         * 01600002
*              2. ABNORMAL EXIT                                       * 01700002
*              3. PCI EXIT                                            * 01800002
*   1. THE NORMAL EXIT RECIEVES CONTROL WHENEVER CHANNEL END, UNIT    * 01900002
*    EXCEPTION WITH OR WITHOUT A CHANNEL END, OR WHEN CHANNEL END     * 02000002
*    WITH WRONG LENGTH RECORD OCCURS WITHOUT ANY OTHER ABNORMAL STATUS* 02100002
*    CONDITIONS (DEVICE END,PCI,AND ATTN MAY BE PRESENT). THE IOSEX   * 02200002
*    (PRESENT WHEN UNIT EXCEPTION OR WRONG LENGTH RECORD EXISTS) IS   * 02300002
*    TURNED OFF AND THE MAIN MODULE FLOW IS ENTERED (SEE 'MAIN FLOW'  * 02400002
*    BELOW).                                                          * 02500002
*   2. THE ABNARMAL EXIT IS ENTERED WHEN UNIT CHECK, CHANNEL PROGRAM  * 02600002
*    CHECK, PROTECTION CHECK, CHANNEL DATA CHECK, CHANNEL CONTROL     * 02700002
*    CHECK, INTERFACE CONTROL CHECK, CHAINING CHECK, EXTENT VIOLATION * 02800002
*    AND INTERCEPT CONDITION. THE IOSEX IN THE IOSB IS ALWAYS ON WHEN * 02900002
*    THIS EXIT IS ENTERED.                                            * 03000002
*      THIS ROUTINE FOR OLTEP FIRST CHECKS THE 'ENTRYLST' BIT @YM03321* 03100002
*    IN USEFLAGA. ITS BEING ON INDICATES THAT MORE THAN ONE   @YM03321* 03150002
*    ENTRY HAS BEEN MADE TO THE ABNORMAL EXIT. SINCE THE FIRST@YM03321* 03200002
*    ENTRY PERFORMS ALL THE NECESSARY FUNCTIONS, THE ABNORMAL @YM03321* 03250002
*    EXIT ONLY RETURNS TO IOS IF THE BIT IS FOUND ON.  THIS   @YM03321* 03300002
*    BIT IS SET ON FOR THE FIRST ENTRY.                       @YM03321* 03350002
*   3. THE PCI EXIT IS ENTERED FROM IOS FOR ALL NON-ENDING STATUS     * 03600002
*    PCI'S. IOS USES AN IOS-GENERATED SRB/IOSB TO SCHEDULE THE PCI    * 03700002
*    EXIT.INFORMATION NOT COPIED INTO THE IOS GENERATED SRB/IOSB      * 03800002
*    CAN BE ACCESSED IN THE ENDING STATUS SRB/IOSB POINTED TO BY      * 03900002
*    IOSPCHN. AN IOS GENERATED SRB/IOSB CAN BE IDENTIFIED BY A X'04'  * 04000002
*    IN IOSPROC IN THE IOSB.                                          * 04100002
*      ENTRY TO THE PCI EXIT CAUSES THE PCIIND IN OLTEP'S DEVTAB TO   * 04200002
*    BE SET TO 1 AND THE CSW POINTER TO POINT TO THE CSW IN THE PASSED* 04300002
*    IOSB. THE CSW COUNTER IS SET TO 1 AND THE PCIENTRY SWITCH IS SET * 04400002
*    TO 1. THE MAIN FLOW IS THEN ENTERED AT THE TEST TO CHECK IF THE  * 04500002
*    OLT'S TECB IS OLD OR NEW.                                        * 04600002
*   MAIN FLOW:                                                        * 04700002
*      POINTERS ARE SET UP FOR THE CSW'S IN THE OECB,THE OLT'S TECB,  * 04800002
*    AND THE IODEVTAB FOR THIS REQUEST. THE CSW (EVENT) COUNTS ARE    * 04900002
*    GOTTEN FROM THE OECB AND THE TECB. NEXT A CHECK IS MADE IF THE   * 05000002
*    CCW'S ARE VIRTUAL. IF SO THE CSW COMMAND ADDRESSES ARE TRANSLATED* 05100002
*    BY THE CCW TRANSLATOR TO THE ASSOCIATED VIRTUAL ADDRESS. NEXT    * 05200002
*    THE CSW'S ARE MOVED TO THEIR RESPECTIVE SLOTS IN THE TECB. IF    * 05300002
*    A UNIT CHECK IS NOTED,THE SENSE IS ALSO MOVED. THE ECB IS        * 05400002
*    INSPECTED AND SYSTEM POSTED IF IT BEING WAITED ON; ELSE IT IS    * 05500002
*    PSEUDO-POSTED SO WAITIO WON'T WAIT ON IT LATER. IF THE CCW'S WERE* 05600002
*    VIRTUAL THE CCW TRANSLATOR IS ENTERED TO FREE ASSOCIATED STORAGE * 05700002
*    AREAS. NEXT THE CONTROL BLOCKS OBTAINED FOR THE CCW TRANSLATOR   * 05800002
*    ARE FREED.                                                       * 05900002
*                                                                     * 06000002
*NOTES: SEE BELOW                                                     * 06100002
*                                                                     * 06200002
*  DEPENDENCIES: THIS MODULE HAS NO HARDWARE DEPENDENCIES.            * 06300002
*                                                                     * 06400002
*  RESTRICTIONS: NOT COMPATABLE FOR VS/1                              * 06500002
*                                                                     * 06600002
*  REGISTER CONVENTIONS:                                              * 06700002
*    ENTRY- ALL REGS ARE SAVED UPON ENTRY                             * 06800002
*      REG  1 = IOSB POINTER                                          * 06900002
*          13 = LOCAL LOCK SAVE AREA PTR                              * 07000002
*          14 = IOS RETURN POINT                                      * 07100002
*          15 = ENTRY POINT OF EXIT ROUTINE                           * 07200002
*                                                                     * 07300002
*    EXIT- N/A                                                        * 07400002
*                                                                     * 07500002
*    SEE REGISTER EQUATES FOR SYMBOLS OF REGISTERS USED IN THIS       * 07600002
*    MODULE.                                                          * 07700002
*                                                                     * 07800002
*  PATCH-LABEL: PATCH58                                               * 07900002
*                                                                     * 08000002
*MODULE TYPE: PROCEDURE                                               * 08100002
*                                                                     * 08200002
*  PROCESSOR: OS/VS ASSEMBLER                                         * 08300002
*                                                                     * 08400002
*  MODULE SIZE: APPROXIMATELY 2K                                      * 08500002
*                                                                     * 08600002
*  ATTRIBUTES: REENTRANT,PRIVILEGED,ENABLED,KEY 0,PAGEABLE,LOCAL      * 08700002
*                                                                     * 08800002
*ENTRY POINTS:                                                        * 08900002
*                                                                     * 09000002
*  NORMAL EXIT:                                                       * 09100002
*                                                                     * 09200002
*     PURPOSE: TO POST STATUS FROM NON-ERROR I/O EVENTS. UNIT EXCEP-  * 09300002
*       TION AND INCORRECT LENGTH INDICATION COULD BE ON. IOSEX TURNED* 09400002
*       OFF SO ABNORMAL EXIT DOES NOT GET CONTROL ON THESE CONDITIONS.* 09500002
*       ALSO POSTS EVENT COMPLETE FOR OLTEP WAITIO FUNCTIONS,         * 09600002
*                                                                     * 09700002
*     LINKAGE: BRANCH AND LINK FROM IOS POST STATUS.                  * 09800002
*                                                                     * 09900002
*  ABNORMAL EXIT:                                                     * 10000002
*                                                                     * 10100002
*     PURPOSE: TO POST STATUS FROM ERROR TYPE I/O EVENTS. ERP'S ARE   * 10200002
*       INHIBITED. ALSO POSTS EVENT COMPLETE FOR OLTEP WAITIO FUNCTION* 10300002
*                                                                     * 10400002
*     LINKAGE: BRANCH AND LINK FROM IOS POST STATUS.                  * 10500002
*                                                                     * 10600002
*  PCI EXIT:                                                          * 10700002
*                                                                     * 10800002
*     PURPOSE: TO POST THE STATUS FROM PCI INTERRUPTS AS THEY ARE     * 10900002
*       SCHEDULED BY IOS POST STATUS. THESE INTERRUPTS ARE NOT ACCUM- * 11000002
*       ULATED BY THE DIE. THIS EXIT ONLY GETS CONTROL FOR NON-ENDING * 11100002
*       STATUS PCI INTERRUPTS. DOES NOT POST EVENT COMPLETE FOR OLTEP.* 11200002
*                                                                     * 11300002
*      LINKAGE:                                                       * 11400002
*       BRANCH AND LINK FROM IOS POST STATUS.                         * 11500002
*                                                                     * 11600002
*INPUT: THE IOSB WHICH CONTAINS THE STATUS INFORMATION OF THE EVENT,  * 11700002
*       THE OLTEP USER CONTROL BLOCK, EVENT CONTROL BLOCK, AND DEVTAB * 11800002
*       ENTRY ASSOCIATED WITH THIS EVENT. THE OLT'S TECB FOR THIS REQ-* 11900002
*       UEST.                                                         * 12000002
*                                                                     * 12100002
*OUTPUT: THE ECB IS POSTED IF APPLICABLE AND THE STATUS IS POSTED INTO* 12200002
*        THE OLT'S TECB. THE TCCW LIST AND ASSOCIATED CONTROL BLOCKS  * 12300002
*        ARE FREED AS ARE THE OLT'S CCW'S AND ASSOCIATED DATA AREAS   * 12400002
*        IF THE EVENT IS COMPLETE AND OLTEP'S RUNNING VIRTUAL.        * 12500002
*                                                                     * 12600002
*EXIT-NORMAL: TO IOS VIA REG 14 + 0.                                  * 12700002
*                                                                     * 12800002
*EXIT-ABNORMAL: N/A                                                   * 12900002
*                                                                     * 13000002
*EXTERNAL REFERENCES:                                                 * 13100002
*                                                                     * 13200002
*  ROUTINES: CCW TRANSLATOR OF IOS                                    * 13300002
*            POST                                                     * 13400002
*            FREEMAIN                                                 * 13500002
*                                                                     * 13600002
*  DATA AREAS: OLTEP EVENT CONTROL BLOCK - OECB                       * 13700002
*              OLT'S TEST EVENT CONTROL BLOCK - TECB                  * 13800002
*              OLTEP DEVICE TABLE ENTRY - DEVTAB                      * 13900002
*                                                                     * 14000002
*  CONTROL-BLOCKS: OLTEP USER CONTROL BLOCK                           * 14100002
*                  IOSB                                               * 14200002
*                  TECB                                               * 14300002
*                  OECB                                               * 14400002
*                  ECB                                                * 14500002
*                                                                     * 14600002
*TABLES: NO INTERNAL TABLES.                                          * 14700002
*                                                                     * 14800002
*MACROS: FREEMAIN                                                     * 14900002
*        POST                                                         * 15000002
*                                                                     * 15100002
*CHANGE ACTIVITY: SEE BELOW.                                          * 15200002
*                                                                     * 15300002
*                                                                     * 15400002
*                                                                     * 15500002
*                                                                     * 15600002
*                                                                     * 15700002
*********************************************************************** 15800002
         EJECT                                                          15900002
*********************************************************************** 16000002
*                  REGISTER EQUATES                                   * 16100002
*********************************************************************** 16200002
         SPACE 2                                                        16300002
BASEREG  EQU   12                 CSECT BASE REGISTER                   16400002
IOSBREG  EQU   1                  IOSB POINTER FROM IOS POST STATUS     16500002
LINKREG1 EQU   2                  INTERNAL ROUTINE LINKAGE REG 1        16600002
ENTRYREG EQU   15                 REG 15 HAS ENTRY POINT ADDRESS OF     16700002
*                                  SPECIFIC EXIT FROM IOS               16800002
REG14    EQU   14                 NAME FOR REG 14                       16900002
REG12    EQU   12                 NAME FOR REG 12                       17000002
SAVEREG  EQU   13                 NAME FOR REG 13-SAVE AREA POINTER     17100002
TECBREG  EQU   4                  REG TO REFERENCE IODEBTAB IN OLTEP    17200002
IODEVREG EQU   5                  REG TO REFERENCE DEVTAB IN OLTEP      17300002
DEVTABRG EQU   6                  REG TO REFERENCE TECB IN OLT          17400002
WORKREG1 EQU   11                 A GENERAL WORKING REGISTER            17500002
CSWPTREG EQU   10                 REG THAT POINTS TO CSW TO MOVE        17600002
CSWINREG EQU   9                  OECB CSW COUNTER REG                  17700002
PCIOSBRG EQU   8                  REG USED TO HOLD ADDRESS OF PSEUDO    17800002
*                                  IOSB CREATED BY IOS FOR PCI          17900002
REG15    EQU   15                 AN EQUATE FOR REGISTER 15             18000002
REG1     EQU   1                  AN EQUATE FOR REGISTER 1              18100002
ECBPTR   EQU   11                 REG TO POINT TO ECB TO POST           18200002
REG10    EQU   10                 NAME FOR REGISTER 10                  18230002
WORKREG2 EQU   9                  GENERAL WORKING REGISTER NO. 2        18260002
TECBEVNT EQU   3                  REG POINTS TO EVENT AREA IN OLT TECB  18300002
TECBSNS  EQU   3                  REG POINTS TO SENSE AREA IN OLT TECB  18400002
REG0     EQU   0                  NAME FOR REG 0                        18500002
FMSAVREG EQU   3                  SAVE REG FOR CONTROL BLOCK FREE MAINS 18600002
ASCBPTR  EQU   7                  REG 7 POINTS TO ASCB FOR FREEMAIN     18630002
TCBPTR   EQU   4                  REG 4 POINTS TO TCB FOR FREEMAIN      18660002
UCBPTR   EQU   7                                               @ZA04290 18680004
         EJECT                                                          18700002
*********************************************************************** 18800002
*                  MISC EQUATES                                       * 18900002
*********************************************************************** 19000002
         SPACE 2                                                        19100002
ONE      EQU   1                  EQUATE FOR A NUMBER 1                 19200002
CSWSTSA  EQU   4                  DISPLACEMENT INTO CSW FOR STATUS A    19300002
CSWSTSB  EQU   5                  DISPLACEMENT INTO CSW FOR STATUS B    19400002
ONLYCCON EQU   X'30'              VALUE TO AND SIO CC TO LEAVE ONLY     19500002
*                                  CONDITION CODE BITS ON               19600002
ZERO     EQU   X'00'              VALUE FOR HEX 0                       19700002
FULL     EQU   X'FF'              VALUE FOR HEX FF (255)                19800002
EBCDZERO EQU   X'F0'              VALUE FOR HEX F0 (EBCDIC 0)           19900002
EVNTCODE EQU   X'FF'              VALUE FOR HEX FF - AN EVENT FLAG      20000002
WAIT     EQU   X'80'              WAIT BIT IN ECB BYTE 0                20100002
POSTBIT  EQU   X'40'              POSTED BIT IN ECB BYTE 0              20200002
ATTNBIT  EQU   X'80'              ATTENTION CSW BIT                     20400002
CEBIT    EQU   X'08'              CHANNEL END CSW BIT                   20500002
DEBIT    EQU   X'04'              DEVICE END CSW BIT                    20600002
UCBIT    EQU   X'02'              UNIT CHECK CSW BIT                    20700002
UEXBIT   EQU   X'01'              UNIT EXCEPTION CSW BIT                20800002
PCIBIT   EQU   X'80'              PROGRAM CNTRLD INTRUPT CSW BIT        20900002
INCLHBIT EQU   X'40'              INCORRECT LENGTH CSW BIT              21000002
PGMCKBIT EQU   X'20'              PROGRAM CHECK CSW BIT                 21100002
PROTCBIT EQU   X'10'              PROTECT CHECK CSW BIT                 21200002
CHDATBIT EQU   X'08'              DATA CHECK CSW BIT                    21300002
CHCTRBIT EQU   X'04'              CONTROL CHECK CSW BIT                 21400002
IFCTRBIT EQU   X'02'              INTERFACE CHECK CSW BIT               21500002
CHCHNBIT EQU   X'01'              CHAINING CHECK CSW BIT                21600002
ALL      EQU   X'FF'              SYMBOL FOR ALL BITS OF A BYTE         21700002
CVTPTR4C EQU   X'4C'              LOW STORAGE ADDRESS OF THE CVT PTR    21800002
HEX04    EQU   4                                               @ZA04290 21840004
CSWCMDAD EQU   1                  DISPLACEMENT INTO CSW FOR COMMAND ADR 21900002
CURNTTCB EQU   4                  TCB LIST DISPLACEMENT FOR CURRENT TCB 21920002
CURNASCB EQU   12                 DISPLACEMENT INTO TCB LIST FOR        21940002
*                                  CURRENT ASCB                         21960002
         EJECT                                                          22000002
*********************************************************************** 22100002
*                   INITIALIZATION                                    * 22200002
*********************************************************************** 22300002
         USING *,BASEREG          ESTABLISH CSECT ADDRESSABILITY        22400002
         B     IFDPC000-IFDOLT58(ENTRYREG)  ENTRY POINT FOR PCI EXIT    22500002
         DC    A(IFDNR000)        ADDRESS OF THE NORMAL EXIT ENTRY PT   22600002
         DC    A(IFDAB000)        ADDRESS OF THE ABNORMAL EXIT ENTRY PT 22700002
         DC    C'IFDOLT58&SYSDATE'          NAME OF MOD AND ASM DATE    22800002
         DS    0H                                                       22820002
IFDPC000 EQU   *                                                        22840002
         STM   REG14,REG12,12(SAVEREG) SAVE IOS REGS FOR THIS ENTRY     22860002
         LR    BASEREG,ENTRYREG   SET UP ADDRESSABILITY FOR PCI ENTRY   22900002
         B     IFDPC010           GO TO THE PCI EXIT ROUTINE            23000002
         USING DEVTABMP,DEVTABRG  SET UP ADDRESSABILITY TO DEVTAB       23100002
         USING IOSB,IOSBREG       SET UP ADDRESSABILITY TO THE IOSB     23200002
         USING TECB,TECBREG       SET UP ADDRESSABILITY TO THE OLT TECB 23300002
         USING IODEVTAB,IODEVREG  SET UP ADDRESSABILITY TO THE IODEVTAB 23400002
         SPACE 5                                                        23500002
*********************************************************************** 23600002
*   THE FOLLOWING CODE IS THE ENTRY POINTS FOR THE NORMAL AND ABNORMAL* 23700002
* EXITS. IT SET UP THE CSECT BASE REGISTER VALUE THEN BRANCHES TO THE * 23800002
* APPROPRIATE ROUTINE.                                                * 23900002
*********************************************************************** 24000002
         SPACE                                                          24100002
IFDNR000 EQU   *                  NORMAL EXIT ENTRY POINT               24200002
         STM   REG14,REG12,12(SAVEREG) SAVE IOS REGS FOR THIS ENTRY     24300002
         L     BASEREG,IFDENTRY-IFDNR000(ENTRYREG)    SET UP CSECT      24400002
*                                 ENTRY ADDRESS                         24450002
         B     IFDNR010           GO TO THE NORMAL EXIT ROUTINE         24500002
         SPACE 3                                                        24600002
IFDAB000 EQU   *                  ABNORMAL ENTRY POINT                  24700002
         STM   REG14,REG12,12(SAVEREG) SAVE IOS REGS FOR THIS ENTRY     24800002
         L     BASEREG,IFDENTRY-IFDAB000(ENTRYREG)    SET UP CSECT      24900002
*                                 ENTRY ADDRESS                         24950002
         B     IFDAB010           GO TO THE ABNORMAL EXIT ROUTINE       25000002
IFDENTRY DC    A(IFDOLT58)        VALUE FOR CSECT ADDRESSABILITY        25100002
         EJECT                                                          25200002
IFDPC010 EQU   *                  START OF PCI ENTRY PROCESSING         25300002
         TM    IOSPROC,IOSAPCI    IS THIS AN IOS GEND PCI IOSB          25400002
         BNO   IFDCO170           NO-GO RETURN-NRM/ABN WILL HANDLE      25500002
         LR    PCIOSBRG,IOSBREG   YES-SAVE THIS IOSB ADDRESS            25600002
         L     IOSBREG,IOSPCHN    GET REAL IOSB ADDRESS                 25700002
         SPACE 2                                                        25800002
IFDPC020 EQU   *                                                        25900002
         LM    TECBREG,IODEVREG,TECBPTR     GET TECB AND IODEVTAB PTRS  26000002
         L     DEVTABRG,IODEVPTR  GET OLTEP COMMON DEVTAB ENTRY PTR     26100002
         OI    DEVFLAG2,PCIIND    SET PCI SW ON IN DEVTAB               26200002
*                                                                       26300002
         LA    CSWPTREG,IOSCC-IOSB(PCIOSBRG) POINT TO STATUS IN PCI     26400002
*                                              IOSB                     26500002
         OI    USEFLAGA,PCIENTRY  TURN PCI ENTRY SW ON IN IOSUSECB      26600002
         B     IFDCO010           GO INTO COMMON PROCESSING CODE        26700002
         SPACE 5                                                        26800002
IFDNR010 EQU   *                                                        26900002
         NI    IOSFLA,ALL-IOSEX   TURN OFF EXCEPTIONAL CONDITION FLAG   27000002
         B     IFDCO000           GO TO COMMON PROCESS CODE             27100002
         SPACE 5                                                        27200002
IFDAB010 EQU   *                                                        27300002
         TM    USEFLAGA,ENTRYLST  HAS 1ST ENTRY TAKEN PLACE    @YM03321 27400002
         BO    IFDCO170           YES-GO RESTORE REGS & RETURN @YM03321 27450002
         OI    USEFLAGA,ENTRYLST  SET FIRST ENTRY SWITCH ON    @YM03321 27500002
         SPACE 5                                                        27700002
*********************************************************************** 27800002
*                                                                     * 27900002
*   THIS IS THE BEGINNING OF THE COMMON PROCESSING ROUTINE            * 28000002
*                                                                     * 28100002
*********************************************************************** 28200002
IFDCO000 EQU   *                                                        28300002
         LM    TECBREG,IODEVREG,TECBPTR     GET TECB AND IODEVTAB PTRS  28400002
         L     DEVTABRG,IODEVPTR  GET OLTEP COMMON DEVTAB ENTRY PTR     28500002
         TM    DEVFLAG3,WAITPOST  IS WAITIO 'POLL' FUNCTION POSTING THE 28501002
*                                  TECB                                 28502002
         BO    IFDCO170           GO RESTORE IOS REGS AND RETURN TO IOS 28503002
*                                  WAITIO WILL LINK TO SVC-59 TO LINK   28504002
*                                  TO IOS CCW TRANSLATOR AND FREE CCWS  28505002
*                                  AND FIXED STORAGE.ALSO TO FREE       28506002
*                                  STORAGE USED FOR XLATOR CTRL BLKS.   28507002
         TM    IOSCC,IOSCC3       IS ENTRY FOR SIO CC=3                 28510002
         BNO   IFDCO005           NO-GO SET UP NORMALLY                 28520002
         LA    CSWPTREG,IOSCC     CC=3-SO POINT TO CSW IN IOSB          28530002
         LA    CSWINREG,ONE       SET CSW COUNTER REG = 1               28540002
         B     IFDCO010           GO PROCESS IT                         28550002
IFDCO005 EQU   *                                                        28560002
         LA    CSWPTREG,OCSW1     GET ADDRESS OF 1ST CSW IN OECB        28600002
         SR    CSWINREG,CSWINREG  ZERO CSW IN COUNTER REG               28700002
         ICM   CSWINREG,1,OINCNT  GET INTERRUPT COUNT          @ZA02756 28800004
         BZ    IFDCO180           RETRY IF ZERO                @ZA02795 28850004
         SPACE 2                                                        28900002
IFDCO010 EQU   *                                                        29000002
         TM    USEFLAGA,VIRTCCW   ARE THE CCW'S VIRTUAL                 29100002
         BNO   IFDCO030           NO- SKIP RE-TRANSLATION VIRTUAL->REAL 29200002
         SR    REG0,REG0          ZERO REG0                             29300002
         ICM   REG0,B'0111',CSWCMDAD(CSWPTREG)   GET CSW COMMAND ADDR   29400002
         LTR   REG0,REG0          IS CSW COMMAND ADDR = 0               29500002
         BZ    IFDCO030           YES- BYPASS CCW TRANSLATOR            29600002
         TM    CSWSTSB(CSWPTREG),CHCTRBIT+IFCTRBIT    ARE EITHER CHAN-  29700002
*                                  NEL OR INTERFACE CONTROL CHECKS ON   29800002
         BNZ   IFDCO030           YES-DON'T RETRANSLATE CSW COMMAND     29900002
*                                  ADDRESS-IT'S PROBABLY INVALID        30000002
         BCTR  REG0,0             SUBTRACT 1 FROM CSW COMMAND ADDRESS   30100002
*                                  TO INSURE IT'S WITHIN A PAGE BOUNDRY 30200002
         LR    WORKREG1,IOSBREG   SAVE POINTER TO OLTEP'S IOSB          30300002
         USING CVTMAP,REG15       SET UP ADDRESSABILITY TO CVT @YM03321 30400002
         L     REG15,CVTPTR4C     GET CVT ADDR FROM LOW STOR   @YM03321 30406002
*                                  X'4C'                       @YM03321 30412002
         L     REG15,CVTPTRV      GET ADDR OF SYSTEM REAL TO   @YM03321 30418002
*                                  VIRTUAL STORAGE TRANSLATOR  @YM03321 30424002
         LR    REG1,REG0          PUT REAL CCW ADDR FROM CSW   @YM03321 30430002
*                                  INTO REG1 FOR SYS XLATOR    @YM03321 30436002
         BALR  REG14,REG15        GO GET CORRESPONDING VIRTUAL @YM03321 30442002
*                                  ADDR FOR THE COPIED CHANNEL @YM03321 30448002
*                                   PROGRAM                    @YM03321 30454002
         LR    REG0,REG1          PUT THE RETURNED VIRTUAL CCW @YM03321 30460002
*                                  ADDR INTO REG0 FOR IOS CCW  @YM03321 30466002
*                                  TRANSLATOR                  @YM03321 30472002
         L     REG1,TCCWPTR-IOSB(WORKREG1)  GET THE TCCW ADDR  @YM03321 30478002
*                                  FOR THIS REQUEST FOR THE    @YM03321 30484002
*                                  IOS CCW TRANSLATOR          @YM03321 30500002
         DROP  IOSBREG            RELEASE IOSBREG (REG1)                30550002
         USING TCCW,REG1          SET UP ADDRESSABILITY TO TCCW         30600002
         MVI   TCCWOPTN,TCCWCSWX  SET TCCW OPTIONS FLAG TO RETRANSLATE  30700002
*                                  ADDRESS IN REG0                      30800002
         DROP  REG1                                                     30900002
         L     REG15,CVTPTR4C     GET CVT ADDRESS FROM LOW STORAGE X'4C 31000002
         L     REG15,CVTIXAVL     GET IOCOMMON AREA ADDRESS             31200002
         DROP  REG15              RELEASE REG15                         31300002
         USING IOCOM,REG15        SET UP ADDRESSABILITY TO I/O COMMON   31400002
         L     REG15,IOCTCCW      GET ADDRESS OF CCW TRANSLATOR RTN     31500002
         DROP  REG15              RELEASE REG 15                        31600002
         SPACE 2                                                        31700002
         BALR  REG14,REG15        GO TO CCW TRANSLATOR                  31800002
         LTR   REG15,REG15        IS RETURN CODE ZERO(CSWCMDAD VALID)   31900002
         BNZ   IFDCO020           NO-LEAVE CSW CMD ADDR 'REAL'          32000002
         LA    REG15,ONE          ADD ONE TO CSW COMMAND ADDRESS TO     32100002
         AR    REG0,REG15          RESTORE CORRECT VALUE (DECREMENTED   32200002
*                                  BEFORE FOR PAGE BOUNDARY ALIGNMENT)  32300002
         STCM  REG0,B'0111',CSWCMDAD(CSWPTREG)   PUT VIRTUAL COMMAND AD 32400002
*                                  INTO CSW FOR OLT                     32500002
         USING IOSB,IOSBREG       REESTABLISH IOSB ADDRESSABILITY       32600002
IFDCO020 EQU   *                                                        32700002
         LR    IOSBREG,WORKREG1   RESTORE OLTEP'S IOSB POINTER          32800002
IFDCO030 EQU   *                                                        32900002
         NI    0(CSWPTREG),ONLYCCON    TURN OFF ALL BUT SIO CC BITS     33000002
IFDCO035 ICM   WORKREG1,B'0001',IOSCKEY  GET OLTEPS PROTECT KEY         33030037
         SPKA  0(WORKREG1)        SET MY PSW TO THAT KEY                33060002
         TM    USEFLAGA,OLDTECB   IS THIS AN OLD TECB                   33100002
         BNO   IFDCO040           NO-GO MOVE STATUS INTO NEW TECB       33200002
         OC    OTECBCC,0(CSWPTREG)     MOVE SIO CC TO OLT TECB          33300002
         MVC   OTECBCOD+2(L'IOSCOD),IOSCOD  MOVE COMPLETION CODE TO OLD 33330002
*                                  TECB FROM IOSB                       33360002
         MVC   OTECBCSW,CSWCMDAD(CSWPTREG)  MOVE CSW TO OLT TECB        33400002
         B     IFDCO090           GO CHECK FOR UNIT CHECK               33500002
         SPACE 2                                                        33800002
IFDCO040 EQU   *                  NEW TECB HANDLING OF STATUS           33900002
         CLI   TECBFDCT,ZERO      ARE THERE ANY EVENT FIELDS IN TECB    34000002
         BE    IFDCO050           NO-GO UPDATE EVENT COUNTER            34100002
         CLC   TECBFDCT,TECBEVOC  IS FIELDS AVAILABLE =< NUMBER POSTED  34200002
*                                                                       34300002
         BNH   IFDCO050           YES-GO UPDATE EVENT COUNTER ONLY      34400002
         SR    WORKREG1,WORKREG1  ZERO WORKREG1                         34500002
         IC    WORKREG1,TECBEVOC  GET NUMBER OF EVENTS POSTED COUNT     34600002
         SR    REG15,REG15        ZERO REG 15                           34700002
         IC    REG15,TECBFDLN     GET EVENT FIELD LENGTH                34800002
         MR    REG14,WORKREG1     GET DISPLACEMENT TO NEXT AVAILABLE    34900002
*                                  EVENT FIELD                          35000002
         LA    TECBEVNT,TECBDATA-TECB(REG15,TECBREG)  GET ADDRESS OF    35100002
*                            EVENT FIELD TO POST                        35200002
         USING EVENTMAP,TECBEVNT  SET ADDRESSABILITY TO EVENT FIELD     35300002
         PACK  SIOCC(ONE),0(ONE,CSWPTREG)      MOVE SIO CONDITION CODE  35400002
*                                  TO OLT TECB AND PUT SIO CC INTO      35430002
*                                  LOW ORDER BYTE.                      35460002
         OI    SIOCC,EBCDZERO     CONVERT SIO CONDITION CODE TO EBCDIC  35500002
         TM    DEVFLAG2,EXIOLVL3  IS EXIO CALL FOR A LEVEL 3 MACRO      35600002
         BNO   IFDCO060           NO-GO PROCESS FOR EXIO LEVEL 2        35700002
         CLI   SIOCC,EBCDZERO     IS CONDITION CODE 0                   35800002
         BNE   IFDCO060           NO-GO POST NORMALLY                   35900002
         MVC   SIODEVAD,DEVADPAD+1     PUT HEX DEVICE ADDRESS INTO TECB 36000002
         IC    WORKREG1,TECBEVOC  GET TECB EVENT COUNT                  36100002
         LA    WORKREG1,ONE(WORKREG1)  ADD 1 TO EVENT COUNT             36200002
         STC   WORKREG1,TECBEVOC  PUT NEW EVENT COUNT INTO TECB         36300002
         IC    WORKREG1,DEVINTPT  GET DEVTAB EVENT COUNT POSTED VALUE   36400002
         LA    WORKREG1,ONE(WORKREG1)  ADD 1 TO THIS                    36500002
         STC   WORKREG1,DEVINTPT  PUT NEW VALUE INTO DEVTAB             36600002
         NI    DEVFLAG2,ALL-EXIOLVL3   TURN OFF EXIO LEVEL 3 BIT        36700002
         B     IFDCO040           GO PROCESS NEXT EVENT                 36800002
         SPACE 2                                                        36900002
IFDCO050 EQU   *                                                        37000002
         CLI   TECBEVOC,FULL      IS EVENT COUNTER FULL                 37100002
         BL    IFDCO080           NO-GO UPDATE EVENT COUNTER            37200002
         B     IFDCO090           YES-GO CHECK FOR UNIT CHECK           37300002
         SPACE 2                                                        37400002
IFDCO060 EQU   *                  PROCESS NEW TECB EVENT POST           37500002
         CLI   SIOCC,EBCDZERO     IS SIO CONDITION CODE ='F0'           37600002
         BNE   IFDCO070           NO-LEAVE IT ALONE                     37700002
         MVI   SIOCC,EVNTCODE     YES-FLAG IT AS AN EVENT               37800002
IFDCO070 EQU   *                                                        37900002
         MVC   SIODEVAD,DEVADPAD+1     HEX DEVICE ADDRESS TO EVENT FLD  38000002
         MVC   SIOCSWB,CSWCMDAD(CSWPTREG)   MOVE CSW TO TECB IN OLT     38050002
IFDCO080 EQU   *                  UPDATE EVENT COUNTERS                 38100002
         IC    WORKREG1,TECBEVOC  GET TECB EVENT COUNT                  38200002
         LA    WORKREG1,ONE(WORKREG1)  ADD ONE TO EVENT COUNT           38300002
         STC   WORKREG1,TECBEVOC  PUT IT BACK INTO TECB                 38400002
         IC    WORKREG1,DEVINTPT  GET DEVTAB EVENT COUNT POSTED VALUE   38500002
         LA    WORKREG1,ONE(WORKREG1)  PUT NEW VALUE INTO DEVTAB        38600002
         STC   WORKREG1,DEVINTPT  PUT NEW VALUE INTO DEVTAB             38700002
         SPACE 2                                                        38800002
IFDCO090 EQU   *                  ROUTINE TO PROCESS UNIT CHECK/SENSE   38900002
         SPACE                                                          39000002
         TM    CSWSTSA(CSWPTREG),UCBIT IS UNIT CHECK PRESENT IN CSW     39100002
         BNO   IFDCO140           NO-GO SEE IF THIS IS A PCI CALL       39200002
         TM    USEFLAGA,OLDTECB   IS THIS AN OLD TECB                   39300002
         BNO   IFDCO100           NO-GO PROCESS FOR A NEW TECB          39400002
         LA    TECBSNS,OTECBSNS   GET ADDRESS OF SENSE AREA IN OLT TECB 39500002
         DROP  TECBEVNT           RELEASE TECB EVENT MAP REG            39600002
         B     IFDCO110           GO MOVE SENSE                         39700002
         SPACE 2                                                        39800002
IFDCO100 EQU   *                  PROCESS SENSE FOR NEW TECB            39900002
         CLI   TECBSNCT,ZERO      ARE THERE ANY SENSE FIELDS IN TECB    40000002
         BNH   IFDCO130           GO UPDATE SENSE COUNT ONLY            40100002
         CLC   TECBSNOC,TECBSNCT  IS NUMBER POSTED < NUMBER AVAILABLE   40200002
         BNL   IFDCO130           NO-GO ONLY UPDATE SENSE COUNT POSTED  40300002
         SPACE                                                          40400002
*   LOCATE SENSE AREA TO MOVE THE SENSE INTO FOR NEW TECB               40500002
         SR    WORKREG1,WORKREG1  ZERO WORKREG1                         40600002
         SR    REG15,REG15        ZERO REG 15                           40700002
         IC    WORKREG1,TECBFDCT  GET NUMBER OF EVENT FIELDS            40800002
         IC    REG15,TECBFDLN     GET LENGTH OF EVENT FIELD             40900002
         MR    REG14,WORKREG1     CALCULATE LENGTH OF EVENT AREA        41000002
         LA    TECBSNS,TECBDATA-TECB(REG15,TECBREG)   POINT TO FIRST    41100002
*                                  SENSE AREA                           41150002
         IC    WORKREG1,TECBSNOC  GET NUMBER OF SENSE FIELDS POSTED     41200002
         SR    REG15,REG15        ZERO REG15                            41300002
         ICM   REG15,B'0011',TECBSNLN  GET SENSE FIELD LENGTH           41400002
         MR    REG14,WORKREG1     GET INDEX TO NEXT SENSE FIELD TO POST 41500002
         AR    TECBSNS,REG15      ADD THIS TO TECB FIELD END            41600002
         USING SENSEMAP,TECBSNS   ESTABLISH ADDRESSABILITY TO SENSE     41700002
         MVC   SENSEDAD,DEVADPAD+1     HEX DEVICE ADDRESS TO TECB SENSE 41800002
         LA    TECBSNS,L'SENSEDAD(TECBSNS)  POINT TO START OF SENSE     41900002
         DROP  TECBSNS            RELEASE SENSE MAP ADDRESS REG         42000002
IFDCO110 EQU   *                                                        42100002
         SR    WORKREG1,WORKREG1  ZERO WORKREG1                         42200002
         IC    WORKREG1,OSNSCNT   GET SENSE DATA COUNT                  42300002
         BCTR  WORKREG1,0         SUBTRACT 1 TO ADJUST FOR EXECUTE      42400002
         EX    WORKREG1,MVCSENSE  MOVE THE SENSE DATA TO THE TECB       42500002
         TM    USEFLAGA,OLDTECB   IS THE TECB OLD                       42600002
         BNO   IFDCO130           NO-GO UPDATE SENSE COUNTER            42700002
         SPKA  0(REG0)            RESTORE MY PROTECT KEY TO ZERO        42800002
         TM    USEFLAGA,PCIENTRY  IS THIS MODULE ENTRY FOR A PCI EXIT   42900002
         BNO   IFDCO150           NO-GO TO ECB POST ROUTINE             43000002
IFDCO120 EQU   *                                                        43100002
         NI    USEFLAGA,ALL-PCIENTRY   SET PCI ENTRY SWITCH OFF         43200002
         B     IFDCO170           GO RESTORE REGS AND RETURN            43300002
IFDCO130 EQU   *                                                        43400002
         CLI   TECBSNOC,FULL      IS TECB SENSE COUNTER FULL            43500002
         BE    IFDCO140           YES-GO CONTINUE COMMON FLOW           43600002
         IC    WORKREG1,TECBSNOC  GET TECB SENSE COUNT POSTED VALUE     43700002
         LA    WORKREG1,1(WORKREG1)    ADD 1 TO IT                      43800002
         STC   WORKREG1,TECBSNOC  PUT NEW SENSE COUNT VALUE INTO TECB   43900002
IFDCO140 EQU   *                                                        44000002
         SPKA  0(REG0)            RESTORE MY PROTECT KEY TO ZERO        44100002
         TM    USEFLAGA,PCIENTRY  IS THIS A PCIENTRY TO THIS MODULE     44200002
         BO    IFDCO120           YES-GO END THIS ENTRY                 44300002
         LA    CSWPTREG,L'OCSW1(CSWPTREG)   POINT TO NEXT CSW IN OECB   44400002
         BCT   CSWINREG,IFDCO155   BR IF MORE INTERUPTS        @ZA16992 44500037
         SPACE 3                                                        44600002
IFDCO150 EQU   *                  THIS ROUTINE POSTS THE ECB            44700002
         TM    IOECB,WAIT         IS THE ECB BEING WAITED ON            44800002
         BO    IFDCO160           YES-GO SYSTEM POST THAT ECB           44900002
         MVI   IOECB,POSTBIT      SET THE POST BIT ON                   44920002
         MVC   IOECB+3(ONE),IOSCOD   PUT THE COMP CODE IN ECB           44940002
         B     IFDCO170           GO RESTORE REGS AND RETURN            44960002
IFDCO155 OI    0(CSWPTREG),X'FF'  RESET SIO FLAG TO FF FOR ALL @ZA16992 44965037
*                                 INTERRUPTS AFTER FIRST       @ZA16992 44970037
         B     IFDCO035                                        @ZA16992 44975037
IFDCO160 EQU   *                                                        44980002
         SR    REG10,REG10        ZERO REG 10                           45060002
         IC    REG10,IOSCOD       GET IOS COMPLETION CODE FROM IOSB     45120002
         LA    ECBPTR,IOECB       GET ECB ADDRESS                       45180002
         L     REG15,CVTPTR4C     GET CVT ADDRESS                       45240002
         USING CVTMAP,REG15       SET ADDRESSABILITY TO CVT             45300002
         L     REG15,CVT0PT01     GET ADDRESS OF POST ROUTINE           45360002
         BALR  REG14,REG15        GO TO POST OLTEP'S ECB                45420002
IFDCO170 EQU   *                                                        49950002
         USING UCBOB,UCBPTR        ESTABLISH ADDRESSIBILITY    @ZA04290 49954004
         L     UCBPTR,IOSUCB       LOAD ADDRESS OF UCB         @ZA04290 49958004
         C     IOSBREG,UCBIOSBA    IS THE UCB FOR A 3851?      @ZA04290 49962004
         BNE   IFDC0175            IF NOT, GO AROUND           @ZA04290 49966004
         NI    UCBFLA,ALL-UCBQISCE RESET THE QUIESCE BITS      @ZA04290 49970004
         NI    IOSOPT,ALL-IOSQISCE IN THE UCB AND IOSB         @ZA04290 49980004
         DROP  UCBPTR                                          @ZA04290 49990004
IFDC0175 EQU   *                                               @ZA04290 49994004
         LM    REG14,REG12,12(SAVEREG) RESTORE IOS REGISTERS            50000002
         BR    REG14              AND RETURN ON REG 14 + 0              50200002
IFDCO180 EQU   *                                               @ZA02795 50210004
         CLI   IOSCOD,IOSFINTC     IS IT RC = 7E               @ZA04292 50220004
         BNO   IFDCO150           IF NOT, GO POST THE ECB      @ZA02795 50230004
         NI    IOSFLA,ALL-IOSEX   RESET THE INTERCEPT FLAG     @ZA02795 50240004
         LM    REG14,REG12,12(SAVEREG) RESET IOS REGISTERS     @ZA02795 50250004
         B     8(REG14)           RETURN TO IOS RETRY ENTRY    @ZA02795 50260004
         EJECT                                                          50300002
*********************************************************************** 50400002
*                   CONSTANTS                                         * 50500002
*********************************************************************** 50600002
         SPACE                                                          50700002
         DS    0F                                                       50800002
SUBPLCON DC    X'F50000A0'        160 BYTES IN SUBPL 245 FOR   @YM03321 50900002
*                                    EACH CONTROL BLOCK OF THE CCW      50960002
*                                     TRANSLATOR                        51020002
*********************************************************************** 51100002
*                   EXECUTE OBJECT INSTRUCTIONS                       * 51200002
*********************************************************************** 51300002
MVCSENSE MVC   0(0,TECBSNS),OSNS1 MOVE SENSE FROM OECB TO TECB          51400002
         SPACE 5                                                        51500002
*********************************************************************** 51600002
*                   PATCH AREA                                        * 51700002
*********************************************************************** 51800002
         SPACE                                                          51900002
         IFDPATCH                                                       52000002
         EJECT                                                          52100002
*********************************************************************** 52200002
*                  DSECTS FOR THIS MODULE                             * 52300002
*********************************************************************** 52400002
         SPACE 5                                                        52500002
         CVT   DSECT=YES                                                52600002
         SPACE 5                                                        52700002
TCCW     IECDTCCW                                                       52800002
         SPACE 5                                                        52900002
         IECDIOCM                                                       53000002
         SPACE 5                                                        53100002
         IEFUCBOB                 DSECT FOR THE SYSTEM UCB              53200002
         SPACE 5                                                        53300002
         IHASRB                   DSECT FOR THE SYSTEM SRB              53400002
         SPACE 5                                                        53500002
         IECDIOSB                 DSECT FOR THE SYSTEM IOSB             53600002
         SPACE 5                                                        53700002
*  DESCT FOR OLTEP'S IOSB USER CONTROL BLOCK AND EVENT CONTROL BLOCK    53800002
         SPACE 2                                                        53900002
IOSUSECB EQU   *                                                        54000002
USERCB   DS    0CL24              START OF IOSB USER CONTROL BLOCK      54100002
OECBPTR  DS    F                  POINTER TO OLTEP EVENT CONTROL BLOCK  54200002
TECBPTR  DS    F                  OLT'S TECB POINTER FOR THIS EVENT     54300002
IODVTBPT DS    F                  POINTER TO 3 WORDS IN OLTEP COMMON    54400002
*                                   AREA WHICH HAVE:                    54500002
*                                       0   DEVTAB ENTRY POINTER        54600002
*                                       4   POINTER TO THIS IOSB        54700002
*                                       8   THE ECB FOR THIS EVENT      54800002
TCCWPTR  DS    F                  POINTER TO THE TCCW SYSTEM CONTROL    54900002
*                                    BLOCK FOR THE CCW TRANSLATOR       55000002
USEFLAGS DS    0F                 A WORD OF FLAGS                       55100002
USEFLAGA DS    1C                 FIRST FLAG BYTE FOR THIS CB SET       55200002
INUSE    EQU   X'80'              THIS IOSB IS IN USE                   55300002
ATTN     EQU   X'40'              ATTENTION=YES REQUEST (OFF IF DONE)   55400002
VIRTCCW  EQU   X'20'              THE CCW'S ARE IN VIRTUAL              55500002
OLDTECB  EQU   X'10'              OLD TECB TO BE POSTED                 55600002
INTRNLCB EQU   X'08'              REQUEST IS INTERNAL (LINE CONNECT,DP) 55700002
PURGED   EQU   X'04'              THIS I/O EVENT IS PURGED              55800002
PCIENTRY EQU   X'02'              PCI EXIT OPERATING                    55850002
ENTRYLST EQU   X'01'              BIT IN IOSUSE FLAGA TO SHOW  @YM03321 55900002
*                                  THAT THE ABNORMAL EXIT HAS  @YM03321 55920002
*                                  BEEN ENTERED FOR MORE THAN  @YM03321 55940002
*                                  THE FIRST TIME              @YM03321 55960002
USEFLAGB DS    1C                 UNUSED                                56000002
USEFLAGC DS    1C                 UNUSED                                56100002
USEFLAGD DS    1C                 UNUSED                                56200002
USERSVD  DS    F                  RESERVED FOR FUTURE                   56250002
         SPACE                                                          56300002
OECB     DS    0CL64              START OF OLTEP'S EVENT CONTROL BLOCK  56400002
OSNSCNT  DS    CL1                OLT'S SENSE BYTES REQUESTED COUNT     56500002
OINCNT   DS    CL1                NUMBER OF INTERRUPTS IN OECB          56600002
UNUSED   DS    CL2                NOT USED                              56700002
OCSW1    DS    0CL8               FIRST INTERRUPT POSTED IN OECB        56800002
OCSWCC1  DS    CL1                IOS SIO CONDITION CODE                56900002
OCSWCMD1 DS    CL3                CSW COMMAND ADDRESS                   57000002
OCSWSTS1 DS    0CL2               CSW1 STATUS BYTES                     57100002
OCSWSTA1 DS    CL1                CSW1 STATUS BYTE A                    57200002
OCSWSTB1 DS    CL1                CSW1 STATUS BYTE B                    57300002
OCSWBYT1 DS    CL2                CSW1 RESIDUAL BYTE COUNT              57400002
OCSW2    DS    0CL8               SECOND INTERRUPT POSTED IN OECB       57500002
OCSWCC2  DS    CL1                IOS SIO CONDITION CODE                57600002
OCSWCMD2 DS    CL3                CSW COMMAND ADDRESS                   57700002
OCSWSTS2 DS    0CL2               CSW2 STATUS BYTES                     57800002
OCSWSTA2 DS    CL1                CSW2 STATUS BYTESA                    57900002
OCSWSTB2 DS    CL1                CSW2 STATUS BYTESB                    58000002
OCSWBYT2 DS    CL2                CSW2 RESIDUAL BYTE COUNT              58100002
OCSW3    DS    0CL8               THIRD INTERRUPT POSTED IN OECB        58200002
OCSWCC3  DS    CL1                IOS SIO CONDITION CODE                58300002
OCSWCMD3 DS    CL3                CSW COMMAND ADDRESS                   58400002
OCSWSTS3 DS    0CL2               CSW3 STATUS BYTES                     58500002
OCSWSTA3 DS    CL1                CSW3 STATUS BYTESA                    58600002
OCSWSTB3 DS    CL1                CSW3 STATUS BYTESB                    58700002
OCSWBYT3 DS    CL2                CSW3 RESIDUAL BYTE COUNT              58800002
OSNS1    DS    CL36               SENSE SAVE AREA FOR UNIT CHECK ON     58900002
*                                   THIS REQUEST                        59000002
         SPACE 2                                                        59100002
         IFDEVTAB                                                       59200002
         SPACE 5                                                        65300002
IODEVTAB DSECT                    OLTEP COMMON AREA CONTROL BLOCK TO    65400002
*                                  ASSOCIATE A DEVTAB ENTRY AND A SRB1  65500002
*                                  IOSB/OECB COMBINATION                65600002
IODEVPTR DS    F                  POINTER TO DEVICE TABLE ENTRY         65700002
IOIOSBPT DS    F                  IOSB POINTER                          65800002
IOECB    DS    F                  ECB ASSOCIATED WITH THIS I/O EVENT    65900002
         SPACE 5                                                        66000002
TECB     DSECT                                                          66100002
TECBFDCT DS    CL1                NUMBER OF EVENT FIELDS IN TECB        66200002
TECBFDLN DS    CL1                LENGTH OF EVENT FIELDS IN TECB        66300002
TECBSNLN DS    CL2                LENGTH OF SENSE FIELDS IN TECB        66400002
TECBFLAG DS    CL1                RESERVED FOR OLT(S)EP'S USE           66500002
TECBSNCT DS    CL1                LENGTH OF SENSE FIELDS IN TECB        66600002
TECBSNOC DS    CL1                NUMBER OF SENSE FIELDS POSTED         66700002
TECBEVOC DS    CL1                NUMBER OF EVENT FIELDS POSTED         66800002
TECBDATA DS    0CL1               START OF EVENT AND SENSE DATA         66900002
         ORG   TECBFDCT           NOW MAP OLD TECB - P3116 OLTS         67000002
OLDTECBD DS    0F                 START OF OLD TECB                     67100002
OTECBECB DS    0F                 OLD TECB ECB FIELD                    67200002
OTECBFLG DS    CL1                ECB FLAGS                             67230002
OTECBCOD DS    CL3                ECB COMPLETION CODE                   67260002
OTECBCC  DS    CL1                OLD TECB SIO CONDITION CODE           67300002
OTECBBYT EQU   X'80'              OLD TECB FLAG TO BYPASS TIMING        67400002
OTECBCSW DS    CL7                OLD TECB SIO CSW                      67500002
OTECBSNS DS    CL35               OLD TECB SIO SENSE IF UNIT CHECK      67600002
         SPACE 5                                                        67700002
EVENTMAP DSECT                                                          67800002
         DS    0F                 MAP OF NEW TECB EVENT FIELD           67900002
SIOCC    DS    CL1                SIO CONDITION CODE OR FIELD IDENT     68000002
SIODEVAD DS    CL3                SIO DEVICE ADDRESS                    68100002
SIOCSW   DS    0CL8               CSW FOR THIS EVENT                    68200002
SIOCSWA  DS    CL1                1ST BYTE UNUSED                       68300002
SIOCSWB  DS    CL7                7 BYTES OF STATUS                     68400002
         SPACE 3                                                        68500002
SENSEMAP DSECT                    MAP OF NEW TECB SENSE FIELD           68600002
SENSEDAD DS    CL3                DEVICE ADDRESS FOR SENSE ONFORMATION  68700002
SENSEIFO DS    CL35               SENSE INFORMATION - UP TO 35 BYTES    68800002
         END                                                            68900002
./  ADD  SSI=21080772,NAME=IFDOLT59
         TITLE ' SUBSTITUTE FOR IFDOLT55 IN SYSTEM WITHOUT REI. IFDOLT5X00010000
               9'                                                       00020000
* GEN(TITLE ' IFDOLT59-REI MODULE REPLACEMENT');                        00030000
         TITLE ' IFDOLT59-REI MODULE REPLACEMENT'                       00040000
* /******************************************************************** 00050000
* /*  MODULE IFDOLT59 IS A REPLACEMENT FOR IFDOLT55 IN A SYSTEM       * 00060000
* /*  WITHOUT REI. IFDOLT59 IS NEVER ENTERED AND IS ONLY USED TO      * 00070000
* /*  RESOLVE UNRESOLVED SYMBOLS DURING LINKEDIT TIME.                * 00080000
* /******************************************************************** 00090000
* IFDOLT59: PROC OPTIONS(NOSAVEAREA,DONTSAVE,CODEREG(0),DATAREG(0));    00100000
         LCLA  &T,&SPN                                            0002  00110000
.@001    ANOP                                                     0002  00120000
IFDOLT59 CSECT ,                                                  0002  00130000
*  GEN(ENTRY IFDOLT55);                                                 00140000
         ENTRY IFDOLT55                                                 00150000
         DS    0H                                                       00160000
*  GEN(ENTRY DEDBUF);                                                   00170000
         ENTRY DEDBUF                                                   00180000
         DS    0H                                                       00190000
*  GEN(ENTRY REMINBUF);                                                 00200000
         ENTRY REMINBUF                                                 00210000
         DS    0H                                                       00220000
*  GEN(ENTRY REIDCB);                                                   00230000
         ENTRY REIDCB                                                   00240000
         DS    0H                                                       00250000
*  GEN(ENTRY REIOB);                                                    00260000
         ENTRY REIOB                                                    00270000
         DS    0H                                                       00280000
* IFDOLT55:                                                             00290000
* DEDBUF:                                                               00300000
* REMINBUF:                                                             00310000
* REIDCB:                                                               00320000
* REIOB:                                                                00330000
* END;                                                                  00340000
IFDOLT55 EQU   *                                                  0008  00350000
DEDBUF   EQU   *                                                  0008  00360000
REMINBUF EQU   *                                                  0008  00370000
REIDCB   EQU   *                                                  0008  00380000
REIOB    EQU   *                                                  0008  00390000
@EL01    BCR   15,@E                                              0008  00400000
@DATA1   EQU   *                                                        00410000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           00420000
@1       EQU   01                                                       00430000
@2       EQU   02                                                       00440000
@3       EQU   03                                                       00450000
@4       EQU   04                                                       00460000
@5       EQU   05                                                       00470000
@6       EQU   06                                                       00480000
@7       EQU   07                                                       00490000
@8       EQU   08                                                       00500000
@9       EQU   09                                                       00510000
@A       EQU   10                                                       00520000
@B       EQU   11                                                       00530000
@C       EQU   12                                                       00540000
@D       EQU   13                                                       00550000
@E       EQU   14                                                       00560000
@F       EQU   15                                                       00570000
         DS    0D                                                       00580000
@DATA    EQU   *                                                        00590000
         DS    00000000C                                                00600000
@TEMPS   DS    0F                                                       00610000
@DATEND  EQU   *                                                        00620000
         END                                                            00630000
./  ADD  SSI=80450068,NAME=IFDOLT61
         TITLE 'IFDOLT61 DEVICE DECODE 2'                               00010000
         LCLA  &T,&SPN                                            0001  00020000
.@001    ANOP                                                     0001  00030000
IFDOLT61 CSECT ,                                                  0001  00040000
         BC    15,24(0,@F)                                              00050000
         DC    C'IFDOLT61 14 FEB 78'                             0001  00060000
         STM   @E,@C,12(@D)                                       0001  00070000
         BALR  @B,0                                               0001  00080000
@PSTART  DS    0H                                                 0001  00090000
         USING @PSTART+00000,@B                                   0001  00100000
         ST    @D,@SAV001+4                                       0001  00110000
         LA    @F,@SAV001                                         0001  00120000
         ST    @F,8(0,@D)                                         0001  00130000
         LR    @D,@F                                              0001  00140000
         TITLE 'IFDOLT61 DEVICE DECODE 2'                               00150000
         DS    0H                                                       00160000
*         GEN(USING CHASCT,2);     /* SECTION CONTROL TABLE.    S21052* 00170000
         USING CHASCT,2                                                 00180000
         DS    0H                                                       00190000
*         GENERATE DATA;           /* COMMON AREA DSECT.        S21052* 00200000
*         /************************************************************ 00210000
*         /*                        REGISTERS                   S21052* 00220000
*         /************************************************************ 00230000
*                                                                       00240000
*         DCL R0 REG(0) PTR(31);   /* REGISTER 0 NAME           S21052* 00250000
*         DCL R1 REG(1) PTR(24);   /* REGISTER 1 NAME           S21052* 00260000
*         DCL R2 REG(2) PTR(31);   /* REGISTER 2 NAME           S21052* 00270000
*         DCL R3 REG(3) PTR(31);   /* REGISTER 3 NAME           S21052* 00280000
*         DCL R4 REG(4) PTR(31);   /* REGISTER 4 NAME           S21052* 00290000
*         DCL R5 REG(5) PTR(31);   /* REGISTER 5 NAME           S21052* 00300000
*         DCL GOODENT REG(6) PTR;  /* VALID DEV TAB COUNTER.    S21052* 00310000
*         DCL UCBLOOK REG(7) PTR;  /* LOOK UP UCB'S, IN SVC 59. S21052* 00320000
*         DCL DEVTABPT REG(8) PTR; /* PTR TO CURRENT DEV TAB LOC.       00330000
*                                                               S21052* 00340000
*         DCL R8 REG(8) PTR(31);                              /*X03008* 00350000
*         DCL R9 REG(9) PTR(24);   /* REGISTER 9 NAME           S21052* 00360000
*         DCL R13 REG(13) PTR(31); /* REGISTER 13 NAME          S21052* 00370000
*         DCL R14 REG(14) PTR(31); /* REGISTER 14 NAME          S21052* 00380000
*         DCL RC REG(15) PTR(31);  /* RETURN CODE REGISTER      S21052* 00390000
*         DCL R15 REG(15) PTR(31); /* REGISTER 15 NAME          S21052* 00400000
*         /************************************************************ 00410000
*         /*                       SAVE AREAS                   S21052* 00420000
*         /************************************************************ 00430000
*                                                                       00440000
*         DCL 1 MYSAVE BASED(R13), /*  MY SAVE AREA FORMAT      S21052* 00450000
*           3 * CHAR(4),                                                00460000
*           3 YOURR13 PTR(31);     /* CALLERS SAVE AREA ADDRESS S21052* 00470000
*                                                                       00480000
*                                                                       00490000
*         /*           CALLERS SAVE AREA FORMAT                 S21052* 00500000
*         DCL 1 YOURSAVE BASED(YOURR13),                                00510000
*           3 * CHAR(12),                                               00520000
*           3 YOURR14 PTR(31);     /* CALLERS RETURN POINT      S21052* 00530000
*         /************************************************************ 00540000
*         /*                  SECTION CONTROL TABLE             S21052* 00550000
*         /************************************************************ 00560000
*                                                                       00570000
*         DCL CHASCT CHAR(88) GEND;                                     00580000
*                                                                       00590000
*                                                                       00600000
*         /*          FORMAT OF SCT                             S21052* 00610000
*         DCL 1 SCT BASED(ADDR(CHASCT)),                                00620000
*           3 HEADER CHAR(8),      /* HEADER, NOT REFERENCED HERE       00630000
*                                                               S21052* 00640000
*           3 PRIDVSCT CHAR(12),   /* PRIMARY DEVICE ENTRY .    S21052* 00650000
*             5 * CHAR(2),                                              00660000
*             5 PRIDVFLG CHAR(1),  /*PRIMARY DEVICE FLAGS.      S21052* 00670000
*             5 * CHAR(1),                                              00680000
*             5 PRIDVAD CHAR(4),   /* PRIMARY DEVICE ADDRESS.   S21052* 00690000
*               7 * CHAR(2),                                            00700000
*               7 PRIHEXAD CHAR(2),/* PRIM DEV ADDR IN HEX.     S21052* 00710000
*             5 PRIDVDSC CHAR(4),  /* PRIMARY DEVICE DESCRIPTORS.       00720000
*                                                               S21052* 00730000
*           3 SECDVSCT CHAR(12),   /* SECONDARY DEVICE ENTRY.   S21052* 00740000
*             5 * CHAR(2),                                              00750000
*             5 SECDVFLG CHAR(1),  /* SECONDARY DEVICE FLAGS.   S21052* 00760000
*             5 * CHAR(1),                                              00770000
*             5 SECDVAD CHAR(4),   /* SECONDARY DEVICE ADDRESS. S21052* 00780000
*               7 * CHAR(2),                                            00790000
*               7 SECHEXAD CHAR(2),/* SEC DEV ADDR IN HEX.      S21052* 00800000
*             5 SECDVDSC CHAR(4);  /* SEC DEV DESCRIPTORS.      S21052* 00810000
*         /************************************************************ 00820000
*         /*                       INPUT BUFFER                 S21052* 00830000
*         /************************************************************ 00840000
*                                                                       00850000
*                                                                       00860000
*         /*          OVERLAY OF INPUT BUFFER                   S21052* 00870000
*         DCL INBUFR CHAR(120) GEND;                                    00880000
*                                                                       00890000
*         /*          OVERLAY OF INPUT BUFFER                   S21052* 00900000
*         DCL INPUTBUF CHAR(10) BASED(R5);                              00910000
*                                                                       00920000
*         /*          POINTER TO INPUT BUFFER CHARACTER         S21052* 00930000
*         DCL INBUFPTR PTR(31) GEND;                                    00940000
*                                                                       00950000
*                                                                       00960000
*         /************************************************************ 00970000
*         /*                        SWITCHES                    S21052* 00980000
*         /************************************************************ 00990000
*                                                                       01000000
*         DCL CESWT CHAR(1) GENERATED;                                  01010000
*                                                                       01020000
*                                                                       01030000
*         /*          CE SWITCH FORMAT                          S21052* 01040000
*         DCL 1 OLTEPSW BASED(ADDR(CESWT)),                             01050000
*           3 * BIT(4),                                                 01060000
*           3 LEGALDEV BIT(1),     /* VALID DEVICE ENTRY MADE.  S21052* 01070000
*           3 REINT BIT(1);        /* REINITIALIZATION FLAG.    S21052* 01080000
*                                                                       01090000
*         DCL CESWT1 CHAR(1) GENERATED;                                 01100000
*                                                                       01110000
*                                                                       01120000
*         /*          CE SWITCH 1 FORMAT                        S21052* 01130000
*         DCL 1 OLTEPSW1 BASED(ADDR(CESWT1)),                           01140000
*           3 * BIT(6),                                                 01150000
*           3 ONLINETP BIT(2),     /* ONLINE OK AND TP FLAGS.   S21052* 01160000
*             5 ONLINEOK BIT(1),   /* TP CU ONLINE OK FLAG.     S21052* 01170000
*             5 TPFLAG BIT(1);     /* TP CU TEST FLAG.          S21052* 01180000
*                                                                       01190000
*         DCL CESWT2 CHAR(1) GENERATED;                                 01200000
*                                                                       01210000
*                                                                       01220000
*         /*          CE SWITCH 2 FORMAT                        S21052* 01230000
*         DCL 1 OLTEPSW2 BASED(ADDR(CESWT2)),                           01240000
*           3 * BIT(3),                                                 01250000
*           3 CHANTEST BIT(1),     /* CHANNEL TEST FLAG.        S21052* 01260000
*           3 * BIT(1),                                                 01270000
*           3 NDR BIT(1);          /* NO DEVICE REQUIRED FOR TEST       01280000
*                                                               S21052* 01290000
*                                                                       01300000
*         DCL CESWT7 CHAR(1) GEND;                                      01310000
*                                                                       01320000
*                                                                       01330000
*         /*          CE SWITCH 7 FORMAT                        S21052* 01340000
*         DCL 1 OLTEPSW7 BASED(ADDR(CESWT7)),                           01350000
*           3 INCLST BIT(1),       /* INCLUSIVE SERIES OF DEVICES       01360000
*                                                               S21052* 01370000
*           3 RETTO31 BIT(1);      /* RET TO IFDOLT31, MORE DECOD       01380000
*                                                               S21052* 01390000
*                                                                       01400000
*         DCL CESWTR CHAR(1) GEND;      /* RETAIN SWITCHES      S21052* 01410000
*                                                                       01420000
*                                                                       01430000
*         /*          RETAIN CESWITCH FORMAT                          * 01440000
*         DCL 1 * BASED(ADDR(CESWTR)),                                  01450000
*           3 RETAINAC BIT(1),          /* IS RETAIN ACTIVE?          * 01460000
*           3 * BIT(1),                                                 01470000
*           3 REMNOMSG BIT(1);          /* NO MSG FROM REMOTE         * 01480000
*         /************************************************************ 01490000
*         /*          RETAIN SWITCH FORMATS                           * 01500000
*         /************************************************************ 01510000
*                                                                       01520000
*         DCL CESWTR2 CHAR(1) GEND;     /* THIRD RETAIN FLAG          * 01530000
*                                                                       01540000
*         DCL 1 * BASED(ADDR(CESWTR2)), /* SWITCH STRUCTURE           * 01550000
*           3 * BIT(7),                                                 01560000
*           3 DPMSGREI BIT(1);          /* DATA PROT MSG TO REM XM0097* 01570000
*                                                                       01580000
*         /************************************************************ 01590000
*         /*                   SVC PARAMETER LIST               S21052* 01600000
*         /************************************************************ 01610000
*                                                                       01620000
*                                                                       01630000
*         DCL ROPT CHAR(8) GENERATED;                                   01640000
*                                                                       01650000
*                                                                       01660000
*         /*          PARAMETER LIST FORMAT                     S21052* 01670000
*         DCL 1 SVCPLIST BASED(ADDR(ROPT)-4),                           01680000
*           3 * CHAR(2),                                                01690000
*           3 MODNUM CHAR(2),      /* NAME OF CALLING MODULE.   S21052* 01700000
*           3 ADDRDEV PTR(31),     /* BEGIN ADDR FOR UCB LOOK-UP.       01710000
*                                                               S21052* 01720000
*           3 ENTRIES FIXED(31);   /* NUMBER OF LOOK-UPS TO DO. S21052* 01730000
*         DCL DEVTBPTR PTR GEND;   /* POINTER TO DEVICE TABLES. S21052* 01740000
*                                                                       01750000
*                                                                       01760000
*         /************************************************************ 01770000
*         /*                FORMAT OF DEVTABLE ENTRY            S21052* 01780000
*         /************************************************************ 01790000
*                                                                       01800000
*         /*          ANY DEVICE TABLE                          S21052* 01810000
*         DCL 1 DEVTABXX CHAR(56)  BASED(DEVTABPT),                     01820000
*           3 DEVADDR CHAR(8),     /* EBCDIC DEVICE ADDRESS.    S21052* 01830000
*           3 UCBADDR PTR(31),     /* UCB ADDRESS.              S21052* 01840000
*           3 FLG1 CHAR(1),        /* FIRST DEV TAB FLAG FIELD. S21052* 01850000
*             5 ONOFF BIT(1),      /* DEV ON/OFF LINE STATUS FLAG       01860000
*                                                               S21052* 01870000
*             5 PRIMARY BIT(1),    /* PRIMARY DEVICE FLAG.      S21052* 01880000
*           3 * CHAR(1),           /* SECOND FLAG FIELD.        S21052* 01890000
*           3 FLG3 CHAR(1),        /* THIRD FLAG FIELD.         S21052* 01900000
*             5 ANRNOTST BIT(1),   /* ANR DEVICE NOT TESTABLE.  S21052* 01910000
*             5 * BIT(3),                                               01920000
*             5 NOTEST BIT(1),     /* DEV NOT TESTABLE         XA00530* 01930000
*             5 SYSALLOC BIT(1),   /* DEV ALLOCATED IN SYS     XA00530* 01940000
*           3 * CHAR(1),           /* FOURTH FLAG FIELD.        S21052* 01950000
*           3 * CHAR(16),          /* TAPE LABEL, EXTENTS,MODE SAVE.    01960000
*                                                               S21052* 01970000
*           3 HEXADDR CHAR(4),     /* DEVICE ADDR IN HEX.       S21052* 01980000
*           3 CDSDVDSC CHAR(4),    /* CDS DEVICE DSCRPTRS.      S21052* 01990000
*             5 MODEL CHAR(1),     /* MODEL OF DEVICE.          S21052* 02000000
*             5 FEATURES CHAR(1),  /* DEVICE FEATURES.          S21052* 02010000
*             5 CLASS CHAR(1),     /* CLASS OF DEVICE.          S21052* 02020000
*             5 TYPE CHAR(1),      /* DEVICE TYPE.              S21052* 02030000
*           3 BYTECNT CHAR(1),     /* CDS BYTE COUNT.           S21052* 02040000
*           3 CDSFLAGS CHAR(1),    /* CDS FLAG BYTE.            S21052* 02050000
*             5 * BIT(4),                                               02060000
*             5 SYMDEVIC BIT(1),   /* DEV HAS SYMBOLIC NAME.    S21052* 02070000
*             5 * BIT(2),                                               02080000
*             5 REMLINE BIT(1),    /* REMOTE LINE TO ENABLE.    S21052* 02090000
*           3 EXTSGMSK CHAR(2),    /* EXTERNAL SIGNAL MASK.     S21052* 02100000
*           3 SYMNAME CHAR(8);     /* SYMBOLIC NAME OF DEVICE.  S21052* 02110000
*         /************************************************************ 02120000
*         /*                        MESSAGES                    S21052* 02130000
*         /************************************************************ 02140000
*                                                                       02150000
*                                                                       02160000
*         DCL IFDMSG61 LABEL NONLOCAL EXTERNAL;                         02170000
*                                                                       02180000
*                                                                       02190000
*         /*          POINTERS TO MESSAGES                      S21052* 02200000
*         DCL 1 MSGPTR BASED(R4),                                       02210000
*           3 MSGPTR09 PTR(31),    /* MESSAGE IFD109I.          S21052* 02220000
*           3 MSGPTR10 PTR(31),    /* MESSAGE IFD110I.          S21052* 02230000
*           3 MSGPTR11 PTR(31),    /* MESSAGE IFD111I.          S21052* 02240000
*           3 MSGPTR14 PTR(31),    /* MESSAGE IFD114I.          S21052* 02250000
*           3 MSGPTR27 PTR(31),                                         02260000
*           3 MSGPTR54 PTR(31);         /* MESSAGE IFD154I.     X02906* 02270000
*                                                                       02280000
*                                                                       02290000
*         /*          MESSAGE IFD109I FORMAT                    S21052* 02300000
*         DCL 1 MSG109 BASED(R1),                                       02310000
*           3 * CHAR(12),                                               02320000
*           3 MSG109I CHAR(28);   /* MSG IFD109I TEST                 * 02330000
*                                                                       02340000
*                                                                       02350000
*         DCL 1 MSG154 BASED(R1),       /* MESSAGE IFDOLT  154  X02906* 02360000
*           3 * CHAR(12),               /* FLAGS FOR ROUTING    X02906* 02370000
*           3 MSG154I CHAR(60);         /* MESSAGE TEXT.        X02906* 02380000
*                                                                       02390000
*         DCL 1 MSG127 BASED(R1),                                       02400000
*           3 * CHAR(12),                                               02410000
*           3 MSG127I CHAR(19);                                         02420000
*         /************************************************************ 02430000
*         /*            OTHER COMMON AREA CONSTANTS USED        S21052* 02440000
*         /************************************************************ 02450000
*                                                                       02460000
*         DCL UNICTR CHAR(1) GEND; /* GOOD DEV ENTRY COUNTER.   S21052* 02470000
*                                                                       02480000
*         DCL TPSAVE CHAR(4) GEND; /* TEST TYPE SAVE AREA.      S21052* 02490000
*                                                                       02500000
*                                                                       02510000
*         /*          TEST TYPE SAVE AREA STRUCTURE             S21052* 02520000
*         DCL 1 TPSAV CHAR(4) BASED(ADDR(TPSAVE)),                      02530000
*           3 * CHAR(3),                                                02540000
*           3 TPSAVE3 CHAR(1);     /* TP CU 2701,2,3 TEST TYPE. S21052* 02550000
*                                                                       02560000
*         /* POINTER TO ACTIVE SECTION ENTRY IN SECTION CONTROL TABLE   02570000
*                                                               S21052* 02580000
*         DCL DEVDEPAD PTR(31) GEND;                                    02590000
*                                                                       02600000
*         /* ENTRY IN IFDOLT30 TO REDEFINE TEST DEFINITION      S21052* 02610000
*         DCL REDEFINE PTR(31) GEND;                                    02620000
*                                                                       02630000
*         /* PTR TO PRIMARY DEV TABLE.  IN SCT.                 S21052* 02640000
*         DCL PRIDVPTR PTR(31) GEND;                                    02650000
*                                                                       02660000
*         /* PTR TO LAST GRABBED DEVICE TABLE. IN SCT.          S21052* 02670000
*         DCL SECDVPTR PTR(31) GEND;                                    02680000
*                                                                       02690000
*         /* LENGTH OF EACH DEVICE TABLE ENTRY                  S21052* 02700000
*         DCL TABLNGTH FIXED(15) GEND;                                  02710000
*                                                                       02720000
*         DCL PSCT PTR(31) GEND;   /* POINTER TO SCT.           S21052* 02730000
*         DCL UNITUSE CHAR(1) GEND;/* NUMBER OF DEVS TESTED CNTR.       02740000
*                                                               S21052* 02750000
*                                                                       02760000
*         /*          DEVICE TABLE AREA IN COMMON AREA          S21052* 02770000
*         DCL 1 * BASED(R8),       /* DEVICE TABLE              X03008* 02780000
*               3 DVT CHAR(16),    /* TABLE AREA                X03008* 02790000
*               3 DVTN CHAR(16);   /* NEXT TABLE AREA           X03008* 02800000
*         DCL TUCBAD1 PTR(31) GEND;/* PTR TO PRIM DEV UCB.      S21052* 02810000
*         DCL TUCBAD2 PTR(31) GEND;/* PTR TO SECONDARY DEV UCB. S21052* 02820000
*                                                                       02830000
*                                                                       02840000
*                                                                       02850000
*         /*          EXECUTIVE PROGRAM FLAGS IN SCT            S21052* 02860000
*         DCL 1 EXPGMFLG CHAR(1) BASED(ADDR(CHASCT)+33),                02870000
*           3 * BIT(1),                                                 02880000
*           3 MORETHN1 BIT(1);     /* MORE THAN ONE DEV ENTERED S21052* 02890000
*                                                                       02900000
*         DCL NEXTREC PTR(31) GEND;/* READ NEXT REC IN IFDOLT31 S21052* 02910000
*         DCL TAB28 PTR(31) GEND;  /* NEW MACRO ENTRY POINT.    S21052* 02920000
*         /************************************************************ 02930000
*         /*                   INTERNAL CONSTANTS               S21052* 02940000
*         /************************************************************ 02950000
*                                                                       02960000
*         DCL CECDEV04 LABEL;                                           02970000
*                                                                       02980000
*                                                                       02990000
*         /*          SAVE INCLUSIVE ENTRIES                    S21052* 03000000
*         DCL 1 SAVENT PTR(31) GEND,                                    03010000
*           3 FRSTINCL FIXED(15),  /* FIRST INCLUSIVE SERIES DEV.       03020000
*                                                               S21052* 03030000
*           3 LASTINCL FIXED(15);  /* LAST INCLUSIVE SERIES DEV.S21052* 03040000
*                                                                       03050000
*         DCL AVAILBLE PTR(31);    /* NEXT AVAILABLE DEVICE TABLE       03060000
*                                                               S21052* 03070000
*                                                                       03080000
*         /*          SAVE COUNTER FOR NUMBER OF VALID DEV TABS BUILT   03090000
*                                                               S21052* 03100000
*         DCL SAVECNT FIXED(15) GEND;                                   03110000
*                                                                       03120000
*         /*          DEVICE TABLE OVERLAY                      S21052* 03130000
*         DCL DEVTABLE CHAR(56) BASED(AVAILBLE);                        03140000
*         DCL LIMIT FIXED(15);     /* MAX NUMBER OF UCB LOOKUPS.S21052* 03150000
*                                                                       03160000
*                                                                       03170000
*         /*          NUMBER OF DEVICE TABLES COUNTER AND WORK AREA     03180000
*                                                               S21052* 03190000
*         DCL 1 X FIXED(15),                                            03200000
*           3 UNITCTR FIXED(15),   /* DEVTABLE COUNTER.         S21052* 03210000
*             5 * CHAR(1),                                              03220000
*             5 UNITCTR1 CHAR(1);  /* DEVTABLE COUNTER.         S21052* 03230000
*                                                                       03240000
*         DCL ERRORTAB FIXED(15);       /* ERROR DEV TABLES CNTRX02906* 03250000
*         DCL X1 FIXED(15);        /* LOOP COUNTER.             S21052* 03260000
*         DCL COUNT FIXED(15);          /* LOOP COUNTER.         M4833* 03270000
*         DCL I FIXED(15);              /* LOOP COUNTER.         M4833* 03280000
*         DCL ERRCODE CHAR(2);     /* ERROR CODE IN MESSAGE.    S21052* 03290000
*                                                                       03300000
*                                                                       03310000
*         /*          GRAPHICS CONTROL UNIT DEVICE TABLE STRUCTURE      03320000
*                                                               S21052* 03330000
*         DCL 1 GRAPHICS CHAR(56) BDY(WORD),                            03340000
*           3 EBADDR CHAR(8),      /* EBCDIC DEVICE ADDRESS.    S21052* 03350000
*             5 * CHAR(7),                                              03360000
*             5 DEVICE CHAR(1),    /* DEVICE NUMBER.            S21052* 03370000
*           3 * CHAR(4),                                                03380000
*           3 FLAG CHAR(1),        /* FLAG FIELD.               S21052* 03390000
*             5 OFF BIT(1);        /* DEVICE ON-OFF LINE STATUS.S21052* 03400000
*                                                                       03410000
*                                                                       03420000
*         /*          CHARACTER REPRESENTATION OF NUMBERS       S21052* 03430000
*         DCL NUMBERS CHAR(16) INIT('0123456789ABCDEF');                03440000
*                                                                       03450000
*         /*          LOOK AT ONE NUMBER                        S21052* 03460000
*         DCL NUMBER CHAR(1) BASED(R9);                                 03470000
*                                                                       03480000
*         /*          CONVERSION AREA HEX/DECIMAL               S21052* 03490000
*         DCL 1 DEVAD CHAR(8) INIT('00000000'),                         03500000
*           3 DEVAD1 CHAR(8);      /* DEVICE ADDRESS WORK AREA. S21052* 03510000
*                                                                       03520000
*                                                                       03530000
*         /*          DEVICE DECODE INTERNAL SWITCHES           S21052* 03540000
*         DCL 1 SWITCHES CHAR(1),                                       03550000
*           3 FRSTPASS BIT(1);     /* FIRST DEVICE TABLE BUILT. S21052* 03560000
*                                                                       03570000
*                                                                       03580000
*         /*          CDS NAME WORK AREA                        S21052* 03590000
*         DCL 1 PARMLIST CHAR(16) BDY(WORD),                            03600000
*           3 MODNAME CHAR(8),                                          03610000
*             5 TCDSO CHAR(1) INIT('G'),                                03620000
*             5 CDSDEV CHAR(7),                                         03630000
*           3 TARGETAD PTR,                                             03640000
*           3 PARMFLGS CHAR(1),                                         03650000
*           3 * CHAR(1),                                                03660000
*           3 CDSLNGTH FIXED(15);                                       03670000
*                                                                       03680000
*                                                                       03690000
*         /*          UNIT CONTROL BLOCK (UCB) STRUCTURE        S21052* 03700000
*         DCL 1 UCBDVDSC CHAR(4) BASED(UCBADDR+16),                     03710000
*           3 UCBMODEL CHAR(1),    /* DEVICE MODEL.             S21052* 03720000
*           3 UCBFEAT CHAR(1),     /* DEVICE FEATURES.          S21052* 03730000
*             5 * BIT(2),                                               03740000
*             5 SHAREDDV BIT(1),   /* DEV SHAREABLE >1 CPU            * 03750000
*             5 * BIT(5),                                               03760000
*           3 UCBCLASS CHAR(1),    /* DEVICE CLASS.             S21052* 03770000
*           3 UCBTYPE CHAR(1);     /* DEVICE TYPE.              S21052* 03780000
*                                                                       03790000
*                                                                       03800000
*         /*          LOADED CDS ENTRY FORMAT                   S21052* 03810000
*         DCL 1 CDSENTRY CHAR(20) BASED(R1),                            03820000
*           3 * CHAR(4),                                                03830000
*           3 DSCRPTRS CHAR(4);    /* CDS DEVICE DESCRIPTORS.   S21052* 03840000
*         RESTRICT(R1,R2,R3,R4,R5,GOODENT,UCBLOOK,DEVTABPT,R9);         03850000
*         /************************************************************ 03860000
*         /*                                                    S21052* 03870000
*         /*                   PERFORM INITIALIZATION           S21052* 03880000
*         /*                                                    S21052* 03890000
*         /************************************************************ 03900000
*                                                                       03910000
*         R4=ADDR(IFDMSG61);       /*POINTER TO MESSAGE MODULE. S21052* 03920000
         L     @C,@V1              ADDRESS OF IFDMSG61            0085  03930000
         LR    @4,@C                                              0085  03940000
*         R5=INBUFPTR;             /* POINTER TO INPUTBUFFER.   S21052* 03950000
         L     @5,INBUFPTR                                        0086  03960000
*         X=0;                     /* INIT DEVICE COUNTER.      S21052* 03970000
         SR    @F,@F                                              0087  03980000
         STH   @F,X                                               0087  03990000
*         SECDVPTR=0;              /* INIT LAST GRABBED DEVICE. S21052* 04000000
         ST    @F,SECDVPTR                                        0088  04010000
*         LEGALDEV='0'B;           /* TURN OFF VALID DEV ENTRY FLG      04020000
*                                                               S21052* 04030000
         NI    OLTEPSW,B'11110111'                                0089  04040000
*         ONLINETP='00'B;          /* ONLINEOK,TP FLAGS OFF.    S21052* 04050000
         NI    OLTEPSW1,B'11111100'                               0090  04060000
*         REINT='1'B;              /* TURN ON REINITIAL FLAG.   S21052* 04070000
         OI    OLTEPSW,B'00000100'                                0091  04080000
*         LIMIT=16-UNICTR;         /* CALC UNUSED DEVICE TABLES.S21052* 04090000
         LA    @F,16                                              0092  04100000
         SR    @0,@0                                              0092  04110000
         IC    @0,UNICTR                                          0092  04120000
         SR    @F,@0                                              0092  04130000
         STH   @F,LIMIT                                           0092  04140000
*                                                                       04150000
*         /*          IF RETAIN IS ACTIVE THEN SET NO REMOTE MSG FLAG * 04160000
*         IF RETAINAC='1'B THEN         /* IS  REI  ACTIVE?     S21052* 04170000
         TM    A00012,B'10000000'                                 0093  04180000
         BC    12,@9FF                                            0093  04190000
*         DPMSGREI='1'B;                /* REM SITE GETS MSG    XM0097* 04200000
         OI    A00014,B'00000001'                                 0094  04210000
*                                                                       04220000
*         /*          RETURN FROM IFDOLT31 INDICATED            S21052* 04230000
*         IF RETTO31='1'B THEN     /* SECOND TIME ENTERED.      S21052* 04240000
@9FF     TM    OLTEPSW7,B'01000000'                               0095  04250000
         BC    12,@9FE                                            0095  04260000
*          DO;                     /* YES, RESTORE OLD VALUES.  S21052* 04270000
*           DEVTABPT=DEVTBPTR+(SAVECNT*TABLNGTH);                       04280000
         LH    @E,TABLNGTH                                        0097  04290000
         MH    @E,SAVECNT                                         0097  04300000
         A     @E,DEVTBPTR                                        0097  04310000
         LR    @8,@E                                              0097  04320000
*           AVAILBLE=DEVTABPT;     /* LOCATE DEVICE TABLES.     S21052* 04330000
         ST    @8,AVAILBLE                                        0098  04340000
*           GOODENT=SAVECNT;       /* REINIT GOOD ENTRIES COUNTES21052* 04350000
         LH    @6,SAVECNT                                         0099  04360000
*           X=SAVECNT;             /* REINIT MISC COUNTER.      S21052* 04370000
         MVC   X(2),SAVECNT                                       0100  04380000
*           GO TO CECDEV00;        /* CHECK DE5ICE 23A342.      S21052* 04390000
         BC    15,CECDEV00                                        0101  04400000
*          END;                                                         04410000
*         GOODENT=0;               /* INIT VALID ENTRIES COUNTER.       04420000
*                                                               S21052* 04430000
@9FE     SR    @6,@6                                              0103  04440000
*         DEVTABPT=DEVTBPTR;       /* INITIALIZE DEVICE TABLE PTR       04450000
*                                                               S21052* 04460000
         L     @8,DEVTBPTR                                        0104  04470000
*         AVAILBLE=DEVTABPT;       /* NEXT AVAILABLE DEV TABLE. S21052* 04480000
         ST    @8,AVAILBLE                                        0105  04490000
*                                                                       04500000
*                                                                       04510000
* CECDEV00:                             /*                      S21052* 04520000
*                                                                       04530000
*         /************************************************************ 04540000
*         /*                                                    S21052* 04550000
*         /*                ON-LINE / OFF-LINE CHECK            S21052* 04560000
*         /*                                                    S21052* 04570000
*         /************************************************************ 04580000
*                                                                       04590000
*         /*          LOCAL OR REMOTE ANR DEVICE IN SYSTEM      S21052* 04600000
*         IF ANRNOTST='1'B |       /* ANR DEV OK TO TEST       XA00530* 04610000
*            NOTEST='1'B THEN      /* IS DEVICE TESTABLE?      XA00530* 04620000
CECDEV00 TM    14(@8),B'10000000'                                 0106  04630000
         BC    01,@9FD                                            0106  04640000
         TM    14(@8),B'00001000'                                 0106  04650000
         BC    12,@9FC                                            0106  04660000
*           GO TO CECDEV14;        /* NO, NOT A VALID ENTRY.   XA00530* 04670000
         BC    03,CECDEV14                                        0107  04680000
*                                                                       04690000
*         /*          CHECK DEVICE ON LINE STATUS               S21052* 04700000
*         IF ONOFF='1'B THEN       /* IS DEVICE ONLINE.         S21052* 04710000
@9FC     TM    12(@8),B'10000000'                                 0108  04720000
*           GO TO CECDEV04;        /* YES, CHECK DEVICE CLASS.  S21052* 04730000
         BC    01,CECDEV04                                        0109  04740000
*         IF SYSALLOC='1'B THEN    /* DEV ALLOCATED? CHK CLASS XA00530* 04750000
         TM    14(@8),B'00000100'                                 0110  04760000
*           GO TO CECDEV04;        /* GO DO IT.                XA00530* 04770000
         BC    01,CECDEV04                                        0111  04780000
*                                                                       04790000
*         /*          CHECK FOR GRAPHICS 2250 DEVICE--CLASS     S21052* 04800000
*         IF UCBCLASS¬='10'X       /* NO, IS IT GRAPHICS.       S21052* 04810000
*           THEN                   /* YES                       S21052* 04820000
         MVC   @TEMP4(4),8(@8)                                    0112  04830000
         L     @C,@TEMP4                                          0112  04840000
         CLI   18(@C),X'10'                                       0112  04850000
*           GO TO CECDEV10;        /* GO TO PUSH UP ROUTINE.    S21052* 04860000
         BC    07,CECDEV10                                        0113  04870000
*                                                                       04880000
*         /*          CHECK FOR GRAPHICS 2250 DEVICE--TYPE      S21052* 04890000
*         IF UCBTYPE¬='02'X        /* YES, IS IT A 2250.        S21052* 04900000
*           THEN                   /* YES                       S21052* 04910000
         CLI   19(@C),X'02'                                       0114  04920000
*           GO TO CECDEV10;        /* NO, CONTINUE CLASSIFICATION.      04930000
*                                                               S21052* 04940000
         BC    07,CECDEV10                                        0115  04950000
*                                                                       04960000
*         /*          CHECK FOR GRAPHICS 2250 DEVICE--MODEL     S21052* 04970000
*         IF UCBMODEL='31'X        /* YES, IT IS A MODEL 1.     S21052* 04980000
*           THEN                   /* YES                       S21052* 04990000
         CLI   16(@C),X'31'                                       0116  05000000
*           GO TO CECDEV10;        /* YES, TO TO PUSH UP ROUTINE.       05010000
*                                                               S21052* 05020000
         BC    08,CECDEV10                                        0117  05030000
*         GRAPHICS=GRAPHICS&&GRAPHICS;                                  05040000
         XC    GRAPHICS(56),GRAPHICS                              0118  05050000
*         EBADDR=DEVADDR;          /* SAVE GRAPHICS DEVICE ADDR.S21052* 05060000
         MVC   GRAPHICS(8),0(@8)                                  0119  05070000
*         ADDRDEV=ADDR(GRAPHICS);  /* FILL SVC 59 POINTER.      S21052* 05080000
         LA    @F,GRAPHICS                                        0120  05090000
         ST    @F,SVCPLIST+4                                      0120  05100000
*         ENTRIES=1;               /* CHECK ONE ENTRY AT A TIME.S21052* 05110000
         LA    @F,1                                               0121  05120000
         ST    @F,SVCPLIST+8                                      0121  05130000
*         R9=ADDR(NUMBERS);        /* GET PTR TO NUMBER TABLE.  S21052* 05140000
         LA    @9,NUMBERS                                         0122  05150000
*         /*          CHECK ALL DEVICES ON GRAPHICS CONTROL UNITS21052* 05160000
*         DO X1=16 TO 1                                                 05170000
*          BY -1;                  /* CHECK CU LINE STATUS.     S21052* 05180000
         LA    @F,16                                              0123  05190000
         STH   @F,X1                                              0123  05200000
*          DEVICE=NUMBER;          /* PUT NUMBER IN DEV ADDR.   S21052* 05210000
@DO9FB   MVC   GRAPHICS+7(1),0(@9)                                0124  05220000
*          RESTRICT(R1);           /* RESTRICT REG FOR COMPUTATION.     05230000
*                                                               S21052* 05240000
*          R1=64;                  /* SVC 59 CALLING CODE.      S21052* 05250000
         LA    @1,64                                              0126  05260000
*          R0=ADDR(ADDRDEV);       /* PARAMETER LIST IN REG 0.  S21052* 05270000
         LA    @0,SVCPLIST+4                                      0127  05280000
*          RELEASE(R1);            /* RELEASE REG FOR FURTHER USE       05290000
*                                                               S21052* 05300000
*          GEN(SVC  59);           /* SVC 59 FOR UCB LOOKUP.    S21052* 05310000
         SVC  59                                                        05320000
         DS    0H                                                       05330000
*                                                                       05340000
*          /*         IS GRAPHICS DEVICE ONLINE                 S21052* 05350000
*          IF OFF='1'B THEN        /* IS DEVICE OFFLINE.        S21052* 05360000
         TM    GRAPHICS+12,B'10000000'                            0130  05370000
         BC    12,@9F7                                            0130  05380000
*           DO;                    /* YES, CHECK NEXT DEVICE.   S21052* 05390000
*                                                                       05400000
*            /*       GRAPHICS DEVICE CHECK MADE HERE           S21052* 05410000
*            IF GRAPHICS(6)¬='10'X                                      05420000
*             THEN                 /* CHECK FOR                 S21052* 05430000
         CLI   GRAPHICS+5,X'10'                                   0132  05440000
*             GO TO CECDEV02;      /* NOT GRAPHICS,CHECK NEXT DEV       05450000
*                                                               S21052* 05460000
         BC    07,CECDEV02                                        0133  05470000
*                                                                       05480000
*            /*       GRAPHICS DEVICE CHECK MADE HERE           S21052* 05490000
*            IF GRAPHICS(7)¬='02'X                                      05500000
*             THEN                 /* CONTINUE,                 S21052* 05510000
         CLI   GRAPHICS+6,X'02'                                   0134  05520000
*             GO TO CECDEV02;      /* CHECK NEXT CU DEVICE.     S21052* 05530000
         BC    07,CECDEV02                                        0135  05540000
*                                                                       05550000
*            /*       GRAPHICS DEVICE CHECK MADE HERE           S21052* 05560000
*            IF GRAPHICS(5)='31'X                                       05570000
*             THEN                 /* CONTINUE,                 S21052* 05580000
         CLI   GRAPHICS+4,X'31'                                   0136  05590000
*             GO TO CECDEV02;      /* CHECK NEXT CU DEVICE.     S21052* 05600000
         BC    08,CECDEV02                                        0137  05610000
*            R1=MSGPTR14;          /* PRINT ERROR MESSAGE.      S21052* 05620000
         L     @1,12(0,@4)                                        0138  05630000
*            GEN(PWTO REG=(R1));                                        05640000
         PWTO REG=(R1)                                                  05650000
         DS    0H                                                       05660000
*            GO TO CECDEV26;       /* GO AND REDEFINE TEST.     S21052* 05670000
         BC    15,CECDEV26                                        0140  05680000
*           END;                                                        05690000
*                                                                       05700000
*                                                                       05710000
* CECDEV02:                        /*                           S21052* 05720000
*                                                                       05730000
*          GRAPHICS(4:16)=GRAPHICS(4:16)&&GRAPHICS                      05740000
*           (4:16);                /* CLEAR DEVICE TABLE AREA.  S21052* 05750000
@9F7     EQU   *                                                  0142  05760000
CECDEV02 XC    GRAPHICS+3(13),GRAPHICS+3                          0142  05770000
*          R9=R9+1;                /* POINT TO NEXT NUMBER.     S21052* 05780000
         LA    @9,1(0,@9)                                         0143  05790000
*         END;                     /* END GRAPHICS LOOP.        S21052* 05800000
*         GO TO CECDEV10;          /* GO TO DEV TAB PUSH UP ROUTN.      05810000
*                                                               S21052* 05820000
         LH    @F,X1                                              0144  05830000
         BCTR  @F,0                                               0144  05840000
@DO9FA   STH   @F,X1                                              0144  05850000
         CH    @F,@D1                                             0144  05860000
         BC    10,@DO9FB                                          0144  05870000
         BC    15,CECDEV10                                        0145  05880000
*                                                                       05890000
*                                                                       05900000
* CECDEV04:                             /*                      S21052* 05910000
*                                                                       05920000
*         /************************************************************ 05930000
*         /*          ONLINE ALLOCATION CHECKS                 XA00530* 05940000
*         /************************************************************ 05950000
*                                                                       05960000
*         /*          REMOTE TELEPROCESSING DEVICE ENTERED      S21052* 05970000
*         IF REMLINE='1'B THEN     /* IF REMOTE DEVICE IS NOT OFS21052* 05980000
CECDEV04 TM    41(@8),B'00000001'                                 0146  05990000
*           GO TO CECDEV06;        /* LINE, CAN'T TEST. PRINT MSG       06000000
*                                                               S21052* 06010000
         BC    01,CECDEV06                                        0147  06020000
*                                                                       06030000
*         /*          CHECK ANR DEVICE CLASS & TYPE             S21052* 06040000
*         IF UCBCLASS='10'X &      /* IF ANR DEVICE IS ONLINE,  S21052* 06050000
*            UCBTYPE>'08'X &               /* ANR DEVICE?      XA00530* 06060000
*            UCBTYPE<'0C'X THEN    /* WITHIN RANGE OF TYPES?   XA00530* 06070000
         MVC   @TEMP4(4),8(@8)                                    0148  06080000
         L     @1,@TEMP4                                          0148  06090000
         CLI   18(@1),X'10'                                       0148  06100000
         BC    07,@9F6                                            0148  06110000
         CLI   19(@1),X'08'                                       0148  06120000
         BC    12,@9F5                                            0148  06130000
         CLI   19(@1),X'0C'                                       0148  06140000
*              GO TO CECDEV10;     /* LOCAL 3270 DEVICE.       XA00530* 06150000
         BC    05,CECDEV10                                        0149  06160000
*         /*          CLASS 40 RESERVED FOR TELECOMMUNICATIONS DEVICES  06170000
*                                                               S21052* 06180000
*         IF UCBCLASS='40'X THEN   /* IS IT TELECOMMUNICATIONS. S21052* 06190000
@9F4     EQU   *                                                  0150  06200000
@9F5     EQU   *                                                  0150  06210000
@9F6     MVC   @TEMP4(4),8(@8)                                    0150  06220000
         L     @1,@TEMP4                                          0150  06230000
         CLI   18(@1),X'40'                                       0150  06240000
*           GO TO CECDEV06;        /* ONLINE ALLOCATED TP DEV           06250000
*                                                               S21052* 06260000
         BC    08,CECDEV06                                        0151  06270000
*                                                                       06280000
*         /*          CHECK FOR DASD DEVICES                    S21052* 06290000
*         IF UCBCLASS='20'X THEN    /* IS IT DASD?            @Y30LPAW* 06300000
         CLI   18(@1),X'20'                                       0152  06310000
*            GOTO CECDEV10;         /* YES,GO AROUND          @Y30LPAW* 06320000
         BC    08,CECDEV10                                        0153  06330000
*         IF UCBCLASS = '08'X &    /*  IS IT                  @ZA02796* 06340000
*             UCBTYPE = '42'X THEN /*        MSC?             @ZA02796* 06350000
         CLI   18(@1),X'08'                                       0154  06360000
         BC    07,@9F3                                            0154  06370000
         CLI   19(@1),X'42'                                       0154  06380000
*                 GOTO CECDEV10;    /* YES,GO AROUND          @Y30LPAW* 06390000
         BC    08,CECDEV10                                        0155  06400000
* CECDEV06:                             /*                      S21052* 06410000
*                                                                       06420000
*         /************************************************************ 06430000
*         /*                 PRINT MESSAGE IFD109I              S21052* 06440000
*         /************************************************************ 06450000
*                                                                       06460000
*                                                                       06470000
*         R1=MSGPTR09;             /* GET POINTER TO MESSAGE 109S21052* 06480000
@9F2     EQU   *                                                  0156  06490000
@9F3     EQU   *                                                  0156  06500000
CECDEV06 L     @1,0(0,@4)                                         0156  06510000
*         MSG109I(1:8)=DEVADDR;                                         06520000
         MVC   12(8,@1),0(@8)                                     0157  06530000
*         IF ONOFF='1'B             /* ONLINE DEVICE?          XA00530* 06540000
*          THEN                                                         06550000
         TM    12(@8),B'10000000'                                 0158  06560000
         BC    12,@9F1                                            0158  06570000
*            MSG109I(10:17)='ONLINE ,';  /* DEV ONLINE IN MSG  XA00530* 06580000
         MVC   21(8,@1),@C12                                      0159  06590000
         BC    15,@9F0                                            0160  06600000
*          ELSE                                                         06610000
*            MSG109I(10:17)='OFFLINE,';  /* DEV OFFLINE IN MSG XA00530* 06620000
@9F1     MVC   21(8,@1),@C13                                      0160  06630000
*         IF SYSALLOC='1'B         /*  IS DEV ALLOCATED?       XA00530* 06640000
*          THEN                                                         06650000
@9F0     TM    14(@8),B'00000100'                                 0161  06660000
         BC    12,@9EF                                            0161  06670000
*           MSG109I(18:28)='ALLOCATED  ';  /* ALLOCATED IN MSG.XA00530* 06680000
         MVC   29(11,@1),@C14                                     0162  06690000
         BC    15,@9EE                                            0163  06700000
*          ELSE                                                         06710000
*           MSG109I(18:28)='UNALLOCATED';  /* UNALLOCATED IN MSG.     * 06720000
@9EF     MVC   29(11,@1),@C15                                     0163  06730000
*         GEN( PWTO REG=(R1));          /* ISSUE MESSAGE 109I  XA00530* 06740000
@9EE     EQU   *                                                  0164  06750000
          PWTO REG=(R1)                                                 06760000
         DS    0H                                                       06770000
*         DEVTABXX=DEVTABXX                                             06780000
*          &&DEVTABXX;             /* CLEAR DEVICE TABLE.       S21052* 06790000
         XC    0(56,@8),0(@8)                                     0165  06800000
*         GO TO CECDEV14;          /* SKIP ENTRY.               S21052* 06810000
         BC    15,CECDEV14                                        0166  06820000
*                                                                       06830000
*                                                                       06840000
* CECDEV10:                             /*                      S21052* 06850000
*                                                                       06860000
*         /************************************************************ 06870000
*         /*                                                    S21052* 06880000
*         /*          FIND LOCAL DEVICE CDS INFORMATION         S21052* 06890000
*         /*                                                    S21052* 06900000
*         /************************************************************ 06910000
*                                                                       06920000
*         IF SYMDEVIC='1'B THEN    /* SYMBOLIC DEVS ALREADY HAVES21052* 06930000
CECDEV10 TM    41(@8),B'00001000'                                 0167  06940000
*            GO TO CECDEV12;       /* CDS LOADED. MAKE DEVTAB CHK       06950000
*                                                               S21052* 06960000
         BC    01,CECDEV12                                        0168  06970000
*                                                                       06980000
*         /*          CHECK IF .CHXXXXXX DEVICE  ENTERED        S21052* 06990000
*         IF CHANTEST='1'B THEN    /* CHANNEL TESTS ALREADY HAVES21052* 07000000
         TM    OLTEPSW2,B'00010000'                               0169  07010000
*           GO TO CECDEV12;        /* CDS INFORMATION LOADED.   S21052* 07020000
         BC    01,CECDEV12                                        0170  07030000
*         CDSDEV=DEVADDR(2:8);                                          07040000
         MVC   PARMLIST+1(7),1(@8)                                0171  07050000
*         TARGETAD=DEVTABPT+32;                                         07060000
         LA    @F,32                                              0172  07070000
         AR    @F,@8                                              0172  07080000
         ST    @F,PARMLIST+8                                      0172  07090000
*         PARMFLGS='60'X;                                               07100000
         MVI   PARMLIST+12,X'60'                                  0173  07110000
*         CDSLNGTH='14'X;                                               07120000
         LA    @F,X'14'                                           0174  07130000
         STH   @F,PARMLIST+14                                     0174  07140000
*         GEN(IFDMOD  CALL='12',LIST=PARMLIST);                         07150000
         IFDMOD  CALL='12',LIST=PARMLIST                                07160000
         DS    0H                                                       07170000
*         R1=RC;                                                        07180000
         LR    @1,@F                                              0176  07190000
*         IF R1>0 THEN                                                  07200000
         LTR   @1,@1                                              0177  07210000
         BC    12,@9ED                                            0177  07220000
*          DO;                                                          07230000
*           CDSDVDSC=CDSDVDSC&&CDSDVDSC;                                07240000
         XC    36(4,@8),36(@8)                                    0179  07250000
*           RESTRICT(1);                                                07260000
*           R1=MSGPTR27;                                                07270000
         L     @1,16(0,@4)                                        0181  07280000
*           MSG127I(12:19)=MODNAME;                                     07290000
         MVC   23(8,@1),PARMLIST                                  0182  07300000
*         MSG127I(12)='F0'X;            /* ZERO OUT 'G' FOR MSG X03008* 07310000
         MVI   23(@1),X'F0'                                       0183  07320000
*         GEN(PWTO REG=(1));                                            07330000
         PWTO REG=(1)                                                   07340000
         DS    0H                                                       07350000
*           RELEASE(1);                                                 07360000
*           COUNT=72;                                        /*XA00530* 07370000
         LA    @F,72                                              0186  07380000
         STH   @F,COUNT                                           0186  07390000
*           DO I=1 TO COUNT BY +1;                           /*XA00530* 07400000
         LA    @F,1                                               0187  07410000
         BC    15,@DO9EB                                          0187  07420000
*             IF INPUTBUF(I)='/' THEN                                   07430000
@DO9EC   LH    @1,I                                               0188  07440000
         LA    @A,0(@1,@5)                                        0188  07450000
         BCTR  @A,0                                               0188  07460000
         CLI   0(@A),C'/'                                         0188  07470000
*              GO TO CECDV10A;                                          07480000
         BC    08,CECDV10A                                        0189  07490000
*            END;                                                       07500000
* CECDV10A:                                                             07510000
*           I=I+1;                                                      07520000
         LH    @F,I                                               0190  07530000
         AH    @F,@D1                                             0190  07540000
@DO9EB   STH   @F,I                                               0190  07550000
         CH    @F,COUNT                                           0190  07560000
         BC    12,@DO9EC                                          0190  07570000
CECDV10A LA    @F,1                                               0191  07580000
         AH    @F,I                                               0191  07590000
         STH   @F,I                                               0191  07600000
*           IF INPUTBUF(I)='T' THEN                                     07610000
         LR    @1,@F                                              0192  07620000
         LA    @A,0(@1,@5)                                        0192  07630000
         BCTR  @A,0                                               0192  07640000
         CLI   0(@A),C'T'                                         0192  07650000
         BC    07,@9E8                                            0192  07660000
*            I=I+1;                                                     07670000
         LA    @F,1                                               0193  07680000
         AH    @F,I                                               0193  07690000
         STH   @F,I                                               0193  07700000
*           IF INPUTBUF(I:I+5)='SOSPC/'           /*          @ZA29758* 07710000
*             THEN                                                      07720000
@9E8     LH    @1,I                                               0194  07730000
         LA    @A,0(@1,@5)                                        0194  07740000
         BCTR  @A,0                                               0194  07750000
         CLC   0(6,@A),@C21                                       0194  07760000
         BC    07,@9E7                                            0194  07770000
*              DO;                      /* SOSP ENTERED        XA01010* 07780000
*               CDSDVDSC=UCBDVDSC;      /* INIT DV DSCRPT      XA01010* 07790000
         MVC   @TEMP4(4),8(@8)                                    0196  07800000
         L     @C,@TEMP4                                          0196  07810000
         MVC   36(4,@8),16(@C)                                    0196  07820000
*               IF SHAREDDV='1'B &      /* IF DASD SHAREABLE   XA01010* 07830000
*                UCBCLASS='20'X         /* DASD CLASS DEV      XA01010* 07840000
*                THEN                   /* THEN TURN ON        XA01010* 07850000
         MVC   @TEMP4(4),8(@8)                                    0197  07860000
         L     @C,@TEMP4                                          0197  07870000
         TM    17(@C),B'00100000'                                 0197  07880000
         BC    12,@9E6                                            0197  07890000
         CLI   18(@C),X'20'                                       0197  07900000
         BC    07,@9E5                                            0197  07910000
*                 CDSFLAGS=CDSFLAGS|'40'X; /* SHARED FLG IN CDSXA01010* 07920000
         OI    41(@8),X'40'                                       0198  07930000
*               GO TO CECDEV12;                                         07940000
         BC    15,CECDEV12                                        0199  07950000
*              END;                                                     07960000
*           GO TO CECDEV14;                                             07970000
*          END;                                                         07980000
* CECDEV12:                             /*                      S21052* 07990000
*                                                                       08000000
*         /************************************************************ 08010000
*         /*                                                    S21052* 08020000
*         /*          ROUTINE TO REMOVE INVALID DEVICE TABLES   S21052* 08030000
*         /*                                                    S21052* 08040000
*         /************************************************************ 08050000
*                                                                       08060000
*         GOODENT=GOODENT+1;       /* INCREMENT VALID EN3R8 CN3R.       08070000
*                                                               S21052* 08080000
@9ED     EQU   *                                                  0203  08090000
CECDEV12 AH    @6,@D1                                             0203  08100000
*         DEVTABLE=DEVTABXX;       /* ADDRESS AVAILABLE DEV TAB.S21052* 08110000
         L     @1,AVAILBLE                                        0204  08120000
         MVC   0(56,@1),0(@8)                                     0204  08130000
*                                                                       08140000
*         /*          CHECK IF LAST FILLED DEV TAB WAS PROPER ONE       08150000
*                                                               S21052* 08160000
*                                                                       08170000
*         IF AVAILBLE¬=DEVTABPT    /* IS CORRECT DEV TAB FILLED S21052* 08180000
*           THEN                   /* NO, CLEAR INVALID DEVICE TABLE.   08190000
*                                                               S21052* 08200000
         C     @8,AVAILBLE                                        0205  08210000
         BC    08,@9E4                                            0205  08220000
*           DEVTABXX=DEVTABXX&&                                         08230000
*            DEVTABXX;             /* CLEAR OUT DEVICE TABLE.   S21052* 08240000
         XC    0(56,@8),0(@8)                                     0206  08250000
*         AVAILBLE=AVAILBLE+TABLNGTH;                                   08260000
@9E4     LH    @F,TABLNGTH                                        0207  08270000
         A     @F,AVAILBLE                                        0207  08280000
         ST    @F,AVAILBLE                                        0207  08290000
*                                                                       08300000
*                                                                       08310000
* CECDV12A:                        /*                           S21052* 08320000
*                                                                       08330000
*         /************************************************************ 08340000
*         /*                                                    S21052* 08350000
*         /*          CHECK CONTROL UNIT LINES                  S21052* 08360000
*         /*                                                    S21052* 08370000
*         /************************************************************ 08380000
*                                                                       08390000
*                                                                       08400000
*         /*          IS THIS A CONTROL UNIT TEST               S21052* 08410000
*         IF TPSAVE(1:3)¬='270'                                         08420000
*           THEN                   /* 2701,2702,2703 C U TEST   S21052* 08430000
CECDV12A CLC   TPSAVE(3),@C22                                     0208  08440000
*           GO TO CECDEV14;        /* NOT A 2701,2702,2703 TEST.S21052* 08450000
         BC    07,CECDEV14                                        0209  08460000
*                                                                       08470000
*         /*          IS THIS A 2701 CONTROL UNIT TEST          S21052* 08480000
*         IF TPSAVE3='1' THEN      /* IS IT A 2701 TEST.        S21052* 08490000
         CLI   TPSAV+3,C'1'                                       0210  08500000
*           GO TO CECDEV14;        /* YES, CONTINUE CHECKS.     S21052* 08510000
         BC    08,CECDEV14                                        0211  08520000
*                                                                       08530000
*         /*          HAVE ANY VALID DEVICES BEEN DECODED YET   S21052* 08540000
*         IF GOODENT=0 THEN        /* NO VALID ENTRY MADE, END  S21052* 08550000
         LTR   @6,@6                                              0212  08560000
*           GO TO CECDEV20;        /* THIS D/T/O/ ENTRY.        S21052* 08570000
         BC    08,CECDEV20                                        0213  08580000
*                                                                       08590000
*                                                                       08600000
* CECDEV14:                        /*                           S21052* 08610000
*                                                                       08620000
*         /************************************************************ 08630000
*         /*                                                    S21052* 08640000
*         /*          CHECK FOR MORE OUTSTANDING DEVICES        S21052* 08650000
*         /************************************************************ 08660000
*                                                                       08670000
*         X=X+1;                   /* INCREMENT DEV TAB COUNTER.S21052* 08680000
CECDEV14 LA    @F,1                                               0214  08690000
         AH    @F,X                                               0214  08700000
         STH   @F,X                                               0214  08710000
*         DEVTABPT=DEVTABPT+TABLNGTH;                                   08720000
         AH    @8,TABLNGTH                                        0215  08730000
*                                                                       08740000
*         /*          CHECK DEVICE COUNTER IN COMMON AREA       S21052* 08750000
*         IF X¬=UNICTR  THEN       /* ARE ALL DEVICES CHECKED.  S21052* 08760000
         SR    @F,@F                                              0216  08770000
         IC    @F,UNICTR                                          0216  08780000
         CH    @F,X                                               0216  08790000
*           GO TO CECDEV00;        /* NO, LOOP.  YES, CONTINUE. S21052* 08800000
         BC    07,CECDEV00                                        0217  08810000
*                                                                       08820000
*         /*          CHECK FOR ANY DEVS FOUND ONLINE & DEV TABS FULL   08830000
*                                                               S21052* 08840000
*         IF UNICTR=16 &           /* FORMER VALID ENTRY FOUND OS21052* 08850000
*           GOODENT<16 THEN        /* LINE, RESET VARIABLES AND S21052* 08860000
         CLI   UNICTR,16                                          0218  08870000
         BC    07,@9E3                                            0218  08880000
         CH    @6,@D2                                             0218  08890000
         BC    10,@9E2                                            0218  08900000
*          DO;                     /* CONTINUE B8               S21052* 08910000
*           SAVECNT=GOODENT;       /* RETURN TO IFDOLT31.       S21052* 08920000
         STH   @6,SAVECNT                                         0220  08930000
*           UNICTR=GOODENT;        /* SAVE GOOD ENTRIES  TO DATES21052* 08940000
         ST    @6,@TEMP4                                          0221  08950000
         MVC   UNICTR(1),@TEMP4                                   0221  08960000
*           RETTO31='1'B;          /* SET RETURN FLAG.          S21052* 08970000
         OI    OLTEPSW7,B'01000000'                               0222  08980000
*           GO TO CECDEV28;        /* RETURN POINT .            S21052* 08990000
         BC    15,CECDEV28                                        0223  09000000
*          END;                                                         09010000
*         RETTO31='0'B;            /* DON'T RETURN TO IFDOLT31. S21052* 09020000
@9E2     EQU   *                                                  0225  09030000
@9E3     NI    OLTEPSW7,B'00111111'                               0225  09040000
*         INCLST='0'B;             /* END OF INCLUSIVE SERIES.  S21052* 09050000
*                                                                       09060000
*         /*          ARE ALL DEV TABS FILLED WITH VALID DEVICESS21052* 09070000
*         IF GOODENT=16 THEN       /* ARE THERE 16 GOOD ENTRIES.S21052* 09080000
         CH    @6,@D2                                             0227  09090000
         BC    07,@9E1                                            0227  09100000
*          DO;                     /* YES,                      S21052* 09110000
*           R1=MSGPTR10;           /* GET POINTER TO MESSAGE.   S21052* 09120000
         L     @1,4(0,@4)                                         0229  09130000
*           GEN(PWTO  REG=(1));                                         09140000
         PWTO  REG=(1)                                                  09150000
         DS    0H                                                       09160000
*                                                                       09170000
*                                                                       09180000
* CECDEV16:                        /*                           S21052* 09190000
*                                                                       09200000
*         /************************************************************ 09210000
*         /*                                                    S21052* 09220000
*         /*                     FIND SLASH DELIMITER           S21052* 09230000
*         /*                                                    S21052* 09240000
*         /************************************************************ 09250000
*                                                                       09260000
*           /*        CHECK FOR END OF INPUT BUFFER             S21052* 09270000
*           IF INPUTBUF(1)='/'                                          09280000
*             THEN                 /* SLASH DELIMETER PRESENT.  S21052* 09290000
CECDEV16 CLI   0(@5),C'/'                                         0231  09300000
*             GO TO CECDEV22;      /* YES, A SLASH. GO TO EXIT. S21052* 09310000
         BC    08,CECDEV22                                        0232  09320000
*           R5=R5+1;               /* INCREMENT BUFFER POINTER. S21052* 09330000
         AH    @5,@D1                                             0233  09340000
*           GO TO CECDEV16;        /* LOOP UNTIL SLASH FOUND.   S21052* 09350000
         BC    15,CECDEV16                                        0234  09360000
*          END;                    /* END 16 GOOD ENTRIES LOOP. S21052* 09370000
*         X=0;                     /* SET DEV TAB CNTR TO ZERO. S21052* 09380000
@9E1     SR    @F,@F                                              0236  09390000
         STH   @F,X                                               0236  09400000
*         DEVTABPT=AVAILBLE;       /* PTR TO NEXT AVAILABLE DEV.S21052* 09410000
         L     @8,AVAILBLE                                        0237  09420000
*         LIMIT=16-GOODENT;        /* FIND NEW DEV TAB LIMIT.   S21052* 09430000
         LA    @F,16                                              0238  09440000
         SR    @F,@6                                              0238  09450000
         STH   @F,LIMIT                                           0238  09460000
*                                                                       09470000
*                                                                       09480000
*         /************************************************************ 09490000
*         /*                                                          * 09500000
*         /*          CHECK FOR DEV UCB/CDS CLASS & TYPE DIFFERENCES  * 09510000
*         /*                                                    X02906* 09520000
*         /************************************************************ 09530000
*                                                                       09540000
*         DEVTABPT=DEVTBPTR;            /* ADDRESS FIRST DEVTAB X02906* 09550000
         L     @8,DEVTBPTR                                        0239  09560000
*         ERRORTAB=0;                   /* CLEAR ERROR TABLE CTRX02906* 09570000
         SR    @F,@F                                              0240  09580000
         STH   @F,ERRORTAB                                        0240  09590000
*                                                                       09600000
*         DO I=1 TO GOODENT BY +1;      /* SEARCH ALL DEV TABLESX02906* 09610000
         LA    @F,1                                               0241  09620000
         BC    15,@DO9DF                                          0241  09630000
*                                                                       09640000
*          /*         ARE CDS/UCB CLASS VALUES EQUAL?           X02906* 09650000
*                                                                       09660000
*          IF UCBCLASS¬=CLASS THEN      /* ARE CLASSES EQUAL?   X02906* 09670000
@DO9E0   MVC   @TEMP4(4),8(@8)                                    0242  09680000
         L     @1,@TEMP4                                          0242  09690000
         CLC   18(1,@1),38(@8)                                    0242  09700000
         BC    08,@9DC                                            0242  09710000
*                                                                       09720000
*           DO;                         /* NO, MAKE SPECIAL CHK X02906* 09730000
*                                                                       09740000
*            /*       CHECK FOR SYSTEM 7 DEVICE.                X02906* 09750000
*            IF CLASS='02'X &                                           09760000
*             TYPE='01'X THEN           /* SYS 7 CLASS/TYPE?    X02906* 09770000
         CLI   38(@8),X'02'                                       0244  09780000
         BC    07,@9DB                                            0244  09790000
         CLI   39(@8),X'01'                                       0244  09800000
*             GO TO CECDV18A;           /* OK, NOT IN ERROR     X02906* 09810000
         BC    08,CECDV18A                                        0245  09820000
*                                                                       09830000
*            /* IS THIS A TELECOMMUNICATIONS REMOTE DEVICE      X02906* 09840000
*                                                                       09850000
*          TPCLASS =CLASS & 'F0'X;      /* MASK FOR TP CLASS  @ZA09697* 09860000
@9DA     EQU   *                                                  0246  09870000
@9DB     LA    @F,X'F0'                                           0246  09880000
         SR    @0,@0                                              0246  09890000
         IC    @0,38(0,@8)                                        0246  09900000
         NR    @F,@0                                              0246  09910000
         ST    @F,TPCLASS                                         0246  09920000
*          IF TPCLASS = '40'X &         /* CDS CLASS TP &     @ZA09697* 09930000
*             UCBCLASS='40'X THEN       /* UCB CLASS FOR LINE   X02906* 09940000
         LA    @F,X'40'                                           0247  09950000
         C     @F,TPCLASS                                         0247  09960000
         BC    07,@9D9                                            0247  09970000
         MVC   @TEMP4(4),8(@8)                                    0247  09980000
         L     @1,@TEMP4                                          0247  09990000
         CLI   18(@1),X'40'                                       0247  10000000
*             GO TO CECDV18A;           /* OK, NOT IN ERROR     X02906* 10010000
         BC    08,CECDV18A                                        0248  10020000
*                                                                       10030000
*            /*       ERROR IN CLASS MATCHING, OUTPUT MSG IFD154I     * 10040000
*                                                                       10050000
*            RESTRICT(1);                                               10060000
@9D8     EQU   *                                                  0249  10070000
*            R1=MSGPTR54;               /* ADDRESS MESSAGE      X02906* 10080000
@9D9     L     @1,20(0,@4)                                        0250  10090000
*                                                                       10100000
*            /*       FILL MSG BUFFER WITH SYMBOLIC NAME OR UNIT ADDR * 10110000
*                                                                       10120000
*            IF SYMDEVIC='1'B                                           10130000
*             THEN                      /* PUT SYM NAME IN MSG  X02906* 10140000
         TM    41(@8),B'00001000'                                 0251  10150000
         BC    12,@9D7                                            0251  10160000
*              MSG154I(5:12)=DEVTABXX(45:52);                           10170000
         MVC   16(8,@1),44(@8)                                    0252  10180000
         BC    15,@9D6                                            0253  10190000
*             ELSE                      /* USE DEV ADDR IN MSG  X02906* 10200000
*              MSG154I(5:12)=DEVTABXX(1:8);                             10210000
@9D7     MVC   16(8,@1),0(@8)                                     0253  10220000
*                                                                       10230000
*            GEN(PWTO REG=(1));         /* OUTBUT MSG 154I      X02906* 10240000
@9D6     EQU   *                                                  0254  10250000
         PWTO REG=(1)                                                   10260000
         DS    0H                                                       10270000
*            DEVTABXX=DEVTABXX&&DEVTABXX;                               10280000
         XC    0(56,@8),0(@8)                                     0255  10290000
*                                       /* CLEAR DEV TAB IN ERR X02906* 10300000
*            ERRORTAB=ERRORTAB+1;       /* UPDATE ERROR TAB CNT X02906* 10310000
         LA    @F,1                                               0256  10320000
         AH    @F,ERRORTAB                                        0256  10330000
         STH   @F,ERRORTAB                                        0256  10340000
*                                                                       10350000
* CECDV18A:                             /*                      X02906* 10360000
*                                                                       10370000
*           END;                        /* END DEV CLASS MATCH  X02906* 10380000
CECDV18A EQU   *                                                  0257  10390000
*          DEVTABPT=DEVTABPT+TABLNGTH;  /* NEXT DEV TAB ADDRESS X02906* 10400000
@9DC     AH    @8,TABLNGTH                                        0258  10410000
*         END;                          /* END DEV TAB SEARCH   X02906* 10420000
*                                                                       10430000
*         /*          REMOVE ANY BAD DEVICE TABLES FROM LIST    X02906* 10440000
*         IF ERRORTAB=0 THEN            /* ANY BAD TABLES?      X02906* 10450000
         LH    @F,I                                               0259  10460000
         AH    @F,@D1                                             0259  10470000
@DO9DF   STH   @F,I                                               0259  10480000
         CR    @F,@6                                              0259  10490000
         BC    12,@DO9E0                                          0259  10500000
         SR    @F,@F                                              0260  10510000
         CH    @F,ERRORTAB                                        0260  10520000
*          GO TO CECDEV18;              /* NO, GO ON .          X02906* 10530000
         BC    08,CECDEV18                                        0261  10540000
*                                                                       10550000
*         DEVTABPT=DEVTBPTR;            /* INIT DEV TABLE PTR   X02906* 10560000
         L     @8,DEVTBPTR                                        0262  10570000
*         AVAILBLE=DEVTBPTR;            /* INIT DEV TABLE PTR   X02906* 10580000
         MVC   AVAILBLE(4),DEVTBPTR                               0263  10590000
*         DO I=1 TO GOODENT BY +1;      /* SEARCH ALL DEV TABLESX02906* 10600000
         LA    @F,1                                               0264  10610000
         BC    15,@DO9D4                                          0264  10620000
*                                                                       10630000
*          /*         HAS DEV TABLE BEEN CLEARED OUT?           X02906* 10640000
*                                                                       10650000
*          IF CDSDVDSC=0 THEN           /* IF DSCRPTRS FOR DEV=0X02906* 10660000
@DO9D5   CLC   36(4,@8),@D3                                       0265  10670000
*           GO TO CECDV18B;             /* UPDATE TABLE PTR     X02906* 10680000
         BC    08,CECDV18B                                        0266  10690000
*          DEVTABLE=DEVTABXX;           /* OVERLAY WITH GOOD TABX02906* 10700000
         L     @C,AVAILBLE                                        0267  10710000
         MVC   0(56,@C),0(@8)                                     0267  10720000
*          AVAILBLE=AVAILBLE+TABLNGTH;  /* NEXT AVAILABLE DEVTABX02906* 10730000
         LH    @F,TABLNGTH                                        0268  10740000
         A     @F,AVAILBLE                                        0268  10750000
         ST    @F,AVAILBLE                                        0268  10760000
*                                                                       10770000
* CECDV18B:                             /*                      X02906* 10780000
*                                                                       10790000
*          DEVTABPT=DEVTABPT+TABLNGTH;  /*NEXT DEV TABLE IN LISTX02906* 10800000
CECDV18B AH    @8,TABLNGTH                                        0269  10810000
*         END;                          /* END OF GOODENTRY LOOPX02906* 10820000
*                                                                       10830000
*         GOODENT=GOODENT-ERRORTAB;     /* COOD TABLES CTR UPDT X02906* 10840000
         LH    @F,I                                               0270  10850000
         AH    @F,@D1                                             0270  10860000
@DO9D4   STH   @F,I                                               0270  10870000
         CR    @F,@6                                              0270  10880000
         BC    12,@DO9D5                                          0270  10890000
         SH    @6,ERRORTAB                                        0271  10900000
*                                                                       10910000
* CECDEV18:                             /*                      S21052* 10920000
*                                                                       10930000
*         /************************************************************ 10940000
*         /*                                                    S21052* 10950000
*         /*          ARE THERE ANY VALID DEVICE TABLES         S21052* 10960000
*         /*                                                    S21052* 10970000
*         /************************************************************ 10980000
*                                                                       10990000
*         IF GOODENT=0 THEN        /* ANY GOOD DEV TABS BUILT.  S21052* 11000000
CECDEV18 LTR   @6,@6                                              0272  11010000
         BC    07,@9D1                                            0272  11020000
*          DO;                     /* NO,                       S21052* 11030000
*                                                                       11040000
*                                                                       11050000
* CECDEV20:                             /*                      S21052* 11060000
*                                                                       11070000
*           R1=MSGPTR11;           /* POINTER TO MESSAGE.       S21052* 11080000
CECDEV20 L     @1,8(0,@4)                                         0274  11090000
*           GEN(PWTO  REG=(1));                                         11100000
         PWTO  REG=(1)                                                  11110000
         DS    0H                                                       11120000
*           YOURR14=NEXTREC;       /* ALTER RET POINT IN IFDOLT30       11130000
*                                                               S21052* 11140000
         L     @C,4(0,@D)                                         0276  11150000
         MVC   12(4,@C),NEXTREC                                   0276  11160000
*                                                                       11170000
*           /*        CLEAR ALL DEVICE TABLES TO ZERO           S21052* 11180000
*                                                                       11190000
*           DEVTABPT=DEVTBPTR;     /* POINT TO FIRST DEV TABLE. S21052* 11200000
         L     @8,DEVTBPTR                                        0277  11210000
*           RESTRICT(R1);          /* RESTRICT REGISTER FOR MSG.S21052* 11220000
*                                                                       11230000
*           /*        DEV TAB CLEARING OUT PROCEEDURE           S21052* 11240000
*           DO R1 = 16 TO 1                                             11250000
*             BY -1;               /* CLEAR DEVICE TABLES.      S21052* 11260000
         LA    @1,16                                              0279  11270000
*             DEVTABXX=DEVTABXX&&                                       11280000
*              DEVTABXX;           /* CLEAR DEVICE TABLES.      S21052* 11290000
@DO9D0   XC    0(56,@8),0(@8)                                     0280  11300000
*             DEVTABPT=DEVTABPT+TABLNGTH;                               11310000
         AH    @8,TABLNGTH                                        0281  11320000
*           END;                   /* END DEV TABLE CLEARING.   S21052* 11330000
*           RELEASE(R1);           /* RELEASE REGISTER FOR SYSTEM.      11340000
*                                                               S21052* 11350000
         BCT   @1,@DO9D0                                          0282  11360000
*           GO TO CECDEV28;        /* RETURN TO CALLER.         S21052* 11370000
         BC    15,CECDEV28                                        0284  11380000
*          END;                    /* END ZERO VALID ENTRIES LOOP       11390000
*                                                               S21052* 11400000
* CECDEV22:                             /*                      S21052* 11410000
*                                                                       11420000
*         /************************************************************ 11430000
*         /*                                                    S21052* 11440000
*         /*          FILL SECTION CONTROL TABLE WITH DEV TAB DATA      11450000
*         /*                                                    S21052* 11460000
*         /************************************************************ 11470000
*                                                                       11480000
*         IF GOODENT>1                                                  11490000
*          THEN                    /* MORE THAN ONE DEVICE ENTRD.       11500000
*                                                               S21052* 11510000
@9D1     EQU   *                                                  0286  11520000
CECDEV22 CH    @6,@D1                                             0286  11530000
         BC    12,@9CC                                            0286  11540000
*           MORETHN1='1'B;         /* YES, SET FLAG IN COMM AREA.       11550000
*                                                               S21052* 11560000
         OI    EXPGMFLG,B'01000000'                               0287  11570000
         BC    15,@9CB                                            0288  11580000
*          ELSE                    /* ONLY ONE DEVICE ENTERED.  S21052* 11590000
*           MORETHN1='0'B;         /* SET FLAG IN COMM AREA.    S21052* 11600000
@9CC     NI    EXPGMFLG,B'10111111'                               0288  11610000
*         DEVTABPT=DEVTBPTR;       /* REINIT DEVICE TABLE POINTES21052* 11620000
@9CB     L     @8,DEVTBPTR                                        0289  11630000
*         PRIMARY='1'B;            /* SET PRIM FLAG IN DEV TAB. S21052* 11640000
         OI    12(@8),B'01000000'                                 0290  11650000
*         TUCBAD1=UCBADDR;         /* SAVE PRIM DEV UCB ADDR.   S21052* 11660000
         MVC   TUCBAD1(4),8(@8)                                   0291  11670000
*         PRIDVAD=HEXADDR;         /* SAVE PRIM DEV HEX DEV ADDR.       11680000
*                                                               S21052* 11690000
         MVC   SCT+12(4),32(@8)                                   0292  11700000
*         PRIDVFLG=PRIDVFLG|'11'X; /* SET LAST DEV FLGS IN SCT. S21052* 11710000
         OI    SCT+10,X'11'                                       0293  11720000
*                                                                       11730000
*         /*          CHECK DEVICE DESCRIPTORS IN DEVICE TABLE. S21052* 11740000
*         IF CDSDVDSC=0            /* DEV DSCRPTRS = 0. YES,    S21052* 11750000
*          THEN                    /* SET UP TO USE             S21052* 11760000
         CLC   36(4,@8),@D3                                       0294  11770000
         BC    07,@9CA                                            0294  11780000
*           PRIDVDSC=UCBDVDSC;     /* USE UCB DV DSCRPTRS.      S21052* 11790000
         MVC   @TEMP4(4),8(@8)                                    0295  11800000
         L     @1,@TEMP4                                          0295  11810000
         MVC   SCT+16(4),16(@1)                                   0295  11820000
         BC    15,@9C9                                            0296  11830000
*          ELSE                    /* NO,                       S21052* 11840000
*           PRIDVDSC=CDSDVDSC;     /* USE CDS DEVICE DSCRPTRS.  S21052* 11850000
@9CA     MVC   SCT+16(4),36(@8)                                   0296  11860000
*         PRIDVPTR=DEVTABPT;       /* SAVE PRIM DEV PTR.        S21052* 11870000
@9C9     ST    @8,PRIDVPTR                                        0297  11880000
*         DEVDEPAD=ADDR(PRIDVSCT); /* SAVE PRIM SCT DEV ADDR.   S21052* 11890000
         LA    @F,SCT+8                                           0298  11900000
         ST    @F,DEVDEPAD                                        0298  11910000
*                                                                       11920000
*         /*          WAS A REMOTE TERMINAL DEVICE ENTERED      S21052* 11930000
*         IF REMLINE='1'B THEN     /* REMOTE DEV ENTERED. YES,  S21052* 11940000
         TM    41(@8),B'00000001'                                 0299  11950000
         BC    12,@9C8                                            0299  11960000
*          DO;                     /*SET FLAGS TO INDICATE THIS.S21052* 11970000
*           TPFLAG='0'B;           /* NOT A 2702 OR 2703 TCU TEST       11980000
*                                                               S21052* 11990000
         NI    OLTEPSW1,B'11111110'                               0301  12000000
*           GO TO CECDEV24;        /* GO ON TO EXIT ROUTINE.    S21052* 12010000
         BC    15,CECDEV24                                        0302  12020000
*          END;                    /* END REMOTE DEV SET UP.    S21052* 12030000
*                                                                       12040000
*         /*          CHECK COMMON AREA TEST NAME SAVE AREA     S21052* 12050000
*                                                                       12060000
*                                                                       12070000
*                                                                       12080000
*         /* GO TO CECDEV24,SKIP 2702,3 TESTS,NO SET TPFLAG.    X03008* 12090000
*                                                                       12100000
*                                                                       12110000
*                                                                       12120000
*          GO TO CECDEV24;         /* IS IT A 2701,2702, OR 2703.       12130000
*                                                               S21052* 12140000
         BC    15,CECDEV24                                        0304  12150000
*                                                                       12160000
*         /*          2701 CONTROL UNIT TEST CHECK              S21052* 12170000
*         IF TPSAVE3='1' THEN      /* YES, A 2701 TEST.         S21052* 12180000
         CLI   TPSAV+3,C'1'                                       0305  12190000
*           GO TO CECDEV24;        /* NO, IT IS A 2702,2703 TEST.       12200000
*                                                               S21052* 12210000
         BC    08,CECDEV24                                        0306  12220000
*                                                                       12230000
*         /*          2702, 2703 C U TESTS REQUIRE ATLEAST 2 LINES      12240000
*                                                               S21052* 12250000
*         IF GOODENT¬>1 THEN       /* ATLEAST 2 LINES ENTERED.  S21052* 12260000
         CH    @6,@D1                                             0307  12270000
         BC    02,@9C7                                            0307  12280000
*          DO;                     /* NO, AN ERROR CONDITION.   S21052* 12290000
*           DEVTABXX=DEVTABXX&&DEVTABXX;                                12300000
         XC    0(56,@8),0(@8)                                     0309  12310000
*           GO TO CECDEV20;        /* CLEAR DEV TAB AND AND EXIT.       12320000
*                                                               S21052* 12330000
         BC    15,CECDEV20                                        0310  12340000
*          END;                    /* END INVALID ENTRY LOOP.   S21052* 12350000
*         TPFLAG='1'B;             /* SET FLAG, VALID TCU TEST. S21052* 12360000
@9C7     OI    OLTEPSW1,B'00000001'                               0312  12370000
*                                                                       12380000
*         /*          UPDATE DEVICE TABLE POINTER.              S21052* 12390000
*         DEVTABPT=DEVTBPTR+TABLNGTH;                                   12400000
         LH    @8,TABLNGTH                                        0313  12410000
         A     @8,DEVTBPTR                                        0313  12420000
*         SECDVAD=HEXADDR;         /* SAVE SECOND DEV ADDR IN C A       12430000
*                                                               S21052* 12440000
         MVC   SCT+24(4),32(@8)                                   0314  12450000
*         TUCBAD2=UCBADDR;         /* SAVE SECOND DEV UCB ADDR .S21052* 12460000
         MVC   TUCBAD2(4),8(@8)                                   0315  12470000
*         SECDVFLG=SECDVFLG|'11'X; /* SET LAST DEV FLAGS IN SCT.S21052* 12480000
         OI    SCT+22,X'11'                                       0316  12490000
*                                                                       12500000
*         /*          USE CDS OR UCB DEVICE DESCRIPTORS         S21052* 12510000
*         IF CDSDVDSC=0            /* DEV DSCRPTRS = 0. YES,    S21052* 12520000
*          THEN                    /* SET UP TO USE             S21052* 12530000
         CLC   36(4,@8),@D3                                       0317  12540000
         BC    07,@9C6                                            0317  12550000
*           SECDVDSC=UCBDVDSC;     /* USE UCB DV DSCRPTRS.      S21052* 12560000
         MVC   @TEMP4(4),8(@8)                                    0318  12570000
         L     @1,@TEMP4                                          0318  12580000
         MVC   SCT+28(4),16(@1)                                   0318  12590000
         BC    15,@9C5                                            0319  12600000
*          ELSE                    /* NO,                       S21052* 12610000
*           SECDVDSC=CDSDVDSC;     /* USE CDS DEVICE DSCRPTRS.  S21052* 12620000
@9C6     MVC   SCT+28(4),36(@8)                                   0319  12630000
*         DEVDEPAD=ADDR(SECDVSCT); /* SAVE SECOND SCT DEV ADDR. S21052* 12640000
@9C5     LA    @F,SCT+20                                          0320  12650000
         ST    @F,DEVDEPAD                                        0320  12660000
*         PRIDVFLG=PRIDVFLG&'EE'X; /* CLEAR PRIM LAST DEV FLAGS.S21052* 12670000
         NI    SCT+10,X'EE'                                       0321  12680000
* CECDEV24:                             /*                      S21052* 12690000
*                                                                       12700000
*         /************************************************************ 12710000
*         /*                                                    S21052* 12720000
*         /*                      EXIT ROUTINE                  S21052* 12730000
*         /*                                                    S21052* 12740000
*         /************************************************************ 12750000
*                                                                       12760000
*         UNITCTR=GOODENT;         /* SAVE UNIT COUNTER.        S21052* 12770000
CECDEV24 STH   @6,X                                               0322  12780000
*         UNICTR=UNITCTR1;         /* SAVE VALUE IN COMMON AREA.S21052* 12790000
         MVC   UNICTR(1),X+1                                      0323  12800000
*         UNITUSE='00'X;           /* INIT UNITS TESTED COUNTER.S21052* 12810000
         MVI   UNITUSE,X'00'                                      0324  12820000
*         LEGALDEV='1'B;           /* VALID DEVICE(S) ENTERED FLAG      12830000
*                                                               S21052* 12840000
         OI    OLTEPSW,B'00001000'                                0325  12850000
*         INBUFPTR=R5;             /* SAVE INPUT BUFFER POINTER.S21052* 12860000
         ST    @5,INBUFPTR                                        0326  12870000
*         GO TO CECDEV28;          /* VALID DEVICE DECODE.      S21052* 12880000
         BC    15,CECDEV28                                        0327  12890000
*                                                                       12900000
*                                                                       12910000
* CECDEV26:                             /*                      S21052* 12920000
*                                                                       12930000
*         /************************************************************ 12940000
*         /*                                                    S21052* 12950000
*         /*          CHANGE RETURN POINT, REDEFINE TEST        S21052* 12960000
*         /*                                                    S21052* 12970000
*         /************************************************************ 12980000
*                                                                       12990000
*         YOURR14=REDEFINE;        /* ALTER RET POINT IN IFDOLT30       13000000
*                                                               S21052* 13010000
CECDEV26 L     @1,4(0,@D)                                         0328  13020000
         MVC   12(4,@1),REDEFINE                                  0328  13030000
*         R8=DEVTBPTR;             /* DEVICE TABLES             X03008* 13040000
         L     @8,DEVTBPTR                                        0329  13050000
*         DO R9=TABLNGTH BY -1 TO 1; /* TABLE LENGTH            X03008* 13060000
         LH    @9,TABLNGTH                                        0330  13070000
         LTR   @9,@9                                              0330  13080000
         BC    12,@DO9C3                                          0330  13090000
*           DVT=DVT&&DVT;          /* ZERO TABLE AREA           X03008* 13100000
@DO9C4   XC    0(16,@8),0(@8)                                     0331  13110000
*           R8=ADDR(DVTN);         /* NEXT TABLE AREA           X03008* 13120000
         LA    @8,16(0,@8)                                        0332  13130000
*         END;                     /* ZERO TOTAL TABLE          X03008* 13140000
*         LEGALDEV='0'B;           /* NO LEGAL DEVICES          X03008* 13150000
         BCT   @9,@DO9C4                                          0333  13160000
@DO9C3   NI    OLTEPSW,B'11110111'                                0334  13170000
*                                                                       13180000
*                                                                       13190000
* CECDEV28:                             /*                      S21052* 13200000
*                                                                       13210000
*         /************************************************************ 13220000
*         /*                                                    S21052* 13230000
*         /*          RETURN TO CALLER                          S21052* 13240000
*         /*                                                    S21052* 13250000
*         /************************************************************ 13260000
*                                                                       13270000
*         DPMSGREI='0'B;                /* TURN OFF REM MSG FLG XM0097* 13280000
CECDEV28 NI    A00014,B'11111110'                                 0335  13290000
*         RETURN;                  /* RETURN TO CALLER          S21052* 13300000
*         END;                     /* END IFDOLT61.             S21052* 13310000
@EL01    L     @D,4(0,@D)                                         0337  13320000
         LM    @E,@C,12(@D)                                       0337  13330000
         BCR   15,@E                                              0337  13340000
@DATA1   EQU   *                                                        13350000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           13360000
@1       EQU   01                                                       13370000
@2       EQU   02                                                       13380000
@3       EQU   03                                                       13390000
@4       EQU   04                                                       13400000
@5       EQU   05                                                       13410000
@6       EQU   06                                                       13420000
@7       EQU   07                                                       13430000
@8       EQU   08                                                       13440000
@9       EQU   09                                                       13450000
@A       EQU   10                                                       13460000
@B       EQU   11                                                       13470000
@C       EQU   12                                                       13480000
@D       EQU   13                                                       13490000
@E       EQU   14                                                       13500000
@F       EQU   15                                                       13510000
@D3      DC    F'0'                                                     13520000
@D1      DC    H'1'                                                     13530000
@D2      DC    H'16'                                                    13540000
@V1      DC    V(IFDMSG61)                                              13550000
         DS    0F                                                       13560000
@C12     DC    C'ONLINE ,'                                              13570000
@C13     DC    C'OFFLINE,'                                              13580000
@C21     DC    C'SOSPC/'                                                13590000
@C14     DC    C'ALLOCATED  '                                           13600000
@C15     DC    C'UNALLOCATED'                                           13610000
@C22     DC    C'270'                                                   13620000
         DS    0D                                                       13630000
@DATA    EQU   *                                                        13640000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   13650000
R0       EQU   00000000            FULLWORD POINTER REGISTER            13660000
R1       EQU   00000001            3  BYTE  POINTER REGISTER            13670000
R2       EQU   00000002            FULLWORD POINTER REGISTER            13680000
R3       EQU   00000003            FULLWORD POINTER REGISTER            13690000
R4       EQU   00000004            FULLWORD POINTER REGISTER            13700000
R5       EQU   00000005            FULLWORD POINTER REGISTER            13710000
GOODENT  EQU   00000006            FULLWORD POINTER REGISTER            13720000
UCBLOOK  EQU   00000007            FULLWORD POINTER REGISTER            13730000
DEVTABPT EQU   00000008            FULLWORD POINTER REGISTER            13740000
R8       EQU   00000008            FULLWORD POINTER REGISTER            13750000
R9       EQU   00000009            3  BYTE  POINTER REGISTER            13760000
R13      EQU   00000013            FULLWORD POINTER REGISTER            13770000
R14      EQU   00000014            FULLWORD POINTER REGISTER            13780000
RC       EQU   00000015            FULLWORD POINTER REGISTER            13790000
R15      EQU   00000015            FULLWORD POINTER REGISTER            13800000
MYSAVE   EQU   00000000            8 BYTE(S) ON WORD                    13810000
A00000   EQU   MYSAVE+00000000     4 BYTE(S)                            13820000
YOURR13  EQU   MYSAVE+00000004     FULLWORD POINTER                     13830000
YOURSAVE EQU   00000000            16 BYTE(S) ON WORD                   13840000
A00001   EQU   YOURSAVE+00000000   12 BYTE(S)                           13850000
YOURR14  EQU   YOURSAVE+00000012   FULLWORD POINTER                     13860000
INPUTBUF EQU   00000000            10 BYTE(S)                           13870000
DEVTABXX EQU   00000000            56 BYTE(S)                           13880000
DEVADDR  EQU   DEVTABXX+00000000   8 BYTE(S)                            13890000
UCBADDR  EQU   DEVTABXX+00000008   4  BYTE  POINTER                     13900000
FLG1     EQU   DEVTABXX+00000012   1 BYTE(S)                            13910000
ONOFF    EQU   DEVTABXX+00000012   1 BIT(S)                             13920000
PRIMARY  EQU   DEVTABXX+00000012   1 BIT(S)                             13930000
A00017   EQU   DEVTABXX+00000013   1 BYTE(S)                            13940000
FLG3     EQU   DEVTABXX+00000014   1 BYTE(S)                            13950000
ANRNOTST EQU   DEVTABXX+00000014   1 BIT(S)                             13960000
A00018   EQU   DEVTABXX+00000014   3 BIT(S)                             13970000
NOTEST   EQU   DEVTABXX+00000014   1 BIT(S)                             13980000
SYSALLOC EQU   DEVTABXX+00000014   1 BIT(S)                             13990000
A00019   EQU   DEVTABXX+00000015   1 BYTE(S)                            14000000
A00020   EQU   DEVTABXX+00000016   16 BYTE(S)                           14010000
HEXADDR  EQU   DEVTABXX+00000032   4 BYTE(S)                            14020000
CDSDVDSC EQU   DEVTABXX+00000036   4 BYTE(S)                            14030000
MODEL    EQU   DEVTABXX+00000036   1 BYTE(S)                            14040000
FEATURES EQU   DEVTABXX+00000037   1 BYTE(S)                            14050000
CLASS    EQU   DEVTABXX+00000038   1 BYTE(S)                            14060000
TYPE     EQU   DEVTABXX+00000039   1 BYTE(S)                            14070000
BYTECNT  EQU   DEVTABXX+00000040   1 BYTE(S)                            14080000
CDSFLAGS EQU   DEVTABXX+00000041   1 BYTE(S)                            14090000
A00021   EQU   DEVTABXX+00000041   4 BIT(S)                             14100000
SYMDEVIC EQU   DEVTABXX+00000041   1 BIT(S)                             14110000
A00022   EQU   DEVTABXX+00000041   2 BIT(S)                             14120000
REMLINE  EQU   DEVTABXX+00000041   1 BIT(S)                             14130000
EXTSGMSK EQU   DEVTABXX+00000042   2 BYTE(S)                            14140000
SYMNAME  EQU   DEVTABXX+00000044   8 BYTE(S)                            14150000
MSGPTR   EQU   00000000            24 BYTE(S) ON WORD                   14160000
MSGPTR09 EQU   MSGPTR+00000000     FULLWORD POINTER                     14170000
MSGPTR10 EQU   MSGPTR+00000004     FULLWORD POINTER                     14180000
MSGPTR11 EQU   MSGPTR+00000008     FULLWORD POINTER                     14190000
MSGPTR14 EQU   MSGPTR+00000012     FULLWORD POINTER                     14200000
MSGPTR27 EQU   MSGPTR+00000016     FULLWORD POINTER                     14210000
MSGPTR54 EQU   MSGPTR+00000020     FULLWORD POINTER                     14220000
MSG109   EQU   00000000            40 BYTE(S) ON WORD                   14230000
A00023   EQU   MSG109+00000000     12 BYTE(S)                           14240000
MSG109I  EQU   MSG109+00000012     28 BYTE(S)                           14250000
MSG154   EQU   00000000            72 BYTE(S) ON WORD                   14260000
A00024   EQU   MSG154+00000000     12 BYTE(S)                           14270000
MSG154I  EQU   MSG154+00000012     60 BYTE(S)                           14280000
MSG127   EQU   00000000            31 BYTE(S) ON WORD                   14290000
A00025   EQU   MSG127+00000000     12 BYTE(S)                           14300000
MSG127I  EQU   MSG127+00000012     19 BYTE(S)                           14310000
A00027   EQU   00000000            32 BYTE(S) ON WORD                   14320000
DVT      EQU   A00027+00000000     16 BYTE(S)                           14330000
DVTN     EQU   A00027+00000016     16 BYTE(S)                           14340000
AVAILBLE EQU   @DATA+00000072      FULLWORD POINTER                     14350000
DEVTABLE EQU   00000000            56 BYTE(S)                           14360000
LIMIT    EQU   @DATA+00000076      HALFWORD INTEGER                     14370000
X        EQU   @DATA+00000078      HALFWORD INTEGER                     14380000
UNITCTR  EQU   X+00000000          HALFWORD INTEGER                     14390000
A00029   EQU   X+00000000          1 BYTE(S)                            14400000
UNITCTR1 EQU   X+00000001          1 BYTE(S)                            14410000
ERRORTAB EQU   @DATA+00000080      HALFWORD INTEGER                     14420000
X1       EQU   @DATA+00000082      HALFWORD INTEGER                     14430000
COUNT    EQU   @DATA+00000084      HALFWORD INTEGER                     14440000
I        EQU   @DATA+00000086      HALFWORD INTEGER                     14450000
ERRCODE  EQU   @DATA+00000088      2 BYTE(S)                            14460000
GRAPHICS EQU   @DATA+00000092      56 BYTE(S) ON WORD                   14470000
EBADDR   EQU   GRAPHICS+00000000   8 BYTE(S)                            14480000
A00030   EQU   GRAPHICS+00000000   7 BYTE(S)                            14490000
DEVICE   EQU   GRAPHICS+00000007   1 BYTE(S)                            14500000
A00031   EQU   GRAPHICS+00000008   4 BYTE(S)                            14510000
FLAG     EQU   GRAPHICS+00000012   1 BYTE(S)                            14520000
OFF      EQU   GRAPHICS+00000012   1 BIT(S)                             14530000
         ORG   @DATA+00000148                                           14540000
NUMBERS  EQU   *                   16 BYTE(S)                           14550000
         DC    C'0123456789ABCDEF'                                      14560000
NUMBER   EQU   00000000            1 BYTE(S)                            14570000
DEVAD    EQU   *                   8 BYTE(S)                            14580000
         DC    C'00000000'                                              14590000
DEVAD1   EQU   DEVAD+00000000      8 BYTE(S)                            14600000
SWITCHES EQU   @DATA+00000172      1 BYTE(S)                            14610000
FRSTPASS EQU   SWITCHES+00000000   1 BIT(S)                             14620000
PARMLIST EQU   @DATA+00000176      16 BYTE(S) ON WORD                   14630000
MODNAME  EQU   PARMLIST+00000000   8 BYTE(S)                            14640000
         ORG   PARMLIST+00000000                                        14650000
TCDSO    EQU   *                   1 BYTE(S)                            14660000
         DC    C'G'                                                     14670000
CDSDEV   EQU   PARMLIST+00000001   7 BYTE(S)                            14680000
TARGETAD EQU   PARMLIST+00000008   FULLWORD POINTER                     14690000
PARMFLGS EQU   PARMLIST+00000012   1 BYTE(S)                            14700000
A00032   EQU   PARMLIST+00000013   1 BYTE(S)                            14710000
CDSLNGTH EQU   PARMLIST+00000014   HALFWORD INTEGER                     14720000
UCBDVDSC EQU   00000016            4 BYTE(S)                            14730000
UCBMODEL EQU   UCBDVDSC+00000000   1 BYTE(S)                            14740000
UCBFEAT  EQU   UCBDVDSC+00000001   1 BYTE(S)                            14750000
A00033   EQU   UCBDVDSC+00000001   2 BIT(S)                             14760000
SHAREDDV EQU   UCBDVDSC+00000001   1 BIT(S)                             14770000
A00034   EQU   UCBDVDSC+00000001   5 BIT(S)                             14780000
UCBCLASS EQU   UCBDVDSC+00000002   1 BYTE(S)                            14790000
UCBTYPE  EQU   UCBDVDSC+00000003   1 BYTE(S)                            14800000
CDSENTRY EQU   00000000            20 BYTE(S)                           14810000
A00035   EQU   CDSENTRY+00000000   4 BYTE(S)                            14820000
DSCRPTRS EQU   CDSENTRY+00000004   4 BYTE(S)                            14830000
TPCLASS  EQU   @DATA+00000192      FULLWORD INTEGER                     14840000
         ORG   @DATA                                                    14850000
         DS    00000196C                                                14860000
@TEMPS   DS    0F                                                       14870000
@TEMP4   DC    F'0'                                                     14880000
DEVCOMM  IFDCOM                   COMMON AREA DSECT                     14890000
SCT      EQU   CHASCT+00000000     32 BYTE(S) ON WORD                   14900000
HEADER   EQU   SCT+00000000        8 BYTE(S)                            14910000
PRIDVSCT EQU   SCT+00000008        12 BYTE(S)                           14920000
A00002   EQU   SCT+00000008        2 BYTE(S)                            14930000
PRIDVFLG EQU   SCT+00000010        1 BYTE(S)                            14940000
A00003   EQU   SCT+00000011        1 BYTE(S)                            14950000
PRIDVAD  EQU   SCT+00000012        4 BYTE(S)                            14960000
A00004   EQU   SCT+00000012        2 BYTE(S)                            14970000
PRIHEXAD EQU   SCT+00000014        2 BYTE(S)                            14980000
PRIDVDSC EQU   SCT+00000016        4 BYTE(S)                            14990000
SECDVSCT EQU   SCT+00000020        12 BYTE(S)                           15000000
A00005   EQU   SCT+00000020        2 BYTE(S)                            15010000
SECDVFLG EQU   SCT+00000022        1 BYTE(S)                            15020000
A00006   EQU   SCT+00000023        1 BYTE(S)                            15030000
SECDVAD  EQU   SCT+00000024        4 BYTE(S)                            15040000
A00007   EQU   SCT+00000024        2 BYTE(S)                            15050000
SECHEXAD EQU   SCT+00000026        2 BYTE(S)                            15060000
SECDVDSC EQU   SCT+00000028        4 BYTE(S)                            15070000
OLTEPSW  EQU   CESWT+00000000      1 BYTE(S) ON WORD                    15080000
A00008   EQU   OLTEPSW+00000000    4 BIT(S)                             15090000
LEGALDEV EQU   OLTEPSW+00000000    1 BIT(S)                             15100000
REINT    EQU   OLTEPSW+00000000    1 BIT(S)                             15110000
OLTEPSW1 EQU   CESWT1+00000000     1 BYTE(S) ON WORD                    15120000
A00009   EQU   OLTEPSW1+00000000   6 BIT(S)                             15130000
ONLINETP EQU   OLTEPSW1+00000000   2 BIT(S)                             15140000
ONLINEOK EQU   OLTEPSW1+00000000   1 BIT(S)                             15150000
TPFLAG   EQU   OLTEPSW1+00000000   1 BIT(S)                             15160000
OLTEPSW2 EQU   CESWT2+00000000     1 BYTE(S) ON WORD                    15170000
A00010   EQU   OLTEPSW2+00000000   3 BIT(S)                             15180000
CHANTEST EQU   OLTEPSW2+00000000   1 BIT(S)                             15190000
A00011   EQU   OLTEPSW2+00000000   1 BIT(S)                             15200000
NDR      EQU   OLTEPSW2+00000000   1 BIT(S)                             15210000
OLTEPSW7 EQU   CESWT7+00000000     1 BYTE(S) ON WORD                    15220000
INCLST   EQU   OLTEPSW7+00000000   1 BIT(S)                             15230000
RETTO31  EQU   OLTEPSW7+00000000   1 BIT(S)                             15240000
A00012   EQU   CESWTR+00000000     1 BYTE(S) ON WORD                    15250000
RETAINAC EQU   A00012+00000000     1 BIT(S)                             15260000
A00013   EQU   A00012+00000000     1 BIT(S)                             15270000
REMNOMSG EQU   A00012+00000000     1 BIT(S)                             15280000
A00014   EQU   CESWTR2+00000000    1 BYTE(S) ON WORD                    15290000
A00015   EQU   A00014+00000000     7 BIT(S)                             15300000
DPMSGREI EQU   A00014+00000000     1 BIT(S)                             15310000
SVCPLIST EQU   ROPT-00000004       12 BYTE(S) ON WORD                   15320000
A00016   EQU   SVCPLIST+00000000   2 BYTE(S)                            15330000
MODNUM   EQU   SVCPLIST+00000002   2 BYTE(S)                            15340000
ADDRDEV  EQU   SVCPLIST+00000004   FULLWORD POINTER                     15350000
ENTRIES  EQU   SVCPLIST+00000008   FULLWORD INTEGER                     15360000
TPSAV    EQU   TPSAVE+00000000     4 BYTE(S)                            15370000
A00026   EQU   TPSAV+00000000      3 BYTE(S)                            15380000
TPSAVE3  EQU   TPSAV+00000003      1 BYTE(S)                            15390000
EXPGMFLG EQU   CHASCT+00000033     1 BYTE(S)                            15400000
A00028   EQU   EXPGMFLG+00000000   1 BIT(S)                             15410000
MORETHN1 EQU   EXPGMFLG+00000000   1 BIT(S)                             15420000
FRSTINCL EQU   SAVENT+00000000     HALFWORD INTEGER                     15430000
LASTINCL EQU   SAVENT+00000002     HALFWORD INTEGER                     15440000
@DATEND  EQU   *                                                        15450000
@9FD     EQU   CECDEV14                                                 15460000
@9E6     EQU   CECDEV12                                                 15470000
@9E5     EQU   CECDEV12                                                 15480000
@9E7     EQU   CECDEV14                                                 15490000
@9C8     EQU   CECDEV24                                                 15500000
         END    ,(C'PL/S',1400,78045)                                   15510000
./  ADD  SSI=40321630,NAME=IFDOLT62
         TITLE 'IFDOLT62 CPU AFFINITY                                  *00001000
                        '                                               00002000
IFDOLT62 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IFDOLT62  74.033'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         ST    @13,@SA00001+4                                      0001 00014000
         LA    @05,@SA00001                                        0001 00015000
         ST    @05,8(,@13)                                         0001 00016000
         LR    @13,@05                                             0001 00017000
*                                                                    */ 00018000
*                                                                  0020 00019000
*   /*****************************************************************/ 00020000
*   /*                                                               */ 00021000
*   /* INITIALIZATION                                                */ 00022000
*   /*                                                               */ 00023000
*   /*****************************************************************/ 00024000
*                                                                  0020 00025000
*   INTAL='00'X;                    /* CLEAR INTERNAL SWITHES        */ 00026000
         MVI   INTAL,X'00'                                         0020 00027000
*   LOOPCNT='00'X;                  /* SET LOOP CONTROL TO ZERO      */ 00028000
         SLR   LOOPCNT,LOOPCNT                                     0021 00029000
*   SELDEFLP='0'B;                  /* SET DEFAULT CPU 0 LOOP        */ 00030000
         NI    SELDEFLP,B'01111111'                                0022 00031000
*   IF VERBCALL='1'B THEN           /* IS THIS A VERB FROM 105D      */ 00032000
         TM    VERBCALL(COMMAPT),B'00100000'                       0023 00033000
         BO    @RT00023                                            0023 00034000
*     GOTO CPUAFN5A;                /* YES, PROCESS IFD105D REPLY    */ 00035000
*CPUAFN01:                          /* NO.                           */ 00036000
*                                                                  0025 00037000
*   /*****************************************************************/ 00038000
*   /*                                                               */ 00039000
*   /* SETUP SELECT CPU 0 AFN                                        */ 00040000
*   /*                                                               */ 00041000
*   /*****************************************************************/ 00042000
*                                                                  0025 00043000
*   SELAFFN='8000'X;                /* SET AFFINITY TO MASK CPU'S    */ 00044000
CPUAFN01 MVC   SELAFFN(2,COMMAPT),@CB00361                         0025 00045000
*   CHARAFFN='00';                  /* SET CHARACTER FOR PRINT       */ 00046000
         MVC   CHARAFFN(2,COMMAPT),@CC00363                        0026 00047000
*   LOOPCNT=LOOPCNT+'01'X;          /* ADD ONE TO LOOP CONTROL       */ 00048000
         AH    LOOPCNT,@CH00364                                    0027 00049000
*CPUAFN02:                                                         0028 00050000
*                                                                  0028 00051000
*   /*****************************************************************/ 00052000
*   /*                                                               */ 00053000
*   /* SET UP SVC 59 CALL AFFNITY                                    */ 00054000
*   /*                                                               */ 00055000
*   /*****************************************************************/ 00056000
*                                                                  0028 00057000
*   R0=ADDR(ROPT);                  /* SET POINTER TO PARM LIST      */ 00058000
CPUAFN02 LA    R0,ROPT(,COMMAPT)                                   0028 00059000
*   R1='60'X;                       /* SET FUNCTION CALL CODE        */ 00060000
         LA    R1,96                                               0029 00061000
*   ROPT=ADDR(SELAFFN);             /* SET POINTER TO CPU IN LIST    */ 00062000
         LA    @05,SELAFFN(,COMMAPT)                               0030 00063000
         ST    @05,ROPT(,COMMAPT)                                  0030 00064000
*   GEN(SVC   59);                  /* ISSUE SVC 59                  */ 00065000
         SVC   59                                                       00066000
*   IF RETCODE='00'X THEN           /* HAS CPU AFFINITY BEEN SET     */ 00067000
         LTR   RETCODE,RETCODE                                     0032 00068000
         BZ    @RT00032                                            0032 00069000
*     GOTO CPUAFN09;                /* YES, READY TO EXIT            */ 00070000
*   IF RETCODE='04'X THEN           /* NO, WAS CPU NOT AVAILABLE     */ 00071000
         CH    RETCODE,@CH00369                                    0034 00072000
         BE    @RT00034                                            0034 00073000
*     GOTO CPUAFN03;                /* YES,PROCESS FOR MSG           */ 00074000
*   IF RETCODE='08'X THEN           /* NO, WAS VARY CPU/CHAN IN      */ 00075000
         CH    RETCODE,@CH00371                                    0036 00076000
         BE    @RT00036                                            0036 00077000
*     GOTO CPUAFN05;                /* YES, PROCESS SYS RES MSG      */ 00078000
*   GOTO CPUAFN05;                  /* NO, PROCESS OTHER RETURN    0038 00079000
*                                                                    */ 00080000
         B     CPUAFN05                                            0038 00081000
*CPUAFN03:                                                         0039 00082000
*                                                                  0039 00083000
*   /*****************************************************************/ 00084000
*   /*                                                               */ 00085000
*   /* CPU SELECTED NOT AVAILABLE                                    */ 00086000
*   /*                                                               */ 00087000
*   /*****************************************************************/ 00088000
*                                                                  0039 00089000
*   IF VERBCALL='1'B THEN           /* WAS THIS A SELECTED AFFN      */ 00090000
CPUAFN03 TM    VERBCALL(COMMAPT),B'00100000'                       0039 00091000
         BNO   @RF00039                                            0039 00092000
*     DO;                           /* YES, ISSUE CPU NOT AVAIL      */ 00093000
*       R1=IFD262I;                 /* GET ADDR MSG IFD262I          */ 00094000
         LA    @05,IFDMSG62                                        0041 00095000
         L     R1,IFD262I(,@05)                                    0041 00096000
*       R15=PARPRADR;               /* GET PARALLEL PRINT ADDR       */ 00097000
         L     R15,PARPRADR(,COMMAPT)                              0042 00098000
*       R15=6+R15;                  /* ENTRY POINT TO DPRINT         */ 00099000
         AH    R15,@CH00112                                        0043 00100000
*       GEN(BALR  14,15);           /* LINK TO MODULE                */ 00101000
         BALR  14,15                                                    00102000
*       GOTO CPUAFN08;              /* NOW ISSUE REQUEST FOR AFFN    */ 00103000
         B     CPUAFN08                                            0045 00104000
*     END;                          /* OR DEFAULT                    */ 00105000
*   IF SELDEFLP='1'B THEN           /* IS THIS DEFAULT LOOP CPU1     */ 00106000
@RF00039 TM    SELDEFLP,B'10000000'                                0047 00107000
         BNO   @RF00047                                            0047 00108000
*     DO;                           /* YES                           */ 00109000
*       IF LOOPCNT>'0020'X THEN     /* HAS LOOP COUNT REACHED MAX    */ 00110000
         CL    LOOPCNT,@CF00375                                    0049 00111000
         BNH   @RF00049                                            0049 00112000
*         DO;                       /* YES                           */ 00113000
*           R1=IFD899I;             /* GET ADDR MSG IFD262I          */ 00114000
         LA    @03,IFDMSG62                                        0051 00115000
         L     R1,IFD899I(,@03)                                    0051 00116000
*           MSGRETCD='05';          /* SET RETURN CODE FOR MSG       */ 00117000
         MVC   MSGRETCD(2,R1),@CC00376                             0052 00118000
*           R15=PARPRADR;           /* GET PARALLEL PRINT ADDR       */ 00119000
         L     R15,PARPRADR(,COMMAPT)                              0053 00120000
*           R15=6+R15;              /* ENTRY POINT TO DPRINT         */ 00121000
         AH    R15,@CH00112                                        0054 00122000
*           GEN(BALR  14,15);       /* LINK TO MODULE                */ 00123000
         BALR  14,15                                                    00124000
*           R0=ADDR(ROPT);          /* SET POINTER TO PARMLIST       */ 00125000
         LA    R0,ROPT(,COMMAPT)                                   0056 00126000
*           R1='14'X;               /* SET SVC CALL FUNCTION         */ 00127000
         LA    R1,20                                               0057 00128000
*           GEN(SVC 59);            /* ISSUE SVC 59 FOR CLEAN-UP     */ 00129000
         SVC 59                                                         00130000
*           AFFNSET='0'B;           /* INDICATE NO AFFINITY SET      */ 00131000
         NI    AFFNSET(COMMAPT),B'10111111'                        0059 00132000
*           GOTO CPUAFN10;          /* EXIT THIS FUNCTION            */ 00133000
         B     CPUAFN10                                            0060 00134000
*         END;                      /* YES                           */ 00135000
*       SELDEFLP='0'B;              /* SET DEFAULT LOOP CPU 0        */ 00136000
@RF00049 NI    SELDEFLP,B'01111111'                                0062 00137000
*       GOTO CPUAFN01;              /* SET UP FOR AFFINITY CPU 0     */ 00138000
         B     CPUAFN01                                            0063 00139000
*     END;                          /* NO                            */ 00140000
*CPUAFN04:                                                         0065 00141000
*                                                                  0065 00142000
*   /*****************************************************************/ 00143000
*   /*                                                               */ 00144000
*   /* SETUP FOR CPU 1 AFFINITY                                      */ 00145000
*   /*                                                               */ 00146000
*   /*****************************************************************/ 00147000
*                                                                  0065 00148000
*   SELAFFN='4000'X;                /* SET CPU AFFN MASK CPU 1       */ 00149000
@RF00047 DS    0H                                                  0065 00150000
CPUAFN04 MVC   SELAFFN(2,COMMAPT),@CB00380                         0065 00151000
*   CHARAFFN='01';                  /* SET CHARACTER FOR PRINT       */ 00152000
         MVC   CHARAFFN(2,COMMAPT),@CC00382                        0066 00153000
*   SELDEFLP='1'B;                  /* SET DEFAULT LOOP CPU 1        */ 00154000
         OI    SELDEFLP,B'10000000'                                0067 00155000
*   LOOPCNT=LOOPCNT+'01'X;          /* ADD ONE TO LOOP CONTROL       */ 00156000
         AH    LOOPCNT,@CH00364                                    0068 00157000
*   GOTO CPUAFN02;                  /* ISSUE SVC 59 TO SET AFFN    0069 00158000
*                                                                    */ 00159000
         B     CPUAFN02                                            0069 00160000
*CPUAFN05:                                                         0070 00161000
*                                                                  0070 00162000
*   /*****************************************************************/ 00163000
*   /*                                                               */ 00164000
*   /* SYSTEM RESOURCE IN USE                                        */ 00165000
*   /*                                                               */ 00166000
*   /*****************************************************************/ 00167000
*                                                                  0070 00168000
*   ECB=ECB&&ECB;                   /* CLEAR ECB FOR WTOR            */ 00169000
CPUAFN05 XC    ECB(4),ECB                                          0070 00170000
*   RPLYBUF(1)=' ';                 /* CLEAR INPUT MSG AREA WITH     */ 00171000
         MVI   RPLYBUF,C' '                                        0071 00172000
*   RPLYBUF(2:12)=RPLYBUF(1);       /* THIS CODE               YM7207*/ 00173000
         MVI   RPLYBUF+2,C' '                                      0072 00174000
         MVC   RPLYBUF+3(9),RPLYBUF+2                              0072 00175000
         MVC   RPLYBUF+1(1),RPLYBUF                                0072 00176000
*   R1=IFD264D;                     /* SET PTR TO MSG IFD264D        */ 00177000
         LA    @05,IFDMSG62                                        0073 00178000
         L     R1,IFD264D(,@05)                                    0073 00179000
*   IF RETAINAC='1'B THEN           /* IF REI IS ACTIVE              */ 00180000
         TM    RETAINAC(COMMAPT),B'10000000'                       0074 00181000
         BNO   @RF00074                                            0074 00182000
*     DPMSGREI='1'B;                /* NO REI REPLY ALLOWED          */ 00183000
         OI    DPMSGREI(COMMAPT),B'00000001'                       0075 00184000
*   R15=PARPRADR;                   /* GET PP ADDRESS                */ 00185000
@RF00074 L     R15,PARPRADR(,COMMAPT)                              0076 00186000
*   R15=24+R15;                     /* ENTRY POINT TO DPRINT         */ 00187000
         AH    R15,@CH00068                                        0077 00188000
*   GEN(BALR  14,15);               /* LINK TO MODULE                */ 00189000
         BALR  14,15                                                    00190000
*   RBUFPTR=BUFPTR62;               /* SET MAP BASE POINTER          */ 00191000
         L     RBUFPTR,BUFPTR62                                    0079 00192000
*   IF VERBS(1:3)='CAN' THEN        /* IS THE REPLY CAN              */ 00193000
         CLC   VERBS(3,RBUFPTR),@CC00385                           0080 00194000
         BNE   @RF00080                                            0080 00195000
*     DO;                           /* YES,SET UP TO CLEAN UP        */ 00196000
*       R0=ADDR(ROPT);              /* SET POINTER TO PARMLIST       */ 00197000
         LA    R0,ROPT(,COMMAPT)                                   0082 00198000
*       R1='14'X;                   /* SET SVC CALL FUNCTION         */ 00199000
         LA    R1,20                                               0083 00200000
*       GEN(SVC 59);                /* ISSUE SVC 59 FOR CLEAN-UP     */ 00201000
         SVC 59                                                         00202000
*       AFFNSET='0'B;               /* INDICATE NO AFFINITY SET      */ 00203000
         NI    AFFNSET(COMMAPT),B'10111111'                        0085 00204000
*       GOTO CPUAFN10;              /* EXIT THIS FUNCTION            */ 00205000
         B     CPUAFN10                                            0086 00206000
*     END;                          /* NO                            */ 00207000
*   IF VERBS='CPUAFFN=' THEN        /* WAS THE REPLY AN AFFN RE-     */ 00208000
@RF00080 CLC   VERBS(8,RBUFPTR),@CC00386                           0088 00209000
         BNE   @RF00088                                            0088 00210000
*     DO;                           /* QUEST, YES                    */ 00211000
*       VERBCALL='1'B;              /* INDICATE THIS AFFN REQUEST    */ 00212000
         OI    VERBCALL(COMMAPT),B'00100000'                       0090 00213000
*       GOTO CPUAFN06;              /* GO TEST WHAT CPUID            */ 00214000
         B     CPUAFN06                                            0091 00215000
*     END;                          /* NO                            */ 00216000
*   IF VERBS(1:4)='NONE' THEN       /* WAS THE REPLY NONE FOR DE-    */ 00217000
@RF00088 CLC   VERBS(4,RBUFPTR),@CC00388                           0093 00218000
         BNE   @RF00093                                            0093 00219000
*     DO;                           /* FAULT, YES                    */ 00220000
*       VERBCALL='0'B;              /* SET FOR DEFAULT PROCESS       */ 00221000
         NI    VERBCALL(COMMAPT),B'11011111'                       0095 00222000
*       SELDEFLP='0'B;              /* SET DEFAULT LOOP CPU 0        */ 00223000
         NI    SELDEFLP,B'01111111'                                0096 00224000
*       GOTO CPUAFN01;              /* SET CPU AFFN FOR CPU 0        */ 00225000
         B     CPUAFN01                                            0097 00226000
*     END;                          /* NO                            */ 00227000
*   GOTO CPUAFN05;                  /* INPUT NO GOOD REISSUE MSG   0099 00228000
*                                                                    */ 00229000
         B     CPUAFN05                                            0099 00230000
*CPUAFN5A:                                                         0100 00231000
*                                                                  0100 00232000
*   /*****************************************************************/ 00233000
*   /*                                                               */ 00234000
*   /* PROCESS IFD105D REPLY                                         */ 00235000
*   /*                                                               */ 00236000
*   /*****************************************************************/ 00237000
*                                                                  0100 00238000
*   RBUFPTR=INBUFPTR;               /* OVERLAY MAP INPUT AREA        */ 00239000
CPUAFN5A L     RBUFPTR,INBUFPTR(,COMMAPT)                          0100 00240000
*CPUAFN5B:                                                         0101 00241000
*                                                                  0101 00242000
*   /*****************************************************************/ 00243000
*   /*                                                               */ 00244000
*   /* TEST CPUID IN MSG REPLY                                       */ 00245000
*   /*                                                               */ 00246000
*   /*****************************************************************/ 00247000
*                                                                  0101 00248000
*   IF CPUID='NONE' THEN            /* WAS THE ID EQ TO NONE         */ 00249000
CPUAFN5B CLC   CPUID(4,RBUFPTR),@CC00388                           0101 00250000
         BNE   @RF00101                                            0101 00251000
*     DO;                           /* YES                           */ 00252000
*       SELDEFLP='0'B;              /* SET DEFAULT LOOP CPU 0        */ 00253000
         NI    SELDEFLP,B'01111111'                                0103 00254000
*       VERBCALL='0'B;              /* INDICATE THIS DEFAULT         */ 00255000
         NI    VERBCALL(COMMAPT),B'11011111'                       0104 00256000
*       GOTO CPUAFN01;              /* SET UP CPU AFFN CPU 0         */ 00257000
         B     CPUAFN01                                            0105 00258000
*     END;                          /* NO                          0106 00259000
*                                                                    */ 00260000
*CPUAFN06:                                                         0107 00261000
*                                                                  0107 00262000
*   /*****************************************************************/ 00263000
*   /*                                                               */ 00264000
*   /* CPU ID PROCESS                                                */ 00265000
*   /*                                                               */ 00266000
*   /*****************************************************************/ 00267000
*                                                                  0107 00268000
*   IF CPUID(2)=' ' THEN            /* IS THIS A 1 CHAR CPUID        */ 00269000
@RF00101 DS    0H                                                  0107 00270000
CPUAFN06 CLI   CPUID+1(RBUFPTR),C' '                               0107 00271000
         BNE   @RF00107                                            0107 00272000
*     DO;                           /* YES                           */ 00273000
*       IF CPUID(1)='0' THEN        /* IS THIS REQUEST FOR CPU 0     */ 00274000
         CLI   CPUID(RBUFPTR),C'0'                                 0109 00275000
         BE    @RT00109                                            0109 00276000
*         GOTO CPUAFN01;            /* YES, GO PROCESS               */ 00277000
*       IF CPUID(1)='1' THEN        /* IS THIS REQUEST FOR CPU 1     */ 00278000
         CLI   CPUID(RBUFPTR),C'1'                                 0111 00279000
         BE    @RT00111                                            0111 00280000
*         GOTO CPUAFN04;            /* YES, GO PROCESS               */ 00281000
*CPUAFN07:                          /* NO.                           */ 00282000
*                                                                  0113 00283000
*       /*************************************************************/ 00284000
*       /*                                                           */ 00285000
*       /* ERROR IN CPUID                                            */ 00286000
*       /*                                                           */ 00287000
*       /*************************************************************/ 00288000
*                                                                  0113 00289000
*       R1=IFD261I;                 /* GET PTR TO IFD261I MSG        */ 00290000
CPUAFN07 LA    @05,IFDMSG62                                        0113 00291000
         L     R1,IFD261I(,@05)                                    0113 00292000
*       R15=PARPRADR;               /* GET PARALLEL PRINT ADDR       */ 00293000
         L     R15,PARPRADR(,COMMAPT)                              0114 00294000
*       R15=6+R15;                  /* ENTRY POINT TO DPRINT         */ 00295000
         AH    R15,@CH00112                                        0115 00296000
*       GEN(BALR  14,15);           /* LINK TO MODULE                */ 00297000
         BALR  14,15                                                    00298000
*CPUAFN08:                                                         0117 00299000
*                                                                  0117 00300000
*       /*************************************************************/ 00301000
*       /*                                                           */ 00302000
*       /* REQUEST WITH IFD263D                                      */ 00303000
*       /*                                                           */ 00304000
*       /*************************************************************/ 00305000
*                                                                  0117 00306000
*       ECB=ECB&&ECB;               /* CLEAR ECB TO ZERO             */ 00307000
CPUAFN08 XC    ECB(4),ECB                                          0117 00308000
*       RPLYBUF(1)=' ';             /* CLEAR INPUT AREA WITH THIS    */ 00309000
         MVI   RPLYBUF,C' '                                        0118 00310000
*       RPLYBUF(2:12)=RPLYBUF(1);   /* CODE                    YM7207*/ 00311000
         MVI   RPLYBUF+2,C' '                                      0119 00312000
         MVC   RPLYBUF+3(9),RPLYBUF+2                              0119 00313000
         MVC   RPLYBUF+1(1),RPLYBUF                                0119 00314000
*       R1=IFD263D;                 /* GET PTR TO MSG IFD263D        */ 00315000
         LA    @05,IFDMSG62                                        0120 00316000
         L     R1,IFD263D(,@05)                                    0120 00317000
*       IF RETAINAC='1'B THEN       /* IF REI IS ACTIVE              */ 00318000
         TM    RETAINAC(COMMAPT),B'10000000'                       0121 00319000
         BNO   @RF00121                                            0121 00320000
*         DPMSGREI='1'B;            /* NO REI REPLY ALLOWED          */ 00321000
         OI    DPMSGREI(COMMAPT),B'00000001'                       0122 00322000
*       R15=PARPRADR;               /* GET PP ADDRESS          YM7207*/ 00323000
@RF00121 L     R15,PARPRADR(,COMMAPT)                              0123 00324000
*       R15=24+R15;                 /* ENTRY POINT TO DPRT     YM7207*/ 00325000
         AH    R15,@CH00068                                        0124 00326000
*       GEN(BALR  14,15);           /* LINK TO MODULE          YM7207*/ 00327000
         BALR  14,15                                                    00328000
*       RBUFPTR=BUFPTR62;           /* SET OVERLAY AREA MAP BASE     */ 00329000
         L     RBUFPTR,BUFPTR62                                    0126 00330000
*       IF VERBS='CPUAFFN=' THEN    /* WAS THE REPLY FOR AFFINITY    */ 00331000
         CLC   VERBS(8,RBUFPTR),@CC00386                           0127 00332000
         BE    @RT00127                                            0127 00333000
*         GOTO CPUAFN5B;            /* YES, GO PROCESS CPU ID        */ 00334000
*       GOTO CPUAFN08;              /* NO ERROR ON INPUT REQUEST     */ 00335000
         B     CPUAFN08                                            0129 00336000
*     END;                          /* NO                            */ 00337000
*   IF CPUID(3)¬=' ' THEN           /* IS THIS ERROR RPLY      YM7207*/ 00338000
@RF00107 CLI   CPUID+2(RBUFPTR),C' '                               0131 00339000
         BNE   @RT00131                                            0131 00340000
*     GOTO CPUAFN07;                /* YES,OUTPUT ERROR MSGYM7207    */ 00341000
*   IF CPUID(1:2)='00' THEN         /* IS THIS 2 CHAR CPU 00         */ 00342000
         CLC   CPUID(2,RBUFPTR),@CC00363                           0133 00343000
         BE    @RT00133                                            0133 00344000
*     GOTO CPUAFN01;                /* YES GO PROCESS                */ 00345000
*   IF CPUID(1:2)='01' THEN         /* NO,IS THIS 2 CHAR CPU 01      */ 00346000
         CLC   CPUID(2,RBUFPTR),@CC00382                           0135 00347000
         BE    @RT00135                                            0135 00348000
*     GOTO CPUAFN04;                /* YES, GO PROCESS               */ 00349000
*   GOTO CPUAFN07;                  /* NO, INVALID CPUID ERRMSG    0137 00350000
*                                                                    */ 00351000
         B     CPUAFN07                                            0137 00352000
*CPUAFN09:                                                         0138 00353000
*                                                                  0138 00354000
*   /*****************************************************************/ 00355000
*   /*                                                               */ 00356000
*   /* SET CPU AFFINITY INDICATOR AND EXIT                           */ 00357000
*   /*                                                               */ 00358000
*   /*****************************************************************/ 00359000
*                                                                  0138 00360000
*   AFFNSET='1'B;                   /* INDICATE SETTING TO CALLER    */ 00361000
CPUAFN09 OI    AFFNSET(COMMAPT),B'01000000'                        0138 00362000
*CPUAFN10:                                                         0139 00363000
*                                                                  0139 00364000
*   /*****************************************************************/ 00365000
*   /*                                                               */ 00366000
*   /* ERROR EXIT LABEL EXIT FUNCTION CPU AFFINITY                   */ 00367000
*   /*                                                               */ 00368000
*   /*****************************************************************/ 00369000
*                                                                  0139 00370000
*   RETURN;                                                        0139 00371000
@EL00001 L     @13,4(,@13)                                         0139 00372000
@EF00001 DS    0H                                                  0139 00373000
@ER00001 LM    @14,@12,12(@13)                                     0139 00374000
         BR    @14                                                 0139 00375000
*   END                             /* END SECTION                 0140 00376000
*                                                                    */ 00377000
*                                                                  0140 00378000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00379000
*/*%INCLUDE SYSLIB  (IFDPF1  )                                       */ 00380000
*                                                                  0140 00381000
*       ;                                                          0140 00382000
         B     @EL00001                                            0140 00383000
@DATA    DS    0H                                                       00384000
@CH00112 DC    H'6'                                                     00385000
@CH00068 DC    H'24'                                                    00386000
@CH00364 DC    XL2'01'                                                  00387000
@CH00369 DC    XL2'04'                                                  00388000
@CH00371 DC    XL2'08'                                                  00389000
         DS    0F                                                       00390000
@SA00001 DS    18F                                                      00391000
         DS    0F                                                       00392000
@CF00375 DC    XL4'0020'                                                00393000
         DS    0D                                                       00394000
BUFPTR62 DC    AL4(RPLYBUF)                                             00395000
@CC00363 DC    C'00'                                                    00396000
@CC00376 DC    C'05'                                                    00397000
@CC00382 DC    C'01'                                                    00398000
@CC00385 DC    C'CAN'                                                   00399000
@CC00388 DC    C'NONE'                                                  00400000
@CC00386 DC    C'CPUAFFN='                                              00401000
@CB00361 DC    X'8000'                                                  00402000
@CB00380 DC    X'4000'                                                  00403000
RPLYBUF  DS    CL12                                                     00404000
INTAL    DS    CL1                                                      00405000
         ORG   INTAL                                                    00406000
SELDEFLP DS    BL1                                                      00407000
@NM00038 EQU   INTAL+0                                                  00408000
         ORG   INTAL+1                                                  00409000
         DS    CL2                                                      00410000
ECB      DS    CL4                                                      00411000
IFDOLT62 CSECT                                                          00412000
*                                       /* CPU AFFINITY MESSAGES     */ 00413000
IFDMSG62 DS    0F                                                       00414000
         DC    A(MSG261I)                * MESSAGE ADDRESS  MSG261I   * 00415000
         DC    A(MSG262I)                * MESSAGE ADDRESS  MSG262I   * 00416000
         DC    A(MSG263D)                * MESSAGE ADDRESS  MSG263D   * 00417000
         DC    A(MSG264D)                * MESSAGE ADDRESS  MSG264D   * 00418000
         DC    A(MSG899I)                * MESSAGE ADDRESS  MSG899I   * 00419000
MSG261I  WTO   'IFD261I INVALID CPU ID ENTERED',ROUTCDE=10,DESC=7,MF=L  00420000
MSG262I  WTO   'IFD262I SELECTED CPU NOT AVAILABLE',ROUTCDE=10,DESC=7,MX00421000
               F=L                                                      00422000
MSG263D  DS    0F                                                       00423000
         DC    X'0C'                                           *YM05405 00424000
         DC    AL3(RPLYBUF)                                             00425000
         DC    AL4(ECB)                                                 00426000
         WTO   'IFD263D REPLY CPUAFFN=X OR NONE, X=CPUID, NONE FOR DEFAX00427000
               ULT',ROUTCDE=10,DESC=7,MF=L                              00428000
MSG264D  DS    0F                                                       00429000
         DC    X'0A'                                                    00430000
         DC    AL3(RPLYBUF)                                             00431000
         DC    AL4(ECB)                                                 00432000
         WTO   'IFD264D SYSTEM RESOURCE NOT AVAILABLE,REPLY CPUAFFN=/CAX00433000
               N/NONE',ROUTCDE=10,DESC=7,MF=L                           00434000
MSG899I  WTO   'IFD899I OLTEP INITIALIZATION CONFLICTS, OLTEP MUST TERMX00435000
               INATE-05',MF=L,ROUTCDE=10,DESC=7                         00436000
         IFDPATCH                                              *YM03337 00437000
IFDOLT62 CSECT                                                          00438000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00439000
@01      EQU   01                                                       00440000
@02      EQU   02                                                       00441000
@03      EQU   03                                                       00442000
@04      EQU   04                                                       00443000
@05      EQU   05                                                       00444000
@06      EQU   06                                                       00445000
@07      EQU   07                                                       00446000
@08      EQU   08                                                       00447000
@09      EQU   09                                                       00448000
@10      EQU   10                                                       00449000
@11      EQU   11                                                       00450000
@12      EQU   12                                                       00451000
@13      EQU   13                                                       00452000
@14      EQU   14                                                       00453000
@15      EQU   15                                                       00454000
LOOPCNT  EQU   @04                                                      00455000
RBUFPTR  EQU   @03                                                      00456000
COMMAPT  EQU   @02                                                      00457000
RETCODE  EQU   @15                                                      00458000
R0       EQU   @00                                                      00459000
R1       EQU   @01                                                      00460000
R14      EQU   @14                                                      00461000
R15      EQU   @15                                                      00462000
COMMAP   EQU   0                                                        00463000
INBUFPTR EQU   COMMAP+136                                               00464000
IOSCB    EQU   COMMAP+512                                               00465000
OECBWRD1 EQU   IOSCB+132                                                00466000
EFCTRCB  EQU   COMMAP+648                                               00467000
FLGA     EQU   EFCTRCB+8                                                00468000
FLGB     EQU   EFCTRCB+9                                                00469000
IODEVTAB EQU   COMMAP+672                                               00470000
IOECB1   EQU   IODEVTAB+8                                               00471000
CMPLT    EQU   IOECB1                                                   00472000
@NM00010 EQU   IOECB1+2                                                 00473000
SELAFFN  EQU   COMMAP+708                                               00474000
CHARAFFN EQU   COMMAP+710                                               00475000
CESWT9   EQU   COMMAP+862                                               00476000
CESWT10  EQU   COMMAP+863                                               00477000
AFFNSET  EQU   CESWT10                                                  00478000
VERBCALL EQU   CESWT10                                                  00479000
MCT      EQU   COMMAP+888                                               00480000
PARPRADR EQU   MCT+164                                                  00481000
WKSVC    EQU   COMMAP+1100                                              00482000
ROPT     EQU   WKSVC+4                                                  00483000
OLTTAB   EQU   COMMAP+1116                                              00484000
CESWITCH EQU   COMMAP+1456                                              00485000
CESWT    EQU   CESWITCH                                                 00486000
CESWT1   EQU   CESWITCH+1                                               00487000
CESWT2   EQU   CESWITCH+2                                               00488000
CESWT3   EQU   CESWITCH+3                                               00489000
CESWT4   EQU   CESWITCH+4                                               00490000
CESWT5   EQU   CESWITCH+5                                               00491000
CESWT6   EQU   CESWITCH+6                                               00492000
CESWT7   EQU   CESWITCH+7                                               00493000
CESWT8   EQU   CESWITCH+8                                               00494000
CESWTR   EQU   COMMAP+1532                                              00495000
RETAINAC EQU   CESWTR                                                   00496000
CESWTR1  EQU   COMMAP+1533                                              00497000
CESWTR2  EQU   COMMAP+1534                                              00498000
DPMSGREI EQU   CESWTR2                                                  00499000
REPLYMAP EQU   0                                                        00500000
VERBS    EQU   REPLYMAP                                                 00501000
CPUID    EQU   REPLYMAP+8                                               00502000
@NM00039 EQU   0                                                        00503000
IFD261I  EQU   @NM00039                                                 00504000
IFD262I  EQU   @NM00039+4                                               00505000
IFD263D  EQU   @NM00039+8                                               00506000
IFD264D  EQU   @NM00039+12                                              00507000
IFD899I  EQU   @NM00039+16                                              00508000
@NM00040 EQU   0                                                        00509000
MSGRETCD EQU   @NM00040+65                                              00510000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    00511000
@NM00041 EQU   @NM00040                                                 00512000
DEVTAB   EQU   COMMAP+2020                                              00513000
THIRDMCT EQU   COMMAP+1812                                              00514000
NEXTMCT  EQU   COMMAP+1604                                              00515000
@NM00037 EQU   COMMAP+1596                                              00516000
VRSIZE   EQU   COMMAP+1592                                              00517000
CORERSLT EQU   COMMAP+1584                                              00518000
PGFXOLT  EQU   COMMAP+1576                                              00519000
PARTITEM EQU   COMMAP+1564                                              00520000
PGFXLIST EQU   COMMAP+1548                                              00521000
SYMPTR   EQU   COMMAP+1544                                              00522000
EXPAND1  EQU   COMMAP+1540                                              00523000
@NM00036 EQU   COMMAP+1538                                              00524000
ZUESUCB  EQU   COMMAP+1536                                              00525000
CESWTR3  EQU   COMMAP+1535                                              00526000
@NM00035 EQU   CESWTR2                                                  00527000
OPTERR   EQU   CESWTR2                                                  00528000
WAIT     EQU   CESWTR2                                                  00529000
COMLOOP  EQU   CESWTR2                                                  00530000
ONCOMM   EQU   CESWTR2                                                  00531000
@NM00034 EQU   CESWTR2                                                  00532000
REPLY00  EQU   CESWTR2                                                  00533000
REIENTRY EQU   CESWTR1                                                  00534000
EDOTMSG  EQU   CESWTR1                                                  00535000
REMANS   EQU   CESWTR1                                                  00536000
RETRIEVE EQU   CESWTR1                                                  00537000
INFOMSG  EQU   CESWTR1                                                  00538000
CECOMANS EQU   CESWTR1                                                  00539000
EXECANS  EQU   CESWTR1                                                  00540000
ILLRESP  EQU   CESWTR1                                                  00541000
@NM00033 EQU   CESWTR                                                   00542000
EXECOUT  EQU   CESWTR                                                   00543000
IMRESP   EQU   CESWTR                                                   00544000
TRANSMSG EQU   CESWTR                                                   00545000
CENOMSG  EQU   CESWTR                                                   00546000
REMONMSG EQU   CESWTR                                                   00547000
REMERR   EQU   CESWTR                                                   00548000
REIUCB   EQU   COMMAP+1528                                              00549000
RESPBUF  EQU   COMMAP+1524                                              00550000
TALKECB  EQU   COMMAP+1520                                              00551000
REIECB   EQU   COMMAP+1516                                              00552000
REIOBPTR EQU   COMMAP+1512                                              00553000
REIDCBPT EQU   COMMAP+1508                                              00554000
RINBUF   EQU   COMMAP+1504                                              00555000
RTALKBUF EQU   COMMAP+1500                                              00556000
MHRPTR   EQU   COMMAP+1496                                              00557000
ENDJOB   EQU   COMMAP+1492                                              00558000
MSGMOD   EQU   COMMAP+1488                                              00559000
RDCBPTR  EQU   COMMAP+1484                                              00560000
READDMOD EQU   COMMAP+1480                                              00561000
@NM00032 EQU   COMMAP+1477                                              00562000
READDSV  EQU   COMMAP+1471                                              00563000
CNT37    EQU   COMMAP+1470                                              00564000
DPLEVEL  EQU   COMMAP+1469                                              00565000
UNITUSE  EQU   COMMAP+1468                                              00566000
UNICTR   EQU   COMMAP+1467                                              00567000
SECTUSE  EQU   COMMAP+1466                                              00568000
DYNCOM   EQU   COMMAP+1465                                              00569000
TALKHERE EQU   CESWT8                                                   00570000
SNEWRUN  EQU   CESWT8                                                   00571000
SUTMSG   EQU   CESWT8                                                   00572000
OLTINVV  EQU   CESWT8                                                   00573000
READDCHK EQU   CESWT8                                                   00574000
@NM00031 EQU   CESWT8                                                   00575000
@NM00030 EQU   CESWT8                                                   00576000
LISTFIX  EQU   CESWT8                                                   00577000
GOTINPUT EQU   CESWT7                                                   00578000
VIRTUAL  EQU   CESWT7                                                   00579000
@NM00029 EQU   CESWT7                                                   00580000
@NM00028 EQU   CESWT7                                                   00581000
@NM00027 EQU   CESWT7                                                   00582000
REMOTE   EQU   CESWT7                                                   00583000
RETTO31  EQU   CESWT7                                                   00584000
INCLST   EQU   CESWT7                                                   00585000
RTSTAE   EQU   CESWT6                                                   00586000
SECRUN   EQU   CESWT6                                                   00587000
NORUN    EQU   CESWT6                                                   00588000
CODE5    EQU   CESWT6                                                   00589000
PFPMSG   EQU   CESWT6                                                   00590000
EOFBIT   EQU   CESWT6                                                   00591000
ATM      EQU   CESWT6                                                   00592000
UTSCAL   EQU   CESWT6                                                   00593000
PRNTOPTN EQU   CESWT5                                                   00594000
SYMBFLG  EQU   CESWT5                                                   00595000
PCEMSG   EQU   CESWT5                                                   00596000
PFEMSG   EQU   CESWT5                                                   00597000
FCEFLG   EQU   CESWT5                                                   00598000
FFEFLG   EQU   CESWT5                                                   00599000
RSLTFLG  EQU   CESWT5                                                   00600000
HDRFLG   EQU   CESWT5                                                   00601000
WTOFLG   EQU   CESWT4                                                   00602000
RPLYFLG  EQU   CESWT4                                                   00603000
WTORFLG  EQU   CESWT4                                                   00604000
@NM00026 EQU   CESWT4                                                   00605000
WRTFLG   EQU   CESWT4                                                   00606000
WAITFLG  EQU   CESWT4                                                   00607000
DPRFLG   EQU   CESWT4                                                   00608000
RSTRFLG  EQU   CESWT4                                                   00609000
NODP     EQU   CESWT3                                                   00610000
CDEXIST  EQU   CESWT3                                                   00611000
TP1419   EQU   CESWT3                                                   00612000
SUSDEL   EQU   CESWT3                                                   00613000
GRBCNTL  EQU   CESWT3                                                   00614000
BYPDEV   EQU   CESWT3                                                   00615000
BYPALDEV EQU   CESWT3                                                   00616000
TALKVERB EQU   CESWT3                                                   00617000
@NM00025 EQU   CESWT2                                                   00618000
TAPEHDR  EQU   CESWT2                                                   00619000
NDR      EQU   CESWT2                                                   00620000
INITENT  EQU   CESWT2                                                   00621000
@NM00024 EQU   CESWT2                                                   00622000
FECOND   EQU   CESWT2                                                   00623000
@NM00023 EQU   CESWT2                                                   00624000
NDCFO    EQU   CESWT2                                                   00625000
TPFLAG   EQU   CESWT1                                                   00626000
ONLINEOK EQU   CESWT1                                                   00627000
@NM00022 EQU   CESWT1                                                   00628000
FILMSK   EQU   CESWT1                                                   00629000
WAITFG   EQU   CESWT1                                                   00630000
@NM00021 EQU   CESWT1                                                   00631000
SKTST    EQU   CESWT1                                                   00632000
RTNFLD   EQU   CESWT1                                                   00633000
@NM00020 EQU   CESWT                                                    00634000
FERINT   EQU   CESWT                                                    00635000
REINT    EQU   CESWT                                                    00636000
LEGALDEV EQU   CESWT                                                    00637000
NUTS     EQU   CESWT                                                    00638000
OUTS     EQU   CESWT                                                    00639000
SECDEV   EQU   CESWT                                                    00640000
LEGALTST EQU   CESWT                                                    00641000
SAVENT   EQU   COMMAP+1452                                              00642000
@NM00019 EQU   COMMAP+1450                                              00643000
SAVECNT  EQU   COMMAP+1448                                              00644000
HRTSEL   EQU   COMMAP+1446                                              00645000
TLCOUNT  EQU   COMMAP+1444                                              00646000
TPSAVE   EQU   COMMAP+1440                                              00647000
MSGAD37  EQU   COMMAP+1436                                              00648000
REPLY37  EQU   COMMAP+1364                                              00649000
ECB37    EQU   COMMAP+1360                                              00650000
ADSVAREA EQU   COMMAP+1356                                              00651000
NEXTREC  EQU   COMMAP+1352                                              00652000
COMMINT  EQU   COMMAP+1348                                              00653000
REDEFINE EQU   COMMAP+1344                                              00654000
SECDVPTR EQU   COMMAP+1340                                              00655000
PRIDVPTR EQU   COMMAP+1336                                              00656000
DPRDEBAD EQU   COMMAP+1332                                              00657000
EXTBUF   EQU   COMMAP+1276                                              00658000
UTCOM    EQU   COMMAP+1212                                              00659000
ECB3     EQU   COMMAP+1208                                              00660000
TSTDEBAD EQU   COMMAP+1204                                              00661000
TUCBAD2  EQU   COMMAP+1200                                              00662000
TUCBAD1  EQU   COMMAP+1196                                              00663000
REGX     EQU   COMMAP+1192                                              00664000
PLKMOR   EQU   COMMAP+1176                                              00665000
SATAB    EQU   COMMAP+1164                                              00666000
SCHEDSA  EQU   COMMAP+1160                                              00667000
LOGADR   EQU   COMMAP+1156                                              00668000
@NM00018 EQU   OLTTAB+32                                                00669000
TAB28    EQU   OLTTAB+28                                                00670000
@NM00017 EQU   OLTTAB                                                   00671000
@NM00016 EQU   WKSVC+8                                                  00672000
@NM00015 EQU   WKSVC                                                    00673000
MCT1ADR  EQU   COMMAP+1096                                              00674000
@NM00014 EQU   MCT+168                                                  00675000
@NM00013 EQU   MCT                                                      00676000
UTCOMAD  EQU   COMMAP+884                                               00677000
TABAD    EQU   COMMAP+880                                               00678000
DEVDEPAD EQU   COMMAP+876                                               00679000
PSCT     EQU   COMMAP+872                                               00680000
OPEN3    EQU   COMMAP+868                                               00681000
OPEN2    EQU   COMMAP+864                                               00682000
MPSYS    EQU   CESWT10                                                  00683000
@NM00012 EQU   CESWT9                                                   00684000
VRCAP    EQU   CESWT9                                                   00685000
RESTBENT EQU   CESWT9                                                   00686000
CDSEQU   EQU   CESWT9                                                   00687000
TABLNGTH EQU   COMMAP+860                                               00688000
DEVTBPTR EQU   COMMAP+856                                               00689000
XXXXXXXX EQU   COMMAP+712                                               00690000
WTCMPCD  EQU   @NM00010                                                 00691000
@NM00011 EQU   @NM00010                                                 00692000
PSUDPOST EQU   @NM00010                                                 00693000
@NM00009 EQU   IOECB1+1                                                 00694000
CMPLCODE EQU   CMPLT                                                    00695000
POSTBIT  EQU   CMPLT                                                    00696000
WAITBIT  EQU   CMPLT                                                    00697000
IOSBPTR1 EQU   IODEVTAB+4                                               00698000
IODEV1   EQU   IODEVTAB                                                 00699000
IOEFTRAD EQU   COMMAP+668                                               00700000
SEEKPTR  EQU   EFCTRCB+16                                               00701000
TECBPTRX EQU   EFCTRCB+12                                               00702000
SNSCNT   EQU   EFCTRCB+11                                               00703000
FILEMSK  EQU   EFCTRCB+10                                               00704000
@NM00008 EQU   FLGB                                                     00705000
@NM00007 EQU   FLGB                                                     00706000
@NM00006 EQU   FLGB                                                     00707000
@NM00005 EQU   FLGB                                                     00708000
OLDTECBX EQU   FLGB                                                     00709000
VIRTCCWS EQU   FLGB                                                     00710000
ATTNIN   EQU   FLGB                                                     00711000
INTIRNAL EQU   FLGB                                                     00712000
@NM00004 EQU   FLGA                                                     00713000
@NM00003 EQU   FLGA                                                     00714000
@NM00002 EQU   FLGA                                                     00715000
@NM00001 EQU   FLGA                                                     00716000
SPEXPOS  EQU   FLGA                                                     00717000
GDP      EQU   FLGA                                                     00718000
CEDEPOST EQU   FLGA                                                     00719000
BYPASPFX EQU   FLGA                                                     00720000
DVTPTR   EQU   EFCTRCB+4                                                00721000
CCWPTR   EQU   EFCTRCB                                                  00722000
OECBX    EQU   OECBWRD1+2                                               00723000
OECBINCT EQU   OECBWRD1+1                                               00724000
OECBSNSC EQU   OECBWRD1                                                 00725000
MODUSECB EQU   IOSCB+108                                                00726000
MODIOSB  EQU   IOSCB                                                    00727000
DIEPTR   EQU   COMMAP+508                                               00728000
ABNMEXIT EQU   COMMAP+504                                               00729000
NORMEXIT EQU   COMMAP+500                                               00730000
PCIEXIT  EQU   COMMAP+496                                               00731000
SECLST   EQU   COMMAP+358                                               00732000
PGMTAB   EQU   COMMAP+350                                               00733000
DATIND   EQU   COMMAP+348                                               00734000
DATPTR   EQU   COMMAP+344                                               00735000
UTENT    EQU   COMMAP+340                                               00736000
SECPTR   EQU   COMMAP+336                                               00737000
PRTBUFR  EQU   COMMAP+212                                               00738000
INBUFR   EQU   COMMAP+140                                               00739000
LGWRTCT  EQU   COMMAP+96                                                00740000
DOLT00PT EQU   COMMAP+92                                                00741000
CHASCT   EQU   COMMAP                                                   00742000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      00743000
@RT00023 EQU   CPUAFN5A                                                 00744000
@RT00032 EQU   CPUAFN09                                                 00745000
@RT00034 EQU   CPUAFN03                                                 00746000
@RT00036 EQU   CPUAFN05                                                 00747000
@RF00093 EQU   CPUAFN05                                                 00748000
@RT00109 EQU   CPUAFN01                                                 00749000
@RT00111 EQU   CPUAFN04                                                 00750000
@RT00127 EQU   CPUAFN5B                                                 00751000
@RT00131 EQU   CPUAFN07                                                 00752000
@RT00133 EQU   CPUAFN01                                                 00753000
@RT00135 EQU   CPUAFN04                                                 00754000
CPUAFN10 EQU   @EL00001                                                 00755000
@ENDDATA EQU   *                                                        00756000
         END   IFDOLT62                                                 00757000
./  ADD  SSI=43440014,NAME=IFDOLT67
         TITLE 'IFDOLT67  STAGING DASD DATA PROTECTION                 *00001000
                        '                                               00002000
IFDOLT67 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IFDOLT67  74.344'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         ST    @13,@SA00001+4                                      0001 00014000
         LA    @14,@SA00001                                        0001 00015000
         ST    @14,8(,@13)                                         0001 00016000
         LR    @13,@14                                             0001 00017000
         USING CHASCT,2                                                 00018000
*        DEVTABPT=R7;              /* SAVE PTR TO DEVTAB     @Y30LPAW*/ 00019000
         LR    DEVTABPT,R7                                         0060 00020000
*        UCBPTR=DEVUCBAD;          /* SET PTR TO UCB         @Y30LPAW*/ 00021000
         L     UCBPTR,DEVUCBAD(,DEVTABPT)                          0061 00022000
*        IF UCBRVDEV='1'B &        /* CHK IF ITS VIRTUAL AND @Y30LPAW*/ 00023000
*           ONLINE='1'B THEN       /* ONLINE                 @Y30LPAW*/ 00024000
         TM    UCBRVDEV(UCBPTR),B'00001000'                        0062 00025000
         BNO   @RF00062                                            0062 00026000
         TM    ONLINE(DEVTABPT),B'10000000'                        0062 00027000
         BNO   @RF00062                                            0062 00028000
*           DO;                    /* IF SO-DO THIS          @Y30LPAW*/ 00029000
*              FLD468=DEVEBCAD(5:8);    /* PUT DEVAD IN MSG  @Y30LPAW*/ 00030000
         LA    @05,IFD468                                          0064 00031000
         MVC   FLD468(4,@05),DEVEBCAD+4(DEVTABPT)                  0064 00032000
*              R3=ADDR(IFD468);    /* POINT TO MSG           @Y30LPAW*/ 00033000
         LR    R3,@05                                              0065 00034000
*              GEN(PWTO REG=(R3)); /* AND ISSUE IT           @Y30LPAW*/ 00035000
         PWTO REG=(R3)                                                  00036000
*              MYRETCD=4;          /* SET MY RET CODE        @Y30LPAW*/ 00037000
         MVI   MYRETCD,X'04'                                       0067 00038000
*              GOTO DONE;          /* AND GET OUT            @Y30LPAW*/ 00039000
         B     DONE                                                0068 00040000
*           END;                   /*                        @Y30LPAW*/ 00041000
*        FLD469=DEVEBCAD(5:8);     /* PUT DEVAD IN MSG       @Y30LPAW*/ 00042000
@RF00062 LA    @05,IFD469                                          0070 00043000
         MVC   FLD469(4,@05),DEVEBCAD+4(DEVTABPT)                  0070 00044000
*        INBUFAD=ADDR(INBUFR);     /* POINT TO INBUFR        @Y30LPAW*/ 00045000
         LA    @03,INBUFR                                          0071 00046000
         ST    @03,INBUFAD(,@05)                                   0071 00047000
*        WTORLNGT='06'X;           /* SET REPLY COUNT        @Y30LPAW*/ 00048000
         MVI   WTORLNGT(@05),X'06'                                 0072 00049000
*        ECBPTR=ADDR(ECB);         /* SET PTR TO ECB         @Y30LPAW*/ 00050000
         LA    @03,ECB                                             0073 00051000
         ST    @03,ECBPTR(,@05)                                    0073 00052000
*COM469:                           /*                        @Y30LPAW*/ 00053000
*        ECB=ECB&&ECB;             /* CLEAR ECB FOR WTOR     @Y30LPAW*/ 00054000
COM469   XC    ECB(4),ECB                                          0074 00055000
*        REPLY=REPLY&&REPLY;       /* CLEAR REPLY BUFR       @Y30LPAW*/ 00056000
         LA    @05,INBUFR                                          0075 00057000
         XC    REPLY(6,@05),REPLY(@05)                             0075 00058000
*        R3=ADDR(IFD469);          /* POINT TO MSG           @Y30LPAW*/ 00059000
         LA    R3,IFD469                                           0076 00060000
*        GEN(PWTOR REG=(R3),WAIT=YES);  /* ISSUE IT AND WAIT @Y30LPAW*/ 00061000
         PWTOR REG=(R3),WAIT=YES                                        00062000
*        SVREPLY=REPLY;            /* SAVE THE REPLY         @Y30LPAW*/ 00063000
         LA    @05,INBUFR                                          0078 00064000
         MVC   SVREPLY(6),REPLY(@05)                               0078 00065000
*        IF SVREPLY='CANCEL' THEN  /* DID HE CANCEL ?        @Y30LPAW*/ 00066000
         CLC   SVREPLY(6),@CC00639                                 0079 00067000
         BNE   @RF00079                                            0079 00068000
*           DO;                         /* IF YES, DO THIS   @Y30LPAW*/ 00069000
*              MYRETCD=4;          /* SET MY RET CODE        @Y30LPAW*/ 00070000
         MVI   MYRETCD,X'04'                                       0081 00071000
*              GOTO DONE;               /* AND GO BACK       @Y30LPAW*/ 00072000
         B     DONE                                                0082 00073000
*           END;                        /*                   @Y30LPAW*/ 00074000
*        DO ICALL=1 TO 3 WHILE     /* LOOK FOR S0 IN REPLY   @Y30LPAW*/ 00075000
*           (SVREPLY(ICALL:ICALL+1)¬='S0');  /* IN REPLY     @Y30LPAW*/ 00076000
@RF00079 LA    ICALL,1                                             0084 00077000
@DL00084 LA    @03,SVREPLY-1(ICALL)                                0084 00078000
         CLC   0(2,@03),@CC00640                                   0084 00079000
         BE    @DC00084                                            0084 00080000
*        END;                      /*                        @Y30LPAW*/ 00081000
         AH    ICALL,@CH00055                                      0085 00082000
         CH    ICALL,@CH00235                                      0085 00083000
         BNH   @DL00084                                            0085 00084000
@DC00084 DS    0H                                                  0086 00085000
*        IF ICALL>3 THEN           /* IF NOT THERE           @Y30LPAW*/ 00086000
         CH    ICALL,@CH00235                                      0086 00087000
         BH    @RT00086                                            0086 00088000
*           GOTO COM469;           /*  GO REISSUE MSG        @Y30LPAW*/ 00089000
*        NN(1:2)=SVREPLY(ICALL+2:ICALL+3);  /* MOVE THE ID   @Y30LPAW*/ 00090000
         LA    @03,SVREPLY+1(ICALL)                                0088 00091000
         MVC   NN(2),0(@03)                                        0088 00092000
*        FROMADR=ADDR(NN);         /* SET UP TO CNVRT ID     @Y30LPAW*/ 00093000
         LA    @05,NN                                              0089 00094000
         ST    @05,FROMADR                                         0089 00095000
*        TOADR=ADDR(CVRTID);       /*                        @Y30LPAW*/ 00096000
         LA    @05,CVRTID                                          0090 00097000
         ST    @05,TOADR                                           0090 00098000
*        FLGCNT='0002'X;           /*                        @Y30LPAW*/ 00099000
         MVC   FLGCNT(2),@CB00602                                  0091 00100000
*        R1=ADDR(CONVERT);         /* POINT TO PARMLIST      @Y30LPAW*/ 00101000
         LA    R1,CONVERT                                          0092 00102000
*        R15=TAB28;                /* POINT TO CNVRT MODULE  @Y30LPAW*/ 00103000
         L     R15,TAB28                                           0093 00104000
*        GEN(BALR R14,R15);        /* AND GO TO IT           @Y30LPAW*/ 00105000
         BALR R14,R15                                                   00106000
*        IF R15¬='00'X THEN        /* CNVRT OK               @Y30LPAW*/ 00107000
         LTR   R15,R15                                             0095 00108000
         BNZ   @RT00095                                            0095 00109000
*           GOTO COM469;           /* IF NOT - REISSUE MSG   @Y30LPAW*/ 00110000
*         VOFTEST='1'B;         /*SET TEST DEFINITION        @Y03LPMY*/ 00111000
         OI    VOFTEST,B'00010000'                                 0097 00112000
*        VOFSSID=HEXSSID;          /* SET UP FOR VARY        @Y30LPAW*/ 00113000
         MVC   VOFSSID(2),HEXSSID                                  0098 00114000
*        VOFRUA=DEVAD;             /* AND                    @Y30LPAW*/ 00115000
*                                                                  0099 00116000
         MVC   VOFRUA(2),DEVAD(DEVTABPT)                           0099 00117000
*          /********************************************************* @ 00118000
*30LB02*/                                                          0100 00119000
*          /*MACMEAN  MSSC VARYON/VARYOFF MACRO                       @ 00120000
*30LB02*/                                                          0100 00121000
*          /*VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00                  @ 00122000
*30LB02*/                                                          0100 00123000
*          /*THIS IS THE OUTPUT FOR THE EXECUTE FORM.                 @ 00124000
*30LB02*/                                                          0100 00125000
*          /*THE LIST FORM OF THIS MACRO SHOULD BE                    @ 00126000
*30LB02*/                                                          0100 00127000
*          /*INVOKED FIRST IN ORDER TO SET UP NECESSARY               @ 00128000
*30LB02*/                                                          0100 00129000
*          /*DECLARES.  IF THE COMPLETE ARGUMENT IS                   @ 00130000
*30LB02*/                                                          0100 00131000
*          /*SPECIFIED THE REQ BLOCK WILL BE ZEROED.                  @ 00132000
*30LB02*/                                                          0100 00133000
*          /********************************************************* @ 00134000
*30LB02*/                                                          0100 00135000
*          RFY(ICBR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/              0100 00136000
*                                                                  0100 00137000
*          ICBR1=ADDR(VOFLST); /*R1 PTR TO REQUEST BLOCK @Y30LB02*/     00138000
         LA    ICBR1,VOFLST                                        0101 00139000
*          VOFLEN='18'X;  /*LENG-VARYOFF REQUEST BLOCK @Y30LB02*/  0102 00140000
         LA    @05,24                                              0102 00141000
         ST    @05,VOFLEN                                          0102 00142000
*          VOFOPCD='0C'X;/*OPCODE FOR VARYOFF REQ @Y30LB02*/       0103 00143000
         MVI   VOFOPCD,X'0C'                                       0103 00144000
*          SVC   (126);/*INVOKE THE SVC @Y30LB02*/                 0104 00145000
         SVC   126                                                 0104 00146000
*          RFY  ICBR1  UNRSTD;/*UNRESTRICT REG 1 @Y30LB02*/  /* GO VARY 00147000
*OFF   @Y30LPAW*/                                                  0105 00148000
*        VRETCODE=R15;             /* SAVE RETCODE           @Y30LPAW*/ 00149000
         ST    R15,@TF00001                                        0106 00150000
         MVC   VRETCODE(4),@TF00001                                0106 00151000
*        VERRCODE=R0;              /* SAVE ERRCODE IN CASE   @Y30LPAW*/ 00152000
         ST    R0,@TF00001                                         0107 00153000
         MVC   VERRCODE(4),@TF00001                                0107 00154000
*        IF RETCODE¬='00'X THEN    /* IF ITS NOT 0 GO CHK IT @Y30LPAW*/ 00155000
         CLI   RETCODE,X'00'                                       0108 00156000
         BNE   @RT00108                                            0108 00157000
*           GOTO CHKCODES;         /* FOR OTHER CODES        @Y30LPAW*/ 00158000
*        IF ONLINE='1'B THEN       /* IS IT ONLINE           @Y30LPAW*/ 00159000
         TM    ONLINE(DEVTABPT),B'10000000'                        0110 00160000
         BNO   @RF00110                                            0110 00161000
*           DO;                    /* IF SO- DO THIS         @Y30LPAW*/ 00162000
*              FLD468=DEVEBCAD(5:8);    /* SET UP MSG        @Y30LPAW*/ 00163000
         LA    @05,IFD468                                          0112 00164000
         MVC   FLD468(4,@05),DEVEBCAD+4(DEVTABPT)                  0112 00165000
*              R3=ADDR(IFD468);    /* BECAUSE THIS IS NOT    @Y30LPAW*/ 00166000
         LR    R3,@05                                              0113 00167000
*              GEN(PWTO REG=(R3)); /* ALLOWED                @Y30LPAW*/ 00168000
         PWTO REG=(R3)                                                  00169000
*         VONSTAG='1'B;         /*SET STAGING ATTRIBUTE      @Y03LPMY*/ 00170000
         OI    VONSTAG,B'10000000'                                 0115 00171000
*              VONSSID=HEXSSID;    /* SET UP TO VARY ON      @Y30LPAW*/ 00172000
*                                                                  0116 00173000
         MVC   VONSSID(2),HEXSSID                                  0116 00174000
*                /***************************************************** 00175000
**** @Y30LB02*/                                                    0117 00176000
*                /*MACMEAN  MSSC VARYON/VARYOFF MACRO              0117 00177000
*    @Y30LB02*/                                                    0117 00178000
*                /*VS1-4/VS2-3 VERSION-- 06/09/74 LEVEL 00         0117 00179000
*    @Y30LB02*/                                                    0117 00180000
*                /*THIS IS THE OUTPUT FOR THE EXECUTE FORM.        0117 00181000
*    @Y30LB02*/                                                    0117 00182000
*                /*THE LIST FORM OF THIS MACRO SHOULD BE           0117 00183000
*    @Y30LB02*/                                                    0117 00184000
*                /*INVOKED FIRST IN ORDER TO SET UP NECESSARY      0117 00185000
*    @Y30LB02*/                                                    0117 00186000
*                /*DECLARES.  IF THE COMPLETE ARGUMENT IS          0117 00187000
*    @Y30LB02*/                                                    0117 00188000
*                /*SPECIFIED THE REQ BLOCK WILL BE ZEROED.         0117 00189000
*    @Y30LB02*/                                                    0117 00190000
*                /***************************************************** 00191000
**** @Y30LB02*/                                                    0117 00192000
*                RFY(ICBR1)RSTD;/*RESTRICT REG 1 @Y30LB02*/        0117 00193000
*                                                                  0117 00194000
*                ICBR1=ADDR(VONLST); /*R1 PTR TO REQUEST BLOCK @Y30LB02 00195000
*/                                                                 0118 00196000
         LA    ICBR1,VONLST                                        0118 00197000
*                VONLEN='0C'X;  /*LENG-VARYON REQUEST BLOCK @Y30LB02*/  00198000
         LA    @03,12                                              0119 00199000
         ST    @03,VONLEN                                          0119 00200000
*                VONOPCD='0A'X;/*VARYON  OPCODE @Y30LB02*/         0120 00201000
         MVI   VONOPCD,X'0A'                                       0120 00202000
*                SVC   (126);/*INVOKE THE SVC @Y30LB02*/           0121 00203000
         SVC   126                                                 0121 00204000
*                RFY  ICBR1  UNRSTD;/*UNRESTRICT REG 1 @Y30LB02*/  /* D 00205000
* IT   @Y30LPAW*/                                                  0122 00206000
*              VRETCODE=R15;       /* SAVE THOSE CODES       @Y30LPAW*/ 00207000
         ST    R15,@TF00001                                        0123 00208000
         MVC   VRETCODE(4),@TF00001                                0123 00209000
*              VERRCODE=R0;        /* AGAIN                  @Y30LPAW*/ 00210000
         ST    R0,@TF00001                                         0124 00211000
         MVC   VERRCODE(4),@TF00001                                0124 00212000
*              IF RETCODE='00'X THEN    /* IF IT WENT OK     @Y30LPAW*/ 00213000
         CLI   RETCODE,X'00'                                       0125 00214000
         BNE   @RF00125                                            0125 00215000
*                 DO;              /*                        @Y30LPAW*/ 00216000
*                   MYRETCD=4;     /* SET MY RET CODE        @Y30LPAW*/ 00217000
         MVI   MYRETCD,X'04'                                       0127 00218000
*                   GOTO DONE;     /* AND GET OUT            @Y30LPAW*/ 00219000
         B     DONE                                                0128 00220000
*                 END;             /*                        @Y30LPAW*/ 00221000
*              FROMADR=ADDR(ERRCODE);   /* SET UP TO CNVRT   @Y30LPAW*/ 00222000
@RF00125 LA    @03,ERRCODE                                         0130 00223000
         ST    @03,FROMADR                                         0130 00224000
*              TOADR=ADDR(EBCERR); /* ERROR CODE             @Y30LPAW*/ 00225000
         LA    @03,EBCERR                                          0131 00226000
         ST    @03,TOADR                                           0131 00227000
*              FLGCNT='8002'X;     /* INTO EBCDIC            @Y30LPAW*/ 00228000
         MVC   FLGCNT(2),@CB00644                                  0132 00229000
*              R1=ADDR(CONVERT);   /* POINT TO PARM LIST     @Y30LPAW*/ 00230000
         LA    R1,CONVERT                                          0133 00231000
*              R15=TAB28;          /* POINT TO CNVRT MODULE  @Y30LPAW*/ 00232000
         L     R15,TAB28                                           0134 00233000
*              GEN(BALR R14,R15);  /* AND GO DO IT           @Y30LPAW*/ 00234000
         BALR R14,R15                                                   00235000
*              MSGCODE=EBCERRCD;   /* PUT CODE IN MSG        @Y30LPAW*/ 00236000
         LA    @03,IFD470                                          0136 00237000
         MVC   MSGCODE(3,@03),EBCERRCD                             0136 00238000
*              SSIDC=NN;           /* PUT ID IN MSG          @Y30LPAW*/ 00239000
         MVC   SSIDC(2),NN                                         0137 00240000
*              MSGFLD=MSGFLDC;     /* GET IT TOGETHER        @Y30LPAW*/ 00241000
         MVC   MSGFLD(28,@03),MSGFLDC                              0138 00242000
*              R3=ADDR(IFD470);    /* POINT TO MSG           @Y30LPAW*/ 00243000
         LA    @15,IFD470                                          0139 00244000
         LR    R3,@15                                              0139 00245000
*              GEN(PWTO REG=(R3)); /* AND ISSUE IT           @Y30LPAW*/ 00246000
         PWTO REG=(R3)                                                  00247000
*              MYRETCD=4;          /* SET MY RET CODE        @Y30LPAW*/ 00248000
         MVI   MYRETCD,X'04'                                       0141 00249000
*              GOTO DONE;          /* AND GET OUT            @Y30LPAW*/ 00250000
         B     DONE                                                0142 00251000
*           END;                   /*                        @Y30LPAW*/ 00252000
*        SYMBSSID='1'B;            /* SET FLAG TO INDICATE   @Y30LPAW*/ 00253000
@RF00110 OI    SYMBSSID(DEVTABPT),B'00000001'                      0144 00254000
*        CDSYMNAM(1:2)='S0';       /* SSID IS IN SYMBOLIC    @Y30LPAW*/ 00255000
         MVC   CDSYMNAM(2,DEVTABPT),@CC00640                       0145 00256000
*        CDSYMNAM(3:4)=NN;         /* AND MOVE IT IN         @Y30LPAW*/ 00257000
         MVC   CDSYMNAM+2(2,DEVTABPT),NN                           0146 00258000
*        CDSYMNAM(5:8)='    ';     /* THESE ARE BLANK        @Y30LPAW*/ 00259000
         MVC   CDSYMNAM+4(4,DEVTABPT),@CC00645                     0147 00260000
*        SSIDHEX=HEXSSID;          /* SET UP TO PUT ID IN    @Y30LPAW*/ 00261000
         LA    @03,ROPT                                            0148 00262000
         LR    @15,@03                                             0148 00263000
         SH    @15,@CH00106                                        0148 00264000
         MVC   SSIDHEX(2,@15),HEXSSID                              0148 00265000
*        SSIDEBC=NN;               /* SSIDLIST               @Y30LPAW*/ 00266000
         MVC   SSIDEBC(2,@15),NN                                   0149 00267000
*        MODID='67';               /* SET MODULE ID          @Y30LPAW*/ 00268000
         MVC   MODID(2,@15),@CC00646                               0150 00269000
*        R0=ADDR(ROPT);            /* POINT TO PARMLST FOR   @Y30LPAW*/ 00270000
         LR    R0,@03                                              0151 00271000
*        R1='10'X;                 /* SVC59-SET CALL CODE    @Y30LPAW*/ 00272000
         LA    R1,16                                               0152 00273000
*        GEN(SVC 59);              /* AND GO TO IT           @Y30LPAW*/ 00274000
         SVC 59                                                         00275000
*        MYRETCD='00'X;            /* SET MY RETCD           @Y30LPAW*/ 00276000
         MVI   MYRETCD,X'00'                                       0154 00277000
*        GOTO DONE;                /* AND GET OUT            @Y30LPAW*/ 00278000
         B     DONE                                                0155 00279000
*CHKCODES:                         /* CHK ERROR CODES        @Y30LPAW*/ 00280000
*         IF ERRCODE='0078'X |  /*IF IN TEST OR              @Y03LPMY*/ 00281000
*            ERRCODE='0034'X THEN /*REAL ITS OK              @Y03LPMY*/ 00282000
CHKCODES CLC   ERRCODE(2),@CB00648                                 0156 00283000
         BE    @RT00156                                            0156 00284000
         CLC   ERRCODE(2),@CB00649                                 0156 00285000
         BNE   @RF00156                                            0156 00286000
@RT00156 DS    0H                                                  0157 00287000
*           DO;                    /*                        @Y30LPAW*/ 00288000
*              MYRETCD='00'X;      /* SET MY RETURN CODE     @Y30LPAW*/ 00289000
         MVI   MYRETCD,X'00'                                       0158 00290000
*              GOTO DONE;          /* AND GET OUT            @Y30LPAW*/ 00291000
         B     DONE                                                0159 00292000
*           END;                   /*                        @Y30LPAW*/ 00293000
*        FROMADR=ADDR(ERRCODE);    /* SET UP TO CNVRT        @Y30LPAW*/ 00294000
@RF00156 LA    @05,ERRCODE                                         0161 00295000
         ST    @05,FROMADR                                         0161 00296000
*        TOADR=ADDR(EBCERR);       /* CODE INTO EBCDID       @Y30LPAW*/ 00297000
         LA    @05,EBCERR                                          0162 00298000
         ST    @05,TOADR                                           0162 00299000
*        FLGCNT='8002'X;           /*                        @Y30LPAW*/ 00300000
         MVC   FLGCNT(2),@CB00644                                  0163 00301000
*        R1=ADDR(CONVERT);         /* POINT TO PARMLIST      @Y30LPAW*/ 00302000
         LA    R1,CONVERT                                          0164 00303000
*        R15=TAB28;                /* POINT TO MODULE        @Y30LPAW*/ 00304000
         L     R15,TAB28                                           0165 00305000
*        GEN(BALR R14,R15);        /* AND GO                 @Y30LPAW*/ 00306000
         BALR R14,R15                                                   00307000
*        MSGCODE=EBCERRCD;         /* PUT CODE IN MSG        @Y30LPAW*/ 00308000
         LA    @05,IFD470                                          0167 00309000
         MVC   MSGCODE(3,@05),EBCERRCD                             0167 00310000
*        IF ERRCODE='0031'X THEN   /* FOR CODE 31            @Y30LPAW*/ 00311000
         CLC   ERRCODE(2),@CB00651                                 0168 00312000
         BNE   @RF00168                                            0168 00313000
*           DO;                    /* DO THIS                @Y30LPAW*/ 00314000
*              SSIDA=NN;           /* PUT CODE IN MSG        @Y30LPAW*/ 00315000
         MVC   SSIDA(2),NN                                         0170 00316000
*              MSGFLD=MSGFLDA;     /*GET IT TOGETHER         @Y30LPAW*/ 00317000
         MVC   MSGFLD(28,@05),MSGFLDA                              0171 00318000
*              R3=ADDR(IFD470);    /* POINT TO MSG           @Y30LPAW*/ 00319000
         LR    R3,@05                                              0172 00320000
*              GEN(PWTO REG=(R3)); /* AND ISSUE IT           @Y30LPAW*/ 00321000
         PWTO REG=(R3)                                                  00322000
*              GOTO COM469;        /* AND GO REISSUE IFD469  @Y30LPAW*/ 00323000
         B     COM469                                              0174 00324000
*           END;                   /*                        @Y30LPAW*/ 00325000
*        IF ERRCODE='0036'X THEN   /* IF CODE WAS 36         @Y30LPAW*/ 00326000
@RF00168 CLC   ERRCODE(2),@CB00652                                 0176 00327000
         BNE   @RF00176                                            0176 00328000
*           DO;                    /* DO THIS                @Y30LPAW*/ 00329000
*              EBCDEVB=DEVEBCAD(5:8);   /* PUT DEV INTO MSG  @Y30LPAW*/ 00330000
         MVC   EBCDEVB(4),DEVEBCAD+4(DEVTABPT)                     0178 00331000
*              SSIDB=NN;           /* PUT CODE INTO MSG      @Y30LPAW*/ 00332000
         MVC   SSIDB(2),NN                                         0179 00333000
*              MSGFLD=MSGFLDB;     /* GET IT TOGETHER        @Y30LPAW*/ 00334000
         LA    @05,IFD470                                          0180 00335000
         MVC   MSGFLD(28,@05),MSGFLDB                              0180 00336000
*              R3=ADDR(IFD470);    /* POINT TO MSG           @Y30LPAW*/ 00337000
         LR    R3,@05                                              0181 00338000
*              GEN(PWTO REG=(R3)); /* AND ISSUE IT           @Y30LPAW*/ 00339000
         PWTO REG=(R3)                                                  00340000
*              GOTO COM469;        /* AND REISSUE IFD469     @Y30LPAW*/ 00341000
         B     COM469                                              0183 00342000
*           END;                   /*                        @Y30LPAW*/ 00343000
*        HEXDEVD=DEVEBCAD(5:8);    /* ITS AN UNKNOWN CODE    @Y30LPAW*/ 00344000
@RF00176 MVC   HEXDEVD(4),DEVEBCAD+4(DEVTABPT)                     0185 00345000
*        MSGFLD=MSGFLDD;           /* PUT IT IN MSG          @Y30LPAW*/ 00346000
         LA    @03,IFD470                                          0186 00347000
         MVC   MSGFLD(28,@03),MSGFLDD                              0186 00348000
*        R3=ADDR(IFD470);          /* POINT TO MSG           @Y30LPAW*/ 00349000
         LA    @15,IFD470                                          0187 00350000
         LR    R3,@15                                              0187 00351000
*        GEN(PWTO REG=(R3));       /* AND ISSUE IT           @Y30LPAW*/ 00352000
         PWTO REG=(R3)                                                  00353000
*        MYRETCD=4;                /* SET MY RET CODE        @Y30LPAW*/ 00354000
         MVI   MYRETCD,X'04'                                       0189 00355000
*        GOTO DONE;                /* AND GET OUT            @Y30LPAW*/ 00356000
         B     DONE                                                0190 00357000
*DONE:         /* HERE TO RETURN TO CALLER                   @Y30LPAW*/ 00358000
*        RETURN CODE(MYRETCDE);    /* AND GO BACK            @Y30LPAW*/ 00359000
DONE     MVC   @TF00001(4),MYRETCDE                                0191 00360000
         L     @15,@TF00001                                        0191 00361000
         L     @13,4(,@13)                                         0191 00362000
         L     @14,12(,@13)                                        0191 00363000
         LM    @00,@12,20(@13)                                     0191 00364000
         BR    @14                                                 0191 00365000
*        END                                                       0192 00366000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00367000
*/*%INCLUDE SYSLIB  (IFDEVTAB)                                        * 00368000
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                        * 00369000
*;                                                                 0192 00370000
@DATA    DS    0H                                                       00371000
@CH00055 DC    H'1'                                                     00372000
@CH00235 DC    H'3'                                                     00373000
@CH00106 DC    H'4'                                                     00374000
         DS    0F                                                       00375000
@SA00001 DS    18F                                                      00376000
@TF00001 DS    F                                                        00377000
         DS    0F                                                       00378000
         DS    0D                                                       00379000
@CC00639 DC    C'CANCEL'                                                00380000
@CC00645 DC    C'    '                                                  00381000
@CC00640 DC    C'S0'                                                    00382000
@CC00646 DC    C'67'                                                    00383000
@CB00602 DC    X'0002'                                                  00384000
@CB00644 DC    X'8002'                                                  00385000
@CB00648 DC    X'0078'                                                  00386000
@CB00649 DC    X'0034'                                                  00387000
@CB00651 DC    X'0031'                                                  00388000
@CB00652 DC    X'0036'                                                  00389000
         DS    CL2                                                      00390000
VONLST   DS    CL12                                                     00391000
         ORG   VONLST                                                   00392000
VONLEN   DC    XL4'0C'                                                  00393000
VONOPCD  DC    X'0A'                                                    00394000
VONRES1  DC    X'00'                                                    00395000
VONFLG   DC    B'0000000000000000'                                      00396000
         ORG   VONFLG                                                   00397000
VONSTAG  DS    BL1                                                      00398000
VONREAL  EQU   VONFLG+0                                                 00399000
@NM00021 EQU   VONFLG+0                                                 00400000
         ORG   VONLST+8                                                 00401000
VONSSID  DC    H'0'                                                     00402000
VONRES2  DC    X'0000'                                                  00403000
         ORG   VONLST+12                                                00404000
VOFLST   DS    CL24                                                     00405000
         ORG   VOFLST                                                   00406000
VOFLEN   DC    XL4'18'                                                  00407000
VOFOPCD  DC    X'0C'                                                    00408000
VOFRES1  DC    X'00'                                                    00409000
VOFFLG   DC    B'0000000000000000'                                      00410000
         ORG   VOFFLG                                                   00411000
VOFSTAG  DS    BL1                                                      00412000
VOFREAL  EQU   VOFFLG+0                                                 00413000
VOFNEUT  EQU   VOFFLG+0                                                 00414000
VOFTEST  EQU   VOFFLG+0                                                 00415000
@NM00022 EQU   VOFFLG+0                                                 00416000
         ORG   VOFLST+8                                                 00417000
VOFSSID  DC    H'0'                                                     00418000
VOFRUA   DC    H'0'                                                     00419000
VOFHOST  DC    X'0000000000'                                            00420000
@NM00023 DC    X'00'                                                    00421000
VOFASID  DC    X'0000'                                                  00422000
VOFECB   DC    F'0'                                                     00423000
         ORG   VOFLST+24                                                00424000
MSGFLDA  DS    CL28                                                     00425000
         ORG   MSGFLDA                                                  00426000
@NM00024 DC    CL3' S0'                                                 00427000
SSIDA    DS    CL2                                                      00428000
@NM00025 DC    CL23' DOES NOT EXIST        '                            00429000
         ORG   MSGFLDA+28                                               00430000
MSGFLDB  DS    CL28                                                     00431000
         ORG   MSGFLDB                                                  00432000
@NM00026 DC    CL1' '                                                   00433000
EBCDEVB  DS    CL4                                                      00434000
@NM00027 DC    CL15' INVALID FOR S0'                                    00435000
SSIDB    DS    CL2                                                      00436000
@NM00028 DC    CL6'      '                                              00437000
         ORG   MSGFLDB+28                                               00438000
MSGFLDC  DS    CL28                                                     00439000
         ORG   MSGFLDC                                                  00440000
@NM00029 DC    CL19' VARY ON VIRTUAL S0'                                00441000
SSIDC    DS    CL2                                                      00442000
@NM00030 DC    CL7' FAILED'                                             00443000
         ORG   MSGFLDC+28                                               00444000
MSGFLDD  DS    CL28                                                     00445000
         ORG   MSGFLDD                                                  00446000
@NM00031 DC    CL12' UNEXPECTED,'                                       00447000
HEXDEVD  DS    CL4                                                      00448000
@NM00032 DC    CL12' BYPASSED   '                                       00449000
         ORG   MSGFLDD+28                                               00450000
CONVERT  DS    CL14                                                     00451000
         ORG   CONVERT                                                  00452000
@NM00039 DC    X'0002'                                                  00453000
@NM00040 DC    CL2'41'                                                  00454000
FROMADR  DS    AL4                                                      00455000
TOADR    DS    AL4                                                      00456000
FLGCNT   DS    CL2                                                      00457000
         ORG   CONVERT+14                                               00458000
HEXSSID  DS    CL2                                                      00459000
         ORG   HEXSSID                                                  00460000
@NM00041 DC    X'00'                                                    00461000
CVRTID   DS    CL1                                                      00462000
         ORG   HEXSSID+2                                                00463000
EBCERR   DS    CL4                                                      00464000
         ORG   EBCERR                                                   00465000
@NM00042 DS    CL1                                                      00466000
EBCERRCD DS    CL3                                                      00467000
         ORG   EBCERR+4                                                 00468000
ECB      DS    CL4                                                      00469000
SVREPLY  DS    CL6                                                      00470000
NN       DS    CL2                                                      00471000
VRETCODE DS    CL4                                                      00472000
         ORG   VRETCODE                                                 00473000
@NM00043 DS    CL3                                                      00474000
RETCODE  DS    CL1                                                      00475000
         ORG   VRETCODE+4                                               00476000
VERRCODE DS    CL4                                                      00477000
         ORG   VERRCODE                                                 00478000
@NM00044 DS    CL2                                                      00479000
ERRCODE  DS    CL2                                                      00480000
         ORG   VERRCODE+4                                               00481000
MYRETCDE DS    CL4                                                      00482000
         ORG   MYRETCDE                                                 00483000
@NM00046 DC    X'000000'                                                00484000
MYRETCD  DS    CL1                                                      00485000
         ORG   MYRETCDE+4                                               00486000
IFDOLT67 CSECT                                                          00487000
DSECT67  IFDCOM                    /*OLTEP COMMON AREA MAP   @Y30LPAW*/ 00488000
IFDOLT67 CSECT                                                          00489000
IFD468   WTO   'IFD468I DDDD MUST BE OFFLINE-VARY OFFLINE,REENTER TO TEC00490000
               ST',ROUTCDE=10,DESC=7,MF=L /*                 @Y30LPAW*/ 00491000
         DS    0F                  /*                        @Y30LPAW*/ 00492000
IFD469   DC    XL1'00'             /*                        @Y30LPAW*/ 00493000
         DC    XL3'00'             /*                        @Y30LPAW*/ 00494000
         DC    XL4'00'             /*                        @Y30LPAW*/ 00495000
         WTO   'IFD469D ENTER SSID (S0XX) FOR DDDD OR CANCEL',ROUTCDE=1C00496000
               0,DESC=7,MF=L       /*                        @Y30LPAW*/ 00497000
IFD470   WTO   'IFD470I ICBVARY ERROR CODE XXXXXXXXXXXXXXXXXXXXXXXXXXXXC00498000
               XXX',ROUTCDE=10,DESC=7,MF=L  /*               @Y30LPAW*/ 00499000
IFDOLT67 CSECT                                                          00500000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00501000
@01      EQU   01                                                       00502000
@02      EQU   02                                                       00503000
@03      EQU   03                                                       00504000
@04      EQU   04                                                       00505000
@05      EQU   05                                                       00506000
@06      EQU   06                                                       00507000
@07      EQU   07                                                       00508000
@08      EQU   08                                                       00509000
@09      EQU   09                                                       00510000
@10      EQU   10                                                       00511000
@11      EQU   11                                                       00512000
@12      EQU   12                                                       00513000
@13      EQU   13                                                       00514000
@14      EQU   14                                                       00515000
@15      EQU   15                                                       00516000
ICALL    EQU   @05                                                      00517000
UCBPTR   EQU   @05                                                      00518000
DEVTABPT EQU   @04                                                      00519000
R0       EQU   @00                                                      00520000
R1       EQU   @01                                                      00521000
R2       EQU   @02                                                      00522000
R3       EQU   @03                                                      00523000
R7       EQU   @07                                                      00524000
R15      EQU   @15                                                      00525000
ICBR1    EQU   @01                                                      00526000
R14      EQU   @14                                                      00527000
DEVTABMP EQU   0                                                        00528000
DEVEBCAD EQU   DEVTABMP                                                 00529000
DEVUCBAD EQU   DEVTABMP+8                                               00530000
DEVFLAG1 EQU   DEVTABMP+12                                              00531000
ONLINE   EQU   DEVFLAG1                                                 00532000
SYMBSSID EQU   DEVFLAG1                                                 00533000
DEVFLAG2 EQU   DEVTABMP+13                                              00534000
DEVFLAG3 EQU   DEVTABMP+14                                              00535000
DEVFLAG4 EQU   DEVTABMP+15                                              00536000
DEVLOEXT EQU   DEVTABMP+16                                              00537000
DEVHIEXT EQU   DEVTABMP+22                                              00538000
DEVHEXAD EQU   DEVTABMP+32                                              00539000
DEVAD    EQU   DEVHEXAD+2                                               00540000
DEVDESCR EQU   DEVTABMP+36                                              00541000
DEVCDSFG EQU   DEVTABMP+41                                              00542000
CDSFLAG1 EQU   DEVCDSFG                                                 00543000
CDSFLAG2 EQU   DEVCDSFG+1                                               00544000
CDSYMNAM EQU   DEVTABMP+44                                              00545000
UCB      EQU   0                                                        00546000
UCBOB    EQU   0                                                        00547000
UCBJBNR  EQU   UCBOB                                                    00548000
UCBFL5   EQU   UCBOB+1                                                  00549000
UCBAF    EQU   UCBFL5                                                   00550000
UCBSTAT  EQU   UCBOB+3                                                  00551000
UCBCHAN  EQU   UCBOB+4                                                  00552000
UCBSFLS  EQU   UCBOB+6                                                  00553000
UCBFLA   EQU   UCBSFLS                                                  00554000
UCBFL1   EQU   UCBFLA                                                   00555000
UCBBSY   EQU   UCBFL1                                                   00556000
UCBNRY   EQU   UCBFL1                                                   00557000
UCBPST   EQU   UCBFL1                                                   00558000
UCBCUB   EQU   UCBFL1                                                   00559000
UCBFLB   EQU   UCBSFLS+1                                                00560000
UCBCHM   EQU   UCBOB+8                                                  00561000
UCBCHM1  EQU   UCBCHM                                                   00562000
UCBPTH0  EQU   UCBCHM1                                                  00563000
UCBPTH1  EQU   UCBCHM1                                                  00564000
UCBWGT   EQU   UCBOB+12                                                 00565000
UCBTYP   EQU   UCBOB+16                                                 00566000
UCBTBYT1 EQU   UCBTYP                                                   00567000
UCB1FEA5 EQU   UCBTBYT1                                                 00568000
UCB1FEA6 EQU   UCBTBYT1                                                 00569000
UCBTBYT2 EQU   UCBTYP+1                                                 00570000
UCB2OPT2 EQU   UCBTBYT2                                                 00571000
UCBDUDN1 EQU   UCB2OPT2                                                 00572000
UCB2OPT3 EQU   UCBTBYT2                                                 00573000
UCBDUDN2 EQU   UCB2OPT3                                                 00574000
UCB2OPT4 EQU   UCBTBYT2                                                 00575000
UCBRWTAU EQU   UCB2OPT4                                                 00576000
UCBRVDEV EQU   UCBRWTAU                                                 00577000
UCB2OPT6 EQU   UCBTBYT2                                                 00578000
UCB2OPT7 EQU   UCBTBYT2                                                 00579000
UCBTBYT3 EQU   UCBTYP+2                                                 00580000
UCBDVCLS EQU   UCBTBYT3                                                 00581000
UCBTBYT4 EQU   UCBTYP+3                                                 00582000
UCBEXTPT EQU   UCBOB+20                                                 00583000
UCBFLC   EQU   UCBEXTPT                                                 00584000
UCBDEV   EQU   UCBOB+24                                                 00585000
UCBCMEXT EQU   0                                                        00586000
UCBATI   EQU   UCBCMEXT+3                                               00587000
@NM00020 EQU   UCBATI                                                   00588000
UCBFLP1  EQU   UCBCMEXT+5                                               00589000
UCBMT    EQU   0                                                        00590000
UCBOCR   EQU   0                                                        00591000
UCB3540X EQU   0                                                        00592000
UCBDKBYT EQU   UCB3540X+6                                               00593000
UCBUCS   EQU   0                                                        00594000
UCBUCSOP EQU   UCBUCS+4                                                 00595000
UCBFCBOP EQU   UCBUCS+5                                                 00596000
MAP468   EQU   0                                                        00597000
FLD468   EQU   MAP468+12                                                00598000
MAP469   EQU   0                                                        00599000
INBUFAD  EQU   MAP469                                                   00600000
WTORLNGT EQU   INBUFAD                                                  00601000
ECBPTR   EQU   MAP469+4                                                 00602000
FLD469   EQU   MAP469+42                                                00603000
MAP470   EQU   0                                                        00604000
MSGCODE  EQU   MAP470+31                                                00605000
MSGFLD   EQU   MAP470+34                                                00606000
REPLY    EQU   0                                                        00607000
SVC59LST EQU   0                                                        00608000
MODID    EQU   SVC59LST+2                                               00609000
SSIDHEX  EQU   SVC59LST+4                                               00610000
SSIDEBC  EQU   SVC59LST+6                                               00611000
MODULE   EQU   0                                                        00612000
UCBBGN   EQU   0                                                        00613000
UCBOBS01 EQU   UCBDEV                                                   00614000
UCBSTAB  EQU   UCBOBS01+10                                              00615000
UCBBSVL  EQU   UCBSTAB                                                  00616000
UCBPRSRS EQU   UCBSTAB                                                  00617000
UCBDMCT  EQU   UCBOBS01+11                                              00618000
UCBFL4   EQU   UCBOBS01+13                                              00619000
UCBOBS02 EQU   UCBDEV                                                   00620000
UCBTFL1  EQU   UCBOBS02+19                                              00621000
UCBXTN   EQU   UCBOBS02+20                                              00622000
UCBVOPT  EQU   UCBXTN                                                   00623000
UCBOBS03 EQU   UCBDEV                                                   00624000
UCBXTADR EQU   UCBOBS03                                                 00625000
UCBOBS04 EQU   UCBDEV                                                   00626000
UCBBTA   EQU   UCBOBS04+12                                              00627000
UCBOBS06 EQU   UCBDEV                                                   00628000
UCBAOF   EQU   UCBOBS06                                                 00629000
UCBAOF1  EQU   UCBAOF                                                   00630000
UCBAOF2  EQU   UCBAOF+1                                                 00631000
@NM00019 EQU   UCBOBS06+3                                               00632000
UCBIRB   EQU   UCBOBS06+4                                               00633000
UCBGRAF  EQU   UCBIRB                                                   00634000
UCBLDNCA EQU   UCBOBS06+8                                               00635000
UCBRDYQ  EQU   UCBLDNCA                                                 00636000
UCBIRLN  EQU   UCBRDYQ                                                  00637000
UCBLDNCB EQU   UCBRDYQ+1                                                00638000
UCBCTLNK EQU   UCBOBS06+12                                              00639000
UCBOBS07 EQU   UCBDEV                                                   00640000
UCBOBS08 EQU   UCBDEV                                                   00641000
UCBOBS09 EQU   UCBDEV                                                   00642000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    00643000
UCBRV066 EQU   UCBOBS09+4                                               00644000
UCBIOSBA EQU   UCBOBS09                                                 00645000
UCBRV042 EQU   UCBOBS08+5                                               00646000
UCBCTCF1 EQU   UCBOBS08+4                                               00647000
UCBCTCAD EQU   UCBOBS08                                                 00648000
UCBICNCB EQU   UCBOBS07+4                                               00649000
UCBRV040 EQU   UCBOBS07                                                 00650000
UCBCTLNA EQU   UCBCTLNK+1                                               00651000
UCBRLN   EQU   UCBCTLNK                                                 00652000
UCBRDYQA EQU   UCBLDNCB                                                 00653000
UCBINRLN EQU   UCBIRLN                                                  00654000
UCBIRBA  EQU   UCBIRB+1                                                 00655000
UCBRV039 EQU   UCBGRAF                                                  00656000
UCBDWNR  EQU   UCBGRAF                                                  00657000
UCBRPND  EQU   UCBGRAF                                                  00658000
UCBUPM   EQU   UCBGRAF                                                  00659000
UCBBTAM  EQU   UCBGRAF                                                  00660000
UCBDRNO  EQU   UCBGRAF                                                  00661000
UCBDRO   EQU   UCBGRAF                                                  00662000
UCBOIP   EQU   UCBGRAF                                                  00663000
UCBATRCD EQU   @NM00019                                                 00664000
UCBSKPFG EQU   @NM00019                                                 00665000
UCBRIPND EQU   @NM00019                                                 00666000
UCBRTIAC EQU   @NM00019                                                 00667000
UCBRSV79 EQU   @NM00019                                                 00668000
UCBRSV78 EQU   @NM00019                                                 00669000
UCBRSV77 EQU   @NM00019                                                 00670000
UCBOLTEP EQU   @NM00019                                                 00671000
UCBATNCT EQU   UCBOBS06+2                                               00672000
UCBRSV76 EQU   UCBAOF2                                                  00673000
UCBRSV75 EQU   UCBAOF2                                                  00674000
UCBRSV74 EQU   UCBAOF2                                                  00675000
UCBRSV73 EQU   UCBAOF2                                                  00676000
UCBRSV72 EQU   UCBAOF2                                                  00677000
UCBRSV71 EQU   UCBAOF2                                                  00678000
UCBRSV70 EQU   UCBAOF2                                                  00679000
UCBRSV69 EQU   UCBAOF2                                                  00680000
UCBRSV68 EQU   UCBAOF1                                                  00681000
UCBRSV67 EQU   UCBAOF1                                                  00682000
UCBRSV66 EQU   UCBAOF1                                                  00683000
UCBRSV65 EQU   UCBAOF1                                                  00684000
UCBRSV64 EQU   UCBAOF1                                                  00685000
UCBOFNL  EQU   UCBAOF1                                                  00686000
UCBOFSP  EQU   UCBAOF1                                                  00687000
UCBOFMCR EQU   UCBAOF1                                                  00688000
UCBBTB   EQU   UCBBTA+1                                                 00689000
UCBDI    EQU   UCBBTA                                                   00690000
UCBSNS   EQU   UCBOBS04+8                                               00691000
UCBTEB   EQU   UCBOBS04+4                                               00692000
UCBGCB   EQU   UCBOBS04+3                                               00693000
UCBOPEN  EQU   UCBOBS04+2                                               00694000
UCBSTART EQU   UCBOBS04                                                 00695000
UCBXTNB  EQU   UCBXTN+1                                                 00696000
UCBRSV22 EQU   UCBVOPT                                                  00697000
UCBRSV21 EQU   UCBVOPT                                                  00698000
UCBRSV20 EQU   UCBVOPT                                                  00699000
UCBESVE  EQU   UCBVOPT                                                  00700000
UCBERPC  EQU   UCBVOPT                                                  00701000
UCBESVC  EQU   UCBVOPT                                                  00702000
UCBEVA   EQU   UCBVOPT                                                  00703000
UCBESV   EQU   UCBVOPT                                                  00704000
UCBRV009 EQU   UCBTFL1                                                  00705000
UCBRV008 EQU   UCBTFL1                                                  00706000
UCBRV007 EQU   UCBTFL1                                                  00707000
UCBRV006 EQU   UCBTFL1                                                  00708000
UCBRV005 EQU   UCBTFL1                                                  00709000
UCBRV038 EQU   UCBTFL1                                                  00710000
UCBNSLTP EQU   UCBTFL1                                                  00711000
UCBNLTP  EQU   UCBTFL1                                                  00712000
UCBRES1B EQU   UCBOBS02+18                                              00713000
UCBFSER  EQU   UCBOBS02+12                                              00714000
@NM00018 EQU   UCBOBS02+4                                               00715000
UCBFSEQ  EQU   UCBOBS02+2                                               00716000
UCBFSCT  EQU   UCBOBS02                                                 00717000
UCBNEXP  EQU   UCBOBS01+20                                              00718000
UCBBASE  EQU   UCBOBS01+16                                              00719000
UCBRES1A EQU   UCBOBS01+15                                              00720000
UCBUSER  EQU   UCBOBS01+14                                              00721000
UCBFL47  EQU   UCBFL4                                                   00722000
UCBFL46  EQU   UCBFL4                                                   00723000
UCBFL45  EQU   UCBFL4                                                   00724000
UCBRV065 EQU   UCBFL4                                                   00725000
UCBDSS   EQU   UCBFL4                                                   00726000
UCBRV028 EQU   UCBFL4                                                   00727000
UCBWDAV  EQU   UCBFL4                                                   00728000
UCBDAVV  EQU   UCBFL4                                                   00729000
UCBSQC   EQU   UCBOBS01+12                                              00730000
UCBDATP  EQU   UCBOBS01+12                                              00731000
UCBDMC   EQU   UCBDMCT                                                  00732000
UCBMOUNT EQU   UCBDMCT                                                  00733000
UCBBNUL  EQU   UCBSTAB                                                  00734000
UCBSHAR  EQU   UCBSTAB                                                  00735000
UCBBSTR  EQU   UCBSTAB                                                  00736000
UCBBPUB  EQU   UCBSTAB                                                  00737000
UCBBPRV  EQU   UCBSTAB                                                  00738000
UCBBALB  EQU   UCBPRSRS                                                 00739000
UCBPGFL  EQU   UCBSTAB                                                  00740000
UCBDVSHR EQU   UCBBSVL                                                  00741000
UCBVOLI  EQU   UCBOBS01+4                                               00742000
UCBVTOC  EQU   UCBOBS01                                                 00743000
@NM00045 EQU   SVC59LST                                                 00744000
@NM00038 EQU   MAP470+62                                                00745000
@NM00037 EQU   MAP470                                                   00746000
@NM00036 EQU   MAP469+46                                                00747000
@NM00035 EQU   MAP469+8                                                 00748000
@NM00034 EQU   MAP468+16                                                00749000
@NM00033 EQU   MAP468                                                   00750000
UCBERADR EQU   UCBUCS+12                                                00751000
UCBFCBID EQU   UCBUCS+8                                                 00752000
UCBERCNT EQU   UCBUCS+7                                                 00753000
UCBRSV51 EQU   UCBUCS+6                                                 00754000
UCBRSV50 EQU   UCBFCBOP                                                 00755000
UCBRSV49 EQU   UCBFCBOP                                                 00756000
UCBRSV48 EQU   UCBFCBOP                                                 00757000
UCBRSV47 EQU   UCBFCBOP                                                 00758000
UCBRSV46 EQU   UCBFCBOP                                                 00759000
UCBRSV45 EQU   UCBFCBOP                                                 00760000
UCBRSV44 EQU   UCBFCBOP                                                 00761000
UCBFCBO1 EQU   UCBFCBOP                                                 00762000
UCBUCSPE EQU   UCBUCSOP                                                 00763000
UCBRSV43 EQU   UCBUCSOP                                                 00764000
UCBRSV42 EQU   UCBUCSOP                                                 00765000
UCBRSV41 EQU   UCBUCSOP                                                 00766000
UCBRSV40 EQU   UCBUCSOP                                                 00767000
UCBRSV39 EQU   UCBUCSOP                                                 00768000
UCBUCSO2 EQU   UCBUCSOP                                                 00769000
UCBUCSO1 EQU   UCBUCSOP                                                 00770000
UCBUCSID EQU   UCBUCS                                                   00771000
UCBRV073 EQU   UCB3540X+7                                               00772000
UCBRV072 EQU   UCBDKBYT                                                 00773000
UCBRV071 EQU   UCBDKBYT                                                 00774000
UCBRV070 EQU   UCBDKBYT                                                 00775000
UCBRV069 EQU   UCBDKBYT                                                 00776000
UCBRV068 EQU   UCBDKBYT                                                 00777000
UCBRV067 EQU   UCBDKBYT                                                 00778000
UCBVLVER EQU   UCBDKBYT                                                 00779000
UCBDKAMX EQU   UCBDKBYT                                                 00780000
UCBVLSER EQU   UCB3540X                                                 00781000
UCBRDATA EQU   UCBOCR+4                                                 00782000
UCBFRID  EQU   UCBOCR                                                   00783000
UCBCLN   EQU   UCBMT+14                                                 00784000
UCBERG   EQU   UCBMT+12                                                 00785000
UCBMS    EQU   UCBMT+11                                                 00786000
UCBNB    EQU   UCBMT+10                                                 00787000
UCBPW    EQU   UCBMT+9                                                  00788000
UCBPR    EQU   UCBMT+8                                                  00789000
UCBSIO   EQU   UCBMT+6                                                  00790000
UCBTW    EQU   UCBMT+5                                                  00791000
UCBTR    EQU   UCBMT+4                                                  00792000
UCBTWT   EQU   UCBMT+3                                                  00793000
UCBTRT   EQU   UCBMT+2                                                  00794000
UCBCTD   EQU   UCBMT                                                    00795000
UCBWTOID EQU   UCBCMEXT+17                                              00796000
UCBRV043 EQU   UCBCMEXT+16                                              00797000
UCBASID  EQU   UCBCMEXT+14                                              00798000
UCBMFCNT EQU   UCBCMEXT+12                                              00799000
UCBPMSK  EQU   UCBCMEXT+10                                              00800000
UCBCCWOF EQU   UCBCMEXT+8                                               00801000
UCBRV041 EQU   UCBCMEXT+6                                               00802000
UCBRV036 EQU   UCBFLP1                                                  00803000
UCBRV035 EQU   UCBFLP1                                                  00804000
UCBRV034 EQU   UCBFLP1                                                  00805000
UCBRV033 EQU   UCBFLP1                                                  00806000
UCBRV032 EQU   UCBFLP1                                                  00807000
UCBRV031 EQU   UCBFLP1                                                  00808000
UCBSHRUP EQU   UCBFLP1                                                  00809000
UCBNSRCH EQU   UCBFLP1                                                  00810000
UCBSNSCT EQU   UCBCMEXT+4                                               00811000
UCBHPDV  EQU   @NM00020                                                 00812000
UCBHALI  EQU   @NM00020                                                 00813000
UCBRSV09 EQU   @NM00020                                                 00814000
UCBRSV08 EQU   @NM00020                                                 00815000
UCBRSV07 EQU   @NM00020                                                 00816000
UCBRSV06 EQU   @NM00020                                                 00817000
UCBRSV05 EQU   @NM00020                                                 00818000
UCBRSV04 EQU   @NM00020                                                 00819000
UCBDTI   EQU   UCBCMEXT+2                                               00820000
UCBSTI   EQU   UCBCMEXT+1                                               00821000
UCBETI   EQU   UCBCMEXT                                                 00822000
UCBEXTP  EQU   UCBEXTPT+1                                               00823000
UCBDDRSW EQU   UCBFLC                                                   00824000
UCBTICBT EQU   UCBFLC                                                   00825000
UCBIVRR  EQU   UCBFLC                                                   00826000
UCBIVRS  EQU   UCBFLC                                                   00827000
UCBITF   EQU   UCBFLC                                                   00828000
UCBUDE   EQU   UCBFLC                                                   00829000
UCBWAA   EQU   UCBFLC                                                   00830000
UCBATTP  EQU   UCBFLC                                                   00831000
UCBUNTYP EQU   UCBTBYT4                                                 00832000
UCBRSV11 EQU   UCBDVCLS                                                 00833000
UCBRSV10 EQU   UCBDVCLS                                                 00834000
UCB3CHAR EQU   UCBDVCLS                                                 00835000
UCB3UREC EQU   UCBDVCLS                                                 00836000
UCB3DISP EQU   UCBDVCLS                                                 00837000
UCB3DACC EQU   UCBDVCLS                                                 00838000
UCB3COMM EQU   UCBDVCLS                                                 00839000
UCB3TAPE EQU   UCBDVCLS                                                 00840000
UCBDVPWR EQU   UCB2OPT7                                                 00841000
UCBVLPWR EQU   UCB2OPT6                                                 00842000
UCB2OPT5 EQU   UCBTBYT2                                                 00843000
UCBRPS   EQU   UCBDUDN2                                                 00844000
UCBRR    EQU   UCBDUDN1                                                 00845000
UCB2OPT1 EQU   UCBTBYT2                                                 00846000
UCB2OPT0 EQU   UCBTBYT2                                                 00847000
UCB1FEA7 EQU   UCBTBYT1                                                 00848000
UCBD6250 EQU   UCB1FEA6                                                 00849000
UCBD1600 EQU   UCB1FEA5                                                 00850000
UCB1FEA4 EQU   UCBTBYT1                                                 00851000
UCB1FEA3 EQU   UCBTBYT1                                                 00852000
UCB1FEA2 EQU   UCBTBYT1                                                 00853000
UCB1FEA1 EQU   UCBTBYT1                                                 00854000
UCB1FEA0 EQU   UCBTBYT1                                                 00855000
UCBNAME  EQU   UCBOB+13                                                 00856000
UCBRV029 EQU   UCBWGT                                                   00857000
UCBVHRSN EQU   UCBWGT                                                   00858000
UCBVORSN EQU   UCBWGT                                                   00859000
UCBMTPXP EQU   UCBWGT                                                   00860000
UCBREW   EQU   UCBWGT                                                   00861000
UCBPUB   EQU   UCBWGT                                                   00862000
UCBOUT   EQU   UCBWGT                                                   00863000
UCBIN    EQU   UCBWGT                                                   00864000
UCBCPU   EQU   UCBOB+11                                                 00865000
UCBLCI   EQU   UCBOB+10                                                 00866000
UCBCNT   EQU   UCBOB+9                                                  00867000
UCBRV017 EQU   UCBCHM1                                                  00868000
UCBRV016 EQU   UCBCHM1                                                  00869000
UCBRV015 EQU   UCBCHM1                                                  00870000
UCBRV014 EQU   UCBCHM1                                                  00871000
UCBSPB   EQU   UCBPTH1                                                  00872000
UCBPPB   EQU   UCBPTH1                                                  00873000
UCBSPA   EQU   UCBPTH0                                                  00874000
UCBPPA   EQU   UCBPTH0                                                  00875000
UCBFLB7  EQU   UCBFLB                                                   00876000
UCBVALPH EQU   UCBFLB                                                   00877000
UCBCRHSN EQU   UCBFLB                                                   00878000
UCBCRHRV EQU   UCBFLB                                                   00879000
UCBRESVH EQU   UCBFLB                                                   00880000
UCBSPST  EQU   UCBFLB                                                   00881000
UCBASNS  EQU   UCBFLB                                                   00882000
UCBIORST EQU   UCBFLB                                                   00883000
UCBQISCE EQU   UCBFL1                                                   00884000
UCBACTV  EQU   UCBFL1                                                   00885000
UCBSAP   EQU   UCBFL1                                                   00886000
UCBNOTRC EQU   UCBCUB                                                   00887000
UCBPSNS  EQU   UCBFL1                                                   00888000
UCBUSING EQU   UCBPST                                                   00889000
UCBNOTRD EQU   UCBNRY                                                   00890000
UCBBUSYD EQU   UCBBSY                                                   00891000
UCBUA    EQU   UCBCHAN+1                                                00892000
UCBCHA   EQU   UCBCHAN                                                  00893000
UCBDADI  EQU   UCBSTAT                                                  00894000
UCBSYSR  EQU   UCBSTAT                                                  00895000
UCBPRES  EQU   UCBSTAT                                                  00896000
UCBALOC  EQU   UCBSTAT                                                  00897000
UCBUNLD  EQU   UCBSTAT                                                  00898000
UCBRESV  EQU   UCBSTAT                                                  00899000
UCBCHGS  EQU   UCBSTAT                                                  00900000
UCBONLI  EQU   UCBSTAT                                                  00901000
UCBID    EQU   UCBOB+2                                                  00902000
UCBALTPH EQU   UCBFL5                                                   00903000
UCBALTCU EQU   UCBFL5                                                   00904000
UCBNALOC EQU   UCBFL5                                                   00905000
UCBENVRD EQU   UCBFL5                                                   00906000
UCBVSDR  EQU   UCBFL5                                                   00907000
UCBSASK  EQU   UCBFL5                                                   00908000
UCBAMV   EQU   UCBAF                                                    00909000
UCBDCC   EQU   UCBFL5                                                   00910000
UCBMONT  EQU   UCBJBNR                                                  00911000
UCBRV011 EQU   UCBJBNR                                                  00912000
UCBRSV02 EQU   UCBJBNR                                                  00913000
UCBOLDSM EQU   UCBJBNR                                                  00914000
UCBRV003 EQU   UCBJBNR                                                  00915000
UCBRV002 EQU   UCBJBNR                                                  00916000
UCBJES3  EQU   UCBJBNR                                                  00917000
UCBVRDEV EQU   UCBJBNR                                                  00918000
UCBCMSEG EQU   UCBOB                                                    00919000
UCBPFXND EQU   UCB+512                                                  00920000
UCBIOQ   EQU   UCB+508                                                  00921000
UCBLOCK  EQU   UCB+504                                                  00922000
UCBPXST  EQU   UCB+504                                                  00923000
@NM00017 EQU   UCB                                                      00924000
DEVEXPAN EQU   DEVTABMP+54                                              00925000
DEVINTPT EQU   DEVTABMP+53                                              00926000
SAVMDMSK EQU   DEVTABMP+52                                              00927000
CDSEXTSG EQU   DEVTABMP+43                                              00928000
@NM00016 EQU   CDSFLAG2                                                 00929000
@NM00015 EQU   CDSFLAG2                                                 00930000
@NM00014 EQU   CDSFLAG2                                                 00931000
@NM00013 EQU   CDSFLAG2                                                 00932000
@NM00012 EQU   CDSFLAG2                                                 00933000
@NM00011 EQU   CDSFLAG2                                                 00934000
@NM00010 EQU   CDSFLAG2                                                 00935000
CDSNOPRI EQU   CDSFLAG2                                                 00936000
CDSLNCON EQU   CDSFLAG1                                                 00937000
CDSREMDV EQU   CDSFLAG1                                                 00938000
CDS2CHSW EQU   CDSFLAG1                                                 00939000
CDSYMBLC EQU   CDSFLAG1                                                 00940000
CDSEXMSK EQU   CDSFLAG1                                                 00941000
CDSCEMNT EQU   CDSFLAG1                                                 00942000
CDSSHRED EQU   CDSFLAG1                                                 00943000
CDSFILPT EQU   CDSFLAG1                                                 00944000
DEVCDSCT EQU   DEVTABMP+40                                              00945000
DEVUNTYP EQU   DEVDESCR+3                                               00946000
DEVCLASS EQU   DEVDESCR+2                                               00947000
DEVFEATR EQU   DEVDESCR+1                                               00948000
DEVMODEL EQU   DEVDESCR                                                 00949000
DEVADDR  EQU   DEVAD+1                                                  00950000
DEVCTRLU EQU   DEVAD+1                                                  00951000
DEVCHANL EQU   DEVAD                                                    00952000
@NM00009 EQU   DEVAD                                                    00953000
DEVADPAD EQU   DEVHEXAD                                                 00954000
DEVEXPOS EQU   DEVTABMP+31                                              00955000
DEVMODE  EQU   DEVTABMP+30                                              00956000
@NM00008 EQU   DEVTABMP+29                                              00957000
TAPELABL EQU   DEVTABMP+28                                              00958000
HIEXTHH  EQU   DEVHIEXT+4                                               00959000
HIEXTCC  EQU   DEVHIEXT+2                                               00960000
HIEXTBB  EQU   DEVHIEXT                                                 00961000
LOEXTHH  EQU   DEVLOEXT+4                                               00962000
LOEXTCC  EQU   DEVLOEXT+2                                               00963000
LOEXTBB  EQU   DEVLOEXT                                                 00964000
@NM00007 EQU   DEVFLAG4                                                 00965000
@NM00006 EQU   DEVFLAG4                                                 00966000
@NM00005 EQU   DEVFLAG4                                                 00967000
@NM00004 EQU   DEVFLAG4                                                 00968000
RESERVD2 EQU   DEVFLAG4                                                 00969000
RESERVD1 EQU   DEVFLAG4                                                 00970000
DEVREMEA EQU   DEVFLAG4                                                 00971000
DEVREMDA EQU   DEVFLAG4                                                 00972000
REISPEUD EQU   DEVFLAG3                                                 00973000
WAITPOST EQU   DEVFLAG3                                                 00974000
DEVALC   EQU   DEVFLAG3                                                 00975000
NOTEST   EQU   DEVFLAG3                                                 00976000
TAPEBIT  EQU   DEVFLAG3                                                 00977000
@NM00003 EQU   DEVFLAG3                                                 00978000
@NM00002 EQU   DEVFLAG3                                                 00979000
ANRNOTST EQU   DEVFLAG3                                                 00980000
@NM00001 EQU   DEVFLAG2                                                 00981000
PCIIND   EQU   DEVFLAG2                                                 00982000
EXIOLVL3 EQU   DEVFLAG2                                                 00983000
HIODONE  EQU   DEVFLAG2                                                 00984000
STANDLBL EQU   DEVFLAG2                                                 00985000
CEVOLUMN EQU   DEVFLAG2                                                 00986000
SHARED   EQU   DEVFLAG2                                                 00987000
DSNAME   EQU   DEVFLAG2                                                 00988000
FILEPRT  EQU   DEVFLAG1                                                 00989000
GRABED   EQU   DEVFLAG1                                                 00990000
ALOCATED EQU   DEVFLAG1                                                 00991000
ACTIVE   EQU   DEVFLAG1                                                 00992000
DPDONE   EQU   DEVFLAG1                                                 00993000
PRIMARY  EQU   DEVFLAG1                                                 00994000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      00995000
@RT00086 EQU   COM469                                                   00996000
@RT00095 EQU   COM469                                                   00997000
@RT00108 EQU   CHKCODES                                                 00998000
@ENDDATA EQU   *                                                        00999000
         END   IFDOLT67,(C'PLS1843',0603,74344)                         01000000
./  ADD  SSI=40431465,NAME=IFDOLT73
         TITLE 'IFDOLT73 LINE CONNECTION MODULE'                        00010000
         LCLA  &T,&SPN                                            0001  00020000
.@001    ANOP                                                     0001  00030000
IFDOLT73 CSECT ,                                                  0001  00040000
         BC    15,24(0,@F)                                              00050000
         DC    C'IFDOLT73 12 FEB 74'                             0001  00060000
         ST    @E,12(0,@D)                                        0001  00070000
         STM   @0,@C,20(@D)                                       0001  00080000
         BALR  @B,0                                               0001  00090000
@PSTART  DS    0H                                                 0001  00100000
         USING @PSTART+00000,@B                                   0001  00110000
         ST    @D,@SAV001+4                                       0001  00120000
         LA    @F,@SAV001                                         0001  00130000
         ST    @F,8(0,@D)                                         0001  00140000
         LR    @D,@F                                              0001  00150000
         TITLE 'OS OLTEP LINE CONNECTION MODULE IFDOLT73'               00160000
         DS    0H                                                       00170000
* GEN(EJECT);                                                           00180000
         EJECT                                                          00190000
         DS    0H                                                       00200000
* /******************************************************************** 00210000
* /*                 IFDOLT73 REGISTER DEFINITIONS BELOW                00220000
* /******************************************************************** 00230000
*         /* START                                                      00240000
*         DCL   R0 REG(0);               /*REG FOR POSTING TIMEOUT      00250000
*         DCL   R1 REG(1) PTR;           /*REG FOR MSG PTR              00260000
*         DCL   R2 REG(2) PTR;           /*REG PTR TO OLTEP COMMON AREA 00270000
*         DCL   R6 REG(6);               /*LINK REG FOR EXCP ROUTINE    00280000
*         DCL   R7 REG(7);               /*LINK REG FOR OUTPUT MESSAGE  00290000
*         DCL   R9 PTR REG(9);           /*MESSAGE MODULE POINTER       00300000
*         DCL   R14 REG(14) PTR;         /*LINK REG FOR CONVERT MODULE  00310000
*         DCL   R15 REG(15) PTR;         /*RETURN CODE REGISTER         00320000
*         DCL   DEVPT1 PTR(24) REG(3);   /*DEVTAB ENTRY                 00330000
*         DCL   DEVPT2 PTR(24) REG(4);   /*PTR TO DEVTAB SEARCH FOUND   00340000
*         DCL   CCWADR PTR(24) REG(4);   /*PTR TO NEXT CCW AREA         00350000
*         DCL   CDSPTR PTR(31) REG(5);   /*PTR TO OLT'S CDS             00360000
*         DCL   VARFLDPT PTR(24) REG(7); /*PTR TO EXTENDED FIELD IN CDS 00370000
*         DCL   IOSBPTR PTR(31) REG(8);   /*PTR TO IOSB          Y02008 00380000
*         GEN(EJECT);                                                   00390000
         EJECT                                                          00400000
         DS    0H                                                       00410000
* /******************************************************************** 00420000
* /*  DEFINITIONS OF INTERNAL FLAGS                                     00430000
* /******************************************************************** 00440000
*         /* START                                                      00450000
*         DCL   1 LCRFLAG CHAR(1),       /*INTERNAL FLAGS               00460000
*                3 TELNO BIT(1),         /*DIAL DIGITS IN CDS FLAG      00470000
*                3 OPERCALL BIT(1),      /*OPERATOR CALL FLAG           00480000
*                3 RETRY BIT(1),         /*RETRY FLAG                   00490000
*                3 UNSUCCES BIT(1),      /*EXCP UNSUCCESSFUL FLAG       00500000
*                3 HDRMSG BIT(1);       /* FLAG FOR HEADER MSG  X02008* 00510000
*                                                                       00520000
*         DCL R1SAVE FIXED;             /* REG 1 SAVE AREA      X02008* 00530000
*                                                                       00540000
* /******************************************************************** 00550000
* /*  DEFINITION OF INTERNAL WORK AREAS                                 00560000
* /******************************************************************** 00570000
*         /* START                                                      00580000
*         DCL   CAWPTR PTR(31);          /*PTR TO CHANNEL PROGRAM       00590000
*         /* FAILED CCW                                                 00600000
*         DCL   FAIL CHAR(8) BASED(CCWADR);                             00610000
*         /*                                                            00620000
*         DCL   1 DEC CHAR(40) BDY(WORD),/*EBCDIC SAVE AREA             00630000
*                3 DECCSW CHAR(14),      /*EBCDIC CSW                   00640000
*                3 DECCCW CHAR(16),      /*EBCDIC CCW                   00650000
*                3 DECSENSE CHAR(4);     /*EBCDIC SENSE                 00660000
*         /*                                                            00670000
*         DCL   1 HEX CHAR(17) BDY(WORD),/*SAVE AREA FOR HEX NUMBERS    00680000
*                3 HEXCSW CHAR(7),       /*HEX CSW                      00690000
*                 5 * CHAR(3),           /*NOT USED                     00700000
*                 5 * BIT(6),            /*NOT USED                     00710000
*                 5 SAVUNITCHK BIT(1),   /*UNIT CHECK FLAG              00720000
*                 5 * BIT(1),            /*NOT USED                     00730000
*                 5 * CHAR(1),           /*NOT USED                     00740000
*                3 HEXCCW CHAR(8),       /*FAILED CCW SAVE AREA         00750000
*                3 HEXSENSE CHAR(2);     /*SENSE BYTES                  00760000
*         /* CONVERT PARAMETER LIST                                     00770000
*         DCL   1 CONVERT CHAR(14) BDY(WORD),                           00780000
*                /* CONSTANT                                            00790000
*                3 * CHAR(2) INIT('0002'X),                             00800000
*                /* CONSTANT                                            00810000
*                3 * CHAR(2) INIT('41'),                                00820000
*                /* FROM ADDRESS                                        00830000
*                3 * PTR(31) INIT(ADDR(HEX)),                           00840000
*                /* TO ADDRESS                                          00850000
*                3 * PTR(31) INIT(ADDR(DEC)),                           00860000
*                /* FLAG AND COUNT                                      00870000
*                3 * CHAR(2) INIT('8011'X);                             00880000
*         /*                                                            00890000
*         DCL 1 ONES CHAR(80),           /*80 BYTES OF ONES FOR WRITE   00900000
*                3 *(80) CHAR(1) INIT((80)'FF'X);                       00910000
*         DCL 1 X20F0 CHAR(20),          /*20 BYTES OF F0 FOR DIAL DGTS 00920000
*              3 *(20) CHAR(1) INIT((20)'F0'X);                         00930000
*         /* SEARCH TABLE FOR CCW COMMAND CODE                          00940000
*         DCL 1 CODE CHAR(7),            /*COMMAND CODE                 00950000
*                3 * CHAR(1),            /*NOT USED                     00960000
*                /* SET MODE                                            00970000
*                3 SETMODE(2) CHAR(1) INIT((2)'23'X),                   00980000
*                /* SADXX                                               00990000
*                3 SADXX(4) CHAR(1) INIT('13'X,'17'X,'1B'X,'1F'X);      01000000
*         /************************************************************ 01010000
*         GEN(EJECT);                                                   01020000
         EJECT                                                          01030000
         DS    0H                                                       01040000
* /******************************************************************** 01050000
* /*                           COMMON CORE MAP                          01060000
* /******************************************************************** 01070000
*         /* START                                                      01080000
*         DCL   UNICTR CHAR(1) GEND;     /*NUMBER OF ENTRIES IN DEVTAB  01090000
*         DCL   TAB28 GEND;              /* COMMON AREA TABLE           01100000
*         DCL   DEVTBPTR PTR(31) GEND;   /*PTR TO DEVTAB                01110000
*         /* LENGTH OF DEVTAB ENTRY                                     01120000
*         DCL   TABLNGTH FIXED(15) BDY(WORD) GEND;                      01130000
*                                                                       01140000
*         DCL CESWT7 CHAR(1) GEND;       /* DIAGNOSTIC SWITCH    Y02008 01150000
*                                                                       01160000
*         DCL 1 * BASED(ADDR(CESWT7)),   /* FORMAT OF SWITCH     Y02008 01170000
*           3 * BIT(6),                  /* N A                  Y02008 01180000
*           3 VIRTUAL BIT(1);            /* OLTEP IS IN VIRTUAL  Y02008 01190000
*                                                                       01200000
*         /************************************************************ 01210000
*         GEN(USING CHASCT,2);                                          01220000
         USING CHASCT,2                                                 01230000
         DS    0H                                                       01240000
*         GENERATE DATA;                 /* COMMON AREA                 01250000
* /******************************************************************** 01260000
* /*                      MESSAGE MODULE MAP                            01270000
* /******************************************************************** 01280000
*         /* MESSAGE MODULE LABEL                                       01290000
*         DCL   IFDMSG73 LABEL NONLOCAL EXTERNAL;                       01300000
*         /* MESSAGES                                                   01310000
*         DCL   1 MSGPTR BASED(R9),                                     01320000
*                3 IFDXX1 PTR,           /* IFD413I                     01330000
*                3 IFDXX2 PTR,           /* IFD400I                     01340000
*                3 IFDXX3 PTR,           /* IFD415I                     01350000
*                3 IFDXX7 PTR,           /* IFD405I                     01360000
*                3 IFDXX8 PTR,           /* IFD406I                     01370000
*                3 IFDXX9 PTR,           /* IFD412I                     01380000
*                3 IFDXXA PTR,           /* IFD407I                     01390000
*                3 IFDXXB PTR,           /* IFD137I                     01400000
*                3 IFD408I PTR;          /* IFD408I MSG          Y02008 01410000
*         /* IFD400I                                                    01420000
*         DCL   1 MSG2 BASED(R1),                                       01430000
*                3 * CHAR(12),           /*NOT USED                     01440000
*                3 * CHAR(25),           /*NOT USED                     01450000
*                3 LINE CHAR(8),         /*LINE ADDRESS                 01460000
*                3 * CHAR(11),           /*NOT USED                     01470000
*                3 NAME CHAR(8);         /*TERMINAL SYMBOLIC NAME       01480000
*         /* IFD406I                                                    01490000
*         DCL   1 MSG8 BASED(R1),                                       01500000
*                3 * CHAR(4),            /* NOT USED                    01510000
*                3 * CHAR(41),           /* NOT USED                    01520000
*                3 DDGT CHAR(20);        /*DIAL DIGITS                  01530000
*         /* IFD412I                                                    01540000
*         DCL   1 MSG9 BASED(R1),                                       01550000
*                3 * CHAR(4),            /* NOT USED                    01560000
*                3 * CHAR(32),           /* NOT USED                    01570000
*                3 CCWFAIL CHAR(16);     /* CCW                         01580000
*         /* IFD137I                                                    01590000
*         DCL 1 MSG11 BASED(R1),                                        01600000
*                3 * CHAR(4),            /* NOT USED                    01610000
*                3 * CHAR(14),           /* NOT USED                    01620000
*                3 STATUS CHAR(14),      /* CSW                         01630000
*                3 * CHAR(5),            /* NOT USED                    01640000
*                3 SENSE CHAR(4);        /* SENSE                       01650000
*                                                                       01660000
*         DCL 1 MSG408 BASED(R1),        /* MESSAGE IFD408I      Y02008 01670000
*           3 * CHAR(12),                /* N A                  Y02008 01680000
*           3 ERRORLIN CHAR(8),          /* LINE IN ERROR        Y02008 01690000
*           3 * CHAR(50);                /* MSG TEXT             Y02008 01700000
*         GEN(EJECT);                    /* EJECT                       01710000
         EJECT                                                          01720000
         DS    0H                                                       01730000
* /******************************************************************** 01740000
* /*  THE FOLLOWING MAPS DEFINE THE IOSB-TECB-WAITLIST          Y02008* 01750000
* /******************************************************************** 01760000
*                                                                       01770000
*         DCL IORTNADR PTR GEND;         /* I/0 EFFECTOR ADDRESS Y02008 01780000
*                                                                       01790000
*                                                                       01800000
*         DCL EFCTRCB CHAR(20) GEND;    /* I O EFFECTOR PLIST   Y02008* 01810000
*                                                                       01820000
*         /* PTR TO CCWS FOR ENBL Y02008*/                              01830000
*         DCL IOCCWADR PTR BASED(ADDR(EFCTRCB));                        01840000
*                                                                       01850000
*         DCL DVTPTR PTR GEND;           /* PTR TO DEV TABLE     Y02008 01860000
*         DCL FLGA CHAR(1) GEND;         /* FLAG BYTE            Y02008 01870000
*         DCL GDP CHAR(1) GEND;          /* GUARANTEE DEV PATH   Y02008 01880000
*         DCL FLGB CHAR(1) GEND;         /* FLAG BYTE            Y02008 01890000
*         DCL INTERNAL CHAR(1) GEND;     /* INTERNAL IOSB CALL   Y02008 01900000
*         DCL ATTNIN CHAR(1) GEND;       /* ATTENTION INTERUPT   Y02008 01910000
*         DCL VIRTCCWS CHAR(1) GEND;     /* CCW STRING IN VIRTUALY02008 01920000
*         DCL FILEMSK CHAR(1) GEND;      /* DEV FILE MASK        Y02008 01930000
*         DCL OLDTECBX CHAR(1) GEND;     /* USE OLD TECB FORMAT  Y02008 01940000
*         DCL SNSCNT CHAR(1) GEND;          /* SNS BYTES EXPCTED Y02008 01950000
*         DCL TECBPTRX PTR GEND;         /* PTR TO ACTV TECB     Y02008 01960000
*                                                                       01970000
*         /************************************************************ 01980000
*         /* THE FOLLOWING MAPS THE WAIT I/O LIST                Y02008 01990000
*         /************************************************************ 02000000
*                                                                       02010000
*         DCL 1 WAITLIST CHAR BDY(WORD), /* WAIT LIST FOR WAITIO Y02008 02020000
*           3 XMGR CHAR(1) INIT('00'X),  /* OLTEP TRANSMNGR FLGS Y02008 02030000
*           3 LVL CHAR(1) INIT('02'X),   /* LEVEL 02 OF MACRO    Y02008 02040000
*           3 MODID CHAR(2) INIT('36'),  /* ID OF WAIT I/O MOD   Y02008 02050000
*           3 TECBPTR PTR INIT(ADDR(TECB)),  /* ADDR OF OLT TECB Y02008 02060000
*           3 CDSDATA PTR INIT('00'X),   /* ADDR OF CDS TO USE   Y02008 02070000
*           3 FLG CHAR(1) INIT('80'X),   /* FLAG BYTE            Y02008 02080000
*             5 WAITYES BIT(1),          /* WAIT REQ FOR EVENT   Y02008 02090000
*           3 TIME CHAR(2);              /* TIME PARM FOR WAIT   Y02008 02100000
*                                                                       02110000
*         DCL WAITRC FIXED;              /* WAIT IO RETURN CODE  Y02008 02120000
*         /************************************************************ 02130000
*         /* THE FOLLOWING MAPS THE NEW TECB FORMAT USED IN IO   Y02008 02140000
*         /************************************************************ 02150000
*                                                                       02160000
*         DCL 1 TECB CHAR,               /* NEW TECB FORMAT      Y02008 02170000
*           3 FLDCNT CHAR(1)  INIT('01'X),  /* EVENT FIELDS USED Y02008 02180000
*           3 FLDSIZE CHAR(1) INIT('0C'X),  /* SIZE OF EVENT FLD Y02008 02190000
*           3 *  CHAR(1) INIT('00'X),    /* NOT APPLICABLE       Y02008 02200000
*           3 SNSIZE CHAR(1) INIT('05'X),/* NUM OF SENS BYTES    Y02008 02210000
*           3 FLG1 CHAR(1) INIT('00'X),  /* FLAG BYTE            Y02008 02220000
*           3 SNSFIELD CHAR(1) INIT('01'X),/* NUM SENSE FIELDS   Y02008 02230000
*           3 CNTSNS CHAR(1) INIT('00'X),/* NUM SNS FIELDS FILLEDY02008 02240000
*           3 CNTINT CHAR(1) INIT('00'X),/* NUM INT FIELDS FILLEDY02008 02250000
*           3 SIOCC CHAR(1) INIT('00'X), /* START I/O COND CODE  Y02008 02260000
*           3 *  CHAR(1) INIT('00'X),    /* N A                  Y02008 02270000
*           3 DEVAD CHAR(2) INIT('0000'X),  /* DEVADR IN TECB    Y02008 02280000
*           3 *   CHAR(1) INIT('00'X),   /* N A                  Y02008 02290000
*           3 OUTBUFR(12) CHAR(1) INIT((12)'00'X),   /* DATA BUF Y02008 02300000
*             5 CSW1 CHAR(7),            /* EVENT CSW            Y02008 02310000
*               7 CCWPLUS8 CHAR(3),      /* NEXT CCW TO BE ISSUEDY02008 02320000
*               7 TECBFLGA CHAR(1),      /* CSW FLAG BYTE        Y02008 02330000
*                 9 * BIT(4),            /* N A                  Y02008 02340000
*                 9 CHANEND BIT(1),      /* CHANNEL END INDICATORY02008 02350000
*                 9 DEVICEND BIT(1),     /* DEVICE END INDICATOR Y02008 02360000
*                 9 UNITCHCK BIT(1),     /* UNIT CHECK INDICATOR Y02008 02370000
*               7 TECBFLGB CHAR(1),      /* FLAG BYTE            Y02008 02380000
*             5 * CHAR(3),               /* I/O DEV ADDR         Y02008 02390000
*             5 TSNS1 CHAR(2);           /* TECB EVENT SENSE     Y02008 02400000
*                                                                       02410000
*         GEN(EJECT);                                                   02420000
         EJECT                                                          02430000
         DS    0H                                                       02440000
* /******************************************************************** 02450000
* /*  THE FOLLOWING MAPS DEFINE DEVTAB ENTRIES                          02460000
* /******************************************************************** 02470000
*         /* START                                                      02480000
*         DCL   1 * BASED(DEVPT1),                                      02490000
*                3 DEVADDR1 CHAR(8),     /*LINE ADDR                    02500000
*                3 UCBADDR1 PTR(31),     /*UCB ADDR                     02510000
*                3 * CHAR(1),                                           02520000
*                 5 * BIT(1),            /*NOT USED                     02530000
*                 5 PRIMARY BIT(1),      /*PRIMARY DEVICE FLAG          02540000
*                 5 * BIT(6),            /*NOT USED                     02550000
*                3 * CHAR(2),            /*NOT USED                     02560000
*                3 * CHAR(1),            /*LINE STATUS FLAGS            02570000
*                 5 LNDSBL1 BIT(1),      /*LINE DISABLED BY OLTED FLAG  02580000
*                 5 LNENBL1 BIT(1),      /*LINE ENABLED FLAG            02590000
*                 5 * BIT(6),            /*NOT USED                     02600000
*                3 * CHAR(25),           /*NOT USED                     02610000
*                3 * CHAR(1),            /*CDS FLAG                     02620000
*                 5 * BIT(4),            /*NOT USED                     02630000
*                 5   NMPRSNT1 BIT(1),   /*SYMBOLICALLY NAMED TERMINAL  02640000
*                 5 * BIT(3),            /*NOT USED                     02650000
*                3 * CHAR(2),            /*NOT USED                     02660000
*                3 SYMBNM1 CHAR(8),      /*SYMBOLIC NAME                02670000
*                3 * CHAR(4);            /*NOT USED                     02680000
*         /* 2ND DEVICE POINTER                                         02690000
*         DCL   1 * BASED(DEVPT2),                                      02700000
*                3 DEVADDR2 CHAR(8),     /*LINE ADDR                    02710000
*                3 * CHAR(7),            /*NOT USED                     02720000
*                3 * CHAR(1),            /*LINE STATUS FLAGS            02730000
*                 5 LNDSBL2 BIT(1),      /*LINE DISABLED BY OLTEP FLAG  02740000
*                 5 LNENBL2 BIT(1),      /*LINE ENABLED FLAG            02750000
*                 5 * BIT(6),                                           02760000
*                 5 CHAR(40);            /* NOT USED            Y02008* 02770000
*         GEN(EJECT);                                                   02780000
         EJECT                                                          02790000
         DS    0H                                                       02800000
*         /************************************************************ 02810000
*         /*    THE FOLLOWING MAP DEFINES A CDS ENTRY           Y02008* 02820000
*         /************************************************************ 02830000
*                                                                       02840000
*         DCL   1 * BASED(CDSPTR),                                      02850000
*                3 * CHAR(9),            /*NOT USED                     02860000
*                3 * CHAR(1),            /*NOT USED                     02870000
*                 5 * BIT(4),            /* NOT USED                    02880000
*                 5 SYMNMFLG BIT(1),     /* SYMBOLIC NAME FLAG          02890000
*                 5 * BIT(2),            /* NOT USED                    02900000
*                 5 LCRFLG BIT(1),       /* LCR FLAG                    02910000
*                3 * CHAR(11),           /*NOT USED                     02920000
*                3 * CHAR(1),            /*NOT USED                     02930000
*                 5 SMPRSNT BIT(1),      /*SET MODE BYTES IN CDS FLAG   02940000
*                 5 AUTOCALL BIT(1),     /*AUTOCALL FEATURE FLAG        02950000
*                 5 SWITCHLN BIT(1),     /*SWITCHED LINE FLAG           02960000
*                 5 NSWTCHLN BIT(1),     /*NON SWITCHED LINE FLAG       02970000
*                 5 WORLDTRD BIT(1),     /*WORLD TRADE FLAG             02980000
*                 5 * BIT(3),            /*NOT USED                     02990000
*                3 * CHAR(1),            /*NOT USED                     03000000
*                3 CMDSEQ CHAR(1),       /* COMMAND SEQUENCE CODE       03010000
*                3 VARIABLE CHAR(23);    /*EXTENDED FIELD IN CDS        03020000
*         /* COMMON AREA POINTER                                        03030000
*         DCL   1 * BASED(VARFLDPT),                                    03040000
*                3 DIALCNT CHAR(1),      /*DIAL DIGIT COUNT IN CDS      03050000
*                3 DIALDGT CHAR(20);     /*DIAL DIGITS IN CDS           03060000
* /******************************************************************** 03070000
* /*  THE FOLLOWING MAP DEFINES THE PARAMETER LIST                      03080000
* /******************************************************************** 03090000
*         /* START                                                      03100000
*         DCL   1 * BASED(R1),                                          03110000
*                3 * CHAR(4),            /*NOT USED                     03120000
*                3 EXIOPTR PTR(31);      /*PTR TO PARAMETER LIST        03130000
*         /* PARAMETER LIST                                             03140000
*         DCL   1 * BASED(EXIOPTR),      /*PARAMETER LIST               03150000
*                3 DEVICE PTR(31),       /*PTR TO DEVTAB ENTRY          03160000
*                3 CDSADR PTR(31);       /*PTR TO OLT'S CDS             03170000
*         GEN(EJECT);                                                   03180000
         EJECT                                                          03190000
         DS    0H                                                       03200000
* /******************************************************************** 03210000
* /*  THE FOLLOWING DEFINES THE CHANNEL PROGRAM AREA                    03220000
* /******************************************************************** 03230000
*         /* LCR CCW AREA                                               03240000
*         DCL   1 CCWAREA CHAR(64) BDY(DWORD),                          03250000
*                /* DISABLE CCW                                         03260000
*                3 DISABLE CHAR(8) INIT('2F00000020000001'X),           03270000
*                3 TWOCCW CHAR(16),      /*SADXX, SET MODE, DIAL OR     03280000
*                /*                          ENABLE CCW AREA            03290000
*                3 WRITECCW(6) CHAR(8),  /*6 DATA-CHAINED WRITE CCW'S   03300000
*                 /* WRITE COMMAND CODE                                 03310000
*                 5 * CHAR(1) INIT((6)'01'X),                           03320000
*                 /* PTR TO 80 BYTES OF ONES                            03330000
*                 5 * PTR(24) INIT((6)ADDR(ONES)),                      03340000
*                 /* DC AND BYTE COUNT                                  03350000
*                 5 * CHAR(4) INIT((6)'E0000050'X),                     03360000
*                3 * CHAR(8),                                           03370000
*                 /* WRITE COMMAND CODE                                 03380000
*                 5 * CHAR(1) INIT('01'X),                              03390000
*                 /* PTR TO ONES                                        03400000
*                 5 * PTR(24) INIT(ADDR(ONES)),                         03410000
*                 /* NOT DC AND BYTE COUNT                              03420000
*                 5 * CHAR(4) INIT('20000050'X);                        03430000
* /******************************************************************** 03440000
* /*  THE FOLLOWING MAP DEFINES THE CCW                                 03450000
* /******************************************************************** 03460000
*         /* CCW BREAK DOWN                                             03470000
*         DCL   1 CCW CHAR(8) BASED(CCWADR),                            03480000
*                3 * CHAR(1),                                           03490000
*                3 DATAADDR PTR(24),     /*CCW PTR TO DATA AREA         03500000
*                3 * CHAR(4);                                           03510000
*         GEN(EJECT);                    /*EJECT PAGE                   03520000
         EJECT                                                          03530000
         DS    0H                                                       03540000
*         /* SAVE                                                       03550000
*                                                                       03560000
*                                                                       03570000
*         /************************************************************ 03580000
*         /*          RETAIN SWITCH FORMATS                           * 03590000
*         /************************************************************ 03600000
*                                                                       03610000
*         DCL CESWTR CHAR(1) GEND;      /* RETAIN SWITCH              * 03620000
*                                                                       03630000
*         DCL 1 * BASED(ADDR(CESWTR)),  /*    SWITCH STRUCTURE        * 03640000
*           3 RETAINAC BIT(1);          /* RETAIN ACTIVE              * 03650000
*                                                                       03660000
*                                                                       03670000
*         DCL CESWTR2 CHAR(1) GEND;     /* THIRD RETAIN FLAG          * 03680000
*                                                                       03690000
*         DCL 1 * BASED(ADDR(CESWTR2)), /* SWITCH STRUCTURE           * 03700000
*           3 * BIT(7),                                                 03710000
*           3 DPMSGREI BIT(1);          /* DATA PROT MSG TO REMOY00427* 03720000
*         RESTRICT(DEVPT1,IOSBPTR,CDSPTR,R2);     /*             Y02008 03730000
* /******************************************************************** 03740000
* /*                           INITIALIZATION                           03750000
* /******************************************************************** 03760000
*         /* START                                                      03770000
*         EFCTRCB=EFCTRCB&&EFCTRCB;     /* CLEAR EFFECTOR PLIST Y02008* 03780000
         XC    EFCTRCB(20),EFCTRCB                                0080  03790000
*         IF RETAINAC='1'B THEN         /* IF RETAIN ACTIVE           * 03800000
         TM    A00070,B'10000000'                                 0081  03810000
         BC    12,@9FF                                            0081  03820000
*         HDRMSG='0'B;                  /* DONT OUTPUT HDR MSG  X02008* 03830000
         NI    LCRFLAG,B'11110111'                                0082  03840000
*         DPMSGREI='1'B;                /* REM SITE GETS MSG   OY00427* 03850000
@9FF     OI    A00071,B'00000001'                                 0083  03860000
*         RESTRICT(R1);                                                 03870000
*         DEVPT1=DEVICE;                 /*SET DEVTAB SEARCH PARAMETER  03880000
         L     @4,4(0,@1)                                         0085  03890000
         L     @3,0(0,@4)                                         0085  03900000
*         CDSPTR=CDSADR;                 /*SET PTR TO CDS IN OLT        03910000
         L     @5,4(0,@4)                                         0086  03920000
*         RELEASE(R1);                   /* N/A                         03930000
*         R9=ADDR(IFDMSG73);             /*SET MESSAGE MODULE POINTER   03940000
         L     @1,@V1              ADDRESS OF IFDMSG73            0088  03950000
         LR    @9,@1                                              0088  03960000
*         /* SAVE IT                                                    03970000
*         RESTRICT(R9);                                                 03980000
*         R1=IFDXX1;                     /*SET MSG PTR                  03990000
         L     @1,0(0,@9)                                         0090  04000000
*         /* CHECK CDS PTR                                              04010000
*         IF CDSPTR=0 THEN               /*CDS ADDR SPECIFIED BY OLT    04020000
         LTR   @5,@5                                              0091  04030000
*           GOTO LCR4;                   /*NO - BRANCH TO ERROR RETURN  04040000
         BC    08,LCR4                                            0092  04050000
*         /* SAVE IT                                                    04060000
*         RESTRICT(R1);                                                 04070000
*         R1=IFDXX2;                     /*SET MSG PTR                  04080000
         L     @1,4(0,@9)                                         0094  04090000
*         LINE=DEVADDR1;                 /*MOVE LINE ADDR FROM DEVTAB   04100000
         MVC   37(8,@1),0(@3)                                     0095  04110000
*         /* CHECK DEVTAB                                               04120000
*         IF SYMNMFLG='0'B THEN          /*SYMBOLICALLY NAMED TERMINAL? 04130000
         TM    9(@5),B'00001000'                                  0096  04140000
*           GOTO LCR2A;                  /*NO - BRANCH TO ERROR RETURN  04150000
         BC    08,LCR2A                                           0097  04160000
*         NAME=NAME&&NAME;               /* CLEAR NAME BUFFR   AS13319* 04170000
         XC    56(8,@1),56(@1)                                    0098  04180000
*         NAME=SYMBNM1;                  /*MOVE SYMBOLIC NAME FROM      04190000
         MVC   56(8,@1),44(@3)                                    0099  04200000
*         HDRMSG='1'B;                  /* OUTPUT HDR MSG       X02008* 04210000
         OI    LCRFLAG,B'00001000'                                0100  04220000
*         /* RELEASE                                                    04230000
*         RELEASE(R1);                                                  04240000
*         /* CHECK FOR LINE ALREADY DISABLED                            04250000
*         IF LNENBL1='1'B THEN           /* YES                         04260000
         TM    15(@3),B'01000000'                                 0102  04270000
         BC    12,@9FE                                            0102  04280000
*           DO;                                                         04290000
*              LCRFLG='0'B;              /* RESET LCR FLAG IN CSWY02008 04300000
         NI    9(@5),B'11111110'                                  0104  04310000
*              GOTO LCR6;                /* RETURN                      04320000
         BC    15,LCR6                                            0105  04330000
*           END;                                                        04340000
*         /* CHECK SEQ CODE IN CDS                                      04350000
*         IF CMDSEQ='00'X THEN           /*BYPASS LINE CONNECTION ?     04360000
@9FE     CLI   23(@5),X'00'                                       0107  04370000
*           GOTO LCR6;                   /*YES - BRANCH TO RETURN       04380000
         BC    08,LCR6                                            0108  04390000
*         /* CHECK COMMAND SEQ IN CDS                                   04400000
*         IF CMDSEQ>='08'X THEN          /*VALID LINE CONNECTION ?      04410000
         CLI   23(@5),X'08'                                       0109  04420000
*           GOTO LCR3;                   /*BRANCH TO ERROR RETURN       04430000
         BC    10,LCR3                                            0110  04440000
*         RESTRICT(CCWADR);                                             04450000
*         LCRFLAG='00'X;                 /*CLEAR INTERNAL FLAGS         04460000
         MVI   LCRFLAG,X'00'                                      0112  04470000
*         TWOCCW=TWOCCW&&TWOCCW;         /*CLEAR CCW AREA               04480000
         XC    CCWAREA+8(16),CCWAREA+8                            0113  04490000
*         CAWPTR=ADDR(CCWAREA);          /*SET CHANNEL PROGRAM PTR      04500000
         LA    @F,CCWAREA                                         0114  04510000
         ST    @F,CAWPTR                                          0114  04520000
*         CCWADR=CAWPTR;                 /*SET PTR TO CHANNEL PROGRAM   04530000
         LR    @4,@F                                              0115  04540000
*         DISABLE(5)='60'X;              /*MAKE DISABLE CCW CHAINED     04550000
         MVI   CCWAREA+4,X'60'                                    0116  04560000
* /******************************************************************** 04570000
*         /* END                                                        04580000
*         GEN(EJECT);                                                   04590000
         EJECT                                                          04600000
         DS    0H                                                       04610000
*         /* CHECK SEQ CODE IN CDS                                      04620000
*         IF CMDSEQ='01'X THEN           /*/*COMMAND SEQUENCE CODE=01   04630000
         CLI   23(@5),X'01'                                       0118  04640000
*           GOTO LCR1;                   /*YES - BRANCH                 04650000
         BC    08,LCR1                                            0119  04660000
* /******************************************************************** 04670000
* /*  SET MODE OR SADXX COMMAND ?                                       04680000
* /******************************************************************** 04690000
*         /* START                                                      04700000
*         CCWADR=CCWADR+8;               /*SET POINTER TO NEXT CCW      04710000
         LA    @4,8(0,@4)                                         0120  04720000
*         CCW(1)=CODE(CMDSEQ);           /*SET COMMAND CODE BY SEQ CODE 04730000
         SR    @1,@1                                              0121  04740000
         IC    @1,23(0,@5)                                        0121  04750000
         LA    @E,CODE-1(@1)                                      0121  04760000
         MVC   0(1,@4),0(@E)                                      0121  04770000
*         CCW(5)='60'X;                  /*MAKE CCW COMMAND CHAINED     04780000
         MVI   4(@4),X'60'                                        0122  04790000
*         CCW(8)='01'X;                  /*SET BYTE COUNT TO 1          04800000
         MVI   7(@4),X'01'                                        0123  04810000
*         /* CHECK SEQ CODE IN CDS                                      04820000
*         IF CMDSEQ='02'X THEN           /*SET MODE CCW FOR SDA-I ?     04830000
         CLI   23(@5),X'02'                                       0124  04840000
         BC    07,@9FD                                            0124  04850000
*           DO;                          /* YES-                        04860000
*             CCW(5)='20'X;              /*NO COMMAND CHAINING          04870000
         MVI   4(@4),X'20'                                        0126  04880000
*             CCW(8)='02'X;              /*BYTE COUNT=2                 04890000
         MVI   7(@4),X'02'                                        0127  04900000
*           END;                         /*                             04910000
*         /* CHECK SEQ CODE IN CDS                                      04920000
*         IF CMDSEQ='02'X | CMDSEQ='03'X THEN/*                         04930000
*                                          SET MODE CCW ?               04940000
@9FD     CLI   23(@5),X'02'                                       0129  04950000
         BC    08,@9FC                                            0129  04960000
         CLI   23(@5),X'03'                                       0129  04970000
         BC    07,@9FB                                            0129  04980000
*           DO;                          /* YES                         04990000
*             /* CHECK CDS                                              05000000
*             IF SMPRSNT='0'B THEN       /*SET MODE BYTES IN CDS        05010000
@9FC     TM    21(@5),B'10000000'                                 0131  05020000
*               GOTO LCR3;               /*BRANCH TO ERROR RETURN       05030000
         BC    08,LCR3                                            0132  05040000
*             DATAADDR=ADDR(VARIABLE);   /*SET CCW PTR TO SET MODE BYTE 05050000
         LA    @F,24(0,@5)                                        0133  05060000
         ST    @F,@TEMP4                                          0133  05070000
         MVC   1(3,@4),@TEMP4+1                                   0133  05080000
*             /* CHECK CDS                                              05090000
*             IF CMDSEQ='02'X THEN       /*SET MODE CCW FOR SDA-I ?     05100000
         CLI   23(@5),X'02'                                       0134  05110000
         BC    07,@9FA                                            0134  05120000
*               DO;                      /*YES -                        05130000
*                 RESTRICT(R6);                                         05140000
*                 GEN(BAL   R6,IOSBRTN); /*BRANCH TO IOSB ROUTINEY02008 05150000
         BAL   R6,IOSBRTN                                               05160000
         DS    0H                                                       05170000
*                 /* RELEASE                                            05180000
*                 RELEASE(R6);                                          05190000
*                 /* CHECK ECB                                          05200000
*                 IF UNSUCCES='1'B THEN  /*EXCP SUCCESSFUL ?            05210000
         TM    LCRFLAG,B'00010000'                                0139  05220000
*                   GOTO LCR5;           /*NO - BRANCH TO RETURN        05230000
         BC    01,LCR5                                            0140  05240000
*                 CAWPTR=CCWADR+8;       /*RESET CHANNEL PROGRAM PTR    05250000
         LA    @F,8                                               0141  05260000
         AR    @F,@4                                              0141  05270000
         ST    @F,CAWPTR                                          0141  05280000
*               END;                                                    05290000
*           END;                                                        05300000
@9FA     EQU   *                                                  0143  05310000
*         /* EJECT PAGE                                                 05320000
*         GEN(EJECT);                                                   05330000
@9FB     EQU   *                                                  0144  05340000
         EJECT                                                          05350000
         DS    0H                                                       05360000
* /******************************************************************** 05370000
* /*  ENABLE OR DIAL COMMAND ?                                          05380000
* /******************************************************************** 05390000
* LCR1:                                  /* BUILD CCWS                  05400000
*         CCWADR=CCWADR+8;               /*POINT TO NEXT CCW            05410000
LCR1     LA    @4,8(0,@4)                                         0145  05420000
*         CCW(1)='27'X;                  /*ENABLE COMMAND CODE          05430000
         MVI   0(@4),X'27'                                        0146  05440000
*         CCW(5)='20'X;                  /*NO COMMAND CHAINING          05450000
         MVI   4(@4),X'20'                                        0147  05460000
*         CCW(8)='01'X;                  /* BYTE COUNT                  05470000
         MVI   7(@4),X'01'                                        0148  05480000
*         /* CHECK CDS                                                  05490000
*         IF SWITCHLN='0'B THEN          /*SWITCHED LINE ?              05500000
         TM    21(@5),B'00100000'                                 0149  05510000
*           GOTO LCR2;                   /* NO                          05520000
         BC    08,LCR2                                            0150  05530000
*         /* CHECK CDS                                                  05540000
*         IF AUTOCALL='0'B THEN          /*SWITCHED LINE W/AUTOCALL     05550000
         TM    21(@5),B'01000000'                                 0151  05560000
         BC    05,@9F9                                            0151  05570000
*           /* NO -  SDA-II AND WORLD TRADE ?                           05580000
*           IF CMDSEQ='03'X & WORLDTRD='1'B                             05590000
*             THEN                       /* YES                         05600000
         CLI   23(@5),X'03'                                       0152  05610000
         BC    07,@9F8                                            0152  05620000
         TM    21(@5),B'00001000'                                 0152  05630000
         BC    12,@9F7                                            0152  05640000
*               CCW(5)='60'X;            /*MAKE ENABLE COMMAND CHAUNED  05650000
         MVI   4(@4),X'60'                                        0153  05660000
*         /* RESTRICT                                                   05670000
*         RESTRICT(VARFLDPT);                                           05680000
@9F7     EQU   *                                                  0154  05690000
@9F8     EQU   *                                                  0154  05700000
*         VARFLDPT=ADDR(VARIABLE);       /*SET POINTER TO VARIABLE      05710000
@9F9     LA    @7,24(0,@5)                                        0155  05720000
*         /* FIELD IN OLTS CDS                                          05730000
*         /* CHECK CDS                                                  05740000
*         IF SMPRSNT='1'B THEN           /*SET MODE BYTES IN CDS ?      05750000
         TM    21(@5),B'10000000'                                 0156  05760000
         BC    12,@9F6                                            0156  05770000
*           VARFLDPT=VARFLDPT+2;         /*YES-RESET PTR TO DIAL        05780000
         LA    @7,2(0,@7)                                         0157  05790000
*         /* CHECK CDS                                                  05800000
*         IF DIALCNT>'14'X THEN          /*DIGIT COUNT 20  ?            05810000
@9F6     CLI   0(@7),X'14'                                        0158  05820000
*           GOTO LCR3;                   /*BRANCH TO ERROR RETURN       05830000
         BC    02,LCR3                                            0159  05840000
* /******************************************************************** 05850000
*         /* CHECK CDS                                                  05860000
*         IF AUTOCALL='0'B THEN          /*AUTOCALL ON SWITCHED LINE?   05870000
         TM    21(@5),B'01000000'                                 0160  05880000
         BC    05,@9F5                                            0160  05890000
*           DO;                          /*NO-                          05900000
*             OPERCALL='1'B;             /*SET OPERATOR CALL FLAG ON    05910000
         OI    LCRFLAG,B'01000000'                                0162  05920000
*             /* CHECK CDS                                              05930000
*             IF DIALCNT¬='00'X THEN     /*DIAL DIGITS IN CDS ?         05940000
         CLI   0(@7),X'00'                                        0163  05950000
         BC    08,@9F4                                            0163  05960000
*               DO;                      /*YES-                         05970000
*                 TELNO='1'B;            /* SET FLAG                    05980000
         OI    LCRFLAG,B'10000000'                                0165  05990000
*                 /* RESTRICT                                           06000000
*                 RESTRICT(R1);                                         06010000
*                 R1=IFDXX8;             /*SET MSG PTR                  06020000
         L     @1,16(0,@9)                                        0167  06030000
*                 /*MOVE DIAL DIGITS INTO MESSAGE                       06040000
*                 DDGT=DIALDGT(1:DIALCNT);                              06050000
         SR    @6,@6                                              0168  06060000
         IC    @6,0(0,@7)                                         0168  06070000
         BCTR  @6,0                                               0168  06080000
         LA    @E,1(0,@7)                                         0168  06090000
         LA    @A,45(0,@1)                                        0168  06100000
         MVI   0(@A),C' '                                         0168  06110000
         MVC   1(019,@A),0(@A)                                    0168  06120000
         EX    @6,@MVC                                            0168  06130000
*                 DDGT(1:DIALCNT)=       /* OR IN F0'S                  06140000
*                 DDGT(1:DIALCNT) |      /* IN CASE NUMBER              06150000
*                 X20F0(1:DIALCNT);      /* NOT IN EBCDIC               06160000
         LA    @E,X20F0                                           0169  06170000
         SR    @6,@6                                              0169  06180000
         IC    @6,0(0,@7)                                         0169  06190000
         BCTR  @6,0                                               0169  06200000
         LA    @A,45(0,@1)                                        0169  06210000
         EX    @6,@OC                                             0169  06220000
*                 /* RELEASE                                            06230000
*                 RELEASE(R1);                                          06240000
*               END;                                                    06250000
*           END;                                                        06260000
         BC    15,@9F3                                            0173  06270000
*         ELSE                           /*YES - AUTOCALL ON SWITCHED   06280000
*           /*                             LINE                         06290000
*           DO;                                                         06300000
*             /* CHECK CDS                                              06310000
*             IF DIALCNT='00'X THEN      /*DIAL DIGITS IN CDS ?         06320000
@9F5     CLI   0(@7),X'00'                                        0174  06330000
*               GOTO LCR3;               /* ERROR                       06340000
         BC    08,LCR3                                            0175  06350000
*             CCW(1)='29'X;              /*CHANGE ENABLE TO DIAL        06360000
         MVI   0(@4),X'29'                                        0176  06370000
*             DATAADDR=ADDR(DIALDGT);    /*POINT TO DUAL DIGITS IN CDS  06380000
         LA    @F,1(0,@7)                                         0177  06390000
         ST    @F,@TEMP4                                          0177  06400000
         MVC   1(3,@4),@TEMP4+1                                   0177  06410000
*             CCW(5)='20'X;              /*NO CHAINING                  06420000
         MVI   4(@4),X'20'                                        0178  06430000
*             CCW(8)=DIALCNT;            /*BYTE COUNT                   06440000
         MVC   7(1,@4),0(@7)                                      0179  06450000
*           END;                                                        06460000
* /******************************************************************** 06470000
*         /* RELEASE                                                    06480000
*         RELEASE(VARFLDPT);                                            06490000
@9F3     EQU   *                                                  0181  06500000
*         /* RELEASE                                                    06510000
*         RELEASE(CCWADR);                                              06520000
* /******************************************************************** 06530000
*         /* EJECT                                                      06540000
*         GEN(EJECT);                                                   06550000
         EJECT                                                          06560000
         DS    0H                                                       06570000
* LCR2:                                  /*SET UP TO GO TO IOSB RTN     06580000
*         /* SAVE REG 6                                                 06590000
*         RESTRICT(R6);                                                 06600000
LCR2     EQU   *                                                  0184  06610000
*         GEN(BAL   R6,IOSBRTN);         /*BRANCH TO EXCP ROUTINE TO    06620000
         BAL   R6,IOSBRTN                                               06630000
         DS    0H                                                       06640000
*         RELEASE(R6);                   /*  ENABLE LINE                06650000
*         /* CHECK ECB                                                  06660000
*         IF UNSUCCES='1'B THEN          /* I/O SUCCESSFUL ?            06670000
         TM    LCRFLAG,B'00010000'                                0187  06680000
*           GOTO LCR5;                   /*NO - BRANCH TO RETURN        06690000
         BC    01,LCR5                                            0188  06700000
*         /* RELEASE REG 8                                              06710000
*         RELEASE(IOSBPTR);                                             06720000
* /******************************************************************** 06730000
*         LCRFLG='0'B;                   /*RESET LCR FLAG IN CDS        06740000
         NI    9(@5),B'11111110'                                  0190  06750000
*         LNENBL1='1'B;                  /*SET ENABLE FLAG ON IN DEVTAB 06760000
         OI    15(@3),B'01000000'                                 0191  06770000
*         LNDSBL1='0'B;                  /*SET DISABLE FLAG OFF         06780000
         NI    15(@3),B'01111111'                                 0192  06790000
*         /* EJECT                                                      06800000
*         GEN(EJECT);                                                   06810000
         EJECT                                                          06820000
         DS    0H                                                       06830000
* /******************************************************************** 06840000
* LCR6:                                  /* NORMAL RETURN               06850000
*         DPMSGREI='0'B;                /* TURN OFF REM MSG FLGOY00427* 06860000
LCR6     NI    A00071,B'11111110'                                 0194  06870000
*         R15=0;                         /*SET RETURN CODE=00           06880000
         SR    @F,@F                                              0195  06890000
*         RETURN;                        /*YES - RETURN TO EXIO MODULE  06900000
         BC    15,@EL01                                           0196  06910000
* /******************************************************************** 06920000
* LCR2A:                                 /*SET UP TO GO TO MESSAGE RTN  06930000
*         GEN(BAL   R7,MSGRTN);          /*BRANCH TO OUTPUT MESSAGE     06940000
LCR2A    BAL   R7,MSGRTN                                                06950000
         DS    0H                                                       06960000
* /******************************************************************** 06970000
* LCR3:                                  /* ERROR                       06980000
*         R1=IFDXX3;                     /*SET ERROR MSG PTR            06990000
LCR3     L     @1,8(0,@9)                                         0198  07000000
* /******************************************************************** 07010000
* LCR4:                                  /*SET UP TO GO TO MESSAGE RTN  07020000
*         GEN(BAL   R7,MSGRTN);          /*BRANCH TO OUTPUT MESSAGE     07030000
LCR4     BAL   R7,MSGRTN                                                07040000
         DS    0H                                                       07050000
* /******************************************************************** 07060000
* LCR5:                                  /* ERROR RETURN                07070000
*         DPMSGREI='0'B;                /* REM SITE GETS MSG   OY00427* 07080000
LCR5     NI    A00071,B'11111110'                                 0200  07090000
*         R15=20;                        /*SET RETURN CODE=14           07100000
         LA    @F,20                                              0201  07110000
*         RETURN;                        /*RETURN TO EXIO MODULE        07120000
         BC    15,@EL01                                           0202  07130000
*         RELEASE(DEVPT1,CDSPTR);                                       07140000
* /******************************************************************** 07150000
* /*  OUTPUT OPERATOR MESSAGE ROUTINE                                   07160000
* /******************************************************************** 07170000
* MSGRTN:                                /* MESSAGE ROUTINE             07180000
*                                                                       07190000
*         /* OUTPUT HEADER MESSAGE FOR IFDOLT73, LINE ADDR AND SYMNAM * 07200000
*         IF HDRMSG='1'B THEN           /* IF HDR MSG FLAG IS ONX02008* 07210000
MSGRTN   TM    LCRFLAG,B'00001000'                                0204  07220000
         BC    12,@9F2                                            0204  07230000
*          DO;                          /* SET UP FOR MSG OUTPUTX02008* 07240000
*           R1SAVE=R1;                  /* SAVE ERROR MSG PTR   X02008* 07250000
         ST    @1,R1SAVE                                          0206  07260000
*           R1=IFDXX2;                  /* ADDRESS HEADER MSG   X02008* 07270000
         L     @1,4(0,@9)                                         0207  07280000
*           GEN(PWTO REG=(1));          /* OUTPUT MESSAGE       X02008* 07290000
         PWTO REG=(1)                                                   07300000
         DS    0H                                                       07310000
*           R1=R1SAVE;                  /* RESTORE REG 1 VALUE  X02008* 07320000
         L     @1,R1SAVE                                          0209  07330000
*           HDRMSG='0'B;                /* DONT OUTPUT MSG AGAINX02008* 07340000
         NI    LCRFLAG,B'11110111'                                0210  07350000
*          END;                         /* END MSG LOOP         X02008* 07360000
*                                                                       07370000
*         GEN(PWTO  REG=(1));            /*WRITE OUTPUT MESSAGE         07380000
@9F2     EQU   *                                                  0212  07390000
         PWTO  REG=(1)                                                  07400000
         DS    0H                                                       07410000
*         GEN(BR    R7);                 /*BRANCH BACK                  07420000
         BR    R7                                                       07430000
         DS    0H                                                       07440000
*         /************************************************************ 07450000
*         GEN(EJECT);                                                   07460000
         EJECT                                                          07470000
         DS    0H                                                       07480000
* /******************************************************************** 07490000
* /*  EXECUTE CHANNEL PROGRAM TO CONDITION LINE                         07500000
* /******************************************************************** 07510000
* IOSBRTN:                               /* EXCP ROUTINE                07520000
*         RESTRICT(R6);                                                 07530000
*         /* SAVE REGS                                                  07540000
*         RESTRICT(IOSBPTR,DEVPT1,CCWADR,CDSPTR);                       07550000
*         FLGA='00'X;                    /* INIT FLAG BYTE TO 0  Y02008 07560000
IOSBRTN  MVI   FLGA,X'00'                                         0217  07570000
*         FLGB='00'X;                    /* INIT FLAG BYTE TO 0  Y02008 07580000
         MVI   FLGB,X'00'                                         0218  07590000
*         FILEMSK='00'X;                 /* INIT FILE MASK TO 0  Y02008 07600000
         MVI   FILEMSK,X'00'                                      0219  07610000
*         SNSCNT='02'X;                  /* INIT SENSE COUNT=02  Y02008 07620000
         MVI   SNSCNT,X'02'                                       0220  07630000
*         CNTSNS='00'X;                 /* CLEAR TECB SNS CNT   Y02008* 07640000
         MVI   TECB+6,X'00'                                       0221  07650000
*         CNTINT='00'X;                 /* CLEAR TECB INT CNT   Y02008* 07660000
         MVI   TECB+7,X'00'                                       0222  07670000
*         SIOCC='00'X;                  /* ZERO I/O CC IN TECB  Y02008* 07680000
         MVI   TECB+8,X'00'                                       0223  07690000
*         OUTBUFR=OUTBUFR&&OUTBUFR;     /* ZERO CSW,SNS IN TECB Y02008* 07700000
         XC    TECB+13(1),TECB+13                                 0224  07710000
*         TECBPTRX=ADDR(TECB);           /* PTR TO TECB FOR EVENTY02008 07720000
         LA    @F,TECB                                            0225  07730000
         ST    @F,TECBPTRX                                        0225  07740000
*         IOCCWADR=CAWPTR;               /* ADDRESS OF CCWS,ENABLY02008 07750000
         MVC   IOCCWADR(4),CAWPTR                                 0226  07760000
*         DVTPTR=DEVPT1;                 /* ADDRESS OF DEVICE TABY02008 07770000
         ST    @3,DVTPTR                                          0227  07780000
*         FLGA=FLGA|'20'X;              /* INVOKE GDP IO FCTN   Y02008* 07790000
         OI    FLGA,X'20'                                         0228  07800000
*         FLGB=FLGB|'80'X;              /* INTERNAL CALL FLAG   Y02008* 07810000
         OI    FLGB,X'80'                                         0229  07820000
*                                                                       07830000
*         IF VIRTUAL='1'B                /* IS OLTEP IN VIRTUAL? Y02008 07840000
*          THEN                          /* YES, SET BIT TELLING Y02008 07850000
         TM    A00012,B'00000010'                                 0230  07860000
         BC    12,@9F1                                            0230  07870000
*         FLGB=FLGB|'20'X;              /* VIRTUAL CCWS         Y02008* 07880000
         OI    FLGB,X'20'                                         0231  07890000
*                                                                       07900000
*         R15=IORTNADR;                  /* ADDRESS IO EFFECTOR  Y02008 07910000
@9F1     L     @F,IORTNADR                                        0232  07920000
*         GEN(BALR R14,R15);             /* GO PERFORM ENABLE    Y02008 07930000
         BALR R14,R15                                                   07940000
         DS    0H                                                       07950000
*                                                                       07960000
*         TIME=0120;                     /*SET TIMER FOR 2 MIN   Y02008 07970000
         MVC   WAITLIST+13(2),@D1                                 0234  07980000
*         /*     CHECK CDS                                              07990000
*         IF OPERCALL='1'B THEN          /*OPERATOR CALL ?              08000000
         TM    LCRFLAG,B'01000000'                                0235  08010000
         BC    12,@9F0                                            0235  08020000
*           DO;                          /*YES                          08030000
*             TIME=0240;                 /*SET TIMER FOR 4 MIN   Y02008 08040000
         MVC   WAITLIST+13(2),@D2                                 0237  08050000
*             /* SAVE REG                                               08060000
*             RESTRICT(R1);                                             08070000
*             R1=IFDXX7;                 /*SET MSG PTR                  08080000
         L     @1,12(0,@9)                                        0239  08090000
*             /* CHECK CDS                                              08100000
*             IF TELNO='1'B THEN         /*DIAL DIGITS IN CDS           08110000
         TM    LCRFLAG,B'10000000'                                0240  08120000
         BC    12,@9EF                                            0240  08130000
*               R1=IFDXX8;               /*YES - SET MSG PTR            08140000
         L     @1,16(0,@9)                                        0241  08150000
*             GEN(BAL   R7,MSGRTN);      /*BRANCH TO OUTPUT MESSAGE     08160000
@9EF     EQU   *                                                  0242  08170000
         BAL   R7,MSGRTN                                                08180000
         DS    0H                                                       08190000
*             /* FREE REG                                               08200000
*             RELEASE(R1);                                              08210000
*           END;                                                        08220000
*                                                                       08230000
*         R1=ADDR(WAITLIST);             /* ADDRESS WAIT LIST    Y02008 08240000
@9F0     LA    @1,WAITLIST                                        0245  08250000
*         R14=ADDR(CHKENABL);            /* ADDR OF RETURN POINT Y02008 08260000
         LA    @E,CHKENABL                                        0246  08270000
*         R15=TAB28;                     /* ADDRESS TRANS MNGR   Y02008 08280000
         L     @F,TAB28                                           0247  08290000
*         GO TO R15;                     /* PERFORM WAIT I/O     Y02008 08300000
         BCR   15,@F                                              0248  08310000
*                                                                       08320000
* CHKENABL:                                                             08330000
*         WAITRC=R15;                    /* SAVE WAITIO RET CODE Y02008 08340000
CHKENABL ST    @F,WAITRC                                          0249  08350000
*         IF WAITRC='08'X                /* DID EVENT TIMEOUT?   Y02008 08360000
*          THEN                          /* YES, MUST PRINT MSG  Y02008 08370000
         LA    @F,X'08'                                           0250  08380000
         C     @F,WAITRC                                          0250  08390000
         BC    07,@9EE                                            0250  08400000
*           DO;                          /* AND RE ISSUE EVENT   Y02008 08410000
*           IF OPERCALL='1'B THEN        /* OPERATOR CALL ?      Y02008 08420000
         TM    LCRFLAG,B'01000000'                                0252  08430000
         BC    12,@9ED                                            0252  08440000
*             DO;                        /*YES -                        08450000
*               R1=IFDXXA;               /*SET MSG PTR                  08460000
         L     @1,24(0,@9)                                        0254  08470000
*               GEN(BAL   R7,MSGRTN);    /*BRANCH TO OUTPUT MESSAGE     08480000
         BAL   R7,MSGRTN                                                08490000
         DS    0H                                                       08500000
*             END;                                                      08510000
*             UNSUCCES='1'B;             /*SET ENABLE FAILED FLAG ON    08520000
@9ED     OI    LCRFLAG,B'00010000'                                0257  08530000
*             GEN(BR    R6);             /*BRANCH BACK                  08540000
         BR    R6                                                       08550000
         DS    0H                                                       08560000
*           END;                                                        08570000
*         GEN(EJECT);                                                   08580000
@9EE     EQU   *                                                  0260  08590000
         EJECT                                                          08600000
         DS    0H                                                       08610000
* /******************************************************************** 08620000
* /*  LINE CONNECTION CHANNEL PROGRAM ERROR RECOVERY AND OUTPUT         08630000
* /******************************************************************** 08640000
*                                                                       08650000
*         IF SIOCC='F3'X                 /* IF SIO RESULTED IN   Y02008 08660000
*          THEN                          /* CC==3 THEN DEV IS NOTY02008 08670000
         CLI   TECB+8,X'F3'                                       0261  08680000
         BC    07,@9EC                                            0261  08690000
*           DO;                          /* MUST PRINT MESSAGE   Y02008 08700000
*            R1=IFD408I;                 /* ADDRESS ERROR MESSAGEY02008 08710000
         L     @1,32(0,@9)                                        0263  08720000
*            ERRORLINE=DEVADDR1;         /* PUT LINE ADDR IN MSG Y02008 08730000
         MVC   12(8,@1),0(@3)                                     0264  08740000
*            GEN (BAL  R7,MSGRTN);       /* PRINT MESSAGE        Y02008 08750000
         BAL  R7,MSGRTN                                                 08760000
         DS    0H                                                       08770000
*            UNSUCCES='1'B;              /* UNSUCCESSFUL ENABLE  Y02008 08780000
         OI    LCRFLAG,B'00010000'                                0266  08790000
*            GEN( BR R6);                /* RETURN TO MAINLINE   Y02008 08800000
          BR R6                                                         08810000
         DS    0H                                                       08820000
*           END;                         /* END MSG OUTPUT       Y02008 08830000
*                                                                       08840000
*         IF UNITCHCK='1'B |             /* IF UNIT CHECK OCCURD Y02008 08850000
*            TECBFLGB>'00'X &            /* OR STATUS SHOWS OTHR Y02008 08860000
*            TECBFLGB<'80'X              /* EXCEPTIONAL CONDITIONY02008 08870000
*          THEN                          /* MUST OUTPUT CSW AND  Y02008 08880000
@9EC     TM    TECB+16,B'00000010'                                0269  08890000
         BC    01,@9EB                                            0269  08900000
         CLI   TECB+17,X'00'                                      0269  08910000
         BC    12,@9EA                                            0269  08920000
         CLI   TECB+17,X'80'                                      0269  08930000
         BC    10,@9E9                                            0269  08940000
*           DO;                          /* POSSIBLE SENSE INFO. Y02008 08950000
*             HEX=HEX&&HEX;              /*CLEAR HEX SAVE AREA          08960000
@9EB     XC    HEX(17),HEX                                        0271  08970000
*             HEXCSW=CSW1;               /* SAVE CSW                    08980000
         MVC   HEX(7),TECB+13                                     0272  08990000
*             /* CHECK CSW                                              09000000
*             IF UNITCHCK='1'B THEN      /*UNIT CHECJ FLAG ON           09010000
         TM    TECB+16,B'00000010'                                0273  09020000
         BC    12,@9E8                                            0273  09030000
*               DO;                      /*YES -                        09040000
*                 HEXSENSE=TSNS1;        /*SAVE IOB SENSE BYTES  Y02008 09050000
         MVC   HEX+15(2),TECB+23                                  0275  09060000
*                 /* CHECK CDS                                          09070000
*                 IF OPERCALL='0'B & RETRY='0'B                         09080000
*                   THEN                 /* YES                         09090000
         TM    LCRFLAG,B'01000000'                                0276  09100000
         BC    05,@9E7                                            0276  09110000
         TM    LCRFLAG,B'00100000'                                0276  09120000
         BC    05,@9E6                                            0276  09130000
*                                                                       09140000
*                    DO;                 /*                             09150000
*                     RETRY='1'B;        /*SET RETRY FLAG ON            09160000
         OI    LCRFLAG,B'00100000'                                0278  09170000
*                     GOTO IOSBRTN;      /*BRANCH BACK TO RETRY  Y02008 09180000
         BC    15,IOSBRTN                                         0279  09190000
*                    END;                                               09200000
*                                                                       09210000
*               END;                     /* END UNIT CHECK DO-ENDY02008 09220000
@9E6     EQU   *                                                  0281  09230000
@9E7     EQU   *                                                  0281  09240000
*                                                                       09250000
*             CCWADR=CCWPLUS8;           /*PTR TO COMMAND ADDR INY02008 09260000
@9E8     MVC   @TEMP3+1(3),TECB+13                                0282  09270000
         L     @4,@TEMP3                                          0282  09280000
*             /* DECREMENT CCW PTR                                      09290000
*             CCWADR=CCWADR-8;           /*POINT TO FAILING CCW         09300000
         SH    @4,@D3                                             0283  09310000
*             HEXCCW=FAIL;               /*SAVE FAILED CCW              09320000
         MVC   HEX+7(8),0(@4)                                     0284  09330000
*             RESTRICT(R1);                                             09340000
*             R1=ADDR(CONVERT);          /*SET PTR TO CONVERT LIST      09350000
         LA    @1,CONVERT                                         0286  09360000
*             R15=TAB28;                 /*SET PTR TO CONVERT MODULE    09370000
         L     @F,TAB28                                           0287  09380000
*             GEN(BALR  R14,R15);        /*BRANCH TO CONVERT MODULE     09390000
         BALR  R14,R15                                                  09400000
         DS    0H                                                       09410000
*             R1=IFDXX9;                 /*SET MSG PTR                  09420000
         L     @1,20(0,@9)                                        0289  09430000
*             CCWFAIL=DECCCW;            /*MOVE FAILED CCW INTO MSG     09440000
         MVC   36(16,@1),DEC+14                                   0290  09450000
*             GEN(BAL   R7,MSGRTN);      /*BRANCH TO OUTPUT MESSAGE     09460000
         BAL   R7,MSGRTN                                                09470000
         DS    0H                                                       09480000
*             /* PTR TO ERROR MSG                                       09490000
*             R1=IFDXXB;                                                09500000
         L     @1,28(0,@9)                                        0292  09510000
*             STATUS=DECCSW;             /*MOVE STATUS INTO ERROR MSG   09520000
         MVC   18(14,@1),DEC                                      0293  09530000
*             /* CHECK CSW                                              09540000
*             IF UNITCHCK='1'B THEN      /*UNIT CHECK ?                 09550000
         TM    TECB+16,B'00000010'                                0294  09560000
         BC    12,@9E5                                            0294  09570000
*               SENSE=DECSENSE;          /*YES - MOVE SENSE BYTES INTO  09580000
         MVC   37(4,@1),DEC+30                                    0295  09590000
*             /* BRANCH TO MESSAGE ROUTINE                              09600000
*             GEN( BAL   R7,MSGRTN);                                    09610000
@9E5     EQU   *                                                  0296  09620000
          BAL   R7,MSGRTN                                               09630000
         DS    0H                                                       09640000
*             /* FREE REG                                               09650000
*             RELEASE(R1);                                              09660000
*           END;                                                        09670000
*                                                                       09680000
*         /* IHIS POINT REACHED IF LINE ENABLED OK               Y02008 09690000
*                                                                       09700000
*         IF TECBFLGA='0C'X &            /* IF CHAN/DEV END ARE  Y02008 09710000
*            TECBFLGB='00'X              /* ONLY STATUS INDICATRSY02008 09720000
*          THEN                          /* LINE IS ENABLED      Y02008 09730000
@9E9     EQU   *                                                  0299  09740000
@9EA     CLI   TECB+16,X'0C'                                      0299  09750000
         BC    07,@9E4                                            0299  09760000
         CLI   TECB+17,X'00'                                      0299  09770000
         BC    07,@9E3                                            0299  09780000
*           GEN(BR R6);                  /* RETURN TO MAINLINE   Y02008 09790000
         BR R6                                                          09800000
         DS    0H                                                       09810000
*                                                                       09820000
*         UNSUCCES='1'B;                /* UNSUCCESSFUL ENABLE  Y02008* 09830000
@9E3     EQU   *                                                  0301  09840000
@9E4     OI    LCRFLAG,B'00010000'                                0301  09850000
*         GEN( BR R6);                  /* BRANCH BACK TO MAINLINE    * 09860000
          BR R6                                                         09870000
         DS    0H                                                       09880000
*         END IFDOLT73;                                                 09890000
@EL01    L     @D,4(0,@D)                                         0303  09900000
         L     @E,12(0,@D)                                        0303  09910000
         LM    @0,@C,20(@D)                                       0303  09920000
         BCR   15,@E                                              0303  09930000
@DATA1   EQU   *                                                        09940000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           09950000
@1       EQU   01                                                       09960000
@2       EQU   02                                                       09970000
@3       EQU   03                                                       09980000
@4       EQU   04                                                       09990000
@5       EQU   05                                                       10000000
@6       EQU   06                                                       10010000
@7       EQU   07                                                       10020000
@8       EQU   08                                                       10030000
@9       EQU   09                                                       10040000
@A       EQU   10                                                       10050000
@B       EQU   11                                                       10060000
@C       EQU   12                                                       10070000
@D       EQU   13                                                       10080000
@E       EQU   14                                                       10090000
@F       EQU   15                                                       10100000
@D1      DC    H'120'                                                   10110000
@D2      DC    H'240'                                                   10120000
@D3      DC    H'8'                                                     10130000
@MVC     MVC   0(1,@A),0(@E)                                            10140000
@OC      OC    0(1,@A),0(@E)                                            10150000
@V1      DC    V(IFDMSG73)                                              10160000
         DS    0F                                                       10170000
         DS    0D                                                       10180000
@DATA    EQU   *                                                        10190000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   10200000
R0       EQU   00000000            FULLWORD INTEGER REGISTER            10210000
R1       EQU   00000001            FULLWORD POINTER REGISTER            10220000
R2       EQU   00000002            FULLWORD POINTER REGISTER            10230000
R6       EQU   00000006            FULLWORD INTEGER REGISTER            10240000
R7       EQU   00000007            FULLWORD INTEGER REGISTER            10250000
R9       EQU   00000009            FULLWORD POINTER REGISTER            10260000
R14      EQU   00000014            FULLWORD POINTER REGISTER            10270000
R15      EQU   00000015            FULLWORD POINTER REGISTER            10280000
DEVPT1   EQU   00000003            3  BYTE  POINTER REGISTER            10290000
DEVPT2   EQU   00000004            3  BYTE  POINTER REGISTER            10300000
CCWADR   EQU   00000004            3  BYTE  POINTER REGISTER            10310000
CDSPTR   EQU   00000005            FULLWORD POINTER REGISTER            10320000
VARFLDPT EQU   00000007            3  BYTE  POINTER REGISTER            10330000
IOSBPTR  EQU   00000008            FULLWORD POINTER REGISTER            10340000
LCRFLAG  EQU   @DATA+00000072      1 BYTE(S)                            10350000
TELNO    EQU   LCRFLAG+00000000    1 BIT(S)                             10360000
OPERCALL EQU   LCRFLAG+00000000    1 BIT(S)                             10370000
RETRY    EQU   LCRFLAG+00000000    1 BIT(S)                             10380000
UNSUCCES EQU   LCRFLAG+00000000    1 BIT(S)                             10390000
HDRMSG   EQU   LCRFLAG+00000000    1 BIT(S)                             10400000
R1SAVE   EQU   @DATA+00000076      FULLWORD INTEGER                     10410000
CAWPTR   EQU   @DATA+00000080      FULLWORD POINTER                     10420000
FAIL     EQU   00000000            8 BYTE(S)                            10430000
DEC      EQU   @DATA+00000084      40 BYTE(S) ON WORD                   10440000
DECCSW   EQU   DEC+00000000        14 BYTE(S)                           10450000
DECCCW   EQU   DEC+00000014        16 BYTE(S)                           10460000
DECSENSE EQU   DEC+00000030        4 BYTE(S)                            10470000
HEX      EQU   @DATA+00000124      17 BYTE(S) ON WORD                   10480000
HEXCSW   EQU   HEX+00000000        7 BYTE(S)                            10490000
A00000   EQU   HEX+00000000        3 BYTE(S)                            10500000
A00001   EQU   HEX+00000003        6 BIT(S)                             10510000
SAVUNITC EQU   HEX+00000003        1 BIT(S)                             10520000
A00002   EQU   HEX+00000003        1 BIT(S)                             10530000
A00003   EQU   HEX+00000004        1 BYTE(S)                            10540000
HEXCCW   EQU   HEX+00000007        8 BYTE(S)                            10550000
HEXSENSE EQU   HEX+00000015        2 BYTE(S)                            10560000
CONVERT  EQU   @DATA+00000144      14 BYTE(S) ON WORD                   10570000
         ORG   CONVERT+00000000                                         10580000
A00004   EQU   *                   2 BYTE(S)                            10590000
         DC    X'0002'                                                  10600000
A00005   EQU   *                   2 BYTE(S)                            10610000
         DC    C'41'                                                    10620000
A00006   EQU   *                   FULLWORD POINTER                     10630000
         DC    AL4(HEX)                                                 10640000
A00007   EQU   *                   FULLWORD POINTER                     10650000
         DC    AL4(DEC)                                                 10660000
A00008   EQU   *                   2 BYTE(S)                            10670000
         DC    X'8011'                                                  10680000
ONES     EQU   @DATA+00000158      80 BYTE(S)                           10690000
A00009   EQU   *                   80*1 BYTE(S)                         10700000
         DC    00080X'FF'                                               10710000
X20F0    EQU   @DATA+00000238      20 BYTE(S)                           10720000
A00010   EQU   *                   20*1 BYTE(S)                         10730000
         DC    00020X'F0'                                               10740000
CODE     EQU   @DATA+00000258      7 BYTE(S)                            10750000
A00011   EQU   CODE+00000000       1 BYTE(S)                            10760000
         ORG   CODE+00000001                                            10770000
SETMODE  EQU   *                   2*1 BYTE(S)                          10780000
         DC    00002X'23'                                               10790000
SADXX    EQU   *                   4*1 BYTE(S)                          10800000
         DC    X'13'                                                    10810000
         DC    X'17'                                                    10820000
         DC    X'1B'                                                    10830000
         DC    X'1F'                                                    10840000
MSGPTR   EQU   00000000            36 BYTE(S) ON WORD                   10850000
IFDXX1   EQU   MSGPTR+00000000     FULLWORD POINTER                     10860000
IFDXX2   EQU   MSGPTR+00000004     FULLWORD POINTER                     10870000
IFDXX3   EQU   MSGPTR+00000008     FULLWORD POINTER                     10880000
IFDXX7   EQU   MSGPTR+00000012     FULLWORD POINTER                     10890000
IFDXX8   EQU   MSGPTR+00000016     FULLWORD POINTER                     10900000
IFDXX9   EQU   MSGPTR+00000020     FULLWORD POINTER                     10910000
IFDXXA   EQU   MSGPTR+00000024     FULLWORD POINTER                     10920000
IFDXXB   EQU   MSGPTR+00000028     FULLWORD POINTER                     10930000
IFD408I  EQU   MSGPTR+00000032     FULLWORD POINTER                     10940000
MSG2     EQU   00000000            64 BYTE(S) ON WORD                   10950000
A00014   EQU   MSG2+00000000       12 BYTE(S)                           10960000
A00015   EQU   MSG2+00000012       25 BYTE(S)                           10970000
LINE     EQU   MSG2+00000037       8 BYTE(S)                            10980000
A00016   EQU   MSG2+00000045       11 BYTE(S)                           10990000
NAME     EQU   MSG2+00000056       8 BYTE(S)                            11000000
MSG8     EQU   00000000            65 BYTE(S) ON WORD                   11010000
A00017   EQU   MSG8+00000000       4 BYTE(S)                            11020000
A00018   EQU   MSG8+00000004       41 BYTE(S)                           11030000
DDGT     EQU   MSG8+00000045       20 BYTE(S)                           11040000
MSG9     EQU   00000000            52 BYTE(S) ON WORD                   11050000
A00019   EQU   MSG9+00000000       4 BYTE(S)                            11060000
A00020   EQU   MSG9+00000004       32 BYTE(S)                           11070000
CCWFAIL  EQU   MSG9+00000036       16 BYTE(S)                           11080000
MSG11    EQU   00000000            41 BYTE(S) ON WORD                   11090000
A00021   EQU   MSG11+00000000      4 BYTE(S)                            11100000
A00022   EQU   MSG11+00000004      14 BYTE(S)                           11110000
STATUS   EQU   MSG11+00000018      14 BYTE(S)                           11120000
A00023   EQU   MSG11+00000032      5 BYTE(S)                            11130000
SENSE    EQU   MSG11+00000037      4 BYTE(S)                            11140000
MSG408   EQU   00000000            70 BYTE(S) ON WORD                   11150000
A00024   EQU   MSG408+00000000     12 BYTE(S)                           11160000
ERRORLIN EQU   MSG408+00000012     8 BYTE(S)                            11170000
A00025   EQU   MSG408+00000020     50 BYTE(S)                           11180000
WAITLIST EQU   @DATA+00000268      1 BYTE(S) ON WORD                    11190000
         ORG   WAITLIST+00000000                                        11200000
XMGR     EQU   *                   1 BYTE(S)                            11210000
         DC    X'00'                                                    11220000
LVL      EQU   *                   1 BYTE(S)                            11230000
         DC    X'02'                                                    11240000
MODID    EQU   *                   2 BYTE(S)                            11250000
         DC    C'36'                                                    11260000
TECBPTR  EQU   *                   FULLWORD POINTER                     11270000
         DC    AL4(TECB)                                                11280000
CDSDATA  EQU   *                   FULLWORD POINTER                     11290000
         DC    XL4'00'                                                  11300000
FLG      EQU   *                   1 BYTE(S)                            11310000
         DC    X'80'                                                    11320000
WAITYES  EQU   WAITLIST+00000012   1 BIT(S)                             11330000
TIME     EQU   WAITLIST+00000013   2 BYTE(S)                            11340000
WAITRC   EQU   @DATA+00000284      FULLWORD INTEGER                     11350000
TECB     EQU   @DATA+00000288      1 BYTE(S)                            11360000
         ORG   TECB+00000000                                            11370000
FLDCNT   EQU   *                   1 BYTE(S)                            11380000
         DC    X'01'                                                    11390000
FLDSIZE  EQU   *                   1 BYTE(S)                            11400000
         DC    X'0C'                                                    11410000
A00026   EQU   *                   1 BYTE(S)                            11420000
         DC    X'00'                                                    11430000
SNSIZE   EQU   *                   1 BYTE(S)                            11440000
         DC    X'05'                                                    11450000
FLG1     EQU   *                   1 BYTE(S)                            11460000
         DC    X'00'                                                    11470000
SNSFIELD EQU   *                   1 BYTE(S)                            11480000
         DC    X'01'                                                    11490000
CNTSNS   EQU   *                   1 BYTE(S)                            11500000
         DC    X'00'                                                    11510000
CNTINT   EQU   *                   1 BYTE(S)                            11520000
         DC    X'00'                                                    11530000
SIOCC    EQU   *                   1 BYTE(S)                            11540000
         DC    X'00'                                                    11550000
A00027   EQU   *                   1 BYTE(S)                            11560000
         DC    X'00'                                                    11570000
DEVAD    EQU   *                   2 BYTE(S)                            11580000
         DC    X'0000'                                                  11590000
A00028   EQU   *                   1 BYTE(S)                            11600000
         DC    X'00'                                                    11610000
OUTBUFR  EQU   *                   12*1 BYTE(S)                         11620000
         DC    00012X'00'                                               11630000
CSW1     EQU   TECB+00000013       7 BYTE(S)                            11640000
CCWPLUS8 EQU   TECB+00000013       3 BYTE(S)                            11650000
TECBFLGA EQU   TECB+00000016       1 BYTE(S)                            11660000
A00029   EQU   TECB+00000016       4 BIT(S)                             11670000
CHANEND  EQU   TECB+00000016       1 BIT(S)                             11680000
DEVICEND EQU   TECB+00000016       1 BIT(S)                             11690000
UNITCHCK EQU   TECB+00000016       1 BIT(S)                             11700000
TECBFLGB EQU   TECB+00000017       1 BYTE(S)                            11710000
A00030   EQU   TECB+00000020       3 BYTE(S)                            11720000
TSNS1    EQU   TECB+00000023       2 BYTE(S)                            11730000
A00031   EQU   00000000            56 BYTE(S) ON WORD                   11740000
DEVADDR1 EQU   A00031+00000000     8 BYTE(S)                            11750000
UCBADDR1 EQU   A00031+00000008     FULLWORD POINTER                     11760000
A00032   EQU   A00031+00000012     1 BYTE(S)                            11770000
A00033   EQU   A00031+00000012     1 BIT(S)                             11780000
PRIMARY  EQU   A00031+00000012     1 BIT(S)                             11790000
A00034   EQU   A00031+00000012     6 BIT(S)                             11800000
A00035   EQU   A00031+00000013     2 BYTE(S)                            11810000
A00036   EQU   A00031+00000015     1 BYTE(S)                            11820000
LNDSBL1  EQU   A00031+00000015     1 BIT(S)                             11830000
LNENBL1  EQU   A00031+00000015     1 BIT(S)                             11840000
A00037   EQU   A00031+00000015     6 BIT(S)                             11850000
A00038   EQU   A00031+00000016     25 BYTE(S)                           11860000
A00039   EQU   A00031+00000041     1 BYTE(S)                            11870000
A00040   EQU   A00031+00000041     4 BIT(S)                             11880000
NMPRSNT1 EQU   A00031+00000041     1 BIT(S)                             11890000
A00041   EQU   A00031+00000041     3 BIT(S)                             11900000
A00042   EQU   A00031+00000042     2 BYTE(S)                            11910000
SYMBNM1  EQU   A00031+00000044     8 BYTE(S)                            11920000
A00043   EQU   A00031+00000052     4 BYTE(S)                            11930000
A00044   EQU   00000000            176 BYTE(S) ON WORD                  11940000
DEVADDR2 EQU   A00044+00000000     8 BYTE(S)                            11950000
A00045   EQU   A00044+00000008     7 BYTE(S)                            11960000
A00046   EQU   A00044+00000015     1 BYTE(S)                            11970000
LNDSBL2  EQU   A00044+00000015     1 BIT(S)                             11980000
LNENBL2  EQU   A00044+00000015     1 BIT(S)                             11990000
A00047   EQU   A00044+00000015     6 BIT(S)                             12000000
CHAR     EQU   A00044+00000016     40*4  BYTE  INTEGER                  12010000
A00048   EQU   00000000            47 BYTE(S) ON WORD                   12020000
A00049   EQU   A00048+00000000     9 BYTE(S)                            12030000
A00050   EQU   A00048+00000009     1 BYTE(S)                            12040000
A00051   EQU   A00048+00000009     4 BIT(S)                             12050000
SYMNMFLG EQU   A00048+00000009     1 BIT(S)                             12060000
A00052   EQU   A00048+00000009     2 BIT(S)                             12070000
LCRFLG   EQU   A00048+00000009     1 BIT(S)                             12080000
A00053   EQU   A00048+00000010     11 BYTE(S)                           12090000
A00054   EQU   A00048+00000021     1 BYTE(S)                            12100000
SMPRSNT  EQU   A00048+00000021     1 BIT(S)                             12110000
AUTOCALL EQU   A00048+00000021     1 BIT(S)                             12120000
SWITCHLN EQU   A00048+00000021     1 BIT(S)                             12130000
NSWTCHLN EQU   A00048+00000021     1 BIT(S)                             12140000
WORLDTRD EQU   A00048+00000021     1 BIT(S)                             12150000
A00055   EQU   A00048+00000021     3 BIT(S)                             12160000
A00056   EQU   A00048+00000022     1 BYTE(S)                            12170000
CMDSEQ   EQU   A00048+00000023     1 BYTE(S)                            12180000
VARIABLE EQU   A00048+00000024     23 BYTE(S)                           12190000
A00057   EQU   00000000            21 BYTE(S) ON WORD                   12200000
DIALCNT  EQU   A00057+00000000     1 BYTE(S)                            12210000
DIALDGT  EQU   A00057+00000001     20 BYTE(S)                           12220000
A00058   EQU   00000000            8 BYTE(S) ON WORD                    12230000
A00059   EQU   A00058+00000000     4 BYTE(S)                            12240000
EXIOPTR  EQU   A00058+00000004     FULLWORD POINTER                     12250000
A00060   EQU   00000000            8 BYTE(S) ON WORD                    12260000
DEVICE   EQU   A00060+00000000     FULLWORD POINTER                     12270000
CDSADR   EQU   A00060+00000004     FULLWORD POINTER                     12280000
CCWAREA  EQU   @DATA+00000328      64 BYTE(S) ON DWORD                  12290000
         ORG   CCWAREA+00000000                                         12300000
DISABLE  EQU   *                   8 BYTE(S)                            12310000
         DC    X'2F00000020000001'                                      12320000
TWOCCW   EQU   CCWAREA+00000008    16 BYTE(S)                           12330000
WRITECCW EQU   CCWAREA+00000024    6*8 BYTE(S)                          12340000
         ORG   CCWAREA+00000024                                         12350000
A00061   EQU   *                   1 BYTE(S)                            12360000
&T       SETA  00006                                                    12370000
.L099995 ANOP                                                           12380000
         DC    X'01'                                                    12390000
         DS    00007C                                                   12400000
&T       SETA  &T-1                                                     12410000
         AIF   (&T NE 0).L099995                                        12420000
         ORG   CCWAREA+00000025                                         12430000
A00062   EQU   *                   3  BYTE  POINTER                     12440000
&T       SETA  00006                                                    12450000
.L099994 ANOP                                                           12460000
         DC    AL3(ONES)                                                12470000
         DS    00005C                                                   12480000
&T       SETA  &T-1                                                     12490000
         AIF   (&T NE 0).L099994                                        12500000
         ORG   CCWAREA+00000028                                         12510000
A00063   EQU   *                   4 BYTE(S)                            12520000
&T       SETA  00006                                                    12530000
.L099993 ANOP                                                           12540000
         DC    X'E0000050'                                              12550000
         DS    00004C                                                   12560000
&T       SETA  &T-1                                                     12570000
         AIF   (&T NE 0).L099993                                        12580000
A00064   EQU   CCWAREA+00000072    8 BYTE(S)                            12590000
         ORG   CCWAREA+00000072                                         12600000
A00065   EQU   *                   1 BYTE(S)                            12610000
         DC    X'01'                                                    12620000
A00066   EQU   *                   3  BYTE  POINTER                     12630000
         DC    AL3(ONES)                                                12640000
A00067   EQU   *                   4 BYTE(S)                            12650000
         DC    X'20000050'                                              12660000
CCW      EQU   00000000            8 BYTE(S)                            12670000
A00068   EQU   CCW+00000000        1 BYTE(S)                            12680000
DATAADDR EQU   CCW+00000001        3  BYTE  POINTER                     12690000
A00069   EQU   CCW+00000004        4 BYTE(S)                            12700000
         ORG   @DATA                                                    12710000
         DS    00000412C                                                12720000
@TEMPS   DS    0F                                                       12730000
@TEMP3   DC    F'0'                                                     12740000
@TEMP4   DC    F'0'                                                     12750000
LCRO     IFDCOM                                                         12760000
A00012   EQU   CESWT7+00000000     1 BYTE(S) ON WORD                    12770000
A00013   EQU   A00012+00000000     6 BIT(S)                             12780000
VIRTUAL  EQU   A00012+00000000     1 BIT(S)                             12790000
IOCCWADR EQU   EFCTRCB+00000000    FULLWORD POINTER                     12800000
A00070   EQU   CESWTR+00000000     1 BYTE(S) ON WORD                    12810000
RETAINAC EQU   A00070+00000000     1 BIT(S)                             12820000
A00071   EQU   CESWTR2+00000000    1 BYTE(S) ON WORD                    12830000
A00072   EQU   A00071+00000000     7 BIT(S)                             12840000
DPMSGREI EQU   A00071+00000000     1 BIT(S)                             12850000
@DATEND  EQU   *                                                        12860000
@9F4     EQU   @9F3                                                     12870000
         END   IFDOLT73                                                 12880000
./  ADD  SSI=62650103,NAME=IFDOLT74
         TITLE 'IFDOLT74 LINE DISABLING MODULE'                         00010000
         LCLA  &T,&SPN                                            0001  00020000
.@001    ANOP                                                     0001  00030000
IFDOLT74 CSECT ,                                                  0001  00040000
         BC    15,24(0,@F)                                              00050000
         DC    C'IFDOLT74 21 SEP 76'                             0001  00060000
         STM   @E,@C,12(@D)                                       0001  00070000
         BALR  @B,0                                               0001  00080000
@PSTART  DS    0H                                                 0001  00090000
         USING @PSTART+00000,@B                                   0001  00100000
         ST    @D,@SAV001+4                                       0001  00110000
         LA    @F,@SAV001                                         0001  00120000
         ST    @F,8(0,@D)                                         0001  00130000
         LR    @D,@F                                              0001  00140000
         TITLE 'OS OLTEP LINE DISABLING MODULE IFDOLT74'                00150000
         DS    0H                                                       00160000
*         GEN(EJECT);                                                   00170000
         EJECT                                                          00180000
         DS    0H                                                       00190000
*         /************************************************************ 00200000
*         /* MACRO TO RESOLVE ABSOLUTE VALUES                           00210000
*         /************************************************************ 00220000
*         /************************************************************ 00230000
*         GEN(EJECT);                                                   00240000
         EJECT                                                          00250000
         DS    0H                                                       00260000
* /******************************************************************** 00270000
* /*                 IFDOLT74 REGISTER DEFINITIONS BELOW                00280000
* /******************************************************************** 00290000
*         /************************************************************ 00300000
*         DCL   R0 REG(0);               /*REG FOR PTR TO SVC PARAMETER 00310000
*         DCL   R1 REG(1) PTR;           /*REG PTR TO PARAMETER LIST    00320000
*         DCL   R2 REG(2) PTR;           /*REG PTR TO OLTEP COMMON AREA 00330000
*         DCL DEVPT2 PTR(24) REG(4);     /* PTR TO FOUND DEVTAB ENTRY   00340000
*         DCL R5 REG(5) PTR;             /* MSG MOD PTR REG      Y02008 00350000
*         DCL   IOSBPTR PTR(31) REG(8);  /*PTR TO IOB                   00360000
*         DCL R14 REG(14) PTR;           /* LINK REGISTER        Y02008 00370000
*         DCL R15 REG(15) PTR;           /* BRANCH REGISTER      Y02008 00380000
*         GEN(EJECT);                                                   00390000
         EJECT                                                          00400000
         DS    0H                                                       00410000
* /******************************************************************** 00420000
* /*  DEFINITION OF INTERNAL WORK AREAS                                 00430000
* /******************************************************************** 00440000
*         /************************************************************ 00450000
*         DCL DISABLE CHAR(8) BDY(DWORD) INIT('2F00000020000001'X);     00460000
*         DCL MYID CHAR(2) INIT('74');   /* LINE DISABLING MODULE ID    00470000
*         /* PATCH AREA                                                 00480000
* /******************************************************************** 00490000
* /*                           COMMON CORE MAP                          00500000
* /******************************************************************** 00510000
*         /************************************************************ 00520000
*         GENERATE(USING CHASCT,2);                                     00530000
         USING CHASCT,2                                                 00540000
         DS    0H                                                       00550000
*         /* COMMON AREA                                                00560000
*         GENERATE DATA;                                                00570000
*         DCL   UNICTR CHAR(1) GEND;     /*NUMBER OF ENTRIES IN DEVTAB  00580000
*         DCL IORTNADR PTR GEND;        /* I/O ROUTINE IN DOLT35Y02008* 00590000
*         DCL TAB28 PTR GEND;            /* ADDRESS TRANS MNGR   Y02008 00600000
*                                                                       00610000
*         DCL CESWT7 CHAR(1) GEND;       /* DIAGNOSTIC SWITCH    Y02008 00620000
*                                                                       00630000
*         DCL 1 * BASED(ADDR(CESWT7)),   /* FORMAT OF SWITCH     Y02008 00640000
*           3 * BIT(6),                  /* N A                  Y02008 00650000
*           3 VIRTUAL BIT(1);            /* OLTEP IN VIRTUAL COREY02008 00660000
*                                                                       00670000
*         DCL   DEVTBPTR PTR(31) GEND;   /*PTR TO DEVTAB                00680000
*         /* DEVTAB LENGTH                                              00690000
*         DCL   TABLNGTH FIXED(15) BDY(WORD) GEND;                      00700000
*         /* SVC59  WORK AREA                                           00710000
*         DCL   WKSVC CHAR(16) BDY(WORD) GEND;                          00720000
*         /* WORK AREA BREAK DOWN                                       00730000
*         DCL   1 * CHAR(16) BASED(ADDR(WKSVC)),                        00740000
*                3 * CHAR(2),                                           00750000
*                /* MODULE ID                                           00760000
*                3 SVCID CHAR(2),                                       00770000
*                /* PTR TO DEB                                          00780000
*                3 SVCPRM1 PTR(31) BDY(WORD),                           00790000
*                /* PTR TO SUBPOOL                                      00800000
*                3 SVCPRM2 PTR(31) BDY(WORD),                           00810000
*                /* NOT USED                                            00820000
*                3 SVCPRM3 PTR(31) BDY(WORD);                           00830000
*         /************************************************************ 00840000
*         GEN(EJECT);                                                   00850000
         EJECT                                                          00860000
         DS    0H                                                       00870000
* /******************************************************************** 00880000
* /*  THE FOLLOWING MAPS DEFINE DEVTAB ENTRIES                          00890000
*         /************************************************************ 00900000
*         DCL   1 * BASED(DEVPT2),                                      00910000
*                3 DEVADDR2 CHAR(8),     /*LINE ADDR                    00920000
*                3 UCBADDR2 PTR(31),     /*UCB ADDR                     00930000
*               3 * CHAR(1),    /* FIRST FLAG BYTE            @ZA12057* 00940000
*                 5 * BIT(1),   /* UNUSED                     @ZA12057* 00950000
*                 5 PRIMARY BIT(1),  /* PRIMARY DEVICE        @ZA12057* 00960000
*               3 * CHAR(2),     /* UNUSED                    @ZA12057* 00970000
*                3 * CHAR(1),            /*LINE STATUS FLAGS            00980000
*                 5 LNDSBL2 BIT(1),      /*LINE DISABLED BY OLTEP FLAG  00990000
*                 5 LNENBL2 BIT(1),      /*LINE ENABLED FLAG            01000000
*                 5 * BIT(6),            /*NOT USED                     01010000
*                3 * CHAR(40);           /*NOT USED                     01020000
*                                                                       01030000
*         DCL 1 FLAGSBYT CHAR(1) INIT('00'X), /* FLAGS FOR 74    Y02008 01040000
*           3 RETRY BIT(1);                   /* RETRY DISABLE   Y02008 01050000
*                                                                       01060000
*         DCL WAITRC FIXED;              /* SAVE WAIT RETURN CODEY02008 01070000
*                                                                       01080000
*         GEN(EJECT);                                                   01090000
         EJECT                                                          01100000
         DS    0H                                                       01110000
* /******************************************************************** 01120000
* /*  THE FOLLOWING MAP DEFINES THE OLTEP IOSB-TECB-WAITLIST     Y02008 01130000
* /******************************************************************** 01140000
*                                                                       01150000
*                                                                       01160000
*         DCL EFCTRCB CHAR(20) GEND;    /* I O EFFECTOR PLIST   Y02008* 01170000
*                                                                       01180000
*         /* PTR TO CCWS FOR ENBL Y02008*/                              01190000
*         DCL IOCCWPTR PTR BASED(ADDR(EFCTRCB));                        01200000
*                                                                       01210000
*         DCL DVTPTR PTR GEND;           /* PTR TO DEV TABLE     Y02008 01220000
*         DCL FLGA CHAR(1) GEND;         /* FLAG BYTE            Y02008 01230000
*         DCL GDP CHAR(1) GEND;          /* GUARANTEE DEV PATH   Y02008 01240000
*         DCL FLGB CHAR(1) GEND;         /* FLAG BYTE            Y02008 01250000
*         DCL INTERNAL CHAR(1) GEND;     /* INTERNAL IOSB CALL   Y02008 01260000
*         DCL ATTNIN CHAR(1) GEND;       /* ATTENTION INTERUPT   Y02008 01270000
*         DCL VIRTCCWS CHAR(1) GEND;     /* CCW STRING IN VIRTUALY02008 01280000
*         DCL FILEMSK CHAR(1) GEND;      /* DEV FILE MASK        Y02008 01290000
*         DCL OLDTECBX CHAR(1) GEND;     /* USE OLD TECB FORMAT  Y02008 01300000
*         DCL SNSCNT CHAR(1) GEND;          /* SNS BYTES EXPCTED Y02008 01310000
*         DCL TECBPTRX PTR GEND;         /* ACTV TECB FOR I/O    Y02008 01320000
*                                                                       01330000
*         /************************************************************ 01340000
*         /* THE FOLLOWING MAPS THE WAIT I/O LIST                Y02008 01350000
*         /************************************************************ 01360000
*                                                                       01370000
*         DCL 1 WAITLIST CHAR BDY(WORD), /* WAIT LIST FOR WAITIO Y02008 01380000
*           3 XMGR CHAR(1) INIT('00'X),  /* OLTEP TRANSMNGR FLGS Y02008 01390000
*           3 LVL CHAR(1) INIT('02'X),   /* LEVEL 02 OF MACRO    Y02008 01400000
*           3 MODID CHAR(2) INIT('36'),  /* ID OF WAIT I/O MOD   Y02008 01410000
*           3 TECBPTR PTR INIT(ADDR(TECB)),  /* ADDR OF OLT TECB Y02008 01420000
*           3 CDSPTR PTR INIT('00'X),    /* ADDR OF CDS TO USE   Y02008 01430000
*           3 FLG CHAR(1) INIT('80'X),   /* FLAG BYTE            Y02008 01440000
*             5 WAITYES BIT(1),          /* WAIT REQ FOR EVENT   Y02008 01450000
*           3 TIME CHAR(2) INIT('001E'X);                 /*  @ZA04260* 01460000
*                                                                       01470000
*         /************************************************************ 01480000
*         /* THE FOLLOWING MAPS THE NEW TECB FORMAT USED IN IO   Y02008 01490000
*         /************************************************************ 01500000
*                                                                       01510000
*         DCL 1 TECB CHAR,               /* NEW TECB FORMAT      Y02008 01520000
*           3 FLDCNT CHAR(1)  INIT('01'X),  /* EVENT FIELDS USED Y02008 01530000
*           3 FLDSIZE CHAR(1) INIT('0C'X),  /* SIZE OF EVENT FLD Y02008 01540000
*           3 * CHAR(1) INIT('00'X),    /* NOT APPLICABLE       Y02008* 01550000
*           3 SNSIZE CHAR(1) INIT('05'X),/* NUM OF SENS BYTES    Y02008 01560000
*           3 FLG1 CHAR(1) INIT('00'X),  /* FLAG BYTE            Y02008 01570000
*           3 SNSFIELD CHAR(1) INIT('01'X),/* NUM SENSE FIELDS   Y02008 01580000
*           3 CNTSNS CHAR(1) INIT('00'X),/* NUM SNS FIELDS FILLEDY02008 01590000
*           3 CNTINT CHAR(1) INIT('00'X),/* NUM INT FIELDS FILLEDY02008 01600000
*           3 SIOCC CHAR(1) INIT('00'X), /* START I/O COND CODE  Y02008 01610000
*           3 * CHAR(1) INIT('00'X),    /* NOT APPLICABLE       Y02008* 01620000
*           3 DEVAD CHAR(2) INIT('0000'X),  /* DEVADR IN TECB    Y02008 01630000
*           3 NA2 CHAR(1) INIT('00'X),   /* N A                  Y02008 01640000
*           3 OUTBUFR(12) CHAR(1) INIT ((12)'00'X),/* DATA BUF  Y02008* 01650000
*             5 CSW1 CHAR(7),             /* EVENT CSW           Y02008 01660000
*               7 CCWPLUS8 CHAR(3),      /* NEXT CCW TO BE ISSUEDY02008 01670000
*               7 TECBFLGA CHAR(1),      /* CSW FLAG BYTE        Y02008 01680000
*                 9 * BIT(4),            /* N A                  Y02008 01690000
*                 9 CHANEND BIT(1),      /* CHANNEL END INDICATORY02008 01700000
*                 9 DEVICEND BIT(1),     /* DEVICE END INDICATOR Y02008 01710000
*                 9 UNITCHCK BIT(1),     /* UNIT CHECK INDICATOR Y02008 01720000
*               7 TECBFLGB CHAR(1),      /* FLAG BYTE            Y02008 01730000
*             5 * CHAR(3),               /* N A  I/O DEV ADDR    Y02008 01740000
*             5 TSNS1 CHAR(2);           /* TECB EVENT SENSE     Y02008 01750000
*                                                                       01760000
*         /*    IFDOLT74 MESSAGE MODULE DECLARE(S)              Y02008* 01770000
*         DCL IFDMSG74 LABEL NONLOCAL EXTERNAL;               /*Y02008* 01780000
*         DCL 1 MSGS BASED(R5),         /*                      Y02008* 01790000
*               3 IFD408I PTR;          /* MESSAGE IFD408I      Y02008* 01800000
*         DCL 1 MSG408 BASED(R1),       /* MESSAGE IFD408I      Y02008* 01810000
*               3 * CHAR(12),           /* FLAGS                Y02008* 01820000
*               3 ERRORLIN CHAR(8),     /* LINE IN ERROR (HEX)  Y02008* 01830000
*               3 * CHAR(50);           /* MSG TEXT.            Y02008* 01840000
*         GEN(EJECT);                                                   01850000
         EJECT                                                          01860000
         DS    0H                                                       01870000
* /******************************************************************** 01880000
* /*                           INITIALIZATION                           01890000
* /******************************************************************** 01900000
*                                                                       01910000
*         EFCTRCB=EFCTRCB&&EFCTRCB;     /* CLEAR EFFECTOR PLIST Y02008* 01920000
         XC    EFCTRCB(20),EFCTRCB                                0051  01930000
*         FLGA='00'X;                   /* INIT FLAG BYTE TO 0  Y02008* 01940000
         MVI   FLGA,X'00'                                         0052  01950000
*         FLGA=FLGA|'20'X;              /* GUARANTEE DEV PATH   Y02008* 01960000
         OI    FLGA,X'20'                                         0053  01970000
*         FLGB='00'X;                   /* INIT FLAG BYTE TO 0  Y02008* 01980000
         MVI   FLGB,X'00'                                         0054  01990000
*         FILEMSK='00'X;                /* INIT FILE MASK TO 0  Y02008* 02000000
         MVI   FILEMSK,X'00'                                      0055  02010000
*         SNSCNT='02'X;                  /* INIT SENSE COUNT=02  Y02008 02020000
         MVI   SNSCNT,X'02'                                       0056  02030000
*         TECBPTRX=ADDR(TECB);           /* PTR TO TECB FOR EVENTY02008 02040000
         LA    @F,TECB                                            0057  02050000
         ST    @F,TECBPTRX                                        0057  02060000
*                                                                       02070000
*         IOCCWPTR=ADDR(DISABLE);        /* ADDRESS DISABLE CCW  Y02008 02080000
         LA    @F,DISABLE                                         0058  02090000
         ST    @F,IOCCWPTR                                        0058  02100000
*         FLGB=FLGB|'80'X;              /* INTERNAL CALL FLAG   Y02008* 02110000
         OI    FLGB,X'80'                                         0059  02120000
*                                                                       02130000
*         IF VIRTUAL='1'B                /* IS OLTEP IN VIRTUAL  Y02008 02140000
*          THEN                          /* SET FLAG FOR I/O     Y02008 02150000
         TM    A00000,B'00000010'                                 0060  02160000
         BC    12,@9FF                                            0060  02170000
*         FLGB=FLGB|'20'X;              /* VIRTUAL CCWS         Y02008* 02180000
         OI    FLGB,X'20'                                         0061  02190000
*         GEN(EJECT);                                                   02200000
@9FF     EQU   *                                                  0062  02210000
         EJECT                                                          02220000
         DS    0H                                                       02230000
* /******************************************************************** 02240000
* /*  SEARCH DEVTAB FOR ENABLED LINES                                   02250000
* /******************************************************************** 02260000
*         /************************************************************ 02270000
*         RESTRICT(DEVPT2);                                             02280000
*         DEVPT2=DEVTBPTR;               /*SET PTR TO START OF DEVTAB   02290000
         L     @4,DEVTBPTR                                        0064  02300000
* /******************************************************************** 02310000
* LDR0:                                  /*CHECK LINES                  02320000
*         /* CHECK DEVTAB                                               02330000
*         IF LNDSBL2='1'B THEN           /* LINE DISABLED ?             02340000
LDR0     TM    15(@4),B'10000000'                                 0065  02350000
*           GOTO LDR1;                   /*YES - BRANCH TO INCREMENT    02360000
         BC    01,LDR1                                            0066  02370000
*                                                                       02380000
*         /*  MUST ISSUE HALT I/O TO POSSIBLY ACTIVE DEVICE      Y02008 02390000
*                                                                       02400000
* IF UCBADDR2 = 0 THEN               /* INVALID DEVTAB?       @ZA02792* 02410000
         SR    @F,@F                                              0067  02420000
         C     @F,8(0,@4)                                         0067  02430000
*    GOTO LDR1;                      /* YES, BYPASS           @ZA02792* 02440000
         BC    08,LDR1                                            0068  02450000
*         CNTSNS='00'X;                  /* CLEAR TECB SNS CNT  Y02008* 02460000
         MVI   TECB+6,X'00'                                       0069  02470000
*         CNTINT='00'X;                  /* CLEAR TECB INT CNT  Y02008* 02480000
         MVI   TECB+7,X'00'                                       0070  02490000
*         SIOCC='00'X;                   /* CLEAR START I/0 CC  Y02008* 02500000
         MVI   TECB+8,X'00'                                       0071  02510000
*         OUTBUFR=OUTBUFR&&OUTBUFR;      /* ZERO CSW,SNS IN TECBY02008* 02520000
         XC    TECB+13(1),TECB+13                                 0072  02530000
*         DVTPTR=DEVPT2;                 /* ADDRESS PROPER DEV   Y02008 02540000
         ST    @4,DVTPTR                                          0073  02550000
*         PRIMARY = '1'B;    /* FLAG DEV AS PRIMARY           @ZA12057* 02560000
         OI    12(@4),B'01000000'                                 0074  02570000
*         R15=IORTNADR;                 /* ADDR IO EFFECTOR     Y02008* 02580000
         L     @F,IORTNADR                                        0075  02590000
*         GEN(BALR R14,R15);             /* GO PERFORM DISABLE   Y02008 02600000
         BALR R14,R15                                                   02610000
         DS    0H                                                       02620000
*         R1=ADDR(WAITLIST);             /* WAIT I/O PARM LIST   Y02008 02630000
         LA    @1,WAITLIST                                        0077  02640000
*         R14=ADDR(CHKDSABL);            /* RETURN POINT IN 74   Y02008 02650000
         LA    @E,CHKDSABL                                        0078  02660000
*         R15=TAB28;                     /* ADDR XMNGR           Y02008 02670000
         L     @F,TAB28                                           0079  02680000
*         GO TO R15;                     /* GO TO WAIT I/O       Y02008 02690000
         BCR   15,@F                                              0080  02700000
*                                                                       02710000
* CHKDSABL:                              /* LABEL, RETURN POINT  Y02008 02720000
*          PRIMARY = '0'B;  /* TURN OFF PRIMARY BIT           @ZA12057* 02730000
CHKDSABL NI    12(@4),B'10111111'                                 0081  02740000
*                                                                       02750000
*         WAITRC=R15;                    /* SAVE RETURN CODE     Y02008 02760000
         ST    @F,WAITRC                                          0082  02770000
*         IF WAITRC='08'X & RETRY='0'B   /* IF EVENT TIMED OUT   Y02008 02780000
*          THEN                          /* THEN TRY DISABLE     Y02008 02790000
         LA    @F,X'08'                                           0083  02800000
         C     @F,WAITRC                                          0083  02810000
         BC    07,@9FE                                            0083  02820000
         TM    FLAGSBYT,B'10000000'                               0083  02830000
         BC    05,@9FD                                            0083  02840000
*           DO;                          /* AGAIN.  INDICATE THATY02008 02850000
*            RETRY='1'B;                 /* DISABLE ALREADY TRIEDY02008 02860000
         OI    FLAGSBYT,B'10000000'                               0085  02870000
*            GO TO LDR0;                 /* AND REISSUE COMMAND  Y02008 02880000
         BC    15,LDR0                                            0086  02890000
*           END;                         /* END RETRY LOOP.      Y02008 02900000
*                                                                       02910000
*         IF SIOCC='F3'X                /* DEVICE NOT OPERATION Y02008* 02920000
*           THEN                        /* AL. CC=03 ON SIO.    Y02008* 02930000
@9FD     EQU   *                                                  0088  02940000
@9FE     CLI   TECB+8,X'F3'                                       0088  02950000
         BC    07,@9FC                                            0088  02960000
*             DO;                       /* ISSUE MSG IFD408I TO Y02008* 02970000
*                                       /* INFORM OPERATOR      Y02008* 02980000
*               RESTRICT(R5);           /* RESTRICT REGISTER    Y02008* 02990000
*               R5=ADDR(IFDMSG74);      /* ADDRESS MSG MODULE   Y02008* 03000000
         L     @1,@V1              ADDRESS OF IFDMSG74            0091  03010000
         LR    @5,@1                                              0091  03020000
*               R1=IFD408I;             /* ADDRESS MESSAGE      Y02008* 03030000
         L     @1,0(0,@5)                                         0092  03040000
*               ERRORLIN=DEVADDR2;      /* PUT ERROR LINE IN    Y02008* 03050000
         MVC   12(8,@1),0(@4)                                     0093  03060000
*                                       /* MSG 408I.            Y02008* 03070000
*               GEN (PWTO REG=(R1));    /* ISSUE MESSAGE.       Y02008* 03080000
         PWTO REG=(R1)                                                  03090000
         DS    0H                                                       03100000
*              END;                     /* END MSG OUTPUT       Y02008* 03110000
*         LNENBL2='0'B;                  /*TURN ENABLE FLAG OFF         03120000
@9FC     NI    15(@4),B'10111111'                                 0096  03130000
*         LNDSBL2='1'B;                  /*TURN DISABLE FLAG ON         03140000
         OI    15(@4),B'10000000'                                 0097  03150000
* /******************************************************************** 03160000
* LDR1:                                  /*SEARCH                       03170000
*         DEVPT2=DEVPT2+TABLNGTH;        /*INCREMENT PTR TO NEXT ENTRY  03180000
LDR1     AH    @4,TABLNGTH                                        0098  03190000
*         RETRY='0'B;                    /* TURN OFF RETRY FLAG Y02008* 03200000
         NI    FLAGSBYT,B'01111111'                               0099  03210000
*         /* END OF DEVTAB ?                                            03220000
*         IF DEVPT2<DEVTBPTR+UNICTR*TABLNGTH                            03230000
*          THEN                          /*BRANCH BACK                  03240000
         LH    @F,TABLNGTH                                        0100  03250000
         SR    @0,@0                                              0100  03260000
         IC    @0,UNICTR                                          0100  03270000
         MR    @E,@0                                              0100  03280000
         A     @F,DEVTBPTR                                        0100  03290000
         CR    @F,@4                                              0100  03300000
*           GOTO LDR0;                   /*NO - BRANCH BACK TO COMPARE  03310000
         BC    02,LDR0                                            0101  03320000
*         RETURN;                        /*RETURN TO CALLER             03330000
*         /************************************************************ 03340000
*         END IFDOLT74;                                                 03350000
@EL01    L     @D,4(0,@D)                                         0103  03360000
         LM    @E,@C,12(@D)                                       0103  03370000
         BCR   15,@E                                              0103  03380000
@DATA1   EQU   *                                                        03390000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           03400000
@1       EQU   01                                                       03410000
@2       EQU   02                                                       03420000
@3       EQU   03                                                       03430000
@4       EQU   04                                                       03440000
@5       EQU   05                                                       03450000
@6       EQU   06                                                       03460000
@7       EQU   07                                                       03470000
@8       EQU   08                                                       03480000
@9       EQU   09                                                       03490000
@A       EQU   10                                                       03500000
@B       EQU   11                                                       03510000
@C       EQU   12                                                       03520000
@D       EQU   13                                                       03530000
@E       EQU   14                                                       03540000
@F       EQU   15                                                       03550000
@V1      DC    V(IFDMSG74)                                              03560000
         DS    0F                                                       03570000
         DS    0D                                                       03580000
@DATA    EQU   *                                                        03590000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   03600000
R0       EQU   00000000            FULLWORD INTEGER REGISTER            03610000
R1       EQU   00000001            FULLWORD POINTER REGISTER            03620000
R2       EQU   00000002            FULLWORD POINTER REGISTER            03630000
DEVPT2   EQU   00000004            3  BYTE  POINTER REGISTER            03640000
R5       EQU   00000005            FULLWORD POINTER REGISTER            03650000
IOSBPTR  EQU   00000008            FULLWORD POINTER REGISTER            03660000
R14      EQU   00000014            FULLWORD POINTER REGISTER            03670000
R15      EQU   00000015            FULLWORD POINTER REGISTER            03680000
         ORG   @DATA+00000072                                           03690000
DISABLE  EQU   *                   8 BYTE(S) ON DWORD                   03700000
         DC    X'2F00000020000001'                                      03710000
MYID     EQU   *                   2 BYTE(S)                            03720000
         DC    C'74'                                                    03730000
A00004   EQU   00000000            56 BYTE(S) ON WORD                   03740000
DEVADDR2 EQU   A00004+00000000     8 BYTE(S)                            03750000
UCBADDR2 EQU   A00004+00000008     FULLWORD POINTER                     03760000
A00005   EQU   A00004+00000012     1 BYTE(S)                            03770000
A00006   EQU   A00004+00000012     1 BIT(S)                             03780000
PRIMARY  EQU   A00004+00000012     1 BIT(S)                             03790000
A00007   EQU   A00004+00000013     2 BYTE(S)                            03800000
A00008   EQU   A00004+00000015     1 BYTE(S)                            03810000
LNDSBL2  EQU   A00004+00000015     1 BIT(S)                             03820000
LNENBL2  EQU   A00004+00000015     1 BIT(S)                             03830000
A00009   EQU   A00004+00000015     6 BIT(S)                             03840000
A00010   EQU   A00004+00000016     40 BYTE(S)                           03850000
FLAGSBYT EQU   *                   1 BYTE(S)                            03860000
         DC    X'00'                                                    03870000
RETRY    EQU   FLAGSBYT+00000000   1 BIT(S)                             03880000
WAITRC   EQU   @DATA+00000084      FULLWORD INTEGER                     03890000
WAITLIST EQU   @DATA+00000088      1 BYTE(S) ON WORD                    03900000
         ORG   WAITLIST+00000000                                        03910000
XMGR     EQU   *                   1 BYTE(S)                            03920000
         DC    X'00'                                                    03930000
LVL      EQU   *                   1 BYTE(S)                            03940000
         DC    X'02'                                                    03950000
MODID    EQU   *                   2 BYTE(S)                            03960000
         DC    C'36'                                                    03970000
TECBPTR  EQU   *                   FULLWORD POINTER                     03980000
         DC    AL4(TECB)                                                03990000
CDSPTR   EQU   *                   FULLWORD POINTER                     04000000
         DC    XL4'00'                                                  04010000
FLG      EQU   *                   1 BYTE(S)                            04020000
         DC    X'80'                                                    04030000
WAITYES  EQU   WAITLIST+00000012   1 BIT(S)                             04040000
TIME     EQU   *                   2 BYTE(S)                            04050000
         DC    X'001E'                                                  04060000
TECB     EQU   @DATA+00000103      1 BYTE(S)                            04070000
FLDCNT   EQU   *                   1 BYTE(S)                            04080000
         DC    X'01'                                                    04090000
FLDSIZE  EQU   *                   1 BYTE(S)                            04100000
         DC    X'0C'                                                    04110000
A00011   EQU   *                   1 BYTE(S)                            04120000
         DC    X'00'                                                    04130000
SNSIZE   EQU   *                   1 BYTE(S)                            04140000
         DC    X'05'                                                    04150000
FLG1     EQU   *                   1 BYTE(S)                            04160000
         DC    X'00'                                                    04170000
SNSFIELD EQU   *                   1 BYTE(S)                            04180000
         DC    X'01'                                                    04190000
CNTSNS   EQU   *                   1 BYTE(S)                            04200000
         DC    X'00'                                                    04210000
CNTINT   EQU   *                   1 BYTE(S)                            04220000
         DC    X'00'                                                    04230000
SIOCC    EQU   *                   1 BYTE(S)                            04240000
         DC    X'00'                                                    04250000
A00012   EQU   *                   1 BYTE(S)                            04260000
         DC    X'00'                                                    04270000
DEVAD    EQU   *                   2 BYTE(S)                            04280000
         DC    X'0000'                                                  04290000
NA2      EQU   *                   1 BYTE(S)                            04300000
         DC    X'00'                                                    04310000
OUTBUFR  EQU   *                   12*1 BYTE(S)                         04320000
         DC    00012X'00'                                               04330000
CSW1     EQU   TECB+00000013       7 BYTE(S)                            04340000
CCWPLUS8 EQU   TECB+00000013       3 BYTE(S)                            04350000
TECBFLGA EQU   TECB+00000016       1 BYTE(S)                            04360000
A00013   EQU   TECB+00000016       4 BIT(S)                             04370000
CHANEND  EQU   TECB+00000016       1 BIT(S)                             04380000
DEVICEND EQU   TECB+00000016       1 BIT(S)                             04390000
UNITCHCK EQU   TECB+00000016       1 BIT(S)                             04400000
TECBFLGB EQU   TECB+00000017       1 BYTE(S)                            04410000
A00014   EQU   TECB+00000020       3 BYTE(S)                            04420000
TSNS1    EQU   TECB+00000023       2 BYTE(S)                            04430000
MSGS     EQU   00000000            4 BYTE(S) ON WORD                    04440000
IFD408I  EQU   MSGS+00000000       FULLWORD POINTER                     04450000
MSG408   EQU   00000000            70 BYTE(S) ON WORD                   04460000
A00015   EQU   MSG408+00000000     12 BYTE(S)                           04470000
ERRORLIN EQU   MSG408+00000012     8 BYTE(S)                            04480000
A00016   EQU   MSG408+00000020     50 BYTE(S)                           04490000
         ORG   @DATA                                                    04500000
         DS    00000144C                                                04510000
@TEMPS   DS    0F                                                       04520000
LDRO     IFDCOM                                                         04530000
A00000   EQU   CESWT7+00000000     1 BYTE(S) ON WORD                    04540000
A00001   EQU   A00000+00000000     6 BIT(S)                             04550000
VIRTUAL  EQU   A00000+00000000     1 BIT(S)                             04560000
A00002   EQU   WKSVC+00000000      16 BYTE(S)                           04570000
A00003   EQU   A00002+00000000     2 BYTE(S)                            04580000
SVCID    EQU   A00002+00000002     2 BYTE(S)                            04590000
SVCPRM1  EQU   A00002+00000004     4  BYTE  POINTER                     04600000
SVCPRM2  EQU   A00002+00000008     4  BYTE  POINTER                     04610000
SVCPRM3  EQU   A00002+00000012     4  BYTE  POINTER                     04620000
IOCCWPTR EQU   EFCTRCB+00000000    FULLWORD POINTER                     04630000
@DATEND  EQU   *                                                        04640000
         END   IFDOLT74,(C'PL/S',1400,76265)                            04650000
./  ADD  SSI=32570931,NAME=IFDOLT98
         TITLE 'IFDOLT98  *** OLTEP OLT PUNCH ***'                      00050002
IFDOLT98 CSECT                                                          00100002
* TITLE: IFDOLT98 - OLT PUNCH FOR OLTEP                               * 00150002
*                                                                     * 00200002
* STATUS: CHANGE LEVEL  000                                           * 00250002
*                                                                     * 00300002
* FUNCTION: THIS MODULE IS USED BY OLTEP USERS TO PUNCH OLT'S AND/OR  * 00350002
*        CDS'S FROM THE TEST LIBRARY CREATED WITH THE OLTEP GEN       * 00400002
*        FUNCTION.                                                    * 00450002
*           INPUT IS FROM PUNCHED CARDS DEFINED IN THE OLTEP SRL.     * 00500002
*        EACH OLT/CDS TO BE PUNCHED IS NAMED BY THE USER. UPON        * 00550002
*        READING THIS INPUT,THIS MODULE WILL SEARCH THE LIBRARY       * 00600002
*        DEFINED ON THE INPUT JCL AND PUNCH THE OLT/CDS ONTO THE CARD * 00650002
*        PUNCH ALSO DEFINED BY THE INPUT JCL. THE PUNCHED OUTPUT IS   * 00700002
*        IN 80 BYTE-CARD IMAGE,OBJECT DECK FORMAT.                    * 00750002
*                                                                     * 00800002
* ENTRY POINT: THE MAIN AND ONLY ENTRY POINT IS AT IFDOLT98 CSECT.    * 00850002
*                                                                     * 00900002
* INPUT: 1. CARDS NAMING OLT'S/CDS'S TO BE FOUND AND PUNCHED;OBTAINED * 00950002
*           FROM DDNAME 'CNTRLIN'.                                    * 01000002
*        2. OLT/LOCAL CDS DATASET FROM WHICH SELECTED OLT'S/CDS'S     * 01050002
*           ARE PUNCHED;OBTAINED FROM DDNAME 'INDASD'.                * 01100002
*        3. REMOTE CDS DATASET FROM WHICH SELECTED REMOTE CDS'S ARE   * 01150002
*           PUNCHED;OBTAINED FROM DDNAME 'INDASD2'.                   * 01200002
*                                                                     * 01250002
* OUTPUT: 1. OBJECT DECKS FOR THE SELECTED OLT'S/CDS'S;OUTPUTTED TO   * 01300002
*        THE DATASET DEFINED BY THE DDNAME 'PUNCHDD'.                 * 01350002
*         2. DIAGNOSTIC MESSAGES INDICATING STATUS OF THE RUN; OUTPUT-* 01400002
*        TED TO THE DATA SET DEFINED BY THE DDNAME 'DIAGMSG'.         * 01450002
*                                                                     * 01500002
* EXTERNAL ROUTINES: NONE                                             * 01550002
*                                                                     * 01600002
* EXITS - NORMAL: SYSTEM MACRO'S; OPEN,GET,FIND,CHECK,NOTE,POINT,PUT. * 01650002
*            NORMAL RETURN TO SYSTEM AT END-OF-FILE FROM 'CNTRLIN'.   * 01700002
*                                                                     * 01750002
*       - ABNORMAL: FAILURE TO OPEN A REQUIRED DATASET.               * 01800002
*                                                                     * 01850002
* TABLES AND WORK AREAS: NO EXTERNAL ONES USED.                       * 01900002
*                                                                     * 01950002
* ATTRIBUTES: SERIALLY REUSEABLE                                      * 02000002
*                                                                     * 02050002
* MESSAGES: 1. IFD900I - OUTPUTTED WHEN AN INVALID INPUT CARD IS      * 02100002
*        READ.                                                        * 02150002
*           2. IFD901I - OUTPUTTED WHEN A DATASET CANNOT BE OPENED.   * 02200002
*           3. IFD902I - OUTPUTTED FOR EACH SUCCESSFULLY PUNCHED      * 02250002
*        OLT/CDS.                                                     * 02300002
*           4. IFD905I - OUTPUTTED FOR ANY OLT/CDS NOT FOUND.         * 02350002
*                                                                     * 02400002
*********************************************************************** 02450002
         EJECT                                                          02500002
*********************************************************************** 02550002
*                                                                     * 02600002
*                   EQUATES AND MASKS                                 * 02650002
*                                                                     * 02700002
*********************************************************************** 02750002
         SPACE 2                                                        02800002
R0       EQU   0                   GENERAL RESISTERS                    02850002
R1       EQU   1                                                        02900002
R2       EQU   2                                                        02950002
R3       EQU   3                                                        03000002
R4       EQU   4                                                        03050002
R5       EQU   5                                                        03100002
R6       EQU   6                                                        03150002
R7       EQU   7                                                        03200002
R8       EQU   8                                                        03250002
R9       EQU   9                                                        03300002
R10      EQU   10                                                       03350002
R11      EQU   11                                                       03400002
R12      EQU   12                                                       03450002
R13      EQU   13                                                       03500002
R14      EQU   14                                                       03550002
R15      EQU   15                                                       03600002
BASEREG  EQU   12                                                       03650002
SAVEREG  EQU   13                                                       03700002
WKREG1   EQU   1                                                        03750002
SW1ON    EQU   X'80'               SWITCH MASKS TO SET SWITCH ON (1)    03800002
SW2ON    EQU   X'40'                                                    03850002
SW3ON    EQU   X'20'                                                    03900002
SW4ON    EQU   X'10'                                                    03950002
SW5ON    EQU   X'08'                                                    04000002
SW6ON    EQU   X'04'                                                    04050002
SW7ON    EQU   X'02'                                                    04100002
SW8ON    EQU   X'01'                                                    04150002
SW1OFF   EQU   X'7F'               SWITCH MASKS TO SET SWITCH OFF (0)   04200002
SW2OFF   EQU   X'BF'                                                    04250002
SW3OFF   EQU   X'CF'                                                    04300002
SW4OFF   EQU   X'EF'                                                    04350002
SW5OFF   EQU   X'F7'                                                    04400002
SW6OFF   EQU   X'F8'                                                    04450002
SW7OFF   EQU   X'FC'                                                    04500002
SW8OFF   EQU   X'FE'                                                    04550002
D12      EQU   12                  DECIMAL CONSTANT  12                 04600002
D4       EQU   4                   DECIMAL CONSTANT  4                  04650002
D17      EQU   17                  DECIMAL CONSTANT OF 17               04700002
D240     EQU   240                 DECIMAL CONSTANT OF 240              04750002
L8       EQU   8                   LENGTH CONSTANT OF 8                 04800002
D8       EQU   8                   DECIMAL CONSTANT  8                  04850002
L5       EQU   5                   LENGTH CONSTANT   5                  04900002
RCREG    EQU   15                  RETURN CODE REG                      04950002
WORKREG1 EQU   1                   WORK REG GPR #1                      05000002
SWBYTAOF EQU   X'00'               MASK SWITCH BYTE A OFF               05050002
SWBYTAON EQU   X'FF'               MASK SWITCH BYTE A ON                05100002
DCBREG   EQU   5                   REG USED IN OPEN CHECKS              05150002
LINKREG1 EQU   4                   LINKAGE REG FOR INTERNAL ROUTINES    05200002
*                                  SWITCH A BIT DEFINITIONS             05250002
DCBOFLGS EQU   X'30'               DISPLACEMENT INTO UCB FOR OPEN FLAGS 05300002
OPENOK   EQU   X'10'               MASK TO CHECK IF OPEN WAS SUCCESSFUL 05350002
CHARREG  EQU   6                   CHARACTER POINTER REG                05400002
CHAREND  EQU   3                   NAME FIELD END REG                   05450002
TRTCODE  EQU   2                   TRT INSTR RETURN CODE REG            05500002
DATAAREA EQU   7                                                        05550002
D0       EQU   0                   DECIMAL CONSTANT OF 0                05600002
D193     EQU   193                 DECIMAL CONSTANT OF 193              05650002
D1       EQU   1                   DECIMAL CONSTANT OF 1                05700002
LGNTHREG EQU   8                   REG 8 TO HOLD DATA LENGTH FOR READ   05750002
D80      EQU   80                  ESD,END,RLD,TXTHDR DATA LENGTH CONST 05800002
NOTEREG  EQU   1                   NOTE SYS MACRO RETURNS DATA IN REG 1 05850002
TXTHDRON EQU   X'80'               TXTHDR SWITCH BIT IN SWITCH BYTE A   05900002
D2       EQU   2                   DECIMAL CONSTANT OF 2                05950002
D3       EQU   3                   DECIMAL CONSTANT OF 3                06000002
NXTRECUP EQU   X'01'               USED TO UPDATE TTRZ FROM NOTE FOR    06050002
*                                  POINT TO NEXT RECORD                 06100002
DATACNT  EQU   21                  OFSET INTO TXTHDR FOR TXT DATA SIZE  06150002
L3       EQU   3                   DECIMAL CONSTANT OF 3                06200002
L4       EQU   4                   LENGTH CONSTANT OF 4                 06250002
D76      EQU   76                  DECIMAL CONSTANT OF 76-START OF SEQ# 06300002
WORKREG9 EQU   9                   WORKREG 9                            06350002
ASMADREG EQU   3                   REG TO HOLD ASSEMBLED ADDR           06400002
L1       EQU   1                   LENGTH CONSTANT OF 1                 06450002
L2       EQU   2                   LENGTH CONSTANT OF 2                 06500002
D25      EQU   25                  DISPLACEMENT INTO TXTHDR FOR TXT ID  06550002
OBJREG   EQU   11                  POINTS TO TXT CARD FOR A DSECT       06600002
D32      EQU   32                  DECIMAL CONSTANT OF 32               06650002
D56      EQU   56                  DECIMAL CONSTANT OF 56 (TXT DATA CT) 06700002
WORKREGA EQU   10                  WORK REG 10                          06750002
TXTOUTCT EQU   9                   COUNT OF MAX TXT CARDS TO OUTPUT PER 06800002
*                                   BLOCKED TXT DATA RECORD READ        06850002
L56      EQU   56                  LENGTH OF 56                         06900002
REMANDER EQU   8                   REMAINDER REG FOR DIVISION OF TXT/56 06950002
D255     EQU   255                 DECIMAL CONSTANT 255 TO TURN SW OFF  07000002
WORKREG2 EQU   2                   WORK REG # 2                         07050002
RESTORE  EQU   X'8B'               PRINTER RESTORE COMMAND CODE         07100002
LINECTR  EQU   3                   PRINTER OUTPUT LINE COUNTER REG      07150002
D59      EQU   59                  59 LINES PER PAGE                    07200002
WRTSP1   EQU   X'09'               PRINTER COMMAND WRITE AND SPACE 1    07250002
L80      EQU   80                  DECIMAL CONSTANE OF 80               07300002
D40      EQU   40                  DECIMAL CONSTANT OF 40               07350002
         EJECT                                                          07400002
*********************************************************************** 07450002
*                        INITIALIZATION                               * 07500002
*        FIRST PERFORM LINKAGE CONVENTIONS THEN INITIALIZE SWITCHES   * 07550002
*                                                                     * 07600002
*                                                                     * 07650002
*********************************************************************** 07700002
         SPACE 3                                                        07750002
         SAVE  (14,12),,IFDOLT98&SYSDATE  SAVE THE SYSTEM'S REGS        07800002
         BALR  BASEREG,R0          ESTABLISH ADDRESSABILITY             07850002
         USING *,BASEREG                                                07900002
         ST    SAVEREG,SAVEAREA+D4 SAVE SYSTEM SAVEAREA POINTER         07950002
         LA    WORKREG1,SAVEAREA   PUT POINTER TO MY SAVE AREA          08000002
         ST    WORKREG1,D8(SAVEREG)   INTO SYSTEM'S SAVE AREA           08050002
         LR    SAVEREG,WORKREG1    SET UP SAVE REG TO POINT TO MY SAVE  08100002
         MVI   SWITCHA,SWBYTAOF    SET SWITCH BYTE A TO ZEROES (OFF)    08150002
         USING OBJCRDM,OBJREG      SET ADDRESSABILITY TO OBJECT DSECT   08200002
         LA    OBJREG,DASDAREA                                          08250002
         SPACE 5                                                        08300002
*********************************************************************** 08350002
*                                                                     * 08400002
*                        PERFORM OPENS TO NECESSARY DATA SETS         * 08450002
*        END JOB IF A NECESSARY DATASET FAILS TO OPEN                 * 08500002
*********************************************************************** 08550002
         SPACE 2                                                        08600002
         OPEN  (INCARD,INPUT,OUTCARD,(OUTPUT),INDASD,INPUT,PRINTER,    X08650002
               (OUTPUT))                                                08700002
         SPACE                                                          08750002
*  CHECK IF OPENS ARE SUCCESSFUL                                        08800002
         SPACE                                                          08850002
         LA    DCBREG,PRINTER      SET UP TO CHECK PRINTER DCB          08856002
         TM    DCBOFLGS(DCBREG),OPENOK  DID IT OPEN?                    08862002
         BO    OPEN0090            YES-GO CK ON.IF NOT ISSUE MSG 901    08868002
         WTO   'IFD901I DIAGMSG  DDCARD FAILED TO OPEN ****ERROR****'   08874002
         B     PCH00980            NOW GO END RUN                       08880002
         SPACE                                                          08886002
OPEN0090 EQU   *                                                        08892002
         LA    DCBREG,INCARD       SET   DCB FOR CARD INPUT             08900002
         BAL   LINKREG1,OPEN0100   GO CHECK IT                          08950002
         LA    DCBREG,OUTCARD      SET   DCB FOR PUNCHED OUTPUT         09000002
         BAL   LINKREG1,OPEN0100   GO CHECK IT                          09050002
         LA    DCBREG,INDASD       SET   DCB FOR OLT/CDS LIBRARY        09200002
         LA    LINKREG1,PCH00200   SET LINKREG TO PROCESS LOOP          09250002
         SPACE 2                                                        09300002
OPEN0100 EQU   *                   ROUTINE TO TEST OPEN SUCCESSFUL FLAG 09350002
         TM    DCBOFLGS(DCBREG),OPENOK  FLAGS IN DCB OK?                09400002
         BNO   PCHER900            NO - GO GIVE MSG AND ABORT           09450002
         BR    LINKREG1            OK-RESUME.                           09500002
         SPACE 3                                                        09550002
*********************************************************************** 09600002
*                                                                     * 09650002
*                   MAIN PROCESS ROUTINE                              * 09700002
*      1. READ CONTROL CARD AND VERIFY IT, ISSUE MSG IF BAD.          * 09750002
*      2. ISSUE SYSTEM FIND MACRO TO LOCATE SELECTED OLT/CDS.         * 09800002
*      3. READ THE OLT/CDS RECORDS INTO MAIN STOREAGE                 * 09850002
*      4. DEBLOCK ANY TXT RECORDS                                     * 09900002
*      5. OUTPUT 80 BYTE OBJECT DECK FORMAT RECORDS TO PUNCHED        * 09950002
*                                                                     * 10000002
*********************************************************************** 10050002
         SPACE 2                                                        10100002
PCH00200 EQU   *                                                        10150002
         GET   INCARD,INAREA1      READ A CONTROL RECORD                10200002
         CLC   CTRLID(L'CTRLID),CTRLCON   THIS A CONTROL CARD           10250002
         BE    PCH00210            YES- GO VERIFY IT                    10300002
         CLC   CTRLID(L'SYMBOLIC),SYMBOLIC  THIS A SYMBOLIC CDS BREAK   10350002
         BNE   PCHER910            NO-GO GIVE INVALID CARD MSG.         10400002
         OPEN  (SYMCDSDD,INPUT)    OPEN SYMBOLIC CDS DATASET            10450002
         LA    LINKREG1,PCH00200   SET UP TO START PROCESSING           10500002
         LA    DCBREG,SYMCDSDD     SET DCB ADDRESS                      10550002
         B     OPEN0100            GO SET IF OPEN OK                    10600002
         SPACE 3                                                        10650002
* VERIFY OLT/CDS ID ON CONTROL CARD                                     10700002
         SPACE                                                          10750002
PCH00210 EQU   *                                                        10800002
         LA    CHARREG,CTRLINFO    GET OLT/CDS NAME START               10850002
         LA    CHAREND,CTRLPAD     SET NAME FIELD END POINT             10900002
PCH00211 CLI   D0(CHARREG),C'$'    THIS CHAR A '$'                      10950002
         BE    PCH00213            YES-GO UPDATE TO NEXT CHAR           11000002
         CLI   D0(CHARREG),C'#'    THIS CHAR A '#'                      11050002
         BE    PCH00213            YES-UPDATE                           11100002
         CLI   D0(CHARREG),C'@'    THIS A '@'                           11150002
         BE    PCH00213            YES-UPDATE                           11200002
         CLI   D0(CHARREG),C' '    THIS A BLCNK                         11250002
         BE    PCH00216            YES-GO VERIFY IT'S OK                11300002
         CLI   D0(CHARREG),C'A'    IS CHAR LESS THAN 'A'                11350002
         BL    PCHER910            YES-GO OUTPUT BAD INPUT CARD MSG     11400002
         SR    TRTCODE,TRTCODE     CLEAR TRT RETURN CODE REG            11450002
         TRT   D0(1,CHARREG),TRTTABLE-D193   TEST CHAR AND BRANCH       11500002
         B     *(TRTCODE)          WHAT IS IT                           11550002
         B     PCH00213            IT'S ALPHA-GO UPDATE                 11600002
         B     PCH00219            IT'S NUMERIC-GO SEE IF OK            11650002
         B     PCHER910            IT'S BAD-GO GIVE MSG                 11700002
         SPACE                                                          11750002
PCH00213 EQU   *                   UPDATE AND CHECK LENGTH              11800002
         LA    CHARREG,D1(CHARREG) POINT TO NEXT CHARACTER              11850002
         CR    CHARREG,CHAREND     HAVE 8 CHARACTERS BEEN CHECKED       11900002
         BL    PCH00211            NO- RESUME CHECKING                  11950002
         CLI   D0(CHARREG),C' '    YES-IS NAME FOLLOWED BY A BLANK      12000002
         BNE   PCHER910            NO-GO GIVE BAD INPUT MSG             12050002
*                                  NAME OK-NOW SET CHAR COUNT FOR FIND  12100002
         SPACE                                                          12150002
PCH00216 EQU   *                   PROCESS BLANK                        12200002
         LA    WORKREG1,CTRLINFO   GET 1ST CHAR ADDR                    12250002
         CR    CHARREG,WORKREG1    IS FIRST CHAR A BLANK                12300002
         BE    PCHER910            YES-GO GIVE BAD INPUT MSG            12350002
         SR    CHARREG,WORKREG1    NAME OK-SET CHAR COUNT FOR FIND MVC  12400002
         B     PCH00300                                                 12450002
         SPACE                                                          12500002
PCH00219 EQU   *                   THIS ROUTINE INSURES A NUMERIC ISN'T 12550002
         LA    WORKREG1,CTRLINFO   THE FIRST CHAR. GET 1ST CHAR ADDRESS 12600002
         CR    CHARREG,WORKREG1    IS IT THE 1ST CHAR                   12650002
         BE    PCHER910            YES-GO GIVE ERROR MSG                12700002
         B     PCH00213            OK-GO UPDATE                         12750002
         EJECT                                                          12800002
PCH00300 EQU   *                   SET UP FIND MACRO                    12850002
         MVI   FINDLIST,C' '       CLEAR FINDLIST                       12900002
         MVC   FINDLIST+D1(L'FINDLIST-D1),FINDLIST                      12950002
         BCTR  CHARREG,R0          SUBTRACT 1 FROM CHAR REG             13000002
         EX    CHARREG,MVC1        MOVE OLT/CDS NAME TO FIND LIST       13050002
         FIND  (DCBREG),FINDLIST,D DOES OLT/CDS EXIST                   13100002
         LTR   RCREG,RCREG         OLT/CDS FOUND (R15=0)?               13150002
         BNZ   PCHER920            NO-GO GIVE MSG IFD905I-MODULE NOT    13200002
*                                   FOUND.                              13250002
         SPACE 2                                                        13300002
*  MODULE FOUND AND READY                                               13350002
         SPACE                                                          13400002
PCH00305 EQU   *                                                        13450002
         LA    DATAAREA,DASDAREA   SET INPUT OLT/CDS DATA ADDR FOR READ 13500002
         LA    LGNTHREG,080        SET MIN REC LENGTH-NOT TXT LENGTH    13550002
PCH00310 EQU   *                                                        13600002
         READ  DASDECB,SF,(DCBREG),(DATAAREA),(LGNTHREG) GO READ A REG  13650002
         CHECK DASDECB             WAIT FOR EVENT COMPLETE              13700002
         NOTE  (DCBREG)            GET DASD ADDR OF RECORD JUST READ    13750002
         ST    NOTEREG,RECRELAD                                         13800002
         MVI   RECRELAD+D3,NXTRECUP  POINT TO NEXT RECORD               13850002
         POINT (DCBREG),RECRELAD   POINT TO NEXT RECORD                 13900002
         TM    TXTHDRSW,TXTHDRON   WAS A TXT RECORD READ                13950002
         BO    PCH00350                                                 14000002
         CLC   D0(L'TXTHDRDC,DATAAREA),TXTHDRDC IS THIS A TXTHDR        14050002
         BNE   PCH00320            NO-GO PROCESS OTHER RECORD TYPES     14100002
         OI    TXTHDRSW,TXTHDRON   YES-SET TXTHDR SWITCH ON             14150002
         XC    WRKAREA1,WRKAREA1   CLEAR WORK AREA 1                    14200002
         MVC   WRKAREA1+D1(L3),DATACNT(DATAAREA)  GET SIZE OF TXT DATA  14250002
*                                  RECORD FROM TXTHDR RECORD            14300002
         L     LGNTHREG,WRKAREA1   SET TXT COUNT FOR READ               14350002
         LA    DATAAREA,TXTBFR     GET TXT BFR ADDEESS FOR REAR         14400002
         B     PCH00310            GO REAR THE TXT RECORD               14450002
         SPACE 3                                                        14500002
*  ROUTINE TO PROCESS ESD,RLD,END,AND REP CARDS/RECORDS                 14550002
PCH00320 EQU   *                                                        14600002
         CLC   OBJCRDID(L4),ESDCON IS THIS AN ESD CARD                  14650002
         BE    PCH00321            YES- GO SAVE SEQ #                   14700002
         CLC   OBJCRDID(L4),REPCON IS THIS AN RLD CARD                  14750002
         BE    PCH00322            YES-GO PUNCH IT-NO SEQ #'S IN REP'S  14800002
         CLC   SEQBFR(L4),BLANKS   DOES SEQ BFR HAVE BLANKS             14850002
         BE    PCH00322            YES - DON'T UPDATE SEQ #             14900002
         BAL   LINKREG1,PCH00700   GO UPDATE THE SEQ #                  14950002
         MVC   OBJSEQ#(L4),SEQBFR  MOVE SEQ #'S INTO TXT,RLD,AND END    15000002
         B     PCH00322            GO PUNCH IT                          15050002
         SPACE 2                                                        15100002
PCH00321 EQU   *                                                        15150002
         MVC   SEQBFR(L4),OBJSEQ#  SAVE THE SEQ NUMBER                  15200002
PCH00322 EQU   *                                                        15250002
         PUT   OUTCARD,DASDAREA    OUTPUT RECORD TO PUNCH               15300002
         TM    TXTHDRSW,TXTHDRON   IS TXTHDR SW ON                      15350002
         BO    PCH00360            GO CONTINUE TXT DEBLOCK LOOP         15400002
         CLC   DASDAREA(L4),ENDCON WAS AN END REC PROCESSED             15450002
         BNE   PCH00310            NO-GO READ NEXT RECORD               15500002
         LA    WORKREG9,D4         SET UP TO PUNCH 4 BLANK CARDS        15550002
         MVI   DASDAREA,C' '       CLEAR OUTPUT BFR                     15600002
         MVC   DASDAREA+D1(L'DASDAREA-D1),DASDAREA                      15650002
PCH00323 EQU   *                                                        15700002
         TM    OUTCARD+17,X'40'    ONLY PUT OUT BLANK CARDS      X03008 15710002
         BNO   PCH00330            TO A PUNCH.                   X03008 15720002
         PUT   OUTCARD,DASDAREA    OUTPUT A BLANK CARD                  15750002
         BCT   WORKREG9,PCH00323   PUT OUT 4 BLANK CARDS THEN           15800002
PCH00330 EQU   *                                                 X03008 15820002
         LA    WORKREG9,PCHOKMSG   OUTPUT MSG IFD902I FOR SUCCESSFOL    15850002
         MVC   MODOKNAM(L'FINDLIST),FINDLIST NOVE NAME TO MSG IFD902I   15900002
         BAL   LINKREG1,PCH00800   GO PUT OUT MSG                       15950002
         B     PCH00200            GO GET NEXT CONTOLL CARD             16000002
         EJECT                                                          16050002
*                                                                       16100002
*  ROUTINE TO DEBLOCK TXT RECORDS INTO 80 BYTE OBJECT DECK FORMAT CARDS 16150002
*                                                                       16200002
PCH00350 EQU   *                                                        16250002
         XC    WRKAREA1,WRKAREA1   ZERO WORK AREA 1                     16300002
         MVC   WRKAREA1+D1(L3),DASDAREA+D17  GET ASSEMBLED ADDRESS      16350002
         L     ASMADREG,WRKAREA1   INTO ASM ADDR REG                    16400002
         MVC   TXTIDBFR(L'TXTIDBFR),DASDAREA+D25 SAVE TXT RECORD ID     16450002
         MVC   DASDAREA(L'DASDAREA),TXTCONST INITIALIZE TXT RECORD CARD 16500002
         SRDL  LGNTHREG,D32        SET UP TO DIVIDE TXT REC DATA CNT    16550002
         LA    WORKREGA,D56         BY MAX TXT DATA COUNT OF 56         16600002
         DR    LGNTHREG,WORKREGA   DIVIDE                               16650002
PCH00353 EQU   *                                                        16700002
         LTR   TXTOUTCT,TXTOUTCT   IS QUOTIENT = 0                      16750002
         BZ    PCH00355            YES- GO MOVE REMAINDER OF TXT DATA   16800002
         MVC   TXTDATA(L'TXTDATA),D0(DATAAREA)  MOVE 56 BYTES OF TXT    16850002
         MVC   TXTDATCT(L'TXTDATCT),CON56  MOVE TXT CARD DATA COUNT     16900002
         B     PCH00359            GO COMPLETE TXT CARD                 16950002
         SPACE 5                                                        17000002
PCH00355 EQU   *                                                        17050002
         LTR   REMANDER,REMANDER   ANY REMAINDER OF TXT DATA            17100002
         BNZ   PCH00357            GO CREATE LAST TXT CARD FOR THIS REC 17150002
         NI    TXTHDRSW,D255-TXTHDRON  TURN TXT HDR SW OFF (0)          17200002
         B     PCH00305            GO SET UP TO READ NEXT RECORD        17250002
         SPACE 2                                                        17300002
PCH00357 EQU   *                                                        17350002
         MVC   DASDAREA(L'DASDAREA),TXTCONST INITIALIZE BASIC TXT CARD  17400002
         ST    REMANDER,WRKAREA1   STORE REMAINING BYTE COUNT OF TXT    17450002
         MVC   TXTDATCT(L'TXTDATCT),WRKAREA1+D2  MOVE TXT BYTE COUNT    17500002
         BCTR  REMANDER,R0         SUBTRACT 1 FROM BYTE COUNT FOR MVC   17550002
         EX    REMANDER,MVC2       MOVE REMAINING TXT DATA              17600002
         LA    TXTOUTCT,D1         SET QUOTIENT TO 1 TO CONTROL LOOP    17650002
         SR    REMANDER,REMANDER   CLEAR REMAINDER                      17700002
PCH00359 EQU   *                                                        17750002
         MVC   TXTESDID(L'TXTESDID),TXTIDBFR MOVE TXT DATA ESDID        17800002
         ST    ASMADREG,WRKAREA1   SET ASM ADDRESS FOR MOVE             17850002
         MVC   TXTASMAD(L'TXTASMAD),WRKAREA1+1 MOVE REL ASM ADR TO TXT  17900002
         LA    ASMADREG,D56(ASMADREG)   UPDATE REL ASM ADDR             17950002
         LA    DATAAREA,D56(DATAAREA)   UPDATE TXT DATA PTR             18000002
         B     PCH00320            GO OUTPUT CARD                       18050002
         SPACE 5                                                        18100002
PCH00360 EQU   *                   CONTINUE TXT DEBLOCK PROCESS LOOP    18150002
         BCTR  TXTOUTCT,R0         SUBTRACT 1 FROM QUOTIENT             18200002
         B     PCH00353            CONTINUE                             18250002
         EJECT                                                          18300002
*  THIS ROUTINE IS USED TO UPDATE THE OBJECT CARD SEQUENCE NUMBER TO    18310002
*  THE NEXT HIGHER NUMBER                                               18320002
         SPACE                                                          18330002
PCH00700 EQU   *                                                        18350002
         LA    WORKREG1,D4         SET NUMBER OF CHARS TO UPDATE        18400002
PCH00701 EQU   *                                                        18450002
         LA    WORKREG2,SEQBFR-D1(WORKREG1)  POINT TO CAAR TO UPDATE    18500002
         TR    D0(L1,WORKREG2),SEQUPCHR-D240 ADD EBCDIC 1 TO SEQ #      18550002
         CLI   D0(WORKREG2),C'0'   DID IT GO TO A ZERO                  18600002
         BNE   PCH00702            NO - RETURN                          18650002
         BCT   WORKREG1,PCH00701   YES - GO UPDATE NEXT CHAR            18700002
PCH00702 EQU   *                                                        18750002
         BR    LINKREG1            RETURN - NO MORE CHARS TO UPDATE     18800002
         EJECT                                                          18850002
*  THIS IS THE PRINTING ROUTINE. IT CONTROLS THE PRINTER CARRIAGE       18860002
*  AND OUTPUTS MESSAGES PASSED TO IT IN (ADDRESSED BY) REGISTER 9       18870002
         SPACE                                                          18880002
PCH00800 EQU   *                   PRINT OUT MSG AND CONTROL PRINTER    18900002
         MVI   PRTBFR,C' '         CLEAR OUT PRINT BFR                  18950002
         MVC   PRTBFR+D1(L'PRTBFR-D1),PRTBFR                            19000002
         MVI   PRTBFR,RESTORE      SET TO EJECT IF NEW PAGE NEEDED      19050002
         L     LINECTR,LINECNT     GET LINE COUNT                       19100002
         BCT   LINECTR,PCH00810    IS IT TIME TO EJECT                  19150002
         PUT   PRINTER,PRTBFR      YES EJECT                            19200002
         LA    LINECTR,D59         SET CTR FOR NEW PAGE                 19250002
         ST    LINECTR,LINECNT     SAVE IT                              19300002
PCH00810 EQU   *                                                        19350002
         MVI   PRTBFR,WRTSP1       SET CNTRL CMD TO WRITE AND SPACE 1   19400002
         IC    WORKREG2,D0(WORKREG9)  GET MSG SIZE                      19450002
         BCTR  WORKREG2,D0         SUBTRACT 1 FOR MSG LENGTH BYTE       19470002
         BCTR  WORKREG2,D0         SUBTRACT 1 FOR EXECUTE MVC3          19500002
         EX    WORKREG2,MVC3       MOVE MSG TO BFR                      19550002
         PUT   PRINTER,PRTBFR      PRINT IT                             19600002
         BR    LINKREG1            RETURN                               19650002
         EJECT                                                          19700002
*  HERE IF DATASET FAILED TO OPEN. GIVES MSG IFD901I WITH DDNAME THEN   19750002
*  END RUN                                                              19800002
         SPACE                                                          19850002
PCHER900 EQU   *                                                        19900002
         LA    WORKREG9,OPENFAIL   GET MSG ADDRESS                      19950002
         MVC   OPENNAME(L8),D40(DCBREG) GET DD NAME THAT FAILED TO OPEN 20000002
         BAL   LINKREG1,PCH00800   GO GIVE MSG                          20050002
         B     PCH00980            RETURN TO SYSTEM                     20100002
         SPACE 3                                                        20150002
*  HERE IF AN INVALID INPUT CONTROL CARD WAS READ. GIVE MSG IFD900I     20200002
*  THEN GO READ NEXT CONTROL CARD                                       20250002
         SPACE                                                          20300002
PCHER910 EQU   *                                                        20350002
         LA    WORKREG9,NVALINPT   GET MSG ADDR OF IFD900I              20400002
         MVC   NVALCARD(L80),INAREA1  MOVE INVALID CARD TO MSG          20450002
         BAL   LINKREG1,PCH00800   GO GIVE MSG                          20500002
         B     PCH00200            GO GET NEXT INPUT CARD               20550002
         SPACE 5                                                        20600002
*  HERE IF THE OLT DOES NOT EXIST ON THE ACCESSED DATASET               20610002
         SPACE                                                          20620002
PCHER920 EQU   *                                                        20650002
         LA    WORKREG9,OLTNOTON   GET MSG ADDR FOR OLT NOT FOUND MSG   20700002
         MVC   NOOLTNAM(L8),FINDLIST   MOVE OLT/CDS NAME TO MSG         20750002
         BAL   LINKREG1,PCH00800   GO GIVE MSG                          20800002
         B     PCH00200            GO GET NEXT CONTROL CARD             20850002
         EJECT                                                          20900002
*  ROUTINE TO END THIS RUN                                              20920002
PCH00980 EQU   *                                                        20950002
         CLOSE (SYMCDSDD,,PRINTER,,INCARD,,INDASD,,OUTCARD)             21000002
         L     SAVEREG,D4(SAVEREG)      RETURN TO SYSTEM                21050002
         LM    R14,R12,D12(SAVEREG)                                     21100002
         BR    R14                                                      21150002
         EJECT                                                          21200002
*********************************************************************** 21250002
*                                                                     * 21300002
*                        CONSTANTS                                    * 21350002
*                                                                     * 21400002
*********************************************************************** 21450002
MVC1     MVC   FINDLIST(D0),CTRLINFO   MOVE INSTR FOR AN EXECUTE        21500002
MVC2     MVC   TXTDATA(D0),D0(DATAAREA) MVC FOR EXECUTE TXT DATA MOVE   21550002
MVC3     MVC   PRTBFR+D1(D0),D1(WORKREG9)   MOVE MSG TO PRT BFR         21600002
SAVEAREA DC    18F'0'              MY SAVE AREA                         21650002
RECRELAD DC    F'00'               TRACK ADDRESS OF RECORD TO READ NEXT 21700002
SWITCHA  DC    XL1'00'             SWITCH BYTE A                        21750002
TXTHDRSW EQU   SWITCHA                                                  21800002
SWCH2    EQU   SWITCHA                                                  21850002
SWCH3    EQU   SWITCHA                                                  21900002
SWCH4    EQU   SWITCHA                                                  21950002
SWCH5    EQU   SWITCHA                                                  22000002
SWCH6    EQU   SWITCHA                                                  22050002
SWCH7    EQU   SWITCHA                                                  22100002
SWCH8    EQU   SWITCHA                                                  22150002
INAREA1  DS    0CL80               CONTRL INPUT BFR                     22200002
CTRLID   DC    CL5' '              CONTRL IDENT                         22250002
CTRLINFO DC    CL8' '              OLT/CDS NAME                         22300002
CTRLPAD  DC    CL67' '             PADDING AREA NOT USED                22350002
FINDLIST DC    CL8' '              LIST FOR FIND MACRO                  22400002
DASDAREA DC    CL80' '             READ IN AREA FOR ALL OLT/CDS NON TXT 22450002
TXTHDRDC DS    0CL7                TEXT HDR RECORD IDENTERFIER          22500002
         DC    XL1'02'                                                  22550002
         DC    CL6'TXTHDR'                                              22600002
CTRLCON  DC    CL5'NAME '                                               22650002
SYMBOLIC DC    C'SYMBOLIC CDS'                                          22700002
TRTTABLE EQU   *                   TABLE FOR TRANSLATE AND TEST         22750002
         DC    9X'04'              CHARACTERS 'A' TO 'I'                22800002
         DC    7X'0C'              CHARACTERS BETWEEN 'I' AND 'J'       22850002
         DC    9X'04'              CHARACTERS 'J' TO 'R'                22900002
         DC    8X'0C'              CHARACTERS BETWEEN 'R' AND 'S'       22950002
         DC    8X'04'              CHARACTERS 'S' TO 'Z'                23000002
         DC    6X'0C'              CHARACTERS BETWEEN 'Z' AND '0'       23050002
         DC    10X'08'             CHARACTERS '0' TO '9'                23100002
         DC    6X'0C'              CHARACTERS AFTER '9'                 23150002
WRKAREA1 DC    F'0'                A WORK AREA                          23200002
TXTIDBFR DC    XL2'0000'           TXT ID SAVE AREA                     23250002
SEQBFR   DC    CL4' '              BUFFER FOR SAVING SEQ NUMS           23300002
SEQUPCHR DC    C'1234567890'       CHARACTERS TO UPDATE SEQ #           23350002
ENDCON   DS    0CL4                CONSTANT FOR FIRST 4 CHARS OF END    23400002
         DC    X'02'                 RECORD                             23450002
         DC    C'END'                                                   23500002
TXTCONST DS    0CL80               BASIC TXT RECORD FORMAT-OBJECT CARD  23550002
         DC    XL1'02'              PUNCHED BY THIS MODULE              23600002
         DC    CL4'TXT '           CARD IDENTIFIER                      23650002
         DC    XL3'000000'         LOC FOR RELATIVE ASM ADDR            23700002
         DC    CL2'  '             BLANKS                               23750002
         DC    XL2'0000'           BYTE COUNT OF DATA ON THIS CARD      23800002
         DC    CL2'  '             BLANKS                               23850002
         DC    XL2'0000'           ESDID (TXTID)                        23900002
         DC    CL56' '             TXT DATA FIELD                       23950002
         DC    CL8' '              COL 73-80 SEQ #                      24000002
         SPACE 2                                                        24050002
CON56    DC    XL2'0038'           CONSTANT OF DEC 56 FOR MAX TXT DATA  24100002
         SPACE 3                                                        24150002
PCHOKMSG DC    C' IFD902I XXXXXXXX WAS CORRECTLY PUNCHED'               24200002
         ORG   PCHOKMSG                                                 24250002
         DC    AL1(L'PCHOKMSG)                                          24300002
         ORG   PCHOKMSG+L'PCHOKMSG                                      24350002
MODOKNAM EQU   PCHOKMSG+9                                               24400002
         SPACE 3                                                        24450002
OPENFAIL DC    C' IFD901I XXXXXXXX DDCARD FAILED TO OPEN ****ERROR****' 24500002
         ORG   OPENFAIL                                                 24550002
         DC    AL1(L'OPENFAIL)                                          24600002
         ORG   OPENFAIL+L'OPENFAIL                                      24650002
OPENNAME EQU   OPENFAIL+9                                               24700002
         SPACE 3                                                        24750002
OLTNOTON DC    C' IFD905I XXXXXXXX MODULE NOT ON DATASET, PUNCH BYPASSEX24800002
               D'                                                       24850002
         ORG   OLTNOTON                                                 24900002
         DC    AL1(L'OLTNOTON)                                          24950002
         ORG   OLTNOTON+L'OLTNOTON                                      25000002
NOOLTNAM EQU   OLTNOTON+9                                               25050002
         SPACE 3                                                        25100002
NVALINPT DC    C' IFD900I INVALID INPUT, REJECTED -                    X25150002
                                                                       X25200002
                   '                                                    25250002
         ORG   NVALINPT                                                 25300002
         DC    AL1(L'NVALINPT)                                          25350002
         ORG   NVALINPT+L'NVALINPT                                      25400002
NVALCARD EQU   NVALINPT+35                                              25450002
         EJECT                                                          25500002
PRTBFR   DC    CL121' '            THE PRINT BUFFER                     25550002
LINECNT  DC    F'1'                PRINTER LINE COUNTER                 25600002
BLANKS   DC    CL4' '              4 BLANKS FOR A COMPARE               25650002
ESDCON   DS    0CL4                                                     25700002
         DC    XL1'02'                                                  25750002
         DC    CL3'ESD'                                                 25800002
REPCON   DS    0CL4                                                     25850002
         DC    XL1'02'                                                  25900002
         DC    CL3'REP'                                                 25950002
         EJECT                                                          26000002
SYMCDSDD DCB   LRECL=80,DDNAME=SYMSYM,DSORG=PO,BLKSIZE=3600,MACRF=R,   X26050002
               RECFM=UT                                                 26100002
INCARD   DCB   DDNAME=CNTRLIN,BLKSIZE=80,RECFM=F,LRECL=80,DSORG=PS,    X26150002
               MACRF=GM,EODAD=PCH00980                                  26200002
OUTCARD  DCB   DDNAME=PUNCHDD,BLKSIZE=80,RECFM=FB,LRECL=80,DSORG=PS,   X26250002
               MACRF=PM                                                 26300002
INDASD   DCB   LRECL=80,DDNAME=OLTCDSDD,MACRF=R,RECFM=UT,BLKSIZE=3600, X26350002
               DSORG=PO                                                 26400002
PRINTER  DCB   DDNAME=DIAGMSG,DSORG=PS,MACRF=PM,BLKSIZE=121,RECFM=FBM, X26450002
               LRECL=121                                                26500002
         IFDPATCH                                                       26550002
TXTBFR   DS    100CL36             BFR TO HOLD MAX TXT DATA BLOCK       26600002
         EJECT                                                          26650002
         DSECT                                                          26700002
OBJCRDM  DS    0CL80               BASIC OBJECT CARD FORMAT             26750002
OBJCRDID DC    XL1'02'                                                  26800002
         DC    CL3'XXX'                                                 26850002
         DS    CL72                                                     26900002
OBJSEQ#  DC    CL4' '                                                   26950002
         SPACE 5                                                        27000002
         ORG   OBJCRDM                                                  27050002
         DSECT                                                          27100002
TXTCARDM DC    XL1'02'             MAP OF A TXT CARD                    27150002
         DC    CL4'TXT '                                                27200002
TXTASMAD DC    XL3'000000'         REL ASSEMBLED ADDRESS                27250002
         DC    CL2'  '                                                  27300002
TXTDATCT DC    XL2'0000'           TXT DATA COUNT                       27350002
         DC    CL2'  '                                                  27400002
TXTESDID DC    XL2'0000'           TXT ESD IDENT (CSECT NUMBER)         27450002
TXTDATA  DC    CL56' '             TXT DATA                             27500002
         DC    CL4' '                                                   27550002
TXTSEQ#  DC    CL4' '              SEQ NUMBER                           27600002
         END                                                            27650002
./  ADD  SSI=70730043,NAME=IFDOLT99
         TITLE ' IFDOLT99  OLTEP''S EDITOR MODULE'                      00050002
IFDOLT99 CSECT                                                          00100002
*********************************************************************** 00150002
*                                                                     * 00200002
*                                 PROLOGUE                            * 00250002
*                                                                     * 00300002
*                                                                     * 00350002
*  STATUS:                                                            * 00400002
*          THIS IS THE FIRST VERSION OF THIS MODULE         NOV 4 1971* 00450002
*                                                                     * 00500002
*                                                                     * 00550002
*  FUNCTION:                                                          * 00600002
*          THE PURPOSE OF THIS MODULE IS TO CREATE A PARTITIONED      * 00650002
*          DATA SET (IF JOB DD CARD LABELS SET AS NEW), OR ADD        * 00700002
*          ENTRIES TO AN ALREADY CREATED PDS, (IF DDCARE LABELS       * 00750002
*          SET AS OLD). INPUT TO THIS MODULE MAY BE TAPE OR CARDS,    * 00800002
*          IN EITHER CASE THE 'OBJECT' DECK MODULES WILL BE LINK-     * 00850002
*          EDITED TO THE DATA SET IN A FORMAT REQUIRE BY OLTEPS       * 00900002
*          LOADER MODULE (IFDOLT12). THIS MODULE WILL NOT ALTER       * 00950002
*          THE FOLLOWING INPUT CARDS:                                 * 01000002
*                             1. ESD   FIRST CARD OF OBJ DECK         * 01050002
*                             2. RLD   RELOCATION DICTIONARY          * 01100002
*                             3. REP   REPAIR CARD                    * 01150002
*                             4. END   END OF MODULE INDICATOR        * 01200002
*                             5. CONTROL CARDS (NAME, SETSSI, SYMBOLIC* 01250002
*                                CDS)                                 * 01300002
*           HOWEVER, TEXT (TXT) CARDS WILL BE CHANGED BY THIS MODULE. * 01350002
*           WHEN A TEXT CARD IS READ BY IFDOLT99, THE TXT INFOR-      * 01400002
*           MATION WILL BE BLOCKED INTO SEGMENTS FROM 1 TO 3600 BYTES.* 01450002
*           ALSO, A TEXT HEADER CARD WILL BE GENERATED WHICH WILL     * 01500002
*           REPRESENT THE BLOCKED DATA (TXT). ALL  RECORDS WRITTEN    * 01550002
*           BY THIS MODULE WILL BE 80 BYTES IN LENGTH WITH EXCEPTION  * 01600002
*           TO THE BLOCK TEXT RECORDS.                                * 01650002
*                                                                     * 01700002
*                                                                     * 01750002
*  ENTRY POINTS:                                                      * 01800002
*           THE MAIN AND ONLY ENTRY POINT TO THIS MODULE IS IFDOLT99. * 01850002
*                                                                     * 01900002
*                                                                     * 01950002
*  INPUT:                                                             * 02000002
*           AS INPUT THIS MODULE WILL ACCEPT OBJECT DECKS ON A        * 02050002
*           CARD IMAGE  TAPE OR OBJECT DECKS ON CARDS. IF INPUT       * 02100002
*           IS FROM A CARD IMAGE TAPE GENERATED BY THE STAND-ALONE    * 02150002
*           SUPPORT PROCESSOR, TWO FILES WILL EXIST. THE FIRST        * 02200002
*           FILE WILL CONSIST OF THE ONLINE TESTS AND THE LOCAL       * 02250002
*           CONFIGURATION DATA SETS,(CDS) LOAD MODULES. THE           * 02300002
*           SECOND FILE MAY BE A NULL FILE OR ANOTHER CDS FILE        * 02350002
*           FOR THE REMOTE DEVICES CONFIGURATION.  THESE OBJECT       * 02410002
*           MODULES WILL BE WRITTEN ON TO THE DATA SET DESCRIBED      * 02470002
*           IN THE SYMSYM DD CARD. IF INPUT IS FROM                   * 02530002
*           THE CARD READER, THE SYMBOLIC CDS CONTROL CARD MUST BE    * 02600002
*           MANUALLY INSERTED BEFORE THE SYMBOLIC CDS LOAD MODULES    * 02650002
*           AND FOLLOWING THE OLT-LOCAL CDS LOAD MODULES. THIS        * 02700002
*           MODULE WILL ACCEPT LOAD MODULES INDIVIDUALLY OR IN        * 02750002
*           MULTIPLES. INPUT DATA WILL BE READ FROM THE DEVICE        * 02800002
*           SPECIFIED IN THE CNTRLIN DD CARD.                         * 02850002
*                                                                     * 02900002
*  OUTPUT:  THIS MODULE WILL OUTPUT MESSAGES TO THE OPERATOR CONSOLE  * 02950002
*           AND TO THE SYSTEM PRINTER (DEVICE ON DIAGMSG DD CARD).    * 03000002
*           OLTS AND CDS (LOCAL) MODULES WILL BE OUTPUTTED TO         * 03050002
*           THE DATA SET SPECIFIED ON THE OLTCDSDD DD CARD.           * 03100002
*           SYMBOLIC NAMED CONF DATA SETS WILL BE OUT-PUTTED          * 03110002
*           TO THE DATA SET SPECIFIED IN THE SYMCDSDD DD              * 03150002
*           CARD.                                                     * 03200002
*                                                                     * 03250002
*           THE FOLLOWING MESSAGES WILL BE PRINTED TO THE PRINTER     * 03300002
*           SPECIFIED ON THE DIAGMSG DD CARD.                         * 03350002
*                                                                     * 03400002
*           1.  IFD900I:  THIS MESSAGE WILL INDICATE A RECORD         * 03450002
*                         READ FROM THE INPUT DEVICE WAS NOT          * 03500002
*                         EXPECTED, AND THAT THE CARD WAS             * 03550002
*                         REJECTED.                                   * 03600002
*                                                                     * 03650002
*           2.  IFD901I:  THIS MESSAGE IS PRINTED WHEN A OPEN         * 03700002
*                         TO A DCB FAILS. THE MESSAGE WILL CONTAIN    * 03750002
*                         THE DD NAME FOR THE FAILING DCB.            * 03800002
*                                                                     * 03850002
*           3.  IFD902I:  THIS MESSAGE INDICATES THE MODULE           * 03900002
*                         WAS CORRECTLY ADDED/REPLACED IN THE         * 03950002
*                         DATA SET SPECIFIED.                         * 04000002
*                                                                     * 04050002
*           4.  IFD903I:  THIS MESSAGE IS OUTPUTTED WHEN A MODULE     * 04100002
*                         COULD NOT BE ADDED OR REPLACE ON THE        * 04150002
*                         DATA SET.  THE MESSAGE TEXT WILL INDICATE   * 04200002
*                         THE CAUSE OF THE ERROR                      * 04250002
*                         IN ALL CASES THE JOB WILL BE TERMINATED.    * 04300002
*                                                                     * 04350002
*                                                                     * 04400002
*           5.  IFD904I  THIS MESSAGE INDICATES AN ERROR IN THE       * 04402002
*                        OBJECT DECK SEQUENCE NUMBERS WAS FOUND.      * 04404002
*                        THE MODULE CONTAINING THE ERROR WILL         * 04406002
*                        NOT BE STOWED INTO THE DIRECTORY. THE        * 04408002
*                        MESSAGE WILL SHOW THE EXPECTED AND RECIEVED  * 04410002
*                        SEQUENCE NUMBERS; AND THE MODULES NAME WHICH * 04412002
*                        WAS NOT STORED.                              * 04414002
*                                                                     * 04416002
*                                                                     * 04418002
*           6.  IFD906I  THIS MESSAGE IS OUTPUT WHEN AN ERROR         * 04420002
*                        IN A REP CARD WAS DETECTED. THE CARD IS      * 04422002
*                        OUTPUTTED IN THE MESSAGE TEXT. ALSO,         * 04424002
*                        THE MODULE IS BYPASSED.                      * 04426002
*           7. IFD907I  THIS MESSAGE IS OUTPUTTED TO INDICATE         * 04428002
*                        THE DATA SET TO WHICH MODULES ARE TO BE      * 04430002
*                        ADDED.                                       * 04432002
*                                                                     * 04434002
*           8.  IFD908I  THIS MESSAGE IS OUTPUTTED TO INDICATE        * 04436002
*                        INPUT WAS NOT IN THE CORRECT ORDER.          * 04438002
*           THE FOLLOWING MESSAGE WILL BE OUTPUTTED TO THE OPERATOR   * 04450002
*           CONSOLE IF THE PRINTER DCB COULD NOT BE OPENED:           * 04500002
*                                                                     * 04550002
*           1.  IFD901I:  THIS MESSAGE WILL HAVE THE DD NAME          * 04600002
*                         OLTEP REQUIRES WHEN OPEN FAILED FOR         * 04650002
*                         THE PRINTER.                                * 04700002
*                                                                     * 04750002
*                                                                     * 05050002
*           THIS MODULE WILL RETURN A CODE IN REGISTER  R15           * 05100002
*                                                                     * 05150002
*                                                                     * 05200002
*  EXTERNAL ROUTINES:                                                 * 05250002
*           THIS MODULE WILL ISSUE THE FOLLOWING SYSTEM MACROS,       * 05300002
*                                                                     * 05350002
*           1.  OPEN    TO ALL DCBS DD CARDS REQUIRED                 * 05400002
*           2.  CLOSE   TO ALL DCBS OPENED                            * 05450002
*           3.  WRITE   TO DATA SET WHERE MODULES WILL RESIDE         * 05500002
*           4.  STOW    FOR EACH MODULE                               * 05550002
*           5.  PUT     TO PRINTER FOR MESSAGE OUTPUT                 * 05600002
*           6.  GET     TO RETRIEVE A RECORD                          * 05650002
*           7.  CHECK   FOR WRITE COMMAND                             * 05700002
*           8.  RDJFCB  TO INPUT DCB                                  * 05750002
*           9.  DCB     FOR ALL FILES                                 * 05800002
*          10.  DCBD    DSECT                                         * 05850002
*          11.  WTO     WHEN PRINTER DCB FAILS TO OPEN                * 05900002
*                                                                     * 05950002
*  EXITS NORMAL:                                                      * 06000002
*            ALL EXITS FROM THIS MODULE ARE MADE AT THE LABEL         * 06050002
*            GEN05000                                                 * 06100002
*                                                                     * 06150002
*  EXITS ERROR:                                                       * 06200002
*            ERROR EXITS FROM THIS MODULE ARE MADE AT THE LABEL       * 06250002
*            GEN05000                                                 * 06300002
*                                                                     * 06350002
*                                                                     * 06400002
*  TABLES AND WORKAREAS:                                              * 06450002
*            ALL TABLES AND WORKAREAS ARE INTERNAL TO THIS MODULE.    * 06500002
*            THESE AREAES ARE NOT REFERENCED BY ANY SYSTEM OR         * 06550002
*            OLTEP MODULE OTHER THAN IFDOLT99.                        * 06600002
*  FIX TO MSG SIZE AND FIX COMMENTS                             XM1330* 06650002
* PTM  3316 ADD V IF NECESSARY TO MSG IFD902I                   XM3316* 06660002
* APAR OX01911 RECOGNIZE 3420 TAPES AS VALID INPUT DEVICE      OX01911* 06670002
*********************************************************************** 06700002
         EJECT                                                          06750002
         SPACE 5                  SAVE G.P. REGS IN CALLER              06800002
*                                 ************************************* 06850002
*                                 *   REGISTER EQUATES DISPLACEMENTS  * 06900002
*                                 *   LOAD ADDRESS CONSTANTS AND MASKS* 06950002
*                                 ************************************* 07000002
HEX00    EQU   X'00'              USED TO RESET SWITCHS                 07050002
L0       EQU   0                                                        07100002
D0       EQU   0                  DISPLACEMENT OF ZERO                  07150002
ZERO     EQU   0                  REGISTER ZERO                         07200002
TTREG1   EQU   1                  SAVE TTR REGISTER                     07250002
D1       EQU   1                  DISPLACEMENT                          07300002
VIRTUAL  EQU   X'01'                   CAN OLT RUN IN VIRT       XM3316 07303002
LETTERV  EQU   C'V'                    LETTER V                  XM3316 07306002
POINTOK  EQU   X'01'              IF ON A POINT CAN BE ISSUED           07310002
*                                 WITHOUT HITTING THE DITECTORY         07320002
REPREAD  EQU   X'01'              WHEN ON A REP HAS BEEN READ           07323002
RLDREAD  EQU   X'02'              WHEN ON A RLD HAS BEEN READ           07326002
SCANREG  EQU   8                  USED IN CARD IDENTIFYING              07330002
HEX02    EQU   X'02'              USED TO FINF CTL CARDS                07340002
BCTREG   EQU   2                  USED IN SEQUENSE CHECKING             07350002
COMMON   EQU   2                  POINTER TO OLTEPS COMMON AREA         07400002
FIRSTCD  EQU   X'04'              IF ON FIRST CARD BEEN READ IN         07410002
D20      EQU   20                 DISPLACEMENT FIELD                    07420002
ENDJOB   EQU   X'02'              SWITCH FOR TOTAL END OF JOB           07450002
D2       EQU   2                                                        07500002
L2       EQU   2                  LENTH FIELD                           07550002
TWO      EQU   2                  BYTE COUNT                            07600002
THREE    EQU   3                  NUMBER OF DCB TO OPEN                 07650002
HEX03    EQU   X'03'                                                    07700002
LINECNT  EQU   3                  PAGE AND LIVE COUNT WORK REG          07750002
D4       EQU   4                  LNKAGE CONST                          07800002
FOUR     EQU   4                  DISP AND NO. BYTES                    07850002
TXTPTR   EQU   4                  POINTER TO TXT BUFFER AREA            07900002
WRTLINK  EQU   5                  BALR REGISTER                         07950002
D5       EQU   5                  DISPL FIELD                           08000002
SIX      EQU   6                  USED TO SC AN REP CARD                08050002
D6       EQU   6                                                        08100002
LINK     EQU   6                  BR REGISTER                           08150002
L7       EQU   7                                                        08200002
WORKREG1 EQU   7                  WORK REGISTER                         08250002
WORKRG1  EQU   WORKREG1                                                 08300002
MSGSIZRG EQU   7                  USED IN MSG EX INST                   08350002
L8       EQU   8                  LNGTH FIELD CONST                     08400002
DCBREG   EQU   8                  REGISTER FOR DCB WORK                 08450002
JFCBREG  EQU   WORKREG1           USED TO REF JFCB VIA DSECT            08470002
ADDER    EQU   8                  USED IN SEQUENSE CHECKING             08500002
L3       EQU   3                  LNGTH FIELD                           08550002
MSGADDR  EQU   8                  USED FOR MESSAGES ONLY                08600002
SLOT     EQU   9                  REG TO POINT DURING SCANN OF REP CD   08650002
ACCUMRG  EQU   9                  NUMBER OF BYTES IN TXTAREA REGISTER   08700002
WRTSP1   EQU   9                  CODE TO WRITE AND SPACE ONE LINE      08750002
SCANCNT  EQU   10                 WILL CONTAIN COUNT OF CHARS TO SCAN   08800002
D10      EQU   10                 DISPL FIELD                           08850002
BASEREG  EQU   11                 BASE REGISTER                         08900002
D12      EQU   12                 DISP LENFTH                           08950002
SAVEREG  EQU   13                 SAVE AREA POINTER                     09000002
D14      EQU   14                 DISPL FIELD                           09050002
EP       EQU   15                 WORKREGISTER                          09100002
STOWRC   EQU   15                 STOW RETURN CODE                      09150002
D17      EQU   17                                                       09200002
D16      EQU    16                                                      09250002
OPEN     EQU   X'10'                                                    09300002
D24      EQU   24                                                       09350002
D21      EQU   21                 DISPLACEMENT OF 21                    09370002
D25      EQU   25                 DISPLAC FOR TEXTID                    09400002
LASTPASS EQU   32                 MASK FOR LAST PASS SWITCH             09450002
D32      EQU   32                 CONSTANT OF 32                        09460002
D33      EQU   33                 CONSTANT OF 32                        09470002
D34      EQU   34                 USED TO MOVE MOD NAME                 09500002
D36      EQU   36                 USED IN MESSAGE MOVE                  09550002
HEX38    EQU   X'38'              NUMBER LINES PER PAGE                 09600002
D39      EQU   39                 DISPLACEMENT FIELD                    09620002
BLANK    EQU   X'40'              BLACK CHARACTER                       09650002
D46      EQU   46                 USED TO MOVE SEQ NO.                  09700002
HEX50    EQU   X'50'                                                    09750002
SAVETTRZ EQU   64                 MASK FOR SAVE TTR TEST                09800002
D68      EQU   68                 USED IN THEJFCB WORK RTN              09850002
D73      EQU   73                 DISPLACEMENT                          09900002
D76      EQU   76                                                       09950002
HEX80    EQU   X'80'              DISPLACEMENT CONST                    10000002
L118     EQU   118                                                      10050002
NEEDNAME EQU   128                MASK FOR NAME CARD REQUIREMENT        10100002
RESTORE  EQU   X'8B'              RESTORE CMD CODE                      10150002
ALL      EQU   255                MASK FOR SWITCH RESET                 10200002
C1       EQU   X'C1'              USED IN SCAN SUBROUTINE               10250002
C6       EQU   X'C6'              USED IN SCAN SUBROUTINE               10300002
F0       EQU   X'F0'              USED IN SCAN SUBROUTINE               10350002
HEXF0    EQU   X'F0'              CONSTANT OF HEX F0                    10370002
F9       EQU   X'F9'              USED IN SCAN SUBROUTINE               10400002
COMMA    EQU   C','                   USED IN SCAN SUBROUTINE           10450002
POUND    EQU   C'#'               ID S OF NEW OLTS                      10470002
         EJECT                                                          10500002
GEN00000 SAVE  (14,12),,IFDOLT99&SYSDATE SAVE MOD NAME AND DATE.        10550002
         BALR  BASEREG,ZERO       ESTABLISH ADDRESSABILITY              10600002
         USING *,BASEREG                                                10650002
         USING IHADCB,DCBREG      SET REG FOR DCB REFERENCES            10700002
         USING INFMJFCB,JFCBREG   USED TO FIND JFCB STUFF               10720002
         ST    SAVEREG,SAVEAREA+4 SAVE ADDRESS OF CALLERS SAVE AREA     10750002
*                                 IN MY SAVE AREA                       10800002
         LA    EP,SAVEAREA        GET ADDRESS OF MY SAVE AREA AND       10850002
         ST    EP,8(0,SAVEREG)    STORE IN CALLERS SAVE AREA            10900002
         LR    SAVEREG,EP         LOAD MY SAVE REG WITH ADDRESS         10950002
*                                 OF MY SAVE AREA                       11000002
         EJECT                                                          11001002
GEN00100 EQU   *                  DATA SET VERIFICATION SECTION         11002002
         LA    JFCBREG,JFCBAREA   SET PTR TO JFCB AREA                  11003002
         LA    BCTREG,2           SET BCT LOOP COUNT TO TWO             11004002
         SPACE 2                                                        11005002
GEN00110 EQU   *                  READ THE JFCB INTO WORKAREA           11006002
         RDJFCB  (OUTDASD,(OUTPUT))   READ THE JFCB                     11007002
         SPACE 2                                                        11008002
         CLC   JFCBDSNM(13),LINKLIB    IS THIS AN INVALID DATA SET      11009002
         BE    GEN00120           YES, GO END THE JOB WITH MSG 909I     11010002
         CLC   JFCBDSNM(12),SVCLIB     IS THIS AN INVALID DATA SET      11011002
         BE    GEN00120           YES, GO END THE JOB WITH MSG 909I     11012002
         CLC   JFCBDSNM(12),LPALIB     IS THIS AN INVALID DATA SET      11013002
         BE    GEN00120           YES, GO END THE JOB WITH MSG 909I     11014002
         LA    DCBREG,OUTDASD     SET PTR TO DATA SET CB                11015002
         MVC   DCBDDNAM,SYMCDSDD  MOVE IN DD NAME FOR SECOND PASS       11016002
         BCT   BCTREG,GEN00110    FALL THRU OR GO TO NEXT PASS          11017002
         MVC   DCBDDNAM,OUTDADID  MOVE IN DD NAME FOR OPEN              11018002
         B     GEN00130           GO OPEN THE DATA SETS                 11019002
         SPACE  3                                                       11020002
GEN00120 EQU   *                  ENTER HERE IF DATA SET IS INVALID     11021002
         SPACE 2                                                        11022002
         OPEN  (PRINTER,(OUTPUT)) OPEN PRINT DCB                        11023002
         SPACE 2                                                        11024002
         LA    DCBREG,PRINTER     GET THE DCB ADDR FOR OPEN CHECK       11025002
         BAL   LINK,ABORTCK       GO CHECK IF DCB OPENED SUCCESSFULLY   11026002
         MVC   BADLIB+D10(12),JFCBDSNM MOVE IN DS NAME                  11027002
         LA    MSGADDR,BADLIB     GET MESSAGE POINTER                   11028002
         LA    LINK,GEN05000      GET END OF JOB RTN ADDRESS            11029002
         LA    LINECNT,1          SET COUNT TO SKIP A PAGE              11030002
         B     GEN04000           GO ISSUE MESSAGE AND END THE JOB      11031002
GEN00130 EQU   *                  GO OPEN THE DCBS                      11032002
         EJECT                                                          11050002
         OPEN  (INCARD,INPUT,OUTDASD,(OUTPUT),PRINTER,(OUTPUT))         11100002
         SPACE 3                                                        11150002
GEN00200 EQU   *                  START LOOP THRU DCBS                  11200002
         MVI   SWITCHS,HEX00      RESET ALL SWITCHES BEFORE INITIAL     11250002
         MVI   SWITCH2,X'00'      ZERO OUT SWITCH                       11300002
         MVI   SWITCH3,HEX00      ZERO OUT ALL SWITCHES                 11320002
         LA    DCBREG,PRINTER     GET ADDRESS OF DCB TO BE CHECKED      11350002
         BAL   LINK,ABORTCK       GO CHECK DCB OPEN FLAGS AND RETURN    11400002
         LA    DCBREG,INCARD      GET ADDRESS OF DCB TO BE TESTED       11450002
         BAL   LINK,ABORTCK       GO CHECK DCB OPEN FLAGS AND RETURN    11500002
         LA    DCBREG,OUTDASD     GET ADDRESS OF DCB TO BE TESTED       11550002
         BAL   LINK,ABORTCK       GO CHECK DCB OPEN FLAGS AND RETURN    11600002
*                                 SCAN UNTIL FALL THRU.                 11650002
*                                 READ                                  11700002
         B     GEN00300           BRANCH TO GET A CARD ROUTINE          11750002
         SPACE 5                                                        11800002
ABORTCK  TM    DCBOFLGS,OPEN      DID THIS DCB OPEN SUCCESSFULLY        11850002
         BNO   GEN99990           GO TO ABORT ROUTINE                   11900002
         BR    LINK               RETURN TO NEXT DCB ADDRESS CHK        11950002
          EJECT                                                         12000002
GEN00300 EQU   *                  BEGIN INITAL PROCESSING               12050002
         NI    SWITCHS,LASTPASS   RESET ALL SWITCHES OTHER THAN         12150002
*                                 LAST PASS INDICATOR                   12200002
         XC    TXTADR,TXTADR      RESET TXT AREA PTR TO ZEROS           12250002
         LA    TXTPTR,TXTAREA     GET POINTER TO TXT BUFFER             12300002
         MVC   SEQSAVE,EBCD0001   SET SEQ CTR TO ONE                    12350002
         SPACE 5                                                        12550002
GEN00400 EQU   *                  GET A RECORD FROM THE INPUT (80 BYTE) 12600002
*                                 FILE AND HAVE PUT INTO OLTEP          12650002
         GET   INCARD,READAREA    WORKAREA FOR EXPLINATION.             12700002
         TM    SWITCH3,FIRSTCD    IS THIS THE FIRST CARD                12750002
         BO    GEN00410           NO, BRANCH AROUND MESSAGE             12755002
         OI    SWITCH3,FIRSTCD    TURN ON FIRST CARD READ SWITCH        12760002
         CLC   READAREA(12),SYMCDSID IS THIS A CONTROL CARD             12765002
         BE    GEN00410           SECOND FILE. YES SKIP MESSAGE         12770002
         LA    LINECNT,1          SET CNT TO SKIP A PAGE                12775002
         LA    MSGADDR,LOCALOLT   GET MESSAGE POINTER                   12780002
         BAL   LINK,GEN04000      GO ISSUE MESSAGE AND RETURN           12785002
         SPACE 1                                                        12790002
GEN00410 EQU   *                  CONTINUE PROCESSING                   12795002
         BAL   LINK,GEN00420      GO CHECK THE SEQUENSE NUMBERS         12800002
         B     GEN00450           GO CONTINUE PROCESSING IN FILE        12850002
         EJECT                                                          12900002
GEN00420 EQU   *                  THIS ROUTINE EXAMINES THE ORDER OF    12950002
*                                 THINGS.  THE SEQ NO. ARE CHECKED      13000002
*                                 TO INSURE STRICT ASCENDING ORDER MIT  13050002
*                                 OUT NO GAPS...                        13100002
*                                 THE FOLLOWING CARDS ARE NOT CHECKED   13150002
*                                    1. SETSSI CARDS                    13200002
*                                    2. NAME CARDS                      13250002
*                                    3. REP CARDS                       13300002
*                                    4. SYMBOLIC CDS CONTROL CARDS      13350002
*                                                                       13400002
         SPACE 5                                                        13450002
         CLC   READAREA(4),REPID  IS THIS A REP CARD                    13500002
         BE    GEN00440           YES, GO HANDLE REP CARD               13530002
         CLI   READAREA,HEX02     IS THIS AN ASSEMBLER OUTPUT CARD      13560002
         BE    GEN00422            YES, GO CHECK SEQ NUMBER             13590002
         LA    BCTREG,72          NO, SCAN CARD FOR CONTROL CARD IDS    13620002
         LA    SCANREG,READAREA   SET UP POINTER TO CARD AREA           13650002
         SPACE  2                                                       13680002
GEN00421 EQU   *                  SCAN RECORD FOR CONTROL CARD ISD      13710002
         CLC   D0(12,SCANREG),SYMCDSID IS THIS A SYMBOLIC CDS           13740002
         BE    GEN02030           CONTROL CARD.  YES, GO HANDLE         13770002
         CLC   D0(L7,SCANREG),SETSSI IS THIS A SETSSI CONTROL CARD      13800002
         BE    GEN00400           YES, GO GET NEXT CARD                 13830002
         CLC   D0(5,SCANREG),NAMEID IS THIS A NAME CARD                 13860002
         BE    GEN00400           YES, GO GET NEXT CARD                 13890002
         LA    SCANREG,D1(SCANREG) BUMP READ AREA POINTER               13920002
         BCT   BCTREG,GEN00421    CONTINUE SCANNING TIL ZERO            13950002
         B     GEN00500             BRANCH OUT IF RECORD IS NEITHER     13980002
*                                 A CONTROL CARD  NOR A ASSEMBLER       14010002
*                                 OUTPUT RECORD                         14040002
GEN00422 CLC   READAREA+D76(4),SEQSAVE DOES RECVD EQUAL EXPECTED        14070002
         BNE   GEN00430           NO, GO TO ERROR ROUTINE               14100002
         LA    BCTREG,FOUR        SET LOOP CNT TO FOUR                  14130002
GEN00423 LA    ADDER,SEQSAVE-1(BCTREG) SET TARGET  ADDRESS              14160002
         TR    D0(1,ADDER),TRTAB-240 TRNASLATE IT                       14190002
         CLI   D0(ADDER),C'0'     DID IT GO TO ZERO                     14220002
         BNE   GEN00424           NO, EXIT SUBROUTINE                   14250002
         BCT   BCTREG,GEN00423    YES, CONTINUE LOOP                    14280002
GEN00424 BR    LINK               EXIT SRQUENSE CHECKER                 14310002
         EJECT                                                          14400002
GEN00430 EQU   *                  THIS ROUTINE PUTS OUT MESSAGE         14450002
*                                 IFD904I TO IDENTIFY AN ERROR OCCURED  14500002
*                                 THE MESSAGE WILL CONTAIN BOTH THE     14550002
*                                 EXPECTED AND RECIEVED SEQUENSE NO.    14600002
*                                 THIS ROUTINE WILL ALSO SKIP THE REM   14650002
*                                 AINDER OF THE MODULE CONTAINING       14700002
*                                 THE SEQUENSE ERROR                    14750002
         LA    MSGADDR,SEQERROR   GET ADDRESS OF MESSAGE TO BE PRINTED  14800002
         MVC   SEQERROR+D24(4),SEQSAVE MOVE IN EXPECTED SEQ NO.         14850002
         MVC   SEQERROR+D34(4),READAREA+D76 MOVE IN RECD SEQ NUMBER     14900002
         MVC   SEQERROR+D46(8),NAMESAVE MOVE IN MODULE NAME             14950002
         XC    NAMESAVE,NAMESAVE  ZAP NAME FIELD CLEAN                  15000002
         BAL   LINK,GEN04000      GO PUT OUT THE MESSAGE AND RTN        15050002
         TM    SWITCH2,POINTOK    IS IT OK TO ISSUE A POINT MACRO       15060002
         BNO   GEN00432           NO, BYPASS ISSUING POINT MACRO        15070002
         POINT OUTDASD,TTSAVE     ISSUE POINT TO SAVE DASD SPACE        15090002
         B     GEN00432           GO CK CARD IN BUFFER                  15110002
         EJECT                                                          15150002
GEN00431 EQU   *                  LOOP THRU MODULE                      15200002
         GET   INCARD,READAREA    LOOP TO END OF THIS MODULE            15250002
GEN00432 EQU   *         CHECK CARD JUST READ IN BUFFER                 15270002
         CLC   READAREA(4),ESDID  IS THIS AN ESD CARD                   15300002
         BNE   GEN00431           NO GO GET NEXT CARD                   15350002
         CLC   READAREA+D14(2),HEX0001 IS THIS THE FIRST ESD OF NEXT    15400002
*                                 MODULE                                15450002
         BNE   GEN00431           NO, SKIP CARD                         15500002
         MVC   SEQSAVE,EBCD0002   YES PRIME SEQ CKR                     15550002
         B     GEN00700           GO PROCESS ESD CARD                   15600002
         EJECT                                                          15650002
GEN00440 EQU   *                  REP CARD SCANNER                      15700002
         TM    SWITCH3,RLDREAD    HAS AN RLD BEEN READ YET.             15710002
         BO    GEN01500           YES, GO HANDLE ORDER ERROR            15720002
         OI    SWITCH3,REPREAD    SET SWITCH INDICATING REP CARD READ   15730002
         SPACE 1                                                        15750002
         LA    SLOT,READAREA+D6   GET ADDRESS OF FIELD IN REP CARD      15800002
         LA    SCANCNT,SIX        SET COUNT TO NO. OF BYTES TO BE CHKED 15850002
         BAL   LINK,GEN00442      GO SCAN ADDR PORTION OF REP CARD      15900002
         SPACE 1                                                        15950002
         CLC   READAREA+D4(2),BLANKCOL CHECK FIELD FO TWO BLANKS        16000002
         BNE   GEN00446           IF NON-BLANK, TAKE BRANCH             16050002
         CLC   READAREA+D12(4),BLANKCOL   CHECK FOR FOUR BLKS           16100002
         BNE   GEN00446           IF NON-BLANK, TAKE BRANCH             16150002
         SPACE 1                                                        16200002
         LA    SLOT,READAREA+D16  SET PTR TO FIRST REP CHARACTER        16250002
GEN00441 LA    SCANCNT,FOUR       SET LOOP COUNT TO NO. OF BYTES        16300002
         BAL   LINK,GEN00442      GO SCAN FIELD AND RETURN IF OK        16350002
         B     GEN00444           GO CHECK FOR ENDING CONDITIONS        16400002
         SPACE 3                                                        16450002
GEN00442 EQU   *                  SCANNER PORTION OF RTN                16500002
         CLI   D0(SLOT),F9        IS CHAR POINTED TO BY SLOT G.T. A     16550002
         BH    GEN00446           HEX F9.  BRANCH IF YES                16600002
         SPACE 1                                                        16650002
         CLI   D0(SLOT),C1        IS CHAR LESS THAN A HEX C1            16700002
         BL    GEN00446           IF SO BRANCH OUT                      16750002
         SPACE 1                                                        16800002
         CLI   D0(SLOT),C6        IS CHAR BETWEEW A C1 AND C6           16850002
         BNH   GEN00443           IF LESS OR EQUAL ALL IS OK            16900002
         SPACE 1                                                        16950002
         CLI   D0(SLOT),F0        IF CHAR IS G. T. C6 THEN IS IT        17000002
*                                 BETWEEN F0 AND F9                     17050002
         BL    GEN00446           BRANCH IS ILLEGAL                     17100002
         SPACE 1                                                        17150002
GEN00443 EQU   *                                                        17200002
         LA    SLOT,D1(SLOT)      BUMP COUNT TO NEXT CHAR               17250002
         BCT   SCANCNT,GEN00442   GO CHECK NEXT CHAR OR FALL THRU       17300002
         BR    LINK               BRANCH IS CHARACTER IS AOK            17350002
         EJECT                                                          17400002
GEN00444 EQU   *                 END CONITION CHKER                     17450002
*                                 ON ENTRY, SLOT WILL POINT TO NEXT     17500002
*                                 CHARACTER TO BE CHECKED, THAT IS ,    17550002
*                                 A RUDDY BLANK, OR A COMMA.  A COMMA   17600002
*                                 WILL CAUSE THE SCAN TO CONTINUE       17650002
*                                 A BLANK WILL TERMINATE THE SCAN.      17700002
*                                 ANYTHING ELSE IS CONSIDERED AN ERROR  17750002
         CLI   D0(SLOT),COMMA     IS THIS A COMA                        17800002
         BE    GEN00445           BRANCH IF YES                         17850002
         CLI   D0(SLOT),BLANK     IS THIS A BLANK COL INDIC. END        17900002
         BE    GEN01000           IF YES BRANCH OUT OF SCANNER          17950002
         B     GEN00446           NO, ERROR EXIT FROM SCANNER           18000002
         SPACE 1                                                        18050002
GEN00445 EQU   *                  BUMP AND GO                           18100002
         LA    SLOT,D1(SLOT)      ADD ONE TO POINTER AND                18150002
         B     GEN00441           GO HANDLE NEXT REP AREA               18200002
         SPACE 1                                                        18250002
GEN00446 EQU   *                  ENTER HERE ON A REP CARD ERROR        18300002
         TM    SWITCH2,POINTOK    IS IT OK TO ISSUE POINT MACRO         18310002
         BNO   GEN00447           NO, BYPASS POINT MACRO                18320002
         SPACE  3                                                       18330002
         POINT OUTDASD,TTSAVE     SST TTRZ BACK TO ESD 0001 TIME        18350002
         SPACE   3                                                      18360002
GEN00447 EQU   *                  ENTER HERE ON NO POINT SITUATIONS     18370002
         LA    MSGADDR,IGNORECD   SET ADDRESS OF MESSAGE                18400002
         MVC   IGNORECD+D17(8),NAMESAVE GET MOD NAME BEING JUNKED       18450002
         MVC   IGNORECD+D36(80),READAREA MOVE IN ERRORED CARD FOR MSG   18500002
         XC    NAMESAVE,NAMESAVE  ZAP NAME TO NON PRINTABLES            18550002
         BAL   LINK,GEN04000      GO PRINT OUT ERROR MESSAGE            18600002
         B     GEN00431           GO SCAN TO NEXT VALID ENTRY           18650002
*                                 POINT, THAT IS, AN ESD CARD WITH A    18700002
*                                 001 IN COLUMNS                        18750002
         EJECT                                                          18800002
GEN00450 EQU   *                  CONTINUE PROCESSING INFILE            18850002
         CLC   READAREA(FOUR),ESDID IS THIS AN ESD CARD                 18900002
         BE    GEN00700           YES,GO CHECK FOR FIRST ESD READ       18950002
         SPACE 3                                                        19000002
         CLC   READAREA(FOUR),TXTID IS THIS A TEXT CARD                 19050002
         BE    GEN00800           YES, GO TO TXT CARD HANDLER           19100002
         SPACE 3                                                        19150002
         CLC   READAREA(FOUR),RLDID IS THIS AN RLD CARD                 19200002
         BNE   GEN00455           NO, CONTINUE PROCESSING.              19250002
         OI    SWITCH3,RLDREAD    SET RLDREAD INDICATOR                 19260002
         B     GEN01000           GO WRITE RECORD                       19270002
         SPACE 3                                                        19300002
GEN00455 EQU   *                  IS THIS AN END STOW SITUATION         19350002
         CLC   READAREA(FOUR),ENDID END CARD IN BUFFER.                 19370002
         BNE   GEN00500           NO, CHECK FOR SYMBOLIC CDS CARD       19400002
         SPACE 3                                                        19450002
         OI    SWITCHS,NEEDNAME   SET SWITCH FORCEING NEXT CARD         19500002
*                                 TO BE A NAME CARD                     19550002
         B     GEN01000           GO PROCESS THIS END CARD              19600002
         SPACE 3                                                        19650002
         EJECT                                                          19700002
GEN00500 EQU   *                  ENTER HERE WHEN AN UNEXPECTED         19750002
*                                 CARD WAS RECIEVED. THIS ROUTINE       19780002
*                                 WILL OUTPUT MSG IFD900I, FLUSH        19810002
*                                 THE CARD AND CONTINUE PROCESSING.     19840002
         LA    MSGADDR,BADCARD    GET ADDRESS OF MESSAGE                19870002
         MVC   D34(80,MSGADDR),READAREA MOVE CARD TO MESSAGE            19900002
         BAL   LINK,GEN04000      GO PRINT MESSAGE AND RETURN           19930002
         B     GEN00400           GO GET NEXT CARD                      19960002
         EJECT                                                          20050002
         SPACE 5                                                        20100002
GEN00700 EQU   *                  ESD CHECK RTN.                        20150002
         CLC   READAREA+D14(TWO),HEX0001 IS THIS THE                    20200002
*                                 FIRST ESD CARD                        20250002
         BNE   GEN01000           NO, GO HANDLE NORMALLY, WRITE CD.     20300002
GEN00710 EQU   *                  ENTER HERE WHEN NO STOW REQUIRED      20350002
         NI    SWITCH2,ALL-POINTOK          MODULES SWITCHS             20360002
         NI    SWITCH3,ALL-REPREAD-RLDREAD FOR THIS MODULE              20370002
         OI    SWITCHS,SAVETTRZ   YES, SET SW TO SAVE TTRZ              20400002
         MVI   STOWOK+45,BLANK         OLT RUNS IN REAL          XM3316 20405002
         CLI   READAREA+D32,POUND IS THIS A NEW OLT                     20410002
         BE    GEN00720           YES, GO GET NAME TO STOW              20420002
         CLI   READAREA+D21,HEXF0 IS THIS A NO. (NEWOLT)                20430002
         BL    GEN00720           YES, GO GET NAME TO BE STOWED         20440002
         MVC   NAMESAVE,READAREA+D32 MOVE NAME TO BE STOWED             20450002
         B     GEN00730           GO CHECK FOR INVALID NAME             20460002
         SPACE   3                                                      20470002
GEN00720 EQU   *                  ENTER HERE FOR NEW OLTS ONLY          20480002
         MVC   NAMESAVE,READAREA+D16 MOVE NAME TO BE STOWED             20490002
         MVC   USERINFO(1),READAREA+38  MOVE INTO DIRECTORY THE         20492002
*                                 INFO USED AT LOAD TIME TO DETERMINE   20494002
*                                 THE V=V OR V=R CAPABILITY             20496002
         TM    USERINFO,VIRTUAL        CAN OLT RUN IN VIRTUAL    XM3316 20496802
         BNO   GEN00730                NO, CONTINUE              XM3316 20497602
         MVI   STOWOK+45,LETTERV       YES, INDICATE IN MSG THAT XM3316 20498402
*                                      OLT CAN RUN IN VIRTUAL    XM3316 20499202
GEN00730 EQU   *                  OK NAME TO BE STORED.                 20500002
         CLI   NAMESAVE,BLANK     IS THIS A BLANK                       20507002
         BNE   GEN01000  CONTINUE PROCESSING - WRITE RECORD             20514002
         LA    MSGADDR,BADCARD   GET MSG POINTER                        20521002
         MVC   D34(80,MSGADDR),READAREA MOVE CARD TO BUFFER             20528002
         BAL   LINK,GEN04000      ISSUE MESSAGE                         20535002
         B     GEN00431           GO SCAN TO NEXT ESD CARD.             20542002
         EJECT                                                          20550002
GEN00800 EQU   *                  TEXT CARD ROUTINE                     20600002
         TM    SWITCH3,REPREAD+RLDREAD    HAS A REP OR RLD BEEN READ    20610002
         BNZ   GEN01500           IF EITHER IS ON AN ERROR IS HERE      20620002
         CLC   READAREA+D10(L2),HEX0000 IS THE COUNT OF TXT BYTES       20650002
*                                 ZERO                                  20700002
         BE    GEN00400           YES, GO GET NEXT CARD                 20750002
*                                 THE DATA (TXT) COUNT IS NOT ZERO      20800002
         CL    TXTPTR,TXTADSV     IS THIS FIRST TXT CARD                20850002
         BE    GEN00820           YES, GO SETUP TXT HEADER              20900002
         CLC   TXTADR+D1(THREE),READAREA+D5 SHOULD THIS CARD GO         20950002
*                                 INTO OUTDASD BUFFER                   21000002
         BNE   GEN00830           IF A HOLE OR NEG REF, GO WRITE REVORD 21050002
         SPACE 2                                                        21100002
         CLC   TEXTID(2),READAREA+D14 ARE THE TEXT ID S THE SAME        21150002
         BNE   GEN00830           NO, GO WRITE TEXT HRD AND BUFFER      21200002
         SPACE 2                                                        21250002
GEN00810 EQU   *                  TEXT BUFFER MANIPULATOR SECTION       21300002
         MVC   TEXTID(2),READAREA+D14  SAVE THE TEXT ID FIELD   XM1330  21350002
         LH    ACCUMRG,READAREA+D10  GET DATA CNT                       21400002
         LR    WORKRG1,ACCUMRG    SAVE IT                               21450002
         AH    ACCUMRG,DATACNT+1                                        21500002
         CL    ACCUMRG,SIZETXT     SHOULD I WRITE IT                    21550002
         BH    GEN00830           YES, GO WRITE                         21600002
GEN00815 EQU   *                  ENTER HERE FROM HOLE FILLER           21650002
         STH   ACCUMRG,DATACNT+1  GET ACCUMULATED USED BUFFER COUNT     21700002
         BCTR  WORKREG1,ZERO      SUBTRACT ONE FOR EX MOVE              21750002
         EX    WORKREG1,DATAMVC   EX MVC DATA INTO BUFFER               21800002
         LA    TXTPTR,D1(WORKREG1,TXTPTR) BUMP BUFFER POINTER           21850002
*                                 TO NEXT AVAILABLE POINTER             21900002
         MVC   TXTADR+D1(L3),READAREA+D5  GET RELATIVE ASSEMBLED        21950002
*                                 ADDRESS FOR THIS CARD.                22000002
         L     ACCUMRG,TXTADR     OBTAIN BEGINNING REL. TXT ASSMBLED    22050002
*                                 ADDRESS                               22100002
         LA    ACCUMRG,D1(ACCUMRG,WORKREG1) BUMP ASSM ADDR TO WHERE     22150002
*                                 THE NEXT TXT BYTE SHOULD OCCUR        22200002
         ST    ACCUMRG,TXTADR     SAVE THIS FOR NEXT RECORD PLACEMENT   22250002
         B     GEN00400           GO GET NEXT RECORD                    22300002
         SPACE 5                                                        22350002
GEN00820 EQU   *                  CLEAN-UP COUNTS FIRST TXT CD RTN      22400002
         XC    DATACNT,DATACNT    RESET THE COUNT                       22450002
         MVC   DATAADRS,READAREA+D5 SET ADDR OF FIRST BYTE OF TXT       22500002
*                                 DATA IN TXT HEADER CARD               22550002
         B     GEN00810           GO PROCESS CARD                       22600002
         SPACE 5                                                        22650002
GEN00830 EQU   *                  HEADER WRITE RTN                      22700002
         BAL   LINK,GEN00900      GO WRITE BOTH TXT HEADER              22750002
*                                 AND TXT INFORMATION BECAUSE CARD      22800002
         XC    DATACNT,DATACNT     SET DATA COUNT IN TXTHDR REC TO ZIP  22850002
         MVC   DATAADRS,READAREA+D5 SET NEW ADDRESS             XM1330  22900002
         B     GEN00810           AND THEN GO HANDLE CARD               22950002
         EJECT                                                          23000002
GEN00900 EQU   *                  PREPARE TO WRITE A TXT HDR RECORD     23050002
         LA    WORKRG1,HEX50      GET REC SIZE FOR WRITE                23100002
         STH WORKRG1,GENDECB+D6   PUT SIZE INTO MACRO                   23150002
         LA    WORKRG1,TXTHDR     GET ADDRESS OF AREA TOBE WRITTEN      23200002
         MVC   TXTHDR+D25(2),TEXTID PLACE TEXT ID  INTO TXTHRD          23250002
         ST    WORKRG1,GENDECB+D12 STORE ADDRESS INTO WRITE MACRO       23300002
         BAL   WRTLINK,GEN00920   GO WRITE TEXT HEADER RECORD ON DASD   23350002
         SPACE 5                                                        23400002
         MVC   GENDECB+D6(2),DATACNT+1  GET SIZE OF TXT REC TO BE       23450002
*                                 WRITTEN                               23500002
         MVC   GENDECB+D12(4),TXTADSV MOVE ADDRESS TO MACRO             23550002
GEN00910 EQU   *                  RESET POINTER                         23600002
         LA    TXTPTR,TXTAREA     SET POINTER TO BEGINNING OF TEXT      23650002
*                                 OUTPUT BUFFER.                        23700002
         XC    TXTADR,TXTADR      ZERO OUT ADDR OF NEXT AVAIL           23750002
*                                 BYTE IN BUFFER AREA                   23800002
         BAL   WRTLINK,GEN00920   GO WRITE RECORD ON DASD               23850002
         BR    LINK               CONTINUE PROCESSING RECORD            23900002
         SPACE  5                                                       23950002
GEN00920 EQU   *                  IO ROUTINE                            24000002
         WRITE GENDECB,SF,OUTDASD,0,0  CAUSE CD TO WRITE RECORD         24050002
*                                 ONTO OUTPUT DADS FILE.                24100002
         CHECK GENDECB            WAIT FOR COMPLETION OF I/O OPERATION  24150002
         OI    SWITCH2,POINTOK    SET SW TO ALLOW A POINT               24170002
         BR    WRTLINK            RETURN ON BALR TO CALLER              24200002
         SPACE 5                                                        24250002
GEN01000 EQU   *                  HANDLE ESD CARD OTHí THAN FIRST       24300002
*                                 HANDLE END CARD                       24350002
*                                 HANDLE RLD CARD                       24400002
*                                 HANDLE REP CARD                       24450002
         CL    TXTPTR,TXTADSV     WAS THERE ANY INFORMATION TO BE       24500002
*                                 WRITTEN BEFORE THIS CARD.             24550002
         BE    GEN01010           NO, BYPASS WRITE                      24600002
         BAL   LINK,GEN00900      YES, GO WRITE OUT TXT ACCUMULATED     24650002
         SPACE 3                                                        24700002
         SPACE 2                                                        24750002
GEN01010 EQU   *                  PREPARE TO WRITE RECORD OTHER         24800002
*                                 THEN TXT RECORD                       24850002
         LA    WORKRG1,READAREA   GET ADDRESS OF AREA TO BE WRITTEN     24900002
         ST    WORKREG1,GENDECB+D12    MOVE ADDRESS TO MACRO            24950002
         LA    WORKRG1,HEX50      GET COUNT OF DATA TO BE WRITTEN       25000002
         STH   WORKRG1,GENDECB+D6 MOVE COUNT TO MACRO                   25050002
         BAL   LINK,GEN00910      GO WRITE RECORD                       25100002
         TM    SWITCHS,NEEDNAME   CAN A STOW BE DONE                    25150002
         BO    GEN03000           YES GO STOW MODULE TO DIRECTORY       25200002
         TM    SWITCHS,SAVETTRZ   SHOULD A NOTE BE ISSUED               25250002
         BNO   GEN01011           NOT A ESD 001 NO NOTE NEEDED          25300002
         NOTE  OUTDASD            SET FOR POINT IF ERROR SHOWS          25350002
         ST    TTREG1,TTSAVE      SAVE TTRZ OF NEXT WRITE               25400002
         NI    SWITCHS,ALL-SAVETTRZ  SET SW OFF FOR NEXT READ           25450002
GEN01011 EQU   *                  ENTER HERE IF NO NOTE REQ.            25500002
         B     GEN00400           GO GET NEXT INPUT RECORD              25550002
         SPACE 2                                                        25555002
GEN01500 EQU   *                  THIS ROUTINE IS ENTERED WHEN A        25560002
*                                 CARD WAS OUT OF ORDER.                25565002
         LA    MSGADDR,ORDERERR   GET MSG POINTER                       25570002
         MVC   ORDERERR+D21(8),NAMESAVE MOVE NAME TO MESSAGE            25575002
         MVC   ORDERERR+D39(80),READAREA MOVE BAD CARD TO MESSAGE .     25580002
         BAL   LINK,GEN04000      GO ISSUE MESSAGE AND RETURN           25585002
         B     GEN00431           GO TO NEXT MODULE FINDER              25590002
         EJECT                                                          25600002
GEN02030 EQU   *                  START CDS FILE PROCESSING             25650002
GEN02031 EQU   *                                                        25700002
         CLOSE OUTDASD            CLOSE OLT FILE                        25750002
         SPACE   2                                                      25800002
         LA    DCBREG,OUTDASD     GET ADDR OF DCB FOR OPEN CHK AND      25850002
         MVC   DCBDDNAM,SYMCDSDD  MOVE IN DD NAME FOR SECOND FILE       25900002
*                                 PRIOR TO OPENING                      25950002
         OI    SWITCHS,LASTPASS        SET LAST PASS SW          X03008 25970002
         OPEN  (OUTDASD,(OUTPUT)) OPEN NEW DATA SET FOR ODS             26000002
         TM    DCBOFLGS,OPEN      DID NEW DATA SET OPEN                 26050002
         BNO   GEN99990           GO TO ABORT ROUTINE                   26100002
         OI    SWITCHS,LASTPASS   SET LAST PASS SWITCH                  26150002
         LA    MSGADDR,SYMDATAS   GET MESSAGE ADDRESS                   26200002
         LA    LINECNT,1          SET NEW PAGE INDICATOR                26300002
         BAL   LINK,GEN04000      GO PRINT OUT THE MESSAGE              26350002
         MVI   PRTBUFF,HEX03      SET MACHINE CODE TO SKIP A LINE       26400002
         XC    PRTBUFF+D1(L'PRTBUFF-1),PRTBUFF+D1 CLEAR OUT BUFFER      26450002
         PUT   PRINTER,PRTBUFF                                          26500002
         MVC   SEQSAVE,EBCD0001   RESET SEQ COUNTER TO FIRST CARD       26510002
         NI    SWITCH2,POINTOK    TURN OFF POINT OK SW                  26520002
         NI    SWITCHS,ALL-SAVETTRZ-NEEDNAME TURN OFF TTRZ AND STOW SW  26530002
         B     GEN00400           GO PROCESS THE RUDDY FILE             26550002
         SPACE 2                                                        26600002
         SPACE 3                                                        26650002
         EJECT                                                          26700002
GEN03000 EQU   *                  UPDATE DIRECTORY                      26750002
         MVC   STOWNAME,NAMESAVE                         STOW  NAME     26800002
         NI    SWITCHS,ALL-NEEDNAME  TURN OFF NAME REQUIREMENT          26850002
         STOW  OUTDASD,STOWCON,R  STOW NAME INTO DIRECTORY ON DASD      26900002
         LTR   STOWRC,STOWRC      DID STOW TAKE                         26950002
         LA    MSGADDR,STOWOK     GET MSG ADDRESS FOR SUCCESS           27000002
         MVC   STOWOK+36(9),REPCON   MOVE IN REPLACED CONSTANT          27050002
         BZ    GEN03010           YES, PRINT OUT MSG.                   27100002
         LA    WORKRG1,8          GET POSSIBLE RETURN CODE              27150002
         CR    WORKRG1,STOWRC       WAS MODULE REPLACED                 27200002
         BNE   GEN03005           ERROR MSG                             27250002
         MVC   STOWOK+36(9),ADDCON   MOVE IN ADDED CONSTANT             27300002
         LA    MSGADDR,STOWOK     GET MSG ADDRESS FOR SUCCESS           27350002
         B     GEN03010           YES, PRINT OUT MSG.                   27400002
GEN03005 EQU   *                  ERROR                                 27450002
         OI    SWITCH2,ENDJOB     SET BAIL OUT SWITCH                   27500002
         LA    WORKRG1,D4(WORKRG1)  BUMP REG TO X'0C'                   27550002
         CR    WORKREG1,STOWRC    IS RETURN CODE A X'0C'                27600002
         BE    GEN03006           YES GO HANDLE FULL DIRECTORY COND     27650002
         LA    MSGADDR,PERMIOER   GET MESSAGE ADDRESS                   27700002
         B     GEN03010           GO OUT THE MSG NAME                   27750002
GEN03006 EQU   *                  HANDLE STOW ERRORS                    27800002
         LA    MSGADDR,DIRTFULL   SET UP MESSAGE INDICATING ERROR       27850002
         SPACE   2                                                      27900002
GEN03010 EQU   *                  FAILURE                               27950002
         MVC   D12(L8,MSGADDR),STOWNAME MOVE NAME OF MODULE             28000002
         XC    NAMESAVE,NAMESAVE  CLEAR NAME TO ZEROS                   28010002
         NI    SWITCH2,ALL-POINTOK  TURN OFF SWITCH ALLOWING POINT      28020002
         BAL   LINK,GEN04000      INTO OUT-PUT MSG AND GO               28050002
*                                 PRINT IT OUT                          28100002
         TM    SWITCH2,ENDJOB     IS THIS JOB DONE                      28150002
         BO    GEN05000           YES, PACK IT IN                       28200002
         MVC   SEQSAVE,EBCD0001   RESET THE SEQ COUNT TO ONE            28250002
         B     GEN00400           GO GET NEXT RECORD                    28300002
         EJECT                                                          28350002
GEN04000 EQU   *                  SET UP FOR LINE PRINTING              28400002
         MVI   PRTBUFF+D1,BLANK   BEGIN CLEARING BUFFER TO BLANKS       28450002
         MVC   PRTBUFF+D2(L118),PRTBUFF+D1 CLEAR REMAINDER OF BUFFER    28500002
         MVI   PRTBUFF,RESTORE    SET BYTE FOR NEW PAGE                 28550002
         BCT   LINECNT,GEN04010   DECREMENT UNTIL ZIP, THEN             28600002
         PUT   PRINTER,PRTBUFF    SKIP TO NEXT PAGE                     28650002
*                                 GET NEW PAGE                          28700002
         LA    LINECNT,HEX38      SET COUNT TO 56 LINES PER             28750002
*                                 PAGE                                  28800002
GEN04010 EQU   *                  SET CARRIAGE CONTROL                  28850002
         MVI   PRTBUFF,WRTSP1     TO WRITE AND SKIP ONE LINE            28900002
GEN04020 EQU   *                  SET UP MSG TO BE PRINTED              28950002
         IC    MSGSIZRG,D0(MSGADDR)  GET SIZE OF MESSAGE                29000002
         BCTR  MSGSIZRG,ZERO        DECREMENT OF MSG BY  1              29050002
*                                 FOR EX MVC                            29100002
         EX    MSGSIZRG,MVCPRTBF  MOVE MSG INTO PRINT BUFFER VIA EX     29150002
         XR    MSGSIZRG,MSGSIZRG  ZERO OUT MSG LNG REG                  29200002
         PUT   PRINTER,PRTBUFF    WRITE A LINE                          29250002
         BR    LINK               RETURN ON BALR                        29300002
         SPACE 3                                                        29350002
         EJECT                                                          29400002
GEN05000 EQU   *                  EODAD ROUTINE                         29450002
         CLOSE (OUTDASD,,PRINTER,,INCARD) PACK IT IN                    29500002
         L     SAVEREG,D4(SAVEREG) EXIT LINKAGE                         29550002
         SPACE 3                                                        29600002
         RETURN (14,12),T,RC=0    EXIT MODULE                           29650002
         EJECT                                                          29700002
GEN06000 EQU   *                  END OF FILE ROUTINE                   29750002
*                                 THIS ROUTINE GET CTL ON END OF DATA   29800002
*                                 FOR CARD INPUT ONCE AND TWICE FOR     29850002
*                                 TAPE INPUT. FOR CARD INPUT THE RUN    29900002
*                                 IS COMPLETE                           29950002
*                                 FOR TAPE A READ JFCB IS ISSUED TO     30000002
*                                 BUMP THE FILE SEQ NO. AND AN OPEN     30050002
*                                 TYPE=J IS ISSUES TO THE TAPE.         30100002
*                                 TE                                    30150002
*                                 THE TAPE WAS 'CLOSED' VIA CLOSE WITH  30200002
*                                 A LEAVE PARAMETER                     30250002
*                                 AFTER THE SECOND EOD RTN IS ENTERED   30300002
*                                 THE RUN IS COMPLETE                   30350002
         TM    SWITCHS,LASTPASS   IF THE SWITCH IS ON                   30450002
         BO    GEN05000           GO TO END THE JOB AS FILE IS EMPTY    30500002
         LA    WORKRG1,INCARD     GET ADDRESS IF DCB FOR INPUT FILE     30550002
         MVC   ANSWER(1),D17(WORKRG1) GET DEV TYPE                      30600002
         NI    ANSWER,ALL-3       ZAP OUT UNUSED BITS           OX01911 30650002
         CLI   ANSWER,HEX80       IS INPUT DEVICE A TAPE                30700002
         BNE   GEN05000           NO, GO TO END THE JOB                 30750002
         SPACE  4                                                       30800002
         CLOSE  (INCARD,LEAVE)    CLOSE THE RUDDY FILE                  30900002
         SPACE 2                                                        30950002
         RDJFCB (INCARD,INPUT)    READ JOB FILE CTL BLK AND ALTER IT    31000002
         SPACE 2                                                        31050002
         LA    JFCBREG,JFCBAREA   GET POINTER TO JFCB                   31070002
         LH    COMMON,JFCBFLSQ    PICK UP THE FILE SEQUENSE NUMBER      31090002
         LA    COMMON,D1(COMMON)  AND ADD ONE TO IT FOR                 31110002
         STH   COMMON,JFCBFLSQ    THE SECOND FILE PROCESS               31130002
         MVI    EOV,HEX00         TURN OFF TAPE CTR ROUTINE    @ZA08990 31135037
         L      COMMON,#TAPES     GET NUMBER OF TAPES IN FILE  @ZA08990 31140037
         STH    COMMON,JFCBVLSQ   PUT IT INTO JFCB             @ZA08990 31145037
         SPACE 1                                                        31150002
         SPACE  4                                                       31200002
         OPEN  (INCARD,INPUT),TYPE=J    OPEN SECOND FILE                31250002
         OI    SWITCHS,LASTPASS   SET END INDICATOR FOR NEXT PASS       31300002
         SPACE 4                                                        31350002
         LA    DCBREG,INCARD      GET PTR TO DCB                        31400002
         TM    DCBOFLGS,OPEN      DID THE FILE OPEN                     31450002
         BNO   GEN99990           NO, PACK IN THE JOB                   31500002
         B     GEN02031           GO, PROCESS SECOND FILE               31550002
GEN07000  EQU    *                                             @ZA08990 31553037
*                                 THIS ROUTINE GETS CONTROL    @ZA08990 31556037
*                                 AT EACH END OF VOLUME IN     @ZA08990 31559037
*                                 FILE 1 OF AN INPUT TAPE. IT  @ZA08990 31562037
*                                 COUNTS THE NUMBER OF TAPES IN         31565037
*                                 FILE 1. THIS COUNT IS USED BY         31568037
*                                 THE END OF FILE ROUTINE TO   @ZA08990 31571037
*                                 UPDATE THE JFCB SO THAT THE  @ZA08990 31574037
*                                 CORRECT TAPE IS USED TO      @ZA08990 31577037
*                                 OPEN FILE 2.                 @ZA08990 31580037
         L     COMMON,#TAPES      GET # OF TAPES SO FAR        @ZA08990 31583037
         LA    COMMON,D1(,COMMON) INCREMENT IT                 @ZA08990 31586037
         ST    COMMON,#TAPES      SAVE FOR EOF ROUTINE         @ZA08990 31589037
         BR    14                 TO PROCESS NEXT TAPE         @ZA08990 31592037
         EJECT                                                          31600002
GEN99990 EQU   *                  THIS ROUTINE GETS CONTROL WHEN        31650002
*                                 A DCB FAILS TO OPEN, IF THE DCB       31700002
*                                 WHICH FAILS TO OPEN IS THE PTINT      31750002
*                                 DCB, A 'WTO' MACR IS ISSUED TO        31800002
*                                 THE OPERATORS CONSOLE. IF THE         31850002
*                                 DCB IS OTHER THAN TO PRINT DCB        31900002
*                                 MESSAGE 'IFD901I' IS ISSUED           31950002
*                                 TO THE PRINTER WITH THE DD NAME       32000002
*                                 CORRESPONDING TO THE FAILED DCB       32050002
*                                 IN THE MESSAGE.                       32100002
         LA    LINK,GEN05000      SET RETURN REGISTER                   32150002
         LA    COMMON,PRINTER     GET ADDRESS OF PRINTDD DCB            32200002
         CR    DCBREG,COMMON      IS THIS FAILING DCB                   32250002
         BNE   GEN99991           DCB.  NO, GO CHK INPUT DCB            32300002
         SPACE  2                                                       32350002
         WTO   ' IFD901I    DIAGMSG DDCARD FAILED TO OPEN' ISSUE MSG    32400002
         B     GEN05000           GO END THE JOB                        32450002
         SPACE   2                                                      32500002
GEN99991 EQU   *                  CHECK INPUT DD DCB                    32550002
         LA    COMMON,INCARD      GET ADDR OF INCARD DCB                32650002
         CR    DCBREG,COMMON      IS THIS FAILING DCB                   32700002
         LA    MSGADDR,FAILDCB    GET ADDRESS OF MESSADGE       X03008  32760002
         BNE   GEN99992           NO, GO CHECK OUTDASD DCB              32770002
         MVC   D12(L8,MSGADDR),INPUTID MOVE IN DD NAME                  32800002
         B     GEN04000           GO ISSUE MESSAGE                      32850002
         SPACE   2                                                      32900002
GEN99992 EQU   *                  CHECK FOR CORRECT DD NAME             32950002
         TM    SWITCHS,LASTPASS   IS THIS THE SYMBOLIC DCB              33000002
         BNO   GEN99993           NO, USE OUTDADA1 AS DDNAME            33050002
         MVC   D12(L8,MSGADDR),SYMCDSDD MOCE IN DDNAME                  33100002
         B     GEN04000           GO PUT OUT MESSAGE                    33150002
         SPACE  2                                                       33200002
GEN99993 EQU   *                  MOVE IN DD NAME                       33250002
         MVC   D12(L8,MSGADDR),OUTDADID MOVE DD NAME TO MSG             33300002
         B     GEN04000           GO ISSUE MESSAGE                      33350002
         SPACE  3                                                       33400002
MVCPRTBF MVC   PRTBUFF+D1(ZERO),D1(MSGADDR) MOVE MSG INTO BUFFER        33450002
DATAMVC   MVC  D0(L0,TXTPTR),READAREA+16  MOVE DATA TO BUFFER           33500002
         SPACE 3                                                        33550002
ANSWER   DC    CL1' '             WORK AREA IN JFCB RTN                 33600002
         DS    0F                 FORCE BOUNDARY                        33650002
SWITCH2  DC    C' SWITCH2'                                              33700002
SWITCHS  DC    C' SWITCHS'        SWITCHS FOR MODULE                    33750002
SWITCH3  DC    C' SWITCH3'        INTERNAL SWITCHS                      33770002
HEX0001  DC    H'0001'                                                  33800002
HEX0000  DC    XL2'0000'                                                33850002
ESDID    DS    0CL4               SET SYMBOLIC FOR ADDR                 33900002
         DC    X'02'              SET 0-9-12                            33950002
         DC    C'ESD'             SET ESD FOR COMPARE                   34000002
TXTID    DS    0CL4               SET SYMBOLIC FOR ADDR                 34050002
         DC    X'02'              SET 0-9-12                            34100002
         DC    C'TXT'             SET TXT FOR COMPARE                   34150002
REPID    DS    0CL4               SET SYMBOLIC FOR ADDR                 34200002
         DC    X'02'              SET CODE                              34250002
         DC    C'REP'             SET REP FOR COMPARE                   34300002
RLDID    DS    0CL4               SET SYMBOLIC FOR ADDR                 34350002
         DC    X'02'              SET CODE                              34400002
         DC    C'RLD'             SET RLD FOR COMPARE                   34450002
ENDID    DS    0CL4               SET SYMBOLIC FOR ADDR                 34500002
         DC    X'02'              SET CODE                              34550002
         DC    C'END'             SET END FOR COMPARE                   34600002
NAMEID   DC    C' NAME'           SET NAME FOR COMPARE                  34650002
         DS    0F                                                       34700002
         SPACE 2                                                        34750002
TTSAVE   DC    F'0'               SAVE THE TTRZ HERE                    34800002
SEQSAVE  DC    F'0'               SAVE THE SEQUENCE NO. HERE            34850002
TRTAB    DC    C'1234567890'      TRANSLATE TABLE FOR A SEQ CHECKER     34900002
         SPACE 2                                                        34950002
         DS    0F                 FORCE BOUNDARY                        35000002
TXTADR   DC    F'0'               ADDRESS OF NEXT BYTE IN BUFFER        35050002
TXTADSV  DC    AL4(TXTAREA)                                             35100002
SIZETXT  DC    AL4(3600)                                                35150002
TXTHDR   DS    0CL80              SET SYMBOLIC FOR ADDRESSING           35200002
         DC    X'02'              CODE                                  35250002
         DC    C'TXTHDR'          SET NAME/TYPE OF RECORD               35300002
         DC    CL9' VS OLTEP'     THIS CON WILL BE 'VS TOLTEP' -        35350002
         DC    X'02'              IF TOLTEP UPDATE THE MOD              35400002
DATAADRS DC    AL3(0)             SET HDR NAMES FOR                     35450002
         DC    AL1(32)                                                  35500002
DATACNT  DC    AL3(0)             REQUIRE SYMBOLIC ADDRESSING           35550002
         ORG   TXTHDR+L'TXTHDR    SET LOCATION CNT TO END OF MSG        35600002
         DS    0F                                                       35650002
STOWCON  DS    0CL32              SET ASIDE 32 BYTE DIRECTORY SIZE      35700002
STOWNAME DC    CL8'        '      EIGHT BYTES FOR NAME FIELD            35730002
TTRCONST DC    XL3'00'            THREE BYTES FOR STOW DIRT'RY TTR      35760002
DIRTORSZ DC    XL1'0A'            SET INDICATOR FOR TEN HALFWORDS       35790002
USERINFO DC    XL20'00'           OF USER DIRECTORY INFORMATION         35820002
         SPACE  3                                                       35850002
NAMESAVE DC    CL8' '             SAVE AREA FOR NAME                    35900002
PRTBUFF  DS    0CL121             SET SYMBOLIC FOR ADDRESS              35950002
         DC    X'8B'              SET CMND CODE                         36000002
         DC    CL120' '           SET BUFFER TO BLANKS                  36050002
         SPACE 2                                                        36100002
IGNORECD DC    C' IFD906I REP ERR XXXXXXXX BYPASSED -                  *36150002
                                                                       *36200002
                    '                                                   36250002
         ORG   IGNORECD           PUT MESSAGE SIZE AT MSG HEAD          36300002
IGNORSIZ DC    AL1(L'IGNORECD-1)  MESSAGESIZE                           36350002
         ORG   IGNORECD+L'IGNORECD     SET ADDRESS COUNTED              36400002
         SPACE 2                                                        36450002
FAILDCB  DC    C' IFD901I    XXXXXXXX  DDCARD FAILED TO OPEN ****ERROR**36500002
               ***'                                                     36520002
         ORG   FAILDCB                                                  36550002
FAILSIZE DC    AL1(L'FAILDCB-1)     FORCE MSG SIZE TO MSG HEAD          36600002
         ORG   FAILDCB+L'FAILDCB                                        36650002
STOWOK   DC    C' IFD902I    XXXXXXXX  WAS CORRECTLY           ' XM3316 36700002
         ORG   STOWOK             PUT MESSAGE SIZE AT MSG HEAD          36750002
OKSTRSIZ DC    AL1(L'STOWOK-1)    MESSAGES SIZE                         36800002
         ORG   STOWOK+L'STOWOK         SET ADDRESS COUNTED              36850002
         SPACE  2                                                       36900002
DIRTFULL DC    C' IFD903I    XXXXXXXX  WAS NOT STORED *ERROR* NO SPACE *36950002
               LEFT IN DIRECTORY'                                       37000002
         ORG   DIRTFULL                                                 37050002
         DC    AL1(L'DIRTFULL-1)                                        37100002
         ORG   DIRTFULL+L'DIRTFULL REESTABLISH ADDRESSABILITY           37150002
         SPACE  2                                                       37200002
PERMIOER DC    C' IFD903I    XXXXXXXX  WAS NOT STORED *ERROR* PERMANENT*37250002
                I/O ERROR'                                       XM1330 37300002
         ORG   PERMIOER                                                 37350002
         DC    AL1(L'PERMIOER-1)                                        37400002
         ORG   PERMIOER+L'PERMIOER                                      37450002
         SPACE 2                                                        37500002
SEQERROR DC    C' IFD904I    SEQ ERR EXP=XXXX RECD=XXXX MODULE XXXXXXXX*37550002
                NOT STORED'                                             37600002
         ORG   SEQERROR                                                 37650002
MSSIZE   DC    AL1(L'SEQERROR-1)         GET MESSAGE SIZE               37700002
         ORG   SEQERROR+L'SEQERROR                                      37750002
         SPACE 3                                                        37800002
LOCALOLT DC    C' IFD907I THE FOLLOWING MODULES WERE DIRECTED TO THE OL*37850002
               T AND LOCAL CDS DATA SET.'                               37900002
         ORG   LOCALOLT                                                 37950002
         DC    AL1(L'LOCALOLT-1)        SET MSG SIZ AT MSG HEAD         38000002
         ORG   LOCALOLT+L'LOCALOLT    REST IC                           38050002
SYMDATAS DC    C' IFD907I THE FOLLOWING MODULES WERE DIRECTED TO THE SM*38100002
               MBOLIC (REMOTE) CDS DATA SET.'                           38150002
         ORG   SYMDATAS                                                 38200002
         DC    AL1(L'SYMDATAS-1)   STE MSG SIZ AT MSG HEAD              38250002
         ORG   SYMDATAS+L'SYMDATAS   RESET IC                           38300002
BADCARD  DC    C' IFD900I INVALID INPUT, REJECTED -                    *38306002
                                                                       *38312002
                  '                                                     38318002
         ORG   BADCARD                                                  38324002
         DC    AL1(L'BADCARD-1)        SET MEAASGE SIZE                 38330002
         ORG   BADCARD+L'BADCARD                                        38336002
ORDERERR DC    C' IFD908I ORDER ERROR XXXXXXXX BYPASSED -              *38336402
                                                                       *38336802
                         '                                              38337202
         ORG   ORDERERR                                                 38337602
         DC    AL1(L'ORDERERR-1)  GET MESSAGE SIZE                      38338002
         ORG   ORDERERR+L'ORDERERR RESET IC                             38338402
         SPACE 3                                                        38338802
BADLIB   DC    C' IFD909I  XXXX.XXXXXXX  CAN NOT BE USED FOR ONLINE TES*38339202
               T LOAD MODULES, JOB TERMINATED'                          38339602
         ORG   BADLIB             RESET IC                              38340002
         DC    AL1(L'BADLIB-1)                                          38340402
         ORG   BADLIB+L'BADLIB    RESET THE IC                          38340802
         SPACE  3                                                       38341202
         SPACE  3                                                       38342002
         SPACE 5                                                        38350002
JFCBPTR  DS    0F                 SET PTR TO JFCB AREA                  38400002
EOV      DC    X'06'              END OF VOLUME ID             @ZA08990 38410037
         DC    AL3(GEN07000)      ROUTINE TO COUNT TAPES       @ZA08990 38420037
         DC    X'87'              SET ID FOR SOME GUY                   38450002
         DC    AL3(JFCBAREA)      SET THE RUDDY PTR                     38500002
JFCBAREA DC    CL176'JFCB'                                              38550002
EBCD0001 DC    C'0001'            USED IN SEQUENCE CHECKING             38600002
EBCD0002 DC    C'0002'            USED IN SEQUENCE CHECKING             38650002
ADDCON   DC    CL9'ADDED'         USED WHEN MODULE WAS ADDED            38700002
REPCON   DC    CL9'REPLACED'                                            38750002
TEXTID   DC    XL2'0000'          SAVE AREA FOR CURRENT TEXT ID         38800002
READAREA DS    0D                 FORCE BOUNDARY                        38850002
         DC    CL80' '            SET AREA TO BLANKS                    38900002
BLANKCOL DC    CL4' '             USED IN SCANNER, DO NOT MOVE ....     38950002
*                                 THIS CARD MUST FOLLOW THW READAREA    39000002
*                                 SO IF YOU MAINTAIN THIS MODULE        39050002
*                                 LEAVE THE ORDER OF THESE TWO CARDS    39100002
*                                                  ** ALONE**           39150002
SETSSI   DC    CL7' SETSSI'                                             39200002
         DS    0H                                                       39300002
SYMCDSID DC    C'SYMBOLIC CDS'    SET ID FOR CDS FILE BEGINNING         39400002
SYMCDSDD DC    CL8'SYMSYM  '      DD NAME FOR SYMBOLIC CDS FILE         39450002
OUTDADID DC    CL8'OLTCDSDD'      DD NAME FOR OLT CDS FILE              39500002
INPUTID  DC    CL8'CNTRLIN '      DD NAME FOR OUT PUT DC CARD           39550002
LINKLIB  DC    C'SYS1.LINKLIB '   NAME OF LIBRARY NOT AVAIL TO EDITOR   39560002
SVCLIB   DC    C'SYS1.SVCLIB '    NAME OF LIBRARY NOT AVAIL TO EDITOR   39570002
LPALIB   DC    C'SYS1.LPALIB '    NAME OF LIBRARY NOT AVAIL TO EDITOR   39580002
#TAPES   DC    F'1'               # OF TAPES IN INPUT FILE 1   @ZA08990 39590037
*                                 INCREMENTED BY END OF VOLUME @ZA08990 39600037
*                                 ROUTINE. USED BY END OF FILE @ZA08990 39610037
*                                 ROUTINE TO UPDATE JFCB       @ZA08990 39620037
         SPACE  3                                                       39650002
INCARD   DCB   DDNAME=CNTRLIN,DSORG=PS,MACRF=GM,LRECL=80,BLKSIZE=80,   *39700002
               EODAD=GEN06000,RECFM=F,EXLST=JFCBPTR                     39750002
         EJECT                                                          39800002
OUTDASD  DCB   BLKSIZE=3600,LRECL=80,DDNAME=OLTCDSDD,DSORG=PO,         *39850002
               MACRF=W,RECFM=UT,OPTCD=W,EXLST=JFCBPTR                   39900002
         EJECT                                                          39950002
PRINTER  DCB   BLKSIZE=121,LRECL=121,DDNAME=DIAGMSG,DSORG=PS,          *40000002
               MACRF=PM,RECFM=FBM                                       40050002
         EJECT                                                          40100002
SAVEAREA  DC   18F'0'             SAVE AREA FOR TESTING AND DEBUGGING   40150002
         IFDPATCH                                                       40170002
TXTAREA  DS    450D               SET TEXT AREA TO 3600 BYTES           40200002
DCBNAME  DCBD                                                           40250002
         IEFJFCBN                                                       40270002
         END                                                            40300002
./  ADD  SSI=81161455,NAME=IGC0005I
         TITLE '   ROOT MODULE FOR SVC 59   OLTEP OWNED '               00140002
IGC0005I CSECT     ROOT MODULE FOR SVC 59   OLTEP OWNED                 00150002
         SPACE 3                                                        00180002
****************************************************************X03008* 00270002
*                                                               X03008* 00360002
* MODULE NAME = IGC0005I.    DECEMBER 20, 1972                  X03008* 00450002
*                                                               X03008* 00540002
* DESCRIPTIVE NAME = SVC-59, OLTEPS PRIVILIGED SVC.             X03008* 00630002
*                                                               X03008* 00720002
* COPYRIGHT =                                                   X03008* 00810002
*                                                               X03008* 00900002
* STATUS = THIS MODULE WAS COMPLETLY REWRITTEN FOR VS1/3        X03008* 00990002
*          AND VS2/2.                                           X03008* 01080002
*                                                               X03008* 01170002
* FUNCTION = THE FUNCTION WHICH THIS SVC WILL PERFORM IS        X03008* 01260002
*            DEPENDENT UPON THE CALLING CODE IN REGISTER        X03008* 01350002
*            ONE AT ENTRY TIME. THIS IS A TYPE IV SVC AND       X03008* 01440002
*            ACCESSES OTHER SVC 59 LOAD MODULES VIA XCTL.       X03008* 01530002
*                                                               X03008* 01540002
*                                                               X03008* 01550002
*                                                               X03008* 01560002
*            THE FOLLOWING TABLE WILL IDENTIFY THE FUNCTIONS OF X03008* 01580002
*            SVC 59.                                            X03008* 01590002
*                                                               X03008* 01620002
*            IF R1 = 00 AN OUTSTANDING WTOR WILL BE REMOVED     X03008* 01670002
*                    FROM THE RQE CHAIN. A DUMMY RESPONSE       X03008* 01680002
*                    OF  'S' WILL BE USED. SVC34 WILL BE        X03008* 01690002
*                    USED.                                      X03008* 01700002
*                                                               X03008* 01702002
*            IF R1 = 04 THE UCBS REQUESTED FOR CUTEST SUPPORT   Y02008* 01704002
*                    WILL BE LOOKED-UP. THIS FUNCTION WILL      Y02008* 01804002
*                    ALTER THE UCBNALOC.                        Y02008* 01904002
*                                                               Y02008* 02004002
*            IF R1 = 08 IT WILL BE DETERMINED IF OLTEP IS IN    Y02008* 02104002
*                    AN MP ENVIRONMENT                          Y02008* 02204002
*                                                               Y02008* 02304002
*            IF R1= 0C A 3830 ATTACHED TO A 3850 MASS        @Y30LPAW*/ 02404003
*                    STORAGE SYSTEM WILL BE VARIED OFF       @Y30LPAW*/ 02454003
*                                                               Y02008* 02604002
*           IF R1 = 10 A 3330 SSID (WHEN ATTACHED TO A       @Y30LPAW*/ 02704003
*                    3850 MASS STORAGE SYSTEM) WILL BE       @Y30LPAW*/ 02734003
*                    PUT INTO A LIST FOR US BY CLEANUP       @Y30LPAW*/ 02764003
*                                                               X03008* 02970002
*            IF R1 = 14 THE CLEANUP OF UCBS AND DEB             X03008* 03060002
*                    CHAIN WILL OCCUR. THE CVTOLTEP             X03008* 03150002
*                    WORD WILL ALSO BE ZEROED.                  X03008* 03240002
*                                                               X03008* 03330002
*            IF R1 = 18 NO FUNCTION WILL BE PERFORMED           X03008* 03420002
*                    AND R15 WILL CONTAIN A 04 ON EXIT.         X03008* 03510002
*                                                               X03008* 03600002
*            IF R1 = 1C NO FUNCTION WILL BE PERFORMED           Y02008* 03690002
*                    AND R15 WILL CONTAIN A 04 ON EXIT          Y02008* 03780002
*                                                               X03008* 03870002
*            IF R1 = 20 NO FUNCTION WILL BE PERFORMED           X03008* 03960002
*                    AND REG15 WILL CONTAIN AN 04 ON EXIT       X03008* 04050002
*                                                               X03008* 04140002
*            IF R1 = 24 NO FUNCTION WILL BE PERFORMED           Y02008* 04230002
*                    AND R15 WILL CONTAIN A 04 ON EXIT          Y02008* 04330002
*                                                               Y02008* 04430002
*            IF R1 = 28 NO FUNCTION WILL BE PERFORMED           Y02008* 04530002
*                    AND R15 WILL CONTAIN A 04 ON EXIT          Y02008* 04630002
*                                                               Y02008* 04730002
*            IF R1 = 2C NO FUNCTION WILL BE PERFORMED           Y02008* 04830002
*                    AND R15 WILL CONTAIN A 04 ON EXIT          Y02008* 04930002
*                                                               Y02008* 05030002
*            IF R1 = 30 NO FUNCTION WILL BE PERFORMED           Y02008* 05130002
*                    AND R15 WILL CONTAIN A 04 ON EXIT          Y02008* 05230002
*                                                               Y02008* 05330002
*            IF R1 = 34 NO FUNCTION WILL BE PERFORMED           Y02008* 05590002
*                    AND R15 WILL CONTAIN A 04 ON EXIT          Y02008* 05690002
*                                                               X03008* 05760002
*            IF R1 = 38 NO FUNCTION WILL BE PERFORMED AND       X03008* 05850002
*                    REGISTER 15 WILL CONTAIN AN 04 ON EXIT     X03008* 05940002
*                                                               X03008* 06030002
*            IF R1 = 3C A CHECK OF UCB ON-OFFLINE STATUS        X03008* 06120002
*                    WILL BE PERFORMED. IF UCB IS ONLINE        X03008* 06210002
*                    R15 WILL EQ 'F0'. IF THE UCB IS IN-        X03008* 06300002
*                    VALID R15 WILL= 'FF'. ALSO IF R1 =         X03008* 06390002
*                    803C THE VOL=SER WILL BE MOVED.            X03008* 06480002
*                                                               X03008* 06570002
*            IF R1 = 40 A UCBLOOK UP FOR EACH DEVTAB            X03008* 06660002
*                    ENTRY WILL BE PERFORMED. THIS              X03008* 06750002
*                    FUNCTION WILL USE THE IOSGEN               X03008* 06840002
*                    MACRO.                                     X03008* 06930002
*                                                               X03008* 07020002
*            IF R1 = 44 NO FUNCTION WILL BE PERFORMED           Y02008* 07110002
*                    AND R15 WILL CONTAIN A 04 ON EXIT          Y02008* 07310002
*                                                               X03008* 07650002
*            IF R1 = 48 THE OLTEP REI DEB WILL BE MOVED TO A    Y02008* 07740002
*                    PROTECTED SUBPOOL AND PLACED AT THE        Y02008* 07940002
*                    BEGINNING OF THE TCB DEB CHAIN.            Y02008* 08140002
*                                                               X03008* 08370002
*            IF R1 = 4C A REAL ADDRESS WILL BE TRANSLATED TO    Y02008* 08460002
*                    A VIRTUAL ADDRESS                          Y02008* 08560002
*                                                               X03008* 08820002
*            IF R1 = 50 OLTEP WILL PURGE AN IO EVENT AND FREE   Y02008* 08910002
*                    NECESSARY CONTROL BLOCKS AND AREAS. IF     Y02008* 08950002
*                    R1 = 8050 OLTEP WILL FREE NECESSARY BLOCKS Y02008* 08990002
*                    AND AREAS ASSOCIATED WITH A COMPLETE EVENT Y02008* 09030002
*                                                               X03008* 09090002
*            IF R1 = 54 THE UCB NOTREADY BIT WILL BE TESTED.    X03008* 09180002
*                    IF THE NR BIT = ON, R15 WILL BE FF ON      X03008* 09270002
*                    EXIT.                                      X03008* 09360002
*                                                               X03008* 09450002
*            IF R1 = 58 OLTEP INITIALIZATION WILL BE PERFORMED. Y02008* 09490002
*                    OLTEP INITIALIZATION INCLUDES              Y02008* 09530002
*                       - CHECK FOR 2 OLTEPS                    Y02008* 09570002
*                       - SAVE ASCB MEMORY ID IN THE DIE        Y02008* 09610002
*                       - MOVE IFDOLT57 TO PROTECTED CORE- SP245Y02008* 09650002
*                       - OBTAIN CPU ID AND STORE IN SCT       @ZA15468 09670041
*                       - OBTAIN & SET UP UCB MASK TABLE        Y02008* 09690002
*                       - OBTAIN SPACE FOR REI DEB              Y02008* 09730002
*                       - SET TCBOLTEP FLAG ON IN TCB           Y02008* 09770002
*                       - FIND 2955 UCB IF ONE EXISTS           Y02008* 09810002
*                       - TELL CALLER IF OLTEP HAS BEEN INVOKED Y02008* 09850002
*                         V=R OR V=V                            Y02008* 09890002
*                                                               Y02008* 09930002
*            IF R1 = 5C AN IO OPERATION WILL BE PERFORMED. IN   Y02008* 09970002
*                    ORDER TO PERFORM IO OLTEP BUILDS THE       Y02008* 10010002
*                    APPROPRIATE CONTROL BLOCKS AND USES THE    Y02008* 10050002
*                    STARTIO MACRO.                             Y02008* 10090002
*                                                               Y02008* 10130002
*            IF R1 = 60 VERIFICATION OF A CHOSEN CPU AFFINITY   Y02008* 10170002
*                    WILL BE DONE                               Y02008* 10210002
*                                                               Y02008* 10250002
* NOTES = A BRANCH TABLE WILL BE USED TO LOCATE THE REQUIRED    X03008* 10350002
*         FUNCTION.                                             X03008* 10440002
*                                                               X03008* 10530002
*    DEPENDENCIES : THE TESTAUTH MACRO                          X03008* 10620002
*                       CVT DSECT                               X03008* 10710002
*                       TCB DSECT                               X03008* 10800002
*                       UCM DSECT                               X03008* 10890002
*                       RQE MAP MUST ALL APPEAR IN THIS CSECT.  X03008* 10980002
*                                                               X03008* 11070002
* RESTRICTIONS = THE CALL MUST BE AN AUTHORIZED PROGRAM         X03008* 11160002
*                AS DEFINED BY THE TESTAUTH MACRO               X03008* 11250002
*                                                               X03008* 11340002
* REGISTER CONVENTIONS = ON ENTRY:  R0 = ADDRESS OF PARAMETER   X03008* 11430002
*                                        LIST                   X03008* 11520002
*                                                               X03008* 11610002
*                                   R1 = A VALID CALL CODE      X03008* 11700002
*                                                               X03008* 11790002
*                                   R3 = CVT POINTER            X03008* 11880002
*                                                               X03008* 11970002
*                                   R4 = TCB POINTER            X03008* 12060002
*                                                               X03008* 12150002
*                                   R5 = RB  POINTER            X03008* 12240002
*                                                               X03008* 12330002
*                                   R14= RETURN POINT TO        X03008* 12420002
*                                        C.P.                   X03008* 12510002
*                                                               X03008* 12600002
*   PATCH LABEL = PATCH5I, THIS LABEL WILL BE ON THE OLTEP      X03008* 12690002
*                          IFDPATCH.                            X03008* 12780002
*                                                               X03008* 12870002
* MODULE TYPE = TYPE IV SVC.                                    X03008* 12960002
*    PROCESSOR = ANY 370 MACHINE WITH THE 370 INSTRUCTION SET.  X03008* 13050002
*                                                               X03008* 13140002
*    MODULE SIZE = LESS THAN 2K BYTES.                          X03008* 13230002
*                                                               X03008* 13320002
*    ATTRIBUTES = REENTRANT.                                    X03008* 13410002
*                                                               X03008* 13500002
* ENTRY POINT = IGC0005I.                                       X03008* 13590002
*                                                               X03008* 13680002
*    PURPOSE = PROVIDE OLTEP WITH PRIVILIGED OPERATIONS.        X03008* 13770002
*                                                               X03008* 13860002
*    LINKAGE = XCTL AND BRANCH TABLE.                           X03008* 13950002
*                                                               X03008* 14040002
* INPUT = SAME AS REGISTER CONVENTIONS ABOVE.                   X03008* 14130002
*                                                               X03008* 14220002
* OUTPUT = SEE FUNCTION DESCRIPTION ABOVE.                      X03008* 14310002
*                                                               X03008* 14400002
* EXIT NORMAL = AT LABEL EXIT00.                                X03008* 14490002
*                                                               X03008* 14580002
* EXIT ABNORMAL = AT LABEL EXIT04.                              X03008* 14670002
*                                                               X03008* 14760002
* EXTERNAL REFERENCES = SEE BELOW                               X03008* 14850002
*                                                               X03008* 14940002
*    ROUTINES = TESTAUTH AND IOSGEN AND SVC34 AND GETMAIN       X03008* 15030002
*               AND XCTL AND FREEMAIN MODESET                   X03008* 15120002
*    DATA AREA = OLTEP COMMON AREA                              X03008* 15210002
*                                                               X03008* 15300002
*    CONTROL BLOCKS = CVT TCB RQE UCB UCM                       X03008* 15390002
*                                                               X03008* 15480002
* TABLES = NONE                                                 X03008* 15570002
*                                                               X03008* 15660002
* MACROS = SAME AS DEPENDENCIES ABOVE                           X03008* 15750002
*                                                               X03008* 15840002
* CHANGE ACTIVITY                                               X03008* 15930002
*  VS2-2.0 PTM YM08149 ADDED FOR VIRTUAL SUPPORT (3705,REI), OLTEP IS   15960002
*  NON-SWAPPABLE IN VIRTUAL STORAGE.                           YM08149  15990002
*  VS2R3.7(SU10)--10/10/77--OZ26394                                   * 16000010
*                                                               X03008* 16020002
****************************************************************X03008* 16110002
         SPACE 3                                                 X03008 16200002
*****************************************************************X03008 16290002
*                                                               *X03008 16380002
*  EQUATES, DISPLACEMENTS, MASKS, ADDRESS CONSTANTS AND         *X03008 16470002
*  OTHER  STUFF AND THINGS                                      *X03008 16560002
*                                                               *X03008 16650002
*****************************************************************X03008 16740002
D0       EQU   0                       DISPLACEMENT OF ZERO      X03008 16830002
POOLADR  EQU   0                       SAVE SUBPOOL ADDR HERE    X03008 16920002
POOLSIZE EQU   0                       REG FOR GETMAIN           X03008 17010002
L0       EQU   0                                               @ZA12058 17050041
R0       EQU   0                       REGISTER ZERO             X03008 17150002
REG0     EQU   0                       REGISTER ZERO             X03008 17190002
ZEROO    EQU   0                       USED IN BASE REG WORK     X03008 17280002
RCREG1   EQU   1                       GENERAL PURPOSE REGISTER 1X03008 17550002
ONE      EQU   1                       SHIFT COUNT               X03008 17590002
L1       EQU   1                       DISPLACEMENT CONSTANT     X03008 17640002
R1       EQU   1                       GENERAL PURPOSE REGISTER  X03008 17820002
REG1     EQU   1                       WORK REGISTER 1           X03008 17910002
VIRTUAL  EQU   1                       REG 1, IF MINUS V=V ASSUMEX03008 18000002
HEX01    EQU   X'01'                   PSEUDO DEVTAB BIT         X03008 18050002
D1       EQU   1                       LOW BYTE UCB ADDR NEVER   X03008 18090002
*                                      BY INITILIZATION MODULES  X03008 18270002
PARMREG  EQU   1                       POINTER TO REQUESTORS     X03008 18450002
*                                      PARAMETER LIST.           X03008 18540002
WKREG1   EQU   1                       REGISTER WORKING REG.     X03008 18630002
HEX00    EQU   X'00'                   OPTION FOR XLATE          Y02008 18670002
HEX02    EQU   X'02'                   TCB OLTEP BIT MASK        X03008 18720002
WORKREG2 EQU   2                       WORKING REGISTER          X03008 18810002
D2       EQU   2                       DISP TO NEXT UCB PTR      X03008 18900002
L2       EQU   2                       DISPLACEMENT CONSTANT     X03008 19080002
R2       EQU   2                                               @ZA12058 19090041
SRBREG   EQU   2                       SRB POINTER               Y02008 19100002
CVTOLT   EQU   2                       CVT OLT REG               Y02008 19120002
THREE    EQU   3                       USED IN SHIFT INST        Y02008 19140002
CVTREG   EQU   3                       POINTER TO SYS CVT.       X03008 19170002
L3       EQU   3                       LENGTH ATTRIBUTE          X03008 19260002
D3       EQU   3                       DISPLACEMENT OF UCB FLAGS X03008 19350002
D4       EQU   4                       DISP INTO XCTL PARM LIST  X03008 19440002
BCTREG   EQU   4                       BCT ON 32 BIT MASK        X03008 19480002
TCBREG   EQU   4                       POINTER TO OLTEP TCB      X03008 19530002
HEX04    EQU   X'04'                   UCBNALOC MASK             X03008 19620002
L4       EQU   4                       DISPLACEMENT CONSTANT     X03008 19710002
IOSBREG  EQU   5                       IOSB PTR                  Y02008 19810002
WORKRG   EQU   5                       WORK REG                  Y02008 19820002
UCBTAB   EQU   5                       POINTER REGISTER          X03008 19850002
D5       EQU   5                       DISPLACEMENT FIELD        X03008 19890002
R5       EQU   5                       GENERAL PURPOSE REGISTER  X03008 19980002
HEX06    EQU   X'06'                   ZUES I  MASK IN UCB       X03008 20070002
HEXADDR  EQU   6                       DEVICE ADDR IN HEX        X03008 20160002
D6       EQU   6                       DISPLACEMENT FIELD        X03008 20250002
UCMREG   EQU   6                       USED IN FENC 33 WTOR      X03008 20340002
SCAN     EQU   6                       POINTER REGISTER          X03008 20390002
WKREG6   EQU   6                       WORKING REGISTER          X03008 20430002
DEVTBL   EQU   6                       PTR TO DEVTAB             Y02008 20530002
WORKREG  EQU   6                       REG USED IN GETTIN CORE   Y02008 20540002
ASCBREG  EQU   6                       DE SECT REG               Y02008 20550002
R6       EQU   6                       WORK REG                  Y02008 20560002
CSDREG   EQU   6                       CSD POINTER               Y02008 20580002
CALLER   EQU   6                       SAVE CALLCODE HERE        X03008 20660002
L6       EQU   6                       DISPLACEMENT CONSTANT     X03008 20790002
UCBREG   EQU   6                       POINTER TO UCB            X03008 20880002
PPLREG   EQU   6                       PTR TO PURGE PARMLIST     Y02008 20920002
LDAREG   EQU   6                       LDA REGISTER              Y02008 20940002
HEX07    EQU   X'07'                   ZUES II MASK IN UCB       X03008 20970002
D7       EQU   7                       LOW BYTE DEV ADDR         X03008 21060002
TDEBREG  EQU   7                       USED IN MOVE DEB FUNCTION X03008 21150002
R7       EQU   7                       REGISTER SEVEN            Y02008 21160002
WKREG7   EQU   7                       WORKING REG               Y02008 21170002
SAVE1    EQU   7                       SAVE REG FOR UCBTAB SIZE  Y02008 21190002
RQEREG   EQU   7                       USED IN FENC 33 WTOR      X03008 21240002
UCBADDR  EQU   7                       POINTER TO UCB            X03008 21420002
D8       EQU   8                       DISP TO UCB ADDR IN DEVTABX03008 21600002
SHIFTER  EQU   8                       SHIFT REG FOR MASKS       X03008 21640002
R8       EQU   8                       GENERAL PURPOSE REGISTER  X03008 21690002
TCCWREG  EQU   8                       POINTER TO TCCW           Y02008 21700002
DUMMY1   EQU   8                       USED TO CLEAR UCBTAB      Y02008 21710002
DIEPTR   EQU   8                       POINTER TO DIE PREFACE    Y02008 21720002
MODELREG EQU   8                       POINTER TO MODEL IOSB     Y02008 21730002
PARM1    EQU   8                       1ST PARAMETER             Y02008 21740002
L8       EQU   8                       DISPLACEMENT CONSTANT     X03008 21780002
ERRCODE  EQU   8                       RETURN CODE               X03008 21870002
DEB254RG EQU   8                       USED IN MOVE DEB FUNCTION X03008 21960002
DEVTAB   EQU   8                       POINTER TO DEVTAB ENTRY   X03008 22050002
DEVREG   EQU   DEVTAB                  OLTEP DEVTEB ENTRY POINTERX03008 22140002
VOLSERAD EQU   8                       REG POINTER TO VOLSER     X03008 22230002
HEX08    EQU   X'08'                   ALLOCATED FLAG IN UCB     X03008 22320002
HEX09    EQU   X'09'                   3277 TYPE                 X03008 22410002
ODDREG   EQU   9                       HOLDS WORD OF MASKS       X03008 22450002
D9       EQU   9                       DISPLACEMENT FIELD        X03008 22500002
PARMRG9  EQU   9                       PARM LIST REG             Y02008 22520002
PARM2    EQU   9                       PARAMETER REG             Y02008 22530002
R9       EQU   9                       WORK REG 9                Y02008 22540002
SAVEREG9 EQU   9                       SAVE ROPT ADDR HERE       X03008 22590002
DEVCNT   EQU   9                       COUNT OF DEVTAB ENTRIES   X03008 22680002
CNTREG   EQU   DEVCNT                  NUMBER OF DEVTABS         X03008 22770002
HEX10    EQU   X'10'                   COMMO EQUIP CLASS         X03008 22860002
DUMMY2   EQU   9                       USED TO CLEAR UCBTAB      Y02008 22870002
LINK     EQU   10                      BALR TO GETMAIN REG       Y02008 22880002
PARM3    EQU   10                      PARAMETER REG             Y02008 22890002
FREERG   EQU   10                      SAVE AREA FOR 160 BYTE AREA      22900002
SAVE     EQU   10                      SAVE REG FOR UCB COUNT    Y02008 22910002
SAVEPTR  EQU   10                      POINTER TO 16 WORD SAVE   X03008 22950002
R10      EQU   10                                              @ZA12058 23040041
BASEREG  EQU   11                      BASE REG FOR IGC0005I     X03008 23130002
D11      EQU   11                      DISP TO UCB ATTN INDEX    X03008 23180002
HEX0B    EQU   X'0B'                   USED IN ANR CHECKS        X03008 23220002
IODEVAD  EQU   12                      PTR TO 12 BYTE BLOCK      Y02008 23260002
D12      EQU   12                      DISP TO DEVTAB FLGS       X03008 23310002
WRKREG12 EQU   12                      WORK REGISTER             Y02008 23320002
L12      EQU   12                      LENGTH 12                 Y02008 23340002
COUNT    EQU   12                      USED IN LOOKUP            X03008 23360002
INDEX    EQU   13                      USED IN LOOKUP            X03008 23370002
FIXED    EQU   13                      POINTER TO ASVE AREA (BEB)Y02008 23377002
SAVEM    EQU   13                      POINTER TO DIE SAVE AREA  Y02008 23384002
SAVEREG  EQU   SAVEM                   SAVE AREA ADDR            Y02008 23391002
L13      EQU   13                      LENGTH ATTRIBUTE          X03008 23400002
R13      EQU   13                      USED IN LOOKUP            X03008 23450002
REG13    EQU   13                      AREA IN CALLING MODULE.   X03008 23580002
RETURN   EQU   14                      EXIT REGISTER             X03008 23670002
HEX14    EQU   X'14'                   CALL CODE IF FROM ABEND   X03008 23720002
D14      EQU   14                      DISP TO DEVTAB FLGS       X03008 23760002
R14      EQU   14                      SYSTEM RETURN REG         Y02008 23800002
EXIT     EQU   14                      REG TO RETURN ON          X03008 23850002
PKEYREG  EQU   15                      CONTAINS PROT. KEY        X03008 23940002
RCREG    EQU   15                      RETURN CODE REGISTER      X03008 24030002
R15      EQU   15                      SYSTEM GOTO REG           Y02008 24050002
D15      EQU   15                      DISP OF SOME FIFTEENS     Y02008 24070002
IOCREG   EQU   15                      REGISTER 15               Y02008 24090002
RETCODE  EQU   15                      REG 15, FUNC17 USES IT    X03008 24120002
*                                      ODD DIGET                 X03008 24210002
RTNCODE  EQU   RETCODE                 CONTAINS RETURN CODE      X03008 24300002
MAIN15   EQU   15                      WORK AREA REG ON XCTL     X03008 24390002
D16      EQU   16                      DISPLACEMENT 16           Y02008 24510002
L16      EQU   16                      LENGTH 16                 Y02008 24540002
D18      EQU   18                      DISP TO UCB CDS CLASS     X03008 24570002
D19      EQU   19                      DISP TO UCB CDS TYPE      X03008 24660002
D20      EQU   20                      DISP TO TCBOLTEP BIT      X03008 24750002
HEX0C    EQU   X'0C'                   OPTION TO RE-ENTER XLATE  Y02008 24790002
HEX20    EQU   X'20'                   DASD CLASS                X03008 24840002
REPLY    EQU   X'22'                   SVC NUMBER                X03008 24930002
D24      EQU   24                      DISPLACEMENT FIELD        X03008 25020002
D28      EQU   28                      VOL=SER DISP IN UCB       X03008 25290002
D31      EQU   31                      DISP TO ZUES EXPOSURE FLD X03008 25380002
D32      EQU   32                      DISP TO DEVTAB HEX ADDR   X03008 25470002
D35      EQU   35                      DISPLACEMENT FIELD        X03008 25560002
D40      EQU   40                      DISPLACEMENT 40           Y02008 25620002
HEX40    EQU   X'40'                   A FINE HEX 40             X03008 25650002
DEBVALID EQU   X'40'                   VALID DEB IDENTIFIER      X03008 25740002
D38      EQU   38                      DISPLACEMENT 38           Y02008 25850002
L48      EQU   48                      LENGTH ATTRIBUTE          X03008 25920002
D56      EQU   56                      DEVTAB ENTRY SIZE         X03008 26010002
D64      EQU   64                      DISPLACEMENT FIELD        X03008 26100002
HEX1C    EQU   X'1C'                   BTAM ATTENTION INDEX      X03008 26150002
HEX7F    EQU   X'7F'                   USED TO ZAP THE UCB ONLINEX03008 26190002
HEX80    EQU   X'80'                   OLTEP EXECUTING FLAG      X03008 26280002
HEX82    EQU   X'82'                   ALLOCATED AND ACTIVE OPER X03008 26370002
HEX88    EQU   X'88'                   MASK FOR ALLOCATED/ONLINE X03008 26420002
*                                      CONSOLE                   X03008 26460002
HEXA0    EQU   X'A0'               MASK FOR TAPE OR DASD       @ZM42051 26500037
HEXBF    EQU   X'BF'                   UCB NRDY BIT              X03008 26550002
HEXFB    EQU   X'FB'                   UCB NACL BIT              X03008 26690002
HEXF0    EQU   X'F0'                   SET IF DEV ONLINE         X03008 26700002
HEXFF    EQU   X'FF'                   MASK USED AT LOOKUP TIME  X03008 26730002
HEX200   EQU   X'200'                  HEX 200                   Y02008 26750002
L133     EQU   133                     LENGTH 133                Y02008 26770002
SMFREC   EQU   6                       PTR TO SMF RECORD         Y02008 26772002
SMCAREG  EQU   12                      SMCA ADDRESSABILITY       Y02008 26774002
TYPE11   EQU   11                      SMF RECORD TYPE 11        Y02008 26776002
SMFRECSZ EQU   24                      TOTAL SIZE OF SMF RECORD  Y02008 26778002
L24      EQU   24                      LENGTH OF 24              Y02008 26780002
K72      EQU   X'48'               SIZE OF SSIDLIST            @Y30LPAW 26781003
CPUIDOFF EQU   X'49'               OFFSET IN OCA TO CPU ID     @ZA15468 26781541
*****************************************************************Y02008 26782002
*                       SMF RECORD EQUATES                       Y02008 26784002
*****************************************************************Y02008 26786002
RECDSCWD EQU   1                       SMF REC DESC WORD         Y02008 26788002
RECTYPE  EQU   5                       SMF RECORD TYPE           Y02008 26790002
VARLNGTH EQU   19                      LENGTH OF REST OF RECORD  Y02008 26792002
UCBCLTYP EQU   20                      UCB CLASS & TYPE INFO     Y02008 26794002
DEVADDR  EQU   22                      DEVICE ADDR IN HEX        Y02008 26796002
         EJECT                                                          26800002
         BALR  BASEREG,ZEROO           SET BASE REGISTER                26960002
         USING *,BASEREG               ID BASE REGISTER          X03008 27000002
         B     IGC00CDE                BRANCH AROUND NAME & DATE Y02008 27020002
         DC    C'IGC0005I&SYSDATE'     MODULE NAME & ASSEM DATE  Y02008 27040002
IGC00CDE EQU   *                       START OF ACTUAL CODE      Y02008 27060002
         SPACE  4                                                       27090002
         USING TCB,TCBREG                                        Y02008 27150002
         USING CVTMAP,CVTREG                                     Y02008 27210002
         TM    TCBFLGS1,TCBFA          IS ABEND IN PROCESS       X03008 27270002
         BNO   AUTHCHCK                BRANCH IF NO,             X03008 27320002
         LA    REG1,HEX14              ELSE SET 14 IN REG 1      X03008 27330002
AUTHCHCK EQU   *                       ISSUE APF MACR0           X03008 27450002
         LR    SAVEREG9,REG0           SAVE PARMLIST ADDR        X03008 27540002
         LR    CALLER,REG1             SAVE CALLCODE             X03008 27630002
         SPACE 2                                                 X03008 27720002
         TESTAUTH  FCTN=D1             CHECK CALLERS AUTHORITY   X03008 27810002
         SPACE 2                                                 X03008 27900002
         LTR   RETCODE,RETCODE         SET RETURNED COND CODE    X03008 28080002
         BNZ   EXIT04                  IF CALL ILLEGAL TAKE BR.  X03008 28170002
*********************************************************************** 28260002
*  THE FOLLOWING BRANCH TABLE WILL DIRECT CONTROL TO THE              * 28350002
*  REQUESTED FUNCTION.                                                * 28440002
*                                                                     * 28530002
*********************************************************************** 28620002
         LR    REG1,CALLER             RESTORE CALL CODE         X03008 28670002
         ICM   REG1,B'0010',ZERO       ZAP OUT POSSIBLE 80 BYTE  X03008 28710002
         B     BRTAB(REG1)             LOCATE REQUESTED FUNCTION X03008 28800002
BRTAB    B     FUNC33                  REMOVE WTOR          X'00'X03008 28890002
         B     XCTLMOD9                $CUTEST              X'04'X03008 28980002
         B     FUNC2                   IS THIS MP SYSTEM    X'08'Y02008 29070002
         B     XCTLMOD9            $CUTEST SSIDCHK       X'0C' @Y30LPAW 29160003
         B     XCTLMOD9            SSIDLIST STORE        X'10' @Y30LPAW 29250003
         B     XCTLMOD5                OLTEPS CLEANUP       X'14'X03008 29340002
         B     EXIT04                  RESERVED             X'18'X03008 29430002
         B     EXIT04                  RESERVED             X'1C'Y02008 29520002
         B     EXIT04                  RESERVED             X'20'X03008 29610002
         B     EXIT04                  RESERVED             X'24'Y02008 29700002
         B     EXIT04                  RESERVED             X'28'Y02008 29790002
         B     EXIT04                  RESERVED             X'2C'Y02008 29880002
         B     EXIT04                  RESERVED             X'30'X03008 29970002
         B     EXIT04                  RESERVED             X'34'Y02008 30060002
         B     EXIT04                  RESERVED             X'38'X03008 30150002
         B     FUNC15                  VOL=SER AND UCB CHK  X'3C'X03008 30240002
         B     FUNC16                  UCBLOOKUP            X'40'X03008 30330002
         B     EXIT04                  RESERVED             X'44'Y02008 30420002
         B     FUNC18                  MOVE DEB             X'48'X03008 30510002
         B     REXLATE                  TRANSLATE ADDR      X'4C'Y02008 30600002
         B     PURGERTN                PURGE ROUTINE        X'50'Y02008 30690002
         B     FUNC21                  UCB NOT RDY CHK-SET  X'54'X03008 30780002
         B     INITALIZ                GO SET UP OLTEP JOB  X'58'Y02008 30790002
         B     STARTIO                 GO ISSUE IO OPERATN  X'5C'Y02008 30800002
         B     CPUVRFY                 VERIFY CHOSEN AFFN   X'60'Y02008 30810002
         SPACE  5                                                       30820002
EXIT04   LA    RETCODE,HEX04           SET ABNORMAL COMPLETION   X03008 30870002
         BR    EXIT                    CODE AND EXIT MODULE      X03008 30960002
         SPACE 4                                                 X03008 31050002
XCTLMOD5 L     MAIN15,IGC05            GET IGC0505I ADDRESS      Y02008 31590002
         B     GETMAIN                 GO GET XCTL STG           X03008 31680002
XCTLMOD9 L     MAIN15,IGC09            GET IGC0905I ADDRESS      Y02008 31950002
         SPACE 4                                                        32040002
GETMAIN  EQU   *                       GET STG FOR REMOTE LIST   X03008 32130002
         BR    MAIN15                  GO TO IGC0505I            Y02008 32220002
*                                      OR IGC0905I               Y02008 32820002
         EJECT                                                          33570002
FUNC15   EQU   *                                                 X03008 33660002
         LR    REG1,SAVEREG9           RESTORE ROPT ADDR         X03008 33750002
         LM    UCBADDR,VOLSERAD,D0(PARMREG) OBTAIN UCB ADDRESS   X03008 33840002
*                                      AND VOLUME  SER RETURN    X03008 33930002
*                                      ADDRESS.                  X03008 34020002
         XR    RETCODE,RETCODE         ZERO RETURN CODE REGISTER X03008 34110002
         SPACE 3                                                        34200002
         L     CVTOLT,CVTEXT2          GET PTR TO CVT EXTENSION  Y02008 34290002
         L     WKREG6,D28(CVTOLT)      GET PTR TO DIE            Y02008 34300002
         STM   ZEROO,R15,D40(WKREG6)   SAVE ALL REGS             Y02008 34310002
C   SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=(LOCAL,IGC0005I(D)), X34320002
               REGS=USE                                          Y02008 34330002
         LM    ZEROO,R15,D40(WKREG6)   RSTR ALL REGS             Y02008 34340002
         SPACE 3                                                        34380002
         TM    D3(UCBADDR),HEX80       IS THIS FINE UCB ONLINE   X03008 34470002
         BNO   VOLSERCK                NO, GO CK VOL=SER REQUEST X03008 34560002
         SPACE 3                                                        34610002
         SPACE 3                                                        34710002
         LA    RETCODE,HEXF0           SET ONLINE INDICATOR      X03008 34920002
VOLSERCK EQU   *                       CHECK FOR VOL=SER REQUEST X03008 35100002
         SPACE 3                                                        35110002
         STM   ZEROO,R15,D40(WKREG6)   SAVE ALL REGS             Y02008 35150002
D        SETLOCK RELEASE,TYPE=LOCAL,RELATED=(LOCAL,IGC0005I(C)),       X35152002
               REGS=USE                                          Y02008 35154002
         LM    ZEROO,R15,D40(WKREG6)   RSTR ALL REGS             Y02008 35156002
         SPACE 3                                                        35160002
         CLM   CALLER,B'0010',MASKTBL    IS SECOND BYTE OF CALL  X03008 35190002
*                                      CODE A X'80'              X03008 35280002
         BNE   FINIS                   NO, DO NOT RETURN VOLSER  X03008 35370002
         ICM   WKREG6,B'0001',TCBPKF   GET OLTEP PROTECT KEY     Y02008 35400002
         SPKA  0(WKREG6)               GET INTO OLTEP PROTECT KEYY02008 35430002
         MVC   D0(L6,VOLSERAD),D28(UCBADDR)  MOVE VOL=SER        X03008 35460002
         SR    WKREG6,WKREG6           KEY ZERO                  Y02008 35500002
         SPKA  0(WKREG6)               GET BACK IN SUP STATE     Y02008 35520002
FINIS    BR    EXIT                    RETURN TO CALLER                 35550002
         EJECT                                                          35640002
FUNC16   EQU   *             CALL CODE = R1 = HEX '40'                  35730002
         SPACE 1                                                        35820002
         LR    REG1,SAVEREG9           RESTORE ROPT ADDR         X03008 35910002
         LM    DEVTAB,SAVEPTR,D0(PARMREG) OBTAIN PARAMETER LIST  X03008 36000002
*                                      FROM IFDOLT61. AT THIS    X03008 36090002
*                                      POINT DEVTAB = ADDR DEVTABX03008 36180002
*                                            DEVCNT = NUMBER OF  X03008 36270002
*                                                     DEVICES    X03008 36360002
*                                            SAVEPTR = ADDR OF   X03008 36450002
*                                                      A 16 WORD X03008 36540002
*                                                      SAVEAREA  X03008 36630002
         LR    REG13,SAVEPTR       MOVE SAVE AREA ADDRESS      @ZA12058 36640041
         L     R0,ENQDQGM          GET SPACE FOR ENQ           @ZA12058 36650041
         GETMAIN R,LV=(R0)         AND DEQ ON UCB              @ZA12058 36660041
         LR    SAVEPTR,R1          SAVE THE ADDRESS            @ZA12058 36670041
         SPACE 3                                                 X03008 36720002
LOOKUP   L     HEXADDR,D32(DEVTAB)       GET THE TWO BYTE DEVICE X03008 36990002
*                                      ADDRESS FROM DEVTAB ENTRY X03008 37080002
         SPACE 3                                                 X03008 37260002
IOSGEN   IOSGEN  UCBLOOK,REG13         GET A FINE UCB ADDR       Y02008 37350002
         SPACE 3                                                 X03008 37440002
*                                      ON RETURN FROM IOSGEN THE X03008 37530002
*                                      FOLLOWING REGS ARE VALID  X03008 37620002
*                                       UCBADDR = ADDRESS OF UCB X03008 37710002
*                                       REG 15  = RTN CODE       X03008 37800002
*                                                 0= SUCCESS     X03008 37890002
*                                                 4 = NO UCB     X03008 37980002
         SPACE 3                                                 X03008 38070002
         LTR   RTNCODE,RTNCODE         TEST FOR ZERO RETURN      X03008 38160002
         BNZ   NODEQ               GO GET NEXT DEVTAB ENTRY    @ZA12058 38250041
*                                      AT THIS POINT A VALID UCB X03008 38340002
*                                      ADDRESS IS IN UCBADDR REG X03008 38430002
         ICM   R6,B'0001',TCBPKF       GET OLTEP PROTECT KEY     Y02008 38460002
         SPKA  0(R6)                   GET IN OLTEP PROTECT KEY  Y02008 38490002
         ST    UCBADDR,D8(DEVREG)      SAVE UCB POINTER IN DEVTABX03008 38520002
         SPKA  0(0)                GET SUPERVISOR STATE AGAIN  @ZA06006 38525037
         CLC   D35(L1,DEVREG),D5(UCBADDR) DOES UCB MATCH DEVTAB  X03008 38530002
         BE    SETMODE                 YES, CONTINUE             X03008 38540002
         SPKA  0(R6)                   GET IN OLTEP PROTECT KEY  Y02008 38545002
         XC    D8(L4,DEVREG),D8(DEVREG) CLEAR UCB PTR IN DEVTAB  X03008 38550002
         SPKA  0(0)                    GET SUPERVISOR STATE AGAINY02008 38555002
         B     NODEQ               GO GET NEXT DEVTAB ENTRY    @ZA12058 38560041
SETMODE  EQU   *                                                 X03008 38570002
         SPACE  2                                                       38610002
*********************************************************************** 38700002
*                      ENQ ON Q4 FOR UCB-LOOK-UP                      * 38701002
*********************************************************************** 38702002
         LA    WORKRG,10               INITIALIZE COUNT REG      Y02008 38703002
         USING UCBOB,UCBADDR       UCB ADDRESSIBILITY          @ZA02796 38703137
         CLI   UCBDVCLS,X'08'      UNIT RECORD DEVICE?         @ZA02796 38703237
         BNE   ENQIT               NO, ENQ ON UCB              @ZA12058 38703341
         CLI   UCBUNTYP,X'42'      IS IT AN MSC?               @ZA04291 38703437
         BE    ZEUS                IF YES, BYPASS VARYOFF      @ZA02796 38703537
ENQIT    EQU   *                                               @ZA12058 38704041
         MVC   D0(L12,SAVEPTR),ENQUCB MOVE THE ENQ             @ZA12058 38704541
ENQAGAIN EQU   *                                               @ZA12058 38705041
         ENQ   ,MF=(E,(SAVEPTR))   AND EXECUTE IT              @ZA12058 38705541
         LTR   R15,R15                 WAS ENQ SUCCESSFUL        Y02008 38706002
         BZ    ALOCDCRR                ENQ SUCCESSFUL-CONTINUE   Y02008 38707002
         CLI   THREE(RETCODE),HEX08 IS RET CODE AN 8           @ZA06017 38708037
         BE    ALOCDCRR                YES, ENQ OK - CONTINUE    Y02008 38710002
         STIMER WAIT,DINTVL=FIVE       DELAY FOR 5 SECONDS       Y02008 38711002
         BCT   WORKRG,ENQAGAIN         TRY ENQ ON Q4 AGAIN - MAX Y02008 38712002
*                                      OF 10 TIMES               Y02008 38713002
         OI    D15(DEVTAB),HEX04       INDICATE TO IFDOLT31 THAT Y02008X38715002
                                       ENQ FOR THAT DEVICE WAS   Y02008X38715602
                                       UNSUCCESSFUL              Y02008 38716202
         OI    D14(DEVTAB),HEX08   SET NO GO SWITCH            @ZA12058 38717041
         B     NODEQ               GO GET NEXT DEVTAB ENTRY    @ZA12058 38717541
ALOCDCRR EQU   *                       ENQ ON Q4 OK-CONTINUE     Y02008X38718002
                                       DCRR CODE FOR ALLOCATION  Y02008 38719002
         TM    UCBDVCLS,UCB3COMM+UCB3DISP+UCB3UREC  IS THIS      Y02008C38721002
                                       DEVICE TP, GRAPHICS OR    Y02008C38722002
                                       UNIT RECORD               Y02008 38723002
         BZ    ZEUS                    NO - GO MAKE ZEUS CHECK   Y02008 38724002
         L     R6,UCBEXTPT         GET UCB COMMON              @Z40MIJR 38724100
         USING UCBCMEXT,R6         EXTENSION                   @Z40MIJR 38724200
         TM    UCBFLP1,UCBERLOG    DOES THIS DEV HAVE A        @Z40MIJR 38724300
*                                  BUFFERED ERROR LOG          @Z40MIJR 38724400
         BO    ZEUS                YES, DONT VARY OFFLINE      @Z40MIJR 38724500
         DROP  R6                                              @Z40MIJR 38724600
ALOCDCR1 DS    0H                                              @ZA06006 38724700
         TM    UCBSTAT,UCBALOC         IS DEVICE ALLOCATED       Y02008 38725002
         BO    ZEUS                    YES, BYPASS ALOC DCRR-DEV Y02008X38726002
                                       DOES NOT MEET REQUIREMENTSY02008 38727002
         TM    UCBSTAT,UCBONLI         IS DEVICE ONLINE          Y02008 38728002
         BNO   ZEUS                    NO , BYPASS ALOC DCRR-DEV Y02008X38729002
                                       DOES NOT MEET REQUIREMENTSY02008 38730002
         TM    UCBSTAT,UCBSYSR         IS THIS ACTIVE CONSOLE    Y02008 38730202
         BO    ZEUS                    YES, DONT TAKE DEVICE     Y02008X38730402
                                       OFFLINE                   Y02008 38730602
         TM    UCBSTAT,UCBDADI         IS STATUS CHANGING        Y02008 38731002
         BO    ZEUS                    YES, BYPASS ALOC DCRR-DEV Y02008X38732002
                                       DOES NOT MEET REQUIREMENTSY02008 38733002
         NI    UCBSTAT,HEXFF-UCBONLI-UCBCHGS DEVICE IS OFFLINE & Y02008X38734002
                                       PENDING OFFLINE BIT IS 0  Y02008 38735002
         OI    UCBWGT,UCBVORSN         INDICATE TO RE-CONFIG     Y02008C38736002
                                       COMMANDS THAT OPERATOR HASY02008C38737002
                                       TAKEN DEVICE OFFLINE      Y02008 38738002
         OI    D15(DEVTAB),HEX08       INDICATE TO IFDOLT31 THAT Y02008X38739002
                                       DEVICE WAS VARIED OFFLINE Y02008X38739602
                                       MSG MUST BE OUTPUTTED     Y02008 38740402
**           WRITE SMF RECORD IF IT CAN BE DONE                  Y02008 38741202
         USING SMCABASE,SMCAREG        SMCA ADDRESSABILITY       Y02008 38742002
         L     SMCAREG,CVTSMCA         GET PTR TO SMF CONTROL BLKY02008 38742802
         LTR   SMCAREG,SMCAREG         IS PTR ZERO               Y02008 38743002
         BZ    ZEUS                    YES, DONT WRITE RECORD    Y02008 38743202
         TM    SMCAOPT,SMCAOPT1        IS JOB ACCOUNTING ACTIVE  Y02008 38743602
         BNO   ZEUS                    NO, CANNOT WRITE SMF REC  Y02008 38744402
         TM    SMCAMISC,SMCAUSER+SMCAMAN IS SMF RECORDING REQ OR Y02008X38745202
                                         IS THERE A SYS1.MAN DS  Y02008 38746002
         BNO   ZEUS                    NO, CANNOT WRITE SMF REC  Y02008 38746802
         L     SMFREC,CVTEXT2          USE SAVE AREA IN IFDOLT57 Y02008 38747602
         L     SMFREC,D28(SMFREC)      AS WORK AREA TO CONSTRUCT Y02008 38748402
         LA    SMFREC,D40(SMFREC)      SMF RECORD.NOTE PTR TO    Y02008X38749202
                                       IFDOLT57 IS IN CVTEXT     Y02008 38750002
         XC    D0(L24,SMFREC),D0(SMFREC) CLEAR SMF RECORD AREA   Y02008 38750802
         MVI   RECDSCWD(SMFREC),SMFRECSZ PUT TOTAL SIZE OF REC   Y02008X38751602
                                         IN REC DESC WORD        Y02008 38752402
         MVI   RECTYPE(SMFREC),TYPE11  PUT RECORD TYPE IN RECORD Y02008 38753202
         MVI   VARLNGTH(SMFREC),L6     PUT LENGTH OF REST OF REC Y02008X38754002
                                       IN THE RECORD             Y02008 38754802
         MVC   UCBCLTYP(L2,SMFREC),UCBTBYT3 PUT CLASS AND TYPE INY02008X38755602
                                             RECORD              Y02008 38756402
         MVC   DEVADDR(L2,SMFREC),UCBCHAN PLACE HEX DEVICE ADDR  Y02008X38757202
                                          IN RECORD              Y02008 38758002
         LR    R1,SMFREC               PUT PTR TO SMF REC IN R1  Y02008 38758802
         SVC   83                      ISSUE SMF SVC TO WRITE RECY02008 38759602
         DROP  SMCAREG                                                  38760402
ZEUS     EQU   *                       MAKE SPECIAL ZEUS 2305 CK X03008 38761202
         CLI   D18(UCBADDR),HEX20      IS THIS A DASD            X03008 38762002
         BNE   SETFALSE                NO, SET FAKE EXPOSURE     X03008 38763002
         CLI   D19(UCBADDR),HEX06      YES, IS THIS A ZEUS I     X03008 38764002
         BE    EXPOSURE                YES, GO CALCULATE BASE    X03008 38765002
*                                      UCB ADDR                  X03008 38766002
         CLI   D19(UCBADDR),HEX07      IS THIS A ZEUS II 2305    X03008 38767002
         BE    EXPOSURE                                          X03008 38768002
SETFALSE EQU   *                       AT THIS POINT A FALSE     X03008 38769002
*                                      EXPOSURE WILL BE PLACED   X03008 38770002
*                                      IN THE DEVTAB FOR IFDOLT35X03008 38771002
         ICM   R6,B'0001',TCBPKF       GET OLTEP PROTCT KEY      Y02008 38771302
         SPKA  D0(R6)                  GET INTO OLTEP PROTECT KEYY02008 38771602
         MVI   D31(DEVREG),HEXFF       SET FF IN DEVTAB          X03008 38772002
         B     ALOCHK                  GO CHECK ALLOCATION       X03008 38773002
EXPOSURE EQU   *                       CALCULATE ZEUS BASE UCB   X03008 38774002
*                                      ADDRESS AND EXPOSURE      X03008 38775002
         ICM   R6,B'0001',TCBPKF       GET OLTEP PROTCT KEY      Y02008 38775302
         SPKA  D0(R6)                  GET INTO OLTEP PROTECT KEYY02008 38775602
         MVC   D31(L1,DEVREG),D7(DEVREG) MOVE IN EBCDIC CHAR     X03008 38776002
         NI    D31(DEVREG),HEX07       CHANGE IT TO AN EXPOSURE  X03008 38777002
*                                      NUMBER FROM 00 TO 07 RANGEX03008 38778002
         LA    WKREG1,HEX200           GET HEX 200 OFFSET        YM4987 38779002
         L     UCBADDR,UCBBASE         GET PTR TO BASE UCB-200   YM4987 38780002
         AR    UCBADDR,WKREG1          POINT TO COMMON BASE UCB  YM4987 38781002
         ST    UCBADDR,D8(DEVTAB)      SAVE ZEUS UCB ADDRESS            38784002
ALOCHK   EQU   *                       UCBNALOC CHECK IS HERE    X03008 38785002
         SR    R6,R6                   KEY ZERO                  Y02008 38786002
         SPKA  D0(R6)                  GET SUPERVISOR STATE AGAINY02008 38787002
         SPACE 3                                                 X03008 38790002
         B     ALOCATED                YES, CONTINUE SCAN        YM7205 38970002
     EJECT                                                              38972002
*                                      THIS SUB ROUTINE WILL     X03008 38974002
*                                      DETERMINE IF OLTEP TURNED X03008 38976002
*                                      ON THE UCBNALOC FOR A     X03008 38978002
*                                      UCB RETURNED FROM IOSGEN  X03008 38980002
UNALCCHK EQU   *                                                 YM7205 38981002
         SPACE 3                                                        38982002
         STM   ZEROO,RCREG,D0(REG13)   SAVE ALL REGS             X03008 38984002
         L     UCBTAB,CVTEXT2          GET CVT EXTENTION         X03008 38986002
         L     UCBTAB,D28(UCBTAB)      GET CVTOLTEP WORD         X03008 38988002
         L     UCBTAB,D28(UCBTAB)      GET MASK TABLE ADDRESS    Y02008 38990002
         L     SCAN,CVTILK2            GET IOS UCB LOOK ADDR     X03008 38992002
         SPACE  3                                                       38994002
SETCOUNT EQU   *                       CHECK EACH UCB            X03008 38996002
         LA    UCBTAB,D4(UCBTAB)       BUMP TO MASK BITS (NEXT)  X03008 38998002
         LA    BCTREG,32               SET COUNT TO 32 SHIFTS    X03008 39000002
         L     ODDREG,D0(UCBTAB)       GET A WORD OF MASK BITS   X03008 39002002
         SPACE 2                                                        39004002
SHIFTIT  EQU   *                       GET A FINE BIT            X03008 39006002
         XR    SHIFTER,SHIFTER         ZERO REG FOR SHIFT        X03008 39008002
         SLDL  SHIFTER,ONE             GET THE NEXT BIT          X03008 39010002
         LTR   SHIFTER,SHIFTER         WAS THE BIT ON..          X03008 39012002
         BZ    BUMPUP                  NO, GO GET NEXT UCB ADDR  X03008 39014002
         SPACE 1                                                        39016002
         ICM   SHIFTER,B'0011',D0(SCAN) GET UCB ADDR FROM TBL    X03008 39018002
         CR    SHIFTER,UCBADDR         IS THE DEVICE OLTEPS..... X03008 39020002
         BNE   BUMPUP                  TRY NEXT UCB              YM7205 39022002
SHIFTIT1 EQU   *                                               @Y30LPAW 39022303
         LM    ZEROO,RCREG,D0(REG13)   RESTORE REGS              YM7205 39022602
         B     NEXTUCB                 GO TO NEXT DEVTAB ENTRY   YM7205 39023202
         SPACE 4                                                        39024002
BUMPUP   EQU   *                       GET THE NEXT UCB ADDR FROMX03008 39026002
         LA    SCAN,D2(SCAN)           IOS  LOOK UP TABLE        X03008 39028002
         CLI   D1(SCAN),HEXFF          IS THIS THE TABLES END..  X03008 39030002
         BE    ERRORDEV                IF YES, NO GO DEVICE      X03008 39032002
         SPACE 2                                                        39034002
         BCT   BCTREG,SHIFTIT          GO GET NEXT MASK BIT     X03008  39036002
         B     SETCOUNT                GO GET NEXT WORD OF MASKS X03008 39038002
         SPACE 2                                                        39040002
ERRORDEV EQU   *                       AT THIS POINT DEV IS NOT  X03008 39042002
*                                      OLTEPS TO TEST..          X03008 39044002
         TM    UCBDVCLS,X'08'      UNIT RECORD DEV?            @Y30LPAW 39044303
         BZ    ERRORDV1            IF NOT-GO AROUND            @Y30LPAW 39044603
         CLI   UCBUNTYP,X'42'      IS IT AN MSC?               @ZA04291 39044937
         BE    SHIFTIT1            IF YES-ITS OK               @Y30LPAW 39045203
ERRORDV1 EQU   *                                               @Y30LPAW 39045503
         LM    ZEROO,RCREG,D0(REG13)   RESTORE ALL REGS          X03008 39046002
NOGODEV  EQU   *                                                 Y02008 39053002
         OI    D14(DEVTAB),HEX08       YES, SET NO GO SWITCN     X03008 39060002
         B     NEXTUCB                 GO TO NEXT DEVTAB ENTRY   X03008 39150002
         SPACE  2                                                       39240002
ALOCATED TM    D3(UCBADDR),HEX08       IS DEVICE ALLOCATED       X03008 39370002
         BNO   ONLINECK                NO, GO CHECK ONLINE STATUSX03008 39420002
         OI    D14(DEVTAB),HEX04       SET ALLOCATED BIT IN TAB  X03008 39600002
         SPACE  2                                                       39780002
ONLINECK TM    D3(UCBADDR),HEX80       IS DEVICE ONLINE          X03008 39870002
         BNO   PSEUDO                  NO, GO CHK REI DEVTAB     X03008 39960002
         OI    D12(DEVTAB),HEX80       SET ONLINE BIT IN DEVTAB  X03008 40100002
         SPACE  2                                                       40150002
PSEUDO   TM    D14(DEVREG),HEX01       IS THIS A PSEUDO DEVTAB   X03008 40160002
         BO    REICHECK                YES, GET OUT OF MAIN LINE X03008 40170002
         SPACE 2                                                        40180002
MIXEDCK  TM   D3(UCBADDR),HEX88        IS DEV ALLOC OR ONLINE    X03008 40200002
         BNZ  ANRCHECK                 EITHER ON CHECK ANR GUYS  X03008 40250002
         SPACE 2                                                        40320002
UCBUNALC EQU   *                       SET UCBNALOC ON           Y02008 40410002
         TM    UCBFL5,UCBNALOC     IS UCBNALOC ON              @ZA12058 40414041
         BO    UNALCCHK            BR IF YES                   @ZA12058 40424041
         OI    UCBFL5,UCBNALOC     SET IT ON IF NO             @ZA12058 40434041
         L     UCBTAB,CVTEXT2          GET CVT EXTENTION ADDR    X03008 40460002
         L     UCBTAB,D28(UCBTAB)      GET CVT OLTEP POINTER     X03008 40470002
         L     UCBTAB,D28(UCBTAB)      GET MASK TABLE ADDRESS    Y02008 40480002
         L     SCAN,CVTILK2            GET IOS UCBLOOK TAB       X03008 40482002
         XR    COUNT,COUNT             ZERO THE REG              X03008 40490002
         SPACE 3                                                        40494002
MATCHUP  EQU   *                                                 X03008 40496002
         CLM   UCBADDR,B'0011',D0(SCAN) IS THIS THE UCB        @ZA12058 40498041
         BE    MASKUP                  IF YES GO SET BIT         X03008 40498402
         LA    SCAN,D2(SCAN)       IF NO, GET NEXT UCB DISP    @ZA12058 40498841
         LA    COUNT,D1(COUNT)         AND BUMP COUNTER          X03008 40499202
         B     MATCHUP                 GO CHECK NEW UCB ADDR     X03008 40499602
         SPACE 2                                                        40499702
MASKUP   EQU   *                                                 X03008 40499802
         LR    SCAN,COUNT          SAVE THE OFFSET             @ZA12058 40499941
         SRL   COUNT,D3            SHIFT OFF BIT OFFSET        @ZA12058 40519941
         N     SCAN,COUNTMSK       MASK OFF BYTE OFFSET        @ZA12058 40539941
         LA    SCAN,MASKTBL(SCAN)  LOCATE MASK TO BE USED      @ZA12058 40559941
         LA    COUNT,D4(UCBTAB,COUNT) LOCATE BYTE TO BE SET    @ZA12058 40579941
         OC    D0(D0,COUNT),D0(SCAN) OR ON THE BIT             @ZA12058 40599941
         B     NEXTUCB                                         @ZA12058 40619941
         SPACE  2                                                       40656702
ANRCHECK EQU   * AT THIS POINT DEV IS ONLINE, ALLOC ,OR BOTH     X03008 40680002
         SPACE   3                                                      40730002
         CLI   D18(UCBADDR),HEX10      IS THIS COMMO EQUIPMENT   X03008 40770002
         BNE   NEXTUCB                 GO GET NEXT DEVTAB ENTRY  X03008 40860002
         CLI   D19(UCBADDR),HEX09      IS THIS A 3277 DISPLAY    X03008 40950002
         BL    NEXTUCB                 GO GET NEXT DEVTAB ENTRY  X03008 41040002
         CLI   D19(UCBADDR),HEX0B      IS THIS A 3284 OR 3286    X03008 41130002
         BH    NEXTUCB                 GO GET NEXT DEVTAB ENTRY  X03008 41220002
         TM    D3(UCBADDR),HEX82       IS THIS THE ACTIVE OP     X03008 41310002
*                                      CONSOLE                   X03008 41400002
         BNO   SETOLTEX                NO, GO SET OLTEX FLG = 1  X03008 41490002
SETERRON OI    D14(DEVTAB),HEX80       SET ANR NO TEST SWITCH    X03008 41580002
         B     NEXTUCB                 GO GET NEXT DEVTAB ENTRY  X03008 41670002
         SPACE 2                                                        41760002
SETOLTEX EQU   *                       IS THIS A BTAM DEVICE     X03008 41810002
         L     R6,UCBEXTPT         GET ADD OF UCB EXT          @ZA06016 41820037
         USING UCBCMEXT,R6         EST ADD OF UCB EXT          @ZA06016 41822037
         CLI   UCBATI,HEX1C        IS IT A BTAM DEVICE         @ZA06016 41824037
         DROP  R6                                              @ZA06016 41826037
         BNE   SETERRON                GO SET ANR NO GO SW       X03008 41830002
         OI    UCBGCB,UCBOLTEP     TURN ON UCBOLTEP BIT        @ZA12058 41850041
         B     UCBUNALC                SET UCBNALOC & MSK BITS   Y02008 41940002
         SPACE 3                                                 X03008 42030002
         SPACE 3                                                 X03008 43380002
REICHECK EQU   * MAKE SPECIAL CKS FOR REI BOX (NON-TEST DEVICE)  X03008 43440002
         TM    D3(UCBADDR),HEX08       IS DEVICE ALLOCATED?      X03008 43450002
         BO    NEXTUCB                 IF YES, EXIT AS A NO GO   X03008 43460002
         NI    D3(UCBADDR),HEX7F       ZERO OUT ONLINE BIT       X03008 43462002
         TM    UCBFL5,UCBNALOC     IS THE BIT ON               @ZA12058 43464041
         BO    REICHK2             BR IF YES                   @ZA12058 43464641
         OI    UCBFL5,UCBNALOC     SET THE BIT ON              @ZA12058 43465241
         L     SCAN,CVTEXT2            GET CVT EXTEN ADDR        X03008 43466002
         L     SCAN,D28(SCAN)          GET ADDR OF OLTEPS TABLE  X03008 43468002
         ST    UCBADDR,D32(SCAN)       SAVE REI UCB ADDR                43468402
         B     NEXTUCB                 AND CONTINUE AS IF NON-   X03008 43578802
*                                      PSEUDO DEVTAB ENTRY       X03008 43588802
REICHK2  EQU   *                                                 Y02008 43598802
         L     R6,CVTEXT2              GET CVT EXTENSION PTR     Y02008 43608802
         L     R6,D28(R6)              GET CVT OLTEP PTR         Y02008 43618802
         TM    D4(R6),X'40'            IS REI ACTIVE             Y02008 43669602
         BNO   NOGODEV                 CAN'T USE THIS DEVICE     Y02008 43869602
         SPACE  3                                                       44069602
         SPACE 3                                                 X03008 44460002
NEXTUCB  EQU   *                                               @ZA12058 44550041
         SPACE 3                                                 X03008 44560002
         MVC   D0(L12,SAVEPTR),DEQUCB MOVE THE DEQ             @ZA12058 44600041
         DEQ   ,MF=(E,(SAVEPTR))   AND EXECUTE IT              @ZA12058 44602041
NODEQ    EQU   *                                               @ZA12058 44604041
         LA    DEVREG,D56(DEVREG)  GET NEXT DEVTAB ENTRY       @ZA12058 44606041
         SPACE 3                                                 X03008 44610002
         BCT   CNTREG,LOOKUP           GO PROCESS NEXT DEVICE    X03008 44640002
         L     R0,ENQDQGM          FREE THE SPACE FOR ENQ AND  @ZA12058 44670041
         FREEMAIN R,LV=(R0),A=(SAVEPTR) DEQ                    @ZA12058 44700041
         SPACE 3                                                 X03008 44730002
         XR    RETCODE,RETCODE         SET SUCCESSFUL RTN        X03008 44910002
         BR    EXIT                    LEAVE LOOKUP FUNCTION     X03008 45000002
         EJECT                                                          45090002
*****************************************************************Y02008 45180002
*                                                                Y02008 45180602
*                    IS THIS AN MP ENVIRONMENT                   Y02008 45181202
*                                                                Y02008 45181802
*****************************************************************Y02008 45182402
         SPACE 2                                                        45183002
FUNC2    EQU   *                       IS THIS MP                Y02008 45183602
         USING CSD,CSDREG              ESTABLISH CSD ADDRESSABILITY     45184202
         L     CSDREG,CVTCSD           GET CSD POINTER           Y02008 45184802
         SR    R1,R1                   ZERO RETURN REG           Y02008 45185402
         TM    CSDFLAGS,CSDMP          IS THIS MP                Y02008 45186002
         BNO   D0(RETURN)              NO - RETURN 00 IN R1      Y02008 45186602
         LA    R1,X'80'                YES, RETURN 80 IN R1      Y02008 45187202
         BR    RETURN                  RETURN TO CALLER          Y02008 45187802
         EJECT                                                          45188402
*****************************************************************Y02008 45189002
*                                                                Y02008 45189602
* THIS IS FUNCTION 58-----OLTEP INITIALIZATION                   Y02008 45190202
*                                                                Y02008 45190802
*****************************************************************Y02008 45191402
INITALIZ EQU   *                       INITIALIZATIONNNN                45192002
*****************************************************************Y02008 45192602
*                                                                Y02008 45193202
*              OBTAIN STORAGE FOR DISABLED INTERRUPT EXIT      @ZA15468 45193841
*                                                              @ZA15468 45194041
*              PARM1 POINTS TO ADDRESS OF IFDOLT57             @ZA15468 45194241
*              PARM2 POINTS TO ADDR IN OCA FOR MOVED IFDOLT57  @ZA15468 45194441
*              PARM3 POINTS TO ADDRESS OF SCT                  @ZA15468 45194641
*                                                              @ZA15468 45194841
***************************************************************@ZA15468 45195041
         LM    PARM1,PARM3,D0(PARMRG9) GET PARM LIST                    45195602
         L     R0,D12(PARM1)      GET DIE SIZE                          45196202
         ICM   R0,B'1000',SUB245  GET SUBPOOL NAME '245'                45196802
         GETMAIN R,LV=(0)         ISSUE GETMAIN FOR DIE                 45197402
         STIDP D0(R1)              GET CPU ID                  @ZA15468 45197741
         ICM   R6,B'0001',TCBPKF       GET OLTEP PROTECT KEY     Y02008 45198002
         SPKA  0(R6)                   GET IN OLTEP PROTECT KEY  Y02008 45198602
         ST    R1,D0(PARM2)       SAVE DIE (NEW) ADDR IN OCA            45199202
         MVC   CPUIDOFF(D5,PARM3),D1(R1) MOVE CPUID TO OCA     @ZA15468 45199541
         SR    R6,R6                   KEY ZERO                  Y02008 45199802
         SPKA  0(R6)                   GET SUPERVISOR STATE AGAINY02008 45200102
         LR    WORKRG,R1          SAVE ADDR                             45200402
         SPACE 2                                                        45201002
*****************************************************************Y02008 45201602
*                                                                Y02008 45202202
*                       IS THIS THE 2ND OLTEP                    Y02008 45202802
*                                                                Y02008 45203402
*****************************************************************Y02008 45204002
         L     CVTOLT,CVTEXT2     GET EXTENTION ADDR                    45204602
         SR    WORKREG,WORKREG         ZERO  WORKREG FOR CS      Y02008 45205202
         CS    WORKREG,WORKRG,D28(CVTOLT) IS THIS 2ND OLTEP      Y02008 45205802
         BNE   FREEUP1                 YES, TERMINATE            Y02008 45206402
         LA    CVTOLT,D28(CVTOLT) SET REG TO CVTOLTEP WORD              45207002
         B     MOVEAPDG                MOVE DIE                  Y02008 45207602
         SPACE 2                                                        45208202
*****************************************************************Y02008 45208802
*                                                                Y02008 45209402
*                       FREE STORAGE FOR DIE AREA                Y02008 45210002
*                                                                Y02008 45210602
*****************************************************************Y02008 45211202
FREEUP1  EQU   *                  FREE DIE SPACE                 Y02008 45211802
         L     R1,D0(PARM2)       GET STG ADDR TO BE FREED              45212402
         L     R0,D12(PARM1)      GET DIE SIZE FOR FREEING              45213002
         ICM   R0,B'1000',POOL245 SET SUBPOOL ADDR                      45213602
         FREEMAIN R,LV=(0),A=(1)       RELEASE STORAGE           Y02008 45214202
         LA    R15,8              SET NO GO RETURN CODE                 45214802
         BR    RETURN             AND EXIT MODULE                       45215402
*****************************************************************Y02008 45216002
*                                                                Y02008 45216602
*                            MOVE DIE TO SUBPOOL                 Y02008 45217202
*                                                                Y02008 45217802
*****************************************************************Y02008 45218402
MOVEAPDG EQU   *                  MOVE DIE                              45219002
         L     R0,D0(PARM2)       GET SUBPOOL 245 ADDR   =TO AD         45219602
         L     R1,D12(PARM1)      GET DIE SIZE           =TO SZ         45220202
         LR    R6,PARM1           GET DIE ADDR           =FROM AD       45220802
         LR    R7,R1              GET DIE SIZE           =FROM SZ       45221402
         SPACE 2                                                        45222002
*****************************************************************Y02008 45222602
*                                                                Y02008 45223202
*              MOVE THE DIE                                      Y02008 45223802
*                                                                Y02008 45224402
*****************************************************************Y02008 45225002
         MVCL  R0,R6              MOVE IT TO 245                        45225602
         L     WORKRG,D0(PARM2)   GET SP 245 ADDR                       45226202
         ST    TCBREG,D8(WORKRG)  SAVE TCB IN DIE PREFACE               45226802
         ST    WORKRG,D0(CVTOLT)     PUT 245 ADDR IN CVTOLTEP           45227402
         SPACE 2                                                        45228002
*****************************************************************Y02008 45228602
*                                                                Y02008 45229202
*                     SAVE ASCBASID IN DIE                       Y02008 45229802
*                                                                Y02008 45230402
*****************************************************************Y02008 45231002
         USING ASCB,ASCBREG                                      Y02008 45231602
         L     R6,CVTTCBP              FIND PTR TO CURRENT ASCB  Y02008 45232202
         L     ASCBREG,D12(R6)                                   Y02008 45232802
         MVC   D38(L2,WORKRG),ASCBASID SAVE ASID IN DIE          Y02008 45233402
         DROP  ASCBREG                                                  45234002
         XR    R15,R15                 SET GO RETURN CODE               45234602
         SPACE 2                                                        45235202
*****************************************************************Y02008 45235802
*                                                                Y02008 45236402
*         OBTAIN STORAGE AND BUILD UCB MASK TABLE                Y02008 45237002
*                                                                Y02008 45237602
*****************************************************************Y02008 45238202
         L     SCAN,CVTILK2        GET CVT LOOK UP ADDR          X03008 45238802
         XR    COUNT,COUNT         ZERO COUNT REG                X03008 45239402
         XR    WKREG7,WKREG7           CLEAR OUT WORK REG        Y02008 45240002
FETCHUCB ICM   WKREG7,B'0011',D0(SCAN)  GET UCB ADDR             Y02008 45240602
         CLM   WKREG7,B'0001',TABEND   IS THIS THE LAST          Y02008 45241202
*                                      UCB IN THE SYSTEM         X03008 45241802
         BE    GETSTORG                GO GET STORAGE            Y02008 45242402
         LA    SCAN,D2(SCAN)           NO, GET NEXT UCB ADDR     X03008 45243002
         LA    COUNT,D1(COUNT)         AND BUMP COUNT            X03008 45243602
         B     FETCHUCB                THEN COUNT TO END         X03008 45244202
GETSTORG EQU   *                       GET STORAGE FOR MASK TABLEY02008 45244802
         LR    SAVE,COUNT              SAVE ACTUAL COUNT         X03008 45245402
         L     WORKREG,CVTEXT2         GET CVT EXT ADDR          X03008 45246002
         L     WORKREG,D28(WORKREG)    GET CVT OLTEP ADDR        X03008 45246602
         SRL   COUNT,THREE         DIVIDE BY 8                 @Y30LPAW 45246903
         LA    COUNT,K72(COUNT)    PLUS SIZE FOR SSIDLIST      @Y30LPAW 45247003
         LA    COUNT,D15(COUNT)        BUMP BY 15                X03008 45247202
         SRL   COUNT,THREE         AND ROUND OFF                 X03008 45247802
         SLL   COUNT,THREE         TO A DOUBLE WORD              X03008 45248402
         LR    SAVE1,COUNT         SAVE UPDATED VERSION          X03008 45249002
         ICM   COUNT,B'1100',SP245     GET SUBPOOL NUMBER        Y02008 45249602
         LR    R0,COUNT            SET R0 FOR GETMAIN            X03008 45250202
         GETMAIN R,LV=(0)          OBTAIN STG FOR UCBMSKTBL      X03008 45250802
         ST    R1,D28(WORKREG)         SAVE TABLE ADDR IN DIE    Y02008 45251402
         ST    TCBREG,D8(WORKREG)      SAVE TCB ADDR IN DIE      Y02008 45252002
         LR    WORKREG,R1              ZERO AREA OBTAINED               45252602
         XR    DUMMY1,DUMMY1           ZERO OUT REG                     45253202
         XR    DUMMY2,DUMMY2           ZERO OUT REG                     45253802
         MVCL  WORKREG,DUMMY1          MOVE TO SUBPOOL                  45254402
         ST    SAVE,D0(R1)         SAVE UCB ACTUAL COUNT         X03008 45255002
         SPACE 2                                                        45255602
*****************************************************************Y02008 45256202
*                                                                Y02008 45256802
*                   OBTAIN STORAGE FOR REI DEB                   Y02008 45257402
*                                                                Y02008 45258002
*****************************************************************Y02008 45258602
         L     POOLSIZE,POOLCNST       SET REG ZERO FOR SP+SIZE  X03008 45270002
         GETMAIN R,LV=(0)              OBTAIN STORAGE FOR        X03008 45360002
         LR    WORKRG,R1               SAVE REI DEB  ADDR IN R5 YM08149 45450002
         SPACE 3                                                 X03008 45540002
         OI    D20(TCBREG),HEX02       SET TCBOLTEP BIT TO ONE   X03008 45630002
*                                      FOR ABEND CONDITION       X03008 45720002
         SPACE 2                                                        45730002
*****************************************************************Y02008 45740002
*                                                                Y02008 45750002
*           FIND 2955 UCB, IF ONE EXISTS                         Y02008 45760002
*                                                                Y02008 45770002
*****************************************************************Y02008 45780002
         SPACE 3                                                 X03008 45810002
         L     UCBREG,CVTILK2          GET UCBADDRS TABLE FROM   X03008 46350002
         SR    RETCODE,RETCODE         CVT, SET RI5 TO ZERO      X03008 46440002
         SR    WORKREG2,WORKREG2       REG FOR REIUCB ADR       YM08149 46460002
         SR    UCBADDR,UCBADDR         AND ZERO UCB ADDR REG     X03008 46490002
LOOKUP2  ICM   UCBADDR,B'0011',D0(UCBREG)   GET UCB ADDR         X03008 46530002
         LTR   UCBADDR,UCBADDR         SET CONDITION CODE        X03008 46580002
         BZ    BUMPUCB                 IS THIS A NULL UCB ADDR   X03008 46710002
         TM    D1(UCBREG),HEXFF        IS THIS THE TABLES END    X03008 46800002
         BO    VIRTEST                 GO MAKE V=V TESTS         X03008 46890002
         CLC   D18(L2,UCBADDR),HEX4014 IS THIS A 2955            X03008 46980002
         BNE   BUMPUCB                 NO- GET NEXT UCB ADDR     X03008 47070002
         LR    WORKREG2,UCBADDR        SAVE RETAIN UCB ADDRESS  YM08149 47430002
         B     VIRTEST                 GO SEE IF VIRTUAL         X03008 47480002
         SPACE 3                                                 X03008 47700002
BUMPUCB  LA    UCBREG,D2(UCBREG)       GET PTR TO NEXT UCB       X03008 47790002
         B     LOOKUP2                 CONTINUE SCAN OF UCB'S    X03008 47880002
         SPACE 2                                                        47881002
*****************************************************************Y02008 47882002
*                                                                Y02008 47883002
*                  DETERMINE IF OLTEP IS IN VIRTUAL OR REAL      Y02008 47884002
*                                                                Y02008 47885002
*****************************************************************Y02008 47886002
         SPACE   3                                                      47890002
VIRTEST  SR    VIRTUAL,VIRTUAL         ZERO OUT REG FOR V=V CKS  X03008 47900002
         TM    TCBFLGS6,TCBRV          IS OLTEP OPERATING V=V    X03008 47930002
         BO    NOTVIRT                 NO, DONOT SET VIRT INDICATX03008 47940002
         SR     R7,R7                  CLEAR REG 7 FOR ASID    @YM08149 47941002
         L     SAVEREG,CVTEXT2     LOAD ADD OF CVT EXT         @ZA09691 47941141
         L     SAVEREG,D28(SAVEREG) LOAD ADD OF DIE FROM CVTOL @ZA09691 47941241
         LA    SAVEREG,D40(SAVEREG) LOAD ADD OF SA FROM DIE    @ZA09691 47941341
LOKIT    SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=SAVE,RELATED=UNLOKT 47941441
         LTR   R15,R15             CHECK RETURN CODE           @ZA09691 47941541
         BZ    LOKT                ZERO AND                    @ZA09691 47941641
         CH    R15,FOUR            FOUR ARE OKAY               @ZA09691 47941741
         BE    LOKT                                            @ZA09691 47941841
         B     RETCODE4            ALL ELSE BAD                @ZA09691 47941941
LOKT     EQU   *                                               @ZA09691 47942041
         USING ASCB,ASCBREG            ASCB ADDRESSABILITY     @YM08149 47943002
         L     R6,CVTTCBP              GET PTR TO 4 WORD LIST  @YM08149 47945002
         L     ASCBREG,D12(R6)         GET ASCB PTR            @YM08149 47945202
         OI    ASCBFLG1,ASCBNSWP       NON SWAPPABLE MEMORY    @YM08149 47945402
UNLOKT   SETLOCK RELEASE,TYPE=LOCAL,REGS=SAVE,RELATED=LOKIT    @ZA09691 47945641
         LTR   R15,R15                                         @ZA09691 47945741
         BZ    UNLOCKED                                        @ZA09691 47945841
         CH    R15,FOUR                                        @ZA09691 47945941
         BE    UNLOCKED                                        @ZA09691 47946041
         B     RETCODE4                                        @ZA09691 47946141
UNLOCKED EQU   *                                               @ZA09691 47946241
         ICM   R7,B'0011',ASCBASID GET ASID IN R7              @ZA09691 47946341
         SR    R1,R1                                           @ZA17683 47946441
         SYSEVENT REQSWAP,ASID=(R7) SWAP ON                    @ZA17683 47946541
         CLM   R1,B'0001',FOUR+1   SWAP OK ?                   @ZA17683 47946641
         BH    RETCODE4            NO ERROR                    @ZA17683 47946741
*  SWAP-OUT HONORED OR ADDR SPACE NON SWAPPABLE                @ZA17683 47946841
         SYSEVENT DONTSWAP,ASID=(R7) MEMORY NOT SWAPPABLE      @ZA17683 47946941
         CLM   R1,B'0001',ZERO     EVERYTHING OK               @ZA17683 47947041
         BNE  RETCODE4                 NO, FNCTN NOT DONE      @YM08149 47947502
         SR    VIRTUAL,VIRTUAL         ZERO OUT REG FOR V=V CKS YM08149 47947702
         L     R6,CVTTCBP              GET PTR TO 4 WORD LIST    Y02008 47954002
         L     ASCBREG,D12(R6)         GET PTR TO ACTIVE ASCB    Y02008 47958002
         L     LDAREG,ASCBLDA          GET PTR TO LDA            Y02008 47964002
         USING LDA,LDAREG              LDA ADDRESSABILITY        Y02008 47970002
         ST    VIRTUAL,VVREGSZ         ZERO REGION SIZE IN LDA   Y02008 47975002
         ST    VIRTUAL,LDALIMIT        ZERO LDA REGION LIMIT     Y02008 47980002
HERE     ICM   VIRTUAL,B'1000',HERE    SET RET INDICATING VIRTUALX03008 47985002
NOTVIRT  EQU   *                                                 X03008 47990002
         LR    R15,WORKREG2            REIUCB ADDR IN R15        Y02008 47991002
         LR    POOLADR,WORKRG          REI DEB ADDR IN REG0      Y02008 47992002
ENDFUN   BR    14                                                X03008 47995002
RETCODE4 LA    R15,4                   SET RC=4 FOR MSG 899I   @YM08149 48000002
         BR    14                                              @YM08149 48030002
         EJECT                                                          48060002
FUNC21   EQU   *                       CALL CODE= 54 UCB CHECKER X03008 48150002
         LR    PARMREG,SAVEREG9    RESTORE PARMS POINTER         X03008 48200002
         L     UCBADDR,D0(PARMREG)     GET UCB ADDRESS           X03008 48240002
         TM    D4(PARMREG),HEX40       SHOULD NRDY BIT BE SET ='1'      48330002
*                                                                X03008 48420002
         BNO   NORESET                 NO, DONT SET BIT          X03008 48510002
         OI    D6(UCBADDR),HEX40       YES, SET BIT ON           X03008 48600002
         BR    RETURN                  EXIT THE FINE MODULE      X03008 48690002
         SPACE  2                                                       48780002
NORESET  EQU   *                       CHECK NRDY BIT            X03008 48870002
         TM    D6(UCBADDR),HEX40       IS NTRDY BIT =1           X03008 48960002
         BNO   D0(RETURN)              NO, EXIT MODULE           X03008 49050002
         TM    D18(UCBADDR),HEXA0  TAPE OR DASD CLASS?         @ZM42051 49140037
         BZ    SETFF               NO, GO SET RTN CODE.        @ZM42051 49230037
         NI    D6(UCBADDR),HEXBF   TURN OFF THE NTRDY BIT      @ZM42051 49320037
         BR    RETURN              EXIT THIS MODULE            @ZM42051 49410037
SETFF    LA    RCREG,HEXFF         RETRN CODE FOR IFDOLT52     @ZM42051 49500037
         BR    RETURN                  EXIT THIS MODULE          Y02008 49590002
         EJECT                                                          49660002
*****************************************************************Y02008 49730002
*                                                                Y02008 49800002
*                            PURGE FUNCTION                      Y02008 49870002
*                                                                Y02008 49940002
*****************************************************************Y02008 50010002
PURGERTN EQU   *                       PURGE ROUTINE             Y02008 50080002
         USING IOSB,IOSBREG            IOSB ADDRESSABILITY       Y02008 50150002
         USING PPL,PPLREG              PURGE PARMLIST            Y02008 50220002
         USING TCCW,TCCWREG            TCCW ADDRESSABILITY       Y02008 50240002
         USING IOCOM,IOCREG            ADDRESSABILITY IOCOM AREA Y02008 50260002
         L     IOSBREG,D0(SAVEREG9)    GET IOSB PTR              Y02008 50290002
         LR    WRKREG12,CALLER         GET CALL CODE IN REG 12   Y02008 50300002
         SLL   WRKREG12,16             SHIFT IT TO LEFT 16 BITS  Y02008 50310002
         LTR   WRKREG12,WRKREG12       IS IT NEGATIVE            Y02008 50320002
         BM    UNFIXRTN                REQUEST WAS CALL CODE 8050Y02008 50330002
         L     R0,SUBPOOL              GET 16 BYTES-SUBPOOL 254  Y02008 50360002
         GETMAIN R,LV=(0)              GET PURGE PARMLIST        Y02008 50430002
         LR    PPLREG,R1               INITIALIZE PPLREG         Y02008 50500002
         XC    D0(16,PPLREG),D0(PPLREG) CLEAR PPL AREA           Y02008 50570002
         MVI   PPLOPT1,PPLDS+PPLHIO+PPLEXR+PPLRB DSID PRGE,NO RBYM03325X50640002
                                       DO HIO, DONT BUILD A PIRL Y02008X50710002
                                       PPLEXR-OPT BYTE 2 IS VALIDY02008 50780002
         MVC   PPLDSIDA(3),IOSDSID+1   PLACE DATA SET IDENTIFIER Y02008X50850002
                                       IN PURGE PARMLIST         Y02008 50920002
         MVI   PPLDVRID,IOSOLTID       PLACE DRIVER ID IN PPL    Y02008 50950002
         CLI   D4(SAVEREG9),HEXFF      IS THIS A TP DEVICE       Y02008 50990002
         BNE   PURGE16                 NO, GO ISSUE SVC 16       Y02008 51060002
         L     R1,IOSUCB               PUT UCB ADDR IN REG 1     Y02008X51080002
                                       FOR SVC 33                Y02008 51100002
         SVC   33                      PURGE SVC-33              Y02008 51130002
         B     UNFIXRTN                GO UNFIX & FREE TCCW BLKS Y02008 51200002
PURGE16  EQU   *                       SVC 16 - PURGE            Y02008 51340002
         SVC   16                      NORMAL PURGE SVC          Y02008 51410002
UNFIXRTN EQU   *                       UNFIX & FREE TCCW BLK RTN Y02008 51480002
         TM    USEFLAGA,VIRTCCW        ARE CCWS VIRTUAL          Y02008 51500002
         BNO   FREEPPL                 NO FREEING OR UNFIXING    Y02008 51520002
*                                      FREE UP IOSB AND EXIT     Y02008 51540002
         L     TCCWREG,TCCWPTR         TCCW ADDRESSABILITY       Y02008 51560002
         LR    R1,TCCWREG              REG 1 MUST POINT TO TCCW  YM5415X51566002
                                       BLOCK TO GO TO CCW XLATOR YM5415 51572002
         MVI   TCCWOPTN,TCCWUNFX       OPTION TO UNFIX AND CHAIN Y02008X51580002
                                       FOR FREEMAIN              Y02008 51600002
         L     SAVEREG,CVTEXT2         GET CVT EXTENSION PTR     Y02008 51620002
         L     SAVEREG,D28(SAVEREG)    GET CVTOLTEP PTR          Y02008 51640002
         LA    SAVEREG,D40(SAVEREG)    GET PTR TO SAVE AREA IN   Y02008X51660002
                                       IFDOLT57 (DIE)            Y02008 51680002
         STM   R0,R15,D0(SAVEREG)      SAVE ALL REGS             Y02008 51700002
PRGELCK0 EQU   *                       OBTAIN LOCK               Y02008 51720002
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        X51740002
               RELATED=(LOCAL,IGC0005I(PRGELCK1)),REGS=USE       Y02008 51760002
         LM    R0,R15,D0(SAVEREG)      RESTORE ALL REGS          Y02008 51780002
         L     IOCREG,CVTIXAVL-CVTMAP(CVTREG) IO COM AREA ADDR   Y02008 51800002
         L     R15,IOCTCCW-IOCOM(IOCREG) CCW XLATOR ADDRESS      Y02008 51820002
         BALR  R14,R15                 GO TO CCW XLATOR TO UNFIX Y02008X51840002
                                       DATA AREAS & CHAIN TCCW   Y02008X51860002
                                       BLKS FOR FREEING          Y02008 51880002
PRGELCK1 EQU   *                       RELEASE LOCK              Y02008 51900002
         SETLOCK RELEASE,TYPE=LOCAL,                                   X51920002
               RELATED=(LOCAL,IGC0005I(PRGELCK0)),REGS=USE       Y02008 51940002
         LM    R0,R15,D0(SAVEREG)      RESTORE ALL REGS          Y02008 51960002
         LR    R1,TCCWREG              PUT TCCWPTR IN REG1       Y02008 51980002
TCCWFREE EQU   *                       TCCW FREE ROUTINE         Y02008 52110002
         L     FREERG,D0(R1)           GET PTR TO NEXT 160 BYTE  Y02008X52180002
                                       BLOCK TO BE FREED         Y02008 52250002
         L     R0,SP245                GET SUBPOOL ID & SIZE TO  Y02008X52320002
                                       BE FREED                  Y02008 52390002
         FREEMAIN R,LV=(0),A=(1)       FREE BLOCK                Y02008 52460002
         LTR   FREERG,FREERG           ARE THERE ANY MORE 160    Y02008X52530002
                                       BYTE BLOCKS TO FREE       Y02008 52600002
         BZ    FREEPPL                 GO FREE UP PPL            Y02008 52670002
         LR    R1,FREERG               PLACE ADDR OF BLOCK TO BE Y02008X52740002
                                       FREED IN R1               Y02008 52810002
         B     TCCWFREE                GO FREE IT UP             Y02008 52880002
FREEPPL  EQU   *                       FREE PURGE PARM LIST IF   Y02008X52950002
                                       NEEDED                    Y02008 52980002
         LTR   WRKREG12,WRKREG12       DOES PPL NEED TO BE FREED Y02008 53010002
         BM    PURGEOK                 NO, WE NEVER HAD ONE      Y02008 53040002
         L     R0,SUBPOOL              GET SUBPOOL ID & SIZE     Y02008 53090002
         LR    R1,PPLREG               GET ADDRESS OF PURGE AREA Y02008 53160002
         FREEMAIN R,LV=(0),A=(1)       FREE IT UP                Y02008 53230002
PURGEOK  EQU   *                       THIS IS EXIT RTN          Y02008 53300002
         LTR   WRKREG12,WRKREG12       IS THIS PURGE OR FREE REQ Y02008 53310002
         BM    PURGEOK1                FREE REQ-DONT TURN PURGED Y02008X53320002
                                       FLAG ON IN IOSB                  53330002
         OI    USEFLAGA,PURGED         PURGE DONE                Y02008 53370002
PURGEOK1 EQU   *                       PART OF EXIT RTN          Y02008 53400002
         NI    USEFLAGA,HEXFF-INUSE    IOSB IS FREE TO USE AGAIN Y02008 53440002
         BR    EXIT                    RETURN TO CALLER          Y02008 53510002
         EJECT                                                          53580002
*****************************************************************Y02008 53650002
*                             FUNCTION 18                             * 53900020
*****************************************************************Y02008 54000002
FUNC18   EQU   *                       MOVE DEB  FOR REI ONLY    Y02008 54002002
         LR    PARMREG,SAVEREG9         RESTORE PARM LIST PTR    Y02008 54004002
         LM    TDEBREG,DEB254RG,D0(PARMREG) PUT PTR TO REI DEB INY02008 54006002
*                                       REG 7 & PUT PTR TO SUB-  Y02008 54008002
*                                       POOL IN REG 8.           Y02008 54010002
         IC    PKEYREG,TCBPKF           GET PROTECT KEY FROM TCB Y02008 54012002
         O     PKEYREG,DEVMSK           OR IN DEB ID OF 0000000F Y02008 54014002
         STC   PKEYREG,D24(TDEBREG)     STORE PROTECT KEY IN DEB Y02008 54016002
         ST    TCBREG,D0(TDEBREG)      PUT TCB ADDR IN DEB       YM4984 54017002
         MVC   D20(L1,TDEBREG),TCBDSP   SET DISPATCHING PRIORITY Y02008 54018002
*                                       IN DEB                   Y02008 54020002
         MVC   D0(L48,DEB254RG),D0(TDEBREG) MOVE DEB TO SUB-POOL Y02008 54022002
         L     R9,TCBDEB                PREPARE TO CHAIN DEB TO  Y02008 54024002
*                                       TCB                      Y02008 54026002
CHAINIT  EQU   *                        CHAIN ROUTINE            Y02008 54028002
         ST    R9,D4(DEB254RG)          PLACE NEXT DEB ADDR INTO Y02008 54030002
*                                       REI DEB                  Y02008 54032002
         CS    R9,DEB254RG,TCBDEB       CHAIN DEBS               Y02008 54034002
         BNE   CHAINIT                  CHAIN NOT OK, TRY AGAIN  Y02008 54036002
         L     R9,CVTEXT2               GET CVT EXTENSION ADDR   Y02008 54038002
         L     R9,D28(R9)               GET PTR TO DIE FROM CVT  Y02008 54040002
*                                       OLTEP WORD               Y02008 54042002
         TM    D4(R9),DEBVALID          HAS DEB BEEN VALIDATED   Y02008 54044002
         BO    0(RETURN)                                        ZA16982 54046041
         ST    DEB254RG,D4(R9)          SAVE REI DEB PTR AT DIE+4Y02008 54048002
         OI    D4(R9),HEX80             INDICATE THIS IS REI DEB Y02008 54050002
*                                       POINTER                  Y02008 54052002
         LR    WKREG6,DEB254RG          PREPARE TO SUBTRACT 4    Y02008 54054002
*                                       FROM DEB ADDRESS         Y02008 54056002
         SH    WKREG6,FOUR              PERFORM SUBTRACTION      Y02008 54058002
         XC    D0(L4,WKREG6),D0(WKREG6) ZERO FIRST WORD IN       Y02008 54060002
*                                       SUBPOOL FOR DEBCHK       Y02008 54062002
         L     R5,D24(DEB254RG)         GET DCB ADDRESS          Y02008 54064002
         DEBCHK (R5),TYPE=ADD,AM=EXCP   VALIDATE DEB             Y02008 54066002
         OI    D4(R9),DEBVALID          INDICATE DEB IS OK       Y02008 54068002
         BR    RETURN                  EXIT                      Y02008 54069002
         EJECT                                                          54070002
*****************************************************************Y02008 54170002
*                                                                Y02008 54270002
*              TRANSLATE REAL ADDR TO VIRTUAL ADDRESS            Y02008 54370002
*                                                                Y02008 54470002
*                                                                Y02008 54480002
*              ROPT---------------------------------             Y02008 54490002
*                 | IOSBPTR                        |             Y02008 54500002
*                 ----------------------------------             Y02008 54510002
*               +4| ADDR TO BE TRANSLATED          |             Y02008 54520002
*                 ----------------------------------             Y02008 54530002
*                                                                Y02008 54540002
*****************************************************************Y02008 54570002
         SPACE 2                                                        54670002
REXLATE  EQU   *                       RE-TRANSLATE ROUTINE      Y02008 54770002
         USING TCCW,TCCWREG            TCCW BLK ADDRESSABILITY   Y02008 54870002
         USING IOCOM,IOCREG            IO COM AREA ADDRESSABILITYY02008 54970002
         USING IOSB,IOSBREG            IOSB ADDRESSABILITY       Y02008 54975002
         L     SAVEREG,CVTEXT2         GET CVT EXTENSION PTR     Y02008 54980002
         L     SAVEREG,D28(SAVEREG)    GET DIE ADDRESS           Y02008 54990002
         LA    SAVEREG,D40(SAVEREG)    GET ADDR OF SAVEAREA IN DIE02008 55000002
         STM   ZEROO,R15,D0(SAVEREG)   SAVE REGS TEMPORARILY     Y02008 55010002
TRLOCK0  EQU   *                       GET LOCK FOR TRANSLATION  Y02008 55020002
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        X55030002
               RELATED=(LOCAL,IGC0005I(TRLOCK1)),REGS=USE        Y02008 55040002
         LM    ZEROO,R15,D0(SAVEREG)   RESTORE ALL REGS          Y02008 55070002
         L     IOSBREG,D0(SAVEREG9)    GET IOSB PTR              Y02008 55140002
         L     TCCWREG,TCCWPTR         GET ADDR OF TCCW BLK      Y02008 55210002
         L     R0,D4(SAVEREG9)         GET ADDR TO BE TRANSLATED Y02008 55280002
         MVI   TCCWOPTN,TCCWCSWX       PLACE OPTION BYTE IN TCCW Y02008 55370002
         LR    R1,TCCWREG              REG 1 MUST POINT TO TCCW  YM5415X55400002
                                       BLOCK TO GO TO CCW XLATOR YM5415 55430002
         L     IOCREG,CVTIXAVL         FIND XLATOR ADDRESS       Y02008 55470002
         L     R15,IOCTCCW                                       Y02008 55570002
         BALR  R14,R15                 GO TO XLATOR              Y02008 55670002
         LR    R15,R0                  RETURN XLATED ADDRESS     Y02008 56170002
         STM   ZEROO,R13,D0(SAVEREG)   SAVE  REGS  0-13          YM5413 56370002
         ST    R15,60(SAVEREG)         SAVE REG 15               YM5413 56470002
TRLOCK1  EQU   *                       FREE LOCK USED FOR TRANS  Y02008 56590002
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=(LOCAL,IGC0005I(TRLOCK0)), X56610002
               REGS=USE                                          Y02008 56630002
         LM    ZEROO,R15,D0(SAVEREG)   RESTORE ALL REGS          Y02008 56650002
         BR    RETURN                  EXIT                             56670002
         EJECT                                                          57270002
*********************************************************************** 57870002
*                             FUNCTION 33                             * 58600020
*********************************************************************** 58700020
 SPACE 2                                                                58800020
FUNC33   EQU   *                                                 X03008 58910002
         LR   R7,CALLER                SAVE CALL CODE          @YM08149 58911002
         L    WKREG6,CVTEXT2           GET CVT EXTENT            X03008 58912002
         TM    D4(WKREG6),X'40'        IS REI ACTIVE             Y02008 58912602
         BNO   LOADUCM                 NO, GO TO NEXT CHECK      Y02008 58913202
         L    WKREG6,D28(WKREG6)       GET CVT OLTEP CONTENTS    X03008 58914002
         L     UCBADDR,D32(WKREG6)     GET REI UCB ADDR                 58916002
         NI   D1(UCBADDR),HEXFB        RESET UCBNALOC TO ZIP     X03008 58918802
         XC   D24(L4,WKREG6),D24(WKREG6) ZERO REI UCB ADDR IN    X03008 58919202
*                                      OLTEP'S TABLE             X03008 58919602
         SPACE  3                                                       58919702
LOADUCM  EQU  *                        ZAP OUT HOT MSG IF HOT    X03008 58980002
         L     UCMREG,CVTCUCB          LOAD UCM ADDRESS          X03008 58986002
         LR    PARMREG,SAVEREG9        SET PARAMETER POINTER     X03008 58992002
         USING UCM,UCMREG          SET UCM DSECT BASE                   59000001
         USING OREF,RQEREG         SET RQE DSECT BASE            Y02008 59100002
         L     RQEREG,UCMRPYQ      LOAD RQE ADDRESS                     59200020
MATCHECB CLC   D1(L3,PARMREG),OREECB+D1 ECB BEING FREED                 59300002
         BE    PROCRPLY            YES - GO PROCESS DUMMY REPLY         59400020
         L     RQEREG,ORELKP       SET NEXT RQE POINTER                 59500002
         LTR   RQEREG,RQEREG       END OF QUEUE                         59600020
         BNE   MATCHECB            NO - GO CHECK NEXT ECB ADDRESS       59700020
         LA    RCREG1,ERRCODE      YES - SET ERROR CODE                 59800020
         BR    RETURN              RETURN TO CALLER                     59900020
PROCRPLY L     REG0,RPLYPOOL       SETUP FOR SUBPOOL 254 GETMAIN        60000020
         GETMAIN  R,LV=(0)         ISSUE SUBPOOL 254 GETMAIN            60100020
         LR    R8,R1               SAVE SUBPOOL 254 ADDRESS             60200020
         MVC   D0(L13,R1),FREEWTOR  SETUP DUMMY REPLY BUFFER            60300020
         LH    R5,OREID            LOAD MESSAGE ID                      60400002
         STH   R5,D6(R1)           STORE ID IN DUMMY REPLY BUFFER       60500020
         XR    REG0,REG0           CLEAR REG FOR REPLY AUTH.            60600020
         SVC   REPLY               FREE MESSAGE                         60700020
         L     REG0,RPLYPOOL       SETUP FOR SUBPOOL 254 FREEMAIN       60800020
         LR    R1,R8               RESTORE FREEMAIN REGISTER            60900020
         FREEMAIN  R,LV=(0),A=(1)  ISSUE SUBPOOL 254 FREEMAIN           61000020
         SR    RCREG1,RCREG1       SET NORMAL RETURN CODE               61100020
         LR    REG0,R5             SET ID IN RETURN REGISTER            61200020
         BR    EXIT                    EXIT TO CALLER            X03008 61208002
         EJECT                                                          61300002
*****************************************************************Y02008 61300702
*                                                                Y02008 61301402
*                      STARTIO FUNCTION                          Y02008 61302102
*                                                                Y02008 61302802
*****************************************************************Y02008 61303502
STARTIO  EQU   *                       MVMS STARTIO FUN          Y02008 61304202
         USING SRB,SRBREG              GENERAL REG 2             Y02008 61304902
         USING IOSB,IOSBREG            GENERAL REG 5             Y02008 61305602
         USING ASCB,ASCBREG            GENERAL REG 6             Y02008 61306302
         USING TCCW,TCCWREG            GENERAL REG 8             Y02008 61307002
         USING IOCOM,IOCREG            GENERAL REG 15            Y02008 61307702
         LR    PARMREG,SAVEREG9        RESTORE PARMLIST PTR      Y02008 61308002
         LM    IOSBREG,DEVTBL,D0(PARMREG)                        Y02008 61308402
         L     IODEVAD,IODEVTAB   GET IO DEVTAB ADDR FROM OCA    Y02008 61309102
         L     SRBREG,CVTEXT2     GET CVT EXTENTION POINTER      Y02008 61309802
         L     SRBREG,D28(SRBREG) GET DIE ADDR                   Y02008 61310502
         LR    DIEPTR,SRBREG      SAVE DIE ADDR                  Y02008 61311202
         LA    SAVEREG,D40(DIEPTR)     GET ADDR OF SAVEAREA IN DIE      61311902
         LR    R15,IOSBREG             SAVE MODEL IOSB REG       Y02008 61312202
         SPACE  4                                                       61312602
*****************************************************************Y02008 61313302
*          DETERMINE WHICH SET OF CONTROL BLOCKS CAN BE USED     Y02008 61314002
*****************************************************************Y02008 61314702
         SPACE  4                                                       61315402
         A     SRBREG,D16(DIEPTR) GET PTR TO THE FIRST SRB IN    Y02008 61316102
*                                      S.P. 245                  Y02008 61316802
         LA    IOSBREG,SRBSIZE(SRBREG)   BUMP TO IOSB HEAD       Y02008 61317502
         USING IOSB,R15                MODEL IOSB ADDRESSABILITY Y02008 61317802
         TM    USEFLAGA,INTRNLCB  IS THIS AN INTERNAL CALL       Y02008 61318202
         DROP  R15                     DROP MODEL IOSB           Y02008 61318402
         USING IOSB,IOSBREG            REAL IOSB ADDRESSABILITY  Y02008 61318602
         BO    INTERNAL           YES, USE FIRST SET OF BLKS     Y02008 61318902
         LA    IODEVAD,D12(IODEVAD) BUMP TO NEXT IODEVTAB SET    Y02008 61319602
         LR    SRBREG,DIEPTR      GET DIE ADDR                   Y02008 61320302
         A     SRBREG,D20(DIEPTR)      GET PTR TO 2ND CTL BLKS   Y02008 61321002
         LA    IOSBREG,SRBSIZE(SRBREG) BUMP TO NEXT IOSB         Y02008 61321702
         TM    USEFLAGA,INUSE          IS THIS SET ACTIVE        Y02008 61322402
         BNO   MOVMODEL                NO, GO MOVE MODEL IOSB    Y02008 61323102
         TM    USEFLAGA,PURGED         HAS IO BEEN PURGED        Y02008 61323802
         BO    MOVMODEL                YES, GO MOVE MODEL        Y02008 61324502
         LA    IODEVAD,D12(IODEVAD)    BUMP TO 3RD SET OF BLKS   Y02008 61325202
         LR    SRBREG,DIEPTR           GET DIE ADDR              Y02008 61325902
         A     SRBREG,D24(DIEPTR)      GET THIRD IO BLK          Y02008 61326602
         LA    IOSBREG,SRBSIZE(SRBREG) BUMP TO NEXT IOSB         Y02008 61327302
INTERNAL TM    USEFLAGA,INUSE          IS SET ACTIVE             Y02008 61328002
         BNO   MOVMODEL                NO, GO MOVE  MODEL        Y02008 61328702
         TM    USEFLAGA,PURGED         HAS IO BEEN PURGED        Y02008 61329402
         BO    MOVMODEL                YES, GO MOVE MODEL        Y02008 61330102
         B     EXIT04                  RET ON BAD SITUATIONS HEREY02008 61330802
         SPACE  4                                                       61331502
*****************************************************************Y02008 61332202
*              MOVE MODEL & SET UP CONTROL BLOCKS                Y02008 61332902
*****************************************************************Y02008 61333602
         SPACE  4                                                       61334302
MOVMODEL L     MODELREG,D0(PARMREG)    GET PTR TO MODEL IOSB     Y02008 61335002
         MVC   D0(L133,IOSBREG),D0(MODELREG) MOVE MODEL          Y02008 61335702
         XC    OECB+1(63),OECB+1       ZERO OECB+1               Y02008 61336402
         XC    SRB(SRBSIZE),SRB   ZERO SRB                       Y02008 61337102
         LA    WKREG7,OECB             PLACE OECB PTR IN USE     Y02008 61337302
         ST    WKREG7,OECBPTR          CONTROL BLOCK             Y02008 61337502
         LA    WKREG7,IOSUSECB         FIND ADD OF OLTEPS IOS USEY02008 61337802
*                                 CONTROL BLOCK                  Y02008 61338502
         ST    WKREG7,IOSUSE           PLACE USE CNTRL BLK ADD INY02008 61339202
*                                 IOSB                           Y02008 61339902
         ST    IODEVAD,IODEVTAB   SET PTR TO IODEVTAB SLOT       Y02008 61340602
         ICM   R15,B'0001',TCBPKF      GET OLTEP PROTCT KEY      Y02008 61341302
         SPKA  0(R15)                  GET INTO OLTEP PROT KEY   Y02008 61342002
         ST    IOSBREG,D4(IODEVAD)  SET PTR TO IOSB IN OCA       Y02008 61342702
         XC    D8(L4,IODEVAD),D8(IODEVAD)  ZERO ECB             Y02008  61343402
         ST    DEVTBL,D0(IODEVAD)  SAVE DEVTAB PTR               Y02008 61344102
         SR    R15,R15                 KEY ZERO                  Y02008 61344802
         SPKA  0(R15)                  GET SUPERVISOR STATE AGAINY02008 61344902
         EJECT                                                          61345002
*********************************************************************** 61345102
         OI    USEFLAGA,INUSE      SET INUSE BIT                 Y02008 61345502
         STM   ZEROO,R15,D0(SAVEM)  SAVE REGS TEMPORARILY        Y02008 61346202
         ST    R14,D64(SAVEM)          SAVE R14 FOR EXIT         Y02008 61346502
SET      SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        X61346902
               RELATED=(LOCAL,IGC0005I(LT)),REGS=USE             Y02008 61347602
         LM    ZEROO,R15,D0(SAVEM)     SAVE REGS TEMPORARILY     Y02008 61348302
         TM    USEFLAGA,VIRTCCW    ARE CCW'S IN V=V              Y02008 61349002
         BNO   COPYREAL           NO, GO SET UP IOSB THINGS      Y02008 61349702
         BAL   LINK,GETCORE            GO GET STG FROM SP239     Y02008 61350402
*                                  TCCW BLK.                     Y02008 61351102
         ST    R1,TCCWPTR          PUT TCCW PTR INTO USE BLK     Y02008 61351802
         LR    TCCWREG,R1              SAVE TCCW ADDR            Y02008 61352502
         BAL   LINK,GETCORE            GO GET STG  FOR BEB       Y02008 61353202
         ST    R1,TCCWBEB              SET BEB ADDR IN TCCW      Y02008 61353902
         ST    TCBREG,TCCWTCB          SAVE TCB ADDR IN TCCW     Y02008 61354602
         BAL   LINK,GETCORE            GO GET STG  FOR FIXLIST   Y02008 61355302
         ST    R1,TCCWFIX              PUT FIXLIST ADDR IN TCCW  Y02008 61356002
         MVC   TCCWUCB(3),IOSUCB+1     MOVE UCB ADDR TO TCCW     Y02008 61356702
         MVC   TCCWFVC(4),IOSVST       MOVE 1ST VIRT CCW ADDRESS Y02008 61357402
*                                      TO TCCW                   Y02008 61358102
         MVI   TCCWOPTN,HEX00          SET OPTION BYTE           Y02008 61358802
         LR    FIXED,R1                GET AREA ADDR WHERE FIX   Y02008 61359502
*                                      WILL TAKE PLACE           Y02008 61360202
XLATEM   EQU   *                                                 Y02008 61360902
         LR    R1,TCCWREG              SET R1 TO CCW XLATE BLOCK Y02008 61361602
         L     IOCREG,CVTIXAVL-CVTMAP(CVTREG) GET IO COM AREA    Y02008 61362302
*                                      ADDRESS                   Y02008 61363002
         L     R15,IOCTCCW-IOCOM(R15)  GET CCW XLATOR ADDR       Y02008 61363702
         BALR  R14,R15                 GO XLATE CCWS             Y02008 61364402
         LTR   R15,R15                 DID XLATE GO              Y02008 61365102
         BZ    SETREAL                 YES, CONTINUE             Y02008 61365802
         CH    R15,FOUR                WAS RETURN CODE 4         Y02008 61366502
         BE    FREERTN                 YES,                      Y02008 61367202
         BAL   LINK,GETCORE            GO GET STG  FOR IOS XLATERY02008 61367902
         LR    R0,R1                   PLACE PTR TO ADDITIONAL   Y02008 61368602
*                                      AREA IN REG 0             Y02008 61369302
         MVI   TCCWOPTN,HEX0C          SET OPTION BYTE FOR       Y02008 61370002
*                                      RE-ENTRY                  Y02008 61370702
         B     XLATEM                                            Y02008 61371402
FREERTN  EQU   *                                                 Y02008 61372102
         SR    WRKREG12,WRKREG12       ZERO WORK REG 12          Y02008 61372802
         IC    WRKREG12,TCCWOPTN       SAVE OPTION BYTE          Y02008 61373502
FREE160  EQU   *                       RTN TO FREE UP 160 BYTES  Y02008 61374202
         L     FREERG,D0(R1)           GET PTR TO 1ST BLOCK OF   Y02008 61374902
*                                      160 BYTES TO BE FREED     Y02008 61375602
         L     R0,SP245                GET SP ID AND SIZE        Y02008 61376302
         L     WKREG7,CVTTCBP          GET PTR TO 4 WORD LIST    Y02008 61376502
         L     WKREG7,D12(WKREG7)      GET PTR TO CURRENT ASCB   Y02008 61376702
         FREEMAIN R,LV=(0),A=(1),BRANCH=YES GO FREE UP CORE      Y02008 61377002
         LTR   FREERG,FREERG           IS THIS THE LAST          Y02008 61377702
         BZ    SETEXIT                 GO EXIT MODULE IF ZERO    Y02008 61378402
         LR    R1,FREERG               GET NEXT ADDR TO BE FREED Y02008 61379102
         B     FREE160                 GO FREE NEXT BLK OF 160 BYTES    61379802
SETEXIT  EQU   *                                                 Y02008 61380502
         LR    R15,WRKREG12            GET OPTION TO BE RETURNED Y02008 61381202
         B     LOCKREL                 EXIT WITH ERROR           Y02008 61381902
COPYREAL EQU   *                                                 Y02008 61382602
         MVC   IOSRST(4),IOSVST        COPY CCW ADDRESS          Y02008 61383302
         B     SETASID                 GO SET ASID               Y02008 61384002
SETREAL  EQU   *                                                 Y02008 61384702
         ST    R0,IOSRST               SET REAL CCW ADDR IN IOSB Y02008 61385402
SETASID  EQU   *                                                 Y02008 61386102
         L     R6,CVTTCBP              GET PTR TO 4 WORD LIST    Y02008 61386802
         L     ASCBREG,D12(R6)         GET PTR TO ACTIVE ASCB    Y02008 61387502
         MVC   IOSASID,ASCBASID        SET IOSB ASID FIELD       Y02008 61388202
         MVC   IOSPKEY,TCBPKF          SET PROTECT KEY           Y02008 61388902
         MVC   IOSCKEY(1),TCBPKF       GET IOS C KEY FROM TCB    Y02008 61389602
         LA    R13,16                  INITIALIZE IOSB AFFN REG  Y02008 61390302
         SR    R1,R1                   ZERO WORK REG FOR AFFN    Y02008 61391002
         ICM   R1,B'0011',ASCBAFFN     GET ASCB AFFN INTO REG    Y02008 61391702
*                                      FOR CONVERSION ROUTINE    Y02008 61392402
         LTR   R1,R1                   IS THERE ANY AFFN         Y02008 61393102
         BNZ   TRYAGAIN                YES, CONTINUE             Y02008 61393802
         LA    WRKREG12,HEX04          PUT ERROR CODE IN REG 12  Y02008 61394102
         TM    USEFLAGA,VIRTCCW        WHERE CCWS VIRTUAL        Y02008 61394402
         BO    FREERTN                 YES, BLOCKS MUST BE FREED Y02008 61394702
         LA    R15,HEX04               ERROR RETURN IN REG 15    Y02008 61395002
         B     LOCKREL                 RELEASE LOCK AND EXIT     Y02008 61395302
TRYAGAIN EQU   *                                                 Y02008 61395902
         BCTR  R13,0                   UPDATE POSSIBLE IOSB AFFN Y02008 61396602
         SRA   R1,1                    FIND AFFN                 Y02008 61397302
         BNZ   TRYAGAIN                AFFN NOT FOUND, TRY AGAIN Y02008 61398002
         STC   R13,IOSAFF              AFFN FOUND, PLACE         Y02008 61398702
*                                      CONVERTED AFFN IN IOSB    Y02008 61399402
         LA    IODEVAD,D1(IODEVAD)     BUMP BY 1 FOR DSID        Y02008 61400102
         ST    IODEVAD,IOSDSID         SET PHONY DSID            |02008 61400802
         MVI   IOSDVRID,IOSOLTID       PUT DRIVER ID IN IOSB     Y02008 61401502
         LA    R1,CVTBRET              GET ADDR OF BR 14 INSTRN  Y02008 61402202
         ST    R1,IOSPGAD              INITIALIZE IOS PGAD       Y02008 61402902
         ST    IOSBREG,SRBPARM         PUT IOSB ADDR IN SRB FOR  Y02008 61403602
*                                      STARTIO                   Y02008 61404302
         L     SAVEPTR,CVTEXT2         GET PTR TO CVT EXTENSION  Y02008 61405002
         L     SAVEPTR,D28(SAVEPTR)    GET PTR TO DIE            Y02008 61405702
         LA    SAVEM,D40(SAVEPTR)      GET PTR TO SAVE AREA      Y02008 61406402
         STM   ZEROO,R15,D0(SAVEM)     SAVE ALL REGS             Y02008 61407102
         STARTIO SRB=(SRBREG),TCB=(TCBREG) DO THE IO  OP         Y02008 61407802
         LM    ZEROO,R15,D0(SAVEM)     RSTR ALL REGS             Y02008 61408502
         XR    R15,R15                 ZERO R15 FOR GOOD RETURN  Y02008 61408702
LOCKREL  EQU   *                                                 Y02008 61408902
         L     SAVEPTR,CVTEXT2       GET PTR TO CVT EXTENSION   ZA16980 61409241
         L     SAVEPTR,D28(SAVEPTR)   GET PTR TO DIE            ZA16980 61409341
         LA    SAVEM,D40(SAVEPTR)    GET PTR TO SAVE AREA       ZA16980 61409441
         STM   ZEROO,R15,D0(SAVEM)    SAVE REGS TEMPORARILY             61409541
LT       SETLOCK RELEASE,TYPE=LOCAL,RELATED=(LOCAL,IGC0005I(SET)),     X61409902
               REGS=USE                                          Y02008 61410602
         LM    ZEROO,R15,D0(SAVEM)     RESTORE ALL REGS          Y02008 61411302
         L     R14,D64(SAVEM)          RESTORE R14 FOR RETURN    Y02008 61412002
         BR    R14                    EXIT MODULE                Y02008 61412702
         EJECT                                                          61413402
*****************************************************************Y02008 61414102
*                                                                Y02008 61414802
*        THIS FINE SUB ROUTINE DOES ALL KINDS OF STUFF           Y02008 61415502
*        AND THINGS. IT WILL BE ENTERED DYNAMICALLY              Y02008 61416202
*        FROM THE IOS CCW TRANSLATOR AS KEY ZERO, NON-           Y02008 61416902
*        PAGEABLE STORAGE BECOMES REQUIRED. IT IS ALSO           Y02008 61417602
*        ENTERED TO OBTAIN STG FOR THE  BEB, THE FIX-            Y02008 61418302
*        LIST AND THE TCCW BLOCK PRIOR TO CCW XLATE.             Y02008 61419002
*        ON ENTRY REG 10 WILL CONTAIN THE RETURN ADDR.           Y02008 61419702
*                                                                Y02008 61420402
*****************************************************************Y02008 61421102
GETCORE  EQU   *                       OBTAIN STORAGE FROM SP239 Y02008 61421802
         L     R0,SP245                SET SUBPOOL ID & SIZE     Y02008 61422502
         L     WKREG7,CVTTCBP          GET PTR TO 4 WORD LIST    Y02008 61422702
         L     WKREG7,D12(WKREG7)      GET PTR TO CURRENT ASCB   Y02008 61422902
         SPACE 1                                                        61423202
         GETMAIN R,LV=(0),BRANCH=YES GET STG FOR CALLER          Y02008 61423902
         SPACE 2                                                        61424602
*                                 AT THIS POINT REG 1            Y02008 61425302
*                                 CONTAIN THE ADDRESS            Y02008 61426002
*                                 OF THE SUBPOOL.                Y02008 61426702
*                                                                       61427402
         BR    LINK                    RETURN TO CALLER ON R10   Y02008 61428102
         EJECT                                                          61428802
*****************************************************************Y02008 61429502
*                                                                Y02008 61430202
*                       VERIFY CPU SELECTION                     Y02008 61430902
*                                                                Y02008 61431602
*****************************************************************Y02008 61432302
         SPACE 2                                                        61433002
CPUVRFY  EQU   *                       VERIFY CPU SELECTION      Y02008 61433702
         USING CSD,CSDREG                                      @ZA09691 61436541
         L     SAVEREG,CVTEXT2     ADD OF CVTEXT               @ZA09691 61437241
         L     SAVEREG,D28(SAVEREG) ADD OF OLTEPS DIE          @ZA09691 61437941
         LA    SAVEREG,D40(SAVEREG) SA OFFSET INTO DIE         @ZA09691 61438641
LOKT2  SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=SAVE,RELATED=EXITCPU  61439341
         LTR   R15,R15             CHECK RETURN CODE           @ZA09691 61440041
         SPACE 1                                                        61440702
         BZ    ALIVECHK            IF 0, GO AHEAD              @ZA09691 61441441
         CH    R15,FOUR            IF FOUR, GO AHEAD           @ZA09691 61442141
         BE    ALIVECHK                                        @ZA09691 61442841
         LA    R9,8                ELSE, SET A RETURN CODE OF 8@ZA09691 61443141
         SPACE 1                                                        61443502
         B     SETRC                                           @ZA09691 61444941
         SPACE 1                                                        61449802
*****************************************************************Y02008 61450502
*                        IS CHOSEN CPU ALIVE                     Y02008 61451202
*****************************************************************Y02008 61451902
         SPACE 1                                                        61452602
ALIVECHK EQU   *                       CPU ALIVE CHECK           Y02008 61453302
         LR    R1,SAVEREG9             RESTORE PARMLIST REG      Y02008 61453402
         LA    R9,4                    INITIALIZE R9 TO INDICATE Y02008X61453502
                                       FAILURE OF REQUEST        Y02008 61453602
         L     R1,D0(R1)               GET PTR TO CHOSEN AFFN    Y02008 61454002
         L     CSDREG,CVTCSD           GET CSD POINTER           Y02008 61454702
         SR    R7,R7                   CLEAR MASK REG FOR USE IN Y02008 61455402
*                                      EXECUTE INSTRUCTION       Y02008 61456102
         IC    R7,D0(R1)               GET 1ST MASK FOR CPU ALIVEY02008 61456802
*                                      CHECK                     Y02008 61457502
         EX    R7,CPUTEST              IS CHOSEN CPU ALIVE       Y02008 61458202
         BO    CPUOK                   YES, PLACE IT IN ASCB     Y02008 61458902
         LA    CSDREG,D1(CSDREG)       ADD 1 TO CSD REG -- POINT Y02008 61459602
*                                      TO 2ND BYTE OF CSD CPU    Y02008 61460302
*                                      ALIVE FIELD               Y02008 61461002
         IC    R7,D1(R1)               GET 2ND MASK FOR CPU ALIVEY02008 61461702
*                                      CHECK                     Y02008 61462402
         EX    R7,CPUTEST              IS CHOSEN CPU ALIVE       Y02008 61463102
         BNO   EXITCPU                 NO, EXIT TO CALLER WITH   Y02008 61463802
*                                      RETURN CODE 0J            Y02008 61464502
         SPACE 1                                                        61465202
*****************************************************************Y02008 61465902
*                  CPU ALIVE - PLACE AFFN IN ASCB                Y02008 61466602
*****************************************************************Y02008 61467302
         SPACE 1                                                        61468002
CPUOK    EQU   *                                                        61468702
         USING ASCB,ASCBREG            ASCB ADDRESSABILITY       Y02008 61469402
         L     ASCBREG,CVTTCBP         FIND PTR TO CURRENT ASCB  Y02008 61470102
         L     ASCBREG,D12(ASCBREG)    THRU CVT                  Y02008 61470802
         MVC   ASCBAFFN(2),D0(R1)      PLACE SELECTED AFFN IN    Y02008 61471502
*                                      ASCB                      Y02008 61472202
         SR    R9,R9                   RETURN 00 TO CALLER       Y02008 61472902
         SPACE 1                                                        61473602
*****************************************************************Y02008 61474302
*                           EXIT ROUTINE                         Y02008 61475002
*****************************************************************Y02008 61475702
         SPACE 1                                                        61476402
EXITCPU  EQU   *                       EXIT CPU ALIVE ROUTINE    Y02008 61477102
         SETLOCK RELEASE,TYPE=LOCAL,REGS=SAVE,RELATED=LOKT2    @ZA09691 61477841
         LTR   R15,R15             CHECK RETURN CODE           @ZA09691 61477941
         BZ    SETRC               IF 0, SET RECTURN CODE      @ZA09691 61478041
         CH    R15,FOUR            FOUR IS OK                  @ZA09691 61478141
         BE    SETRC                                           @ZA09691 61478241
         LA    R9,8                ELSE, SET RC=8              @ZA09691 61478341
SETRC    EQU   *                                               @ZA09691 61478441
         LR    R15,R9                  DEQ AND PLACE RETURN CODE Y02008 61478502
*                                      IN R15                    Y02008 61479202
         BR    EXIT                    RETURN TO CALLER          Y02008 61479902
         USING CSD,CSDREG              CSD ADDRESSABILITY        YM4763 61480002
CPUTEST  TM    CSDCPUAL,X'00'           VALIDATE AFFINITY        YM4763 61480102
         DROP  CSDREG                   DROP CSD ADDRESSABILITY  YM4763 61480202
         EJECT                                                          61480602
*********************************************************************** 61500020
*                             CONSTANTS                               * 61600020
*********************************************************************** 61700020
 SPACE 2                                                                61800020
         DS    0F                                                       61810002
ENQUCB   ENQ   (MAJORNAM,MINORNAM,E,2,SYSTEM),RET=HAVE,MF=L    @ZA26394 61850010
DEQUCB   DEQ   (MAJORNAM,MINORNAM,2,SYSTEM),RET=HAVE,MF=L      @ZA12058 61852041
COUNTMSK DC    X'00000007'                                     @ZA12058 61854041
ENQDQGM  DC    X'F5000010'         SP245 FOR 16 BYTES FOR GM   @ZA12058 61856041
MASKTBL  DC    X'8040201008040201' MASK TABLR FOR EX INSTR       X03008 61860002
         DS    0F                                                       61900020
IGC05    DC    V(IGC0505I)             IGC0505I ADDR             Y02008 63000002
IGC09    DC    V(IGC0905I)             IGC0905I ADDR             Y02008 63250002
         DS    0D                                                       63260002
SUBPOOL  DC    X'FE000010'             XCTL POOL ID AND SIZE     Y02008 63270002
         DS    0F                                                       63280002
POOLCNST DC    X'FE000040'             SP254 FOR 64 BYTES  S     Y02008 63280602
SP245    DC    X'F50000A0'             SP245 FOR 160 BYTES       Y02008 63281202
         DS    0F                                                Y02008 63281802
TRES     DC    X'F0F0F0F0F0F3F0C0'     3 SECONDS                 Y02008 63283602
FIVE     DC    X'F0F0F0F0F0F5F0C0'     5 SECONDS                 Y02008 63283702
MAJORNAM DC    C'SYSIEFSD'             MAJOR NAME FOR ENQ ALLOC  Y02008C63283802
                                       SYNCRONIZATION            Y02008 63283902
MINORNAM DC    C'Q4'                   MINOR NAME FOR ENQ ALLOC  Y02008C63284002
                                       SYNCRONIZATION            Y02008 63284102
QNAME    DC    C'SYSZVARY'             QNAME FOR ENQ             Y02008 63284202
RNAME    DC    C'CPU'                  RNAME FOR ENQ             Y02008 63284802
TABEND   DC    XL1'FF'                 END OF IOS UCB LOOK TBL   Y02008 63285402
FOUR     DC    X'0004'                 A HALFWORD 4              Y02008 63286002
SUB245   EQU   *                                                 Y02008 63286602
POOL245  DC    XL1'F5'                                           Y02008 63287202
         DS    0F                                                       63289002
DEVMSK   DC    X'0000000F'             SETS VALID DEB ID         X03008 63290002
HEX4014  DC    X'4014'                                           X03008 63292002
ZERO     DC    X'00'                   WORK BYTE                 X03008 63294002
         DS    0F                                                       63300001
RPLYPOOL DC    X'FE0000A8'                                       Y02008 63500002
FREEWTOR DC    X'000D0000D940F0F06B7DE27D40'                            63600020
PATCH00  EQU   *                       PATCH AREA FOR IGC0005I          63650002
         IFDPATCH                                                X03008 63660002
         EJECT                                                          63710002
         DS    0D                                                       64000020
    DS  0D                                                              64100002
         CVT   SYS=AOS2,DSECT=YES                                       64200002
         DS    0D                                                Y02008 64230002
         IEESMCA                                                 Y02008 64260002
         DS    0D                                                       64300020
         IEECUCM FORMAT=NEW                                             64400001
         DS    0D                                                       64600020
RQEMAP   DSECT                                                          64700020
         IHAORE                                                         64800002
         EJECT                                                          64900002
TCB IKJTCB SYS=AOS2,DSECT=YES                                           64980002
         EJECT                                                          65060002
SRB IHASRB                                                              65140002
         EJECT                                                          65220002
IOSB  IECDIOSB                                                          65300002
         EJECT                                                          65380002
IOSUSECB EQU   *                                                        65460002
USERCB   DS    0CL24                   START OF IOSB USER CON BLKY02008 65540002
OECBPTR  DS    F                  POINTER TO OLTEP EVENT CONTROL BLOCK  65620002
TECBPTR  DS    F                  OLT'S TECB POINTER FOR THIS EVENT     65700002
IODEVTAB DS    F                  POINTER TO 3 WORDS IN OLTEP COMMON    65780002
TCCWPTR  DS    F                  POINTER TO THE TCCW SYSTEM CONTROL    65860002
*                                    BLOCK FOR THE CCW TRANSLATOR       65940002
USEFLAGS DS    0F                 A WORD OF FLAGS                       66020002
USEFLAGA DS    1C                 FIRST FLAG BYTE FOR THIS CB SET       66100002
INUSE    EQU   X'80'              THIS IOSB IS IN USE                   66180002
ATTN     EQU   X'40'              ATTENTION=YES REQUEST (OFF IF DONE)   66260002
VIRTCCW  EQU   X'20'              THE CCW'S ARE IN VIRTUAL              66340002
INTRNLCB EQU   X'08'              REQUEST IS INTERNAL (LINE CONNECT,DP) 66420002
PURGED   EQU   X'04'              THIS I/O EVENT IS PURGED              66500002
PCIENTRY EQU   X'02'                   PCI EXIT OPERATING               66510002
USEFLAGB DS    1C                      UNUSED                           66520002
USEFLAGC DS    1C                      UNUSED                           66530002
USEFLAGD DS    1C                      UNUSED                           66540002
USERSVD  DS    F                       RESERVED FOR FUTURE       Y02008 66545002
OECB     DS    0CL64                   OLTEPS OECB                      66550002
         EJECT                                                          66580002
TCCW     IECDTCCW                                                       66660002
         EJECT                                                          66740002
         IECDIOCM                                                       66820002
         EJECT                                                          66900002
         IECDIOCX                                                       66920002
         EJECT                                                          66940002
         IHAPSA                                                         66980002
         EJECT                                                          67060002
         DS    0D                                                       67140002
         IECDLCH                                                        67220002
         EJECT                                                          67300002
         DS    0D                                                       67380002
UCBDSECT DSECT                                                          67420002
         IEFUCBOB                                                       67460002
         EJECT                                                          67540002
         IHACSD                        CSD DSECT                 Y02008 67620002
ASCB     IHAASCB                                                        67700002
PPL      IECDPPL                       PURGE PARAMETER LIST      Y02008 67800002
LDA      IHALDA                        LDA MAP                   Y02008 67850002
         END                                                            67900002
./  ADD  SSI=62230053,NAME=IGC0505I
         TITLE 'SVC59 OLTEP HOUSEKEEPING FUNCTION'                      00060001
IGC0505I CSECT                    CLEAN UP MODULE FOR OLTEP SVC 59      00543002
*********************************************************************** 00843003
*                                                             @Y30LPAW* 01143003
* MODULE NAME = IGC0505I                                      @Y30LPAW* 01443003
*                                                             @Y30LPAW* 01743003
* DESCRIPTIVE NAME = SVC59 MODULE FOR CLEANUP                 @Y30LPAW* 02043003
*                                                             @Y30LPAW* 02343003
* COPYRIGHT = NONE                                            @Y30LPAW* 02643003
*                                                             @Y30LPAW* 02943003
* STATUS = CHANGE LEVEL 001                                   @Y30LPAW* 03243003
*                                                             @Y30LPAW* 03543003
* FUNCTION = TO RESET ANY I/O,UCBS,TABLES BECAUSE OF CHANGE   @Y30LPAW* 03843003
*            IN DEVICE FIELD ENTRY AT ENTER D/T/O// TIME,OR   @Y30LPAW* 04143003
*           BECAUSE OF ABEND.                                 @Y30LPAW* 04443003
*                                                             @Y30LPAW* 04743003
* ENTRY POINTS -                                              @Y30LPAW* 05043003
*              IGC05CDE IS THE ENTTY POINT                    @Y30LPAW* 05343003
*                                                             @Y30LPAW* 05643003
* INPUT -                                                     @Y30LPAW* 05943003
*        R9 POINTS TO A PARAMETER LIST                        @Y30LPAW* 06243003
*        R14 POINTS TO RETURN POINT IN THE CALLER             @Y30LPAW* 06543003
*                                                             @Y30LPAW* 06843003
* OUTPUT -                                                    @Y30LPAW* 07143003
*        THE UCBNALOC BITS TURNED ON BY OLTEP ARE RESET.      @Y30LPAW* 07443003
*        3330 AND 3830 SSIDS WHICH WERE VARIED OFF BY OLTEP   @Y30LPAW* 07743003
*           HAVE BEEN VARIED ON.                              @Y30LPAW* 08043003
*        GETMAIN AREAS HAVE BEEN FREED (TOTAL CLEANUP ONLY).  @Y30LPAW* 08343003
*        THE QUIESCE BIT IN THE UCB IS RESET                   @ZA04290 08443004
*                                                             @Y30LPAW* 08643003
* EXTERNAL REFERENCES :                                       @Y30LPAW* 08943003
*        REFERS TO OLTEPS UCB BIT MASK TABLE,SSIDLIS,REI DEB  @Y30LPAW* 09243003
*                                                             @Y30LPAW* 09543003
* EXITS - NORMAL :                                            @Y30LPAW* 09843003
*        TO WTO TO OUTPUT MESSAGE IFD470I WHEN NECESSARY      @Y30LPAW* 10143003
*        TO ICBVARY TO VARY ON SSIDS.                         @Y30LPAW* 10443003
*        TO FREEMAIN TO FREE CORE ACQUIRED FROM GETMAIN.      @Y30LPAW* 10743003
*        TO CALLER AFTER CLEANUP IS DONE.                     @Y30LPAW* 11043003
*                                                             @Y30LPAW* 11343003
* EXITS - ERROR :                                             @Y30LPAW* 11643003
*        NONE                                                 @Y30LPAW* 11943003
*                                                             @Y30LPAW* 12243003
* TABLE/WORK AREAS :                                          @Y30LPAW* 12543003
*        WKFLD - AN AREA IN CORE ACQUIRED THRU GETMAIN.       @Y30LPAW* 12843003
*                                                             @Y30LPAW* 13143003
* ATTRIBUTES : REENTRANT.                                     @Y30LPAW* 13443003
*                                                             @Y30LPAW* 13743003
* NOTES : NONE                                                @Y30LPAW* 14043003
*                                                             @Y30LPAW* 14343003
* CHANGE ACTIVITY : NEW CODE ADDED FOR 3850 MASS STORAGE      @Y30LPAW* 14643003
*                   SYSTEM SUPPORT.                           @Y30LPAW* 14943003
*                                                             @Y30LPAW* 15243003
*********************************************************************** 15543003
 EJECT                                                                  18600020
*********************************************************************** 18900020
*                             EQUATS                                  * 19200020
*********************************************************************** 19500020
 SPACE 2                                                                19800020
UCBTAB   EQU   6                                                        19850002
ZERO     EQU   0                       REG ZERO                         19880002
WKREG2   EQU   11                      WORK REG                  Y02008 19910002
SCAN     EQU   7                                                        19950002
SHIFTER  EQU   8                                                        20000002
ODDREG   EQU   9                  USED IN MASK BIT SEARCH               20010002
BCTREG   EQU   11                                                       20050002
R2       EQU   2                                               @Y30LPAW 20052003
R8       EQU   8                                               @Y30LPAW 20055003
R9       EQU   9                                               @ZA12053 20057037
R10      EQU   10                                              @Y30LPAW 20060003
R11      EQU   11                                              @Y30LPAW 20070003
R12      EQU   12                                              @Y30LPAW 20080003
R14      EQU   14                                              @Y30LPAW 20090003
INDEX    EQU   5                                                        20100002
R6       EQU   6                                                        20150002
R7       EQU   7                                                        20160002
D2       EQU   2                                                        20200002
R15      EQU   15                                                       20350002
REG0     EQU   0                                                        21300002
D15      EQU   15                                                       21310002
R0       EQU   0                                                        21350002
R1       EQU   1                                                        21400002
D0       EQU   0                                                        21600020
D1       EQU   1                                                        21900020
ONE      EQU   1                                                        21950002
THREE    EQU   3                                                        22000002
D3       EQU   3                   DISPLACEMENT OF THREE       @ZA06016 22200004
D4       EQU   4                                                        22500020
D5       EQU   5                                                        22800020
R5       EQU   5                                                        22850002
D6       EQU   6                                               @ZA04290 23050004
D8       EQU   8                                                        23400020
D20      EQU   20                                                       24010002
D24      EQU   24                                                       24012002
D32      EQU   32                                                       24020002
D11      EQU   11                                                       24030001
D12      EQU   12                                              @Y30LPAW 24040003
D27      EQU   27                                                       24060001
D28      EQU   28                                                       24090002
SHIFT16  EQU   16                                                       24900020
K72      EQU   X'48'               SIZE OF SSIDLIST            @Y30LPAW 25200003
L2       EQU   2                                                        25500020
L3       EQU   3                                                        25800020
L4       EQU   4                                               @Y30LPAW 26100003
L5       EQU   5                                               @Y30LPAW 26400003
L8       EQU   8                                               @Y30LPAW 27000003
L72      EQU   72                                              @Y30LPAW 27600003
L79      EQU   79                                              @Y30LPAW 28200003
L100     EQU   100                                             @Y30LPAW 28800003
DEBREG   EQU   6                                                        29700020
PRDEBREG EQU   7                   CONTAINS ADDRESS OF PREVIOUS DEB     30600020
*                                  IN THE TASK DEB QUEUE                30900020
CALLREG2 EQU   6                   REGISTER 6 CONTAINS DUPLICATE OF     32100020
*                                  CALLING CODE MINUS CONTROL BIT 16    32400020
CVTREG   EQU   3                   REGISTER 3 ADDRESS OF CVT            33300020
POOLREG  EQU   13                  REGISTER CONTAINS ADDRESS OF 16      33600020
D40      EQU   40                      DISPLACEMENT 40                  33800002
*                                  GETMAIN BYTES IN SUBPOOL             33900002
CALLREG1 EQU   1                   REGISTER 1 CONTAINS CALLING CODE OF  34200020
*                                  REQUESTED FUNCTION.                  34500020
PARMREG  EQU   9                   REGISTER 9 CONTAINS ADDRESS OF       34800020
*                                  PARAMETER LIST                       35100020
TCBREG   EQU   4                   REGISTER 4 CONTAINS ADDRESS OF TCB   35400020
RETURN   EQU   14                  EXIT ADDR REG                        35450002
RCREG    EQU   15                  REGISTER 15 CONTAINS RETURN CODE     35700020
BASEREG  EQU   12                  SVC BASE REGISTER 12                 36000020
SAVEREG  EQU   10                  SAVE REGISTER FOR CALLING CODE       36300020
WKREG7   EQU   7                                                        37500020
LNG20    EQU   20                                                       37800020
HEX7F    EQU   X'7F'               OLTEP EXECUTING FLAG MASK   @ZA04290 38100004
HEXFB    EQU   X'FB'                                                    38400020
HEXFF    EQU   X'FF'                                                    38450002
HEXFD    EQU   X'FD'                                                    38700020
HEXFE    EQU   X'FE'               UCB QUIESCE BIT MASK        @ZA04290 39000004
TABREG   EQU   2                                                        39320001
TABDEBAD EQU   11                                                       39380001
WKREG8   EQU   8                       THIS IS WORK REG # 8      Y01021 39550002
BTAM     EQU   X'1C'                   BTAM DEVICE               YM7254 39600002
         EJECT                                                          39650002
         USING *,R15                   USE R15 AS BASE REG       Y02008 39750002
         B     IGC05CDE                BRANCH AROUND NAME & DATE Y02008 39850002
         DC    C'IGC0505I&SYSDATE'     MODULE NAME , ASSEM DATE  Y02008 39950002
IGC05CDE EQU   *                       START OF ACTUAL CODE      Y02008 40050002
         BALR  BASEREG,REG0         SET BASE REGISTER                   40120002
         USING *,BASEREG           INDICATE BASE REGISTER BEING USED    40200020
         USING CVTDSCTS,CVTREG                                 YM2272   40500001
         LR    TABREG,CALLREG2     SAVE CALL PARM              @ZA12053 41700037
 EJECT                                                                  45900020
*********************************************************************** 46200020
*                             FUNCTION 5                              * 46500020
*********************************************************************** 46800020
 SPACE 2                                                                47100020
FUNC5    EQU   *                       OLTEP CLEANUP             X03008 47400002
         LR    R15,PARMREG        SAVE R9 FOR LATERON            X03008 47410002
         L     UCBTAB,CVTEXT2     GET CVT EXTENTION ADDR         X03008 47450002
         L     UCBTAB,D28(UCBTAB) GET CVTOLTEP ADDR              X03008 47500002
         LTR   UCBTAB,UCBTAB     IS OLTEP REALLY ACTIVE?         X03008 47510002
         BZ    D0(RETURN)        NOPE, THEREFORE DO NOTHING      X03008 47520002
         C     TCBREG,D8(UCBTAB)       IS THIS THE FIRST OLTEP   Y02008 47530002
         BNE   D0(RETURN)        NO, EXIT AND DO NOTHIN....      X03008 47540002
         L     UCBTAB,D28(UCBTAB)      GET MASK TABLE ADDR       Y02008 47550002
         L     ZERO,D0(UCBTAB)   GET COUNT FOR FREEMAIN          X03008 47560002
         LR    POOLREG,UCBTAB    SAVE SUBPOOL ADDR               X03008 47562002
*                                IF A TOTAL CLEANUP SITUATION    X03008 47570002
         L     SCAN,CVTILK2       GET IOS UCB LOOKUP TBL         X03008 47600002
         SPACE  4                                                       47610002
SETCOUNT LA    BCTREG,32          SET LOOP COUNT TO 32           X03008 47620002
         LA    UCBTAB,D4(UCBTAB)  BUMP MASK TAB ADDR AS TO PICK  X03008 47622002
*                                 UP NEXT WORD OF MASK BITS      X03008 47624002
         L     ODDREG,D0(UCBTAB)  GET A WORD OF MASKS            X03008 47630002
         SPACE 2                                                        47640002
         XR    SHIFTER,SHIFTER    BY ZEROING OUT A REG           X03008 47644002
SHIFTIT  EQU   *                                               @ZA12053 47646037
         LTR   ODDREG,ODDREG       IF THE BIT IS OFF,          @ZA12053 47646937
         BNM   BUMPUCB             CHECK THE NEXT ONE          @ZA12053 47647837
         ICM   SHIFTER,B'0011',D0(SCAN) GET A UCB ADDR           X03008 47648802
         NI    D6(SHIFTER),HEXFE   RESET THE QUIESCE BIT       @ZA04290 47649204
         NI    D1(SHIFTER),HEXFB   AND RESET THE UCBNALOC        X03008 47650204
         L     R5,D20(SHIFTER)     GET ADDRESS OF UCB EXT      @ZA06016 47651240
         CLI   D3(R5),BTAM         IS THIS A BTAM UCB?         @ZA06016 47651704
         BNE   BUMPUCB             NO,GET NEXT UCB               YM7254 47652204
         NI    D27(SHIFTER),HEX7F  ZERO OLTEP EXECUTING FLAG     YM7254 47653204
BUMPUCB  EQU   *                                                 X03008 47654204
         LA    SCAN,D2(SCAN)      BUMP IOS UCBTBL ADDR PTR       X03008 47655602
         CLI   D1(SCAN),HEXFF     IS THIS THE END OF CLEANING    X03008 47658602
         BE    ZEROPOOL           IF YES, GO ZERO UCB MSK TBL    X03008 47661602
         SLL   ODDREG,ONE          SHIFT IT IN                 @ZA12053 47663637
         BCT   BCTREG,SHIFTIT     ELSE, GO SHIFT NEX BIT IN REG  X03008 47666602
         B     SETCOUNT           AND CONTINUE TO SCAN MASK TAB. X03008 47680602
         EJECT                                                          47681602
         SPACE 4                                                        47682602
ZEROPOOL EQU   *                                                 X03008 47690602
         LR    R6,POOLREG          GET SUBPOOL ADDR              X03008 47700602
         LA    R6,D4(R6)           BUMP BY 4 SO NOT TO           X03008 47710602
*                                  ZERO UCB COUNT AT HEAD        X03008 47720602
         LR    R7,R0               GET THE NUMBER OF UCBS        X03008 47722602
         SRL   R7,L3                    DIVIDE BY 8            @Y30LPAW 47723603
         LA    R7,15(R7)           BUMP BY 15 FOR SIZE           X03008 47724602
         SRL   R7,L3               SHIFT OUT                     X03008 47726602
         SLL   R7,L3              AND BACK IN TO ROUND           X03008 47728602
         LR    R10,R7              SAVE BIT MASK TABLE SIZE    @Y30LPAW 47728803
         SH    R7,FOUR            SUBTRACT FOU  FOR HEADER       X03008 47729002
*                                 SIZE IN POOL                   X03008 47729402
         XR    WKREG8,WKREG8      ZERO OUT R 8                   X03008 47729802
         XR    ODDREG,ODDREG      ZERO OUT R 9                   X03008 47730202
         MVCL  R6,WKREG8          ZERO THE TABLE LESS THE        X03008 47730302
*                                 HEADER                         X03008 47730402
         SPACE  4                                                       47730502
 EJECT                                                                  47730602
         LR    R6,POOLREG          POINT TO SSIDLIST           @Y30LPAW 48130603
         AR    R6,R10                   SECTION OF MASK TBLE   @Y30LPAW 48330603
         ICM   R0,B'1111',SP254A   GET SOME MAIN FOR                    48530637
         GETMAIN R,LV=(0)          VARYING THE DSID OR         @ZA12053 48580637
         LR    R10,R1              SSIDS ON LINE               @ZA12053 48630637
         XC    D0(L100,R10),D0(R10) CLEAR THE AREA             @ZA12053 48680637
         OC    D0(L4,R6),D0(R6)    IS THERE A DSID?            @Y30LPAW 48730603
         BZ    CHKSSIDA            NO-GO AROUND                @Y30LPAW 48930603
         USING MAINMAP,R10                                     @Y30LPAW 49330603
         MVC   VONLEN(D8),VARYPARM SET UP LNGTH,OPCODE,FLG     @Y30LPAW 49530603
         MVC   VONSSID(D2),D0(R6)  MOVE IN DSID                @Y30LPAW 49730603
         ICBVARY MF=(E,(10)),TYPE=VON     VARY IT ON           @Y30LPAW 49930603
         LTR   R15,R15             HOW DID WE DO?              @Y30LPAW 50130603
         BZ    CHKSSIDA            GO AROUND IF OK             @Y30LPAW 50330603
          LA    R11,120                                                 50380603
          CR    R15,R11            IS UNIT ON ALREADY?                  50430603
          BE    CHKSSIDA           GO AROUND IF OK                      50480603
         LA    R11,X'F8'           8 FOR DSID                  @Y30LPAW 50730603
         LR    R8,R6               PICK UP PTR TO ID           @Y30LPAW 50930603
         BAL   R5,TRPRT            GO TRANSLATE AND PRINT      @Y30LPAW 51130603
CHKSSIDA DS    0H                                              @Y30LPAW 51330603
         XC    D0(L4,R6),D0(R6)    CLEAR DSID FIELD            @Y30LPAW 51430603
         LA    R8,D4(R6)           POINT TO SSID COUNT         @Y30LPAW 51530603
         LA    R9,17               SET UP TO BUBBLE THRU       @ZA12053 51630637
         SR    R7,R7                    CLEAR IT               @Y30LPAW 51730603
         ICM   R7,B'0011',D0(R8)   GET SSID COUNT              @Y30LPAW 51930603
         LTR   R7,R7                    ANY THERE?             @Y30LPAW 52130603
         BZ    CLRLIST                  IF NOT-GO AROUND       @Y30LPAW 52330603
         LA    R8,D2(R8)           POINT TO SSID               @Y30LPAW 52930603
CHKSSIDB DS    0H                                              @Y30LPAW 52940603
         BCT   R9,CHKSIDB1                                     @ZA12053 52950637
         B     CLRLIST             GET OUT IF NO MORE          @Y30LPAW 52960603
CHKSIDB1 DS    0H                                              @Y30LPAW 52970603
         STCM  R7,B'0011',D4(R6)   SET COUNT                   @Y30LPAW 52980603
         OC    D0(L4,R8),D0(R8)    EMPTY FIELD?                @Y30LPAW 52990603
         BNZ   VPARMLST            IF NOT-GO SET UP            @Y30LPAW 53000603
         LA    R8,D4(R8)           POINT TO NEXT FIELD         @Y30LPAW 53010603
         B     CHKSSIDB            GO CHK NEXT ONE             @Y30LPAW 53020603
VPARMLST DS    0H                                              @Y30LPAW 53030603
         MVC   VONSSID(L2),D0(R8)  PUT IT IN LIST              @Y30LPAW 53130603
         MVC   VONLEN(D8),VARYPARM  SET UP LGTH,OPCDE,FLG      @Y30LPAW 53230603
         ICBVARY MF=(E,(10)),TYPE=VON     VARY IT ON           @Y30LPAW 53330603
         LTR   R15,R15                  IS IT OK               @Y30LPAW 53530603
         BZ    CHKSSIDC                 GO AROUND IF YES       @Y30LPAW 53730603
          LA    R11,120                                                 53780603
          CR    R15,R11            IS UNIT ON ALREADY?                  53830603
          BE    CHKSSIDC           GO AROUND IF OK                      53880603
         LA    R11,X'F0'           0 FOR SSID                  @Y30LPAW 54030603
         BAL   R5,TRPRT                 GO TRANSLATE, PRINT    @Y30LPAW 54130603
CHKSSIDC DS    0H                                              @Y30LPAW 54330603
         XC    D0(L4,R8),D0(R8)    CLEAR THE ENTRY             @Y30LPAW 54380603
         LA    R8,D4(R8)           POINT TO NEXT SSID          @Y30LPAW 54430603
         BCT   R7,CHKSSIDB              IF MORE, GO DO IT      @Y30LPAW 54530603
CLRLIST  DS    0H                                              @Y30LPAW 54730603
         XC    D0(L72,R6),D0(R6)        CLEAR LIST             @Y30LPAW 54930603
         LR    R1,R10              POINT TO FREEMAIN AREA      @Y30LPAW 55530603
         ICM   R0,B'1111',SP254A   GET SUBPOOL NUMBER          @Y30LPAW 55630603
         FREEMAIN R,LV=(0),A=(1)        FREE IT                @Y30LPAW 55730603
PARMSAVE DS    0H                                              @Y30LPAW 55930603
         B     FRQUPATH                 AND KEEP GOING         @Y30LPAW 56330603
TRPRT    DS    0H                                              @Y30LPAW 58130603
         STCM  R0,B'1111',WKFLD    SAVE ERROR CODE             @Y30LPAW 58330603
         UNPK  WKFLD+1(L5),WKFLD+2(L3)  USE THE ERROR          @Y30LPAW 58530603
         NC    WKFLD+2(L3),=X'0F0F0F0F'   CODE TO TRANSLATE    @Y30LPAW 58730603
         TR    WKFLD+2(L3),TRTBLE       INTO EBCDIC AND        @Y30LPAW 58930603
         MVC   MSGLEN(L79),IFD470       MOVE THE MSG           @Y30LPAW 59130603
         MVC   MSGCODE(L3),WKFLD+2      PUT IN MSG             @Y30LPAW 59330603
         MVC   MSGSIDB(L2),D2(R8)  MOVE IN THE ID              @Y30LPAW 59530603
         XC    D0(L4,R8),D0(R8)    CLEAR THAT ENTRY            @Y30LPAW 59630603
         STC   R11,MSGSIDA          8 FOR DSID,0 FOR SSID      @Y30LPAW 59730603
         LA    R11,D12(R10)             POINT TO MSG           @Y30LPAW 59930603
         WTO   MF=(E,(R11))         PRINT IT                   @Y30LPAW 60130603
         BR    R5                       GO BACK                @Y30LPAW 60330603
         DROP  R10                                             @Y30LPAW 60530603
         SPACE 5                                                        63350002
FRQUPATH SLL   TABREG,SHIFT16      TEST TO SEE IF              @ZA12053 63600037
         LTR   TABREG,TABREG       FULL OR PARTIAL             @ZA12053 63610037
         BMR   RETURN              CLEANUP                     @ZA12053 63620037
         L     TABREG,CVTEXT2     GET CVT EXTENSION POINTER      X03008 63650002
         LA    TABREG,D28(TABREG) SET CVTOLTEP POINTER           X03008 63700002
         SPACE  4                                                       65042002
********  AT THIS POINT TOTAL CLEAN UP WILL BE PERFORMED ************** 65044002
         SPACE 5                                                        65046002
         L     UCBTAB,D0(TABREG)     GET CVTOLTEP PTR            X03008 65050002
         TM    D4(UCBTAB),X'40'        WAS REI ACTIVE            Y02008 65060002
         BNO   ZEROIT                  NO, DONT TOUCH REI UCB    Y02008 65070002
         L     UCBTAB,D32(UCBTAB)      GET REI UCB ADDR          Y02008 65090002
         NI    D1(UCBTAB),HEXFB  ELSE, ZERO UCBNALOC             X03008 65120002
*****************************************************************Y02008 65120202
*                                                                Y02008 65120302
*               REMOVE REI DEB FROM TCB DEB CHAIN                Y02008 65120402
*                                                                Y02008 65120502
*****************************************************************Y02008 65120602
         USING DEBBASIC,DEBREG         DEB ADDRESSABILITY        YM5416 65120702
         L     DEBREG,ZERO(TABREG)     GET CVTOLTEP PTR          YM5416 65120802
         L     DEBREG,D4(DEBREG)       GET PTR TO REI DEB        YM5416 65120902
         LA    DEBREG,D0(DEBREG)       CLEAR HIGH ORDER BYTE     YM4984 65121002
         L     R1,DEBDCBAD             GET DCB ADDR FOR DEBCHK   YM5416 65121302
         DEBCHK (R1),TYPE=DELETE,AM=EXCP REMOVE VALIDITY         YM5416 65121602
         USING TCB,TCBREG              TCB ADDRESSABILITY        Y02008 65121902
         L     WKREG2,CVTEXT2          GET PTR TO CVT EXTENSION  Y02008 65122202
         L     WKREG2,D28(WKREG2)      GET PTR TO IFDOLT57       Y02008 65122702
         STM   R0,R15,D40(WKREG2)      SAVE REGS IN IFDOLT57     Y02008 65123702
A        SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        X65125602
               RELATED=(LOCAL,IGC0505I(B)),REGS=USE              Y02008 65127602
         LM    R0,R15,D40(WKREG2)      RESTORE ALL REGS          Y02008 65130002
         L     WKREG8,TCBDEB           GET PTR TO 1ST DEB ON Q   Y02008 65131002
         LA    WKREG8,D0(WKREG8)       CLEAR HIGH ORDER BYTE     YM4984 65132002
         LA    R7,TCBDEB               GET PTR TO ADDR OF 1ST DEBY02008 65134002
NOTFIRST EQU   *                                                 Y02008 65135002
         LTR   WKREG8,WKREG8           IS THIS CHAIN END         YM4984 65135302
         BZ    FREELOCK                YES, DEB IS GONE, EXIT    YM4984 65135602
         CR    WKREG8,DEBREG           IS THIS DEB THE ONE       Y02008 65136002
         BE    FOUNDIT                 BRANCH IF YES             Y02008 65137002
         DROP  DEBREG                                            Y02008 65138002
         USING DEBBASIC,WKREG8         DEB ADDRESSABILITY        YM5416 65139002
         LA    R7,DEBDEBAD             SAVE PTR TO NEXT DEBS ADDRY02008 65140002
         L     WKREG8,DEBDEBAD         GET ADDR OF NEXT DEB      Y02008 65141002
         LA    WKREG8,D0(WKREG8)       CLEAR HIGH ORDER BYTE     YM4984 65141502
         DROP WKREG8                                             Y02008 65142002
         USING DEBBASIC,DEBREG         DEB ADDRESSABILITY        YM5416 65143002
         B     NOTFIRST                GO SEE IF NEXT DEB IS IT  Y02008 65144002
FOUNDIT  EQU   *                                                 Y02008 65145002
         L     WKREG8,DEBDEBAD         GET ADDR OF NEXT DEB      Y02008 65146002
         CS    DEBREG,WKREG8,D0(R7)    SWAP PTR TO OUR DEB WITH  Y02008 65147002
*                                      PTR TO NEXT DEB           Y02008 65148002
         BNE   NOTFIRST                BRANCH WITH REG POINTING  Y02008 65149002
*                                      TO NEW DEB ADDED TO FRONT Y02008 65150002
*                                      OF TCB DEB CHAIN          Y02008 65151002
FREELOCK EQU   *                                                 YM4984 65151502
         STM   R0,R15,D40(WKREG2)      SAVE REGS IN IFDOLT57     Y02008 65152002
B        SETLOCK RELEASE,TYPE=LOCAL,RELATED=(LOCAL,IGC0505I(A)),       X65153002
               REGS=USE                                          Y02008 65154002
         LM    R0,R15,D40(WKREG2)      RESTORE ALL REGS          Y02008 65155002
         LR    R6,WKREG2               RESTORE PTR TO DIE        Y02008 65155502
ZEROIT   XC    D0(D4,TABREG),D0(TABREG) ZERO CVTOLTEP            XM0097 65156002
*                                THE FOLLOWIN WILL RELEASE THE   X03008 65180002
*                                CORE OBTAINED FOR THE UCBTAB    X03008 65190002
         L     R5,D0(POOLREG)      GET SIZE OF CORE TO FREE    @Y30LPAW 65200003
         SRL   R5,THREE            DIVIDE BY 3                 @Y30LPAW 65203003
         LA    R5,K72(R5)          PLUS SIZE FOR SSIDLIST      @Y30LPAW 65206003
         LA    R5,D15(R5)        BUMP BY 15                      X03008 65210002
         SRL   R5,THREE          AND ROUND IT                    X03008 65212002
         SLL   R5,THREE          OFF TO A DOUDLE WORD            X03008 65214002
         ICM   R5,B'1100',SP245        GET SUBPOOL NAME          Y02008 65216002
         LR    R0,R5             SET UP FOR FREE MAIN            X03008 65218002
         LR    R1,POOLREG        GET POOL ADDR FOR FREEING       X03008 65218102
         SPACE 3                                                        65218402
         FREEMAIN R,LV=(0),A=(1) RELEASE STG TO SUPERMAN         X03008 65218802
         L     R0,12(R6)               GET DIE SIZE              Y02008 65228802
         ICM   R0,B'1000',SP245        GET SUBPOOL NAME          Y02008 65238802
         LR    R1,R6                   GET ADDRESS TO BE FREED   Y02008 65248802
         FREEMAIN R,LV=(0),A=(1)       FREE IFDOLT57             Y02008 65258802
          NI     D20(TCBREG),HEXFD    /* RESET TCBOLTEP      @ZA12056*/ 65278837
         BR    RETURN                  RETURN                    Y02008 65308802
 EJECT                                                                  68400020
*********************************************************************** 68700020
*                             CONSTANTS                               * 69000020
*********************************************************************** 69300020
 SPACE 2                                                                69600020
TSTAREA  DC    X'000000'                                                71100020
SAVEPARM DS    F                   SAVE THE CLEANUP PARAMETER  @ZA06016 71150004
         DS    0F                      ESTABLISH WORD BOUNDRY    X03008 71200002
SP254    DC    X'FE000010'             10 BYTES - SUBPOOL 254    Y02008 72000002
SP245    DC    X'F500'                 SUBPOOL 245               Y02008 72400002
END1     DC    X'FFFF'                                           X03008 72900002
FOUR     DC    X'0004'                                           X03008 72950002
SP254A   DC    X'FE000064'         TO GET 100 BYTES FROMSP254  @Y30LPAW 72980003
VARYPARM DC    X'0000000C0A008000'      TO SET UP VARYLIST     @Y30LPAW 73010003
TRTBLE   DC    C'0123456789ABCDEF'      TXLATE TABLE           @Y30LPAW 73070003
IFD470   WTO   'IFD470I ICBVARY ERROR CODE XXX UNEXPECTED - VARY ON VIRX73100003
               TUAL SXXX FAILED',MF=L,ROUTCDE=10,DESC=7        @Y30LPAW 73130003
PATCH05  IFDPATCH                      PATCHAREA                        73200002
 EJECT                                                                  74100020
         DS    0D                                                       74400020
CVTDSCTS CVT   SYS=AOS2,DSECT=YES                              @Y30LPAW 74700003
         IEZDEB LIST=YES                                         Y02008 74800002
TCB      IKJTCB SYS=AOS2,DSECT=YES                             @Y30LPAW 74900003
         IHAPSA                                                  Y02008 75000002
MAINMAP  DSECT                                                 @Y30LPAW 75010003
VONLEN   DS    XL4'0'              PARMLIST LENGTH             @Y30LPAW 75020003
VONOPCD  DS    XL1'0'              OP CODE FLD                 @Y30LPAW 75030003
VONSPARE DS    XL1'0'              NOT USED                    @Y30LPAW 75040003
VONFLG   DS    XL2'0'              FLAG FLD                    @Y30LPAW 75050003
VONSSID  DS    XL2'0'              SSID FLD                    @Y30LPAW 75060003
VONRUA   DS    XL2'0'              REAL UNIT ADDR FLD          @Y30LPAW 75070003
MSGLEN   DS    XL2'0'              LENGTH FOR MSG WTO          @Y30LPAW 75080003
MSGFLG   DS    XL2'0'              FLG FLD                     @Y30LPAW 75090003
MSGTXT1  DS    XL27'0'             PART OF MSG                 @Y30LPAW 75100003
MSGCODE  DS    XL3'0'              ERROR CODE FLD              @Y30LPAW 75110003
MSGTXT2  DS    XL31'0'             PART OF MSG                 @Y30LPAW 75120003
MSGSIDA  DS    XL1'0'              8 FOR DSID, 0 FOR SSID      @Y30LPAW 75130003
MSGSIDB  DS    XL2'0'              DSID/SSID                   @Y30LPAW 75140003
MSGTXT3  DS    XL7'0'              PART OF MSG                 @Y30LPAW 75150003
MSGDESC  DS    XL2'0'              DESC OF MSG                 @Y30LPAW 75160003
MSGRTE   DS    XL2'0'              ROUTE CODE                  @Y30LPAW 75170003
WKFLD    DS    XL6'0'              WORK FLD TO SET FOR TXLATE  @Y30LPAW 75180003
*        DS    XL3'0'              NOT USED                    @Y30LPAW 75190003
         END                                                            75300020
./  ADD  SSI=81161456,NAME=IGC0905I
         TITLE 'CUTEST SVC IGC0905I'                                    00010000
         LCLA  &T,&SPN                                            0001  00020000
.@001    ANOP                                                     0001  00030000
IGC0905I CSECT ,                                                  0001  00040000
         BC    15,24(0,@F)                                              00050000
         DC    C'IGC0905I 26 APR 78'                             0001  00060000
         BALR  @B,0                                               0001  00070000
@PSTART  DS    0H                                                 0001  00080000
         USING @PSTART+00000,@B                                   0001  00090000
         LR    @C,@1                                              0001  00100000
         L     @0,@SIZ001                                         0001  00110000
         GETMAIN  R,LV=(0)                                        0001  00120000
         XR    @C,@1                                              0001  00130000
         XR    @1,@C                                              0001  00140000
         XR    @C,@1                                              0001  00150000
         USING @DATD+00000,@C                                     0001  00160000
         XC    @TEMPS(@L),@TEMPS                                  0001  00170000
         TITLE 'CUTEST SVC IGC0905I'                                    00180000
         USING CVTMAP,CVTREG           ADDRESSABILITY TO CVT   Y02008   00190000
         DS    0H                                                       00200000
*         SAVER14=R14;                 /* SAVE RETURN ADDRESS        */ 00210000
         ST    @E,SAVER14                                         0052  00220000
*         CVTREG=CVTADDR;                /* ADDR CVT FOR USE    Y02008* 00230000
         L     @2,CVTADPTR                                        0053  00240000
         L     @8,0(0,@2)                                         0053  00250000
*         IF R1=CODE0C THEN              /* VARY DSID REQ ?   @Y30LPAW* 00260000
         SR    @F,@F                                              0054  00270000
         IC    @F,CODE0C                                          0054  00280000
         CR    @F,@1                                              0054  00290000
*            GOTO VARYDSID;              /* YES-GO AROUND     @Y30LPAW* 00300000
         BC    08,VARYDSID                                        0055  00310000
*         IF R1=CODE10 THEN              /* STORE SSID?       @Y30LPAW* 00320000
         SR    @F,@F                                              0056  00330000
         IC    @F,CODE10                                          0056  00340000
         CR    @F,@1                                              0056  00350000
*            GOTO STORSSID;              /*  YES-GO AROUND    @Y30LPAW* 00360000
         BC    08,STORSSID                                        0057  00370000
*         R3=8;                          /* INITIALIZE MSG PTR          00380000
         LA    @3,8                                               0058  00390000
*         R6=EXTENT;                     /* GET EXTENT                  00400000
         LH    @6,4(0,@9)                                         0059  00410000
*         /* CHECK UCB                                                * 00420000
*   UCBCHK:                                                             00430000
*         FLAGS='00'X;                  /* CLEAR INTERNAL FLAGS Y02008* 00440000
UCBCHK   MVI   FLAGS,X'00'                                        0060  00450000
*         RESTRICT(R7,R13);                                             00460000
*         R7=R7&&R7;                      /* FREE ROR IOS USE    X03008 00470000
         XR    @7,@7                                              0062  00480000
*         R13=ADDR(IOSGENTBL);            /* ADDRESS IOS WK AREA X03008 00490000
         L     @2,CVTEXT2                                         0063  00500000
         L     @2,28(0,@2)         CVTOLTP                        0063  00510000
         LA    @D,40(0,@2)                                        0063  00520000
*         EXTENT=R6;                      /* NUM DEVS ON C-UNIT  X03008 00530000
         STH   @6,4(0,@9)                                         0064  00540000
*         R6=BASEADDR;                    /* DEVICE ADDRESS      X03008 00550000
         L     @6,0(0,@9)                                         0065  00560000
*         GEN;                                                          00570000
REG13    EQU   13                                                       00580000
IOSGEN09 IOSGEN  UCBLOOK,REG13                                  Y02008  00590000
         DS    0H                                                       00600000
*         R6=EXTENT;                      /* RESTORE EXTENT CNT  X03008 00610000
         LH    @6,4(0,@9)                                         0067  00620000
*         IF R15¬=4                       /* IF UCB ADDR FOUND   X03008 00630000
*          THEN                           /* GO TO UCB FOR DEV   X03008 00640000
         CH    @F,@D1                                             0068  00650000
*           GO TO UCBCHK01;               /* AND CHK FLAGS       X03008 00660000
         BC    07,UCBCHK01                                        0069  00670000
* UCBCHK00:                                                             00680000
*         R6=R6-1;                        /* DECREMENT DEV CNTR  X03008 00690000
UCBCHK00 BCTR  @6,0                                               0070  00700000
*         BASEADDR=BASEADDR+1;            /* NEXT DEV ADDR ON CU X03008 00710000
         LA    @F,1                                               0071  00720000
         A     @F,0(0,@9)                                         0071  00730000
         ST    @F,0(0,@9)                                         0071  00740000
*         IF R6=0                         /* NO MORE DEVS TO CHK X03008 00750000
*          THEN                           /* ON CNTRL UNIT, SO,  X03008 00760000
         LTR   @6,@6                                              0072  00770000
*           GO TO CLEANUP;                /* RESTORE VALUES,EXIT X03008 00780000
         BC    08,CLEANUP                                         0073  00790000
*         GO TO UCBCHK;                   /* MORE DEVS, GET NEXT X03008 00800000
         BC    15,UCBCHK                                          0074  00810000
*                                                                       00820000
* UCBCHK01:                                                             00830000
*         RELEASE(R13);                                                 00840000
*         IF UNITDEV¬=CNTUNDEV THEN       /* MATCH UCB AND DEV  X03008* 00850000
UCBCHK01 CLC   3(1,@9),5(@7)                                      0076  00860000
*           GO TO UCBCHK00;               /* ADDR. MATCH MEANS  X03008* 00870000
         BC    07,UCBCHK00                                        0077  00880000
*                                         /* VALID UCB FOR DEV  X03008* 00890000
*                                                                       00900000
*         IF SYSIN='1'B |                 /* IS THIS SYSIN DEV YA00884* 00910000
*            SYSOUT='1'B |                /* IS IT SYSOUT DEV?  Y02008* 00920000
*             UCBSYSR='1'B                /* IS IT SYS CONSOLE? Y02008* 00930000
*          THEN                           /* YES,              YA00884* 00940000
         TM    12(@7),B'10000000'                                 0078  00950000
         BC    01,@9FF                                            0078  00960000
         TM    12(@7),B'01000000'                                 0078  00970000
         BC    01,@9FE                                            0078  00980000
         TM    3(@7),B'00000010'                                  0078  00990000
         BC    12,@9FD                                            0078  01000000
*           GO TO NOTEST;                 /* DON'T TEST THIS DEV.     * 01010000
         BC    03,NOTEST                                          0079  01020000
*                                                                       01030000
*           IF UCBONLI='0'B &           /* IS DEVICE OFFLINE ANDY02008* 01040000
*              UCBALOC='0'B             /* NOT ALLOCATED?       Y02008* 01050000
*          THEN                           /* NO,               YA00884* 01060000
@9FD     TM    3(@7),B'10000000'                                  0080  01070000
         BC    05,@9FC                                            0080  01080000
         TM    3(@7),B'00001000'                                  0080  01090000
*           GO TO UCBCHK02;               /* DEV FREE FOR OLTEP.      * 01100000
         BC    10,UCBCHK02                                        0081  01110000
*          ELSE                           /* CHK BTAM DEV,REQST.YA00884 01120000
*           GO TO UCBCHK03;                                             01130000
         BC    15,UCBCHK03                                        0082  01140000
*                                                                       01150000
* UCBCHK02:                                                             01160000
*                                                                       01170000
*            EXTENT=R6;                  /* SAVE EXTENT VALUE   Y02008* 01180000
UCBCHK02 STH   @6,4(0,@9)                                         0083  01190000
*            RESTRICT(R4,R5);                                           01200000
*            GEN ( BAL R6,UCBCHK08);     /* SEARCH UCB/BITMASK  Y02008* 01210000
          BAL R6,UCBCHK08                                               01220000
         DS    0H                                                       01230000
*            R6=EXTENT;                  /* RESTORE EXTENT  REG Y02008* 01240000
         LH    @6,4(0,@9)                                         0086  01250000
*         RELEASE (R4,R5);                                              01260000
*                                                                       01270000
*         IF OKTEST='1'B                 /* IF DEV OK TO TEST   Y02008* 01280000
*          THEN                                                         01290000
         TM    FLAGS,B'01000000'                                  0088  01300000
*           GO TO DECREXT;               /* LOOK AT NEST DEV    Y02008* 01310000
         BC    01,DECREXT                                         0089  01320000
*          ELSE                          /* DEV NOT OK TO TEST  Y02008* 01330000
*           GO TO NOTEST;                /* PUT IN OUTPUT MSG   Y02008* 01340000
         BC    15,NOTEST                                          0090  01350000
*                                                                       01360000
* UCBCHK08:                                                             01370000
*                                                                       01380000
*         /* THE FOLLOWING CODE WILL ISOLATE AN OLTEP BITMASK BITY02008 01390000
*                                                                       01400000
*      RESTRICT(R10);                                                   01410000
UCBCHK08 EQU   *                                                  0091  01420000
*         GEN( USING CVTMAP,CVTREG);      /* ADDRESS CVT DATA    Y02008 01430000
          USING CVTMAP,CVTREG                                           01440000
         DS    0H                                                       01450000
*         R10=CVTILK2;                    /* ADDRESS UCB ADR TAB X03008 01460000
         L     @A,CVTILK2                                         0093  01470000
* UCBCHK2A: GEN;                                                        01480000
UCBCHK2A EQU   *                                                  0094  01490000
         CLM   R7,B'0011',0(R10)            LOOKING AT CUTEST   X03008  01500000
         BC    08,UCBCHK2B                  UCBIN LOOKUP TABLE? X03008  01510000
         DS    0H                                                       01520000
*                                         /* NO, NOT CUTEST UCB  X03008 01530000
*            IF UCBCHAR¬='FF'X            /* IS THIS END OF TABLEX03008 01540000
*             THEN                        /* NO, THEN ADDR NEXT  X03008 01550000
         CLI   1(@A),X'FF'                                        0095  01560000
         BC    08,@9FA                                            0095  01570000
*              DO;                                                      01580000
*               R10=R10+2;                /* UCB TABLE ENTRY     X03008 01590000
         AH    @A,@D2                                             0097  01600000
*               GO TO UCBCHK2A;           /* CHECK NEXT UCB ADDR X03008 01610000
         BC    15,UCBCHK2A                                        0098  01620000
*              END;                                                     01630000
*             ELSE                        /* NOW AT END OF TABLE,X03008 01640000
*              DO;                                                      01650000
*               RELEASE (R4,R5);                                        01660000
*               DONOTEST='1'B;           /* DONOT TEST THIS DEV Y02008* 01670000
@9FA     OI    FLAGS,B'10000000'                                  0102  01680000
*               GEN ( BR R6 );           /* RETURN TO MAIN LINE Y02008* 01690000
          BR R6                                                         01700000
         DS    0H                                                       01710000
*              END;                                                     01720000
*                                                                       01730000
*  UCBCHK2B:                                                            01740000
*         RESTRICT(R4,R4);                                              01750000
@9F9     EQU   *                                                  0105  01760000
*         R4=((R10-CVTILK2)+2)/2;       /* NUM UCBS LOOKED AT   X03008* 01770000
UCBCHK2B LR    @F,@A                                              0106  01780000
         S     @F,CVTILK2                                         0106  01790000
         AH    @F,@D2                                             0106  01800000
         LR    @E,@F                                              0106  01810000
         SRDA  @E,32                                              0106  01820000
         LA    @0,2                                               0106  01830000
         DR    @E,@0                                              0106  01840000
         LR    @4,@F                                              0106  01850000
*         R5=(R4/8)+1;                  /* GET BYTE NUM IN TAB  X03008* 01860000
         LR    @E,@4                                              0107  01870000
         SRA   @E,3                                               0107  01880000
         AH    @E,@D3                                             0107  01890000
         LR    @5,@E                                              0107  01900000
*         R4=(R4//8);                   /* GET BIT IN BYTE      X03008* 01910000
         LR    @E,@4                                              0108  01920000
         SRDA  @E,32                                              0108  01930000
         LA    @0,8                                               0108  01940000
         DR    @E,@0                                              0108  01950000
         LR    @4,@E                                              0108  01960000
*         IF R4=0                       /* LAST BIT IN BYTE?    X03008* 01970000
*          THEN                         /* YES, RESET REGS      X03008* 01980000
         LTR   @4,@4                                              0109  01990000
         BC    07,@9F8                                            0109  02000000
*           DO;                         /* TO ADDR CORRECT BIT  X03008* 02010000
*            R5=R5-1;                   /* ADDR PROPER BYTE     X03008* 02020000
         BCTR  @5,0                                               0111  02030000
*            R4=8;                      /* ADDR PROPER BIT      X03008* 02040000
         LA    @4,8                                               0112  02050000
*           END;                                                        02060000
*         IF UCBNALOC='1'B                /* IS DEV OWNED BY ANOTHER    02070000
*          THEN                           /* USER?  YES, CAN   YA00884  02080000
@9F8     TM    1(@7),B'00000100'                                  0114  02090000
         BC    12,@9F7                                            0114  02100000
*           DO;                                                         02110000
*         IOSGENTBL(1)=UCBBITS(R5);     /* ISOLATE UCBBIT BYTE  X03008* 02120000
         LR    @2,@5                                              0116  02130000
         BCTR  @2,0                                               0116  02140000
         L     @5,CVTEXT2                                         0116  02150000
         L     @5,28(0,@5)         CVTOLTP                        0116  02160000
         MVC   @TEMP4(4),28(@5)                                   0116  02170000
         L     @5,@TEMP4           OLTEPTAB                       0116  02180000
         LA    @E,4(@2,@5)                                        0116  02190000
         L     @2,CVTEXT2                                         0116  02200000
         L     @2,28(0,@2)         CVTOLTP                        0116  02210000
         MVC   40(1,@2),0(@E)                                     0116  02220000
*         IOSGENTBL(1)=IOSGENTBL(1)&BITMASK(R4); /* GET UCB BIT Y02008* 02230000
         LR    @5,@4                                              0117  02240000
         LA    @E,BITMASK-1(@5)                                   0117  02250000
         NC    40(1,@2),0(@E)                                     0117  02260000
*                                                                       02270000
*         IF IOSGENTBL(1)='00'X         /* DO WE OWN DEVICE?    Y02008* 02280000
*          THEN                                                         02290000
         CLI   40(@2),X'00'                                       0118  02300000
         BC    07,@9F6                                            0118  02310000
*          DO;                          /* NOT  GOOD DEV        Y02008* 02320000
*           DONOTEST='1'B;              /* NOT TESTABLE DEVICE  Y02008* 02330000
         OI    FLAGS,B'10000000'                                  0120  02340000
*           GEN( BR R6);                /* RET TO MAIN FLOW     Y02008* 02350000
          BR R6                                                         02360000
         DS    0H                                                       02370000
*          END;                                                         02380000
*         OKTEST='1'B;                  /* DEV OK TO TEST       Y02008* 02390000
@9F6     OI    FLAGS,B'01000000'                                  0123  02400000
*         GEN ( BR R6 );                 /* RETURN TO MAIN FLOW Y02008* 02410000
          BR R6                                                         02420000
         DS    0H                                                       02430000
*         END;                                                          02440000
*                                                                       02450000
*         UCBBITS(R5)=UCBBITS(R5)|BITMASK(R4);   /* TURN ON BIT Y02008* 02460000
@9F7     LR    @2,@4                                              0126  02470000
         LA    @E,BITMASK-1(@2)                                   0126  02480000
         BCTR  @5,0                                               0126  02490000
         L     @2,CVTEXT2                                         0126  02500000
         L     @2,28(0,@2)         CVTOLTP                        0126  02510000
         MVC   @TEMP4(4),28(@2)                                   0126  02520000
         L     @2,@TEMP4           OLTEPTAB                       0126  02530000
         LA    @A,4(@5,@2)                                        0126  02540000
         OC    0(1,@A),0(@E)                                      0126  02550000
*                                                                       02560000
* UCBCHK8A:                                                             02570000
*                                                                       02580000
*         IF UCBNALOC='1'B               /* IF UCBNALOC IS ON   Y02008* 02590000
*          THEN                          /* DEV IS NOT TESTABLE Y02008* 02600000
UCBCHK8A TM    1(@7),B'00000100'                                  0127  02610000
         BC    12,@9F5                                            0127  02620000
*           DO;                          /* MUST SET ON FLAG    Y02008* 02630000
*            DONOTEST='1'B;              /* FOR NOT TESTABLE DEVY02008* 02640000
         OI    FLAGS,B'10000000'                                  0129  02650000
*            GEN ( BR R6 );              /* RET TO MAIN FLOW    Y02008* 02660000
          BR R6                                                         02670000
         DS    0H                                                       02680000
*           END;                                                        02690000
*                                                                       02700000
*         /* THE FOLLOWING CODE WILL COMPARE THE UCBNALOC BIT INY02008* 02710000
*         /* THE UCB, AND SET IT ON IF IT IS NOT ON.  IF IT IS  Y02008* 02720000
*         /* ALREADY ON (BY ANOTHER USER) WE WILL NOT TURN IT ONY02008* 02730000
*                                                                       02740000
*         R4=UNALMASK;                   /* MASK FOR UCBNALOC BIT IN    02750000
*                                                CURRENT UCB    Y02008* 02760000
@9F5     L     @4,UNALMASK                                        0132  02770000
*         R5=UCBOB;                      /* ADDRESS HEAD OF UCB Y02008* 02780000
         L     @5,0(0,@7)                                         0133  02790000
*         R4=R4|R5;                      /* PUT 1ST WORD OF UCB Y02008* 02800000
         OR    @4,@5                                              0134  02810000
*                                        /* IN REG, UCBNALOC ON Y02008* 02820000
*         GEN ( CS  R5,R4,UCBOB(R7));    /* TRY TO SET UCBNALOC Y02008* 02830000
          CS  R5,R4,UCBOB(R7)                                           02840000
         DS    0H                                                       02850000
*         GEN ( BNE UCBCHK8A);           /* NO GO, TRY AGAIN    Y02008* 02860000
          BNE UCBCHK8A                                                  02870000
         DS    0H                                                       02880000
*                                                                       02890000
*         OKTEST='1'B;                   /* UCBNALOC SET ON,DEV Y02008* 02900000
         OI    FLAGS,B'01000000'                                  0137  02910000
*         GEN( BR R6);                   /* TO TEST, RET TO MAINY02008* 02920000
          BR R6                                                         02930000
         DS    0H                                                       02940000
* UCBCHK03:                                                             02950000
*                                                                       02960000
*         /*          OLTEP VARY DEVICE OFFLINE ROUTINE               * 02970000
*                                                                       02980000
*         IF UCB3COMM='1'B |            /* IS DEVICE TELE-COMM  Y02008* 02990000
*            UCB3DISP='1'B |            /* OR GRAPHICS/DISPLAY  Y02008* 03000000
*                                                                       03010000
*            UCB3UREC='1'B              /* OR UNIT RECORD ?     Y02008* 03020000
*           THEN                        /* YES, ENQ ON UCB FOR  Y02008* 03030000
UCBCHK03 TM    18(@7),B'01000000'                                 0139  03040000
         BC    01,@9F4                                            0139  03050000
         TM    18(@7),B'00010000'                                 0139  03060000
         BC    01,@9F3                                            0139  03070000
         TM    18(@7),B'00001000'                                 0139  03080000
         BC    12,@9F2                                            0139  03090000
*             DO;                       /* ONLINE--OFFLINE VARY Y02008* 03100000
@9F3     EQU   *                                                  0140  03110000
*               RESTRICT(R4);           /*                      Y02008* 03120000
*               R4=10;                  /* INITIALIZE COUNTER   Y02008* 03130000
@9F4     LA    @4,10                                              0142  03140000
*             END;                                                      03150000
*           ELSE                                                        03160000
*            GO TO NOTEST;              /* DEV MUST BE OFFLINE  Y02008* 03170000
*                                                                       03180000
*         /* THE FOLLOWING BTAM CHECK IS MADE FOR ONLINE DEVS   Y02008* 03190000
*                                                                       03200000
*         IF UCBATI='1C'X &              /* IS DEV BTAM'S      YA00884* 03210000
*            CDE='01'X                   /* BTAM REQUEST?      YA00884* 03220000
*          THEN                          /* YES, THEN,USE IT.  YA00884* 03230000
@9F1     MVC   @TEMP3+1(3),21(@7)                                 0145  03240000
         L     @2,@TEMP3                                          0145  03250000
         CLI   3(@2),X'1C'                                        0145  03260000
         BC    07,@9F0                                            0145  03270000
         CLI   7(@9),X'01'                                        0145  03280000
         BC    07,@9EF                                            0145  03290000
*          DO;                                                          03300000
*           UCBOLTEX='1'B;               /* OLTEP-BTAM FLAG    YA00884* 03310000
         OI    27(@7),B'10000000'                                 0147  03320000
*           OKTEST='1'B;                 /* DEV OK TO TEST      Y02008* 03330000
         OI    FLAGS,B'01000000'                                  0148  03340000
*           GO TO UCBCHK07;              /* SET ON BITMASK BIT  Y02008* 03350000
         BC    15,UCBCHK07                                        0149  03360000
*         END;                                                          03370000
*                                                                       03380000
*                                                                       03390000
* UCBCHK04:                                                             03400000
*         /* THE FOLLOWING CODE WILL ENQ ON THE UCB FOR THE     Y02008* 03410000
*         /* CURRENT CU TEST DEVICE. TEN 5-SECOND STIMERS ARE   Y02008* 03420000
*         /* ISSUED UNTIL OLTEP GAINS CONTROL OF THE UCB. IF    Y02008* 03430000
*         /* OLTEP CANNOT GAIN CONTROL OF THE UCB, THE DEVICE   Y02008* 03440000
*         /* IS LISTED IN MSG IFD244I. THE OPERATOR/CE MUST     Y02008* 03450000
*         /* VARY THIS DEVICE OFFLINE AND RE ISSUE THE $CUTEST  Y02008* 03460000
*         /* REQUEST.                                           Y02008* 03470000
*                                                                       03480000
*          R5=ADDR(ENQAREA);                                /*@ZA12059* 03490000
@9EF     EQU   *                                                  0151  03500000
@9F0     EQU   *                                                  0151  03510000
UCBCHK04 LA    @5,ENQAREA                                         0151  03520000
* GENERATE;                                                     @ZA1205 03530000
          MVC   0(12,R5),ENQUCB           MOVE LIST TO EX      @ZA12059 03540000
         DS    0H                                                       03550000
* UCBCHK4A:                                                 /*@ZA12052* 03560000
* GEN;                                                      /*@ZA12052* 03570000
UCBCHK4A EQU   *                                                  0153  03580000
          ENQ   ,MF=(E,(R5))                               /*@ZA12052*/ 03590000
         DS    0H                                                       03600000
*         IF R15 = 0 THEN GO TO UCBCHK05; /* CHECK THE RETURN @ZA12055* 03610000
         LTR   @F,@F                                              0154  03620000
         BC    08,UCBCHK05                                        0155  03630000
*         IF ENQRC = '08'X THEN           /* CODES FROM THE   @ZA12055* 03640000
         CLI   3(@F),X'08'                                        0156  03650000
*                     GO TO UCBCHK05;     /* ENQ MACRO        @ZA12055* 03660000
         BC    08,UCBCHK05                                        0157  03670000
*         GEN;                                                          03680000
         STIMER WAIT,DINTVL=FIVE                               Y02008   03690000
         DS    0H                                                       03700000
*         R4=R4-1;                      /*DECREMENT COUNTER BY 1Y02008* 03710000
         BCTR  @4,0                                               0159  03720000
*         IF R4 > 0 THEN                  /* LOOP UNTIL ENQ   @ZA12055* 03730000
         LTR   @4,@4                                              0160  03740000
*            GO TO UCBCHK4A;              /* WORKS OR GIVE UP @ZA12055* 03750000
         BC    02,UCBCHK4A                                        0161  03760000
*         DONOTEST='1'B;                  /* BECAUSE DEVICE   @ZA12055* 03770000
         OI    FLAGS,B'10000000'                                  0162  03780000
*         GO TO NOTEST;                   /* UNTESTABLE       @ZA12055* 03790000
         BC    15,NOTEST                                          0163  03800000
* UCBCHK05:                                                             03810000
*         /* THE FOLLOWING CODE IS EXECUTED IF OLTEP HAS CONTROLY02008* 03820000
*         /* OF THE CURRENT DEVICE'S UCB.                       Y02008* 03830000
*         RELEASE (R4);                                                 03840000
*         IF UCBERLOG = '1'B        /* DOES DEV HAVE A        @Z40MIJR* 03850000
*           THEN                    /* BUFFERED ERROR LOG     @Z40MIJR* 03860000
UCBCHK05 MVC   @TEMP3+1(3),21(@7)                                 0165  03870000
         L     @2,@TEMP3                                          0165  03880000
         TM    5(@2),B'00000100'                                  0165  03890000
*             GO TO UCBCHK5A;       /* YES, WE CANT VARY      @Z40MIJR* 03900000
         BC    01,UCBCHK5A                                        0166  03910000
*                                   /* IT OFFLINE             @Z40MIJR* 03920000
*         IF UCBALOC='1'B               /* IF DEV IS NOW AL-    Y02008* 03930000
*           THEN                        /* LOCATED, MUST NOT    Y02008* 03940000
         TM    3(@7),B'00001000'                                  0167  03950000
*             GO TO UCBCHK5A;           /* VARY OFFLINE. DEQ UCB Y02008 03960000
         BC    01,UCBCHK5A                                        0168  03970000
*         IF UCBONLI='1'B &             /* DEV ONLINE AND IS    Y02008* 03980000
*            UCBDADI='1'B               /* CHANGING STATUS TO   Y02008* 03990000
*           THEN                        /* OFFLINE, CANNOT TEST Y02008* 04000000
         TM    3(@7),B'10000000'                                  0169  04010000
         BC    12,@9EE                                            0169  04020000
         TM    3(@7),B'00000001'                                  0169  04030000
*             GO TO UCBCHK5A;           /* MUST DEQ UCB.        Y02008* 04040000
         BC    03,UCBCHK5A                                        0170  04050000
*         IF UCBONLI='1'B               /* DEV MEETS REMTS TO   Y02008* 04060000
*           THEN                        /* BE VARIED OFFLINE.   Y02008* 04070000
@9ED     EQU   *                                                  0171  04080000
@9EE     TM    3(@7),B'10000000'                                  0171  04090000
         BC    12,@9EC                                            0171  04100000
*             UCBONLI='0'B;             /* ZERO UCB ONLINE FLAG Y02008* 04110000
         NI    3(@7),B'01111111'                                  0172  04120000
*         UCBCHGS='0'B;                 /* TURN OFF DEVICE PEND-Y02008* 04130000
@9EC     NI    3(@7),B'10111111'                                  0173  04140000
*                                       /* ING OFFLINE BIT.     Y02008* 04150000
*         UCBVORSN='1'B;                /* TURN ON FLAG INDICAT Y02008* 04160000
         OI    12(@7),B'00000100'                                 0174  04170000
*                                       /* ING DEV VARIED OFF   Y02008* 04180000
*                                       /* LINE FOR OPERATOR    Y02008* 04190000
*                                       /* REASON.              Y02008* 04200000
*         OKTEST='1'B;                   /* DEV IS OK TO TEST   Y02008* 04210000
         OI    FLAGS,B'01100000'                                  0175  04220000
*         VARYOFF='1'B;                  /* DEV VARIED OFFLINE  Y02008* 04230000
*         GO TO UCBCHK06;                /* DEQ, ISSUE SMF REC  Y02008* 04240000
         BC    15,UCBCHK06                                        0177  04250000
*                                                                       04260000
* UCBCHK5A:                                                             04270000
*                                                                       04280000
*         DONOTEST='1'B;                 /* DEV IS NOT TESTABLE Y02008* 04290000
UCBCHK5A OI    FLAGS,B'10000000'                                  0178  04300000
*                                                                       04310000
* UCBCHK06:                                                             04320000
*                                                                       04330000
*         /* THE FOLLOWING CODE WILL DEQ THE UCB RESOURCE       Y02008* 04340000
*                                                                       04350000
*         GEN;                          /* ISSUE DEQ FOR UCB    Y02008* 04360000
UCBCHK06 EQU   *                                                  0179  04370000
         MVC   0(12,R5),DEQUCB                                 @ZA12059 04380000
         DEQ   ,MF=(E,(R5))                                    @ZA12059 04390000
         DS    0H                                                       04400000
*                                                                       04410000
* UCBCHK07:                                                             04420000
*         IF DONOTEST='1'B              /* IF DONOTEST IS ON    Y02008* 04430000
*           THEN                        /* THE DEVICE IS NOT    Y02008* 04440000
UCBCHK07 TM    FLAGS,B'10000000'                                  0180  04450000
*             GO TO NOTEST;             /* TESTABLE BY OLTEP    Y02008* 04460000
         BC    01,NOTEST                                          0181  04470000
*                                                                       04480000
*         EXTENT=R6;                    /* SAVE EXTENT VALUE   Y02008*/ 04490000
         STH   @6,4(0,@9)                                         0182  04500000
*         RESTRICT(R4,R5);                                              04510000
*         GEN ( BAL R6,UCBCHK08);       /* SEARCH UCB/BITMASK  Y02008*/ 04520000
          BAL R6,UCBCHK08                                               04530000
         DS    0H                                                       04540000
*         R6=EXTENT;                    /* RESTORE EXTENT  REG Y02008*/ 04550000
         LH    @6,4(0,@9)                                         0185  04560000
*                                                                       04570000
*         IF DONOTEST='1'B              /* IF DEV NOK TO TEST  Y02008*/ 04580000
*          THEN                                                         04590000
         TM    FLAGS,B'10000000'                                  0186  04600000
*           GO TO NOTEST;                /* PUT IN OUTPUT MSG   Y02008* 04610000
         BC    01,NOTEST                                          0187  04620000
*         RELEASE (R4,R5);                                              04630000
*                                                                       04640000
*         /* THE FOLLOWING CODE IS ISSUED FOR OLTEP VARY CODE   Y02008* 04650000
*                                                                       04660000
*         IF VARYOFF¬='1'B               /* IF DEV NOT VARIED OFFLINE   04670000
*                                           DO NOT PUT OUT SMF  Y02008* 04680000
*          THEN                                                         04690000
         TM    FLAGS,B'00100000'                                  0189  04700000
*           GO TO DECREXT;               /* LOOK AT NEXT UCB    Y02008* 04710000
         BC    12,DECREXT                                         0190  04720000
*                                                                       04730000
*           /* ISSUE SMF RECORD FOR DEVICES VARIED OFFLINE.     Y02008* 04740000
*                                                                       04750000
*         IF CVTSMCA¬=0                  /* IF SMF REC SUPPORT  Y02008* 04760000
*          THEN                          /* EXISTS THEN TRY TO  Y02008* 04770000
         SR    @F,@F                                              0191  04780000
         C     @F,CVTSMCA                                         0191  04790000
         BC    08,@9EB                                            0191  04800000
*          DO;                           /* PRINT RECORD        Y02008* 04810000
*                                                                       04820000
*           IF SMCAOPT1='1'B             /* IS JOB ACCOUNTING   Y02008* 04830000
*            THEN                        /* SUPPORTED IN THIS   Y02008* 04840000
         L     @2,CVTSMCA                                         0193  04850000
         TM    0(@2),B'10000000'                                  0193  04860000
         BC    12,@9EA                                            0193  04870000
*             DO;                        /* SYSTEM? YES,        Y02008* 04880000
*                                                                       04890000
*             IF SMCAUSER='1'B |         /* IS SMF RECORDING REQY02008* 04900000
*              SMCAMAN='1'B              /* OR DOES SYS1.MAN D/SY02008* 04910000
*              THEN                      /* EXIST? YES,         Y02008* 04920000
         TM    1(@2),B'10000000'                                  0195  04930000
         BC    01,@9E9                                            0195  04940000
         TM    1(@2),B'01000000'                                  0195  04950000
         BC    12,@9E8                                            0195  04960000
*               DO;                                                     04970000
*                                                                       04980000
*                SMFRECRD=SMFRECRD&&SMFRECRD; /* CLEAR RECORD   Y02008* 04990000
@9E9     L     @2,CVTEXT2                                         0197  05000000
         L     @2,28(0,@2)         CVTOLTP                        0197  05010000
         XC    40(24,@2),40(@2)                                   0197  05020000
*                SMFDSCWD=RECSIZE;       /* INIT DESC WORD      Y02008* 05030000
         MVC   41(1,@2),RECSIZE                                   0198  05040000
*                SMFTYPE=TYPE11;         /* TYPE 11 SMF RECORD  Y02008* 05050000
         MVC   45(1,@2),TYPE11                                    0199  05060000
*                SMFVLNTH=VARLNGTH;      /* INIT VAR LNGTH REC  Y02008* 05070000
         MVC   59(1,@2),VARLNGTH                                  0200  05080000
*                                        /* FIELD FOR SMF REC   Y02008* 05090000
*                SMFCLTYP=UCBCLTYP;      /* DEV CLASS/TYPE DATA Y02008* 05100000
         MVC   60(2,@2),18(@7)                                    0201  05110000
*                SMFDEVAD=UNITADDR;      /* DEV ADDR INTO REC   Y02008* 05120000
         MVC   62(2,@2),4(@7)                                     0202  05130000
*                R1=(ADDR(SMFREC));     /* ADDRESS RECORD     @ZA06005* 05140000
         LA    @F,40(0,@2)                                        0203  05150000
         LR    @1,@F                                              0203  05160000
*                                                                       05170000
*                GEN (SVC 83 ) ;         /* ISSUE SMF REC SVC   Y02008* 05180000
         SVC 83                                                         05190000
         DS    0H                                                       05200000
*               END;                                                    05210000
*             END;                                                      05220000
@9E8     EQU   *                                                  0206  05230000
*          END;                                                         05240000
@9EA     EQU   *                                                  0207  05250000
*                                                                       05260000
*         /* TURN ON INDICATOR FOR IFDOLTAJ TO ISSUE MSG IFD401IY02008* 05270000
*         /* FOR DEV JUST VARIED OFFLINE BY OLTEP               Y02008* 05280000
*                                                                       05290000
*         RELEASE(R5,R13);                                              05300000
*         RESTRICT(R4);                                                 05310000
*         R4=ADVARYMSG;                   /* ADDR MSG IFD140I    Y02008 05320000
@9EB     L     @2,8(0,@9)                                         0210  05330000
         L     @4,24(0,@2)                                        0210  05340000
*         VARYDEV=UCBNAME(1:3);           /* PUT DEV ADDR IN MSG Y02008 05350000
         L     @5,24(0,@2)         A00047                         0211  05360000
         MVC   12(3,@5),13(@7)                                    0211  05370000
         MVI   15(@5),C' '                                        0211  05380000
         MVC   16(4,@5),15(@5)                                    0211  05390000
*         GEN( WTO MF=(E,(R4)));          /* ISSUE MSG IFD140I   Y02008 05400000
          WTO MF=(E,(R4))                                               05410000
         DS    0H                                                       05420000
*         GO TO DECREXT;                  /* DEV OK, LOOK AT NXT Y02008 05430000
         BC    15,DECREXT                                         0213  05440000
*                                                                       05450000
*         /* DEVICE DOES NOT MEET REQUIREMENTS MOVE NAME TO MESSAGE     05460000
*   NOTEST:                              /* CANNOT TEST                 05470000
*         RELEASE(R4,R5,R6,R13);                                        05480000
*         EXTENT=R6;                     /* SAVE EXTENT VALUE   Y02008* 05490000
NOTEST   STH   @6,4(0,@9)                                         0215  05500000
*         IF R3¬=8 THEN                  /* ARE WE AT BEGINNING         05510000
         CH    @3,@D4                                             0216  05520000
         BC    08,@9E7                                            0216  05530000
*           DO;                          /* NO                          05540000
*             MSG244I(R3)=',';           /* MOVE IN COMMA               05550000
         LR    @2,@3                                              0218  05560000
         L     @6,8(0,@9)                                         0218  05570000
         L     @6,0(0,@6)          A00047                         0218  05580000
         LA    @A,3(@2,@6)                                        0218  05590000
         MVI   0(@A),C','                                         0218  05600000
*           END;                                                        05610000
*         MSG244I(R3+1:R3+3)=            /* MOVE IN UCB NAME            05620000
*           UCBNAME(1:3);                                               05630000
@9E7     LA    @E,13(0,@7)                                        0220  05640000
         LA    @2,3                                               0220  05650000
         AR    @2,@3                                              0220  05660000
         LA    @6,1                                               0220  05670000
         AR    @6,@3                                              0220  05680000
         SR    @2,@6                                              0220  05690000
         L     @4,8(0,@9)                                         0220  05700000
         L     @4,0(0,@4)          A00047                         0220  05710000
         LA    @A,3(@6,@4)                                        0220  05720000
         EX    @2,@MVC                                            0220  05730000
*         RESTRICT(R6);                                                 05740000
*         R6=EXTENT;                     /* RESTORE EXTENT VAL  Y02008* 05750000
         LH    @6,4(0,@9)                                         0222  05760000
*         R3=R3+4;                       /* INCREMENT MESSAGE POINTER   05770000
         AH    @3,@D1                                             0223  05780000
*  DECREXT:                                                             05790000
*         R6=R6-1;                       /* DECREMENT EXTENT            05800000
DECREXT  BCTR  @6,0                                               0224  05810000
*         /* CHECK EXTENT                                               05820000
*         IF R6=0 THEN                   /* MORE TO DO ?                05830000
         LTR   @6,@6                                              0225  05840000
*          GOTO CLEANUP;                 /* NO.                         05850000
         BC    08,CLEANUP                                         0226  05860000
*         BASEADDR=BASEADDR+1;                                          05870000
         LA    @F,1                                               0227  05880000
         A     @F,0(0,@9)                                         0227  05890000
         ST    @F,0(0,@9)                                         0227  05900000
*         /* SEE IF MESSAGE IS FULL                              Y02008 05910000
*         IF R3<48 THEN                  /* ROOM IN MESSAGE ?    Y02008 05920000
         CH    @3,@D5                                             0228  05930000
*           GOTO UCBCHK;                 /* YES,GO GET NEXT UCB  Y02008 05940000
         BC    04,UCBCHK                                          0229  05950000
*  CLEANUP:                                                             05960000
*         EXTENT=R6;                     /* UPDATE EXTENT               05970000
CLEANUP  STH   @6,4(0,@9)                                         0230  05980000
*         IF R3¬=8                      /* IF  ERR DEVS FOUND   Y02008* 05990000
*          THEN                         /* IN UCB CHECKS THEN   Y02008* 06000000
         CH    @3,@D4                                             0231  06010000
         BC    08,@9E6                                            0231  06020000
*           DO;                                                         06030000
*           R14=SAVER14;                /* RESTORE RETURN ADDRESS     * 06040000
         L     @E,SAVER14                                         0233  06050000
*           RETURN CODE(16);            /* SET ERROR RET CODE   Y02008* 06060000
         LA    @F,16                                              0234  06070000
         ST    @F,16(0,@D)                                        0234  06080000
         LR    @1,@C                                              0234  06090000
         L     @0,@SIZ001                                         0234  06100000
         FREEMAIN R,LV=(0),A=(1)                                  0234  06110000
         L     @F,16(0,@D)                                        0234  06120000
         BCR   15,@E                                              0234  06130000
*           END;                                                        06140000
*          ELSE                         /* ELSE, EVERYTHING OK  Y02008* 06150000
*           DO;                                                         06160000
*           R14=SAVER14;                /* RESTORE RETURN ADDRESS     * 06170000
@9E6     L     @E,SAVER14                                         0237  06180000
*           RETURN CODE(00);            /* SET ZERO RET CODE    Y02008* 06190000
         SR    @F,@F                                              0238  06200000
         ST    @F,16(0,@D)                                        0238  06210000
         LR    @1,@C                                              0238  06220000
         L     @0,@SIZ001                                         0238  06230000
         FREEMAIN R,LV=(0),A=(1)                                  0238  06240000
         L     @F,16(0,@D)                                        0238  06250000
         BCR   15,@E                                              0238  06260000
*           END;                                                        06270000
*         /* WE ARE GATHERED HERE TO VARY OFF A DSID, BUT     @Y30LPAW* 06280000
*         /* FIRST MAKE SURE WE HAVE NOT ALREADY VARIED ONE   @Y30LPAW* 06290000
*         /* OFF BECAUSE WE ONLY ALLOW ONE VARIED OFF DSID    @Y30LPAW* 06300000
*         /* AT A TIME                                        @Y30LPAW* 06310000
* VARYDSID:                              /*                   @Y30LPAW* 06320000
*         R7=UCBCNT;           /* GET COUNT                   @Y30LPAW* 06330000
@9E5     EQU   *                                                  0240  06340000
VARYDSID L     @2,CVTEXT2                                         0240  06350000
         L     @2,28(0,@2)         CVTOLTP                        0240  06360000
         MVC   @TEMP4(4),28(@2)                                   0240  06370000
         L     @2,@TEMP4           OLTEPTAB                       0240  06380000
         L     @7,0(0,@2)                                         0240  06390000
*         R7=R7/8;             /* 1 BYTE PER 8 UCBS           @Y30LPAW* 06400000
         LR    @E,@7                                              0241  06410000
         SRA   @E,3                                               0241  06420000
         LR    @7,@E                                              0241  06430000
*         R7=R7+15;            /* ROUND TO                    @Y30LPAW* 06440000
         AH    @7,@D6                                             0242  06450000
*         R7=R7/8;             /* DOUBLE                      @Y30LPAW* 06460000
         LR    @E,@7                                              0243  06470000
         SRA   @E,3                                               0243  06480000
         LR    @7,@E                                              0243  06490000
*         R7=R7*8;             /* WORD                        @Y30LPAW* 06500000
         SLA   @7,3                                               0244  06510000
*         R7=R7+OLTEPUCB;      /* POINT TO                    @Y30LPAW* 06520000
         L     @4,CVTEXT2                                         0245  06530000
         L     @4,28(0,@4)         CVTOLTP                        0245  06540000
         MVC   @TEMP4(4),28(@4)                                   0245  06550000
         A     @7,@TEMP4                                          0245  06560000
*         R7=R7+4;             /* DSID                        @Y30LPAW* 06570000
         AH    @7,@D1                                             0246  06580000
*         IF DSIDEBC¬=ZEROES THEN        /* ALREADY ONE?      @Y30LPAW* 06590000
         CLC   2(2,@7),ZEROES                                     0247  06600000
         BC    08,@9E4                                            0247  06610000
*            DO;                         /* YES CHECKIT       @Y30LPAW* 06620000
*               IF DSIDEBC=EBCDSID THEN  /* SAME ONE?         @Y30LPAW* 06630000
         CLC   2(2,@7),2(@9)                                      0249  06640000
         BC    07,@9E3                                            0249  06650000
*                  DO;                   /* YES- ITS OK       @Y30LPAW* 06660000
*                     R15=0;             /* SET RETCODE       @Y30LPAW* 06670000
         SR    @F,@F                                              0251  06680000
*                     GOTO RETURN0C;     /* AND GO BACK       @Y30LPAW* 06690000
         BC    15,RETURN0C                                        0252  06700000
*                  END;                  /*                   @Y30LPAW* 06710000
*               R15=4;                   /* NO-PACK IT        @Y30LPAW* 06720000
@9E3     LA    @F,4                                               0254  06730000
*               GOTO RETURN0C;           /* AND RETURN        @Y30LPAW* 06740000
         BC    15,RETURN0C                                        0255  06750000
*            END;                        /*                   @Y30LPAW* 06760000
*         R0=SP254;                      /* SPECIFY SBPOOL254 @Y30LPAW* 06770000
@9E4     L     @0,SP254                                           0257  06780000
*         GEN(GETMAIN R,LV=(0));         /* AND GET SPACE     @Y30LPAW* 06790000
         GETMAIN R,LV=(0)                                               06800000
         DS    0H                                                       06810000
*         R6=R1;                         /* USE THE ADDRESS   @Y30LPAW* 06820000
         LR    @6,@1                                              0259  06830000
*         VARYLIST=VARYLIST&&VARYLIST;   /* CLEAR IT          @Y30LPAW* 06840000
         XC    0(23,@6),0(@6)                                     0260  06850000
*         VONLEN='18'X;                  /* SET LIST LENGTH   @Y30LPAW* 06860000
         MVI   0(@6),X'18'                                        0261  06870000
         MVI   1(@6),C' '                                         0261  06880000
         MVC   2(2,@6),1(@6)                                      0261  06890000
*         VONOPCD='0C'X;                 /* SET CODE FOR OFF  @Y30LPAW* 06900000
         MVI   4(@6),X'0C'                                        0262  06910000
*         VFLG1='80'X;                   /* FLG FOR OFF VIRT  @Y30LPAW* 06920000
         MVI   6(@6),X'80'                                        0263  06930000
*         VONSSID=HEXDSID;               /* PUT IN DSID       @Y30LPAW* 06940000
         MVC   8(2,@6),0(@9)                                      0264  06950000
*         GEN;                                                          06960000
         ICBVARY MF=(E,(6)),TYPE=VOF    VARY IT OFF  /*      @Y30LPAW*/ 06970000
         DS    0H                                                       06980000
*                                        /* SET UP -VARY OFF  @Y30LPAW* 06990000
*        IF R15=0 |                                                     07000000
*           R15='78'X THEN          /* IF OK                  @X03LPMY* 07010000
         LTR   @F,@F                                              0266  07020000
         BC    08,@9E2                                            0266  07030000
         LA    @0,X'78'                                           0266  07040000
         CR    @0,@F                                              0266  07050000
         BC    07,@9E1                                            0266  07060000
*            DO;                         /* SAVE THE DSID     @Y30LPAW* 07070000
*               DSIDHEX=HEXDSID;         /*  IN THE LIST      @Y30LPAW* 07080000
@9E2     MVC   0(2,@7),0(@9)                                      0268  07090000
*               DSIDEBC=EBCDSID;         /* SET RETCODE       @Y30LPAW* 07100000
         MVC   2(2,@7),2(@9)                                      0269  07110000
*               R15=0;                   /* AND GO ON         @Y30LPAW* 07120000
         SR    @F,@F                                              0270  07130000
*               GOTO RETURN0C;           /*  BACK             @Y30LPAW* 07140000
         BC    15,RETURN0C                                        0271  07150000
*            END;                        /*                   @Y30LPAW* 07160000
*         R15=R0;                        /* NOT OK - USE      @Y30LPAW* 07170000
@9E1     LR    @F,@0                                              0273  07180000
*                                        /* ERROR CODE AND    @Y30LPAW* 07190000
* RETURN0C:                              /* GO BACK           @Y30LPAW* 07200000
*         R14=SAVER14;                   /* RESTORE R14       @Y30LPAW* 07210000
RETURN0C L     @E,SAVER14                                         0274  07220000
*         RETURN;                        /*                   @Y30LPAW* 07230000
         BC    15,@EL01                                           0275  07240000
*         /* THIS CODE WILL STORE AN SSID (BOTH HEX AND EBC)  @Y30LPAW* 07250000
*         /* IN THE SSIDLIST AND BUMP THE COUNT BY 1          @Y30LPAW* 07260000
* STORSSID:                              /*                   @Y30LPAW* 07270000
*         R7=UCBCNT;           /* GET COUNT                   @Y30LPAW* 07280000
STORSSID L     @2,CVTEXT2                                         0276  07290000
         L     @2,28(0,@2)         CVTOLTP                        0276  07300000
         MVC   @TEMP4(4),28(@2)                                   0276  07310000
         L     @2,@TEMP4           OLTEPTAB                       0276  07320000
         L     @7,0(0,@2)                                         0276  07330000
*         R7=R7/8;             /* 1 BYTE PER 8 UCBS           @Y30LPAW* 07340000
         LR    @E,@7                                              0277  07350000
         SRA   @E,3                                               0277  07360000
         LR    @7,@E                                              0277  07370000
*         R7=R7+15;            /* ROUND TO                    @Y30LPAW* 07380000
         AH    @7,@D6                                             0278  07390000
*         R7=R7/8;             /* DOUBLE                      @Y30LPAW* 07400000
         LR    @E,@7                                              0279  07410000
         SRA   @E,3                                               0279  07420000
         LR    @7,@E                                              0279  07430000
*         R7=R7*8;             /* WORD                        @Y30LPAW* 07440000
         SLA   @7,3                                               0280  07450000
*         R7=R7+OLTEPUCB;      /* POINT TO                    @Y30LPAW* 07460000
         L     @4,CVTEXT2                                         0281  07470000
         L     @4,28(0,@4)         CVTOLTP                        0281  07480000
         MVC   @TEMP4(4),28(@4)                                   0281  07490000
         A     @7,@TEMP4                                          0281  07500000
*         R7=R7+4;             /* DSID                        @Y30LPAW* 07510000
         AH    @7,@D1                                             0282  07520000
*         R3=ADDR(SSIDS);                /* HERES 1ST SSID    @Y30LPAW* 07530000
         LA    @3,6(0,@7)                                         0283  07540000
*         R3=R3+SSIDCNT*SIDFLDSZ;        /* HERES 1ST EMPTY   @Y30LPAW* 07550000
         SR    @F,@F                                              0284  07560000
         IC    @F,SIDFLDSZ                                        0284  07570000
         MVC   @TEMP2+2(2),4(@7)                                  0284  07580000
         M     @E,@TEMP2                                          0284  07590000
         AR    @3,@F                                              0284  07600000
*         SSIDHEX=HEXSSID;               /* MOVE IN THE SSID  @Y30LPAW* 07610000
         MVC   0(2,@3),0(@9)                                      0285  07620000
*         SSIDEBC=EBCSSID;               /* BOTH HEX AND EBC  @Y30LPAW* 07630000
         MVC   2(2,@3),2(@9)                                      0286  07640000
*         SSIDCNT=SSIDCNT+1;             /* BUMP BY ONE       @Y30LPAW* 07650000
         LA    @F,1                                               0287  07660000
         MVC   @TEMP2+2(2),4(@7)                                  0287  07670000
         A     @F,@TEMP2                                          0287  07680000
         ST    @F,@TEMP4                                          0287  07690000
         MVC   4(2,@7),@TEMP4+2                                   0287  07700000
*         R15=0;                         /* SET GOOD RET CODE @Y30LPAW* 07710000
         SR    @F,@F                                              0288  07720000
*         GOTO RETURN0C;                 /* AND GO BACK       @Y30LPAW* 07730000
         BC    15,RETURN0C                                        0289  07740000
*  GENERATE;                                                /*@ZA12052* 07750000
          DS     0F                                            @ZA12052 07760000
ENQUCB   ENQ   (MAJORNAM,MINORNAM,E,2,SYSTEM),RET=HAVE,MF=L    @ZA26394 07770000
DEQUCB    DEQ   (MAJORNAM,MINORNAM,2,SYSTEM),RET=HAVE,MF=L     @ZA12059 07780000
         DS    0H                                                       07790000
*         END;                                                          07800000
@EL01    LR    @1,@C                                              0291  07810000
         L     @0,@SIZ001                                         0291  07820000
         FREEMAIN R,LV=(0),A=(1)                                  0291  07830000
         BCR   15,@E                                              0291  07840000
@DATA1   EQU   *                                                        07850000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           07860000
@1       EQU   01                                                       07870000
@2       EQU   02                                                       07880000
@3       EQU   03                                                       07890000
@4       EQU   04                                                       07900000
@5       EQU   05                                                       07910000
@6       EQU   06                                                       07920000
@7       EQU   07                                                       07930000
@8       EQU   08                                                       07940000
@9       EQU   09                                                       07950000
@A       EQU   10                                                       07960000
@B       EQU   11                                                       07970000
@C       EQU   12                                                       07980000
@D       EQU   13                                                       07990000
@E       EQU   14                                                       08000000
@F       EQU   15                                                       08010000
@D1      DC    H'4'                                                     08020000
@D2      DC    H'2'                                                     08030000
@D3      DC    H'1'                                                     08040000
@D4      DC    H'8'                                                     08050000
@D5      DC    H'48'                                                    08060000
@D6      DC    H'15'                                                    08070000
@MVC     MVC   0(1,@A),0(@E)                                            08080000
         DS    0F                                                       08090000
@SIZ001  DC    AL1(&SPN)                                                08100000
         DC    AL3(@DATEND-@DATD)                                       08110000
         DS    0F                                                       08120000
         DS    0D                                                       08130000
@DATA    EQU   *                                                        08140000
P        EQU   00000000            FULLWORD INTEGER                     08150000
R0       EQU   00000000            FULLWORD INTEGER REGISTER            08160000
R1       EQU   00000001            FULLWORD INTEGER REGISTER            08170000
R2       EQU   00000002            FULLWORD INTEGER REGISTER            08180000
R3       EQU   00000003            FULLWORD POINTER REGISTER            08190000
R4       EQU   00000004            FULLWORD POINTER REGISTER            08200000
R5       EQU   00000005            FULLWORD POINTER REGISTER            08210000
R6       EQU   00000006            FULLWORD POINTER REGISTER            08220000
R7       EQU   00000007            FULLWORD POINTER REGISTER            08230000
R8       EQU   00000008            FULLWORD POINTER REGISTER            08240000
CVTREG   EQU   00000008            FULLWORD POINTER REGISTER            08250000
R9       EQU   00000009            FULLWORD POINTER REGISTER            08260000
R10      EQU   00000010            FULLWORD POINTER REGISTER            08270000
R12      EQU   00000012            FULLWORD INTEGER REGISTER            08280000
R13      EQU   00000013            FULLWORD INTEGER REGISTER            08290000
R14      EQU   00000014            FULLWORD INTEGER REGISTER            08300000
R15      EQU   00000015            FULLWORD POINTER REGISTER            08310000
PARMLIST EQU   00000000            12 BYTE(S) ON WORD                   08320000
BASEADDR EQU   PARMLIST+00000000   FULLWORD POINTER                     08330000
A00000   EQU   PARMLIST+00000000   2 BYTE(S)                            08340000
CHANNEL  EQU   PARMLIST+00000002   1 BYTE(S)                            08350000
UNITDEV  EQU   PARMLIST+00000003   1 BYTE(S)                            08360000
EXTENT   EQU   PARMLIST+00000004   HALFWORD POINTER                     08370000
CODE     EQU   PARMLIST+00000006   2 BYTE(S)                            08380000
A00001   EQU   PARMLIST+00000006   1 BYTE(S)                            08390000
CDE      EQU   PARMLIST+00000007   1 BYTE(S)                            08400000
MSGMDPTR EQU   PARMLIST+00000008   FULLWORD POINTER                     08410000
CVTADPTR EQU   *                   FULLWORD POINTER                     08420000
         DC    AL4(16)                                                  08430000
CVTADDR  EQU   00000000            FULLWORD POINTER                     08440000
CVTOLTP  EQU   00000028            FULLWORD POINTER                     08450000
OLTEPTAB EQU   00000000            24 BYTE(S)                           08460000
DEIHEAD  EQU   OLTEPTAB+00000000   4 BYTE(S)                            08470000
REIDEB   EQU   OLTEPTAB+00000004   4  BYTE  POINTER                     08480000
A00002   EQU   OLTEPTAB+00000008   20 BYTE(S)                           08490000
OLTEPUCB EQU   OLTEPTAB+00000028   4  BYTE  POINTER                     08500000
A00003   EQU   OLTEPTAB+00000032   8 BYTE(S)                            08510000
IOSGENTB EQU   OLTEPTAB+00000040   72*1 BYTE(S)                         08520000
SSIDLIST EQU   00000000            72 BYTE(S)                           08530000
DSID     EQU   SSIDLIST+00000000   4 BYTE(S)                            08540000
DSIDHEX  EQU   SSIDLIST+00000000   2 BYTE(S)                            08550000
DSIDEBC  EQU   SSIDLIST+00000002   2 BYTE(S)                            08560000
SSIDCNT  EQU   SSIDLIST+00000004   2 BYTE(S)                            08570000
SSIDS    EQU   SSIDLIST+00000006   64 BYTE(S)                           08580000
SSIDFMT  EQU   00000000            4 BYTE(S)                            08590000
SSIDHEX  EQU   SSIDFMT+00000000    2 BYTE(S)                            08600000
SSIDEBC  EQU   SSIDFMT+00000002    2 BYTE(S)                            08610000
DSIDPARM EQU   00000000            4 BYTE(S)                            08620000
HEXDSID  EQU   DSIDPARM+00000000   2 BYTE(S)                            08630000
EBCDSID  EQU   DSIDPARM+00000002   2 BYTE(S)                            08640000
SSIDPARM EQU   00000000            4 BYTE(S)                            08650000
HEXSSID  EQU   SSIDPARM+00000000   2 BYTE(S)                            08660000
EBCSSID  EQU   SSIDPARM+00000002   2 BYTE(S)                            08670000
SIDFLDSZ EQU   *                   1 BYTE(S)                            08680000
         DC    X'04'                                                    08690000
         ORG   @DATA+00000008                                           08700000
SP254    EQU   *                   FULLWORD INTEGER                     08710000
         DC    XL4'FE000018'                                            08720000
CODE0C   EQU   *                   1 BYTE(S)                            08730000
         DC    X'0C'                                                    08740000
CODE10   EQU   *                   1 BYTE(S)                            08750000
         DC    X'10'                                                    08760000
VARYLIST EQU   00000000            23 BYTE(S) ON WORD                   08770000
VONLEN   EQU   VARYLIST+00000000   4 BYTE(S)                            08780000
A00004   EQU   VARYLIST+00000000   3 BYTE(S)                            08790000
VONCNT   EQU   VARYLIST+00000003   1 BYTE(S)                            08800000
VONOPCD  EQU   VARYLIST+00000004   1 BYTE(S)                            08810000
A00005   EQU   VARYLIST+00000005   1 BYTE(S)                            08820000
VONFLG   EQU   VARYLIST+00000006   2 BYTE(S)                            08830000
VFLG1    EQU   VARYLIST+00000006   1 BYTE(S)                            08840000
A00006   EQU   VARYLIST+00000007   1 BYTE(S)                            08850000
VONSSID  EQU   VARYLIST+00000008   2 BYTE(S)                            08860000
VONRUA   EQU   VARYLIST+00000010   2 BYTE(S)                            08870000
A00007   EQU   VARYLIST+00000012   11 BYTE(S)                           08880000
SMFRECRD EQU   00000040            24 BYTE(S)                           08890000
A00008   EQU   SMFRECRD+00000000   1 BYTE(S)                            08900000
SMFDSCWD EQU   SMFRECRD+00000001   1 BYTE(S)                            08910000
A00009   EQU   SMFRECRD+00000002   3 BYTE(S)                            08920000
SMFTYPE  EQU   SMFRECRD+00000005   1 BYTE(S)                            08930000
A00010   EQU   SMFRECRD+00000006   13 BYTE(S)                           08940000
SMFVLNTH EQU   SMFRECRD+00000019   1 BYTE(S)                            08950000
SMFCLTYP EQU   SMFRECRD+00000020   2 BYTE(S)                            08960000
SMFDEVAD EQU   SMFRECRD+00000022   2 BYTE(S)                            08970000
SMFREC   EQU   00000040            FULLWORD POINTER                     08980000
SMFCB    EQU   00000000            2 BYTE(S)                            08990000
SMCAOPT  EQU   SMFCB+00000000      1 BYTE(S)                            09000000
SMCAOPT1 EQU   SMFCB+00000000      1 BIT(S)                             09010000
SMCAOPT2 EQU   SMFCB+00000000      1 BIT(S)                             09020000
SMCAMISC EQU   SMFCB+00000001      1 BYTE(S)                            09030000
SMCAUSER EQU   SMFCB+00000001      1 BIT(S)                             09040000
SMCAMAN  EQU   SMFCB+00000001      1 BIT(S)                             09050000
TYPE11   EQU   *                   1 BYTE(S)                            09060000
         DC    X'0B'                                                    09070000
RECSIZE  EQU   *                   1 BYTE(S)                            09080000
         DC    X'18'                                                    09090000
VARLNGTH EQU   *                   1 BYTE(S)                            09100000
         DC    X'06'                                                    09110000
ZEROES   EQU   *                   2 BYTE(S)                            09120000
         DC    X'0000'                                                  09130000
         ORG   @DATA+00000020                                           09140000
UNALMASK EQU   *                   FULLWORD INTEGER                     09150000
         DC    XL4'00040000'                                            09160000
UCBBITBL EQU   00000000            79 BYTE(S) ON WORD                   09170000
UCBCNT   EQU   UCBBITBL+00000000   4 BYTE(S)                            09180000
UCBBITS  EQU   UCBBITBL+00000004   75*1 BYTE(S)                         09190000
BITMASK  EQU   *                   8*1 BYTE(S)                          09200000
         DC    X'80'                                                    09210000
         DC    X'40'                                                    09220000
         DC    X'20'                                                    09230000
         DC    X'10'                                                    09240000
         DC    X'08'                                                    09250000
         DC    X'04'                                                    09260000
         DC    X'02'                                                    09270000
         DC    X'01'                                                    09280000
UCBLKUP  EQU   00000000            2 BYTE(S)                            09290000
A00011   EQU   UCBLKUP+00000000    1 BYTE(S)                            09300000
UCBCHAR  EQU   UCBLKUP+00000001    1 BYTE(S)                            09310000
UCB      EQU   00000000            40 BYTE(S) ON WORD                   09320000
UCBOB    EQU   UCB+00000000        4 BYTE(S)                            09330000
A00012   EQU   UCB+00000000        1 BYTE(S)                            09340000
A00013   EQU   UCB+00000001        1 BYTE(S)                            09350000
A00014   EQU   UCB+00000001        5 BIT(S)                             09360000
UCBNALOC EQU   UCB+00000001        1 BIT(S)                             09370000
A00015   EQU   UCB+00000001        2 BIT(S)                             09380000
A00016   EQU   UCB+00000002        1 BYTE(S)                            09390000
A00017   EQU   UCB+00000003        1 BYTE(S)                            09400000
UCBONLI  EQU   UCB+00000003        1 BIT(S)                             09410000
UCBCHGS  EQU   UCB+00000003        1 BIT(S)                             09420000
A00018   EQU   UCB+00000003        2 BIT(S)                             09430000
UCBALOC  EQU   UCB+00000003        1 BIT(S)                             09440000
A00019   EQU   UCB+00000003        1 BIT(S)                             09450000
UCBSYSR  EQU   UCB+00000003        1 BIT(S)                             09460000
UCBDADI  EQU   UCB+00000003        1 BIT(S)                             09470000
UNITADDR EQU   UCB+00000004        2 BYTE(S)                            09480000
CHANADDR EQU   UCB+00000004        1 BYTE(S)                            09490000
CNTUNDEV EQU   UCB+00000005        1 BYTE(S)                            09500000
A00020   EQU   UCB+00000006        5 BYTE(S)                            09510000
A00021   EQU   UCB+00000011        1 BYTE(S)                            09520000
A00022   EQU   UCB+00000012        1 BYTE(S)                            09530000
SYSIN    EQU   UCB+00000012        1 BIT(S)                             09540000
SYSOUT   EQU   UCB+00000012        1 BIT(S)                             09550000
A00023   EQU   UCB+00000012        3 BIT(S)                             09560000
UCBVORSN EQU   UCB+00000012        1 BIT(S)                             09570000
UCBNAME  EQU   UCB+00000013        3 BYTE(S)                            09580000
A00024   EQU   UCB+00000016        2 BYTE(S)                            09590000
UCBCLTYP EQU   UCB+00000018        2 BYTE(S)                            09600000
UCBTBYT3 EQU   UCB+00000018        1 BYTE(S)                            09610000
A00025   EQU   UCB+00000018        1 BIT(S)                             09620000
UCB3COMM EQU   UCB+00000018        1 BIT(S)                             09630000
A00026   EQU   UCB+00000018        1 BIT(S)                             09640000
UCB3DISP EQU   UCB+00000018        1 BIT(S)                             09650000
UCB3UREC EQU   UCB+00000018        1 BIT(S)                             09660000
A00027   EQU   UCB+00000018        3 BIT(S)                             09670000
A00028   EQU   UCB+00000019        1 BYTE(S)                            09680000
A00029   EQU   UCB+00000020        1 BYTE(S)                            09690000
UCBXTEND EQU   UCB+00000021        3  BYTE  POINTER                     09700000
A00030   EQU   UCB+00000024        3 BYTE(S)                            09710000
A00031   EQU   UCB+00000027        1 BYTE(S)                            09720000
UCBOLTEX EQU   UCB+00000027        1 BIT(S)                             09730000
A00032   EQU   UCB+00000027        7 BIT(S)                             09740000
UCBEXT   EQU   00000000            4 BYTE(S)                            09750000
A00033   EQU   UCBEXT+00000000     3 BYTE(S)                            09760000
UCBATI   EQU   UCBEXT+00000003     1 BYTE(S)                            09770000
UCBCMEXT EQU   00000000            16 BYTE(S) ON WORD                   09780000
A00034   EQU   UCBCMEXT+00000000   1 BYTE(S)                            09790000
A00035   EQU   UCBCMEXT+00000001   1 BYTE(S)                            09800000
A00036   EQU   UCBCMEXT+00000002   1 BYTE(S)                            09810000
A00037   EQU   UCBCMEXT+00000003   1 BYTE(S)                            09820000
A00038   EQU   UCBCMEXT+00000003   8 BIT(S)                             09830000
A00039   EQU   UCBCMEXT+00000004   1 BYTE(S)                            09840000
UCBFLP1  EQU   UCBCMEXT+00000005   1 BYTE(S)                            09850000
A00040   EQU   UCBCMEXT+00000005   5 BIT(S)                             09860000
UCBERLOG EQU   UCBCMEXT+00000005   1 BIT(S)                             09870000
A00041   EQU   UCBCMEXT+00000005   2 BIT(S)                             09880000
A00042   EQU   UCBCMEXT+00000006   2 BYTE(S)                            09890000
A00043   EQU   UCBCMEXT+00000008   2 BYTE(S)                            09900000
A00044   EQU   UCBCMEXT+00000010   2 BYTE(S)                            09910000
A00045   EQU   UCBCMEXT+00000012   2 BYTE(S)                            09920000
A00046   EQU   UCBCMEXT+00000014   2 BYTE(S)                            09930000
A00047   EQU   00000000            28 BYTE(S) ON WORD                   09940000
IFD244I  EQU   A00047+00000000     FULLWORD POINTER                     09950000
A00048   EQU   A00047+00000004     FULLWORD POINTER                     09960000
HEADER   EQU   A00047+00000008     FULLWORD POINTER                     09970000
A00049   EQU   A00047+00000012     12 BYTE(S)                           09980000
ADVARYMS EQU   A00047+00000024     FULLWORD POINTER                     09990000
A00050   EQU   00000000            52 BYTE(S) ON WORD                   10000000
A00051   EQU   A00050+00000000     4 BYTE(S)                            10010000
MSG244I  EQU   A00050+00000004     48 BYTE(S)                           10020000
A00052   EQU   A00050+00000004     8 BYTE(S)                            10030000
TEXT244I EQU   A00050+00000012     40 BYTE(S)                           10040000
MSG140   EQU   00000000            44 BYTE(S) ON WORD                   10050000
MSG140I  EQU   MSG140+00000000     40 BYTE(S)                           10060000
A00053   EQU   MSG140+00000000     12 BYTE(S)                           10070000
VARYDEV  EQU   MSG140+00000012     8 BYTE(S)                            10080000
A00054   EQU   MSG140+00000020     24 BYTE(S)                           10090000
MAJORNAM EQU   *                   8 BYTE(S)                            10100000
         DC    C'SYSIEFSD'                                              10110000
MINORNAM EQU   *                   8 BYTE(S)                            10120000
         DC    C'Q4'                                                    10130000
         DC    00006C' '                                                10140000
FIVE     EQU   *                   8 BYTE(S)                            10150000
         DC    X'F0F0F0F0F0F5F0C0'                                      10160000
PATCH09  EQU   *                   30*2 BYTE(S)                         10170000
         DC    00030X'0700'                                             10180000
RETCODES EQU   00000000            4 BYTE(S) ON WORD                    10190000
A00055   EQU   RETCODES+00000000   3 BYTE(S)                            10200000
ENQRC    EQU   RETCODES+00000003   1 BYTE(S)                            10210000
         ORG   @DATA                                                    10220000
         DS    00000116C                                                10230000
@L       EQU   6                                                        10240000
@DATD    DSECT                                                          10250000
FLAGS    EQU   @DATD+00000000      8 BIT(S) ON BYTE                     10260000
DONOTEST EQU   FLAGS+00000000      1 BIT(S)                             10270000
OKTEST   EQU   FLAGS+00000000      1 BIT(S)                             10280000
VARYOFF  EQU   FLAGS+00000000      1 BIT(S)                             10290000
SAVER14  EQU   @DATD+00000004      FULLWORD INTEGER                     10300000
ENQAREA  EQU   @DATD+00000008      12 BYTE(S)                           10310000
         DS    00000020C                                                10320000
@TEMPS   DS    0F                                                       10330000
@TEMP2   DC    F'0'                                                     10340000
@TEMP3   DC    F'0'                                                     10350000
@TEMP4   DC    F'0'                                                     10360000
         CVT    SYS=AOS2,DSECT=YES                                      10370000
         IECDIOCM                                                       10380000
         IECDIOCX                                                       10390000
@DATD    DSECT                                                          10400000
@DATEND  EQU   *                                                        10410000
IGC0905I CSECT ,                                                        10420000
@9FF     EQU   NOTEST                                                   10430000
@9FE     EQU   NOTEST                                                   10440000
@9FC     EQU   UCBCHK03                                                 10450000
@9FB     EQU   UCBCHK03                                                 10460000
@9F2     EQU   NOTEST                                                   10470000
         END    ,(C'PL/S',1400,78116)                                   10480000
./  ADD  SSI=41070305,NAME=IGE0019I
         TITLE 'IGE0019I - FIRST ERP MODULE FOR THE 2955'               00010000
         TITLE 'IGE0019I - FIRST ERP MODULE FOR THE 2955'               00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IGE0019I CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IGE0019I 17 APR 74'                             0002  00070000
         BALR  @B,0                                               0002  00080000
@PSTART  DS    0H                                                 0002  00090000
         USING @PSTART+00000,@B                                   0002  00100000
*         R3=R1;                         /* PARAMETER LIST            * 00110000
         LR    @3,@1                                              0051  00120000
*         R9=IOSERP+'28'X;               /* PTR, CCW WORK AREA  Y02008* 00130000
         LA    @F,X'28'                                           0052  00140000
         A     @F,52(0,@3)                                        0052  00150000
         LR    @9,@F                                              0052  00160000
*         R12=R9+'60'X;              /* INIT REG FOR REENT DATA Y02008* 00170000
         LA    @F,X'60'                                           0053  00180000
         AR    @F,@9                                              0053  00190000
         LR    @C,@F                                              0053  00200000
*         GEN;                                                          00210000
         USING @DATD+00000,@C           REENT DATA IN ERPWKAREA Y02008  00220000
         XC    @TEMPS(@L),@TEMPS        CLEAR TEMPORARY AREA    Y02008  00230000
         DS    0H                                                       00240000
*                                                                       00250000
* /*      SET IOSB EXCEPTION FLAG AND ERROR FLAG                Y02008* 00260000
*                                                                       00270000
*         IOSEX='1'B;                  /*SET IOB EXCEPION FLAG  Y02008* 00280000
         OI    0(@3),B'00100100'                                  0055  00290000
*         IOSERR='1'B;                 /*SET IOB ERROR FLAG     Y02008* 00300000
*                                                                       00310000
*         /*    INITIALIZE DATA AREAS IN CCW WORK AREA          Y02008* 00320000
*                                                                       00330000
*         DAT1DATA='DF'X;                /* READ-SKIP DATA BUFR Y02008* 00340000
         L     @4,52(0,@3)                                        0057  00350000
         MVI   94(@4),X'DF'                                       0057  00360000
*         EOTDATA='1F'X;                 /* END OF XMISSION CHARY02008* 00370000
         MVI   92(@4),X'1F'                                       0058  00380000
*         NEGDATA='40'X;                 /* NEG RESPONSE DATA   Y02008* 00390000
         MVI   93(@4),X'40'                                       0059  00400000
*                                                                       00410000
*         DAT1=ADDR(DAT1DATA);           /* ADDRESS OF RD/SKP   Y02008* 00420000
         LA    @F,94(0,@4)                                        0060  00430000
         ST    @F,@TEMP4                                          0060  00440000
         MVC   88(4,@4),@TEMP4                                    0060  00450000
*         EOT=ADDR(EOTDATA);             /* ADDRESS OF EOT CHAR Y02008* 00460000
         LA    @F,92(0,@4)                                        0061  00470000
         ST    @F,@TEMP4                                          0061  00480000
         MVC   80(4,@4),@TEMP4                                    0061  00490000
*         NEG=ADDR(NEGDATA);             /* ADDRESS OF NEG CHAR Y02008* 00500000
         LA    @F,93(0,@4)                                        0062  00510000
         ST    @F,@TEMP4                                          0062  00520000
         MVC   84(4,@4),@TEMP4                                    0062  00530000
*                                                                       00540000
*         /* GET REAL ADDRESSES OF DATA AREAS FOR IOS USE       Y02008* 00550000
*                                                                       00560000
*         R2=DAT1;                       /* PUT DATA ADD IN REG Y02008* 00570000
         MVC   @TEMP4(4),88(@4)                                   0063  00580000
         L     @2,@TEMP4                                          0063  00590000
*                                                                       00600000
*         GEN;                                                          00610000
         LRA   2,0(0,2)                 REAL ADDR OF DAT BUFR  Y02008   00620000
         BNZ   PERR                     PERM ERR IF XLATE FAIL Y02008   00630000
         DS    0H                                                       00640000
*         DAT1=R2;                       /* SAVE REAL ADDRESS   Y02008* 00650000
         ST    @2,@TEMP4                                          0065  00660000
         MVC   88(4,@4),@TEMP4                                    0065  00670000
*                                                                       00680000
*                                                                       00690000
*         R2=EOT;                        /* PUT DATA ADD IN REG Y02008* 00700000
         MVC   @TEMP4(4),80(@4)                                   0066  00710000
         L     @2,@TEMP4                                          0066  00720000
*                                                                       00730000
*         GEN;                                                          00740000
         LRA   2,0(0,2)                 REAL ADDR OF EOT CHAR  Y02008   00750000
         BNZ   PERR                     PERM ERR IF XLATE FAIL Y02008   00760000
         DS    0H                                                       00770000
*                                                                       00780000
*         EOT=R2;                        /* SAVE REAL ADDRESS   Y02008* 00790000
         ST    @2,@TEMP4                                          0068  00800000
         MVC   80(4,@4),@TEMP4                                    0068  00810000
*                                                                       00820000
*         R2=NEG;                        /* PUT DATA ADD IN REG Y02008* 00830000
         MVC   @TEMP4(4),84(@4)                                   0069  00840000
         L     @2,@TEMP4                                          0069  00850000
*                                                                       00860000
*         GEN;                                                          00870000
         LRA   2,0(0,2)                 REAL ADDR OF NEG CHAR  Y02008   00880000
         BNZ   PERR                     PERM ERR IF XLATE FAIL Y02008   00890000
         DS    0H                                                       00900000
*                                                                       00910000
*        NEG=R2;                        /* SAVE REAL ADDRESS  Y02008*/  00920000
         ST    @2,@TEMP4                                          0071  00930000
         MVC   84(4,@4),@TEMP4                                    0071  00940000
*                                                                       00950000
*         IF TCBRV='0'B          /* IF IN VIRTUAL STORAGE       Y02008* 00960000
*          THEN                  /* MUST USE VIRT ADDRS         Y02008* 00970000
         L     @4,CVTADPTR                                        0072  00980000
         L     @4,0(0,@4)          CVTADDR                        0072  00990000
         MVC   @TEMP4(4),328(@4)                                  0072  01000000
         L     @4,@TEMP4           CVT                            0072  01010000
         L     @4,28(0,@4)         CVTOLTEP                       0072  01020000
         MVC   @TEMP4(4),8(@4)                                    0072  01030000
         L     @4,@TEMP4           OLTEPTAB                       0072  01040000
         TM    202(@4),B'10000000'                                0072  01050000
         BC    05,@9FF                                            0072  01060000
*           DO;                  /* TO EXAMINE CCW'S            Y02008* 01070000
*                                                                       01080000
*             R15=CVTPTRV;       /* GET ADDR OF XLATE RTN       Y02008* 01090000
         L     @4,CVTADPTR                                        0074  01100000
         L     @4,0(0,@4)          CVTADDR                        0074  01110000
         MVC   @TEMP4(4),288(@4)                                  0074  01120000
         L     @F,@TEMP4                                          0074  01130000
*             R1=IOSRST;         /* GET ADDR OF CHAN PROG(REAL) Y02008* 01140000
         L     @1,72(0,@3)                                        0075  01150000
*             GEN( BALR   R14,R15); /* BRANCH TO XLATE RTN      Y02008* 01160000
          BALR   R14,R15                                                01170000
         DS    0H                                                       01180000
*             IOSRST=R1;         /* PUT XLATED ADDR IN IOSB     Y02008* 01190000
         ST    @1,72(0,@3)                                        0077  01200000
*             R1=R3;             /* RESTORE IOSB PTR IN REG 1   Y02008* 01210000
         LR    @1,@3                                              0078  01220000
*                                                                       01230000
*           END;                                                        01240000
*         RELEASE(R2);                                                  01250000
*                                                                       01260000
*                                                                       01270000
*         /* SETUP RETRY AND CCW SCAN PTRS BASED ON CSW INFO    Y02008* 01280000
*                                                                       01290000
*         IF IOSCSWCA=0                  /* IF CSW CMND ADDR IS Y02008* 01300000
*          THEN                          /* ZERO, MUST CHECK RE-Y02008* 01310000
@9FF     CLC   21(3,@3),@D1+1                                     0081  01320000
         BC    07,@9FE                                            0081  01330000
*               R7=IOSRST;               /* USE RETRY FOR SCAN  Y02008* 01340000
         L     @7,72(0,@3)                                        0082  01350000
         BC    15,@9FD                                            0083  01360000
*                                                                       01370000
*                                                                       01380000
*          ELSE                          /* CSW CMND ADDR ¬=0   Y02008* 01390000
*           R7=IOSCSWCA-8;               /* ADDRESS FAILING CCW Y02008* 01400000
@9FE     LH    @7,@D2                                             0083  01410000
         MVC   @TEMP3+1(3),21(@3)                                 0083  01420000
         A     @7,@TEMP3                                          0083  01430000
*                                                                       01440000
*         R10=R7;                        /* SAVE CCW PTR        Y02008* 01450000
@9FD     LR    @A,@7                                              0084  01460000
*         /* CHECK STATUS OF EVENTS, INITIAL OR RETRY OF CCWS   Y02008* 01470000
*                                                                       01480000
*         IF IOBENT='0'B THEN            /* IS ENTRY FLAG ON          * 01490000
         L     @2,52(0,@3)                                        0085  01500000
         TM    11(@2),B'10000000'                                 0085  01510000
*           GOTO ERR001;                 /* NO, NOT FIRST TIME  Y02008* 01520000
         BC    08,ERR001                                          0086  01530000
*                                                                       01540000
*         /* RETRY SITUATION, CHECK RETRY CCW STRING            Y02008* 01550000
*                                                                       01560000
*         IOSMDB=IOSMDB &'00'X;          /* ZERO MODIFIER BYTE  Y02008* 01570000
         NI    90(@3),X'00'                                       0087  01580000
*         R7=IOSRST;                     /* POINT TO RESTART    Y02008* 01590000
         L     @7,72(0,@3)                                        0088  01600000
*         IF COCO='02'X                                                 01610000
*               & SKIP='1'B THEN         /* READ SKIP                 * 01620000
         CLI   0(@7),X'02'                                        0089  01630000
         BC    07,@9FC                                            0089  01640000
         TM    4(@7),B'00010000'                                  0089  01650000
         BC    12,@9FB                                            0089  01660000
*               DO;                                                     01670000
*               R7=R7+8;                                                01680000
         LA    @7,8(0,@7)                                         0091  01690000
*               IOSRST=R7;                /* SET UP  FAIL CCW   Y02008* 01700000
         ST    @7,72(0,@3)                                        0092  01710000
*               GOTO RETRY1;             /* RETRY               Y02008* 01720000
         BC    15,RETRY1                                          0093  01730000
*               END;                                                    01740000
*                                                                       01750000
*         R7= R10;                       /* GET CCW ADDR        Y02008* 01760000
@9FB     EQU   *                                                  0095  01770000
@9FC     LR    @7,@A                                              0095  01780000
*         IF IOSRST=R7 THEN              /* RESTART = FAILING   Y02008* 01790000
         C     @7,72(0,@3)                                        0096  01800000
*           GOTO ERR002;                 /* YES.BRANCH                * 01810000
         BC    08,ERR002                                          0097  01820000
*         ERRFLGS1='00'X;                /* ZERO FLAGS          Y02008* 01830000
         L     @2,52(0,@3)                                        0098  01840000
         MVI   11(@2),X'00'                                       0098  01850000
*                                                                       01860000
*  ERR001:                                                              01870000
*         IOBENT='1'B;                   /* SET ENTRY BIT             * 01880000
ERR001   L     @2,52(0,@3)                                        0099  01890000
         OI    11(@2),B'11000000'                                 0099  01900000
*         SRS='1'B;                      /* SET RESTART FLAG          * 01910000
*         IOSRST=R7;                     /* RESTART=FAILING CCW Y02008* 01920000
         ST    @7,72(0,@3)                                        0101  01930000
*  ERR002:                                                              01940000
*         R7=IOSVST;                     /* CHAN PROG ADDR      Y02008* 01950000
ERR002   L     @7,76(0,@3)                                        0102  01960000
*         IF COCO='06'X THEN                                            01970000
         CLI   0(@7),X'06'                                        0103  01980000
         BC    07,@9FA                                            0103  01990000
*               R='1'B;                  /* READ INITIAL              * 02000000
         L     @2,52(0,@3)                                        0104  02010000
         OI    12(@2),B'10000000'                                 0104  02020000
*         IF COCO='01'X THEN                                            02030000
@9FA     CLI   0(@7),X'01'                                        0105  02040000
         BC    07,@9F9                                            0105  02050000
*               DO;                      /* WRITE COMMAND             * 02060000
*               W='1'B;                                                 02070000
         L     @2,52(0,@3)                                        0107  02080000
         OI    12(@2),B'01000000'                                 0107  02090000
*                                                                       02100000
*         IF TCBRV='0'B          /* IF IN VIRTUAL STORAGE       Y02008* 02110000
*          THEN                  /* MUST USE VIRT ADDRS         Y02008* 02120000
         L     @4,CVTADPTR                                        0108  02130000
         L     @4,0(0,@4)          CVTADDR                        0108  02140000
         MVC   @TEMP4(4),328(@4)                                  0108  02150000
         L     @4,@TEMP4           CVT                            0108  02160000
         L     @4,28(0,@4)         CVTOLTEP                       0108  02170000
         MVC   @TEMP4(4),8(@4)                                    0108  02180000
         L     @4,@TEMP4           OLTEPTAB                       0108  02190000
         TM    202(@4),B'10000000'                                0108  02200000
         BC    05,@9F8                                            0108  02210000
*           DO;                  /* TO EXAMINE CCW'S            Y02008* 02220000
*                                                                       02230000
*         R15=CVTPTRV;                    /* ADDRESS V/R XLATR  Y02008* 02240000
         L     @2,CVTADPTR                                        0110  02250000
         L     @2,0(0,@2)          CVTADDR                        0110  02260000
         MVC   @TEMP4(4),288(@2)                                  0110  02270000
         L     @F,@TEMP4                                          0110  02280000
*         R1=DAD;                         /* ADDRESS CCW BUFR   Y02008* 02290000
         MVC   @TEMP3+1(3),1(@7)                                  0111  02300000
         L     @1,@TEMP3                                          0111  02310000
*         GEN( BALR  R14,R15);            /* XLATE VIRT TO REAL Y02008* 02320000
          BALR  R14,R15                                                 02330000
         DS    0H                                                       02340000
*         R8=R1;                          /* SAVE XLATED ADDR   Y02008* 02350000
         LR    @8,@1                                              0113  02360000
*         R1=R3;                          /* RESTORE IOSB PTR   Y02008* 02370000
         LR    @1,@3                                              0114  02380000
         BC    15,@9F7                                            0116  02390000
*                                                                       02400000
*           END;                          /* END VIRT XLATE RTN Y02008* 02410000
*                                                                       02420000
*         ELSE                            /* TASK IN REAL STOR  Y02008* 02430000
*                                                                       02440000
*          R8=DAD;                        /* DATA BUFFR IN CCW  Y02008* 02450000
@9F8     MVC   @TEMP3+1(3),1(@7)                                  0116  02460000
         L     @8,@TEMP3                                          0116  02470000
*                                                                       02480000
*               IF DADBUF='76'X          /* POS CHARACTER       Y02008* 02490000
*                 & COMCHN='1'B THEN     /* COMMAND CHAINING     M4502* 02500000
@9F7     CLI   0(@8),X'76'                                        0117  02510000
         BC    07,@9F6                                            0117  02520000
         TM    4(@7),B'01000000'                                  0117  02530000
         BC    12,@9F5                                            0117  02540000
*                 WR='1'B;                                              02550000
         L     @2,52(0,@3)                                        0118  02560000
         OI    12(@2),B'00100000'                                 0118  02570000
*         IF DADBUF='1F'X THEN ERRFLGS2='80'X;/*EOT? YES, R='1' Y02008* 02580000
@9F5     EQU   *                                                  0119  02590000
@9F6     CLI   0(@8),X'1F'                                        0119  02600000
         BC    07,@9F4                                            0119  02610000
         L     @2,52(0,@3)                                        0120  02620000
         MVI   12(@2),X'80'                                       0120  02630000
*               END;                                                    02640000
@9F4     EQU   *                                                  0121  02650000
*                                                                       02660000
*  ERR003:                                                              02670000
*         R7=R10;                       /* RESTORE CCW PTR      Y02008* 02680000
@9F9     EQU   *                                                  0122  02690000
ERR003   LR    @7,@A                                              0122  02700000
*         RELEASE (R8,R10);                                             02710000
*         RESTRICT(R5);                                                 02720000
* /*      THIS SECTION IS USED TO TEST FOR INITIAL SELECTION          * 02730000
* /*      ERRORS. AN SIO CONDITION CODE OF '01' INDICATES             * 02740000
* /*      STATUS STORED. ANY STATUS AND SENSE INFORMATION OTHER       * 02750000
* /*      THAN UNIT CHECK (UCK) WITH SENSE INDICATING BUS OUT         * 02760000
* /*      CHECK (BOC) OR COMMAND REJECT (CRT) IS TREATED AS A         * 02770000
* /*      "SHOULD NOT OCCUR" (SNO) TYPE ERROR CONDITION               * 02780000
*                                                                  /* * 02790000
*         IF IOSCC ='50'X THEN           /* IS SIO CODE='01'    Y02008* 02800000
         CLI   20(@3),X'50'                                       0125  02810000
*           GOTO LOADNEXT;               /* YES. LOAD NEXT MODULE     * 02820000
         BC    08,LOADNEXT                                        0126  02830000
*                                                                  /* * 02840000
*         IF IOSCC='70'X THEN            /* DEV CC=3 ON SIO?    Y02008* 02850000
         CLI   20(@3),X'70'                                       0127  02860000
         BC    07,@9F3                                            0127  02870000
*                                                                       02880000
*          DO;                            /* CC=3 ON SIO, MUST  Y02008* 02890000
*           CC3UCB=REIUCB;                /* ADDRESS REI UCB    Y02008* 02900000
         L     @2,CVTADPTR                                        0129  02910000
         L     @2,0(0,@2)          CVTADDR                        0129  02920000
         MVC   @TEMP4(4),328(@2)                                  0129  02930000
         L     @2,@TEMP4           CVT                            0129  02940000
         L     @2,28(0,@2)         CVTOLTEP                       0129  02950000
         MVC   CC3PLIST+1(3),33(@2)                               0129  02960000
*           FUNCTCOD='00'X;               /* VERIFY PATH FNCTN  Y02008* 02970000
         MVI   CC3PLIST,X'00'                                     0130  02980000
*           RESTRICT(R0,R13,R14,R15);     /* REGS FOR US/IOS USEY02008* 02990000
*           GEN( LOAD EP=IECVIOPM);       /* LOAD PATH CHK MOD  Y02008* 03000000
          LOAD EP=IECVIOPM                                              03010000
         DS    0H                                                       03020000
*           R14=R0;                       /* SAVE ENTRY ADDR    Y02008* 03030000
         LR    @E,@0                                              0133  03040000
*           R13=ADDR(IOSGENTBL);          /* IOS SAVE/WORK AREA Y02008* 03050000
         LA    @D,40(0,@2)                                        0134  03060000
*           R15=ADDR(ERR004);             /* RET POINT IN CODE  Y02008* 03070000
         LA    @F,ERR004                                          0135  03080000
*           R1=ADDR(CC3PLIST);            /* ADDRESS PARMLIST   Y02008* 03090000
         LA    @1,CC3PLIST                                        0136  03100000
*           GEN(BALR R14,R15);            /* GO TO IECVIOPM     Y02008* 03110000
         BALR R14,R15                                                   03120000
         DS    0H                                                       03130000
*                                                                       03140000
* ERR004:                                                               03150000
*           R1=R3;                        /* RESTORE IOSB ADDR  Y02008* 03160000
ERR004   LR    @1,@3                                              0138  03170000
*           RELEASE (R0,R13,R14);         /* FREE REGS FOR CMPLRY02008* 03180000
*           IF R15¬=0                     /* IF NO PATHS AVAIL  Y02008* 03190000
*            THEN                         /* FOR I/O, THEN PERM Y02008* 03200000
         LTR   @F,@F                                              0140  03210000
*             GO TO PERR;                 /* ERROR ON REI LINE  Y02008* 03220000
         BC    07,PERR                                            0141  03230000
*           GO TO RETRY;                  /* RETRY EVENT        Y02008* 03240000
         BC    15,RETRY                                           0142  03250000
*          END;                           /* END CC=3 CODE.     Y02008* 03260000
*                                                                       03270000
* /*      THIS SECTION CHECKS FOR CHANNEL DATA CHECK (CDC). IF        * 03280000
* /*      FOUND RETRYS THE CHANNEL PROGRAM THREE TIMES                * 03290000
*                                                                  /* * 03300000
*                                                                  /* * 03310000
*         IF CDC = '1'B THEN                 /*CHANNEL DATA CHECK ?   * 03320000
@9F3     TM    25(@3),B'00001000'                                 0144  03330000
*              GO TO ERRORA3X;               /*IF POS THEN BRANCH     * 03340000
         BC    01,ERRORA3X                                        0145  03350000
* /*      THIS SECTION TESTS FOR UNIT CHECK. IF UNIT CHECK (UCK) IS   * 03360000
* /*      INDICATED THEN CHECK FOR EQUIPMENT CHECK (ECK), LOST        * 03370000
* /*      DATA (LDA), TIME OUT (TOT), INTERVENTION REQUIRED (IRD),    * 03380000
* /*      BUS OUT CHECK (BOC), DATA CHECK (DCK), OVERRUN (OVR),       * 03390000
* /*      OR COMMAND REJECT (CRT). IF NONE ARE INDICATED THEN A       * 03400000
* /*      "SHOULD NOT OCCUR" (SNO) TYPE OF ERROR EXISTS               * 03410000
*                                                                  /* * 03420000
*         IF UCK = '0'B THEN                 /*UNIT CHECK ?           * 03430000
         TM    24(@3),B'00000010'                                 0146  03440000
*           GOTO LOADNEXT;               /* LOAD NEXT MODULE          * 03450000
         BC    08,LOADNEXT                                        0147  03460000
* /*      THIS SECTION TESTS FOR EQUIPMENT CHECK (ECK) IF UNIT        * 03470000
* /*      CHECK (UCK) HAS BEEN INDICATED. DEPENDING UPON THE          * 03480000
* /*      CURRENT CCW RECOVERY PROCEDURES ARE DEFINED                 * 03490000
*                                                                  /* * 03500000
*         IF ECK = '0'B THEN                 /*EQUIPMENT CHECK ?      * 03510000
         L     @2,52(0,@3)                                        0148  03520000
         TM    32(@2),B'00010000'                                 0148  03530000
*              GO TO LOSTDATA;               /*IF NEGATIVE BRANCH     * 03540000
         BC    08,LOSTDATA                                        0149  03550000
*                                            /*    TO LOSTDATA        * 03560000
*         IF COCO='27'X                  /* IF ENABLE COMMAND         * 03570000
*               | COCO='2F'X THEN        /* OR DISABLE COMMAND        * 03580000
         CLI   0(@7),X'27'                                        0150  03590000
         BC    08,@9F2                                            0150  03600000
         CLI   0(@7),X'2F'                                        0150  03610000
         BC    07,@9F1                                            0150  03620000
*               GOTO ERRORA3X;           /* RETRY 3 TIMES             * 03630000
         BC    08,ERRORA3X                                        0151  03640000
*                                                                  /* * 03650000
*         GO TO ERRORSNO;                    /*SHOULD NOT OCCUR       * 03660000
         BC    15,ERRORSNO                                        0152  03670000
* /*      THIS SECTION TESTS FOR LOST DATA CHECK (LDA) IF UNIT        * 03680000
* /*      CHECK (UCK) HAS BEEN INDICATED. DEPENDING UPON THE          * 03690000
* /*      CURRENT CCW AND COMMAND CHAINING RECOVERY PROCEDURES        * 03700000
* /*      ARE DEFINED                                                 * 03710000
*                                                                  /* * 03720000
* LOSTDATA:                                                             03730000
*                                                                  /* * 03740000
*         IF LDA = '0'B THEN                 /*LOST DATA ?            * 03750000
LOSTDATA L     @2,52(0,@3)                                        0153  03760000
         TM    32(@2),B'00000010'                                 0153  03770000
*              GO TO TIMEOUT;                /*IF NEGATIVE BRANCH     * 03780000
         BC    08,TIMEOUT                                         0154  03790000
*                                            /*    TO TIME OUT        * 03800000
*         IF COCO ¬= '02'X THEN          /* IF NOT A READ             * 03810000
         CLI   0(@7),X'02'                                        0155  03820000
*               GOTO ERRORSNO;           /* SHOULD NOT OCCUR          * 03830000
         BC    07,ERRORSNO                                        0156  03840000
*                                                                  /* * 03850000
* NEXTEST0:                                                             03860000
*                                                                  /* * 03870000
*         IF IOSCSWRC ¬= '0000'X THEN  /* RESIDUAL COUNT = 0 ?  Y02008* 03880000
NEXTEST0 CLC   26(2,@3),@X18                                      0157  03890000
*              GO TO NEXTEST1;               /*IF NEGATIVE BRANCH     * 03900000
         BC    07,NEXTEST1                                        0158  03910000
*                                            /*    TO NEXT TEST       * 03920000
*         IF R='1'B THEN                 /* READ SEQUENCE             * 03930000
         L     @2,52(0,@3)                                        0159  03940000
         TM    12(@2),B'10000000'                                 0159  03950000
*               GOTO ERRORSRR;                                          03960000
         BC    01,ERRORSRR                                        0160  03970000
*                                                                       03980000
*         IF W='1'B THEN                 /* WRITE SEQUENCE            * 03990000
         TM    12(@2),B'01000000'                                 0161  04000000
*               GOTO ERRORIWC;                                          04010000
         BC    01,ERRORIWC                                        0162  04020000
*                                                                       04030000
*         GOTO ERRORSNO;                                                04040000
         BC    15,ERRORSNO                                        0163  04050000
*                                                                  /* * 04060000
* NEXTEST1:                                                             04070000
*         IF IOSCOD='48'THEN                /*HALT I/O ISSUED ? Y02008* 04080000
NEXTEST1 CLC   13(1,@3),@C19                                      0164  04090000
*              GO TO ERRORRFW;               /*IF POSITIVE BRANCH     * 04100000
         BC    08,ERRORRFW                                        0165  04110000
*                                            /*    TO RECOVERY        * 04120000
*         GOTO ERRORSNO;                                                04130000
         BC    15,ERRORSNO                                        0166  04140000
* /*      THIS SECTION TESTS FOR TIME OUT (TOT) IF UNIT CHECK         * 04150000
* /*      (UCK) HAS BEEN INDICATED. DEPENDING UPON THE CURRENT        * 04160000
* /*      CCW AND COMMAND CHAINING RECOVERY PROCEDURES ARE DEFINED    * 04170000
*                                                                  /* * 04180000
* TIMEOUT:                                                              04190000
*                                                                  /* * 04200000
*         IF TOT = '0'B THEN                 /*TIME OUT ?             * 04210000
TIMEOUT  L     @2,52(0,@3)                                        0167  04220000
         TM    32(@2),B'00000001'                                 0167  04230000
*              GO TO INTEREQD;               /*IF NEGATIVE BRANCH TO  * 04240000
         BC    08,INTEREQD                                        0168  04250000
*                                            /*    INTERVENTION REQ'D * 04260000
*         IF COCO ¬= '02'X THEN          /* IF NOT A READ COMMAND     * 04270000
         CLI   0(@7),X'02'                                        0169  04280000
*               DO;                                                     04290000
*               GOTO ERRORA3X;                                          04300000
         BC    07,ERRORA3X                                        0171  04310000
*               END;                                                    04320000
* TEXTRANS:                                                             04330000
*                                                                  /* * 04340000
*         IF COU = IOSCSWRC THEN         /* CCW RESIDUAL CT=0 ? Y02008* 04350000
@9F0     EQU   *                                                  0173  04360000
TEXTRANS CLC   6(2,@7),26(@3)                                     0173  04370000
         BC    07,@9EF                                            0173  04380000
*         DO;                                                           04390000
*         IOSRST=IOSVST;            /* RESTART CCWS AT 1ST CCW Y02008*/ 04400000
         MVC   72(4,@3),76(@3)                                    0175  04410000
*              GO TO ERRORA3X;               /*IF POSITIVE BRANCH     * 04420000
         BC    15,ERRORA3X                                        0176  04430000
*                                            /*    TO RECOVERY        * 04440000
*         END;                                                          04450000
*                                                                       04460000
*         IF W='1'B THEN                 /* WRITE SEQUENCE            * 04470000
@9EF     L     @2,52(0,@3)                                        0178  04480000
         TM    12(@2),B'01000000'                                 0178  04490000
*               GOTO ERRORSNO;           /* SHOULD NOT ICCUR          * 04500000
         BC    01,ERRORSNO                                        0179  04510000
*                                                                       04520000
*         GO TO ERRORIRR;                    /*BRANCH TO RECOVERY     * 04530000
         BC    15,ERRORIRR                                        0180  04540000
* /*      THIS SECTION TESTS FOR INTERVENTION REQUIRED (IRD) IF       * 04550000
* /*      UNIT CHECK (UCK) HAS BEEN INDICATED. RECOVERY PROCEDURES    * 04560000
* /*      ARE DEFINED                                                 * 04570000
*                                                                  /* * 04580000
* INTEREQD:                                                             04590000
*         IF IRD = '1'B THEN                 /*INTERVENTION REQUIRED ?* 04600000
INTEREQD L     @2,52(0,@3)                                        0181  04610000
         TM    32(@2),B'01000000'                                 0181  04620000
*              GO TO ERRORECR;               /*IF POSITIVE BRANCH     * 04630000
         BC    01,ERRORECR                                        0182  04640000
*                                            /*    TO RECOVERY        * 04650000
* /*      THIS SECTION TESTS FOR BUS OUT CHECK (BOC) IF UNIT CHECK    * 04660000
* /*      (UCK) HAS BEEN INDICATED. DEPENDING UPON THE NEXT CCW       * 04670000
* /*      TO BE EXECUTED THE RECOVERY PROCEDURES ARE DEFINED          * 04680000
*                                                                  /* * 04690000
*         IF BOC = '0'B THEN                 /*BUS OUT CHECK ?        * 04700000
         TM    32(@2),B'00100000'                                 0183  04710000
*           GOTO LOADNEXT;               /* LOAD NEXT MODULE          * 04720000
         BC    08,LOADNEXT                                        0184  04730000
*  SRCHRD:                                                              04740000
*         IF COMCHN='0'B THEN                                           04750000
SRCHRD   TM    4(@7),B'01000000'                                  0185  04760000
*         GOTO RETRY;                                                   04770000
         BC    08,RETRY                                           0186  04780000
*         IF COCO='02'X THEN                                            04790000
         CLI   0(@7),X'02'                                        0187  04800000
*         GOTO RETRY;                                                   04810000
         BC    08,RETRY                                           0188  04820000
*         R7=R7+8;                                                      04830000
         LA    @7,8(0,@7)                                         0189  04840000
*         IOSRST=R7;                                    /*     Y02008*/ 04850000
         ST    @7,72(0,@3)                                        0190  04860000
*         GOTO SRCHRD;                                                  04870000
         BC    15,SRCHRD                                          0191  04880000
*                                                                       04890000
*  LOADNEXT:                                                            04900000
*                                                                       04910000
* /*      THIS SECTION IS USED TO TEST FOR INITIAL SELECTION          * 04920000
* /*      ERRORS. AN SIO CONDITION CODE OF '01' INDICATES             * 04930000
* /*      STATUS STORED. ANY STATUS AND SENSE INFORMATION OTHER       * 04940000
* /*      THAN UNIT CHECK (UCK) WITH SENSE INDICATING BUS OUT         * 04950000
* /*      CHECK (BOC) OR COMMAND REJECT (CRT) IS TREATED AS A         * 04960000
* /*      "SHOULD NOT OCCUR" (SNO) TYPE ERROR CONDITION               * 04970000
*                                                                  /* * 04980000
*         IF IOSCC¬='50'X THEN           /* DOES SIO CODE='01'  Y02008* 04990000
LOADNEXT CLI   20(@3),X'50'                                       0192  05000000
*           GOTO ERP2001;                /* NO. BRANCH TO NEXT SECTION* 05010000
         BC    07,ERP2001                                         0193  05020000
*                                                                  /* * 05030000
*         IF UCK = '0'B THEN                 /*UNIT CHECK ?           * 05040000
         TM    24(@3),B'00000010'                                 0194  05050000
*              GO TO ERRORSNO;               /*IF NEG THEN BRANCH     * 05060000
         BC    08,ERRORSNO                                        0195  05070000
*                                                                  /* * 05080000
*         IF BOC = '1'B THEN                 /*BUS OUT CHECK ?        * 05090000
         L     @2,52(0,@3)                                        0196  05100000
         TM    32(@2),B'00100000'                                 0196  05110000
*              GO TO ERRORA2X;               /*IF POS THEN BRANCH     * 05120000
         BC    01,ERRORA2X                                        0197  05130000
*                                                                  /* * 05140000
*         IF CRT = '1'B THEN                 /*COMMAND REJECT ?       * 05150000
         TM    32(@2),B'10000000'                                 0198  05160000
*              GO TO ERRORA3X;               /*IF POS THEN BRANCH     * 05170000
         BC    01,ERRORA3X                                        0199  05180000
*                                                                  /* * 05190000
*         GO TO ERRORSNO;                    /*SHOULD NOT OCCUR       * 05200000
         BC    15,ERRORSNO                                        0200  05210000
*  ERP2001:                                                             05220000
*         IF UCK='0'B THEN                                              05230000
ERP2001  TM    24(@3),B'00000010'                                 0201  05240000
*           GOTO SECTION4;                                              05250000
         BC    08,SECTION4                                        0202  05260000
*                                                                       05270000
* /*      THIS SECTION TESTS FOR DATA CHECK (DCK) IF UNIT CHECK       * 05280000
* /*      (UCK) HAS BEEN INDICATED. DEPENDING UPON THE PRESENT        * 05290000
* /*      CCW BEING EXECUTED AND THE CHAINED COMMAND IF ANY           * 05300000
*                                                                  /* * 05310000
* DATCHECK:                                                             05320000
*                                                                  /* * 05330000
*         IF DCK = '0'B THEN                 /*DATA CHECK ?           * 05340000
DATCHECK L     @2,52(0,@3)                                        0203  05350000
         TM    32(@2),B'00001000'                                 0203  05360000
*              GO TO OVERRUN;                /*IF NEGATIVE BRANCH     * 05370000
         BC    08,OVERRUN                                         0204  05380000
*                                            /*    TO OVER RUN        * 05390000
*         IF COCO = '02'X THEN GOTO TESTNEX2; /* READ COMMAND         * 05400000
         CLI   0(@7),X'02'                                        0205  05410000
         BC    08,TESTNEX2                                        0206  05420000
*         IF COCO='01'X THEN                                            05430000
         CLI   0(@7),X'01'                                        0207  05440000
         BC    07,@9EE                                            0207  05450000
*         DO;                                                           05460000
*                                                                       05470000
*         IF WR='1'B THEN                /* WRITE EOT,READ RESP       * 05480000
         TM    12(@2),B'00100000'                                 0209  05490000
*               GOTO ERRORIWC;                                          05500000
         BC    01,ERRORIWC                                        0210  05510000
*                                                                       05520000
*         GOTO ERRORRFW;                                                05530000
         BC    15,ERRORRFW                                        0211  05540000
*         END;                                                          05550000
*                                                                       05560000
*         GO TO ERRORSNO;                    /*BRANCH TO RECOVERY     * 05570000
*                                                                  /* * 05580000
*                                                                  /* * 05590000
* TESTNEX2:                                                             05600000
*                                                                  /* * 05610000
*         IF R='1'B THEN                 /* READ SEQUENCE             * 05620000
TESTNEX2 L     @2,52(0,@3)                                        0214  05630000
         TM    12(@2),B'10000000'                                 0214  05640000
*               GOTO ERRORIRR;                                          05650000
         BC    01,ERRORIRR                                        0215  05660000
*                                                                       05670000
*         IF WR='1'B THEN                /* WRITE EOT,READ RESP       * 05680000
         TM    12(@2),B'00100000'                                 0216  05690000
*           GOTO ERRORIWC;                                              05700000
         BC    01,ERRORIWC                                        0217  05710000
*                                                                       05720000
*         GOTO ERRORRFW;                                                05730000
         BC    15,ERRORRFW                                        0218  05740000
* /*      THIS SECTION TESTS FOR OVER RUN (OVR) IF UNIT CHECK         * 05750000
* /*      (UCK) HAS BEEN INDICATED. DEPENDING UPON CURRENT CCW        * 05760000
* /*      RECOVERY PROCEDURES ARE DEFINED                             * 05770000
*                                                                  /* * 05780000
* OVERRUN:                                                              05790000
*                                                                  /* * 05800000
*         IF OVR = '0'B THEN             /* OVER RUN ?                * 05810000
OVERRUN  L     @2,52(0,@3)                                        0219  05820000
         TM    32(@2),B'00000100'                                 0219  05830000
*              GO TO COMANREJ;               /*IF NEGATIVE BRANCH     * 05840000
         BC    08,COMANREJ                                        0220  05850000
*                                            /*    TO COMMAND REJECT  * 05860000
*         IF COCO ='CA'X                 /* INHIBIT COMMAND           * 05870000
*               | COCO='02'X THEN        /* READ COMMAND              * 05880000
         CLI   0(@7),X'CA'                                        0221  05890000
         BC    08,@9ED                                            0221  05900000
         CLI   0(@7),X'02'                                        0221  05910000
         BC    07,@9EC                                            0221  05920000
*               GOTO ERRORIRR;                                          05930000
         BC    08,ERRORIRR                                        0222  05940000
*                                                                  /* * 05950000
*         GO TO ERRORSNO;                    /*SHOULD NOT OCCUR       * 05960000
         BC    15,ERRORSNO                                        0223  05970000
* /*      THIS SECTION TESTS FOR COMMAND REJECT (CRT) IF UNIT         * 05980000
* /*      CHECK (UCK) HAS BEEN INDICATED. ERROR RECOVERY              * 05990000
* /*      PROCEDURES ARE DEFINED                                      * 06000000
*                                                                  /* * 06010000
* COMANREJ:                                                             06020000
*                                                                  /* * 06030000
*         IF CRT = '1'B THEN                 /*COMMAND REJECT         * 06040000
COMANREJ L     @2,52(0,@3)                                        0224  06050000
         TM    32(@2),B'10000000'                                 0224  06060000
*               GOTO ERRORA2X;                                          06070000
         BC    01,ERRORA2X                                        0225  06080000
* /*      THIS SECTION TEST FOR THE CHANNEL STATUS ERRORS PROGRAM     * 06090000
* /*      CHECK, PROTECTION CHECK, OR CHAINING CHECK. ERROR           * 06100000
* /*      RECOVERY PROCEDURES ARE DEFINED                             * 06110000
*                                                                  /* * 06120000
*  SECTION4:                                                            06130000
*         IF PCK = '1'B                      /*PROGRAM CHECK ?        * 06140000
*             | PRK = '1'B                   /*PROTECTION CHECK ?     * 06150000
*                | CHC = '1'B THEN           /*CHAINING CHECK ?       * 06160000
SECTION4 TM    25(@3),B'00100000'                                 0226  06170000
         BC    01,@9EB                                            0226  06180000
         TM    25(@3),B'00010000'                                 0226  06190000
         BC    01,@9EA                                            0226  06200000
         TM    25(@3),B'00000001'                                 0226  06210000
         BC    12,@9E9                                            0226  06220000
*                    GO TO ERRORA3X;         /*IF POSITIVE BRANCH     * 06230000
         BC    03,ERRORA3X                                        0227  06240000
*                                            /*    TO RECOVERY        * 06250000
* /*      THIS SECTION TESTS FOR THE CHANNEL STATUS ERROR UNIT        * 06260000
* /*      EXCEPTION (UEX). DEPENDING UPON THE PRESENT CCW AND         * 06270000
* /*      PRESENT COMMAND CHAIN, IF ANY, RECOVERY PROCEDURES ARE      * 06280000
* /*      DEFINED                                                     * 06290000
*                                                                  /* * 06300000
*         IF UEX = '0'B THEN                 /*UNIT EXCEPTION ?       * 06310000
@9E9     TM    24(@3),B'00000001'                                 0228  06320000
*               GOTO CKPREP;             /* CHECK IF PREPARE COMMAND  * 06330000
         BC    08,CKPREP                                          0229  06340000
*                                                                       06350000
*         IF COCO='02'X THEN             /* READ COMMAND              * 06360000
         CLI   0(@7),X'02'                                        0230  06370000
*               GOTO CHECKER0;                                          06380000
         BC    08,CHECKER0                                        0231  06390000
*                                                                       06400000
*         IF COCO='01'X THEN             /* WRITE COMMAND             * 06410000
         CLI   0(@7),X'01'                                        0232  06420000
*               GOTO ERRORRFW;                                          06430000
         BC    08,ERRORRFW                                        0233  06440000
*                                                                  /* * 06450000
*         GO TO NOERITOK;                    /*NO ERROR CONDITION  -  * 06460000
         BC    15,NOERITOK                                        0234  06470000
*                                            /*    RETURN             * 06480000
* CHECKER0:                                                             06490000
*                                                                  /* * 06500000
*         IF R='1'B THEN                 /* READ SEQUENCE             * 06510000
CHECKER0 L     @2,52(0,@3)                                        0235  06520000
         TM    12(@2),B'10000000'                                 0235  06530000
*               GOTO ERRORIWC;                                /*Y02008* 06540000
         BC    01,ERRORIWC                                        0236  06550000
*                                                                       06560000
*         IF W='1'B THEN                 /* WRITE SEQUENCE            * 06570000
         TM    12(@2),B'01000000'                                 0237  06580000
         BC    12,@9E8                                            0237  06590000
*           DO;                                                         06600000
*           IF WR='1'B THEN              /* WRITE EOT, READ RESP M4502* 06610000
         TM    12(@2),B'00100000'                                 0239  06620000
*               GOTO NOERITOK;           /* NO ERROR CONDITION   M4502* 06630000
         BC    01,NOERITOK                                        0240  06640000
*                                                                       06650000
*           IOSRST=IOSVST;               /* RESTART = START ADDR Y02008 06660000
         MVC   72(4,@3),76(@3)                                    0241  06670000
*           GOTO RETRY1;                                                06680000
         BC    15,RETRY1                                          0242  06690000
*                                                                       06700000
*           END;                                                        06710000
*                                                                       06720000
*         GO TO NOERITOK;                    /*NO ERROR CONDITION  -  * 06730000
*                                            /*    RETURN             * 06740000
*  CKPREP:                                                              06750000
*         IF COCO='06'X THEN             /* PREPARE COMMAND           * 06760000
CKPREP   CLI   0(@7),X'06'                                        0245  06770000
*               GOTO ERRORRFW;                                          06780000
         BC    08,ERRORRFW                                        0246  06790000
* /*      THIS SECTION TESTS FOR INCORRECT LENGTH (ILH) BUT           * 06800000
* /*      THIS CONDITION IS NOT TREATED AS AN ERROR CONDITION         * 06810000
* INCORLGH:                                                             06820000
*         IF ILH = '1'B THEN                 /*INCORRECT LENGTH ?     * 06830000
INCORLGH TM    25(@3),B'01000000'                                 0247  06840000
*              GO TO NOERITOK;               /*NO ERROR CONDITION  -  * 06850000
         BC    01,NOERITOK                                        0248  06860000
*                                            /*    RETURN             * 06870000
* /*      THIS SECTION TESTS FOR BUSY (BUS), ATTENTION (ATT),         * 06880000
* /*      CONTROL UNIT END (CUE), STATUS MODIFIER (STM) AND           * 06890000
* /*      BRANCHES TO RECOVERY FOR THREE RETRYS                       * 06900000
*                                                                  /* * 06910000
*         IF BUS = '1'B THEN                 /*BUSY ?                 * 06920000
         TM    24(@3),B'00010000'                                 0249  06930000
*              GO TO ERRORA3X;               /*IF POSITIVE BRANCH     * 06940000
         BC    01,ERRORA3X                                        0250  06950000
*                                            /*    TO RECOVERY        * 06960000
*         IF ATT = '1'B THEN                 /*ATTENTION ?            * 06970000
         TM    24(@3),B'10000000'                                 0251  06980000
*              GO TO ERRORA3X;               /*IF POSITIVE BRANCH     * 06990000
         BC    01,ERRORA3X                                        0252  07000000
*                                            /*    TO RECOVERY        * 07010000
*         IF CUE = '1'B THEN                 /*CONTROL UNIT END ?     * 07020000
         TM    24(@3),B'00100000'                                 0253  07030000
*              GO TO ERRORA3X;               /*IF POSITIVE BRANCH     * 07040000
         BC    01,ERRORA3X                                        0254  07050000
*                                            /*    TO RECOVERY        * 07060000
*         IF STM = '1'B THEN                 /*STATUS MODIFIER ?      * 07070000
         TM    24(@3),B'01000000'                                 0255  07080000
*              GO TO ERRORA3X;               /*IF POSITIVE BRANCH     * 07090000
         BC    01,ERRORA3X                                        0256  07100000
*                                            /*    TO RECOVERY        * 07110000
*                                                                       07120000
*                                                                       07130000
*         GOTO NOERITOK;                 /*                      M4502* 07140000
         BC    15,NOERITOK                                        0257  07150000
*                                                                       07160000
*         RESTRICT (R4);                                                07170000
*                                                                       07180000
*  ERRORA2X:                                                            07190000
*                                                                       07200000
*         IF FECT ='03'X THEN            /* IS THIS A PERMANENT ERROR * 07210000
ERRORA2X L     @2,52(0,@3)                                        0259  07220000
         CLI   10(@2),X'03'                                       0259  07230000
*            GOTO PERR;                                                 07240000
         BC    08,PERR                                            0260  07250000
*                                                                       07260000
*         ELSE GOTO RETRY;               /* RETRY CHAN PROGRAM        * 07270000
         BC    15,RETRY                                           0261  07280000
*                                                                       07290000
*                                                                       07300000
*  ERRORA3X:                                                            07310000
*                                                                       07320000
*         IF FECT ='04'X THEN            /* IS THIS A PERM ERROR ?    * 07330000
ERRORA3X L     @2,52(0,@3)                                        0262  07340000
         CLI   10(@2),X'04'                                       0262  07350000
*            GOTO PERR;                  /* GO SET UP FOR RETURN      * 07360000
         BC    08,PERR                                            0263  07370000
*                                                                       07380000
*         ELSE                                                          07390000
*            GOTO RETRY;                 /* RETRY CHAN PROGRAM        * 07400000
         BC    15,RETRY                                           0264  07410000
*                                                                       07420000
*                                                                       07430000
*  ERRORRFW:                                                            07440000
*                                                                       07450000
*         CCWA(1:8)=CCWRDSKP(1:8);      /* MOVE IN READ SKIP CCW      * 07460000
ERRORRFW MVC   0(8,@9),CCWRDSKP                                   0265  07470000
*         CCWADAT=DAT1;                                                 07480000
         L     @2,52(0,@3)                                        0266  07490000
         MVC   1(3,@9),89(@2)                                     0266  07500000
*         CCWB(1:8)=CCWWREOT(1:8);      /* MOVE IN WRITE EOT          * 07510000
         MVC   8(8,@9),CCWWREOT                                   0267  07520000
*         CCWBDAT=EOT;                                                  07530000
         MVC   9(3,@9),81(@2)                                     0268  07540000
*         CCWC(1:8)=CCWRDEOT(1:8);      /* MOVE IN READ EOT           * 07550000
         MVC   16(8,@9),CCWRDEOT                                  0269  07560000
*         CCWCDAT=DAT1;                                                 07570000
         MVC   17(3,@9),89(@2)                                    0270  07580000
*         DISP=25;                      /* POINT TO NEXT AVAILABLE SP * 07590000
         LA    @4,25                                              0271  07600000
*         GOTO MOVECHN;                  /* MOVE IN CHAIN & RETRY     * 07610000
         BC    15,MOVECHN                                         0272  07620000
*                                                                       07630000
*                                                                       07640000
*  ERRORSRR:                                                            07650000
*         CCWA(1:8)=CCWRDSKP(1:8);       /* MOVE IN READ SKIP         * 07660000
ERRORSRR MVC   0(8,@9),CCWRDSKP                                   0273  07670000
*         CCWADAT=DAT1;                                                 07680000
         L     @2,52(0,@3)                                        0274  07690000
         MVC   1(3,@9),89(@2)                                     0274  07700000
*         CCWB(1:8)=CCWWRNEG(1:8);      /* MOVE IN WRITE NEGATIVE     * 07710000
         MVC   8(8,@9),CCWWRNEG                                   0275  07720000
*         CCWBDAT=NEG;                                                  07730000
         MVC   9(3,@9),85(@2)                                     0276  07740000
*         R5=IOSVST;                    /* USER CHANNEL PROGRAM  Y0200* 07750000
         L     @5,76(0,@3)                                        0277  07760000
*                                                                       07770000
*    SRR1:IF OP1 = '02'X THEN DO;       /* SEARCH CHAIN FOR A READ CCW* 07780000
SRR1     CLI   0(@5),X'02'                                        0278  07790000
         BC    07,@9E7                                            0278  07800000
*         CCWC(1:8)=CCWCHAIN(1:8);      /* THEN MOVE IT IN            * 07810000
         MVC   16(8,@9),0(@5)                                     0280  07820000
*         IOSRST=R9;                    /* RESTART CHAN PROG    Y02008* 07830000
         ST    @9,72(0,@3)                                        0281  07840000
*         GOTO RETRY;                   /* RETRY                      * 07850000
         BC    15,RETRY                                           0282  07860000
*         END;                                                          07870000
*                                                                       07880000
*         R5=R5+8;                                                      07890000
@9E7     AH    @5,@D3                                             0284  07900000
*                                                                       07910000
*         GOTO  SRR1;                   /* LOOP                       * 07920000
         BC    15,SRR1                                            0285  07930000
*                                                                       07940000
*                                                                       07950000
*  ERRORIWC:                                                            07960000
*         IOSRST=IOSVST;               /* RETRY ADDR=START ADDR Y02008* 07970000
ERRORIWC MVC   72(4,@3),76(@3)                                    0286  07980000
*         GOTO RETRY;                   /* RETRY IT                   * 07990000
         BC    15,RETRY                                           0287  08000000
*                                                                       08010000
*                                                                       08020000
*  ERRORIRR:                                                            08030000
*         CCWA(1:8)=CCWWRNEG(1:8);      /* MOVE WRITE NEGATIVE IN WORK* 08040000
ERRORIRR MVC   0(8,@9),CCWWRNEG                                   0288  08050000
*         CCWADAT=NEG;                                                  08060000
         L     @2,52(0,@3)                                        0289  08070000
         MVC   1(3,@9),85(@2)                                     0289  08080000
*         R5=IOSVST;                 /* POINT TO USERS CCW CHAIN Y02008 08090000
         L     @5,76(0,@3)                                        0290  08100000
*                                                                       08110000
*    IRR1:IF OP1 = '02'X THEN DO;       /* SEARCH FOR A READ CCW      * 08120000
IRR1     CLI   0(@5),X'02'                                        0291  08130000
         BC    07,@9E6                                            0291  08140000
*         CCWB(1:8)=CCWCHAIN(1:8);      /* WHEN FOUND MOVE IN WORK AR * 08150000
         MVC   8(8,@9),0(@5)                                      0293  08160000
*         IOSRST=R9;                                          /*Y02008* 08170000
         ST    @9,72(0,@3)                                        0294  08180000
*         GOTO RETRY;                   /* RETRY IT                   * 08190000
         BC    15,RETRY                                           0295  08200000
*         END;                                                          08210000
*                                                                       08220000
*           ELSE;                                                       08230000
@9E6     EQU   *                                                  0297  08240000
*         R5=R5+8;                                                      08250000
@9E5     AH    @5,@D3                                             0298  08260000
*         GOTO IRR1;                    /* LOOP                       * 08270000
         BC    15,IRR1                                            0299  08280000
*                                                                       08290000
*                                                                       08300000
*  ERRORECR:                                                            08310000
*         CCWA(1:8)=CCWENABL(1:8);      /* MOVE ENABLE CCW IN WORKAREA* 08320000
ERRORECR MVC   0(8,@9),CCWENABL                                   0300  08330000
*         DISP=9;                       /* POINT TO NEXT SPACE IN WORK* 08340000
         LA    @4,9                                               0301  08350000
*         GOTO  MOVECHN;                /* GO MOVE IN USERS CCW CHAIN * 08360000
         BC    15,MOVECHN                                         0302  08370000
*                                                                       08380000
*                                                                       08390000
* ERRORSNO:                                                             08400000
*         IF FECT ='04'X THEN            /* IS THIS A PERM ERROR ?    * 08410000
ERRORSNO L     @2,52(0,@3)                                        0303  08420000
         CLI   10(@2),X'04'                                       0303  08430000
*            GOTO PERR;                  /* GO SET UP FOR ERR RETURN  * 08440000
         BC    08,PERR                                            0304  08450000
*         ELSE GOTO RETRY;               /* SET UP FOR CHAN PROG RETRY* 08460000
         BC    15,RETRY                                           0305  08470000
*                                                                       08480000
*  NOERITOK:                                                            08490000
*                                                                       08500000
*         R2=IOSRST;                                                    08510000
NOERITOK L     @2,72(0,@3)                                        0306  08520000
*         GEN;                                                          08530000
         LRA   2,0(0,2)                                                 08540000
         BNZ   PERR                                                     08550000
         DS    0H                                                       08560000
*         IOSRST=R2;                                                    08570000
         ST    @2,72(0,@3)                                        0308  08580000
*                                                                       08590000
*         SENSE='0000'X;                 /* ZERO SENSE IN ERPWK Y02008* 08600000
         L     @2,52(0,@3)                                        0309  08610000
         MVC   32(2,@2),@X18                                      0309  08620000
*         ERRFLGS2='00'X;                /* SERO FLAGS IN ERPWK Y02008* 08630000
         MVI   12(@2),X'00'                                       0310  08640000
*         SRS='0'B;                                                     08650000
         NI    11(@2),B'00111111'                                 0311  08660000
*         IOBENT='0'B;                                                  08670000
*         FECT='00'X;                                                   08680000
         MVI   10(@2),X'00'                                       0313  08690000
*         IOSERR ='0'B;                  /* SET IOBERR TO ZERO Y02008*/ 08700000
         NI    0(@3),B'11011011'                                  0314  08710000
*         IOSEX='0'B;                 /* SET IOBEX BIT TO ZERO Y02008*/ 08720000
*         IOSTATUS='0C00'X;          /* SET CSWFLAGS TO NORMAL Y02008*/ 08730000
         MVC   24(2,@3),@X23                                      0316  08740000
*         GEN(SVC 15);                                                  08750000
         SVC 15                                                         08760000
         DS    0H                                                       08770000
*         GEN(SVC 3);                    /* RETURN TO IOS             * 08780000
         SVC 3                                                          08790000
         DS    0H                                                       08800000
*                                                                       08810000
*  /*THIS PROCEDURE MOVES CCWS FROM USERS "HAIN TO ERP WORK AREA      * 08820000
*                                                                       08830000
*  MOVECHN:                                                             08840000
*         R5=IOSVST;                    /* USERS CCW START ADDR Y02008* 08850000
MOVECHN  L     @5,76(0,@3)                                        0319  08860000
*    NEXT:CCWWORK(DISP:DISP+7)=CCWCHAIN(1:8); /* MOVE IN CCW          * 08870000
NEXT     LR    @2,@4                                              0320  08880000
         LA    @A,0(@2,@9)                                        0320  08890000
         BCTR  @A,0                                               0320  08900000
         MVC   0(8,@A),0(@5)                                      0320  08910000
*                                                                       08920000
*         IF CHN1 = '1'B THEN DO;             /* IS IT CHAINED? IF YES* 08930000
         TM    4(@5),B'01000000'                                  0321  08940000
         BC    12,@9E4                                            0321  08950000
*         R5=R5+8;                            /* SET UP TO MOVE IN    * 08960000
         AH    @5,@D3                                             0323  08970000
*         DISP=DISP+8;                        /* NEXT CCW             * 08980000
         AH    @4,@D3                                             0324  08990000
*         GOTO NEXT;                          /* GO DO IT             * 09000000
         BC    15,NEXT                                            0325  09010000
*         END;                                                          09020000
*                                                                       09030000
*         IOSRST=R9;                  /* IOSRST ADDR = NEW CCWS Y02008* 09040000
@9E4     ST    @9,72(0,@3)                                        0327  09050000
*                                                                       09060000
*                                                                       09070000
*  RETRY:                                                               09080000
*         IF FECT='04'X THEN                                            09090000
RETRY    L     @2,52(0,@3)                                        0328  09100000
         CLI   10(@2),X'04'                                       0328  09110000
*           GOTO PERR;                                                  09120000
         BC    08,PERR                                            0329  09130000
*                                                                       09140000
*         FECT=FECT+1;                   /* UPDATE IOB ERROR COUNT    * 09150000
         LA    @F,1                                               0330  09160000
         SR    @0,@0                                              0330  09170000
         IC    @0,10(0,@2)                                        0330  09180000
         AR    @F,@0                                              0330  09190000
         STC   @F,10(0,@2)                                        0330  09200000
*                                                                       09210000
*  RETRY1:                                                              09220000
*         RESTRICT(R2);                                                 09230000
*                                                                       09240000
*         R2=IOSRST;                     /* PUT REAL ADD IN REG Y02008* 09250000
RETRY1   L     @2,72(0,@3)                                        0332  09260000
*                                                                       09270000
*         GEN;                                                          09280000
         LRA   2,0(0,2)                 GET REAL ADR OF VIRT CP Y02008  09290000
         BNZ   PERR                     PERM ERR IF XLATE FAIL Y02008   09300000
         DS    0H                                                       09310000
*                                                                       09320000
*         IOSRST=R2;                     /* PUT REAL AD IN IOSB Y02008* 09330000
         ST    @2,72(0,@3)                                        0334  09340000
*                                                                       09350000
*                                                                       09360000
*         ERRFLGS2='00'X;                /* ZERO INTERNAL FLAGS Y02008* 09370000
         L     @8,52(0,@3)                                        0335  09380000
         MVI   12(@8),X'00'                                       0335  09390000
*         GEN(SVC 15);                                                  09400000
         SVC 15                                                         09410000
         DS    0H                                                       09420000
*         GEN(SVC 3);                    /* RETURN TO IOS             * 09430000
         SVC 3                                                          09440000
         DS    0H                                                       09450000
*                                                                       09460000
*                                                                       09470000
*  PERR:                                                                09480000
*                                                                       09490000
*         R2=IOSRST;                                                    09500000
PERR     L     @2,72(0,@3)                                        0338  09510000
*         GEN;                                                          09520000
         LRA   2,0(0,2)                                                 09530000
         BNZ   PERR                                                     09540000
         DS    0H                                                       09550000
*         IOSRST=R2;                                                    09560000
         ST    @2,72(0,@3)                                        0340  09570000
*                                                                       09580000
*                                                                       09590000
*         IOSERR='0'B;                   /* ZERO IOBERR BIT     Y02008* 09600000
         NI    0(@3),B'11011111'                                  0341  09610000
*         ERRFLGS2='00'X;                /* ZERO INTERNAL FLAGS Y02008* 09620000
         L     @8,52(0,@3)                                        0342  09630000
         MVI   12(@8),X'00'                                       0342  09640000
*         GEN(SVC 15);                                                  09650000
         SVC 15                                                         09660000
         DS    0H                                                       09670000
*         GEN(SVC 3);                    /* RETURN TO IOS             * 09680000
         SVC 3                                                          09690000
         DS    0H                                                       09700000
*                                                                       09710000
*         RETURN;                                                       09720000
*  END;                                                                 09730000
@EL01    BCR   15,@E                                              0346  09740000
@DATA1   EQU   *                                                        09750000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           09760000
@1       EQU   01                                                       09770000
@2       EQU   02                                                       09780000
@3       EQU   03                                                       09790000
@4       EQU   04                                                       09800000
@5       EQU   05                                                       09810000
@6       EQU   06                                                       09820000
@7       EQU   07                                                       09830000
@8       EQU   08                                                       09840000
@9       EQU   09                                                       09850000
@A       EQU   10                                                       09860000
@B       EQU   11                                                       09870000
@C       EQU   12                                                       09880000
@D       EQU   13                                                       09890000
@E       EQU   14                                                       09900000
@F       EQU   15                                                       09910000
@D1      DC    F'0'                                                     09920000
@D2      DC    H'-8'                                                    09930000
@D3      DC    H'8'                                                     09940000
         DS    0F                                                       09950000
@SIZ001  DC    AL1(&SPN)                                                09960000
         DC    AL3(@DATEND-@DATD)                                       09970000
         DS    0F                                                       09980000
@X18     DC    X'0000'                                                  09990000
@C19     DC    C'48'                                                    10000000
@X23     DC    X'0C00'                                                  10010000
         DS    0D                                                       10020000
@DATA    EQU   *                                                        10030000
P        EQU   00000000            FULLWORD INTEGER                     10040000
R0       EQU   00000000            FULLWORD POINTER REGISTER            10050000
R1       EQU   00000001            FULLWORD POINTER REGISTER            10060000
R2       EQU   00000002            FULLWORD POINTER REGISTER            10070000
R3       EQU   00000003            FULLWORD POINTER REGISTER            10080000
R4       EQU   00000004            FULLWORD INTEGER REGISTER            10090000
R5       EQU   00000005            FULLWORD POINTER REGISTER            10100000
R6       EQU   00000006            FULLWORD POINTER REGISTER            10110000
R7       EQU   00000007            3  BYTE  POINTER REGISTER            10120000
R8       EQU   00000008            FULLWORD POINTER REGISTER            10130000
R9       EQU   00000009            3  BYTE  POINTER REGISTER            10140000
R10      EQU   00000010            FULLWORD INTEGER REGISTER            10150000
R11      EQU   00000011            FULLWORD INTEGER REGISTER            10160000
R12      EQU   00000012            FULLWORD INTEGER REGISTER            10170000
R13      EQU   00000013            FULLWORD INTEGER REGISTER            10180000
R14      EQU   00000014            FULLWORD INTEGER REGISTER            10190000
R15      EQU   00000015            FULLWORD INTEGER REGISTER            10200000
DISP     EQU   00000004            FULLWORD INTEGER REGISTER            10210000
IOSBPTR  EQU   00000003            FULLWORD POINTER REGISTER            10220000
IOSBCB   EQU   00000000            91 BYTE(S) ON WORD                   10230000
IOSFLA   EQU   IOSBCB+00000000     1 BYTE(S)                            10240000
A00000   EQU   IOSBCB+00000000     2 BIT(S)                             10250000
IOSERR   EQU   IOSBCB+00000000     1 BIT(S)                             10260000
A00001   EQU   IOSBCB+00000000     2 BIT(S)                             10270000
IOSEX    EQU   IOSBCB+00000000     1 BIT(S)                             10280000
A00002   EQU   IOSBCB+00000001     12 BYTE(S)                           10290000
IOSCOD   EQU   IOSBCB+00000013     1 BYTE(S)                            10300000
A00003   EQU   IOSBCB+00000014     6 BYTE(S)                            10310000
IOSCC    EQU   IOSBCB+00000020     1 BYTE(S)                            10320000
IOSCSWCA EQU   IOSBCB+00000021     3 BYTE(S)                            10330000
IOSTATUS EQU   IOSBCB+00000024     2 BYTE(S)                            10340000
IOSTSA   EQU   IOSBCB+00000024     1 BYTE(S)                            10350000
ATT      EQU   IOSBCB+00000024     1 BIT(S)                             10360000
STM      EQU   IOSBCB+00000024     1 BIT(S)                             10370000
CUE      EQU   IOSBCB+00000024     1 BIT(S)                             10380000
BUS      EQU   IOSBCB+00000024     1 BIT(S)                             10390000
CED      EQU   IOSBCB+00000024     1 BIT(S)                             10400000
DED      EQU   IOSBCB+00000024     1 BIT(S)                             10410000
UCK      EQU   IOSBCB+00000024     1 BIT(S)                             10420000
UEX      EQU   IOSBCB+00000024     1 BIT(S)                             10430000
IOSTSB   EQU   IOSBCB+00000025     1 BYTE(S)                            10440000
PCI      EQU   IOSBCB+00000025     1 BIT(S)                             10450000
ILH      EQU   IOSBCB+00000025     1 BIT(S)                             10460000
PCK      EQU   IOSBCB+00000025     1 BIT(S)                             10470000
PRK      EQU   IOSBCB+00000025     1 BIT(S)                             10480000
CDC      EQU   IOSBCB+00000025     1 BIT(S)                             10490000
CCC      EQU   IOSBCB+00000025     1 BIT(S)                             10500000
ICC      EQU   IOSBCB+00000025     1 BIT(S)                             10510000
CHC      EQU   IOSBCB+00000025     1 BIT(S)                             10520000
IOSCSWRC EQU   IOSBCB+00000026     2 BYTE(S)                            10530000
A00004   EQU   IOSBCB+00000028     24 BYTE(S)                           10540000
IOSERP   EQU   IOSBCB+00000052     FULLWORD POINTER                     10550000
A00005   EQU   IOSBCB+00000056     16 BYTE(S)                           10560000
IOSRST   EQU   IOSBCB+00000072     FULLWORD POINTER                     10570000
IOSVST   EQU   IOSBCB+00000076     FULLWORD POINTER                     10580000
A00006   EQU   IOSBCB+00000080     10 BYTE(S)                           10590000
IOSMDB   EQU   IOSBCB+00000090     1 BYTE(S)                            10600000
ERRFLGS1 EQU   00000011            1 BYTE(S)                            10610000
IOBENT   EQU   ERRFLGS1+00000000   1 BIT(S)                             10620000
SRS      EQU   ERRFLGS1+00000000   1 BIT(S)                             10630000
ERRFLGS2 EQU   00000012            1 BYTE(S)                            10640000
R        EQU   ERRFLGS2+00000000   1 BIT(S)                             10650000
W        EQU   ERRFLGS2+00000000   1 BIT(S)                             10660000
WR       EQU   ERRFLGS2+00000000   1 BIT(S)                             10670000
SENSE    EQU   00000032            2 BYTE(S)                            10680000
CRT      EQU   SENSE+00000000      1 BIT(S)                             10690000
IRD      EQU   SENSE+00000000      1 BIT(S)                             10700000
BOC      EQU   SENSE+00000000      1 BIT(S)                             10710000
ECK      EQU   SENSE+00000000      1 BIT(S)                             10720000
DCK      EQU   SENSE+00000000      1 BIT(S)                             10730000
OVR      EQU   SENSE+00000000      1 BIT(S)                             10740000
LDA      EQU   SENSE+00000000      1 BIT(S)                             10750000
TOT      EQU   SENSE+00000000      1 BIT(S)                             10760000
A00007   EQU   SENSE+00000001      8 BIT(S)                             10770000
FECT     EQU   00000010            1 BYTE(S)                            10780000
LINEDATA EQU   00000080            15 BYTE(S)                           10790000
EOT      EQU   LINEDATA+00000000   4  BYTE  POINTER                     10800000
NEG      EQU   LINEDATA+00000004   4  BYTE  POINTER                     10810000
DAT1     EQU   LINEDATA+00000008   4  BYTE  POINTER                     10820000
EOTDATA  EQU   LINEDATA+00000012   1 BYTE(S)                            10830000
NEGDATA  EQU   LINEDATA+00000013   1 BYTE(S)                            10840000
DAT1DATA EQU   LINEDATA+00000014   1 BYTE(S)                            10850000
CVTADPTR EQU   *                   FULLWORD POINTER                     10860000
         DC    AL4(16)                                                  10870000
CVTADDR  EQU   00000000            FULLWORD POINTER                     10880000
CVT      EQU   00000000            1 BYTE(S)                            10890000
A00008   EQU   CVT+00000000        288 BYTE(S)                          10900000
CVTPTRV  EQU   CVT+00000288        4  BYTE  POINTER                     10910000
A00009   EQU   CVT+00000292        36 BYTE(S)                           10920000
CVTEXT2  EQU   CVT+00000328        4  BYTE  POINTER                     10930000
CVTOLTEP EQU   00000028            FULLWORD POINTER                     10940000
OLTEPTAB EQU   00000000            24 BYTE(S)                           10950000
DIEHEAD  EQU   OLTEPTAB+00000000   4 BYTE(S)                            10960000
REIDEBAD EQU   OLTEPTAB+00000004   4  BYTE  POINTER                     10970000
OLTEPTCB EQU   OLTEPTAB+00000008   4  BYTE  POINTER                     10980000
A00010   EQU   OLTEPTAB+00000012   20 BYTE(S)                           10990000
REIUCB   EQU   OLTEPTAB+00000032   4  BYTE  POINTER                     11000000
A00011   EQU   OLTEPTAB+00000036   4 BYTE(S)                            11010000
IOSGENTB EQU   OLTEPTAB+00000040   18*4  BYTE  INTEGER                  11020000
OURTCB   EQU   00000000            206 BYTE(S)                          11030000
A00012   EQU   OURTCB+00000000     202 BYTE(S)                          11040000
TCBFLGS6 EQU   OURTCB+00000202     1 BYTE(S)                            11050000
TCBRV    EQU   OURTCB+00000202     1 BIT(S)                             11060000
A00013   EQU   OURTCB+00000202     7 BIT(S)                             11070000
CCW      EQU   00000000            64 BIT(S) ON BYTE                    11080000
COCO     EQU   CCW+00000000        8 BIT(S)                             11090000
DAD      EQU   CCW+00000001        24 BIT(S)                            11100000
FLAG12   EQU   CCW+00000004        8 BIT(S)                             11110000
A00014   EQU   CCW+00000004        1 BIT(S)                             11120000
COMCHN   EQU   CCW+00000004        1 BIT(S)                             11130000
A00015   EQU   CCW+00000004        1 BIT(S)                             11140000
SKIP     EQU   CCW+00000004        1 BIT(S)                             11150000
FLOBS    EQU   CCW+00000004        4 BIT(S)                             11160000
BLA      EQU   CCW+00000005        8 BIT(S)                             11170000
COU      EQU   CCW+00000006        16 BIT(S)                            11180000
CCWCHAIN EQU   00000000            8 BYTE(S)                            11190000
CCW1     EQU   CCWCHAIN+00000000   8 BYTE(S)                            11200000
OP1      EQU   CCWCHAIN+00000000   1 BYTE(S)                            11210000
BUFADR1  EQU   CCWCHAIN+00000001   3  BYTE  POINTER                     11220000
FLAGS0   EQU   CCWCHAIN+00000004   8 BIT(S)                             11230000
A00016   EQU   CCWCHAIN+00000004   1 BIT(S)                             11240000
CHN1     EQU   CCWCHAIN+00000004   1 BIT(S)                             11250000
A00017   EQU   CCWCHAIN+00000004   6 BIT(S)                             11260000
A00018   EQU   CCWCHAIN+00000005   1 BYTE(S)                            11270000
CNT1     EQU   CCWCHAIN+00000006   2 BYTE(S)                            11280000
CCWWORK  EQU   00000000            40 BYTE(S) ON DWORD                  11290000
CCWA     EQU   CCWWORK+00000000    8 BYTE(S)                            11300000
A00019   EQU   CCWWORK+00000000    1 BYTE(S)                            11310000
CCWADAT  EQU   CCWWORK+00000001    3  BYTE  POINTER                     11320000
A00020   EQU   CCWWORK+00000004    4 BYTE(S)                            11330000
CCWB     EQU   CCWWORK+00000008    8 BYTE(S)                            11340000
A00021   EQU   CCWWORK+00000008    1 BYTE(S)                            11350000
CCWBDAT  EQU   CCWWORK+00000009    3  BYTE  POINTER                     11360000
A00022   EQU   CCWWORK+00000012    4 BYTE(S)                            11370000
CCWC     EQU   CCWWORK+00000016    8 BYTE(S)                            11380000
A00023   EQU   CCWWORK+00000016    1 BYTE(S)                            11390000
CCWCDAT  EQU   CCWWORK+00000017    3  BYTE  POINTER                     11400000
A00024   EQU   CCWWORK+00000020    4 BYTE(S)                            11410000
CCWD     EQU   CCWWORK+00000024    8 BYTE(S)                            11420000
CCWF     EQU   CCWWORK+00000032    8 BYTE(S)                            11430000
WRITEBUF EQU   00000000            120 BYTE(S)                          11440000
DADBUF   EQU   00000000            1 BYTE(S)                            11450000
         ORG   @DATA                                                    11460000
         DS    00000004C                                                11470000
@L       EQU   3                                                        11480000
@DATD    DSECT                                                          11490000
CC3PLIST EQU   @DATD+00000000      4 BYTE(S) ON WORD                    11500000
FUNCTCOD EQU   CC3PLIST+00000000   1 BYTE(S)                            11510000
CC3UCB   EQU   CC3PLIST+00000001   3  BYTE  POINTER ON WORD+1           11520000
         DS    00000008C                                                11530000
@TEMPS   DS    0F                                                       11540000
@TEMP3   DC    F'0'                                                     11550000
@TEMP4   DC    F'0'                                                     11560000
IGE0019I CSECT                                                   XM4924 11570000
*                                                                       11580000
*********************************************************************** 11590000
*        READ SKIP AND READ REPEAT                                      11600000
CCWRDSKP CCW   2,*,X'30',80             READ SKIP                M4502  11610000
CCWWRNEG CCW   1,*,X'60',1             WRTIE N                    M4502 11620000
*        FORCE TO READ SEQUENCE                                         11630000
CCWWREOT CCW   1,*,X'60',1              WRITE EOT                 M4502 11640000
CCWRDEOT CCW   2,*,X'60',1              READ                      M4502 11650000
*        ENABLE                                                         11660000
CCWENABL CCW   X'27',0,X'60',1          ENABLE                    M4502 11670000
*********************************************************************** 11680000
*                                                                       11690000
*                                                                       11700000
*********************************************************************** 11710000
*********************************************************************** 11720000
*                                                                       11730000
@DATD    DSECT                                                   XM4924 11740000
@DATD    DSECT                                                          11750000
@DATEND  EQU   *                                                        11760000
IGE0019I CSECT ,                                                        11770000
@9F2     EQU   ERRORA3X                                                 11780000
@9F1     EQU   ERRORSNO                                                 11790000
@9EE     EQU   ERRORSNO                                                 11800000
@9ED     EQU   ERRORIRR                                                 11810000
@9EC     EQU   ERRORSNO                                                 11820000
@9EB     EQU   ERRORA3X                                                 11830000
@9EA     EQU   ERRORA3X                                                 11840000
@9E8     EQU   NOERITOK                                                 11850000
         END                                                            11860000
./  ADD  SSI=32851223,NAME=IGE0119I
         TITLE 'IGE0119I - SECOND ERP MODULE FOR THE 2955'              00010000
         TITLE 'IGE0119I - SECOND ERP MODULE FOR THE 2955'              00020000
*                                                                       00030000
*********************************************************************** 00040000
*********************************************************************** 00050000
*                                                                       00060000
*        ABBREVIATIONS USED PERTAINING TO IOB                           00070000
*                                                                       00080000
*        ATT            ATTENTION                                       00090000
*        BCI            BLOCK COUNT INCREMENT AMOUNT                    00100000
*        BOC            BUS OUT CHECK                                   00110000
*        BUS            BUSY                                            00120000
*        CAD            COMMAND ADDRESS                                 00130000
*        CC             CONDITION CODE (SIO)                            00140000
*        CCC            CHANNEL CONTROL CHECK                           00150000
*        CCH            CCHH UPDATE FLAG                                00160000
*        CDC            CHANNEL DATA CHECK                              00170000
*        CED            CHANNEL END                                     00180000
*        CHC            CHAINING CHECK                                  00190000
*        CPD            CHANNEL PROGRAM DESCRIPTION                     00200000
*        CRT            COMMAND REJECT                                  00210000
*        CSW            CHANNEL STATUS WORD                             00220000
*        CUE            CONTROL UNIT END                                00230000
*        DCA            DCB ADDRESS                                     00240000
*        DCK            DATA CHECK                                      00250000
*        DED            DEVICE END                                      00260000
*        DEF            DEVICE END POST FLAG                            00270000
*        ECA            ECB ADDRESS                                     00280000
*        ECD            ECB CODE                                        00290000
*        ECI            IOB ERROR CORRECTION INDICATOR                  00300000
*        ECK            EQUIPMENT CHECK                                 00310000
*        ECT            ERROR COUNT                                     00320000
*        EXC            IOB EXCEPTION                                   00330000
*        HIO            HIO ISSUED FLAG                                 00340000
*        ICC            INTERFACE CONTROL CHECK                         00350000
*        ILH            INCORRECT LENGTH                                00360000
*        IRD            INTERVENTION REQUIRED                           00370000
*        LDA            LOST DATA                                       00380000
*        MEX            M EXTENT                                        00390000
*        MF1            MODIFIER FLAG 1                                 00400000
*        MF2            MODIFIER FLAG 2                                 00410000
*        OEF            NO TEST FOR OUT OF EXTENT FLAG                  00420000
*        OVR            OVERRUN                                         00430000
*        PCI            PROGRAM CONTROLED INTERRUPTION                  00440000
*        PCK            PROGRAM CHECK                                   00450000
*        PFL            PURGE FLAG                                      00460000
*        PRK            PROTECTION CHECK                                00470000
*        QSF            IOB QSAM FLAG                                   00480000
*        RCT            RESIDUAL COUNT                                  00490000
*        RHA            READ HOME ADDRESS R0 FLAG                       00500000
*        RPM            REPOSITION MODIFIER                             00510000
*        RTA            RESTART ADDRESS                                 00520000
*        SEA            SEEK ADDRESS                                    00530000
*        SFL            SENSE FLAG                                      00540000
*        SIO            START I/O                                       00550000
*        SRS            START RE-START                                  00560000
*        STA            START ADDRESS                                   00570000
*        STM            STATUS MODIFIER                                 00580000
*        TOT            TIME OUT                                        00590000
*        UCK            UNIT CHECK                                      00600000
*        UEX            UNIT EXCEPTION                                  00610000
*        UKN            UNKNOWN BITS                                    00620000
*        UNR            UNRELATED                                       00630000
*        UNS            UNUSED SIO BITS                                 00640000
*        UNT            UNUSED SIO BITS                                 00650000
*        USB            UNUSED SENSE BITS                               00660000
*                                                                       00670000
*********************************************************************** 00680000
         LCLA  &T,&SPN                                            0003  00690000
.@001    ANOP                                                     0003  00700000
IGE0119I CSECT ,                                                  0003  00710000
         BALR  @B,0                                               0003  00720000
@PSTART  DS    0H                                                 0003  00730000
         USING @PSTART+00000,@B                                   0003  00740000
         LR    @C,@1                                              0003  00750000
         L     @0,@SIZ001                                         0003  00760000
         GETMAIN  R,LV=(0)                                        0003  00770000
         XR    @C,@1                                              0003  00780000
         XR    @1,@C                                              0003  00790000
         XR    @C,@1                                              0003  00800000
         USING @DATD+00000,@C                                     0003  00810000
         XC    @TEMPS(@L),@TEMPS                                  0003  00820000
*         R3=R1;                         /* PARAMETER LIST            * 00830000
         LR    @3,@1                                              0042  00840000
*         R6=RQEIOB;                     /* GET IOB PTR               * 00850000
         L     @6,4(0,@3)                                         0043  00860000
*         R9=MHRCCWS;                                                   00870000
         MVC   @TEMP4(4),32(@6)                                   0044  00880000
         L     @9,@TEMP4                                          0044  00890000
*         R7=CAD-8;                      /* CCW PTR                   * 00900000
         LH    @7,@D1                                             0045  00910000
         MVC   @TEMP3+1(3),9(@6)                                  0045  00920000
         A     @7,@TEMP3                                          0045  00930000
* SECTION1:                                                             00940000
* /*      THIS SECTION IS USED TO TEST FOR INITIAL SELECTION          * 00950000
* /*      ERRORS. AN SIO CONDITION CODE OF '01' INDICATES             * 00960000
* /*      STATUS STORED. ANY STATUS AND SENSE INFORMATION OTHER       * 00970000
* /*      THAN UNIT CHECK (UCK) WITH SENSE INDICATING BUS OUT         * 00980000
* /*      CHECK (BOC) OR COMMAND REJECT (CRT) IS TREATED AS A         * 00990000
* /*      "SHOULD NOT OCCUR" (SNO) TYPE ERROR CONDITION               * 01000000
*                                                                  /* * 01010000
*         IF SIO¬='10'X THEN             /* DOES SIO CODE!'01'        * 01020000
SECTION1 CLI   16(@6),X'10'                                       0046  01030000
*           GOTO ERP2001;                /* NO. BRANCH TO NEXT SECTION* 01040000
         BC    07,ERP2001                                         0047  01050000
*                                                                  /* * 01060000
*         IF UCK = '0'B THEN                 /*UNIT CHECK ?           * 01070000
         TM    12(@6),B'00000010'                                 0048  01080000
*              GO TO ERRORSNO;               /*IF NEG THEN BRANCH     * 01090000
         BC    08,ERRORSNO                                        0049  01100000
*                                                                  /* * 01110000
*         IF BOC = '1'B THEN                 /*BUS OUT CHECK ?        * 01120000
         TM    2(@6),B'00100000'                                  0050  01130000
*              GO TO ERRORA2X;               /*IF POS THEN BRANCH     * 01140000
         BC    01,ERRORA2X                                        0051  01150000
*                                                                  /* * 01160000
*         IF CRT = '1'B THEN                 /*COMMAND REJECT ?       * 01170000
         TM    2(@6),B'10000000'                                  0052  01180000
*              GO TO ERRORA3X;               /*IF POS THEN BRANCH     * 01190000
         BC    01,ERRORA3X                                        0053  01200000
*                                                                  /* * 01210000
*         GO TO ERRORSNO;                    /*SHOULD NOT OCCUR       * 01220000
         BC    15,ERRORSNO                                        0054  01230000
*  ERP2001:                                                             01240000
*         IF UCK='0'B THEN                                              01250000
ERP2001  TM    12(@6),B'00000010'                                 0055  01260000
*           GOTO SECTION4;                                              01270000
         BC    08,SECTION4                                        0056  01280000
* /*      THIS SECTION TESTS FOR DATA CHECK (DCK) IF UNIT CHECK       * 01290000
* /*      (UCK) HAS BEEN INDICATED. DEPENDING UPON THE PRESENT        * 01300000
* /*      CCW BEING EXECUTED AND THE CHAINED COMMAND IF ANY           * 01310000
*                                                                  /* * 01320000
* DATCHECK:                                                             01330000
*                                                                  /* * 01340000
*         IF DCK = '0'B THEN                 /*DATA CHECK ?           * 01350000
DATCHECK TM    2(@6),B'00001000'                                  0057  01360000
*              GO TO OVERRUN;                /*IF NEGATIVE BRANCH     * 01370000
         BC    08,OVERRUN                                         0058  01380000
*                                            /*    TO OVER RUN        * 01390000
*         IF COCO = '02'X THEN GOTO TESTNEX0; /* READ COMMAND         * 01400000
         CLI   0(@7),X'02'                                        0059  01410000
         BC    08,TESTNEX0                                        0060  01420000
*         IF COCO='01'X THEN                                            01430000
         CLI   0(@7),X'01'                                        0061  01440000
         BC    07,@9FF                                            0061  01450000
*         DO;                                                           01460000
*         IF WR='1'B THEN                /* WRITE EOT,READ RESP       * 01470000
         TM    32(@6),B'00001000'                                 0063  01480000
*               GOTO ERRORIWC;                                          01490000
         BC    01,ERRORIWC                                        0064  01500000
*         GOTO ERRORRFW;                                                01510000
         BC    15,ERRORRFW                                        0065  01520000
*         END;                                                          01530000
*         GO TO ERRORSNO;                    /*BRANCH TO RECOVERY     * 01540000
*                                                                  /* * 01550000
*                                                                  /* * 01560000
* TESTNEX0:                                                             01570000
*                                                                  /* * 01580000
*         IF R='1'B THEN                 /* READ SEQUENCE             * 01590000
TESTNEX0 TM    32(@6),B'10000000'                                 0068  01600000
*               GOTO ERRORIRR;                                          01610000
         BC    01,ERRORIRR                                        0069  01620000
*         IF WR='1'B THEN                /* WRITE EOT,READ RESP       * 01630000
         TM    32(@6),B'00001000'                                 0070  01640000
*           GOTO ERRORIWC;                                              01650000
         BC    01,ERRORIWC                                        0071  01660000
*         GOTO ERRORRFW;                                                01670000
         BC    15,ERRORRFW                                        0072  01680000
* /*      THIS SECTION TESTS FOR OVER RUN (OVR) IF UNIT CHECK         * 01690000
* /*      (UCK) HAS BEEN INDICATED. DEPENDING UPON CURRENT CCW        * 01700000
* /*      RECOVERY PROCEDURES ARE DEFINED                             * 01710000
*                                                                  /* * 01720000
* OVERRUN:                                                              01730000
*                                                                  /* * 01740000
*         IF OVR = '0'B THEN             /* OVER RUN ?                * 01750000
OVERRUN  TM    2(@6),B'00000100'                                  0073  01760000
*              GO TO COMANREJ;               /*IF NEGATIVE BRANCH     * 01770000
         BC    08,COMANREJ                                        0074  01780000
*                                            /*    TO COMMAND REJECT  * 01790000
*         IF COCO ='CA'X                 /* INHIBIT COMMAND           * 01800000
*               | COCO='02'X THEN        /* READ COMMAND              * 01810000
         CLI   0(@7),X'CA'                                        0075  01820000
         BC    08,@9FE                                            0075  01830000
         CLI   0(@7),X'02'                                        0075  01840000
         BC    07,@9FD                                            0075  01850000
*               GOTO ERRORIRR;                                          01860000
         BC    08,ERRORIRR                                        0076  01870000
*                                                                  /* * 01880000
*         GO TO ERRORSNO;                    /*SHOULD NOT OCCUR       * 01890000
         BC    15,ERRORSNO                                        0077  01900000
* /*      THIS SECTION TESTS FOR COMMAND REJECT (CRT) IF UNIT         * 01910000
* /*      CHECK (UCK) HAS BEEN INDICATED. ERROR RECOVERY              * 01920000
* /*      PROCEDURES ARE DEFINED                                      * 01930000
*                                                                  /* * 01940000
* COMANREJ:                                                             01950000
*                                                                  /* * 01960000
*         IF CRT = '1'B THEN                 /*COMMAND REJECT         * 01970000
COMANREJ TM    2(@6),B'10000000'                                  0078  01980000
*               GOTO ERRORA2X;                                          01990000
         BC    01,ERRORA2X                                        0079  02000000
* /*      THIS SECTION TEST FOR THE CHANNEL STATUS ERRORS PROGRAM     * 02010000
* /*      CHECK, PROTECTION CHECK, OR CHAINING CHECK. ERROR           * 02020000
* /*      RECOVERY PROCEDURES ARE DEFINED                             * 02030000
*                                                                  /* * 02040000
*  SECTION4:                                                            02050000
*         IF PCK = '1'B                      /*PROGRAM CHECK ?        * 02060000
*             | PRK = '1'B                   /*PROTECTION CHECK ?     * 02070000
*                | CHC = '1'B THEN           /*CHAINING CHECK ?       * 02080000
SECTION4 TM    13(@6),B'00100000'                                 0080  02090000
         BC    01,@9FC                                            0080  02100000
         TM    13(@6),B'00010000'                                 0080  02110000
         BC    01,@9FB                                            0080  02120000
         TM    13(@6),B'00000001'                                 0080  02130000
         BC    12,@9FA                                            0080  02140000
*                    GO TO ERRORA3X;         /*IF POSITIVE BRANCH     * 02150000
         BC    03,ERRORA3X                                        0081  02160000
*                                            /*    TO RECOVERY        * 02170000
* /*      THIS SECTION TESTS FOR THE CHANNEL STATUS ERROR UNIT        * 02180000
* /*      EXCEPTION (UEX). DEPENDING UPON THE PRESENT CCW AND         * 02190000
* /*      PRESENT COMMAND CHAIN, IF ANY, RECOVERY PROCEDURES ARE      * 02200000
* /*      DEFINED                                                     * 02210000
*                                                                  /* * 02220000
*         IF UEX = '0'B THEN                 /*UNIT EXCEPTION ?       * 02230000
@9FA     TM    12(@6),B'00000001'                                 0082  02240000
*               GOTO CKPREP;             /* CHECK IF PREPARE COMMAND  * 02250000
         BC    08,CKPREP                                          0083  02260000
*         IF COCO='02'X THEN             /* READ COMMAND              * 02270000
         CLI   0(@7),X'02'                                        0084  02280000
*               GOTO CHECKER0;                                          02290000
         BC    08,CHECKER0                                        0085  02300000
*         IF COCO='01'X THEN             /* WRITE COMMAND             * 02310000
         CLI   0(@7),X'01'                                        0086  02320000
*               GOTO ERRORRFW;                                          02330000
         BC    08,ERRORRFW                                        0087  02340000
*                                                                  /* * 02350000
*         GO TO NOERITOK;                    /*NO ERROR CONDITION  -  * 02360000
         BC    15,NOERITOK                                        0088  02370000
*                                            /*    RETURN             * 02380000
* CHECKER0:                                                             02390000
*                                                                  /* * 02400000
*         IF R='1'B THEN                 /* READ SEQUENCE             * 02410000
CHECKER0 TM    32(@6),B'10000000'                                 0089  02420000
*               GOTO ERRORRCP;                                          02430000
         BC    01,ERRORRCP                                        0090  02440000
*         IF W='1'B THEN                 /* WRITE SEQUENCE            * 02450000
         TM    32(@6),B'01000000'                                 0091  02460000
         BC    12,@9F9                                            0091  02470000
*           DO;                                                         02480000
*           IF WR='1'B THEN              /* WRITE EOT, READ RESP M4502* 02490000
         TM    32(@6),B'00001000'                                 0093  02500000
*               GOTO NOERITOK;           /* NO ERROR CONDITION   M4502* 02510000
         BC    01,NOERITOK                                        0094  02520000
*           RTA=STA;                                                    02530000
         MVC   25(3,@6),17(@6)                                    0095  02540000
*           GOTO RETRY1;                                                02550000
         BC    15,RETRY1                                          0096  02560000
*           END;                                                        02570000
*         GO TO NOERITOK;                    /*NO ERROR CONDITION  -  * 02580000
*                                            /*    RETURN             * 02590000
*  CKPREP:                                                              02600000
*         IF COCO='06'X THEN             /* PREPARE COMMAND           * 02610000
CKPREP   CLI   0(@7),X'06'                                        0099  02620000
*               GOTO ERRORRFW;                                          02630000
         BC    08,ERRORRFW                                        0100  02640000
* /*      THIS SECTION TESTS FOR INCORRECT LENGTH (ILH) BUT           * 02650000
* /*      THIS CONDITION IS NOT TREATED AS AN ERROR CONDITION         * 02660000
* INCORLGH:                                                             02670000
*         IF ILH = '1'B THEN                 /*INCORRECT LENGTH ?     * 02680000
INCORLGH TM    13(@6),B'01000000'                                 0101  02690000
*              GO TO NOERITOK;               /*NO ERROR CONDITION  -  * 02700000
         BC    01,NOERITOK                                        0102  02710000
*                                            /*    RETURN             * 02720000
* /*      THIS SECTION TESTS FOR BUSY (BUS), ATTENTION (ATT),         * 02730000
* /*      CONTROL UNIT END (CUE), STATUS MODIFIER (STM) AND           * 02740000
* /*      BRANCHES TO RECOVERY FOR THREE RETRYS                       * 02750000
*                                                                  /* * 02760000
*         IF BUS = '1'B THEN                 /*BUSY ?                 * 02770000
         TM    12(@6),B'00010000'                                 0103  02780000
*              GO TO ERRORA3X;               /*IF POSITIVE BRANCH     * 02790000
         BC    01,ERRORA3X                                        0104  02800000
*                                            /*    TO RECOVERY        * 02810000
*         IF ATT = '1'B THEN                 /*ATTENTION ?            * 02820000
         TM    12(@6),B'10000000'                                 0105  02830000
*              GO TO ERRORA3X;               /*IF POSITIVE BRANCH     * 02840000
         BC    01,ERRORA3X                                        0106  02850000
*                                            /*    TO RECOVERY        * 02860000
*         IF CUE = '1'B THEN                 /*CONTROL UNIT END ?     * 02870000
         TM    12(@6),B'00100000'                                 0107  02880000
*              GO TO ERRORA3X;               /*IF POSITIVE BRANCH     * 02890000
         BC    01,ERRORA3X                                        0108  02900000
*                                            /*    TO RECOVERY        * 02910000
*         IF STM = '1'B THEN                 /*STATUS MODIFIER ?      * 02920000
         TM    12(@6),B'01000000'                                 0109  02930000
*              GO TO ERRORA3X;               /*IF POSITIVE BRANCH     * 02940000
         BC    01,ERRORA3X                                        0110  02950000
*                                            /*    TO RECOVERY        * 02960000
*                                                                       02970000
*                                                                       02980000
*         GOTO NOERITOK;                 /*                      M4502* 02990000
         BC    15,NOERITOK                                        0111  03000000
*                                                                       03010000
*                                                                       03020000
*  ERRORA2X:                                                            03030000
*         IF FECT ='03'X THEN            /* IS THIS A PERMANENT ERROR * 03040000
ERRORA2X CLI   30(@6),X'03'                                       0112  03050000
*            GOTO PERR;                                                 03060000
         BC    08,PERR                                            0113  03070000
*         ELSE GOTO RETRY;               /* RETRY CHAN PROGRAM        * 03080000
         BC    15,RETRY                                           0114  03090000
*                                                                       03100000
*                                                                       03110000
*  ERRORA3X:                                                            03120000
*         IF FECT ='04'X THEN            /* IS THIS A PERM ERROR ?    * 03130000
ERRORA3X CLI   30(@6),X'04'                                       0115  03140000
*            GOTO PERR;                  /* GO SET UP FOR RETURN      * 03150000
         BC    08,PERR                                            0116  03160000
*         ELSE                                                          03170000
*            GOTO RETRY;                 /* RETRY CHAN PROGRAM        * 03180000
         BC    15,RETRY                                           0117  03190000
*                                                                       03200000
*                                                                       03210000
*  ERRORRFW:                                                            03220000
*         CCWA(1:8)=CCWRDSKP(1:8);      /* MOVE IN READ SKIP CCW      * 03230000
ERRORRFW MVC   0(8,@9),CCWRDSKP                                   0118  03240000
*         CCWADAT=DAT1;                                                 03250000
         MVC   1(3,@9),45(@6)                                     0119  03260000
*         CCWB(1:8)=CCWWREOT(1:8);      /* MOVE IN WRITE EOT          * 03270000
         MVC   8(8,@9),CCWWREOT                                   0120  03280000
*         CCWBDAT=EOT;                                                  03290000
         MVC   9(3,@9),37(@6)                                     0121  03300000
*         CCWC(1:8)=CCWRDEOT(1:8);      /* MOVE IN READ EOT           * 03310000
         MVC   16(8,@9),CCWRDEOT                                  0122  03320000
*         CCWCDAT=DAT1;                                                 03330000
         MVC   17(3,@9),45(@6)                                    0123  03340000
*         DISP=25;                      /* POINT TO NEXT AVAILABLE SP * 03350000
         LA    @4,25                                              0124  03360000
*         GOTO MOVECHN;                  /* MOVE IN CHAIN & RETRY     * 03370000
         BC    15,MOVECHN                                         0125  03380000
*                                                                       03390000
*                                                                       03400000
*  ERRORIRR:                                                            03410000
*         CCWA(1:8)=CCWWRNEG(1:8);      /* MOVE WRITE NEGATIVE IN WORK* 03420000
ERRORIRR MVC   0(8,@9),CCWWRNEG                                   0126  03430000
*         CCWADAT=NEG;                                                  03440000
         MVC   1(3,@9),41(@6)                                     0127  03450000
*         R5=STA;                       /* POINT TO USERS CCW CHAIN   * 03460000
         MVC   @TEMP3+1(3),17(@6)                                 0128  03470000
         L     @5,@TEMP3                                          0128  03480000
*    IRR1:IF OP1 = '02'X THEN DO;       /* SEARCH FOR A READ CCW      * 03490000
IRR1     CLI   0(@5),X'02'                                        0129  03500000
         BC    07,@9F8                                            0129  03510000
*         CCWB(1:8)=CCWCHAIN(1:8);      /* WHEN FOUND MOVE IN WORK AR * 03520000
         MVC   8(8,@9),0(@5)                                      0131  03530000
*         RTA=R9;                                                       03540000
         ST    @9,@TEMP4                                          0132  03550000
         MVC   25(3,@6),@TEMP4+1                                  0132  03560000
*         GOTO RETRY;                   /* RETRY IT                   * 03570000
         BC    15,RETRY                                           0133  03580000
*         END;                                                          03590000
*           ELSE;                                                       03600000
@9F8     EQU   *                                                  0135  03610000
*         R5=R5+8;                                                      03620000
@9F7     AH    @5,@D2                                             0136  03630000
*         GOTO IRR1;                    /* LOOP                       * 03640000
         BC    15,IRR1                                            0137  03650000
*                                                                       03660000
*                                                                       03670000
*  ERRORIWC:                                                            03680000
*  ERRORRCP:                                                            03690000
*         RTA=STA;                      /* RETRY ENTIRE CHANNEL PROG  * 03700000
ERRORIWC EQU   *                                                  0138  03710000
ERRORRCP MVC   25(3,@6),17(@6)                                    0138  03720000
*         GOTO RETRY;                   /* DO IT                      * 03730000
         BC    15,RETRY                                           0139  03740000
*                                                                       03750000
*                                                                       03760000
*                                                                       03770000
* ERRORSNO:                                                             03780000
*         IF FECT ='04'X THEN            /* IS THIS A PERM ERROR ?    * 03790000
ERRORSNO CLI   30(@6),X'04'                                       0140  03800000
*            GOTO PERR;                  /* GO SET UP FOR ERR RETURN  * 03810000
         BC    08,PERR                                            0141  03820000
*         ELSE GOTO RETRY;               /* SET UP FOR CHAN PROG RETRY* 03830000
         BC    15,RETRY                                           0142  03840000
*                                                                       03850000
*                                                                       03860000
*  /*THIS PROCEDURE MOVES CCWS FROM USERS "HAIN TO ERP WORK AREA      * 03870000
*                                                                       03880000
*  MOVECHN:                                                             03890000
*         R5=STA;                             /* USERS CCW START ADDR * 03900000
MOVECHN  MVC   @TEMP3+1(3),17(@6)                                 0143  03910000
         L     @5,@TEMP3                                          0143  03920000
*    NEXT:CCWWORK(DISP:DISP+7)=CCWCHAIN(1:8); /* MOVE IN CCW          * 03930000
NEXT     LR    @2,@4                                              0144  03940000
         LA    @A,0(@2,@9)                                        0144  03950000
         BCTR  @A,0                                               0144  03960000
         MVC   0(8,@A),0(@5)                                      0144  03970000
*         IF CHN1 = '1'B THEN DO;             /* IS IT CHAINED? IF YES* 03980000
         TM    4(@5),B'01000000'                                  0145  03990000
         BC    12,@9F6                                            0145  04000000
*         R5=R5+8;                            /* SET UP TO MOVE IN    * 04010000
         AH    @5,@D2                                             0147  04020000
*         DISP=DISP+8;                        /* NEXT CCW             * 04030000
         AH    @4,@D2                                             0148  04040000
*         GOTO NEXT;                          /* GO DO IT             * 04050000
         BC    15,NEXT                                            0149  04060000
*         END;                                                          04070000
*         RTA=R9;                                                       04080000
@9F6     ST    @9,@TEMP4                                          0151  04090000
         MVC   25(3,@6),@TEMP4+1                                  0151  04100000
*         GOTO RETRY;                         /* TRY IT AGAIN         * 04110000
         BC    15,RETRY                                           0152  04120000
*                                                                       04130000
*                                                                       04140000
*  NOERITOK:                                                            04150000
*         SENSBYTE='0000'X;                                             04160000
NOERITOK MVC   2(2,@6),@X10                                       0153  04170000
*         SWITCHES='00'X;                                               04180000
         MVI   32(@6),X'00'                                       0154  04190000
*         SRS='0'B;                                                     04200000
         NI    0(@6),B'11111110'                                  0155  04210000
*         IOBENT='0'B;                                                  04220000
         NI    8(@6),B'10111111'                                  0156  04230000
*         FECT='00'X;                                                   04240000
         MVI   30(@6),X'00'                                       0157  04250000
*         ECI ='0'B;                     /* SET IOBERR TO ZERO        * 04260000
         NI    0(@6),B'11011011'                                  0158  04270000
*         EXC ='0'B;                     /* SET IOBEX BIT TO ZERO     * 04280000
*         CSWFLAGS='0C00'X;              /* SET CSWFLAGS TO NORMAL    * 04290000
         MVC   12(2,@6),@X11                                      0160  04300000
*         GEN(SVC 15);                                                  04310000
         SVC 15                                                         04320000
         DS    0H                                                       04330000
*         GEN(SVC 3);                    /* RETURN TO IOS             * 04340000
         SVC 3                                                          04350000
         DS    0H                                                       04360000
*                                                                       04370000
*                                                                       04380000
*  RETRY:                                                               04390000
*         IF FECT='04'X THEN                                            04400000
RETRY    CLI   30(@6),X'04'                                       0163  04410000
*           GOTO PERR;                                                  04420000
         BC    08,PERR                                            0164  04430000
*         FECT=FECT+1;                   /* UPDATE IOB ERROR COUNT    * 04440000
         LA    @F,1                                               0165  04450000
         SR    @0,@0                                              0165  04460000
         IC    @0,30(0,@6)                                        0165  04470000
         AR    @F,@0                                              0165  04480000
         STC   @F,30(0,@6)                                        0165  04490000
*  RETRY1:                                                              04500000
*         SWITCHES='00'X;                                               04510000
RETRY1   MVI   32(@6),X'00'                                       0166  04520000
*         GEN(SVC 15);                                                  04530000
         SVC 15                                                         04540000
         DS    0H                                                       04550000
*         GEN(SVC 3);                    /* RETURN TO IOS             * 04560000
         SVC 3                                                          04570000
         DS    0H                                                       04580000
*                                                                       04590000
*                                                                       04600000
*  PERR:                                                                04610000
*         ECI ='0'B;                     /* SET IOBERR BIT TO ZERO    * 04620000
PERR     NI    0(@6),B'11011111'                                  0169  04630000
*         SWITCHES='00'X;                                               04640000
         MVI   32(@6),X'00'                                       0170  04650000
*         GEN(SVC 15);                                                  04660000
         SVC 15                                                         04670000
         DS    0H                                                       04680000
*         GEN(SVC 3);                    /* RETURN TO IOS             * 04690000
         SVC 3                                                          04700000
         DS    0H                                                       04710000
*                                                                       04720000
*                                                                       04730000
*         RETURN;                                                       04740000
*  END;                                                                 04750000
@EL01    LR    @1,@C                                              0174  04760000
         L     @0,@SIZ001                                         0174  04770000
         FREEMAIN R,LV=(0),A=(1)                                  0174  04780000
         BCR   15,@E                                              0174  04790000
@DATA1   EQU   *                                                        04800000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           04810000
@1       EQU   01                                                       04820000
@2       EQU   02                                                       04830000
@3       EQU   03                                                       04840000
@4       EQU   04                                                       04850000
@5       EQU   05                                                       04860000
@6       EQU   06                                                       04870000
@7       EQU   07                                                       04880000
@8       EQU   08                                                       04890000
@9       EQU   09                                                       04900000
@A       EQU   10                                                       04910000
@B       EQU   11                                                       04920000
@C       EQU   12                                                       04930000
@D       EQU   13                                                       04940000
@E       EQU   14                                                       04950000
@F       EQU   15                                                       04960000
@D1      DC    H'-8'                                                    04970000
@D2      DC    H'8'                                                     04980000
         DS    0F                                                       04990000
@SIZ001  DC    AL1(&SPN)                                                05000000
         DC    AL3(@DATEND-@DATD)                                       05010000
         DS    0F                                                       05020000
@X10     DC    X'0000'                                                  05030000
@X11     DC    X'0C00'                                                  05040000
         DS    0D                                                       05050000
@DATA    EQU   *                                                        05060000
P        EQU   00000000            FULLWORD INTEGER                     05070000
R0       EQU   00000000            FULLWORD POINTER REGISTER            05080000
R1       EQU   00000001            FULLWORD POINTER REGISTER            05090000
R2       EQU   00000002            FULLWORD POINTER REGISTER            05100000
R3       EQU   00000003            FULLWORD POINTER REGISTER            05110000
R4       EQU   00000004            FULLWORD INTEGER REGISTER            05120000
R5       EQU   00000005            FULLWORD POINTER REGISTER            05130000
R6       EQU   00000006            FULLWORD POINTER REGISTER            05140000
R7       EQU   00000007            3  BYTE  POINTER REGISTER            05150000
R8       EQU   00000008            FULLWORD POINTER REGISTER            05160000
R9       EQU   00000009            3  BYTE  POINTER REGISTER            05170000
R10      EQU   00000010            FULLWORD INTEGER REGISTER            05180000
R11      EQU   00000011            FULLWORD INTEGER REGISTER            05190000
R12      EQU   00000012            FULLWORD INTEGER REGISTER            05200000
R13      EQU   00000013            FULLWORD INTEGER REGISTER            05210000
R14      EQU   00000014            FULLWORD INTEGER REGISTER            05220000
R15      EQU   00000015            FULLWORD INTEGER REGISTER            05230000
DISP     EQU   00000004            FULLWORD INTEGER REGISTER            05240000
REQUEL   EQU   00000000            16 BYTE(S) ON WORD                   05250000
RQELNK   EQU   REQUEL+00000000     2 BYTE(S)                            05260000
RQEUCB   EQU   REQUEL+00000002     HALFWORD POINTER                     05270000
RQEIOB   EQU   REQUEL+00000004     FULLWORD POINTER                     05280000
RQEPRI   EQU   REQUEL+00000008     1 BYTE(S)                            05290000
RQEDEB   EQU   REQUEL+00000009     3  BYTE  POINTER ON WORD+1           05300000
PROTKEY  EQU   REQUEL+00000012     1 BYTE(S)                            05310000
RQETCB   EQU   REQUEL+00000013     3  BYTE  POINTER ON WORD+1           05320000
IOB      EQU   00000000            320 BIT(S) ON BYTE                   05330000
FLAGS1   EQU   IOB+00000000        8 BIT(S)                             05340000
CPD      EQU   IOB+00000000        2 BIT(S)                             05350000
ECI      EQU   IOB+00000000        1 BIT(S)                             05360000
MF1      EQU   IOB+00000000        1 BIT(S)                             05370000
MF2      EQU   IOB+00000000        1 BIT(S)                             05380000
EXC      EQU   IOB+00000000        1 BIT(S)                             05390000
UNR      EQU   IOB+00000000        1 BIT(S)                             05400000
SRS      EQU   IOB+00000000        1 BIT(S)                             05410000
FLAGS2   EQU   IOB+00000001        8 BIT(S)                             05420000
HIO      EQU   IOB+00000001        1 BIT(S)                             05430000
SFL      EQU   IOB+00000001        1 BIT(S)                             05440000
PFL      EQU   IOB+00000001        1 BIT(S)                             05450000
RHA      EQU   IOB+00000001        1 BIT(S)                             05460000
OEF      EQU   IOB+00000001        1 BIT(S)                             05470000
CCH      EQU   IOB+00000001        1 BIT(S)                             05480000
DEF      EQU   IOB+00000001        1 BIT(S)                             05490000
QSF      EQU   IOB+00000001        1 BIT(S)                             05500000
SENSBYTE EQU   IOB+00000002        16 BIT(S)                            05510000
CRT      EQU   IOB+00000002        1 BIT(S)                             05520000
IRD      EQU   IOB+00000002        1 BIT(S)                             05530000
BOC      EQU   IOB+00000002        1 BIT(S)                             05540000
ECK      EQU   IOB+00000002        1 BIT(S)                             05550000
DCK      EQU   IOB+00000002        1 BIT(S)                             05560000
OVR      EQU   IOB+00000002        1 BIT(S)                             05570000
LDA      EQU   IOB+00000002        1 BIT(S)                             05580000
TOT      EQU   IOB+00000002        1 BIT(S)                             05590000
USB      EQU   IOB+00000003        8 BIT(S)                             05600000
ECD      EQU   IOB+00000004        8 BIT(S)                             05610000
ECA      EQU   IOB+00000005        24 BIT(S)                            05620000
FLAGS3   EQU   IOB+00000008        8 BIT(S)                             05630000
A00000   EQU   IOB+00000008        1 BIT(S)                             05640000
IOBENT   EQU   IOB+00000008        1 BIT(S)                             05650000
A00001   EQU   IOB+00000008        6 BIT(S)                             05660000
CSW      EQU   IOB+00000009        56 BIT(S)                            05670000
CAD      EQU   IOB+00000009        24 BIT(S)                            05680000
ATT      EQU   IOB+00000012        1 BIT(S)                             05690000
STM      EQU   IOB+00000012        1 BIT(S)                             05700000
CUE      EQU   IOB+00000012        1 BIT(S)                             05710000
BUS      EQU   IOB+00000012        1 BIT(S)                             05720000
CED      EQU   IOB+00000012        1 BIT(S)                             05730000
DED      EQU   IOB+00000012        1 BIT(S)                             05740000
UCK      EQU   IOB+00000012        1 BIT(S)                             05750000
UEX      EQU   IOB+00000012        1 BIT(S)                             05760000
PCI      EQU   IOB+00000013        1 BIT(S)                             05770000
ILH      EQU   IOB+00000013        1 BIT(S)                             05780000
PCK      EQU   IOB+00000013        1 BIT(S)                             05790000
PRK      EQU   IOB+00000013        1 BIT(S)                             05800000
CDC      EQU   IOB+00000013        1 BIT(S)                             05810000
CCC      EQU   IOB+00000013        1 BIT(S)                             05820000
ICC      EQU   IOB+00000013        1 BIT(S)                             05830000
CHC      EQU   IOB+00000013        1 BIT(S)                             05840000
RCT      EQU   IOB+00000014        16 BIT(S)                            05850000
SIO      EQU   IOB+00000016        8 BIT(S)                             05860000
UNS      EQU   IOB+00000016        2 BIT(S)                             05870000
CC       EQU   IOB+00000016        2 BIT(S)                             05880000
UNT      EQU   IOB+00000016        4 BIT(S)                             05890000
STA      EQU   IOB+00000017        24 BIT(S)                            05900000
UKN      EQU   IOB+00000020        8 BIT(S)                             05910000
DCA      EQU   IOB+00000021        24 BIT(S)                            05920000
RPM      EQU   IOB+00000024        8 BIT(S)                             05930000
RTA      EQU   IOB+00000025        3  BYTE  POINTER                     05940000
BCI      EQU   IOB+00000028        16 BIT(S)                            05950000
FECT     EQU   IOB+00000030        1 BYTE(S)                            05960000
SECT     EQU   IOB+00000031        1 BYTE(S)                            05970000
MHRCCWS  EQU   IOB+00000032        4  BYTE  POINTER                     05980000
SWITCHES EQU   IOB+00000032        1 BYTE(S)                            05990000
R        EQU   IOB+00000032        1 BIT(S)                             06000000
W        EQU   IOB+00000032        1 BIT(S)                             06010000
E        EQU   IOB+00000032        1 BIT(S)                             06020000
FTRS     EQU   IOB+00000032        1 BIT(S)                             06030000
WR       EQU   IOB+00000032        1 BIT(S)                             06040000
A00002   EQU   IOB+00000033        3  BYTE  POINTER                     06050000
EOT      EQU   IOB+00000036        4  BYTE  POINTER                     06060000
NEG      EQU   IOB+00000040        4  BYTE  POINTER                     06070000
DAT1     EQU   IOB+00000044        4  BYTE  POINTER                     06080000
CSWFLAGS EQU   00000012            2 BYTE(S)                            06090000
CCW      EQU   00000000            64 BIT(S) ON BYTE                    06100000
COCO     EQU   CCW+00000000        8 BIT(S)                             06110000
DAD      EQU   CCW+00000001        24 BIT(S)                            06120000
FLAG12   EQU   CCW+00000004        8 BIT(S)                             06130000
A00003   EQU   CCW+00000004        3 BIT(S)                             06140000
SKIP     EQU   CCW+00000004        1 BIT(S)                             06150000
FLOBS    EQU   CCW+00000004        4 BIT(S)                             06160000
BLA      EQU   CCW+00000005        8 BIT(S)                             06170000
COU      EQU   CCW+00000006        16 BIT(S)                            06180000
CCWCHAIN EQU   00000000            8 BYTE(S)                            06190000
CCW1     EQU   CCWCHAIN+00000000   8 BYTE(S)                            06200000
OP1      EQU   CCWCHAIN+00000000   1 BYTE(S)                            06210000
BUFADR1  EQU   CCWCHAIN+00000001   3  BYTE  POINTER                     06220000
FLAGS0   EQU   CCWCHAIN+00000004   8 BIT(S)                             06230000
A00004   EQU   CCWCHAIN+00000004   1 BIT(S)                             06240000
CHN1     EQU   CCWCHAIN+00000004   1 BIT(S)                             06250000
A00005   EQU   CCWCHAIN+00000004   6 BIT(S)                             06260000
A00006   EQU   CCWCHAIN+00000005   1 BYTE(S)                            06270000
CNT1     EQU   CCWCHAIN+00000006   2 BYTE(S)                            06280000
CCWWORK  EQU   00000000            40 BYTE(S) ON DWORD                  06290000
CCWA     EQU   CCWWORK+00000000    8 BYTE(S)                            06300000
A00007   EQU   CCWWORK+00000000    1 BYTE(S)                            06310000
CCWADAT  EQU   CCWWORK+00000001    3  BYTE  POINTER                     06320000
A00008   EQU   CCWWORK+00000004    4 BYTE(S)                            06330000
CCWB     EQU   CCWWORK+00000008    8 BYTE(S)                            06340000
A00009   EQU   CCWWORK+00000008    1 BYTE(S)                            06350000
CCWBDAT  EQU   CCWWORK+00000009    3  BYTE  POINTER                     06360000
A00010   EQU   CCWWORK+00000012    4 BYTE(S)                            06370000
CCWC     EQU   CCWWORK+00000016    8 BYTE(S)                            06380000
A00011   EQU   CCWWORK+00000016    1 BYTE(S)                            06390000
CCWCDAT  EQU   CCWWORK+00000017    3  BYTE  POINTER                     06400000
A00012   EQU   CCWWORK+00000020    4 BYTE(S)                            06410000
CCWD     EQU   CCWWORK+00000024    8 BYTE(S)                            06420000
CCWF     EQU   CCWWORK+00000032    8 BYTE(S)                            06430000
WRITEBUF EQU   00000000            120 BYTE(S)                          06440000
DADBUF   EQU   00000000            1 BYTE(S)                            06450000
         DS    00000000C                                                06460000
@L       EQU   3                                                        06470000
@DATD    DSECT                                                          06480000
         DS    00000000C                                                06490000
@TEMPS   DS    0F                                                       06500000
@TEMP3   DC    F'0'                                                     06510000
@TEMP4   DC    F'0'                                                     06520000
IGE0119I CSECT                                                   XM4924 06530000
*                                                                       06540000
ERPATCH  DC    20XL2'0700'                                              06550000
*********************************************************************** 06560000
*        READ SKIP AND READ REPEAT                                      06570000
CCWRDSKP CCW   2,*,X'30',80             READ SKIP                 M4502 06580000
CCWWRNEG CCW   1,*,X'60',5             WRTIE N                    M4502 06590000
*        FTR'S SEQUENCE                                                 06600000
CCWWREOT CCW   1,*,X'60',5              WRITE EOT                 M4502 06610000
CCWRDEOT CCW   2,*,X'60',5              READ                      M4502 06620000
*        ENABLE                                                         06630000
CCWENABL CCW   X'27',0,X'60',1          ENABLE                    M4502 06640000
*********************************************************************** 06650000
*                                                                       06660000
*                                                                       06670000
*********************************************************************** 06680000
*********************************************************************** 06690000
*                                                                       06700000
@DATD DSECT                                                      XM4924 06710000
@DATD    DSECT                                                          06720000
@DATEND  EQU   *                                                        06730000
IGE0119I CSECT ,                                                        06740000
@9FF     EQU   ERRORSNO                                                 06750000
@9FE     EQU   ERRORIRR                                                 06760000
@9FD     EQU   ERRORSNO                                                 06770000
@9FC     EQU   ERRORA3X                                                 06780000
@9FB     EQU   ERRORA3X                                                 06790000
@9F9     EQU   NOERITOK                                                 06800000
         END                                                            06810000
