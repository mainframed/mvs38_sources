./  ADD  SSI=61190363,NAME=IKJEHAL1
      TITLE 'IKJEHAL1 - IBM TIME SHARING LISTALC COMMAND'               00050003
IKJEHAL1 CSECT                                                          00100020
*A 785000                                                       SA49892 00104521
*C 800500                                                       SA49892 00109221
*D 800000                                                       SA49892 00109321
*C 391500,402000                                                 A49871 00109521
*C 638500-639500,642500,643500,688500                            A48499 00114021
*C 252500,253500,762500,765500,766200                            A42338 00118521
*A 103600,103700,252100-252499,605600,736100,736200              A42338 00123021
*D 148000-148500,247500,737500,738000,739500,741500,742000,      A42338 00127521
*D 763000                                                        A42338 00132021
*C 586600                                                         M0875 00136521
*  873104                                                         M0883 00141003
*             VS2-3.0 CHANGES                                           00141402
*A 69100,271600,271700,272100-272300,588600,944500-944700       ZA00106 00142002
*A 951500,951600                                                ZA00106 00143002
*D 711701-711845,711851-711857,712088-712172,712181             ZA02196 00145002
*A 711851                                                       ZA02196 00145402
*C 711848                                                       ZA02196 00149002
*          VS2-3.0 MAINTENCE    SU                                      00149403
*0000272340-272360,273500                                       ZM32756 00151003
*0000002000,019600-019700,058100                               @ZA01485 00151403
*           VS2-4.1 RACF CHANGES                               @Z40RSSA 00151504
*0000109300,195100                                             @ZA01485 00151803
*0000252499                                                    @ZA02544 00152303
*0000270510,270520                                             @ZA09151 00152503
         SPACE 2                                                        00152802
*********************************************************************** 00156402
*                                                                     * 00160020
* STATUS     VS2 RELEASE 3 VERSION 0 SU                        @ZA01485 00200003
*                                                                     * 00250020
* FUNCTION --                                                         * 00300020
*    THIS MODULE LISTS THE CURRENTLY ALLOCATED DATA SETS FOR A        * 00400020
*    LOGGED-ON USER OF THE SYSTEM.  DATA SET NAMES ARE EXTRACTED      * 00450020
*    FROM THE DATA SET EXTENSION (DSE) BLOCKS. ALL INFORMATION        * 00500020
*    FOR THE BASIC COMMAND AND FOR THE 'STATUS' KEYWORD IS            * 00550020
*    EXTRACTED FROM THE IN-CORE CHAIN OF DSE'S. DATA FOR THE          * 00600020
*    'HISTORY' KEYWORD IS TAKEN FROM THE DSCB WHICH IS BROUGHT        * 00650020
*    IN BY AN OBTAIN MACRO. A RDJFCB MACRO IS USED TO GET THE         * 00700020
*    VOLID NEEDED TO DO THE OBTAIN. IF THE 'MEMBERS' KEYWORD IS       * 00750020
*    SPECIFIED IN THE COMMAND AND A DATASET WITH PARTITIONED          * 00800020
*    ORGANIZATION IS FOUND TO HAVE THE USER'S USERID AS HIGHEST       * 00850020
*    LEVEL QUALIFIER, THEN IKJEHMEM IS LOADED AND CALLED AND          * 00900020
*    WILL LIST THE DIRECTORY OF THE PDS. IF THE 'SYSNAMES'            * 00950020
*    KEYWORD IS SPECIFIED, ALL SYSTEM GENERATED DSNAMES FOUND         * 01000020
*    ALLOCATED TO THIS SESSION ARE INCLUDED IN THE LISTING.           * 01050020
*    OTHERWISE SYSTEM NAMES ARE IGNORED.                              * 01100020
*                                                                     * 01150020
* ENTRY POINTS --                                                     * 01200020
*         IKJEHAL1 - MAIN ENTRY POINT OF THE PROGRAM                  * 01250020
*         IKJEHWRT - WRITE ROUTINE                                    * 01260020
*         IKJEHERR - ERROR ROUTINE                                    * 01300020
*                                                                     * 01350020
* INPUT -- REGISTER 1 POINTS TO THE COMMAND PROCESSOR PARAMETER LIST  * 01400020
*                                                                     * 01600020
* OUTPUT --                                                           * 01650020
*    DSNAME FOR EACH DSE BLOCK FOUND IN THE CHAIN, WITH THE           * 01700020
*    EXCEPTION OF ANY SYSTEM GENERATED DSNAMES FOUND. ADDITIONAL      * 01750020
*    OUTPUT OF CREATION AND EXPIRATION DATES, PASSWORD PROTECTION     * 01800020
*    STATUS, DATASET ORGANIZATION, DDNAME AND DATASET                 * 01850020
*    DISPOSITIONS, AND MEMBER NAMES IS AVAILABLE IF THE PROPER        * 01900020
*    KEYWORDS ARE SPECIFIED WITH THE COMMAND.                         * 01950020
*        R15 = X'00'  NORMAL RETURN                            @ZA01485 01960003
*        R15 = X'0C'  ERROR RETURN                             @ZA01485 01970003
*                                                                     * 02000020
* EXTERNAL REFERENCES --                                              * 02050020
*         IKJEHMEM - TO LIST PDS DIRECTORY                            * 02100020
*         IKJPARS - TO PARSE COMMAND STRING                           * 02150020
*         IKJPUTL - TO OUTPUT DATA TO TERMINAL                        * 02300020
*                                                                     * 02350020
* EXITS, NORMAL -- RETURN TO THE TERMINAL MONITOR PROGRAM             * 02400020
*                                                                     * 02550020
* EXITS, ERROR -- RETURN TO THE TERMINAL MONITOR PROGRAM              * 02600020
*                                                                     * 02750020
* TABLES/WORK AREAS --                                                * 02800020
*    HDTNY -THE TABLE WHICH CONTAINS THE ACCUMULATED DAYS IN THE      * 02850020
*    YEAR FOR EACH MONTH.  THIS TABLE IS USED TO FIND THE             * 02900020
*    CORRECT MONTH THAT A DAY FALLS IN.  THE NY INDICATES             * 02950020
*    THAT THIS IS FOR A NORMAL YEAR.                                  * 03000020
*    HDTLY SAME AS HDTNY BUT FOR LEAP YEAR.                           * 03050020
*    INITCORE -A WORK AREA HOLDING THE INTERNAL SWITCHES FOR THE      * 03100020
*    PROGRAM, THE LIST FORMS OF THE VARIOUS MACROS, AND               * 03150020
*    THE OUTPUT BUFFER. THIS DSECT ALSO CONTAINS THE REGISTER         * 03200020
*    SAVE AREA.  CORE IS GOTTEN BY A REGISTER GETMAIN.                * 03250020
*    OBTWAD -THE WORKING CORE GOTTEN IF THE 'HISTORY' AND/OR          * 03300020
*    'MEM' KEYWORDS WERE USED. THIS AREA PROVIDES THE WORK            * 03350020
*    AREA FOR THE RDJFCB AND OBTAIN MACROS, THE DCB NEEDED            * 03400020
*    BY RDJFCB AND BY MODULE IKJEHMEM, AND THE PARAMETER LIST         * 03450020
*    FOR THE RDJFCB AND OBTAIN MACROS.                                * 03500020
*                                                                     * 03550020
* ATTRIBUTES -- REENTRANT, READ ONLY, REFRESHABLE                     * 03700020
*                                                                     * 03800020
* CHARACTER CODE DEPENDENCY -- CHARACTER CODE INDEPENDENT             * 03810020
*                                                                     * 03820020
* NOTES -- N/A                                                        * 03850020
*                                                                     * 04300020
*********************************************************************** 04350020
         EJECT                                                          04360020
         ENTRY IKJEHWRT                                                 04400020
         ENTRY IKJEHERR                                                 04450020
         SPACE                                                          04500020
*        REGISTER EQUATES                                               04550020
R0       EQU   0                   REGISTER 0                           04650020
R1       EQU   1                   REGISTER 1                           04700020
R2       EQU   2                   REGISTER 2                           04750020
R3       EQU   3                   REGISTER 3                           04800020
R4       EQU   4                   REGISTER 4                           04850020
R5       EQU   5                   REGISTER 5                           04900020
R6       EQU   6                   REGISTER 6                           04950020
R7       EQU   7                   REGISTER 7                           05000020
R8       EQU   8                   REGISTER 8                           05050020
R9       EQU   9                   REGISTER 9                           05100020
R10      EQU   10                  REGISTER 10                          05150020
R11      EQU   11                  REGISTER 11                          05200020
R12      EQU   12                  REGISTER 12                          05250020
R13      EQU   13                  REGISTER 13                          05300020
R14      EQU   14                  REGISTER 14                          05350020
R15      EQU   15                  REGISTER 15                          05400020
*                                                                       05450020
*        CHARACTER AND VALUE EQUATES                                    05500020
*                                                                       05550020
BLANK    EQU   C' '                BLANK                                05600020
SLASH    EQU   C'/'                SLASH                                05650020
SSP      EQU   1                   SUBPOOL NUMBER                       05750020
OSP      EQU   1                   SUBPOOL NUMBER                       05800020
RT12     EQU   X'0C'               RETURN CODE = 12            @ZA01485 05810003
*        MESSAGE NUMBERS                                                05850020
MSG01    EQU   1                   MESSAGE NUMBER 1                     05950020
MSG02    EQU   2                   MESSAGE NUMBER 2                     06000020
MSG03    EQU   3                   MESSAGE NUMBER 3                     06050020
MSG04    EQU   4                   MESSAGE NUMBER 4                     06100020
MSG05    EQU   5                   MESSAGE NUMBER 5                     06150020
MSG06    EQU   6                   MESSAGE NUMBER 6                     06200020
*        SECOND LEVEL MESSAGE NUMBERS                                   06400020
SECMSG01 EQU   1                   SECOND LEVEL MESSAGE 1               06450020
SECMSG02 EQU   2                   SECOND LEVEL MESSAGE 2               06500020
SECMSG03 EQU   3                   SECOND LEVEL MESSAGE 3               06550020
SECMSG04 EQU   4                   SECOND LEVEL MESSAGE 4               06600020
SECMSG05 EQU   5                   SECOND LEVEL MESSAGE 5               06650020
SECMSG06 EQU   6                   SECOND LEVEL MESSAGE 6               06700020
SECMSG07 EQU   7                   SECOND LEVEL MESSAGE 7               06750020
SECMSG08 EQU   8                   SECOND LEVEL MESSAGE 8               06800020
SECMSG09 EQU   9                   SECOND LEVEL MESSAGE 9               06850020
SECMSG10 EQU   10                  SECOND LEVEL MESSAGE 10              06900020
SECMSG11 EQU   11                  SECOND LEVEL MESSAGE 11      ZA00106 06920002
*        EQUATES                                                        06950020
DSECCNCT EQU   X'08'               ENTRY DYNAMICALLY CONCATENATED       07100020
ONE      EQU   1                   1                                    07150020
DYNDDOFF EQU   2                   OFFSET DDNAME LIST FOR DYNAM ENTRIES 07200020
DDNAMLEN EQU   8                   LENGTH OF DDNAME                     07250020
TERMDDOF EQU   10                  OFFSET TO DDNAME                     07300020
NULLDDOF EQU   10                  OFFSET TO DDNAME                     07350020
SAVELEN  EQU   112                 SIZE OF SAVE AREA                    07400020
RETREGOF EQU   12                  OFFSET TO RETURN REGISTER            07450020
BALREGOF EQU   52                  OFFSET TO BRANCH REGISTER            07500020
*  THE BITS OF THE CONTROL BYTE HAVE THE FOLLOWING MEANING              07600020
STATMSK  EQU   X'80'               STATUS SPECIFIED                     07700020
HISTMSK  EQU   X'40'               HISTORY SPECIFIED                    07750020
MEMMSK   EQU   X'20'               MEMBERS SPECIFIED                    07800020
SYSNMSK  EQU   X'10'               SYSNAMES SPECIFIED                   07850020
HISTSTAT EQU   X'C0'               HISTORY AND STATUS SPECIFIED         07900020
OBTSW    EQU   X'08'               OBTAIN FAILED INDICATOR              07950020
CONCATSW EQU   X'02'               INDICATES DYNAMIC ALLOCATION         08050020
WRITEMSK EQU   X'01'               DATA IN THE BUFFER (TO BE WRITTEN)   08100020
NOBTSW   EQU   X'F7'               FOR TURNING OFF OBTAIN SWITCH        08150020
HISTMEM  EQU   HISTMSK+MEMMSK      HISTORY AND MEMBERS SPECIFIED        08200020
HEXFF    EQU   X'FF'               DUMMY FOR TURNING OFF SWITCHES       08250020
FIRSTKWD EQU   X'01'               TEST IF FIRST KEYWORD NAME WAS FOUND 08350020
LOCNAME  EQU   4                   OFFSET TO LOCATE NAME                08400020
LOCCVOL  EQU   8                   OFFSET TO LOCATE CVOL                08450020
LOCWA    EQU   12                  OFFSET TO LOCATE WORKAREA            08500020
D0       EQU   0                   0                                    08600020
D1       EQU   1                   1                                    08650020
D2       EQU   2                   2                                    08700020
D3       EQU   3                   3                                    08750020
D4       EQU   4                   4                                    08800020
D8       EQU   8                   8                                    08850020
L0       EQU   0                   0                                    08900020
L1       EQU   1                   1                                    08950020
L2       EQU   2                   2                                    09000020
FOUR     EQU   4                   4                                    09050020
L4       EQU   4                   4                                    09100020
L3       EQU   3                   3                                    09150020
L7       EQU   7                   7                                    09300020
L8       EQU   8                   8                                    09350020
D5       EQU   5                   5                                    09400020
D6       EQU   6                   6                                    09450020
D9       EQU   9                   9                                    09550020
D10      EQU   10                  10                                   09650020
D16      EQU   16                  16                          @YL026YB 09660000
D43      EQU   43                  43                          @YL026YB 09670000
D44      EQU   44                  44                          @YL026YB 09680000
D112     EQU   112                 112                         @YL026YB 09690000
FIRSTVOL EQU   6                   OFFSET VOLID IN LOCATE VOLUME LIST   09700020
LOCSAVOF EQU   72                  OFFSET TO LOCAL SAVEAREA             09750020
DSNAMMAX EQU   44                  MAXIMUM SIZE OF DSNAME               09800020
AMPHERND EQU   C'&&'               AMPHERSAND                           09850020
ASTERSK  EQU   C'*'                ASTERISK                             09900020
MAXBUF   EQU   72                  MAXIMUM OUTPUT LINE                  09950020
CRDTOFF  EQU   9                   OFFSET CREATION DATE FIELD IN BUFFER 10000020
STATOFF1 EQU   2                   STATUS WITHOUT HISTORY OFFSET        10050020
NXTBUF   EQU   10                  USED TO BUMP TO NEXT BUFFER SLOT     10100020
MNTHS    EQU   12                  LOOP CONTROL FOR MONTHS              10150020
STATOFF2 EQU   39                  STATUS WITH HISTORY OFFSET           10200020
RETCDOF  EQU   14                  RETURN CODE OFFSET UNPACK AREA       10250020
COMMA    EQU   C','                COMMA                                10300020
PERIOD   EQU   C'.'                PERIOD                               10350020
LPAREN   EQU   C'('                LEFT PARENTHESIS              A42338 10360021
RPAREN   EQU   C')'                RIGHT PARENTHESIS             A42338 10370021
BACKWARD EQU   4                   USED FOR BACK CHAIN DISPLACEMENT     10400020
FORWARD  EQU   8                   USED FOR FORWARD CHAIN DISPLACEMENT  10450020
RETCD12  EQU   12                  RETURN CODE OF 12                    10500020
ZONE     EQU   C'0'                USED FOR ZERO OF ZONE MASK           10550020
EXITCD   EQU   X'87'               USED FOR JFCB DCB EXIT CODE          10600020
CHARU    EQU   C'U'                CHARACTER U                          10650020
SWON     EQU   X'FF'               MASK TURN SWITCH ON                  10660020
SWOFF    EQU   X'00'               MASK TURN SWITCH OFF                 10670020
FLDNO    EQU   X'03'                                           @YL026YB 10673000
DSAPERM  EQU   X'20'          MASK FOR PERMANENT ALLOCATION    @YL026YB 10676000
DUMMY    EQU   X'80'               MASK FOR NULLFILE           @YL026YB 10679000
TERMINAL EQU   X'40'               MASK FOR TERMMINAL FILE     @YL026YB 10682000
DINUSE   EQU   X'40'               MASK FOR IN-USE             @YL026YB 10685000
DYNCON   EQU   X'C0'               MASK FOR DYNAMIC ALLOC.     @YL026YB 10688000
HEX01    EQU   X'01'               HEX VALUE FOR ONE           @YL026YB 10691000
LOCVSAM  EQU   X'21'               FLAG FOR VSAM LOCATE        @YL026YB 10694000
         EJECT                                                          10700020
         SAVE  (14,12)             SAVE REGISTERS                       10750003
         LR    R11,R15             SAVE ENTRY POINT ADDRESS             10800020
         USING OBTWAD,R12          USE R12 FOR MEMBER DSECT             10850020
         USING IKJEHAL1,R11        USE R11 FOR MAIN BASE                10900020
         B     BRID                BRANCH AROUND ID                     10910003
         DC    C'IKJEHAL1'         MODULE ID                            10920003
         DC    X'6049'             DATE  02/18/76              @ZA09151 10930003
BRID     EQU   *                                                        10940003
         LR    R2,R1               SAVE PARAMETER LIST FROM TMP         10950020
         GETMAIN R,LV=INITSIZE,SP=SSP GET CORE                          11000020
         ST    R13,BACKWARD(R1)    SET UP BACKWARD CHAIN                11050020
         ST    R1,FORWARD(R13)     SET UP FORWARD CHAIN                 11100020
         LR    R13,R1              SET UP ADDRESSABILITY FOR WORK SPACE 11150020
         USING INITCORE,R13        USE R13 FOR WORK BASE                11200020
         MVI   STACKSW,SWOFF       TURN STACK SWITCH OFF                11310020
         XC    CTLA(CTLL),CTLA     CLEAR CONTROL AREA                   11350020
         LA    R3,PUTLLIST         ADDRESS OF LIST FOR PUTLINE          11400020
         ST    R3,PUTLCON          -TO WRITE ROUTINE PARAMETER LIST     11450020
         LA    R3,DPUTLINE         ADDRESS OF PUTLINE MACRO LIST FORM   11500020
         ST    R3,DPUTLCON         -TO WRITE ROUTINE PARAMETER LIST     11550020
         LA    R3,CPECB            COMMAND PROCESSOR'S ECB              11600020
         ST    R3,ECBPTR           - TO WRITE ROUTINE PARAMETER LIST    11650020
         XC    RETCD,RETCD         CLEAR RETURN CODE SAVE AREA          11700020
         XC    CPECB,CPECB         CLEAR ECB                            11750020
*  SAVE PARMLIST FROM CPPL IN WORKAREA                                  11800020
         L     R3,CPPLUPT-CPPL(R2) UPT POINTER                          11900020
         ST    R3,UPTPTR           SAVE UPT POINTER                     11950020
         L     R3,CPPLPSCB-CPPL(R2) PSCB PTR                            12000020
         ST    R3,PSCBPTR          SAVE PSCB POINTER                    12050020
         L     R3,CPPLECT-CPPL(R2) ECT POINTER                          12100020
         ST    R3,ECTPTR           SAVE ECT POINTER                     12150020
         LOAD  EP=IKJPUTL          LOAD PUTLINE                         12200020
         ST    R0,PUTLADDR         SAVE PUTLINE ADDRESS                 12250020
         MVC   GETML(LILFS),GETMLMDL MOVE LIST FORMS OF GETMAIN ETC     12300020
         MVI   OUTBUF,BLANK        BLANK                                12350020
         MVC   OUTBUF+D1(L'OUTBUF-D1),OUTBUF -OUTPUT BUFFER             12400020
         MVC   DPUTLINE(LTPUTL),TPUTMDL INITIALIZE PUTLINE              12450020
*  SETUP PARMLIST FOR PARSE, THEN PARSE COMMAND STRING                  12550020
         LA    R3,PUTLLIST         POINT TO SPACE FOR PPL               12650020
         USING PPL,R3              ADDRESSABILITY FOR PPL               12700020
         L     R1,UPTPTR           UPT POINTER                          12850020
         ST    R1,PPLUPT           -TO LIST                             12900020
         L     R1,ECTPTR           ECT POINTER                          12950020
         ST    R1,PPLECT           -TO LIST                             13000020
         L     R1,ECBPTR           CP'S ECB POINTER                     13050020
         ST    R1,PPLECB           -TO LIST                             13100020
         L     R1,PRSEC01          POINTER TO PCL                       13150020
         ST    R1,PPLPCL           -TO LIST                             13200020
         LA    R1,PARDSECT         POINTER TO ANSWER PLACE              13250020
         ST    R1,PPLANS           -TO LIST                             13300020
         L     R1,D0(R2)           POINTER TO COMMAND BUFFER            13350020
         ST    R1,PPLCBUF          -TO LIST                             13400020
         DROP  R3                  PPL NO LONGER NEEDED                 13450020
         LA    R1,PUTLLIST         PARSE PARAMETER LIST                 13500020
         LINK  EP=IKJPARS,MF=(E,(1)) PARSE LISTALC COMMAND              13550020
*                                                                       13600020
*     TEST FOR PARSE RETURN CODES -- IF ATTENTION RETURN WITH CODE  12  13650020
*                                                                       13700020
         B     PARSCODE(R15)       ANALYZE RETURN CODE FROM PARSE       13750020
PARSCODE B     PARSCD00            RC=00 SUCCESSFUL PARSE               13850020
         B     PARSCD04            RC=04 UNABLE TO PROMPT               13900020
         B     PARSCD08            RC=08 ATTENTION - ECB POSTED         13950020
         B     PARSCD12            RC=12 INVALID PARAMETERS             14000020
         B     PARSCD16            RC=16 NO SPACE AVAILABLE             14050020
PARSCD08 LA    R1,RETCD12          RETURN CODE OF 12 FOR TMP            14200020
         ST    R1,RETCD            SAVE IT FOR THE WRAPUP ROUTINE       14250020
         B     WRAPUP00            GO TERMINATE                         14300020
PARSCD12 BAL   R8,CVDREG15         CONVERT REG15 AND SET UP INSERT      14450020
         LA    R1,SECMSG10         SECOND LEVEL MESSAGE 10              14500020
         B     PARSERR1            GO PROCESS ERROR                     14550020
PARSCD16 XC    ERRSECND,ERRSECND   CLEAR SECOND LEVEL                   14600020
         XC    ERRINST1,ERRINST1   CLEAR INSERT                         14620020
         LA    R1,MSG06            MESSAGE 6                            14650020
         B     PARSERR2            SET UP PARMLIST                      14700020
PARSERR1 STH   R1,ERRSECND         SAVE SECOND LEVEL MESSAGE NUMBER     14900020
         LA    R1,MSG05            MESSAGE 5                            14950020
PARSERR2 STH   R1,ERRFIRST         SAVE MESSAGE NUMBER                  15000020
         BAL   R8,ERROUT           GO TO ERROR ROUTINE                  15050020
PARSCD04 MVI   STACKSW,SWON        TURN STACK SWITCH ON                 15060020
         LA    R1,RETCD12          SET RETURN CODE FOR TMP              15100020
         ST    R1,RETCD            SAVE FOR WRAPUP ROUTINE              15150020
         B     WRAPUP00            GO TO TERMINATE ROUTINE              15200020
CVDREG15 CVD   R15,ERRINSRT+D8     CONVERT TO DECIMAL                   15450020
         UNPK  ERRINSRT+D1(L4),ERRINSRT+RETCDOF(D3) UNPACK              15500020
         MVI   ERRINSRT,D2         MOVE IN LENGTH                       15550020
         LA    R1,ERRINSRT         INSERT ADDRESS                       15600020
         ST    R1,ERRINST2         -TO INSERT POINTER                   15650020
         XC    ERRINST1,ERRINST1   NO INSERT FOR 1ST LEVEL MESSAGE      15700020
         BR    R8                  RETURN TO CALLER                     15750020
*     SUCCESSFUL RETURN FROM PARSE  COMES HERE                          15800020
PARSCD00 L     R9,PARDSECT         ADDRESS OF DSECT RETURNED BY PARSE   15850020
         USING IKJPARMD,R9         ADDRESSABILITY PARSE DSECT           15900020
         TM    PSTAT+D1,FIRSTKWD   WAS STATUS SPECIFIED                 15950020
         BNO   PAR04               IF NOT, BRANCH                       16000020
         OI    CNTRL,STATMSK       IF YES, SET SWITCH                   16050020
PAR04    TM    PHIST+D1,FIRSTKWD   WAS HISTORY SPECIFIED                16150020
         BNO   PAR08               IF NOT, BRANCH                       16200020
         OI    CNTRL,HISTMSK       IF YES, SET SWITCH                   16250020
PAR08    TM    PMEM+D1,FIRSTKWD    WAS MEMBERS SPECIFIED                16350020
         BNO   PAR12               IF NOT, BRANCH                       16400020
         OI    CNTRL,MEMMSK        IF YES, SET SWITCH                   16450020
PAR12    TM    PSYSN+D1,FIRSTKWD   WAS SYSNAMES SPECIFIED               16550020
         BNO   PAR16               IF NOT, BRANCH                       16600020
         OI    CNTRL,SYSNMSK       IF YES, SET SWITCH                   16650020
PAR16    LR    R1,R9               PARSE DSECT TO BE RELEASED           16750020
         IKJRLSA PARDSECT          FREE PARSE DSECT CORE                16800020
         DROP  R9                  PARSE DSECT NO LONGER NEEDED         16850020
         EJECT                                                          16900020
*********************************************************************** 16950020
*                                                                     * 17000020
*    THIS ROUTINE INITIALIZES THE PARAMETER LIST OF MAPPING MACRO     * 17050000
*    IEFZB4D0 FOR INPUT TO DYNAMIC INFORMATION RETRIEVAL(DIR). @YL026YB 17350000
*    SVC 99 IS INVOKED AND DIR DATA IS GOTTEN FRON THE DSAB.   @YL026YB 17650000
*                                                                     * 17950020
*********************************************************************** 18000020
         SPACE                                                          18010020
         SR    R2,R2               CLEAR REGISTER 2            @YL026YB 18050000
         SR    R3,R3               CLEAR REGISTER 3            @YL026YB 18060000
         MVI   DYNAMSW,SWOFF       TURN OFF DYNAM SWITCH       @YL026YB 18070000
NXTDSAB  MVI   NOTUSED,SWOFF       TURN OFF NOT-INUSE SWITCH   @YL026YB 18080000
         MVI   ASKSWTCH,SWOFF      SWITCH TO WRITE AS NOT-INUSE         18090000
         MVI   DSADSNAM,BLANK                                  @YL026YB 18100000
         MVC   DSADSNAM+D1(D43),DSADSNAM                       @YL026YB 18110000
         MVI   DSADDNAM,BLANK      BLANK                       @YL026YB 18120000
         MVC   DSADDNAM+D1(L7),DSADDNAM -CLEAR DDNAME BUFFER   @YL026YB 18130000
         XC    DARQBLK,DARQBLK                                 @YL026YB 18140000
         MVI   DABLKLN,DARLNTH     SET LNTH OF BLOCK           @YL026YB 18150000
         MVI   DAVERB,S99VRBIN     SET VERB CODE FOR D.I.R     @YL026YB 18160000
         LA    R5,DAPTR            ADDR OF TEXT POINTERS       @YL026YB 18170000
         ST    R5,DATXTPT          SET ADDR OF TEXT POINTERS   @YL026YB 18180000
         USING S99TUPL,R5                                      @YL026YB 18190000
         USING S99TUNIT,R6                                     @YL026YB 18200000
         LA    R6,DAREQ            REL REQ TEXT UNIT           @YL026YB 18210000
         ST    R6,S99TUPTR         TEXT POINTER                @YL026YB 18220000
         MVC   S99TUNIT(L'TXTREQ),TXTREQ  INIT. TEXT UNIT      @YL026YB 18230000
         LA    R2,D1(R2)                                       @YL026YB 18240000
         STH   R2,REQNUM           STORE REL.REQ. NUMBER       @YL026YB 18250000
         STH   R2,S99TUPAR                                     @YL026YB 18260000
         LA    R5,D4(R5)           NEXT TEXT UNIT              @YL026YB 18270000
         LA    R6,DADSNM           POINT TO DSNAME TEXT UNIT   @YL026YB 18280000
         ST    R6,S99TUPTR         TEXT POINTER                @YL026YB 18290000
         MVC   S99TUNIT(L'TXTDSNM),TXTDSNM  DSNAME TXT UNIT    @YL026YB 18300000
         LA    R5,D4(R5)           NEXT TEXT UNIT              @YL026YB 18310000
         LA    R6,DALIMIT          POINT TO LIMIT TEXT UNIT    @YL026YB 18320000
         ST    R6,S99TUPTR         TEXT POINTER                @YL026YB 18330000
         MVC   S99TUNIT(L'TXTLIMIT),TXTLIMIT  LIMIT TXT UNIT   @YL026YB 18340000
         LA    R5,D4(R5)           NEXT TEXT UNIT              @YL026YB 18350000
         LA    R6,DATTR            POINT TO ATTRIBUTE TXT UNIT @YL026YB 18360000
         ST    R6,S99TUPTR         TEXT POINTER                @YL026YB 18370000
         MVC   S99TUNIT(L'TXTATTR),TXTATTR  ATTRIBUTE TXT UNIT @YL026YB 18380000
         LA    R5,D4(R5)           NEXT TEXT UNIT              @YL026YB 18390000
         LA    R6,DALENTRY         POINT TO LST ENTRY TXT UNIT @YL026YB 18400000
         ST    R6,S99TUPTR         TEXT POINTER                @YL026YB 18410000
         MVC   S99TUNIT(L'TXLENTRY),TXLENTRY  LAST ENTRY TXT UNIT       18420000
         LA    R5,D4(R5)           NEXT TEXT UNIT              @YL026YB 18430000
         LA    R6,DADSTYPE         POINT TO DSTYPE TXT UNIT    @YL026YB 18440000
         ST    R6,S99TUPTR         TEXT POINTER                @YL026YB 18450000
         MVC   S99TUNIT(L'TXTYPE),TXTYPE  POINTER TO DSTYPE TXT UNIT    18460000
         LA    R5,D4(R5)           NEXT TEXT UNIT              @YL026YB 18470000
         LA    R6,DAMEM            POINT TO MEMBER TXT UNIT    @YL026YB 18480000
         ST    R6,S99TUPTR         TEXT POINTER                @YL026YB 18490000
         MVC   S99TUNIT(L'TXTMEM),TXTMEM MEMBER TXT UNIT       @YL026YB 18500000
         LA    R5,D4(R5)           NEXT TEXT UNIT              @YL026YB 18510000
         LA    R6,DADDNM           POINT TO DDNAME TXT UNIT    @YL026YB 18520000
         ST    R6,S99TUPTR         TEXT POINTER                @YL026YB 18530000
         MVC   S99TUNIT(L'TXTDD),TXTDD  DDNAME TEXT UNIT       @YL026YB 18540000
         TM    CNTRL,STATMSK       WAS STATUS SPECIFIED        @YL026YB 18550000
         BNO   LASTPM              NO, PROCESS DSAB            @YL026YB 18560000
         LA    R5,D4(R5)           NEXT TEXT UNIT              @YL026YB 18570000
         LA    R6,DASTAT           POINT TO STATUS TXT UNIT    @YL026YB 18580000
         ST    R6,S99TUPTR         TEXT POINTER                @YL026YB 18590000
         MVC   S99TUNIT(L'TXTSTAT),TXTSTAT  STATUS TEXT UNIT   @YL026YB 18600000
         LA    R5,D4(R5)           NEXT TEXT UNIT              @YL026YB 18610000
         LA    R6,DANDISP          PT. TO NORMAL DISP TXT UNIT @YL026YB 18620000
         ST    R6,S99TUPTR         TEXT POINTER                @YL026YB 18630000
         MVC   S99TUNIT(L'TXNDISP),TXNDISP  NORMAL DISP. TXT UNIT       18640000
         LA    R5,D4(R5)           NEXT TEXT UNIT              @YL026YB 18650000
         LA    R6,DACDISP          PT. TO COND. TXT UNIT       @YL026YB 18660000
         ST    R6,S99TUPTR         TEXT POINTER                @VS07242 18670000
         MVC   S99TUNIT(L'TXCDISP),TXCDISP  POINTER TO COND. DISP       18680000
         OI    S99TUPTR,S99TUPLN   TURN ON BIT FOR LAST PTR    @YL026YB 18690000
         B     LASTPM1             GO PROCESS DSAB             @YL026YB 18700000
LASTPM   OI    S99TUPTR,S99TUPLN   TURN ON BIT FOR LAST PTR    @YL026YB 18710000
LASTPM1  LA    R4,DARQBLK          POINTER TO REQUEST BLK      @YL026YB 18720000
         ST    R4,DAPARM           STORE REQ. BLK PTR          @YL026YB 18730000
         OI    DAPARM,S99RBPND     TURN ON REQ. BLK BIT        @YL026YB 18740000
         LA    R1,DAPARM           POINTER TO REQ. BLK PTR     @YL026YB 18750000
         USING S99RBP,R1                                       @YL026YB 18760000
         L     R5,S99RBPTR                                     @YL026YB 18770000
         USING S99RB,R5                                        @YL026YB 18780000
         L     R5,S99TXTPP                                     @YL026YB 18790000
         USING S99TUPL,R5                                      @YL026YB 18800000
         L     R6,S99TUPTR                                     @YL026YB 18810000
         USING S99TUNIT,R6                                     @YL026YB 18820000
         DYNALLOC                  PROCESS DSAB                @YL026YB 18830000
         LTR   R15,R15             TEST RETURN CODE            @YL026YB 18840000
         BZ    NEXTSTEP            NORMAL PROCESSING           @YL026YB 18850000
         LA    R1,MSG03            MESSAGE 3                            19300020
         STH   R1,ERRFIRST         TO PARAMETER LIST FOR ERROUT         19350020
         XC    ERRSECND,ERRSECND   NO SECOND LEVEL MESSAGE              19400020
         XC    ERRINST1,ERRINST1   NO FIRST LEVEL INSERT                19450020
         BAL   R8,ERROUT           GO TO ERROR ROUTINE                  19500020
         MVI   RETCD+3,RT12        SET RC                      @ZA01485 19510003
         B     WRAPUP00            GO TO NORMAL TERMINATION             19550020
NEXTSTEP BAL   R14,DIR                                         @YL026YB 19551000
         LA    R7,DSADSNAM                                     @YL026YB 19552000
         LH    R4,S99TULNG                                     @YL026YB 19553000
         STH   R4,DSADSLNG                                     @YL026YB 19554000
         BCTR  R4,R0                                           @YL026YB 19555000
         EX    R4,MOVE22                                       @YL026YB 19556000
         BAL   R14,DIR                                         @YL026YB 19557000
         MVC   DYNAMCNT(D2),S99TUPAR                           @YL026YB 19558000
         BAL   R14,DIR                                         @YL026YB 19559000
         MVC   DSACNTRL(D1),S99TUPAR                           @YL026YB 19560000
         BAL   R14,DIR                                         @YL026YB 19561000
         MVC   LSTENTRY(D1),S99TUPAR                           @YL026YB 19562000
         BAL   R14,DIR                                         @YL026YB 19563000
         MVC   DSTYPE(D1),S99TUPAR                             @YL026YB 19564000
         BAL   R14,DIR                                         @YL026YB 19565000
         MVC   DSAMEM(D8),S99TUPAR                             @YL026YB 19566000
         MVC   DMEMLNT(D2),S99TULNG                            @YL026YB 19567000
         BAL   R14,DIR                                         @YL026YB 19568000
         LA    R7,DSADDNAM                                     @YL026YB 19569000
         LH    R4,S99TULNG                                     @YL026YB 19570000
         LTR   R4,R4                                           @YL026YB 19571000
         BZ    SKIPMVC                                         @YL026YB 19572000
         BCTR  R4,R0                                           @YL026YB 19573000
         EX    R4,MOVE22                                       @YL026YB 19574000
SKIPMVC  LA    R3,D1                                           @YL026YB 19575000
         TM    CNTRL,STATMSK                                   @YL026YB 19576000
         BNO   START01                                         @YL026YB 19577000
         BAL   R14,DIR                                         @YL026YB 19578000
         MVC   DSASTAT(D1),S99TUPAR                            @YL026YB 19579000
         BAL   R14,DIR                                         @YL026YB 19580000
         MVC   DSANDISP(D1),S99TUPAR                           @YL026YB 19581000
         BAL   R14,DIR                                         @YL026YB 19582000
         MVC   DSACDISP(D1),S99TUPAR                           @YL026YB 19583000
START01  CR    R2,R3               IS REG2 GREATER THAN ONE    @YL026YB 19584000
         BH    BSCROUT             YES,PROCESSING NEXT ENTRY   @YL026YB 19585000
         B     DSEOK                                           @YL026YB 19586000
DIR      LA    R5,D4(R5)                                       @YL026YB 19587000
         L     R6,S99TUPTR                                     @YL026YB 19588000
         BR    14                                              @YL026YB 19589000
MOVE22   MVC   D0(D0,R7),S99TUPAR                              @YL026YB 19590000
*                                                                       19600020
*     NORMAL PROCESSING BEGINS HERE                                     19650020
*                                                                       19700020
DSEOK    TM    CNTRL,HISTMEM+SYSNMSK IS CORE NEEDED                     19850020
         BZ    NOMEMREQ            NO PROCESS NORMAL                    19900020
         BAL   R8,LGM02            GO ISSUE GETMAIN                     19950020
         TM    CNTRL,MEMMSK        ARE MEMBER NAMES TO BE LISTED        20050020
         BNO   NOMEMREQ            BRANCH AROUND SET UP IF NOT          20100020
         LOAD  EP=IKJEHMEM         LOAD MEMBERS ROUTINE                 20250020
         ST    R0,MEMMOD           SAVE ADDRESS OF MEMBERS ROUTINE      20350020
*********************************************************************** 20450020
*                                                                     * 20500020
*        MAIN PROCESSING ROUTINE                                      * 20550000
*                                                                     * 20600020
*********************************************************************** 20650020
NOMEMREQ LA    R7,OUTBUF           BUFFER ADDRESS                       20750020
         LR    R14,R7              INDICATE A SKIP                      20800020
         BAL   R8,WRITE            GO TO WRITE ROUTINE                  20850020
         TM    CNTRL,HISTSTAT      CHECK FOR HISTORY OR STATUS          20900020
         BZ    SKIPHDNG            NEITHER, SKIP HEADING                20950020
         TM    CNTRL,HISTMSK       WAS HISTORY SPECIFIED                21000020
         BNO   NXCHECK             NO, CHECK STATUS                     21050020
         MVC   OUTBUF(L'TITLE1),TITLE1 MOVE HEADING TO BUFFER           21100020
         LA    R7,L'TITLE1(R7)     POINT BEYOND HISTORY HEADING         21150020
NXCHECK  TM    CNTRL,STATMSK       WAS STATUS SPECIFIED                 21200020
         BZ    WRITHDNG            NO, GO WRITE HEADING                 21250020
         MVC   D0(L'TITLE2,R7),TITLE2 MOVE HEADING TO BUFFER            21300020
         LA    R7,L'TITLE2(R7)     POINT AT END OF DATA                 21350020
WRITHDNG LR    R14,R7              SETUP FOR WRITING HEADING            21450020
         LA    R7,OUTBUF           POINT AT BUFFER                      21500020
         BAL   R8,WRITE            GO WRITE BUFFER                      21550020
         LR    R14,R7              SETUP FOR LINESKIP                   21600020
         BAL   R8,WRITE            GO SKIP A LINE                       21650020
*********************************************************************** 21750020
*                                                                     * 21800020
*        THIS ROUTINE IS THE BASIC LISTALC FUNCTION. THE ROUTINE      * 21850020
*        CHECKS THE DSAB TO SEE IF DATA SET IS IN-USE. IF NOT         * 21900000
*        IT CHECKS TO SEE IF IT IS PERMANENTLY ALLOCATED.             * 21980000
*        IF NOT PERMANENTLY ALLOCATED THE DDNAME IS SAVED.            * 22060000
*        THE DSNAME IS THEN  CHECKED TO SEE IF IT IS A SYSTEM         * 22140000
*        GENERATED NAME AND IF SO IS PROCESSED ONLY IF 'SYSNAMES' IS  * 22220000
*        SPECIFIED.                                                   * 22300000
*                                                                     * 22410020
*********************************************************************** 22450020
SKIPHDNG EQU   *                   ALIAS FOR BSCROUT                    22460020
BSCROUT  TM    DSACNTRL,DINUSE     IS DATA SET IN USE          @YL026YB 22500000
         BO    BNORM               YES GO TO NORMAL PROCESSING          22550000
         TM    DSACNTRL,DSAPERM    IS ENTRY PERMANENTLY ALLOCATED       22600000
         BO    DYNAMRT             YES GO SAVEY DDNAME         @YL026YB 22650000
         MVI   NOTUSED,SWON        TURN ON NOT IN-USE SWITCH   @YL026YB 22700000
BNORM    CLI   DSTYPE,DUMMY        SEE IF DSNAME IS NULLFILE   @YL026YB 22750000
         BE    NULLFRT             YES, GO TO NULLFILE HANDLING ROUTINE 22800000
         CLI   DSTYPE,TERMINAL     SEE IF DSNAME IS ASTERISK   @YL026YB 22850000
         BE    TERMFRT             YES, PROCESS AS A TERMINAL FILE      22900000
         TM    CNTRL,SYSNMSK       WAS SYSNAMES SPECIFIED               23000020
         BO    BSCRT00A            YES, SKIP TEST FOR SYSTEM NAME       23050020
*********************************************************************** 23150020
*                                                                     * 23200020
*   THE FOLLOWING CODE WILL TEST FOR SYSTEM GENERATED NAMES.          * 23250020
*   THE TEST MAKES USE OF (AND IS DEPENDENT ON) THE FACT THAT         * 23300020
*        1.    THE ZONE FIELD OF ALL NUMERICS IS THE SAME             * 23350020
*        2.    THE NUMERIC PORTION OF A BYTE IS BINARY ZERO FOR THE   * 23400020
*              CHARACTER ZERO (0).                                    * 23450020
*   THE TEST IS PREFORMED BY ANDING A MASK OF THE CONSTANT CHARACTERS * 23500020
*   AND CHARACTER ZEROS FOR THE NUMERIC FIELDS OF DATE AND TIME,      * 23550020
*   AGAINST THE DSNAME BEING TESTED.  THE RESULT IS THEN EXCLUSIVE    * 23600020
*   OR'ED AGAINST THE ORIGINAL MASK.  RESULT SHOULD BE ZERO.          * 23650020
*                                                                     * 23700020
*********************************************************************** 23750020
         MVC   SYSNM(L'SYSNMMDL),SYSNMMDL MOVE MASK TO WORK AREA        23800020
         NC    SYSNM(L'SYSNMMDL),DSADSNAM AND MASK AGAINST DSNAME       23850000
         XC    SYSNM(L'SYSNMMDL),SYSNMMDL EX-OR PRODUCT AGAINST MASK    23900000
         BZ    NXDSEBLK            IF SYSNAME, PROCESS NEXT BLOCK       23950000
         CLI   DSADSNAM,AMPHERND   IS NAME SYSTEM ASSIGNED     @YL026YB 24000000
         BE    NXDSEBLK            YES, PROCESS NEXT DSAB BLK  @YL026YB 24050000
         B     BSCRT00             NO, PROCESS NORMALLY                 24100000
BSCRT00A CLI   DSADSNAM,AMPHERND   DOES DSNAME BEGINS WITH AMPHERSAND   24150000
         BNE   BSCRT00             NO, GO PROCESS NORMALLY              24250020
         LA    R2,OBTDCB           DCB ADDRESS                          24300020
         USING IHADCB,R2           ADDRESSABILITY DCB                   24350020
         MVC   DCBDDNAM(DDNAMLEN),DSADDNAM MOVE DDNAME FROM DSE TO DCB  24400000
         LA    R1,RDJL             LIST FORM RDJFCB                     24450020
         RDJFCB ((R2)),MF=(E,(R1)) ISSUE READ JFCB                      24500020
         DROP  R2                  DCB NO LONGER NEEDED                 24550020
         MVC   OUTBUF(DSNAMMAX),OBTDSNAM MOVE DSNAME FROM JFCB          24600020
         LA    R7,OUTBUF           BUFFER ADDRESS                       24650020
         LA    R14,DSNAMMAX(R7)    END OF BUFFER ADDRESS                24700020
         B     BSCRT00B            GO CHECK FOR KEYWORDS                24800020
BSCRT00  LA    R7,OUTBUF           POINTER TO BUFFER                    24900020
         CLI   NOTUSED,SWON        CHECK FOR NOT IN-USE        @YL026YB 24950000
         BE    DYNAMRY             YES,PROCESS '*' INDICATOR   @YL026YB 24980000
BSCRT11  XR    R1,R1               CLEAR FOR INSERT            @YL026YB 25010000
         LH    R1,DSADSLNG         GET LENGTH OF DSNAME        @YL026YB 25040000
         LA    R3,DSADSNAM         POINTER TO DSNAME           @YL026YB 25070000
         BCTR  R1,R0               DECREMENT LENGTH FOR MOVE            25100020
         EX    R1,MOVE             MOVE DSNAME TO BUFFER                25150020
         LA    R14,D1(R7,R1)       POINT AT END OF DATA                 25200020
         CLI   NOTUSED,SWON        CHECK FOR NOT IN-USE        @YL026YB 25210000
         BNE   CONT9               CONTINUE NORMALLY           @YL026YB 25212000
         LR    R7,R6               STARTING ADDRESS OF BUF     @YL026YB 25214000
CONT9    CLC   DMEMLNT(D2),ZERO1   IS MEMBER ALLOCATED         @YL026YB 25216000
         BE    BSCRT00B            NO, SKIP MEMBER PROCESSING    A42338 25218000
*        PROCESS MEMBER NAMES                                         * 25220000
         LA    R3,DSAMEM           POINT TO MEMBER NAME          A42338 25222000
         MVI   D0(R14),LPAREN      MOVE IN LEFT PARENTHESIS      A42338 25224000
         LA    R14,D1(R14)         POINT PAST PARENTHESIS        A42338 25226000
         LH    R4,DMEMLNT          LENGTH OF MEMBER NAME       @YL026YB 25228000
         BCTR  R4,R0               DECREMENT FOR EXECUTE       @YL026YB 25230000
         EX    R4,MOVE1            PUT MEMBER NAME IN BUFFER   @YL026YB 25232000
         AR    R14,R4              POINT PAST MEMBER NAME      @YL026YB 25234000
         MVI   D2(R14),RPAREN      MOVE IN CLOSING PARENTHESIS   A42338 25236000
         LA    R14,D3(R14)         POINT PAST DATA             @ZA02544 25249903
BSCRT00B BAL   R8,WRITE            GO WRITE THE NAME             A42338 25250021
         TM    CNTRL,HISTMEM       CHECK FOR HISTORY OR MEMBERS  A42338 25350021
         BZ    BSCRT01             NEITHER, CHECK STATUS                25400020
         BAL   R8,OBTRT            OBTAIN DSCB                          25450020
         TM    CNTRL,HISTMSK       WAS HISTORY REQUESTED                25550020
         BNO   BSCRT01             NO, CHECK STATUS                     25600020
         L     R15,VCONHIST        ADDRESS OF HISTORY ROUTINE           25650020
         BALR  R14,R15             GO TO HISTORY ROUTINE                25700020
BSCRT01  TM    CNTRL,STATMSK       WAS STATUS REQUESTED                 25800020
         BNO   BSCRT02             NO, CHECK WRITE SWITCH               25850020
         L     R15,VCONSTAT        ADDRESS OF STATUS ROUTINE            25900020
         BALR  R14,R15             GO TO STATUS ROUTINE                 25950020
BSCRT02  TM    CNTRL,WRITEMSK      IS WRITE SWITCH ON                   26050020
         BNO   BSCRT02A            NO, GO CHECK NEXT OPTION             26100020
         LA    R7,OUTBUF           POINT AT BUFFER                      26150020
         LA    R14,MAXBUF(R7)      POINT AT END OF BUFFER               26200020
         BAL   R8,WRITE            GO WRITE BUFFER TO TERMINAL          26250020
         NI    CNTRL,HEXFF-WRITEMSK TURN OFF WRITE SWITCH               26300020
BSCRT02A TM    CNTRL,OBTSW         CHECK FOR OBTAIN SWITCH              26400020
*                                                                     * 26450020
*  IF THE OBTAIN SWITCH IS TURNED ON, IT MEANS THAT THE OBTAIN ISSUED * 26500020
*  FOR HISTORY INFORMATION FAILED AND NO DATA WAS SUPPLIED FOR THE    * 26550020
*  HISTORY OPTION. THE ERROR WAS NOT PROCESSED UNTIL NOW IN           * 26600020
*  ORDER TO ALLOW STATUS INFORMATION TO BE PROCESSED IF REQUESTED.    * 26650020
*                                                                     * 26750020
         BNO   BSCRT03             NO, GO CHECK FOR MEMBERS             26800020
         NI    CNTRL,NOBTSW        TURN OFF OBTAIN SWITCH               26850020
         L     R15,OBTAINRC        GET OBTAIN RETURN CODE               26900020
         LA    R15,D0(R15)         CLEAR HIGH ORDER BYTE                26950020
         TM    OBTAINRC,HEXFF      TEST FOR LOCATE FAILURE              27000020
         BNO   OBTCODE(R15)        NO, ANALYZE OBTAIN RETURN CODE       27050020
         TM    CNTRL,HISTMSK       WAS HISTORY REQUESTED       @ZA09151 27060003
         BNO   TESTMEM             NO, GO CHECK FOR MEMBERS    @ZA09151 27070003
         LA    R1,MSG01            MESSAGE 1                            27100020
         STH   R1,ERRFIRST         INTO LIST FOR ERROR HANDLER          27150020
         CLC   JESNAME,OBTDSNAM    TEST FOR SPOOL DS            ZA00106 27200002
         BE    SPOOLNM             YES, SEND SPOOL MSG          ZA00106 27208002
         LA    R1,SECMSG05         SECOND LEVEL MESSAGE 5               27216002
         B     GOON                BRANCH AROUND SPL MSG        ZA00106 27224002
SPOOLNM  LA    R1,SECMSG11         SECOND LEVEL MESSAGE 11      ZA00106 27232002
         STH  R1,ERRSECND          INTO LIST FOR ERROR HANDLER  ZM32756 27234003
         B    MSGOUT      BRANCH AROUND CONVERT OF RETURN CODE  ZM32756 27236003
GOON     EQU   *                                                ZA00106 27240002
         STH   R1,ERRSECND         INTO LIST FOR ERROR HANDLER          27250020
         BAL   R8,CVDREG15         CONVERT RETURN CODE                  27300020
MSGOUT   EQU   *                                                ZM32756 27310003
         BAL   R8,ERROUT           GO WRITE ERROR MESSAGE       ZM32756 27350003
         B     BSCRT04             CHECK FOR MORE DSE BLOCKS            27400020
OBTCODE  DS    F                   RC=00 HANDLED ELSEWHERE              27500020
         B     NOTDA               RC=04 VOLUME NOT MOUNTED OR NOT DA   27550020
         B     NODSCB              RC=08 DSCB NOT ON THIS VOLUME        27600020
         B     OBTIOERR            RC=12 I/O ERROR DURING OBTAIN        27650020
         B     OBTIOERR            RC=16 ERROR IN OBTAIN WORK AREA      27700020
         B     OBTIOERR            RC=20 DSCB OUT OF VTOC EXTENT        27750020
NOTDA    LA    R1,SECMSG01         SECOND LEVEL MESSAGE 1               27950020
         B     OBTERRRT            GO PROCESS ERROR                     28000020
NODSCB   LA    R1,SECMSG02         SECOND LEVEL MESSAGE 2               28100020
         B     OBTERRRT            GO PROCESS ERROR                     28150020
OBTIOERR BAL   R8,CVDREG15         CONVERT RETURN CODE                  28300020
         LA    R1,SECMSG04         SECOND LEVEL MESSAGE 4               28350020
         B     OBINSERT            SET UP REST OF MESSAGE               28400020
OBTERRRT XC    ERRINST1(L'ERRINST1+L'ERRINST2),ERRINST1 CLEAR BYTES     28450020
OBINSERT STH   R1,ERRSECND         INTO LIST FOR ERROR ROUTINE          28500020
*  EITHER MEMBERS OR HISTORY OR BOTH FAILED                             28510020
         TM    CNTRL,HISTMSK       HISTORY OPTION ON                    28700020
         BO    HISTFAIL            IF ONES HISTORY FAILED               28750020
         B     TESTMEM             WAS MEMBERS ON                       28800020
HISTFAIL LA    R1,MSG01            MESSAGE 1                            28850020
         STH   R1,ERRFIRST         INTO LIST FOR ERROR ROUTINE          28900020
         BAL   R8,ERROUT           WRITE MESSAGE                        28950020
         TM    LOCSW,HEXFF         WAS LOCATE ISSUED                    29000020
         BNO   TESTMEM             NO, TEST MEMBERS OPTION              29050020
         MVI   LOCSW,D0            YES, TURN OFF SWITCH                 29100020
         B     MSGDONE             CHECK FOR MORE DSE ENTRIES           29150020
TESTMEM  TM    CNTRL,MEMMSK        IS MEMBERS OPTION ON                 29200020
         BNO   MSGDONE             CHECK FOR MORE DSE ENTRIES           29250020
         LA    R1,MSG04            MESSAGE 4                            29300020
         STH   R1,ERRFIRST         INTO LIST FOR ERROR ROUTINE          29350020
         BAL   R8,ERROUT           WRITE MESSAGE                        29400020
MSGDONE  B     BSCRT04             CHECK FOR MORE DSE ENTRIES           29450020
BSCRT03  TM    CNTRL,MEMMSK        WAS MEMBERS REQUESTED                29800020
         BNO   BSCRT04             NO, PROCESS NEXT ENTRY               29850020
         L     R15,VCONMEM         ADDRESS OF MEMBERS ROUTINE           29900020
         BALR  R14,R15             GO TO MEMBERS ROUTINE                29950020
BSCRT04  CLI   LSTENTRY,SWOFF      ARE THERE MORE DSABS        @YL026YB 30050000
         BNE   WRAPUP              NO, GO FINISH               @YL026YB 30100000
         LA    R7,OUTBUF           SETUP TO SKIP A LINE                 30150020
         LR    R14,R7              NULL LINE                            30200020
         BAL   R8,WRITE            GO TO WRITE ROUTINE                  30250020
         LH    R2,REQNUM           RELATIVE REQUEST NUMBER     @YL026YB 30300000
         B     NXTDSAB             GO PROCESS NEXT DSAB        @YL026YB 30380000
NXDSEBLK CLI   LSTENTRY,SWOFF      ARE THERE MORE DSABS        @YL026YB 30460000
         BNE   WRAPUP              YES, GO TO NORMAL TERMINATION        30540000
         LH    R2,REQNUM           RELATIVE REQUEST NUMBER     @YL026YB 30620000
         B     NXTDSAB             GO PROCESS NEXT DSAB        @YL026YB 30700000
         EJECT                                                          30800020
*********************************************************************** 30900020
*                                                                     * 30950020
*     THE NORMAL TERMINATION ROUTINE FIRST CHECKS TO SEE IF ANY DATA- * 31000000
*     NEED TO BE UNALLOCATED IF SO, A MESSAGE IS PUT TO THE TERMINAL  * 31050000
*     WITH THE COUNT, FOLLOWED BY THE DDNAMES IF STATUS WAS REQUESTED.* 31100020
*                                                                     * 31150020
*********************************************************************** 31200020
WRAPUP   CLC   DYNAMCNT(D2),ZERO1  WERE ANY DSETS TO  BE FREED @YL026YB 31250000
         BE    WRAPUP00            NO, GO TERMINATE            @YL026YB 31300000
         LH    R2,DYNAMCNT         PICK UP COUNT                        31350020
         CVD   R2,NULLCNT          CONVERT COUNT TO DECIMAL             31400020
         LA    R7,OUTBUF           POINT AT BUFFER                      31450020
         UNPK  D0(L3,R7),NULLCNT+D6(D2) UNPACK COUNT INTO BUFFER        31500020
         OI    D2(R7),ZONE         SET CORRECT ZONE                     31550020
         CLI   D0(R7),ZONE         ELIMINATE LEADING ZEROES             31600020
         BNE   DYNAMRT4            NONE, GO GET MESSAGE                 31650020
         MVC   D0(D3,R7),D1(R7)    SHIFT ZERO AWAY                      31700020
         CLI   D0(R7),ZONE         CHECK NEXT PLACE FOR ZERO            31750020
         BE    DYNAMRT5            YES, GO GET RID OF IT                31800020
         LA    R7,D3(R7)           NO, INDICATE PROPER DISPLACEMENT     31850020
DYNAMRT3 MVC   D0(L'DYNAMMSG,R7),DYNAMMSG PUT TEXT IN BUFFER            31900020
         LA    R14,L'DYNAMMSG(R7)  BUMP POINTER TO END OF DATA          31950020
         LA    R7,OUTBUF           START OF BUFFER                      32000020
         BAL   R8,WRITE            WRITE BUFFER                         32050020
         B     DYNAMRT6            GO CHECK STATUS                      32100020
DYNAMRT4 LA    R7,D4(R7)           PROPER DISPLACEMENT                  32200020
         B     DYNAMRT3            GO PUT OUT MESSAGE                   32250020
DYNAMRT5 MVC   D0(L2,R7),D1(R7)    SHIFT EXTRA ZERO OFF                 32350020
         LA    R7,D2(R7)           PROPER DISPLACEMENT                  32400020
         B     DYNAMRT3            GO COMPLETE MESSAGE                  32450020
DYNAMRT6 TM    CNTRL,STATMSK       WAS STATUS REQUESTED                 32550020
         BNO   WRAPUP00            NO, GO TERMINATE                     32600020
         LA    R9,DYNAMSAV         ADDRESS OF FIRST DYNAM ENTRY         32650000
         LH    R5,DDCNT            COUNT OF RE-USE DDNAME      @YL026YB 32670000
DYNAMRT7 MVC   OUTBUF+DYNDDOFF(DDNAMLEN),D0(R9) MOVE DDNAME TO @YL026YB 32690000
*                                               BUFFER         @YL026YB 32710000
         LA    R7,OUTBUF           POINT AT BUFFER                      32750020
         LA    R14,DDNAMLEN+DYNDDOFF(R7) END OF DATA POINTER            32800020
         BAL   R8,WRITE            GO WRITE BUFFER                      32850020
         LA    R9,D8(R9)           POINT TO NEXT DDNAME        @YL026YB 32900000
         BCT   R5,DYNAMRT7         CHECK FOR MORE ENTRIES      @YL026YB 32950000
WRAPUP00 CLI   ASKSWTCH,SWON        CHECK FOR NOT IN-USE       @YL026YB 33000000
         BNE   WRAPUP99            GO TERMINATE                @YL026YB 33050000
         LA    R7,OUTBUF           POINT AT BUFFER             @YL026YB 33100000
         MVC   D0(L'ASKMSG,R7),ASKMSG PUT TEXT IN BUFFER       @YL026YB 33150000
         LA    R14,L'ASKMSG(R7) BUMP POINTER TO IN OF DATA     @YL026YB 33200000
         BAL   R8,WRITE            GO TO WRITE ROUTINE         @YL026YB 33250000
WRAPUP99 LA    R7,OUTBUF           SETUP TO SKIP A LINE        @YL026YB 33300000
         LR    R14,R7              NULL LINE                            33400020
         BAL   R8,WRITE            GO TO WRITE ROUTINE                  33450020
WRAPUPT  NC    OBTWA,OBTWA         TEST FOR OBTAIN WORK AREA            33500020
         BZ    WRAPUP01            NO, SKIP FREEMAIN                    33550020
*  FREE WORK CORE GOTTEN FOR OBTAIN AND JFCB WORKAREAS                  33650020
         LA    R2,OBTWA            POINTER TO CORE TO BE FREE           33750020
         LA    R1,FREEML           FREEMAIN PARAMETER LIST              33800020
         FREEMAIN E,A=(R2),LV=OBTWAL,SP=OSP,MF=(E,(1)) FREE CORE        33850020
WRAPUP01 NC    MEMMOD,MEMMOD       WAS MEMBER MODULE LOADED             34000020
         BZ    WRAPUP02            NO, SKIP DELETE                      34050020
         DELETE EP=IKJEHMEM        DELETE MEMBERS MODULE                34100020
WRAPUP02 DELETE EP=IKJPUTL         DELETE PUTLINE                       34200020
*  NOW CHECK IF AN ERROR HAS OCCURRED.  IF SO, THE STACK MUST BE        34210020
*  FLUSHED AND THE INPUT QUEUE CLEARED.                                 34220020
         CLI   STACKSW,SWON        IS STACK SWITCH ON                   34230020
         BNE   STACKOK             NO ERROR, END NORMALLY               34240020
         LA    R1,UPTPTR           POINT TO I/O PARAMETER LIST          34242020
         LA    R2,STACKPRM         POINT TO STACK PARM BLOCK            34244020
         ST    R2,PUTLADDR         POINT TO STACK PARM BLOCK            34246020
         STACK DELETE=ALL,MF=(E,(1)) FLUSH STACK                        34248020
         TCLEARQ INPUT             CLEAR ANYTHING TYPED AHEAD           34248420
STACKOK  EQU   *                   NORMAL RETURN FROM HERE              34248820
         L     R8,RETCD            GET RETURN CODE                      34250020
         LR    R1,R13              ADDRESS OF CORE TO BE FREED          34300020
         L     R13,D4(R13)         RESTORE ADDRESS OF CALLERS SAVEAREA  34350020
         FREEMAIN R,LV=INITSIZE,A=(1),SP=SSP FREE CORE                  34400020
         LR    R15,R8              PUT RETURN CODE IN REGISTER 15       34450020
         RETURN (14,12),T,RC=(15)  RETURN                               34500020
*                                                                       34550020
*********************************************************************** 35300020
*                                                                     * 35350020
*  GETMAIN ROUTINE FOR MEMBERS, SYSNAMES AND HISTORY WORK AREA        * 35400020
*                                                                     * 35450020
*********************************************************************** 35500020
LGM02    LA    R1,GETML            GETMAIN PARAMETER LIST               35600020
         LA    R2,OBTWA            ADDRESS OF CORE GOES TO OBTWA        35650020
         GETMAIN A=(R2),SP=OSP,LV=OBTWAL,MF=(E,(1)) GET CORE            35700020
         B     GMRC(R15)           ANALYZE GETMAIN RETURN CODE          35750020
GMRC     B     GMOK                RC = 0, GETMAIN OK                   35800020
         B     GMNOTOK             RETURN CODE=4, NO CORE AVAILABLE     35850020
GMOK     L     R12,OBTWA           ADDRESS OF CORE JUST GOTTEN          36000020
         ST    R12,OBTJFCBX        ADDRESS OF JFCB WORK AREA            36050020
         LA    R2,OBTDCB           ADDRESS OF DCB IN DSECT              36100020
         USING IHADCB,R2           ADDRESSABILITY DCB                   36150020
         MVC   OBTMACS(LOLFS),OLFS MOVE MACRO LIST FORMS TO DSECT       36200020
         LA    R15,OBTDCBXL        ADDRESS OF DCB EXIT LIST             36250020
         ST    R15,DCBEXLST        SET UP EXIT LIST ADDRESS             36300020
         MVI   OBTJFCBX,EXITCD     SET JFCB DCB EXIT CODE               36350020
         DROP  R2                  DCB NO LONGER NEEDED                 36400020
         BR    R8                  RETURN TO CALLER                     36450020
GMNOTOK  LA    R1,MSG02            MESSAGE 2                            36850020
         STH   R1,ERRFIRST         INTO LIST FOR ERROR HANDLER          36900020
         XC    ERRSECND,ERRSECND   CLEAR SECOND LEVEL MESSAGE           36950020
         LA    R1,ERRINSRT         PICK UP ADDRESS OF FIRST INSERT      37000020
         ST    R1,ERRINST1         PUT IN ERROR LIST                    37050020
         MVI   ERRINSRT,L'NHISTORY LENGTH OF INSERT                     37100020
         TM    CNTRL,HISTMSK       WAS HISTORY OPTION ON                37150020
         BNO   CKMEM               NO, CHECK MEMBERS OPTION             37200020
         NI    CNTRL,HEXFF-HISTMSK YES, TURN OFF SWITCH                 37250020
         MVC   ERRINSRT+D1(L'NHISTORY),NHISTORY HISTORY INSERT          37300020
         BAL   R8,ERROUT           GO WRITE MESSAGE                     37350020
CKMEM    TM    CNTRL,MEMMSK        IS MEMBERS OPTION ON                 37400020
         BNO   CKSYSNM             NO, CHECK SYSNAMES                   37450020
         NI    CNTRL,HEXFF-MEMMSK  TURN OFF MEMBERS OPTION              37500020
         MVC   ERRINSRT+D1(L'NMEMBERS),NMEMBERS MEMBERS INSERT          37550020
         BAL   R8,ERROUT           GO WRITE MESSAGE                     37600020
CKSYSNM  TM    CNTRL,SYSNMSK       IS SYSNAMES OPTION ON                37650020
         BNO   GMEND               IF NOT, EXIT                         37700020
         NI    CNTRL,HEXFF-SYSNMSK YES, TURN OFF SYSNAMES OPTION        37750020
         MVC   ERRINSRT+D1(L'NSYSNAME),NSYSNAME SYSNAMES INSERT         37800020
         MVI   ERRINSRT,L'NSYSNAME LENGTH OF INSERT                     37850020
         BAL   R8,ERROUT           GO WRITE MESSAGE                     37900020
GMEND    B     NOMEMREQ            GO PROCESS                           37950020
*********************************************************************** 38500020
*                                                                     * 38550020
*    THIS ROUTINE GETS CONTROL WHEN A NULLFILE IS FOUND. A MESSAGE IS * 38600020
*    WRITTEN OUT INDICATING THE NULLFILE IS PRESENT.  IF STATUS       * 38650020
*    WAS REQUESTED, THE DDNAME IS INCLUDED.                           * 38700020
*                                                                     * 38750020
*********************************************************************** 38800020
NULLFRT  LA    R7,OUTBUF           POINT AT BUFFER                      38850020
         MVC   D0(L'NULLFILE,R7),NULLFILE MOVE NULLFILE TO BUFFER       38900020
         LA    R14,L'NULLFILE(R7)  POINT AT END OF DATA                 38950020
         TM    CNTRL,STATMSK       WAS STATUS REQUESTED                 39000020
         BNO   NULLFRT1            NO, GO WRITE OUT BUFFER              39050020
         MVC   NULLDDOF(DDNAMLEN,R7),DSADDNAM MOVE DDNAME TO BUFFER     39100000
         LA    R14,D2+DDNAMLEN(R14) POINT PAST DDNAME            A49871 39150021
NULLFRT1 BAL   R8,WRITE            GO WRITE BUFFER                      39200020
         B     BSCRT04             GO CHECK FOR MORE BLOCKS             39250020
*********************************************************************** 39450020
*                                                                     * 39500020
*     THIS ROUTINE GETS CONTROL WHEN AN ASTERISK (*) IS FOUND FOR THE * 39550020
*     DSNAME IN THE DSE ENTRY. THIS IS AN INDICATION THAT IT IS A     * 39600020
*     TERMINAL FILE AND A MESSAGE IS WRITTEN TO INDICATE THIS. IF     * 39650020
*     STATUS INFORMATION WAS REQUESTED, THE DDNAME WILL BE INCLUDED.  * 39700020
*                                                                     * 39800020
*********************************************************************** 39850020
TERMFRT  LA    R7,OUTBUF           POINT AT BUFFER                      39900020
         MVC   D0(L'TERMFILE,R7),TERMFILE MOVE TERMFILE TO BUFFER       39950020
         LA    R14,L'TERMFILE(R7)  POINT AT END OF DATA                 40000020
         TM    CNTRL,STATMSK       WAS STATUS REQUESTED                 40050020
         BNO   TERMFRT1            NO, GO WRITE BUFFER                  40100020
         MVC   TERMDDOF(DDNAMLEN,R7),DSADDNAM MOVE DDNAME TO BUFFER     40150000
         LA    R14,D2+DDNAMLEN(R14) END OF DATA POINTER          A49871 40200021
TERMFRT1 BAL   R8,WRITE            GO WRITE BUFFER                      40300020
         B     BSCRT04             GO CHECK FOR MORE BLOCKS             40350020
*********************************************************************** 40550020
*                                                                     * 40600020
*     THIS ROUTINE GETS CONTROL IF AN AVAILABLE ENTRY IS FOUND IN     * 40650020
*     THE CHAIN OF DSE ENTRIES. IF IT IS THE FIRST TIME THE ROUTINE   * 40700020
*     HAS BEEN ENTERED, A SWITCH IS TURNED ON AND A COUNTER IS SET    * 40750020
*     TO ONE. THE ADDRESS OF THE FIRST DYNAM ENTRY IS SAVED. IF THIS  * 40800020
*     IS NOT THE FIRST TIME INTO THIS ROUTINE, THE COUNTER IS BUMPED  * 40850020
*     BY ONE AND AN EXIT IS TAKEN.                                    * 40900020
*                                                                     * 40950020
*********************************************************************** 41000020
DYNAMRT  LA    R3,DSADDNAM         ADDRESS OF DDNAME           @YL026YB 41050000
         CLI   DYNAMSW,SWON        IS THIS THE FIRST ENTRY     @YL026YB 41080000
         BE    DYNAMRT1            NO,GO TO NEXT ENTRY         @YL026YB 41110000
         SR    R5,R5               CLEAR REG 5                 @YL026YB 41140000
         LA    R4,DYNAMSAV         POINT TO DDNAMES            @YL026YB 41170000
         MVI   DYNAMSW,SWON        TURN SWITCH ON              @YL026YB 41200000
         B     DYNAMRX             GO STORE DDNAME             @YL026YB 41230000
DYNAMRT1 L     R4,DSAV             POINTER TO NEXT DDNAME ENTRY         41260000
         LH    R5,DDCNT            PUT DDNAME COUNT IN REG 5   @YL026YB 41290000
         LA    R5,D1(R5)           COUNT OF DDNAME ENTRIES     @YL026YB 41320000
DYNAMRX  MVC   D0(D8,R4),D0(R3)    STORE DDNAME                @YL026YB 41350000
         LA    R4,D8(R4)           POINT TO SPACE FOR NEXT DDNAME       41380000
         ST    R4,DSAV             STORE POINTER               @YL026YB 41410000
         STH   R5,DDCNT            STORE DDNAME COUNT          @YL026YB 41440000
         B     BNORM               RETURN TO NORMAL PROCESSING @YL026YB 41470000
DYNAMRY  MVI   D0(R7),ASTERSK      PUT '*' IN 1ST POSITION     @YL026YB 41500000
         LR    R6,R7               SAVE ADRESS IN R6           @YL026YB 41530000
         LA    R7,D1(R7)           BUMP POINTER FOR DSNAME     @YL026YB 41560000
         B     BSCRT11             GO WRITE NAME               @YL026YB 41590000
*                                  -LIST DATA SET INFORMATION           41700020
*********************************************************************** 41850020
*                                                                     * 41900020
*   THIS ROUTINE IS ENTERED IF HISTORY OR MEMBERS WAS REQUESTED       * 41950020
*   ON THE COMMAND.  IT MAKES THE NECESSARY CONCATENATION TESTS AND   * 42000020
*   ISSUES A LOCATE TO GET A VOLSER FOR THE OBTAIN IF THE             * 42050020
*   HISTORY OPTION WAS REQUESTED.  IF IT IS NOT                       * 42100020
*   CONCATENATED, A RDJFCB IS ISSUED FOR THE VOLSER.  IF THE OBTAIN   * 42150020
*   FOR THE DSCB FAILS, A SWITCH IS SET (OBTSW--ALSO SET IF LOCATE    * 42200020
*   FAILS), AND CONTROL IS RETURNED TO THE MAINLINE.  THE SWITCH IS   * 42250020
*   CHECKED IN THE MAINLINE AND A MESSAGE IS PUT OUT TO THE TERMINAL  * 42300020
*   INDICATING THE REQUESTED INFORMATION CANNOT BE SUPPLIED.          * 42350020
*                                                                     * 42400020
*********************************************************************** 42450020
OBTRT    STM   R0,R9,LOCSAVOF(R13) SAVE REGISTERS LOCALLY               42550020
         CLC   DSADDNAM(L'BLANKS),BLANKS IS DDNAME BLANKS      @YL026YB 42600000
         BE    HISTLOC             YES, MUST BE CONCATENATED            42650000
         TM    DSACNTRL,DYNCON     SEE IF DYNAMICATENATION BIT IS ON    42700000
         BO    HISTDCON            YES, CHECK FURTHUR                   42750020
         NI    CNTRL,HEXFF-CONCATSW TURN OFF CONCATENATION SWITCH       42800020
HISTGO   LA    R2,OBTDCB           ADDRESS OF THE DCB IN THE DSECT      42950020
         USING IHADCB,R2           ADDRESSABILITY DCB                   43000020
         MVC   DCBDDNAM,DSADDNAM   PUT DDNAME IN DCB           @YL026YB 43050000
         LA    R1,RDJL             RDJFCB LIST FORM IN DSECT            43100020
         RDJFCB  ((R2)),MF=(E,(R1)) ISSUE READ JFCB                     43150020
         DROP  R2                  DCB NO LONGER NEEDED                 43200020
         LA    R15,JFCBVOLS        ADDESS OF VOLID                      43450020
         CLC   JFCBVOLS(D4),ZERO   CHECK FOR ZERO VOLSER                43460000
         BE    HISTLOC             GO DO A LOCATE                       43470000
         ST    R15,OBTVOL          -TO OBTAIN LIST                      43500020
HISTOBTN LA    R15,OBTDSNAM        ADDRESS OF THE DATA SET NAME         43600020
         ST    R15,OBTDSN          -TO OBTAIN LIST                      43650020
         LA    R15,OBTWORKA        ADDRESS OF 350 BYTE WORK AREA        43700020
         ST    R15,OBTWKA          -TO OBTAIN LIST                      43750020
         OBTAIN  OBTCLST           ISSUE OBTAIN                         43850020
         LTR   R15,R15             TEST RETURN CODE                     43950020
         BZ    OBTOKGO             ZERO, GO PROCESS INFORMATION         44000020
         L     R15,VCONVHS                                     @YL026YB 44100000
         BALR  R14,R15                                         @YL026YB 44150000
         B     BSCRT01             GO CHECK NEXT ENTRY                  44200020
HISTDCON TM    CNTRL,CONCATSW      CHECK CONCATENATION SWITCH           44350020
         BO    HISTLOC             IF ON, GO ISSUE LOCATE FOR VOLUMES   44400020
         OI    CNTRL,CONCATSW      IF OFF, TURN IT ON                   44450020
         B     HISTGO              GO PROCESS THIS ENTRY NORMALLY       44500020
HISTLOC  TM    CNTRL,HISTMSK       WAS HISTORY BIT ON                   44650020
         BNO   HISTLOC1            IF NOT DO NOT DO LOCATE              44700020
         XR    R15,R15             CLEAR REGISTER FOR INSERT            44750020
         LH    R15,DSADSLNG        GET LENGTH OF DSNAME        @YL026YB 44800000
         MVI   OBTDSNAM,BLANK      BLANK OUT AREA TO CONTAIN            44850020
         MVC   OBTDSNAM+D1(L'OBTDSNAM-D1),OBTDSNAM -DSNAME              44900020
         LA    R7,OBTDSNAM         POINT AT AREA TO HOLD DSNAME         44950020
         LA    R3,DSADSNAM         POINT AT DSNAME             @YL026YB 45000000
         BCTR  R15,R0              DECREMENT LENGTH FOR EXECUTE         45050020
         EX    R15,MOVE            MOVE DSNAME                          45100020
         MVC   LOCLIST(L'LOCLIST),CAM1 INITIALIZE LOCATE LIST           45150020
         LA    R1,OBTDSNAM         POINT AT DSNAME                      45200020
         ST    R1,LOCLIST+LOCNAME  PUT INTO CAMLST                      45250020
         XR    R1,R1               ZERO REGISTER                        45300020
         ST    R1,LOCLIST+LOCCVOL  INDICATE NO CVOL                     45350020
         LA    R1,LOCAREA          POINT AT LOCATE WORK AREA            45400020
         ST    R1,LOCLIST+LOCWA    PUT ADDRESS INTO CAMLST              45450020
         LOCATE LOCLIST            ISSUE LOCATE                         45550020
         LTR   R15,R15             TEST RETURN CODE                     45650020
         BZ    HISLOCOK            IF ZERO, GO DO OBTAIN                45700020
         L     R15,VCONVHS         ADDRESS OF VSAM HISTORY ROUT.        45750000
         BALR  R14,R15             GO TO VSAM ROUTINE          @YL026YB 45820000
         B     BSCRT01             GO CHECK STATUS                      45900020
HISTLOC1 XC    DS1DSORG-OBTWAD(L2,R12),ZERO CLEAR DSORG FIELD           46000020
         B     BSCRT01             GO CHECK STATUS                      46050020
HISLOCOK LA    R15,LOCAREA+FIRSTVOL POINT AT FIRST VOLSER IN LIST       46250020
         ST    R15,OBTCLST+D8      PUT IN OBTAIN LIST                   46300020
         B     HISTOBTN            GO COMPLETE LIST AND ISSUE OBTAIN    46350020
OBTOKGO  LM    R0,R9,LOCSAVOF(R13) RESTORE REGISTERS                    46500020
         BR    R8                  RETURN                               46550020
         EJECT                                                          46650020
*********************************************************************** 46750020
*                                                                     * 46800020
*   INPUT TO THIS ROUTINE IS THE BUFFER ADDRESS IN REGISTER 7         * 46850020
*   AND THE END OF BUFFER ADDRESS IN REGISTER 14.                     * 46900020
*   THE RETURN ADDRESS IS IN REGISTER 8.                              * 46950020
*   THE OUTPUT BUFFER IS CLEARED AND RETURNED IN REGISTER 7.          * 47000020
*   TRAILING BLANKS WILL BE ELIMINATED.                               * 47050020
*                                                                     * 47100020
*   IMPORTANT---THIS ROUTINE REQUIRES NO BASE REGISTER. KEEP IT THAT  * 47150020
*   WAY SO THAT IKJEHMEM CAN USE IT.                                  * 47200020
*                                                                     * 47250020
*********************************************************************** 47300020
IKJEHWRT EQU   *                   WRITE ROUTINE EXTERNAL NAME          47310020
WRITE    STM   R0,R9,LOCSAVOF(R13) SAVE REGISTERS LOCALLY               47350020
         LR    R2,R14              GET END OF DATA POINTER              47400020
         SR    R2,R7               CALCULATE DATA LENGTH                47450020
         LA    R1,FOUR             DECREMENT BUFFER POINTER BY 4        47500020
         SR    R7,R1               -SO R7 WILL POINT AT LL FIELD        47550020
         LA    R2,FOUR(R2)         BUMP LL BY FOUR FOR LL AND OFFSET    47600020
         STH   R2,D0(R7)           STORE LENGTH                         47650020
         XC    D2(L2,R7),D2(R7)    CLEAR OFFSET BYTE                    47700020
         LR    R6,R7               PUT OUTPUT LINE POINTER IN PROPER    47750020
         LA    R1,PARMLSTL         POINT IN FRONT OF BUFFER             47800020
         SR    R7,R1               CONTANING VARIOUS ADCONS             47850020
         LM    R1,R5,D0(R7)        SET UP REGISTERS FOR PUTLINE         47900020
         L     R15,PARMLSTL-FOUR(R7) GET ENTRY POINT.                   47950020
         PUTLINE PARM=(R2),UPT=(R3),ECT=(R4),ECB=(R5),OUTPUT=((R6),    X48000020
               DATA),ENTRY=(15),MF=(E,(1)) PUTLINE                      48050020
         LA    R7,PARMLSTL+FOUR(R7) POINT BACK TO DATA BUFFER           48550020
         MVI   D0(R7),BLANK        BLANK FIRST BYTE OF BUFFER           48650020
         MVC   D1(L'OUTBUF-L1,R7),D0(R7) CLEAR BUFFER                   48700020
         LM    R0,R9,LOCSAVOF(R13) RESTORE CALLERS REGISTER             48750020
         BR    R8                  RETURN TO CALLER                     48800020
         EJECT                                                          48950020
*********************************************************************** 49050020
*                                                                     * 49100020
*  THIS ROUTINE IS USED TO OUTPUT ERROR MESSAGES.  INPUT IS A THREE   * 49200020
*  WORD LIST CALLED ERRPARM WHICH CONTAINS INFORMATION AS FOLLOWS-    * 49250020
*        BYTE 1 AND 2 - THE RELATIVE POSITION OF THE FIRST            * 49350020
*                       LEVEL MESSAGE IN THE MESSAGE CSECT            * 49400020
*        BYTE 3 AND 4 - THE RELATIVE POSITION OF THE SECOND           * 49450020
*                       LEVEL MESSAGE IN THE MESSAGE CSECT            * 49500020
*        SECOND WORD  - POINTS TO TEXT TO BE INSERTED AFTER THE       * 49550020
*                       FIRST SEGMENT OF FIRST LEVEL MESSAGE          * 49600020
*        THIRD WORD   - POINTS TO TEXT TO BE INSERTED AFTER THE       * 49650020
*                       FIRST SEGMENT OF SECOND LEVEL MESSAGE         * 49700020
*  REGISTER 8 IS THE RETURN REGISTER                                  * 49750020
*                                                                     * 49800020
*********************************************************************** 49850020
IKJEHERR EQU   *                   EXTERNAL NAME FOR ERROR ROUTINE      49860020
ERROUT   STM   R0,R9,LOCSAVOF(R13) SAVE LOCAL REGISTERS                 49900020
         MVI   STACKSW,SWON        TURN STACK SWITCH ON                 49910020
         LA    R7,OUTBUF+D4        POINT AT PROPER BUFFER OFFSET        49950020
         LH    R1,ERRPARM          RELATIVE MESSAGE NUMBER              50000020
         BCTR  R1,R0               DECREMENT POSITION COUNT             50050020
         SLL   R1,D3               MULTIPLY BY 8 GIVES INDEX INTO TABLE 50100020
         L     R6,MSGCSECT         ADDRESS OF MESSAGE CSECT             50150020
         LA    R5,D0(R6,R1)        TABLE ENTRY FOR PROPER MESSAGE       50200020
         LH    R1,D0(R5)           LENGTH OF MESSAGE                    50250020
         LA    R2,D4(R1)           UP LENGTH FOR LL AND OFFSET FIELDS   50300020
         STH   R2,OUTBUF           SAVE LENGTH                          50350020
         XC    OUTBUF+D2(L2),OUTBUF+D2 CLEAR OFFSET FIELD               50400020
         LH    R4,D2(R5)           OFFSET TO MESSAGE IN CSECT           50450020
         LA    R3,D0(R6,R4)        POINTER TO MESSAGE IN CSECT          50500020
         BCTR  R1,R0               DECREMENT COUNT FOR EXECUTE          50550020
         EX    R1,MOVE             MOVE MESSAGE TO BUFFER               50600020
         LA    R7,D1(R1,R7)        POINT BEYOND MESSAGE                 50650020
         L     R4,ERRINST1         INSERTION POINTER                    50700020
         LTR   R4,R4               TEST FOR ZERO                        50750020
         BZ    SEGCHECK            IF ZERO, CHECK FOR SEGMENTATION      50800020
         XR    R1,R1               ZERO REGISTER                        50850020
         IC    R1,D0(R4)           GET LENGTH OF INSERT DATA            50900020
         LA    R3,D1(R4)           POINT AT INSERT DATA                 50950020
         LH    R2,OUTBUF           GET LENGTH                           51000020
         LA    R2,D0(R2,R1)        INCREMENT COUNT                      51050020
         STH   R2,OUTBUF           SAVE LENGTH AGAIN                    51100020
         BCTR  R1,R0               DECREMENT COUNT FOR EXECUTE          51150020
         EX    R1,MOVE             MOVE INSERT DATA TO BUFFER           51200020
         LA    R7,D1(R1,R7)        POINT BEYOND MESSAGE                 51250020
SEGCHECK LH    R4,D4(R5)           PICKUP OFFSET OF SEGMENT             51350020
         LTR   R4,R4               TEST FOR ZERO                        51400020
         BZ    SECLVTST            CHECK FOR SECOND LEVEL MESSAGE       51450020
         LA    R4,D0(R4,R6)        POINT AT SEGMENT TABLE               51500020
SEGLOOP  LH    R1,D0(R4)           PICK UP LENGTH OF SEGMENT            51600020
         LTR   R1,R1               TEST LENGTH                          51650020
         BZ    SECLVTST            CHECK FOR SECOND LEVEL MESSAGE       51700020
         LH    R2,OUTBUF           GET LENGTH                           51750020
         LA    R2,D0(R2,R1)        INCREMENT COUNT                      51800020
         STH   R2,OUTBUF           SAVE LENGTH AGAIN                    51850020
         LH    R3,D2(R4)           PICKUP OFFSET TO SEGMENT             51900020
         LA    R3,D0(R3,R6)        CALCULATE THE ADDRESS                51950020
         BCTR  R1,R0               DECREMENT FOR EXECUTE                52000020
         EX    R1,MOVE             MOVE SEGMENT TO BUFFER               52050020
         LA    R7,D1(R7,R1)        POINT AT END OF DATA IN BUFFER       52100020
         LA    R4,D4(R4)           NEXT SEGMENT SLOT IN TABLE           52150020
         B     SEGLOOP             PROCESS ANOTHER SEGMENT              52200020
*  THIS ROUTINE CHECKS FOR SECOND LEVEL MESSAGES,                       52210020
*  IF NONE IT PROCESSES FIRST LEVEL                                     52220020
SECLVTST LA    R1,D1               SEGMENT COUNT IS 1                   52550020
         ST    R1,MSGPARM1+D4      PUT IN PARM LIST                     52600020
         LA    R1,OUTBUF           POINT TO OUTPUT BUFFER               52650020
         ST    R1,MSGPARM1+D8      SAVE POINTER TO FIRST LEVEL MESSAGE  52700020
         LH    R1,ERRSECND         CHECK FOR SECOND LEVEL MESSAGE       52750020
         LTR   R1,R1               TEST FOR ZERO                        52800020
         BZ    NOSECLVL            NO SECOND LEVEL PUT OUT FIRST ONLY   52850020
         BCTR  R1,R0               DECREMENT POSITION COUNT             52900020
         LA    R0,D6               TABLE ENTRY SIZE                     52950020
         MR    R0,R0               OFFSET INTO TABLE CALCULATED         53000020
         LH    R4,D6(R5)           OFFSET TO SECOND LEVEL TABLE         53050020
         LA    R4,D0(R4,R6)        ADDRESS OF TABLE                     53100020
         LA    R5,D0(R4,R1)        OFFSET TO ENTRY IN TABLE             53150020
         LA    R7,SECBUFF+D4       POINT TO SECOND BUFFER OFFSET        53200020
         LH    R1,D0(R5)           GET LENGTH OF ENTRY                  53250020
         LA    R2,D4(R1)           UP LENGTH FOR LL AND OFFSET FIELDS   53300020
         STH   R2,SECBUFF          SAVE LENGTH OF FIRST SEGMENT         53350020
         XC    SECBUFF+D2(L2),SECBUFF+D2 CLEAR OFFSET FIELD             53400020
         LH    R4,D2(R5)           OFFSET TO MESSAGE IN CSECT           53450020
         LA    R3,D0(R6,R4)        ADDRESS OF MESSAGE IN CORE           53500020
         BCTR  R1,R0               DECREMENT LENGTH FOR EXECUTE         53550020
         EX    R1,MOVE             MOVE MESSAGE SEGMENT TO BUFFER       53600020
         LA    R7,D1(R1,R7)        BUMP BUFFER POINTER                  53650020
         MVC   SECBUFF+D10(L2),OUTBUF+D10 SET ID FOR SECOND LEVEL       53700020
         L     R4,ERRINST2         INSERT POINTER FOR SECOND LEVEL      53750020
         LTR   R4,R4               TEST FOR ZERO                        53800020
         BZ    SECSEGCK            IF ZERO, CHECK SEGMENTATION          53850020
         XR    R1,R1               ZERO REGISTER                        53900020
         IC    R1,D0(R4)           GET LENGTH OF INSERT DATA            53950020
         LH    R2,SECBUFF          SEGMENT LENGTH                       54000020
         LA    R2,D0(R2,R1)        UPDATE LENGTH OF BUFFER MESSAGE      54050020
         STH   R2,SECBUFF          SAVE LENGTH AGAIN                    54100020
         LA    R3,D1(R4)           POINT AT DATA                        54150020
         BCTR  R1,R0               DECREMENT COUNT FOR EXECUTE          54200020
         EX    R1,MOVE             MOVE DATA TO BUFFER                  54250020
         LA    R7,D1(R1,R7)        UPDATE BUFFER POINTER                54300020
SECSEGCK LA    R1,D1               SET SEGMENT COUNT TO ONE             54400020
         ST    R1,MSGPARM2+D4      PUT IT INTO PARM LIST                54450020
         LA    R1,SECBUFF          BUFFER ADDRESS                       54500020
         ST    R1,MSGPARM2+D8      -INTO LIST                           54550020
         LA    R1,MSGPARM2         CHAIN MESSAGE LEVEL                  54600020
         ST    R1,MSGPARM1         -PARAMETER LISTS                     54650020
         XC    MSGPARM2,MSGPARM2   END OF CHAIN LINK ADDRESS            54700020
         MVI   MSGPARM2,HEXFF      END OF LIST FLAG IN CHAIN FIELD      54750020
         LH    R4,D4(R5)           OFFSET TO SEGMENT TABLE              54800020
         LTR   R4,R4               TEST FOR ZERO                        54850020
         BZ    PUTMSG              IF ZERO, PUT OUT MESSAGE             54900020
         LA    R4,D0(R4,R6)        ADDRESS OF SEGMENT TABLE             54950020
         LH    R1,D0(R4)           LENGTH OF SEGMENT                    55000020
SECSEGLP LTR   R1,R1               IS THIS THE LAST SEGMENT             55100020
         BZ    PUTMSG              YES, GO WRITE MESSAGE                55150020
         LH    R2,SECBUFF          SEGMENT LENGTH                       55200020
         LA    R2,D0(R2,R1)        UPDATE LENGTH OF BUFFER MESSAGE      55250020
         STH   R2,SECBUFF          RE-STORE IT                          55300020
         LH    R3,D2(R4)           OFFSET TO SEGMENT                    55350020
         LA    R3,D0(R3,R6)        ADDRESS OF MESSAGE                   55400020
         BCTR  R1,R0               DECREMENT COUNT FOR EXECUTE          55450020
         EX    R1,MOVE             MOVE INTO BUFFER                     55500020
         LA    R7,D1(R7,R1)        UPDATE BUFFER OFFSET                 55550020
         LA    R4,D4(R4)           GET NEXT SEGMENT                     55600020
         B     SECSEGLP            GO PROCESS THIS SEGMENT              55650020
NOSECLVL XC    MSGPARM1,MSGPARM1   CLEAR SECOND LEVEL POINTER           55750020
         MVI   MSGPARM1,HEXFF      PUT IN END OF CHAIN MARK             55800020
PUTMSG   LM    R3,R5,UPTPTR        LOAD UPT, ECT, ECB ADDRESSES         55900020
         LA    R6,MSGPARM1         POINT TO MESSAGE PARM LISTS          55950020
         LA    R2,DPUTLINE         LIST FORM OF MACRO                   56000020
         LA    R1,PUTLLIST         LIST FOR E FORM OF MACRO             56050020
         L     R15,PUTLADDR        ADDRESS OF PUTLINE ROUTINE           56100020
         PUTLINE PARM=(R2),UPT=(R3),ECT=(R4),ECB=(R5),                 X56200020
               OUTPUT=((R6),MULTLVL),ENTRY=(15),MF=(E,(1)) PUTLINE      56250020
         LM    R0,R9,LOCSAVOF(R13) RESTORE LOCAL REGISTERS              56300020
         BR    R8                  RETURN                               56350020
         EJECT                                                          56400020
*                                                                       56450020
*  CONSTANTS AND LIST FORMS OF MACROS                                   56500020
*                                                                       56600020
TPUTMDL  PUTLINE MF=L              LIST FORM OF PUTLINE                 56700020
ENDTPUT  EQU   *                   END OF PUTLINE EXPANSION             56750020
LTPUTL   EQU   ENDTPUT-TPUTMDL     LENGTH OF PUTLINE EXPANSION          56800020
OLFS     EQU   *                   BEGINNING OF LIST FORMS FOR OBTWAD   56850020
RDJMDL   RDJFCB  (,(INPUT)),MF=L   LIST FORM READ JFCB                  56900020
         SPACE                                                          56950020
CLSTMDL  CAMLST  SEARCH,1,2,3      OBTAIN CAMLST                        57000020
         SPACE                                                          57050020
DCBMDL   DCB   DSORG=PS,MACRF=R,RECFM=F,BLKSIZE=256,KEYLEN=8,LRECL=256,C57100020
               DDNAME=DUMMY        DCB                                  57150020
         SPACE                                                          57200020
OPENMDL  OPEN  (,),MF=L            LIST FORM OF OPEN                    57250020
         SPACE                                                          57300020
READMDL  READ  RMDECB,SF,,,'S',,,MF=L LIST FORM OF READ                 57350020
         SPACE                                                          57400020
CLOSEMDL CLOSE (,),MF=L            MODEL FOR THE LIST FORM OF CLOSE     57450020
LOLFS    EQU   *-OLFS              LENGTH OF AREA TO MOVE               57550020
         SPACE                                                          57600020
ILFS     EQU   *                   BEGINNING OF LIST FORMS FOR INITCORE 57700020
GETMLMDL GETMAIN  EC,MF=L          LIST FORM OF GETMAIN                 57750020
FREEMMDL FREEMAIN  E,MF=L          LIST FORM OF FREEMAIN                57850020
LILFS    EQU   *-ILFS              LENGTH OF LIST FORMS FOR INITCORE    58000020
         SPACE                                                          58050020
PRSEC01  DC    V(IKJEHPRM)         ADDRESS OF PARSE CONTROL CSECT       58450020
MSGCSECT DC    V(IKJEHALM)         ADDRESS OF MESSAGE CSECT             58500020
VCONHIST DC    V(IKJEHHST)         ADDRESS OF HISTORY CSECT             58550020
VCONSTAT DC    V(IKJEHSTS)         ADDRESS OF STATUS CSECT              58600020
VCONMEM  DC    V(IKJEHMMR)         ADDRESS OF MEMBER CSECT              58650020
VCONVHS  DC    V(IKJEHVHS)         ADDR. OF VSAM HIST. CSECT   @YL026YB 58660000
CAM1     CAMLST NAME,1,,3          LOCATE CAMLST                  M0875 58690000
ZERO     DC    F'0'                USED FOR SETTING ZEROS               58720000
MOVE1    MVC   D0(D0,R14),D0(R3)   USED FOR EXECUTE INST.      @YL026YB 58750000
MOVE     MVC   D0(L1,R7),D0(R3)    USED FOR EXECUTE MOVES               58800020
BLANKS   DC    C'        '         BLANKS FOR COMPARISON                58850020
JESNAME  DC    C'JES'              COMPARISON FOR SPOOL DS      ZA00106 58870002
SYSNMMDL DC    C'SYS00000.T000000.' TEST FOR SYSNAMES MASK              58900020
NHISTORY DC    C'HISTORY'          HISTORY INSERT                       58902020
NMEMBERS DC    C'MEMBERS'          MEMBERS INSERT                       58904020
NSYSNAME DC    C'SYSNAMES'         SYSNAMES INSERT                      58906020
NULLFILE DC    C'NULLFILE'         NULLFILE                             58910020
DYNAMMSG DC    C'DATA SETS MUST BE UNALLOCATED BEFORE NEW ALLOCATIONS  *58920000
               CAN BE DONE'        MESSAGE                     @YL026YB 58927000
ASKMSG   DC    C'* THIS DATA SET IS NOT IN-USE' MESSAGE        @YL026YB 58934000
TERMFILE DC    C'TERMFILE'         TERMINAL FILE                        58942020
TITLE1   DC    C'--DSORG--CREATED---EXPIRES---SECURITY'  HEADING        58944020
TITLE2   DC    C'--DDNAME---DISP--' HEADING                             58946020
*        CONSTANTS FOR DYNAMIC INFORMATION RETRIEVAL           @YL026YB 58950000
TXTREQ   DS    0CL6                RELATIVE REQUEST TXTUNIT    @YL026YB 58951000
         DC    X'000F'             KEY FOR REL. REQ            @YL026YB 58952000
         DC    X'0001'             NUMBER OF REL. REQ.         @YL026YB 58953000
         DC    X'0002'             LENGTH OF REQUEST           @YL026YB 58954000
TXTDSNM  DS    0CL6                DSNAME TEXT UNIT            @YL026YB 58955000
         DC    X'0005'             KEY FOR DSNAME              @YL026YB 58956000
         DC    X'0001'             NUMBER OF DSNAMES           @YL026YB 58957000
         DC    X'002C'             LENGTH OF DSNAME            @YL026YB 58958000
TXTLIMIT DS    0CL6                LIMIT OF TEXT UNIT          @YL026YB 58959000
         DC    X'000B'             KEY FOR LIMIT               @YL026YB 58960000
         DC    X'0001'             NUMBER OF LIMITS            @YL026YB 58961000
         DC    X'0002'             LENGTH OF LIMIT             @YL026YB 58962000
TXTATTR  DS    0CL6                ATTRIBUTE TXT UNIT          @YL026YB 58963000
         DC    X'000C'             KEY FOR ATTRIBUTE           @YL026YB 58964000
         DC    X'0001'             NUMBER                      @YL026YB 58965000
         DC    X'0001'             LENGTH                      @YL026YB 58966000
TXLENTRY DS    0CL6                LAST ENTRY TXT UNIT         @YL026YB 58967000
         DC    X'000D'             KEY                         @YL026YB 58968000
         DC    X'0001'             NUMBER                      @YL026YB 58969000
         DC    X'0001'             LENGTH                      @YL026YB 58970000
TXTYPE   DS    0CL6                DATA SET TYPE TXT UNIT      @YL026YB 58971000
         DC    X'000E'             KEY                         @YL026YB 58972000
         DC    X'0001'             NUMBER                      @YL026YB 58973000
         DC    X'0001'             LENGTH                      @YL026YB 58974000
TXTMEM   DS    0CL6                                            @YL026YB 58975000
         DC    X'0006'             KEY                         @YL026YB 58976000
         DC    X'0001'             NUMBER                      @YL026YB 58977000
         DC    X'0008'             LENGTH                      @YL026YB 58978000
TXTDD    DS    0CL6                DDNAME TXT UNIT             @YL026YB 58979000
         DC    X'0004'             KEY                         @YL026YB 58980000
         DC    X'0001'             NUMBER                      @YL026YB 58981000
         DC    X'0008'             LENGTH                      @YL026YB 58982000
TXTSTAT  DS    0CL6                STATUS TXT UNIT             @YL026YB 58983000
         DC    X'0007'             KEY                         @YL026YB 58984000
         DC    X'0001'             NUMBER                      @YL026YB 58985000
         DC    X'0001'             LENGTH                      @YL026YB 58986000
TXNDISP  DS    0CL6                NORMAL DISP TXT UNIT        @YL026YB 58987000
         DC    X'0008'             KEY                         @YL026YB 58988000
         DC    X'0001'             NUMBER                      @YL026YB 58989000
         DC    X'0001'             LENGTH                      @YL026YB 58990000
TXCDISP  DS    0CL6                CONDITIONAL DISP TXT UNIT   @YL026YB 58991000
         DC    X'0009'             KEY                         @YL026YB 58992000
         DC    X'0001'             NUMBER                      @YL026YB 58993000
         DC    X'0001'             LENGTH                      @YL026YB 58994000
         EJECT                                                          58995000
IKJEHPRM IKJPARM                                                        59000020
PSTAT    IKJKEYWD                                                       59050020
         IKJNAME  'STATUS'                                              59100020
PHIST    IKJKEYWD                                                       59150020
         IKJNAME  'HISTORY'                                             59200020
PMEM     IKJKEYWD                                                       59250020
         IKJNAME  'MEMBERS'                                             59300020
PSYSN    IKJKEYWD                                                       59350020
         IKJNAME  'SYSNAMES'                                            59400020
         IKJENDP                                                        59450020
         EJECT                                                          59550020
IKJEHHST CSECT                                                          59650020
*********************************************************************** 59700020
*                                                                     * 59750020
*    THIS ROUTINE GETS CONTROL IF HISTORY WAS REQUESTED AND           * 59800020
*    FORMATS THE REQUIRED INFORMATION INTO THE OUTPUT BUFFER.         * 59850020
*    THE INFORMATION IS OBTAINED FROM THE DSCB WHICH IS ALREADY       * 59900020
*    AVAILABLE IN CORE AT THIS POINT. THE INFORMATION IS              * 59950020
*    REFERENCED THROUGH DSECT OBTWAD. THE FOLLOWING INFORMATION       * 60000020
*    IS COLLECTED-                                                    * 60050020
*                                                                     * 60100020
*                   1. CREATION DATE                                  * 60150020
*                   2. EXPIRATION DATE                                * 60200020
*                   3. SECURITY (PASSWORD) INFORMATION                * 60250020
*                   4. DSORG                                          * 60300020
*                                                                     * 60350020
*********************************************************************** 60400020
HISTROUT SAVE  (14,12),,*          SAVE REGISTERS                       60450020
         LR    R11,R15             ENTRY POINT ADDRESS                  60500020
         LR    R10,R13             WORKAREA ADDRESS                     60550020
         DROP  R13                 CHANGE BASE FOR INITCORE      A42338 60560021
         USING INITCORE,R10        ADDRESSABILITY FOR WORK AREA         60600020
         USING OBTWAD,R12          ADDRESSABILITY FOR OBTAIN WORK AREA  60650020
         USING HISTROUT,R11        ADDRESSABILITY FOR THIS ROUTINE      60700020
         GETMAIN R,LV=SAVELEN,SP=SSP GET NEW SAVE AREA                  60750020
         ST    R13,D4(R1)          CHAIN SAVE AREAS BACKWARDS           60800020
         ST    R1,D8(R13)          -AND FORWARDS                        60850020
         LR    R13,R1              NEW SAVEAREA                         60900020
         OI    CNTRL,WRITEMSK      TURN ON WRITE SWITCH                 61000020
         TM    DS1DSORG,PS         IS DSORG PS                          61100020
         BO    SETPS               IF YES, BRANCH                       61150020
         TM    DS1DSORG,PO         IS DSORG PO                          61250020
         BO    SETPO               IF YES, BRANCH                       61300020
         TM    DS1DSORG,IS         IS DSORG IS                          61400020
         BO    SETIS               IF YES, BRANCH                       61450020
         TM    DS1DSORG,DA         IS DSORG DA                          61550020
         BO    SETDA               IF YES, BRANCH                       61600020
         TM    DS1DSORG,NOTID      IS AN UNIDENTIFIED BIT SET           61700020
         BZ    SETND               IF NO, BRANCH                        61750020
         LA    R15,UNKL            LENGTH OF DSORG FIELD                61850020
         LA    R14,UNK             DSORG WAS NOT IDENTIFIABLE           61900020
EXDSORGM LA    R5,OUTBUF+DSORGOFF  POINT AT DSORG FIELD                 62000020
         BCTR  R15,R0              DECREMENT FOR EXECUTE                62050020
         EX    R15,DSORGMV         MOVE DSORG TO BUFFER                 62100020
         LA    R5,D1(R5,R15)       POINT BEYOND DSORG IN BUFFER         62150020
         TM    DS1DSORG,UNMV       CHECK DSCB FOR UNMOVABLE ATTRIBUTE   62200020
         BZ    DSORGEXT            EXIT FROM DSORG PROCESSING           62250020
         MVI   D0(R5),CHARU        SET UNMOVABLE ATTRIBUTE              62300020
         B     DSORGEXT            GO TO DSORG OPTION PROCESSING        62350020
SETPS    LA    R15,SEQL            LENGTH OF DSORG FIELD                62450020
         LA    R14,SEQ             DSORG WAS SEQUENTIAL                 62500020
         B     EXDSORGM            PROCESS THE DSORG FIELD              62550020
SETPO    LA    R15,PDSL            LENGTH OF DSORG FIELD                62650020
         LA    R14,PDS             DSORG WAS PARTITIONED                62700020
         B     EXDSORGM            PROCESS THE DSORG FIELD              62750020
SETIS    LA    R15,ISEQL           LENGTH OF DSORG FIELD                62850020
         LA    R14,ISEQ            DSORG WAS INDEXED SEQUENTIAL         62900020
         B     EXDSORGM            PROCESS THE DSORG FIELD              62950020
SETDA    LA    R15,DAL             LENGTH OF DSORG FIELD                63050020
         LA    R14,DIRECT          DSORG WAS DIRECT (BDAM)              63100020
         B     EXDSORGM            PROCESS THE DSORG FIELD              63150020
SETND    LA    R15,UNDEFL          LENGTH OF DSORG FIELD                63250020
         LA    R14,UNDEF           DSORG WAS NOT DEFINED                63300020
         B     EXDSORGM            PROCESS THE DSORG FIELD              63350020
DSORGEXT LA    R2,DS1CREDT         SET UP TO CONVERT CREATION DATE      63450020
         LA    R7,OUTBUF           ADDRESS OF OUTPUT BUFFER             63500020
         LA    R7,CRDTOFF(R7)      POINT AT BUFFER POSITION             63550020
         BAL   R14,HDT02           GO CONVERT DATE AND PUT IN BUFFER    63600020
         LA    R2,DS1EXPDT         SET UP TO CONVERT EXPIRATION DATE    63650020
         LA    R7,NXTBUF(R7)       POINT AT NEXT BUFFER POSITION        63700020
         BAL   R14,HDT02           GO CONVERT DATE AND PUT IN BUFFER    63750020
         LA    R7,NXTBUF(R7)       POINT AT NEXT BUFFER POSITION        63800020
*   CHECK FOR VARIOUS COMBINATIONS OF RACF AND PASSWORD PROTECTION      63810004
         TM    DS1DSIND,RACOPWD    RACF AND PASSWORD           @Z40RSSA 63850004
         BNO   NTBOTH                 NO                       @Z40RSSA 63900004
         MVC   D0(9,R7),WPWDRAC                                @Z40RSSA 63910004
TSTREAD  TM    DS1DSIND,WPIND      WRITE PASSWORD PROTECT?     @Z40RSSA 63920004
         BO    HISTEXIT               YES                      @Z40RSSA 63930004
         MVI   D0(R7),C'R'            NO, CHANGE TO RPWD/RACF  @Z40RSSA 63940004
HISTEXIT LR   R1,R13               SAVE AREA ADDRESS FOR FREEMAIN       63950004
         L    R13,D4(R1)           CALLERS SAVEAREA                     64000004
         FREEMAIN R,LV=SAVELEN,A=(1),SP=SSP FREE SAVE AREA              64150020
         RETURN (14,12)            RETURN                               64200020
        SPACE  1                                                        64210004
*       NOT BOTH RACF AND PASSWORD PROTECTED                            64250004
NTBOTH  MVC   D0(4,R7),NONE        ASSUME NONE                 @Z40RSSA 64300004
        BZ    HISTEXIT                IF NONE                  @Z40RSSA 64350004
        MVC   D0(4,R7),RACF        ASSUME RACF                 @Z40RSSA 64400004
        TM    DS1DSIND,RACIND                                  @Z40RSSA 64450004
        BO    HISTEXIT                RACF ONLY                @Z40RSSA 64500004
        MVC   D0(4,R7),WPWD       ASSUME WPWD ONLY             @Z40RSSA 64550004
        B     TSTREAD             TO TEST FOR READ             @Z40RSSA 64560004
*********************************************************************** 64600020
*                                                                     * 64650020
*    THIS ROUTINE CONVERTS BINARY DATES OF THE FORM YYDDDD TO         * 64700020
*    CHARACTER FORMAT IN THE FORM MM/DD/YY.  LEAP YEARS ARE HANDLED.  * 64750020
*    INPUT REQUIREMENTS ARE-                                          * 64800020
*         1.   R2 POINTS TO FIELD TO BE CONVERTED                     * 64850020
*         2.   R7 POINTS TO RECEIVING FIELD                           * 64900020
*         3.   R14 HAS RETURN ADDRESS                                 * 64950020
*                                                                     * 65000020
*********************************************************************** 65010020
HDT02    CLC   D0(L3,R2),HDTZ      CHECK FOR UNSPECIFIED DATE           65100020
         BNE   HDT04               BRANCH IF DATE PRESENT               65150020
HDT03    MVC   D0(L'HDTDF,R7),HDTDF MOVE IN DEFAULT OF 00/00/00         65200020
         BR    R14                 RETURN                               65250020
HDT04    STM   R14,R6,HDTSV        SAVE REGISTERS                       65300020
*                                                                       65350020
*  TEST FOR LEAP YEAR BY ANDING THE YEAR FIELD AGAINST A BYTE WITH      65400020
*  THE TWO LOW ORDER BITS ON. LEAP YEARS WILL HAVE ZEROS FOR THE TWO    65450020
*  LOW ORDER BYTES.                                                     65500020
*                                                                       65550020
         SR    R3,R3               CLEAR REGISTER                       65600020
         IC    R3,D0(R2)           GET YEAR BYTE FROM DATE FIELD        65650020
         LA    R4,HDTBIN3          SET UP TO TEST LOW ORDER BITS        65700020
         NR    R3,R4               ZERO, IF YEAR IS DIVISIBLE BY 4      65750020
         LA    R4,HDTNY            SET UP FOR NON-LEAP YEAR             65800020
         BNZ   HDT06               NOT ZERO, NOT LEAP YEAR              65850020
         LA    R4,HDTLY            REMAINDER IS ZERO, USE LEAP YEAR     65900020
HDT06    MVC   HDTWK(L2),D1(R2)    MOVE DAY FIELD TO HALFWORD FOR ALIGN 65950020
         LH    R3,HDTWK            DAY OF YEAR (0-365)                  66000020
         LA    R6,MNTHS            BRANCH CONTROL IS NUMBER OF MONTHS   66050020
*                                                                       66100020
*  SEARCH NOW BEGINS TO FIND THE MONTH IN WHICH THE DAY-OF-THE-YEAR     66150020
*  OCCURS. IF DAY-OF-THE-YEAR IS GREATER THAN 365/366, MONTH 12 IS USED 66200020
*                                                                       66250020
HDT08    CH    R3,D0(R4)           COMPARE DAY TO TABLE ENTRY FOR MONTH 66300020
         BH    HDT10               DAY GREATER THAN TABLE IS A FIND     66350020
         LA    R4,D2(R4)           POINT TO NEXT ELEMENT                66400020
         BCT   R6,HDT08            DECREMENT MONTH AND RETRY            66450020
         B     HDT03               USE DEFAULT 00/00/00                 66500020
HDT10    SH    R3,D0(R4)           SUBTRACT TABLE ELEMENT FROM DAY      66550020
         EX    R3,HDTCLI           COMPARE DAY TO 31                    66600020
         BNL   HDT12               OKAY, GO TO MONTHS                   66650020
         LA    R3,DYS31            DEFAULT TO 31 DAYS                   66700020
HDT12    CVD   R6,HDTWK            CONVERT MONTH TO DECIMAL             66750020
         UNPK  D0(L2,R7),HD6(D2)   -THEN TO CHARACTER                   66800020
         CVD   R3,HDTWK            CONVERT DAY TO DECIMAL               66850020
         UNPK  D3(L2,R7),HD6(D2)   -THEN TO CHARACTER                   66900020
         IC    R6,D0(R2)           GET YEAR                             66950020
         CVD   R6,HDTWK            CONVERT IT TO DECIMAL                67000020
         UNPK  D6(L2,R7),HD6(D2)   -THEN TO CHARACTER                   67050020
         MVZ   D1(L7,R7),D0(R7)    PROPAGATE NUMERIC ZONE               67100020
         MVI   D2(R7),SLASH        MOVE IN SEPARATORS BETWEEN           67150020
         MVI   D5(R7),SLASH        -MONTH, DAY, AND YEAR                67200020
         LM    R14,R6,HDTSV        RESTORE REGISTERS                    67250020
         BR    R14                 RETURN                               67300020
*                                                                       67400020
*  THE FOLLOWING EQUATES AND CONSTANTS ARE USED BY THE HISTORY ROUTINE. 67450020
*                                                                       67500020
DSORGOFF EQU   2                   OFFSET TO DSORG FIELD IN OUTPUT      67550020
PS       EQU   X'40'               SEQUENTIAL                           67600020
PO       EQU   X'02'               PARTITIONED                          67650020
IS       EQU   X'80'               INDEXED SEQUENTIAL                   67700020
DA       EQU   X'20'               DIRECT                               67750020
NOTID    EQU   X'1C'               THESE BITS RESERVED IN DSORG         67800020
UNMV     EQU   X'01'               UNMOVEABLE BIT                       67850020
DYS31    EQU   31                  USED FOR THIRTY ONE COMPARE          67860020
PWRD1    EQU   X'14'               MASK FOR PASSWORD PROTECTION (DSCB)  67870020
PWRD2    EQU   X'10'               MASK FOR WRITE PROTECTION            67880020
RACIND   EQU   X'40'               MASK FOR RACF PROTECTION             67882004
WPIND    EQU   X'04'               WRITE PASSWORD PROTECT               67884004
RACOPWD  EQU   X'50'               RACF OR PASSWORD                     67886004
HDTBIN3  EQU   X'03'               BYTE WITH TWO LOW ORDER BITS ON      67890020
DSORGMV  MVC   D0(L0,R5),D0(R14)   USED WITH EXECUTE TO MOVE DSORG      67900020
HDTCLI   CLI   HDTC31,D0           CHECKS IF DATE GREATER THAN 31       67910020
SEQ      DC    C'PS'               PHYSICAL SEQUENTIAL                  67950020
SEQL     EQU   L'SEQ               LENGTH OF CONSTANT SEQ               68000020
PDS      DC    C'PO'               PARTITIONED DATA SET                 68050020
PDSL     EQU   L'PDS               LENGTH OF CONSTANT PDS               68100020
ISEQ     DC    C'IS'               INDEXED SEQUENTIAL                   68150020
ISEQL    EQU   L'ISEQ              LENGTH OF CONSTANT ISEQ              68200020
DIRECT   DC    C'DA'               DIRECT ACCESS                        68250020
DAL      EQU   L'DIRECT            LENGTH OF CONSTANT DIRECT            68300020
UNDEF    DC    C'**'               DSORG NOT SPECIFIED                  68350020
UNDEFL   EQU   L'UNDEF             LENGTH OF CONSTANT UNDEF             68400020
UNK      DC    C'??'               DSORG NOT RECOGNIZED                 68450020
UNKL     EQU   L'UNK               LENGTH OF CONSTANT UNK               68500020
NONE     DC    C'NONE'             NO RACF OR PASSWORD PROTECTION       68550004
RACF     DC    C'RACF'             RACF PROTECTION             @Z40RSSA 68600004
WPWD     DC    C'WPWD'             WRITE PASSWORD PROTECTION   @Z40RSSA 68650004
WPWDRAC  DC    C'WPWD/RACF'        WRITE PASSWORD AND RACF     @Z40RSSA 68700004
HDTZ     DC    X'000000'           DATE IS NOT SPECIFIED                69250020
HDTDF    DC    C'00/00/00'         DISPLAYED DATE OF ZERO               69300020
HDTC31   DC    FL1'31'             USED FOR 31 DAY COMPARISON           69350020
*  THIS IS THE MONTH TABLE LOOKUP INDEX FOR NON LEAP-YEARS              69450020
HDTNY    DC    H'334'              DECEMBER                             69600020
         DC    H'304'              NOVEMBER                             69650020
         DC    H'273'              OCTOBER                              69700020
         DC    H'243'              SEPTEMBER                            69750020
         DC    H'212'              AUGUST                               69800020
         DC    H'181'              JULY                                 69850020
         DC    H'151'              JUNE                                 69900020
         DC    H'120'              MAY                                  69950020
         DC    H'90'               APRIL                                70000020
         DC    H'59'               MARCH                                70050020
         DC    H'31'               FEBRUARY                             70100020
         DC    H'0'                JANUARY                              70150020
*  THIS IS THE MONTH TABLE LOOKUP INDEX FOR LEAP YEARS                  70250020
HDTLY    DC    H'335'              DECEMBER                             70350020
         DC    H'305'              NOVEMBER                             70400020
         DC    H'274'              OCTOBER                              70450020
         DC    H'244'              SEPTEMBER                            70500020
         DC    H'213'              AUGUST                               70550020
         DC    H'182'              JULY                                 70600020
         DC    H'152'              JUNE                                 70650020
         DC    H'121'              MAY                                  70700020
         DC    H'91'               APRIL                                70750020
         DC    H'60'               MARCH                                70800020
         DC    H'31'               FEBRUARY                             70850020
         DC    H'0'                JANUARY                              70900020
         EJECT                                                          71150020
IKJEHVHS CSECT                                                 @YL026YB 71150300
*********************************************************************** 71150600
*                                                                     * 71150900
*    THIS ROUTINE GETS CONTROL IF HISTORY WAS REQUESTED AND           * 71151200
*    FORMATS THE REQUIRED INFORMATION INTO THE OUTPUT BUFFER.         * 71151500
*    THE INFORMATION IS OBTAINED FROM THE DSCB WHICH IS ALREADY       * 71151800
*    AVAILABLE IN CORE AT THIS POINT. THE INFORMATION IS              * 71152100
*    REFERENCED THROUGH DSECT OBTWAD. THE FOLLOWING INFORMATION       * 71152400
*    IS COLLECTED-                                                    * 71152700
*                                                                     * 71153000
*                   1. CREATION DATE                                  * 71153300
*                   2. EXPIRATION DATE                                * 71153600
*                   3. ENTRY CODE                                     * 71153900
*                                                                     * 71154200
*********************************************************************** 71154500
HISTROU1 SAVE  (14,12),,*          SAVE REGISTERS              @YL026YB 71154800
         LR    R11,R15             ENTRY POINT ADDRESS         @YL026YB 71155100
         LR    R10,R13             WORKAREA ADDRESS            @YL026YB 71155400
         USING INITCORE,R10        ADDRESSABILITY FOR WORK AREA         71155700
         USING OBTWAD,R12          ADDRESSABILITY FOR OBTAIN WORK AREA  71156000
         USING HISTROU1,R11        ADDRESSABILITY FOR THIS ROUTINE      71156300
         GETMAIN R,LV=SAVELEN,SP=SSP GET NEW SAVE AREA         @YL026YB 71156600
         ST    R13,D4(R1)          CHAIN SAVE AREAS BACKWARDS  @YL026YB 71156900
         ST    R1,D8(R13)          -AND FORWARDS               @YL026YB 71157200
         LR    R13,R1              NEW SAVEAREA                @YL026YB 71157500
         LA    R8,LOCPTN           POINT TO CPL CONSTANTS      @YL026YB 71157800
         ST    R8,CTGPLPTR         STORE IN CTGPL POINTER      @YL026YB 71158100
         USING CTGPL,R8            ADDRESSABILITY TO CPL       @YL026YB 71158400
         XC    LOCPTN(D112),LOCPTN ZERO CPL AND FPL            @YL026YB 71158700
         MVI   CTGOPTN1,CTGNAME    44 BYTE NAME ENTRY          @YL026YB 71159000
         MVI   CTGOPTN3,LOCVSAM    VSAM LOCATE REQUEST         @YL026YB 71159300
         LA    R5,DSADSNAM         POINT TO DSNAME             @YL026YB 71159600
         ST    R5,CTGENT           STORE IN CPL                @YL026YB 71159900
         LA    R5,WKAREA           POINT TO WORKAREA           @YL026YB 71160200
         MVC   WKAREA(D2),WKLGTH   LENGTH OF WORK AREA         @YL026YB 71160500
         ST    R5,CTGWKA           STORE IN CPL                @YL026YB 71160800
         MVI   CTGNOFLD,FLDNO      NUMBER OF FPLS REQUIRED     @YL026YB 71161100
         LA    R5,FLDREQ1          POINT TO FIRST FPL          @YL026YB 71161400
         ST    R5,CTGFIELD         STORE IN CPL                @YL026YB 71161700
         LA    R5,FLDREQ2          POINT TO 2ND FPL            @YL026YB 71162000
         ST    R5,CTGFIELD+D4      STORE IN CPL                @YL026YB 71162300
         LA    R5,FLDREQ3          POINT TO 3RD FPL            @YL026YB 71162600
         ST    R5,CTGFIELD+D8      STORE IN CPL                @YL026YB 71162900
         USING CTGFL,R4            ADDRESSABILITY TO 1ST FPL   @YL026YB 71163200
         L     R4,CTGFIELD         POINT TO 1ST FPL            @YL026YB 71163500
         MVI   CTGFLDNO,HEX01      NUMBER OF DATA ADDR.        @YL026YB 71163800
         LA    R5,ENNTYPE          POINTER TO 1ST FIELD NAME   @YL026YB 71164100
         ST    R5,CTGFLDNM         STORE IN FIELD PARM. POINTER         71164400
         L     R4,CTGFIELD+D4      POINT TO 2ND FPL            @YL026YB 71164700
         MVI   CTGFLDNO,HEX01      NUMBER OF DATA ADDR.        @YL026YB 71165000
         LA    R5,DSCRDT           POINTER TO 2ND FIELD NAME   @YL026YB 71165300
         ST    R5,CTGFLDNM         STORE IN FIELD PARM. PTR.   @YL026YB 71165600
         L     R4,CTGFIELD+D8      POINT TO 3RD FPL            @YL026YB 71165900
         MVI   CTGFLDNO,HEX01      NUMBER OF DATA ADDR.        @YL026YB 71166200
         LA    R5,DSETEX           POINTER TO 3RD FIELD NAME   @YL026YB 71166500
         ST    R5,CTGFLDNM         STORE IN FIELD PARM.PTR     @YL026YB 71166800
         L     R1,CTGPLPTR         PUT CTGPL ADDR. IN REG 1    @YL026YB 71167100
         CATLG (1)                 VSAM LOCATE                 @YL026YB 71167400
         LTR   R15,R15             TEST RETURN CODE            @YL026YB 71167700
         BZ    NRMPROSS            GO TO NORMAL PROCESSING     @YL026YB 71168000
         ST    R15,OBTAINRC        SAVE LOCATE RETURN CODE     @YL026YB 71168300
         OI    OBTAINRC,HEXFF      INDICATE RETURN CODE IS FROM LOCATE  71168600
         OI    CNTRL,OBTSW         TURN ON OBTAIN SWITCH       @YL026YB 71168900
         B     HOSTEXIT            RETURN                      @YL026YB 71169200
NRMPROSS OI    CNTRL,WRITEMSK      TURN ON WRITE SWITCH        @YL026YB 71169500
         USING CTGFL,R4            ADDRRESSABILITY TO FPLS     @YL026YB 71169800
ENTCODE  LA    R5,OUTBUF           POINT AT ENTRY FIELD         ZA02196 71184802
         MVC   DSORGOF1(L4,R5),VSAMCON  MOVE IN CONSTANT        ZA02196 71185102
DSORGET1 L     R4,CTGFIELD+D4      SET TO CONVERT DATE         @VS07788 71186000
         L     R2,CTGFLPT          POINT TO CREATION DATE      @YL026YB 71186300
         LA    R7,OUTBUF           ADDRESS OF OUTPUT BUFFER    @YL026YB 71186600
         LA    R7,CRDTOFF(R7)      POINT AT BUFFER POSITION    @YL026YB 71186900
         BAL   R14,HDTO2           GO CONVERT DATE AND PUT IN BUFFER    71187200
         L     R4,CTGFIELD+D8      POINT TO 3RD FPL            @VS07788 71187500
         L     R2,CTGFLPT          SET UP TO CONVERT EXPIRATION DATE    71187800
         LA    R7,NXTBUF(R7)       POINT AT NEXT BUFFER POSITION        71188100
         BAL   R14,HDTO2           GO CONVERT DATE AND PUT IN BUFFER    71188400
HOSTEXIT LR    R1,R13              SAVE AREA ADDRESS FOR FREEMAIN       71188700
         L     R13,D4(R1)          CALLERS SAVEAREA            @YL026YB 71189000
         FREEMAIN R,LV=SAVELEN,A=(1),SP=SSP FREE SAVE AREA     @YL026YB 71189300
         RETURN (14,12)            RETURN                      @YL026YB 71189600
*********************************************************************** 71189900
*                                                                     * 71190200
*    THIS ROUTINE CONVERTS BINARY DATES OF THE FORM YYDDDD TO         * 71190500
*    CHARACTER FORMAT IN THE FORM MM/DD/YY.  LEAP YEARS ARE HANDLED.  * 71190800
*    INPUT REQUIREMENTS ARE-                                          * 71191100
*         1.   R2 POINTS TO FIELD TO BE CONVERTED                     * 71191400
*         2.   R7 POINTS TO RECEIVING FIELD                           * 71191700
*         3.   R14 HAS RETURN ADDRESS                                 * 71192000
*                                                                     * 71192300
*********************************************************************** 71192600
HDTO2    L     R1,D16(R4)                                      @VS07242 71192900
         LA    R1,D0(R1)                                                71193200
         LTR   R1,R1                                                    71193500
         BZ    HDTO3                                                    71193800
         CLC   D0(L3,R2),HITZ      CHECK FOR UNSPECIFIED DATE  @YL026YB 71194100
         BNE   HDTO4               BRANCH IF DATE PRESENT      @YL026YB 71194400
HDTO3    MVC   D0(L'HDTDF,R7),HITDF MOVE IN DEFAULT OF 00/00/00         71194700
         BR    R14                 RETURN                      @YL026YB 71195000
HDTO4    STM   R14,R6,HDTSV        SAVE REGISTERS              @YL026YB 71195300
*                                                              @YL026YB 71195600
*  TEST FOR LEAP YEAR BY ANDING THE YEAR FIELD AGAINST A BYTE WITH      71195900
*  THE TWO LOW ORDER BITS ON. LEAP YEARS WILL HAVE ZEROS FOR THE TWO    71196200
*  LOW ORDER BYTES.                                            @YL026YB 71196500
*                                                              @YL026YB 71196800
         SR    R3,R3               CLEAR REGISTER              @YL026YB 71197100
         IC    R3,D0(R2)           GET YEAR BYTE FROM DATE FIELD        71197400
         LA    R4,HITBIN3          SET UP TO TEST LOW ORDER BITS        71197700
         NR    R3,R4               ZERO, IF YEAR IS DIVISIBLE BY 4      71198000
         LA    R4,HITNY            SET UP FOR NON-LEAP YEAR    @YL026YB 71198300
         BNZ   HDTO6               NOT ZERO, NOT LEAP YEAR     @YL026YB 71198600
         LA    R4,HITLY            REMAINDER IS ZERO, USE LEAP YEAR     71198900
HDTO6    MVC   HDTWK(L2),D1(R2)    MOVE DAY FIELD TO HALFWORD FOR ALIGN 71199200
         LH    R3,HDTWK            DAY OF YEAR (0-365)         @YL026YB 71199500
         LA    R6,MNTHS            BRANCH CONTROL IS NUMBER OF MONTHS   71199800
*                                                              @YL026YB 71200100
*  SEARCH NOW BEGINS TO FIND THE MONTH IN WHICH THE DAY-OF-THE-YEAR     71200400
*  OCCURS. IF DAY-OF-THE-YEAR IS GREATER THAN 365/366, MONTH 12 IS USED 71200700
*                                                              @YL026YB 71201000
HDTO8    CH    R3,D0(R4)           COMPARE DAY TO TABLE ENTRY FOR MONTH 71201300
         BH    HIT10               DAY GREATER THAN TABLE IS A FIND     71201600
         LA    R4,D2(R4)           POINT TO NEXT ELEMENT       @YL026YB 71201900
         BCT   R6,HDTO8            DECREMENT MONTH AND RETRY   @YL026YB 71202200
         B     HDTO3               USE DEFAULT 00/00/00        @YL026YB 71202500
HIT10    SH    R3,D0(R4)           SUBTRACT TABLE ELEMENT FROM DAY      71202800
         EX    R3,HITCLI           COMPARE DAY TO 31           @YL026YB 71203100
         BNL   HIT12               OKAY, GO TO MONTHS          @YL026YB 71203400
         LA    R3,DYS311           DEFAULT TO 31 DAYS          @YL026YB 71203700
HIT12    CVD   R6,HDTWK            CONVERT MONTH TO DECIMAL    @YL026YB 71204000
         UNPK  D0(L2,R7),HD6(D2)   -THEN TO CHARACTER          @YL026YB 71204300
         CVD   R3,HDTWK            CONVERT DAY TO DECIMAL      @YL026YB 71204600
         UNPK  D3(L2,R7),HD6(D2)   -THEN TO CHARACTER          @YL026YB 71204900
         IC    R6,D0(R2)           GET YEAR                    @YL026YB 71205200
         CVD   R6,HDTWK            CONVERT IT TO DECIMAL       @YL026YB 71205500
         UNPK  D6(L2,R7),HD6(D2)   -THEN TO CHARACTER          @YL026YB 71205800
         MVZ   D1(L7,R7),D0(R7)    PROPAGATE NUMERIC ZONE      @YL026YB 71206100
         MVI   D2(R7),SLASH        MOVE IN SEPARATORS BETWEEN  @YL026YB 71206400
         MVI   D5(R7),SLASH        -MONTH, DAY, AND YEAR       @YL026YB 71206700
         LM    R14,R6,HDTSV        RESTORE REGISTERS           @YL026YB 71207000
         BR    R14                 RETURN                      @YL026YB 71207300
*                                                              @YL026YB 71207600
*  THE FOLLOWING EQUATES AND CONSTANTS ARE USED BY THE HISTORY ROUTINE. 71207900
*                                                              @YL026YB 71208200
DSORGOF1 EQU   2                   OFFSET TO DSORG FIELD IN OUTPUT      71208500
VSAMCON  DC    C'VSAM'             DSORG CONSTANT FOR VSAM      ZA02196 71208802
DYS311   EQU   31                  USED FOR THIRTY ONE COMPARE @YL026YB 71217500
HITBIN3  EQU   X'03'               BYTE WITH TWO LOW ORDER BITS ON      71217800
HITCLI   CLI   HITC31,D0           CHECKS IF DATE GREATER THAN 31       71218400
HITZ     DC    X'000000'           DATE IS NOT SPECIFIED       @YL026YB 71218700
HITDF    DC    C'00/00/00'         DISPLAYED DATE OF ZERO      @YL026YB 71219000
HITC31   DC    FL1'31'             USED FOR 31 DAY COMPARISON  @YL026YB 71219300
ENNTYPE  DC    C'ENTYPE  '         ENTRY TYPE                  @YL026YB 71219600
DSCRDT   DC    C'DSETCRDT'         CREATION DATA               @YL026YB 71219900
DSETEX   DC    C'DSETEXDT'         EXPIRATION DATE             @YL026YB 71220200
         DS    0H                  HALF WORD BNDRY             @YL026YB 71220500
WKLGTH   DC    H'100'              LENGTH OF CPPL WORKAREA     @YL026YB 71220800
*  THIS IS THE MONTH TABLE LOOKUP INDEX FOR NON LEAP-YEARS     @YL026YB 71221100
HITNY    DC    H'334'              DECEMBER                    @YL026YB 71221400
         DC    H'304'              NOVEMBER                    @YL026YB 71221700
         DC    H'273'              OCTOBER                     @YL026YB 71222000
         DC    H'243'              SEPTEMBER                   @YL026YB 71222300
         DC    H'212'              AUGUST                      @YL026YB 71222600
         DC    H'181'              JULY                        @YL026YB 71222900
         DC    H'151'              JUNE                        @YL026YB 71223200
         DC    H'120'              MAY                         @YL026YB 71223500
         DC    H'90'               APRIL                       @YL026YB 71223800
         DC    H'59'               MARCH                       @YL026YB 71224100
         DC    H'31'               FEBRUARY                    @YL026YB 71224400
         DC    H'0'                JANUARY                     @YL026YB 71224700
*  THIS IS THE MONTH TABLE LOOKUP INDEX FOR LEAP YEARS         @YL026YB 71225000
HITLY    DC    H'335'              DECEMBER                    @YL026YB 71225300
         DC    H'305'              NOVEMBER                    @YL026YB 71225600
         DC    H'274'              OCTOBER                     @YL026YB 71225900
         DC    H'244'              SEPTEMBER                   @YL026YB 71226200
         DC    H'213'              AUGUST                      @YL026YB 71226500
         DC    H'182'              JULY                        @YL026YB 71226800
         DC    H'152'              JUNE                        @YL026YB 71227100
         DC    H'121'              MAY                         @YL026YB 71227400
         DC    H'91'               APRIL                       @YL026YB 71227700
         DC    H'60'               MARCH                       @YL026YB 71228000
         DC    H'31'               FEBRUARY                    @YL026YB 71228300
         DC    H'0'                JANUARY                     @YL026YB 71228600
         EJECT                                                 @YL026YB 71228900
IKJEHMMR CSECT                                                          71250020
*********************************************************************** 71300020
*                                                                     * 71350020
*    THIS ROUTINE GETS CONTROL IF THE MEMBERS KEYWORD IS SPECIFIED    * 71400020
*    WITH THE COMMAND AND DOES THE FOLLOWING-                         * 71450020
*         1. CHECKS WHETHER DATA SET IS PARTITIONED (DSORG IN DSCB)   * 71550020
*         2. CHECKS WHETHER DATA SET HAS THIS USERS USERID AS FIRST   * 71600020
*            QUALIFIER IN DSNAME                                      * 71650020
*         3. CHECKS FOR BLANK DDNAME (EXIT IF YES--CONCATENATED)      * 71700020
*         4. CHECKS DYNAMIC CONCATENATION BIT IN DSE--IF ON, THE      * 71750020
*            DSADDNAM IS COMPARED TO THE DCBDDNAM. IF THEY ARE THE    * 71800000
*            SAME, THEN THIS IS AT LEAST THE SECOND MEMBER OF A       * 71850020
*            CONCATENATION CLUSTER AND AN EXIT IS TAKEN.              * 71900020
*                                                                     * 71950020
*    IF ALL CONDITIONS ARE MET, A RDJFCB IS ISSUED AND IKJEHMEM IS    * 72000020
*    CALLED TO LIST THE DIRECTORY. IF HISTORY WAS SPECIFIED AS A      * 72050020
*    KEYWORD, THE JFCB HAS ALREADY BEEN READ.                         * 72100020
*                                                                     * 72150020
*********************************************************************** 72200020
MEMROUT  SAVE  (14,12),,*          SAVE REGISTERS                       72250020
         LR    R11,R15             ENTRY POINT ADDRESS                  72300020
         LR    R10,R13             WORKAREA ADDRESS                     72350020
         USING INITCORE,R10        ADDRESSABILITY FOR WORKAREA          72400020
         USING OBTWAD,R12          ADDRESSABILITY FOR OBTAIN WORK AREA  72450020
         USING MEMROUT,R11         ADDRESSABILITY FOR ROUTINE           72500020
         GETMAIN R,LV=SAVELEN,SP=SSP GET NEW SAVE AREA                  72550020
         ST    R13,BACKWARD(R1)    CHAIN SAVE AREAS BACKWARD            72600020
         ST    R1,FORWARD(R13)     -AND FORWARD                         72650020
         LR    R13,R1              NEW SAVE AREA                        72700020
         TM    DS1DSORG,PO         IS DSORG PO                          72750020
         BNO   MEMEXIT             NO, EXIT FROM ROUTINE                72800020
*  COMPARE USERID AGAINST HIGHEST LEVEL QUALIFIER                       72900020
         L     R2,UPTPTR           POINT TO UPT                @YL026YB 73000000
         USING UPT,R2              ADDRESSABILITY UPT          @YL026YB 73030000
         XR    R1,R1               CLEAR REGISTER                       73060000
         IC    R1,UPTPREFL         LENGTH OF USERID            @YL026YB 73090000
         LTR   R1,R1               SEE IF USERID IS ZERO       @YL026YB 73120000
         BZ    NOPREFIX            YES,NO USERID OR PREFIX     @YL026YB 73150000
         LA    R3,DSADSNAM         ADDRESS OF DSNAME IN DSAB   @YL026YB 73180000
         LA    R3,D0(R3,R1)        ADD USERID LENGTH TO DSNAME          73250020
         CLI   D0(R3),PERIOD       CHECK FOR A PERIOD                   73300020
         BNE   MEMEXIT             NOT EQUAL, GO EXIT THIS ROUTINE      73350020
         BCTR  R1,R0               DECREMENT LENGTH FOR EXECUTE         73400020
         EX    R1,USRIDCOM         COMPARE USERID TO FIRST QUALIFIER    73450020
         BNE   MEMEXIT             NOT EQUAL, GO EXIT THIS ROUTINE      73500020
NOPREFIX CLI   DSADDNAM,BLANK      IS DDNAME BLANK             @YL026YB 73550000
         BE    MEMEXIT             YES, GO EXIT                         73600020
         LA    R2,OBTDCB           ADDRESS OF DCB                A42338 73610021
         USING IHADCB,R2           ADDRESSABILITY DCB            A42338 73620021
         TM    DSACNTRL,DYNCON     CHECK DYNAMIC CONCATENATION BIT      73650000
         BNO   MEMRT01             OFF, GO PROCESS                      73730000
         CLC   DCBDDNAM(DDNAMLEN),DSADDNAM COMPARE DDNAMES IN DSE, DCB  73810000
         BE    MEMEXIT             EQUAL, GO EXIT--CANNOT LIST MEMBERS  73900020
MEMRT01  TM    CNTRL,HISTMSK       WAS HISTORY SPECIFIED                74050020
         BO    MEMRT02             YES, SKIP RDJFCB                     74100020
         MVC   DCBDDNAM(DDNAMLEN),DSADDNAM MOVE DDNAME TO DCB  @YL026YB 74250000
         LA    R1,RDJL             ADDRESS OF RDJFCB LIST FORM          74300020
         RDJFCB ((R2)),MF=(E,(R1)) ISSUE READ JFCB                      74350020
         DROP  R2                  DCB NO LONGER NEEDED                 74400020
MEMRT02  L     R15,MEMMOD          ADDRESS OF IKJEHMEM (MEMBERS MODULE) 74500020
         LA    R1,CALLIST          PARAMETER LIST FOR CALL MACRO        74550020
         L     R3,VCONWRTE         ADDRESS OF WRITE ROUTINE             74600020
*  GO TO MEMBERS ROUTINE (IKJEHMEM)                                     74650020
         CALL  (15),((R12),GETML,OUTBUF,(R3),FREEML),VL,MF=(E,(1))      74700020
         B     MEMCODE(R15)        ANALYZE IKJEHMEM RETURN CODE         74800020
MEMCODE  B     MEMEXIT             SUCCESS                              74850020
         B     MEMCDE04            INSUFFICIENT CORE                    74900020
         B     MEMCDE08            I/O ERROR                            74950020
         B     MEMCDE12            DIRECTORY ERROR                      75000020
MEMCDE04 LA    R1,SECMSG06         SECOND LEVEL MESSAGE 6               75150020
         B     MEMERROR            GO PROCESS MESSAGE                   75200020
MEMCDE08 LA    R1,SECMSG08         SECOND LEVEL MESSAGE 8               75300020
         LA    R2,SYNMSG           ADDRESS OF INSERT                    75350020
         ST    R2,ERRINST2         -TO PARM LIST                        75400020
         B     MEMSYN              GO PROCESS MESSAGE                   75450020
MEMCDE12 LA    R1,SECMSG07         SECOND LEVEL MESSAGE 7               75550020
MEMERROR XC    ERRINST2,ERRINST2   NO SECOND LEVEL INSERTION            75700020
MEMSYN   XC    ERRINST1,ERRINST1   NO FIRST LEVEL INSERTION             75750020
         STH   R1,ERRSECND         SECOND LEVEL MESSAGE CODE            75800020
         LA    R1,MSG04            MESSAGE 4                            75850020
         STH   R1,ERRFIRST         FIRST LEVEL MESSAGE CODE             75900020
         LR    R1,R13              ADDRESS OF AREA TO FREE              75950020
         LR    R13,R10             CALLERS SAVEAREA                     76000020
         L     R2,VCONERRT         ERROUT ADDRESS                       76050020
         L     R3,RETREGOF(R13)    CALLERS RETURN ADDRESS               76100020
         ST    R2,RETREGOF(R13)    MAKE RETURN TO ERROR HANDLER         76150020
         ST    R3,BALREGOF(R13)    FROM ERROR HANDLER TO CALLER         76200020
         B     MEMEXIT1            GO FREE CORE AND RETURN       A42338 76250021
MEMEXIT  LR    R1,R13              SAVE AREA ADDRESS TO BE FREED        76450020
         LR    R13,R10             CALLERS SAVEAREA                     76500020
MEMEXIT1 FREEMAIN R,LV=SAVELEN,A=(1),SP=SSP FREE SAVE AREA       A42338 76550021
         RETURN (14,12)            RETURN                               76600020
*                                                                       76610020
*  CONSTANTS USED BY THE MEMBERS ROUTINE                         A42338 76620021
*                                                                       76630020
         USING UPT,R2              ADDRESSABILITY PSCB         @YL026YB 76650000
USRIDCOM CLC   UPTPREFX(L1),DSADSNAM COMPARE TO BE EXECUTED    @YL026YB 76700000
         DROP  R2                  PSCB NO LONGER NEEDED                76750020
VCONERRT DC    V(IKJEHERR)         ADDRESS OF ERROR ROUTINE             76800020
VCONWRTE DC    V(IKJEHWRT)         ADDRESS OF WRITE ROUTINE             76850020
         EJECT                                                          76950020
IKJEHSTS CSECT                                                          77050020
*********************************************************************** 77100020
*                                                                     * 77150020
*    THIS ROUTINE GETS CONTROL IF THE STATUS KEYWORD IS SPECIFIED ON  * 77200020
*    THE COMMAND. IT EXTRACTS THE DDNAME AND NORMAL AND ABNORMAL      * 77250020
*    DISPOSITION FROM THE DSE BLOCK CURRENTLY BEING PROCESSD. THE     * 77300020
*    DDNAME MAY BE BLANKS IF THE DATA SET WAS CONCATENATED IN THE     * 77350020
*    LOGON PROCEDURE.  SOME DDNAMES MAY BE DUPLICATED IN THE LISTING. * 77400020
*    THESE DATA SETS WILL ALL BE MEMBERS OF THE SAME CONCATENATION    * 77450020
*    CLUSTER (DYNAMIC CONCATENATION).  THE POSSIBLE DISPOSITIONS      * 77500020
*    INCLUDE ALL THOSE CURRENTLY SUPPORTED IN OS.                     * 77550020
*                                                                     * 77600020
*********************************************************************** 77650020
STATROUT SAVE  (14,12),,*          SAVE REGISTERS                       77700020
         LR    R11,R15             ENTRY POINT ADDRESS                  77750020
         LR    R10,R13             WORKAREA ADDRESS                     77800020
         USING INITCORE,R10        ADDRESSABILITY WORK AREA             77850020
         USING OBTWAD,R12          ADDRESSABILITY OBTAIN WORK AREA      77900020
         USING STATROUT,R11        ADDRESSABILITY FOR THIS ROUTINE      77950020
         GETMAIN R,LV=SAVELEN,SP=SSP GET SAVE AREA                      78000020
         ST    R13,BACKWARD(R1)    CHAIN SAVE AREAS BACKWARD            78050020
         ST    R1,FORWARD(R13)     -AND FORWARD                         78100020
         LR    R13,R1              NEW SAVE AREA                        78150020
         LA    R7,OUTBUF+STATOFF1  POINT AT OFFSET FOR STATUS ALONE     78200020
         TM    CNTRL,HISTMSK       WAS HISTORY SPECIFIED                78250020
         BNO   STATRT01            NO, USE AS IS                        78300020
         LA    R7,OUTBUF+STATOFF2  YES, POINT TO NEW OFFSET             78350020
STATRT01 MVC   D0(DDNAMLEN,R7),DSADDNAM MOVE DDNAME TO BUFFER  @YL026YB 78450000
         LA    R7,DDNAMLEN+D1(R7)  UPDATE BUFFER POINTER        SA49892 78490000
* TEST STATUS BITS AND MOVE IN APPROPRIATE WORD                         78530000
         TM    DSANDISP,KEEP       IS DISPOSITION KEEP         @YL026YB 78570000
         BO    STATKEEP            YES, BRANCH                          78610000
         TM    DSANDISP,DELETE     IS DISPOSITION DELETE       @YL026YB 78650000
         BO    STATDELE            YES, BRANCH                          78690000
         TM    DSANDISP,CATLG      IS DISPOSITION CATALOG      @YL026YB 78730000
         BO    STATCATL            YES, BRANCH                          78770000
         TM    DSANDISP,UNCATLG    IS DISPOSITION UNCATALOG    @YL026YB 78810000
         BO    STATUNCT            YES, BRANCH                          78850000
         TM    DSANDISP,PASS       IS DISPOSITION PASS         @YL026YB 78890000
         BO    STATPASS            YES,BRANCH                  @YL026YB 78930000
         B     STATRT03            IF UNSPECIFIED, SKIP TO NEXT         79050020
STATKEEP LA    R14,SKEEP           DISPOSITION OF 'KEEP'                79100020
         LA    R15,L'SKEEP         ITS LENGTH                           79150020
         B     STATRT02            PUT IT IN BUFFER                     79200020
STATDELE LA    R14,SDELE           DISPOSITION OF 'DELETE'              79300020
         LA    R15,L'SDELE         ITS LENGTH                           79350020
         B     STATRT02            PUT IT IN BUFFER                     79400020
STATCATL LA    R14,SCATL           DISPOSITION OF 'CATLG'               79500020
         LA    R15,L'SCATL         ITS LENGTH                           79550020
         B     STATRT02            PUT IT IN BUFFER                     79600020
STATUNCT LA    R14,SUNCT           DISPOSITION OF 'UNCATLG'             79700020
         LA    R15,L'SUNCT         ITS LENGTH                           79750020
         B     STATRT02            PUT IT IN BUFFER            @YL026YB 79770000
STATPASS LA    R14,SPASS           DISP. OF 'PASS'             @YL026YB 79790000
         LA    R15,L'SPASS         ITS LENGTH                  @YL026YB 79810000
* MOVE THE CORRECT FIELD TO THE BUFFER                                  79850020
STATRT02 BCTR  R15,R0              DECREMENT COUNT FOR EXECUTE  SA49892 80050021
         EX    R15,DISPMOVE        MOVE DISPOSITION TO BUFFER           80100020
         LA    R7,D1(R15,R7)       POINT AT NEXT LOCATION               80150020
* TEST FOR ABNORMAL DISPOSITION                                         80250020
STATRT03 TM    DSACDISP,KEEP       IS DISPOSITION KEEP         @YL026YB 80400000
         BO    STKEEP              YES, BRANCH                          80440000
         TM    DSACDISP,DELETE     IS DISPOSITION DELETE       @YL026YB 80480000
         BO    STDELE              YES, BRANCH                          80520000
         TM    DSACDISP,CATLG      IS DISPOSITION CATALOG      @YL026YB 80560000
         BO    STCATL              YES, BRANCH                          80600000
         TM    DSACDISP,UNCATLG    IS DISPOSITION UNCATALOG    @YL026YB 80640000
         BO    STUNCT              YES, BRANCH                          80680000
         TM    DSACDISP,PASS       IS DISP. PASS               @YL026YB 80720000
         BO    STPASS              YES,BRANCH                  @YL026YB 80760000
         B     STATRT05            IF UNSPECIFIED, SKIP IT              80800020
STKEEP   LA    R14,SKEEP           DISPOSITION OF 'KEEP'                80900020
         LA    R15,L'SKEEP         ITS LENGTH                           80950020
         B     STATRT04            PUT IT INTO THE BUFFER               81000020
STDELE   LA    R14,SDELE           DISPOSITION OF 'DELETE'              81100020
         LA    R15,L'SDELE         ITS LENGTH                           81150020
         B     STATRT04            PUT IT INTO BUFFER                   81200020
STCATL   LA    R14,SCATL           DISPOSITION OF 'CATLG'               81300020
         LA    R15,L'SCATL         ITS LENGTH                           81350020
         B     STATRT04            PUT IT INTO BUFFER                   81400020
STUNCT   LA    R14,SUNCT           DISPOSITION OF 'UNCATLG'             81500020
         LA    R15,L'SUNCT         ITS LENGTH                           81550020
         B     STATRT04            PUT IT INTO BUFFER          @YL026YB 81570000
STPASS   LA    R14,SPASS           DISP OF 'PASS'              @YL026YB 81590000
         LA    R15,L'SPASS         ITS LENGTH                  @YL026YB 81610000
* MOVE THE CORRECT FIELD TO THE BUFFER                                  81650020
STATRT04 MVI   D0(R7),COMMA         PUT A COMMA SEPARATOR IN BUFFER     81800020
         LA    R7,D1(R7)            BUMP POINTER                        81850020
         BCTR  R15,R0               DECREMENT LENGTH FOR EXECUTE        81900020
         EX    R15,DISPMOVE         MOVE DISPOSITION TO BUFFER          81950020
STATRT05 OI    CNTRL,WRITEMSK       TURN ON WRITE SWITCH                82100020
         LR    R1,R13               ADDRESS OF SAVE AREA TO BE FREED    82150020
         LR    R13,R10              USERS SAVEAREA                      82200020
         FREEMAIN R,LV=SAVELEN,A=(1),SP=SSP FREE SAVE AREA              82250020
         RETURN (14,12)             RETURN                              82300020
*                                                                       82350020
*     EQUATES AND CONSTANTS USED BY THE STATUS ROUTINE                  82400020
*                                                                       82450020
DISPMOVE MVC   D0(D0,R7),D0(R14)    EXECUTED TO MOVE DISPOSITION        82460020
KEEP     EQU   X'08'                DSAB DISPOSITION KEEP      @YL026YB 82500000
DELETE   EQU   X'04'                DSAB  DISPOSITION DELETE   @YL026YB 82540000
CATLG    EQU   X'02'                DSAB  DISPOSITION CATALOG  @YL026YB 82580000
UNCATLG  EQU   X'01'                DSAB  DISPOSITION UNCATALOG         82620000
PASS     EQU   X'10'                DSAB DISP. PASS            @YL026YB 82660000
SKEEP    DC    C'KEEP'              KEEP                                82700020
SDELE    DC    C'DELETE'            DELETE                              82750020
SCATL    DC    C'CATLG'             CATALOG                             82800020
SUNCT    DC    C'UNCATLG'           UNCATALOG                           82850020
SPASS    DC    C'pass'              PASS                       @YL026YB 82920000
         EJECT                                                          83000020
INITCORE DSECT                                                          83050020
SAVEAREA DS    28F                  SAVEAREA AND LOCAL SAVEAREA         83100020
NULLCNT  DS    D                    KEEPS COUNT OF DYNAMS               83110020
DSAV     DS    F                    ADDR. OF DDNAME BUFFER     @YL026YB 83120000
OBTAINRC DS    F                    HOLDS OBTAIN RETURN CODE            83130020
CTLA     EQU   *                    BEGIN CONTROL WORD AND SW AREA      83150020
MEMMOD   DS    A                    ADDRESS OF MEMBERS MODULE           83200020
OBTWA    DS    A                    ADDRESS OF CORE FOR OBTAIN WORKAREA 83250020
RETCD    DS    F                    HOLDS RETURN CODE                   83300020
PARDSECT DS    F                    ADDRESS OF PARSE DSECT              83400020
CNTRL    DS    XL1                  SWITCH FOR COMMAND SCAN RESULTS     83410020
CTLL     EQU   *-CTLA               LENGTH CONTROL WORD AND SWITCH AREA 83500020
DDCNT    DS    H                    COUNT OF DDNAMES IN BUFFER @YL026YB 83660000
ZERO1    DC    X'0000'              ZEROS FOR COMPARES         @YL026YB 83700000
LOCSW    DC    X'00'                SWITCH USED FOR LOCATE ISSUED       83750020
         EJECT                                                          83800020
*********************************************************************** 83850020
*                                                                     * 83900020
*    THE  FOLLOWING 3 WORDS ARE USED TO PASS PARAMETERS TO THE        * 83950020
*    ERROR HANDLING ROUTINE. THE FIRST TWO BYTES CONTAIN THE RELATIVE * 84000020
*    POSITION OF THE MESSAGE IN THE MESSAGE CSECT. THE NEXT TWO BYTES * 84050020
*    CONTAIN THE NUMBER THAT INDICATES WHICH SECOND LEVEL MESSAGE     * 84100020
*    IS TO BE SELECTED. THE SECOND WORD POINTS TO A FIELD CONTAINING  * 84150020
*    A ONE BYTE LENGTH FIELD FOLLOWED BY DATA TO BE INSERTED IN THE   * 84200020
*    FIRST MESSAGE. THE LAST WORD CONTAINS A SIMILAR POINTER FOR THE  * 84250020
*    SECOND MESSAGE.                                                  * 84300020
*                                                                     * 84350020
*********************************************************************** 84400020
ERRPARM  DS    0F                  PARAMETER LIST FOR ERROR HANDLER     84450020
ERRFIRST DS    H                   RELATIVE FIRST LEVEL MESSAGE NUMBER  84500020
ERRSECND DS    H                   RELATIVE SECOND LEVEL MESSAGE NUMBER 84550020
ERRINST1 DS    F                   INSERT DATA FOR FIRST LEVEL MESSAGE  84600020
ERRINST2 DS    F                   INSERT DATA FOR SECOND LEVEL MESSAGE 84650020
         DS    0D                  DOUBLE WORD ALIGN                    84700020
ERRINSRT DS    CL70                INSERT DATA BUFFER                   84750020
*********************************************************************** 84900020
*                                                                     * 84950020
*        THE FOLLOWING CONSTANTS, BUFFER AND PUTLINE MACRO MUST ALL   * 85000020
*        APPEAR TOGETHER IN THE SPECIFIED ORDER SO THAT THE WRITE     * 85050020
*        ROUTINE WILL REMAIN INDEPENDANT OF A BASE REGISTER.          * 85100020
*                                                                     * 85150020
*********************************************************************** 85200020
PARMLSTS DS    0F                  ALIGN PARAMETER LIST                 85250020
PUTLCON  DS    F                   LIST FOR PUTLINE MACRO               85300020
DPUTLCON DS    F                   PUTLINE LIST FORM                    85350020
UPTPTR   DS    F                   UPT POINTER                          85400020
ECTPTR   DS    F                   ECT POINTER                          85450020
ECBPTR   DS    F                   CPS ECB POINTER                      85500020
PUTLADDR DS    F                   ENTRY POINT OF PUTLINE               85550020
PARMLSTL EQU   *-PARMLSTS          LENGTH OF PARAMETER LIST             85600020
         DS    F                   LENGTH AND OFFSET FIELDS             85700020
OUTBUF   DS    CL120               OUTPUT BUFFER FOR PUTLINE            85750020
DPUTLINE PUTLINE MF=L              PUTLINE LIST FORM                    85800020
*                                                                       85900020
* SERVICE ROUTINE PARAMETER LIST AREA                                   85950020
*                                                                       86000020
PUTLLIST DS    7F                  COMMON PARAMETER AREA                86200020
* END OF SERVICE ROUTINE PARAMETER LIST AREA                            86600020
CPECB    DS    F                   CPS ECB                              86650020
PSCBPTR  DS    F                   PSCB POINTER                         86700020
GETML    GETMAIN  EC,MF=L          LIST FORM OF GETMAIN                 86850020
FREEML   FREEMAIN  E,MF=L          LIST FORM OF FREEMAIN                86900020
LOCLIST  DS    4F                  LOCATE CAMLST                        87000020
MSGPARM1 DS    3F                  FIRST LEVEL MESSAGE PARAMETERS       87100020
MSGPARM2 DS    3F                  SECOND LEVEL MESSAGE PARAMETERS      87150020
SECBUFF  DS    30F                 SECOND BUFFER FOR ERROR HANDLER      87200020
STACKPRM DS    2F                  SPACE FOR STACK PARAMETER BLOCK      87250020
SYSNM    DS    C'SYS00000.T000000.' MASK TO TEST FOR SYSNAMES           87300020
STACKSW  DS    CL1                 INDICATE FLUSH STACK AND CLEAR QUEUE 87310020
         DS    0D                  ALIGN LOCATE WORKAREA          M0883 87310421
LOCAREA  DS    CL265               WORK AREA FOR LOCATE MACRO           87312020
DYNAMSAV DS    CL265               BUFFER FOR DDNAMES          @YL026YB 87312800
DYNAMSW  DS    CL1                 INDICATOR FOR RE-USE        @YL026YB 87313600
WKAREA   DS    CL100               WORKAREA FOR CPL            @YL026YB 87314400
NOTUSED  DS    CL1                 INDICATOR FOR NOT IN-USE    @YL026YB 87315200
ASKSWTCH DS    CL1                 SWITCH TO WRITE AS NOT-INUSE         87316000
*                                                              @YL026YB 87316800
*                                                              @YL026YB 87317600
         DS    0F                  ALINE POINTER               @YL026YB 87318400
CTGPLPTR DS    F                   POINTER TO CPL AREA         @YL026YB 87319200
CTGFLPTR DS    F                   POINTER TO FPL AREA         @YL026YB 87320000
LOCPTN   DS    0F                  CPL CONSTANTS               @YL026YB 87320800
         DS    CL40                POINTER TO ENTRY NAME       @YL026YB 87321600
*                                                              @YL026YB 87322400
*                                                              @YL026YB 87323200
FLDREQ1  DS    CL24                FPL CONSTANTS               @YL026YB 87324000
FLDREQ2  DS    CL24                FPL CONSTANTS               @YL026YB 87324800
FLDREQ3  DS    CL24                FPL CONSTANTS               @YL026YB 87325600
*                                                              @YL026YB 87326400
*                                                              @YL026YB 87327200
*                                                              @YL026YB 87328000
*                                                              @YL026YB 87328800
         DS    0H                                              @YL026YB 87329600
REQNUM   DS    CL2                 RELATIVE REQUEST NUMBER     @YL026YB 87330400
DSADSLNG DS    CL2                 DSNAME LENGTH               @YL026YB 87331200
DSADSNAM DS    CL44                                            @YL026YB 87332000
DYNAMCNT DS    CL2                                             @YL026YB 87332800
DSACNTRL DS    CL1                                             @YL026YB 87333600
LSTENTRY DS    CL1                                             @YL026YB 87334400
DSTYPE   DS    CL1                                             @YL026YB 87335200
         DS    0H                                              @YL026YB 87336000
DMEMLNT  DS    CL2                                             @YL026YB 87336800
DSAMEM   DS    CL8                                             @YL026YB 87337600
DSADDNAM DS    CL8                                             @YL026YB 87338400
DSASTAT  DS    CL1                                             @YL026YB 87339200
DSANDISP DS    CL1                                             @YL026YB 87340000
DSACDISP DS    CL1                                             @YL026YB 87340800
*        WORK AREA FOR ALLOCATION                              @YL026YB 87341600
DAPARM   DS    F                   POINTER TO REQUEST BLK      @YL026YB 87342400
DARQBLK  DS    0CL20               DYNAMIC ALLOC REQUEST BLK   @YL026YB 87343200
DABLKLN  DS    CL1                 LENGTH OF BLK               @YL026YB 87344000
DAVERB   DS    CL1                 VERB CODE                   @YL026YB 87344800
DAFLGS1  DS    CL2                 FLAGS                       @YL026YB 87345600
DAERRCD  DS    CL2                 ERROR RETURN CODE           @YL026YB 87346400
DAINFO   DS    CL2                 INFORMATION RETURN CD       @YL026YB 87347200
DATXTPT  DS    CL4                 ADDRESS OF TEXT POINTERS    @YL026YB 87348000
         DS    CL4                 RESERVED                    @YL026YB 87348800
DAFLGS2  DS    CL4                 FLAGS                       @YL026YB 87349600
DARLNTH  EQU   *-DARQBLK                                       @YL026YB 87350400
*        TEXT POINTER                                          @YL026YB 87351200
DAPTR    DS    11F                                             @YL026YB 87352000
*        *     TEXT UNIT FOR DYNAMIC INFORMATION RETRIEVAL     @YL026YB 87352800
DAREQ    DS    0CL8                                            @YL026YB 87353600
         DS    CL2                 KEY                         @YL026YB 87354400
         DS    CL2                 NUMBER                      @YL026YB 87355200
         DS    CL2                 LENGTH                      @YL026YB 87356000
         DS    CL2                 RELATIVE REQUEST NO.        @YL026YB 87356800
DADSNM   DS    0CL50               DSNAME TEXT UNIT            @YL026YB 87357600
         DS    CL2                 KEY                         @YL026YB 87358400
         DS    CL2                 NUMBER                      @YL026YB 87359200
         DS    CL2                 LENGTH                      @YL026YB 87360000
         DS    CL44                DATA SET NAME               @YL026YB 87360800
DALIMIT  DS    0CL8                LIMIT TETX UNIT             @YL026YB 87361600
         DS    CL2                 KEY                         @YL026YB 87362400
         DS    CL2                 NUMBER                      @YL026YB 87363200
         DS    CL2                 LENGHT                      @YL026YB 87364000
         DS    CL2                 LIMIT                       @YL026YB 87364800
DATTR    DS    0CL7                ATTRIBUTE TEXT UNIT         @YL026YB 87365600
         DS    CL2                 KEY                         @YL026YB 87366400
         DS    CL2                 NUMBER                      @YL026YB 87367200
         DS    CL2                 LENGTH                      @YL026YB 87368000
         DS    CL1                 ATTRIBUTE                   @YL026YB 87368800
DALENTRY DS    0CL7                LAST ENTRY TEXT UNIT        @YL026YB 87369600
         DS    CL2                 KEY                         @YL026YB 87370400
         DS    CL2                 NUMBER                      @YL026YB 87371200
         DS    CL2                 LENGTH                      @YL026YB 87372000
         DS    CL1                 LAST ENTRY CODE             @YL026YB 87372800
DADSTYPE DS    0CL7                DATA SET TYPE TXT UNIT      @YL026YB 87373600
         DS    CL2                 KEY                         @YL026YB 87374400
         DS    CL2                 NUMBER                      @YL026YB 87375200
         DS    CL2                 LENGTH                      @YL026YB 87376000
         DS    CL1                 DATA SET TYPE               @YL026YB 87376800
         DS    0H                                              @YL026YB 87377600
DAMEM    DS    0CL14               MEMBER TEXT UNIT            @YL026YB 87378400
         DS    CL2                 KEY                         @YL026YB 87379200
         DS    CL2                 NUMBER                      @YL026YB 87380000
         DS    CL2                 LENGTH                      @YL026YB 87380800
         DS    CL8                 MEMBER NAME                 @YL026YB 87381600
DADDNM   DS    0CL14               DDNAME TEXT UNIT            @YL026YB 87382400
         DS    CL2                 KEY                         @YL026YB 87383200
         DS    CL2                 NUMBER                      @YL026YB 87384000
         DS    CL2                 LENGTH                      @YL026YB 87384800
         DS    CL8                 DDNAME                      @YL026YB 87385600
DASTAT   DS    0CL7                STATUS TEXT UNIT            @YL026YB 87386400
         DS    CL2                 KEY                         @YL026YB 87387200
         DS    CL2                 NUMBER                      @YL026YB 87388000
         DS    CL2                 LENGTH                      @YL026YB 87388800
         DS    CL1                 STATUS                      @YL026YB 87389600
DANDISP  DS    0CL7                NORMAL DISP. TEXT UNIT      @YL026YB 87390400
         DS    CL2                 KEY                         @YL026YB 87391200
         DS    CL2                 NUMBER                      @YL026YB 87392000
         DS    CL2                 LENGTH                      @YL026YB 87392800
         DS    CL1                 NORMAL DISPOSITION          @YL026YB 87393600
DACDISP  DS    0CL7                CONDITIONAL DISP. TXT UNIT  @YL026YB 87394400
         DS    CL2                 KEY                         @YL026YB 87395200
         DS    CL2                 NUMBER                      @YL026YB 87396000
         DS    CL2                 LENGTH                      @YL026YB 87396800
         DS    CL1                 CONDITIONAL DISPOSITION     @YL026YB 87397600
INITSIZE EQU   *-SAVEAREA          LENGTH OF DSECT                      87400020
         EJECT                                                          87450020
         IKJEHCOM                                                       87500020
         DCBD  DSORG=PS                                                 87550020
         EJECT                                                          87600020
         CVT                                                            87650020
         EJECT                                                          87700020
         IKJTCB                                                         87750020
         SPACE 3                                                        87800000
         IEFZB4D0                                              @YL026YB 87850000
         EJECT                                                          87900000
         IEZCTGPL                                              @YL026YB 87950000
         EJECT                                                 @YL026YB 88000000
         IEZCTGFL                                              @YL026YB 88050000
         EJECT                                                 @YL026YB 88100000
         IKJUPT                                                @YL026YB 88150000
         EJECT                                                 @YL026YB 88200000
         IKJPSCB                                                        88250000
         EJECT                                                          88300000
         IKJIOPL                                               @YL026YB 88350000
         EJECT                                                 @YL026YB 88400000
         IKJCPPL                                                        88550020
         SPACE 2                                                        88600020
         IKJPPL                                                         88700020
         SPACE 2                                                        88710020
         IKJDAPL                                                        88750020
         EJECT                                                          88800020
IKJEHALM CSECT                                                          88850020
*********************************************************************** 88900020
*                                                                     * 88950020
*    THE CSECT BEGINS WITH A TABLE OF 8 BYTE ENTRIES, ONE FOR         * 90050020
*    EACH FIRST LEVEL MESSAGE.  THE FIRST HALFWORD OF EACH ENTRY      * 90100020
*    CONTAINS THE LENGTH OF A MESSAGE.  THE SECOND HALFWORD CONTAINS  * 90150020
*    THE OFFSET TO THE MESSAGE IN THE CSECT.  THE THIRD HALFWORD      * 90200020
*    CONTAINS THE OFFSET TO THE SEGMENT CHAIN IF MORE THAN ONE        * 90250020
*    MESSAGE SEGMENT EXISTS FOR A PARTICULAR MESSAGE.  THE FOURTH     * 90300020
*    AND LAST HALFWORD POINTS TO A TABLE DESCRIBING SECOND LEVEL      * 90350020
*    MESSAGES.  THE SEGMENT CHAIN ADDRESS IS CURRENTLY ALWAYS ZERO.   * 90400020
*                                                                     * 90450020
*    THE TABLE DESCRIBING SECOND LEVEL MESSAGES IS MADE UP OF         * 90600020
*    6 BYTE ENTRIES. A 2 BYTE LENGTH, A 2 BYTE MESSAGE OFFSET,        * 90650020
*    AND A 2 BYTE SEGMENT CHAIN OFFSET.                               * 90700020
*                                                                     * 90950020
*********************************************************************** 91000020
SEGCH0   EQU   0                   SEGMENT CHAIN OFFSET                 91010020
*                                                                       91020020
*        FIRST LEVEL MESSAGE TABLE                                      91030020
*                                                                       91040020
STARTALM DS    0F                  ALIGN FIRST LEVEL MESSAGE TABLE      91050020
         DC    AL2(L'MSGE1)        LENGTH OF MESSAGE                    91100020
         DC    AL2(MSGE1-STARTALM) OFFSET TO MESSAGE                    91150020
         DC    AL2(SEGCH0)         OFFSET TO SEGMENT CHAIN              91200020
         DC    AL2(SECLEVEL-STARTALM) OFFSET TO SECOND LEVEL TABLE      91250020
         DC    AL2(L'MSGE2)        LENGTH OF MESSAGE                    91300020
         DC    AL2(MSGE2-STARTALM) OFFSET TO MESSAGE                    91350020
         DC    AL2(SEGCH0)         OFFSET TO SEGMENT CHAIN              91400020
         DC    AL2(SECLEVEL-STARTALM) OFFSET TO SECOND LEVEL TABLE      91450020
         DC    AL2(L'MSGE3)        LENGTH OF MESSAGE                    91500020
         DC    AL2(MSGE3-STARTALM) OFFSET TO MESSAGE                    91550020
         DC    AL2(SEGCH0)         OFFSET TO SEGMENT CHAIN              91600020
         DC    AL2(SECLEVEL-STARTALM) OFFSET TO SECOND LEVEL TABLE      91650020
         DC    AL2(L'MSGE4)        LENGTH OF MESSAGE                    91700020
         DC    AL2(MSGE4-STARTALM) OFFSET TO MESSAGE                    91750020
         DC    AL2(SEGCH0)         OFFSET TO SEGMENT CHAIN              91800020
         DC    AL2(SECLEVEL-STARTALM) OFFSET TO SECOND LEVEL TABLE      91820020
         DC    AL2(L'MSGE5)        LENGTH OF MESSAGE                    91850020
         DC    AL2(MSGE5-STARTALM) OFFSET TO MESSAGE                    91900020
         DC    AL2(SEGCH0)         OFFSET TO SEGMENT CHAIN              91950020
         DC    AL2(SECLEVEL-STARTALM) OFFSET TO SECOND LEVEL TABLE      91970020
         DC    AL2(L'MSGE6)        LENGTH OF MESSAGE                    92000020
         DC    AL2(MSGE6-STARTALM) OFFSET TO MESSAGE                    92050020
         DC    AL2(SEGCH0)         OFFSET TO SEGMENT CHAIN              92100020
         DC    AL2(SECLEVEL-STARTALM) OFFSET TO SECOND LEVEL TABLE      92150020
*                                                                       92200020
*        FIRST LEVEL MESSAGES                                           92250020
*                                                                       92300020
*                                                                       92350020
MSGE1    DC    C'IKJ58300I HISTORY NOT AVAILABLE+'                      92400020
MSGE2    DC    C'IKJ58303I NOT ENOUGH MAIN STORAGE TO LIST '            92450020
MSGE3    DC    C'IKJ58302I NO DATA SETS ALLOCATED'                      92500020
MSGE4    DC    C'IKJ58301I MEMBERS NOT AVAILABLE+'                      92550020
MSGE5    DC    C'IKJ58304I COMMAND SYSTEM ERROR+'                       92600020
MSGE6    DC    C'IKJ58305I NOT ENOUGH MAIN STORAGE TO EXECUTE COMMAND'  92650020
*                                                                       92700020
*        SECOND LEVEL MESSAGE TABLE                                     92750020
*                                                                       92800020
SECLEVEL DS    0F                  ALIGN SECOND LEVEL MESSAGE TABLE     92900020
         DC    AL2(L'MSGSEC01)     LENGTH OF MESSAGE                    92950020
         DC    AL2(MSGSEC01-STARTALM) OFFSET TO MESSAGE                 93000020
         DC    AL2(SEGCH0)         OFFSET TO SEGMENT CHAIN              93050020
         DC    AL2(L'MSGSEC02)     LENGTH OF MESSAGE                    93100020
         DC    AL2(MSGSEC02-STARTALM) OFFSET TO MESSAGE                 93150020
         DC    AL2(SEGCH0)         OFFSET TO SEGMENT CHAIN              93200020
         DC    AL2(L'MSGSEC03)     LENGTH OF MESSAGE                    93250020
         DC    AL2(MSGSEC03-STARTALM) OFFSET TO MESSAGE                 93300020
         DC    AL2(SEGCH0)         OFFSET TO SEGMENT CHAIN              93350020
         DC    AL2(L'MSGSEC04)     LENGTH OF MESSAGE                    93400020
         DC    AL2(MSGSEC04-STARTALM) OFFSET TO MESSAGE                 93450020
         DC    AL2(SEGCH0)         OFFSET TO SEGMENT CHAIN              93500020
         DC    AL2(L'MSGSEC05)     LENGTH OF MESSAGE                    93550020
         DC    AL2(MSGSEC05-STARTALM) OFFSET TO MESSAGE                 93600020
         DC    AL2(SEGCH0)         OFFSET TO SEGMENT CHAIN              93650020
         DC    AL2(L'MSGSEC06)     LENGTH OF MESSAGE                    93700020
         DC    AL2(MSGSEC06-STARTALM) OFFSET TO MESSAGE                 93750020
         DC    AL2(SEGCH0)         OFFSET TO SEGMENT CHAIN              93800020
         DC    AL2(L'MSGSEC07)     LENGTH OF MESSAGE                    93850020
         DC    AL2(MSGSEC07-STARTALM) OFFSET TO MESSAGE                 93900020
         DC    AL2(SEGCH0)         OFFSET TO SEGMENT CHAIN              93950020
         DC    AL2(L'MSGSEC08)     LENGTH OF MESSAGE                    94000020
         DC    AL2(MSGSEC08-STARTALM) OFFSET TO MESSAGE                 94050020
         DC    AL2(SEGCH0)         OFFSET TO SEGMENT CHAIN              94100020
         DC    AL2(L'MSGSEC09)     LENGTH OF MESSAGE                    94150020
         DC    AL2(MSGSEC09-STARTALM) OFFSET TO MESSAGE                 94200020
         DC    AL2(SEGCH0)         OFFSET TO SEGMENT CHAIN              94250020
         DC    AL2(L'MSGSEC10)     LENGTH OF MESSAGE                    94300020
         DC    AL2(MSGSEC10-STARTALM) OFFSET TO MESSAGE                 94350020
         DC    AL2(SEGCH0)         OFFSET TO SEGMENT CHAIN              94400020
         DC    AL2(L'MSGSEC11)     LENGTH OF MESSAGE            ZA00106 94420002
         DC    AL2(MSGSEC11-STARTALM) OFFSET TO MESSAGE         ZA00106 94440002
         DC    AL2(SEGCH0)         OFFSET TO SEGMENT CHAIN      ZA00106 94460002
*                                                                       94500020
*        SECOND LEVEL MESSAGES                                          94550020
*                                                                       94600020
MSGSEC01 DC    C'IKJ583XXI REQUIRED VOLUME NOT MOUNTED'                 94650020
MSGSEC02 DC    C'IKJ583XXI DATA SET NOT ON VOLUME'                      94700020
MSGSEC03 EQU   *                                                        94750020
MSGSEC04 DC    C'IKJ583XXI I/O ERROR DURING OBTAIN, CODE '              94800020
MSGSEC05 DC    C'IKJ583XXI LOCATE ERROR CODE '                          94850020
MSGSEC06 DC    C'IKJ583XXI NOT ENOUGH MAIN STORAGE'                     94900020
MSGSEC07 DC    C'IKJ583XXI DIRECTORY STRUCTURE ERROR'                   94950020
MSGSEC08 DC    C'IKJ583XXI I/O SYNAD ERROR DURING DIRECTORY SEARCH '    95000020
MSGSEC09 EQU   *                                                        95050020
MSGSEC10 DC    C'IKJ583XXI PARSE ERROR CODE '                           95100020
MSGSEC11 DC    C'IKJ583XXI NO HISTORY AVAILABLE ON SPOOL DATA SETS'     95200002
*                                                               ZA00106 96200002
PATCH    DC    20X'00'             PATCH AREA                           96250003
         END                                                            97200002
./  ADD  SSI=61720073,NAME=IKJEHCIR
         TITLE '*********** IKJEHCIR:  CATALOG INFORMATION ROUTINE *****00001000
               ******** '                                               00002000
IKJEHCIR CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKJEHCIR  74.346'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         GETMAIN  R,LV=(0)                                              00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
*                                                                  0070 00022000
*        /************************************************************/ 00023000
*        /*                                                          */ 00024000
*        /* SET UP WORK AREA FOR CLP AND FPL.THEN CHECK ENTRY CODE   */ 00025000
*        /* FROM CIR PARAMETER LIST                                  */ 00026000
*        /*                                                          */ 00027000
*        /************************************************************/ 00028000
*                                                                  0071 00029000
*        CIRPTR = REG1;                                    /*@YL026YB*/ 00030000
         LR    CIRPTR,REG1                                         0071 00031000
*        CTGPLPTR = ADDR(CPLSTOR);                         /*@YL026YB*/ 00032000
         LA    CTGPLPTR,CPLSTOR                                    0072 00033000
*        CTGFLPTR = ADDR(FPLSTOR);                         /*@YL026YB*/ 00034000
         LA    @14,FPLSTOR                                         0073 00035000
         ST    @14,CTGFLPTR                                        0073 00036000
*        IF CIROPT = HEX01                                         0074 00037000
*          THEN                                                    0074 00038000
         CLI   CIROPT(CIRPTR),X'01'                                0074 00039000
         BNE   @RF00074                                            0074 00040000
*            CALL ENTRY01;                                 /*@YL026YB*/ 00041000
         BAL   @14,ENTRY01                                         0075 00042000
*          ELSE                                                    0076 00043000
*            IF CIROPT = HEX02                                     0076 00044000
*              THEN                                                0076 00045000
         B     @RC00074                                            0076 00046000
@RF00074 CLI   CIROPT(CIRPTR),X'02'                                0076 00047000
         BNE   @RF00076                                            0076 00048000
*                CALL ENTRY02;                             /*@YL026YB*/ 00049000
         BAL   @14,ENTRY02                                         0077 00050000
*              ELSE                                                0078 00051000
*                IF CIROPT = HEX04                                 0078 00052000
*                  THEN                                            0078 00053000
         B     @RC00076                                            0078 00054000
@RF00076 CLI   CIROPT(CIRPTR),X'04'                                0078 00055000
         BNE   @RF00078                                            0078 00056000
*                    CALL ENTRY04;                         /*@YL026YB*/ 00057000
         BAL   @14,ENTRY04                                         0079 00058000
*                  ELSE                                            0080 00059000
*                    CALL ENTRY06;                         /*@YL026YB*/ 00060000
*                                                                  0080 00061000
         B     @RC00078                                            0080 00062000
@RF00078 BAL   @14,ENTRY06                                         0080 00063000
*/********************************************************************/ 00064000
*/*                                                                  */ 00065000
*/* ENTRY01 IS THE PROCEDURE TO RETURN AN 8 BYTE QUALIFIER           */ 00066000
*/* WITH ENTRY TYPE. 44 BYTE NAMES ARE OBTAINED BY CALLING           */ 00067000
*/* SVC 26 FOR A GENERIC LOCATE.                                     */ 00068000
*/*                                                                  */ 00069000
*/********************************************************************/ 00070000
*                                                                  0081 00071000
*                                                                  0081 00072000
*ENTRY01: PROCEDURE;                                       /*@YL026YB*/ 00073000
         B     @PB00002                                            0081 00074000
ENTRY01  STM   @14,@12,@SA00002                                    0081 00075000
*        COUNT = 0;                                        /*@YL026YB*/ 00076000
         SLR   @14,@14                                             0082 00077000
         STH   @14,COUNT                                           0082 00078000
*        CNN = 0;                                                  0083 00079000
         STH   @14,CNN                                             0083 00080000
*        CNT = 0;                                                  0084 00081000
         STH   @14,CNT                                             0084 00082000
*        SWITCH = 0;                                               0085 00083000
*                                                                  0085 00084000
         STH   @14,SWITCH                                          0085 00085000
*        /************************************************************/ 00086000
*        /*                                                          */ 00087000
*        /* DO A GETMAIN TO OBTAIN A TEMPORARY WORKAREA FOR DATA     */ 00088000
*        /* RETURNED FROM SVC 26.SET REG 0 TO CONTAIN LENGTH OF      */ 00089000
*        /* WORKAREA AND SUBPOOL NUMBER.                             */ 00090000
*        /*                                                          */ 00091000
*        /************************************************************/ 00092000
*                                                                  0086 00093000
*        RFY (REG0,REG1) RSTD;                                     0086 00094000
*        REG0 = MAX1;                                              0087 00095000
         LH    REG0,@CH00208                                       0087 00096000
*        REG0 = REG0 | SUBPOOL1;                                   0088 00097000
         O     REG0,@CF00176                                       0088 00098000
*        CORESIZE = REG0;                                          0089 00099000
         ST    REG0,CORESIZE                                       0089 00100000
*        GEN (GETMAIN R,LV=(0));                                   0090 00101000
         GETMAIN R,LV=(0)                                               00102000
*        DPTR = REG1;                                              0091 00103000
*                                                                  0091 00104000
         ST    REG1,DPTR                                           0091 00105000
*        /************************************************************/ 00106000
*        /*                                                          */ 00107000
*        /* CHECK THE DSNAME FROM USER TO FIND ITS LENGTH.           */ 00108000
*        /* INITIALIZE PARAMETER LIST FOR CPL.USE MOVE CHARACTER     */ 00109000
*        /* LONG INSTRUCTION TO FILL QUALDATA WITH BLANKS            */ 00110000
*        /*                                                          */ 00111000
*        /************************************************************/ 00112000
*                                                                  0092 00113000
*        DO COUNT = LENGTH(USENAME) TO 1 BY -1             /*@YL026YB*/ 00114000
*           WHILE(USENAME(COUNT) = BLANK);                 /*@YL026YB*/ 00115000
         LA    @14,44                                              0092 00116000
         STH   @14,COUNT                                           0092 00117000
@DL00092 L     @10,CIRSRCH(,CIRPTR)                                0092 00118000
         ALR   @10,@14                                             0092 00119000
         AL    @10,@CF00251                                        0092 00120000
         CLI   USENAME(@10),X'40'                                  0092 00121000
         BNE   @DC00092                                            0092 00122000
*        END;                                              /*@YL026YB*/ 00123000
         BCTR  @14,0                                               0093 00124000
         STH   @14,COUNT                                           0093 00125000
         LTR   @14,@14                                             0093 00126000
         BP    @DL00092                                            0093 00127000
@DC00092 DS    0H                                                  0094 00128000
*        GELENGTH = COUNT + 1;    /*MAKE ROOM FOR PERIOD TO   ZA00645*/ 00129000
         LA    @14,1                                               0094 00130000
         AH    @14,COUNT                                           0094 00131000
         STC   @14,GELENGTH                                        0094 00132000
*                       /*LIMIT SEARCH TO CORRECT INDEX LEVEL ZA00645*/ 00133000
*        USENAME(GELENGTH) = PERIOD;     /*INSERT PERIOD      ZA00645*/ 00134000
         L     @10,CIRSRCH(,CIRPTR)                                0095 00135000
         ALR   @14,@10                                             0095 00136000
         AL    @14,@CF00251                                        0095 00137000
         MVI   USENAME(@14),X'4B'                                  0095 00138000
*        GNAME = USENAME(1:GELENGTH);                      /*@YL026YB*/ 00139000
         MVI   GNAME+1,C' '                                        0096 00140000
         MVC   GNAME+2(42),GNAME+1                                 0096 00141000
         SLR   @14,@14                                             0096 00142000
         IC    @14,GELENGTH                                        0096 00143000
         BCTR  @14,0                                               0096 00144000
         EX    @14,@SM00307                                        0096 00145000
*        CPLSTOR = ''B;                                    /*@YL026YB*/ 00146000
         XC    CPLSTOR(32),CPLSTOR                                 0097 00147000
*        CALL MOVEINST(QUALDATA);                          /*@YL026YB*/ 00148000
         L     @14,DPTR                                            0098 00149000
         LA    @14,QUALDATA(,@14)                                  0098 00150000
         ST    @14,@AL00001                                        0098 00151000
         LA    @01,@AL00001                                        0098 00152000
         BAL   @14,MOVEINST                                        0098 00153000
*        QUALN = LENGTH(QUALAREA);                         /*@YL026YB*/ 00154000
*                                                                  0099 00155000
         L     @14,DPTR                                            0099 00156000
         MVC   QUALN(2,@14),@CH00208                               0099 00157000
*        /************************************************************/ 00158000
*        /*                                                          */ 00159000
*        /* TURN ON FLAGS FOR GENERIC LOCATE                         */ 00160000
*        /*                                                          */ 00161000
*        /************************************************************/ 00162000
*                                                                  0100 00163000
*        CTGNAME = ON;                                     /*@YL026YB*/ 00164000
*        CTGCNAME = ON;                                    /*@YL026YB*/ 00165000
         OI    CTGNAME(CTGPLPTR),B'00000110'                       0101 00166000
*        CTGSUPLT = ON;                                    /*@YL026YB*/ 00167000
         OI    CTGSUPLT(CTGPLPTR),B'00010000'                      0102 00168000
*        CTGGENLD = ON;                                    /*@YL026YB*/ 00169000
         OI    CTGGENLD(CTGPLPTR),B'00000001'                      0103 00170000
*        CTGAM0 = ON;                                      /*@YL026YB*/ 00171000
         OI    CTGAM0(CTGPLPTR),B'00000001'                        0104 00172000
*        CTGENT = ADDR(GENAME);                            /*@YL026YB*/ 00173000
         LA    @10,GENAME                                          0105 00174000
         ST    @10,CTGENT(,CTGPLPTR)                               0105 00175000
*        CTGCAT = CIRVOL;                                  /*@YL026YB*/ 00176000
         MVC   CTGCAT(4,CTGPLPTR),CIRVOL(CIRPTR)                   0106 00177000
*        CTGPSWD = CIRPSWD;                                /*@YL026YB*/ 00178000
         MVC   CTGPSWD(4,CTGPLPTR),CIRPSWD(CIRPTR)                 0107 00179000
*        CTGWKA = DPTR;                                    /*@YL026YB*/ 00180000
*                                                                  0108 00181000
         ST    @14,CTGWKA(,CTGPLPTR)                               0108 00182000
*        /************************************************************/ 00183000
*        /*                                                          */ 00184000
*        /* CALL SVC 26 FOR GENERIC LOCATE. ON RETURN CHECK RETURN   */ 00185000
*        /* CODE                                                     */ 00186000
*        /*                                                          */ 00187000
*        /************************************************************/ 00188000
*                                                                  0109 00189000
*        REG1 = CTGPLPTR;                                  /*@YL026YB*/ 00190000
         LR    REG1,CTGPLPTR                                       0109 00191000
*        GENERATE (CATLG (1));                             /*@YL026YB*/ 00192000
         CATLG (1)                                                      00193000
*        RETNCODE = REG15;                                 /*@YL026YB*/ 00194000
*                                                                  0111 00195000
         ST    REG15,RETNCODE                                      0111 00196000
*        /************************************************************/ 00197000
*        /*                                                          */ 00198000
*        /* IF RETURN CODE IS ZERO, THIS ROUTINE TAKES 44 BYTE NAMES */ 00199000
*        /* RETURNED AND COMPARES THEM WITH THE NAME FROM THE USER.  */ 00200000
*        /* THEN RETURNS THE 8 BYTE QUALIFIERS NEEDED TO COMPLETE    */ 00201000
*        /* THE NAME                                                 */ 00202000
*        /*                                                          */ 00203000
*        /************************************************************/ 00204000
*                                                                  0112 00205000
*        IF  RETNCODE = 0                                          0112 00206000
*          THEN                                                    0112 00207000
         L     @14,RETNCODE                                        0112 00208000
         LTR   @14,@14                                             0112 00209000
         BNZ   @RF00112                                            0112 00210000
*            DO;                                           /*@YL026YB*/ 00211000
*              IF AREALN < RTNQLN                          /*@YL026YB*/ 00212000
*                THEN                                      /*@YL026YB*/ 00213000
         L     @14,CIRWA(,CIRPTR)                                  0114 00214000
         LH    @14,AREALN(,@14)                                    0114 00215000
         L     @10,DPTR                                            0114 00216000
         CH    @14,RTNQLN(,@10)                                    0114 00217000
         BNL   @RF00114                                            0114 00218000
*                  DO;                                     /*@YL026YB*/ 00219000
*                    CIRLOCRC = 44;                        /*@YL026YB*/ 00220000
         MVI   CIRLOCRC(CIRPTR),X'2C'                              0116 00221000
*                    RETNCODE = 4;                         /*@YL026YB*/ 00222000
         MVC   RETNCODE(4),@CF00190                                0117 00223000
*                    GOTO FRECR01;                         /*@YL026YB*/ 00224000
         B     FRECR01                                             0118 00225000
*                  END;                                    /*@YL026YB*/ 00226000
*            CNT = COUNT + 2;                              /*@YL026YB*/ 00227000
@RF00114 LA    @14,2                                               0120 00228000
         AH    @14,COUNT                                           0120 00229000
         STH   @14,CNT                                             0120 00230000
*            DATALN = RTNQLN;                              /*@YL026YB*/ 00231000
         L     @14,CIRWA(,CIRPTR)                                  0121 00232000
         L     @10,DPTR                                            0121 00233000
         LH    @03,RTNQLN(,@10)                                    0121 00234000
         STH   @03,DATALN(,@14)                                    0121 00235000
*            FIRST = 1;                                    /*@YL026YB*/ 00236000
         LA    @14,1                                               0122 00237000
         STH   @14,FIRST                                           0122 00238000
*            LAST = LENGTH(TYPE01);                        /*@YL026YB*/ 00239000
         MVC   LAST(2),@CH00279                                    0123 00240000
*            QULTYPE = '07'X;                              /*@YL026YB*/ 00241000
         MVI   QULTYPE,X'07'                                       0124 00242000
*            QULPTR = ADDR(QUALDATA);                      /*@YL026YB*/ 00243000
         LA    @10,QUALDATA(,@10)                                  0125 00244000
         ST    @10,QULPTR                                          0125 00245000
*            CONTROL = (RTNQLN - 4) / 45;                  /*@YL026YB*/ 00246000
         LR    @04,@03                                             0126 00247000
         SH    @04,@CH00190                                        0126 00248000
         SRDA  @04,32                                              0126 00249000
         D     @04,@CF00206                                        0126 00250000
         STH   @05,CONTROL                                         0126 00251000
*            DO  I = 1 TO CONTROL;                         /*@YL026YB*/ 00252000
         B     @DE00127                                            0127 00253000
@DL00127 DS    0H                                                  0128 00254000
*            QULBUF = QULPTR->DATABLK;                     /*@YL026YB*/ 00255000
         L     @14,QULPTR                                          0128 00256000
         MVC   QULBUF(45),DATABLK(@14)                             0128 00257000
*            IF QUALIFY(CNT) = BLANK                       /*@YL026YB*/ 00258000
*               THEN                                       /*@YL026YB*/ 00259000
         LH    @14,CNT                                             0129 00260000
         LA    @10,QUALIFY-1(@14)                                  0129 00261000
         CLI   0(@10),X'40'                                        0129 00262000
         BNE   @RF00129                                            0129 00263000
*                  DO;                                     /*@YL026YB*/ 00264000
*                   RETNCODE = 12;                         /*@YL026YB*/ 00265000
         MVC   RETNCODE(4),@CF00123                                0131 00266000
*                   GOTO FRECR01;                          /*@YL026YB*/ 00267000
         B     FRECR01                                             0132 00268000
*                  END;                                    /*@YL026YB*/ 00269000
*            DO  J = CNT TO 44 WHILE (QUALIFY(J) ¬= BLANK);/*@YL026YB*/ 00270000
@RF00129 LH    @14,CNT                                             0134 00271000
         B     @DE00134                                            0134 00272000
@DL00134 LA    @10,QUALIFY-1(@14)                                  0134 00273000
         CLI   0(@10),X'40'                                        0134 00274000
         BE    @DC00134                                            0134 00275000
*               /* MOVE ONLY NAMES LOCATED WITH THEIR NEXT    ZA00646*/ 00276000
*               /* LEVEL BEING ALSO THEIR LAST, IE. NOT INDEX ZA00646*/ 00277000
*               IF QUALIFY(J) = PERIOD THEN                /* ZA00646*/ 00278000
         LA    @10,QUALIFY-1(@14)                                  0135 00279000
         CLI   0(@10),X'4B'                                        0135 00280000
         BE    @RT00135                                            0135 00281000
*                 GOTO BYPASS;                             /* ZA00646*/ 00282000
*               ELSE;                                      /* ZA00646*/ 00283000
*            END;                                          /*@YL026YB*/ 00284000
         AH    @14,@CH00051                                        0138 00285000
@DE00134 ST    @14,J                                               0138 00286000
         CH    @14,@CH00183                                        0138 00287000
         BNH   @DL00134                                            0138 00288000
@DC00134 DS    0H                                                  0139 00289000
*            CNN = J - 1;                                  /*@YL026YB*/ 00290000
         L     @14,J                                               0139 00291000
         BCTR  @14,0                                               0139 00292000
         STH   @14,CNN                                             0139 00293000
*            QULNAME = QUALIFY(CNT:CNN);                   /*@YL026YB*/ 00294000
         MVI   QULNAME+1,C' '                                      0140 00295000
         MVC   QULNAME+2(6),QULNAME+1                              0140 00296000
         LH    @10,CNT                                             0140 00297000
         SLR   @14,@10                                             0140 00298000
         LA    @03,QUALIFY-1(@10)                                  0140 00299000
         EX    @14,@SM00311                                        0140 00300000
*            DATAREA(FIRST:LAST) = TYPE01;                 /*@YL026YB*/ 00301000
*                                                                  0141 00302000
         LH    @14,FIRST                                           0141 00303000
         L     @10,CIRWA(,CIRPTR)                                  0141 00304000
         ALR   @10,@14                                             0141 00305000
         LH    @03,LAST                                            0141 00306000
         LCR   @14,@14                                             0141 00307000
         ALR   @14,@03                                             0141 00308000
         EX    @14,@SM00313                                        0141 00309000
*            /********************************************************/ 00310000
*            /*                                                      */ 00311000
*            /* ADJUST SUBSTRING VARIABLES AND POINT TO NEXT 44 BYTE */ 00312000
*            /* NAME                                                 */ 00313000
*            /*                                                      */ 00314000
*            /********************************************************/ 00315000
*                                                                  0142 00316000
*            FIRST = LAST + 1;                             /*@YL026YB*/ 00317000
         AH    @03,@CH00051                                        0142 00318000
         STH   @03,FIRST                                           0142 00319000
*            LAST = FIRST + LENGTH(QULNAME);               /*@YL026YB*/ 00320000
         AH    @03,@CH00055                                        0143 00321000
         STH   @03,LAST                                            0143 00322000
*BYPASS:     QULPTR = QULPTR + 45;                         /* ZA00646*/ 00323000
BYPASS   LA    @14,45                                              0144 00324000
         AL    @14,QULPTR                                          0144 00325000
         ST    @14,QULPTR                                          0144 00326000
*            END;                                          /*@YL026YB*/ 00327000
*                                                                  0145 00328000
         LA    @14,1                                               0145 00329000
         AL    @14,I                                               0145 00330000
@DE00127 ST    @14,I                                               0145 00331000
         CH    @14,CONTROL                                         0145 00332000
         BNH   @DL00127                                            0145 00333000
*            /********************************************************/ 00334000
*            /*                                                      */ 00335000
*            /*   PUT HEX FF AS THE LAST BYTE IN USER WORK AREA TO   */ 00336000
*            /*   TO INDICATE END OF DATA                            */ 00337000
*            /*                                                      */ 00338000
*            /********************************************************/ 00339000
*                                                                  0146 00340000
*            ENDBYTE = FIRST;                              /*@YL026YB*/ 00341000
         LH    ENDBYTE,FIRST                                       0146 00342000
*            DATAREA(ENDBYTE) = FOXES;                     /*@YL026YB*/ 00343000
         L     @14,CIRWA(,CIRPTR)                                  0147 00344000
         ALR   @14,ENDBYTE                                         0147 00345000
         MVI   DATAREA-1(@14),X'FF'                                0147 00346000
*            RETNCODE = 0;                                 /*@YL026YB*/ 00347000
         SLR   @14,@14                                             0148 00348000
         ST    @14,RETNCODE                                        0148 00349000
*            GOTO FRECR01;                                 /*@YL026YB*/ 00350000
         B     FRECR01                                             0149 00351000
*            END;                                          /*@YL026YB*/ 00352000
*                                                                  0150 00353000
*        /************************************************************/ 00354000
*        /*                                                          */ 00355000
*        /* COMPARE RETURN CODE FROM SVC 26 WITH ERROR CODES IN TABLE*/ 00356000
*        /*                                                          */ 00357000
*        /************************************************************/ 00358000
*                                                                  0151 00359000
*        ELSE                                                      0151 00360000
*            DO;                                           /*@YL026YB*/ 00361000
@RF00112 DS    0H                                                  0152 00362000
*              DO I =1 TO 8;                               /*@YL026YB*/ 00363000
         LA    @14,1                                               0152 00364000
         ST    @14,I                                               0152 00365000
@DL00152 DS    0H                                                  0153 00366000
*              IF RTNTABLE(I) = RETNCODE                           0153 00367000
*                THEN                                              0153 00368000
         SLA   @14,2                                               0153 00369000
         L     @14,RTNTABLE-4(@14)                                 0153 00370000
         C     @14,RETNCODE                                        0153 00371000
         BNE   @RF00153                                            0153 00372000
*                  DO;                                     /*@YL026YB*/ 00373000
*                    SWITCH = 1;                           /*@YL026YB*/ 00374000
         MVC   SWITCH(2),@CH00051                                  0155 00375000
*                    CIRLOCRC = REG15;                     /*@YL026YB*/ 00376000
         STC   REG15,CIRLOCRC(,CIRPTR)                             0156 00377000
*                    RETNCODE = 4;                         /*@YL026YB*/ 00378000
         MVC   RETNCODE(4),@CF00190                                0157 00379000
*                    GOTO FRECR01;                         /*@YL026YB*/ 00380000
         B     FRECR01                                             0158 00381000
*                  END;                                    /*@YL026YB*/ 00382000
*                  ELSE;                                   /*@YL026YB*/ 00383000
@RF00153 DS    0H                                                  0161 00384000
*              END;                                        /*@YL026YB*/ 00385000
*                                                                  0161 00386000
         LA    @14,1                                               0161 00387000
         AL    @14,I                                               0161 00388000
         ST    @14,I                                               0161 00389000
         CH    @14,@CH00055                                        0161 00390000
         BNH   @DL00152                                            0161 00391000
*            /********************************************************/ 00392000
*            /*                                                      */ 00393000
*            /* IF THE RETURN CODE DOES NOT MATCH A NUMBER IN THE    */ 00394000
*            /* TABLE, SET THE RETURN CODE TO 12                     */ 00395000
*            /*                                                      */ 00396000
*            /********************************************************/ 00397000
*                                                                  0162 00398000
*            IF SWITCH ¬= 1                                        0162 00399000
*               THEN                                               0162 00400000
         CLC   SWITCH(2),@CH00051                                  0162 00401000
         BE    @RF00162                                            0162 00402000
*                 RETNCODE = 12;                           /*@YL026YB*/ 00403000
         MVC   RETNCODE(4),@CF00123                                0163 00404000
*         END;                                             /*@YL026YB*/ 00405000
*                                                                  0164 00406000
@RF00162 DS    0H                                                  0165 00407000
*        /************************************************************/ 00408000
*        /*                                                          */ 00409000
*        /* FREE TEMPORARY WORKAREA. RETURN TO CALLER                */ 00410000
*        /*                                                          */ 00411000
*        /************************************************************/ 00412000
*                                                                  0165 00413000
*FRECR01: REG1 = DPTR;                                             0165 00414000
FRECR01  L     REG1,DPTR                                           0165 00415000
*         REG0 = CORESIZE;                                         0166 00416000
         L     REG0,CORESIZE                                       0166 00417000
*         GEN (FREEMAIN R,LV=(0),A=(1));                           0167 00418000
         FREEMAIN R,LV=(0),A=(1)                                        00419000
*         RFY (REG0,REG1) UNRSTD;                                  0168 00420000
*         END;                                             /*@YL026YB*/ 00421000
*                                                                  0169 00422000
@EL00002 DS    0H                                                  0169 00423000
@EF00002 DS    0H                                                  0169 00424000
@ER00002 LM    @14,@12,@SA00002                                    0169 00425000
         BR    @14                                                 0169 00426000
*/********************************************************************/ 00427000
*/*                                                                  */ 00428000
*/* ENTRY02 IS THE PROCEDURE TO RETURN A 44 BYTE NAME WITH ENTRY     */ 00429000
*/* TYPE. IT ISSUES SVC 26 FOR GENERIC LOCATE TO A LIST OF 44 BYTE   */ 00430000
*/* NAMES                                                            */ 00431000
*/********************************************************************/ 00432000
*                                                                  0170 00433000
*ENTRY02:PROCEDURE;                                        /*@YL026YB*/ 00434000
ENTRY02  STM   @14,@12,@SA00003                                    0170 00435000
*        COUNT = 0;                                                0171 00436000
         SLR   @14,@14                                             0171 00437000
         STH   @14,COUNT                                           0171 00438000
*        SWITCH = 0;                                               0172 00439000
         STH   @14,SWITCH                                          0172 00440000
*        RFY (REG1) RSTD;                                          0173 00441000
*                                                                  0173 00442000
*        /************************************************************/ 00443000
*        /*                                                          */ 00444000
*        /* CHECK THE DSNAME FROM USER TO FIND ITS LENGTH.           */ 00445000
*        /* INITIALIZE PARAMETER LIST FOR CPL.USE MOVE CHARACTER     */ 00446000
*        /* LONG INSTRUCTION TO FILL QUALDATA WITH BLANKS            */ 00447000
*        /*                                                          */ 00448000
*        /************************************************************/ 00449000
*                                                                  0174 00450000
*        DO COUNT = LENGTH(USENAME) TO 1 BY -1             /*@YL026YB*/ 00451000
*           WHILE(USENAME(COUNT) = BLANK);                 /*@YL026YB*/ 00452000
         LA    @14,44                                              0174 00453000
         STH   @14,COUNT                                           0174 00454000
@DL00174 L     @10,CIRSRCH(,CIRPTR)                                0174 00455000
         ALR   @10,@14                                             0174 00456000
         AL    @10,@CF00251                                        0174 00457000
         CLI   USENAME(@10),X'40'                                  0174 00458000
         BNE   @DC00174                                            0174 00459000
*        END;                                              /*@YL026YB*/ 00460000
         BCTR  @14,0                                               0175 00461000
         STH   @14,COUNT                                           0175 00462000
         LTR   @14,@14                                             0175 00463000
         BP    @DL00174                                            0175 00464000
@DC00174 DS    0H                                                  0176 00465000
*        GELENGTH = COUNT + 1;    /*MAKE ROOM FOR PERIOD TO   ZA00645*/ 00466000
         LA    @14,1                                               0176 00467000
         AH    @14,COUNT                                           0176 00468000
         STC   @14,GELENGTH                                        0176 00469000
*                       /*LIMIT SEARCH TO CORRECT INDEX LEVEL ZA00645*/ 00470000
*        USENAME(GELENGTH) = PERIOD;     /*INSERT PERIOD      ZA00645*/ 00471000
         L     @10,CIRSRCH(,CIRPTR)                                0177 00472000
         ALR   @14,@10                                             0177 00473000
         AL    @14,@CF00251                                        0177 00474000
         MVI   USENAME(@14),X'4B'                                  0177 00475000
*        GNAME = USENAME(1:GELENGTH);                      /*@YL026YB*/ 00476000
         MVI   GNAME+1,C' '                                        0178 00477000
         MVC   GNAME+2(42),GNAME+1                                 0178 00478000
         SLR   @14,@14                                             0178 00479000
         IC    @14,GELENGTH                                        0178 00480000
         BCTR  @14,0                                               0178 00481000
         EX    @14,@SM00307                                        0178 00482000
*        CPLSTOR = ''B;                                    /*@YL026YB*/ 00483000
*                                                                  0179 00484000
         XC    CPLSTOR(32),CPLSTOR                                 0179 00485000
*        /************************************************************/ 00486000
*        /*                                                          */ 00487000
*        /* TURN ON FLAGS FOR GENERIC LOCATE                         */ 00488000
*        /*                                                          */ 00489000
*        /************************************************************/ 00490000
*                                                                  0180 00491000
*        CTGNAME = ON;                                     /*@YL026YB*/ 00492000
*        CTGCNAME = ON;                                    /*@YL026YB*/ 00493000
         OI    CTGNAME(CTGPLPTR),B'00000110'                       0181 00494000
*        CTGSUPLT = ON;                                    /*@YL026YB*/ 00495000
         OI    CTGSUPLT(CTGPLPTR),B'00010000'                      0182 00496000
*        CTGGENLD = ON;                                    /*@YL026YB*/ 00497000
         OI    CTGGENLD(CTGPLPTR),B'00000001'                      0183 00498000
*        CTGAM0 = ON;                                      /*@YL026YB*/ 00499000
         OI    CTGAM0(CTGPLPTR),B'00000001'                        0184 00500000
*        CTGENT = ADDR(GENAME);                            /*@YL026YB*/ 00501000
         LA    @14,GENAME                                          0185 00502000
         ST    @14,CTGENT(,CTGPLPTR)                               0185 00503000
*        CTGCAT = CIRVOL;                                  /*@YL026YB*/ 00504000
         MVC   CTGCAT(4,CTGPLPTR),CIRVOL(CIRPTR)                   0186 00505000
*        CTGPSWD = CIRPSWD;                                /*@YL026YB*/ 00506000
         MVC   CTGPSWD(4,CTGPLPTR),CIRPSWD(CIRPTR)                 0187 00507000
*        CTGWKA = CIRWA;                                   /*@YL026YB*/ 00508000
*                                                                  0188 00509000
         MVC   CTGWKA(4,CTGPLPTR),CIRWA(CIRPTR)                    0188 00510000
*        /************************************************************/ 00511000
*        /*                                                          */ 00512000
*        /* CALL SVC 26 FOR GENERIC LOCATE. ON RETURN CHECK RETURN   */ 00513000
*        /* CODE                                                     */ 00514000
*        /*                                                          */ 00515000
*        /************************************************************/ 00516000
*                                                                  0189 00517000
*        REG1 = CTGPLPTR;                                  /*@YL026YB*/ 00518000
         LR    REG1,CTGPLPTR                                       0189 00519000
*        GENERATE (CATLG (1));                             /*@YL026YB*/ 00520000
         CATLG (1)                                                      00521000
*        RETNCODE = REG15;                                 /*@YL026YB*/ 00522000
*                                                                  0191 00523000
         ST    REG15,RETNCODE                                      0191 00524000
*        /************************************************************/ 00525000
*        /*                                                          */ 00526000
*        /* IF RETURN CODE IS ZERO, 44 BYTE NAMES NOW IN USER        */ 00527000
*        /* WORK AREA.PUT A HEX FF AS THE LAST BYTE IN               */ 00528000
*        /* USER WORK AREA TO INDICATE END OF DATA                   */ 00529000
*        /*                                                          */ 00530000
*        /************************************************************/ 00531000
*                                                                  0192 00532000
*        IF RETNCODE = 0                                           0192 00533000
*          THEN                                                    0192 00534000
         L     @14,RETNCODE                                        0192 00535000
         LTR   @14,@14                                             0192 00536000
         BNZ   @RF00192                                            0192 00537000
*            DO;                                           /*@YL026YB*/ 00538000
*              ENDBYTE = DATALN - 3;                       /*@YL026YB*/ 00539000
         L     @14,CIRWA(,CIRPTR)                                  0194 00540000
         LH    ENDBYTE,DATALN(,@14)                                0194 00541000
         SH    ENDBYTE,@CH00090                                    0194 00542000
*              DATAREA(ENDBYTE) = FOXES;                   /*@YL026YB*/ 00543000
         ALR   @14,ENDBYTE                                         0195 00544000
         MVI   DATAREA-1(@14),X'FF'                                0195 00545000
*            END;                                          /*@YL026YB*/ 00546000
*          /**********************************************************/ 00547000
*          /*                                                        */ 00548000
*          /* COMPARE RETURN CODE FROM SVC 26 WITH ERROR CODES IN    */ 00549000
*          /* TABLE                                                  */ 00550000
*          /**********************************************************/ 00551000
*          ELSE                                                    0197 00552000
*                                                                  0197 00553000
*            DO;                                           /*@YL026YB*/ 00554000
         B     @RC00192                                            0197 00555000
@RF00192 DS    0H                                                  0198 00556000
*              DO I = 1 TO 8;                              /*@YL026YB*/ 00557000
         LA    @14,1                                               0198 00558000
         ST    @14,I                                               0198 00559000
@DL00198 DS    0H                                                  0199 00560000
*              IF RTNTABLE(I) = RETNCODE                           0199 00561000
*                THEN                                              0199 00562000
         SLA   @14,2                                               0199 00563000
         L     @14,RTNTABLE-4(@14)                                 0199 00564000
         C     @14,RETNCODE                                        0199 00565000
         BNE   @RF00199                                            0199 00566000
*                  DO;                                     /*@YL026YB*/ 00567000
*                    SWITCH = 1;                           /*@YL026YB*/ 00568000
         MVC   SWITCH(2),@CH00051                                  0201 00569000
*                    CIRLOCRC = REG15;                     /*@YL026YB*/ 00570000
         STC   REG15,CIRLOCRC(,CIRPTR)                             0202 00571000
*                    RETNCODE = 4;                         /*@YL026YB*/ 00572000
         MVC   RETNCODE(4),@CF00190                                0203 00573000
*                  END;                                    /*@YL026YB*/ 00574000
*                ELSE;                                     /*@YL026YB*/ 00575000
@RF00199 DS    0H                                                  0206 00576000
*            END;                                          /*@YL026YB*/ 00577000
*                                                                  0206 00578000
         LA    @14,1                                               0206 00579000
         AL    @14,I                                               0206 00580000
         ST    @14,I                                               0206 00581000
         CH    @14,@CH00055                                        0206 00582000
         BNH   @DL00198                                            0206 00583000
*            /********************************************************/ 00584000
*            /*                                                      */ 00585000
*            /* IF THE RETURN CODE DOES NOT MATCH A NUMBER IN THE    */ 00586000
*            /* TABLE, SET THE RETURN CODE TO 12                     */ 00587000
*            /*                                                      */ 00588000
*            /********************************************************/ 00589000
*                                                                  0207 00590000
*            IF SWITCH ¬= 1                                        0207 00591000
*              THEN                                                0207 00592000
         CLC   SWITCH(2),@CH00051                                  0207 00593000
         BE    @RF00207                                            0207 00594000
*                RETNCODE = 12;                            /*@YL026YB*/ 00595000
         MVC   RETNCODE(4),@CF00123                                0208 00596000
*        END;                                              /*@YL026YB*/ 00597000
*        RFY (REG1) UNRSTD;                                        0210 00598000
*        END;                                              /*@YL026YB*/ 00599000
*                                                                  0211 00600000
@EL00003 DS    0H                                                  0211 00601000
@EF00003 DS    0H                                                  0211 00602000
@ER00003 LM    @14,@12,@SA00003                                    0211 00603000
         BR    @14                                                 0211 00604000
*/********************************************************************/ 00605000
*/*                                                                  */ 00606000
*/* ENTRY04 IS THE PROCEDURE TO RETURN VOLUMN INFORMATION.SVC 26     */ 00607000
*/* IS ISSUED FOR A VSAM LOCATE                                      */ 00608000
*/*                                                                  */ 00609000
*/********************************************************************/ 00610000
*                                                                  0212 00611000
*ENTRY04: PROCEDURE;                                       /*@YL026YB*/ 00612000
ENTRY04  STM   @14,@12,@SA00004                                    0212 00613000
*        COUNT = 0;                                                0213 00614000
         SLR   @14,@14                                             0213 00615000
         STH   @14,COUNT                                           0213 00616000
*        SWITCH = 0;                                               0214 00617000
*                                                                  0214 00618000
         STH   @14,SWITCH                                          0214 00619000
*        /************************************************************/ 00620000
*        /*                                                          */ 00621000
*        /* DO A GETMAIN TO OBTAIN A TEMPORARY WORKAREA FOR DATA     */ 00622000
*        /* RETURNED FROM SVC 26.SET REG 0 TO CONTAIN LENGTH OF      */ 00623000
*        /* WORKAREA AND SUBPOOL NUMBER.                             */ 00624000
*        /*                                                          */ 00625000
*        /************************************************************/ 00626000
*                                                                  0215 00627000
*        RFY (REG0,REG1) RSTD;                                     0215 00628000
*        REG0 = MAX1;                                              0216 00629000
         LH    REG0,@CH00208                                       0216 00630000
*        REG0 = REG0 | SUBPOOL1;                           /*@YL026YB*/ 00631000
         O     REG0,@CF00176                                       0217 00632000
*        CORESIZE = REG0;                                          0218 00633000
         ST    REG0,CORESIZE                                       0218 00634000
*        GEN (GETMAIN R,LV=(0));                                   0219 00635000
         GETMAIN R,LV=(0)                                               00636000
*        DPTR = REG1;                                              0220 00637000
*                                                                  0220 00638000
         ST    REG1,DPTR                                           0220 00639000
*        /************************************************************/ 00640000
*        /*                                                          */ 00641000
*        /* CHECK THE DSNAME FROM USER TO FIND ITS LENGTH.           */ 00642000
*        /* INITIALIZE PARAMETER LIST FOR CPL.USE MOVE CHARACTER     */ 00643000
*        /* LONG INSTRUCTION TO FILL QUALDATA WITH BLANKS            */ 00644000
*        /*                                                          */ 00645000
*        /************************************************************/ 00646000
*                                                                  0221 00647000
*        DO COUNT = LENGTH(USENAME) TO 1 BY -1             /*@YL026YB*/ 00648000
*           WHILE(USENAME(COUNT) = BLANK);                 /*@YL026YB*/ 00649000
         LA    @14,44                                              0221 00650000
         STH   @14,COUNT                                           0221 00651000
@DL00221 L     @10,CIRSRCH(,CIRPTR)                                0221 00652000
         ALR   @10,@14                                             0221 00653000
         AL    @10,@CF00251                                        0221 00654000
         CLI   USENAME(@10),X'40'                                  0221 00655000
         BNE   @DC00221                                            0221 00656000
*        END;                                              /*@YL026YB*/ 00657000
         BCTR  @14,0                                               0222 00658000
         STH   @14,COUNT                                           0222 00659000
         LTR   @14,@14                                             0222 00660000
         BP    @DL00221                                            0222 00661000
@DC00221 DS    0H                                                  0223 00662000
*        GELENGTH = COUNT;                                 /*@YL026YB*/ 00663000
         LH    @14,COUNT                                           0223 00664000
         STC   @14,GELENGTH                                        0223 00665000
*        GNAME = USENAME(1:GELENGTH);                      /*@YL026YB*/ 00666000
         MVI   GNAME+1,C' '                                        0224 00667000
         MVC   GNAME+2(42),GNAME+1                                 0224 00668000
         BCTR  @14,0                                               0224 00669000
         L     @10,CIRSRCH(,CIRPTR)                                0224 00670000
         EX    @14,@SM00307                                        0224 00671000
*        CPLSTOR = ''B;                                    /*@YL026YB*/ 00672000
         XC    CPLSTOR(32),CPLSTOR                                 0225 00673000
*        FPLSTOR = ''B;                                    /*@YL026YB*/ 00674000
         XC    FPLSTOR(24),FPLSTOR                                 0226 00675000
*        CALL MOVEINST(QUALDATA);                          /*@YL026YB*/ 00676000
         L     @14,DPTR                                            0227 00677000
         LA    @14,QUALDATA(,@14)                                  0227 00678000
         ST    @14,@AL00001                                        0227 00679000
         LA    @01,@AL00001                                        0227 00680000
         BAL   @14,MOVEINST                                        0227 00681000
*        QUALN = LENGTH(QUALAREA);                         /*@YL026YB*/ 00682000
*                                                                  0228 00683000
         L     @14,DPTR                                            0228 00684000
         MVC   QUALN(2,@14),@CH00208                               0228 00685000
*        /************************************************************/ 00686000
*        /*                                                          */ 00687000
*        /* TURN ON FLAGS FOR GENERIC LOCATE                         */ 00688000
*        /*                                                          */ 00689000
*        /************************************************************/ 00690000
*                                                                  0229 00691000
*        CTGNAME = ON;                                     /*@YL026YB*/ 00692000
*        CTGCNAME = ON;                                    /*@YL026YB*/ 00693000
         OI    CTGNAME(CTGPLPTR),B'00000110'                       0230 00694000
*        CTGFUNC = '001'B;                                 /*@YL026YB*/ 00695000
         NI    CTGFUNC(CTGPLPTR),B'00111111'                       0231 00696000
         OI    CTGFUNC(CTGPLPTR),B'00100000'                       0231 00697000
*        CTGAM0 = ON;                                      /*@YL026YB*/ 00698000
         OI    CTGAM0(CTGPLPTR),B'00000001'                        0232 00699000
*        CTGENT = ADDR(GNAME);                             /*@YL026YB*/ 00700000
         LA    @10,GNAME                                           0233 00701000
         ST    @10,CTGENT(,CTGPLPTR)                               0233 00702000
*        CTGCAT = CIRVOL;                                  /*@YL026YB*/ 00703000
         MVC   CTGCAT(4,CTGPLPTR),CIRVOL(CIRPTR)                   0234 00704000
*        CTGPSWD = CIRPSWD;                                /*@YL026YB*/ 00705000
         MVC   CTGPSWD(4,CTGPLPTR),CIRPSWD(CIRPTR)                 0235 00706000
*        CTGWKA = DPTR;                                    /*@YL026YB*/ 00707000
*                                                                  0236 00708000
         ST    @14,CTGWKA(,CTGPLPTR)                               0236 00709000
*        /************************************************************/ 00710000
*        /*                                                          */ 00711000
*        /* SET UP PARAMETER LIST FOR FPL                            */ 00712000
*        /*                                                          */ 00713000
*        /************************************************************/ 00714000
*                                                                  0237 00715000
*        CTGNOFLD = 1;                                     /*@YL026YB*/ 00716000
         MVI   CTGNOFLD(CTGPLPTR),X'01'                            0237 00717000
*        CTGFIELD(1) = ADDR(FPLSTOR);                      /*@YL026YB*/ 00718000
         LA    @14,FPLSTOR                                         0238 00719000
         ST    @14,CTGFIELD(,CTGPLPTR)                             0238 00720000
*        CTGFLDNM = ADDR(ENNTRY);                          /*@YL026YB*/ 00721000
         L     @14,CTGFLPTR                                        0239 00722000
         LA    @10,@CC00229                                        0239 00723000
         ST    @10,CTGFLDNM(,@14)                                  0239 00724000
*        CTGFLDNO = 1;                                     /*@YL026YB*/ 00725000
*                                                                  0240 00726000
         MVI   CTGFLDNO(@14),X'01'                                 0240 00727000
*        /************************************************************/ 00728000
*        /*                                                          */ 00729000
*        /* CALL SVC 26 FOR VSAM    LOCATE. ON RETURN CHECK RETURN   */ 00730000
*        /* CODE                                                     */ 00731000
*        /*                                                          */ 00732000
*        /************************************************************/ 00733000
*                                                                  0241 00734000
*        REG1 = CTGPLPTR;                                  /*@YL026YB*/ 00735000
         LR    REG1,CTGPLPTR                                       0241 00736000
*        GENERATE (CATLG (1));                             /*@YL026YB*/ 00737000
         CATLG (1)                                                      00738000
*        RETNCODE = REG15;                                 /*@YL026YB*/ 00739000
*                                                                  0243 00740000
         ST    REG15,RETNCODE                                      0243 00741000
*        /************************************************************/ 00742000
*        /*                                                          */ 00743000
*        /* IF RETURN CODE IS ZERO, COMPUTE THE VOLUMN COUNT.        */ 00744000
*        /* MOVE VOLUMN INFORMATION TO USER WORK AREA                */ 00745000
*        /*                                                          */ 00746000
*        /************************************************************/ 00747000
*                                                                  0244 00748000
*        IF  RETNCODE = 0                                          0244 00749000
*          THEN                                                    0244 00750000
         L     @14,RETNCODE                                        0244 00751000
         LTR   @14,@14                                             0244 00752000
         BNZ   @RF00244                                            0244 00753000
*            DO;                                                   0245 00754000
*              IF AREALN < RTNQLN                          /*@YL026YB*/ 00755000
*                THEN                                      /*@YL026YB*/ 00756000
         L     @14,CIRWA(,CIRPTR)                                  0246 00757000
         LH    @14,AREALN(,@14)                                    0246 00758000
         L     @10,DPTR                                            0246 00759000
         CH    @14,RTNQLN(,@10)                                    0246 00760000
         BNL   @RF00246                                            0246 00761000
*                  DO;                                     /*@YL026YB*/ 00762000
*                    CIRLOCRC = 44;                        /*@YL026YB*/ 00763000
         MVI   CIRLOCRC(CIRPTR),X'2C'                              0248 00764000
*                    RETNCODE = 4;                         /*@YL026YB*/ 00765000
         MVC   RETNCODE(4),@CF00190                                0249 00766000
*                    GOTO FRECR04;                         /*@YL026YB*/ 00767000
         B     FRECR04                                             0250 00768000
*                  END;                                    /*@YL026YB*/ 00769000
*                  DATALN = RTNQLN;                        /*@YL026YB*/ 00770000
@RF00246 L     @14,CIRWA(,CIRPTR)                                  0252 00771000
         L     @10,DPTR                                            0252 00772000
         MVC   DATALN(2,@14),RTNQLN(@10)                           0252 00773000
*              VOLCNT = CTGFLNG(1) / LENGTH(VOLAREA);      /*@YL026YB*/ 00774000
         L     @10,CTGFLPTR                                        0253 00775000
         L     @04,CTGFLNG(,@10)                                   0253 00776000
         SRDA  @04,32                                              0253 00777000
         D     @04,@CF00145                                        0253 00778000
         STC   @05,VOLCNT                                          0253 00779000
*              DATAREA(1) = VOLCNT;                        /*@YL026YB*/ 00780000
         STC   @05,DATAREA(,@14)                                   0254 00781000
*              LAST = 1;                                   /*@YL026YB*/ 00782000
         LA    @14,1                                               0255 00783000
         STH   @14,LAST                                            0255 00784000
*              DO  I = 1 TO VOLCNT;                        /*@YL026YB*/ 00785000
         B     @DE00256                                            0256 00786000
@DL00256 DS    0H                                                  0257 00787000
*              FIRST = LAST + 1;                           /*@YL026YB*/ 00788000
         LA    @10,1                                               0257 00789000
         AH    @10,LAST                                            0257 00790000
         STH   @10,FIRST                                           0257 00791000
*              LAST = FIRST + (LENGTH(VOLDATA) - 1);       /*@YL026YB*/ 00792000
         LA    @03,11                                              0258 00793000
         ALR   @03,@10                                             0258 00794000
         STH   @03,LAST                                            0258 00795000
*              VOLAREA = CTGFLPT(1)->VOLBLK(1:LENGTH(VOLAREA));    0259 00796000
         L     @09,CTGFLPTR                                        0259 00797000
         L     @08,CTGFLPT(,@09)                                   0259 00798000
         MVC   VOLAREA(15),VOLBLK(@08)                             0259 00799000
*              DATAREA(FIRST:LAST) = VOLDATA;              /*@YL026YB*/ 00800000
         L     @07,CIRWA(,CIRPTR)                                  0260 00801000
         ALR   @07,@10                                             0260 00802000
         SLR   @03,@10                                             0260 00803000
         EX    @03,@SM00317                                        0260 00804000
*              CTGFLPT(1) = CTGFLPT(1) + LENGTH(VOLAREA);  /*@YL026YB*/ 00805000
         AH    @08,@CH00145                                        0261 00806000
         ST    @08,CTGFLPT(,@09)                                   0261 00807000
*              END;                                        /*@YL026YB*/ 00808000
*                                                                  0262 00809000
         AH    @14,@CH00051                                        0262 00810000
@DE00256 ST    @14,I                                               0262 00811000
         SLR   @10,@10                                             0262 00812000
         IC    @10,VOLCNT                                          0262 00813000
         CR    @14,@10                                             0262 00814000
         BNH   @DL00256                                            0262 00815000
*              /******************************************************/ 00816000
*              /*                                                    */ 00817000
*              /* PUT HEX FF AS THE LAST BYTE IN USER WORK AREA TO   */ 00818000
*              /* TO INDICATE END OF DATA                            */ 00819000
*              /*                                                    */ 00820000
*              /******************************************************/ 00821000
*                                                                  0263 00822000
*              ENDBYTE = LAST + 1;                         /*@YL026YB*/ 00823000
         LA    ENDBYTE,1                                           0263 00824000
         AH    ENDBYTE,LAST                                        0263 00825000
*              DATAREA(ENDBYTE) = FOXES;                   /*@YL026YB*/ 00826000
         L     @14,CIRWA(,CIRPTR)                                  0264 00827000
         ALR   @14,ENDBYTE                                         0264 00828000
         MVI   DATAREA-1(@14),X'FF'                                0264 00829000
*              RETNCODE = 0;                               /*@YL026YB*/ 00830000
         SLR   @14,@14                                             0265 00831000
         ST    @14,RETNCODE                                        0265 00832000
*              GOTO FRECR04;                                       0266 00833000
         B     FRECR04                                             0266 00834000
*            END;                                          /*@YL026YB*/ 00835000
*            /********************************************************/ 00836000
*            /*                                                      */ 00837000
*            /* COMPARE RETURN CODE FROM SVC 26 WITH ERROR CODES IN  */ 00838000
*            /* TABLE                                                */ 00839000
*            /********************************************************/ 00840000
*            ELSE                                                  0268 00841000
*              DO;                                         /*@YL026YB*/ 00842000
@RF00244 DS    0H                                                  0269 00843000
*                DO I = 1 TO 8;                            /*@YL026YB*/ 00844000
         LA    @14,1                                               0269 00845000
         ST    @14,I                                               0269 00846000
@DL00269 DS    0H                                                  0270 00847000
*              IF RTNTABLE(I) = RETNCODE                           0270 00848000
*                THEN                                              0270 00849000
         SLA   @14,2                                               0270 00850000
         L     @14,RTNTABLE-4(@14)                                 0270 00851000
         C     @14,RETNCODE                                        0270 00852000
         BNE   @RF00270                                            0270 00853000
*                  DO;                                     /*@YL026YB*/ 00854000
*                    SWITCH = 1;                           /*@YL026YB*/ 00855000
         MVC   SWITCH(2),@CH00051                                  0272 00856000
*                    CIRLOCRC = REG15;                     /*@YL026YB*/ 00857000
         STC   REG15,CIRLOCRC(,CIRPTR)                             0273 00858000
*                    RETNCODE = 4;                         /*@YL026YB*/ 00859000
         MVC   RETNCODE(4),@CF00190                                0274 00860000
*                    GOTO FRECR04;                                 0275 00861000
         B     FRECR04                                             0275 00862000
*                  END;                                    /*@YL026YB*/ 00863000
*                ELSE;                                     /*@YL026YB*/ 00864000
@RF00270 DS    0H                                                  0278 00865000
*            END;                                          /*@YL026YB*/ 00866000
*                                                                  0278 00867000
         LA    @14,1                                               0278 00868000
         AL    @14,I                                               0278 00869000
         ST    @14,I                                               0278 00870000
         CH    @14,@CH00055                                        0278 00871000
         BNH   @DL00269                                            0278 00872000
*            /********************************************************/ 00873000
*            /*                                                      */ 00874000
*            /* IF THE RETURN CODE DOES NOT MATCH A NUMBER IN THE    */ 00875000
*            /* TABLE, SET THE RETURN CODE TO 12                     */ 00876000
*            /*                                                      */ 00877000
*            /********************************************************/ 00878000
*                                                                  0279 00879000
*            IF SWITCH ¬= 1                                        0279 00880000
*              THEN                                                0279 00881000
         CLC   SWITCH(2),@CH00051                                  0279 00882000
         BE    @RF00279                                            0279 00883000
*                RETNCODE = 12;                            /*@YL026YB*/ 00884000
         MVC   RETNCODE(4),@CF00123                                0280 00885000
*        END;                                              /*@YL026YB*/ 00886000
*                                                                  0281 00887000
@RF00279 DS    0H                                                  0282 00888000
*        /************************************************************/ 00889000
*        /*                                                          */ 00890000
*        /* FREE TEMPORARY WORKAREA. RETURN TO CALLER                */ 00891000
*        /*                                                          */ 00892000
*        /************************************************************/ 00893000
*                                                                  0282 00894000
*FRECR04:REG1 = DPTR;                                              0282 00895000
FRECR04  L     REG1,DPTR                                           0282 00896000
*        REG0 = CORESIZE;                                          0283 00897000
         L     REG0,CORESIZE                                       0283 00898000
*        GEN (FREEMAIN R,LV=(0),A=(1));                            0284 00899000
         FREEMAIN R,LV=(0),A=(1)                                        00900000
*        RFY (REG0,REG1) UNRSTD;                                   0285 00901000
*        END;                                              /*@YL026YB*/ 00902000
*                                                                  0286 00903000
@EL00004 DS    0H                                                  0286 00904000
@EF00004 DS    0H                                                  0286 00905000
@ER00004 LM    @14,@12,@SA00004                                    0286 00906000
         BR    @14                                                 0286 00907000
*/********************************************************************/ 00908000
*/*                                                                  */ 00909000
*/* ENTRY06 IS THE PROCEDURE TO RETURN 44 BYTE NAMES AND VOLUMN      */ 00910000
*/* INFORMATION. IT GETS CONTROL IF THE ENTRY CODE IS HEX 05         */ 00911000
*/* OR HEX 06. IF THE ENTRY CODE IS HEX 05 IT CALLS PROCEDURE        */ 00912000
*/* ENTRY05. FIRST IT ISSUES SVC 26 FOR A GENERIC LOCATE             */ 00913000
*/* AND TAKES THE 44 BYTE NAME RETURNED AND ISSUES SVC 26            */ 00914000
*/* AGAIN FOR A VSAM LOCATE TO GET VOLUMN INFORMATION.               */ 00915000
*/*                                                                  */ 00916000
*/********************************************************************/ 00917000
*                                                                  0287 00918000
*ENTRY06: PROCEDURE;                                       /*@YL026YB*/ 00919000
ENTRY06  STM   @14,@12,@SA00005                                    0287 00920000
*        DCL SAVCNT          FIXED(15);/*LENGTH OF NAME      @YL026YB*/ 00921000
*                                      /*FROM GENERIC LOCATE         */ 00922000
*        DCL SAVNAME         CHAR(45); /*NAME FROM LOCATE    @YL026YB*/ 00923000
*        DCL FS1             FIXED(15);/*SUBSTRING VARIABLE  @YL026YB*/ 00924000
*        DCL FS2             FIXED(15);/*SUBSTRING VARIABLE  @YL026YB*/ 00925000
*        DCL N1              FIXED(15);/*SUBSTRING VARIABLE  @YL026YB*/ 00926000
*        DCL N2              FIXED(15);/*SUBSTRING VARIABLE  @YL026YB*/ 00927000
*                                                                  0293 00928000
*                                                                  0293 00929000
*        COUNT = 0;                                                0294 00930000
*                                                                  0294 00931000
         SLR   @14,@14                                             0294 00932000
         STH   @14,COUNT                                           0294 00933000
*        /************************************************************/ 00934000
*        /*                                                          */ 00935000
*        /* DO A GETMAIN TO OBTAIN A TEMPORARY WORKAREA FOR DATA     */ 00936000
*        /* RETURNED FROM SVC 26.SET REG 0 TO CONTAIN LENGTH OF      */ 00937000
*        /* WORKAREA AND SUBPOOL NUMBER.                             */ 00938000
*        /*                                                          */ 00939000
*        /************************************************************/ 00940000
*                                                                  0295 00941000
*        SWITCH = 0;                                               0295 00942000
         STH   @14,SWITCH                                          0295 00943000
*        RFY (REG0,REG1) RSTD;                                     0296 00944000
*        REG0 = MAX1;                                              0297 00945000
         LH    REG0,@CH00208                                       0297 00946000
*        REG0 = REG0 | SUBPOOL1;                                   0298 00947000
         O     REG0,@CF00176                                       0298 00948000
*        CORESIZE = REG0;                                          0299 00949000
         ST    REG0,CORESIZE                                       0299 00950000
*        GEN (GETMAIN R,LV=(0));                                   0300 00951000
         GETMAIN R,LV=(0)                                               00952000
*        DPTR1 = REG1;                                             0301 00953000
         ST    REG1,DPTR1                                          0301 00954000
*        TEMLN = LENGTH(WORKTEMP);                         /*@YL026YB*/ 00955000
         L     @14,DPTR1                                           0302 00956000
         MVC   TEMLN(2,@14),@CH00208                               0302 00957000
*        /************************************************************/ 00958000
*        /*                                                          */ 00959000
*        /* CHECK THE DSNAME FROM USER TO FIND ITS LENGTH.           */ 00960000
*        /* INITIALIZE PARAMETER LIST FOR CPL.USE MOVE CHARACTER     */ 00961000
*        /* LONG INSTRUCTION TO FILL TEMPDATA WITH BLANKS            */ 00962000
*        /*                                                          */ 00963000
*        /************************************************************/ 00964000
*                                                                  0303 00965000
*        DO COUNT = LENGTH(USENAME) TO 1 BY -1             /*@YL026YB*/ 00966000
*           WHILE(USENAME(COUNT) = BLANK);                 /*@YL026YB*/ 00967000
         LA    @14,44                                              0303 00968000
         STH   @14,COUNT                                           0303 00969000
@DL00303 L     @10,CIRSRCH(,CIRPTR)                                0303 00970000
         ALR   @10,@14                                             0303 00971000
         AL    @10,@CF00251                                        0303 00972000
         CLI   USENAME(@10),X'40'                                  0303 00973000
         BNE   @DC00303                                            0303 00974000
*        END;                                              /*@YL026YB*/ 00975000
         BCTR  @14,0                                               0304 00976000
         STH   @14,COUNT                                           0304 00977000
         LTR   @14,@14                                             0304 00978000
         BP    @DL00303                                            0304 00979000
@DC00303 DS    0H                                                  0305 00980000
*        SAVCNT = COUNT;                                   /*@YL026YB*/ 00981000
         LH    @14,COUNT                                           0305 00982000
         STH   @14,SAVCNT                                          0305 00983000
*        GELENGTH = COUNT + 1;    /*MAKE ROOM FOR PERIOD TO   ZA00645*/ 00984000
         AH    @14,@CH00051                                        0306 00985000
         STC   @14,GELENGTH                                        0306 00986000
*                       /*LIMIT SEARCH TO CORRECT INDEX LEVEL ZA00645*/ 00987000
*        USENAME(GELENGTH) = PERIOD;     /*INSERT PERIOD      ZA00645*/ 00988000
         L     @10,CIRSRCH(,CIRPTR)                                0307 00989000
         ALR   @14,@10                                             0307 00990000
         AL    @14,@CF00251                                        0307 00991000
         MVI   USENAME(@14),X'4B'                                  0307 00992000
*        GNAME = USENAME(1:GELENGTH);                      /*@YL026YB*/ 00993000
         MVI   GNAME+1,C' '                                        0308 00994000
         MVC   GNAME+2(42),GNAME+1                                 0308 00995000
         SLR   @14,@14                                             0308 00996000
         IC    @14,GELENGTH                                        0308 00997000
         BCTR  @14,0                                               0308 00998000
         EX    @14,@SM00307                                        0308 00999000
*        CALL MOVEINST(TEMPDATA);                          /*@YL026YB*/ 01000000
         L     @14,DPTR1                                           0309 01001000
         LA    @14,TEMPDATA(,@14)                                  0309 01002000
         ST    @14,@AL00001                                        0309 01003000
         LA    @01,@AL00001                                        0309 01004000
         BAL   @14,MOVEINST                                        0309 01005000
*        CPLSTOR = ''B;                                    /*@YL026YB*/ 01006000
         XC    CPLSTOR(32),CPLSTOR                                 0310 01007000
*        FPLSTOR = ''B;                                    /*@YL026YB*/ 01008000
         XC    FPLSTOR(24),FPLSTOR                                 0311 01009000
*        WKPTR = ADDR(TEMPDATA);                           /*@YL026YB*/ 01010000
         L     @14,DPTR1                                           0312 01011000
         LA    @10,TEMPDATA(,@14)                                  0312 01012000
         ST    @10,WKPTR                                           0312 01013000
*        /************************************************************/ 01014000
*        /*                                                          */ 01015000
*        /* TURN ON FLAGS FOR GENERIC LOCATE                         */ 01016000
*        /*                                                          */ 01017000
*        /************************************************************/ 01018000
*        CTGNAME = ON;                                     /*@YL026YB*/ 01019000
*        CTGCNAME = ON;                                    /*@YL026YB*/ 01020000
         OI    CTGNAME(CTGPLPTR),B'00000110'                       0314 01021000
*        CTGSUPLT = ON;                                    /*@YL026YB*/ 01022000
         OI    CTGSUPLT(CTGPLPTR),B'00010000'                      0315 01023000
*        CTGGENLD = ON;                                    /*@YL026YB*/ 01024000
         OI    CTGGENLD(CTGPLPTR),B'00000001'                      0316 01025000
*        CTGAM0 = ON;                                      /*@YL026YB*/ 01026000
         OI    CTGAM0(CTGPLPTR),B'00000001'                        0317 01027000
*        CTGENT = ADDR(GNAME);                             /*@YL026YB*/ 01028000
         LA    @10,GNAME                                           0318 01029000
         ST    @10,CTGENT(,CTGPLPTR)                               0318 01030000
*        CTGCAT = CIRVOL;                                  /*@YL026YB*/ 01031000
         MVC   CTGCAT(4,CTGPLPTR),CIRVOL(CIRPTR)                   0319 01032000
*        CTGPSWD = CIRPSWD;                                /*@YL026YB*/ 01033000
         MVC   CTGPSWD(4,CTGPLPTR),CIRPSWD(CIRPTR)                 0320 01034000
*        CTGWKA = DPTR1;                                   /*@YL026YB*/ 01035000
*                                                                  0321 01036000
         ST    @14,CTGWKA(,CTGPLPTR)                               0321 01037000
*        /************************************************************/ 01038000
*        /*                                                          */ 01039000
*        /* SET VARIABLES TO INITIAL SUBSTRING COUNT                 */ 01040000
*        /*                                                          */ 01041000
*        /************************************************************/ 01042000
*                                                                  0322 01043000
*        FS1 = 1;                                          /*@YL026YB*/ 01044000
         LA    @14,1                                               0322 01045000
         STH   @14,FS1                                             0322 01046000
*        FS2 = 9;                                          /*@YL026YB*/ 01047000
         MVC   FS2(2),@CH00279                                     0323 01048000
*        N1 = 1;                                           /*@YL026YB*/ 01049000
         STH   @14,N1                                              0324 01050000
*        N2 = 45;                                          /*@YL026YB*/ 01051000
         MVC   N2(2),@CH00206                                      0325 01052000
*        /************************************************************/ 01053000
*        /*                                                          */ 01054000
*        /* CALL SVC 26 FOR GENERIC LOCATE. ON RETURN CHECK RETURN   */ 01055000
*        /* CODE                                                     */ 01056000
*        /*                                                          */ 01057000
*        /************************************************************/ 01058000
*        REG1 = CTGPLPTR;                                  /*@YL026YB*/ 01059000
         LR    REG1,CTGPLPTR                                       0326 01060000
*        GENERATE (CATLG (1));                             /*@YL026YB*/ 01061000
         CATLG (1)                                                      01062000
*        RETNCODE = REG15;                                 /*@YL026YB*/ 01063000
*                                                                  0328 01064000
         ST    REG15,RETNCODE                                      0328 01065000
*        /************************************************************/ 01066000
*        /*                                                          */ 01067000
*        /* IF THE RETURN CODE IS ZERO THEN DETERMINE THE NUMBER     */ 01068000
*        /* OF 44 BYTE NAMES RETURNED. IF THE ENTRY CODE IS HEX 05   */ 01069000
*        /* GO TO PROCEDURE ENTRY 05                                 */ 01070000
*        /*                                                          */ 01071000
*        /************************************************************/ 01072000
*                                                                  0329 01073000
*        IF RETNCODE = 0                                           0329 01074000
*          THEN                                                    0329 01075000
         L     @14,RETNCODE                                        0329 01076000
         LTR   @14,@14                                             0329 01077000
         BNZ   @RF00329                                            0329 01078000
*            DO;                                           /*@YL026YB*/ 01079000
*            REG0 = CORESIZE;                                      0331 01080000
         L     REG0,CORESIZE                                       0331 01081000
*            GEN (GETMAIN R,LV=(0));                               0332 01082000
         GETMAIN R,LV=(0)                                               01083000
*            DPTR = REG1;                                          0333 01084000
         ST    REG1,DPTR                                           0333 01085000
*              CONTROL = (TEMRTLN - 4) / 45;               /*@YL026YB*/ 01086000
         L     @14,DPTR1                                           0334 01087000
         LH    @04,TEMRTLN(,@14)                                   0334 01088000
         SH    @04,@CH00190                                        0334 01089000
         SRDA  @04,32                                              0334 01090000
         D     @04,@CF00206                                        0334 01091000
         STH   @05,CONTROL                                         0334 01092000
*              DO I = 1 TO CONTROL;                        /*@YL026YB*/ 01093000
         LA    @14,1                                               0335 01094000
         B     @DE00335                                            0335 01095000
@DL00335 DS    0H                                                  0336 01096000
*              SAVNAME = WKPTR->TEMBLK;                    /*@YL026YB*/ 01097000
         L     @14,WKPTR                                           0336 01098000
         MVC   SAVNAME(45),TEMBLK(@14)                             0336 01099000
*              IF CIROPT = HEX05                                   0337 01100000
*                THEN                                              0337 01101000
         CLI   CIROPT(CIRPTR),X'05'                                0337 01102000
         BNE   @RF00337                                            0337 01103000
*                  DO;                                     /*@YL026YB*/ 01104000
*                    LAST = FS2;                           /*@YL026YB*/ 01105000
*                                                                  0339 01106000
         MVC   LAST(2),FS2                                         0339 01107000
*                    /************************************************/ 01108000
*                    /*                                              */ 01109000
*                    /* GO TO PROCEDURE ENTRY 05 AND PROCESS 8 BYTE  */ 01110000
*                    /* QUALIFIER AND VOLUMN INFORMATION.            */ 01111000
*                    /*                                              */ 01112000
*                    /************************************************/ 01113000
*                                                                  0340 01114000
*                    CALL ENTRY05(SAVNAME,FS1,FS2,SAVCNT);         0340 01115000
         LA    @14,SAVNAME                                         0340 01116000
         ST    @14,@AL00001                                        0340 01117000
         LA    @14,FS1                                             0340 01118000
         ST    @14,@AL00001+4                                      0340 01119000
         LA    @14,FS2                                             0340 01120000
         ST    @14,@AL00001+8                                      0340 01121000
         LA    @14,SAVCNT                                          0340 01122000
         ST    @14,@AL00001+12                                     0340 01123000
         LA    @01,@AL00001                                        0340 01124000
         BAL   @14,ENTRY05                                         0340 01125000
*                    IF REG15 ¬= 0                                 0341 01126000
*                      THEN                                        0341 01127000
         LTR   REG15,REG15                                         0341 01128000
         BZ    @RF00341                                            0341 01129000
*                        RET05 = REG15;                    /*@YL026YB*/ 01130000
*                                                                  0342 01131000
         STH   REG15,RET05                                         0342 01132000
*              /******************************************************/ 01133000
*              /* RESET SUBSTRING COUNT                              */ 01134000
*              /******************************************************/ 01135000
*                                                                  0343 01136000
*              FS1 = FS2 + 1;                              /*@YL026YB*/ 01137000
@RF00341 LA    @14,1                                               0343 01138000
         AH    @14,FS2                                             0343 01139000
         STH   @14,FS1                                             0343 01140000
*              FS2 = FS1 + 8;                              /*@YL026YB*/ 01141000
         AH    @14,@CH00055                                        0344 01142000
         STH   @14,FS2                                             0344 01143000
*              END;                                        /*@YL026YB*/ 01144000
*                                                                  0345 01145000
*              /******************************************************/ 01146000
*              /* TURN OFF FLAGS FOR GENERIC LOCATE AND SET FLAG     */ 01147000
*              /* FOR VSAM LOCATE                                    */ 01148000
*              /******************************************************/ 01149000
*                                                                  0346 01150000
*              ELSE                                                0346 01151000
*                DO;                                       /*@YL026YB*/ 01152000
         B     @RC00337                                            0346 01153000
@RF00337 DS    0H                                                  0347 01154000
*                  CTGSUPLT = OFF;                         /*@YL026YB*/ 01155000
         NI    CTGSUPLT(CTGPLPTR),B'11101111'                      0347 01156000
*                  CTGGENLD = OFF;                         /*@YL026YB*/ 01157000
         NI    CTGGENLD(CTGPLPTR),B'11111110'                      0348 01158000
*                  CTGFUNC = '001'B;                       /*@YL026YB*/ 01159000
         NI    CTGFUNC(CTGPLPTR),B'00111111'                       0349 01160000
         OI    CTGFUNC(CTGPLPTR),B'00100000'                       0349 01161000
*                  COUNT = 0;                              /*@YL026YB*/ 01162000
*                                                                  0350 01163000
         SLR   @14,@14                                             0350 01164000
         STH   @14,COUNT                                           0350 01165000
*        /************************************************************/ 01166000
*        /*                                                          */ 01167000
*        /* CHECK THE NAME FROM GENERIC LOCATE TO FIND ITS TRUE      */ 01168000
*        /* LENGTH.POINT TO NAME AND WKAREA FOR CPL.USE MOVE         */ 01169000
*        /* CHARACTER LONG INSTRUCTION TO FILL QUALDATA WITH BLANKS  */ 01170000
*        /*                                                          */ 01171000
*        /************************************************************/ 01172000
*                                                                  0351 01173000
*        DO COUNT = LENGTH(SAVNAME) TO 1 BY -1             /*@YL026YB*/ 01174000
*           WHILE(SAVNAME(COUNT) = BLANK);                 /*@YL026YB*/ 01175000
         LA    @14,45                                              0351 01176000
         STH   @14,COUNT                                           0351 01177000
@DL00351 LA    @10,SAVNAME-1(@14)                                  0351 01178000
         CLI   0(@10),X'40'                                        0351 01179000
         BNE   @DC00351                                            0351 01180000
*        END;                                              /*@YL026YB*/ 01181000
         BCTR  @14,0                                               0352 01182000
         STH   @14,COUNT                                           0352 01183000
         LTR   @14,@14                                             0352 01184000
         BP    @DL00351                                            0352 01185000
@DC00351 DS    0H                                                  0353 01186000
*        GELENGTH = COUNT;                                 /*@YL026YB*/ 01187000
         LH    @14,COUNT                                           0353 01188000
         STC   @14,GELENGTH                                        0353 01189000
*        GNAME = SAVNAME(1:GELENGTH);                      /*@YL026YB*/ 01190000
         MVI   GNAME+1,C' '                                        0354 01191000
         MVC   GNAME+2(42),GNAME+1                                 0354 01192000
         BCTR  @14,0                                               0354 01193000
         EX    @14,@SM00321                                        0354 01194000
*        CALL MOVEINST(QUALDATA);                          /*@YL026YB*/ 01195000
         L     @14,DPTR                                            0355 01196000
         LA    @14,QUALDATA(,@14)                                  0355 01197000
         ST    @14,@AL00001                                        0355 01198000
         LA    @01,@AL00001                                        0355 01199000
         BAL   @14,MOVEINST                                        0355 01200000
*        QUALN = LENGTH(QUALAREA);                         /*@YL026YB*/ 01201000
         L     @14,DPTR                                            0356 01202000
         MVC   QUALN(2,@14),@CH00208                               0356 01203000
*        CTGENT = ADDR(GENAME);                            /*@YL026YB*/ 01204000
         LA    @10,GENAME                                          0357 01205000
         ST    @10,CTGENT(,CTGPLPTR)                               0357 01206000
*        CTGWKA = DPTR;                                    /*@YL026YB*/ 01207000
*                                                                  0358 01208000
         ST    @14,CTGWKA(,CTGPLPTR)                               0358 01209000
*        /************************************************************/ 01210000
*        /*                                                          */ 01211000
*        /* SET UP PARAMETER LIST FOR FPL                            */ 01212000
*        /*                                                          */ 01213000
*        /************************************************************/ 01214000
*                                                                  0359 01215000
*        CTGNOFLD = 1;                                     /*@YL026YB*/ 01216000
         MVI   CTGNOFLD(CTGPLPTR),X'01'                            0359 01217000
*        CTGFIELD(1) = ADDR(FPLSTOR);                      /*@YL026YB*/ 01218000
         LA    @14,FPLSTOR                                         0360 01219000
         ST    @14,CTGFIELD(,CTGPLPTR)                             0360 01220000
*        CTGFLDNM = ADDR(ENNTRY);                          /*@YL026YB*/ 01221000
         L     @14,CTGFLPTR                                        0361 01222000
         LA    @10,@CC00229                                        0361 01223000
         ST    @10,CTGFLDNM(,@14)                                  0361 01224000
*        CTGFLDNO = 1;                                     /*@YL026YB*/ 01225000
         MVI   CTGFLDNO(@14),X'01'                                 0362 01226000
*        /************************************************************/ 01227000
*        /*                                                          */ 01228000
*        /* CALL SVC 26 FOR VSAM    LOCATE. ON RETURN CHECK RETURN   */ 01229000
*        /* CODE                                                     */ 01230000
*        /*                                                          */ 01231000
*        /************************************************************/ 01232000
*        REG1 = CTGPLPTR;                                  /*@YL026YB*/ 01233000
         LR    REG1,CTGPLPTR                                       0363 01234000
*        GENERATE (CATLG (1));                             /*@YL026YB*/ 01235000
         CATLG (1)                                                      01236000
*        RETNCODE = REG15;                                 /*@YL026YB*/ 01237000
*                                                                  0365 01238000
         ST    REG15,RETNCODE                                      0365 01239000
*        /************************************************************/ 01240000
*        /*                                                          */ 01241000
*        /* IF RETURN CODE IS ZERO, COMPUTE THE VOLUMN COUNT.        */ 01242000
*        /* MOVE VOLUMN INFORMATION TO USER WORK AREA                */ 01243000
*        /*                                                          */ 01244000
*        /************************************************************/ 01245000
*                                                                  0366 01246000
*        IF  RETNCODE = 0                                          0366 01247000
*          THEN                                                    0366 01248000
         L     @14,RETNCODE                                        0366 01249000
         LTR   @14,@14                                             0366 01250000
         BNZ   @RF00366                                            0366 01251000
*            DO;                                           /*@YL026YB*/ 01252000
*              IF AREALN < RTNQLN                          /*@YL026YB*/ 01253000
*                THEN                                      /*@YL026YB*/ 01254000
         L     @14,CIRWA(,CIRPTR)                                  0368 01255000
         LH    @14,AREALN(,@14)                                    0368 01256000
         L     @10,DPTR                                            0368 01257000
         CH    @14,RTNQLN(,@10)                                    0368 01258000
         BNL   @RF00368                                            0368 01259000
*                  DO;                                     /*@YL026YB*/ 01260000
*                    CIRLOCRC = 44;                        /*@YL026YB*/ 01261000
         MVI   CIRLOCRC(CIRPTR),X'2C'                              0370 01262000
*                    RETNCODE = 4;                         /*@YL026YB*/ 01263000
         MVC   RETNCODE(4),@CF00190                                0371 01264000
*                    GOTO FRECORE;                         /*@YL026YB*/ 01265000
         B     FRECORE                                             0372 01266000
*                  END;                                    /*@YL026YB*/ 01267000
*              DATALN = RTNQLN;                            /*@YL026YB*/ 01268000
@RF00368 L     @14,CIRWA(,CIRPTR)                                  0374 01269000
         L     @10,DPTR                                            0374 01270000
         MVC   DATALN(2,@14),RTNQLN(@10)                           0374 01271000
*              VOLCNT = CTGFLNG(1) / LENGTH(VOLAREA);      /*@YL026YB*/ 01272000
         L     @10,CTGFLPTR                                        0375 01273000
         L     @04,CTGFLNG(,@10)                                   0375 01274000
         SRDA  @04,32                                              0375 01275000
         D     @04,@CF00145                                        0375 01276000
         STC   @05,VOLCNT                                          0375 01277000
*              DATAREA(N1:N2) = SAVNAME;                   /*@YL026YB*/ 01278000
         LH    @10,N1                                              0376 01279000
         ALR   @10,@14                                             0376 01280000
         LH    @04,N2                                              0376 01281000
         LH    @09,N1                                              0376 01282000
         LCR   @09,@09                                             0376 01283000
         ALR   @09,@04                                             0376 01284000
         EX    @09,@SM00323                                        0376 01285000
*              FIRST = N2 + 1;                             /*@YL026YB*/ 01286000
         LA    @10,1                                               0377 01287000
         ALR   @04,@10                                             0377 01288000
         STH   @04,FIRST                                           0377 01289000
*              DATAREA(FIRST) = VOLCNT;                    /*@YL026YB*/ 01290000
         STC   @05,DATAREA-1(@04,@14)                              0378 01291000
*              LAST = FIRST;                               /*@YL026YB*/ 01292000
         STH   @04,LAST                                            0379 01293000
*              DO  K = 1 TO VOLCNT;                        /*@YL026YB*/ 01294000
         B     @DE00380                                            0380 01295000
@DL00380 DS    0H                                                  0381 01296000
*              FIRST = LAST + 1;                           /*@YL026YB*/ 01297000
         LA    @14,1                                               0381 01298000
         AH    @14,LAST                                            0381 01299000
         STH   @14,FIRST                                           0381 01300000
*              LAST = FIRST + (LENGTH(VOLDATA) - 1);       /*@YL026YB*/ 01301000
         LA    @09,11                                              0382 01302000
         ALR   @09,@14                                             0382 01303000
         STH   @09,LAST                                            0382 01304000
*              VOLAREA = CTGFLPT(1)->VOLBLK(1:LENGTH(VOLAREA));    0383 01305000
         L     @08,CTGFLPTR                                        0383 01306000
         L     @07,CTGFLPT(,@08)                                   0383 01307000
         MVC   VOLAREA(15),VOLBLK(@07)                             0383 01308000
*              DATAREA(FIRST:LAST) = VOLDATA;              /*@YL026YB*/ 01309000
         L     @06,CIRWA(,CIRPTR)                                  0384 01310000
         ALR   @06,@14                                             0384 01311000
         SLR   @09,@14                                             0384 01312000
         EX    @09,@SM00325                                        0384 01313000
*              CTGFLPT(1) = CTGFLPT(1) + LENGTH(VOLDATA);  /*@YL026YB*/ 01314000
         AH    @07,@CH00123                                        0385 01315000
         ST    @07,CTGFLPT(,@08)                                   0385 01316000
*              END;                                        /*@YL026YB*/ 01317000
*                                                                  0386 01318000
         AH    @10,@CH00051                                        0386 01319000
@DE00380 ST    @10,K                                               0386 01320000
         SLR   @14,@14                                             0386 01321000
         IC    @14,VOLCNT                                          0386 01322000
         CR    @10,@14                                             0386 01323000
         BNH   @DL00380                                            0386 01324000
*              /******************************************************/ 01325000
*              /* RESET SUBSTRING COUNT                              */ 01326000
*              /******************************************************/ 01327000
*                                                                  0387 01328000
*              N1 = LAST + 1;                              /*@YL026YB*/ 01329000
         LA    @14,1                                               0387 01330000
         AH    @14,LAST                                            0387 01331000
         STH   @14,N1                                              0387 01332000
*              N2 = N1 + (LENGTH(SAVNAME) - 1);            /*@YL026YB*/ 01333000
         AH    @14,@CH00183                                        0388 01334000
         STH   @14,N2                                              0388 01335000
*              END;                                        /*@YL026YB*/ 01336000
*          ELSE                                            /*@YL026YB*/ 01337000
*            RET06 = REG15;                                /*@YL026YB*/ 01338000
         B     @RC00366                                            0390 01339000
@RF00366 STH   REG15,RET06                                         0390 01340000
*              END;                                        /*@YL026YB*/ 01341000
*                                                                  0391 01342000
@RC00366 DS    0H                                                  0392 01343000
*              /******************************************************/ 01344000
*              /*                                                    */ 01345000
*              /* ADJUST SUBSTRING VARIABLES AND POINT TO NEXT 44    */ 01346000
*              /* BYTE  NAME                                         */ 01347000
*              /*                                                    */ 01348000
*              /******************************************************/ 01349000
*                                                                  0392 01350000
*              WKPTR = WKPTR + 45;                         /*@YL026YB*/ 01351000
@RC00337 LA    @14,45                                              0392 01352000
         AL    @14,WKPTR                                           0392 01353000
         ST    @14,WKPTR                                           0392 01354000
*              END;                                        /*@YL026YB*/ 01355000
*                                                                  0393 01356000
         LA    @14,1                                               0393 01357000
         AL    @14,I                                               0393 01358000
@DE00335 ST    @14,I                                               0393 01359000
         CH    @14,CONTROL                                         0393 01360000
         BNH   @DL00335                                            0393 01361000
*              /******************************************************/ 01362000
*              /*                                                    */ 01363000
*              /* PUT HEX FF AS THE LAST BYTE IN USER WORK AREA TO   */ 01364000
*              /* TO INDICATE END OF DATA                            */ 01365000
*              /*                                                    */ 01366000
*              /******************************************************/ 01367000
*                                                                  0394 01368000
*              ENDBYTE = LAST + 1;                         /*@YL026YB*/ 01369000
         LA    ENDBYTE,1                                           0394 01370000
         AH    ENDBYTE,LAST                                        0394 01371000
*              DATAREA(ENDBYTE) = FOXES;                   /*@YL026YB*/ 01372000
         L     @14,CIRWA(,CIRPTR)                                  0395 01373000
         ALR   @14,ENDBYTE                                         0395 01374000
         MVI   DATAREA-1(@14),X'FF'                                0395 01375000
*              RETNCODE = 0;                               /*@YL026YB*/ 01376000
         SLR   @14,@14                                             0396 01377000
         ST    @14,RETNCODE                                        0396 01378000
*              GOTO FRECORE;                                       0397 01379000
         B     FRECORE                                             0397 01380000
*              END;                                        /*@YL026YB*/ 01381000
*            /********************************************************/ 01382000
*            /*                                                      */ 01383000
*            /* COMPARE RETURN CODE FROM SVC 26 WITH ERROR CODES IN  */ 01384000
*            /* TABLE                                                */ 01385000
*            /********************************************************/ 01386000
*            ELSE                                                  0399 01387000
*              DO;                                         /*@YL026YB*/ 01388000
@RF00329 DS    0H                                                  0400 01389000
*                DO I = 1 TO 8;                            /*@YL026YB*/ 01390000
         LA    @14,1                                               0400 01391000
         ST    @14,I                                               0400 01392000
@DL00400 DS    0H                                                  0401 01393000
*                 IF RTNTABLE(I) = RETNCODE                        0401 01394000
*                   THEN                                           0401 01395000
         SLA   @14,2                                               0401 01396000
         L     @14,RTNTABLE-4(@14)                                 0401 01397000
         C     @14,RETNCODE                                        0401 01398000
         BNE   @RF00401                                            0401 01399000
*                    DO;                                   /*@YL026YB*/ 01400000
*                    SWITCH = 1;                           /*@YL026YB*/ 01401000
         MVC   SWITCH(2),@CH00051                                  0403 01402000
*                    CIRLOCRC = REG15;                     /*@YL026YB*/ 01403000
         STC   REG15,CIRLOCRC(,CIRPTR)                             0404 01404000
*                    RETNCODE = 4;                         /*@YL026YB*/ 01405000
         MVC   RETNCODE(4),@CF00190                                0405 01406000
*                    GOTO FRECORE;                         /*@YL026YB*/ 01407000
         B     FRECORE                                             0406 01408000
*                    END;                                  /*@YL026YB*/ 01409000
*                ELSE;                                     /*@YL026YB*/ 01410000
@RF00401 DS    0H                                                  0409 01411000
*            END;                                          /*@YL026YB*/ 01412000
*                                                                  0409 01413000
         LA    @14,1                                               0409 01414000
         AL    @14,I                                               0409 01415000
         ST    @14,I                                               0409 01416000
         CH    @14,@CH00055                                        0409 01417000
         BNH   @DL00400                                            0409 01418000
*            /********************************************************/ 01419000
*            /*                                                      */ 01420000
*            /* IF THE RETURN CODE DOES NOT MATCH A NUMBER IN THE    */ 01421000
*            /* TABLE, SET THE RETURN CODE TO 12                     */ 01422000
*            /*                                                      */ 01423000
*            /********************************************************/ 01424000
*                                                                  0410 01425000
*            IF SWITCH ¬= 1                                        0410 01426000
*              THEN                                                0410 01427000
         CLC   SWITCH(2),@CH00051                                  0410 01428000
         BE    @RF00410                                            0410 01429000
*                RETNCODE = 12;                            /*@YL026YB*/ 01430000
         MVC   RETNCODE(4),@CF00123                                0411 01431000
*        END;                                              /*@YL026YB*/ 01432000
*                                                                  0412 01433000
@RF00410 DS    0H                                                  0413 01434000
*        /************************************************************/ 01435000
*        /*                                                          */ 01436000
*        /* FREE TEMPORARY WORKAREA. RETURN TO CALLER                */ 01437000
*        /*                                                          */ 01438000
*        /************************************************************/ 01439000
*                                                                  0413 01440000
*FRECORE:REG1 = DPTR1;                                             0413 01441000
FRECORE  L     REG1,DPTR1                                          0413 01442000
*        REG0 = CORESIZE;                                          0414 01443000
         L     REG0,CORESIZE                                       0414 01444000
*        GEN (FREEMAIN R,LV=(0),A=(1));                            0415 01445000
         FREEMAIN R,LV=(0),A=(1)                                        01446000
*        IF RETNCODE = 0                                           0416 01447000
*          THEN                                                    0416 01448000
         ICM   @14,15,RETNCODE                                     0416 01449000
         BNZ   @RF00416                                            0416 01450000
*            DO;                                           /*@YL026YB*/ 01451000
*              REG1 = DPTR;                                /*@YL026YB*/ 01452000
         L     REG1,DPTR                                           0418 01453000
*              GEN (FREEMAIN R,LV=(0),A=(1));              /*@YL026YB*/ 01454000
         FREEMAIN R,LV=(0),A=(1)                                        01455000
*              END;                                        /*@YL026YB*/ 01456000
*        RFY (REG0,REG1) UNRSTD;                                   0421 01457000
*        END;                                              /*@YL026YB*/ 01458000
*                                                                  0422 01459000
@EL00005 DS    0H                                                  0422 01460000
@EF00005 DS    0H                                                  0422 01461000
@ER00005 LM    @14,@12,@SA00005                                    0422 01462000
         BR    @14                                                 0422 01463000
*/********************************************************************/ 01464000
*/*                                                                  */ 01465000
*/* ENTRY05 IS THE PROCEDURE TO TAKE A 44 BYTE NAME AND ISSUE SVC 26 */ 01466000
*/* FOR A VSAM LOCATE TO RETURN VOLUMN INFORMATION                   */ 01467000
*/*                                                                  */ 01468000
*/********************************************************************/ 01469000
*                                                                  0423 01470000
*ENTRY05: PROCEDURE(SVNAME,FT1,FT2,USECNT);                /*@YL026YB*/ 01471000
ENTRY05  STM   @14,@12,@SA00006                                    0423 01472000
         MVC   @PC00006(16),0(@01)                                 0423 01473000
*        DCL SVNAME          CHAR(45);/*NAME FROM LOCATE     @YL026YB*/ 01474000
*        DCL FT1             FIXED(15);/*SUBSTRING VARIABLE  @YL026YB*/ 01475000
*        DCL FT2             FIXED(15);/*SUBSTRING VARIABLE  @YL026YB*/ 01476000
*        DCL USECNT          FIXED(15);/*LENGTH OF NAME      @YL026YB*/ 01477000
*        /************************************************************/ 01478000
*        /*                                                          */ 01479000
*        /* TURN ON FLAGS FOR GENERIC LOCATE                         */ 01480000
*        /*                                                          */ 01481000
*        /************************************************************/ 01482000
*        CTGSUPLT = OFF;                                   /*@YL026YB*/ 01483000
         NI    CTGSUPLT(CTGPLPTR),B'11101111'                      0428 01484000
*        CTGGENLD = OFF;                                   /*@YL026YB*/ 01485000
         NI    CTGGENLD(CTGPLPTR),B'11111110'                      0429 01486000
*        CTGFUNC = '001'B;                                 /*@YL026YB*/ 01487000
         NI    CTGFUNC(CTGPLPTR),B'00111111'                       0430 01488000
         OI    CTGFUNC(CTGPLPTR),B'00100000'                       0430 01489000
*        COUNT = 0;                                        /*@YL026YB*/ 01490000
         SLR   @14,@14                                             0431 01491000
         STH   @14,COUNT                                           0431 01492000
*        SWITCH = 0;                                       /*@YL026YB*/ 01493000
         STH   @14,SWITCH                                          0432 01494000
*        CNT = 0;                                          /*@YL026YB*/ 01495000
         STH   @14,CNT                                             0433 01496000
*        CNN = 0;                                          /*@YL026YB*/ 01497000
         STH   @14,CNN                                             0434 01498000
*        RFY (REG1) RSTD;                                          0435 01499000
*                                                                  0435 01500000
*        /************************************************************/ 01501000
*        /*                                                          */ 01502000
*        /* CHECK THE NAME FROM GENERIC LOCATE TO FIND ITS TRUE      */ 01503000
*        /* LENGTH.POINT TO NAME AND WKAREA FOR CPL.USE MOVE         */ 01504000
*        /* CHARACTER LONG INSTRUCTION TO FILL QUALDATA WITH BLANKS  */ 01505000
*        /*                                                          */ 01506000
*        /************************************************************/ 01507000
*                                                                  0436 01508000
*        DO COUNT = LENGTH(SVNAME) TO 1 BY -1              /*@YL026YB*/ 01509000
*           WHILE(SVNAME(COUNT) = BLANK);                  /*@YL026YB*/ 01510000
         LA    @14,45                                              0436 01511000
         STH   @14,COUNT                                           0436 01512000
@DL00436 L     @10,@PC00006                                        0436 01513000
         ALR   @10,@14                                             0436 01514000
         AL    @10,@CF00251                                        0436 01515000
         CLI   SVNAME(@10),X'40'                                   0436 01516000
         BNE   @DC00436                                            0436 01517000
*        END;                                              /*@YL026YB*/ 01518000
         BCTR  @14,0                                               0437 01519000
         STH   @14,COUNT                                           0437 01520000
         LTR   @14,@14                                             0437 01521000
         BP    @DL00436                                            0437 01522000
@DC00436 DS    0H                                                  0438 01523000
*        GELENGTH = COUNT;                                 /*@YL026YB*/ 01524000
         LH    @14,COUNT                                           0438 01525000
         STC   @14,GELENGTH                                        0438 01526000
*        GNAME = SVNAME(1:GELENGTH);                       /*@YL026YB*/ 01527000
         MVI   GNAME+1,C' '                                        0439 01528000
         MVC   GNAME+2(42),GNAME+1                                 0439 01529000
         BCTR  @14,0                                               0439 01530000
         L     @10,@PC00006                                        0439 01531000
         EX    @14,@SM00327                                        0439 01532000
*        CALL MOVEINST(QUALDATA);                          /*@YL026YB*/ 01533000
         L     @14,DPTR                                            0440 01534000
         LA    @14,QUALDATA(,@14)                                  0440 01535000
         ST    @14,@AL00001                                        0440 01536000
         LA    @01,@AL00001                                        0440 01537000
         BAL   @14,MOVEINST                                        0440 01538000
*        QUALN = LENGTH(QUALAREA);                         /*@YL026YB*/ 01539000
         L     @14,DPTR                                            0441 01540000
         MVC   QUALN(2,@14),@CH00208                               0441 01541000
*        CTGENT = ADDR(GENAME);                            /*@YL026YB*/ 01542000
         LA    @10,GENAME                                          0442 01543000
         ST    @10,CTGENT(,CTGPLPTR)                               0442 01544000
*        CTGWKA = DPTR;                                    /*@YL026YB*/ 01545000
*                                                                  0443 01546000
         ST    @14,CTGWKA(,CTGPLPTR)                               0443 01547000
*        /************************************************************/ 01548000
*        /*                                                          */ 01549000
*        /* SET UP PARAMETER LIST FOR FPL                            */ 01550000
*        /*                                                          */ 01551000
*        /************************************************************/ 01552000
*                                                                  0444 01553000
*        CTGNOFLD = 1;                                     /*@YL026YB*/ 01554000
         MVI   CTGNOFLD(CTGPLPTR),X'01'                            0444 01555000
*        CTGFIELD(1) = ADDR(FPLSTOR);                      /*@YL026YB*/ 01556000
         LA    @14,FPLSTOR                                         0445 01557000
         ST    @14,CTGFIELD(,CTGPLPTR)                             0445 01558000
*        CTGFLDNM = ADDR(ENNTRY);                          /*@YL026YB*/ 01559000
         L     @14,CTGFLPTR                                        0446 01560000
         LA    @10,@CC00229                                        0446 01561000
         ST    @10,CTGFLDNM(,@14)                                  0446 01562000
*        CTGFLDNO = 1;                                     /*@YL026YB*/ 01563000
         MVI   CTGFLDNO(@14),X'01'                                 0447 01564000
*        /************************************************************/ 01565000
*        /*                                                          */ 01566000
*        /* CALL SVC 26 FOR VSAM    LOCATE. ON RETURN CHECK RETURN   */ 01567000
*        /* CODE                                                     */ 01568000
*        /*                                                          */ 01569000
*        /************************************************************/ 01570000
*        REG1 = CTGPLPTR;                                  /*@YL026YB*/ 01571000
         LR    REG1,CTGPLPTR                                       0448 01572000
*        GENERATE (CATLG (1));                             /*@YL026YB*/ 01573000
         CATLG (1)                                                      01574000
*        RETNCODE = REG15;                                 /*@YL026YB*/ 01575000
*                                                                  0450 01576000
         ST    REG15,RETNCODE                                      0450 01577000
*        /************************************************************/ 01578000
*        /*                                                          */ 01579000
*        /* IF RETURN CODE IS ZERO, COMPUTE THE VOLUMN COUNT.        */ 01580000
*        /* MOVE VOLUMN INFORMATION TO USER WORK AREA                */ 01581000
*        /*                                                          */ 01582000
*        /************************************************************/ 01583000
*                                                                  0451 01584000
*        IF  RETNCODE = 0                                          0451 01585000
*          THEN                                                    0451 01586000
         L     @14,RETNCODE                                        0451 01587000
         LTR   @14,@14                                             0451 01588000
         BNZ   @RF00451                                            0451 01589000
*            DO;                                           /*@YL026YB*/ 01590000
*              IF AREALN < RTNQLN                          /*@YL026YB*/ 01591000
*                THEN                                      /*@YL026YB*/ 01592000
         L     @14,CIRWA(,CIRPTR)                                  0453 01593000
         LH    @14,AREALN(,@14)                                    0453 01594000
         L     @10,DPTR                                            0453 01595000
         CH    @14,RTNQLN(,@10)                                    0453 01596000
         BNL   @RF00453                                            0453 01597000
*                  DO;                                     /*@YL026YB*/ 01598000
*                    CIRLOCRC = 44;                        /*@YL026YB*/ 01599000
         MVI   CIRLOCRC(CIRPTR),X'2C'                              0455 01600000
*                    RETURN CODE(4);                       /*@YL026YB*/ 01601000
         LA    @15,4                                               0456 01602000
         L     @14,@SA00006                                        0456 01603000
         LM    @00,@12,@SA00006+8                                  0456 01604000
         BR    @14                                                 0456 01605000
*                  END;                                    /*@YL026YB*/ 01606000
*              DATALN = RTNQLN;                            /*@YL026YB*/ 01607000
@RF00453 L     @14,CIRWA(,CIRPTR)                                  0458 01608000
         L     @10,DPTR                                            0458 01609000
         MVC   DATALN(2,@14),RTNQLN(@10)                           0458 01610000
*              VOLCNT = CTGFLNG(1) / LENGTH(VOLAREA);      /*@YL026YB*/ 01611000
         L     @09,CTGFLPTR                                        0459 01612000
         L     @04,CTGFLNG(,@09)                                   0459 01613000
         SRDA  @04,32                                              0459 01614000
         D     @04,@CF00145                                        0459 01615000
         STC   @05,VOLCNT                                          0459 01616000
*              CNT = USECNT + 2;                           /*@YL026YB*/ 01617000
         L     @04,@PC00006+12                                     0460 01618000
         LA    @00,2                                               0460 01619000
         AH    @00,USECNT(,@04)                                    0460 01620000
         STH   @00,CNT                                             0460 01621000
*              CNN = COUNT;                                /*@YL026YB*/ 01622000
         LH    @04,COUNT                                           0461 01623000
         STH   @04,CNN                                             0461 01624000
*              QULTYPE = '07'X;                            /*@YL026YB*/ 01625000
         MVI   QULTYPE,X'07'                                       0462 01626000
*              QULPTR = ADDR(QUALDATA);                    /*@YL026YB*/ 01627000
         LA    @10,QUALDATA(,@10)                                  0463 01628000
         ST    @10,QULPTR                                          0463 01629000
*              QULBUF = SVNAME;                            /*@YL026YB*/ 01630000
         L     @10,@PC00006                                        0464 01631000
         MVC   QULBUF(45),SVNAME(@10)                              0464 01632000
*              QULNAME = QUALIFY(CNT:CNN);                 /*@YL026YB*/ 01633000
         MVI   QULNAME+1,C' '                                      0465 01634000
         MVC   QULNAME+2(6),QULNAME+1                              0465 01635000
         SLR   @04,@00                                             0465 01636000
         LR    @10,@00                                             0465 01637000
         LA    @09,QUALIFY-1(@10)                                  0465 01638000
         EX    @04,@SM00329                                        0465 01639000
*              DATAREA(FT1:FT2) = TYPE01;                  /*@YL026YB*/ 01640000
         L     @10,@PC00006+4                                      0466 01641000
         LH    @10,FT1(,@10)                                       0466 01642000
         ALR   @10,@14                                             0466 01643000
         L     @04,@PC00006+8                                      0466 01644000
         LH    @04,FT2(,@04)                                       0466 01645000
         L     @09,@PC00006+4                                      0466 01646000
         LH    @09,FT1(,@09)                                       0466 01647000
         LCR   @09,@09                                             0466 01648000
         ALR   @09,@04                                             0466 01649000
         EX    @09,@SM00313                                        0466 01650000
*              FIRST = FT2 + 1;                            /*@YL026YB*/ 01651000
         LA    @10,1                                               0467 01652000
         ALR   @04,@10                                             0467 01653000
         STH   @04,FIRST                                           0467 01654000
*              DATAREA(FIRST) = VOLCNT;                    /*@YL026YB*/ 01655000
         STC   @05,DATAREA-1(@04,@14)                              0468 01656000
*              LAST = FIRST;                               /*@YL026YB*/ 01657000
         STH   @04,LAST                                            0469 01658000
*              DO  J = 1 TO VOLCNT;                        /*@YL026YB*/ 01659000
         B     @DE00470                                            0470 01660000
@DL00470 DS    0H                                                  0471 01661000
*              FIRST = LAST + 1;                           /*@YL026YB*/ 01662000
         LA    @14,1                                               0471 01663000
         AH    @14,LAST                                            0471 01664000
         STH   @14,FIRST                                           0471 01665000
*              LAST = FIRST + (LENGTH(VOLDATA) - 1);       /*@YL026YB*/ 01666000
         LA    @00,11                                              0472 01667000
         ALR   @00,@14                                             0472 01668000
         STH   @00,LAST                                            0472 01669000
*              VOLAREA = CTGFLPT(1)->VOLBLK(1:LENGTH(VOLAREA));    0473 01670000
         L     @09,CTGFLPTR                                        0473 01671000
         L     @08,CTGFLPT(,@09)                                   0473 01672000
         MVC   VOLAREA(15),VOLBLK(@08)                             0473 01673000
*              DATAREA(FIRST:LAST) = VOLDATA;              /*@YL026YB*/ 01674000
         L     @07,CIRWA(,CIRPTR)                                  0474 01675000
         ALR   @07,@14                                             0474 01676000
         SLR   @00,@14                                             0474 01677000
         LR    @14,@00                                             0474 01678000
         EX    @14,@SM00317                                        0474 01679000
*              CTGFLPT(1) = CTGFLPT(1) + LENGTH(VOLDATA);  /*@YL026YB*/ 01680000
         AH    @08,@CH00123                                        0475 01681000
         ST    @08,CTGFLPT(,@09)                                   0475 01682000
*              END;                                        /*@YL026YB*/ 01683000
*                                                                  0476 01684000
         AH    @10,@CH00051                                        0476 01685000
@DE00470 ST    @10,J                                               0476 01686000
         SLR   @14,@14                                             0476 01687000
         IC    @14,VOLCNT                                          0476 01688000
         CR    @10,@14                                             0476 01689000
         BNH   @DL00470                                            0476 01690000
*              /******************************************************/ 01691000
*              /* RESET SUBSTRING COUNT                              */ 01692000
*              /******************************************************/ 01693000
*                                                                  0477 01694000
*              FT2 = LAST;                                 /*@YL026YB*/ 01695000
         L     @14,@PC00006+8                                      0477 01696000
         MVC   FT2(2,@14),LAST                                     0477 01697000
*              RETURN CODE(0);                             /*@YL026YB*/ 01698000
         SLR   @15,@15                                             0478 01699000
         L     @14,@SA00006                                        0478 01700000
         LM    @00,@12,@SA00006+8                                  0478 01701000
         BR    @14                                                 0478 01702000
*              END;                                        /*@YL026YB*/ 01703000
*            /********************************************************/ 01704000
*            /*                                                      */ 01705000
*            /* COMPARE RETURN CODE FROM SVC 26 WITH ERROR CODES IN  */ 01706000
*            /* TABLE                                                */ 01707000
*            /********************************************************/ 01708000
*            ELSE                                                  0480 01709000
*              DO;                                         /*@YL026YB*/ 01710000
@RF00451 DS    0H                                                  0481 01711000
*                DO I = 1 TO 8;                            /*@YL026YB*/ 01712000
         LA    @14,1                                               0481 01713000
         ST    @14,I                                               0481 01714000
@DL00481 DS    0H                                                  0482 01715000
*              IF RTNTABLE(I) = RETNCODE                           0482 01716000
*                THEN                                              0482 01717000
         SLA   @14,2                                               0482 01718000
         L     @14,RTNTABLE-4(@14)                                 0482 01719000
         C     @14,RETNCODE                                        0482 01720000
         BNE   @RF00482                                            0482 01721000
*                  DO;                                     /*@YL026YB*/ 01722000
*                    SWITCH = 1;                           /*@YL026YB*/ 01723000
         MVC   SWITCH(2),@CH00051                                  0484 01724000
*                    CIRLOCRC = REG15;                     /*@YL026YB*/ 01725000
         STC   REG15,CIRLOCRC(,CIRPTR)                             0485 01726000
*                    RETURN CODE(4);                       /*@YL026YB*/ 01727000
         LA    @15,4                                               0486 01728000
         L     @14,@SA00006                                        0486 01729000
         LM    @00,@12,@SA00006+8                                  0486 01730000
         BR    @14                                                 0486 01731000
*                  END;                                    /*@YL026YB*/ 01732000
*                ELSE;                                     /*@YL026YB*/ 01733000
@RF00482 DS    0H                                                  0489 01734000
*            END;                                          /*@YL026YB*/ 01735000
*                                                                  0489 01736000
         LA    @14,1                                               0489 01737000
         AL    @14,I                                               0489 01738000
         ST    @14,I                                               0489 01739000
         CH    @14,@CH00055                                        0489 01740000
         BNH   @DL00481                                            0489 01741000
*            /********************************************************/ 01742000
*            /*                                                      */ 01743000
*            /* IF THE RETURN CODE DOES NOT MATCH A NUMBER IN THE    */ 01744000
*            /* TABLE, SET THE RETURN CODE TO 12                     */ 01745000
*            /*                                                      */ 01746000
*            /********************************************************/ 01747000
*                                                                  0490 01748000
*            IF SWITCH ¬= 1                                        0490 01749000
*              THEN                                                0490 01750000
         CLC   SWITCH(2),@CH00051                                  0490 01751000
         BE    @RF00490                                            0490 01752000
*                RETURN CODE(12);                          /*@YL026YB*/ 01753000
         LA    @15,12                                              0491 01754000
         L     @14,@SA00006                                        0491 01755000
         LM    @00,@12,@SA00006+8                                  0491 01756000
         BR    @14                                                 0491 01757000
*        END;                                              /*@YL026YB*/ 01758000
*        END;                                              /*@YL026YB*/ 01759000
*                                                                  0493 01760000
@EL00006 DS    0H                                                  0493 01761000
@EF00006 DS    0H                                                  0493 01762000
@ER00006 LM    @14,@12,@SA00006                                    0493 01763000
         BR    @14                                                 0493 01764000
*/********************************************************************/ 01765000
*/*                                                                  */ 01766000
*/* THIS PROCEDURE MOVES BLANKS INTO A WORKAREA GREATER THAN 256     */ 01767000
*/* BYTES. IT USES THE MVCL INSTRUCTION BY SETTING UP EVEN -ODD      */ 01768000
*/* PAIRS OF REGISTERS                                               */ 01769000
*/*                                                                  */ 01770000
*/********************************************************************/ 01771000
*                                                                  0494 01772000
*MOVEINST: PROCEDURE(PARM1);                               /*@YL026YB*/ 01773000
MOVEINST STM   @14,@12,12(@13)                                     0494 01774000
         MVC   @PC00007(4),0(@01)                                  0494 01775000
*        DCL PARM1                 CHAR(4996); /*WORK AREA   @YL026YB*/ 01776000
*        DCL R4                    REG(4)  PTR  RSTD;/*WKAREA PTR    */ 01777000
*        DCL R5                    REG(5)       RSTD;/*WKAREA LENGTH */ 01778000
*        DCL R6                    REG(6)  PTR  RSTD;/*DATA POINTER  */ 01779000
*        DCL R7                    REG(7)       RSTD;/*DATA + LENGTH */ 01780000
*                                                                  0499 01781000
*        /************************************************************/ 01782000
*        /*                                                          */ 01783000
*        /* SET UP REGISTERS FOR THE MVCL INSTRUCTION,THEN FREE      */ 01784000
*        /* THE REGISTERS.                                           */ 01785000
*        /*                                                          */ 01786000
*        /************************************************************/ 01787000
*                                                                  0500 01788000
*        R4 = ADDR(PARM1);                                         0500 01789000
         L     R4,@PC00007                                         0500 01790000
*        R5 = LENGTH(PARM1);                                       0501 01791000
         LH    R5,@CH00215                                         0501 01792000
*        R6 = ADDR(BLANK);                                         0502 01793000
         LA    R6,@CB00160                                         0502 01794000
*        R7 = '40000001'X;                                         0503 01795000
         L     R7,@CF00304                                         0503 01796000
*        MVCL  (R4,R6);                                            0504 01797000
         MVCL  R4,R6                                               0504 01798000
*        RESPECIFY(R4,R5,R6,R7) UNRSTD;                            0505 01799000
*        END;                                                      0506 01800000
@EL00007 DS    0H                                                  0506 01801000
@EF00007 DS    0H                                                  0506 01802000
@ER00007 LM    @14,@12,12(@13)                                     0506 01803000
         BR    @14                                                 0506 01804000
@PB00007 DS    0H                                                  0507 01805000
*        RETURN CODE(RETNCODE);                            /*@YL026YB*/ 01806000
         L     @10,RETNCODE                                        0507 01807000
         L     @13,4(,@13)                                         0507 01808000
         L     @00,@SIZDATD                                        0507 01809000
         LR    @01,@11                                             0507 01810000
         FREEMAIN R,LV=(0),A=(1)                                        01811000
         LR    @15,@10                                             0507 01812000
         L     @14,12(,@13)                                        0507 01813000
         LM    @00,@12,20(@13)                                     0507 01814000
         BR    @14                                                 0507 01815000
*        END IKJEHCIR                                      /*@YL026YB*/ 01816000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 01817000
*/*%INCLUDE SYSLIB  (IEZCTGPL)                                        * 01818000
*/*%INCLUDE SYSLIB  (IEZCTGFL)                                        * 01819000
*;                                                                 0508 01820000
@DATA    DS    0H                                                       01821000
@CH00051 DC    H'1'                                                     01822000
@CH00090 DC    H'3'                                                     01823000
@CH00055 DC    H'8'                                                     01824000
@CH00279 DC    H'9'                                                     01825000
@CH00183 DC    H'44'                                                    01826000
@CH00215 DC    H'4996'                                                  01827000
@CH00208 DC    H'5000'                                                  01828000
@SM00307 MVC   GNAME(0),USENAME(@10)                                    01829000
@SM00311 MVC   QULNAME(0),0(@03)                                        01830000
@SM00313 MVC   DATAREA-1(0,@10),TYPE01                                  01831000
@SM00317 MVC   DATAREA-1(0,@07),VOLDATA                                 01832000
@SM00321 MVC   GNAME(0),SAVNAME                                         01833000
@SM00323 MVC   DATAREA-1(0,@10),SAVNAME                                 01834000
@SM00325 MVC   DATAREA-1(0,@06),VOLDATA                                 01835000
@SM00327 MVC   GNAME(0),SVNAME(@10)                                     01836000
@SM00329 MVC   QULNAME(0),0(@09)                                        01837000
@DATD    DSECT                                                          01838000
         DS    0F                                                       01839000
@SA00001 DS    18F                                                      01840000
@SA00002 DS    15F                                                      01841000
@SA00003 DS    15F                                                      01842000
@SA00004 DS    15F                                                      01843000
@SA00005 DS    15F                                                      01844000
@PC00007 DS    1F                                                       01845000
@SA00006 DS    15F                                                      01846000
@PC00006 DS    4F                                                       01847000
@AL00001 DS    4A                                                       01848000
IKJEHCIR CSECT                                                          01849000
         DS    0F                                                       01850000
@CF00190 DC    F'4'                                                     01851000
@CH00190 EQU   @CF00190+2                                               01852000
@CF00123 DC    F'12'                                                    01853000
@CH00123 EQU   @CF00123+2                                               01854000
@CF00145 DC    F'15'                                                    01855000
@CH00145 EQU   @CF00145+2                                               01856000
@CF00206 DC    F'45'                                                    01857000
@CH00206 EQU   @CF00206+2                                               01858000
@CF00251 DC    F'-1'                                                    01859000
@CF00176 DC    XL4'01000000'                                            01860000
@CF00304 DC    XL4'40000001'                                            01861000
@DATD    DSECT                                                          01862000
         DS    0D                                                       01863000
CTGFLPTR DS    A                                                        01864000
CORESIZE DS    F                                                        01865000
RETNCODE DS    F                                                        01866000
WKPTR    DS    A                                                        01867000
DPTR     DS    A                                                        01868000
DPTR1    DS    A                                                        01869000
QULPTR   DS    A                                                        01870000
I        DS    F                                                        01871000
J        DS    F                                                        01872000
K        DS    F                                                        01873000
SWITCH   DS    H                                                        01874000
CONTROL  DS    H                                                        01875000
RET05    DS    H                                                        01876000
RET06    DS    H                                                        01877000
FIRST    DS    H                                                        01878000
LAST     DS    H                                                        01879000
COUNT    DS    H                                                        01880000
CNT      DS    H                                                        01881000
CNN      DS    H                                                        01882000
SAVCNT   DS    H                                                        01883000
FS1      DS    H                                                        01884000
FS2      DS    H                                                        01885000
N1       DS    H                                                        01886000
N2       DS    H                                                        01887000
LIMIT    DS    H                                                        01888000
VOLCNT   DS    FL1                                                      01889000
         DS    CL1                                                      01890000
CPLSTOR  DS    CL32                                                     01891000
         ORG   CPLSTOR                                                  01892000
@NM00007 DS    CL28                                                     01893000
@NM00008 DS    CL4                                                      01894000
         ORG   CPLSTOR+32                                               01895000
FPLSTOR  DS    CL24                                                     01896000
         ORG   FPLSTOR                                                  01897000
@NM00009 DS    CL16                                                     01898000
@NM00010 DS    CL8                                                      01899000
         ORG   FPLSTOR+24                                               01900000
GENAME   DS    CL45                                                     01901000
         ORG   GENAME                                                   01902000
GELENGTH DS    CL1                                                      01903000
GNAME    DS    CL44                                                     01904000
         ORG   GENAME+45                                                01905000
TYPE01   DS    CL9                                                      01906000
         ORG   TYPE01                                                   01907000
QULTYPE  DS    CL1                                                      01908000
QULNAME  DS    CL8                                                      01909000
         ORG   TYPE01+9                                                 01910000
         DS    CL2                                                      01911000
QULBUF   DS    CL45                                                     01912000
         ORG   QULBUF                                                   01913000
@NM00011 DS    CL1                                                      01914000
QUALIFY  DS    CL44                                                     01915000
         ORG   QULBUF+45                                                01916000
VOLAREA  DS    CL15                                                     01917000
         ORG   VOLAREA                                                  01918000
@NM00012 DS    CL2                                                      01919000
VOLDATA  DS    CL12                                                     01920000
         ORG   VOLDATA                                                  01921000
DEVTYPE  DS    CL4                                                      01922000
VOLSER   DS    CL6                                                      01923000
FSEQ     DS    CL2                                                      01924000
         ORG   VOLAREA+14                                               01925000
@NM00013 DS    CL1                                                      01926000
         ORG   VOLAREA+15                                               01927000
SAVNAME  DS    CL45                                                     01928000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01929000
@ENDDATD EQU   *                                                        01930000
IKJEHCIR CSECT                                                          01931000
         DS    0F                                                       01932000
@SIZDATD DC    AL1(0)                                                   01933000
         DC    AL3(@ENDDATD-@DATD)                                      01934000
         DS    0D                                                       01935000
@CC00229 DC    C'CATVOL  '                                              01936000
@CB00160 DC    X'40'                                                    01937000
FIXAREA  DS    CL300                                                    01938000
         ORG   FIXAREA                                                  01939000
@NM00014 DC    150X'00'                                                 01940000
@NM00015 DC    150X'00'                                                 01941000
         ORG   FIXAREA+300                                              01942000
         DS    CL3                                                      01943000
RTNTABLE DC    F'4'                                                     01944000
         DC    F'8'                                                     01945000
         DC    F'24'                                                    01946000
         DC    F'32'                                                    01947000
         DC    F'36'                                                    01948000
         DC    F'44'                                                    01949000
         DC    F'56'                                                    01950000
         DC    F'188'                                                   01951000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01952000
@01      EQU   01                                                       01953000
@02      EQU   02                                                       01954000
@03      EQU   03                                                       01955000
@04      EQU   04                                                       01956000
@05      EQU   05                                                       01957000
@06      EQU   06                                                       01958000
@07      EQU   07                                                       01959000
@08      EQU   08                                                       01960000
@09      EQU   09                                                       01961000
@10      EQU   10                                                       01962000
@11      EQU   11                                                       01963000
@12      EQU   12                                                       01964000
@13      EQU   13                                                       01965000
@14      EQU   14                                                       01966000
@15      EQU   15                                                       01967000
ENDBYTE  EQU   @03                                                      01968000
CTGPLPTR EQU   @03                                                      01969000
REG0     EQU   @00                                                      01970000
REG1     EQU   @01                                                      01971000
REG15    EQU   @15                                                      01972000
CIRPTR   EQU   @02                                                      01973000
R4       EQU   @04                                                      01974000
R5       EQU   @05                                                      01975000
R6       EQU   @06                                                      01976000
R7       EQU   @07                                                      01977000
REG10    EQU   @10                                                      01978000
REG11    EQU   @11                                                      01979000
REG12    EQU   @12                                                      01980000
REG13    EQU   @13                                                      01981000
REG14    EQU   @14                                                      01982000
REG2     EQU   @02                                                      01983000
REG3     EQU   @03                                                      01984000
REG4     EQU   @04                                                      01985000
REG5     EQU   @05                                                      01986000
REG6     EQU   @06                                                      01987000
REG7     EQU   @07                                                      01988000
REG8     EQU   @08                                                      01989000
REG9     EQU   @09                                                      01990000
CIRPARM  EQU   0                                                        01991000
CIROPT   EQU   CIRPARM                                                  01992000
CIRLOCRC EQU   CIRPARM+3                                                01993000
CIRSRCH  EQU   CIRPARM+4                                                01994000
CIRVOL   EQU   CIRPARM+8                                                01995000
CIRWA    EQU   CIRPARM+12                                               01996000
CIRPSWD  EQU   CIRPARM+20                                               01997000
CTGPL    EQU   0                                                        01998000
CTGOPTN1 EQU   CTGPL                                                    01999000
CTGNAME  EQU   CTGOPTN1                                                 02000000
CTGCNAME EQU   CTGOPTN1                                                 02001000
CTGGENLD EQU   CTGOPTN1                                                 02002000
CTGOPTN2 EQU   CTGPL+1                                                  02003000
CTGEXT   EQU   CTGOPTN2                                                 02004000
CTGERASE EQU   CTGOPTN2                                                 02005000
CTGSMF   EQU   CTGERASE                                                 02006000
CTGREL   EQU   CTGSMF                                                   02007000
CTGPURG  EQU   CTGOPTN2                                                 02008000
CTGVMNT  EQU   CTGPURG                                                  02009000
CTGOPTN3 EQU   CTGPL+2                                                  02010000
CTGFUNC  EQU   CTGOPTN3                                                 02011000
CTGSUPLT EQU   CTGOPTN3                                                 02012000
CTGAM0   EQU   CTGOPTN3                                                 02013000
CTGOPTN4 EQU   CTGPL+3                                                  02014000
CTGENT   EQU   CTGPL+4                                                  02015000
CTGCAT   EQU   CTGPL+8                                                  02016000
CTGWKA   EQU   CTGPL+12                                                 02017000
CTGDSORG EQU   CTGPL+16                                                 02018000
CTGNOFLD EQU   CTGPL+19                                                 02019000
CTGDDNM  EQU   CTGPL+20                                                 02020000
CTGNEWNM EQU   CTGDDNM                                                  02021000
CTGFBFLG EQU   CTGNEWNM+2                                               02022000
CTGJSCB  EQU   CTGPL+24                                                 02023000
CTGPSWD  EQU   CTGJSCB                                                  02024000
CTGFIELD EQU   CTGPL+28                                                 02025000
CTGFL    EQU   0                                                        02026000
CTGFLDNO EQU   CTGFL                                                    02027000
CTGFLDRE EQU   CTGFL+3                                                  02028000
CTGFLDNM EQU   CTGFL+8                                                  02029000
CTGFLDAT EQU   CTGFL+16                                                 02030000
CTGFLNG  EQU   CTGFLDAT                                                 02031000
CTGFLPT  EQU   CTGFLDAT+4                                               02032000
WORKAREA EQU   0                                                        02033000
AREALN   EQU   WORKAREA                                                 02034000
DATALN   EQU   WORKAREA+2                                               02035000
DATAREA  EQU   WORKAREA+4                                               02036000
USENAME  EQU   0                                                        02037000
TEMBLK   EQU   0                                                        02038000
WORKTEMP EQU   0                                                        02039000
TEMLN    EQU   WORKTEMP                                                 02040000
TEMRTLN  EQU   WORKTEMP+2                                               02041000
TEMPDATA EQU   WORKTEMP+4                                               02042000
QUALAREA EQU   0                                                        02043000
QUALN    EQU   QUALAREA                                                 02044000
RTNQLN   EQU   QUALAREA+2                                               02045000
QUALDATA EQU   QUALAREA+4                                               02046000
DATABLK  EQU   0                                                        02047000
VOLBLK   EQU   0                                                        02048000
SVNAME   EQU   0                                                        02049000
FT1      EQU   0                                                        02050000
FT2      EQU   0                                                        02051000
USECNT   EQU   0                                                        02052000
PARM1    EQU   0                                                        02053000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02054000
CTGFLCHN EQU   CTGFL+12                                                 02055000
CTGFLDWA EQU   CTGFL+4                                                  02056000
CTGFLDTS EQU   CTGFLDRE                                                 02057000
@NM00006 EQU   CTGFLDRE                                                 02058000
CTGFLDGC EQU   CTGFL+2                                                  02059000
CTGFLDCD EQU   CTGFL+1                                                  02060000
@NM00005 EQU   CTGFBFLG                                                 02061000
CTGNGDSN EQU   CTGFBFLG                                                 02062000
CTGGDGB  EQU   CTGFBFLG                                                 02063000
CTGKEEP  EQU   CTGFBFLG                                                 02064000
CTGPAR   EQU   CTGFBFLG                                                 02065000
CTGFDBK  EQU   CTGNEWNM                                                 02066000
CTGTYPE  EQU   CTGPL+18                                                 02067000
@NM00004 EQU   CTGDSORG                                                 02068000
CTGOPTNS EQU   CTGDSORG                                                 02069000
CTGCVOL  EQU   CTGCAT                                                   02070000
CTGFVT   EQU   CTGENT                                                   02071000
@NM00003 EQU   CTGOPTN4                                                 02072000
CTGDOCAT EQU   CTGOPTN4                                                 02073000
CTGLBASE EQU   CTGOPTN4                                                 02074000
CTGNUM   EQU   CTGOPTN3                                                 02075000
CTGSRH   EQU   CTGOPTN3                                                 02076000
CTGGDGL  EQU   CTGOPTN3                                                 02077000
@NM00002 EQU   CTGOPTN2                                                 02078000
CTGSCR   EQU   CTGOPTN2                                                 02079000
CTGOVRID EQU   CTGOPTN2                                                 02080000
CTGDISC  EQU   CTGOPTN2                                                 02081000
CTGGTNXT EQU   CTGOPTN2                                                 02082000
CTGRCATN EQU   CTGVMNT                                                  02083000
CTGGTALL EQU   CTGREL                                                   02084000
CTGNSVS  EQU   CTGEXT                                                   02085000
CTGREAD  EQU   CTGOPTN1                                                 02086000
CTGUPD   EQU   CTGOPTN1                                                 02087000
CTGCI    EQU   CTGOPTN1                                                 02088000
CTGMAST  EQU   CTGOPTN1                                                 02089000
CTGBYPSS EQU   CTGOPTN1                                                 02090000
CIRSAVE  EQU   CIRPARM+16                                               02091000
@NM00001 EQU   CIRPARM+1                                                02092000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02093000
@RT00135 EQU   BYPASS                                                   02094000
@RC00192 EQU   @EL00003                                                 02095000
@RF00207 EQU   @EL00003                                                 02096000
@RF00416 EQU   @EL00005                                                 02097000
@RF00490 EQU   @EL00006                                                 02098000
@PB00006 EQU   @PB00007                                                 02099000
@PB00005 EQU   @PB00006                                                 02100000
@PB00004 EQU   @PB00005                                                 02101000
@PB00003 EQU   @PB00004                                                 02102000
@PB00002 EQU   @PB00003                                                 02103000
@RC00078 EQU   @PB00002                                                 02104000
@RC00076 EQU   @PB00002                                                 02105000
@RC00074 EQU   @PB00002                                                 02106000
@ENDDATA EQU   *                                                        02107000
         END   IKJEHCIR,(C'PLS0408',0602,74346)                         02108000
./  ADD  SSI=40730047,NAME=IKJEHDEF
         TITLE 'IKJEHDEF - TSO DEFAULT NAMING SERVICE ROUTINE'          00090020
IKJEHDEF CSECT                                                          00180020
*********************************************************************** 00450020
*                                                                     * 00540020
* STATUS -- CHANGE LEVEL 00                                           * 00630020
*                                                                     * 00720020
* FUNCTION -- THE DEFAULT NAMING SERVICE ROUTINE IS USED TO QUALIFY   * 00810020
*    DATA SET NAMES.                                                  * 00900020
*                                                                     * 00990020
* ENTRY POINTS --                                                     * 01080020
*          IKJDFLT - MAIN ENTRY POINT OF PROGRAM                      * 01170020
*                                                                     * 01260020
* INPUT -- REGISTER 1 POINTS TO THE DEFAULT SERVICE ROUTINE PARAMETER * 01350020
*    LIST AS FOLLOWS-                                                 * 01440020
*    WORD 1 POINTS TO THE USER PROFILE TABLE (UPT)                    * 01530020
*    WORD 2 POINTS TO THE ENVIORONMNT CONTROL TABLE (ECT)             * 01620020
*    WORD 3 POINTS TO THE CP'S EVENT CONTROL BLOCK (ECB)              * 01710020
*    WORD 4 POINTS TO THE DEFAULT PARAMETER BLOCK                     * 01800020
*                                                                     * 01890020
*    THE DEFAULT PARAMETER BLOCK IS AS FOLLOWS-                       * 01980020
*    WORD 1 BYTE 1   CONTAINS THE ENTRY CODE                          * 02070020
*    WORD 1 BYTE 2-4 POINTS TO THE DATA SET NAME AND LENGTH           * 02160020
*    WORD 2 BYTE 1   CONTAINS CONTROL INFORMATION                     * 02250020
*    WORD 2 BYTE 2-4 POINTS TO THE PROTECTED STEP CONTROL BLOCK (PSCB)* 02340020
*    WORD 3          POINTS TO A SPECIFIC DEFAULT QUALIFIER           * 02430020
*                                                                     * 02520020
* OUTPUT -- WHEN MORE THAN ONE QUALIFIER IS FOUND FOR A DATA SET NAME * 02610020
*    THESE QUALIFIERS ARE LISTED AT THE TERMINAL.  APPROPRIATE        * 02700020
*    PROMPTING AND DIAGNOSTIC MESSAGES MAY ALSO BE ISSUED.            * 02790020
*                                                                     * 02880020
* EXTERNAL REFERENCES --                                              * 02970001
*         IKJEHCIR - ENTRY POINT TO CATALOG INFORAMTION ORUTINE       * 03060020
*         IKJPUTL - ENTRY POINT TO PUTLINE SERVICE ROUTINE            * 03150020
*         IKJPTGT - ENTRY POINT TO PTUGET SERVICE ROUTINE             * 03240020
*         IKJSCAN - ENTRY POINT TO COMMAND SCAN SERVICE ROUTINE       * 03330020
*                                                                     * 03420020
* EXITS, NORMAL -- RETURN TO CALLER                                   * 03510020
*                                                                     * 03600020
* EXITS, ERROR -- RETURN TO CALLER                                    * 03690020
*                                                                     * 03780020
* TABLES/WORK AREAS --                                                * 03870020
*    WORKAREA - A DSECT TO MAP THE WORKAREA                           * 03960020
*                                                                     * 04050020
* ATTRIBUTES -- REENTRANT, READ-ONLY, REFRESHABLE                     * 04140020
*                                                                     * 04230020
* CHARACTER CODE DEPENDENCY -- CHARACTER CODE INDEPENDENT             * 04320020
*                                                                     * 04410020
* NOTES -- N/A                                                        * 04500001
*                                                                     * 04590020
*********************************************************************** 04680020
         SPACE 2                                                        04700001
         ENTRY IKJDFLT                                                  04730001
         EJECT                                                          04770020
         SPACE                                                          04860020
*  REGISTER EQUATES                                                     04950020
R0       EQU   0                   GENERAL REGISTER 0                   05040020
R1       EQU   1                   GENERAL REGISTER 1                   05130020
R2       EQU   2                   GENERAL REGISTER 2                   05220020
R3       EQU   3                   GENERAL REGISTER 3                   05310020
R4       EQU   4                   GENERAL REGISTER 4                   05400020
R5       EQU   5                   GENERAL REGISTER 5                   05490020
R6       EQU   6                   GENERAL REGISTER 6                   05580020
R7       EQU   7                   GENERAL REGISTER 7                   05670020
R8       EQU   8                   GENERAL REGISTER 8                   05760020
R9       EQU   9                   GENERAL REGISTER 9                   05850020
R10      EQU   10                  GENERAL REGISTER 10                  05940020
R11      EQU   11                  GENERAL REGISTER 11                  06030020
R12      EQU   12                  GENERAL REGISTER 12                  06120020
R13      EQU   13                  GENERAL REGISTER 13                  06210020
R14      EQU   14                  GENERAL REGISTER 14                  06300020
R15      EQU   15                  GENERAL REGISTER 15                  06390020
*  OTHER EQUATES                                                        06480020
SPN      EQU   1                   SUBPOOL NUMBER FOR GETMAIN           06570020
MASK1    EQU   X'40'               MASK TO TEST FOR ATTENTION           06660020
PERIOD   EQU   C'.'                PERIOD                               06750020
BLANK    EQU   C' '                BLANK                                06840020
HALFWORD EQU   X'01'               MASK TO TEST FOR HALFWORD BOUNDRY    06930020
CIROP1   EQU   X'01'               CIR OPTION TO REQUEST DATA SET NAMES 07020002
CIRVOL   EQU   X'04'               REQUEST VOLUMES FROM CIR             07110020
GDGNAME  EQU   X'02'               CIR - GENERATION DATA GROUP NAME     07200020
NAMETEST EQU   X'07'               CIR - DATA SET NAME                  07290020
LISTEND  EQU   X'FF'               CIR - END OF LIST                    07380020
TTRSIGN  EQU   X'80'               MASK TO INDICATE TTR POINTER         07470020
LOCMSK8  EQU   X'08'               MASK TO CHECK FOR LOCATE RC=8 (CIR)  07560020
LOCMSK16 EQU   X'10'               MASK TO CHECK FOR LOCATE RC=16 (CIR) 07650020
SWON     EQU   X'FF'               MASK TO TURN SWITCHES ON             07740020
SWOFF    EQU   X'00'               MASK TO TURN SWITCHES OFF            07830020
EQ       EQU   8                   EQUAL CONDITION CODE                 07920020
ENDTEST  EQU   X'FF'               INDICATE END OF CHAIN                08010020
ZONE     EQU   C'0'                ZONE                                 08100020
FOXZERO  EQU   C'0'                CHARACTER ZERO                       08190020
ONE      EQU   1                   ONE                                  08280020
TWO      EQU   2                   TWO                                  08370020
FOUR     EQU   4                   FOUR                                 08460020
*  ABSOLUTE EQUATES (OFFSETS AND SHORT LENGTHS)                         08550020
F0       EQU   0                   ZERO                                 08640020
F1       EQU   1                   ONE                                  08730020
F2       EQU   2                   TWO                                  08820020
F4       EQU   4                   FOUR                                 08910020
F5       EQU   5                   FIVE                                 09000020
F7       EQU   7                   SEVEN                                09090020
F8       EQU   8                   EIGHT                                09180020
F12      EQU   12                  TWELVE                               09270020
F43      EQU   43                  FORTY-THREE                          09360020
*  RETURN CODE EQUATES                                                  09450020
RC4      EQU   4                   RETURN CODE = 4                      09540020
RC8      EQU   8                   RETURN CODE = 8                      09630020
RC12     EQU   12                  RETURN CODE = 12                     09720020
RC16     EQU   16                  RETURN CODE = 16                     09810020
RC20     EQU   20                  RETURN CODE = 20                     09900020
RC24     EQU   24                  RETURN CODE = 24                     09990020
RC28     EQU   28                  RETURN CODE = 28                     10080020
RC32     EQU   32                  RETURN CODE = 32                     10170020
RC36     EQU   36                  RETURN CODE = 36                     10260020
*  LENGTH EQUATES (FIXED LENGTH ITEMS)                                  10350020
L3       EQU   3                   LENGTH OF TTR                        10440020
L6       EQU   6                   LENGTH OF VOLUME ID (VOLID)          10530020
L8       EQU   8                   LENGTH OF SIMPLE DSNAME (QUALIFIER)  10620020
L9       EQU   9                   LENGTH OF CIR NAME ENTRY             10710020
L10      EQU   10                  LENGTH OF MESSAGE ID                 10800020
L13      EQU   13                  LENGTH OF (NAME + LL + OFFSET) + 1   10890020
L16      EQU   16                  LENGTH OF CIR GENERATION DATA ENTRY  10980020
L46      EQU   46                  LENGTH OF DSNAME AND DSLENGTH FIELD  11070020
L72      EQU   72                  LENGTH OF SAVEAREA                   11160020
*                                                                       11250020
*  EQUATES FOR MESSAGE NUMBERS (FIRST LEVEL MESSAGES)                   11340020
M01      EQU   1                   MESSAGE NUMBER 01                    11430020
M02      EQU   2                   MESSAGE NUMBER 02                    11520020
M03      EQU   3                   MESSAGE NUMBER 03                    11610020
M04      EQU   4                   MESSAGE NUMBER 04                    11700020
M05      EQU   5                   MESSAGE NUMBER 05                    11790020
M06      EQU   6                   MESSAGE NUMBER 06                    11880020
M07      EQU   7                   MESSAGE NUMBER 07                    11970020
M08      EQU   8                   MESSAGE NUMBER 08                    12060020
M09      EQU   9                   MESSAGE NUMBER 09                    12150020
M10      EQU   10                  MESSAGE NUMBER 10                    12240020
M11      EQU   11                  MESSAGE NUMBER 11                    12330020
M12      EQU   12                  MESSAGE NUMBER 12                    12420020
*  EQUATES FOR MESSAGE NUMBERS (SECOND LEVEL MESSAGES)                  12510020
S01      EQU   1                   SECOND LEVEL MESSAGE NUMBER 01       12600020
S02      EQU   2                   SECOND LEVEL MESSAGE NUMBER 02       12690020
S03      EQU   3                   SECOND LEVEL MESSAGE NUMBER 03       12780020
S04      EQU   4                   SECOND LEVEL MESSAGE NUMBER 04       12870020
S05      EQU   5                   SECOND LEVEL MESSAGE NUMBER 05       12960020
S06      EQU   6                   SECOND LEVEL MESSAGE NUMBER 06       13050020
S07      EQU   7                   SECOND LEVEL MESSAGE NUMBER 07       13140020
S08      EQU   8                   SECOND LEVEL MESSAGE NUMBER 08       13230020
S09      EQU   9                   SECOND LEVEL MESSAGE NUMBER 09       13280002
*              REGISTER USAGE                                           13320020
*                                                                       13410020
*  REGISTER 0  USED AS WORK REGISTER                                    13500020
*                                                                       13590020
*  REGISTER 1  USED AS PARAMETER REGISTER AND AS WORK REGISTER          13680020
*                                                                       13770020
*  REGISTER 2  USED AS WORK REGISTER                                    13860020
*                                                                       13950020
*  REGISTER 3  USED AS WORK REGISTER                                    14040020
*                                                                       14130020
*  REGISTER 4  USED AS WORK REGISTER                                    14220020
*                                                                       14310020
*  REGISTER 5 USED AS WORK REGISTER                                     14360002
*                                                                       14370002
*  REGISTER 6 POINTS TO DEFAULT PARAMETER BLOCK                         14410002
*                                                                       14460002
*  REGISTER 7 USED AS WORK REGISTER                                     14510002
*                                                                       14850020
*  REGISTER 8  USED AS WORK REGISTER                                    14940020
*                                                                       15030020
*  REGISTER 9  USED AS WORK REGISTER                                    15120020
*                                                                       15210020
*  REGISTER 10 USED AS WORK REGISTER                                    15300020
*                                                                       15390020
*  REGISTER 11 USED AS WORK REGISTER                                    15480020
*                                                                       15570020
*  REGISTER 12 IS BASE REGISTER FOR THIS PROGRAM                        15660020
*                                                                       15750020
*  REGISTER 13 IS SAVE AREA REGISTER AND DSECT BASE REGISTER            15840020
*                                                                       15930020
*  REGISTER 14 IS THE LINK REGISTER                                     16020020
*                                                                       16110020
*  REGISTER 15 IS THE BRANCH AND RETURN CODE REGISTER                   16200020
         EJECT                                                          16290020
IKJDFLT  SAVE  (14,12),,*          SAVE CALLING PROGRAM'S REGISTERS     16380020
         LR    R12,R15             SET BASE REGISTER                    16470020
         USING IKJEHDEF,R12        ESTABLISH ADDRESSABILITY             16560020
         LR    R2,R1               SAVE REG 1 WHICH IS USED BY GETMAIN  16650020
         GETMAIN R,LV=CORE,SP=SPN  GET CORE FOR CONSTANTS AND WORKAREA  16740020
         XC    F0(L72,R1),F0(R1)   INITIALIZE REG SAVE AREA             17010020
         ST    R13,F4(R1)          CHAIN SAVE AREAS -                   17100020
         ST    R1,F8(R13)          - BACKWARDS AND FORWARDS             17190020
         LR    R13,R1              FIRST 18 WORDS IS REGISTER SAVE AREA 17220020
         USING WORKAREA,R13        ADDRESSABILITY FOR WORKAREA          17250020
         MVC   PUT(PUTLEND-PUTL),PUTL INITIALIZE PUTLINE PARM BLOCK     17280020
         MVC   PROMPT(PRMPTEND-PRMPT1),PRMPT1 AND PUTGET PARMBLOCK      17370020
         MVI   DSNAME,BLANK        BLANK DATA SET -                     17460020
         MVC   DSNAME+F1(F43),DSNAME WORK BUFFER                        17550020
         SR    R1,R1               CLEAR REGISTER                       17640020
         ST    R1,FLAGWORD         ZERO COMMAND SCAN FLAG WORD          17730020
         ST    R1,CIRADDR          ZERO CIR ADDRESS FIELD               17820020
         MVI   SWITCH,SWOFF        SET SWITCH OFF                       18000020
         MVI   ADDSW,SWOFF         SET SWITCH OFF                       18050020
         MVI   OPTSW,SWOFF         SET SWITCH OFF              @YL026YB 18060002
*  INITIALIZE CIR PARAMETER LIST                                        18090020
         LH    R0,MINMAX           POINT TO GETMAIN PARAMETER  @YL026YB 18140002
         LR    R3,R0               SAVE LENGTH                 @YL026YB 18142002
         O     R0,SUBPL1           SET SUBPOOL NUMBER          @YL026YB 18144002
         GETMAIN R,LV=(0)          WORKAREA FOR CIR            @YL026YB 18150002
         LTR   R15,R15             TEST RETURN CODE            @YL026YB 18160002
         BZ    CIRPM               CONTINUE NORMALLY           @YL026YB 18170002
         MVI   OPTSW,SWON          NO CIR WOAREA               @YL026YB 18172002
         B     DEF1                CONTINUE,CIR WKAREA UNUSED  @YL026YB 18178002
CIRPM    STH   R3,F0(R1)           SAVE LENGTH OF WORKAREA     @YL026YB 18179802
         ST    R1,WKAR1PTR         SET POINTER TO WORKAREA     @YL026YB 18180002
         LA    R1,WKAREA2          ADDRESS OF SECOND WORKAREA -         18360020
         ST    R1,WKAR2PTR         TO CIR PARAMETER LIST                18450020
         LA    R1,CVOLID           ADDRESS OF USER CAT. NAME   @YL026YB 18500002
         ST    R1,CVOLIDPT         SET PTR TO USER CAT. NAME   @YL026YB 18510002
         LA    R1,PASSWKD          ADDRESS OF CATALOG PASSWORD @YL026YB 18520002
         ST    R1,PASSPTR          SET PTR TO CATALOG PASSWORD @YL026YB 18530002
*  INITIALIZE SCAN BUFFER LAST BYTE TO BLANK                            18540020
DEF1     EQU   *                   START NORMAL PROCESSING     @YL026YB 18590002
         LA    R1,SCANBUFF         POINT TO SCAN BUFFER                 18630020
         MVI   F8(R1),BLANK        MOVE IN A BLANK                      18720020
*  REGISTER 2 POINTS TO DEFAULT PARAMETER LIST                          18810020
         USING DFPL,R2             ESTABLISH ADDRESSABILITY FOR DFPL    18900020
         L     R3,DFPLUPT          UPT ADDRESS                          18990020
         ST    R3,UPTSAV           SAVE UPT ADDRESS            @YL026YB 19040002
         L     R4,DFPLECT          ECT ADDRESS                          19080020
         L     R5,DFPLECB          ECB ADDRESS                          19170020
         L     R6,DFPLDFPB         DFPB ADDRESS                         19260020
         DROP  R2                  DFPL IS NO LONGER NEEDED             19350020
         USING DFPB,R6             ESTABLISH ADDRESSABILITY FOR DFPB    19440020
*  REGISTER 3 POINTS TO THE UPT                                         19530020
*  REGISTER 4 POINTS TO THE ECT                                         19620020
*  REGISTER 5 POINTS TO THE CP'S ECB                                    19710020
*  REGISTER 6 POINTS TO DEFAULT PARAMETER LIST                          19800020
         LA    R1,IOPARM           POINT TO SPACE FOR I/O PARM LIST     19890020
         USING IOPL,R1             SET ADDRESSABILITY IOPL              19980020
         LA    R2,CSPLPARM         POINT TO SPACE FOR CMD SCAN PARMLIST 20070020
         USING CSPL,R2             SET ADDRESSABILITY CSPL              20160020
*  INITIALIZE PARAMETERS FOR I/O AND COMMAND SCAN                       20250020
         ST    R3,IOPLUPT          UPT ADDRESS TO IOPL-                 20340020
         ST    R3,CSPLUPT          AND CSPL                             20430020
         ST    R4,IOPLECT          ECT ADDRESS TO IOPL-                 20520020
         ST    R4,CSPLECT          AND CSPL                             20610020
         ST    R5,IOPLECB          ECB ADDRESS TO IOPL-                 20700020
         ST    R5,CSPLECB          AND CSPL                             20790020
         ST    R5,ECBADDR          SAVE ECB ADDRESS                     20880020
         LA    R3,FLAGWORD         COMMAND SCAN FLAG WORD-              20970020
         ST    R3,CSPLFLG          TO CSPL                              21060020
         LA    R3,CSOAAREA         COMMAND SCAN OUTPUT AREA-            21150020
         ST    R3,CSPLOA           TO CSPL                              21240020
         DROP  R1                  IOPL NO LONGER NEEDED                21330020
         DROP  R2                  CSPL NO LONGER NEEDED                21420020
*  NOW LOAD DEFAULT PARAMETERS                                          21510020
         L     R3,DFPBDSN          POINT TO DSLENGTH AND DSNAME BUFFER  21600020
         L     R4,UPTSAV           POINT TO UPT                @YL026YB 21690002
         L     R5,DFPBQUAL         POINT TO DEFAULT QUALIFIER           21780020
*  NOW REGISTER 3 POINTS TO DATA SET LENGTH AND NAME BUFFER             21870020
*  NOW REGISTER 4 POINTS TO THE PSCB                                    21960020
*  NOW REGISTER 5 POINTS TO THE DEFAULT QUALIFIER                       22050020
*  NOW VALIDITY CHECK PARAMETERS                                        22140020
         CLI   DFPBCODE,DFPB00     IS OPTION X'00'                      22230020
         BE    OKOPTION            YES, OK                              22320020
         CLI   DFPBCODE,DFPB80     IS OPTION X'80'             @YL026YB 22370002
         BE    OKOPTION            YES, OK                     @YL026YB 22380002
         B     CHKCORE             GO CHECK FOR CIR WKAREA     @YL026YB 22390002
NEXTCPR  CLI   DFPBCODE,DFPB04     IS OPTION X'04'             @YL026YB 22410002
         BE    OKOPTION            YES, OK                              22500020
         CLI   DFPBCODE,DFPB08     IS OPTION X'08'                      22590020
         BE    OKOPTION            YES, OK                              22680020
         CLI   DFPBCODE,DFPB0C     IS OPTION X'0C'                      22770020
         BE    OKOPTION            YES, OK                              22860020
         CLI   DFPBCODE,DFPB84     IS OPTION X'84'             @YL026YB 22930002
         BE    OKOPTION            YES,OK                      @YL026YB 22940002
         CLI   DFPBCODE,DFPB88     IS OPTION X'88'             @YL026YB 22942002
         BE    OKOPTION            YES,OK                      @YL026YB 22944002
         CLI   DFPBCODE,DFPB8C     IS OPTION X'8C'             @YL026YB 22946002
         BE    OKOPTION            YES,OK                      @YL026YB 22948002
         B     ERROR28             ERROR, INVALID ENTRY OPTION          22950020
CHKCORE  CLI   OPTSW,SWON          IS CORE AVAILABLE           @YL026YB 23000002
         BNE   NEXTCPR             CHECK NEXT OPTION           @YL026YB 23010002
         BAL   R11,MESG10          GO GET MESSAGE 10           @YL026YB 23020002
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERT.  @YL026YB 23030002
         LA    R2,S09              SECOND LEVEL MESSAGE 6      @YL026YB 23032002
         BAL   R14,SMSGBLD         GO BUILD MESSAGE            @YL026YB 23034002
         BAL   R9,TPUT             GO WRITE MESSAGE            @YL026YB 23036002
         B     ERROR4              GO SET RETURN CODE          @YL026YB 23038002
OKOPTION STC   R3,TESTBYTE         STORE LAST BYTE OF ADDRESS           23040020
         TM    TESTBYTE,HALFWORD   IS DSLENGTH ON HALFWORD BOUNDRY      23130020
         BO    ERROR28             NO, ERROR, BAD PARAMETER             23220020
         LH    R8,F0(R3)           LOAD DATA SET LENGTH                 23310020
         LTR   R8,R8               IS LENGTH ZERO                       23400020
         BNZ   SIZETEST            NO , CHECK DATA SET LENGTH           23490020
         LA    R8,FOUR             HEADER LENGTH                        23580020
         STH   R8,DSNMESGL         SET INSERTION LENGTH (0)             23670020
*  DATA SET LENGTH IS ZERO, OPTION MUST BE X'00' ELSE ERROR             23760020
         CLI   DFPBCODE,DFPB80     IS OPTION X'80'             @YL026YB 23810002
         BE    SETSW               PROCESS X'80'               @YL026YB 23820002
         CLI   DFPBCODE,DFPB00     IS OPTION X'00'                      23850020
         BNE   ERROR28             ERROR, INVALID DSLENGTH              23940020
SETSW    MVI   SWITCH,SWON         TURN SWITCH ON              @YL026YB 24030002
         B     CNTRLTST            GO CHECK OPTION                      24120020
SIZETEST CH    R8,DSMAXSZE         IS LENGTH GREATER THAN 44            24210020
         BH    ERROR28             ERROR, INVALID DSLENGTH              24300020
         BCTR  R8,R0               DECREMENT FOR EXECUTE                24390020
         EX    R8,DSNINSRT         MOVE DSNAME TO INSERTION BUFFER      24480020
         LA    R8,F5(R8)           4 FOR HEADER AND 1 FOR EXECUTE       24570020
         STH   R8,DSNMESGL         LENGTH OF INSERTION                  24660020
         TM    DFPBCNTL,DFPBRET    RETURN QUALIFIER                     24710020
         BNO   TEST0C              NO, GO CHECK FOR USERID ADD          24720020
         L     R8,DFPBQUAL         POINT TO QUALIFIER BUFFER            24730020
         MVC   F0(L8,R8),UPERCASE  BLANK QUALIFIER RETURN BUFFER        24740020
TEST0C   CLI   DFPBCODE,DFPB0C     IS OPTION X'0C'                      24750020
         BE    CNTRLTST            YES,CONTINUE X'0C' PROCESSING        24800002
         CLI   DFPBCODE,DFPB8C     IS OPTION X'8C'             @YL026YB 24810002
         BNE   NOT0C               NO, NOT X'0C'                        24840020
CNTRLTST TM    DFPBCNTL,DFPBMSG    WAS MESSAGE REQUESTED                24930020
         BO    REUSE               YES, GO ISSUE MESSAGE                25020020
NOT0C    TM    DFPBCNTL,DFPBUID    USERID ADD REQUESTED                 25110020
         BZ    MOVENAME            NO, GO MOVE NAME                     25200020
*  NOW PREFIX THE USERID TO THE GIVEN DATA SET NAME                     25290020
ADDUSRID LA    R8,DSNAME           ADDRESS OF DATA SET NAME BUFFER      25380020
         SR    R9,R9               ZERO REGISTER                        25470020
         USING UPT,R4              ESTABLISH ADDRESSABILITY FOR UPT     25560002
         LA    R2,UPTPREFX         ADDRESS OF PREFIX           @YL026YB 25650002
         IC    R9,UPTPREFL         LENGTH OF PREFIX            @YL026YB 25740002
         LTR   R9,R9               CHECK PREFIX LENGTH                  25790002
         BZ    NOPREFIX            NO PREFIXING                         25800002
         EX    R9,MOVEID           USERID TO DSNAME BUFFER              25830020
*  THIS ACTUALLY MOVES ONE EXTRA BYTE WHICH WILL BE OVERLAID WITH A     25920020
*  PERIOD.                                                              26010020
*  UPT  POINTER IS NO LONGER NEEDED, REGISTER 4 IS AVAILABLE            26100002
         DROP  R4                  DROP PSCB ADDRESSABILITY             26190020
         AR    R8,R9               POINT PAST USERID                    26280020
         MVI   F0(R8),PERIOD       INSERT PERIOD                        26370020
         LA    R8,F1(R8)           POINT PAST PERIOD                    26460020
         LA    R9,F1(R9)           PLUS ONE FOR THE PERIOD     @YL026YB 26510002
NOPREFIX AH    R9,F0(R3)           ADD DSLENGTH TO USERID LENGTH        26550002
         TM    SWITCH,SWON         TEST SWITCH                          26730020
         BO    OPTTEST             GO SAVE DATA SET LENGTH              26820020
         CH    R9,DSMAXSZE         COMPARE TOTAL TO 44                  26910020
         BH    LENTHERR            ERROR, LENGTH GT 44                  27000020
         LA    R4,F2(R3)           POINT TO DSNAME                      27090020
         LH    R1,F0(R3)           LENGTH OF DSNAME                     27180020
         BCTR  R1,R0               DECREMENT FOR EXECUTE                27270020
         EX    R1,MOVEINST         MOVE DSNAME TO USERID                27360020
         STH   R9,DSL              SAVE TOTAL LENGTH                    27450020
         B     TESTOPTN            CHECK OPTION                         27540020
OPTTEST  STH   R9,DSL              SAVE DATA SET LENGTH                 27630020
         B     ADDNAME             GO ADD DSNAME                        27720020
MOVENAME TM    SWITCH,SWON         IS SWITCH ON                         27810020
         BO    ERROR28             ERROR, DSLENGTH 0, NO USERID ADD     27900020
         MVC   DSL(L46),F0(R3)     MOVE NAME AND LENGTH TO WORK BUFFER  27990020
TESTOPTN CLI   DFPBCODE,DFPB00     IS OPTION X'00'                      28080020
         BE    ADDNAME             PROCESS X'00' ENTRY                  28170020
         CLI   DFPBCODE,DFPB80     IS OPTION X'80'             @YL026YB 28220002
         BE    ADDNAME             PROCESS X'80' ENTRY         @YL026YB 28270002
*  NOW LOAD CIR ROUTINE                                                 28890020
         LA    R7,F1               REG 1 = 1                            28940002
CALCIR   MVI   CIROPT,CIRVOL       SET CIR OPTION FOR VOLUMES           29130002
         LA    R1,DSNAME           ADDRESS OF DSNAME                    29140020
         ST    R1,NAMETTR          SET POINTER TO DSNAME                29150020
         BAL   R14,MVMOPT          SET POINTERS TO USER        @YL026YB 29200002
*                                  CATALOG AND PASSWORD        @YL026YB 29230002
         BAL   R14,TESTATTN        CHECK FOR INTERRUPT                  29250020
         LA    R1,CIRPARM          POINT TO CIR PARAMETER LIST          29340020
         L     R15,VCONCIR         CIR ADDRESS TO REG 15                29390002
         BALR  R14,R15             GO TO CIR ROUTINE                    29400002
         LTR   R15,R15             TEST RETURN CODE                     29520020
         BZ    GOODEND             OK, NAME FOUND                       29610020
         CH    R7,UNO              IS THIS THE FIRST CALL TO CIR        29620002
         BNE   CIRERROR            NO,ERROR                    @YL026YB 29630002
         CLI   DFPBCODE,DFPB0C     IS OPTION X'0C'                      29660020
         BE    CHECKADD            GO CHECK ADD QUALIFIER OPTION        29670020
         CLI   DFPBCODE,DFPB8C     IS OPTION X'8C'             @YL026YB 29680002
         BE    CHECKADD            GO CHECK ADD QUALIFIER OPTION        29690002
         CLI   DFPBCODE,DFPB00     IS OPTION X'00'                      29970020
         BE    ERROR36             YES, ERROR                           30060020
         CLI   DFPBCODE,DFPB80     IS OPTION X'80'             @YL026YB 30110002
         BE    ERROR36             YES,ERROR                   @YL026YB 30160002
*                                                                       30510020
*  NO QUALIFIER SPECIFED USE CIR TO GET QUALIFIERS                      30600020
*  BUILD CIR PARAMETER LIST                                             30690020
GOCIR    LA    R1,DSNAME           ADDRESS OF DATA SET NAME             30780020
         ST    R1,NAMETTR          SET POINTER TO DSNAME                30870020
         BAL   R14,MVMOPT          SET POINTERS TO USERS       @YL026YB 30920002
*                                  CATALOG AND PASSWORD        @YL026YB 30930002
         MVI   CIROPT,CIROP1       SET CIR OPTION, REQUEST DSNAMES      30960002
         LA    R2,QUALLIST         POINT TO AREA FOR QUALIFIER LIST     31050020
         SR    R11,R11             ZERO QUALIFIER COUNTER               31140020
         BAL   R14,TESTATTN        CHECK FOR INTERRUPT                  31320020
         LA    R1,CIRPARM          POINT TO CIR PARAMETERS              31410020
         L     R15,VCONCIR         CIR ADDRESS TO REG 15                31460002
         BALR  R14,R15             GO TO CIR ROUTINE                    31470002
         LTR   R15,R15             TEST RETURN CODE                     31590020
         BNZ   CIRERROR            GO CHECK NONZERO RETURN CODE         31680020
*  CIR OK -- GET QUALIFIERS                                             31730001
         L     R9,WKAR1PTR         POINT TO CIR RETURN LIST    @YL026YB 31770002
         LA    R9,F4(R9)           BUMP PTR TO 1ST ENTRY CODE  @YL026YB 31820002
TESTLIST CLI   F0(R9),NAMETEST     IS IT A DATA SET NAME                31860020
         BE    BLDLIST             YES, ADD IT TO LIST OF QUALIFIERS    31950020
         CLI   F0(R9),GDGNAME      IS IT A GENERATION DATA GROUP NAME   32040020
         BE    GENNAME             GO BUMP POINTER FOR GENERATION NAME  32130020
         CLI   F0(R9),LISTEND      IS IT THE END OF THIS LIST           32220020
         BE    NAMEFND             YES, SEE IF NAMES FOUND     @YL026YB 32310002
         B     CIRERROR            NONE OF THE ABOVE IS ERROR           32400020
GENNAME  LA    R9,L16(R9)          BUMP POINTER TO NEXT ENTRY           32490020
         B     TESTLIST            GO CHECK NEXT ENTRY                  32580020
CHECKADD TM    DFPBCNTL,DFPBADD    ADD SPECIFIED QUALIFIER              32630020
         BNO   GOCIR               NO, GO GET QUALIFIERS                32640020
         CLI   ADDSW,SWON          HAS SPECIFIED QUALIFIER BEEN ADDED   32650020
         BE    GOODEND             YES, RETURN NAME                     32660020
         MVI   ADDSW,SWON          NO, TURN ON ADD SWITCH               32662020
         LA    R7,F1(R7)           ADD 1 R7 FOR 2ND CALL TO CIR         32662402
         B     ADDNAME             GO ADD SPECIFIED QUALIFIER           32664020
MVMOPT   CLI   DFPBCODE,DFPB84     IS OPTION X'84'             @YL026YB 32664402
         BE    CATOPT              USER CAT. AND PASSWORD REQUIRED      32664802
         CLI   DFPBCODE,DFPB88     IS OPTION X'88'             @YL026YB 32665202
         BE    CATOPT              USER CAT. AND PSWD REQUIRED @YL026YB 32665602
         CLI   DFPBCODE,DFPB8C     IS OPTION X'8C'             @YL026YB 32665702
         BE    CATOPT              USER CAT. AND PSWD REQUIRED @YL026YB 32665802
         XC    PASSPTR,PASSPTR     NO PASSWORD                 @YL026YB 32665902
         XC    CVOLIDPT,CVOLIDPT   NO USER CATALOG             @YL026YB 32689402
         BR    14                  RETURN                      @YL026YB 32699402
CATOPT   L     R2,DFPBCAT          POINT TO USER CAT. ADDR.    @YL026YB 32709402
         ST    R2,CVOLIDPT         STORE USER CAT. POINTER     @YL026YB 32711402
         L     R2,DFPBPSWD         POINT TO PASSWORD ADDR      @YL026YB 32711802
         ST    R2,PASSPTR          STORE PASSWORD POINTER      @YL026YB 32712202
         BR    14                  RETURN                      @YL026YB 32712602
*  BUILD QUALIFIED NAME                                                 33800001
ONEQUAL  MVC   SCANBUFF(L8),QUALLIST MOVE QUALIFIER TO SCAN BUFFER      33840020
         BAL   R14,SCANNAME        GO TO SCAN ROUTINE                   33930020
ADDQUAL  LA    R8,DSNAME           POINT TO DSNAME                      34020020
         AH    R8,DSL              POINT PAST DSNAME                    34110020
         MVI   F0(R8),PERIOD       INSERT PERIOD                        34200020
         LA    R8,F1(R8)           POINT PAST PERIOD                    34290020
         LA    R4,SCANBUFF         POINT TO THE QUALIFIER               34380020
         BCTR  R1,R0               DECREMENT FOR EXECUTE                34470020
         EX    R1,MOVEINST         QUALIFIER TO NAME                    34560020
         TM    DFPBCNTL,DFPBRET    RETURN QUALIFIER                     34650020
         BNO   SAVELNTH            NO, GO SAVE LENGTH                   34740020
         L     R8,DFPBQUAL         POINT TO QUALIFIER BUFFER            34830020
         EX    R1,MOVEINST         MOVE QUALIFIER TO BUFFER             34920020
SAVELNTH AH    R1,DSL              ADD DSNAME LENGTH TO QUALIFIER       35010020
         LA    R1,F2(R1)           LENGTH PLUS 2 (PERIOD AND EXECUTE)   35100020
         STH   R1,DSL              SAVE TOTAL LENGTH                    35190020
         B     GOODEND             SUCCESS                              35280020
*  PUT QUALIFIER IN LIST                                                35330001
BLDLIST  MVC   F0(L8,R2),F1(R9)    MOVE DSNAME TO LIST                  35370020
         LA    R11,F1(R11)         BUMP DSNAME COUNT                    35460020
         LA    R2,L8(R2)           BUMP LIST POINTER                    35550020
         CH    R11,MAXNAMES        IS LIST FULL                         35640020
         BE    LISTFULL            SPACE PROBLEM                        35730020
         LA    R9,L9(R9)           BUMP POINTER TO NEXT ENTRY           35820020
         B     TESTLIST            GO CHECK NEXT ENTRY                  35910020
NAMEFND  SR    R5,R5               ZERO REG 5 FOR COMPARE      @YL026YB 35960002
         CLI   DFPBCODE,DFPB0C     IS CODE X'0C'               @YL026YB 36000002
         BE    ZEROCPR             YES,PROCESS X'0C'           @YL026YB 36050002
         CLI   DFPBCODE,DFPB8C     IS CODE X'8C'               @YL026YB 36060002
         BNE   NMEFOUND            NO, CHECK IF NAME FOUND              36090020
ZEROCPR  CR    R11,R5              IS QUALIFIER COUNT ZERO     @YL026YB 36180002
         BE    GETQUAL             YES, GO GET QUAL                     36270020
         B     LISTFULL            NO, GO LIST QUALIFIERS               36360020
GETQUAL  LA    R2,M06              MESSAGE NUMBER 6                     36450020
         LA    R10,DSNMESGL        POINT TO INSERTION                   36540020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     36630020
         BAL   R9,TPUT             GO WRITE MESSAGE                     36720020
         LA    R2,M07              MESSAGE NUMBER 7                     36810020
         LA    R10,DSNMESGL        POINT TO INSERTION                   36900020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     36990020
         LA    R2,S05              SECOND LEVEL MESSAGE 5               37080020
         SR    R10,R10             NO INSERTION                         37170020
         BAL   R14,SMSGBLD         GO BUILD MESSAGE                     37260020
         B     PRMPT               GO PROMT FOR QUALIFIER               37350020
QUALPRMT LA    R2,M05              MESSAGE NUMBER 5                     37440020
         SR    R10,R10             NO INSERTION                         37530020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     37620020
         LA    R2,S04              SECOND LEVEL MESSAGE 4               37710020
         BAL   R14,SMSGBLD         GO BUILD MESSAGE                     37800020
         B     PRMPT               GO PROMT FOR QUALIFIER               37890020
NMEFOUND CR    R11,R5              IS QUALIFIER COUNT ZERO              37980020
         BE    ERROR36             NO DSNAMES                           38070020
         LA    R5,F1               R5 = 1                               38160020
         CR    R11,R5              CHECK IF ONLY ONE QUALIFIER          38250020
         BE    ONEQUAL             IF SO, ADD IT                        38340020
*  FINISHED WITH CIR                                                    38430020
LISTFULL EQU   *                                               @VS07298 38520002
         SR    R0,R0               CLEAR REGISTER                       38610020
         ST    R0,CIRADDR          INDICATE CIR HAS BEEN DELETED        38700020
         CLI   DFPBCODE,DFPB08     IS OPTION X'08'                      38790020
         BE    ERROR32             IF YES, DO NOT PROMPT                38880020
         CLI   DFPBCODE,DFPB88     IS OPTION X'88'             @YL026YB 38930002
         BE    ERROR32             IF YES,DO NOT PROMPT        @YL026YB 38940002
         LA    R2,M01              MESSAGE NUMBER 1                     38970020
         LA    R10,DSNMESGL        POINT TO INSERTION                   39060020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     39150020
         BAL   R9,TPUT             GO WRITE MESSAGE                     39240020
*  NOW MOVE QUALIFIERS TO OUTBUFF.                                      39330020
         LA    R5,QUALLIST         INITIALIZE REG 5 TO FIRST QUALIFIER  39420020
         STH   R11,QUALCNT         SAVE QUALIFIER COUNT                 39510020
SETUP    LA    R8,F4               FOUR QUALIFIERS PER LINE             39600020
         LA    R4,OUTBUFF          POINT TO BUFFER                      39690020
         SR    R1,R1               ZERO REGISTER                        39780020
LOOP     MVC   F0(L8,R4),F0(R5)    MOVE QUALIFIER TO BUFFER             39870020
         MVC   L8(F2,R4),BLANKS    MOVE BLANKS TO BUFFER                39960020
         LA    R1,L10(R1)          BUMP MESSAGE LENGTH                  40050020
         LA    R4,L10(R4)          POINT PAST QUALIFIER AND BLANKS      40140020
         LA    R5,L8(R5)           POINT TO NEXT QUALIFIER              40230020
         BCT   R11,BUFCNTRL        ARE THERE MORE QUALIFIERS            40320020
         B     WRITE               WRITE LINE                           40410020
BUFCNTRL BCT   R8,LOOP             IS BUFFER FULL (4 QUALIFIERS)        40500020
WRITE    LA    R1,F4(R1)           ADD HEADER LENGTH                    40590020
         STH   R1,OUTBUFFL         MESSAGE LENGTH TO BUFFER             40680020
         LA    R2,M12              MESSAGE NUMBER 12                    40770020
         LA    R10,OUTBUFFL        POINT TO INSERTION                   40860020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     40950020
         BAL   R9,TPUT             GO PUT LINE TO TERMINAL              41040020
         LTR   R11,R11             ARE THERE MORE QUALIFIERS            41130020
         BNZ   SETUP               IF SO, GO FILL BUFFER AGAIN          41220020
*  NOW ALL QUALIFIERS HAVE BEEN LISTED, PROMPT USER FOR HIS CHOICE      41310020
         CLI   DFPBCODE,DFPB0C     IS OPTION X'0C'                      41400020
         BE    QUALPRMT            GO PROMPT FOR QUALIFIER              41490020
         CLI   DFPBCODE,DFPB8C     IS OPTION X'8C'             @YL026YB 41540002
         BE    QUALPRMT            GO PROMPT FOR QUALIFIER     @YL026YB 41550002
         LA    R2,M02              MESSAGE NUMBER 2                     41580020
         SR    R10,R10             NO INSERTION                         41670020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     41760020
         LA    R2,S01              SECOND LEVEL MESSAGE 1               41850020
         BAL   R14,SMSGBLD         GO BUILD MESSAGE                     41940020
PRMPT    BAL   R9,TPUTGET          PROMPT TERMINAL USER                 42030020
*  NOW CHECK USERS RESPONSE                                             42120020
RESPONSE LA    R9,PROMPT           POINT TO PUTGET PARAMETER BLOCK      42210020
         L     R9,PGPBIBUF-PGPB(R9) LOAD POINTER TO INPUT BUFFER        42300020
         LA    R1,CSPLPARM         POINT TO CSPL                        42390020
         ST    R9,CSPLCBUF-CSPL(R1) RESPONSE TO CSPL                    42480020
         LINK  EP=IKJSCAN          LINK TO COMMAND SCAN ROUTINE         42570020
         LA    R11,CSOAAREA        POINT TO COMMAND SCAN OUTPUT AREA    42660020
         USING CSOA,R11            ADDRESSABILITY CSOA                  42750020
         MVC   COMFIELD(L8),UPERCASE BLANK COMPARE BUFFER               42840020
         CLI   CSOAFLG,CSOAVWP     IS IT VALID WITH PARAMETERS          42930020
         BE    GOODREP             YES, GOOD RESPONSE                   43020020
         CLI   CSOAFLG,CSOAVNP     IS IT VALID WITHOUT PARAMETERS       43110020
         BNE   BADREP              NO, BAD RESPONSE                     43200020
GOODREP  L     R2,CSOACNM          POINT TO RESPONSE                    43290020
         LH    R8,CSOALNM          LENGTH OF RESPONSE                   43380020
         BCTR  R8,R0               DECREMENT FOR EXECUTE                43470020
         EX    R8,MOVERPLY         USER'S RESPONSE TO COMPARE BUFFER    43560020
         LA    R8,F5(R8)           4 FOR HEADER AND 1 FOR EXECUTE       43650020
         STH   R8,COMFLDL          LENGTH FOR MESSAGE INSERTION         43740020
         DROP  R11                 CSOA NO LONGER NEEDED                43830020
         BAL   R14,FREEBUFF        GO FREE BUFFER                       43920020
         CLI   DFPBCODE,DFPB0C     IS OPTION X'0C'                      44010020
         BE    OKNME               NAME IS OK                           44100020
         CLI   DFPBCODE,DFPB8C     IS OPTION X'8C'             @YL026YB 44150002
         BE    OKNME               NAME IS OK                  @YL026YB 44160002
         LH    R11,QUALCNT         NUMBER OF QUALIFIERS                 44190020
*  INITIALIZE FOR COMPARISON OF RESPONSE TO LIST.                       44280020
         LR    R0,R11              NUMBER OF QUALIFIERS IN REG 0        44370020
         SR    R11,R11             CLEAR REGISTER                       44460020
         LA    R2,QUALLIST         POINT TO QUALLIST                    44550020
COMPARE  CLC   COMFIELD(L8),F0(R2) COMPARE QUALIFIER TO LIST            44640020
         BE    OKNAME              RESPONSE IS FROM LIST                44730020
         LA    R11,F1(R11)         NUMBER OF QUALIFIERS COMPARED        44820020
         CR    R0,R11              ARE THERE MORE QUALIFIERS IN LIST    44910020
         BE    UNLISTED            RESPONSE NOT FROM LIST               45000020
         LA    R2,L8(R2)           POINT TO NEXT QUALIFIER IN LIST      45090020
         B     COMPARE             GO COMPARE NEXT CHARACTER            45180020
OKNAME   MVC   SCANBUFF(L8),F0(R2) USER RESPONSE TO SCANBUFFER          45270020
GOSCAN   BAL   R14,SCANNAME        GO TO SCAN ROUTINE                   45360020
         B     ADDQUAL             NOW ADD QUALIFIER                    45450020
BADREP   LH    R8,F0(R9)           LENGTH OF INPUT BUFFER               45540020
         LA    R1,FOUR             R1 = 4                               45630020
         SR    R8,R1               LESS HEADER LENGTH                   45720020
         LTR   R8,R8               TEST LENGTH                          45810020
         BZ    BADREPLY            ZERO LENGTH IS BAD RESPONSE          45900020
         LA    R1,L8               R1 = 8                               45990020
         CR    R8,R1               IS LENGTH GREATER THAN 8             46080020
         BNH   OKREPLTH            LESS THAN 8 IS OK                    46170020
         LR    R8,R1               SET MAXIMUM LENGTH = 8               46260020
OKREPLTH BCTR  R8,R0               DECREMENT FOR EXECUTE                46350020
         LH    R1,F2(R9)           OFFSET TO RESPONSE                   46440020
         LA    R2,F4(R1,R9)        POINT TO RESPONSE                    46530020
         EX    R8,MOVERPLY         MOVE RESPONSE                        46620020
         BAL   R14,FREEBUFF        GO FREE BUFFER                       46660020
         LA    R8,F1(R8)           ONE FROM EXECUTE                     46670020
BADREPLY LA    R8,F4(R8)           4 FOR HEADER                         46710020
         STH   R8,COMFLDL          LENGTH FOR MESSAGE INSERTION         46800020
UNLISTED LA    R2,M03              MESSAGE NUMBER 3                     46980020
         LA    R10,COMFLDL         POINT TO INSERTION                   47070020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     47160020
         BAL   R9,TPUT             GO WRITE MESSAGE                     47250020
         BAL   R11,MESG4           GO GET MESSAGE 4                     47340020
         CLI   DFPBCODE,DFPB0C     IS OPTION X'0C'                      47430020
         BE    BADRESP             INVALID RESPONSE                     47520020
         CLI   DFPBCODE,DFPB8C     IS OPTION X'8C'             @YL026YB 47570002
         BE    BADRESP             INVALID RESPONSE            @YL026YB 47580002
         LA    R2,S02              SECOND LEVEL MESSAGE 2               47610020
         SR    R10,R10             NO INSERTION                         47700020
         BAL   R14,SMSGBLD         GO BUILD MESSAGE                     47790020
         B     PRMPT               GO PROMPT USER                       47880020
MESG4    LA    R2,M04              MESSAGE NUMBER 4                     47970020
         SR    R10,R10             NO INSERTION                         48060020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     48150020
         BR    R11                 RETURN                               48240020
MESG10   LA    R2,M10              MESSAGE NUMBER 10                    48330020
         LA    R10,DSNMESGL        POINT TO INSERTION                   48420020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     48510020
         BR    R11                 RETURN                               48600020
REUSE    LA    R2,M08              MESSAGE NUMBER 8                     48690020
         LA    R10,DSNMESGL        POINT TO INSERTION                   48780020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     48870020
         BAL   R9,TPUT             GO WRITE MESSAGE                     48960020
         LA    R2,M09              MESSAGE NUMBER 9                     49050020
         SR    R10,R10             NO INSERTION                         49140020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     49180020
         BAL   R9,TPUTGET          GO PROMPT                            49230020
         B     OKMSG               OK TO USE DATA SET                   49320020
OKNME    MVC   SCANBUFF(F8),COMFIELD MOVE NAME TO SCAN BUFFER           49410020
         B     GOSCAN              GO SCAN NAME                         49500020
BADRESP  LA    R2,S03              SECOND LEVEL MESSAGE 3               49590020
         SR    R10,R10             NO INSERTION                         49680020
         BAL   R14,SMSGBLD         GO BUILD MESSAGE                     49770020
         B     PRMPT               GO PROMPT USER                       49860020
*  NOW FREE BUFFER FROM PUTGET                                          49950020
FREEBUFF LH    R11,F0(R9)          GET BUFFER LENGTH                    50040020
         ST    R11,WORKWORD        SAVE BUFFER LENGTH                   50130020
         MVI   WORKWORD,SPN        SUBPOOL NUMBER IN HIGH ORDER BYTE    50220020
         L     R0,WORKWORD         SUBPOOL NUMBER AND LENGTH            50310020
         LR    R1,R9               ADDRESS OF BUFFER                    50400020
         FREEMAIN R,LV=(0),A=(1)   FREE BUFFER                          50490020
         BR    R14                 RETURN                               50580020
*  THIS SECTION DETERMINES THE LENGTH OF NAMES. THE NAME IS IN SCANBUFF 50670020
*  AND THE MAXLENGTH IS 8. THE NINTH BYTE IS BLANK. SCAN STARTS AT      50760020
*  FIRST CHARACTER AND ENDS WHEN A BLANK IS FOUND.  THE LENGTH IS       50850020
*  RETURNED IN REGISTER 1.                                              50940020
SCANNAME SR    R1,R1               CLEAR REGISTER                       51030020
         LA    R8,SCANBUFF         ADDRESS OF SCAN BUFFER               51120020
BLANKTST CLI   F0(R8),BLANK        IS THIS CHARACTER A BLANK            51210020
         BCR   EQ,R14              BLANK ENDS SCAN, RETURN              51300020
         LA    R8,F1(R8)           POINT TO NEXT CHARACTER              51390020
         LA    R1,F1(R1)           BUMP LENGTH COUNT                    51480020
         B     BLANKTST            GO CHECK NEXT CHARACTER              51570020
ENDOFSCN BR    R14                 RETURN                               51660020
*  QUALIFIER SPECIFIED, ADD IT TO DSNAME                                51750020
ADDNAME  MVC   SCANBUFF(L8),F0(R5) MOVE QUALIFIER TO SCAN BUFFER        51840020
         BAL   R14,SCANNAME        GO TO SCAN ROUTINE                   51930020
         LTR   R1,R1               R1 CONTAINS QUALIFIER LENGTH         52020020
         BZ    ERROR28             IF ZERO LENGTH, ERROR                52110020
         LH    R9,DSL              LENGTH OF DSNAME                     52200020
         AR    R9,R1               ADD LENGTH OF QUALIFIER              52290020
         LR    R4,R5               POINT R4 TO QUALIFIER                52380020
         LA    R8,DSNAME           POINT TO DSNAME                      52470020
         AH    R8,DSL              ADD LENGTH, POINT PAST DSNAME        52560020
         TM    SWITCH,SWON         TEST SWITCH, WAS LENGTH ZERO         52650020
         BO    NOPERIOD            YES, DO NOT ADD PERIOD               52740020
         LA    R9,F1(R9)           ADD ONE FOR PERIOD                   52830020
         MVI   F0(R8),PERIOD       MOVE IN A PERIOD                     52920020
         LA    R8,F1(R8)           POINT PAST THE PERIOD                53010020
NOPERIOD CH    R9,DSMAXSZE         COMPARE TOTAL TO 44                  53100020
         BH    LENTHERR            ERROR, LENGTH GT 44                  53190020
         STH   R9,DSL              SAVE TOTAL LENGTH                    53280020
         BCTR  R1,R0               DECREMENT LENGTH FOR EXECUTE         53370020
         EX    R1,MOVEINST         MOVE QUALIFIER TO NAME               53460020
         MVC   F0(L46,R3),DSL      MOVE QUALIFIED NAME TO USER'S AREA   53550020
         B     CALCIR              YES, CIR ALREADY LOADED     @YL026YB 53610002
*                                                                       53730020
*  THIS IS THE MESSAGE BUILD SUBROUTINE.  IT ACCESSES THE MESSAGE CSECT 53820020
*  TO OBTAIN THE ADDRESS OF THE MESSAGE SEGMENT AND THE OFFSET AT WHICH 53910020
*  ANY INSERTIONS WILL BE MADE.                                         54000020
*  AT ENTRY R2 CONTAINS MESSAGE NUMBER AND R10 CONTAINS ADDRESS OF THE  54090020
*  INSERTION.  R14 IS THE RETURN REGISTER  (R10 = 0 IS NO INSERTION)    54180020
*                                                                       54270020
MSGBUILD SR    R3,R3               ZERO REGISTER                        54360020
         ST    R3,OUTAREA1         SET POINTER INDICATING ONE MESSAGE   54450020
         MVI   OUTAREA1,ENDTEST    FLAG END OF MESSAGE CHAIN            54540020
         L     R1,VCONMSG          ADDRESS OF MESSAGE BRANCH TABLE      54630020
         BCTR  R2,R0               DECREMENT MESSAGE NUMBER             54720020
         SLL   R2,TWO              MULTIPLY MESSAGE NUMBER BY 4         54810020
         L     R3,F0(R2,R1)        LOAD BRANCH TABLE ENTRY              54900020
         ST    R3,WORKWORD         SAVE THIS ENTRY                      54990020
         LA    R3,F0(R3)           CLEAR HIGH ORDER BYTE                55080020
         ST    R3,OUTPUT11         MESSAGE ADDRESS TO OUTPUT LIST       55170020
         LTR   R10,R10             IS THERE AN INSERTION                55260020
         BZ    NOINSRT1            NO, GO SET SEGMENT COUNT TO 1        55350020
         SR    R2,R2               ZERO REGISTER                        55440020
         IC    R2,WORKWORD         GET OFFSET FOR INSERTION             55530020
         STH   R2,F2(R10)          STORE OFFSET IN MESSAGE OFFSET FIELD 55620020
         ST    R10,OUTPUT12        INSERTION ADDRESS TO OUTPUT LIST     55710020
         LA    R2,TWO              2 SEGMENTS                           55800020
SETCNT1  ST    R2,OUTCNT1          SET SEGMENT COUNT                    55890020
         BR    R14                 RETURN                               55980020
NOINSRT1 LA    R2,ONE              ONE SEGMENT                          56070020
         B     SETCNT1             GO SET SEGMENT COUNT                 56160020
*                                                                       56250020
*  THIS IS THE SECOND LEVEL MESSAGE BUILD SUBROUTINE.  IT ACCESSES THE  56340020
*  MESSAGE CSECT TO OBTAIN THE ADDRESS OF THE SECOND LEVEL MESSAGE AND  56430020
*  THE OFFSET AT WHICH ANY INSERTIONS WILL BE MADE.                     56520020
*  AT ENTRY R2 CONTAINS SECOND LEVEL MESSAGE NUMBER AND R10 CONTAINS    56610020
*  ADDRESS OF THE INSERTION.  R14 IS THE RETURN REGISTER.  (R10 = 0 IS  56700020
*  NO INSERTION                                                         56790020
*                                                                       56880020
SMSGBLD  SR    R3,R3               ZERO REGISTER                        56970020
         ST    R3,OUTAREA2         SET POINTER INDICATING LAST MESSAGE  57060020
         MVI   OUTAREA2,ENDTEST    FLAG END OF MESSAGE CHAIN            57150020
         LA    R3,OUTAREA2         POINT TO SECOND LEVEL MESSAGE CHAIN  57240020
         ST    R3,OUTAREA1         CHAIN SECOND LEVEL TO FIRST LEVEL    57330020
         L     R1,VCONSMSG         SECOND LEVEL MESSAGE BRANCH TABLE    57420020
         BCTR  R2,R0               DECREMENT MESSAGE NUMBER             57510020
         SLL   R2,TWO              MULTIPLY MESSAGE NUMBER BY 4         57600020
         L     R3,F0(R2,R1)        LOAD BRANCH TABLE ENTRY              57690020
         ST    R3,WORKWORD         SAVE THIS ENTRY                      57780020
         LA    R3,F0(R3)           CLEAR HIGH ORDER BYTE                57870020
         ST    R3,OUTPUT21         MESSAGE ADDRESS TO OUTPUT LIST       57960020
         LTR   R10,R10             IS THERE AN INSERTION                58050020
         BZ    NOINSRT2            NO, GO SET SEGMENT COUNT TO 1        58140020
         SR    R2,R2               ZERO REGISTER                        58230020
         IC    R2,WORKWORD         GET OFFSET FOR INSERTION             58320020
         STH   R2,F2(R10)          STORE OFFSET IN MESSAGE OFFSET FIELD 58410020
         ST    R10,OUTPUT22        INSERTION ADDRESS TO OUTPUT LIST     58500020
         LA    R2,TWO              2 SEGMENTS                           58590020
SETCNT2  ST    R2,OUTCNT2          SET SEGMENT COUNT                    58680020
         BR    R14                 RETURN                               58770020
NOINSRT2 LA    R2,ONE              ONE SEGMENT                          58860020
         B     SETCNT2             GO SET SEGMENT COUNT                 58950020
*  CONVERT RETURN CODE, SUPPRESS LEADING ZEROS AND MOVE TO INSERTION    59040020
*  BUFFER.  INPUT - R15 CONTAINS RETURN CODE TO BE CONVERTED            59130020
*           OUTPUT - R10 POINTS TO INSERTION BUFFER                     59220020
*  R2 IS THE RETURN REGISTER                                            59310020
CONVRTRC CVD   R15,UNPACK          CONVERT TO PACKED DECIMAL FORMAT     59400020
         UNPK  COUNT,UNPACK        CONVERT TO ZONED FORMAT              59490020
         OI    SIGNBYTE,ZONE       ZONE OVER SIGN                       59580020
*  SUPPRESS LEADING ZEROS IN RETURN CODE                                59670020
         LA    R4,COUNT            POINT TO COUNT BUFFER                59760020
         LA    R5,F7               R5 = 7                               59850020
SUPPZERO CLI   F0(R4),FOXZERO      IS THIS LEADING ZERO                 59940020
         BNE   NOTZERO             NO, GO MOVE RETURN CODE              60030020
         LA    R4,F1(R4)           YES, POINT TO NEXT DIGIT             60120020
         BCT   R5,SUPPZERO         GO CHECK NEXT DIGIT                  60210020
NOTZERO  LA    R5,ENDCOUNT         POINT PAST COUNT BUFFER              60300020
         SR    R5,R4               NUMBER OF SIGNIFICANT DIGITS IN R5   60390020
         BCTR  R5,R0               DECREMENT FOR EXECUTE                60480020
         LA    R8,RCMESG           POINT TO RETURN CODE BUFFER          60570020
         EX    R5,MOVEINST         MOVE RETURN CODE TO INSERTION BUFFER 60660020
         LA    R5,F5(R5)           4 FOR HEADER AND 1 FOR EXECUTE       60750020
         STH   R5,RCMESGL          LENGTH OF RETURN CODE INSERTION      60840020
         LA    R10,RCMESGL         POINT TO INSERTION BUFFER            60930020
         BR    R2                  RETURN                               61020020
*  THIS ROUTINE CHECKS FOR ATTENTION INTERRUPT                          61110020
TESTATTN LA    R4,ECBADDR          POINT TO CP'S ECB                    61200020
         TM    F0(R4),MASK1        IS ECB POSTED (DID ATTENTION OCCUR)  61290020
         BO    INTERUPT            YES, SET RC, CLEANUP AND RETURN      61380020
         BR    R14                 RETURN                               61470020
*  THIS ROUTINE WRITES A LINE TO THE TERMINAL.                          61560020
*  REG 9 IS THE RETURN REGISTER.                                        61650020
TPUT     LA    R1,IOPARM           POINT TO IO PARAMETERS               61740020
         PUTLINE PARM=PUT,OUTPUT=(OUTAREA1,MULTLVL),MF=(E,(1)),        X61830020
               TERMPUT=(EDIT,WAIT) WRITE A LINE                         61920020
         LTR   R15,R15             TEST RETURN CODE                     62010020
         BZ    OKPUT               OK, RETURN                           62100020
         LA    R4,RC4              R4 = 4                               62190020
TESTRC   CR    R15,R4              DID AN INTERUPT OCCUR                62280020
         BE    INTERUPT            HANDLE INTERUPT                      62370020
         BAL   R11,MESG10          GO GET MESSAGE 10                    62460020
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERTION         62550020
         LA    R2,S06              SECOND LEVEL MESSAGE 6               62640020
         BAL   R14,SMSGBLD         GO BUILD MESSAGE                     62730020
         BAL   R9,TPUT             GO WRITE MESSAGE                     62820020
         B     ERROR4              GO SET RETURN CODE                   62910020
OKPUT    BR    R9                  RETURN                               63000020
*  THIS  ROUTINE PROMPTS THE TERMINAL USER.                             63090020
*  REG 9 IS THE RETURN REGISTER                                         63180020
TPUTGET  LA    R1,IOPARM           POINT TO IO PARAMETERS               63270020
         PUTGET PARM=PROMPT,OUTPUT=(OUTAREA1,MULTLVL),MF=(E,(1)),      X63360020
               TERMPUT=(ASIS,WAIT),TERMGET=(EDIT,WAIT) PROMPT           63450020
         LTR   R15,R15             TEST RETURN CODE                     63540020
         BZ    OKPUT               OK, RETURN                           63630020
         LA    R4,RC4              UNABLE TO PROMPT RETURN CODE         63720020
         CR    R15,R4              UNABLE TO PROMPT                     63810020
         BE    CANTPRMT            YES, CAN NOT PROMPT                  63900020
         LA    R4,RC8              R4 = 8                               63990020
         CR    R15,R4              DID ATTENTION OCCUR                  64080020
         BE    INTERUPT            YES, PROCESS INTERRUPT               64170020
         BAL   R11,MESG10          GO GET MESSAGE 10                    64260020
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERTION         64350020
         LA    R2,S07              SECOND LEVEL MESSAGE 7               64440020
         BAL   R14,SMSGBLD         GO BUILD MESSAGE                     64530020
         BAL   R9,TPUT             GO WRITE MESSAGE                     64620020
         B     ERROR4              GO SET RETURN CODE                   64710020
GOODEND  L     R3,DFPBDSN          POINT TO DSNAME BUFFER               64770020
         MVC   F0(L46,R3),DSL      MOVE QUALIFIED NAME TO USER'S AREA   64830020
OKMSG    SR    R15,R15             SET RETURN CODE TO 0                 64890020
         B     CLEANUP             GO RESTORE                           64980020
LENTHERR LA    R15,RC8             SET RETURN CODE TO 8                 65070020
         B     CLEANUP             GO RESTORE                           65160020
CANTPRMT LA    R2,M11              MESSAGE NUMBER 11                    65250020
         LA    R10,DSNMESGL        POINT TO INSERTION                   65340020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     65430020
         BAL   R9,TPUT             GO WRITE MESSAGE                     65520020
ERROR4   LA    R15,RC4             SET RETURN CODE TO 4                 65610020
         B     CLEANUP             GO RESTORE                           65700020
CIRERROR MVC   DFPBLORC(F1),CIRLOCRC SAVE LOCATE RETURN CODE            65790002
         CLI   CIRLOCRC,LOCMSK8    CHECK FOR LOCATE RC = 8              65880002
         BE    ERROR20             YES, SET RETURN CODE = 20            65970020
         CLI   CIRLOCRC,LOCMSK16    CHECK FOR LOCATE RC = 16            66060002
         BE    ERROR16             YES, SET RETURN CODE = 16            66150020
         SR    R15,R15             CLEAR REGISTER                       66240020
         IC    R15,CIRLOCRC        LOAD LOCATE RETURN CODE              66330002
         BAL   R11,MESG10          GO GET MESSAGE 10                    66420020
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERTION         66510020
         LA    R2,S08              SECOND LEVEL MESSAGE 8               66600020
         BAL   R9,TPUT             GO WRITE MESSAGE                     66690020
ERROR12  LA    R15,RC12            SET RETURN CODE TO 12                66780020
         B     CLEANUP             GO RESTORE                           66870020
ERROR16  LA    R15,RC16            SET RETURN CODE TO 16                66960020
         B     CLEANUP             GO RESTORE                           67050020
ERROR20  LA    R15,RC20            SET RETURN CODE TO 20                67140020
         CLI   DFPBCODE,DFPB0C     IS OPTION X'0C'                      67170020
         BE    GOODEND             YES, NAME NOT FOUND IS OKAY          67200020
         CLI   DFPBCODE,DFPB8C     IS OPTION X'8C'             @YL026YB 67210002
         BE    GOODEND             YES,NAME NOT FOUND IS OKAY  @YL026YB 67220002
         B     CLEANUP             GO RESTORE                           67230020
ERROR28  LA    R15,RC28            SET RETURN CODE TO 28                67320020
         B     CLEANUP             GO RESTORE                           67410020
ERROR32  LA    R15,RC32            SET RETURN CODE = 32                 67500020
         B     CLEANUP             GO RESTORE                           67590020
ERROR36  LA    R15,RC36            SET RETURN CODE TO 36                67680020
         B     CLEANUP             GO RESTORE                           67770020
INTERUPT LA    R15,RC24            SET RETURN CODE = 24                 67860020
         B     WRAPUP              GO FREE CORE AND LOAD MODULES        67950020
*  CLEAN UP ROUTINE                                                     68040020
CLEANUP  BAL   R14,TESTATTN        CHECK FOR INTERRUPT                  68130020
WRAPUP   LR    R2,R15              SAVE RETURN CODE IN REGISTER 2       68310002
         LH    R0,MINMAX           POINT TO GETMAIN PARAMETER  @YL026YB 68590002
         O     R0,SUBPL1           SET SUBPOOL NUMBER          @YL026YB 68600002
         L     R1,WKAR1PTR         CIR WORKAREA                @YL026YB 68610002
         FREEMAIN R,LV=(0),A=(1)         FREE CORE             @YL026YB 68630002
         L     R3,F4(R13)          REGISTER 3 POINTS TO CALLER'S REGS   68632002
         LR    R1,R13              REGISTER 1 = CORE TO BE FREED        68634002
         FREEMAIN R,LV=CORE,A=(1),SP=SPN  FREE CORE                     68636002
         LR    R15,R2              RC BACK TO REGISTER 15               68640002
         LR    R13,R3              REGISTER 13 POINTS TO CALLER'S REGS  68650002
         RETURN (14,12),T,RC=(15)  RESTORE REGISTERS AND RETURN         68660002
         EJECT                                                          69210020
*  CONSTANTS                                                            69300020
         DS    0H                  HALF WORD BOUNDRY           @YL026YB 69310002
MINMAX   DC    H'5000'             MAXIMUM AMOUNT FOR WORKAREA @YL026YB 69360002
BLANKS   DC    C'  '               TWO BLANKS FOR MESSAGE SPACING       69390020
MAXNAMES DC    H'25'               MAXIMUM QUALIFIERS SUPPORTED         69480020
DSMAXSZE DC    H'44'               MAXIMUM DATA SET LENGTH              69570020
UNO      DC    H'1'                NUMBER OF CALLS TO CIR               69580002
         DS    0F                  ALIGN ON FULLWORD BOUNDRY   @YL026YB 69620002
SUBPL1   DC    X'01000000'         SUBPOOL NUMBER              @YL026YB 69630002
MOVEINST MVC   F0(F0,R8),F0(R4)    MOVE INSTRUCTION FOR EXECUTE         69660020
MOVEID   MVC   F0(F0,R8),F0(R2)    USED TO MOVE USERID                  69750020
MOVERPLY MVC   COMFIELD(F0),F0(R2) USED TO MOVE USER'S RESPONSE         69840020
DSNINSRT MVC   DSNMESG(F0),F2(R3)  MOVE DSNAME TO INSERTION BUFFER      69930020
UPERCASE DC    CL8' '              USED TO CONVERT RESPONSE             70020020
VCONMSG  DC    V(IKJEHMSG)         ENTRY MESSAGE CSECT 1ST LEVEL        70110020
VCONSMSG DC    V(IKJEHSMG)         ENTRY MESSAGE CSECT 2ND LEVEL        70200020
VCONCIR  DC    V(IKJEHCIR)         ENTRY MESSAGE FOR CIR       @YL026YB 70250002
PUTL     PUTLINE  MF=L             LIST FORM OF PUTLINE                 70290020
PUTLEND  EQU   *                   END OF PUTGET EXPANSION              70380020
PRMPT1   PUTGET  MF=L              LIST FORM OF PUTGET                  70470020
PRMPTEND EQU   *                   END OF PUTGET EXPANSION              70560020
         EJECT                                                          70650020
*  MAPPING MACROS                                                       70740020
         SPACE                                                          70830020
         IKJDFPL                                                        70920020
         IKJDFPB                                                        71010020
         IKJPSCB                                                        71100020
         IKJUPT                                                @YL026YB 71150002
         IKJCSPL                                                        71190020
LCSPL    EQU   *-CSPL              LENGTH OF CSPL                       71280020
         IKJCSOA                                                        71370020
LCSOA    EQU   *-CSOA              LENGTH OF CSOA                       71460020
         IKJIOPL                                                        71550020
LIOPL    EQU   *-IOPL              LENGTH OF IOPL                       71640020
         IKJPGPB                                                        71730020
         EJECT                                                          71820020
WORKAREA DSECT                                                          71910020
SAVEAREA DS    18F                 REGISTER SAVE AREA                   72000020
UNPACK   DS    D                   WORKAREA FOR CVD                     72090020
COUNT    DS    D                   WORKAREA FOR UNPACK                  72180020
         ORG   COUNT+F7            BACK TO LAST BYTE OF COUNT FIELD     72270020
SIGNBYTE DS    CL1                 LABEL SIGN BYTE                      72360020
         ORG                                                            72450020
ENDCOUNT EQU   *                   END OF COUNT FIELD                   72540020
CIRADDR  DS    F                   ADDRESS OF CIR                       72630020
WORKWORD DS    F                   WORD BOUNDRY WORK WORD               72720020
FLAGWORD DS    F                   FLAG WORD FOR COMMAND SCAN           72810020
ECBADDR  DS    F                   SAVE ECB ADDRESS HERE                72900020
UPTSAV   DS    F                   SAVE UPT ADDRESS            @YL026YB 72950002
*  CIR PARAMETER LIST                                                   72990020
CIRPARM  DS    0F                  CIR PRARMETER LIST          @YL026YB 73080002
CIROPT   DS    CL1                 CIR OPTION                  @YL026YB 73130002
         DS    CL2                 RESERVED                    @YL026YB 73140002
CIRLOCRC DS    CL1                 LOCATE RETURN CODE          @YL026YB 73150002
NAMETTR  DS    F                   POINTER TO DSNAME OR TTR             73170020
CVOLIDPT DS    F                   POINTER TO CVOLID                    73260020
WKAR1PTR DS    F                   POINTER TO FIRST CIR WORKAREA        73350020
WKAR2PTR DS    F                   POINTER TO SECOND CIR WORKAREA       73440020
PASSPTR  DS    F                   POINTER TO PASSWORD         @YL026YB 73490002
*  END OF CIR PARAMETER LIST                                            73530020
WKAREA2  DS    18F                 SECOND CIR WORKAREA                  73620020
QUALLIST DS    50F                 SPACE TO BUILD LIST OF QUALIFIERS    73710020
PUT      PUTLINE MF=L              LIST FORM OF PUTLINE                 73800020
PROMPT   PUTGET MF=L               LIST FORM OF PUTGET                  73890020
         DS    0F                  ALIGN WORD BOUNDRY                   73980020
IOPARM   DS    (LIOPL)X            SPACE FOR I/O PARAMETER LIST         74070020
         DS    0F                  ALIGN WORD BOUNDRY                   74160020
CSPLPARM DS    (LCSPL)X            SPACE FOR COMMAND SCAN PARM LIST     74250020
         DS    0F                  ALIGN WORD BOUNDRY                   74340020
CSOAAREA DS    (LCSOA)X            SPACE FOR COMMAND SCAN OUTPUT AREA   74430020
*  THE FOLLOWING IS RESERVED SPACE FOR OUTPUT CHAINS                    74520020
OUTAREA1 DS    F                   MESSAGE CHAIN POINTER                74610020
OUTCNT1  DS    F                   MESSAGE SEGMENT COUNT                74700020
OUTPUT11 DS    F                   POINTER TO MESSAGE SEGMENT           74790020
OUTPUT12 DS    F                   POINTER TO MESSAGE INSERTION         74880020
OUTAREA2 DS    F                   MESSAGE CHAIN POINTER                74970020
OUTCNT2  DS    F                   MESSAGE SEGMENT COUNT                75060020
OUTPUT21 DS    F                   POINTER TO MESSAGE SEGMENT           75150020
OUTPUT22 DS    F                   POINTER TO MESSAGE INSERTION         75240020
*  DATA SET NAME FOR MESSAGES STORED HERE                               75330020
DSNMESGL DS    H                   DATA SET LENGTH                      75420020
DSNMESGO DS    H                   OFFSET                               75510020
DSNMESG  DS    CL52                DATA SET NAME                        75600020
*  RETURN CODES FOR MESSAGES STORED HERE                                75690020
RCMESGL  DS    H                   RETURN CODE LENGTH                   75780020
RCMESGO  DS    H                   OFFSET                               75870020
RCMESG   DS    CL4                 RETURN CODE                          75960020
*  OUTPUT BUFFER FOR QUALIFIERS                                         76050020
OUTBUFFL DS    H                   LENGTH OF OUTBUFF                    76140020
OUTBUFFO DS    H                   OFFSET                               76230020
OUTBUFF  DS    CL40                OUTBUFF                              76320020
*  COMPARE FIELD FOR USER'S RESPONSE                                    76410020
COMFLDL  DS    H                   LENGTH OF RESPONSE                   76500020
COMFLDO  DS    H                   OFFSET OF RESPONSE                   76590020
COMFIELD DS    CL8                 COMPARE BUFFER                       76680020
CVOLID   DS    CL44                CONTROL VOLUME ID           @YL026YB 76950002
PASSWKD  DS    CL8                 PASSWORD BUFFER             @YL026YB 77040002
SCANBUFF DS    CL9                 SCAN BUFFER                          77130020
SWITCH   DS    CL1                 SET ON WHEN DSLENGTH IS ZERO         77220020
TESTBYTE DS    CL1                 BYTE FOR TESTING                     77310020
ADDSW    DS    CL1                 INDICATE SPECIFIED QUALIFIER ADDED   77360020
OPTSW    DS    CL1                 INDICATE NO CORE AVAILABLE  @YL026YB 77370002
         DS    0H                  ALIGN HALF WORD BOUNDRY              77400020
DSL      DS    CL2                 DATA SET LENGTH                      77490020
DSNAME   DS    CL44                DATA SET NAME BUFFER                 77580020
QUALCNT  DS    H                   NUMBER OF QUALIFIERS FOUND           77670020
CORE     EQU   *-WORKAREA          SIZE OF GETMAIN AREA                 77760020
         EJECT                                                          77850020
IKJEHMSG CSECT                                                          77940020
         ENTRY IKJEHSMG                                                 78030020
*********************************************************************** 78120020
*                                                                     * 78210020
*  THIS CONTROL SECTION CONTAINS THE MESSAGE TEXT (BOTH FIRST AND     * 78300020
*  SECOND LEVEL).  IT CONTAINS A BRANCH TABLE FOR FIRST LEVEL MESSAGES* 78390020
*  AND A BRANCH TABLE FOR SECOND LEVEL MESSAGES.  EACH BRANCH TABLE   * 78480020
*  ENTRY IS COMPOSED OF A ONE BYTE OFFSET FIELD FOR MESSAGE INSERTIONS* 78570020
*  AND A THREE BYTE ADDRESS OF THE MESSAGE.  THE MESSAGE BUILDER      * 78660020
*  ROUTINES COMBINE THE ADDRESS OF THE CONTROL SECTION AND THE ADDRESS* 78750020
*  OF THE MESSAGE TO GET THE TRUE ADDRESS OF THE MESSAGE.  THE OFFSET * 78840020
*  IS PLACED IN THE INSERTION SEGMENT.                                * 78930020
*  EACH MESSAGE IS COMPOSED OF A 4 BYTE HEADER (2 BYTE LENGTH OF      * 79020020
*  MESSAGE INCLUDING HEADER LENGTH AND A 2 BYTE OFFSET FIELD)         * 79110020
*  FOLLOWED BY THE MESSAGE TEXT.                                      * 79200020
*                                                                     * 79290020
*********************************************************************** 79380020
         SPACE                                                          79470020
*  EQUATES USED IN THIS CONTROL SECTION                                 79560020
HDR      EQU   4                   HEADER LENGTH (2 BYTES EACH, LENGTH  79650020
*                                  AND OFFSET FIELDS) EACH SEGMENT      79740020
OFST     EQU   0                   INSERTION OFFSET 1ST MESSAGE SEGMENT 79830020
*  OFFSETS FOR FIRST LEVEL MESSAGE INSERTIONS                           79920020
OFST01   EQU   34                  INSERTION OFFSET MESSAGE 01          80010020
OFST02   EQU   0                   INSERTION OFFSET MESSAGE 02          80100020
OFST03   EQU   28                  INSERTION OFFSET MESSAGE 03          80190020
OFST04   EQU   0                   INSERTION OFFSET MESSAGE 04          80280020
OFST05   EQU   0                   INSERTION OFFSET MESSAGE 05          80370020
OFST06   EQU   24                  INSERTION OFFSET MESSAGE 06          80460020
OFST07   EQU   30                  INSERTION OFFSET MESSAGE 07          80550020
OFST08   EQU   19                  INSERTION OFFSET MESSAGE 08          80640020
OFST09   EQU   0                   INSERTION OFFSET MESSAGE 09          80730020
OFST10   EQU   24                  INSERTION OFFSET MESSAGE 10          80820020
OFST11   EQU   24                  INSERTION OFFSET MESSAGE 11          80910020
OFST12   EQU   10                  INSERTION OFFSET MESSAGE 12          81000020
*  OFFSETS FOR SECOND LEVEL MESSAGE INSERTIONS                          81090020
*  NOTE-  THERE ARE CURRENTLY NO INSERTIONS IN MOST SECOND LEVEL        81180020
*  MESSAGES.  A COMMON OFFSET OF ZERO IS USED.                          81270020
OFSTSMSG EQU   0                   INSERTION OFFSET 2ND LEVEL MESSAGES  81360020
OFSTSM06 EQU   29                  INSERTION OFFSET SECOND LEVEL MSG 06 81450020
OFSTSM07 EQU   28                  INSERTION OFFSET SECOND LEVEL MSG 07 81540020
OFSTSM08 EQU   28                  INSERTION OFFSET SECOND LEVEL MSG 08 81630020
OFSTSM09 EQU   29                  INSERT. OFFST 2ND LVL MSG 9 @YL026YB 81680002
         SPACE                                                          81720020
AMSG01   DC    AL1(OFST01)         INSERTION OFFSET                     81810020
         DC    AL3(LMSG01)         MESSAGE ADDRESS                      81900020
AMSG02   DC    AL1(OFST02)         INSERTION OFFSET                     81990020
         DC    AL3(LMSG02)         MESSAGE ADDRESS                      82080020
AMSG03   DC    AL1(OFST03)         INSERTION OFFSET                     82170020
         DC    AL3(LMSG03)         MESSAGE ADDRESS                      82260020
AMSG04   DC    AL1(OFST04)         INSERTION OFFSET                     82350020
         DC    AL3(LMSG04)         MESSAGE ADDRESS                      82440020
AMSG05   DC    AL1(OFST05)         INSERTION OFFSET                     82530020
         DC    AL3(LMSG05)         MESSAGE ADDRESS                      82620020
AMSG06   DC    AL1(OFST06)         INSERTION OFFSET                     82710020
         DC    AL3(LMSG06)         MESSAGE ADDRESS                      82800020
AMSG07   DC    AL1(OFST07)         INSERTION OFFSET                     82890020
         DC    AL3(LMSG07)         MESSAGE ADDRESS                      82980020
AMSG08   DC    AL1(OFST08)         INSERTION OFFSET                     83070020
         DC    AL3(LMSG08)         MESSAGE ADDRESS                      83160020
AMSG09   DC    AL1(OFST09)         INSERTION OFFSET                     83250020
         DC    AL3(LMSG09)         MESSAGE ADDRESS                      83340020
AMSG10   DC    AL1(OFST10)         INSERTION OFFSET                     83430020
         DC    AL3(LMSG10)         MESSAGE ADDRESS                      83520020
AMSG11   DC    AL1(OFST11)         INSERTION OFFSET                     83610020
         DC    AL3(LMSG11)         MESSAGE ADDRESS                      83700020
AMSG12   DC    AL1(OFST12)         INSERTION OFFSET                     83790020
         DC    AL3(LMSG12)         MESSAGE ADDRESS                      83880020
*  FIRST LEVEL MESSAGES                                                 83970020
LMSG01   DC    AL2(L'MSG01+HDR)                                         84060020
         DC    AL2(OFST)                                                84150020
MSG01    DC    C'IKJ58600I QUALIFIERS FOR DATA SET  ARE'                84240020
LMSG02   DC    AL2(L'MSG02+HDR)                                         84330020
         DC    AL2(OFST)                                                84420020
MSG02    DC    C'IKJ58601A ENTER QUALIFIER-'                            84510020
LMSG03   DC    AL2(L'MSG03+HDR)                                         84600020
         DC    AL2(OFST)                                                84690020
MSG03    DC    C'IKJ58602I INVALID QUALIFIER '                          84780020
LMSG04   DC    AL2(L'MSG04+HDR)                                         84870020
         DC    AL2(OFST)                                                84960020
MSG04    DC    C'IKJ58603A REENTER-'                                    85050020
LMSG05   DC    AL2(L'MSG05+HDR)                                         85140020
         DC    AL2(OFST)                                                85230020
MSG05    DC    C'IKJ58604A ENTER OLD OR NEW QUALIFIER-'                 85320020
LMSG06   DC    AL2(L'MSG06+HDR)                                         85410020
         DC    AL2(OFST)                                                85500020
MSG06    DC    C'IKJ58605I DATA SET NAME  NOT COMPLETE'                 85590020
LMSG07   DC    AL2(L'MSG07+HDR)                                         85680020
         DC    AL2(OFST)                                                85770020
MSG07    DC    C'IKJ58606A ENTER QUALIFIER FOR -'                       85860020
LMSG08   DC    AL2(L'MSG08+HDR)                                         85950020
         DC    AL2(OFST)                                                86040020
MSG08    DC    C'IKJ58607I DATA SET  IS ABOUT TO BE REUSED'             86130020
LMSG09   DC    AL2(L'MSG09+HDR)                                         86220020
         DC    AL2(OFST)                                                86310020
MSG09    DC    C'IKJ58608A ENTER CARRIER RETURN TO CONTINUE OR ATTENTIOX86400020
               N TO RESPECIFY COMMAND-'                                 86490020
LMSG10   DC    AL2(L'MSG10+HDR)                                         86580020
         DC    AL2(OFST)                                                86670020
MSG10    DC    C'IKJ58609I DATA SET NAME  CANNOT BE RESOLVED, SYSTEM ERX86760020
               ROR+'                                                    86850020
LMSG11   DC    AL2(L'MSG11+HDR)                                         86940020
         DC    AL2(OFST)                                                87030020
MSG11    DC    C'IKJ58610I DATA SET NAME  NOT FULLY QUALIFIED'          87120020
LMSG12   DC    AL2(L'MSG12+HDR)                                         87210020
         DC    AL2(OFST)                                                87300020
MSG12    DC    C'IKJ58600I '                                            87390020
*  SECOND LEVEL MESSAGE BRANCH TABLE                                    87480020
IKJEHSMG DS    0F                  SECOND LEVEL MESSAGE BRANCH TABLE    87570020
ASMSG01  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     87660020
         DC    AL3(LSMSG01)        MESSAGE ADDRESS                      87750020
ASMSG02  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     87840020
         DC    AL3(LSMSG02)        MESSAGE ADDRESS                      87930020
ASMSG03  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     88020020
         DC    AL3(LSMSG03)        MESSAGE ADDRESS                      88110020
ASMSG04  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     88200020
         DC    AL3(LSMSG04)        MESSAGE ADDRESS                      88290020
ASMSG05  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     88380020
         DC    AL3(LSMSG05)        MESSAGE ADDRESS                      88470020
ASMSG06  DC    AL1(OFSTSM06)       INSERTION OFFSET                     88560020
         DC    AL3(LSMSG06)        MESSAGE ADDRESS                      88650020
ASMSG07  DC    AL1(OFSTSM07)       INSERTION OFFSET                     88740020
         DC    AL3(LSMSG07)        MESSAGE ADDRESS                      88830020
ASMSG08  DC    AL1(OFSTSM08)       INSERTION OFFSET                     88920020
         DC    AL3(LSMSG08)        MESSAGE ADDRESS                      89010020
ASMSG09  DC    AL1(OFSTSM09)       INSERTION OFFSET            @YL026YB 89060002
         DC    AL3(LSMSG09)        MESSAGE ADDRESS             @YL026YB 89070002
*  SECOND LEVEL MESSAGES                                                89100020
LSMSG01  DC    AL2(L'SMSG01+HDR)                                        89190020
         DC    AL2(OFST)                                                89280020
SMSG01   DC    C'IKJ58601A DATA SET NAME WAS NOT FULLY QUALIFIED.  ENTEX89460020
               R DESIRED QUALIFIER FROM ABOVE LIST-'                    89550020
LSMSG02  DC    AL2(L'SMSG02+HDR)                                        89640020
         DC    AL2(OFST)                                                89730020
SMSG02   DC    C'IKJ58603A ONLY QUALIFIERS LISTED ARE VALID QUALIFIERS X89820020
               FOR THIS DATA SET NAME.  REENTER DESIRED QUALIFIER FROM X89910020
               ABOVE LIST-'                                             90000020
LSMSG03  DC    AL2(L'SMSG03+HDR)                                        90090020
         DC    AL2(OFST)                                                90180020
SMSG03   DC    C'IKJ58603A QUALIFIERS CONTAIN FROM 1 TO 8 ALPHANUMERIC X90270020
               CHARACTERS.  REENTER-'                                   90360020
LSMSG04  DC    AL2(L'SMSG04+HDR)                                        90450020
         DC    AL2(OFST)                                                90540020
SMSG04   DC    C'IKJ58604A DATA SET NAME WAS NOT FULLY QUALIFIED.  ENTEX90630020
               R NEW QUALIFIER OR ONE FROM ABOVE LIST-'                 90720020
LSMSG05  DC    AL2(L'SMSG05+HDR)                                        90810020
         DC    AL2(OFST)                                                90900020
SMSG05   DC    C'IKJ58606A DATA SET NAME WAS NOT FULLY QUALIFIED.  ENTEX90990020
               R NEW QUALIFIER-'                                        91080020
LSMSG06  DC    AL2(L'SMSG06+HDR)                                        91170020
         DC    AL2(OFST)                                                91260020
SMSG06   DC    C'IKJ58609I PUTLINE ERROR CODE '                         91350020
LSMSG07  DC    AL2(L'SMSG07+HDR)                                        91440020
         DC    AL2(OFST)                                                91530020
SMSG07   DC    C'IKJ58609I PUTGET ERROR CODE '                          91620020
LSMSG08  DC    AL2(L'SMSG08+HDR)                                        91710020
         DC    AL2(OFST)                                                91800020
SMSG08   DC    C'IKJ58609I LOCATE ERROR CODE '                          91890020
LSMSG09  DC    AL2(L'SMSG09+HDR)                               @YL026YB 91940002
         DC    AL2(OFST)                                       @YL026YB 91950002
SMSG09   DC    C'IKJ58609I GETMAIN ERROR CODE '                @YL026YB 91960002
         END                                                            91980020
./  ADD  SSI=61190373,NAME=IKJEHDS1
         TITLE 'IKJEHDS1-IBM TIME SHARING LISTDS COMMAND'               00030003
IKJEHDS1 CSECT                                                          00040021
*         VS2 -3.0 SERVICE UPDATE                      PTF#     APAR#   00043403
*0000116620,312400,738840                             UZ03988  @ZA10244 00043603
*0000116200,192201,239801-239802,239900-241100        UZ03988  @ZA09142 00043803
*0000116200,579750,579780                             UZ03988  @ZA07714 00044003
*0000592820,592840,593020                             UZ03988  @ZA06703 00044203
*0000042900,165900,183608,183612,183618,183630                 @VS06783 00044403
*0000192100-192300,481300-481500,483100-483300                 @VS06171 00044603
*A 029500,579756-579757                               UZ03988  @ZA06146 00044803
*C 579092,579760-579764,579776-579778,579785-579787   UZ03988  @ZA06146 00045003
*C 579801-579804,579810,302800                        UZ03988  @ZA06146 00045203
*0000184201-184280                                    UZ03988  @ZA06144 00045403
*0000012200-012700,116500-116640,142100,144800        UZ03988  @ZA01485 00045603
*0000183645                                           UZ03988  @ZA01485 00045803
*0000183433,183532                                    UZ03988  @ZA05439 00046003
*A 343600-343760                                                SA52667 00047403
*C 328800,329700,336900,343200                                  SA52667 00050803
*D 334200-335700                                                SA52667 00054203
*C 746100                                                        YM1019 00057603
*A 582400                                                       SA49892 00061003
*D 591600                                                       SA49829 00064403
*C 828600,829200,829800,830400,831000                            A49872 00067803
*A 646600-646700                                                 A48499 00071203
*C 474000-474600,476400,477000,497700                            A48499 00074603
*C 240000                                                        A46800 00078003
*A 630100-630280,671800-671900,718600-718720                     100000 00081403
*C 130500-130800,131700-135300,169500-169800,170400-170700,      100000 00084803
*C 172200-172800,174900-175200,175800-176100,624600,             100000 00088203
*C 648600-648900,649500-652200,652800,669300                     100000 00092100
*D 131100-131400,135600,170100,173100-174000,174600,177300,      100000 00096100
*D 232500-233100,245700,624900-627300,649200,652500,             100000 00100100
*D 669600-669900                                                 100000 00104100
*C 191700                                                        A46749 00108100
*C 167400,191400,192300,195900,236700                            A42337 00112100
*A 069300,167700-168900,188700-191100,191700-192000,             A42337 00116100
*A 192600-195600,746400,754200-754800                            A42337 00120100
*D 168300,169000,169300,169400                                   A42337 00124100
*C 712200                                                         M0875 00128100
*                  RELEASE 3.0, VS2 CHANGES                             00128502
*C 297564                                                      @ZA00105 00129003
*D 570420                                                       ZA00105 00132403
*                                                                       00134304
*             VS2-4.1 RACF CHANGES                             @Z40RSSA 00134404
*A 66901,303620,303640,570420-570476,570508-570538,570848       ZA00105 00135803
*A 734099-734299,734400,734500                                  ZA00105 00139203
*A 032200,202960,202980,738280                                  ZA00612 00142603
*C 183598                                                       ZA02173 00146003
*D 579436-579740,579900-579964                                  ZA02196 00149403
*C 579868                                                       ZA02196 00152803
*A 579436,579424,579900                                         ZA02196 00156203
*C231000                                                        ZA01264 00159603
*********************************************************************** 00163003
*                                                                     * 00166403
* STATUS --  VS2  030  SU                                      @ZA06146 00169803
*                                                                     * 00176603
* FUNCTION --                                                         * 00180020
*    THIS IS THE MAIN PROCESSING MODULE OF THE LISTDS COMMAND.        * 00240020
*    IT GETS CONTROL FROM THE TERMINAL MONITOR PROGRAM VIA ATTACH     * 00270020
*    AND PROCESSES A LIST OF DSNAMES, DISPLAYING THEIR ATTRIBUTES     * 00300020
*    ON THE TERMINAL. A LOCATE IS ISSUED TO GET THE VOLUME LIST,        00330000
*    ENTRY TYPE, AND OTHER INFORMATION ABOUT THE DATA SET.     @YL026YA 00340000
*    IF THE DATA SET IS NON-VSAM,                              @YL026YA 00350000
*    OBTAIN IS USED TO GET THE REMAINDER OF THE INFOR-         @YL026YA 00360000
*    MATION GIVEN AS PART OF THE BASIC FUNCTION OF THE COMMAND.       * 00370000
*    IF THE DATA SET IS VSAM, THE ORIGINAL LOCATE SUPPLIED     @YL026YA 00380000
*    THE INFORMATION.                                          @YL026YA 00390000
*    IF THE DSNAME IS NOT CATALOGED, AN ENTRY IS MADE TO DAIR TO      * 00420020
*    SEE IF IT WAS ALLOCATED VIA THE LOGON PROC. IF IT WAS, THE       * 00450020
*    DDNAME IS EXTRACTED AND A RDJFCB IS ISSUED. IN THIS CASE         * 00480020
*    ONLY UP TO 5 VOLSERS WILL BE DISPLAYED.                          * 00510020
*    HISTORY INFORMATION IS OPTIONALLY PROVIDED FROM THE DSCB  @YL026YA 00540000
*    FOR NON-VSAM DATA SETS.  FOR VSAM DATA SETS, HISTORY      @YL026YA 00550000
*    INFORMATION IS RETRIEVED FROM THE CATALOG VIA THE ORIGINAL         00560000
*    LOCATE.                                                   @YL026YA 00570000
*    IF STATUS INFORMATION IS REQUESTED, THE INFORMATION       @YL026YA 00580000
*    RETRIEVAL FUNCTION OF DYNAMIC ALLOCATION IS USED;         @YL026YA 00590000
*    THE DDNAME AND DISPOSITION                                @YL026YA 00600000
*    IS EXTRACTED AND DISPLAYED. IF THE DSNAME IS A MEMBERNAME        * 00630020
*    A BLDL ISSUED AND INFORMATION IN THE DIRECTORY FOR THAT          * 00660020
*    MEMBER IS DISPLAYED. IF MEMBERS INFORMATION IS REQUESTED,        * 00690020
*    AND THE DATASET IS A PDS, THEN IKJEHMEM IS CALLED TO LIST        * 00720020
*    OUT THE DIRECTORY. IF LABEL INFORMATION IS REQUESTED, THE        * 00750020
*    DSCB CHAIN IS PRINTED IN HEXADECIMAL ON THE TERMINAL.            * 00780020
*                                                                     * 00810020
* ENTRY POINTS --                                                     * 00840020
*         IKJEHDS1 - MAIN ENTRY POINT OF THE PROGRAM                  * 00900020
*         IKJEHWRT - WRITE ROUTINE                                    * 00940020
*                                                                     * 00990020
* INPUT -- REGISTER 1 POINTS TO THE COMMAND PROCESSOR PARAMETER LIST  * 01020020
*                                                                     * 01140020
* OUTPUT -- A LIST OF ATTRIBUTES FOR THE DATA SETS SPECIFIED          * 01170020
*         R15 = X'00'   NORMAL RETURN                          @ZA01485 01220003
*         R15 = X'0C'   ERROR RETURN                           @ZA01485 01270003
*                                                                     * 01290020
* EXTERNAL REFERENCES --                                              * 01320020
*         IKJEHMEM TO LIST PDS DIRECTORY                              * 01380020
*         IKJPARS TO PARSE COMMAND                                    * 01440020
*         IKJPUTL TO OUTPUT DATA TO TERMINAL                          * 01470020
*         IKJEHSIR TO ESTABLISH STAE EXIT                             * 01500020
*         IKJDAIR TO ALLOCATE DATASET                                 * 01502020
*         IKJDFLT TO QUALIFY DATA SET NAMES                           * 01504020
*         IKJEHCIR TO OBTAIN A LIST OF NAMES IF LEVEL OR A     @YL026YA 01512000
*                  GENERIC (*) DATA SET NAME IS SPECIFIED.     @YL026YA 01520000
*                                                                     * 01530020
* EXITS, NORMAL -- RETURN TO THE TERMINAL MONITOR PROGRAM             * 01560020
*                                                                     * 01590020
* EXITS, ERROR -- RETURN TO THE TERMINAL MONITOR PROGRAM              * 01620020
*                                                                     * 01770020
* TABLES/WORK AREAS --                                                * 01800000
*    HDTNY-THIS TABLE THE ACCUMULATED DAYS IN THE YEAR FOR EACH       * 01860020
*    MONTH. IT IS USED TO FIND THE CORRECT MONTH THAT A               * 01890020
*    DAY FALLS IN. NY STANDS FOR NORMAL YEAR.                         * 01920020
*    HDTLY-SAME AS HDTNY BUT FOR LEAP YEAR.                           * 01950020
*    TRANSTAB-USED TO TRANSLATE BINARY TO HEXADECIMAL                 * 01980020
*    OBTWAD-WORKING CORE GOTTEN THAT PROVIDES THE WORK AREA FOR       * 02010020
*    THE RDJFCB AND OBTAIN MACROS ALONG WITH DCBS AND                 * 02040020
*    VARIOUS INTERNAL SWITCHS, LIST FORMS OF MACROS,                  * 02070020
*    BUFFERS, REG SAVE AREA, AND PARAMETER LISTS. CORE                * 02100020
*    IS GOTTEN BY A REG GETMAIN.                                      * 02130020
*                                                                     * 02190020
* ATTRIBUTES -- REENTRANT, READ-ONLY, REFRESHABLE                     * 02200000
*                                                                     * 02210000
* CHARACTER CODE DEPENDENCY -- CHARACTER CODE INDEPENDENT             * 02220000
*                                                                     * 02230000
* NOTES --                                                            * 02240000
*    DESCRIBED IN OS/VS2 TSO COMMAND PROCESSOR LOGIC,          @YL026YA 02250000
*    VOLUME IV, SY28-0652.                                     @YL026YA 02260000
*                                                                     * 02310020
*********************************************************************** 02340020
         ENTRY IKJEHWRT                                                 02370020
         ENTRY IKJEHALC                                        @YL026YA 02380000
         ENTRY IKJEHERR                                                 02400020
R0       EQU   0                   REGISTER 0                           02430020
R1       EQU   1                   REGISTER 1                           02460020
R2       EQU   2                   REGISTER 2                           02490020
R3       EQU   3                   REGISTER 3                           02520020
R4       EQU   4                   REGISTER 4                           02550020
R5       EQU   5                   REGISTER 5                           02580020
R6       EQU   6                   REGISTER 6                           02610020
R7       EQU   7                   REGISTER 7                           02640020
R8       EQU   8                   REGISTER 8                           02670020
R9       EQU   9                   REGISTER 9 - POINTER TO CURRENT     *02700000
                                   DSNAME                      @YL026YA 02710000
R10      EQU   10                  REGISTER 10 - BASE FOR      @YL026YA 02720000
*                                    SECONDARY PROGRAM CSECTS  @YL026YA 02730000
R11      EQU   11                  REGISTER 11 - MAIN PROGRAM  @YL026YA 02740000
*                                    BASE REGISTER             @YL026YA 02750000
R12      EQU   12                  REGISTER 12 - BASE FOR WORKAREA      02760000
R13      EQU   13                  REGISTER 13                          02820020
R14      EQU   14                  REGISTER 14                          02850020
R15      EQU   15                  REGISTER 15                          02880020
WORKSP   EQU   1                   SUBPOOL NUMBER                       02910020
SAVELEN  EQU   112                 SAVE AREA LENGTH            @ZA06146 02940003
SAVELEN1 EQU   120                 SAVE AREA LENGTH            @ZA06146 02950003
ONE      EQU   X'01'               MASK TO CHECK KEYWORD PDE            02970020
HISTORY  EQU   X'01'               HISTORY OPTION                       03000020
STATUS   EQU   X'02'               STATUS OPTION                        03030020
MEMBERS  EQU   X'04'               MEMBERS OPTION                       03060020
LABEL    EQU   X'08'               LABEL OPTION                         03090020
CATALOG  EQU   X'01'               CATALOG OPTION              @YL026YA 03100000
LEVEL    EQU   X'02'               LEVEL OPTION                @YL026YA 03110000
JFCB     EQU   X'20'               INDICATE RDJFCB HAS BEEN ISSUED      03120020
LOCATE   EQU   X'40'               INDICATE LOCATE HAS BEEN SUCCESSFUL  03150020
MOREVOLS EQU   X'80'               INDICATE FOR MORE VOLUMES.           03180020
NMOREVOL EQU   X'7F'               MASK TO TURN OFF MORE VOL SWITCH     03210020
B1       EQU   1                   MASK FOR BYTE#1 OF REG       ZA00612 03220002
ON       EQU   X'80'               MASK FOR DSLIST PDE FLAGS            03240020
MEMFLAG  EQU   14                  OFFSET TO MEMBER FLAG BYTE IN PDE    03270020
MEMNAME  EQU   X'10'               INDICATOR FOR MEMBER NAME            03300020
PWOFF    EQU   16                  OFFSET TO PASSWORD ADDRESS           03330020
STATOFF1 EQU   29                  OFFSET FOR STATUS WITHOUT HISTORY    03360020
STATOFF2 EQU   58                  OFFSET FOR STATUS WITH HISTORY       03370020
BLANK    EQU   C' '                BLANK                                03380020
ZONE     EQU   C'0'                ZONE FIELD                           03390020
SLASH    EQU   C'/'                CHARACTER SLASH                      03450020
FOXES    EQU   X'FF'               HEX FF BYTE                          03480020
MNAMTTR  EQU   11                  OFFSET TO TTR FOR MNAM OUTPUT        03510020
MNAMALI  EQU   18                  ALIAS OFFSET                         03540020
MNAMTTRN EQU   24                  OFFSET TO TTRN                       03570020
MNAMCNT  EQU   29                  OFFSET TO HW COUNT                   03600020
MNAMDATA EQU   33                  OFFSET TO DATA TO INSERT.            03630020
FOX3     EQU  X'F3'                USED FOR MASK OF F3                  03690020
MAXDSN   EQU   44                  LONGEST NAME ALLOWED TO     @YL026YA 03694000
*                                  SYSTEM                      @YL026YA 03698000
CIRLIST  EQU   X'FF'               INDICATOR THAT NAME BEING   @YL026YA 03702000
*                                  PROCESSED IS FROM CIR LIST  @YL026YA 03706000
CIROPTDS EQU   X'02'               CIR OPTION TO RETURN LIST   @YL026YA 03710000
*                                  OF NAMES                    @YL026YA 03714000
*     RELATIVE MESSAGE NUMBERS TO BE USED FOR ERROR HANDLING            03720020
MSG01    EQU   1                   MESSAGE NUMBER 1                     03780020
MSG02    EQU   2                   MESSAGE NUMBER 2                     03810020
MSG03    EQU   3                   MESSAGE NUMBER 3                     03840020
MSG04    EQU   4                   MESSAGE NUMBER 4                     03870020
MSG05    EQU   5                   MESSAGE NUMBER 5                     03900020
MSG06    EQU   6                   MESSAGE NUMBER 6                     03930020
MSG07    EQU   7                   MESSAGE NUMBER 7                     03960020
MSG08    EQU   8                   MESSAGE NUMBER 8                     03990020
MSG09    EQU   9                   MESSAGE NUMBER 9                     04020020
MSG10    EQU   10                  MESSAGE NUMBER 10                    04050020
MSG11    EQU   11                  MESSAGE NUMBER 11                    04080020
MSG12    EQU   12                  MESSAGE NUMBER 12                    04110020
MSG13    EQU   13                  MESSAGE NUMBER 13                    04140020
MSG14    EQU   14                  MESSAGE NUMBER 14                    04170020
MSG15    EQU   15                  MESSAGE NUMBER 15                    04200020
MSG16    EQU   16                  MESSAGE NUMBER 16                    04230020
MSG17    EQU   17                  MESSAGE NUMBER 17                    04260020
MSG18    EQU   18                  MESSAGE NUMBER 18           @YL026YA 04270000
MSG19    EQU   19                  MESSAGE NUMBER 19           @YL026YA 04280000
MSG20    EQU   20                  MESSAGE NUMBER 20           @VS06783 04290000
SECMSG01 EQU   1                   SECOND LEVEL MESSAGE 1               04320020
SECMSG02 EQU   2                   SECOND LEVEL MESSAGE 2               04350020
SECMSG03 EQU   3                   SECOND LEVEL MESSAGE 3               04380020
SECMSG04 EQU   4                   SECOND LEVEL MESSAGE 4               04410020
SECMSG05 EQU   5                   SECOND LEVEL MESSAGE 5               04440020
SECMSG06 EQU   6                   SECOND LEVEL MESSAGE 6               04470020
SECMSG07 EQU   7                   SECOND LEVEL MESSAGE 7               04500020
SECMSG08 EQU   8                   SECOND LEVEL MESSAGE 8               04530020
SECMSG09 EQU   9                   SECOND LEVEL MESSAGE 9               04560020
SECMSG10 EQU   10                  SECOND LEVEL MESSAGE 10              04590020
SECMSG11 EQU   11                  SECOND LEVEL MESSAGE 11              04620020
SECMSG12 EQU   12                  SECOND LEVEL MESSAGE 12              04650020
SECMSG13 EQU   13                  SECOND LEVEL MESSAGE 13              04680020
SECMSG14 EQU   14                  SECOND LEVEL MESSAGE 14              04710020
SECMSG15 EQU   15                  SECOND LEVEL MESSAGE 15              04740020
SECMSG16 EQU   16                  SECOND LEVEL MESSAGE 16              04770020
SECMSG17 EQU   17                  SECOND LEVEL MESSAGE 17              04800020
SECMSG18 EQU   18                  SECOND LEVEL MESSAGE 18              04830020
SECMSG19 EQU   19                  SECOND LEVEL MESSAGE 19              04840020
SECMSG20 EQU   20                  SECOND LEVEL MESSAGE 20              04850020
SECMSG21 EQU   21                  SECOND LEVEL MESSAGE 21     @YL026YA 04853000
SECMSG22 EQU   22                  SECOND LEVEL MESSAGE 22     @YL026YA 04856000
*                                                                       04860020
CHARV    EQU   C'V'                RECFM EQUAL V                        04890020
CHARU    EQU   C'U'                EQUAL U                              04920020
CHARF    EQU   C'F'                EQUAL F                              04950020
CHARAST  EQU   C'*'                RECFM NOT SPECIFIED                  04980020
CHART    EQU   C'T'                TRACK OVERFLOW CHAR                  05010020
CHARB    EQU   C'B'                BLOCKED ATTRIBUTE                    05040020
CHARS    EQU   C'S'                STANDARD OR SPANNED                  05070020
CHARA    EQU   C'A'                ASA CONTROL CHAR                     05100020
CHARM    EQU   C'M'                MACHINE CONTROL                      05130020
NOHIBIT  EQU   X'7F'               USED FOR MASK OF X'7F'               05160020
DAIR08   EQU   X'08'               DAIR ENTRY CODE 08                   05170020
DAIR2C   EQU   X'2C'               DAIR ENTRY CODE 2C                   05180020
EXITCODE EQU   X'87'               EXIT CODE FOR JFCB                   05190000
RETCD52  EQU   52                  RETURN CODE OFFSET                   05220000
*                                    (END OF SAVE AREA)        @YL026YA 05250000
DAYS31   EQU   31                  USED FOR VALUE 31                    05280020
ERRCOD   EQU   14                  USED AS OFFSET OF 14 IN ERROR RTN    05310020
PASSLOT  EQU   60                  PASSWORD SLOT OF DAIRLIST            05340020
CRDTOFF  EQU   28                  OFFSET TO CREATION DATE              05430000
*                                  IN OUTPUT (PRINT) BUFFER    @YL026YA 05480000
VOLENTLN EQU   6                   LENGTH OF VOLSER ENTRY      @YL026YA 05530000
DSNADDR  EQU   0                   OFFSET TO DSNAME ADDR IN PDE LIST    05580000
DSNLEN   EQU   4                   OFFSET TO DSNAME LENGTH FIELD IN PDE 05630000
DSNFLAGS EQU   6                   OFFSET TO FLAG1 IN PDE      @YL026YA 05680000
MEMADDR  EQU   8                   OFFSET TO MEMBERNAME POINTER IN PDE  05730020
MEMLEN   EQU   12                  OFFSET TO MEMBERNAME LENGTH          05760020
PWRDADDR EQU   16                  OFFSET TO PASSWORD ADDRESS IN PDE    05790020
PWLEN    EQU   20                  OFFSET TO PASSWORD LENGTH IN PDE     05820000
PWFLAG   EQU   22                  OFFSET TO PASSWORD          @YL026YA 05830000
CHAINAD  EQU   24                  OFFSET TO PDE CHAIN FIELD            05850020
BLDLLEN  EQU   80                  LENGTH OF BLDL LIST                  05880020
LOCSAVOF EQU   72                  OFFSET TO LOCAL SAVE AREA            05900020
TCBOFF   EQU   4                   OFFSET TO TCB                        05920020
FOUR     EQU   4                   USED FOR FULL WORD MOVES AND REFS    05940020
OPT02    EQU   X'20'               USED AS OPTION FOR DEFAULT INTERFACE 05970020
OPT04    EQU   X'04'               USED AS OPTION FOR DEFAULT ROUTINE   06000020
QUOTED   EQU   X'40'               FLAG FOR QUOTED DSNAME IN PDE        06030000
HIGHBIT  EQU   X'80'               HIGH ORDER BIT MASK                  06080000
*  DISPLACEMENTS, LENGTHS                                               06130000
D0       EQU   0                   0                                    06180020
D1       EQU   1                   1                                    06210020
D2       EQU   2                   2                                    06240020
D3       EQU   3                   3                                    06270020
D4       EQU   4                   4                                    06300020
D5       EQU   5                   5                                    06330020
D6       EQU   6                   6                                    06360020
D7       EQU   7                   7                                    06390020
D8       EQU   8                   8                                    06420020
D9       EQU   9                   9                          @YL026YB  06430000
D10      EQU   10                  10                                   06450020
D11      EQU   11                  11                                   06480020
D12      EQU   12                  12                                   06510020
D56      EQU   56                  56                                   06520000
L0       EQU   0                   0                                    06540020
L1       EQU   1                   1                                    06570020
L2       EQU   2                   2                                    06600020
L3       EQU   3                   3                                    06630020
L4       EQU   4                   4                                    06660020
L5       EQU   5                   5                                    06690020
L6       EQU   6                   6                                    06720020
L7       EQU   7                   7                                    06750020
L8       EQU   8                   8                                    06780020
L9       EQU   9                   9                                    06810020
L10      EQU   10                  10                                   06840020
L12      EQU   12                  12                           ZA00105 06845002
L15      EQU   15                 15                                    06850000
L16      EQU   16                  16                          @YL026YA 06851000
L23      EQU   23                  23                          @YL026YA 06852000
L34      EQU   34                                                       06853000
*                                                                       06854000
FOURB    EQU   4                   4                                    06855000
EQ       EQU   8                   CONDITION CODE EQUAL        @YL026YA 06856000
RC28     EQU   28                  RETURN CODE 28                       06860020
NXTBUF   EQU   10                  NEXT BUFFER POSITION                 06870020
CONVCNT  EQU   8                   HALF BYTE COUNT FOR BITOHEX          06900020
NUMMONTH EQU   12                  NUMBER OF MONTHS IN A YEAR           06930020
DDNAMLEN EQU   8                   LENGTH OF A DDNAME                   06960020
STAR     EQU   C'*'                ASTERISK                    @YL026YA 06970000
PERIOD   EQU   C'.'                DSNAME LEVEL DELIMITER      @YL026YA 06980000
COMMA    EQU   C','                COMMA                                06990020
QUOTE    EQU   C''''               CHARACTER QUOTE               A42337 07000021
CONDZERO EQU   8                   BRANCH IF ZERO CONDITION CODE        07020020
RETCD12  EQU   12                  RETURN CODE FOR ERROR RETURN TO TMP  07050020
ONEF     EQU   X'1F'               USED FOR MASK OF X'1F'               07110020
RT08     EQU   X'08'               USED FOR RETURN CODE CHECK           07140020
RT12     EQU   X'0C'               USED FOR RETURN CODE                 07170020
RT16     EQU   X'10'               USED FOR RETURN CODE 16              07200020
ZERO     EQU   X'00'               USED TO CLEAR BYTES                  07210020
SWON     EQU   X'FF'               MASK TURN SWITCH ON                  07220020
SWOFF    EQU   X'00'               MASK TURN SWITCH OFF                 07222020
*********************************************************************** 07224000
*                                                                     * 07264000
*    THE FOLLOWING EQUATES ARE USED BY THE LABEL KEYWORD PROCESSING   * 07304000
*    ROUTINE (IKJEHLBL).   THEY ARE MAINLY USED FOR FORMATTING THE    * 07350020
*    FORMAT 1 AND 3 DSCBS INTO THE OUTPUT BUFFER.  EQUATES ENDING IN  * 07380020
*    LEN ARE GENERALLY LENGTHS OF SOME DATA FIELD AND THOSE ENDING IN * 07410020
*    OFF AND OF ARE GENERALLY OFFSETS INTO ONE OF THE WORK AREAS OR   * 07440020
*    THE BUFFER.  THOSE OFFSETS BEGINNING WITH N ARE OFFSETS INTO THE * 07470020
*    OUTPUT BUFFER.  THOSE OFFSETS NOT BEGINNING WITH N ARE OFFSETS   * 07500020
*    INTO A WORK AREA WHERE THE DATA IS CONVERTED TO HEXIDECIMAL.     * 07530020
*                                                                     * 07560020
*    ANY OF THE LENGTHS OF THE DATA FIELDS MAY BE CHANGED WITHOUT     * 07590020
*    REQUIRING CHANGES TO THE OFFSETS OR OUTPUT FORMATS, EXCEPT IN    * 07620020
*    IN THE CASE WHERE THE CHANGE IN LENGTH CAUSES THE CONVERSION     * 07650020
*    AREA OR THE BUFFER TO BE OVER RUN.                               * 07680020
*                                                                     * 07710020
*********************************************************************** 07740020
MAXNUM   EQU   40                  MAX BYTE COUNT FOR FORMAT 1 CONVERT  07770000
MAXNUM2  EQU   36                  MAX COUNT FOR A FORMAT 3 CONVERSION  07800000
IDLEN    EQU   2                   LENGTH OF ID BYTE                    07830000
SNLEN    EQU   12                  SERIAL NUMBER LENGTH                 07860000
VSLEN    EQU   4                   VOLUME SEQUENCE LENGTH               07890000
CDLEN    EQU   6                   CREATION DATE LENGTH                 07920000
EDLEN    EQU   6                   EXPIRATION DATE LENGTH               07950000
NELEN    EQU   2                   NUMBER OF EXTENTS LENGTH             07980000
NOBDBLEN EQU   2                   BYTES USED IN LAST DIRECTORY BLK LEN 08010000
RESLEN1  EQU   2                   RESERVED AREA 1 LENGTH               08040000
SYSCDLEN EQU   26                  SYSTEM CODE LENGTH                   08070000
RESLEN2  EQU   14                  RESERVED AREA NUMBER 2 LENGTH        08100000
DSORGLEN EQU   4                   DSORG FIELD LENGTH                   08130000
RECFMLEN EQU   2                   RECFM FIELD LENGTH                   08160000
OPTCDLEN EQU   2                   OPTCD FIELD LENGTH                   08190000
BLKLLEN  EQU   4                   BLKL FIELD LENGTH                    08220000
LRECLLEN EQU   4                   LRECL FIELD LENGTH                   08250000
KEYLLEN  EQU   2                   KEY LENGTH FIELD LENGTH              08280000
RKPLEN   EQU   4                   RELATIVE KEY POSITION FIELD LENGTH   08310000
DSINDLEN EQU   2                   DSIND FIELD LENGTH                   08340000
SCALOLEN EQU   8                   SECONDARY ALLOC. FIELD LENGTH        08370000
LSTARLEN EQU   6                   LSTAR FIELD LENGTH                   08400000
TRBALLEN EQU   4                   TRACK BALANCE FIELD LENGTH           08430000
RESLEN3  EQU   4                   RESERVED AREA 3 LENGTH               08460000
EXT1LEN  EQU   20                  EXTENT ONE LENGTH                    08490000
EXT2LEN  EQU   20                  EXTENT TWO LENGTH                    08520000
EXT3LEN  EQU   20                  EXTENT THREE LENGTH                  08550000
PTRDSLEN EQU   10                  CCHHR OF NEXT DSCB LENGTH            08580000
     EJECT                                                              08610020
*********************************************************************** 08640020
*                                                                       08670020
*      THE FOLLOWING EQUATES APPEAR IN PAIRS, THE FIRST BEING THE       08700020
*      OFFSET INTO AN AREA WHERE A PORTION OF THE DSCB HAS BEEN         08730020
*      CONVERTED TO HEXIDECIMAL, AND THE SECOND (STARTING ALWAYS        08760020
*      WITH N) INTO THE BUFFER WHERE IT WILL BE OUTPUTTED. THE          08790020
*      FIRST COUPLE CHARACTERS CORRESPONDS TO THE SAME ITEM THAT        08820020
*      IS REPRESENTED ABOVE AS THE LENGTH OF THE FIELD.                 08850020
*                                                                       08880020
*********************************************************************** 08910020
SNOFF    EQU   IDLEN               OFFSET TO ID FIELD IN CONVERSION     08940000
*                                  AREA                                 08960000
NSNOFF   EQU   IDLEN+1             OFFSET INTO BUFFER TO ID FIELD FOR   08980000
*                                  OUTPUT                               09000000
VSOFF    EQU   SNOFF+SNLEN         VOLUME SEQ FIELD                     09020000
NVSOFF   EQU   SNLEN+NSNOFF+1                                           09040000
CDOFF    EQU   VSOFF+VSLEN         CREATION DATE                        09060000
NCDOFF   EQU   VSLEN+NVSOFF+1                                           09080000
EDOFF    EQU   CDOFF+CDLEN         EXPIRATION DATE                      09100000
NEDOFF   EQU   CDLEN+NCDOFF+1                                           09120000
NEOFF    EQU   EDOFF+EDLEN         N. OF EXTENTS                        09140000
NNEOFF   EQU   EDLEN+NEDOFF+1                                           09160000
NOBDBOFF EQU   NEOFF+NELEN         N. OF BYTES IN LAST PDS DIRECT. BLK. 09180000
NNOBDBOF EQU   NELEN+NNEOFF+1                                           09200000
RESOFF1  EQU   NOBDBOFF+NOBDBLEN   RESERVED AREA 1                      09220000
NRESOFF1 EQU   NOBDBLEN+NNOBDBOF+1                                      09240000
SYSCDOFF EQU   RESOFF1+RESLEN1     SYSTEM CODE FIELD                    09260000
NSYSCDOF EQU   RESLEN1+NRESOFF1+1                                       09280000
*                                                                       09300000
DSORGOF  EQU   RESLEN2             DSORG FIELD                          09320000
NDSORGOF EQU   RESLEN2+1                                                09340000
RECFMOF  EQU   DSORGOF+DSORGLEN    RECFM FIELD                          09360000
NRECFMOF EQU   DSORGLEN+NDSORGOF+1                                      09380000
OPTCDOFF EQU   RECFMOF+RECFMLEN    OPTCD FIELD                          09400000
NOPTCDOF EQU   RECFMLEN+NRECFMOF+1                                      09420000
BLKLOF   EQU   OPTCDOFF+OPTCDLEN   BLKL FIELD                           09440000
NBLKLOF  EQU   OPTCDLEN+NOPTCDOF+1                                      09460000
LRECLOF  EQU   BLKLOF+BLKLLEN      LRECL FIELD                          09480000
NLRECLOF EQU   BLKLLEN+NBLKLOF+1                                        09500000
KEYLOFF  EQU   LRECLOF+LRECLLEN    KEY LENGTH                           09520000
NKEYLOFF EQU   LRECLLEN+NLRECLOF+1                                      09540000
RKPOFF   EQU   KEYLOFF+KEYLLEN     REL. KEY POSITION FIELD              09560000
NRKPOFF  EQU   KEYLLEN+NKEYLOFF+1                                       09580000
DSINDOFF EQU   RKPOFF+RKPLEN       DSIND FIELD                          09600000
NDSINDOF EQU   RKPLEN+NRKPOFF+1                                         09900020
SCALOOFF EQU   DSINDOFF+DSINDLEN                                        09930020
NSCALOOF EQU   DSINDLEN+NDSINDOF+1  SEC. ALLOC. FIELD                   09960020
LSTAROFF EQU   SCALOOFF+SCALOLEN   LSTAR FIELD                          09990020
NLSTAROF EQU   SCALOLEN+NSCALOOF+1                                      10020020
TRBALOFF EQU   LSTAROFF+LSTARLEN   TRK BALANCE FIELD                    10050020
NTRBALOF EQU   LSTARLEN+NLSTAROF+1                                      10080020
RESOFF3  EQU   TRBALOFF+TRBALLEN   RESERVED AREA THREE                  10110000
NRESOFF3 EQU   TRBALLEN+NTRBALOF+1                                      10140000
EXT2OFF  EQU   EXT1LEN             EXTENT TWO FIELD                     10170000
NEXT2OFF EQU   EXT1LEN+1                                                10200000
EXT3OFF  EQU   EXT2OFF+EXT2LEN     EXTENT THREE                         10230000
NEXT3OFF EQU   EXT2LEN+NEXT2OFF+1                                       10260000
PTRDSOFF EQU   EXT3OFF+EXT3LEN     PTRDS FIELD                          10290000
NPTRDSOF EQU   EXT3LEN+NEXT3OFF+1                                       10320020
*                                                                       10350020
*   THE FOLLOWING EQUATES ARE USED FOR PROCESSING THE FORMAT 3 DSCB.    10380020
*                                                                       10410020
KEYIDLEN EQU   8                   LEN OF KEY ID FIELD WHEN IN HEX      10440000
F3EXTLEN EQU   20                  LEN OF EXTENT FIELD WHEN CONVERTED   10470000
F3IDLEN  EQU   2                   ID FIELD LENGTH                      10500000
MAXNUM3  EQU   15                  NUMBER USED IN CONVERSION ROUTINE    10530000
MAXNUM4  EQU   31                  NUMBER USED IN CONVERSION ROUTINE    10560000
EOBUFF1  EQU   2*MAXNUM2           USED IN UNKNOWN DSCB ROUTINE         10590000
IDOFF    EQU   9                   OFFSET TO ID                         10620000
*                                                                       10650000
F3OFF1   EQU   KEYIDLEN            OFFSET TO EXTENT 4                   10680000
F3OFF2   EQU   F3EXTLEN+F3OFF1     EXTENT 5                             10710000
F3OFF3   EQU   F3EXTLEN+F3OFF2     EXTENT 6                             10740000
*                                                                       10770000
NF3OFF1  EQU   KEYIDLEN+1          OFFSET INTO BUFFER FOR EXTENTS       10800000
NF3OFF2  EQU   NF3OFF1+F3EXTLEN+1                                       10830020
NF3OFF3  EQU   NF3OFF2+F3EXTLEN+1                                       10860020
NF3OFF4  EQU   F3EXTLEN+1                                               10890020
F3OFF4   EQU   F3EXTLEN            EXTENT OFFSETS INTO CONVERSION AREA  10920000
F3OFF5   EQU   F3OFF4+F3IDLEN                                           10950020
NF3OFF5  EQU   NF3OFF4+F3IDLEN+1                                        10980020
F3OFF6   EQU   F3OFF5+F3EXTLEN                                          11010020
NF3OFF6  EQU   NF3OFF5+F3EXTLEN+1                                       11040020
F3OFF7   EQU   F3EXTLEN                                                 11070020
NF3OFF7  EQU   F3EXTLEN+1                                               11100020
F3OFF8   EQU   F3OFF7+F3EXTLEN                                          11130020
NF3OFF8  EQU   NF3OFF7+F3EXTLEN+1                                       11160020
*                                                                       11190020
*******EQUATES USED IN MEMBER PROCESSING ****                           11220020
*                                                                       11250020
DSORGF   EQU   1                   DSORG FIELD LENGTH                   11280000
BLDL1    EQU   1                   DO BLDL ON ONE ENTRY                 11310000
BLDLMAX  EQU   76                  MAX LIST LENGTH ON BLDL              11340000
DTACNT   EQU   1                   DATA COUNT TO BE CONVERTED           11370000
USERFLD  EQU   4                   OFFSET TO USER DATA                  11400000
BUFPTLN  EQU   9                   LENGTH OF BUFFPTR                    11430000
LSTFLD   EQU   69                  OFFSET TO LAST FIELD OUTPUT BUFF     11460000
*                                                                       11490020
         EJECT                                                          11520020
LISTDS   SAVE  (14,12)                                                  11550003
         LR    R11,R15             ESTABLISH ADDRESSABILITY             11580000
         USING LISTDS,R11          USE R11 FOR MAIN BASE                11610000
         USING OBTWAD,R12          USE R12 FOR WORKAREA BASE            11640000
         B     BRARID              BRANCH AROUND ID            @ZA01485 11650003
         DC    C'IKJEHDS1'         MODULE ID                   @ZA01485 11660003
         DC    X'6098'             DATE 04/07/76               @ZA10244 11662003
BRARID   EQU   *                                               @ZA01485 11664003
         LR    R2,R1               COPY PARM LIST POINTER               11670000
         GETMAIN  R,LV=WORKSIZE,SP=WORKSP   GET INITIAL CORE            11700000
         LR    R12,R1              SETUP BASE FOR WORKAREA              11730000
         LA    R3,SAVEAREA         GET ADDR OF THIS PROGRAMS SAVEAREA   11760000
         ST    R13,D4(R3)          SET UP BACK CHAIN                    11790000
         ST    R3,D8(R13)          SET UP FORWARD CHAIN                 11820000
         LR    R13,R3                   BACKWARD CHAIN AREAS.           11850020
*                                                                       11880020
         MVI   STACKSW,SWOFF       TURN STACK SWITCH OFF                11890020
         LA    R3,PUTLLIST         SETUP                                11910000
         ST    R3,PUTLCON          ADCONS                               11940000
         LA    R3,DPUTLINE         TO                                   11970020
         ST    R3,DPUTLCON          BE USED                             12000020
         LA    R3,CPECB               BY THE                            12030020
         ST    R3,ECBPTR               PUTLINE                          12060020
         XC    CPECB,CPECB               ROUTINES                       12090020
         L     R3,CPPLUPT-CPPL(R2) GET UPT PTR                          12120020
         ST    R3,UPTPTR           SAVE UPT POINTER                     12150000
         L     R3,CPPLPSCB-CPPL(R2)  GET PSCB PTR                       12170000
         ST    R3,PSCBPTR          SAVE IT                              12190000
         L     R3,CPPLECT-CPPL(R2)  GET ECT PTR                         12210000
         ST    R3,ECTPTR           SAVE IT                              12230000
         ST    R2,TMPSR1                                                12280020
         LOAD  EP=IKJPUTL                                               12300020
         ST    R0,PUTLADDR                                              12330020
         XC    RETCODE,RETCODE     SET RETURN CODE TO ZERO              12360000
         XC    CIRADDR,CIRADDR     INDICATE CIR NOT LOADED     @YL026YA 12366000
         XC    PROCNM,PROCNM       INITIALLY PROCESSING DSNAMES        *12372000
                                   FROM PARSE LIST             @YL026YA 12378000
         MVI   FIRSTIME,ONE        TURN ON FIRST ALLOC SWITCH           12384000
         XC    ALLOCSW(L3),ALLOCSW  CLEAR CONTROL BYTES                 12390020
         XC    ERRPARM(ERRLIST),ERRPARM  CLEAR ERROR PARM LIST          12420020
         MVC   GETML(LILFS),GETMLMDL MOVE LIST FORMS OF GETMAIN ETC     12480020
         MVI   OUTBUF,BLANK        CLEAR OUTPUT BUFFER                  12510000
         MVC   OUTBUF+D1(L'OUTBUF-D1),OUTBUF                            12540000
         MVC   DPUTLINE(LTPUTL),TPUTMDL INITIALIZE PUTLINE              12570000
         ST    R12,OBTJFCBX        SAVE ADDR OF JFCB WORK AREA          12600000
         LA    R3,OBTDCB           ADDR OF DCB IN DSECT                 12630000
         USING IHADCB,R3                                                12660000
         MVC   OBTMACS(LOLFS),OLFS MOVE MACRO LIST FORMS TO DSECT       12690000
         LA    R15,OBTDCBXL        ADDR OF DCB EXIT LIST                12720000
         ST    R15,DCBEXLST        SET UP EXIT LIST ADDRESS             12750000
         MVI   OBTJFCBX,EXITCODE   SET JFCB DCB EXIT CODE               12780000
         DROP  R3                                                       12810020
*                                                                       12840020
*        SETUP PARMLIST FOR PARSE, THEN PARSE COMMAND STRING            12870020
*                                                                       12900020
         LA    R1,PUTLLIST         POINT TO PARSE PARM LIST      100000 12930021
         USING PPL,R1              USE PARSE PARM LIST DSECT     100000 12960021
         L     R3,UPTPTR           UPT POINTER TO-               100000 13050021
         ST    R3,PPLUPT           PARSE PARM LIST               100000 13080021
         L     R3,ECTPTR           ECT POINTER TO-               100000 13110021
         ST    R3,PPLECT           PARSE PARM LIST               100000 13140021
         L     R3,ECBPTR           ECB POINTER TO-               100000 13170021
         ST    R3,PPLECB           PARSE PARM LIST               100000 13200021
         L     R3,PARSECON         PCL POINTER TO-               100000 13230021
         ST    R3,PPLPCL           PARSE PARM LIST-              100000 13260000
         LA    R3,PARDSECT         ANSWER PLACE POINTER TO-      100000 13290000
         ST    R3,PPLANS           PARSE PARM LIST               100000 13320000
         L     R3,D0(R2)           COMMAND BUFFER POINTER        100000 13350000
         ST    R3,PPLCBUF          TO PARSE PARM LIST            100000 13380021
         DROP  R1                  DSECT NO LONGER NEEDED        100000 13410021
         LINK  EP=IKJPARS,MF=(E,(1))                                    13470020
*                                                                       13500020
*    TEST FOR PARSE RETURN CODES--IF ATTENTION, RETURN WITH RC OF 12    13530020
*                                                                       13560020
         B     PARSCODE(R15)       ANALYZE RETURN CODE FROM PARSE       13590000
*                                                                       13630000
PARSCODE B     PARSCD00            RC=00 SUCESSFUL PARSE                13670000
         B     PARSCD04            RC=04 UNABLE TO PROMPT (NO-PROMPT    13710000
*                                                MODE)                  13750000
         B     PARSCD08            RC=08 ATTENTION--ECB POSTED          13790000
         B     PARSCD12            RC=12 INVALID PARAMETERS             13830000
PARSCD16 EQU   *                   RC=16 NO SPACE AVAILABLE             13870000
         MVI   ERR1,MSG14          MESSAGE 14                           13910000
         B     PARSERR2            GO PROCESS ERROR                     13950000
PARSCD12 EQU   *                                                        13990000
         LR    R6,R15              SAVE RETURN CODE                     14030000
         BAL   R8,CVDREG15         GO CONVERT REG 15 AND SET UP INSERT  14070000
         MVI   ERR2,SECMSG16       SECOND LEVEL MESSAGE 16              14140020
         MVI   ERR1,MSG13          MESSAGE 13                           14150020
PARSERR2 BAL   R8,ERROUT           GO WRITE MESSAGE                     14160020
PARSCD04 EQU   *                                               @ZA01485 14210003
PARSCD08 LA    R1,RETCD12          GET RC FOR TMP                       14460000
         MVI   STACKSW,SWON        TURN STACK SWITCH ON        @ZA01485 14480003
         ST    R1,RETCODE          SAVE IT FOR WRAPUP ROUTINE           14500000
         B     WRAPUP              GO TERMINATE                         14520000
*                                                                       14550020
*    SUCESSFUL RETURN FROM PARSE COMES HERE                             14580020
*                                                                       14610020
PARSCD00 EQU   *                                                        14640020
         L     R10,PARDSECT        GET POINTER TO PARSE DSECT           14670000
         USING IKJPARMD,R10                                             14680000
         TM    PHISTORY+D1,ONE     WAS HISTORY REQUESTED                14690000
         BNO   PARS00              NO, CHECK STATUS                     14700000
         OI    OPTMASK,HISTORY     YES, SET INDICATOR IN MASK           14710000
PARS00   TM    PSTATUS+D1,ONE      WAS STATUS REQUESTED                 14720000
         BNO   PARS01              NO, CHECK MEMBERS                    14730000
         OI    OPTMASK,STATUS      YES, SET INDICATOR                   14740000
         L     R15,STIVCON         GET ADDR OF STATUS INIT RTN @YL026YA 14750000
         BALR  R8,R15              INITIALIZE INFORMATION      @YL026YA*14760000
                                   RETRIEVAL                   @YL026YA 14770000
PARS01   TM    PMEMBERS+D1,ONE     WAS MEMBERS REQUESTED                14780000
         BNO   PARS02              NO, CHECK LABEL                      14790000
         OI    OPTMASK,MEMBERS     YES, SET INDICATOR                   14800000
         LOAD  EP=IKJEHMEM                                              14810000
         ST    R0,MEMMOD                                                14820000
PARS02   TM    PLABEL+D1,ONE       WAS LABEL SPECIFIED                  14830000
         BNO   PARS03              NO, CHECK CATALOG           @YL026YA 14840000
         OI    OPTMASK,LABEL       YES, SET INDICATOR                   14850000
PARS03   TM    PCATLG+D1,ONE       WAS CATALOG SPECIFIED?      @YL026YA 14860000
         BNO   PARS04              NO - CHECK LEVEL            @YL026YA 14870000
         OI    OPTMASK2,CATALOG    YES - SET MASK BIT          @YL026YA 14880000
* BUILD A 44-BYTE CATALOG NAME IN THE WORKAREA                 @YL026YA 14890000
         MVI   CATBUFF,BLANK       CLEAR BUFFER TO BLANKS      @YL026YA 14900000
         MVC   CATBUFF+D1(L'CATBUFF-L1),CATBUFF                @YL026YA 14910000
         LA    R7,CATBUFF          POINT TO BUFFER             @YL026YA 14920000
         L     R3,PCATNM           POINT TO CATALOG NAME       @YL026YA 14930000
         LH    R2,PCATNM+DSNLEN    GET LENGTH OF NAME          @YL026YA 14940000
         BCTR  R2,R0               DECREMENT FOR EX INST.      @YL026YB 14950000
         EX    R2,MOVE             MOVE NAME TO BUFFER         @YL026YA 14960000
PARS04   TM    PLEVEL+D1,ONE       WAS LEVEL SPECIFIED         @YL026YA 14970000
         BNO   MAINLINE            NO - START PROCESSING       @YL026YA 14980000
         OI    OPTMASK2,LEVEL      YES - SET MASK BIT          @YL026YA 14990000
         L     R15,VCONCIR         ADDRESS OF CIR              @YL026YB 15000000
         BALR  R8,R15              BRANCH TO CIR               @YL026YB 15010000
         B     MAINLINE            RETURN CODE ZERO            @YL026YB 15020000
         B     GOWRT               NONZERO RETURN CODE         @YL026YB 15030000
*                                                                       15180020
*    MAINLINE ROUTINE                                                   15210020
*                                                                       15240020
MAINLINE EQU   *                                                        15270020
         LA    R9,PDSLIST          POINT AT FIRST ENTRY IN DSNAME LIST  15300000
         CLC   CHAINAD(L4,R9),NOTCHAIN WAS A DSLIST ENTERED?   @YL026YA 15300100
         BE    MAINL01             NO - OK                     @YL026YA 15300200
         TM    OPTMASK2,LEVEL      YES - WAS LEVEL SPECIFIED?  @YL026YA 15300300
         BO    LEVELER             YES - LIST NOT ALLOWED      @YL026YA 15300400
*                                  WITH LEVEL                  @YL026YA 15300500
MAINL01  EQU   *                                               @YL026YA 15300600
         XC    STAELIST(STAELNTH),STAELIST   CLEAR STAE BLOCKS          15301020
         LOAD  EP=IKJEHSIR         LOAD STAE INTERFACE ROUTINE          15302020
         ST    R0,STAEADDR         SAVE ADDRESS OF STAE ROUTINE         15303020
BLDSTAE  PSEUDO TMP=TMPSR1,MF=E                                         15304020
         STABUILD CODE=(113,213,313,713,913),ADDR=STAEONE,NUM=2,       X15305020
               FLAG=(MUL,NMSG),LIST=STAELST,RTN=OPENERR,               X15306020
               MF=E                                                     15307020
         STABUILD CODE=000,RTN=ANYABND,ADDR=STAETWO,                   X15308020
               FLAG=(ALL,NMSG,END),                                    X15309020
               MF=E                                                     15310020
         STAEPARM FLAG=(CP),LIST=STAEONE,ADDR=STAEPARM,PSEUDO=$PSEUDO, X15311020
               MF=E                                                     15312020
         L     R2,STAEADDR         POINTER TO STAE INTERFACE ROUTINE    15313020
         STAE  (R2),CT,PARAM=STAEPARM,MF=(E,STAELIST)                   15314020
         B     NXDSNAME            CONTINUE  MAINLINE                   15315020
ANYABND  EQU   *                                                        15316020
         MVI   ERR2,SECMSG14       ABEND ERROR CODE MSG                 15317020
MCOM5    MVI   ERR1,MSG09          DSNAME NOT USABLE MSG                15318020
         LA    R5,ERRINSRT         PUT ADDRESS OF INSERT                15319020
         ST    R5,ERRINST2         INTO INSERT SLOT                     15320020
         STH   R1,CNVRTWD          PLACE RETURN CODE IN AREA            15321020
         LA    R4,CNVRTWD          ADDR OF AREA FOR CONVERT RTN         15322020
         L     R2,STAEADDR         POINTER TO STAE INTERFACE ROUTINE    15323020
         STAE  (R2),CT,PARAM=STAEPARM,MF=(E,STAELIST)                   15324020
         B     MCOM4               GO TO COMMON RTN                     15325020
OPENERR  EQU   *                                                        15326020
         MVI   ERR2,SECMSG12       OPEN ERROR CODE                      15327020
         B     MCOM5               SET UP MESSAGE                       15328020
     EJECT                                                              15330020
NXDSNAME DS    0H                                                       15360020
*********************************************************************** 15390020
*                                                                     * 15420020
*   THIS ROUTINE INTERFACES WITH THE DEFAULT SERVICE ROUTINE (IKJDFLT)* 15450020
*   IF A NAME IS FOUND IN THE DSLIST WHICH IS NOT FULLY QUALIFIED. THE* 15480020
*   SERVICE ROUTINE WILL APPEND THE USERID AND ADD THE APPROPRIATE    * 15510020
*   DESCRIPTIVE QUALIFIER. WHEN CONTROL IS RETURNED, CURNTNAM WILL    * 15540020
*   CONTAIN THE FULLY QUALIFIED DSNAME.  IF NO DSNAME IS SPECIFIED    * 15570020
*   (INDICATING A MEMBERNAME WAS ENTERED ALONE), AN ERROR MESSAGE     * 15600020
*   IS PUT OUT TO THE TERMINAL AND THE NEXT NAME IN THE LIST IS       * 15630020
*   SELECTED.                                                         * 15660020
*                                                                     * 15690020
*********************************************************************** 15720020
*                                                                       15727020
         ST    R9,$RETRY0+R9*L4    STORE CURRENT R9 FOR RETRY           15734000
*                                                                       15764000
         MVI   CURNTNAM,BLANK      BLANK OUT AREA FOR DSNAME            15794000
         MVC   CURNTNAM+D1(L'CURNTNAM-L1),CURNTNAM BLANK ENTIRE AREA    15824000
         TM    DSNFLAGS(R9),HIGHBIT  IS DSNAME OMITTED                  15854000
         BZ    NAMERR              YES, PROCESS AS AN ERROR    @YL026YA 15884000
         LH    R1,DSNLEN(R9)       LENGTH OF DSNAME                     15914000
         STH   R1,CURNTNAM         SAVE LENGTH                          15944000
         BCTR  R1,R0               DECREMENT LENGTH FOR EX OF MOVE      15974000
         LA    R7,TEMPNAME         POINT AT AREA TO HOLD NAME           16004000
         L     R3,DSNADDR(R9)      NAME TO MOVE                @YL026YA 16034000
         EX    R1,MOVE             MOVE NAMES                           16064000
         TM    DSNFLAGS(R9),QUOTED SEE IF DSNAME IS QUOTED              16140020
         BO    QUOTNAME            YES, GO PROCESS AS IS         A42337 16170021
*  SAVE UNQUALIFIED DATA SET NAME FOR MESSAGES                   A42337 16180021
         LA    R1,D2(R1)           UP LENGTH FOR LENGTH FIELD    A42337 16190021
         LA    R7,MSGNAMEL         MESSAGE LENGTH-NAME BUFFER    A42337 16200021
         LA    R3,CURNTNAM         DATA SET LENGTH-NAME BUFFER   A42337 16210021
         EX    R1,MOVE             MOVE DSNAME TO BUFFER         A42337 16220021
         B     ASTERCK             GO CHECK NAME FOR ASTERISK  @YL026YA 16260000
**     SET UP DEFAULT PARM LIST USING MAP MACROS         *              16300000
QUALNAM  LA    R1,PUTLLIST         POINT TO PARM LIST          @YL026YA 16340000
         USING DFPL,R1             IKJDFPL MAP MACRO             100000 16380021
         L     R3,UPTPTR           UPT POINTER TO-               100000 16440021
         ST    R3,DFPLUPT          DEFAULT PARM LIST             100000 16470021
         L     R2,ECTPTR           GET ECTPTR                           16500000
         ST    R2,DFPLECT          PUT IN LIST                          16530000
         L     R4,ECBPTR           GET ECB PTR                          16560000
         ST    R4,DFPLECB          PUT IN LIST                 @VS06783 16590000
         LA    R3,DEFLIST          DEFAULT PARM LIST ADDRESS-    100000 16620021
         ST    R3,DFPLDFPB         TO DEFAULT PARM LIST          100000 16650021
         DROP  R1                  IKJDFPL NO LONGER NEEDED      100000 16680021
         USING DFPB,R3             MACRO IKJDFPB                        16830020
         LA    R2,CURNTNAM         DSNAME PRECEDED BY LENGTH-    100000 16890021
         ST    R2,DFPBDSN          PUT INTO DEFAULT LIST         100000 16920000
         OI    DFPBCODE,OPT04      INDICATE OPTION REQUESTED OF DEFAULT 16950000
         L     R2,PSCBPTR          PSCB ADDRESS TO-              100000 16980000
         ST    R2,DFPBPSCB         DEFAULT PARM BLOCK            100000 17010000
         DROP  R3                                                       17070020
******************************************************                  17100020
         LINK  EP=IKJDFLT,MF=(E,(1))                                    17160020
*                                                                       17190020
         LA    R8,DSNTEST1                                     @YL026YB 17196000
         ST    R8,RETADDR                                      @YL026YB 17202000
         B     DEFCODE(R15)        ANALYZE  RETURN CODE                 17210020
DEFCODE  B     DEFOK               SUCCESS                              17230020
         B     DSNTEST             MSG BY DEFAULT, GET NEXT DSNAME      17250020
         B     DEF8                INVALID NAME                         17270020
         B     DSNTEST             MSG BY DEFAULT, GET NEXT DSNAME      17290020
         B     DEF16               DSNAME NOT IN CATLG                  17310020
         B     DEF16               DSNAME NOT IN CATLG                  17330020
         B     DEF28               NOT POSSIBLE                         17350020
         B     DEF28               COMMAND SYSTEM ERROR                 17370020
         B     DEF16               NOT POSSIBLE                         17390020
*  THIS IS NOT AN UNCONDITIONAL BRANCH TO THE NEXT SEQUENTIAL           17400020
*  INSTRUCTION.  IT IS DEFAULT RC=36                                    17402020
DEF16    EQU   *                   DEFAULT RC=16,20,32,36               17460020
         MVI   ERR1,MSG01          MESSAGE 1                            17462020
         B     MCOMMON3            INSERT NAME IN MESSAGE               17464020
DEF8     EQU   *                                                        17470020
         MVI   ERR1,MSG16          MESSAGE 16                           17490020
         B     RETCOM2             PUT OUT REST OF MSG                  17510000
DEF28    EQU   *                                                        17570020
         MVI   ERR1,MSG13          COMMAND SYSTEM ERROR                 17590020
         MVI   ERR2,SECMSG17       DEFAULT ERROR CODE                   17610020
         B     GOWRT               PUT OUT MESSAGE                      17630020
QUOTNAME LA    R7,MSGNAME          DSNAME MESSAGE BUFFER         A42337 18200021
         MVI   D0(R7),QUOTE        MOVE QUOTE                    A42337 18250021
         LA    R7,D1(R7)           POINT PAST QUOTE              A42337 18300021
         EX    R1,MOVE             MOVE IN DSNAME                A42337 18310021
         LA    R7,D1(R1,R7)        POINT PAST DSNAME             A42337 18320021
         MVI   D0(R7),QUOTE        MOVE QUOTE                    A42337 18322021
         LA    R1,D3(R1)           UP LENGTH FOR QUOTES AND EXEC A42337 18324021
         STH   R1,MSGNAMEL         SAVE DSNAME LENGTH            A42337 18326021
*                                                              @YL026YA 18328000
*   CHECK THE DSNAME FOR ASTERISKS.  IF NONE, PROCESS THE      @YL026YA 18328200
*   DATA SET.  IF AN ASTERISK APPEARS, OR LEVEL WAS SPECIFIED, @YL026YA 18328400
*   CALL CIR TO GET A LIST OF NAMES TO PROCESS.                @YL026YA 18328600
*                                                              @YL026YA 18328800
ASTERCK  EQU   *                                               @YL026YA 18329000
         LA    R2,TEMPNAME         ADDRESS OF NAME             @YL026YA 18329200
         LH    R3,CURNTNAM         LENGTH OF NAME              @YL026YA 18329400
         L     R15,VCONAST         GET ADDRESS OF ASTERISK     @YL026YA 18329600
*                                  ROUTINE                     @YL026YA 18329800
         BALR  R14,R15                                         @YL026YA 18330000
         B     STARER1             * IN FIRST LEVEL - ERROR    @YL026YA 18330200
         B     STARER2             MORE THAN ONE * - ERROR     @YL026YA 18330400
         CLI   STARLEV,ZERO        OK - IS THERE AN * ?        @YL026YA 18330600
         BNE   ASTERNM             YES - CALL CIR              @YL026YA 18330800
         TM    OPTMASK2,LEVEL      NO - WAS LEVEL SPECIFIED ?  @YL026YA 18331000
         BO    LEVL1               YES - PROCESS LEVEL         @YL026YA 18331200
         TM    DSNFLAGS(R9),QUOTED NO * - IS NAME QUOTED ?     @YL026YA 18331400
         BO    DEFGO               QUOTED NAMES - CONTINUE     @YL026YA 18331600
         B     QUALNAM             UNQUOTED - QUALIFY THE NAME @YL026YA 18331800
ASTERNM  EQU   *                   * IN NAME - GET NAME LIST   @YL026YA 18332000
*   SET UP TO CALL CIR                                         @YL026YA 18332200
         L     R15,VCONCIR                                              18332400
         BALR  R8,R15                                                   18332600
         B     LEVL1                                                    18332800
         B     GOWRT                                                    18333000
LEVL1    TM    OPTMASK2,CATALOG    WAS CATALOG NAME GIVEN?     @YL026YA 18333200
         BO    CATOK               YES - ALREADY SET UP        @YL026YA 18333400
*                                  NO - USE DATASET PASSWORD   @YL026YA 18333600
         LH    R2,PWLEN(R9)        LENGTH OF PASSWORD          @YL026YA 18333800
         LA    R3,PWRDADDR(R9)     ADDRESS OF PASSWORD         @YL026YA 18334000
         BCTR  R2,R0               DECREMENT LENGTH FOR MOVE   @YL026YA 18334200
         LTR   R2,R2               CHECK FOR POSITIVE NO.      @YL026YB 18334400
         BNP   CATOK               NO,GOTO CATOK               @YL026YB 18334600
         LA    R7,CIRPASS          ADDRESS OF PASSWORD BUFFER  @YL026YA 18334800
         EX    R2,MOVE             MOVE THE PASSWORD           @YL026YA 18335000
CATOK    EQU   *                                               @YL026YA 18335200
         MVI   CIRDSN,BLANK        CLEAR DSNAME BUFFER         @YL026YA 18335400
         MVC   CIRDSN+D1(L'CIRDSN-L1),CIRDSN                   @YL026YA 18335600
         LA    R7,CIRDSN           ADDRESS OF CIR DSNAME       @YL026YA 18335800
*                                  BUFFER                      @YL026YA 18336000
         TM    OPTMASK2,LEVEL      WAS LEVEL SPECIFIED ?       @YL026YB 18336200
         BNO   NOLEV               NO, PROCESSING '*' NAME     @YL026YB 18336400
         LA    R3,TEMPNAME         POINT TO DATASET NAME       @YL026YB 18336600
         LH    R2,CURNTNAM         LOAD LENGTH OF NAME         @YL026YB 18336800
         EX    R2,MOVE             MOVE NAME TO BUFFER         @YL026YB 18337000
         B     CALLCIR             GO TO CIR                   @YL026YB 18337200
*                                                              @YL026YB 18337400
NOLEV    LA    R3,TEMPNAME         POINT TO DATA SET NAME      @YL026YA 18337600
         L     R2,STARADR          POINT TO ASTERISK           @YL026YA 18337800
         SR    R2,R3               ASTERISK DISPLACEMENT       @YL026YA 18338000
         BCTR  R2,R0               DECREMENT FOR EX INST.      @YL026YB 18338200
         EX    R2,MOVE             MOVE THE NAME TO CIR NAME   @YL026YA 18338400
*                                    BUFFER                    @YL026YA 18338600
*   SAVE THE TRAILING QUALIFIERS FOR LATER COMPARISON.         @YL026YA 18338800
*                                                              @YL026YA 18339000
         LA    R2,2(R2)           LENGTH OF NAME TO ASTERISK  @YL026YA  18339200
         CH    R2,CURNTNAM         COMPARE TO LENGTH OF NAME   @YL026YA 18339400
*   IF LENGTHS ARE EQUAL THE ASTERISK IS IN THE LAST POISITION @YL026YA 18339600
*   OF THE NAME AND THE TRAILING QUALIFIER IS STORED AS        @YL026YA 18339800
*   BLANKS; OTHERWISE, SAVE THE TRAILING QUALIFIER.            @YL026YA 18340000
         BNE   SAVEQUAL            ASTERISK NOT IN LAST LEVEL  @YL026YA 18340200
         SR    R0,R0               CLEAR REG ZERO              @YL026YB 18340400
         STH   R0,LASTQLEN         LENGTH IS ZERO              @YL026YA 18340600
         BCTR  R2,R0              DECREMENT FOR EX INST.       @YL026YB 18340800
         MVI   LASTQUAL,BLANK      BLANKS FOR TRAILING QUAL.   @YL026YA 18341000
         MVC   LASTQUAL+D1(L'LASTQUAL-L1),LASTQUAL             @YL026YA 18341200
         B     CALLCIR             GO GET LIST OF NAMES        @YL026YA 18341400
SAVEQUAL EQU   *                                               @YL026YA 18341600
         LH    R4,CURNTNAM         LENGTH OF NAME              @YL026YA 18341800
         SR    R4,R2               LENGTH OF NAME AFTER *      @YL026YA 18342000
         LA    R3,D0(R3,R2)        ADDRESS OF TRAILING PART    @YL026YA 18342200
*                                  OF NAME                     @YL026YA 18342400
         STH   R4,LASTQLEN         SAVE LENGTH                 @YL026YA 18342600
         BCTR  R4,R0               DECREMENT FOR MOVE          @YL026YA 18342800
         LA    R7,LASTQUAL         ADDRESS OF LAST QUALIFIER   @YL026YA 18343000
         EX    R4,MOVE             MOVE THE TRAILING QUALIFIER @YL026YA 18343200
         BCTR  R2,R0               DECREMENT TO ELIMINATE *    @ZA05439 18343303
CALLCIR  EQU   *                                               @YL026YA 18343400
*   NOW GET A LIST OF NAMES FROM CIR                           @YL026YA 18343600
         STH   R2,0(R13)                                       @YL026YB 18343800
         L     R15,CIRADDR         ADDRESS OF IKJEHCIR         @YL026YA 18344000
         LA    R1,CIRPARM          ADDRESS OF PARAMETER LIST   @YL026YA 18344200
         CALL  (15)                GO TO CIR                   @YL026YA 18344400
         LTR   R15,R15             TEST RETURN CODE            @YL026YA 18344600
         BNZ   CIRERROR            NON-ZERO IS ERROR           @YL026YA 18344800
         ST    R9,PARSPTR          SAVE PTR TO PARSE DSNAME    @YL026YA 18345000
         L     R9,CIRWA            GET ADDR OF CIR RETURN AREA @YL026YA 18345200
         LA    R9,D4(R9)           POINT TO FIRST TYPE/DSNAME  @YL026YA 18345400
NAMELOOK EQU   *                                               @YL026YA 18345600
*   NO ENTRY-TYPE CHECKING HERE YET.                           @YL026YA 18345800
         LA    R9,D1(R9)           POINT TO NEXT DSNAME        @YL026YA 18346000
         OI    PROCNM,CIRLIST      INDICATE PROCESSING CIR NAME         18346200
         TM    OPTMASK2,LEVEL      WAS LEVEL SPECIFIED?        @YL026YA 18346400
         BO    NAMEMOVE            YES - PROCESS EVERY NAME    @YL026YA 18346600
*                                  NO - TEST QUALIFIERS        @YL026YA 18346800
         MVC   NAMEBUFF,CIRDSN     MOVE PARTIAL NAME TO BUFFER @YL026YA 18347000
*   MOVE ONE QUALIFIER                                         @YL026YA 18347200
         LA    R3,D8               INITIALIZE LOOP INDEX TO    @YL026YA 18347400
*                                  COUNT 8 CHARACTERS          @YL026YA 18347600
         LA    R4,NAMEBUFF         ADDRESS OF NAME BUFFER      @YL026YA 18347800
         LH    R2,0(R13)           GET LENGTH OF NAME          @YL026YB 18348000
         LR    R1,R2               SAVE LENGTH                          18348200
         LA    R2,D0(R4,R2)        END OF PARTIAL NAME         @YL026YA 18348400
         LR    R5,R9               POINT TO FIRST CHARACTER OF @YL026YA 18348600
*                                  DATA SET NAME               @YL026YA 18348800
         LA    R5,D0(R5,R1)        POINT TO QUALIFIER IN       @YL026YA 18349000
*                                  ASTERISK POSITION           @YL026YA 18349200
LOOPCHAR EQU   *                                               @YL026YA 18349400
         CLI   D0(R5),BLANK        IS IT A BLANK ?             @YL026YA 18349600
         BE    ENDNAME             YES - END OF NAME - QUIT    @YL026YA 18349800
         CLI   D0(R5),PERIOD       OR A PERIOD ?               @YL026YA 18350000
         BE    ENDNAME             YES - END OF QUALIFIER      @YL026YA 18350200
         MVC   D0(L1,R2),D0(R5)    MOVE THE CHARACTER          @YL026YA 18350400
         LA    R5,D1(R5)           LOOK AT NEXT CHARACTER      @YL026YA 18350600
         LA    R2,D1(R2)           LOOK AT NEXT CHARACTER      @YL026YA 18350800
         BCT   R3,LOOPCHAR         LOOP UNTIL 8 CHARACTERS     @YL026YA 18351000
*                                  HAVE BEEN MOVED             @YL026YA 18351200
ENDNAME  LH    R4,LASTQLEN         LENGTH OF TRAILING QUALIFIERS        18351400
         LA    R4,D0(R4,R1)        PLUS LENGTH SO FAR          @YL026YA 18351600
         LA    R3,MAXDSN           MAX LENGTH OF NAME          @YL026YA 18351800
         CR    R4,R3               IS NAME TOO LONG?           @YL026YA 18352000
         BH    NAMERR              YES - PUT OUT MESSAGE       @YL026YA 18352200
         LH    R1,LASTQLEN         NO - GET LENGTH OF QUALS.   @YL026YA 18352400
         LTR   R1,R1               IS LENGTH ZERO?             @YL026YA 18352600
         BZ    NOQUAL              YES - NO QUALIFIER          @YL026YA 18352800
         BCTR  R1,R0               DECREMENT LENGTH FOR MOVE   @YL026YA 18353000
         LR    R7,R2               WHERE TO MOVE               @ZA05439 18353203
*                                  (AFTER PARTIAL NAME)        @YL026YA 18353400
         LA    R3,LASTQUAL         ADDRESS OF TRAILING QUALS   @YL026YA 18353600
         EX    R1,MOVE             MOVE IN TRAILING QUALIFIERS @YL026YA 18353800
NOQUAL   CLC   NAMEBUFF,D0(R9)     IS THIS THE NAME            @YL026YA 18354000
*                                  RETURNED BY CIR ?           @YL026YA 18354200
         BE    NAMEMOVE            YES - USE IT                @YL026YA 18354400
*   LOOK AT NEXT NAME                                          @YL026YA 18354600
NEXTCIR  EQU   *                                               @YL026YA 18354800
         LA    R9,MAXDSN(R9)       STEP PAST NAME              @YL026YA 18355000
         L     R7,CIRWA            GET ADDRESS OF WORK AREA    @YL026YA 18355200
         LH    R3,D2(R7)           GET WORK AREA LENGTH        @YL026YA 18355400
         LA    R7,D0(R7,R3)        ADDRESS OF END OF WORK AREA @YL026YA 18355600
         CR    R9,R7               IS NEXT NAME OUT OF WORK AREA?       18355800
         BL    NAMELOOK            NO - DO NEXT NAME FROM LIST @YL026YA 18356000
         XC    PROCNM,PROCNM       NO MORE NAMES - GO BACK TO  @YL026YA 18356200
*                                  DSLIST                      @YL026YA 18356400
         L     R9,PARSPTR          RESTORE DSLIST ADDRESS      @YL026YA 18356600
         B     DSNTEST             PROCESS NEXT NAME           @YL026YB 18356800
*   MOVE NAME TO CURNTNAM AND MESSAGE BUFFER                   @YL026YA 18357000
NAMEMOVE EQU   *                                               @YL026YA 18357200
         MVC   TEMPNAME,D0(R9)     MOVE NAME TO BUFFER         @YL026YA 18357400
         MVC   MSGNAME,D0(R9)      MOVE NAME TO MESSAGE BUFFER @YL026YA 18357600
         LA    R2,MAXDSN           MAXIMUM LENGTH OF NAME      @YL026YA 18357800
BLNKCT   LA    R3,TEMPNAME         ADDRESS OF NAME             @YL026YA 18358000
         LA    R3,D0(R3,R2)        ADDRESS OF NEXT CHARACTER   @YL026YA 18358200
         CLI   D0(R3),BLANK        IS THIS CHARACTER BLANK?    @YL026YA 18358400
         BNE   BLNKEND             NO - STORE LENGTH OF NON-   @YL026YA 18358600
*                                  BLANK NAME                  @YL026YA 18358800
         BCT   R2,BLNKCT           YES - LOOP UNTIL NON-BLANK  @YL026YA 18359000
*                                  CHARACTER FOUND             @YL026YA 18359200
BLNKEND  STH   R2,CURNTNAM         LENGTH OF NON-BLANK NAME    @YL026YA 18359400
         STH   R2,MSGNAMEL         TO BOTH BUFFERS             @YL026YA 18359600
         B     DEFGO               PROCESS THIS NAME            ZA02173 18359802
*                                                              @YL026YA 18360000
*   ERROR ROUTINES                                             @YL026YA 18360200
*                                                              @YL026YA 18360400
CIRERROR EQU   *                                               @YL026YA 18360600
         LA    R8,DSNTEST1           GOTO WRAPUP ROUTINE       @VS06783 18360800
         ST    R8,RETADDR          SAVE WRAPUP ADDRESS         @YL026YB 18361000
         MVI   ERR1,MSG20          MESSAGE 20 (NOT IN CATALOG) @VS06783 18361200
         B     MCOMMON3            INSERT DATA SET NAME IN MSG @YL026YA 18361400
STARER1  EQU   *                                               @YL026YA 18361600
         LA    R8,DSNTEST1         GOTO WRAPUP ROUTINE         @VS06783 18361800
         ST    R8,RETADDR          SAVE WRAPUP ROUTINE         @YL026YB 18362000
         MVI   ERR1,MSG18          INVALID USE OF ASTERISK     @YL026YA 18362200
         MVI   ERR2,SECMSG21       NOT ALLOWED IN FIRST LEVEL  @YL026YA 18362400
         B     MCOMMON3            GO PUT OUT MESSAGE          @YL026YA 18362600
STARER2  EQU   *                                               @YL026YA 18362800
         LA    R8,DSNTEST1         GOTO WRAPUP ROUTINE         @VS06783 18363000
         ST    R8,RETADDR          SAVE WRAPUP ADDRESS         @YL026YB 18363200
         MVI   ERR1,MSG18          INVALID USE OF ASTERISK     @YL026YA 18363400
         MVI   ERR2,SECMSG22       MORE THAN ONE NOT ALLOWED   @YL026YA 18363600
         B     MCOMMON3            GO PUT OUT MESSAGE          @YL026YA 18363800
LEVELER  EQU   *                                               @YL026YA 18364000
         LA    R8,WRAPUP           GOTO WRAPUP ROUTINE         @YL026YB 18364200
         ST    R8,RETADDR          SAVE WRAPUP ADDRESS         @YL026YB 18364400
         MVI   RETCODE+3,RT12      SET RETURN CODE             @ZA01485 18364503
         MVI   ERR1,MSG17          NO DSLIST WITH LEVEL        @YL026YA 18364600
         B     GOWRT               GO PUT OUT MESSAGE          @YL026YA 18364800
NAMERR   EQU   *                                                        18365000
*                                                                       18365200
*   MEMBER NAME SPECIFIED ALONE--ERROR SINCE THIS ROUTINE IS UNABLE     18365400
*   TO DETERMINE THE FULLY QUALIFIED NAME DESIRED.                      18365600
*                                                                       18365800
         LH    R1,MEMLEN(R9)       GET LENGTH OF MEMBERNAME             18366000
         L     R3,MEMADDR(R9)      GET ADDR OF MEMBERNAME               18366200
         STH   R1,CURNTNAM         SAVE LENGTH                          18366400
         BCTR  R1,R0               DECREMENT FOR EX OF MOVE             18366600
         LA    R7,TEMPNAME         AREA TO HOLD MEMBERNAME              18366800
         EX    R1,MOVE             MOVE NAME TO AREA                    18367000
         MVI   ERR1,MSG07          MESSAGE 7                            18367200
         B     RETCOM2             FILL IN REST OF MSG                  18367400
*  NOW STRIP OFF USERID AND SAVE DATA SET NAME FOR MESSAGES      A42337 18367600
DEFOK    L     R3,UPTPTR           POINT TO UPT                @YL026YB 18367800
         USING UPT,R3              ADDRESSABILITY PSCB           A42337 18368000
         SR    R1,R1               CLEAR REGISTER                A42337 18368200
         IC    R1,UPTPREFL         USERID LENGTH                 A42337 18368400
         LA    R1,D1(R1)           PLUS ONE FOR PERIOD           A42337 18380021
         DROP  R3                  PSCB NO LONGER NEEDED         A42337 18382021
         LH    R2,CURNTNAM         LENGTH OF QUALIFIED DSNAME    A42337 18384021
         LA    R7,MSGNAME          DATA SET NAME MESSAGE BUFFER  A42337 18386021
         LA    R3,TEMPNAME         QUALIFIED DATA SET NAME       A42337 18388021
         SR    R2,R1               MINUS USERID LENGTH           A42337 18388421
         STH   R2,MSGNAMEL         SAVE DATA SET NAME LENGTH     A42337 18388521
         AR    R3,R1               POINT PAST USERID             A42337 18388821
         BCTR  R2,R0               DECREMENT FOR EXECUTE         A42337 18389221
         EX    R2,MOVE             MOVE DATA SET NAME            A42337 18389621
DEFGO    MVC   CONTROL,OPTMASK     INITIALIZE CONTROL BYTE       A42337 18390021
         NI    ALLOCSW,ZERO        TURN OFF ALLOCATE SWITCH             18420000
         L     R1,$RETRY0+R9*L4    GET PTR TO PDE              @ZA06144 18428003
         TM    MEMFLAG(R1),ON      SEE IF MEM NAME WAS GIVEN   @ZA06144 18432003
         BNO   MAIN00              SKIP TURNING ON SWITCH               18436000
         OI    CONTROL,MEMNAME     TURN ON MEMBER INDICATOR             18444000
MAIN00   EQU   *                                                        18452000
         LH    R1,CURNTNAM         GET LENGTH OF NAME                   18460000
         LA    R3,TEMPNAME         POINT AT NAME TO MOVE                18468000
         BCTR  R1,R0               DECREMENT LENGTH FOR EX OF MOVE      18476000
         LA    R7,OUTBUF                                                18484000
         EX    R1,MOVE             MOVE DSNAME TO BUFFER                18492000
         LA    R14,D1(R7,R1)       POINT AT END OF NAME                 18500000
         BAL   R8,WRITE            GO WRITE THE NAME.                   18508000
*                                                                       18516000
*  ISSUE VSAM LOCATE ON THE GIVEN NAME                         @YL026YA 18524000
*                                                              @YL026YA 18532000
*  FIRST BUILD CPL AND WORKAREA                                @YL026YA 18540000
         XC    CPLAREA,CPLAREA     CLEAR AREA FOR CPL          @YL026YA 18548000
         LA    R1,CPLAREA          ADDRESSABILITY FOR CPL      @YL026YA 18556000
         USING CTGPL,R1                                        @YL026YA 18564000
         OI    CTGOPTN1,CTGNAME+CTGCNAME 44-BYTE ENTRY NAME    @YL026YA 18572000
*                                  AND CATALOG NAME            @YL026YA 18580000
         OI    CTGOPTN3,CTGLOC+CTGAM0 SET FUNCTION TO          @YL026YA 18588000
*                                  VSAM LOCATE                 @YL026YA 18596000
         LA    R2,TEMPNAME         POINT TO 44-BYTE ENTRY NAME @YL026YA 18604000
         ST    R2,CTGENT           STORE NAME ADDRESS IN CPL   @YL026YA 18612000
         LA    R2,CATBUFF          POINT TO 44-BYTE CATALOG NAME        18620000
         ST    R2,CTGCAT           STORE NAME ADDRESS IN CPL   @YL026YA 18628000
         LA    R2,CATWORK1         POINT TO WORKAREA           @YL026YA 18636000
         ST    R2,CTGWKA           STORE ADDRESS IN CPL        @YL026YA 18644000
         LA    R2,L'CATWORK1       SET WORKAREA LENGTH         @YL026YA 18652000
         STH   R2,CATWORK1         IN FIRST HALFWORD OF AREA   @YL026YA 18660000
LOCBUILD EQU   *                                               @YL026YA 18668000
         TM    OPTMASK2,CATALOG    WAS CATALOG SPECIFIED?      @YL026YA 18676000
         BO    CATPSWD             YES - GET CATALOG PASSWORD  @YL026YA 18684000
         XC    CTGCAT,CTGCAT       CLEAR CAT.NAME PTR                   18692000
         L     R2,PDSLIST+PWRDADDR NO - GET DSNAME PASSWORD    @YL026YA 18700000
         B     PSWDST                                          @YL026YA 18708000
CATPSWD  LA    R2,CIRPASS          CATALOG PASSWORD            @YL026YA 18716000
PSWDST   ST    R2,CTGPSWD          STORE ADDRESS IN CPL        @YL026YA 18724000
*                                                              @YL026YA 18732000
*  NOW BUILD THE FPL'S                                         @YL026YA 18740000
*                                                              @YL026YA 18748000
         USING CTGFL,R2                                        @YL026YA 18756000
         LA    R2,CTGFL1           POINT TO FIRST FPL          @YL026YA 18764000
         LA    R3,D1               ONE FIELD                   @YL026YA 18772000
         LA    R4,ENTYPE           POINT TO FIRST FIELD        @YL026YA 18780000
         LA    R7,CTGFIELD         POINT TO FIRST CPL SLOT     @YL026YA 18788000
         TM    OPTMASK,HISTORY     WAS HISTORY SPECIFIED?      @YL026YA 18796000
         BNO   NOHIST              NO - SKIP DATES             @YL026YA 18804000
         LA    R5,D8               8 FPLS IF HISTORY OPTION    @YL026YA 18812000
         STC   R5,CTGNOFLD         NO. OF FPLS                 @YL026YB 18820000
         B     FPLLOOP             GO BUILD FPL                @YL026YA 18828000
NOHIST   LA    R5,D6               6 FPLS IF NO HISTORY        @YL026YA 18836000
         STC   R5,CTGNOFLD         NO. OF FPLS                 @YL026YB 18844000
FPLLOOP  EQU   *                                               @YL026YA 18852000
         ST    R2,D0(R7)           STORE FPL ADDRESS IN CPL    @YL026YA 18860000
         XC    D0(CTGFL2-CTGFL1,R2),D0(R2) CLEAR FPL AREA      @YL026YA 18868000
         STC   R3,CTGFLDNO         STORE FIELD COUNT           @YL026YA 18876000
         ST    R4,CTGFLDNM         STORE FIELD NAME            @YL026YA 18884000
         LA    R2,CTGFL2-CTGFL1(R2)  POINT TO NEXT FPL         @YL026YA 18892000
         LA    R4,D8(R4)           POINT TO NEXT FIELD NAME    @YL026YA 18900000
         LA    R7,L'CTGFIELD(R7)   POINT TO NEXT SLOT IN CPL   @YL026YA 18908000
         BCT   R5,FPLLOOP          GO DO NEXT FPL              @YL026YA 18916000
*  ISSUE LOCATE                                                @YL026YA 18924000
         DROP  R1                                              @YL026YA 18932000
         DROP  R2                                              @YL026YA 18940000
         CATLG (1)                                             @YL026YA 18948000
******* RETURN FROM LOCATE IS NOT ANALYZED IN DETAIL AND NO             19020020
*       MESSAGE IS PUT OUT IF A NON ZERO RETURN CODE IS                 19050020
*       RECEIVED . THIS IS BECAUSE ALLOCATE WILL BE ISSUED              19080020
*       AND A MESSAGE PUT OUT THEN                                      19110020
*                                                                       19140020
         LTR   R15,R15             RETURN CODE ZERO SKIP ALLOCATE       19170000
         BZ    TESTTYPE            GO TEST DATA SET TYPE       @YL026YA 19180000
*                                                                       19190000
*                                                                       19200000
*  ALL VSAM DATA SETS ARE CATALOGUED,THEREFORE THIS MUST BE    @VS06171 19210000
*  A NONVSAM DATA SET.                                         @VS06171 19220000
NONVSAM  EQU   *                                               @ZA09142 19225003
         MVI   DSTYPE,CTGTALIN     FORCE NONVSAM DSTYPE        @VS06171 19230000
*********************************************************************** 19290020
*                                                                       19320020
*   A NONZERO RETURN CODE FROM LOCATE INDICATES ONLY THAT THE DSNAME    19350020
*   INFORMATION COULD NOT BE GOTTEN FROM THE CATALOG. NONE OF THE       19380020
*   RETURN CODES CONCLUSIVELY ELIMINATES THE POSSIBILITY OF THE DATA    19410020
*   SET EXISTING AND BEING ACCESSIBLE THROUGH DAIR, SO AN INFORMATIVE   19440020
*   MESSAGE IS PUT OUT INDICATING THAT THE DATASET COULD NOT BE         19470020
*   ACCESSED THROUGH THE CATALOG AND THEN DAIR IS LINKED TO.            19500020
*                                                                       19530020
*                                                                       19560020
*********************************************************************** 19590020
*********************************************************************** 19620020
*                                                                       19650020
*                                                                       19680020
*    INTERFACE WITH DAIR, CODE X'08'. GET DDNAME FROM RETURNED LIST     19710020
*    AND PUT INTO DCB SO RDJFCB CAN BE ISSUED.                          19740020
*                                                                       19770020
*                                                                       19800020
*                                                                       19830020
*                                                                       19860020
*********************************************************************** 19890020
         BAL   R8,ALLOCDS          GO ALLOCATE THE DATA SET    @YL026YA 19920000
         TM    ALLOCSW,ON          ALLOCATE OKAY                        19922020
         BO    ACODE00             GO READ JFCB                         19924020
         B     DSNTEST             GET NEXT DSNAME                      19926020
*                                                                       19928020
         EJECT                                                 @YL026YA 19929000
IKJEHALC DS    0H                                              @YL026YA 19934000
ALLOCDS  DS    0H                                              @YL026YA 19939000
*********************************************************************** 19944000
*                                                              @YL026YA 19949000
*        THIS IS A COMMON ROUTINE THAT TAKES THE CURRENT DSNAME AND     19954000
*        ALLOCATES IT BY GOING TO DAIR AT ENTRY X'08'.         @YL026YA 19959000
*                                                              @YL026YA 19964000
*********************************************************************** 19969000
*                                                              @YL026YA 19974000
         ST    R8,RETADDR          SAVE CALLERS ADDRESS        @YL026YA 19979000
*                                                              @YL026YA 19984000
*                                                              @YL026YA 19989000
ALLOCDS1 EQU   *                   ENTRY FROM RETRY            @YL026YA 19994000
         LA    R2,DAIRLIST         SET UP USE OF DSECT         @YL026YA 19999000
         USING DAPB08,R2           USE DSECT HERE              @YL026YA 20004000
*                                                              @YL026YA 20009000
         XC    DAPB08(DAIR08LN),DAPB08 ZERO PARM BLOCK         @YL026YA 20014000
         MVI   DA08DDN,BLANK       BLANK-                      @YL026YA 20019000
         MVC   DA08DDN+D1(L23),DA08DDN DDNAME, UNIT NAME, AND VOLSER    20024000
         MVC   DA08MNM(L16),DA08DDN ALSO MEMBER NAME AND PASSWORD       20029000
         MVI   DA08DSP1,DA08SHR    SET DISPOSITION OF KEEP     @YL026YA 20034000
         MVI   DA08CD+D1,DAIR08    SET ENTRY CODE              @YL026YA 20039000
         LA    R1,CURNTNAM                                     @YL026YA 20044000
         ST    R1,DA08PDSN         PTR TO CURRENT DSNAME       @YL026YA 20049000
*                                                              @YL026YA 20054000
         TM    PWFLAG(R9),HIGHBIT  TEST FOR PASSWORD           @YL026YA 20059000
         BZ    GODAIR              IF NONE GO TO DAIR          @YL026YA 20064000
         LH    R1,PWLEN(R9)        GET LENGTH OF PASSWORD      @YL026YA 20069000
         L     R3,PWOFF(R9)        GET ADDRESS OF PASSWORD     @YL026YA 20074000
         LA    R7,DA08PSWD         POINT AT PASSWORD SLOT OF DAIRLIST   20079000
         BCTR  R1,R0               DECREMENT BY ONE            @YL026YA 20084000
         EX    R1,MOVE             MOVE PASSWORD TO LIST       @YL026YA 20089000
        DROP  R2                                               @YL026YA 20094000
*                                                              @YL026YA 20099000
GODAIR   BAL   R8,MEMDAIR          LINK TO DAIR                @YL026YA 20104000
ALLOCCHK LTR   R15,R15                                         @YL026YA 20109000
         BNZ   ALLOCERR            ALLOCATE ERROR              @YL026YA 20114000
*                                                              @YL026YA 20119000
**********************************************************************  20124000
         OI    ALLOCSW,ON                                      @YL026YA 20129000
         NI    FIRSTIME,ZERO       TURN OFF FIRSTIME SWITCH    @YL026YA 20134000
ALLOCEND EQU   *                                               @YL026YA 20139000
         L     R8,RETADDR          RETURN TO CALLER            @YL026YA 20144000
         BR    R8                  RETURN                      @YL026YA 20149000
**********************************************************************  20154000
         EJECT                                                 @YL026YA 20159000
MEMDAIR  EQU   *                                               @YL026YA 20164000
*                                                              @YL026YA 20169000
         LA    R1,PUTLLIST         POINT TO PARM LIST            100000 20174000
         USING DAPL,R1             DAPL DSECT                    100000 20179000
         L     R2,UPTPTR           UPT POINTER TO-               100000 20184000
         ST    R2,DAPLUPT          DAIR PARM LIST                100000 20189000
         L     R2,ECTPTR           ECT POINTER TO-               100000 20194000
         ST    R2,DAPLECT          DAIR PARM LIST                100000 20199000
         L     R2,ECBPTR           ECB POINTER TO-               100000 20204000
         ST    R2,DAPLECB          DAIR PARM LIST                100000 20209000
         L     R2,PSCBPTR          PSCB POINTER TO-              100000 20214000
         ST    R2,DAPLPSCB         DAIR PARM LIST                100000 20219000
         LA    R2,DAIRLIST         DAIR PARM BLOCK POINTER-      100000 20224000
         ST    R2,DAPLDAPB         TO DAIR PARM LIST             100000 20229000
         DROP  R1                  DAPL NO LONGER NEEDED         100000 20234000
         LINK  EP=IKJDAIR,MF=(E,(1))                           @YL026YA 20239000
         BR    R8                   RETURN TO CALLER           @YL026YA 20244000
*                                                              @YL026YA 20249000
         EJECT                                                 @YL026YA 20254000
**********************************************************************  20259000
*                                                                    *  20264000
*    ALLOCERR ROUTINE ANALYZES NON ZERO RETURN CODES FROM ALLOCATION *  20269000
*    THIS ROUTINE IS PART OF THE ALLOCDS CLOSED SUBROUTINE           *  20274000
*                                                                    *  20279000
**********************************************************************  20284000
ALLOCERR LA    R2,DAIRLIST         SET UP ADDRESSABILITY                20289000
         USING DAPB08,R2           USING MAP MACRO                      20294000
         CLM   R15,B1,RC16         RC GREATER THAN X'10'?       ZA00612 20296002
         BH    ACODE04             YES, ANALYZE THE DAIR ERROR  ZA00612 20298002
         B     ALCCODE(R15)        CHECK RETURN CODE                    20299000
*                                                                       20304000
ALCCODE  B     ACODE00             SUCCESS                              20309000
         B     ACODE04             INVALID PARM LIST                    20314000
         B     ACODE08             NO ENTRIES AVAILABLE                 20319000
         B     ACODE12             DDNAME REQUESTED IS IN USE           20324000
         B     ACODE16             ALLOCATION FAILED                    20329000
*                                                                       20334000
ACODE04  EQU   *                                                        20339000
         MVI   ERR1,MSG13          COMMAND SYSTEM ERROR                 20344000
         MVI   ERR2,SECMSG20       DAIR ERROR CODE                      20349000
         LR    R6,R15              SAVE RETURN CODE                     20354000
         BAL   R8,CVDREG15         CONVERT CODE RTN                     20370020
         B     GOWRT               GO WRITE                             20400020
*                                                                       20430020
ACODE08  EQU   *                                                        20460020
*********RETURN CODES OF 4 8 12 16 AND 28 ARE VALID ONLY ******         20500020
         CLI   DA08CTRC+D1,D4      RC =  4 VOL NOT AVAIL                20540000
         BE    CTRC4               PUT OUT MSG                          20580000
         CLI   DA08CTRC+D1,RC28    RC 28 CAT I/O ERROR                  20620000
         BE    CTRC28              PUT OUT MSG                          20660000
******IF NOT ABOVE  USE CATCH ALL DS NOT IN CATLG*********              20700000
         MVI   ERR1,MSG01          DSNAME NOT IN CATLG                  20740000
         B     MCOMMON3            INSERT DSNAME IN MSG                 20780000
CTRC4    MVI   ERR2,SECMSG10       VOL NOT ON SYSTEM                    20820000
         MVI   ERR1,MSG10          DS NOT ALLOCATED                     20860000
         B     MCOMMON3            INSERT NAME AND PUT OUT MSG          20900000
CTRC28   MVI   ERR2,SECMSG19       CATALOG I O ERROR                    20940000
         MVI   ERR1,MSG11          DS NOT ALLOC MSG SYSTEM ERROR        20980000
         B     MCOMMON3            INSERT NAME AND PUT OUT MSG          21020000
ACODE12  EQU   *                                                        21180020
*                                                                       21210020
*    THE FOLLOWING CODE BREAKS OUT SPECIFIC DARC CODES                  21240020
*    AFTER CERTAIN RETURN CODES ARE COMPARED FOR A                      21270020
*    COMMON ERROR CODE IS PUT OUT                                       21300020
*                                                                       21330020
         LH    R1,DAIRLIST+D4      LOAD DARC CODE                       21360000
         CH    R1,C210                                                  21450020
         BE    M210                DYNAMIC ALLOCATION RC = 210          21480020
         CH    R1,C218                                                  21510020
         BE    M218                DYNAMIC ALLOCATION RC = 218          21540020
**********  THIS RTN CONVERTS THE HEX RC FROM DAIR  ************        21790020
****** AND PUTS OUT THE FIRST AND SECOND LEVEL MSG PARMS ******         21800020
         MVI   ERR2,SECMSG03       DYNAM ALLOC ERROR                    21810000
         MVI   ERR1,MSG11          SYSTEM ERROR                         21830000
HEX      LA    R5,ERRINSRT         PUT ADDRESS OF INSERT                21850000
         ST    R5,ERRINST2         INTO INSERT SLOT                     21870000
         LA    R4,DA08DARC         POINT TO DATA                        21890000
MCOM4    EQU   *                                                        21910000
         LA    R5,D2               NUMBER OF BYTES TO CONVERT           21930000
         LA    R7,ERRINSRT+D1      POINT TO OUTPUT BUFFER               21950000
         L     R10,VCONLABL        ADDRESSABILITY FOR BITOHEX           21970000
         L     R15,VCONBTHX        ADDRESS OF BITOHEX                   21990000
         BALR  R8,R15              GO CONVERT HEX CODE                  22010000
         CLI   ERRINSRT+D1,ZONE    GET RID OF LEADING ZERO              22030000
         BNE   ENDHEX              IF ANY                               22050000
         MVI   ERRINSRT+D1,BLANK   BLANK LEADING ZERO                   22070000
ENDHEX   MVI   ERRINSRT,FOURB      LENGTH OF TEXT                       22090000
         B     MCOMMON3            PUT OUT MSG AND INSERT               22110000
*                                                                       22230020
         DROP  R2                                                       22300020
*                                                                       22380020
M210     MVI   ERR2,SECMSG15       DATA SET ALLOCATED TO OTHER USER     22410000
         MVI   ERR1,MSG12          MESSAGE 12                           22450000
         B     MCOMMON2            FILL IN REST OF MSG                  22490000
M218     MVI   ERR2,SECMSG13       VOL NOT ON SY8STEM                   22530000
         MVI   ERR1,MSG10          MESSAGE 10                           22590020
*                                                                       22770020
RETCOM2  EQU   *                                                        22950020
MCOMMON2 EQU   *                   COMMON MESSAGE SEGMENT               22980020
MCOMMON3 LA    R1,MSGNAMEL+D1      GET ADDRESS OF NAME           A42337 23010021
         ST    R1,ERRINST1                                              23040020
GOWRT    BAL   R8,ERROUT           GO WRITE                             23070000
         B     DSNTEST             SEE IF MORE DSNAMES          ZA01264 23100002
ACODE16  EQU   *                                                        23130020
*                                                                       23160020
         TM    FIRSTIME,ONE        FIRST ATTEMPT TO ALLOCATE            23170020
         BNO   UNALLOC             NO THEN UNALLOCATE BY TCB            23180020
NODYNAM  NI    OPTMASK,FOXES-MEMBERS   TURN OFF MEM OPTION              23190020
*                                                                       23200020
         MVI   ERR2,SECMSG11       USE FREE COMMAND                     23220000
         MVI   ERR1,MSG08          MESSAGE 8                     A46800 23260000
         B     MCOMMON2            FILL IN REST OF MSG                  23300000
*                                                                    *  23341020
**********************************************************************  23342020
*                                                                       23343020
UNALLOC  EQU   *                                                        23344020
         MVI   FIRSTIME,ONE        SET ON TO PREVENT ALLOC LOOP         23345000
         LA    R1,DAIRLIST                                              23346020
         USING DAPB2C,R1                                                23347020
         XC    DAPB2C(DAIR2CLN),DAPB2C ZERO PARM BLOCK                  23348020
         MVI   DAPB2C+D1,DAIR2C    MOVE IN ENTRY CODE                   23348420
         L     R2,CVTPTR                ADDR OF CVT                     23349020
         USING CVTTCBP,R2               USE MAP MACRO                   23350020
         L     R3,CVTTCBP               POINTER TO TCB                  23351020
         L     R2,TCBOFF(R3)            ADDR OF CURRENT TCB             23352020
         ST    R2,DA2CTCB               STORE IN LIST                   23353020
         DROP  R1                                                       23354020
         DROP  R2                                                       23355020
         BAL   R8,MEMDAIR               SET UP DAIR PARAMETERS AND LINK 23356020
         B     ALLOCDS1            GO ALLOCATE                          23358020
*                                                                       23359020
**********************************************************************  23360020
**********************************************************************  23361020
         EJECT                                                 @YL026YA 23370000
*                                                                       23400000
ACODE00  EQU   *                                                        23430000
         OI     ALLOCSW,ON         TURN ON ALLOC SWITCH                 23460000
         LA    R2,OBTDCB                                                23490020
         USING IHADCB,R2                                                23520020
         MVC   DCBDDNAM(D8),DAIRLIST+D12  PUT DDNAME IN DCB             23550020
         DROP  R2                                                       23580020
         LA    R1,RDJL             ADDR OF RDJFCB IN DSECT              23610000
         LA    R3,OBTDCB           ADDR OF THE DCB IN THE DSECT         23640000
         RDJFCB ((R3)),MF=(E,(R1))                                      23670020
*                                                                       23700020
*                                                                       23730020
         LA    R3,JFCBVOLS         ADDR OF VOLID FROM JFCB              23760000
         ST    R3,OBTVOL                                                23790020
*                                                                       23820020
*                                                                       23850020
         OI    CONTROL,JFCB        INDICATE RDJFCB ISSUED               23880000
         B     MAIN01              GO ISSUE OBTAIN WITH VOLID JFCB      23890000
TESTTYPE EQU   *                   TEST ENTRY TYPE FOR NON-VSAM         23900000
         USING CTGFL,R3                                        @YL026YA 23910000
         OI    CONTROL,LOCATE      INDICATE LOCATE OK                   23920000
         LA    R3,CTGFL1           ADDRESSABILITY FOR ENTRY    @YL026YA 23930000
*                                  TYPE FPL                    @YL026YA 23940000
         L     R3,CTGFLPT          ADDRESS OF ENTRY TYPE       @YL026YA 23950000
         MVC   DSTYPE,D0(R3)       SAVE TYPE CODE              @YL026YA 23960000
         CLI   DSTYPE,CTGTALIN     IF TYPE IS NOT NONVSAM,     @YL026YA 23970000
         BNE   VSAMBSC             PROCESS AS VSAM CLUSTER     @YL026YA 23980000
         NI    CONTROL,FOXES-LOCATE TURN OFF SUCESS. LOCATE    @ZA09142 23990003
         B     NONVSAM             GO PROCESS AS NON-VSAM      @ZA09142 24050003
MAIN01   EQU   *                                                        24120000
         LA    R3,OBTDSNAM         GET DSNAME ADDRESS                   24130000
         ST    R3,OBTDSN           STORE IN OBTAIN LIST                 24140000
         LA    R3,OBTWORKA         WORK AREA ADDRESS                    24150000
         ST    R3,OBTWKA           PUT IN LIST                          24160000
         MVC   OBTCLST(D4),CLSTMDL   INITIALIZE OBTAIN CAMLST           24420020
*                                                                       24450020
*                                                                       24480020
         OBTAIN                    OBTCLST                              24510000
         LA    R1,D4               REG 1 = 4                            24520020
         CR    R15,R1              IS RETURN CODE = 4                   24530020
         BL    OBTOK               RC = 0 IS OK                         24540020
         BH    OBTERR              OBTAIN ERROR                         24550020
         MVI   ERR2,SECMSG13       SECOND LEVEL MESSAGE 13              24840020
         B     STSECND             FILL IN REST OF MSG                  24870000
OBTERR   EQU   *                                                        24900000
         LR    R6,R15              SAVE RETURN CODE                     24930000
         BAL   R8,CVDREG15         CONVERT RETURN CODE                  24960000
         MVI   ERR2,SECMSG02       SECOND LEVEL MESSAGE 2               24990020
STSECND  MVI   ERR1,MSG02          MESSAGE 2                            25020020
         BAL   R8,ERROUT             PUT OUT MSG                        25110020
DSNTEST  DS    0H                                                       25140020
         NI    ALLOCSW,ZERO        TURN OFF ALLOC SWITCH                25150000
         TM    PROCNM,CIRLIST      WAS NAME FROM CIR?                   25152000
         BNO   DSNTEST1            NO,PROCESS NORMALLY                  25154000
         B     NEXTCIR             PROCESS NEXT CIR ENTRY               25156000
*                                                                       25160020
*                                                                       25170020
***********************************************************             25710020
DSNTEST1 CLI   CHAINAD(R9),FOXES    TEST FOR END OF CHAIN               25740020
         BE    WRAPUP              NO, NORMAL TERMINATION.              25770000
         L     R9,CHAINAD(R9)      PICK UP ADDRESS OF NEXT PDE          25800000
         B     NXDSNAME            SCAN NEXT DSNAME                     25830000
**********************************************************              25860020
WRAPUP   EQU   *                                                        26400020
WRAPUP01 EQU   *                                                        26550020
*                                                                       26670020
* NOW CHECK IF AN ERROR HAS OCCURRED.  IF SO, THE STACK MUST BE         26680020
*  FLUSHED AND THE INPUT QUEUE CLEARED.                                 26690020
         CLI   STACKSW,SWON        IS STACK SWITCH ON                   26692020
         BNE   STACKOK             NO ERROR, END NORMALLY               26694020
         LA    R1,UPTPTR           POINT TO I/O PARAMETER LIST          26696020
         LA    R2,STACKPRM         POINT TO STACK PARM BLOCK            26698020
         ST    R2,PUTLADDR         POINT TO STACK PARM BLOCK            26698420
         STACK DELETE=ALL,MF=(E,(1)) FLUSH STACK                        26698820
         TCLEARQ INPUT             CLEAR ANYTHING TYPED AHEAD           26699220
STACKOK  EQU   *                   NORMAL RETURN FROM HERE              26699620
         L     R13,D4(R13)         RESTORE ADDRESS OF CALLERS SAVEAREA  26730000
         L     R15,RETCODE         GET RETURN CODE INTO REG 15          26780000
         RETURN                    (14,12),RC=(15) RETURN TO TMP        26830000
*                                                                       26880020
*                                                                       26910020
OBTOK    EQU   *                                                        26940020
         MVC   DSORGSV(L'DS1DSORG),DS1DSORG  SAVE DSORG TYPE            26950020
         LA    R7,OUTBUF           BUILD HEADING FOR FIRST LINE OF      26970000
         MVC   D0(L'BASICHDG,R7),BASICHDG  OUTPUT DATA                  27000000
         LA    R7,L'BASICHDG(R7)                                        27030000
         TM    CONTROL,HISTORY     WAS HISTORY SPECIFIED                27060000
         BNO   OBTOK01             NO, CHECK STATUS                     27090000
         MVC   D0(L'HISTHDG,R7),HISTHDG  YES MOVE HEADING TO BUFFER     27120020
         LA    R7,L'HISTHDG(R7)                                         27150020
OBTOK01  EQU   *                                                        27180020
         TM    CONTROL,STATUS      WAS STATUS SPECIFIED                 27210000
         BNO   OBTOK02             NO, WRITE BUFFER                     27230000
         LA    R8,DCBMDL           REG8 WILL BE BASE FOR CONSTANTS      27250000
         USING DCBMDL,R8           ADDRESSABILITY TO CONSTANTS          27270000
         MVC   D0(L'STATHDG,R7),STATHDG  MOVE HEADING TO BUFFER         27290000
         DROP  R8                  DROP ADDRESSABILITY TO CONSTANTS     27310000
         LA    R7,L'STATHDG(R7)                                         27330000
OBTOK02  EQU   *                                                        27350000
         LR    R14,R7              POINT AT END OF BUFFER DATA          27370000
         LA    R7,OUTBUF                                                27390000
         BAL   R8,WRITE            WRITES OUT THE BUFFER                27410000
         L     R15,BSCVCON         ADDRESS OF BASIC INFORMATION ROUTINE 27430000
         BALR  R14,R15             GO TO BASIC ROUTINE                  27450000
ENDBASIC EQU   *                                               @YL026YA 27470000
*********************************************************************** 27510020
*                                                                       27540020
*   THE  FOLLOWING ROUTINE CHECKS FOR THE HISTORY AND STATUS KEYWORDS   27570020
*   AND IF SPECIFIED PASSES CONTROL TO THE RESPECTIVE KEYWORD HANDLING  27600020
*   ROUTINES.  THEN THE VOLSER INFORMATION IS PUT OUT.                  27630020
*                                                                       27660020
*********************************************************************** 27690020
         TM    CONTROL,HISTORY     WAS HISTORY REQUESTED                27720000
         BNO   STATCHEK            NO, CHECK STATUS                     27750000
         L     R15,HISTVCON                                             27780000
         BALR  R14,R15             GO TO HISTORY ROUTINE                27810000
*                                                                       27840020
*                                                                       27870020
*                                                                       27900020
STATCHEK EQU   *                                                        27930020
         TM    CONTROL,STATUS      WAS STATUS REQUESTED                 27960000
         BNO   VOLROUT             NO, PUT OUT VOLUME INFORMATION       27970000
         L     R15,STATVCON        ADDRESS OF STATUS  ROUTINE           27980000
         BALR  R14,R15             GO TO STATUS ROUTINE....             27990000
VOLROUT  EQU   *                                                        28000000
         LA    R7,OUTBUF           POINT AT BUFFER                      28010000
         LA    R14,L'OUTBUF(R7)    POINT AT END OF BUFFER               28020000
         BAL   R8,WRITE            GO WRITE THE BUFFER                  28030000
         LA    R8,DCBMDL           REG 8 WILL BE BASE FOR END OF PGM    28040000
         USING DCBMDL,R8           ADDRESSABILITY TO CONSTANTS          28050000
         CLI   DSTYPE,CTGTALIN     IF ENTRY IS NONVSAM,        @YL026YA 28060000
         BE    VOLALIN             WRITE VOLSER HEADING        @YL026YA 28070000
         MVC   OUTBUF(L'VSAMVHDG),VSAMVHDG  OTHERWISE,         @YL026YA 28080000
*                                  WRITE VOLSER AND BLKSIZE    @YL026YA 28090000
         LA    R14,L'VSAMVHDG(R7)  POINT TO BUFFER             @YL026YA 28100000
         B     VOLWRT              GO WRITE                    @YL026YA 28110000
VOLALIN  EQU   *                                               @YL026YA 28120000
         MVC   OUTBUF(L'VOLHDING),VOLHDING  MOVE HEADING TO BUFFER      28130000
         DROP  R8                  DROP ADDRESSABLIITY TO CONSTANTS     28140000
         LA    R14,L'VOLHDING(R7)   ADJUST POINTERS TO WRITE BUFFER     28150000
VOLWRT   EQU   *                                               @YL026YA 28160000
         BAL   R8,WRITE            WRITE THE HEADING                    28170000
         TM    CONTROL,LOCATE      SEE IF LOCATE WAS SUCCESSFUL         28180000
         BO    VOLROUT2            IF YES, PROCESS VOLUME LIST          28190000
*********************************************************************** 28410020
*                                                                       28440020
*   IF LOCATE WAS NOT SUCCESSFUL, THEN A RDJFCB HAD TO HAVE BEEN        28470020
*   ISSUED IN ORDER TO GET THIS FAR.                                    28500020
*                                                                       28530020
*********************************************************************** 28560020
         LA    R3,D5               SET CTR FOR MAX NO. OF VOLSERS       28590000
         XR    R4,R4               CLEAR REGISTER                       28620000
         IC    D4,JFCBNVOL         GET VOLSER COUNT                     28650000
         LA    R7,OUTBUF           GET BUFFER POINTER                   28680000
         LA    R1,JFCBVOLS         POINT AT FIRST VOLSER                28710000
VOLROUT1 EQU   *                                                        28740000
         MVC   D2(L6,R7),D0(R1)    MOVE VOLSER TO BUFFER                28770000
         LA    R14,D8(R7)                                               28800000
         BAL   R8,WRITE            WRITE BUFFER                         28830000
         BCTR  R4,R0               DECREMENT ACTUAL COUNT.              28860000
         LTR   R4,R4               SEE IF COUNT IS ZERO                 28890000
         BZ    VOLEXIT             IF ZERO, ALL DONE                    28920000
         LA    R1,D6(R1)           BUMP VOLSER POINTER TO NEXT ONE      28950000
         BCT   R3,VOLROUT1         DECR MAX COUNT AND BR IF NONZERO     28980000
*********************************************************************** 29010020
*                                                                       29040020
*   MORE THAN 5 VOLSERS WAS INDICATED IN JFCB. CAN NOT READ JFCB        29070020
*   EXTENSION AND DATA SET IS NOT CATALOGED, SO MESSAGE MUST BE         29100020
*   WRITTEN TO TERMINAL INDICATING VOLUME LIST IS INCOMPLETE.           29130020
*                                                                       29160020
*********************************************************************** 29190020
         MVI   ERR1,MSG03          COMPLETE VOL LIST NOT AVAILABLE      29220000
         MVI   ERR2,SECMSG18       JFCB EXT NOT AVAILABLE               29240000
         BAL   R8,ERROUT           GO PUT OUT ERROR MESSAGE             29260000
         B     VOLEXIT             GO PROCESS NEXT KEYWORD              29280000
VOLROUT2 EQU   *                                                        29300000
         USING CTGFL,R3            ADDRESSABILITY FOR          @YL026YA 29320000
         LA    R3,CTGFL3           BLOCKSIZE FPL               @YL026YA 29340000
         L     R4,CTGFLPT          ADDRESS OF BLKSIZE LIST     @YL026YA 29360000
         LA    R3,CTGFL2           VOLUMES FPL                 @YL026YA 29380000
         L     R5,CTGFLPT          ADDRESS OF VOLUMES LIST     @YL026YA 29400000
         L     R3,CTGFLNG          LENGTH OF LIST              @YL026YA 29420000
         LTR   R3,R3               IS LENGTH ZERO?             @YL026YB 29440000
         BZ    VOLROUT5            YES, GOTO VOLROUT5          @YL026YB 29460000
         SR    R2,R2               CLEAR REG 2                 @YL026YB 29480000
         D     R2,VOLLEN           DIVIDE BY ENTRY LENGTH TO   @YL026YA 29500000
*                                  GET VOLUME COUNT            @YL026YA 29520000
*  COUNT NOW IN R3, ADDRESS IN R5                              @YL026YA 29540000
         DROP  R3                                              @YL026YA 29560000
VOLROUT4 EQU   *                                                        29580000
         MVC   D2(L6,R7),D0(R5)    MOVE VOLSER TO BUFF                  29600000
VOLROUT6 CLI   DSTYPE,CTGTALIN     IS THIS A NONVSAM DATA SET  @YL026YA 29620000
         BNE   VSAMDS              IF NOT PRINT BLKSIZE                 29640000
         LA    R14,D8(R7)          POINT AT END OF DATA                 29660000
         B     ENDBZX              GO WRITE DATA               @YL026YB 29680000
VSAMDS   EQU   *                   POINT AT END OF DATA        @YL026YA 29700000
         LA    R14,13(R7)                                               29720000
         LTR   R4,R4               IS REG 4 ZERO ?             @YL026YB 29740000
         BZ    ZERBLK              YES, GOTO ZERBLK            @YL026YB 29760000
         L     R1,D0(R4)           GET BLOCKSIZE VALUE         @YL026YA 29780000
         LTR   R1,R1               IS VALUE ZERO?              @YL026YA 29800000
         BZ    ZERBLK              YES, PRINT '**'             @YL026YA 29820000
         LA    R7,D10(R7)                                       ZA00105 29840002
         CVD   R1,WORKROOM         NO, CONVERT TO NUMBERS      @YL026YA 29860000
         UNPK  D0(D5,R7),WORKROOM(D8)                          @YL026YA 29880000
         OI    D4(R7),ZONE         CLEAR SIGN                  @YL026YA 29900000
BLOKLOOP EQU   *                                               @YL026YA 29920000
         CLI   D0(R7),ZONE         IS DIGIT ZERO?              @YL026YA 29940000
         BNE   ENDBSZ2             NO - END LOOP               @YL026YA 29960000
         MVC   D0(L5,R7),D1(R7)    SHIFT NUMBER TO LEFT        @YL026YA 29980000
         B     BLOKLOOP            CONTINUE CHECKING           @YL026YA 30000000
VOLROUT5 LA    R3,1                REG 3 EQUALS 1              @YL026YB 30020000
         B     VOLROUT6            GOTO VOLROUT6               @YL026YB 30040000
ZERBLK   MVC   D8(L'ASTER,R7),ASTER  MOVE '**' TO BUFFER       @YL026YA 30060000
ENDBSZ   EQU   *                   POINT TO END OF BUFFER      @YL026YA 30080000
ENDBZX   BAL   R8,WRITE            WRITE BUFFER                @YL026YB 30100000
         LA    R5,VOLENTLN(R5)     POINT AT NEXT VOLSER        @YL026YB 30120000
         BCT   R3,VOLROUT4         DECR CNT AND WRITE OUT NEXT VOLSER   30140000
VOLEXIT  EQU   *                                                        30160000
         CLI   DSTYPE,CTGTALIN          NONVSAM DATA SET?       ZA00105 30166002
         BNE   DSNTEST                  NO, SKIP LABEL/MEM      ZA00105 30172002
         L     R15,VCONMEM         GET ADDR OF MEMBER AND      @YL026YA 30180000
*                                  LABEL PROCESSING ROUTINE    @YL026YA 30200000
         BALR  R14,R15             GO PROCESS MEMBER NAMES,    @YL026YA 30220000
*                                  LABELS, AND MEMBERS KEYWORD @YL026YA 30240000
         B     DSNTEST             GO TEST FOR ANOTHER DSNAME TO O      30260000
ENDBSZ2  LA    R8,D10                                          @ZA06146 30280003
         SR    R7,R8                                                    30300000
         B     ENDBSZ                                                   30320000
         EJECT                                                 @YL026YA 30340000
**** * * * * * * * * * * * * * * * * * * * *                   @YL026YA 30360000
* * * * * * * * * * * * * * * * * * * * * *                    @YL026YA 30380000
* * * *THIS RTN CONVERTS RETURN CODES * * *                    @YL026YA 30400000
* * * * * * * * * * * * * * * * * * * * *                      @YL026YA 30420000
CVDREG15 DS    0H                                              @YL026YA 30440000
         CVD   R6,ERRINSRT+D8      CONVERT TO DECIMAL          @YL026YA 30460000
         UNPK  ERRINSRT+D1(L4),ERRINSRT+ERRCOD(L3)  UNPACK TWO @YL026YA 30480000
         MVI   ERRINSRT,D2         MOVE IN LENGTH OF TWO       @YL026YA 30500000
         LA    R1,ERRINSRT         PLACE INSERT ADDRESS IN     @YL026YA 30520000
         ST    R1,ERRINST2         2ND LEVEL MESSAG SLOT       @YL026YA 30540000
         BR    R8                  RETURN TO CALLER            @YL026YA 30560000
* * * * * * * * * * * * * * * * * * * * *                      @YL026YA 30580000
* * * * * * * * * * * * * * * * * * * *                        @YL026YA 30600000
         EJECT                                                          30620000
CIROUTN  CSECT                                                          30640000
**********************************************************************  30660000
*                                                              @YL026YA 30680000
*   THIS ROUTINE LOADS IKJEHCIR, ACQUIRES CORE FOR THE SAVE    @YL026YA 30700000
*   AREA AND WORK AREA, AND INITIALIZES THE PARAMETER LIST.    @YL026YA 30720000
*                                                              @YL026YA 30740000
*********************************************************************** 30760000
CIRINIT  SAVE  (14,12),,*                                               30780000
         LR    R10,R15                                                  30800000
         USING CIRINIT,R10                                              30820000
         GETMAIN R,LV=SAVELEN,SP=WORKSP                                 30840000
         ST    R13,D4(R1)          SAVE CALLERS SAVE AREA      @YL026YB 30860000
         ST    R1,D8(R13)          SAVE THIS ROUTINE SAVE AREA          30880000
         LR    R13,R1              SAVE AREA ADDRESS           @YL026YB 30900000
         LOAD  EP=IKJEHCIR                                     @YL026YA 30920000
         ST    R0,CIRADDR          SAVE THE ROUTINE'S ADDRESS  @YL026YA 30940000
         LH    R0,CIRLEN           LENGTH OF GETMAIN AREA      @YL026YB 30960000
         LR    R3,R0               SAVE LENGTH                 @YL026YB 30980000
         O     R0,SUPPL1           SET SUBPOOL NUMBER          @YL026YB 31000000
         GETMAIN R,LV=(0)                                      @YL026YA 31020000
         LTR   R15,R15             DID GETMAIN WORK?           @YL026YA 31040000
         BNZ   NOCORE              NO - ISSUE MESSAGE          @YL026YA 31060000
         LR    R4,R1               SAVE CONTENTS FOR R1        @YL026YB 31080000
         XC    D0(CIRPMLN,R1),D0(R1) CLEAR AREA                @YL026YA 31100000
         LA    R2,CIRPMLN(R1)      SAVE AREA FOLLOWS           @YL026YA 31120000
         ST    R2,CIRSAVE          PARAMETER LIST              @YL026YA 31140000
         LA    R2,RETCD52(R2)      AFTER SAVE AREA             @YL026YA 31160000
         ST    R2,CIRWA            IS WORK AREA                @YL026YA 31180000
         SR    R4,R2               LENGTH OF PARM LIST AND SAVEAREA     31200000
         LH    R3,CIRLEN           LENGTH OF GETMAIN AREA               31220000
         AR    R3,R4               LENGTH OF CIR WORKAREA      @ZA10244 31240003
         STH   R3,D0(R2)           PUT IN LENGTH FIELD OF      @YL026YA 31260000
*                                  WORK AREA                   @YL026YA 31280000
         LA    R2,CIRDSN           ADDRESS OF DSNAME BUFFER    @YL026YA 31300000
         ST    R2,CIRSRCH          TO PARAMETER LIST           @YL026YA 31320000
         OI    CIROPT,CIROPTDS     SET OPTION BYTE             @YL026YA 31340000
         TM    OPTMASK2,CATALOG    WAS A USER CATALOG NAMED?   @YL026YA 31360000
         BNO   SKIPCAT             NO - SKIP SETUP             @YL026YA 31380000
         LA    R2,CATBUFF          POINT TO NAME               @YL026YA 31400000
         ST    R2,CIRCVOL          PUT ADDRESS IN PARAMETER LIST        31420000
         LA    R2,CIRPASS          POINT TO PASSWORD           @YL026YA 31440000
         ST    R2,CIRPSWD          PUT ADDRESS IN PARAMETER LIST        31460000
         B     BANC08                                                   31480000
SKIPCAT  EQU   *                                               @YL026YA 31500000
         XC    CIRPSWD,CIRPSWD                                          31520000
         XC    CIRCVOL,CIRCVOL                                          31540000
BANC08   LR    R1,R13                                                   31560000
         L     R13,D4(R1)                                               31580000
         FREEMAIN R,LV=SAVELEN,A=(1),SP=WORKSP                          31600000
         LM    R14,R7,D12(R13)     RESTORE REGS 14 TO 7                 31620000
         LM    R9,R12,D56(R13)     RESTORE REGS 9 TO 12                 31640000
         BR    R8                  RETURN TO CALLER            @YL026YA 31660000
*                                                              @YL026YA 31680000
NOCORE   EQU   *                                               @YL026YA 31700000
         MVI   ERR1,MSG19          UNABLE TO DO GENERIC LOCATE @YL026YA 31720000
         MVI   ERR2,SECMSG06       NOT ENOUGH CORE             @YL026YA 31740000
         LA    R8,D4(R8)                                                31760000
         B     BANC08                                          @YL026YA 31780000
         EJECT                                                 @YL026YA 31800000
IKJEHBSC CSECT                                                          32670020
*********************************************************************** 32730020
*                                                                       32760020
*   THIS ROUTINE SUPPLIES THE BASIC INFORMATION THAT IS ALWAYS GIVEN    32790020
*   WITH THE LISTDS COMMAND FOR EACH SPECIFIED DATASET.  THE            32820020
*   INFORMATION THAT IS PROVIDED BY THIS ROUTINE IS AS FOLLOWS...       32850020
*     1. RECORD FORMAT (RECFM)                                          32880020
*     2. LOGICAL RECORD LENGTH (LRECL)                                  32910020
*     3. BLOCK SIZE (BLKSIZE)                                           32940020
*     4. DATA SET ORGANIZATION (DSORG)                                  32970020
*    AND BUILD THE OUTPUT DATA LINE                                     33000020
*                                                                       33030020
*********************************************************************** 33060020
BASICRT  SAVE  (14,12),,*                                               33090020
         LR    R10,R15             ESTABLISH ADDRESSABILITY             33120000
         USING BASICRT,R10                                              33150000
         USING OBTWAD,R12          WORKAREA BASE                        33180000
         GETMAIN R,LV=SAVELEN,SP=WORKSP                                 33210000
         ST    R13,D4(R1)          CHAIN WORKAREAS TOGETHER             33240000
         ST    R1,D8(R13)                                               33270000
         LR    R13,R1              NEW SAVEAREA                         33300000
         LA    R7,OUTBUF           POINT AT BUFFER                      33330000
         LA    R5,RECFMOFF(R7)     POSITION POINTER FOR RECFM           33360000
         LR    R3,R5               SAVE VALUE                   SA52667 33390000
         TM    DS1RECFM,UTYPE      CHECK FOR UNDEFINED                  33420000
         BO    RECFMU              YES, MOVE PROPER CHARACTER TO BUFFER 33450000
         BZ    TTEST1              U, V, F NOT SPECIFIED        SA52667 33480000
*                                                                       33510000
         TM    DS1RECFM,FTYPE      CHECK FIXED                          33540000
         BO    RECFMF              YES                                  33570000
*                                                                       33600020
RECFM    EQU   *                                                        33630020
         MVI   D0(R5),CHARV        MOVE IN CHARACTER V                  33660020
         B     TTEST               GO CHECK TRACK OVERFLOW              33690000
*                                                                       33730000
RECFMU   EQU   *                                                        33770000
         MVI   D0(R5),CHARU        MOVE CHAR TO BUFFER FOR UNDEFINED    33810000
         B     TTEST               GO CHECK FOR TRK OVFLW               33850000
*                                                                       33890000
RECFMF   EQU   *                                                        33930000
         MVI   D0(R5),CHARF        INDICATE FIXED                       33970000
*                                                                       34010000
TTEST    EQU   *                                                        34050000
         LA    R5,D1(R5)           INCRE BUF PTR PAST FIRST RECFM CHARA 34090000
TTEST1   TM    DS1RECFM,TOVFLOW    CHECK FOR TRACKFLOW          SA52667 34130000
         BNO   BTEST               NO, CHECK FOR BLOCKED                34170000
         MVI   D0(R5),CHART        MOVE CHARACTER TO BUFFER             34260020
         LA    R5,D1(R5)                                                34290020
BTEST    EQU   *                                                        34320020
         TM    DS1RECFM,BLOCKED    CHECK BLOCKED ATTRIBUTE              34350000
         BNO   STEST               NO, CHECK STANDARD ATTRIBUTE         34380000
         MVI   D0(R5),CHARB        INDICATE BLOCKED                     34410020
         LA    R5,D1(R5)                                                34440020
STEST    EQU   *                                                        34470020
         TM    DS1RECFM,STANDARD   CHECK FOR STANDARD OR SPANNED        34500000
         BNO   ASATEST             NO, CHECK ASA                        34520000
         MVI   D0(R5),CHARS        MOVE STANDARD TO BUFFER              34540000
         LA    R5,D1(R5)           BUMP PTR                             34560000
ASATEST  EQU   *                                                        34580000
         TM    DS1RECFM,ASA        CHECK FOR ASA                        34600000
         BNO   MACHTEST            NO, CHECK FOR MACHINE CTL CHARS      34620000
         MVI   D0(R5),CHARA        MOVE ASA CHAR TO BUFFER              34640000
         LA    R5,D1(R5)           BUMP PTR                             34660000
MACHTEST EQU   *                                                        34680000
         TM    DS1RECFM,MACHINE    CHECK MACHINE ATTRIBUTE              34700000
         BNO   TREG                NO, GO TEST LRECL            SA52667 34720000
         MVI   D0(R5),CHARM        MOVE MACHINE CNTRL CHAR TO BUFF      34740000
         LA    R5,D1(R5)           BUMP POINTER                 SA52667 34760000
TREG     CR    R3,R5               SEE IF REG. CHANGED          SA52667 34780000
         BNE   LRECLTST            GO TEST LRECL                SA52667 34800000
         MVI   D0(R5),CHARAST      INDICATE RECFM               SA52667 34820000
         MVI   D1(R5),CHARAST      NOT SPECIFIED                SA52667 34840000
LRECLTST EQU   *                                                        34860000
         LH    R1,DS1LRECL         PICK UP LRECL                        34880000
         N     R1,SIGNOFF          CLEAR POSSIBLE NEGATIVE SIGN         34900000
         LTR   R1,R1               PROPAGATED. CHECK FOR ZERO.          34920000
         BZ    NOLRECL             IF ZERO, INDICATE NO LRECL WITH **   34940000
         CVD   R1,WORKROOM                                              35040020
         UNPK  LRECLOFF(D5,R7),WORKROOM(D8)                             35070020
         OI    LRECLOFF+D4(R7),ZONE GET RID OF SIGN                     35100020
LRECLOOP EQU   *                                                        35130020
         CLI   LRECLOFF(R7),ZONE   ARE THERE HIGH ORDER ZEROES          35160000
         BNE   BLKSIZET            NO, TEST BLKSIZE                     35190000
         MVC   LRECLOFF(L5,R7),LRECLOFF+D1(R7) SHIFT NUMBER LEFT        35220000
         B     LRECLOOP            REPEAT EDIT OF LRECL                 35250000
NOLRECL  EQU   *                                                        35280020
         MVC   LRECLOFF(L'ASTERISK,R7),ASTERISK   INDICATE NO LRECL     35310020
BLKSIZET EQU   *                                                        35340020
         LH    R1,DS1BLKL          PICKUP BLOCK LENGTH                  35370000
         N     R1,SIGNOFF          CLEAR POSSIBLE NEGATIVE SIGN         35400000
         LTR   R1,R1               TEST FOR ZERO                        35430000
         BZ    NOBLKLEN            IF ZERO, PUT ** FOR NO BLKLENGTH     35460000
         CVD   R1,WORKROOM         CONVERT NUMBER                       35490000
         UNPK  BLKLOFF(L5,R7),WORKROOM(D8)    AND PLACE IN BUFFER       35520020
         OI    BLKLOFF+L4(R7),ZONE GET RID OF SIGN                      35550020
BLKLOOP  EQU   *                                                        35580020
         CLI   BLKLOFF(R7),ZONE    ARE THERE HIGH ORDER ZEROES          35610000
         BNE   DSORGTST            NO, CHECK DSORG                      35640000
         MVC   BLKLOFF(L5,R7),BLKLOFF+D1(R7) SHIFT NUMBER LEFT          35670020
         B     BLKLOOP             REPEAT EDIT OF ZEROES                35700020
NOBLKLEN EQU   *                                                        35730020
         MVC   BLKLOFF(L'ASTERISK,R7),ASTERISK                          35760020
DSORGTST EQU   *                                                        35790020
*                                                                       35820020
*                                                                       35850020
         TM    DS1DSORG,PS         IS DSORG PS                          35880000
         BO    SETPS               IF YES, BRANCH                       35910000
*                                                                       35940000
         TM    DS1DSORG,PO         IS DSORG PO                          35970000
         BO    SETPO               IF YES, BRANCH                       36000000
*                                                                       36030000
         TM    DS1DSORG,IS         IS DSORG IS                          36060000
         BO    SETIS               IF YES, BRANCH                       36090000
*                                                                       36120000
         TM    DS1DSORG,DA         IS DSORG DA                          36150000
         BO    SETDA               IF YES, BRANCH                       36180000
*                                                                       36210000
         TM    DS1DSORG,NOTID      IS AN UNIDENTIFIED BIT SET           36240000
         BZ    SETND               IF NO, BRANCH                        36270000
*                                                                       36300000
         LA    R15,UNKL            DSORG NOT IDENTIFIABLE               36330000
         LA    R14,UNK                                                  36360020
EXDSORGM EQU   *                                                        36390020
         LA    R5,OUTBUF+DSORGOFF    POINT AT DSORG FIELD               36420020
         BCTR  R15,R0              DECREEENT FOR EX OF MOVE             36450000
         EX    R15,DSORGMV         MOVE DSORG TO BUFFER                 36470000
         LA    R5,D1(R5,R15)       POINT BEYOND DSORG IN BUFFER         36490000
         TM    DS1DSORG,UNMV       CHECK DSCB FOR UNMOVABLE ATTRIBUTE   36510000
         BZ    DSORGEXT            EXIT FROM DSORG PROCESSING           36530000
         MVI   D0(R5),UNMVABLE     UNMOVABLE ATTRIBUTE.                 36550000
         B     DSORGEXT            EXIT FROM ROUTINE                    36570000
*                                                                       36590000
SETPS    LA    R15,SEQL            DSORG WAS SEQUENTIAL                 36610000
         LA    R14,SEQ                                                  36630000
         B     EXDSORGM            GO MOVE DSORG TO BUFFER              36650000
*                                                                       36670000
SETPO    LA    R15,PDSL            DSORG WAS PARTITIONED                36690000
         LA    R14,PDS                                                  36710000
         B     EXDSORGM            GO MOVE DSORG TO BUFFER              36730000
*                                                                       36750000
SETIS    LA    R15,ISEQL           DSORG WAS INDEXED SEQUENTIAL         36770000
         LA    R14,ISEQ                                                 36790000
         B     EXDSORGM            GO MOVE DSORG TO BUFFER              36810000
*                                                                       36830000
SETDA    LA    R15,DAL             DSORG WAS DIRECT (BDAM)              36850000
         LA    R14,DIRECT                                               36870000
         B     EXDSORGM            GO MOVE DSORG TO BUFFER              36890000
*                                                                       36910000
SETND    LA    R15,UNDEFL          DSORG WAS NOT DEFINED                36930000
         LA    R14,UNDEF                                                36950000
         B     EXDSORGM            GO MOVE DSORG TO BUFFER              36970000
DSORGEXT EQU   *                                                        36990000
         MVC   WRKCREDT,DS1CREDT   MOVE CREATE DATE TO COMMON  @YL026YA 37010000
         MVC   WRKEXPDT,DS1EXPDT   MOVE EXPIR. DATE TO COMMON  @YL026YA 37030000
         LR    R1,R13              SAVE DYNAMIC AREA ADDRESS            37050000
         L     R13,D4(R1)          CALLERS SAVEAREA                     37070000
         FREEMAIN R,LV=SAVELEN,A=(1),SP=WORKSP                          37090000
         RETURN                    (14,12)                              37110000
*                                                                       37130000
DSORGOFF EQU   22                  OFFSET TO DSORG FIELD                37150000
RECFMOFF EQU   2                   OFFSET TO RECFM FIELD IN BUFFER      37170000
UTYPE    EQU   X'C0'               MASK FOR UNDEFINED                   37190000
FTYPE    EQU   X'80'               MASK FOR FIXED                       37210000
TOVFLOW  EQU   X'20'               TRACK OVERFLOW MASK                  37230000
BLOCKED  EQU   X'10'               BLOCKED ATTRIBUTE MASK               37250000
STANDARD EQU   X'08'               STANDARD BLOCKED (F), OR SPANNED (V) 37270000
ASA      EQU   X'04'               ASA CONTROL CHARACTER                37290000
MACHINE  EQU   X'02'               MACHINE CONTROL CHARACTER            37310000
LRECLOFF EQU   8                   OFFSET TO LRECL FIELD IN BUFFER      37330000
BLKLOFF  EQU   14                  OFFSET TO BLKSIZE FIELD IN BUFFER    37350000
PS       EQU   X'40'               SEQUENTIAL                           37370000
PO       EQU   X'02'               PARTITIONED                          37390000
IS       EQU   X'80'               INDEXED SEQ                          37410000
DA       EQU   X'20'               DIRECT                               37430000
NOTID    EQU   X'1C'               THESE BITS RESERVED IN DSORG         37450000
UNMVABLE EQU   C'U'                UNMOVABLE ATTRIBUTE                  37470000
ASTERISK DC    C'**'               DOUBLE ASTERIKS NO LRECL             37490000
DSORGMV  MVC   D0(D0,R5),D0(R14)   USED WITH EXECUTE CMND               37510000
SEQ      DC    C'PS'               SEQUENTIAL DATA SET ORG              37530000
SEQL     EQU   L'SEQ               LENGTH OF CONSTANT SEQ               37550000
PDS      DC    C'PO'               PARTITIONED DATA SET ORG             37570000
PDSL     EQU   L'PDS               LENGTH OF CONSTANT PDS               37590000
ISEQ     DC    C'IS'               INDEXED SEQUENTIAL                   37610000
ISEQL    EQU   L'ISEQ              LENGTH OF IS CONSTANT                37630000
DIRECT   DC    C'DA'               DIRECT ACCESS                        37650000
DAL      EQU   L'DIRECT            LENGTH OF DA CONSTANT                37670000
UNDEF    DC    C'**'               DSORG NOT SPECIFIED                  37690000
UNDEFL   EQU   L'UNDEF                                                  37710000
UNK      DC    C'??'               DSORG NOT RECOGNIZED                 37730000
UNKL     EQU   L'UNK                                                    37750000
UNMV     EQU   X'01'               UNMOVEABLE BIT                       37770000
         DS    0F                  ALIGN WORD BOUNDRY                   38380020
SIGNOFF  DC    X'0000FFFF'         MASK TO TURN OFF HIGH HALF WORD      38390020
         EJECT                                                          38400020
IKJEHLBL CSECT                                                          38460020
*********************************************************************** 38490020
*                                                                       38520020
*   THIS ROUTINE IS ENTERED IF THE LABEL KEYWORD IS SPECIFIED ON THE    38550020
*   ENTERED COMMAND.  THE FORMAT 1 DSCB HAS TO BE AVAILABLE NOW BY      38580020
*   NECESSITY OF THE BASIC FUNCTION OF THE COMMAND.  A HEADING IS PUT   38610020
*   TO THE TERMINAL AND THEN THE DSCB IS FORMATTED AND OUTPUT ONE LINE  38640020
*   AT A TIME.  THE FORMATTING CONSISTS OF PUTING A BLANK BETWEEN EVERY 38670020
*   FIELD IN THE DSCB.  IF THE LINK ADDRESS IS NONZERO, THEN THE NEXT   38700020
*   DSCB IS READ VIA THE OBTAIN MACRO AND IF IT IS THE FORMAT 3, IT IS  38730020
*   FORMATTED IN A SIMILAR FASHION AS MENTIONED ABOVE.  IF IT IS OTHER  38760020
*   THAN THE FORMAT 3, IT IS JUST DUMPED IN HEXIDECIMAL, 36 (ACTUAL)    38790020
*   BYTES AT A TIME.  THE ENTIRE CHAIN IS PUT OUT BEFORE PROCESSING IS  38820020
*   IS COMPLETE.                                                        38850020
*                                                                       38880020
*********************************************************************** 38910020
         ENTRY IKJEHBTX                                                 38940020
LABELRT  SAVE  (14,12),,*                                               38970020
         LR    R10,R15             ESTABLISH BASE REGISTER              39000020
         USING LABELRT,R10                                              39030020
         USING OBTWAD,R12          WORK AREA BASE                       39060000
         GETMAIN R,LV=SAVELEN,SP=WORKSP   GET A SAVE AREA               39090000
         ST    R13,D4(R1)          FORWARD                              39120000
         ST    R1,D8(R13)          AND                                  39150000
         LR    R13,R1              BACKWARD CHAIN.                      39180000
         LA    R7,OUTBUF           POINT AT BUFFER                      39210000
         LR    R14,R7                                                   39240000
         L     R15,VCONWRTE        ADDRESS OF WRITE ROUTINE             39270000
         BALR  R8,R15              GO WRITE BUFFER                      39300000
         MVC   D0(L'FORMAT1,R7),FORMAT1  MV FORMAT 1 HEADING TO BUFFER  39330000
         LA    R14,L'FORMAT1(R7)                                        39360000
         L     R15,VCONWRTE        ADDRESS OF WRITE ROUTINE             39390000
         BALR  R8,R15              GO WRITE BUFFER                      39420000
         LA    R4,DS1FMTID         POINT TO DATA TO CONVERT             39450000
         LA    R5,MAXNUM           MAXIMUM COUNT FOR THIS CONVERSION    39480000
         LA    R7,LABELHEX         CONVERSION AREA ADDRESS              39510000
         BAL   R8,BITOHEX          GO CONVERT IT.                       39540000
         MVC   OUTBUF(IDLEN),LABELHEX        IDENTIFIER                 39570020
         MVC   OUTBUF+NSNOFF(SNLEN),LABELHEX+SNOFF SERIAL NUMBER        39600020
         MVC   OUTBUF+NVSOFF(VSLEN),LABELHEX+VSOFF VOLUME SEQUENCE      39630020
         MVC   OUTBUF+NCDOFF(CDLEN),LABELHEX+CDOFF CREATION DATE        39660020
         MVC   OUTBUF+NEDOFF(EDLEN),LABELHEX+EDOFF EXPIRATION DATE      39690020
         MVC   OUTBUF+NNEOFF(NELEN),LABELHEX+NEOFF NUMBER OF EXTENTS    39720020
         MVC   OUTBUF+NNOBDBOF(NOBDBLEN),LABELHEX+NOBDBOFF DS1NOBDB     39750020
         MVC   OUTBUF+NRESOFF1(RESLEN1),LABELHEX+RESOFF1 RESERVED       39780020
         MVC   OUTBUF+NSYSCDOF(SYSCDLEN),LABELHEX+SYSCDOFF DS1SYSCD     39810020
         LA    R7,OUTBUF           PUT BUFFER OUT TO TERMINAL           39840000
         LA    R14,NSYSCDOF+SYSCDLEN(R7)  END OF DATA IN BUFFER         39870000
         L     R15,VCONWRTE        ADDRESS OF WRITE ROUTINE             39900000
         BALR  R8,R15              GO WRITE BUFFER                      39930000
         LA    R4,DS1SYSCD+L'DS1SYSCD POINT AT NEXT DATA TO CONVERT     39960000
         LA    R5,MAXNUM           SET UP MAXIMUM COUNT TO CONVERT      39990000
         LA    R7,LABELHEX         POINT TO RECEIVING AREA              40020000
         BAL   R8,BITOHEX          CONVERT                              40050000
         MVC   OUTBUF(RESLEN2),LABELHEX     RESERVED AREA               40080020
         MVC   OUTBUF+NDSORGOF(DSORGLEN),LABELHEX+DSORGOF  DSORG FIELD  40110020
         MVC   OUTBUF+NRECFMOF(RECFMLEN),LABELHEX+RECFMOF  RECFM FIELD  40140020
         MVC   OUTBUF+NOPTCDOF(OPTCDLEN),LABELHEX+OPTCDOFF OPTCD FIELD  40170020
         MVC   OUTBUF+NBLKLOF(BLKLLEN),LABELHEX+BLKLOF    BLKL FIELD    40200020
         MVC   OUTBUF+NLRECLOF(LRECLLEN),LABELHEX+LRECLOF  LRECL FIELD  40230020
         MVC   OUTBUF+NKEYLOFF(KEYLLEN),LABELHEX+KEYLOFF   KEYL FIELD   40260020
         MVC   OUTBUF+NRKPOFF(RKPLEN),LABELHEX+RKPOFF      RKP  FIELD   40290020
         MVC   OUTBUF+NDSINDOF(DSINDLEN),LABELHEX+DSINDOFF DSIND FIELD  40320020
         MVC   OUTBUF+NSCALOOF(SCALOLEN),LABELHEX+SCALOOFF SCALO FIELD  40350020
         MVC   OUTBUF+NLSTAROF(LSTARLEN),LABELHEX+LSTAROFF LSTAR FIELD  40380020
         MVC   OUTBUF+NTRBALOF(TRBALLEN),LABELHEX+TRBALOFF TRBAL FIELD  40410020
         MVC   OUTBUF+NRESOFF3(RESLEN3),LABELHEX+RESOFF3 RESRVD FIELD   40440020
         LA    R7,OUTBUF           WRITE                                40470000
         LA    R14,NRESOFF3+RESLEN3(R7) END OF DATA IN BUFFER           40500000
         L     R15,VCONWRTE        ADDRESS OF WRITE ROUTINE             40530000
         BALR  R8,R15              GO WRITE BUFFER                      40560000
         LA    R4,DS1EXT1          SETUP TO CONVERT                     40590000
         LA    R5,MAXNUM           REMAINING DATA.                      40620000
         LA    R7,LABELHEX                                              40650000
         BAL   R8,BITOHEX          GO TO CONVERT.                       40680000
         MVC   OUTBUF(EXT1LEN),LABELHEX   FIRST EXTENT                  40710020
         MVC   OUTBUF+NEXT2OFF(EXT2LEN),LABELHEX+EXT2OFF SECOND EXTENT  40740020
         MVC   OUTBUF+NEXT3OFF(EXT3LEN),LABELHEX+EXT3OFF THIRD EXTENT   40770020
         MVC   OUTBUF+NPTRDSOF(PTRDSLEN),LABELHEX+PTRDSOFF PTRDS FIELD  40800020
         LA    R7,OUTBUF           POINT AT BUFFER                      40830000
         LA   R14,NPTRDSOF+PTRDSLEN(R7)   END OF BUFFER POINTER         40860000
         L     R15,VCONWRTE        ADDRESS OF WRITE ROUTINE             40890000
         BALR  R8,R15              GO WRITE BUFFER                      40920000
ZEROCHCK CLC   DS1PTRDS,ZEROES     CHECK FOR OTHER DSCB ON CHAIN        40950000
*************************************************                       40980020
*******CONTINUE CHECKING FOR MORE DSCBS**********                       41010020
*******IF NONE EXIT FROM ROUTINE      ***********                       41040020
*************************************************                       41070020
         BE    LABELEXT            GO EXIT FROM THIS ROUTINE            41100000
         MVC   OBTCLST(D4),CAMLSTSK  SETUP FOR OBTAINING NEXT DSCB      41130000
         MVC   OBTCCHHR,DS1PTRDS   MOVE CHAIN CCHHR TO SAVE AREA        41160000
         LA    R1,OBTCCHHR         POINT AT CCHHR OF NEXT BLOCK         41190000
ZEROCHK1  EQU  *                                                        41220000
         ST    R1,OBTCLST+D4       AND PLACE IN CAMLST                  41250000
         LR    R14,R7              SKIP                                 41280000
         L     R15,VCONWRTE        ADDRESS OF WRITE ROUTINE             41310000
         BALR  R8,R15              GO WRITE BUFFER                      41340000
*                                                                       41370020
*                                                                       41400020
****** DO OBTAIN AT THIS POINT TO READ DSCB***                          41430020
*                                                                       41460020
*                                                                       41490020
         OBTAIN                    OBTCLST                              41520000
         LTR   R15,R15             TEST RETURN CODE                     41550000
         BZ    LABELOK             IF GOOD, GO PROCESS                  41580000
         LA    R1,MSG06            INDICATE FIRST LEVEL MESSAGE         41610000
         STH   R1,ERRPARM          STORE CODE IN PARAMETER LIST         41640000
         LA    R1,SECMSG02         GET SECOND LEVEL MESSAGE CODE        41670000
         STH   R1,ERRSECND         SAVE IT                              41700000
         CVD   R15,ERRINSRT+D8     CONVERT RC TO DECIMAL                41730000
        UNPK  ERRINSRT+D1(D2),ERRINSRT+D8(D8)  UNPACK                   41760000
         OI    ERRINSRT+D2,ZONE    GET RID OF SIGN                      41790000
         LA    R1,D2               LENGTH OF DATA                       41820000
         STC   R1,ERRINSRT         PLACE BEFORE DATA                    41850000
         LA    R1,ERRINSRT         PLACE ADDRESS OF DATA IN SLOT        41880000
         ST    R1,ERRINST2         FOR SECOND LEVEL MESSAGE             41910000
         LR    R1,R13              SAVE DYNAMIC AREA ADDRESS            41940000
         L     R13,D4(R1)          CALLERS SAVE AREA                    41970000
         L     R2,VCONERRT         ADDRESS OF ERROUT                    42000000
         L     R3,D12(R13)         GET NORMAL RETURN                    42030000
         ST    R2,D12(R13)         SAVE IN SAVE AREA NORMAL RETURN SLOT 42060000
         ST    R3,RETCD52(R13)     SET RETURN FROM ERROUT NORMAL        42090000
LABELEND EQU *                                                          42120000
         FREEMAIN R,LV=SAVELEN,A=(1),SP=WORKSP                          42150000
         LM    R14,R12,D12(R13)    RESTORE REGISTERS                    42180000
         BR    R14                 RETURN TO CALLER                     42210000
LABELOK  EQU   *                                                        42240000
         CLI   LABELID,FOX3        CHECK FOR FORMAT 3                   42270000
         BNE   LABEL02             NO,  GO PROCESS UNKNOWN FORMAT       42300000
         MVC   OUTBUF(L'FORMAT3),FORMAT3  MOVE HEADING TO BUFFER        42330000
         LA    R7,OUTBUF                                                42360000
         LA    R14,L'FORMAT3(R7)   POINT BEYOND HEADING                 42390000
         L     R15,VCONWRTE        ADDRESS OF WRITE ROUTINE             42420000
         BALR  R8,R15              GO WRITE BUFFER                      42450000
*                                                                       42510020
**********CONVERT LABEL ROUTINE  **************                         42540020
*                                                                       42570020
         LA    R7,LABELHEX         SETUP                                42600000
         LA    R4,OBTWORKA         TO                                   42630000
         LA    R5,MAXNUM2          CONVERT LABEL.                       42660000
         BAL   R8,BITOHEX          CONVERT TO PRINTABLE HEX             42690000
         MVC   OUTBUF(KEYIDLEN),LABELHEX    KEY IDENTIFER               42720020
         MVC   OUTBUF+NF3OFF1(F3EXTLEN),LABELHEX+F3OFF1 EXTENT 1        42750020
         MVC   OUTBUF+NF3OFF2(F3EXTLEN),LABELHEX+F3OFF2 EXTENT 2        42780020
         MVC   OUTBUF+NF3OFF3(F3EXTLEN),LABELHEX+F3OFF3 EXTENT 3        42810020
         LA    R7,OUTBUF           POINT AT BUFFER                      42840000
        LA    R14,NF3OFF3+F3EXTLEN(R7) END OF DATA                      42870000
         L     R15,VCONWRTE        ADDRESS OF WRITE ROUTINE             42900000
         BALR  R8,R15              GO WRITE BUFFER                      42930000
         LA    R7,LABELHEX         CONVERT                              42960000
         LA    R4,LABLOFF1         ANOTHER                     @YL026YA 42990000
         LA    R5,MAXNUM2          BLOCK OF DATA.                       43020000
         BAL   R8,BITOHEX          GO CONVERT DATA                      43050000
         MVC   OUTBUF(F3EXTLEN),LABELHEX  EXTENT 4                      43080000
         MVC   OUTBUF+NF3OFF4(F3IDLEN),LABELHEX+F3OFF4 ID BYTE @YL026YA 43110000
         MVC   OUTBUF+NF3OFF5(F3EXTLEN),LABELHEX+F3OFF5 EXTENT 5        43140000
         MVC   OUTBUF+NF3OFF6(F3EXTLEN),LABELHEX+F3OFF6 EXTENT 6        43170000
         LA    R7,OUTBUF           POINT AT BUFFER                      43200000
         LA    R14,NF3OFF6+F3EXTLEN(R7) END OF BUFFER                   43230000
         L     R15,VCONWRTE        ADDRESS OF WRITE ROUTINE             43260000
         BALR  R8,R15              GO WRITE BUFFER                      43290000
         LA    R7,LABELHEX         CONVERT                              43320000
         LA    R4,LABLOFF2         ANOTHER                     @YL026YA 43350000
         LA    R5,MAXNUM2          BLOCK OF DATA                        43380020
         BAL   R8,BITOHEX           TO PRINTABLE HEXADECIMAL.           43410020
         MVC   OUTBUF(F3EXTLEN),LABELHEX  EXTENT 7                      43440020
         MVC   OUTBUF+NF3OFF7(F3EXTLEN),LABELHEX+F3OFF7 EXTENT 8        43470020
         MVC   OUTBUF+NF3OFF8(F3EXTLEN),LABELHEX+F3OFF8 EXTENT 9        43500020
         LA    R7,OUTBUF           POINT AT BUFFER                      43530000
         LA    R14,NF3OFF8+F3EXTLEN(R7) END OF BUFFER          @YL026YA 43560000
         L     R15,VCONWRTE        ADDRESS OF WRITE ROUTINE             43590000
         BALR  R8,R15              GO WRITE BUFFER                      43620000
         LA    R7,LABELHEX         CONVERT                              43650000
         LA    R4,LABLOFF3         MORE                                 43680000
         LA    R5,MAXNUM2          DATA.                                43710000
         BAL   R8,BITOHEX          GO TO CONVERT ROUTINE                43740000
         MVC   OUTBUF(F3EXTLEN),LABELHEX  EXTENT 10                     43770020
         MVC   OUTBUF+NF3OFF7(F3EXTLEN),LABELHEX+F3OFF7 EXTENT 11       43800020
         MVC   OUTBUF+NF3OFF8(F3EXTLEN),LABELHEX+F3OFF8 EXTENT 12       43830020
         LA    R7,OUTBUF           OUTPUT                               43860000
         LA    R14,NF3OFF8+F3EXTLEN(R7) THE                    @YL026YA 43890000
         L     R15,VCONWRTE        ADDRESS OF WRITE ROUTINE             43920000
         BALR  R8,R15              GO WRITE BUFFER                      43950000
         LA    R7,LABELHEX         CONVERT                              43980000
         LA    R4,LABLOFF4         LAST                        @YL026YA 44010000
         LA    R5,MAXNUM3          FIELDS OF                            44040000
         BAL   R8,BITOHEX          FORMAT 3.                            44070000
         MVC   OUTBUF(F3EXTLEN),LABELHEX  EXTENT 13                     44100000
         MVC   OUTBUF+NF3OFF7(PTRDSLEN),LABELHEX+F3OFF7 PTRDS FIELD     44130000
         LA    R7,OUTBUF           BUFFER                               44160000
         LA    R14,NF3OFF7+PTRDSLEN(R7) END OF DATA                     44190000
         L     R15,VCONWRTE        ADDRESS OF WRITE ROUTINE             44220000
*                                                                       44250020
*                                                                       44280020
*******AT THIS POINT WRITE THE DATA AND EXIT THE ROUTINE**              44310020
*                                                                       44340020
         BALR  R8,R15              GO WRITE BUFFER                      44370000
LABELEXT EQU  *                                                         44400000
         LR    R1,R13              SAVE DYNAMIC AREA                    44430000
         L     R13,D4(R1)          CALLERS SAVEAREA                     44460000
         B     LABELEND             FREE UP STORAGE AND RETURN          44490020
LABEL02  EQU   *                                                        44520020
         MVC   OUTBUF(L'FORMAT2),FORMAT2  MOVE HEADING TO BUFFER        44550020
         MVC   OUTBUF+IDOFF(L1),LABELID    PUT FORMAT ID IN HEADING     44580020
         LA    R7,OUTBUF           POINT TO BUFFER                      44610020
         LA    R14,L'FORMAT2(R7)   END OF DATA                          44640020
         L     R15,VCONWRTE        ADDRESS OF WRITE ROUTINE             44670000
         BALR  R8,R15              GO WRITE BUFFER                      44700000
         LA    R4,OBTWORKA         POINT AT START OF DSCB               44730000
LABELOOP EQU   *                                                        44760000
         LA    R5,MAXNUM2          SET AMOUNT TO BE CONVERTED           44790000
         LA    R7,OUTBUF           POINT TO RECEIVING AREA              44820000
         BAL   R8,BITOHEX             CONVERTS BINARY TO HEX            44850000
         LA    R7,OUTBUF           POINT AT BUFFER                      44880000
         LA    R14,EOBUFF1(R7)     END OF BUFFER               @YL026YA 44910000
         L     R15,VCONWRTE        ADDRESS OF WRITE ROUTINE             44940000
         BALR  R8,R15              GO WRITE BUFFER                      44970000
*                                                                       45000020
*    BITOHEX BUMPS REG 4 BY 4 EACH TIME IT GOES THROUGH THE PROCESS     45030020
*    LOOP SO THAT WHEN WE GET CONTROL BACK IT SHOULD BE POINTING AT     45060020
*    THE NEXT DATA TO CONVERT. THIS WILL BE TRUE ONLY IF THE DATA       45090020
*    COUNT IS A MULTIPLE OF 4, IN THIS CASE 36. OTHERWISE THE POINTER   45120020
*    WOULD BE OFF A COUPLE OF BYTES.                                    45150020
*                                                                       45180020
         LA    R4,FOUR(R4)         BUMP PTR NEXT DATA TO CONVERT        45210000
         LA    R1,LABLOFF5         POINT AT END OF 36 BYTE MULTIPLES    45230000
         CR    R4,R1               SEE IF ALL 36-BYTE CHUNKS ARE DONE   45250000
         BL    LABELOOP            NO, GO DO ANOTHER ONE.               45270000
         LA    R5,MAXNUM4          SET COUNT TO REMAINDER               45290000
         LA    R7,OUTBUF           POINT AT BUFFER                      45310000
         BAL   R8,BITOHEX          CONVERT REMAINING DATA               45330000
         LA    R7,OUTBUF           POINT AT BUFFER                      45350000
         LA    R14,EOBUFF1(R7)     END OF BUFFER               @YL026YA 45370000
         L     R15,VCONWRTE        ADDRESS OF WRITE ROUTINE             45390000
         BALR  R8,R15              GO WRITE BUFFER                      45410000
         CLC   LBLCHAIN(L'DS1PTRDS),ZEROES SEE IF CCHHR OF NEXT IS 0.   45430000
         BE    LABELEXT            NO, GO EXIT                          45450000
         MVC   OBTCLST(D4),CAMLSTSK   SETUP CAMLST CODE                 45470000
         MVC  OBTCCHHR,LBLCHAIN     SAVE CCHHR                          45490000
         LA    R1,OBTCCHHR         POINT AT CCHHR                       45510000
         B     ZEROCHK1            GO ISSUE OBTAIN                      45530000
IKJEHBTX DS    0H                                                       45710020
BITOHEX  EQU   *                                                        45730020
*********************************************************************** 45750020
*                                                                       45780020
*    THIS ROUTINE CONVERTS BINARY DATA TO HEXIDECIMAL REPRESENTATION    45810020
*    FOR OUTPUT TO A TERMINAL.                                          45840020
*         INPUT IS AS FOLLOWS.                                          45870020
*                                                                       45900020
*                 R4 - POINTS TO DATA TO CONVERT                        45930020
*                 R5 - CONTAINS LENGTH OF DATA IN BYTES                 45960020
*                 R7 - POINTS TO OUTPUT AREA FOR CONVERTED DATA         45990020
*                                                                       46020020
*        R2 AND R3 ARE USED FOR LOGICAL OPERATIONS                      46050020
*                                                                       46080020
*********************************************************************** 46110020
         AR    R5,R5               DOUBLE COUNT TO CORRESPOND TO OUTPUT 46140000
         XR    R3,R3               CLEAR REG TO HOLD DATA               46170000
BILOOP01 LA    R1,CONVCNT          NUMBER OF HALF BYTES TO CONVERT      46200000
         MVC   ALIGN(FOUR),D0(R4)   ALIGN FOUR BYTES TO CONVERT         46230000
         L     R3,ALIGN            PUT FOUR BYTES INTO ODD REGISTER     46260000
BILOOP02 XR    R2,R2                                                    46290000
         SLDL  R2,FOUR             GET NEXT 4 BITS TO CONVERT TO HEX    46320000
         IC    R0,TRANSTAB(R2)     GET PROPER CHARACTER                 46350000
         STC   R0,D0(R7)           PLACE IN OUT AREA                    46380000
         LA    R7,D1(R7)           UPDATE OUT AREA POINTER BY ONE       46410000
         BCTR  R5,R0               DECREMENT COUNT BY ONE               46440000
         LTR   R5,R5               ARE THERE MORE BYTES TO CONVERT      46470000
         BCR   CONDZERO,R8         IF ZERO, RETURN TO CALLER            46500000
         BCT   R1,BILOOP02         DECREMENT LOOP COUNT AND GO AGAIN    46530000
         LA    R4,FOUR(R4)         IF ZERO, POINT AT NEXT BYTES         46560000
         B     BILOOP01            GET NEXT FOUR BYTES TO CONVERT       46590000
CAMLSTSK CAMLST SEEK,1,2,3                                              46620020
********************************************                            46650020
******THE FOLLOWING TABLE IS USED FOR THE **                            46680020
******TRANSLATE INSTRUCTION FOR CONVERTING**                            46710020
******BINARY TO HEX REPRESENTATION *********                            46740020
********************************************                            46770020
TRANSTAB DC    C'0123456789ABCDEF' TRANSLATE TABLE FOR BITOHEX ROUTINE  46970020
ZEROES   DC    5X'00'              FIVE BYTES OF ZEROES                 47280000
FORMAT1  DC    C'--FORMAT 1 DSCB--'         HEADING FOR LABEL COMMAND   47310020
FORMAT2  DC    C'--FORMAT 2 DSCB--'         HEADING FOR LABEL COMMAND   47340020
FORMAT3  DC    C'--FORMAT 3 DSCB--'         HEADING FOR LABEL COMMAND   47370020
VCONWRTE DC    V(IKJEHWRT)         ADDRESS OF WRITE ROUTINE             47400000
VCONERRT DC    V(IKJEHERR)         ADDRESS OF ERROR ROUTINE             47430000
         EJECT                                                          47460020
IKJEHHIS CSECT                                                          47520020
*********************************************************************** 47550020
*                                                                       47580020
*    THIS ROUTINE GETS CONTROL IF THE HISTORY KEYWORD IS SPECIFIED.     47610020
*    THE REQUIRED INFORMATION IS COLLECTED FROM THE DSCB THAT IS        47640020
*    AVAILABLE AT THIS TIME SINCE IT IS REQUIRED FOR THE BASIC FUNCTION 47670020
*    OF THE COMMAND. THE INFORMATION WHICH IS REFERENCED THROUGH DSECT  47700020
*    OBTWAD IS AS FOLLOWS.                                              47730020
*                  1. CREATION DATE                                     47760020
*                  2. EXPIRATION DATE                                   47790020
*                  3. SECURITY (PASSWORD) INFORMATION                   47820020
*                                                                       47850020
*********************************************************************** 47880020
HISTROUT SAVE (14,12),,*                                                47940020
         LR    R10,R15             ESTABLISH ADDRESSABILITY             47970000
         USING HISTROUT,R10                                             47990000
         USING OBTWAD,R12          WORKAREA BASE                        48010000
         GETMAIN R,LV=SAVELEN,SP=WORKSP  GET SAVEAREA FOR THIS ROUTINE  48030000
         ST    R13,D4(R1)          CHAIN AREAS TOGETHER                 48050000
         ST    R1,D8(R13)                                               48070000
         LR    R13,R1              NEW SAVEAREA ESTABLISHED             48090000
         LA    R7,OUTBUF          INITIALIZE POINTER                    48110000
         CLI   DSTYPE,CTGTALIN    CHECK FOR VSAM               @VS06171 48130000
         BNE   VSAMHIST           YES                          @VS06171 48150000
         LA    R2,WRKCREDT         GET CREATION DATE ADDR      @YL026YA 48170000
         LA    R7,CRDTOFF(R7)      POINT AT BUFFER POSITION             48190000
         BAL   R14,HDT02           GO CONVERT DATE AND PUT IN BUFFER    48210000
         LA    R2,WRKEXPDT         GET EXPIRATION DATE ADDR    @YL026YA 48230000
         LA    R7,NXTBUF(R7)       POINT AT NEXT BUFFER POSITION        48250000
         BAL   R14,HDT02           GO CONVERT DATE AND PUT IN BUFFER    48270000
CHKPROT  LA    R7,NXTBUF(R7)       POINT AT NEXT BUFFER POSITION        48290000
         CLI   DSTYPE,CTGTALIN     IS DATA SET NONVSAM?        @VS06171 48310000
         BNE   HISTEXIT            NO, NO PROTECTION INFO      @VS06171 48330000
*     CHECK FOR VARIOUS COMBINATIONS OF RACF AND PASSWORD PROTECTION    48380004
         TM    DS1DSIND,RACOPWD    RACF AND PASSWORD?          @Z40RSSA 48390004
         BNO   NTBOTH                  NO                      @Z40RSSA 48400004
         MVC   D0(9,R7),WPWDRAC                                @Z40RSSA 48402004
TSTREAD  TM    DS1DSIND,WPIND      WRITE PASSWORD PROTECT?     @Z40RSSA 48404004
         BO    HISTEXIT               YES                      @Z40RSSA 48406004
         MVI   D0(R7),C'R'            NO, CHANGE TO RPWD/RACF  @Z40RSSA 48408004
HISTEXIT EQU    *                                                       48410000
         LR    R1,R13              SAVE DYNAM AREA ADDR FOR FREEMAIN    48430000
         L     R13,D4(R1)          CALLERS SAVEAREA                     48450000
         FREEMAIN R,LV=SAVELEN,A=(1),SP=WORKSP                          48570020
         RETURN (14,12)                                                 48600020
         SPACE 1                                                        48650004
NTBOTH   MVC   D0(4,R7),NONE       ASSUME NONE                 @Z40RSSA 48710004
         BZ    HISTEXIT                IF NONE                 @Z40RSSA 48712004
         MVC   D0(4,R7),RACF       ASSUME RACF                 @Z40RSSA 48714004
         TM    DS1DSIND,RACIND                                 @Z40RSSA 48716004
         BO    HISTEXIT                RACF ONLY               @Z40RSSA 48718004
         MVC   D0(4,R7),WPWD       ASSUME WPWD ONLY            @Z40RSSA 48718404
         B     TSTREAD             TO TEST FOR READ            @Z40RSSA 48768404
VSAMHIST LA    R2,WRKCREDT        CREATION DATE IN BINARY               48813000
         LA    R7,L15(R7)         OFFSET FOR OUTPUT                     48816000
         BAL   R14,HDT02          CONVERT TO DEC.                       48819000
         LA    R2,WRKEXPDT        EXPIRE DATE IN BINARY                 48822000
         LA    R7,NXTBUF(R7)      OFFSET IN BUFFER                      48825000
         BAL   R14,HDT02          CONVERT TO DEC.                       48828000
         B     CHKPROT            CHECK FOR PROTECTION                  48831000
*                                                                       48840020
*                                                                       48870020
*    THIS ROUTINE CONVERTS BINARY DATES OF THE FORM YYDDDD TO         * 48900020
*    CHARACTER FORMAT IN THE FORM MM/DD/YY. LEAP YEARS ARE ACCOUNTED  * 48930020
*    FOR. INPUT REQUIREMENTS ARE.                                     * 48960020
*         1.   R2 POINTS TO FIELD TO BE CONVERTED                     * 48990020
*         2.   R7 POINTS TO RECEIVING FIELD                           * 49020020
*         3.   R14 HAS RETURN ADDRESS.                                * 49050020
*                                                                     * 49080020
HDT02 EQU      *                                                        49110020
         CLC   D0(D3,R2),HDTZ      CHECK FOR UNSPECIFIED DATE           49140000
         BNE   HDT04               BRANCH IF DATE PRESENT               49170000
HDT03    MVC   D0(L'HDTDF,R7),HDTDF  MOVE IN DEFAULT OF 00/00/00        49200000
         BR    R14                 RETURN                               49230000
HDT04    STM   R14,R6,HDTSV        SAVE REGS                            49260000
*                                                                       49290020
*  TEST FOR LEAP YEAR BY ANDING THE YEAR FIELD AGAINST A BYTE WITH    * 49320020
*  THE TWO LOW ORDER BITS ON.  LEAP YEARS WILL HAVE ZEROS FOR THE TWO * 49350020
*  LOW ORDER BYTES.                                                   * 49380020
*                                                                     * 49410020
         SR    R3,R3               CLEAR REG FOR INSERT CHARACTER.      49440000
         IC    R3,D0(R2)           GET YEAR BYTE FROM DATE FIELD.       49470000
         LA    R4,HDTBIN3          SET UP TO TEST LOW ORDER BITS.       49500000
         NR    R3,R4               IF YEAR IS DIVISIBLE BY 4,PROD EQ 0. 49530000
         LA    R4,HDTNY            SET UP FOR NON-LEAP YR -SAVE COND CD 49560000
         BNZ   HDT06               IF PROD N. EQ. TO ZERO, NOT LEAP YR. 49590000
         LA    R4,HDTLY            IF REMAINDER IS ZERO, USE LEAP YR.   49620000
*                                                                       49650000
HDT06    MVC   HDTWK(L2),D1(R2)    MOVE 2 BYTE DAY FLD TO HWORD         49680000
         LH    R3,HDTWK            PUT INTO REGISTER                    49710000
         LA    R6,NUMMONTH         SET UP BR CTL AS NO. OF MONTHS       49740000
*                                                                       49770020
*  SEARCH NOW BEGINS TO FIND THE MONTH THAT THE DAY-OF-THE-YEAR OCCURS  49800020
*  IN.  IF DAY-OF-THE-YEAR IS GREATER THAN 365/366, MONTH 12 IS USED.   49830020
*                                                                       49860020
HDT08    CH     R3,D0(R4)          COMPARE DAY TO TABLE ENTRY FOR MONTH 49890000
         BH    HDT10               DAY GREATER THAN TABLE IS A FIND     49920000
         LA    R4,D2(R4)           UP TBL PTR TO NEXT ELEMENT.          49950000
         BCT   R6,HDT08            DECREMENT MONTH AND RETRY.           49980000
         B     HDT03               IF DAY NEG, USE DEFAULT 00/00/00     50010000
HDT10    SH    R3,D0(R4)           SUBTRACT TABLE ELEMENT FROM DAY      50040000
         EX    R3,HDTCLI           COMPARE DAY TO 31.                   50070000
         BNL   HDT12               IF VALUE LESS THAN 31 OK             50100000
         LA    R3,DAYS31           DEFAULT TO 31 DAYS.                  50130000
HDT12    CVD   R6,HDTWK            CONVERT MONTH TO DEC                 50160000
        UNPK   D0(L2,R7),HD6(D2)   THEN TO CHARCTER                     50190000
         CVD   R3,HDTWK            CONVERT DAY TO DECIMAL               50220000
        UNPK   D3(L2,R7),HD6(D2)   THEN TO CHARACTER                    50250000
         IC    R6,D0(R2)           GET YEAR                             50280000
         CVD   R6,HDTWK            CONVERT IT TO DECIMAL                50310000
         UNPK  D6(L2,R7),HD6(D2)   THEN TO CHAR                         50340000
        MVZ    D1(L7,R7),D0(R7)    PROPAGATE A NUM CHAR ZONE            50370000
         MVI   D2(R7),SLASH        MOVE IN SEPARATORS BETWEEN           50400000
         MVI   D5(R7),SLASH        MONTH DAY AND YEAR                   50430000
         LM    R14,R6,HDTSV        RESTORE REGS                         50460000
HDT16    BR    R14                 RETURN                               50490000
*                                                                       50520020
*                                                                       50550020
*  THE FOLLOWING CONSTANTS ARE USED BY THE HISTORY ROUTINE.             50580020
*                                                                       50610020
HDTCLI   CLI   HDTC31,D0           EXECUTED TO CHECK IF DATE IS GT 31   50620020
RACIND   EQU  X'40'                MASK FOR RACF PROTECTION(DSCB)       50670004
WPIND    EQU  X'04'                WRITE PASSWORD PROTECT(DSCB)         50720004
RACOPWD  EQU  X'50'                RACF OR PASSWORD PROTECTION          50770004
NONE     DC   C'NONE'              NO RACF OR PASSWORD PROTECTION       50780004
RACF     DC   C'RACF'              RACF PROTECTION ONLY                 50782004
WPWD     DC   C'WPWD'              WRITE PASSWORD ONLY                  50784004
WPWDRAC  DC   C'WPWD/RACF'         WRITE PASSWORD AND RACF              50786004
HDTZ     DC    X'000000'           MASK OF NO DATE SPECIFIED            50790000
HDTDF    DC    C'00/00/00'         DEFAULT OF NO DATE PRINTED           50820000
HDTC31  DC    FL1'31'              USED FOR COMPARE OF 31 DAYS          50850000
*****************************************************************       50910020
**                                                                      50940020
**THE TABLE BELOW IS USED FOR THE MONTH LOOKUP IN NORMAL YEARS***       50970020
***                                                                     51000020
HDTNY    DC    H'334'              DECEMBER                             51030000
         DC    H'304'              NOVEMBER                             51060000
         DC    H'273'              OCTOBER                              51090000
         DC    H'243'              SEPTEMBER                            51120000
         DC    H'212'              AUGUST                               51150000
         DC    H'181'              JULY                                 51180000
         DC    H'151'              JUNE                                 51210000
         DC    H'120'              MAY                                  51240000
         DC    H'90'               APRIL                                51270000
         DC    H'59'               MARCH                                51300000
         DC    H'31'               FEBRUARY                             51330000
         DC    H'0'                JANUARY                              51360000
***************************************************************         51390020
****                                                                    51420020
****MONTHLY TABLE LOOKUP IN LEAP YEARS              ***********         51450020
****                                                                    51480020
HDTLY    DC    H'335'              DECEMBER                             51510000
         DC    H'305'              NOVEMBER                             51540000
         DC    H'274'              OCTOBER                              51570000
         DC    H'244'              SEPTEMBER                            51600000
         DC    H'213'              AUGUST                               51630000
         DC    H'182'              JULY                                 51660000
         DC    H'152'              JUNE                                 51690000
         DC    H'121'              MAY                                  51720000
         DC    H'91'               APRIL                                51750000
         DC    H'60'               MARCH                                51780000
         DC    H'31'               FEBRUARY                             51810000
         DC    H'0'                JANUARY                              51840000
*****                                                                   51870020
***END OF TABLE LOOKUP FOR MONTHS****                                   51900020
*****                                                                   51930020
HDTBIN3  EQU   X'03'               BYTE WITH TWO LOW ORDER BITS EQ 1'S  51960000
HDTL     EQU   10                                                       51990020
*                                                                       52020020
         EJECT                                                          52050020
IKJEHDS1 CSECT                                                          52110020
IKJEHWRT DS    0H                                                       52130020
WRITE    EQU   *                                                        52150020
*********************************************************************** 52170020
*                                                                     * 52200020
*   INPUT TO THIS ROUTINE IS THE BUFFER ADDRESS IN REG7 AND END       * 52230020
*   OF BUFFER ADDRESS IN REG 14. RETURN ADDRESS IS IN REG8.           * 52260020
*                                                                       52290020
*   THE OUTPUT BUFFER IS CLEARED AND RETURNED IN REG7.                  52320020
*   TRAILING BLANKS WILL BE ELIMINATED.                                 52350020
*                                                                       52380020
*  IMPORTANT---THIS ROUTINE REQUIRES NO BASE REGISTER. KEEP IT THAT     52410020
*  WAY SO THAT IKJEHMEM CAN USE IT.(SEE CALL PARAMETERS)                52440020
*                                                                       52470020
*********************************************************************** 52500020
         STM   R0,R9,LOCSAVOF(R13)  SAVE REGISTERS LOCALLY              52530020
         LR    R2,R14              COPY THE END OF DATA PTR             52560000
         SR    R2,R7               CALCULATE DATA  LENGTH               52590000
         LA    R1,FOUR             DECREMENT BUFFER POINTER BY 4,       52620000
         SR    R7,R1               SO R7 WILL POINT AT LL FIELD         52650000
         LA    R2,FOUR(R2)         BUMP LENGTH FOR LL AND OFF FIELD     52680000
         STH   R2,D0(R7)           STORE LENGTH OF DATA IN LL FIELD     52710000
         XC    D2(L2,R7),D2(R7)    CLEAR OFFSET BYTE                    52740000
         LR    R6,R7               PUT OUTPUT LINE POINTER IN PROPER    52770000
         LA    R1,PARMLSTL         POINT INFRONT OF BUFFER TO PARM LIST 52800000
         SR    R7,R1               CONTAING VARIOUS ADCONS. (SEE DSECT) 52830000
         LM    R1,R5,D0(R7)        SET UP REGISTERS FOR PUTLINE         52860000
         L     R15,PARMLSTL-FOUR(R7) GET ENTRY POINT.                   52890020
         PUTLINE PARM=(R2),UPT=(R3),ECT=(R4),ECB=(R5),OUTPUT=((R6),    X52920020
               DATA),ENTRY=(15),MF=(E,(1))                              52950020
***********************************************************             52980020
*                                                                       53010020
*                                                                       53220020
************************************************************            53250020
         LA    R7,PARMLSTL+FOUR(R7) POINT BACK TO DATA BUFFER           53280020
*                                                                       53310020
         MVI   D0(R7),BLANK                                             53340020
         MVC   D1(L'OUTBUF-L1,R7),D0(R7) CLEAR BUFFER                   53370020
         LM    R0,R9,LOCSAVOF(R13)  RESTORE CALLERS REGISTER            53400020
         BR    R8                  RETURN TO CALLER                     53430000
         EJECT                                                          53460020
*                                                                       53490020
IKJEHERR DS    0H                                                       53510020
ERROUT   EQU   *                                                        53530020
*********************************************************************** 53550020
*                                                                       53580020
*    THIS ROUTINE IS ENTERED VIA A 'BAL R8,ERROUT' INSTRUCTION SEQUENCE 53610020
*    AND IS USED TO OUTPUT ERROR MESSAGES. INPUT IS A THREE WORD LIST   53640020
*    CALLED ERRPARM WHICH CONTAINS INFORMATION AS FOLLOWS.              53670020
*                                                                       53700020
*                    BYTE 1 AND 2 - THE RELATIVE POSITION OF THE FIRST  53730020
*                             LEVEL MESSAGE IN THE MESSAGE CSECT        53760020
*                    BYTE 3 AND 4 - THE RELATIVE POSITION OF THE        53790020
*                             SECOND LEVEL MESSAGE IN THE STRING.       53820020
*                    SECOND WORD  - POINTS TO TEXT TO BE INSERTED AFTER 53850020
*                             FIRST SEGMENT OF FIRST LEVEL MESSAGE.     53880020
*                    THIRD WORD   - POINTS TO TEXT TO BE INSERTED AFTER 53910020
*                             FIRST SEGMENT OF SECOND LEVEL MESSAGE.    53940020
*                                                                       53970020
*                                                                       54000020
*********************************************************************** 54030020
         STM   R0,R9,LOCSAVOF(R13)       SAVE LOCAL REGISTERS           54060020
         MVI   STACKSW,SWON        TURN STACK SWITCH ON                 54070020
         LA    R7,OUTBUF+D4        POINT AT PROPER BUFFER OFFSET        54090000
         LH    R1,ERRPARM          RELATIVE MESSAGE NUMBER              54120000
         BCTR  R1,R0               DECREMENT POSITION COUNT             54150000
         SLL   R1,D3               TIMES 8 TO GET INDEX INTO TABLE      54180000
         L     R6,MSGCSECT         PICK UP VCON FOR CSECT               54210000
         LA    R5,D0(R6,R1)        TABLE ENTRY FOR PROPER MSG           54240000
         LH    R1,D0(R5)           LENGTH OF MESSAGE                    54270000
         LA    R2,D4(R1)           UPDATE LENGTH FOR LL SND OFF FIELDS  54300000
         STH   R2,OUTBUF           SAVE LENGTH                          54330000
        XC     OUTBUF+D2(L2),OUTBUF+D2  CLEAR OFFSET FIELD              54360000
         LH    R4,D2(R5)           OFFSET TO MESSAGE IN CSECT           54390000
         LA    R3,D0(R6,R4)        POINTER TO MESSAGE IN CSECT          54420000
         BCTR  R1,R0               DECREMENT COUNT FOR EX OF MVC        54450000
         EX    R1,MOVE             MOVE MESSAGE TO BUFFER               54480000
         LA    R7,D1(R1,R7)        POINT BEYOND MESSAGE                 54510000
         L     R4,ERRINST1         PICKUP INSERT POINTER                54540000
         LTR   R4,R4               TEST FOR ZERO                        54570000
         BZ    SEGCHECK            IF ZERO, CHECK FOR SEGMENTATION      54600000
         XR    R1,R1                                                    54630000
         IC    R1,D0(R4)           GET LENGTH OF INSERT DATA            54660000
         LA    R3,D1(R4)           POINT AT INSERT DATA                 54690000
         LH    R2,OUTBUF           GET LENGTH                           54720000
         LA    R2,D0(R2,R1)        INCREMENT COUNT                      54750000
         STH   R2,OUTBUF           SAVE IT AGAIN                        54780000
         BCTR  R1,R0               REDUCE COUNT BY ONE                  54810000
         EX    R1,MOVE             MOVE INSERT DATA TO BUFFER           54840000
         LA    R7,D1(R1,R7)                                             54870000
SEGCHECK EQU   *                                                        54900000
         LH    R4,D4(R5)           PICKUP OFFSET OF SEGMENT             54930000
         LTR   R4,R4               TEST FOR ZERO                        54960000
         BZ    SECLVTST            CHECK SECOND LEVEL                   54990000
         LA    R4,D0(R4,R6)        POINT AT SEGMENT TABLE               55020000
SEGLOOP  EQU   *                                                        55050000
         LH    R1,D0(R4)           PICK UP LENGTH OF SEGMENT            55080000
         LTR   R1,R1               TEST CONTENTS OF REGISTERS           55110000
         BZ    SECLVTST            CHECK FOR SECOND LEVEL               55140000
         LH    R2,OUTBUF           GET LENGTH                           55170000
         LA    R2,D0(R2,R1)        INCREMENT COUNT                      55200000
         STH   R2,OUTBUF           SAVE IT AGAIN                        55230000
         LH    R3,D2(R4)           PICKUP OFFSET TO SEGMENT             55260000
         LA    R3,D0(R3,R6)        CALCULATE THE ADDRESS                55290000
         BCTR  R1,R0               DECREMENT FOR MOVE                   55320000
         EX    R1,MOVE             MOVE SEGMENT TO BUFFER               55350000
         LA    R7,D1(R7,R1)        POINT AT END OF DATA IN BUFFER       55380000
         LA    R4,D4(R4)           NEXT SEGMENT SLOT IN TABLE           55410000
         B     SEGLOOP             PROCESS ANOTHER SEGMENT              55440000
*********************************************************               55470020
***SECOND LEVEL MESSAGE CHECKING BEGINS HERE*************               55500020
*********************************************************               55530020
SECLVTST EQU   *                                                        55560020
         LA    R1,D1               SEGMENT COUNT IS 1                   55590000
         ST    R1,MPM11            PUT IN PAARM LIST                    55620000
         LA    R1,OUTBUF                                                55650000
         ST    R1,MPM12            SAVE PTR TO MESSAGE (FIRST LEVEL)    55680000
         LH    R3,ERRSECND         CHECK FOR SECOND LEVEL MESSAGE       55710000
         LTR   R3,R3                                                    55740000
         BZ    NOSECLVL             NO SECOND LEVEL BRANCH =ZERO        55770000
         BCTR  R3,R0               DECREMENT POSITION COUNT             55800000
         LA    R2,D6               TABLE ENTRY SIZE                     55830000
         MR    R2,R2               OFFSET INTO TABLE CALCULATED         55860000
         LH    R4,D6(R5)           OFFSET TO SECOND LEVEL TABLE         55890000
         LA    R4,D0(R4,R6)        ADDRESS OF SECOND LEVEL TABLE        55920000
         LA    R5,D0(R4,R3)        OFFSET TO ENTRY IN TABLE             55950000
         LA    R7,SECBUFF+D4       POINT TO SECOND BUFFER OFFSET        55980000
         LH    R1,D0(R5)           GET LENGTH OF ENTRY                  56010000
         LA    R2,D4(R1)           UPDATE LENGTH FOR LL SND OFF FIELDS  56040000
         STH   R2,SECBUFF          SAVE LENGTH OF FIRST SEGMENT         56070000
         XC    SECBUFF+D2(L2),SECBUFF+D2 CLEAR OFFSET FIELD             56100000
         LH    R4,D2(R5)           OFFSET TO MESSAGE IN CSECT           56130000
         LA    R3,D0(R6,R4)        ADDRESS OF MESSAGE IN CORE           56160000
         BCTR  R1,R0               DECREMENT LENGTH FOR EX OF MOVE      56190000
         EX    R1,MOVE             MOVE MESSAGE SEGMENT TO BUFFER       56220000
         LA    R7,D1(R1,R7)        BUMP BUFFER POINTER                  56250000
         MVC   SECBUFF+D10(L2),OUTBUF+D10   SET ID FOR SECND LEVEL      56280000
         L     R4,ERRINST2         GET INSERT POINTER FOR SECOND LEVEL  56310000
         LTR   R4,R4               TEST FOR ZERO                        56340000
         BZ    SECSEGCK            IF ZERO, CHECK SEGMENTATION          56370000
         XR    R1,R1                                                    56400000
         IC    R1,D0(R4)           GET LENGTH OF INSERT DATA            56430000
         LH    R2,SECBUFF                                               56460000
         LA    R2,D0(R2,R1)        UPDATE LENGTH OF BUFFER MESSAGE      56490000
         STH   R2,SECBUFF          SAVE AGAIN                           56520000
         LA    R3,D1(R4)           POINT AT DATA                        56550000
         BCTR  R1,R0               DECREMENT COUNT FOR MOVE             56580000
         EX    R1,MOVE             MOVE IT TO BUFFER                    56610000
         LA    R7,D1(R1,R7)        UPDATE BUFFER POINTER                56640000
SECSEGCK EQU   *                                                        56670000
         LA    R1,D1               SET SEGMENT COUNT TO ONE             56700000
         ST    R1,MPM21            PUT IT INTO KPARM LIST               56730000
         LA    R1,SECBUFF          PUT BUFFER ADDRESS INTO LIST         56760000
         ST    R1,MPM22                                                 56790000
         LA    R1,MSGPARM2         CHAIN MSG LEVEL PARM LISTS           56820000
         ST    R1,MSGPARM1                                              56850000
         XC    MSGPARM2,MSGPARM2   SETUP LINK ADDRESS TO END OF CHAIN   56880000
         LA    R1,FOXES            PUT X'FF' IN A REGISTER              56910000
         STC   R1,MSGPARM2         PUT END OF LIST IND IN CHAIN FIELD   56940000
         LH    R4,D4(R5)           OFFSET TO SEGMENT TABLE              56970000
         LTR   R4,R4               TEST FOR ZERO                        57000000
         BZ    PUTMSG              IF ZERO, PUT OUT MESSAGE             57030000
         LA    R4,D0(R4,R6)        ADDRESS OF SEGMENT TABLE             57060000
         LH    R1,D0(R4)           LENGTH OF SEGMENT                    57090000
SECSEGLP EQU   *                                                        57120000
         LTR   R1,R1               SEE IF THIS IS THE LAST              57150000
         BZ    PUTMSG              YES, GO                              57180000
         LH    R2,SECBUFF          UPDATE THE LENGTH FIELD              57210000
         LA    R2,D0(R2,R1)                                             57240000
         STH   R2,SECBUFF          RE-STORE IT                          57270000
         LH    R3,D2(R4)           OFFSET TO SEGMENT                    57300000
         LA    R3,D0(R3,R6)        ADDRESS OF MESSAGE                   57330000
         BCTR  R1,R0               DECREMENT COUNT FOR MOVE             57360000
         EX    R1,MOVE             MOVE MESSAGE                         57390000
         LA    R7,D1(R7,R1)        UPDATE BUFFER OFFSET                 57420000
         LA    R4,D4(R4)           GET NEXT SEGMENT                     57450000
        B     SECSEGLP             SEGMENT LOOP                         57480020
NOSECLVL EQU   *                                                        57510020
         XC    MSGPARM1,MSGPARM1   CLEAR SECOND LEVEL POINTER           57540020
PUTMSG   EQU   *                                                        57570020
         LM    R3,R5,UPTPTR        LOAD UPT, ECT, ECB                   57600000
         LA    R6,MSGPARM1         POINT TO MSG PARM LISTS              57630000
         LA    R2,DPUTLINE         LIST FORM OF MACRO                   57660000
         LA    R1,PUTLLIST         LIST FOR E FORM OF MACRO             57690000
         L     R15,PUTLADDR        ADDRESS OF PUTLINE ROUTINE           57720000
*                                                                       57750020
         PUTLINE PARM=(R2),UPT=(R3),ECT=(R4),ECB=(R5),                 X57780020
               OUTPUT=((R6),MULTLVL),ENTRY=(15),MF=(E,(1))              57810020
         XC    ERRPARM(ERRLIST),ERRPARM  CLEAR ERROR PARM LIST          57820020
         LM    R0,R9,LOCSAVOF(R13)       RESTORE LOCAL REGISTERS        57840020
         BR    R8                  RETURN                               57870000
*                                                                       57870800
         EJECT                                                 @YL026YA 57871600
*   THE VSAM BASIC ROUTINE PROCESSES BASIC                     @YL026YA 57872400
*   INFORMATION FOR VSAM DATA SETS                             @YL026YA 57873200
*                                                              @YL026YA 57874000
VSAMBSC  EQU   *                                               @YL026YA 57874800
*  IF ENTRY FOUND IS AN ALIAS, GET INFORMATION FOR THE         @YL026YA 57875600
*  REAL (RELATED) NAME                                         @YL026YA 57876400
         CLI   DSTYPE,CTGTANM      IS THIS ENTRY AN ALIAS?     @YL026YA 57877200
         BNE   GOVSAM              NO, GO AHEAD                @YL026YA 57878000
LOCAGAIN EQU   *                                               @YL026YA 57878800
         XC    CPLAREA,CPLAREA     CLEAR CPL SPACE             @YL026YA 57879600
         LA    R1,CPLAREA          SET UP ADDRESSABILITY       @YL026YA 57880400
         USING CTGPL,R1            TO CPL                      @YL026YA 57881200
         OI    CTGOPTN3,CTGLOC+CTGAM0 SET FUNCTION TO LOCATE   @YL026YA 57882000
         USING CTGFL,R3            SET UP ADDRESSABILITY       @YL026YA 57882800
         LA    R3,CTGFL5           TO CATALOG ACB FPL          @YL026YA 57883600
         L     R3,CTGFLPT          ADDRESS OF CATALOG ACB ADDR @YL026YA 57884400
         ST    R3,CTGCAT           STORE IN CPL                @YL026YA 57885200
         LA    R3,CTGFL6           ADDRESS OF RELATED NAME FPL @YL026YA 57886000
         L     R3,CTGFLPT          ADDRESS OF RELATED NAME     @YL026YA 57886800
         LA    R3,D1(R3)           ADDR OF ENTRY NUMBER ADDR   @YL026YA 57887600
         ST    R3,CTGENT           STORE IN CPL                @YL026YA 57888400
         LA    R2,CATWORK2         ADDRESS OF WORKAREA         @YL026YA 57889200
         ST    R2,CTGWKA           STORE IN CPL                @YL026YA 57890000
         LA    R2,L'CATWORK2       GET LENGTH OF WORKAREA      @YL026YA 57890800
         STH   R2,CATWORK2         STORE IN FIRST HALFWORD     @YL026YA 57891600
*                                  OF AREA                     @YL026YA 57892400
         B     LOCBUILD            GO FINISH SETTING UP LOCATE @YL026YA 57893200
GOVSAM   EQU   *                                               @YL026YA 57894000
         L     R15,VSAMVCON        ADDRESS OF VSAM ROUTINE     @YL026YA 57894800
         BALR  R14,R15             GO PROCESS THE DATA SET     @YL026YA 57895600
         B     ENDBASIC            GO CHECK FOR HISTORY, ETC.  @YL026YA 57896400
         EJECT                                                 @YL026YA 57897200
IKJEHVSM CSECT                                                 @YL026YA 57898000
*                                                              @YL026YA 57898800
*  THIS ROUTINE IS ENTERED IF THE DATA SET NAME OCCURS IN      @YL026YA 57899600
*  THE CATALOG AND IS NOT A NONVSAM DATA SET.  A HEADING IS    @YL026YA 57900400
*  PUT TO THE TERMINAL AND THE BUFFER IS FILLED WITH BASIC     @YL026YA 57901200
*  INFORMATION.  IF THE HISTORY AND/OR STATUS OPTION IS        @YL026YA 57902000
*  SPECIFIED, THE HEADING INCLUDES THE APPROPRIATE TITLES.     @YL026YA 57902800
*  HISTORY INFORMATION IS PUT TO THE TERMINAL ALONG WITH       @YL026YA 57903600
*  THE BASIC INFORMATION.                                      @YL026YA 57904400
*                                                              @YL026YA 57905200
VSAMROUT SAVE  (14,12),,*                                      @YL026YA 57906000
         LR    R10,R15             SET UP ADDESSABILITY TO THIS ROUTINE 57906800
         USING VSAMROUT,R10        MAIN BASE FOR THIS ROUTINE  @YL026YA 57907600
         USING OBTWAD,R12          WORK AREA, R12 PASSED WITH ADDR      57908400
         GETMAIN R,LV=SAVELEN1,SP=WORKSP  GET A SAVE AREA      @ZA06146 57909203
         ST    R13,D4(R1)          SAVE CALLERS SAVE AREA      @YL026YA 57910000
         ST    R1,D8(R13)          SAVE THIS ROUTINES SAVE AREA ADDR    57910800
         LR    R13,R1              THIS ROUTINES SAVE AREA ADDRESS      57911600
*  WRITE THE HEADING LINE                                      @YL026YA 57912400
         LA    R7,OUTBUF           POINT TO OUTPUT BUFFER      @YL026YA 57913200
         MVC   D0(L'VSAMHDG,R7),VSAMHDG  MOVE BASIC HEADING    @YL026YA 57914000
         LA    R7,L'VSAMHDG(R7)    POINT PAST BASIC HEADING    @YL026YA 57914800
         TM    CONTROL,HISTORY     WAS HISTORY REQUESTED?      @YL026YA 57915600
         BNO   VSAM10              NO--SKIP HISTORY HEADING    @YL026YA 57916400
         MVC   D0(L'VSAMHHDG,R7),VSAMHHDG  MOVE HISTORY HEAD   @YL026YA 57917200
         LA    R7,L'VSAMHHDG(R7)   POINT PAST HISTORY HEADING  @YL026YA 57918000
VSAM10   EQU   *                                               @YL026YA 57918800
         TM    CONTROL,STATUS      WAS STATUS REQUESTED?       @YL026YA 57919600
         BNO   VSAM15              NO--SKIP STATUS HEADING     @YL026YA 57920400
         MVC   D0(L'VSAMSHDG,R7),VSAMSHDG  MOVE STATUS HEAD    @YL026YA 57921200
         LA    R7,L'VSAMSHDG(R7)   POINT PAST STATUS HEADING   @YL026YA 57922000
VSAM15   EQU   *                                               @YL026YA 57922800
         LR    R14,R7              POINT AT END OF BUFFER DATA @YL026YA 57923600
         LA    R7,OUTBUF           POINT AT BUFFER             @YL026YA 57924400
         L     R15,VCONVWRT        ADDRESS OF WRITE ROUTINE    @YL026YA 57925200
         BALR  R8,R15              WRITE HEADING LINE          @YL026YA 57926000
*  MOVE LRECL AND ENTRY TYPE TO BUFFER                         @YL026YA 57926800
         USING CTGFL,R3                                        @YL026YA 57927600
         LA    R3,CTGFL4           GET FPL FOR LRECL           @YL026YA 57928400
         L     R3,CTGFLPT          ADDRESS OF LRECL VALUE      @YL026YA 57929200
         TM    0(R3),X'FF'         CHECK FOR FOXES IN LRECL VALUE       57930000
         BO    VSAM30              YES, INDICATE WITH  **      @YL026YB 57930800
         L     R1,D0(R3)           LRECL VALUE                 @YL026YA 57931600
         N     R1,OFFSIGN          TURN OFF ANY NEGATIVE SIGN  @YL026YA 57932400
         LTR   R1,R1               CHECK FOR ZERO VALUE        @YL026YA 57933200
         BZ    VSAM30              IF ZERO, INDICATE WITH **   @YL026YA 57934000
         CVD   R1,WORKROOM         CONVERT TO NUMBERS          @YL026YA 57934800
         UNPK  LRECLOF1(D5,R7),WORKROOM(D8)                    @YL026YA 57935600
         OI    LRECLOF1+D4(R7),ZONE  GET RID OF SIGN           @YL026YA 57936400
VSAM20   EQU   *                                               @YL026YA 57937200
         CLI   LRECLOF1(R7),ZONE   ARE THERE HIGHORDER ZEROS?  @YL026YA 57938000
         BNE   VSAM40              NO - VALUE OK AS IS         @YL026YA 57938800
         MVC   LRECLOF1(L5,R7),LRECLOF1+D1(R7) SHIFT NUMBER    @YL026YA 57939600
         B     VSAM20              REPEAT ZERO TEST            @YL026YA 57940400
VSAM30   EQU   *                   NO LRECL VALUE              @YL026YA 57941200
         MVC   LRECLOF1(L'NOVAL,R7),NOVAL  UNDEFINED VALUE     @YL026YA 57942000
         B     VSAM50              BRANCH TO GET DATES          ZA02196 57942402
VSAM40   EQU   *                                               @YL026YA 57942800
         MVC   TYPEOFF(L4,R7),VSAMCON   MOVE IN CONSTANT VSAM   ZA02196 57943602
VSAM50   EQU   *                                               @YL026YA 57974800
         TM    CONTROL,HISTORY     HISTORY                     @ZA06146 57975603
         BNO   VSAM60              NO                          @ZA06146 57975703
         LA    R3,CTGFL7           GET CREATION DATE FPL       @YL026YA 57975803
         L     R3,CTGFLPT          GET ADDRESS OF CREATE DATE  @YL026YA 57975903
         XC    WRKCREDT(L3),WRKCREDT    ZERO CREATE COMM AREA  @ZA07714 57976003
         TM    1(R3),FOXES              IS CREATE DATE FOXES?  @ZA07714 57976103
         BO    VSAM55                   YES CHECK EXPIRE DATE  @ZA07714 57976203
         XC    SAVELEN(L8,R13),SAVELEN(R13) ZERO WORK AREA     @ZA06146 57976303
         MVC   SAVELEN+6(L2,R13),D1(R3) MOVE IN JULIAN DATE    @ZA06146 57976403
         CVB   R1,SAVELEN(R13)          CONVERT TO BINARY      @ZA06146 57976503
         STH   R1,WRKCREDT+D1           STORE IN COMM AREA      ZA00105 57976603
         XC    SAVELEN(L8,R13),SAVELEN(R13) ZERO WORK AREA     @ZA06146 57976803
         LH    R1,D0(R3)                LOAD YYDD INTO REG      ZA00105 57977003
         IC    R1,OFFSIGN+D1            MASK DD WITH 'FF'       ZA00105 57977203
         SRL   R1,L4                    SHIFT TO YYF            ZA00105 57977403
         ST    R1,SAVELEN+4(R13)        STORE IN WORK AREA     @ZA06146 57977603
         CVB   R1,SAVELEN(R13)          CONVERT DEC TO BIN     @ZA06146 57977803
         STC   R1,WRKCREDT              STORE YY IN COMM AREA   ZA00105 57978202
VSAM55   LA    R3,CTGFL8           GET EXPIRATION DATE FPL     @ZA07714 57978303
         L     R3,CTGFLPT          GET ADDRESS OF EXPIRE DATE  @YL026YA 57978403
         XC    WRKEXPDT(L3),WRKEXPDT    ZERO EXPIRE DATE       @ZA07714 57978503
         TM    1(R3),FOXES              IS EXPIRE DATE FOXES?  @ZA07714 57978603
         BO    VSAM60                   YES LEAVE ZEROS IN DATE@ZA07714 57978703
         XC    SAVELEN(L8,R13),SAVELEN(R13) ZERO WORK AREA     @ZA06146 57978803
         MVC   SAVELEN+6(L2,R13),D1(R3) MOVE IN JULIAN DATE    @ZA06146 57978903
         CVB   R1,SAVELEN(R13)          CONVT TO BINARY        @ZA06146 57979003
         STH   R1,WRKEXPDT+D1           STORE IN COMM AREA      ZA00105 57979103
         XC    SAVELEN(L8,R13),SAVELEN(R13) ZERO WORK AREA     @ZA06146 57979203
         LH    R1,D0(R3)                LOAD YYDD INTO REG      ZA00105 57979303
         IC    R1,OFFSIGN+D1            MASK DD WITH 'FF'       ZA00105 57979503
         SRL   R1,L4                    SHIFT TO YYF            ZA00105 57979803
         ST    R1,SAVELEN+4(R13)        STORE IN WORK AREA     @ZA06146 57980103
         CVB   R1,SAVELEN(R13)          CONVRT TO BINARY       @ZA06146 57980403
         STC   R1,WRKEXPDT              STORE YY IN COMM AREA   ZA00105 57980703
VSAM60   LR    R1,R13              SAVE DYNAMIC AREA ADDRESS   @ZA06146 57981003
         L     R13,D4(R1)          CALLERS SAVEAREA            @YL026YA 57981303
         FREEMAIN R,LV=SAVELEN1,A=(1),SP=WORKSP FREE SAVE AREA @ZA06146 57981603
         RETURN (14,12)            RETURN TO CALLER            @YL026YA 57982800
         EJECT                                                 @YL026YA 57983600
*  CONSTANTS AND EQUATES FOR VSAM BASIC INFO                   @YL026YA 57984400
VCONVWRT DC    V(IKJEHWRT)         ADDRESS OF WRITE ROUTINE    @YL026YA 57985200
OFFSIGN  DC    X'7FFFFFFF'         TO TURN OFF MINUS BIT       @YL026YA 57986000
VSAMHDG  DC    C'--LRECL--DSORG-'  BASIC DATA HEADING           ZA02196 57986802
VSAMHHDG DC    C'-CREATED---EXPIRES' HISTORY DATA HEADING      @YL026YA 57987600
VSAMSHDG DC    C'--DDNAME---DISP'  STATUS DATA HEADING         @YL026YA 57988400
NOVAL    DC    C'**'               REPLACES UNDEFINED VALUES   @YL026YA 57989200
VSAMCON  DC    C'VSAM'             CONSTANT FOR VSAM ENTRY      ZA02196 57990002
DWORD    DS    D                        DOUBLE WORD WORK AREA   ZA00105 57996802
*                                                              @YL026YA 57997200
TYPEOFF  EQU   9                   OFFSET TO TYPE CODE         @YL026YA 57998000
LRECLOF1 EQU   2                   OFFSET TO LRECL FOR VSAM    @YL026YA 57998800
         DROP  R3                                              @YL026YA 57999600
         DROP  R10                                             @YL026YA 58000400
         EJECT                                                          58001200
IKJEHSTA CSECT                                                          58002000
         ENTRY IKJEHSTI                                        @YL026YA 58002800
*********************************************************************** 58020020
*                                                                     * 58050020
*   THIS ROUTINE IS ENTERED IF STATUS IS SPECIFIED ON THE COMMAND     * 58080020
*   WHEN IT IS ENTERED.  THE DYNAMIC ALLOCATION REQUEST BLOCK  @YL026YA 58110000
*   HAS ALREADY BEEN INITIALIZED BY THE STATUS INITIALIZATION  @YL026YA 58130000
*   ROUTINE (IKJEHSTI).                                        @YL026YA 58150000
*   DYNAMIC INFORMATION RETRIEVAL IS CALLED TO OBTAIN          @YL026YA 58170000
*   INFORMATION ABOUT THE ALLOCATED DATA SET.                  @YL026YA 58190000
*   THE APPROPRIATE INFORMATION (DDNAME, NORMAL AND ABNORMAL DISP)    * 58210000
*   ARE EXTRACTED AND FORMATTED IN THE BUFFER.  IF DYNAMIC     @YL026YA 58230000
*   INFORMATION RETRIEVAL FAILS, THEN NO STATUS IS AVAILABLE   @YL026YA 58250000
*   FOR THIS DSNAME.                                           @YL026YA 58270000
*                                                                     * 58350020
*********************************************************************** 58380020
*                                                                       58410020
STATROUT SAVE  (14,12),,*                                               58440020
         LR    R10,R15             SET UP ADDESSABILITY TO THIS ROUTINE 58470000
         USING STATROUT,R10        MAIN BASE FOR THIS ROUTINE           58480000
         USING OBTWAD,R12          WORK AREA, R12 PASSED WITH ADDR      58490000
         GETMAIN R,LV=SAVELEN,SP=WORKSP  GET A SAVE AREA                58500000
         ST    R13,D4(R1)          SAVE CALLERS SAVE AREA               58510000
         ST    R1,D8(R13)          SAVE THIS ROUTINES SAVE AREA ADDR    58520000
         LR    R13,R1              THIS ROUTINES SAVE AREA ADDRESS      58530000
*                                                              @YL026YA 58540000
*   PUT DATA SET NAME AND LENGTH IN DYNAMIC ALLOCATION         @YL026YA 58550000
*   PARAMETER LIST AND RETRIEVE INFORMATION.                   @YL026YA 58560000
*                                                              @YL026YA 58570000
         LA    R1,RQBLKAD          ADDRESS OF REQUEST BLOCK    @YL026YA 58580000
*                                  POINTER                     @YL026YA 58590000
         USING S99RBP,R1                                       @YL026YA 58600000
         L     R2,S99RBPTR         ADDRESS OF REQUEST BLOCK    @YL026YA 58610000
         USING S99RB,R2                                        @YL026YA 58620000
         L     R2,S99TXTPP         ADDRESS OF TEXT POINTER     @YL026YA 58630000
*                                  LIST                        @YL026YA 58640000
         USING S99TUPL,R2                                      @YL026YA 58650000
         L     R5,S99TUPTR         ADDRESS OF FIRST TEXT UNIT  @YL026YA 58660000
*                                  POINTER                     @YL026YA 58670000
         USING S99TUNIT,R5                                     @YL026YA 58680000
         LH    R4,CURNTNAM         LENGTH OF DSNAME            @YL026YA 58690000
         STH   R4,S99TULNG         STORE IN PARAMETER LENGTH   @YL026YA 58700000
*                                  FIELD                       @YL026YA 58710000
         LA    R3,TEMPNAME         ADDRESS OF CURRENT DSNAME   @YL026YA 58720000
         LA    R7,S99TUPAR         ADDRESS OF PARAMETER FIELD  @YL026YA 58730000
         BCTR  R4,R0               DECREMENT LENGTH FOR MOVE   @YL026YA 58740000
         EX    R4,MOVE             MOVE DSNAME                 @YL026YA 58750000
         DYNALLOC                                              @YL026YA 58760000
         LTR   R15,R15             DID RETRIEVE GO OK?         @YL026YA 58770000
         BNZ   STATRT05            NO - EXIT WITH NO INFO      @YL026YA 58780000
*                                                                       59100020
*    WE HAVE A HIT--MOVE DDNAME AND DISP FIELDS TO BUFFER AND OUTPUT    59130020
*                                                                       59160020
         CLI   DSTYPE,CTGTALIN     CHECK FOR VSAM                       59190000
         BNE   VSAMOFF             YES                                  59200000
         LA    R7,OUTBUF+STATOFF1  POINT AT OFFSET FOR STATUS ALONE     59210000
         TM    CONTROL,HISTORY     SEE IF HISTORY WAS SPECIFIED         59220000
         BNO   STATRT01            NO USE AS IS                         59230000
         LA    R7,OUTBUF+STATOFF2  YES, POINT TO NEW OFFSET    @YL026YA 59240000
STATRT01 EQU   *                                                        59250000
         LA    R2,L'S99TUPTR(R2)   LOOK AT NEXT TEXT UNIT      @YL026YA 59260000
         L     R5,S99TUPTR         ADDRESS OF TEXT UNIT        @YL026YB 59270000
         LH    R4,S99TULNG         LENGTH OF PARAMETER         @YL026YA 59280000
         LTR   R4,R4               IS LENGTH GT ZERO           @ZA06703 59282003
         BZ    STANODDN            NO, DON'T PROCESS DDNAME    @ZA06703 59284003
         BCTR  R4,R0               DECREMENT FOR MOVE          @YL026YA 59290000
         EX    R4,STATMOVE         MOVE DDNAME TO BUFFER       @YL026YA 59300000
STANODDN EQU   *                                               @ZA06703 59302003
         LA    R2,L'S99TUPTR(R2)   LOOK AT NEXT TEXT UNIT      @YL026YA 59310000
         L     R5,S99TUPTR         ADDRESS OF TEXT UNIT        @YL026YB 59320000
         LA    R7,D9(R7)           BUMP OUTPUT BUFFER PTR               59330000
*                                                                       59370020
*   TEST STATUS BITS AND MOVE IN APPROPRIATE WORD                       59400020
*                                                                       59430020
         TM    S99TUPAR,KEEP       IS IT KEEP                  @YL026YA 59460000
         BO    STATKEEP            YES, BRANCH                          59480000
         TM    S99TUPAR,DELETE     IS IT DELETE                @YL026YA 59500000
         BO    STATDELE            YES, BRANCH                 @YL026YA 59520000
         TM    S99TUPAR,CATLG      IS IT CATALOG               @YL026YA 59540000
         BO    STATCATL            YES BRANCH                  @YL026YA 59560000
         TM    S99TUPAR,UNCATLG    IS IT UNCATLG               @YL026YA 59580000
         BO    STATUNCT            YES, BRANCH                 @YL026YA 59600000
         B     STATRT03            IF UNSPECIFIED, SKIP TO NEXT ROUTINE 59620000
VSAMOFF  LA    R7,OUTBUF+L16       OFFSET INTO BUFFER                   59640000
         TM    CONTROL,HISTORY     HISTORY REQUESTED                    59660000
         BNO   STATRT01            NO                                   59680000
         LA    R7,OUTBUF+L34       OFFSET FOR HISTORY                   59700000
         B     STATRT01                                                 59720000
STATKEEP LA    R14,SKEEP           ADDRESS OF 'KEEP'                    59740000
         LA    R15,L'SKEEP         ITS LENGTH                           59760000
         B     STATRT02            PUT IT INTO BUFFER                   59780000
*                                                                       59800000
STATDELE LA    R14,SDELE           ADDRESS OF 'DELETE'                  59820000
         LA    R15,L'SDELE         ITS LENGTH                           59840000
         B     STATRT02            PUT IT IN BUFFER                     59860000
*                                                                       59880000
STATCATL LA    R14,SCATL           ADDRESS OF 'CATLG'                   59900000
         LA    R15,L'SCATL         ITS LENGTH                           59920000
         B     STATRT02            PUT IT INTO THE BUFFER               59940000
*                                                                       59960000
STATUNCT LA    R14,SUNCT           ADDRESS OF 'UNCATLG'                 59980000
         LA    R15,L'SUNCT         ITS LENGTH                           60000000
*                                                                       60150020
*  MOVE CORRECT FIELD TO THE BUFFER                                     60180020
*                                                                       60210020
STATRT02 EQU   *                                                        60240020
         BCTR  R15,R0              DECREMENT COUNT BY ONE               60300000
         EX    R15,DISPMOVE        MOVE DISP TO BUFFER                  60330000
         LA    R7,L1(R15,R7)       POINT AT NEXT LOCATION               60360000
*                                                                       60390020
*   TEST FOR ABNORMAL DISPOSITION                                       60420020
*                                                                       60450020
STATRT03 EQU   *                                                        60480020
         LA    R2,L'S99TUPTR(R2)   LOOK AT NEXT TEXT UNIT      @YL026YA 60510000
         L     R5,S99TUPTR         ADDRESS OF TEXT UNIT        @YL026YB 60530000
         TM    S99TUPAR,KEEP       IS IT KEEP                  @YL026YA 60550000
         BO    STKEEP              YES, BRANCH                          60570000
         TM    S99TUPAR,DELETE     IS IT DELETE                @YL026YA 60590000
         BO    STDELE              YES, BRANCH                          60610000
         TM    S99TUPAR,CATLG      IS IT CATALOG               @YL026YA 60630000
         BO    STCATL              YES, BRANCH                          60650000
         TM    S99TUPAR,UNCATLG    IS IT UNCATALOG             @YL026YA 60670000
         BO    STUNCT              YES, BRANCH                          60690000
         B     STATRT05            IF UNSPECIFIED, SKIP IT              60710000
*                                                                       60730000
STKEEP   LA    R14,SKEEP           ADDRESS OF 'KEEP'                    60750000
         LA    R15,L'SKEEP         LENGTH OF KEEP                       60770000
         B     STATRT04            GO PUT IT INTO BUFFER                60790000
*                                                                       60810000
STDELE   LA    R14,SDELE           ADDRESS OF 'DELETE'                  60830000
         LA    R15,L'SDELE         LENGTH OF DELETE                     60850000
         B     STATRT04            GO PUT INTO BUFFER                   60870000
*                                                                       60890000
STCATL   LA    R14,SCATL           ADDRESS OF 'CATLG'                   60910000
         LA    R15,L'SCATL         LENGTH OF CATLG                      60930000
         B     STATRT04            PUT IT INTO BUFFER                   60950000
*                                                                       60970000
STUNCT   LA    R14,SUNCT           ADDRESS OF 'UNCATLG'                 60990000
         LA    R15,L'SUNCT         ITS LENGTH                           61010000
*                                                                       61230020
*   MOVE THE CORRECT FIELD TO THE BUFFER                                61260020
*                                                                       61290020
STATRT04 EQU   *                                                        61320020
         MVI   D0(R7),COMMA        PUT A COMMA SEPARATOR IN BUFFER      61350000
         LA    R7,L1(R7)           BUMP POINTER FOR LENGTH OF COMMA     61380000
         BCTR  R15,R0              DECREMENT COUNT FOR MOVE             61410000
         EX    R15,DISPMOVE        MOVE DISP TO BUFFER                  61440000
*                                                                       61470000
STATRT05 EQU   *                                                        61500000
         LR    R1,R13              SAVE ADDRESS OF CORE TO FREE         61530000
         L     R13,D4(R1)          USERS SAVEAREA                       61560000
         FREEMAIN R,LV=SAVELEN,A=(1),SP=WORKSP                          61590020
         RETURN (14,12)                                                 61620020
*                                                                       61650020
*    EQUATES AND CONSTANTS USED BY STATUS                               61680020
*                                                                       61710020
KEEP     EQU   X'08'               KEEP DISP MASK                       61740000
DELETE   EQU   X'04'               DELETE MASK                          61744000
CATLG    EQU   X'02'               CATALOG MASK                         61748000
UNCATLG  EQU   X'01'               UNCATALOG                            61752000
SKEEP    DC    C'KEEP'             KEEP                                 61756000
SDELE    DC    C'DELETE'           DELETE                               61760000
SCATL    DC    C'CATLG'            CATALOG                              61764000
SUNCT    DC    C'UNCATLG'          UNCATALOG                            61768000
         DS    0H                  ALIGN HALF WORD                      61772000
DISPMOVE MVC   D0(L0,R7),D0(R14)   EXECUTED TO MOVE DISP                61776000
STATMOVE MVC   D0(,R7),S99TUPAR    MOVE DDNAME TO BUFFER       @YL026YA 61780000
*                                                                       61784000
         DROP  R2                                              @YL026YA 61788000
         DROP  R10                                             @YL026YA 61792000
         DROP  R5                                                       61796000
         EJECT                                                 @YL026YA 61800000
IKJEHSTI DS    0H                                              @YL026YA 61804000
*********************************************************************   61808000
*                                                              @YL026YA 61812000
*   THIS ROUTINE IS ENTERED VIA BAL R8 IF THE STATUS KEYWORD   @YL026YA 61816000
*   IS SPECIFIED ON THE COMMAND.                               @YL026YA 61820000
*   IT INITIALIZES THE PARAMETER LIST FOR DYNAMIC INFORMATION  @YL026YA 61824000
*   RETRIEVAL, WHICH WILL BE USED LATER TO RETRIEVE STATUS     @YL026YA 61828000
*   INFORMATION ABOUT SPECIFIC DATA SETS.                      @YL026YA 61832000
*                                                              @YL026YA 61836000
**********************************************************************  61840000
*  INITIALIZE THE REQUEST BLOCK                                @YL026YA 61844000
         XC    DAREQBLK(DABLKLN),DAREQBLK                      @YL026YA 61848000
*                                  CLEAR REQUEST BLOCK AREA    @YL026YA 61852000
         MVI   DARBLEN,DABLKLN     SET LENGTH OF BLOCK         @YL026YA 61856000
         MVI   DAVRBCD,S99VRBIN    SET VERBCODE FOR INFOR-     @YL026YA 61860000
*                                  MATION RETRIEVAL            @YL026YA 61864000
         LA    R3,TXTPTRS          GET ADDRESS OF TEXT PTRS    @YL026YA 61868000
         USING S99TUPL,R3                                      @YL026YA 61872000
         ST    R3,DATXTPT          SET ADDRESS OF TEXT POINTERS         61876000
         USING S99TUNIT,R2                                     @YL026YA 61880000
*   INITIALIZE DSNAME TEXT UNIT                                @YL026YA 61884000
         XC    TU1DSN(TU1LNGTH),TU1DSN CLEAR TEXT UNIT         @YL026YA 61888000
         LA    R2,TU1DSN           ADDRESS OF TEXT UNIT        @YL026YA 61892000
         ST    R2,S99TUPTR         TO TEXT POINTER             @YL026YA 61896000
         LA    R3,D4(R3)           MOVE TO NEXT TEXT POINTER   @YL026YA 61900000
         MVI   S99TUKEY+D1,DSNKEY  KEY TO RETRIEVE DSNAME      @YL026YA 61904000
         MVI   S99TUNUM+D1,L1      ONE PARAMETER               @YL026YA 61908000
*   INITIALIZE DDNAME TEXT UNIT                                @YL026YA 61912000
         XC    TU2DDN(TU2LNGTH),TU2DDN CLEAR TEXT UNIT         @YL026YA 61916000
         LA    R2,TU2DDN           ADDRESS OF TEXT UNIT        @YL026YA 61920000
         ST    R2,S99TUPTR         TO TEXT POINTER             @YL026YA 61924000
         LA    R3,D4(R3)           MOVE TO NEXT TEXT POINTER   @YL026YA 61928000
         MVI   S99TUKEY+D1,DDNKEY  KEY TO RETRIEVE DDNAME      @YL026YA 61932000
         MVI   S99TUNUM+D1,L1      ONE PARAMETER               @YL026YA 61936000
         MVI   S99TULNG+D1,L'TU2NAM LENGTH OF DDNAME FIELD     @YL026YA 61940000
*   INITIALIZE STATUS TEXT UNIT                                @YL026YA 61944000
         XC    TU3STAT(TU3LNGTH),TU3STAT CLEAR TEXT UNIT       @YL026YA 61948000
         LA    R2,TU3STAT          ADDRESS OF TEXT UNIT        @YL026YA 61952000
         ST    R2,S99TUPTR         TO TEXT POINTER             @YL026YA 61956000
         LA    R3,D4(R3)           MOVE TO NEXT TEXT POINTER   @YL026YA 61960000
         MVI   S99TUKEY+D1,STATKEY KEY TO RETRIEVE STATUS      @YL026YA 61964000
         MVI   S99TUNUM+D1,L1      ONE PARAMETER               @YL026YA 61968000
         MVI   S99TULNG+D1,L1      FIELD LENGTH IS ONE BYTE    @YL026YA 61972000
*   INITIALIZE NORMAL DISPOSITION TEXT UNIT                    @YL026YA 61976000
         XC    TU4DSPN(TU4LNGTH),TU4DSPN CLEAR TEXT UNIT       @YL026YA 61980000
         LA    R2,TU4DSPN          ADDRESS OF TEXT UNIT        @YL026YA 61984000
         ST    R2,S99TUPTR         TO TEXT POINTER             @YL026YA 61988000
         LA    R3,D4(R3)           MOVE TO NEXT TEXT POINTER   @YL026YA 61992000
         MVI   S99TUKEY+D1,NDSPKEY KEY TO RETRIEVE NORM DISP   @YL026YA 61996000
         MVI   S99TUNUM+D1,L1      ONE PARAMETER               @YL026YA 62000000
         MVI   S99TULNG+D1,L1      FIELD LENGTH IS ONE BYTE    @YL026YA 62004000
*   INITIALIZE CONDITIONAL DISPOSITION TEXT UNIT               @YL026YA 62008000
         XC    TU5DSPC(TU5LNGTH),TU5DSPC CLEAR TEXT UNIT       @YL026YA 62012000
         LA    R2,TU5DSPC          ADDRESS OF TEXT UNIT        @YL026YA 62016000
         ST    R2,S99TUPTR         TO TEXT POINTER             @YL026YA 62020000
         OI    S99TUPTR,S99TUPLN   INDICATE LAST TEXT UNIT     @YL026YA 62024000
         MVI   S99TUKEY+D1,CDSPKEY KEY TO RETRIEVE COND DISP   @YL026YA 62028000
         MVI   S99TUNUM+D1,L1      ONE PARAMETER               @YL026YA 62032000
         MVI   S99TULNG+D1,L1      FIELD LENGTH IS ONE BYTE    @YL026YA 62036000
*   POINT TO REQUEST BLOCK                                     @YL026YA 62040000
         LA    R2,DAREQBLK         ADDRESS OF REQUEST BLOCK    @YL026YA 62044000
         ST    R2,RQBLKAD          TO PARAMETER LIST POINTER   @YL026YA 62048000
         OI    RQBLKAD,S99RBPND    TURN HIGH-ORDER BIT ON      @YL026YA 62052000
         DROP  R2                                              @YL026YA 62056000
         DROP  R3                                              @YL026YA 62060000
         BR    R8                                                       62064000
         EJECT                                                          62068000
IKJEHMBR CSECT                                                 @YL026YA 62072000
*********************************************************************** 62076000
*                                                              @YL026YA 62080000
*   THIS ROUTINE CHECKS FOR DSNAME BEING A MEMBER NAME, CHECKS @YL026YA 62084000
*   TO SEE IF LABEL WAS SPECIFIED, AND CHECKS TO SEE IF THE    @YL026YA 62088000
*   MEMBERS OPTION WAS SPECIFIED.  IKJEHMBR IS ENTERED FROM    @YL026YA 62092000
*   THE MAINLINE PROCESSING ROUTINE VIA BALR 14,15.            @YL026YA 62096000
*                                                              @YL026YA 62100000
*********************************************************************** 62104000
MEMCHK   SAVE  (14,12),,*                                      @YL026YA 62108000
         LR    R10,R15             SET UP ADDESSABILITY TO THIS ROUTINE 62112000
         USING MEMCHK,R10          MAIN BASE FOR THIS ROUTINE  @YL026YA 62116000
         USING OBTWAD,R12          WORK AREA, R12 PASSED WITH ADDR      62120000
         GETMAIN R,LV=SAVELEN,SP=WORKSP  GET A SAVE AREA       @YL026YA 62124000
         ST    R13,D4(R1)          SAVE CALLERS SAVE AREA      @YL026YA 62128000
         ST    R1,D8(R13)          SAVE THIS ROUTINES SAVE AREA ADDR    62132000
         LR    R13,R1              THIS ROUTINES SAVE AREA ADDRESS      62136000
*                                                              @YL026YA 62140000
         TM    CONTROL,MEMNAME     IS DSNAME   A MEMBERNAME    @YL026YA 62144000
         BNO   LABELCHK            NO, GO CHECK LABEL KEYWORD  @YL026YA 62148000
         BAL   R8,MNAMROUT         LIST MEMBER DIRECTORY INFORMATION    62152000
LABELCHK TM    CONTROL,LABEL       SEE IF LABEL KEYWORD WAS SPECIFIED   62156000
         BNO   MEMBCHK             CHECK FOR MEMBERS KEYWORD   @YL026YA 62160000
         L     R15,VCONLBL         GET ADDR OF LABEL PROCESSING ROUTINE 62164000
         BALR  R14,R15             GO                          @YL026YA 62168000
MEMBCHK  EQU   *                                               @YL026YA 62172000
         TM    CONTROL,MEMBERS     WAS MEMBERS SPECIFIED       @YL026YA 62176000
         BNO   MEMEND              NO GO TEST FOR MORE NAMES IN LIST    62180000
         BAL   R8,MEMROUT          GO LIST PDS DIRECTORY       @YL026YA 62184000
MEMEND   LR    R1,R13                                                   62188000
         L     R13,D4(R1)          SAVE AREA ADDRESS           @YL026YB 62192000
         RETURN (14,12)            RETURN TO PROCESS MORE NAMES         62196000
         EJECT                                                 @YL026YA 62200000
MEMROUT  DS    0H                                                       62220020
*********************************************************************** 62250020
*                                                                       62280020
*     THIS ROUTINE GETS CONTROL IF THE MEMBERS KEYWORD WAS SPECIFIED.   62310020
*     IT CHECKS DSORG FOR PARTITIONED DATASET AND IF PARRTITIONED       62340020
*     SETS UP LINKAGE TO IKJEHMEM WHICH WILL LIST OUT THE DIRECTORY.    62370020
*                                                                       62400020
*********************************************************************** 62430020
         TM    DSORGSV,PO          IS DS PO                             62460000
         BCR   CONDZERO,R8         NO, RETURN TO MAINLINE               62480000
         LA    R7,OUTBUF           SETUP TO                             62500000
         LR    R6,R8               SAVE RETURN ADDRESS                  62520000
         MVC   D0(L'MEMHDG,R7),MEMHDG  MOVE HEADING TO BUFFER           62540000
         LA    R14,L'MEMHDG(R7)                                         62560000
         L     R15,VCONWRIT        GET ADDRESS OF WRITE ROUTINE         62580000
         BALR  R8,R15              GO WRITE BUFFER             @YL026YA 62600000
         TM    CONTROL,JFCB        SEE IF JFCB WAS READ                 62620000
         BO    MEMLINK             IF YES, GO LINK TO IKJEHMEM          62640000
         TM    ALLOCSW,ON          ALLOC OK                             62660000
         BO    DCODE00             YES JUST DO RDJFCB                   62680000
         L     R15,VCONALC         ADDRESS OF ALLOCATE ROUTINE @YL026YA 62700000
         BALR  R8,R15              GO ALLOCATE DATA SET        @YL026YA 62720000
         TM    ALLOCSW,ON          ALLOCATE OKAY                        62740000
         BO    DCODE00             YES DO RDJFCB                        62760000
         B     MEMEND              NO GET NEXT DSNAME          @YL026YA 62780000
*                                                                       62814020
*                                                                       63510020
DCODE00  EQU   *                                                        63540020
         LA    R2,OBTDCB                                                63600020
         LA    R3,DAIRLIST         ADDRESS OF DAIR LIST                 63630000
         USING DAPB08,R3           DAIR 08  ENTRY DSECT ADDRESSABILITY  63660000
         USING IHADCB,R2                                                63690020
         MVC   DCBDDNAM(DDNAMLEN),DA08DDN PUT DDNAME IN DCB             63720020
         DROP  R3                                                       63750020
         LA    R1,RDJL                                                  63780020
         LA    R3,OBTDCB                                                63810020
         RDJFCB ((R3)),MF=(E,(R1))                                      63840020
         DROP  R2                                                       63870020
         OI    CONTROL,JFCB        INDICATE RDJFCB WAS ISSUED           63900000
MEMLINK  EQU   *                                                        63930020
         L     R15,MEMMOD                                               63960020
         LA    R1,CALLIST                                               63990020
         CALL  (15),((R12),GETML,OUTBUF,WRITE,FREEML),VL,MF=(E,(1))     64020020
         B     MEMCODE(R15)        ANALYZE IKJEHMEM RETURN CODE         64050000
MEMCODE  B     MEMCDE00            SUCCESS                              64080000
         B     MEMCDE04            INSUFFICIENT CORE                    64110000
         B     MEMCDE08            I/O ERROR                            64140000
* THIS IS RC=12, MEMCDE12 MUST FOLLOW                            100000 64170021
MEMCDE12 EQU   *                                                        64470020
         MVI   ERR2,SECMSG04       SECOND LEVEL MESSAGE 4               64500020
MEMERROR EQU   *                                                        64530020
MEMSYN   EQU   *                                                        64570020
         MVI   ERR1,MSG04          MEMBERS NOT AVAIL                    64650000
         L     R15,VCONERR         GET ADDRESS OF ERROR MSG    @YL026YA 64670000
         BALR  R8,R15              GO PUT OUT MESSAGE          @YL026YA 64690000
MEMCDE00 EQU   *                                                        64710000
         LR    R8,R6                                                    64730000
         BR    R8                  RETURN TO CALLER                     64750000
MEMCDE04 MVI   ERR2,SECMSG06       SECOND LEVEL MESSAGE 6        100000 64820021
         B     MEMERROR            GO PROCESS ERROR              100000 64822021
MEMCDE08 MVI   ERR2,SECMSG05       SECOND LEVEL MESSAGE 5        100000 64826021
         LA    R2,SYNMSG           POINTER TO SYNAD DATA-        100000 64828021
         ST    R2,ERRINST2         TO I/O PARM LIST              100000 64828421
         B     MEMSYN              FINISH UP MSG                 100000 64828821
         EJECT                                                          64830020
MNAMROUT EQU   *                                                        66630020
*********************************************************************** 66660020
*                                                                     * 66690020
*   THIS ROUTINE GETS CONTROL IF THE DSNAME SPECIFIED WAS A MEMBER    * 66720020
*   NAME.  A CHECK IS MADE TO SEE IF DSORG IS PO, AND IF NOT, A       * 66750020
*   DIAGNOSTIC IS PUT TO THE TERMINAL. THE JFCB CONTROL BIT IS CHECKED* 66780020
*   AND IF ON THE DDNAME IS ALREADY IN THE DCB. THE DSORG IS MADE PO. * 66810020
*   IF IT IS OFF, CONTROL IS PASSED TO DAIR TO ALLOCATE THE DATASET,  * 66840020
*   AND THE DDNAME IS TAKEN FROM THE RETURNED LIST.                   * 66870020
*                                                                       66900020
*********************************************************************** 66930020
         TM    DS1DSORG,PO         IS DATASET PARTITIONED               66960000
         BNO   MNAMERR             NO, PROCESS AS AN ERROR              66990000
         LA    R7,OUTBUF           SET UP                               67020000
         TM    CONTROL,JFCB        SEE IF RDJFCB WAS ISSUED             67050000
         BNO   MNAMDAIR            IF NOT, GOT ALLOCATE DATASET         67080000
         LA    R2,OBTDCB           ADDRESS THE DCB                      67110000
         USING IHADCB,R2                                                67140000
MNAMOPEN MVI   DCBDSORG,PO         SET DSORG FOR BPAM                   67170000
*********************************************************************** 67247020
**  THIS CODE PUT IN TO BYPASS OPEN PROBLEM OF CARRY FIELDS TO        * 67254020
**  NEXT USER OF JFCB                                                   67261020
*                                                                       67268020
         SR    R1,R1               CLEAR WORK REG                       67275020
         ST    R1,DCBEXLST         CLEAR EXIT LIST                      67282020
         STH   R1,DCBBLKSI         CLEAR BLOCK SIZE                     67289020
         STH   R1,DCBLRECL         CLEAR LRECL                          67296020
         STH   R1,DCBKEYLE         CLEAR KEYLENGTH                      67303020
*********************************************************************** 67310020
         DROP  R2                                                       67320020
         LA    R2,OBTDCB                                                67350020
         LA    R1,OPENL                                                 67380020
         OPEN  ((R2)),MF=(E,(1))                                        67410020
         XC    BLDLLIST(BLDLLEN),BLDLLIST    CLEAR BLDL LIST            67440020
         LA    R1,BLDL1            INITIALIZE LIST FOR BLDL.            67470000
         STH   R1,BLDLLIST         ONE ENTRY                            67500000
         LA    R1,BLDLMAX                                               67530000
         STH   R1,BLDLL            MAXIMUM LIST LENGTH                  67560000
        MVI   BLDLNME,BLANK        BLANK OUT MEMBERNAME FIELD           67590000
        MVC   BLDLNME+D1(L7),BLDLNME  MOVE IN NAME                      67620000
         LA    R7,BLDLNME          SET UP FOR MOVING MEMBERNAME         67650000
         L     R3,D8(R9)           POINT AT NAME                        67680000
         LH    R1,D12(R9)          GET LENGTH TO BE MOVED               67710000
         BCTR  R1,R0               DECREMENT FOR EX OF MVC              67740000
         EX    R1,MOVE             MOVE MEMBER NAME TO LIST             67770000
         BLDL  OBTDCB,BLDLLIST                                          67800000
         B     BLDLCODE(R15)       ANALYZE RETURN CODE                  67830000
BLDLCODE EQU   *                                                        67860000
         B     BLDLOK              RC=00  SUCCESS                       67890000
         B     BLDLERR1            RC=04  ENTRY NOT FOUND               67920000
*  THIS IS RC=08, BLDERR MUST FOLLOW                             100000 67950000
BLDLERR  EQU   *                                                        67980000
         LA    R1,SECMSG07         I/O ERROR IN BLDL                    68010000
BLDLERR2 STH   R1,ERRSECND         PUT IN LIST                          68040000
         MVI   ERR1,MSG05          DIR INFO NOT AVAIL                   68070000
         L     R15,VCONERR         GET ADDRESS OF ERR ROUTINE  @YL026YA 68100000
         BALR  R8,R15              GO PUT OUT MESSAGE          @YL026YA 68130000
         B     BLDLEXIT            GO TO CLOSE DCB                      68190020
BLDLERR1 LA    R1,SECMSG09         MEMBER NOT FOUND MSG          100000 68200021
         B     BLDLERR2            FINISH REST OF MSG            100000 68210021
*                                                                       68220020
*                                                                       68250020
****** GO TO ALLOCATE THE DATA SET HERE TO GET THE DDNAME **            68280020
*                                                                       68310020
MNAMDAIR EQU   *                                                        68340020
         BAL   R8,ALLOCDS          GO ALLOCATE DATA SET                 68370000
**********************************************************************  68375020
         TM    ALLOCSW,ON          ALLOCATE OKAY                        68380020
         BO    MNAMRC00            YES PUT DDNAME IN DCB                68385020
         B     LABELCHK            GO CHECK LABEL KEYWORD               68390020
**********************************************************************  68395020
MNAMRC00 EQU  *                                                         68970020
         LA    R3,DAIRLIST                                              69010020
         USING DAPB08,R3              OF DAIR MACRO MAP                 69030020
         LA    R2,OBTDCB                                                69060020
         USING IHADCB,R2                                                69090020
         MVC   DCBDDNAM(L'DA08DDN),DA08DDN  PUT DDNME IN                69120020
         DROP  R3                                                       69150020
         DROP  R2                                                       69180020
         B     MNAMOPEN            GO OPEN DCB                          69210000
MNAMERR  EQU   *                                                        69230000
         MVI   ERR1,MSG05          DIR INFO NOT AVAIL                   69250000
         MVI   ERR2,SECMSG08       DATA SET NOT PO                      69270000
         L     R15,VCONERR         GET ADDRESS OF ERR ROUTINE  @YL026YA 69290000
         BALR  R8,R15              GO PUT OUT MESSAGE          @YL026YA 69310000
         B     LABELCHK            GO CHECK FOR LABEL EKYWORD           69330000
BLDLOK   EQU   *                                                        69350000
         MVC   OUTBUF(L'MNAMHDG),MNAMHDG  MOVE HEADING TO BUFFER        69370000
         LA    R7,OUTBUF           POINT AT BUFFER                      69390000
         LA    R14,L'MNAMHDG(R7)   POINT AT END OF BUFFER               69410000
         L     R15,VCONWRIT        GET ADDR OF WRITE ROUTINE   @YL026YA 69430000
         BALR  R8,R15              GO WRITE BUFFER             @YL026YA 69450000
         MVC   D2(L8,R7),BLDLNME   MOVE MEMBERNAME TO BUFFER   @YL026YA 69470000
         LA    R7,OUTBUF+MNAMTTR   POINT TO BUFFER LOCATION             69490000
         LA    R4,BLDLTT           POINT AT TTR                @YL026YA 69510000
         LA    R5,D3                INDICATE LENGTH OF DATA TO CONVERT  69530000
         LR    R6,R10              SAVE BASE                   @VS06864 69550000
         L     R15,VCONBHEX        ADDRESS OF BITOHEX          @VS06864 69570000
         L     R10,VCONLBL         ADDRESSABILITY FOR BITOHEX  @VS06864 69590000
         BALR  R8,R15              GO                                   69610000
         LR    R10,R6              MAIN ADDRESSABILITY         @VS06864 69630000
         TM    BLDLCD,HIGHBIT      TEST FOR ALIAS NAME         @YL026YA 69650000
         BO    NOTTRUE             YES, BRANCH                          69670000
         MVC   OUTBUF+MNAMALI(L'NO),NO   NOT AN ALIAS                   69690000
BLDLNEX  EQU   *                                                        69710000
         NI    BLDLCD,NOHIBIT      TURN OFF ALIAS BIT                   69730000
         XR    R1,R1               CLEAR REG                            69750000
        IC    R1,BLDLCD            AND INSERT BYTE                      69770000
         SRL   R1,D5               SHIFT OUT UNNEEDED BITS              69790000
         STC   R1,OUTBUF+MNAMTTRN  PUT TTRN IN BUFFER                   69810000
         OI    OUTBUF+MNAMTTRN,ZONE  SET SIGN POSITIVE                  69830000
        NI    BLDLCD,ONEF          TURN OFF UNNEEDED BITS               69850000
         LA    R7,OUTBUF+MNAMCNT   POINT TO PROPER BUFFER POSITION      69870000
         LA    R4,BLDLCD           POINT AT DATA TO CONVERT             69890000
         LA    R5,DTACNT           DATA BYTE COUNT                      69910000
         LR    R6,R10              SAVE BASE                   @VS06864 69930000
         L     R15,VCONBHEX        ADDRESS OF BITOHEX          @VS06864 69950000
         L     R10,VCONLBL         ADDRESSABILITY FOR BITOHEX  @VS06864 69970000
         BALR  R8,R15              GO                                   69990000
         LR    R10,R6              MAIN ADDRESSABILITY         @VS06864 70010000
*  THE FOLLOWING PROCESSES AND PRINTS THE USER DATA                     70030000
         LA    R7,OUTBUF+MNAMDATA  POINT AT PROPER BUFFER LOCATION.     70050000
        LA    R4,BLDLUSR           POINT AT USER DATA                   70070000
BLDLOK00 ST    R7,WORKROOM         SAVE                                 70090000
         ST    R4,WORKROOM+USERFLD  POINTERS.                           70110000
         XR    R5,R5                                                    70130000
        IC    R5,BLDLCD            PICK UP HW COUNT                     70150000
         LTR   R5,R5               TEST COUNT FOR ZERO                  70170000
         BZ    BLDLEND             IF ZERO, OUTPUT IS FINISHED          70190000
         MVI   BLDLCD,ZERO         CLEAR CNT IN LIST                    70210000
         CH    R5,TWO              COMPARE COUNT TO 2                   70230000
         BNH   BLDLOK01            IF LESS OR EQUAL,USE AS IS           70250000
         SH    R5,TWO              IF MORE, DECREMENT BY TWO            70270000
        STC   R5,BLDLCD            AND STORE BACK IN LIST               70290000
         LH    R5,TWO              SET COUNT TO CONVERT TO TWO          70310000
BLDLOK01 AR    R5,R5               CHANGE HALFWORD COUNT TO BYTE COUNT  70330000
         LR    R6,R10              SAVE BASE                   @VS06864 70350000
         L     R15,VCONBHEX        ADDRESS OF BITOHEX          @VS06864 70370000
         L     R10,VCONLBL         ADDRESSABILITY FOR BITOHEX  @VS06864 70390000
         BALR  R8,R15              GO                                   70410000
         LR    R10,R6              MAIN ADDRESSABILITY         @VS06864 70430000
         L     R7,WORKROOM         GET BUFFER PTR AND                   70450000
         LA    R7,BUFPTLN(R7)       INCREMENT IT.                       70470000
         LA    R6,OUTBUF+LSTFLD    COMPARE IT AGAINST                   70490000
         CR    R7,R6               END OF BUFFER.                       70510000
         BL    BLDLOK02            IF LESS, PROCESS MORE DATA.          70530000
         LA    R7,OUTBUF           IF MORE OR EQUAL, PUT OUT.           70550000
         LA    R14,LOCSAVOF(R7)       THE BUFFER AND RESET PTR.         70570000
         L     R15,VCONWRIT        GET ADDR OF WRITE ROUTINE   @YL026YA 70590000
         BALR  R8,R15              GO WRITE BUFFER             @YL026YA 70610000
BLDLOK02 L     R4,WORKROOM+USERFLD  GET DATA PTR AND                    70630000
         LA    R4,D4(R4)           INCREMENT IT.                        70650000
         B     BLDLOK00            GO PROCESS MORE DATA.                70670000
BLDLEND  LA    R7,OUTBUF           GET BUFFER ADDRESS                   70690000
         L     R6,WORKROOM         SEE IF THERE IS ANY                  70710000
         CR    R6,R7               DATA TO OUTPUT                       70730000
         BE    BLDLEXIT            NO, SKIP WRITE ROUTINE               70750000
         LA    R14,LOCSAVOF(R7)    SET END OF BUFFER INDICATION         70770000
         L     R15,VCONWRIT        GET ADDR OF WRITE ROUTINE   @YL026YA 70790000
         BALR  R8,R15              GO WRITE BUFFER             @YL026YA 70810000
BLDLEXIT EQU   *                                                        70830000
         LA    R2,OBTDCB                                                70850000
         LA    R1,CLOSEL           POINT AT LIST FORM OF CLOSE          70870000
         CLOSE  ((R2)),MF=(E,(1))                                       70890000
         LA    R2,OBTDCB           SET UP ADDRESSABILITY TO DCB         70910000
         USING IHADCB,R2                                                71550020
*********************************************************************** 71560020
**  THIS CODE PUT IN TO BYPASS OPEN PROBLEM                           * 71570020
*                                                                     * 71580020
         MVC   OBTDCB(EOLFS-DCBMDL),DCBMDL   SET DCB FIELDS BACK        71590020
         MVI   OBTJFCBX,EXITCODE   SET JFCB DCB EXIT CODE               71600020
*********************************************************************** 71610020
         LA    R1,OBTDCBXL         ADDRESS OF EXIT LIST FOR DCB         71640000
         ST    R1,DCBEXLST         RE-ESTABLISH EXIT LIST FOR JFCB      71670000
         DROP  R2                                                       71700020
         B     LABELCHK            CHECK LABEL OPTION                   71730020
NOTTRUE  MVC   OUTBUF+MNAMALI(L'YES),YES                                71760020
         B     BLDLNEX             DO NEXT BLDL                         71790020
         EJECT                                                 @YL026YA 71820000
*********************************************************************** 71821000
*                                                              @YL026YA 71822000
*   CONSTANTS FOR MEMBER NAME AND MEMBERS OPTION PROCESSING    @YL026YA 71823000
*                                                              @YL026YA 71824000
*********************************************************************** 71825000
MNAMHDG  DC    C'--MEMBER---TTR----ALIAS-TTRN-CNT-DATA'        @YL026YA 71826000
YES      DC    C'YES'              IS AN ALIAS NAME            @YL026YA 71827000
NO       DC    C'NO'               IS NOT AN ALIAS NAME        @YL026YA 71828000
TWO      DC    H'2'                TWO                         @YL026YA 71829000
MEMHDG   DC    C'--MEMBERS--'      HEADING FOR MEMBERS         @YL026YA 71830000
VCONLBL  DC    V(IKJEHLBL)         ADDRESS OF LABEL ROUTINE    @YL026YA 71831000
VCONWRIT DC    V(IKJEHWRT)         ADDRESS OF WRITE ROUTINE    @YL026YA 71832000
VCONERR  DC    V(IKJEHERR)         ADDRESS OF ERROR ROUTINE    @YL026YA 71833000
VCONALC  DC    V(IKJEHALC)         ADDRESS OF ALLOCATE ROUTINE @YL026YA 71834000
VCONBHEX DC    V(IKJEHBTX)         ADDRESS OF BIT-TO-HEX RTN   @YL026YA 71835000
         EJECT                                                          71836000
IKJEHDS1 CSECT                                                 @YL026YA 71837000
*                                                                       71850020
*  MACRO 'LIST' FORMS                                                   71880020
*                                                                       71910020
*                                                                       71940020
TPUTMDL  PUTLINE MF=L                                                   72000020
ENDTPUT  EQU   *                                                        72030020
LTPUTL   EQU   ENDTPUT-TPUTMDL                                          72060020
OLFS     EQU   *                   BEGINNING OF LIST FORMS              72090000
RDJMDL   RDJFCB                    (,(INPUT)),MF=L                      72120000
CLSTMDL  CAMLST                    SEARCH,OBTMDLNM,OBTMDLVO,OBTMDLWA    72150000
OBTMDLNM EQU   0                                                        72180020
OBTMDLVO EQU   0                                                        72210020
OBTMDLWA EQU   0                                                        72240020
DCBMDL   DCB   DSORG=PS,MACRF=R,RECFM=F,BLKSIZE=256,KEYLEN=8,LRECL=256,C72270020
               DDNAME=DUMMY                                             72300020
OPENMDL  OPEN  (,),MF=L            LIST FORM OF OPEN                    72330020
READMDL  READ  RMDECB,SF,,,'S',,,MF=L  MODEL FOR LIST FORM OF READ      72360020
CLOSEMDL CLOSE (,),MF=L            MODEL FOR LIST FORM OF CLOSE         72390000
EOLFS    EQU   *                   END OF LIST FORMS                    72420000
LOLFS    EQU   EOLFS-OLFS          LENGTH OF AREA TO MOVE.              72450000
ILFS EQU *                                                              72480020
GETMLMDL GETMAIN EC,MF=L                                                72510020
FREEMMDL FREEMAIN E,MF=L                                                72540020
EILFS    EQU   *                                                        72570020
LILFS    EQU   EILFS-ILFS                                               72600020
MOVE     MVC   D0(L0,R7),D0(R3)    GENERAL MOVE EXECUTED       @YL026YA 72630000
PARSECON DC    V(IKJEHPRM)         ADDRESS OF PARSE MACROS              72700000
*                                                                       72770000
MSGCSECT DC    V(IKJEHDSM)         ADDRESS OF MESSAGES CSECT            72840000
VCONBTHX DC    V(IKJEHBTX)         ADDRESS OF BIT-TO-HEX ROUTINE        72910000
BSCVCON  DC    V(IKJEHBSC)         ADDRESS OF BASIC INFO ROUTINE        72980000
VCONLABL DC    V(IKJEHLBL)         ADDRESS OF LABEL ROUTINE    @YL026YA 73050000
HISTVCON DC    V(IKJEHHIS)         ADDRESS OF HISTORY ROUTINE           73120000
STATVCON DC    V(IKJEHSTA)         ADDRESS OF STATUS ROUTINE            73190000
VCONMEM  DC    V(IKJEHMBR)         ADDRESS OF MEMBERS ROUTINE  @YL026YA 73260000
VCONAST  DC    V(IKJEHDS2)         ADDRESS OF ASTERISK ROUTINE @YL026YA 73330000
VSAMVCON DC    V(IKJEHVSM)         ADDRESS OF VSAM BASIC RTN   @YL026YA 73400000
STIVCON  DC    V(IKJEHSTI)         ADDRESS OF STATUS INIT RTN  @YL026YA 73470000
VCONCIR  DC    V(CIROUTN)                                               73540000
NOTCHAIN DC    X'FF000000'         END OF LIST INDICATOR FOR   @YL026YA 73610000
SUPPL1   DC    X'01000000'         SUBPOOL NUMBER              @YL026YB 73680000
*                                  PARSE                       @YL026YA 73750000
         DS    0H                  ALIGNMENT                     100000 73822021
C210     DC    X'0210'             DARC CODE 0210                100000 73824021
C218     DC    X'0218'             DARC CODE 0218                100000 73826021
RC16     DC    X'10'               RETURN CDE FOR DAIR CHECK    ZA00612 73828002
*   LENGTH OF WORKAREA FOR CIR PARAMETERS                      @YL026YB 73830000
CIRLEN   DC    H'5072'             LENGTH                      @YL026YB 73833000
*  CONSTANTS FOR VSAM LOCATE AND VSAM DATA SETS                @YL026YA 73836000
ENTYPE   DC    CL8'ENTYPE  '       FIELD NAME FOR ENTRY TYPE   @YL026YA 73839000
VOLSER   DC    CL8'VOLSER  '       FIELD NAME FOR VOLUME SERIAL         73842000
PHYBLKSZ DC    CL8'PHYBLKSZ'       FIELD NAME FOR BLOCK SIZE   @YL026YA 73845000
LRECL    DC    CL8'LRECL   '       FIELD NAME FOR RECORD LENGTH         73848000
CATACB   DC    CL8'CATACB  '       FIELD NAME FOR CATALOG ACB  @YL026YA 73851000
NAMEDS   DC    CL8'NAMEDS  '       FIELD NAME FOR RELATED NAMES         73854000
DSETCRDT DC    CL8'DSETCRDT'       FIELD NAME FOR CREATE DATE  @YL026YA 73857000
DSETEXDT DC    CL8'DSETEXDT'       FIELD NAME FOR EXPIRE DATE  @YL026YA 73860000
VOLLEN   DC    F'6'                LENGTH OF VOLUMES ENTRY     @YL026YA 73863000
ASTER    DC    C'**'               SYMBOL FOR UNDEFINED NUMBER @YL026YA 73866000
BASICHDG DC    C'--RECFM-LRECL-BLKSIZE-DSORG'  BASIC DATA HEADING       73869000
HISTHDG  DC    C'-CREATED---EXPIRES---SECURITY'  HISTORY DATA HEADING   73872000
STATHDG  DC    C'--DDNAME---DISP'  STATUS DATA HEADING         @YL026YA 73875000
VOLHDING DC    C'--VOLUMES--'      HEADING FOR VOLSER          @YL026YA 73878000
VSAMVHDG DC    C'--VOLUMES-BLKSIZE'  HEADING FOR VSAM VOLSER   @YL026YA 73881000
FIXAREA  DC    30F'0'              SPACE FOR PATCHES           @ZA10244 73884003
         EJECT                                                          73893000
IKJEHPRM IKJPARM                                                        73896000
PDSLIST  IKJPOSIT DSTHING,USID,LIST,PROMPT='DATA SET NAME'     @YL026YA 73899000
PHISTORY IKJKEYWD                                                       73920020
         IKJNAME  'HISTORY'                                             73950020
PSTATUS  IKJKEYWD                                                       73980020
         IKJNAME  'STATUS'                                              74010020
PMEMBERS IKJKEYWD                                                       74040020
         IKJNAME  'MEMBERS'                                             74070020
PLABEL   IKJKEYWD                                                       74100020
         IKJNAME  'LABEL'                                               74130020
PCATLG   IKJKEYWD                                                       74160000
         IKJNAME 'CATALOG',SUBFLD=PCATSF                       @YL026YA 74163000
PLEVEL   IKJKEYWD                                                       74166000
         IKJNAME 'LEVEL'                                       @YL026YA 74169000
PCATSF   IKJSUBF                                                        74172000
PCATNM   IKJPOSIT DSNAME,PROMPT='CATALOG NAME'                 @YL026YA 74175000
         IKJENDP                                                        74178000
         EJECT                                                          74181000
IKJEHDS2 CSECT                                                          74184000
         USING IKJEHDS2,R15        ADDRESSABILITY FOR CSECT             74187000
         USING OBTWAD,R12          ADDRESSABILITY FOR WORKAREA @YL026YA 74190000
*********************************************************************** 74193000
*              ASTERISK SCAN ROUTINE                                    74196000
*  THIS ROUTINE SCANS THE DATA SET NAME AND LOCATES ASTERISK            74199000
*  QUALIFIERS, IF PRESENT.  IT ALSO CHECKS THAT THE ASTERISK DOES NOT   74202000
*  OCCUR IN THE FIRST INDEX LEVEL AND THAT THERE IS NOT MORE THAN ONE   74205000
*  ASTERISK IN THE DATA SET NAME.  NOTE-  THE SCAN BY PARSE HAS CHECKED 74208000
*  SYNTAX OF DATA SET NAME WITH ASTERISK ALLOWED IN PLACE OF ANY INDEX  74211000
*  LEVEL.                                                               74214000
*  INPUT-      R2 POINTS TO DSNAME TO BE SCANNED                        74217000
*              R3 CONTAINS LENGTH OF THIS DSNAME                        74220000
*              R14 IS RETURN REGISTER                                   74223000
*  REGISTERS 2, 3, 4, AND 6 ARE USED                                    74226000
*  RETURN IS AS FOLLOWS-                                                74229000
*              0 PAST R14 IF * FOUND IN FIRST INDEX LEVEL               74232000
*              4 PAST R14 IF MORE THAN ONE * FOUND                      74235000
*              8 PAST R14 IF SCAN SUCCESSFULLY COMPLETED                74238000
*                                                                       74241000
SCANDSN  SR    R4,R4               ZERO REGISTER                        74244000
         ST    R4,STARADR          ZERO POINTER TO ASTERISK             74247000
         STC   R4,STARLEV          ZERO ASTERISK LEVEL INDICATOR        74250000
         AR    R3,R2               ADD LENGTH AND ADDRESS               74253000
*  REGISTER 3 POINTS PAST LAST CHARACTER OF DATA SET NAME               74256000
         LA    R4,D1               INITIALIZE LEVEL COUNTER TO ONE      74259000
         LR    R6,R4               SET REG 6 TO ONE FOR A LATER TEST    74262000
STARTST2 CLI   D0(R2),STAR         IS THIS CHARACTER AN ASTERISK        74265000
         BE    LEVLTST2            IF *, CHECK INDEX LEVEL              74268000
NXTCHAR2 LA    R2,D1(R2)           POINT TO NEXT CHARACTER              74271000
         CR    R2,R3               ARE THERE MORE CHARACTERS            74274000
         BE    ADD8                IF NOT SCAN IS FINISHED              74277000
         CLI   D0(R2),PERIOD       CHECK FOR PERIOD (NEW INDEX LEVEL)   74280000
         BNE   NXTCHAR2            IF NOT, CHECK NEXT CHARACTER         74283000
         LA    R4,D1(R4)           INCREMENT LEVEL COUNTER              74286000
         LA    R2,D1(R2)           POINT TO NEXT CHARACTER              74289000
         B     STARTST2            NEW INDEX LEVEL, GO CHECK FOR *      74292000
LEVLTST2 CR    R4,R6               IS THIS FIRST INDEX LEVEL            74295000
         BCR   EQ,R14              YES ERROR, * IN FIRST INDEX LEVEL    74298000
         CLI   STARLEV,ZERO        IS LEVEL INDICATOR ZERO     @YL026YA 74301000
         BNE   ADD4                NO, ERROR, MORE THAN ONE ASTERISK    74304000
         ST    R2,STARADR          SAVE ADDRESS OF ASTERISK             74307000
         STC   R4,STARLEV          SAVE LEVEL AT WHICH ASTERISK FOUND   74310000
         B     NXTCHAR2            GO CHECK NEXT CHARACTER              74313000
ADD4     LA    R14,D4(R14)         BUMP RETURN ADDRESS BY 4             74316000
         BR    R14                 RETURN                               74319000
ADD8     LA    R14,D8(R14)         BUMP RETURN ADDRESS BY 8             74322000
         BR    R14                 RETURN                               74325000
         DROP  R15                 IKJEHDS2 NO LONGER NEEDED            74328000
*                                                                       74331000
*  WHEN THE SCAN IS FINISHED                                            74334000
*        STARLEV  WILL CONTAIN LEVEL AT WHICH ASTERISK FOUND            74337000
*        STARADR  WILL CONTAIN ADDRESS AT WHICH ASTERISK FOUND          74340000
*        BOTH WILL CONTAIN ZERO IF NO ASTERISK FOUND                    74343000
*                                                                       74346000
*********************************************************************** 74349000
         EJECT                                                          74352000
         IKJEHCOM                                              @YL026YA 74355000
         ORG   OBTWAEND            ADJUST FOR CONTINUATION OF WORKAREA  74358000
PARDSECT DS    F                   ADDRESS OF PARSE DSECT               74361000
FIRSTIME DS    C                   CONTROLS UNALLOCATE LOGIC            74364000
ALLOCSW  DS    C                   CONTROLS ALLOCATE SWITCH             74367000
OPTMASK  DS    C                   CONTAINS KEYWORD INDICATORS          74370000
OPTMASK2 DS    C                   CONTAINS KEYWORD INDICATORS @YL026YA 74373000
CONTROL  DS    C                   CTL OPTIONS FOR INDIVIDUAL ENTRIES.  74376000
DEFLIST  DS    3F                  DEFAULT PARM LIST                    74379000
SAVEDDN  DS    8X                  DDNAME SAVE AREA                     74382000
RETADDR  DS    F                   HOLDS ADDRESS OF CALLER TO ALLOCDS   74385000
**********************************************************************  74388000
*                                                              @YL026YA 74391000
*   PARAMETER LIST FOR IKJEHCIR                                @YL026YA 74394000
*                                                              @YL026YA 74397000
*********************************************************************** 74400000
CIRADDR  DS    F                   ADDRESS OF IKJEHCIR ROUTINE @YL026YA 74403000
CIRPARM  DS    0C                  PARAMETER LIST              @YL026YA 74406000
CIROPT   DS    CL1                 OPTION BYTE                 @YL026YA 74409000
         DS    CL2                 RESERVED                    @YL026YA 74412000
CIRLOCRC DS    CL1                 LOCATE RETURN CODE          @YL026YA 74415000
CIRSRCH  DS    F                   POINTER TO NAME             @YL026YA 74418000
CIRCVOL  DS    F                   POINTER TO USER CATALOG     @YL026YA 74421000
CIRWA    DS    F                   POINTER TO OUTPUT WORKAREA  @YL026YA 74424000
CIRSAVE  DS    F                   18-WORD SAVE AREA ADDRESS   @YL026YA 74427000
CIRPSWD  DS    F                   POINTER TO 8-BYTE PASSWORD  @YL026YA 74430000
CIRPMLN  EQU   *-CIRPARM           LENGTH OF PARAMETER LIST    @YL026YA 74433000
*********************************************************************** 74490020
*                                                                       74520020
*        THE FOLLOWING CONSTANTS, BUFFER AND PUTLINE MACRO MUST ALL     74550020
*        APPEAR TOGETHER IN THE SPECIFIED ORDER SO THAT THE WRITE       74580020
*        ROUTINE WILL REMAIN INDEPENDANT OF A BASE REGISTER.            74610020
*                                                                       74640020
*********************************************************************** 74670020
PARMLSTS DS    0F                                                       74700020
PUTLCON  DS    F                   PTR TO LIST FOR PUTLINE MACRO        74730000
DPUTLCON DS    F                   PTR TO PUTLINE LIST FORM             74760000
UPTPTR   DS    F                   UPT PTR                              74790000
ECTPTR   DS    F                   ECT PTR                              74820000
ECBPTR   DS    F                   CP ECB PTR                           74850000
PUTLADDR DS    F                   ENTRY POINT OF PUTLINE               74880000
PARMLSTL EQU   *-PARMLSTS                                               74910000
*                                                                       74940000
         DS    F                   LL AND OFF FIELDS FOR OUTPUT LINES   74970000
OUTBUF   DS    CL108               OUTPUT BUFFER                        75000020
DPUTLINE PUTLINE MF=L                                                   75030020
*                                                                       75060020
*                                                                       75090020
*    AREA FOR SERVICE ROUTINE PARM LIST **                              75120020
PUTLLIST DS    7F                  PARMLIST  FOR RTNS                   75150000
*                                                                       75170000
*    END OF SERVICE AREA ROUTINE PARMLIST *                             75190000
CIRDSN   DS    CL44                DATA SET NAME BUFFER FOR CIR         75210000
CIRPASS  DS    CL8                 PASSWORD BUFFER             @YL026YA 75230000
STARADR  DS    F                   ADDRESS OF * IN NAME        @YL026YA 75250000
STARLEV  DS    CL1                 POSITION OF * IN NAME       @YL026YA 75270000
*                                                              @YL026YA 75290000
         DS    0H                  HALF WORD BNDRY             @YL026YB 75310000
LASTQLEN DS    H                   LENGTH OF TRAILING QUALIFIER         75330000
LASTQUAL DS    CL44                TRAILING QUALIFIER BUFFER   @YL026YA 75350000
PARSPTR  DS    F                   VALUE OF DSLIST POINTER (R9)         75370000
*                                    BEFORE CALLING CIR        @YL026YA 75390000
NAMEBUFF DS    CL44                FOR BUILDING FULLY QUALIFIED         75410000
*                                  NAME TO TEST AGAINST        @YL026YA 75430000
CATBUFF  DS    CL44                44-BYTE CATALOG NAME        @YL026YA 75450000
PROCNM   DS    CL1                 NAME PROCESSING INDICATOR - @YL026YA 75470000
*                                   X'00' - NAME FROM DSLIST   @YL026YA 75490000
*                                   X'FF' - NAME FROM CIR LIST @YL026YA 75510000
         DS    0H                       HALF WORD BNDRY         ZA00105 75530002
         DS    CL1                 ALIGN LAST 2 BYTES OF        ZA00105 75533002
*                                  CREDT TO HALF WORD           ZA00105 75536002
WRKCREDT DS    CL3                 COMMON CREATION DATE        @YL026YA 75539002
         DS    CL1                 ALIGN LAST 2 BYTES OF        ZA00105 75542002
*                                  EXPDT TO HALF WORD           ZA00105 75545002
WRKEXPDT DS    CL3                 COMMON EXPIRATION DATE      @YL026YA 75550000
DSTYPE   DS    CL1                 ENTRY TYPE CODE             @YL026YA 75570000
CPECB    DS    F                   CP ECB                      @YL026YA 75590000
PSCBPTR  DS    F                   PSCB PTR                    @YL026YA 75610000
GETML    GETMAIN EC,MF=L                                                75630000
FREEML   FREEMAIN                  E,MF=L                               75650000
GETMVCL  GETMAIN VC,MF=L                                       @YL026YA 75670000
        EJECT                                                           75810020
*********************************************************************** 75840020
*                                                                       75870020
*   THE  FOLLOWING 3 WORDS ARE USED TO PASS PARAMETERS TO THE           75900020
*   ERROR HANDLING ROUTINE. THE FIRST TWO BYTES CONTAIN THE RELATIVE    75930020
*   POSITION OF THE MESSAGE IN THE MESSAGE CSECT. THE NEXT TWO BYTES    75960020
*   CONTAIN THE A NUMBER THAT INDICATES WHICH SECOND LEVEL MESSAGE      75990020
*   IS TO BE SELECTED. THE SECOND WORD POINTS A FIELD CONTAINING        76020020
*   A ONE BYTE LENGTH FIELD FOLLOWED BY DATA TO BE INSERTED IN THE      76050020
*   FIRST MESSAGE. THE LAST WORD CONTAINS A SIMILAR POINTER FOR THE     76080020
*   SECOND MESSAGE.                                                     76110020
*                                                                       76140020
*********************************************************************** 76170020
ERRPARM  DS    0F                                                       76200020
ERRFIRST DS    H                   FIRST LEVEL MSG RELATIVE NUMBER      76230000
ERRSECND DS    H                   SECOND LEVEL MSG RELATIVE NUMBER     76250000
ERRINST1 DS    F                   PTR TO INSERT DATA FOR LEVEL 1       76270000
ERRINST2 DS    F                   PTR TO INSERT DATA FOR LEVEL 2       76290000
ERREND   EQU   *                                                        76326020
ERRLIST  EQU   ERREND-ERRPARM                                           76332020
ERR1     EQU   ERRFIRST+D1                                              76338020
ERR2     EQU   ERRSECND+D1                                              76344020
         DS    0D                                                       76350020
ERRINSRT DS    CL45                FOR PASSING DATA TO ERROR HANDLER TO 76380000
*                                BE INSERTED IN A MESSAGE               76400000
WORKROOM EQU   ERRINSRT                                                 76420000
MSGPARM1 DS    1F                  FIRST LEVEL MSG PARM LIST            76440000
MPM11    DS    1F                  OFFSET OF 4                          76460000
MPM12    DS    1F                  OFFSET OF 8                          76480000
MSGPARM2 DS    1F                  SECOND LEVEL MSG PARM LIST           76500000
MPM21    DS    1F                  OFFSET OF 4                          76520000
MPM22    DS    1F                  OFFSET OF 8                 @YL026YA 76540000
DAIRLIST DS    21F                 DAIR PARAMETER LIST           YM1019 76560000
         DS    0H                  HALFWORD ALIGN NEXT FIELD     A42337 76580000
CURNTNAM DS    CL47                DSNAME CURRENTLY BEING PROCESSED     76600000
TEMPNAME EQU   CURNTNAM+2          ADDRESS OF CURRENT NAME              76620000
MEMMOD   DS    F                   CONTAINS ADDRESS OF IKJEHMEM         76640000
DSORGSV  DS    CL2                 SAVE DSORG TYPE                      76660000
* * * * * * * * * * * * * * * * * * *                                   76680000
BLDLLIST DS    0H                  LIST FOR BLDL MACRO                  76700000
BLDLFF  DS    H                    FLAG OPTIONS                         76720000
BLDLL   DS    H                    LENGTH OF ENTRY                      76740000
BLDLNME  DS    CL8                 MEMBERNAME                           76760000
BLDLTT   DS    H                   RELATIVE TRACK NUMBER                76780000
BLDLR    DS    X                   BLOCK NUMBER                         76800000
BLDLK    DS    X                   CONCATENATION NUMBER                 76820000
BLDLZ    DS    X                   WHERE FOUND                          76840000
BLDLCD   DS    X                   MASK OF TYPE NAME                    76860000
BLDLUSR  DS    31H                 USER AREA                            76880000
         DS    8F                  ADDED SPACE FOR I/O SYNAD ERROR      76900000
* * * * * * * * * * * * * * * * * * *                                   76920000
SAVEAREA DS    28F                 SAVEAREA AND LOCAL SAVEAREA          76940000
OBTCCHHR DS    CL5                 HOLDS CCHHR OF NEXT DSCB IN CHAIN    76960000
STACKSW  DS    CL1                 INDICATE FLUSH STACK AND CLEAR QUEUE 77160420
STACKPRM DS    2F                  STACK PARM BLOCK                     77160820
         EJECT                                                          77161020
*********************************************************************** 77162000
*                                                              @YL026YA 77162100
*   THE FOLLOWING DECLARES ARE USED FOR DYNAMIC INFORMATION    @YL026YA 77162200
*   RETRIEVAL.                                                 @YL026YA 77162300
*                                                              @YL026YA 77162400
*********************************************************************** 77162500
DAREQBLK DS    0F                  REQUEST BLOCK FOR DYNAMIC   @YL026YA 77162600
*                                  ALLOCATION                  @YL026YA 77162700
DARBLEN  DS    CL1                 LENGTH OF BLOCK             @YL026YA 77162800
DAVRBCD  DS    CL1                 VERB CODE                   @YL026YA 77162900
DAFLGS1  DS    CL2                 FLAGS                       @YL026YA 77163000
DAERRCD  DS    CL2                 ERROR REASON CODE           @YL026YA 77163100
DAINFCD  DS    CL2                 INFORMATIONAL RETURN CODE   @YL026YA 77163200
DATXTPT  DS    CL4                 ADDRESS OF TEXT POINTERS    @YL026YA 77163300
         DS    CL4                                             @YL026YA 77163400
         DS    CL4                                             @YL026YA 77163500
DABLKLN  EQU   *-DAREQBLK          LENGTH OF REQUEST BLOCK     @YL026YA 77163600
*                                                              @YL026YA 77163700
TXTPTRS  DS    5F                  ADDRESSES OF TEXT UNITS     @YL026YA 77163800
TU1DSN   DS    0C                  TEXT UNIT FOR DSNAME        @YL026YA 77163900
TU1KEY   DS    CL2                                             @YL026YA 77164000
TU1NUM   DS    CL2                                             @YL026YA 77164100
TU1LEN   DS    CL2                                             @YL026YA 77164200
TU1NAM   DS    CL44                                            @YL026YA 77164300
TU1LNGTH EQU   *-TU1DSN                                        @YL026YA 77164400
TU2DDN   DS    0C                  TEXT UNIT FOR DDNAME        @YL026YA 77164500
TU2KEY   DS    CL2                                             @YL026YA 77164600
TU2NUM   DS    CL2                                             @YL026YA 77164700
TU2LEN   DS    CL2                                             @YL026YA 77164800
TU2NAM   DS    CL8                                             @YL026YA 77164900
TU2LNGTH EQU   *-TU2DDN                                        @YL026YA 77165000
TU3STAT  DS    0C                  TEXT UNIT FOR STATUS        @YL026YA 77165100
TU3KEY   DS    CL2                                             @YL026YA 77165200
TU3NUM   DS    CL2                                             @YL026YA 77165300
TU3LEN   DS    CL2                                             @YL026YA 77165400
TU3VALUE DS    CL1                                             @YL026YA 77165500
TU3LNGTH EQU   *-TU3STAT                                       @YL026YA 77165600
TU4DSPN  DS    0C                  TEXT UNIT FOR NORMAL DISP   @YL026YA 77165700
TU4KEY   DS    CL2                                             @YL026YA 77165800
TU4NUM   DS    CL2                                             @YL026YA 77165900
TU4LEN   DS    CL2                                             @YL026YA 77166000
TU4VALUE DS    CL1                                             @YL026YA 77166100
TU4LNGTH EQU   *-TU4DSPN                                       @YL026YA 77166200
TU5DSPC  DS    0C                  TEXT UNIT FOR COND. DISP.   @YL026YA 77166300
TU5KEY   DS    CL2                                             @YL026YA 77166400
TU5NUM   DS    CL2                                             @YL026YA 77166500
TU5LEN   DS    CL2                                             @YL026YA 77166600
TU5VALUE DS    CL1                                             @YL026YA 77166700
TU5LNGTH EQU   *-TU5DSPC                                       @YL026YA 77166800
*   INFORMATION RETRIEVAL KEYS FOR FIELDS                      @YL026YA 77166900
DSNKEY   EQU   X'02'               DSNAME                      @YL026YA 77167000
DDNKEY   EQU   X'04'               DDNAME                      @YL026YA 77167100
STATKEY  EQU   X'07'               STATUS                      @YL026YA 77167200
NDSPKEY  EQU   X'08'               NORMAL DISPOSITION          @YL026YA 77167300
CDSPKEY  EQU   X'09'               CONDITIONAL DISPOSITION     @YL026YA 77167400
*                                                              @YL026YA 77167500
RQBLKAD  DS    0F                  POINTER TO REQUEST BLOCK    @YL026YA 77167600
*   END OF INFORMATION RETRIEVAL AREAS                         @YL026YA 77167700
         EJECT                                                 @YL026YA 77167800
TMPSR1   DS    F                   SAVE TMP'S REGISTER 1 HERE           77167900
STAEADDR DS    F                   ADDRESS OF IKJUSTAE                  77168000
CNVRTWD  DS    H                   CONTAINS RETURN CODE                 77168100
*  DATA SET NAME INSERTION BUFFER FOR MESSAGES                   A42337 77168200
MSGNAMEL DS    H                   DSNAME LENGTH                 A42337 77168300
MSGNAME  DS    CL48                DSNAME FOR MESSAGE INSERTION  A42337 77168400
         PSEUDO MF=L                                                    77168500
STAELIST STAE  STAEADDR,PARAM=STAEPARM,MF=L                             77168600
STAEONE  STABUILD CODE=(113,213,313,713,913),ADDR=STAEONE,NUM=2,       X77168700
               FLAG=(MUL,NMSG),LIST=STAELST,RTN=OPENERR,               X77168800
               MF=L                                                     77169020
STAETWO  STABUILD CODE=000,RTN=ANYABND,ADDR=STAETWO,                   X77170020
               FLAG=(ALL,NMSG,END),                                    X77171020
               MF=L                                                     77172020
         ORG                                                            77173020
         STAEPARM FLAG=(CP),LIST=STAEONE,ADDR=STAEPARM,PSEUDO=$PSEUDO, X77174020
               MF=L                                                     77175020
STAELNTH EQU   *-STAELIST          SIZE OF STAE LISTS                   77176020
LABELHEX EQU   BLDLLIST            FOR CONVERTING LABEL TO HEX          77190000
SECBUFF  EQU   BLDLLIST                                                 77193000
         IEZCTGPL                                              @YL026YA 77196000
         EJECT                                                 @YL026YA 77199000
         IEZCTGFL                                              @YL026YA 77202000
         EJECT                                                 @YL026YA 77205000
OBTWAD   DSECT                                                 @YL026YA 77208000
CPLAREA  DS    CL(CTGPLLEN)        SPACE FOR CPL               @YL026YA 77211000
         DS    7A                  SPACE FOR FIELD POINTERS    @YL026YA 77214000
CATWORK1 DS    CL512               CATALOG WORK AREA           @YL026YA 77217000
CATWORK2 DS    CL512               CATALOG WORK AREA ALSO      @YL026YA 77220000
CTGFL1   DS    6A                  FPL SPACE                   @YL026YA 77223000
CTGFL2   DS    6A                  FPL SPACE                   @YL026YA 77226000
CTGFL3   DS    6A                  FPL SPACE                   @YL026YA 77229000
CTGFL4   DS    6A                  FPL SPACE                   @YL026YA 77232000
CTGFL5   DS    6A                  FPL SPACE                   @YL026YA 77235000
CTGFL6   DS    6A                  FPL SPACE                   @YL026YA 77238000
CTGFL7   DS    6A                  FPL SPACE                   @YL026YA 77241000
CTGFL8   DS    6A                  FPL SPACE                   @YL026YA 77244000
WORKSIZE EQU   *-OBTDSNAM                                               77250020
         EJECT                                                          77280020
         DCBD  DSORG=PS                                                 77310020
         EJECT                                                          77340020
         CVT                                                            77370020
         EJECT                                                          77400020
         IKJTCB                                                         77430020
         EJECT                                                          77460020
         IEFZB4D0                                              @YL026YA 77490000
         EJECT                                                          77540000
         IKJCPPL                                                        77590000
         IKJPSCB                                                        77640000
         IKJUPT                                                @YL026YB 77690000
         IKJPPL                                                         77740000
         IKJDAPL                                                        77790000
         EJECT                                                 @YL026YA 77840000
         IKJDFPL                                                        77890000
         IKJDFPB                                                        77940000
         EJECT                                                          77990000
         IKJDAP2C                                                       78090020
DAIR2CLN EQU   *-DAPB2C            LENGTH OF DAIR PARM BLOCK 2C         78100020
         EJECT                                                          78150020
         IKJDAP08                                                       78180020
DAIR08LN EQU   *-DAPB08            LENGTH OF DAIR08 PARM BLOCK          78190020
         EJECT                                                          78210020
IKJEHDSM CSECT                                                          78240020
*********************************************************************** 78270020
*                                                                     * 78300020
*        THIS MODULE CONTAINS THE MESSAGES USED BY THE LISTDS COMMAND * 78390020
*                                                                     * 78420020
*        THE BEGINNING OF THE CSECT CONTAINS A TABLE WITH ONE DWORD   * 78930020
*        ENTRY FOR EACH MESSAGE. THE FIRST HWORD CONTAINS THE LENGTH  * 78960020
*        OF THE FIRST LEVEL MESSAGE. THE SECOND HWORD CONTAINS THE    * 78990020
*        OFFSET OF THE MESSAGE INTO THE CSECT. THE THIRD HWORD        * 79020020
*        CONTAINS THE OFFSET TO THE SEGMENT STRING.    THE FOURTH     * 79050020
*        AND LAST HWORD POINTS TO A CHAIN OF FWORDS POINTING TO THE   * 79080020
*        SECOND LEVEL MESSAGES.                                       * 79110020
*                                                                       79260020
*********************************************************************** 79290020
STARTDSM DS    0F                  ALIGN TO A FULL WORD BOUNDARY        79320000
         DC    AL2(L'MSGE1)        LENGTH OF MESSAGE 1                  79350020
         DC    AL2(MSGE1-STARTDSM) OFFSET OF MESSAGE 1                  79380020
         DC    AL2(OFFSEG1-STARTDSM)            OFFSET TO NEXT SEGMENT  79410020
         DC    AL2(SECLEVEL-STARTDSM) OFFSET TO SECOND LEVEL MESSAGES   79440020
         DC    AL2(L'MSGE2)                                             79470020
         DC    AL2(MSGE2-STARTDSM)                                      79500020
         DC    AL2(0)                                                   79530020
         DC    AL2(SECLEVEL-STARTDSM)                                   79560020
         DC    AL2(L'MSGE3)                                             79590020
         DC    AL2(MSGE3-STARTDSM)                                      79620020
         DC    AL2(0)                                                   79650020
         DC    AL2(SECLEVEL-STARTDSM)                                   79680020
         DC    AL2(L'MSGE4)                                             79710020
         DC    AL2(MSGE4-STARTDSM)                                      79740020
         DC    AL2(0)                                                   79770020
         DC    AL2(SECLEVEL-STARTDSM)                                   79800020
         DC    AL2(L'MSGE5)                                             79830020
         DC    AL2(MSGE5-STARTDSM)                                      79860020
         DC    AL2(0)                                                   79890020
         DC    AL2(SECLEVEL-STARTDSM)                                   79920020
         DC    AL2(L'MSGE6)                                             79950020
         DC    AL2(MSGE6-STARTDSM)                                      79980020
         DC    AL2(0)                                                   80010020
         DC    AL2(SECLEVEL-STARTDSM)                                   80040020
         DC    AL2(L'MSGE7)        LENGTH OF MSG 7                      80070000
         DC    AL2(MSGE7-STARTDSM) OFFSET TO MSG 7                      80100020
         DC    AL2(OFFSEG7-STARTDSM)   OFFSET TO SEGMENT                80130020
         DC    AL2(SECLEVEL-STARTDSM) SECOND LEVEL TABLE                80160020
          DC    AL2(L'MSGE8)                                            80190020
          DC    AL2(MSGE8-STARTDSM)                                     80220020
          DC    AL2(OFFSEG8-STARTDSM)                                   80250020
          DC    AL2(SECLEVEL-STARTDSM)                                  80280020
          DC    AL2(L'MSGE9)                                            80310020
          DC    AL2(MSGE9-STARTDSM)                                     80340020
          DC    AL2(OFFSEG9-STARTDSM)                                   80370020
          DC    AL2(SECLEVEL-STARTDSM)                                  80400020
          DC    AL2(L'MSGE10)                                           80430020
          DC    AL2(MSGE10-STARTDSM)                                    80460020
          DC    AL2(OFFSEG10-STARTDSM)                                  80490020
          DC    AL2(SECLEVEL-STARTDSM)                                  80520020
          DC    AL2(L'MSGE11)                                           80550020
          DC    AL2(MSGE11-STARTDSM)                                    80580020
          DC    AL2(OFFSEG11-STARTDSM)                                  80610020
          DC    AL2(SECLEVEL-STARTDSM)                                  80640020
          DC    AL2(L'MSGE12)                                           80670020
          DC    AL2(MSGE12-STARTDSM)                                    80700020
          DC    AL2(OFFSEG12-STARTDSM)                                  80730020
          DC    AL2(SECLEVEL-STARTDSM)                                  80760020
          DC    AL2(L'MSGE13)                                           80790020
          DC    AL2(MSGE13-STARTDSM)                                    80820020
          DC    AL2(0)                                                  80850020
          DC    AL2(SECLEVEL-STARTDSM)                                  80880020
          DC    AL2(L'MSGE14)                                           80910020
          DC    AL2(MSGE14-STARTDSM)                                    80940020
          DC    AL2(0)                                                  80970020
          DC    AL2(SECLEVEL-STARTDSM)                                  81000020
          DC    AL2(L'MSGE15)                                           81030020
          DC    AL2(MSGE15-STARTDSM)                                    81060020
          DC    AL2(OFFSEG15-STARTDSM)                                  81090020
          DC    AL2(SECLEVEL-STARTDSM)                                  81120020
*                                                                       81150020
          DC    AL2(L'MSGE16)                                           81180020
          DC    AL2(MSGE16-STARTDSM)                                    81210020
          DC    AL2(OFFSEG16-STARTDSM)                                  81240020
         DC    AL2(SECLEVEL-STARTDSM)                                   81270020
         DC    AL2(L'MSGE17)                                            81300020
         DC    AL2(MSGE17-STARTDSM)                                     81330020
         DC    AL2(OFFSEG17-STARTDSM)                                   81360020
         DC    AL2(SECLEVEL-STARTDSM)                                   81390020
         DC    AL2(L'MSGE18)                                   @YL026YA 81392000
         DC    AL2(MSGE18-STARTDSM)                            @YL026YA 81394000
         DC    AL2(OFFSEG18-STARTDSM)                          @YL026YA 81396000
         DC    AL2(SECLEVEL-STARTDSM)                          @YL026YA 81398000
         DC    AL2(L'MSGE19)                                   @YL026YA 81400000
         DC    AL2(MSGE19-STARTDSM)                            @YL026YA 81402000
         DC    AL2(0)                                          @YL026YA 81404000
         DC    AL2(SECLEVEL-STARTDSM)                          @YL026YA 81406000
         DC    AL2(L'MSGE20)                                   @VS06783 81408000
         DC    AL2(MSGE20-STARTDSM)                            @VS06783 81410000
         DC    AL2(0)                                          @VS06783 81412000
         DC    AL2(SECLEVEL-STARTDSM)                          @VS06783 81414000
*        SECOND LEVEL MESSAGE TABLE--6 BYTES PER ENTRY INCLUDING A      81420020
*        2 BYTE LENGTH, A 2 BYTE MESSAGE OFFSET, A 2 BYTE SEGMENT ADDR. 81450020
SECLEVEL DS    0F                                                       81480020
         DC    AL2(L'MSGSEC01)                                          81510020
         DC    AL2(MSGSEC01-STARTDSM)                                   81540020
         DC    AL2(0)                                                   81570020
         DC    AL2(L'MSGSEC02)                                          81600020
         DC    AL2(MSGSEC02-STARTDSM)                                   81630020
         DC    AL2(0)                                                   81660020
         DC    AL2(L'MSGSEC03)                                          81690020
         DC    AL2(MSGSEC03-STARTDSM)                                   81720020
         DC    AL2(0)                                                   81750020
         DC    AL2(L'MSGSEC04)                                          81780020
         DC    AL2(MSGSEC04-STARTDSM)                                   81810020
         DC    AL2(0)                                                   81840020
         DC    AL2(L'MSGSEC05)                                          81870020
         DC    AL2(MSGSEC05-STARTDSM)                                   81900020
         DC    AL2(0)                                                   81930020
         DC    AL2(L'MSGSEC06)                                          81960020
         DC    AL2(MSGSEC06-STARTDSM)                                   81990020
         DC    AL2(0)                                                   82020020
         DC    AL2(L'MSGSEC07)                                          82050020
         DC    AL2(MSGSEC07-STARTDSM)                                   82080020
         DC    AL2(0)                                                   82110020
         DC    AL2(L'MSGSEC08)                                          82140020
         DC    AL2(MSGSEC08-STARTDSM)                                   82170020
         DC    AL2(0)                                                   82200020
         DC    AL2(L'MSGSEC09)     LENGTH OF SEC LEVEL MSG 9            82230000
         DC    AL2(MSGSEC09-STARTDSM) OFFSET TO MSG 9                   82260000
         DC    AL2(0)              OFFSET TO SEGMENT TABLE              82290000
         DC    AL2(L'MSGSEC10)     LENGTH OF SEC LEVEL MSG 10           82320000
         DC    AL2(MSGSEC10-STARTDSM) OFFSET TO MESSAGE                 82350000
         DC    AL2(0)              OFFSET TO SEGMENT TABLE              82380000
          DC    AL2(L'MSGSEC11)                                         82410020
          DC    AL2(MSGSEC11-STARTDSM)                                  82440020
          DC    AL2(0)                                                  82470020
          DC    AL2(L'MSGSEC12)                                         82500020
          DC    AL2(MSGSEC12-STARTDSM)                                  82530020
          DC    AL2(0)                                                  82560020
          DC    AL2(L'MSGSEC13)                                         82590020
          DC    AL2(MSGSEC13-STARTDSM)                                  82620020
          DC    AL2(0)                                                  82650020
          DC    AL2(L'MSGSEC14)                                         82680020
          DC    AL2(MSGSEC14-STARTDSM)                                  82710020
          DC    AL2(0)                                                  82740020
          DC    AL2(L'MSGSEC15)                                         82770020
          DC    AL2(MSGSEC15-STARTDSM)                                  82800020
          DC    AL2(0)                                                  82830020
          DC    AL2(L'MSGSEC16)                                         82860020
          DC    AL2(MSGSEC16-STARTDSM)                                  82890020
          DC    AL2(0)                                                  82920020
          DC    AL2(L'MSGSEC17)                                         82950020
          DC    AL2(MSGSEC17-STARTDSM)                                  82980020
          DC    AL2(0)                                                  83010020
         DC    AL2(L'MSGSEC18)                                          83017020
         DC    AL2(MSGSEC18-STARTDSM)                                   83024020
         DC    AL2(0)                                                   83031020
         DC    AL2(L'MSGSEC19)                                          83032020
         DC    AL2(MSGSEC19-STARTDSM)                                   83033020
         DC    AL2(0)                                                   83034020
         DC    AL2(L'MSGSEC20)                                          83035020
         DC    AL2(MSGSEC20-STARTDSM)                                   83036020
         DC    AL2(0)                                                   83037020
         DC    AL2(L'MSGSEC21)                                 @YL026YA 83037400
         DC    AL2(MSGSEC21-STARTDSM)                          @YL026YA 83037800
         DC    AL2(0)                                          @YL026YA 83038200
         DC    AL2(L'MSGSEC22)                                 @YL026YA 83038600
         DC    AL2(MSGSEC22-STARTDSM)                          @YL026YA 83039000
         DC    AL2(0)                                          @YL026YA 83039400
*                                                                       83040020
*                                                                       83070020
*   SEGTABLE USED FOR SEGMENTS OF MESSAGES **                           83100020
         DS    0F                  ALIGN                                83130000
OFFSEG1  DC    AL2(L'SEG1)                                              83160020
         DC    AL2(SEG1-STARTDSM)                                       83190020
         DC    AL2(0)                                                   83220020
OFFSEG7  DC    AL2(L'SEG7)                                              83230020
         DC    AL2(SEG7-STARTDSM)                                       83240020
         DC    AL2(0)                                                   83250020
OFFSEG8  DC    AL2(L'SEG8)                                              83310020
         DC    AL2(SEG8-STARTDSM)                                       83340020
         DC    AL2(0)                                                   83370020
OFFSEG9  DC    AL2(L'SEG9)                                              83400020
         DC    AL2(SEG9-STARTDSM)                                       83430020
         DC    AL2(0)                                                   83460020
OFFSEG10 DC    AL2(L'SEG10)                                             83490020
         DC    AL2(SEG10-STARTDSM)                                      83520020
         DC    AL2(0)                                                   83550020
OFFSEG11 DC    AL2(L'SEG11)                                             83580020
         DC    AL2(SEG11-STARTDSM)                                      83610020
         DC    AL2(0)                                                   83640020
OFFSEG12 DC    AL2(L'SEG12)                                             83670020
         DC    AL2(SEG12-STARTDSM)                                      83700020
         DC    AL2(0)                                                   83730020
         DC    3F'0'                                                    83760020
*     THE ABOVE DC IS FILL IN FOR TWO MSGES *                           83790020
OFFSEG15 DC    AL2(L'SEG15)                                             83820020
         DC    AL2(SEG15-STARTDSM)                                      83850020
         DC    AL2(0)                                                   83880020
OFFSEG16 DC    AL2(L'SEG16)                                             83910020
         DC    AL2(SEG16-STARTDSM)                                      83940020
         DC    AL2(0)                                                   83970020
OFFSEG17 DC    AL2(L'SEG17)                                             84000020
         DC    AL2(SEG17-STARTDSM)                                      84030020
         DC    AL2(0)                                                   84060020
OFFSEG18 DC    AL2(L'SEG18)                                    @YL026YA 84067000
         DC    AL2(SEG18-STARTDSM)                             @YL026YA 84074000
         DC    AL2(0)                                          @YL026YA 84081000
*        FIRST LEVEL MESSAGES FOLLOW BELOW                              84090020
*                                                                       84120020
*                                                                       84150020
*                                                                       84180020
MSGE1    DC    C'IKJ58503I DATA SET '                                   84210020
SEG1     DC    C' NOT IN CATALOG'       SECND SEG                       84240020
MSGE2    DC    C'IKJ58500I DATA SET ATTRIBUTES NOT AVAILABLE+'          84270020
MSGE3    DC    C'IKJ58504I COMPLETE VOLUME LIST NOT AVAILABLE+'         84300020
MSGE4    DC    C'IKJ58501I MEMBERS NOT AVAILABLE+'                      84330020
MSGE5    DC    C'IKJ58502I DIRECTORY INFORMATION NOT AVAILABLE+'        84360020
MSGE6    DC    C'IKJ58505I LABEL INFORMATION NOT AVAILABLE+'            84390020
MSGE7    DC    C'IKJ58509I DATA SET NAME REQUIRED WHEN MEMBER '         84420020
SEG7     DC    C' IS SPECIFIED'       SECND SEG                         84450020
MSGE8    DC    C'IKJ58506I DATA SET '    FIRST SEG                      84480020
SEG8     DC    C' NOT ALLOCATED, TOO MANY DATA SETS+'  SECND SEG A49872 84510000
MSGE9    DC    C'IKJ58514I DATA SET '   STAE FIRST MESSAGE SEGMENT      84540020
SEG9     DC    C' NOT USEABLE+'          STAE SECOND MESSAGE     A49872 84570021
MSGE10   DC    C'IKJ58507I DATA SET '      FIRST SEG                    84600020
SEG10    DC    C' NOT ALLOCATED, REQUIRED VOLUME NOT MOUNTED+'   A49872 84630021
MSGE11   DC    C'IKJ58508I DATA SET '      FIRST SEG                    84660020
SEG11    DC    C' NOT ALLOCATED, SYSTEM OR INSTALLATION ERROR+'  A49872 84690021
MSGE12   DC    C'IKJ58510I DATA SET '      FIRST SEG                    84720020
SEG12    DC    C' ALREADY IN USE, TRY LATER+'                    A49872 84750021
MSGE13   DC    C'IKJ58512I COMMAND SYSTEM ERROR+'  NO SEG               84780020
MSGE14   DC    C'IKJ58511I NOT ENOUGH MAIN STORAGE TO EXECUTE COMMAND'  84810020
MSGE15   EQU   *                                                        84840020
SEG15    EQU   *                                                        84870020
MSGE16   DC    C'IKJ58513I INVALID DATA SET NAME, '                     84900020
SEG16    DC    C' EXCEEDS 44 CHARACTERS'                                84930020
MSGE17   DC    C'IKJ58515I DATA SET LIST NOT ALLOWED WITH LEVEL'        84960000
SEG17    EQU   *                                                        84968000
MSGE18   DC    C'IKJ58516I INVALID USE OF * IN '               @YL026YA 84976000
SEG18    DC    C' +'                                           @YL026YA 84984000
MSGE19   DC    C'IKJ58517I UNABLE TO LIST * NAME OR LEVEL+'    @YL026YA 84992000
SEG19    EQU   *                                               @YL026YA 85000000
MSGE20   DC    C'IKJ58518I NO DATA SETS FOUND TO MATCH * IN '  @VS06783 85008000
*                                                                       85020020
*                                                                       85050020
*        SECOND LEVEL MESSAGES FOLLOW BELOW--XX IS DETERMINED           85080020
*        DYNAMICALLY AND APPENDED.                                      85110020
*                                                                       85140020
MSGSEC01 DC    C'IKJ585XXI LOCATE ERROR CODE '     LOCATE ERROR MSG     85170020
MSGSEC02 DC    C'IKJ585XXI OBTAIN ERROR CODE '                          85200020
MSGSEC03 DC    C'IKJ585XXI DYNAMIC ALLOCATION ERROR CODE '              85230020
MSGSEC04 DC    C'IKJ585XXI DIRECTORY STRUCTURE ERROR'                   85260020
MSGSEC05 DC    C'IKJ585XXI I/O SYNAD ERROR DURING DIRECTORY SEARCH '    85290020
MSGSEC06 DC    C'IKJ585XXI NOT ENOUGH MAIN STORAGE'                     85320020
MSGSEC07 DC    C'IKJ585XXI I/O ERROR DURING BLDL'  RC=8                 85350020
MSGSEC08 DC    C'IKJ585XXI DATA SET IS NOT A PARTITIONED DATA SET'      85380020
MSGSEC09 DC    C'IKJ585XXI MEMBER NAME NOT FOUND'    RC=04              85410020
MSGSEC10 DC    C'IKJ585XXI VOLUME OR CVOL NOT ON SYSTEM AND CANNOT BE A-85430020
               CCESSED'           CTRC=4  DAIR 8                        85450020
MSGSEC11 DC    C'IKJ585XXI USE FREE COMMAND TO FREE UNUSED DATA SETS'   85470020
MSGSEC12 DC    C'IKJ585XXI OPEN ERROR CODE ' STAE MSG                   85500020
MSGSEC13 DC    C'IKJ585XXI VOLUME NOT ON SYSTEM AND CANNOT BE ACCESSED' 85530020
MSGSEC14 DC    C'IKJ585XXI ABEND CODE '     STAE MSG                    85560020
MSGSEC15 DC    C'IKJ585XXI DATA SET ALLOCATED TO ANOTHER USER OR JOB'   85590020
MSGSEC16 DC    C'IKJ585XXI PARSE ERROR CODE '                           85620020
MSGSEC17 DC    C'IKJ585XXI DEFAULT ERROR CODE '                         85650020
MSGSEC18 DC    C'IKJ58504I JFCB EXTENSION NOT AVAILABLE'                85680020
MSGSEC19 DC    C'IKJ585XXI CATALOG I/O ERROR '   CTRC28 DAIR8           85690020
MSGSEC20 DC    C'IKJ585XXI DAIR ERROR CODE '   RC 4 DAIR                85700020
MSGSEC21 DC    C'IKJ585XXI * NOT ALLOWED AS FIRST LEVEL'       @YL026YA 85710000
MSGSEC22 DC    C'IKJ585XXI MORE THAN ONE * NOT ALLOWED'        @YL026YA 88710000
PATCH     DC    20X'00'                PATCH AREA                       88760003
         END                                                            91710000
./  ADD  SSI=31780046,NAME=IKJEHMEM
         TITLE 'IKJEHMEM, PDS MEMBER LISTING MODULE, PROCESS SECTION'   00100020
IKJEHMEM  CSECT                                                         00200020
*A 500500                                                        YM0369 00202001
*D 497000                                                        YM0369 00204001
*A 144500,180500                                                 A46784 00210001
*C 505000                                              A49888 AND M2386 00250001
*********************************************************************** 00300020
*                                                                     * 00400020
*                                                                     * 00600020
* STATUS -- CHANGE LEVEL 00                                     M2386 * 00700001
*                                                                     * 00800020
* FUNCTION --                                                         * 00900020
*    THIS MODULE WILL READ A PDS DIRECTORY, ISOLATE THE ALIAS         * 01000020
*    MEMBER NAMES, AND RETURN, ONE AT A TIME, THE MEMBER NAMES        * 01100020
*    TO THE CALLING PROGRAM.  ALIAS NAMES WILL BE PLACED FOLLOW-      * 01200020
*    ING THE TRUE NAMES THEY CORRESPOND TO.  THIS MODULE IS USED      * 01300020
*    BY LISTALC, LISTCAT, AND LISTDS TO LIST MEMBERS WHEN THE         * 01400020
*    MEMBERS KEYWORD IS SPECIFIED.  A JFCB IS SET TO PREVENT WRITE    * 01500020
*    BACK AND BACKWARD MERGE THEN THE DATA SET IS OPENED TO THE       * 01650020
*    DIRECTORY USING OPEN TYPE=J.  ALL MEMBER NAMES ARE READ          * 01700020
*    INTO CORE AND ARRANGED IN TABLES ACCORDING TO WHETHER THEY       * 01800020
*    ARE TRUE OR ALIAS.  TRUE NAMES ARE KEPT IN COLLATING SEQUENCE    * 01900001
*    AND ALIAS NAMES IN ORDER BY TTR (BY COLLATING ORDER FOR          * 02000001
*    NAMES WITH IDENTICAL TTR'S)WHEN READING IS COMPLETE, OUT-        * 02100001
*    PUT BEGINS.  THE TTR OF EACH TRUE NAME IS COMPARED TO THE        * 02200001
*    TTR OF EACH ALIAS AND ANY EQUALS ARE IDENTIFIED AS ALIAS         * 02300001
*    NAMES FOR THIS TRUE NAME.                                        * 02400020
*                                                                     * 02500020
* ENTRY POINTS --                                                     * 02600020
*         IKJEHMEM - ONLY ONE ENTRY POINT                             * 02700020
*                                                                     * 02800020
* INPUT --                                                            * 02900020
*    A PARM LIST POINTED TO BY REG 1 AND CONTAINING---                * 03000020
*              1  ADR OF COMMUNICATIONS DSECT 'OBTWAD'                * 03100020
*              2  ADR OF LISTFORM OF GETMAIN MACRO                    * 03200020
*              3  ADR OF A BUFFER TO PLACE THE NAMES IN FOR OUTPUT    * 03300020
*              4  ADR OF THE OUTPUT ROUTINE                           * 03400020
*              5  ADR OF LIST FORM OF FREEMAIN MACRO                  * 03500020
*              --ALL POINTERS ARE FULLWORDS                           * 03600020
*                                                                     * 03700020
*    THE DIRECTORY OF THE PDS POINTED TO BY THE OBTDCB                * 03800020
*                                                                     * 03900020
* OUTPUT --                                                           * 04000020
*    A LIST OF PDS MEMBER NAMES AND ASSOCIATED ALIAS                  * 04100020
*                                                                     * 04200020
* EXTERNAL REFERENCES --                                              * 04300020
*    1. LISTALC, MOD IKJEHAL1                                         * 04400020
*    2. LISTCAT, MOD IKJEHCT1                                         * 04500020
*    3. LISTDS, MOD IKJEHDS1                                          * 04600020
*                                                                     * 04700020
* EXITS, NORMAL --                                                    * 04800020
*              A BR 14 TO THE CALLING PROGRAM                         * 05000020
*                                                                     * 05100020
* EXITS, ERROR --                                                     * 05150020
*              A BR 14 TO THE CALLING PROGRAM                         * 05200001
* TABLES/WORK AREAS --                                                * 05250001
*    OBTWAD  THE COMMON COMMUNICATIONS REGION. GOTTEN BY CALLER.      * 05300020
*    IT CONTAINS THE DCB, JFCB, PRIMARY ALIAS TABLE, AND POINTERS     * 05400020
*                                                                     * 05500020
*                                                                     * 05600020
*    TRUE  NAME TABLE                                                 * 05700020
*              ONE OR MORE BLOCKS OF CORE CHAINED TOGETHER AND USED   * 05800020
*              TO CONTAIN THE TRUE NAMES. THE FORMAT IS---            * 05900020
*                                  ***********************            * 06000020
*                             0    *PTR TO NXT CORE BLOCK*            * 06100020
*                             4    *COUNTER              *            * 06200020
*                             8    *PTR TO NXT TRUE BLOCK*            * 06300020
*                             12   *SPARE                *            * 06400020
*                                  --BEGIN NAME ELEMENTS--            * 06500020
*                             16   *FIRST TRUE NAME ELE- *            * 06600020
*                             20   *MENT, NAME IS 8 BYTES*            * 06700020
*                             24   *TTR IS 3 BYTES       *            * 06800020
*                                  *                     *            * 06900020
*                                  *EACH NAME ENTRY IS 11*            * 07000020
*                                  *BYTE LONG. TRUE NAME *            * 07100020
*                                  *ELEMENT LENGTH IS DE-*            * 07200020
*                                  *FINED BY 'TEL'.      *            * 07300020
*                                  *                     *            * 07400020
*                                  *TABLE BLOCK LENGTH IS*            * 07500020
*                                  *DEFINED BY 'BLKLEN'. *            * 07600020
*                                                                     * 07700020
*    ALIAS NAME TABLE                                                 * 07800020
*              THE FIRST ALIAS NAME TABLE IS AN AREA OF DSECT OBTWAD. * 07900020
*              IF ADDITIONAL BLOCKS ARE NECESSARY, CORE BLOCKS THE    * 08000020
*              SAME SIZE AS THOSE FOR THE TRUE NAME TABLE ARE GOTTEN. * 08100020
*              THE FORMAT OF THE ALIAS NAME TABLE IS.                 * 08200020
*                                                                     * 08300020
*                                  *******************                * 08400020
*                             0    *NXT CORE BLK PTR *                * 08500020
*                             4    *UNUSED           *                * 08600020
*                             8    *NXT ALIAS BLK PTR*                * 08700020
*                             12   *SPARE            *                * 08800020
*                                  --BEGIN NAME BLKS--                * 08900020
*                             16   *PTR TO NXT NAME  *                * 09000020
*                             20   *NAME (NAME FIELD *                * 09100020
*                             24   * IS 8 BYTES).    *                * 09200020
*                             28   *TTRC FOR ALIAS   *                * 09300020
*                             32   *NXT ALIAS NAME   *                * 09400020
*                                  *ENTRY            *                * 09500020
*                                  *                 *                * 09600020
*                                  *EACH ALIAS BLK IS*                * 09700020
*                                  *16 BYTES LONG.   *                * 09800020
*                                  *THE LENGTH IS DE-*                * 09900020
*                                  *FINED BY 'AEL'.  *                * 10000020
*                                                                     * 10100020
*                                                                     * 10200020
*                                                                     * 10300020
* ATTRIBUTES --                                                       * 10400020
*    REENTRANT, READ ONLY, AND REFRESHABLE.                           * 10500020
*                                                                     * 10600020
* CHARACTER CODE DEPENDENCY --                                        * 10750001
*    THIS CSECT MUST BE REASSEMBLED FOR A CHANGE OF CHARACTER CODE.   * 10800020
*                                                                     * 11000020
* NOTES --                                                            * 11050001
*    N/A                                                              * 11060001
*                                                                     * 11070001
*********************************************************************** 11100020
R0       EQU   0                   REGISTER 0                           11200001
R1       EQU   1                   REGISTER 1                           11300001
R2       EQU   2                   REGISTER 2                           11400001
R3       EQU   3                   REGISTER 3                           11500001
R4       EQU   4                   REGISTER 4                           11600001
R5       EQU   5                   REGISTER 5                           11700001
R6       EQU   6                   REGISTER 6                           11800001
R7       EQU   7                   REGISTER 7                           11900001
R8       EQU   8                   RETURN REG FOR SUBROUTINE LINKAGE    12000020
R9       EQU   9                   REGISTER 9                           12100001
R10      EQU   10                  SPARE REGISTER                       12200020
R11      EQU   11                  BASE REG FOR THIS MODULE             12300020
R12      EQU   12                  BASE REG FOR OBTWAD DSECT            12400020
R13      EQU   13                  REGISTER 13                          12500001
R14      EQU   14                  REGISTER 14                          12600001
R15      EQU   15                  REGISTER 15                          12700001
BSP      EQU   1                   SUBPOOL NUMBER FOR TABLE BLOCKS      12800020
SSP      EQU   1                   SAVE AREA SUBPOOL                    12900020
FTSW     EQU   X'01'               FOR SETTING AND TESTING FIRST ENTRY  13000020
OPENOK   EQU   X'10'               USED TO TEST FOR SUCCESSFUL OPENS.   13100020
ALIASBIT EQU   X'80'               TO TEST FOR ALIAS NAMES              13200020
CODE1    EQU   4                   GETMAIN FAILED                       13300020
CODE2    EQU   8                   I/O ERROR READING DIRECTORY          13400020
CODE3    EQU   12                  DIRECTORY ERROR                      13500020
AEL      EQU   16                  SYMBOLIC FOR LENGTH OF ALAIAS ELEMEN 13600020
TEL      EQU   11                  SYM FOR LNGTH OF TRUE NAME TBL ELE   13700020
BLKLEN   EQU   2048                LENGTH OF GETMAIN CORE FOR A BLK     13800020
BLANK    EQU   C' '                SYMBOLIC FOR A BLANK                 13900020
COMMA    EQU   C','                SYMBOLIC FOR A COMMA                 14000020
RPAREND  EQU   C')'                SYMBOLIC FOR A RIGHT PAREND          14100020
         IEZBITS                                                        14150001
RECFMFIX EQU   X'80'               DCB RECFM FIXED               A46784 14450001
****EQUATES FOR OFFSETS AND SHORT LENGTHS*****                          14500020
D0       EQU  0                    ZERO                                 14600001
D1       EQU   1                   ONE                                  14700001
D2       EQU   2                   TWO                                  14800001
D3       EQU   3                   THREE                                14900001
D4       EQU   4                   FOUR                                 15000001
D5       EQU   5                   FIVE                                 15100001
D6       EQU   6                   SIX                                  15200001
D7       EQU   7                   SEVEN                                15300001
D8       EQU   8                   EIGHT                                15400001
D9       EQU   9                   NINE                                 15500001
D10      EQU   10                  TEN                                  15600001
D11      EQU   11                  ELEVEN                               15700001
D12      EQU   12                  TWELVE                               15800001
D16      EQU   16                  SIXTEEN                              15900001
USERMSK  EQU   31                  MASK FOR USER DATA CNT FIELD         16000001
HEXFF     EQU   X'FF'              FOXES FOR END OF POINTERS            16100001
SAVELEN  EQU   112                 LENGTH OF SAVE AREA IN GOTTEN CORE   16200001
D15       EQU   15                               LENGTH OF FIFTEEN      16300001
         EJECT                                                          16400020
MEM01    SAVE  (14,12),,*                                               16500020
         LR    R11,R15             PICK UP ENTRY POINT FOR BASE REG     16600020
         USING MEM01,R11                                                16700020
         USING OBTWAD,R12                                               16800020
         LTR   R6,R1               CHECK FOR AND SAVE PARM PTR          16900020
         BZ    MEM96               IF PARM REG 0, RETURN TO CALLER      17000020
         GETMAIN R,LV=SAVELEN,SP=SSP                                    17100020
         ST    R13,D4(R1)           BACK CHAIN SAVE AREA                17200020
         ST    R1,D8(R13)           FORWARD CHAIN SAVE AREAS            17300020
         LR    R13,R1              NEW SAVE AREA ESTABLISHED            17400020
         L     R12,D0(R6)           SET UP DSECT PTR.                   17500020
         ST    R6,PCL              SAVE A PTR TO PARM LIST              17600020
         XC   RETCODE,RETCODE      CLEAR RETURN CODE                    17700001
         SPACE 2                                                        17800020
         LA    R2,OBTDCB           PTR TO DCB IN DSECT                  17900020
         USING IHADCB,R2                                                18000020
         MVI   DCBRECFM,RECFMFIX   SET RECFM TO FIXED            A46784 18050001
         SPACE 2                                                        18100020
         OI    JFCBTSDM,BIT4+BIT6  TURN ON THE DON'T MERGE BITS IN JFCB 18200020
         NI    JFCBIND1,HEXFF-BIT7  TURN OFF MEMBER BIT IN THE JFCB.    18300020
         LA    R15,IOERR           ADR OF SYNAD ROUTINE                 18400020
         ST    R15,DCBSYNAD        SET UP SYNAD EXIT.                   18500020
         XC    RETCODE,RETCODE     CLEAR CODE WORD                      18600020
         LA    R15,EOFDIR          ADR OF END OF FILE ROUTINE           18700020
         ST    R15,DCBEODAD        SET UP EOF ROUTINE EXIT              18800020
         LA    R1,RDJL             PTR TO MACRO LIST FORM               18900020
         SPACE 2                                                        19000020
         OPEN  ((R2)),TYPE=J,MF=(E,(1))                                 19100020
         SPACE 2                                                        19200020
         LA    R3,MEMBUF           GET INPUT AREA ADDR                  19300020
         SPACE                                                          19400020
*  GET A READ INITIATED TO OVERLAP THE INITIALIZATION ROUTINE.          19500020
         SPACE                                                          19600020
         READ  RDECB,SF,(R2),(R3),,,,MF=E                               19700020
*********************************************************************** 19720020
*** INITIALIZE THE ALIAS AND TRUE NAME TABLES                         * 19740020
*                                                                     * 19760020
*                                                                     * 19780020
         SPACE 2                                                        19800020
         XC    PBOB(D4),PBOB        CLEAR PTR TO BEGINNING OF BLKS      19900020
         BAL   R8,MEMGETM          GO GET FIRST BLK FOR NAME TABLE      20000020
         SPACE                                                          20100020
         LR    R5,R14              GET PTR TO FIRST TRUE BLK            20200020
         LA    R14,BLKLEN-TEL(R14) CALCULATE EFFECTIVE END OF BLK ADR   20300020
         ST    R14,PECTB           SET UP END OF BLK ADDR               20400020
         LA    R7,D16(R5)           CALCULATE ADR OF 1ST TRUE ELEMENT   20500020
         ST    R7,PSTNQ            SAVE IT IN THE PTR TO 1ST T NAME     20600020
         SPACE 2                                                        20700020
         LA    R6,MEMATBL          ADDR OF FIRST ALIAS TABLE            20800020
          XC    D0(D16,R6),D0(R6)  CLEAR CONTROL AREA                   20900020
         LA    R14,MEMATBL+MEMATBLL-AEL  COMPUTE ALIAS END OF TBL ADR   21000020
         ST    R14,PECAB           SET UP END OF TABLE ADDR             21100020
         SPACE 2                                                        21200020
         ST    R5,PCTB             SAVE ADDR OF CUR T-NAME BLK          21300020
         ST    R6,PCAB             SAVE ADDR OF CUR A-NAME BLK          21400020
         LA    R6,D16(R6)           UPDATE PTR FOR NEW ALIAS MEMBER     21500020
          XC    D0(D4,R6),D0(R6)   CLEAR FORWARD PTR OF STOP ELMNT      21600001
         MVC   D4(D8,R6),HEXFFF      SET UP STOPPER FOR NAMES           21700020
         MVC   D12(D3,R6),HEXFFF     SET UP STOPPERS FOR TTRS           21800020
          XC    D15(D1,R6),D0(R6)   MAKE C BYTE ZERO                    21900020
         ST    R6,PSANQ            SET PTR TO START OF A-NAME QUEUE     22000020
         LA    R6,AEL(R6)          INCRE PTR TO NXT EMPTY ALIAS SLOT    22100020
         SPACE 3                                                        22200020
*********************************************************************** 22300020
*                                                                     * 22400020
*  SETUP IS NOW COMPLETE, BEGIN PROCESSING BY CHECKING READ OF FIRST  * 22500020
*  DIRECTORY BLOCK WHICH WAS ISSUED AFTER OPEN                        * 22600020
*                                                                     * 22700020
*  REGISTER USAGE IN THE PROCESS SECTION BETWEEN 'MEM16' AND 'MEM50'  * 22800020
*        R0    SPACE                                                  * 22900020
*        R1    USED BY THE READ AND CHECK MACROS                      * 23000020
*        R2    POINTS TO THE DCB FOR THE DIRECTORY                    * 23100020
*        R3    POINTS TO THE END OF THE CURRENT DIRECTORY BLOCK       * 23200020
*        R4    SPACE REGISTER IN THIS SECTION                         * 23300020
*        R5    POINTS TO BEGINNING OF CURRENT TRUE NAME TABLE BLOCK   * 23400020
*        R6    POINTS TO THE CURRENT POSITION IN THE ALIAS NAME TABLE * 23500020
*        R7    POINTS TO CURRENT POSITION IN THE TRUE NAME TABLE BLOCK* 23600020
*        R8    USED AS A RETURN REGISTER IN SUBROUTINE LINKAGE        * 23700020
*        R9    POINTS TO THE CURRENT POSITION IN INPUT DIRECTORY BLOCK* 23800020
*                                                                     * 23900020
*********************************************************************** 24000020
MEM16    EQU   *                                                        24100020
         CHECK RDECB                                                    24200020
         LH    R15,MEMDATA         GET THE DIRECTORY BLK BYTE COUNT     24300020
         CH    R15,DIRMIN          IS THE COUNT AT LEAST 14 BYTES       24400020
         BL    DIRSERR             IF NOT, BRANCH TO DIR SIZE ERROR     24500020
         CH    R15,DIRMAX          IS THE COUNT     HIGHER THAN 256     24600020
         BH    DIRSERR             IF SO, BRANCH TO DIR SIZE ERROR      24700020
         LA    R3,MEMDATA(R15)     COMPUTE ADR OF END OF CUR DIR BLK    24800020
         LA    R9,MEMDATA+D2        UP PTR TO FIRST DIRECTORY ENTRY     24900020
         SPACE 2                                                        25000020
MEM20    CLC   D0(D8,R9),HEXFFF      IS THIS NAME THE END OF DIRECOTRY  25100020
         BE    MEM50               IF SO, GO WRITE OUT NAMES            25200020
         TM    TEL(R9),ALIASBIT     IS THIS NAME TRUE OR ALIAS          25300020
         BO    A02                 IF ALIAS, BRANCH                     25400020
         C     R7,PECTB            IS THIS PAST THE BLOCK               25500020
         BL    T06                 IF NOT, SKIP GETMAIN                 25600020
         BAL   R8,MEMGETM          GO GET ANOTHER BLOCK                 25700020
         ST    R14,D8(R5)           CHAIN NEW BLOCK INTO TRUE BLK CHAIN 25800020
         LR    R5,R14              POINT TO NEW TRUE BLK                25900020
         LA    R14,BLKLEN-TEL(R14) CALCULATE EFFECTIVE END OF BLK ADR   26000020
         ST    R14,PECTB           SAVE IT TO COMPARE AGAINST           26100020
         LA    R7,D16(R5)           RESET NEW ELEMENT PTR               26200020
         ST    R5,PCTB             SAVE ADR OF NEW CUR TRUE BLK         26300020
         SPACE 2                                                        26400020
T06      EQU   *                                                        26500020
          MVC   D0(TEL,R7),D0(R9)     MOVE NAME AND TTR TO TRUE NAME    26600020
         L     R14,D4(R5)          LOAD COUNTER VALUE FROM CUR TRUE TBL 26700001
         LA    R14,D1(R14)          INCREMENT                           26800020
         ST    R14,D4(R5)           SAVE UPDATED COUNTER VALUE          26900020
         LA    R7,TEL(R7)          INCREMENT PTR TO NXT SLOT FOR T-NAME 27000020
         SPACE 2                                                        27100020
MEM30    LA    R14,USERMSK           SET UP MASK TO PICK UP USER DATA   27200020
         EX    R14,ANDI            TURN OFF ALIAS AND TTRN COUNT        27300020
         IC    R14,D11(R9)          GET HALFWORD COUNT OF USER DATA     27400020
         SLL   R14,D1               DOUBLE IT TO GET BYTES              27500020
         LA    R9,D12(R14,R9)       COMPUTE BYTES USED OF CUR DIR BLK   27600020
         CR    R9,R3               HAS CUR DIRECTORY BLK BEEN EXAUSTED  27700020
         BL    MEM20               IF NOT GET NXT NAME                  27800020
         BH    DIRLERR             IF HIGH, LENGTH IS IN ERROR, BRANCH  27900020
         SPACE                                                          28000020
*  FALL THRU TO READ THE NXT BLK IF THE END OF THIS BLK IS REACHED      28100020
         SPACE                                                          28200020
         LA    R3,MEMBUF           SET UP INPUT AREA ADR FOR READ       28300020
         READ  RDECB,SF,(R2),(R3),,,,MF=E                               28400020
         B     MEM16               GO CHECK THE READ                    28500020
         SPACE 2                                                        28600020
A02      EQU   *                                                        28700020
         C     R6,PECAB            COMPARE NEW ELEMENT ADR TO EOB ADR   28800020
         BNH   A10                 IF ENTRY WILL FIT, SKIP GETMAIN      28900020
         BAL   R8,MEMGETM          GO GET ANOTHER BLOCK OF STORAGE      29000020
         L     R15,PCAB            PTR TO CURRENT ALIAS BLK             29100020
         ST    R14,D8(R15)          SET PTR TO NEXT ALIAS BLK           29200020
         ST    R14,PCAB            UPDATE PTR TO CURRENT ALIAS BLOCK    29300020
         LA    R6,D16(R14)          UPDATE NEW ELEMENT PTR              29400020
         LA    R14,BLKLEN-AEL(R14) CALCULATE EFFECTIVE END OF BLK ADR   29500020
         ST    R14,PECAB           SAVE TO COMPARE AGAINST              29600020
         SPACE                                                          29700020
A10      EQU   *                                                        29800020
         MVC   D4(D12,R6),D0(R9)      MOVE NAME AND TTRC TO NEXT ENTRY  29900020
         LA    R14,PSANQ           GET ADR OF START OF ALIAS NAME Q.    30000020
         SPACE                                                          30100020
A14      L     R15,D0(R14)          ADR OF NEXT ALIAS NAME ENTRY        30200020
          CLC   D12(D3,R6),D12(R15) COMPARE TTRS OF NEW ELE TO OLD      30300020
         BL    A20                 IF LOW, INSERT NEW ELE HERE          30400020
         LR    R14,R15             UPDATE PTR TO NEXT ELE               30500020
         B     A14                 GO BACK AND CHECK THIS ELE           30600020
         SPACE                                                          30700020
A20      EQU   *                                                        30800020
         ST    R15,D0(R6)           STORE FORWARD PTR IN NEW ELEMENT    30900020
         ST    R6,D0(R14)           UPDATE FORWARD PTR OF PREV ELE      31000020
         LA    R6,AEL(R6)          INCRE PTR TO NXT EMPTY ALIAS SLOT    31100020
         B     MEM30               GO PROCESS NEXT NAME.                31200020
*                                                                       31220020
*** SYNAD ROUTINE WILL PASS ERROR INFORMATION BACK TO CALLER         ** 31240020
*                                                                       31260020
         SPACE 2                                                        31300020
IOERR    EQU   *                                                        31400020
         LR    R3,R13              SAVE REG13 IF RLSE DOESNT WORK       31500001
         LA    R2,SYNMSG1          IN MEM DSECT AND CALLING RTN         31600001
         SYNADAF  ACSMETH=BSAM     R0 AND R1 SAME AS ENTRY              31700001
         MVC   D0(L'SYNMSG1,R2),SYNOFF(R1)  PUT INTO BUFF               31800020
         MVI   SYNMSG,SYNLEN       TEXT LENGTH IS SIXTY                 31900001
         SYNADRLS                  RELEASE CORE FOR SYNADAF             32000001
         LR    R13,R3              RESTORE REG 13                       32100001
         LA    R2,CODE2            SET CODE FOR I/O ERROR               32200001
         ST    R2,RETCODE          SAVE IT FOR CALLER                   32300020
         B     MEM50               PROCESS NAMES READ AND EXIT          32400001
         SPACE 2                                                        32500020
DIRLERR  EQU    *                                                       32600020
DIRSERR  EQU    *                                                       32700020
EOFDIR   EQU   *                                                        32800020
         LA    R2,CODE3            SET CODE FOR DIRECTORY ERROR         32900001
         ST    R2,RETCODE          SAVE CODE FOR CALLER                 33000020
         LA    R8,MEM90            SET UP RETURN ADR                    33100020
         B     MEM50               PROCESS THOSE NAMES THAT WERE READ.  33200020
         SPACE 2                                                        33300020
         EJECT                                                          33400020
*********************************************************************** 33500020
*                                                                     * 33600020
*  THIS ROUTINE PROCESSES THE TRUE AND ALIAS BLOCKS PREPARED BY THE   * 33700020
*  READ ROUTINE.  THE FOLLOWING ACTIONS TAKE PLACE.                   * 33800020
*    1. THE NEXT NAME FROM A TRUE BLOCK IS PICKED UP AND MOVED TO THE * 33900020
*       OUTPUT BUFFER.                                                * 34000020
*    2. THE TTR OF THE TRUE NAME IS COMPARED WITH ALL ALIAS TTR LOWER * 34100020
*       OR EQUAL IN NUMERIC VALUE AND ANY EQUALS ARE MOVED TO THE     * 34200020
*       BUFFER WITH THE QUALIFIER 'ALIAS('.                           * 34300020
*    3. CONTROL IS PASSED TO THE CALLING PROGRAMS OUTPUT ROUTINE TO   * 34400020
*       WRITE OUT THE BUFFER.                                         * 34500020
*    4. WHEN THE TRUE NAMES ARE EXAUSTED, ANY ALIAS NAMES REMAINING   * 34600020
*       ARE GROUPED BY TTR AND WRITTEN OUT WITH A MESSAGE THAT NO     * 34700020
*       TRUE NAME EXIST FOR THEM.                                     * 34800020
*                                                                     * 34900020
*  REGISTER USAGE IN THE PROCESS SECTION BETWEEN 'MEM50' AND 'MEM90'  * 35000020
*        R0    SPARE                                                  * 35100020
*        R1    SPARE                                                  * 35200020
*        R2    USED AS CTR FOR NUMBER OF ALIAS THAT CAN GO INTO BUF   * 35300020
*        R3    PTS TO PREV ALIAS ENTRY OR START OF ALIAS QUEUE PTR    * 35400020
*        R4    HOLDS COUNT OF REMAINING NAMES IN CUR TRUE TABLE BLOCK * 35500020
*        R5    POINTS TO THE CURRENT ALIAS ENTRY                      * 35600020
*        R6    POINTS TO THE CURRENT TRUE ENTRY                       * 35700020
*        R7    POINTS TO THE CURRENT POSITION IN THE OUTPUT BUFFER    * 35800020
*        R8    RETURN REGISTER FOR SUBROUTINE CALLS                   * 35900020
*        R9    POINTS TO ENTRY POINT FOR THE OUTPUT ROUTINE           * 36000020
*                                                                     * 36100020
*********************************************************************** 36200020
         SPACE                                                          36300020
MEM50    EQU   *                                                        36400020
         SPACE                                                          36500020
*  INITIALIZE FOR THE OUTPUT ROUTINE.                                   36600020
         SPACE                                                          36700020
         L     R7,POUTBUF          SET UP PTR TO OUTPUT BUFFER          36800020
         L     R9,PWRITE           SET UP ADR OF OUTPUT ROUTINE         36900020
         L     R6,PBOB             PTR TO BEGINNING OF BLOCKS           37000020
         L     R4,D4(R6)            GET COUNT OF NAMES IN 1ST TRUE BLK  37100020
         ST    R6,PCTB             SAVE PTR TO THIS BLOCK               37200020
         LTR   R4,R4               TEST FOR A PDS WITH NO MEMBERS       37300020
         BNP   MEM86               IF NO TRUE NAMES, GO CHECK ALIAS     37400020
         LA    R6,AEL-TEL(R6)       ADR OF START OF NAMES -1 ELEMENT    37500020
         SPACE 2                                                        37600020
MEM54    EQU   *                                                        37700020
         LA    R6,TEL(R6)          UPDATE THE TRUE NAME PTR             37800020
         LA    R5,PSANQ            ADR OF PTR TO START OF ALIAS NAME Q  37900020
         MVC   D2(D8,R7),D0(R6)    MOVE TRUE NAME TO BUFF               38000001
         LA    R14,D8               LOAD MAXIMUM MEMBER NAME LENGTH     38100020
         LA    R15,D9(R7)           SET UP PTR TO END OF NAME           38200020
         SPACE 2                                                        38300020
MEM60    EQU   *                                                        38400020
         CLI   D0(R15),BLANK        SEARCH NAME RIGHT TO LEFT FOR BLANK 38500020
         BNE   MEM64               BRANCH OUT OF LOOF ON FIRST NONBLANK 38600020
         BCTR  R15,D0               BACK UP TEMP BUF PTR ONE CHAR.      38700020
         BCT   R14,MEM60           REDUCE REMAINING CHAR COUNT, RECHECK 38800020
         SPACE 2                                                        38900020
*  AT THIS POINT, EITHER A NON-BLANK CHAR HAS BEEN FOUND AND REG 14     39000020
*  HOLDS THE LENGTH OF THE NONBLANK NAME OR ALL 8 CHAR WERE ZERO AND    39100020
*  REG 14 HAS ZERO.                                                     39200020
         SPACE                                                          39300020
MEM64    EQU   *                                                        39400020
         LA    R7,D2(R14,R7)        ADD SPACER LENGTH AND NAME LENGTH   39500020
         SPACE                                                          39600020
*  NEXT CHECK FOR POSSIBLE ALIAS NAMES FOR THIS MEMBER                  39700020
MEM66    EQU   *                                                        39800020
         SPACE                                                          39900020
         LR    R3,R5               SAVE ADR OF PREVIOUS PTR FIELD IN R2 40000001
         L     R5,D0(R5)            GET PTR TO NEXT ALIAS NAME          40100020
          CLC   D8(D3,R6),D12(R5)  COMPARE TRUE TTR TO ALIAS TTR        40200001
         BL    MEM80               IF LOW, SKIP REMAINING ALIAS NAMES   40300020
         BH    MEM66               IF HIGH CONTINUE SEARCH              40400020
*   FALL THROUGH ON EQUAL, THIS IS A FIND                               40500020
         SPACE 3                                                        40600020
MEM70    EQU   *                                                        40700020
         LA    R2,D5                SET UP COUNTER FOR BUFFER FULL TEST 40800020
         MVC   D2(L'AHDR,R7),AHDR   MOVE PREFIX FOR ALIAS NAMES TO BUF  40900020
         LA    R7,D2+L'AHDR(R7)     INCREMENT BUF PAST LEFT PAREND      41000020
         SPACE 2                                                        41100020
*  NEXT MOVE IN ALIAS NAME AND ELIMINATE TRAILING BLANKS                41200020
         SPACE                                                          41300020
MEM72    EQU   *                                                        41400020
         MVC   D0(D8,R7),D4(R5)       MOVE ALIAS NAME TO BUF            41500020
         LA    R15,D7(R7)           SET PTR TO LAST CHAR OF NAME        41600020
         LA    R14,D8               SET UP NON-BLANK CHAR COUNTER       41700020
         SPACE 2                                                        41800020
MEM74    EQU   *                                                        41900020
         CLI   D0(R15),BLANK        IS THIS CHAR A BLANK                42000020
         BNE   MEM76               IF NOT, WE HAVE A FIND, BRANCH       42100020
         BCTR  R15,D0               BACK UP NAME PTR ONE CHAR           42200020
         BCT   R14,MEM74           LOOP FOR 8 CHAR, THEN FALL THRU      42300020
         SPACE 2                                                        42400020
*  CHECK TO SEE IF THIS TRUE NAME HAS MORE ALIAS NAMES.                 42500020
         SPACE                                                          42600020
MEM76    EQU   *                                                        42700020
         L     R5,D0(R5)            GET ADR OF NEXT ALIAS ENTRY         42800020
         LA    R7,D0(R14,R7)        INCREMENT BUF PTR PAST ALIAS NAME   42900020
         CLC   D8(D3,R6),D12(R5)    COMPARE TRUE TTR TO NXT ALIAS TTR   43000020
         BNE   MEM78               BRANCH IF NO MORE ALIAS FOR THIS TRU 43100020
         MVI   D0(R7),COMMA        ANOTHER ALIAS WAS FOUND, SEPARATE IT 43200001
         LA    R7,D1(R7)            UPDATE BUF PTR PAST COMMA           43300020
         BCT   R2,MEM72            IF THE BUFFER ISN'T FULL, BRANCH     43400020
         SPACE 2                                                        43500020
*  IF THERE IS NO ROOM IN THE BUFFER FOR THE NEXT ALIAS NAME, GO TO THE 43600020
*  OUTPUT ROUTINE TO WRITE THE BUFFER.                                  43700020
         SPACE                                                          43800020
         LR    R14,R7              CUR BUF POSITION PTR TO R14 FOR WRIT 43900020
         L     R7,POUTBUF          PTR TO OUTPUT BUFFER                 44000020
         BALR  R8,R9               GO TO THE OUTPUT WRITER ROUTINE      44100020
         LA    R7,D11(R7)           INDENT INTO BUFFER FOR CONT.        44200020
         LA    R2,D7                RESET BUFFER FULL TEST COUNTER      44300020
         B     MEM72               GO MOVE ALIAS INTO BUFFER            44400020
         SPACE 2                                                        44500020
*  WHEN ALL ALIAS NAMES FOR THIS TRUE NAME ARE FOUND, CLOSE PAREND,     44600020
*  DEQUEUE ALL ALIAS NAMES USED, AND WRITE THE BUFFER.                  44700020
         SPACE                                                          44800020
MEM78    EQU   *                                                        44900020
         MVI   D0(R7),RPAREND       CLOSE PARENTHISIS                   45000020
         LA    R7,D1(R7)            INCREMENT PTR PAST PAREND           45100020
         ST    R5,D0(R3)           THIS EFFECTIVELY DEQUEUS THE ALIAS'S 45200001
         SPACE                                                          45300020
*  NEXT OUTPUT THE BUF AND CHECK FOR MORE NAMES TO PROCESS              45400020
         SPACE                                                          45500020
MEM80    EQU   *                                                        45600020
         LR    R14,R7              CUR BUF POSITION PTR TO R14 FOR WRIT 45700020
         L     R7,POUTBUF          PTR TO OUTPUT BUFFER                 45800020
         BALR  R8,R9               GO TO OUTPUT ROUTINE                 45900020
         BCT   R4,MEM54            IF MORE NAMES IN THIS BLOCK, PROCESS 46000020
         L     R14,PCTB            GET ADR OF CUR TRUE NAME BLOCK       46100020
         L     R15,D8(R14)          GET FORWARD TRUE BLOCK PTR          46200020
         LTR   R15,R15             TEST FOR PTR BEING ZERO              46300020
         BZ    MEM86               IF ZERO, BRANCH, LOOK FOR ORPHAN AL  46400020
         L     R4,D4(R15)           OTHERWISE GET CTR FROM NEXT BLOCK   46500020
         LA    R6,AEL-TEL(R15)     SET PTR ONE BEFORE FIRST NAME ENTRY  46600001
         ST    R15,PCTB                                                 46700020
         B     MEM54               GO PROCESS NAMES THIS BLOCK          46800020
         SPACE 2                                                        46900020
MEM86    EQU   *                                                        47000020
         LA    R3,PSANQ            SET UP TO DEQUEUE ALIAS NAMES        47100020
         L     R5,PSANQ            RESET PTR TO FIRST A LIAS ENTRY      47200020
         CLC   D4(D8,R5),HEXFFF      TEST IF ONLY ENTRY IS THE STOPPER  47300020
         BE    MEM90               IF SO, REQUEST COMPLETE, BRANCH      47400020
         TM    MEMATBL+D4,FTSW      IS THIS THE FIRST TIME THRU.        47500020
         BO    MEM88               IF NOT, BRANCH AROUND INITIALIZATION 47600020
         L     R7,POUTBUF          POINT TO BUFFER AREA                 47700020
         LR    R14,R7              INDICATE NO DATA TO PRINT            47800020
         L     R9,PWRITE           ADDRESS OF WRITE ROUTINE             47900001
         BALR  R8,R9               GO SKIP A LINE                       48000020
         LA    R15,L'MMSG01        LENGTH OF MESSAGE TO WRITE           48100020
         LA    R14,MMSG01          ADDRESS OF MESSAGE                   48200020
         BCTR  R15,R0              DEREMENT FOR MVC                     48300020
         EX   R15,MSGMV            MOVE MESSAGE                         48400020
         LA    R14,D1(R15,R7)      CURRENT BUFFER POINTER               48500001
         BALR  R8,R9               GO WRITE THE MESSAGE                 48600001
         OI    MEMATBL+D4,FTSW      TURN ON FIRST TIME SW               48700020
         SPACE 2                                                        48800020
*  SET UP REGS TO CAUSE ALIAS TO BE PRINTED WHEN NO TRUE NAME EXIST.    48900020
         SPACE                                                          49000020
MEM88    EQU   *                                                        49100020
         LA    R4,D1                SET TRUE NAME CTR TO SHOW COMPLETE  49200020
         LA    R6,D4(R5)            POINT R6 AT ALIAS NAME AND TTR      49300020
         B     MEM70               GO PROCESS REMAINING ALIAS NAMES     49400020
         SPACE 3                                                        49500020
MEM90    EQU   *                                                        49600020
         LA    R5,PBOB             SET UP PTR TO CORE BLKS              49800020
         SPACE                                                          49900020
MEM92    EQU   *                                                        50000020
         L     R1,PFREEML          ADR OF FREEMAIN MACRO LIST    YM0369 50050001
         L     R6,PBOB             GET ADR OF A BLK TO BE FREED         50100020
         LTR   R6,R6               CHECK WHETHER ANY BLKS TO FREE       50200020
         BZ    MEM94               IF ZERO, NO MORE BLKS TO FREE        50300020
         L     R7,D0(R6)            GET PTR TO NEXT BLK BEFOR FREEING   50400020
         FREEMAIN E,A=(R5),LV=BLKLEN,SP=BSP,MF=(E,(1))            M2386 50500001
         ST    R7,PBOB             STORE PTR TO NEXT BLOCK              50600020
         B     MEM92               FREE MORE BLOCKS                     50700020
         SPACE                                                          50800020
MEM94    EQU   *                                                        50900020
         LA    R1,CLOSEL           PTR TO LIST FORM OF CLOSE MACRO      51000020
         LA    R2,OBTDCB           PTR TO DCB IN DSECT                  51100020
         CLOSE ((R2)),MF=(E,(1))                                        51200020
         SPACE 2                                                        51300020
MEM95    EQU   *                                                        51400020
         LR    R1,R13              SET UP TO FREE SAVE AREA             51500020
         L     R13,D4(R13)          RESTORE PTR TO CALLERS SAVE AREA    51600020
         FREEMAIN R,LV=SAVELEN,A=(1),SP=SSP                             51700020
         SPACE 2                                                        51800020
MEM96    L     R15,RETCODE         PICK UP PROPER RETURN CODE           51900020
         RETURN (14,12),T,RC=(15)                                       52000020
         EJECT                                                          52100020
*********************************************************************** 52200020
*                                                                     * 52300020
*  MEMGETM  THIS SUBROUTINE ISSUES THE CONDITIONAL GETMAINS FOR NAME  * 52400020
*  TABLE CORE.                                                        * 52500020
*        ENTRY BY A BAL  R8,MEMGETM                                   * 52600020
*        ADDRESS OF CORE GOTTEN IS RETURNED IN REG 14 IF GETMAIN OK   * 52700020
*        ERROR (INSUFFICIENT CORE AVAILABLE) EXIT IS TO GETMERR       * 52800020
*        REGS OTHER THAN R14 ARE PRESERVED ON NORMAL EXIT             * 52900020
*                                                                     * 53000020
*********************************************************************** 53100020
         SPACE                                                          53200020
MEMGETM  EQU   *                                                        53300020
         STM   R15,R2,GETMSAV      SAVE REGS BEFORE USE                 53400020
         LA    R2,PBOB             GET PTR TO BEGINNING OF BLKS         53500020
MGM10    EQU   *                                                        53600020
         L     R15,D0(R2)           GET CONTENTS OF PTR FIELD           53700020
         LTR   R15,R15             IS THE PTR FIELD ZERO                53800020
         BZ    MGM20               IF ZERO, BRANCH, END OF CHAIN FOUND  53900020
         LR    R2,R15              NOT ZERO, SET UP FOR NXT BLK PTR FLD 54000020
         B     MGM10               LOOP BACK TO CHECK NEXT FIELD        54100020
MGM20    EQU   *                                                        54200020
         L     R1,PGETML           ADR OF LIST FORM OF GETMAIN MACRO    54300020
         GETMAIN A=(R2),SP=BSP,LV=BLKLEN,MF=(E,(R1))                    54400020
         B     CHECKMGM(R15)       GO ANALYZE GETMAIN RETURN CODE       54500020
CHECKMGM B     MGMOK               RETURN CODE EQ ZERO                  54600020
         B     MGMERR              RETURN CODE EQ FOUR                  54700020
MGMOK    EQU   *                                                        54800020
         L     R14,D0(R2)           ADR OF GOTTEN CORE CHAINED TO LAST  54900020
         LM    R15,R2,GETMSAV      RESTORE REGS                         55000020
          XC    D0(D16,R14),D0(R14)  CLEAR PTR AREA OF BLOCK            55100020
         BR    R8                  RETURN TO CALLER                     55200020
         SPACE                                                          55300020
MGMERR   EQU   *                                                        55400020
*  IF A GETMAIN ERROR OCCURS, THE FOLLOWING ROUTINE IS USED.            55500020
*                                                                     * 55600020
         LA    R2,CODE1            MSG CODE FOR INSUFFIENT CORE         55700020
         ST    R2,RETCODE            SAVE CODE FOR RETURN TO CALLER     55800020
         B     MEM90               GO TERMINATE NORMALLY.               55900001
*********************************************************************** 56000020
*                                                                     * 56100020
* CONSTANTS AND INSTRUCTIONS EXECUTED BY AN EXECUTE INSTRUCTION       * 56200020
*                                                                     * 56300020
*********************************************************************** 56400020
         SPACE                                                          56500020
ANDI     NI    D11(R9),D0          USED TO ISOLATE THE USER DATA COUNT  56600001
MSGMV    MVC   D0(D0,R7),D0(R14)   USED TO MOVE VARY LLENGTH MSG TO BUF 56700001
         SPACE 2                                                        56800020
HEXFFF   DC    X'FFFFFFFFFFFFFFFF' USED TO TEST FOR DIRECTORY END       56900020
DIRMIN   DC    H'14'               MINIMUM DIRECTORY BLOCK LENGTH       57000020
DIRMAX   DC    H'256'              MAXIMUM DIRECTORY BLOCK LENGTH       57100020
AHDR     DC    C'ALIAS('           PREFIX FOR ALIAS NAMES               57200020
MMSG01   DC    C'  THE FOLLOWING ALIAS NAMES EXIST WITHOUT TRUE NAMES'  57300020
*                  THE ABOVE MESSAGE IS USED IN THE MEM OPTION          57400020
      IKJEHCOM                                                          57500020
        DCBD   DSORG=PS                                                 57600020
        END                                                             57700020
./  ADD  SSI=61720075,NAME=IKJEHPRO
         TITLE 'IKJEHPRO-IBM TIME SHARING PROTECT COMMAND'              00080003
IKJEHPRO CSECT                                                          00160020
*   VS2-3.0  SERVICE UPDATE                                             00162003
*0000156800-157600,161300-161800                               @ZM40068 00162403
*0000546400-548000,548800                                      @ZA02853 00164003
*0000153300-153520                                             @ZA02853 00166003
*0000004200                                                    @ZA02853 00168003
*0000004200,153500,161300                                      @ZA01485 00168103
*0000359500,359700,360200,441600,459100                        @ZA01485 00168303
*0000460800,462100-462300,784500                               @ZA01485 00176203
*0000360000,432000,439200,448000,628000                        @ZA01485 00178203
*                                                                       00184203
*A 39700                                                          Y2030 00192103
*C 004800,462400                                                  Y2030 00200000
*D 135200                                                         Y2030 00230000
*A 530100,626300-626340,954100-954200                             Y2075 00260000
*C 517100-517200,953600                                           Y2075 00290000
*D 026600-026800,135600,174600-174800,178000,180400,183600,187600 Y2075 00320000
*D 196200-196600,220400,516900-517000,517300-518200,752900-753200 Y2075 00350000
*D 792200-792500                                                  Y2075 00380000
*A 505300                                                        A46794 00410000
*    DATE LAST CHANGE MADE  04/20/75                           @ZA01485 00420003
*********************************************************************** 00440000
*                                                                     * 00470000
* STATUS -- VS2 RELEASE 3 VERSION 0   SU                       @ZA01485 00500003
*                                                                     * 00560020
* FUNCTION -- THE PROTECT COMMAND IS USED TO AFFECT THE PASSWORD AND  * 00640020
*    PROTECTION ATTRIBUTES OF BOTH NEW AND OLD DATA SETS.  IT IS ALSO * 00720020
*    TO DISPLAY THE CONTENTS OF THE SECURITY COUNTER AND THE OPTIONAL * 00800020
*    SECURITY INFORMATION WHICH APPEARS WITH EACH ENTRY IN THE        * 00880020
*    PASSWORD DATA SET.  THIS COMMAND MAY BE USED BOTH TO ASSIGN AND  * 00960020
*    TO REMOVE SECURITY PROTECTION FROM A DATA SET.                   * 01040020
*                                                                     * 01120020
* ENTRY POINTS --                                                     * 01200020
*         IKJEHPRO - MAIN ENTRY POINT OF PROGRAM, ATTACHED BY THE     * 01280020
*    TERMINAL MONITOR PROGRAM WHEN A PROTECT COMMAND IS ENTERED AT    * 01360020
*    A TERMINAL                                                       * 01440020
*                                                                     * 01520020
* INPUT -- REGISTER 1 POINTS TO THE STANDARD COMMAND PROCESSOR        * 01600020
*    PARAMETER LIST (CPPL) AS FOLLOWS-                                * 01680020
*    WORD 1 CONTAINS A POINTER TO THE COMMAND BUFFER                  * 01760020
*    WORD 2 CONTAINS A POINTER TO THE USER PROFILE TABLE              * 01840020
*    WORD 3 CONTAINS A POINTER TO THE PROTECTED STEP CONTROL BLOCK    * 01920020
*    WORD 4 CONTAINS A POINTER TO AN ENVIRONMENT CONTROL TABLE        * 02000020
*                                                                     * 02080020
* OUTPUT -- USUALLY NONE, EXCEPT APPROPRIATE ERROR MESSAGES TO        * 02160020
*    DESCRIBE ERROR CONDITIONS.  WHEN THE REQUEST IS TO LIST AN ENTRY * 02240020
*    OF THE PASSWORD DATA SET THE ACCESS COUNT, PROTECTION STATUS, AND* 02320020
*    USER INFORMATION WILL BE LISTED.                                 * 02400020
*        R15 = X'00'  NORMAL RETURN                            @ZA01485 02530003
*        R15 = X'0C'  ERROR RETURN                             @ZA01485 02540003
*                                                                       02550003
* EXTERNAL REFERENCES --                                              * 02560020
*         IKJPARS - ENTRY POINT TO PARSE ROUTINE                      * 02640020
*         IKJPUTL - ENTRY POINT TO PUTLINE ROUTINE                    * 02720020
*         IKJDFLT - ENTRY POINT TO DEFAULT SERVICE ROUTINE            * 02800020
*         IGC0009H - ENTRY POINT TO SVC 98                            * 02880020
*                                                                     * 02960020
* EXITS, NORMAL -- RETURN TO THE TERMINAL MONITOR PROGRAM             * 03040020
*                                                                     * 03120020
* EXITS, ERROR -- RETURN TO THE TERMINAL MONITOR PROGRAM              * 03200020
*                                                                     * 03280020
* TABLES/WORK AREAS --                                                * 03360000
*    COMMON - A DSECT TO MAP THE WORKAREA                             * 03440020
*                                                                     * 03520020
* ATTRIBUTES -- REENTRANT, READ-ONLY, REFRESHABLE                     * 03600020
*                                                                     * 03680020
* CHARACTER CODE DEPENDENCY -- CHARACTER CODE INDEPENDENT             * 03760020
*                                                                     * 03840020
* NOTES --                                                            * 03920000
*    DESCRIBED IN TSO COMMAND PROCESSOR LOGIC, SY28-0652          Y2030 03960000
*                                                                     * 04000020
*********************************************************************** 04080020
         EJECT                                                          04160020
*  REGISTER EQUATES                                                     04240020
R0       EQU   0                   GENERAL REGISTER 0                   04320020
R1       EQU   1                   GENERAL REGISTER 1                   04400020
R2       EQU   2                   GENERAL REGISTER 2                   04480020
R3       EQU   3                   GENERAL REGISTER 3                   04560020
R4       EQU   4                   GENERAL REGISTER 4                   04640020
R5       EQU   5                   GENERAL REGISTER 5                   04720020
R6       EQU   6                   GENERAL REGISTER 6                   04800020
R7       EQU   7                   GENERAL REGISTER 7                   04880020
R8       EQU   8                   GENERAL REGISTER 8                   04960020
R9       EQU   9                   GENERAL REGISTER 9                   05040020
R10      EQU   10                  GENERAL REGISTER 10                  05120020
R11      EQU   11                  GENERAL REGISTER 11                  05200020
R12      EQU   12                  GENERAL REGISTER 12                  05280020
R13      EQU   13                  GENERAL REGISTER 13                  05360020
R14      EQU   14                  GENERAL REGISTER 14                  05440020
R15      EQU   15                  GENERAL REGISTER 15                  05520020
*                                                                       05600020
*              REGISTER USEAGE                                          05680000
*                                                                       05760020
*  REGISTER 0  USED AS WORK REGISTER                                    05840020
*                                                                       05920020
*  REGISTER 1  USED AS PARAMETER REGISTER AND A WORK REGISTER           06000020
*                                                                       06080020
*  REGISTER 2  USED AS WORK REGISTER                                    06160020
*                                                                       06240020
*  REGISTER 3  USED IN 'EXECUTE MVC' AS POINTER TO 'TO AREA' AND AS     06320020
*              WORK REGISTER                                            06400020
*                                                                       06480020
*  REGISTER 4  USED IN 'EXECUTE MVC' AS POINTER TO 'FROM AREA' AND AS   06560020
*              WORK REGISTER                                            06640020
*                                                                       06720020
*  REGISTER 5  USED AS WORK REGISTER                                    06800020
*                                                                       06880020
*  REGISTER 6  USED AS WORK REGISTER                                    06960020
*                                                                       07040020
*  REGISTER 7  IS NOT USED                                              07120020
*                                                                       07200020
*  REGISTER 8  IS WORK REGISTER                                         07280020
*                                                                       07360020
*  REGISTER 9  IS BASE REGISTER FOR PARSE DSECT                         07440020
*                                                                       07520020
*  REGISTER 10 USED AS WORK REGISTER                                    07600020
*                                                                       07680020
*  REGISTER 11 USED AS WORK REGISTER                                    07760020
*                                                                       07840020
*  REGISTER 12 IS BASE REGISTER FOR THIS PROGRAM                        07920020
*                                                                       08000020
*  REGISTER 13 IS SAVEAREA AND DSECT BASE REGISTER                      08080020
*                                                                       08160020
*  REGISTER 14 IS THE LINK REGISTER                                     08240020
*                                                                       08320020
*  REGISTER 15 IS THE BRANCH AND RETURN CODE REGISTER                   08400020
*                                                                       08480020
         SPACE 2                                                        08560020
*  ABSOLUTE EQUATES (OFFSETS AND SHORT LENGTHS)                         08640020
ONE      EQU   1                   ONE                                  08720020
TWO      EQU   2                   TWO                                  08800020
F0       EQU   0                   ZERO                                 08880020
F1       EQU   1                   ONE                                  08960020
F2       EQU   2                   TWO                                  09040020
F4       EQU   4                   FOUR                                 09120020
F5       EQU   5                   FIVE                                 09200020
F6       EQU   6                   SIX                                  09280020
F7       EQU   7                   SEVEN                                09360020
F8       EQU   8                   EIGHT                                09440020
F12      EQU   12                  TWELVE                               09520020
F16      EQU   16                  SIXTEEN                              09600020
F20      EQU   20                  TWENTY                               09680020
F43      EQU   43                  FORTY-THREE                          09760020
L72      EQU   72                  LENGTH OF SAVEAREA                   09840020
F77      EQU   77                  SEVENTY-SEVEN (USER DATA LENGTH)     09920020
*  RETURN CODE EQUATES                                                  10000020
RC4      EQU   4                   RETURN CODE = 4                      10080020
RC8      EQU   8                   RETURN CODE = 8                      10160020
RC12     EQU   12                  RETURN CODE = 12                     10240020
RC16     EQU   16                  RETURN CODE = 16                     10320020
RC20     EQU   20                  RETURN CODE = 20                     10400020
RC24     EQU   24                  RETURN CODE = 24                     10480020
RC28     EQU   28                  RETURN CODE = 28                     10560020
RC32     EQU   32                  RETURN CODE = 32                     10640020
RC36     EQU   36                  RETURN CODE = 36                     10720020
*  EQUATES FOR MESSAGE NUMBERS (FIRST LEVEL MESSAGES)                   10800020
M01      EQU   1                   MESSAGE NUMBER 01                    10880020
M02      EQU   2                   MESSAGE NUMBER 02                    10960020
M03      EQU   3                   MESSAGE NUMBER 03                    11040020
M04      EQU   4                   MESSAGE NUMBER 04                    11120020
M05      EQU   5                   MESSAGE NUMBER 05                    11200020
M06      EQU   6                   MESSAGE NUMBER 06                    11280020
M07      EQU   7                   MESSAGE NUMBER 07                    11360020
M08      EQU   8                   MESSAGE NUMBER 08                    11440020
M09      EQU   9                   MESSAGE NUMBER 09                    11520020
M10      EQU   10                  MESSAGE NUMBER 10                    11600020
M11      EQU   11                  MESSAGE NUMBER 11                    11680020
M12      EQU   12                  MESSAGE NUMBER 12                    11760020
*  EQUATES FOR MESSAGE NUMBERS (SECOND LEVEL MESSAGES)                  11920020
S01      EQU   1                   SECOND LEVEL MESSAGE NUMBER 01       12000020
S02      EQU   2                   SECOND LEVEL MESSAGE NUMBER 02       12080020
S03      EQU   3                   SECOND LEVEL MESSAGE NUMBER 03       12160020
S04      EQU   4                   SECOND LEVEL MESSAGE NUMBER 04       12240020
S05      EQU   5                   SECOND LEVEL MESSAGE NUMBER 05       12320020
S06      EQU   6                   SECOND LEVEL MESSAGE NUMBER 06       12400020
S07      EQU   7                   SECOND LEVEL MESSAGE NUMBER 07       12480020
S08      EQU   8                   SECOND LEVEL MESSAGE NUMBER 08       12560020
S09      EQU   9                   SECOND LEVEL MESSAGE NUMBER 09       12640020
S10      EQU   10                  SECOND LEVEL MESSAGE NUMBER 10       12720020
S11      EQU   11                  SECOND LEVEL MESSAGE NUMBER 11       12800020
S12      EQU   12                  SECOND LEVEL MESSAGE NUMBER 12       12880020
S13      EQU   13                  SECOND LEVEL MESSAGE NUMBER 13       12960020
S14      EQU   14                  SECOND LEVEL MESSAGE NUMBER 14       13040020
S15      EQU   15                  SECOND LEVEL MESSAGE NUMBER 15       13120020
*              OTHER EQUATES                                            13200020
SPNUM    EQU   1                   SUBPOOL NUMBER                       13280020
ZERO     EQU   C'0'                CHARACTER ZERO                       13360020
PROMASK  EQU   X'01'               MASK TO CHECK PROTECTION MODE BYTE   13440020
QUOTEMSK EQU   X'40'               MASK TO CHECK IF DSNAME QUOTED       13600020
MASK1    EQU   X'40'               MASK TO CHECK FOR INTERRUPT          13680020
SWON     EQU   X'FF'               MASK TURN SWITCH ON                  13760020
SWOFF    EQU   X'00'               MASK TURN SWITCH OFF                 13840020
PRMASK   EQU   X'10'               MASK TEST FOR PROTECTION             13860020
RDWOTPAS EQU   X'04'               MASK TEST FOR READ WITHOUT PASSWORD  13880020
SVCOPT01 EQU   X'01'               SVC 98 ENTRY OPTION - ADD            13920020
SVCOPT02 EQU   X'02'               SVC 98 ENTRY OPTION - REPLACE        14000020
SVCOPT03 EQU   X'03'               SVC 98 ENTRY OPTION - DELETE         14080020
SVCOPT04 EQU   X'04'               SVC 98 ENTRY OPTION - LIST           14160020
SVCPCDE0 EQU   X'00'               SVC 98 PROTECTION - 'DEFAULT'        14240020
SVCPCDE1 EQU   X'01'               SVC 98 PROTECTION - PWREAD PWWRITE   14320020
SVCPCDE2 EQU   X'02'               SVC 98 PROTECTION - PWREAD NOWRITE   14400020
SVCPCDE3 EQU   X'03'               SVC 98 PROTECTION - NOPWREAD PWWRITE 14480020
ENDTEST  EQU   X'FF'               END OF MESSAGE CHAIN INDICATOR       14560020
BLANK    EQU   C' '                CHARACTER BLANK                      14640020
QUOTE    EQU   C''''               CHARACTER QUOTE                      14680020
PERIOD   EQU   C'.'                PERIOD                               14720020
ZONE     EQU   C'0'                CHARACTER CONSTANT FOR ZONE FIELD    14880020
*                                                                       14960020
         EJECT                                                          15040020
         SAVE  (14,12)             SAVE REGISTERS OF CALLING PROGRAM    15120003
         LR    R12,R15             ENTRY POINT ADDRESS TO BASE REGISTER 15200020
         USING IKJEHPRO,R12        ESTABLISH ADDRESSABILITY FOR PROGRAM 15280020
         B     BRID                     BRANCH AROUND ID       @ZA02853 15330003
         DC    C'IKJEHPRO'              MODULE ID              @ZA02853 15340003
         DC    X'5110'                  DATE 04/20/75          @ZA01485 15350003
BRID     EQU   *                                               @ZA02853 15352003
         LR    R2,R1               SAVE REG 1 - GETMAIN USES IT         15360020
         GETMAIN R,LV=CORE,SP=SPNUM get core for workarea               15440020
*  THIS IS AN UNCONDITIONAL REQUEST FOR CORE.  IF SUFFICIENT CORE IS    15520020
*  NOT AVAILABLE THE RESULT IS ABNORMAL TERMINATION OF THIS PROGRAM.    15600020
*  THE FIRST 18 WORDS IS THE REGISTER SAVE AREA                         15840020
         XC    F0(L72,R1),F0(R1)   INITIALIZE REGISTER SAVE AREA        15920020
         ST    R13,F4(R1)          SAVE ADDRESS OF CALLER'S REGISTERS   16000020
         ST    R1,F8(R13)          CHAIN SAVE AREAS                     16080020
         LR    R13,R1              ADDRESS OF GETMAINED AREA   @ZM40068 16130003
         USING COMMON,R13          EST ADDRESSABILITY GETM.    @ZM40068 16130103
         MVI   RCX,X'00'           ZERO RC                     @ZA01485 16180103
*  WHEN THE TMP ATTACHES PROTECT REGISTER 1 POINTS TO A PARAMETER LIST  16240020
*  THE FORMAT OF THIS LIST IS-                                          16320020
*    1ST WORD POINTER TO THE COMMAND BUFFER                             16400020
*    2ND WORD POINTER TO THE USER PROFILE TABLE (UPT)                   16480020
*    3RD WORD POINTER TO THE PROTECTED STEP CONTROL BLOCK (PSCB)        16560020
*    4TH WORD POINTER TO THE ENVIRONMENT CONTROL TABLE (ECT)            16640020
         USING CPPL,R2             ESTABLISH ADDRESSABILITY CPPL        16720020
*  NOW INITIALIZE PARAMETERS FOR PARSE, DAIR, DEFAULT, AND PUTLINE      16800020
         LA    R5,PARSPARM         POINT TO SPACE FOR PARSE PARAMETERS  16880020
         USING PPL,R5              SET ADDRESSABILITY PARSE PARM LIST   16960020
         LA    R6,DFLTPARM         POINT TO SPACE FOR DEFAULT PARM LIST 17040020
         USING DFPL,R6             SET ADDRESSABILITY DEFAULT PARM LIST 17120020
         LA    R8,DFLTPBLK         POINT TO SPACE FOR DEFAULT PARMBLOCK 17200020
         USING DFPB,R8             SET ADDRESSABILITY DEFAULT PARMBLOCK 17280020
         LA    R9,IOPARM           POINT TO SPACE FOR I/O PARM LIST     17360020
         USING IOPL,R9             SET ADDRESSABILITY I/O PARM LIST     17440020
         L     R3,CPPLCBUF         COMMAND BUFFER ADDRESS-              17520020
         ST    R3,PPLCBUF          -TO PPL                              17600020
         L     R3,CPPLUPT          UPT ADDRESS-                         17680020
         ST    R3,PPLUPT           -TO PPL                              17760020
         ST    R3,IOPLUPT          -TO I/O PARAMETER LIST               17800000
         ST    R3,DFPLUPT          -TO DEFAULT PARAMETER LIST           17880000
         ST    R3,UPTSAVX          SAVE UPT ADDRESS            @YL026YB 17960000
         L     R3,CPPLPSCB         PSCB ADDRESS-                        18040000
         ST    R3,DFPBPSCB         -TO DEFAULT PARAMETER BLOCK          18120000
         L     R3,CPPLECT          ECT ADDRESS-                         18200000
         ST    R3,PPLECT           -TO PPL                              18280000
         ST    R3,IOPLECT          -TO I/O PARAMETER LIST               18400020
         ST    R3,DFPLECT          -TO DEFAULT PARAMETER LIST           18480020
         DROP  R2                  CPPL IS NO LONGER NEEDED             18560020
         LA    R3,PROCPECB         ADDRESS OF CP'S ECB-                 18640020
         ST    R3,PPLECB           -TO PPL                              18720020
         ST    R3,IOPLECB          -TO I/O PARAMETER LIST               18800020
         ST    R3,DFPLECB          -TO DEFAULT PARAMETER LIST           18880020
         ST    R8,DFPLDFPB         POINTER TO PARM BLOCK TO PARM LIST   18960020
         LA    R3,DSL              POINT TO DSL-DSN BUFFER-             19040020
         ST    R3,DFPBDSN          -TO DEFAULT PARAMETER LIST           19120020
         MVI   DFPBCODE,DFPB04     SET DEFAULT ENTRY CODE               19200020
         MVI   DFPBCNTL,DFPBUID    INDICATE USERID ADD TO OCCUR         19280020
         LA    R3,ANSPLACE         ADDRESS OF PARSE ANSWER PLACE        19360020
         ST    R3,PPLANS           -TO PPL                              19440020
         L     R3,VPROPARM         ADDRESS OF PARSE MACROS              19520020
         ST    R3,PPLPCL           -TO PPL                              19600020
*  NOW INITIALIZE WORKAREAS USED IN THIS PROGRAM                        19680020
         MVC   PUT(PUTLEND-PUTL),PUTL INITIALIZE PUTLINE-               19760020
         MVC   PUTDATA(PUTDEND-PUTD),PUTD -PARMBLOCKS                   19840020
         MVI   PRMPTCNT,F0         INITIALIZE PROMPT COUNT              19920020
         MVI   PROMPTSW,SWOFF      INITIALIZE PROMPT SWITCH OFF         20000020
         MVI   STACKSW,SWOFF       TURN STACK SWITCH OFF                20050020
         XC    SVCPARMS(SVCNPRMS-SVCPARMS),SVCPARMS ZERO SVC PARMLIST   20080020
         SR    R2,R2               ZERO REGISTER                        20160020
         ST    R2,DFPBQUAL         ZERO POINTER TO DEFAULT QUALIFIER    20240020
         ST    R2,PROCPECB         INITIALIZE CP'S ECB                  20320020
         MVI   PWBLANK,BLANK       BLANK SCAN DELIMITER CHARACTER       20400020
         MVI   PWLIST,BLANK        BLANK-                               20480020
         MVC   PWLIST+F1(ENDPWLST-PWLIST-F1),PWLIST -PASSWORD BUFFERS   20560020
         MVI   DSN,BLANK           BLANK-                               20640020
         MVC   DSN+F1(F43),DSN     -DATA SET NAME BUFFER                20720020
         ST    R12,PPLUWA          PROGRAM ADDRESS FOR VALIDITY EXIT    20800020
* WHEN THE PARSE SERVICE ROUTINE IS ENTERED REGISTER 1 POINTS TO THE    20880020
* FOLLOWING PARAMETER LIST-                                             20960020
*    1ST WORD POINTER TO THE USER PROFILE TABLE                         21040020
*    2ND WORD POINTER TO THE ENVIRONMENT CONTROL TABLE                  21120020
*    3RD WORD POINTER TO THE COMMAND PROCESSOR'S EVENT CONTROL BLOCK    21200020
*    4TH WORD POINTER TO THE PARSE CONTROL LIST                         21280020
*    5TH WORD POINTER TO THE PARSE ANSWER PLACE                         21360020
*    6TH WORD POINTER TO THE COMMAND BUFFER                             21440020
*    7TH WORD POINTER TO THE USER WORK AREA (VALIDITY EXIT ROUTINE)     21520020
*                                                                       21600020
*  NOW PARSE PROTECT COMMAND                                            21680020
         DROP  R5                  PPL NO LONGER NEEDED                 21760020
         DROP  R6                  DFPL NO LONGER NEEDED                21840020
         DROP  R8                  DFPB NO LONGER NEEDED                21920020
         DROP  R9                  IOPL NO LONGER NEEDED                22000020
         LR    R1,R5               POINT TO PARSE PARAMETER LIST        22080020
         LINK  EP=IKJPARS          LINK TO PARSE                        22160020
*  THE FORMAT OF THE LIST RETURNED FROM PARSE IS AS FOLLOWS-            22240020
*     1ST WORD POINTER TO DATA SET NAME (ZERO IF MISSING)               22320020
*     2ND WORD BYTE 0-1 LENGTH OF DATA SET NAME (EXCLUDING QUOTES)      22400020
*              BYTE 2   FLAGS (BIT 1 IS 1 IF DATA SET NAME QUOTED)      22480020
*              BYTE 3   RESERVED                                        22560020
*     3RD WORD POINTER TO MEMBER NAME (ZERO IF MISSING)                 22640020
*     4TH WORD BYTE 0-1 LENGTH OF MEMBER NAME (EXCLUDING PARENTHESES)   22720020
*              BYTE 2   FLAGS                                           22800020
*              BYTE 3   RESERVD                                         22880020
*     5TH WORD POINTER TO PASSWORD (XERO IF MISSING)                    22960020
*     6TH WORD BYTE 0-1 LENGTH OF PASSWORD                              23040020
*              BYTE 2   FLAGS                                           23120020
*              BYTE 3   RESERVED                                        23200020
*     AN ADDITIONAL HALFWORD (NAMED PROTYPE)                            23280020
*        A 1 INDICATES 'ADD' SPECIFIED OR DEFAULTED                     23360020
*        A 2 INDICATES 'REPLACE' SPECIFIED                              23440020
*        A 3 INDICATES 'DELETE' SPECIFIED                               23520020
*        A 4 INDICATES 'LIST' SPECIFIED                                 23600020
*     AN ADDITIONAL HALFWORD (NAMED RDTYPE)                             23680020
*        A 0 INDICATES NO READ KEYWORD SPECIFIED                        23760020
*        A 1 INDICATES 'PWREAD' SPECIFIED                               23840020
*        A 2 INDICATES 'NOPWREAD' SPECIFIED                             23920020
*     AN ADDITIONAL HALFWORD (NAMED WRTYPE)                             24000020
*        A 0 INDICATES NO WRITE KEYWORD SPECIFIED                       24080020
*        A 1 INDICATES 'PWWRITE' SPECIFIED                              24160020
*        A 2 INDICATES 'NOWRITE' SPECIFIED                              24240020
*     AN ADDITIONAL HALFWORD (NAMED DATATYPE)                           24320020
*        A 0 INDICATES NO DATA KEYWORD SPECIFIED                        24400020
*        A 1 INDICATES 'DATA' SPECIFIED                                 24480020
*     PLUS AN ADDITIONAL TWO WORDS FOR EACH PASSWORD OR DATA FIELD      24560020
*     SPECIFIED.  THE FORMAT OF EACH OF THESE TWO WORD FIELDS IS-       24640020
*                                                                       24720020
*     1ST WORD POINTER TO THE CHARACTER STRING                          24800020
*     2ND WORD BYTES 0-1 LENGTH OF THIS CHARACTER STRING                24880020
*              BYTES 2   FLAGS                                          24960020
*              BYTES 3   RESERVED                                       25040020
*                                                                       25120020
         LTR   R15,R15             TEST PARSE RETURN CODE               25200020
         BNZ   PARSEERR            GO ANALYZE PARSE ERROR               25280020
*  ESTABLISH ADDRESSABILITY FOR PARSE DSECT                             25360020
         L     R9,ANSPLACE         PARSE PUT DSECT ADDRESS HERE         25440020
         USING IKJPARMD,R9         ESTABLISH ADDRESSABILITY PARSE PDL   25520020
*  NOW CHECK DATA SET NAME INFORMATION FROM PARSE                       25600020
         LA    R6,PRODSN           POINT TO DSNAME PDE                  25680020
         SR    R2,R2               ZERO REGISTER                        25760020
         C     R2,F8(R6)           IS MEMBER NAME SPECIFIED             25840020
         BNE   MEMBRERR            ERROR, GO BUILD MESSAGE              25920020
         C     R2,F16(R6)          WAS CONTROL PASSWORD SPECIFIED       26000020
         BE    NOCNTLPW            NO, GO CHECK DSNAME                  26080020
         LH    R5,F20(R6)          LENGTH OF CONTROL PASSWORD           26160020
         BCTR  R5,R0               DECREMENT FOR EXECUTE INSTRUCTION    26240020
         LA    R3,CONTRLPW         POINT TO CONTROL PASSWORD            26320020
         ST    R3,SVCCONPW         SAVE THIS POINTER SVC PARAMETER LIST 26400020
         L     R4,F16(R6)          ADDRESS OF CONTROL PASSWORD (INPUT)  26480020
         EX    R5,MOVEINST         MOVE CONTROL PASSWORD TO BUFFER      26560020
*  NOW CHECK DATA SET NAME                                              26640020
NOCNTLPW LH    R5,F4(R6)           LENGTH OF DATA SET NAME              26720020
         LTR   R5,R5               IS LENGTH ZERO                       26800020
         BZ    MEMBRERR            YES, ERROR                           26880020
         STH   R5,DSL              LENGTH TO WORK AREA                  26960020
         L     R4,F0(R6)           ADDRESS OF DSNAME (INPUT)            27040020
         LA    R3,DSN              POINT TO DSNAME BUFFER               27120020
         BCTR  R5,R0               DECREMENT FOR EXECUTE INSTRUCTION    27200020
         EX    R5,MOVEINST         MOVE DSNAME TO WORK AREA             27280020
*  SAVE DATA SET NAME IN MESSAGE INSERTION BUFFER                       27360020
SAVEDSN  LH    R5,DSL              LENGTH OF DATA SET NAME              27440020
         BCTR  R5,R0               DECREMENT FOR EXECUTE INSTRUCTION    27520020
         LA    R3,DSNMESG          POINT TO DSNAME MESSAGE BUFFER       27600020
         LA    R4,DSN              ADDRESS OF DSNAME (WORKAREA)         27610020
         TM    F6(R6),QUOTEMSK     IS DATA SET NAME FULLY QUALIFIED     27612020
         BZ    SAVUNQUL            YES, SAVE UNQUALIFIED NAME           27614020
         MVI   F0(R3),QUOTE        MOVE QUOTE                           27620020
         LA    R3,F1(R3)           POINT PAST QUOTE                     27640020
         EX    R5,MOVEINST         MOVE DSNAME TO MESSAGE BUFFER        27760020
         LA    R3,F1(R5,R3)        POINT PAST DSNAME                    27780020
         MVI   F0(R3),QUOTE        MOVE QUOTE                           27800020
         LA    R5,F2(R5)           INCREASE LENGTH FOR QUOTES           27820020
         LA    R5,F5(R5)           1 FROM EXECUTE, 4 FOR HEADER         27840020
         STH   R5,DSNMESGL         DSNAME MESSAGE INSERTION LENGTH      27920020
*  NOW CHECK FOR FUNCTION REQUESTED                                     28160020
CHECKFCN LA    R5,DSN              POINT TO DSL-DSN BUFFER              28240020
         ST    R5,SVCDSL           ADDRESS OF BUFFER TO SVC PARM LIST   28320020
         LH    R5,DSL              DATA SET NAME LENGTH                 28400020
         STC   R5,SVCDSL           TO SVC PARAMETER LIST                28480020
         LH    R5,PROTYPE          LOAD PROTECTION TYPE INDICATOR       28560020
         BCTR  R5,R0               DECREMENT TO ZERO ORIGIN BRANCH      28640020
         SLL   R5,TWO              MULTIPLY TYPE NUMBER BY FOUR AND-    28720020
         B     BRTABLE(R5)         -USE AS INDEX INTO BRANCH TABLE      28800020
BRTABLE  B     ADD                 ADD WAS REQUESTED                    28880020
         B     REPLACE             REPLACE WAS REQUESTED                28960020
         B     DELETE              DELETE WAS REQUESTED                 29040020
*  NOTE LIST MUST FOLLOW SEQUENTIALLY HERE.                             29090020
*  BUILD SVC PARAMETER LIST FOR LIST REQUEST                            29120020
LIST     LA    R5,LISTBUFF         POINT TO LIST BUFFER                 29200020
         ST    R5,SVCOPT           ADDRESS TO SVC PARAMETER LIST        29280020
         MVI   SVCOPT,SVCOPT04     SVC ENTRY OPTION X'04' - LIST        29360020
         L     R4,LSTOLDPW         POINTER TO LIST PASSWORD             29440020
         LH    R5,LSTOLDPW+F4      PASSWORD LENGTH                      29520020
MOVEPW   BCTR  R5,R0               DECREMENT FOR EXECUTE INSTRUCTION    29600020
         LA    R3,CURENTPW         POINT TO CURRENT PASSWORD BUFFER     29680020
         ST    R3,SVCCURPW         ADDRESS TO SVC PARAMETER LIST        29760020
         EX    R5,MOVEINST         MOVE CURRENT PASSWORD TO BUFFER      29840020
         B     ISSUESVC            GO ISSUE SVC 98                      29920020
*  BUILD SVC PARAMETER LIST FOR DELETE REQUEST                          30000020
DELETE   MVI   SVCOPT,SVCOPT03     SVC ENTRY OPTION X'03' - DELETE      30080020
         L     R4,DELOLDPW         POINTER TO DELETE PASSWORD           30160020
         LH    R5,DELOLDPW+F4      PASSWORD LENGTH                      30240020
         B     MOVEPW              GO MOVE OLD PASSWORD TO BUFFER       30320020
*  BUILD SVC PARAMETER LIST FOR REPLACE REQUEST                         30400020
REPLACE  MVI   SVCOPT,SVCOPT02     SVC ENTRY OPTION X'02' - REPLACE     30480020
         BAL   R14,DATA            GO CHECK DATA                        30560020
         BAL   R14,SECURITY        GO CHECK PROTECTION KEYWORDS         30640020
         L     R4,REPNEWPW         POINTER TO NEW PASSWORD              30720020
         LTR   R4,R4               WAS A NEW PASSWORD SPECIFIED         30800020
         BZ    USEOLDPW            NO, GO USE OLD PASSWORD              30880020
         LH    R5,REPNEWPW+F4      PASSWORD LENGTH (NEW)                30960020
         BAL   R14,MVENEWPW        GO MOVE NEW PASSWORD TO BUFFER       31040020
OLDPW    L     R4,REPOLDPW         POINTER TO OLD PSSSWORD              31120020
         LH    R5,REPOLDPW+F4      LENGTH OF OLD PASSWORD               31200020
         B     MOVEPW              GO MOVE OLD PASSWORD TO BUFFER       31280020
USEOLDPW L     R4,REPOLDPW         POINTER TO OLD PASSWORD              31360020
         LH    R5,REPOLDPW+F4      LENGTH OF OLD PASSWORD               31440020
         BAL   R14,MVENEWPW        GO MOVE 'NEW' PASSWORD TO BUFFER     31520020
         B     OLDPW               GO PROCESS OLD PASSWORD              31600020
MVENEWPW BCTR  R5,R0               DECREMENT FOR EXECUTE INSTRUCTION    31680020
         LA    R3,NEWPW            POINT TO NEW PASSWORD BUFFER         31760020
         ST    R3,SVCPCODE         ADDRESS TO SVC PARAMETER LIST        31840020
         EX    R5,MOVEINST         MOVE NEW PASSWORD TO BUFFER          31920020
         SR    R5,R5               ZERO REGISTER                        32000020
         IC    R5,PROCODE          GET PROTECTION CODE                  32080020
         STC   R5,SVCPCODE         PROTECTION CODE TO SVC PARAMETER LST 32160020
         BR    R14                 RETURN                               32240020
*  BUILD SVC PARAMETER LIST FOR ADD REQUEST                             32320020
ADD      MVI   SVCOPT,SVCOPT01     SVC ENTRY OPTION X'01' - ADD         32400020
         BAL   R14,DATA            GO CHECK DATA                        32480020
         BAL   R14,SECURITY        GO CHECK PROTECTION KEYWORDS         32560020
         L     R4,ADDNEWPW         POINTER TO NEW PASSWORD              32640020
         LH    R5,ADDNEWPW+F4      LENGTH OF NEW PASSWORD               32720020
         BAL   R14,MVENEWPW        GO MOVE NEW PASSWORD TO BUFFER       32800020
         B     ISSUESVC            GO ISSUE SVC 98                      32880020
*  CHECK FOR DATA                                                       32960020
DATA     L     R5,STRDATA          LOAD DATA STRING POINTER             33040020
         LTR   R5,R5               IS POINTER ZERO                      33120020
         BZ    NODATA              YES, DATA NOT SPECIFIED              33200020
         ST    R5,SVCSTLTH         STRING POINTER TO SVC PARAMETER LIST 33280020
         LH    R5,STRDATA+F4       STRING LENGTH                        33360020
         STC   R5,SVCSTLTH         STRING LENGTH TO SVC PARAMETER LIST  33440020
NODATA   BR    R14                 RETURN                               33520020
*  CHECK PROTECTION KEYWORDS                                            33600020
SECURITY LH    R5,RDTYPE           LOAD READ TYPE INDICATOR             33680020
         SLL   R5,TWO              MULTIPLY TYPE NUMBER BY FOUR         33760020
         B     RDBRTAB(R5)         INDEX INTO BRANCH TABLE              33840020
RDBRTAB  B     RD0                 NO READ KEYWORD SPECIFIED            33920020
         B     RD1                 PWREAD SPECIFIED                     34000020
         B     SET3                NOPWREAD SPECIFIED, CODE IS X'03'    34080020
RD0      LH    R5,WRTYPE           LOAD WRITE TYPE INDICATOR            34160020
         SLL   R5,TWO              MULTIPLY TYPE NUMBER BY FOUR         34240020
         B     WR1BRTAB(R5)        INDEX INTO BRANCH TABLE              34320020
WR1BRTAB B     SET0                NEITHER SPECIFIED, TAKE DEFAULT      34400020
         B     SET3                PWWRITE SPECIFIED                    34480020
         B     SET2                NOWRITE SPECIFIED                    34560020
RD1      LH    R5,WRTYPE           LOAD WRITE TYPE INDICATOR            34640020
         SLL   R5,TWO              MULTIPLY TYPE NUMBER BY FOUR         34720020
         B     WR2BRTAB(R5)        INDEX INTO BRANCH TABLE              34800020
WR2BRTAB B     SET1                NO WRITE KEYWORD SPECIFIED           34880020
         B     SET1                PWWRITE SPECIFIED                    34960020
         B     SET2                NOWRITE SPECIFIED                    35040020
SET0     MVI   PROCODE,SVCPCDE0    NO KEYWORDS, INDICATE DEFAULT        35120020
         BR    R14                 RETURN                               35200020
SET1     MVI   PROCODE,SVCPCDE1    INDICATE PWREAD-PWWRITE              35280020
         BR    R14                 RETURN                               35360020
SET2     MVI   PROCODE,SVCPCDE2    INDICATE PWREAD-NOWRITE              35440020
         BR    R14                 RETURN                               35520020
SET3     MVI   PROCODE,SVCPCDE3    INDICATE NOPWREAD-NOWRITE            35600020
         BR    R14                 RETURN                               35680020
QUALDSN  LA    R1,DFLTPARM         ADDRESS OF DEFAULT PARAMETERS        35760020
         LINK  EP=IKJDFLT          LINK TO DEFAULT SERVICE ROUTINE      35840020
         B     DFLTERR(R15)        ANALYZE DEFAULT RETURN CODE          35930020
DFLTERR  B     DEFLTOK             DEFAULT RETURN CODE =  0             35940020
         B     CLUPRCC             DEFAULT RETURN CODE =  4    @ZA01485 35950003
         B     DSNBIG              DEFAULT RETURN CODE =  8             35960020
         B     CLUPRCC             DEFAULT RETURN CODE = 12    @ZA01485 35970003
         B     NOTCAT              DEFAULT RETURN CODE = 16             35980020
         B     NOTCAT              DEFAULT RETURN CODE = 20             35990020
         B     CLUPRCC             DEFAULT RETURN CODE = 24    @ZA01485 36000003
         B     DEFERR              DEFAULT RETURN CODE = 28             36010020
         B     CLUPRCC             DEFAULT RETURN CODE = 32    @ZA01485 36020003
         B     NOTCAT              DEFAULT RETURN CODE = 36             36030020
*  SAVE QUALIFIED NAME IN MESSAGE INSERTION BUFFER                      36080020
DEFLTOK  LH    R2,DSL              LENGTH OF FULLY QUALIFIED DSNAME     36160020
         LA    R3,DSNMESG          POINT TO MESSAGE INSERTION BUFFER    36240020
         LA    R4,DSN              POINT TO DATA SET NAME               36320020
         L     R5,UPTSAVX          ADDRESS OF UPT              @YL026YB 36400000
         USING UPT,R5              SET ADDRESSABILITY TO UPT   @YL026YB 36450000
         SR    R1,R1               CLEAR REGISTER                       36500000
         IC    R1,UPTPREFL         LENGTH OF USERID            @YL026YB 36550000
         LTR   R1,R1               IS PREFIX LENGTH ZERO       @YL026YB 36600000
         BZ    NOPRFIX             NO PREFIXING                @YL026YB 36650000
         DROP  R5                  PSCB NO LONGER NEEDED                36720020
         LA    R1,F1(R1)           PLUS ONE FOR THE PERIOD              36800020
         SR    R2,R1               SUBTRACT LENGTH OF USERID            36880020
NOPRFIX  AR    R4,R1               POINT PAST USERID AND PERIOD         36960000
         BCTR  R2,R0               DECREMENT FOR EXECUTE INSTRUCTION    37040020
         EX    R2,MOVEINST         MOVE DSNAME TO INSERTION BUFFER      37120020
         LA    R2,F5(R2)           1 FOR EXECUTE, 4 FOR HEADER          37200020
         STH   R2,DSNMESGL         SAVE LENGTH OF INSERTION DSNAME      37280020
         B     CHECKFCN            GO CHECK REQUESTED FUNCTION          37360020
SAVUNQUL EX    R5,MOVEINST         MOVE DSNAME TO MESSAGE BUFFER        37410020
         LA    R5,F5(R5)           1 FROM EXECUTE, 4 FOR HEADER         37420020
         STH   R5,DSNMESGL         SAVE INSERTION LENGTH                37430020
         B     QUALDSN             GO QUALIFY DATA SET NAME             37432020
*  VALIDITY CHECK ROUTINE  (CHECK LENGTH OF USER DATA)                  37440020
VALDATA  SAVE  (14,12),,*          SAVE PARSE'S REGISTERS               37520020
         L     R12,F4(R1)          RESET BASE REGISTER (ADDRESSABILITY) 37600020
         L     R9,F0(R1)           ADDRESS OF PARSE DESCRIPTOR ELEMENT  37680020
         LH    R6,F4(R9)           LOAD LENGTH OF USER DATA FIELD       37760020
         CH    R6,DATALNTH         COMPARE LENGTH TO 77                 37840020
         BH    DATABAD             MORE THAN 77 IS ERROR                37920020
         SR    R15,R15             SET ZERO RETURN CODE FOR PARSE       38000020
GOBACK   RETURN (14,12),T,RC=(15)  RESTORE PARSE'S REGISTERS AND RETURN 38080020
DATABAD  LA    R15,RC4             SET RETURN CODE = 4 FOR PARSE        38160020
         B     GOBACK              RETURN TO PARSE                      38240020
*                                                                     * 38320020
*  THIS IS THE MESSAGE BUILD SUBROUTINE.  IT ACCESSES THE MESSAGE CSECT 38400020
*  TO OBTAIN THE ADDRESS OF THE MESSAGE SEGMENT AND THE OFFSET AT WHICH 38480020
*  ANY INSERTIONS WILL BE MADE.                                         38560020
*  AT ENTRY R2 CONTAINS MESSAGE NUMBER AND R10 CONTAINS ADDRESS OF THE  38640020
*  INSERTION.  R14 IS THE RETURN REGISTER  (R10 = 0 IS NO INSERTION)    38720020
*                                                                       38800020
MSGBUILD SR    R3,R3               ZERO REGISTER                        38880020
         ST    R3,OUTAREA1         SET POINTER INDICATING ONE MESSAGE   38960020
         MVI   OUTAREA1,ENDTEST    FLAG END OF MESSAGE CHAIN            39040020
         L     R1,VCONMSG          ADDRESS OF MESSAGE BRANCH TABLE      39120020
         BCTR  R2,R0               DECREMENT MESSAGE NUMBER             39200020
         SLL   R2,TWO              MULTIPLY MESSAGE NUMBER BY 4         39280020
         L     R3,F0(R2,R1)        LOAD BRANCH TABLE ENTRY              39360020
         ST    R3,WORKWORD         SAVE THIS ENTRY                      39440020
         LA    R3,F0(R3)           CLEAR HIGH ORDER BYTE                39520020
         ST    R3,OUTPUT11         MESSAGE ADDRESS TO OUTPUT LIST       39600020
         LTR   R10,R10             IS THERE AN INSERTION                39680020
         BZ    NOINSRT1            NO, GO SET SEGMENT COUNT TO 1        39760020
         SR    R2,R2               ZERO REGISTER                        39840020
         IC    R2,WORKWORD         GET OFFSET FOR INSERTION             39920020
         STH   R2,F2(R10)          STORE OFFSET IN MESSAGE OFFSET FIELD 40000020
         ST    R10,OUTPUT12        INSERTION ADDRESS TO OUTPUT LIST     40080020
         LA    R2,TWO              2 SEGMENTS                           40160020
SETCNT1  ST    R2,OUTCNT1          SET SEGMENT COUNT                    40240020
         MVI   STACKSW,SWON        TURN STACK SWITCH ON                 40290020
         BR    R14                 RETURN                               40320020
NOINSRT1 LA    R2,ONE              ONE SEGMENT                          40400020
         B     SETCNT1             GO SET SEGMENT COUNT                 40480020
*                                                                       40560020
*  THIS IS THE SECOND LEVEL MESSAGE BUILD SUBROUTINE.  IT ACCESSES THE  40640020
*  MESSAGE CSECT TO OBTAIN THE ADDRESS OF THE SECOND LEVEL MESSAGE AND  40720020
*  THE OFFSET AT WHICH ANY INSERTIONS WILL BE MADE.                     40800020
*  AT ENTRY R2 CONTAINS SECOND LEVEL MESSAGE NUMBER AND R10 CONTAINS    40880020
*  ADDRESS OF THE INSERTION.  R14 IS THE RETURN REGISTER.  (R10 = 0 IS  40960020
*  NO INSERTION)                                                        41040020
*                                                                       41120020
SMSGBLD  SR    R3,R3               ZERO REGISTER                        41200020
         ST    R3,OUTAREA2         SET POINTER INDICATING LAST MESSAGE  41280020
         MVI   OUTAREA2,ENDTEST    FLAG END OF MESSAGE CHAIN            41360020
         LA    R3,OUTAREA2         POINT TO SECOND LEVEL MESSAGE CHAIN  41440020
         ST    R3,OUTAREA1         CHAIN SECOND LEVEL TO FIRST LEVEL    41520020
         L     R1,VCONSMSG         SECOND LEVEL MESSAGE BRANCH TABLE    41600020
         BCTR  R2,R0               DECREMENT MESSAGE NUMBER             41680020
         SLL   R2,TWO              MULTIPLY MESSAGE NUMBER BY 4         41760020
         L     R3,F0(R2,R1)        LOAD BRANCH TABLE ENTRY              41840020
         ST    R3,WORKWORD         SAVE THIS ENTRY                      41920020
         LA    R3,F0(R3)           CLEAR HIGH ORDER BYTE                42000020
         ST    R3,OUTPUT21         MESSAGE ADDRESS TO OUTPUT LIST       42080020
         LTR   R10,R10             IS THERE AN INSERTION                42160020
         BZ    NOINSRT2            NO, GO SET SEGMENT COUNT TO 1        42240020
         SR    R2,R2               ZERO REGISTER                        42320020
         IC    R2,WORKWORD         GET OFFSET FOR INSERTION             42400020
         STH   R2,F2(R10)          STORE OFFSET IN MESSAGE OFFSET FIELD 42480020
         ST    R10,OUTPUT22        INSERTION ADDRESS TO OUTPUT LIST     42560020
         LA    R2,TWO              2 SEGMENTS                           42640020
SETCNT2  ST    R2,OUTCNT2          SET SEGMENT COUNT                    42720020
         BR    R14                 RETURN                               42800020
NOINSRT2 LA    R2,ONE              ONE SEGMENT                          42880020
         B     SETCNT2             GO SET SEGMENT COUNT                 42960020
*  THIS ROUTINE CHECKS FOR ATTENTION INTERRUPT                          43040020
TESTATTN TM    PROCPECB,MASK1      IS ECB POSTED (DID INTERRUPT OCCUR)  43120020
         BO    CLUPRCC             YES, CLEANUP AND RETURN     @ZA01485 43200003
         BR    R14                 RETURN                               43280020
*  THIS ROUTINE PRINTS ERROR MESSAGES.                                  43360020
TPUT     BAL   R14,TESTATTN        GO CHECK FOR INTERRUPT               43440020
         LA    R1,IOPARM           POINT TO PUTLINE GENERAL PARAMETERS  43520020
         PUTLINE  PARM=PUT,OUTPUT=(OUTAREA1,MULTLVL),MF=(E,(1)),       X43600020
               TERMPUT=(EDIT,WAIT)                                      43680020
         LA    R3,F4               R3 = 4                               43760020
         CR    R3,R15              DID ATTENTION INTERRUPT OCCUR        43840020
         BE    CLUPRCC             YES, CLEANUP AND RETURN     @ZA01485 43920003
         CLI   PROMPTSW,SWON       IS PROMPTING REQUIRED                44000020
         BE    PWPROMPT            YES, GO PROMPT FOR CONTROL PASSWORD  44080020
         B     CLUPRCC             CLEANUP AND RETURN          @ZA01485 44160003
*  THIS ROUTINE PRINTS DATA                                             44240020
TPUTDATA BAL   R14,TESTATTN        GO CHECK FOR INTERRUPT               44320020
         LA    R1,IOPARM           POINT TO PUTLINE GENERAL PARAMETERS  44400020
         PUTLINE  PARM=PUTDATA,OUTPUT=(OUTBUFF,SINGLE,DATA),MF=(E,(1)),X44480020
               TERMPUT=(EDIT,WAIT)                                      44560020
         LA    R3,F4               R3 = 4                               44640020
         CR    R3,R15              DID ATTENTION INTERRUPT OCCUR        44720020
         BE    CLUPRCC             YES, CLEANUP AND RETURN     @ZA01485 44800003
         BR    R2                  RETURN                               44880020
SVCOK    CLI   SVCOPT,SVCOPT04     WAS THIS A LIST REQUEST              44960020
         BE    LISTPROC            YES, GO PROCESS BUFFER               45040020
CLEANUP  EQU   *                   CLEAN UP AND RETURN                  45240020
*  ZERO ALL PASSWORD FIELDS BEFORE FREEING CORE.                        45520020
         XC    PWLIST(ENDPWLST-PWLIST),PWLIST ZERO PASSWORD LIST        45600020
         XC    LISTBUFF(ENDLSTBF-LISTBUFF),LISTBUFF ZERO LIST BUFFER    45680020
         XC    PWMSG(PWBLANK-PWMSG),PWMSG ZERO PASSWORD MESSAGE BUFFER  45760020
*  NOW CHECK IF AN ERROR HAS OCCURRED.  IF SO, THE STACK MUST BE        45810020
*  FLUSHED AND THE INPUT QUEUE CLEARED.                                 45820020
         CLI   STACKSW,SWON        IS STACK SWITCH ON                   45830020
         BNE   STACKOK             NO ERROR, END NORMALLY               45840020
         LA    R1,IOPARM           POINT TO I/O PARAMETER LIST          45850020
         LA    R2,STACKPRM         POINT TO STACK PARM BLOCK            45852020
         ST    R2,IOPLIOPB-IOPL(R1) PARM BLOCK ADDRESS TO PARM LIST     45854020
         STACK DELETE=ALL,MF=(E,(1)) FLUSH STACK                        45856020
         TCLEARQ INPUT             CLEAR ANYTHING TYPED AHEAD           45858020
STACKOK  EQU   *                   NORMAL RETURN FROM HERE              45858420
         L     R13,F4(R13)         SET REG 13 TO CALLER'S REGISTERS     45860020
         SR    R15,R15             CLEAR R15                   @ZA01485 45910003
         IC    R15,RCX             SET RETURN CODE             @ZA01485 46080003
         RETURN (14,12),T,RC=(15)  RESTORE REGISTERS AND RETURN         46160020
CLUPRCC  EQU   *                                               @ZA01485 46210003
         MVI   RCX,R12             SET BAD RC                  @ZA01485 46220003
         B     CLEANUP                                         @ZA01485 46230003
LISTPROC LH    R2,PROUSECT         LOAD ACCESS (USE) COUNT        Y2030 46240000
         SLL   R2,F16              SHIFT OUT POSSIBLE-                  46320020
         SRL   R2,F16              -NEGATIVE SIGN                       46400020
         CVD   R2,UNPACK           CONVERT TO PACKED DECIMAL FORMAT     46480020
         UNPK  COUNT,UNPACK        CONVERT TO ZONED FORMAT              46560020
         OI    SIGNBYTE,ZONE       ZONE OVER SIGN                       46640020
         LH    R2,DSNMESGL         LENGTH OF DSNAME + HEADER            46720020
         LR    R5,R2               -TO REG 5                            46800020
         SH    R5,FIVE             LESS 4 FOR HEADER AND 1 FOR EXECUTE  46880020
         LA    R3,OUTBUFFR         POINT TO DATA BUFFER                 46960020
         LA    R4,DSNMESG          POINT TO DSNAME                      47040020
         EX    R5,MOVEINST         MOVE DSNAME TO DATA BUFFER           47120020
         LA    R3,F1(R5,R3)        POINT PAST DSNAME                    47200020
         MVC   F0(L'BLANKS,R3),BLANKS MOVE IN BLANK CHARACTERS          47280020
         LA    R3,L'BLANKS(R3)     POINT PAST BLANKS                    47360020
         LA    R2,L'BLANKS(R2)     BUMP LENGTH OF DATA BUFFER           47440020
*  SUPPRESS LEADING ZEROES IN USE COUNT                                 47520020
         LA    R4,COUNT            POINT TO COUNT BUFFER                47600020
         LA    R5,F7               R5 = 7                               47680020
SUPZERO  CLI   F0(R4),ZERO         IS THIS A LEADING ZERO               47760020
         BNE   NONZERO             NO, GO MOVE USE COUNT                47840020
         LA    R4,F1(R4)           YES, POINT TO NEXT DIGIT             47920020
         BCT   R5,SUPZERO          CHECK NEXT DIGIT                     48000020
NONZERO  LA    R5,ENDCOUNT         POINT PAST COUNT FIELD               48080020
         SR    R5,R4               NUMBER OF SIGNIFICANT DIGITS IN REG5 48160020
         AR    R2,R5               BUMP LENGTH OF DATA BUFFER           48240020
         BCTR  R5,R0               DECREMENT FOR EXECUTE INSTRUCTION    48320020
         EX    R5,MOVEINST         MOVE IN USE COUNT                    48400020
         LA    R3,F1(R5,R3)        POINT PAST USE COUNT                 48480020
         MVC   F0(L'BLANKS,R3),BLANKS MOVE IN BLANK CHARACTERS          48560020
         LA    R3,L'BLANKS(R3)     POINT PAST BLANKS                    48640020
         LA    R2,L'BLANKS(R2)     BUMP LENGTH OF DATA BUFFER           48720020
*  NOW DETERMINE PROTECTION TYPE                                        48800020
         MVC   LOCLIST(CLSTLNTH),CLISTS INITIALIZE LOCATE AND OBTAIN    48803020
         LA    R4,DSN              DSNAME ADDRESS-                      48806020
         ST    R4,LOCDSN           -TO LOCATE LIST                      48809020
         ST    R4,OBTNDSN          -TO OBTAIN LIST                      48812020
         LA    R4,VNUM             VNUM ADDRESS-                        48815020
         ST    R4,OBTNVNUM         -TO OBTAIN LIST                      48818020
         LA    R4,WORKAREA         WORKAREA ADDRESS-                    48821020
         ST    R4,LOCAREA          -TO LOCATE LIST                      48824020
         ST    R4,OBTNAREA         -TO OBTAIN LIST                      48827020
         LOCATE LOCLIST            ISSUE LOCATE                         48830020
         LTR   R15,R15             TEST LOCATE RETURN CODE              48833020
         BNZ   UNPRO               PROTECTION NOT AVAILABLE             48836020
         MVC   VNUM(F6),VOLNUM     MOVE VOLUME SERIAL NUMBER            48839020
         OBTAIN OBTNLIST           ISSUE OBTAIN                         48842020
         LTR   R15,R15             TEST OBTAIN RETURN CODE              48845020
         BNZ   UNPRO               PROTECTION NOT AVAILABLE             48848020
         USING DS1FMTID,R4         ADDRESSABILITY FORMAT 1 DSCB         48851020
         TM    DS1DSIND,PRMASK     IS DATA SET PROTECTED                48854020
         BNO   NOPRO               NOT PROTECTED                        48857020
         TM    DS1DSIND,RDWOTPAS   IS IT READ WITHOUT PASSWORD          48860020
         BO    RDWOTPRO            YES, READ WITHOUT PASSWORD           48863020
         DROP  R4                  DSCB NO LONGER NEEDED                48866020
         TM    PROMODE,PROMASK     TEST PROTECTION MODE BYTE            48880020
         BO    RDWRTPRO            ON INDICATES READ/WRITE PROTECTION   48960020
         LA    R4,READONLY         POINT TO PROTECTION TYPE             49040020
         LA    R5,L'READONLY       LENGTH OF PROTECTION TYPE            49120020
MOVEPRO  AR    R2,R5               BUMP LENGTH OF DATA BUFFER           49200020
         BCTR  R5,R0               DECREMENT FOR EXECUTE INSTRUCTION    49280020
         EX    R5,MOVEINST         MOVE PROTECTION TYPE TO DATA BUFFER  49360020
         STH   R2,OUTBUFF          LENGTH OF DATA BUFFER                49440020
         XC    OUTBUFFO(F2),OUTBUFFO ZERO INSERTION OFFSET              49520020
         BAL   R2,TPUTDATA         GO PRINT DATA                        49600020
*  CHECK IF USER DATA FIELD IS BLANK                                    49680020
         LA    R2,F77              LENGTH OF USER DATA FIELD            49760020
         LA    R3,PUSRDATA         POINT TO USER DATA                   49840020
CHCKDATA CLI   F0(R3),BLANK        IS THIS A BLANK                      49920020
         BNE   DATAOK              VALID DATA, GO PRINT IT              50000020
         LA    R3,F1(R3)           POINT TO NEXT CHARACTER              50080020
         BCT   R2,CHCKDATA         IF MORE CHARACTERS GO CHECK THEM     50160020
*  USER DATA FIELD IS BLANK ISSUE MESSAGE                               50240020
         LA    R2,M09              MESSAGE NUMBER 9                     50320020
         SR    R10,R10             NO INSERTION                         50400020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     50480020
         MVI   STACKSW,SWOFF       TURN STACK SWITCH OFF         A46794 50530021
         B     TPUT                GO PRINT MESSAGE                     50560020
RDWRTPRO LA    R4,READWRIT         POINT TO PROTECTION TYPE             50640020
         LA    R5,L'READWRIT       LENGTH OF PROTECTION TYPE            50720020
         B     MOVEPRO             GO MOVE PROTECTION TYPE TO BUFFER    50800020
UNPRO    LA    R4,NOTAVAIL         POINT TO PROTECTION TYPE             50808020
         LA    R5,L'NOTAVAIL       LENGTH OF PROTECTION TYPE            50816020
         B     MOVEPRO             GO MOVE PROTECTION TYPE TO BUFFER    50824020
NOPRO    LA    R4,NOTPROT          POINT TO PROTECTION TYPE             50832020
         LA    R5,L'NOTPROT        LENGTH OF PROTECTION TYPE            50840020
         B     MOVEPRO             GO MOVE PROTECTION TYPE TO BUFFER    50848020
RDWOTPRO LA    R4,RDWOPASS         POINT TO PROTECTION TYPE             50856020
         LA    R5,L'RDWOPASS       LENGTH OF PROTECTION TYPE            50864020
         B     MOVEPRO             GO MOVE PROTECTION TYPE TO BUFFER    50872020
*  USER DATA FIELD IS NOT BLANK PRINT IT                                50880020
DATAOK   LA    R2,F77              LENGTH OF USER DATA FIELD            50960020
         BCTR  R2,R0               DECREMENT FOR EXECUTE                51040020
         LA    R3,OUTBUFFR         POINT TO DATA BUFFER                 51120020
         LA    R4,PUSRDATA         POINT TO USER DATA                   51200020
         EX    R2,MOVEINST         MOVE USER DATA TO DATA BUFFER        51280020
         LA    R2,F5(R2)           1 FROM EXECUTE, 4 FOR HEADER         51360020
         STH   R2,OUTBUFF          LENGTH OF DATA BUFFER                51440020
         XC    OUTBUFFO(F2),OUTBUFFO ZERO INSERTION OFFSET              51520020
         BAL   R2,TPUTDATA         GO PRINT DATA                        51600020
         B     CLEANUP             GO CLEANUP AND RETURN                51680020
*  ISSUE THE PROTECT SVC                                          Y2075 51690000
ISSUESVC EQU   *                                                  Y2075 51760000
SVC98    LA    R1,SVCPARMS         POINT TO SVC PARAMETER LIST          51830020
         PROTECT (1)               ISSUE PROTECT SVC                    51840020
         B     SVCRCTAB(R15)       ANALYZE SVC RETURN CODE              51920020
SVCRCTAB B     SVCOK               SVC RETURN CODE =  0                 52000020
         B     PWEXISTS            SVC RETURN CODE =  4                 52080020
         B     PWNTFND             SVC RETURN CODE =  8                 52160020
         B     PWCNTRL             SVC RETURN CODE = 12                 52240020
         B     LOGICERR            SVC RETURN CODE = 16                 52320020
         B     MPDSERR             SVC RETURN CODE = 20                 52400020
         B     MPDSFULL            SVC RETURN CODE = 24                 52480020
         B     LOGICERR            SVC RETURN CODE = 28                 52560020
         B     LOCFAIL             SVC RETURN CODE = 32                 52640020
         B     OBTNFAIL            SVC RETURN CODE = 36                 52720020
         B     NOTFLAG             SVC RETURN CODE = 40                 52800020
         B     NOMPDS              SVC RETURN CODE = 44                 52880020
         B     NOTTAPE             SVC RETURN CODE = 48                 52960020
         B     INUSE               SVC RETURN CODE = 52                 53000020
         B     VSAM                SVC RETURN CODE = 56           Y2075 53020000
SCANPW   SR    R1,R1               CLEAR REGISTER                       53040020
         LA    R3,PWMSG            ADDRESS OF PASSWORD TO BE SCANNED    53120020
BLANKTST CLI   F0(R3),BLANK        IS THIS CHARACTER A BLANK            53200020
         BE    F0(R14)             BLANK FOUND, RETURN, LENGTH IN R1    53280020
         LA    R3,F1(R3)           POINT TO NEXT CHARACTER              53360020
         LA    R1,F1(R1)           BUMP LENGTH COUNT                    53440020
         B     BLANKTST            GO CHECK NEXT CHARACTER              53520020
BLDMSG01 LA    R2,M01              MESSAGE NUMBER 1                     53600020
         B     MSGINSRT            GO GET INSERTION                     53680020
BLDMSG03 LA    R2,M03              MESSAGE NUMBER 3                     53760020
MSGINSRT LA    R10,DSNMESGL        POINT TO DSNAME INSERTION            53840020
MESGBLD  BAL   R14,MSGBUILD        GO BUILD MESSAGE                     53920020
         BR    R8                  RETURN FOR SECOND LEVEL MESSAGE      54000020
BLDMSG04 LA    R2,M04              MESSAGE NUMBER 4                     54080020
         B     MSGINSRT            GO GET INSERTION AND BUILD MESSAGE   54160020
PWINSERT MVC   PWMSG(F8),CURENTPW  MOVE PASSWORD TO INSERTION BUFFER    54240020
*  THIS SECTION INSURES THAT PASSWORD IS NOT                            54320003
*  PUT INTO MESSAGES. THE PWMSGL FIELD IS SET TO ZERO.                  54400003
PWLENGTH SR    R1,R1               ZERO REG.                  @ZA02853  54640003
         STH   R1,PWMSGL           ZERO INSERTION LENGTH      @ZA02853  54800003
         BR    R2                  RETURN                     @ZA02853  54880003
PWCNTRL  CLI   CONTRLPW,BLANK      WAS CONTROL PASSWORD SPECIFIED       54960020
         BE    PWPROMPT            NO, GO PROMPT FOR CONTROL PASSWORD   55040020
*  CONTROL PASSWORD SPECIFIED WAS INCORRECT.  ISSUE ERROR MESSAGE, THEN 55120020
*  PROMPT FOR NEW CONTROL PASSWORD.                                     55200020
         MVC   PWMSG(F8),CONTRLPW  PASSWORD TO MESSAGE BUFFER           55280020
         BAL   R2,PWLENGTH         GO CALCULATE LENGTH OF PASSWORD      55360020
         MVI   PROMPTSW,SWON       TURN ON PROMPT SWITCH                55440020
         LA    R2,M10              MESSAGE NUMBER 10                    55520020
         B     SETINSRT            GO BUILD AND ISSUE MESSAGE           55600020
*  THE CONTROL PASSWORD IS REQUIRED TO AUTHORIZE THE REQUESTED CHANGE * 55680020
*  TO THE PASSWORD DATA SET.  THIS ROUTINE USES PARSE SERVICE ROUTINE * 55760020
*  TO PROMPT FOR CONTROL PASSWORD.                                    * 55840020
PWPROMPT SR    R2,R2               CLEAR REGISTER                       55920020
         MVI   PROMPTSW,SWOFF      TURN OFF PROMPT SWITCH               56000020
         IC    R2,PRMPTCNT         PROMPT COUNT                         56080020
         LA    R2,F1(R2)           BUMP PROMPT COUNT                    56160020
         STC   R2,PRMPTCNT         SAVE PROMPT COUNT                    56240020
         CLI   PRMPTCNT,TWO        COMPARE PROMPT COUNT TO TWO          56320020
         BH    TWOPRMPT            MORE THAN TWO PROMPTS IS ERROR       56400020
*  NOW BUILD BUFFER (BLANK) TO PASS TO PARSE                            56560020
         LA    R2,F6               R2 = 6                               56640020
         STH   R2,PRMPTBFL         PROMPT BUFFER LENGTH                 56720020
         SR    R2,R2               ZERO REGISTER                        56800020
         STH   R2,PRMPTBFO         PROMPT BUFFER OFFSET                 56880020
         MVC   PRMPTBUF,BLANKS     BLANK PROMPT BUFFER                  56960020
*  NOW BUILD PARSE PARAMETER LIST.                                      57040020
         ST    R2,ANSPLACE         ZERO WORD, PARSE ANSWER PLACE        57120020
         LA    R1,PARSPARM         POINT TO PARSE PARAMETER AREA        57200020
         USING PPL,R1              ESTABLISH ADDRESSABILITY PPL         57280020
         LA    R2,PRMPTBFL         PROMPT BUFFER ADDRESS-               57360020
         ST    R2,PPLCBUF          -TO PARSE PARAMETER LIST             57440020
         L     R2,VPSWPARM         ADDRESS OF PARSE MACROS-             57520020
         ST    R2,PPLPCL           -TO PARSE PARAMETER LIST             57600020
         DROP  R1                  PPL NO LONGER NEEDED                 57680020
         LINK  EP=IKJPARS          USE PARSE TO PROMPT FOR PASSWORD     57760020
*  THE FORMAT OF THE LIST RETURNED FROM PARSE IS AS FOLLOWS-            57840020
*     1ST WORD POINTER TO THE CHARACTER STRING                          57920020
*     2ND WORD BYTE 0-1 LENGTH OF THIS CHARACTER STRING                 58000020
*              BYTE 2   FLAGS                                           58080020
*              BYTE 3   RESERVED                                        58160020
         LTR   R15,R15             TEST RETURN CODE                     58240020
         BNZ   PARSEERR            GO ANALYZE PARSE ERROR               58320020
         L     R9,ANSPLACE         PARSE PUT DSECT ADDRESS HERE         58400020
         USING IKJPWPRM,R9         ESTABLISH ADDRESSABILITY PARSE PDL   58480020
         L     R4,CNTRLPW          POINTER TO CONTROL PASSWORD          58560020
         LH    R2,CNTRLPW+F4       LENGTH OF CONTROL PASSWORD           58640020
         BCTR  R2,R0               DECREMENT FOR EXECUTE INSTRUCTION    58720020
         LA    R3,CONTRLPW         CONTROL PASSWORD BUFFER              58800020
         MVI   F0(R3),BLANK        BLANK FIRST CHARACTER                58880020
         MVC   F1(F7,R3),F0(R3)    BLANK CONTROL PASSWORD BUFFER        58960020
         ST    R3,SVCCONPW         SAVE POINTER TO CONTROL PASSWORD     59040020
         EX    R2,MOVEINST         MOVE CONTROL PASSWORD TO BUFFER      59120020
         B     SVC98               GO ISSUE SVC 98                      59200020
*  THE FOLLOWING ROUTINES INITIALIZE REGISTER 2 TO CONTAIN              59280020
*  MESSAGE NUMBER AND REGISTER 10 TO POINT TO MESSAGE INSERTION         59360020
PWEXISTS MVC   PWMSG(F8),NEWPW     MOVE PASSWORD TO INSERTION BUFFER    59440020
         BAL   R2,PWLENGTH         GO CALCULATE LENGTH OF PASSWORD      59520020
         LA    R2,M06              MESSAGE NUMBER 6                     59600020
SETINSRT LA    R10,PWMSGL          POINT TO PASSWORD INSERTION          59680020
BLDMESG  BAL   R14,MSGBUILD        GO BUILD MESSAGE                     59760020
         B     TPUT                GO WRITE MESSAGE                     59840020
PWNTFND  BAL   R2,PWINSERT         GO BUILD PASSWORD INSERTION          59920020
         LA    R2,M07              MESSAGE NUMBER 7                     60000020
         B     SETINSRT            GO PREPARE AND WRITE MESSAGE         60080020
MEMBRERR LA    R2,M08              MESSAGE NUMBER 8                     60160020
NOINSERT SR    R10,R10             NO INSERTION                         60240020
         B     BLDMESG             GO BUILD AND WRITE MESSAGE           60320020
NOMPDS   BAL   R8,BLDMSG01         GO BUILD MESSAGE                     60400020
         LA    R2,S01              SECOND LEVEL MESSAGE NUMBER 1        60480020
BLDSMESG SR    R10,R10             NO INSERTION                         60560020
SMESGBLD BAL   R14,SMSGBLD         GO BUILD SECOND LEVEL MESSAGE        60640020
         B     TPUT                GO WRITE MESSAGE                     60720020
MPDSFULL BAL   R8,BLDMSG01         GO BUILD MESSAGE                     60800020
         LA    R2,S02              SECOND LEVEL MESSAGE 2               60880020
         B     BLDSMESG            GO BUILD AND WRITE MESSAGE           60960020
MPDSERR  BAL   R8,BLDMSG01         GO BUILD MESSAGE                     61040020
         LA    R2,S03              SECOND LEVEL MESSAGE 3               61120020
         B     BLDSMESG            GO BUILD AND WRITE MESSAGE           61200020
NOTTAPE  BAL   R8,BLDMSG04         GO BUILD MESSAGE                     61280020
         LA    R2,S14              SECOND LEVEL MESSAGE 14              61360020
         B     BLDSMESG            GO BUILD AND WRITE MESSAGE           61440020
NOTFLAG  BAL   R8,BLDMSG04         GO BUILD MESSAGE                     61520020
         LA    R2,S15              SECOND LEVEL MESSAGE 15              61600020
         B     BLDSMESG            GO BUILD AND WRITE MESSAGE           61680020
LOCFAIL  BAL   R8,BLDMSG04         GO BUILD MESSAGE                     61760020
         LA    R2,S11              SECOND LEVEL MESSAGE 11              61840020
         B     BLDSMESG            GO BUILD AND WRITE MESSAGE           61920020
OBTNFAIL STC   R1,RC               SAVE OBTAIN RETURN CODE              62000020
         BAL   R8,BLDMSG04         GO BUILD MESSAGE                     62080020
         CLI   RC,RC4              IS RETURN CODE = 4                   62160020
         BE    VOLNTMTD            YES, VOLUME NOT MOUNTED              62240020
         LA    R2,S12              SECOND LEVEL MESSAGE 12              62320020
         B     BLDSMESG            GO BUILD AND WRITE MESSAGE           62400020
VOLNTMTD LA    R2,S13              SECOND LEVEL MESSAGE 13              62480020
         B     BLDSMESG            GO BUILD AND WRITE MESSAGE           62560020
INUSE    BAL   R8,BLDMSG04         GO BUILD MESSAGE                     62580020
         LA    R2,S06              SECOND LEVEL MESSAGE 6               62600020
         B     BLDSMESG            GO BUILD AND WRITE MESSAGE           62620020
VSAM     BAL   R8,BLDMSG04         GO BUILD MESSAGE               Y2075 62625000
         LA    R2,S09              SECOND LEVEL MESSAGE 9         Y2075 62630000
         B     BLDSMESG            GO BUILD AND WRITE MESSAGE     Y2075 62635000
PARSEERR STC   R15,RC              SAVE PARSE RETURN CODE               62640020
         MVI   STACKSW,SWON        TURN STACK SWITCH ON                 62690020
         CLI   RC,RC8              DID ATTENTION INTERRUPT OCCUR        62720020
         BNH   CLUPRCC             YES, CLEANUP AND RETURN     @ZA01485 62800003
         CLI   RC,RC16             PARSE RETURN CODE = 16               62880020
         BE    NOSPACE             YES, NO CORE                         62960020
         BAL   R8,MESG12           GO BUILD MESSAGE                     63060020
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERTION         63280020
         LA    R2,S05              SECOND LEVEL MESSAGE NUMBER 5        63360020
         B     SMESGBLD            GO BUILD AND WRITE MESSAGE           63440020
NOSPACE  LA    R2,M02              MESSAGE NUMBER 2                     63520020
         B     NOINSERT            GO BUILD AND WRITE MESSAGE           63600020
MESG12   LA    R2,M12              MESSAGE NUMBER 12                    63700020
         SR    R10,R10             NO INSERTION                         63800020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     63900020
         BR    R8                  RETURN                               64000020
NOTCAT   BAL   R8,BLDMSG03         GO BUILD MESSAGE                     64100020
         B     TPUT                GO WRITE MESSAGE                     64200020
LOGICERR BAL   R8,MESG12           GO BUILD MESSAGE                     64300020
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERTION         64800020
         LA    R2,S10              SECOND LEVEL MESSAGE NUMBER 10       64880020
         B     SMESGBLD            GO BUILD AND WRITE MESSAGE           64960020
DEFERR   BAL   R8,MESG12           GO BUILD MESSAGE                     64970020
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERTION         64980020
         LA    R2,S04              SECOND LEVEL MESSAGE 4               64990020
         B     SMESGBLD            GO BUILD AND WRITE MESSAGE           65000020
DSNBIG   L     R4,UPTSAVX          UPT ADDRESS                 @YL026YB 65040000
         LA    R3,DSNMESG          DSNAME INSERTION BUFFER              65090000
         SR    R2,R2               CLEAR REGISTER                       65140000
         IC    R2,UPTPREFL-UPT(R4) LENGTH OF USERID            @YL026YB 65190000
         LTR   R2,R2               CHECK PREFIX LENGTH FOR ZERO         65240000
         BZ    NOPREFX             NO PREFIXING                @YL026YB 65290000
         LA    R4,UPTPREFX-UPT(R4) ADDRESS OF USERID           @YL026YB 65340000
         EX    R2,MOVEINST         USERID TO DSNAME BUFFER              65440020
*  THIS MOVED ONE EXTRA BYTE WHICH WILL NOW BE OVERLAID WITH A PERIOD   65520020
         AR    R3,R2               POINT PAST USERID                    65600020
         MVI   F0(R3),PERIOD       MOVE IN PERIOD                       65680020
         LA    R3,F1(R3)           POINT PAST PERIOD                    65760020
NOPREFX  LA    R4,DSN              ADDRESS OF DATA SET NAME             65840000
         LH    R5,DSL              LENGTH OF DATA SET NAME              65920020
         AR    R2,R5               PLUS LENGTH OF USERID                66000020
         LA    R2,F5(R2)           ONE FOR PERIOD, FOUR FOR HEADER      66080020
         BCTR  R5,R0               DECREMENT FOR EXECUTE                66160020
         EX    R5,MOVEINST         MOVE DATA SET NAME TO USERID         66240020
         STH   R2,DSNMESGL         SAVE TOTAL LENGTH                    66320020
         LA    R2,M11              MESSAGE NUMBER 11                    66400020
         LA    R10,DSNMESGL        POINT TO INSERTION                   66480020
         B     BLDMESG             GO BUILD AND WRITE MESSAGE           66560020
TWOPRMPT LA    R2,M05              MESSAGE NUMBER 5                     66880020
         B     NOINSERT            GO BUILD AND WRITE MESSAGE           66960020
*  CONVERT RETURN CODE, SUPPRESS LEADING ZEROS AND MOVE TO INSERTION    67040020
*  BUFFER.  INPUT - R15 CONTAINS RETURN CODE TO BE CONVERTED            67120020
*           OUTPUT - R10 POINTS TO INSERTION BUFFER                     67200020
*  R2 IS THE RETURN REGISTER                                            67280020
CONVRTRC CVD   R15,UNPACK          CONVERT TO PACKED DECIMAL FORMAT     67360020
         UNPK  COUNT,UNPACK        CONVERT TO ZONED FORMAT              67440020
         OI    SIGNBYTE,ZONE       ZONE OVER SIGN                       67520020
*  SUPPRESS LEADING ZEROS IN RETURN CODE                                67600020
         LA    R4,COUNT            POINT TO COUNT BUFFER                67680020
         LA    R5,F7               R5 = 7                               67760020
SUPPZERO CLI   F0(R4),ZERO         IS THIS LEADING ZERO                 67840020
         BNE   NOTZERO             NO, GO MOVE RETURN CODE              67920020
         LA    R4,F1(R4)           YES, POINT TO NEXT DIGIT             68000020
         BCT   R5,SUPPZERO         GO CHECK NEXT DIGIT                  68080020
NOTZERO  LA    R5,ENDCOUNT         POINT PAST COUNT BUFFER              68160020
         SR    R5,R4               NUMBER OF SIGNIFICANT DIGITS IN R5   68240020
         BCTR  R5,R0               DECREMENT FOR EXECUTE                68320020
         LA    R3,RCMESG           POINT TO RETURN CODE BUFFER          68400020
         EX    R5,MOVEINST         MOVE RETURN CODE TO INSERTION BUFFER 68480020
         LA    R5,F5(R5)           4 FOR HEADER AND 1 FOR EXECUTE       68560020
         STH   R5,RCMESGL          LENGTH OF RETURN CODE INSERTION      68640020
         LA    R10,RCMESGL         POINT TO INSERTION BUFFER            68720020
         BR    R2                  RETURN                               68800020
         EJECT                                                          68880020
*  CONSTANTS USED IN THIS PROGRAM                                       68960020
VCONMSG  DC    V(IKJEHMSG)         ENTRY MESSAGE CSECT 1ST LEVEL        69040020
VCONSMSG DC    V(IKJEHSMG)         ENTRY MESSAGE CSECT 2ND LEVEL        69120020
VPROPARM DC    V(IKJEHPCD)         PARSE PARAMETERS PROTECT COMMAND     69200020
VPSWPARM DC    V(IKJEHPWP)         PARSE PARAMETERS PASSWORD PROMPTING  69280020
PUTL     PUTLINE MF=L              LIST FORM OF PUTLINE MACRO           69360020
PUTLEND  EQU   *                   END OF PUTLINE MACRO                 69440020
PUTD     PUTLINE MF=L              LIST FORM OF PUTLINE MACRO           69520020
PUTDEND  EQU   *                   END OF PUTLINE MACRO                 69600020
*  KEEP LOCATE AND OBTAIN LISTS TOGETHER, MOVED BY ONE INSTRUCTION      69610020
CLISTS   CAMLST NAME,0,,0          LOCATE CAMLST                        69620020
         CAMLST SEARCH,0,0,0       OBTAIN CAMLST                        69630020
CLSTLNTH EQU   *-CLISTS            LENGTH OF CAMLSTS                    69640020
DATALNTH DC    H'77'               MAXIMUM LENGTH OF USER DATA          69680020
FIVE     DC    H'5'                FIVE                                 69760020
MOVEINST MVC   F0(F0,R3),F0(R4)    MOVE INSTRUCTION                     69840020
BLANKS   DC    C'  '               BLANKS FOR MESSAGE SPACING           69920020
READWRIT DC    C'READ/WRITE'       READ/WRITE PROTECTION                70000020
READONLY DC    C'READ ONLY'        READ ONLY PROTECTION                 70080020
NOTPROT  DC    C'NOT PROTECTED'    NOT PROTECTED                        70100020
RDWOPASS DC    C'READ W/O PASSWORD' READ WITHOUT PASSWORD PROTECTION    70120020
NOTAVAIL DC    C'PROTECTION NOT AVAILABLE' DSCB NOT AVAILABLE           70140020
         EJECT                                                          70160020
*                                                                     * 70240020
*              PARSE MACROS FOR PROTECT COMMAND                       * 70320020
*                                                                     * 70400020
         DS    0F                                                       70480020
IKJEHPCD IKJPARM                                                        70560020
PRODSN   IKJPOSIT   DSNAME,PROMPT='DATA SET NAME',HELP=('NAME OF DATA SX70640020
               ET TO BE PROTECTED')                                     70720020
PROTYPE  IKJKEYWD   DEFAULT='ADD'                                       70800020
         IKJNAME    'ADD',SUBFLD=ADDFIELD                               70880020
         IKJNAME    'REPLACE',SUBFLD=REPFIELD                           70960020
         IKJNAME    'DELETE',SUBFLD=DELFIELD                            71040020
         IKJNAME    'LIST',SUBFLD=LSTFIELD                              71120020
RDTYPE   IKJKEYWD                                                       71200020
         IKJNAME    'PWREAD'                                            71280020
         IKJNAME    'NOPWREAD'                                          71360020
WRTYPE   IKJKEYWD                                                       71440020
         IKJNAME    'PWWRITE'                                           71520020
         IKJNAME    'NOWRITE'                                           71600020
DATATYPE IKJKEYWD                                                       71680020
         IKJNAME    'DATA',SUBFLD=STRFIELD                              71760020
ADDFIELD IKJSUBF                                                        71840020
ADDNEWPW IKJIDENT   'PASSWORD',MAXLNTH=8,OTHER=ALPHANUM,PROMPT='NEW PASX71920020
               SWORD',HELP=('PASSWORD OF ENTRY TO BE ADDED'),FIRST=ALPHX72000021
               ANUM                                              A42336 72050021
REPFIELD IKJSUBF                                                        72080020
REPOLDPW IKJIDENT   'PASSWORD',PTBYPS,MAXLNTH=8,OTHER=ALPHANUM,PROMPT='X72160020
               CURRENT PASSWORD',HELP=('PASSWORD OF ENTRY TO BE REPLACEX72240020
               D'),FIRST=ALPHANUM                                A42336 72320021
REPNEWPW IKJIDENT   'NEW PASSWORD',MAXLNTH=8,OTHER=ALPHANUM,FIRST=ALPHAX72400021
               NUM                                               A42336 72450021
DELFIELD IKJSUBF                                                        72480020
DELOLDPW IKJIDENT   'PASSWORD',PTBYPS,MAXLNTH=8,OTHER=ALPHANUM,PROMPT='X72560020
               CURRENT PASSWORD',HELP=('PASSWORD OF ENTRY TO BE DELETEDX72640020
               '),FIRST=ALPHANUM                                 A42336 72720021
LSTFIELD IKJSUBF                                                        72800020
LSTOLDPW IKJIDENT   'PASSWORD',PTBYPS,MAXLNTH=8,OTHER=ALPHANUM,PROMPT='X72880020
               CURRENT PASSWORD',HELP=('PASSWORD OF ENTRY TO BE LISTED'X72960020
               ),FIRST=ALPHANUM                                  A42336 73040021
STRFIELD IKJSUBF                                                        73120020
STRDATA  IKJPOSIT  QSTRING,PROMPT='DATA',HELP=('UP TO 77 BYTES OF CHARAX73200020
               CTER INFORMATION IN QUOTES'),VALIDCK=VALDATA             73250020
         IKJENDP                                                        73360020
         EJECT                                                          73440020
*                                                                       73520020
*        PARSE MACROS FOR PASSWORD PROMPTING                            73600020
*                                                                       73680020
IKJEHPWP IKJPARM    DSECT=IKJPWPRM                                      73760020
CNTRLPW  IKJIDENT   'PASSWORD',PTBYPS,MAXLNTH=8,OTHER=ALPHANUM,PROMPT='X73840020
               CONTROL PASSWORD',HELP=('PASSWORD OF CONTROL (FIRST) ENTX73920020
               RY FOR THIS DATA SET'),FIRST=ALPHANUM             A42336 74000021
         IKJENDP                                                        74080020
*                                                                     * 74160020
*              END OF PARSE MACROS                                    * 74240020
*                                                                     * 74320020
         EJECT                                                          74400020
*  MAPPING MACROS                                                       74480020
         IKJCPPL                                                        74560020
         IKJPPL                                                         74640020
LPPL     EQU   *-PPL               LENGTH OF PPL                        74720020
         IKJDFPL                                                        74800020
LDFPL    EQU   *-DFPL              LENGTH OF DFPL                       74880020
         IKJDFPB                                                        74960020
LDFPB    EQU   *-DFPB              LENGTH OF DFPB                       75040020
         IKJPSCB                                               @YL026YB 75120000
         IKJUPT                                                @YL026YB 75160000
         IKJIOPL                                                        75200020
LIOPL    EQU   *-IOPL              LENGTH OF IOPL                       75280020
         IKJSTPB                                                        75282020
LSTPB    EQU   *-STPB              LENGTH OF STPB                       75284020
         IECSDSL1 1                                                     75330020
         EJECT                                                          75360020
*              GETMAIN COMMON AREA                                      75440020
*                                                                       75520020
COMMON   DSECT                                                          75600020
SAVEAREA DS    18F                 REGISTER SAVE AREA                   75680020
UNPACK   DS    D                   WORK AREA FOR CVD                    75760020
COUNT    DS    D                   WORK AREA FOR UNPACK                 75840020
         ORG   COUNT+F7            BACK TO LAST BYTE OF COUNT FIELD     75920020
SIGNBYTE DS    CL1                 LABEL THE SIGN BYTE                  76000020
         ORG                                                            76080020
ENDCOUNT EQU   *                   END OF COUNT FIELD                   76160020
         DS    0D                  ALIGN DOUBLE WORD BOUNDARY           76170020
WORKAREA DS    350C                WORKAREA FOR LOCATE AND OBTAIN       76200020
         ORG   WORKAREA+F6         SUCCESSFUL LOCATE PUTS-              76202020
VOLNUM   DS    6C                  -VOLUME NUMBER HERE                  76204020
         ORG                                                            76206020
         DS    0F                  ALIGN SVC PARAMETER LIST             76210020
SVCPARMS EQU   *                   SVC 98 PARAMETER LIST                76240020
SVCOPT   DS    CL1                 SVC 98 ENTRY CODE                    76320020
         DS    CL3                 SVC 98 UNUSED (RESERVED)             76400020
SVCDSL   DS    CL1                 SVC 98 DATA SET LENGTH               76480020
SVCDSN   DS    CL3                 SVC 98 POINTER TO DATA SET NAME      76560020
SVCCURPW DS    F                   SVC 98 POINTER TO CURRENT PASSWORD   76640020
SVCCONPW DS    F                   SVC 98 POINTER TO CONTROL PASSWORD   76720020
SVCVOLS  DS    CL1                 SVC 98 NUMBER OF VOLUMES             76800020
SVCVLIST DS    CL3                 SVC 98 POINTER TO VOLUME LIST        76880020
SVCPCODE DS    CL1                 SVC 98 PROTECTION CODE               76960020
SVCNEWPW DS    CL3                 SVC 98 POINTER TO NEW PASSWORD       77040020
SVCSTLTH DS    CL1                 SVC 98 STRING LENGTH                 77120020
SVCSTRNG DS    CL3                 SVC 98 POINTER TO STRING             77200020
SVCNPRMS EQU   *                   SVC 98 END OF PARAMETER LIST         77280020
         DS    0F                  ALIGN PASSWORD LIST                  77360020
PWLIST   EQU   *                   PASSWORD LIST                        77440020
CURENTPW DS    2F                  CURRENT PASSWORD                     77520020
CONTRLPW DS    2F                  CONTROL PASSWORD                     77600020
NEWPW    DS    2F                  NEW PASSWORD                         77680020
ENDPWLST EQU   *                   END OF PASSWORD LIST                 77760020
LISTBUFF EQU   *                   LIST BUFFER                          77840020
PROUSECT DS    CL2                 PROTECTION USE COUNT                 77920020
PROMODE  DS    CL1                 PROTECTION MODE BYTE                 78000020
PUSRDATA DS    CL77                USER DATA                            78080020
ENDLSTBF EQU   *                   END OF LIST BUFFER                   78160020
DSL      DS    CL2                 DATA SET LENGTH                      78240020
DSN      DS    CL44                DATA SET NAME                        78320020
PROCODE  DS    CL1                 PROTECTION CODE SAVED HERE           78400020
VNUM     DS    CL6                 VOLUME NUMBER                        78440020
RCX      DS    CL1                 RC SAVE AREA                @ZA01485 78450003
PROCPECB DS    F                   PROTECT'S ECB                        78480020
ANSPLACE DS    F                   PARSE RETURNS PDL ADDRESS HERE       78560020
         DS    0F                  ALIGN WORD BOUNDRY                   78640020
IOPARM   DS    (LIOPL)X            I/O PARAMETER LIST                   78720020
         DS    0F                  ALIGN WORD BOUNDRY                   78770020
STACKPRM DS    (LSTPB)X            SPACE FOR STACK PARM BLOCK           78780020
         DS    0F                  ALIGN WORD BOUNDRY                   78800020
DFLTPARM DS    (LDFPL)X            DEFAULT PARAMETER LIST               78880020
         DS    0F                  ALIGN WORD BOUNDRY                   78960020
DFLTPBLK DS    (LDFPB)X            DEFAULT PARAMETER BLOCK              79040020
         DS    0F                  ALIGN WORD BOUNDRY                   79120020
PARSPARM DS    (LPPL)X             PARSE PARAMETER LIST                 79200020
         DS    0F                  ALIGN WORD BOUNDRY                   79210020
WORKWORD DS    F                   WORK SPACE (TEMPORARY SAVE AREA)     79220000
UPTSAVX  DS    F                   SAVE UPT ADDRESS HERE       @YL026YB 79320000
PRMPTBFL DS    H                   PROMPT BUFFER LENGTH                 79440020
PRMPTBFO DS    H                   PROMPT BUFFER OFFSET                 79520020
PRMPTBUF DS    H                   PROMPT BUFFER                        79600020
*  THE FOLLOWING IS RESERVED SPACE FOR OUTPUT CHAINS                    79680020
OUTAREA1 DS    F                   MESSAGE CHAIN POINTER                79760020
OUTCNT1  DS    F                   MESSAGE SEGMENT COUNT                79840020
OUTPUT11 DS    F                   POINTER TO MESSAGE SEGMENT           79920020
OUTPUT12 DS    F                   POINTER TO MESSAGE INSERTION         80000020
OUTAREA2 DS    F                   MESSAGE CHAIN POINTER                80080020
OUTCNT2  DS    F                   MESSAGE SEGMENT COUNT                80160020
OUTPUT21 DS    F                   POINTER TO MESSAGE SEGMENT           80240020
OUTPUT22 DS    F                   POINTER TO MESSAGE INSERTION         80320020
*  BUFFER FOR PRINTING USER DATA                                        80400020
OUTBUFF  DS    H                   LENGTH OF DATA BUFFER + HEADER       80480020
OUTBUFFO DS    H                   OFFSET FOR DATA BUFFER               80560020
OUTBUFFR DS    CL84                DATA BUFFER                          80640020
*  RETURN CODE FOR MESSAGES STORED HERE                                 80720020
RCMESGL  DS    H                   LENGTH OF RETURN CODE                80800020
RCMESGO  DS    H                   OFFSET FOR INSERTION                 80880020
RCMESG   DS    CL4                 RETURN CODE                          80960020
*  DATA SET NAME FOR MESSAGES STORED HERE                               81040020
DSNMESGL DS    H                   LENGTH OF DSNAME                     81120020
DSNMESGO DS    H                   OFFSET FOR INSERTION                 81200020
DSNMESG  DS    CL54                DATA SET NAME                        81280020
*  PASSWORD FOR MESSAGES STORED HERE                                    81360020
PWMSGL   DS    H                   LENGTH OF PASSWORD                   81440020
PWMSGO   DS    H                   OFFSET FOR INSERTION                 81520020
PWMSG    DS    CL8                 PASSWORD                             81600020
PWBLANK  DS    CL1                 BLANK DELIMITER                      81680020
RC       DS    CL1                 RETURN CODE SAVED HERE               81760020
PRMPTCNT DS    CL1                 PROMPT COUNTER                       81840020
PROMPTSW DS    CL1                 SWITCH INDICATES PROMPTING REQUIRED  81920020
STACKSW  DS    CL1                 INDICATE FLUSH STACK AND CLEAR QUEUE 81970020
PUT      PUTLINE  MF=L             LIST FORM OF PUTLINE                 82000020
PUTDATA  PUTLINE  MF=L             LIST FORM OF PUTLINE                 82080020
*  KEEP LOCATE AND OBTAIN LISTS TOGETHER                                82088020
LOCLIST  CAMLST NAME,DSN,,WORKAREA LOCATE CAMLST                        82096020
LOCDSN   EQU   LOCLIST+F4          LABEL-                               82104020
LOCAREA  EQU   LOCLIST+F12         -LOCATE CAMLST FIELDS                82112020
OBTNLIST CAMLST SEARCH,DSN,VNUM,WORKAREA OBTAIN CAMLST                  82120020
OBTNDSN  EQU   OBTNLIST+F4         LABEL-                               82128020
OBTNVNUM EQU   OBTNLIST+F8         -OBTAIN-                             82136020
OBTNAREA EQU   OBTNLIST+F12        -CAMLST FIELDS                       82144020
CORE     EQU   *-SAVEAREA          SIZE OF WORKAREA                     82160020
         EJECT                                                          82240020
IKJEHMSG CSECT                                                          82320020
         ENTRY IKJEHSMG                                                 82400020
*********************************************************************** 82480020
*                                                                     * 82560020
*  THIS CONTROL SECTION CONTAINS THE MESSAGE TEXT (BOTH FIRST AND     * 82640020
*  SECOND LEVEL).  IT CONTAINS A BRANCH TABLE FOR FIRST LEVEL MESSAGES* 82720020
*  AND A BRANCH TABLE FOR SECOND LEVEL MESSAGES.  EACH BRANCH TABLE   * 82800020
*  ENTRY IS COMPOSED OF A ONE BYTE OFFSET FIELD FOR MESSAGE INSERTIONS* 82880020
*  AND A THREE BYTE ADDRESS OF THE MESSAGE.  THE MESSAGE BUILDER      * 82960020
*  ROUTINES COMBINE THE ADDRESS OF THE CONTROL SECTION AND THE ADDRESS* 83040020
*  OF THE MESSAGE TO GET THE TRUE ADDRESS OF THE MESSAGE.  THE OFFSET * 83120020
*  IS PLACED IN THE INSERTION SEGMENT.                                * 83200020
*  EACH MESSAGE IS COMPOSED OF A 4 BYTE HEADER (2 BYTE LENGTH OF      * 83280020
*  MESSAGE INCLUDING HEADER LENGTH AND A TWO BYTE OFFSET FIELD)       * 83360020
*  FOLLOWED BY THE MESSAGE TEXT.                                      * 83440020
*                                                                     * 83520020
*********************************************************************** 83600020
         SPACE                                                          83680020
*  EQUATES USED IN THIS CONTROL SECTION                                 83760020
HDR      EQU   4                   HEADER LENGTH (2 BYTES EACH, LENGTH  83840020
*                                  AND OFFSET FIELDS) EACH SEGMENT      83920020
OFST     EQU   0                   INSERTION OFFSET 1ST MESSAGE SEGMENT 84000020
*  OFFSETS FOR FIRST LEVEL MESSAGE INSERTIONS                           84080020
OFST01   EQU   37                  INSERTION OFFSET MESSAGE 01          84160020
OFST02   EQU   0                   INSERTION OFFSET MESSAGE 02          84240020
OFST03   EQU   19                  INSERTION OFFSET MESSAGE 03          84320020
OFST04   EQU   56                  INSERTION OFFSET MESSAGE 04          84400020
OFST05   EQU   0                   INSERTION OFFSET MESSAGE 05          84480020
OFST06   EQU   19                  INSERTION OFFSET MESSAGE 06          84560020
OFST07   EQU   19                  INSERTION OFFSET MESSAGE 07          84640020
OFST08   EQU   0                   INSERTION OFFSET MESSAGE 08          84720020
OFST09   EQU   0                   INSERTION OFFSET MESSAGE 09          84800020
OFST10   EQU   37                  INSERTION OFFSET MESSAGE 10          84880020
OFST11   EQU   34                  INSERTION OFFSET MESSAGE 11          84960020
OFST12   EQU   0                   INSERTION OFFSET MESSAGE 12          85040020
*  OFFSETS FOR SECOND LEVEL MESSAGE INSERTIONS                          85200020
*  NOTE-  THERE ARE CURRENTLY NO INSERTIONS IN MOST SECOND LEVEL        85280020
*  MESSAGES.  A COMMON OFFSET OF ZERO IS USED.                          85360020
OFSTSMSG EQU   0                   INSERTION OFFSET 2ND LEVEL MESSAGES  85440020
OFSTSM04 EQU   29                  INSERTION OFFSET SECOND LEVEL MSG 04 85520020
OFSTSM05 EQU   27                  INSERTION OFFSET SECOND LEVEL MSG 05 85600020
OFSTSM10 EQU   29                  INSERTION OFFSET SECOND LEVEL MSG 10 85680020
         SPACE                                                          85760020
AMSG01   DC    AL1(OFST01)         INSERTION OFFSET                     85840020
         DC    AL3(LMSG01)         MESSAGE ADDRESS                      85920020
AMSG02   DC    AL1(OFST02)         INSERTION OFFSET                     86000020
         DC    AL3(LMSG02)         MESSAGE ADDRESS                      86080020
AMSG03   DC    AL1(OFST03)         INSERTION OFFSET                     86160020
         DC    AL3(LMSG03)         MESSAGE ADDRESS                      86240020
AMSG04   DC    AL1(OFST04)         INSERTION OFFSET                     86320020
         DC    AL3(LMSG04)         MESSAGE ADDRESS                      86400020
AMSG05   DC    AL1(OFST05)         INSERTION OFFSET                     86480020
         DC    AL3(LMSG05)         MESSAGE ADDRESS                      86560020
AMSG06   DC    AL1(OFST06)         INSERTION OFFSET                     86640020
         DC    AL3(LMSG06)         MESSAGE ADDRESS                      86720020
AMSG07   DC    AL1(OFST07)         INSERTION OFFSET                     86800020
         DC    AL3(LMSG07)         MESSAGE ADDRESS                      86880020
AMSG08   DC    AL1(OFST08)         INSERTION OFFSET                     86960020
         DC    AL3(LMSG08)         MESSAGE ADDRESS                      87040020
AMSG09   DC    AL1(OFST09)         INSERTION OFFSET                     87120020
         DC    AL3(LMSG09)         MESSAGE ADDRESS                      87200020
AMSG10   DC    AL1(OFST10)         INSERTION OFFSET                     87280020
         DC    AL3(LMSG10)         MESSAGE ADDRESS                      87360020
AMSG11   DC    AL1(OFST11)         INSERTION OFFSET                     87440020
         DC    AL3(LMSG11)         MESSAGE ADDRESS                      87520020
AMSG12   DC    AL1(OFST12)         INSERTION OFFSET                     87600020
         DC    AL3(LMSG12)         MESSAGE ADDRESS                      87680020
* FIRST LEVEL MESSAGES                                                  87920020
LMSG01   DC    AL2(L'MSG01+HDR)                                         88000020
         DC    AL2(OFST)                                                88080020
MSG01    DC    C'IKJ58101I UNABLE TO PROTECT DATA SET +'                88160020
LMSG02   DC    AL2(L'MSG02+HDR)                                         88240020
         DC    AL2(OFST)                                                88320020
MSG02    DC    C'IKJ58102I NOT ENOUGH MAIN STORAGE TO EXECUTE COMMAND'  88400020
LMSG03   DC    AL2(L'MSG03+HDR)                                         88480020
         DC    AL2(OFST)                                                88560020
MSG03    DC    C'IKJ58103I DATA SET  NOT IN CATALOG'                    88660020
LMSG04   DC    AL2(L'MSG04+HDR)                                         88800020
         DC    AL2(OFST)                                                88880020
MSG04    DC    C'IKJ58104I UNABLE TO MODIFY PROTECTION FLAGS OF DATA SEX88960020
               T +'                                                     89040020
LMSG05   DC    AL2(L'MSG05+HDR)                                         89120020
         DC    AL2(OFST)                                                89200020
MSG05    DC    C'IKJ58105I INCORRECT PASSWORD ENTERED TWICE'            89280020
LMSG06   DC    AL2(L'MSG06+HDR)                                         89360020
         DC    AL2(OFST)                                                89440020
MSG06    DC    C'IKJ58106I PASSWORD  ALREADY EXISTS'                    89520020
LMSG07   DC    AL2(L'MSG07+HDR)                                         89600020
         DC    AL2(OFST)                                                89680020
MSG07    DC    C'IKJ58107I PASSWORD  DOES NOT EXIST'                    89760020
LMSG08   DC    AL2(L'MSG08+HDR)                                         89840020
         DC    AL2(OFST)                                                89920020
MSG08    DC    C'IKJ58108I PROTECTION IS FOR DATA SETS, NOT MEMBERS'    90000020
LMSG09   DC    AL2(L'MSG09+HDR)                                         90080020
         DC    AL2(OFST)                                                90160020
MSG09    DC    C'IKJ58109I USER DATA FIELD BLANK'                       90240020
LMSG10   DC    AL2(L'MSG10+HDR)                                         90320020
         DC    AL2(OFST)                                                90400020
MSG10    DC    C'IKJ58110I INCORRECT CONTROL PASSWORD '                 90480020
LMSG11   DC    AL2(L'MSG11+HDR)                                         90560020
         DC    AL2(OFST)                                                90640020
MSG11    DC    C'IKJ58111I INVALID DATA SET NAME, '''' EXCEEDS 44 CHARAX90720020
               CTERS'                                                   90800020
LMSG12   DC    AL2(L'MSG12+HDR)                                         90880020
         DC    AL2(OFST)                                                90960020
MSG12    DC    C'IKJ58112I COMMAND SYSTEM ERROR+'                       91040020
IKJEHSMG DS    0F                  SECOND LEVEL MESSAGE BRANCH TABLE    91240020
ASMSG01  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     91440020
         DC    AL3(LSMSG01)        MESSAGE ADDRESS                      91520020
ASMSG02  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     91600020
         DC    AL3(LSMSG02)        MESSAGE ADDRESS                      91680020
ASMSG03  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     91760020
         DC    AL3(LSMSG03)        MESSAGE ADDRESS                      91840020
ASMSG04  DC    AL1(OFSTSM04)       INSERTION OFFSET                     91920020
         DC    AL3(LSMSG04)        MESSAGE ADDRESS                      92000020
ASMSG05  DC    AL1(OFSTSM05)       INSERTION OFFSET                     92080020
         DC    AL3(LSMSG05)        MESSAGE ADDRESS                      92160020
ASMSG06  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     92240020
         DC    AL3(LSMSG06)        MESSAGE ADDRESS                      92320020
ASMSG07  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     92400020
         DC    AL3(LSMSG07)        MESSAGE ADDRESS                      92480020
ASMSG08  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     92560020
         DC    AL3(LSMSG08)        MESSAGE ADDRESS                      92640020
ASMSG09  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     92720020
         DC    AL3(LSMSG09)        MESSAGE ADDRESS                      92800020
ASMSG10  DC    AL1(OFSTSM10)       INSERTION OFFSET                     92880020
         DC    AL3(LSMSG10)        MESSAGE ADDRESS                      92960020
ASMSG11  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     93040020
         DC    AL3(LSMSG11)        MESSAGE ADDRESS                      93120020
ASMSG12  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     93200020
         DC    AL3(LSMSG12)        MESSAGE ADDRESS                      93280020
ASMSG13  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     93360020
         DC    AL3(LSMSG13)        MESSAGE ADDRESS                      93440020
ASMSG14  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     93520020
         DC    AL3(LSMSG14)        MESSAGE ADDRESS                      93600020
ASMSG15  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     93680020
         DC    AL3(LSMSG15)        MESSAGE ADDRESS                      93760020
*  SECOND LEVEL MESSAGES                                                93840020
LSMSG01  DC    AL2(L'SMSG01+HDR)                                        93920020
         DC    AL2(OFST)                                                94000020
SMSG01   DC    C'IKJ58101I PASSWORD DATA SET NOT FOUND'                 94080020
LSMSG02  DC    AL2(L'SMSG02+HDR)                                        94160020
         DC    AL2(OFST)                                                94240020
SMSG02   DC    C'IKJ58101I PASSWORD DATA SET FULL'                      94320020
LSMSG03  DC    AL2(L'SMSG03+HDR)                                        94400020
         DC    AL2(OFST)                                                94480020
SMSG03   DC    C'IKJ58101I I/O ERROR IN PASSWORD DATA SET'              94560020
LSMSG04  DC    AL2(L'SMSG04+HDR)                                        94640020
         DC    AL2(OFST)                                                94720020
SMSG04   DC    C'IKJ58112I DEFAULT ERROR CODE '                         94800020
LSMSG05  DC    AL2(L'SMSG05+HDR)                                        94880020
         DC    AL2(OFST)                                                94960020
SMSG05   DC    C'IKJ58112I PARSE ERROR CODE '                           95040020
LSMSG06  DC    AL2(L'SMSG06+HDR)                                        95080020
         DC    AL2(OFST)                                                95120020
SMSG06   DC    C'IKJ58104I DATA SET IN USE'                             95160020
LSMSG07  EQU   *                   UNUSED SECOND LEVEL MESSAGE          95200020
LSMSG08  EQU   *                   UNUSED SECOND LEVEL MESSAGE          95280020
LSMSG09  DC    AL2(L'SMSG09+HDR)                                  Y2075 95360000
         DC    AL2(OFST)                                          Y2075 95380000
SMSG09   DC    C'IKJ58104I DATA SPACE OWNED BY VSAM'              Y2075 95400000
LSMSG10  DC    AL2(L'SMSG10+HDR)                                        95440020
         DC    AL2(OFST)                                                95520020
SMSG10   DC    C'IKJ58112I SVC 98 RETURN CODE '                         95600020
LSMSG11  DC    AL2(L'SMSG11+HDR)                                        95680020
         DC    AL2(OFST)                                                95760020
SMSG11   DC    C'IKJ58104I DATA SET NOT IN CATALOG'                     95840020
LSMSG12  DC    AL2(L'SMSG12+HDR)                                        95920020
         DC    AL2(OFST)                                                96000020
SMSG12   DC    C'IKJ58104I DATA SET NOT ON VOLUME'                      96080020
LSMSG13  DC    AL2(L'SMSG13+HDR)                                        96160020
         DC    AL2(OFST)                                                96240020
SMSG13   DC    C'IKJ58104I REQUIRED VOLUME NOT MOUNTED'                 96320020
LSMSG14  DC    AL2(L'SMSG14+HDR)                                        96400020
         DC    AL2(OFST)                                                96480020
SMSG14   DC    C'IKJ58104I TAPE DATA SET CANNOT BE PROTECTED BY PROTECTX96560020
               '                                                        96640020
LSMSG15  DC    AL2(L'SMSG15+HDR)                                        96720020
         DC    AL2(OFST)                                                96800020
SMSG15   DC    C'IKJ58104I I/O ERROR WHILE UPDATING SECURITY FLAGS'     96880020
PATCH    DC    20X'00'             PATCH AREA                           96930003
         END                                                            96960020
./  ADD  SSI=73560407,NAME=IKJEHREN
         TITLE 'IKJEHREN-IBM TIME SHARING RENAME COMMAND'               00040037
IKJEHREN CSECT                                                          00080020
*C 727200,773200-773600,857200                                   A49872 00122021
*A 162300                                                        A48485 00130021
*C 332080                                                         M2009 00140021
*        VS2-3.0 SERVICE UPDATE                                         00150037
*0000095500,383760                                             @ZA11579 00150837
*0000049201,082410,085141,095500,383610-383640                 @ZA07213 00151637
*0000411901-411905,822810,822820-857204                        @ZA07213 00152437
*0000531549                                                    @ZA06145 00153237
*0000002400,010100,010200,095300-095520                        @ZA01485 00154037
*0000144420,337200,342900,343300-343500                        @ZA01485 00156037
*0000492000,496800,526800,614384,714820                        @ZA01485 00158037
*        VS2-3.7 SERVICE UPDATE                                         00160003
*C763200,A763300,C619200         REF ZA25723                   @ZA27595 00166003
*D082410,085141,095500,383610-383640,411901-411905,            @ZA28003 00172003
*D822810,822820-857204       ALSO SEE ZA14772                  @ZA28003 00178003
*********************************************************************** 00184003
*                                                                     * 00200020
* STATUS -- VS2 RELEASE 3 VERSION 0   SU                       @ZA01485 00240037
*                                                                     * 00280000
* FUNCTION -- THE RENAME COMMAND IS USED TO CHANGE THE NAME OF A DATA * 00320000
*    SET OR PARTITIONED DATA SET MEMBER OR TO CREATE AN ALIAS FOR AN  * 00360000
*    EXISTING MEMBER OF A PARTITIONED DATA SET.                       * 00400020
*                                                                     * 00440020
* ENTRY POINTS --                                                     * 00480020
*         IKJEHREN - MAIN ENTRY POINT OF PROGRAM, ATTACHED BY THE     * 00520020
*    TERMINAL MONITOR PROGRAM WHEN A RENAME COMMAND IS ENTERED AT THE * 00560020
*    TERMINAL                                                         * 00600020
*                                                                     * 00640020
* INPUT --  REGISTER 1 POINTS TO THE STANDARD COMMAND PROCESSOR       * 00680020
*    PARAMETER LIST (CPPL) AS FOLLOWS-                                * 00720020
*    WORD 1 CONTAINS A POINTER TO THE COMMAND BUFFER                  * 00760020
*    WORD 2 CONTAINS A POINTER TO THE USER PROFILE TABLE              * 00800020
*    WORD 3 CONTAINS A POINTER TO THE PROTECTED STEP CONTROL BLOCK    * 00840020
*    WORD 4 CONTAINS A POINTER TO AN ENVIRONMENT CONTROL TABLE        * 00880020
*                                                                     * 00920020
* OUTPUT -- NORMALLY NONE, EXCEPT APPROPRIATE ERROR MESSAGES TO       * 00960020
*    DESCRIBE ERROR CONDITIONS                                        * 01000020
*        R15 = X'00' NORMAL RETURN                             @ZA01485 01010037
*        R15 = X'0C' ERROR RETURN                              @ZA01485 01020037
*                                                                     * 01040020
* EXTERNAL REFERENCES --                                              * 01080020
*         IKJPARS - ENTRY POINT TO PARSE ROUTINE                      * 01120020
*         IKJDAIR - ENTRY POINT TO DYNAMIC ALLOCATION INTERFACE       * 01160020
*         ROUTINE                                                     * 01200000
*         IKJPUTL - ENTRY POINT TO PUTLINE ROUTINE                    * 01240020
*         IKJEHCIR - ENTRY POINT TO CATALOG INFORMATION ROUTINE       * 01280020
*         IKJDFLT - ENTRY POINT TO DEFAULT SERVICE ROUTINE            * 01300020
*         IKJEHSIR - ENTRY POINT FOR STAE INTERFACE ROUTINE           * 01320020
*                                                                     * 01360020
* EXITS, NORMAL -- RETURN TO THE TERMINAL MONITOR PROGRAM             * 01400020
*                                                                     * 01440020
* EXITS, ERROR -- RETURN TO THE TERMINAL MONITOR PROGRAM              * 01480020
*                                                                     * 01520020
* TABLES/WORK AREAS --                                                * 01560000
*    IHADCB - A DSECT TO MAP THE WORKAREA                             * 01640000
*                                                                     * 01720020
* ATTRIBUTES -- REENTRANT, READ-ONLY, REFRESHABLE                     * 01760020
*                                                                     * 01800020
* CHARACTER CODE DEPENDENCY -- CHARACTER CODE INDEPENDENT             * 01840000
*                                                                     * 01850000
* NOTES --                                                     @YL026YB 01860000
*    DESCRIBED IN TSO COMMAND PROCESSOR LOGIC, SY28-0652       @YL026YB 01870000
*                                                                     * 01880020
*********************************************************************** 01920020
         EJECT                                                          01960020
*              REGISTER EQUATES                                         02000020
R0       EQU   0                   GENERAL REGISTER 0                   02040020
R1       EQU   1                   GENERAL REGISTER 1                   02080020
R2       EQU   2                   GENERAL REGISTER 2                   02120020
R3       EQU   3                   GENERAL REGISTER 3                   02160020
R4       EQU   4                   GENERAL REGISTER 4                   02200020
R5       EQU   5                   GENERAL REGISTER 5                   02240020
R6       EQU   6                   GENERAL REGISTER 6                   02280020
R7       EQU   7                   GENERAL REGISTER 7                   02320020
R8       EQU   8                   GENERAL REGISTER 8                   02360020
R9       EQU   9                   GENERAL REGISTER 9                   02400020
R10      EQU   10                  GENERAL REGISTER 10                  02440020
R11      EQU   6                   GENERAL REGISTER 6                   02480020
R1X      EQU   11                  GENERAL REGISTER 11                  02520020
R12      EQU   12                  GENERAL REGISTER 12                  02560020
R13      EQU   13                  GENERAL REGISTER 13                  02600020
R14      EQU   14                  GENERAL REGISTER 14                  02640020
R15      EQU   15                  GENERAL REGISTER 15                  02680020
*                                                                       02720020
*              REGISTER USEAGE                                          02760000
*                                                                       02800020
*  REGISTER 0  USED AS WORK REGISTER                                    02840020
*                                                                       02880020
*  REGISTER 1  USED AS PARAMETER REGISTER AND AS WORK REGISTER          02920020
*                                                                       02960020
*  REGISTER 2  USED INITIALLY TO SAVE PARAMETER LIST POINTER, THEN AS   03000020
*              WORK REGISTER                                            03040020
*                                                                       03080020
*  REGISTER 3  USED IN 'EXECUTE MVC' AS POINTER TO 'TO AREA' AND AS     03120020
*              WORK REGISTER                                            03160020
*                                                                       03200020
*  REGISTER 4  USED IN 'EXECUTE MVC' AS POINTER TO 'FROM AREA' AND AS   03240020
*              WORK REGISTER                                            03280020
*                                                                       03320020
*  REGISTER 5  USED AS WORK REGISTER                                    03360020
*                                                                       03400020
*  REGISTER 6  USED AS WORK REGISTER                                    03440020
*                                                                       03480020
*  REGISTER 7  USED TO ADDRESS CONSTANTS FOR IKJEHRN2                   03520020
*                                                                       03560020
*  REGISTER 8  USED AS INDEX REGISTER FOR CIR WORKAREA (SET TO ZERO     03600020
*              WHEN NOT PROCESSING '*')                                 03640020
*                                                                       03680020
*  REGISTER 9  IS BASE REGISTER FOR PARSE DSECT                         03720020
*                                                                       03760020
*  REGISTER 10 USED AS WORK REGISTER                                    03800020
*                                                                       03840020
*  REGISTER 11 IS BASE REGISTER FOR GETMAIN COMMON AREA (DSECT)         03880020
*                                                                       03920020
*  REGISTER 12 IS BASE REGISTER FOR THIS PROGRAM                        03960020
*                                                                       04000020
*  REGISTER 13 IS THE SAVE AREA REGISTER                                04040020
*                                                                       04080020
*  REGISTER 14 IS THE LINK REGISTER                                     04120020
*                                                                       04160020
*  REGISTER 15 IS THE BRANCH REGISTER AND THE RETURN CODE REGISTER      04200020
*                                                                       04240020
         SPACE 2                                                        04280020
*  ABSOLUTE EQUATES (OFFSETS AND SHORT LENGTHS)                         04320020
ONE      EQU   1                   ONE                                  04360020
TWO      EQU   2                   TWO                                  04400020
F0       EQU   0                   ZERO                                 04440020
F1       EQU   1                   ONE                                  04480020
F2       EQU   2                   TWO                                  04520020
F4       EQU   4                   FOUR                                 04560020
F5       EQU   5                   FIVE                                 04600020
F6       EQU   6                   LENGTH OF A VOLUME SERIAL NUMBER     04640020
F7       EQU   7                   SEVEN                                04680020
F8       EQU   8                   EIGHT                                04720020
F12      EQU   12                  TWELVE                               04760020
F24      EQU   24                  TWENTY-FOUR                          04800020
F32      EQU   32                  THIRTY-TWO                           04840020
F16      EQU   16                  SIXTEEN                              04880020
F20      EQU   20                  TWENTY                               04920020
F43      EQU   43                  FORTY-THREE                 @YL026YB 04940000
F45      EQU   45                  FORTY-FIVE                           04960020
F36      EQU   36                  THIRTY-SIX                           05000020
F76      EQU   76                  SEVENTY-SIX                          05040020
F63      EQU   63                  SIXTY-THREE                          05080020
F46      EQU   46                  FORTY-SIX                            05160020
F9       EQU   9                   NINE                                 05200020
F11      EQU   11                  ELEVEN                               05240020
L72      EQU   72                  LENGTH OF SAVEAREA                   05280020
F3       EQU   3                   THREE                                05320020
F44      EQU   44                  FORTY-FOUR                           05400020
F51      EQU   51                  FIFTY-ONE                            05440020
F52      EQU   52                  FIFTY-TWO                            05480020
*  RETURN CODE EQUATES                                                  05520020
RC4      EQU   4                   RETURN CODE = 4                      05560020
RC8      EQU   8                   RETURN CODE = 8                      05600020
RC12     EQU   12                  RETURN CODE = 12                     05640020
RC16     EQU   16                  RETURN CODE = 16                     05680020
RC20     EQU   20                  RETURN CODE = 20                     05720020
RC24     EQU   24                  RETURN CODE = 24                     05760020
RC28     EQU   28                  RETURN CODE = 28                     05800020
RC32     EQU   32                  RETURN CODE = 32                     05840020
RC36     EQU   36                  RETURN CODE = 36                     05880020
*  EQUATES FOR MESSAGE NUMBERS (FIRST LEVEL MESSAGES)                   05920020
M01      EQU   1                   MESSAGE NUMBER 01                    05960020
M02      EQU   2                   MESSAGE NUMBER 02                    06000020
M03      EQU   3                   MESSAGE NUMBER 03                    06040020
M04      EQU   4                   MESSAGE NUMBER 04                    06080020
M05      EQU   5                   MESSAGE NUMBER 05                    06120020
M06      EQU   6                   MESSAGE NUMBER 06                    06160020
M07      EQU   7                   MESSAGE NUMBER 07                    06200020
M08      EQU   8                   MESSAGE NUMBER 08                    06240020
M09      EQU   9                   MESSAGE NUMBER 09                    06280020
M10      EQU   10                  MESSAGE NUMBER 10                    06320020
M11      EQU   11                  MESSAGE NUMBER 11                    06360020
M12      EQU   12                  MESSAGE NUMBER 12                    06400020
M13      EQU   13                  MESSAGE NUMBER 13                    06440020
M14      EQU   14                  MESSAGE NUMBER 14                    06480020
M15      EQU   15                  MESSAGE NUMBER 15                    06520020
M16      EQU   16                  MESSAGE NUMBER 16                    06560020
M17      EQU   17                  MESSAGE NUMBER 17                    06600020
M18      EQU   18                  MESSAGE NUMBER 18                    06640020
M19      EQU   19                  MESSAGE NUMBER 19                    06680020
M20      EQU   20                  MESSAGE NUMBER 20                    06720020
M21      EQU   21                  MESSAGE NUMBER 21                    06760020
M22      EQU   22                  MESSAGE NUMBER 22                    06800020
M23      EQU   23                  MESSAGE NUMBER 23                    06840020
M24      EQU   24                  MESSAGE NUMBER 24                    06880020
M25      EQU   25                  MESSAGE NUMBER 25                    06920020
M26      EQU   26                  MESSAGE NUMBER 26                    06960020
M27      EQU   27                  MESSAGE NUMBER 27                    07000020
M28      EQU   28                  MESSAGE NUMBER 28                    07020020
M29      EQU   29                  MESSAGE NUMBER 29                    07030020
*  EQUATES FOR MESSAGE NUMBERS (SECOND LEVEL MESSAGES)                  07040020
S01      EQU   1                   SECOND LEVEL MESSAGE NUMBER 01       07080020
S02      EQU   2                   SECOND LEVEL MESSAGE NUMBER 02       07120020
S03      EQU   3                   SECOND LEVEL MESSAGE NUMBER 03       07160020
S04      EQU   4                   SECOND LEVEL MESSAGE NUMBER 04       07200020
S05      EQU   5                   SECOND LEVEL MESSAGE NUMBER 05       07240020
S06      EQU   6                   SECOND LEVEL MESSAGE NUMBER 06       07280020
S07      EQU   7                   SECOND LEVEL MESSAGE NUMBER 07       07320020
S08      EQU   8                   SECOND LEVEL MESSAGE NUMBER 08       07360020
S09      EQU   9                   SECOND LEVEL MESSAGE NUMBER 09       07400020
S10      EQU   10                  SECOND LEVEL MESSAGE NUMBER 10       07440020
S11      EQU   11                  SECOND LEVEL MESSAGE NUMBER 11       07480020
S12      EQU   12                  SECOND LEVEL MESSAGE NUMBER 12       07520020
S13      EQU   13                  SECOND LEVEL MESSAGE NUMBER 13       07560020
S14      EQU   14                  SECOND LEVEL MESSAGE NUMBER 14       07600020
S15      EQU   15                  SECOND LEVEL MESSAGE NUMBER 15       07640020
S16      EQU   16                  SECOND LEVEL MESSAGE NUMBER 16       07680020
S17      EQU   17                  SECOND LEVEL MESSAGE NUMBER 17       07720020
S18      EQU   18                  SECOND LEVEL MESSAGE NUMBER 18       07760020
S19      EQU   19                  SECOND LEVEL MESSAGE NUMBER 19       07800020
S20      EQU   20                  SECOND LEVEL MESSAGE NUMBER 20       07840020
S21      EQU   21                  SECOND LEVEL MESSAGE NUMBER 21       07880020
S22      EQU   22                  SECOND LEVEL MESSAGE NUMBER 22       07920020
S23      EQU   23                  SECOND LEVEL MESSAGE NUMBER 23       07960020
S24      EQU   24                  SECOND LEVEL MESSAGE NUMBER 24       08000020
S25      EQU   25                  SECOND LEVEL MESSAGE NUMBER 25       08040020
S26      EQU   26                  SECOND LEVEL MESSAGE NUMBER 26       08080020
S27      EQU   27                  SECOND LEVEL MESSAGE NUMBER 27       08120020
S28      EQU   28                  SECOND LEVEL MESSAGE NUMBER 28       08160020
S29      EQU   29                  SECOND LEVEL MESSAGE NUMBER 29       08200020
S30      EQU   30                  SECOND LEVEL MESSAGE NUMBER 30       08240020
*              OTHER EQUATES                                            08280020
STAR     EQU   C'*'                ASTERISK                             08320020
PERIOD   EQU   C'.'                PERIOD                               08360020
BLANK    EQU   C' '                BLANK                                08400020
QUOTE    EQU   C''''               CHARACTER QUOTE                      08420020
ZONE     EQU   C'0'                CHARACTER CONSTANT FOR ZONE FIELD    08440020
ZERO     EQU   X'00'               ZERO                                 08480020
FOXZERO  EQU   C'0'                CHARACTER ZERO                       08500020
CHARG    EQU   C'G'                CHARACTER G                          08510020
CHARV    EQU   C'V'                CHARACTER V                          08512020
COMPZONE EQU   X'F0'               MASK TO TEST FOR GENERATION NAME     08514020
QUOTEMSK EQU   X'40'               MASK TO CHECK IF DSNAME IN QUOTES    08520020
INDEXTST EQU   X'C1'               INDEX NAME (CIR)            @YL026YB 08560000
GDGNTST  EQU   X'02'               GENERATION DATA GROUP NAME (CIR)     08600020
NAMETST  EQU   X'07'               DATA SET NAME (CIR)                  08640020
TTRSIGN  EQU   X'80'               TTR INDICATOR (CIR)                  08680020
ENDTEST  EQU   X'FF'               LIST END (CIR)                       08720020
NAMESOPT EQU   X'01'               OPTION BYTE FOR DATA SET NAMES (CIR) 08760020
INDEXOPT EQU   X'02'               OPTION BYTE FOR INDEX NAMES (CIR)    08800020
PDSTEST  EQU   X'02'               MASK TO CHECK DATA SET ORGANIZATION  08840020
DAIROPTA EQU   X'08'               OPTION BYTE FOR DATA SET ALLOCATION  08880020
DAIROPTU EQU   X'18'               OPTION BYTE FRO DATASET UNALLOCATION 08920020
NAMECHCK EQU   X'03'               MASK TO CHECK IF NAME ON VOLUME      09000020
BADPASWD EQU   2                   MASK TO CHECK IF PASSWORD BAD        09010020
EQ       EQU   8                   MASK TO TEST CONDITION CODE EQUAL    09020020
SWON     EQU   X'FF'               MASK FOR SWITCH ON                   09040020
SWOFF    EQU   X'00'               MASK FOR SWITCH OFF                  09080020
MASK1    EQU   X'40'               MASK TO CHECK FOR INTERRUPT          09120020
ALIAS    EQU   X'80'               MASK TO INDICATE MEMBER IS ALIAS     09160020
SPNUM    EQU   1                   SUBPOOL NUMBER FOR GETMAIN           09200020
VOLLENTH EQU   12                  LENGTH OF VOLUME ENTRY FROM LOCATE   09240020
GDGLENTH EQU   16                  LENGTH OF GDG ENTRY IN CIR LIST      09280020
VOLCOUNT EQU   1                   MAXIMUM NUMBER OF VOLUMES            09320020
PERMALC  EQU   X'10'               INDICATE UNALLOC PERMANENTLY ALLOC   09330020
         EJECT                                                          09360020
         SPACE                                                          09400020
         SAVE  (14,12)             SAVE REGISTERS OF CALLING PROGRAM    09440037
         LR    R12,R15             ENTRY POINT ADDRESS TO BASE REGISTER 09480020
         USING IKJEHREN,R12        ESTABLISH ADDRESSABILITY FOR PROGRAM 09520020
         B     BRID                BRANCH AROUND ID            @ZA01485 09530037
         DC    C'IKJEHREN'         MODULE ID                   @ZA01485 09540037
         DC    X'7349'             DATE 12/15/77               @ZA27595 09550003
BRID     EQU   *                                               @ZA01485 09552037
         LR    R2,R1               SAVE CONTENTS OF REGISTER 1 IN       09560020
*                                  REGISTER 2 - GETMAIN USES REGISTER 1 09600020
         GETMAIN R,LV=CORE,SP=SPNUM GET CORE FOR SAVEAREA AND WORKAREA  09640020
*  THIS IS AN UNCONDITIONAL REQUEST FOR CORE.  IF SUFFICIENT CORE IS    09680020
*  NOT AVAILABLE THE RESULT IS ABNORMAL TERMINATION OF THIS PROGRAM.    09720020
*  THE FIRST 96 BYTES IS DCB, NEXT 18 WORDS IS REGISTER SAVE AREA.      09760020
         LR    R1X,R1              ADDRESS OF GETMAIN AREA              09800020
         USING IHADCB,R1X          ESTABLISH ADDRESSABILITY WORKAREA    09840020
         LA    R1,SAVEAREA         ADDRESS OF REGISTER SAVE AREA        09880020
         XC    F0(L72,R1),F0(R1)   INITIALIZE REGISTER SAVE AREA        09920020
         ST    R13,F4(R1)          SAVE ADDRESS OF CALLER'S REGISTERS   09960020
         ST    R1,F8(R13)          CHAIN SAVE AREAS                     10000020
         LR    R13,R1              REGISTER 13 POINTS TO SAVEAREA       10040020
*  REGISTER 2 POINTS TO COMMAND PROCESSOR PARAMETER LIST (CPPL)         10080020
         ST    R2,TMPSR1           SAVE TMP'S REGISTER 1                10100020
*  WHEN THE TMP ATTACHES RENAME REGISTER 1 POINTS TO A PARAMETER LIST   10120020
*  THE FORMAT OF THE TMP PARAMETER LIST IS-                             10160020
*     1ST WORD POINTER TO THE COMMAND BUFFER                            10200020
*     2ND WORD POINTER TO THE USER PROFILE TABLE                        10240020
*     3RD WORD POINTER TO THE PROTECTED STEP CONTROL BLOCK              10280020
*     4TH WORD POINTER TO THE ENVIRONMENT CONTROL TABLE                 10320020
         MVC   PUT(PUTLEND-PUTL),PUTL INITIALIZE PUTLINE PARM BLOCK     10360020
         MVI   ENDERROR,SWOFF      TURN OFF END ERROR SWITCH            10400020
         MVI   STACKSW,SWOFF       TURN STACK SWITCH OFF                10450020
         MVI   DEFLTSW,SWOFF       TURN OFF DEFAULT SWITCH              10480020
         MVI   RENERRSW,SWOFF      INITIALIZE SWITCH OFF                10520020
         MVI   ERRORSW,SWOFF       TURN ERROR SWITCH OFF                10540020
         MVI   MEM2SW,SWOFF        TURN OFF MEM2 SWITCH                 10550020
         LA    R3,LEVELSCN         POINT TO SCAN BUFFER                 10560020
         MVI   F8(R3),BLANK        BLANK LAST BYTE OF SCAN FIELD        10600020
         LA    R4,LISTSCN          POINT TO LIST BUFFER        @YL026YB 10610000
         MVI   F44(R4),BLANK       PUT BLANK IN LAST BYTE      @YL026YB 10620000
         MVI   ISWITCH,INDEXTST    INITIALIZE SWITCH TO OFF (ZERO)      10640020
         MVI   UNALOCSW,SWOFF      INITIALIZE SWITCH TO OFF (ZERO)      10680020
         SR    R8,R8               INDEX REGISTER TO CIR WORKAREA, SET  10720020
*                                  TO ZERO INDICATES NOT PROCESSING *   10760020
         USING CPPL,R2             ADDRESSABILITY CPPL                  10800020
         LA    R9,PARSPARM         POINT TO SPACE FOR PARSE PARMETERS   10840020
         USING PPL,R9              ADDRESSABILITY PARSE PARMLIST        10880020
         LA    R4,DFLTPARM         POINT TO SPACE FOR DEFAULT PARMLIST  10920020
         USING DFPL,R4             ADDRESSABILITY DEFAULT PARMLIST      10960020
         LA    R5,DFLTPBLK         POINT TO SPACE DEFAULT PARMBLOCK     11000020
         USING DFPB,R5             ADDRESSABILITY DEFAULT PARM BLOCK    11040020
         LA    R6,IOPARM           POINT TO SPACE FOR I/O PARM LIST     11080020
         USING IOPL,R6             ADDRESSABILITY I/O PARM LIST         11120020
         LA    R10,DAIRPARM        POINT TO SPACE FOR DAIR PARM LIST    11160020
         USING DAPL,R10            ADDRESSABILITY DAIR PARM LIST        11200020
*  INITIALIZE PARAMETERS FOR PARSE, DAIR, DEFAULT, AND PUTLINE          11240020
         L     R3,CPPLCBUF         COMMAND BUFFER POINTER               11280020
         ST    R3,PPLCBUF          - TO PARSE PARAMETER LIST            11320020
         L     R3,CPPLUPT          UPT POINTER                          11360020
         ST    R3,IOPLUPT          - TO I/O PARAMETER LIST              11400020
         ST    R3,PPLUPT           - TO PARSE PARAMETER LIST            11440020
         ST    R3,DAPLUPT          - TO DAIR PARAMETER LIST             11480020
         ST    R3,DFPLUPT          - TO DEFAULT PARAMETER LIST          11520020
         ST    R3,UPTSAVE          - SAVE UPT  ADDRESS                  11560000
         L     R3,CPPLPSCB         PSCB POINTER                         11600000
         ST    R3,DAPLPSCB         - TO DAIR PARAMETER LIST             11640020
         ST    R3,DFPBPSCB         - TO DEFAULT PARAMETER BLOCK         11680020
         L     R3,CPPLECT          ECT POINTER                          11720020
         ST    R3,IOPLECT          - TO I/O PARAMETER LIST              11760020
         ST    R3,PPLECT           - TO PARSE PARAMETER LIST            11800020
         ST    R3,DAPLECT          - TO DAIR PARAMETER LIST             11840020
         ST    R3,DFPLECT          - TO DEFAULT PARAMETER LIST          11880020
         DROP  R2                  CPPL IS NO LONGER NEEDED             11920020
         LA    R2,RENCPECB         POINT TO CP'S ECB                    11960020
         ST    R2,IOPLECB          - TO I/O PARAMETER LIST              12000020
         ST    R2,PPLECB           - TO PARSE PARAMETER LIST            12040020
         ST    R2,DAPLECB          - TO DAIR PARAMETER LIST             12080020
         ST    R2,DFPLECB          - TO DEFAULT PARAMETER LIST          12120020
         ST    R5,DFPLDFPB         PARM BLOCK POINTER TO PARM LIST      12160020
         ST    R8,CIRADDR          ZERO ADDRESS OF CIR (NOT LOADED)     12200020
         ST    R8,RENCPECB         ZERO CP'S ECB                        12240020
         ST    R8,PPLUWA           ZERO UNUSED PARAMETER                12280020
         ST    R8,DFPBQUAL         ZERO POINTER TO DEFAULT QUALIFIER    12320020
         ST    R8,CIRPARM          CLEAR FIRST WORD OF PARAMETER LIST   12330020
         ST    R8,VOLIDPTR         INITIALIZE TO ZERO (DEFAULT SYSRES)  12340020
         L     R3,VCONPARS         ADDRESS OF PARSE MACROS              12360020
         ST    R3,PPLPCL           SET PARSE CONTROL LIST POINTER       12400020
         LA    R3,ANSPLACE         ADDRESS OF PARSE ANSWER PLACE        12440020
         ST    R3,PPLANS           SET PARSE ANSWER PLACE POINTER       12480020
         DROP  R4                  DFPL NO LONGER NEEDED                12520020
         DROP  R6                  IOPL NO LONGER NEEDED                12560020
         DROP  R9                  PPL NO LONGER NEEDED                 12600020
         DROP  R10                 DAPL NO LONGER NEEDED                12640020
* NOW MOVE MACROS TO GETMAIN AREA                                       12680020
         MVC   RENAMLST(CLSTEND-RENLST),RENLST MOVE CAMLST MACROS       12720020
         MVC   IHADCB(DCBEND-DCB),DCB  MOVE DCB                         12760020
         MVC   OPEN(OPENEND-OPN),OPN MOVE OPEN MACRO                    12800020
         MVC   CLOSE(CLOSEEND-CLSE),CLSE MOVE CLOSE MACRO               12840020
         LR    R2,R1X              ADDRESS OF DCB                       12880020
         O     R2,OPEN             OR IN OPEN OPTION CODE, THEN         12920020
         ST    R2,OPEN             PUT CODE AND ADDRESS IN OPEN MACRO   12960020
         LR    R2,R1X              ADDRESS OF DCB                       13000020
         O     R2,CLOSE            OR IN CLOSE OPTION CODE, THEN        13040020
         ST    R2,CLOSE            PUT CODE AND ADDRESS IN CLOSE MACRO  13080020
*  INITIALIZE DAIR PARAMETER LIST TO ALLOCATE DATA SET                  13120020
         LA    R4,DAIR08           POINT TO DAIR ENTRY 08               13160020
         USING DAPB08,R4           ADDRESSABILITY FOR DAIR ENTRY 08     13200020
         LA    R6,DAIR18           POINT TO DAIR ENTRY 18               13240020
         USING DAPB18,R6           ADDRESSABILITY DAIR ENTRY 18         13280020
         XC    DAIR08(DLSTEND-DAIR08),DAIR08 ZERO DAIR LISTS            13320020
         MVI   DA08CD+F1,DAIROPTA  SET OPTION FOR ALLOCATION            13360020
         MVI   DA08UNIT,BLANK      BLANK SIX                            13400020
         MVC   DA08UNIT+F1(F7),DA08UNIT BLANK UNIT NAME                 13440020
         MVC   DA08SER(F8),DA08UNIT BLANK VOLUME SERIAL NUMBER          13480020
         MVC   DA08MNM(F8),DA08SER BLANK MEMBER NAME                    13520020
         LA    R2,DSLO             ADDRESS OF DSL-DSN BUFFER            13560020
         ST    R2,DA08PDSN         POINT TO DSL-DSN BUFFER              13600020
*  INITIALIZE DAIR PARAMETER LIST TO UNALLOCATE DATA SET                13640020
         MVI   DA18CD+F1,DAIROPTU  SET TO UNALLOCATE DATA SET           13680020
         MVC   DA18MNM(F8),DA08SER BLANK MEMBER NAME                    13720020
         MVC   DA18JBNM(F8),DA08SER BLANK JOBNAME                       13760020
         MVC   DA18SCLS(F2),DA08SER  BLANK SYSOUT CLASS        @VS06880 13780000
*  INITIALIZE DEFAULT SERVICE ROUTINE PARAMETER LIST                    13800020
         ST    R2,DFPBDSN          POINT TO DSL-DSN BUFFER              13840020
         MVI   DFPBCODE,DFPB04     SET OPTION FOR DEFAULT ROUTINE       13880020
         MVI   DFPBCNTL,DFPBUID+DFPBRET SET CONTROL BYTE                13920020
         LA    R2,QUALBUFF         QUALIFIER BUFFER                     13930020
         ST    R2,DFPBQUAL         ADDRESS TO PARM LIST                 13940020
         DROP  R4                  DAPB08 NO LONGER NEEDED              13960020
         DROP  R5                  DFPB NO LONGER NEEDED                14000020
         DROP  R6                  DAPB18 NO LONGER NEEDED              14040020
*  LOAD DAIR ROUTINE                                                    14360020
         LOAD  EP=IKJDAIR          LOAD DAIR                            14400020
         ST    R0,DAIRADDR         SAVE ADDRESS OF DAIR                 14440020
         MVI   RCX,ZERO            ZERO RC SAVE AREA           @ZA01485 14442037
*  NOW LOAD CATALOG INFORMATION ROUTINE                                 14450020
         LOAD  EP=IKJEHCIR         LOAD CIR                             14460020
         ST    R0,CIRADDR          SAVE ADDRESS OF CIR                  14470020
         MVI   NAMEPTR,ZERO        ZERO HIGH ORDER BYTE                 14472020
         MVI   CIRFLAG,SWOFF       SET SWITCH OFF                       14474020
         MVI   STARSW,SWOFF        TURN STAR SWITCH OFF                 14476020
         LA    R2,STARLIST         BEGINNING OF STARLIST                14478020
         ST    R2,STARPTR          POINT TO NEXT EMPTY SLOT             14478420
*  NOW BLANK ALL DATA SET BUFFERS                                       14480020
         MVI   DSNBUFFO,BLANK      BLANK                                14520020
         MVC   DSNBUFFO+F1(F51),DSNBUFFO OLD DSNAME BUFFER              14560020
         MVC   QUALBUFF(F8),DSNBUFFO BLANK QUALIFIER RETURN BUFFER      14570020
         MVC   DSNBUFFN(F52),DSNBUFFO NEW DSNAME BUFFER                 14600020
         MVC   DSNO(F44),DSNBUFFO  OLD DATA SET NAME BUFFER             14640020
         MVC   DSNN(F44),DSNBUFFO  NEW DATA SET NAME BUFFER             14680020
         MVI   NAMETTR,BLANK       BLANK CIR BUFFER            @YL026YB 14680300
         MVC   NAMETTR+F1(F43),NAMETTR BLANKS IN CIR BUFFER    @YL026YB 14680600
         XC    STAELIST(STAELNTH),STAELIST CLEAR AREA FOR STAE BLOCKS   14681020
         LOAD  EP=IKJEHSIR         LOAD STAE INTERFACE ROUTINE          14682020
         ST    R0,STAEADDR         SAVE ADDRESS OF STAE ROUTINE         14683020
BLDSTAE  PSEUDO TMP=TMPSR1,MF=E                                         14684020
         L     R4,VCON713          ADDRESS OF RETRY ROUTINE             14685020
         STABUILD CODE=713,RTN=(R4),ADDR=STAEONE,FLAG=(ONE,NMSG),      X14686020
               NUM=4,MF=E                                               14687020
         L     R4,VCON913          ADDRESS OF RETRY ROUTINE             14688020
         STABUILD CODE=913,RTN=(R4),ADDR=STAETWO,FLAG=(ONE,NMSG),      X14689020
               MF=E                                                     14690020
         L     R4,VCON13           ADDRESS OF RETRY ROUTINE             14691020
         STABUILD CODE=(113,213,313,A13),RTN=(R4),ADDR=STAETHRE,       X14692020
               FLAG=(MUL,NMSG),LIST=STAELST,                           X14693020
               MF=E                                                     14694020
         L     R4,VCONLTST         ADDRESS OF RETRY ROUTINE             14695020
         STABUILD CODE=000,RTN=(R4),ADDR=STAEFOUR,FLAG=(ALL,END),      X14696020
               MF=E                                                     14697020
         STAEPARM FLAG=(CP),PSEUDO=$PSEUDO,LIST=STAEONE,ADDR=STAEPARM, X14698020
               MF=E                                                     14699020
         L     R2,STAEADDR         ADDRESS OF STAE INTERFACE ROUTINE    14700020
         STAE  (R2),CT,PARAM=STAEPARM,MF=(E,STAELIST) ISSUE STAE        14701020
         LR    R1,R9               POINT TO PARSE PARAMETER LIST        14711020
*  WHEN THE PARSE SERVICE ROUTINE IS ENTERED REGISTER 1 POINTS TO THE   14713020
*  FOLLOWING PARAMETER LIST-                                            14715020
*     1ST WORD POINTER TO THE USER PROFILE TABLE                        14717020
*     2ND WORD POINTER TO THE ENVIRONMENT CONTROL TABLE                 14719020
*     3RD WORD POINTER TO THE COMMAND PROCESSOR'S EVENT CONTROL BLOCK   14719420
*     4TH WORD POINTER TO PARSE CONTROL LIST                            14719820
*     5TH WORD POINTER TO THE PARSE ANSWER PLACE                        14719920
*     6TH WORD POINTER TO THE COMMAND BUFFER                            14720020
*     7TH WORD POINTER TO THE USER WORK AREA (VALIDITY EXIT ROUTINE)    14722020
*  PARSE THE RENAME COMMAND                                             14724020
         LINK  EP=IKJPARS          PARSE RENAME COMMAND                 14726020
         L     R9,ANSPLACE         PARSE PUT RENPARM ADDRESS HERE       14726420
         ST    R9,$RETRY0+R9*F4    SAVE REG FOR STAE RECOVERY           14726820
         L     R12,VCONRN2         LOAD ADDRESS OF SECOND CSECT         14728020
         ST    R12,$RETRY0+R12*F4  SAVE BASE REG FOR STAE RECOVERY      14730020
         BR    R12                 GO TO SECOND CSECT                   14760020
         EJECT                                                          14800020
*                                                                       14840020
*              WORKAREA - REQUIRED CONSTANTS (IKJEHREN)                 14880020
*                                                                       14920020
VCONPARS DC    V(IKJEHPDL)         PARSE PARAMETERS RENAME COMMAND      14960020
VCONRN2  DC    V(IKJEHRN2)         ENTRY POINT SECOND CSECT             15000020
VCON713  DC    V(IKJEH713)         713 ABEND ROUTINE                    15008020
VCON913  DC    V(IKJEH913)         913 ABEND ROUTINE                    15016020
VCON13   DC    V(IKJEH13)          13 TYPE ABENDS ROUTINE               15024020
VCONLTST DC    V(IKJEHTST)         RETRY ROUTINE                        15032020
DCB      DCB   DSORG=PO,MACRF=W                                         15040020
DCBEND   EQU   *                   END OF DCB                           15080020
OPN      OPEN  (0,OUTPUT),MF=L     LIST FORM OF OPEN                    15120020
OPENEND  EQU   *                   END OF OPEN                          15160020
CLSE     CLOSE 0,MF=L              LIST FORM OF CLOSE                   15200020
CLOSEEND EQU   *                   END OF CLOSE                         15240020
PUTL     PUTLINE  MF=L             LIST FORM OF PUTLINE                 15280020
PUTLEND  EQU   *                   END OF PUTLINE EXPANSION             15320020
*  KEEP CAMLST MACROS TOGETHER, MOVED AS ONE BLOCK                      15360020
*              RENAME MACRO CAMLST                                      15400020
RENLST   CAMLST RENAME,0,0,0       RENAME MACRO                         15440020
*        UNCATALOG MACRO CAMLST                                         15480020
UNCLST   CAMLST UCATDX,0           UNCATALOG MACRO                      15520020
*              LOCATE MACRO CAMLST (BY DATA SET NAME)                   15560020
LNAME    CAMLST NAME,0,,0          LOCATE MACRO                         15600020
*              CATALOG MACRO CAMLST                                     15640020
CLST     CAMLST CATBX,0,,0         CATALOG MACRO                        15740020
CLSTEND  EQU   *                   END OF CAMLSTS                       15880020
*              END OF CAMLST MACROS                                     15920020
         EJECT                                                          15960020
IKJEHRN2 CSECT                                                          16000020
         ENTRY IKJEH713,IKJEH913,IKJEH13,IKJEHTST                       16020020
*  CONTROL IS PASSED HERE FROM IKJEHREN WHEN INITIALIZATION IS COMPLETE 16040020
*  REGISTER 12 CONTAINS ENTRY POINT ADDRESS                             16080020
*  REGISTER 11 CONTAINS WORKAREA ADDRESS                                16120020
*  REGISTER 15 CONTAINS THE PARSE RETURN CODE                           16160020
*  REGISTER 9 CONTAINS PARSE DSECT ADDRESS                              16170020
         USING IKJEHRN2,R12        ESTABLISH ADDRESSABILITY FOR PROGRAM 16200020
         LA    R7,RN2CNSTS         POINT TO CONSTANTS                   16210020
         USING RN2CNSTS,R7         ADDRESSABILITY FOR CONSTANTS         16220020
         ST    R7,$RETRY0+R7*F4    SAVE REG FOR STAE RECOVERY    A48485 16230021
         USING IHADCB,R1X          ESTABLISH ADDRESSABILITY WORKAREA    16240020
         LTR   R15,R15             TEST PARSE RETURN CODE               16760020
         BNZ   PARSEERR            NON-ZERO RETURN CODE, PARSE ERROR    16800020
* ESTABLISH ADDRESSABILITY FOR PARSE DSECT                              16840020
         USING IKJPARMD,R9         ESTABLISH ADDRESSABILITY PARSE PDL   16920020
*  THE FORMAT OF THE LIST RETURNED FROM PARSE IS AS FOLLOWS-            16960020
*  TWO SIX WORD LISTS LABELED DSNAME1 AND DSNAME2 AS FOLLOWS            17000020
*     1ST WORD POINTER TO DATA SET NAME                                 17040020
*     2ND WORD BYTE 0-1 LENGTH OF DATA SET NAME (EXCLUDING QUOTES)      17080020
*              BYTE 2   FLAGS (BIT 1 IS 1 IF DATA SET NAME QUOTED)      17120020
*              BYTE 3   RESERVED                                        17160020
*     3RD WORD POINTER TO MEMBER NAME (ZERO IF MISSING)                 17200020
*     4TH WORD BYTE 0-1 LENGTH OF MEMBER NAME (EXCLUDING PARENTHESES)   17240020
*              BYTE 2   FLAGS                                           17280020
*              BYTE 3   RESERVED                                        17320020
*     5TH WORD POINTER TO PASSWORD (ZERO IF MISSING)                    17360020
*     6TH WORD BYTE 0-1 LENGTH OF PASSWORD                              17400020
*              BYTE 2   FLAGS                                           17440020
*              BYTE 3   RESERVED                                        17480020
*                                                                       17520020
*     AN ADDITIONAL TWO BYTES LABELED RENTYPE                           17560020
*        A 0 INDICATES NO KEYWORD SPECIFIED                             17600020
*        A 1 INDICATES 'ALIAS' KEYWORD SPECIFIED                        17640020
*  NOW PROCESS FIRST DATA SET NAME                                      17680020
         SR    R2,R2               ZERO REGISTER                        17720020
*  SET REGISTER 5 AS INDEX FOR PARSE DESCRIPTOR ENTRY FIRST DSNAME      17760020
         LA    R5,DSNAME1          POINT TO PDE FOR FIRST DSNAME        17800020
         C     R2,F0(R5)           IS DSNAME POINTER ZERO               17840020
         BE    NODSN1              ERROR, NO DSNAME1 SPECIFIED          17880020
*  MOVE FIRST DATA SET NAME TO FIRST DSLENGTH AND DSNAME BUFFER         17920020
         L     R4,F0(R5)           ADDRESS OF DATA SET NAME FROM PARSE  17960020
         LH    R2,F4(R5)           LENGTH OF DATA SET NAME FROM PARSE   18000020
         LTR   R2,R2               TEST DATA SET LENGTH                 18040020
         BZ    NODSN1              LENGTH ZERO IS ERROR                 18080020
         STH   R2,DSLO             SAVE DATA SET LENGTH                 18120020
         BCTR  R2,R0               DECREMENT FOR EXECUTE INSTRUCTION    18160020
         LA    R3,DSNO             ADDRESS OF BUFFER FIRST DSNAME       18200020
         EX    R2,MOVEINST         MOVE FIRST DATA SET NAME TO BUFFER   18240020
*  MOVE FIRST DATA SET NAME TO MESSAGE BUFFER                           18280020
         LA    R3,DSNMSG1          POINT TO DSNAME1 MESSAGE BUFFER      18320020
         TM    F6(R5),QUOTEMSK     IS FIRST DSNAME FULLY QUALIFIED      18330020
         BZ    SAVUNQL1            NO, SAVE UNQUALIFIED DSNAME          18340020
         BAL   R14,QUOTEDSN        SAVE QUOTED DATA SET NAME            18350020
SAVELN1  STH   R2,DSNMSGL1         SAVE LENGTH FOR MESSAGE INSERTIONS   18440020
*  MOVE MEMBER NAME TO MESSAGE BUFFER                                   18480020
         LH    R2,F12(R5)          LENGTH OF MEMBER NAME                18560020
         LTR   R2,R2               WAS MEMBER NAME SPECIFIED            18600020
         BZ    QTEST1              NO MEMBER SPECIFIED                  18640020
         LA    R3,MEMMSG1          MEMBER MESSAGE BUFFER                18680020
         BAL   R14,MEMBUFF         SAVE MEMBER NAME                     18690020
         STH   R2,MEMMSGL1         SAVE LENGTH OF INSERTION             18840020
QTEST1   TM    F6(R5),QUOTEMSK     DSNAME FULLY QUALIFIED               18890020
         BZ    ADUSRID1            NO, GO ADD USERID                    18940020
NOMEM1   MVC   DSBLO(F46),DSLO     FIRST DSLENGTH-DSNAME TO * BUFFER    18960020
SCANDSN1 LA    R2,DSNBUFFO         REGISTER 2 POINTS TO FIRST DSNAME    19000020
         LH    R3,DSBLO            LENGTH OF FIRST DATA SET NAME        19040020
         L     R15,VCONRN3         ADDRESS OF ASTERISK SCAN ROUTINE     19050020
         BALR  R14,R15             GO SCAN FOR ASTERISK                 19080020
         B     STARERR4            ERROR                                19120020
         B     STARERR8            ERROR                                19160020
         MVC   STARLEV1(F1),STARLEV2 SAVE ASTERISK LEVEL                19200020
         MVC   STARADR1(F4),STARADR2 SAVE ASTERISK ADDRESS              19240020
*  NOW PROCESS SECOND DATA SET NAME                                     19280020
         SR    R2,R2               ZERO REGISTER                        19320020
*  SET REGISTER 5 AS INDEX FOR PARSE DESCRIPTOR ENTRY SECOND DSNAME     19360020
         LA    R5,DSNAME2          POINT TO PDE FOR SECOND DSNAME       19400020
         C     R2,F0(R5)           IS DSNAME POINTER ZERO               19440020
         BE    NODSN2              NO DSNAME2 SPECIFIED, CHECK IF VALID 19480020
*  MOVE SECOND DATA SET NAME TO SECOND DSLENGTH AND DSNAME BUFFER       19520020
         L     R4,F0(R5)           ADDRESS OF DATA SET NAME FROM PARSE  19560020
         LH    R2,F4(R5)           LENGTH OF DATA SET NAME FROM PARSE   19600020
         LTR   R2,R2               TEST DATA SET LENGTH                 19640020
         BZ    NODSN2              LENGTH ZERO, CHECK IF VALID          19680020
         STH   R2,DSLN             SAVE DATA SET LENGTH                 19720020
         BCTR  R2,R0               DECREMENT FOR EXECUTE INSTRUCTION    19760020
         LA    R3,DSNN             ADDRESS OF BUFFER SECOND DSNAME      19800020
         EX    R2,MOVEINST         MOVE SECOND DATA SET NAME TO BUFFER  19840020
*  MOVE SECOND DATA SET NAME TO MESSAGE BUFFER                          19880020
         LA    R3,DSNMSG2          POINT TO DSNAME2 MESSAGE BUFFER      19920020
         TM    F6(R5),QUOTEMSK     IS SECOND DSNAME FULLY QUALIFIED     19930020
         BZ    SAVUNQL2            NO, SAVE UNQUALIFIED DSNAME          19940020
         BAL   R14,QUOTEDSN        SAVE QUOTED DATA SET NAME            19950020
SAVELN2  STH   R2,DSNMSGL2         SAVE LENGTH FOR MESSAGE INSERTIONS   20040020
*  MOVE MEMBER NAME TO MESSAGE BUFFER                                   20080020
MEM2     LH    R2,F12(R5)          LENGTH OF MEMBER NAME                20160020
         LTR   R2,R2               MEMBER SPECIFIED                     20200020
         BZ    QTEST2              NO MEMBER SPECIFIED                  20240020
         LA    R3,MEMMSG2          MEMBER MESSAGE BUFFER                20280020
         BAL   R14,MEMBUFF         SAVE MEMBER NAME                     20290020
         STH   R2,MEMMSGL2         SAVE LENGTH OF INSERTION             20440020
         CLI   MEM2SW,SWON         IS MEM2 SWITCH ON                    20450020
         BE    GOODSCAN            YES, NO DSN2, CONTINUE PROCESSING    20460020
QTEST2   TM    F6(R5),QUOTEMSK     DSNAME FULLY QUALIFIED               20510020
         BZ    ADUSRID2            NO, ADD USERID                       20520020
NOMEM2   MVC   DSBLN(F46),DSLN     SECOND DSLENGTH-DSNAME TO * BUFFER   20560020
SCANDSN2 LA    R2,DSNBUFFN         REGISTER 2 POINTS TO SECOND DSNAME   20600020
         LH    R3,DSBLN            LENGTH OF SECOND DATA SET NAME       20640020
         L     R15,VCONRN3         ADDRESS OF ASTERISK SCAN ROUTINE     20650020
         BALR  R14,R15             GO SCAN FOR ASTERISK                 20680020
         B     STARER4             ERROR                                20720020
         B     STARER8             ERROR                                20760020
         B     GOODSCAN            SUCCESSFUL SCAN                      20800020
QUOTEDSN MVI   F0(R3),QUOTE        MOVE QUOTE                           20810020
         LA    R3,F1(R3)           POINT PAST QUOTE                     20820020
         EX    R2,MOVEINST         MOVE DATA SET NAME TO BUFFER         20830020
         LA    R3,F1(R2,R3)        POINT PAST DSNAME                    20832020
         MVI   F0(R3),QUOTE        MOVE QUOTE                           20834020
         LA    R2,F7(R2)           1 EXECUTE, 4 HEADER, 2 QUOTES        20836020
         BR    R14                 RETURN                               20838020
MEMBUFF  L     R4,F8(R5)           POINT TO MEMBER NAME                 20838420
         BCTR  R2,R0               DECREMENT FOR EXECUTE                20838820
         EX    R2,MOVEINST         MOVE MEMBER TO MESSAGE BUFFER        20839220
         LA    R2,F5(R2)           1 FOR EXECUTE, 4 FOR HEADER          20839620
         BR    R14                 RETURN                               20839720
*  NOW CHECK THAT ASTERISK IS AT SAME LEVEL IN BOTH DATA SET NAMES      22800020
GOODSCAN CLC   STARLEV1,STARLEV2   COMPARE LEVEL INDICATORS             22840020
         BNE   STARERR             ERROR, *'S NOT AT SAME LEVEL         22880020
*  NOW CHECK IF ASTERISK FOUND                                          22920020
         CLI   STARLEV1,ZERO       IS LEVEL INDICATOR ZERO              22960020
         BE    QUOTETST            IF SO, NO ASTERISK FOUND             23000020
         SR    R2,R2               ZERO REGISTER                        23040020
         LA    R5,DSNAME1          POINT TO PARSE PDE                   23080020
         C     R2,F8(R5)           WAS MEMBER SPECIFIED FIRST DSNAME    23120020
         BNE   STARMEM1            YES, ERROR                           23160020
         C     R2,F32(R5)          WAS MEMBER SPECIFIED SECOND DSNAME   23200020
         BNE   STARMEM2            YES, ERROR                           23240020
*                                                                       23280020
*  A VALID ASTERISK HAS BEEN FOUND IN THE DATA SET NAMES.  NOW          23320020
*  DETERMINE IF ASTERISK WAS IN INDEX LEVEL OR DATA SET NAME LEVEL      23360020
*  (LAST POSITION) OF DATA SET NAME.  SEPARATE ENTRY TO IKJEHCIR        23400020
*  (CATALOG INFORMATION ROUTINE) AND SEPARATE PROCESSING REQUIRED FOR   23440020
*  EACH CASE.                                                           23480020
*                                                                       23520020
*  INITIALIZE CATALOG INFORMATION ROUTINE PARAMETER LIST                23650000
         LH    R0,MINMAX           LENGTH OF GETMAIN AREA      @YL026YB 23660000
         LR    R3,R0               SAVE LENGTH                 @YL026YB 23670000
         O     R0,SUBPOL1          SET SUBPOOL NUMBER          @YL026YB 23680000
         GETMAIN R,LV=(0)          WORKAREA FOR CIR            @YL026YB 23690000
         LTR   R15,R15             TEST RETURN CODE            @YL026YB 23700000
         BZ    CIRPM               CONTINUE NORMALLY           @YL026YB 23710000
         SR    R8,R8               CLEAR ASTERISK INDICATOR    @YL026YB 23720000
         B     NOSPACE             GO WRITE MESSAGE            @YL026YB 23730000
CIRPM    LR    R2,R1               POINT TO CIR WORKAREA       @YL026YB 23740000
         STH   R3,F0(R2)           SAVE LENGTH OF WORKAREA     @YL026YB 23750000
         ST    R2,WORK1PTR         SET POINTER TO WORK AREA 1           23760000
         LA    R2,WRK2AREA         ADDRESS OF WORK AREA 2               23770000
         ST    R2,WORK2PTR         SET POINTER TO WORK AREA 2           23780000
         LA    R2,NAMETTR          ADDRESS OF NAME-TTR BUFFER           23790000
         ST    R2,NAMEPTR          SET POINTER TO NAME-TTR BUFFER       23800000
         LA    R2,CVOLID           ADDRESS OF USER CAT. NAME   @YL026YB 23810000
         ST    R2,VOLIDPTR         SET PTR TO USER CAT. NAME   @YL026YB 23820000
         LA    R2,PASSWKD          ADDRESS OF CATALOG PASSWORD @YL026YB 23830000
         ST    R2,PASSPTR          SET PTR TO CATALOG PASSWORD @YL026YB 23840000
         MVC   STARBUFF(F52),DSNMESGL SAVE ASTERISK NAME                23850000
*  NOW MOVE INDEX STRUCTURE (FIRST DATA SET NAME)                       23860000
         XC    PASSPTR,PASSPTR     ZERO NO CAT. PASSWORD       @YL026YB 23870000
         XC    VOLIDPTR,VOLIDPTR   ZERO FOR SEARCH DEFAULT     @YL026YB 23880000
         LA    R3,NAMETTR          ADDRESS OF CIR BUFFER                23920020
         LA    R4,DSNBUFFO         POINT TO FIRST DATA SET NAME         23960020
         L     R2,STARADR1         LOAD POINTER TO ASTERISK             24000020
         LR    R5,R2               POINT TO ASTERISK                    24040020
         BCTR  R5,R0               POINT TO PERIOD BEFORE ASTERISK      24080020
         MVI   F0(R5),BLANK        BLANK OUT PERIOD FOR CIR             24120020
         SR    R2,R4               LENGTH OF INDEX STRUCTURE AND BLANK  24160020
         BCTR  R2,R0               DECREMENT FOR EXECUTE INSTRUCTION    24200020
         EX    R2,MOVEINST         INDEX STRUCTURE AND BLANK TO BUFFER  24240020
         STH   R2,INDEXSZE         SAVE LENGTH OF INDEX STRUCTURE       24280020
*  CATALOG INFORMATION ROUTINE PARAMETER LIST IS NOW COMPLETE EXCEPT    24320020
*  FOR OPTION BYTE.  NOW DETERMINE OPTION NEEDED.                       24360020
         LA    R5,F2(R2)           LENGTH OF DATA SET NAME TO ASTERISK  24400020
         CH    R5,DSBLO            COMPARE TO LENGTH OF DATA SET NAME   24440020
*  IF LENGTHS ARE EQUAL THE ASTERISK IS IN THE LAST POSITION OF THE     24480020
*  DATA SET NAME AND THE OPTION FOR THE CATALOG INFORMATION ROUTINE IS  24520020
*  X'01' REQUESTING DSNAMES.  IF LENGTHS NOT EQUAL THE OPTION IS X'02'  24560020
*  REQUESTING ALL NAMES                                        @YL026YB 24600000
         BNE   CIRINDEX            PROCESS INDEX NAMES                  24640020
CIRNAMES MVI   CIRPARM,NAMESOPT    SET DSNAMES OPTION FOR CIR           24680020
MORNAMES L     R15,CIRADDR         ADDRESS OF CIR                       24720020
         LA    R1,CIRPARM          POINT TO CIR PARAMETER LIST          24760020
         CALL  (15)                GO TO CIR                            24800020
         LTR   R15,R15             TEST RETURN CODE                     24840020
         BNZ   CIRLTST             NONZERO RETN CODE IS ERROR  @YL026YB 24880000
         L     R8,WORK1PTR         REG PTS TO CIR   NAMES      @YL026YB 24920000
*                                  AND IS USED TO INDEX THROUGH LIST    24960000
         MVC   WKLENGTH(F4),F0(R8)  SAVE WKAREA LENGTH FIELDS  @YL026YB 25000000
         LA    R8,F4(R8)           BUMP PTR TO 1ST ENTRY CODE  @YL026YB 25040000
CIRNTEST ST    R8,$RETRY0+R8*F4    SAVE REG FOR STAE RECOVERY           25080000
         CLI   F0(R8),NAMETST      IS IT A DATA SET NAME ENTRY          25120000
         BE    BLDNAME             YES,GO PROCESS DSNAME ENTRY @YL026YB 25160000
         CLI   F0(R8),ENDTEST      TEST FOR END OF LIST                 25200000
         BE    ENDLIST             YES, GO PROCESS END OF LIST          25240000
         LA    R8,F9(R8)           POINT TO NEXT ENTRY         @YL026YB 25280000
         B     CIRNTEST            GO PROCESS NEXT ENTRY       @YL026YB 25320000
CIRINDEX MVI   CIRPARM,INDEXOPT    SET INDEX NAMES OPTION FOR CIR       25360020
MORINDXS L     R15,CIRADDR         ADDRESS OF CIR                       25400020
         LA    R1,CIRPARM          POINT TO CIR PARAMETER LIST          25440020
         CALL  (15)                GO TO CIR                            25480020
         LTR   R15,R15             TEST RETURN CODE                     25520020
         BNZ   CIRLTST             NONZERO RETURN CDE IS ERROR @YL026YB 25560000
         L     R8,WORK1PTR         REG PTS TO CIR  NAMES       @YL026YB 25570000
*                                  AND IS USED TO INDEX THROUGH LIST    25580000
         MVC   WKLENGTH(F4),F0(R8) SAVE WK AREA LENGTH FIELDS  @YL026YB 25590000
         LA    R8,F4(R8)           BUMP PTR TO 1ST ENTRY CODE  @YL026YB 25600000
CIRITEST ST    R8,$RETRY0+R8*F4    SAVE REG FOR STAE RECOVERY           25610000
         CLI   F0(R8),INDEXTST     IS IT A NONVSAM NAME ENTRY  @YL026YB 25620000
         BE    BLDNAME             YES, GO PROCESS LIST ENTRY  @YL026YB 25630000
         CLI   F0(R8),ENDTEST      TEST FOR END OF LIST                 25640000
         BE    ENDLIST             YES, GO PROCESS END OF LIST          25650000
         LA    R8,F45(R8)          POINT TO NEXT ENTRY         @YL026YB 25660000
         B     CIRITEST            GO PROCESS NEXT ENTRY       @YL026YB 25670000
BLDNAME  L     R15,VCONRN4         ADDRESS OF CIR NAME ROUTINE @YL026YB 25680000
         BALR  R14,R15             GET NAME FROM CIR           @YL026YB 25690000
         B     ERRORDS1            GO UPDATE MESSAGE BUFFER    @YL026YB 25700000
         B     STARPROC            ERROR FOUND GO TO NEXT NAME @YL026YB 25710000
ENDLIST  CLI   STARSW,SWON         HAS * VALUE BEEN RENAMED    @YL026YB 25720000
         BE    CLEANUP             YES, GO CLEANUP                      25860020
         MVI   STARSW,SWOFF        NO, TURN OFF SWITCH                  25870020
         B     CIRERROR            GO PUT OUT MESSAGE                   25872020
*  NO ASTERISK FOUND IN DATA SET NAMES.  CHECK IF DATA SET NAMES ARE    26840020
*  FULLY QUALIFIED (IN QUOTES).  IF NOT ADD QUALIFIERS TO EITHER OR     26880020
*  BOTH DATA SET NAMES AS NEEDED.                                       26920020
QUOTETST LA    R5,DSNAME1          POINT TO PDE                         26930020
         TM    F6(R5),QUOTEMSK     IS FIRST DSNAME FULLY QUALIFIED      26940020
         BZ    QUALIFY1            IF NOT, GO QUALIFY FIRST DSNAME      27120020
QUAL2    LA    R5,DSNAME2          POINT TO PDE                         27130020
         SR    R1,R1               ZERO REGISTER                        27132020
         C     R1,F0(R5)           IS SECOND DSNAME POINTER ZERO        27134020
         BE    MEMCHECK            YES, DO NOT QUALIFY SECOND DSNAME    27136020
         TM    F6(R5),QUOTEMSK     IS SECOND DSNAME FULLY QUALIFIED     27140020
         BZ    QUALIFY2            IF NOT, GO QUALIFY IT                27150020
MEMCHECK SR    R2,R2               ZERO REGISTER                        27240020
         LA    R5,DSNAME1          POINT TO PARSE PDE                   27280020
         C     R2,F8(R5)           IS FIRST MEMBER NAME POINTER ZERO    27320020
         BNE   MEMTEST2            NO, GO CHECK SECOND DSNAME           27360020
         C     R2,F32(R5)          IS SECOND MEMBER POINTER ZERO        27400020
         BNE   BADDSN2             NO, ERROR, MEMBER SECOND NAME ONLY   27440020
         CH    R2,RENTYPE          WAS ALIAS SPECIFIED                  27480020
         BNE   BADKEYWD            YES, ERROR, INVALID USE OF ALIAS     27520020
         B     ALLOCDS             OK, GO ALLOCATE DATA SET             27560020
SAMENAME MVC   DSLN(F46),DSLO      SAME PDS FOR BOTH NAMES              27570020
         B     ALLOCDS             GO ALLOCATE DATA SET                 27580020
MEMTEST2 C     R2,F32(R5)          IS SECOND MEMBER POINTER ZERO        27600020
         BE    BADDSN4             YES, ERROR, MEMBER FIRST NAME ONLY   27640020
         C     R2,F24(R5)          IS SECOND DSNAME POINTER ZERO        27680020
         BE    SAMENAME            YES, OK, DEFAULT TO FIRST DSNAME     27720020
         CLC   DSLO(F46),DSLN      SAME PDS BOTH DSNAMES                27760020
         BNE   BADDSN5             NO, ERROR, DIFFERENT PDS'S           27800020
*  BOTH DSNAMES ARE NOW FULLY QUALIFIED.  NOW ALLOCATE FIRST DATA SET   27840020
ALLOCDS  LA    R6,DAIR08           POINT TO DAIR ENTRY 08               27880020
         USING DAPB08,R6           ADDRESSABILITY FOR DAIR ENTRY 08     27920020
         MVC   DA08DDN(F8),DA08SER BLANK DDNAME FIELD                   27960020
         MVC   DA08PSWD(F8),DA08SER BLANK PASSWORD FIELD                28000020
         L     R4,F16(R5)          POINTER TO PASSWORD                  28040020
         LTR   R4,R4               TEST PASSWORD POINTER                28080020
         BZ    NOPASWRD            ZERO POINTER INDICATES NO PASSWORD   28120020
         LA    R3,DA08PSWD         POINT TO PASSWORD FIELD IN DAIR LIST 28160020
         LH    R2,F20(R5)          LENGTH OF PASSWORD                   28200020
         BCTR  R2,R0               DECREMENT FOR EXECUTE INSTRUCTION    28240020
         EX    R2,MOVEINST         MOVE PASSWORD TO DAIR LIST           28280020
NOPASWRD LA    R1,DAIRPARM         POINT TO DAIR GENERAL PARAMETER LIST 28320020
         MVI   STARSW,SWON         TURN STAR SWITCH ON                  28330020
         MVI   CIRFLAG,SWON        TURN CIR FLAG ON                     28340020
         L     R15,DAIRADDR        ADDRESS OF DAIR                      28360020
         ST    R6,DAPLDAPB-DAPL(R1) ENTRY PARM BLOCK TO DAIR LIST       28400020
         CALL  (15)                GO TO DAIR (ALLOCATE DATA SET)       28440020
         LTR   R15,R15             TEST DAIR RETURN CODE                28480020
         BNZ   DAIRERR             NONZERO RETURN CODE IS DAIR ERROR    28520020
         MVI   UNALOCSW,SWON       TURN UNALLOCATE SWITCH ON            28560020
         MVC   DDNAME1(F8),DA08DDN SAVE DDNAME                          28600020
*  NOW DETERMINE IF RENAME IS FOR ENTIRE DATA SET OR FOR A MEMBER OF    28640020
*  A PARTITIONED DATA SET                                               28680020
         SR    R2,R2               ZERO REGISTER                        28720020
         CLI   DA08DSO,PDSTEST     IS DATA SET A PDS                    28760020
         DROP  R6                  DAPB08 NO LONGER NEEDED              28800020
         LA    R5,DSNAME1          POINT TO PARSE PDE                   28840020
         BE    MEMBRTST            IF YES, WAS A MEMBER SPECIFIED       28880020
*  DATA SET IS NOT PARTITIONED.  A MEMBER SPECIFIED IS AN ERROR         28920020
         C     R2,F8(R5)           IS FIRST MEMBER NAME POINTER ZERO    28960020
         BNE   BADDSN1             ERROR (EXPLAINED ABOVE)              29000020
*  THE RENAME IS NOT FOR A MEMBER OF A PARTITIONED DATA SET, THEREFORE  29040020
*  RENAME ENTIRE DATA SET.                                              29080020
RENSEQDS LH    R2,DSLO             LENGTH OF FIRST DATA SET NAME        29120020
         BCTR  R2,R0               DECREMENT FOR EXECUTE INSTRUCTION    29160020
         LA    R4,DSNO             POINT TO FIRST DATA SET NAME         29200020
*  BLANK WORK DATA SET NAME BUFFERS                                     29240020
         MVI   DSNAMEU,BLANK       BLANK                                29280020
         MVC   DSNAMEU+F1(F44),DSNAMEU UNCATALOG MACRO BUFFER           29320020
         MVC   DSNAME4(F45),DSNAMEU CATALOG MACRO BUFFER (2ND DSNAME)   29360020
         MVC   DSNAME3(F44),DSNAMEU LOCATE MACRO BUFFER                 29400020
         MVC   OLDNAME(F44),DSNAMEU RENAME MACRO BUFFER (OLDNAME)       29520020
         MVC   NEWNAME(F44),DSNAMEU RENAME MACRO BUFFER (NEWNAME)       29560020
*  NOW MOVE DSNAMES TO CAMLST MACRO BUFFERS                             29600020
         LA    R3,DSNAMEU          POINT TO UNCATALOG DSNAME BUFFER     29640020
         EX    R2,MOVEINST         FIRST DSNAME TO UNCATALOG BUFFER     29680020
         LA    R3,DSNAME3          POINT TO LOCATE DSNAME BUFFER        29720020
         EX    R2,MOVEINST         FIRST DSNAME TO LOCATE BUFFER        29760020
         LA    R3,OLDNAME          POINT TO RENAME DSNAME(OLD) BUFFER   29880020
         EX    R2,MOVEINST         FIRST DSNAME TO RENAME BUFFER        29920020
         LH    R2,DSLN             LENGTH OF SECOND DATA SET NAME       29960020
         BCTR  R2,R0               DECREMENT FOR EXECUTE                30000020
         LA    R4,DSNN             POINT TO SECOND DATA SET NAME        30040020
         LA    R3,DSNAME4          POINT TO CATALOG DSNAME BUFFER       30160020
         EX    R2,MOVEINST         SECOND DSNAME TO CATALOG BUFFER      30200020
         LA    R3,NEWNAME          POINT TO RENAME DSNAME(NEW) BUFFER   30240020
         EX    R2,MOVEINST         SECOND DSNAME TO RENAME BUFFER       30280020
*  NOW ISSUE LOCATE TO GET VOLUME INFORMATION FOR RENAME                30320020
         LA    R2,DSNAME3          LOCATE DSNAME BUFFER                 30360020
         ST    R2,LOCNAME2         SET POINTER TO DSNAME BUFFER         30400020
         LA    R2,LOCAREA1         LOCATE WORKAREA                      30440020
         ST    R2,LOCNAME4         SET POINTER TO WORKAREA              30480020
         LOCATE LOCNAME            ISSUE LOCATE                         30520020
         LTR   R15,R15             TEST LOCATE RETURN CODES             30560020
         BNZ   LOCERROR            NONZERO RETURN CODE IS LOCATE ERROR  30600020
         CLI   ISWITCH,ENDTEST     WAS THIS A VALIDITY CHECK            30640020
         BE    OKINDEX             YES, GO TURN OFF SWITCH              30680020
*  NOW CHECK NUMBER OF VOLUMES.  MORE THAN 1 VOLUME IS ERROR            30720020
         LA    R2,VOLCOUNT         SET REGISTER TO 1                    30760020
         CH    R2,LOCAREA1         COMPARE 1 TO NUMBER OF VOLUMES       30800020
         BL    OVR20VOL            ERROR, MORE THAN 1 VOLUME            30840020
*  COMPUTE LENGTH OF VOLUME LIST AND MOVE VOLUME                        30880020
*  LIST TO RENAME AND CATALOG CAMLSTS                                   30920020
         LA    R2,VOLLENTH         LENGTH OF EACH VOLUME ENTRY          30960020
         MH    R2,LOCAREA1         MULTIPLY BY NUMBER OF VOLUMES        31000020
         LA    R2,F1(R2)           ADD TWO FOR VOLUME COUNT, DECREMENT- 31040020
*                                  ONE FOR EXECUTE INSTRUCTION          31080020
         LA    R3,VOLIST1          ADDRESS OF RENAME VOLUME LIST        31120020
         ST    R3,RENAME4          POINT TO RENAME VOLUME LIST          31160020
         LA    R4,LOCAREA1         LOCATE WORKAREA (VOLUME LIST)        31200020
         EX    R2,MOVEINST         MOVE VOLUME LIST TO RENAME MACRO     31240020
         LA    R3,VOLIST2          ADDRESS OF CATALOG VOLUME LIST       31280020
         ST    R3,CATLST4          POINT TO CATALOG VOLUME LIST         31290020
         EX    R2,MOVEINST         MOVE VOLUME LIST TO CATALOG MACRO    31320020
*  NOW SEE IF NEW NAME IS ALREADY CATALOGED                             31330020
         LA    R2,DSNAME4          DSNAME POINTER                       31340020
         ST    R2,LOCNAME2         TO LOCATE LIST                       31350020
         LOCATE LOCNAME            ISSUE LOCATE                         31352020
         LTR   R15,R15             TEST RETURN CODE                     31354020
         BZ    NMEONVOL            NAME FOUND IS ERROR                  31356020
*  PREVENT ATTENTION INTERRUPTIONS FROM NOW UNTIL AFTER UNALLOCATION    31358020
         STAX  DEFER=YES           DEFER ATTENTION INTERRUPTS           31358420
*  NOW RENAME DATA SET                                                  31360020
         LA    R2,OLDNAME          OLD DSNAME                           31440020
         ST    R2,RENAME2          SET POINTER TO OLD DSNAME BUFFER     31480020
         LA    R2,NEWNAME          NEW DSNAME                           31520020
         ST    R2,RENAME3          SET POINTER TO NEW DSNAME BUFFER     31560020
         SR    R0,R0               THIS REGISTER ZEROED FOR RENAME      31600020
         RENAME RENAMLST           ISSUE RENAME                         31640020
         LTR   R15,R15             TEST RENAME RETURN CODE              31680020
         BNZ   RENAMERR            RENAME ERROR                         31720020
*  NOW CATALOG NEW DATA SET NAME                                        32080020
CATNEWDS LA    R2,DSNAME4          CATALOG DSNAME BUFFER                32120020
         ST    R2,CATLST2          SET POINTER TO CATALOG BUFFER        32160020
*  ISSUE CATALOG MACRO TO CATALOG NEW DATA SET                          32200020
         CATALOG CATLST            ISSUE CATALOG                        32240020
         LTR   R15,R15             TEST CATALOG RETURN CODE             32280020
         BNZ   RESTORE             CATALOG ERROR, RESTORE STATUS        32360020
*  NOW UNCATALOG OLD DATA SET                                           32440020
         LA    R2,DSNAMEU          UNCATALOG DSNAME BUFFER              32520020
         ST    R2,UNCAT2           SET POINTER TO UNCATALOG NAME BUFFER 32600020
*  ISSUE CATALOG MACRO TO UNCATALOG OLD DATA SET NAME                   32680020
         SR    R0,R0               THIS REGISTER ZEROED FOR CATALOG     32760020
         CATALOG UNCATLST          ISSUE CATALOG                        32840020
         LTR   R15,R15             TEST CATALOG RETURN CODE             32920020
         BNZ   UNCATBAD            CATALOG ERROR                        33000020
*  NOW UNALLOCATE DATA SET                                              33080020
UNALOCDS LA    R6,DAIR18           POINT TO DAIR ENTRY 18               33120020
         USING DAPB18,R6           ADDRESSABILITY DAIR ENTRY 18         33160020
*  IF RENAME WAS SUCCESSFUL UNALLOCATE BY DSNAME, BUT IF ERROR OR       33168020
*  RENAME WAS FOR PDS MEMBER UNALLOCATE BY DDNAME                       33176020
         SR    R3,R3               ZERO REGISTER                        33184020
         CLI   ERRORSW,SWON        DID ERROR OCCUR                      33186020
         BE    UNALOC              YES, GO UNALLOCATE DDNAME            33188020
         MVI   DA18CTL,PERMALC     UNALLOC PERMANENTLY ALLOC DS         33190020
         LA    R5,DSNAME1          POINT TO PARSE PDE                   33192020
         C     R3,F8(R5)           WAS MEMBER SPECIFIED                 33200020
         BNE   UNALOC              YES, GO UNALLOCATE DDNAME      M2009 33208021
         LA    R3,DSLO             POINT TO DSLENGTH-DSNAME             33232000
         ST    R3,DA18PDSN         SET DSNAME POINTER                   33240020
         MVC   DA18DDN(F8),DA18JBNM BLANK DDNAME                        33248020
         B     UNALOCGO            GO UNALLOCATE                        33256020
UNALOC   MVI   DA18CTL,ZERO        CLEAR CONTROL BYTE                   33258020
UNALOCDD ST    R3,DA18PDSN         XERO DSNAME POINTER                  33264020
         MVC   DA18DDN(F8),DDNAME1 MOVE DDNAME TO UNALLOCATE LIST       33280020
UNALOCGO L     R15,DAIRADDR        LOAD DAIR ADDRESS                    33320020
         LA    R1,DAIRPARM         POINT TO DAIR GENERAL PARAMETER LIST 33360020
         ST    R6,DAPLDAPB-DAPL(R1) ENTRY PARM BLOCK TO DAIR LIST       33400020
         DROP  R6                  DAPB18 NO LONGER NEEDED              33440020
         CALL  (15)                GO TO DAIR (UNALLOCATE DATA SET)     33480020
         MVI   UNALOCSW,SWOFF      TURN UNALLOCATE SWITCH OFF           33520020
         MVI   ERRORSW,SWOFF       TURN ERROR SWITCH OFF                33540020
*  NOW ALLOW ATTENTION INTERRUPTIONS                                    33550020
         STAX  DEFER=NO            ALLOW ATTENTION INTERRUPTS           33552020
*  FINISHED PROCESSING THIS DATA SET.  CHECK IF PROCESSING ASTERISK     33560020
*  NAMES AND IF SO CONTINUE ASTERISK PROCESSING, OTHERWISE CLEANUP      33600020
*  AND RETURN.                                                          33640020
IKJEHTST EQU   *                   ALIAS FOR LISTEST                    33660020
LISTEST  CLI   ENDERROR,SWON       CAN PROCESSING CONTINUE              33680020
         BE    CLUPRCC             NO, GO CLEANUP AND RETURN   @ZA01485 33720037
         L     R2,STAEADDR         ADDRESS OF STAE INTERFACE ROUTINE    33730020
         STAE  (R2),CT,PARAM=STAEPARM,MF=(E,STAELIST) ISSUE STAE        33740020
         LTR   R8,R8               TEST FOR PROCESSING ASTERISK NAMES   33760020
         BNZ   STARPROC            YES, CONTINUE PROCESSING             33800020
*  FINISHED PROCESSING, CLEANUP                                         33840020
*  NOW CHECK IF AN ERROR HAS OCCURRED.  IF SO, THE STACK MUST BE        34170020
*  FLUSHED AND THE INPUT QUEUE CLEARED.                                 34180020
CLEANUP  CLI   STACKSW,SWON        IS STACK SWITCH ON                   34190020
         BNE   STACKOK             NO ERROR, END NORMALLY               34192020
         LA    R1,IOPARM           POINT TO I/O PARAMETER LIST          34194020
         LA    R2,STACKPRM         POINT TO STACK PARM BLOCK            34196020
         ST    R2,IOPLIOPB-IOPL(R1) PARM BLOCK ADDRESS TO PARM LIST     34198020
         STACK DELETE=ALL,MF=(E,(1)) FLUSH STACK                        34198420
         TCLEARQ INPUT             CLEAR ANYTHING TYPED AHEAD           34198820
STACKOK  EQU   *                   NORMAL RETURN FROM HERE              34199220
         L     R13,F4(R13)         POINT TO CALLER'S REGISTERS          34200020
         SR    R15,R15             CLEAR RETURN CODE           @ZA01485 34280037
         IC    R15,RCX             SET RC                      @ZA01485 34290037
         RETURN (14,12),T,RC=(15)  RESTORE REGISTERS AND RETURN         34320020
CLUPRCC  EQU   *                                               @ZA01485 34330037
         MVI   RCX,RC12            SET RC                      @ZA01485 34340037
         B     CLEANUP                                         @ZA01485 34350037
STARPROC CLI   CIRPARM,INDEXOPT    PROCESSING INDEX NAMES               34360020
         BE    CIRITEST            YES, GO PROCESS INDEX NAME           34400020
         B     CIRNTEST            NO, GO PROCESS DATA SET NAME         34440020
*  THIS SECTION APPENDS THE USERID TO THE FIRST DATA SET NAME           34480020
*  FIRST SEVEN BYTES OF PSCB IS USERID (RIGHT PADDED WITH BLANKS) AND   34520020
*  EIGHTH BYTE IS THE LENGTH OF THE USERID.                             34560020
ADUSRID1 L     R4,UPTSAVE          ADDRESS OF PSCB                      34600000
         LA    R3,DSNBUFFO         ADDRESS OF FIRST DSNAME BUFFER       34620000
         SR    R2,R2               ZERO REGISTER                        34640000
         IC    R2,UPTPREFL-UPT(R4) LENGTH OF USERID                     34660000
         LTR   R2,R2               CHECK PREFIX LENGTH FOR ZERO         34680000
         BZ    NOPREFX             NO PREFIXING                @YL026YB 34700000
         EX    R2,MOVE1            MOVE USERID TO FIRST DSNAME BUFFER   34720000
*  THIS ACTUALLY MOVED ONE EXTRA BYTE WHICH WILL NOW BE OVERLAID WITH   34800020
*  A PERIOD.                                                            34840020
         AR    R3,R2               POINT PAST PERIOD                    34880020
         MVI   F0(R3),PERIOD       MOVE IN A PERIOD                     34920020
         LA    R3,F1(R3)           POINT PAST PERIOD           @YL026YB 34960000
         LA    R2,F1(R2)           - PLUS ONE FOR THE PERIOD   @YL026YB 35000000
NOPREFX  LA    R4,DSNO             ADDRESS OF DATA SET NAME    @YL026YB 35040000
         LH    R5,DSLO             LENGTH OF DATA SET NAME -            35080000
         AR    R2,R5               - ADDED TO LENGTH OF USERID -        35120000
         BCTR  R5,R0               DECREMENT FOR EXECUTE INSTRUCTION    35160020
         EX    R5,MOVEINST         MOVE DATA SET NAME TO USERID         35200020
         STH   R2,DSBLO            SAVE TOTAL DATA SET LENGTH           35240020
         CH    R2,MAXLENTH         CHECK LENGTH NOT GREATER THAN 44     35280020
         BH    DSNBIG1             IF SO, ERROR                         35320020
         B     SCANDSN1            NOW GO CHECK FOR * QUALIFIERS        35360020
*  THIS SECTION APPENDS THE USERID TO THE SECOND DATA SET NAME          35400020
*  FIRST SEVEN BYTES OF PSCB IS USERID (RIGHT PADDED WITH BLANKS) AND   35440020
*  EIGHTH BYTE IS THE LENGTH OF THE USERID                              35480020
ADUSRID2 L     R4,UPTSAVE          ADDRESS OF UPT              @YL026YB 35520000
         LA    R3,DSNBUFFN         ADDRESS OF SECOND DSNAME BUFFER      35540000
         SR    R2,R2               ZERO REGISTER                        35560000
         IC    R2,UPTPREFL-UPT(R4) LENGTH OF USERID            @YL026YB 35580000
         LTR   R2,R2               CHECK PREFIXING LENGTH FOR ZERO      35600000
         BZ    NOPREX1             NO PREFIXING                @YL026YB 35620000
         EX    R2,MOVE1            MOVE USERID TO SECOND DSNAME BUFFER  35640000
*  THIS ACTUALLY MOVED ONE EXTRA BYTE WHICH WILL NOW BE OVERLAID WITH   35720020
*  A PERIOD.                                                            35760020
         AR    R3,R2               POINT PAST PERIOD                    35800020
         MVI   F0(R3),PERIOD       MOVE IN A PERIOD                     35840020
         LA    R3,F1(R3)           POINT PAST PERIOD                    35880020
         LA    R2,F1(R2)           - PLUS ONE FOR THE PERIOD   @YL026YB 35920000
NOPREX1  LA    R4,DSNN             ADDRESS OF DATA SET NAME    @YL026YB 35960000
         LH    R5,DSLN             LENGTH OF DATA SET NAME -            36000000
         AR    R2,R5               - ADDED TO LENGTH OF USERID          36040000
         BCTR  R5,R0               DECREMENT OFR EXECUTE INSTRUCTION    36080020
         EX    R5,MOVEINST         MOVE DATA SET NAME TO USERID         36120020
         STH   R2,DSBLN            SAVE TOTAL DATA SET LENGTH           36160020
         CH    R2,MAXLENTH         CHECK LENGTH NOT GREATER THAN 44     36200020
         BH    DSNBIG2             IF SO, ERROR                         36240020
         B     SCANDSN2            NOW GO CHECK FOR * QUALIFIERS        36280020
*  FIRST DATA SET IS PARTITIONED.  CHECK IF MEMBER NAME SPECIFIED       36320020
MEMBRTST C     R2,F8(R5)           IS FIRST MEMBER NAME POINTER ZERO    36360020
         BE    RENSEQDS            PDS WITHOUT MEMBER                   36400020
*  RENAME IS FOR A PDS MEMBER                                           36440020
*  BUILD DCB BEFORE OPEN (INSERT DDNAME OBTAINED FROM DAIR)             36480020
OKNAME   MVC   DCBDDNAM(F8),DDNAME1 MOVE DDNAME TO DCB                  36520020
*  NOW OPEN DATA SET                                                    36560020
         LA    R1,OPEN             ADDRESS OF OPEN LIST                 36600020
         OPEN  ,MF=(E,(1))         OPEN DATA SET                        36640020
*  NOW INITIALIZE STOW AND BLDL WORK AREAS TO BLANKS                    36800020
         MVI   STOWOLD,BLANK       BLANK FIRST BYTE                     36840020
         MVC   STOWOLD+F1(STOWEND-STOWOLD-F1),STOWOLD BLANK WORK AREA   36880020
*  MOVE BOTH MEMBER NAMES TO WORK AREA                                  36920020
         LA    R3,STOWOLD          OLD MEMBER NAME AREA                 36960020
         L     R4,F8(R5)           POINT TO FIRST MEMBER NAME           37000020
         LH    R2,F12(R5)          LENGTH OF MEMBER NAME                37040020
         BCTR  R2,R0               DECREMENT FOR EXECUTE INSTRUCTION    37080020
         EX    R2,MOVEINST         MOVE OLD MEMBER NAME                 37120020
         LA    R3,STOWNEW          NEW MEMBER NAME AREA                 37160020
         L     R4,F32(R5)          POINT TO SECOND MEMBER NAME          37200020
         LH    R2,F36(R5)          LENGTH OF MEMBER NAME                37240020
         BCTR  R2,R0               DECREMENT FOR EXECUTE INSTRUCTION    37280020
         EX    R2,MOVEINST         MOVE NEW MEMBER NAME                 37320020
*  NOW CHECK IF ALIAS KEYWORD SPECIFIED                                 37360020
         SR    R2,R2               ZERO REGISTER                        37400020
         CH    R2,RENTYPE          WAS ALIAS SPECIFIED                  37440020
         BNE   ALIASMEM            YES, GO PROCESS ALIAS NAME           37480020
*  ALIAS KEYWORD NOT SPECIFIED, USE STOW C OPTION TO CHANGE             37520020
*  MEMBER NAME                                                          37560020
         STOW  IHADCB,STOWOLD,C    ISSUE STOW                           37600020
         LTR   R15,R15             TEST RETURN CODE                     37640020
         BNZ   STWERROR            STOW ERROR                           37680020
*  STOW COMPLETE, NOW CLOSE DATA SET                                    37720020
CLOSEPDS LA    R1,CLOSE            ADDRESS OF CLOSE LIST                37760020
         CLOSE ,MF=(E,(1))         ISSUE CLOSE                          37800020
*  DATA SET CLOSED                                                      37840020
         B     UNALOCDS            GO UNALLOCATE DATA SET               37880020
*  ALIAS KEYWORD SPECIFIED, USE BLDL TO GET DIRECTORY INFORMATION FOR   37920020
*  OLD MEMBER NAME                                                      37960020
*  FIRST INITIALIZE BLDL LIST                                           38000020
ALIASMEM LA    R2,F1               NUMBER OF ENTRIES                    38040020
         STH   R2,BLDLCNT          SET COUNT IN BLDL LIST               38080020
         LA    R2,F76              LENGTH OF ENTRY                      38120020
         STH   R2,BLDLLNTH         SET LENGTH IN BLDL LIST              38160020
         MVC   BLDLMEM(F8),STOWOLD MEMBER NAME TO BLDL LIST             38200020
*  USE BLDL TO GET DIRECTORY INFORMATION                                38240020
         BLDL  IHADCB,BLDLCNT      ISSUE BLDL                           38280020
         LTR   R15,R15             TEST BLDL RETURN CODE                38320020
         BNZ   BLDLERR             BLDL ERROR                           38360020
*  MOVE DIRECTORY INFORMATION TO STOW WORK AREA                         38400020
         MVC   STOWMEM(F11),BLDLMEM MEMBER AND TTR DATA TO STOW AREA    38440020
         MVC   STOWDATA(F63),BLDLDATA USER DATA AND FLAG BYTE           38480020
         OI    STOWDATA,ALIAS      INDICATE THAT MEMBER IS AN ALIAS     38520020
         MVC   STOWMEM(F8),STOWNEW NEW MEMBER NAME TO STOW WORK AREA    38560020
*  USE STOW TO CREATE ALIAS                                             38600020
         STOW  IHADCB,STOWMEM,A    ISSUE STOW                           38640020
         LTR   R15,R15             TEST RETURN CODE                     38680020
         BNZ   STWERROR            STOW ERROR                           38720020
         B     CLOSEPDS            GO CLOSE DATA SET                    38760020
LOCERROR CLI   ISWITCH,ENDTEST     WAS THIS A VALIDITY CHECK            41080020
         BE    BADSTAR             YES, RESET AND TRY NEXT INDEX NAME   41120020
         B     DSNOTFND            GO BUILD MESSAGE                     41190020
BADSTAR  MVI   ISWITCH,INDEXTST    RESET INDEX SWITCH                   41200020
         B     CIRITEST            GO PROCESS NEXT INDEX NAME           41240020
OKINDEX  MVI   ISWITCH,INDEXTST    TURN OFF INDEX SWITCH                41280020
         B     BLDDSN2             GO BUILD SECOND DATA SET NAME        41320020
*  UNABLE TO CATALOG NEW DATA SET NAME, RESTORE TO OLD NAME.  RENAME    43160020
*  BACK TO OLD NAME AND RECATALOG OLD NAME.                             43200020
RESTORE  LA    R2,OLDNAME          THIS CODE REVERSES THE POINTERS TO   43240020
         ST    R2,RENAME3          -THE DATA SET NAME BUFFERS (OLD DATA 43280020
         LA    R2,NEWNAME          -SET NAME IS NOW THE NEW NAME AND    43320020
         ST    R2,RENAME2          -VICE VERSA)                         43360020
         LA    R2,VOLIST2          POINT TO CATALOG VOLUME LIST         43370020
         ST    R2,RENAME4          USE THIS LIST SO RENAME CONDITION    43372020
*                                  WILL NOT BE OVERLAID                 43374020
         STH   R15,CATERCDE        SAVE CATALOG ERROR CODE              43380020
*  ISSUE RENAME MACRO TO RESTORE ORIGINAL (OLD) DATA SET NAME           43400020
         SR    R0,R0               THIS REGISTER ZEROED FOR RENAME      43440020
         RENAME RENAMLST           ISSUE RENAME                         43480020
         CLI   RENERRSW,SWON       WAS THIS A RENAME ERROR              43520020
         BCR   EQ,R11              YES, GO PUT OUT MESSAGE              43560020
         LA    R15,RC8             SET R15 = 8                          43570020
         CH    R15,CATERCDE        CATALOG ERROR CODE = 8               43580020
         BE    INDEXBAD            YES, INDEX STRUCTURE ERROR           43582020
         LA    R10,DSNMSGL2        POINT TO DSNAME INSERTION            43590020
         LA    R2,M28              MESSAGE NUMBER 28                    43620020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     43650020
         LH    R15,CATERCDE        RESTORE CATALOG ERROR CODE           43680020
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERTION         43710020
         LA    R2,S12              SECOND LEVEL MESSAGE NUMBER 12       43740020
         B     BLDSMSG             GO BUILD SECOND LEVEL MESSAGE        43770020
INDEXBAD LA    R2,M27              MESSAGE 27                           43820020
         LA    R10,DSNMSGL2        POINT TO INSERTION                   43830020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     43832020
         LA    R2,S11              SECOND LEVEL MESSAGE 11              43834020
         B     ZEROR10             GO BUILD MESSAGE                     43836020
*  NO SECOND DATA SET NAME ENTERED.  SECOND DATA SET NAME IS A MEMBER   43840020
*  NAME ALONE.  THIS IS VALID ONLY IF FIRST DATA SET IS PARTITIONED     43880020
*  AND A MEMBER NAME WAS SPECIFIED.                                     43920020
NODSN2   LA    R3,DSNAME1          POINT TO PDE FOR FIRST DSNAME        43960020
         C     R2,F8(R3)           IS MEMBER POINTER ZERO               44000020
         BE    BADDSN2             YES, ERROR                           44040020
         MVI   STARLEV2,ZERO       INDICATE NO * IN SECOND DSNAME       44080020
         MVI   MEM2SW,SWON         TURN MEM2 SWITCH ON                  44090020
         B     MEM2                GO SAVE SECOND MEMBER NAME           44100020
*                                                                       44160020
STARERR4 LA    R10,DSNMSGL1        POINT TO INSERTION                   44200020
STARMSG1 BAL   R11,STARMSG         GO GET FIRST LEVEL MESSAGE           44240020
         LA    R2,S18              SECOND LEVEL MESSAGE NUMBER 18       44280020
         B     ZEROR10             GO BUILD MESSAGE                     44290020
DSNBIG2  LA    R10,DSNMSGL2        POINT TO DSNAME INSERTION            44440020
         LA    R1,DSLN             POINT TO DATA SET NAME BUFFER        44490020
         B     DSNBIG              GO BUILD DSNAME INSERTION            44520020
STARER4  LA    R10,DSNMSGL2        POINT TO INSERTION                   44560020
         B     STARMSG1            GO GET FIRST LEVEL MESSAGE           44600020
STARERR8 LA    R10,DSNMSGL1        POINT TO INSERTION                   44640020
STARMSG2 BAL   R11,STARMSG         GO GET FIRST LEVEL MESSAGE           44680020
         LA    R2,S17              SECOND LEVEL MESSAGE NUMBER 17       44720020
         B     ZEROR10             GO BUILD SECOND LEVEL MESSAGE        44760020
STARER8  LA    R10,DSNMSGL2        POINT TO INSERTION                   44800020
         B     STARMSG2            GO GET FIRST LEVEL MESSAGE           44840020
STARERR  LA    R10,DSNMSGL1        POINT TO INSERTION                   44880020
         BAL   R11,STARMSG         GO GET FIRST LEVEL MESSAGE           44920020
         LA    R2,S19              SECOND LEVEL MESSAGE NUMBER 19       44960020
         B     ZEROR10             GO BUILD SECOND LEVEL MESSAGE        45000020
STARMSG  LA    R2,M06              MESSAGE NUMBER 6                     45040020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     45080020
         BR    R11                 RETURN FOR SECOND LEVEL MESSAGE      45120020
STARMEM1 LA    R10,DSNMSGL1        POINT TO INSERTION                   45160020
STARMSG3 BAL   R11,STARMSG         GO GET FIRST LEVEL MESSAGE           45200020
         LA    R2,S09              SECOND LEVEL MESSAGE NUMBER 9        45240020
         B     ZEROR10             GO BUILD MESSAGE                     45280020
STARMEM2 LA    R10,DSNMSGL2        POINT TO INSERTION                   45320020
         B     STARMSG3            GO BUILD MESSAGE                     45360020
BADDSN1  LA    R2,M24              MESSAGE NUMBER 24                    45400020
         LA    R10,DSNMESGL        POINT TO INSERTION                   45440020
         B     BLDMESG             GO BUILD MESSAGE                     45480020
NMEONVOL LA    R2,M22              MESSAGE NUMBER 22                    45520020
         LA    R10,DSNMSGL2        POINT TO DSNAME INSERTION            45560020
         B     BLDMESG             GO BUILD MESSAGE                     45600020
NONEWMEM LA    R2,M23              MESSAGE NUMBER 23                    45640020
         LA    R10,MEMMSGL2        POINT TO INSERTION                   45680020
         B     BLDMESG             GO BUILD MESSAGE                     45720020
ALIASERR LA    R2,M26              MESSAGE NUMBER 26                    45760020
         B     NOINSERT            GO BUILD MESSAGE                     45800020
BADUNIT  BAL   R11,MESG29          GO GET FIRST LEVEL MESSAGE           45850020
         LA    R2,S24              SECOND LEVEL MESSAGE 24              45900020
         B     ZEROR10             GO BUILD MESSAGE                     45950020
NOUNIT   BAL   R11,MESG29          GO GET FIRST LEVEL MESSAGE           45952020
         LA    R2,S25              SECOND LEVEL MESSAGE 25              45954020
         B     ZEROR10             GO BUILD MESSAGE                     45956020
MESG29   LA    R2,M29              MESSAGE NUMBER 29                    45958020
         LA    R10,DSNMESGL        POINT TO INSERTION                   45958420
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     45958820
         BR    R11                 RETURN                               45959220
MULTIVOL LA    R2,M21              MESSAGE 21                           45959620
         LA    R10,DSNMESGL        POINT TO INSERTION                   45959720
         B     BLDMESG             GO BUILD MESSAGE                     45959820
INUSE    LA    R2,M15              MESSAGE NUMBER 15                    45960020
         LA    R10,DSNMESGL        POINT TO INSERTION                   46000020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     46040020
         LA    R2,S06              SECOND LEVEL MESSAGE NUMBER 6        46080020
         B     ZEROR10             GO BUILD MESSAGE                     46120020
CATLGIO  BAL   R11,SYSTEMER        GO GET FIRST LEVEL MESSAGE           46130020
         LA    R2,S14              SECOND LEVEL MESSAGE 14              46140020
         B     ZEROR10             GO BUILD MESSAGE                     46150020
*  ANALYZE DAIR RETURN CODES                                            46160020
DAIRERR  STC   R15,RC              SAVE DAIR RETURN CODE                46200020
         CLI   RC,RC16             IS RETURN CODE = 16                  46240020
         BE    NODDS               YES, NO DD ENTRIES                   46280020
         LA    R2,DAIR08           POINT TO DAIR ENTRY 08               46320020
         CLI   RC,RC8              IS RETURN CODE = 8                   46360020
         BL    DAERROR             DAIR ERROR                           46370020
         BE    DSNCATLG            YES, DATA SET NOT CATALOGED          46400020
         LH    R15,DA08DARC-DAPB08(R2) DYNAMIC ALLOCATION RETURN CODE   46440020
         CH    R15,DARC0204        IS DARC = 0204                       46480020
         BE    NOSPACE             YES, NO CORE, GO SET RETURN CODE     46520020
         CH    R15,DARC0210        IS DARC = 0210                       46560020
         BE    INUSE               YES, DATA SET IN USE                 46600020
         CH    R15,DARC0218        IS DARC = 0218                       46640020
         BE    VOLNTMTD            YES, VOLUME NOT MOUNTED              46680020
         CH    R15,DARC6708        IS DARC = 6708                       46720020
         BE    DSNTOVOL            YES, DATA SET NOT ON VOLUME          46760020
         CH    R15,DARC021C        IS DARC = 021C                       46770020
         BE    BADUNIT             YES, BAD UNIT INFORMATION            46780020
         CH    R15,DARC0214        IS DARC = 0214                       46790020
         BE    NOUNIT              YES, NO UNIT AVAILABLE               46792020
         CH    R15,DARC041C        IS DARC = 041C                       46794020
         BE    MULTIVOL            YES, MULTI VOLUME DATA SET           46796020
         BAL   R11,SYSTEMER        GO GET FIRST LEVEL MESSAGE           46800020
         BAL   R3,BITOHEX          GO SET RETURN CODE INSERTION         46840020
         LA    R2,S05              SECOND LEVEL MESSAGE NUMBER 5        46880020
         B     BLDSMSG             GO BUILD SECOND LEVEL MESSAGE        46920020
NOMEM    LA    R2,M17              MESSAGE NUMBER 17                    46960020
         LA    R10,DSNMESGL        POINT TO INSERTION                   47000020
         B     BLDMESG             GO BUILD MESSAGE                     47040020
SYSTEMER LA    R2,M14              MESSAGE NUMBER 14                    47080020
         LA    R10,DSNMESGL        POINT TO INSERTION                   47120020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     47160020
         BR    R11                 RETURN FOR SECOND LEVEL MESSAGE      47200020
RENAMERR STC   R15,RC              SAVE RENAME RETURN CODE              47240020
         MVI   RENERRSW,SWON       TURN RENAME ERROR SWITCH ON          47290020
         BAL   R11,RESTORE         GO RENAME BACK TO OLD NAME           47340020
         MVI   RENERRSW,SWOFF      TURN OFF RENAME ERROR SWITCH         47390020
*  ANALYZE RENAME RETURN CODES                                          47400020
         CLI   RC,RC8              IS RETURN CODE = 8                   47440020
         BL    RENMERR             NO, RENAME ERROR                     47480020
*  CHECK UNUSUAL CONDITIONS                                             47520020
         LA    R2,SEQNUM+F1        POINT TO LAST BYTE OF VOLUME ENTRY   47560020
         LH    R3,VOLIST1          NUMBER OF VOLUMES                    47600020
NAMETEST CLI   F0(R2),NAMECHCK     DOES NEW NAME EXIST                  47640020
         BE    NMEONVOL            YES, ERROR                           47680020
         CLI   F0(R2),BADPASWD     INCORRECT PASSWORD SPECIFIED         47690020
         BE    ABEND913            YES, ERROR                           47700020
         LA    R2,F12(R2)          POINT TO NEXT VOLUME                 47720020
         BCT   R3,NAMETEST         IF MORE VOLUMES, GO CHECK THEM       47760020
         B     RENMERR             ELSE, RENAME ERROR                   47800020
BLDLERR  STC   R15,RC              SAVE BLDL RETURN CODE                47840020
         CLI   RC,RC4              IS RETURN CODE = 4                   47880020
         BE    NOMEM               YES, MEMBER NOT FOUND                47920020
         BAL   R11,DSNOTREN        GO GET FIRST LEVEL MESSAGE           47960020
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERTION         48000020
         LA    R2,S21              SECOND LEVEL MESSAGE NUMBER 21       48040020
         B     BLDSMSG             GO BUILD SECOND LEVEL MESSAGE        48080020
DSNOTREN LA    R10,DSNMESGL        POINT TO DSNAME INSERTION            48120020
         LA    R2,M07              MESSAGE NUMBER 7                     48160020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     48200020
         BR    R11                 RETURN FOR SECOND LEVEL MESSAGE      48240020
STWERROR STC   R15,RC              SAVE STOW RETURN CODE                48280020
         CLI   RC,RC8              IS RETURN CODE = 8                   48320020
         BE    NOMEM               YES, MEMBER NOT FOUND                48360020
         CLI   RC,RC4              IS RETURN CODE = 4                   48400020
         BE    NONEWMEM            YES, NEW MEMBER EXISTS               48440020
         CLI   RC,RC12             IS RETURN CODE = 12                  48480020
         BE    ALIASERR            YES, NO SPACE FOR ALIAS              48520020
         BAL   R11,DSNOTREN        GO GET FIRST LEVEL MESSAGE           48560020
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERTION         48600020
         LA    R2,S22              SECOND LEVEL MESSAGE NUMBER 22       48640020
         B     BLDSMSG             GO BUILD SECOND LEVEL MESSAGE        48680020
NODSN1   LA    R3,MEMMSG1          POINT TO MEMBER MESSAGE BUFFER       48720020
         L     R4,F8(R5)           POINT TO MEMBER NAME                 48760020
         LH    R2,F12(R5)          LENGTH OF MEMBER NAME                48800020
         BCTR  R2,R0               DECREMENT FOR EXECUTE INSTRUCTION    48840020
         EX    R2,MOVEINST         MOVE MEMBER NAME TO MESSAGE BUFFER   48880020
         LA    R2,F5(R2)           1 FOR EXECUTE, 4 FOR HEADER          48920020
         STH   R2,MEMMSGL1         SAVE LENGTH IN INSERTION BUFFER      48960020
         LA    R2,M09              MESSAGE NUMBER 9                     49000020
         LA    R10,MEMMSGL1        POINT TO MEMBER NAME INSERTION       49040020
         B     BLDMESG             GO WRITE MESSATE                     49080020
*  THIS ROUTINE CHECKS FOR ATTENTION INTERRUPT                          49120020
TESTATTN TM    RENCPECB,MASK1      IS ECB POSTED (DID INTERRUPT OCCUR)  49160020
         BO    CLUPRCC             YES, CLEANUP AND RETURN     @ZA01485 49200037
         BR    R14                 RETURN                               49240020
*        THIS ROUTINE PRINTS ERROR MESSAGES                             49280020
TPUT     BAL   R14,TESTATTN        GO CHECK FOR INTERRUPT               49320020
         LA    R1,IOPARM           POINT TO PUTLINE GENERAL PARAMETERS  49400020
         PUTLINE  PARM=PUT,OUTPUT=(OUTAREA1,MULTLVL),MF=(E,(1)),       X49440020
               TERMPUT=(EDIT,WAIT)                                      49480020
         LTR   R15,R15             TEST RETURN CODE                     49520020
         BZ    TESTSW              CONTINUE PROCESSING                  49560020
         LA    R3,F4               REGISTER 3 = 4                       49600020
         CR    R3,R15              DID ATTENTION OCCUR                  49640020
         BE    CLUPRCC             YES, CLEANUP AND RETURN     @ZA01485 49680037
TESTSW   LTR   R8,R8               PROCESSING ASTERISK                  49690020
         BZ    NOTSTAR             NO, CONTINUE                         49700020
         BAL   R14,SAVESTAR        YES, SAVE ASTERISK VALUE             49710020
NOTSTAR  CLI   UNALOCSW,SWON       IS UNALLOCATE SWITCH ON              49720020
         BE    UNALOCDS            YES, GO UNALLOCATE DATA SET          49760020
         B     LISTEST             NO CONTINUE PROCESSING               49800020
*  SUBROUTINE TO SAVE ASTERISK VALUE                                    49805000
SAVESTAR L     R2,STARPTR          POINT TO NEXT SLOT                   49810020
         LA    R3,STAREND          POINT TO END OF LIST                 49820020
         MVC   F0(F8,R2),LEVELSCN  MOVE ERROR VALUE TO LIST             49830020
         LA    R2,F8(R2)           POINT TO NEXT SLOT                   49832020
         CR    R3,R2               END OF LIST                          49834020
         BCR   EQ,R14              YES, RETURN                          49836020
         ST    R2,STARPTR          SAVE ADDRESS OF NEXT SLOT            49838020
         BR    R14                 RETURN                               49838420
*  ROUTINES TO SET UP ERROR MESSAGES                                    49839200
OVR20VOL BAL   R11,DSNOTREN        GO GET FIRST LEVEL MESSAGE           49840020
         LA    R2,S23              SECOND LEVEL MESSAGE NUMBER 23       49880020
         B     ZEROR10             GO BUILD SECOND LEVEL MESSAGE        49920020
RENMERR  BAL   R11,DSNOTREN        GO GET FIRST LEVEL MESSAGE           49960020
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERTION         50000020
         LA    R2,S20              SECOND LEVEL MESSAGE NUMBER 20       50040020
         B     BLDSMSG             GO BUILD SECOND LEVEL MESSAGE        50080020
BADCOMND LA    R2,M08              MESSAGE NUMBER 8                     50280020
         BAL   R14,MSGBLD          GO BUILD MESSAGE                     50360020
         MVI   ENDERROR,SWON       TURN ON END ERROR SWITCH             50400020
         BR    R11                 RETURN FOR SECOND LEVEL MESSAGE      50440020
BADKEYWD LA    R2,M05              MESSAGE NUMBER 5                     50480020
         BAL   R14,MSGBLD          GO BUILD MESSAGE                     50560020
         MVI   ENDERROR,SWON       TURN ON END ERROR SWITCH             50600020
         LA    R2,S16              SECOND LEVEL MESSAGE NUMBER 16       50640020
         B     ZEROR10             GO BUILD SECOND LEVEL MESSAGE        50680020
BADDSN5  BAL   R11,BADCOMND        GO GET FIRST LEVEL MESSAGE           50720020
         LA    R2,S27              SECOND LEVEL MESSAGE 27              50760020
         B     ZEROR10             GO BUILD SECOND LEVEL MESSAGE        50800020
BADDSN4  BAL   R11,BADCOMND        GO GET FIRST LEVEL MESSAGE           50840020
         LA    R2,S29              SECOND LEVEL MESSAGE NUMBER 29       50880020
         B     ZEROR10             GO BUILD SECOND LEVEL MESSAGE        50920020
BADDSN2  BAL   R11,BADCOMND        GO GET FIRST LEVEL MESSAGE           50960020
         LA    R2,S28              SECOND LEVEL MESSAGE NUMBER 28       51000020
         B     ZEROR10             GO BUILD SECOND LEVEL MESSAGE        51040020
UNCATBAD STH   R15,CATERCDE        SAVE UNCATALOG ERROR CODE            51060020
UNCATERR LA    R10,DSNMESGL        POINT TO DSNAME INSERTION            51080020
         LA    R2,M10              MESSAGE NUMBER 10                    51120020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     51160020
         MVI   ERRORSW,SWOFF       TURN ERROR SWITCH OFF                51180020
         LH    R15,CATERCDE        RESTORE UNCATALOG ERROR CODE         51200020
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERTION         51240020
         LA    R2,S10              SECOND LEVEL MESSAGE NUMBER 10       51280020
         B     BLDSMSG             GO BUILD MESSAGE                     51320020
*  ABEND MESSAGES                                                       51320500
IKJEH713 EQU   *                   ALIAS FOR ABEND713                   51321020
ABEND713 BAL   R11,MESG03          GO GET FIRST LEVEL MESSAGE           51326020
         LA    R2,S30              SECOND LEVEL MESSAGE 30              51328020
         B     ZEROR10             GO BUILD MESSAGE                     51330020
IKJEH913 EQU   *                   ALIAS FOR ABEND913                   51331020
ABEND913 LA    R10,DSNMESGL        POINT TO DSNAME INSERTION            51332020
         LA    R2,M16              MESSAGE NUMBER 16                    51334020
         B     BLDMESG             GO BUILD MESSAGE                     51336020
IKJEH13  EQU   *                   ALIAS FOR ABEND13                    51337020
ABEND13  LA    R10,DSNMESGL        POINT TO DSNAME INSERTION            51338020
         LR    R15,R1              MOVE ABEND CODE TO REGISTER 15       51340020
         LA    R2,M04              MESSAGE NUMBER 4                     51342020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     51344020
         BAL   R3,BITOHEX          GO SET RETURN CODE INSERTION         51346020
         LA    R2,S13              SECOND LEVEL MESSAGE 13              51348020
         B     BLDSMSG             GO BUILD MESSAGE                     51350020
NODDS    LA    R10,DSNMESGL        POINT TO DSNAME INSERTION            51360020
         LA    R2,M11              MESSAGE NUMBER 11                    51400020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     51440020
         LA    R2,S01              SECOND LEVEL MESSAGE 1               51450020
         B     ZEROR10             GO BUILD MESSAGE                     51460020
MESG03   LA    R10,DSNMESGL        POINT TO DSNAME INSERTION            51520020
         LA    R2,M03              MESSAGE NUMBER 3                     51560020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     51600020
         BR    R11                 RETURN FOR SECOND LEVEL              51610020
DSNOTFND LA    R10,DSNMESGL        POINT TO DSNAME INSERTION            51960020
         LA    R2,M01              MESSAGE NUMBER 1                     52000020
         B     BLDMESG             GO WRITE MESSAGE                     52040020
VOLNTMTD LA    R2,M13              MESSAGE NUMBER 13                    52200020
         LA    R10,DSNMESGL        POINT TO INSERTION                   52240020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     52280020
         LA    R2,S03              SECOND LEVEL MESSAGE NUMBER 3        52320020
         B     ZEROR10             GO BUILD SECOND LEVEL MESSAGE        52360020
DSNTOVOL LA    R2,M12              MESSAGE NUMBER 12                    52400020
         LA    R10,DSNMESGL        POINT TO INSERTION                   52440020
         BAL   R14,MSGBUILD        GO BUILD MESSAGE                     52480020
         LA    R2,S02              SECOND LEVEL MESSAGE NUMBER2         52520020
         B     ZEROR10             GO BUILD SECOND LEVEL MESSAGE        52560020
PARSEERR STC   R15,RC              SAVE PARSE RETURN CODE               52600020
         MVI   STACKSW,SWON        TURN STACK SWITCH ON                 52610020
         CLI   RC,RC12             ATTENTION INTERRUPT OR NOPROMPT      52640020
         BL    CLUPRCC             YES, CLEANUP AND RETURN     @ZA01485 52680037
         MVI   ENDERROR,SWON       TURN ON END ERROR SWITCH             52720020
         BH    NOSPACE             NO CORE                              52800020
         BAL   R11,MESG25          GO BUILD MESSAGE                     52810020
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERTION         52820020
         LA    R2,S08              SECOND LEVEL MESSAGE 8               52830020
         B     BLDSMSG             GO BUILD MESSAGE                     52840020
MESG25   LA    R2,M25              MESSAGE 25                           52860020
         BAL   R14,MSGBLD          GO BUILD MESSAGE                     52870020
         BR    R11                 RETURN FOR SECOND LEVEL              52880020
NOSPACE  LA    R2,M02              MESSAGE NUMBER 2                     52920020
NOINSERT SR    R10,R10             NO INSERTION                         52930020
BLDMESG  BAL   R14,MSGBUILD        GO BUILD MESSAGE                     52940020
         B     TPUT                GO WRITE MESSAGE                     52950020
SAVUNQL1 EX    R2,MOVEINST         DSNAME TO MESSAGE BUFFER             53010020
         LA    R2,F5(R2)           1 EXECUTE, 4 HEADER                  53060020
         B     SAVELN1             GO SAVE LENGTH                       53120020
SAVUNQL2 EX    R2,MOVEINST         DSNAME TO MESSAGE BUFFER             53130020
         LA    R2,F5(R2)           1 EXECUTE, 4 HEADER                  53140020
         B     SAVELN2             GO SAVE LENGTH                       53152020
DAERROR  BAL   R11,MESG25          GO GET FIRST LEVEL MESSAGE           53154020
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERTION         53156020
         LA    R2,S15              SECOND LEVEL MESSAGE 15              53158020
         B     BLDSMSG             GO BUILD MESSAGE                     53158420
CIRLTST  LA    R5,F4               PUT A FOUR IN REG 5         @YL026YB 53158600
         CR    R15,R5              SEE IF REG 15 CONTAINS A 4  @YL026YB 53158800
         BNE   CIRERROR            NO RETURN CODE IN CIRLOCRC  @YL026YB 53159000
         SR    R8,R8               CLEAR ASTERISK INDICATOR    @YL026YB 53159200
         B     DSNOTFND            GO BUILD MESSAGE            @ZA06145 53159437
CIRERROR LA    R10,STARBUFF        POINT TO INSERTION                   53160020
         LA    R2,M19              MESSAGE NUMBER 19                    53200020
         SR    R8,R8               CLEAR ASTERISK INDICATOR             53210020
         B     BLDMESG             GO BUILD MESSAGE                     53240020
*  CATALOG ERROR MESSAGES                                               53260000
DSNCATLG LH    R15,DA08CTRC-DAPB08(R2) CATALOG RETURN CODE              53280020
         STC   R15,RC              SAVE CATALOG RETURN CODE             53320020
         CLI   RC,RC8              RETURN CODE = 8                      53440020
         BL    VOLNTMTD            VOLUME NOT MOUNTED                   53450020
         CLI   RC,RC20             RETURN CODE = 20                     53460020
         BH    CATLGIO             CATALOG I/O ERROR                    53470020
         BNE   DSNOTFND            DATA SET NOT CATALOGED               53480020
         BAL   R11,SYSTEMER        GO GET FIRST LEVEL MESSAGE           53520020
         BAL   R3,BITOHEX          GO SET RETURN CODE INSERTION         53560020
         LA    R2,S04              SECOND LEVEL MESSAGE NUMBER 4        53600020
         B     BLDSMSG             GO BUILD MESSAGE                     53640020
DSNBIG1  LA    R10,DSNMESGL        POINT TO INSERTION                   53680020
         LA    R1,DSLO             POINT TO DSNAME BUFFER               53690020
DSNBIG   L     R4,UPTSAVE          UPT ADDRESS                 @YL026YB 53760000
         LA    R3,F4(R10)          DSNAME INSERTION BUFFER              53790000
         SR    R2,R2               CLEAR REGISTER                       53820000
         IC    R2,UPTPREFL-UPT(R4) LENGTH OF USERID            @YL026YB 53850000
         LTR   R2,R2               CHECK PREFIXING LENGTH FOR ZERO      53880000
         BZ    NOPREX2             NO PREFIXING                         53910000
         EX    R2,MOVE1            USERID TO DSNAME BUFFER     @YL026YB 53940000
*  THIS MOVED ONE EXTRA BYTE WHICH WILL NOW BE OVERLAID WITH A PERIOD   54000020
         AR    R3,R2               POINT PAST USERID                    54040020
         MVI   F0(R3),PERIOD       MOVE IN PERIOD                       54080020
         LA    R3,F1(R3)           POINT PAST PERIOD                    54120020
NOPREX2  LA    R4,F2(R1)           ADDRESS OF DATA SET NAME             54160000
         LH    R5,F0(R1)           LENGTH OF DATA SET NAME              54200020
         AR    R2,R5               PLUS LENGTH OF USERID                54240020
         LA    R2,F5(R2)           ONE FOR PERIOD, FOUR FOR HEADER      54280020
         BCTR  R5,R0               DECREMENT FOR EXECUTE                54320020
         EX    R5,MOVEINST         MOVE DATA SET NAME TO USERID         54360020
         STH   R2,F0(R10)          SAVE TOTAL LENGTH                    54400020
         LA    R2,M18              MESSAGE NUMBER 18                    54440020
         B     BLDMESG             GO BUILD AND WRITE MESSAGE           54520020
*  CONVERT RETURN CODE, SUPPRESS LEADING ZEROS AND MOVE TO INSERTION    54560020
*  BUFFER.  INPUT - R15 CONTAINS RETURN CODE TO BE CONVERTED            54600020
*           OUTPUT - R10 POINTS TO INSERTION BUFFER                     54640020
*  R2 IS THE RETURN REGISTER                                            54680020
CONVRTRC CVD   R15,UNPACK          CONVERT TO PACKED DECIMAL FORMAT     54720020
         UNPK  COUNT,UNPACK        CONVERT TO ZONED FORMAT              54760020
         OI    SIGNBYTE,ZONE       ZONE OVER SIGN                       54800020
*  SUPPRESS LEADING ZEROS IN RETURN CODE                                54840020
         LA    R4,COUNT            POINT TO COUNT BUFFER                54880020
         LA    R5,F7               R5 = 7                               54920020
SUPPZERO CLI   F0(R4),FOXZERO      IS THIS LEADING ZERO                 54960020
         BNE   NOTZERO             NO, GO MOVE RETURN CODE              55000020
         LA    R4,F1(R4)           YES, POINT TO NEXT DIGIT             55040020
         BCT   R5,SUPPZERO         GO CHECK NEXT DIGIT                  55080020
NOTZERO  LA    R5,ENDCOUNT         POINT PAST COUNT BUFFER              55120020
         SR    R5,R4               NUMBER OF SIGNIFICANT DIGITS IN R5   55160020
         BCTR  R5,R0               DECREMENT FOR EXECUTE                55200020
         LA    R3,RCMESG           POINT TO RETURN CODE BUFFER          55240020
         EX    R5,MOVEINST         MOVE RETURN CODE TO INSERTION BUFFER 55280020
         LA    R5,F5(R5)           4 FOR HEADER AND 1 FOR EXECUTE       55320020
         STH   R5,RCMESGL          LENGTH OF RETURN CODE INSERTION      55360020
         LA    R10,RCMESGL         POINT TO INSERTION BUFFER            55400020
         BR    R2                  RETURN                               55440020
*  BINARY TO HEXIDECIMAL CONVERSION ROUTINE                             55441020
*        INPUT - R15 CONTAIN RETURN CODE TO BE CONVERTED                55442020
*        OUTPUT - R10 POINTS TO INSERTION BUFFER                        55443020
*  R3 IS THE RETURN REGISTER                                            55444020
BITOHEX  SLL   R15,F16             SHIFT RETURN CODE TO HIGH HALF REG.  55445020
         LA    R10,RCMESG          POINT TO RETURN CODE BUFFER          55446020
         LA    R5,F4               FOUR HALF BYTES TO CONVERT           55447020
HEXLOOP  XR    R14,R14             CLEAR REGISTER                       55448020
         SLDL  R14,F4              MOVE HALF BYTE TO WORK REGISTER      55449020
         IC    R14,TRANSTAB(R14)   SELECT CHARACTER                     55450020
         STC   R14,F0(R10)         PUT CHARACTER IN RETURN CODE BUFFER  55451020
         LA    R10,F1(R10)         UP POINTER FOR NEXT CHARACTER        55452020
         BCT   R5,HEXLOOP          IF MORE TO CONVERT, CONTINUE         55453020
         CLI   RCMESG,FOXZERO      TEST FOR LEADING ZERO                55454020
         BNE   HEXGO               NOT ZERO,                            55455020
         MVI   RCMESG,BLANK        SUPPRESS LEADING ZERO                55456020
HEXGO    LA    R14,F8              4 FOR LENGTH PLUS FOUR FOR HEADER    55457020
         STH   R14,RCMESGL         LENGTH TO INSERTION BUFFER           55458020
         LA    R10,RCMESGL         POINT TO INSERTION BUFFER            55459020
         BR    R3                  RETURN                               55460020
*  THIS IS THE MESSAGE BUILD SUBROUTINE.  IT ACCESSES THE MESSAGE CSECT 55480020
*  TO OBTAIN THE ADDRESS OF THE MESSAGE SEGMENT AND THE OFFSET AT WHICH 55520020
*  ANY INSERTIONS WILL BE MADE.                                         55560020
*  AT ENTRY R2 CONTAINS MESSAGE NUMBER AND R10 CONTAINS ADDRESS OF THE  55600020
*  INSERTION.  R14 IS THE RETURN REGISTER  (R10 = 0 IS NO INSERTION)    55640020
*                                                                       55680020
MSGBLD   SR    R10,R10             NO INSERTION                         55690020
MSGBUILD SR    R3,R3               ZERO REGISTER                        55720020
         ST    R3,OUTAREA1         SET POINTER INDICATING ONE MESSAGE   55760020
         MVI   OUTAREA1,ENDTEST    FLAG END OF MESSAGE CHAIN            55800020
         L     R1,VCONMSG          ADDRESS OF MESSAGE BRANCH TABLE      55840020
         BCTR  R2,R0               DECREMENT MESSAGE NUMBER             55880020
         SLL   R2,TWO              MULTIPLY MESSAGE NUMBER BY 4         55920020
         L     R3,F0(R2,R1)        LOAD BRANCH TABLE ENTRY              55960020
         ST    R3,WORKWORD         SAVE THIS ENTRY                      56000020
         LA    R3,F0(R3)           CLEAR HIGH ORDER BYTE                56040020
         ST    R3,OUTPUT11         MESSAGE ADDRESS TO OUTPUT LIST       56080020
         LTR   R10,R10             IS THERE AN INSERTION                56120020
         BZ    NOINSRT1            NO, GO SET SEGMENT COUNT TO 1        56160020
         SR    R2,R2               ZERO REGISTER                        56200020
         IC    R2,WORKWORD         GET OFFSET FOR INSERTION             56240020
         STH   R2,F2(R10)          STORE OFFSET IN MESSAGE OFFSET FIELD 56280020
         ST    R10,OUTPUT12        INSERTION ADDRESS TO OUTPUT LIST     56320020
         LA    R2,TWO              2 SEGMENTS                           56360020
SETCNT1  ST    R2,OUTCNT1          SET SEGMENT COUNT                    56400020
         MVI   ERRORSW,SWON        TURN ERROR SWITCH ON                 56420020
         MVI   STACKSW,SWON        TURN STACK SWITCH ON                 56430020
         BR    R14                 RETURN                               56440020
NOINSRT1 LA    R2,ONE              ONE SEGMENT                          56480020
         B     SETCNT1             GO SET SEGMENT COUNT                 56520020
*                                                                       56560020
*  THIS IS THE SECOND LEVEL MESSAGE BUILD SUBROUTINE.  IT ACCESSES THE  56600020
*  MESSAGE CSECT TO OBTAIN THE ADDRESS OF THE SECOND LEVEL MESSAGE AND  56640020
*  THE OFFSET AT WHICH ANY INSERTIONS WILL BE MADE.                     56680020
*  AT ENTRY R2 CONTAINS SECOND LEVEL MESSAGE NUMBER AND R10 CONTAINS    56720020
*  ADDRESS OF THE INSERTION.  (R10 = 0 IS NO INSERTION).                56760020
*  MESSAGE IS BUILT AND CONTROL PASSED TO TPUT ROUTINE TO WRITE MESSAGE 56800020
*                                                                       56840020
ZEROR10  SR    R10,R10             NO INSERTION                         56850020
BLDSMSG  EQU   *                   ALIAS FOR SMSGBLD                    56860020
SMSGBLD  SR    R3,R3               ZERO REGISTER                        56880020
         ST    R3,OUTAREA2         SET POINTER INDICATING LAST MESSAGE  56920020
         MVI   OUTAREA2,ENDTEST    FLAG END OF MESSAGE CHAIN            56960020
         LA    R3,OUTAREA2         POINT TO SECOND LEVEL MESSAGE CHAIN  57000020
         ST    R3,OUTAREA1         CHAIN SECOND LEVEL TO FIRST LEVEL    57040020
         L     R1,VCONSMSG         SECOND LEVEL MESSAGE BRANCH TABLE    57080020
         BCTR  R2,R0               DECREMENT MESSAGE NUMBER             57120020
         SLL   R2,TWO              MULTIPLY MESSAGE NUMBER BY 4         57160020
         L     R3,F0(R2,R1)        LOAD BRANCH TABLE ENTRY              57200020
         ST    R3,WORKWORD         SAVE THIS ENTRY                      57240020
         LA    R3,F0(R3)           CLEAR HIGH ORDER BYTE                57280020
         ST    R3,OUTPUT21         MESSAGE ADDRESS TO OUTPUT LIST       57320020
         LTR   R10,R10             IS THERE AN INSERTION                57360020
         BZ    NOINSRT2            NO, GO SET SEGMENT COUNT TO 1        57400020
         SR    R2,R2               ZERO REGISTER                        57440020
         IC    R2,WORKWORD         GET OFFSET FOR INSERTION             57480020
         STH   R2,F2(R10)          STORE OFFSET IN MESSAGE OFFSET FIELD 57520020
         ST    R10,OUTPUT22        INSERTION ADDRESS TO OUTPUT LIST     57560020
         LA    R2,TWO              2 SEGMENTS                           57600020
SETCNT2  ST    R2,OUTCNT2          SET SEGMENT COUNT                    57640020
         B     TPUT                GO WRITE MESSAGE                     57680020
NOINSRT2 LA    R2,ONE              ONE SEGMENT                          57720020
         B     SETCNT2             GO SET SEGMENT COUNT                 57760020
SETSW    MVI   DEFLTSW,SWON        TURN DEFAULT SWITCH ON               57770020
*  NOW MOVE UPDATED DSNAME TO MESSAGE AREA                              57800020
ERRORDS1 LH    R2,DSLO             LENGTH OF FULLY QUALIFIED DSNAME     57840020
         LA    R3,DSNMSG1          POINT TO MESSAGE INSERTION BUFFER    57880020
         LA    R4,DSNO             POINT TO DATA SET NAME               57920020
         LA    R5,DSNAME1          POINT TO PDE FIRST DSNAME            57960020
         TM    F6(R5),QUOTEMSK     WAS DATA SET NAME QUOTED             58000020
         BO    SAVENME1            YES, GO SAVE NAME                    58040020
         L     R5,UPTSAVE          ADDRESS OF UPT              @YL026YB 58080000
         SR    R1,R1               CLEAR REGISTER                       58100000
         IC    R1,UPTPREFL-UPT(R5) LENGTH OF USERID            @YL026YB 58120000
         LTR   R1,R1               CHECK PREFIXING LENGTH      @YL026YB 58140000
         BZ    SAVENME1            NO PREFIXING                @YL026YB 58160000
         LA    R1,F1(R1)           PLUS ONE FOR THE PERIOD              58200020
         SR    R2,R1               SUBTRACT LENGTH OF USERID            58240020
         AR    R4,R1               POINT PAST USERID                    58280020
SAVENME1 BCTR  R2,R0               DECREMENT FOR EXECUTE INSTRUCTION    58320020
         EX    R2,MOVEINST         MOVE DSNAME TO ERROR BUFFER          58360020
         LA    R2,F5(R2)           1 FOR EXECUTE, 4 FOR HEADER          58400020
         STH   R2,DSNMSGL1         SAVE LENGTH OF DATA SET NAME         58440020
         CLI   DEFLTSW,SWON        IS NAME FROM DEFAULT ROUTINE         58480020
         BE    QUAL2               YES, GO QUALIFY SECOND DSNAME        58520020
         CLI   ISWITCH,SWON        IS THIS INDEX '*' NAME               58560020
         BE    RENSEQDS            YES, GO VALIDITY CHECK NAME          58600020
BLDDSN2  LA    R3,DSNN             POINT TO BUILD BUFFER                58680020
         LA    R4,DSNBUFFN         POINT TO INDEX STRUCTURE             58720020
         L     R2,STARADR2         LOAD POINTER TO ASTERISK             58760020
         SR    R2,R4               LENGTH OF DSNAME TO ASTERISK         58800020
         LR    R1,R2               LENGTH OF STRUCTURE TO ASTERISK      58840020
         LA    R1,F1(R1)           LENGTH OF DSNAME INCLUDING ASTERISK  58880020
         EX    R2,MOVEINST         MOVE INDEX STRUCTURE                 58920020
*  THIS MOVES ONE EXTRA BYTE WHICH WILL BE OVERLAID WITH THE QUALIFIER  58960020
         AR    R3,R2               POINT PAST MOVED STRUCTURE           59000020
         LH    R5,NAMELTH          LENGTH OF QUALIFIER                  59040020
         AR    R2,R5               TOTAL LENGTH NAME PLUS QUALIFIER     59080020
         LA    R4,LEVELSCN         POINT TO QUALIFIER NAME              59120020
         BCTR  R5,R0               DECREMENT FOR EXECUTE INSTRUCTION    59160020
         EX    R5,MOVEINST         MOVE QUALIFIER TO NAME               59200020
         CH    R1,DSBLN            PROCESSING '*' NAME                  59240020
         BNE   BLDINDX2            NO, GO BUILD INDEX NAME              59280020
         STH   R2,DSLN             SAVE TOTAL LENGTH                    59320020
         B     ERRORDS2            GO SAVE SECOND DSNAME FOR MESSAGE    59360020
BLDINDX2 AR    R3,R5               POINT PAST INDEX NAME                59400020
         LA    R3,F1(R3)           PLUS ONE FROM EXECUTE                59440020
         L     R4,STARADR2         POINT AT ASTERISK                    59480020
         LA    R4,F1(R4)           POINT PAST ASTERISK                  59520020
         LA    R5,DSNBUFFN         POINT TO DSNAME                      59560020
         AH    R5,DSBLN            POINT PAST DSNAME                    59600020
         SR    R5,R4               LENGTH OF DSNAME AFTER ASTERISK      59640020
         AR    R2,R5               TOTAL LENGTH OF COMPLETE DSNAME      59680020
         CH    R2,MAXLENTH         MORE THAN 44 CHARACTERS              59720020
         BH    DSNBIG2             YES, ERROR                           59760020
         STH   R2,DSLN             SAVE TOTAL LENGTH                    59800020
         BCTR  R5,R0               DECREMENT FOR EXECUTE INSTRUCTION    59840020
         EX    R5,MOVEINST         MOVE REST OF NAME           @YL026YB 59880000
ERRORDS2 LH    R2,DSLN             LENGTH OF FULLY GUALIFIED DSNAME     59960020
         LA    R3,DSNMSG2          POINT TO MESSAGE INSERTION BUFFER    60000020
         LA    R4,DSNN             POINT TO DATA SET NAME               60040020
         LA    R5,DSNAME2          POINT TO PDE SECOND DSNAME           60080020
         TM    F6(R5),QUOTEMSK     WAS DATA SET NAME QUOTED             60120020
         BO    SAVENME2            YES, GO SAVE NAME                    60160020
         L     R5,UPTSAVE          ADDRESS OF PSCB             @YL026YB 60200000
         SR    R1,R1               ZERO REGISTER               @YL026YB 60220000
         IC    R1,UPTPREFL-UPT(R5) LENGTH OF USERID            @YL026YB 60240000
         LTR   R1,R1               CHECK PREFIXING LENGTH               60260000
         BZ    SAVENME2            NO PREFIXING                         60280000
         LA    R1,F1(R1)           PLUS ONE FOR THE PERIOD              60320020
         SR    R2,R1               SUBTRACT LENGTH OF USERID            60360020
         AR    R4,R1               POINT PAST USERID                    60400020
*  SAVE SECOND NAME IF FIRST NAME BAD                                   60420000
SAVENME2 BCTR  R2,R0               DECREMENT FOR EXECUTE INSTRUCTION    60440020
         EX    R2,MOVEINST         MOVE DSNAME TO ERROR BUFFER          60480020
         LA    R2,F5(R2)           1 FOR EXECUTE, 4 FOR HEADER          60520020
         STH   R2,DSNMSGL2         SAVE LENGTH OF DATA SET NAME         60560020
         B     MEMCHECK            GO CHECK FOR MEMBER NAMES            60600020
*  BUILD FULLY QUALIFIED NAMES                                          60640000
QUALIFY1 LA    R1,DFLTPARM         POINT TO DEFAULT PARAMETER LIST      60680020
         LINK  EP=IKJDFLT          GO TO DEFAULT SERVICE ROUTINE        60760020
         B     DFLTERR1(R15)       ANALYZE DEFAULT RETURN CODE          60810020
DFLTERR1 B     SETSW               DEFAULT RETURN CODE = 0              60860020
         B     FLUSH               DEFAULT RETURN CODE = 4              60910020
         B     DSNBIG1             DEFAULT RETURN CODE = 8              60960020
         B     FLUSH               DEFAULT RETURN CODE = 12             61010020
         B     DSNOTFND            DEFAULT RETURN CODE = 16             61060020
         B     DSNOTFND            DEFAULT RETURN CODE = 20             61110020
         B     FLUSH               DEFAULT RETURN CODE = 24             61120020
         B     DEFAULT             DEFAULT RETURN CODE = 28             61130020
         B     FLUSH               DEFAULT RETURN CODE = 32             61140020
         B     DSNOTFND            DEFAULT RETURN CODE = 36             61150020
DEFAULT  BAL   R11,MESG25          GO GET FIRST LEVEL MESSAGE           61152020
         BAL   R2,CONVRTRC         GO SET RETURN CODE INSERTION         61200020
         LA    R2,S07              SECOND LEVEL MESSAGE NUMBER 7        61240020
         B     BLDSMSG             GO BUILD SECOND LEVEL MESSAGE        61280020
QUALIFY2 LA    R14,DFLTPBLK        DEFAULT PARAMETER BLOCK              61290020
         USING DFPB,R14            ADDRESSABILITY FOR DFPB              61300020
         LA    R2,DSLN             NEW DATA SET NAME                    61310020
         ST    R2,DFPBDSN          TO PARAMETER BLOCK                   61320020
         MVI   DFPBCODE,DFPB0C     SET ENTRY CODE                       61330020
         CLI   QUALBUFF,BLANK      WAS QUALIFIER RETURNED               61340020
         BNE   QUALRET             YES, SET CONTROL TO USE IT           61350020
         MVI   DFPBCNTL,DFPBUID    SET CONTROL BYTE                     61360020
         B     QUALGO              CONTINUE                             61362020
QUALRET  MVI   DFPBCNTL,DFPBUID+DFPBADD SET CONTROL BYTE                61364020
QUALGO   LA    R1,DFLTPARM         DEFAULT PARAMETER LIST               61366020
         DROP  R14                 DFPB NO LONGER NEEDED                61368420
         LINK  EP=IKJDFLT          QUALIFY SECOND DSNAME                61368820
         B     DFLTERR2(R15)       ANALYZE DEFAULT RETURN CODE          61369220
DFLTERR2 B     ERRORDS2            DEFAULT RETURN CODE = 0              61369620
         B     FLUSH               DEFAULT RETURN CODE = 4              61369720
         B     DSNBIG2             DEFAULT RETURN CODE = 8              61369820
         B     FLUSH               DEFAULT RETURN CODE = 12             61369920
         B     INDEXBAD            DEFAULT RETURN CODE = 16             61370020
         B     DEFAULT             DEFAULT RETURN CODE = 20             61380020
         B     FLUSH               DEFAULT RETURN CODE = 24             61430020
         B     DEFAULT             DEFAULT RETURN CODE = 28             61432020
         B     FLUSH               DEFAULT RETURN CODE = 32             61434020
         B     DEFAULT             DEFAULT RETURN CODE = 36             61436020
FLUSH    MVI   STACKSW,SWON        TURN STACK SWITCH ON                 61438020
         B     CLUPRCC             EXIT                        @ZA01485 61438437
         EJECT                                                          61440020
*                                                                       61480020
*              WORKAREA - REQUIRED CONSTANTS (IKJEHRN2)                 61520020
*                                                                       61560020
RN2CNSTS DS    0F                  CONSTANTS FOR IKJEHRN2 BEGIN HERE    61570020
VCONMSG  DC    V(IKJEHMSG)         ENTRY MESSAGE CSECT 1ST LEVEL        61600020
VCONSMSG DC    V(IKJEHSMG)         ENTRY MESSAGE CSECT 2ND LEVEL        61640020
VCONRN3  DC    V(IKJEHRN3)         ENTRY POINT THIRD CSECT              61650020
VCONRN4  DC    V(IKJEHRN4)         ENTRY POINT FOURTH CSECT    @YL026YB 61660000
FOXMASK  DC    X'FFFFFFFF'         MASK TO COMPLEMENT GENERATION NAME   61666000
SUBPOL1  DC    X'01000000'         SUBPOOL NUMBER              @YL026YB 61672000
         DS    0H                  ALIGN HALF WORD BOUNDRY              61680020
DARC0204 DC    X'0204'             DARC NO CORE                         61720020
DARC0210 DC    X'0210'             DARC DATA SET IN USE                 61760020
DARC0218 DC    X'0218'             DARC VOLUME NOT MOUNTED              61800020
DARC6708 DC    X'6708'             DARC DATA SET NOT ON VOLUME          61840020
DARC021C DC    X'021C'             DARC BAD UNIT INFORMATION            61850020
DARC0214 DC    X'0214'             DARC NO UNIT AVAILABLE               61860020
DARC041C DC    X'041C'             DARC MULTI VOLUME DATA SET           61870020
MAXLENTH DC    H'44'               MAXIMUM DATA SET LENGTH              61880020
MINMAX   DC    H'10000'            LENGTH FOR GETMAIN AREA     @ZA27595 61920003
MOVEINST MVC   F0(F0,R3),F0(R4)    MOVE INSTRUCTION FOR EXECUTE         61926000
MOVE1    MVC   F0(F0,R3),UPTPREFX-UPT(R4)  MOVE INSTRUCTION FOR EX.     61932000
TRANSTAB DC    C'0123456789ABCDEF' TRANSLATE TABLE FOR BITOHEX ROUTINE  61940020
         EJECT                                                          61960020
IKJEHRN3 CSECT                                                          61962020
         USING IKJEHRN3,R15        ADDRESSABILITY FOR CSECT             61964020
         USING IHADCB,R1X          ADDRESSABILITY FOR WORKAREA          61966020
*********************************************************************** 61970020
*              ASTERISK SCAN ROUTINE                                    61980020
*  THIS ROUTINE SCANS THE DATA SET NAME AND LOCATES ASTERISK            61990020
*  QUALIFIERS, IF PRESENT.  IT ALSO CHECKS THAT THE ASTERISK DOES NOT   61992020
*  OCCUR IN THE FIRST INDEX LEVEL AND THAT THERE IS NOT MORE THAN ONE   61994020
*  ASTERISK IN THE DATA SET NAME.  NOTE-  THE SCAN BY PARSE HAS CHECKED 61996020
*  SYNTAX OF DATA SET NAME WITH ASTERISK ALLOWED IN PLACE OF ANY INDEX  61998020
*  LEVEL.                                                               61998420
*  INPUT-      R2 POINTS TO DSNAME TO BE SCANNED                        61998820
*              R3 CONTAINS LENGTH OF THIS DSNAME                        61999220
*              R14 IS RETURN REGISTER                                   61999620
*  REGISTERS 2, 3, 4, AND 6 ARE USED                                    61999720
*  RETURN IS AS FOLLOWS-                                                61999820
*              0 PAST R14 IF * FOUND IN FIRST INDEX LEVEL               61999920
*              4 PAST R14 IF MORE THAN ONE * FOUND                      62013220
*              8 PAST R14 IF SCAN SUCCESSFULLY COMPLETED                62023220
*                                                                       62025220
SCANDSN  SR    R4,R4               ZERO REGISTER                        62025620
         ST    R4,STARADR2         ZERO POINTER TO ASTERISK             62026020
         STC   R4,STARLEV2         ZERO ASTERISK LEVEL INDICATOR        62026420
         AR    R3,R2               ADD LENGTH AND ADDRESS               62026520
*  REGISTER 3 POINTS PAST LAST CHARACTER OF DATA SET NAME               62026620
         LA    R4,F1               INITIALIZE LEVEL COUNTER TO ONE      62031020
         LR    R6,R4               SET REG 6 TO ONE FOR A LATER TEST    62033020
STARTST2 CLI   F0(R2),STAR         IS THIS CHARACTER AN ASTERISK        62035020
         BE    LEVLTST2            IF *, CHECK INDEX LEVEL              62035420
NXTCHAR2 LA    R2,F1(R2)           POINT TO NEXT CHARACTER              62035520
         CR    R2,R3               ARE THERE MORE CHARACTERS            62046620
         BE    ADD8                IF NOT SCAN IS FINISHED              62056620
         CLI   F0(R2),PERIOD       CHECK FOR PERIOD (NEW INDEX LEVEL)   62057020
         BNE   NXTCHAR2            IF NOT, CHECK NEXT CHARACTER         62057420
         LA    R4,F1(R4)           INCREMENT LEVEL COUNTER              62057520
         LA    R2,F1(R2)           POINT TO NEXT CHARACTER              62057620
         B     STARTST2            NEW INDEX LEVEL, GO CHECK FOR *      62057720
LEVLTST2 CR    R4,R6               IS THIS FIRST INDEX LEVEL            62061420
         BCR   EQ,R14              YES ERROR, * IN FIRST INDEX LEVEL    62063420
         CLI   STARLEV2,ZERO       IS LEVEL INDICATOR ZERO              62063820
         BNE   ADD4                NO, ERROR, MORE THAN ONE ASTERISK    62064220
         ST    R2,STARADR2         SAVE ADDRESS OF ASTERISK             62064620
         STC   R4,STARLEV2         SAVE LEVEL AT WHICH ASTERISK FOUND   62065020
         B     NXTCHAR2            GO CHECK NEXT CHARACTER              62065120
ADD4     LA    R14,F4(R14)         BUMP RETURN ADDRESS BY 4             62068820
         BR    R14                 RETURN                               62068920
ADD8     LA    R14,F8(R14)         BUMP RETURN ADDRESS BY 8             62070920
         BR    R14                 RETURN                               62071320
         DROP  R15                 IKJEHRN3 NO LONGER NEEDED            62071420
*                                                                       62071720
*  WHEN THE SCAN IS FINISHED                                            62072120
*        STARLEV2 WILL CONTAIN LEVEL AT WHICH ASTERISK FOUND            62072520
*        STARADR2 WILL CONTAIN ADDRESS AT WHICH ASTERISK FOUND          62082020
*        BOTH WILL CONTAIN ZERO IF NO ASTERISK FOUND                    62084020
*                                                                       62086020
*********************************************************************** 62088020
*                                                                       62090000
*                                                                       62090100
         EJECT                                                 @YL026YB 62090200
IKJEHRN4 CSECT                                                 @YL026YB 62090300
         USING IKJEHRN4,R15        ADDRESSABLILITY FOR CSECT   @YL026YB 62090400
         USING IHADCB,R1X          ADDRESSABILITY FOR WKAREA   @YL026YB 62090500
*********************************************************************** 62090600
*  THIS SECTION DETERMINES THE LENGTH OF INDEX NAMES AND DATA SET NAMES 62090700
*  FROM THE CATALOG.  THESE NAMES HAVE A MAXIMUM LENGTH OF 8 WHEN       62090800
*  THE ASTERISK IS IN THE LAST POSITION OF THE DATA SET TO BE RENAMED.  62090900
*  OTHERWISE THE MAXIMUM LENGTH OF THE NAMES IS 44. A BLANK    @YL026YB 62091000
*  HAS BEEN STORED IN THE LAST  BYTE OF THE SCAN  BUFFER . THE SCAN     62091100
*  STARTS WITH THE 2ND BYTE AND CONTINUES UNTIL A BLANK IS FOUND.       62091200
*                                                                       62091300
NAMESCAN CLI   CIRPARM,INDEXOPT    IS IT A LIST NAME ENTRY     @YL026YB 62091400
         BE    BLDLIST             YES,GO PROCESS LIST ENTRY   @YL026YB 62091500
         LA    R2,LEVELSCN         ADDRESS OF SCAN BUFFER      @YL026YB 62091600
         MVC   F0(F8,R2),F1(R8)    MOVE NAME TO SCAN BUFFER    @YL026YB 62091700
         LA    R8,F9(R8)           BUMP POINTER FOR NAME ENTRY @YL026YB 62091800
*  TEST FOR GENERATION DATA GROUP DATA SET NAME                @YL026YB 62091900
         CLI   F0(R2),CHARG        TEST FOR G                  @YL026YB 62092000
         BNE   CHCKSTAR            NO,CONTINUE                 @YL026YB 62092100
         CLI   F5(R2),CHARV        TEST FOR V                  @YL026YB 62092200
         BNE   CHCKSTAR            NO, CONTINUE                @YL026YB 62092300
         LA    R6,F4               SET LOOP CONTROL            @YL026YB 62092400
GDGLOOP  LA    R3,F0(R6,R2)        POINT TO CHARACTER TO BE TESTED      62092500
         TM    F0(R3),COMPZONE     TEST FOR COMPLEMENTED NUMBER         62092600
         BNZ   CHCKSTAR            NOT COMPLEMENT, CONTINUE    @YL026YB 62092700
         BCT   R6,GDGLOOP          CHECK NEXT CHARACTER        @YL026YB 62092800
         XC    F1(F4,R2),FOXMASK   COMPLEMENT GENERATION NAME  @YL026YB 62092900
*  NOW SEE IF THIS IS ERROR VALUE ALREADY ATTEMPTED            @YL026YB 62093000
CHCKSTAR L     R6,STARPTR          POINT TO END OF CURRENT LIST         62093100
         LA    R3,STARLIST         POINT TO FIRST ENTRY        @YL026YB 62093200
STARLOOP CR    R6,R3               END OF LIST                 @YL026YB 62093300
         BE    CHECKOPT            YES, GO SCAN ASTERISK VALUE @YL026YB 62093400
         CLC   F0(F8,R3),LEVELSCN  COMPARE * VALUE TO ERROR LIST        62093500
         BE    ERRPROC             ERROR VALUE  ALREADY TRIED  @YL026YB 62093600
         LA    R3,F8(R3)           POINT TO NEXT VALUE OF * (ERROR)     62093700
         B     STARLOOP            GO CHECK THIS VALUE         @YL026YB 62093800
CHECKOPT CLI   CIRPARM,INDEXOPT    PROCESSING LIST NAMES       @YL026YB 62093900
         BE    INDXPTR             GO CHECK NAME AFTER '*'     @YL026YB 62094000
*  THE FIRST CHARACTER IS A NON-BLANK, THEREFORE START SCAN WITH        62094100
*  SECOND CHARACTER                                            @YL026YB 62094200
STARTSCN LA    R2,F1(R2)           POINT TO SECOND BYTE OF SCAN BUFFER  62094300
         LA    R6,F1               SET CHARACTER COUNTER       @YL026YB 62094400
BLANKTST CLI   F0(R2),BLANK        CHECK FOR BLANK CHARACTER   @YL026YB 62094500
         BE    ENDOFSCN            IF A BLANK IS FOUND SCAN IS OVER     62094600
         LA    R2,F1(R2)           POINT TO NEXT BYTE          @YL026YB 62094700
         LA    R6,F1(R6)           BUMP CHARACTER COUNTER      @YL026YB 62094800
         B     BLANKTST            GO CHECK FOR BLANK          @YL026YB 62094900
*  A DATA SET NAME OR AN INDEX LEVEL NAME HAS BEEN FOUND.  THE NAME IS  62095000
*  NOW IN LEVELSCN AND ITS LENGTH IS IN REGISTER 6.  NOW BUILD THE      62095100
*  FULLY QUALIFIED DATA SET NAME AND PROCESS IT.                        62095200
ENDOFSCN LA    R3,DSNO             POINT TO BUILD BUFFER       @YL026YB 62095300
         STH   R6,NAMELTH          SAVE LENGTH OF QUALIFIER    @YL026YB 62095400
         LA    R4,DSNBUFFO         POINT TO INDEX STRUCTURE    @YL026YB 62095500
         LH    R2,INDEXSZE         LOAD LENGTH OF INDEX STRUCTURE       62095600
         EX    R2,MOVE             MOVE INDEX STRUCTURE        @YL026YB 62095700
*  THIS MOVES ONE EXTRA BYTE WHICH WILL BE OVERLAID WITH A PERIOD       62095800
         AR    R3,R2               POINT PAST INDEX STRUCTURE  @YL026YB 62095900
         MVI   F0(R3),PERIOD       INSERT PERIOD               @YL026YB 62096000
         LA    R2,F1(R2)           INCREASE LENGTH FOR PERIOD  @YL026YB 62096100
         AR    R2,R6               TOTAL LENGTH OF DATA SET NAME        62096200
         LA    R3,F1(R3)           POINT PAST PERIOD           @YL026YB 62096300
         LA    R4,LEVELSCN         POINT TO NAME FROM CIR      @YL026YB 62096400
         BCTR  R6,R0               DECREMENT FOR EXECUTE INSTRUCTION    62096500
         EX    R6,MOVE             MOVE DSNAME TO INDEX STRUCTURE       62096600
         STH   R2,DSLO             SAVE LENGTH OF TOTAL DATA SET NAME   62096700
         BR    R14                 RETURN                      @YL026YB 62096800
*  PROCESS LIST NAME AND SAVE ASTERISK VALUE TO BUILD SECOND DSNAME     62096900
BLDLIST  LA    R2,LISTSCN          ADDRESS OF SCAN BUFFER      @YL026YB 62097000
         MVC   LISTSCN(F44),F1(R8) MOVE NAME TO SCAN BUFFER    @YL026YB 62097100
         LA    R8,F45(R8)          BUMP PTR FOR LIST ENTRY     @YL026YB 62097200
         LA    R2,F1(R2)           POINT TO SECOND BYTE        @YL026YB 62097300
         LA    R6,F1               SET CHARACTER COUNTER       @YL026YB 62097400
BLNKTST  CLI   F0(R2),BLANK        CHECK FOR BLANK CHARACTER   @YL026YB 62097500
         BE    ENDSCN              BLANK FOUND SCAN IS OVER    @YL026YB 62097600
         LA    R2,F1(R2)           POINT TO NEXT BYTE          @YL026YB 62097700
         LA    R6,F1(R6)           BUMP CHARACTER COUNTER      @YL026YB 62097800
         B     BLNKTST             GO CHECK FOR BLANK          @YL026YB 62097900
ENDSCN   LA    R3,DSNO             POINT TO BUILD BUFFER       @YL026YB 62098000
         STH   R6,DSLO             SAVE LENGTH OF LIST NAME    @YL026YB 62098100
         LA    R4,LISTSCN          POINT TO LIST NAME          @YL026YB 62098200
         BCTR  R6,R0               DECREMENT FOR EXECUTE INSTR.         62098300
         EX    R6,MOVE             MOVE LIST TO BUFFER         @YL026YB 62098400
         LA    R4,DSNBUFFO         POINT TO INDEX STRUCT       @YL026YB 62098500
         LA    R3,TEMBUF           BUFFER FOR NAME BEFORE '*'  @YL026YB 62098600
         LH    R2,INDEXSZE         LENGTH OF INDEX STRUCTURE   @YL026YB 62098700
         BCTR  R2,R0               DECREMENT FOR EXECUTE INSTR.         62098800
         EX    R2,MOVE             MOVE NAME BEFORE '*' TO BUFFER       62098900
         LA    R4,LISTSCN          POINT TO LIST NAME          @YL026YB 62099000
         EX    R2,CLC1             SEE IF NAMES ARE EQUAL      @YL026YB 62099100
         BNE   ERRPROC             ERROR FOUND                 @YL026YB 62099200
         LA    R3,LEVELSCN         BUFFER FOR ASTERISK NAME    @YL026YB 62099300
         LA    R2,F2(R2)           SET LENGTH TO '*' NAME      @YL026YB 62099400
         AR    R4,R2               1ST BYTE OF '*' NAME        @YL026YB 62099500
         ST    R4,NADDR1           SAVE ADDR. OF '*' NAME               62099600
         SR    R5,R5               SET CHARACTER COUNTER       @YL026YB 62099700
ASTKSCN  CLI   F0(R4),PERIOD       CHECK FOR PERIOD            @YL026YB 62099800
         BE    ASTKVAL             ASTERISK VALUE FOUND        @YL026YB 62099900
         LA    R4,F1(R4)           POINT TO NEXT BYTE          @YL026YB 62100000
         LA    R5,F1(R5)           BUMP CHARACTER COUNTER      @YL026YB 62100100
         B     ASTKSCN             GO CHECK FOR PERIOD         @YL026YB 62100200
ASTKVAL  STH   R5,NAMELTH          LENGTH OF '*' VALUE         @YL026YB 62100300
         ST    R4,NADDR2          SAVE ADDR. OF LAST BYTE OF QUAL.      62100400
         L     R4,NADDR1          ADDRESS OF '*' NAME                   62100500
         BCTR  R5,R0               DECREMENT FOR EXECUTE INSTR.         62100600
         EX    R5,MOVE             MOVE '*' NAME TO BUFFER     @YL026YB 62100700
         B     CHCKSTAR            GO CHECK '*' VALUE          @YL026YB 62100800
INDXPTR  L     R4,NADDR2           LAST BYTE OF QUAL.                   62100900
         LA    R4,F1(R4)           BUMP PTR TO NAME AFTER '*'  @YL026YB 62101000
         ST    R4,NADDR2           SAVE ADDRESS                         62101100
         SR    R6,R6               SET CHARACTER COUNTER       @YL026YB 62101200
LASTNME  CLI   F0(R4),BLANK        CHECK FOR BLANK             @YL026YB 62101300
         BE    ENDSCN1             BLANK FOUND SCAN IS OVER    @YL026YB 62101400
         LA    R4,F1(R4)           POINT TO NEXT BYTE          @YL026YB 62101500
         LA    R6,F1(R6)           BUMP CHARACTER COUNTER      @YL026YB 62101600
         B     LASTNME             GO CHECK FOR BLANK          @YL026YB 62101700
ENDSCN1  LA    R3,TEMBUF1          BUFFER FOR NAME AFTER '*'   @YL026YB 62101800
         L     R4,NADDR2           ADDRESS OF NAME AFTER '*'            62101900
         BCTR  R6,R0               DECREMENT FOR EXECUTE INSTR.         62102000
         EX    R6,MOVE             NAME AFTER '*' TO BUFFER    @YL026YB 62102100
         L     R4,STARADR1         ADDRESS OF ASTERISK         @YL026YB 62102200
         LA    R4,F2(R4)           POINT PAST ASTERISK         @YL026YB 62102300
         LA    R5,DSNBUFFO         POINT TO DSNAME (FIRST CHARACTER)    62102400
         AH    R5,DSBLO            POINT PAST DSNAME           @YL026YB 62102500
         SR    R5,R4               LENGTH OF DSNAME AFTER ASTERISK      62102600
         BCTR  R5,R0               DECREMENT FOR EXECUTE INSTRUCTION    62102700
         CR    R6,R5               COMPARE LENGTHS             @YL026YB 62102800
         BNE   ERRPROC             ERROR FOUND GO TO NEXT NAME @YL026YB 62102900
         EX    R6,CLC1             COMPARE NAMES AFTER '*'     @YL026YB 62103000
         BNE   ERRPROC             ERROR FOUND                 @YL026YB 62103100
         MVI   ISWITCH,ENDTEST     SET INDEX SWITCH            @YL026YB 62103200
         BR    R14                 RETURN                      @YL026YB 62103300
ERRPROC  LA    R14,F4(R14)         BUMP RETURN ADDRESS BY 4    @YL026YB 62103400
         BR    R14                 RETURN                      @YL026YB 62103500
MOVE     MVC   F0(F0,R3),F0(R4)    MOVE INSTR. FOR EX          @YL026YB 62103600
CLC1     CLC   F0(F0,R3),F0(R4)    COMPARE INSTR. FOR EX       @YL026YB 62103700
         DROP  R15                 IKJEHRN4 NO LONGER NEEDED   @YL026YB 62103800
         EJECT                                                          62103900
*                                                                     * 62104000
*              PARSE MACROS FOR RENAME COMMAND                        * 62104100
*                                                                     * 62110520
         DS    0F                                                       62120020
IKJEHPDL IKJPARM                                                        62160020
DSNAME1  IKJPOSIT   DSTHING,PROMPT='OLD DATA SET NAME',HELP=('NAME OF DX62200020
               ATA SET TO BE RENAMED')                                  62240020
DSNAME2  IKJPOSIT   DSTHING,PROMPT='NEW DATA SET NAME',HELP=('NEW NAME X62280020
               OF DATA SET')                                            62320020
RENTYPE  IKJKEYWD                                                       62360020
         IKJNAME    'ALIAS'                                             62400020
         IKJENDP                                                        62440020
*                                                                     * 62480020
*              END OF PARSE MACROS                                    * 62520020
*                                                                     * 62560020
         EJECT                                                          62600020
*  MAPPING MACROS                                                       62640020
         SPACE 2                                                        62680020
         IKJCPPL                                                        62880020
         IKJPPL                                                         62920020
LPPL     EQU   *-PPL               LENGTH OF PPL                        62960020
         IKJDFPL                                                        63000020
LDFPL    EQU   *-DFPL              LENGTH OF DFPL                       63040020
         IKJDFPB                                                        63080020
LDFPB    EQU   *-DFPB              LENGTH OF DFPB                       63120020
         IKJPSCB                                                        63160020
         IKJDAPL                                                        63200020
LDAPL    EQU   *-DAPL              LENGTH OF DAPL                       63240020
         IKJDAP08                                                       63280020
LDAPB08  EQU   *-DAPB08            LENGTH OF DAPB08                     63320020
         IKJDAP18                                                       63360020
LDAPB18  EQU   *-DAPB18            LENGTH OF DAPB18                     63400020
         IKJIOPL                                                        63440020
LIOPL    EQU   *-IOPL              LENGTH OF IOPL                       63480020
         IKJSTPB                                                        63490020
LSTPB    EQU   *-STPB              LENGTH OF STPB                       63500020
         EJECT                                                          63520020
        IKJUPT                                                 @YL026YB 63560000
         EJECT                                                 @YL026YB 63580000
*              GETMAIN COMMON AREA                                      63600000
*                                                              @YL026YB 63620000
         DCBD  DSORG=PO,DEVD=DA                                         63640020
SAVEAREA DS    18F                 REGISTER SAVE AREA                   63680020
UNPACK   DS    D                   WORK AREA FOR CVD                    63720020
COUNT    DS    D                   WORK AREA FOR UNPACK                 63760020
         ORG   COUNT+F7            BACK TO LAST BYTE OF COUNT FIELD     63800020
SIGNBYTE DS    CL1                 LABEL THE SIGN BYTE                  63840020
         ORG                                                            63880020
ENDCOUNT EQU   *                   END OF COUNT FIELD                   63920020
*  CAMLST MACROS MUST BE KEPT TOGETHER - MOVED AS ONE BLOCK             63960020
*                                                                       64000020
*              RENAME MACRO CAMLST                                      64040020
*                                                                       64080020
RENAMLST CAMLST RENAME,OLDNAME,NEWNAME,VOLIST1 RENAME MACRO             64120020
         ORG   RENAMLST            LABEL RENAME CALST FIELDS            64160020
RENAME1  DS    H                   RENAME CAMLST FIRST HALF WORD        64200020
RENAME1A DS    H                   RENAME CAMLST SECOND HALF WORD       64240020
RENAME2  DS    F                   RENAME CAMLST SECOND FULL WORD       64280020
RENAME3  DS    F                   RENAME CAMLST THIRD FULL WORD        64320020
RENAME4  DS    F                   RENAME CAMLST FOURTH FULL WORD       64360020
         ORG                                                            64400020
*                                                                       64440020
*              UNCATALOG MACRO CAMLST                                   64480020
*                                                                       64520020
UNCATLST CAMLST UCATDX,DSNAMEU     UNCATALOG MACRO                      64560020
         ORG   UNCATLST            LABEL UNCATALOG CAMLST FIELDS        64600020
UNCAT1   DS    F                   UNCATALOG CAMLST FIRST FULL WORD     64640020
UNCAT2   DS    F                   UNCATALOG CAMLST SECOND FULL WORD    64680020
UNCAT    DS    F                   UNCATALOG CAMLST THIRD FULL WORD     64720020
         ORG                                                            64760020
*                                                                       64800020
*              LOCATE MACRO CAMLST (BY DATA SET NAME)                   64840020
*                                                                       64880020
LOCNAME  CAMLST NAME,DSNAME3,,LOCAREA1 LOCATE MACRO                     64920020
         ORG   LOCNAME             LABEL LOCATE (NAME) CAMLST FIELDS    64960020
LOCNAME1 DS    F                   LOCATE CAMLST FIRST FULL WORD        65000020
LOCNAME2 DS    F                   LOCATE CAMLST SECOND FULL WORD       65040020
LOCNAME3 DS    F                   LOCATE CAMLST THIRD FULL WORD        65080020
LOCNAME4 DS    F                   LOCATE CAMLST FOURTH FULL WORD       65120020
         ORG                                                            65160020
*                                                                       65200020
*              CATALOG MACRO CAMLST                                     65240020
*                                                                       65280020
CATLST   CAMLST CATBX,DSNAME4,,VOLIST2 CATALOG MACRO                    65320020
         ORG   CATLST              LABEL CATALOG CAMLST FIELDS          65360020
CATLST1  DS    F                   CATALOG CAMLST FIRST FULL WORD       65400020
CATLST2  DS    F                   CATALOG CAMLST SECOND FULL WORD      65440020
CATLST3  DS    F                   CATALOG CAMLST THIRD FULL WORD       65480020
CATLST4  DS    F                   CATALOG CAMLST FOURTH FULL WORD      65520020
         ORG                                                            65560020
*                                                                       66320020
*              END OF CAMLST MACROS                                     66360020
*                                                                       66400020
OLDNAME  DS    CL44                OLD DATA SET NAME                    66440020
NEWNAME  DS    CL44                NEW DATA SET NAME                    66480020
DSNAMEU  DS    CL45                DATA SET NAME (BLANK DELIMITER)      66520020
DSNAME3  DS    CL44                DATA SET NAME                        66560020
DSNAME4  DS    CL45                DATA SET NAME (BLANK DELIMITER)      66600020
VOLNUM   DS    CL6                 VOLUME SERIAL NUMBER                 66720020
TEMBUF   DS    CL8                 BUFFER FOR NAMD BEFORE '*'  @YL026YB 66730000
TEMBUF1  DS    CL44                BUFFER FOR NAME AFTER  '*'  @YL026YB 66740000
WKLENGTH DS    CL4                 WORKAREA LENGTH FIELD       @YL026YB 66750000
         DS    0H                  ALIGN HALF WORD BOUNDRY              66760020
VOLIST1  DS    CL12                VOLUME LIST                          66800020
SEQNUM   DS    CL2                 VOLUME SEQUENCE NUMBER               66840020
MANYVOLS DS    19CL12              SPACE FOR MORE VOLUMES               66880020
VOLIST2  DS    CL2                 VOLUME LIST                          66920020
         DS    20CL12              SPACE FOR SECOND VOLUME LIST         66960020
         DS    0D                  ALIGN DOUBLE WORD BOUNDRY            67000020
LOCAREA1 DS    259C                WORKAREA FOR LOCATE                  67040020
LOCVNUM  DS    6C                  WORKAREA FOR LOCATE                  67080020
*                                                                       67120020
OPEN     OPEN  (0,OUTPUT),MF=L     LIST FORM OF OPEN                    67160020
CLOSE    CLOSE 0,MF=L              LIST FORM OF CLOSE                   67200020
RENCPECB DS    F                   CP'S ECB FOR RENAME COMMAND          67240020
CIRADDR  DS    F                   ADDRESS OF CIR                       67280020
DAIRADDR DS    F                   ADDRESS OF DAIR                      67320020
UPTSAVE  DS    F                   SAVE UPT ADDRESS HERE       @YL026YB 67360000
STARADR1 DS    F                   ADDRESS * FOUND DSNAME1              67400020
STARADR2 DS    F                   ADDRESS * FOUND DSNAME2              67440020
WORKWORD DS    F                   WORK SPACE (TEMPORARY SAVE AREA)     67480020
STARPTR  DS    F                   ADDRESS OF NEXT EMPTY SLOT           67490020
NADDR1   DS    F                   TEMPORARY ADDRESS FOR QUALIFIERS     67493000
NADDR2   DS    F                   TEMPORARY ADDRESS FOR QUALIFIERS     67496000
STARLIST DS    CL256               LIST OF ERROR ASTERISK VALUES        67500020
STAREND  EQU   *                   END OF STAR LIST                     67510020
INDEXSZE DS    H                   LENGTH OF INDEX STRUCTURE            67520020
NAMELTH  DS    H                   SAVE QUALIFIER LENGTH HERE           67560020
CATERCDE DS    H                   UNCATALOG RETURN CODE SAVED HERE     67600020
         DS    0H                  ALIGN HALF WORD BOUNDRY              67640020
DSLO     DS    CL2                 DSLENGTH AND                         67680020
DSNO     DS    CL44                DSNAME BUFFER (OLD DSNAME)           67720020
         DS    0H                  ALIGN HALF WORD BOUNDRY              67760020
DSBLO    DS    CL2                 LENGTH OF DSNAME IN DSNBUFFO         67800020
DSNBUFFO DS    CL52                DSNAME (OLD) BUILT IN THIS BUFFER    67840020
         DS    0H                  ALIGN HALF WORD BOUNDRY              67880020
DSLN     DS    CL2                 DSLENGTH AND                         67920020
DSNN     DS    CL44                DSNAME BUFFER (NEW DSNAME)           67960020
         DS    0H                  ALIGN HALF WORD BOUNDRY              68000020
DSBLN    DS    CL2                 LENGTH OF NAME IN DSNBUFFN           68040020
DSNBUFFN DS    CL52                DSNAME (NEW) BUILT IN THIS BUFFER    68080020
LEVELSCN DS    CL9                 BUFFER FOR SCANNING INDEX NAMES      68120020
ISWITCH  DS    CL1                 SWITCH INDICATES INDEX NAMES         68160020
STARLEV1 DS    CL1                 LEVEL * FOUND DSNAME1                68200020
STARLEV2 DS    CL1                 LEVEL * FOUND DSNAME2                68240020
UNALOCSW DS    CL1                 SWITCH INDICATES UNALLOCATE DATA SET 68280020
ENDERROR DS    CL1                 SWITCH INDICATES CONTINUE PROCESSING 68320020
RC       DS    CL1                 SAVE RETURN CODES HERE               68360020
DEFLTSW  DS    CL1                 SWITCH INDICATES DEFAULT NAME        68440020
RENERRSW DS    CL1                 SWITCH INDICATES RENAME ERROR        68480020
CIRFLAG  DS    CL1                 INDICATES * NAME PROCESSED           68520020
ERRORSW  DS    CL1                 ERROR SWITCH                         68540020
MEM2SW   DS    CL1                 SWITCH SECOND NAME IS MEMBER ONLY    68550020
DDNAME1  DS    CL8                 SAVE DDNAME HERE                     68560020
LISTSCN  DS    CL45                BUFFER FOR SCANNING LIST             68570000
STACKSW  DS    CL1                 INDICATE FLUSH STACK AND CLEAR QUEUE 68580000
MAINX    DS    CL1                 GIVES STATUS OF CIR WKAREA  @YL026YB 68590000
*  THESE FIELDS USED BY BLDL AND STOW (KEEP INTACT)                     68600020
STOWOLD  DS    2F                  MEMBER NAMES STORED HERE FOR -       68640020
STOWNEW  DS    2F                  STOW CHANGE OPTION                   68680020
BLDLCNT  DS    H                   BLDL LIST NUMBER OF ENTRIES (1)      68720020
BLDLLNTH DS    H                   BLDL LIST LENGTH OF EACH ENTRY (76)  68760020
BLDLMEM  DS    CL13                BLDL MEMBER NAME AND TTR DATA        68800020
BLDLDATA DS    CL63                BLDL FLAG BYTE AND USER DATA         68840020
         DS    0H                  ALIGN HALF WORD BOUNDRY              68880020
STOWMEM  DS    CL11                STOW MEMBER NAME AND TTR DATA        68920020
STOWDATA DS    CL63                STOW FLAG BYTE AND USER DATA         68960020
STOWEND  EQU   *                   END OF STOW AND BLDL LISTS           69000020
*  CATALOG INFORMATION ROUTINE PARAMETER LIST (KEEP INTACT)             69040020
CIRPARM  DS    F                   OPTION BYTE                          69080020
NAMEPTR  DS    F                   POINTER TO NAME OR TTR               69120020
VOLIDPTR DS    F                   POINTER TO USER CAT NAME    @YL026YB 69160000
WORK1PTR DS    F                   POINTER TO CIR  WORKAREA    @YL026YB 69190000
WORK2PTR DS    F                   POINTER TO 18 WORD WORKAREA          69220000
PASSPTR  DS    F                   POINTER TO PASSWORD         @YL026YB 69250000
WRK2AREA DS    18F                 WORKAREA FOR CIR (SAVEAREA)          69280000
         DS    0D                  ALIGN WORKAREA                       69310000
NAMETTR  DS    CL44                DSNAME  BUFFER              @YL026YB 69340000
CVOLID   DS    CL44                VOLUME SERIAL NUMBER BUFFER @YL026YB 69370000
PASSWKD  DS    CL8                 PASSWORD BUFFER             @YL026YB 69400000
STARSW   DS    CL1                 INDICATES ASTERISK VALUE PROCESSED   69450020
QUALBUFF DS    CL8                 DEFAULT RETURNS QUALIFIER HERE       69460020
*  END OF CATALOG INFORMATION ROUTINE PARAMETER LIST                    69480020
ANSPLACE DS    F                   ANSWER PLACE FOR PARSE               69520020
         DS    0F                  ALIGN WORD BOUNDRY                   69560020
PARSPARM DS    (LPPL)X             SPACE FOR PARSE PARAMETER LIST       69600020
         DS    0F                  ALIGN WORD BOUNDRY                   69640020
IOPARM   DS    (LIOPL)X            SPACE FOR I/O PARAMETER LIST         69680020
         DS    0F                  ALIGN WORD BOUNDRY                   69720020
DFLTPARM DS    (LDFPL)X            SPACE FOR DEFAULT PARAMETER LIST     69760020
         DS    0F                  ALIGN WORD BOUNDRY                   69800020
DFLTPBLK DS    (LDFPB)X            SPACE FOR DEFAULT PARM BLOCK         69840020
         DS    0F                  ALIGN WORD BOUNDRY                   69880020
DAIRPARM DS    (LDAPL)X            SPACE FOR DAIR PARAMETER LIST        69920020
         DS    0F                  ALIGN WORD BOUNDRY                   69960020
DAIR08   DS    (LDAPB08)X          SPACE FOR DAIR ENTRY 08              70000020
         DS    0F                  ALIGN WORD BOUNDRY                   70040020
DAIR18   DS    (LDAPB18)X          SPACE FOR DAIR ENTRY 18              70080020
*  KEEP DAIR LISTS TOGETHER, ZEROED BY ONE INSTRUCTION                  70120020
DLSTEND  EQU   *                   END OF DAIR ENTRY LISTS              70160020
         DS    0F                  ALIGN WORD BOUNDRY                   70170020
STACKPRM DS    (LSTPB)X            SPACE FOR STACK PARM BLOCK           70180020
PUT      PUTLINE MF=L              LIST FORM OF PUTLINE                 70200020
*  THE FOLLOWING SPACE IS USED FOR STAE                                 70202020
TMPSR1   DS    F                   SAVE TMP'S REGISTER 1 HERE           70204020
STAEADDR DS    F                   ADDRESS OF STAE INTERFACE ROUTINE    70206020
         PSEUDO MF=L                                                    70208020
STAELIST STAE  STAEADDR,PARAM=STAEPARM,MF=L                             70210020
STAEONE  STABUILD CODE=713,RTN=ABEND713,ADDR=STAEONE,FLAG=(ONE,NMSG),  X70212020
               NUM=4,MF=L                                               70214020
STAETWO  STABUILD CODE=913,RTN=ABEND913,ADDR=STAETWO,FLAG=(ONE,NMSG),  X70216020
               MF=L                                                     70218020
STAETHRE STABUILD CODE=(113,213,313,A13),RTN=ABEND13,ADDR=STAETHRE,    X70220020
               FLAG=(MUL,NMSG),LIST=STAELST,                           X70222020
               MF=L                                                     70224020
STAEFOUR STABUILD CODE=000,RTN=LISTEST,ADDR=STAEFOUR,FLAG=(ALL,END),   X70226020
               MF=L                                                     70228020
STAEPARM STAEPARM FLAG=(CP),PSEUDO=$PSEUDO,LIST=STAEONE,ADDR=STAEPARM, X70230020
               MF=L                                                     70232020
STAELNTH EQU   *-STAELIST          SIZE OF STAE LISTS                   70234020
*  THE FOLLOWING IS RESERVED SPACE FOR OUTPUT CHAINS                    70240020
OUTAREA1 DS    F                   MESSAGE CHAIN POINTER                70280020
OUTCNT1  DS    F                   MESSAGE SEGMENT COUNT                70320020
OUTPUT11 DS    F                   POINTER TO MESSAGE SEGMENT           70360020
OUTPUT12 DS    F                   POINTER TO MESSAGE INSERTION         70400020
OUTAREA2 DS    F                   MESSAGE CHAIN POINTER                70440020
OUTCNT2  DS    F                   MESSAGE SEGMENT COUNT                70480020
OUTPUT21 DS    F                   POINTER TO MESSAGE SEGMENT           70520020
OUTPUT22 DS    F                   POINTER TO MESSAGE INSERTION         70560020
*  END OF OUTPUT CHAINS                                                 70600020
*                                                                       70640020
*  FIRST DATA SET NAME FOR MESSAGES STORED HERE                         70680020
DSNMESGL EQU   *                   ALIAS FOR DSNMSGL1                   70720020
DSNMSGL1 DS    H                   LENGTH OF FIRST DSNAME               70760020
DSNMSGO1 DS    H                   OFFSET FOR INSERTION                 70800020
DSNMSG1  DS    CL52                FIRST DSNAME                         70840020
*  FIRST MEMBER NAME FOR MESSAGES STORED HERE                           70880020
MEMMSGL1 DS    H                   LENGTH OF MEMBER NAME FIRST DSNAME   70920020
MEMMSGO1 DS    H                   OFFSET FOR INSERTION                 70960020
MEMMSG1  DS    CL10                MEMBER NAME FIRST DSNAME             71000020
*  SECOND DATA SET NAME FOR MESSAGES STORED HERE                        71040020
DSNMSGL2 DS    H                   LENGTH OF SECOND DSNAME              71080020
DSNMSGO2 DS    H                   OFFSET FOR INSERTION                 71120020
DSNMSG2  DS    CL52                SECOND DSNAME                        71160020
*  SECOND MEMBER NAME FOR MESSAGES STORED HERE                          71200020
MEMMSGL2 DS    H                   LENGTH OF MEMBER NAME SECOND DSNAME  71240020
MEMMSGO2 DS    H                   OFFSET FOR INSERTION                 71280020
MEMMSG2  DS    CL10                MEMBER NAME SECOND DSNAME            71320020
*  RETURN CODE FOR MESSAGES STORED HERE                                 71360020
RCMESGL  DS    H                   LENGTH OF RETURN CODE                71400020
RCMESGO  DS    H                   OFFSET FOR INSERTION                 71440020
RCMESG   DS    CL4                 RETURN CODE                          71480020
RCX      DS    CL1                 RC SAVE AREA                @ZA01485 71482037
*  ASTERISK NAME FOR MESSAGES STORED HERE                               71490020
STARBUFF DS    CL52                LENGTH, OFFSET, AND ASTERISK NAME    71500020
CORE     EQU   *-IHADCB            CORE SIZE FOR GETMAIN                71520020
         EJECT                                                          71560020
IKJEHMSG CSECT                                                          71600020
         ENTRY IKJEHSMG                                                 71640020
*********************************************************************** 71680020
*                                                                     * 71720020
*  THIS CONTROL SECTION CONTAINS THE MESSAGE TEXT (BOTH FIRST AND     * 71760020
*  SECOND LEVEL).  IT CONTAINS A BRANCH TABLE FOR FIRST LEVEL MESSAGES* 71800020
*  AND A BRANCH TABLE FOR SECOND LEVEL MESSAGES.  EACH BRANCH TABLE   * 71840020
*  ENTRY IS COMPOSED OF A ONE BYTE OFFSET FIELD FOR MESSAGE INSERTIONS* 71880020
*  AND A THREE BYTE ADDRESS OF THE MESSAGE.  THE MESSAGE BUILDER      * 71920020
*  ROUTINES COMBINE THE ADDRESS OF THE CONTROL SECTION AND THE ADDRESS* 71960020
*  OF THE MESSAGE TO GET THE TRUE ADDRESS OF THE MESSAGE.  THE OFFSET * 72000020
*  IS PLACED IN THE INSERTION SEGMENT.                                * 72040020
*  EACH MESSAGE IS COMPOSED OF A 4 BYTE HEADER (2 BYTE LENGTH OF      * 72050020
*  MESSAGE INCLUDING HEADER LENGTH AND A 2 BYTE OFFSET FIELD)         * 72060020
*  FOLLOWED BY THE MESSAGE TEXT.                                      * 72070020
*                                                                     * 72080020
*********************************************************************** 72120020
         SPACE                                                          72160020
*  EQUATES USED IN THIS CONTROL SECTION                                 72200020
HDR      EQU   4                   HEADER LENGTH (2 BYTES EACH, LENGTH  72240020
*                                  AND OFFSET FIELDS) EACH SEGMENT      72280020
OFST     EQU   0                   INSERTION OFFSET 1ST MESSAGE SEGMENT 72320020
*  OFFSETS FOR FIRST LEVEL MESSAGE INSERTIONS                           72360020
OFST01   EQU   19                  INSERTION OFFSET MESSAGE 01          72400020
OFST02   EQU   0                   INSERTION OFFSET MESSAGE 02          72440020
OFST03   EQU   19                  INSERTION OFFSET MESSAGE 03          72480020
OFST04   EQU   19                  INSERTION OFFSET MESSAGE 04          72520020
OFST05   EQU   0                   INSERTION OFFSET MESSAGE 05          72560020
OFST06   EQU   30                  INSERTION OFFSET MESSAGE 06          72600020
OFST07   EQU   36                  INSERTION OFFSET MESSAGE 07          72640020
OFST08   EQU   0                   INSERTION OFFSET MESSAGE 08          72680020
OFST09   EQU   45                  INSERTION OFFSET MESSAGE 09   A49872 72720021
OFST10   EQU   31                  INSERTION OFFSET MESSAGE 10          72760020
OFST11   EQU   19                  INSERTION OFFSET MESSAGE 11          72800020
OFST12   EQU   19                  INSERTION OFFSET MESSAGE 12          72840020
OFST13   EQU   19                  INSERTION OFFSET MESSAGE 13          72880020
OFST14   EQU   19                  INSERTION OFFSET MESSAGE 14          72920020
OFST15   EQU   19                  INSERTION OFFSET MESSAGE 15          72960020
OFST16   EQU   43                  INSERTION OFFSET MESSAGE 16          73000020
OFST17   EQU   43                  INSERTION OFFSET MESSAGE 17          73040020
OFST18   EQU   34                  INSERTION OFFSET MESSAGE 18          73080020
OFST19   EQU   43                  INSERTION OFFSET MESSAGE 19          73120020
OFST20   EQU   19                  INSERTION OFFSET MESSAGE 20          73160020
OFST21   EQU   19                  INSERTION OFFSET MESSAGE 21          73200020
OFST22   EQU   19                  INSERTION OFFSET MESSAGE 22          73240020
OFST23   EQU   17                  INSERTION OFFSET MESSAGE 23          73280020
OFST24   EQU   31                  INSERTION OFFSET MESSAGE 24          73320020
OFST25   EQU   0                   INSERTION OFFSET MESSAGE 25          73360020
OFST26   EQU   0                   INSERTION OFFSET MESSAGE 26          73400020
OFST27   EQU   24                  INSERTION OFFSET MESSAGE 27          73440020
OFST28   EQU   28                  INSERTION OFFSET MESSAGE 28          73460020
OFST29   EQU   19                  INSERTION OFFSET MESSAGE 29          73470020
*  OFFSETS FOR SECOND LEVEL MESSAGE INSERTIONS                          73480020
*  NOTE-  THERE ARE CURRENTLY NO INSERTIONS IN MOST SECOND LEVEL        73520020
*  MESSAGES.  A COMMON OFFSET OF ZERO IS USED.                          73560020
OFSTSMSG EQU   0                   INSERTION OFFSET 2ND LEVEL MESSAGES  73600020
OFSTSM04 EQU   29                  INSERTION OFFSET SECOND LEVEL MSG 04 73640020
OFSTSM05 EQU   40                  INSERTION OFFSET SECOND LEVEL MSG 05 73680020
OFSTSM07 EQU   29                  INSERTION OFFSET SECOND LEVEL MSG 07 73720020
OFSTSM08 EQU   27                  INSERTION OFFSET SECOND LEVEL MSG 08 73760020
OFSTSM10 EQU   29                  INSERTION OFFSET SECOND LEVEL MSG 10 73800020
OFSTSM12 EQU   29                  INSERTION OFFSET SECOND LEVEL MSG 12 73820020
OFSTSM13 EQU   26                  INSERTION OFFSET SECOND LEVEL MSG 13 73840020
OFSTSM15 EQU   26                  INSERTION OFFSET SECOND LEVEL MSG 15 73850020
OFSTSM20 EQU   28                  INSERTION OFFSET SECOND LEVEL MSG 20 73880020
OFSTSM21 EQU   26                  INSERTION OFFSET SECOND LEVEL MSG 21 73920020
OFSTSM22 EQU   26                  INSERTION OFFSET SECOND LEVEL MSG 22 73960020
         SPACE                                                          74000020
AMSG01   DC    AL1(OFST01)         INSERTION OFFSET                     74040020
         DC    AL3(LMSG01)         MESSAGE ADDRESS                      74080020
AMSG02   DC    AL1(OFST02)         INSERTION OFFSET                     74120020
         DC    AL3(LMSG02)         MESSAGE ADDRESS                      74160020
AMSG03   DC    AL1(OFST03)         INSERTION OFFSET                     74200020
         DC    AL3(LMSG03)         MESSAGE ADDRESS                      74240020
AMSG04   DC    AL1(OFST04)         INSERTION OFFSET                     74280020
         DC    AL3(LMSG04)         MESSAGE ADDRESS                      74320020
AMSG05   DC    AL1(OFST05)         INSERTION OFFSET                     74360020
         DC    AL3(LMSG05)         MESSAGE ADDRESS                      74400020
AMSG06   DC    AL1(OFST06)         INSERTION OFFSET                     74440020
         DC    AL3(LMSG06)         MESSAGE ADDRESS                      74480020
AMSG07   DC    AL1(OFST07)         INSERTION OFFSET                     74520020
         DC    AL3(LMSG07)         MESSAGE ADDRESS                      74560020
AMSG08   DC    AL1(OFST08)         INSERTION OFFSET                     74600020
         DC    AL3(LMSG08)         MESSAGE ADDRESS                      74640020
AMSG09   DC    AL1(OFST09)         INSERTION OFFSET                     74680020
         DC    AL3(LMSG09)         MESSAGE ADDRESS                      74720020
AMSG10   DC    AL1(OFST10)         INSERTION OFFSET                     74760020
         DC    AL3(LMSG10)         MESSAGE ADDRESS                      74800020
AMSG11   DC    AL1(OFST11)         INSERTION OFFSET                     74840020
         DC    AL3(LMSG11)         MESSAGE ADDRESS                      74880020
AMSG12   DC    AL1(OFST12)         INSERTION OFFSET                     74920020
         DC    AL3(LMSG12)         MESSAGE ADDRESS                      74960020
AMSG13   DC    AL1(OFST13)         INSERTION OFFSET                     75000020
         DC    AL3(LMSG13)         MESSAGE ADDRESS                      75040020
AMSG14   DC    AL1(OFST14)         INSERTION OFFSET                     75080020
         DC    AL3(LMSG14)         MESSAGE ADDRESS                      75120020
AMSG15   DC    AL1(OFST15)         INSERTION OFFSET                     75160020
         DC    AL3(LMSG15)         MESSAGE ADDRESS                      75200020
AMSG16   DC    AL1(OFST16)         INSERTION OFFSET                     75240020
         DC    AL3(LMSG16)         MESSAGE ADDRESS                      75280020
AMSG17   DC    AL1(OFST17)         INSERTION OFFSET                     75320020
         DC    AL3(LMSG17)         MESSAGE ADDRESS                      75360020
AMSG18   DC    AL1(OFST18)         INSERTION OFFSET                     75400020
         DC    AL3(LMSG18)         MESSAGE ADDRESS                      75440020
AMSG19   DC    AL1(OFST19)         INSERTION OFFSET                     75480020
         DC    AL3(LMSG19)         MESSAGE ADDRESS                      75520020
AMSG20   DC    AL1(OFST20)         INSERTION OFFSET                     75560020
         DC    AL3(LMSG20)         MESSAGE ADDRESS                      75600020
AMSG21   DC    AL1(OFST21)         INSERTION OFFSET                     75640020
         DC    AL3(LMSG21)         MESSAGE ADDRESS                      75680020
AMSG22   DC    AL1(OFST22)         INSERTION OFFSET                     75720020
         DC    AL3(LMSG22)         MESSAGE ADDRESS                      75760020
AMSG23   DC    AL1(OFST23)         INSERTION OFFSET                     75800020
         DC    AL3(LMSG23)         MESSAGE ADDRESS                      75840020
AMSG24   DC    AL1(OFST24)         INSERTION OFFSET                     75880020
         DC    AL3(LMSG24)         MESSAGE ADDRESS                      75920020
AMSG25   DC    AL1(OFST25)         INSERTION OFFSET                     75960020
         DC    AL3(LMSG25)         MESSAGE ADDRESS                      76000020
AMSG26   DC    AL1(OFST26)         INSERTION OFFSET                     76040020
         DC    AL3(LMSG26)         MESSAGE ADDRESS                      76080020
AMSG27   DC    AL1(OFST27)         INSERTION OFFSET                     76120020
         DC    AL3(LMSG27)         MESSAGE ADDRESS                      76160020
AMSG28   DC    AL1(OFST28)         INSERTION OFFSET                     76170020
         DC    AL3(LMSG28)         MESSAGE ADDRESS                      76180020
AMSG29   DC    AL1(OFST29)         INSERTION OFFSET                     76190020
         DC    AL3(LMSG29)         MESSAGE ADDRESS                      76192020
*  FIRST LEVEL MESSAGES                                                 76200020
LMSG01   DC    AL2(L'MSG01+HDR)                                         76240020
         DC    AL2(OFST)                                                76280020
MSG01    DC    C'IKJ58201I DATA SET  NOT IN CATALOG OR AMOUNT OF DATASEX76320003
               TS EXCEEDS WORKAREA FOR GENERIC RENAME'          OZ27595 76330003
LMSG02   DC    AL2(L'MSG02+HDR)                                         76360020
         DC    AL2(OFST)                                                76400020
MSG02    DC    C'IKJ58202I NOT ENOUGH MAIN STORAGE TO EXECUTE COMMAND'  76440020
LMSG03   DC    AL2(L'MSG03+HDR)                                         76480020
         DC    AL2(OFST)                                                76520020
MSG03    DC    C'IKJ58203I DATA SET  NOT RENAMED, EXPIRATION DATE HAS NX76560020
               OT PASSED+'                                              76600020
LMSG04   DC    AL2(L'MSG04+HDR)                                         76640020
         DC    AL2(OFST)                                                76680020
MSG04    DC    C'IKJ58204I DATA SET  NOT USABLE+'                       76720020
LMSG05   DC    AL2(L'MSG05+HDR)                                         76760020
         DC    AL2(OFST)                                                76800020
MSG05    DC    C'IKJ58205I INVALID USE OF ALIAS KEYWORD+'               76840020
LMSG06   DC    AL2(L'MSG06+HDR)                                         76880020
         DC    AL2(OFST)                                                76920020
MSG06    DC    C'IKJ58206I INVALID USE OF * IN +'                       76960020
LMSG07   DC    AL2(L'MSG07+HDR)                                         77000020
         DC    AL2(OFST)                                                77040020
MSG07    DC    C'IKJ58207I UNABLE TO RENAME DATA SET +'                 77080020
LMSG08   DC    AL2(L'MSG08+HDR)                                         77120020
         DC    AL2(OFST)                                                77160020
MSG08    DC    C'IKJ58208I INVALID USE OF COMMAND+'                     77200020
LMSG09   DC    AL2(L'MSG09+HDR)                                         77240020
         DC    AL2(OFST)                                                77280020
MSG09    DC    C'IKJ58209I DATA SET NAME REQUIRED WHEN MEMBER  SPECIFIEX77320021
               D'                                                A49872 77360021
LMSG10   DC    AL2(L'MSG10+HDR)                                         77400020
         DC    AL2(OFST)                                                77440020
MSG10    DC    C'IKJ58210I DATA SET RENAMED BUT  STILL CATALOGED'       77480020
LMSG11   DC    AL2(L'MSG11+HDR)                                         77520020
         DC    AL2(OFST)                                                77560020
MSG11    DC    C'IKJ58211I DATA SET  NOT ALLOCATED, TOO MANY DATA SETS+X77600020
               '                                                        77640020
LMSG12   DC    AL2(L'MSG12+HDR)                                         77680020
         DC    AL2(OFST)                                                77720020
MSG12    DC    C'IKJ58212I DATA SET  NOT ALLOCATED, DATA SET NOT ON VOLX77760020
               UME+'                                                    77800020
LMSG13   DC    AL2(L'MSG13+HDR)                                         77840020
         DC    AL2(OFST)                                                77880020
MSG13    DC    C'IKJ58213I DATA SET  NOT ALLOCATED, REQUIRED VOLUME NOTX77920020
                MOUNTED+'                                               77960020
LMSG14   DC    AL2(L'MSG14+HDR)                                         78000020
         DC    AL2(OFST)                                                78040020
MSG14    DC    C'IKJ58214I DATA SET  NOT ALLOCATED, SYSTEM OR INSTALLATX78080020
               ION ERROR+'                                              78090020
LMSG15   DC    AL2(L'MSG15+HDR)                                         78120020
         DC    AL2(OFST)                                                78160020
MSG15    DC    C'IKJ58215I DATA SET  ALREADY IN USE, TRY LATER+'        78200020
LMSG16   DC    AL2(L'MSG16+HDR)                                         78240020
         DC    AL2(OFST)                                                78280020
MSG16    DC    C'IKJ58216I PROPER PASSWORD NOT SUPPLIED FOR '           78320020
LMSG17   DC    AL2(L'MSG17+HDR)                                         78360020
         DC    AL2(OFST)                                                78400020
MSG17    DC    C'IKJ58217I SPECIFIED MEMBER NOT IN DATA SET '           78440020
LMSG18   DC    AL2(L'MSG18+HDR)                                         78480020
         DC    AL2(OFST)                                                78520020
MSG18    DC    C'IKJ58218I INVALID DATA SET NAME, '''' EXCEEDS 44 CHARAX78560020
               CTERS'                                                   78600020
LMSG19   DC    AL2(L'MSG19+HDR)                                         78640020
         DC    AL2(OFST)                                                78680020
MSG19    DC    C'IKJ58219I NO DATA SETS FOUND TO MATCH * IN '           78720020
LMSG20   DC    AL2(L'MSG20+HDR)                                         78760020
         DC    AL2(OFST)                                                78800020
MSG20    DC    C'IKJ58220I DATA SET  NOT ON A DIRECT ACCESS DEVICE, NOTX78840020
                SUPPORTED'                                              78850020
LMSG21   DC    AL2(L'MSG21+HDR)                                         78880020
         DC    AL2(OFST)                                                78920020
MSG21    DC    C'IKJ58221I DATA SET  RESIDES ON MULTIPLE VOLUMES, NOT SX78960020
               UPPORTED'                                                78970020
LMSG22   DC    AL2(L'MSG22+HDR)                                         79040020
         DC    AL2(OFST)                                                79080020
MSG22    DC    C'IKJ58222I DATA SET  ALREADY EXISTS'                    79120020
LMSG23   DC    AL2(L'MSG23+HDR)                                         79160020
         DC    AL2(OFST)                                                79200020
MSG23    DC    C'IKJ58223I MEMBER  ALREADY EXISTS'                      79240020
LMSG24   DC    AL2(L'MSG24+HDR)                                         79280020
         DC    AL2(OFST)                                                79320020
MSG24    DC    C'IKJ58224I MEMBER SPECIFIED BUT  NOT A PARTITIONED DATAX79360020
                SET'                                                    79400020
LMSG25   DC    AL2(L'MSG25+HDR)                                         79440020
         DC    AL2(OFST)                                                79480020
MSG25    DC    C'IKJ58225I COMMAND SYSTEM ERROR+'                       79520020
LMSG26   DC    AL2(L'MSG26+HDR)                                         79560020
         DC    AL2(OFST)                                                79600020
MSG26    DC    C'IKJ58226I NO SPACE IN DIRECTORY FOR ALIAS'             79640020
LMSG27   DC    AL2(L'MSG27+HDR)                                         79680020
         DC    AL2(OFST)                                                79720020
MSG27    DC    C'IKJ58227I DATA SET NAME  WILL CREATE INVALID CATALOG SX79760020
               TRUCTURE+'                                               79800020
LMSG28   DC    AL2(L'MSG28+HDR)                                         79810020
         DC    AL2(OFST)                                                79820020
MSG28    DC    C'IKJ58228I UNABLE TO CATALOG +'                         79830020
LMSG29   DC    AL2(L'MSG29+HDR)                                         79832020
         DC    AL2(OFST)                                                79834020
MSG29    DC    C'IKJ58229I DATA SET  NOT ALLOCATED+'                    79836020
*  ENTRY POINT TO SECOND LEVEL MESSAGE BRANCH TABLE                     79840020
IKJEHSMG DS    0F                  ALIGN SECOND LEVEL BRANCH TABLE      79880020
ASMSG01  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     79920020
         DC    AL3(LSMSG01)        MESSAGE ADDRESS                      79960020
ASMSG02  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     80000020
         DC    AL3(LSMSG02)        MESSAGE ADDRESS                      80040020
ASMSG03  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     80080020
         DC    AL3(LSMSG03)        MESSAGE ADDRESS                      80120020
ASMSG04  DC    AL1(OFSTSM04)       INSERTION OFFSET                     80160020
         DC    AL3(LSMSG04)        MESSAGE ADDRESS                      80200020
ASMSG05  DC    AL1(OFSTSM05)       INSERTION OFFSET                     80240020
         DC    AL3(LSMSG05)        MESSAGE ADDRESS                      80280020
ASMSG06  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     80320020
         DC    AL3(LSMSG06)        MESSAGE ADDRESS                      80360020
ASMSG07  DC    AL1(OFSTSM07)       INSERTION OFFSET                     80400020
         DC    AL3(LSMSG07)        MESSAGE ADDRESS                      80440020
ASMSG08  DC    AL1(OFSTSM08)       INSERTION OFFSET                     80480020
         DC    AL3(LSMSG08)        MESSAGE ADDRESS                      80520020
ASMSG09  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     80560020
         DC    AL3(LSMSG09)        MESSAGE ADDRESS                      80600020
ASMSG10  DC    AL1(OFSTSM10)       INSERTION OFFSET                     80640020
         DC    AL3(LSMSG10)        MESSAGE ADDRESS                      80680020
ASMSG11  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     80720020
         DC    AL3(LSMSG11)        MESSAGE ADDRESS                      80760020
ASMSG12  DC    AL1(OFSTSM12)       INSERTION OFFSET                     80800020
         DC    AL3(LSMSG12)        MESSAGE ADDRESS                      80840020
ASMSG13  DC    AL1(OFSTSM13)       INSERTION OFFSET                     80880020
         DC    AL3(LSMSG13)        MESSAGE ADDRESS                      80920020
ASMSG14  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     80960020
         DC    AL3(LSMSG14)        MESSAGE ADDRESS                      81000020
ASMSG15  DC    AL1(OFSTSM15)       INSERTION OFFSET                     81040020
         DC    AL3(LSMSG15)        MESSAGE ADDRESS                      81080020
ASMSG16  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     81120020
         DC    AL3(LSMSG16)        MESSAGE ADDRESS                      81160020
ASMSG17  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     81200020
         DC    AL3(LSMSG17)        MESSAGE ADDRESS                      81240020
ASMSG18  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     81280020
         DC    AL3(LSMSG18)        MESSAGE ADDRESS                      81320020
ASMSG19  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     81360020
         DC    AL3(LSMSG19)        MESSAGE ADDRESS                      81400020
ASMSG20  DC    AL1(OFSTSM20)       INSERTION OFFSET                     81440020
         DC    AL3(LSMSG20)        MESSAGE ADDRESS                      81480020
ASMSG21  DC    AL1(OFSTSM21)       INSERTION OFFSET                     81520020
         DC    AL3(LSMSG21)        MESSAGE ADDRESS                      81560020
ASMSG22  DC    AL1(OFSTSM22)       INSERTION OFFSET                     81600020
         DC    AL3(LSMSG22)        MESSAGE ADDRESS                      81640020
ASMSG23  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     81680020
         DC    AL3(LSMSG23)        MESSAGE ADDRESS                      81720020
ASMSG24  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     81760020
         DC    AL3(LSMSG24)        MESSAGE ADDRESS                      81800020
ASMSG25  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     81840020
         DC    AL3(LSMSG25)        MESSAGE ADDRESS                      81880020
ASMSG26  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     81920020
         DC    AL3(LSMSG26)        MESSAGE ADDRESS                      81960020
ASMSG27  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     82000020
         DC    AL3(LSMSG27)        MESSAGE ADDRESS                      82040020
ASMSG28  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     82080020
         DC    AL3(LSMSG28)        MESSAGE ADDRESS                      82120020
ASMSG29  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     82160020
         DC    AL3(LSMSG29)        MESSAGE ADDRESS                      82200020
ASMSG30  DC    AL1(OFSTSMSG)       INSERTION OFFSET                     82240020
         DC    AL3(LSMSG30)        MESSAGE ADDRESS                      82280020
*  SECOND LEVEL MESSAGES                                                82320020
LSMSG01  DC    AL2(L'SMSG01+HDR)                                        82360020
         DC    AL2(OFST)                                                82400020
SMSG01   DC    C'IKJ58211I USE FREE COMMAND TO FREE UNUSED DATA SETS'   82440020
LSMSG02  DC    AL2(L'SMSG02+HDR)                                        82480020
         DC    AL2(OFST)                                                82520020
SMSG02   DC    C'IKJ58212I CATALOG INFORMATION INCORRECT'               82560020
LSMSG03  DC    AL2(L'SMSG03+HDR)                                        82600020
         DC    AL2(OFST)                                                82640020
SMSG03   DC    C'IKJ58213I VOLUME OR CVOL NOT ON SYSTEM AND CANNOT BE AX82680020
               CCESSED'                                                 82690020
LSMSG04  DC    AL2(L'SMSG04+HDR)                                        82720020
         DC    AL2(OFST)                                                82760020
SMSG04   DC    C'IKJ58214I CATALOG ERROR CODE '                         82800020
LSMSG05  DC    AL2(L'SMSG05+HDR)                                        82840020
         DC    AL2(OFST)                                                82880020
SMSG05   DC    C'IKJ58214I DYNAMIC ALLOCATION ERROR CODE '              82920020
LSMSG06  DC    AL2(L'SMSG06+HDR)                                        82960020
         DC    AL2(OFST)                                                83000020
SMSG06   DC    C'IKJ58215I DATA SET IS ALLOCATED TO ANOTHER JOB OR USERX83040020
               '                                                        83080020
LSMSG07  DC    AL2(L'SMSG07+HDR)                                        83120020
         DC    AL2(OFST)                                                83160020
SMSG07   DC    C'IKJ58225I DEFAULT ERROR CODE '                         83200020
LSMSG08  DC    AL2(L'SMSG08+HDR)                                        83240020
         DC    AL2(OFST)                                                83280020
SMSG08   DC    C'IKJ58225I PARSE ERROR CODE '                           83320020
LSMSG09  DC    AL2(L'SMSG09+HDR)                                        83360020
         DC    AL2(OFST)                                                83400020
SMSG09   DC    C'IKJ58206I * CANNOT BE USED WITH MEMBER'                83440020
LSMSG10  DC    AL2(L'SMSG10+HDR)                                        83480020
         DC    AL2(OFST)                                                83520020
SMSG10   DC    C'IKJ58210I CATALOG ERROR CODE '                         83560020
LSMSG11  DC    AL2(L'SMSG11+HDR)                                        83600020
         DC    AL2(OFST)                                                83640020
SMSG11   DC    C'IKJ58227I A QUALIFIER CANNOT BE BOTH AN INDEX AND THE X83680020
               LAST QUALIFIER OF A DATA SET NAME'                       83720020
LSMSG12  DC    AL2(L'SMSG12+HDR)                                        83740020
         DC    AL2(OFST)                                                83760020
SMSG12   DC    C'IKJ58228I CATALOG ERROR CODE '                         83780020
LSMSG13  DC    AL2(L'SMSG13+HDR)                                        83800020
         DC    AL2(OFST)                                                83840020
SMSG13   DC    C'IKJ58204I OPEN ERROR CODE '                            83880020
LSMSG14  DC    AL2(L'SMSG14+HDR)                                        83920020
         DC    AL2(OFST)                                                83930020
SMSG14   DC    C'IKJ58214I CATALOG I/O ERROR'                           83940020
LSMSG15  DC    AL2(L'SMSG15+HDR)                                        83960020
         DC    AL2(OFST)                                                83970020
SMSG15   DC    C'IKJ58225I DAIR ERROR CODE '                            83980020
LSMSG16  DC    AL2(L'SMSG16+HDR)                                        84000020
         DC    AL2(OFST)                                                84040020
SMSG16   DC    C'IKJ58205I ALIAS VALID ONLY FOR MEMBERS OF PARTITIONED X84080020
               DATA SETS'                                               84120020
LSMSG17  DC    AL2(L'SMSG17+HDR)                                        84160020
         DC    AL2(OFST)                                                84200020
SMSG17   DC    C'IKJ58206I MORE THAN ONE * IN DATA SET NAME'            84240020
LSMSG18  DC    AL2(L'SMSG18+HDR)                                        84280020
         DC    AL2(OFST)                                                84320020
SMSG18   DC    C'IKJ58206I * NOT VALID AS FIRST INDEX LEVEL'            84360020
LSMSG19  DC    AL2(L'SMSG19+HDR)                                        84400020
         DC    AL2(OFST)                                                84440020
SMSG19   DC    C'IKJ58206I DATA SET NAMES USED * AT DIFFERENT LEVELS'   84480020
LSMSG20  DC    AL2(L'SMSG20+HDR)                                        84520020
         DC    AL2(OFST)                                                84560020
SMSG20   DC    C'IKJ58207I RENAME ERROR CODE '                          84600020
LSMSG21  DC    AL2(L'SMSG21+HDR)                                        84640020
         DC    AL2(OFST)                                                84680020
SMSG21   DC    C'IKJ58207I BLDL ERROR CODE '                            84720020
LSMSG22  DC    AL2(L'SMSG22+HDR)                                        84760020
         DC    AL2(OFST)                                                84800020
SMSG22   DC    C'IKJ58207I STOW ERROR CODE '                            84840020
LSMSG23  DC    AL2(L'SMSG23+HDR)                                        84880020
         DC    AL2(OFST)                                                84920020
SMSG23   DC    C'IKJ58207I DATA SET RESIDES ON MULTIPLE VOLUMES'        84960020
LSMSG24  DC    AL2(L'SMSG24+HDR)                                        85000020
         DC    AL2(OFST)                                                85010020
SMSG24   DC    C'IKJ58229I INVALID UNIT IN USER ATTRIBUTE DATA SET'     85020020
LSMSG25  DC    AL2(L'SMSG25+HDR)                                        85040020
         DC    AL2(OFST)                                                85050020
SMSG25   DC    C'IKJ58229I NO UNIT AVAILABLE'                           85060020
LSMSG26  EQU   *                   UNUSED SECOND LEVEL MESSAGE          85080020
LSMSG27  DC    AL2(L'SMSG27+HDR)                                        85120020
         DC    AL2(OFST)                                                85160020
SMSG27   DC    C'IKJ58208I BOTH MEMBERS MUST BE FROM THE SAME PARTITIONX85200020
               ED DATA SET'                                             85240020
LSMSG28  DC    AL2(L'SMSG28+HDR)                                        85280020
         DC    AL2(OFST)                                                85320020
SMSG28   DC    C'IKJ58208I A DATA SET CAN NOT BE RENAMED TO A MEMBER NAX85360020
               ME'                                                      85400020
LSMSG29  DC    AL2(L'SMSG29+HDR)                                        85440020
         DC    AL2(OFST)                                                85480020
SMSG29   DC    C'IKJ58208I A MEMBER NAME CAN NOT BE RENAMED TO A DATA SX85520020
               ET'                                                      85560020
LSMSG30  DC    AL2(L'SMSG30+HDR)                                        85600020
         DC    AL2(OFST)                                                85640020
SMSG30   DC    C'IKJ58203I SYSTEM OPERATOR DID NOT AUTHORIZE ACCESS TO X85680020
               DATA SET'                                         A49872 85720021
PATCH    DC    20X'00'             PATCH AREA                           93730037
         END                                                            95730037
./  ADD  SSI=72130194,NAME=IKJEHSIR
STAE     TITLE 'IKJEHSIR- STAE INTERFACE/EXIT ROUTINE FOR UTILITIES'    00100020
*                                                                       00150003
*        RELEASE VS2-3.0 SU                                             00160003
*                                                                       00170003
*0000048000-049000,059500-059700                                ZA03681 00180003
*0000064000-064600,120000                                       ZA03681 00192003
*0000123500-123800                                              ZA03681 00196003
*0000415000,498000,675500                                       ZA03681 00198003
*                                                                       00198403
IKJEHSIR CSECT                                                          00200020
         SPACE 1                                                        00300020
         ENTRY IKJEBSIR       ENTRY POINT AND ALIAS                     00400020
         SPACE 1                                                        00500020
*STATUS: CHANGE LEVEL 00                                                00600020
*                                                                       00700020
*FUNCTION/OPERATION:                                                    00800020
*                                                                       00900020
*        THIS IS THE COMMON STAE ROUTINE FOR THE TSO UTILITY            01000020
*        COMMAND PROCESSORS (CP'S).                                     01100020
*               IT RECEIVES CONTROL VIA SYNCH FROM THE                  01200020
*        ABEND STAE INTERFACE ROUTINE (ASIR) WHENEVER A                 01300020
*        CP ABENDS AND THAT CP HAS ISSUED A STAE NAMING                 01400020
*        THIS MODULE (IKJEHSIR) AS ITS STAE EXIT.                       01500020
*                                                                       01600020
*        DETERMINATION IS FIRST MADE TO SEE IF THE CP                   01700020
*        WANTS TO HANDLE THE ABEND.  IF SO, A CHECK IS MADE             01800020
*        TO SEE IF THE CP WANTS IKJEHSIR TO ISSUE A MESSAGE             01900020
*        TO THE USER AT THE TERMINAL.  IF YES, AN ATTEMPT IS            02000020
*        MADE TO GET CORE FOR A WORK AREA SO THAT THE USER              02100020
*        AT THE TERMINAL CAN BE NOTIFIED THAT THE CP HAS                02200020
*        ABENDED.  IF CORE IS GOTTEN, AN INFORMATIONAL                  02300020
*        MESSAGE, CONTAINING THE CP'S NAME AND THE ABEND CODE,          02400020
*        IS PUT OUT TO THE USER AT THE TERMINAL.                        02500020
*                                                                       02600020
*        IF THE CP DOES NOT WANT TO HANDLE THE ABEND, THE               02700020
*        ABEND CODE IS PLACED IN THE ENVIRONMENT CONTROL TABLE          02800020
*        (ECT) (QV) FOR THE TERMINAL MONITOR PROGRAM (TMP).             02900020
*                                                                       03000020
*        IF THE ABEND CODE IS 33E, NO MESSAGE IS ISSUED, FOR THIS       03100020
*        MEANS THE USER HIT THE ATTENTION KEY TO STOP THE               03200020
*        CP'S PROCESSING.                                               03300020
*                                                                       03400020
*        IF THE CP IS GOING TO HANDLE THE ABEND, THE CP'S               03500020
*        RETRY ROUTINE ADDRESS IS RETURNED TO ASIR.  IF THE             03600020
*        ABEND CODE IS 33E, A DIRECT CALL TO THE RETRY ADDRESS          03700020
*        IS MADE AS A RETRY ROUTINE CANNOT BE SCHEDULED                 03800020
*        DURING A DETATCH.                                              03900020
         EJECT                                                          04000020
*ENTRY POINTS:                                                          04100020
*                                                                       04200020
*        IKJEHSIR- ONLY ENTRY POINT, FROM ASIR                          04300020
*        IKJEBSIR- EQUIVALENT TO IKJEHSIR                               04400020
*                                                                       04500020
*INPUT:                                                                 04600020
*                                                                       04700020
*        R0    A CODE 12 IF NO SDWA.                                    04800003
*              A CODE 0,4,8,16 IF SDWA AQUIRED.                         04850003
*                                                                       04860003
*        R1    ADDRESS OF SDWA IF ACQUIRED OR                           04900003
*              ABEND COMP CODE IF NO SDWA.                              05000003
*                                                                       05500020
*        R2    IF R0 = 0, 4 , 8, 16, UNPREDICTABLE                      05600003
*                                                                       05700020
*              IF R0 = 12, ADDRESS OF EXIT PARAMETER LIST               05800020
*                                                                       05900020
*        R14   RETURN ADDRESS                                           05950003
*                                                                       05960003
*        R15   ADDRESS OF STAE EXIT ROUTINE                             05970003
*OUTPUT:                                                                06000020
*        NORMAL (IE, RETRY):                                            06100020
*                  A MESSAGE TO THE USER AT THE TERMINAL                06200020
*              R0  THE ADDRESS OF THE RETRY ROUTINE                     06300020
*              R1  ADDRESS OF SDWA IF ACQUIRED OR                       06400003
*                  ABEND COMPLETION CODE OF NO SDWA                     06450003
*              R14 RETURN ADDRESS                                       06460003
*              R15 A 4 INDICATING RETRY                                 06500020
*                                                                       06600020
*        ABNORMAL (IE, NO RETRY):                                       06700020
*              R15 A 0 INDICATING NO RETRY                              06800020
*                                                                       06900020
*EXTERNAL ROUTINES:                                                     07000020
*                                                                       07100020
*              PUTLINE-  TO PUT A MESSAGE                               07200020
*              GETMAIN-  TO GET WORK AREA                               07300020
*              FREEMAIN- TO FREE WORK AREA                              07400020
         EJECT                                                          07500020
*EXIT:                                                                  07600020
*                                                                       07700020
*        NORMAL:                                                        07800020
*              NORMAL EXIT IS BR R14 TO ASIR                            07900020
*                                                                       08000020
*        ABNORMAL:                                                      08100020
*              ABNORMAL EXIT IS BR R14 TO ASIR                          08200020
*                                                                       08300020
*        NOTE:  ON A 33E ABEND (DETACH), A BALR R14,R15 IS MADE         08400020
*               TO THE CP'S RETRY ROUTINE.                              08500020
*                                                                       08600020
*TABLES/WORKAREAS:                                                      08700020
*                                                                       08800020
*        ECT-      ENVIRONMENT CONTROL TABLE                            08900020
*        STAEWORK- WORK AREA SUPPLIED BY ASIR                           09000020
*        RETRY-    PSEUDO RETRY ADDRESS SUPPLIED BY CP                  09100020
*        PARAM-    LIST OF ABEND CODES AND RETRY ADDRESSES              09200020
*                  SUPPLIED BY CP                                       09300020
*        IKJUWORK- WORK AREA GOTTEN VIA GETMAIN                         09400020
*                                                                       09500020
*ATTRIBUTES:                                                            09600020
*                                                                       09700020
*        REENTRANT, READ-ONLY                                           09800020
*                                                                       09900020
         EJECT                                                          10000020
         YREGS                                                          10100020
*                             LENGTH EQUATES                            10200020
         SPACE 1                                                        10300020
L0       EQU   0              LENGTH OF ZERO                            10400020
L1       EQU   1              LENGTH OF ONE                             10500020
L2       EQU   2              LENGTH OF TWO                             10600020
L3       EQU   3              LENGTH OF THREE                           10700020
L4       EQU   4              LENGTH OF FOUR                            10800020
L5       EQU   5              LENGTH OF FIVE                            10900020
L6       EQU   6              LENGTH OF SIX                             11000020
L8       EQU   8              LENGTH OF EIGHT                           11100020
L12      EQU   12             LENGTH OF TWELVE                          11200020
L20      EQU   20             LENGTH OF TWENTY                          11300020
L256     EQU   256            LENGTH OF TWO FIFTY-SIX                   11400020
         EJECT                                                          11450003
IKJEBSIR LR    R6,R14 SAVE RETURN REG                           ZA03681 12000003
         SPACE 1                                                        12050020
         LR    R12,R15        SET UP                                    12100020
         USING IKJEHSIR,R12   BASE REG                                  12300020
         B     BRARID         BRANCH AROUND ID                  ZA03681 12350003
         DC    C'IKJEHSIR'    MODULE ID                         ZA03681 12360003
         DC    X'5100'        DATE - APRIL 10, 1975             ZA03681 12370003
BRARID   EQU   *                                                ZA03681 12380003
         SPACE 1                                                        12400020
*        SINCE THE RETRY ROUTINE NEEDS THE ASIR ENTRY CODE,             12500020
*        WE HAVE TO SAVE THIS CODE FOR THE RETRY ROUTINE.               12600020
         SPACE 1                                                        12700020
         LR    R3,R0          SAVE ASIR ENTRY CODE                      12800020
         C     R0,F12         IS THERE A WORK AREA                      12900020
         BE    ROUTE2         BR ON NO                                  13000020
         SPACE 1                                                        13100020
         USING STAEWORK,R1    STAE WORK AREA BASE REG                   13200020
         SPACE 1                                                        13300020
*        THE FIRST WORD OF THE ASIR WORK AREA IS THE POINTER            13400020
*        PASSED BY THE CP IN THE PARAM= PARAMETER OF THE STAE           13500020
*        MACRO.  THE SECOND WORD IS THE ABEND CODE AS IT                13600020
*        WOULD APPEAR IN THE TCBCMP FIELD OF THE TCB.                   13700020
         SPACE 1                                                        13800020
         L     R2,STAEEXIT    GET EXIT PARM PTR                         13900020
         L     R7,STAECODE    GET ABEND CODE                            14000020
         SPACE 1                                                        14100020
*        SINCE WE DID HAVE A WORK AREA, WE DON'T WANT TO                14200020
*        CHANGE R7, SO WE BRANCH AROUND THE LOADING OF R7.              14300020
         SPACE 1                                                        14400020
         B     ROUTE2A        BYPASS FOLLOWING                          14500020
         SPACE 1                                                        14600020
         DROP  R1             DROP STAEWORK REG                         14700020
         EJECT                                                          14800020
*        IF THERE IS NO ASIR WORK AREA, R1 COMES IN WITH THE            14900020
*        COMPLETION CODE, WE WILL NEED IT, SO WE SAVE IT.               15000020
         SPACE 1                                                        15100020
ROUTE2   LR    R7,R1          PUT COMP CODE IN R7                       15200020
         SPACE 1                                                        15300020
*        R2 IS POINTING AT THE PARAMETER PASSED BY THE CP.              15400020
*        IT IS SETUP ABOVE, OR IT COMES IN SETUP BY ASIR                15500020
*        WHEN NO WORK AREA IS AVAILABLE, SO SET A BASE REG.             15600020
         SPACE 1                                                        15700020
         USING STAEPARM,R2    PARM BASE REG                             15800020
         SPACE 1                                                        15900020
*        NOW WE SET R4 TO THE PSEUDO RETRY ADDRESS PASSED BY            16000020
*        THE CP, AND SET IT UP AS A DSECT BASE.                         16100020
         SPACE 1                                                        16200020
ROUTE2A  L     R4,RETRYER     GET PSEUDO RETRY ADDR                     16300020
         SPACE 1                                                        16400020
         USING RETRY,R4       RETRY BASE REG                            16500020
         SPACE 1                                                        16600020
*        NOW WE SET R5 TO THE LIST OF ABEND CODES PASSED BY             16700020
*        THE CP, AND SET IT UP AS A DSECT BASE.                         16800020
         SPACE 1                                                        16900020
         L     R5,TBLADDR     GET LIST ADDRESS                          17000020
         SPACE 1                                                        17100020
         USING PARAM,R5       LIST BASE REG                             17200020
         SPACE 1                                                        17300020
*        NOW WE FIND OUT IF THE CP WANTS TO HANDLE ABENDS OR            17400020
*        NOT.  THE FIRST BYTE OF THE STAEPARM IS A FLAG                 17500020
*        TELLING US THIS. THE DEFAULT IS YES.                           17600020
         SPACE 1                                                        17650020
*********************************************************************** 17700020
*        NOTE:  IF A DUMP OF A CP IS WANTED, TURN STAETMP BIT ON.     * 17800020
*               THIS WILL BYPASS STAE PROCESSING BY THE CP AND        * 17900020
*               BY IKJEHSIR.                                          * 18000020
*********************************************************************** 18050020
         EJECT                                                          18051020
*        CHECK FOR PARAMETERS BEING PROPER; IE, FILLED IN, TO AVOID     18052020
*        UNPLESANT ABENDS IN IKJEHSIR ITSELF.                           18053020
         SPACE 1                                                        18054020
         LA    R5,L0(R5)      CLEAR THE TOP BYTE                        18055020
         LTR   R5,R5          ANYTHING THERE                            18056020
         BZ    GOOFUP         NO, LET THE TMP HAVE IT                   18057020
         SPACE 1                                                        18058020
         L     R8,TMPREG1     GET TMP REG ONE                           18059020
         LA    R8,L0(R8)      CLEAR TOP BYTE                            18060020
         LTR   R8,R8          ANYTHING THERE                            18061020
         BZ    GOOFUP         NO, LET TMP HAVE IT                       18062020
         SPACE 1                                                        18063020
         LA    R4,L0(R4)      CLEAR TOP BYTE                            18064020
         LTR   R4,R4          ANYTHING THERE                            18065020
         BZ    GOOFUP         NO, LET TMP HAVE IT                       18066020
         SPACE 1                                                        18067020
         TM    STAEFLAG,STAETMP+STAEUSER  EITHER SET                    18068020
         BZ    GOOFUP         NO, LET TMP HAVE IT                       18069020
         SPACE 1                                                        18100020
         TM    STAEFLAG,STAETMP TMP TO HANDLE ABENDS                    18200020
         BO    LETTMP         BR ON YES                                 18300020
         SPACE 1                                                        18400020
*        WE DON'T NEED THE POINTER TO THE STAEPARM ANY MORE.            18500020
         SPACE 1                                                        18600020
         DROP  R2             STAEPARM BASE REG                         18700020
         EJECT                                                          18800020
*        NOW THAT WE KNOW THE CP WANTS TO HANDLE SOME ABENDS,           18900020
*        LET'S FIND OUT WHAT KIND OF ABEND CODE IT WAS; IE,             19000020
*        SYSTEM OR USER.                                                19100020
         SPACE 1                                                        19200020
*        FIRST WE COPY THE CODE SO WE CAN PLAY WITH IT.                 19300020
         SPACE 1                                                        19400020
         LA    R8,L0(R7)      COPY ABEND CODE, AND CLEAR TOP BYTE       19500020
         SPACE 1                                                        19800020
*        NOW WE MOVE THE USER PORTION TO R9.                            19900020
         SPACE 1                                                        20000020
         SRDL  R8,L12         USER PORTION TO R9                        20100020
         SPACE 1                                                        20200020
*        THE FIRST THING WE CHECK FOR IS A SYSTEM ABEND,                20300020
*        IF THERE IS ONE, IT OVERRIDES ANY USER ABEND.                  20400020
         SPACE 1                                                        20500020
         LTR   R8,R8          SYSTEM ABEND CODE                         20600020
         BNZ   SYSTEM         BR ON YES                                 20700020
         SPACE 1                                                        20800020
*        IF NOT A SYSTEM ABEND CODE, CHECK FOR A USER ABEND             20900020
*        CODE.  IF IT IS A USER ABEND CODE OF ZERO, IT WILL             21000020
*        BE DISALLOWED AND TREATED AS IF THE CP SAID TO LET             21100020
*        THE TMP HANDLE IT.                                             21200020
         SPACE 1                                                        21300020
         SRL   R9,L20         INTO LAST 3 NIBBLES                       21400020
         LTR   R9,R9          USER ABEND CODE                           21500020
         BZ    GOOFUP         BR ON NO                                  21600020
         EJECT                                                          21700020
*        NOW WE FIND OUT IF THE CP WANTS TO HANDLE USER ABENDS.         21800020
*        IF WE FIND HE WANTS TO HANDLE IT, WE GO AND SET UP             21900020
*        FOR HIS RETRY ROUTINE, OTHERWISE, WE GIVE THE ABEND            22000020
*        TO THE TMP.                                                    22100020
         SPACE 1                                                        22200020
USER     TM    PARMFLAG,FLAGUSER IS THIS A USER ENTRY                   22300020
         BZ    USER01            BR ON NO                               22400020
         SPACE 1                                                        22500020
*        NOW WE FIND OUT IF IT IS A LIST OF CODES OR ONLY ONE           22600020
         SPACE 1                                                        22700020
         TM    PARMFLAG,FLAGONE ONE CODE ENTRY                          22800020
         BZ    USER02           BR ON NO                                22900020
         SPACE 1                                                        22950020
*        ITS A ONE CODE ENTRY; THEREFORE, THE CODE IS IN THE            22960020
*        SECOND HALFWORD OF THE STAEPARM CONTROL BLOCK.  SEE            22970020
*        IF IT MATCHES THE ABEND CODE WE HAVE IN R9.                    22980020
         SPACE 1                                                        22990020
         CH    R9,PARMCODE    IS THIS THE CODE                          23000020
         BNE   USER01         BR ON NO                                  23100020
         SPACE 1                                                        23200020
*        THE CP WANTS TO HANDLE THIS USER ABEND, SO GET HIS             23300020
*        RETRY ROUTINE ADDRESS FROM THE LIST.                           23400020
         SPACE 1                                                        24000020
         B     CLEARR2        SET UP FOR RETRY ROUTINE                  24100020
         EJECT                                                          24200020
*        THIS ENTRY WASN'T THE ONE WE WERE LOOKING FOR, SO              24300020
*        SET UP FOR THE NEXT, BUT FIRST SEE IF THE END OF               24400020
*        THE LIST HAS BEEN REACHED.                                     24500020
         SPACE 1                                                        24600020
USER01   TM    PARMFLAG,FLAGEND+FLAGUSER IS IT END OF LIST              24700020
         BO    LETTMP                    YES, LET TMP HANDLE IT         24800020
         SPACE 1                                                        24900020
         LA    R5,PARMLNTH(R5) POINT AT NEXT ENTRY                      25000020
         B     USER            EXAMINE IT                               25100020
         SPACE 1                                                        25200020
*        IT WAS NOT FOR ONE CODE, SEE IF IT IS FOR A LIST.              25300020
         SPACE 1                                                        25400020
USER02   TM    PARMFLAG,FLAGMUL LIST POINTER                            25500020
         BZ    USER03           BR ON NO                                25600020
         SPACE 1                                                        25700020
*        POINT AT THE LIST OF CODES SO WE CAN CHECK THEM                25800020
         SPACE 1                                                        25900020
         L     R11,PARMADDR   LIST POINTER                              26000020
         SPACE 1                                                        26100020
         USING PARMLIST,R11   LIST BASE REG                             26200020
         SPACE 1                                                        26300020
*        CLEAR THE REG WE WILL USE TO COUNT ENTRIES IN CODE LIST        26400020
         SPACE 1                                                        26500020
         XR    R2,R2          CLEAR REG 2                               26600020
         L     R15,EFFS2      F'S FOR CLEARING                          26650020
         SPACE 1                                                        26700020
*        LOOK AT EACH ENTRY IN THE LIST, AND SEE IF IT                  26800020
*        MATCHES THE ABEND CODE WE HAVE IN R9                           26900020
         SPACE 1                                                        27000020
USER02A  LH    R14,CODES      GET AN ENTRY                              27100020
         NR    R14,R15        CLEAR TOP OF REG                          27300020
         CR    R9,R14         IS THIS THE RIGHT CODE                    27400020
         BNE   USER02B        BR ON NO                                  27500020
         SPACE 1                                                        27600020
*        HAVE THE RIGHT CODE, SO GET THE RETRY ROUTINE ADDRESS          27700020
         SPACE 1                                                        27800020
         B     GETRETRY       SET UP FOR RETRY ROUTINE                  28000020
         EJECT                                                          28100020
*        THIS WASN'T THE RIGHT CODE, CHECK FOR THE END OF LIST          28200020
         SPACE 1                                                        28300020
USER02B  TM    CODES,CODESEND END OF LIST                               28400020
         BO    USER01         YES, CHECK NEXT ENTRY                     28500020
         SPACE 1                                                        28600020
         LA    R11,CODELNTH(R11) POINT AT NEXT CODE                     28700020
         SPACE 1                                                        28800020
*        UP THE COUNT OF CODES IN THE LIST BY FOUR.                     28900020
         SPACE 1                                                        29000020
         LA    R2,L4(R2)      UP COUNT BY ONE * FOUR                    29100020
         B     USER02A        CHECK IT                                  29200020
         SPACE 1                                                        29300020
*        THE ENTRY IS NOT FOR ONE OR A LIST, SEE IF IT IS               29400020
*        FOR ALL OTHER TYPES OF USER ABENDS                             29500020
         SPACE 1                                                        29600020
USER03   TM    PARMFLAG,FLAGALL IS IT FOR OTHERS                        29700020
         BZ    USER01           BR ON NO                                29800020
         SPACE 1                                                        29900020
*        GET THE ADDRESS THAT WILL HANDLE ALL OTHER ABENDS              30000020
         SPACE 1                                                        30100020
         B     CLEARR2        SET UP FOR RETRY ROUTINE                  30400020
         EJECT                                                          30500020
*        THIS SECTION EXAMINES THE PARAMETER LIST FOR SYSTEM            30600020
*        ABENDS THE CP WANTS TO HANDLE.  IF WE FIND THE CP              30700020
*        WANTS TO HANDLE IT, WE SET UP FOR RETRY, OTHERWISE             30800020
*        WE GIVE THE ABEND TO THE TMP.                                  30900020
         SPACE 1                                                        31000020
SYSTEM   TM    PARMFLAG,FLAGUSER USER ABEND ENTRY                       31100020
         BO    SYSTEM1A          BR ON YES                              31200020
         SPACE 1                                                        31300020
*        NOW FIND OUT IF IT IS A SINGLE ENTRY OR A LIST                 31400020
         SPACE 1                                                        31500020
         TM    PARMFLAG,FLAGONE ONE CODE ENTRY                          31600020
         BZ    SYSTEM02         BR ON NO                                31700020
         CH    R8,PARMCODE      RIGHT CODE                              31800020
         BNE   SYSTEM01         BR ON NO                                31900020
         SPACE 1                                                        32000020
*        THE CP WANTS TO HANDLE THIS SYTEM ABEND CODE, SO               32100020
*        GET HIS RETRY ROUTINE ADDRESS                                  32200020
         SPACE 1                                                        32300020
         B     CLEARR2        SETUP FOR RETRY ROUTINE                   32600020
         SPACE 1                                                        32700020
*        THIS ENTRY WASN'T FOR THIS CODE, SO SET UP FOR                 32800020
*        NEXT ENTRY AFTER CHECKING FOR END OF THE LIST                  32900020
         SPACE 1                                                        33000020
SYSTEM01 TM    PARMFLAG,FLAGEND END OF LIST                             33100020
         BO    LETTMP           LET TMP HANDLE IT                       33200020
         SPACE 1                                                        33300020
*        WE CAME HERE IF A USER CODE WAS FOUND BY 'SYSTEM';             33400020
*        SINCE THERE IS NO SYSTEM FLAG, WE CANNOT CHECK FOR             33500020
*        ONE AT SYSTEM01.                                               33600020
         SPACE 1                                                        33700020
SYSTEM1A LA    R5,PARMLNTH(R5) POINT AT NEXT ENTRY                      33800020
         B     SYSTEM          CHECK NEXT ENTRY                         33900020
         SPACE 1                                                        34000020
*        ENTRY WAS NOT FOR ONE CODE, SEE IF IT IS A LIST                34100020
         SPACE 1                                                        34200020
SYSTEM02 TM    PARMFLAG,FLAGMUL LIST ENTRY                              34300020
         BZ    SYSTEM03         BR ON NO                                34400020
         SPACE 1                                                        34500020
*        CLEAR THE REG WE WILL USE FOR COUNT OF CODES                   34600020
         SPACE 1                                                        34700020
         XR    R2,R2          CLEAR REG 2                               34800020
         EJECT                                                          34900020
*        POINT AT THE LIST OF CODES SO WE CAN EXAMINE THEM              35000020
*        THE USING FOR THE BASE REG IS SET IN 'USER'                    35100020
         SPACE 1                                                        35200020
         L     R11,PARMADDR   LIST POINTER                              35300020
         L     R15,EFFS2      F'S FOR CLEARING                          35350020
         SPACE 1                                                        35400020
*        LOOK AT EACH ENTRY IN THE CODE LIST AND SEE IF IT              35500020
*        MATCHES THE SYSTEM CODE WE HAVE IN R8                          35600020
         SPACE 1                                                        35700020
SYSTEM2A LH    R14,CODES      GET CODE ENTRY                            35800020
         NR    R14,R15        CLEAR TOP OF REG                          36000020
         CR    R8,R14         IS THIS THE CODE                          36100020
         BNE   SYSTEM2B       BR ON NO                                  36200020
         SPACE 1                                                        36300020
*        WE HAVE THE RIGHT CODE, SO NOW GET THE RETRY ADDRESS           36400020
         SPACE 1                                                        36500020
         B     GETRETRY       SET UP FOR RETRY ROUTINE                  36700020
         SPACE 1                                                        36800020
*        THIS WASN'T THE CODE WE HAVE, CHECK FOR END OF LIST            36900020
         SPACE 1                                                        37000020
SYSTEM2B TM    CODES,CODESEND    END OF LIST                            37100020
         BO    SYSTEM01          BR ON YES                              37200020
         LA    R11,CODELNTH(R11) POINT AT NEXT CODE                     37300020
         SPACE 1                                                        37400020
*        UP THE COUNT OF CODES IN THE LIST BY FOUR.                     37500020
         SPACE 1                                                        37600020
         LA    R2,L4(R2)      UP COUNT BY ONE * FOUR                    37700020
         B     SYSTEM2A       CHECK THIS ONE                            37800020
         SPACE 1                                                        37900020
*        ENTRY IS NOT FOR ONE CODE OR A LIST OF CODES,                  38000020
*        SEE IF IT IS FOR ALL OTHER SYSTEM ABEND CODES.                 38100020
         SPACE 1                                                        38150020
SYSTEM03 TM    PARMFLAG,FLAGALL IS IT FOR ALL OTHERS                    38200020
         BZ    SYSTEM01         BR ON NO                                38250020
         SPACE 1                                                        38300020
         B     CLEARR2        SET UP FOR RETRY ROUTINE                  38350020
         SPACE 1                                                        38400020
*        WE DON'T NEED THIS REGISTER ANYMORE, SO DROP IT.               38450020
         SPACE 1                                                        38500020
         DROP  R11            PARM ADDR BASE REG                        38550020
         EJECT                                                          38600020
*        IF THE CP DOES NOT WANT TO HANDLE THE ABEND, EITHER THRU       38650020
*        THE STAETMP BIT OF THE STAEPARM CONTROL BLOCK BEING ON,        38700020
*        BY NOT HAVING A FLAGALL ENTRY, OR BY NOT HAVING THE CODE       38750020
*        IN HIS LIST OF CODES, WE WILL LET THE TMP HANDLE IT.           38800020
         SPACE 1                                                        40100020
LETTMP   L     R1,TMPREG1     POINTER TO TMP PARMS                      40200020
         SPACE 1                                                        40300020
         USING TMPPARM,R1     PARM BASE REG                             40400020
         SPACE 1                                                        40500020
         L     R11,TMPECT     POINTER TO ECT                            40600020
         SPACE 1                                                        40700020
         USING ECT,R11        ECT BASE REG                              40800020
         SPACE 1                                                        40900020
         ST    R7,ECTRCDF     STORE ABEND CODE                          41000020
         SPACE 1                                                        41100020
*        WE HAVE DONE WHAT WAS ASKED OF US; IE, NOTHING,                41200020
*        SO NOW WE GO BACK TO ASIR INDICATING NO RETRY.                 41300020
*                                                                       41310020
         SPACE 1                                                        41400020
LETTMP01 LR    R14,R6         RESTORE RETURN REG                ZA03681 41500003
         SPACE 1                                                        41600020
*        NO RETRY IS INDICATED BY A RETURN CODE OF 0 IN R15.            41700020
         SPACE 1                                                        41800020
         XR    R15,R15        RETURN CODE OF ZERO                       41900020
         BR    R14            RETURN TO ASIR                            42000020
         SPACE 1                                                        42100020
*        IF WE GET A USER ABEND CODE OF ZERO, WE TREAT IT AS IF THERE   42200020
*        WERE NO RETRY ROUTINE; IE, WE LET THE TMP HANDLE IT.           42300020
         SPACE 1                                                        42500020
GOOFUP   EQU   LETTMP         LET TMP HAVE IT                           42600020
         SPACE 1                                                        42700020
*        WE DON'T NEED THE REGS ANYMORE, SO DROP THEM                   42800020
         SPACE 1                                                        42900020
         DROP  R1             TMP PARM BASE REG                         43000020
         DROP  R11            ECT BASE REG                              43100020
         EJECT                                                          43200020
*        THE CP DID NOT HAVE A LIST, SO CLEAR REG 2                     43250020
         SPACE 1                                                        43260020
CLEARR2  XR    R2,R2          CLEAR LIST NUMBER                         43270020
         SPACE 1                                                        43280020
*        THE CP WANTS TO HANDLE THE ABEND, GET HIS RETRY                43290020
*        ROUTINE ADDRESS FROM THE LIST.                                 43292020
         SPACE 1                                                        43294020
GETRETRY L     R10,PARMRTRY   GET RETRY ROUTINE ADDRESS                 43296020
         SPACE 1                                                        43298020
*        WE KNOW THAT THE CP WANTS TO HANDLE THE ABEND, SO              43300020
*        STORE THE THINGS THAT WE HAVE TO GIVE HIM, THEN                43400020
*        CHECK IF IT WAS A 33E ABEND.                                   43500020
         SPACE 1                                                        43600020
CHECK33E ST    R10,RETRYR15   RETRY ROUTINE BASE ADDRESS                43700020
         SPACE 1                                                        43800020
         ST    R2,RETRYR2     STORE BRANCH ENTRY CODE                   44000020
         ST    R3,RETRYR0     STORE STAE ENTRY CODE                     44100020
         SPACE 1                                                        44200020
*        CHECK IF IT IS A SYSTEM OR USER ABEND CODE, WE WANT            44300020
*        TO GIVE IT TO THE CP RIGHT JUSTIFIED                           44400020
         SPACE 1                                                        44500020
         LTR   R8,R8          SYSTEM ABEND                              44600020
         BZ    CHK33E01       BR ON NO                                  44700020
         ST    R8,RETRYR1     STORE SYSTEM CODE                         44800020
         SPACE 1                                                        44900020
*        CHECK TO SEE IF IT WAS A 33E ABEND. IF IT WAS, WE              45000020
*        HAVE TO GO DIRECTLY TO THE RETRY ROUTINE AS WE                 45100020
*        CANNOT SCHEDULE A RETRY ROUTINE DURING DETACH.                 45200020
         SPACE 1                                                        45300020
         C     R8,SYS33E      33E ABEND                                 45400020
         BNE   CHK33E02       BR ON NO, PUT OUT MESSAGE                 45500020
         SPACE 1                                                        45600020
*        THE USER MUST SPECIFICALLY ASK TO HANDLE A 33E ABEND,          45700020
*        SO CHECK TO SEE IF HE DID OR IF WE CAME HERE FROM              45800020
*        A FLAGALL ENTRY.                                               45900020
         SPACE 1                                                        46000020
         TM    PARMFLAG,FLAGALL IS IT FLAGALL ENTRY                     46100020
         BO    LETTMP           YES, GIVE TO TMP                        46200020
         EJECT                                                          46300020
*        TO ENABLE US TO FIND OUR WAY BACK TO ASIR, SET UP STANDARD     46400020
*        LINKAGE CONVENTIONS FOR THE 33E RETRY ROUTINE IN A GETMAINED   46500020
*        AREA IN SUBPOOL 1.                                             46600020
         SPACE 1                                                        46800020
         GETMAIN  R,LV=L2GET*L2,SP=L1   GET SOME CORE                   46900020
         SPACE 1                                                        47000020
*        SET UP A DOUBLE CHAIN OF SAVEAREAS SO THAT IKJEHSIR'S REGS     47100020
*        CAN BE RECOVERED WHEN THE 33E RETRY ROUTINE RETURNS TO         47150020
*        IKJEHSIR.  THIS IS REQUIRED SINCE, WHEN THE RETRY ROUTINE      47160020
*        SAVES REGISTERS AT R13+12, IT IS SAVING ITS OWN REGISTERS      47170020
*        AS THEY WERE STORED BY THE PSEUDO MACRO.                       47180020
         SPACE 1                                                        47200020
         STM   R14,R12,L12(R1)   SAVE MY REGS                           47400003
         SPACE 1                                                        47560020
*        NOW WE SET UP THE SECOND SAVE AREA AT +72                      47570020
         SPACE 1                                                        47580020
         LA    R13,L2GET(R1)  POINT AT SAVE TWO                         47590020
         ST    R1,L4(R13)     BACK CHAIN TO SAVE ONE                    47592020
         ST    R13,L8(R1)     FOWARD CHAIN FROM SAVE ONE                47594020
         ST    R13,RETRYR13   POINTER FOR RETRY ROUTINE                 47596020
         SPACE 1                                                        47600020
*        SET UP A POINTER BACK TO US FOR RETRY ROUTINE                  47700020
         SPACE 1                                                        47800020
         LA    R14,COMEBACK   RETURN POINT                              47900020
         ST    R14,RETRYR14   STORE IT                                  48000020
         SPACE 1                                                        48100020
*        GET THE ADDRESS OF THE RETRY PSEUDO ROUTINE AND BALR TO IT.    48200020
         SPACE 1                                                        48300020
         LA    R15,RETRIER    ROUTINE ADDRESS                           48400020
         BALR  R14,R15        GO TO HIM                                 48500020
         SPACE 1                                                        48550020
*        NOW RESTORE MY REGISTERS THAT WERE SAVED UP ABOVE.             48560020
         SPACE 1                                                        48570020
COMEBACK L     R13,L4(R13)    RESTORE R13                               48580020
         LM    R14,R12,L12(R13) RESTORE THE REST OF THEM                48590020
         EJECT                                                          48600020
*        WE TREAT A RETURN FROM A 33E RETRY ROUTINE AS IF NO RETRY      48700020
*        ROUTINE WERE TO BE SCHEDULED, SINCE WE CANNOT SCHEDULE ONE     48800020
*        ON A 33E ABEND ANYWAY.                                         48900020
         SPACE 1                                                        49000020
*        BEFORE WE RETURN, WE MUST FREE THE CORE WE GOT.                49100020
         SPACE 1                                                        49200020
         LR    R1,R13         AREA TO FREE                              49300020
         SPACE 1                                                        49500020
         FREEMAIN  R,LV=L2GET*L2,A=(R1),SP=L1  FREE IT                  49600020
         SPACE 1                                                        49700020
         LR    R14,R6        RESTORE RETURN REG                 ZA03681 49800003
         SPACE 1                                                        49850020
*        NO RETRY IS INDICATED BY A RETURN CODE OF 0 IN R15.            49860020
         SPACE 1                                                        49870020
         XR    R15,R15        RETURN CODE ZERO                          49900020
         BR    R14            RETURN TO ASIR                            50000020
         EJECT                                                          50100020
*        IF IT IS NOT A SYSTEM ABEND, ALL WE HAVE TO DO IS              50200020
*        STORE THE USER ABEND FOR THE CP'S RETRY ROUTINE                50300020
         SPACE 1                                                        50400020
CHK33E01 ST    R9,RETRYR1     STORE ABEND CODE                          50500020
         SPACE 1                                                        50600020
*        CHECK TO SEE IF THE CP WANTS TO PUT OUT HIS OWN MESSAGE.       50700020
         SPACE 1                                                        50800020
CHK33E02 TM    PARMFLAG,FLAGNMSG NO MESSAGE                             50900020
         BO    NOCORE            BR ON YES                              51000020
         SPACE 1                                                        51100020
*        THIS SECTION SETS UP THE IKJUWORK DSECT FOR PUTLINE.           51200020
*        FIRST WE DO A GETMAIN FOR REQUIRED AMOUNT OF CORE              51300020
*        IN SUBPOOL 1.                                                  51350020
         SPACE 1                                                        51400020
GETCORE  GETMAIN  R,LV=LCORE,SP=L1 GET CORE FOR PUTLINE                 51500020
         SPACE 1                                                        51600020
*        WE DON'T NEED THE POINTER TO PARM ANY MORE, GO.                51700020
         SPACE 1                                                        51800020
         DROP  R5             PARM BASE REG                             51900020
         EJECT                                                          52000020
*        THIS SECTION SETS UP THE PARAMETER LISTS AND                   52100020
*        MESSAGE FOR PUTLINE SERVICE ROUTINE.                           52200020
         SPACE 1                                                        52300020
*        UPON ENTRY:                                                    52350020
*              R1  GOTTEN CORE                                          52400020
*              R4  RETRY DSECT                                          52500020
*              R8  SYSTEM CODE                                          52600020
*              R9  USER CODE                                            52700020
*              R10 RETRY ADDRESS                                        52800020
         SPACE 1                                                        52900020
*        THE FIRST THING WE HAVE TO DO IS ESTABLISH THE                 53000020
*        STANDARD LINKAGE CONVENTIONS FOR PUTLINE.                      53100020
         SPACE 1                                                        53200020
         LR    R13,R1         POINT AT NEW SAVEAREA                     53500020
         SPACE 1                                                        53600020
         USING IKJUWORK,R13   SET UP DSECT BASE                         53700020
         SPACE 1                                                        53800020
*        CLEAR THE DSECT OUT SO THINGS WITH ZEROS WILL BE THERE.        53900020
         SPACE 1                                                        54000020
         XC    PUTLPARM(L2XC),PUTLPARM CLEAR CORE                       54100020
         SPACE 1                                                        54200020
*        SET UP A REGISTER POINTING TO THE PARMETERS PASSED             54300020
*        TO THE CP BY THE TMP SO WE CAN GET THINGS FOR THE              54400020
*        PUTLINE SERVICE ROUTINE.                                       54500020
         SPACE 1                                                        54600020
         L     R1,TMPREG1     TMP PARM REG                              54700020
         SPACE 1                                                        54800020
         USING TMPPARM,R1     TMP PARM BASE REG                         54900020
         SPACE 1                                                        55000020
         L     R11,TMPUPT     POINTER TO THE USER                       55100020
         ST    R11,PUTLUPT    . PROFILE TABLE                           55200020
         L     R11,TMPECT     POINTER TO THE ENVIRONMENT                55300020
         ST    R11,PUTLECT    . CONTROL TABLE                           55400020
         SPACE 1                                                        55500020
         DROP  R1             TMP PARM BASE REG                         55600020
         SPACE 1                                                        55700020
*        WE WILL BE MODIFYING THE ECT, SO SET UP A BASE FOR IT          55800020
         SPACE 1                                                        55900020
         USING ECT,R11        ECT BASE REG                              56000020
         EJECT                                                          56100020
*        SET UP THE ECB POINTER FOR THE PUTLINE SERVICE ROUTINE         56200020
         SPACE 1                                                        56300020
         LA    R7,CPECB       POINTER TO THE ECB                        56400020
         ST    R7,PUTLECB     .FOR PUTLINE                              56500020
         SPACE 1                                                        56600020
*        SET UP THE MESSAGE DESCRIPTOR FOR PUTLINE                      56700020
         SPACE 1                                                        56800020
         LA    R1,PUTLINE     PARM BLOCK POINTER                        56900020
         ST    R1,PUTLPTR     .STORE IN LIST                            57000020
         LA    R1,L4          NUMBER OF SEGMENTS                        57100020
         ST    R1,PUTLPTRS    .STORE IN LIST                            57200020
         SPACE 1                                                        57300020
*        NOW WE SET UP THE MESSAGE INSERTS                              57400020
         SPACE 1                                                        57500020
         LA    R1,MSG         MAIN MESSAGE                              57600020
         ST    R1,PUTLMAIN    .POINTER                                  57700020
         LA    R1,INSERT1     INSERT ONE                                57800020
         ST    R1,PUTLI1      .POINTER                                  57900020
         LA    R1,INSERT2     INSERT TWO                                58000020
         ST    R1,PUTLI2      .POINTER                                  58100020
         LA    R1,INSERT3     INSERT THREE                              58200020
         ST    R1,PUTLI3      .POINTER                                  58300020
         SPACE 1                                                        58400020
*        NOW WE MOVE THE MESSAGES INTO THE DSECT                        58500020
         SPACE 1                                                        58600020
         LA    R1,MSG         MAIN MESSAGE IN DSECT                     58700020
         LA    R2,MSGID       MAIN MESSAGE IN PROGRAM                   58800020
         LH    R3,MSGID       LENGTH OF MESSAGE                         58900020
         BAL   R14,MOVEMSG    MOVE THE MESSAGE                          59000020
         SPACE 1                                                        59100020
         LA    R1,INSERT1     INSERT 1 AREA                             59200020
         LA    R2,PNAME       PGM NAME INSERT                           59300020
         LH    R3,PNAME       LENGTH OF INSERT                          59400020
         BAL   R14,MOVEMSG    MOVE IT                                   59500020
         EJECT                                                          59600020
*        NOW WE HAVE TO FIND OUT IF IT WAS A SYSTEM OR USER ABEND       59700020
         SPACE 1                                                        59800020
         LA    R1,INSERT2     AREA IN DSECT                             59900020
         SPACE 1                                                        60000020
*        R8 HAS THE SYSTEM CODE IN IT, IF NONE IS USER                  60100020
         SPACE 1                                                        60200020
         LTR   R8,R8          SYSTEM CODE                               60300020
         BZ    INSERTS2       BR ON NO, USER                            60400020
         LA    R2,SYSCODE     SYSTEM CODE INSERT                        60500020
         LH    R3,SYSCODE     LENGTH OF INSERT                          60600020
         BAL   R14,MOVEMSG    MOVE INSERT                               60700020
         SPACE 1                                                        60800020
         ST    R8,DWORK1      STORE FOR TRANSLATE                       60900020
         B     INSERTS3       MOVE CODE INSERT                          61000020
         SPACE 1                                                        61100020
INSERTS2 LA    R2,USRCODE     USER CODE INSERT                          61200020
         LH    R3,USRCODE     LENGTH OF INSERT                          61300020
         BAL   R14,MOVEMSG    MOVE IT                                   61400020
         SPACE 1                                                        61500020
         ST    R9,DWORK1      STORE FOR TRANSLATE                       61600020
         SPACE 1                                                        61700020
INSERTS3 LA    R1,INSERT3     ADDRESS IN WORKAREA                       61800020
         LA    R2,ABCODE      ABEND CODE INSERT                         61900020
         LH    R3,ABCODE      LENGTH OF INSERT                          62000020
         BAL   R14,MOVEMSG    MOVE IT                                   62100020
         SPACE 1                                                        62200020
*        THIS TRANSLATES THE CODE AT DWORK1 TO PRINTABLE HEX            62300020
         SPACE 1                                                        62400020
INSERTS5 UNPK  DWORK(L5),DWORK1+L2(L3) UNPACK CODE                      62500020
         TR    DWORK(L5),TRANSTBL      TRANSLATE IT                     62600020
         MVC   INSERTC(L3),DWORK+L1    MOVE TO INSERT                   62700020
         SPACE 1                                                        62800020
*        NOW WE MOVE THE NAME OF THE ABENDING CP FROM ECT               62900020
         SPACE 1                                                        63000020
         MVC   INSERTP(L8),ECTPCMD PROGRAM NAME                         63100020
         SPACE 1                                                        63200020
*        IN THE CASE THAT THE CP'S RETRY ROUTINE ABENDS, THE            63300020
*        TMP HAS TO BE ABLE TO LET THE TERMINAL USER KNOW THAT          63400020
*        THERE WERE TWO ABENDS, THIS IS DONE BY ZEROING OUT             63500020
*        THE ECT CODE IN A STAE EXIT ROUTINE.  WE WILL DO               63600020
*        THAT NOW                                                       63700020
         SPACE 1                                                        63800020
         XR    R1,R1          ZERO R1                                   63900020
         ST    R1,ECTRCDF     ZERO ECT RETURN CODE                      64000020
         EJECT                                                          64100020
*        THIS IS THE ACTUAL PUTLINE TO THE USER                         64200020
         SPACE 1                                                        64300020
PUTIT    PUTLINE  PARM=PUTLINE,                                        X64400020
               OUTPUT=(PUTLPTRS,TERM,SINGLE,INFOR),                    X64500020
               TERMPUT=(EDIT,WAIT,NOHOLD,BREAKIN),                     X64600020
               MF=(E,PUTLPARM)  PUT MESSAGE                             64700020
         SPACE 1                                                        64800020
*        BEFORE WE GO BACK TO ASIR, WE HAVE TO CLEAN UP THE             64900020
*        THINGS THAT WE HAVE DONE. WE                                   65000003
*        HAVE TO FREE THE CORE WE GOT FOR PUTLINE PROCESSING.           65200020
         SPACE 1                                                        65300020
         LR    R1,R13         AREA TO FREE                              65400020
         SPACE 1                                                        65600020
*        NOW WE FREE THE CORE WE GOT BEFORE                             65700020
         SPACE 1                                                        65800020
         FREEMAIN  R,LV=LCORE,SP=L1,A=(R1)  FREE IT                     65900020
         SPACE 1                                                        66000020
*        SINCE WE HAVE FREED THE CORE, DROP THE BASE REG                66100020
         SPACE 1                                                        66200020
         DROP  R13            IKJUWORK BASE REG                         66300020
         EJECT                                                          66400020
*        THIS IS WHERE WE FINALLY SET UP TO TELL ASIR THAT              66500020
*        THE CP HAS A RETRY ROUTINE THAT HE SHOULD SCHEDULE.            66600020
*        WE DO THIS BY SETTING R15 TO 4, R0 TO THE PSEUDO               66700020
*        RETRY ADDRESS.                                                 66800003
         SPACE 1                                                        67000020
NOCORE   LA    R0,RETRIER     CP'S RETRY ROUTINE                        67100020
         LA    R15,L4         INDICATE RETRY                            67200020
         SPACE 1                                                        67400020
         LR    R14,R6                RESTORE RETURN REG         ZA03681 67550003
         BR    R14                   RETURN TO ASIR                     67600020
         SPACE 1                                                        67700020
*        FREE THE OTHER REG, WE'RE DONE WITH IT                         67800020
         SPACE 1                                                        67900020
         DROP  R4             RETRY BASE REG                            68000020
         EJECT                                                          68100020
*        THIS ROUTINE MOVES THE MESSAGE FROM THIS PROGRAM TO            68200020
*        THE GETMAINED AREA IN SUBPOOL 1.                               68300020
         SPACE 1                                                        68400020
*        UPON ENTRY                                                     68500020
*              R1 POINTS AT DSECT AREA                                  68600020
*              R2 POINTS AT MESSAGE TO MOVE                             68700020
*              R3 HAS LENGTH IN IT                                      68800020
         SPACE 1                                                        68900020
MOVEMSG  BCTR  R3,L0          -1 FOR EXECUTED MOVE                      69000020
         EX    R3,MOVEMSG1    MOVE THE MESSAGE                          69100020
         BR    R14            RETURN TO CALLER                          69200020
         SPACE 1                                                        69300020
*        THIS INSTRUCTION MOVES THE INSERTS                             69400020
         SPACE 1                                                        69500020
MOVEMSG1 MVC   L0(L0,R1),L0(R2) MOVE THE MESSAGE                        69600020
         EJECT                                                          69700020
F12      DC    F'12'          FOR 104 BYTE COMPARE                      69800020
         SPACE 1                                                        69900020
*        THE FOLLOWING DC'S MUST FOLLOW A FULLWORD ALIGNING DC          70000020
         SPACE 1                                                        70100020
EFFS2    DC    X'00000FFF'    FOR ANDING LIST CODE                      70300020
SYS33E   DC    X'0000033E'    SYSTEM 33E ABEND                          70400020
         SPACE 1                                                        70500020
MSGID    DC    AL2(LMSGID)    TOTAL LENGTH OF MESSAGE                   70600020
         DC    H'0'           OFFSET FOR INSERTION                      70700020
         DC    C'IKJ52675I '  MESSAGE ID                                70800020
         DC    C' ABENDED, '  1ST PART                                  70900020
         DC    C' COMPLETION CODE' 2ND PART                             71000020
         SPACE 1                                                        71100020
LMSGID   EQU   *-MSGID        LENGTH OF MESSAGE                         71200020
         SPACE 1                                                        71300020
         DS    0H             ENSURE HALFWORD ALIGNMENT                 71400020
PNAME    DC    AL2(LPNAME)    LENGTH OF INSERT                          71500020
         DC    H'10'          OFFSET FOR INSERT                         71600020
         DC    CL8' '         PROGRAM NAME                              71700020
         SPACE 1                                                        71800020
LPNAME   EQU   *-PNAME        LENGTH OF INSERT                          71900020
         SPACE 1                                                        72000020
         DS    0H             ENSURE HALFWORD ALIGNMENT                 72100020
SYSCODE  DC    AL2(LSYSCODE)  LENGTH OF INSERT                          72200020
         DC    H'20'          OFFSET FOR INSERTION                      72300020
         DC    C'SYSTEM'      TYPE OF ABEND                             72400020
         SPACE 1                                                        72500020
LSYSCODE EQU   *-SYSCODE      LENGTH OF INSERT                          72600020
         SPACE 1                                                        72700020
         DS    0H             ENSURE HALFWORD ALIGNMENT                 72800020
USRCODE  DC    AL2(LUSRCODE)  LENGTH OF INSERT                          72900020
         DC    H'20'          OFFSET FOR INSERT                         73000020
         DC    C'USER'        TYPE OF ABEND                             73100020
         SPACE 1                                                        73200020
LUSRCODE EQU   *-USRCODE      LENGTH OF INSERT                          73300020
         SPACE 1                                                        73400020
         DS    0H             ENSURE HALFWORD ALIGNMENT                 73500020
ABCODE   DC    AL2(LABCODE)   LENGTH OF INSERT                          73600020
         DC    H'36'          OFFSET FOR INSERT                         73700020
         DC    CL4' '         ACTUAL CODE                               73800020
         SPACE 1                                                        73900020
LABCODE  EQU   *-ABCODE       LENGTH OF INSERT                          74000020
         EJECT                                                          74100020
*        TRANSLATE TABLE FOR CONVERSION OF ABEND CODES                  74200020
         SPACE 1                                                        74300020
TTBL     DC    C'0123456789ABCDEF'   TRANS TABLE                        74400020
         SPACE 1                                                        74500020
TRANSTBL EQU   *-L256         ORG FOR TR INSTRUCTION                    74600020
         SPACE 1                                                        74700020
*        THIS IS A PATCH AREA FOR THIS ROUTINE                          74800020
         SPACE 1                                                        74900020
STAPATCH DC    5D'0'          PATCH AREA                                75000020
         SPACE 1                                                        75100020
*        TO MAKE IT EASIER TO PATCH, SET UP AN S-CON FOR IT             75200020
         SPACE 1                                                        75300020
STASCON  DC    S(STAPATCH)    S-CON FOR PATCHAREA                       75400020
         SPACE 1                                                        75500020
*        AND NOW SO WE CAN FIND THEM ON A LINKEDIT MAP,                 75600020
*        WE MAKE THEM ENTRY POINTS.                                     75700020
         SPACE 1                                                        75800020
         ENTRY STAPATCH,STASCON ENTRY POINTS                            75900020
         SPACE 1                                                        76000020
*        SINCE THIS IS THE END OF THE WORLD, GET RID OF OUR BASE        76050020
         SPACE 1                                                        76060020
         DROP  R12            OUR BASE REG                              76070020
         EJECT                                                          76100020
IKJUWORK DSECT                DSECT OF WORK AREA                        76200020
         SPACE 1                                                        76300020
*        THIS IS A DSECT OF THE WORK AREA ACQUIRED BY THE IKJEHSIR      76400020
*        EXIT ROUTINE.  IT IS IN SUBPOOL 1.                             76500020
         SPACE 1                                                        76600020
SAVEAREA DC    18F'0'         SAVEAREA FOR PROGRAM                      76700020
         SPACE 1                                                        76800020
*        THE FOLLOWING EQUATE IS USED TO GET A SAVEAREA                 76900020
*        FOR THE 33E RETRY ROUTINE                                      77000020
         SPACE 1                                                        77100020
L2GET    EQU   *-IKJUWORK     SAVEAREA SIZE                             77200020
         SPACE 1                                                        77300020
*        THE FOLLOWING IS THE PARAMETER LIST PASSED TO THE PUTLINE      77400020
*        SERVICE ROUTINE BY THIS ROUTINE.                               77500020
         SPACE 1                                                        77600020
PUTLPARM DS    0F             PUTLINE PARMETER LIST                     77700020
PUTLUPT  DC    F'0'           POINTER TO UPT                            77800020
PUTLECT  DC    F'0'           POINTER TO ECT                            77900020
PUTLECB  DC    F'0'           POINTER TO ECB                            78000020
PUTLPTR  DC    F'0'           POINTER TO PARM BLOCK                     78100020
         SPACE 1                                                        78200020
CPECB    DC    F'0'           ECB FOR PUTLINE                           78300020
         SPACE 1                                                        78400020
*        THIS GENERATES THE PUTLINE PARMETER BLOCK                      78500020
         SPACE 1                                                        78600020
PUTLINE  PUTLINE  OUTPUT=(0,TERM,SINGLE,INFOR),                        X78700020
               TERMPUT=(EDIT,WAIT,NOHOLD,BREAKIN),                     X78800020
               MF=L           PUTLINE BLOCK                             78900020
         SPACE 1                                                        79000020
*        THE FOLLOWING IS THE LIST OF INSERT ADDRESSES PASSED           79100020
*        TO PUTLINE.  IT IS POINTED TO BY THE ADDRESS OF THE            79200020
*        OUTPUT LINE IN THE PUTLINE BLOCK ABOVE.                        79300020
         SPACE 1                                                        79400020
PUTLPTRS DC    F'4'           NUMBER OF SEGMENTS                        79500020
PUTLMAIN DC    A(0)           POINTER TO MAIN MESSAGE                   79600020
PUTLI1   DC    A(0)           POINTER TO INSERT ONE                     79700020
PUTLI2   DC    A(0)           POINTER TO INSERT TWO                     79800020
PUTLI3   DC    A(0)           POINTER TO INSERT THREE                   79900020
         SPACE 1                                                        80000020
DWORK    DC    D'0'           WORK AREA FOR TRANSLATE                   80100020
         SPACE 1                                                        80200020
DWORK1   EQU   DWORK+L4       AREA FOR STORAGE                          80300020
         EJECT                                                          80400020
*        THE FOLLOWING IS THE MESSAGE AREA AND INSERT AREA              80500020
*        POINTED TO BY PUTLPTRS ABOVE.                                  80600020
         SPACE 1                                                        80700020
         DS    0H             HALFWORD ALIGNMENT                        80800020
MSG      DC    (LMSGID)X'00'  SPACE FOR MESSAGE                         80900020
         SPACE 1                                                        81000020
         DS    0H             HALFWORD ALIGNMENT                        81100020
INSERT1  DC    (LPNAME)X'00'  SPACE FOR INSERT1                         81200020
         SPACE 1                                                        81300020
INSERTP  EQU   *-L8           FOR PROGRAM NAME                          81400020
         SPACE 1                                                        81500020
         DS    0H              HALFWORD ALIGNMENT                       81600020
INSERT2  DC    (LSYSCODE)X'00' SPACE FOR INSERT 2                       81700020
         SPACE 1                                                        81800020
         DS    0H             HALFWORD ALIGNMENT                        81900020
INSERT3  DC    (LABCODE)X'00' SPACE FOR INSERT 3                        82000020
         SPACE 1                                                        82100020
INSERTC  EQU   *-L3           FOR ABEND CODE                            82200020
         SPACE 1                                                        82300020
         DS    0F             FULLWORD ALIGNMENT                        82400020
         SPACE 1                                                        82500020
L2XC     EQU   *-PUTLPARM     SIZE TO XC                                82600020
         SPACE 1                                                        82700020
LCORE    EQU   *-IKJUWORK     LENGTH OF DSECT                           82800020
         EJECT                                                          82900020
         STAES                MY DSECTS                                 83000020
         EJECT                                                          83100020
         IKJECT               ECT DSECT                                 83200020
         EJECT                                                          83300020
         IKJUPT               UPT DSECT                                 83400020
         EJECT                                                          83500020
         IKJPSCB              PSCB DSECT                                83600020
         SPACE 1                                                        83700020
         END                                                            83800020
