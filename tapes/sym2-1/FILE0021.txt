./  ADD  SSI=62730824,NAME=HEWLFADA
         TITLE    'HEWLFADA  ADDRESS ASSIGNMENT'                        00100021
*                                                                     * 00200021
*********************************************************************** 00300021
*********************************************************************** 00400021
*                                                                       00500021
*STATUS: CHANGE LEVEL                                                   00600021
*FUNCTION:                                                            * 00700021
*   1) ASSIGN LINKED ADDRESSES TO ALL CONTROL SECTIONS AND LABELS     * 00800021
*      THEREIN                                                        * 00900021
*   2) IF IN OVERLAY DETERMINE SEGMENT ADDRESSES                      * 01000021
*   3) DETERMINE PSEUDO REGISTER DISPLACEMENTS AND CUMULATIVE LENGTH  * 01100021
*   4) PRINT MESSAGE FOR ALL UNRESOLVED EXTERNAL REFERENCES           * 01200021
*   5) SET CERTAIN ESD TYPES TO NULL - DELETE LINE TYPE ER SUBTYPE    * 01300021
*      (BYTE 13 OF CESD) AS FOLLOWS                                   * 01400021
*       A) ALL CARDS EXCEPT ALIAS (F0 - B0,90)                        * 01500021
*       B) NO CALL UNMATCHED       (04)                               * 01600021
*       C) UNMATCHED LIBRARY MEMBER (02)                              * 01700021
*   6) IF IN OVERLAY COMPUTE LENGTH OF SEGTAB                         * 01800021
*   7) GO TO HEWLKENS TO DETERMINE SEGMENT NUMBERS FOR LABELS AND TO  * 01900021
*      COMPUTE ENTAB SIZES (ONLY IF IN OVERLAY)                       * 02000021
*                                                                     * 02100021
*ENTRY POINTS:                                                        * 02200021
*   1) HEWLFADA - CONTROL SECTION NAME - MAIN ENTRY POINT             * 02300021
*   2) HEWLCAD1 - LABEL - ENTERED FROM HEWLKENS TO MAKE CESD ENTRIES  * 02400021
*      FOR ENTABS                                                     * 02500021
*                                                                     * 02600021
*INPUT:                                                               * 02700021
*   1) GP REGISTER 2 - ADDRESS OF ALL PURPOSE TABLE                     02800021
*EXTERNAL ROUTINES:                                                   * 02900021
*   1) HEWLFENS    -ENTAB SIZE DETERMINATION                            03000021
*   2) HEWLFENT                                                         03100021
*   3) HEWLFLOG    - ERROR DIAGNOSTIC ROUTINE                         * 03200021
*                                                                     * 03300021
*EXITS:                                                               * 03400021
*   1) HEWLFOUT (NORMAL) - INTERMEDIATE OUTPUT PROCESSOR                03500021
*   2) HEWLFFNL (NO CESD OR TEXT) FINAL PROCESSOR                       03600021
*                                                                     * 03700021
*TABLES:                                                              * 03800021
*   INPUT                                                             * 03900021
*   1) COMPOSITE EXTERNAL SYMBOL DICTIONARY                           * 04000021
*   2) ALL PURPOSE TABLE                                              * 04100021
*   3) SEGTA1 (OVERLAY ONLY)                                          * 04200021
*                                                                     * 04300021
*   INTERNALLY USED                                                   * 04400021
*   1) SEGMENT LENGTH TABLE                                           * 04500021
*                                                                     * 04600021
*   OUTPUT                                                            * 04700021
*   1) RELOCATION CONSTANT TABLE                                      * 04800021
*   2) UPDATED COMPOSITE EXTERNAL SYMBOL DICTIONARY                   * 04900021
*********************************************************************** 05000021
*********************************************************************** 05100021
*              HEWLFADA    -ADDRESS ASSIGNMENT                        * 05200021
*                                                                     * 05300021
HEWLFADA CSECT                                                          05400021
**********************************************************************  05450021
*098000,155000-187000,283000-285000,287000,316000-317000         S01904 05452021
*342000-366000,533000-569000,573000-574000,576000,583000-584000  S01904 05454021
*590000-591000,594000,604000-674000,768000-775000,881000-920000  S01904 05456021
*                                                               OY00358 05456401
*C092000-0930200,A093520-093560,A094484                          YM5543 05458001
*D093500-093984                                                  XM4628 05458403
*  SEE FIX FOR XM4628                                           OX02833 05458803
*D314000,D523000,D701000-713000,D829000-832000          OX03901,OY03217 05459202
*D846000,D850000                                        OX03901,OY03217 05459602
**********************************************************************  05460021
         ENTRY HEWLCAD1                                                 05500021
         ENTRY SEGLNTAB                                                 05600021
*********************************************************************** 05700021
*              REGISTER  ASSIGNMENT                                   * 05800021
*********************************************************************** 05900021
ERRCODE  EQU   0                                                        06000021
ERRSYMAD EQU   1                                                        06100021
TEMP2    EQU   1                                                        06200021
WORK4    EQU   1                                                        06300021
APT      EQU   2                                                        06400021
CSLGTH   EQU   3                        CONTROL SECTION LENGTH          06500021
WORK1    EQU   3                                                        06600021
MAXSEGCT EQU   3                        MAX.NO OF SEGMENTS              06700021
CSSEGNO  EQU   4                        CONTROL SECTION SEGMENT NO      06800021
WORK2    EQU   4                                                        06900021
CSASADD  EQU   5                        CONTROL SECTION ASSEMBLED ADD.  07000021
WORK3    EQU   5                                                        07100021
CESDCRCT EQU   6                                                        07200021
CESDCRAD EQU   7                                                        07300021
TEMP1    EQU   7                                                        07400021
SEGLGTH  EQU   8                                                        07500021
ASMADD   EQU   9                                                        07600021
CURSEGNO EQU   9                                                        07700021
LOCCTR   EQU   10                                                       07800021
ADTXTIOT EQU   11                                                       07900021
BASE     EQU   12                                                       08000021
ACUMZERO EQU   13                                                       08100021
TEST     EQU   13                                                       08200021
RETURN   EQU   14                                                       08300021
BRANCH   EQU   15                                                       08400021
EBIT     EQU   X'80'                    ENTAB PRESENT MASK              08500021
OVLYOFF  EQU   X'DF'                    MASK TO TURN OVERLAY OFF        08600021
OVRLAYBT EQU   X'20'                                                    08700021
RCCOMP   EQU   X'20'                    RELOCATION CONST IS IN COMPFORM 08800021
         USING APTDSECT,APT   DECLARE APT BASE                          08900021
         USING ADA00100+2,BASE                                          09000021
ADA00100 BALR  BASE,0                                                   09100021
         B     MODID                                             YM5543 09200001
         DC    C'01MADA'                                         YM5543 09300001
MODID    EQU   *                                                 YM5543 09302001
         OI    APT4,INTRPS             INDICATE INTR PASS        S01904 09310001
NOCESD   EQU   *                       BRANCH TARGET             YM5543 09448401
*                                                                       09900021
*              INITIALIZATION                                           10000021
*                                                                       10100021
*                                                                       10200021
*              SET SEGMENT LENGTH TABLE = 0                             10300021
*                                                                       10400021
*  USE OBJECT MODULE BUFFER FOR SEG LENGTH TABLE - USE LOWER ADDRESS    10500021
         CLC   HEWLCRBB+4(4),HEWLCRBB+8                                 10600021
         BL    ADA00110            FIRST LOW- USE IT                    10700021
         L     SEGLGTH,HEWLCRBB+8  FIRST HIGH- USE SECOND               10800021
         B     ADA00115                                                 10900021
ADA00110 L     SEGLGTH,HEWLCRBB+4  USE FIRST                            11000021
ADA00115 ST    SEGLGTH,SEGLNTAB    SAVE LOW ADD AS ADD OF SEG LNGTH TAB 11100021
         SR    WORK3,WORK3         CLEAR REGISTER                       11200021
         IC    WORK3,CSNO+1        GET HIGHEST SEGMENT USED             11300021
         LA    WORK3,1(WORK3)      ADD 1 FORRE-ORIGINING                11400021
         MH    WORK3,SIX           MULT BY NUM BYTES/ENTRY FOR TOTAL    11500021
         SR    WORK2,WORK2         CLEAR REMAINDER REGISTER             11600021
         D     WORK2,CONST256      DVIDE BY 256                         11700021
         LR    TEMP1,SEGLGTH       ADDR. OF BEG SEGMNT LGTH TABLE       11800021
         LTR   WORK3,WORK3         IF LESS THAN 256 BYTES QUOTIENT = 0  11900021
         BC    2,CLRBUF            IF NOT SO, BEGIN CLEARING TABLE      12000021
         B     CLRFNL      IF QUOTIENT = 0, CLEAR NON-MULTIPLE OF 256   12100021
CLRBUF   XC    0(256,TEMP1),0(TEMP1)    CLEAR 256 BYTES                 12200021
         LA    TEMP1,256(TEMP1)        UPDATE PTR BY 256                12300021
         BCT   WORK3,CLRBUF        REDUCE QUOTIENT & IF NOTZERO- RETURN 12400021
CLRFNL   BCTR  WORK2,0             DECREMENT FOR PROPER CLEARING        12500021
         EX    WORK2,CLRLAST       CLEAR LAST NON-MULTIPLE OF 256       12600021
         XC    HIADDREG(12),HIADDREG   SET HIADDREG,BGADDREG,CURRREGN   12700021
*                                      AND NCESDCT = 0  (12 BYTES)      12800021
*                                      = 0  (10 BYTES )                 12900021
*********************************************************************** 13000021
*              TEST IF CESD CURRENT CT = 0  - YES-ERROR  /GO TO FINAL * 13100021
*              PROCESSOR                                              * 13200021
*********************************************************************** 13300021
ADA00120 BAL   RETURN,ADA02300         GO TO TEST CESD CT = 0           13400021
*********************************************************************** 13500021
*              TEST IF PROGRAM IS IN OVERLAY - YES/ COMPUTE SIZE SEGTB* 13600021
*********************************************************************** 13700021
         TM    PDSE7,OVRLAYBT      IS PROGRAM IN OVERLAY                13800021
         BC    1,ADA01000               YES  GO TO INIT SEGTAB & ENS    13900021
*********************************************************************** 14000021
*              GO TO HEWLKENS TO DETERMINE SEGMENT NUMBERS FOR LABELS * 14100021
*              REG 13 SUPPLIED BUT REGISTERS NEED NOT BE SAVED        * 14200021
*********************************************************************** 14300021
ADA00122 LA    13,SAVEREGS             SAVE REG AREA AADDRESS FOR ENS   14400021
         L     BRANCH,ENSVCON          ADDRESS OF HEWLCENS              14500021
         BALR  RETURN,BRANCH            BRANCH TO HEWLCENS              14600021
**********************************************************************  14700021
*                                                                     * 14800021
*              FIRST SEARCH  ASSIGN TEMPORARY LINKED ADDRESSES        * 14900021
*                TO ALL CSECTS REFERENCED IN THE TXTIO TABLE          * 15000021
*                                                                     * 15100021
**********************************************************************  15200021
*                                                                       15300021
* SET UP SEARCH OF TXTIO TABLE                                          15400021
         ST    TEST,SAVE13         KEEP ADDRESS OF SAVE AREA     S01904 15500021
         TM    APT4,ORDERR         IS ORDERING TO BE DONE        S01904 15600021
         BZ    ADA0123A            NO,BRANCH OUT                 S01904 15700021
         LH    TEST,ORDRCUR        OBTAIN CUR NO OF BYTES USED   S01904 15800021
         LTR   TEST,TEST           IS THERE ANY ENTRY            S01904 15900021
         BZ    ADA0123A            NO,BRANCH OUT                 S01904 16000021
         OI    TWELVE,X'40'        INDICATE ORDER TABLE PROCESS  S01904 16100021
ADORDR   EQU   11                                                S01904 16200021
         L     ADORDR,ORDRADR      GET BEG ADDR OF ORDER TBL     S01904 16300021
         AR    TEST,ADORDR         POINT TO END OF ORDER TBL     S01904 16400021
ADA0300  TM    O(ADORDR),X'A0'     IS THIS A MATCHED ENTRY       S01904 16500021
         BNO   ADA0302             NO,BRANCH OUT                 S01904 16600021
         MVC   IDSV(2),I(ADORDR)   SAVE ID                       S01904 16700021
         LH    CESDCRAD,IDSV                                     S01904 16800021
         SLL   CESDCRAD,4          COMPUTE REL CESD LOC OF ID    S01904 16900021
         A     CESDCRAD,CHESD      COMPUTE ABS CESD ENTRY LOC    S01904 17000021
         CLI   0(CESDCRAD),0       IS CORRESPONDING ENTRY DELETED       17100021
         BE    ADA0302             YES,BRANCH OUT                S01904 17200021
         TM    VIII(CESDCRAD),X'08'     IS THIS A WEAK EXTRN     S01904 17300021
         BO    ADA0302             YES,BRANCH OUT                S01904 17400021
         MVN   TYPESV(I),VIII(CESDCRAD)                          S01904 17500021
         CLI   TYPESV,X'05'        TYPE COMMON?                  S01904 17600021
         BE    ADA00175            YES,DETERMINE TLA             S01904 17700021
         CLI   TYPESV,O            IS TYPE SD?                   S01904 17800021
         BE    ADA00175            YES,DETERMINE TLA             S01904 17900021
         LA    RETURN,ADA0302      FLAG ERROR - INVALID ID       S01904 18000021
         LH    ERRCODE,ERRPARM8                                  S01904 18100021
         L     BRANCH,ERDIG                                      S01904 18200021
         BR    BRANCH                                            S01904 18300021
ADA0301  OI    VIII(CESDCRAD),X'08'     MARK ENTRY PROCESSED     S01904 18400021
ADA0302  LA    ADORDR,3(ADORDR)    INCREMENT TO NEXT ORDER TBL ENTRY    18500021
         CR    ADORDR,TEST         END OF TABLE REACHED?         S01904 18600021
         BL    ADA0300             NO,CONTINUE SCAN              S01904 18700021
         NI    TWELVE,X'BF'        MARK END OF ORDER TBL PROCESS        18800021
ADA0123A SR    TEST,TEST                                                18900021
         CH    TEST,ENTOC               IS THERE ANY TEXT               19000021
         BC    11,ADA00140         NO TXT - SEARCH CESD                 19100021
         OI    TWELVE,X'80'             SET SWITCH INDICATNG TXTIO LOOP 19200021
         L     ADTXTIOT,TXTIO           ADDR OF TXTIO TABLE             19300021
         LR    TEST,ADTXTIOT           ADDRESS TXTIOT TABLE             19400021
         AH    TEST,ENTOC       TEST NOW CONTAINS END ADDR OF TXTIOT    19500021
ADA00123 CR    ADTXTIOT,TEST      ANY MORE TXT IN TXTIOT                19600021
         BC    11,ADA00135              NO- SET IN TXTIOT LOOP OFF      19700021
         TM    2(ADTXTIOT),X'20'        IS IT OUT OF ORDER TXT          19800021
         BC    1,ADA00133               YES--ID FOR TXTIO ENTRY ALREADY 19900021
*                                          PROCESSD. CHECK NEXT ENTRY.  20000021
* FIND CESD ENTRY                                                       20100021
         LH    CESDCRAD,0(ADTXTIOT)     CESD ENTRY ID (FROM TXTIOT)     20200021
         SLL   CESDCRAD,4               FIND REL. ADDR. ON CESD  (*16)  20300021
         A     CESDCRAD,CHESD           ADDRESS OF CESD ENTRY           20400021
         TM    08(CESDCRAD),X'08'       HAS CESD ENTRY BEEN PROCESSED   20500021
         BC    1,ADA00133               YES- CHECK NEXT TXTIOT ENTRY    20600021
         TM    8(CESDCRAD),X'0B'        IS TYPE SD OR PC                20700021
         BC    7,ERRETURN               NO-ERROR-GO TO NEXT ENTRY       20800021
         CLI   8(CESDCRAD),X'14'        IS THIS A PC FOR ENTAB OR SEGTB 20900021
         BC    7,ADA00175              NO - PROCESS CESD ENTRY          21000021
*    ERROR FOUND  LOG IT THEN CONTINUE                                  21100021
ERRETURN LA    RETURN,ADA00175                                          21200021
         L     BRANCH,ERDIG                                             21300021
         LH    ERRCODE,ERRPARM8        GIVE TXTIOT ERROR MESSAGE        21400021
         BR    BRANCH                                                   21500021
ADA00130 OI    8(CESDCRAD),X'08'        SET CESD ENTRY PROCESSED SWITCH 21600021
ADA00133 LA    ADTXTIOT,INC(ADTXTIOT)   UPDATE ADDRESS                  21700021
         B     ADA00123                 GO TO NEXT TXTIOT ENTRY         21800021
ADA00135 NI    TWELVE,X'7F'             TURN TXTIO LOOP SWITCH OFF      21900021
         B     ADA00140                 SEARCH CESD                     22000021
ADA00136 NI    8(CESDCRAD),X'F7'        SET PROCESSD SWITCH OFF         22100021
         B     ADA00400                 CHECK END OF LOOP               22200021
*********************************************************************** 22300021
*                                                                     * 22400021
*              SEARCH CESD FOR NON-PROCESSED CSECTS- NO TEXT          * 22500021
*                COMMON,  ASSIGN TEMP LINKED ADDRESSES                  22600021
*                COMPUTERELOCATION CONSTANTS (PUT IN RCT),DETERMINE   * 22700021
*                PSEUDO REGISTER DISPLACEMENTS AND TOTAL LENGTH       * 22800021
*                                                                     * 22900021
*********************************************************************** 23000021
ADA00140 LH    CESDCRCT,ENCDC           CURRENT NO. CESD ENTRIES        23100021
         L     CESDCRAD,CHESD  CESD ADD                                 23200021
         LA    WORK4,1(CESDCRCT)       CESD CURRENT CT + 1              23300021
         STH   WORK4,NCESDCT           INITIALIZE NCESD CT              23400021
ADA00150 LA    CESDCRAD,16(CESDCRAD)    POINTS TO CURRENT CESD ENTRY    23500021
         CLI    8(CESDCRAD),X'0A'       WEAK EXTERNAL                   23600021
         BE    ADA00400                 YES,CHECK END OF LOOP           23700021
         TM    8(CESDCRAD),X'08'        HAS CESD ENTRY BEEN PROCESSED   23800021
         BC    1,ADA00136               YES- SET PROCESSD SW OFF-       23900021
         NI    8(CESDCRAD),X'DF'       SET BIT 2 OF TYPE BYTE TO 0      24000021
         MVN   TESTTYPE(1),8(CESDCRAD)  MOVE LOW 4 BITS FOR ESDTYPETEST 24100021
         TM    TESTTYPE,X'02'           IS TYPE NOT SO,PC OR CM         24200021
         BC    1,ADA00850               YES                             24300021
*********************************************************************** 24400021
*              IS THIS CESD ENTRY THE PC DELETE FOR SEGTAB / YES -DONOT 24500021
*              ASSIGN AN ADDRESS TO IT ( IT IS INITIALIZED TO 0)      * 24600021
*********************************************************************** 24700021
         LR    TEMP2,CESDCRAD                                           24800021
         S     TEMP2,CHESD    REL ID                                    24900021
         SRL   TEMP2,4                  ID                              25000021
         CH    TEMP2,ENSPX    IS THIS A SEGTAB ENTRY                    25100021
         BC    8,ADA00400               YES  DO NOT ASSIGN ADDRESS      25200021
*********************************************************************** 25300021
*              USING SEGMENT NUMBER REFERENCE SEGMENT LENGTH TABLE AND* 25400021
*              FIND LENGTH OF THIS SEGMENT                            * 25500021
*********************************************************************** 25600021
ADA00175 SR    SEGLGTH,SEGLGTH                                          25700021
         IC    SEGLGTH,12(CESDCRAD)     PICK UP SEG NO OF THIS CESD ENT 25800021
         MH    SEGLGTH,SIX              MULTIPLY BY 6  (6BYTES/ENTRY)   25900021
         A     SEGLGTH,SEGLNTAB    POINTS TO AN ENTRY IN SEG LENGTH TAB 26000021
         MVI   CONSTWK,X'00'                                            26100021
         MVC   CONSTWK+1(3),0(SEGLGTH)  MOVE SEGMENT LG TO CONST+1      26200021
         L     ASMADD,8(CESDCRAD)       ASSEMBLED ADDRESS OF THIS CS    26300021
         LA    ASMADD,0(ASMADD)         REMOVE TYPE                     26400021
         L     LOCCTR,CONSTWK           LENGTH OF THIS SEGMENT          26500021
*********************************************************************** 26600021
*              IF SEGMENT LENGTH = 0  SAVE LOW 3 BITS OF ASSEMBLED ADD* 26700021
*********************************************************************** 26800021
         LTR   LOCCTR,LOCCTR            IS LENGTH = 0                   26900021
         BC    2,ADA00200               NO                              27000021
         LA    WORK1,7                  SET REG TO 7/FOR SAVING LOW 3   27100021
         NR    WORK1,ASMADD             SAVE LOW 3 BITS OF ASSEMBLED AD 27200021
         STC   WORK1,3(SEGLGTH)         STORE LOW 3 BITS OF CS INSGLGTH 27300021
*********************************************************************** 27400021
*              MAKE TEMPORARY LINKED ADDRESS (SEGMENT LENGTH) MODULO 8* 27500021
*              WITH ASSEMBLED ADDRESS - SAVE TLA IN CESD              * 27600021
*********************************************************************** 27700021
ADA00200 LR    WORK1,ASMADD             SAVE ASSEMBLED ADDRESS          27800021
         SR    WORK1,LOCCTR             MAKE TEMP LINKED ADD MOD 8 WITH 27900021
         LA    WORK2,7                   THE ASSEMBLED ADDRESS OF CS    28000021
         NR    WORK1,WORK2                                              28100021
         AR    LOCCTR,WORK1             ANS IN LOCCTR  (TLA)            28200021
         TM    PDSE7,OVRLAYBT           OVERLAY SPECIFIED?       S01904 28300021
         BO    ADA0201                 YES,BRANCH AROUND         S01904 28400021
         LR    WORK2,LOCCTR             SAVE LOCAL REGISTER      S01904 28500021
         BAL   WORK3,ADA0400            CHECK FOR PAGE ALIGNMENT        28600021
         LR    LOCCTR,WORK2             RESTORE LOCAL REGISTER   S01904 28700021
ADA0201  IC    WORK2,8(CESDCRAD)        SAVE  TYPE                      28800021
         ST    LOCCTR,8(CESDCRAD)       PUT TLA IN CESD                 28900021
         STC   WORK2,8(CESDCRAD)        RESTORE  TYPE                   29000021
         LR    WORK1,LOCCTR             SAVE  LOCCTR  (TLA)             29100021
*********************************************************************** 29200021
*              DETERMINE ADDRESS OF RELOCATION CONST IN RCT FOR THIS CS 29300021
*********************************************************************** 29400021
*                                                                       29500021
         LR    WORK2,CESDCRAD                                           29600021
         S     WORK2,CHESD    RELATIVE CESD ADD                         29700021
         SRL   WORK2,2                  RELATIVE RC ADD                 29800021
         A     WORK2,RECNT    ADD OF A RCT ENTRY/RCT 1-1 CESD           29900021
*********************************************************************** 30000021
*              COMPUTE RELOCATION CONSTANT  , RC = TLA - AA /PUT IN RCT 30100021
*********************************************************************** 30200021
         SR    WORK1,ASMADD             COMPUTE  RCT = TLA - ASSM ADD   30300021
         BC    11,ADA00250         IF POSITIVE  -- CONTINUE             30400021
         OI    8(CESDCRAD),X'20'   IF NEG- INCICATE NEG RELOC CONST     30500021
ADA00250 ST    WORK1,0(WORK2)           STORE TRC IN RELOC CONST TABLE  30600021
*********************************************************************** 30700021
*              ADD CS LENGTH TO CS TLA AND SAVE IN SEG LENGTH TABLE/SEG 30800021
*********************************************************************** 30900021
ADA00300 MVC   CONSTWK(4),12(CESDCRAD)  MOVE LENGTH TO CONST            31000021
         MVI   CONSTWK,X'00'           SET IST BYTE TO ZERO             31100021
         A     LOCCTR,CONSTWK          ADD LENGTH TO LOCATION CTR       31200021
         ST    LOCCTR,CONSTWK                                           31300021
ADA00350 MVC   0(3,SEGLGTH),CONSTWK+1  PUT TLA + L (CURRENT SEG LG) IN  31500021
         TM    TWELVE,X'40'             ORDER TABLE LOOP         S01904 31600021
         BO    ADA0301                  YES,BRANCH OUT           S01904 31700021
         TM    TWELVE,X'80'             IN TXTIOT LOOP?                 31800021
         BC    1,ADA00130               YES- SET CESD ENTRY PROCESSED   31900021
         L     TEST,SAVE13         RESTORE REG 13                       32000021
*                                                                       32100021
ADA00400 BCT   CESDCRCT,ADA00150         SEGLGTH TABLE /BRANCH IFNOTDON 32200021
*********************************************************************** 32300021
*              TEST FOR OVERLAY-YES/ GO TO SCAN SEG LENGTH TABLE      * 32400021
*********************************************************************** 32500021
         TM    PDSE7,OVRLAYBT IS PROGRAM IN OVERLAY                     32600021
         BC    1,ADA01100               YES                             32700021
         MVC   SIZSAVE+1(3),0(SEGLGTH)  GET PROGRAM LENGTH              32800021
         L     WORK1,SIZSAVE                                            32900021
         LA    WORK1,7(WORK1)          ROUND SIZE TO NEXT               33000021
         N     WORK1,ROUNDOFF          DOUBLE WORD                      33100021
         ST    WORK1,SIZSAVE           SAVE SIZE FOR PDS DIRECTORY      33200021
         MVC   0(3,SEGLGTH),SIZSAVE+1                                   33300021
         MVC   PDSE9(3),0(SEGLGTH) PUT PROGRAM LENGTH IN PDS            33400021
*********************************************************************** 33500021
*              SCAN CESD - RELOCATE ADDRESSES OF LRS-PROCESS ERS      * 33600021
*********************************************************************** 33700021
ADA00550 LH    CESDCRCT,ENCDC  CURRENT NO. CESD ENTRIES                 33800021
         L     CESDCRAD,CHESD  CESD ADD                                 33900021
ADA00600 LA    CESDCRAD,16(CESDCRAD)    INCREMENT TO FIRST(NEXT) ENTRY  34000021
         MVN   TESTTYPE(1),8(CESDCRAD)  MOVE LOW 4 BITS FOR ESDTYPETEST 34100021
         STM   WRKREGE,WRKREG1,BRNCHSV SAVE REGISTERS            S01904 34200021
         LH    WRKREG1,ORDRCUR          GET CUR NO OF BYTES IN ORDR     34300021
         LTR   WRKREG1,WRKREG1          ARE THERE ANY ENTRIES?   S01904 34400021
         BZ    ADA060D                  NONE,BRANCH OUT          S01904 34500021
         L     WRKREGF,ORDRADR          COMPUTE ADDR OF AVAIL ENTRY     34600021
         AR    WRKREG1,WRKREGF          IN THE ORDER TABLE       S01904 34700021
         LA    WRKREG0,3                GET LENGTH OF AN ENTRY   S01904 34800021
         SR    WRKREG1,WRKREG0          POINT TO LAST ENTRY      S01904 34900021
         LR    WRKREGE,WRKREG7                                   S01904 35000021
         S     WRKREGE,CHESD            CALCULATE CESD ID        S01904 35100021
         SRL   WRKREGE,4                OF THE ENTRY BEING EXAMINED     35200021
         STH   WRKREGE,IDSV             SAVE ID                  S01904 35300021
ADA060B  CLC   IDSV(2),1(WRKREGF)       LOOK FOR  MATCH IN ORDR TBL     35400021
         BE    ADA060C                  MATCH FOUND-CHECK TYPE   S01904 35500021
         BXLE  WRKREGF,WRKREG0,ADA060B  CONTINUE LOOP SEARCH     S01904 35600021
         B     ADA060D                  NO MATCH FOUND-BRANCH OUT       35700021
ADA060C  CLI   TESTTYPE,X'00'           IS TYPE SD?              S01904 35800021
         BE    ADA060D                  YES,PROCEED-VALID COND   S01904 35900021
         CLI   TESTTYPE,X'05'           IS TYPE COMMON?          S01904 36000021
         BE    ADA060D                  YES,PROCEED-VALID COND   S01904 36100021
         LR    WRKREG1,WRKREG7          GET CESD ENTRY ADDRESS   S01904 36200021
         LH    WRKREG0,ERRCDDE          GET ERROR CODE           S01904 36300021
         L     WRKREGF,ERDIG            GET ADDRESS OF LOG RTN   S01904 36400021
         BALR  WRKREGE,WRKREGF          BRANCH TO ERROR LOG RTN  S01904 36500021
ADA060D  LM    WRKREGE,WRKREG1,BRNCHSV  RESTORE REGISTERS        S01904 36600021
         TM    TESTTYPE,X'0A'           IS TYPE WEAK EXTRN              36700021
         BNO   ADA00601                 NO,BRANCH OUT                   36800021
         XC    9(4,CESDCRAD),9(CESDCRAD)  CLEAR CHN ADDR AND SEG FLDS   36900021
         B     ADA00650                                                 37000021
ADA00601 CLI TESTTYPE,X'02'                                             37100021
         BC    8,ADA00900               YES / GO TO ER ROUTINE          37200021
         CLI   TESTTYPE,X'07'           IS TYPE NULL                    37300021
         BC    8,ADA00700               YES / TEST END OF LOOP          37400021
         CLI   TESTTYPE,X'03'           IS TYPE = LR                    37500021
         BC    7,ADA00650               NO / GO TO  SAVE  Y             37600021
         LH    WORK1,14(CESDCRAD)       YES  LR - NOW RELOCATE TLA/ ID  37700021
         SLL   WORK1,2                  MULTIPLY BY 4                   37800021
         A     WORK1,RECNT    POINTS TO RCT ENTRY OF SD,PC,CM           37900021
         L     WORK2,0(WORK1)           RELOCATION CONSTANT = RC        38000021
         LR    WORK1,CESDCRAD                                           38100021
         S     WORK1,CHESD    REL ADD OF LR ENTRY IN RCT                38200021
         SRL   WORK1,2                                                  38300021
         A     WORK1,RECNT    ADD OF RC FOR LR                          38400021
         ST    WORK2,0(WORK1)          ST RC OF LR                      38500021
         A     WORK2,8(CESDCRAD)        ADD RC TO ASSEMBLED ADD OF LR   38600021
         IC    WORK1,8(CESDCRAD)        SAVE TYPE                       38700021
         ST    WORK2,8(CESDCRAD)        STORE LINKED ADDRESS OF THIS LR 38800021
         STC   WORK1,8(CESDCRAD)        RESTORE TYPE                    38900021
*              SAVE CURRENT CESD CT - CESD LINE NUMBER + 1 = Y          39000021
ADA00650 STH   CESDCRCT,NCESDCT         SAVE Y                          39100021
ADA00700 BCT   CESDCRCT,ADA00600        BRANCH IF LOOP OF CESD NOT DONE 39200021
*              COMPUTE NEW CESD CURRENT NUMBER ENTRIES                  39300021
         LH    CESDCRCT,NCESDCT         Y= CESD CURR CT - CESD LN NO +1 39400021
         BCTR  CESDCRCT,0               Y-1                             39500021
         LCR   CESDCRCT,CESDCRCT        Y-1 IN COMPLEMENT FORM          39600021
         AH    CESDCRCT,ENCDC      CESD ID OF LAST NON NULL LINE        39700021
         STH   CESDCRCT,ENCDC      SAVE NEW CESD CT                     39800021
         BAL   RETURN,ADA02300          GO TO TEST CESD CT = 0          39900021
         L     BRANCH,ENTVCON           GO TO ENTRY PROCESSOR           40000021
         LA    13,SAVEREGS             ADDRESS OF SAVE AREA FOR ENT     40100021
         BALR  RETURN,BRANCH            (EXPECT ENT TO RETURN ALL REGS) 40200021
ADA00800 L     BRANCH,OUTVCON           GO TO OUTPUT PROCESSOR          40300021
         BALR  RETURN,BRANCH                                            40400021
*********************************************************************** 40500021
*              TEST IF THIS IS A PSEUDO REGISTER                      * 40600021
*                                                                     * 40700021
*********************************************************************** 40800021
ADA00850 CLI   TESTTYPE,X'06'          IS TYPE = PSEUDO REGISTER        40900021
         BC    7,ADA00400              NO / GO TO TEST END OF LOOP      41000021
*********************************************************************** 41100021
*              CESD  TYPE = PSEUDO REGISTER                             41200021
*********************************************************************** 41300021
         SR    WORK1,WORK1                                              41400021
         IC    WORK1,12(CESDCRAD)       PSEUDO REGISTER ALIGNMENT       41500021
         LCR   WORK2,WORK1              2S COMPLEMENT OF ALIGNMENT      41600021
         BCTR  WORK2,0                  IS COMPLEMENT OF ALIGNMENT      41700021
         A     WORK1,PRAL          ADD PR LOC CTR TO ALIGNMENT          41800021
         NR    WORK1,WORK2              AND IS COMPLEMENT TO ADJUSTEDPR 41900021
         IC    WORK2,8(CESDCRAD)        SAVE TYPE                       42000021
         ST    WORK1,8(CESDCRAD)        STORE PSEUDO REG NEW DISPLACMNT 42100021
         STC   WORK2,8(CESDCRAD)        RESTORE TYPE                    42200021
         A     WORK1,12(CESDCRAD)       ADD PR LENGTH TO CULMULATIVE    42300021
         LA    WORK1,0(WORK1)           REMOVE HI BYTE GARBAGE          42400021
         ST    WORK1,PRAL          SAVE NEW CULMULATIVE TOTAL LGTH      42500021
         BC    15,ADA00400              BRANCH TO TEST END OF CESD LOOP 42600021
*********************************************************************** 42700021
*              TYPE = ER - DETERMINE SUBTYPE -                        * 42800021
*********************************************************************** 42900021
ADA00900 LA    RETURN,ADA00650          RETURN TO SAVE Y                43000021
         LA    TEMP2,ADA00910          ADD OF NULLIFY ROUT              43100021
*                                                                       43200021
         CLI   13(CESDCRAD),X'A0'      IS TYPE = ALIAS                  43300021
         BCR   8,RETURN                YES - RETURN TO MAIN LOOP        43400021
*                                                                       43500021
         CLI   13(CESDCRAD),X'90'      IS TYPE = NULL                   43600021
         BCR   11,TEMP2                GO TO NULLIFY CESD LINE          43700021
*                                                                       43800021
         CLI   13(CESDCRAD),X'04'      IS TYPE = NO CALL LOB MEMBER     43900021
         BCR   8,TEMP2                 YES - NULLIFY                    44000021
*                                                                       44100021
         CLI   13(CESDCRAD),X'02'      IS TYPE = NULL                   44200021
         BCR   8,TEMP2                 YES - NULLIFY                    44300021
         XC    9(4,CESDCRAD),9(CESDCRAD) SET ADD AND SEG FIELD = 0      44400021
*                                                                       44500021
         CLI   13(CESDCRAD),X'06'       IS TYPE = NEVER CALL            44600021
         BC    8,ADA00904               YES / PRINT WARNING MESSAGE -ER 44700021
*              MATCHED LIB.MEM.(TYPE 03) ARE REGULAR ERS                44800021
         CLI   13(CESDCRAD),X'05'       IS TYPE = NO CALL MATCHED       44900021
         MVI   13(CESDCRAD),X'00'       SET TYPE 05 OR 03 = 00 -REG.ER  45000021
         BC    8,ADA00904               YES / PRINT WARNING MESSAGE -ER 45100021
*                                                                       45200021
         LH    ERRCODE,ERRPARM1         ER - ASSUME NO CALL OFF         45300021
         TM    APT0,X'80'          IS NO CALL OPTION = ON               45400021
         BC    8,ADA00905               NO - SEV 3 - EXEC ONLY IF LET   45500021
ADA00904 LH    ERRCODE,ERRPARM2         ER - NO CALL ON                 45600021
ADA00905 LR    ERRSYMAD,CESDCRAD        ADDRESS OF SYMBOL OF ER         45700021
ADA00906 L     BRANCH,ERDIG        ADDRESS OF ERROR DIAGNOSTIC RT       45800021
         L     13,SAVE13           RESTORE ADDR. OF SAVE AREA           45900021
         BCR   15,BRANCH               GO TO ERROR ROUTINE - TYPE ER    46000021
*              NULL LINE                                                46100021
ADA00910 XC    0(16,CESDCRAD),0(CESDCRAD) NULLIFY LINE                  46200021
         MVI   8(CESDCRAD),X'07'       SET NULL TYPE                    46300021
         BC    15,ADA00700              RETURN TO TEST END OF LOOP      46400021
*********************************************************************** 46500021
*              TEST IF CURRENT NO SEGMENTS IS GTR THAN 1/ NO ERROR    * 46600021
*              SET PROGRAM TO NOT IN OVERLAY                          * 46700021
*********************************************************************** 46800021
ADA01000 LH    CSLGTH,CSNO         CURRENT NUMBER OF SEGMENTS           46900021
         BCT   CSLGTH,ADA01050          BRANCH IF CURRNO SEG GTR 1      47000021
         NI    PDSE7,OVLYOFF       SET PROG TO NOT IN OVERLAY           47100021
         LH    ERRCODE,ERRPARM5         LOAD ERR PARM - OVERLAY WARNING 47200021
         LA    RETURN,ADA00122          RETURN ADDRESS                  47300021
         BC    15,ADA00906              GO TO GO TO ERROR ROUTINE       47400021
ADA01050 LA    CSLGTH,1(CSLGTH)         RESTORE CURRENT NO SEGMENTS     47500021
         SLL   CSLGTH,2                 MULTIPLY BY 4                   47600021
         LA    CSLGTH,24(CSLGTH)        LENGTH OF SEGTAB                47700021
         L     WORK4,SEGLNTAB                                           47800021
         ST    CSLGTH,CONSTWK                                           47900021
         MVC   6(3,WORK4),CONSTWK+1     PUT SEGTAB LGTH IN SEGLGTH TBL  48000021
*                                       AT ENTRY PER SEGMENT 1          48100021
         MVC   PDSE10(2),CONSTWK+2  PUT LENGTH OF SEGTAB IN PDS         48200021
         SR    CSASADD,CSASADD          ASSEMBLED ADD OF SEGTAB = 0     48300021
         LA    CSSEGNO,1                SEGMENT NO = 1                  48400021
         BAL   RETURN,ADA02500         GO TO PCB ROUT                   48500021
*                                                                       48600021
         MVC   ENSPX(2),ENCDC      PUT ESDID IN PDS (SEGTAB)            48700021
         BC    15,ADA00122              GO TO SCAN CESD  (MAIN FLOW)    48800021
*                                                                       48900021
*                                                                       49000021
ADA01100 LA    CURSEGNO,1               INIT CURRENT SEGMENT =1         49100021
         L     SEGLGTH,SEGLNTAB    ADDRESS OF SEG LENGTH TABLE          49200021
         LR    WORK4,SEGLGTH            ADDRESS OF SEGLGTH              49300021
ADA01200 LA    SEGLGTH,6(SEGLGTH)       INC SEGMENT LG TBL ADD NXT ENTY 49400021
         L     WORK1,SGT1          ADDRESS OF SEGTAB1                   49500021
         SR    WORK2,WORK2                                              49600021
         IC    WORK2,0(WORK1,CURSEGNO)  PICK UP PRV SEGMENT NO.         49700021
         LTR   WORK2,WORK2              IS PREVIOUS SEGMENT NO.= 0      49800021
         BC    2,ADA02400               NO                              49900021
         LH    WORK3,CURRREGN           LOAD CURRENT REGION NO.         50000021
         ST    CURSEGNO,CONSTWK         CURR SEG NO                     50100021
         LA    WORK2,LSTS(WORK3)   ADDR OF LAST SEG OG PRES REG         50200021
         CLC   CONSTWK+3(1),0(WORK2)    IS CURR SEG IN PRES REGION      50300021
         BC    13,ADA01300              YES                             50400021
         LA    WORK3,1(WORK3)           INC CURRENT REG NO BY 1         50500021
         STH   WORK3,CURRREGN           SAVE CURR REG NO                50600021
         MVC   BGADDREG(4),HIADDREG     SET BEGIN ADDOF REG TO HIADDREG 50700021
ADA01300 L     WORK3,BGADDREG           LOAD BEGIN ADDRESS OF REGION    50800021
ADA01500 SR    WORK1,WORK1              SAVE SEGMENT (PATH) LENGTH      50900021
         IC    WORK1,3(SEGLGTH)         PICK UP FLAG BYTE FOR THIS SEG  51000021
         SR    WORK1,WORK3              3BITS OF AA - SEGLENGTH         51100021
         LA    WORK2,7                                                  51200021
         NR    WORK1,WORK2              AND OUT ALL BUT LOW 3 BITS/DIFF 51300021
         AR    WORK3,WORK1              SEGMENT LENGTH NOW MODULO 8FLAG 51400021
         ST    WORK3,CONSTWK                                            51500021
         NI    CONSTWK+3,X'F8'          AND OUT LOW 3 BITS OF SEGMENTRC 51600021
         MVC   3(3,SEGLGTH),CONSTWK+1   PUT SEGMENT RC IN LST 3BYTSEGLG 51700021
         MVC   CONSTWK+1(3),0(SEGLGTH)  MOVE LENGTH OFTHIS SEGMENT      51800021
         MVI   CONSTWK,X'00'            SET HI BYTE OF LENGTH TO ZERO   51900021
         A     WORK3,CONSTWK            ADD LENGTH OF THIS SEG TO PTHTL 52000021
         ST    WORK3,CONSTWK            PUT UPDATED SEGMENT LENGTH IN   52100021
         MVC   0(3,SEGLGTH),CONSTWK+1   SEGLGTH TBL AT THIS SEG ENTRY   52200021
         CL    WORK3,HIADDREG           IS THIS ADD GTR THAN CURR HIADD 52400021
         BC    13,ADA01600              NO                              52500021
         ST    WORK3,HIADDREG           YES SAVE NEW HI ADDRESS         52600021
ADA01600 LA    CURSEGNO,1(CURSEGNO)     INC CURRENT SEGMENT CT          52700021
         CH    CURSEGNO,CSNO       IS LOOP DONE                         52800021
         BC    13,ADA01200              NO / CONTINUE LOOP              52900021
*                                                                       53000021
*              LOOP THROUGH CESD ADDING SEGMENT RC TO TLA OF (SD,PC,CM) 53100021
*                           AND TO TRC OF (SD,PC,CM)                    53200021
         LA    CURSEGNO,1               INIT CURRENT SEG=1       S01904 53300021
         XC    CURRREGN(10),CURRREGN    CLEAR CURRENT REGION NO  S01904 53400021
         LH    WRKREG7,ENSPX            COUNT OF CESD ENTRIES    S01904 53500021
         OI    SWITCHH,4                SET SWITCHH TO 4         S01904 53600021
         L     SEGLGTH,SEGLNTAB         ADDR OF SEG LEN TABLE    S01904 53700021
         B     ADA01701                                          S01904 53800021
ADA0170A L     SEGLGTH,SEGLNTAB         ADDR OF SEG LEN TABLE    S01904 53900021
ADA0600A LH    WRKREG1,ORDRCUR          CUR NO OF BYTES IN ORDR TBL     54000021
         NI    SWITCHH,X'FB'                                     S01904 54100021
         LTR   WRKREG1,WRKREG1          ANY ENTRIES IN ORDR TBL  S01904 54200021
         BZ    ADA0700                  NO,BRANCH OUT            S01904 54300021
         OI    SWITCHH,1                INDICATE ORDER TBL LOOP  S01904 54400021
         L     WRKREGF,ORDRADR          ADDR OF ORDER TBL        S01904 54500021
         AR    WRKREG1,WRKREGF          ADDR OF LAST ENTRY IN ORDR      54600021
         LA    WRKREG0,3               TO BE COMPUTED            S01904 54700021
         SR    WRKREG1,WRKREG0          NOW IN REGISTER 1        S01904 54800021
ADA0600  TM    0(WRKREGF),X'A0'         MATCHED ENTRY TO BE ORDERED     54900021
         BNO   ADA0601                  NO,CONTINUE SEARCH       S01904 55000021
         MVC   IDSV(2),1(WRKREGF)       SAVE ESIDID FROM ORDR TABLE     55100021
         LH    WRKREG7,IDSV             PROCESS THIS ENTRY       S01904 55200021
         B     ADA01701                                          S01904 55300021
ADA0601  BXLE  WRKREGF,WRKREG0,ADA0600  CONTINUE LOOP            S01904 55400021
         NI    SWITCHH,X'FE'            RESET ORDR TBL LOOP INDICATOR   55500021
ADA0700  LH    WRKREG1,ENTOC            CURR NO OF BYTES IN TXTIO TBL   55600021
         LTR   WRKREG1,WRKREG1          ANY ENTRIES IN TXTIO TBL        55700021
         BZ    ADA0800                  NO,BRANCH OUT            S01904 55800021
         OI    SWITCHH,2                INDICATE TXTIO LOOP      S01904 55900021
         L     WRKREGF,TXTIO            GET ADDR OF TXTIO TBL    S01904 56000021
         AR    WRKREG1,WRKREGF          COMPUTE THE ADDR         S01904 56100021
         LA    WRKREG0,4                OF THE LAST ENTRY IN TXTIO      56200021
         SR    WRKREG1,WRKREG0          ADDR NOW IN REG ONE      S01904 56300021
ADA0701  LH    WRKREG7,0(WRKREGF)       GET ESDID FROM ENTRY     S01904 56400021
ADA01701 SLL   WRKREG7,4                LOCATE CORR ENTRY        S01904 56500021
         A     WRKREG7,CHESD            IN CESD TABLE.           S01904 56600021
         B     ADA01702                 PROCEED TO PROCESS ENTRY        56700021
ADA0702  BXLE  WRKREGF,WRKREG0,ADA0701  CONTINUE TXTIO PROCESS LOOP     56800021
         NI    SWITCHH,X'FD'            RESET TXTIO INDICATOR    S01904 56900021
ADA0800  L     CESDCRAD,CHESD      CESD ADDRESS                         57000021
         LH    CESDCRCT,ENCDC      CESD CURRENT COUNT                   57100021
ADA01700 LA    CESDCRAD,16(CESDCRAD)    INCREMENT CESD ADDRESS          57200021
ADA01702 TM    8(WRKREG7),8             WAS ENTRY PROCESSED      S01904 57300021
         BO    ADA02000                 YES,BRANCH OUT           S01904 57400021
         MVN   TESTTYPE(1),8(CESDCRAD)  MOVE TYPE FOR TESTING           57500021
         NI    TESTTYPE,X'F7'                                    S01904 57600021
         CLI   TESTTYPE,X'05'           IS TYPE = CM                    57700021
         BC    8,ADA01750               YES                             57800021
         TM    TESTTYPE,X'03'           IS TYPE NOT = SD,PC,(W/O RLDS)  57900021
         BC    5,ADA02000               NO  GO TO TEST END OF LOOP      58000021
ADA01750 SR    WORK1,WORK1                                              58100021
         IC    WORK1,12(CESDCRAD)       PICK UP SEG NO OF THIS CESD ID  58200021
         CR    WORK1,CURSEGNO           IS IT THE CURR SEG NO    S01904 58300021
         BNE   ADA02000                 NO,BRANCH OUT            S01904 58400021
         MH    WORK1,SIX                MULTIPLY BY 6                   58500021
         AR    WORK1,SEGLGTH            ADD SEGLGTH ADD /POINTS   ENTRY 58600021
         MVI   CONSTWK,X'00'                                            58700021
         MVC   CONSTWK+1(3),3(WORK1)    MOVE SEGMENT RC TO CONSTWK      58800021
         L     WORK1,CONSTWK            LOAD SEGMENT RELOCATION CONST   58900021
         MVI   CONSTWK1,0                                        S01904 59000021
         A     WORK1,CONSTWK1                                    S01904 59100021
         LR    WORK2,WORK1              SAVE SEGMENT RC                 59200021
         A     WORK2,8(CESDCRAD)        ADD TEMP LINKED ADD TO SEG RC   59300021
         BAL   WORK3,ADA0400            CHECK PAGE ALIGN         S01904 59400021
         IC    WORK3,8(CESDCRAD)        SAVE TYPE                       59500021
         ST    WORK2,8(CESDCRAD)        STORE FINAL LINKED ADD          59600021
         STC   WORK3,8(CESDCRAD)        RESTORE TYPE                    59700021
         LR    WORK2,CESDCRAD           SAVE CURRENT CESD ADD           59800021
         S     WORK2,CHESD         FIND RELATIVE CESD ADD               59900021
         SRL   WORK2,2                  FIND RELATIVE RCT (REL)ADD      60000021
         A     WORK2,RECNT         ADDRESS OF THIS RC ENTRY             60100021
ADA01800 A     WORK1,0(WORK2)           ADD TRC TO SEG RC               60200021
         ST    WORK1,0(WORK2)          PUT FINAL RC IN RCT              60300021
         TM    SWITCHH,X'07'                                     S01904 60400021
         BZ    ADA02000                                          S01904 60500021
         OI    8(WRKREG7),X'08'                                  S01904 60600021
ADA02000 TM    SWITCHH,1                                         S01904 60700021
         BO    ADA0601                                           S01904 60800021
         TM    SWITCHH,2                                         S01904 60900021
         BO    ADA0702                                           S01904 61000021
         TM    SWITCHH,4                                         S01904 61100021
         BO    ADA0600A                                          S01904 61200021
         CLI   8(WRKREG7),X'0A'         IS ENTRY A WEAK EXTN     S01904 61300021
         BE    ADA02001                 YES,SKIP RESET           S01904 61400021
         NI    8(WRKREG7),X'F7'         RESET PROCESSED BIT      S01904 61500021
ADA02001 BCT   CESDCRCT,ADA01700        BRANC IF LOOP NOT DONE   S01904 61600021
ADA0500  STM   WRKREG0,WRKREGF,BRNCHSV  SAVE REGISTERS           S01904 61700021
         LR    WRKREG1,CURSEGNO         GET CURRENT SEG NO       S01904 61800021
         MH    WRKREG1,SIX             COMPUTE ITS ENTRY ADDR    S01904 61900021
         A     WRKREG1,SEGLNTAB        IN THE SEG LEN TABLE      S01904 62000021
         MVC   CONSTWK+1(3),0(WRKREG1)  MOVE THE SEG LENGTH      S01904 62100021
         MVI   CONSTWK,0               ZERO OUT HI ORDER BYTE    S01904 62200021
         L     WRKREG0,CONSTWK         LOAD SEG LENGTH           S01904 62300021
         MVI   CONSTWK1,0                                        S01904 62400021
         A     WRKREG0,CONSTWK1        ADD                       S01904 62500021
         LR    WRKREG4,WRKREG0         USE NONZERO REG FOR INDXING      62600021
         LA    WRKREG0,7(WRKREG4)      FORCE ADDR TO NEXT HIGHER        62700021
         N     WRKREG0,ROUNDOFF        DOUBLEWORD BOUNDARY       S01904 62800021
         ST    WRKREG0,CONSTWK         SAVE                      S01904 62900021
         MVC   0(3,WRKREG1),CONSTWK+1   MOVE TO SEG LEN TBLE     S01904 63000021
         C     WRKREG0,HIRNADR2                                  S01904 63100021
         BNH   ADA500A                                           S01904 63200021
         ST    WRKREG0,HIRNADR2                                  S01904 63300021
ADA500A  XC    CONSTWK1(4),CONSTWK1                              S01904 63400021
         XR    WRKREGE,WRKREGE                                   S01904 63500021
         L     WRKREGF,SGT1                                      S01904 63600021
         LA    WRKREG3,1(CURSEGNO)                               S01904 63700021
         CH    WRKREG3,CSNO                                      S01904 63800021
         BNH   ADA0501                                           S01904 63900021
         LM    WRKREG0,WRKREGF,BRNCHSV   RESTORE REGS            S01904 64000021
         B     ADA504A                                           S01904 64100021
ADA0501  LH    WRKREG5,CURRREGN        GET CURR REGION NO        S01904 64200021
         LA    WRKREG6,LSTS(WRKREG5)                             S01904 64300021
         STC   CURSEGNO,SEGNOSV                                  S01904 64400021
         CLC   0(1,WRKREG6),SEGNOSV                              S01904 64500021
         BNE   ADA0501A                                          S01904 64600021
         MVC   HIRNADR1(4),HIRNADR2                              S01904 64700021
         LA    WRKREG5,1(WRKREG5)                                S01904 64800021
         STH   WRKREG5,CURRREGN                                  S01904 64900021
ADA0501A IC    WRKREG3,0(WRKREG3,WRKREGF)  GET CUR SEG LOC IN OVLY TREE 65000021
         LTR   WRKREG3,WRKREG3         IS IT ZERO?               S01904 65100021
         BZ    ADA0504                 YES,BRANCH OUT            S01904 65200021
         LR    WRKREG4,WRKREG3         COMPUTE CORR ENTRY ADDR   S01904 65300021
         MH    WRKREG4,SIX             IN THE SEG LEN TABLE      S01904 65400021
         A     WRKREG4,SEGLNTAB                                  S01904 65500021
         MVC   CONSTWK+1(3),0(WRKREG4) OBTAIN SEGMENT LENGTH     S01904 65600021
         L     WRKREGE,CONSTWK         LOAD INTO REGISTER        S01904 65700021
         B     ADA0504B                                          S01904 65800021
ADA0504  L     WRKREGE,HIRNADR1                                  S01904 65900021
ADA0504B LR    WRKREGB,WRKREGE                                   S01904 66000021
         MVC   CONSTWK+1(3),9(WRKREG1)                           S01904 66100021
         MVI   CONSTWK,0                                         S01904 66200021
         S     WRKREGB,CONSTWK                                   S01904 66300021
         MVC   CONSTWK+1(3),6(WRKREG1)                           S01904 66400021
         A     WRKREGB,CONSTWK                                   S01904 66500021
         ST    WRKREGB,CONSTWK                                   S01904 66600021
         MVC   6(3,WRKREG1),CONSTWK+1                            S01904 66700021
         ST    WRKREGE,CONSTWK                                   S01904 66800021
         MVC   9(3,WRKREG1),CONSTWK+1                            S01904 66900021
         LM    WRKREG0,WRKREGF,BRNCHSV                           S01904 67000021
         LA    CURSEGNO,1(CURSEGNO)                              S01904 67100021
         CH    CURSEGNO,CSNO                                     S01904 67200021
         BNH   ADA0170A                                          S01904 67300021
ADA504A  MVC   HIADDREG,HIRNADR2                                 S01904 67400021
         L     WORK1,HIADDREG          GET LENGTH OF LONGEST PATH       67500021
         LA    WORK1,7(WORK1)          ROUND UP TOTAL LENGTH TO         67600021
         N     WORK1,ROUNDOFF          NEXT DOUBLE WORD                 67700021
         ST    WORK1,HIADDREG          SAVE FOR PDS DIRECTORY           67800021
         MVC   PDSE9(3),HIADDREG+1 PUT TOTAL CONTIGOUS CORE REQ         67900021
         BC    15,ADA00550              IN PDS / GO TO FINAL CESD LOOP  68000021
ADA02300 LH    CESDCRCT,ENCDC      CESD CURR CT                         68100021
         LTR   CESDCRCT,CESDCRCT       IS CESD CURR CT = 0              68200021
         BCR   2,RETURN                N/ / GO TO CALLER                68300021
         L     BRANCH,ERDIG        ERROR RT ADDRESS                     68400021
         LH    ERRCODE,ERRPARM3         CESD DOES NOT EXIST             68500021
         BALR  RETURN,BRANCH                                            68600021
         L     BRANCH,FNLVCON           ADD OF FINAL PROC               68700021
         BCR   15,BRANCH                GO TO FINAL PROC                68800021
ADA02400 MH    WORK2,SIX                                                68900021
         AR    WORK2,WORK4              ADDRESS OF A SEGLGTH ENTRY      69000021
         MVI   CONSTWK,X'00'                                            69100021
         MVC   CONSTWK+1(3),0(WORK2)    MOVE SEG LGTH OF PRVIOUS SEG.   69200021
         L     WORK3,CONSTWK                                            69300021
         LTR   WORK3,WORK3              IS PRV. SEGMENT LENGTH = 0      69400021
         BC    2,ADA01500               NO                              69500021
         SR    WORK2,WORK2                                              69600021
         IC    WORK2,0(WORK1,CURSEGNO)  PICK UP PRVIOUS SEGMENT NO.     69700021
         IC    WORK2,0(WORK1,WORK2)     USING PRV.SEG.NO PICK UP ITSPRV 69800021
         STC   WORK2,0(WORK1,CURSEGNO)  PUT PRV.OF PRV AS PRV TO THIS 1 69900021
         BC    15,ADA02400              BRANCH TO GET SEG LENGTH OF     70000021
*********************************************************************** 71400021
*              THE FOLLOWING BOX OF CODE WILL BE USED ON THE E LOADER * 71500021
*                        1) IT COMPUTES NO.BYTES OF ENTAB PER SEGMENT * 71600021
*                        2) IT MAKES AN ENTRY IN CESD FOR EACH SEGMENT* 71700021
*                   NOTE:  1) AND 2) ARE DONE ONLY IF A SEG HAS ENTAB * 71800021
*                                                                     * 71900021
         DROP  BASE                                                     72000021
         USING HEWLCAD1,BRANCH                                          72100021
         DS    0F                                                       72200021
HEWLCAD1 LR    TEMP1,BASE          SAVE BASE OF HEWLKENS                72300021
         L     BASE,BASADD             SET UP ADDRESSABILITY            72400021
         LR    TEMP2,RETURN        SAVE RETURN ADD OF HEWLKENS          72500021
         MH    ACUMZERO,TWELVE          CHANGE ENTAB LINES TO ENTAB     72600021
         LA    ACUMZERO,12(ACUMZERO)    BYTES                           72700021
         C     ACUMZERO,MULTSIZE       IS ENTAB  G.T. MULTIPLICITY      72800021
         BC    2,ENTABERR    YES GIVE TERMINAL ERROR MESSAGE            72900021
         CH    ACUMZERO,FOUR096        IS ENTAB G.T. ABSOLUTE MAX.      73000021
         BC    2,ENTABERR     YES, GIVE TERMINAL ERROR MESSAGE          73100021
         SR    CSASADD,CSASADD          ADDRESS OF THIS ENTAB = 0       73200021
         LR    CSLGTH,ACUMZERO          LENGTH OF THIS ENTAB (BYTES)    73300021
         LR    CSSEGNO,CURSEGNO         SEGMENT NO OF THIS ENTAB        73400021
         BAL   RETURN,ADA02500         GO TO PCB ROUTINE                73500021
         LR    BASE,TEMP1          RESTORE BASE OF HEWLKENS             73600021
         LR    RETURN,TEMP2        RESTORE RETURN ADD OF HEWLKENS       73700021
         BCR   15,RETURN               RETURN TO ENS                    73800021
ENTABERR LH    ERRCODE,ERRPARM7        SET UP FOR 454 MESSAGE           73900021
         BC    15,ADA02600+4       GO TO GIVE MSG AND TERMINATE         74000021
BASADD   DC    A(ADA00100+2)       ADDRESS OF HEWLKADA+2                74100021
         DROP  BRANCH                                                   74200021
         USING ADA00100+2,BASE                                          74300021
*********************************************************************** 74400021
*                                                                       74500021
*              PCB  - PRIVATE CODE ENTRY BUILDING                       74600021
*                                                                       74700021
*                                                                     * 74800021
*                   REQUIRED REGISTERS & PARAMETERS                   * 74900021
*                        CESDADD (11)  WORK REGISTER                  * 75000021
*                        APT      (2)- ADDRESS OF APT                 * 75100021
*                        CSLGTH        CONTROL SECTION LENGTH         * 75200021
*                        CSSEGNO       CONTROL SECTION SEGMENT NO.    * 75300021
*                        CSASADD       CONTROL SECTION ASSIGNED ADD   * 75400021
*                        BASE    (12)  BASE REGISTER                  * 75500021
*                        RETURN  (14)                                 * 75600021
*                                                                       75700021
*              REGISTERS                                                75800021
*                                                                       75900021
CESDADD  EQU   11                                                       76000021
ERRADD   EQU   15                                                       76100021
*              APT  DISPLACEMENTS                                       76200021
*              DATA CONSTANTS  AND TEMPORARY STORAGE                    76300021
PCDELETE EQU   X'14'                    CESD TYPE PC MARKED DELETE      76400021
ADA02500 LH    CESDADD,ENCDC       CURRENT NO CESD ENTRIES              76500021
         LA    CESDADD,1(CESDADD)       INC CESD CURRENT CT             76600021
ADA02510 CH    CESDADD,ENCDX       IS CESD FULL                         76700021
         BL    ADA02520                NO,BRANCH OUT             S01904 76800021
         TM    APT4,REALOCTE           CAN REALLOC BE DONE       S01904 76900021
         BO    ADA02600                NO,SIGNAL OVERFLOW        S01904 77000021
         STM   WRKREG0,WRKREGF,BRNCHSV    SAVE REGISTERS         S01904 77100021
         L     WRKREGF,ERDIGA          ADDR OF REALOC RTN        S01904 77200021
         BALR  WRKREGE,WRKREGF         GO TO REALOC RTN          S01904 77300021
         LM    WRKREG0,WRKREGF,BRNCHSV RESTORE REGISTERS         S01904 77400021
         B     ADA02510                RESUME CHECK              S01904 77500021
ADA02520 STH   CESDADD,ENCDC            INCR CUR CESD COUNT             77600021
ADA02550 SLL   CESDADD,4                LOCATE NEXT AVAIL ENTRY         77700021
         A     CESDADD,CHESD            ADD BEGIN ADDR OF CESD TBL      77800021
         MVI   0(CESDADD),X'40'         MOVE BLANKS FOR SYMBOL          77900021
         MVC   1(7,CESDADD),0(CESDADD)   IN AVAIL ENTRY                 78000021
         ST    CSASADD,8(CESDADD)       STORE CS ASSIGNED ADDR          78100021
         MVI   8(CESDADD),PCDELETE      INDICATE PC DELETE TYPE         78200021
         ST    CSLGTH,12(CESDADD)       STORE LENGTH OF CSECT           78300021
         STC   CSSEGNO,12(CESDADD)      STORE CURR SEG NO               78400021
         BCR   15,RETURN                RETURN TO CALLING RTN           78500021
ADA02600 LH    ERRCODE,ERRPARM4         CESD OVERFLOW                   78600021
         L     ERRADD,ERDIG                                             78700021
         BCR   15,ERRADD                                                78800021
*********************************************************************** 78900021
*                                 TEMPORARY  ERROR  PARMS             * 79000021
*********************************************************************** 79100021
DISP1    EQU   X'22'                    DISP = 2   SEV = 2   NCAL  OFF  79200021
DISP2    EQU   X'21'                    DISP = 2   SEV = 1   NCAL  ON   79300021
DISP3    EQU   X'03'                    DISP = 0   SEV = 3   NO         79400021
DISP4    EQU   X'04'                                                    79500021
DISP5    EQU   X'01'                   DISP = 0     SEV = 1             79600021
DISP6    EQU   X'02'                   DISP = 0    SEV = 2              79700021
*                                                                       79800021
*              MESSAGE NUMBERS ARE DECIMAL                              79900021
*                                                                       80000021
MESS1    EQU   13                       UNRESOLVED ER   NCALL OFF       80100021
MESS2    EQU   46                       UNRESOLVED ER   NCALL ON        80200021
MESS3    EQU   12                       NO CESD                         80300021
MESS4    EQU   25                       CESD OVERFLOW                   80400021
MESS5    EQU   20     ONLY 1 SEGMENT IN AN OVERLAY STRUCTURE            80500021
MESS6    EQU   19     OUTPUT LOAD MODULE GREATER THAN 512K              80600021
MESS7    EQU   45     ENTAB GREATER THAN MULT SIZE OR 4K                80700021
*                     TOO MANY DOWNWARD CALLS FROM SEGMENT              80800021
MESS8    EQU   38     ID FOR TEXT IN TXTIOT IS NOT SD,PC, OR CM         80900021
         DS    0F                                                       81000021
         EXTRN HEWLFLDB                                                 81100021
SYSLIBAD DC    A(HEWLFLDB)    SYSLIB DCB ADDRESS                        81200021
ERRPARM1 DC    AL1(DISP1)               UNRESOLVED XTERNAL REFERENCE    81300021
         DC    AL1(MESS1)               SEV =2  - NCALL OFF             81400021
*                                                                       81500021
ERRPARM2 DC    AL1(DISP2)               UNRESOLVED XTERNAL REF          81600021
         DC    AL1(MESS2)         SEV=1 - NCAL ON                       81700021
*                                                                       81800021
ERRPARM3 DC    AL1(DISP3)               NO CESD                         81900021
         DC    AL1(MESS3)               SEV = 3                         82000021
*                                                                       82100021
ERRPARM4 DC    AL1(DISP4)               CESD  OVERFLOW                  82200021
         DC    AL1(MESS4)                                               82300021
*                                                                       82400021
ERRPARM5 DC    AL1(DISP5)              ONLY 1 SEGMENT IN AN OVERLAY     82500021
         DC    AL1(MESS5)              PROGRAM - OVERLAY OPTION         82600021
*                                      CANCELLED                        82700021
*                                                                       82800021
ERRPARM7  DC   AL1(DISP4)              ENTAB HAS EXCEEDED MULTIPLICITY  83300021
         DC    AL1(MESS7)              SIZE OR THE MAX. OF 4K.          83400021
*                                      TOO MANY DOWNWARD CALLS IN SEG.  83500021
*                                                                       83600021
ERRPARM8 DC    AL1(DISP6)              ID IN TXTIOT IS NOT SD, OR PC    83700021
         DC    AL1(MESS8)              INVALID ID MESSAGE ISSUED        83800021
*                                                                       83900021
*              MASKS & CONSTANTS                                        84000021
*                                                                       84100021
OUTVCON  DC    V(HEWLFOUT)    ADD OF OUTPRO                             84200021
ENSVCON  DC    V(HEWLFENS)    ADDRESS OF ENTAB SIZE DETERMINATION       84300021
ENTVCON  DC    V(HEWLFENT)    ADDRESS OF ENTRY PROCESSOR                84400021
FNLVCON  DC    V(HEWLFFNL)    ADDRESS OF FINAL PROCESSOR                84500021
CONSTWK  DC    F'0'                     WORK WORD                       84700021
SIX      DC    H'6'                     VALUE OF 6                      84800021
CLRLAST  XC    0(0,TEMP1),0(TEMP1)  INSTRUCTION FOR CLEARING TABLES     84900021
CONST256 DC    F'256'              USED FOR CLEARING TABLES             85100021
SIZSAVE  DC    F'0'                    AREA FOR MANIPULATING PGM SIZE   85200021
ROUNDOFF DC    X'FFFFFFF8'             MASK FOR ROUNDING TO NEXT        85300021
*                                      DOUBLE WORD                      85400021
SAVE13   DS    1F                                                       85500021
INC      EQU   4       NUMBRR OF BYTES/ENTRY ON TXTIOT                  85600021
*********************************************************************** 85700021
*              HIADDREG,BGADDREG,CURREGN,NCESDCT MUST BE IN THE CONTIG* 85800021
*              UOUS ORDER - THEY ARE REFERENCED AS A BLOCK            * 85900021
*********************************************************************** 86000021
HIADDREG DC    F'0'                     PRESENT HIGH ADDRESS OF THISREG 86100021
BGADDREG DC    F'0'                          PRESENT BEGIN ADDR OF REG  86200021
NCESDCT  DS    H                        Y - USED TO RECORD CESD CURR CT 86300021
CURRREGN DC    H'0'                     CURRENT REGION NUMBER           86400021
HIRNADR1 DC    F'0'                                                     86500021
HIRNADR2 DC    F'0'                                                     86600021
TWELVE   DC    H'12'                                                    86700021
         DS    0F                                                       86800021
*********************************************************************** 86900021
TESTTYPE DC    X'00'                    USED FOR TESTING ESD TYPES      87000021
*                                       HI 4 BITS= 0,LOW 4 BITS FORTYPE 87100021
FOUR096  DC    H'4096'                 CONSTANT OF 4K                   87200021
SEGLNTAB DS    F         ADDRESS OF SEGMENT LENGTH TABLE                87300021
*     TABLE ALSO USED BY HEWLFOUT FOR HI ID'S                           87400021
         DS    50F                                                      87500021
SAVEREGS DS    16F                                                      87600021
         EJECT                                                          87700021
*********************************************************************   87800021
*                                                                    *  87900021
*********************************************************************   88000021
ADA0400  TM    APT4,PAGEE         WAS PAGE ALIGN REQUESTED       S01904 88100021
         BCR   8,WORK3            NO,RETURN TO CALLING RTN       S01904 88200021
         STM   WRKREGE,WRKREG1,BRNCHSV SAVE REGISTERS            S01904 88300021
         LH    WRKREG1,ORDRCUR    OBTAIN CUR NO OF BYTES IN ORDR TBL    88400021
         LTR   WRKREG1,WRKREG1    ARE THERE ANY ENTRIES?         S01904 88500021
         BZ    ADA0405            NO,BRANCH OUT AND EXIT         S01904 88600021
         L     WRKREGE,ORDRADR    GET BEGIN ADDR OF ORDER TBL    S01904 88700021
         AR    WRKREG1,WRKREGE    COMPUTE ADDR OF LAST ENTRY     S01904 88800021
         LA    WRKREG0,3          IN THE ORDER TABLE             S01904 88900021
         SR    WRKREG1,WRKREG0    WRKREG1 NOW HAS THE ADDR       S01904 89000021
         LR    WRKREGF,WRKREG7    GET CESD ENTRY ADDR            S01904 89100021
         S     WRKREGF,CHESD      SUBTRACT FROM CESD TBL ADDR    S01904 89200021
         SRL   WRKREGF,4          AND DIVIDE BY 16               S01904 89300021
         STH   WRKREGF,IDSV       TO OBTAIN ESDID.               S01904 89400021
ADA0402  CLC   IDSV(2),1(WRKREGE) MATCH WITH ORDER TABLE ENTRY?  S01904 89500021
         BNE   ADA0406            NO,CONTINUE                    S01904 89600021
         TM    0(WRKREGE),X'10'   IS ENTRY FOR PAGE ALIGNMENT?   S01904 89700021
         BZ    ADA0405            NO,BRANCH OUT AND EXIT         S01904 89800021
         TM    APT4,ALIGN2        ALIGNMENT FOR 2K-BOUNDARY      S01904 89900021
         BO    ADA0403            YES,BRANCH OUT FOR 2K-ALIGNMENT       90000021
         LA    WRKREGF,X'FFF'(WORK2)   ALIGN TLA                 S01904 90100021
         N     WRKREGF,HEX1000    ON 4K-BOUNDARY                 S01904 90200021
         B     ADA0404                                           S01904 90300021
ADA0403  LA    WRKREGF,X'7FF'(WORK2)   ALIGN TLA                 S01904 90400021
         N     WRKREGF,HEX800     ON 2K-BOUNDARY                 S01904 90500021
ADA0404  LR    WRKREGE,WRKREGF    SAVE ALIGNED TLA               S01904 90600021
         SR    WRKREGF,WORK2      CHECK IF ALIGNMENT CAUSED DISPLMENT   90700021
         BZ    ADA0405            NO,EXIT                        S01904 90800021
         TM    PDSE7,OVRLAYBT     PROCESS INVOLVES OVLY STRUCTURES?     90900021
         BZ    ADA0405A           NO,BRANCH OUT                  S01904 91000021
         AR    WORK1,WRKREGF                                     S01904 91100021
         LA    WORK1,0(WORK1)                                    S01904 91200021
         A     WRKREGF,CONSTWK1   ACCUM INCREMENTS WITHIN SEGMENT       91300021
         LA    WRKREGF,0(WRKREGF) REMOVE HI ORDER BYTE           S01904 91400021
         ST    WRKREGF,CONSTWK1   SAVE ACCUM INCREMENT           S01904 91500021
ADA0405A LR    WORK2,WRKREGE                                     S01904 91600021
ADA0405  LM    WRKREGE,WRKREG1,BRNCHSV  RESTORE REGISTERS        S01904 91700021
         BR    WORK3              RETURN                         S01904 91800021
ADA0406  BXLE  WRKREGE,WRKREG0,ADA0402  CONTINUE SEARCH          S01904 91900021
         B     ADA0405                 SEARCH DONE               S01904 92000021
*********************************************************************   92100021
CONSTWK1 DC    F'0'                                                     92200021
HEX1000  DC    X'FFFFF000'                                              92300021
HEX800   DC    X'FFFFF800'                                              92400021
IDSV     DC    H'0'                                                     92500021
TYPESV   DC    H'0'                                                     92600021
ERRCDDE  DC    X'2240'                                                  92700021
SWITCHH  DC    X'0'                                                     92800021
SEGNOSV  EQU   IDSV                                                     92900021
WRKREG0  EQU   0                                                        93000021
WRKREG1  EQU   1                                                        93100021
WRKREG2  EQU   2                                                        93200021
WRKREG3  EQU   3                                                        93300021
WRKREG4  EQU   4                                                        93400021
WRKREG5  EQU   5                                                        93500021
WRKREG6  EQU   6                                                        93600021
WRKREG7  EQU   7                                                        93700021
WRKREG8  EQU   8                                                        93800021
WRKREG9  EQU   9                                                        93900021
WRKREGA  EQU   10                                                       94000021
WRKREGB  EQU   11                                                       94100021
WRKREGC  EQU   12                                                       94200021
WRKREGD  EQU   13                                                       94300021
WRKREGE  EQU   14                                                       94400021
WRKREGF  EQU   15                                                       94500021
O        EQU   0                                                        94600021
I        EQU   1                                                        94700021
VIII     EQU   8                                                        94800021
*********************************************************************** 94900021
*                                                                     * 95000021
*********************************************************************** 95100021
         HEWAPT                                                         95200021
         END                                                            95300021
./  ADD  SSI=62730825,NAME=HEWLFAPT
         TITLE 'ALL PURPOSE TABLE'                                      00050021
*         *         *         *         *         *         *         * 00100021
*FUNCTION: TO PROVIDE THE ALL PURPOSE TABLE USED BY THE OTHER CSECTS  * 00150021
*                                                                     * 00200021
*ENTRY POINTS: HEWLFAPT - CSECT NAME                                  * 00250021
*              HEWLCRBB - DEFINING SYSLIB DECB                        * 00300021
*              HEWLCRBN - DEFINING SYSLIN DECB                        * 00350021
*                                                                     * 00400021
*   REFERENCED BY ALL LINKAGE EDITOR CSECTS THROUGH REG 2             * 00450021
*                                                                     * 00500021
*   INPUT/OUTPUT - NOT APPLICABLE                                       00550021
*                                                                     * 00600021
*   EXTERNAL ROUTINES - NOT APPLICABLE                                * 00650021
*                                                                     * 00700021
*   EXITS - NOT APPLICABLE                                            * 00750021
*                                                                     * 00800021
*NOTES: THE ADDRESS OF THE ALL PURPOSE TABLE IS PLACED IN REG 2 BY    * 00850021
*        THE LINKAGE EDITOR INITIALIZER AND KEPT THERE FOR USE        * 00900021
*        BY THE OTHER ROUTINES                                        * 00950021
*         *         *         *         *         *         *         * 01000021
HEWLFAPT CSECT                                                          01050021
*                                                                     * 01100021
         ENTRY HEWLCRBB                                                 01150021
         ENTRY HEWLCRBN                                                 01200021
         ENTRY APT000                                                   01250021
         EXTRN HEWLCPDB                                                 01300021
         EXTRN HEWLCSDB                                                 01350021
         EXTRN HEWLFLDB                                                 01400021
         HEWAPT A                                                       01450021
         END                                                            01500021
./  ADD  SSI=72410409,NAME=HEWLFBTP
         TITLE    'HEWLFBTP  BIT MAP PROCESSOR'                         00010021
HEWLFBTP CSECT                                                          00020021
*********************************************************************** 00022021
*037300-041500,053400,069500,139500-148600,168900-172400         S21016 00030021
*220700-227700,304000-311700,912300-935400                       S21016 00040021
*900400-911600                                                   S01904 00050021
*052700                                                          XM7010 00052000
*C226700,A314400,A936000                                         A52450 00054000
*A238700,C532900,C534300                                        OY00131 00056003
*C214400,C238700,936080                                 OX03510,OY03043 00058002
*C215800,C232600,I936565                                OX04280,OY03413 00058402
*C218600,C236800,I314440,I889900                                XA04649 00058800
* SEE FIX FOR XA04649                                           YA03751 00059200
*********************************************************************** 00060021
*                                                                     * 00090021
*FUNCTION: PRINTS ENGLISH LANGUAGE MESSAGES CORRESPONDING TO          * 00160021
*   ERRROR CODES GENERATED.                                           * 00230021
*                                                                     * 00300021
*ENTRY POINTS   HEWLFBTP ONLY                                         * 00370021
*                                                                     * 00440021
*INPUT: BIT MAP (2 WORDS) IN ALL PURPOSE TABLE.                       * 00510021
*                                                                     * 00580021
*OUTPUT: ON SYSPRINT.                                                 * 00650021
*                                                                     * 00720021
*EXITS: NORMAL RETURN ONLY.                                           * 00790021
*                                                                     * 00860021
*TABLES:                                                              * 00930021
*                                                                     * 01000021
*TABLE CONTAINS INCREMENTS INTO THE LIST ARRAY. THE LIST ARRAY IS USED* 01070021
*TO COMPOSE THE PHRASE TABLE.                                         * 01140021
*                                                                     * 01210021
*PHRASES CONTAINS PHRASES WHICH ARE ASSEMBLED TO FORM MESSAGES.       * 01280021
*                                                                     * 01350021
*REUSABLE.                                                            * 01420021
*                                                                     * 01490021
ENDFLAG  EQU   X'FF'                                                    01560021
SINGLE   EQU   X'09'                   PRINT AND SINGLE SPACE           01630021
DOUBLE   EQU   X'13'                   IMMEDIATE DOUBLE SPACE           01700021
TRIPLE   EQU   X'19'                   PRINT AND TRIPLE SPACE           01770021
SKIP     EQU   X'8B'                   IMMEDIATE SKIP TO CHANNEL 1      01840021
SKPLN    EQU   X'0B'                   IMMEDIATE SKIP ONE LINE          01910021
TABENTSZ EQU   2                                                        01980021
LISENTSZ EQU   3                                                        02050021
NUMBLINS EQU   55                      LINES PER PAGE                   02120021
RENTRY   EQU   1                                                        02190021
APT      EQU   2                                                        02260021
REXEC    EQU   3                                                        02330021
NUM      EQU   3                                                        02400021
TSO      EQU   X'80'                   TSO SWITCH IN APTSWS             02470021
TERM     EQU   X'02'                   TERM SWITCH IN NEWSW             02540021
TERMWRT  EQU   X'04'                   WRITE TO TERM. SWITCH            02610021
RBITMAP1 EQU   4                                                        02680021
RBITMAP2 EQU   5                                                        02750021
RINDEX   EQU   6                                                        02820021
RLIMIT   EQU   7                                                        02890021
RTEST1   EQU   8                                                        02960021
RPRINT   EQU   8                                                        03030021
RDCB     EQU   9                                                        03100021
RTEST2   EQU   9                                                        03170021
RTABLE   EQU   10                                                       03240021
RINTRET  EQU   11                                                       03310021
RBASE    EQU   12                                                       03380021
RSAVREG  EQU   13                                                       03450021
RBUF     EQU   14                                                       03520021
RLIST    EQU   15                                                       03590021
         SPACE 1                                                 S21016 03660021
******SYMBOLIC EQUATES FOR HANDLING BITMAP2 MESSAGES******       S21016 03730021
         SPACE 1                                                 S21016 03800021
SWON     EQU   X'01'                   MASK FOR BITMAP2 SWITCH   S21016 03870021
SWOFF    EQU   X'FE'                   IMMEDIATE TO TURN OFF     S21016 03940021
*                                      BITMAP2 SWITCH            S21016 04010021
ONE      EQU   1                       VALUE OF 1                S21016 04080021
BM2LN    EQU   16                      LENGTH OF BITMAP+BITMAP2  S21016 04150021
         USING *,RLIST                                                  04220021
         USING APTDSECT,APT            ESTABLISH ADDRESSABILITY WITH    04290021
*                                      APT                              04360021
*                                                                       04430021
*        ESTABLISH BASE ADDRESSABILITY AND SAVE REGISTERS.              04500021
*                                                                       04570021
BTP000   BC    15,MODID+6              BRANCH AROUND MODULE IDENT       04640021
MODID    DC    C'02MBTP'                                                04710021
         STM   RBUF,RBASE,SPACES+12    SAVE REGS.                       04780021
         LA    RSAVREG,REGSA           LOAD SAVE AREA POINTER           04850021
         LR    RBASE,RLIST             ESTABLISH                        04920021
         USING BTP000,RBASE            ADDRESSABILITY                   04990021
         DROP  RLIST                                                    05060021
         L     RPRINT,TXTIO            LOAD ADDRESS OF PRINT BUFFER     05130021
         MVC   0(2,RPRINT),P086        SET TWO BLANKS FOR FINAL PRINT   05200021
         MVC   2(120,RPRINT),1(RPRINT) BLANK OUT BUFFERS         XM7010 05270000
         NC    BITMAP(BM2LN),BITMAP    ARE ANY MESSAGES LOGGED?  S21016 05340021
         BC    8,BTP074                NO, EXIT                         05410021
*        GIVEN AT LEAST ONE MESSAGE,PRINT HEADER LINE                   05480021
         MVI   0(RPRINT),DOUBLE        SET FOR DOUBLE SPACE             05550021
         TM    APTSWS,TSO          IS TSO IN EFFECT?                    05620021
         BC    1,BTP005            YES--BRANCH AROUND LINE COUNT        05690021
         LH    REXEC,LINECNT           GET NO. OF LINES ON OUTPUT PAGE  05760021
         SH    REXEC,CNTDEC            DECREMENT LINE COUNT BY 5        05830021
         BC    2,BTP005                BRANCH IF GREATER THAN ZERO      05900021
         LA    REXEC,52                IF NOT, SET LINE COUNT T0 52 FOR 05970021
*                                      NEW PAGE                         06040021
         MVI   0(RPRINT),SKIP          SET FOR EJECT TO NEW PAGE        06110021
BTP005   LH    NUM,HEWLCWBB+14     LOAD LRECL                           06180021
         BAL   RINTRET,BTP060                                           06250021
         STH   REXEC,LINECNT           STORE LINE COUNT                 06320021
         MVC   2(120,RPRINT),1(RPRINT) BLANK OUT BUFFERS                06390021
         MVC   46(28,RPRINT),BTPHDR    MOVE IN HEADER                   06460021
         MVI   0(RPRINT),TRIPLE        SET FOR TRIPLE SPACE             06530021
         BAL   RINTRET,BTP060          TO PRINT ROUTINE                 06600021
*                                                                       06670021
*        INITIALIZE REGISTERS                                           06740021
*                                                                       06810021
         MVI   CHARTEST,C'0'           INITIALIZE SEVERITY LEVEL        06880021
         NI    BTP2SW,SWOFF            TURN OFF BITMAP2 SWITCH   S21016 06950021
         LM    RBITMAP1,RBITMAP2,BITMAP  GET BITMAP                     07020021
         SR    REXEC,REXEC         ZERO OUT REGISTER                    07090021
         XC    NCHAR(2),NCHAR      ZERO OUT COUNTER                     07160021
         LA    RINDEX,TABENTSZ         SET INCREMENT FOR LOOPING THRU   07230021
*                                      TABLE                            07300021
         LA    RLIMIT,TABLEND          SET LIMIT FOR LOOPING THROUGH    07370021
*                                      TABLE                            07440021
*                                                                       07510021
*        LOOP ON SEVERITY LEVEL                                         07580021
*                                                                       07650021
BTP007   SR    RTEST1,RTEST1           INITIALIZE TEST REG. TO ZERO     07720021
         LA    RTEST2,1                TURN ON LOW-ORDER BIT IN REG.-   07790021
*                                      PAIR FOR TESTING BITMAP          07860021
         LA    RTABLE,TABLE            INITIALIZE TABLE ENTRY POINTER   07930021
*                                                                       08000021
*        LOOP TESTING SUCCESSIVE BITS FOR NEED FOR ERROR MESSAGES.      08070021
*                                                                       08140021
BTP010   STM   RTEST1,RTEST2,BITMAP    SAVE BIT CONFIGURATION TO BE     08210021
*                                      TESTED                           08280021
         L     RBUF,TXTIO              GET ADDRESS OF PRINT BUFFER      08350021
         MVI   1(RBUF),C' '            SET BLANK IN FIRST CHARACTER OF  08420021
*                                      LINE                             08490021
         MVC   2(240,RBUF),1(RBUF)     PROPOGATE BLANKS THROUGH BUFFER  08560021
         MVC   4(4,RBUF),IEWHEAD       MOVE IN 'IEW0' MESSAGE HEADER    08630021
         LA    RBUF,8(0,RBUF)          POINT TO LOCATION TO PLACE MSG.# 08700021
         NR    RTEST2,RBITMAP2         'AND' WORD 2 OF BITMAP WITH TEST 08770021
*                                      BIT                              08840021
         BC    4,BTP020                BRANCH IF MATCH                  08910021
         NR    RTEST1,RBITMAP1         TEST WORD ONE OF BITMAP          08980021
         BC    8,BTP040                BRANCH IF NO MATCH               09050021
*                                                                       09120021
*        ASSEMBLE INDICATED MESSAGE                                     09190021
*                                                                       09260021
BTP020   LH    RLIST,0(0,RTABLE)       GET INDEX TO APPROPRIATE MESSAGE 09330021
*                                      LIST                             09400021
         LA    RLIST,LIST(RLIST)       ADD BEGINNING LIST ADDRESS TO    09470021
*                                      INDEX                            09540021
BTP030   MVC   CRNO(2),1(RLIST)        GET INDEX TO MSG. PHRASE         09610021
         LH    RENTRY,CRNO             SET POINTER TO MSG. PHRASE       09680021
         LA    RENTRY,PHRASES(RENTRY)  ADD STARTING ADDR. OF PHRASES TO 09750021
*                                      PTR                              09820021
         IC    REXEC,0(0,RLIST)        GET NUMBER OF CHARACTERS IN      09890021
*                                      PHRASE-1                         09960021
         EX    REXEC,BTP050            MOVE PHRASE INTO BUFFER          10030021
         LA    RBUF,2(RBUF,REXEC)      POINT TO LOC. FOR NEXT PHRASE    10100021
         LA    RLIST,LISENTSZ(0,RLIST) POINT TO NEXT ENTRY IN MSG. LIST 10170021
         CLI   0(RLIST),ENDFLAG        IS MSG. COMPLETE?                10240021
         BC    7,BTP030                IF NOT CONTINUE LOOP             10310021
         BCTR  RBUF,0                  IF COMPLETE, END                 10380021
         MVI   0(RBUF),C'.'            SENTENCE WITH '.'                10450021
*                                                                       10520021
*        PRINT THE ASSEMBLED MESSAGE.                                   10590021
*                                                                       10660021
         L     RPRINT,TXTIO                                             10730021
         CLC   10(1,RPRINT),CHARTEST   TEST FOR THIS SEVERITY           10800021
         BC    7,BTP040                NO, OMIT PRINTING                10870021
         SR    RBUF,RPRINT         GET NO. CHAR. IN MESSAGE             10940021
         STH   RBUF,NCHAR          SAVE                                 11010021
         TM    APTSWS,TSO          TSO IN EFFECT?                       11080021
         BC    1,BTP035A           YES - SKIP LINE COUNT                11150021
BTP031   LH    RDCB,LINECNT            PICK UP LINE CNT                 11220021
         BCT   RDCB,BTP035             DECREMENT AND TEST FOR ZERO      11290021
         LA    RDCB,NUMBLINS           SET TO NUMBER OF LINES PER PAGE  11360021
         MVI   0(RPRINT),SKIP          SET TO SKIP TO ONE               11430021
         BAL   RINTRET,BTP060          TO PRINT ROUTINE                 11500021
BTP035   STH   RDCB,LINECNT            RESTORE LINE COUNTER             11570021
BTP035A  MVI   0(RPRINT),SINGLE    SET CARRIAGE CONTROL                 11640021
         LH    RTEST2,HEWLCWBB+14  GET LRECL                            11710021
         AR    RTEST2,RPRINT       GET END OF PRINT LINE                11780021
         BCTR  RTEST2,0            ADJUST FOR CARRIAGE CONTROL          11850021
BTP035B  CLI   0(RTEST2),C' '      IS END OF LINE A BLANK               11920021
         BE    BTP035C             YES - BRANCH                         11990021
         BCT   RTEST2,BTP035B      LOOK FOR BLANK                       12060021
BTP035C  LR    NUM,RTEST2                                               12130021
         SR    NUM,RPRINT          GET NO. CHAR. ON LINE                12200021
         BAL   RINTRET,BTP060      GO PRINT LINE                        12270021
         LH    RTEST2,NCHAR                                             12340021
         SR    RTEST2,NUM          GET NO. OF CHAR. LEFT                12410021
         BC    12,BTP040           BRANCH IF NONE LEFT.                 12480021
         LA    RTEST2,11(RTEST2)   ADJUST COUNT FOR LEADNG BLNKS        12550021
         STH   RTEST2,NCHAR        STORE COUNT                          12620021
         AR    RPRINT,NUM                                               12690021
         LA    RTEST2,11                                                12760021
         SR    RPRINT,RTEST2       GET BEGINNING OF NEXT PART           12830021
         MVI   1(RPRINT),C' '                                           12900021
         MVC   2(10,RPRINT),1(RPRINT)   MOVE IN LEADING BLANKS          12970021
         B     BTP035A                                                  13040021
*                                                                       13110021
*        EXECUTED MOVE.                                                 13180021
*                                                                       13250021
BTP050   MVC   0(0,RBUF),0(RENTRY)                                      13320021
BTP055   MVC   0(0,RDCB),0(RPRINT)      EX.  MOVE                       13390021
*                                                                       13460021
*        REINITIALIZE REGISTERS AND LOOP UNTIL LAST BIT TESTED.         13530021
*                                                                       13600021
BTP040   LM    RTEST1,RTEST2,BITMAP                                     13670021
         XC    NCHAR(2),NCHAR      ZERO OUT COUNTER                     13740021
         SLDL  RTEST1,1                                                 13810021
         BXLE  RTABLE,RINDEX,BTP010                                     13880021
         TM    BTP2SW,SWON             IS BITMAP2 SWITCH ON?     S21016 13950021
         BO    BTP042                  IF SO, BRANCH             S21016 14020021
         OI    BTP2SW,SWON             IF NOT, TURN IT ON        S21016 14090021
         STM   RBITMAP1,RBITMAP2,SAVBTP1  SAVE BITMAP            S21016 14160021
         LM    RBITMAP1,RBITMAP2,BITMAP2  LOAD BITMAP2           S21016 14230021
         LA    RTABLE,TABLE2           POINT TO BITMAP2 TABLE    S21016 14300021
         LA    RLIMIT,TAB2END          POINT TO BITMAP2 LIMIT    S21016 14370021
         SR    RTEST1,RTEST1           ZERO TEST REG.1           S21016 14440021
         LA    RTEST2,ONE              TURN ON LOW ORDER BIT IN  S21016 14510021
*                                      TEST REG.2                S21016 14580021
         B     BTP010                  GO TO SCAN BITMAP2 FOR    S21016 14650021
*                                      THE CURRENT SEVERITY      S21016 14720021
BTP042   NI    BTP2SW,SWOFF            TURN OFF BITMAP2 SWITCH   S21016 14790021
         LM    RBITMAP1,RBITMAP2,SAVBTP1  RESTORE BITMAP         S21016 14860021
         CLI   CHARTEST,C'4'           TEST FOR TOP SEVERITY            14930021
         BE    BTP074                  YES EXIT                         15000021
         IC    RTEST2,CHARTEST         NO  INSERT FOR INCREMENTING      15070021
         LA    RTEST2,1(0,RTEST2)      INCREMENT BY ONE                 15140021
         STC   RTEST2,CHARTEST         RESTORE UPDATED CURRENT SEVERITY 15210021
         B     BTP007                  LOOP ON THIS SEVERITY            15280021
*                                                                       15350021
*        EXIT                                                           15420021
BTP074   L     RPRINT,HEWLCWBB+20      ADDRESS OF PRINT BUFFER          15490021
         MVI   0(RPRINT),SKPLN         IMMEDIATE SKIP ONE LINE          15560021
BTP075   BAL   RINTRET,BTP065          GO TO PRINT                      15630021
         LM    RBUF,RBASE,SPACES+12    RESTORE                          15700021
         BR    RBUF                                                     15770021
BTP060   L     RDCB,HEWLCWBB+20                                         15840021
         EX    NUM,BTP055          MOVE IN MESSAGE.                     15910021
BTP065   L     RLIST,PRNTAD            ADDRESS OF PRINT ROUTINE         15980021
         TM    NEWSW,TERM          IS TERM ON?                          16050021
         BC    8,BTP065A           NO - BRANCH                          16120021
         OI    HEWLCWBB+24,TERMWRT     WRITE TO TERM. NEECED            16190021
BTP065A  BALR  RBUF,RLIST                                               16260021
         BR    RINTRET                                                  16330021
CNTDEC   DC    AL2(5)                                                   16400021
NCHAR    DC    1H'0'               CHARACTER COUNTER                    16470021
*                                                                       16540021
*        CONSTANTS AND BUFFERS                                          16610021
*                                                                       16680021
PRNTAD   DC    V(HEWLEPNT)             ADDRESS OF PRINT ROUTINE         16750021
IEWHEAD  DC    C'IEW0'                                                  16820021
SAVBTP1  DS    2F                      SAVE AREA FOR BITMAP      S21016 16890021
BTP2SW   DS    XL1                     SWITCH FOR PROCESSING     S21016 16960021
*                                      BITMAP2; WHEN ON (VALUE = S21016 17030021
*                                      X'01') BITMAP2 WILL BE    S21016 17100021
*                                      SCANNED FOR MESSAGES IN   S21016 17170021
*                                      THE CURRENT SEVERITY      S21016 17240021
         DS    0H                                                       17310021
*                                                                       17380021
*        TABLE OF INCREMENTS TO MESSAGE LISTS.                          17450021
*                                                                       17520021
TABLE    DC    AL2(B001-LIST)                                           17590021
         DC    AL2(B002-LIST)                                           17660021
         DC    AL2(B003-LIST)                                           17730021
         DC    AL2(B004-LIST)                                           17800021
         DC    AL2(B005-LIST)                                           17870021
         DC    AL2(B006-LIST)                                           17940021
         DC    AL2(B007-LIST)                                           18010021
         DC    AL2(B008-LIST)                                           18080021
         DC    AL2(B009-LIST)                                           18150021
         DC    AL2(B010-LIST)                                           18220021
         DC    AL2(B011-LIST)                                           18290021
         DC    AL2(B012-LIST)                                           18360021
         DC    AL2(B013-LIST)                                           18430021
         DC    AL2(B014-LIST)                                           18500021
         DC    AL2(B015-LIST)                                           18570021
         DC    AL2(B016-LIST)                                           18640021
         DC    AL2(B017-LIST)                                           18710021
         DC    AL2(B018-LIST)                                           18780021
         DC    AL2(B019-LIST)                                           18850021
         DC    AL2(B020-LIST)                                           18920021
         DC    AL2(B021-LIST)                                           18990021
         DC    AL2(B022-LIST)                                           19060021
         DC    AL2(B023-LIST)                                           19130021
         DC    AL2(B024-LIST)                                           19200021
         DC    AL2(B025-LIST)                                           19270021
         DC    AL2(B026-LIST)                                           19340021
         DC    AL2(B027-LIST)                                           19410021
         DC    AL2(B028-LIST)                                           19480021
         DC    AL2(B029-LIST)                                           19550021
         DC    AL2(B030-LIST)                                           19620021
         DC    AL2(B031-LIST)                                           19690021
         DC    AL2(B032-LIST)                                           19760021
         DC    AL2(B033-LIST)                                           19830021
         DC    AL2(B034-LIST)                                           19900021
         DC    AL2(B035-LIST)                                           19970021
         DC    AL2(B036-LIST)                                           20040021
         DC    AL2(B037-LIST)                                           20110021
         DC    AL2(B038-LIST)                                           20180021
         DC    AL2(B039-LIST)                                           20250021
         DC    AL2(B040-LIST)                                           20320021
         DC    AL2(B041-LIST)                                           20390021
         DC    AL2(B042-LIST)                                           20460021
         DC    AL2(B043-LIST)                                           20530021
         DC    AL2(B044-LIST)                                           20600021
         DC    AL2(B045-LIST)                                           20670021
         DC    AL2(B046-LIST)                                           20740021
         DC    AL2(B047-LIST)                                           20810021
         DC    AL2(B048-LIST)                                           20880021
         DC    AL2(B049-LIST)                                           20950021
         DC    AL2(B050-LIST)                                           21020021
         DC    AL2(B051-LIST)                                           21090021
         DC    AL2(B052-LIST)                                           21160021
         DC    AL2(B053-LIST)                                           21230021
         DC    AL2(B054-LIST)                                           21300021
         DC    AL2(B055-LIST)                                           21370021
         DC    AL2(B056-LIST)                           OX03510,OY03043 21440002
         DC    AL2(B057-LIST)                                           21510021
         DC    AL2(B058-LIST)                           OX04280,OY03413 21580002
         DC    AL2(B059-LIST)                                           21650021
         DC    AL2(B060-LIST)                                           21720021
         DC    AL2(B061-LIST)                                           21790021
         DC    AL2(B062-LIST)                                   XA04649 21860000
TABLEND  EQU   *                                                        21930021
         DC    AL2(B063-LIST)                                           22000021
*                                                                S21016 22070021
*        TABLE OF MESSAGE LIST INCREMENTS FOR BITMAP2            S21016 22140021
*                                                                S21016 22210021
TABLE2   DC    AL2(B064-LIST)          MESSAGE 64                S21016 22280021
         DC    AL2(B065-LIST)          MESSAGE 65                S21016 22350021
         DC    AL2(0)                  MESSAGE 66                S21016 22420021
         DC    AL2(B067-LIST)          MESSAGE 67                S21016 22490021
         DC    AL2(B068-LIST)          MESSAGE 68                S21016 22560021
         DC    AL2(B069-LIST)          MESSAGE 69                S21016 22630021
         DC    AL2(B070-LIST)          MESSAGE 70                S21016 22640000
         DC    AL2(B071-LIST)          MESSAGE 71                S21016 22650000
         DC    AL2(B072-LIST)          MESSAGE 72                A37667 22660000
         DC    AL2(B073-LIST)          MESSAGE 73                A52450 22670000
         DC    AL2(B074-LIST)          MESSAGE 74                Y01031 22680000
TAB2END  EQU   *                       TABLE2 LIMIT              S21016 22700021
         DC    AL2(0)                  MESSAGE 99                S21016 22770000
*                                                                       22840021
*        PHRASES FROM WHICH MESSAGES ARE COMPOSED.                      22910021
*                                                                       22980021
P001     DC    C'16193421264043241438302211320254'                      23050021
PHRASES  EQU   P001                                                     23120021
         DC    C'382412043552602'                                       23190021
         DC    C'564572581'                             OX04280,OY03413 23260002
P002     DC    C'18284617294053544454847206364093'                      23330021
CHARTEST EQU   P002+16                 CURRENT SEVERITY FOR PRINTING    23400021
P081     DC    C'2'                                                     23470021
P003     DC    C'012314033274073740833945029102'                        23540021
P021     DC    C'322272'                                                23610021
P056     DC    C'191622'                                                23680000
P082     DC    C'594614'                                        XA04649 23750000
P097     DC    C'630722'                                         A37667 23820000
P233     DC    C'233564'                        OY00131,OX03510,OY03043 23870002
P004     DC    C'CARD IGNORED152 '                                      23890021
P005     DC    C'ERROR - '                                              23960021
P006     DC    C'INPUT CONTAINS '                                       24030021
P007     DC    C'INVALID TWO-BYTE RELOCATABLE '                         24100021
P008     DC    C'ADDRESS CONSTANT, CONSTANT HAS '                       24170021
P009     DC    C'NOT BEEN RELOCATED.'                                   24240021
P010     DC    C'V-TYPE'                                                24310021
P011     DC    C'ENTRY STATEMENT '                                      24380021
P012     DC    C'SYMBOL PRINTED IS '                                    24450021
P013     DC    C'INVALID (NOT AN EXTERNAL NAME), '                      24520021
P014     DC    C'NO ENTRY POINT ASSIGNED'                               24590021
P015     DC    C'ON '                                                   24660021
P016     DC    C'END NO '                                               24730021
P017     DC    C'TEXT RECORD ID IS INVALID, '                           24800021
P018     DC    C'NOT IN ROOT SEGMENT OF '                               24870021
P019     DC    C'OVERLAY STRUCTURE, '                                   24940021
P020     DC    C'OUTPUT MODULE'                                         25010021
P022     DC    C'UNLESS LET OPTION WAS '                                25080021
P023     DC    C'SPECIFIED DATA SET'                                    25150021
P024     DC    C'CONTAINS NO '                                          25220021
P025     DC    C'CONTROL SECTIONS'                                      25290021
P026     DC    C'NO ESD ENTRIES, '                                      25360021
P027     DC    C'EXECUTION IMPOSSIBLE'                                  25430021
P028     DC    C'IS AN UNRESOLVED EXTERNAL '                            25500021
P029     DC    C'REFERENCE;'                                            25570021
P030     DC    C'NCALIS '                                               25640021
P031     DC    C'INVALID '                                              25710021
P032     DC    C'EXCLUSIVE CALL '                                       25780021
P033     DC    C'FROM SEGMENT NUMBER'                                   25850021
P034     DC    C'XCAL'                                                  25920021
P036     DC    C'MAIN STORAGE REQUIREMENTS FOR '                        25990021
P037     DC    C'SCAN TERMINATED'                                       26060021
P038     DC    C'MET'                                                   26130021
P039     DC    C'CONTAINS ONLY ONE'                                     26200021
P040     DC    C'-- OVERLAY OPTION CANCELED'                            26270021
P041     DC    C'EXPECTED CONTINUATION CARD'                            26340021
P042     DC    C'WARNING - '                                            26410021
P043     DC    C'CARD PRINTED'                                          26480021
P044     DC    C'INPUT FROM OBJECT MODULE'                              26550021
P046     DC    C'IS DOUBLY DEFINED -- ESD TYPE '                        26620021
P047     DC    C'DEFINITIONS CONFLICT'                                  26690021
P048     DC    C'TABLE OVERFLOW -- TOO MANY '                           26760021
P049     DC    C'INPUT LOAD MODULE CONTAINS '                           26830021
P050     DC    C'TOO MANY EXTERNAL SYMBOLS IN ESD'                      26900021
P051     DC    C'TO LEVEL F'                                            26970021
P052     DC    C'CALLS BETWEEN'                                         27040021
P053     DC    C' CONTAINING SUCH CONSTANTS'                            27110021
P054     DC    C'-- DDNAME PRINTED '                                    27180021
P055     DC    C'CANNOT BE OPENED,'                                     27250021
P057     DC    C'HAD SYNCHRONOUS ERROR'                                 27320021
P058     DC    C'MAXIMUM NUMBER OF '                                    27390021
P059     DC    C'REGIONS (4) '                                          27460021
P060     DC    C'EXCEEDED,'                                             27530021
P061     DC    C'SEGMENTS'                                              27600021
P062     DC    C'ALIASES(16)'                                           27670021
P035     DC    C'NO CALLS OR BRANCHES MADE FROM '                       27740021
P063     DC    C'LIBRARY SPECIFIED DOES NOT '                           27810021
P064     DC    C'CONTAIN'                                               27880021
P065     DC    C'AFFECTED BY '                                          27950021
P066     DC    C'RELOCATION.'                                           28020021
P067     DC    C'INPUT TEXT EXCEEDED MAXIMUM '                          28090021
P068     DC    C'OR TOO MANY CHANGES OF ORIGIN'                         28160021
P069     DC    C'COMMON'                                                28230021
P070     DC    C'MEMBER NOT STORED IN LIBRARY -- '                      28300021
P071     DC    C'NO SPACE LEFT IN DIRECTORY,'                           28370021
P072     DC    C'IDENTICAL NAME'                                        28440021
P073     DC    C'WILL TRY TO STORE UNDER '                              28510021
P074     DC    C'''TEMPNAME'''                                          28580021
P076     DC    C'DOWNWARD'                                              28650021
P078     DC    C'WITHIN A'                                              28720021
P079     DC    C'UNDEFINED IN INPUT,'                                   28790021
P080     DC    C'ON END CARD,'                                          28860021
P083     DC    C'CONSTANTS OR'                                          28930021
P084     DC    C'PERMANENT DEVICE ERROR'                                29000021
P085     DC    C'CARD FOUND IN LIBRARY,'                                29070021
P045     DC    C'492'                                                   29140021
P087     DC    C'EXCESS'                                                29210021
P088     DC    C'512K BYTESHAVE'                                        29280021
P089     DC    C'INCLUDE STATEMENT SYNTAX '                             29350021
P090     DC    C'CONFLICTS WITH '                                       29420021
P091     DC    C'RECORD FORMAT OF'                                      29490021
P092     DC    C'HAS UNACCEPTABLE'                                      29560021
P093     DC    C'512522'                                                29630021
P094     DC    C'532'                                                   29700021
P095     DC    C'BLOCKSIZE OF'                                          29770021
P096     DC    C'DD CARD MAY BE MISSING'                                29840021
P098     DC    C'- XREF ABORTED'                                        29910021
P099     DC    C'LENGTH'                                                29980021
P086     DC    C'    '                                                  30050021
P077     DC    C'AND SUBROUTINE HAVE'                                   30120021
P100     DC    C'OR THE REFERENCE WAS MARKED FOR '                      30190021
P101     DC    C'RESTRICTED NO-CALL OR NEVERCALL'                       30260021
P102     DC    C'SPECIFIED,'                                            30330021
P103     DC    C'670 THE SPECIFIED IDENTIFY DATA HAS BEEN'       S21016 30400021
P104     DC    C'ADDED TO THE IDR FOR THE CONTROL SECTION '      S21016 30470021
         DC    C'NAME PRINTED'                                   S21016 30540021
P105     DC    C'682 ERROR - CONTROL SECTION NAME ON AN '        S21016 30610021
         DC    C'IDENTIFY CONTROL'                               S21016 30680021
P106     DC    C'STATEMENT IS INCORRECT OR THE STATEMENT IS'     S21016 30750021
P107     DC    C'MISPLACED -- IDENTIFY DATA IGNORED'             S21016 30820021
P108     DC    C'694 ERROR - TABLE OVERFLOW -- SIZE VALUE'       S21016 30890021
P109     DC    C'SPECIFIED NOT LARGE ENOUGH FOR CSECT IDR'       S21016 30960021
P110     DC    C'INPUT -- LINKAGE EDITOR PROCESSING TERMINATED'  S21016 31030021
P111     DC    C'704 UNRECOVERABLE ERROR DETECTED IN CSECT IDR'  S21016 31100021
P112     DC    C'INPUT -- LINKAGE EDITOR PROCESSING TERMINATED'  S21016 31170021
P113     DC    C'642 SYMBOL PRINTED APPEARED ON CONTROL STATEMENT '     31240021
         DC    C'BUT WAS NOT MATCHED'                           S01904  31310021
P114     DC    C'652 CONFLICT IN ORDER SPECIFIED FOR SYMBOL PRINTED'    31380021
P115     DC    C'714'                                            S21016 31400000
P116     DC    C'STOW WORKSPACE UNAVAILABLE'                     S21016 31420000
P117     DC    C'740 THE INDICATED ACTION WAS TAKEN FOR AN '     Y01031 31430000
         DC    C'EXPAND REQUEST'                                 Y01031 31440000
P118     DC    C'731 WARNING - ALIAS MATCHES MEMBER NAME - ALIAS IGNOREX31442000
               D'                                                A52450 31444000
P119     DC    C'REFERENCES NULL UNNAMED'                       XA04649 31446000
BTPHDR   DC    C'DIAGNOSTIC MESSAGE DIRECTORY'                          31450021
*                                                                       31520021
*        LISTS COMPRISING GROUPS OF 3-BYTE ENTRIES AS FOLLOWS --        31590021
*                                                                       31660021
*              1 BYTE = LENGTH-1 OF PHRASE                              31730021
*              2 BYTES = INCREMENT TO PHRASE,                           31800021
*                                                                       31870021
*        EACH GROUP FOLLOWED BY AN END FLAG.                            31940021
*                                                                       32010021
*    IEW0*012*ERROR - INPUT CONTAINS ILLEGAL TWO-BYTE RELOCATABLE       32080021
*             ADDRESS CONSTANT, CONSTANT HAS NOT BEEN RELOCATED.        32150021
B001     DC    AL1(02)                                                  32220021
LIST     EQU   B001                                                     32290021
         DC    AL2(P003+00-P001)                                        32360021
         DC    AL1(100)                                                 32430021
         DC    AL2(P005+00-P001)                                        32500021
         DC    X'FF'                                                    32570021
*    IEW0*022*ERROR - INPUT CONTAINS ILLEGAL*V-TYPE*ADDRESS CONSTANT,   32640021
*             CONSTANT HAS NOT BEEN RELOCATED.                          32710021
B002     DC    AL1(02)                                                  32780021
         DC    AL2(P001+21-P001)                                        32850021
         DC    AL1(29)                                                  32920021
         DC    AL2(P005+00-P001)                                        32990021
         DC    AL1(05)                                                  33060021
         DC    AL2(P010+00-P001)                                        33130021
         DC    AL1(48)                                                  33200021
         DC    AL2(P008+00-P001)                                        33270021
         DC    X'FF'                                                    33340021
*    IEW0*033*ERROR -*ILLEGAL*ENTRY POINT*ON END CARD,*ENTRY POINT*     33410021
*             IGNORED.                                                  33480021
B003     DC    AL1(02)                                                  33550021
         DC    AL2(P003+06-P001)                                        33620021
         DC    AL1(06)                                                  33690021
         DC    AL2(P005+00-P001)                                        33760021
         DC    AL1(06)                                                  33830021
         DC    AL2(P013+00-P001)                                        33900021
         DC    AL1(10)                                                  33970021
         DC    AL2(P014+03-P001)                                        34040021
         DC    AL1(03)                                                  34110021
         DC    AL2(P033+00-P001)                                        34180021
         DC    AL1(08)                                                  34250021
         DC    AL2(P080+03-P001)                                        34320021
         DC    AL1(22)                                                  34390021
         DC    AL2(P014+00-P001)                                        34460021
         DC    X'FF'                                                    34530021
B004     DC    AL1(02)                                                  34600021
         DC    AL2(P001+38-P001)                                        34670021
         DC    AL1(06)                                                  34740021
         DC    AL2(P005+00-P001)                                        34810021
         DC    AL1(13)                                                  34880021
         DC    AL2(P006+00-P001)                                        34950021
         DC    AL1(06)                                                  35020021
         DC    AL2(P017+18-P001)                                        35090021
         DC    AL1(15)                                                  35160021
         DC    AL2(P050+09-P001)                                        35230021
         DC    AL1(01)                                                  35300021
         DC    AL2(P017+12-P001)                                        35370021
         DC    X'FF'                                                    35440021
*    IEW0*053*ERROR -*ENTRY STATEMENT SYMBOL PRINTED IS ILLEGAL (NOT    35510021
*             AN EXTERNAL NAME), NO ENTRY POINT ASSIGNED.               35580021
B005     DC    AL1(02)                                                  35650021
         DC    AL2(P002+11-P001)                                        35720021
         DC    AL1(06)                                                  35790021
         DC    AL2(P005+00-P001)                                        35860021
         DC    AL1(88)                                                  35930021
         DC    AL2(P011+00-P001)                                        36000021
         DC    X'FF'                                                    36070021
*    IEW0*063*ERROR -*END CARD*SYMBOL PRINTED IS ILLEGAL (NOT AN        36140021
*             EXTERNAL NAME), NO ENTRY POINT ASSIGNED.                  36210021
B006     DC    AL1(02)                                                  36280021
         DC    AL2(P002+24-P001)                                        36350021
         DC    AL1(06)                                                  36420021
         DC    AL2(P005+00-P001)                                        36490021
         DC    AL1(07)                                                  36560021
         DC    AL2(P080+03-P001)                                        36630021
         DC    AL1(72)                                                  36700021
         DC    AL2(P012+00-P001)                                        36770021
         DC    X'FF'                                                    36840021
*    IEW0*073*ERROR -*ENTRY STATEMENT SYMBOL PRINTED IS*NOT IN ROOT     36910021
*             SEGMENT OF OVERLAY STRUCTURE,*NO ENTRY POINT ASSIGNED.    36980021
B007     DC    AL1(02)                                                  37050021
         DC    AL2(P003+12-P001)                                        37120021
         DC    AL1(06)                                                  37190021
         DC    AL2(P005+00-P001)                                        37260021
         DC    AL1(32)                                                  37330021
         DC    AL2(P011+00-P001)                                        37400021
         DC    AL1(40)                                                  37470021
         DC    AL2(P018+00-P001)                                        37540021
         DC    AL1(22)                                                  37610021
         DC    AL2(P014+00-P001)                                        37680021
         DC    X'FF'                                                    37750021
*    IEW0*083*ERROR -*END CARD*SYMBOL PRINTED*IS NOT IN ROOT SEGMENT    37820021
*             OF OVERLAY STRUCTURE,*NO ENTRY POINT ASSIGNED.            37890021
B008     DC    AL1(02)                                                  37960021
         DC    AL2(P003+17-P001)                                        38030021
         DC    AL1(06)                                                  38100021
         DC    AL2(P005+00-P001)                                        38170021
         DC    AL1(07)                                                  38240021
         DC    AL2(P080+03-P001)                                        38310021
         DC    AL1(16)                                                  38380021
         DC    AL2(P012+00-P001)                                        38450021
         DC    AL1(40)                                                  38520021
         DC    AL2(P018+00-P001)                                        38590021
         DC    AL1(22)                                                  38660021
         DC    AL2(P014+00-P001)                                        38730021
         DC    X'FF'                                                    38800021
*    IEW0*093*ERROR -*END CARD*ENTRY POINT*ADDRESS*PRINTED IS*NOT IN    38870021
*             ROOT SEGMENT OF OVERLAY STRUCTURE,*NO ENTRY POINT*   *    38940021
*             ASSIGNED                                                  39010021
B009     DC    AL1(02)                                                  39080021
         DC    AL2(P002+29-P001)                                        39150021
         DC    AL1(06)                                                  39220021
         DC    AL2(P005+00-P001)                                        39290021
         DC    AL1(07)                                                  39360021
         DC    AL2(P080+03-P001)                                        39430021
         DC    AL1(10)                                                  39500021
         DC    AL2(P014+03-P001)                                        39570021
         DC    AL1(06)                                                  39640021
         DC    AL2(P008+00-P001)                                        39710021
         DC    AL1(09)                                                  39780021
         DC    AL2(P012+07-P001)                                        39850021
         DC    AL1(40)                                                  39920021
         DC    AL2(P018+00-P001)                                        39990021
         DC    AL1(22)                                                  40060021
         DC    AL2(P014+00-P001)                                        40130021
         DC    X'FF'                                                    40200021
*    IEW0*102*ERROR -*ILLEGAL*ENTRY POINT*ID ON END CARD,*ENTRY POINT*  40270021
*             IGNORED.                                                  40340021
B010     DC    AL1(02)                                                  40410021
         DC    AL2(P003+27-P001)                                        40480021
         DC    AL1(06)                                                  40550021
         DC    AL2(P005+00-P001)                                        40620021
         DC    AL1(06)                                                  40690021
         DC    AL2(P013+00-P001)                                        40760021
         DC    AL1(10)                                                  40830021
         DC    AL2(P014+03-P001)                                        40900021
         DC    AL1(11)                                                  40970021
         DC    AL2(P080+00-P001)                                        41040021
         DC    AL1(10)                                                  41110021
         DC    AL2(P014+03-P001)                                        41180021
         DC    AL1(06)                                                  41250021
         DC    AL2(P004+05-P001)                                        41320021
         DC    X'FF'                                                    41390021
*    IEW0*113*ERROR -*OUTPUT MODULE*CONTAINS NO CONTROL SECTIONS*IN     41460021
*             ROOT SEGMENT OF OVERLAY STRUCTURE,*NO ENTRY POINT*    *   41530021
*             ASSIGNED.                                                 41600021
B011     DC    AL1(02)                                                  41670021
         DC    AL2(P001+24-P001)                                        41740021
         DC    AL1(06)                                                  41810021
         DC    AL2(P005+00-P001)                                        41880021
         DC    AL1(12)                                                  41950021
         DC    AL2(P020+00-P001)                                        42020021
         DC    AL1(27)                                                  42090021
         DC    AL2(P024+00-P001)                                        42160021
         DC    AL1(36)                                                  42230021
         DC    AL2(P018+04-P001)                                        42300021
         DC    AL1(22)                                                  42370021
         DC    AL2(P014+00-P001)                                        42440021
         DC    X'FF'                                                    42510021
*    IEW0*123*ERROR -*NO ESD ENTRIES, EXECUTION IMPOSSIBLE.             42580021
B012     DC    AL1(02)                                                  42650021
         DC    AL2(P003+01-P001)                                        42720021
         DC    AL1(06)                                                  42790021
         DC    AL2(P005+00-P001)                                        42860021
         DC    AL1(35)                                                  42930021
         DC    AL2(P026+00-P001)                                        43000021
         DC    X'FF'                                                    43070021
*    IEW0*132*ERROR -*SYMBOL PRINTED IS*AN UNRESOLVED EXTERNAL          43140021
*             REFERENCE.                                                43210021
B013     DC    AL1(02)                                                  43280021
         DC    AL2(P001+25-P001)                                        43350021
         DC    AL1(06)                                                  43420021
         DC    AL2(P005+00-P001)                                        43490021
         DC    AL1(13)                                                  43560021
         DC    AL2(P012+00-P001)                                        43630021
         DC    AL1(34)                                                  43700021
         DC    AL2(P028+00-P001)                                        43770021
         DC    X'FF'                                                    43840021
*    IEW0*143*ERROR -*NO TEXT*FOUND.                                    43910021
B014     DC    AL1(02)                                                  43980021
         DC    AL2(P001+16-P001)                                        44050021
         DC    AL1(06)                                                  44120021
         DC    AL2(P005+00-P001)                                        44190021
         DC    AL1(06)                                                  44260021
         DC    AL2(P016+04-P001)                                        44330021
         DC    X'FF'                                                    44400021
*    IEW0*152 ERROR -*ILLEGAL*OVERLAY STRUCTURE,*NO CALLS OR BRANCHES   44470021
*             MADE FROM*ROOT SEGMENT.                                   44540021
B015     DC    AL1(10)                                                  44610021
         DC    AL2(P004+12-P001)                                        44680021
         DC    AL1(06)                                                  44750021
         DC    AL2(P007+00-P001)                                        44820021
         DC    AL1(17)                                                  44890021
         DC    AL2(P019+00-P001)                                        44960021
         DC    AL1(29)                                                  45030021
         DC    AL2(P035+00-P001)                                        45100021
         DC    AL1(11)                                                  45170021
         DC    AL2(P018+07-P001)                                        45240021
         DC    X'FF'                                                    45310021
*    IEW0*161*WARNING -*EXCLUSIVE CALL FROM SEGMENT NUMBER*PRINTED*TO*  45380021
*             SYMBOL PRINTED.                                           45450021
B016     DC    AL1(02)                                                  45520021
         DC    AL2(P001+00-P001)                                        45590021
         DC    AL1(08)                                                  45660021
         DC    AL2(P042+00-P001)                                        45730021
         DC    AL1(33)                                                  45800021
         DC    AL2(P032+00-P001)                                        45870021
         DC    AL1(06)                                                  45940021
         DC    AL2(P012+07-P001)                                        46010021
         DC    AL1(01)                                                  46080021
         DC    AL2(P048+18-P001)                                        46150021
         DC    AL1(13)                                                  46220021
         DC    AL2(P012+00-P001)                                        46290021
         DC    AL1(01)                                                  46360021
         DC    AL2(P040+00-P001)                                        46430021
         DC    AL1(03)                                                  46500021
         DC    AL2(P034+00-P001)                                        46570021
         DC    AL1(12)                                                  46640021
         DC    AL2(P022+18-P001)                                        46710021
         DC    X'FF'                                                    46780021
*    IEW0*172*ERROR -*EXCLUSIVE CALL FROM SEGMENT NUMBER*PRINTED*TO*    46850021
*             SYMBOL PRINTED*--*XCAL*OPTION*NOT*SPECIFIED.              46920021
B017     DC    AL1(02)                                                  46990021
         DC    AL2(P002+06-P001)                                        47060021
         DC    AL1(06)                                                  47130021
         DC    AL2(P005+00-P001)                                        47200021
         DC    AL1(33)                                                  47270021
         DC    AL2(P032+00-P001)                                        47340021
         DC    AL1(06)                                                  47410021
         DC    AL2(P012+07-P001)                                        47480021
         DC    AL1(01)                                                  47550021
         DC    AL2(P048+18-P001)                                        47620021
         DC    AL1(13)                                                  47690021
         DC    AL2(P012+00-P001)                                        47760021
         DC    X'FF'                                                    47830021
*    IEW0*182*ERROR -*INVALID EXCLUSIVE CALL FROM SEGMENT NUMBER*       47900021
*             PRINTED*TO*SYMBOL PRINTED.                                47970021
B018     DC    AL1(02)                                                  48040021
         DC    AL2(P002+00-P001)                                        48110021
         DC    AL1(06)                                                  48180021
         DC    AL2(P005+00-P001)                                        48250021
         DC    AL1(41)                                                  48320021
         DC    AL2(P031+00-P001)                                        48390021
         DC    AL1(06)                                                  48460021
         DC    AL2(P012+07-P001)                                        48530021
         DC    AL1(01)                                                  48600021
         DC    AL2(P048+18-P001)                                        48670021
         DC    AL1(13)                                                  48740021
         DC    AL2(P012+00-P001)                                        48810021
         DC    X'FF'                                                    48880021
*    IEW0*191*WARNING -MAIN STORAGE REQUIREMENTS FOR*OUTPUT*LOAD    XXX 48950021
*              MODULE*HAVE*EXCEEDED*512K BYTES                          49020021
B019     DC    AL1(02)                                                  49090021
         DC    AL2(P056+00-P001)                                        49160021
         DC    AL1(08)                                                  49230021
         DC    AL2(P042+00-P001)                                        49300021
         DC    AL1(28)                                                  49370021
         DC    AL2(P036+00-P001)                                        49440021
         DC    AL1(05)                                                  49510021
         DC    AL2(P020+00-P001)                                        49580021
         DC    AL1(10)                                                  49650021
         DC    AL2(P049+06-P001)                                        49720021
         DC    AL1(03)                                                  49790021
         DC    AL2(P088+10-P001)                                        49860021
         DC    AL1(07)                                                  49930021
         DC    AL2(P060+00-P001)                                        50000021
         DC    AL1(09)                                                  50070021
         DC    AL2(P088+00-P001)                                        50140021
         DC    X'FF'                                                    50210021
*    IEW0*202*WARNING -*OVERLAY STRUCTURE*CONTAINS ONLY ONE*SEGMENT*    50280021
*             -- OVERLAY OPTION CANCELED.                               50350021
B020     DC    AL1(02)                                                  50420021
         DC    AL2(P081+00-P001)                                        50490021
         DC    AL1(08)                                                  50560021
         DC    AL2(P042+00-P001)                                        50630021
         DC    AL1(16)                                                  50700021
         DC    AL2(P019+00-P001)                                        50770021
         DC    AL1(16)                                                  50840021
         DC    AL2(P039+00-P001)                                        50910021
         DC    AL1(06)                                                  50980021
         DC    AL2(P018+12-P001)                                        51050021
         DC    AL1(25)                                                  51120021
         DC    AL2(P040+00-P001)                                        51190021
         DC    X'FF'                                                    51260021
*    IEW0*212*ERROR - EXPECTED CONTINUATION CARD*NOT*FOUND*--*CARD      51330021
*             IGNORED.                                                  51400021
B021     DC    AL1(02)                                                  51470021
         DC    AL2(P001+06-P001)                                        51540021
         DC    AL1(06)                                                  51610021
         DC    AL2(P005+00-P001)                                        51680021
         DC    AL1(25)                                                  51750021
         DC    AL2(P041+00-P001)                                        51820021
         DC    AL1(02)                                                  51890021
         DC    AL2(P018+00-P001)                                        51960021
         DC    AL1(04)                                                  52030021
         DC    AL2(P085+05-P001)                                        52100021
         DC    X'FF'                                                    52170021
*    IEW0*222*ERROR - CARD PRINTED NOT RECOGNIZED AS INPUT FROM OBJECT  52240021
*             MODULE.                                                   52310021
B022     DC    AL1(02)                                                  52380021
         DC    AL2(P021+01-P001)                                        52450021
         DC    AL1(06)                                                  52520021
         DC    AL2(P005+00-P001)                                        52590021
         DC    AL1(11)                                                  52660021
         DC    AL2(P043+00-P001)                                        52730021
         DC    AL1(07)                                                  52800021
         DC    AL2(P039+00-P001)                                        52870021
         DC    AL1(06)                                                  52940021
         DC    AL2(P031+00-P001)                                        53010021
         DC    AL1(23)                                                  53080021
         DC    AL2(P044+00-P001)                                        53150021
         DC    X'FF'                                                    53220021
*    IEW0*233*ERROR -*INPUT FROM*LOAD MODULE*IS INVALID.        OY00131 53290003
B023     DC    AL1(02)                                                  53360021
         DC    AL2(P233+00-P001)                                OY00131 53430003
         DC    AL1(06)                                                  53500021
         DC    AL2(P005+00-P001)                                        53570021
         DC    AL1(09)                                                  53640021
         DC    AL2(P044+00-P001)                                        53710021
         DC    AL1(10)                                                  53780021
         DC    AL2(P049+06-P001)                                        53850021
         DC    AL1(09)                                                  53920021
         DC    AL2(P030+04-P001)                                        53990021
         DC    X'FF'                                                    54060021
*    IEW0*241*WARNING -*EXTERNAL SYMBOL*PRINTED*IS DOUBLY DEFINED --    54130021
*             ESD TYPE DEFINITIONS CONFLICT.                            54200021
B024     DC    AL1(02)                                                  54270021
         DC    AL2(P001+14-P001)                                        54340021
         DC    AL1(08)                                                  54410021
         DC    AL2(P042+00-P001)                                        54480021
         DC    AL1(14)                                                  54550021
         DC    AL2(P050+09-P001)                                        54620021
         DC    AL1(06)                                                  54690021
         DC    AL2(P012+07-P001)                                        54760021
         DC    AL1(49)                                                  54830021
         DC    AL2(P046+00-P001)                                        54900021
         DC    X'FF'                                                    54970021
*    IEW0*254*ERROR -*TABLE OVERFLOW --*TOO MANY EXTERNAL SYMBOLS IN    55040021
*             ESD.                                                      55110021
B025     DC    AL1(02)                                                  55180021
         DC    AL2(P001+29-P001)                                        55250021
         DC    AL1(06)                                                  55320021
         DC    AL2(P005+00-P001)                                        55390021
         DC    AL1(16)                                                  55460021
         DC    AL2(P048+00-P001)                                        55530021
         DC    AL1(31)                                                  55600021
         DC    AL2(P050+00-P001)                                        55670021
         DC    X'FF'                                                    55740021
*    IEW0*264*ERROR -*TABLE OVERFLOW --*INPUT LOAD MODULE CONTAINS TOO  55810021
*             MANY EXTERNAL SYMBOLS IN ESD.                             55880021
B026     DC    AL1(02)                                                  55950021
         DC    AL2(P001+08-P001)                                        56020021
         DC    AL1(06)                                                  56090021
         DC    AL2(P005+00-P001)                                        56160021
         DC    AL1(16)                                                  56230021
         DC    AL2(P048+00-P001)                                        56300021
         DC    AL1(04)                                                  56370021
         DC    AL2(P049+00-P001)                                        56440021
         DC    AL1(52)                                                  56510021
         DC    AL2(P049+06-P001)                                        56580021
         DC    X'FF'                                                    56650021
*    IEW0*274*ERROR -*LOAD MODULE*FROM LIBRARY SPECIFIED*UNACCEPTABLE*  56720021
*        TO LEVEL F.                                                    56790021
B027     DC    AL1(02)                                                  56860021
         DC    AL2(P021+03-P001)                                        56930021
         DC    AL1(06)                                                  57000021
         DC    AL2(P005+00-P001)                                        57070021
         DC    AL1(10)                                                  57140021
         DC    AL2(P049+06-P001)                                        57210021
         DC    AL1(21)                                                  57280021
         DC    AL2(P035+26-P001)                                        57350021
         DC    AL1(11)                                                  57420021
         DC    AL2(P092+04-P001)                                        57490021
         DC    AL1(09)                                                  57560021
         DC    AL2(P051+00-P001)                                        57630021
         DC    X'FF'                                                    57700021
*    IEW0*284*ERROR -*DATA SET NAME PRINTED CANNOT BE OPENED.           57770021
B028     DC    AL1(02)                                                  57840021
         DC    AL2(P002+02-P001)                                        57910021
         DC    AL1(06)                                                  57980021
         DC    AL2(P005+00-P001)                                        58050021
         DC    AL1(30)                                                  58120021
         DC    AL2(P054+03-P001)                                        58190021
         DC    X'FF'                                                    58260021
*    IEW0*294*ERROR -*DATA SET NAME PRINTED*HAD SYNCHRONOUS ERROR.      58330021
B029     DC    AL1(02)                                                  58400021
         DC    AL2(P002+08-P001)                                        58470021
         DC    AL1(06)                                                  58540021
         DC    AL2(P005+00-P001)                                        58610021
         DC    AL1(13)                                                  58680021
         DC    AL2(P054+03-P001)                                        58750021
         DC    AL1(20)                                                  58820021
         DC    AL2(P057+00-P001)                                        58890021
         DC    X'FF'                                                    58960021
*    IEW0*302*ERROR -*INVALID*STATEMENT*--*CARD IGNORED.                59030021
B030     DC    AL1(02)                                                  59100021
         DC    AL2(P001+20-P001)                                        59170021
         DC    AL1(06)                                                  59240021
         DC    AL2(P005+00-P001)                                        59310021
         DC    AL1(06)                                                  59380021
         DC    AL2(P031+00-P001)                                        59450021
         DC    AL1(08)                                                  59520021
         DC    AL2(P011+06-P001)                                        59590021
         DC    AL1(01)                                                  59660021
         DC    AL2(P040+00-P001)                                        59730021
         DC    AL1(14)                                                  59800021
         DC    AL2(P037+00-P001)                                        59870021
         DC    X'FF'                                                    59940021
*    IEW0*314*ERROR -*MAXIMUM NUMBER OF REGIONS (4) EXCEEDED.           60010021
B031     DC    AL1(02)                                                  60080021
         DC    AL2(P003+03-P001)                                        60150021
         DC    AL1(06)                                                  60220021
         DC    AL2(P005+00-P001)                                        60290021
         DC    AL1(37)                                                  60360021
         DC    AL2(P058+00-P001)                                        60430021
         DC    X'FF'                                                    60500021
*    IEW0*324*ERROR -*MAXIMUM NUMBER OF*SEGMENTS*EXCEEDED.              60570021
B032     DC    AL1(02)                                                  60640021
         DC    AL2(P001+13-P001)                                        60710021
         DC    AL1(06)                                                  60780021
         DC    AL2(P005+00-P001)                                        60850021
         DC    AL1(16)                                                  60920021
         DC    AL2(P058+00-P001)                                        60990021
         DC    AL1(07)                                                  61060021
         DC    AL2(P061+00-P001)                                        61130021
         DC    AL1(07)                                                  61200021
         DC    AL2(P060+00-P001)                                        61270021
         DC    X'FF'                                                    61340021
*    IEW0*332*ERROR-*MAXIMUM NUMBER OF *ALIASES(16)*EXCEEDED,EXCESS*    61410021
*             IGNORED.                                                  61480021
B033     DC    AL1(02)                                                  61550021
         DC    AL2(P003+07-P001)                                        61620021
         DC    AL1(06)                                                  61690021
         DC    AL2(P005+00-P001)                                        61760021
         DC    AL1(16)                                                  61830021
         DC    AL2(P058+00-P001)                                        61900021
         DC    AL1(10)                                                  61970021
         DC    AL2(P062+00-P001)                                        62040021
         DC    AL1(08)                                                  62110021
         DC    AL2(P060+00-P001)                                        62180021
         DC    AL1(05)                                                  62250021
         DC    AL2(P087+00-P001)                                        62320021
         DC    AL1(06)                                                  62390021
         DC    AL2(P004+05-P001)                                        62460021
         DC    X'FF'                                                    62530021
*    IEW0*342*ERROR -*LIBRARY SPECIFIED DOES NOT CONTAIN*MODULE.        62600021
B034     DC    AL1(02)                                                  62670021
         DC    AL2(P001+04-P001)                                        62740021
         DC    AL1(06)                                                  62810021
         DC    AL2(P005+00-P001)                                        62880021
         DC    AL1(33)                                                  62950021
         DC    AL2(P063+00-P001)                                        63020021
         DC    AL1(05)                                                  63090021
         DC    AL2(P044+18-P001)                                        63160021
         DC    X'FF'                                                    63230021
*    IEW0*354*ERROR -*TABLE OVERFLOW -- TOO MANY*CALLS BETWEEN*CONTROL  63300021
*             SECTIONS.                                                 63370021
B035     DC    AL1(02)                                                  63440021
         DC    AL2(P002+13-P001)                                        63510021
         DC    AL1(06)                                                  63580021
         DC    AL2(P005+00-P001)                                        63650021
         DC    AL1(25)                                                  63720021
         DC    AL2(P048+00-P001)                                        63790021
         DC    AL1(12)                                                  63860021
         DC    AL2(P052+00-P001)                                        63930021
         DC    AL1(15)                                                  64000021
         DC    AL2(P025+00-P001)                                        64070021
         DC    X'FF'                                                    64140021
*    IEW0*364*ERROR -*TABLE OVERFLOW --*INPUT TEXT EXCEEDED MAXIMUM     64210021
*             OR TOO MANY CHANGES OF ORIGIN*IN INPUT.                   64280021
B036     DC    AL1(02)                                                  64350021
         DC    AL2(P002+26-P001)                                        64420021
         DC    AL1(06)                                                  64490021
         DC    AL2(P005+00-P001)                                        64560021
         DC    AL1(16)                                                  64630021
         DC    AL2(P048+00-P001)                                        64700021
         DC    AL1(56)                                                  64770021
         DC    AL2(P067+00-P001)                                        64840021
         DC    AL1(07)                                                  64910021
         DC    AL2(P079+10-P001)                                        64980021
         DC    X'FF'                                                    65050021
*    IEW0*374*ERROR -*TABLE OVERFLOW --*INPUT*CONTAINS*TOO MANY*        65120021
*             RELOCATABLE ADDRESS*CONSTANTS OR*TOO MANY*CONTROL         65190021
*             SECTIONS* CONTAINING SUCH CONSTANTS.                      65260021
B037     DC    AL1(02)                                                  65330021
         DC    AL2(P003+14-P001)                                        65400021
         DC    AL1(06)                                                  65470021
         DC    AL2(P005+00-P001)                                        65540021
         DC    AL1(16)                                                  65610021
         DC    AL2(P048+00-P001)                                        65680021
         DC    AL1(04)                                                  65750021
         DC    AL2(P049+00-P001)                                        65820021
         DC    AL1(07)                                                  65890021
         DC    AL2(P024+00-P001)                                        65960021
         DC    AL1(07)                                                  66030021
         DC    AL2(P050+00-P001)                                        66100021
         DC    AL1(18)                                                  66170021
         DC    AL2(P007+17-P001)                                        66240021
         DC    AL1(11)                                                  66310021
         DC    AL2(P083+00-P001)                                        66380021
         DC    AL1(07)                                                  66450021
         DC    AL2(P050+00-P001)                                        66520021
         DC    AL1(15)                                                  66590021
         DC    AL2(P025+00-P001)                                        66660021
         DC    AL1(25)                                                  66730021
         DC    AL2(P053+00-P001)                                        66800021
         DC    X'FF'                                                    66870021
*    IEW0*383*ERROR -*TEXT RECORD ID IS ILLEGAL,*CARD IGNORED.          66940021
B038     DC    AL1(02)                                                  67010021
         DC    AL2(P001+32-P001)                                        67080021
         DC    AL1(06)                                                  67150021
         DC    AL2(P005+00-P001)                                        67220021
         DC    AL1(25)                                                  67290021
         DC    AL2(P017+00-P001)                                        67360021
         DC    AL1(11)                                                  67430021
         DC    AL2(P004+00-P001)                                        67500021
         DC    X'FF'                                                    67570021
*    IEW0*394*ERROR -*MEMBER NOT STORED IN LIBRARY --*PERMANENT DISK    67640021
*             ERROR.                                                    67710021
B039     DC    AL1(02)                                                  67780021
         DC    AL2(P003+20-P001)                                        67850021
         DC    AL1(06)                                                  67920021
         DC    AL2(P005+00-P001)                                        67990021
         DC    AL1(30)                                                  68060021
         DC    AL2(P070+00-P001)                                        68130021
         DC    AL1(21)                                                  68200021
         DC    AL2(P084+00-P001)                                        68270021
         DC    X'FF'                                                    68340021
*    IEW0*404*ERROR -*MEMBER NOT STORED IN LIBRARY -- NO SPACE LEFT IN  68410021
*             DIRECTORY.                                                68480021
B040     DC    AL1(02)                                                  68550021
         DC    AL2(P001+10-P001)                                        68620021
         DC    AL1(06)                                                  68690021
         DC    AL2(P005+00-P001)                                        68760021
         DC    AL1(57)                                                  68830021
         DC    AL2(P070+00-P001)                                        68900021
         DC    X'FF'                                                    68970021
*    IEW0*414*ERROR -*ALIAS*NOT STORED IN LIBRARY -- NO SPACE LEFT IN   69040021
*             DIRECTORY.                                                69110021
B041     DC    AL1(02)                                                  69180021
         DC    AL2(P001+35-P001)                                        69250021
         DC    AL1(06)                                                  69320021
         DC    AL2(P005+00-P001)                                        69390021
         DC    AL1(04)                                                  69460021
         DC    AL2(P062+00-P001)                                        69530021
         DC    AL1(50)                                                  69600021
         DC    AL2(P070+07-P001)                                        69670021
         DC    X'FF'                                                    69740021
*    IEW0*421*WARNING -*MEMBER NOT STORED IN LIBRARY --*IDENTICAL       69810021
*             NAME*IN DIRECTORY,*WILL TRY TO STORE UNDER 'TEMPNAME'.    69880021
B042     DC    AL1(02)                                                  69950021
         DC    AL2(P001+05-P001)                                        70020021
         DC    AL1(08)                                                  70090021
         DC    AL2(P042+00-P001)                                        70160021
         DC    AL1(30)                                                  70230021
         DC    AL2(P070+00-P001)                                        70300021
         DC    AL1(13)                                                  70370021
         DC    AL2(P072+00-P001)                                        70440021
         DC    AL1(12)                                                  70510021
         DC    AL2(P071+14-P001)                                        70580021
         DC    AL1(33)                                                  70650021
         DC    AL2(P073+00-P001)                                        70720021
         DC    X'FF'                                                    70790021
*    IEW0*432*ERROR -*LIBRARY NAME PRINTED CANNOT BE OPENED, DD CARD    70860021
*             MAY BE MISSING                                            70930021
B043     DC    AL1(02)                                                  71000021
         DC    AL2(P001+12-P001)                                        71070021
         DC    AL1(06)                                                  71140021
         DC    AL2(P005+00-P001)                                        71210021
         DC    AL1(06)                                                  71280021
         DC    AL2(P063+00-P001)                                        71350021
         DC    AL1(29)                                                  71420021
         DC    AL2(P054+05-P001)                                        71490021
         DC    AL1(21)                                                  71560021
         DC    AL2(P096+00-P001)                                        71630021
         DC    X'FF'                                                    71700021
*    IEW0*444*ERROR -*TABLE OVERFLOW -- TOO MANY*DOWNWARD*CALLS.        71770021
B044     DC    AL1(02)                                                  71840021
         DC    AL2(P002+15-P001)                                        71910021
         DC    AL1(06)                                                  71980021
         DC    AL2(P005+00-P001)                                        72050021
         DC    AL1(25)                                                  72120021
         DC    AL2(P048+00-P001)                                        72190021
         DC    AL1(07)                                                  72260021
         DC    AL2(P076+00-P001)                                        72330021
         DC    AL1(04)                                                  72400021
         DC    AL2(P052+00-P001)                                        72470021
         DC    X'FF'                                                    72540021
*    IEW0*454*ERROR -*TABLE OVERFLOW --*SEGMENT CONTAINS*TOO MANY*      72610021
*             DOWNWARD CALLS.                                           72680021
B045     DC    AL1(02)                                                  72750021
         DC    AL2(P002+17-P001)                                        72820021
         DC    AL1(06)                                                  72890021
         DC    AL2(P005+00-P001)                                        72960021
         DC    AL1(16)                                                  73030021
         DC    AL2(P048+00-P001)                                        73100021
         DC    AL1(06)                                                  73170021
         DC    AL2(P033+05-P001)                                        73240021
         DC    AL1(07)                                                  73310021
         DC    AL2(P006+06-P001)                                        73380021
         DC    AL1(07)                                                  73450021
         DC    AL2(P048+18-P001)                                        73520021
         DC    AL1(07)                                                  73590021
         DC    AL2(P076+00-P001)                                        73660021
         DC    AL1(04)                                                  73730021
         DC    AL2(P052+00-P001)                                        73800021
         DC    X'FF'                                                    73870021
*    IEW0*461*WARNING -*SYMBOL PRINTED*IS AN UNRESOLVED EXTERNAL        73940021
*             REFERENCE;*NCAL*WAS*SPECIFIED,*OR THE REFERENCE           74010021
*             WAS MARKED FOR RESTRICTED NO-CALL OR NEVERCALL.           74080021
B046     DC    AL1(02)                                                  74150021
         DC    AL2(P002+04-P001)                                        74220021
         DC    AL1(08)                                                  74290021
         DC    AL2(P042+00-P001)                                        74360021
         DC    AL1(13)                                                  74430021
         DC    AL2(P012+00-P001)                                        74500021
         DC    AL1(35)                                                  74570021
         DC    AL2(P028+00-P001)                                        74640021
         DC    AL1(03)                                                  74710021
         DC    AL2(P030+00-P001)                                        74780021
         DC    AL1(2)                                                   74850021
         DC    AL2(P022+18-P001)                                        74920021
         DC    AL1(9)                                                   74990021
         DC    AL2(P102+00-P001)                                        75060021
         DC    AL1(62)                                                  75130021
         DC    AL2(P100+00-P001)                                        75200021
         DC    X'FF'                                                    75270021
*    IEW0*473*ERROR -*INVALID*ALIAS*ENTRY POINT*IN*OVERLAY STRUCTURE.   75340021
B047     DC    AL1(02)                                                  75410021
         DC    AL2(P002+21-P001)                                        75480021
         DC    AL1(06)                                                  75550021
         DC    AL2(P005+00-P001)                                        75620021
         DC    AL1(06)                                                  75690021
         DC    AL2(P031+00-P001)                                        75760021
         DC    AL1(04)                                                  75830021
         DC    AL2(P062+00-P001)                                        75900021
         DC    AL1(10)                                                  75970021
         DC    AL2(P014+03-P001)                                        76040021
         DC    AL1(01)                                                  76110021
         DC    AL2(P018+04-P001)                                        76180021
         DC    AL1(16)                                                  76250021
         DC    AL2(P019+00-P001)                                        76320021
         DC    X'FF'                                                    76390021
*    IEW0*484*ERROR -*TABLE OVERFLOW -- TOO MANY*EXTERNAL SYMBOLS*      76460021
*              AFFECTED BY RELOCATION.                                  76530021
B048     DC    AL1(02)                                                  76600021
         DC    AL2(P002+19-P001)                                        76670021
         DC    AL1(06)                                                  76740021
         DC    AL2(P005+00-P001)                                        76810021
         DC    AL1(25)                                                  76880021
         DC    AL2(P048+00-P001)                                        76950021
         DC    AL1(15)                                                  77020021
         DC    AL2(P050+09-P001)                                        77090021
         DC    AL1(21)                                                  77160021
         DC    AL2(P065+00-P001)                                        77230021
         DC    X'FF'                                                    77300021
*    IEW0*504*ERROR -*ALIAS*NOT STORED IN LIBRARY --*PERMANENT DISK     77370021
*             ERROR.                                                    77440021
B050     DC    AL1(02)                                                  77510021
         DC    AL2(P003+23-P001)                                        77580021
         DC    AL1(06)                                                  77650021
         DC    AL2(P005+00-P001)                                        77720021
         DC    AL1(04)                                                  77790021
         DC    AL2(P062+00-P001)                                        77860021
         DC    AL1(23)                                                  77930021
         DC    AL2(P070+07-P001)                                        78000021
         DC    AL1(21)                                                  78070021
         DC    AL2(P084+00-P001)                                        78140021
         DC    X'FF'                                                    78210021
*    IEW0*492*ERROR -*NAME CARD FOUND IN LIBRARY,*CARD IGNORED.         78280021
B049     DC    AL1(02)                                                  78350021
         DC    AL2(P045+00-P001)                                        78420021
         DC    AL1(06)                                                  78490021
         DC    AL2(P005+00-P001)                                        78560021
         DC    AL1(03)                                                  78630021
         DC    AL2(P054+05-P001)                                        78700021
         DC    AL1(21)                                                  78770021
         DC    AL2(P085+00-P001)                                        78840021
         DC    AL1(11)                                                  78910021
         DC    AL2(P004+00-P001)                                        78980021
         DC    X'FF'                                                    79050021
*    IEW0*512*ERROR -*INCLUDE STATEMENT SYNTAX CONFLICTS WITH RECORD    79120021
*             FORMAT OF*SPECIFIED*DATA SET.                             79190021
B051     DC    AL1(02)                                                  79260021
         DC    AL2(P093+00-P001)                                        79330021
         DC    AL1(06)                                                  79400021
         DC    AL2(P005+00-P001)                                        79470021
         DC    AL1(55)                                                  79540021
         DC    AL2(P089+00-P001)                                        79610021
         DC    AL1(17)                                                  79680021
         DC    AL2(P023+00-P001)                                        79750021
         DC    AL1(16)                                                  79820021
         DC    AL2(P054+00-P001)                                        79890021
         DC    X'FF'                                                    79960021
*    IEW0*522*ERROR -*SPECIFIED*DATA SET*HAS UNACCEPTABLE*RECORD        80030021
*             FORMAT.                                                   80100021
B052     DC    AL1(02)                                                  80170021
         DC    AL2(P093+03-P001)                                        80240021
         DC    AL1(06)                                                  80310021
         DC    AL2(P005+00-P001)                                        80380021
         DC    AL1(17)                                                  80450021
         DC    AL2(P023+00-P001)                                        80520021
         DC    AL1(15)                                                  80590021
         DC    AL2(P092+00-P001)                                        80660021
         DC    AL1(12)                                                  80730021
         DC    AL2(P091+00-P001)                                        80800021
         DC    AL1(16)                                                  80870021
         DC    AL2(P054+00-P001)                                        80940021
         DC    X'FF'                                                    81010021
*    IEW0*532*ERROR -*BLOCKSIZE OF*LIBRARY*EXCEEDED MAXIMUM.            81080021
B053     DC    AL1(02)                                                  81150021
         DC    AL2(P094+00-P001)                                        81220021
         DC    AL1(06)                                                  81290021
         DC    AL2(P005+00-P001)                                        81360021
         DC    AL1(11)                                                  81430021
         DC    AL2(P095+00-P001)                                        81500021
         DC    AL1(06)                                                  81570021
         DC    AL2(P085+14-P001)                                        81640021
         DC    AL1(07)                                                  81710021
         DC    AL2(P023+10-P001)                                        81780021
         DC    AL1(15)                                                  81850021
         DC    AL2(P067+11-P001)                                        81920021
         DC    AL1(16)                                                  81990021
         DC    AL2(P054+00-P001)                                        82060021
         DC    X'FF'                                                    82130021
*    IEW0*543*ERROR -*MEMBER NOT STORED IN LIBRARY --*IDENTICAL NAME*   82200021
*             IN DIRECTORY.                                             82270021
B054     DC    AL1(02)                                                  82340021
         DC    AL2(P001+30-P001)                                        82410021
         DC    AL1(06)                                                  82480021
         DC    AL2(P005+00-P001)                                        82550021
         DC    AL1(13)                                                  82620021
         DC    AL2(P072+00-P001)                                        82690021
         DC    AL1(11)                                                  82760021
         DC    AL2(P071+14-P001)                                        82830021
         DC    X'FF'                                                    82900021
*    IEW0*552*ERROR -*COMMON*PRINTED*EXCEEDED*SIZE OF*CONTROL SECTION*  82970021
*                     WITH*IDENTICAL NAME.                              83040021
B055     DC    AL1(02)                                                  83110021
         DC    AL2(P001+41-P001)                                        83180021
         DC    AL1(06)                                                  83250021
         DC    AL2(P005+00-P001)                                        83320021
         DC    AL1(05)                                                  83390021
         DC    AL2(P069+00-P001)                                        83460021
         DC    AL1(06)                                                  83530021
         DC    AL2(P012+07-P001)                                        83600021
         DC    AL1(07)                                                  83670021
         DC    AL2(P060+00-P001)                                        83740021
         DC    AL1(06)                                                  83810021
         DC    AL2(P095+05-P001)                                        83880021
         DC    AL1(14)                                                  83950021
         DC    AL2(P025+00-P001)                                        84020021
         DC    AL1(03)                                                  84090021
         DC    AL2(P078+00-P001)                                        84160021
         DC    AL1(13)                                                  84230021
         DC    AL2(P072+00-P001)                                        84300021
         DC    X'FF'                                                    84370021
*                                                                       84440021
*IEW0*572*ERROR-*COMMON*PRINTED*AND SUBROUTINE HAVE*IDENTICAL NAME.     84510021
*                                                                       84580021
B057     DC    AL1(02)                                                  84650021
         DC    AL2(P001+50-P001)                                        84720021
         DC    AL1(06)                                                  84790021
         DC    AL2(P005+00-P001)                                        84860021
         DC    AL1(05)                                                  84930021
         DC    AL2(P069+00-P001)                                        85000021
         DC    AL1(06)                                                  85070021
         DC    AL2(P012+07-P001)                                        85140021
         DC    AL1(18)                                                  85210021
         DC    AL2(P077+00-P001)                                        85280021
         DC      AL1(13)                                                85350021
         DC    AL2(P072+00-P001)                                        85420021
         DC    X'FF'                                                    85490021
*    IEW0*594*ERROR -*INPUT DATA SET BLOCKSIZE IS INVALID               85560021
B059     DC    AL1(02)                                                  85630021
         DC    AL2(P082+00-P001)                                        85700021
         DC    AL1(06)                                                  85770021
         DC    AL2(P005+00-P001)                                        85840021
         DC    AL1(4)                                                   85910021
         DC    AL2(P044+00-P001)                                        85980021
         DC    AL1(07)                                                  86050021
         DC    AL2(P023+10-P001)                                        86120021
         DC    AL1(08)                                                  86190021
         DC    AL2(P095+00-P001)                                        86260021
         DC    AL1(09)                                                  86330021
         DC    AL2(P017+15-P001)                                        86400021
         DC    X'FF'                                                    86470021
*                                                                       86540021
*  IEW0* 602*ERROR -*INPUT FROM OBJECT MODULE* IS INVALID*- *           86610021
*     END CARD* MISSING*                                                86680021
B060     DC    AL1(02)                                                  86750021
         DC    AL2(P001+44-P001)                                        86820021
         DC    AL1(06)                                                  86890021
         DC    AL2(P005+00-P001)                                        86960021
         DC    AL1(23)                                                  87030021
         DC    AL2(P044+00-P001)                                        87100021
         DC    AL1(09)                                                  87170021
         DC    AL2(P017+15-P001)                                        87240021
         DC    AL1(01)                                                  87310021
         DC    AL2(P098+00-P001)                                        87380021
         DC    AL1(07)                                                  87450021
         DC    AL2(P080+03-P001)                                        87520021
         DC    AL1(06)                                                  87590021
         DC    AL2(P096+15-P001)                                        87660021
         DC    X'FF'                                                    87730021
*    IEW0*614 -*LENGTH*NOT*SPECIFIED*FOR*EXTERNAL*SYMBOL PRINTED        87800021
B061     DC    AL1(02)                                                  87870021
         DC    AL2(P082+03-P001)                                        87940021
         DC    AL1(06)                                                  88010021
         DC    AL2(P005+00-P001)                                        88080021
         DC    AL1(5)                                                   88150021
         DC    AL2(P099+00-P001)                                        88220021
         DC    AL1(2)                                                   88290021
         DC    AL2(P018+00-P001)                                        88360021
         DC    AL1(8)                                                   88430021
         DC    AL2(P023+00-P001)                                        88500021
         DC    AL1(2)                                                   88570021
         DC    AL2(P036+26-P001)                                        88640021
         DC    AL1(7)                                                   88710021
         DC    AL2(P013+16-P001)                                        88780021
         DC    AL1(13)                                                  88850021
         DC    AL2(P012+00-P001)                                        88920021
         DC    X'FF'                                                    88990021
*                                                                       89040000
*    IEW0*622*ERROR -*ADDRESS CONSTANT*REFERENCESNULL UNNAMED*CONTROL   89050000
*             SECTION.                                                  89052000
*                                                                       89054000
B062     DC    AL1(02)                                          XA04649 89056000
         DC    AL2(P056+03-P001)                                XA04649 89058000
         DC    AL1(06)                                          XA04649 89058400
         DC    AL2(P005+00-P001)                                XA04649 89058800
         DC    AL1(15)                                          XA04649 89059200
         DC    AL2(P008+00-P001)                                XA04649 89059600
         DC    AL1(22)                                          XA04649 89059700
         DC    AL2(P119+00-P001)                                XA04649 89059800
         DC    AL1(14)                                          XA04649 89059900
         DC    AL2(P025+00-P001)                                XA04649 89070000
         DC    X'FF'                                            XA04649 89080000
*    IEW0*630*ERROR -*DATA SET NAME PRINTED*HAD SYNCHRONOUS ERROR       89106721
*             *- XREF ABORTED.                                          89130021
B063     DC    AL1(02)                                                  89200021
         DC    AL2(P097+00-P001)                                        89270021
         DC    AL1(06)                                                  89340021
         DC    AL2(P005+00-P001)                                        89410021
         DC    AL1(13)                                                  89480021
         DC    AL2(P054+03-P001)                                        89550021
         DC    AL1(20)                                                  89620021
         DC    AL2(P057+00-P001)                                        89690021
         DC    AL1(13)                                                  89760021
         DC    AL2(P098+00-P001)                                        89830021
         DC    X'FF'                                                    89900021
*    IEW0*642 ERROR   -SYMBOL PRINTED APPEARED ON CONTROL STATEMENT     89970021
*             BUT WAS NOT MATCHED                               S01904  90040021
B064     DC    AL1(02)                                          S01904  90110021
         DC    AL2(P113+00-P001)                                S01904  90180021
         DC    AL1(06)                                          S01904  90250021
         DC    AL2(P005+00-P001)                                S01904  90320021
         DC    AL1(63)                                          S01904  90390021
         DC    AL2(P113+04-P001)                                S01904  90460021
         DC    X'FF'                                            S01904  90530021
*    IEW0*652 ERROR   -CONFLICT IN ORDER SPECIFIED FOR SYMBOL PRINTED   90600021
*                                                               S01904  90670021
B065     DC    AL1(02)                                          S01904  90740021
         DC    AL2(P114+00-P001)                                S01904  90810021
         DC    AL1(06)                                          S01904  90880021
         DC    AL2(P005+00-P001)                                S01904  90950021
         DC    AL1(45)                                          S01904  91020021
         DC    AL2(P114+04-P001)                                S01904  91090021
         DC    X'FF'                                            S01904  91160021
*    IEW0*670 THE SPECIFIED IDENTIFY DATA HAS BEEN ADDED TO THE  S21016 91230021
*             IDR FOR THE CONTROL SECTION NAME PRINTED.          S21016 91300021
B067     DC    AL1(39)                                           S21016 91370021
         DC    AL2(P103+00-P001)                                 S21016 91440021
         DC    AL1(52)                                           S21016 91510021
         DC    AL2(P104+00-P001)                                 S21016 91580021
         DC    X'FF'                                             S21016 91650021
*    IEW0*682 ERROR - CONTROL SECTION NAME ON AN IDENTIFY        S21016 91720021
*             CONTROL STATEMENT IS INCORRECT OR THE STATEMENT    S21016 91790021
*             IS MISPLACED -- IDENTIFY DATA IGNORED.             S21016 91860021
B068     DC    AL1(54)                                           S21016 91930021
         DC    AL2(P105+00-P001)                                 S21016 92000021
         DC    AL1(41)                                           S21016 92070021
         DC    AL2(P106+00-P001)                                 S21016 92140021
         DC    AL1(33)                                           S21016 92210021
         DC    AL2(P107+00-P001)                                 S21016 92280021
         DC    X'FF'                                             S21016 92350021
*    IEW0*694 ERROR - TABLE OVERFLOW -- SIZE VALUE SPECIFIED     S21016 92420021
*             NOT LARGE ENOUGH FOR CSECT IDR INPUT -- LINKAGE    S21016 92490021
*             EDITOR PROCESSING TERMINATED.                      S21016 92560021
B069     DC    AL1(39)                                           S21016 92630021
         DC    AL2(P108+00-P001)                                 S21016 92700021
         DC    AL1(39)                                           S21016 92770021
         DC    AL2(P109+00-P001)                                 S21016 92840021
         DC    AL1(44)                                           S21016 92910021
         DC    AL2(P110+00-P001)                                 S21016 92980021
         DC    X'FF'                                             S21016 93050021
*    IEW0*704 UNRECOVERABLE ERROR DETECTED IN CSECT IDR INPUT    S21016 93120021
*              -- LINKAGE EDITOR PROCESSING TERMINATED.          S21016 93190021
B070     DC    AL1(44)                                           S21016 93260021
         DC    AL2(P111+00-P001)                                 S21016 93330021
         DC    AL1(44)                                           S21016 93400021
         DC    AL2(P112+00-P001)                                 S21016 93470021
         DC    X'FF'                                             S21016 93540021
*    IEW0*714*ERROR -*MEMBER NOT STORED IN LIBRARY --* STOW      S21016 93540400
*             WORKSPACE UNAVAILABLE.                             S21016 93540800
B071     DC    AL1(02)                                           S21016 93541200
         DC    AL2(P115+00-P001)                                 S21016 93541600
         DC    AL1(06)                                           S21016 93542000
         DC    AL2(P005+00-P001)                                 S21016 93542400
         DC    AL1(30)                                           S21016 93542800
         DC    AL2(P070+00-P001)                                 S21016 93543200
         DC    AL1(25)                                           S21016 93543600
         DC    AL2(P116+00-P001)                                 S21016 93544000
         DC    X'FF'                                             S21016 93544400
*    IEW0*722*ERROR -*INVALID*ALIAS*NAME.                        A37667 93545000
B072     DC    AL1(02)                                           A37667 93550000
         DC    AL2(P097+03-P001)                                 A37667 93555000
         DC    AL1(06)                                           A37667 93560000
         DC    AL2(P005+00-P001)                                 A37667 93565000
         DC    AL1(06)                                           A37667 93570000
         DC    AL2(P013+00-P001)                                 A37667 93575000
         DC    AL1(04)                                           A37667 93580000
         DC    AL2(P062+00-P001)                                 A37667 93585000
         DC    AL1(03)                                           A37667 93590000
         DC    AL2(P072+10-P001)                                 A37667 93595000
         DC    X'FF'                                             A37667 93600000
* IEW0731 WARNING - ALIAS MATCHES MEMBER NAME - ALIAS IGNORED           93600100
B073     DC    AL1(54)                                           A52450 93600400
         DC    AL2(P118+00-P001)                                 A52450 93600800
         DC    X'FF'                                             A52450 93601200
*    IEW0*740 THE INDICATED ACTION WAS TAKEN FOR AN EXPAND REQUEST.     93602000
B074     DC    AL1(55)                                           Y01031 93604000
         DC    AL2(P117+00-P001)                                 Y01031 93606000
         DC    X'FF'                                             Y01031 93608000
* IEW0*564*ERROR -*INVALID*TEXT*ORIGIN*- LINKAGE EDITOR PROCESSING TERMX93608402
               INATED.                                                  93608802
B056     DC    AL1(02)                                  OX03510,OY03043 93609202
         DC    AL2(P233+03-P001)                        OX03510,OY03043 93609602
         DC    AL1(06)                                  OX03510,OY03043 93609702
         DC    AL2(P005+00-P001)                        OX03510,OY03043 93609802
         DC    AL1(06)                                  OX03510,OY03043 93609902
         DC    AL2(P013+00-P001)                        OX03510,OY03043 93633202
         DC    AL1(03)                                  OX03510,OY03043 93643202
         DC    AL2(P017+00-P001)                        OX03510,OY03043 93653202
         DC    AL1(05)                                  OX03510,OY03043 93655202
         DC    AL2(P068+23-P001)                        OX03510,OY03043 93655602
         DC    AL1(37)                                  OX03510,OY03043 93656002
         DC    AL2(P110+07-P001)                        OX03510,OY03043 93656402
         DC    X'FF'                                    OX03510,OY03043 93656502
*                                                                       93656602
* IEW0*581*WARNING -*INVALID*MEMBER NAME -*WILL TRY TO STORE UNDER 'TEMX93664402
               PNAME'.                                                  93666402
*                                                                       93668402
B058     DC    AL1(02)                                  OX04280,OY03413 93670402
         DC    AL2(P001+53-P001)                        OX04280,OY03413 93670802
         DC    AL1(08)                                  OX04280,OY03413 93671202
         DC    AL2(P042-P001)                           OX04280,OY03413 93671602
         DC    AL1(06)                                  OX04280,OY03413 93672002
         DC    AL2(P031-P001)                           OX04280,OY03413 93672102
         DC    AL1(12)                                  OX04280,OY03413 93722102
         DC    AL2(P118+28-P001)                        OX04280,OY03413 93732102
         DC    AL1(33)                                  OX04280,OY03413 93742102
         DC    AL2(P073-P001)                           OX04280,OY03413 93752102
         DC    X'FF'                                    OX04280,OY03413 93762102
         HEWAPT                                                         93772102
          END                                                           93822102
./  ADD  SSI=63220258,NAME=HEWLFEND
         TITLE 'HEWLFEND  END CARD PROCESSOR'                           00300021
*FUNCTION/OPERATION: THIS MODULE PROCESSES THE ENTRY POINTS ON END    * 00600021
*      CARDS,INSERTS THE LENGTH OF CSECTS IN THE CESD FOR THE FIRST   * 00900021
*      CSECT INPUT WITH ZERO LENGTH IN THE INPUT MODULE(THE LENGTH IS * 01200021
*      OBTAINED FROM COLS 29-32 OF THE END CARD),CLEARS THE RENUMBER- * 01500021
*      ING TABLE, AND REMOVES REPLACE/CHANGE CARD ENTRIES FROM THE    * 01800021
*      CESD AS WELL AS REMOVING THOSE CESD LINES WHICH ARE STILL MARK-* 02100021
*      ED 'DELETE' AT THE END OF THE MODULE.                          * 02400021
*                                                                     * 02700021
*ENTRY POINTS HEWLFEND - BEGINNING  OF CSECT     LA,13,SAVEAREA       * 03000021
*                                               BALR 14,15            * 03300021
*                                                                     * 03600021
*INPUT:   REGISTERS-                                                  * 03900021
*      REGISTER  4- LENGTH FROM END CARD(IF PRESENT)                  * 04200021
*      REGISTER  5- ID OF ABSOLUTE ENTRY POINT ON END CARD(IF PRESENT)* 04500021
*      REGISTER 13- ADDRESS OF A SAVEAREA                             * 04800021
*      REGISTER 14- RETURN ADDRESS                                    * 05100021
*                                                                     * 05400021
*OUTPUT:  NOT APPLICABLE                                              * 05700021
*EXTERNAL ROUTINES: NOT APPLICABLE                                    * 06000021
*EXITS-NORMAL:  AFTER PROCESSING ENTRY POINT, LENGTH,CESD AND RNT     * 06300021
*                BCR 15,14                                            * 06600021
*              ERRORS: ERROR IN INPUT- ABSOLTE ENTRY POINT ID EXCEEDS * 06900021
*                            MODULE LIMITATION                        * 07200021
*TABLES/WORK AREAS: NOT APPLICABLE                                    * 07500021
*ATTRIBUTES: THIS MODULE IS READ ONLY,UNPRIVELEGED AND ENABLED        * 07800021
*NOTES:  THIS MODULE IS USED BY BOTH E AND F LEVEL LINKAGE EDITORS    * 08100021
HEWLFEND CSECT                                                          08400021
**********************************************************************  08430021
*165000-177000,681000-744000                                     S01904 08460021
* D234000,I351000,C354000                                       ZA01411 08470002
* D642000-669000,C672000                                        ZA01413 08480037
**********************************************************************  08490021
SYSBRNCH EQU   15                                                       08700021
BASE     EQU   12                                                       09000021
APT      EQU   2                                                        09300021
ZERO     EQU   0                                                        09600021
RNT      EQU   7                                                        09900021
REG13    EQU   13                                                       10200021
ENTORABS EQU   X'0C'                                                    10500021
RNTX     EQU   5                                                        10800021
TEMP     EQU   8                                                        11100021
ENTRYPNT EQU   X'08'                                                    11400021
NOLEN    EQU   X'C0'                                                    11700021
LENGTH   EQU   4                                                        12000021
CESDADD  EQU   236                                                      12300021
CESD     EQU   6                                                        12600021
NOLENAND EQU   X'18'                                                    12900021
CESDXR   EQU   10                                                       13200021
TEMP1    EQU   9                                                        13500021
ERRORCOD EQU   X'20A'                                                   13800021
TEMP2    EQU   10                                                       14100021
RNTTYPE  EQU   3                                                        14400021
CESDTYPE EQU   8                                                        14700021
CHID     EQU   14                                                       15000021
TEMP3    EQU   11                                                       15300021
TEMP4    EQU   3                                                        15600021
SUBTYPE  EQU   13                                                       15900021
SYSRET   EQU   14                                                       16200021
R0       EQU   0                                                S01904  16500021
R1       EQU   1                                                S01904  16800021
R14      EQU   14                                               S01904  17100021
R15      EQU   15                                               S01904  17400021
MATCH    EQU   X'80'                   MATCH FLAG IN ORDER TBL  S01904  17700021
*              THE END CARD PROCESSOR IS ENTERED FROM THE INPUT       * 18000021
*              PROCESSOR                                              * 18300021
*              REGISTER 5 CONTAINS THE ID OF THE ASSEMBLED ADDRESS    * 18600021
*              ENTRY                                                  * 18900021
*              REGISTER 4 CONTAINS THE LENGTH FOR A NO LENGTH CONTROL * 19200021
*              SECTION IF ONE WAS PROCESSED IN THIS INPUT MODULE      * 19500021
*                        ********************                         * 19800021
         USING APTDSECT,APT        ESTABLISH ADDRESSABILITY WITH APT    20100021
         LR    BASE,SYSBRNCH                                            20400021
         USING HEWLFEND,BASE                                            20700021
*              INITIALIZE BASES FOR CESD AND RNT AND SET REGISTER     * 21000021
*              ZERO TO 0                                              * 21300021
         BC    15,MODID+6              BRANCH AROUND MODULE IDENT       21600021
MODID    DC    C'02MEND'                                                21900021
         STM   SYSRET,BASE,12(REG13)                                    22200021
         ST    SYSRET,REGSA14                                           22500021
         L     RNT,RECNT                                                22800021
         L     CESD,CHESD                                               23100021
*              IF THERE IS AN ABSOLUTE ENTRY POINT ON THE END CARD    * 23700021
*              AND NO OTHER ENTRY POINT HAS BEEN PROCESSED-           * 24000021
*              RENUMBER THE INPUT ID                                  * 24300021
         TM    APT1,ENTORABS                                            24600021
         BC    5,END1                                                   24900021
         LTR   RNTX,RNTX               ILLEGAL ID                       25200021
         BC    12,ERROR                YES                              25500021
         CH    RNTX,ENCDX                                               25800021
         BC    2,ERROR                                                  26100021
         SLL   RNTX,2                                                   26400021
         LH    TEMP,0(RNT,RNTX)                                         26700021
         LA    TEMP2,0(RNT,RNTX)       ADDRESS OF RNT LINE              27000021
         TM    RNTTYPE(TEMP2),X'02'    IS TYPE ER                       27300021
         BC    8,END03                 NO RELATIVE                      27600021
         TM    RNTTYPE(TEMP2),X'10'    IS TYPE DELETE                   27900021
         BC    8,END02                 NO                               28200021
         LR    TEMP2,TEMP              COMPUTE                          28500021
         SLL   TEMP2,4                 CESD                             28800021
         AR    TEMP2,CESD              ADDRESS                          29100021
         TM    CESDTYPE(TEMP2),X'40'   IS CESD TYPE CHAINED             29400021
         BC    1,END01                 YES                              29700021
         TM    CESDTYPE(TEMP2),X'10'   IS CESD TYPE DELETE              30000021
         BC    8,END01A                NO                               30300021
         TM    SUBTYPE(TEMP2),X'08'    IS SUBTYPE DDLETE                30600021
         BC    8,END01A                NO                               30900021
         OI    APT1,X'04'          ENTRY IS SYMBOL                      31200021
         BC    15,END1                                                  31500021
END01    LH    TEMP,CHID(TEMP2)        CHAIN ID                         31800021
END01A   L     TEMP4,EPSM          ORIGINAL ADDRESS                     32100021
         SL    TEMP4,CESDTYPE(TEMP2)   DELINK                           32400021
         ST    TEMP4,EPSM          RESTORE ADDRESS                      32700021
END02    OI    APTSWS,X'20'        SET ABSOLUTE BIT ON                  33000021
END03    STH   TEMP,ENDID              RENUMBER                         33300021
         MVC   PDSE16(2),ENDID                                          33600021
         OI    APT1,ENTRYPNT                                            33900021
*              IF A NO LENGTH CONTROL SECTION WAS ENCOUNTERED IN THE  * 34200021
*              PRECEEDING INPUT MODULE-                               * 34500021
*              SET THE LENGTH FROM THE END CARD INTO THE CORRECT CESD * 34800021
*              LINE                                                   * 35100021
END1     SR    ZERO,ZERO               CLEAR REG FOR RNT CLEAR  ZA01411 35150002
         TM    APT2,NOLEN                                       ZA01411 35400002
         BC    12,END2                                                  35700021
         L     TEMP,PDSE18                                              36000021
         NC    13(3,TEMP),13(TEMP)                                      36300021
         BC    8,END1A                                                  36600021
         L     11,12(0,TEMP)                                            36900021
         LA    11,0(0,11)                                               37200021
         CLR   11,LENGTH                                                37500021
         BC    2,END2                                                   37800021
END1A    IC    TEMP1,12(TEMP)                                           38100021
         ST    LENGTH,12(TEMP)                                          38400021
         STC   TEMP1,12(TEMP)                                           38700021
*              CLEAR THE NO LENGTH INDICATORS                         * 39000021
END2     NI    APT2,NOLENAND                                            39300021
*              INITIALIZE THE REPLACE/CHANGE CHAIN ADDRESS            * 39600021
         XC    RCCE(8),RCCE                                             39900021
         LR    CESDXR,CESD                                              40200021
         LH    TEMP,ENCDC                                               40500021
*              SEARCH THE CESD LOOKING FOR LINES TO BE DELETED        * 40800021
         LA    TEMP,1(TEMP)                                             41100021
END3     LA    CESDXR,16(CESDXR)                                        41400021
         BCT   TEMP,END3A                                               41700021
         BC    15,END10                                                 42000021
*              IS THE PRESENT CESD LINE FOR AN EXTERNAL REFERENCE     * 42300021
END3A    TM    8(CESDXR),X'02'                                          42600021
          BC        8,END7                                              42900021
         TM    8(CESDXR),X'0D'                                          43200021
          BC        5,END7                                              43500021
*              NO-BRANCH                                              * 43800021
*              IS TYPE A CARD                                         * 44100021
         TM    13(CESDXR),X'80'                                         44400021
*              NO-BRANCH                                              * 44700021
         BC    8,END8                                                   45000021
*              YES-IS THIS A REPLACE-CHANGE-DELETE CARD LINE          * 45300021
         TM    13(CESDXR),X'60'                                         45600021
         BC    12,END3                                                  45900021
*              NO-BRANCH                                              * 46200021
*              YES-DELETE THE CESD LINE AND ADD THE LINE TO THE       * 46500021
*              CHAIN OF DELETED LINES                                 * 46800021
END4     XC    0(16,CESDXR),0(CESDXR)                                   47100021
         MVI   8(CESDXR),X'07'                                          47400021
         L     TEMP1,FLCD                                               47700021
*              THERE ARE NO LINES IN THE CHAIN IF THE POINTER TO THE  * 48000021
*              FIRST CHAIN LINE IS ZERO                               * 48300021
         ST    TEMP1,12(CESDXR)                                         48600021
END6     ST    CESDXR,FLCD                                              48900021
         BC    15,END3                                                  49200021
*                                                                     * 49500021
*                                                                     * 49800021
*              IS THIS LINE CHAINED TO ANOTHER                        * 50100021
END7     TM    8(CESDXR),X'40'                                          50400021
         BC    1,END9                                                   50700021
*              YES-INDEX TO LINE CHAINED TO AND IF THE LINE           * 51000021
*              IS NOT AN ER,DELETE THIS LINE FROM THE CESD            * 51300021
*                                                                     * 51600021
*                                                                     * 51900021
*              NO- IS THIS LINE STILL MARKED DELETE                   * 52200021
END7A    TM    8(CESDXR),X'10'                                          52500021
         BC    1,END4                                                   52800021
*              YES- CLEAR OUT THE LINE                                * 53100021
         BC    15,END3                                                  53400021
*              NO-CONTINUE THE SEARCH OF THE CESD                     * 53700021
*                                                                     * 54000021
*                                                                     * 54300021
*                                                                     * 54600021
*              IF ER IS NOT DELETE OR REPLACE , CLEAR DELETE BIT  IN  * 54900021
*              SUBTYPE FIELD                                          * 55200021
*              IF ER IS A REPLACE , CLEAR DELETE BIT IN TYPE FIELD    * 55500021
*              IF ER IS A DELETE , CLEAR OUT THE LINE                 * 55800021
END8     TM    8(CESDXR),X'10'                                          56100021
         BC    8,END8A                                                  56400021
         TM    13(CESDXR),X'08'                                         56700021
         BC    8,END8B                                                  57000021
         BC    15,END4                                                  57300021
END8B    NI    8(CESDXR),X'EF'                                          57600021
END8A    NI    13(CESDXR),X'F7'                                         57900021
         BC    15,END7                                                  58200021
*              IF THE LINE CHAINED TO IS AN ER-UNMATCHED LIBRARY      * 58500021
*              AND THIS LINE IS DELETE-CLEAR THIS LINE                * 58800021
END9     LH    TEMP1,14(CESDXR)                                         59100021
         SLL   TEMP1,4                                                  59400021
         LA    TEMP1,0(TEMP1,CESD)                                      59700021
         TM    8(TEMP1),X'0D'                                           60000021
          BC        5,END4                                              60300021
         TM    8(TEMP1),X'02'                                           60600021
         BC    8,END4                                                   60900021
         TM    13(TEMP1),X'06'                                          61200021
         BC    8,END4                                                   61500021
*              OTHERWISE , SET THE LINE WHICH IS CHAINED TO AS A      * 61800021
*              MATCHED MEMBER BEFORE CLEARING THE CHAINED LINE        * 62100021
         TM    8(CESDXR),X'10'                                          62400021
         BC    1,END4                                                   62700021
         OI    13(TEMP1),X'01'                                          63000021
         BC    15,END4                                                  63300021
*              CLEAR OUT THE RNT                                      * 63600021
END10    LH    TEMP,ENCDX                                               63900021
END10A   ST    ZERO,4(RNT)                                      ZA01413 67200037
         LA    RNT,4(RNT)                                               67500021
         BCT   TEMP,END10A                                              67800021
         LH    R1,ORDRCUR              CURR BYTES IN ORDER TBL  S01904  68100021
         LTR   R1,R1                   ANY ENTRIES IN THE TBL   S01904  68400021
         BZ    END10E                  NONE,BRANCH OUT          S01904  68700021
         L     R15,ORDRADR             ADDR OF ORDER TBL        S01904  69000021
         AR    R1,R15                  ADD TO POINT OT TBL END  S01904  69300021
         LA    R0,3                    3 BYTES PER ENTRY        S01904  69600021
         SR    R1,R0                   ADJUST TO POINT TO LAST ENTRY    69900021
END10C   MVC   IDSAVE(2),1(R15)       GET ID OF ORDER TBL ENTRY S01904  70200021
         LH    R14,IDSAVE                                       S01904  70500021
         SLL   R14,4                   COMPUTE CORRESPONDING    S01904  70800021
         A     R14,CHESD               ENTRY IN CESD.           S01904  71100021
         CLI   0(R14),0                IS NAME FIELD NULL?      S01904  71400021
         BE    END10D                  YES-RESET MATCH FLAG     S01904  71700021
         MVN   IDSAVE(1),8(R14)        MOVE TYPE                S01904  72000021
         CLI   IDSAVE,0                TYPE SD?                 S01904  72300021
         BE    END10F                  YES,FLAG A MATCH         S01904  72600021
         CLI   IDSAVE,X'05'            TYPE COMMON?             S01904  72900021
         BNE   END10D                  IF NOT,DO NOT FLAG MATCH S01904  73200021
END10F   OI    0(R15),MATCH            SD & CM - MATCH ORDER TBL        73500021
         B     END10G                  PROCEED ORDER TBL SCAN   S01904  73800021
END10D   NI    0(R15),X'FF'-MATCH      RESET MATCH FLAG         S01904  74100021
END10G   BXLE  R15,R0,END10C           CONTINUE SCAN            S01904  74400021
END10E   L     SYSRET,REGSA14                                           74700021
         LM    SYSBRNCH,1,16(REG13)                                     75000021
         LM    3,BASE,32(REG13)                                         75300021
         BCR   15,SYSRET                                                75600021
ERROR    L     SYSBRNCH,ERDIG                                           75900021
         OI    APT1,X'40'                                               76200021
         LA    ZERO,ERRORCOD                                            76500021
*              **** ERROR ****                                        * 76800021
*              ID FOR ABSOLUTE ENTRY POINT EXCEEDS MODULE LIMITATION  * 77100021
         BALR  SYSRET,SYSBRNCH                                          77400021
         BC    15,END1                                                  77700021
ENDID    DC    H'0'                                                     78000021
IDSAVE   EQU   ENDID                                                    78300021
*              ENDID IS TEMPORARY STORE FOR THE RENUMBERED ID         * 78600021
*              IT IS MOVED TO AN OFF WORD BOUNDARY IN THE APT         * 78900021
REGSA14  DC    F'0'                                                     79200021
         HEWAPT                                                         79500021
         END                                                            79800021
./  ADD  SSI=62730934,NAME=HEWLFENS
         TITLE    'HEWLFENS  ENTER SEGMENT NUMBERS'                     00050021
*********************************************************************** 00100021
*                                                                     * 00150021
*STATUS: CHANGE LEVEL                                                 * 00200021
*                                                                     * 00250021
*FUNCTION/OPERATION:                                                  * 00300021
*    1) ENTER SEGMENT NUMBERS FOR LABEL REFERENCES IN CESD            * 00350021
*    2) DETERMINE NUMBER OF ENTAB LINES REQUIRED PER SEGMENT (OVERLAY)* 00400021
*                                                                     * 00450021
*ENTRY POINTS:                                                        * 00500021
*    HEWLFENS- CONTROL SECTION NAME                                     00550021
*                                                                     * 00600021
*INPUT:                                                               * 00650021
*    1) REG 2 - ADDRESS OF ALL PURPOSE TABLE                          * 00700021
*    2) REG 13- ADDRESS OF CALLER SUPPLIED REGISTER SAVE AREA         * 00750021
*    3) TABLES LISTED BELOW                                           * 00800021
*                                                                     * 00850021
*OUTPUT:                                                              * 00900021
*    1) UPDATED COMPOSITE EXTERNAL SYMBOL DICTIONARY-LABEL REFERENCES * 00950021
*    2) COUNT OF ENTAB LINES PER SEGMENT                              * 01000021
*                                                                     * 01050021
*EXTERNAL ROUTINES:                                                   * 01100021
*    1) HEWLELOG - ERROR DIAGNOSTIC ROUTINE                           * 01150021
*    2) HEWLCAD1 - AN ENTRY POINT IN EITHER HEWLKADA OR HEWLFADA      * 01200021
*        A) HEWLCAD1 IS ENTERED FROM HEWLKENS TO RECORD THE NUMBER OF * 01250021
*           LINES OF ENTAB -   REQUIRED PER SEGMENT-                  * 01300021
*          1)IN THE 'F' LINKAGE EDITOR HEWLCAD1 RECORDS THE ENTAB LINE* 01550021
*            COUNT IN THE SEGMENT LENGTH TABLE AND SETS THE 'E' BIT TO* 01600021
*            1-INDICATING THERE IS AN ENTAB FOR THIS SEGMENT          * 01650021
*        B) HEWLCAD1 IS ENTERED FOR EACH SEGMENT WHICH CONTAINS AN    * 01700021
*           ENTAB                                                     * 01750021
*                                                                     * 01800021
*EXITS:                                                               * 01850021
*   RETURNS TO ADDRESS PASSED IN REGISTER 14                          * 01900021
*                                                                     * 01950021
*TABLES:                                                              * 02000021
*   1) CALLS LIST                                                     * 02050021
*   2) COMPOSITE EXTERNAL SYMBOL DICTIONARY                           * 02100021
*   3) DOWNWARDS CALLS LIST (INTERNAL)                                * 02150021
*   4) SEGMENT TABLE 1                                                * 02200021
*   5) ALL PURPOSE TABLE                                              * 02250021
*                                                                     * 02300021
*ATTRIBUTES:                                                          * 02350021
*                                                                     * 02400021
*********************************************************************** 02450021
HEWLFENS CSECT                                                          02500021
*                                                                     * 02550021
*                                                                     * 02600021
*                                                                       02650021
*                                                                       02700021
*                                                                       02750021
*********************************************************************** 02800021
*                                                                       02850021
*             REGISTERS USED IN HEWLKENS                              * 02900021
*********************************************************************** 02950021
*                                                                       03000021
ERRCODRG EQU   0                        ERROR CODE REGISTER             03050021
WORK4    EQU   0                        WORK                            03100021
WORK1    EQU   1                        WORK                            03150021
ERRSYMRG EQU   1                        ADDRESS OF SYMBOL               03200021
APT      EQU   2                        ALL PURPOSE TABLE ADDRESS       03250021
CALLADD  EQU   3                        ADDRESS OF CALLS LIST           03300021
TEMP2    EQU   3                       TEMPORARY WORK REGISTER          03350021
CURCHNAD EQU   3                        CURRENT CHAIN ADDRESS           03400021
CURINDEX EQU   4                        CURRENT INDEX                   03450021
CURPPTR  EQU   5                        CURRENT P POINTER               03500021
CURRPTR  EQU   6                        CURRENT R POINTER               03550021
CURPSEGN EQU   7                        CURRENT P SEGMENT NUMBER        03600021
CURRSEGN EQU   8                        CURRENT R SEGMENT NUMBER        03650021
CURSEGNO EQU   9                        CURRENT SEGMENT NUMBER          03700021
TEMP1    EQU   9                       TEMPORARY WORK REGISTER          03750021
BASE     EQU   12                       BASE REGISTER                   03800021
ACUMZERO EQU   13                       ACCUMULATO                      03850021
CULTOTCT EQU   14                       CULMULATIVE TOTAL NO. BYTES -2  03900021
RETURN   EQU   14                       RETURN (RETURN FROM CPTH)       03950021
WORK2    EQU   10                       WORK                            04000021
BRANCH   EQU   15                                                       04050021
CULRELCT EQU   15                       CULMULATIVE REL. NO. BYTES      04100021
ERRADDRG EQU   15                       ADDRESS OF ERROR ROUTINE        04150021
WORK3    EQU   15                       WORK                            04200021
WORK5    EQU   15                       WORK   (NOT USED PRESENTLY)     04250021
*********************************************************************   04300021
*              DISPLACEMENTS                                            04350021
*********************************************************************   04400021
DISP     EQU   0                       DISPLACEMENT FOR SAVE AREA       04450021
*********************************************************************** 04500021
*              MASKS                                                    04550021
OVLYBIT  EQU   X'20'                    MASK FOR TESTING FOR OVERLAY    04600021
*                                                                       04650021
XCAL     EQU   X'04'                    XCAL TEST MASK                  04700021
*********************************************************************** 04750021
*********************************************************************** 04800021
*              SAVE CALLERS REGISTERS AND INITIALIZE BASE  REGISTER     04850021
*********************************************************************** 04900021
         STM   14,12,DISP(13)           SAVE CALLERS REGS               04950021
         USING ENS00500+2,BASE                                          05000021
         USING APTDSECT,APT   ESTABLISH ADDRESSABILITY FOR  APT         05050021
ENS00500 BALR  BASE,0                   INITIALIZE BASE                 05100021
         BC    15,MODID+6              BRANCH AROUND MODID              05150021
MODID    DC    C'01MENS'                                                05200021
         ST    13,SAVERG13              SAVE 13 -ADD OF CALLERS  REGS   05250021
*********************************************************************** 05300021
*                                                                       05350021
*********************************************************************** 05400021
*              SCAN CESD  - PUT PROPER  SG NO OF LR IN CESD LR ENTRY    05450021
*********************************************************************** 05500021
ENS0070  L     WORK1,CHESD        CESD ADD                              05550021
         LH    WORK2,ENCDC         CESD CURR CT                         05600021
ENS00750 LA    WORK1,16(WORK1)         INC CESD ADD                     05650021
         MVN   TESTTYPE(1),8(WORK1)     MOVE TYPE TO TEST FOR LR        05700021
         CLI   TESTTYPE,X'03'           IS TYPE = LR                    05750021
         BC    7,ENS00770               NO / GO TEST END OF LOOP        05800021
*********************************************************************** 05850021
*              TYPE = LR                                                05900021
*********************************************************************** 05950021
         LH    WORK3,14(WORK1)         ID                               06000021
         SLL   WORK3,4                 REL ADD                          06050021
         A     WORK3,CHESD        ADD OF CS                             06100021
         MVC   12(1,WORK1),12(WORK3)   PUT CS.SG.NO. IN SG.FD. OF LR    06150021
ENS00770 BCT   WORK2,ENS00750          BRANCH IF LOOP NOT DONE          06200021
*********************************************************************** 06250021
*              TEST FOR OVELAY / NO RETURN TO CALLER /YES CONTINUE PROC 06300021
*********************************************************************** 06350021
         TM    PDSE7,OVLYBIT       IS PROGRAM IN OVERLAY                06400021
         BC    8,ENS115                 NO/ GO TO RETURN TO CALLER      06450021
*********************************************************************** 06500021
*              TEST FOR NO ENTRYS IN CALLS LIST - NO V CONSTANTS-ERR  * 06550021
*********************************************************************** 06600021
         NI    PSEGONE,X'00'           INIT-TO TEST FOR VALID CALL      06650021
*                                      FROM SEGMENT 1                   06700021
         SR    ACUMZERO,ACUMZERO                                        06750021
         CH    ACUMZERO,ENCLC      IS CALL LIST EMPTY                   06800021
         BC    8,ENS110                YES / GO TO PRINT ERROR MESS.    06850021
*********************************************************************** 06900021
*              SCAN CALLS LIST AND INSERT RELAYIVE ADDRESS (CA)       * 06950021
*********************************************************************** 07000021
         L     CALLADD,CLLT        ADDRESS OF CALLS LIST                07050021
         SR    CULTOTCT,CULTOTCT                                        07100021
ENS00800 SR    CULRELCT,CULRELCT                                        07150021
ENS00900 LA    CULRELCT,2(CULRELCT)     INCREMENT CUL RELATIVE CT BY 2  07200021
         CH    ACUMZERO,0(CALLADD,CULRELCT)  IS CALLS LIST ENTRY = 0    07250021
         BC    7,ENS00900                    NO                         07300021
         STH   CULRELCT,0(CALLADD)       T)  INSERT CURRENT CHAIN ADD.  07350021
         LA    CALLADD,0(CALLADD,CULRELCT)                              07400021
         LA    CULTOTCT,0(CULTOTCT,CULRELCT) IN CHAIN / FIND TOTAL CT   07450021
         CH    CULTOTCT,ENCLC      IS SCAN DONE                         07500021
         BC    7,ENS00800              NO                               07550021
*                                                                       07600021
*                                                                       07650021
         NI    PSEGONE,X'00'            INIT. TO TEST VALID CALL FR SG1 07700021
*********************************************************************** 07750021
*              SET DOWNWARD CALLS LIST (ENTRY LIST) TO ZERO + INITALIZE 07800021
*********************************************************************** 07850021
         L     WORK1,RECNT         ADD OF ENTRY LIST                    07900021
         SR    TEMP1,TEMP1                                              07950021
         LH    TEMP2,ENCDC                                              08000021
         SRL   TEMP2,2                 NO. OF FULL WORDS IN LIST        08050021
         LA    TEMP2,1(TEMP2)          IF CESD CT LESS 4-SRL = 0 - T2 0 08100021
ENS011   LA    WORK1,4(WORK1)          INC ADDRESS OF NEXT ENTRY        08150021
         ST    TEMP1,4(WORK1)           SET THIS ENTRY TO 0             08200021
         BCT   TEMP2,ENS011            BRANCH IF LOOP NOT DONE          08250021
         SR    CURSEGNO,CURSEGNO                                        08300021
*********************************************************************** 08350021
*              INCREMENT CURRENT SEGMENT NUMBER/TEST IF ALL SEGMENTS    08400021
*              PROCESSED/YES RETURN TO CALLER / NO CONTINUE             08450021
*********************************************************************** 08500021
ENS015   LA    CURSEGNO,1(CURSEGNO)                                     08550021
         L     CURCHNAD,CLLT       ADD OF CALLS LIST                    08600021
         SR    ACUMZERO,ACUMZERO                                        08650021
         CH    CURSEGNO,CSNO       HAVE ALL SEGMENTS BEEN PROCESSED     08700021
         BC    2,ENS110                YES                              08750021
*********************************************************************** 08800021
*              INITIALIZE TO FIND NEXT P IN CALLS LIST                  08850021
*********************************************************************** 08900021
ENS017   SR    CURINDEX,CURINDEX                                        08950021
         SR    CURPSEGN,CURPSEGN                                        09000021
         LA    CURINDEX,2(CURINDEX)          INDEX TO P PTR             09050021
         LH    CURPPTR,0(CURCHNAD,CURINDEX)  CURRENT P PTR              09100021
         LR    WORK1,CURPPTR                 CURRENT P PTR              09150021
         SLL   WORK1,4                       MULT BY 16                 09200021
         A     WORK1,CHESD         POINTS TO CESD LINE  ID=P            09250021
         IC    CURPSEGN,12(WORK1)       CURRENT SEGMENT NO OF P         09300021
*********************************************************************** 09350021
*              DOES THE CONTROL SECTION WITH ITS ESDID = THIS P LIE IN  09400021
*              THE CURRENT SEGMENT/ NO GO TO TEST END OF CALLS LIST     09450021
*********************************************************************** 09500021
*********************************************************************** 09550021
*              TEST FOR A CONTROL SECTION IN SEGMENT 1                  09600021
*********************************************************************** 09650021
         LA    WORK1,1                  INIT WORK1 TO 1                 09700021
         CLR   WORK1,CURPSEGN           IS THIS P IN SEGMENT 1          09750021
         BC    7,ENS018                 NO / CONTINUE                   09800021
         OI    PSEGONE,X'80'            SET IND A CALL FROM SEG 1 SEEN  09850021
ENS018   CLR   CURSEGNO,CURPSEGN        DOES CURR.P SEG.NO.= CURR.SEG.  09900021
         BC    7,ENS1200                NO                              09950021
*********************************************************************** 10000021
*              INCREMENT TO NEXT CALLS LIST ENTRY / TEST IF ALL RS FOR  10050021
*              THIS P HAVE BEEN PROCESSED                               10100021
*********************************************************************** 10150021
ENS020   LA    CURINDEX,2(CURINDEX)     INCREMENT TO NEXT R OR CHAIN    10200021
         CH    CURINDEX,0(CURCHNAD)     IS SCAN FOR THIS P PTR DONE     10250021
         BC    8,ENS1200                YES                             10300021
*********************************************************************** 10350021
*              USING R POINTER REFERENCE CESD TO DETERMINE WHAT ITS     10400021
*              TYPE IS / ER,PR NO GOOD                                  10450021
*********************************************************************** 10500021
         LH    CURRPTR,0(CURCHNAD,CURINDEX)  PICK UP CURRENT R PTR      10550021
         LR    WORK1,CURRPTR                 CURRENT R PTR              10600021
         SLL   WORK1,4                       MULT BY 16                 10650021
         A     WORK1,CHESD         POINTS TO ENTRY IN CESD R=ID         10700021
*********************************************************************** 10750021
         MVN   TESTTYPE,8(WORK1)        MOVE LOW 4 BITS FOR TEST        10800021
         CLI   TESTTYPE,X'08'           IS TYPE = SD WITH RLDS          10850021
         BC    2,ENS020                 HIGH - GO TO NEXT R OR CA       10900021
         BC    8,ENS030                 YES - PROCESS SD                10950021
         CLI   TESTTYPE,X'05'           IS TYPE = CM                    11000021
         BC    2,ENS020                 HIGH - GO TO NEXT R OR CA       11050021
         BC    8,ENS030                 YES - PROCESS CM                11100021
         TM    TESTTYPE,X'03'           IS TYPE = SD OR LR              11150021
         BC    4,ENS020                 NO - GO TO PROCESS NEXT R OR CA 11200021
*                                       TYPES SD,SD W/RLD,LR,CM OK      11250021
*********************************************************************** 11300021
*              FIND SEGMENT NUMBER OF THIS R POINTER - USE CESD         11350021
*********************************************************************** 11400021
ENS030   SR    CURRSEGN,CURRSEGN                                        11450021
         IC    CURRSEGN,12(WORK1)       PICK UP SEGMENT NO OF R = SR    11500021
*********************************************************************** 11550021
*              TEST FOR UPWARD CALL - YES - NO ENTAB LINES REQUIRED     11600021
*********************************************************************** 11650021
         CLR   CURRSEGN,CURPSEGN        DOES  SR = SP                   11700021
         BC    8,ENS020                 YES UPWARD CALL / NO LINES      11750021
         LR    WORK1,CURRSEGN           PASS SR TO COMMON PATH          11800021
         LR    WORK2,CURPSEGN           PASS SP TO COMMON PATH          11850021
         BAL   RETURN,ENS1500                                           11900021
         CLR   WORK2,CURRSEGN           DOES  SR = SC                   11950021
         BC    8,ENS020                 YES  (UPWARD CALL) / NO LINES   12000021
*********************************************************************** 12050021
*              TEST FOR DOWNWARD CALL - YES - MAY REQUIRE ENTAB         12100021
*********************************************************************** 12150021
         CLR   WORK2,CURPSEGN           DOES  SP = SC                   12200021
         BC    8,ENS080                 YES  (DOWNWARD CALL)            12250021
*********************************************************************** 12300021
*              DETERMINE  REGION NUMBERS FOR SEGMENT NUMBERS P AND R    12350021
*********************************************************************** 12400021
         SR    WORK1,WORK1                                              12450021
         SR    WORK2,WORK2                                              12500021
         SR    WORK4,WORK4                                              12550021
ENS040   IC    WORK4,LSTS(WORK1)   HI SEG OF THIS REG                   12600021
         LA    WORK1,1(WORK1)                REG NO.FOR SP IN WORK1     12650021
         CR    CURPSEGN,WORK4          DOES SP LIE IN THIS REG          12700021
         BC    2,ENS040                NO                               12750021
ENS050   IC    WORK4,LSTS(WORK2)   HI SEG OF THIS REG                   12800021
         CR    CURRSEGN,WORK4  DOES SR LIE IN THIS REG                  12850021
         LA    WORK2,1(WORK2)                REG NO.FOR SR IN WORK2     12900021
         BC    2,ENS050                NO                               12950021
*********************************************************************** 13000021
*              DO BOTH SEGMENTS LIE IN THE SAME REGION / YES MAY B ERR  13050021
*********************************************************************** 13100021
         CLR   WORK1,WORK2              DOES  RSP = RSR                 13150021
         BC    7,ENS080                 NO / CALL TO DIFFERENT REGION   13200021
*********************************************************************** 13250021
*              CONVERT SEGMENT NUMBER FROM WHICH THIS EXCLUSIVE CALL  * 13300021
*              HAS BEEN MADE FROM BINARY TO DECIMAL FOR PRINTING MESS.* 13350021
*********************************************************************** 13400021
         LR    WORK3,CURPSEGN           FROM SEGMENT                    13450021
         CVD   WORK3,CVDAREA            CONVERT TO DECIMAL              13500021
         UNPK  CVDAREA+0(5),CVDAREA+6(3)  UNPACK TO SUPPLY ZONE         13550021
         CLI   CVDAREA,C'0'            IS FIRST DIGIT ZERO              13600021
         BC    7,ENS055                NO                               13650021
         MVI   CVDAREA,C' '            YES--MOVE IN BLANK               13700021
         CLI   CVDAREA+1,C'0'          IS SECOND DIGIT ZERO             13750021
         BC    7,ENS055                NO                               13800021
         MVI   CVDAREA+1,C' '          YES--MOVE IN BLANK               13850021
ENS055   MVI   CVDAREA+3,C' '                                           13900021
         MVC   CVDAREA+4(4),CVDAREA+3  BLANK REMAINING FIVE CHARACTERS  13950021
*                                       PRINTING 8 CHARACTERS           14000021
*********************************************************************** 14050021
*              USING DOWNWARD CALLS LIST DETERMINE IF THERE IS AN ENTAB 14100021
*              IN A SEGMENT COMMON TO CURRENT(SP) TO SYMBOL WITH ESDID  14150021
*              = TO R /YES-IS VALID XCAL / NO- IS INVALID XCALL         14200021
*********************************************************************** 14250021
         L     WORK3,RECNT         ENTRY LIST ADDRESS                   14300021
         IC    WORK4,4(WORK3,CURRPTR)   GET ENTRY AT THIS R = SPCR      14350021
         LTR   WORK2,WORK4              DOES SEG.NO = 0/ PUT SPCR WORK2 14400021
         BC    8,ENS070                 YES/NO PREVIOUS CALLS TO THIS R 14450021
         LR    WORK1,CURPSEGN           PASS SP TO CPTH                 14500021
         BAL   RETURN,ENS1500           GO TO COMMON PATH  ANS =  SC    14550021
         CLR   WORK2,WORK4              DOES SC = SPCR                  14600021
         BC    7,ENS070                 NO /NO CALL TO THIS R FROM A    14650021
*                                       SEGMENT IN ROOT PATH OF SP      14700021
*********************************************************************** 14750021
*              TEST IF XCALL OPTION SPECIFIED - YES -EXECUTE            14800021
*********************************************************************** 14850021
         LH    ERRCODRG,ERRPARM1        ASSUME XCALL ON/NO ERROR-WARN   14900021
         TM    APT0,XCAL           IS XCAL OPTION = ON                  14950021
         BC    1,ENS060                 XCALL ON/ GO PRINT WARNING      15000021
         LH    ERRCODRG,ERRPARM2        XCALL OFF /EXECUTE ON LET ONLY  15050021
*                                       SEVERITY 3                      15100021
*********************************************************************** 15150021
*              GO TO ERROR DIAGNOSTIC ROUTINE TO PRINT MESSAGE          15200021
*********************************************************************** 15250021
ENS060   ST    ACUMZERO,SAVECT          SAVE ENTAB COUNT                15300021
         LR    ACUMZERO,CURRPTR         ID OF R - TO SYMBOL             15350021
         SLL   ACUMZERO,4               RELATIVE ADD OF SYMBOL          15400021
         A     ACUMZERO,CHESD      TRUE ADDRESS OF SYMBOL               15450021
         L     ERRADDRG,ERDIG      ERROR ADD                            15500021
         LA    ERRSYMRG,CVDAREA        ADDRESS OF SEGMENT NUMBER        15550021
         BALR  RETURN,ERRADDRG                                          15600021
         L     ACUMZERO,SAVECT          RESTORE COUNT OF ENTAB LINES    15650021
         BC    15,ENS020                                                15700021
*********************************************************************** 15750021
*              AN INVALID CALL HAS BEEN DETECTED  SET UP TO PRINT MESS. 15800021
*********************************************************************** 15850021
ENS070   LH    ERRCODRG,ERRPARM3        INVALID XCALL / EXECUTE ON LET  15900021
         BC    15,ENS060                                                15950021
*********************************************************************** 16000021
*              TEST IF A PREVIOUS CALL HAS BEEN MADE TO THIS SYMBOL     16050021
*              FROM A SEGMENT COMMON TO THE CURRENT SEGMENT             16100021
*********************************************************************** 16150021
ENS080   L     WORK3,RECNT         ADD OF DOWNWARD CALLS LIST           16200021
         SR    WORK2,WORK2                                              16250021
         IC    WORK2,4(WORK3,CURRPTR)   GET SEG NO OF PREVIOUS CALL     16300021
         LTR   WORK4,WORK2              WAS THERE A PREVIOUS CALL       16350021
         BC    8,ENS090                 NO                              16400021
         LR    WORK1,CURPSEGN           PASS SP TO CPTH                 16450021
         BAL   RETURN,ENS1500           GO TO COMMON PATH/ANS IS = SC   16500021
         CLR   WORK2,WORK4              DOES SC = SPCR                  16550021
         BC    8,ENS020                 YES /AN ENTAB LINE EXISTS IN    16600021
*                                       THE ROOT PATH OF SP FOR R       16650021
*********************************************************************** 16700021
*              PUT THE CURRENT SEGMENT NUMBER IN THE DOWNWARDS CALL     16750021
*              LIST AT THE R TH ENTRY-- R IS THE ESDID OF THE CALLED    16800021
*              SYMBOL                                                   16850021
*********************************************************************** 16900021
ENS090   L     WORK3,RECNT                                              16950021
         STC   CURPSEGN,4(WORK3,CURRPTR)                                17000021
         LA    ACUMZERO,1(ACUMZERO)                                     17050021
*********************************************************************** 17100021
*              TEST IF A CALL HAS BEEN MADE FROM SEG 1 - YES-TO VALID   17150021
*              SYMBOL / YES - SET INDICATOR IN PSEGONE -BIT 2           17200021
*********************************************************************** 17250021
         TM    PSEGONE,X'80'            IS THIS CALL FROM SEGMENT 1     17300021
         BC    8,ENS020                 NO /                            17350021
         OI    PSEGONE,X'40'            YES / AN A VALID CALL WAS  MADE 17400021
         BC    15,ENS020                                                17450021
*********************************************************************** 17500021
*              TEST IF A VALID CALL HAS BEEN FROM SEGMENT 1 TO A SYMBOL 17550021
*              NOT IN SEGMENT 1                                         17600021
*********************************************************************** 17650021
ENS110   LH    ERRCODRG,ERRPARM4                                        17700021
         TM    PSEGONE,X'40'                                            17750021
         BC    1,ENS115                 YES/ DO NOT PRINT ERROR MESS    17800021
         L     ERRADDRG,ERDIG      ADD OF ERROR DIAGNOSTIC ROUTINE      17850021
         BALR  RETURN,ERRADDRG          GO TO ERROR DIAGNOSTIC ROUTINE  17900021
*********************************************************************** 17950021
*              RESTORE REGISTERS AND RETURN TO CALLER                   18000021
*********************************************************************** 18050021
ENS115   L     13,SAVERG13              RESTORE ADDRESS OF CALLERS AREA 18100021
         LM    14,12,DISP(13)           RESTORE CALLERS REGISTERS       18150021
         BCR   15,14                    RETURN TO CALLER                18200021
*********************************************************************** 18250021
*              SET INDICATOR FOR PROCESSING A CONTROL SECTION IN SG1TO0 18300021
*********************************************************************** 18350021
ENS1200  NI    PSEGONE,X'7F'            SET P IN SEGMENT 1 TO 0         18400021
*********************************************************************** 18450021
*              TEST FOR END OF PROCESSING CURRENT SEGMENT               18500021
*********************************************************************** 18550021
         AH    CURCHNAD,0(CURCHNAD)     ADD.CURRENT CHAIN ADDRESS TO    18600021
*                                       ADD.OF PREVIOUS CHAIN ADDRESS   18650021
ENS010   LH    WORK1,0(CURCHNAD)        CURRENT CHAIN                   18700021
         LTR   WORK1,WORK1              IS SCAN FOR CURRENT SEGMENT DON 18750021
         BC    2,ENS017                NO  / LOOK AT NEXT P             18800021
*********************************************************************** 18850021
*              TEST IF THERE ANY ENTAB LINES FOR THIS SEGMENT/ YES GO   18900021
*              TO HEWLCAD1 TO RECORD COUNT.                             18950021
*********************************************************************** 19000021
         LTR   ACUMZERO,ACUMZERO        ANY ENTAB LINES FOR THIS SEG    19050021
         BC    8,ENS015                 NO  GO TO PROCESS NXT SEGMENT   19100021
         LM    RETURN,BRANCH,ENS1300    SET UP RETURN & BRANCH REGS     19150021
         BCR   15,BRANCH                GO TO PCEB / ENTER ENTAB INCESD 19200021
*********************************************************************** 19250021
*********************************************************************** 19300021
*              CPTH -  COMMON PATH SUBROUTINE                         * 19350021
*                                                                     * 19400021
*                                                                     * 19450021
*********************************************************************** 19500021
*                                                                     * 19550021
*                   REQUIRED REGISTERS  & PARAMETERS                  * 19600021
*                        BASE                                         * 19650021
*                        WORK1     SEG A  (NOT SAVED)                 * 19700021
*                        WORK2     SEG B  (NOT SAVED)  ANS PUT HERE   * 19750021
*                        WORK3     WORK REGISTER (NOT SAVED)          * 19800021
*                        RETURN    RETURN ADDRESS                     * 19850021
*                        APT       ALL PURPOSE TABLE                  * 19900021
*********************************************************************** 19950021
*********************************************************************** 20000021
ENS1500  L     WORK3,SGT1          ADDRESS OF SEGTAB1                   20050021
ENS1600  CLR   WORK2,WORK1              DOES  SEG B = SEG A             20100021
         BCR   8,RETURN                 YES - ANS IN WORK 2             20150021
         BC    2,ENS1700                NO  -SEG B GTR SEG A            20200021
         XR    WORK2,WORK1              NO  -SEG B LOW SEG A            20250021
         XR    WORK1,WORK2              EXCHANGE PARAMETERS             20300021
         XR    WORK2,WORK1                                              20350021
ENS1700  IC    WORK2,0(WORK3,WORK2)     GET PREVIOUS SEGMENT NUMBER     20400021
         LTR   WORK2,WORK2              IS PREVIOUS SEGMENT NUMBER = 0  20450021
         BC    2,ENS1600                NO                              20500021
         LA    WORK2,1                  SET ANS = 1                     20550021
         BCR   15,RETURN                                                20600021
*********************************************************************** 20650021
*********************************************************************** 20700021
ENS1300  DC    A(ENS015)                RETURN ADDRESS                  20750021
         DC    V(HEWLCAD1)                                              20800021
SIX      DC    H'6'                     CONSTANT OF 6                   20850021
*                                                                       20900021
TESTTYPE DC    X'00'                    USED FOR TESTING LOW 4 BITS OF  20950021
*                                       ESD TYPE                        21000021
PSEGONE  DC    X'00'                    USED TO INDICATE AVALID CALL    21050021
*                                       FROM SEGMENT 1                  21100021
*                                       BIT 1- INIT= 0  1= CALL FROMSG1 21150021
*                                       BIT 2- INIT= 0  1= CALL FROMSG1 21200021
*                                        TO A VALID SYMBOL NOT IN SEG 1 21250021
CVDAREA  DS    2D          '            PRINT IMAGE FOR XCALL MESSAGE   21300021
SAVECT   DC    F'0'                     SAVE  ENTAB COUNT WHEN GOING TO 21350021
*                                       ERROR DIAGNOSTIC ROUTINE        21400021
SAVERG13 DS    F                        ADDRESS OF CALLERS REG SAVEAREA 21450021
*********************************************************************** 21500021
*              ERROR PARAMETERS                                       * 21550021
*********************************************************************** 21600021
MESS1    EQU   X'3110'                                                  21650021
MESS2    EQU   X'3211'                                                  21700021
MESS3    EQU   X'3212'                                                  21750021
MESS4    EQU   X'020F'                                                  21800021
ERRPARM1 DC    AL2(MESS1)               WARNING XCLUSIVE CALL-XCALL ON  21850021
ERRPARM2 DC    AL2(MESS2)               ERROR XCLUSIVE  CALL -XCALL OFF 21900021
ERRPARM3 DC    AL2(MESS3)               ERROR INVALID XCLUSIVE CALL     21950021
ERRPARM4 DC    AL2(MESS4)               NO CALLS FROM SEG 1 TO VALID    22000021
*                                                                       22050021
*                                                                       22100021
*                                                                       22150021
*********************************************************************** 22200021
         HEWAPT                                                         22250021
*********************************************************************** 22300021
         END                                                            22350021
./  ADD  SSI=63180085,NAME=HEWLFENT
          TITLE   'HEWLFENT  ENTRY POINT PROCESSOR'                     00020021
*********************************************************************** 00040021
*              HEWLFENT - ENTRY POINT PROCESSOR - ALIAS TABLE BUILDER * 00060021
*********************************************************************** 00080021
*                                                                       00100021
*              ENTRY POINT - HEWLFENT - CONTROL SECTION NAME          * 00120021
*                                                                       00140021
*              INPUT--                                                  00160037
*                  A)  1) COMPOSITE EXTERNAL DICTIONARY                 00180021
*                      2) RELOCATION CONSTANT TABLE                     00200021
*                      4) ENTRY POINT SYMBOL OR ASSEMBLED ADD AND ESDID 00220021
*                      3) INDICATION IF ENTRY POINT HAS BEEN RECIEVED   00240021
*                      4)ALIAS TABLE                                    00260021
*                                                                       00280021
*                 B)   1) GP REGISTER  2 -ADDRESS OF ALL PURPOSE TABLE  00300021
*                      2) GP REGISTER 13 -ADDRESS OF A REG SAVE AREA    00320021
*                      3) GP REGISTER 14 -CALLER RETURN ADDRESS         00340021
*                                                                       00360021
*********************************************************************** 00380021
*********************************************************************** 00400021
*                   DETERMINE ENTRY POINT  AND ASSOCIATED ESDID       * 00420021
*                                                                     * 00440021
*              PROCEDURE:                                             * 00460021
*                                                                     * 00480021
*               (A) BUILD ALIAS TABLE USING ALIAS CHAIN IN CESD       * 00500021
*               (B) HAS AN ENTRY POINT BEEN DEFINED ?                 * 00520021
*                  (1)YES - IS IT SYMBOLIC ?                          * 00540021
*                     (A)YES-FIND SYMBOL IN CESD  (NOT FOUND IS ERROR)* 00560021
*                            IS SYMBOL TYPE = SD OR LR (NO IS ERROR)  * 00580021
*                            IS SYMBOL IN SEGMENT 1 (NO IS AN ERROR)  * 00600021
*                     (B)NO - ENTRY POINT IS AN ASSEMBLED ADDRESS     * 00620021
*                            USING GIVEN ESDID FIND LINKED ADDRESS    * 00640021
*                            USING ESDID CHECK ADDRESS TO BE IN SEG 1 * 00660021
*                             (NOT IN SEGMENT 1 IS AN ERROR)          * 00680021
*                  (2)NO  -  FIND LOWEST LINKED ADDRESS FOR TYPE SD OR* 00700021
*                            PC (NOT DELETE) IN CESD IN SEGMENT 1     * 00720021
*                            (NOT FOUND IS AN ERROR)                  * 00740021
*                                                                     * 00760021
*                                                                     * 00780021
*********************************************************************** 00800021
*                                                                       00820021
*              REGISTER USAGE                                           00840021
*                                                                       00860021
HEWLFENT CSECT                                                          00880021
ERRCODRG EQU   0                                                   REGS 00920021
ERRSYM   EQU   1                        ERROR SYMBOL ADDRESS       REGS 00940021
ALIASTBL EQU   3                       ADDRESS OF ALIAS TABLE           00960021
WORK1    EQU   5                       WORK REG                         00980021
APT      EQU   2                        APT                        REGS 01000021
CESDCT   EQU   11                       CESD CURR CT               REGS 01020021
BASE     EQU   12                                                  REGS 01040021
WORK2    EQU   13                                                       01060021
RCTADD   EQU   8                       ADDRESS OF RCT              REGS 01080021
RETURN   EQU   14                                                  REGS 01100021
TEMP4    EQU   9                                                        01120021
TEMP3    EQU   10                                                       01140021
EVEN     EQU   14                      EVEN REG OF AN EVEEN /ODD PAIR   01160021
TEMP1    EQU   6                        TEMPORARY WORK                  01180021
ALIASADD EQU   7                        ADDRESS OF ALIAS ENTRY IN CESD  01200021
BRANCH   EQU   15                                                  REGS 01220021
CESDADD  EQU   8                        CESD ADDRESS             REGS   01240021
ENTRYCD  EQU   X'02'                    ENTRY CARD RECIEVED- MASK       01260021
OVERLYBT EQU   X'20'                    OVERLAY MASK               DISP 01280021
ENTPTSYM EQU   X'04'                    SYMBOLIC ENTRY PT MASK          01300021
ENTPTRCD EQU   X'08'                    ENTRY PT RECVD IND.             01320021
NULL     EQU   X'07'                                               DISP 01340021
DISP     EQU   0                        REL DISP TO SAVE CALLERS REGS   01360021
*                                                                       01380021
*********************************************************************** 01400021
*              SAVE ALL REGISTERS                                     * 01420021
*********************************************************************** 01440021
         STM   14,12,DISP(13)                                           01460021
         USING ENT00050+2,BASE                                          01480021
         USING APTDSECT,APT                                             01500021
ENT00050 BALR  BASE,0                                                   01520021
         BC    15,MODID+6              BRANCH AROUND MODULE IDENT       01540021
MODID    DC    C'01MENT'                                                01560021
         ST    13,SAVERG13                                              01580021
         NI    WORKBYTE,X'00'           INITIALIZE WORKBYTE TO ZERO     01600021
*********************************************************************** 01620021
*              CHAIN THROUGH CESD FINDING ALIASES - SCAN CESD FOR A   * 01640021
*               SYMBOL MATCH                                          * 01660021
*                  1) MATCH - SAVE ESD ID IN ALIAS TABLE              * 01680021
*                  2) NO MATCH - PUT 0 FOR ESDID IN ALIAS TABLE       * 01700021
*********************************************************************** 01720021
*********************************************************************** 01740021
*              ALIAS  TABLE  BUILDER                                    01760021
*********************************************************************** 01780021
*              THE FOLLOWING EXPLAINS THE ALIAS TABLE BUILDING TECH   * 01800021
*                                                                     * 01820021
*                1) THE ALIAS SYMBOL IS PLACED IN THE ALIAS TABLE  IN * 01840021
*                   BYTE LOCATIONS 1-8                                * 01860021
*                2) IF A MATCH BETWEEN THE ALIAS SYMBOL AND AN SD OR  * 01880021
*                   LR SYMBOL IN SEG 1 IS NOT FOUND - A 0 IS PUT BYTES* 01900021
*                   9 AND 10 OF THE ALIAS TABLE                       * 01920021
*                3) IF A MATCH IS FOUND THE ESD ID OF THIS SYMBOL IN  * 01940021
*                   THE ALIAS CHAIN IS SAVED IN BYTES 9 AND 10 OF THE * 01960021
*                   ALIAS TABLE - THIS ESDID (OR POINTER TO THE CESD) * 01980021
*                   POINTS TO A LINE OF ESD TYPE NULL (07 HEX)FOUND IN* 02000021
*                   BYTE 8 OF THE CESD ENTRY - IN BYTES 10-12 THE     * 02020021
*                   ADDRESS OF LR OR SD IS SAVED - BYTES 13 AND 14 ARE* 02040021
*                   NOT USED - BYTES 15-16 CONTAIN THE ESD ID OF THE  * 02060021
*                   SD WHICH THE ALIAS SYMBOL MATCHED OR THE SD IN    * 02080021
*                   WHICH THE LR(WHICH THE ALIAS SYMBOL MATCHED) RESID* 02100021
*                   ES -  THIS ESD ID IS SAVED FOR SCATTER LOADING    * 02120021
*                4) THE CESD ENTRIES WHICH WERE CHAINED TOGETHER IN THE 02140021
*                   FIRST PASS TO RECORD ALIAS SYMBOLS ARE NOW USED TO* 02160021
*                   RECORD THE SYMBOL'S ADDRESS AND ID WHEN NEEDED.   * 02180021
*                5) THE INFORMATION IS USED BY THE FINAL PROCESSOR IN * 02200021
*                   STOWING ALIASES                                   * 02220021
*********************************************************************** 02240021
*                                                                       02260021
ENT00150 L     ALIASADD,ALCB       ADDRESS OF FIRST ALIAS ITEM          02280021
         L     ALIASTBL,ALAS       ADDRESS OF ALIAS TABLE               02300021
         L     TEMP1,CHESD         ADDRESS OF CESD                      02320021
         LH    TEMP3,ENCDC         CESD CT                              02340021
ENT00155 LR    CESDADD,TEMP1            RESTORE CESD ADD                02360021
         LR    CESDCT,TEMP3             RESTORE CESD CT                 02380021
ENT00160 LTR   ALIASADD,ALIASADD        ARE  THERE ANY MORE ALIASES     02400021
         BC    8,ENT00200               NO /GO TO FIND ENTRY ADDRESS    02420021
         MVC   0(8,ALIASTBL),0(ALIASADD) MV ALIAS SYMBOL TO ALIAS TABLE 02440021
         MVI   8(ALIASADD),NULL           SET THIS CESD LINE- TYPE NULL 02460021
         L     WORK1,8(ALIASADD)       ADDREAS OF NEXT ALIAS SYMBOL     02480021
ENT00190 LA    CESDADD,16(CESDADD)      INCREMENT TO FIRST(NEXT) ENTRY  02500021
         CLC   0(8,CESDADD),0(ALIASTBL) DOES ALIAS SYM = THIS CESD SYM  02520021
         BC    7,ENT00192               NO /BRANCH TO TEST END CESDLOOP 02540021
         LR    ERRSYM,CESDADD           ADDRESS OF ALIAS TABLE          02560021
         MVC   9(7,ALIASADD),9(CESDADD) MOVE ADD OF LR OR SD TO NULL    02580021
*                                       LINE,ALSO MOVE ID/L FIELD       02600021
         LA    WORK2,ENT00192           RETURN ADDRESS IF TYPE NE SD,LR 02620021
         LA    TEMP4,ENT01191           RETURN IF TYPE = LR             02640021
         BAL   RETURN,ENT01800          GO TO TEST TYPE FOR SD OR LR    02660021
         SR    CESDADD,TEMP1           RELATIVE CESD ADD OF SYMBOL      02680021
         SRL   CESDADD,4               ID OF SYMBOL                     02700021
         STH   CESDADD,14(ALIASADD)    PUT ID OF SD IN LD LINE          02720021
ENT01191 CLI   12(ERRSYM),X'01'         IS  SD OR LR IN SEG 1           02740021
         BC    7,ENT00198               NO / GO TO PRINT ERROR MESSAGE  02760021
         SR    ALIASADD,TEMP1           RELATIVE ADD OF AE LINE         02780021
         SRL   ALIASADD,4               ID OF AE LINE                   02800021
ENT00191 STH   ALIASADD,8(ALIASTBL)     PUT ID OF AE LINE IN ALIAS TBL  02820021
         LA    ALIASTBL,10(ALIASTBL)    INCREMENT TO NEXT ALIAS SYMBOL  02840021
         LA    ALIASADD,0(WORK1)        RESTORE ADD OF NEXT ALIAS SYM   02860021
         BC    15,ENT00155              BRANCH TO TEST END OF ALIASLOOP 02880021
ENT00192 BCT   CESDCT,ENT00190          BRANCH IF CESD LOOP NOT DONE    02900021
ENT00197 SR    ALIASADD,ALIASADD                                        02920021
         BC    15,ENT00191              BRANCH STORE 0 ID - CONTINUE    02940021
*                                                                       02960021
ENT00198 LH    ERRCODRG,ERRPARM9        ERROR- ALIAS SYMBOL NOT IN SEG1 02980021
         LA    RETURN,ENT00197          RETURN ADDRESS                  03000021
         BC    15,ENT00500              GO TO /GO TO ERROR ROUT.        03020021
*********************************************************************** 03040021
*              DETERMINE ENTRY POINT OF MODULE                          03060021
*********************************************************************** 03080021
ENT00200 TM    APT1,ENTPTRCD       ENTRY POINT RECEIVED                 03100021
         BC    8,ENT01250               NO / GO FIND 1ST GOOD BYTE SEG1 03120021
         TM    APT1,ENTPTSYM       ENTRY PT SYMBOLIC                    03140021
         BC    8,ENT01200               NO - GO FIND ABSOLUTE           03160021
*********************************************************************** 03180021
*              ENTRY POINT IS SYMBOLIC                                * 03200021
*********************************************************************** 03220021
ENT00300 LA    CESDADD,16(CESDADD)      INC CESD ADD                    03240021
         CLC   EPSM(8),0(CESDADD)  DOES ENTRY SYMBOL =  CESD SYMBOL     03260021
         BC    8,ENT00600               YES / GO TO FIND ITS ADD        03280021
ENT00350 BCT   CESDCT,ENT00300          BRANCH IF LOOP NOT DONE         03300021
         LH    ERRCODRG,ERRPARM3       SYMBOL NOT SD,LR IN CESD-ENTRY   03320021
         TM    APT1,ENTRYCD        HAS AN ENTRY CD BEEN RECEIVED        03340021
         BC    1,ENT00400               YES                             03360021
         LH    ERRCODRG,ERRPARM4       SYMBOL NOT SD,LR IN CESD-ENTRY   03380021
ENT00400 LA    ERRSYM,EPSM         ADDRESS OF SYMBOL                    03400021
ENT00450 LA    RETURN,ENT01100          RETURN ADDRESS                  03420021
ENT00500 L     BRANCH,ERDIG        ADD OF ERROR DIAGNOSTIC ROUTINE      03440021
         BCR   15,BRANCH                GO TO ERROR DIAGNOTIC ROUTINE   03460021
ENT00600 MVC   LKDENTPT+1(3),9(CESDADD) SAVE ENTRY PT ADDRESS           03480021
         LA    WORK2,ENT00350           RETURN IF TYPE NOT ACCEPTABLE   03500021
         LA    TEMP4,ENT00800           RETURN IF TYPE = SD OR LR       03520021
         BAL   RETURN,ENT01800          GO TO TEST TYPE- SD,LR,SD W RLD 03540021
ENT00800 CLI   12(CESDADD),X'01'        ENTRY PT IN SEGMENT 1           03560021
         BC    7,ENT01700               NO / INVALID ENTRY POINT        03580021
ENT00900 SR    CESDADD,TEMP1            RELATIVE ADD                    03600021
         SRL   CESDADD,4                CS  ID                          03620021
         STH   CESDADD,LKDENTID         SAVE ID                         03640021
         OC    LKDENTPT(3),LKDENTPT    IS ENTRY POINT ADD = 0           03660021
         BC    8,ENT01000              YES                              03680021
         NI    PDSE8,X'DF'         SET IND IN PDS - ADD NOT = 0         03700021
ENT01000 MVC   PDSE16(2),LKDENTID   PUT ID IN PDS                       03720021
         MVC   PDSE11(3),LKDENTPT+1 PUT ADD IN PDS                      03740021
*********************************************************************** 03760021
*              RESTORE ALL REGISTERS - RETURN TO CALLER               * 03780021
*********************************************************************** 03800021
ENT01100 L     13,SAVERG13              RESTORE ADD OF CALLERS SAVEREA  03820021
         LM    14,12,DISP(13)           RESTORE USER REGISTERS          03840021
         BCR   15,14                    RETURN TO CALLER                03860021
*********************************************************************** 03880021
*              ENTRY POINT  IS AN ASSEMBLED ADDRESS FROM AN END CARD  * 03900021
*********************************************************************** 03920021
ENT01200 MVC   LKDENTID(2),PDSE16  PUT ID ON BOUNDRY                    03940021
         LH    CESDADD,LKDENTID         LOAD ID                         03960021
         LH    ERRCODRG,ERRPARMA        INVALID ENTRY PT ID -NO PT ADD  03980021
         LTR   TEMP4,CESDADD            SAVE ID AND TEST FOR ZERO       04000021
         BC    8,ENT00450               GO PRINT ERROR - INVALID ID     04020021
         CLR   TEMP4,TEMP3              DOES ID POINT INTO CESD         04040021
         BC    2,ENT00450               NO-GO PRINT ERROR- INVALID ID   04060021
         SLL   CESDADD,4               RELATIVE CESD ADD                04080021
         AR    CESDADD,TEMP1           ADDRESS OF CESD ENTRY            04100021
         MVN   WORKBYTE(1),8(CESDADD)  MOVE TYPE TO TEST IT             04120021
         TM    WORKBYTE,X'03'          IS TYPE = SD,PC OR LR            04140021
         BC    4,ENT00450              NO - ERROR ON ID                 04160021
         SLL   TEMP4,2                  RCT RELATIVE ADD                04180021
         A     TEMP4,RECNT         RCT ADD OF RC FOR THIS CS            04200021
         TM    APTSWS,X'20'        IS END PT ADD TO BE RELOCATED        04220021
         BC    8,ENT01230         ABSOLUTLY - NO                        04240021
         LA    TEMP4,8(CESDADD)        REG POINTS TO TYPE- ADDRESS      04260021
ENT01230 L     TEMP4,0(TEMP4)     LOAD RC OR CESD ADD TYPE              04280021
         A     TEMP4,EPSM          ADD ASSEMBLED ADD TO RC              04300021
         LA    TEMP4,0(TEMP4)          CLEAR HI ORDER BYTE              04320021
         ST    TEMP4,LKDENTPT           SAVE ADD ON BOUNDRY             04340021
         LH    ERRCODRG,ERRPARMB        INVALID ENTRY PT ADD-PRINT ADD  04360021
         L     WORK1,8(CESDADD)         LINKED ADD OF CONTROL SEC       04380021
         LA    WORK1,0(WORK1)           CLEAR HI BYTE TO ZERO           04400021
         CR    TEMP4,WORK1              IS ENTRY PT ADD GTR CONT SEC AD 04420021
         BC    4,ENT01240               NO,GO TO PRINT ERROR MESS       04440021
         A     WORK1,12(CESDADD)        UPPER BOUND OF CONTROL SECTION  04460021
         LA    WORK1,0(WORK1)           CLEAR HI BYTE TO ZERO           04480021
         CLR   TEMP4,WORK1              IS ENTRY POINT LESS THAN UPP BD 04500021
         BC    11,ENT01240              NO,GO TO PRINT ERROR MESSAGE    04520021
         CLI   12(CESDADD),X'01'       IS ENTRY POINT IN SEG 1          04540021
         BC    8,ENT00900               YES / GO TO SAVE ENTRY POINT    04560021
         LH    ERRCODRG,ERRPARM7        ENTRY POINT NOT IN SEG 1 PARM   04580021
ENT01240 MVI   LKDENTPT,X'00'           SET HI BYTE OF ADD TO ZERO      04600021
         UNPK  EPSM(8),LKDENTPT(5) UNPACK 4 BYTE ADDRESS                04620021
         TR    EPSM(8),TABLE-C'0'  TRANSLATE BINARY TO HEX              04640021
         LM    EVEN,BRANCH,EPSM                                         04660021
         SRDL  EVEN,8                                                   04680021
         STM   EVEN,BRANCH,EPSM                                         04700021
         MVI   EPSM,C'0'           SET HI BYTE TO ZERO                  04720021
         BC    15,ENT00400              GO TO ERROR ROUTINE             04740021
*********************************************************************** 04760021
*              NO ENTRY POINT SPECIFIED BY PROBLEM PROGRAM            * 04780021
*********************************************************************** 04800021
ENT01250 MVC   LKDENTPT+1(3),THREEFS   SET LKDENTPT TO HIGHEST POS ADD  04820021
         LR    TEMP4,TEMP1                                              04840021
ENT01300 LA    TEMP4,16(TEMP4)          INC TEMP1 BY 16 (TEMP1 PTST     04860021
         MVC   WORKBYTE(1),8(TEMP4)     MOVE TYPE TO WORKBYTE           04880021
         NI    WORKBYTE,X'1F'           REMOVE TOP 3BITS -              04900021
         CLI   WORKBYTE,X'0C'           IS TYPE NOT ACCEPTABLE          04920021
         BC    2,ENT01400               YES / CONTINUE LOOP             04940021
         TM    WORKBYTE,X'13'           IS TYPE = SD OR PC(NOT DELETE)  04960021
         BC    5,ENT01400               NO/ GO TO TEST END OF LOOP      04980021
         CLI   12(TEMP4),X'01'          IS CS  IN  SEG 1                05000021
         BC    7,ENT01400               NO / GO TO TEST END OF LOOP     05020021
         CLC   9(3,TEMP4),LKDENTPT+1   IS THIS CS ADD LESS PRV ADD      05040021
         BC    11,ENT01400              NO / GO TEST END OF LOOP        05060021
         LR    CESDADD,TEMP4            SAVE CESD ADD OF LOW CS ADD     05080021
         MVC   LKDENTPT+1(3),9(TEMP4)   SAVE NEW LOW CS ADD             05100021
ENT01400 BCT   CESDCT,ENT01300          BRANCH IF LOOP NOT DONE         05120021
         CLC   LKDENTPT+1(3),THREEFS    HAS A CS BEEN FOUND             05140021
         BC    7,ENT00900               YES / SAVE ADD AND ID           05160021
         TM    PDSE7,OVERLYBT      IS PROGRAM IN OVERLAY                05180021
         BC    8,ENT01100               NO/ GO TO GO TO ERROR ROUTINE   05200021
         LH    ERRCODRG,ERRPARM8        NO ENTRY PT DEFINED IN SEG 1    05220021
         BC    15,ENT00450              GO TO - GO TO ERROR DIAG        05240021
*                                        NO ENTRY PT DEFINED BY PRB.PG. 05260021
ENT01700 LH    ERRCODRG,ERRPARM5        SYMBOL FROM ENTRY CD NOT IN SG1 05280021
         TM    APT1,ENTRYCD        HAS AN ENTRY CARD BEEN RECEIVED      05300021
         BC    1,ENT00400               YES / GO TO PASS RETURN ADD     05320021
         LH    ERRCODRG,ERRPARM6        SYMBOL FROM END CARD NOT IN SG1 05340021
         BC    15,ENT00400              GO TO PASS RETURN ADDRESS       05360021
*********************************************************************** 05380021
*              TEST TYPE = HEX(08,03,08)                                05400021
*********************************************************************** 05420021
ENT01800 MVN   WORKBYTE(1),8(CESDADD)   MOVE LOW 4 BITS TO TEST TYPE    05440021
         CLI   WORKBYTE,X'08'           IS TYPE AN ACCEPTABLE ONE       05460021
         BCR   2,WORK2                  NO /  RETURN                    05480021
         CLI   WORKBYTE,X'03'           IS TYPE = LR                    05500021
         BCR   8,TEMP4                  YES / RETURN                    05520021
         TM    WORKBYTE,X'07'           IS NOT SD OR SD WITH RLDS OR LR 05540021
         BCR   5,WORK2                  YES / RETURN                    05560021
         BCR   15,RETURN                RETURN - SD                     05580021
THREEFS  DC    XL3'FFFFFF'                                              05600021
LKDENTPT DS    F                        ENTRY POINT                     05620021
LKDENTID DS    H                        ENTRY POINT ID                  05640021
SAVERG13 DS    F                        SAVE AREA FOR ADDRESS OF CALL-  05660021
*                                                                       05680021
WORKBYTE DC    X'00'                    USED TO TEST TYPE OF ESDS       05700021
*********************************************************************** 05720021
*              ERROR  PARAMETERS -  ALL ARE SEVERITY 3 - NON EXECUTABLE 05740021
*********************************************************************** 05760021
*                                       DISP      SEVERITY   MESS.NO.   05780021
ENT3     EQU   X'2305'                  2         3         05          05800021
ENT4     EQU   X'2306'                  2         3         06          05820021
ENT5     EQU   X'2307'                  2         3         07          05840021
ENT6     EQU   X'2308'                  2         3         08          05860021
ENT7     EQU   X'2309'                  2         3         09          05880021
ENT8     EQU   X'030B'                  0         3         0B          05900021
ENT9     EQU   X'222F'                  2         2         2F          05920021
ENTA     EQU   X'0303'                  0         3         03          05940021
ENTB     EQU   X'2303'                  2         3         03          05960021
         DS    0F                                                       05980021
ERRPARM3 DC    AL2(ENT3)                SYMBOL NOT AN EXTERNAL NAME-ENT 06000021
ERRPARM4 DC    AL2(ENT4)                SYMBOL NOT AN EXTERNAL NAME-END 06020021
ERRPARM5 DC    AL2(ENT5)                SYMBOL NOT DEFINED IN ROOT -ENT 06040021
ERRPARM6 DC    AL2(ENT6)                SYMBOL NOT DEFINED IN ROOT -END 06060021
ERRPARM7 DC    AL2(ENT7)                ENTRY POINT ADDRESS NOT IN ROOT 06080021
ERRPARM8 DC    AL2(ENT8)               NO CONTROL SECTION IN ROOT       06100021
ERRPARM9 DC    AL2(ENT9)                INVALID ALIAS ENTRY POINT \SEG1 06120021
ERRPARMA DC    AL2(ENTA)               INVALID ENTRY PT - NO ADDRESS    06140021
ERRPARMB DC    AL2(ENTB)               INVALID ENTRY PT -  ADDRESS      06160021
*********************************************************************** 06180021
*              TABLE OF HEX CHARACTERS - USED IN BINARY CONVERSION    * 06200021
*********************************************************************** 06220021
TABLE    DC    C'0'                                                     06240021
         DC    C'1'                                                     06260021
         DC    C'2'                                                     06280021
         DC    C'3'                                                     06300021
         DC    C'4'                                                     06320021
         DC    C'5'                                                     06340021
         DC    C'6'                                                     06360021
         DC    C'7'                                                     06380021
         DC    C'8'                                                     06400021
         DC    C'9'                                                     06420021
         DC    C'A'                                                     06440021
         DC    C'B'                                                     06460021
         DC    C'C'                                                     06480021
         DC    C'D'                                                     06500021
         DC    C'E'                                                     06520021
         DC    C'F'                                                     06540021
*                                                                       06560021
         HEWAPT                                                         06580021
         END                                                            06600021
./  ADD  SSI=62730936,NAME=HEWLFESD
         TITLE 'HEWLFESD  ESD CARD PROCESSOR'                           00050021
*FUNCTION/OPERATION: THIS MODULE PROCESSES THE ESD CARDS PRODUCED BY  * 00100021
*      ASSEMBLERS AND COMPILERS. IT ALSO PROCESSES THE ESD RECORDS    * 00150021
*      WHICH ARE THE OUTPUT OF A PREVIOUS LINK EDIT. AS EACH ESD ITEM * 00200021
*      IS ENCOUNTERED,IT IS ENTERED IN THE COMPOSITE ESD. IF THE      * 00250021
*      SYMBOL IS UNIQUE, THE ITEM IS ENTERED IN A NEW LINE, OTHERWISE * 00300021
*      THE HIERARCHIAL RULES OF ESD TYPES APPLY AND THE EXISTING      * 00350021
*      LINE IS MODIFIED. FOLLOWING ARE A FEW EXAMPLES OF COLLECTION.  * 00400021
*      SECTION DEFINITION + EXTERNAL REFERENCE = SECTION DEFINITION   * 00450021
*      LABEL DEFINITION + EXTERNAL REFERENCE = LABEL DEFINITION       * 00500021
*      EXTERNAL REFERENCE + EXTERNAL REFERENCE = EXTERNAL REFERENCE   * 00550021
*                                                                     * 00600021
*      PSEUDO REGISTERS MAY ONLY COLLECT PSEUDO REGISTERS,E.G.        * 00650021
*      A PR CANNOT COLLECT AVER BUT MAY ONLY COLLECT A PR .           * 00700021
*                                                                     * 00750021
*      IN THE PROCESS OF CREATING THE COMPOSITE ESD, THE ESD PROCESSOR* 00800021
*      ALSO CREATES THE RENUMBERING TABLE WHICH IS A TRANSLATION TABLE* 00850021
*      USED TO CHANGE ID'S FROM ESD-RELATIVE, TO CESD-RELATIVE.       * 00900021
*                                                                     * 00950021
*ENTRY POINTS  HEWLFESD - BEGINNING OF CSECT  -  LA  13,SAVEAREA      * 01000021
*                                                  BALR 14,15         * 01050021
*INPUT:                      -REGISTERS-                              * 01100021
*      REGISTER 4 - BYTE COUNT OF ESD ITEMS TO BE PROCESSED           * 01150021
*      REGISTER 5- ID OF FIRST ESD ITEM INPUT TO ESD PROCESSOR        * 01200021
*      REGISTER 6- ADDRESS OF FIRST ESD ITEM TO BE PROCESSED          * 01250021
*                            - OTHER INPUT -                          * 01300021
*      THE BASIC INPUT IS THE ESD RECORD ITSELF WHICH IS READ BY THE  * 01350021
*      INPUT PROCESSOR                                                * 01400021
*                                                                     * 01450021
*OUTPUT:  THE COMPOSITE EXTERNAL SYMBOL DICTIONARY(CESD)              * 01500021
*         THE RENUMBERING TABLE(RNT)                                  * 01550021
*           NEITHER OF THE ABOVE TABLES IS OUTPUT TO AN I/O DEVICE    * 01600021
*           BUT THEY ARE USED IN SUBSEQUENT PROCESSES                 * 01650021
*EXTERNAL ROUTINES: HEWLFLOG- WRITES ERROR DIAGNOSTIC CODE            * 01700021
*          HEWLCDLK - DELINK ROUTINE - IF AN RLD ITEM REQUIRES A      * 01750021
*                     DELINK VALUE, THIS ROUTINE SAVES IT IN THE      * 01800021
*                     DELINK TABLE                                    * 01850021
*                     CALLING SEQUENCE - BALR 14,15                   * 01900021
*EXITS-NORMAL:  AFTER ALL ESD ITEMS INPUT HAVE BEEN PROCESSED,CONTROL * 01950021
*               RETURNS TO THE INPUT PROCESSOR VIA REGISTER 14        * 02000021
*EXITS-ERROR:   THERE ARE NO ERROR EXITS TO THE SYSTEM. ALL ERRORS    * 02050021
*               ARE RELAYED THROUGH THE ERROR DIAGNOSTIC ROUTINE      * 02100021
*               WHICH THEN DECIDES WHETHER TO PROCEED OR STOP         * 02150021
*                                                                     * 02200021
*TABLES/WORK AREAS: NO INTERNAL TABLES ARE USED                       * 02250021
*ATTRIBUTES: REUSABLE                                                 * 02300021
*NOTES: N/A                                                           * 02350021
HEWLFESD CSECT                                                          02400021
**********************************************************************  02450021
*437000-442000                                                   S01904 02460021
*A442000,435000                                                   M4320 02462021
*A342500                                                        OX00027 02464000
*C305000,D307000-308000                                         OY00577 02466001
*SEE FIX FOR X4241,ALSO A721600-721700,A580667                  OX00822 02466102
*C081000                                                        OY00131 02468001
*SEE FIX FOR X4241                                               XM1786 02468402
*C343000,C348000                                                OX02010 02479202
*A359500-359960,C360000                                          XM4628 02484402
*     SEE FIX FOR XM4628                                        OX02833 02489602
*C65400                                                   OX3508,OY3042 02491602
*I533000,D579520-580532                                   OX3919,OY3210 02493602
*C262000-263000,C486000,I486000                                 XA05436 02494003
* SEE FIX FOR XA05436                                           YA03749 02494403
*C359600-359700,C359900,C359940,D359960-360000                  XA04649 02494503
* SEE FIX FOR XA04649                                           YA03751 02494603
*I533992,D533996                                        XA06871,ZA00835 02494703
* C263000,D263500-264960,D486500-486992,C492000,I499500         ZA01413 02521037
* I509000,C589000,C594000-595000,I597000,I721000                ZA01413 02531037
*C081000                                                       @XA11151 02547437
        ENTRY HEWLCE30                                                  02573737
         ENTRY HEWLCTTY                                                 02600021
        ENTRY HEWLCRID                                                  02700021
SYSRET   EQU   14                                                       02800021
RNT      EQU   5                                                        02900021
TEMP2    EQU   4                                                        03000021
CESDCHN  EQU   14                                                       03100021
SD       EQU   X'00'                                                    03200021
NULL     EQU   X'07'                                                    03300021
CESDID   EQU   9                                                        03400021
CESDORG  EQU   9                                                        03500021
ESDORG   EQU   9                                                        03600021
CESDSEG  EQU   12                                                       03700021
RNTTYPE  EQU   3                                                        03800021
RNTFLAG  EQU   2                                                        03900021
CM       EQU   X'05'                                                    04000021
TEMP     EQU   10                                                       04100021
CESDLEN  EQU   13                                                       04200021
SYSBRNCH EQU   15                                                       04300021
ESDLEN   EQU   13                                                       04400021
CESDTYPE EQU   8                                                        04500021
CESDNAME EQU   0                                                        04600021
ESDNAME  EQU   0                                                        04700021
CESDTF   EQU   10                                                       04800021
CESDXR   EQU   7                                                        04900021
LABELDEF EQU   X'01'                                                    05000021
LD       EQU   X'01'                                                    05100021
PC       EQU   X'04'                                                    05200021
LR       EQU   X'03'                                                    05300021
INTERNAL EQU   13                                                       05400021
SUBTYPE  EQU   13                                                       05500021
ER       EQU   X'02'                                                    05600021
ESDSEG   EQU   12                                                       05700021
PR       EQU   X'06'                                                    05800021
ESDTYPE  EQU   8                                                        05900021
ESDADD   EQU   6                                                        06000021
APT      EQU   2                                                        06100021
CESD     EQU   3                                                        06200021
BASE     EQU   12                                                       06300021
AUTOLIB  EQU   X'40'                                                    06400021
ESDWRITE EQU   X'01'                                                    06500021
NOLENBIT EQU   X'40'                                                    06600021
TEMP1    EQU   8                                                        06700021
TEMP4    EQU   0                                                        06800021
TEMP3    EQU   1                                                        06900021
OVBIT    EQU   X'20'                                                    07000021
TBLONUM  EQU   X'10D'                                                   07100021
REGSAVE  EQU   76                                                       07200021
OBJCTMOD EQU   X'20'                                                    07300021
RETURN   EQU   11                                                       07400021
BYTECNT  EQU   4                                                        07500021
RNTID    EQU   0                                                        07600021
RNTR     EQU   4                                                        07700021
COM      EQU   X'04'                                                    07800021
ESDOVFLW EQU   X'419'                                                   07900021
RNTOFLOW EQU   X'41A'                                                   08000021
ERR23    EQU   X'417'                                  @XA11151,OY00131 08100037
WX       EQU   X'0A'               WXTERN ESD ITEM                      08200021
WRKREG0  EQU   0                       WORK REGISTER 0                  08300021
WRKREGE  EQU   14                      WORK REGISTER 14                 08400021
WRKREGF  EQU   15                      WORK REGISTER 15                 08500021
         USING HEWLFESD,BASE                                            08600021
         USING APTDSECT,APT   ESTABLISH ADDRESSABILITY FOR APT          08700021
         STM   SYSRET,BASE,12(INTERNAL) SAVE CALLERS REGISTERS          08800021
         LR    BASE,SYSBRNCH            BASE IN 12                      08900021
         B     OVERNAME                BRANCH AROUND MODULE IDENT       09000037
MODID    DC    C'HEWLFESD'                                              09050037
         DC    C'10/15/75'                                              09100037
         DC    C'OZ02229 '                                              09150037
         DC    0H'0'                                                    09200037
OVERNAME ST    INTERNAL,SAVEAREA        SAVE ADDRESS OF SAVEAREA        09250037
         ST    SYSRET,REG24SA                                           09300021
         TM    APT1,OBJCTMOD       IS INPUT OBJECT MODULE               09400021
         BC    1,ESD01                  NO BRANCH                       09500021
         CH    BYTECNT,C56              IS BYTE COUNT GR 56             09600021
         BC    2,BADCARDO               YES ERROR                       09700021
         BC    15,ESD02                                                 09800021
ESD01    CH    BYTECNT,C240             IS BYTE COUNT GR 240            09900021
         BC    2,BADCARDL               YES ERROR                       10000021
ESD02    SRL   BYTECNT,4                NUMBER OF ESD ITEMS             10100021
         LTR   BYTECNT,BYTECNT  IS BYTE COUNT LESS THAN 16 DECIMAL      10200021
         BC    8,BADCARDO    NO-CONTINUE--YEW--PRINT ERROR              10300021
         STM   BYTECNT,RNT,REGSA4                                       10400021
*              INITIALIZE ALL BASES AND INDEXES                         10500021
         L     RNT,RECNT           RENUMBERING TABLE BASE REGISTER      10600021
         L     CESD,CHESD          CESD BASE REGISTER                   10700021
*              EXTRACT BITS 5,6,7 OF TYPE AND MAKE IT A BYTEFULL        10800021
ESD1     MVC   TESTYPE(1),ESDTYPE(ESDADD)                               10900021
*              MOVE ESD TYPE TO INTERNAL WORK AREA                      11000021
         LR    CESDXR,CESD              SAFETY FOR IDCESD               11100021
         NI    ESDTYPE(ESDADD),X'1F'   CLEAR ALL FLAGS EXCEPT DELETE    11200021
         NI    TESTYPE,X'0F'       CLEAR DELETE BIT                     11300021
*              IS ESD TYPE PR                                           11400021
         TM    APT1,OBJCTMOD       IS INPUT OBJECT MODULE               11500021
         BC    1,ESD1A0                NO-BRANCH                        11600021
         NI    ESDTYPE(ESDADD),X'EF'   CLEAR DELETE BIT                 11700021
ESD1A0   CLI   TESTYPE,PR                                               11800021
         BC    8,ESD2                                                   11900021
*              YES-BRANCH TO ESD2 NOT TO DESTROY ALIGNMENT FIELD        12000021
*              NO-CONTINUE                                              12100021
         MVC   ESDSEG(1,ESDADD),CSNO+1                                  12200021
*              SET ESD SEGMENT NUMBER FIELD TO THE CURRENT SEGMENT      12300021
*              IF AUTOMATIC LIBRARY CALL IS IN OPERATION, THE CURRENT * 12400021
*              SEGMENT NUMBER IS ONE                                  * 12500021
         TM    APT1,AUTOLIB                                             12600021
         BC    8,ESD1A                                                  12700021
         MVI   ESDSEG(ESDADD),1                                         12800021
*              IS ESD TYPE AN ER                                      * 12900021
ESD1A    CLI   TESTYPE,ER          IS TYPE ER                           13000021
         BC    8,ESD1B             YES                                  13100021
         CLI   TESTYPE,WX          IS TYPE WX                           13200021
         BC    7,ESD2              NO                                   13300021
*              NO-BRANCH TO ESD2                                        13400021
*              YES-CONTINUE                                             13500021
*              CLEAR BYTE 9 OF THE ER FOR AUTOMATIC LIBRARY CALL      * 13600021
ESD1B    XC    ESDORG(3,ESDADD),9(ESDADD)                               13700021
         TM    APT1,OBJCTMOD                                            13800021
*              IS INPUT OBJECT MODULE                                   13900021
*              NO-BRANCH TO ESD2                                        14000021
*              YES-CONTINUE                                             14100021
*              ALL ERS  FROM OBJECT MODULES ARE PURE ERS(BYTE 13 = 0) * 14200021
         BC    1,ESD2                                                   14300021
         MVI   SUBTYPE(ESDADD),X'00'                                    14400021
ESD2     L     TEMP,RCCB                                                14500021
*              ARE THERE ANY REPLACE/CHANGE CARDS IN CHAIN            * 14600021
         LTR   TEMP,TEMP                                                14700021
         BC    8,ESD3                                                   14800021
*              YES-CONTINUE BY BRANCHING TO REPLACE/CHANGE CARD PROCESS 14900021
         L     INTERNAL,RPCHGADD                                        15000021
         BALR  RETURN,INTERNAL                                          15100021
*              REPLACE/CHANGE CARD PROCESSOR RETURNS HERE               15200021
ESD3     CLI   TESTYPE,PC                                               15300021
*              IS ESD TYPE PRIVATE CODE                                 15400021
*              YES-BRANCH TO ENTER PC AT CURRENT LINE + 1               15500021
*              NO-CONTINUE TESTING FOR LABEL DEFINITION                 15600021
         BC    8,ESD20                                                  15700021
         CLI   TESTYPE,NULL            IS TYPE A NULL                   15800021
         BC    8,RENUMBER              YES , BRANCH                     15900021
*              IS ESD TYPE LABEL DEFINITION                             16000021
         CLI   TESTYPE,LD                                               16100021
*              NO-BRANCH TO ESD4 TO SEARCH THE CESD                     16200021
*              YES-CHANGE TYPE TO LR AND SET LABEL DEFINITION BIT ON    16300021
         BC    7,ESD4                                                   16400021
         MVI   TESTYPE,LR                                               16500021
         OI    INTERN1,LABELDEF                                         16600021
ESD4     LR    CESDXR,CESD                                              16700021
*              INITIALIZE CESD LOOP                                     16800021
         LH    CESDTF,ENCDC                                             16900021
         LA    CESDTF,1(CESDTF)                                         17000021
ESD5     LA    CESDXR,16(CESDXR)                                        17100021
*              IS CESD LOOP DONE                                        17200021
         BCT   CESDTF,ESD6                                              17300021
*              YES-BRANCH TO NON-RESOLUTION PROCESSING                  17400021
         B     ESD23             BRANCH TO ENTER ESD ITEM               17500021
*              NO-CONTINUE CHECKING FOR A SYMBOL MATCH                  17600021
ESD6     CLC   ESDNAME(8,ESDADD),CESDNAME(CESDXR)                       17700021
*              DO ESD AND CESD SYMBOLS MATCH                            17800021
*              NO-CONTINE CESD SEARCH                                   17900021
         BC    7,ESD5                                                   18000021
*              YES-PERFORM COLLECTION OF ESD AND CESD TYPES             18100021
*              EXTRACT CESD TYPE FOR TESTING PURPOSES                   18200021
ESD6A    EQU   *                                                        18300021
         MVC   CESDTTYP(1),CESDTYPE(CESDXR)                             18400021
         NI    CESDTTYP,X'0F'                                           18500021
         BAL   RETURN,IDCESD                                            18600021
         CLI   CESDTTYP,NULL                                            18700021
         BC    8,ESD5                                                   18800021
         CLI   TESTYPE,PR                                               18900021
*              IS ESD TYPE PSEUDO REGISTER                              19000021
*              YES-A PSEUDO REGISTER MAY ONLY COLLECT ANOTHER           19100021
         BC    8,ESD9                                                   19200021
*              NO-THE CESD TYPE MAY BE A PSEUDO REGISTER                19300021
*              IS CESD TYPE PSEUDO REGISTER OR NULL                     19400021
         CLI   CESDTTYP,PR                                              19500021
*              YES-RETURN TO CESD SEARCH                                19600021
         BC    8,ESD5                                                   19700021
         CLI   CESDTTYP,NULL       IS TYPE NULL                         19800021
         BC    8,ESD5                                                   19900021
*              NO-CONTINUE                                              20000021
*                                                                       20100021
*        PROCESS WX'S  HERE.  IF WX MATCHES ANYTHING BUT ANOTHER        20200021
*        WX, CHANGE THE TYPE TO ER AND PROCESS NORMALLY.                20300021
*                                                                       20400021
         CLI   TESTYPE,WX          IS INPUT ESD TYPE WX                 20500021
         BC    7,ESD6B             NO - BRANCH                          20600021
*        INPUT ITEM IS WX                                               20700021
         CLI   CESDTTYP,WX         IS CESD A WX                         20800021
         BC    7,ESD6C             NO - BRANCH                          20900021
         B     RENUMBER            BOTH TYPES ARE WX                    21000021
*        ONLY  INPUT ITEM IS WX                                         21100021
ESD6C    CLI   CESDTTYP,ER         IS CESD TYPE ER                      21200021
         BNE   ESD6D               NO                                   21300021
         CLI   SUBTYPE(CESDXR),X'80'  IS CESD ITEM A CONTROL CARD       21400021
         BC    2,ESD5              YES - CONTINUE CESD LOOP             21500021
ESD6D    MVI   TESTYPE,ER          CHANGE INPUT ITME TO ER              21600021
         MVI   ESDTYPE(ESDADD),ER                                       21700021
         B     ESD7                CONTINUE                             21800021
ESD6B    CLI   CESDTTYP,WX         IS CESD TYPE WX                      21900021
         BC    7,ESD7              NO - BRANCH                          22000021
*        ONLY CESD TYPE IS WX - CHANGE TO ER                            22100021
         NI    CESDTTYP,X'F7'          CHANGE CESD ITEM TO ER           22200021
         NI    CESDTYPE(CESDXR),X'F7'  CHANGE CESD ITEM TO ER           22300021
ESD7     TM    CESDTYPE(CESDXR),X'40' IS TYPE CHAIN                     22400021
*              YES-BRANCH TO RESET CESD INDEX TO CHAIN VALUE            22500021
         BC    1,ESD13                                                  22600021
*              IS CESD TYPE ER                                          22700021
         LA    RETURN,ESD23A                                            22800021
         CLI   CESDTTYP,ER                                              22900021
*              YES-SEE IF IT IS A CONTROL CARD                          23000021
         BC    8,ESD12                                                  23100021
*              IT IS NOT AN ER OR CONTROL CARD                          23200021
         CLI   TESTYPE,LR                                               23300021
*              IS ESD TYPE LR                                           23400021
         BC    7,ESD14                                                  23500021
*              NO-BRANCH FOR FURTHER EXAMINATION OF ESD TYPE            23600021
*              YES-PERFORM LABEL REFERENCE RESOLUTION                   23700021
         OI    INTERN1,X'02'                                            23800021
*              SET MATCH BIT ON INTERNALLY                              23900021
         BC    15,LABEL                                                 24000021
ESD9     CLI   CESDTYPE(CESDXR),PR                                      24100021
*              IS CESD TYPE A PSEUDO REGISTER                           24200021
         BC    7,ESD5                                                   24300021
*              NO-RETURN TO THE CESD SEARCH                             24400021
*              YES-BOTH ESD AND CESD TYPES ARE PSEUDO REGISTERS         24500021
         CLC   ESDLEN(3,ESDADD),CESDLEN(CESDXR)                         24600021
*              IS ESD LENGTH GREATER THAN CESD LENGTH                   24700021
*              NO-BRAN.H TO CHECK ALIGNMENT                             24800021
         BC    4,ESD10                                                  24900021
*              YES SET CESD LENGTH TO ESD LENGTH                        25000021
         MVC   CESDLEN(3,CESDXR),ESDLEN(ESDADD)                         25100021
ESD10    OC    CESDSEG(1,CESDXR),ESDSEG(ESDADD)                         25200021
*              SET CESD ALIGNMENT TO THE HIGHER OF THE TWO VALUES       25300021
         BC    15,RENUMBER                                              25400021
ESD12    CLI   SUBTYPE(CESDXR),X'80'                                    25500021
*              IS CESD SUBTYPE FOR A CONTROL CARD                       25600021
         BC    2,ESD5                                                   25700021
*              YES-CONTINUE CESD LOOP                                   25800021
*              NO-RESUME PROCESSING                                     25900021
         OI    INTERN1,MATCHER         SHOW WE MATCHED AN ER            26000021
*              IS ESD TYPE CM,SD,LR                                     26100021
         CLI   TESTYPE,X'02'            IS INPUT ITEM AN ER     XA05436 26200003
         BNE   ESD17                    BRANCH IF NOT   XA05436,ZA01413 26300037
         TM    ESDTYPE(ESDADD),X'10'    IS INCOMING ITEM DELETE/REPLACE 26500021
         BC    8,ESD12A                 NO-BRANCH                       26600021
         TM    CESDTYPE(CESDXR),X'10'   IS CESD TYPE DELETE/RELPACE     26700021
         BC    8,ESD15A                 NO                              26800021
*                                       CESD ITEM IS ALSO DEL/REP       26900021
         TM    SUBTYPE(CESDXR),X'08'         IS IT A DELETE             27000021
         BC    8,ESD15A                 NO BRANCH                       27100021
         TM    SUBTYPE(ESDADD),X'08'    IS ESD TYPE A DELETE            27200021
         BC    8,CESDDLNK               NO BRANCH                       27300021
         BC    15,ESD23                 DELETE-DELETE CAUSES BOTH LINES 27400021
*                                       TO BE ENTERED                   27500021
ESD12A   TM    SUBTYPE(ESDADD),X'07'    IS SUBTYPE A PURE ER            27600021
         BC    5,ESD17                                                  27700021
         NI    SUBTYPE(CESDXR),X'F7'    CLEAR DELETE BIT MAKING SUBTYPE 27800021
*                                       A REPLACE                       27900021
         TM    SUBTYPE(CESDXR),X'06'    IS SUBTYPE A NO CALL            28000021
*                                       OR LIBR ARY MEMBER              28100021
         BC    9,RENUMBER               NO BRANCH                       28200021
         OI    SUBTYPE(CESDXR),X'01'    YES IT IS-MARK CESD MATCHED     28300021
         BC    15,RENUMBER                                              28400021
*              RESET CESD INDEX TO CHAIN VALUE AND THEN BRANCH BACK TO* 28500021
*              EXAMINE THE TYPE OF THE LINE TO WHICH THIS WAS CHAINED * 28600021
ESD13    LH    TEMP,CESDCHN(CESDXR)                                     28700021
         SLL   TEMP,4                                                   28800021
         LA    CESDXR,0(TEMP,CESD)                                      28900021
         BC    15,ESD6A                                                 29000021
ESD14    CLI   TESTYPE,SD                                               29100021
*              IS ESD TYPE SD                                           29200021
         BC    7,ESD18                                                  29300021
*              NO-BRANCH FOR FURTHER EXAMINATION OF ESD TYPE            29400021
*              YES-PERFORM SECTION DEFINITION RESOLUTION                29500021
         CLI   CESDTTYP,CM                                              29600021
*              IS CESD TYPE CM                                          29700021
         BC    7,ESD15                                                  29800021
*              NO-CONTINUE RESOLUTION                                   29900021
*        YES! COMPARE LENGTH FIELDS.CM SHOULD BE  SMALLER OR EQUAL.     30000021
*        IF IT'S NOT WE'LL GIVE ERROR MESSAGE AND TAKE CM LENGTH.222116 30100021
         CLC   ESDLEN(3,ESDADD),CESDLEN(CESDXR)                         30200021
         BNL   ESD38                                                    30300021
         CLC   ESDLEN(3,ESDADD),ZERO3  IS SD LENGTH ZERO?               30400021
         BNE   COMMON1                YES. GOTO PRINT ERROR MSG OY00577 30500001
*                               'COMMON AND SUBROUTINE-SAME NAME        30600021
ESD14A   LR    TEMP3,CESDXR            NAME OF COMMON FOR MSG           30900021
         LH    TEMP4,ERR57             ERR NUMBER,SEVERITY,DISP         31000021
         L     SYSBRNCH,ERDIG          ADDR. OF ERROR ROUTINE           31100021
         BALR  SYSRET,SYSBRNCH         GO TO PRINT MSG                  31200021
         B     ESD38                   CONT. PROCESSING SD ITEM         31300021
*              BRANCH TO SECTION DEFINITION PROCESSING                  31400021
ESD15    CLI   CESDTTYP,LR                                              31500021
*              IS CESD TYPE LABEL REFERENCE                             31600021
         LA    RETURN,ESD15A                                            31700021
         BC    8,DBLDEF                                                 31800021
*              YES-BRANCH TO ERROR ROUTINE FOR DOUBLE LABEL DEFINITION  31900021
*              NO-CONTINUE                                              32000021
ESD15A   LA    RETURN,ENTER                                             32100021
*              BRANCH TO DELETE CHAIN ROUTINE FOR AUTOMATIC REPLACE   * 32200021
         BC    15,DELCHN                                                32300021
*              IF THE ESD TYPE IS NOT MARKED DELETE,RENUMBER IT       * 32400021
ESD16    TM    ESDTYPE(ESDADD),X'10'                                    32500021
         BC    8,RENUMBER                                               32600021
*              IT IS DELETE SO BRANCH TO DELETE CHAIN ROUTINE           32700021
         BC    15,ESD15A                                                32800021
*              IS SUBTYPE UNMATCHED LIBRARY MEMBER                      32900021
ESD17    OI    INTERN1,X'08'                                            33000021
         TM    8(CESDXR),X'10'         IS CESD DELETE                   33100021
         BC    1,CESDDLNK               DELINK IT                       33200021
ESD17A   TM    13(CESDXR),X'06'        IF CESD TYPE IS LIBRARY MEMBER   33300021
         BCR   9,RETURN                DECHAIN IT                       33400021
         TM    13(CESDXR),X'04'                                         33500021
         BCR   1,RETURN                                                 33600021
         L     SYSBRNCH,ADDDECHN                                        33700021
         BCR   15,SYSBRNCH                                              33800021
ESD18    CLI   TESTYPE,CM                                               33900021
*              IS ESDTYPE COMMON                                        34000021
         BC    7,ESD16                                                  34100021
*              NO-BRANCH FOR ER PROCESSING                            * 34200021
         OI    INTERN1,COM         INTERNAL COM BIT FOR DELINK OX00027  34250000
         CLI   CESDTTYP,PC                                      OX02010 34300003
*              IS CESD TYPE PC                                          34400021
         BC    8,ESD5                                                   34500021
*              YES-NO MATCH RESULTS                                     34600021
         LA    RETURN,ESD15A                                            34700021
         CLI   CESDTTYP,LR                                      OX02010 34800003
*              IS CESDTYPE A LABEL                                      34900021
         BC    8,DBLDEF                                                 35000021
*              YES-BRANCH TO ERROR FOR DOUBLE LABEL DEFINITION MESSAGE  35100021
*              SET ESD TYPE TO CESD TYPE                                35200021
*              SET ESD TYPE TO DELETE AND THEN BRANCH TO THE COMMON   * 35300021
*              ROUTINE                                                  35400021
         BC    15,COMMON                                                35500021
*                                                                     * 35600021
*                   UNMATCHED  PC  PROCESSING BEGINS HERE             * 35700003
*                                                                     * 35900021
ESD20    EQU   *                                                 XM4628 35950003
         BAL   RETURN,NXTLINE          GET NEXT CESD ITEM       XA04649 35960003
         NC    ESDLEN(3,ESDADD),ESDLEN(ESDADD) IS IT 0 LENGTH?   XM4628 35980003
         BNZ   ESD21                 BRANCH IF NO        XM4628,XA04649 35990003
         OI    TESTYPE,DELETE        MARK DELETE                 XM4628 35992003
         B     ENTER                 ENTER IN RNT        XM4628,XA04649 35994003
ESD21    TM    APT1,AUTOLIB                                             36100021
*              IS AUTOMATIC LIBRARY CALL IN OPERATION                 * 36200021
         BC    8,ESD22                                                  36300021
*              NO-BRANCH AROUND                                         36400021
*              YES-SET BIT 0 OF TYPE TO A ONE                           36500021
         OI    ESDTYPE(ESDADD),X'80'                                    36600021
ESD22    OI    APT1,ESDWRITE                                            36700021
*              SET ESD WRITE INDICATOR ON                               36800021
*              IS LENGTH FIELD IN ESD BLANKS                            36900021
         NC    ESDLEN(3,ESDADD),ESDLEN(ESDADD)                          37000021
         BC    4,ENTER                                                  37100021
*              NO-ENTER THE LINE IN THE CESD                            37200021
*              YES-IS NO LENGTH BIT ON                                  37300021
         TM    APT2,NOLENBIT                                            37400021
*              YES-IGNORE IT                                          * 37500021
         BC    1,ENTER                                                  37600021
         OI    APT2,NOLENBIT                                            37700021
*              SET NOLENGTH BIT ON AND SAVE THE LINE ADDRESS IN APT   * 37800021
         ST    CESDXR,PDSE18                                            37900021
         BC    15,ENTER                                                 38000021
**********            NON RESOLUTION PROCESSING BEGINS HERE  ********** 38100021
ESD23    BAL   RETURN,FREELINE                                          38200021
*              SET CESD INDEX TO CURRENT LINE+1 AND UPDATE CURRENT CNT* 38300021
ESD23A   CLI   TESTYPE,LR                                               38400021
*              IS ESD TYPE LR                                           38500021
         BC    8,LABEL                                                  38600021
*              YES BRANCH TO LABEL ROUTINE                              38700021
*              NO-IS ESD TYPE SECTION DEFINITION                        38800021
         CLI   TESTYPE,SD                                               38900021
         BC    8,ESD21                                                  39000021
*              YES-BRANCH TO SECTION DEFINITION PROCESSING              39100021
*              NO-IS TYPE NULL                                          39200021
         CLI   TESTYPE,CM                                               39300021
*              SET INTERNAL COMMON INDICATOR ON AND MARK COMMON DELETE* 39400021
         BC    8,ESD42                                                  39500021
*              YES-BRANCH TO RENUMBER ROUTINE                           39600021
**********            THE ENTER ROUTINE STARTS HERE          ********** 39700021
ENTER    CH    CESDID,ENCDX                                             39800021
*              IS THE CESD LIMIT EXCEEDED                               39900021
         BC    12,ENTER2               NO,SKIP REALOC           S01904  40000021
         STM   WRKREG0,WRKREGF,BRNCHSV   SAVE REGISTERS         S01904  40100021
         LA    WRKREG0,ESDOVFLW        MESSAGE CODE CESD OVFLW  S01904  40200021
         LA    WRKREGE,ENTER1          SET RETURN ADDRESS       S01904  40300021
ENTER3   TM    APT4,X'C0'              REALOC POSSIBLE          S01904  40400021
         BO    ESD39A                  SIGNAL OVERFLOW          S01904  40500021
         L     WRKREGF,ERDIGA          GET REALOC RTN ADDR      S01904  40600021
         BR    WRKREGF                 GO TO REALOC RTN         S01904  40700021
ENTER1   LM    WRKREG0,WRKREGF,BRNCHSV  RESTORE REGISTERS       S01904  40800021
*              NO-SET ESD SYMBOL AND ORIGIN INTO CESD LINE              40900021
ENTER2   MVC   CESDNAME(8,CESDXR),ESDNAME(ESDADD)                       41000021
*              MOVE SYMBOL FIELD                                      * 41100021
         MVC   CESDORG(3,CESDXR),ESDORG(ESDADD)                         41200021
*              MOVE ORIGIN FIELD                                      * 41300021
         TM    CESDTYPE(CESDXR),X'20'                                   41400021
*              IS CESD TYPE INSERT                                      41500021
         BC     8,ESD24X         NO,  BRANCH.                           41600021
         CLI    TESTYPE,LR       IS ITEM AN LR                          41700021
         BC     7,ESD24          NO,  BRANCH.                           41800021
ESD24X   MVC    CESDSEG(1,CESDXR),ESDSEG(ESDADD)                        41900021
ESD24    MVC   CESDLEN(3,CESDXR),ESDLEN(ESDADD)                         42000021
*              SET CESD LENGTH FIELD TO ESD LENGTH FIELD                42100021
*              SET CESD TYPE TO ESD TYPE                                42200021
         NI    CESDTYPE(CESDXR),X'F0'   CLEAR LOW ORDER BITS            42300021
         OC    CESDTYPE(1,CESDXR),TESTYPE                               42400021
         MVC   CLRBYT(1),ESDTYPE(ESDADD)                                42500021
         NI    CLRBYT,X'F0'        CLEAR BITS                           42600021
         OC    CESDTYPE(1,CESDXR),CLRBYT                                42700021
**********            THE RENUMBER ROUTINE STARTS HERE       ********** 42800021
*              IF THE LINE WHICH IS ABOUT TO BE ENTERED IS AN LD        42900021
*              IT IS NOT ENTERED-ALL OTHERS ARE                         43000021
RENUMBER TM    INTERN1,LABELDEF                                         43100021
         BC    1,ESD30                                                  43200021
         L     TEMP,REGSA5                                              43300021
         LTR   TEMP,TEMP                                                43400021
         BC    12,TBLOFLOW                                              43500021
         L     RNT,RECNT               UPDATE REG PTR TO RNT      M4320 43550021
         CH    TEMP,ENCDX                                               43600021
         BC    12,RNUMBR2              NO OVERFLOW              S01904  43700021
         STM   WRKREG0,WRKREGF,BRNCHSV SAVE REGISTERS           S01904  43800021
         LA    WRKREGE,RNUMBR1         SET RETURN ADDRESS       S01904  43900021
         LA    WRKREG0,RNTOFLOW        MESSAGE CODE RNT OVFLW   S01904  44000021
         B     ENTER3                  CHECK FOR POSS REALOC    S01904  44100021
RNUMBR1  LM    WRKREG0,WRKREGF,BRNCHSV RESTORE REGISTERS        S01904  44200021
         L     RNT,RECNT               UPDATE REG PTR TO RNT      M4320 44250021
RNUMBR2  SLL   TEMP,2                                                   44300021
*              COMPUTE ADDRESS OF RNT LINE                            * 44400021
         AR    TEMP,RNT                                                 44500021
         MVC   RNTTYPE(1,TEMP),TESTYPE                                  44600021
         MVC   CLRBYT(1),ESDTYPE(ESDADD)                                44700021
         NI    CLRBYT,X'F0'        CLEAR BITS                           44800021
         OC    RNTTYPE(1,TEMP),CLRBYT                                   44900021
*              SET TYPE IN RNT                                          45000021
         OI    RNTFLAG(TEMP),X'01'                                      45100021
*              SET PRESENT FLAG ON IN RNT LINE AND THEN GO TO  IDCESD * 45200021
*              TO COMPUTE THE ID(LINE NUMBER) OF THE PRESENT LINE     * 45300021
         BAL   RETURN,IDCESD                                            45400021
         LH    TEMP1,RNTID(TEMP)                                        45500021
         STH   CESDID,RNTID(TEMP)                                       45600021
*              STORE THE LINE ID IN THE RNT                           * 45700021
         TM    RNTFLAG(TEMP),X'02'                                      45800021
*              IS DEPEND FLAG ON                                        45900021
         BC    8,ESD29                                                  46000021
*              NO-BRANCH TO UPDATE RNT INDEX                          * 46100021
*              YES-CLEAR DEPEND BIT IN RNT                            * 46200021
         NI    RNTFLAG(TEMP),X'FD'                                      46300021
ESD24A   SLL   TEMP1,4                                                  46400021
         AR    TEMP1,CESD               TEMP1 IS INDEX TO LABEL LINE    46500021
         TM    CESDTYPE(TEMP1),X'40'                                    46600021
         BC    8,ESD25                                                  46700021
*              IF THE CESD TYPE IS CHAINED A DOUBLE DEFINITION WILL     46800021
*              OCCUR IF THE PRESENTESD IS NOT MARKED DELETE           * 46900021
         TM    ESDTYPE(ESDADD),X'10'                                    47000021
         BC    1,ESD28B                                                 47100021
         LA    RETURN,ESD28B                                            47200021
*              BRANCH TO ERROR DIAGNOSTIC FOR DOUBLE SYMBOL DEFINITION* 47300021
*                        *****ERROR*****                              * 47400021
*                                                                     * 47500021
         BC    15,DBLDEF1                                               47600021
ESD25    TM    ESDTYPE(ESDADD),X'10'                                    47700021
         BC    1,ESD27                                                  47800021
*              IF ESD TYPE IS NOT DELETE - RENUMBER ID                  47900021
ESD26    LH    TEMP,12(TEMP1)                                           48000021
ESD26A   STH   CESDID,14(TEMP1)                                         48100021
*              IF CHAIN ENDS (TEMP= 0 ) STOP RENUMBERING LABELS       * 48200021
ESD26B   LTR   TEMP1,TEMP                                               48300021
         BC    8,ESD29                                                  48400021
         BC    15,ESD24A                                                48500021
ESD27    LH    TEMP2,14(,TEMP1)        GET CESD ID FOR SD ITEM  XA05436 48600003
         MVI   CESDTYPE(TEMP1),ER      SET CESD TO ER                   48700021
*              IF THE ESD TYPE IS DELETE, CHECK RNT POINTER TO SEE IF * 48800021
*              IT IS AN LD-IF IT IS SET TYPE TO ER MARKED DELETE      * 48900021
         LTR   TEMP2,TEMP2                                              49000021
         BZ    ESD28A                  LD THAT CAN BE DELETED           49100021
         BM    ESD28C                  LD THAT CAN'T BE DELETED ZA01413 49200037
*              IF IT IS AN LR- THE RNT TYPE MUST BE SET TO ER DELETE  * 49300021
*              AS WELL AS CESD TYPE                                   * 49400021
ESD28    SLL   TEMP2,2                                                  49500021
         AR    TEMP2,RNT                                                49600021
*              SET RNT TYPE                                           * 49700021
*              SET CESD TYPE                                          * 49800021
         MVI   RNTTYPE(TEMP2),ER       RNT TYPE ER                      49900021
         OI    RNTTYPE(TEMP2),DELETE   TURN ON DELETE FLAG       A44660 49950000
         TM    RNTFLAG(TEMP2),X'80'    CHECK FOR SAVED BLDL BIT ZA01413 49960037
         BNO   ESD28AA                 BRANCH IF NOT FOUND      ZA01413 49970037
         MVI   CESDORG(TEMP1),X'80'    RESTORE BLDL BIT IN ER   ZA01413 49980037
         NI    RNTFLAG(TEMP2),X'7F'    REMOVE BLDL BIT IN RNT   ZA01413 49990037
ESD28AA  EQU   *                                                ZA01413 49992037
         TM    RNTFLAG(TEMP2),NODELETE   SHOULD WE MARK IT              50000021
*                                             FOR DELETION?             50100021
         BO    ESD28B                  NO,BRANCH                        50200021
ESD28A   OI    CESDTYPE(TEMP1),DELETE  YES, SET DELETE FLAG             50400021
*                                              IN TYPE                  50500021
ESD28B   LH    TEMP,12(TEMP1)                                           50600021
*              SET SUBTYPE TO DELETE                                  * 50700021
         MVI   SUBTYPE(TEMP1),X'08'                                     50800021
         BC    15,ESD26B                TO CHECK IF CHAIN IS DONE       50900021
ESD28C   STC   TEMP2,TSTBYT            SAVE FLAG LOW BYTE       ZA01413 50950037
         TM    TSTBYT,X'01'            TEST IF EVEN OR ODD      ZA01413 50960037
         BO    ESD28B                  BRANCH IF ODD            ZA01413 50970037
         MVI   CESDORG(CESDXR),X'80'   RESTORE BLDL BIT IN ER   ZA01413 50980037
         B     ESD28B                  RESUME MAINLINE          ZA01413 50990037
ESD29    L     TEMP,REGSA5                                              51000021
*              IF THE ITEM BEING PROCESSED IS COMMON-DELINK IT        * 51100021
         TM    INTERN1,COM                                              51200021
         BC    1,ESD43                                                  51300021
ESD29A   LA    TEMP,1(TEMP)                                             51400021
         ST    TEMP,REGSA5                                              51500021
HEWLCE30 EQU   *                                                        51600021
ESD30    NI    INTERN1,X'00'                                            51700021
         LA    ESDADD,16(ESDADD)                                        51800021
         L     TEMP,REGSA4                                              51900021
         BCT   TEMP,ESD30A                                              52000021
*              IF THE ESD CARD IS DONE- RETURN TO THE INPUT PROCESSOR * 52100021
ESD30A0  L     INTERNAL,SAVEAREA                                        52200021
         LM    SYSBRNCH,TEMP3,16(INTERNAL)                              52300021
         L     SYSRET,REG24SA                                           52400021
         LM    CESD,BASE,32(INTERNAL)                                   52500021
*              CLEAR INTERNAL INDICATORS                              * 52600021
         BCR   15,SYSRET                                                52700021
*              OTHERWISE SAVE THE RNTID AND RETURN TO THE BEGINNING   * 52800021
ESD30A   ST    TEMP,REGSA4                                              52900021
         BC    15,ESD1                                                  53000021
**********            THE LABEL ROUTINE STARTS HERE          ********** 53100021
LABEL    LH    TEMP,14(ESDADD)                                          53200021
*              COMPUTE THE RNT ADDRESS FOR THE LABEL ID               * 53300021
         CH    TEMP,ENCDX               DOES IT EXCEED THE      OX03919 53350002
*                                       LIMITS OF THE RNT       OX03919 53360002
         BC    12,RNTOK                 BRANCH IF NOT           OX03919 53370002
         STM   WRKREG0,WRKREGF,BRNCHSV  SAVE REGISTERS          OX03919 53380002
         LA    WRKREGE,RNTRET           SET UP RETURN ADDRESS   OX03919 53390002
         LA    WRKREG0,RNTOFLOW         SET CODE FOR RNT        OX03919 53392002
*                                       OVERFLOW                OX03919 53394002
         B     ENTER3                   GO TEST IF REALLOC      OX03919 53396002
*                                       POSS AND DO SO IF       OX03919 53398002
*                                       POSSIBLE                OX03919 53398402
RNTRET   EQU   *                                                OX03919 53398802
         LM    WRKREG0,WRKREGF,BRNCHSV  RESTORE REGS            OX03919 53399202
RNTOK    EQU   *                                        ZA00835,XA06871 53399303
         L     RNT,RECNT               RESTORE POINTER TO RNT   OX03919 53399603
         SLL   TEMP,2                                                   53400021
         AR    TEMP,RNT                                                 53500021
         LA    INTERNAL,ENTER                                           53600021
         L     TEMP2,REGSA5                                             53700021
         TM    INTERN1,MATCHER         DID THIS MATCH AN ER?            53800021
         BNO   REN1                    NO, BRANCH                       53900021
         TM    INTERN1,LABELDEF        IS THIS AN LD?                   54000021
         BO    REN1                    YES, NO FLAG IN RNT              54100021
         SLL   TEMP2,2                                                  54200021
         AR    TEMP2,RNT               ADD TO FORM RNT ADDRESS          54300021
         OI    RNTFLAG(TEMP2),NODELETE   YES,SET FLAG ON IN RNT         54400021
*                                      SO THIS CAN'T BE DELETED         54500021
         L     TEMP2,REGSA5            RESTORE RNT ID                   54600021
REN1     EQU   *                                                        54700021
*              SAVE THE RNT ID FIELD                                  * 54800021
         LH    TEMP1,0(TEMP)                                            54900021
*              IS CONTROL SECTION PRESENT                               55000021
         TM    2(TEMP),X'01'                                            55100021
         BC    8,ESD33                                                  55200021
*              NO-BRANCH                                                55300021
*              IF RNT TYPE IS DELETE-BRANCH                             55400021
         TM    3(TEMP),X'50'                                            55500021
         BC    5,ESD31                                                  55600021
*              IF MATCH BIT IS ON-BRANCH                                55700021
         TM    INTERN1,X'02'                                            55800021
         BC    1,ESD32                                                  55900021
*              IF NOT-RENUMBER ID FIELD                                 56000021
         STH   TEMP1,14(ESDADD)                                         56100021
         BCR   15,INTERNAL                                              56200021
*              IF THE RNT TYPE IS DELETE -                              56300021
ESD32    BAL   RETURN,DBLDEF                                            56400021
ESD31    TM    INTERN1,LABELDEF                                         56500021
         BC    1,ESD44                                                  56600021
*              AND THE ESD TYPE IS LD - DONT ENTER THE LINE             56700021
*              IF IT IS AN LR -                                       * 56800021
         MVI   SUBTYPE(ESDADD),X'08'                                    56900021
         MVI   TESTYPE,2                                                57000021
         OI    ESDTYPE(ESDADD),X'10'                                    57100021
*              MAKE ESD TYPE ER MARKED DELETE                           57200021
         TM    INTERN1,X'0A'                                            57300021
*              IF IT IS A MATCHING SYMBOL, BRANCH TO  DELETE CHAIN    * 57400021
*              ROUTINE. IF NOT, STORE RNTID IN  BYTE 14 OF CESD LINE  * 57500021
         BC    8,ESD33A                                                 57600021
         BAL   RETURN,DELCHN                                            57700021
         BCR   15,INTERNAL                                              57800021
*                                                                       57900021
ESD33    EQU   *                                                OX00822 57950001
         OI    2(TEMP),X'02'                                    OX00822 58066701
*              SET DEPENDENCY BIT ON IN RNT LINE FOR SD                 58100021
         TM    INTERN1,X'02'                                            58200021
*              IF IT IS A MATCHING SYMBOL - BRANCH, IF NOT- SET UP    * 58300021
*              CHAIN OF LABELS                                        * 58400021
         BC    1,ESD35                                                  58500021
         STH   CESDID,0(TEMP)                                           58600021
         STH   TEMP1,12(ESDADD)                                         58700021
         TM    INTERN1,X'01'                                            58800021
         BC    8,ESD33B                                         ZA01413 58900037
         SR    TEMP2,TEMP2              CLEAR TEMP2                     59000021
         TM    INTERN1,MATCHER         DID THIS MATCH AN ER?            59100021
         BNO   ESD33A                  NO, BRANCH                       59200021
         O     TEMP2,FS                YES, IT CAN'T BE DELETED         59300021
         TM    CESDORG(CESDXR),X'80'   CHECK BLDL BIT           ZA01413 59400037
         BNO   ESD33A                  BRANCH IF NOT ON         ZA01413 59450037
         SLL   TEMP2,1                 MAKE FLAG EVEN IF ON     ZA01413 59500037
ESD33A   STH   TEMP2,14(ESDADD)                                         59600021
         BCR   15,INTERNAL                                              59700021
ESD33B   TM    INTERN1,MATCHER         DID LR MATCH ER          ZA01413 59750037
         BNO   ESD33A                  BRANCH IF NOT            ZA01413 59760037
         TM    CESDORG(CESDXR),X'80'   WAS BLDL ISSUED FOR ER   ZA01413 59770037
         BNO   ESD33A                  BRANCH IF NOT            ZA01413 59780037
         L     TEMP,REGSA5             GET INPUT ESD ID         ZA01413 59790037
         SLL   TEMP,2                  CALC RNT OFFSET          ZA01413 59792037
         AR    TEMP,RNT                POINT TO RNT ENTRY       ZA01413 59794037
         OI    RNTFLAG(TEMP),X'80'     KEEP BLDL BIT IN RNT     ZA01413 59796037
         B     ESD33A                  RESUME MAINLINE          ZA01413 59798037
ESD35    BAL   RETURN,DELCHN                                            59800021
         MVI   TESTYPE,2                                                59900021
*              MAKE LABEL AN ER  AND CHAIN IT TO THE MATCH            * 60000021
         STH   CESDID,0(TEMP)                                           60100021
         STH   TEMP1,12(ESDADD)                                         60200021
         BCR   15,INTERNAL                                              60300021
**********            THE DELCHN ROUTINE STARTS HERE         ********** 60400021
DELCHN   STH   CESDID,14(ESDADD)                                        60500021
*              STORE THE ID OF THE LINE IT IS CHAINED TO IN BYTES 14- * 60600021
*              15 OF THE LINE AND MARK TYPE DELETE-CHAIN              * 60700021
         OI    ESDTYPE(ESDADD),X'50'                                    60800021
**********            THE FREELINE ROUTINE STARTS HERE       ********** 60900021
FREELINE CLI   TESTYPE,PR     IS THIS ESD ITEM A PSEUDO REGISTER        61000021
         BE    NXTLINE    IF PSEUDO-REG USE NEW CESD LINE               61100021
* PSEUDO REGISTERS MUST BE IN THE ORDER OF APPEARANCE                   61200021
         L     CESDXR,FLCD                                              61300021
         LTR   CESDXR,CESDXR                                            61400021
*              IF THERE ARE NO LINES IN THE ENTRIES DELETED CHAIN,    * 61500021
*              GO TO NXTLINE TO SELECT CURRENT LINE+1                 * 61600021
         BC    8,NXTLINE                                                61700021
ESD37    L     TEMP3,12(CESDXR)                                         61800021
*              SET FIRST FREE LINE TO NEXT FREE LINE                  * 61900021
         ST    TEMP3,FLCD                                               62000021
*              IDCESD COMPUTES AN ID OF A CESD LINE GIVEN  AN ADDRESS * 62100021
IDCESD   LR    CESDID,CESDXR                                            62200021
         SR    CESDID,CESD                                              62300021
         SRL   CESDID,4                                                 62400021
         BCR   15,RETURN                                                62500021
*              NXTLINE INCREMENTS THE CURRENT CESD COUNT AND THEN     * 62600021
*              COMPUTES THE ADDRESS OF THE LINE(CESDXR)               * 62700021
NXTLINE  LH    CESDID,ENCDC                                             62800021
         LA    CESDID,1(CESDID)                                         62900021
         STH   CESDID,ENCDC                                             63000021
         LR    CESDXR,CESDID                                            63100021
         SLL   CESDXR,4                                                 63200021
         AR    CESDXR,CESD                                              63300021
         BCR   15,RETURN                                                63400021
COMMON   CLC   13(3,CESDXR),13(ESDADD)                                  63500021
*        IF CESD SIZE IS LESS,CHECK FOR SD TYPE CESD                    63600021
         BNL   ESD38                                                    63700021
         TM    CESDTYPE(CESDXR),X'0F'  IS CESD SD                       63800021
         BZ    COMMON1                                                  63900021
         MVC   13(3,CESDXR),13(ESDADD)                                  64000021
         B   ESD38                                                      64100021
COMMON1  LR    TEMP3,CESDXR                                             64200021
*                                 NAME OF COMMON.                       64300021
         LH    TEMP4,CMGTSD       GET ERROR CODE                        64400021
         L     SYSBRNCH,ERDIG     GIVE ERROR MESSAGE                    64500021
         BALR  14,15                                                    64600021
*              IF OVERLAY-PROMOTION TAKES PLACE IN COMMON PATH        * 64700021
ESD38    TM    PDSE7,OVBIT                                              64800021
         BCR   8,RETURN                                                 64900021
         TM    CESDTYPE(CESDXR),X'20'    IS INSERT BIT ON IN CESD       65000021
         BCR   1,RETURN                 YES. USE CESD SEG NO            65100021
         L     INTERNAL,ADDCPTH                                         65200021
         BCR   15,INTERNAL                                              65300021
DBLDEF1  LR    TEMP3,TEMP1             POINT TO DUPLICATE NAME    X3508 65400002
         BC    15,ESD39                                                 65500021
DBLDEF   LR    TEMP3,ESDADD                                             65600021
ESD39    EQU   *                                                        65700021
         LH    TEMP4,DLDEF                                              65800021
ESD39A   L     SYSBRNCH,ERDIG                                           65900021
         BALR  14,15                                                    66000021
         BCR   15,RETURN                                                66100021
TBLOFLOW LA    TEMP4,RNTOFLOW                                           66200021
         BC    15,ESD39A                                                66300021
ESDOFLOW LA    TEMP4,ESDOVFLW                                           66400021
         BC    15,ESD39A                                                66500021
**********            THE CESDDLNK ROUTINE STARTS HERE       ********** 66600021
CESDDLNK LH    RNTR,14(CESDXR)          LOAD WITH RNT POINTER           66700021
DLNK1    LR    TEMP3,CESDID                                             66800021
         L     SYSBRNCH,DELNKRT                                         66900021
         BALR  SYSRET,SYSBRNCH                                          67000021
         BCR   15,RETURN                                                67100021
INTERN1  DC    X'00'                                                    67200021
MATCHER  EQU   X'10'                   INTERN1 FLAG -- THIS             67300021
*                                      ENTRY MATCHED AN ER              67400021
NODELETE EQU   X'20'                   RNT FLAG -- THIS NAME            67500021
*                                      SHOULDN'T BE DELETED             67600021
DELETE   EQU   X'10'                   CESD TYPE DELETE FLAG            67700021
FS       DS    0F                                                       67800021
         DC    X'FFFFFFFF'             NEG FULLWORD FOR LD CHAIN        67900021
HEWLCTTY EQU   *                                                        68000021
TESTYPE  DC    X'00'                                                    68100021
CESDTTYP DC    X'00'                                                    68200021
ERR57    DC    X'2239'                 MSG NUMBER FOR MSG#562           68300021
ZERO3    DC    X'000000'               FOR CHECKING SD LENGTH           68400021
ADDCPTH  DC    V(HEWLCPTH)                                              68500021
ADDDECHN DC    V(HEWLCDCN)                                              68600021
RPCHGADD DC    V(HEWLFRCG)                                              68700021
DELNKRT  DC    V(HEWLCDLK)                                              68800021
ESD42    OI    INTERN1,COM                                              68900021
*              SET INTERNAL COMMON BIT ON AND MAKE ESD TYPE DELETE    * 69000021
         OI    ESDTYPE(ESDADD),X'10'                                    69100021
         BC    15,ENTER                                                 69200021
ESD43    LR    RNTR,TEMP                                                69300021
         LA    RETURN,ESD29A                                            69400021
*              CLEAR COMMON BIT AND SET UP FOR DELINKING              * 69500021
         NI    INTERN1,X'FB'                                            69600021
         OI    APT1,ESDWRITE                                            69700021
         BC    15,DLNK1                                                 69800021
ESD44    TM    INTERN1,X'0A'                                            69900021
         BC    4,ESD30                                                  70000021
         MVI   8(CESDXR),NULL                                           70100021
         BC    15,ESD30                                                 70200021
BADCARDO LA    TEMP3,0(0,ESDADD)                                        70300021
         SH    TEMP3,C16                                                70400021
         LH    TEMP4,ERR22                                              70500021
         BC    15,BADCRDL1                                              70600021
BADCARDL LA    TEMP4,ERR23                                              70700021
BADCRDL1 LA    RETURN,ESD30A0                                           70800021
         BC    15,ESD39A                                                70900021
REGSA4   DC    F'0'                                                     71000021
HEWLCRID EQU   *                                                        71100021
REGSA5   DC    F'0'                                                     71200021
REG24SA  DC    F'0'                                                     71300021
C56      DC    H'56'                                                    71400021
C240     DC    H'240'                                                   71500021
C16      DC    H'16'                                                    71600021
ERR22    DC   X'1216'                                                   71700021
DLDEF    DC    X'2118'                                                  71800021
SAVEAREA DC    F'0'                                                     71900021
CMGTSD   DC    X'2237'                                                  72000021
CLRBYT   DC    X'00'                                                    72100021
TSTBYT   DS    X                       WORK AREA                ZA01413 72150037
SAVETEMP DC    F'0'                     SAVE AREA FOR TEMP REG  OX00822 72160001
MAINTAIN DC    50F'0'                   MAINTENANCE AREA        OX00822 72170001
         HEWAPT                                                         72200021
         END                                                            72300021
./  ADD  SSI=62730937,NAME=HEWLFFNL
         TITLE    'HEWLFFNL  FINAL PROCESSOR OF LINKAGE EDITOR'         00010021
*********************************************************************** 00020021
*FUNCTION/OPERATION: THIS MODULE PROVIDES THE FOLLOWING FUNCTIONS-    * 00030021
* 1.IF THE PROGRAM IS IN OVERLAY, THE 'NOTE LIST', A LIST OF DISK TTRS* 00040021
*   ARE WRITTEN AT THE END OF THE DATA SET AND ITS TTR IS PLACED IN   * 00050021
*   THE PDS DIRECTORY. THE TTRS ARE THE DISK ADDRESSES OF EACH SEGMENT* 00060021
* 2.THE PDS DIRECTORY IS COMPLETED-THAT IS THE NAME IS PLACED IN THE  * 00070021
*   DIRECTORY FROM EITHER THE NAME CARD, THE DEB, OR 'TEMPNAME' IS    * 00080021
*   USED. THE MEMBER IS THEN STOWED--EITHER WITH REPLACE OR ADD AS    * 00090021
*   SPECIFIED BY THE NAME CARD OR IN THE DEB.                         * 00100021
* 3.IF THERE ALIAS NAMES TO BE STOWED, THIS IS ACCOMPLISHED NEXT      * 00110021
* 4.IF THE MODULE HAS BEEN DOWNGRADED--THAT IS GONE FROM REENTRANT TO * 00120021
*   REUSABLE OR FROM REUSABLE TO NOT REUSABLE OR FROM EXECUTABLE TO   * 00130021
*   NOT EXECUTABLE, OR TO NOT REFRESHABLE, THIS IS PRINTED.             00140021
* 5.IF ANY IEWXXXS CODE HAD BEEN PRINTED, A DIRECTORY CORRESPONDING TO* 00150021
*   THE CODE WILL BE PRINTED TO EXPLAIN IT.                           * 00160021
*   IF MAP OR XREF WAS SPECIFIED AND THERE ARE ESDS, THE MAP/XREF     * 00170021
*   PROCESSOR IS CALLED TO PRODUCE THE PROPER OUTPUT                  * 00180021
* 7.IF THE END OF INPUT WAS NOT ON, PROCESSING  WOULD BE RETURNED FOR * 00190021
*   ANOTHER RUN THROUGH THE EDITOR.  IF IT IS END OF INPUT, CONTROL   * 00200021
*   WILL BE RETURNED TO THE CALLER AFTER ALL FILES ARE CLOSED.        * 00210021
* 8.THIS ROUTINE ALSO CONTAINS THE SYCHRONOUS ERROR EXIT. WHEN ENTERED* 00220021
*   VIA IOCS, THE FILE NAME IS PRINTED, ALL FILES CLOSED AND RETURN IS* 00230021
*   GIVEN TO THE CALLER  A CONCODE IS PASSED IN REGISTER 15           * 00240021
*                                                                     * 00250021
*                                                                     * 00260021
*                                                                     * 00270021
*ENTRY POINTS:                                                        * 00280021
*                                                                     * 00290021
*    HEWLFFNL--ENTERED FOR NORMAL PROCESSING                          * 00300021
*                                              L   15,=V(HEWLFFNL)    * 00310021
*                                               BCR  15,15            * 00320021
*                                                                     * 00330021
*    HEWLCFAB--ENTERED FOR TERMINATING PROCESSING                     * 00340021
*                                               L    15,=V(HEWLCFAB)  * 00350021
*                                               BCR  15,15            * 00360021
*                                                                     * 00370021
*    HEWLFSNX--ENTERED FOR SYNCHRONOUS FILE ERROR EXIT                * 00380021
*                                               L    15,=V(HEWLCSNX)  * 00390021
*                                               BCR  15,15            * 00400021
*                                                                     * 00410021
*                                                                     * 00420021
*INPUT:  PDS DIRECTORY IN THE ALL PURPOSE TABLE (SEE HEWLKAPT)        * 00430021
*        TTR NOTE LIST IN THE ALL PURPOSE TABLE (SEE HEWLKAPT)        * 00440021
*        DEB -STANDARD FORMAT OF OUTPUT FILE USED TO STOW             * 00450021
*        INDICATORS IN THE ALL PURPOSE TABLE                          * 00460021
*        ALIAS TABLE--EACH ENTRY IS TEN BYTES IN LENGTH               * 00470021
*                     FIRST EIGHT BYTES IS ALIAS NAME                 * 00480021
*                     LAST TWO BYTES ARE AN ID OF THE HALF ESD TABLE  * 00490021
*                                                                     * 00500021
*                                                                     * 00510021
*OUTPUT: DISK USED FOR STOW OF DIRECTORY AND WRITING THE NOTE LIST    * 00520021
*        (SEE PDS DIRECTORY IN ALL PURPOSE TABLE)                     * 00530021
*        PRINTED OUT PUT TO INDICATE MEMBER STOWED                    * 00540021
*                                                                     * 00550021
*                                                                     * 00560021
*                                                                     * 00570021
*EXTERNAL ROUTINES: N/A                                               * 00580021
*                                                                     * 00590021
*                                                                     * 00600021
*                                                                     * 00610021
*EXITS-NORMAL: AT END OF INPUT, ALL FILES ARE CLOSED, REGISTERS ARE   * 00620021
*              RESTORE, CONCODE PLACED IN REGISTER 15 AND A BRANCH    * 00630021
*              BACK ON REGISTER 14                                    * 00640021
*              AT NAME CARD BUT NOT END OF INPUT RETURN IS GIVEN TO   * 00650021
*              LINKEDIT INIILIZER FOR MORE INPUT                      * 00660021
*                                                                     * 00670021
*EXITS-ERROR:  WHEN EITHER SYCHRONEOUS ERROR EXIT OR TERMINATION ENTRY* 00680021
*              (FNALAB), RETURN TO CALLER WITH CONCODE OF 16 IN REG 15* 00690021
*              OTHER RETURNS, NOT NORMAL CAN HAVE REGULAR CONCODES OF * 00700021
*               12,8, OR 4 IN REGISTER 15.                            * 00710021
*                                                                     * 00720021
*TABLES/WORK AREAS: PDS DIRECTORY USED TO STOW - FORMAT IN ALL PURPOSE* 00730021
*                      TABLE                                          * 00740021
*                   TTR NOTE LIST- 4 BYTES PER ENTRY EACH CONTAINING A* 00750021
*                      TTR CORRESPONDING TO THE START OF A SEGMENT    * 00760021
*                                                                     * 00770021
*                                                                     * 00780021
*                                                                     * 00790021
*ATTRIBUTES: REUSABLE                                                 * 00800021
*                                                                     * 00810021
*                                                                     * 00820021
*NOTES:  THE MODULE CAN BE USED IN LEVEL E AND F  LINKAGE EDITOR      * 00830021
*        HOWEVER, DESIGN OF MODULE WAS USING LEVEL E ALL PURPOSE      * 00840021
*        TABLE. WHEN USING FOR LEVEL F OFFSETS SHOULD BE CHECKED      * 00850021
*                                                                     * 00860021
*********************************************************************** 00870021
HEWLFFNL CSECT                                                          00880021
**********************************************************************  00890021
*014630-014660,031150,031220-031280                              S01904 00900021
*020220-80,031284-356,049020-92,067420-80,068420-40,070620-40,   Y01048 00902000
*072120                                                          Y01048 00904000
*A064200                                                         A51444 00906000
*A063000                                                         A49330 00908000
*A023200,A040200,A042500,A072200                                 A52450 00908400
*A032004-032020,C032100,A032120,A034820-034840,C034900,A034920  OY00359 00908801
*A072280-072292                                                 OY00359 00909201
*A030920,A031353,A037320                                         YM5552 00909601
*I023220,C028200,C028500,C028800,C029000                OX04280,OY03413 00909702
*C033200,D033500-034000,C034200,D060700-061100          OX04280,OY03413 00909802
*I065900,I014000,C033900                                OX04280,OY03413 00909902
*I019100,I048600                                                XA05438 00926603
* SEE FIX FOR XA05438                                           YA04536 00936603
* A026400,A039200,A056500                                       ZA01401 00938602
* A019160,A019180,A048640-048684                                OZ01416 00940637
* SEE FIX FOR OY09128,OX08754                                   OZ01416 00942637
**********************************************************************  00943303
         EXTRN HEWLFBTP                                                 00960021
         ENTRY HEWLCFNI                                                 00970021
         ENTRY HEWLCSNX                                                 00980021
         ENTRY HEWLCEOI                                                 00990021
         ENTRY HEWLCFAB                                                 01000021
         EXTRN HEWLCSDB                                                 01010021
         EXTRN HEWLCMDB                                                 01020021
         EXTRN HEWLCUDB                                                 01030021
         EXTRN HEWLCPDB                                                 01040021
         EXTRN HEWLTMDB                                                 01050021
         EXTRN HEWLFLDB                                                 01060021
         EXTRN ENQNAME                                                  01070021
         EXTRN MINOR                                                    01080021
         EXTRN JFCBADDR                ADDRESS OF SYSLMOD JFCB          01090021
* REGISTER ASSIGNMENTS IN FINAL PROCESSOR                               01100021
REG0     EQU   0                                                        01110021
R0       EQU   0                                                        01120021
R1       EQU   1                                                        01130021
REG1     EQU   1                                                        01140021
TTRREG   EQU   1                                                        01150021
REG2     EQU   2      REGISTER 2                                        01160021
APT      EQU   2         ALL PURPOSE TABLE                              01170021
PDSDIREG EQU   2         ADDRESS OF PDS DIRECTORY                       01180021
DCBREG   EQU   3         DCB ADDRESS REGISTER                           01190021
SYSLIN   EQU   3         REGISTER 3                                     01200021
SYSLMOD  EQU   4         REGISTER 4                                     01210021
DEBNPRES EQU   4         OFFSET IN DEB TO SEE IF NAME PRESENT           01220021
NREG     EQU   4                                                        01230021
TEMP1    EQU   5                                                        01240021
WRTADR   EQU   5                                                        01250021
SYSUT1   EQU   5         REGISTER 5                                     01260021
SYSPRINT EQU   6         REGISTER 6                                     01270021
WRTBYTES EQU   6                                                        01280021
TEMP2    EQU   6                                                        01290021
MSGADD   EQU   6             ADDR OF MESSAGE                            01300021
MSGLNG   EQU   7             LENGTH OF MESSAGE                          01310021
TEMP4    EQU   7                                                        01320021
DEBREG   EQU   7                                                        01330021
SYSLIB   EQU   7                                                        01340021
RET1     EQU   8                                                        01350021
RETADD   EQU   8             RETURN ADDRESS                             01360021
TOTLNG   EQU   9             TOTAL MESAGE LENGTH                        01370021
REG9     EQU   9                                                        01380021
PRTREG   EQU   10                                                       01390021
TEMP3    EQU   11                                                       01400021
DEBXRG   EQU   6                       BPAM EXTEN PTR   OX04280,OY03413 01402002
BASE     EQU   12        BASE REGISTER                                  01410021
SAVEREG  EQU   13                                                       01420021
PASSREG  EQU   14                                                       01430021
RETRN2   EQU   14                                                       01440021
ERCODE   EQU   15                                                       01450021
GOTOR    EQU   15       GO TO REGISTER                                  01460021
SSIPRES  EQU   X'10'                   PDSE12, SSI PRESENT       S01904 01463021
PAGEING  EQU   X'20'                   PDSE12, PAGING            S01904 01466021
SCNALOV  EQU   X'4F'     C-BYTE SCATTER-NO ALIAS--SAVE FOR OVERLAY      01470021
BKNALNV  EQU   X'2B'     C-BYTE BLOCK-NO ALIAS--NO OVERLAY              01480021
SCALOV   EQU   X'D4'     C-BYTE FOR SCATTER, ALIAS, REUS OR RENT        01490021
BKALNV   EQU   X'B0'     C-BYTE FOR BLK, ALIAS, REUS, OR RENT           01500021
BKALOV   EQU   X'D0'     C-BYTE FOR OVLY, ALIAS, RENT OR REUS           01510021
OVLYCBT  EQU   X'4B'     C-BYTE FOR OVERLAY BUT NOT ALIAS               01520021
BKNTTR   EQU   X'0B'    C-BYTE BLOCK NO TTR'S IN PDS                    01530021
NONAME   EQU   X'00'                                                    01540021
TNAME    EQU   X'01'                                                    01550021
REPLACE  EQU   X'10'     REPLACE MEMBER                                 01560021
NAMECARD EQU   X'C0'    NAME RECEIVED FROM NAME CARD OR PARM LIST       01570021
ALBPE    EQU   X'0A'     NUMBER OF BYTES PER ENTRY IN ALIAS TABLE       01580021
DEBOFST  EQU   X'2C'     OFFSET IN DCB OF SYSLMOD OF DEB ADDRESS        01590021
DEBNEXT  EQU   X'10'     OFFSET IN DEB OF NUMBER OF EXTENTS             01600021
DEBESCL  EQU   X'1C'     OFFSET IN DEB OF EXTENTS SCALING FACTOR        01610021
DEBSEXT  EQU   X'20'     OFFSET OF START OF EXTENTS IN DEB              01620021
DCBIOBAD EQU   X'1C'     OFFSET IN DCB OF IOB ADDRESS                   01630021
DEBTYSTO EQU   X'08'     OFFSET IN DEB OF STOW TYPE MODIFIER            01640021
MODSTO   EQU   X'80'     STOW--ADD INDICATOR                            01650021
OLDSTO   EQU   X'40'     STOW--REPLACE INDICATOR                        01660021
NEWSTO   EQU   X'C0'     STOW--ADD INDICATOR                            01670021
RETRY    EQU   X'02'     RETRY INDICATOR TO STOW(A) AFTER STOW (R)      01680021
GOODSTOW EQU   X'FF'     MASK FOR TESTING GOOD STOW                     01690021
EXISTS   EQU   X'04'     NAME ALREADY EXIST IN PDS DIRECTORY            01700021
NOTIN    EQU   X'08'     NAME NOT FOUND IN DIRECTORY                    01710021
NOSPACE  EQU   X'0C'     NO SPACE LEFT IN PDS DIRECTORY                 01720021
PERMACC  EQU   X'10'     PERMANENT I/O ERROR WHEN ACCESSING DIRECTORY   01730021
ANSCOV   EQU   X'DB'    MASK TO CLEAR PDS BITS FOR OVLY-SCTR NO TXT     01740021
SYMCDPRS EQU   X'04'    SYM CARDS PRESENT INDICATOR                     01750021
REEN     EQU   X'80'     REENTERANT ATTRIBUTE                           01760021
REUS     EQU   X'40'     REUSABLE ATTRIBUTE                             01770021
REFR     EQU   X'01'         REFRESHABLE BIT                            01780021
OVLY     EQU   X'20'     OVERLAY ATTRIBUTE                              01790021
SCTR     EQU   X'04'     SCATTER ATTRIBUTE                              01800021
RAR      EQU   X'C0'     REENTERANT AND REUSABLE ATTRIBUTE              01810021
XREF     EQU   X'40'     CROSS-REFERENCE TABLE REQUEST BIT              01820021
EOI      EQU   X'20'     END OF INPUT                                   01830021
BOTH     EQU   X'03'                                                    01840021
LR       EQU   X'03'                                                    01850021
SD       EQU   X'00'                                                    01860021
XFOMP    EQU   X'60'    MAP AND XREF INDICATORS                         01870021
DCBCIND2 EQU   X'3D'    OFFSET FOR INDICATORES IN SYSLMOD DCB           01880021
DCBRELAD EQU   X'00'                                                    01890021
OPENFLAG EQU   X'30'     POSITION OF OPEN FLAGS IN DCB                  01900021
OPENBIT  EQU   X'10'     BIT INDICATE OPEN DCB                          01910021
DCBOFLGS EQU   X'30'                   DCB OFFSET               XA05438 01912003
DCBOFLWR EQU   X'80'                   WRITE BIT MASK           XA05438 01914003
TRBALLT  EQU   X'02'     DCB TRACK BAL LENGTH                   OZ01416 01916037
DCBTRBAL EQU   X'12'     DCB TRACK BALANCE                      OZ01416 01918037
ALIASIND EQU   X'80'                                                    01920021
MAXLINEC EQU   55                                                       01930021
RESTORE  EQU   X'8B'                   IMMEDIATE SKIP TO CHANNEL 1      01940021
TNL2     EQU   X'F4'     OFFSET FOR TEXT NOTE LIST 2                    01950021
OFF      EQU   X'00'    CLEAR INDICATORS                                01960021
BMDONE   EQU   X'08'       IND THAT BIT MAP HAS BEEN PROCESSED          01970021
BMOFF    EQU   X'F7'       MASK TO TURN OFF BIT MAP DONE IND            01980021
CNT1     EQU   X'12'    BYTE COUNT IN HALF-MESSAGE 1                    01990021
CNT2     EQU   X'14'    BYTE COUNT IN HALF-MESSAGE 2                    02000021
CNT3     EQU   X'1E'    BYTE COUNT IN HALF-MESSAGE 3                    02010021
CNT4     EQU   X'15'    BYTE COUNT IN HALF-MESSAGE 4                    02020021
CNT5     EQU   X'11'    BYTE COUNT IN HALF-MESSAGE 5             Y01048 02022000
LMSK     EQU   9        LENGTH OF MASK                           Y01048 02024000
LEDT     EQU   10       LENGTH OF EDIT                           Y01048 02026000
DEDT     EQU   22       DISP INTO MESG START EDIT                Y01048 02028000
DCBDDNAM EQU   X'28'    OFFSET IN DCB OF DDNAME                         02030021
DISPSV1  EQU   X'24'          DISPOSITION AND SEVERITY OF MESG 29       02040021
ERMSG1   EQU   29             MESSAGE NUMBER 29                         02050021
DISPSV2  EQU   X'24'          DISPOSITION AND SEVERITY OF MESSAGE 40    02060021
ERMSG2   EQU   40             MSG NUMBER 40                             02070021
DISPSV3  EQU   X'24'          DISPOSITION AND SEVERITY FOR 39           02080021
ERMSG3   EQU   39             MSG NUMBER 39                             02090021
DISPSV4  EQU   X'21'               DISPOSITION AND SEVERITY FOR 42      02100021
ERMSG4   EQU   42                  MESG NUMBER 42                       02110021
DISPSV5  EQU   X'22'                                                    02120021
ERMSG5   EQU   41                                                       02130021
DISPSV6  EQU   X'22'                                                    02140021
ERMSG6   EQU   50                                                       02150021
DISPSV7  EQU   X'23'                    DISPOSITION AND SEVERITY        02160021
ERMSG7   EQU   54                       ERROR MESSAGE NUMBER            02170021
NOSTRGE  EQU   X'18'                   NOT ENOUGH CORE FOR STOW  S21016 02172000
ERMSG71  EQU   X'2447'                 ERROR MSG. FOR STOW COMP. S21016 02174000
*                                      CODE OF X'18' (NO CORE)   S21016 02176000
SETSSI   EQU   X'10'          INDICATION THAT SSI RECEIVED              02180021
FSSI     EQU   X'08'          INDICATOR SSI DONE                        02190021
OSSI     EQU   X'F7'       CLEAR SSI DONE INDICATION                    02200021
SETAPF   EQU   X'80'                   APF DONE INDICATOR        YM2054 02202000
APFOFF   EQU   X'7F'                   CLEAR APF DONE INDICATOR  YM2054 02204000
EPEZ     EQU   X'20'          ENTRY POINT EQ ZERO                       02210021
SUTTR    EQU   X'100'             TR FOR REPOSITIONING SYSUT1           02220021
BTMPF    EQU   X'10F'    OFFSET FOR FINAL PROC ERROR MSGS OF SVER 4     02230021
FNM3940  EQU   X'C0'     BITS FOR MSGS 40 AND 39                        02240021
P2M1     EQU   X'01'          SECOND PASS MSG 1                         02250021
P2M2     EQU   X'02'          SECOND PASS MSG 2                         02260021
P2M1CD   EQU   X'201'         CODE FOR ERDIAG  MSG 1                    02270021
P2M2CD   EQU   X'202'         CODE FOR ERDIAG  MSG 2                    02280021
ATCK     EQU   X'C2'                    MASK FOR SAVED ATTRIBUTES       02290021
BLANK    EQU   C' '          BLANK FOR PRINT                            02300021
EXEC     EQU   X'02'         EXECUTABLE BIT                             02310021
TERM     EQU   X'02'                   TERM SWITCH IN NEWSW             02320021
ERMSG73  EQU   X'0149'                 ERROR MESSAGE 731         A52450 02322000
ERMSG58  EQU   X'013A'                 ERR MSG 58       OX04280,OY03413 02324002
R14      EQU   14                      GEN REG 14       OX04280,OY03413 02326002
R15      EQU   15                      GEN REG 15       OX04280,OY03413 02328002
         USING *+2,BASE                                                 02330021
         BALR  BASE,0                                                   02340021
         USING APTDSECT,APT   ESTABLISH ADDRESSIBILITY FOR APT          02350021
         BC    15,MODID+6              BRANCH AROUND MODULE IDENT       02360021
MODID    DC    C'19MFNL'                                                02370021
         NI    FNLIND,OFF    CLEAR INTERNAL INDICATORS                  02380021
         NI    APFIND,OFF              CLEAR APF INDICATORS      YM2054 02382000
         TM    BITMAP+7,P2M1       IS SECOND PASS MESSAGE 1 ON          02390021
         BC    8,FNL1A             NO-BY PASS                           02400021
         LA    REG0,P2M1CD(REG0)   PUT IN ERROR CODE                    02410021
         L     GOTOR,ERDIG         LOAD ADDRESS OF ERDIG                02420021
         BALR  RETRN2,GOTOR        GOTO ERROR LOG                       02430021
FNL1A    TM    BITMAP+7,P2M2       IS SECOND PASS MSG 2 BIT ON          02440021
         BC    8,FNL2A             NO- BY PASS                          02450021
         LA    REG0,P2M2CD(REG0)   PUT IN ERROR CODE                    02460021
         L     GOTOR,ERDIG         LOAD ADDRESS OF ERDIG                02470021
         BALR  RETRN2,GOTOR        GO TO LOG                            02480021
FNL2A    SR    TEMP1,TEMP1             CLEAR REG                        02490021
         ST    TEMP1,PDSE2         CLEAR TTRC                           02500021
         CH    TEMP1,ENCDC         IS ESD EMPTY                         02510021
         BC    8,FNL101A     YES--GO SEE IF ANY SYMS PRESENT            02520021
         CH    TEMP1,ENTOC         IS THERE ANY TEXT                    02530021
         BC    8,FNL102      NO--GO TO CLEAR IND FOR OVLY-SCTR          02540021
         TM    PDSE7,OVLY          IS THE LOAD MODULE IN OVERLAY        02550021
         BC    1,FNL100            YES-GO TO WRITE NOTE LIST            02560021
         TM    PDSE7,SCTR          IS LOAD MODULE IN SCATTER            02570021
         BC    1,FNL200            YES-GO TO PLACE IN PROPER 'C' BYTE   02580021
         OI    PDSE3,BKNALNV       BLOCK-NO-ALIAS-NO OVERLAY C BYTE     02590021
         BC    15,FNL300           GO TO GET NAME FOR MEMBER            02600021
FNL200   OI    PDSE3,SCNALOV       MODULE IN DCTR SET C BYTE X'4F'      02610021
         BC    15,FNL300           GO TO GET NAME FOR MEMBER            02620021
FNL101A  TM    PDSE8,SYMCDPRS      ARE SYM CARD PRESENT                 02630021
         BZ    FNLCN2B             DON'T STOW                   ZA01401 02640002
FNL102   OI    PDSE3,BKNTTR        NO TTR'S-STOW BECAUSE SOME OUTPUT    02650021
         NI    PDSE7,ANSCOV        CLEAR OVERLAY-SCATTER IS ON          02660021
         BC    15,FNL300     GO TO GET NAME FOR MEMBER                  02670021
FNL100   OI    PDSE3,OVLYCBT       MODULE IN OVERLAY                    02680021
         L     PRTREG,TTRLIST      GET ADR-4 OF NOTE LIST               02690021
         LA    PRTREG,4(PRTREG)    UP BY 4 TO GET RIGHT ADRESS          02700021
         LH    REG9,CSNO           PUT IN NUMBER OF TTRS                02710021
         SLL   REG9,2                   MULTIPLY BY FOUR                02720021
         L     DCBREG,DCBADRS2    LOAD ADR OF SYSLMOD                   02730021
         BAL   RET1,FNLP02A        GO TO WRITE                          02740021
         NOTE  (DCBREG)                                                 02750021
         IC    TTRREG,CSNO+1       INSERT NUMBER OF ENTRIES IN TTR LIST 02760021
         ST    TTRREG,PDSE5        STORE TTR INTO PDS ENTRY 5           02770021
FNL300   L     TEMP3,ADJFCB            LOAD JFCBADDR INTO REG           02780021
         NI    0(TEMP3),X'00'          INIT JFCBADDR HI-ORD BYTE        02790021
         L     DCBREG,DCBADRS2         LOAD ADDRESS OF SYSLMOD          02800021
         L     DEBREG,DEBOFST(DCBREG)  GET DEB ADDRESS                  02810021
         SR    TEMP1,TEMP1              CLEAR           OX04280,OY03413 02820002
         SR    TEMP2,TEMP2              CLEAR                           02822002
         IC    TEMP1,DEBNEXT(DEBREG)    LOAD NUMBER OF EXTENTS          02824002
         IC    TEMP2,DEBESCL(DEBREG)    LOAD SCALING FACTOR             02826002
         SLL   TEMP1,0(TEMP2)           MULTIPLY                        02828002
         LA    DEBXRG,DEBSEXT(TEMP1,DEBREG)  DEBREG NOW CONTAINS ADR    02828402
         TM    APT3,NAMECARD           IS MEM NAME ON NAME CARD         02830021
         BNZ   FNL294                  YES--BRANCH                      02840021
         CLI   DEBNPRES(DEBREG),NONAME MEM NAME IN DEB  OX04280,OY03413 02850002
         BNE   FNL404                  YES--BRANCH                      02860021
         B     FNL101                  NO--GO TO USE TEMPNAME           02870021
FNL294   CLI   DEBNPRES(DEBREG),NONAME MEM NAME IN DEB  OX04280,OY03413 02880002
         BE    FNLMVC                  NO--BRANCH                       02890021
         CLC   0(8,DEBXRG),PDSE1       ARE NAMES SAME?  OX04280,OY03413 02900002
         BE    FNLMVC                  YES--BRANCH                      02910021
         OI    0(TEMP3),X'40'          PDS&DEB MEMNAMES CONFLICT        02920021
FNLMVC   MVC  MESG1+5(8),PDSE1     ---SET UP PRT IMAGE 1                02930021
         MVC  MESG2+5(8),PDSE1     ---SET UP PRT IMAGE 2                02940021
         MVC  MESG3+5(8),PDSE1     ---SET UP PRT IMAGE 3                02950021
         MVC  MESG4+5(8),PDSE1     ---SET UP PRT IMAGE 4                02960021
FNL301   TM    FNLIND,FSSI         HAS SSI BEEN MOVED FOR THIS STOW     02970021
         BC    1,FNL301B           YES--BYPASS                          02980021
         TM    APT2,SETSSI         NO-ARE THERE ANY SSI INDICATORS      02990021
         BC    8,FNL301B           NO--BYPASS                           03000021
         SR    REG1,REG1      CLEAR REG 1                               03010021
         IC    REG1,PDSE3          INSERT 'C' BYTE                      03020021
         LA    REG1,2(0,REG1)          ADD 2 (TWO ADDITIONAL HALF WDS)  03030021
         STC   REG1,PDSE3          UPDATE C  BYTE                       03040021
         LA    REG1,4(0,REG1)     INCREMENT BY 4-MORE FOR PDS NAME      03050021
         LH    NREG,PSDIND             LOAD IN C-BYTE MASK              03060021
         NR    REG1,NREG     CLEAR BYTE COUNT IN C-BYTE                 03070021
         SLL   REG1,1              DOUBLE                               03080021
         AR    REG1,REG2           ADD BEGINNING OF PDS DIRECTORY       03090021
         AH    REG1,EIGHT          BUMP TO START OF PDS ENTRY    YM5552 03092001
         MVC   0(4,REG1),SSI       MOVE 4 BYTES OF SSI                  03100021
         OI    FNLIND,FSSI         SET SSI PROCESSED                    03110021
         OI    PDSE12,SSIPRES          TURN ON PDS BIT           S01904 03115021
FNL301B  OI    PDSE8,EPEZ          SET EDITOR ASGN EP=0 (BIT=1)         03120021
         TM    APT4,PAGEE              PAGING IN EFFECT          S01904 03122021
         BZ    FNL301BB                NO                        S01904 03124021
         OI    PDSE12,PAGEING          YES, TURN ON PDS BIT      S01904 03126021
FNL301BB EQU   *                                                 S01904 03128021
         TM    APFIND,SETAPF           IS APF ALREADY DONE?      YM2054 03128100
         BO    FNL301BD                IF SO, BYPASS             YM2054 03128200
         OI    APFIND,SETAPF           IF NOT, SET THE INDICATOR YM2054 03128300
         SR    REG1,REG1           CLEAR REG1                    Y01048 03128400
         IC    REG1,PDSE3          INSERT 'C' BYTE               Y01048 03128800
         LA    REG1,1(REG1)        ADD 1 HALFWD FOR AUTH CODE    Y01048 03129200
         STC   REG1,PDSE3          UPDATE 'C' BYTE               Y01048 03129600
         LA    REG1,5(REG1)        INCREMENT FOR PDS NAME + 1    Y01048 03129700
         LH    NREG,PSDIND         LOAD IN C-BYTE MASK           Y01048 03129800
         NR    REG1,NREG           CLEAR BYTE CT IN C BYTE       Y01048 03129900
         SLL   REG1,1              DOUBLE                        Y01048 03133200
         TM    APT2,SETSSI         IS SSI PRESENT                Y01048 03133600
         BO    FNL301BC            YES, REG1 IS OK               Y01048 03134000
         TM    PDSE3,ALIASIND      IS ALIAS SPECIFIED            Y01048 03134400
         BO    FNL301BC            YES, REG1 IS OK               Y01048 03134800
         BCTR  REG1,0              NO, DECREMENT REG1 BY 1       Y01048 03134900
FNL301BC EQU   *                   PROCESS APF INFO              Y01048 03135000
         AR    REG1,REG2           ADD TO PDS DIRECTORY START    Y01048 03135200
         AH    REG1,EIGHT          BUMP TO START OF PDS ENTRY    YM5552 03135301
         MVC   0(LAPF,REG1),PDSAPF MOVE APF INFO TO PDS          Y01048 03135600
FNL301BD EQU   *                       BYPASS APF PROCESSING     YM2054 03136000
         NC    PDSE11(3),PDSE11    IS ASGN EP EQU ZERO                  03136700
         BC    8,FNL301A               YES--GO TO STOW                  03140021
         NI    PDSE8,X'DF'         NO SET BIT OFF (=0)                  03150021
FNL301A  LA    SAVEREG,SPACES      LOAD REGISTER SAVE AREA              03160021
         L     DCBREG,DCBADRS2     LOAD ADDRESS OF SYSLMOD              03170021
         TM    APT3,REPLACE        IS MODULE TO BE REPLACED             03180021
         BC    1,FNL500            YES--GO TO STOW(R)                   03190021
         MVC   TTRCSAVE(4),PDSE2   SAVE THE TTRC FIELD FOR SECOND STOW  03200021
FNLSTA   EQU   *                                                OY00359 03200401
         AH    PDSDIREG,EIGHT      BUMP PAST STARTAPT STRING    OY00359 03202001
         STOW  (DCBREG),(PDSDIREG),A STOW WITH ADD              OY00359 03210001
         SH    PDSDIREG,EIGHT          POINT TO START OF APT    OY00359 03212001
FNL700   STC   ERCODE,STOWBYTE     STORE AWAY STOW RETURN CODE          03220021
         TM    PDSE3,ALIASIND      WAS ALIAS SPECIFIED                  03230021
         BC    1,FNL906                                                 03240021
         TM    STOWBYTE,GOODSTOW   WAS THERE ANY INDICATION OF ERROR    03250021
         BC    4,FNL600            BRANCH IF SOME ERROR FOUND           03260021
         TM    APT3,REPLACE        WAS REPLACE SPECIFIED                03270021
         BC    1,FNL800            YES--GO TO PRINT MESSAGE             03280021
         L     PRTREG,PRTWD1       LOAD PRINT REGISTER WITH PRINT WORD  03290021
         LA    RET1,FNL900    GO TO ALIAS CHECK AFTER PRINT             03300021
         BC    15,FNLPRTMG                                              03310021
FNL404   LR    REG9,DEBXRG             POINT TO NAME    OX04280,OY03413 03320002
         L     R15,ADRVLDCK            ADR VLD CHK RTN  OX04280,OY03413 03330002
         BALR  R14,R15                 GO VALIDATE NAME OX04280,OY03413 03332002
         LTR   REG9,REG9               TEST VALID NAME  OX04280,OY03413 03334002
         BZ    FNL404A                 BRANCH IF SO     OX04280,OY03413 03336002
         LA    RETRN2,FNL101           SET RTRN ON ERR  OX04280,OY03413 03338002
         L     GOTOR,ERDIG             PT TO ERR RTN    OX04280,OY03413 03338402
         LA    REG0,ERMSG58            SET ERR PARM     OX04280,OY03413 03338802
         BR    GOTOR                   EXIT TO ERR LOG  OX04280,OY03413 03339202
FNL404A  EQU   *                                        OX04280,OY03413 03339602
         MVC   PDSE1(8),0(DEBXRG)      PUT NAME IN PDS  OX04280,OY03413 03390002
         TM    DEBTYSTO(DEBREG),OLDSTO TEST IF MOD DISP OX04280,OY03413 03410002
         BZ    FNLMVC                  BRANCH IF MOD    OX04280,OY03413 03412002
         OI    APT3,REPLACE        INDICATE REPLACE                     03422002
         B     FNLMVC                  GO PROCESS MBR   OX04280,OY03413 03424002
* THIS MOVES TEMPNAME TO PDS DIRECTORY                                  03430021
FNL101B  MVC   PDSE2(4),TTRCSAVE   RESTORE THE TTRC FIELD FROM 1ST STOW 03440021
FNL101   MVC   PDSE1(8),TEMPNAME   MOVE TEMPNAME TO PDS DIRECTORY       03450021
         OI    FNLIND,TNAME             INDICATE TEMPNAME BEING USED    03460021
         BC    15,FNLMVC                GO TO SET UP MESSAGES           03470021
* STOW WITH REPLACE                                                     03480021
FNL500   EQU   *                                                OY00359 03482001
         AH    PDSDIREG,EIGHT         BUMP PAST STARTAPT STRING OY00359 03484001
         STOW  (DCBREG),(PDSDIREG),R    STOW WITH REPLACE       OY00359 03490001
         SH    PDSDIREG,EIGHT          POINT TO START OF APT    OY00359 03492001
         BC    15,FNL700                CHECK STOW                      03500021
* STOW ERROR--PRINT MESSAGE FOR TYPE ERROR                              03510021
FNL600   CLI   STOWBYTE,NOSPACE         WAS ERROR NO SPACE IN DIRECTORY 03520021
         BC    8,FNL601                 YES--GO PRT ERROR               03530021
         CLI   STOWBYTE,PERMACC         WAS ERROR PERMANENT DISK ERROR  03540021
         BC    8,FNL602                 YES--GO PRT ERROR               03550021
         CLI   STOWBYTE,NOTIN           WAS ERROR NAME NOT IN DIRECTORY 03560021
         BC    8,FNL603                 YES--GO FOR PRT AND RETRY       03570021
         CLI   STOWBYTE,NOSTRGE        WAS ERR. NOT ENOUGH CORE? S21016 03573000
         BE    FNL606                  YES, GO TO PRINT MSG.     S21016 03576000
         LA    RETRN2,FNL906B     LOAD RETURN ADR TO CHECK MORE ALIASES 03580021
         TM    PDSE3,ALIASIND      WERE ALIASES BEING PROCESSED         03590021
         BC    1,FNL604           YES--GO TO ERROR PRINT                03600021
         TM    FNLIND,TNAME             HAS TEMPNAME BEEN USED          03610021
         BC    1,FNL605                 YES--GO TO PRINT MESSAGE        03620021
         LA    RETRN2,FNL101B      RETRY STOW-RESTORE TTRC FIELD -      03630021
         LH    REG0,ERCODE4        PUT ERROR CODE IN REG0               03640021
         BC    15,FNL6011          GO TO LOG                            03650021
FNL601   LH    REG0,ERCODE2            PUT IN ERR CODE NO SPACE LEFT    03660021
         OI    FNLIND,FNM3940     INDICATE TYPE 4 SEVERITY              03670021
         TM    PDSE3,ALIASIND      WAS ALIAS SPECIFIED                  03680021
         BC    8,FNL6011                                                03690021
         NI    FNLIND,X'3F'       CLEAR IND FOR TYPE 4 SEVERITY         03700021
         LH    REG0,ERCODE5        ALIAS-NO SPACE LEFT                  03710021
         LA    RETRN2,FNLCN     CONTINUE BUT NO MORE STOW OF ALIAS      03720003
FNL6011  LR    TTRREG,APT          PUT ADDRESS OF SYMBOL IN REG 1       03730021
         AH    TTRREG,EIGHT        BUMP TO START OF PDS ENTRY    YM5552 03732001
         L     GOTOR,ERDIG         LOAD ERROR DIAGNOSTIC ADDRESS        03740021
         BCR   15,GOTOR       GO TO ERROR DIAGNOSTIC                    03750021
FNL602   LH    REG0,ERCODE3            PERMANENT DISK ERROR             03760021
         OI    FNLIND,FNM3940     INDICATE TYPE 4 SEVERITY              03770021
         TM    PDSE3,ALIASIND      WAS ALIAS SPECIFIED                  03780021
         BC    8,FNL6011                                                03790021
         NI    FNLIND,X'3F'       CLEAR IND FOR TYPE 4 SEVERITY         03800021
         LH    REG0,ERCODE6        ALIAS-PERMANENT DISK ERROR           03810021
         LA    RETRN2,FNLCN       CONTINUE BUT NO MORE STOW OF ALIAL    03820021
         BC    15,FNL6011                                               03830021
* NAME ADDED BY STOW--DID NOT EXIST                                     03840021
FNL603   L     PRTREG,PRTWD3       LOAD MESSAGE CNTL WD                 03850021
         LA    RET1,FNL900   LOAD ADDRESS OF ALIAS SCAN                 03860021
         TM    PDSE3,ALIASIND      WAS ALIAS SPECIFIED                  03870021
         BC    8,FNLPRTMG                                               03880021
         LA    RET1,FNL906B                                             03890021
         BC    15,FNLPRTMG         GO TO PRINT MESSAGE                  03900021
FNL605   BAL   RETRN2,NOSTOW           GO TO RESET SYSLMOD PTR          03910021
         LA    RETRN2,FNLCN2B      TEMPNAME FAILED, NO STOW     ZA01401 03920002
         NI    FNLIND,X'00'        CLEAR INDICATOR                      03930021
FNL604   LH    REG0,ERCODE7     LOAD ERROR CODE IN REGISTER 0           03940021
         BC    15,FNL6011          GO TO PRT MESSAGE                    03950021
FNL606   LH    REG0,ERCODE71           PUT IN ERROR CODE FOR     S21016 03952000
*                                      NOT ENOUGH CORE FOR STOW  S21016 03954000
         OI    FNLIND,FNM3940          INDICATE SEVERITY 4 ERROR S21016 03956000
         B     FNL6011                 GO TO LOG AND TERMINATE   S21016 03958000
FNL800   L     PRTREG,PRTWD2  LOAD CNTL WD FOR REPLACE MESSAGE          03960021
         LA    RET1,FNL900    PUT RETURN AT ALIAS CHECK                 03970021
         BC    15,FNLPRTMG    GO TO PRINT                               03980021
* THIS ROUTINE CHECKS AND STOWS ALIASES                                 03990021
FNL900   LH    TEMP1,ENASC         LOAD CURR NUMBER OF ALIAS ENTS       04000021
         LTR   TEMP1,TEMP1         CHECK TO SEE IF ANY PRESENT          04010021
         BC    8,FNLCN             NONE--GO TO CONTINUE                 04020021
         MVC   MEMBER(8),PDSE1         SAVE MEMBER NAME          A52450 04022000
         OI    PDSE3,X'80'                                              04030021
         MVC   IOCT(3),PDSE11      STORE MAIN ENTRY POINT               04040021
         MVC   IOCT+3(2),PDSE16    SAVE MAIN MEMBER ID                  04050021
         NI    FNLIND,OSSI   CLEAR SSI PROCESSED IND                    04080021
         NI    APFIND,APFOFF           CLEAR APF DONE INDICATOR  YM2054 04082000
         NI    PDSE3,X'00'         CLEAR C BYTE                         04090021
         TM    PDSE7,SCTR          IS MODULE SCATTER                    04100021
         BC    1,FNL900B           YES--GO TO INSERT C BYTE             04110021
         MVC   PDSE13(3),PDSE11    SAVE MAIN MEMBER EP                  04120021
         MVC   PDSE14+1(8),PDSE1   SAVE MAIN MEMBER NAME                04130021
         TM    PDSE7,OVLY          IS MODULE OVERLAY                    04140021
         BC    1,FNL900C           YES--GO TO INSERT C BYTE             04150021
         OI    PDSE3,BKALNV        SET C BYTE EQU X'31'                 04160021
         BC    15,FNL900A          GO TO MOVE NAME,EP                   04170021
FNL900B  OI    PDSE3,SCALOV        SET C BYTE EQU TO X'34'              04180021
         MVC   PDSE17(3),PDSE11    MOVE EP TO ALAIS AREA                04190021
         MVC   PDSE18(8),PDSE1     MOVE MAIN NAME TO ALAIS AREA         04200021
         BC    15,FNL900A          GO TO MOVE NAME,EP                   04210021
FNL900C  OI    PDSE3,BKALOV        SET C BYTE EQU X'51'                 04220021
*    SCAN FOR ALIAS NAME IN ALIAS TABLE                                 04230021
FNL900A  L     TEMP2,ALAS          GET ALIAS TABLE ADDRESS              04240021
FNL902A  MVC   PDSE1(8),0(TEMP2)   MOVE MEMBER TO PDSE1                 04250021
         CLC   MEMBER(8),PDSE1         ALIAS AND MEMBER SAME     A52450 04252000
         BNE   CONTINUE                NO                        A52450 04254000
         LA    R0,ERMSG73              ERROR MSG 731             A52450 04256000
         L     GOTOR,ERDIG             ADDR OF LOG               A52450 04258000
         ST    PASSREG,SAVE14          SAVE REG 14               A52450 04258400
         BALR  PASSREG,GOTOR           GO TO PRINT ERROR MSG     A52450 04258800
         L     PASSREG,SAVE14          RESTORE REG 14            A52450 04259200
         B     FNL906B                 CHECK FOR MORE ALIASES    A52450 04259600
CONTINUE EQU   *                                                 A52450 04259700
         SR    TEMP3,TEMP3                                              04260021
         LH    TEMP3,8(TEMP2)      GET ID POINTER                       04270021
         LTR   TEMP3,TEMP3    ID EQU ZERO                               04280021
         BC    8,FNL904       YES--GO TO PUT EP FROM MEMBER SAVED       04290021
         L     TEMP4,HESD          GET HALF ESD ADDRESS                 04300021
         SLL   TEMP3,3           MULTIPLY BY 8 THE ID                   04310021
         AR    TEMP4,TEMP3       ADD OFFSET TO START ADDRESS            04320021
         TM    PDSE7,SCTR          IS IT IN SCATTER                     04330021
         BC    8,FNL907                NO--BYPASS MOVE OF ID            04340021
         MVC   PDSE16(2),6(TEMP4)  PUT ID IN SCATTER AREA               04350021
FNL907   MVC   PDSE11(3),1(TEMP4)  YES MOVE ADDRESS FOR EP              04360021
         BC    15,FNL301           GO TO STOW ALIAS                     04370021
* NOT SD OR LR -- MUST PUT EP OF MEMBER NAME                            04380021
FNL904   MVC   PDSE11(3),IOCT      RE-USE SAVE MAIN EP                  04390021
         TM    PDSE7,SCTR          WAS SCATTER SPECIFIED                04400021
         BC    8,FNL301           NO--GO TO STOW ALIAS MEMBER           04410021
         MVC   PDSE16(2),IOCT+3    RE-USE SAVED ID                      04420021
         BC    15,FNL301           GO STOW ALAIS                        04430021
*  THIS  IS RETURN FROM  STOW OF ALIAS                                  04440021
FNL906   CLI   STOWBYTE,NOTIN  WAS NAME NOT IN DIRECTORY                04450021
         BC    8,FNL906A       YES--STOW ADDED IT-OK                    04460021
         TM    STOWBYTE,GOODSTOW  WAS STOW OK                           04470021
         BC    4,FNL600           NO--SOME ERROR--GO CHECK TYPE         04480021
FNL906A  MVC   MESG4+5(8),PDSE1    MOVE ALIAS NAME TO PRINT MESSAGE     04490021
         L     PRTREG,PRTWD4       LOAD CNTL WORD                       04500021
         BAL   RET1,FNLPRTMG       RETURN TO CHECK MORE ALIASES AFTER   04510021
FNL906B  LA    TEMP2,10(TEMP2)     INCREMENT COUNT                      04520021
         BCT   TEMP1,FNL902A       RETURN TO PROCESS NEXT ENTRY         04530021
         BC    15,FNLCN            GO TO CONTINUE                       04540021
* STOW FINISHED--CONTINUE                                               04550021
* ROUTINE TO PRINT MESSAGES                                             04560021
FNLPRTMG LR    REG9,PRTREG        LOAD REG 9                            04570021
         SRL   REG9,24       SHIFT OUT ADDRESS                          04580021
         SLL   REG9,1        DOUBLE FOR BYTE COUNT                      04590021
FNLPRTAT L     GOTOR,PRNTAD            ADDRESS OF PRINT ROUTINE         04600021
         LH    REG1,LINECNT        LOAD LINE COUNT                      04610021
         BCT   REG1,FNLP02B  REDUCE COUNT BY ONE                        04620021
         L     DCBREG,HEWLCWBB+20      ADDRESS OF PRINT BUFFER          04630021
         MVI   0(DCBREG),RESTORE       RESTORE PAGE                     04640021
         BALR  RETRN2,GOTOR            TO PRINT ROUTINE                 04650021
         LA    REG1,MAXLINEC           INITIALIZE LINECNT TO MAX        04660021
FNLP02B  STH   REG1,LINECNT        STORE BACK LINE COUNT                04670021
         L     DCBREG,HEWLCWBB+20  ADDRESS OF PRINT BUFFER              04680021
         BCTR  REG9,0                  DECREMENT COUNT BY 1             04690021
         EX    REG9,MOVE               MOVE MESSAGE TO PRINT BUFFER     04700021
         BALR  RETRN2,GOTOR                                             04710021
         BCR   15,RET1                                                  04720021
MOVE     MVC   0(1,DCBREG),0(PRTREG)   EXECUTED MOVE                    04730021
FNLP02A  LA    SAVEREG,SPACES     LOAD REG WITH SAVE AREA               04740021
         WRITE  PRTDECB,SF,(DCBREG),(PRTREG),(REG9)                     04750021
         CHECK  PRTDECB                                                 04760021
         BCR   15,RET1        RETURN                                    04770021
NOSTOW   EQU   *                                                        04780021
* * * THIS ROUTINE RESETS SYSLMOD POINTER IF NO STOW DONE               04790021
         STM   RETRN2,REG1,SAVE4       SAVE REGS 14 - 1                 04800021
         L     DCBREG,DCBADRS2         LOAD ADDR OF SYSLMOD             04810021
         L     R0,DCBRELAD(DCBREG)     PICK UP TTR FOR SYSLMOD          04820021
         IC    R0,=X'00'               ZERO OUT LAST BYTE OF TTR        04830021
         ST    R0,LASTTR               STORE TTR FOR POINT              04840021
         LA    R0,LASTTR               PICK UP ADDR OF TTR              04850021
         POINT (DCBREG),(R0)           PNT SYSLMOD TO CORRECT TTR       04860021
         OI    DCBOFLGS(DCBREG),DCBOFLWR FORCE WRITE BIT ON     XA05438 04862003
         XC    DCBTRBAL(TRBALLT,DCBREG),DCBTRBAL(DCBREG)        OZ01416 04864037
*              THIS ZEROS TRACK BALANCE.                        OZ01416 04866037
         LM    RETRN2,REG1,SAVE4       RESTORE REGS 14 - 1              04870021
         BR    RETRN2                  RETURN                           04880021
*****THIS ROUTINE WILL PRINT OUT THE CHANGED ATTRIBUTES IF ANY          04890021
FNLCN    STM   MSGADD,RETADD,SPACES+8                                   04900021
         SR    PRTREG,PRTREG       USE AS TEMP WORK REG          Y01048 04902003
         IC    PRTREG,PDSAPFAC     GET AUTH CODE                 Y01048 04904000
         CVD   PRTREG,APFWORK      CONVERT TO PACKED FORMAT      Y01048 04906000
         MVC   MESG5A(LMSK),MASK   MOVE MASK TO OUTPUT THEN EDIT Y01048 04908000
         ED    MESG5+DEDT(LEDT),APFWORK+3                        Y01048 04908400
         L     PRTREG,PRTWD5       POINT TO MESSAGE              Y01048 04908800
         BAL   RET1,FNLPRTMG       GO PRINT MESSAGE              Y01048 04909200
         LA    RETADD,ENDMSG                                            04910021
         TM    PDSE7,EXEC    IS MODULE EXECUTABLE                       04920021
         BC    1,TSTRENT     YES                                        04930021
*  GENERATE NOT EXECUTABLE MESSAGE                                      04940021
         LA    MSGADD,NEXEC                                             04950021
         LA    MSGLNG,16     LENGTH                                     04960021
         BC    15,STRTMSG    GENERATE HEADER MEESAGE                    04970021
SETMSG   TM    PRTSW,X'01'   WAS HEADER MESSAGE GENERATESD              04980021
         BC    1,MSG1        YES                                        04990021
*   GENERATE HEADER MESSAGE  YES                                        05000021
STRTMSG  OI    PRTSW,X'01'                                              05010021
         L     PRTREG,HESD                                              05020021
         MVC   0(25,PRTREG),MODATTR    MOVE HEADR TO OUTPUT AREA        05030021
         LA    PRTREG,24(PRTREG)                                        05040021
         LA    TOTLNG,25                                                05050021
         BC    15,MSG2                                                  05060021
MSG1     OI    PRTSW,X'03'        AND SWITCH ON                         05070021
MSG2     MVC   1(17,PRTREG),0(MSGADD)                                   05080021
         AR    TOTLNG,MSGLNG ADD MESSAGE LENGTH TOTOTAL                 05090021
         AR    PRTREG,MSGLNG                                            05100021
         BCR   15,RETADD     TEST NEXT OPTION                           05110021
TSTRENT  TM    SAVATS,REEN   TEST FOR REENTERABLE OPTION                05120021
         BC    8,TSTREUS     NO REENTERABLE OPTION SPECIFIED            05130021
         LA    RETADD,TSTREUS                                           05140021
         TM    PDSE7,REEN    WAS REENTERABLE TURNED ON IN DIRECTORY     05150021
         BC    1,RENT1       REENTERABLE                                05160021
*   NOT REENTERABLE MESSAGE                                             05170021
         LA    MSGADD,NRENT                                             05180021
         LA    MSGLNG,17                                                05190021
         BC    15,SETMSG     MOVE MESSAGE FOR OUTPUT                    05200021
RENT1    LA    MSGADD,NRENT+4                                           05210021
         LA    MSGLNG,13                                                05220021
         BC    15,SETMSG                                                05230021
*   REUSABLE TEST                                                       05240021
TSTREUS  TM    SAVATS,REUS   WAS REUSABLE OPTION SPECIFIED              05250021
         BC    8,TSTREFR     NO                                         05260021
         LA    RETADD,TSTREFR                                           05270021
         TM    PDSE7,REUS    WAS MODULE MARKED REUSABLE                 05280021
         BC    1,REUS1       YES                                        05290021
*  MARK NOT REUSABLE                                                    05300021
         LA    MSGADD,NREUS                                             05310021
         LA    MSGLNG,14                                                05320021
         BC    15,SETMSG                                                05330021
*        REUSALBE MESSAGE                                               05340021
REUS1    LA    MSGADD,NREUS+4                                           05350021
         LA    MSGLNG,10                                                05360021
         BC    15,SETMSG                                                05370021
TSTREFR  TM    SAVATS+1,REFR WAS REFRESHABLE MESSAGE SPECIFIED          05380021
         BC    8,ENDMSG      NO                                         05390021
         LA    RETADD,ENDMSG                                            05400021
         TM    PDSE8,REFR    IS MODULE REFRESHABLE                      05410021
         BC    1,REFR1       YES                                        05420021
         LA    MSGADD,NREFR  NOT REFRESHABLE MESSAGE                    05430021
         LA    MSGLNG,17                                                05440021
         BC    15,SETMSG                                                05450021
REFR1    LA    MSGADD,NREFR+4                                           05460021
         LA    MSGLNG,13                                                05470021
         BC    15,SETMSG                                                05480021
*        END OF MESSAGE                                                 05490021
ENDMSG   TM    PRTSW,X'01'                                              05500021
         BC    8,FNLCN2                                                 05510021
         MVI   0(PRTREG),C'.'          PLACE PERIOD AT END OF MESSAGE   05520021
         TM    PRTSW,X'02'             TEST FOR AND NEEDED.             05530021
         BC    8,NOAND                 NO                               05540021
         LA    RETADD,4(PRTREG)                                         05550021
         SR    PRTREG,MSGLNG                                            05560021
         MVC   5(17,PRTREG),0(MSGADD)                                   05570021
         MVC   2(3,PRTREG),NAND                                         05580021
         MVI   0(RETADD),C'.'                                           05590021
         LA    TOTLNG,4(TOTLNG)                                         05600021
NOAND    L     PRTREG,HESD                                              05610021
FNLA05B  BAL   RET1,FNLPRTAT           GO TO PRINT                      05620021
         NI    PRTSW,X'00'         CLEAR PRINT SWITCH                   05630021
FNLCN2   LM    MSGADD,RETADD,SPACES+8                                   05640021
FNLCN2B  LA    SAVEREG,REGSA      PUT IN ADR. OF REG SAVE AREA  ZA01401 05650002
         L     DCBREG,DCBADRS2     LOAD ADDRESS OF SYSLMOD              05660021
         TM    DCBCIND2(DCBREG),X'80'     HAS STOW BEEN ISSUED          05670021
         BC    8,FNLCN3                NO--GO TO BIT MAP PROCESSOR      05680021
         TM    APT0,XREF               IS XREF SPECIFIED                05690021
         BC    8,FNLCN3                NO--GO TO BIT MAP PROCESSOR      05700021
         TM    NEWSW,X'20'             YES--ARE RLD'S IN CORE           05710021
         BC    8,FNLCN3                YES--XREF ALREADY DONE           05720021
         L     TEMP3,ADJFCB            LOAD JFCBADDR INTO REG           05730021
         TM    0(TEMP3),X'40'          PDS&DEB MEMNAMES CONFLCT?        05740021
         BZ    FNLCN2A                 NO--BRANCH                       05750021
         OI    0(TEMP3),X'80'          INDICATE SYSLMOD OPEN J          05760021
* WILL BE REQUIRED IN HEWLFMAP BECAUSE RLD'S FOR XREF ARE ON            05770021
* SYSLMOD (NOT IN CORE) AND MEMBER NAME IN PDS DIRECTORY                05780021
* CONFLICTS WITH MEMBER NAME IN DEB.                                    05790021
FNLCN2A  L     GOTOR,LCMAPADR          LOAD ADDR OF XREF/MAP SUB        05800021
         BALR  RETRN2,GOTOR       GO TO HEWLCMAP                        05810021
FNLCN3   L     GOTOR,BTMPDIAG          ADDRESS OF BIT MAP PROCESSOR     05820021
         OI    APTSWS,BMDONE           INDICATE BIT MAP DONE            05830021
         BALR  RETRN2,GOTOR                                             05840021
HEWLCEOI TM    APT3,EOI            IS END OF INPUT INDICATED            05850021
         BC    1,FNL150                                                 05860021
         LA    R0,FNTTR           LOAD ADR OF TTR                       05870021
         L     R1,DCBADRS3        LOAD ADR OF SYSUT1 IN REG 1           05880021
         TM    OPENFLAG(R1),OPENBIT    IS SYSUT1 OPEN                   05890021
         BC    8,NOPOINT               NO--DON'T REPOSITION SYSUT1      05900021
         POINT (1),(0)   REPOSITION SYSUT1 TO REUSE SPACE               05910021
NOPOINT  NI    APTSWS,BMOFF            CLEAR BIT MAP DONE IND           05920021
         L     15,INT14AD                                               05930021
         BCR   15,15                                                    05940021
FNL150   LA    15,HEWLCFAB                                              05950021
         BCR   15,15                                                    05960021
         DROP  12                                                       05970021
         USING HEWLCFAB,12                                              05980021
HEWLCFAB LR    BASE,GOTOR                                               05990021
         LA    SAVEREG,REGSA       LOAD REGISTER SAVE AREA ADR          06000021
         TM    APTSWS,BMDONE       IS THE BIT MAP DONE IND ON           06010021
         BC    1,FNALAB1                                                06020021
         TM    NEWSW,X'08'             IS ABORT NO PRINT SW ON          06030021
         BC    1,FNALAB3               YES--DON'T PRINT ANYTHING        06040021
         L     GOTOR,BTMPDIAG    LOSD ADR OF BIT MAP PROCESSOR          06050021
         BALR  RETRN2,GOTOR                                             06060021
FNALAB1  NI    APTSWS,BMOFF        CLEAR BIT MAP DONE IND               06120021
         OI    HEWLCWBB+24,X'02'   SET FLUSH BIT                        06130021
         L     15,PRNTAD                                                06140021
         BALR  14,15                                                    06150021
FNALAB3  L     REG0,FFCADR             ADDRESS OF HIGHEST CORE GOTTEN   06160021
         L     REG1,HEWLCRBB+4         ADDRESS OF SYSLIB BUFFER         06170021
         C     REG1,HEWLCRBB+8         COMPARE TO OTHER SYSLIB BUFFER   06180021
         BC    4,FNALAB2               TAKE THE LOWER ADDRESS           06190021
         L     REG1,HEWLCRBB+8                                          06200021
FNALAB2  SR    REG0,REG1               NUMBER OF BYTES TO FREE          06210021
         FREEMAIN  R,LV=(0),A=(1)                                       06220021
         LA    SAVEREG,REGSA                                            06230021
         L     SYSLMOD,DCBADRS2                                         06240021
         OI    DCBCIND2(SYSLMOD),MODSTO INDICATE                        06250021
         LA    1,DCBADRS1         LOAD ADDR. OF DCB ADDRESSES           06260021
         TM    NEWSW,TERM         IN TSO MODE?                          06270021
         BZ    TSO1               NO - BRANCH                           06280021
         LA    1,DCBADRS0         CLOSE TERM DATA SET                   06290021
TSO1     CLOSE MF=(E,(1))                                               06300021
         TM    APTSW2,SHRSYSMD         TEST IF SYSLMOD RESERVED  A49330 06302000
         BNO   OTHRDEQ                 BRANCH IF NOT             A49330 06302400
         DEQ   (ENQNAME,MINOR,44,SYSTEMS) DEQ RESERVED SYSLMOD   A49330 06302800
         B     SKIPDEQ2                PROCEED                   A49330 06302900
OTHRDEQ  EQU   *                       RESERVE DEQ BYPASS        A49330 06306700
         TM    APTSW2,ENQBIT           DISP=OLD ON SYSLMOD?      A37663 06311000
         BO    SKIPDEQ2                YES - DON'T DEQUEUE       A37663 06314800
         DEQ   (ENQNAME,MINOR,44,SYSTEM)                                06318600
SKIPDEQ2 EQU   *                                                 A37663 06322400
         SR    GOTOR,GOTOR              CLEAR                           06326200
         IC    GOTOR,HISEV+1       PUT IN SEVERITY                      06330021
         SLL   GOTOR,2                  MULTIPLY BY FOUR                06340021
         LM    SAVEREG,RETRN2,SYSRTN                                    06350021
         LM    REG0,BASE,20(SAVEREG)  RESTORE REGISTERS                 06360021
         BCR   15,14                                                    06370021
         DROP  BASE                                                     06380021
         USING HEWLCFNI,BASE                                            06390021
HEWLCFNI LR    BASE,GOTOR         SET UP ADDRESSABILITY                 06400021
         L     BASE,FNLFAB        SET UP ADDRESSABILITY                 06410021
         USING HEWLCFAB,BASE                                            06420021
         L     GOTOR,BTMPDIAG          GET ADDR OF DIAGNOSE RTN  A51444 06422000
         BALR  RETRN2,GOTOR            GO TO PRINT MESSAGES      A51444 06424000
         B     FNALAB1                                                  06430021
         DROP  12                                                       06440021
         USING HEWLCSNX,BASE                                            06450021
HEWLCSNX LR    BASE,GOTOR               SET UP ADDRESSABILITY           06460021
         L     SYSLMOD,DCBADRS2   GET ADR OF SYSLMOD                    06470021
         TM    OPENFLAG(SYSLMOD),OPENBIT IS OPEN BIT ON                 06480021
         BC    8,EXCLOSE          NO--GO RIGHT TO CLOSE FILE IN ERROR   06490021
         OI    DCBCIND2(SYSLMOD),MODSTO  INDICATE STOW DONE             06500021
EXCLOSE  L     GOTOR,FNLFAB                                             06510021
         BR    GOTOR                   GO TO CHECK BIT MAP AND FREE     06520021
STOWBYTE DC    X'00'                                                    06530021
FNLIND   DC    X'00'                                                    06540021
APFIND   DC    X'00'                   APF SUPPORT INDICATORS    YM2054 06542000
*        BIT   0             0=APF NOT YET PROCESSED FOR PDS ENTRY      06544000
*                            1=APF CODE ALREADY PLACED IN PDS ENTRY     06546000
*        BITS  1-7           RESERVED                                   06548000
*                                                                YM2054 06548400
         DS    0F                                                       06550021
PSDIND   DC    X'001F'                 MASK FOR C-BYTE                  06560021
INT14AD  DC    V(HEWLENAM)        RETURN ADR TO INITILIZER              06570021
LCMAPADR DC    V(HEWLFMAP)    ADCON FOR MAP AND XREF ROUTINE            06580021
PRNTAD   DC    V(HEWLEPNT)             ADDRESS OF PRINT ROUTINE         06590021
ADRVLDCK DC    V(HEWVLDCK)             ADR VLD CK RTN   OX04280,OY03413 06592002
FNLFAB   DC    A(HEWLCFAB)                                              06600021
         DS    0F                                                       06610021
FNTTR    DC    X'00000100'                                              06620021
MESG1    DC    X'09'                   SINGLE SPACE CC                  06630021
         DC    C'****          NOW ADDED TO DATA'                       06640021
         DC    C' SET'                                                  06650021
MESG2    DC    X'09'                   SINGLE SPACE CC                  06660021
         DC    C'****          NOW REPLACED IN D'                       06670021
         DC    C'ATA SET '                                              06680021
MESG3    DC    X'09'                   SINGLE SPACE CC                  06690021
         DC    C'****          DOES NOT EXIST BU'                       06700021
         DC    C'T HAS BEEN ADDED TO DATA SET'                          06710021
MESG4    DC    X'09'                   SINGLE SPACE CC                  06720021
         DC    C'****          IS AN ALIAS FOR T'                       06730021
         DC    C'HIS MEMBER'                                            06740021
MESG5    DC    X'09'               SINGLE SPACE CC               Y01048 06742000
         DC    C'AUTHORIZATION CODE IS '                         Y01048 06744000
MESG5A   DS    CL9                 ACTUAL CODE GOES HERE         Y01048 06746000
         DC    C'. '               END OF MESSAGE                Y01048 06748000
         DS    0F                                                       06750021
BTMPDIAG DC    A(HEWLFBTP)                                              06760021
PRTWD1   DC    AL1(CNT1)                                                06770021
         DC    AL3(MESG1)          ADDRESS OF  MESSAGE  1               06780021
PRTWD2   DC    AL1(CNT2)                                                06790021
         DC    AL3(MESG2)          ADDRESS OF  MESSAGE  2               06800021
PRTWD3   DC    AL1(CNT3)                                                06810021
         DC    AL3(MESG3)          ADDRESS OF  MESSAGE  3               06820021
PRTWD4   DC    AL1(CNT4)                                                06830021
         DC    AL3(MESG4)          ADDRESS OF MESSAGE  4                06840021
PRTWD5   DC    AL1(CNT5)           LENGTH OF MESSAGE             Y01048 06842000
         DC    AL3(MESG5)          ADDRESS OF MESSAGE            Y01048 06844000
DCBADRS0 DC    A(HEWLTMDB)    ADDRESS OF SYSTEM DCB              S20007 06850021
DCBADRS1 DC    A(HEWLCSDB)    ADDRESS OF SYSLIN                         06860021
DCBADRS2 DC    A(HEWLCMDB)    ADDRESS OF SYSLMOD                        06870021
DCBADRS3 DC    A(HEWLCUDB)    ADDRESS OF SYSUT1                         06880021
DCBADRS4 DC    A(HEWLCPDB)    ADDRESS OF SYSPRINT                       06890021
DCBADRS5 DC    X'80'          END OF LIST FLAG                          06900021
         DC    AL3(HEWLFLDB)  ADDRESS OF SYSLIB                         06910021
ERCODE1  DC    AL1(DISPSV1)       DISPOSITION AND SEVERITY              06920021
         DC    AL1(ERMSG1)    MESG NUMBER                               06930021
ERCODE2  DC    AL1(DISPSV2)                                             06940021
         DC    AL1(ERMSG2)                                              06950021
ERCODE3  DC    AL1(DISPSV3)                                             06960021
         DC    AL1(ERMSG3)                                              06970021
ERCODE4  DC    AL1(DISPSV4)        DISPOSITION AND SEVERITY             06980021
         DC    AL1(ERMSG4)         MESSAGE NUMBER                       06990021
ERCODE5  DC    AL1(DISPSV5)                                             07000021
         DC    AL1(ERMSG5)                                              07010021
ERCODE6  DC    AL1(DISPSV6)                                             07020021
         DC    AL1(ERMSG6)                                              07030021
ERCODE7  DC    AL1(DISPSV7)             DISPOSITION AND SEVERITY        07040021
         DC    AL1(ERMSG7)              ERROR MESSAGE NUMBER            07050021
ERCODE71 DC    AL2(ERMSG71)            DISP.,SEV.&NO. FOR MSG.71 S21016 07055000
TEMPNAME DC    CL8'TEMPNAME'                                            07060021
MASK     DC    X'202020202020202120'   EDIT MASK                 Y01048 07062000
APFWORK  DS    D                   DOUB WORD WORK AREA           Y01048 07064000
TTRCSAVE DC    1F'0'  SAVE AREA FOR THE TTRC FIELD WHEN STOWING         07070021
* WITH ADD(PDSE2,3) RESTORED FOR SECOND ATTEMPT WITH TEMPNAME           07080021
LASTTR   DS    F                       FOR TTR FOR SYSLMOD              07090021
SAVE4    DS    4F                      TO SAVE REGS DURING POINT        07100021
MODATTR  DC    X'09'                   SINGLE SPACE CC                  07110021
         DC    C'**MODULE HAS BEEN MARKED'                              07120021
NEXEC    DC    C' NOT EXECUTABLE,'                                      07130021
NRENT    DC    C' NOT REENTERABLE,'                                     07140021
NREUS    DC    C' NOT REUSABLE,'                                        07150021
NREFR    DC    C' NOT REFRESHABLE,'                                     07160021
NAND     DC    C'AND'                                                   07170021
PRTSW    DC    X'00'                                                    07180021
*        BIT 0-5  SPARE                                                 07190021
*        BIT 6 X'03'  AND KEYWORD NEEDED.                               07200021
*        BIT 7 X'01'  HEADER MESSAGE CONSTRUCTED, OUTPUT NEEDED.        07210021
LAPF     EQU   2                   LENGTH OF APF INFO            Y01048 07212000
ADJFCB   DC    A(JFCBADDR)             ADDRESS OF SYSLMOD JFCB          07220021
         DS    0F                                                A52450 07222000
MEMBER   DC    CL8' '                  MEMBER NAME STOWED        A52450 07224000
SAVE14   DC    F'0'                    REG 14 SAVE AREA          A52450 07226000
EIGHT    DC    H'8'                    CONSTANT 8 TO USE FOR    OY00359 07228001
*                                      BUMPING PAST AND BACK    OY00359 07228401
*                                      TO 'STARTAPT' STRING     OY00359 07228801
*                                      FOR STOW PARM POSITIONINGOY00359 07229201
         HEWAPT                                                         07230021
         END                                                            07240021
./  ADD  SSI=63480431,NAME=HEWLFIDR
         TITLE '***HEWLFIDR*** CSECT IDENTIFICATION RECORD PROCESSOR'   00050021
**** START OF SPECIFICATIONS ****************************************** 00100021
*                                                                     * 00150021
*1MODULE-NAME = HEWLFIDR                                              * 00200021
*1DESCRIPTIVE-NAME = CSECT IDENTIFICATION RECORD PROCESSOR            * 00250021
*1DESCRIPTION = THE IDR MODULE PROCESSES INCOMING LOAD MODULE IDR'S,  * 00300021
*              IDR DATA ON OBJECT MODULE END RECORDS, AND USER -      * 00350021
*              SUPPLIED IDR DATA FROM THE IDENTIFY CONTROL STATEMENT. * 00400021
*1ASSUMPTIONS = N/A                                                   * 00450021
*1PERFORMANCE = NOT YET AVAILABLE                                     * 00500021
*1FUNCTION = THE FUNCTIONS OF THE CSECT IDENTIFICATION RECORD         * 00550021
*            PROCESSOR ARE DEPENDENT ON THE TYPE OF IDR INPUT         * 00600021
*            BEING PROCESSED:                                         * 00650021
*              LOAD MODULE IDR'S --                                   * 00700021
*                  THE IDR DATA IS EXTRACTED FROM THESE RECORDS,      * 00750021
*                  EXCEPT FOR THE LINKAGE EDITOR IDR, WHICH IS        * 00800021
*                  IGNORED. A CHECK IS MADE TO SEE WHETHER ANY OF THE * 00850021
*                  CSECT'S IDENTIFIED IN THE IDR ARE BEING DELETED    * 00900021
*                  FROM THE OUTPUT LOAD MODULE. IF SO, THE IDR DATA   * 00950021
*                  ASSOCIATED WITH SUCH CSECT'S ARE ALSO DELETED. THE * 01000021
*                  DATA WHICH IS NOT TO BE DELETED IS THEN PLACED AT  * 01050021
*                  THE END OF THE APPROPRIATE IDR DATA TABLE. IN THE  * 01100021
*                  CASE OF TRANSLATOR DESCRIPTIONS, A CHECK IS MADE   * 01150021
*                  TO SEE WHETHER AN IDENTICAL DESCRIPTION HAS        * 01200021
*                  ALREADY BEEN ENTERED INTO THE TABLE. IF SO, THE    * 01250021
*                  CSECT'S ASSOCIATED WITH THE INCOMING ITEM AND      * 01300021
*                  THOSE ASSOCIATED WITH THE EXISTING ITEM ARE        * 01350021
*                  GROUPED INTO A SINGLE TABLE ENTRY TO AVOID         * 01400021
*                  NEEDLESS REPETITION.                               * 01450021
*              OBJECT MODULE END RECORDS --                           * 01500021
*                  WHEN THESE RECORDS CONTAIN THE IDR DATA FIELD      * 01550021
*                  (ONLY PRESENT IF THE TRANSLATOR WHICH PRODUCED THE * 01600021
*                  OBJECT MODULE CONTAINS IDR SUPPORT), THAT FIELD IS * 01650021
*                  EXTRACTED FROM THE RECORD. THE RENUMBERING TABLE   * 01700021
*                  IS SCANNED TO DETERMINE THE CORRECT ESDID'S OF THE * 01750021
*                  CSECT'S TO WHICH THE INCOMING TRANSLATOR           * 01800021
*                  DESCRIPTION APPLIES. IF ANY OF THESE CSECT'S ARE   * 01850021
*                  TO BE DELETED, THEY ARE NOT IDENTIFIED ON THE IDR  * 01900021
*                  OUTPUT. IF AT LEAST ONE OF THE CSECT'S ARE TO BE   * 01950021
*                  KEPT, THE TRANSLATOR DESCRIPTION IS ADDED TO THE   * 02000021
*                  TABLE. AS IN LOAD MODULE INPUT, A CHECK IS MADE    * 02050021
*                  FOR A DUPLICATE ITEM AND, IF FOUND, THE TWO ARE    * 02100021
*                  COMBINED.                                          * 02150021
*              IDENTIFY CONTROL STATEMENT --                          * 02200021
*                  THE CESD LINE ASSOCIATED WITH THE CSECT NAME TO BE * 02250021
*                  IDENTIFIED IS CHECKED. IF THE NAME IS NOT FOUND IN * 02300021
*                  THE CESD AS AN SD-TYPE ENTRY, AN ERROR MESSAGE     * 02350021
*                  IS LOGGED, AND PROCESSING TERMINATES. IF THE CSECT * 02400021
*                  IS TO BE DELETED, THE IDENTIFY DATA IS IGNORED. IF * 02450021
*                  NOT, A CHECK IS MADE TO SEE IF THERE PREVIOUSLY    * 02500021
*                  WAS ANY USER-SUPPLIED DATA ASSOCIATED WITH THAT    * 02550021
*                  CSECT. IF SO, THE OLD DATA IS REPLACED WITH THE    * 02600021
*                  NEW INCOMING DATA. IF NOT, THE INCOMING DATA IS    * 02650021
*                  ADDED TO THE END OF THE TABLE.                     * 02700021
*            WHENEVER ANY TYPE OF DATA IS BEING ADDED TO ONE OF THE   * 02750021
*            TABLES, A CHECK IS FIRST MADE TO DETERMINE WHETHER THE   * 02800021
*            ADDITION OF THAT DATA WILL CAUSE A TABLE OVERFLOW        * 02850021
*            CONDITION. IF IT WILL, AN ERROR MESSAGE INDICATING THIS  * 02900021
*            IS LOGGED, AND PROCESSING IS TERMINATED AT THAT POINT.   * 02950021
*1RESTRICTIONS = NONE                                                 * 03000021
*1MODULE-TYPE = PROCEDURE                                             * 03050021
*    2PROCESSOR = ASSEMBLER                                           * 03100021
*    2MODULE-SIZE = NOT YET KNOWN                                     * 03150021
*    2CODE-ATTRIBUTES = REUSABLE                                      * 03200021
*    2LOAD-ATTRIBUTES = OVERLAY                                       * 03250021
*    2MAIN-ENTRY-POINT = HEWLFIDR - TO PROCESS INPUT LOAD MODULE      * 03300021
*                                   IDR'S AND OBJECT MODULE END       * 03350021
*                                   RECORDS WITH THE IDR FIELD        * 03400021
*         3LINKAGE = BALR 14,15                                       * 03450021
*         3PARAMETER-RECEIVED = POINTER-TO-PARAMETER-LIST             * 03500021
*             4HOW-PASSED = REGISTER 1                                * 03550021
*             4LENGTH-OF-LIST = 4 BYTES                               * 03600021
*                  5FIELD = POINTER TO INPUT BUFFER                   * 03650021
*                       6DISPLACEMENT = 0 BYTES                       * 03700021
*                       6TYPE = ADDRESS                               * 03750021
*    2SECONDARY-ENTRY-POINT = HEWLCIDR - TO PROCESS IDENTIFY CONTROL  * 03800021
*                                        STATEMENT                    * 03850021
*         3LINKAGE = BALR 14,15                                       * 03900021
*         3PARAMETER-RECEIVED = POINTER-TO-PARAMETER-LIST             * 03950021
*             4HOW-PASSED = REGISTER 1                                * 04000021
*             4LENGTH-OF-LIST = 12 BYTES                              * 04050021
*                  5FIELD = POINTER TO CSECT NAME TO BE IDENTIFIED    * 04100021
*                       6DISPLACEMENT = 0 BYTES                       * 04150021
*                       6TYPE = ADDRESS                               * 04200021
*                  5FIELD = POINTER TO IDENTIFY STRING LENGTH         * 04250021
*                       6DISPLACEMENT = 4 BYTES                       * 04300021
*                       6TYPE = ADDRESS                               * 04350021
*                  5FIELD = POINTER TO IDENTIFY STRING                * 04400021
*                       6DISPLACEMENT = 8 BYTES                       * 04450021
*                       6TYPE = ADDRESS                               * 04500021
*    2EXIT = FINISH                                                   * 04550021
*         3PARAMETER-RETURNED = COMPLETION CODE                       * 04600021
*             4HOW-PASSED = REGISTER 15                               * 04650021
*             4TYPE = ARITHMETIC                                      * 04700021
*                 5MODE = BINARY                                      * 04750021
*                 5LENGTH = 32 BITS                                   * 04800021
*                 5SCALING = N/A                                      * 04850021
*                 5VALUE = 0 (NORMAL COMPLETION)                      * 04900021
*    2EXIT = ABORT                                                    * 04950021
*         3PARAMETER-RETURNED = ERROR CODE                            * 05000021
*             4HOW-PASSED = REGISTER 0                                * 05050021
*             4TYPE = ARITHMETIC                                      * 05100021
*                 5MODE = BINARY                                      * 05150021
*                 5LENGTH = 16 BITS                                   * 05200021
*                 5VALUE = X'0446' (MSG. IEW0704)                     * 05250021
*    2EXIT = TABOVFLO                                                 * 05300021
*         3PARAMETER-RETURNED = ERROR CODE                            * 05350021
*             4HOW-PASSED = REGISTER 0                                * 05400021
*             4TYPE = ARITHMETIC                                      * 05450021
*                 5MODE = BINARY                                      * 05500021
*                 5LENGTH = 16 BITS                                   * 05550021
*                 5VALUE = X'0445' (MSG. IEW0694)                     * 05600021
*    2EXTERNAL-PROCEDURE = HEWLFLOG (TO LOG DIAGNOSTIC MESSAGES)      * 05650021
*         3PARAMETER-PASSED = MESSAGE CODE (IN REGISTER 0)            * 05700021
*         3PARAMETER-RETURNED = NONE                                  * 05750021
*    2EXTERNAL-MACRO = HEWAPT                                         * 05800021
*         3PARAMETER-PASSED = NONE                                    * 05850021
*         3PARAMETER-RETURNED = NONE                                  * 05900021
*    2SYSTEM-MACROS = SAVE, RETURN, OPEN, SNAP, CLOSE AND DCB         * 05950021
*    2EXTERNAL-TABLES = CESD, RENUMBERING TABLE AND IDR DATA TABLES   * 06000021
*                       (IDRTRTAB, IDRUDTAB AND IDRZPTAB)             * 06050021
*                                                                     * 06100021
**** END OF SPECIFICATIONS ******************************************** 06150021
         EJECT                                                          06200021
*********************************************************************** 06250021
*                                                                     * 06300021
*                 *******************************                     * 06350021
*                * MAIN ENTRY POINT --HEWLFIDR-- *                    * 06400021
*                 *******************************                     * 06450021
*                                                                     * 06500021
*        CONTROL IS RECEIVED AT THIS POINT FROM MODULE HEWLFINP       * 06550021
*        FOR THE PURPOSE OF ACCEPTING IDR DATA OBTAINED FROM INPUT    * 06600021
*        LOAD MODULES AND/OR INPUT OBJECT MODULES.                    * 06650021
*                                                                     * 06700021
*********************************************************************** 06750021
         SPACE                                                          06800021
HEWLFIDR CSECT                                                          06850021
*A000000                                                         S21016 06900021
*                                                                XM5507 06910005
*C229000-229500,319500-320000,358500-359000                      XM6300 06920005
*A311100,C339500-340000,A604600                                 OX01989 06930002
*C529000-529275                                                  XM4628 06940003
*  SEE FIX FOR XM4628                                           OX02833 06942003
*C529125,A604620-604700,D311100,C339500-340000,D604600           XM4950 06944003
*D214500-215500,A214100-214400,A219100                           XM4950 06944403
* SEE FIX FOR XM4950                                            OX03393 06946003
*C137100-137200,138100-138440,140600,154500-156400,             OX04245 06948002
* 159500-161400,197000-360766,487000-487400,518100-518400,      OX04245 06948402
* 532600-532680,588700-590700,604600-604608                     OX04245 06948802
*A360000,I360118                                        XA05783,YM08524 06949203
*I199100                                                XA05783,YM08532 06949603
*D360118,I280600-280960                                 XA05783,YA04546 06949703
*I358986,I359498                                        XA05450,YA05599 06949803
*A09960,A599900-599920,A358970-359020,A359495,A359602           OZ01412 06949937
*  SEE FIX FOR OZ01412                                          OZ01412 06966637
* C349500 AND C351500                                           OZ11107 06974637
         SPACE                                                          06983337
*********************************************************************** 07000021
*                                                                     * 07050021
*                  EXTERNAL ENTRY POINT DEFINITION                    * 07100021
*                                                                     * 07150021
*********************************************************************** 07200021
         SPACE                                                          07250021
         ENTRY HEWLCIDR                                                 07300021
********************CONTROL PASSED TO THIS EP FROM HEWLFSCN************ 07350021
         SPACE 3                                                        07400021
*********************************************************************** 07450021
*                                                                     * 07500021
*                  SYMBOLIC EQUATES                                   * 07550021
*                                                                     * 07600021
*********************************************************************** 07650021
         SPACE 2                                                        07700021
********************GENERAL REGISTER EQUATES*************************** 07750021
         SPACE                                                          07800021
NULLREG  EQU   0                       REGISTER USED WHEN NO BRANCHING  07850021
*                                      IS DESIRED                       07900021
GREG0    EQU   0                       GENERAL PURPOSE WORK REGISTER    07950021
PARMPTR  EQU   1                       POINTER TO PARAMETER LIST PASSED 08000021
*                                      BY CALLING PROGRAM               08050021
BUFPTR   EQU   1                       POINTER TO RECORD BEING          08100021
*                                      PROCESSED IN INPUT BUFFER        08150021
GREG1    EQU   1                       GENERAL PURPOSE WORK REGISTER    08200021
APTBASE  EQU   2                       BASE ADDRESS FOR THE ALL         08250021
*                                      PURPOSE TABLE DSECT              08300021
TABPTR   EQU   3                       POINTER TO START OF IDR DATA     08350021
*                                      TABLE                            08400021
TABNXT   EQU   4                       POINTER TO NEXT AVAILABLE BYTE   08450021
*                                      IN IDR DATA TABLE                08500021
TABEND   EQU   5                       MAXIMUM LENGTH OF IDR DATA TABLE 08550021
ITEMPTR  EQU   6                       POINTER TO IDR ITEM BEING        08600021
*                                      PROCESSED                        08650021
DATAPTR  EQU   7                       POINTER TO PORTION OF ITEM       08700021
*                                      BEING EXAMINED                   08750021
GREG7    EQU   7                       GENERAL PURPOSE WORK REGISTER    08760002
ENDBUF   EQU   8                       POINTER TO END OF INPUT RECORD   08800021
GREG8    EQU   8                       GENERAL PURPOSE WORK REGISTER    08850021
TEMPRTN  EQU   9                       RETURN REGISTER FOR INTERNAL     08900021
*                                      SUBROUTINE LINKAGES              08950021
CESDPTR  EQU   9                       POINTER TO THE START OF THE      09000021
*                                      COMPOSITE ESD TABLE              09050021
GREG9    EQU   9                       GENERAL PURPOSE WORK REGISTER    09100021
RNTPTR   EQU   10                      POINTER TO THE START OF THE      09150021
*                                      RENUMBERING TABLE                09200021
GREG10   EQU   10                      GENERAL PURPOSE WORK REGISTER    09250021
GREG11   EQU   11                      GENERAL PURPOSE WORK REGISTER    09300021
IDRBASE  EQU   12                      BASE ADDRESS FOR MODULE          09350021
SAPTR    EQU   13                      POINTER TO CALLING PROGRAM'S     09400021
*                                      SAVE AREA                        09450021
GREG13   EQU   13                      GENERAL PURPOSE WORK REGISTER    09500021
RETURN   EQU   14                      RETURN ADDRESS IN CALLING        09550021
*                                      PROGRAM                          09600021
GREG14   EQU   14                      GENERAL PURPOSE WORK REGISTER    09650021
ENTRYPT  EQU   15                      ENTRY POINT ADDRESS FOR SYSTEM   09700021
*                                      LINKAGES                         09750021
GREG15   EQU   15                      GENERAL PURPOSE WORK REGISTER    09800021
         SPACE 2                                                        09850021
*****************SYMBOLIC MASKS AND IMMEDIATE BYTES******************** 09900021
         SPACE                                                          09950021
EXCON    EQU   X'0100'                 INCREMENT CONSTANT       OZ01412 09960037
SPZAP    EQU   X'01'                   SUBTYPE VALUE FOR IMASPZAP IDR   10000021
LKED     EQU   X'02'                   SUBTYPE VALUE FOR LINK-EDIT IDR  10050021
TRANS    EQU   X'04'                   SUBTYPE VALUE FOR TRANSLATOR IDR 10100021
USER     EQU   X'08'                   SUBTYPE VALUE FOR USER-DATA IDR  10150021
INDTR    EQU   0                       TRANS.TABLE BEING PROCESSED      10160021
INDUD    EQU   4                       USER DATA TABLE BEING PROCESSED  10170021
INDZP    EQU   8                       IMASPZAP TABLE BEING PROCESSED   10180021
INDBR    EQU   12                      TRANS-TAB BEING PROCESSED XM5507 10182000
*                                      NOT USING POSTIDR RTN     XM5507 10184000
INDNT    EQU   16                      NO TABLE BEING PROCESSED  XM7705 10190000
BLANK    EQU   C' '                    FLAG VALUE FOR NO IDR DATA       10200021
*                                      ON AN OBJECT MODULE END CARD     10250021
SINGLE   EQU   C'1'                    FLAG VALUE FOR SINGLE IDR ENTRY  10300021
*                                      ON AN OBJECT MODULE END CARD     10350021
DOUBLE   EQU   C'2'                    FLAG VALUE FOR DOUBLE IDR ENTRY  10400021
*                                      ON AN OBJECT MODULE END CARD     10450021
ONETRNS  EQU   X'00'                   INDICATOR VALUE FOR A SINGLE     10500021
*                                      IDR TRANSLATOR DESCRIPTION       10550021
DBLSWS   EQU   X'01'                   INDICATOR VALUE FOR A DOUBLE     10600021
*                                      IDR TRANSLATOR DESCRIPTION       10650021
SWSOFF   EQU   X'00'                   IMMEDIATE BYTE TO RE-INITIALIZE  10700021
*                                      ALL IDR SWITCHES TO ZEROES       10750021
SWSINIT  EQU   X'13'                   IMMEDIATE BYTE TO RE-INITIALIZE  10800021
*                                      THE IDR SWITCHES IN THE APT      10850021
PARTOFF  EQU   X'EF'                   IMMEDIATE BYTE TO TURN OFF       10900021
*                                      PARTIAL ENTRY INDICATOR          10950021
LASTID   EQU   X'80'                   MASK VALUE TO DETERMINE LAST ID  11000021
*                                      IN A STRING OF ESDID'S ON AN IDR 11050021
*                                      TRANSLATOR ITEM                  11100021
LSTIDOFF EQU   X'7F'                   IMMEDIATE BYTE TO TURN OFF THE   11150021
*                                      HIGH ORDER BIT IN THE LAST       11200021
*                                      CESDID IN A STRING OF CESDID'S   11250021
LSTIDFND EQU   X'80'                   SWITCH VALUE INDICATING THE      11300021
*                                      LAST ID IN A STRING OF CESDID'S  11350021
*                                      HAS BEEN FOUND                   11400021
DELETE   EQU   X'10'                   SUB-CLASSIFICATION OF A CESD     11450021
*                                      TYPE MARKED FOR DELETION         11500021
AL1VLD   EQU   X'40'                   SWITCH VALUE INDICATING AT       11550021
*                                      LEAST ONE CESDID IN A STRING     11600021
*                                      IS VALID (NOT DELETE)            11650021
TRSWOFF  EQU   X'3F'                   IMMEDIATE BYTE TO TURN OFF       11700021
*                                      SWITCHES AL1VLD AND LSTIDFND     11750021
*                                      IN LCLSWS                        11800021
CNTDITM  EQU   X'20'                   SWITCH VALUE INDICATING A        11850021
*                                      CONTINUED ENTRY IS BEING         11900021
*                                      PROCESSED                        11950021
CNTDOFF  EQU   X'DF'                   IMMEDIATE BYTE TO TURN OFF       12000021
*                                      CONTINUED ENTRY INDICATOR        12050021
CNTDID   EQU   X'10'                   SWITCH VALUE INDICATING A        12100021
*                                      CONTINUED CESDID IS BEING        12150021
*                                      PROCESSED                        12200021
CNTIDOFF EQU   X'EF'                   IMMEDIATE BYTE TO TURN OFF       12250021
*                                      CONTINUED CESDID INDICATOR       12300021
ZCHNOFF  EQU   X'BF'                   IMMEDIATE BYTE TO TURN OFF THE   12350021
*                                      'CHAIN' BIT IN AN IMASPZAP IDR   12400021
SECTDEF  EQU   X'0F'                   MASK VALUE FOR SD TYPE IN CESD   12450021
PRIVATE  EQU   X'04'                   MASK VALUE FOR PC IN CESD TYPE   12500021
OTHTYPE  EQU   X'0B'                   MASK VALUE FOR ALL BITS IN CESD  12550021
*                                      TYPE OTHER THAN PC               12600021
LOGIDNT  EQU   X'20'                   SWITCH VALUE TO INDICATE TO THE  12650021
*                                      ERROR LOG ROUTINE TO LOG A CARD  12700021
*                                      IMAGE WHOSE ADDRESS IS IN REG.1  12750021
LOGSOFF  EQU   X'DF'                   MASK VALUE TO TURN OFF LOGIDNT   12800021
*                                      SWITCH                           12850021
HIDSW    EQU   4                       PARTIAL ID INDICATOR             13050021
STRSW    EQU   12                      PARTIAL ID-STRING INDICATOR      13100021
ITMSW    EQU   8                       PARTIAL TRANS.ITEM INDICATOR     13150021
         SPACE 2                                                        13200021
*****************SYMBOLIC DISPLACEMENTS AND LENGTHS******************** 13250021
         SPACE                                                          13300021
NODISP   EQU   0                       DISPLACEMENT OF ZERO             13350021
SUBTYPE  EQU   2                       SUBTYPE FIELD IN LOAD MOD IDR'S  13400021
OBJFLAG  EQU   32                      FLAG FIELD IN OBJECT END CARDS   13450021
HEADLEN  EQU   3                       LENGTH OF IDR RECORD-HEADER      13500021
NEXTID   EQU   2                       LENGTH OF CESDID FIELD IN IDR    13550021
*                                      DATA ITEMS                       13600021
SNGTRN   EQU   16                      LENGTH OF A SINGLE IDR           13650002
*                                      TRANSLATOR DESCRIPTION           13700002
SNGTRN1  EQU   12                      LENGTH OF A SINGLE IDR   OX04245 13710002
*                                      TRANSLATOR NAME, LEVEL   OX04245 13720002
DBLTRN   EQU   31                      LENGTH OF A DOUBLE IDR           13750021
*                                      TRANSLATOR DESCRIPTION           13800021
DBLTRN1  EQU   24                      LENGTH OF A DOUBLE IDR   OX04245 13810002
*                                      TRANSLATOR NAME, LEVEL   OX04245 13820002
IDHDR1   EQU   6                       LENGTH OF FLAG,PTR,DATE  OX04245 13830002
*                                      HEADER IN TRANS ID TABLE OX04245 13840002
IDHDR2   EQU   9                       LENGTH OF FLAG,PTR, TWO  OX04245 13842002
*                                      DATES IN TRANS ID TABLE  OX04245 13844002
COUNT    EQU   1                       DISPLACEMENT TO THE BYTE COUNT   13850021
*                                      FIELD IN LOAD MODULE IDR'S       13900021
ADJ      EQU   1                       ADJUSTMENT VALUE FOR COMPUTING   13950021
*                                      THE ENDING ADDR. OF A REC.       14000021
HALFID   EQU   8                       SHIFT VALUE FOR ONE BYTE         14050021
BYTE1    EQU   8                       ONE-BYTE SHIFT           OX04245 14060002
BYTE2    EQU   1                       ONE-BYTE DISPLACEMENT            14100021
RNTINDX  EQU   2                       SHIFT VALUE TO GET INDEX INTO    14150021
*                                      THE RENUMBERING TABLE            14200021
CESDINDX EQU   4                       SHIFT VALUE TO GET INDEX INTO    14250021
*                                      THE CESD                         14300021
IDLEN    EQU   2                       LENGTH OF A CESDID               14350021
HIDLEN   EQU   1                       LENGTH OF HALF A CESDID          14400021
TYPE     EQU   8                       DISPLACEMENT OF TYPE FIELD IN    14450021
*                                      A CESD ENTRY                     14500021
NOLEN    EQU   0                       NULL LENGTH                      14550021
CESDWDTH EQU   16                      WIDTH OF CESD TABLE              14600021
FSTID    EQU   1                       VALUE OF 1ST CESDID              14650021
NAMELEN  EQU   8                       LENGTH OF A CSECT NAME           14700021
UDCNT    EQU   5                       DISPLACEMENT TO BYTE COUNT FIELD 14750021
*                                      IN USER DATA IDR                 14800021
UDHEAD   EQU   6                       HEADER LENGTH IN USER DATA IDR   14850021
FULWD    EQU   4                       LENGTH OF A FULL WORD            14900021
HALFWD   EQU   2                       LENGTH OF A HALF WORD     XM4628 14910003
USTRLEN  EQU   4                       DISPLACEMENT TO ADDR. OF         14950021
*                                      IDENTIFY STRING LENGTH IN        15000021
*                                      PARAMETER LIST                   15050021
UDSTR    EQU   8                       DISPLACEMENT TO ADDRESS OF       15100021
*                                      IDENTIFY STRING IN PARAMETER     15150021
*                                      LIST                             15200021
UDLEN    EQU   40                      LENGTH OF IDENTIFY STRING        15250021
DATELEN  EQU   3                       LENGTH OF DATE FIELD             15300021
RNTYPE   EQU   3                       DISPLACEMENT TO THE ESD TYPE     15350021
*                                      FIELD IN AN RNT ENTRY            15400021
PKLEN1   EQU   2                       PACKED LENGTH OF V/M     OX04245 15450002
*                                      LEVEL IN TRANSLATOR ITEM OX04245 15500002
PKLEN2   EQU   3                       PACKED LENGTH OF DATE    OX04245 15510002
*                                      IN TRANSLATOR ITEM       OX04245 15520002
PKLEN    EQU   PKLEN1+PKLEN2           PACKED LENGTH OF V/M     OX04245 15530002
*                                      LEVEL, DATE IN TRANS IDR ITEM    15540002
UPLEN    EQU   9                       UNPACKED LENGTH OF V/M   OX04245 15550002
*                                      LEVEL,DATE IN OBJ.END    OX04245 15600002
*                                      RECD IDR FIELD           OX04245 15610002
PCKADJ   EQU   14                      OFFSET FOR PAKING ALGORITHM      15620002
*                                      EQUALS VVMM+UPLEN-PKLEN  OX04245 15640002
TRNMLEN  EQU   10                      LENGTH OF TRANSLATOR NAME IN     15650021
*                                      OBJ.END REC. IDR FIELD           15700021
TRNM1    EQU   33                      DISPLACEMENT TO THE TRANSLATOR   15750021
*                                      NAME ON AN OBJ.END WITH IDR      15800021
TRNM2    EQU   52                      DISPLACEMENT TO THE 2ND TRANS.   15850021
*                                      NAME ON AN OBJ.END WITH IDR      15900021
VM1      EQU   43                      DISPLACEMENT TO THE V/M  OX04245 15950002
*                                      LEVEL ON AN OBJ.END IDR  OX04245 16000002
VM2      EQU   62                      DISPLACEMENT TO THE 2ND  OX04245 16050002
*                                      V/M LVL ON AN OBJ.END WITH IDR   16100002
YD1      EQU   47                      DISPLACEMENT TO DATE     OX04245 16110002
*                                      ON OBJ END IDR           OX04245 16120002
YD2      EQU   66                      DISPLACEMENT TO 2ND DATE OX04245 16130002
*                                      ON OBJ END IDR           OX04245 16140002
UDMAXLEN EQU   46                      MAXIMUM LENGTH OF A USER DATA    16150021
*                                      ITEM ON A LOAD MODULE IDR        16200021
ZAPLEN   EQU   13                      LENGTH OF AN IMASPZAP DATA ENTRY 16250021
MSGLEN   EQU   79                      LENGTH OF MESSAGE LINE - 1       16300021
         SPACE 3                                                        16350021
*********************************************************************** 16400021
*                                                                     * 16450021
*                  END OF SYMBOLIC EQUATES                            * 16500021
*                                                                     * 16550021
*********************************************************************** 16600021
         EJECT                                                          16650021
*********************************************************************** 16700021
*********************************************************************** 16750021
**********                                                   ********** 16800021
**********           EXECUTEABLE CODE BEGINS HERE            ********** 16850021
**********                                                   ********** 16900021
*********************************************************************** 16950021
*********************************************************************** 17000021
         SPACE 2                                                        17050021
         SAVE  (14,12),T,*             SAVE CALLING PROGRAM'S REGISTERS 17100021
         BALR  IDRBASE,NULLREG         LOAD BASE ADDRESS                17150021
         USING START,IDRBASE           ESTABLISH ADDRESSABILITY FOR     17200021
*                                      MODULE                           17250021
         USING APTDSECT,APTBASE        ESTABLISH ADDRESSABILITY FOR     17300021
*                                      THE ALL PURPOSE TABLE            17350021
START    MVI   TABIND,INDNT            INITIALIZE TABLE TYPE INDICATOR  17552021
         L     BUFPTR,NODISP(PARMPTR)  LOAD ADDR. OF INPUT RECORD       17586702
         TM    IDRSWS,OBJIDR           IS INPUT AN OBJECT END CARD?     17600021
         BZ    TESTLMOD                NO, BRANCH                       17650021
         CLI   OBJFLAG(BUFPTR),BLANK   IF IT IS, DOES IT CONTAIN THE    17700021
*                                      IDR FIELD?  (BLANK IN COL.33     17750021
*                                      INDICATES NO IDR DATA PRESENT)   17800021
         BE    FINISH                  IF NOT, RETURN                   17850021
         CLI   OBJFLAG(BUFPTR),DOUBLE  IS IDR DATA A DOUBLE ENTRY?      17900021
         BNE   ONENTRY                 IF NOT, BRANCH                   17950021
         OI    IDRSWS,DBLOBJ           IF IT IS, TURN ON THE DOUBLE     18000021
*                                      ENTRY INDICATOR                  18050021
         B     IDRTRANS                GO TO PROCESS THE IDR DATA       18100021
ONENTRY  CLI   OBJFLAG(BUFPTR),SINGLE  IS IDR DATA A SINGLE ENTRY?      18150021
         BNE   FINISH                  IF NOT, THE FLAG FIELD IS        18170021
*                                      INVALID FOR IDR -- IGNORE        18190021
*                                      THE RECORD                       18210021
         B     IDRTRANS                IF IT IS, GO TO PROCESS IT       18250021
TESTLMOD TM    IDRSWS,LMDIDR           IS INPUT A LOAD MODULE IDR?      18300021
         BNO   ABORT                   IF NOT, IT IS AN ERROR           18350021
         TM    SUBTYPE(BUFPTR),LKED    IS IT A LINK-EDIT RECORD?        18400021
         BO    FINISH                  IF IT IS, RETURN                 18450021
         SR    ENDBUF,ENDBUF           ZERO REGISTER TO RECEIVE COUNT   18500021
         IC    ENDBUF,COUNT(BUFPTR)    GET BYTE COUNT FOR RECORD        18550021
         LA    ENDBUF,ADJ(ENDBUF,BUFPTR) GET ADDRESS OF END OF RECORD   18600021
         TM    SUBTYPE(BUFPTR),SPZAP   IS THIS AN IMASPZAP RECORD?      18650021
         BO    IDRSPZAP                IF IT IS, BRANCH                 18700021
         TM    SUBTYPE(BUFPTR),TRANS   IS IT A TRANSLATOR RECORD?       18750021
         BO    IDRTRANS                IF IT IS, BRANCH                 18800021
         TM    SUBTYPE(BUFPTR),USER    IS IT A USER-DATA RECORD?        18850021
         BO    IDRIDENT                IF IT IS, BRANCH                 18900021
         B     ABORT                   IF NONE OF THE ABOVE BRANCHES    18950021
*                                      HAVE BEEN TAKEN, THE SUBTYPE     19000021
*                                      FIELD OF THE RECORD CONTAINS     19050021
*                                      AN INVALID CODE                  19100021
         EJECT                                                          19150021
*********************************************************************** 19200021
*********************************************************************** 19250021
****                                                               **** 19300021
****     SUB-PROGRAM IDRTRANS PROCESSES INPUT LOAD MODULE IDR'S    **** 19350021
****     WITH TRANSLATOR DATA AND OBJECT MODULE END RECORDS        **** 19400021
****     WITH THE IDR TRANSLATOR IDENTIFICATION FIELD              **** 19450021
****                                                               **** 19500021
*********************************************************************** 19550021
*********************************************************************** 19600021
         SPACE 2                                                        19650021
IDRTRANS EQU   *                                                OX04245 19700002
         LA    TABNXT,IDRTRCUR         GET CURRENT TAB SIZE PTR OX04245 19760002
         ST    TABNXT,TABCURAD         SAVE THE POINTER         OX04245 19770002
         L     TABNXT,IDRTIEND         GET ADDRESS OF NEXT      OX04245 19800002
*                                      BYTE IN TABLE                    19850021
         L     TABEND,IDRTITAB         GET STARTING ADDRESS OF  OX04245 19900002
*                                      TRANSLATOR ID TABLE      OX04245 19910002
         LR    TABPTR,TABEND           INIT TABPTR FOR CLEANUP  YM08532 19920002
         AH    TABEND,IDRTILEN         GET ENDING ADDRESS OF    OX04245 19950002
*                                      TRANSLATOR ID TABLE      OX04245 19952002
         L     RNTPTR,RECNT            GET ADDRESS OF RNT       OX04245 19992002
         L     CESDPTR,CHESD           GET THE ADDRESS OF THE CESD      20200021
         LA    ITEMPTR,HEADLEN(BUFPTR) POINT TO FIRST DATA ITEM IN REC  20250002
         TM    IDRSWS,PARTENT          IS LAST ITEM IN TABLE A PARTIAL  20300021
*                                      ENTRY?                           20350021
         BO    CONTIN                  IF SO, BRANCH                    20400021
         C     TABNXT,IDRTITAB         FIRST ENTRY IN TABLE?    OX04245 20410002
         BNE   HDPTR                   NO, USE IDRTICUR         OX04245 20420002
         SR    GREG11,GREG11           ZERO OUT WORK REGISTER   OX04245 20430002
         STH   GREG11,LASTPTR          INITIALIZE LASTPTR       OX04245 20432002
         B     HDPTR1                  BRANCH TO ZERO TABNXTSV  OX04245 20440002
HDPTR    EQU   *                                                OX04245 20442002
         LR    GREG11,TABNXT           COPY NEXT AVAILABLE BYTE OX04245 20444002
         S     GREG11,IDRTITAB         MAKE A RELATIVE ADR      OX04245 20446002
*                                      DONT USE IDRTICUR        OX04245 20448002
HDPTR1   EQU   *                                                OX04245 20450402
         STH   GREG11,TABNXTSV         SAVE AS POINTER TO START OX04245 20452002
*                                      OF HEADER                OX04245 20452102
         LA    TABNXT,IDHDR2(TABNXT)   SET POINTER TO           OX04245 20452202
*                                      TEMPORARY WORK AREA      OX04245 20452302
         TM    IDRSWS,OBJIDR           IS OBJECT MODULE INDICATOR ON?   20452402
         BO    TRANSOBJ                IF SO, GO TO POST        OX04245 20452802
         TM    IDRSWS,LMDIDR           IS LOAD MODULE INDICATOR ON?     20453202
         BNO   ABORT                   IF NOT, IT IS AN ERROR   OX04245 20453602
SCNITM   EQU   *                                                OX04245 20460002
         LR    DATAPTR,ITEMPTR         POINT TO START OF DATA FOR       20500002
*                                      CURRENT ITEM                     20550021
SCNITM1  EQU   *                                                OX04245 20560002
         LA    GREG11,NEXTID(DATAPTR)  GET ENDING ADDR. OF THIS ID      20600002
         TM    LCLSWS,CNTDID           IS THIS A CONTINUED ID?          20650021
         BO    SCNITM04                IF SO, BRANCH                    20700021
         CR    GREG11,ENDBUF           IS IT COMPLETE IN THIS RECORD?   20750021
         BH    PRTLID                  IF NOT, BRANCH                   20800021
SCNITM04 TM    NODISP(DATAPTR),LASTID  IS THIS THE LAST CESDID FOR THE  20850021
*                                      CURRENT ITEM?                    20900021
         BNO   SCNITM3                 IF NOT, BRANCH           OX04245 20950002
         OI    LCLSWS,LSTIDFND         TURN ON 'LAST ID FOUND' SWITCH   21000021
         NI    NODISP(DATAPTR),LSTIDOFF  TURN OFF HIGH ORDER BIT OF ID  21050021
SCNITM3  SR    GREG11,GREG11           ZERO WORK REG 11         OX04245 21100002
         IC    GREG11,NODISP(DATAPTR)  GET 1ST BYTE OF ID       OX04245 21150002
         SLL   GREG11,HALFID           SHIFT FOR SECOND BYTE    OX04245 21200002
         IC    GREG11,BYTE2(DATAPTR)   GET SECOND BYTE          OX04245 21250002
         SLL   GREG11,RNTINDX          MULT BY 4 TO GET INDEX   OX04245 21300002
*                                      TO RNT TABLE             OX04245 21350002
         LA    GREG11,NODISP(RNTPTR,GREG11)  GET ADDRESS OF     OX04245 21400002
*                                      RENUMBERED  ESDID        OX04245 21500002
         TM    RNTYPE(GREG11),DELETE   ENTRY MARKED DELETE?     OX04245 21510002
         BO    SCNITM6                 IF SO, BRANCH TO SKIP    OX04245 21520002
*                                      FURTHER PROCESSING       OX04245 21530002
         MVC   NODISP(IDLEN,DATAPTR),NODISP(GREG11) MOVE        OX04245 21550002
*                                      NEW ID TO INPUT          OX04245 21560002
*                                      BUFFER FOR PROCESSING    OX04245 21600002
         LH    GREG11,NODISP(GREG11)   GET RENUMBERED CESDID    OX04245 21610002
         SLL   GREG11,CESDINDX         MULTIPLY BY 16 TO        OX04245 21620002
*                                      GET CESD INDEX           OX04245 21630002
         AR    GREG11,CESDPTR          GET ADDRESS OF CESD LINE OX04245 21640002
         TM    TYPE(GREG11),DELETE     SECTION MARKED FOR DELETION?     21650002
         BO    SCNITM6                 YES, DONT MOVE TO ID TABLE       21700002
         BAL   GREG14,MOVEID0          MOVE ID TO TRANS ID TAB  OX04245 21750002
SCNITM6  EQU   *                                                OX04245 21800002
         TM    LCLSWS,AL1VLD+LSTIDFND  AT LEAST ONE VALID ID    OX04245 21900002
*                                      FOUND OR LAST ID         OX04245 21910102
*                                      FOUND?                   OX04245 21920002
         BNO   GETNXT                  IF NOT BOTH TRUE,        OX04245 21970002
*                                      BRANCH                   OX04245 21980002
         BCTR  TABNXT,NULLREG          BACK UP ONE ID           OX04245 22000002
         BCTR  TABNXT,NULLREG          TO GET TO PREVIOUS       OX04245 22050002
         OI    NODISP(TABNXT),LASTID   MARK LAST ID             OX04245 22100002
GETNXT   EQU   *                                                OX04245 22150002
         LA    ITEMPTR,NEXTID(ITEMPTR)  INCREMENT BUFFER POINTER        22200002
*                                      TO NEXT ID               OX04245 22250002
         CR    ITEMPTR,ENDBUF          AT END OF RECORD?        OX04245 22300002
         BNL   PRTLSTR                 IF SO, BRANCH TO PROCESS BROKEN  22350002
*                                      STRING                   OX04245 22400002
STCNTIN  EQU   *                                                OX04245 22402002
         NI    LCLSWS,CNTDOFF          TURN OFF CONT ID SWITCH  OX04245 22404002
         TM    LCLSWS,LSTIDFND         WAS THIS THE LAST CESDID OX04245 22410002
         BNO   SCNITM                  NO, LOOP TO CONTINUE SCN OX04245 22470002
PREDESC  EQU   *                                                OX04245 22470402
         L     GREG11,IDRTITAB         GET ADDRESS OF HEADER    OX04245 22480402
         AH    GREG11,TABNXTSV         FROM SAVED POINTER       OX04245 22482402
         CLI   INDCTR(ITEMPTR),ONETRNS IS THIS ITEM A SINGLE    OX04245 22490402
*                                      TRANSLATOR DESCRIPTION?  OX04245 22492402
         BNE   PREDESC2                NO,BRANCH                OX04245 22494402
         LA    DATAPTR,SNGTRN(ITEMPTR) GET ADDRESS OF END OF    OX04245 22496402
*                                      ITEM                     OX04245 22498402
         TM    LCLSWS,CNTDITM          CONTINUED ITEM          @ZA14611 22498837
         BO    CNTITEM1                YES, BRANCH             @ZA14611 22499737
         CR    DATAPTR,ENDBUF          COMPLETE IN THIS RECORD? OX04245 22500637
         BH    PRTLITEM                NO,BRANCH                OX04245 22501537
CNTITEM1 TM    LCLSWS,AL1VLD           AT LEAST ON VALID ID?   @ZA14611 22502437
         BZ    TRFIN                   NO, DONT MOVE TRANS DATA OX04245 22503402
         LA    ITEMPTR,ADJ(ITEMPTR)    INCREMENT TO POINT       OX04245 22503802
*                                       TO FIRST TRANS NAME     OX04245 22506002
         MVC   YYDDD(DATELEN,GREG11),SNGTRN1(ITEMPTR) MOVE FIRST        22508202
*                                      DATE TO HEADER           OX04245 22510402
         B     TRDESC0                 BRANCH TO PROCESS        OX04245 22512602
PREDESC2 EQU   *                                                OX04245 22514802
         LA    DATAPTR,DBLTRN(ITEMPTR) GET ADDRESS OF END OF ITEM       22517002
         TM    LCLSWS,CNTDITM          CONTINUED ITEM?         @ZA14611 22519237
         BO    CNTITEM2                YES, BRANCH             @ZA14611 22520237
         CR    DATAPTR,ENDBUF          COMPLETE IN THIS RECORD? OX04245 22521237
         BH    PRTLITEM                NO, BRANCH TO PROCESS    OX04245 22522237
*                                      CONTINUED RECORD         OX04245 22523237
CNTITEM2 TM    LCLSWS,AL1VLD           AT LEAST ONE VALID ID?  @ZA14611 22524237
         BZ    TRFIN                   NO, DONT MOVE TRANS DATA OX04245 22525702
         LA    GREG7,SNGTRN(ITEMPTR)  POINT TO SECOND ITEM      OX04245 22525802
         LA    ITEMPTR,ADJ(ITEMPTR)    INCREMENT TO POINT       OX04245 22528002
*                                      TO FIRST TRANS NAME      OX04245 22530202
         MVC   YYDDD(DATELEN,GREG11),SNGTRN1(ITEMPTR) MOVE FIRST        22532402
*                                      DATE TO HEADER           OX04245 22534602
         MVC   YYDDD2(DATELEN,GREG11),SNGTRN1(GREG7) MOVE 2ND   OX04245 22536802
*                                      TRANSLATOR DATE          OX04245 22539002
         MVC   SNGTRN1(SNGTRN1,ITEMPTR),NODISP(GREG7) SQUISH    OX04245 22541202
*                                      NAMES TOGETHER FOR TABLE SEARCH  22543402
         OI    IDRSWS,DBLOBJ           TURN ON DOUBLE SWITCH    OX04245 22545602
         B     DBLTRNS                 BRANCH TO PROCESS DATA           22547802
         EJECT                                                          22550002
         SPACE 3                                                        25800021
*********************************************************************   25850021
*******            THE FOLLOWING SECTION OF CODE              *******   25900021
*******          HANDLES TRANSLATOR IDR ITEMS THAT            *******   25950021
*******            ARE EXPECTED TO BE CONTINUED               *******   26000002
*******                 ON THE NEXT RECORD                    *******   26050002
*********************************************************************   26100021
         SPACE 1                                                        26150021
PRTLID   MVI   PTLSWCH,HIDSW           TURN ON THE HALF-ID INDICATOR    26200021
         MVC   ID1ST(HIDLEN),NODISP(DATAPTR)  MOVE IN THE HALF-ID       26250002
         B     PARTIAL                 GO TO POST THE PARTIAL ITEM      26400002
PRTLSTR  MVI   PTLSWCH,STRSW           TURN ON THE STRING INDICATOR     26450021
PARTIAL  EQU   *                                                OX04245 26500002
         ST    TABNXT,IDRTIEND         UPDATE ID TABLE POINTER  OX04245 26510002
         MVC   CPYLCLS(ADJ),LCLSWS     COPY LOCAL SWITCHES      OX04245 26550002
         OI    IDRSWS,PARTENT          TURN ON PARTIAL ENTRY FLAG       26560002
         B     TRFIN3                  LEAVE ROUTINE            OX04245 26600002
PRTRMOV  MVC   OBJTRN(NOLEN),NODISP(ITEMPTR)  MOVE PARTIAL TRANSLATOR   26650002
*                                      DESCRIPTION TO WORK AREA OX04245 26700002
PRTLITEM EQU   *                       HANDLE PARTIAL DESCRIPTION       26750002
         SR    DATAPTR,ITEMPTR         GET EXPECTED LENGTH OF ITEM      26800002
         SR    ENDBUF,ITEMPTR          GET LENGTH OF PARTIAL ITEM       26950002
         STC   ENDBUF,PTLTRLN          SAVE PARTIAL LENGTH      OX04245 26960002
         LR    GREG11,ENDBUF           SAVE FOR LATER COMPUTATION       27000002
         BCTR  ENDBUF,NULLREG          SUBTRACT 1 FOR MOVE LENGTH       27050002
         EX    ENDBUF,PRTRMOV          MOVE IN PARTIAL ITEM DATAOX04245 27100002
         SR    DATAPTR,GREG11          COMPUTE CONTINUATION LENGTH      27110002
         STC   DATAPTR,XPTRLEN         SAVE CONTINUATION LENGTH OX04245 27130002
         MVI   PTLSWCH,ITMSW           TURN ON THE ITEM INDICATOR       27150021
         B     PARTIAL                 BRANCH TO SET SWITCHES   OX04245 27200002
*********************************************************************** 27210002
**** CODE TO PROCESS ENTRIES CONTINUED FROM A PREVIOUS RECORD      **** 27250002
*********************************************************************** 27260002
CONTIN   EQU   *                                                        27300002
         MVC   LCLSWS(ADJ),CPYLCLS     SET LOCAL SWITCHES TO REFLECT    27900021
*                                      STATUS OF PROCESSING FOR         27950021
*                                      CONTINUED ITEM                   28000021
         NI    IDRSWS,PARTOFF          TURN OFF PARTIAL ITEM FLAG       28050002
         TM    LCLSWS,AL1VLD           AT LEAST ONE VALID ID?   XA05783 28060003
         BO     CONTOK                 YES, BRANCH TO CONTINUE  XA05783 28080003
         L     GREG11,IDRTIEND         PREPARE TO RESET PTR     XA05783 28090003
         SH    GREG11,HDLEN2           BACK UP NINE BYTES       XA05783 28092003
         ST    GREG11,IDRTIEND         RESET IN APT             XA05783 28094003
CONTOK   EQU   *                                                XA05783 28096003
         TM    PTLSWCH,STRSW           IS IT A CONTINUED ID STRING?     28100002
         BO    STCNTIN                 YES, BRANCH TO CONTINUE  OX04245 28150002
*                                      PROCESSING THE STRING OF OX04245 28200002
*                                      CESDID'S                 OX04245 28250002
CONTIN1  EQU   *                                                OX04245 28910002
         TM    PTLSWCH,HIDSW           IS IT A CONTINUED ID?    OX04245 28920002
         BNO   DSCNTIN                 NO, DO CONTINUED TRANSLATOR      28930002
*                                      DATA PROCESSING          OX04245 28940002
         IC    GREG11,HEADLEN(BUFPTR)  GET 2ND HALF OF CESDID FROM      29100021
*                                      CONTINUATION RECORD              29150021
         STC   GREG11,ID2ND            MOVE IT TO WORK AREA             29200021
         OI    LCLSWS,CNTDID           TURN ON CONTINUED ID SWITCH      29250021
         BCTR  ITEMPTR,NULLREG         CORRECT ITEMPTR POSITIONING      29260002
         LA    DATAPTR,ID1ST           POINT TO CONTINUED CESDID        29300002
         B     SCNITM1                 GO TO PROCESS IT                 29350002
DSCNTIN  EQU   *                                                        29400002
         SR    GREG7,GREG7             ZERO OUT WORK REGISTER   OX04245 29450002
         IC    GREG7,XPTRLEN           GET EXPECTED CONTINUATIONOX04245 29500002
*                                      LENGTH                   OX04245 29600002
         SR    GREG11,GREG11           ZERO OUT WORK REGISTER   OX04245 29650002
         IC    GREG11,PTLTRLN          GET PARTIAL LENGTH       OX04245 29700002
         BCTR  GREG7,NULLREG           SUBTRACT ONE FOR MOVE    OX04245 30248802
         LA    GREG11,OBJTRN(GREG11)  GET WORK AREA ADDRESS     OX04245 30249202
         EX    GREG7,CTDMV             MOVE CONTINUATION TO     OX04245 30249602
*                                      TO WORK AREA             OX04245 30249702
         LA    BUFPTR,HEADLEN+1(BUFPTR,GREG7) ADJUST BUFFER POINTER     30249802
*                                      TO START OF NEXT RECORD  OX04245 30249902
         OI    LCLSWS,CNTDITM          TURN ON PARTIAL ITEN INDICATOR   30250021
         LA    ITEMPTR,OBJTRN          GET ADR TO ITEMPTR       OX04245 30300002
         B     PREDESC                 BRANCH TO HANDLE DESCRIPTION     30350002
CTDMV    MVC   NODISP(NOLEN,GREG11),HEADLEN(BUFPTR)  MOVE CONTINUATION  30500002
*                                      OF TRANSLATOR DESCRIPTION TO     30550021
*                                      WORK AREA                        30600021
         EJECT                                                          30650021
*********************************************************************   30700021
*******            THE FOLLOWING SECTION OF CODE              *******   30750021
*******             HANDLES THE IDR FIELD OF AN               *******   30800021
*******            OBJECT MODULE END RECORD, WHEN             *******   30850021
*******                      PRESENT                          *******   30900021
*********************************************************************   30950021
         SPACE 1                                                        31000021
TRANSOBJ EQU   *                                                        31050002
         SR    GREG8,GREG8             ZERO REGISTER 8                  31100002
         LA    DATAPTR,IDTEMP          POINT TO TEMP ID SPACE   OX04245 31150002
RNTLOOP  LA    RNTPTR,FULWD(RNTPTR)    UPDATE POINTER TO NEXT RNT ENTRY 31250021
         CH    GREG8,NODISP(RNTPTR)    IS THIS ENTRY ZEROES ( END OF    31300021
*                                      THE RNT)?                        31350021
         BE    ADDITEM                 IF SO, BRANCH                    31400021
         TM    RNTYPE(RNTPTR),SECTDEF  IS THIS AN SD?                   31450021
         BZ    ADDID                   IF SO, BRANCH TO ADD IT          31500021
         TM    RNTYPE(RNTPTR),PRIVATE  COULD THIS BE A PC?              31550021
         BNO   RNTLOOP                 IF NOT, GO TO TRY NEXT ENTRY     31600021
         TM    RNTYPE(RNTPTR),OTHTYPE  IS THIS ENTRY A PC?              31650021
         BNZ   RNTLOOP                 IF NOT, GO TO TRY NEXT ENTRY     31700021
ADDID    TM    RNTYPE(RNTPTR),DELETE   IS IT MARKED FOR DELETION?       31750021
         BO    RNTLOOP                 IF SO, GO TO TRY NEXT ENTRY      31800002
         MVC   IDTEMP(IDLEN),NODISP(RNTPTR)    MOVE ID TO TEMP SPACE    31850002
         BAL   GREG14,MOVEID0          ADD ID TO THE TANS ID TABLE      31860002
         B     RNTLOOP                 GO TO CONTINUE SEARCH LOOP       32450021
ADDITEM  EQU   *                                                OX04245 32460002
         LA    ITEMPTR,TRNM1(BUFPTR)  GET ADDRESS OF IDR FIELD  OX04245 32470002
         TM    LCLSWS,AL1VLD           WAS AT LEAST 1 VALID ID FOUND?   32500002
         BNO   FINISH                  IF NOT, RETURN                   32550021
         L     GREG11,IDRTITAB         GET ADDRESS OF HEADER    OX04245 32560002
         AH    GREG11,TABNXTSV         FROM SAVED POINTER       OX04245 32610002
         BCTR  TABNXT,NULLREG          BACK UP 1 ID             OX04245 32660002
         BCTR  TABNXT,NULLREG          TO POINT TO LAST         OX04245 32670002
         OI    NODISP(TABNXT),LASTID   TURN ON LASTID BIT       OX04245 32680002
         PACK  PCKADJ(PKLEN,ITEMPTR),VM1(UPLEN,BUFPTR)          OX04245 32700002
*                                      PACK V/M LVL DATE FIELDS OX04245 32750002
         MVC   VVMM(PKLEN1,ITEMPTR),PCKADJ(ITEMPTR)             OX04245 32800002
*                                      MOVE V/M LVL TO PACKED LOC       32802002
         MVC   YYDDD(PKLEN2,GREG11),PCKADJ+PKLEN1(ITEMPTR) MOVE OX04245 32810002
*                                      DATE TO HEADER           OX04245 32820002
         TM    IDRSWS,DBLOBJ           IS THIS A DOUBLE TRANSLATOR      32850021
*                                      DESCRIPTION?             OX04245 32900002
         BNO   TRDESC0                 IF NOT SO,BRANCH         OX04245 32950002
         MVC   TRNAME2(TRNMLEN,ITEMPTR),TRNM2(BUFPTR) MOVE 2ND TRANS    33200002
*                                      NAME TO PACKED LOCATION  OX04245 33250002
         PACK  VVMM2(PKLEN,ITEMPTR),VM2(UPLEN,BUFPTR) CONVERT   OX04245 33300002
*                                      2ND V/M LVL TO PACKED    OX04245 33350002
*                                      FORMAT AND MOVE          OX04245 33400002
         MVC   YYDDD2(PKLEN2,GREG11),VVMM2+PKLEN1(ITEMPTR) MOVE OX04245 33402002
*                                      2ND DATE TO HEADER       OX04245 33404002
         B     DBLTRNS                 BRANCH TO TRANSLATOR DESCRIPTION 33410002
*                                      PROCESSING                       33420002
*********************************************************************** 33422002
*****    ROUTINE TO ADD ONE ID TO TRANSLATOR ID TABLE            ****** 33430002
*********************************************************************** 33432002
MOVEID0  EQU   *                                                OX04245 33440002
         OI    LCLSWS,AL1VLD           TURN ON 1 VALID CESDID SWITCH    33442002
         LA    GREG11,NEXTID(TABNXT)   GET NEXT ID LOC          OX04245 33444002
         CR    GREG11,TABEND           WILL ADDING ID OVERFLOW TABLE?   33446002
         BNH   MOVEID1                 NO,NO NEED TO REALLOCATE OX04245 33448002
         ST    ENDBUF,SAVR8            SAVE ENDBUF REGISTER     OX04245 33449602
         S     RNTPTR,RECNT            MAKE RNT OFFSET RELATIVE OX04245 33451602
         S     TABNXT,IDRTITAB         SUBTRACT START ADDRESS   OX04245 33452202
*                                      FROM NEXT AVAIL LOC      OX04245 33453802
         STH   TABNXT,IDRTICUR         STORE CURRENT TABLE SIZE OX04245 33455402
         MVI   TABIND,INDBR            INDICATE RETURN BY REGISTER      33457002
         BAL   GREG11,CHKALLOC         GO TO REALLOCATE         OX04245 33458602
         L     ENDBUF,SAVR8            RESTORE END BUF REGISTER OX04245 33459002
         A     RNTPTR,RECNT            RESTORE PTR TO RNT       OX04245 33459402
MOVEID1  EQU   *                                                OX04245 33460202
         TM    LCLSWS,LSTIDFND         WAS IT THE LAST ID?      OX04245 33461802
         BZ    MOVEID2                  NO,BRANCH               OX04245 33463402
         OI    NODISP(DATAPTR),LASTID  TURN ON LAST ID INDIC    OX04245 33465002
MOVEID2  EQU   *                                                OX04245 33466602
         MVC   NODISP(IDLEN,TABNXT),NODISP(DATAPTR) MOVE ID TO END OF   33476602
*                                      TRANSLATOR ID TABLE      OX04245 33478602
         LA    TABNXT,NEXTID(TABNXT)   INCREMENT POINTER TO TAB OX04245 33480602
         BR    GREG14                  CONTINUE                 OX04245 33482602
         EJECT                                                          33483002
         SPACE 3                                                        33483302
*********************************************************************   33500021
*******            THE FOLLOWING SECTION OF CODE              *******   33550021
*******            SCANS THE IDR TRANSLATOR TABLE             *******   33600021
*******             FOR TRANSLATOR DESCRIPTIONS               *******   33650021
*******            IDENTICAL TO THAT ON THE INPUT             *******   33700021
*******             RECORD -- IF FOUND, NO NEW                *******   33750002
*******                 ENTRY IS MADE                         *******   33800002
*********************************************************************   33850021
         SPACE 1                                                        33900021
TRDESC0  EQU   *                       PREPARE FOR TRANS DATA   OX04245 33950002
*                                      TABLE PROCESSING         OX04245 34000002
         LA    DATAPTR,SNGTRN1(ITEMPTR) SET DATAPTR TO POINT    OX04245 34200002
*                                      TO END OF ITEM           OX04245 34250002
         MVI   INDCTR(GREG11),ONETRNS  INDICATE A SINGLE ENTRY  OX04245 34260002
         B     TRDESC                  BRANCH TO SCAN ROUTINE   OX04245 34300002
DBLTRNS  LA DATAPTR,DBLTRN1(ITEMPTR)   SET DATAPTR TO           OX04245 34310002
*                                      POINT TO END OF ITEM     OX04245 34320002
         MVI   INDCTR(GREG11),DBLSWS   INDICATE A DOUBLE ENTRY  OX04245 34330002
TRDESC   EQU   *                                                OX04245 34380002
         LA    TABNXT,NEXTID(TABNXT)   POINT TO NEXT AVAILABLE BYTE     34390002
         ST    TABNXT,IDRTIEND         SAVE ID TABLE POINTER    OX04245 34392002
         S     TABNXT,IDRTITAB         SUBTRACT START ADDRESS   OX04245 34394002
         STH   TABNXT,IDRTICUR         SAVE CURRENT SIZE        OX04245 34396002
         L     TABPTR,IDRTRTAB         GET ADR OF TRANSLATOR DATA       34400002
*                                      TABLE                    OX04245 34450002
         L     TABNXT,IDRTREND         GET ADR OF NEXT AVAILABLE BYTE   34500002
         LR    TABEND,TABPTR           SAVE POINTER TO COMPUTE  OX04245 34550002
         AH    TABEND,IDRTRLEN         ENDING ADDRESS OF TABLE  OX04245 34600002
         MVI   TABIND,INDTR            INDICATE TRANSLATOR DATA OX04245 34610002
*                                      TABLE PROCESSING         OX04245 34620002
SCANTRT0 EQU   *                       SEARCH FOR A MATCH IN    OX04245 34700002
*                                      TRANSLATOR DATA TABLE    OX04245 34710002
         CR    TABPTR,TABNXT           AT END OF TABLE?         OX04245 34750002
         BNL   NEWITEM                 YES, BRANCH TO ADD NEW ITEM      34800002
         TM    IDRSWS,DBLOBJ           IS THIS A DOUBLE ENTRY?  OX04245 34850002
         BO    SCANDBL                 YES, BRANCH TO TEST DOUBLE       34900002
*                                      LENGTH                   OX04245 34910002
         CLC   NODISP(SNGTRN1,ITEMPTR),NODISP(TABPTR) ARE THE  @ZA11107 34950037
*                                      TRANSLATORS EQUAL ?     @ZA11107 34990037
         BE    MATCH1                  YES, BRANCH TO ROUTINE FOR       35030037
*                                      IDENTICAL DESCRIPTIONS   OX04245 35070037
         B     SCANTRT1                ELSE BRANCH TO CONTINUE SCAN     35110037
SCANDBL  CLC   NODISP(DBLTRN1,ITEMPTR),NODISP(TABPTR) IS THE   @ZA11107 35150037
*                               DOUBLE LENGTH ITEM IDENTICAL?  @ZA11107 35190037
         BE    MATCH1                  YES, WE HAVE A MATCH - BRANCH    35250002
*                                      TO PROCESS IT            OX04245 35300002
SCANTRT1 LA    TABPTR,SNGTRN1(TABPTR)   INCREMENT TO NEXT ENTRY OX04245 35350002
         B     SCANTRT0                BRANCH TO CONTINUE SCAN  OX04245 35400002
*********************************************************************** 35410002
****     THE FOLLOWING SECTION OF CODE CHECKS FOR                 ****  35420002
****       AN IDENTICAL HEADER AND                                ****  35470002
****       ADJUSTS IDS AS NECESSARY                               ****  35480002
*********************************************************************** 35490002
NEWITEM  EQU   *                                                OX04245 35540002
         BAL   TEMPRTN,POSTIDR         ADD THE NEW ITEM TO TABLE        35550002
         ST    TABNXT,IDRTREND         UPDATE TRANS DATA TABLE PTR      35600002
         S     TABNXT,IDRTRTAB         COMPUTE CURRENT NO BYTES OX04245 35610002
         STH   TABNXT,IDRTRCUR         AND UPDATE IDRTRCUR      OX04245 35620002
*        COMPARE LAST ID/DATE ENTRY TO THE CURRENT ONE          OX04245 35650002
MATCH1   EQU   *                                                OXO4245 35660002
         L     TABNXT,IDRTITAB         GET TRANS ID TABLE PARAMETERS    35750002
         AH    TABNXT,TABNXTSV         GET NEXT AVAILABLE BYTE  OX04245 35800002
*                                      POINTER                  OX04245 35800402
         S     TABPTR,IDRTRTAB         MAKE TABPTR A RELATIVE   OX04245 35802002
*                                      POINTER                  OX04245 35804002
         STC   TABPTR,NAMEPTR+1(TABNXT)   SAVE ADR OF TRANS NAME        35806002
*                                      DATA IN THE WORK AREA    OX04245 35808002
         SRL   TABPTR,BYTE1            SHIFT NEXT CHARACTER             35808402
         STC   TABPTR,NAMEPTR(TABNXT) STORE 2ND HALF OF POINTER         35808802
         L     TABPTR,IDRTITAB         GET ADR OF TRANS ID TAB  OX04245 35809202
         L     GREG11,IDRTIEND         RETRIEVE END OF ID STRNG OX04245 35838002
         LR    GREG7,TABPTR            COPY PTR TO START OF TAB OX04245 35838402
         AH    GREG7,LASTPTR           GET ABS ADR OF LASTPTR   OX04245 35838802
         TM    IDRSWS,DBLOBJ           IS THIS A DOUBLE ENTRY?  OX04245 35840002
         BNO   SNGHDR                  NO,BRANCH                OX04245 35842002
         CR    TABNXT,TABPTR           TEST FOR FIRST ENTRY     OX04245 35844002
         BE    TRFIN0                  YES, DONT ATTEMPT SHIFT  OX04245 35846002
         CLC   NODISP(IDHDR2,GREG7),INDCTR(TABNXT) THIS HEADER  OX04245 35848402
*                                      SAME AS LAST PREVIOUS?   OX04245 35848502
         BNE   MATCH2                  NO,NO ADJUSTMENT NEEDED  OX04245 35858502
NOHDRSH  EQU   *                       SHIFT NINE SPACES        OX04245 35860002
         SH    GREG11,HDLEN2           ADJUST TO POINT TO       OX04245 35868602
*                                      NEW END OF TRANS ID TAB  OX04245 35870602
         ST    GREG11,IDRTIEND         SAVE POINTER TO END OF TABLE     35872602
         SR    GREG11,TABNXT           COMPUTE LENGTH OF MOVE   OX04245 35886602
         BCTR  GREG11,NULLREG          DECREMENT FOR MOVE       OX04245 35896602
         ST    TABNXT,TABNXTSA         SAVE POINTER             OZ01412 35897037
EXLOOP2  EQU   *                                                        35897437
         CH    GREG11,H100             LESS THAN 100HEX         OZ01412 35897837
         BL    EXMOVE2                 YES GO TO EXMOVE2        OZ01412 35898237
         MVC   NODISP(EXCON,TABNXT),IDHDR2(TABNXT)  MOVE 100HEX OZ01412 35898337
         LA    TABNXT,EXCON(0,TABNXT)  UPDATE POINTER           OZ01412 35898437
         SH    GREG11,H100             UPDATE MOVE COUNT        OZ01412 35898537
         BP    EXLOOP2                 IF PLUSS GO TO EXLOOP2   OZ01412 35899737
EXMOVE2  EQU   *                                                        35900137
         EX    GREG11,IDMOV            SHIFT THE CHARACTERS     OX04245 35901637
         L     TABNXT,TABNXTSA         RESTORE POINTER          OZ01412 35902037
         L     GREG11,IDRTIEND       CLEANUP AFTER MOVE YA05599,XA05450 35902837
         XC    0(IDHDR2,GREG11),0(GREG11)               YA05599,XA05450 35904037
         B     MATCH3                  BRANCH TO ENDING ROUTINE OX04245 35905237
IDMOV    MVC   NODISP(NOLEN,TABNXT),IDHDR2(TABNXT) DOUBLE LENGTH MOVE   35906437
SNGMOV   MVC   IDHDR1(NOLEN,TABNXT),IDHDR2(TABNXT) SINGLE LENGTH MOVE   35907637
SNGHDR   EQU   *                                                OX04245 35908837
         CR    TABNXT,TABPTR           FIRST TABLE ENTRY?       OX04245 35910002
         BE    FSTHDR                  YES, BRANCH TO SHIFT THREE       35912002
         CLC   NODISP(IDHDR1,GREG7),INDCTR(TABNXT) THIS ENTRY   OX04245 35916602
*                                      SAME AS LAST?            OX04245 35917002
         BE    NOHDRSH                 BRANCH TO SHIFT ROUTINE  OX04245 35918602
FSTHDR   EQU   *                                                OX04245 35928602
         SH    GREG11,HDLEN1           ADJUST TO POINT TO       OX04245 35947002
*                                      NEW END OF TABLE         OX04245 35947402
         ST    GREG11,IDRTIEND         SAVE POINTER TO END      OX04245 35947802
         SR    GREG11,TABNXT           COMPUTE LENGTH OF MOVE   OX04245 35949002
         BCTR  GREG11,NULLREG          DECREMENT FOR MOVE       OX04245 35949402
         ST    TABNXT,TABNXTSA         SAVE POINTER             OZ01412 35950237
EXLOOP   EQU   *                                                        35950637
         CH    GREG11,H100             COUNT LESS THAN 100X     OZ01412 35951037
         BL    EXMOVE                  YES GO TO EXMOVE         OZ01412 35951437
         MVC   IDHDR1(EXCON,TABNXT),IDHDR2(TABNXT) MOVE 100 HEX OZ01412 35951537
         LA    TABNXT,EXCON(0,TABNXT)  UPDATE POINTER           OZ01412 35951637
         SH    GREG11,H100             UPDATE MOVE COUNT        OZ01412 35951737
         BP    EXLOOP                  IF PLUSS GO TO EXLOOP    OZ01412 35955737
EXMOVE   EQU   *                                                        35957737
         EX    GREG11,SNGMOV           DO THE MOVE              OX04245 35959737
         L     TABNXT,TABNXTSA         RESTORE POINTER          OZ01412 35960437
         L     GREG11,IDRTIEND       CLEANUP AFTER MOVE YA05599,XA05450 35961837
         XC    0(IDHDR2,GREG11),0(GREG11)               YA05599,XA05450 35963837
MATCH2   EQU   *                                                OX04245 35967837
         LR    GREG7,TABNXT            COPY TABNXT              OX04245 35971837
         SR    GREG7,TABPTR            MAKE INTO RELATIVE PTR   OX04245 35975837
         STH   GREG7,LASTPTR           SAVE POINTER FOR NEXT    OX04245 35979802
*                                      TIME                     OX04245 35989802
         B     TRFIN0                                           OX04245 35989902
MATCH3   EQU   *                                                OX04245 35990202
         LR GREG7,TABNXT               COPY TABNXT              OX04245 35990602
         BCTR GREG7,NULLREG            BACK UP TO LAST          OX04245 35991002
         BCTR GREG7,NULLREG            ID AND ERASE LASTID      OX04245 35991402
         NI NODISP(GREG7),LSTIDOFF     FLAG                     OX04245 35991502
*********************************************************************** 35991802
*        FINAL CLEANUP ROUTINE                                          35998602
*********************************************************************** 35998702
TRFIN0   EQU   *                                                OX04245 35998802
         BCTR  ITEMPTR,NULLREG         BACK TO SING/DBLE FLAG   OX04245 35998902
TRFIN    EQU   *                       ENTRY IF NO VALID ID     OX04245 35999002
         L     TABNXT,IDRTIEND         GET CURR TRANS ID TAB ENDOX04245 35999402
         TM    IDRSWS,LMDIDR           WAS IT A LOAD MODULE?    OX04245 35999702
         BNO   TRFIN3                  NO, BRANCH TO EXIT ROUTINE       35999802
         TM    LCLSWS,CNTDITM          WAS THIS A CONTINUED ITEM?       35999902
         BO    ENDTEST                 YES,NO ADJUSTMENT NEEDED YM08524 36000003
         CLI   NODISP(ITEMPTR),ONETRNS SINGLE TRANSLATOR ITEM?  OX04245 36006002
         BNE   DBLINC                  NO,BRANCH                OX04245 36008002
         LA    BUFPTR,SNGTRN(ITEMPTR)  YES, INCREMENT BUFF PTR  OX04245 36008102
         B     ENDTEST                 BRANCH TO OVERFLOW TEST  OX04245 36011802
DBLINC   EQU   *                                                OX04245 36013802
         LA    BUFPTR,DBLTRN(ITEMPTR)  INCREMENT FOR DOUBLE ITEMOX04245 36014202
ENDTEST  EQU   *                                                OX04245 36014602
         CR    BUFPTR,ENDBUF           ANY MORE ITEMS IN THIS RECORD?   36015502
         BNL   TRFIN3                  NO, EXIT                 OX04245 36019202
         MVI   LCLSWS,SWSOFF           RESET LOCAL SWITCHES     OX04245 36021202
         LR    ITEMPTR,BUFPTR         POINT TO NEXT ITEM IN RECORD      36022902
         NI    IDRSWS,SWSINIT          RE-INITIALIZE IDR SWITCHES       36024902
         LR    TABEND,TABPTR           REINIT POINTER TO ID     OX04245 36025302
         AH    TABEND,IDRTILEN         TABLE END                OX04245 36025702
         L     CESDPTR,CHESD           RESTORE PTR TO CESD      OX04245 36026102
         L     RNTPTR,RECNT            RESTORE RNT TABLE PTR    OX04245 36026502
         B     HDPTR                   LOOP TO SCAN NEXT ITEM   OX04245 36026602
TRFIN3   EQU   *                       TABNXT MUST POINT AT TIEND       36036602
         S     TABNXT,IDRTITAB         SUBTRACT START ADR       OX04245 36049002
         STH   TABNXT,IDRTICUR         SAVE CURRENT SIZE        OX04245 36049402
         B     FINISH                  BRANCH TO EXIT           OX04245 36076602
         EJECT                                                          37950021
*********************************************************************** 38000021
*********************************************************************** 38050021
****                                                               **** 38100021
****     SUB-PROGRAM IDRIDENT PROCESSES INPUT LOAD MODULE IDR'S    **** 38150021
****     WITH USER DATA AND USER DATA SPECIFIED VIA THE IDENTIFY   **** 38200021
****                    CONTROL STATEMENT                          **** 38250021
****                                                               **** 38300021
*********************************************************************** 38350021
*********************************************************************** 38400021
         SPACE 2                                                        38450021
IDRIDENT L     TABPTR,IDRUDTAB         GET ADDRESS OF USER DATA TABLE   38500021
         LA    TABNXT,IDRUDCUR         GET CURRENT TAB SIZE PTR  YM2013 38510000
         ST    TABNXT,TABCURAD         SAVE THE POINTER          YM2013 38520000
         L     TABNXT,IDRUDEND         GET ADDRESS OF NEXT AVAILABLE    38550021
*                                      BYTE IN TABLE                    38600021
         LR    TABEND,TABPTR           GET STARTING ADDRESS OF TABLE    38650021
         AH    TABEND,IDRUDLEN         GET ENDING ADDRESS OF TABLE      38700021
         MVI   TABIND,INDUD            INDICATE USER TABLE PROCESSING   38710021
         TM    IDRSWS,LMDIDR           IS LOAD MODULE INDICATOR ON?     38750021
         BO    LMODUD                  IF SO, BRANCH                    38800021
         TM    IDRSWS,USEIDR           IS IDENTIFY CARD SWITCH ON?      38850021
         BNO   ABORT                   IF NOT, IT IS AN ERROR           38900021
         STM   GREG14,GREG15,SAVR14    SAVE WORK REG. CONTENTS          38950021
         ST    GREG10,SAVR10           SAVE WORK REG. CONTENTS          39000021
         L     GREG10,NODISP(PARMPTR)  GET ADDRESS OF CSECT NAME        39050021
         L     CESDPTR,CHESD           GET CESD ADDRESS - 16            39100021
         LA    GREG14,CESDWDTH         PLACE 16 IN INCREMENT REGISTER   39150021
         ST    GREG8,SAVR8             SAVE WORK REG. CONTENTS          39200021
         LA    GREG8,FSTID             PLACE CESDID OF 1 FOR 1ST ITEM   39250021
         LH    GREG15,ENCDC            GET NO. OF ITEMS IN CESD         39300021
         SLL   GREG15,CESDINDX         MULT. BY 16 FOR CESD SIZE        39350021
         AR    GREG15,CESDPTR          ADD ADDR.OF CESD TP POINT TO     39400021
*                                      LAST ENTRY IN THE CESD           39450021
         B     INCRMNT                 GO TO INCREMENT THE CESD POINTER 39500021
CESDSRCH CLC   NODISP(NAMELEN,GREG10),NODISP(CESDPTR)  COMPARE CSECT    39550021
*                                      NAME TO BE IDENTIFIED WITH THIS  39600021
*                                      ENTRY IN THE CESD                39650021
         BE    NAMEFND                 IF THEY MATCH, BRANCH            39700021
BADMTCH  LA    GREG8,FSTID(GREG8)      UPDATE TO NEXT CESDID            39750021
INCRMNT  BXLE  CESDPTR,GREG14,CESDSRCH UPDATE POINTER TO NEXT ENTRY IN  39800021
*                                      CESD, COMPARE TO END ADDR. OF    39850021
*                                      CESD, IF NOT AT END, BRANCH TO   39900021
*                                      CONTINUE IN SEARCH LOOP          39950021
         B     BADIDENT                NAME NOT FOUND IN CESD -- GO TO  40000021
*                                      LOG ERROR MESSAGE                40050021
NAMEFND  TM    TYPE(CESDPTR),SECTDEF   IS MATCHING CESD ENTRY AN SD?    40100021
         BNZ   BADMTCH                 IF NOT, BRANCH BACK INTO LOOP    40150021
         TM    TYPE(CESDPTR),DELETE    IS THIS SD MARKED FOR DELETION?  40200021
         BO    BADMTCH                 IF SO, BRANCH BACK INTO LOOP     40250021
         STH   GREG8,HTEMP             SAVE MATCHED CESDID              40300021
         SPACE 3                                                        40350021
*********************************************************************   40400021
*******            THE FOLLOWING SECTION OF CODE              *******   40450021
*******            SCANS THE IDR USER DATA TABLE              *******   40500021
*******            FOR ANY PREVIOUS ENTRY WHICH               *******   40550021
*******            SPECIFIES THE SAME CSECT AS                *******   40600021
*******            THE IDENTIFY CONTROL CARD BEING            *******   40650021
*******            PROCESSED -- IF FOUND, THE OLD             *******   40700021
*******            DATA IS REPLACED BY THE NEW DATA           *******   40750021
*********************************************************************   40800021
         SPACE 1                                                        40850021
UDTABSCH CR    TABPTR,TABNXT           TABLE POINTER AT END OF TABLE?   40900021
         BE    POSTUD                  IF SO, BRANCH                    40950021
         CLC   NODISP(IDLEN,TABPTR),HZERO  IS THIS A NULL ITEM?         41000021
         BNE   UDTBSR05                IF NOT, BRANCH                   41050021
         MVC   HTEMP2(IDLEN),NEXTID(TABPTR)  GET LENGTH OF NULL ITEM    41100021
         AH    TABPTR,HTEMP2           POINT AFTER NULL ITEM            41150021
         B     UDTABSCH                GO TO CONTINUE SCAN              41200021
UDTBSR05 SR    GREG8,GREG8             ZERO OUT WORK REGISTER           41250021
         IC    GREG8,UDCNT(TABPTR)     GET BYTE COUNT OF USER DATA IN   41300021
*                                      THIS ITEM                        41350021
         LA    GREG8,UDHEAD(GREG8)     GET TOTAL LENGTH OF ITEM         41400021
         CLC   NODISP(IDLEN,TABPTR),HTEMP  DOES CESDID OF THIS ITEM     41450021
*                                      MATCH ID IN TABLE?               41500021
         BE    UDMATCH                 IF SO, BRANCH                    41550021
         AR    TABPTR,GREG8            UPDATE TO POINT TO NEXT ITEM     41600021
         B     UDTABSCH                GO TO CONTINUE SEARCH LOOP       41650021
UDMATCH  ST    GREG8,FTEMP             SAVE ITEM LENGTH                 41700021
         MVC   NODISP(FULWD,TABPTR),FTEMP  NULL ITEM WITH 2 BYTES OF    41750021
*                                      ZEROES AND 2-BYTE COUNT          41800021
         MVC   NODISP(IDLEN,TABPTR),HZERO  NULL THE ITEM          M1602 41820021
POSTUD   MVC   UDID(IDLEN),HTEMP       SAVE CESDID OF THIS ITEM         41850021
         L     GREG8,USTRLEN(PARMPTR)  GET ADDR. OF DATA LENGTH         41900021
         LH    GREG8,NODISP(GREG8)     GET LENGTH OF IDENTIFY DATA      41950021
         STC   GREG8,UDBTCT            STORE DATA LENGTH                42000021
         LA    ITEMPTR,UDITEM          GET ADDR. OF ITEM TO BE POSTED   42050021
         LA    GREG8,UDHEAD(GREG8)     GET LENGTH OF ITEM               42100021
         LR    DATAPTR,ITEMPTR         GET BEGINNING ADDR. OF ITEM      42150021
         AR    DATAPTR,GREG8           GET ENDING ADDR. OF ITEM         42200021
         L     GREG8,UDSTR(PARMPTR)    GET ADDR. OF USER DATA           42250021
         MVC   UDATA(UDLEN),NODISP(GREG8)  MOVE USER DATA               42300021
         STM   GREG0,GREG1,SAVR0       SAVE WORK REG. CONTENTS          42350021
         TIME  ,                       GET TODAY'S DATE                 42400021
         ST    GREG1,FTEMP             SAVE DATE                        42450021
         MVC   UDATE(DATELEN),DATESAV  MOVE DATE TO ITEM                42500021
         LM    GREG0,GREG1,SAVR0       RESTORE WORK REG. CONTENTS       42550021
         BAL   TEMPRTN,POSTIDR         GO TO POST THIS ITEM             42600021
         LM    GREG14,GREG15,SAVR14    RESTORE WORK REG. CONTENTS       42650021
         L     GREG8,SAVR8             RESTORE WORK REG. CONTENTS       42700021
         L     GREG10,SAVR10           RESTORE WORK REG. CONTENTS       42750021
         ST    TABNXT,IDRUDEND         UPDATE POINTER TO NEXT           42800021
*                                      AVAILABLE BYTE IN TABLE          42850021
         MVI   MSGBUF,BLANK            PLACE BLANK IN MSG BUFFER        42900021
         MVC   MSGBUFF(MSGLEN),MSGBUF  BLANK OUT MESSAGE LINE           42950021
         L     GREG14,NODISP(PARMPTR)  GET ADDRESS OF CSECT NAME        43000021
         MVC   MSGNAME(NAMELEN),NODISP(GREG14)  MOVE CSECT NAME INTO    43050021
*                                      MESSAGE LINE                     43100021
         L     GREG14,UDSTR(PARMPTR)   GET ADDRESS OF USER DATA         43150021
         MVC   MSGDATA(UDLEN),NODISP(GREG14)  MOVE USER DATA INTO       43200021
*                                      MESSAGE LINE                     43250021
         LH    GREG0,GOODIDNT          GET MESSAGE CODE                 43300021
         ST    GREG1,SAVR1             SAVE REG. 1 CONTENTS             43350021
         LA    GREG1,MSGBUF            POINT TO MESSAGE BUFFER          43400021
         OI    IDRSWS,LOGIDNT          TURN IDENT OPTION SWITCH FOR LOG 43450021
         L     ENTRYPT,ERDIG           GET ADDRESS OF MESSAGE LOGGING   43500021
*                                      ROUTINE                          43550021
         BALR  RETURN,ENTRYPT          LINK TO LOGGING ROUTINE          43600021
         NI    IDRSWS,LOGSOFF          TURN OFF LOG SWITCH              43650021
         L     GREG1,SAVR1             RESTORE REG. 1                   43700021
         B     USERCUR                 RETURN TO CALLING ROUTINEOX04245 43750002
         EJECT                                                          43800021
*********************************************************************   43850021
*******            THE FOLLOWING SECTION OF CODE              *******   43900021
*******              HANDLES LOAD MODULE IDR'S                *******   43950021
*******             CONTAINING USER DATA ITEMS                *******   44000021
*********************************************************************   44050021
         SPACE 1                                                        44100021
LMODUD   LA    ITEMPTR,HEADLEN(BUFPTR) GET STARTING ADDR. OF 1ST ITEM   44150021
*                                      ON THE RECORD                    44200021
         TM    IDRSWS,PARTENT          IS THIS A CONTINUATION FROM THE  44250021
*                                      PREVIOUS RECORD?                 44300021
         BNO   RECSCAN                 IF NOT, BRANCH                   44350021
         MVC   PRTLEN(FULWD),NODISP(TABNXT)  GET THE LENGTH OF THE      44400021
*                                      PARTIAL ITEM                     44450021
         STM   GREG8,GREG9,SAVR8       SAVE WORK REG. CONTENTS          44500021
         L     GREG8,PRTLEN            GET PARTIAL ITEM LENGTH          44550021
         BCTR  GREG8,NULLREG           SUBTRACT 1 FOR MOVE LENGTH       44600021
         EX    GREG8,CNTDMOV           MOVE PARTIAL ITEM TO WORK AREA   44650021
         LA    GREG8,UDMAXLEN          GET MAXIMUM LENGTH OF A USER     44700021
*                                      DATA ITEM                        44750021
         L     GREG9,PRTLEN            GET LENGTH OF PARTIAL ITEM       44800021
         SR    GREG8,GREG9             GET LENGTH OF CONTINUED ITEM     44850021
         LA    ITEMPTR,UDITEM          POINT TO START OF ITEM           44900021
         AR    GREG9,ITEMPTR           GET ADDR. FOR CONTINUATION TO    44950021
*                                      START                            45000021
         BCTR  GREG8,NULLREG           SUBTRACT 1 FOR MOVE LENGTH       45050021
         EX    GREG8,MOVCTN            MOVE CONTINUATION OF ITEM TO     45100021
*                                      WORK AREA                        45150021
         OI    LCLSWS,CNTDITM          TURN ON CONTINUATION SWITCH      45200021
         NI    IDRSWS,PARTOFF          TURN OFF PARTIAL ENTRY SWITCH    45250021
         LM    GREG8,GREG9,SAVR8       RESTORE WORK REGISTERS           45300021
RECSCAN  LA    DATAPTR,UDHEAD(ITEMPTR) GET STARTING ADDR. OF DATA       45350021
         TM    LCLSWS,CNTDITM          IS THIS A CONTINUED ITEM?        45400021
         BO    RCSCN040                IF SO, BRANCH                    45450021
         CR    DATAPTR,ENDBUF          IS THIS A PARTIAL ENTRY?         45500021
         BH    PRTLUD                  IF SO, BRANCH                    45550021
RCSCN040 SR    GREG0,GREG0             ZERO WORK REGISTER               45600021
         IC    GREG0,UDCNT(ITEMPTR)    GET DATA BYTE COUNT              45650021
         AR    DATAPTR,GREG0           GET ENDING ADDR. OF ITEM         45700021
         TM    LCLSWS,CNTDITM          IS THIS A CONTINUED ITEM?        45750021
         BO    RCSCN080                IF SO, BRANCH                    45800021
         CR    DATAPTR,ENDBUF          IS THIS A PARTIAL ENTRY?         45850021
         BH    PRTLUD                  IF SO, BRANCH                    45900021
RCSCN080 MVC   HTEMP(IDLEN),NODISP(ITEMPTR)  SAVE INPUT CESDID          45950021
         LH    RNTPTR,HTEMP            GET INPUT CESDID                 46000021
         SLL   RNTPTR,RNTINDX          GET INDEX INTO THE RNT           46050021
         A     RNTPTR,RECNT            ADD STARTING ADDR. OF RNT        46100021
         TM    RNTYPE(RNTPTR),DELETE   IS THIS CSECT MARKED DELETE?     46150021
         BO    NXTITEM                 IF SO, SKIP THIS ITEM            46200021
         MVC   NODISP(IDLEN,ITEMPTR),NODISP(RNTPTR)  MOVE RENUMBERED    46250021
*                                      CESDID TO THE ITEM               46300021
         BAL   TEMPRTN,POSTIDR         GO TO POST THE ITEM              46350021
NXTITEM  TM    LCLSWS,CNTDITM          WAS THIS A CONTINUED ITEM?       46400021
         BNO   NOTCNTD                 IF NOT, BRANCH                   46450021
         SR    DATAPTR,ITEMPTR         GET LENGTH OF ITEM               46500021
         S     DATAPTR,PRTLEN          GET LENGTH OF CONTINUATION       46550021
         STH   DATAPTR,HTEMP           SAVE LENGTH OF CONTINUATION      46600021
         LA    DATAPTR,HEADLEN(BUFPTR) GET STARTING ADDR. OF DATA ON    46650021
*                                      THE RECORD                       46700021
         AH    DATAPTR,HTEMP           GET ADDR. OF 1ST ITEM ON RECORD  46750021
*                                      AFTER CONTINUATION               46800021
         NI    LCLSWS,CNTDOFF          TURN OFF CONTINUATION SWITCH     46850021
NOTCNTD  LR    ITEMPTR,DATAPTR         UPDATE TO POINT TO NEXT ITEM     46900021
         CR    DATAPTR,ENDBUF          IS THIS THE LAST ITEM ON THE     46950021
*                                      RECORD?                          47000021
         BE    UDFIN                   IF SO, BRANCH                    47050021
         B     RECSCAN                 GO TO CONTINUE SCANNING RECORD   47100021
CNTDMOV  MVC   UDITEM(NOLEN),FULWD(TABNXT)  MOVE PARTIAL ITEM SAVED IN  47150021
*                                      TABLE TO WORK AREA               47200021
MOVCTN   MVC   NODISP(NOLEN,GREG9),HEADLEN(BUFPTR)  MOVE CONTINUATION   47250021
*                                      OF PARTIAL ITEM TO WORK AREA     47300021
PRTLMOV  MVC   UDITEM(NOLEN),NODISP(ITEMPTR)  MOVE PARTIAL USER DATA    47350021
*                                      ITEM TO WORK AREA                47400021
         SPACE 3                                                        47450021
*********************************************************************   47500021
*******            THE FOLLOWING SECTION OF CODE              *******   47550021
*******             HANDLES USER DATA IDR ITEMS               *******   47600021
*******             THAT ARE INCOMPLETE ON THE                *******   47650021
*******           RECORD CURRENTLY BEING PROCESSED            *******   47700021
*********************************************************************   47750021
         SPACE 1                                                        47800021
PRTLUD   OI    IDRSWS,PARTENT          TURN ON PARTIAL ENTRY SWITCH     47850021
         LR    GREG11,ENDBUF           GET ENDING ADDR. OF PARTIAL ITEM 47900021
         SR    GREG11,ITEMPTR          GET LENGTH OF PARTIAL ITEM       47950021
         ST    GREG11,PRTLEN           SAVE LENGTH OF PARTIAL ITEM      48000021
         BCTR  GREG11,NULLREG          SUBTRACT 1 FROM LENGTH FOR       48050021
*                                      ZERO-ORIENTED MOVE LENGTH        48100021
         EX    GREG11,PRTLMOV          MOVE PARTIAL ITEM TO WORK AREA   48150021
         LA    ITEMPTR,SAVPTLUD        GET ADDRESS OF PARTIAL ITEM      48200021
         L     DATAPTR,PRTLEN          GET LENGTH OF PARTIAL ITEM       48250021
         LA    DATAPTR,FULWD(ITEMPTR,DATAPTR)  ADD LENGTH OF ITEM BYTE  48300021
*                                      COUNT AND STARTING ADDRESS OF    48350021
*                                      ITEM TO GET ENDING ADDRESS       48400021
         BAL   TEMPRTN,POSTIDR         POST PARTIAL ITEM                48450021
         L     TABNXT,PARTBEG          RESTORE ADDRESS OF NEXT BYTE IN  48500021
*                                      TABLE TO START OF PARTIAL ENTRY  48550021
UDFIN    ST    TABNXT,IDRUDEND         UPDATE POINTER TO NEXT           48600021
*                                      AVAILABLE BYTE IN TABLE          48650021
USERCUR  EQU   *                                                OX04245 48700002
         L     GREG8,IDRUDEND          GET NEXT USER TAB ADR    OX04245 48710002
         S     GREG8,IDRUDTAB          SUBTRACT START ADR       OX04245 48720002
         STH   GREG8,IDRUDCUR          STORE CURRENT NO BYTES   OX04245 48730002
         B     FINISH                  RETURN TO CALLING ROUTNE OX04245 48740002
BADIDENT EQU   *                       LOG ERR. FOR NO SUCH CSECT FOUND 48750021
         MVI   MSGBUF,BLANK            PLACE BLANK IN MSG BUFFER        48800021
         MVC   MSGBUFF(MSGLEN),MSGBUF  BLANK OUT MESSAGE LINE           48850021
         MVC   MSGNAME(NAMELEN),NODISP(GREG10)  MOVE CSECT NAME INTO    48900021
*                                      MESSAGE LINE                     48950021
         L     GREG10,UDSTR(PARMPTR)   GET ADDRESS OF USER DATA         49000021
         MVC   MSGDATA(UDLEN),NODISP(GREG10)  MOVE USER DATA INTO       49050021
*                                      MESSAGE LINE                     49100021
         LH    GREG0,BADIDNT           GET MESSAGE CODE                 49150021
         ST    GREG1,SAVR1             SAVE REG. 1 CONTENTS             49200021
         LA    GREG1,MSGBUF            POINT TO MESSAGE BUFFER          49250021
         OI    IDRSWS,LOGIDNT          TURN ON OPTION TO LOG A CARD     49300021
*                                      NOT IN THE SYSTEM BUFFER         49350021
         L     ENTRYPT,ERDIG           GET ADDRESS OF MESSAGE LOGGING   49400021
*                                      ROUTINE                          49450021
         BALR  RETURN,ENTRYPT          LINK TO LOGGING ROUTINE          49500021
         NI    IDRSWS,LOGSOFF          TURN OFF LOG OPTION SWITCH       49550021
         L     GREG1,SAVR1             RESTORE REG. 1                   49600021
         B     USERCUR                  RETURN                          49650002
         EJECT                                                          49700021
*********************************************************************** 49750021
*********************************************************************** 49800021
****                                                               **** 49850021
****     SUB-PROGRAM IDRSPZAP PROCESSES INPUT LOAD MODULE IDR'S    **** 49900021
****     WITH DATA ENTERED BY THE SERVICE AID PROGRAM IMASPZAP     **** 49950021
****                                                               **** 50000021
*********************************************************************** 50050021
*********************************************************************** 50100021
         SPACE 2                                                        50150021
IDRSPZAP L     TABPTR,IDRZPTAB         GET ADDRESS OF IMASPZAP DATA     50200021
*                                      TABLE                            50250021
         LA    TABNXT,IDRZPCUR         GET CURRENT TAB SIZE PTR  YM2013 50260000
         ST    TABNXT,TABCURAD         SAVE THE POINTER          YM2013 50270000
         L     TABNXT,IDRZPEND         GET ADDRESS OF NEXT AVAILABLE    50300021
*                                      BYTE IN TABLE                    50350021
         LR    TABEND,TABPTR           GET STARTING ADDRESS OF TABLE    50400021
         AH    TABEND,IDRZPLEN         GET ENDING ADDRESS OF TABLE      50450021
         MVI   TABIND,INDZP            INDICATE ZAP TABLE PROCESSING    50460021
         SR    GREG11,GREG11           ZERO WORK REGISTER               50500021
         NI    HEADLEN(BUFPTR),ZCHNOFF TURN OFF THE CHAIN BIT IN THE    50550021
*                                      IMASPZAP COUNT FIELD             50600021
         IC    GREG11,HEADLEN(BUFPTR)  GET COUNT OF IMASPZAP ENTRIES    50650021
         LTR   GREG11,GREG11           TEST THE ENTRY COUNT             50700021
         BZ    ZAPCUR                  IF THERE ARE NO ENTRIES ON THIS  50750002
*                                      RECORD, RETURN                   50800021
         L     RNTPTR,RECNT            GET ADDRESS OF THE RNT - 4       50850021
         LA    ITEMPTR,FULWD(BUFPTR)   GET ADDRESS OF 1ST ENTRY ON REC. 50900021
ZAPLOOP  LA    DATAPTR,ZAPLEN(ITEMPTR) GET ENDING ADDRESS OF THIS ENTRY 50950021
         MVC   HTEMP(IDLEN),NODISP(ITEMPTR)  SAVE THE CESDID OF THE     51000021
*                                      ENTRY                            51050021
         LH    GREG15,HTEMP            GET THE CESDID                   51100021
         SLL   GREG15,RNTINDX          MULTIFLY THE ID BY 4 TO GET AN   51150021
*                                      INDEX INTO THE RNT               51200021
         AR    GREG15,RNTPTR           ADD THE ADDRESS OF THE RNT-4     51250021
         TM    RNTYPE(GREG15),DELETE   IS THIS CSECT MARKED DELETE?     51300021
         BO    DELZAP                  IF SO, BRANCH                    51350021
         MVC   NODISP(IDLEN,ITEMPTR),NODISP(GREG15)  MOVE THE           51400021
*                                      RENUMBERED CESDID INTO THE ENTRY 51450021
         BAL   TEMPRTN,POSTIDR         GO TO POST THE ENTRY             51500021
DELZAP   LR    ITEMPTR,DATAPTR         POINT TO THE NEXT ENTRY          51550021
         BCT   GREG11,ZAPLOOP          GO TO CONTINUE PROCESSING        51600021
*                                      CONSECUTIVE ENTRIES UNTIL        51650021
*                                      THE COUNT IS EXHAUSTED           51700021
         ST    TABNXT,IDRZPEND         UPDATE POINTER TO NEXT           51750021
*                                      AVAILABLE BYTE IN TABLE          51800021
ZAPCUR   EQU   *                                                OX04245 51810002
         L     GREG8,IDRZPEND          GET NEXT ZAP TABLE ADR   OX04245 51820002
         S     GREG8,IDRZPTAB          SUBTRACT START ADDRESS   OX04245 51830002
         STH   GREG8,IDRZPCUR          STORE CURRENT # BYTES    OX04245 51840002
         B     FINISH                  RETURN TO CALLING ROUTINE        51850021
         EJECT                                                          51900021
*********************************************************************** 51950021
*********************************************************************** 52000021
****                                                               **** 52050021
****     SUB-PROGRAM POSTIDR ADDS INPUT IDR DATA TO ONE OF THE     **** 52100021
****     THREE IDR DATA TABLES:  1) IDRTRTAB -- TRANSLATOR DATA    **** 52150021
****                             2) IDRZPTAB -- IMASPZAP DATA      **** 52200021
****                             3) IDRUDTAB -- USER DATA          **** 52250021
****                                                               **** 52300021
*********************************************************************** 52350021
*********************************************************************** 52400021
         SPACE 2                                                        52450021
POSTIDR  ST    GREG8,SAVR8             SAVE WORK REG. CONTENTS          52470021
PSTRETRY TM    IDRSWS,PARTENT          IS THIS ITEM A PARTIAL ENTRY?    52490021
         BNO   NOTPART                 IF NOT, BRANCH                   52510021
         ST    TABNXT,PARTBEG          SAVE STARTING ADDR. OF PARTIAL   52530021
*                                      ENTRY IN TABLE                   52550021
NOTPART  LR    GREG8,DATAPTR           GET ENDING ADDR. OF ITEM         52570021
         SR    GREG8,ITEMPTR           GET LENGTH OF ITEM               52590021
         AR    GREG8,TABNXT            ADD NEXT TABLE ADDR.             52610021
         CR    GREG8,TABEND            COMPARE TO END OF TABLE          52630021
         BH    PREALLOC                IF HIGH, IT IS AN         YM2013 52650000
*                                      OVERFLOW CONDITION -- GO         52670000
*                                      TRY TO REALLOCATE THE TABLES     52690000
         SR    GREG8,TABNXT            GET ITEM LENGTH AGAIN            52710021
         ST    GREG8,FTEMP             SAVE LENGTH OF ENTRY             52730021
         BCTR  GREG8,NULLREG           SUBTRACT 1 FOR MOVE LENGTH       52750021
         EX    GREG8,MOVEIDR           MOVE THE PARTIAL ENTRY TO THE    52770021
*                                      NEXT POSITION IN THE TABLE       52790021
         L     GREG8,FTEMP             RESTORE CORRECT ENTRY LENGTH     52810021
         AR    TABNXT,GREG8            UPDATE POINTER TO NEXT AVAILABLE 52830021
*                                      BYTE IN TABLE                    52850021
         L     GREG8,SAVR8             RESTORE WORK REG. CONTENTS       52870021
         BR    TEMPRTN                 RETURN TO PROCESSOR              52890021
PREALLOC EQU   *                                                 XM4628 52900003
         STM   GREG9,GREG11,BRNCHSV    SAVE WORK REGISTERS       XM4628 52905003
         L     GREG10,TABCURAD         GET CURRENT TAB.SIZE PTR  XM4628 52907503
         LR    GREG9,GREG10            PUT IT IN 9               XM4628 52910003
         SH    GREG9,TABSTCON          GET TO TAB START FIELD    XM4950 52912503
         L     GREG9,NODISP(GREG9)     GET TAB START ADDRESS     XM4628 52915003
         LR    GREG11,TABNXT           GET PTR TO NEXT BYTE      XM4628 52917503
         SR    GREG11,GREG9            SUBTRACT START ADDRESS    XM4628 52920003
         STH   GREG11,NODISP(GREG10)   UPDATE CURRENT TAB.SIZE   XM4628 52922503
         LM    GREG9,GREG11,BRNCHSV    RESTORE WORK REGISTERS    XM4628 52925003
CHKALLOC EQU   *                                                 XM4628 52927003
         TM    APT4,REALOCTE           IS REALLOCATION POSSIBLE? XM4628 52927503
         BO    TABOVFLO                IF NOT, SIGNAL OVERFLOW          52930021
         STM   GREG0,GREG15,BRNCHSV    SAVE REGISTERS                   52950021
         L     GREG15,ERDIGA           GET ALLOCATION RTN.ADDR.         52970021
         BALR  GREG14,GREG15           REALLOCATE                       52990021
         LM    GREG0,GREG15,BRNCHSV    RESTORE REGISTERS                53010021
         SR    GREG8,GREG8             CLEAR REGISTER 8                 53030021
         IC    GREG8,TABIND            USE AS INDEX REGISTER            53050021
         B     NEWTAB(GREG8)           GO TO APPROPRIATE RTN.           53070021
NEWTAB   EQU   *                                                        53080003
         B     NEWTABTR                GET TRANS.TABLE PTR'S.           53090003
         B     NEWTABUD                GET USER TABLE PTR'S.            53110021
         B     NEWTABZP                GET ZAP TABLE PTR'S.             53130021
         B     NEWTABBR                GET TRANS.TABLE PTR'S.    XM5507 53140000
NEWTABTR EQU   *                                                        53142003
         L     TABPTR,IDRTRTAB         GET ADDR. OF TRANS.TABLE         53150003
         L     TABNXT,IDRTREND         GET ADDR. OF NEXT AVAILABLE      53170021
*                                      BYTE IN TABLE                    53190021
         LR    TABEND,TABPTR           GET STARTING ADR OF TABLE        53240002
         AH    TABEND,IDRTRLEN         GET ENDING ADDR OF TABLE         53242002
         B     PSTRETRY                RE-CHECK                         53250021
NEWTABBR L     TABPTR,IDRTITAB         GET ADDR. OF TRANS.TABLE OX04245 53260002
         L     TABNXT,IDRTIEND         GET ADDR. OF NEXT        OX04245 53262002
*                                      AVAILABLE BYTE IN TABLE  OX04245 53264002
         LR    TABEND,TABPTR           GET STARTING ADDR OF TAB OX04245 53266002
         AH    TABEND,IDRTILEN         GET END ADR OF TABLE     OX04245 53268002
         BR    GREG11                  RETURN TO RETRY           XM5507 53268400
NEWTABUD EQU   *                                                        53268803
         L     TABPTR,IDRUDTAB         GET ADDR. OF USER TABLE          53270003
         L     TABNXT,IDRUDEND         GET ADDR. OF NEXT AVAILABLE      53290021
*                                      BYTE IN TABLE                    53310021
         LR    TABEND,TABPTR           GET STARTING ADDR. OF TABLE      53330021
         AH    TABEND,IDRUDLEN         GET ENDING ADDR. OF TABLE        53350021
         B     PSTRETRY                RE-CHECK                         53370021
NEWTABZP EQU   *                                                        53380003
         L     TABPTR,IDRZPTAB         GET ADDR. OF ZAP TABLE           53390003
         L     TABNXT,IDRZPEND         GET ADDR. OF NEXT AVAILABLE      53410021
*                                      BYTE IN TABLE                    53430021
         LR    TABEND,TABPTR           GET STARTING ADDR. OF TABLE      53450021
         AH    TABEND,IDRZPLEN         GET ENDING ADDR. OF TABLE        53470021
         B     PSTRETRY                RE-CHECK                         53490021
MOVEIDR  MVC   NODISP(NOLEN,TABNXT),NODISP(ITEMPTR)  MOVE IDR ITEM TO   53550021
*                                      THE NEXT AVAILABLE POSITION IN   53600021
*                                      THE TABLE                        53650021
TABOVFLO EQU   *                       LOG OVERFLO MSG & TERMINATE      53700021
         LH    GREG0,OVFLMSG           GET OVERFLOW MESSAGE CODE        53750021
         L     ENTRYPT,ERDIG           GET ADDRESS OF ERROR LOGGING     53800021
*                                      ROUTINE                          53850021
         BR    ENTRYPT                 GO TO LOG ROUTINE                53900021
*                  THIS IS A TERMINAL ERROR -- THE LOG ROUTINE WILL     53950021
*                  PASS CONTROL TO HEWLFFNL TO PRINT THE MESSAGE        54000021
*                  AND TERMINATE LINKAGE EDITOR PROCESSING              54050021
         TITLE '***HEWLFIDR*** IDENTIFY CONTROL CARD PROCESSOR'         54100021
*********************************************************************** 54150021
*                                                                     * 54200021
*               ************************************                  * 54250021
*              * SECONDARY ENTRY POINT --HEWLCIDR-- *                 * 54300021
*               ************************************                  * 54350021
*                                                                     * 54400021
*        CONTROL IS RECEIVED AT THIS POINT FROM MODULE HEWLFSCN       * 54450021
*        FOR THE PURPOSE OF ACCEPTING IDR DATA SUPPLIED BY THE        * 54500021
*        USER AND PASSED TO THE LINKAGE EDITOR BY MEANS OF THE        * 54550021
*        IDENTIFY CONTROL STATEMENT.                                  * 54600021
*                                                                     * 54650021
*********************************************************************** 54700021
         SPACE 2                                                        54750021
HEWLCIDR SAVE  (14,12),T,*             SAVE CALLING PROGRAM'S REGISTERS 54800021
         L     IDRBASE,ADDISP(ENTRYPT) LOAD BASE ADDRESS FOR MODULE     54850021
         B     CSTART                  BRANCH AROUND ADRESS CONSTANT    54900021
STARTAD  DC    A(START)                ADDR OF 1ST INSTR FOR MOD BASE   54950021
ADDISP   EQU   STARTAD-HEWLCIDR        DISPLACEMENT BEYOND ENTRY POINT  55000021
*                                      TO OPTAIN BASE ADDRESS FOR THE   55050021
*                                      MODULE WHEN ENTERED HERE         55100021
CSTART   OI    IDRSWS,USEIDR           TURN ON IDENTIFY CONTROL CARD    55150021
*                                      INDICATOR                        55200021
         B     IDRIDENT                GO TO PROCESS THE DATA ON THE    55250021
*                                      IDENTIFY CARD                    55300021
*********************************************************************** 55310002
***      THE FOLLOWING SECTION OF CODE RESETS SWITCHES            ***** 55320002
***            AND RETURNS CONTROL TO                             ***** 55330002
***               THE CALLING PROGRAM                  OX04245    ***** 55340002
*********************************************************************** 55342002
FINISH   NI    IDRSWS,SWSINIT          RE-INITIALIZE IDR SWITCHES       55350021
         MVI   LCLSWS,SWSOFF           RE-INITIALIZE ALL LOCAL          55400021
*                                      SWITCHES TO ZEROES               55450021
NOUPDT   EQU   *                                                        55526621
         RETURN    (14,12),T,RC=0      RESTORE REGISTERS AND RETURN     55533321
ABORT    LH    GREG0,INTERR            GET MESSAGE CODE FOR ERROR       55550021
*                                      IN IDR INPUT                     55600021
         L     ENTRYPT,ERDIG           GET ADDRESS OF LOG ROUTINE       55650021
         BR    ENTRYPT                 GO TO LOG THE ERROR              55700021
*                                      -- THIS IS A TERMINAL            55750021
*                                         ERROR CONDITION               55800021
*                                      -- THE LOG ROUTINE               55850021
*                                         WILL NOT RETURN               55900021
         TITLE '***HEWLFIDR*** CSECT IDENTIFICATION RECORD PROCESSOR'   55950021
*********************************************************************** 56000021
*                                                                     * 56050021
*                    DEFINED STORAGE AND CONSTANTS                    * 56100021
*                                                                     * 56150021
*********************************************************************** 56200021
         SPACE 2                                                        56250021
SAVR0    DS    1F                      GENERAL PURPOSE REG SAVE AREA    56300021
SAVR1    DS    1F                      GENERAL PURPOSE REG SAVE AREA    56350021
SAVR8    DS    1F                      GENERAL PURPOSE REG SAVE AREA    56400021
SAVR9    DS    1F                      GENERAL PURPOSE REG SAVE AREA    56450021
SAVR10   DS    1F                      GENERAL PURPOSE REG SAVE AREA    56500021
SAVR11   DS    1F                      GENERAL PURPOSE REG SAVE AREA    56550021
SAVR13   DS    1F                      GENERAL PURPOSE REG SAVE AREA    56600021
SAVR14   DS    1F                      GENERAL PURPOSE REG SAVE AREA    56650021
SAVR15   DS    1F                      GENERAL PURPOSE REG SAVE AREA    56700021
FTEMP    DS    1F                      FULLWORD TEMPORARY SAVE AREA     56750021
DATESAV  EQU   FTEMP+1                 START OF PACKED DECIMAL DATE     56800021
*                                      RETURNED BY TIME MACRO           56850021
PARTBEG  DS    1F                      SAVE AREA FOR STARTING ADDR. OF  56900021
*                                      A PARTIAL ITEM IN AN IDR TABLE   56950021
TABCURAD DS    1F                      SAVE AREA FOR CURRENT     YM2013 56960000
*                                      TABLE SIZE POINTER        YM2013 56970000
SAVPTLUD DS    0F                      SAVE AREA FOR A PARTIAL USER     57000021
*                                      DATA ITEM                        57050021
PRTLEN   DS    1F                      LENGTH OF THE PARTIAL ITEM       57100021
UDITEM   EQU   *                       WORKING COPY OF A USER DATA ITEM 57150021
UDID     DS    XL2                     CESDID                           57200021
UDATE    DS    XL3                     TODAY'S DATE                     57250021
UDBTCT   DS    XL1                     BYTE COUNT OF USER DATA          57300021
UDATA    DS    XL40                    USER DATA                        57350021
HTEMP    DS    1H                      HALFWORD TEMPORARY FOR CESDID    57400021
HTEMP2   DS    1H                      HALFWORD TEMPORARY WORK AREA     57450021
IDTEMP   DS    0H                      WORK AREA FOR A CONTINUED CESDID 57500021
ID1ST    DS    XL1                     1ST HALF OF THE CESDID           57550021
ID2ND    DS    XL1                     2ND HALF OF THE CESDID           57600021
SAVPTLTR DS    0F                      SAVE AREA FOR A PARTIAL          57800021
*                                      TRANSLATOR ITEM                  57850021
PTLSWCH  DS    XL1                     INDICATOR FOR TYPE OF PARTIAL    57900021
*                                      ITEM (BINARY VALUE):             57950021
*                                        4 = HALF OF A CESDID FOLLOWS   58000021
*                                        8 = A PARTIAL TRANSLATOR       58050021
*                                            DESCRIPTION FOLLOWS        58100021
*                                       12 = NO DATA FOLLOWS (ITEM WAS  58150021
*                                            BROKEN AFTER A COMPLETE    58200021
*                                            CESDID)                    58250021
CPYLCLS  DS    XL1                     COPY OF LCLSWS REFLECTING        58300021
*                                      CURRENT STATUS OF PROCESSING     58350021
*                                      FOR THIS ITEM                    58400021
PTLTRLN  DS    XL1                     LENGTH OF PARTIAL DESCRIPTION    58450021
*                                      WHICH FOLLOWS (IF PTLSWCH=8)     58500021
XPTRLEN  DS    XL1                     EXPECTED LENGTH OF DESCRIPTION   58550021
*                                      (IF PTLSWCH=8)                   58600021
HIDSAV   EQU   XPTRLEN                 1ST HALF OF THE CESDID BEING     58650021
*                                      PROCESSED (IF PTLSWCH=4)         58700021
OBJTRN   DS    CL31                    IDR TRANSLATOR DATA FIELD ON AN  58750002
*                                      OBJECT MODULE END RECORD         58800021
LASTPTR  DC    H'0'                    POINTER TO START OF LAST         58870002
*                                      PREVIOUS ID TRANSLATOR TABLE     58920002
*                                      ENTRY                    OX04245 58970002
HDLEN1   DC    H'3'                    SHIFT LENGTH FOR SINGLE IDR      59020002
*                                      TRANSLATOR ITEM          OX04245 59070002
HDLEN2   DC    H'9'                    SHIFT LENGTH FOR IDR TRANSLATOR  59120002
*                                      ITEM WITH HEADER SAME AS LAST    59170002
MSGBUF   DS    CL80                    BUFFER FOR BUILDING DIAGNOSTIC   59550021
*                                      MESSAGES TO BE PASSED TO THE     59600021
*                                      LOGGING ROUTINE                  59650021
MSGBUFF  EQU   MSGBUF+1                FOR INITIALIZING THE BUFFER      59700021
MSGNAME  EQU   MSGBUF+10               FOR A CSECT NAME                 59750021
MSGDATA  EQU   MSGBUF+30               FOR USER DATA FROM AN IDENTIFY   59800021
*                                      CONTROL STATEMENT                59850021
TABIND   DS    XL1                     TABLE TYPE INDICATOR             59860021
HZERO    DS    0H                      HALFWORD OF F'S TO TEST    M1602 59900021
         DC    X'FFFF'                 FOR NULL ITEMS             M1602 59940021
TABNXTSA DS    1F                      TABNXT SAVE AREA         OZ01412 59990037
H100     DC    H'256'                  INCREMENT CONSTANT       OZ01412 59992037
         DS    0H                      HALF-WORD ALIGNMENT              60000021
GOODIDNT DC    X'1043'                 MESSAGE INDICATING IDENTIFY      60050021
*                                      HAS BEEN ADDED                   60100021
BADIDNT  DC    X'1244'                 MESSAGE INDICATING CSECT NAME    60150021
*                                      ON AN IDENTIFY CARD CANNOT BE    60200021
*                                      FOUND IN THE CESD                60250021
OVFLMSG  DC    X'0445'                 ERROR MESSAGE CODE FOR IDR       60300021
*                                      TABLE OVERFLOW -- TERMINAL ERROR 60350021
INTERR   DC    X'0446'                 ERROR MESSAGE CODE FOR INVALID   60400021
*                                      IDR INPUT -- TERMINAL ERROR      60450021
TABNXTSV DC    H'0'                    STORE OFFSET TO START    OX04245 60460002
*                                      OF HEADER IN TRANS ID    OX04245 60460402
*                                      TABLE HERE               OX04245 60460802
         DS    0H                      ALIGNMENT                 XM4950 60462003
TABSTCON DC    AL2(IDRTRCUR-IDRTRTAB)  ADCON FOR SUBTRACT        XM4950 60470003
         EJECT                                                          60500021
LCLSWS   DC    X'00'                   LOCAL SWITCHES ***************** 60550021
*     ***********************************************************     * 60600021
*     *                BIT DESCRIPTIONS                         *     * 60650021
*     ***********************************************************     * 60700021
*     *  SYMBOLIC  *       *        *    MEANING OF BIT WHEN    *     * 60750021
*     *  NAME  OF  *  BIT  *  MASK  *         TURNED ON         *     * 60800021
*     *    MASK    *       *        *        (VALUE = 1)        *     * 60850021
*     ***********************************************************     * 60900021
*     *            *       *        *  THE LAST ID IN A STRING  *     * 60950021
*     *  LSTIDFND  *   0   *  X'80' *   OF CESDID'S HAS BEEN    *     * 61000021
*     *            *       *        *          FOUND            *     * 61050021
*     ***********************************************************     * 61100021
*     *            *       *        *  AT LEAST ONE CESDID IN   *     * 61150021
*     *   AL1VLD   *   1   *  X'40' *  A STRING IS VALID (NOT   *     * 61200021
*     *            *       *        *      MARKED DELETE)       *     * 61250021
*     ***********************************************************     * 61300021
*     *            *       *        *    THE IDR ITEM BEING     *     * 61350021
*     *  CNTDITM   *   2   *  X'20' *  PROCESSED IS CONTINUED   *     * 61400021
*     *            *       *        *  FROM THE PREVIOUS IDR    *     * 61450021
*     ***********************************************************     * 61500021
*     *            *       *        *  A CESDID IN A STRING OF  *     * 61550021
*     *   CNTDID   *   3   *  X'10' *    CESDID'S, CONTINUED    *     * 61600021
*     *            *       *        *  FROM A PREVIOUS TRANS.   *     * 61650021
*     *            *       *        *  IDR IS BEING PROCESSED   *     * 61700021
*     ***********************************************************     * 61750021
*     *    N/A     *   4   *  X'08' *         RESERVED          *     * 61800021
*     ***********************************************************     * 61850021
*     *    N/A     *   5   *  X'04' *         RESERVED          *     * 61900021
*     ***********************************************************     * 61950021
*     *    N/A     *   6   *  X'02' *         RESERVED          *     * 62000021
*     ***********************************************************     * 62050021
*     *    N/A     *   7   *  X'01' *         RESERVED          *     * 62100021
*     ***********************************************************     * 62150021
************* NOTE--INITIAL VALUE OF ALL BITS IS ZERO ***************** 62200021
         EJECT                                                          62250021
*********************************************************************** 62300021
*                                                                     * 62350021
*                     MODULE MAINTENANCE AREA                         * 62400021
*             160 BYTES ALIGNED ON A DOUBLE WORD BOUNDARY             * 62450021
*                  (APPROXIMATELY 8% OF MODULE SIZE)                  * 62500021
*                                                                     * 62550021
*********************************************************************** 62600021
         SPACE                                                          62650021
         DS    0D                      DOUBLE WORD ALIGNMENT            62700021
         DC    CL32'HEWLFIDR MAINTENANCE AREA BEGINS'  AREA IDENTIFIER  62750021
         DC    160X'00'                MAINTAINENCE SPACE               62800021
         DC    CL21'MAINTENANCE AREA ENDS'  END OF AREA IDENTIFIER      62850021
         SPACE                                                          62900021
         HEWAPT                                                         62950021
         END                                                            63000021
*/*TRANSIDR:      CHART */                                              63050002
*/*HEADER                                                               63100002
*/*               SUBPROGRAM TO PROCESS TRANSLATOR IDRS                 63150002
*/*SEPTEMBER 73                                     PAGE #       */     63200002
*/*IDRTRANS:      E TRANSLATOR IDR DETECTED */                          63300002
*/*               P SET REGISTERS TO POINT TO TRANS ID TABLE */         63350002
*/*               M SET INDICATOR FOR TRANS TABLE PROCESSING */         63400002
*/*               P SET POINTER TO ID TABLE PAST HEADER SPACE */        63450002
*/*               P GET ADDRESS OF RNT */                               63500002
*/*               D (YES,TRANSOBJ,NO,) OBJECT MODULE? */                63550002
*/*               D (YES,,NO,ABORT) LOAD MODULE? */                     63600002
*/*               P GET ADDRESS OF CESD */                              63650002
*/*               P POINT TO FIRST DATA IN INPUT BUFFER */              63700002
*/*               D (YES,CONTIN,NO,) ITEM CONT FROM PREV RECORD? */     63750002
*/*               P SAVE OFFSET TO START OF HEADER IN ID TABLE */       63800002
*/*SCNITM:        P SET DATAPTR TO POINT TO START OF ITEM */            63850002
*/*SCNITM1:       D (YES,SCNITM04,NO,) ID CONT FROM PREV RECORD? */     63900002
*/*               D (YES,PRTLID,NO,) ID CONT TO NEXT RECORD? */         63950002
*/*SCNITM04:      D (YES,,NO,SCNITM3) LAST ID? */                       64000002
*/*               M SET 'LAST ID FOUND' SWITCH */                       64050002
*/*               M TURN OFF HIGH ORDER BIT OF ID */                    64100002
*/*SCNITM3:       P USE ID TO COMPUT INDEX INTO RNT */                  64150002
*/*               P GET CORRECT CESD LINE NUMBER */                     64200002
*/*               D (YES,SCNITM6,NO,) SECTION MARKED DELETE? */         64250002
*/*               S MOVEID0:MOVE ID TO TRANS ID TABLE */                64300002
*/*SCNITM6:       D (NO,GETNXT,YES,) 'LAST ID' SWITCH ON? */            64350002
*/*               D (NO,TRFIN0,YES,)  AT LEAST ONE VALID ID? */         64400002
*/*               P MARK LAST ID IN TABLE */                            64450002
*/*GETNXT:        P INCREMENT POINTER TO NEXT ID INPUT */               64500002
*/*               D (YES,PRTLSTR,NO,) AT END OF INPUT RECORD? */        64550002
*/*STCNTIN:       D (YES,,NO,SCNITM) 'LAST ID' SWITCH ON? */            64600002
*/*               M TURN OFF 'CONTINUED ID' SWITCH */                   64650002
*/*PREDESC:       P POINT TO START OF HEADER IN TRANS ID TABLE */       64700002
*/*               D (NO,PREDESC2,YES,) SINGLE TRANS DESCRIPTION? */     64750002
*/*               P INCREMENT DATAPTR TO END OF SINGLE ITEM */          64800002
*/*               D (NO,PRTLITEM,YES,) IS ITEM COMPLETE IN THIS RECORD? 64850002
*/* */                                                                  64900002
*/*               P (,TRDESC0) MOVE FIRST DATE TO HEADER SPACE */       64950002
*/*PREDESC2:      P INCREMENT DATAPTR TO END OF DOUBLE ITEM */          65000002
*/*               D (NO,PRTLITEM,YES,) IS ITEM COMPLETE IN THIS RECORD? 65050002
*/* */                                                                  65100002
*/*               P MOVE TWO DATES TO HEADER SPACE */                   65150002
*/*               P PACK TRANSLATOR NAMES TOGETHER */                   65200002
*/*               M (,DBLTRNS) TURN ON DOUBLE ITEM SWITCH IN APT */     65250002
*/*PRTLID:        M TURN ON HALF ID INDICATOR */                        65300002
*/*               P (,PARTIAL) SAVE THE HALF ID */                      65350002
*/*PRTLSTR:       M TURN ON CONT STRG INDICATOR */                      65400002
*/*PARTIAL:       M SET PARTIAL ENTRY FLAG IN APT */                    65450002
*/*               P COPY LOCAL SWITCHES */                              65500002
*/*               P (,TRFIN3) UPDATE END OF TABLE PTR TO CURRENT POS */ 65550002
*/*PRTLITEM:      P COMPUTE AND SAVE EXPECTED TOTAL ITEM LENGTH */      65600002
*/*               P SAVE LENGTH OF PARTIAL ITEM */                      65650002
*/*               P SAVE PARTIAL ITEM */                                65700002
*/*               M (,PARTIAL) TURN ON CONTINUED ITEM INDICATOR */      65750002
*/*CONTIN:        P COPY THE SAVED LOCAL SWITCHES */                    65800002
*/*               M TURN OFF PARTIAL ITEM FLAG IN APT */                65850002
*/*               P RETRIEVE CURRENT END OF TABLE POINTER */            65900002
*/*               D (YES,STCNTIN,NO,) STRING OF CONTINUED IDS */        65950002
*/*               D (YES,,NO,DSCNTIN) CONTINUED ID? */                  66000002
*/*               P MOVE 2ND HALF ID TO WORK AREA */                    66050002
*/*               M SET 'CONTINUED ID' SWITCH */                        66100002
*/*               P (,SCNITM1) POINT TO CONTINUED ID */                 66150002
*/*DSCNTIN:       P MOVE CONTINUATION TO WORK AREA AND POINT TO IT */   66200002
*/*               P ADJUST BUFPTR TO START OF NEXT RECORD */            66250002
*/*               M (,PREDESC) TURN ON 'PARTIAL ITEM' INDICATOR */      66300002
*/*TRANSOBJ:      P SAVE ADDRESS OF START OF HEADER */                  66350002
*/*RNTLOOP:       P INCREMENT PTR TO NEXT RNT ENTRY */                  66400002
*/*               D (YES,ADDITEM,NO,) AT END OF RNT? */                 66450002
*/*               D (YES,ADDID,NO,) IS THIS AN SD? */                   66500002
*/*               D (YES,,NO,RNTLOOP) IS THIS A PC? */                  66550002
*/*ADDID:         D (YES,RNTLOOP,NO,) MARKED DELETE? */                 66600002
*/*               S (,RNTLOOP) MOVEID0:MOVE ID TO TRANS ID TABLE */     66650002
*/*ADDITEM:       D (NO,FINISH,YES,) AT LEAST ONE VALID ID FOUND? */    66700002
*/*               P CONVERT V/M,LVL TO PACKED FORM AND SQUISH */        66750002
*/*               P PACK DATE AND MOVE TO HEADER */                     66800002
*/*               D (NO,TRDESC0,YES,) DOUBLE TRANSLATOR ITEM? */        66850002
*/*               P MOVE SECOND TRANSLATOR NAME AFTER FIRST */          66900002
*/*               P PACK 2ND V/M LVL AND MOVE */                        66950002
*/*               P (,DBLTRNS) PACK 2ND DATE AND MOVE TO HEADER */      67000002
*/*TRDESC0:       P SET DATAPTR TO POINT TO END OF ITEM */              67050002
*/*               P (,TRDESC) INDICATE SINGLE ENTRY IN HEADER */        67100002
*/*DBLTRNS:       P SET DATAPTR TO POINT TO END OF ITEM */              67150002
*/*               P INDICATE DOUBLE ENTRY IN HEADER */                  67200002
*/*TRDESC:        P SAVE POINTER TO END OF ID STRING */                 67250002
*/*               P SET REGISTERS TO POINT TO TRANS DATA TABLE */       67300002
*/*SCANTRT0:      D (YES,NEWITEM,NO,) AT END OF TABLE? */               67350002
*/*               D (YES,SCANDBL,NO,) DOUBLE ENTRY? */                  67400002
*/*               D (YES, MATCH1,NO,SCANTRT1) IS THIS A MATCH WITH      67450002
*/*CURRENT ITEM? */                                                     67500002
*/*SCANDBL:       D (YES,MATCH1,NO,) IS THIS A MATCH WITH CURRWNT       67550002
*/*(DOUBLE) ITEM? */                                                    67600002
*/*SCANTRT1:      P (,SCANTRT0) INCREMENT TO NEXT DATA TABLE ENTRY */   67650002
*/*NEWITEM:       L POSTIDR: ADD ITEM TO TABLE */                       67700002
*/*               P UPDATE TRANS DATA TABLE END POINTER */              67750002
*/*MATCH1:        P SET REGISTERS TO POINT TO TRANS ID TABLE */         67800002
*/*               P STORE POINTER TO TRANS DATA ENTRY IN HEADER */      67850002
*/*               D (YES,,NO,SNGHDR) IS THIS A DOUBLE ITEM? */          67900002
*/*               D (YES,,NO,TRFIN0) IS THIS HEADER SAME AS LAST        67950002
*/*PREVIOUS? */                                                         68000002
*/*NOHDRSH:       P COMPUTE LENGTH OF ID STRING */                      68050002
*/*               P (,MATCH2) SHIFT STRING NINE BYTES */                68100002
*/*SNGHDR:       D (YES,NOHDRSH,NO,) IS THIS ENTRY SAME AS LAST         68150002
*/*PREVIOUS? */                                                         68200002
*/*               P COMPUTE LENGTH OF ID STRING */                      68250002
*/*               P SHIFT STRING THREE BYTES */                         68300002
*/*MATCH2:        P SAVE NEW END OF TABLE LOCATION */                   68350002
*/*TRFIN0:        D (NO,TRFIN3,YES,) LOAD MODULE? */                    68400002
*/*               D (NO,,YES,ENDTEST) ITEM CONTINUED FROM LAST RECORD?  68450002
*/**/                                                                   68500002
*/*               D (NO,DBLINC,YES,) SINGLE TRANSLATOR ITEM? */         68550002
*/*               P (,ENDTEST) INCREMENT BUFFER POINTER TO NEXT ITEM */ 68600002
*/*DBLINC:        P INCREMENT BUFFER POINTER FOR DOUBLE ITEM */         68650002
*/*ENDTEST:       D (NO,TRFIN3,YES,) ANY MORE ITEMS IN THIS RECORD? */  68700002
*/*               P (,SCNITM) RESET LOCAL SWITCHES */                   68750002
*/*TRFIN3:        P UPDATE APT TABLE INFORMATION */                     68800002
*/*FINISH:        R RESET SWITCHES AND EXIT MODULE */                   68850002
*/*ABORT:         R FATAL ERROR - ABORT LINK EDIT */                    68900002
*/*MOVEID0:       E ROUTINE TO MOVE ID TO TABLE */                      68950002
*/*               M TURN ON 'ONE VALID ID' SWITCH */                    69000002
*/*               D (YES,MOVEID1,NO,) ROOM IN TABLE? */                 69050002
*/*               L CHKALLOC: BRANCH TO CALL REALLOCATE */              69100002
*/*MOVEID1:       D (NO,MOVEID2,YES,) LAST ID? */                       69150002
*/*               P TURN ON LAST ID INDICATOR */                        69200002
*/*MOVEID2:       P MOVE ID TO TRANSLATOR ID TABLE */                   69250002
*/*               P INCREMENT ID TABLE POINTER */                       69300002
*/*               R CONTINUE PROCESSING */                              69350002
*/*TRANSIDR:      END */                                                69400002
./  ADD  SSI=72660297,NAME=HEWLFINC
         TITLE    'HEWLFINC INCLUDE AND AUTOMATIC LIBRARY CALL PROC.'   00010021
*                                                                       00020021
*STATUS: CHANGE LEVEL 000                                               00030021
*                                                                       00040021
* C519100                                                       ZA01413 00042037
* C379500                                                      @ZA07584 00044037
* C568700  (2657=LRECL DEL)(12241=NCP=01) 7/30/76     @ZA02657,@ZA12241 00045037
         EJECT                                                          00047037
*FUNCTION/OPERATION:                                                    00050021
*  1-THE INCLUDE PROCESSOR INCLUDES INTO THE CURRENT INPUT A DATA SET   00060021
*    THAT HAS BEEN REQUESTED BY AN INCLUDE STATEMENT.   TO DO THIS,IT   00070021
*    TAKES THE FIRST ITEM OF THE INCLUDE CHAIN AND MAKES IT READY TO BE 00080021
*    READ BY THE INPUT PROCESSOR. THIS ITEM CAN INDICATE A SEQUENTIAL   00090021
*    DATA SET OR A PARTITIONED DATA SET .                               00100021
*       1-A-  IF IT INDICATES A SEQUENTIAL DATA SET, THE ITEM CONTAINS  00110021
*             THE DDNAME, ON WHICH 'OPEN' IS PERFORMED.                 00120021
*             THE DATA SET IS THEN READY TO BE READ BY THE INPUT PRO-   00130021
*             -CESSOR                                                   00140021
*       1-B-  IF IT INDICATES A PARTITIONED DATA SET , THE ITEM CON-    00150021
*             -TAINS THE MEMBER NAME AND A POINTER TO THE DDNAME.       00160021
*             'OPEN' IS PERFORMED ON THE DDNAME. 'BLDL' IS PERFORMED    00170021
*             ON THE MEMBERNAME. 'FIND' POSITIONS TO BEGINNING OF MEM-  00180021
*             -BER                                                      00190021
*    THE INCLUDE PROCESSOR KNOWS AFTER 'OPEN' WHAT DATA SET IS COMING,  00200021
*    BY LOOKING AT THE FIELD 'RECFM' (RECORD FORMAT). THIS DCB FIELD    00210021
*    IS ZEROED BEFORE EACH OPEN ,AND RECEIVES WHAT HAS BEEN SPECIFIED   00220021
*    IN THE DCB FIELD OF THE DDCARD (OR WHAT WAS IN THE DSCB, IF APPLI- 00230021
*    -CABLE)                                                            00240021
*  2-THE AUTOMATIC LIBRARY CALL PROCESSOR (HEWLCAUT), TRY TO RESOLVE    00250021
*    THE EXTERNAL REFERENCES IN THE CESD ,WHICH ARE STILL UNRESOLVED AT 00260021
*    THE END OF THE PRIMARY INPUT STREAM.   IT CALLS FROM PARTITIONED   00270021
*    DATA SETS,MEMBERS WHOSE NAMES ARE THE EXTERNAL REFERENCES IN THE   00280021
*    CESD.                                                              00290021
*          IT BEGINS BY THE EXTERNAL REFERENCES WHOSE CALLS HAVE BEEN   00300021
*    GUIDED (BY MEANS OF A LIBRARY CARD)TOWARDS A SPECIFIED DATA SET.   00310021
*    THESE CALLS ARE MADE DATA SET BY DATA SET, ALL THE CALLS INSIDE    00320021
*    A SINGLE DATA SET BEING MADE CONSECUTIVELY.                        00330021
*          IT CONTINUES WITH THE EXTERNAL REFERENCES NOT GUIDED BY      00340021
*    LIBRARY CARDS ; IT SEARCHES FOR THESE NAMES ON THE STANDARD LIBRA- 00350021
*    -RY WHOSE NAME IS IN THE ALL PURPOSE TABLE . THE STANDARD LIBRARY  00360021
*    DSNAME IS 'SYSLIB' WHEN THE LINKAGE EDITOR GETS CONTROL FROM THE   00370021
*    TASK SCHEDULER ; IT IS THE FOURTH ITEM IN THE PARAMETER LIST WHEN  00380021
*    THE LINKAGE EDITOR IS 'LINKED TO'                                  00390021
*                                                                       00400021
*ENTRY POINTS:                                                          00410021
*    HEWLFINC   FOR THE INCLUDE PROCESSOR                             * 00420021
*    HEWLCAUT   FOR THE AUTOMATIC LIBRARY CALL PROCESSOR                00430021
*                                                                       00440021
*               CALLING SEQ.       L     15,=V(HEWLFINC)              * 00450021
*                                  BALR  14,15                          00460021
*           L     15,=V(HEWLCAUT)                                       00470021
*           BALR  14,15                                                 00480021
*    NO DATA IS PASSED DIRECTLY UPON CALLING,BUT IS FOUND IN OR BY      00490021
*    MEANS OF THE ALL PURPOSE TABLE WHOSE ADDRESS IS CONSTANTLY IN      00500021
*    REGISTER 2                                                         00510021
*                                                                       00520021
*INPUT:   1-ALL PURPOSE TABLE                                           00530021
*         2-ITEMS IN THE CESD:                                          00540021
*********************************************************************** 00550021
*BYTES 0-7*BYT 8*BYT 9*BYT 10-11*BYT 13*BYT 14-15*  DESIGNATION       * 00560021
* SYMBOL  *TYPE *     *         *SUBTYP*         *                    * 00570021
*********************************************************************** 00580021
*MEMBER-  *X'02'* CHAIN ADDRESS *X'D0' * POINTER *CONTROL INCLUDE     * 00590021
*NAME     *     *               *      * TO DDNAM*WITH PTER           * 00600021
*********************************************************************** 00610021
*DDNAME   *X'02'* CHAIN ADDRESS *X'C0' *         *CONTROL INCLUDE     * 00620021
*         *     *               *      *         *WITHOUT PTER        * 00630021
*********************************************************************** 00640021
*DDNAME   *X'02'*               *X'B0' * PTER,IF * DDNAME ITEM        * 00650021
*         *     *               *      * FOR LIB.*                    * 00660021
*********************************************************************** 00670021
*MBER NAME*X'02'*     *REVRS CH-*X'02' *DIRECT CH* UNMATCHED LIBRARY  * 00680021
*         *     *     *AIN PTER *      *AIN PTER * MEMBER             * 00690021
*********************************************************************** 00700021
*MBER NAME*X'02'*     *REVERSE  *X'03' *DCT CHAIN* MATCHED LIBRARY    * 00710021
*         *     *     *CH. PTER *      *PTER     * MEMBER             * 00720021
*********************************************************************** 00730021
*SYMBOL   *X'02'*               *X'04' *         * NO CALL,UNMATCHED  * 00740021
*********************************************************************** 00750021
*SYMBOL   *X'02'*               *X'05' *         * NO CALL,MATCHED    * 00760021
*********************************************************************** 00770021
*SYMBOL   *X'02'*               *X'06' *         * NEVER CALL         * 00780021
*********************************************************************** 00790021
*                                                                       00800021
*         3-THE INFORMATION SLOT BY OPEN IN OUR LIBRARY DCB (HEWLKLDB)  00810021
*         4-THE DIRECTORY ENTRIES OF THE MEMBERS ON WHICH WE BLDL       00820021
*                                                                       00830021
*OUTPUT:                                                                00840021
*   FLAGS IN THE ALL PURPOSE TABLE                                      00850021
*                                                                       00860021
*EXTERNALS ROUTINES                                                     00870021
*   HEWLFLOG   ERROR ROUTINE                                          * 00880021
*   HEWLFADA   ADDRESS ASSIGNMENT                                     * 00890021
*   HEWLFINP   INPUT PROCESSOR                                        * 00900021
*   HEWLFEND   END PROCESSOR                                            00910021
*                                                                       00920021
*EXITS-NORMAL:                                                          00930021
*           1- RETURN TO THE CALLER EXCEPT IN CASE 2-                   00940021
*           2- WHEN HEWLCAUT (AUTOMATIC LIBRARY CALL)IS CALLED AND NO   00950021
*              EXTERNAL REFERENCE CORRESPONDING TO AN AVAILABLE MEMBER  00960021
*              CAN BE FOUND, CONTROL IS PASSED TO HEWLKADA (ADDRESS)    00970021
*              ASSIGNMENT)                                              00980021
*     -ERROR:                                                           00990021
*********************************************************************** 01000021
*ERR CODE* OTHER PARAMS *    CONDITION CAUSING ERROR                  * 01010021
*IN REG0 *              *                                             * 01020021
*********************************************************************** 01030021
*X'222B' *LIB. DDNNAME  * OPEN UNSUCCESSFUL ON SPECIFIED LIBRARY      * 01040021
*        *ADDR. IN R1   *                                             * 01050021
*********************************************************************** 01060021
*X'3222' *MBR.NAM IN R13* MEMBER NOT FOUND ON LIBRARY                 * 01070021
*        *LIB.NAM IN R1 *                                             * 01080021
*********************************************************************** 01090021
*X'2235' *LIB.NAM IN R1 * OBJECT MODULE BUFFER'S SIZE EXCEEDED        * 01100021
*********************************************************************** 01110021
*X'2233' *LIB.NAM IN R1 * INCL.CRD.INDICATES OBJECT MODULE BUT RECFM=U* 01120021
*********************************************************************** 01130021
*X'2234' *LIB.NAM IN R1 * DATA SET CONTAINS UNACCEPTABLE RECFM (I.E.  * 01140021
*        *              * OTHER THAN F OR U                           * 01150021
*********************************************************************** 01160021
*X'321B' *LIB.NAM IN R1 * LOAD MODULE CANNOT BE PROCESSED BY MODEL E  * 01170021
*        *MBRNAME IN R13* LINK.EDITOR ('DOWNARD UNCOMPATIBILITY')     * 01180021
*********************************************************************** 01190021
*                                                                       01200021
*TABLES/WORK AREAS:                                                     01210021
*                  CESD,APT, PREVIOUSLY MENTIONED                       01220021
*ATTRIBUTES                                                             01230021
*           HEWLCINC IS IN A SEGMENT OF AN OVERLAY STRUCTURE            01240021
*           AS DESCRIBED HERE (TABLES CONSIDERED AS INPUT) IT IS        01250021
*           REUSABLE                                                    01260021
*                                                                       01270021
*NOTES    HEWLFINC CONTAINS THE MACROS CVT,DCBD,DCB,OPEN,               01280021
*            BLDL,FIND,CLOSE                                            01290021
********************                                                    01300021
HEWLFINC CSECT                                                          01310021
******** ERROR MSG **************************************************** 01410037
MSG      EQU   0                                                        01470037
IEW0432X EQU   X'222B'    ERR OPEN FAILED ON SPECIFIED LIBRARY          01530037
IEW0342X EQU   X'3222'    ERR.  MEMBER NOT FOUND ON SPECIFIED LIBRARY   01590037
IEW0532X EQU   X'2235'    ERR  SYSLIN BUFF SIZE EXCEEDED                01650037
IEW0512X EQU   X'2233'  L.E. CRD SYNTAX CONFLICTS WITH RECFM OF LIB     01710037
IEW0522X EQU   X'2234'  SPECIFIED DATA SET CONTAINS NON ACCEPTABLE RCFM 01770037
IEW0272X EQU   X'321B'     ERROR:'MODULE FROM SPECIFIED LIBRARY CANNOT  01830037
*                          BE PROCESSED BY LEVEL E LINKAGE EDITOR'      01890037
*                          MEMBER NAME AND DDNAME PRINTED               01950037
*********************************************************************** 02010037
FF       EQU   X'FF'       IMMEDIATE BYTE OF ALL ONES           YM4650  02070037
BLDSIZ   EQU   26      SIZE OF ENTRY IN BLDL LIST                       02130037
APT      EQU   2                                                        02190037
         EJECT                                                          02250037
         EXTRN  HEWLCEOD                                                02410021
         EXTRN HEWLCRO1                                                 02510021
         USING APTDSECT,APT                                             02610021
         USING BLDLMBRN,6                                               02710021
         USING  IHADCB,07                                               02810021
         ST    12,8(15)               SAVE BASE OF CALLER               02910021
         BC    15,12(15)                                                03010021
         DC    XL4'00000000'                                            03110021
         BALR  12,0                                                     03210021
         USING *,12                                                     03310021
         B     INCLU050                BRANCH AROUND MODULE IDENT       03410037
*********************************************************************** 03470037
         DC    C' HEWLFINC '                                            03490037
         DC    C'07/30/76 '                                             03510037
         DC    C'OZ12241 ',0H'0'                                        03530037
         EJECT                                                          03550037
INCLU050 STM   13,11,SAVAREA          SAVE OTHER REGISTERS OF CALLER    03610021
         L     07,SYSLIBAD   ADDR OF LIB DCB                            03710021
         NI    IND3,X'DF'   RESET 'AUTO LIB ' TO OFF                    03810021
**********                                                              03910021
*  CHOOSE IN THE INCLUDE CHAIN THE FIRST ITEM TO BE INCLUDED            04010037
*                                                                       04310021
INCLU100 L     09,CRRTINCL            INITIATE THE INCLUDE CHAIN BREA-  04410021
         TM    APT2,X'08'              HAS INCLUDE BEEN INITIATED       04510021
        BC    8,INCLU115              NO                                04610021
         TM    IND3,X'10'              IS SINGLE BLDL MODE IN OPERATION 04710021
         BC    1,INCLU115              YES                              04810021
INCLU110 TM    IND3,X'08'              WAS BLDL DONE ON LIST            04910021
        BC    1,GETNEXT1                                                05010021
INCLU115 OI    APT2,X'08'              SET INCLUDE PREVIOUSLY INITIATED 05110021
         CLI   13(9),X'D0'             IS THIS LINE INCL WITH POINTER   05210021
         BC    8,INCLU160              YES                              05310021
         OI    IND3,X'80'              SET PHSICAL SEQUENTIAL ON        05410021
         LR    8,9                                                      05510021
         BAL   14,LIBOP                TO OPEN LIBRARY                  05610021
         BAL   14,NULLINE              TO NULL LINE                     05710021
         ST    9,CRRTINCL              UPDATE CRRTINCL                  05810021
         ST    9,INCBRKPT              AND BREAK POINT                  05910021
         BC    15,INCLU155             TOWARDS INPUT                    06010021
INCLU160 NI    IND3,X'7F'              TURN OFF PHYSICAL SEQUENTIAL IND 06110021
         TM    IND3,X'10'              CHECK FOR SINGLE BLDL MODE       06210021
         BC    8,INCLU168              NO                               06310021
         LA    6,SINGBLDL              ADDRESS OF SINGLE BLDL LIST      06410021
         BC    15,INCLU250                                              06510021
INCLU168 MVC   PTRSAV(2),14(9)         SAVE DDNAME POINTER              06610021
INCLU170 CLI   NUMENT+1,X'00'          FIRST ENTRY IN LIST              06710021
         BC    7,INCLU172              NO                               06810021
         L     6,TABLSTRT              YES--GET START OF TABLE          06910021
         SH    6,ENTSIZ                MAKE IT ONE ENTRY PRIOR          07010021
         BC    15,INCLU180                                              07110021
INCLU172 LH    6,NUMENT                NUMBER OF ENTRIES                07210021
        MH    6,ENTSIZ                TIMES ENTRY SIZE                  07310021
         A     6,TABLSTRT              ADD START OF TABLE               07410021
INCLU171 SH    6,ENTSIZ                GO TO PREVIOUS ENTRY             07510021
         CLC   0(8,6),0(9)             COMPARE NEW ENTRY TO PREVIOUS    07610021
         BC    8,INCLU182              IF EQUAL IGNORE IT               07710021
         BC    4,INCLU180              IS HIGH PUT IT  IN TABLE         07810021
         MVC   BLDSIZ(10,6),0(6)       IF LOW MOVE PREVIOUS ENTRY DOWN  07910021
         C     6,TABLSTRT              CHECK IF END OF TABLE            08010021
         BC    7,INCLU171              NO                               08110021
         SH    6,ENTSIZ                TO MOVE INTO FIRST ENTRY         08210021
INCLU180 MVC   BLDSIZ(8,6),0(9)        MOVE NAME TO LIST                08310021
         LH    5,NUMENT                CURRENT ENTRY NUMBER             08410021
         LA    5,1(0,5)                UPDATE BY ONE                    08510021
         STH   5,NUMENT                SAVE NEW NUMBER                  08610021
         STH   5,BLDSIZ+8(0,6)         IS ALSO SEQUENCE NUMBER          08710021
         TM    IND3,X'20'              IS ENTRY FROM AUTOCALL           08810021
         BC    8,INCLU182              NO--LEAVE SEQUENCE NUMBER IN     08910021
         S     9,CHESD                 YES--SAVE ID INSTEAD             09010021
         SRL   9,4                                                      09110021
         STH   9,BLDSIZ+8(0,6)                                          09210021
INCLU182 TM    IND3,X'20'              IS ENTRY FROM AUTOCALL           09310021
         BC    1,TESTMAX               YES--BYPASS NULL,CHAIN CHECK     09410021
         BAL   14,NULLINE              GO NULL THE LINE                 09510021
         LTR   9,9                     IS THIS END OF CHAIN             09610021
         BC    8,INCLU185              YES                              09710021
TESTMAX  CH    5,MAXENTRY              IS TABLE FULL                    09810021
         BC    8,INCLU185              YES                              09910021
         TM    IND3,X'20'              IS ENTRY FROM AUTOCALL           10010021
         BCR   1,14                    YES--RETURN TO AUTOCALL          10110021
         CLI   13(9),X'D0'             IS NEXT ITEM INCLUE WITH PTR     10210021
         BC    7,INCLU185              NO                               10310021
         LH    5,14(9)                 YES--IS IT SAME POINTER          10410021
         CH    5,PTRSAV                                                 10510021
         BC    8,INCLU172              YES                              10610021
INCLU185 TM    IND3,X'20'              IS AUTO LIB IN OPERATION         10710021
         BC    1,INCLU186              YES                              10810021
         ST    9,CRRTINCL              UPDATE CRRTINCL                  10910021
         ST    9,INCBRKPT              AND BREAK POINT                  11010021
         LH    8,PTRSAV                DDNAME POINTER                   11110021
         SLL   8,4                     TIMES SIXTEEN                    11210021
         A     8,CHESD                 PLUS CESD ADDRESS                11310021
INCLU186 LH    5,NUMENT                MOVE SEQUENCE NUMBERS TO APPEND  11410021
         LA    10,APPEND                                                11510021
        LA    6,BLDLLST                                                 11610021
MOVESEQ  MVC   0(2,10),8(6)                                             11710021
         LA    10,2(0,10)              UPDATE POINTERS                  11810021
         LA    6,BLDSIZ(0,6)                                            11910021
         BCT   5,MOVESEQ               LOOP                             12010021
INCLU175 BAL   14,LIBOP                TO OPEN LIBRARY                  12110021
         TM    IND3,X'40'              ANY OPEN ERROR                   12210021
         BC    8,BUILDLST              NO--DO BLDL                      12310021
         BC    15,GETNEXT5             YES                              12410021
BUILDLST LA    13,REGSA                ADDRESS OF SAVE AREA             12510021
         BLDL  (7),NUMENT              ISSUE BLDL                       12610021
         STC   15,TEMP1                                                 12710021
         CLI   TEMP1,X'08'             CHECK FOR COMPLETION CODE = 8    12810021
         BC    7,BUILDOK               NO--IS OK                        12910021
         LH    5,NUMENT                IS 8 ENSURE ALL ENTRIES IGNORED  13010021
         LA    6,BLDLLST                                                13110021
BUILDBAD MVI   10(6),X'00'                                              13210021
         AH    6,ENTSIZ                                                 13310021
         BCT   5,BUILDBAD                                               13410021
BUILDOK  OI    IND3,X'08'              SET BLDL DONE ON LIST INDICATOR  13510021
         B     GETNEXT1                GO TO READ FIRST MODULE          13610021
GETNEXT  CLC   CURINCNO(1),NUMENT+1    ARE ALL ITEMS IN LIST DONE       13710021
         BC    7,INCLU200              NO                               13810021
GETNEXT5 NI    IND3,X'F7'              YES--TURN OFF BLDL DONE ON LIST  13910021
         MVI   CURINCNO,X'00'          INITIALIZE CURRENT INCLUDE NO    14010021
         MVI   NUMENT+1,X'00'          INITIALIZE NUMBER OF ENTRIES     14110021
         TM    IND3,X'20'              IS AUTO LIB IN OPERATION         14210021
         BC    8,INCLU155              NO--GO CHECK FOR MORE INCLUDES   14310021
         TM    IND3,X'40'              YES--WAS THERE AN ERROR          14410021
         BC    1,AUTOCL1               YES--RETURN TO AUTOCALL          14510021
         BC    15,INCLU201             NO--GO READ MODULE               14610021
GETNEXT1 LA    10,APPEND-2             ADDRESS OF APPENDAGE SEQ NUMBERS 14710021
         SR    6,6                                                      14810021
         IC    6,CURINCNO              UPDATE CURINCNO                  14910021
         LA    6,1(0,6)                                                 15010021
         STC   6,CURINCNO                                               15110021
         TM    IND3,X'20'              IS AUTOLIB IN OPERATION          15210021
         BC    8,GETNEXT9              NO                               15310021
         AR    10,6                    GET ADDRESS OF NEXT ID NUMBER    15410021
         AR    10,6                    REG10 + 2 * REG6                 15510021
         LH    10,0(0,10)              GET ID NUMBER                    15610021
         SLL   10,4                    CONVERT TO CESD ADDRESS          15710021
         A     10,CHESD                                                 15810021
         MVC   TEMP1(1),8(10)          GET TYPE                         15910021
         NI    TEMP1,X'0F'             AND OUT LEFT HALF                16010021
         CLI   TEMP1,X'02'             IS ITEM STILL UNRESOLVED         16110021
         BC    8,GETNEXT8              YES--GO TO READ IT               16210021
         OI    IND3,X'40'              INDICATE MODULE NOT FOUND        16310021
         BC    15,GETNEXT4             NO--GO CHECK FOR MORE IN LIST    16410021
GETNEXT9 SR    6,6                     FIND NEXT ITEM TO BE READ        16510021
GETNEXT2 LA    6,1(0,6)                                                 16610021
         LA    10,2(0,10)                                               16710021
         CLC   CURINCNO(1),1(10)       IS THIS NEXT ITEM TO BE READ     16810021
         BC    7,GETNEXT2              NO--TRY NEXT                     16910021
GETNEXT8 BCTR  6,0                                                      17010021
         MH    6,ENTSIZ                                                 17110021
         A     6,TABLSTRT              ADD START OF TABLE               17210021
         CLI   10(6),X'00'             WAS MODULE FOUND                 17310021
         BC    7,GETNEXT3              YES                              17410021
         LA    14,GETNEXT4             NO--GIVE ERROR MESSAGE           17510021
         ST    14,SAV14L1              PREPARE RETURN ADDRESS           17610021
         LA    8,LIBOPEN               ADDRESS OF DDNAME OPEN           17710021
         BC    15,INCLU615             GO PRINT ERROR MESSAGE           17810021
GETNEXT4 CLC   CURINCNO(1),NUMENT+1    ARE ALL ITEMS IN LIST DONE       17910021
         BC    8,GETNEXT5              YES                              18010021
         BC    15,GETNEXT1             NO--GO CHECK NEXT ONE            18110021
GETNEXT3 TM    IND3,X'20'              IS AUTOCALL ON                   18210021
         BC    8,GETNEXT7              NO                               18310021
         L     8,SAVAD  GET ADDRESS OF DDNAME FOR AUTOCALL OR LIB CALL  18410021
         BC    15,GETNEXT6                                              18510021
GETNEXT7 LH    8,PTRSAV                GET POINTER TO DDNAME            18610021
         SLL   8,4                     POINTER TIMES FOUR               18710021
         A     8,CHESD                 PLUS CESD ADDRESS                18810021
GETNEXT6 BAL   14,LIBOP                CHECK IF LIBRARY STILL OPEN      18910021
         TM    IND3,X'40'              ANY ERROR                        19010021
         BC    1,GETNEXT5              YES--SKIP REST OF LIST           19110021
         LA    14,GETNEXT              PREPARE ADDRESS OF EXIT          19210021
         ST    14,SAV14L1                                               19310021
         BC    15,INCLU602             TO FIND AND PREPARE TO READ      19410021
* AS HEWLCINC IS GIVEN CNTRL, THE CHAIN ADDR. IN THE LINE 'CRRTINCL'    19510021
* IS NECESSERALY NON NULL                                               19610021
NULLINE  MVI   8(9),X'07'              NULLIFY TYPE                     19710021
         MVI   7(09),C','   ALTER THE SYMBOL                            19810021
         MVC   12(4,09),FLCD       STICK NULL LINE TO HOLES CHAIN       19910021
         ST    09,FLCD             UPDATE FLCD                          20010021
         L     9,8(9)   LD CHAIN ADDR (AND TYPE)                        20110021
         LA    9,0(9)   (WIPE TYPE)                                     20210021
         LTR   9,9                     IS POINTER ZERO (END OF CHAIN)   20310021
         BCR   8,14                    YES--RETURN TO CALLER            20410021
         ST    9,CRRTINCL      UPDATE CRRTINCL                          20510021
         TM    IND3,X'20'              IS SINGLE BLDL MODE ON           20610021
         BCR   1,14                    YES--RETURN                      20710021
INCLU120 ST    09,INCBRKPT      INITIATE INCLUDE BREAK POINT            20810021
         BCR   15,14                   RETURN                           20910021
         OI   APT2,X'08'   SET 'INCLUDE PREVIOUSLY INITIATED'           21010021
**                                    ADDR.OF INCLUDE LINE NOW IN  9    21110021
**********                                                              21210021
*                                                                       21310021
*  DETERMINE IF THIS IS THE INCLUDING OF A MEMBER OF A PARTITIONED      21410021
*  DATA SET , OR A PHYSICAL SEQUENTIAL DATA SET                         21510021
*                                                                       21610021
*                                                                       21710021
         CLI   13(09),X'D0'         IS THIS LINE CNTRL.INCL WITH PTER   21810021
         BC    8,INCLU250            YES                                21910021
         OI    IND3,X'80'            SET 'PHYSICAL SEQUENTIAL' ON.      22010021
         LR    8,9             TAKE ADDR.OF THIS LINE AS ADDR.OF -      22110021
*                            - NEWDDNAME SYMBOL                         22210021
**        NEWDDNAME  POINTED TO BY REG. 8                               22310021
**********                                                              22410021
*                                                                       22510021
*  BRANCH TO THE SUBROUTINE LIBOP                                       22610021
*                                                                       22710021
INCLU150 BAL   14,LIBOP                                                 22810021
*                                                                       22910021
*                                                                       23010021
**********                                                              23110021
*                                                                       23210021
*                                                                       23310021
*  SET THE 'INCLUDE' BIT ON IN THE ALL PURPOSE TABLE, IN CASE MORE      23410021
*  INCLUDE WILL HAVE TO BE DONE AFTER THIS ONE .                        23510021
*  THE INPUT PROCESSOR WILL TEST THIS BIT AT THE END OF THE INCLUDED    23610021
*  DATA SET , TO DECIDE IF THE INCLUDE PROCESSOR HAS TO BE GIVEN        23710021
*  CONTROL AGAIN                                                        23810021
*                                                                       23910021
*                                                                       24010021
INCLU155 OC    CRRTINCL(4),CRRTINCL    IS CHAIN ADDRESS 0               24110021
         BC    8,INCLU300      YES                                      24210021
         OI    APT1,X'80'   SET INCLUDE BIT TO 1                        24310021
         TM    IND3,X'40'        WAS MODULE 'NOT FOUND'                 24410021
         BC    1,INCLU100        BR. IF NOT FOUND                       24510021
**********                                                              24610021
*                                                                       24710021
*                                                                       24810021
*  GO TO THE INPUT PROCESSOR                                            24910021
*                                                                       25010021
*                                                                       25110021
INCLU200 TM    IND3,X'08'              WAS BLDL DONE ON LIST            25210021
         BC    8,INCLU201              NO                               25310021
         TM    IND3,X'20'              YES--IS AUTOLIB IN OPERATION     25410021
         BC    1,INCLU201              YES--DON'T SET MORE INCLUDES     25510021
         OI    APT1,X'80'              NO--SET MORE INCLUDES TO COME    25610021
INCLU201 LA    15,INCLU050+8                                            25710021
         SH    15,FOURTEEN                                              25810021
         MVC   SAVAREA+60(4),0(15)                                      25910021
         MVC   SAVAREA+8(4),INPUTPRA                                    26010021
         LM    13,12,SAVAREA                                            26110021
         BCR  15,15                                                     26210021
*                                                                       26310021
*  MAKE DDNAME AND MEMBER NAME AVAILABLE FOR THE LIBOP SUBROUTINE       26410021
*                                                                       26510021
*                                                                       26610021
INCLU250 NI    IND3,X'7F'        RESET  'PHYSICAL SEQUENTIAL' TO 0      26710021
*                             LOOK FOR NEWDDNAME ADDR. :                26810021
         LH    8,14(09)       LOAD  CHAINED ID                          26910021
         SLL   8,4            MULTIPLY ID BY 16                         27010021
         A     8,CHESD             ADD CESD ADDR. MINUS 16              27110021
*          NEWDDNAME  POINTED TO BY REGISTER 8                          27210021
         MVC   BLDLMBRN(8),0(09)   MOVE MBRNAME INTO THE BLDL AREA      27310021
         BAL   14,NULLINE              TO NULL LINE AND UPDATE POINTER  27410021
         C     9,INCBRKPT              HAS BREAK POINT BEEN REACHED     27510021
         BC    7,INCLU150              NO--STAY IN SINGLE BLDL MODE     27610021
         NI    IND3,X'EF'              YES--TURN OFF SINGLE BLDL        27710021
         BC    15,INCLU150                                              27810021
INCLU300 NI    APT1,X'7F'          RESET INCLUDE BIT TO 0               27910021
         NI    APT2,X'F7'              TURN OFF INCLUDE INITIATED BIT   28010021
*                  (WHEN THIS MODULE WILL BE FINISHED, THE INPUT        28110021
*                   PROCESSOR MUST NOT BRANCH TO THE INCLUDE PROC.)     28210021
* (INPUT PROC. WILL HAVE THEN TO SWITCH LIBADRC  TO SYSLIN )            28310021
*  NULLIFICATION OF DDNAME LINE LAST USED                               28410021
*                                                                       28510021
* ONE CANNOT DESTRUCT THE LAST USED DDLINE HERE BECAUSE THIS DDLINE     28610021
* MIGHT BE THE BASE OF A LIBRAARY CHAIN                                 28710021
         TM    IND3,X'40'   WAS THERE A LIBOP FAILURE                   28810021
         BC   8,INCLU310        NO                                      28910021
         NI    APT1,X'DF'  RESET 'LOAD MODULE BIT ' TO 0                29010021
         LA    6,HEWLCRBN                                               29110021
         ST    6,HEWLCLAC         HEWLCLAC TO SYSLIN                    29210021
INCLU310 BC   15,INCLU200   TOWARDS INPUT PROCESSOR                     29310021
*****                                                                   29410021
*                                                                       29510021
*                                                                       29610021
*                                                                       29710021
* SUBROUTINE LIBOP  ,IS COMMON TO INCLUDE PROCESSOR AND ...             29810021
*  ..AUTOMATIC LIBRARY CALL PROCESSOR                                   29910021
*                                                                       30010021
*                                                                       30110021
*                                                                       30210021
* WHEN THE SUBROUTINE LIBOP GETS CONTROL, IT SUPPOSES THAT THE          30310021
* DDNAME IS POINTED TO BY REG. 8 . IF THE DATA SET IS A MEMBER TO FIND  30410021
* IN A LIBRARY , LIBOP ALSO SUPPOSES THE MEMBER NAME IS IN THE          30510021
* BLDL AREA (AT BLDLMBRN).                                              30610021
*   REGISTER  7  CONTAINS THE ADDRESS OF THE LIBRARY DCB                30710021
* LIBOP CHECKS IF THE DATA SET WOULD NOT BE ALREADY OPENED.             30810021
* LIBOP WORKS ON THE 'SYSLIB' DCB WHICH IS IN THE ALL PURPOSE           30910021
* TABLE(APT).THIS DCB CAN BE EITHER PARTIONED OR SEQUENTIAL             31010021
* LIBOP TESTS THE INDICATORS IND3 (OF THIS MODULE) AND APT3(OF THE APT) 31110021
*                                                                       31210021
*                                                                       31310021
LIBOP    ST    14,SAV14L1                                               31410021
*                             SET LIBADRC ON SYSLIB READ CONTROL BLOCK  31510021
         NI   IND3,X'BF'    RESET 'LIBOP FAILURE' TO 0                  31610021
         LA    14,HEWLCRBB             SET HEWLCLAC                     31710021
         ST    14,HEWLCLAC             TO SYSLIB READ BLOCK             31810021
         TM    APT3,X'01'          IS  SYSLIB OPENED ?                  31910021
         BC    8,INCLU350          NO                                   32010021
         TM    HEWLCRBB+24,X'80'   IS THERE AN UNCHECKED READ           32110021
         BC    1,LIBOPA                NO                               32210021
         OI    HEWLCRBB+24,X'88'   YES-INDICATE IGNORE EOF OR ERR       32310021
         L     1,HEWLCRBB          ADDRESS OF SYSLIB DECB               32410021
         LA    13,REGSA                ADDRESS OF SAVE AREA             32510021
         CHECK (1)                                                      32610021
         NI    HEWLCRBB+24,X'F7'   TURN OFF IGNORE BIT                  32710021
LIBOPA   TM    IND3,X'80'              IS PHYSICAL SEQUENTIAL ON        32810021
         BC    1,INCLU320   GO TO CLOSE                                 32910021
         CLC   0(8,8),LIBOPEN        COMPARE NEW DDNAME TO DDNAME OPEN  33010021
         BC   8,INCLU455   BR. IF EQUAL                                 33110021
INCLU320 LA    13,REGSA                ADDRESS OF SAVE AR%A             33210021
         CLOSE ((07))                                                   33310021
         NI   APT3,X'FE'   TURN 'SYSLIB OPENED' TO OFF                  33410021
INCLU350 MVC   0(SPLDCBLG,07),SPLEDCBP   LAY FRESH COPY OF AN           33510021
*                                            UNOPENED PO DCB (THIS      33610021
*                                  ZEROES WHAT NEED TO BE 0 BEFORE OPEN 33710021
         TM    IND3,X'80'           IS 'PHYSICAL SEQUENTIAL' ON         33810021
         BC    8,INCLU450           NO                                  33910021
INCLU400 MVI   DCBDSORG,X'40'       MAKE THE DCB TO BE A PHYS.SEQ. ONE  34010021
         MVC   DCBSYNAD+1(3),SYNADAD+1  MOVE IN SYNAD FOR BSAM          34110021
         NI    DCBMACR,FF-DCBMRPT1      TURN OFF POINT BIT IN   YM4650  34160002
*                                       MACRF FIELD             YM4650  34170002
INCLU450 MVC   DCBDDNAM(8),0(8)     SLOT NEWDDNAME INTO FIELD OF DCB    34210021
         MVC   LIBOPEN(8),0(8)         SAVE DDNAME                      34310021
         LA    13,REGSA        ADDR OF REG SAVE AREA FOR SYSTEM MACRO   34410021
         OPEN  ((07))                                                   34510021
         TM   DCBOFLGS,X'10'  IS OPEN FLG 'ON' IN SYSLIB DCB            34610021
         BC   1,INCLU453     YES                                        34710021
         LR    1,8            DDNAME ADDR.                              34810021
         LH    0,IEW0432      ERROR.  OPEN FAILED ON SPECIFIED LIBRARY  34910037
         L     15,ERDIG                                                 35010021
         BALR  14,15                                                    35110021
         NI    APT3,X'FE'   SET 'SYSLIB NOT OPENED'                     35210021
         OI   IND3,X'40'    SET 'LIBOP FAILURE'                         35310021
         BC   15,INCLU610   TO EXIT OF LIBOP                            35410021
INCLU453 OI   APT3,X'01'   SET 'SYSLIB OPENED'                          35510021
INCLU455 MVC  TEMP1(1),DCBRECFM                                         35610021
         NI    TEMP1,X'C0'    SAVE ONLY F OR U INDICATORS               35710021
         CLI   TEMP1,X'C0'    IS IT A  U FORMAT                         35810021
         BC    8,INCLU500      YES                                      35910021
         CLI   TEMP1,X'80'   IS IT A 'F' FORMAT                         36010021
         BC    8,INCLU460    YES                                        36110021
         LH    0,IEW0522  ERROR CODE INTO 0                             36210037
         LR    1,8                                                      36310021
         L     15,ERDIG                                                 36410021
         BALR  14,15                                                    36510021
         OI    IND3,X'40'    SET FAILURE BIT 'ON'                       36610021
         BC    15,INCLU610      EXIT OF LIBOP                           36710021
INCLU460 NI    APT1,X'DF'              RESET LOAD MOD BIT TO ZERO       36810021
         MVI   HEWLCRBB+19,X'01'   INDICATE TO PRIME BUFFERS            36910021
         OI    HEWLCRBB+24,X'80'                                        37010021
         TM    HEWLCRBB+24,X'04'   WAS BLOCK SIZE OK                    37110021
         BC    8,INCLU550              YES                              37210021
         LH    0,IEW0532               NO--GIVE ERROR MESSAGE           37310037
         BC    15,INCLU510                                              37390037
INCLU500 TM    IND3,X'80'  DOES CONTROL CARD ANNOUNCES PHYS.SEQ.        37470037
         BC    8,INCLU520     NO                                        37550037
         LH    0,IEW0512  ERR CODE,SEVERITY,DISPOSITION,INTO 1          37630037
INCLU510 LR    1,8      ADDR OF DDNAME INTO 1                           37710037
         L     15,ERDIG                                                 37790037
         BALR  14,15    BR TO ERR ROUTINE                               37870037
        CLOSE  ((7))    CLOSE D/S AFTER ERROR                  @ZA07584 37950037
         NI    APT3,X'FE'   TURN 'SYSLIB OPENED' TO OFF        @ZA07584 38030037
         OI    IND3,X'40'   SET LIBOP FAILURE                           38110021
         BC    15,INCLU610   TO EXIT OF LIBOP                           38210021
INCLU520 OI    APT1,X'20'  SET BIT 'LOAD MODULE'TO ONE                  38310021
INCLU550 EQU   *                                                        38410021
INCLU600 TM    IND3,X'80'         IS THE DATA SET PHYSICAL SEQUENTIAL   38510021
         BC    1,INCLU610         YES                                   38610021
         TM    IND3,X'10'              IS SINGLE BLDL MODE ON           38710021
         BC    8,INCLU610              NO--RETURN                       38810021
         LA    13,REGSA        ADDR OF REG SAVE AREA FOR SYSTEM MACRO   38910021
        BLDL  (7),BLDLDES1                                              39010021
         XI    *+1,X'FF'        ***DEBUG TOKEN ***                      39110021
         LTR   15,15              TEST RETURN CODE IN 15                39210021
         BC    7,INCLU615         BR.IF MODULE SEARCH NOT SUCCESSFUL    39310021
INCLU602 NI    IND3,X'BF'              RESET MODULE NOT FOUND BIT       39410021
         TM    APT1,X'20'                                               39510021
         BC    8,INCLU605                                               39610021
         TM    BLDLATT2,X'01'      IS INC MODULE REFRESHABLE            39710021
         BC    8,INCNREFR           NO                                  39810021
INCLU601 TM    APT1,X'20'          IS COMING MODULE A LOAD MODULE       39910021
         BC    8,INCLU605   NO                                          40010021
*            LOGIC  FOR  THE OUTPUT DIRECTORY                           40110021
         OI    BLDLATT1,X'3F'                                           40210021
         NC    PDSE7(1),BLDLATT1                                        40310021
         TM    BLDLATT2,X'08'   IS MODULE NOT EDIT ABLE                 40410021
         BC    8,INCLU605                                               40510021
INCLERNE LH    0,IEW0272  ERR CODE IN REG 0                             40610037
         LA    13,BLDLMBRN    ADDR. OF MBER NAME INTO 13                40710021
         BC    15,INCLU510    TO ERROR AND LIBOP FAILURE EXIT           40810021
INCNREFR NI    PDSE8,X'FE'         IF INC MODULE IS NOT REFRESHABLE     40910021
*                         THEN ENTIRE LOAD MODULE WILL NOT BE.        * 41010021
         B     INCLU601                                                 41110021
INCLU605 LA    13,REGSA       ADDR OF REG SAVE AREA FOR SYSTEM MACRO    41210021
         FIND  (7),BLDLTTR1,C                                           41310021
INCLU610 L     14,SAV14L1                                               41410021
         BCR   15,14             RETURN FROM THIS SUBROUTINE LIBOP      41510021
*                                                                       41610021
*****                                                                   41710021
INCLU615 OI    IND3,X'40'     SET 'MODULE NOT FOUND' BIT TO 1           41810021
         TM    IND3,X'20'    IS THIS AUTO LIB                           41910021
         BC    7,INCLU610       YES, TO EXIT OF LIBOP                   42010021
         LH    0,IEW0342                                                42110037
         LR    1,8                 DDNAME   ADDR                        42210021
         LA   13,BLDLMBRN      MEMBER NAME ADDR.                        42310021
         L     15,ERDIG                                                 42410021
         BALR  14,15                                                    42510021
         ST    10,SAVE10               SAVE CONTENTS OF REG 10          42610021
         L     10,RCCB                 ADDR OF CHNG/REPL CHAIN          42710021
         LTR   10,10                   DOES IT CONTAIN ZEROS?           42810021
         BZ    INCLU620                YES - BRANCH                     42910021
         LR    10,12                   SAVE BASE IN REG 10              43010021
         LA    13,REGSA                ADDR OF SAVE AREA                43110021
         L     15,ENDADDR              ADDR OF HEWLFEND                 43210021
         BALR  14,15                   GO TO DELETE CHNG/REPL           43310021
*                                      CHAIN FROM THE CESD              43410021
         LR    12,10                   RESTORE BASE REG                 43510021
INCLU620 L     10,SAVE10               RESTORE REG 10                   43610021
         BC    15,INCLU610    TOWARD RETURN FROM LIBOP                  43710021
         ENTRY HEWLCAUT                                                 43810021
         CNOP  0,4                                                      43910021
HEWLCAUT S    15,16(15)      SET 15 AT ADDRESS VALUE OF HEWLCINC        44010021
         ST    12,8(15)      PASS VALUE OF REG. 12                      44110021
          LA    12,14(15)   PUT IN 12 THE ADDRESS CORRESP. TO THE       44210021
*                      UNIQUE 'USING' STATEMENT OF THIS CSECT           44310021
         BC    15,*+8                                                   44410021
         DC    A(HEWLCAUT-HEWLFINC)                                     44510021
         STM   13,11,SAVAREA                                            44610021
         L     07,SYSLIBAD   ADDR OF LIBRARY DCB                        44710021
         OI    IND3,X'20'    SET 'AUTO LIB '  ON                        44810021
         TM    IND3,X'08'              WAS BLDL DONE ON LIST            44910021
         BC    1,GETNEXT1              YES--GO GET NEXT MODULE          45010021
         NI   IND3,X'7F'     SET PHYSICAL SEQUENTIAL TO 0               45110021
AUTOCL1  L     4,CHESD                                                  45210021
         LH    3,ENCDC             INITIALIZE COUNT FOR CESD SCAN       45310021
         LTR   3,3                                                      45410021
         BC    8,INCLU710              BRANCH IF NOTHING IN CESD        45510021
         TM    APT0,X'01'              WAS A LIBRARY CARD READ          45610021
          BC    8,INCLU670   NO                                         45710021
*                                                                       45810021
*                                                                       45910021
*   ESD SCANNING TO FIND DDNAMES WITH POINTER                           46010021
*                                                                       46110021
*                                                                       46210021
*                                                                       46310021
INCLU630 LA    4,16(4)                                                  46410021
         MVC   TEMP1(1),8(4)    TAKE TYPE FIELD OF THIS LINE            46510021
         NI    TEMP1,X'0F'      CLEAR INFORMATION OTHER THAN TYPE       46610021
         CLI   TEMP1,X'02'      IS TYPE  ER                             46710021
         BC    7,INCLU660       BR.IF NOT                               46810021
         CLI   13(4),X'B0'     IS SUBTYPE DDNAME                        46910021
         BC    7,INCLU660       BR.IF NOT                               47010021
         LH    15,14(4)         LOAD THE 2 BYTE PTER TO LIB.MBER        47110021
         LTR   15,15            IS IT NULL                              47210021
         BC    8,INCLU640       BR IF YES   GO TO NULLIFY THIS DDNAMLIN 47310021
INCLU635 SLL   15,4             MULTIPLY  THE PTER BY 16                47410021
         A     15,CHESD            ADD ADDR. OF CESD MINUS 16           47510021
         MVC   TBPTRSAV(2),14(15)  SAV.PTR.FOUND IN LINE JUST REACHED   47610021
         CLI   13(15),X'03'        IS THIS A MATCHED LIBR.MBR.          47710021
         BC    7,INCLU650      BR. IF NOT                               47810021
         TM    9(15),X'80'   HAS A BLDL ALREADY BEEN DONE ON THIS       47910021
*                                  MEMBER                               48010021
         BC    1,INCLU650          BR. IF YES                           48110021
         OI    9(15),X'80'   SET BIT 'BLDL ALREADY ATTEMPTED'           48210021
         LR    8,4    PTER TO DDNAME IN 8 FOR LIBOP SUBROUTINE          48310021
         ST    8,SAVAD                 SAVE DDNAME ADDRESS              48410021
         LR    9,15                    ADDRESS OF MEMBER NAME INTO 9    48510021
         BAL   14,INCLU170             GO PUT NAME IN LIST              48610021
         B     INCLU650                GO CHECK FOR END OF CESD         48710021
INCLU640 MVI   8(4),X'07'          MAKE TYPE'NULL'                      48810021
         XC    0(8,4),0(4)         MAKE SYMBOL BINARY ZEROS             48910021
         MVC   12(4,4),FLCD        STICK THIS LINE TO HOLES CHAIN       49010021
         ST    4,FLCD              UPDATE HOLES CHAIN BEGIN ADDR        49110021
         BC    15,INCLU660                                              49210021
INCLU650 LH    15,TBPTRSAV         IS THE SAVED TWO BYTES PTER =0       49310021
         LTR   15,15                                                    49410021
         BC    7,INCLU635          BR. IF NOT                           49510021
         CLI   NUMENT+1,X'00'          ANY ITEMS LEFT IN BLDL LIST      49610021
         BC    7,INCLU186              YES--GO PURGE THEM               49710021
INCLU660 BCT   3,INCLU630              LOOP TO TAKE NXT CESD LNE        49810021
* (THIS LINE WAS NOT PROPERLY CHANGED TO FIX A21451 FOR RELEASE 18)     49910021
*                                                                       50010021
*                                                                       50110021
* ESD SCANNING TO FIND PURE ER'S                                        50210021
*                                                                       50310021
*                                                                       50410021
INCLU670 L     4,CHESD             INITIATE SCAN FOR ...                50510021
         LH    3,ENCDC             STANDARD(SYSLIB) LIBRARY CALLS       50610021
         LA    8,LIBNAME           FIX SYSLIB AS NEW DDNAME             50710021
         ST    8,SAVAD                 SAVE DDNAME ADDRESS              50810021
INCLU680 LA    4,16(4)             SCAN CESD                            50910021
         MVC   TEMP1(1),8(4)       TAKE TYPE FIELD FROM THIS LINE       51010021
         NI    TEMP1,X'0F'         CLEAR INFORMATION OTHER THAN TYPE    51110021
         CLI   TEMP1,X'02'         IS TYPE ER                           51210021
         BC    7,INCLU700      BR. IF NOT                               51310021
         CLI   13(4),X'00'         IS SUBTYPE NULL (ONLY ONE TO BE CALL 51410021
*                                  FROM SYSLIB)                         51510021
         BC    7,INCLU690          BR.IF NOT                            51610021
         TM    9(4),X'80'         A BLDL PREVIOUSLY ATTEMPTD FOR MBER ? 51710021
         BC    1,INCLU700           BR.IF YES                           51810021
         MVI   9(4),X'80'           INDIC BLDL ISSUED           ZA01413 51910037
         LR    9,4                     ADDRESS OF MEMBER NAME INTO 9    52010021
         BAL   14,INCLU170             GO PUT NAME IN LIST              52110021
         BC    15,INCLU700             GO CHECK FOR END OD LIST         52210021
INCLU690 CLI   13(4),X'90'          IS SUBTYPE 'CONTROL OVERLAY'        52310021
         BC    7,INCLU700           BR.IF NOT                           52410021
         MVI  8(4),X'07'   NULLIFY THE LINE                             52510021
*TO ZEROE THE SYMBOL WOULD TAKE ME TIME. THE SYMB HAS FEW CHANCE TO BE  52610021
* MATCHED BY ESD PROC. IF IT IS,NULL TYPE WILL LEAD TO NO CONFUSION     52710021
         MVC   12(4,4),FLCD        STICK THIS LINE TO THE HOLE CHAIN    52810021
         ST    4,FLCD              UPDATE FLCD                          52910021
INCLU700 BCT   3,INCLU680          TAKE NXT ELT.OF THE CESD             53010021
         CLI   NUMENT+1,X'00'          ANY ITEMS LEFT IN BLDL LIST      53110021
         BC    7,INCLU186              YES--GO PURGE THEM               53210021
INCLU710 LA    6,HEWLCRBN                                               53310021
         ST    6,HEWLCLAC                                               53410021
* THE SYSLIN READ BLOCK                                                 53510021
         L     15,RATADD               GO TO TXT/RLD FOR PURGE          53610021
         OI    NEWSW,X'01'             INDICATE PURGE TO TXT/RLD        53710021
         BALR  14,15                                                    53810021
         USING *,15                    RETURNS ON 15                    53910021
         L     15,ADRASSEY                                              54010021
         DROP  15                                                       54110021
         BCR   15,15               GO TO  ADDRESS ASSIGNMENT            54210021
         DS    0F                                                       54310021
SAVAREA  DC    16F'0'                                                   54410021
SAV14L1  DC    F'0'                                                     54510021
SAVE10   DC    F'0'                                                     54610021
         EXTRN HEWLFLDB                                                 54710021
        EXTRN HEWLCADA                                                  54810021
         EXTRN APTEXLST                                                 54910021
INPUTPRA DC    V(HEWLFINP)                                              55010021
ENDADDR  DC    V(HEWLFEND)                                              55110021
SYSLIBAD DC    A(HEWLFLDB)                                              55210021
******** ERROR MSG **************************************************** 55310037
IEW0432  DC    AL2(IEW0432X)                                            55380037
IEW0342  DC    AL2(IEW0342X)                                            55450037
IEW0532  DC    AL2(IEW0532X)                                            55520037
IEW0512  DC    AL2(IEW0512X)                                            55590037
IEW0522  DC    AL2(IEW0522X)                                            55660037
IEW0272  DC    AL2(IEW0272X)                                            55730037
*********************************************************************** 55800037
FOURTEEN DC    X'000E'                                                  55910021
TBPTRSAV DC    X'0000'                                                  56010021
TEMP1    DC    X'00'                                                    56110021
IND3     DC    X'00'                   SWITCHES                         56210021
*              X'80'  PHYSICAL SEQUENTIAL                               56310021
*              X'40'  MODULE NOT FOUND                                  56410021
*              X'20'  AUTOLIB IN OPERATION                              56510021
*              X'10'  SINGLE BLDL IN OPERATION                          56610021
*              X'08'  BLDL DONE ON LIST                                 56710021
*              X'04'  BLDL LIST FULL                                    56810021
*  SAMPLE DCB FOR A PARTIONED ORGANIZATION TO BE READ                   56880037
         TITLE 'HEWLFINC INCLUDE DCB'                                   56950037
         DC    C'INCLUDE DCB'                                           57020037
         DC    0F'0'                                                    57090037
SPLEDCBP DCB   DSORG=PO,MACRF=(R),EODAD=HEWLCEOD,SYNAD=HEWLCRO2,       X57160037
               EXLST=APTEXLST,NCP=1                   @ZA02657,@ZA12241 57230037
DCBPNDM1 EQU   *                                                        57300037
SPLDCBLG EQU   DCBPNDM1-SPLEDCBP       LENGTH OF DCB                    57370037
         EXTRN HEWLCRO2                                                 57440037
SYNADAD  DC    A(HEWLCRO1)                                              57510021
ADRASSEY DC    V(HEWLFADA)             ADDRESS OF ADDRESS ASSIGNMENT    57610021
RATADD   DC    V(HEWLFRAT)             ADDRESS OF TXT/RLD PROCESSOR     57710021
NUMENT   DC    H'00'                   NUMBER OF ENTRIES IN LIST        57810021
ENTSIZ   DC    H'26'                                                    57910021
BLDLLST  DC    260C' '                                                  58010021
MAXENTRY DC    H'10'                   MAXINUM NUMBER OF ENTRIES        58110021
APPEND   DS    20C                                                      58210021
SAVAD    DS    1F                                                       58310021
TABLSTRT DC    A(BLDLLST)                                               58410021
PTRSAV   DC    H'0'                    SAVE POINTER TO DDNAME           58510021
CURINCNO DC    X'00'                   CURRENT ITEM BEING READ          58610021
         DS    0H                                                       58710021
BLDLDES1 DC    X'0001' 1ST BYTE OF LIST DESCRIPTION FIELD (NO OF ENTR.) 58810021
BLDLDES2 DC    X'0036' 2ND BYTE OF LIST DESCRIPTION FIELD (LGTH OFEACH) 58910021
SINGBLDL DC    26C' '                                                   59010021
*********************************************************************** 59110037
*        PATCH AREA                                                   * 59130037
*********************************************************************** 59150037
PATCH    DC    50F'0',C'PATCH AREA'    TEMPORARY PATCH AREA             59170037
DUMMY    DSECT                                                          59210021
BLDLMBRN DC    XL8'00'   MEMBER NAME                                    59310021
BLDLTTR1 DC    XL4'00'   TTR OF FIRST RECORD OF PDS & CONCAT.NO.        59410021
BLDLZEUS DC    XL2'00'   ZERO BYTE (JOB/LINK LIB.IND.) AND USER DESCR.  59510021
BLDLTTR2 DC    XL4'00'   TTR OF FIRST TEXT RECORD AND ZERO              59610021
BLDLTTR3 DC    XL3'00'   TTR OF NOTE LIST OR SCAT.TRANS.TBL.            59710021
BLDLN0NL DC    XL1'00'   NO OF ENTRIES IN NOTE LIST (OR ZERO)           59810021
BLDLATT1 DC    XL1'00'   FIRST BYTE OF ATTRIBUTES                       59910021
*                      BIT 0   , X'80'    REENTERABLE                   60010021
*                      BIT 1   , X'40'    REUSABLE                      60110021
*                      BIT 2   , X'20'    OVERLAY                       60210021
*                      BIT 3   , X'10'    IN TEST                       60310021
*                      BIT 4   , X'08'    ONLY LOADABLE                 60410021
*                      BIT 5   , X'04'    BLOCK-SCATTER (BLOCK=0)       60510021
*                      BIT 6   , X'02'    EXECUTABLE                    60610021
*                      BIT 7   , X'01'    MOD.CONTAINS 1 TXT RCD,NO RLD 60710021
BLDLATT2 DC    XL1'00'   SECOND BYTE OF ATTRIBUTES                      60810021
*                      BIT 0   , X'80'   NO DOWNWARD COMPATIBILITY IF=1 60910021
*                      BIT 1   , X'40'   ORIGIN OF 1ST TXT RCD IS ZERO  61010021
*                      BIT 2   , X'20'   LINK.EDIT.ASSIGND ENTR.PT.=0   61110021
*                      BIT 3   , X'10'   MOD.CONTAINS RLD ITEMS         61210021
*                      BIT 4   , X'08'   MOD.CAN BE REPROCESSED BY LKED 61310021
*                      BIT 5   , X'04'   MOD.DOES'NT CONTAIN SYM CARDS  61410021
BLDLE9   DC   XL3'00' TOTAL MAIN STORAGE REQUIREMENT OF THIS MODULE     61510021
BLDLE10  DC   XL2'00' LENGTH OF FIRST TXT RECORD                        61610021
BLDLE11  DC   XL3'00' ENTRY POINT ADDRESS                               61710021
BLDLE12  DC   XL3'00' ORIGIN OF FIRST TXT RECORD                        61810021
*                                                                       61910021
BLDLE13  DC    XL2'00'      NO. OF BYTES IN SCATTER LIST                62010021
BLDLE14  DC    XL2'00'      NO. OF BYTES IN THE TRANSLATION TBLE        62110021
BLDLE15  DC    XL2'00'      ESDID OF THE 1ST TXT RCD                    62210021
BLDLE16  DC    XL2'00'      ESDID OF THE CONTR.SECT.CONTAINING ENTRY PT 62310021
*                                                                       62410021
BLDLE17  DC    XL3'00'      ENTRY PT OF MAIN MBER NAME                  62510021
BLDLE18  DC    XL8'00'      MEMBER NAME OF MODULE                       62610021
         TITLE 'HEWLFINC APT'                                           62710037
         DC    0F'0'                                                    65710037
         HEWAPT                                                         68710037
         DCBD DSORG=(PS,PO)                                             71710037
         END                                                            74710037
./  ADD  SSI=62730940,NAME=HEWLFINP
HEWLFINP CSECT                                                          00050021
*                                                                       00052021
*174500-176500,209500-211500,429500-434500,551500-552500         S21016 00060021
*647500-670500,758500-760500                                     S21016 00062021
*694500-695500,712500-718500                                     S01904 00064021
*A653500                                                          M4123 00072021
*D680500-681500                                                   M4319 00074021
*A717500                                                          M4320 00076021
*A208500,A301500                                                 A51444 00078000
*C201500                     OY00131                                    00078403
*I532500,C533500,I746500                                OX04563,OY03738 00078802
* D703500                                                       ZA01413 00079237
* C209300                                                      @ZA02229 00079637
* A31051021 THRU 3152021                                       @ZA07586 00109637
         TITLE '  HEWLFINP INPUT PROCESSOR '                            00150021
HEWLCINP EQU   *                                                        00250021
*FUNCTION/OPERATION: THIS MODULE READS ALL INPUT TO LINK EDITOR. THIS * 00350021
*      CONSISTS OF OBJECT MODULES(CARDS),LOAD MODULES(LINK EDITOR     * 00450021
*      OUTPUT) AND CONTROL CARDS. IT DETERMINES WHICH PROCESSOR       * 00550021
*      MUST BE SELECTED TO PROCESS THE RECORD AND SELECTS IT. IT      * 00650021
*      PERFORMS ALL THE SET UP REQUIRED TO PROCESS THE PARTICULAR     * 00750021
*      REORD. IT ALSO SAVES DELINK TABLE VALUES FOR THE RLD AND ESD   * 00850021
*      PROCESSORS. IF AUTOMATIC LIBRARY CALL IS REQUIRED OR INCLUDE   * 00950021
*      CARDS HAVE BEEN READ, THE APPROPRIATE PROCESSOR IS SELECTED.   * 01050021
*ENTRY POINTS  HEWLFINP-BEGINNING OF CSECT ENTERED BY INITIALIZER     * 01150021
*               HEWLCINP- BEGINNING OF CSECT,ENTERED BY COMMON ROUT-  * 01250021
*                         INES                                        * 01350021
*               HEWLCDLK- DELINK TABLE ROUTINE,ENTERED BY ESD AND RLD * 01450021
*              HEWLFMDI-MODULE INPUT- ENTERED BY INPUT CONTROL        * 01550021
*               HEWLERDM- READ ROUTINE-USED BY HEWLEMDI               * 01650021
*               HEWLCEOD- END OF DATA ENTRY FOR LIBRARY DCB- ALSO     * 01750021
*                         ENTERED FROM HEWLEMDI WHEN END OF MODULE    * 01850021
*                         RECORD IS READ FROM LOAD MODULE             * 01950021
*               HEWLEEON- END OF DATA ENTRY FOR SYSLIN DCB            * 02050021
*                ALL ROUTINES ENTERED BY BCR 15,15 EXCEPT             * 02150021
*                    HEWLCDLK -BALR 14,15                             * 02250021
*                    HEWLERDM -BALR  7,15                             * 02350021
*INPUT:  80 COLUMN CARDS - OBJECT MODULES- F FORMAT                   * 02450021
*           COLUMN 1 - 12-9-2 PUNCH                                   * 02550021
*           COLUMN 2 THRU 4 = TYPE (ESD,TXT,RLD,END,SYM)              * 02650021
*              ESD  COLUMNS- 11-12 BYTE COUNT                         * 02750021
*                            15-16 ID OF FIRST ESD ITEM               * 02850021
*                            17-66 ESD ITEMS (3)                      * 02950021
*                                                                     * 03050021
*              TXT  COLUMNS- 6-7-8 24 BIT ASSEMBLED ADDRESS OF TXT    * 03150021
*                            11-12 NUMBER OF BYTES OF TXT ON CARD     * 03250021
*                            15-16 ESDID OF CSECT CONTAINING TXT      * 03350021
*                            17-72 TXT INFORMATION                    * 03450021
*                                                                     * 03550021
*              RLD  COLUMNS- 11-12 NUMBER OF BYTES OF RLD ON CARD     * 03650021
*                            17-72 RLD ITEMS                          * 03750021
*                                                                     * 03850021
*              END  COLUMNS- 6-7-8 OPTIONAL 24 BIT ASSM. ADD. OF      * 03950021
*                                  ENTRY POINT                        * 04050021
*                            15-16 ID OF ASSM. ADD. ENTRY POINT       * 04150021
*                            17-24 SYMBOL OF EXTERNAL SYMBOL ENTRY    * 04250021
*                            29-32 LENGTH OF CONTROL SECTION WHICH    * 04350021
*                                  WAS NOT SPECIFIED ON ESD CARD      * 04450021
*                                                                     * 04550021
*              SYM  COLUMNS- 11-12 NUMBER OF BYTES OF TESTRAN INFO.   * 04650021
*                                  ON CARD                            * 04750021
*                            17-72 TESTRAN INFORMATION                * 04850021
*                                                                     * 04950021
*                                                                     * 05050021
*        U RECORDS-LOAD MODULES                                       * 05150021
*             TXT RECORDS - RECORDS WHOSE MAXIMUM LENGTH IS TXTBSIZE *  05250021
*                            BYTES. THEY ARE PRECEEDED BY CCW RECORDS * 05350021
*              CCW RECORD- BYTE-0 - IDENTIFICATION BYTE = X'01'       * 05450021
*                              -1-3 NOT USED                          * 05550021
*                              -4-5 NO. OF BYTES OF ID/LENGTH         * 05650021
*                              -6-7 NO. OF BYTES OF RLD INFORMATION   * 05750021
*                              -8   NOT USED(READ COMMAND)            * 05850021
*                              -9-11 LINKED ADDRESS OF TXT RECORD     * 05950021
*                              -12   FLAGS                            * 06050021
*                              -13  NOT USED                          * 06150021
*                              -14-15 COUNT OF TXT RECORD WHICH       * 06250021
*                                     FOLLOWS                         * 06350021
*                                                                     * 06450021
*              IF THE RECORD CONTAINS RLD INFORMATION, THE RLD ITEMS  * 06550021
*              FOLLOW AND THE IDENTIFICATION BYTE CONTAINS A X'02'    * 06650021
*              (BIT 6 IS SET) , E.G. CCW AND RLD IS X'03'.            * 06750021
*              FOLLOWING THE RLD INFORMATION, IS A 4 BYTE FIELD.      * 06850021
*              BYTES 0-1 ARE THE ID OF THE FOLLOWING TXT RECORD, BYTES* 06950021
*              2-3 ARE THE LENGTH OF THE FOLLOWING TXT RECORD.        * 07050021
*              IN ADDITION TO RLD INFORMATION THE IDENTIFICATION      * 07150021
*              BYTE MAY HAVE BITS 4 AND 5 SET ON. BIT 4 INDICATES     * 07250021
*              END OF MODULE, BIT 5 INDICATES END OF SEGMENT. THESE   * 07350021
*              BITS MAY BE SET IN ANY COMBINATION WITH CCW AND RLD,   * 07450021
*              OR THEY MAY BE SET ALONE.                              * 07550021
*              FOR ALL THE ABOVE MENTIONED RECORDS THE FORMAT IS THE  * 07650021
*              SAME.                                                  * 07750021
*              SYM RECORD- BYTE-0 - IDENTIFICATION BYTE= X'40'        * 07850021
*                              -1 -  EITHER (1XXXXXXX)- MEANING THE   * 07950021
*                                   RECORD CONTAINS ESD ITEMS NOT IN  * 08050021
*                                   TEST FORM,OR (0XXXXXXX)- MEANING  * 08150021
*                                   THE OPPOSITE                      * 08250021
*                              -2-3 NUMBER OF BYTES OF TESTRAN DATA   * 08350021
*                              -4-243 - TESTRAN DATA                  * 08450021
*                                                                     * 08550021
*              CESD RECORD- BYTE-0 - IDENTIFICATION BYTE= X'20'       * 08650021
*                               -1-3 - NOT USED                       * 08750021
*                               -4-5 - ESDID OF FIRST ESD ITEM        * 08850021
*                               -6-7 - NO. OF BYTES OF CESD INFO.     * 08950021
*                               -8-247 - CESD DATA                    * 09050021
*              SCATTER/TRANSLATION RECORD                             * 09150021
*                           BYTE-0 - IDENTIFICATION BYTE= X'10'       * 09250021
*                                1 - NOT USED                         * 09350021
*                                2-3 NUMBER OF BYTES OF SCATTER/      * 09450021
*                                    TRANSLATION INFO FOLLOWING       * 09550021
*                                4-1023 - DATA                        * 09650021
*                                                                     * 09750021
*        CONTROL CARDS- THEY ARE 80 COLUMN CARDS FOUND ONLY IN OBJECT * 09850021
*                       MODULES. THEIR GENERAL FORMAT FOLLOWS(THEY    * 09950021
*                       ARE FREE FORM.                                * 10050021
*                        COLUMN 1 CONTAINS A BLANK                    * 10150021
*                        THE OPERATOR NOW FOLLOWS, FOLLOWED BY AT     * 10250021
*                        LEAST ONE BLANK, FOLLOWED BY THE OPERAND.    * 10350021
*OUTPUT: N/A                                                          * 10450021
*                                                                     * 10550021
*EXTERNAL ROUTINES  HEWLFESD- ESD PROCESSOR                           * 10650021
*                   HEWLFEND- END PROCESSOR                           * 10750021
*                   HEWLFSCN- CONTROL CARD PROCESSOR                  * 10850021
*                   HEWLFSYM- SYM PROCESSOR                           * 10950021
*                   HEWLFRAT- RLD AND TXT PROCESSOR                   * 11050021
*                   HEWLFINC- INCLUDE PROCESSOR                       * 11150021
*                   HEWLCAUT- AUTOMATIC LIBRARY CALL PROCESSOR        * 11250021
*                                                                     * 11350021
*EXITS NORMAL  HEWLFADA- ADDRESS ASSIGNMENTS-AT NAME CARD OR END OF   * 11450021
*                         DATA ON SYSLIN IF NCALL OPTION IS SPECIFIED * 11550021
*                         AND DATA IS PRESENT                         * 11650021
*              HEWLFFNL- FINAL PROCESSOR. AT END OF DATA ON SYSLIN    * 11750021
*                         IF NO INPUT HAS BEEN PROCESSED IN THIS      * 11850021
*                         RECURSION                                   * 11950021
*               HEWLCAUT- AUTOMATIC LIBRARY CALL- IF NCALL IS NOT ON  * 12050021
*                         AND DATA HAS BEEN RECEIVED AT END OF DATA   * 12150021
*                         ON SYSLIN (THIS ROUTINE WILL EITHER RETURN  * 12250021
*                         TO THE INPUT PROCESSOR OR BRANCH TO ADDRESS * 12350021
*                         ASSIGNMENT IF ALL LIBRARY CALLS HAVE BEEN   * 12450021
*                         COMPLETED)                                  * 12550021
*EXITS ERROR:  THERE ARE NO ERROR EXITS TO THE SYSTEM. ALL ERRORS     * 12650021
*              ARE RELAYED THROUGH THE ERROR DIAGNOSTIC ROUTINE       * 12750021
*              (HEWLFLOG) WHICH THEN DECIDES WHETHER TO PROCEED OR    * 12850021
*              STOP.                                                  * 12950021
*                    ERRORS:  22-A CONTROL CARD WAS DISCOVED WITHIN   * 13050021
*                                 AN OBJECT MODULE OR AN ILLEGALL     * 13150021
*                                 CARD WAS DISCOVERED WITHIN AN OBJECT* 13250021
*                                 MODULE. SEVERITY = 1 - WARNING      * 13350021
*                             21- A CONTROL CARD CONTINUATION WAS     * 13450021
*                                 EXPECTED BUT NOT RECEIVED.          * 13550021
*                                 SEVERITY = 2 - ERROR                * 13650021
*                             23- UNRECOGNIZABLE LOAD MODULE INPUT    * 13750021
*                                 SEVERITY= 1                         * 13850021
*TABLES/WORK AREAS:  N/A                                              * 13950021
*ATTRIBUTES: REUSABLE                                                 * 14050021
*                                                                     * 14150021
*NOTES: N/A                                                             14250021
         ENTRY  HEWLCINP                                                14350021
         ENTRY HEWLCICA                                                 14450021
*              ENTRY POINT FOR INCLUDE ADDRESS CONSTANT               * 14550021
         ENTRY HEWLCEOD                                                 14650021
*              ENTRY POINT FOR LIBRARY END OF DATA                    * 14750021
         ENTRY HEWLEEON                                                 14850021
*              ENTRY POINT FOR SYSLIN END OF DATA                     * 14950021
         ENTRY HEWLERDM                                                 15050021
*              ENTRY POINT FOR READ MACRO                             * 15150021
BASE     EQU   12                                                       15250021
REG6     EQU   6                                                        15350021
READDATA EQU   320                                                      15450021
APT      EQU   2                                                        15550021
TEMP     EQU   1                                                        15650021
TEMP1    EQU   7                                                        15750021
BUFFER   EQU   10                                                       15850021
AUTOLIB  EQU   X'40'                                                    15950021
BUFFADD  EQU   4                                                        16050021
TAMP     EQU   11                                                       16150021
LOADMOD  EQU   X'20'                                                    16250021
DCBADD   EQU   8                                                        16350021
DCBPNT   EQU   0                                                        16450021
COL1     EQU   0                                                        16550021
SLASH    EQU   C'/'                                                     16650021
EOFON    EQU   X'80'                                                    16750021
EOFOFF   EQU   X'7F'                                                    16850021
BLANK    EQU   X'40'                                                    16950021
INMODON  EQU   X'02'                                                    17050021
COL5     EQU   4                                                        17150021
COL11    EQU   10                                                       17250021
COL15    EQU   14                                                       17350021
COL33    EQU   32                      CARD COLUMN 33 (START OF  S21016 17450021
*                                      IDR DATA FIELD ON OBJECT  S21016 17550021
*                                      MODULE END RECORD)        S21016 17650021
INMODOFF EQU   X'FD'                                                    17750021
ENTRYPT  EQU   X'08'                                                    17850021
ABSOLUTE EQU   X'FB'                                                    17950021
SYMBOLIC EQU   X'04'                                                    18050021
NOLGTH   EQU   X'40'                                                    18150021
COL29    EQU   28                                                       18250021
ESD      EQU   1                                                        18350021
ESDWRITE EQU   X'01'                                                    18450021
TEST     EQU   X'10'                                                    18550021
NAME     EQU   X'40'                                                    18650021
INCLUDE  EQU   X'80'                                                    18750021
NCALL    EQU   X'80'                                                    18850021
ENDINPUT EQU   X'20'                                                    18950021
EXITON   EQU   X'01'    INDICATOR FOR OPEN EXIT TAKEN                   19050021
EXITOFF  EQU   X'FE'      INDICATOR TO TURN OFF EXIT ON INDICATOR       19150021
TEMP2    EQU   0                                                        19250021
SYSRET   EQU   14                                                       19350021
SYSBRNCH EQU   15                                                       19450021
PRECL    EQU   8                                                        19550021
READCNT  EQU   9                                                        19650021
REG3     EQU   3                                                        19750021
REG4     EQU   4                                                        19850021
REG5     EQU   5                                                        19950021
SAVEAREA EQU   13                                                       20050021
RECCNT   EQU   18                                                       20250021
CURBUF   EQU   20                                                       20350021
BLKFAC   EQU   16                                                       20450021
READSW   EQU   24                                                       20550021
LRECL    EQU   14                                                       20650021
BLKSIZ   EQU   12                                                       20750021
****************    EQUATES FOR MESSAGES     ******************         20850037
MSG      EQU   0                                                        20880037
IEW0484  EQU   X'430'                                                   20910037
IEW0234  EQU   X'417'                                  @XA02229,OY00131 20930037
IEW0594  EQU   X'43B'                                                   20950037
IEW0123  EQU   X'030C'                 DISP=0,SEV=3,MSG=12       A51444 20970037
IEW0143  EQU   X'030E'                 DISP=0,SEV=3,MSG=14       A51444 20990037
****************************************************************        21030037
MODTYPE  EQU   X'FC'                   MODULE TYPE INDICATORS    S21016 21060037
*                                      FOR IDR                   S21016 21090037
PARMPTR  EQU   1                       PARAMETER LIST POINTER    S21016 21120037
         EJECT                                                          21150037
         LR    BASE,SYSBRNCH                                            21250021
         USING APTDSECT,APT                                             21350021
         USING HEWLCINP,BASE                                            21450021
*              INCLUDE,AUTOMATIC LIBRARY CALL, AND INITIALIZER ENTER  * 21550021
*              AT HEWLEINP WITH REG 15 CONTAINING THE ADDRESS OF      * 21650021
*              HEWLEINP                                               * 21750021
         B     INP10                                                    21850037
MODID    DC    C' HEWLFINP '                                            21890037
         DC    C' OZ07586 12/03/75 ',0H'0'                              21940037
         SPACE 3                                                        21990037
INP10    L     REG5,HEWLCLAC       ADDRESS OF CURRENT CONTROL BLOCK     22050021
         L     DCBADD,DCBPNT(0,REG5)   ADDRESS OF DECB                  22150021
         LA    TEMP1,HEWLFMDI           RETURN ADDRESS                  22250021
         TM    APT1,LOADMOD        IS THIS A LOAD MODULE                22350021
         BC    1,INP11                 YES                              22450021
         LH    REG6,RECCNT(0,REG5)     NO--GET CURRENT RECORD NUMBER    22550021
         BCT   REG6,INP10C             BRANCH IF RECORDS LEFT IN BUFFR  22650021
         LH    READCNT,BLKSIZ(0,REG5)  NONE LEFT. USE BLKSIZ FOR RD CNT 22750021
INP10A   L     BUFFER,BUFFADD(0,REG5)  SWITCH BUFFER ADDRESSES          22850021
         MVC   BUFFADD(4,REG5),BUFFADD+4(REG5)                          22950021
         ST    BUFFER,BUFFADD+4(0,REG5)                                 23050021
         LA    SAVEAREA,REGSA      ADDRESS OF SAVE AREA                 23150021
         LR    REG6,BASE               WILL USE REG6 FOR BASE REG       23250021
         TM    READSW(REG5),X'80'      IS THIS FIRST READ               23350021
         BC    1,INP10B                YES--DONT CHECK                  23450021
         TM    READSW(REG5),X'02'  HAS PVS READ ALREADY BEEN CHECKED    23550021
         BC    1,INP11B            YES--DON'T RECHECK                   23650021
         MVC   RECCNT(2,REG5),BLKFAC(REG5)  INITIALIZE RECCORD COUNT    23750021
         USING HEWLCINP,REG6                                            23850021
         DROP  BASE                                                     23950021
INP11A   CHECK (8)                                                      24050021
         TM    APT1,LOADMOD        IS THIS A LOAD MODULE                24150021
         BCR   1,TEMP1                 YES--READ IS FINISHED            24250021
INP11B   NI    READSW(REG5),X'FD'  TURN OFF ALREADY CHECKED SWITCH      24350021
         TM    READSW(REG5),X'04'      CHECK FOR INVALID BLOCKSIZE      24450021
         BC    8,INP10B                NO                               24550021
         LA    MSG,IEW0594             YES--ERR MSG 594                 24650037
         L     SYSBRNCH,ERDIG      ADDRESS OF ERROR LOGGER              24750021
         BR    SYSBRNCH                SHOULD NOT RETURN                24850021
INP11    LA    READCNT,260             SET UP FOR READING LOAD MODULE   24950021
         L     BUFFER,RLDINPAD     ADDR OF RLD INPUT BUFFER             25050021
         LR    REG6,BASE                                                25150021
HEWLERDM LA    SAVEAREA,REGSA                                           25250021
INP10B   READ  (8),SF,,(BUFFER),(READCNT),MF=E                          25350021
         TM    APT1,LOADMOD        IS THIS A LOAD MODULE                25450021
         BC    1,INP11A                YES--GO CHECK AND RETURN         25550021
         DROP  REG6                                                     25650021
         USING HEWLCINP,BASE                                            25750021
         TM    READSW(REG5),X'80'      WAS THIS FIRST READ              25850021
         BC    8,INP10E                NO                               25950021
         NI    READSW(REG5),X'7D'   YES--TURN OFF FIRST TIME SW         26050021
         BC    15,INP10A               AND READ AGAIN                   26150021
INP10E   L     BUFFER,BUFFADD(0,REG5)  NEW CHECKED BUFFER ADDRESS       26250021
         BC    15,INP10D                                                26350021
INP10C   L     BUFFER,CURBUF(0,REG5)   UPDATE CURRENT BUFFER ADDRESS    26450021
         AH    BUFFER,LRECL(0,REG5)                                     26550021
         STH   REG6,RECCNT(0,REG5)                                      26650021
INP10D   ST    BUFFER,CURBUF(0,REG5)                                    26750021
         BCR   15,TEMP1                CONTINUE                         26850021
INP13    CLI   COL1(BUFFER),BLANK                                       26950021
*              IF INPUT IS NOT CONTROL CARD - BRANCH                    27050021
         BC    7,INP20A                 ERROR--B AD CARD                27150021
         TM    APT2,INMODON        IS IN MODULE BIT ON                  27250021
         BC    1,INP18                  ERROR-CONTROL CRD IN MODULE     27350021
         L     SYSBRNCH,CRDSCN                                          27450021
         OI    APTSWS,X'04'        SET INPUT RECEIVED                   27550021
*              THE CARD SCAN REQUIRES THE CARD BUFFER ADDRESS IN      * 27650021
*              REGISTER ONE                                           * 27750021
         LR    TEMP,BUFFER                                              27850021
         BALR  SYSRET,SYSBRNCH                                          27950021
*              RETURN ADDRESS IS IN REGISTER 14                       * 28050021
         TM    APT3,NAME          TEMPORARY - MAYBE                     28150021
*              IF CONTROL CARD IS NOT NAME CARD,BRANCH                * 28250021
         BC    8,INP10                                                  28350021
         LH    REG6,RECCNT(0,REG5) GET NUMBER RECRDS LEFT IN BUFFER     28450021
         BCT   REG6,INP14          ARE ANY MORE RECORDS LEFT IN BUFFER  28550021
INP14    OI    APT1,AUTOLIB                                             28650021
*              SET AUTOMATIC LIBRARY CALL INDICATOR ON                * 28750021
         BC    15,EODA                                                  28850021
*                                                                     * 28950021
*                   **** END OF DATA ON SYSLIN ****                   * 29050021
*                                                                     * 29150021
*                                                                     * 29250021
HEWLEEON OI    APT1,AUTOLIB                                             29350021
*              SET AUTOMATIC LIBRARY CALL BIT ON                      * 29450021
*              SET END OF INPUT ON                                    * 29550021
         OI    APT3,ENDINPUT                                            29650021
         ST    SYSBRNCH,SAVE602        STORE RETURN ADDRESS             29750021
         BAL   SYSBRNCH,TESTEND        GO TO END CARD TEST              29850021
         L     SYSBRNCH,SAVE602        RESTORE RETURN ADDRESS           29950021
         TM    APTSWS,X'04'            HAS INPUT BEEN RECEIVED          30050021
         BC    1,EODA                                                   30150021
         TM    APTSW2,REINTRY          TEST IF FIRST TIME THRU   A51444 30200000
         BO    INP14A                  BRANCH IF NOT FIRST TIME  A51444 30210000
         LA    MSG,IEW0123             SET UP FOR MESSAGE 12     A51444 30220037
         L     SYSBRNCH,ERDIG          GET ADDR OF ERROR RTN     A51444 30226037
         BALR  SYSRET,SYSBRNCH         GO TO LOG MESSAGE 12      A51444 30232037
         LA    MSG,IEW0143             SET UP FOR MESSAGE 14     A51444 30238037
         L     SYSBRNCH,ERDIG          GET ADDR OF ERROR RTN     A51444 30244000
         BALR  SYSRET,SYSBRNCH         GO TO LOG MESSAGE 14      A51444 30246000
INP14A   EQU   *                       ERROR LOGGING BYPASS      A51444 30248000
         L     SYSBRNCH,FINALPRC                                        30250021
*              IF NO GOOD INPUT WAS RECEIVED- GO TO FINAL PROCESSOR   * 30350021
         BCR   15,SYSBRNCH                                              30450021
*                                                                     * 30550021
*                   **** END OF DATA ON LIBRARY DCB ****              * 30650021
*                                                                     * 30750021
*                                                                     * 30850021
HEWLCEOD TM    HEWLCRBB+24,X'08'       IS IGNORE EOF BIT ON?            30950037
         BCR   1,SYSRET                RETURN TO LIBOP                  31000037
BASESET  BALR  BASE,0                     RE-ESTABLISH BASE    @ZA07586 31050037
         L     BASE,INPADD-BASESET-2(BASE)  TO BEGIN OF INP    @ZA07586 31100037
         TM    APT1,LOADMOD            IS THIS A LOAD MODULE?           31150021
         BC    1,EODA                  YES - NO END CARD TEST           31250021
         ST    SYSBRNCH,SAVE602        STORE RETURN ADD.                31350021
         BAL   SYSBRNCH,TESTEND        GO TO END CARD TEST              31450021
         L     SYSBRNCH,SAVE602        RESTORE RETURN ADD.              31550021
EODA     TM    APT1,INCLUDE                                             31650021
*              IF MORE INCLUDES REQUESTED,GO TO INCLUDE PROCESSOR     * 31750021
         BC    1,INP16                                                  31850021
         NI    APT1,X'DF'                                               31950021
*              CLEAR LOAD MODULE INDICATOR AND                        * 32050021
*              RE-INITIALIZE READ BLOCK                               * 32150021
         LA    TEMP,HEWLCRBN                                            32250021
         ST    TEMP,HEWLCLAC                                            32350021
         TM    APT1,AUTOLIB                                             32450021
*              IF NOT EOF ON SYS(IN(OR EQUIVALENT), CONTINUE          * 32550021
         BC    8,INP10                                                  32650021
         TM    APT0,NCALL                                               32750021
         BC    1,INP15                                                  32850021
*              IF THE NCALL OPTION WAS SELECTED-ADDRESS ASSGN IS NEXT * 32950021
         L     SYSBRNCH,AUTOCALL                                        33050021
         BCR   15,SYSBRNCH                                              33150021
*              AUTOMATIC LIBRARY CALL IS NOW SELECTED                   33250021
INP15    L     SYSBRNCH,RLDADD         GO TO RLD/TXT FOR PURGE          33350021
         OI    NEWSW,X'01'             INDICATE PURGE TO TXT/RLD        33450021
         BALR  SYSRET,SYSBRNCH                                          33550021
         USING *,SYSBRNCH              RETURNS ON 15                    33650021
         L     SYSBRNCH,ADDADDA        ADDRESS OF ADDRESS ASSIGNMENT    33750021
         DROP  SYSBRNCH                                                 33850021
         BCR   15,SYSBRNCH                                              33950021
*              THE BRANCH TO ADDRESS ASSIGNMENT IS ACCOMPLISHED       * 34050021
*              THROUGH THE ROOT SEGMENT-THE ROOT ENTRY POINT IS       * 34150021
*              CALLED-HEWLCADA                                        * 34250021
INP16    L     SYSBRNCH,HEWLCICA                                        34350021
         BCR   15,SYSBRNCH                                              34450021
*              SELECT THE INCLUDE PROCESSOR                           * 34550021
INP18    LH    MSG,IEW0222              CONTROL CARD IN MODULE          34650037
         L     SYSBRNCH,ERDIG                                           34750037
         LA    SYSRET,INP10             RETURN TO READ NEXT CARD        34850037
         BCR   15,SYSBRNCH              BRANCH TO ERROR ROUTINE         34950037
ADDADDA  DC    V(HEWLFADA)                                              35150021
HEWLCICA DC    V(HEWLFINC)                                              35250021
CRDSCN   DC    V(HEWLFSCN)                                              35350021
AUTOCALL DC    V(HEWLCAUT)                                              35450021
FINALPRC DC    V(HEWLCFNI)                                              35550021
*              ADDRESS OF ABORT ENTRY TO FINAL PROCESSOR              * 35650021
*              USED TO TERMINATE LINK EDITOR                          * 35750021
*                                                                     * 35850021
*    THE LOAD OR OBJECT MODULE PROCESSOR IS NOW SELECTED              * 35950021
*                                                                     * 36050021
HEWLFMDI ST    BASE,BASAVE                                              36150021
         TM    APT1,LOADMOD                                             36250021
*              IF THE INPUT IS LOAD MODULE, BRANCH                    * 36350021
         BC    1,INP270                                                 36450021
*                                                                     * 36550021
*                   **** OBJECT MODULE PROCESSING STARTS ****         * 36650021
*                             **** HERE ****                          * 36750021
*                                                                     * 36850021
INP20    CLI   COL1(BUFFER),X'02'                                       36950021
*              IF THE CARD IS OBJECT MODULE, BRANCH                   * 37050021
         BC    8,INP40                                                  37150021
         B     INP13                    CHECK FOR CONTROL CARD          37250021
INP20A   LH    MSG,IEW0222         NOT OBJ MODULE INPUT                 37350037
         L     TEMP1,INPADD                                             37450021
INP21    L     SYSBRNCH,ERDIG                                           37550021
*              BRANCH TO ERROR ROUTINE                                * 37650021
         BALR  14,15                                                    37750021
         LR    SYSBRNCH,TEMP1                                           37850021
*              SKIP CARD, RETURN TO INPUT CONTROL TO READ NEXT CARD   * 37950021
         BCR   15,TEMP1                                                 38050021
INP22    LH    MSG,IEW0212         CONTINUATION NOT RECEIVED            38150037
         NI    APT2,X'FE'                                               38250021
*              CLEAR CONTINUATION BIT                                 * 38350021
         LA    TEMP1,INP20                                              38450021
         BC    15,INP21                                                 38550021
INP40    TM    APT2,X'01'          IS CONTINUATION EXPECTED             38650021
         BC    1,INP22             YES--WHEN CONTINTUATION IS EXPECTED  38750021
*                           AND NOT RECEIVED AN ERROR CONDITION ARISES  38850021
         LA    REG6,16(BUFFER)                                          38950021
*              REG6 CONTAINS THE ADDRESS OF COL 17                    * 39050021
         OI    APT2,INMODON                                             39150021
*              SET IN MODULE INDICATOR ON                             * 39250021
         L     TEMP2,COL1(BUFFER)                                       39350021
*              REGISTER 0 CONTAINS COLS 1 THRU 4                      * 39450021
         L     REG3,COL5(BUFFER)                                        39550021
*              REG3 CONTAINS COLS 5 THRU 8                            * 39650021
         LA    REG3,0(REG3)                                             39750021
         LH    REG4,COL11(BUFFER)                                       39850021
*              REG4 CONTAINS COLS 11 AND 12                           * 39950021
         LH    REG5,COL15(BUFFER)                                       40050021
*              REG5 CONTAINS COLS 15 AND 16                           * 40150021
*                                                                     * 40250021
*              THE FOLLOWING CODE EXAMINES COLS 1 THRU 4 AND          * 40350021
*              DETERMINES WHAT TYPE OF CARD WAS INPUT. IT THEN        * 40450021
*              BRANCHES TO THE APPROPRIATE SECTION OF CODE TO         * 40550021
*              PROCESS THE CARD                                       * 40650021
         LA    READCNT,5                                                40750021
         LA    TEMP,SYMTAB                                              40850021
INP50    LM    SYSRET,SYSBRNCH,0(TEMP)                                  40950021
         CR    TEMP2,SYSRET                                             41050021
         BC    8,INP60                                                  41150021
         LA    TEMP,8(TEMP)                                             41250021
         BCT   READCNT,INP50                                            41350021
         BC    15,INP20A                                                41450021
INP60    SLL   READCNT,2                                                41550021
         LA    TEMP,INP110                                              41650021
         LA    TEMP1,INP99                                              41750021
SWITCH   BC    15,SWITCH(READCNT)                                       41850021
         BC    15,INP65       END                                       41950021
         BC    15,INP150      SYM                                       42050021
         BC    15,INP140      ESD                                       42150021
         BC      15,INP130      RLD                                     42250021
         BC    15,INP160      TXT                                       42350021
*            END CARD PROCESSING                                        42450021
INP65    NI    ENDCD,X'FE'             END CARD FOUND                   42550021
         TM    APTSWS,X'02'            HAVE SYMS BEEN RECEIVED          42650021
*              IF SYMS HAVE BEEN RECEIVED,GO TO SYM PROC FOR PURGE    * 42750021
         BC    1,INP170                                                 42850021
         CLI   COL33(BUFFER),BLANK     DOES END CARD HAVE IDR    S21016 42950021
*                                      DATA? (IF NOT PRESENT,    S21016 43050021
*                                      COL.33 IS BLANK)          S21016 43150021
         BE    INP70                   NO, BRANCH                S21016 43250021
         OI    IDRSWS,OBJIDR           TURN ON OBJ.MOD.INDICATOR S21016 43350021
         B     INP340                  GO TO PROCESS IDR DATA    S21016 43450021
INP70    TM    APT1,ENTRYPT                                             43550021
*        IF AN  ENTRY POINT WAS RECEIVED, SKIP THE FOLLOWING          * 43650021
         BC    1,INP90                                                  43750021
         CH    REG5,ZBLNK+2                                             43850021
*        IF THE ENTRY POINT IS NOT ABSOLUTE, SKIP TO INP80            * 43950021
         BC    8,INP80                                                  44050021
         CL    REG3,ZBLNK                                               44150021
         BC    8,INP80                                                  44250021
*        SET ABSOLUTE INDICATOR ON                                    * 44350021
         NI    APT1,ABSOLUTE                                            44450021
         ST    REG3,EPSM                                                44550021
INP80    CLI   0(REG6),X'40'                                            44650021
*        IF THE ENTRY POINT IS NOT SYMBOLIC, SKIP TO INP90            * 44750021
         BC    8,INP90                                                  44850021
         OI    APT1,SYMBOLIC                                            44950021
*        SET SYMBOLIC INDICATOR ON  AS WELL AS ENTRY POINT INDICATOR  * 45050021
         OI    APT1,ENTRYPT                                             45150021
         MVC   EPSM(8),0(REG6)                                          45250021
INP90    L     REG4,COL29(0,BUFFER)                                     45350021
         CL    REG4,BLNK                                                45450021
*              IF THERE IS NO LENGTH ON THE END CARD, BRANCH          * 45550021
         BC    8,INP98                                                  45650021
         OI    APT2,X'80'                                               45750021
*              SET LENGTH RECEIVED BIT ON                             * 45850021
INP98    L     TEMP,INPADD             RETURN TO BEGINNING              45950021
INP99    ST    TEMP,BASAVE1                                             46050021
         LA    SAVEAREA,REGSA      ADDRESS OF SAVE AREA                 46150021
         OI    APTSWS,X'04'                                             46250021
INP100   BALR  SYSRET,SYSBRNCH                                          46350021
*              BRANCH TO PROCESSOR                                    * 46450021
         BALR  BASE,0                                                   46550021
         USING *,BASE                                                   46650021
         LM    BASE,SAVEAREA,BASAVE                                     46750021
         USING HEWLCINP,BASE                                            46850021
         LR    SYSBRNCH,SAVEAREA                                        46950021
*              RETURN TO POINT IN CODE SPECIFIED IN REG 13            * 47050021
         BCR   15,SYSBRNCH                                              47150021
INP110   L     SYSBRNCH,INPADD                                          47250021
         TM    APTSWS,ESD          IS RETURN FROM ESD PROC              47350021
         BCR   8,SYSBRNCH                                               47450021
         NI    APTSWS,X'FE'        CLEAR ESD RETURN                     47550021
         TM    APT1,ESDWRITE                                            47650021
*              IF ESD WRITE INDICATOR IS OFF, BRANCH                  * 47750021
         BCR   8,SYSBRNCH                                               47850021
         NI    APT1,X'FE'                                               47950021
*              CLEAR ESD WRITE INDICATOR                              * 48050021
         TM    PDSE7,TEST                                               48150021
*              IF TEST OPTION IS OFF, BRANCH                          * 48250021
         BCR   8,SYSBRNCH                                               48350021
         LR    TEMP,SYSBRNCH                                            48450021
*              INITIALIZE REGISTERS FOR SYM PROCESSOR (COUNT AND      * 48550021
*              BUFFER ADDRESS)                                        * 48650021
         L     REG6,HEWLCLAC                                            48750021
         LH    REG4,LRECL(0,REG6)                                       48850021
         L     REG6,CURBUF(0,REG6)     ADDRESS OF CURRENT INPUT OBJ BF  48950021
         L     SYSBRNCH,SYMADD                                          49050021
         TM    APT1,LOADMOD                                             49150021
*              IF THE INPUT IS OBJECT MOD, BRANCH                     * 49250021
         BC    8,INP111                                                 49350021
         SR    REG4,REG4                                                49450021
*              INDICATE PURGE FOR SYM                                 * 49550021
         BC    15,INP99                                                 49650021
INP111   OI    APTSWS,X'02'        SET SYM RECEIVED ON (ESD)            49750021
         BC    15,INP99                                                 49850021
*              RLD  PROCESSING                                        * 49950021
INP130   NI    APT0,X'FD'                                               50050021
*              ESD  PROCESSING                                        * 50150021
         BCR   15,TEMP1                                                 50250021
INP140   OI    APTSWS,ESD          SET ESD CARD BIT ON                  50350021
         CLC   76(4,BUFFER),CARD1      IS THIS FIRST OBJ CARD           50450021
         BCR   7,TEMP1                 NO                               50550021
         ST    SYSBRNCH,SAVE602        STORE RETURN ADDRESS             50650021
         BAL   SYSBRNCH,TESTEND        GO TO END CARD TEST              50750021
         L     SYSBRNCH,SAVE602        RESTORE RETURN ADDRESS           50850021
         BCR   15,TEMP1                                                 50950021
TESTEND  TM    ENDCD,X'81'             WAS END CARD FOUND               51050021
         BCR   12,SYSBRNCH             YES                              51150021
         STM   14,15,SAVE602+4                                          51250021
         LH    MSG,IEW0602+4           ERROR MESSAGE IEW0602            51350037
         L     SYSBRNCH,ERDIG          ERROR ROUTINE ADDRESS            51450021
         BALR  14,15                   BRANCH TO ERROR LOG              51550021
         LM    14,15,SAVE602+4                                          51650021
         BCR   15,SYSBRNCH                                              51750021
*              SYM PROCESSING                                         * 51850021
INP150   CLC   76(4,BUFFER),CARD1      FIRST ESD CARD                   51950021
         BNE   NOFRT                   NO                               52050021
         OI    ENDCD,X'80'             TURN ON TEST FOR END CARD        52150021
         BAL   SYSBRNCH,TESTEND                                         52250021
NOFRT    L     SYSBRNCH,INPADD                                          52350021
         LR    REG6,BUFFER                                              52450021
         TM    PDSE7,TEST                                               52550021
*              IF TEST OPTION IS OFF, GO TO NEXT CARD                 * 52650021
         BCR   8,SYSBRNCH                                               52750021
         L     SYSBRNCH,SYMADD                                          52850021
         OI    APTSWS,X'02'        SET SYM RECEIVED BIT ON              52950021
         LA    REG4,80                                                  53050021
         BCR   15,TEMP1                                                 53150021
*              TXT PROCESSING                                           53250021
INP160   CH    REG4,MAXOBJLN           VALIDATE DATA LN OX04563,OY03738 53300002
         BH    INP20A                  LOG ERR IF HIGH  OX04563,OY03738 53310002
         OI    ENDCD,X'01'             TEST END CARD    OX04563,OY03738 53350002
         TM    APTSWS,X'02'            HAVE SYMS BEEN RECEIVED          53450021
*              IF THEY HAVE, DO A SYM PURGE                           * 53550021
         BC    1,INP170                                                 53650021
         OI    APT0,X'02'                                               53750021
*              SET TXT BIT ON IN APT                                  * 53850021
         BCR   15,TEMP1                                                 53950021
*              SYM PURGE BEFORE TXT                                   * 54050021
INP170   SR    REG4,REG4                                                54150021
         NI    APTSWS,X'FD'        CLEAR SYM RECEIVED BIT               54250021
         L     SYSBRNCH,SYMADD                                          54350021
         BALR  TEMP,TEMP1                                               54450021
         L     REG6,HEWLCLAC                                            54550021
*              RESET THE BUFFER ADDRESS AND BRANCH TO PROCESS CARD    * 54650021
         L     BUFFER,CURBUF(0,REG6)                                    54750021
         BC    15,INP40                                                 54850021
SCAT     EQU   X'10'                                                    54950021
ESDREC   EQU   X'20'                                                    55050021
IDREC    EQU   X'80'                   LOAD MODULE RECORD TYPE   S21016 55150021
*                                      FOR IDR                   S21016 55250021
CCW      EQU   1                                                        55350021
RLD      EQU   X'02'                                                    55450021
LSTLST   EQU   X'08'                                                    55550021
BYTESRLD EQU   6                                                        55650021
SYM      EQU   X'40'                                                    55750021
*                                                                     * 55850021
*                        **** LOAD MODULE PROCESSING STARTS ****      * 55950021
*                             **** HERE ****                          * 56050021
*                                                                     * 56150021
INP270   LA    TEMP1,INP99                                              56250021
*              SET UP BRANCHING REGISTERS                             * 56350021
         CLI   COL1(BUFFER),SYM                                         56450021
*              IF THE RECORD IS NOT SYM, BRANCH                       * 56550021
         BC    7,INP281                                                 56650021
         TM    PDSE7,TEST                                               56750021
*              IF THE TEST OPTION IS NOT ON, BRANCH                   * 56850021
         BC    8,INP315                                                 56950021
         LA    TEMP,INP315             RTN ADD TO GO TO INPUT PROC      57050021
         SR    4,4                                                      57150021
*              INDICATE PURGE, BRANCH                                 * 57250021
         L     SYSBRNCH,SYMADD                                          57350021
         BCR   15,TEMP1                                                 57450021
INP280   TM    COL1(BUFFER),LSTLST                                      57550021
*              IF THE RECORD IS END-OF-MODULE,BRANCH                  * 57650021
         BC    1,INP282                                                 57750021
         LA    MSG,IEW0234                                              57850037
         L     TEMP1,INPADD             SKIP THIS RECORD                57950021
         BC    15,INP21                 BRANCH TO ERROR ROUTINE         58050021
INP282   L     TEMP,EOFADD                                              58150021
         L     TAMP,INPADD                                              58250021
*              PREPARE TO BRANCH TO END OF FILE AFTER END PROCESS     * 58350021
         ST    TAMP,BASAVE                                              58450021
         L     SYSBRNCH,ENDADD                                          58550021
*              BRANCH TO END PROCESSOR                                * 58650021
         BC    15,INP99                                                 58750021
INP281   TM    COL1(BUFFER),ESDREC                                      58850021
*              IF RECORD IS NOT ESD, BRANCH                           * 58950021
         BC    8,INP290                                                 59050021
         LA    TEMP,INP110                                              59150021
         OI    APTSWS,ESD          SET ESD BIT ON                       59250021
         LH    REG4,6(BUFFER)                                           59350021
*              REG4 CONTAINS THE BYTE COUNT                           * 59450021
         LH    REG5,4(BUFFER)                                           59550021
*              REG5 CONTAINS THE ID OF THE FIRST ESD ITEM             * 59650021
         LA    REG6,8(BUFFER)                                           59750021
*              REG6 CONTAINS THE ADDRESS OF THE ESD INFO                59850021
         L     SYSBRNCH,ESDADD                                          59950021
         BCR   15,TEMP1                                                 60050021
INP290   TM    COL1(BUFFER),RLD                                         60150021
*              IF THE RECORD IS NOT RLD, BRANCH                       * 60250021
         BC    8,INP300                                                 60350021
         LA    REG6,16(BUFFER)                                          60450021
*              REG6 CONTAINS THE ADDRESS OF THE RLD DATA              * 60550021
         LH    REG4,BYTESRLD(BUFFER)                                    60650021
*              REG4 CONTAINS THE RLD BYTE COUNT                       * 60750021
         L     SYSBRNCH,TXTADD                                          60850021
         ST    DCBADD,BASAVE2                                           60950021
         BALR  TEMP,TEMP1          TO RLD PROCESSOR                     61050021
INP299   L     DCBADD,BASAVE2                                           61150021
INP300   L     BUFFER,RLDINPAD          ADDR OF LAOD MOD BUFFER         61250021
*              RESTORE DCBADDRESS AND BUFFER ADDRESS                  * 61350021
         TM    COL1(BUFFER),CCW                                         61450021
*              IF THE RECORD IS NOT TXT, BRANCH                       * 61550021
         BC    8,INP305                                                 61650021
         L     REG3,8(BUFFER)                                           61750021
*              REG3 CONTAINS THE ASSIGNED ADDRESS                     * 61850021
         LA    REG3,0(REG3)                                             61950021
         LH    REG6,BYTESRLD(BUFFER)                                    62050021
         LA    REG6,16(BUFFER,REG6)                                     62150021
         L     REG4,12(BUFFER)                                          62250021
         LA    REG4,0(REG4)                                             62350021
*              REG4 CONTAINS THE TXT BYTE COUNT                       * 62450021
         LH    REG5,0(REG6)                                             62550021
*              REG5 CONTAINS THE TXT ID                               * 62650021
         LA    TEMP,INP310                                              62750021
         L     SYSBRNCH,TXTADD                                          62850021
         OI    APT0,X'02'                                               62950021
*              SET TXT INDICATOR ON AND BRANCH TO TXT PROCESSOR       * 63050021
         BC    15,INP99                                                 63150021
INP305   TM    COL1(BUFFER),RLD                                         63250021
*              IF THE RECORD IS NOT RLD BRANCH                        * 63350021
         BC    8,INP320                                                 63450021
INP310   L     BUFFER,RLDINPAD          ADDR OF LOAD MOD BUFFER         63550021
*              RE-INITIALIZE THE BUFFER ADDRESS                       * 63650021
         NI    APT0,X'FD'                                               63750021
*              CLEAR TXT INDICATOR                                    * 63850021
         TM    COL1(BUFFER),LSTLST                                      63950021
*              IF THE RECORD IS END OF MODULE, BRANCH                 * 64050021
         BC    1,INP282                                                 64150021
INP315  L     SYSBRNCH,INPADD                                           64250021
*              BRANCH TO INPUT CONTROL                                * 64350021
         BCR   15,SYSBRNCH                                              64450021
INP320   TM    COL1(BUFFER),SCAT                                        64550021
*              IF THE INPUT IS NOT SCATTER, BRANCH                      64650021
         BZ    INP330                  GO TO TEST FOR IDR        S21016 64750021
         BC    15,INP315                                                64850021
INP330   CLI   COL1(BUFFER),IDREC      IS RECORD TYPE IDR?       S21016 64950021
         BNE   INP280                  IF NOT, BRANCH            S21016 65050021
         OI    IDRSWS,LMDIDR           TURN LOAD MOD. INDICATOR  S21016 65150021
INP340   STM   SAVEAREA,PARMPTR,IDRSAV  SAVE LINKAGE REGS (13-1) S21016 65250021
         LA    PARMPTR,BUFADDR         POINT TO PARAMETER LIST   S21016 65350021
         LA    SAVEAREA,REGSA          LOAD ADDR. OF SAVE AREA    M4123 65400021
         L     SYSBRNCH,IDRADDR        GET ADDR.OF IDR PROCESSOR S21016 65450021
         ST    BUFFER,BUFADDR          PLACE ADDR.OF REC.IN      S21016 65550021
*                                      PARAMETER LIST            S21016 65650021
         BALR  SYSRET,SYSBRNCH         CALL IDR PROCESSOR        S21016 65750021
         LM    SAVEAREA,PARMPTR,IDRSAV  RESTORE LINKAGE REG'S.   S21016 65850021
         TM    IDRSWS,LMDIDR           WAS LOAD MOD.IDR JUST     S21016 65950021
*                                      PROCESSED?                S21016 66050021
         BO    INP350                  YES, CONTINUE PROCESSING  S21016 66150021
*                                      WITH NEXT LOAD MOD.RECORD S21016 66250021
         NI    IDRSWS,MODTYPE          NO, TURN OFF MOD.TYPE     S21016 66350021
*                                      INDICATORS                S21016 66450021
         B     INP70                   CONTINUE PROCESSING       S21016 66550021
*                                      OF OBJECT MOD. END CARD   S21016 66650021
INP350   NI    IDRSWS,MODTYPE          TURN OFF MODULE TYPE      S21016 66750021
*                                      INDICATORS                S21016 66850021
         B     INP315                  RETURN TO LOAD MODULE     S21016 66950021
*                                      PROCESSOR                 S21016 67050021
         ENTRY HEWLCDLK                                                 67150021
RNTR     EQU   4                                                        67250021
RNT      EQU   5                                                        67350021
TEMP4    EQU   0                                                        67450021
TEMP3    EQU   1                                                        67550021
CESD     EQU   3                                                        67650021
         USING HEWLCDLK,SYSBRNCH                                        67850021
HEWLCDLK STM   RNTR,DCBADD,REGSA   SAVE REGISTERS                       67950021
         ST    TEMP3,REGSA+24                                           68250021
         SLL   TEMP3,4                  COMPUTE CESD LINE ADDRESS       68350021
         AR    TEMP3,CESD                                               68450021
         NC    9(3,TEMP3),9(TEMP3)      IS THE ASSEMBLED ADDRESS ZERO   68550021
         BC    8,DLK3                   YES,BRANCH TO RETURN            68650021
         L     REG6,DLKT           ADDRESS OF DELINK TABLE              68750021
         LH    TEMP1,ENDTC         INCREMENT CURRENT COUNT OF           68850021
         LA    TEMP1,1(TEMP1)           DELINK TABLE ENTRIES            68950021
         CH    TEMP1,ENDTX         IS DELINK TABLE EXEEDED              69050021
         BC    2,DLKTBLOF               YES,BRANCH TO ERROR ROUTINE     69150021
DLK4     STH   TEMP1,ENDTC         SET DELINK TBL CURRENT COUNT         69250021
         LR    DCBADD,TEMP1             SAVE UPDATED DELINK COUNT       69350021
         SLL   RNTR,2                  GET RENUMBERING TBL ENTRY S01904 69450021
         A     RNTR,RECNT              COMPUTE RNT LINE ADDR     S01904 69550021
         STH   TEMP1,0(RNTR)            SET DELINK TBL LINE IN RNTID    69650021
         OI    2(RNTR),X'04'            SET DELINK VALUE SAVED BIT      69750021
         SLL   DCBADD,2                                                 69850021
         AR    TEMP1,DCBADD             COMPUTE DELINK TBL ENTRY ADDRS  69950021
         L     REG6,DLKT               ADDRESS OF DELINK TABLE   S01904 70050021
         AR    REG6,TEMP1                                               70150021
         MVC   2(3,REG6),9(TEMP3)       SAVE ASSM. ADDRESS IN DLK TBL.  70250021
         TM    3(RNTR),X'40'            IS TYPE IN RNT -CHAIN-          70450021
         BC    8,DLK2                   NO,BRANCH                       70550021
         MVC   0(2,REG6),14(TEMP3)      SAVE CHAIN ID IN DELINK TBL.    70650021
         BC    15,DLK3                                                  70750021
DLK2     MVC   0(2,REG6),REGSA+26  MOVE CESDID TO DLK TBL               70850021
DLK3     LM    RNTR,DCBADD,REGSA   RESTORE                              70950021
         NI    8(TEMP3),X'EF'           CLEAR DELINK BIT IN CESD TYPE   71050021
         BCR   15,SYSRET                RETURN                          71150021
DLKTBLOF TM    APT4,X'C0'              CAN REALLOC BE DONE?      S01904 71250021
         BO    DLKTBLF                 ALREADY DONE-GO TO ERROR RTN     71350021
         STM   TEMP2,SYSBRNCH,BRNCHSV  SAVE REGISTERS            S01904 71450021
         L     SYSBRNCH,ERDIGA         ADDRESS OF REALLOC RTN    S01904 71550021
         BALR  SYSRET,SYSBRNCH         GO TO REALLOC RTN         S01904 71650021
         LM    TEMP2,SYSBRNCH,BRNCHSV  RESTORE REGISTERS         S01904 71750021
         MVC   REGSA+4(4),RECNT        UPDATE PTR TO RNT          M4320 71760021
         B     DLK4                    PROCEED                   S01904 71850021
DLKTBLF  LA    MSG,IEW0484              LOAD REG 0 WITH ERROR CODE      71950037
         L     SYSBRNCH,ERDIG      LOAD REG15 WITH ADDRESS OF           72050021
*                                       ERROR DIAGNOSTIC ROUTINE        72150021
         BCR   15,SYSBRNCH              THIS IS A TERMINAL ERROR        72250021
*****                         ERROR                               ***** 72350021
         DROP  SYSBRNCH                                                 72450021
         DS    0F                                                       72550021
BASAVE   DS    1F                                                       72650021
BASAVE1  DS    1F                                                       72750021
BASAVE2  DS    1F                                                       72850021
SYMTAB   DC    X'02'                                                    72950021
         DC    C'TXT'                                                   73050021
TXTADD   DC    V(HEWLFRAT)                                              73150021
         DC    X'02'                                                    73250021
         DC    C'RLD'                                                   73350021
RLDADD   DC    V(HEWLFRAT)                                              73450021
         DC    X'02'                                                    73550021
         DC    C'ESD'                                                   73650021
ESDADD   DC    V(HEWLFESD)                                              73750021
         DC    X'02'                                                    73850021
         DC    C'SYM'                                                   73950021
SYMADD   DC    V(HEWLFSYM)                                              74050021
         DC    X'02'                                                    74150021
         DC    C'END'                                                   74250021
ENDADD   DC    V(HEWLFEND)                                              74350021
RDMACRO  DC    V(HEWLERDM)                                              74450021
EOFADD   DC    V(HEWLCEOD)                                              74550021
INPADD   DC    V(HEWLCINP)                                              74650021
MAXOBJLN DC    H'56'                   TEXT DATA LEN    OX04563,OY03738 74700002
******** ERROR MSG **************************************************** 74750037
IEW0602  DC    F'0',X'223C'            ERROR IEWL0602 MESSAGE           74810037
IEW0222  DC    X'1216'                                                  74870037
IEW0212  DC    X'1215'                                                  74930037
*********************************************************************** 74990037
ENDCD    DC    X'00'                   SWITCH FOR END CARD TEST         75050021
*        0  BIT X'80' START END CARD TESTING                            75150021
*        1-6          SPARE                                             75250021
*        7     X'01' LOOK FOR END CARD                                  75350021
CARD1    DC    C'0001'                 END CRD TEST- 1ST ESD CRD        75450021
SAVE602  DS    3F                      FOR END CRD TEST SAVEAREA        75550021
ZBLNK    DC    X'00404040'                                              75650021
BLNK     DC    C'    '                                                  75750021
IDRADDR  DC    V(HEWLFIDR)             ADDRESS OF IDR PROCESSOR  S21016 75850021
IDRSAV   DS    5F                      SAVE AREA FOR IDR RTN.    S21016 75950021
BUFADDR  DS    F                       IDR PARAMETER LIST        S21016 76050021
****************************************************************        76150037
*        PATCH AREA                                            *        79150037
****************************************************************        82150037
PATCH    DC    20F'0',C'PATCH AREA' FOR PROG MAINT                      85150037
         HEWAPT                                                         88150037
         END                                                            91150037
./  ADD  SSI=81940473,NAME=HEWLFINT
         TITLE 'HEWLFINT - LINKAGE EDITOR   ** INITIALIZER **'          00860401
HEWLFINT CSECT                                                          00860801
**********************************************************************  00862021
*154000-156500,164600-164700,171100-171440,458600-458700         S21016 00864021
*458800-458998                                                   S21016 00866021
*062600-062700,070100-070200,077600,153700,178100,333500-333900  S01904 00868021
*412500-413500,458720-458740                                     S01904 00868421
*070300-070420,153220,153800,542100                              Y01048 00868500
*046000,527500                                                   A47001 00868600
*093500                                                           M2199 00868700
*A146500                                SA51444                         00874900
*C415500                                SA51436                         00876900
*C123500,A275000,C277000-277500,C494000-502000                  SA47971 00878900
*D503000,C503500                                                SA47971 00880900
*A064500,C117700,A120500,C151000,A151000,D514100-514200,        SA49330 00881300
*A515000,C515500,A515500,A543500                                SA49330 00892700
*D121500-122000                                                 OY00129 00902701
*D009158,A009372-009376,A494600-494700,A495600-495700           OX00127 00903101
*A314600-314800,A316000-318000,D316000-320500,A334600           OY00338 00903501
*D064600,A064600-064920,C120540,A120560-120980,D151000-151100   OY00130 00903901
*D151300-151666,I528600-528900,D543600-543700,A543600-543740    OY00130 00904301
*A117720,C117750,C117800,D118000                                OY00136 00908101
*C515420-515440                                                 OY00227 00910101
*D063500-064000,D117600-117650,C399500-402000,D402500-403500    OY00359 00912101
*C405500-406000,C413500                                         OY00359 00912501
*C499500,A500100-500440,A500600-501000                           YM5584 00914501
*C155500-156000                                                  XM1641 00914902
*A440600                                                         XM5473 00915303
*A458944-458956                                                 OX04245 00915702
*I496000                                                OX03511,OY03041 00917702
*I146500                                                OX03507,0Y03040 00919702
*I064920,I515600,D516200                                OX04281,OY03412 00921702
*C333701                                              @ZA04726,@YA09265 00922137
*C449000                                                       @ZA05444 00922337
*C515120                                                       @ZA07598 00922537
*C495500                                                       @ZA07605 00922737
*A21951000-21953000      SYSPRINT BLOCKING                     @ZA16058 00922837
*C117500,117700,495700,499000,499200 D493500 A499100,499500    @ZA33269 00922937
       EJECT                                                            00923337
**********************************************************************  00923402
         USING HEWLFINT,SYSBRNCH                                        00927200
* STATUS CHANGE LEVEL - 002     DATE - 01/19/73                         00937201
*                                                                       00937601
*FUNCTION/OPERATION: THIS MODULE IS THE SECOND TO BE ENTERED IN THE   * 00938600
*      LINK EDITOR. IT OPENS THE FOLLOWING DDNAMES- SYSLMOD,SYSLIN,   * 00950021
*      AND SYSPRINT.  IT THEN ALLOCATES STORAGE TO LINK EDITOR        * 01000021
*      TABLES DEPENDENT UPON THE STORAGE AVAILABLE AT THE TIME.       * 01050021
*      IT CLEARS OUT THE ALL PURPOSE TABLE AND THE TABLE AREA WHICH   * 01100021
*      IT ALLOCATES. IT SETS UP THE PDS DIRECTORY INDICATORS TO       * 01150021
*      THEIR INITIAL VALUES.                                          * 01200021
*      IF THE NAME CARD IS USED, IT WILL RE-INITIALIZE FOR A NEW      * 01250021
*      RECURSION THROUGH LINK EDITOR.                                 * 01300021
*                                                                     * 01350021
*                                                                     * 01400021
*ENTRY POINTS  HEWLFINT - BEGINNING OF  LINK EDITOR  LA REG13,SAVEAREA* 01450021
*                                                    L  REG1,POINTER  * 01500021
*                                                      TO LIST        * 01550021
*                                                    BALR 14,15       * 01600021
*              HEWLENAM - RECURSIVE ENTRY FOR SECOND LINK EDIT        * 01650021
*                                                    BCR 15,15        * 01700021
*                                                                     * 01750021
*                                                                     * 01800021
*INPUT:  THE ADDRESS OF A PARAMETER LIST IS PASSED FROM INITIATOR IN  * 01850021
*        REGISTER ONE. THE LIST CONTAINS THE ADDRESS OF THE           * 01900021
*        PARAMETER BYTE COUNT AND POSSIBLY THE ADDRESS OF A LIST      * 01950021
*        OF DDNAMES                                                   * 02000021
*        THE FIRST IS USED TO OBTAIN THE PARM FIELD OF THE            * 02050021
*        EXECUTE CARD. THE BYTE COUNT IDENTIFIES THE NUMBER OF BYTES  * 02100021
*        OF PARM INFORMATION WHICH FOLLOWS.                           * 02150021
*                                                                     * 02200021
*                                                                     * 02250021
*OUTPUT: THE ADDRESSES AND MAXIMUM ENTRY COUNTS FOR ALL LINK EDITOR   * 02300021
*        VARIABLE TABLES                                              * 02350021
*                                                                     * 02400021
*                                                                     * 02450021
*EXTERNAL ROUTINES  HEWLFLOG- WRITE ERROR CODE                          02500021
*                   HEWLFOPT- PROCESSES PARM FIELD OF EXEC CARD         02550021
*                                                                     * 02600021
*                                                                     * 02650021
*EXITS-NORMAL   AFTER INITIALIZATION IS COMPLETE, TO HEWLFINP TO      * 02700021
*               INITIATE PROCESSING                                   * 02750021
*                                                                     * 02800021
*EXITS-ERROR: IF A DDNAME CANNOT BE OPENED ERROR 28,SEVERITY 4 IS     * 02850021
*             PASSED TO HEWLFLOG.                                     * 02900021
*             IF THE MINIMUM CORE CANNOT BE OBTAINED, ERROR 29,       * 02950021
*             SEVERITY 4 IS PASSED TO HEWLFLOG.                       * 03000021
*                                                                     * 03050021
*TABLES/WORK AREAS:                                                     03100021
*                                                                     * 03150021
*        TABLE IS USED BY THE ALLOCATOR ROUTINE TO ASSIGN AREAS IN    * 03200021
*        GOTTEN STORAGE TO THE VARIABLE TABLES OF THE PROGRAM.        * 03250021
*        EACH ENTRY CONTAINS 8 SWITCHES IN ONE BYTE DENOTING, FOR     * 03300021
*        EXAMPLE, WHICH PASSES USE THE TABLE; AN INCREMENT TO WHICH   * 03350021
*        156 MUST BE ADDED TO DETERMINE THE ADDRESS IN THE ALL PURPOSE* 03400021
*        TABLE AT WHICH THE DETERMINED ADDRESS OF THE TABLE IS TO BE  * 03450021
*        STORED; A SIMILAR INCREMENT FOR THE NUMBER OF ENTRIES IN THE * 03500021
*        TABLE; THE NUMBER OF BYTES IN EACH ENTRY OF THE TABLE;       * 03550021
*        THE WEIGHT FACTOR OF THE TABLE FOR PURPOSES OF EXPANSION;    * 03600021
*        AND THE MINIMUM SIZE OF THE TABLE.                             03650021
*                                                                     * 03700021
*ATTRIBUTES: REUSABLE                                                 * 03750021
*                                                                     * 03800021
*NOTES: N/A                                                           * 03850021
*                                                                     * 03900021
DDNAME   EQU   40                                                       03950021
         EXTRN HEWLFAPT                                                 04000021
         EXTRN APTEXLST                                                 04050021
         EXTRN HEWLCSDB                                                 04100021
         EXTRN HEWLCMDB                                                 04150021
         EXTRN HEWLCUDB                                                 04200021
         EXTRN HEWLCPDB                                                 04250021
         EXTRN HEWLTMDB                                                 04300021
         ENTRY HEWLENAM                                                 04350021
         ENTRY HEWLXIT2                SYSLMOD OPEN EXIT                04400021
         EXTRN APTXLIST                SYSLMOD EXIT LIST                04450021
         ENTRY MAINGOT                                                  04500021
         EXTRN     ENQNAME                                              04550021
         EXTRN     MINOR                                                04600021
         EXTRN     INDDNAME                                      A47001 04610000
         ENTRY MSGFOUR                                                  04650021
DDNAMEOF EQU   40                                                       04700021
BASE     EQU   12                                                       04750021
REG1     EQU   1                                                        04800021
SYSBRNCH EQU   15                                                       04850021
REG3     EQU   3                                                        04900021
REG4     EQU   4                                                        04950021
LEN4     EQU   4             REG 4 FOR SYSLMOD ADJUST SIZE              05000021
REG7     EQU   7                                                        05050021
REG8     EQU   8                                                        05100021
REG11    EQU   11                                                       05150021
REG10    EQU   10                                                       05200021
REG5     EQU   5                                                        05250021
LEN5     EQU   5             REG 5 FOR TEXT BUFFER ADJUST USE           05300021
ZERO     EQU   0                                                        05350021
REG13    EQU   13                                                       05400021
REG14    EQU   14                                                       05450021
REG9     EQU   9                                                        05500021
OPENBIT  EQU   X'10'                                                    05550021
OPENFLAG EQU   48                                                       05600021
SYSRET   EQU   14                                                       05650021
LEN6     EQU   6                                                        05700021
SYSTERM  EQU   5                                                        05750021
SYSPRINT EQU   6                                                        05800021
TCBTSTSK EQU   X'80'       TIME SHARING FLAG IN TCBTSFLG FIELD          05850021
SYSLIN   EQU   7                                                        05900021
SYSLMOD  EQU   8                                                        05950021
SYSUT1   EQU   9                                                        06000021
TERMOFF  EQU   X'FD'                   TERM OPTION TURNED OFF           06050021
TSO      EQU   X'80'                   TSO SWITCH IN APTSWS             06100021
TERM     EQU   X'02'                   TERM SWITCH IN NEWSW             06150021
SNGLIN   EQU   X'01'                   SWITCH FOR 1 LINE OF OPTS.       06200021
DCBS     EQU   X'10'                   DCBS SWITCH                      06250021
AOSLE    EQU   X'80'                   PDSE12, RUN UNDER AOS     S01904 06260021
THREE    EQU   3                       LENGTH OF THREE BYTES     S01904 06270021
APT      EQU   2                                                        06300037
REG15    EQU   15                                                       06450021
TIOTPTR  EQU   14                       POINTER TO TIOT         OY00130 06460001
UCBPTR   EQU   TIOTPTR                  POINTER TO UCB          OY00130 06470001
LNTHDD   EQU   15                       LENGTH OF DD ENTRY      OY00130 06480001
BINNO    EQU   LNTHDD                   BIN NUMBER (2321)       OY00130 06490001
D2321    EQU   X'05'                    CODE FOR 2321 DEVICE    OY00130 06492001
STOWBIT  EQU   X'80'                   STOW DONE FLG    OX04281,OY03412 06494002
CIND2    EQU   X'3D'                   FLG DISP IN DCB  OX04281,OY03412 06496002
         EJECT                                                          06498037
         STM   14,12,12(REG13)                                          06500021
*              SAVE CALLERS REGISTERS                                 * 06550021
        BALR  BASE,0                                                    06600021
         USING *,BASE                                                   06650021
         BC    15,OVERNAME         TO AVOID THE NAME IDENTIFIER         06700021
DATE     DC    C'&SYSDATE OZ33269'  DATE/APAR NUMBER                    06750037
         DC    C'HEWLFINT',0H'0'    MOD ID                              06780037
         EJECT                                                          06810037
OVERNAME L     APT,APTADD                                               06850037
*              LOAD REGISTER 2 WITH APT ADDRESS                       * 06900021
         USING APTDSECT,APT        ESTABLISH ADDRESSABILITY WITH APT    06950021
         USING DEFDSECT,RWORK2                                          07000021
         XC    PDSE12(THREE),PDSE12    ZERO OUT SWITCHES         S01904 07010021
         OI    PDSE12,AOSLE            BIT FOR AOS LKED          S01904 07020021
         OI    PDSE12,PDSAPFLG         SET AUTH CODE BIT         Y01048 07030000
         MVC   PDSAPF,APFINIT          INITIALIZE AUTHORIZATION  Y01048 07040000
         MVC   APTAPF,APFINIT          CODES-LGTH=1,CODE=0       Y01048 07042000
         STM   13,14,SYSRTN                                             07050021
*              SAVE SYSTEM RETURN AND SAVE AREA ADDRESS               * 07100021
         LA    REG13,REGSA         LOAD REG13 WITH ADDRESS OF           07150021
*                                       SAVE AREA                     * 07200021
         XC    HISEV(2),HISEV CLEAR THE HI SEVERITY CODE                07250021
         NI    SWITCH,X'00'        TURN OFF ALL BIT SWITCHES            07300021
         L     REG3,0(0,REG1)                COMPUTE THE ADDRESS OF THE 07350021
         LA    REG3,0(0,REG3)                BYTE COUNT FOR ATTRIBUTES  07400021
         ST    REG1,REGSAVE1      SAVE PARM REG                         07450021
         LR    REG1,REG3                                                07500021
         NI    PDSE7,ZERO                                               07550021
         NI    PDSE8,ZERO                                               07600021
         OI    PDSE8,X'82'   SET 44K LE BIT ON AND DC OPT OFF           07650021
         NI    APT0,ZERO                                                07700021
         NI    APTSWS,SWSINIT          INITIALIZE                       07750021
*                                      BIT 0 & 2-4                      07752021
         NI    APT4,ZERO               INITIALIZE APT4          S01904  07760021
         L     SYSBRNCH,ATOPTADD                                        07800021
         BALR  SYSRET,SYSBRNCH                                          07850021
CONTIN   L     REG1,REGSAVE1                                            07900021
         LM    SYSTERM,SYSUT1,DCBADRS1                                  07950021
*              MOVE STANDARD DDNAMES                                  * 08000021
         MVC   DDNAMEOF(8,SYSLIN),SYSLINNM   MOVE SYSLIN DDNAME         08050021
         MVC   DDNAMEOF(8,SYSLMOD),SYSLMDNM  MOVE SYSLMOD DDNAME        08100021
         MVC   DDNAMEOF(8,SYSUT1),SYSUT1NM   MOVE SYSUT1 DDNAME         08150021
         MVC   DDNAMEOF(8,SYSPRINT),SYSPRTNM MOVE SYSPRINT DDNAME       08200021
         MVC   DDNAMEOF(8,SYSTERM),SYSTRMNM  MOVE SYSTERM DDNAME        08250021
         MVC   LIBNAME(8),SYSLIBNM MOVE SYSLIB DD NAME                  08300021
         TM    0(REG1),X'80'            ARE DDNAMES PASSED              08350021
         BC    1,INT20                  NO- BRANCH                      08400021
         L     REG3,4(0,REG1)           ADDRESS OF DDNAMES BYTECOUNT    08450021
         NI    1(REG3),X'F8'      ROUND COUNT MODULO 8                  08500021
         LH    REG4,0(0,REG3)           BYTE COUNT OF DDNAMES IN REG4   08550021
         LTR   REG4,REG4                ARE DDNAMES PASSED              08600021
         BC    8,INT20                  NO-BRANCH                       08650021
         LA    REG3,2(REG3)             ADDRESS OF DDNAMES              08700021
         EXTRACT  INITEXAD,'S',FIELDS=(TSO)  TEST IF TSO                08750021
         ST    REG4,XTRTSAVE       SAVE REG.4                           08800021
         L     REG4,INITEXAD         GET @ OF TSO FIELD                 08850021
         LTR   REG4,REG4             WAS TSO DEFINED                    08900021
         BZ    TSO2                  NO. BRANCH                         08950021
         TM    0(REG4),TCBTSTSK      YES. IS IT TS TASK                 09000021
         BNO   TSO2                  NO. DONT SET TSO FLAG              09050021
         OI    APTSWS,TSO            TURN ON TSO FLAG                   09100021
TSO2     L     REG4,XTRTSAVE         RESTORE REG4                       09150021
         LA    SYSBRNCH,TEST         @ OF DDNAME TEST                   09200021
         LA    REG4,0(REG3,REG4)        REG4 CONTAINS END ADDRESS       09250021
         BALR  SYSRET,SYSBRNCH          TEST DDNAME                     09300021
         MVC   DDNAMEOF(8,SYSLIN),0(REG3) MOVE SYSLIN DDNAME            09350021
         L     REG10,INDDNMAD       GET SYSLIN DDNAME SAVAREA     M2199 09360000
         MVC   0(8,REG10),0(REG3)   SAVE SYSLIN DDNAME            M2199 09370000
         LA    REG3,8(REG3)             INCREMENT COUNT                 09400021
         CLR   REG3,REG4                IS LOOP DONE                    09450021
         BC    11,INT20                 YES-BRANCH                      09500021
         BALR  SYSRET,SYSBRNCH          TEST MEMBER NAME                09550021
         BC    15,INT19                 BRANCH TO SET MEMBER NAME BIT   09600021
         BCR   0,0                      PADDING                         09650021
INT01    LA    REG3,8(REG3)             INCREMENT COUNT                 09700021
         CLR   REG3,REG4                IS LOOP DONE                    09750021
         BC    11,INT20                 YES-BRANCH                      09800021
         BALR  SYSRET,SYSBRNCH          TEST DDNAME                     09850021
         MVC   DDNAMEOF(8,SYSLMOD),0(REG3) MOVE SYSLMOD DDNAME          09900021
         BALR  SYSRET,SYSBRNCH     DO IT AGAIN                          09950021
         MVC   ACTVLMOD(8),0(REG3) SAVE ACTIVE LMOD DDNAME              10000021
         LA    REG3,8(REG3)             INCREMENT COUNT                 10050021
         CLR   REG3,REG4                IS LOOP DONE                    10100021
         BC    11,INT20                 YES-BRANCH                      10150021
         BALR  SYSRET,SYSBRNCH          TEST DDNAME                     10200021
         MVC   LIBNAME(8),0(REG3)  MOVE SYSLIB DDNAME                   10250021
         LA    REG3,16(REG3)            INCREMENT COUNT                 10300021
         CLR   REG3,REG4                IS LOOP DONE                    10350021
         BC    11,INT20                 YES-BRANCH                      10400021
         BALR  SYSRET,SYSBRNCH          TEST DDNAME                     10450021
         MVC   DDNAMEOF(8,SYSPRINT),0(REG3) MOVE SYSPRINT DDNAME        10500021
         LA    REG3,16(REG3)            INCREMENT COUNT                 10550021
         CLR   REG3,REG4                IS TABLE DONE                   10600021
         BC    11,INT20                 YES-BRANCH                      10650021
         BALR  SYSRET,SYSBRNCH          TEST DDNAME                     10700021
         MVC   DDNAMEOF(8,SYSUT1),0(REG3)  MOVE SYSUT1 DDNAME           10750021
         BALR  SYSRET,SYSBRNCH     DO IT AGAIN                          10800021
         MVC   ACTVUT1(8),0(REG3)  SAVE ACTIVE UT1 DDNAME               10850021
         LA    REG3,32(REG3)       INCREMENT ADDRESS                    10900021
         CLR   REG3,REG4           LOOP DONE ?                          10950021
         BC    11,INT20            YES - BRANCH                         11000021
         BALR  SYSRET,SYSBRNCH     TEST DDNAME                          11050021
         MVC   DDNAMEOF(8,SYSTERM),0(REG3)                              11100021
         BC    15,INT20                 DONE                            11150021
INT19    OI    APTEMP+8,X'80'     SET MEMBER NAME RECEIVED TEMP BIT     11200021
         MVC   APTEMP(8),0(REG3)  MOVE MEMBER NAME TO TEMP STORAGE      11250021
         BC    15,INT01                 BRANCH BACK IN-LINE             11300021
TEST     NC    0(8,REG3),0(REG3)        IS FIELD ZERO                   11350021
         BC    8,6(SYSRET)              YES BRANCH TO 6 PLUS RETURN     11400021
         BCR   15,SYSRET                RETURN                          11450021
INT20    DEVTYPE  ACTVLMOD,DEVSAVE   FIND SYSLMOD BLOCK SIZE            11500021
         MVC   EXITTEST(2),DEVMAXBS+2  SAVE IT FOR EXIT ROUTINE         11550021
         GETMAIN  EU,LV=200,A=MAINGOT                                   11600021
         L     1,ADDRIND                                                11650021
         MVC   5(3,1),MAINGOT+1                                         11700021
         RDJFCB MF=(E,DCBADRS2)                                         11750021
JFCBIND2 EQU   X'57'                   D'PLACEMENT IN JFCB     @ZA33269 11755037
         MVI   APTSW2,X'00'            TURN OFF FIRST BIT A49330,A37663 11760037
         L     1,MAINGOT               POINT TO JFCB            OY00136 11765037
         TM    JFCBIND2(REG1),X'08'    TEST IF DISP=SHR        @ZA33269 11770037
         BO    SKIPSET                 YES, DON'T ENQ           OY00136 11780001
         OI    APTSW2,ENQBIT           YES - TURN ON FIRST BIT   A37663 11785000
SKIPSET  EQU   *                                                 A37663 11790000
*  MOVES DSNAME TO MINOR NAME POSITION FOR ENQ                          11850021
         ST    REG3,TEMP                                                11900021
         L     REG3,=V(MINOR)                                           11950021
         MVC   0(44,REG3),0(1)                                          12000021
         L     REG3,TEMP                                                12050021
         TM    DEVCODE+1,SHRSYSMD      IS SYSLMOD SHRD DASD     SA49330 12052000
         BZ    CHKENQ                  BRANCH IF ON             OY00130 12054001
         EXTRACT INITEXAD,'S',FIELDS=(TIOT)                     OY00130 12056001
*                                      GET TIOT POINTER                 12058001
         L     TIOTPTR,ADDRTIOT        PICK UP TIOT ADDRESS     OY00130 12058401
         USING TIOT,TIOTPTR                                     OY00130 12058801
         SR    LNTHDD,LNTHDD           CLEAR DD LENGTH REG      OY00130 12059201
TIOTLP   CLI   TIOELNGH,X'00'          END OF TIOT REACHED      OY00130 12059601
         BE    SKIPENQ                 YES, LET OPEN CATCH IT   OY00130 12059701
         CLC   TIOEDDNM,ACTVLMOD       SYSLMOD ENTRY FOUND      OY00130 12059801
         BE    UCBPRCS                 YES, BRANCH TO PROCESS   OY00130 12059901
         IC    LNTHDD,TIOELNGH         GET LENGTH OF DD ENTRY   OY00130 12063201
         AR    TIOTPTR,LNTHDD          POINT TO NEXT DD ENTRY   OY00130 12065201
         B     TIOTLP                  REPEAT FOR NEXT ENTRY    OY00130 12065601
UCBPRCS  EQU   *                                                OY00130 12066001
         LA    REG4,TIOEFSRT-1         PICK UP PTR TO UCB PTR   OY00130 12066402
         DROP  TIOTPTR                                          OY00130 12066501
         OI    APTSW2,SHRSYSMD         INDICATE SHARED SYSLMOD  OY00130 12096601
         RESERVE (ENQNAME,MINOR,E,44,SYSTEMS),UCB=(REG4)        OY00130 12097002
*                                      RESERVE SYSLMOD DEVICE   OY00130 12097401
         B     SKIPENQ                 RETURN TO MAIN FLOW      OY00130 12097801
CHKENQ   EQU   *                       RESERVE BYPASS           OY00130 12098001
         TM    APTSW2,ENQBIT           DISP=OLD ON SYSLMOD?      A37663 12098101
         BO    SKIPENQ                 YES - DON'T ENQUEUE       A37663 12105401
         ENQ   (ENQNAME,MINOR,E,44,SYSTEM)                              12112701
SKIPENQ  EQU   *                                                 A37663 12120000
         L     1,MAINGOT                                                12250021
         MVC   OVERRIDE(2),102(1)   SAVE OVER/RIDE                      12300021
         XC    102(2,1),102(1)        CLEAN OUT JFCB            SA47971 12350000
         OPEN  MF=(E,DCBADRS2),TYPE=J                                   12400021
NOOR     FREEMAIN  E,LV=200,A=MAINGOT                                   12450021
         NI    APTSWS,X'EF'          TURN OFF OVER-RIDE SWITCH          12500021
         USING IHADCB,SYSPRINT                                          12550021
         MVC   PRNTNAME(8),DCBDDNAM                                     12600021
         MVC   NAMEDD(8),DCBDDNAM                                       12650021
         DROP  SYSPRINT                                                 12700021
         DEVTYPE  PRNTNAME,ANSWER                                       12750021
         LTR   REG15,REG15                                              12800021
         BNZ   ABENT10            BRANCH IF DEVTYPE UNSUCCESSFUL        12850021
         TM    ANSWER+2,X'A0'                                           12900021
         BM    BLKGOK                                                   12950021
         LA    REG15,MSG4                                               13000021
         ST    REG15,MSGFOUR                                            13050021
         MVI   MSGFOUR,49                                               13100021
*********************************************************************** 13120037
*      OPEN   ((SYSPRINT),(OUTPUT),(SYSLIN),(INPUT),(OUTPUT))         * 13140037
*********************************************************************** 13160037
BLKGOK   LA    1,DCBADRS4                                               13200021
         TM    NEWSW,TERM         TERM SPECIFIED?                       13250021
         BZ    TSO3               NO - BRANCH                           13300021
         LA    1,DCBADRS1                                               13350021
TSO3     OPEN  MF=(E,(1))          OPEN DATA SETS                       13400021
         TM    OPENFLAG(SYSPRINT),OPENBIT                               13450021
         BC    8,ABENT10                                                13500021
         TM    HEWLCWBB+24,X'04'       WAS ERROR DETECTED               13550021
         BC    1,ABENT2A               YES, BLKSIZE TOO LARGE           13600021
         TM    NEWSW,TERM              TERM OPTION SPECIFIED?           13650021
         BZ    TSO5                    NO - CONTINUE                    13700021
         TM    OPENFLAG(SYSTERM),OPENBIT  OPEN ERROR?                   13750021
         BC    1,TSO5                  NO - CONTINUE                    13800021
         NI    NEWSW,TERMOFF           YES--TURN OFF TERM OPTION        13850021
TSO5     TM    OPENFLAG(SYSLIN),OPENBIT  OPEN ERROR?                    13900021
         BC    1,INTSET                                                 13950021
         OI    INTERN1,1                                                14000021
         MVC   DDSAV(8),DDNAME(SYSLIN)                                  14050021
INTSET   OI    OPENFLAG(SYSLIN),X'08'  TURN ON UNLIKE ATTRIBUTES        14100021
INT20A   BALR  BASE,0                                                   14150021
         USING *,BASE                                                   14200021
         OI    PDSE7,X'02'     SET EXECUTABLE BIT ON                    14250021
         OI    PDSE8,X'70'     SET NO RLD 1 TXT BITS                    14300021
         MVC   SAVATS(2),PDSE7     SAVE ATTRIBUTES                      14350021
         MVC   SAVATS+2(1),APT0                                         14400021
         BCR   15,0                                                     14450021
         MVI   SPACES,54           LINE COUNT IS 54 FIRST TIME          14500021
         BC    15,INT21                                                 14550021
         DROP  BASE                                                     14600021
HEWLENAM MVI   SPACES,1            LINE COUNT IS 1 SECOND TIME          14650021
         MVI   LIBOPEN,C' '            FORCE LIB REOPEN OX03507,OY03040 14652002
         OI    APTSW2,REINTRY           SET NOT FIRST TIME THRU SA51444 14660000
INT21    BALR  BASE,0                                                   14700021
         USING *,BASE                                                   14750021
         TM    INTERN1,1               OPEN ERROR                       14800021
         BC    1,INT22                 YES BRANCH                       14850021
         LA    REG13,REGSA         ADDRESS OF SAVE AREA                 14900021
         OPEN  MF=(E,DCBADRS2)     OPEN SYSLMOD                         14950021
         L     SYSLMOD,DCBADRS2        LOAD ADDR. OF SYSLMOD            15000021
INT21A   TM    OPENFLAG(SYSLMOD),OPENBIT                                15050021
         BO    INT22                    BRANCH IF NOT           SA49330 15120000
         OI    INTERN1,1                                                15183300
         MVC   DDSAV(8),DDNAME(SYSLMOD)                                 15200021
INT22    EQU   *                                                        15250021
         SPACE 1                                                 S21016 15300021
********** CLEAR ALL PORTIONS OF THE ALL PURPOSE TABLE **********S21016 15310021
**********     THAT ARE NOT INITIALIZED ELSEWHERE      **********S21016 15320021
         MVC   PDSAPF,APTAPF           REAL CODE=DEFAULT         Y01048 15322000
         XC    PDSE1(APT3-PDSE1),PDSE1 CLEAR PDSE1 TO APT3       S21016 15340021
         NI    APT3,X'01'                    CLEAR APT3 EXCLDG BIT 7    15350021
         OI    PDSE12,AOSLE            BIT FOR AOS LINKEDIT      AOSCD  15370021
         OI    PDSE12,PDSAPFLG         SET AUTH CODE BIT         Y01048 15380000
         XC    CTTR(SGT1-CTTR),CTTR    CLEAR CTTR TO SGT1        S21016 15400021
         XC    BITMAP(HISEV-BITMAP),BITMAP CLEAR BITMAP TO HISEV S21016 15450021
* DO NOT CLEAR THE HIGHEST SEVERITY CODE                                15500021
         XC    INCBRKPT(ENRNX-INCBRKPT),INCBRKPT CLEAR INCBRKPT  XM1641 15550002
*                                                TO ENRNX        XM1641 15600002
         XC    ENSPX(ORDRMAX-ENSPX),ENSPX CLEAR ENSPX TO ORDRMAX S01904 15610000
         MVC   REGSA+5(3),SYSRTN+1 SAVE POINTER BACK                    15650021
         LH    RWORK2,ENRNX           GET MAX ENTRIES IN RNT    OX02397 15660003
         STH   RWORK2,ENRNC           STORE IN CURRENT          OX02397 15670003
*                                     CURRENT MUST ALWAYS       OX02397 15680003
*                                     EQUAL MAX FOR RNT DUE TO  OX02397 15690003
*                                     LR PROCESSING             OX02397 15692003
         SPACE 2                                                        15700021
R0       EQU   0                                                        15750021
RPARAM   EQU   1                      PARAMETER REGISTER                15800021
RINDEX   EQU   3                      INDEX REGISTER                    15850021
RWORK2   EQU   4                     WORK REGISTERS                     15900021
RWORK3   EQU   5                                                        15950021
RWORK4   EQU   6                                                        16000021
RWORK5   EQU   7                                                        16050021
RWORK9   EQU   9                                                        16100021
NUMBGROS EQU   9                      NUMBER OF GROWS POSSIBLE          16150021
RWORK6   EQU   10                                                       16200021
TABLLIST EQU   11                     GPR USED TO ADDRESS LIST OF TABLS 16250021
RBASE    EQU   12                     BASE REGISTER                     16300021
RSAVE    EQU   13                     POINTER TO SAVE AREA              16350021
RRETURN  EQU   14                     RETURN REGISTER                   16400021
RLINK    EQU   15                     LINKAGE REGISTER                  16450021
PTRLEN   EQU   4                       LENGTH OF A FOUR-BYTE     S21016 16460021
*                                      ADCON FOR USE IN A MOVE   S21016 16470021
OVERBIT  EQU   X'20'                  BIT TESTED FOR OVERLAY            16500021
LOWZEROS EQU   X'07'                  TEST FOR DOUBLE                   16550021
LOWZERO  EQU   X'03'                           SINGLE WORD ALIGNMENT    16600021
ENDFLAG  EQU   X'FF'                  END FLAG FOR LIST                 16650021
SWITCHES EQU   0                      INCREMENT IN LIST ENTRY OF SWTCHS 16700021
OVERLAY  EQU   X'80'                  BIT DENOTING OVERLAY TABLE        16750021
FIRSTPAS EQU   X'40'                               FIRST PASS TABLE     16800021
INTERPAS EQU   X'20'                               INTERMED. PASS TABLE 16850021
SECONDPS EQU   X'10'                               SECOND PASS TABLE    16900021
DBLWORDB EQU   X'08'                               DBL WORD BOUNDARY    16950021
WORDBNDR EQU   X'04'                               SGL                  17000021
CUTOFF   EQU   X'02'                               SPECIAL PROCESSING   17050021
ZERONTRY EQU   X'01'                               ZEROTH ENTRY PROV    17100021
SWSOFF   EQU   X'00'                   IMMEDIATE BYTE TO         S21016 17110021
*                                      INIALIZE A BYTE OF        S21016 17120021
*                                      SWITCHES TO ZEROES        S21016 17130021
SWSINIT  EQU   X'47'                   IMMEDIATE BYTE TO         S21016 17140021
*                                      INITIALIZE APTSWS BITS    S21016 17142021
*                                      0,2,3 & 4 TO ZEROES       S21016 17144021
ADDRINCR EQU   1                                         ADDR INCREMENT 17150021
ENTRINCR EQU   2                                         ENTR           17200021
BYTSENTR EQU   3                                         WEIGHT         17250021
WEIGHT   EQU   4                                         MINIMUM SIZE   17300021
MINSIZE  EQU   6                                                        17350021
ENTRYSIZ EQU   8                      SIZE OF LIST ENTRY                17400021
DC       EQU   X'80'                                                    17450021
FRSTIME  EQU   X'80'                                                    17500021
HIAROPT  EQU   X'04'               HIARCHY BIT IN NEWSW IN APT          17550021
ERRORTN  EQU   X'DC'                                                    17600021
BADLIN   EQU   X'43B'                                                   17650021
         EJECT                                                          17700021
         L     RWORK2,DEFVCON      FETCH ADDR OF HEWLFDEF               17750021
         L     REG1,VALUE1         FETCH MAX MAIN STOR AVAILABLE        17800021
         S     REG1,LLEGF64                                      S01904 17810021
PREPGM   EQU   *                                                        18250021
         ST    REG1,MAXSTOR        AND PLACE IN GETMAIN MAX REQ         18300021
         MVC   TOTWT(8),NORMWT        SET                               18350021
         TM    SAVATS,OVERBIT      TEST SAVED BIT FOR OVERLAY OPT       18400021
         BC    8,ALL001               NONE, CONTINUE                    18450021
         MVC   TOTWT(8),OVLAYWT       YES, RESET PARAMETERS             18500021
         MVI   ALL010SW+1,X'00'      SET SWITCH TO KEEP OVERLAY TABLES  18550021
ALL001   EQU   *                                                        18600021
         LH    RWORK2,DUMHRWT      FETCH DUMMY HIAR TABLE WEIGHT        18650021
         LH    REG10,DUMHRMN       FETCH DUMMY HIAR TABLE MIN BYTES     18700021
         TM    NEWSW,HIAROPT  TEST HIAR BIT                             18750021
         BC    8,ALL002            NO, CONTINUE                         18800021
         MVC   TOTWT(8),HIARWT     YES, RESET PARAMETERS                18850021
         LH    RWORK2,WEIGHTHR     FETCH TRUE HIAR TABLE WEIGHT         18900021
         LH    REG10,MINBTHR       FETCH TRUE HIAR TABLE MIN BYTES      18950021
ALL002   EQU   *                                                        19000021
         STH   RWORK2,HIARSLOT+4   PLACE HIAR WEIGHT IN ALLOCATION TAB  19050021
         STH   REG10,HIARSLOT+6    PLACE HIAR MIN BT IN ALLOCATION TAB  19100021
         TM    NEWSW,FRSTIME       IS THIS THE FIRST TIME IN INT        19150021
         BC    8,FSTENTRY          BRANCH IF 1ST TIME THRU              19200021
REUSSW   BC    0,GOODLIN      DUMMY BR FOR REUSABILITY                  19250021
         MVI   REUSSW+1,X'F0'      MAKE IT UNCOND IF LE IS KLUDGE       19300021
         L     RWORK3,MAINREQ      FETCH MINIMUM MAIN STOR REQ          19350021
         S     RWORK3,BUFCON       SUBTRACT MIN BUFFER AREA REQ         19400021
         ST    RWORK3,MAINREQ      REPLACE MINIMUM MAIN STOR REQ        19450021
         BC    15,GOODLIN          BYPASS ALL TABLE ALLOCATION          19500021
FSTENTRY EQU   *                                                        19550021
         NI    APT3,X'00'                    CLEAR APT3 IF 1ST TIME TH  19600021
         GETMAIN VU,LA=MAINREQ,A=MAINGOT                                19650021
*        GET AS MUCH STORAGE AS POSSIBLE                                19700021
         MVC   COREADR(8),MAINGOT  SAVE FOR ERROR FREEMAIN              19750021
         L     RWORK3,MAINLEN         LOAD LENGTH OF AREA RECEIVED      19800021
         L     REG10,MAINLEN       FETCH RETURNED LENGTH                19850021
         S     REG10,MAINREQ       REDUCE BY REQUIREMENT                19900021
         AH    REG10,TXT6K         BUT ADD IN TXT BUF SIZE              19950021
         C     REG10,VALUE2        COMPARE FOR SUFFICIENCY              20000021
         BC    4,ALTERV2           NOT ENOUGH                           20050021
NOWTEST  EQU   *                                                        20100021
         LH    REG10,TXT6K         SEE IF VALUE2 IS                     20150021
         C     REG10,VALUE2        GR THAN 6K                           20200021
         BC    11,SIXK             NO-BRANCH                            20250021
         L     REG10,CON60K        UPDATE                               20300021
         SH    REG10,TXT6K              THE 60K CONSTANT                20350021
         A     REG10,VALUE2             TO                              20400021
         ST    REG10,CON60K             60K + (VALUE2 - 6K)             20450021
         L     REG10,CON32K        UPDATE                               20500021
         SH    REG10,TXT6K              THE 32K CONSTANT                20550021
         A     REG10,VALUE2             TO                              20600021
         ST    REG10,CON32K             32K + (VALUE2 - 6K)             20650021
         BC    15,GRSIXK                                                20700021
SIXK     EQU   *                                                        20750021
*                                                                       20800021
         MVC   VALUE2+2(2),TXT6K   USE 6K ALWAYS                        20850021
*                                                                       20900021
GRSIXK   EQU   *                                                        20950021
         C     RWORK3,CON60K       CAN WE PROVIDE A MAX BLK FCTR OF 40  21000021
         BC    11,ALLM40           YES                                  21050021
         C     RWORK3,CON32K       CAN WE PROVIDE A BLK FCTR OF 10      21100021
         BC    11,ALLM10           YES                                  21150021
         MVC   MAXBF(2),M05        NO-PROVIDE A MAX BLK FCTR OF 5       21200021
         MVC   LINSIZE(4),LINMIN   USE MIN SYSLIN AND SYSPRINT SIZES    21250021
         BC    15,FETCHADR                                              21300021
ALTERV2  EQU   *                                                        21350021
         N     REG10,MASK2K        SET VALUE2 TO 2048 BYTE BOUNDARY     21400021
         ST    REG10,VALUE2        CHANGE VALUE2                        21450021
         BC    15,NOWTEST          GO BACK                              21500021
ALLM10   MVC   MAXBF(2),M10        PROVIDE A MAX BLK FACTOR OF 10       21550021
         MVC   LINSIZE(4),LININT   USE INT SYSLIN AND SYSPRINT SIZES    21600021
         BC    15,FETCHADR                                              21650021
ALLM40   MVC   MAXBF(2),M40        PROVIDE A MAX BLK FACTOR OF 40       21700021
         MVC   LINSIZE(4),LINMAX   USE MAX SYSLIN AND SYSPRINT SIZES    21750021
FETCHADR LH    RWORK2,PRTSIZE      GET MAX. PRTBUF SIZE                 21800021
         LH    REG1,HEWLCWBB+12         LOAD BLOCKSIZE                  21850021
         TM    APTSWS,TSO              IN TSO MODE?                     21900021
         BZ    TSO6                    NO - CONTINUE                    21950021
         L     REG7,HEWLCWBB           LOAD DCB ADDDRESS       @AZ16058 21960037
         CLI   17(REG7),X'4F'       IS SYSPRNT A TERMINAL      @AZ16058 21970037
         BNE   TSO6                    NO--BRANCH              @AZ16058 21980037
         LA    REG1,121                YES--SET UP A FULL BUFFER        22000021
*                                      EVEN THO LRECL ONLY 81           22050021
TSO6     LA    REG1,7(REG1)            ROUND UP TO                      22100021
         N     REG1,ALIGNX         A MULTIPLE OF EIGHT                  22150021
         STH   REG1,PRTSIZE        SAVE REAL SIZE FOR ALLOCATION        22200021
         SR    RWORK2,REG1             COMPUTE STORAGE AVAIL. TO TABLES 22250021
         AR    RWORK2,RWORK2           DOUBLE VALUE FOR BOTH BUFFERS    22300021
         STH   RWORK2,DIFFSAVE        SAVE DIFFER. FOR LATER            22350021
         L     RWORK2,MAINGOT          FETCH ADDR OF OBTAINED STORAGE   22400021
         ST    RWORK2,HEWLCRBB+4   PLACE 1ST LIBRARY BUFFER ADDR        22450021
         AH    RWORK2,LINSIZE      ADD BUFFER SIZE TO ADDR              22500021
         SH    RWORK3,LINSIZE      SUB BUFFER SIZE FROM LENGTH          22550021
         ST    RWORK2,HEWLCRBB+8   PLACE 2ND LIBRARY BUFFER ADDR        22600021
         AH    RWORK2,LINSIZE      ADD BUFFER SIZE TO ADDR              22650021
         SH    RWORK3,LINSIZE      SUB BUFFER SIZE FROM LENGTH          22700021
         ST    RWORK2,HEWLCRBN+4   PLACE 1ST SYSLIN BUFFER ADDR         22750021
         AH    RWORK2,LINSIZE      ADD BUFFER SIZE TO ADDR              22800021
         SH    RWORK3,LINSIZE      SUB BUFFER SIZE FROM LENGTH          22850021
         ST    RWORK2,HEWLCRBN+8   PLACE 2ND SYSLIN BUFFER ADDR         22900021
         AH    RWORK2,LINSIZE      ADD BUFFER SIZE TO ADDR              22950021
         SH    RWORK3,LINSIZE      SUB BUFFER SIZE FROM LENGTH          23000021
         ST    RWORK2,HEWLCWBB+4   PLACE 1ST SYSPRINT BUFFER ADDR       23050021
         MVI   1(RWORK2),X'40'         CLEAR SYSPRINT BUFFER            23100021
         MVC   2(120,RWORK2),1(RWORK2)                                  23150021
         ST    RWORK2,HEWLCWBB+20                                       23200021
         AH    RWORK2,PRTSIZE      INCREMENT ADDRESS                    23250021
         SH    RWORK3,PRTSIZE      DECREMENT LENGTH                     23300021
         ST    RWORK2,HEWLCWBB+8   PLACE 2ND SYSPRINT BUFFER ADDR       23350021
         AH    RWORK2,PRTSIZE      INCREMENT ADDRESS                    23400021
         SH    RWORK3,PRTSIZE      DECREMENT LENGTH                     23450021
         TM    SAVATS+1,DC         TEST FOR DOWNWARD COMP IN LM         23500021
         BC    8,PROV1K            BR IF IT IS TO BE DC                 23550021
*                                  CONTINUE IF NOT DC                   23600021
*                                                                       23650021
*     DEVTYPE FOR SYSLMOD DONE BEFORE OPEN                              23700021
         MVC   TXTSIZE(2),TXT18K        USE 18K                         23750021
         LA    REG10,TXT18K            LOAD ADDR OF LIST                23800021
PROVNK   CLC   DEVMAXBS+2(2),0(REG10)  COMPARE BLOCKING                 23850021
         BC    11,TRYUT1               DEVTYPE > LIST VALUE             23900021
         MVC   TXTSIZE(2),2(REG10)     USE NEXT SIZE IN LIST            23950021
         LA    REG10,2(REG10)          GET ITS ADDR                     24000021
         CLC   TXT1K(2),0(REG10)       IS BLKSIZE 1K?                   24050021
         BNE   PROVNK                  IF NOT, TEST AGAIN               24100021
PROV1K   MVC   TXTSIZE(2),TXT1K         USE 1K                          24150021
TRYUT1   EQU   *                                                        24200021
         L     REG10,VALUE2        FETCH VALUE2                         24250021
         SRL   REG10,1             DIVIDE BY 2                          24300021
         CH    REG10,TXT20K        SEE IF 18K RECORDS NEEDED            24350021
         BC    4,TESTSIZE          BR IF NO                             24400021
         OI    SWITCH,X'80'        TURN ON BIT TO PROVIDE 5K RLD BUF    24450021
TESTSIZE EQU   *                                                        24500021
         CH    REG10,TXTSIZE       SEE IF WE CAN DOUBLE BUFFER          24550021
         BC    11,NOFIXT           BR IF OK                             24600021
         STH   REG10,TXTSIZE       USE SMALLER VALUE FOR RCD SIZE       24650021
NOFIXT   EQU   *                                                        24700021
         DEVTYPE ACTVUT1,DEVSAVE FIND MAXIMUN TEXT BUFFER RECORD SIZE   24750021
*                                                                       24800021
         NI    DEVMAXBS+3,X'F8'    SET TO DOUBLE WORD BOUNDARY          24850021
         MVC   SZSYSUT1+2(2),DEVMAXBS+2 ESTABLISH SYSUT1 MAX BYTES/TRK  24900021
         MVC   UT1SIZE+2(2),TXT18K      USE 18K                         24950021
         LA    REG10,TXT18K            LOAD ADDR OF LIST                25000021
PROVMK   CLC   DEVMAXBS+2(2),0(REG10)  COMPARE BLOCKING                 25050021
         BC    11,TRYNXT               DEVTYPE > LIST VALUE             25100021
         MVC   UT1SIZE+2(2),2(REG10)   USE NEXT SIZE IN LIST            25150021
         LA    REG10,2(REG10)          GET ITS ADDR                     25200021
         CLC   TXT1K(2),0(REG10)       IS BLKSIZE 1K?                   25250021
         BNE   PROVMK                  IF NOT, TEST AGAIN               25300021
         MVC   UT1SIZE+2(2),TXT1K       USE 1K                          25350021
TRYNXT   EQU   *                                                        25400021
         C     REG10,UT1SIZE       SEE IF WE CAN DOUBLE BUFFER          25450021
         BC    11,NOFIXU           BR IF OK                             25500021
         ST    REG10,UT1SIZE       USE SMALLER VALUE FOR RCD SIZE       25550021
NOFIXU   EQU   *                                                        25600021
         STM   LEN4,LEN6,SPACES+8 STORE REGISTER FOR USE                25650021
         SR    LEN4,LEN4     CLEAR REGISTER 4                           25700021
         LH    LEN5,TXTSIZE  MAXIMUM SYSLMOD SIZE                       25750021
         LH    LEN6,UT1SIZE+2  LOAD MAXIMUM SUST1 BUFFER SIZE           25800021
         CR    LEN5,LEN6     IS SYSLMOD SIZE GREATER THAN SYSUT1 SIZE   25850021
         BH    NOFX          YES                                        25900021
         LR    LEN6,LEN5     READJUST FOR DIVISION                      25950021
         LH    LEN5,UT1SIZE+2     LOAD SYSUT1 BUFFER SIZE INTO RER. 5   26000021
*  DIVID LARGER OF SYSLMOD OR SYSUT1 BUFFER SIZE INTO EACH OTHER        26050021
*  TO FIND EVEN MULTIPLE                                                26100021
NOFX     DR    LEN4,LEN6                                                26150021
         LTR   LEN4,LEN4     WERE SIZES AN EVEN MULTIPLE OF EACH OTHER  26200021
         BC      8,NORMDER   YES                                        26250021
         SR    LEN4,LEN4                                                26300021
         MR    LEN4,LEN6     FIND EVEN MULTIPLE SIZE                    26350021
         CLC   TXTSIZE(2),UT1SIZE+2    IS SYSLMOD SIZE GREATER          26400021
         BL    UT1MORE       NO                                         26450021
         STH   LEN5,TXTSIZE  READJUST SYSLMOD MAXIMUM RECORD SIZE       26500021
         BC    15,SHIFT2                                                26550021
UT1MORE  STH   LEN5,UT1SIZE+2     READJUST UT1 BUFFER SIZE              26600021
NORMDER  LH    LEN5,TXTSIZE  LOAD SYSLMOD BUFFER SIZE                   26650021
SHIFT2   SLL   LEN5,1        MULTIPLE SYSLMOD BUFFER SIZE BY 2          26700021
READJT   L     LEN4,VALUE2                                              26750021
         TM    SWITCH,X'80'  ARE 4K UBFFERS AVAILABLE FOR RLD RECORDS   26800021
         BC    8,NOBUFF      NO                                         26850021
         SH    LEN4,TXT4K    SUBTRACT FOUR K FROM BUFFER AREA           26900021
NOBUFF   LH    LEN6,TXTSIZE                                             26950021
         CH    LEN6,UT1SIZE+2                                           27000021
         BH    MULT2                                                    27050021
         LH    LEN6,UT1SIZE+2                                           27100021
MULT2    AR    LEN5,LEN6                                                27150021
         CR    LEN4,LEN5                                                27200021
         BH    MULT2                                                    27250021
         BE    ENDFIX                                                   27300021
         SR    LEN5,LEN6                                                27350021
         ST    LEN5,VALUE2                                              27400021
ENDFIX   LM    LEN4,LEN6,SPACES+8  RESTORE REGISTERS USED               27450021
         MVC   MULTSIZE+2(2),TXTSIZE ESTABLISH MULTIPLICITY SIZE        27500021
         CLC   MULTSIZE+2(2),EXITTEST   COMPARE TO BLOCK SIZE   SA47971 27510000
         BNH   MULTFIX                  BRANCH IF USABLE        SA47971 27520000
         MVC   MULTSIZE+2(2),EXITTEST   OVERRIDE WITH BLK SIZE  SA47971 27530000
MULTFIX  EQU   *                        OVERRIDE BYPASS         SA47971 27540000
         L     SYSLMOD,DCBADRS2        GET ADDR OF SYSLMOD DCB          27550021
         USING IHADCB,SYSLMOD                                           27600021
         CLC   MULTSIZE+2(2),DCBBLKSI  COMPARE MULT. TO BLKSIZE         27650021
         BNH   MULTOK                  MULT. LESS               SA47971 27700000
         MVC   MULTSIZE+2(2),DCBBLKSI  USE BLKSIZE AS MULT.     SA47971 27750000
MULTOK   EQU   *                                                        27800021
         NI    MULTSIZE+3,X'F8'   RND RECSIZES DOWN TO MULT OF 8        27850021
         DROP      SYSLMOD                                              27900021
         LH    RWORK5,TXT1K        FETCH TWICE SIZE INTO BUFFER         27950021
         TM    SWITCH,X'80'        PROVIDE A 5K RLD BUFFER              28000021
         BC    8,ITERATE           BR IF NO                             28050021
         LH    RWORK5,TXT5K            GET TWICE SIZE OF RLD BUFFER     28100021
ITERATE  SRL   RWORK5,1            DIVIDE BY TWO                        28150021
         C     RWORK5,SZSYSUT1     COMPARE THIS SIZE TO MAX             28200021
         BC    2,ITERATE           LOOP IF GR TH MAX ALLOWABLE          28250021
         STH   RWORK5,RLDBUFSZ     SET THIS SIZE IN BUF SIZE            28300021
         LH    RWORK5,MAXTKS1      FETCH  8K CONSTANT                   28350021
         C     RWORK5,SZSYSUT1     COMPARE THIS SIZE TO MAX             28400021
         BC    4,HAVEMAX           BR IF LESS THAN MAX                  28450021
         L     RWORK5,SZSYSUT1     FETCH ACTUAL MAX                     28500021
HAVEMAX  EQU   *                                                        28550021
         STH   RWORK5,MAXTKS1      PLACE IN MAX TRACK SIZE              28600021
         SLL   RWORK5,2            MULTIPLY BY 4                        28650021
         STH   RWORK5,MAXTKS2      PLACE IN MAX TRACK SIZE X 4          28700021
         ST    RWORK2,RLDOUT1      PLACE RLD BUFFER 1 ADDR              28750021
         AH    RWORK2,RLDBUFSZ     INCREMENT ADDRESS                    28800021
         SH    RWORK3,RLDBUFSZ     DECREMENT LENGTH                     28850021
         ST    RWORK2,RLDOUT2      PLACE RLD BUFFER 2 ADDRESS           28900021
         AH    RWORK2,RLDBUFSZ     INCREMENT ADDRESS                    28950021
         SH    RWORK3,RLDBUFSZ     DECREMENT ADDRESS                    29000021
         MVC   RLDSIZE+2(2),RLDBUFSZ    SET RLD BUF SIZE IN APT         29050021
         ST    RWORK2,TXTBFBEG     PLACE LOAD MOD OR TXT BUFFER ADDR    29100021
         L     RWORK5,VALUE2       FETCH VALUE2                         29150021
         TM    SWITCH,X'80'                                             29200021
         BC    8,L5KRLD                                                 29250021
         SH    RWORK5,TXT4K                                             29300021
L5KRLD   EQU   *                                                        29350021
         CH    RWORK5,TXT6K        SEE IF VALUE2 IS GR TH 6K            29400021
         BC    2,GRTH6K            YES-BRANCH                           29450021
         LH    RWORK5,TXT6K        NO-THEN USE 6K INSTEAD               29500021
GRTH6K   AR    RWORK2,RWORK5            INCREMENT BY SIZE OF TEXT BUF   29550021
         SR    RWORK3,RWORK5            DECREMENT BY SIZE OF TEXT BUF   29600021
         ST    RWORK2,TXTBFEND          PLACE ADDR OF END OF TEXT BUF   29650021
         STM   RWORK2,RWORK3,MAINGOT    RESTORE MAINGOT + LENGTH        29700021
         L     REG8,DCBADRS3       FETCH ADDR OF SYSUT1 DCB             29750021
         USING IHADCB,REG8                                              29800021
         MVC   DCBBLKSI(2),SZSYSUT1+2        UPDATE SYSUT1 DCB          29850021
         DROP  REG8                                                     29900021
         CLC   MAXBF(2),HEWLCWBB+16  COMPARE SYSPRT BLKFC               29950021
         BL    ABENT2     EXIT IF SYSPRINT BLOCKING TOO GREAT           30000021
         L     REG10,HEWLCWBB+20   GET ADDR OF SYSPRINT BUFFER          30050021
         MVI   0(REG10),X'8B'          CC TO RESTORE                    30100021
         L     REG15,COREADR           PICK UP GETMAIN'D ADDR           30150021
         A     REG15,CORELEN           ADD IN LENGTH                    30200021
         ST    REG15,FFCADR            STORE ADDR IN APT                30250021
         L     SYSBRNCH,PRNTAD         ADDRESS OF PRINT ROUTINE         30300021
         BALR  SYSRET,SYSBRNCH                                          30350021
         L     REG10,HEWLCWBB+20       ADDRESS OF PRINT BUFFER          30400021
TEST1ST  CLI   MSGONE,X'00'             TEST 1ST BYTE FOR ZEROES        30450021
         BC    8,TEST2ND                YES - TRY NEXT                  30500021
         L     RWORK2,MSGONE            FETCH ADDR OF MSG               30550021
         NI    SWITCH,X'FE'        TURN OFF SINGLE LINE SWITCH          30600021
         LH    RWORK5,HEWLCWBB+14  LOAD LRECL                           30650021
         LA    RWORK9,0(RWORK5,RWORK2) ADDRESS OF CHARACTER AT          30700021
*                                      END OF BUFFER                    30750021
         BCTR  RWORK9,0                                                 30800021
         CLI   0(RWORK9),C' '      IS THE CHARACTER BLANK               30850021
         BNE   TEST2               NO - BRANCH                          30900021
         OI    SWITCH,SNGLIN       TURN ON SINGLE LINE SWITCH           30950021
         B     HDR1                BRANCH TO PRINT HEADER               31000021
TEST2    CLI   0(RWORK9),C','      IS LAST CHARACTER A COMMA            31050021
         BE    HDR1                YES - BRANCH TO PRINT                31100021
         BCT   RWORK9,TEST2        LOOK FOR COMMA TO BREAK LINE         31150021
HDR1     SR    RWORK9,RWORK2       GET LENGTH OF MESSAGE                31200021
         EX    RWORK9,MOVEMSG      MOVE MOVE MESSAGE INTO BUFFER        31250021
         BALR  SYSRET,SYSBRNCH     GO PRINT                             31300021
         TM    SWITCH,SNGLIN       IS THE MESSAGE CONTINUED             31350021
         BC    1,TEST2ND           NO - BRANCH                          31400021
         L     REG10,HEWLCWBB+20   GET BUFFER ADDRESS                   31450021
         MVI   0(RWORK2),C' '           INJECT BLANK TO CLEAR   OY00338 31460001
         BCTR  RWORK9,0                 GET MOVE LNG, LINE1     OY00338 31470001
         EX    RWORK9,MOVEPAD           CLEAR OUT LINE 1        OY00338 31480001
         SR    SYSRET,SYSRET                                            31500021
         IC    SYSRET,MSGONE       GET TOTAL LENGTH OF MESSAGE          31550021
         LA    RWORK2,1(SYSRET,RWORK2)  POINT TO END OF TEXT    OY00338 31600001
         SR    RWORK2,RWORK5            POINT TO SECOND LINE    OY00338 31650001
         MVI   0(RWORK2),X'09'          MOVE IN CARR CNTRL      OY00338 31700001
         BCTR  RWORK5,0                 ADJUST FOR MOVE LENGTH  OY00338 31750001
         EX    RWORK5,MOVEMSG           MOVE IN REST OF MSG     OY00338 31800001
         BALR  SYSRET,SYSBRNCH     GO PRINT SECOND LINE                 32100021
TEST2ND  CLI   MSGTWO,X'00'        TEST 1ST BYTE FOR ZEROES             32150021
         BC    8,TEST3RD           YES - TRY NEXT                       32200021
         L     REG10,HEWLCWBB+20        ADDRESS OF PRINT BUFFER         32250021
         L   RWORK2,MSGTWO                                              32300021
         IC    SYSRET,MSGTWO       FETCH LENGTH OF MSG TWO              32350021
         EX    SYSRET,MOVEMSG      THEN MOVE MSG TWO                    32400021
         BALR  SYSRET,SYSBRNCH          PRINT MSG TWO                   32450021
TEST3RD  CLI   MSGTHREE,X'00'                                           32500021
         BC    8,TEST4TH           YES - TRY NEXT                       32550021
         L     REG10,HEWLCWBB+20   GET ADDR OF SYSPRINT BUFFER          32600021
         L     RWORK2,MSGTHREE     FETCH ADDR OF MSG                    32650021
         IC    SYSRET,MSGTHREE     FETCH LENGTH OF MSG THREE            32700021
         EX    SYSRET,MOVEMSG      THEN MOVE MSG THREE                  32750021
         BALR  SYSRET,SYSBRNCH          PRINT MSG THREE                 32800021
TEST4TH  CLI   MSGFOUR,X'00'                                            32850021
         BC    8,DECREQ            YES - CONTINUE                       32900021
         L     REG10,HEWLCWBB+20   GET ADDR OF SYSPRINT BUFFER          32950021
         L     RWORK2,MSGFOUR      FETCH ADDR OF MSG                    33000021
         IC    SYSRET,MSGFOUR     FETCH LENGHT OF MSG FOUR              33050021
         EX    SYSRET,MOVEMSG      THEN MOVE MSG FOUR                   33100021
         BALR  SYSRET,SYSBRNCH     PRINT MSG FOUR                       33150021
DECREQ   EQU   *                                                        33200021
         A     RWORK3,BUFCON       ADD SIZE OF BUFFERS  SINCE           33250021
*                                  THEY HAVE BEEN ALLOCATED             33300021
         STM   ZERO,SYSBRNCH,BRNCHSV   SAVE REGISTERS            S01904 33350021
         L     SYSBRNCH,ERDIGA         ADDRESS OF REALLOC RTN    S01904 33360021
         BALR  SYSRET,SYSBRNCH         GO TO REALLOC RTN         S01904 33370021
************************************************                OY09265 33370137
*  REALLOCATION IMMEDIATELY AFTER ALLOCATION   *                OY09265 33370237
************************************************                OY09265 33370337
         TM    APT4,X'C0'              PREVIOUS REALLOCATE?     OY09265 33370437
         BO    REALLOC                 BR IF PREVIOUS REALLOC   OY09265 33370837
         L     15,ERDIGA               ADDRESS OF REALLOC RTN   OY09265 33372037
         BALR  14,15                   GO TO REALLOC RTN        OY09265 33374037
REALLOC  LM    ZERO,SYSBRNCH,BRNCHSV   RESTORE REGISTERS         S01904 33380037
         B     ALL043                                            S01904 33390021
*                                                                       33400021
MOVEMSG  MVC   0(1,REG10),0(RWORK2) PUT MSG INTO SYSPRINT BUFFER        33450021
MOVEPAD  MVC   1(1,RWORK2),0(RWORK2)   EXECUTED PAD PROPAGATOR  OY00338 33460001
*                                                                       33500021
         EJECT                                                          33550021
SCDENTRY EQU   *                                                        33600021
         TM    SAVATS,OVERBIT           TEST FOR OVERLAY                33650021
         BC    8,NOTOVLY                NOT  OVERLAY                    33700021
         LH    RWORK2,DIFFSAVE         GET PRTBUF REMAINDER             33750021
         LA    RWORK6,3000             AMOUNT FOR LARGER CALLS LIST     33800021
         CR    RWORK6,RWORK2           IS THERE 3000 BYTES LEFT         33850021
         BC    12,USESOME      YES SO ONLY USE 3000 BYTES               33900021
         LR    RWORK6,RWORK2           GET ALL OF EXTRA PRTBUF          33950021
USESOME  SR    RWORK3,RWORK6       KEEP  THIS 3000 FROM GENERAL ALLOC.  34000021
         LH    RWORK2,CALLSLST+6       GET MIN CALLS LIST SIZE          34050021
         AR    RWORK2,RWORK6       ADD 3000 TO MIN.                     34100021
         STH   RWORK2,CALLSLST+6       SAVE FOR ALLOCATION              34150021
         LH    RWORK2,ENTRLIST+6       GET MIN ENTRY LIST SIZE          34200021
         AR    RWORK2,RWORK6       ADD 3000 TO MINIMUM                  34250021
         STH   RWORK2,ENTRLIST+6       SAVE FOR ALLOCATION              34300021
         MVC   TTRLIST(4),HEWLCRBB+4    PLACE ADDR OF TTR LIST          34350021
         MVC   SGTBSLOT+6(2),SG256 ALLOW 256 SEGMENTS                   34400021
         CLC   MAXBF(2),M10        CAN WE PROVIDE 256 SEGMENTS          34450021
         BC    11,NOTOVLY          YES                                  34500021
         MVC   SGTBSLOT+6(2),SG200 NO - THEN PROVIDE A MAX OF 200       34550021
NOTOVLY  EQU   *                                                        34600021
         S     RWORK3,MAINREQ           SUB MINIMUM MAIN STOR REQ       34650021
         SR    RWORK2,RWORK2          CLEAR REGISTER FOR DIVISION       34700021
         SR    RWORK6,RWORK6                                            34750021
         D     RWORK2,TOTWT           CALCULATE NUMBER OF GROWS         34800021
         MVC   FSTPHIGH(4),MAINGOT    INITIALIZE HIGH ASSIGNED ADDRS    34850021
         MVC   INTPHIGH(8),FSTPHIGH                                     34900021
         LA    TABLLIST,TABLE         INITIALIZE REGISTERS FOR TABLE    34950021
         SR    RWORK4,RWORK4                                            35000021
         LA    RINDEX,ENTRYSIZ                                          35050021
ALL010   LR    NUMBGROS,RWORK3        REINITIALIZE NUMBER OF GROWS      35100021
         TM    SWITCHES(TABLLIST),OVERLAY TEST FOR OVERLAY TABLE        35150021
ALL010SW BC    3,ALL0405             YES, SKIP THIS TABLE               35200021
         TM    SWITCHES(TABLLIST),FIRSTPAS TEST FOR OCCURANCE IN PASS   35250021
         BC    8,ALL011                         TO FIND HIGHEST UNAVAIL 35300021
         L     RWORK2,FSTPHIGH                  ABLE ADDRESS            35350021
ALL011   TM    SWITCHES(TABLLIST),INTERPAS                              35400021
         BC    8,ALL012                                                 35450021
         C     RWORK2,INTPHIGH                                          35500021
         BC    11,ALL012                                                35550021
         L     RWORK2,INTPHIGH                                          35600021
ALL012   TM    SWITCHES(TABLLIST),SECONDPS                              35650021
         BC    8,ALL020                                                 35700021
         C     RWORK2,SECPHIGH                                          35750021
         BC    11,ALL020                                                35800021
         L     RWORK2,SECPHIGH                                          35850021
ALL020   TM    SWITCHES(TABLLIST),DBLWORDB ALIGN IF NECESSARY           35900021
         BC    8,ALL021                                                 35950021
         STC   RWORK2,ALIGNTST                                          36000021
         TM    ALIGNTST,LOWZEROS                                        36050021
         BC    8,ALL030                                                 36100021
         SRL   RWORK2,3                                                 36150021
         LA    RWORK2,1(0,RWORK2)                                       36200021
         SLL   RWORK2,3                                                 36250021
ALL021   TM    SWITCHES(TABLLIST),WORDBNDR                              36300021
         BC    8,ALL030                                                 36350021
         STC   RWORK2,ALIGNTST                                          36400021
         TM    ALIGNTST,LOWZERO                                         36450021
         BC    8,ALL030                                                 36500021
         SRL   RWORK2,2                                                 36550021
         LA    RWORK2,1(0,RWORK2)                                       36600021
         SLL   RWORK2,2                                                 36650021
ALL030   IC    RWORK4,ADDRINCR(TABLLIST)                                36700021
         TM    SWITCHES(TABLLIST),ZERONTRY TEST FOR NEED TO DECR ADDR   36750021
         BC    3,ALL060               YES                               36800021
         ST    RWORK2,CSNO(RWORK4)  NO-STORE ADDRESS IN APT             36850021
ALL031   MH    NUMBGROS,WEIGHT(TABLLIST) CALC. BYTES TO BE ADDED        36900021
         AH    NUMBGROS,MINSIZE(TABLLIST) AND ADD                       36950021
         TM    SWITCHES(TABLLIST),CUTOFF  TEST FOR SPECIAL CASE         37000021
         BC    3,ALL070               YES                               37050021
ALL032   LA    RWORK5,0(RWORK2,NUMBGROS) NO, ADD TO START ADDRESS       37100021
         TM    SWITCHES(TABLLIST),FIRSTPAS TEST FOR OCCURANCE IN PASS   37150021
         BC    8,ALL033                             AND UPDATE HIGH     37200021
         ST    RWORK5,FSTPHIGH                      ADDRESSES           37250021
ALL033   TM    SWITCHES(TABLLIST),INTERPAS                              37300021
         BC    8,ALL034                                                 37350021
         ST    RWORK5,INTPHIGH                                          37400021
ALL034   TM    SWITCHES(TABLLIST),SECONDPS                              37450021
         BC    8,ALL040                                                 37500021
         ST    RWORK5,SECPHIGH                                          37550021
ALL040   IC    RWORK4,BYTSENTR(TABLLIST) CALCULATE MAXIMUM NUMBER OF    37600021
         SR    NUMBGROS-1,NUMBGROS-1  CLEAR REGISTER FOR DIVISION       37650021
         DR    NUMBGROS-1,RWORK4                                ENTRIES 37700021
         IC    RWORK4,ENTRINCR(TABLLIST)                                37750021
         C     NUMBGROS,MAXENTRS             TEST VS MAX POSSIBLE ENTRS 37800021
         BC    12,NOWSTORE                   IF LESS TH OR EQ BRANCH    37850021
         L     NUMBGROS,MAXENTRS             OTHERWISE USE MAX VALUE    37900021
NOWSTORE EQU   *                                                        37950021
         STH   NUMBGROS,CSNO(RWORK4)                                    38000021
ALL0405  CLI   MINSIZE+2(TABLLIST),ENDFLAG TEST FOR END                 38050021
         BC    7,ALL050               NO, LOOP                          38100021
         L     RPARAM,INTPHIGH        YES, DETERMINE HIGHEST ADDRESS    38150021
         C     RPARAM,SECPHIGH                                     USED 38200021
         BC    3,ALL041                                                 38250021
         L     RPARAM,SECPHIGH                                          38300021
ALL041   STC   RPARAM,ALIGNTST                                          38350021
         TM    ALIGNTST,LOWZEROS      ALIGN                             38400021
         BC    8,ALL042                                                 38450021
         SRL   RPARAM,3                                                 38500021
         LA    RPARAM,1(0,RPARAM)                                       38550021
         SLL   RPARAM,3                                                 38600021
ALL042   ST    RPARAM,FFCADR                                            38650021
         L     R0,MAINGOT                                               38700021
         A     R0,MAINLEN                                               38750021
         SR    R0,RPARAM                                                38800021
         FREEMAIN R,LV=(0),A=(1)                                        38850021
ALL043   XC    CSNO(4),CSNO        ZERO OUT SCRATCH LOCATION            38900021
         MVI   ALL010SW+1,X'30'      RESET SWITCH                       38950021
         B     ALLOCEND            LEAVE ALLOCATE ROUTINE               39000021
ALL050   SR    RWORK2,RWORK2          RESET REGISTER                    39050021
         BXH   TABLLIST,RINDEX,ALL010 LOOP                              39100021
ALL060   IC    RWORK6,BYTSENTR(TABLLIST) TAKE CARE OF ZEROTH ENTRY      39150021
         SR    RWORK2,RWORK6                                  PROVISION 39200021
         ST    RWORK2,CSNO(RWORK4)                                      39250021
         AR    RWORK2,RWORK6                                            39300021
         B     ALL031                                                   39350021
ALL070   TM    SWITCHES(TABLLIST),X'32'                                 39400021
         BC    1,ALL0702                                                39450021
         CH    NUMBGROS,MAXTKS1                                         39500021
         BC    4,ALL032                                                 39550021
         LH    NUMBGROS,MAXTKS1                                         39600021
         B     ALL032                                                   39650021
ALL0702  CH    NUMBGROS,MAXTKS2    EXCEED 4 TIMES TRACK SIZE            39700021
         BC    4,ALL032            NO--CONTINUE                         39750021
         LH    NUMBGROS,MAXTKS2    YES--RESET TO MAX TRACK SIZE X 4     39800021
         B     ALL032                                                   39850021
         DS    0F                                                       39900021
NORMWT   DC    AL4(ROUNDSIM)  TOTAL WEIGHT W/O OVLY OR HIAR     OY00359 39950001
NORMMIN  DC    AL4(NORMTABS+BUFFERS+ALIGNM)  MIN SPACE NEEDED   OY00359 40000001
OVLAYWT  DC    AL4(ROUNOVLY)  TOTAL WEIGHT WITH OVLY,NO HIAR    OY00359 40050001
OVLAYMIN DC    AL4(OVLATABS+BUFFERS+ALIGNM)  MIN SPACE NEEDED   OY00359 40100001
HIARWT   DC    AL4(ROUNHIAR)  TOTAL WEIGHT WITH HIAR,NO OVLY    OY00359 40150001
HIARCHYM DC    AL4(HIARTABS+BUFFERS+ALIGNM)  MIN SPACE NEEDED   OY00359 40200001
BUFCON   DC    AL4(BUFFERS)                                             40400021
BUFFERS  EQU   9984           MINIMUM BUFFER AREA REQ.                  40450021
ALIGNM   EQU   7                     ALLOWANCE FOR ALIGNMENT            40500021
DATAMAN  EQU   2*1024        SPACE FOR DATA MANAGEMENT AND      OY00359 40550001
*                             STOW WORK AREAS AND ABEND PROC    OY00359 40600001
NONRES   EQU   2048                    SPACE FOR NONRESIDENT ACCESS     40650021
*                                      METHOD ROUTINES                  40700021
MAXTKS1  DC    AL2(8184)                                                40750021
MAXTKS2  DC    AL2(32736)                                               40800021
TOTWT    DS    1F                     TOTAL WEIGHT                      40850021
MAINREQ  DC    X'00000000'         REQUEST FOR GETMAIN                  40900021
MAXSTOR  DC    X'01000000'    MAXIMUM MAIN STORAGE - 16384K OR LESS     40950021
MAINGOT  DC    2A(0)                  ADDRESS OF MAIN STORAGE GOTTEN    41000021
MAINLEN  EQU   MAINGOT+4              LENGTH OF SAME                    41150021
CON88K   DC    X'00016000'    CONSTANT OF 88K                           41200021
CON60K   DC    AL4(42*1024)                                      S01904 41250021
CON32K   DC    AL4(25*1024)                                      S01904 41300021
LLEGF64  DC    AL4(28*1024+DATAMAN)  SPACE FOR LE AND SCP       OY00359 41350001
MAXENTRS DC    X'00007FFF'         MAXIMUM ENTRIES BEF NEG SIGN GOES ON 41600021
DEFVCON  DC    V(HEWLFDEF)    ADDRESS OF CSECT CONTAINING DEFAULTS      41650021
         EJECT                                                          41700021
         DS    0H                     FOR ALIGNMENT                     41750021
*                SSAAEEBBWWWWMMMM SWS,ADDR,ENTS,BYTES,WGT,MINIMUM  NO.  41800021
TABLE    DC    X'78347A0100300480'  1 TEXT I/O TABLE   BYTES/ENT IS 4   41850021
SGTBSLOT EQU   *                                                        41900021
         DC    X'F31C800100000100'  2 SEGTAB1                           41950021
         DC    X'713C7E05001E01F4'  3 DELINK                            42000021
         DC    X'30388201000000A0'  4 ALIAS                             42050021
         DC    X'3884000100000008'  5 8 BYTES PRIOR TO HESD             42100021
         DC    X'3800700800B00AF0'  6 HESD                              42150021
         DC    X'32487607005407E0' 7  TEXT NOTE LIST 2                  42200021
         DC    X'324C7809006C0708' 8  RLD NOTE LIST 2                   42250021
         DC    X'442C000100000104'  9 INPUT RLD BUFFERS-1ST PASS        42300021
         DC    X'49407010016015E0' 10 CESD                              42350021
HIARSLOT EQU   *                                                        42400021
         DC    X'635800010016015E' 11 HIAR                              42450021
         DC    X'1454000100000300' 12 OUTPUT RLD BUFFERS-2ND PASS       42500021
         DC    X'6A247207001501F8' 14  TXT NOTE LIST 1                  42550021
         DC    X'6A287409001B01C2' 15  RLD NOTE LIST 1                  42600021
         DC    X'7400000100000004' 16 RENUMBERING TABLE PREFIX          42650021
         DC    X'7530000400580578' 17 RNT + RLC TABLES                  42700021
ENTRLIST DC    X'9444880600120558' 18A  ENTRY LIST                      42750021
CALLSLST DC    X'E4207C0100140558' 18B  CALLS LIST                      42800021
         DC    X'FF'               19 END FLAG                          42850021
*                                                                       42900021
*              XXXX      FORMAT OF HIGH ORDER DIGIT                     42950021
*              11XX      OVLY 1ST PASS                                  43000021
*              1X1X      OVLY INT PASS                                  43050021
*              1XX1      OVLY 2ND PASS                                  43100021
*              01XX      NO-OVLY 1ST PASS                               43150021
*              0X1X      NO-OVLY INT PASS                               43200021
*              0XX1      NO-OVLY 2ND PASS                               43250021
*                                                                       43300021
ALIGNTST DS    1C                     BYTE USED FOR ALIGNMENT           43350021
DEVSAVE  DS    0F                                                       43400021
DEVCODE  DC    F'0'           DEV CODE FROM UCB                         43450021
DEVMAXBS DC    F'0'           MAX  BLK SIZE ACCEPTED                    43500021
LINMIN   DC    H'0400'                                                  43550021
PRTMIN   DC    H'0608'                                                  43600021
LININT   DC    H'0800'                                                  43650021
PRTINT   DC    H'1216'                                                  43700021
LINMAX   DC    H'3200'                                                  43750021
PRTMAX   DC    H'4840'                                                  43800021
LINSIZE  DC    H'0'                                                     43850021
PRTSIZE  DC    H'0'                                                     43900021
TXT18K   DC    H'18432'                                                 43950021
TXT13K   DC    H'13312'                                                 44000021
TXT12K   DC    H'12288'                                                 44050021
TXT7P5K  DC    H'7680'       7.5K FOR 3340 DEVICE                XM5473 44060003
TXT6K    DC    H'6144'                                                  44100021
TXT5K    DC    H'5120'                 CONSTANT FOR RLD BUF SIZE        44150021
TXT4K    DC    H'4096'                                                  44200021
TXT3K    DC    H'3072'                                                  44250021
TXT2K    DC    H'2048'                                                  44300021
TXT1K    DC    H'1024'                                                  44350021
TXT10K   DC    H'10240'                                                 44400021
TXT20K   DC    H'20480'                                                 44450021
RLDBUFSZ DC    H'0'           SIZE OF RLD BUFS 1ST P-OUT  2ND P-IN      44500021
K4       DC    H'4'                                                     44550021
K8       DC    H'8'                                                     44600021
WEIGHTHR DC    X'0016'                                                  44650021
MINBTHR  DC    X'015E'                                                  44700021
DUMHRWT  DC    X'0000'                                                  44750021
DUMHRMN  DC    X'0008'                                                  44800021
SG200    DC    X'00C8'                                                  44850021
SG256    DC    X'00FF'                MAX SEGMENT COUNT        @ZA05444 44900037
TXTSIZE  DC    H'0'                                                     44950021
DIFFSAVE DS    H                       AREA FOR SAVE OF UNUSED PRTBUF   45000021
FSTPHIGH DS    3F                     CURRENT HIGH ASSIGNED ADDRESSES   45050021
SECPHIGH EQU   FSTPHIGH+8                                               45100021
INTPHIGH EQU   FSTPHIGH+4                                               45150021
MASK2K   DC    X'FFFFF800'         MASK TO SET A VALUE TO MULT OF 2048  45200021
ALIGNX   DC    X'FFFFFFF8'             CONST. FOR  DBLE WORD ALIGNMENT  45250021
SWITCH   DC    X'00000000'                                              45300021
*              BIT 0     IF ON PROVIDE 2-2560 BYTE RLD BUFFERS          45350021
*              BITS 1-7 SPARE                                           45400021
         EJECT                                                          45450021
ALLOCEND EQU   *                   END OF ALLOCATE ROUTINE              45500021
TESTLIN  CLC   MAXBF(2),HEWLCRBN+16   COMPARE SYSLIN BLKFC              45550021
         BC    11,GOODLIN                    EXIT IF VALID BLKFCTR      45600021
         MVC   LINECNT+1(1),SPACES     SET LINE COUNT                   45650021
         LA    R0,BADLIN                FETCH MESSAGE NO                45700021
         L     SYSBRNCH,ERDIG      ADDR OF ERROR RTN                    45750021
         BALR  SYSRET,SYSBRNCH          PRINT THE ERROR MSG AND EXIT    45800021
GOODLIN  EQU   *                                                        45850021
         MVI   IDRSWS,SWSOFF           INIALIZE IDR SWITCHES TO  S21016 45860021
*                                      ALL ZEROES                S21016 45870021
         MVI   APTSW3,SWSOFF           INITIALIZE TO ZEROES      S01904 45874021
         MVI   APTSW4,SWSOFF           INITIALIZE TO ZEROES      S01904 45876021
         MVC   IDRTREND(PTRLEN),IDRTRTAB  INIALIZE ADDRESS OF    S21016 45880021
*                                      NEXT AVAILABLE BYTE IN    S21016 45890021
*                                      IDR TRANSLATOR DATA TABLE S21016 45892021
*                                      TO FIRST BYTE OF TABLE    S21016 45894021
         MVC   IDRTIEND(PTRLEN),IDRTITAB INITIALIZE ADDRESS OF  OX04245 45894402
*                                      NEXT AVAILABLE BYTE IN   OX04245 45894802
*                                      IDR TRANSLATOR ID TABLE  OX04245 45895202
*                                      TO FIRST BYTE OF TABLE   OX04245 45895602
         MVC   IDRUDEND(PTRLEN),IDRUDTAB  INIALIZE ADDRESS OF    S21016 45896021
*                                      NEXT AVAILABLE BYTE IN    S21016 45898021
*                                      IDR USER - DATA TABLE     S21016 45898421
*                                      TO FIRST BYTE OF TABLE    S21016 45898821
         MVC   IDRZPEND(PTRLEN),IDRZPTAB  INIALIZE ADDRESS OF    S21016 45899221
*                                      NEXT AVAILABLE BYTE IN    S21016 45899621
*                                      IDR IMASPZAP DATA TABLE   S21016 45899721
*                                      TO FIRST BYTE OF TABLE    S21016 45899821
         NI    NEWSW,X'86'        INIT. NEWSW                           45900021
         NI    APT4,X'C3'              INIT. PAGE/ORDER SWITCHES YM2649 45910000
         MVC   EPSM(8),BLANKS      CLEAR EP SYMBOL TO BLANKS            45950021
         MVC   PDSE18(8),BLANKS    CLEAR MEMBER NAME OF MODULE TO BLNKS 46000021
         MVC   PDSE7(2),SAVATS     RESTORE                              46050021
         MVC   APT0(1),SAVATS+2    ATTRIBUTES                           46100021
         NI    APTSWS,TSO              CLEAR SWITCHES, NOT TSO          46150021
         OI    APTSWS,DCBS         INIT. APTSWS                         46200021
         TM    APTEMP+8,X'80'           MEMBER NAME RECEIVED            46250021
         BZ    AROUND                   NO                              46300021
         L     SYSBRNCH,DCBADRS2        GET SYSLMOD DCB                 46350021
         L     SYSBRNCH,44(SYSBRNCH)    DEB ADDRESS                     46400021
         LA    SYSBRNCH,0(SYSBRNCH)     CLEAR HI-ORDER BITS             46450021
         TM    8(SYSBRNCH),X'80'        IS DISP NEW OR MOD              46500021
         BO    AROUND                   YES.  DON'T SET BIT FOR         46550021
         OI    APTEMP+8,X'10'           STOW WITH REPLACE               46600021
AROUND   MVC   PDSE1(8),APTEMP          SET MEMBER NAME RECEIVED IN APT 46650021
*                                                                       46700021
         OC    APT3(1),APTEMP+8    MOVE NAME RCD BIT TO APT             46750021
         OI    APT1,X'04'                                               46800021
         MVI   CSNO+1,1            SET CURRENT SEGMENT TO 1             46850021
         MVC   LINECNT+1(1),SPACES  SET LINE COUNT                      46900021
         MVI   LSTS,X'01'                                               46950021
         MVC   ENRLD2X(2),K256+2   MOVE INPUT RLD BUF SIZE TO APT       47000021
         TM    INTERN1,1                                                47050021
         BC    1,ABENT                                                  47100021
         TM    NEWSW,FRSTIME       SEE IF FIRST TIME IN INT             47150021
         BC    1,SECOND            YES - THEN FALL THRU                 47200021
         OI    NEWSW,X'80'         SET BIT ON                           47250021
         L     REG9,TXTBFEND       GET ADDR OF NORM TABLES              47300021
SETEXIT  EQU   *                                                        47350021
         L     REG10,FFCADR        GET END ADDR OF NORM TABLES          47400021
         LA    RWORK3,EXIT         FETCH ADDRESS OF 1ST TIME EXIT       47450021
CLEARSUB EQU   *                                                        47500021
         L     SYSRET,K256         FETCH CONSTANT 256 FOR TEST          47550021
         LR    REG3,REG9           FETCH STARTING ADDR OF TABLES        47600021
         SR    REG4,REG4           CLEAR A REGISTER                     47650021
         ST    REG4,0(REG3)             AND PLACE ZEROES INTO           47700021
         ST    REG4,4(REG3)             FIRST 8 BYTES OF THE FIELD      47750021
         LR    REG4,REG10          FETCH ENDING ADDR OF TABLES          47800021
         SR    REG4,REG3                CALC LENGTH OF TABLES           47850021
         SH    REG4,K8             REDUCE BY 8 FOR ORIGINAL STORES      47900021
         CR    REG4,SYSRET              SEE IF GR TH 256                47950021
         BNH   OUTLOOP                  BR  IF GR TH 256                48000021
COMPR    MVC   8(256,REG3),0(REG3) START OF LOOP--  MOVE 256 CHARS      48050021
         AR    REG3,SYSRET                          INC ADDRESS         48100021
         SR    REG4,SYSRET                          DEC LENGTH          48150021
         CR    REG4,SYSRET                          SEE IF GR TH 256    48200021
         BH    COMPR               END OF LOOP----  BR IF GR TH 256     48250021
OUTLOOP  BCTR  REG4,0                   SUB 1 FOR MVC                   48300021
         EX    REG4,LASTMVC             DO LAST MVC                     48350021
         BCR   15,RWORK3           NOW LEAVE SUBROUTINE                 48400021
EXIT     L     SYSBRNCH,INPUT      FETCH ADDRESS OF HEWLFINP            48450021
         BALR  SYSRET,SYSBRNCH     LEAVE INITIALIZER                    48500021
SECOND   EQU   *                                                        48550021
         L     REG9,TXTBFEND           GET ADDR OF TXTIO TABLE          48600021
         L     REG10,FFCADR            GET END ADDR OF TABLES           48650021
         BAL   RWORK3,CLEARSUB     BR TO ENTER CLEAR SUBR               48700021
         L     REG9,RECNT          GET ADDR OF RENUMB TABLE             48750021
         SH    REG9,K4             TAKE 4 MORE BYTES FOR RNT PREFIX     48800021
         BC    15,SETEXIT          NOW GO TO SET RET ADDRESS            48850021
*                                                                       48900021
LASTMVC  MVC   8(1,REG3),0(REG3)   FOR THE LAST MOVE OF LS TH 256 CHARS 48950021
*                                                                       49000021
         USING *,15                                                     49050021
         USING IHADCB,REG1                                              49100021
HEWLXIT2 ST    REG5,SAVEIT             SAVE REG                         49150021
         L     REG5,ADDRIND            ADDRESS OF INDICATOR             49200021
         NI    0(REG5),X'F0'           SET NOT ACTIVE                   49250021
         NI    DCBBUFNO,X'00'      ZERO OUT BUFFER NUMBER FIELD         49300021
         TM    APTSWS,X'10'             TEST FOR DCBS OVERRIDE  SA47971 49400000
         BNO   XIT2A                    BRANCH IF NOT           SA47971 49450000
         NC    OVERRIDE,OVERRIDE        IS OVERRIDE SPECIFIED   OX00127 49460001
         BZ    XIT2A                    BRANCH IF NOT           OX00127 49470001
         CLC   EXITTEST,OVERRIDE        COMPARE TO BLOCK SIZE   SA47971 49500000
         BL    XIT2A                    BRANCH IF USABLE 47971,@ZA07605 49550037
         CLC   DCBBLKSI(2),OVERRIDE     IS OVERRIDE USUABLE     OX00127 49560001
         BH    XIT2A                    BRANCH IF NOT          @ZA33269 49570037
         MVC   EXITTEST,OVERRIDE        USE DCB OVERRIDE        SA47971 49600000
         MVC   DCBBLKSI(2),OVERRIDE     UPDATE DSCB     OX03511,OY03041 49610002
XIT2A    TM    PDSE8,X'80'              TEST FOR DC OPTION      SA47971 49650000
         BO    XIT2B                    BRANCH IF NOT APPLIC    SA47971 49700000
         CLC   EXITTEST,BUF1K           COMPARE TO 1024         SA47971 49750000
         BNH   XIT2B                    BRANCH IF USABLE        SA47971 49800000
         MVC   EXITTEST,BUF1K           USE 1024 FOR BLK SIZE   SA47971 49850000
XIT2B    L     REG5,4(REG5)             POINT TO JFCB          @ZA33269 49900037
         TM    JFCBIND2(REG5),X'C0'     NEW DATA SET?          @ZA33269 49910037
         BNO   TESTMIN                  IF NOT, BRANCH         @ZA33269 49920037
         MVC   DCBBLKSI(2),EXITTEST     IF SO, SET BLOCK SIZE   SA47971 49930037
TESTMIN  EQU   *                                                 YM5584 49940037
         L     REG5,SAVEIT              RESTORE REGISTER 5     @ZA33269 49950037
         TM    PDSE7,SCTR               TEST SCTR SPECIFIED      YM5584 50012001
         BO    SCTRMIN                  USE SCTR MINIMUM         YM5584 50014001
         CLC   DCBBLKSI(2),MIN256       TEST FOR MINIMUM BLKSIZE YM5584 50020001
         BL    SETMIN                   GO SET MINIMUM BLKSIZE   YM5584 50030001
         BR    REG14                    RETURN                   YM5584 50040001
SETMIN   EQU   *                                                 YM5584 50042001
         MVC   DCBBLKSI(2),MIN256       SET MINIMUM BLKSIZE      YM5584 50044001
         BR    REG14                    RETURN                  SA47971 50050000
SCTRMIN  EQU   *                                                 YM5584 50060001
         CLC   DCBBLKSI(2),MINSCTR      TEST FOR MINBLK FOR SCTR YM5584 50070001
         BL    SETSCTR                  GO SET SCTR MIN BLKSIZE  YM5584 50080001
         BR    REG14                    RETURN                   YM5584 50090001
SETSCTR  EQU   *                                                 YM5584 50092001
         MVC   DCBBLKSI(2),MINSCTR      SET MIN BLKSIZE FOR SCTR YM5584 50094001
         BR    REG14                    RETURN                   YM5584 50096001
SCTR     EQU   X'04'                    MASK FOR SCTR TEST       YM5584 50098001
MINSCTR  DC    H'1024'                  MIN BLKSIZE FOR SCTR     YM5584 50098401
MIN256   DC    H'256'                   MINIMUM SYSLMOD BLKSIZE  YM5584 50100001
OVERRIDE DC    H'00'                                                    50250021
EXITTEST DC    H'00'  BLOCK SIZE FROM DEVTYPE OR OPEN EXIT CALC SA47971 50350000
BUF1K    DC    H'1024'                                                  50400021
SAVEIT   DC    F'0'                                                     50450021
ADDRIND  DC    A(APTXLIST)                                              50500021
         DROP  15                                                       50550021
         DROP  REG1                                                     50600021
ATOPTADD DC    V(HEWLFOPT)                                              50650021
BLANKS   DC    C'        '         8 BLANKS                             50700021
K256     DC    F'256'                                                   50750021
K3K      DC    F'3072'                                                  50800021
K44K     DC    F'45056'                                                 50850021
ADRAPTEX DC    A(APTEXLST)       ADR OF EXIT LIST                       50900021
APTADD   DC    A(HEWLFAPT)                                              50950021
ABENT    LH    ZERO,ERROR                                               51000021
         LA    REG1,DDSAV                                               51050021
         L     SYSBRNCH,ERDIG      ADDR OF ERROR ROUTINE                51100021
         BCR   15,SYSBRNCH                                              51150021
ABENT2   L     BASE,=A(HEWLFINT+6)     ESTABLISH ADDRESSABILITY         51200021
         USING HEWLFINT+6,BASE                                          51250021
         L     0,CORELEN          LENGTH OF STORAGE FROM GETMAIN        51300021
         L     1,COREADR    ADDRESS OF THE FIRST BYTE                   51350021
         FREEMAIN R,LV=(0),A=(1)  FREE ALLOCATED CORE                   51400021
ABENT2A  WTO   'IEW0984 ERROR-SYSPRINT BLOCKSIZE EXCEEDS MAXIMUM-LINKEDX51450021
               IT PROCESSING TERMINATED.',ROUTCDE=11                    51500021
ABENT1   EQU   *                                               @ZA07598 51512037
         L     SYSLMOD,DCBADRS2                                @ZA07598 51532037
         OI    CIND2(SYSLMOD),STOWBIT                          @ZA07598 51552037
         LA    1,DCBADRS4                                      @ZA07598 51572037
         TM    NEWSW,TERM                                      @ZA07598 51592037
         BZ    TSO4                                            @ZA07598 51612037
         LA    1,DCBADRS1                                      @ZA07598 51632037
TSO4     CLOSE MF=(E,(1))                                      @ZA07598 51652037
         TM    APTSW2,SHRSYSMD                                 @ZA07598 51672037
         BNO   ABENT1A                                         @ZA07598 51692037
         DEQ   (ENQNAME,MINOR,44,SYSTEMS)                      @ZA07598 51712037
         B     ABENT1B                                         @ZA07598 51732037
ABENT1A  TM    APTSW2,ENQBIT                                   @ZA07598 51752037
         BO    ABENT1B                                         @ZA07598 51772037
         DEQ   (ENQNAME,MINOR,44,SYSTEM)                       @ZA07598 51792037
ABENT1B  LA    SYSBRNCH,16                                     @ZA07598 51812037
         LM    13,14,SYSRTN                                    @ZA07598 51832037
         LM    0,12,20(13)                                     @ZA07598 51852037
         BCR   15,14                                           @ZA07598 51872037
ABENT10  WTO   'IEW0994 ERROR - SYSPRINT DD CARD MISSING--LINKAGE EDITOX52050021
               R PROCESSING TERMINATED.',ROUTCDE=11                     52100021
         B     ABENT1                  BRANCH TO DEQUE                  52150021
REGSAVE1 DC    F'0'                                                     52200021
DCBADRS1 DC    X'0F'               OUTPUT FLAG                          52250021
         DC    AL3(HEWLTMDB)       ADDRESS OF SYSTERM                   52300021
DCBADRS4 DC    X'0F'               OUTPUT FLAG                          52350021
         DC    AL3(HEWLCPDB)       ADDRESS OF SYSPRINT                  52400021
         DC    X'00'               INPUT FLAG                           52450021
         DC    AL3(HEWLCSDB)       ADDRESS OF SYSLIN                    52500021
DCBADRS2 DC    X'8F'               OUTPUT FLAG AND END FLAG             52550021
         DC    AL3(HEWLCMDB)       ADDRESS OF SYSLMOD                   52600021
DCBADRS3 DC    A(HEWLCUDB)         ADDRESS OF SYSUT1                    52650021
INPUT    DC    V(HEWLFINP)                                              52700021
PRNTAD   DC    V(HEWLEPNT)                                              52750021
INDDNMAD DC    A(INDDNAME)                                       A47001 52760000
TEMP     DS    F                                                        52800021
INITEXAD DS    F           EXTRACT WILL PUT @ OF TSO FIELD HERE         52850021
*                                      EXTRACT WILL PUT @ OF    OY00130 52860001
*                                      TIOT HERE                OY00130 52870001
ADDRTIOT EQU   INITEXAD                TIOT ADDR FROM EXTRACT   OY00130 52880001
ADDRUCB  EQU   ADDRTIOT                UCB ADDR FROM TIOT       OY00130 52890001
XTRTSAVE DS    F       SAVE AREA FOR REG USED AFTER EXTRACT FOR TSO     52900021
SYSLINNM DC    C'SYSLIN  '                                              52950021
SYSUT1NM DC    C'SYSUT1  '                                              53000021
SYSLMDNM DC    C'SYSLMOD '                                              53050021
SYSPRTNM DC    C'SYSPRINT'                                              53100021
SYSLIBNM DC    C'SYSLIB  '                                              53150021
SYSTRMNM DC    C'SYSTERM '      STANDARD DDNAME FOR 12TH ENTRY          53200021
LENGTH   DC    H'96'            LENGTH OF DDNAMELIST IN TSO MODE        53250021
ACTVUT1  DC    C'SYSUT1  '                                              53300021
ACTVLMOD DC    C'SYSLMOD '                                              53350021
ERROR    DC    X'241C'                                                  53400021
INTERN1  DC    X'00'                                                    53450021
DDSAV    DS    8X'00'                                                   53500021
APTEMP   DC    C'        '                PDSEI TEMP STORAGE            53550021
         DC    X'00'                     APT0+3 TEMP STORAGE            53600021
         DS    0H                                                       53650021
M05      DC    H'05'                                                    53700021
M10      DC    H'10'                                                    53750021
M40      DC    H'40'                                                    53800021
PRNTNAME DS    2F                                                       53850021
ANSWER   DS    2F                                                       53900021
MSGFOUR  DC    A(0)                                                     53950021
MSG4     DC    X'09'                                                    54000021
         DC    11C' '                                                   54050021
NAMEDD   DC    C'SYSPRINT DEFAULT BLOCKING USED'                        54100021
         DC    2C' '                                                    54150021
FACTOR   DC    C' 1 - 1'                                                54200021
APFINIT  DC    X'0100'                 INIT VALUE FOR AUTH CODE  Y01048 54210000
         EJECT                                                          54220037
         DCBD  DSORG=(PS,PO)                                            54300021
         EJECT                                                          54350021
TIOT     DSECT                         MAP OF TIOT              OY00130 54360001
         IEFTIOT1                                               OY00130 54370001
UCB      DSECT                                                  OY00130 54372001
         IEFUCBOB                                               OY00130 54374001
         EJECT                                                  SA49330 54380000
*                                                                       54400021
*                                                                       54450021
DEFDSECT DSECT                                                          54500021
DEFIDENT DS    CL4                 THE NAME IDENTIFIER                  54550021
DESPNT   DS    F                   DESIGN POINT                         54600021
DEFV1    DS    F                   DEFAULT VALUE1                       54650021
DEFV2    DS    F                   DEFAULT VALUE2                       54700021
NAME     DS    CL4                 EDITOR NAME                          54750021
*                                                                       54800021
*                                                                       54850021
         HEWAPT                                                         54900021
         END                                                            54950021
./  ADD  SSI=62730942,NAME=HEWLFMAP
         TITLE    'HEWLFMAP  CROSS REFERENCE AND MODULE MAP'            00100021
HEWLFMAP CSECT                                                          00200021
*                                                                     * 00300021
*THIS CSECT IS CALLED IF MAP OR XREF IS SPECIFIED.                    * 00400021
*IT PRODUCES THE REQUESTED DATA.                                      * 00500021
*                                                                     * 00600021
*ENTRY ONLY AT HEWLFMAP BY ANY MEANS                                  * 00700021
*                                                                     * 00800021
*INPUT: SYSLMOD LOAD MODULE                                           * 00900021
*                                                                     * 01000021
*OUTPUT: MAP ON PRINTER                                               * 01100021
*                                                                     * 01200021
*EXIT: NORMAL RETURN                                                  * 01300021
*                                                                     * 01400021
*XCESDTAB IS THE ADDRESS OF THE TABLE WHERE COMPOSITE ESD ENTRIES     * 01500021
*ARE COLLECTED (16-BYTE ENTRIES).                                     * 01600021
*XADDCESD IS THE ADDRESS OF THE TABLE OF ADDRESSES FROM ESD ENTRIES   * 01700021
*FOR THE PRESENT SEGMENT (4-BYTE ENTRIES).                            * 01800021
*XAD2CESD IS THE ADDRESS OF THE TABLE CORRESPONDING TO XADDCESD CON-  * 01900021
*TAINING RESPECTIVE ENTRY NUMBERS (2-BYTE ENTRIES).                   * 02000021
*RLDIN IS RLD INPUT BUFFER.                                           * 02100021
*PRLIN IS PRINT OUTPUT BUFFER.                                        * 02200021
*PRHDR IS SAVED HEADER BUFFER.                                        * 02300021
*                                                                     * 02400021
*REUSABLE                                                             * 02500021
*                                                                     * 02600021
R0       EQU   0                                                        02700021
R1       EQU   1                                                        02800021
RPAR     EQU   1                                                        02900021
RJ       EQU   1                                                        03000021
APT      EQU   2                                                        03100021
RD       EQU   3                                                        03200021
RENTRY   EQU   4                                                        03300021
RI       EQU   4                                                        03400021
RPLACE   EQU   4                                                        03500021
RF       EQU   5                                                        03600021
RST      EQU   5                                                        03700021
RST2     EQU   6                                                        03800021
RG       EQU   6                                                        03900021
RWORK    EQU   7                                                        04000021
RH       EQU   7                                                        04100021
RIN      EQU   7                                                        04200021
RA       EQU   8                                                        04300021
RB       EQU   9                                                        04400021
RE       EQU   10                                                       04500021
RC       EQU   11                                                       04600021
RBASE    EQU   12                                                       04700021
RSAVREG  EQU   13                                                       04800021
R14      EQU   14                                                       04900021
R15      EQU   15                                                       05000021
         EXTRN HEWLCMDB                                                 05100021
         EXTRN APTXLIST                ADDRESS OF OPEN EXIT LIST        05200021
         ENTRY JFCBADDR                ADDRESS OF SYSLMOD JFCB          05300021
ALBIT    EQU   X'80'                                                    05400021
XREFBIT  EQU   X'40'                 BIT SET FOR XREF OPTION            05500021
OVERBIT  EQU   X'20'                 OVERLAY BIT                        05600021
ESDIND   EQU   X'20'                 ESD INDICATOR                      05700021
PRIVCODE EQU   X'04'                 PRIVATE CODE                       05800021
HEXTEN   EQU   X'10'                 HEXADECIMAL TEN FOR CONVERSION     05900021
DECTEN   EQU   X'0A'                 DECIMAL TEN FOR CONVERSION         06000021
PRIVDEL  EQU   X'14'                 CODE FOR ENTAB AND SEGTAB          06100021
NEVCALL  EQU   X'06'                 NEVER CALL BITS                    06200021
CUMLNREQ EQU   X'30'                    FLAG FOR CUM PSEUDO REG LN REQ  06300021
EOMOD    EQU   X'08'                 END OF MODULE BIT                  06400021
SKIP     EQU   X'0B'                   IMMEDIATE SPACE                  06500021
SINGLE   EQU   X'09'                   PRINT AND SPACE                  06600021
DOUBLE   EQU   X'11'                   PRINT AND SPACE 2                06700021
TRIPLE   EQU   X'19'                   PRINT AND SPACE 3                06800021
SKIP2    EQU   X'13'                   IMMEDIATE SPACE 2                06900021
SKIP3    EQU   X'1B'                   IMMEDIATE SPACE 3                07000021
RESTORE  EQU   X'8B'                   SKIP TO CHANNEL 1                07100021
TSO      EQU   X'80'                   TSO SWITCH IN APTSWS             07200021
         USING *,R15                 SET UP BASE ADDRESSABILITY         07300021
         USING APTDSECT,APT       ESTABLISH ADDRESSABILITY FOR APT      07400021
START    EQU   *                     FOR LATER STATEMENT OF BASE ADDR   07500021
         BC    15,MODID+6              BRANCH AROUND MODULE IDENT       07600021
MODID    DC    C'05MMAP'                                                07700021
         NC    ENCDC(2),ENCDC          TEST FOR NO ESDS                 07800021
         BC    7,MAP000                                                 07900021
         BR    R14                     RETURN                           08000021
MAP000   EQU   *                                                        08100021
         OI    NEWSW,X'10'             INDICATE MAP/XREF IN OPERATION   08200021
         STM   R14,RBASE,SPACES+12 SAVE REG                             08300021
         LR    RBASE,R15             LOAD PERMANENT BASE                08400021
         USING START,RBASE           PROPER USING                       08500021
         DROP  R15                   OLD BASE                           08600021
         LA    RSAVREG,REGSA      LOAD SAVE AREA ADDRESS                08700021
         EJECT                                                          08800021
*                                                                       08900021
*        THIS PROGRAM PRODUCES A MEMORY MAP AND A CROSS REFERENCE       09000021
*        TABLE AS SUPPLEMENTARY OUTPUT FROM THE LINKAGE EDITOR          09100021
*                                                                       09200021
         TM    APTSWS,TSO          TSO MODE?                            09300021
         BZ    TSO1               NO - BRANCH                           09400021
         LA    RA,40               CHANGE LINE COUNTS                   09500021
         STH   RA,COUNT                                                 09600021
         LA    RA,20(RA)                                                09700021
         STH   RA,COUNT2                                                09800021
TSO1     LH    RA,ENCDC            NUMBER OF CESD ENTRIES               09900021
         LA    RA,20(0,RA)             ADD SAFETY FACTOR                10000021
         TM    NEWSW,X'40'             IS ENTRY FROM INTERMEDIATE       10100021
         BC    8,ALLOC                 NO--DO GETMAIN FOR CESD          10200021
         L     R1,CHESD                YES--USE CESD IN CORE            10300021
         LA    R1,16(0,R1)             INCREMENT TO FIRST ENTRY         10400021
         B     ALLOCA                                                   10500021
ALLOC    LH    R0,ENCDX                MAXIMUM NUMBER OF ENTRIES        10600021
         SLL   R0,4                  MULTIPLY BY SIXTEEN                10700021
         ST    R0,SAVMAIN            SAVE LENGTH OF AREA OBTAINED       10800021
         L     R1,CHESD                USE CESD FOR TABLES              10900021
ALLOCA   ST    R1,XCESDTAB             STORE ADDRESS OF CESD            11000021
         LH    R1,ENR1C                NO. OF ENTRIES IN RLD NOTELIST   11100021
         MH    R1,RLDNTSZ              TIMES BYTES PER ENTRY            11200021
         L     R0,RNT1                 INITIALIZE SAVRLDNT              11300021
         AR    R1,R0                                                    11400021
         ST    R1,RLDNTEND             SAVE END ADDRESS                 11500021
         SH    R0,RLDNTSZ              ONE ENTRY BEFORE BEGINNING       11600021
         ST    R0,SAVRLDNT                                              11700021
         LM    R0,R1,HEWLCRBB+4        ADDRESSES OF SYSLIB OBJ BUFFERS  11800021
         CR    R0,R1                   USE LOWER ADDRESS AS START       11900021
         BNH   ALLOCB                       FOR WORK AREA               12000021
         LR    R0,R1                                                    12100021
ALLOCB   ST    R0,XAD2CESD                                              12200021
*                                                                       12300021
*        FIRST, A HEADER IS PUT OUT WITH A SKIP TO ONE.                 12400021
*                                                                       12500021
         MVI   CNTLCH,SKIP2            SKIP TWO LINES                   12600021
         TM    APTSWS,TSO          TSO MODE?                            12700021
         BC    1,MAP0005           YES - BRANCH                         12800021
         MVC   LINCOUNT+1(1),LINECNT+1  INITIALIZE LINE COUNTER         12900021
         CLI   LINCOUNT+1,X'0A'      TEST FOR ROOM ON PAGE              13000021
         BC    3,MAP0005             NO                                 13100021
         MVI   CNTLCH,RESTORE          RESTORE PAGE CHARACTER           13200021
         MVI   LINCOUNT+1,NUMBLINS+2   SET LINE COUNTER                 13300021
MAP0005  EQU   *                                                        13400021
         BAL   R14,CNTRL               TO CARRIAGE CONTROL ROUTNIE      13500021
         TM    APT0,XREFBIT       TEST FOR XREFS                        13600021
         BC    3,PUTHC               PUT XREF HDR                       13700021
         MVC   PRLIN+55(10),TOPHDM   NO  PUT MAP HEADER                 13800021
         B     PUTHEAD               PUT HEADER                         13900021
TOPHDM   DC    C'MODULE MAP'         MAP HEADER                         14000021
TOPHDC   DC    C'CROSS REFERENCE TABLE'                                 14100021
SGHD     DC    C'NAME    ORIGIN  LENGTH  SEG. NO.'                      14200021
SEGHD    EQU   SGHD+24               ADDR OF WORDS SEG. NO.             14300021
NAMLOC   DC    C'NAME   LOCATION'                                       14400021
PUTHC    MVC   PRLIN+49(21),TOPHDC   MOVE IN XREF HEADER                14500021
PUTHEAD  LA    R15,PUTLINS                                              14600021
         L     RD,DCBLMOD            LOAD ADDRESS OF DCB                14700021
         MVI   PRLIN,DOUBLE            PRINT AND SPACE 2                14800021
         BALR  R14,R15               CALL PRINT SUBROUTINE              14900021
         TM    NEWSW,X'40'             IS ENTRY FROM INTERMEDIATE       15000021
         BC    1,L1OUT                 YES--BYPASS READ                 15100021
*                                                                       15200021
*        END OF DATA EXIT IS REPLACED BY SPECIAL ONE FOR THIS CSECT.    15300021
*                                                                       15400021
         MVC   SAVEODAD(3),33(RD)    SAVE END OF DATA ADDRESS           15500021
         MVC   33(3,RD),SPECEOD      LOAD SPECIAL ADDRESS               15600021
MAPPOINT CLOSE ((RD))                CLOSE SYSLMOD FOR OUTPUT           15700021
         TM    JFCBADDR,X'80'          IS SYSLMOD OPEN J REQUIRD        15800021
         BZ    NORMLOPN                NO--BRANCH                       15900021
         GETMAIN EU,LV=200,A=JFCBADDR  GETMAIN AN AREA FOR JFCB         16000021
         L     1,XLSTADDR              GET SYSLMOD EXIT LST ADDR        16100021
         MVC   5(3,1),JFCBADDR+1       JFCB AREA ADDR TO EXT LST        16200021
         RDJFCB ((RD),(INPUT))         ISSUE RDJFCB FOR SYSLMOD         16300021
         L     6,JFCBADDR              LOAD JFCB ADDR INTO REG          16400021
         MVC   44(8,6),PDSE1           MOVE MEM NAME INTO JFCB          16500021
         OI    52(6),X'08'             INHIBT JFCB RETRN TO JOBQ        16600021
         OPEN  ((RD),(INPUT)),TYPE=J   OPEN J SYSLMOD FOR INPUT         16700021
         B     ARNDOPN                 BYPASS NORMAL OPEN               16800021
NORMLOPN OPEN  ((RD))                  OPEN SYSLMOD FOR INPUT           16900021
ARNDOPN  LA    R0,CTTR                 LOAD DCB ADDRESS                 17000021
         POINT (RD),(0)              POINT TO FIRST ESD                 17100021
         L     RIN,XCESDTAB          LOAD INPUT PTR W ADDR OF TBL       17200021
         LR    RST,RIN               SVE START REG                      17300021
MAP001   READ  DECB2,SF,(RD),RLDIN,256  READ RECORD FROM MODULE         17400021
         CHECK DECB2                                                    17500021
         TM    RLDIN,ESDIND          TEST FOR ESD INDICATOR             17600021
L0SW     BC    0,L1OUT               NOP SW SET BY 1ST ESD              17700021
         BC    8,MAP001              LOOP TO READ ANOTHER RECORD        17800021
         MVI   L0SW+1,X'80'          SET SW FOR ESD FOUND               17900021
         LH    RA,RLDIN+6            LOAD NUMBER OF ESD BYTES           18000021
         EX    RA,ESDMVC             EXECUTE MOVE TO ESD TABLE          18100021
         AR    RIN,RA                INCREMENT POINTER                  18200021
         TM    RLDIN,EOMOD           TEST FOR LAST ESD + NO TEXT        18300021
         BC    3,L1OUT               READ NO MORE                       18400021
         B     MAP001                LOOP TO READ AGAIN                 18500021
ESDMVC   MVC   0(0,RIN),RLDIN+8      EXECUTED TO MOVE ESD TO TABLE      18600021
SAVEND   DS    1F                    SAVE LIMIT OF ESDS                 18700021
*                                                                       18800021
*        PROCESS ASSEMBLED ESD ENTRIES                                  18900021
*                                                                       19000021
L1OUT    L     RST,XCESDTAB            ADDRESS OF CESD                  19100021
         NC    ENR1C(2),ENR1C          CHECK FOR NO RLDS                19200021
         BC    7,L1GO                  IF THERE ARE RLDS                19300021
         MVI   L5SW2+1,X'00'         PREVENT XREFS                      19400021
L1GO     LH    RIN,ENCDC               NUMBER OF CESD ENTRIES           19500021
         SLL   RIN,4                   TIMES 16 FOR NUMBER OF BYTES     19600021
         A     RIN,XCESDTAB            ADD START OF TABLE               19700021
         BCTR  RIN,0                   DECREMENT BY ONE                 19800021
         ST    RIN,SAVEND            SAVE                               19900021
         TM    SAVATS,OVERBIT     TEST FOR OVERLAY                      20000021
         BC    3,L1CONT              YES                                20100021
         MVI   L2SW+1,X'00'          PROC ALL ENTRIES                   20200021
         MVC   SEGHD(8),SEGHD-1      BLANK OUT SEG. NO. FROM HDR        20300021
L1CONT   LA    RIN-1,16              LOAD STOPPING FACTOR               20400021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   20500021
*                                                                       20600021
MAP002   EQU   L1CONT                LOOP TO PROCESS A SEGMENT          20700021
*                                                                       20800021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   20900021
         TM    APT0,XREFBIT       TEST FOR CROSS REFERENCES             21000021
L1SW     BC    0,NONEWHDR            SKIP HEADER IF NO XREFS AFTER 1ST  21100021
         MVI   L1SW+1,X'80'          MAKE NOP BRANCH FROM NOW ON        21200021
         MVC   PRHDR+2(117),PRHDR+1  PREVENT LAST HEADER FROM PRINTIN   21300021
         MVC   PRLIN+2(28),PRLIN+1   BLANK OUT POSS RESIDUE             21400021
         MVI   CNTLCH,SKIP             SKIP A LINE                      21500021
         BAL   R14,CNTRL                                                21600021
         LA    R15,PUTLINS             ADDRESS OF PRINT ROUTINE         21700021
         MVC   PRLIN+3(15),CTLSEC                                       21800021
         MVC   PRLIN+41(5),ENTRY     PUT HEADER                         21900021
         TM    APTSWS,TSO          TSO MODE?                            22000021
         BC    1,MAP0025           YES - BRANCH                         22100021
         CLI   LINCOUNT+1,X'05'      TEST FOR BOTTOM OF PAGE            22200021
         BC    3,MAP0025             NO  GO AHEAD AND PRINT             22300021
         MVI   LINCOUNT+1,X'01'      RESET LINE COUNTER FOR SKIP        22400021
MAP0025  EQU   *                                                        22500021
         MVI   PRLIN,DOUBLE            PRINT AND DOUBLE SPACE           22600021
         BALR  R14,R15               CALL SUBR TO PRIT LINE             22700021
         MVC   PRLIN+5(32),SGHD      MOVE IN SEG HEADER                 22800021
         MVC   PRLIN+43(15),NAMLOC                                      22900021
         MVC   PRLIN+63(15),NAMLOC                                      23000021
         TM    APTSWS,TSO          TSO MODE?                            23100021
         BC    1,TEMP              YES - BRANCH                         23200021
         MVC   PRLIN+83(15),NAMLOC                                      23300021
         MVC   PRLIN+103(15),NAMLOC                                     23400021
TEMP     MVI   PRLIN,DOUBLE        PRINT + DOUBLE SPACE                 23500021
         MVC   PRHDR(119),PRLIN        SAVE HEADER FOR NEW PAGE         23600021
         BALR  R14,R15               CALL SUBROUTINE                    23700021
NONEWHDR LA    RENTRY,1              INIT ENTRY COUNTER                 23800021
         L     RB,RNT1                 ADDRESS OF RLD NOTELIST          23900021
         SH    RB,RLDNTSZ              MINUS SIZE OF ENTRY              24000021
         ST    RB,SAVRLDNT                                              24100021
         L     RB,XAD2CESD           INIT ADDR OF 2 BYTE TABLE          24200021
         ST    RB,SAVID                INITIALIZE SAVID TO FIRST        24300021
*                                                                       24400021
*        LOOP TO SELECT ESD ENTRIES FOR THIS SEGMENT                    24500021
*                                                                       24600021
L2        CLI  8(RST),X'0A'                                             24700021
      BE   L2CTL                                                        24800021
       TM   8(RST),X'03'                                                24900021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   25000021
*                                                                       25100021
MAP003   EQU   L2                    LOOP TO SELECT ESD ENTRIES         25200021
*                                                                       25300021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   25400021
         BC    8,PROCSEG             PROCESS SEGTION                    25500021
         TM    8(RST),X'06'          TEST FOR PSEUDO REG  OR NULL       25600021
         BC    3,L2CTL               YES  LOP TO NEXT                   25700021
         TM    8(RST),X'05'          TEST FOR COMMON                    25800021
         BC    3,PROCSEG             YES  TREAT AS SECTION              25900021
         BC    8,L2CTL               EXTERNAL REF = UNRESOLVED          26000021
         LH    RPAR,14(0,RST)        LOAD SECT ENTRY NO. AS PARAMETER   26100021
         BAL   R14,SEGSUBR           CALL SUBR TO LOCATE ENTRY          26200021
         CH    RPAR,SEGNO            IN THIS SEGMENT                    26300021
L2SW     BC    7,L2CTL               NO  LOOP AGAIN                     26400021
         STH   RENTRY,0(0,RB)        STORE ENTRY NUMBER                 26500021
         LA    RB,2(0,RB)            ADVANCE POINTERS                   26600021
L2CTL    LA    RENTRY,1(0,RENTRY)    ADVANCE ENTRY NUMBER               26700021
         BXLE  RST,RIN-1,L2          LOOP CTL STEPS THRU ESDS           26800021
         ST    RB,IDEND                SAVE ADDRESS OF END OF ID LIST   26900021
         C     RB,XAD2CESD           TEST FOR NO ENTRIES                27000021
         BC    8,L5SW2-4             OMIT PROCESSING                    27100021
         EJECT                                                          27200021
*                                                                       27300021
*        THE FOLLO WING PROGRAM SORTS THE ENTRIES FOR                   27400021
*        THIS SEGMENT USING TWO TABLES, ON EOF TWO BYTE ENTRIES         27500021
*        AND  ONE OF 4 BYTE (ADDRESS) ENTRIES ON WHICH THE              27600021
*        SORT IS DONE.                                                  27700021
*                                                                       27800021
*        SORT REGISTER USAGE IS AS FOLLOWS                              27900021
*        RA    ADDRESS OF CURRENT COMPARAND IN FOUR BYTE TABLE          28000021
*        RB    ADDRESS OF LAST ENTRY FULLY SORTED IN FOUR BYTE TABLE    28100021
*        RC    LIMIT FOR SORT = END OF FOUR BYTE TABLE                  28200021
*        RD    COMPARAND                                                28300021
*        RE    PLUS FOUR FOR INCREMENT                                  28400021
*        RF    USED FOR EXCHANGE OF TWO BYTE ENTRIES                    28500021
*        RG    MINUS FOUR FOR DECREMENT                                 28600021
*        RH    LIMIT FOR SORT = START OF FOUR BYTE TABLE                28700021
*        RI    ADDRESS OF CURRENT ENTRY IN TWO BYTE TABLE               28800021
*        RJ    ADDRESS OF TWO BYTE ENTRY FOR LAST FULLY SORTED ITEM     28900021
*                                                                       29000021
         LR    RC,RB                   END OF TWO BYTE TABLE            29100021
         LA    RE,2                    LOAD INCREMENT FOR SORT          29200021
         SR    RC,RE                 SUBTRACT 4 FOR LIMIT               29300021
         BCTR  RC,0                  AND 1 MORE                         29400021
         LNR   RG,RE                 LOAD DECREMENT FOR SORT            29500021
         L     RA,XAD2CESD             ADDR OF 2 BYTE TABLE             29600021
         CR    RA,RC                 TEST FOR BUT ONE ENTRY             29700021
         BC    3,MAP0055             YES  SKIP SORT                     29800021
         L     RI,XAD2CESD           LOAD ADDR OF 2 BYTE TABLE          29900021
         LR    RH,RA                 LOAD START ADDRESS                 30000021
         BCTR  RH,0                  MINUS ONE FOR LIMIT                30100021
SL1      LR    RJ,RI                 LOAD CURRENT ADDR FOR 2BYTE TBL    30200021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   30300021
*                                                                       30400021
MAP004   EQU   SL1                   MAJOR SORT LOOP                    30500021
*                                                                       30600021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   30700021
         LR    RB,RA                 LOAD CURRENT ADDR FOR 4BYTE TBL    30800021
SL2      LH    RD,0(0,RA)              CESD ID                          30900021
         BCTR  RD,0                    MINUS ONE                        31000021
         SLL   RD,4                    TIMES 16                         31100021
         A     RD,XCESDTAB             PLUS CESD ADDRESS                31200021
         L     RD,8(0,RD)              ASSIGNED ADDRESS                 31300021
         LA    RD,0(0,RD)                                               31400021
         LH    RF,2(0,RA)              CESD ID NEXT ENTRY               31500021
         BCTR  RF,0                    MINUS ONE                        31600021
         SLL   RF,4                    TIMES 16                         31700021
         A     RF,XCESDTAB             PLUS ADDRESS OF CESD             31800021
         L     RF,8(0,RF)              LKED ASSIGNED ADDRESS            31900021
         LA    RF,0(0,RF)                                               32000021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   32100021
*                                                                       32200021
MAP005   EQU   SL2                   MINOR SORT LOOP                    32300021
*                                                                       32400021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   32500021
         CR    RD,RF                   COMPARE ADDRESSES                32600021
         BC    4,INORD               IN ORDER                           32700021
         BC    2,XCHANGE             MUST BE EXCHANGED                  32800021
*        MUST NOW TEST FOR SECT FOLLOWING SYMBOL AT SAME LOCATION.      32900021
         ST    RPAR,RPARSAV          SAVE PARAM REGISTER                33000021
         LH    RPAR,2(0,RI)          LOAD ENTRY NUMBER OF LAST AS PAR   33100021
         BAL   R14,SEGSUBR           SUBR TO LOCATE CESD ENTRY          33200021
         L     RPAR,RPARSAV          RESTORE PARAMETER REGISTER         33300021
         TM    8(R15),X'03'          TEST FOR CSECT OR PRIVATE          33400021
         BC    8,XCHANGE             BRANCH IF SO TO EXCHANGE           33500021
         TM    8(R15),X'05'          TEST FOR COMMON                    33600021
         BC    12,INORD              BRANCH TO IN ORDER IF NOT          33700021
XCHANGE  LH    RF,0(0,RI)              LOAD ID OF CESD ITEM             33800021
         MVC   0(2,RI),2(RI)         EXCHANGE ENTRIES                   33900021
         STH   RF,2(0,RI)                                               34000021
         BCTR  RI,0                  DECREMENT POINTER BY 2             34100021
         BCTR  RI,0                                                     34200021
         BXH   RA,RG,SL2             DECR & LOOP BACK THRU TBL TO ST    34300021
INORD    LR    RA,RB                 RELOAD PTR FROM CURRENT            34400021
         LR    RI,RJ                 RELOAD PTR FROM CURRENT            34500021
         LA    RI,2(0,RI)            ADD 2 TO 2BYTE PTR                 34600021
         BXLE  RA,RE,SL1             INCR PTR &LOOP BACK TIL DONE       34700021
         EJECT                                                          34800021
*                                                                       34900021
*        THE FOLLOW ING PROGRAM PROCESSE THE SORTED ESD ENTRIES         35000021
*        FOR A SEGMNENT AND PRODUCES A MEMORY MAP.                      35100021
*                                                                       35200021
MAP0055  SR    RPLACE,RPLACE         ZERO REG FOR ENTRY COUNTER         35300021
         L     RST,XAD2CESD          LOAD PT RTO TOP OF 2BYTE TABLE     35400021
         LR    RST2,RST                                                 35500021
         LA    RC-1,2                  INCREMENT FOR BXLE               35600021
         AR    RC,RC-1               RESTORE LIMIT TO END               35700021
L5       LH    RPAR,0(0,RST)         LOAD ENTRY NUMBER                  35800021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   35900021
*                                                                       36000021
MAP006   EQU   L5                    LOOP THROUGH TABLE ENTRIES         36100021
*                                                                       36200021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   36300021
         BAL   R14,SEGSUBR           CALL SUBR TO LOCATE ENTRY          36400021
         LR    RA,R15                SAVE POINTER                       36500021
         TM    8(R15),X'03'          TEST FOR SECT OR PRIV CODE         36600021
         BC    8,PUTSECT             YES                                36700021
         TM    8(R15),X'05'          \)ST FOR COMMON                    36800021
         BC    12,L5CONT1            NO  CONTINUE                       36900021
         B     PUTSECT               HANDLE AS SECTION                  37000021
PROCSEG  CLC   SEGNO+1(1),12(RST)    TEST FOR THIS SEGMENT NUMBER       37100021
         B     L2SW                  TEST IN LINE                       37200021
L5CONT1  CH    RPLACE,COUNT        LINE FINISHED?                       37300021
         BC    7,L5CONT2             NO  CONTINUE                       37400021
         SR    RPLACE,RPLACE         REZERO REG                         37500021
         LA    R15,PUTLINS           SUBR TO PRINT                      37600021
         BALR  R14,R15               CALL SUBROUTINE                    37700021
L5CONT2  LR    RWORK,RPLACE          COMPUTE PLACE FOR LABEL            37800021
         LA    RPLACE,20(0,RPLACE)   INCR NAME COUNTER                  37900021
         LA    RWORK,PRLIN(RWORK)    ADD ADDR OF PR LINE TO REG         38000021
         L     RPAR,8(0,RA)            LOAD ADDRESS OF THIS ENTRY       38100021
         BAL   R14,BINBCDS           CALL CONVERSION SUBROUTINE         38200021
         LR    R15,RA                RESTORE POINTER                    38300021
         MVC   41(8,RWORK),0(R15)    MOVE IN NAME                       38400021
         MVC   51(6,RWORK),COLLECT   MOVE IN LOC                        38500021
L5CTL    LA    RST,2(0,RST)          ADD 2 TO TABLE POINTER             38600021
         BXLE  RST2,RC-1,L5          INCR PTR & LOOP TIL END            38700021
         LA    R15,PUTLINS           SUBR PUT LINE TO PUT LABELS LEFT   38800021
         BALR  R14,R15               CALL SUBROUTINE                    38900021
         TM    APT0,XREFBIT       TEST FOR CROSS REFS CALL              39000021
L5SW2    BC    3,XREFS               YES  NOP IF NO MORE RLDS           39100021
XRRET    LA    R15,PUTLINS             ADDRESS OF PRINT SUBROUTINE      39200021
         BALR  R14,R15                                                  39300021
         CLI   CUMLEN+5,C' '           TEST FOR ANY CUM LEN REQ         39400021
         BC    8,NXTSEGNO            NO                                 39500021
         MVC   PRLIN+3(58),CUMREQ    DENOTE CUM LENGTH REQUEST          39600021
         BALR  R14,R15               CALL SUBROUTINE                    39700021
         MVC   CUMLEN(6),CUMLEN-1    BLANK OUT CUN LENGTH               39800021
NXTSEGNO CLC   CSNO(2),SEGNO      TEST FOR HIGHEST SEGMENT NUMBER       39900021
         BC    8,CLEANUP             YES  GET FINAL ITEMS               40000021
         LH    RA,SEGNO              LOAD SEGMENT NUMBER                40100021
         LA    RA,1(0,RA)            ADD 1 TO SEGMENT NO.               40200021
         STH   RA,SEGNO              RESTORE                            40300021
         L     RIN,SAVEND            RESTORE INPUT REGISTER             40400021
         L     RST,XCESDTAB          LOAD ADDRESS OF ESD TABLE          40500021
         BC    15,L1CONT             LOOP TO NEXT SEGMENT               40600021
COUNT    DC    H'80'                 RECORD LENGTH - TSO                40700021
COUNT2   DC    H'120'                RECORD LENGTH - MVT                40800021
SAVEODAD DS    3C                    SAVE END OF DATA ADDRESS HERE      40900021
SPECEOD  DC    AL3(XRRET)            ADDR OF ALTERNATE EO DATA EXIT     41000021
         EJECT                                                          41100021
*                                                                       41200021
*        ROUTINE TO PUT OUT SECTION LINE                                41300021
*                                                                       41400021
PUTSECT  LTR   RPLACE,RPLACE         TEST FOR NO LSYMBOLS               41500021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   41600021
*                                                                       41700021
MAP007   EQU   PUTSECT               ROUTINE TO PROCESS SECTION         41800021
*                                                                       41900021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   42000021
         BC    8,L5CONT3             NONE                               42100021
         LA    R15,PUTLINS           SUBR TO PRINT                      42200021
         BALR  R14,R15               CALL SUBROUTINE                    42300021
L5CONT3  L     RPAR,8(0,RA)            LOAD ADDRESS OF SECT             42400021
         LA    R15,BINBCDS           SUBR TO CVT FROM BIN TO BCD        42500021
         BALR  R14,R15               CALL SUBROUTINE                    42600021
         MVC   PRLIN+13(6),COLLECT   MOVE IN ADDRESS                    42700021
         LR    RWORK,RA              RESTORE POINTER TO ENTRY           42800021
         L     RPAR,12(0,RWORK)      LOAD ADDRESS FOR CONVERSION        42900021
         BALR  R14,R15               CALL SUBROUTINE                    43000021
         MVC   PRLIN+21(6),COLLECT   MOVE IN ADDRESS                    43100021
SECCONT  TM    8(RWORK),X'80'        TEST FO LIBRARY                    43200021
         BC    8,*+8                 NO                                 43300021
         MVI   PRLIN+11,C'*'         MOVE IN LIBR DESIGNATUON           43400021
         MVC   PRLIN+3(8),0(RWORK)   MOVE IN NAME                       43500021
         TM    8(RWORK),X'01'        TEST FOR COMMONP                   43600021
         BC    8,NOTCOM              NOT COMMON                         43700021
         CLI   0(RWORK),C' '         TEST FOR BLANK                     43800021
         BC    7,OVERTEST            OMIT OTHER TESTS                   43900021
         MVC   PRLIN+2(9),BLANKCOM   DESIGNATE BLANK COMMON             44000021
         B     OVERTEST              OMIT OTHER TESTS                   44100021
NOTCOM   CLI   8(RWORK),PRIVDEL      TEST FOR SEGTAB OR ENTAB           44200021
         BC    7,SEGTSTS             NO                                 44300021
         MVC   PRLIN+2(6),ENTAB      SET ENTAB DESIGNATOR               44400021
L5SW3    BC    0,SEGPRINT            SW FOR ENTABS FROM NOW ON          44500021
         MVI   L5SW3+1,X'F0'         SET SW FOR ENTAB HENCEFORTH        44600021
         MVC   PRLIN+2(7),SEGTAB     LOAD SEGTAB DESIGNATOR             44700021
         B     SEGPRINT              BYPASS UNNEEEDED TESTS             44800021
SEGTSTS  TM    8(RWORK),PRIVCODE     TEST FOR PRIVATE CODE              44900021
         BC    8,OVERTEST            NO  TEST OVERLAY NEXT              45000021
         MVC   PRLIN+2(9),PRIVATE    PLACE PRIVATE DESIGNATOR           45100021
OVERTEST TM    SAVATS,OVERBIT     TEST FOR OVERLAY                      45200021
         BC    8,PRINTSEC            NO  PRINT LINE                     45300021
SEGPRINT SR    RPAR,RPAR             CLEAR REG FOR PARAMETER            45400021
         IC    RPAR,12(0,RWORK)      INSERT SEGMENT NUMBER              45500021
         CVD   RPAR,COLLECT-1        CONVERT TO DECIMAL                 45600021
         UNPK  COLLECT(5),COLLECT+5(3) UNPACK QUANTITY                  45700021
        MVC   PRLIN+30(3),COLLECT     MOVE INTO PRINT LINE              45800021
         CLI   PRLIN+30,C'0'           CHECK FOR LEADING ZERO           45900021
         BC    7,PRINTSEC              NO                               46000021
         MVI   PRLIN+30,C' '           MOVE IN BLANK                    46100021
         CLI   PRLIN+31,C'0'         TEST FOR LEADING ZERO              46200021
         BC    7,PRINTSEC            NO  CONTINUE                       46300021
         MVI   PRLIN+31,C' '         REPLACE ZERO WITH LEADING BLANK    46400021
PRINTSEC LA    R15,PUTLINS           LOAD ADDR OF SUBR TO PRINT LINE    46500021
         SR    RPLACE,RPLACE         ZERO REGISTER                      46600021
         BALR  R14,R15               CALL SUBROUTINE                    46700021
         BC    15,L5CTL              LOOP TO NEXT TABLE ENTRY           46800021
         DS    0F                    ALIGN TO FULL WORD BOUNDARY        46900021
DCBLMOD  DC    AL4(HEWLCMDB)                                            47000021
WKWORD   DC    AL4(0)                WORD ON BOUNDRY                    47100021
SAVMAIN  DS    2F                    WORDS FOR FREE MAIN MACRO          47200021
XCESDTAB EQU   SAVMAIN+4             ADDRESS OF CESD ENTRIES            47300021
XADDCESD DS    1F                    ADDRESS FO 4 BYTE TABLE            47400021
XAD2CESD DS    1F                    ADDRESS OF 2 BYTE TABLE            47500021
SAVID    DC    F'0'                    POINTER TO CURRENT ID            47600021
SAVRLDNT DC    F'0'                    POINTER TO CURRENT RLD NOTELIST  47700021
RLDNTEND DC    F'0'                    END OF RLD NOTELIST              47800021
IDEND    DC    F'0'                    END OF ID LIST                   47900021
ALIGNF   DC    F'0'                    TO ALIGN ADDRESS TO FULL WORD    48000021
SAVAD    DC    F'0'                    SAVE ADDRESS OF SECTION          48100021
RMASK    DC    X'00007FFF'             MASK OUT HI ORDER BIT R POINTER  48200021
ALIGNH   DC    H'0'                    TO ALIGN COUNT TO HALF WORD      48300021
FIVE     DC    H'5'                    SIZE OF DELINK TABLE ENTRY       48400021
RLDNTSZ  DC    H'9'                    SIZE OF RLD NOTELIST             48500021
SEGNO    DC    AL2(1)                CURRENT SEGMENT NUMBER             48600021
PRIVATE  DC    C'$PRIVATE '          PRIVATE CODE DESIGNATOR            48700021
ENTAB    DC    C'$ENTAB'             ENTAB DESIGNATOR                   48800021
SEGTAB   DC    C'$SEGTAB'            SEGTAB DESIGNATOR                  48900021
BLANKCOM DC    C'$BLANKCOM'          BL ANK COMMON DESIGNATOR           49000021
CTLSEC   DC    C'CONTROL SECTION'                                       49100021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   49200021
         EJECT                                                          49300021
*                                                                       49400021
*        THIS ROUTINE PROCESSE RLD ENRTIES TO GET X REF TABLE           49500021
*                                                                       49600021
XREFS    EQU   *                                                        49700021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   49800021
*                                                                       49900021
MAP008   EQU   XREFS                 ROUTINE TO PROCESS RLDS FOR SEG    50000021
*                                                                       50100021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   50200021
         MVC   PRHDR+2(117),PRHDR+1  PREVENT LAST HEADER FROM PRINTIN   50300021
         MVI   CNTLCH,SKIP2            IMMEDIATE SKIP 2 LINES           50400021
         BAL   R14,CNTRL                                                50500021
         LA    R15,PUTLINS             ADDRESS OF PRINT ROUTNIE         50600021
         MVC   PRLIN+3(30),CRHEAD    PUT IN XREF HEADER                 50700021
         MVC   PRLIN+34(15),CTLSEC                                      50800021
         MVC   PRLIN+51(8),SEGHD                                        50900021
         TM    APTSWS,TSO          TSO MODE?                            51000021
         BC    1,TEMP2             YES - BRANCH                         51100021
         MVC   PRLIN+60(59),PRLIN+1    COMPLETE HEADING                 51200021
TEMP2    LA    RST,PRLIN           ADDRESS OF PRINT LINE                51300021
         MVI   PRLIN,DOUBLE            PRINT AND DOUBLE SPACE           51400021
         MVC   PRHDR(119),PRLIN        SAVE HEADER FOR NEW PAGE         51500021
         BALR  R14,R15               CALL SUBROUTINE                    51600021
         LA    RC-1,4                                                   51700021
         LNR   RA,RC-1               LOAD DECREMENTFOR BXH              51800021
         SR    RA+1,RA+1             ZERO FOR TEST OF BXH               51900021
         TM    NEWSW,X'40'             IS ENTRY FROM INTERMEDIATE       52000021
         BC    8,XL1CONT               NO--CARD ALREADY READ            52100021
MAP009   TM    NEWSW,X'40'             IS ENTRY FROM INTERMEDIATE       52200021
         BC    8,MAP009A               NO--GO READ A RECORD             52300021
MAP0091  L     RD,SAVID                ADDRESS OF CURRENT ID            52400021
         L     RC,SAVRLDNT             ADDRESS OF RLD NOTELIST ITEM     52500021
MAP0090  LA    RC,9(0,RC)              UPDATE TO NEXT RLD NOTELIST      52600021
MAP00901 C     RC,RLDNTEND             IS END OF LIST REACHED           52700021
         BNL   MAP0092                 YES                              52800021
         CLC   0(2,RC),0(RD)           ARE RLDS FOR THIS ID             52900021
         BC    7,MAP0090               NO--CHECK NEXT ENTRY             53000021
         MVC   ALIGNF+1(3),6(RC)       YES--GET ADDRESS OF RLD DATA     53100021
         MVC   ALIGNH(2),4(RC)         AND NUMBER OF BYTES              53200021
         ST    RC,SAVRLDNT             SAVE POINTER TO RLD NOTELIST     53300021
         L     RD,ALIGNF               DISPLACEMENT OF RLD DATA         53400021
         AR    RD,RD                   TIMES 4                          53500021
         AR    RD,RD                                                    53600021
         TM    2(RC),X'10'             IS IT IN BUFFER 2                53700021
         BC    1,MAP0093               YES                              53800021
         A     RD,RLDOUT1              NO--ADD ADDRESS OF BUFFER 1      53900021
         BC    15,MAP0094                                               54000021
MAP0093  A     RD,RLDOUT2              ADD ADDRESS OF BUFFER 2          54100021
MAP0094  LH    RC,ALIGNH               NUMBER OF WORDS OF RLD DATA      54200021
         AR    RC,RC                   TIMES FOUR                       54300021
         AR    RC,RC                                                    54400021
         SR    RD,RC                   START OF RLD DATA                54500021
         B     XL3                     GO TO PROCESS RLDS               54600021
MAP0092  LA    RD,2(0,RD)              UPDATE POINTER TO NEXT ID        54700021
         C     RD,IDEND                IS END OF ID LIST REACHED        54800021
         BNL   XRRET                   YES--CHECK FOR ANOTHER SEGMENT   54900021
         ST    RD,SAVID                NO--SAVE ADDRESS OF ID           55000021
         L     RC,RNT1                 AND START AT TOP OF RLD NOTELIST 55100021
         B     MAP00901                TO SEARCH LIST FOR THIS ID       55200021
MAP009A  L     RD,DCBLMOD              ADDRESS OF SYSLMOD DCB           55300021
         READ  DECB4,SF,(RD),RLDIN,256                                  55400021
XL1      EQU   MAP009                                                   55500021
         CHECK DECB4                                                    55600021
XL1CONT  TM    RLDIN,X'02'           TEST FOR RLD                       55700021
         BC    8,RLDOUTA               TEST FURTHER                     55800021
XL1A     LA    RD,RLDIN+16           INIT REG TO 1ST RLD DATA           55900021
         LH    RC,RLDIN+6            LOAD COUNT OF RLD DATA             56000021
XL3      TM    4(RD),X'20'           TEST FOR PSEUDO                    56100021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   56200021
*                                                                       56300021
MAP010   EQU   XL3                   LOOP TO PROCESS RLD ENTRY          56400021
*                                                                       56500021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   56600021
         BC    12,XL3CONT            NO  GO ON                          56700021
         TM    4(RD),CUMLNREQ        TEST FOR PSEUDO REG LENGTH REQ     56800021
         BC    12,XL3A               NO                                 56900021
         CLI   CUMLEN+5,C' '         TEST FOR ONE ALREADYENCOUNTERED    57000021
         BC    7,XL3A                YES                                57100021
         L     RPAR,4(0,RD)          LOAD ADDRESS FOR CONVERSION        57200021
         BAL   R14,BINBCDS           CALL CONVERSION SUBROUTINE         57300021
         MVC   CUMLEN(6),COLLECT     MOVE IN ADDRESS                    57400021
XL3A     TM    4(RD),X'01'           TEST FOR CONTINUATION              57500021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   57600021
*                                                                       57700021
MAP011   EQU   XL3A                  LOOP TO PASS OVER RLD ENTRIES      57800021
*                                                                       57900021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   58000021
         BC    8,XGETNXT2              NO--GET NEXT RLD ITEM            58100021
         SR    RD,RA                 ADD 4 TO REG                       58200021
         BXH   RC,RA,XL3A            LOOP                               58300021
         B     RLDOUTA                                                  58400021
XL4      MVC   4(26,RST),3(RST)        BLANK OUT UNWANTED ADDRESS NAME  58500021
         B     XL3A                    SKIP OVER ANY CONTINUATIONS      58600021
XL3CONT  LH    RPAR,2(0,RD)          LOAD POINTER                       58700021
         BAL   R14,SEGSUBR           CALL SUBR TO LOCATE ENTRY          58800021
         CH    RPAR,SEGNO            TEST FOR THIS  SEGMENT             58900021
         BC    7,XRRET               NO  RETURN                         59000021
         L     RPAR,4(0,RD)          LOAD ADDRESS FOR CONVERSION        59100021
         TM    NEWSW,X'40'             IS ENTRY FROM INTERMEDIATE       59200021
         BC    8,XL4CONT               NO                               59300021
         LH    R14,2(0,RD)             GET P POINTER                    59400021
         SLL   R14,2                   TIMES 4                          59500021
         A     R14,RECNT               PLUS START OF RELCTN CNST TABLE  59600021
         L     R14,0(0,R14)            GET RELOCATION CONSTANT          59700021
         ST    R14,SAVAD               SAVE IT FOR POSSIBLE LATER USE   59800021
         AR    RPAR,R14                ADD RELOCATION CONSTANT          59900021
XL4CONT  BAL   R14,BINBCDS             CALL CONVERSION SUBROUTINE       60000021
         MVC   4(6,RST),COLLECT        MOVE IN ADDRESS                  60100021
         LH    RPAR,0(0,RD)          LOAD ENTRY NUMBER                  60200021
         TM    0(RD),X'80'             IS DELINK BIT ON                 60300021
         BC    8,XL5CONT               NO--HAVE REAL R POINTER          60400021
         N     RPAR,RMASK              YES--GET REAL R POINTER          60500021
         MH    RPAR,FIVE               R POINTER TIMES LENGTH OF DELINK 60600021
         A     RPAR,DLKT               PLUS ADDRESS OF DELINK TABLE     60700021
         MVC   ALIGNH(2),0(RPAR)       ALIGN R POINTER TO HALF WORD     60800021
         LH    RPAR,ALIGNH             REAL R POINTER FROM DELINK TABLE 60900021
XL5CONT  STH   RPAR,ALIGNH             SAVE R POINTER                   61000021
         LTR   RPAR,RPAR             TEST R POINTER FOR ZERO            61100021
         BC    8,XL4                 BYPASS ENTAB ENTRIES               61200021
         BAL   R14,SEGSUBR           CALL SUBR TO LOCATE ENTRY          61300021
         LR    RPLACE,R15            SAVE ADDR IN CONVENIENT REG        61400021
         MVC   22(8,RST),0(RPLACE)     MOVE IN SYMBOL                   61500021
         CLI   8(RPLACE),X'02'       TEST FOR UNRESOLVED                61600021
         BC    8,UNRES               YES                                61700021
      CLI   8(RPLACE),X'0A'                                             61800021
       BC   8,WXT                                                       61900021
         CLI   8(RPLACE),X'07'         TEST FOR NULL                    62000021
         BC    8,XL4                   YES--OMIT REFERENCE              62100021
         TM    8(RPLACE),X'03'       TEST FOR CONTROL SECTIOMN          62200021
         BC    8,RLDSECT             YES                                62300021
         TM    8(RPLACE),X'05'       TEST FOR SECTION                   62400021
         BC    3,RLDSECT             YES                                62500021
         CLC   14(2,RPLACE),2(RD)    TEST FOR INTERNAL REFERENCE        62600021
         BC    8,XL4                 YES  SKIP THIS REFERENCE           62700021
         LH    RPAR,14(0,RPLACE)     LOAD REF NO. FOR THIS ENTRY        62800021
         BAL   R14,SEGSUBR           CALL SUBR TO LOCATE ENTRY          62900021
         LR    RPLACE,R15            PLACE ADDR IN CONVENIENT REG       63000021
RLDSECT  CLC   ALIGNH(2),2(RD)         CHECK FOR SAME ID                63100021
*        NOTE--RPOINTER WAS PUT IN ALIGNH AT XL5CONT                    63200021
         BC    8,XL4                 YES  SKIP THIS ONE                 63300021
        MVC   38(8,RST),0(RPLACE)     MOVE IN SECTION NAME              63400021
         TM    SAVATS,OVERBIT     TEST FOR OVERLAY                      63500021
         BC    8,MAP0119             OMIT SEGMENT NUMBER                63600021
         SR    RPAR,RPAR             CLEAR PARAMETER REG                63700021
         IC    RPAR,12(RPLACE)       INSERT SEG NO                      63800021
         CVD   RPAR,COLLECT-1        CONVERT TO DECIMAL                 63900021
         UNPK  COLLECT(5),COLLECT+5(3) UNPACK QUANTITY                  64000021
         MVC   53(3,RST),COLLECT       MOVE INTO PRINT LINE             64100021
         CLI   53(RST),C'0'            CHECK FOR LEADING ZERO           64200021
         BC    7,MAP0119               NO                               64300021
         MVI   53(RST),C' '            YES--MOVE IN BLANK               64400021
         CLI   54(RST),C'0'            CHECK FOR LEADING ZERO           64500021
         BC    7,MAP0119             NO  CONTINUE                       64600021
         MVI   54(RST),C' '            MOVE IN BLANK                    64700021
MAP0119  LA    R15,PUTLINS           LOAD ADDRESS OF PRINT ROUTINE      64800021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   64900021
*                                                                       65000021
*        CODING FOR MULTIPLE RLD ENTRIES                                65100021
*                                                                       65200021
XL2      TM    4(RD),X'01'           TEST FOR ANOTHER ADDR              65300021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   65400021
*                                                                       65500021
MAP012   EQU   XL2                   LOOP FOR SAME R AND P POINTERS     65600021
*                                                                       65700021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   65800021
         BC    8,XGETNXT             NO                                 65900021
         MVC   SVAR1(34),22(RST)       SAVE DATA FROM POINTERS          66000021
         LA    R14,PRLIN                                                66100021
         TM    APTSWS,TSO          TSO MODE?                            66200021
         BC    1,MAP0122           YES - BRANCH                         66300021
         CR    R14,RST                 IS LINE FULL                     66400021
         BC    7,MAP0122               YES--GO PRINT                    66500021
         LA    RST,60(0,RST)           NO--SET TO SECOND HALF OF LINE   66600021
         B     MAP0123                                                  66700021
MAP0122  BALR  R14,R15                 TO PRINT ROUTINE                 66800021
         LA    RST,PRLIN               SET RST TO FIRST OF LINE         66900021
MAP0123  SR    RD,RA                   ADD 4 TO POINTER                 67000021
         MVC   22(34,RST),SVAR1        RESTORE DATA                     67100021
         L     RPAR,4(0,RD)          LOAD ADDRESS FOR CONVERSION        67200021
         TM    NEWSW,X'40'             IS ENTRY FROM INTERMEDIATE       67300021
         BC    8,MAP0125               NO                               67400021
         A     RPAR,SAVAD              YES--ADD ASSIGNED ADDRESS        67500021
MAP0125  BAL   R14,BINBCDS             CALL CONVERSION SUBROUTINE       67600021
         MVC   4(6,RST),COLLECT        MOVE IN NEW ADDRESS              67700021
         LA    R15,PUTLINS           LOAD ADDR FO PRINT SUBR            67800021
         BXH   RC,RA,XL2             LOOP & DECR COUNT                  67900021
         B     RLDOUTA                 EXIT                             68000021
*                                                                       68100021
*        END FO CODING FOR MULTIPLE ENTRIES                             68200021
*                                                                       68300021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   68400021
XGETNXT  LA    R14,PRLIN                                                68500021
         TM    APTSWS,TSO          TSO MODE?                            68600021
         BC    1,MAP0124           YES - BRANCH                         68700021
        CR    R14,RST                 IS LINE FULL                      68800021
        BC    7,MAP0124               YES--GO PRINT                     68900021
         LA    RST,60(0,RST)          SET RST TO SECOND HALF OF LINE    69000021
        B     XGETNXT2                                                  69100021
MAP0124  BALR  R14,R15                 TO PRINT ROUTINE                 69200021
         LA    RST,PRLIN               SET RST TO FIRST OF PRINT LINE   69300021
XGETNXT2 AR    RC,RA                   SUBTRACT 4 FROM COUNT            69400021
RLDOUT   LA    RD,8(0,RD)            ADD 8 TO POINTER                   69500021
         BXH   RC,RA,XL3             GET NEXT RLD IF ANY                69600021
RLDOUTA  TM    NEWSW,X'40'             IS ENTRY FROM INTERMEDIATE       69700021
         BC    1,MAP0091               YES--BYPASS READ                 69800021
        TM    RLDIN,X'09'             TEST FOR EOMOD OR TXT NEXT        69900021
         BC    8,XL1                 THERE IS SUCH A CARD               70000021
         TM    RLDIN,EOMOD           TEST FOR END OF MOD                70100021
         BC    3,XRRET               YES                                70200021
         L     RD,DCBLMOD                                               70300021
         READ  DECB5,SF,(RD),RLDIN,1    SKIP OVER TEXT RECORD           70400021
         CHECK DECB5                                                    70500021
         B     XL1                   EXIT RLD RTN                       70600021
UNRES    MVC   37(11,RST),UNRESOLV     MOVE IN '$UNRESOLVED'            70700021
         CLI   13(RPLACE),NEVCALL    TEST FOR NEVER CALL                70800021
         BC    7,MAP0119             NO  LEAVE UNRESOLVED               70900021
         MVC   37(11,RST),NEVERCAL     MOVE IN '$NEVER-CALL'            71000021
         B     MAP0119               RETURN TO MAIN LINE                71100021
WXT   MVC   37(14,RST),UNRESOLV                                         71200021
      B   MAP0119                                                       71300021
RLDIN    DS    64F                   RLD READ INTO HERE                 71400021
UNRESOLV  DC C'$UNRESOLVED(W)'                                          71500021
NEVERCAL DC    C'$NEVER-CALL'        NEVER CALL DESIGNATOR              71600021
SVAR1    DS    34C                   SAVE AREA                          71700021
CRHEAD   DC    C'LOCATION  REFERS TO SYMBOL  IN'                        71800021
CUMREQ   DC    C'LOCATION        REQUESTS CUMULAT'                      71900021
         DC    C'IVE PSEUDO REGISTER LENGTH'                            72000021
CUMLEN   EQU   CUMREQ+9              LOC OF ADDRESS                     72100021
         EJECT                                                          72200021
*                                                                       72300021
*        THIS ROUTINE ENDS THE MAP                                      72400021
*                                                                       72500021
CLEANUP  SR    RPLACE,RPLACE         ZERO REG CTR REGISTER              72600021
         MVC   PRHDR+2(117),PRHDR+1  PREVENT LAST HEADER FROM PRINTIN   72700021
         MVC   PRLIN+2(30),PRLIN+1   BLANK OUT POSS INTERNAL REF        72800021
         C     RPLACE,PRAL        TEST FOR NO PSEUDO REGISTERS          72900021
         BC    8,ENTOT1              NONE  OMIT PROCESSING              73000021
         L     RC,SAVEND             LOAD POINTER TO LAST ESD           73100021
         LA    RC-1,16               LOAD INDEXING FACTOR               73200021
         L     RST2,XCESDTAB         LOAD ADDR OF ESD TABLE             73300021
*                                                                       73400021
*        LIST PSEUDO REGISTERS                                          73500021
*                                                                       73600021
         MVC   PRLIN+20(100),PRLIN+19  BLANK OUT ERSIDUE                73700021
         MVC   PRLIN+2(16),PSEUDOS                                      73800021
         MVI   PRLIN,DOUBLE            PRINT AND DOUBLE SPACE           73900021
         LA    R15,PUTLINS           PRINT SUBROUTINE                   74000021
         BALR  R14,R15               CALL SUBROUTINE                    74100021
         MVC   PRLIN+5(22),NAMOLEN   CREATE HEADER                      74200021
         MVC   PRLIN+35(22),NAMOLEN                                     74300021
         TM    APTSWS,TSO          TSO MODE?                            74400021
         BC    1,TEMP3             YES - BRANCH                         74500021
         MVC   PRLIN+65(22),NAMOLEN                                     74600021
         MVC   PRLIN+95(22),NAMOLEN                                     74700021
TEMP3    MVI   PRLIN,TRIPLE        PRINT AND TRIPLE SPACE               74800021
         MVC   PRHDR(119),PRLIN                                         74900021
         BALR  R14,R15               CALL SUBROUTINE                    75000021
L7       TM    8(RST2),X'06'         TEST FOR PSEUDO                    75100021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   75200021
*                                                                       75300021
MAP013   EQU   L7                    LOOP TO PROCESS PSEUDO REGS        75400021
*                                                                       75500021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   75600021
         BC    12,L7CTL              NO                                 75700021
         TM    8(RST2),X'01'         TEST FOR PSEUDO                    75800021
         BC    3,L7CTL               NO  GO TO NEXT ESD ENTRY           75900021
ONEFND   CH    RPLACE,COUNT2       LINE FULL?                           76000021
         BC    7,L7CONT              NO                                 76100021
         SR    RPLACE,RPLACE         REZERO POINTER                     76200021
         LA    R15,PUTLINS           SUBR TO PUT 1 LINE                 76300021
         BALR  R14,R15               CALL SUBROUTINE                    76400021
L7CONT   LR    RWORK,RPLACE          FORM ACTUAL PRINT ADDR             76500021
         LA    RWORK,PRLIN(RWORK)                                       76600021
         L     RPAR,8(0,RST2)        LOAD ADDDRESS FOR CONVERSION       76700021
         LA    R15,BINBCDS           CONVERT SUBR                       76800021
         BALR  R14,R15               CALL SUBROUTINE                    76900021
         MVC   3(8,RWORK),0(RST2)    MOVE IN NAME                       77000021
         MVC   13(6,RWORK),COLLECT   MOVE IN LOC                        77100021
         L     RPAR,12(0,RST2)       LOAD ADDRESS FOR CONVERSION        77200021
         BALR  R14,R15               CALL SUBROUTINE                    77300021
         MVC   21(6,RWORK),COLLECT   MOVE TO PRINT LINE                 77400021
         LA    RPLACE,30(0,RPLACE)   ADD TO COUNTER                     77500021
L7CTL    BXLE  RST2,RC-1,L7          LOOP TO NEXT ESD TIL LAST          77600021
         LTR   RPLACE,RPLACE         TEST FOR NO PSEUDO REGS            77700021
         BC    8,ENTOT               BRANCH AROUND PUT                  77800021
         LA    R15,PUTLINS           SUBR TO PRINT LINE                 77900021
         MVI   PRLIN,DOUBLE            PRINT AND DOUBLE SPACE           78000021
         BALR  R14,R15               CALL SUBROUTINE                    78100021
*                                                                       78200021
*        PUT OUT ENTRY ADDRESS AND TOTAL LENGTH                         78300021
*                                                                       78400021
ENTOT    L     RPAR,PRAL          LOAD PSEUDO LENGTH                    78500021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   78600021
*                                                                       78700021
MAP014   EQU   ENTOT                 ROUTINE FOR LENGTH OF PSEUDOS      78800021
*                                                                       78900021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   79000021
         MVC   PRHDR+2(117),PRHDR+1  BLANK OUT PRINT HEADER             79100021
         BAL   R14,BINBCDS           CALL CONVERSION SUBROUTINE         79200021
         MVC   PRLIN+2(32),CUMPS     PUT IN INDICATOR                   79300021
         MVC   PRLIN+36(6),COLLECT   MOVE IN QUANTITY                   79400021
         LA    R15,PUTLINS           SUBROUTINE TO PNINT LINE           79500021
         BALR  R14,R15               CALL SUBROUTINE                    79600021
ENTOT1   MVC   PRLIN+2(13),ENTADD    LOAD INDICATOR                     79700021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   79800021
*                                                                       79900021
HEWLFAPX EQU   ENTOT1                  ENTRY AFTER SYNAD EXIT           80000021
         ENTRY HEWLFAPX                                                 80100021
*                                                                       80200021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   80300021
         MVC   PRHDR+2(117),PRHDR+1  BLANK OUT PRINT HEADER             80400021
         MVC   WKWORD+1(3),PDSE11  MOVE ENTRY ADDRESS                   80500021
         L     RPAR,WKWORD           LOAD FULL WORD                     80600021
         TM    PDSE3,ALBIT         TEST FOR ALIAS                       80700021
         BC    8,MAP0153             NO  ENTRY ADDRESS CORRECT          80800021
         L     RPAR,IOCT           PICK UP RIGHT ENTRY ADDRESS          80900021
         SRL   RPAR,8                                                   81000021
MAP0153  EQU   *                                                        81100021
         BAL   R14,BINBCDS           CALL CONVERSION SUBROUTINE         81200021
         MVC   PRLIN+18(6),COLLECT   STORE NUMBER                       81300021
         LA    R15,PUTLINS           PRINT LINE                         81400021
         BALR  R14,R15               CALL SUBROUTINE                    81500021
         MVC   PRLIN+2(12),TOTLEN    LOAD TITLE                         81600021
         MVC   WKWORD+1(3),PDSE9   LOAD TOTAL LENGTH IN FULL WORD       81700021
         L     R1,WKWORD             LOAD IN FOLL WORD                  81800021
         BAL   R14,BINBCDS           CALL CONVERSION SUBROUTINE         81900021
         MVC   PRLIN+18(6),COLLECT   STORE NUMBER                       82000021
         MVI   PRLIN,DOUBLE            PRINT AND DOUBLE SPACE           82100021
         LA    R15,PUTLINS           PRINT LINE                         82200021
         BALR  R14,R15               CALL SUBROUTINE                    82300021
         MVI   L2SW+1,X'70'          RESET SWITCHES                     82400021
         MVI   L1SW+1,X'00'                                             82500021
         MVI   L5SW3+1,X'00'                                            82600021
         MVI   L5SW2+1,X'30'                                            82700021
         TM    NEWSW,X'40'             IS ENTRY FROM INTERMEDIATE       82800021
         BC    1,MAP0154               YES--BYPASS FREEMAIN AND CLOSE   82900021
         L     RA,DCBLMOD                                               83000021
         MVC   33(3,RA),SAVEODAD     RESTORE END OF DATA ADDRESS        83100021
         CLOSE ((RA))                                                   83200021
         TM    JFCBADDR,X'80'          WAS OPEN J REQUIRED              83300021
         BZ    MAP0154                 NO--BRANCH                       83400021
         FREEMAIN E,LV=200,A=JFCBADDR  FREE JFCB AREA                   83500021
MAP0154  MVC   SEGHD(8),SAVSEG         RESTORE SEG. NO. TO HDRS         83600021
         MVI   SEGNO+1,X'01'                                            83700021
         MVI   L0SW+1,X'00'                                             83800021
         MVC   LINECNT+1(1),LINCOUNT+1 RESTORE LINE COUNT TO APT        83900021
         NI    NEWSW,X'EF'             INDICATE MAP/XREF NOT OPERATING  84000021
         LM    R14,RBASE,SPACES+12                                      84100021
         BR    R14                     RETURN                           84200021
         DS    0F                                                       84300021
PSEUDOS  DC    C'PSEUDO REGISTERS'      HEADER FOR PSEUDO REGISTERS     84400021
NAMOLEN  DC    C'NAME    ORIGIN  LENGTH'  HEADER FOR PSEUDOS            84500021
CUMPS    DC    C'TOTAL LENGTH OF PSEUDO REGISTERS' LINE FOR OUT PUT     84600021
ENTADD   DC    C'ENTRY ADDRESS'                                         84700021
ENTRY    EQU   ENTADD                WORD ENTRY                         84800021
TOTLEN   DC    C'TOTAL LENGTH'                                          84900021
SAVSEG   DC    C'SEG. NO.'           FOR RESTORATION FO SEG. NO.        85000021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   85100021
         EJECT                                                          85200021
*                                                                       85300021
*        THIS SUBROUTINE TAKES A BINARY QUANTITY FROM RPAR              85400021
*        AND CONVERTS IT TO PRINT CHARACTERS TO THE BASE                85500021
*        INDICATED BY THE VARIABLE TEN.  THIS RESULT IS PLACED          85600021
*        IN THE SIX CHARACTER AREA COLLECT.  THE SUBROUTINE             85700021
*        RETURNS ON REGISTER R14.                                       85800021
*                                                                       85900021
BINBCDS  LA    RPAR,0(0,RPAR)        CLEAR HIGH ORDER BITS              86000021
         LTR   RPAR,RPAR             TEST FOR ZERO                      86100021
         BC    7,CVTCONT             NO                                 86200021
         MVC   COLLECT(6),ZERO       STORE ZERO INDICATOR               86300021
         BR    R14                   RETURN                             86400021
TEN      DC    A(16)                   DIVIDE CONSTANT                  86500021
ZERO     DC    C'    00'             ZERO INDICATOR                     86600021
CVTCONT  ST    RPAR,COLLECT-1        PLACE BINARY QUANT IN BUFFER       86700021
         UNPK  COLLECT(7),COLLECT(4)  UNPACK BINARY QUANTITY            86800021
         MVZ   COLLECT(6),COLLECT-1  ZERO ALL ZONES FOR TRANSLATE       86900021
         TR    COLLECT(6),TRTABLE    TRANSLATE FOR PRINTING             87000021
*                                                                       87100021
*        CHANGE LEADING ZEROS TO BLANKS                                 87200021
*                                                                       87300021
         LA    R0,1                  LOAD INCREMENT                     87400021
         LA    RPAR,COLLECT          LOAD START ADDRESS                 87500021
HIZEROS  CLI   0(RPAR),C'0'          TEST FOR ZERO                      87600021
         BCR   7,R14                 NO  DONE SO RETURN                 87700021
         MVI   0(RPAR),C' '          REPLACE ZERO WITH LEADING BLANK    87800021
         BXH   RPAR,R0,HIZEROS       INCR + LOOP TO NEXT DIGIT ALWAYS   87900021
BUFFER   DS    1D                    DOUBLE WORD AREA FOR CONVERSION    88000021
COLLECT  EQU   BUFFER+1              ADDRESS OF CONVERTED DATA          88100021
TRTABLE  DC    C'0123456789ABCDEF '  TABLE FOR TRANSLATION              88200021
         EJECT                                                          88300021
*                                                                       88400021
*        THIS SUBROUTINE PUTS OUT A LINE FROM PRLIN AND THEN            88500021
*        BLANKS IT OUT.                                                 88600021
*                                                                       88700021
         DS    0H                                                       88800021
PUTLINS  STM   RE,R15,PRSAV          SAVE REGISTERS                     88900021
SET4LINE LA    RE,PRLIN              SET FOR PRINT OF LINE              89000021
         TM    APTSWS,TSO          TSO MODE?                            89100021
         BC    1,PRINT             YES - BRANCH                         89200021
         LH    R15,LINCOUNT          LOAD LINE COUNT INTO REGISTER      89300021
         BCT   R15,CHKSNGL                                              89400021
         B     CHKHDR                  IF AT END OF PAGE                89500021
CHKSNGL  CLI   PRLIN,SINGLE            WAS SINGLE SPACE REQUESTED       89600021
         BE    NOPAGE                  YES--GO PRINT                    89700021
         BCT   R15,CHKDBL              NO--DECREMENT COUNT AGAIN        89800021
         B     CHKHDR                  IF AT END OF PAGE                89900021
CHKDBL   CLI   PRLIN,DOUBLE            WAS DOUBLE SPACE REQUESTED       90000021
         BE    NOPAGE                  YES--GO PRINT                    90100021
         BCT   R15,NOPAGE              NO--MUST BE TRIPLE--DECREMENT    90200021
CHKHDR   CLC   PRLIN+1(118),PRHDR+1    IS THIS LINE HEADER              90300021
         BE    HEADPNT                 YES--DON'T PRINT TWICE           90400021
         LA    RE,PRHDR                SET TO PRINT HEADER              90500021
HEADPNT  MVI   LINCOUNT+1,NUMBLINS     RESET LINE COUNTER               90600021
         L     R15,HEWLCWBB+20         ADDRESS OF PRINT BUFFER          90700021
         MVI   0(R15),RESTORE          INSERT CONTROL CH FOR RESTORE    90800021
         L     R15,PRNTAD              ADDRESS OF PRINT ROUTINE         90900021
         BALR  R14,R15                                                  91000021
         B     PRINT                 GO TO PRINT                        91100021
NOPAGE   STC   R15,LINCOUNT+1        STORE UPDATED LINE COUNT           91200021
         CLI   LINCOUNT+1,X'02'      TEST FOR BOTTOM OF PAGE            91300021
         BC    3,PRINT               NO  GO AHEAD AND PRINT             91400021
         CLC   PRLIN+1(118),PRHDR+1  TEST FOR HEADER                    91500021
         BE    HEADPNT                 NO DOUBLE HEAD PRINT             91600021
PRINT    L     RC,HEWLCWBB+20      ADDRESS OF PRINT BUFFER              91700021
         MVC   0(121,RC),0(RE)         MOVE MESSAGE TO PRINT BUFFER     91800021
         L     R15,PRNTAD              ADDRESS OF PRINT ROUTINE         91900021
         BALR  R14,R15                                                  92000021
         TM    APTSWS,TSO          TSO MODE?                            92100021
         BC    1,PREXIT            YES - BRANCH                         92200021
         LA    R15,PRHDR             LOAD FOR TEST FOR HEADER           92300021
         CR    R15,RE                TEST FOR HEADER LAST               92400021
         BE    SET4LINE              YES  PUT OUT PROPER LINE           92500021
PREXIT   LM    RE,R15,PRSAV          NO  RESTORE REGISTERS              92600021
         MVI   PRLIN,SINGLE          SET PRLIN BUFFER TO SINGLE SPACE   92700021
         MVC   PRLIN+2(118),PRLIN+1  BLANK OUT PRINT LINE               92800021
         BR    R14                   EXIT                               92900021
*                                                                       93000021
*        THIS SUBROUTINE PERFORMS IMMEDIATE SKIP OPERATIONS, USING      93100021
*        THE CARRIAGE COTNROL CHARACTER FROM LOCATION CNTLCH            93200021
*                                                                       93300021
CNTRL    ST    R14,SAV14               SAVE R14                         93400021
         TM    APTSWS,TSO          TSO MODE?                            93500021
         BC    1,CNTRLB            YES - BRANCH                         93600021
         LH    R15,LINCOUNT                                             93700021
         BCT   R15,CNTRLA              DECREMENT LINE COUNT             93800021
         B     NEWPAGE                 IF AT END OF PAGE                93900021
CNTRLA   CLI   CNTLCH,SKIP             WAS SKIP ONE REQUESTED           94000021
         BE    CNTRLB                  YES                              94100021
         BCT   R15,CNTRLB              NO--DECREMENT LINE COUNT AGAIN   94200021
NEWPAGE  MVI   LINCOUNT+1,X'01'        INDICATE END OF PAGE             94300021
         BR    R14                     AND RETURN                       94400021
CNTRLB   STH   R15,LINCOUNT            STORE UPDATED LINE COUNT         94500021
         L     R15,HEWLCWBB+20         ADDRESS OF PRINT BUFFER          94600021
         MVC   0(1,R15),CNTLCH         MOVE IN CONTROL CHARACTER        94700021
         L     R15,PRNTAD              ADDRESS OF PRINT ROUTINE         94800021
         BALR  R14,R15                                                  94900021
         L     R14,SAV14               RESTORE R14                      95000021
         BR    R14                     RETURN                           95100021
SAV14    DC    F'0'                                                     95200021
CNTLCH   DC    AL1(SKIP)                                                95300021
         DS    0F                                                       95400021
PRSAV    DS    6F                    SAVE AREA                          95500021
RPARSAV  EQU   PRSAV+8               SAVE R1 IN SORT OVER BASE SAVE     95600021
NUMBLINS EQU   53                    NUMBER OF LINES ON PAGE AFTER 1ST  95700021
LINCOUNT DC    AL2(54)               COUNTER OF LINES ON A PAGE         95800021
PRHDR    DC    AL1(DOUBLE)             CONTROL CH PRINT AND SPACE 2     95900021
         DC    4C'                              '                       96000021
PRLIN    DC    AL1(SINGLE)             CONTROL CH PRINT AND SPACE       96100021
         DC    4C'                              '  BUFFER               96200021
PRNTAD   DC    V(HEWLEPNT)             ADDRESS OF PRINT ROUTINE         96300021
JFCBADDR DC    F'00'                   ADDR OF JFCB AREA                96400021
XLSTADDR DC    A(APTXLIST)             ADDR OF SYSLMOD EXIT LIST        96500021
         EJECT                                                          96600021
*                                                                       96700021
*        THIS SUBROUTINE TAKES AN ANTRY NUMBER FROM RPAR                96800021
*        AND RETURNS THE ADDRESS OF THAT ENTRY IN R15                   96900021
*        AND ITS SEGMENT NUMBER IN RPAR                                 97000021
*                                                                       97100021
SEGSUBR  SLL   RPAR,4                MULT BY 16                         97200021
         L     R15,XCESDTAB          LOAD ADDRESS OF ESD TABLE          97300021
         AR    R15,RPAR              ADD PARAMETER                      97400021
         S     R15,TEN               AND SUBTRACT SIXTEEN               97500021
         SR    RPAR,RPAR             CLEAR REG                          97600021
         IC    RPAR,12(0,R15)        INSERT SEG NUMBER                  97700021
         BR    R14                   RETURN                             97800021
*                                                                       97900021
         HEWAPT                                                         98000021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   98100021
         END                                                            98200021
./  ADD  SSI=62740004,NAME=HEWLFOPT
         TITLE    'HEWLFOPT  ATTRIBUTES AND OPTIONS PROCESSOR'          00050021
*                                                                     * 00100021
*********************************************************************** 00150021
*                                                                     * 00200021
*                                                                     * 00250021
* STATUS -  CHANGE LEVEL  000                                         * 00300021
*                                                                     * 00350021
* FUNCTION/OPERATION -   THIS ROUTINE SCANS & ANALYZES THE ATTRIBUTES * 00400021
* & OPTIONS CONTROL INFORMATION WHICH IS PASSED TO IT INDIRECTLY      * 00450021
* FROM THE PARAMETER LIST.                                            * 00500021
*                                                                     * 00550021
*     THIS PARAMETER INFORMATION INDICATES WHAT MODULE ATTRIBUTES     * 00600021
*  AND  L/E.  PROCESSING OPTIONS ARE TO BE USED IN GENERATING THE     * 00650021
*  TYPE OF LOAD MODULE DESIRED. THE INFORMATION IS BASED ON THE       * 00700021
*  PARAMETERS  SPECIFIED IN THE  'EXEC' CONTROL CARD BY THE           * 00750021
*  PROGRAMMER USER, OR THOSE PASSED BY A LINK, XCTL, OR ATTACH MACRO  * 00800021
*   FROM ANOTHER PROGRAM.                                             * 00850021
*                                                                     * 00900021
*  THESE OPTIONS & ATTRIBUTES ARE CHECKED FOR VALIDITY & ARE ALSO     * 00950021
*  ANALYZED  TO   DETERMINE IF THEY ARE REQUESTED IN COMBINATIONS     * 01000021
* WHICH  ARE  ALLOWABLE. THE RESULTS OF THIS PROCESSING ARE THEN      * 01050021
* INDICATED BY  -                                                       01100021
*                                                                     * 01150021
*  1.- THE SETTING OF INTERNAL INDICATORS IN THE ALL PURPOSE TABLE    * 01200021
*  2.- PRINTED MESSAGES INDICATING WHAT ATTRIBUTES/OPTIONS  WERE      * 01250021
*  SPECIFIED & WHETHER OR NOT THEY  WERE VALID & ACCEPTED.            * 01300021
*                                                                     * 01350021
*  THIS ROUTINE HAS A CHARACTER CODE DEPENDENCE                       * 01400021
*       THE HEXADECIMAL REPRESENTATION OF A ZERO                      * 01450021
*            IS EXPECTED TO BE  F0                                    * 01500021
*       THE ZONE OF ANY DIGIT IS EXPECTED TO BE  F                    * 01550021
*                                                                     * 01600021
*                                                                     * 01650021
*  ENTRY POINTS -                                                     * 01700021
*                                                                     * 01750021
*   (1)  HEWLFOPT = MODULE NAME                                       * 01800021
*                                                                     * 01850021
* ENTERED FROM INITIAL PROCESSOR - BY  THIS'CALLING  SEQUENCE '-      * 01900021
*                                                                     * 01950021
*       L  1,       ADDRESS OF PARAMETER LIST BYTE  COUNT             * 02000021
*       L  15,      HEWLFOPT = ENTRY POINT                            * 02050021
*       BALR 14,15  LINKAGE                                           * 02100021
*                                                                     * 02150021
* ENTERED FORM SCN -'BY THIS CALLING SEQUENCE'                        * 02200021
*  L RA = LENGTH OF PARMS ON THE PARM CARD.                           * 02250021
*  L RB = ADDRESS OF THE PARMS IN THE SYSLIN BUFFER.                  * 02300021
* L RF = ADDRESS OF HEWLFOPT (ENTRY POINT).                           * 02350021
* BALR RE,RF                                                          * 02400021
*                                                                     * 02450021
*                                                                     * 02500021
*                                                                     * 02550021
*  INPUT -                                                            * 02600021
*                                                                     * 02650021
*        THE PARAMETER LIST ADDRESS IS PASSED  IN REG. NO.1  WHICH IS * 02700021
* USED TO OBTAIN A  BYTE COUNT & ASSOCIATED PARAMETER INFORMATION.    * 02750021
*                                                                     * 02800021
*                                                                     * 02850021
*      THE FOLLOWING  ARE COMPLETE LISTS  OF  THE  'ATTRIBUTE   AND   * 02900021
*  OPTION ' SYMBOLS  WHICH ARE AVAILABLE  FOR  USE, AND  THEY WILL    * 02950021
*  DETERMINE THE CHARACTERISTICS OF THE LOAD  MODULE TO BE CREATED.     03000021
*                                                                     * 03050021
*      (A)       - MODULE  ATTRIBUTES -                               * 03100021
*                                                                     * 03150021
* 1.- SCTR =  FORMAT OF MODULE IS SUITABLE FOR EITHER SCATTER OR      * 03200021
*             BLOCK LOADING.                                          * 03250021
*                                                                     * 03300021
* 2.- OVLY =  MODULE STRUCTURED IN OVERLAY.                           * 03350021
*                                                                     * 03400021
* 3.- HIAR = MODULE TO BE LOADED INTO SELECTED STORAGE HIERARCHIES.   * 03450021
*                                                                     * 03500021
* 4.- RENT = MODULE IS RE-ENTERABLE                                   * 03550021
*                                                                     * 03600021
* 5.- REUS = MODULE IS SERIALLY  RE-USABLE                            * 03650021
*                                                                     * 03700021
* 6.- REFR = MODULE IS REFRESHABLE                                    * 03750021
*                                                                     * 03800021
* 7.- TEST = MODULE CONTAINS TESTING SYMBOL TABLES FOR USE BY THE     * 03850021
*            TEST TRANSLATOR                                          * 03900021
*                                                                     * 03950021
*                                                                     * 04000021
*      (B) -  PROCESSING  OPTIONS -                                   * 04050021
*                                                                     * 04100021
*                                                                     * 04150021
*  1.-  NCAL  =     NO  AUTOMATIC  LIBRARY  CALL .                    * 04200021
*                                                                     * 04250021
*  2.-  LET   =    LOAD MODULE IS MARKED EXECUTABLE - ALLOWING MINOR  * 04300021
*                  ERROR  CONDITIONS DETECTED  DURING PROCESSING.     * 04350021
*                                                                     * 04400021
*  3.- XCAL   =    ALLOWS 'EXCLUSIVE BRANCH'  TYPE ERRORS , ONLY.     * 04450021
*                                                                     * 04500021
*  4.- LIST   =   OUTPUTS LISTING OF ALL L/E. CONTROL  STATEMENTS.    * 04550021
*                  IN CARD - IMAGE FORMATS.                           * 04600021
*                                                                     * 04650021
*  5.- MAP    =   PRODUCES A MAP  OF THE LOAD MODULE'S STRUCTURE.     * 04700021
*                                                                     * 04750021
*  6.- XREF   =  PRODUCES A CROSS - REFERENCE TABLE OF THE            * 04800021
*                 MODULE WHICH ALSO INCLUDES A MAP.                   * 04850021
*                                                                     * 04900021
*                                                                     * 04950021
* 7.- PRINT  = WRITE HEADERS, ALLOW XREF,MAP,LIST IF SPECIFIED.       * 05000021
* 8.-NOPRINT =  PRINT ONLY ERRORS.                                    * 05050021
* 9.-NOXREF  =  DO NOT PERFORM AN XREF LISTING FOR THIS MODULE.       * 05100021
*10.- NOCALL =  DO NOT PERFORM AUTOMATIC CALL FOR UNRESOLVED ERS.     * 05150021
*11.- CALL   =  PERFORM AUTOMATIC CALL ON SYSLIB FOR UNRESOLVED ERS.  * 05200021
*12.- NORENT =  DO NOT MARK THIS MODULE AS RE-ENTRANT.                * 05250021
*13.- NOREUS =  DO NOT MARK THIS MODULE AS RE-USEABLE.                * 05300021
*14.- TERM   =  THE TERMINAL IS BEING SUPPORTED.                      * 05350021
*15.- NOTERM = THE TERMINAL  IS NOT BEING SUPPORTED FOR THIS RUN.     * 05400021
*                                                                     * 05450021
*  * SPECIAL OPTIONS -                                                * 05500021
*                                                                     * 05550021
*  1. - DC    =  'DOWNWARD COMPATIBILTY' - MEANS THIS MODULE IS       * 05600021
*                 ACCEPTABLE AS INPUT  TO ALL LEVELS OF LINKAGE       * 05650021
*                 EDITORS.                                            * 05700021
*                                                                     * 05750021
* 2. -  OL    = ' ONLY LOADABLE '- INDICATOR IS SET - ON.             * 05800021
*                                                                     * 05850021
* 3. -  NE    = ' NOT EDITABLE ' -MEANS  THAT  THE ' ESD ' INFORMATION* 05900021
*                IS ELIMINATED  AND THEREFORE THIS MODULE WILL  NOT   * 05950021
*                BE ACCEPTED  BY  LINKAGE EDITOR FOR RE-PROCESSING.   * 06000021
*                                                                     * 06050021
* 4.- SIZE = OPTION PERMITTING SPECIFICATION OF                         06100021
*                 A) MAXIMUM NUMBER BYTES OF MAIN  STORAGE AVAILABLE    06150021
*                   TO THE LINKAGE EDITOR  (VALUE1)                     06200021
*                   WHERE VALUE1=(DESIGN PT X 1024) TO 9999999          06250021
*                              OR (DP K) TO 9999K                       06300021
*                 B) SIZE OF LOAD MODULE BUFFER (VALUE2)                06350021
*                   WHERE VALUE2= 6144 TO 102400                        06400021
*                              OR 6K TO 100K                            06450021
*                                                                       06500021
*                 THE FOLLOWING FORMATS ARE ACCEPTED:                 * 06550021
*                               SIZE=VALUE1                           * 06600021
*                                 SIZE=(VALUE1)                       * 06650021
*                                   SIZE=(,VALUE2)                    * 06700021
*                                     SIZE=(VALUE1,VALUE2)            * 06750021
*                                       SIZE=(,)                      * 06800021
*                 DEFAULT VALUES ARE SET DURING SYSTEM GENERATION     * 06850021
*                                                                     * 06900021
* 5.- ALIGN2 = OPTION SPECIFYING THAT 2K-PAGE BOUNDARY IS TO BE USED    06910021
*              WHERE PAGE ALIGNMENT IS REQUIRED. DEFAULT VALUE FOR      06920021
*              PAGE ALIGNMENT IS 4K.                                    06930021
*                                                                     * 06950021
*                                                                     * 07000021
*                                                                     * 07050021
*      THESE PARAMETERS MUST BE SPECIFIED IN CERTAIN VALID            * 07100021
*  COMBINATIONS (INDICATED IN TABLE) IN ORDER TO BE ACCEPTED FOR      * 07150021
*  ANY GIVEN LINKAGE EDITOR PROCESSING.                               * 07200021
*                                                                     * 07250021
* ** TABLE - COMBINATIONS OF  'INCOMPATIBLE' ATTRIBUTES & OPTIONS **  * 07300021
*---------------------------------------------------------------------* 07350021
*                                                                     * 07400021
* PARM. SPECIFIED  ***  COMBINATIONS - 'NOT ALLOWABLE ' WITH.         * 07450021
* ---------------        ------------------------------------         * 07500021
*                                                                     * 07550021
*   1.  SCTR       *    OVLY                                          * 07600021
*                                                                     * 07650021
*   2.  OVLY       *    SCTR,RENT, REUS, HIAR, REFR                   * 07700021
*                                                                     * 07750021
*   3.  HIAR       *    OVLY                                          * 07800021
*                                                                     * 07850021
*   4.  RENT       *    REUS, REFR, OVLY                              * 07900021
*                                                                     * 07950021
*   5.  REUS       *    RENT, REFR, OVLY                              * 08000021
*                                                                     * 08050021
*   7.  TEST       *    NE                                            * 08100021
*                                                                     * 08150021
*   6.  REFR       *    RENT, REUS, OVLY                              * 08200021
*                                                                     * 08250021
*   8.  LET        *    XCAL                                          * 08300021
*                                                                     * 08350021
*   9.  XCAL       *    LET                                           * 08400021
*                                                                     * 08450021
*   10. MAP        *    XREF, NE                                      * 08500021
*                                                                     * 08550021
*   11. XREF       *    MAP, NE                                       * 08600021
*                                                                     * 08650021
*   12. NE         *    MAP, XREF, TEST                               * 08700021
*                                                                     * 08750021
*   13. NCAL       *    -N/A-                                         * 08800021
*                                                                     * 08850021
*   14. LIST       *    -N/A-                                         * 08900021
*                                                                     * 08950021
*   15. OL         *    -N/A-                                         * 09000021
*                                                                     * 09050021
*   16. DC         *    -N/A-                                         * 09100021
*                                                                     * 09150021
*   17. SIZE       *    -N/A-                                         * 09200021
*                                                                     * 09250021
*---------------------------------------------------------------------* 09300021
*                                                                     * 09350021
*  OUTPUT -                                                           * 09400021
*                                                                     * 09450021
*        MESSAGES ARE PRINTED - OUT, TO INFORM  THE USER OF  WHAT -   * 09500021
*  LINKAGE EDITOR OPTIONS & ATTRIBUTES WERE PROCESSED & AS TO         * 09550021
*  WHETHER OR NOT THEY ARE VALID & COMPATIBLE.                        * 09600021
*                                                                     * 09650021
* IN THE CASE OF THE NOPRINT OPTION THE ONLY FORM OF OUTPUT ON SYSPRINT 09700021
* THAT SHALL OCCUR IS, THE PRINTING OF ERROR MEASAGES.                * 09750021
*                                                                     * 09850021
*   EXTERNAL  ROUTINES -      NONE                                    * 09900021
*                                                                     * 09950021
*  EXITS - NORMAL -                                                   * 10000021
*                                                                     * 10050021
*        AT THE COMPLETION OF PROCESSING ALL OPTIONS/ATTRIBUTES,      * 10100021
*  RETURN CONTROL IS TRANSFERED BACK  TO THE INITIALIZER (THAT IS TO  * 10150021
*  THE NEXT SEQUENTIAL INSTRUCTION, THE POINT AT WHICH EXIT  WAS      * 10200021
*  MADE  FROM  ' HEWLFINT ' MODULE).                                  * 10250021
*                                                                     * 10300021
*                                                                     * 10350021
*                                                                     * 10400021
*  EXITS - ERROR -  NONE                                              * 10450021
*                                                                     * 10500021
*  TABLES/WORK AREAS -  N/A.                                          * 10550021
*                                                                     * 10600021
*  ATTRIBUTES -  N/A.                                                 * 10650021
*                                                                     * 10700021
*  NOTES -  N/A.                                                      * 10750021
*                                                                     * 10800021
*                                                                     * 10850021
*********************************************************************** 10900021
*                                                                       10950021
*                                                                       11000021
HEWLFOPT CSECT                                                          11050021
**********************************************************************  11100021
*397600,413600                                                   S01904 11150021
*184600-700,266100-200,3011-302312,423700,433100-400             Y01048 11160000
*417500                                                           M4507 11170000
*A189100-189300                                                 OY00338 11180001
*C416500,C422500                                                 YM5557 11190001
*185500                                                         XA05449 11192003
**********************************************************************  11200021
         SPACE 1                                                        11250021
R0       EQU   0    PARAMATER  REGISTER                                 11300021
R1       EQU   1    PARAMATER  REGISTER                                 11350021
R2       EQU   2                                                        11400021
R3       EQU   3                                                        11450021
R4       EQU   4                                                        11500021
R5       EQU   5                                                        11550021
R6       EQU   6                                                        11600021
R7       EQU   7                                                        11650021
R8       EQU   8                                                        11700021
R9       EQU   9                                                        11750021
RA       EQU   10                                                       11800021
RB       EQU   11                                                       11850021
RC       EQU   12   BASE REGISTER                                       11900021
RD       EQU   13   SAVE AREA POINTER REGISTER                          11950021
RE       EQU   14   RETURN REGISTER                                     12000021
RF       EQU   15   GO TO REGISTER                                      12050021
 EJECT                                                                  12100021
PARMREG  EQU   1                                                        12150021
DISP8    EQU   8                                                        12200021
BYTES8   EQU   8                                                        12250021
CONCODE8 EQU   8                                                        12300021
DISP4    EQU   4                                                        12350021
DISP1    EQU   1                                                        12400021
DISP2    EQU   2                                                        12450021
BYTES1   EQU   1                                                        12500021
BYTES4   EQU   4                                                        12550021
BLANK    EQU   C' '                                                     12600021
K        EQU   C'K'                                                     12650021
COMMA    EQU   C','                                                     12700021
LPAREN   EQU   C'('                                                     12750021
RPAREN   EQU   C')'                                                     12800021
NULL     EQU   X'00'                                                    12850021
NOOVLY   EQU   X'BF'                                                    12900021
EQUAL    EQU   C'='                                                     12950021
SIZE     EQU   X'01'                                                    13000021
LPRENRCV EQU   X'02'                                                    13050021
RPRENRCV EQU   X'04'                                                    13100021
VAL1RCVD EQU   X'08'   VALUE1 RECIEVED OR ACCEPTED FOR DEFAULT          13150021
GENOPTST EQU   X'10'     INDICATES A GENERATED DEFAULT ACTIVATED        13200021
USEDEF   EQU   X'20'   ERROR ENCOUNTERED WHICH NEGATES USER VALUES DEF. 13250021
KFORM    EQU   X'40'                                                    13300021
INCOMPT  EQU   X'80'  INCOMPATABLE OPTIONS MESSAGE NECESSARY            13350021
NOXML    EQU   X'97' RST MASK TO TURN OFF XREF,MAP AND LIST FOR NOPRINT 13400021
SCNDTIME EQU   X'20'  MOTP ENTERED FOR THE SECOND TIME                  13450021
RESET    EQU   X'F0'   RESET MASK FOR SIZE SWITCHES                     13500021
NUMBER   EQU   X'F0'   MASK FOR CHECKING VALID NUMERICAL ZONES          13550021
RSTKFORM EQU   X'BF'   RESET MASK  FOR K FORM                           13600021
HIAR     EQU   X'04'                                                    13650021
NOHIAR   EQU   X'FB'                                                    13700021
SCTR     EQU   X'04'                                                    13750021
NOSCTR   EQU   X'FB'                                                    13800021
RENT     EQU   X'10'                                                    13850021
XREF     EQU   X'40'                                                    13900021
TEST     EQU   X'10'                                                    13950021
REFR     EQU   X'01'                                                    14000021
CALL     EQU   X'7F'                                                    14050021
NORNR    EQU   X'3F'                                                    14100021
RENTREUS EQU   X'C0'                                                    14150021
NOREFR   EQU   X'FE'                                                    14200021
MAP      EQU   X'20'                                                    14250021
NE       EQU   X'08'                                                    14300021
NONE     EQU   X'F7'                                                    14350021
NOMAP    EQU   X'DF'                                                    14400021
NOXREF   EQU   X'BF'                                                    14450021
NOLIST   EQU   X'F7'                                                    14500021
NOTERM   EQU   X'FD'                                                    14550021
NOTEST   EQU   X'EF'                                                    14600021
DCBS     EQU   X'10'                                                    14650021
TERM     EQU   X'02'                                                    14700021
OL       EQU   X'08'                                                    14750021
NCAL     EQU   X'80'                                                    14800021
XCAL     EQU   X'04'                                                    14850021
LET      EQU   X'10'                                                    14900021
REUS     EQU   X'40'                                                    14950021
LIST     EQU   X'08'                                                    15000021
DC       EQU   X'7F'                                                    15050021
OVLY     EQU   X'20'                                                    15100021
NORENT   EQU   X'7F'                                                    15150021
NOREUS   EQU   X'BF'                                                    15200021
TABLEEND EQU   X'FF'                                                    15250021
MULT1024 EQU   10                                                       15300021
NEWPAGE  EQU   X'19'                                                    15350021
 EJECT                                                                  15400021
         USING VRT,R6                                                   15450021
         USING APTDSECT,R2                                              15500021
         USING DEFDSECT,R1                                              15550021
         USING *,15                                                     15600021
         STM   RE,RD,SAVEA              SAVE REGISTERS                  15650021
         DROP 15                                                        15700021
         BALR  RC,R0                                                    15750021
         USING *,RC                                                     15800021
         BC    15,MOID+6                                                15850021
MOID     DC    C'01MOPT'                                                15900021
 EJECT                                                                  15950021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 16000021
*                                                                     * 16050021
*  THIS IS THE OPTION SCANNING ROUTINE . IT WILL CHECK THE PARM.      * 16100021
*   FIELD FOR VALID OPTIONS. INVALID OPTIONS AND VALID OPTIONS WILL   * 16150021
*    BE PLACED IN THE PRINT BUFFER TO BE PRINTED UPON RETURN TO INT.  * 16200021
*    PARMREG HAS POINTER TO 1ST BYTE OF THE PARAMATER FIELD PASSED ON * 16250021
*    THE EXEC CARD.                                                   * 16300021
* R6 ALWAYS POINTS TO A WORK AREA                                     * 16350021
* R2 ALWAYS POINTS TO APT                                             * 16400021
* R8 WHILE SCANNING FOR PARAMATERS HAS THE ADR OF NXT AVAIL POS IN    * 16450021
* PARAMATER MESSAGE TO PLACE THE PARAMATER                              16500021
*                                                                     * 16550021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 16600021
  SPACE 2                                                               16650021
         TM    APTSWS,SCNDTIME    SECOND TIME IN OPT                    16700021
         BZ    OPT01                                                    16750021
         L     R6,TXTIO           USE THE TXTIO TABLE FOR BUFFER        16800021
         MVI   NOTVLD,TABLEEND    DO NOT ACCEPT TABLE ALLOCATING PARMS. 16850021
         MVI   MESGNO1,NEWPAGE     ITERATIONS MUST BEGIN ON NEW PAGE    16900021
         B     OPT02                                                    16950021
 SPACE 1                                                                17000021
OPT01    LH    RA,0(0,PARMREG)     NO. OF BYTES PASSED IN THE LIST      17050021
         LA    RB,DISP2(0,PARMREG) ADDRESS OF THE FIRST BYTE            17100021
         SPACE 1                                                        17150021
         GETMAIN R,LV=274         ACQUIRE DYNAMIC WORK SPACE            17200021
         LR    R6,R1              PRIME DSCT REG                        17250021
         SPACE 1                                                        17300021
OPT02    MVI   INTERN1,NULL       CLEAR THE SWITCHES                    17350021
         XC    MSGONE(4),MSGONE                                         17400021
         XC    MSGTWO(4),MSGTWO                                         17450021
         XC    MSGTHREE(4),MSGTHREE                                     17500021
         LTR   RA,RA               IS LENGTH THAT WAS PASSED = 0        17550021
         BNP   NOTANY             NO PARAMATERS                         17600021
         MVI   TRTBUF,NULL        CLEAR FIRST BYTE                      17650021
         MVC   TRTBUF+BYTES1(255),TRTBUF CLR REST OF BUFFER             17700021
         SPACE 1                                                        17750021
         MVI   TRTBUF+COMMA,COMMA MOVE COMMA TO COMMA DISPLACEMENT      17800021
         MVI   TRTBUF+EQUAL,EQUAL MOVE EQUAL TO EQUAL DISPLACEMENT      17850021
         MVI   TRTBUF+LPAREN,LPAREN MOVE IN LEFT PARENTHESIS            17900021
         MVI   TRTBUF+RPAREN,RPAREN MOVE IN RIGHT PARENTHESIS           17950021
         MVI   TRTBUF+BLANK,BLANK MOVE IN A BLANK(MAKES PARMS FREE-FORM 18000021
         MVC   OPTIONS(76),BLK1 RESET THE LINE                          18050021
         MVC   GENDFLTS(20),BLK2    CLEAR THE LINE                      18100021
         LA    R8,OPTIONS         ADDRESS OF PLACE OPTIONS AREA         18150021
         L     R1,DEFADR          ADDRESS OF DEF                        18200021
SCANOPT  BCTR  RA,0                -1 FOR MACHINE LENGTH OF LIST        18250021
         LR    R0,R2               SAVE DSECT BASE                      18300021
         EX    RA,SCAN             SCAN FOR = OR                        18350021
         BNE   OPTFOUND            IF STOPPED CHECK FOR VALID OPTION    18400021
         LA    R9,DISP1(0,RA)     PRINE R 9 WITH TRUE LENGTH            18450021
         TM    INTERN1,APF        AM I SEARCHING                 Y01048 18460000
         BO    APFRTN60           FOR AUTHORIZATION CODE         Y01048 18470000
         TM    INTERN1,SIZE       WAS I IN THE SIZE SEARCH              18500021
         BO    OPT111             IF SO CONTINUE SIZE EXTRACTION        18550021
         LTR   R7,RA              TRANSFER THE LENGTH                   18600021
         BNM   LASTSCN            IF MORE THAN 0 CONTINUE SCAN  XA05449 18650003
OPTEXIT  BCTR  R8,0                -1 TO GET ADDRESS OF LAST COMMA      18700021
         CLI   0(R8),RPAREN       STOPPED LAST BY A )                   18750021
         BE    EXIT               IF SO DO NOT BLANK IT OUT             18800021
         MVI   0(R8),BLANK         BLANK OUT LAST COMMA                 18850021
EXIT     EQU   *                                                        18900021
         LA    R3,MESGNO1    POINT TO START OF TEXT             OY00338 18910001
         SR    R8,R3         CALC LENGTH OF TEXT                OY00338 18920001
         STC   R8,HEADRS     SAVE ACTUAL TEXT LENGTH            OY00338 18930001
 EJECT                                                                  18950021
*** TEST FOR ALLOWABLE OPTIONS                                          19000021
 SPACE 1                                                                19050021
         TM    NEWSW,HIAR         IS HIAR OPTION ON                     19100021
         BZ    OPT11B             NO PROCESS OTHER OPTIONS              19150021
         OI    PDSE7,SCTR         SET SCTR OPTION ON                    19200021
OPT11B   TM    APT0,XREF          IS XREF OPTION ON                     19250021
         BZ    OPT12              NO                                    19300021
         TM    APT0,MAP           IS MAP OPTION ON                      19350021
         BZ    OPT13              BRANCH IF NOT                         19400021
         NI    APT0,NOMAP         SET MAP OPTION OFF                    19450021
         B     OPT13                                                    19500021
OPT12    TM    APT0,MAP           IS THE MAP OPTION ON                  19550021
         BZ    OPT14              NO                                    19600021
OPT13    TM    PDSE8,NE           IS NE OPTION ON                       19650021
         BZ    OPT14              NO                                    19700021
         NI    PDSE8,NONE         SET NE OFF - WANTS MAP -              19750021
         OI    INTERN1,INCOMPT    INDICATE INCOMPATABLE OPTIONS         19800021
OPT14    TM    PDSE7,TEST         IS TEST ON                            19850021
         BZ    OPT16              NO                                    19900021
         TM    PDSE8,NE                IS NE ON                         19950021
         BZ    OPT16              NO CONTINUE                           20000021
         NI    PDSE8,NONE         CLEAR NE INDICATOR                    20050021
         OI    INTERN1,INCOMPT    INDICATE INCOMPATABLE OPTIONS         20100021
OPT16    TM    PDSE7,OVLY         IS OVERLAY OPTION ON                  20150021
         BZ    OPT26              EXIT                                  20200021
         TM    PDSE7,RENTREUS     IS RENT OR REUS ON                    20250021
         BNZ   OPT16B             YES -RESET OPTION -                   20300021
         TM    PDSE8,REFR         IS REFR ON                            20350021
         BZ    OPT16A             NO -TEST FOR SCTR-                    20400021
OPT16B   NI    PDSE8,NOREFR       CLEAR REFR                            20450021
         NI    PDSE7,NORNR        CLEAR REUS AND RENT                   20500021
         OI    INTERN1,INCOMPT    INDICATE INCOMPATABLE OPTIONS         20550021
OPT16A   TM    PDSE7,SCTR         IS SCTR ON                            20600021
         BZ    OPT26              EXIT                                  20650021
         NI    PDSE7,NOSCTR       CLEAR SCTR                            20700021
         NI    NEWSW,NOHIAR       CLEAR HIAR                            20750021
         OI    INTERN1,INCOMPT    INDICATE INCOMPATABLE OPTIONS         20800021
OPT26    EQU   *    ** END OF INCOMPATABLE OPTIONS SCAN **              20850021
 EJECT                                                                  20900021
***                                                                     20950021
*** THIS SECTION CHECKS IF USER SPECD VAL 1 OR 2                        21000021
*** DEFAULTS VALUES NOT SPECD DEFAULTS BOTH IF CONFLICT WITH DESIGN PT. 21050021
**                                                                      21100021
*** R3 = VALUE 1  0 IF SPECIFIED INCORRECTLY OR IF USER WANTS DEFAULT   21150021
*** R4 = VALUE 2  0 IF SPECIFIED INCORRECTLY OR IF USER WANTS DEFAULT   21200021
         SPACE 2                                                        21250021
         L     R1,DEFADR           ADDRESS OF HEWLFDEF                  21300021
         MVC   IDENT(BYTES4),DEFNAME DESIGN NAME OF EDITOR              21350021
         LM    R3,R4,VALUE1       USER(IF SPECD) R3=VALUE1,R4=VALUE2    21400021
         LM    R9,RB,DEFDSNPT DEFAULTS R9=DSNPT,RA=DEFVAL1,RB=DEFVAL2   21450021
  SPACE 1                                                               21500021
         TM    INTERN1,USEDEF     SIZE SPECD INCORRECTLY                21550021
         BO    OPT320             IF SO USE DEFAULTS                    21600021
         LTR   R3,R3               DID USER SPECIFY A VALID VALUE       21650021
         BP    OPT300                                                   21700021
         LR    R3,RA              GET DEFAULT VALUE 1                   21750021
         ST    RA,VALUE1          USE DEFAULT VALUE 1                   21800021
         OI    INTERN1,USEDEF     INDICATE DEFAULT(S) USED              21850021
         B     OPT330              CHECK VALUE2                         21900021
         SPACE 1                                                        21950021
OPT300   CR    R3,R9              IS VALUE 1 LT DSNPT                   22000021
         BNL   OPT330              NO CHECK VALUE 2                     22050021
OPT320   STM   RA,RB,VALUE1       USE DEFAULT VALUES 1 AND 2            22100021
         B     OPT380               DEF VALUES IN EXIT                  22150021
OPT330   LTR   R4,R4              DID USER SPEC. VALUE 2                22200021
         BNP   OPT350              USER WANTS DEFAULT VALUE 2           22250021
         CR    R3,R4              IS VALUE 2 GT VALUE 1                 22300021
         BL    OPT350              YES  ERROR                           22350021
         C     R4,MINVAL2         VALUE 2 LT MINIMUM                    22400021
         BL    OPT350              USE DEFAULT VALUE2                   22450021
         C     R4,MAXVAL2         DOES VALUE 2 EXCEED MAXIMUM           22500021
         BNH   OPT390              VALUE 2 ACCEPTABLE                   22550021
OPT350   ST    RB,VALUE2          USE DEFAULT VALUE 2                   22600021
         SPACE 1                                                        22650021
OPT380   OI    INTERN1,USEDEF      INDICATE VALUE DEFAULTED             22700021
 EJECT                                                                  22750021
***                                                                     22800021
*** THIS SECTION SETS UP A MESSAGE INDICATING THE VALUES USED AND       22850021
** WETHER THEY ARE DEFAULTS OR VARIABLE OPTIONS SPECIFIED BY THE USER,  22900021
***                                                                     22950021
 SPACE 2                                                                23000021
OPT390   LA    R8,VALUES          ADDRESS OF MESSAGE 1 VALUES USED SLOT 23050021
         L     R1,VALUE1          QUANTITY VALUE1                       23100021
         BAL   RE,OPT500          DELETE LEADING ZEROS - PLACE IN MSG   23150021
         MVI   0(R8),COMMA        INSERT THE COMMA SEPARATOR            23200021
         LA    R8,DISP1(0,R8)     BUMP POINTER TO NEXT BLANK            23250021
         L     R1,VALUE2          QUANTITY VALUE2                       23300021
         BAL   RE,OPT500          DELETE LEADING ZEROS - PLACE IN MSG   23350021
         MVI   0(R8),RPAREN       INSERT THE R PAREN TERMINATOR         23400021
         TM    INTERN1,USEDEF          DEFAULTS USED?                   23450021
         BZ    OPT510                  NO                               23500021
         MVC   DEFAULTM+10(17),DEFS    YES - MOVE IN DEFAULT            23550021
OPT510   EQU   *                                                        23600021
 SPACE 2                                                                23650021
***                                                                     23700021
***      THIS SECTION SETS UP THE MESSAGES RETURNED TO INT              23750021
***   THIS SECTION DELETS HEADER MESSAGES WHEN THE NO PRINT OPTION      23800021
*** HAS BEEN CODED IN THE PARAMATER FIELD.                              23850021
***                                                                     23900021
 SPACE 2                                                                23950021
         LM    R3,R5,HEADRS       LN AND ADR OF MESSAGES 1 AND 2        24000021
         STM   R3,R4,MSGONE       PS TO INT THROUGH APT                 24050021
OPT775   TM    INTERN1,INCOMPT    WERE THERE INCOMPATABLE OPTIONS       24100021
         BZ    OPT800             NO -DO NOT ISSUE MESSAGE -            24150021
         ST    R5,MSGTHREE        SAVE IN APT                           24200021
OPT800   EQU   *                                                        24250021
 EJECT                                                                  24300021
***                                                                     24350021
*** EPILOG                                                              24400021
***                                                                     24450021
 SPACE 1                                                                24500021
         TM    APTSWS,SCNDTIME    SECOND TIME IN OPT                    24550021
         BO    OPT999             DO NOT ISSUE THE FREE MAIN            24600021
         FREEMAIN R,LV=274,A=(6) FREE DYNAMIC WORK SPACE                24650021
 SPACE 2                                                                24700021
RETURN   LM    RE,RD,SAVEA                                              24750021
         BR    RE                       RETURN                          24800021
    SPACE 1                                                             24850021
*        THIS SECTION PRINTS THE HEADER MESSAGES AFTER A PARM CARD      24900021
*        HAS  BEEN ENCOUNTERED.  HEWLFINT PRINTS THE MESSAGES FROM      24950021
*        THE PARMS ON THE EXEC CARD.                                    25000021
*                                                                       25050021
OPT999   EQU   *                                                        25100021
         L     RF,=V(HEWLEPNT)    ADDRESS OF THE PRINT ROUTINE          25150021
         LA    R3,MSGONE               GET ADDRESS OF LENGTH AND ADD.   25200021
*                                      OF FIRST MESSAGE                 25250021
         LA    R5,MSGTHREE        PRIME END REG                         25300021
         LA    R4,4               INDEX                                 25350021
OPT997   L     R8,HEWLCWBB+20     ADDRESS OF SYSPRINT BUFFER            25400021
         SR    R9,R9                                                    25450021
         IC    R9,0(0,R3)              GET LENGTH OF THE MESSAGE        25500021
         LTR   R9,R9              IS IT ZERO                            25550021
         BZ    OPT998             NO PRINT SKIP                         25600021
         L     RB,0(0,R3)              PUT ADDRESS OF MESSAGE IN RB     25650021
         EX    R9,MVOPT2M         MOOE THE OPTION TO THE MESSAGE        25700021
         BALR  RE,RF              PRINT THE HEADER                      25750021
OPT998   BXLE  R3,R4,OPT997                                             25800021
         B     RETURN                                                   25850021
         EJECT                                                          25900021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 25950021
*                                                                     * 26000021
*RB  IS USED TO HOLD THE LAST(STOPPED AT) ADDRESS IN THE PARM FIELD   * 26050021
*RA  IS USED TO HOLD THE NUMBER OF BYTES OF OPTIONS LEFT IN PARM FIELD* 26100021
* R9 IS USED TO HOLD THE TRUE LENGTH OF AN OPTION FOR ADDRESS UPDATEING 26150021
* R7 IS USED TO HOLD MACHINE LENGTH OF OPTION FOR EX INSTRUCTIONS.    * 26200021
*                                                                     * 26250021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 26300021
         SPACE 2                                                        26350021
OPTFOUND STC   R2,FUNCBYTE         SAVE THE STOPPER BYTE.               26400021
         LR    R2,R0               RESTORE DSECT BASE.                  26450021
         LR    R7,R1               TIC CURRENT(STOPPED AT) ADDRESS.     26500021
         SR    R7,RB               LAST ADR-CUR ADR = LENGTH OF OPTION  26550021
         LR    R9,R7              TRANSFERR LENGTH TO R9                26600021
         TM    INTERN1,APF        AM I SEARCHING                 Y01048 26610000
         BO    APFRTN             FOR AUTHORIZATION CODE         Y01048 26620000
         TM    INTERN1,SIZE  AM I LOOKING FOR SIZE AFT(SIZE=)           26650021
         BZ    CHECKOPT            IF NOT DETERMINE IF VALID OPTION.    26700021
         MVI   TRTBUF+EQUAL,NULL DELETE = FROM TRT TABLE                26750021
* R7 CONTAINS TRUE LENGTH NOT MACH LENGTH BECAUSE (, MEANS DEFAULT      26800021
* THAT VALUE WHERE AS LIST,,, MEANS IGNORE AND WOULD NOT CAUSE VAL1 OR  26850021
* VAL2 RCVD SWITCH SETTING                                              26900021
         SPACE 1                                                        26950021
         TM    INTERN1,LPRENRCV    ( RECIEVED ?                         27000021
         BZ    OPT101              NO                                   27050021
         CLI   FUNCBYTE,COMMA      STOPPED BY COMMA                     27100021
         BE    OPT100              YES CHECK IF VAL1 RCVD YET           27150021
         CLI   FUNCBYTE,BLANK     STOPPED BY A BLANK                    27200021
         BE    OPT107             YES SKIP FREE FORM                    27250021
* AT THIS POINT HAD TO BE STOPPED BY A ) BECAUSE NO OTHERS ARE STOPPERS 27300021
         OI    INTERN1,RPRENRCV    SET ) RECIEVED                       27350021
         TM    INTERN1,VAL1RCVD    VALUE 1 RECIEVED YET                 27400021
         BO    OPT102              YES CHECK FOR VALUE 2 RECIEVED       27450021
         LA    RF,VALUE1          ADDRESS OF VALUE1                     27500021
         BAL   RE,MOVEVAL          CHANGE RADIX OF VALUE POINTED BY RB  27550021
         OI    INTERN1,VAL1RCVD   INDICATE VALUE 1 R*CIEVED             27600021
         B     OPT103                                                   27650021
         SPACE 1                                                        27700021
OPT101   CLI   FUNCBYTE,LPAREN     STOPPED BY (                         27750021
         BE    OPT104              YES CHECK LENGTH                     27800021
         CLI   FUNCBYTE,COMMA      STOPPED BY ,                         27850021
         BE    OPT105              YES                                  27900021
         CLI   FUNCBYTE,BLANK     STOPPED BY A BLANK                    27950021
         BE    OPT112             YES SKIP FREE FORM                    28000021
         CLI   FUNCBYTE,EQUAL     STOPPED BY EQUAL -FREE FORM -         28050021
         BE    OPT112             YES SKIP FREE FORM                    28100021
         B     SIZEINVL            -ERROR- POSSIBLE *SIZE=)*            28150021
         SPACE 1                                                        28200021
OPT104   OI    INTERN1,LPRENRCV   SET ( RECIEVED                        28250021
         B     OPT112                                                   28300021
         SPACE 1                                                        28350021
OPT100   TM    INTERN1,VAL1RCVD    VALUE 1 RECIEVED YET                 28400021
         BO    OPT102              YES CHECK IF VALUE 2 RECIEVED        28450021
         LA    RF,VALUE1          ADDRESS OF VALUE1                     28500021
         BAL   RE,MOVEVAL          CONVERT FROM RADIX 10 TO RADIX 2     28550021
         OI    INTERN1,VAL1RCVD    INDICATE VALUE 1 RECIEVED            28600021
         B     GOBY                CONTINUE                             28650021
         SPACE 1                                                        28700021
OPT102   LA    RF,VALUE2          ADDRESS OF VALUE2                     28750021
OPT106   BAL   RE,MOVEVAL         CONVERT FROM RADIX 10 TO RADIX 2      28800021
OPT103   NI    INTERN1,RESET       CLEAR SWITCHES USED FOR SIZE SRCH    28850021
         MVI   TRTBUF+EQUAL,EQUAL RESTORE = SIGN TO TRT TABLE           28900021
         B     GOBY                CONTINUE                             28950021
 SPACE 1                                                                29000021
OPT105   LA    RF,VALUE1          ADDRESS OF VALUE1                     29050021
         B     OPT106             END OF SCAN -SIZE=100K-               29100021
OPT107   TM    INTERN1,VAL1RCVD   VALUE 1 RECIEVED YET                  29150021
         BO    OPT108             YES                                   29200021
         LA    RF,VALUE1          ADDRESS OF VALUE1                     29250021
         BAL   RE,MOVEVAL                                               29300021
         B     GOBY                                                     29350021
 EJECT                                                                  29400021
OPT108   LA    RF,VALUE2          ADDRESS OF VALUE2                     29450021
         BAL   RE,MOVEVAL                                               29500021
         B     GOBY                                                     29550021
 SPACE 1                                                                29600021
OPT111   LR    R7,R9              LAST SCAN R7=R9                       29650021
         B     OPT100 CONTINUE                                          29700021
         SPACE 2                                                        29750021
SIZEINVL OI    INTERN1,USEDEF      SIZE SPEC. INVALIDLY                 29800021
* AT THIS POINT POSSIBLE TOGIVE MESSAGE                                 29850021
         B     INVALIDR                                                 29900021
         SPACE 1                                                        29950021
ZEROLN   LA    RB,DISP1(0,RB)      UPDATE LAST(STOPPED AT) ADDRESS.     30000021
         B     TSTCNT1                                                  30050021
         EJECT                                                          30100021
*                                                                Y01048 30110000
*        APFRTN-CHECK VALUE FOR AC=N, IF VALUE OKAY              Y01048 30120000
*               MOVE TO APT                                      Y01048 30130000
*                                                                Y01048 30140000
*        R1    WORK                                              Y01048 30142000
*        R2    BASE OF DSECT                                     Y01048 30144000
*        R4    WORK                                              Y01048 30146000
*        R5    WORK                                              Y01048 30148000
*        R7    MACHINE LENGTH OF VALUE                           Y01048 30148400
*        R9    REAL LENGTH OF VALUE                              Y01048 30148800
*        RA    NUM. OF BYTES LEFT IN PARM FIELD                  Y01048 30149200
*        RB    POINTS TO VALUE TO BE CONVERTED                   Y01048 30149600
APFRTN   DS    0H                                                Y01048 30149700
         LTR   R9,R7              LENGTH = 0?                    Y01048 30149800
         BNP   OPT112             YES - SKIP                     Y01048 30149900
         CLI   FUNCBYTE,COMMA     IS STOPPER A COMMA?            Y01048 30166600
         BE    APFRTN10           YES - OKAY                     Y01048 30176600
         CLI   FUNCBYTE,BLANK     IS STOPPER A BLANK?            Y01048 30178600
         BE    APFRTN10           YES - OKAY                     Y01048 30180600
         BCTR  R7,0               NO                             Y01048 30182600
         B     ACINVALD           ERROR                          Y01048 30183000
APFRTN10 EQU   *                                                 Y01048 30183100
         BCTR  R7,0               GET MACHINE LENGTH             Y01048 30183200
         LA    R3,8               MAX NUM DIGITS                 Y01048 30188800
         CR    R3,R9              ARE THERE TOO MANY?            Y01048 30190800
         BL    ACINVALD           YES - ERROR                    Y01048 30192800
         LA    R5,0(RB,R7)        LAST NUM IN STR                Y01048 30193200
         LR    R1,RB              FIRST NUM IN STR               Y01048 30193600
         LA    R4,1               INDEX                          Y01048 30194000
APFRTN30 EQU   *                                                 Y01048 30194100
         TM    0(R1),NUMBER       IS IT A DIGIT?                 Y01048 30194200
         BNO   ACINVALD           NO - ERROR                     Y01048 30194300
         BXLE  R1,R4,APFRTN30     SCAN ALL DIGITS                Y01048 30208200
         XC    WORK,WORK          CLEAR WORK                     Y01048 30218200
         EX    R7,PACK            PACK VALUE                     Y01048 30220200
         CVB   R1,WORK            CONVERT TO BINARY              Y01048 30220600
         LA    R4,K255            MAX ALLOWED                    Y01048 30221000
         CR    R1,R4              GREATER THAN MAX?              Y01048 30221400
         BH    ACINVALD           YES - ERROR                    Y01048 30221800
         STC   R1,APTAPFAC        SAVE APF CODE FOR BOTH         Y01048 30221900
         STC   R1,PDSAPFAC        REAL AND DEFAULT VALUES        Y01048 30222000
APFRTN50 NI    INTERN1,FF-APF     OFF INTERNAL SW                Y01048 30222100
         B     GOBY               MOVE TO PRINT                  Y01048 30226700
APFRTN60 LR    R7,R9              PRIME R7                       Y01048 30228700
         B     APFRTN10           LAST SCAN                      Y01048 30230700
ACINVALD NI    INTERN1,FF-APF     OFF INTERNAL SWITCH            Y01048 30231100
         B     INVALIDR           MESSAGE                        Y01048 30231200
         EJECT                                                          30231300
CHECKOPT EQU   *                   ENTRY FOR FIRST TIME                 30231500
         LTR   R9,R7               TRANSFER BACK TO AND TEST FOR 0 INR9 30236100
         BNP   OPT112             LENGTH OF OPTION 0 (,,OR==OR=,OR,=)   30250021
* ,( OR (( OR =( OR (= OR (, OR ), OR )= OR )) OR ,) OR ),              30300021
         BCTR  R7,0                -1 FOR MACHINE LENGTH                30350021
LASTSCN  EQU   *                                                        30400021
         LA    R3,OPTFIELD        ADDRESS OF ACCEPTABLE OPTIONS         30450021
         SR    R4,R4              CLEAR LENGTH REGISTER                 30500021
         SR    R5,R5              CLEAR INDEX REG                       30550021
         SPACE 1                                                        30600021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 30650021
*                                                                     * 30700021
* DETERMINES IF OPTION IS A VALID SELECTION IF NOT INSERT INVALID& SKIP 30750021
*                                                                     * 30800021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 30850021
         SPACE 1                                                        30900021
CHKOPT   IC    R4,0(0,R3)     LENGTH OF THE OPTION                      30950021
         CR    R4,R9              LN OF OPT IN LIST=LN OF OPT FOUND     31000021
         BNE   UPPTR              NO CHECK THE NEXT ENTRY               31050021
         EX    R7,COMPOPT         COMPARE THE TWO OPTIONS FOR =         31100021
         BE    OPT10              SET THE OPTION                        31150021
         SPACE 1                                                        31200021
UPPTR    LA    R3,1(R4,R3)        LN OF INST+LN BYTE(1)+LN OPT=NXT OPT  31250021
         LA    R5,DISP4(0,R5)     UP INDEX TO NEXT OPTION SETTER        31300021
         CLI   0(R3),TABLEEND     END OF ACCEPTABLE OPTIONS             31350021
         BNE   CHKOPT             CHECK THE NEXT OPTION IN THE LIST     31400021
* AT THIS POINT THE OPTION WAS NOT ONE OF THE ACCEPTABLE OPTIONS        31450021
 SPACE 1                                                                31500021
INVALIDR MVC   0(7,R8),INVMSG     OPTION INVALID MOVE MSG TO BUFFER     31550021
         MVC   7(BYTES1,R8),FUNCBYTE MOVE STOPPER BYTE                  31600021
         LA    R8,DISP8(0,R8)      UPDATE POINTER                       31650021
         B     RSTPTR              SAVE   POINTER                       31700021
OPT10    EX    R0,SETOPTS(R5)     SET OR RESET THE SWITCH(OPTION)       31750021
GOBY     EX    R7,MVOPT2M          MOVE THE OPTION TO HEADER MESSAGE    31800021
OPT112   EQU   *                                                        31850021
         LA    R3,0(R8,R9)        LN OF OPT+MSG ADR=POS FOR STOPPER     31900021
         MVC   0(BYTES1,R3),FUNCBYTE MOVE IN THE STOPPER BYTE           31950021
         LTR   R9,R9              WAS THE LENGTH OF THE OPTION 0        32000021
         BNP   SHRT               IF SO SKIP THE ALTERNATE INS          32050021
         CLI   FUNCBYTE,BLANK     WAS THE STOPPER A BLANG               32100021
         BE    OPT113             IF SO DO NOT MOVE IT                  32150021
         LA    R8,DISP2(R7,R8)     A(MSG)+MACH. LENGTH+2(,+1)=NEW PTR.  32200021
RSTPTR   LA    RB,DISP1(R9,RB)    UPDATE THE ADDRESS                    32250021
TSTCNT1  SR    RA,R9               LENGTH LEFT - AMMOUNT PROCESSED.     32300021
TSTCNT2  LTR   RA,RA               IS LENGTH STILL >0                   32350021
         BNP   OPTEXIT             TERMINATE  IF O OR -                 32400021
         B     SCANOPT             CONTINUE                             32450021
         SPACE 2                                                        32500021
SHRT     CLI   0(R3),BLANK        STOPPED BY A BLANK CHARACTER          32550021
         BE    ZEROLN             DO NOT MOVE BLANKS TO MESSAGE         32600021
         LA    R8,DISP1(R7,R8)                                          32650021
         B     ZEROLN                                                   32700021
  SPACE 1                                                               32750021
OPT113   LA    R8,0(R9,R8)        DO NOT INCLUDE THE LENGTH OF THE BLK  32800021
         B     RSTPTR                                                   32850021
 SPACE 1                                                                32900021
         EJECT                                                          32950021
***                                                                     33000021
*** UPON ENTRY R1 HAS THE VALUE TO BE CONVERTED                         33050021
*** THIS SECTION DELETES LEADING ZEROES FORM NUMBERS TO PRINT           33100021
***                                                                     33150021
 SPACE 1                                                                33200021
OPT500   LA    R4,7               MAX LENGTH OF THE VALUE               33250021
         CVD   R1,WORK            CONVERT TO DECIMAL NUMBER             33300021
         OI    WORK+7,X'0F'       CHANGE ZONE                           33350021
         UNPK  WORK1,WORK+DISP4(BYTES4)   UNPACK FOR PRINTING           33400021
         LA    RB,WORK1+DISP1     ADDRESS OF UNPACKED VALUE             33450021
OPT508   CLI   0(RB),C'0'         IS THIS A LEADING ZERO                33500021
         BNE   OPT512             DON'T DELETE                          33550021
         LA    RB,1(0,RB)         CHECK THE NEXT ONE                    33600021
         BCT   R4,OPT508          CONTINUE DLETING LEADING ZEROS        33650021
OPT512   LA    R4,WORK1+BYTES8     LAST BYTE OF VALUE IN WORK           33700021
         SR    R4,RB              AM NUL-LN OF VAL=NO VLD NON-ZERO      33750021
         BCTR  R4,0               - 1 FOR THE EXECUTE LENGTH            33800021
         EX    R4,MVOPT2M         MOVE THE VALUE TO THE MESSAGE         33850021
         LA    R8,DISP1(R4,R8) MC LN OF VAL+1ST ADR=ADR OF NXT BLK      33900021
         BR    RE                 RETURN                                33950021
 EJECT                                                                  34000021
***                                                                     34050021
***  UPON ENTRY INTO THIS ROUTINE (WHICH CONVERTS DECIMAL NUMBER IN K O 34100021
***  EXPLICIT FORMAT TO A HEXADECIMAL NUMBER)                           34150021
***  R1  UTILITY                                                        34200021
***  R2  BASE OF DSECT                                                  34250021
***  R3  UTILITY                                                        34300021
***  R4  UTILITY                                                        34350021
***  R5  POINTS TO THE LOCATION TO PLACE IT IN                          34400021
***  R7  MACHINE LENGTH OF VALUE   R9-1                                 34450021
***  R9 LENGTH OF VALUE (TRUE)                                          34500021
***  RA  # BYTES LEFT IN PARM FIELD                                     34550021
***  RB  POINTS TO THE VALUE TO BE CONVERTED                            34600021
***  RE HOLDS THE RETURN ADDRESS                                        34650021
         SPACE 2                                                        34700021
MOVEVAL  LTR   R4,R9               LN OF VALUE 0 -USE DEFAULT-          34750021
         BCR   CONCODE8,RE         YES -RETURN USER DEFAULTS THIS VALUE 34800021
         BCTR  R7,0               LN OF OPT-1 = MACH LN                 34850021
         LA    R1,0(RB,R7) MACH.LN+A(VAL)=A(LAST BYTE OF VAL)*R7=R9-1*  34900021
         CLI   0(R1),K             IS VALUE IMPLICIT  K                 34950021
         BNE   EXPLICIT                                                 35000021
         OI    INTERN1,KFORM       INDICATE IMPLICIT VALUE              35050021
         TM    INTERN1,VAL1RCVD   VALUE 1 RECIEVED YET                  35100021
         BZ    OPT600             YES CHECK LENTH                       35150021
         LA    R3,4                MAX.NO.CHARS. FOR IMPLICIT VALUE     35200021
OPT633   BCTR  R4,0               -1 FROM CHAR CNT, TO NOT CHECK K      35250021
         BCTR  R7,0       -1 FROM CHAR CNT FOR K                        35300021
OPT750   CR    R3,R9              CHARACTER COUNT OF VALUE TOO BIG      35350021
         BL    SIZEINVL                                                 35400021
CHKZONES BCTR  R4,0                                                     35450021
         LA    R5,0(RB,R4)         LAST NUMBER IN STRING                35500021
         LR    R1,RB              STARTING ADDRESS OF VALUE             35550021
         LA    R4,1               INDEX                                 35600021
NUMCK    TM    0(R1),NUMBER        ARE THE ZONES VALID                  35650021
         BNO   SIZEINVL            ZONES INVALID                        35700021
         BXLE  R1,R4,NUMCK        CONTINUE CHECKING ZONES               35750021
         XC    WORK,WORK          CLEAR WORK                            35800021
         EX   R7,PACK      PACK VALUE                                   35850021
         CVB   R1,WORK             CONVERT TO RADIX 2                   35900021
         TM    INTERN1,KFORM       WAS VALUE IMPLICIT                   35950021
         BZ    STOREVAL            NO                                   36000021
         NI    INTERN1,RSTKFORM    RESET SW                             36050021
         SLL   R1,MULT1024        MULT BY 1024 MAKE EXPLICIT            36100021
         LA    R7,1(R7)   ADD 1 TO IMPL. CHAR CNT FOR MACH LN           36150021
STOREVAL ST    R1,0(0,RF)         RECORD THE VALUE                      36200021
         BR    RE                                                       36250021
         SPACE 1                                                        36300021
EXPLICIT TM    INTERN1,VAL1RCVD   VALUE 1 RECIEVED YET                  36350021
         BO    OPT700             YES CHECK VALUE 2 RECIEVED            36400021
         LA    R3,6                MAX NO CHARS FOR EXPLICIT FORM       36450021
         B     OPT750                                                   36500021
         SPACE 2                                                        36550021
OPT600   LA    R3,5                MAX.NO.CHARS. FOR IMPLICIT VALUE     36600021
         B     OPT633                                                   36650021
         SPACE 2                                                        36700021
OPT700   LA    R3,7                MAX NO CHARS FOR EXPLICIT FORM       36750021
         B     OPT750                                                   36800021
         SPACE 1                                                        36850021
NOTANY   MVC   OPTIONS+2(BYTES4),NONEM  NO OPTIONS SPECIFIED            36900021
         B     EXIT                                                     36950021
         SPACE 1                                                        37000021
***   THIS SECTION ISOLATES THOSE  OPTIONS SET ON BY GENERATED          37050021
***   DEFAULTS                                                          37100021
***                                                                     37150021
 SPACE 1                                                                37200021
OPT950   NC    SAVATS(BYTES1),0(R3) ISOLATE OPTIONC                     37250021
         BR    RE                                                       37300021
 SPACE 1                                                                37350021
MVOPT2M  MVC   0(0,R8),0(RB)     MOVE OPTION TO HEADER MESSAGE          37400021
COMPOPT  CLC   0(0,RB),1(R3) COMPARE FOR VALID OPTION                   37450021
SCAN     TRT   0(0,RB),TRTBUF      TRT THROUGH THE PARM FIELD           37500021
PACK     PACK  WORK,0(0,RB)  PACK SIZE FOR RADIX CONVERSION             37550021
TSWITCH  TM    SAVATS,0 TEST THE ISOLATED OPTIONS                       37600021
         EJECT                                                          37650021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 37700021
*                                                                     * 37750021
* THESE ARE THE ALLOWABLE OPTIONS.                                    * 37800021
*                                                                     * 37850021
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 37900021
         SPACE 2                                                        37950021
OPTFIELD EQU   *                  ** LINKAGE EDITOR OPTIONS **          38000021
 SPACE 1                                                                38050021
GENLST2  EQU   *                                                        38100021
         DC    X'04',C'XREF'      CROSS REFERENCE LISTING               38150021
         DC    X'03',C'MAP'       A MAP OF THE OUTPUT MODULE            38200021
         DC    X'04',C'LIST'      LIST THE CONTROL CARDS                38250021
GENLST1  EQU   *                                                        38300021
         DC    X'04',C'RENT'      MODULE IS RE-ENTRANT                  38350021
         DC    X'04',C'REUS'      MODULE IS SERIALLY RE-USEABLE         38400021
         DC    X'04',C'TEST'      MARK MODULE TEST                      38450021
         DC    X'03',C'LET'       DO NOT MARK NOT EXECUTABLE FOR ERRORS 38500021
         DC    X'04',C'XCAL'      IGNORE EXCLUSIVE CALLS IN OVERLAY     38550021
         DC    X'04',C'NCAL'      NO AUTOMALIC CALL LIBRARY             38600021
         DC    X'02',C'OL'        MARK -FETCH ONLY BY LOAD MACRO-       38650021
         DC    X'02',C'NE'        NOT-EDITABLE- NO CESD PRODUCED        38700021
         DC    X'02',C'DC'        1K RECORDS ON SYSLMOD FOR E'15-18-    38750021
         DC    X'04',C'REFR'      MATK -REFETCH AT ANY POINT- ER RECVY  38800021
         DC    X'04',C'TERM'      SUPPORT TERMINAL IN OS/TS             38850021
         DC    X'04',C'CALL'      USE SYSLIB FOR UNRES ERS              38900021
***                                                                     38950021
*** NEGATIVE OPTIONS SUPPORT                                            39000021
***                                                                     39050021
         DC    X'06',C'NOTEST'    DO NOT MARK IN TEST                   39100021
         DC    X'06',C'NOTERM'    NO TERMINAL SUPPORT                   39150021
         DC    X'06',C'NOLIST'    DO NOT LIST CONTROL CARDS             39200021
         DC    X'06',C'NOXREF'    NO CROSS-REFERENCE LISTING            39250021
         DC    X'05',C'NOMAP'     NO MAP OF LOAD MODULE                 39300021
         DC    X'06',C'NORENT'    MODULE NOT REENTRABLE                 39350021
         DC    X'06',C'NOREUS'    MODULE NOT REUSEABLE                  39400021
         DC    X'06',C'NOCALL'    SAME AS NCAL                          39450021
NOTVLD   EQU   *                                                        39500021
         DC    X'04',C'HIAR'      NOTE STORAGE HIARCHIES                39550021
         DC    X'04',C'SIZE'      USE FOLLOWING SIZES FOR EDIT RUN      39600021
         DC    X'04',C'DCBS'      USE DDCARD DCBBLKSIZE IF CAN          39650021
         DC    X'04',C'OVLY'      MODULE IS AN OVERLAY STRUCTURE        39700021
         DC    X'04',C'SCTR'      MARK MODULE BLOCK OR SCATTER LOAD     39750021
         DC    X'06',C'ALIGN2'    ALIGN ON 2K PAGE BOUNDARY      S01904 39760021
         DC    X'02',C'AC'        AUTHORIZATION CODE             Y01048 39770000
         DC    X'FF'              *** END OF OPTIONS ***                39800021
  EJECT                                                                 39850021
SETOPTS  DS    0H                                                       39900021
 SPACE 1                                                                39950021
         OI    APT0,XREF          XREF OPTION                           40000021
         OI    APT0,MAP           MAP OPTION                            40050021
         OI    APT0,LIST          LIST OPTION                           40100021
         OI    PDSE7,RENTREUS     RENT, AND REUS                        40150021
         OI    PDSE7,REUS         REUSABLE REUS OPTION                  40200021
         OI    PDSE7,TEST         TEST OPTION                           40250021
         OI    APT0,LET           LET OPTION                            40300021
         OI    APT0,XCAL          XCAL - EXCLUSIVE CALLS- OPTION        40350021
         OI    APT0,NCAL          NCAL - NO CALL- OPTION                40400021
         OI    PDSE7,OL            OL ONLY LOADABLE OPTION              40450021
         OI    PDSE8,NE           NOT EDITABLE -NE- OPTION              40500021
         NI    PDSE8,DC           DC OPTION                             40550021
         OI    PDSE8,REFR         MARK REFRESHABLE                      40600021
         OI    NEWSW,TERM         INDICATE TERMINAL OUTPUT              40650021
         NI    APT0,CALL          PERFORM AUTOCALL FOR UNRES - ER       40700021
         NI    PDSE7,NOTEST       RESET TEST ATTRIBUTE                  40750021
         NI    NEWSW,NOTERM       NO TERMINAL OUTPUT                    40800021
         NI    APT0,NOLIST        NO LIST                               40850021
         NI    APT0,NOXREF        NO XREF                               40900021
         NI    APT0,NOMAP         NO MAP                                40950021
         NI    PDSE7,NORENT       INDICATE NOT-REENTRANT                41000021
         NI    PDSE7,NOREUS       INDICATE NOT REUSEABLE                41050021
         OI    APT0,NCAL          NO AUTO CALL                          41100021
         OI    NEWSW,HIAR         HIARCHY OPTION                        41150021
         OI    INTERN1,SIZE       SIZEOPTION                            41200021
         OI    APTSWS,DCBS        DCBS OPTION                           41250021
         OI    PDSE7,OVLY         OVLY OPTION                           41300021
         OI    PDSE7,SCTR         SCTR OPTION ON                        41350021
         OI    APT4,ALIGN2        SET SWITCH FOR ALIGN2 OPTION   S01904 41360021
         OI    INTERN1,APF        AUTHORIZATION CODE             Y01048 41370000
 EJECT                                                                  41400021
         DS    0F                                                       41450021
GENSET1  DC    AL4(2,GENLST1,GENMASK1,3)                                41500021
GENSET2  DC    AL4(GENLST2,GENMASK2,3)                                  41550021
DEFADR   DC    V(HEWLFDEF)                                              41600021
HEADRS   DC    AL1(152),AL3(MESGNO1) LENGTH & ADD OF MESSAGE 1   YM5557 41650001
         DC    AL1(59),AL3(MESGNO2)    LENGTH AND ADDR OF MSG 2         41700021
         DC    AL1(029),AL3(MESGNO3) LENGTH AND ADDRESS OF MSG 3  M4507 41750000
MINVAL2  DC    A(6*1024) MINIMUM VALUE 2                                41800021
MAXVAL2  DC    A(100*1024)                                              41850021
GENMASK1 DC    AL1(RENT,REUS,TEST)                                      41900021
GENMASK2 DC    AL1(XREF,MAP,LIST)                                       41950021
    SPACE 1                                                             42000021
INVMSG   DC    CL7'INVALID'                                             42050021
MESGNO1  DC    X'09'                                                    42100021
IDENT    DC    C'XXXX-LEVEL LINKAGE EDITOR OPTIONS SPECIFIED'           42150021
BLK1     DC    CL1' '  BLANK TO RESET THE LINE                          42200021
OPTIONS  DC    27CL4' '                                          YM5557 42250001
MESGNO2  DC    X'09'                                                    42300021
DEFAULTM DC    CL11' '                 LEADING BLANKS                   42350021
         DC    C'VARIABLE OPTIONS USED -  SIZE=('                       42400021
VALUES   DC    CL16' '                                                  42450021
BLK2     DC    CL1' '  BLANK TO CLEAR LINE                              42500021
GENDFLTS DC    8CL4' '                                                  42550021
MESGNO3  DC    X'09'                                                    42600021
         DC    C'   ** OPTIONS INCOMPATIBLE **'                         42650021
DEFS     DC    CL17'DEFAULT OPTION(S)'                                  42700021
NONEM    DC    C'NONE'                                                  42750021
         DS    0F                                                       42800021
SAVEA    DS    16F  SAVE AREA                                           42850021
         DS    20F   PROVIDE 20 FULL WORDS OF MAINTENANCE AREA *******  42900021
     EJECT                                                              42950021
VRT      DSECT                                                          43000021
         DS    0D                                                       43050021
WORK     DC    1D'0'                                                    43100021
WORK1    DC    1D'0'                                                    43150021
TRTBUF   DC    256XL1'0'                                                43200021
FUNCBYTE DC XL1'0'                                                      43250021
INTERN1 DC XL1'0'                                                       43300021
APF      EQU   X'10'              AUTH CODE BEING HANDLED        Y01048 43310000
K255     EQU   255                AUTH CODE MAX                  Y01048 43320000
FF       EQU   X'FF'                                             Y01048 43330000
X01      EQU   X'01'                                             Y01048 43340000
APTDSECT HEWAPT                                                         43350021
 EJECT                                                                  43400021
DEFDSECT DSECT                                                          43450021
DEFID    DS    CL4 MODULE IDENTIFIER                                    43500021
DEFDSNPT DS    F   DESIGN POINT                                         43550021
DEFVAL1  DS    F   DEFAULT VALUE 1                                      43600021
DEFVAL2  DS    F   DEFAULT VALUE 2                                      43650021
DEFNAME  DS    CL4 EDITOR NAME F44,F88,F128,F256                        43700021
         END                                                            43750021
./  ADD  SSI=72970730,NAME=HEWLFOUT
         TITLE    'HEWLFOUT  - INTERMEDIATE OUTPUT PROCESSOR'           00070021
*                                                                     * 00140021
*STATUS:CHANGE LEVEL                                                  * 00210021
*                                                                     * 00280021
*FUNCTION/OPERATION:                                                  * 00350021
*        1- OUTPUT THE COMPOSITE EXTERNAL SYMBOL DICTIONARY(EDITABLE) * 00420021
*        2- BUILDS HALF EXTERNAL SYMBOL DICTIONARY                    * 00490021
*        3- BUILDS AND OUTPUTS CONTROL RECORD AND SEGTAB (1ST TXT) WHEN 00560021
*              THE PROGRAM IS IN OVERLAY                              * 00630021
*        4- BUILDS AND OUTPUTS THE SCATTER/TRANSLATION RECORDS WHEN   * 00700021
*              THE PROGRAM IS IN SCATTER                              * 00770021
*        5- READS IN THE TEXT AND RLD NOTE LISTS                      * 00840021
*        6- DETERMINES THE CONTROL SECTIONS WITH THE HIGHEST ESD ID   * 00910021
*              PER SEGMENT                                            * 00980021
*        7) INITIALIZES FOR 2ND PASS - HEWLKSCD                       * 01050021
*           A - SET 2 DECBS TO COMPLETE STATUS                        * 01120021
*           B - COMPUTES END ADDRESSES FOR 3 RLD BUFFERS              * 01190021
*           C - SETS CONTROL INFORMATION (16 BYTES) TO ZERO  IN CONTROL 01260021
*               RECORD BUFFER                                         * 01330021
*           D - PASSES PARAMETERS IN 3 GENERAL PURPOSE REGISTERS      * 01400021
*           E - COMPUTES END OF HESD ADDRESS                          * 01470021
*           F - CONVERTS TXTIO TABLE CURRENT NO.BYTES TO NO. OF ENTRYS* 01540021
*           G - SETS TTR LIST TO ZERO                                   01610021
*                                                                       01680021
*ENTRY POINT  HEWLFOUT - CONTROL SECTION NAME                         * 01750021
*                                                                     * 01820021
*INPUT:  TABLES - LISTED BELOW                                        * 01890021
*                                                                     * 01960021
*OUTPUT: TABLES - LISTED BELOW                                        * 02030021
*                                                                     * 02100021
*EXTERNAL ROUTINES: HEWLFLOG - ERROR DIAGNOSTIC ROUTINE               * 02170021
*                                                                     * 02240021
*EXITS - NORMAL   HEWLFSCD - SECOND PASS PROCESSOR                    * 02310021
*                                                                     * 02380021
*        ERRORS   HEWLFFNL - FINAL PROCESSOR - WHEN THERE IS NO TEXT IN 02450021
*              THE OUTPUT LOAD MODULE THE SECOND PASS IS BY PASSED    * 02520021
*TABLES/WORK AREA:                                                    * 02590021
*                                                                     * 02660021
*        1- ALL PURPOSE TABLE                                         * 02730021
*        2- COMPOSITE EXTERNAL SYMBOL DICTIONARY                      * 02800021
*        3- RELOCATION CONSTANT TABLE                                 * 02870021
*        4- SEGMENT TABLE ONE                                         * 02940021
*        5- TEXT NOTE LIST 1 AND 2                                    * 03010021
*        6- RLD  NOTE LIST 1 AND 2                                    * 03080021
*        7- SCATTER AND TRANSLATION TABLES                            * 03150021
*        8- HALF EXTERNAL DICTIONARY                                  * 03220021
*                                                                     * 03290021
*ATTRIBUTES:                                                          * 03360021
*                                                                     * 03430021
*NOTES:                                                               * 03500021
*                                                                     * 03570021
*                                                                     * 03640021
HEWLFOUT CSECT                                                          03710021
*********************************************************************** 03780021
*086800-105000,114100-163100,198800-195500,200900-201600         S21026 03790021
*210000-211400,622300-947800                                     S21026 03800021
*231700-289800,301700-303800,307300,308100,378700-382900         S01904 03810021
*392000,393400,406000,420000-425600                              S01904 03820021
*A375900,D423500,C425600                                        OX00029 03822000
*C308700,A309200,D634200-635600,A635400-635500,D716100-717500,   XM5480 03824003
*A718000-718100,D720300-721700,A721800-722300                    XM5480 03826003
*C277200-277900                                                  YM4013 03828002
*A718000-718100,740200-786200,A930100                           0X04245 03828402
*        REFER TO FIX FOR XM5480                        OX03509,OY03049 03828802
* D221900-226100,I298000,C300300                                 XM6065 03829203
* A604100,I299600                                                XM9089 03829603
* C914200                                                       ZA01402 03829702
* C566500                                                      @ZA07600 03830037
* A747910,747920 PREVENT ABEND0C4 WITH INCORRECT XLATOR IDR    @ZA17975 03831037
*                                                                       03833037
         EJECT                                                          03836037
*********************************************************************** 03840021
*                                                                       03850021
*              INTERMEDIATE OUTPUT PROCESSOR                            03920021
*                                                                       03990021
*********************************************************************** 04060021
*              REGISTER ASSIGNMENT                                    * 04130021
*********************************************************************** 04200021
ERRCODE  EQU   0                        ERR CODE                        04270021
NOTL1MXE EQU   0                        MAXIMUM NO.ENTRIES IN NOTE LST1 04340021
WRITECT  EQU   0                                                        04410021
ENDTXTIO EQU   0      USED ON BUILD SCATR/TRANS LOOP                    04480021
REG0     EQU   0                                                        04550021
REG1     EQU   1                                                        04620021
TEMP4    EQU   1                                                        04690021
NOTL1CTE EQU   1                        CURRENT NO.ENTRIES IN NOTE LST1 04760021
TTRREG   EQU   1                                                        04830021
APT      EQU   2                                                        04900021
REG2     EQU    2                                                       04970021
ADTXTIOT EQU   3      USED ON BUILD SCATR/TRANS LOOP                    05040021
CESDCRCT EQU   3                                                        05110021
IOCTLADD EQU   3                        ADD OF IO CONTROL TABLE         05180021
TEMP5    EQU   3                        TEMPORARY REGISTER              05250021
REG3     EQU   3                                                        05320021
CESDADD  EQU   4                                                        05390021
TRANSADD EQU   4                        ADD OF TRANSLATION  TABLE       05460021
IOCTLCTB EQU   4                        CURRENT NO.BYTES IN IO CTL TBL  05530021
TXTIOADD EQU   4                        ADD OF TXT IO TABLE             05600021
REG4     EQU   4                                                        05670021
HESDCT   EQU   5                                                        05740021
NOTL2ADD EQU   5                        ADD OF NOTE LIST 2              05810021
TXTIOCT  EQU   5                        CT OF CURRENT NO BYTES IN TXTIO 05880021
REG5     EQU   5                                                        05950021
BUFFRSIZ EQU   6                        SIZE OF NOTE LIST 1             06020021
CESDID   EQU   6                                                        06090021
SEGCT    EQU   6                        SEGMENT NO.                     06160021
HIARAD   EQU   6    USED IN LOOP TO BUILD SCTR TABLE IF HIAR SPECIFIED  06230021
REG6     EQU   6                                                        06300021
HIIDTAB  EQU   7                        ADD OF HI ID TABLE              06370021
WRITEADD EQU   7                                                        06440021
REG7     EQU   7                                                        06510021
INDCBADD EQU   8                        ADDRESS OF INT. DCB             06580021
SCATTADD EQU   WRITEADD                                                 06650021
NOTL1ADD EQU   8                        ADD OF NOTE LIST 1              06720021
OTDCBADD EQU   8                        ADDRESS OF OUT. DCB             06790021
TEMPRTN  EQU   8                        TEMP RETURN REG            DISP 06860021
REG8     EQU   8                                                        06930021
DCBADD   EQU   9                                                        07000021
RETPARM  EQU   9                        NO ENTRIES IN NOTE LIST 2       07070021
REG9     EQU   9                                                        07140021
EVENREG  EQU   10                       EVEN REG OF AN EVEN ODD PAIR    07210021
HESDADD  EQU   10                                                       07280021
WORK1    EQU   10                       WORK REG                        07350021
REG10    EQU   10                                                       07420021
ODDREG   EQU   11                       ODD  REG OF AN EVEN ODD PAIR    07490021
RCTADD   EQU   11                                                       07560021
REG11    EQU   11                                                       07630021
BASE     EQU   12                                                       07700021
BYTSPERE EQU   13                       NO.OF BYTES PER ENTRY           07770021
SAVEAREA EQU   13                                                       07840021
TEMP1    EQU   13                                                       07910021
TEMPREG  EQU   X'D'                                                     07980021
REG13    EQU   13                                                       08050021
REG14    EQU   14                                                       08120021
RETURN   EQU   14                       RETURN REGISTER                 08190021
TEMP2    EQU   14                                                       08260021
REG15    EQU   15                                                       08330021
BRANCH   EQU   15                       BRANCH REGISTER                 08400021
FIFTEEN  EQU   15                                                       08470021
TEMP3    EQU   15                                                       08540021
         SPACE 1                                                 S21016 08610021
*****************REGISTERS USED BY SUBROUTINE IDROUT*************S21016 08680021
         SPACE 1                                                 S21016 08750021
TABADD   EQU   10                      POINTER TO BEGINNING OF   S21016 08820021
*                                      AN IDR DATA TABLE         S21016 08890021
TABEND   EQU   11                      POINTER TO END OF AN IDR  S21016 08960021
*                                      DATA TABLE                S21016 09030021
DATAPTR  EQU   4                       POINTER TO BEGINNING OF   S21016 09100021
*                                      DATA IN AN IDR DATA TABLE S21016 09170021
DATALEN  EQU   5                       LENGTH OF DATA IN AN IDR  S21016 09240021
*                                      DATA TABLE                S21016 09310021
RECLEN   EQU   3                       LENGTH OF DATA IN ONE     S21016 09380021
*                                      RECORD (USED AS DECREMENT S21016 09450021
*                                      FOR UPDATING DATALEN)     S21016 09520021
MVCPTR   EQU   3                       POINTER TO DESTINATION IN S21016 09590021
*                                      EXECUTED MOVE             S21016 09660021
DATASIZE EQU   4                       LENGTH OF DATA IN A       S21016 09730021
*                                      RECORD                    S21016 09800021
ZPCOUNT  EQU   5                       NUMBER OF ENTRIES IN      S21016 09870021
*                                      AN SPZAP DATA RECORD      S21016 09940021
TIME     EQU   0                       TIME OF DAY RETURNED BY   S21016 10010021
*                                      TIME MACRO                S21016 10080021
DATE     EQU   1                       DATE RETURNED BY TIME     S21016 10150021
*                                      MACRO                     S21016 10220021
ZAPCMPR  EQU   4                       COMPARISON VALUE USED TO  S21016 10290021
*                                      DETERMINE WHETHER AN      S21016 10360021
*                                      EXTRA SPZAP IDR SHOULD    S21016 10430021
*                                      BE CREATED                S21016 10500021
OBUFPTR  EQU   6                       CURRENT POSITION IN IDR  OX04245 10560002
*                                      BUFFER                   OX04245 10562002
*********************************************************************** 10570021
*              MASKS                                                  * 10640021
*********************************************************************** 10710021
ESDWTBIT EQU   X'01'                                                    10780021
HIAROP   EQU   X'04'                    HIAR MASK                       10850021
INC      EQU   4                                                        10920021
SDPCCM   EQU   X'02'                                                    10990021
SCATTBIT EQU   X'04'                    SCATTER MASK               DISP 11060021
OVRLYBIT EQU   X'20'                    OVERLAY MASK               DISP 11130021
CESDCNTL EQU   X'20'                                                    11200021
ESDWTOFF EQU   X'FE'                                                    11270021
         SPACE 1                                                 S21016 11340021
*******MASKS AND IMMEDIATE BYTES USED BY SUBROUTINE IDROUT*******S21016 11410021
         SPACE 1                                                 S21016 11480021
CHAIN    EQU   X'40'                   CHAIN BIT IN DATA COUNT   S21016 11550021
*                                      FIELD OF SPZAP TYPE IDR   S21016 11620021
ZAPMAX   EQU   X'53'                   VALUE OF COUNT FIELD IN   S21016 11690021
*                                      SPZAP TYPE IDR WHEN ALL   S21016 11760021
*                                      ENTRIES ARE USED AND      S21016 11830021
*                                      CHAIN BIT IS ON           S21016 11900021
NOZPDATA EQU   X'00'                   VALUE OF COUNT FIELD IN   S21016 11970021
*                                      SPZAP TYPE IDR WHEN NO    S21016 12040021
*                                      ENTRIES ARE USED AND      S21016 12110021
*                                      CHAIN BIT IS OFF          S21016 12180021
LASTIDR  EQU   X'80'                   FLAG IN IDR SUBTYPE FIELD S21016 12250021
*                                      TO INDICATE THE LAST IDR  S21016 12320021
*                                      FOR AN OUTPUT LOAD MODULE S21016 12390021
TRNSTYPE EQU   X'04'                   SUBTYPE INDICATOR FOR     S21016 12460021
*                                      IDR'S WITH TRANSLATOR     S21016 12530021
*                                      DATA                      S21016 12600021
USERTYPE EQU   X'08'                   SUBTYPE INDICATOR FOR     S21016 12670021
*                                      IDR'S WITH USER-DATA      S21016 12740021
TRUDMAX  EQU   X'FF'                   MAXIMUM BYTE COUNT FOR    S21016 12810021
*                                      TRANSLATOR AND USER-DATA  S21016 12880021
*                                      IDR'S                     S21016 12950021
ZEROFILL EQU   X'00'                   ZEROES FOR PADDING        S21016 13020021
ON       EQU   X'01'                   MASK FOR SWITCH           S21016 13090021
*                                      INDICATING A TEMPORARY    S21016 13160021
*                                      NEEDED FOR A MOVE         S21016 13230021
OFF      EQU   X'FE'                   IMMEDIATE BYTE TO TURN    S21016 13300021
*                                      OFF 'TEMPORARY NEEDED'    S21016 13370021
*                                      SWITCH                    S21016 13440021
*********************************************************************** 13510021
*              DISPLACEMENTS                                          * 13580021
*********************************************************************** 13650021
LASTESD  EQU   X'08'                   MASK FOR LAST ESD RCD IN MODULE  13720021
         SPACE 1                                                 S21016 13790021
**********SYMBOLIC DISPLACEMENTS AND LENGTHS USED BY*************S21016 13860021
*********************SUBROUTINE IDROUT***************************S21016 13930021
         SPACE 1                                                 S21016 14000021
HDRLEN   EQU   4                       LENGTH OF IDR SPZAP       S21016 14070021
*                                      HEADER                    S21016 14140021
ZAPLEN   EQU   247                     LENGTH OF SPZAP DATA IN   S21016 14210021
*                                      ONE RECORD                S21016 14280021
ZPLEN    EQU   246                     LENGTH OF SPZAP DATA - 1  S21016 14350021
*                                      (USED TO PAD WITH ZEROES) S21016 14420021
LOC      EQU   0                       NULL OFFSET               S21016 14490021
ZPRECLEN EQU   251                     LENGTH OF AN IDR SPZAP    S21016 14560021
*                                      RECORD                    S21016 14630021
UNIT     EQU   1                       OFFSET OF 1 BYTE          S21016 14700021
LEN2     EQU   2                       TWO-BYTE LENGTH           S21016 14770021
LEN3     EQU   3                       THREE-BYTE LENGTH         S21016 14840021
LEN4     EQU   4                       FOUR-BYTE LENGTH          S21016 14910021
LEN8     EQU   8                       EIGHT-BYTE LENGTH         S21016 14980021
CMPRSIZE EQU   14                      COMPARISON VALUE FOR MAX  S21016 15050021
*                                      NUMBER OF ENTRIES ALLOWED S21016 15120021
*                                      IN AN IDR SPZAP RECORD    S21016 15190021
*                                      BEFORE ADDING AN ADDI-    S21016 15260021
*                                      TIONAL SPARE RECORD       S21016 15330021
LKRECLEN EQU   18                      LENGTH OF IDR LKED RECORD S21016 15400021
LKLEN    EQU   15                      LENGTH OF IDR LKED DATA   S21016 15470021
*                                      EXCEPT FOR DATE OF LKED   S21016 15540021
DATELEN  EQU   3                       LENGTH OF PACKED DEC DATE S21016 15610021
*                                      RETURNED BY TIME MACRO    S21016 15680021
TRUDLEN  EQU   253                     GREATEST AMOUNT OF USER   S21016 15750021
*                                      OR TRANSLATOR DATA WHICH  S21016 15820021
*                                      CAN GO ONTO ONE RECORD    S21016 15890021
TURECLEN EQU   256                     MAXIMUM TRANSLATOR AND    S21016 15960021
*                                      USER-DATA RECORD SIZE     S21016 16030021
ADDLEN   EQU   3                       THREE-BYTE ADJUSTMENT FOR S21016 16100021
*                                      DETERMINING BYTE COUNT OF S21016 16170021
*                                      TRANSLATOR AND USER-DATA  S21016 16240021
*                                      RECORDS SHORTER THAN MAX  S21016 16310021
ONETRNS  EQU   0                       FLAG FOR SINGLE TRANS    OX04245 16360002
*                                      ITEM                     OX04245 16370002
HDLEN1   EQU   6                       LENGTH OF HEADER         OX04245 16372002
*                                      FOR SINGLE TRANS IDR     OX04245 16374002
HDLEN2   EQU   9                       LENGTH OF HEADER         OX04245 16376002
*                                      FOR DOUBLE TRANS IDR     OX04245 16378002
INDCTRLN EQU   1                       LENGTH OF FALG FIELD     OX04245 16378402
*                                      FOR TRANS IDR ITEM       OX04245 16378802
TRNMLEN  EQU   12                      LENGTH OF TRANS NAME/LVL OX04245 16379202
*                                      FOR TRANS IDR ITEM       OX04245 16379602
PKLEN2   EQU   3                       LENGTH OF DATE FOR       OX04245 16379702
*                                      TRANS IDR ITEM           OX04245 16379802
*********************************************************************** 16380021
*              SECOND PASS DISPLACEMENTS,REGISTERS AND MASKS          * 16450021
*********************************************************************** 16520021
NOEDIT2P EQU   X'02'                   NOT EDIT MASK FOR 2ND PASS       16590021
NOTEDIT  EQU   X'08'                   NOT EDITABLE MASK                16660021
         EJECT                                                          16690037
         EXTRN HEWLCUDB                                                 16730021
         EXTRN HEWLCMDB                                                 16800021
         EXTRN SEGLNTAB                                                 16870021
*              OUTPUT CESD AND  BUILD HESD                              16940021
         USING OUT00100+2,BASE                                          17010021
         USING APTDSECT,APT                                             17080021
OUT00100 BALR  BASE,0                                                   17150021
*********************************************************************** 17220021
*              BUILD HESD & OUTPUT CESD(IF PGM IS NOT- NOT EDITABLE   * 17290021
*              ALSO MARK LAST ESD RECORD IF THERE IS NO TEXT          * 17360021
*********************************************************************** 17430021
         BC    15,OVERNAME             BRANCH AROUND MODULE IDENT       17500037
         DC    C' 02/24/77 OZ17975'    DATE/APAR NUMBER                 17550037
MODID    DC    C' HEWLFOUT ',0H'0'     MOD ID                           17600037
OVERNAME TM    APT0,X'20'              IS MAP REQUESTED                 17650037
         BC    1,OUT00105              YES                              17710021
         TM    APT0,X'40'              NO--IS XREF REQUESTED            17780021
         BC    8,OUT00110              NO                               17850021
         TM    NEWSW,X'20'             YES--ARE RLDS IN CORE            17920021
         BC    1,OUT00110              NO--DON'T DO XREF NOW            17990021
OUT00105 L     REG15,MAPAD             YES--GO TO MAP/XREF              18060021
         OI    NEWSW,X'40'             SET ENTRY FROM INTERMEDIATE BIT  18130021
         BALR  REG14,REG15                                              18200021
         NI    NEWSW,X'BF'             TURN OFF INTERMEDIATE ENTRY BIT  18270021
OUT00110 L     CESDADD,CHESD      LOAD CESD ADDRESS                     18340021
         LA    CESDID,1                 SET FIRST ID TO 1               18410021
         L     HESDADD,HESD       HESD ADDRESS                          18480021
         OI    APT1,ESDWTBIT      SET FIRST ESD WRITE ON FOR NOTE       18550021
         LH    CESDCRCT,ENCDC     CURR NO CESD ENTRIES                  18620021
         OI    APT3,NOEDIT2P                                            18690021
OUT00200 LA    FIFTEEN,15               PUT 15  IN FIFTEEN              18760021
         XC    8(4,CESDADD),8(CESDADD) SET HI WORD OF CONTROL TO ZERO   18830021
         SR    CESDCRCT,FIFTEEN         REMAING NO. CESD ENTRIES TO WT  18900021
         BC    2,OUT00300              BRANCH IF REMAINDER GTR THAN 0   18970021
         AR    FIFTEEN,CESDCRCT         REMAINDER LESS 0 /RESTORE CT    19040021
         OC    ENTOC(2),ENTOC     IS THERE ANY TEXT IN MODULE           19110021
         BC    4,OUT00300              YES                              19180021
         OI    8(CESDADD),LASTESD      NO/SET LAST RCD IN MODULE IND    19250021
OUT00300 LR    HESDCT,FIFTEEN           COUNT OF PRESENT CESD WT COUNT  19320021
         SLL   FIFTEEN,4                16(Y); Y= NO CESD LINES TO WT.  19390021
         STH   FIFTEEN,14(CESDADD)      PUT BYTE CT IN CONTROL          19460021
         STH   CESDID,12(CESDADD)       PUT ESDID IN CONTROL            19530021
         OI    8(CESDADD),CESDCNTL      SET HI BYTE TO 20 (ESD ITEM)    19600021
         LA    WRITECT,8(FIFTEEN)       INC WT BYTE CT BY 8             19670021
         LA    WRITEADD,8(CESDADD)      INC WT BYTE ADD BY 8            19740021
         TM    PDSE8,NOTEDIT      IS MODULE NOT EDITABLE                19810021
         BO    OUT00350                IF YES, DO NOT TURN 2ND   S21016 19880021
*                                      PASS NE SWITCH            S21016 19950021
         NI    APT3,X'FD'         SET NOT EDITABLE OFF                  20020021
OUT00350 BAL   TEMPRTN,OUT00990        GO TO WRITE/CHECK/NOTE    S21016 20090021
*                                      SUBROUTINE                S21016 20160021
         LTR   TTRREG,TTRREG            TTR EXISTS ON FIRST WT/ESD&SCAT 20230021
         BC    8,OUT00400               BRANCH ON ALL OTHER WTS         20300021
         ST    TTRREG,CTTR        SAVE TTR OF CESD                      20370021
OUT00400 LA    HESDADD,8(HESDADD)       INCREMENT HESD ADDRESS PTR      20440021
         LA    CESDADD,16(CESDADD)      INCREMENT CESD ADDRESS PTR      20510021
         LM    TEMP1,TEMP2,8(CESDADD)   LOAD LAST 4 BYTES OF A CESD LIN 20580021
         STM   TEMP1,TEMP2,0(HESDADD)   STORE IT IN HESD                20650021
         BCT   HESDCT,OUT00400          BRANC IF LOOP NOT DONE          20720021
         LA    CESDID,15(CESDID)        INC ESDID BY 15                 20790021
         LTR   CESDCRCT,CESDCRCT        HAVE ALL CESD LINES BEEN WRITEN 20860021
         BC    2,OUT00200               NO /CONTINUE WRITE OUT          20930021
         BAL   TEMPRTN,IDROUT          AFTER LAST CESD LINE IS   S21016 21000021
*                                      WRITTEN, GO TO PROCESS    S21016 21070021
*                                      IDR'S                     S21016 21140021
         XC    8(8,HESDADD),8(HESDADD) SET LINE AFTER LAST = 0          21210021
*********************************************************************** 21280021
*              IF THERE IS NO TEXT IN MODULE BY PASS 2ND PASS/GO TO   * 21350021
*              FINAL PROCESSOR - ALSO PRINT MESSAGE - NO TEXT         * 21420021
*********************************************************************** 21490021
OUT00525 SR    TEMP1,TEMP1                                              21560021
         CH    TEMP1,ENTOC        ANY ENTRIES IN TXT ID TBL             21630021
         BC    8,OUT00970              NO / NO TXT / GO TO FINAL PROC   21700021
*********************************************************************** 21770021
*              TEST FOR OVERLAY - YES GO TO BUILD  SEGTAB CONTROL RCD * 21840021
*              AND SEGTAB RECORD  AND WRITE OUT BOTH                  * 21910021
*********************************************************************** 21980021
OUT00550 TM    PDSE7,OVRLYBIT     IS PROGRAM IN OVERLAY                 22050021
         BC    1,OUT01000               YES/ GO OUT PUT SEGTAB RCDS     22120021
*********************************************************************** 22680021
*              READ IN TEXT NOTE LIST AND RLD NOTE LIST                 22750021
*********************************************************************** 22820021
*              INITIALIZE REGS FOR TXT NOTE LIST READ IN                22890021
*********************************************************************** 22960021
OUT00560 LA    BYTSPERE,7              7 BYTES/ENTRY IN TXT NOTELIST    23030021
         LA    IOCTLADD,IOCT      ADDRESS OF TXT IO  CTL TBL            23100021
         XR    REG4,REG4              CLEAR REGISTER             S01904 23170021
         XR    REG9,REG9              CLEAR REGISTER             S01904 23240021
         IC    REG4,ENITC+1                                      S01904 23310021
         IC    REG9,ENITC                                        S01904 23380021
         L     NOTL1ADD,TNT1          TXT NOTELIST1 ADDR         S01904 23450021
         L     NOTL2ADD,TNLS2         TXT NOTELIST2 ADDR         S01904 23520021
         LH    NOTL1CTE,ENT1C         CURR NO ENTRIES IN TNL1    S01904 23590021
         LH    REG0,ENT1X1                                       S01904 23660021
         LH    REG7,ENT1X                                        S01904 23730021
         BAL   RETURN,OUT00600        GO TO TXT TLD READIN RTN   S01904 23800021
         MVC   ENT2C(2),ENTRYSV                                  S01904 23870021
         EJECT                                                          23920002
         TM    APT4,ORDERR            IS ORDERING FLAG ON?       S01904 23940021
         BZ    OUT560B                NO,BRANCH OUT              S01904 24010021
         SPACE 2                                                        24060002
****************                                                        24070002
*  REARRANGE THE TEXT I/O TABLE AND TEXT NOTELIST 2 TO                  24072002
*  MATCH THE ORDER IN WHICH CSECTS APPEAR IN THE ORDER TABLE            24074002
*  (THE ORDER IN WHICH ADDRESSES WERE ASSIGNED IN HEWLFADA)             24076002
****************                                                        24078002
         SPACE 1                                                        24078402
         STM   REG0,REG15,BRNCHSV     SAVE REGISTERS                    24080021
         LH    REG1,ORDRCUR           CURR NO OF BYTES IN ORDR TBL      24150021
         LTR   REG1,REG1              IS THERE AN ENTRY?         S01904 24220021
         BZ    OUT560A                NO,BRANCH OUT              S01904 24290021
********** THE FOLLOWING BLOCK OF INSTRUCTIONS ARE SETUP FOR            24340002
********** TWO NESTED BXLE INSTRUCTIONS THAT LOOP THROUGH THE ORDER     24350002
********** TABLE AND THE TEXTIO TABLE/TEXT NOTELIST 2                   24352002
**********                                                              24354002
         L     REG3,ORDRADR           GET ADDR OF ORDER TABLE    S01904 24360021
         AR    REG1,REG3              CALC THE ADDR OF LAST ENTRY       24430021
         LA    REG0,3                 IN THE ORDER TABLE         S01904 24500021
*                                     REG0=INCREMENT FOR BXLE    S01904 24550002
         SR    REG1,REG0              REG1 -> LAST ENTRY         S01904 24570002
*                                     (COMPARAND FOR BXLE)       S01904 24620002
         LH    REG5,ENTOC             CURR NO OF BYTES ON TXT IO TBL    24640021
         LTR   REG5,REG5              ANY ENTRIES?               S01904 24710021
         BZ    OUT560A                NO,BRANCH OUT              S01904 24780021
         L     REG13,TXTIO            ADDR OF TEXT IO TABLE      S01904 24850021
         AR    REG5,REG13             CALC THE ADDR OF THE LAST ENTRY   24920021
         LA    REG4,4                 IN THE TXT IO TABLE        S01904 24990021
*                                     REG4=INCREMENT FOR BXLE    S01904 25040002
         SR    REG5,REG4              REG5 -> LAST TXTIO ENTRY   S01904 25060002
*                                     (COMPARAND FOR BXLE)       S01904 25120002
         LR    REG7,REG13             REG7 -> TXTIO TAB START    S01904 25130002
********** END OF SETUP FOR NESTED BXLE'S                               25180002
         SPACE 1                                                        25190002
OUT561   TM    0(REG3),X'A0'          IS THE ORDR TBL ENTRY MATCHED?    25200021
         BNO   OUT564                 NO,CONTINUE SCAN OF TABLE         25270021
OUT562   CLC   1(2,REG3),0(REG13)     FIND MATCH OF ID IN TXT IO TBL    25340021
*                                     (COMPARE CESDID IN ORDER          25390002
*                                     TABLE ENTRY WITH CESDID IN        25400002
*                                     TEXTIO TABLE ENTRY)               25402002
         BE    OUT565                 IF MATCHED, BRANCH OUT     S01904 25410002
OUT563   BXLE  REG13,REG4,OUT562      SCAN THRU TEXTIO TABLE     S01904 25480002
         LR    REG13,REG7             RESTORE PTR TO TXT IO TBL         25550021
OUT564   BXLE  REG3,REG0,OUT561       CONTINUE SCAN OF ORDER TBL        25620021
         B     OUT560A                EXIT AFTER THE LAST ENTRY  S01904 25690002
*                                     IN THE ORDER TABLE HAS     S01904 25740002
*                                     BEEN PROCESSED             S01904 25750002
OUT565   CR    REG7,REG13             MATCHED ENTRY FIRST IN TXTIO?     25760021
         BE    OUT569A                YES,BRANCH OUT -NO REORDERING     25830021
*                                     (I.E. THE TXTIO TABLE ENTRY IS,   25880002
*                                     BY CHANCE, ALREADY IN THE         25890002
*                                     REQUIRED POSITION TO SATISFY      25892002
*                                     THE ORDER TABLE)                  25894002
         LR    REG11,REG13            POINT TO TXTIO TABLE ENTRY S01904 25900002
*                                     TO BE MOVED UP             S01904 25950002
         LR    REG9,REG7              POINT TO TARGET FOR TXTIO  S01904 25970002
*                                     TABLE ENTRY BEING ORDERED  S01904 26020002
*                                     TO BE MOVED TO             S01904 26030002
         LA    REG6,3                 LENGTH OPERAND FOR         S01904 26040002
*                                     EXECUTED MOVE (WIDTH OF    S01904 26090002
*                                     ONE TXTIO TABLE ENTRY)     S01904 26100002
         LA    REG8,255               LENGTH OPERAND FOR         S01904 26110002
*                                     EXECUTED MOVE OF TXTIO TBL S01904 26160002
*                                     256 BYTES AT A TIME TO THE S01904 26170002
*                                     RIGHT TO MAKE ROOM FOR     S01904 26172002
*                                     ENTRY BEING ORDERED        S01904 26174002
OUT565A  EX    REG6,MOVE1             SAVE MATCHED TABLE ENTRY          26180021
*                                     (EXECUTE MOVE OF ENTRY BEING      26230002
*                                     ORDERED TO TEMP SAVEAREA)         26240002
         LR    REG10,REG13            POINT TO END OF AREA TO BE S01904 26250002
*                                     MOVED                      S01904 26300002
         LR    REG14,REG13            CALC IF THERE ARE MORE THAN 256   26320021
         SR    REG14,REG7             BYTES FROM MATCHED ENTRY ADDR TO  26390021
         SRDL  REG14,REG8             BEGIN OF LAST ORDRD ENTRY         26460021
         LTR   REG14,REG14            ARE THERE MORE THAN 256?          26530021
         BZ    OUT567                 NO, BRANCH                 S01904 26600002
OUT566   SH    REG10,HEX100           MOVE THE LOWER 256 BYTES   S01904 26670021
         EX    REG8,MOVE3             INTO A TEMP SAVEAREA       S01904 26740021
         AR    REG10,REG6             LEAVE ROOM FOR ENTRY TO BE REORDR 26810021
         EX    REG8,MOVE4             MOVE BACK THE 256 BYTES TO TXT IO 26880021
*                                     TABLE/TNL (MOVED ONE ENTRY S01904 26950002
*                                     TO THE RIGHT OF WHERE IT   S01904 27000002
*                                     PREVIOUSLY WAS IN TABLE)   S01904 27010002
         SR    REG10,REG6             RESET REG10 TO CONTINUE    S01904 27020002
*                                     MOVE LOOP -- REG10 ALWAYS  S01904 27070002
*                                     POINTS TO FROM-LOCATION    S01904 27080002
*                                     FOR MOVE (IT POINTS 256    S01904 27082002
*                                     BYTES FURTHER TO THE LEFT  S01904 27084002
*                                     ON EACH ITERATION THRU THE S01904 27086002
*                                     MOVE LOOP)                 S01904 27088002
         BCT   REG14,OUT566           ANY MORE MOVE TO BE DONE?         27090021
OUT567   SRL   REG15,24               REG15=REMAINDING NUMBER    S01904 27160002
*                                     OF BYTES TO BE MOVED IF    S01904 27210002
*                                     TOTAL NUMBER OF BYTES TO   S01904 27220002
*                                     BE MOVED WAS NOT AN EVEN   S01904 27222002
*                                     MULTIPLE OF 256            S01904 27224002
         LTR   REG15,REG15            ANY REMAINDER  TO BE MOVED?       27230021
         BZ    OUT568                 NO,MOVE IS ALL DONE        S01904 27300021
*                                     IF THE AREA TO BE MOVED    S01904 27350002
*                                     WAS AN EVEN MULTIPLE OF    S01904 27360002
*                                     256 BYTES IN SIZE, ALL     S01904 27362002
*                                     MOVING IS NOW COMPLETE,    S01904 27364002
*                                     EXCEPT TO MOVE THE ENTRY   YM4013 27366002
*                                     BEING ORDERED UP TO ITS    YM4013 27368002
*                                     NEW POSITION IN THE TABLE  YM4013 27368402
         SR    REG10,REG15            IF NOT, POINT TO START OF  S01904 27370002
*                                     REMAINING AREA TO BE MOVED S01904 27420002
         BCTR  REG15,0                MACHINE LENGTH OF REMAINDER       27440002
         EX    REG15,MOVE3            MOVE THE REMAINING BYTES   S01904 27510021
         AR    REG10,REG6             POINT ONE ENTRY TO RIGHT   S01904 27580002
         EX    REG15,MOVE4            MOVE THE TXT ENTRY FOR ORDERING   27650021
OUT568   EX    REG6,MOVE2             MOVE THE ENTRY      S01904,YM4013 27720002
*                                     BEING ORDERED TO    S01904,YM4013 27770002
*                                     ITS NEW POSITION IN S01904,YM4013 27780002
*                                     THE TABLE           S01904,YM4013 27782002
         C     REG6,SIX               HAS TEXT NOTELIST2  S01904,YM4013 27790002
*                                     JUST BEEN MOVED?           S01904 27840002
         BE    OUT569                 IF SO, BRANCH              S01904 27860002
         S     REG13,TXTIO            CALC OLD TXT IO ENTRY NUMBER      27930021
         SRL   REG13,2                DIVIDE REL ADDR OF TXTIO   S01904 28000002
*                                     ENTRY BY 4 (ENTRY SIZE)    S01904 28050002
*                                     TO GET REL ENTRY NUMBER    S01904 28060002
         MH    REG13,SEVEN            MULTIPLY BY SEVEN          S01904 28070021
         A     REG13,TNLS2            TO LOCATE CORR TNL2 ENTRY         28140021
         S     REG7,TXTIO             CALC NEW TXT IO ENTRY NO   S01904 28210021
         SRL   REG7,2                 DIVIDE REL ADDR BY 4       S01904 28280002
         MH    REG7,SEVEN             LOCATE CORR TNL2 ENTRY     S01904 28350021
         A     REG7,TNLS2             GET ABSOLUTE ADDR IN TNL2  S01904 28420002
         LA    REG6,6                 REG6=WIDTH OF TNL2 ENTRY   S01904 28490002
*                                     (MINUS 1 FOR EXECUTED MVC) S01904 28540002
         B     OUT565A                BRANCH OUT TO PERFORM MOVE TNL2   28560021
OUT569   LR    REG13,REG11            RESTORE PTRS TO ORDER AND TXT IO  28630021
         LR    REG7,REG9              TABLE ENTRIES              S01904 28700021
OUT569A  LA    REG7,4(REG7)           INCREMENT TO NEXT TXTIO    S01904 28770002
*                                     TABLE ENTRY                S01904 28820002
         B     OUT563                 RETURN TO COMPLETE TBL SCAN       28840021
OUT560A  LM    REG0,REG15,BRNCHSV     RESTORE REGISTERS          S01904 28910002
         B     OUT560B                AND CONTINUE NORMAL        S01904 28980002
*                                     PROCESSING                        29030002
         SPACE 3                                                        29040002
MOVE1    MVC   TEMPSV1(1),0(REG13)    MOVE TABLE ENTRY BEING ORDERED    29050002
*                                     TO TEMPORARY SAVE AREA            29100002
MOVE2    MVC   0(1,REG7),TEMPSV1      MOVE ENTRY BEING ORDERED FROM     29120002
*                                     TEMP SAVE AREA TO NEW (ORDERED)   29170002
*                                     POSITION IN TABLE                 29180002
MOVE3    MVC   TEMPSV2(1),0(REG10)    MOVE 256 BYTES OF TABLE TO        29190002
*                                     TEMPORARY SAVE AREA               29240002
MOVE4    MVC   1(1,REG10),TEMPSV2     MOVE 256 BYTES OF TABLE FROM      29260002
*                                     TEMP SAVE AREA BACK TO TABLE      29310002
*                                     ONE ENTRY TO RIGHT OF PREVIOUS    29320002
*                                     LOCATION (TO MAKE ROOM FOR        29322002
*                                     ENTRY BEING ORDERED)              29324002
         SPACE 2                                                        29330021
SIX      DC    F'6'                   MACHINE LENGTH OF TNL2 ENTRIES    29400002
TEMPSV1  DC    XL7'0'                 SAVE FOR 1 TXTIO/TNL2 ENTRY       29470002
TEMPSV2  DC    XL256'0'               SAVE FOR 256 BYTES OF TABLE       29540002
SEVEN    DC    H'7'                   WIDTH OF TNL2 ENTRIES             29610002
HEX100   DC    H'256'                 WIDTH OF ONE 256 BYTE TABLE MOVE  29680002
ENTRYSV  DC    H'0'                   TEMP SAVE FOR TNL2 READIN         29750002
         EJECT                                                          29800002
*********************************************************************** 29810003
*              TEST FOR SCATTER - YES -BUILD SCATTER / TRANSLATION    * 29812003
*              TABLES AND OUTPUT BOTH AS ONE ENITY- OUT IN RECORDS    * 29814003
*              OF 1024 DEC BYTES                                      * 29816003
*********************************************************************** 29818003
OUT560B TM    PDSE7,SCATTBIT     IS PROGRAM IN SCATTER           XM6065 29818403
        BC    1,OUT02000         YES, GO WRITE SCATTER RCD       XM6O65 29818803
*********************************************************************** 29820021
*              INITIALIZE REGS FOR RLD NOTE LIST READ IN                29890021
*********************************************************************** 29960021
OUT560C  EQU   *                                                 XM9089 30010003
        LA    BYTSPERE,9              9 BYTES/ENTRY IN RLD NOTELIST     30030003
         LA    IOCTLADD,IOCT+12   ADDRESS OF RLD IO CTL TBL             30100021
         XR    REG4,REG4              CLEAR REGISTER             S01904 30170021
         XR    REG9,REG9              CLEAR REGISTER             S01904 30240021
         IC    REG9,ENIRC             BYTES IN OLD RLD IO TBL    S01904 30310021
         IC    REG4,ENIRC+1           BYTES IN REALOC RLD TBLE   S01904 30380021
         L     NOTL1ADD,RNT1      ADDR RLD  NOTELIST 1                  30450021
         L     NOTL2ADD,RNLS2     ADDR RLD  NOTELIST 2                  30520021
         LH    NOTL1CTE,ENR1C     CURRNT NO. ENTRIES IN RLD NOTELIST 1  30590021
         LH    NOTL1MXE,ENR1X1    MAX NO. OF ENTRIES IN RLD NOTELIST 1  30660021
         LH    REG7,ENR1X                                        S01904 30730021
         BAL   RETURN,OUT00600          GO TO TXT- RLD READ IN RT       30800021
         MVC   ENR2C(2),ENTRYSV     ST CUR NO ENTRIES IN RLDNL2  XM5480 30870003
         MVC   ENR1C(2),ENTRYSV     ST CUR NO ENTRIES IN RLDNL1  XM5480 30920003
**********************************************************************$ 30940021
*              DETERMINE ID OF LAST TXTIOT ENTRY PER SEGMENT          * 31010021
*              ALSO SAVE HIGEST SEGMENT NUMBER CONTAINING TEXT          31080021
**********************************************************************$ 31150021
*                                                                       31220021
OUT00570 SR    TEMP4,TEMP4              ZERO CT OF TXTIO FOR LOOP       31290021
         L     HIIDTAB,ADHIID                                           31360021
         L     HIIDTAB,0(HIIDTAB)      ADDRESS OF HI ID TABLE           31430021
         LR    TEMP1,HIIDTAB        GET START OF TABLE ADDRESS          31500021
         XC    0(256,TEMP1),0(TEMP1)   CLEAR 1ST HALF OF TABLE          31570021
         XC    256(256,TEMP1),256(TEMP1)   CLEAR 2ND HALF OF TABLE      31640021
OUT00580 L     TXTIOADD,TXTIO     ADD OF  TXTIO TABLE                   31710021
         AR    TXTIOADD,TEMP4           ADD OF NEXT ID IN TXTIO TABLE   31780021
         TM    2(TXTIOADD),X'20'        IS IT OUT OF ORDER TXT          31850021
         BC    1,OUT00581               YES--TEST END OF TXTIOT LOOP    31920021
         MVC   WORD(2),0(TXTIOADD)      MOVE ID FROM TXTIO TO WORK      31990021
         LH    TEMP1,WORD               LOAD ID                         32060021
         LR    TEMP2,TEMP1              SAVE ID                         32130021
         SLL   TEMP2,3                  RELATIVE HESD ADD FOR THIS ID   32200021
         A     TEMP2,HESD         ABSOLUTE HESD ADR FOR THIS ID         32270021
         SR    TEMP3,TEMP3              ZERO SEGMENT NO REG             32340021
         IC    TEMP3,4(TEMP2)           THIS ID LIES IN THIS SEGMENT    32410021
         AR    TEMP3,TEMP3              DOUBLE SEG NO - REL. ADD TOHIID 32480021
         LH    WORK1,0(HIIDTAB,TEMP3)   GET CURRENT HI-ID IN TABLE      32550021
         LTR   WORK1,WORK1              WAS THERE ANY PREVIOUS ID       32620021
         BC    8,NOPRVID          BR IF THIS IS THE FIRST ID FOR SEG.   32690021
         SLL   WORK1,3                  CALCULATE HESD ADDRESS          32760021
         A     WORK1,HESD               FOR THIS ID                     32830021
         CLC   1(3,TEMP2),1(WORK1)      IS NEW ID LOCATED AT A HIGHER   32900021
*                                       ADDRESS THAN PREVIOUS ID IN SEG 32970021
         BC    12,OUT00581        BR IF NOT AT A HIGHER ADDRESS         33040021
NOPRVID  EQU   *        THIS SHOULD BE AT THE STORE ID INSTRUCTION      33110021
         STH   TEMP1,0(HIIDTAB,TEMP3)   SAVE LAST TXTIOT ENTRY FOR SEG  33180021
OUT00581 LA    TEMP4,4(TEMP4)      INCREMENT TEXTIO BYTE COUNT          33250021
         CH    TEMP4,ENTOC        IS CURR. CT =  SAVED CT               33320021
         BC    4,OUT00580               NO - GO TO CONTINUE LOOP        33390021
         SR    TEMP1,TEMP1                                              33460021
         LH    SEGCT,CSNO         TOTAL CURRENT NO. SEGMENTS            33530021
OUT00582 LA    TEMP1,1(TEMP1)           INC BY 1 (CURRENT SEG)          33600021
         LR    TEMP3,TEMP1              SAVE CURRENT SEG NO.            33670021
         AR    TEMP3,TEMP3             DOUBLE CURR SEG NO               33740021
         LH    TEMP2,0(HIIDTAB,TEMP3)   LAST TXTIOT ENTRY FOR THIS SEG  33810021
         LTR   TEMP2,TEMP2              IS ID = 0                       33880021
         BC    8,OUT00583               YES  NO TXT IN THIS SEGMENT     33950021
         STH   TEMP1,ENSPC        SAVE HI SEG WITH TEXT                 34020021
         SLL   TEMP2,3                  MULT BY 8                       34090021
         A     TEMP2,HESD         ADDRESS OF HESD ENTRY                 34160021
         OI    0(TEMP2),X'40'     SET LAST TXTIOT ENTRY ON IN HESD      34230021
OUT00583 BCT   SEGCT,OUT00582           BRANCH IF LOOP NOT DONE         34300021
*********************************************************************** 34370021
* AT THIS POINT SECOND PASS INITIALIZATION IS PERFORMED                 34440021
*********************************************************************** 34510021
OUT00575 L     REG7,TTRLIST       ADDRESS OF TTR LIST                   34580021
         BCT   TEMP1,OUT00576     BRANCH TO ZERO TTR LIST               34650021
         BC    15,OUT00577        BRANCH AROUND ZEROING TTR LIST        34720021
OUT00576 SLL   TEMP1,2       CURR NO SEGMENTS -1 TIMES 4                34790021
*                                     RESTORE SEGMENT CT IF IN OVERLAY  34860021
         LA    TEMP1,3(TEMP1)     UPDATE COUNT FOR EX INSTRUCTION       34930021
         LA    REG1,256                                                 35000021
OUT00578 SR    TEMP1,REG1              CHECK FOR 256 OR MORE BYTES      35070021
         BC    4,OUT00579              NO                               35140021
         XC    0(256,REG7),0(REG7)     YES--CLEAR 256 BYTES             35210021
         AR    REG7,REG1               INCREMENT BY 256                 35280021
         BC    15,OUT00578                                              35350021
OUT00579 AR    TEMP1,REG1              RESTORE COUNT                    35420021
         EX    TEMP1,ZEROHIID          ZERO TTR L                       35490021
OUT00577 SR    REG0,REG0                                                35560021
         LA    WORK1,9                                                  35630021
         MH    WORK1,ENR2C                                              35700021
         A     WORK1,RNLS2                                              35770021
         ST    WORK1,SPACES+48         RLD NOTELIST LAST ENTRY ADDR.    35840021
         L     WORK1,TXTIO                                              35910021
         AH    WORK1,ENTOC                                              35980021
         SH    WORK1,FOUR                                               36050021
         ST    WORK1,SPACES+44         TEXT I/O TABLE LAST ENTRY ADDR   36120021
         LH    WORK1,ENCDC                                              36190021
         SLL   WORK1,3                                                  36260021
         A     WORK1,HESD                                               36330021
         ST    WORK1,SPACES+52         HESD LAST ENTRY ADDR             36400021
         LH    REG1,ENSPX              SEGTAB ID                        36470021
         CR    REG1,REG0                                                36540021
         BC    8,SCDGETID                                               36610021
OUTSCDIN SLL   REG1,3                                                   36680021
         A     REG1,HESD                                                36750021
         LA    REG1,8(0,REG1)          ADDR. FIRST HESD ENTAB ENTRY     36820021
         L     BRANCH,TPASSVCN                                          36890021
         BR    BRANCH                  GO TO SECOND PASS                36960021
SCDGETID LH    REG1,ENCDC              LAST ID                          37030021
         B     OUTSCDIN                                                 37100021
*********************************************************************** 37170021
*                                                                       37240021
*              TXT - RLD MOVE AND READ IN ROUTINE                       37310021
*                                                                       37380021
*********************************************************************** 37450021
OUT00600 STM   RETURN,BRANCH,SAVE1415                                   37520021
         SRL   IOCTLCTB,2               NO.OF BUFFERINGS                37590021
         SRL   REG9,2                   NO. OF BUFFERINGS       OX00029 37640000
         LR    EVENREG,IOCTLCTB         NO,OF NOTE LIST BUFFERINGS      37660021
         LR    ODDREG,NOTL1MXE          NO.OF ENTRIES PER BUFFERING     37730021
         MR    EVENREG,EVENREG          TOTAL NO.OF BUFFER ENTRIES      37800021
         LA    REG6,0(ODDREG,NOTL1CTE)                           S01904 37870021
         LTR   REG9,REG9              WAS TNL REALLOCATED?       S01904 37940021
         BZ    OUT00610               NO,BRANCH AROUND           S01904 38010021
         LR    ODDREG,REG9            NO OF REALLOC BUFFERINGS   S01904 38080021
         MR    EVENREG,REG7           TOTAL NO OF NEW BUFFER ENTRIES    38150021
         LA    REG6,0(ODDREG,REG6)                               S01904 38220021
OUT00610 STH   REG6,ENTRYSV                                      S01904 38290021
         LR    EVENREG,BYTSPERE         NO BYTES PER ENTRY              38360021
         LR    ODDREG,NOTL1MXE          MAX NO.NOTE LIST 1 ENTRIES      38430021
         MR    EVENREG,EVENREG          NO. BYTES IN BUFFER (NOTE LST1) 38500021
*                                       ANS IN ODDREG                   38570021
         LR    BUFFRSIZ,ODDREG          SAVE BUFFER SIZE                38640021
         LR    EVENREG,IOCTLCTB         NO.OF BUFFERINGS                38710021
         MR    EVENREG,EVENREG          RELAITIVE ADD  OF WHERE TO MOVE 38780021
*                                       CONTENTS OF NOTE LIST1-ANS-ODDR 38850021
         ST    NOTL2ADD,SAVEWORD                                        38920021
         AR    NOTL2ADD,ODDREG          ADD OF WHERE TO 1PT OF NL1TONL2 38990021
         LR    ODDREG,REG7            NO OF ENTRIES IN REALLOC BUFFER   39060021
         MR    EVENREG,BYTSPERE       MULT BY NO OF BYTES/ENTRY         39130021
         LR    REG7,ODDREG            SAVE NEW BUFFER SIZE       S01904 39200021
         MR    EVENREG,REG9           MULT BY NO OF NEW BUFFERS         39270021
         AR    NOTL2ADD,ODDREG                                   S01904 39340021
         LR    EVENREG,BYTSPERE         NO,BYTES PER ENTRY IN NOTE LIST 39410021
         LTR   ODDREG,NOTL1CTE          NO.ENTRIES IN NOTE LIST 1       39480021
         BC    8,OUT00850                                               39550021
         MR    EVENREG,EVENREG          CURRENT NO BYTES IN NOTE LIST 1 39620021
         SR    TEMP3,TEMP3                                              39690021
OUT00700 LA    TEMP1,256                                                39760021
         SR    ODDREG,TEMP1             REMAINDER TO MOVE TO NOTE LIST2 39830021
         BC    10,OUT00800              BRANCH IF REMAINDER GTR,=  0    39900021
         AR    TEMP1,ODDREG             RESTORE NO.BYTES TO MOVE        39970021
OUT00800 BCTR  TEMP1,0                  DECREMENT BY 1 FOR EX MOVE INST 40040021
         LA    TEMP2,0(NOTL2ADD,TEMP3)  ADD.OF WHERE TO MV NL1 TO NL2   40110021
         EX    TEMP1,MOVEINST           MOVE NOTE LIST 1 TO NOTE LIST 2 40180021
         LA    TEMP3,256(TEMP3)         INC BY 256                      40250021
         LA    NOTL1ADD,256(NOTL1ADD)   INC ADD OF NOTE LIST TO MOVE AD 40320021
         LTR   ODDREG,ODDREG            ANY MORE NOTE LST TO BE MOVED   40390021
         BC    2,OUT00700               BRANCH ON YES - GO TO MOVE      40460021
OUT00850 EQU   *                                                        40470002
         L     NOTL2ADD,SAVEWORD                                 XM0834 40510002
         LTR   IOCTLCTB,IOCTLCTB ANY PRE-REALLOCATION BUFFERINGS XM0834 40530000
         BZ    OUT00940                 NO                       XM0834 40600000
OUT00900 LA    SAVEAREA,SPACES    SAVE AREA FOR POINT MACRO             40740021
         L     INDCBADD,DCBINTER        INTER DCB ADDRESS               40810021
*********************************************************************** 40880021
*              POINT TO NEXT RECORD TO READ                           * 40950021
*********************************************************************** 41020021
         POINT (INDCBADD),(IOCTLADD)                                    41090021
*                                                                     * 41160021
*              READ NEXT RECORD                                         41230021
*********************************************************************** 41300021
         READ  DECB,SF,(INDCBADD),(NOTL2ADD),(BUFFRSIZ)                 41370021
*********************************************************************** 41440021
*              CHECK FOR COMPLETION OF READ                           * 41510021
*********************************************************************** 41580021
         CHECK DECB                                                     41650021
         LA    IOCTLADD,4(IOCTLADD)     ADD OF NEXT TTR                 41720021
OUT00930 AR    NOTL2ADD,BUFFRSIZ                                        41790021
         BCT   IOCTLCTB,OUT00900        BRANC IF MORE TO READ IN        41860021
OUT00940 LTR   REG9,REG9              IS THERE A REALLOC BUFFER         41930021
         BZ    OUT00950               NO - RETURN                S01904 42000021
         LA    REG6,0(REG6)                                      S01904 42070021
         LA    REG7,0(REG7)                                      S01904 42140021
         CR    REG6,REG7              HAVE THE NEW BUFFERS BEEN READ?   42210021
         BE    OUT00950               YES,RETURN                 S01904 42280021
         LR    REG6,REG7              GET NEW BUFFER SIZE        S01904 42420021
         LR    REG4,REG9              GET NEW BUFFER COUNT       S01904 42490021
         B     OUT00900               RETURN TO READ     OX00029,S01904 42560000
OUT00950 LM    RETURN,BRANCH,SAVE1415   RESTORE  2 REGS                 42630021
         BCR   15,RETURN                RETURN TO CALLER                42700021
SAVEWORD DC    F'0'                                                     42770021
*********************************************************************** 42840021
*              PASS ERROR PARM TO ERROR ROUTINE - NO TEXT             * 42910021
*********************************************************************** 42980021
OUT00970 EQU   *                                                        43050037
IEW0143  LH    ERRCODE,ERRPARM1         NO TXT IN LOAD MODULE           43080037
         L     BRANCH,ERDIG       ADDR OF ERROR ROUTINE                 43120021
         BALR  RETURN,BRANCH            GO TO ERR DIAGNOSTIC ROUTINE    43190021
         L     BRANCH,FNALVCON          ADD OF FINAL PROC               43260021
         BCR   15,BRANCH                GO TO ERR ROUT                  43330021
**********************************************************************  43400021
*              WRITE - CHECK - NOTE   SUBROUTINE                      * 43470021
**********************************************************************  43540021
*                   REQUIRED REGISTERS                                  43610021
*                                                                       43680021
*              TEMPRTN             -RETURN ADDRESS                      43750021
*              WRITEADD            -ADDRESS OF WRITE AREA               43820021
*              WRITECT             -WRITE BYTE CT                       43890021
*                                                                       43960021
*                   REGISTERS THAT ARE ALSO USED (NOT SAVED)            44030021
*                                                                       44100021
*              DCBADD                                                   44170021
*              SAVEAREA                                                 44240021
*              TTRREG                                                   44310021
*                                                                       44380021
*              APT                                                      44450021
*              BASE                                                     44520021
*              REGS 14 - 1                                              44590021
OUT00990 L     DCBADD,DCBLMOD          SYSLMOD DCB                      44660021
         LA    SAVEAREA,REGSA     ADDRESS OF SAVE AREA                  44730021
*********************************************************************** 44800021
*              WRITE THE NEXT RECORD                                  * 44870021
*********************************************************************** 44940021
         WRITE WDECB,SF,(DCBADD),(WRITEADD),(WRITECT)                   45010021
         CHECK WDECB                                                    45080021
         SR    TTRREG,TTRREG            TTR REG SET TO ZERO             45150021
         TM    APT1,ESDWTBIT      IS FIRST ESD WT IND = ON              45220021
         BCR   8,TEMPRTN      NO        NO                              45290021
         NI    APT1,ESDWTOFF      SET FIRST ESD WT IND = OFF            45360021
         NOTE  (DCBADD)                                                 45430021
         BCR   15,TEMPRTN               RETURN TO CALLER                45500021
*********************************************************************** 45570021
*              SETUP SEGTAB CONTROL RECORD                              45640021
*********************************************************************** 45710021
OUT01000 L     WRITEADD,TNLS2     ESD ADDRESS/WRITE OUT AREA            45780021
         LA    WRITEADD,5(WRITEADD)     WRITE OUT AREA                  45850021
         XC    0(20,WRITEADD),0(WRITEADD) ZERO CONTROL RCD AREA         45920021
         OI    0(WRITEADD),X'01'        SET CONTROL IND.(TXT TO FOLLOW) 45990021
         OI    5(WRITEADD),X'04'        SET NO. BYTES ESD ID IN CTL     46060021
         OI    8(WRITEADD),X'06'        SET READ CCW FOR FETCH          46130021
         OI    12(WRITEADD),X'40'       SET FLAG FIELD FOR FETCH        46200021
         MVC   14(2,WRITEADD),PDSE10  PUT SEGTAB LENGTH IN CONTROL      46270021
         MVC   18(2,WRITEADD),PDSE10  PUT SEGTAB LENGTH IN CONTROL      46340021
         MVC   16(2,WRITEADD),ENSPX   PUT SEGTAB ID IN CONTROL          46410021
         MVC   WORD(2),PDSE10     LENGTH OF SEGTAB                      46480021
         LH    TEMP5,WORD              LENGTH OF SEGTAB                 46550021
*********************************************************************** 46620021
*              SETUP FOR WRITE OF CONTROL RECORD                        46690021
*********************************************************************** 46760021
         NI    APT1,ESDWTOFF      SET NOTE IND= OFF                     46830021
         LA    WRITECT,20               SET WRITE CT TO 20 BYTES        46900021
         NI    APT3,X'FD'         SET 2ND PASS NOT EDIT BIT OFF         46970021
*              WHEN THIS BIT IS ON 2ND PASS DOES NOT WRITE HIS 1ST      47040021
*              CONTROL RECORD ---- IN OVERLAY HIS 1ST CONTROL RECORD    47110021
*              IS NOT THE 1ST CONTROL RECORD IN THE PGM & MUST BE WRITT 47180021
         TM    PDSE8,NOTEDIT      IS MODULE NOT EDITABLE                47250021
         BC    1,OUT01100              YES/DO NOT OUTPUT CONTROL RECORD 47320021
         BAL   TEMPRTN,OUT00990         GO TO WT OUT SEG TAB CONTROL RD 47390021
*********************************************************************** 47460021
*              BUILD IST TEXT RECORD  (SEGTAB)                        * 47530021
*********************************************************************** 47600021
*                                                                       47670021
OUT01100 LR    TEMP2,WRITEADD          ADDRESS OF AREA TO SET TO 0      47740021
         LR    TEMP1,TEMP5              BYTES OF SEGTAB TO 0  (CT)      47810021
         LA    TEMP3,256                                                47880021
OUT01200 SR    TEMP1,TEMP3             IS REMAINDER LESS THAN 256       47950021
         BC    4,OUT01300               YES                             48020021
         BCTR  TEMP3,0                 DECREMENT COUNT TO 255           48090021
         EX    TEMP3,ZEROHIID          ZERO 255 BYTES                   48160021
         LA    WRITEADD,256(WRITEADD)   INCREMENT ADD BY 256            48230021
         BC    15,OUT01200              RETURN TO 0 REMAINDER           48300021
OUT01300 AR    TEMP1,TEMP3             RESTORE COUNT                    48370021
         BCTR  TEMP1,0                 DECREMENT COUNT BY 1             48440021
         EX    TEMP1,ZEROHIID          ZERO REMAINDER                   48510021
         LR    WRITEADD,TEMP2           RESTORE BEGIN OF SEGTAB AREA    48580021
         LR    WRITECT,TEMP5                 SEGTAB LENGTH              48650021
         MVC   8(1,WRITEADD),LSTS PUT LST SEG OF REG0 SEGTAB            48720021
         MVC   10(1,WRITEADD),LSTS+1   PUT LST SEG OF REG 1 SEGTAB      48790021
         MVC   12(1,WRITEADD),LSTS+2   PUT LST SEG OF REG 2 SEGTAB      48860021
         MVC   14(1,WRITEADD),LSTS+3   PUT LST SEG OF REG 3 SEGTAB      48930021
         MVI   9(WRITEADD),X'01'                                        49000021
*                                                                       49070021
*                                                                       49140021
         SR    TEMP1,TEMP1                                              49210021
         LA    TEMP2,20(WRITEADD)                                       49280021
OUT01500 L     TEMP3,SGT1         ADD OF SEGTAB 1 (-1)                  49350021
         LA    TEMP1,1(TEMP1)                INC ADD OF SEGTAB          49420021
         AR    TEMP3,TEMP1              ADD OF NEXT ITEM IN SEGTA1      49490021
         LA    TEMP2,4(TEMP2)                INC ADD OF PRV SG IN SEGTB 49560021
         MVC   0(1,TEMP2),0(TEMP3)           MOVE PRV SG NO  TO SEGTAB  49630021
         MVI   3(TEMP2),X'03'                SET STATUS - NOT IN CORE   49700021
         CH    TEMP1,CSNO         IS LOOP DONE                          49770021
         BC    4,OUT01500                    NO                         49840021
         MVI   27(WRITEADD),X'02'            SET STATUS - IN CORE/SEG 1 49910021
*********************************************************************** 49980021
*              SETUP FOR WRITE OF SEGTAB RECORD                         50050021
*********************************************************************** 50120021
         OI    APT1,ESDWTBIT      SET NOTE IND = ON                     50190021
         BAL   TEMPRTN,OUT00990         GO TO WRITE SEGTAB RCD          50260021
         ST    TTRREG,PDSE4       SAVE TTRO OF SEGTAB IN PDS            50330021
         BC    15,OUT00560             GO BUILD REST OF HESD            50400021
*********************************************************************** 50470021
*              INITIALIZE FOR BUILDING SCATTER/TRANSLATION TABLES     * 50540021
*********************************************************************** 50610021
OUT02000 LA    TEMP5,2                                                  50680021
         LH    HESDCT,ENCDC       HESD CT = X                           50750021
         L     HESDADD,HESD            HESD ADDRESS                     50820021
         LA    SCATTADD,1(HESDCT)       X+1                             50890021
         LR    TRANSADD,SCATTADD        X+1                             50960021
         SLL   TRANSADD,3               8(X+1)                          51030021
         AR    TRANSADD,HESDADD         8(X+1) +HESD ADD = TRANS ADD    51100021
         AR    SCATTADD,SCATTADD        2(X+1)   / SLATION TABLE -4     51170021
         AR    SCATTADD,TEMP5           2(X+1)+2  - EXTRA 2 FOR PAD     51240021
         AR    TEMP5,TEMP5              4                               51310021
         XC    4(2,TRANSADD),4(TRANSADD)  SET IST TRANSADD ENTRY = 0    51380021
         LCR   TEMP1,TEMP5              2'S COMP OF 4 = FFFFFFFC        51450021
         NR    SCATTADD,TEMP1           LENGTH OF TRANSLATION TABLE     51520021
*                                       WITH PAD REMOVED IF NOT NEEDED  51590021
         STH   SCATTADD,WORD            PUT LENGTH IN PDS               51660021
         MVC   PDSE14(2),WORD                                           51730021
         LA    TEMP4,0(SCATTADD,TRANSADD)    ADD OF SCATTER TABLE -TRUE 51800021
         XC    0(8,TEMP4),0(TEMP4)      SET 1ST SCAT ENTRY = 0          51870021
         LA    SCATTADD,8(TEMP4)        ADD OF 2ND ENTRY IN SCATTER TBL 51940021
         AR    TRANSADD,TEMP5           TRUE ADD OF TRANSLATION TABLE   52010021
         AR    TEMP4,TEMP5                                              52080021
*********************************************************************** 52150021
*                BUILD SCATTER/TRANSLATION TABLES                     * 52220021
*                  FIRST PASS REFERENCED TXTIOT                       * 52290021
*********************************************************************** 52360021
*                                                                     * 52430021
* SET UP SEARCH OF TXTIOT                                             * 52500021
          SR    ENDTXTIO,ENDTXTIO   CLEAR REGISTER FOR COMPARE TO 0     52570021
         CH    ENDTXTIO,ENTOC      IS THERE AN Y TEXT                   52640021
         BC    11,OUT02050         NO/ SKIP 1ST SEARCH AND SEARCH HESD  52710021
         OI    SWITCH,TXTIOLP      SET SWITCH INDICATION TXTIO LOOP     52780021
         L     ADTXTIOT,TXTIO      ADDRESS TXTIO TABLE                  52850021
         LR    ENDTXTIO,ADTXTIOT   ADDRESS TXTIO TABLE                  52920021
         AH    ENDTXTIO,ENTOC      END ADDRESS OF TXTIO TABLE           52990021
* PROCESS TXTIOT ENTRY                                                  53060021
OUT02023 CR    ADTXTIOT,ENDTXTIO   ANY MORE TXT IN TXTIOT               53130021
         BC    11,OUT02035         NO- SET IN TXTIOT LOOP OFF           53200021
         TM    2(ADTXTIOT),X'20'   IS IT OUT OF ORDER TEXT              53270021
         BC    1,OUT02033          YES--THEN ID FOR TXTIO ENTRY ALREADY 53340021
*                                     PROCESSED, CHECK NEXT ENTRY.      53410021
* FIND HESD ENTRY                                                       53480021
         LH    TEMP1,0(ADTXTIOT)   HESD ENTRY ID (FROM TXTIOT)          53550021
         SLL   TEMP1,3             FIND REL ADDRESS HESD  (* 8)         53620021
         A     TEMP1,HESD          ADDRESS OF HESD ENTRY                53690021
         TM    0(TEMP1),X'08'          HAS HESD ENTRY BEEN PROCESSED    53760021
         BC    1,OUT02033          YES/ CHECK NEXT TXTIOT ENTRY         53830021
         B     OUT02110            NO/ PROCESS ENTRY                    53900021
OUT02030 OI    0(TEMP1),X'08'      SET PROCESSED SWITCH                 53970021
OUT02033 LA    ADTXTIOT,INC(ADTXTIOT)  UPDATE ADDR TXTIOT ENTRY         54040021
         B     OUT02023                                                 54110021
OUT02035 NI    SWITCH,X'7F'        TURN TXTIO LOOP SWITCH OFF           54180021
         B     OUT02050            SEARCH HESD                          54250021
OUT02036 NI    0(TEMP1),X'F7'      TURN PROCESSED SWITCH OFF            54320021
         B     OUT02300            CHECK END OF LOOP                    54390021
OUT02050 LR    TEMP5,HESDCT        SAVE NUMBER OF ENTRIES IN HESD       54460021
         LR    TEMP1,HESDADD            HESD ADD  // 1ST ENTRY = 0      54530021
*********************************************************************** 54600021
*********************************************************************** 54670021
*              BUILD SCATTER/TRANSLATION TABLES                       * 54740021
*********************************************************************** 54810021
OUT02100 LA    TEMP1,8(TEMP1)           INC HESD ADD                    54880021
         TM    0(TEMP1),X'08'      HAS HESD ENTRY BEEN PROCESSED        54950021
         BC    1,OUT02036          YES- TURN OFF SWITCH/ CHECK END OF   55020021
*                                      LOOP                             55090021
         TM    NEWSW,HIAROP             IS HIAR OPTION ON               55160021
         BC    8,OUT02120               NO                              55230021
         LR    HIARAD,TEMP1        HESD ADDRESS                         55300021
         S     HIARAD,HESD         RELATIVE HESD ADDRESS                55370021
         SRL   HIARAD,3            DIVIDE BY 8 TO GET HESD ID           55440021
         B     OUT02115                                                 55510021
OUT02110 TM    NEWSW,HIAROP        IS HIAR OPTION ON                    55580021
         BC    8,OUT02120           NO                                  55650021
         LH    HIARAD,0(ADTXTIOT)  HESD ID (REL. ADDR ON HIAR TABLE)    55720021
OUT02115 A     HIARAD,HIARADD      ADDRESS OF ENTRY OF HIERARCHY TABLE  55790021
OUT02120 TM    0(TEMP1),X'02'           IS HESD TYPE SD,PC OR CM        55860021
         BC    1,OUT02300               NO                              55930021
         TM    NEWSW,HIAROP             IS HIAR OPTION ON               56000021
         BC    8,OUT02140               NO                              56070021
         MVC   0(1,SCATTADD),0(HIARAD)  PUT HN IN HIGH ORDER BYTE       56140021
         B     OUT02150                                                 56210021
OUT02140 MVI   0(SCATTADD),X'00'        NO HIAR- PUT 00 IN HIGH BYTE    56280021
OUT02150 MVC   1(3,SCATTADD),1(TEMP1)   PUT SD,PC OR CM ADD IN SCTR TAB 56350021
         LR    TEMP3,SCATTADD           SAVE SCATTER ADD FOR THIS ENTRY 56420021
         SR    TEMP3,TEMP4              REL SCATTER ADD                 56490021
         SRL   TEMP3,2                  SCAT ID                         56560021
         LA    SCATTADD,4(SCATTADD)     INC TO NEXT AVAILABLE SCATENTRY 56630021
         CL    SCATTADD,TNLS2   CF SCTR TBL END:TXTNL BEGIN    @ZA07600 56640037
         BL    OUT02200         BR IF SCTR TBL DOESN'T OVLY    @ZA07600 56650037
IEW0364  LA    ERRCODE,X'0424'  NEED MORE SIZE1 PARM           @ZA07600 56660037
         L     15,ERDIG         LOAD ERR ADDR                  @ZA07600 56670037
         BCR   15,15            BR TO ERROR RTN                @ZA07600 56680037
OUT02200 LR    TEMP2,TEMP1              SAVE HESD ADD FOR THIS ENTRY    56700021
         SR    TEMP2,HESDADD            REL HESD ADD                    56770021
         SRL   TEMP2,2                  2(HESD ID) OR REL TRANS ADD     56840021
         STH   TEMP3,0(TRANSADD,TEMP2)  PUT PTR TO SCAT ENT IN TRANS TB 56910021
         TM    SWITCH,TXTIOLP       IS PGM IN TXTIO TABLE SEARCH        56980021
         BC    1,OUT02030          YES SET ENTRY PROCESSED/ GO TO  NEXT 57050021
*                                         TXTIOT ENTRY                  57120021
OUT02300 BCT   HESDCT,OUT02100          BRANCH IF HESD LOOP NOT DONE    57190021
         LR    TEMP1,HESDADD           ADDRESS OF HESD                  57260021
OUT02400 LA    TEMP1,8(TEMP1)          INC HESD ADD                     57330021
         SR    TEMP3,TEMP3              0 TO BE USED AS TRANSPTER,PR,NL 57400021
         TM    0(TEMP1),X'02'           IS HESD TYPE SD,PC OR CM        57470021
         BC    8,OUT02470              YES                              57540021
         TM    0(TEMP1),X'07'           IS TYPE = NULL                  57610021
         BC    1,OUT02450               YES / GO TO PUT 0 PTR IN TRANS  57680021
         TM    0(TEMP1),X'03'           IS TYPE = LR                    57750021
         BC    12,OUT02450              NO - ER,PR /GO PUT 0 IN TRANS   57820021
         LH    TEMP2,6(TEMP1)           PICK UP ID THAT PTS TO SD OR PC 57890021
         AR    TEMP2,TEMP2              DOUBLE ID - REL TRANS TBL ADD   57960021
         LH    TEMP3,0(TRANSADD,TEMP2)  PICK UP PTR TO SCATT FOR SD -PC 58030021
OUT02450 LR    TEMP2,TEMP1              SAVE HESD ADD FOR THIS ENTRY    58100021
         SR    TEMP2,HESDADD            REL HESD ADD                    58170021
         SRL   TEMP2,2                  2(HESD ID) OR REL TRANS ADD     58240021
         STH   TEMP3,0(TRANSADD,TEMP2)  PUT PTR TO SCAT ENT IN TRANS TB 58310021
OUT02470 BCT   TEMP5,OUT02400           BRANCH IF HESD LOOP NOT DONE    58380021
*********************************************************************** 58450021
*              SET UP LOOP TO WRITE OUT SCATTER - TRANSLATION RECORD  * 58520021
*********************************************************************** 58590021
         LR    TEMP1,SCATTADD           ADD OF LAST SCATTER ENTRY + 4   58660021
         SR    TEMP1,TEMP4              NO BYTES OF SCATTER TABLE       58730021
         STH   TEMP1,WORD                                               58800021
         MVC   PDSE13(2),WORD     PUT NO SCATT BYTES IN PDS             58870021
         LR    TEMP5,SCATTADD                                           58940021
         SR    TEMP5,TRANSADD           NO BYTES     TO WRITE OUT       59010021
         OI    APT1,ESDWTBIT      SET BIT TO NOTE FIRST WRITE           59080021
OUT02500 LA    TEMP1,1020               1020                            59150021
         SR    TEMP5,TEMP1              BYTES REMAINING TO WRITE        59220021
         BC    10,OUT02600              BRANCH IF REMAINDER GREATER 0   59290021
         AR    TEMP1,TEMP5              WRITE CT = OR LESS 1020         59360021
OUT02600 LA    WRITECT,4(TEMP1)         CT + 4                          59430021
         SR    SCATTADD,WRITECT         WRITE ADDRESS                   59500021
         L     WORK1,0(SCATTADD)        SAVE 4 BYTES                    59570021
         ST    TEMP1,0(SCATTADD)        PUT WRITE CT IN HEADER - CTL    59640021
         MVI   0(SCATTADD),X'10'        PUT IN SCAT CONTROL             59710021
         BAL   TEMPRTN,OUT00990         GO WRITE OUT SCATT RCD          59780021
         ST    WORK1,0(SCATTADD)        RESTORE  4 B                    59850021
         LA    SCATTADD,4(SCATTADD)                                     59920021
         LTR   TTRREG,TTRREG            WAS A NOTE DONE ON THIS WRITE   59990021
         BC    8,OUT02700               NO                              60060021
         ST    TTRREG,WORD              SAVE TTR                        60130021
         MVC   PDSE5(3),WORD      PUT TTR IN PDS                        60200021
OUT02700 LTR   TEMP5,TEMP5              ANY MORE DATA TO WRITE          60270021
         BC    2,OUT02500               YES                             60340021
         BC    15,OUT560C               NO/RETURN TO MAIN LOOP   XM9089 60410003
         EJECT                                                   S21016 60480021
*********************************************************************** 60550021
*                                                                     * 60620021
*              IDROUT -- SUBROUTINE TO PROCESS IDR OUTPUT             * 60690021
*                                                                     * 60760021
*********************************************************************** 60830021
*                                                                     * 60900021
*                  SUBROUTINE IDROUT RECEIVES CONTROL                 * 60970021
*                  AFTER THE LAST CESD RECORD HAS BEEN                * 61040021
*                  WRITTEN ON THE SYSLMOD DATA SET.                   * 61110021
*                  ITS FUNCTION IS TO CREATE AND WRITE                * 61180021
*                  THE CSECT IDENTIFICATION RECORDS OF                * 61250021
*                  A LOAD MODULE IMMEDIATELY FOLLOWING                * 61320021
*                  ALL CESD RECORDS ON THE SYSLMOD                    * 61390021
*                  DATA SET.                                          * 61460021
*                  IT USES THREE TABLES CREATED DURING                * 61530021
*                  INPUT PROCESSING:                                  * 61600021
*                            IDRZPTAB - IMASPZAP DATA                 * 61670021
*                            IDRTRTAB - TRANSLATOR DATA               * 61740021
*                            IDRUDTAB - USER DATA                     * 61810021
*                  THESE TABLES, COLLECTIVELY, CONTAIN                * 61880021
*                  ALL IDR DATA RECEIVED FROM ALL                     * 61950021
*                  INPUT LOAD AND OBJECT MODULES PLUS                 * 62020021
*                  USER-SUPPLIED IDR DATA RECEIVED                    * 62090021
*                  VIA THE IDENTIFY CONTROL STATEMENT.                * 62160021
*                                                              S21016 * 62230021
*********************************************************************** 62300021
         SPACE 2                                                 S21016 62370021
IDROUT   STM   WRITECT,TABEND,TEMPSAVE   SAVE REGISTERS          S21016 62440021
         SPACE 1                                                 S21016 62510021
*********************************************************************** 62580021
*                                                                     * 62650021
*              PROCESS IDR IMASPZAP RECORD(S)                         * 62720021
*                                                              S21016 * 62790021
*********************************************************************** 62860021
         SPACE 1                                                 S21016 62930021
         MVC   IDRBUF(HDRLEN),IDRZHDR  MOVE IDR SPZAP RECORD     S21016 63000021
*                                      HEADER INTO IDR BUFFER    S21016 63070021
         LA    WRITEADD,IDRBUF         POINT TO IDR BUFFER FOR   S21016 63140021
*                                      WRITE ROUTINE             S21016 63210021
         LA    WRITECT,ZPRECLEN        LOAD RECORD LENGTH FOR    S21016 63280021
*                                      WRITE ROUTINE             S21016 63350021
         L     TABADD,IDRZPTAB         GET TABLE START ADDRESS   XM5480 63540003
         L     TABEND,IDRZPEND         GET TABLE END ADDRESS     XM5480 63550003
*                                      TABLE                     S21016 63560021
         CR    TABADD,TABEND           ANY DATA IN TABLE?        S21016 63630021
         BE    NOZAP                   IF NOT, BRANCH            S21016 63700021
         LR    DATAPTR,TABADD          IF THERE IS DATA, POINT   S21016 63770021
*                                      TO IT                     S21016 63840021
         LR    DATALEN,TABEND          GET ENDING ADDRESS OF     S21016 63910021
*                                      DATA                      S21016 63980021
         SR    DATALEN,TABADD          SUBTRACT STARTING ADDRESS S21016 64050021
*                                      TO GET TOTAL LENGTH OF    S21016 64120021
*                                      DATA IN TABLE             S21016 64190021
         LA    RECLEN,ZAPLEN           LOAD DATA LENGTH FOR ONE  S21016 64260021
*                                      SPZAP RECORD              S21016 64330021
ZAPLOOP  CR    DATALEN,RECLEN          COMPARE LENGTH OF DATA IN S21016 64400021
*                                      TABLE TO LENGTH WHICH CAN S21016 64470021
*                                      GO ONTO ONE SPZAP RECORD  S21016 64540021
         BNH   LASTZAP                 IF ALL DATA REMAINING IN  S21016 64610021
*                                      TABLE CAN GO ONTO A       S21016 64680021
*                                      SINGLE RECORD, BRANCH     S21016 64750021
MOVEDATA MVC   ZAPDATA(ZAPLEN),LOC(DATAPTR)  IF NOT, MOVE DATA   S21016 64820021
*                                      TO FILL 1 REC TO BUFFER   S21016 64890021
         OI    ZAPCNT,ZAPMAX           SET COUNT FIELD OF REC TO S21016 64960021
*                                      SHOW 19 ENTRIES (MAXIMUM) S21016 65030021
*                                      AND TURN ON CHAIN BIT     S21016 65100021
*                                      (BIT 1 OF COUNT BYTE)     S21016 65170021
         BAL   TEMPRTN,OUT00990        GO TO WRITE THE RECORD    S21016 65240021
         LA    DATAPTR,ZAPLEN(DATAPTR) UPDATE POINTER TO DATA BY S21016 65310021
*                                      THE AMOUNT JUST WRITTEN   S21016 65380021
         SR    DATALEN,RECLEN          SUBTRACT AMOUNT JUST      S21016 65450021
*                                      WRITTEN FROM LENGTH OF    S21016 65520021
*                                      DATA REMAINING TO BE      S21016 65590021
*                                      PROCESSED                 S21016 65660021
         B     ZAPLOOP                 LOOP TO CONTINUE          S21016 65730021
*                                      PROCESSING THE REMAINING  S21016 65800021
*                                      DATA                      S21016 65870021
NOZAP    NI    ZAPCNT,NOZPDATA         TURN CHAIN BIT OFF AND    S21016 65940021
*                                      SET COUNT TO ZERO ENTRIES S21016 66010021
*                                      FOR THIS RECORD           S21016 66080021
         MVI   ZAPDATA,ZEROFILL        PAD UNUSED DATA PORTION   S21016 66150021
         MVC   ZAPDAT1(ZPLEN),ZAPDATA  OF RECORD WITH ZEROES     S21016 66220021
SHRTZAP  BAL   TEMPRTN,OUT00990        GO TO WRITE THE RECORD    S21016 66290021
         B     LKEDREC                 GO TO PROCESS LKED DATA   S21016 66360021
*                                      FOR IDR                   S21016 66430021
LASTZAP  BCTR  DATALEN,LOC             SUBTRACT ONE FROM DATA    S21016 66500021
*                                      LENGTH FOR ZERO-ORIENTED  S21016 66570021
*                                      MOVE LENGTH               S21016 66640021
         MVI   ZAPDATA,ZEROFILL        PAD UNUSED DATA PORTION   S21016 66710021
         MVC   ZAPDAT1(ZPLEN),ZAPDATA  OF RECORD WITH ZEROES     S21016 66780021
         EX    DATALEN,MOVEDATA        EXECUTE MOVE OF DATA TO   S21016 66850021
*                                      IDR BUFFER FOR SPZAP REC  S21016 66920021
         LA    DATALEN,UNIT(DATALEN)   ADD ONE TO DATA LENGTH    S21016 66990021
*                                      TO RESTORE NORMAL ONE-    S21016 67060021
*                                      ORIENTATION               S21016 67130021
         XR    DATAPTR,DATAPTR         ZERO OUT EVEN REG         S21016 67200021
*                                      TO CLEAR SIGN BIT         S21016 67270021
*                                      FOR DIVIDE (ALWAYS        S21016 67340021
*                                      A POSITIVE NUMBER)        S21016 67410021
         D     DATASIZE,ZAPSIZE        DIVIDE LENGTH OF DATA     S21016 67480021
*                                      IN RECORD BY LENGTH OF    S21016 67550021
*                                      A SINGLE DATA ITEM TO     S21016 67620021
*                                      DETERMINE THE NUMBER OF   S21016 67690021
*                                      ENTRIES IN THIS RECORD    S21016 67760021
         STC   ZPCOUNT,ZAPCNT          SET COUNT FIELD OF REC TO S21016 67830021
*                                      CORRECT NUMBER OF ENTRIES S21016 67900021
*                                      IN THIS RECORD WITH CHAIN S21016 67970021
*                                      BIT OFF                   S21016 68040021
         LA    ZAPCMPR,CMPRSIZE        GET COMPARISON VALUE      S21016 68110021
*                                      FOR NUMBER OF ENTRIES     S21016 68180021
*                                      ALLOWED WITHOUT CREATING  S21016 68250021
*                                      AN EXTRA (BLANK) REC FOR  S21016 68320021
*                                      POSSIBLE FUTURE OVERFLOW  S21016 68390021
         CR    ZPCOUNT,ZAPCMPR         DOES THIS RECORD CONTAIN  S21016 68460021
*                                      MORE THAN THE CRITICAL    S21016 68530021
*                                      NUMBER OF ENTRIES?        S21016 68600021
         BNH   SHRTZAP                 IF NOT, BRANCH (THIS WILL S21016 68670021
*                                      BE THE LAST IDR WITH      S21016 68740021
*                                      SPZAP DATA)               S21016 68810021
         OI    ZAPCNT,CHAIN            IF AN ADDITIONAL RECORD   S21016 68880021
*                                      IS NEEDED, TURN ON THE    S21016 68950021
*                                      CHAIN BIT IN THIS RECORD  S21016 69020021
         BAL   TEMPRTN,OUT00990        GO TO WRITE THIS RECORD   S21016 69090021
         B     NOZAP                   BRANCH TO CREATE A SPARE  S21016 69160021
*                                      RECORD                    S21016 69230021
         SPACE 1                                                 S21016 69300021
*********************************************************************** 69370021
*                                                                     * 69440021
*              PROCESS IDR LINKAGE EDITOR RECORD                      * 69510021
*                                                              S21016 * 69580021
*********************************************************************** 69650021
         SPACE 1                                                 S21016 69720021
LKEDREC  LA    WRITECT,LKRECLEN        SET UP RECORD LENGTH FOR  S21016 69790021
*                                      WRITE ROUTINE             S21016 69860021
         L     REG1,DEFADDR            GET ADDR. OF MDEF         S21016 69930021
         USING DEFDSECT,REG1           SET UP ADRESSABABILITY    S21016 70000021
*                                      FOR MDEF DSECT            S21016 70070021
         PACK  LKRELNO(LEN2),SGRELNO(LEN3)  PACK SYSGEN-ASSIGNED S21016 70140021
*                                      OS RELEASE NO. TO LKED    S21016 70210021
*                                      IDR HEADER                S21016 70280021
         DROP  REG1                    NO LONGER NEEDED          S21016 70350021
         SR    REG1,REG1               ZERO OUT REGISTER         S21016 70420021
         IC    REG1,LKRELNO+1          GET 2ND BYTE OF REL.NO.   S21016 70490021
         SRL   REG1,LEN4               SHIFT OUT SIGN            S21016 70560021
         STC   REG1,LKRELNO+1          STORE MODIFICATION LEVEL  S21016 70630021
*                                      WITH A LEADING ZERO       S21016 70700021
         MVC   IDRBUF(LKLEN),LKIDR     MOVE RECORD HEADER AND    S21016 70770021
*                                      LKED IDENTIFYING INFO     S21016 70840021
*                                      TO IDR BUFFER             S21016 70910021
         ST    TIME,TIMESAVE           SAVE REGISTER 0 BEFORE    S21016 70980021
*                                      ISSUEING TIME MACRO       S21016 71050021
         TIME  ,            ISSUE TIME MACRO TO GET TODAY'S DATE S21016 71120021
         ST    DATE,DATESAVE           STORE TODAY'S DATE AS     S21016 71190021
*                                      RETURNED BY TIME MACRO    S21016 71260021
         MVC   LKDATE(DATELEN),DATESAV  MOVE TODAY'S DATE TO     S21016 71330021
*                                      DATE FIELD OF RECORD (IN  S21016 71400021
*                                      PACKED DECIMAL FORMAT)    S21016 71470021
         L     TIME,TIMESAVE           RESTORE REGISTER ZERO     S21016 71540021
         L     TABADD,IDRTITAB         GET TABLE START ADDRESS  OX04245 71800002
         L     TABEND,IDRTIEND         GET TABLE END ADDRESS    OX04245 71810002
         CR    TABADD,TABEND           ANY DATA IN TABLE?        S21016 71820021
         BNE   TRNSREC                 IF SO, BRANCH TO          S21016 71890021
*                                      PROCESS TRANSLATOR DATA   S21016 71960021
TRNSDONE EQU   *                       TRNSDONE                  XM5480 72180003
         L     TABADD,IDRUDTAB         GET TABLE START ADDRESS   XM5480 72220003
         L     TABEND,IDRUDEND         GET TABLE END ADDRESS     XM5480 72230003
         CR    TABADD,TABEND           ANY DATA IN TABLE?        S21016 72240021
         BNE   USERREC                 IF SO, BRANCH TO          S21016 72310021
*                                      PROCESS USER DATA         S21016 72380021
USERDONE OI    SUBTYPE,LASTIDR         TURN ON FLAG IN SUBTYPE   S21016 72450021
*                                      FIELD OF THIS RECORD TO   S21016 72520021
*                                      INDICATE THAT IT IS THE   S21016 72590021
*                                      LAST IDR FOR THE LOAD     S21016 72660021
*                                      MODULE                    S21016 72730021
         BAL   TEMPRTN,OUT00990        GO TO WRITE THE LAST REC  S21016 72800021
         LM    WRITECT,TABEND,TEMPSAVE RESTORE REGISTERS         S21016 72870021
         BR    TEMPRTN                 RETURN TO CALLER          S21016 72940021
         SPACE 1                                                 S21016 73010021
*********************************************************************** 73080021
*                                                                     * 73150021
*              PROCESS IDR TRANSLATOR RECORD(S)                       * 73220021
*                                                              S21016 * 73290021
*********************************************************************** 73360021
         SPACE 1                                                 S21016 73430021
TRNSREC  BAL   TEMPRTN,OUT00990        GO TO WRITE THE LKED IDR  S21016 73500021
         MVI   SUBTYPE,TRNSTYPE        MOVE INDICATOR FOR        S21016 73570021
*                                      TRANSLATOR DATA TO        S21016 73640021
*                                      IDR SUBTYPE FIELD         S21016 73710021
         LA    WRITECT,TURECLEN        LOAD RECORD LENGTH FOR    S21016 73780021
*                                      WRITE ROUTINE             S21016 73850021
         LA    RECLEN,TRUDLEN          LOAD DATA LENGTH FOR ONE OX04245 74020002
*                                      OUTPUT RECORD            OX04245 74070002
         LA    OBUFPTR,TRUDATA         GET ADDRESS OF OUTPT     OX04245 74120002
*                                      BUFFER                   OX04245 74170002
         LR    DATAPTR,OBUFPTR         MAHE A COPY IN ORDER TO  OX04245 74220002
         AR    DATAPTR,RECLEN          COMPUT POINTER TO END    OX04245 74270002
*                                      OF RECORD                OX04245 74320002
         ST    DATAPTR,OBUFEND         STORE FOR COMPARISON     OX04245 74320102
         LR    DATAPTR,TABADD          POINT TO START OF DATA    S21016 74320402
TRNSLOOP EQU   *                       LOOP TO MOVE ONE         OX04245 74320802
*                                      TRANSLATOR IDR ITEM      OX04245 74321202
         CR    DATAPTR,TABEND          TEST FOR END OF TABLE    OX04245 74321602
         BNL   LASTRANS                BRANCH TO WRITE LAST     OX04245 74321702
*                                      RECORD                   OX04245 74321802
         LA    MVCPTR,HDLEN2(DATAPTR)  POINT TO FIRST ID        OX04245 74322002
*                                      OF DOUBLE ITEM           OX04245 74324002
         CLI   LOC(DATAPTR),ONETRNS    IS THIS A SINGLE ITEM?   OX04245 74330002
         BNE   TRNSID                  NO,  BRANCH              OX04245 74340002
         LA    MVCPTR,HDLEN1(DATAPTR)  POINT TO FIRST ID        OX04245 74350002
TRNSID   EQU   *                                                OX04245 74720002
         LR    DATALEN,MVCPTR          SAVE MVCPTR IN DATALEN   OX04245 74770002
*                                      FOR USE AS INDEX         OX04245 74780002
TRIDLOOP EQU   *                       ID SEARCH LOOP           OX04245 74790002
         CR    DATALEN,TABEND          TEST FOR END OF TABLE    @Z17975 74870037
         BNL   LASTRANS                BRANCH TO WRITE LAST REC @Z17975 74879037
         TM    LOC(DATALEN),LASTIDR      WAS THIS THE LAST ID?  OX04245 74888037
         BO    MOVID                   YES, MOVE IDS            OX04245 74897037
         LA    DATALEN,LEN2(DATALEN)   POINT TO NEXT ID         OX04245 74906037
         B     TRIDLOOP                BRANCH TO CONTINUE LOOP  OX04245 74915037
MOVID    EQU   *                                                OX04245 74926002
         LA    DATALEN,LEN2(DATALEN)   POINT PAST LAST ID       OX04245 74928002
         ST DATALEN,DPTRSAV            SAVE ADR OF NEXT TAB     OX04245 74928402
*                                      ENTRY FOR LATER USE      OX04245 74928802
         SR    DATALEN,MVCPTR          COMPUTE DATA LENGTH      OX04245 74930002
         BAL   TEMPRTN,TRMOV           YES,MOVE THE IDS         OX04245 74970002
         LA    DATALEN,INDCTRLN        GET LENGTH OF FLAG FIELD OX04245 75170002
         LR    MVCPTR,DATAPTR          POINT TO START OF HEADER OX04245 75180002
         BAL   TEMPRTN,TRMOV           BRANCH TO MOVE THE FLAG  OX04245 75220002
         SR    MVCPTR,MVCPTR           ZERO OUT REGISTER        OX04245 75270002
         IC    MVCPTR,NAMEPTR(DATAPTR) GET FIRST BYTE OF TABLE  OX04245 75320002
*                                      POINTER                  OX04245 75370002
         SLL   MVCPTR,LEN8             SHIFT LEFT ONE BYTE      OX04245 75420002
         IC    MVCPTR,NAMEPTR+1(DATAPTR) GET SECOND BYTE OF     OX04245 75470002
*                                      TABLE POINTER            OX04245 75520002
         A     MVCPTR,IDRTRTAB          ADD START ADDRESS OF    OX04245 75570002
*                                      TRANSLATOR DATA TABLE    OX04245 75620002
         ST    MVCPTR,TEMPSAVE         SAVE POINTER TO TABLE    OX04245 75670002
         LA    DATALEN,TRNMLEN         GET TRANSLATOR NAME LEN  OX04245 75720002
         BAL   TEMPRTN,TRMOV           BRANCH TO MOV TRANS NAME OX04245 75770002
         LA    MVCPTR,YYDDD(DATAPTR)   GET PTR TO FIRST DATE    OX04245 75820002
         LA    DATALEN,PKLEN2          GET LENGTH OF FIRST DATE OX04245 75870002
         BAL   TEMPRTN,TRMOV           BRANCH TO MOVE           OX04245 75920002
*                                      TRANSLATOR DATE          OX04245 75970002
         CLI   INDCTR(DATAPTR),ONETRNS IS THIS A DOUBLE ITEM?   OX04245 76020002
         BE    TRNSNXT                 IF NOT, BRANCH TO SKIP   OX04245 76070002
*                                      REMAINDER OF MOVE        OX04245 76120002
         L     MVCPTR,TEMPSAVE         RETRIEVE TABLE POINTER   OX04245 76170002
         LA    MVCPTR,TRNMLEN(MVCPTR)  INCREMENT TO NEXT TABLE  OX04245 76270002
*                                      ENTRY                    OX04245 76320002
         LA    DATALEN,TRNMLEN         GET LENGTH OF TRANSLATOR OX04245 76370002
*                                      NAME                     OX04245 76420002
         BAL   TEMPRTN,TRMOV           BRANCH TO MOVE 2ND       OX04245 76470002
*                                      TRANSLATOR NAME          OX04245 76520002
         LA    MVCPTR,YYDDD2(DATAPTR)  GET ADDRESS OF 2ND DATE  OX04245 76570002
         LA    DATALEN,PKLEN2          GET LENGTH OF 2ND DATE   OX04245 76620002
         BAL TEMPRTN,TRMOV             MOVE IN 2ND DATE         OX04245 76670002
TRNSNXT  EQU   *                                                        76720002
         L     DATAPTR,DPTRSAV         RETRIEVE POINTER         OX04245 76770002
         B     TRNSLOOP                CONTINUE SEARCHING       OX04245 76820002
*        ROUTINE TO MOVE ONE FIELD INTO OUTPUT RECORD           OX04245 76870002
TRMOV    EQU   *                                                OX04245 76920002
         LR    REG10,OBUFPTR           COPY CURRENT BUFFER      OX04245 76970002
*                                      POINTER                  OX04245 77020002
         AR    REG10,DATALEN           ADD LENGTH OF DATA TO BE OX04245 77070002
*                                      MOVED                    OX04245 77120002
         C     REG10,OBUFEND           IS THERE ROOM FOR THIS   OX04245 77170002
*                                      MOVE?                    OX04245 77220002
         BNL   TRMOV1                  NO,BRANCH TO PROCESS     OX04245 77270002
*                                      PARTIAL ITEM             OX04245 77320002
TRNSREC0 EQU   *                                                OX04245 77330002
         BCTR  DATALEN,REG0            DECRE LENGTH FOR MOVE    OX04245 77370002
         EX    DATALEN,TREXC           EXECUTE THE MOVE         OX04245 77420002
         LR    OBUFPTR,REG10           ADVANCE BUFFER POINTER   OX04245 77430002
         BR    TEMPRTN                 RETURN                   OX04245 77470002
TREXC    EQU   *                                                OX04245 77520002
         MVC   LOC(LOC,OBUFPTR),LOC(MVCPTR) MOVE                OX04245 77570002
*                                      INSTRUCTION FOR EXECUTE  OX04245 77620002
TRMOV1   EQU   *                       NO ROOM - MOVE AS MUCH   OX04245 77670002
*                                      AS POSSIBLE              OX04245 77720002
         L     REG10,OBUFEND           GET POINTER TO BUFF END  OX04245 77770002
         SR    REG10,OBUFPTR           COMPUTE AVAILABLE SPACE  OX04245 77820002
         SR    DATALEN,REG10           COMPUTE LEFTOVER LENGTH  OX04245 77870002
         BCTR  REG10,REG0              DECREMENT LENGTH FOR MOV OX04245 77920002
         EX    REG10,TREXC             MOVE THE PARTIAL LENGTH  OX04245 77970002
         MVI   IDRBYTCT,TRUDMAX        SET BYTE COUNT FOR ONE   OX04245 78020002
*                                      RECORD                   OX04245 78070002
         AR    MVCPTR,REG10            POINT TO NEW DATA START  OX04245 78072002
         LA    MVCPTR,UNIT(MVCPTR)     ADJUST POINTER           OX04245 78074002
         LR    REG10,TEMPRTN           SAVE TEMPRTN             OX04245 78080002
         BAL   TEMPRTN,OUT00990        GO TO WRITE THE RECORD   OX04245 78120002
         LA    OBUFPTR,TRUDATA         GET ADDRESS OF OUTPUT    OX04245 78130002
*                                      BUFFER                   OX04245 78150002
         LR    TEMPRTN,REG10           RESTORE TEMPRTN          OX04245 78160002
         B     TRMOV                   BRANCH TO CONT OUTPUT    OX04245 78170002
LASTRANS EQU   *                       END OF TRANSLATOR IDR    OX04245 78220002
*                                      DATA                     OX04245 78270002
         LA    REG10,IDRBYTCT          GET ADR TO COMPUTE       OX04245 78320002
*                                      BYTE COUNT OF OUTPUT RECORD      78370002
         SR    OBUFPTR,REG10           SUBTRACT START ADR FROM  OX04245 78390002
*                                      CURRENT POINTER          OX04245 78400002
         STC   OBUFPTR,IDRBYTCT        STORE BYTE COUNT         OX04245 78470002
*                                      INTO BUFFER              OX04245 78520002
         LA    WRITECT,UNIT(OBUFPTR)   ADD ONE TO BYTE COUNT    OX04245 78570002
*                                      FOR ACTUAL RECORD LENGTH OX04245 78620002
         B     TRNSDONE                GO TO PROCESS TRANSLATOR  S21016 81130021
*                                      RECORD JUST BUILT AND     S21016 81200021
*                                      USER-DATA IDR'S, IF ANY   S21016 81270021
         SPACE 1                                                 S21016 81340021
*********************************************************************** 81410021
*                                                                     * 81480021
*               PROCESS IDR USER-DATA RECORD(S)                       * 81550021
*                                                              S21016 * 81620021
*********************************************************************** 81690021
         SPACE 1                                                 S21016 81760021
USERREC  BAL   TEMPRTN,OUT00990        GO TO WRITE LAST IDR WITH S21016 81830021
*                                      TRANSLATOR DATA           S21016 81900021
         MVI   SUBTYPE,USERTYPE        MOVE INDICATOR FOR        S21016 81970021
*                                      USER-SUPPLIED DATA TO     S21016 82040021
*                                      IDR SUBTYPE FIELD         S21016 82110021
         LA    WRITECT,TURECLEN        LOAD RECORD LENGTH FOR    S21016 82180021
*                                      WRITE ROUTINE             S21016 82250021
         LR    DATAPTR,TABADD          POINT TO START OF DATA    S21016 82320021
         LR    DATALEN,TABEND          LOAD ENDING ADDRESS OF    S21016 82390021
*                                      DATA IN TABLE             S21016 82460021
         SR    DATALEN,TABADD          SUBTRACT STARTING ADDRESS S21016 82530021
*                                      TO OBTAIN LENGTH OF DATA  S21016 82600021
USERLOOP LA    RECLEN,TRUDLEN          LOAD DATA LENGTH FOR ONE  S21016 82670021
*                                      RECORD                    S21016 82740021
         CR    DATALEN,RECLEN          COMPARE LENGTH OF DATA    S21016 82810021
*                                      TO LENGTH OF 1 RECORD     S21016 82880021
         BNL   USER0020                IF DATA LENGTH IS NOT <   S21016 82950021
*                                      RECORD LENGTH, BRANCH     S21016 83020021
         LR    RECLEN,DATALEN          ELSE, GET DATA LENGTH     S21016 83090021
USER0020 ST    DATAPTR,DPTRSAV         SAVE POINTER TO START OF  S21016 83160021
*                                      DATA                      S21016 83230021
USER0040 CLC   LOC(LEN2,DATAPTR),NULITEM  IS THIS THE START OF   S21016 83300021
*                                      A NULL ITEM?              S21016 83370021
         BE    USER0060                IF SO, GO TO SKIP IT      S21016 83440021
         LA    DATAPTR,UNIT(DATAPTR)   UPDATE BY ONE BYTE        S21016 83510021
         BCT   RECLEN,USER0040         GO TO CONTINUE SCANNING   S21016 83580021
*                                      FOR A NULL ITEM UNTIL THE S21016 83650021
*                                      COUNT IS EXHAUSTED        S21016 83720021
         LA    RECLEN,TRUDLEN          RESTORE NORMAL REC.LENGTH S21016 83790021
         L     DATAPTR,DPTRSAV         RESTORE DATA POINTER      S21016 83860021
         B     USER0100                GO TO PROCESS THE DATA    S21016 83930021
USER0060 ST    DATALEN,DLENSAV         SAVE LENGTH OF DATA       S21016 84000021
         MVC   NULLEN(LEN2),LEN2(DATAPTR)  GET LENGTH OF NULL    S21016 84070021
*                                      ITEM                      S21016 84140021
         LR    DATALEN,DATAPTR         GET STARTING ADDR. OF     S21016 84210021
*                                      NULL ITEM                 S21016 84280021
         S     DATALEN,DPTRSAV         SUBTRACT STARTING ADDR.   S21016 84350021
*                                      OF DATA FOR LENGTH OF     S21016 84420021
*                                      GOOD DATA PRECEEDING THE  S21016 84490021
*                                      NULL ITEM                 S21016 84560021
         LTR   DATALEN,DATALEN         TEST LENGTH OF GOOD DATA  S21016 84630021
         BZ    USER0080                IF ZERO, BRANCH           S21016 84700021
         CH    DATALEN,NULLEN          IS LENGTH OF GOOD DATA >  S21016 84770021
*                                      LENGTH OF NULL ITEM?      S21016 84840021
         BNH   USER0070                IF NOT, BRANCH            S21016 84910021
         OI    TEMPSW,ON               TURN SWITCH TO INDICATE   S21016 84980021
*                                      A TEMPORARY MUST BE USED  S21016 85050021
*                                      TO MOVE DATA              S21016 85120021
USER0070 LR    MVCPTR,DATAPTR          GET STARTING ADDR. OF     S21016 85190021
*                                      NULL ITEM                 S21016 85260021
         AH    MVCPTR,NULLEN           ADD LENGTH OF NULL ITEM   S21016 85330021
*                                      TO POINT TO END OF IT     S21016 85400021
         SR    MVCPTR,DATALEN          SUBTRACT LENGTH OF GOOD   S21016 85470021
*                                      DATA TO DETERMINE ADDR.   S21016 85540021
*                                      GOOD DATA SHOULD GO TO    S21016 85610021
         BCTR  DATALEN,LOC             SUBTRACT 1 FROM LENGTH OF S21016 85680021
*                                      GOOD DATA FOR MOVE        S21016 85750021
         L     DATAPTR,DPTRSAV         POINT BACK TO START OF    S21016 85820021
*                                      GOOD DATA                 S21016 85890021
         TM    TEMPSW,ON               IS TEMPORARY NEEDED FOR   S21016 85960021
*                                      MOVE?                     S21016 86030021
         BNO   USER0075                IF NOT, BRANCH            S21016 86100021
         ST    MVCPTR,MPTRSAV          SAVE POINTER TO MOVE      S21016 86170021
*                                      DESTINATION               S21016 86240021
         LA    MVCPTR,DATATEMP         POINT TO TEMPORARY        S21016 86310021
         EX    DATALEN,DATAMVC         MOVE DATA TO TEMPORARY    S21016 86380021
         LR    DATAPTR,MVCPTR          POINT TO TEMPORARY        S21016 86450021
         L     MVCPTR,MPTRSAV          RESTORE MOVE DESTINATION  S21016 86520021
         NI    TEMPSW,OFF              TURN OFF SWITCH           S21016 86590021
USER0075 EX    DATALEN,DATAMVC         MOVE THE GOOD DATA OVER   S21016 86660021
*                                      THE NULL ITEM             S21016 86730021
USER0080 L     DATALEN,DLENSAV         RESTORE THE LENGTH OF     S21016 86800021
*                                      DATA REMAINING IN TABLE   S21016 86870021
         SH    DATALEN,NULLEN          SUBTRACT LENGTH OF NULL   S21016 86940021
*                                      ITEM JUST OVERWRITTEN     S21016 87010021
         L     DATAPTR,DPTRSAV         RESTORE THE ADDR. OF NEXT S21016 87080021
*                                      DATA TO BE PROCESSED      S21016 87150021
         AH    DATAPTR,NULLEN          ADD LENGTH OF NULL ITEM   S21016 87220021
         B     USERLOOP                GO TO SEE IF THERE ARE    S21016 87290021
*                                      MORE NULL ITEMS           S21016 87360021
USER0100 CR    DATALEN,RECLEN          COMPARE LENGTH OF DATA IN S21016 87430021
*                                      TABLE TO AMOUNT OF DATA   S21016 87500021
*                                      WHICH CAN GO ONTO ONE REC S21016 87570021
         BNH   LASTUSER                IF REMAINING DATA CAN GO  S21016 87640021
*                                      ONTO ONE RECORD, BRANCH   S21016 87710021
         MVI   IDRBYTCT,TRUDMAX        ELSE, SET BYTE COUNT TO   S21016 87780021
*                                      MAX LENGTH FOR ONE REC    S21016 87850021
         MVC   TRUDATA(TRUDLEN),LOC(DATAPTR)  MOVE DATA FROM     S21016 87920021
*                                      TABLE TO FILL ONE RECORD  S21016 87990021
*                                      IN BUFFER                 S21016 88060021
         BAL   TEMPRTN,OUT00990        GO TO WRITE THE RECORD    S21016 88130021
         LA    DATAPTR,TRUDLEN(DATAPTR)  UPDATE POINTER TO DATA  S21016 88200021
*                                      BY AMOUNT JUST WRITTEN    S21016 88270021
         SR    DATALEN,RECLEN          UPDATE LENGTH OF DATA     S21016 88340021
*                                      REMAINING IN TABLE        S21016 88410021
         B     USERLOOP                LOOP TO CONTINUE          S21016 88480021
*                                      PROCESSING THE            S21016 88550021
*                                      REMAINING DATA            S21016 88620021
LASTUSER BCTR  DATALEN,LOC             SUBTRACT ONE FROM DATA    S21016 88690021
*                                      LENGTH FOR ZERO-ORIENTED  S21016 88760021
*                                      MOVE LENGTH               S21016 88830021
         EX    DATALEN,MOVETRUD        EXECUTE MOVE OF REMAINING S21016 88900021
*                                      DATA TO IDR BUFFER        S21016 88970021
         LA    DATALEN,ADDLEN(DATALEN) ADD 3 TO MOVE LENGTH TO   S21016 89040021
*                                      GET CORRECT BYTE COUNT    S21016 89110021
*                                      FOR THIS RECORD           S21016 89180021
         STC   DATALEN,IDRBYTCT        STORE BYTE COUNT INTO     S21016 89250021
*                                      BUFFER                    S21016 89320021
         LA    WRITECT,UNIT(DATALEN)   ADD ONE TO BYTE COUNT FOR S21016 89390021
*                                      ACTUAL RECORD LENGTH      S21016 89460021
         B     USERDONE                GO TO PROCESS LAST REC    S21016 89530021
*                                                                     * 89600021
MOVETRUD MVC   TRUDATA(TRUDLEN),LOC(DATAPTR)                            89650002
MOVEINST MVC   0(1,TEMP2),0(NOTL1ADD)     MOVE NOTE LIST 1 TO NOTE LST2 89670021
ZEROHIID XC    0(1,HIIDTAB),0(HIIDTAB)   ZERO                           89740021
SAVE1415 DC    2F'0'                    SAVE AREA FOR REGS 14 AND 15    89810021
WORD     DC    F'0'                                                     89880021
FOUR     DC    H'4'                                                     89950021
SWITCH   DC    X'00'               SWITCHES AND INCICATORS              90020021
TXTIOLP  EQU   X'80'               TXTIO LOOP INDICATOR                 90090021
*        OTHER BITS OF SWITCH --SPARE                                   90160021
*********************************************************************** 90230021
*********************************************************************** 90300021
TPASSVCN DC    V(HEWLFSCD)              ADDR OF 2ND PASS PROCESSOR      90370021
FNALVCON DC    V(HEWLFFNL)              ADDR OF FINAL  PROCESSOR        90440021
MAPAD    DC    V(HEWLFMAP)             ADDRESS OF MAP PROCESSOR         90510021
DEFADDR  DC    V(HEWLFDEF)             ADDRESS OF MDEF CSECT     S21016 90580021
ADHIID   DC    A(SEGLNTAB)         ADDRESS OF ADDRESS OF TABLE          90650021
DCBINTER DC    AL4(HEWLCUDB)            SYSUT1 DCB                      90720021
SYSMDDCB EQU   *                                                        90790021
DCBLMOD  DC    AL4(HEWLCMDB)            SYSLMOD DCB                     90860021
         SPACE 1                                                 S21016 90930021
******************** IDR DEFINED CONSTANTS **********************S21016 91000021
         SPACE 1                                                 S21016 91070021
IDRZHDR  DC    X'80FA0100'             RECORD HEADER FOR IDR     S21016 91140021
*                                      SPZAP RECORDS             S21016 91210021
ZAPSIZE  DC    F'13'                   SIZE OF AN SPZAP ENTRY    S21016 91280021
LKIDR    DC    X'801102'               LKED IDR HEADER           S21016 91350021
         DC    CL10'5752SC104'         LKED COMP NAME    S21016,ZA01402 91420002
LKRELNO  DS    XL2'2100'               LKED VERSION/MODIFICATION S21016 91490021
*                                      LEVEL (=OS RELEASE LEVEL) S21016 91560021
NULITEM  DC    X'FFFF'                 NULL ITEM INDICATOR        M1602 91630021
DATAMVC  MVC   LOC(LOC,MVCPTR),LOC(DATAPTR)  EXECUTED MOVE       S21016 91700021
TEMPSW   DC    X'00'                   'TEMPORARY NEEDED FOR     S21016 91770021
*                                      MOVE' SWITCH (WHEN LOW    S21016 91840021
*                                      ORDER BIT = 1)            S21016 91910021
         SPACE 1                                                 S21016 91980021
******************** IDR DEFINED STORAGE ********************    S21016 92050021
         SPACE 1                                                 S21016 92120021
IDRBUF   DS    CL256                   IDR BUFFER                S21016 92190021
DATATEMP DS    CL253                   WORK AREA FOR DATA MOVING S21016 92260021
MPTRSAV  DS    F                       SAVEAREA FOR MOVE POINTER S21016 92330021
DPTRSAV  DS    F                       SAVEAREA FOR DATA POINTER S21016 92400021
DLENSAV  DS    F                       SAVEAREA FOR DATA LENGTH  S21016 92470021
TEMPSAVE DS    12F                     TEMPORARY SAVE AREA FOR   S21016 92540021
*                                      IDR OUTPUT SUBROUTINE     S21016 92610021
TIMESAVE DS    F                       SAVE AREA FOR REG 0       S21016 92680021
*                                      FOR TIME MACRO            S21016 92750021
DATESAVE DS    F                       SAVE AREA FOR REG 1       S21016 92820021
*                                      FOR TIME MACRO            S21016 92890021
NULLEN   DS    H                       LENGTH OF A NULL ITEM     S21016 92960021
OBUFEND  DS    F                       SAVEAREA FOR BUFFER END  OX04245 93010002
         SPACE 2                                                 S21016 93030021
*****************************************************************S21016 93100021
**********         SYMBOLIC DISPLACEMENTS WITHIN       **********S21016 93170021
**********          IDR DEFINED STORAGE FIELDS         **********S21016 93240021
*****************************************************************S21016 93310021
         SPACE 2                                                 S21016 93380021
ZAPDATA  EQU   IDRBUF+4                LOCATION IN IDR BUFFER    S21016 93450021
*                                      WHERE SPZAP DATA IS       S21016 93520021
*                                      PLACED                    S21016 93590021
ZAPDAT1  EQU   IDRBUF+5                SECOND BYTE OF SPZAP DATA S21016 93660021
ZAPCNT   EQU   IDRBUF+3                LOCATION OF COUNT FIELD   S21016 93730021
*                                      IN IDR BUFFER FOR SPZAP   S21016 93800021
*                                      DATA                      S21016 93870021
LKDATE   EQU   IDRBUF+15               LOCATION FOR LKED DATE    S21016 93940021
*                                      IN IDR BUFFER             S21016 94010021
DATESAV  EQU   DATESAVE+1              LOCATION OF 1ST BYTE OF   S21016 94080021
*                                      PACKED DECIMAL DATE IN    S21016 94150021
*                                      WORD RETURNED BY TIME     S21016 94220021
*                                      MACRO                     S21016 94290021
SUBTYPE  EQU   IDRBUF+2                LOCATION OF SUBTYPE FIELD S21016 94360021
*                                      IN IDR BUFFER             S21016 94430021
IDRBYTCT EQU   IDRBUF+1                IDR BYTE COUNT FIELD      S21016 94500021
TRUDATA  EQU   IDRBUF+3                STARTING LOCATION OF USER S21016 94570021
*                                      OR TRANSLATOR DATA IN IDR S21016 94640021
*                                      BUFFER                    S21016 94710021
***************** END OF IDR SUPPORT ADDITIONS ***************** S21016 94780021
         SPACE 3                                                 S21016 94850021
PATCH    DC    C'PATCH AREA',43F'0'  *** MAINTENANCE AREA ***           94920037
*                                                                       94990021
*              TEMPORY ERROR PARMS  -  MESSAGE NUMBER IN DECIMAL        95060021
*                                                                       95130021
DISP1    EQU   X'03'                    DISP=0  SEV = 3                 95200021
MESS1    EQU   14                       NO TXT IN LOAD MOD              95270021
         DS    0F                                                       95340021
*                                                                       95410021
ERRPARM1 DC    AL1(DISP1)               NO TXT IN LOAD MODULE           95480021
         DC    AL1(MESS1)                                               95550021
         HEWAPT                                                         95620021
DEFDSECT DSECT                                                          95690021
         DS    CL4                                               S21016 95760021
         DS    AL4                                               S21016 95830021
         DS    AL4                                               S21016 95900021
         DS    AL4                                               S21016 95970021
         DS    CL4                                               S21016 96040021
SGRELNO  DS    CL4                     SYSGEN-ASSIGNED OS        S21016 96110021
*                                      RELEASE NUMBER            S21016 96180021
         END                                                            96250021
./  ADD  SSI=81980176,NAME=HEWLFRAT
         TITLE 'HEWLFRAT   RLD/TXT PROCESSOR'                           00010021
*                 R L D / T X T    P R O C E S S O R                    00020021
         SPACE 2                                                        00030021
*FUNCTION/OPERATION -- THIS MODULE WILL HANDLE TEXT AND RLD RECORDS   * 00040021
*  FROM BOTH LOAD MODULES AND OBJECT MODULES.  IT WILL RECEIVE CONTROL* 00050021
*  FROM THE INPUT PROCESSOR AND WILL PUT ITS OUTPUT ON AN INTERMEDIATE* 00060003
*  FILE FOR USE BY THE SECOND PASS IF THE OUTPUT EXCEEDS THE SPACE    * 00070021
*  AVAILABLE IN THE OUTPUT BUFFER.  IN GENERAL THE RLD/TXT PROCESSOR  * 00080021
*  ORDERS THE INFORMATION FOR THE SECOND PASS PROCESSOR.              * 00090021
*                                                                     * 00100021
*ENTRY POINTS -- CONTROL IS PASSED BY THE INPUT PROCESSOR TO LOCATION * 00110021
*  HEWLFRAT                                                           * 00120021
*                                                                     * 00130021
*INPUT -- THE INPUT PROCESSOR SUPPLIES INFORMATION IN REGISTERS       * 00140021
*  REG 4 (RLD ONLY) -- BYTE COUNT OF RLD INPUT                          00150021
*  REG 6 (RLD ONLY) -- LOCATION IN STORAGE OF RLD INPUT                 00160021
*  REG 3 (TXT ONLY) -- ASSEMBLED ADDRESS OF FIRST BYTE OF TEXT        * 00170021
*  REG 6 (TXT ONLY) -- ID OF THIS TEXT RECORD                         * 00180021
*  REG 8 (TXT ONLY) -- LENGTH OF LOAD MODULE INPUT                      00190021
*                                                                     * 00200021
*OUTPUT -- IF ALL THE OUTPUT INFORMATION CAN BE CONTAINED IN THE OUT- * 00210021
*  PUT BUFFER, IT REMAINS IN STORAGE.  IF IT EXCEEDS THE CAPACITY OF  * 00220021
*  THE BUFFER ALL OF THE INFORMATION IS WRITTEN OUT ON AN INTERMEDIATE* 00230021
*  FILE.                                                              * 00240021
*                                                                     * 00250021
*EXTERNAL ROUTINES.                                                   * 00260021
*  ERROR DIAGNOSTIC ROUTINE -- OUTPUTS ERROR MESSAGES                 * 00270021
*  ESD PROCESSOR -- PLACES ENTRIES IN DELINK TABLE                    * 00280021
*                                                                     * 00290021
*EXITS                                                                * 00300021
*  NORMAL -- RETURN TO INPUT PROCESSOR                                * 00310021
*  ERRORS -- INTERNAL TABLES MAY OVERFLOW                             * 00320021
*     A)  CALLS LIST -- TOO MANY CALLS IN OVERLAY STRUCTURE           * 00330021
*     B)  RLD NOTE LIST -- TOO MANY CONTROL SECTIONS THAT CONTAIN RLD * 00340021
*           ITEMS                                                     * 00350021
*     C)  TEXT NOTE LIST -- TOO MANY CONTROL SECTIONS THAT CONTAIN    * 00360021
*           TEXT OR THERE ARE EXCESSIVE RE-ORIGINS WITHIN THE INPUT   * 00370021
*     D)  TEXT ID IS ILLEGAL.  TEXT RECORD IS IGNORED.                * 00380021
*                                                                     * 00390021
*TABLES                                                               * 00400021
*  THE FOLLOWING TABLES IN THE ALL PURPOSE TABLE ARE USED --          * 00410021
*                                                                     * 00420021
*     CALLS LIST-IN OVERLAY, LIST OF CALLS TO OTHER CONTROL SECTIONS, * 00430021
*        USED IN CREATION OF ENTABS                                   * 00440021
*                                                                     * 00450021
*     COMPOSITE ESD - USED TO GET ASSEMBLED ADDRESS OF CONTROL SECTION* 00460021
*                                                                     * 00470021
*     RENUMBERING TABLE -- USED TO RENUMBER RLD AND TEXT ITEMS        * 00480021
*                                                                     * 00490021
*  TEXT I/O TABLE -- 4 BYTES PER ENTRY                                * 00510021
*                                                                     * 00520021
*        *************************                                    * 00530021
*        *           *           *                                    * 00540021
*        *     ID    * FLG--MULT *                                    * 00550021
*        *           *           *                                    * 00560021
*        *************************                                    * 00570021
*        '           '           '                                    * 00580021
*        '  2 BYTES  '  2 BYTES  '                                    * 00590021
*        '           '           '                                    * 00600021
*                                                                     * 00610021
*  FOR EACH CHANGE, IN THE INPUT STREAM, OF AN ID OR A MULTIPLICITY,  * 00620021
*  AN ENTRY IS MADE IN THE TEXT I-O TABLE.  THE 'ID' IS THE ID OF A   * 00630021
*  TXT RECORD.  THE 'MULTIPLICITY' IS CALCULATED FOR EACH TEXT RECORD * 00640021
*  THAT IS PRESENTED.  A CHANGE IN MULTIPLICITY WILL OCCUR --         * 00650021
*    1) FOR EACH TEXT RECORD THAT IS A MULTIPLE OF UT1SIZE.           * 00660021
*      (UT1SIZE IS THE SIZE OF THE TEXT BUFFER AND THE MAXIMUM SIZE   * 00670021
*      OF A TEXT RECORD FROM A LOAD MODULE)                           * 00680021
*    2) FOR EACH RE-ORIGIN OF TEXT WITHIN A CONTROL SECTION (THE CON- * 00690021
*      TROL SECTION BEING GREATER THAN UT1SIZE).                      * 00700021
*                                                                     * 00710021
*  TEXT NOTE LIST -- 7 BYTES PER ENTRY                                * 00720021
*                                                                     * 00730021
*  THERE IS A ONE-TO-ONE CORRESPONDENCE BETWEEN THE TEXT I-O TABLE    * 00740021
*  AND THE TEXT NOTE LIST.  THE 'NTH' ENTRY OF THE TEXT I-O TABLE     * 00750021
*  REFERS TO THE 'NTH' RECORD OF THE TEXT NOTE LIST.  THE NOTE LIST   * 00760021
*  RELATES WHERE THE TEXT RECORD HAS BEEN WRITTEN ON THE DISK THROUGH * 00770021
*  THE 3 BYTE TTR ENTRY.  IF THE INPUT DECK HAS BEEN SHUFFLED OR IF   * 00780021
*  THERE ARE RE-ORIGINS WITHIN THE CONTROL SECTION (REPRESENTED BY    * 00790021
*  THE ID IN THE TXT I/O TABLE) THEN THE CONTROL SECTION CAN NOT BE   * 00800021
*  GATHERED AT ONE TIME.  THEREFORE, 'PIECES' OF TEXT WHICH ARE CALLED* 00810021
*  'DENSE' RECORDS ARE PLACED ON THE INTERMEDIATE FILE.  THE 2 BYTE   * 00820021
*  RELATIVE ADDRESS (OFFSET) DEFINES WHERE THIS 'PIECE' OF TEXT OCCURS* 00830021
*  WITHIN THE TEXT BUFFER.  THE SECOND PASS PROCESSOR WILL GATHER ALL * 00840021
*  THE 'PIECES' FOR EACH CONTROL SECTION AND MERGE THEM.              * 00850021
*                                                                     * 00860021
*        *******************************************                  * 00870021
*        *            *                *           *                  * 00880021
*        *   OFFSET   *  TTR/STG ADDR  *  LENGTH   *                  * 00890021
*        *            *                *           *                  * 00900021
*        *******************************************                  * 00910021
*        '            '                '           '                  * 00920021
*        '  2 BYTES   '    3 BYTES     '  2 BYTES  '                  * 00930021
*        '            '                '           '                  * 00940021
*                                                                     * 00950021
*                                                                     * 00960021
*                                                                     * 00970021
*                                                                     * 00990021
*  TEXT I/O CONTROL TABLE -- 4 BYTES PER ENTRY                        * 01000021
*                                                                     * 01010021
*  TO SAVE SPACE THE TEXT NOTE LIST IS NOT KEPT 'COMPLETELY' IN CORE. * 01020021
*  INSTEAD, WHEN IT REACHES A MAXIMUM VALUE, IT IS WRITTEN ON AN      * 01030021
*  INTERMEDIATE FILE AND THE RESULTANT TTR IS PLACED IN THE TEXT I/O  * 01040021
*  CONTROL TABLE.                                                     * 01050021
*                                                                     * 01060021
*                                                                     * 01070021
*        ************************                                     * 01080021
*        *      *               *                                     * 01090021
*        *   0  *      TTR      *                                     * 01100021
*        *      *               *                                     * 01110021
*        ************************                                     * 01120021
*        '      '               '                                     * 01130021
*        '   1  '               '                                     * 01140021
*        ' BYTE '    3 BYTES    '                                     * 01150021
*        '      '               '                                     * 01160021
*                                                                     * 01170021
*                                                                     * 01180021
*                                                                     * 01190021
*                                                                     * 01200021
*  RLD NOTE LIST -- 9 BYTES PER ENTRY                                 * 01210021
*                                                                     * 01220021
*        ****************************************************         * 01230021
*        *1.         *2.         *3.         *4.            *         * 01240021
*        *     ID    * FLG--MULT *  LENGTH   * TTR/ACCM LNG *         * 01250021
*        *           *           *           *              *         * 01260021
*        ****************************************************         * 01270021
*        '           '           '           '              '         * 01280021
*        '  2 BYTES  '  2 BYTES  '  2 BYTES  '   3 BYTES    '         * 01290021
*        '           '           '           '              '         * 01300021
*                                                                     * 01310021
*  1. THE ID IS THE ID OF THE CONTROL SECTION IN WHICH THE RLD ITEMS  * 01320021
*     OCCUR                                                           * 01330021
*  2. THE LOWEST MULTIPLICITY OF AN ADDRESS FIELD, OF AN RLD ITEM IN  * 01340021
*     THIS RLD RECORD, IS STORED HERE.                                * 01350021
*  3. THE NUMBER OF BYTES IN THE RLD RECORD IS DIVIDED BY 4 AND SAVED * 01360021
*     IN THIS TWO BYTE ENTRY.  (WORD COUNT)                           * 01370021
*  4. THE ACCUMULATED WORD COUNT OF GROUPED ENTRIES IS SAVED HERE,    * 01380021
*     EXCEPT WHEN IT IS IN THE LAST ENTRY OF A RECORD WRITTEN OUT ON  * 01390021
*     THE INTERMEDIATE DATA SET.  THEN IT HOLDS THE TTR OF THE RECORD.* 01400021
*                                                                     * 01410021
*                                                                     * 01430021
*                                                                     * 01440021
*  THE RLD I/O CONTROL TABLE - 4 BYTES PER ENTRY                      * 01450021
*                                                                     * 01460021
*  TO SAVE SPACE THE RLD NOTE LIST IS NOT KEPT 'COMPLETELY' IN CORE.  * 01470021
*  INSTEAD, WHEN IT REACHES A MAXIMUM VALUE, IT IS WRITTEN ON AN      * 01480021
*  INTERMEDIATE DATA SET AND THE RESULTANT TTR IS PLACED IN THE RLD   * 01490021
*  I/O CONTROL TABLE.                                                 * 01500021
*                                                                     * 01510021
*        ************************                                     * 01520021
*        *      *               *                                     * 01530021
*        *   0  *      TTR      *                                     * 01540021
*        *      *               *                                     * 01550021
*        ************************                                     * 01560021
*        '      '               '                                     * 01570021
*        '   1  '               '                                     * 01580021
*        ' BYTE '    3 BYTES    '                                     * 01590021
*        '      '               '                                     * 01600021
*                                                                     * 01610021
*                                                                     * 01620021
*                                                                     * 01630021
*                                                                     * 01640021
*ATTRIBUTES                                                           * 01650021
*  1) REUSABLE                                                        * 01660021
*                                                                     * 01670021
*NOTES -- SPECIAL TEXT....... SET ON WITH 'SPTXTON' AND TESTED        * 01680037
* JUST AFTER LABEL TXT002X.  THIS IS USED FOR TWO CASES.......        * 01684037
* 1) LARGE DS AREAS WITHIN A CSECT WHICH CAUSE THE FOLLOWING          * 01688037
* TEXT TO USE AN ADDITIONAL MULTIPLICITY WHIC CANNOT BE NOTED         * 01692037
* ANY OTHER WAY...                                                    * 01696037
* 2) A CSECT WITHIN A LOAD MODULE STARTING WITH A LARGE DS AREA         01700037
* FOLLOWED BY CODE WHICH WILL USE AN ADDITIONAL MULTIPLICITY            01704037
* WHICH CANNOT BE NOTED ANY OTHER WAY....                               01708037
* ...WITHOUT THIS CODE THE MODULE CREATED WILL LOSE SOME TEXT           01712037
* WHICH IS LOCATED INTO THE NEXT MULTIPLICITY OR BUFFER......           01716037
*    *    *    *    *    *    *    *    *    *    *    *    *    *    * 01730021
*                                                                     * 01740021
*    *    *    *    *    *    *    *    *    *    *    *    *    *    * 01750021
         SPACE 2                                                        01760021
     TITLE  'HEWLFRAT   RLD/TXT PROCESSOR  --  RLD EQUIVALENCIES'       01770021
HEWLFRAT CSECT                 ENTRY POINT                              01780021
*                                                                       01790021
*217900-218300,219500-221100,359100-359500,360700-362300         S01904 01800021
*367500-369500,372300-374300,543900-545500,602700-603100         S01904 01810021
*604300-611100,613100-621500,721100-729500,826700-828700         S01904 01820021
*831100-831900                                                   S01904 01830021
*C244620,A244620                                                 A49482 01832000
*C217500                                                         A52402 01834000
*A162700,A182700,A448700                                         A53300 01836000
*C367900,C368700,A372700,A831500,C834700,A953100                OX00029 01838000
*C162900,C182900                                                 XM1384 01838402
*A244480-244632                                                 OY00137 01838802
*C059100                                                        OY00131 01839201
*A484400-484500,C507500,A517200-517300,A747920,A817600-817860   OY00356 01839601
*C817900,D818300,C818700,C943900-9466400                        OY00356 01839701
*I302300,I350300,C352700                                OX03655,OY03146 01847202
*I360300,I361900                                        OX03721,OY03423 01849202
*I509500,I655900,I656300                                OX04241,OY03414 01851202
*C541811,I557500,C766100                                        XA05128 01853203
* SEE FIX FOR XA05128                                           YA03165 01853603
*I183100,I447100                                                XA04649 01854003
* SEE FIX FOR XA04649                                           YA03751 01854403
*I350400,C352700                                                XA05742 01854803
* SEE FIX FOR XA05742                                           YA04541 01854903
*I509500,I655900,I656300                                        XA05743 01865903
* SEE FIX FOR XA05743                                           YA04540 01875903
*I360300,C360700,I361900                                        YA05040 01876303
* SEE FIX FOR YA05040                                           XA05444 01876703
*I365600-366132,I413200-413300                                  XA05132 01876803
* SEE FIX FOR XA05132                                           YA04538 01876903
*C611500-612700,D629500,D631100,C631500,I632700                 XA05445 01880603
*D640300-640700,C642700,C643500                                 XA05445 01882603
* SEE FIX FOR XA05445                                           YA04542 01883003
* SEE FIX FOR XA05445                                           ZA00715 01883403
*I187500,I188300                                                XA05656 01883803
* SEE FIX FOR XA05656                                   ZA00717,YA04545 01884203
*A612600,A612900,I628700                                        XM08070 01889903
*A644700                                                        XM09517 01890303
*A612900,A621500,D629900,I611600                                XM09521 01890703
*I825600-826132,D097500,I097100,D486700-501100  ZA00723,YA04548,XA06144 01897603
* C503100-503900,C505100-505500,I514700,I518700                 ZA01405 01899602
* C528300-528700,D604700-606700,D608300-610700                  ZA01405 01900002
* D615100-617100,D618700-621100,I630700,I631500,I670700         ZA01405 01900402
* I685500,I705100,I713500,I715900,D723100-725100                ZA01405 01900502
* D726700-729100,I735500,D837100,I842300,C917900                ZA01405 01900602
* D612700                                                       ZA01409 01908802
* C059100                                                      @XA11151 01910837
* C603500,C614300,C722300                                      @ZA07602 01912837
* C9815000,A9816200-98121000 OZ28721 SYSRTE FROM OY19267       @ZA28721 01913837
* A098179-098180,C098184-098185                                @ZA33611 01914437
*                                                                       01915837
         EJECT                                                          01927837
         SPACE 1                                                        01933602
         EXTRN HEWLCUDB                                                 01941802
         SPACE 2                                                        01950021
*                  MASKS, FLAGS, OFFSETS AND VALUES                     01990021
         SPACE 2                                                        02030021
*                       FOR ALL PURPOSE TABLE                           02070021
         SPACE 1                                                        02110021
EOD      EQU   X'01'     END-OF-DATA FLAG IN NEWSW                      02150021
RT       EQU   X'02'     TEXT FLAG IN APT0  (RLD/TEXT)                  02190021
DEL      EQU   X'10'     DELETE FLAG IN APT1                            02230021
EX       EQU   X'20'     LOAD MODULE FLAG IN APT1  (LD MOD/OBJ MOD)     02270021
OI       EQU   X'20'     OVERLAY FLAG IN PDSE7                          02310021
TUPAS    EQU   X'20'     2 PASS OPERATION IS CURRENT                    02350021
DELOFF   EQU   X'EF'     MASK OUT DELETE FLAG IN APT1                   02390021
ANY      EQU   X'EF'     FLAGS FOR ANY RLD ATTRIBUTES IN PDSE8          02430021
         SPACE 2                                                        02470021
*                       FOR RENUMBERING TABLE                           02510021
         SPACE 1                                                        02550021
DID      EQU   0         OFFSET FOR 'R' ID                              02590021
DF       EQU   2         OFFSET FOR FLAG IN RNT                         02630021
DT       EQU   3         OFFSET FOR TYPE IN RNT                         02670021
DSAV     EQU   X'04'     DELINK VALUE SAVED FLAG IN RNT                 02710021
CH       EQU   X'40'     CHAINED FLAG FOR TYPE IN RNT                   02750021
         SPACE 2                                                        02790021
*                             FOR DCB                                   02830021
         SPACE 1                                                        02870021
PHL      EQU   0         INITIAL DATA COUNT                             02910021
PHADD    EQU   0         INITIAL DATA AREA LOCATION                     02950021
LENGTH   EQU   6         OFFSET FOR DATA COUNT                          02990021
ADD      EQU   12        OFFSET FOR DATA AREA LOCATION                  03030021
DCBOPN   EQU   X'10'     SUCCESSFUL OPEN                                03070021
OPNFLGS  EQU   48        OPEN FLAGS IN DCB                              03110021
         SPACE  2                                                       03150021
*                           FOR RLD ITEM                                03190021
         SPACE 1                                                        03230021
CONT     EQU   1         CONTINUATION FLAG IN FA                        03270021
RELOFF   EQU   X'7F'     MASK OUT RELATIVE FLAG                         03310021
NREL     EQU   X'80'     NONRELATIVE FLAG IN 'R' POINTER                03350021
REL      EQU   X'80'     RELATIVE FLAG IN FA FIELD                      03390021
CONTN    EQU   X'FE'     CONTINUATION FLAG IN FA MASK OUT               03430021
ANYR     EQU   X'F0'     ANY TYPE FLAGS IN FA                           03470021
*                            FOR MODULE                                 03550021
         SPACE 1                                                        03590021
BUFFRN2  EQU   X'01'     BUFFER 2 IS CURRENT                            03630021
BUFF1    EQU   X'02'     BUFFER 1 FULL                                  03670021
FNLCHK   EQU   X'02'     FINAL CHECK AT EOD                             03710021
CHKNOW   EQU   X'04'     CHECK LAST WRITE NOW                           03750021
BUFF2    EQU   X'04'     BUFFER 2 FULL                                  03790021
FULL2    EQU   X'06'     BUFFERS 1 AND 2 BOTH FULL                      03830021
BUFW1    EQU   X'08'     BUFFER 1 WRITTEN                               03870021
PURGE    EQU   X'08'     PURGE FLAG                                     03910021
BUFW2    EQU   X'10'     BUFFER 2 WRITTEN                               03950021
RNBUF2   EQU   X'10'     RLD'S-IN-BUFFER-2 FLAG                         03990021
NLFULL   EQU   X'10'     NOTE LIST FULL FLAG                            04030021
MCT      EQU   12        MAX SIZE FOR RLD/TXT I/O CONTROL TABLE         04070021
CKNNLF   EQU   X'14'     CHECK NOW AND NOTE LIST FULL                   04110021
WRIT2    EQU   X'18'     BUFFERS 1 AND 2 BOTH WRITTEN                   04150021
FULLR    EQU   X'20'     RLD I/O CONTROL TABLE FULL FLAG                04190021
BUF1CHK  EQU   X'20'     BUFFER 1 CHECKED FLAG                          04230021
BUF2CHK  EQU   X'40'     BUFFER 2 CHECKED FLAG                          04270021
NOPNR1   EQU   X'7F'     BUFFER 1 OPENER FLAG MASK OUT                  04310021
CONTOVN  EQU   X'7F'     CONTINUATION OVERFLOW FLAG MASK OUT            04350021
CONTOV   EQU   X'80'     CONTINUATION OVERFLOW FLAG                     04390021
OPNR1    EQU   X'80'     BUFFER 1 OPENER FLAG                           04430021
OP1BF2   EQU   X'81'     OPENER 1 AND BUFFER 2 NOW FLAGS                04470021
NBUF2CHK EQU   X'BF'     BUFFER 2 CHECKED FLAG MASK OUT                 04510021
NBUF1CHK EQU   X'DF'     BUFFER 1 CHECKED FLAG MASK OUT                 04550021
N2BUFWF  EQU   X'E1'     BOTH BUFFERS FULL AND WRITTEN FLAGS MASK OUT   04590021
NBUF2WF  EQU   X'EB'     BUFFER 2 FULL-WRITTEN FLAGS MASK OUT           04630021
NLFLCHKN EQU   X'EB'     NOTE LIST FULL + CHK NOW FLAGS MASK OUT        04670021
NBUFW2   EQU   X'EF'     BUFFER 2 WRITTEN FLAG MASK OUT                 04710021
RNBUF1   EQU   X'EF'     RLD'S-IN-BUFFER-1 MASK                         04750021
NBUF1WF  EQU   X'F5'     BUFFER 1 FULL-WRITTEN FLAGS MASK OUT           04790021
NBUFW1   EQU   X'F7'     BUFFER 1 WRITTEN FLAG MASK OUT                 04830021
NPURGE   EQU   X'F7'     PURGE FLAG MASK OUT                            04870021
NCHKNOW  EQU   X'FB'     CHECK NOW FLAG MASK OUT                        04910021
NBUFF2   EQU   X'FB'     BUFFER 2 FULL FLAG MASK OUT                    04950021
NBUFF1   EQU   X'FD'     BUFFER 1 FULL FLAG MASK OUT                    04990021
NFNLCHK  EQU   X'FD'     FINAL CHECK FLAG MASK OUT                      05030021
BUFLIP   EQU   X'FE'     EXTRACT CURRENT BUFFER FLAG MASK               05070021
BUFFRN1  EQU   X'FE'     BUFFER 1 CURRENT MASK                          05110021
STMULT   EQU   X'02'               FOR MAXIMUM STRING                   05150021
STMULT1  EQU   X'00'                  MULTIPLICITY                      05190021
*                           FOR NOTE LIST                               05270021
         SPACE 1                                                        05310021
NFLGS    EQU   X'03'     NO FLAGS MASK                                  05350021
BUFN2    EQU   X'10'     BUFFER 2 HOLDS CURRENT RLD'S                   05390021
TTRF     EQU   X'40'     TTR IS PRESENT/END-OF-BUFFER                   05430021
NICF     EQU   X'6F'     RLD'S NOT-IN-CORE MASK                         05470021
INCF     EQU   X'80'     RLD'S IN-CORE FLAG                             05510021
GPF      EQU   X'BF'     SET GROUP FLAG MASK                            05550021
FLGS     EQU   X'FC'     ALL FLAGS MASK                                 05590021
XPDIND   EQU   X'80'                   EXPAND REQUEST SWITCH     Y01031 05600000
*                                      (IN APTSW3; ONE=ACTIVE)   Y01031 05610000
         SPACE 2                                                        05630021
*                             FOR CESD                                  05670021
         SPACE 1                                                        05710021
DSAVOF   EQU   X'EF'     MASK OUT DELETE FLAG IN CESD                   05750021
         SPACE 2                                                        05790021
******** ERROR MSG **************************************************** 05830037
MSG      EQU   0       ALSO SEE IEW0284/IEW0222/IEW0614                 05860037
IEW0234  EQU   X'417'  LOAD MODULE SOURCE ERROR        OY00131,@XA11151 05880037
IEW0354  EQU   X'423'  CALLS LIST OVERFLOW                              05900037
IEW0622  EQU   X'023E'                                                  05920037
IEW0374  EQU   X'425'  RLD I/O CONTROL TABLE OVERFLOW                   05940037
IEW0382  EQU   X'226'                                                   05960037
IEW0364  EQU   X'424'                                                   05980037
*********************************************************************** 06040037
*                       REGISTER ASSIGNMENTS                            06070021
         SPACE 1                                                        06110021
R0       EQU   0         SAVE/RESTORE, ERROR CODE, WORK REG             06150021
GR1      EQU   1         CESD ID, LINK THROUGH MULTDET, RESULTANT TTR   06190021
XS3      EQU   1         'R' ID                                         06230021
XAPT     EQU   2         POINTER TO APT                                 06270021
XRMK2    EQU   3         BYTE CT OF PROCESSED ENTRIES IN RLD I/O CTL TB 06310021
XAA      EQU   3         CURRENT LOC IN TEXT BUFFER                     06350021
GR3      EQU   3         POINTER TO CESD, ASSEMBLED ADDR IN FA          06390021
XJM1     EQU   4         INPUT REC BYTE CT, TEXT OUTPUT BUFFER BYTE CT  06430021
XPSAV    EQU   4         'P' ID, POINTER TO ID IN RNT                   06470021
GR4      EQU   4         START OF RLD STRING, DIVISION WORK REG         06510021
GR5      EQU   5         START RNT, DIVISION WORK REG                   06550021
XRET2    EQU   5         LINK THROUGH WRITE ROUTINE                     06590021
XPRLD    EQU   6         ORIGINAL POINTER TO START OF RLD STRING,       06630021
*                            CURRENT FA POINTER                         06670021
XBCNT    EQU   7         BYTE COUNT OF PROCESSED ITEMS                  06710021
XIBCNT   EQU   8         RLD STRING BYTE COUNT                          06750021
XRET     EQU   9         LINK THROUGH BUFFERING ROUTINE                 06790021
GR9      EQU   9         CURRENT RNT ENTRY POINTER                      06830021
XOBCNT   EQU   10        BYTE COUNT OF ITEMS IN RLD BUFFER              06870021
XDCB     EQU   10        POINTER TO SYSUT1 DCB                          06910021
XSTR     EQU   11        POINTER TO START OF RLD STRING                 06950021
RBASE    EQU   12        MODULE BASE REGISTER                           06990021
GR13     EQU   13        BASE REGISTER FOR MODULE SAVE AREA, POINTER    07030021
*                            TO CURRENT CESD ENTRY                      07070021
R14      EQU   14        RETURN LINK, WRITE DATA LENGTH                 07110021
XS1      EQU   14        POINTER TO CURRENT DELINK ENTRY, TO CURRENT    07150021
*                            CALLS LIST ENTRY, TO CURRENT CESD ENTRY,   07190021
*                            TEXT NOTE LIST OFFSET                      07230021
XS2      EQU   15        POINTER TO CURRENT RLD BUFFER ENTRY,           07270021
*                            TO CURRENT TEXT NOTE LIST ENTRY, TO        07310021
*                            CURRENT TEXT BUFFER ENTRY, WORK REG        07350021
R15      EQU   15        BRANCH ADDRESS, WRITE DATA LOC, CURRENT LOAD   07390021
*                            MODULE BUFFER ENTRY, WORK REG              07430021
XRIO     EQU   15        CURRENT RLD NOTE LIST ENTRY POINTER            07470021
WRKREG0  EQU   0                   WORK REGISTER 0                      07510021
WRKREGF  EQU   15                  WORK REGISTER 15                     07550021
RETURN   EQU   14                  RETURN REGISTER                      07590021
BRANCH   EQU   15                  BRANCH REGISTER                      07630021
         TITLE 'HEWLFRAT   RLD/TXT PROCESSOR  --  ENTRY AND EXIT'       07670021
*                           R L D / T X T                               07710021
*              C O M M O N   E N T R Y   AND   E X I T                  07750021
*                              ROUTINE                                  07790021
         SPACE 2                                                        07830021
*     THIS ROUTINE RECEIVES CONTROL FROM THE INPUT PROCESSOR.  IT SAVES 07870021
*  THE RETURN ADDRESS, DIFERENTIATES BETWEEN RLD AND TEXT MATERIAL, AND 07910021
*  PASSES CONTROL TO THE PROPER PROCESSING ROUTINE.  AT THE CONCLUSION  07950021
*  OF THIS PROCESSING, IT RE-ESTABLISHES THE RETURN ADDRESS AND RETURNS 07990021
*  CONTROL THERETO.                                                     08030021
*     EVENT SEQUENCE FOR ENTRY --                                       08070021
*        ESTABLISH BASE REGISTER FOR COMMON ROUTINES AND RLD PROCESSOR. 08110021
*        SAVE RETURN ADDRESS.                                           08150021
*        LOAD REMAINING BUFFERRED BYTE COUNT                            08190021
*        PROCEED TO PURGE RLD AND TEXT BUFFERS IF ENTRY IS FROM         08230021
*           END-OF-DATA.                                                08270021
*        DIRECT CONTROL TO EITHER THE RLD OR TEXT PROCESSING ROUTINE.   08310021
*        RELINQUISH CONTROL TO ERROR ROUTINE IF INPUT LENGTH IS         08350021
*           GREATER THAN MAXIMUM.                                       08390021
*        CLEAR STRING COUNT AND SAVE INPUT BYTE COUNT FOR RLD           08430021
*           PROCESSING ROUTINE.                                         08470021
*     EVENT SEQUENCE FOR PURGE/EXIT --                                  08510021
*        PURGE --                                                       08550021
*           CLEAR STRING COUNT ACCUMULATOR                              08590021
*           LINK TO RLD PURGE ROUTINE.                                  08630021
*           LINK TO TEXT PURGE ROUTINE.                                 08670021
*        EXIT --                                                        08710021
*           SAVE RLD BUFFERRED BYTE COUNT (RLD RETURN).                 08750021
*           LOAD RETURN ADDRESS (TEXT RETURN).                          08790021
*           RETURN TO CALLER.                                           08830021
         SPACE 2                                                        08870021
*HEWLFRAT  CSECT               ENTRY POINT AND NAME                     08910021
         BALR  RBASE,R0        L BASE REGISTER                          08950021
RATLOC   EQU   *               DEFINE BASE LOCATION                     08990021
         USING *,RBASE         DEFINE BASE REGISTER                     09030021
         USING APTDSECT,XAPT                                            09070021
         B     OVERNAME        SKIP IDENTITY                            09110037
DATE     DC    C' 06/15/78 OZ33611 ' DATE/APAR NUMBER                   09130037
MODID1   DC    C' HEWLFRAT ',0H'0'   MOD ID                             09170037
OVERNAME L     XBCNT,TXT001AD  L BASE REGISTER FOR TEXT PROCESSING RTN  09210037
         USING HEWLFTXT,XBCNT  DEFINE BASE REGISTER FOR TEXT PROCESSOR  09230021
         ST    R14,INADD1      SAVE CALLER RETURN ADDRESS               09270021
         LH    XOBCNT,OBCNT    L REMAINING BUFFERRED COUNT              09310021
         TM    NEWSW,EOD       CHK FOR END-OF-DATA                      09350021
         BC    7,ECPRG         BC IF YES TO PURGE ROUTINES              09390021
         LTR   XJM1,XJM1       NO -- CHK IF INPUT BYTE COUNT IS ZERO    09430021
         BC    8,TXTRET        IGNORE ZERO LENGTH TXT OR RLD INPUT      09470021
         TM    APT0,RT         CHK IF RLD OR TEXT                       09510021
         BC    8,RATIN         BC IF RLD                                09550021
         L     XS2,TXTBFEND    L LOC OF END OF TEXT BUFFER              09590021
         S     XS2,TXTBFBEG    LESS LOC OF START OF TEXT BUFFER         09630021
         CR    XJM1,XS2        CHK IF INPUT GREATER THAN SPAN           09670021
         BC    2,ERR3        INPUT RECORD LARGER THAN TXTBUFFER         09710021
         TM    APT1,EX         IS IT A LOAD MODULE?                     09720003
         BO    TXTLM           BRANCH IS YES                            09730003
TXT0011  LTR   RID,RID         IS TXT ID EQUAL ZERO?                    09740003
         BC    8,TXTILL        YES, ERROR COND                          09742003
         CH    RID,ENCDX       TXT ID G.T. NUMBER OF ESD ITEMS          09744003
         BH    TXTILL          YES, ERROR COND                          09746003
         TM    APTSW3,XPDIND   EXPAND REQUEST?                   Y01031 09748003
         BO    TXT0151X        IF SO BRANCH                      Y01031 09748403
         SLL   RID,2           CALCULATE RENUMBER LINE                  09748803
         A     RID,RECNT       ENTRY                                    09749203
         CLC   DID(2,RID),CONZO1 IS RENUMBERED ID EQU ZERO              09749603
         BE    TXTILL          YES, ERROR COND                          09749703
         TM    DT(RID),DEL     IS THIS ID TO BE DELETED                 09749803
         BO    TXTLM2          BRANCH IF SO                             09749903
         TM    DT(RID),DT      TYPE NOT SD OR PC - INVALID              09763203
         BZ    TXT00151                                                 09773203
*   IF ERROR BRANCH IS TAKEN, MODULE MARKED NOT                         09775203
*   EXECUTABLE UNLESS 'LET' IS SPECIFIED                                09775603
TXTILL   LA    MSG,IEW0382                                              09776037
         TM    APT1,EX         IS IT A LOAD MODULE?              A43127 09776403
         BO    ERR3A           YES,ISSUE MSG AND FLUSH NEXT REC  A43127 09776503
         B     ERROR                                                    09776603
TXT00151 LH    RID,DID(RID)    RID=NEW UPDATED ID                       09781003
TXT0151X LR    XS1,RID         XS1=NEW UPDATED ID                Y01031 09783003
         STH   XS1,CURID                                                09785003
*DETERMINE MULTIPLICITY AND CHECK FOR '512' MAXIMUM                     09785403
         SLL   XS1,4                                                    09785503
         A     XS1,CHESD       XS1=ABSOLUTE ADDR OF ENT. IN CESD        09796603
         L     XS1,8(XS1)      XS1=TYPE AND ASSEMBLED ADDRESS           09806603
         LA    XS1,0(XS1)      XS1=ASSEMBLED ADDR. OF CONTROL SECTION   09807003
         TM    APTSW3,XPDIND   EXPAND REQUESTED?                 Y01031 09807403
         BO    TXT0152X        IF SO BRANCH                      Y01031 09807503
         SR    XAA,XS1         ASSM ADDR NOW RELATIVE TO ZERO           09807603
TXT0152X LR    GR9,XAA                                           Y01031 09807703
         SR    GR8,GR8         DIVIDE BY SYSLMOD SIZE TO                09811403
         D     GR8,MULTSIZE    DETER. MULTIPLICITY AND DISPLACEMENT     09813403
         STH   GR9,CMULN                                                09813803
         STH   GR8,CDISP                                                09814203
         CH    GR9,MAXMULT     BRANCH IF WE HAVE NOT EXCEEDED           09814603
         BL    SPLTXT1         THE NUMBER OF MULTIPLICITIES    @ZA28721 09815037
         LA    MSG,IEW0364     INPUT HAS EXCEEDED MULT LIMIT            09815437
         B     ERROR                                                    09815837
*                                                                       09816237
* SPECIAL TEXT IS SET ON IF THIS IS THE FIRST TEXT RECORD               09816337
* OF A CSECT IN A LOAD MODULE AND A LARGE DEFINE STORAGE                09816437
* IS THE FIRST THING IN THE CSECT AND THE DS AREA CROSSES               09816537
* A MULTIPLICITY.                                                       09816637
*                                                                       09816737
SPLTXT1  EQU *                                                 @ZA28721 09816837
         LTR   XAA,XAA         TST FOR REMAINDER               @ZA28721 09816937
         BC    8,TXTINT        BR IF ZERO                      @ZA28721 09817337
         TM    APT1,EX         IS IT A LOAD MODULE?            @ZA28721 09817437
         BNO   TXTINT          BYPASS IF NOT                   @ZA28721 09817837
         CLC   PID(2),CURID    CURRENT ID A REPEAT?            @ZA33611 09817937
         BE    TXTINT          BRANCH IF YES                   @ZA33611 09818037
         TM    APTSW3,XPDIND   EXPAND REQUESTED?               @ZA28721 09818137
         BO    TXTINT          BYPASS IF EXPAND REQUESTED      @ZA28721 09818237
         SR    GR9,GR9         CLEAR REG 9                     @ZA28721 09818337
         AR    GR9,COUNT       ADD THE RECORD COUNT  TO  THE   @ZA33611 09818437
         AH    GR9,CDISP       DISPLACEMENT OF THE FIRST TXT   @ZA33611 09818537
         C     GR9,MULTSIZE    AND TEST IF IT CROSSES TO NXT   @ZA28721 09819437
         BNH   TXTINT          MULTIPLICITY,BR IF IT DOESN'T!  @ZA28721 09819837
         OI    SWITCH+1,SPTXTON  TURN SPECIAL TXT ON           @ZA28721 09820237
         B     TXTINT                                          @ZA28721 09820637
*   PASS INITIAL CHECKS                                                 09821037
         BCR   15,XBCNT        GO TO PROCESS TEXT                       09822603
RATIN    LH    XS2,ENRLD2X     RLD -- L SIZE OF RLD INPUT BUFFER        09826303
         CR    XJM1,XS2        CHK IF INPUT GREATER                     09830021
         BC    2,ERR1          BC IF YES -- ERROR                       09870021
         SR    XIBCNT,XIBCNT   CLEAR STRING COUNT ACCUMULATOR           09910021
         STH   XJM1,TTR1       SAVE RLD INPUT BYTE COUNT                09950021
RATINX   BC    15,RLD001       GO TO PROCESS RLD'S                      09990021
         SPACE 1                                                        10030021
ECPRG    SR    XIBCNT,XIBCNT   CLEAR STRING COUNT ACCUMULATOR           10070021
         BAL   XRET,RLDBUF     INPUT BYTE CT ZERO -- PURGE RLD          10110021
ECPRGX   STH   XIBCNT,OBCNT    CLEAR PREVIOUS BUFFERRED COUNT           10150021
         LA    XRET,TXTRET     SET INTERMEDIATE RETURN                  10190021
         L     R14,TXTBUFAD    L LOC OF TEXT PURGE ROUTINE              10230021
         BCR   15,R14          GO TO TEXT PURGE ROUTINE                 10270021
         SPACE 1                                                        10310021
RLDRET   STH   XOBCNT,OBCNT    SAVE BUFFERRED BYTE COUNT                10350021
         SPACE 1                                                        10390021
TXTRET   L     R15,INADD1      L RETURN ADDRESS                         10430021
         BALR  R14,R15         RETURN (WITH LINK)                       10470021
         SPACE 1                                                        10510021
MOVEJM1  MVC   0(0,XS2),0(XSTR)  MOVE INSTR TO MOVE ITEM TO BUFFER      10550021
         BC    15,RLD0161      CONTINUE PROCESSING IF LINKED            10590021
         SPACE 1                                                        10630021
MOVEJM1A MVC   0(4,XS2),SAVIDS   MOVE 'R' AND 'P' ID'S INTO BUFFER      10670021
         SPACE 1                                                        10710021
         TITLE 'HEWLFRAT   RLD/TXT PROCESSOR  --  WRITE ROUTINE'        10750021
*                          R L D / T X T                                10790021
*                     C O M M O N   W R I T E                           10830021
*                             ROUTINE                                   10870021
         SPACE 1                                                        10910021
*  THIS ROUTINE WRITES THE RLD AND TEXT INTERMEDIATE OUTPUT AS WELL   * 10950021
*  AS THE RLD AND TEXT NOTE LISTS AS REQUIRED.  AT ENTRY A TEST IS    * 10990021
*  MADE FOR RECORD SIZE ZERO.  ZERO SHOWS THE INPUT MODULE CONTAINED  * 11030021
*  NO TEXT OR RLD ITEMS OR THAT THE RLD ITEMS OCCURRED IN A MODULE    * 11070021
*  MARKED DELETE.  IN THE ZERO LENGTH CASE NO WRITE TAKES PLACE.      * 11110021
*  IF SYSUT1 HAS NOT BEEN OPENED PREVIOUSLY, IT IS OPENED NOW.          11150021
         SPACE 2                                                        11190021
RLDBUFR  LTR   R14,R14         CHK IF SIZE IS ZERO OR LESS              11230021
         BCR   12,XRET         BC IF YES -- RETURN                      11270021
COMBUF   LA    GR13,REGSA      SIZE NOT ZERO -- L LOC OF SAVE AREA      11310021
BUFFRET  L     XDCB,DCBAD      L LOC OF SYSUT1 DCB                      11350021
         STH   R14,DECBJM+LENGTH   SET DATA LENGTH IN DECB              11390021
         ST    R15,DECBJM+ADD   SET DATA AREA LOC IN DECB               11430021
         SPACE 1                                                        11470021
         TM    OPNFLGS(XDCB),DCBOPN  CHK IF DCB OPENED                  11510021
         BC    1,COMBUF2       BC IF YES                                11550021
         SPACE 1                                                        11590021
         MVC   DDNAME(8),40(XDCB)   NO -- RESERVE DD NAME               11630021
         OPEN  ((XDCB),(OUTIN))   OPEN SYSUT1 DCB                       11670021
         SPACE 1                                                        11710021
         TM    OPNFLGS(XDCB),DCBOPN   CHK IF OPEN SUCCESSFUL            11750021
         BC    1,COMBUF2       BC IF YES                                11790021
ABEND1   LA    GR1,DDNAME      NO -- L LOC OF DD NAME                   11830021
         LH    MSG,IEW0284     L ERROR CODE                             11870037
         LA    R14,TXTRET      L RETURN ADDRESS                         11910021
         L     R15,ERDIG       L LOC OF ERROR ROUTINE                   11950021
         BCR   15,R15          GO TO ERROR ROUTINE                      11990021
         SPACE 1                                                        12030021
COMBUF2  WRITE DECBJM,SF,(XDCB),PHADD,PHL                               12070021
         BCR   15,XRET2        RETURN                                   12110021
         SPACE  1                                                       12150021
COMCHK   LA    GR13,REGSA      L LOC OF SAVE AREA                       12190021
         L     XDCB,DCBAD      L ADDRESS OF SYSUT1 DCB                  12230021
         SPACE  1                                                       12270021
         CHECK DECBJM                                                   12310021
         SPACE 1                                                        12350021
         NOTE  (XDCB)                                                   12390021
         SPACE 1                                                        12430021
         SR    XOBCNT,XOBCNT   CLEAR BUFFERRED BYTE COUNT               12470021
         BCR   15,XRET2        RETURN                                   12510021
         SPACE 2                                                        12550021
DDNAME   DC    C'SYSUT1  '                                              12630021
         SPACE 2                                                        12670021
   TITLE 'HEWLFRAT   RLD/TXT PROCESSOR  --  ERROR ROUTINE INTERFACE'    12710021
*                    E R R O R     R O U T I N E                        12750021
*                         I N T E R F A C E                             12790021
         SPACE 2                                                        12830021
         SPACE 1                                                        12870021
ERR1     LH    MSG,IEW0222     L OBJECT MODULE ERROR CODE               12910037
         TM    APT1,EX         CHK IF IS OBJECT MODULE                  12950037
         BC    8,ERROR         BC IF YES TO ERROR ROUTINE INTERFACE     12990037
ERR2     LA    MSG,IEW0234     NO -- L ERROR CODE FOR LOAD MODULE       13030037
         SPACE 2                                                        13070021
*                   COMMON EXIT TO ERROR ROUTINE                        13110021
         SPACE 1                                                        13150021
ERROR    L     R15,ERDIG                                                13190021
         LA    R14,TXTRET                                               13230021
         BCR   15,R15                                                   13270021
         SPACE                                                          13310021
*     ERROR CAUSE BY INPUT EECORD LARGER THAN THAN THE TEXT BUFFER      13350021
*        REQUIRE ERROR MSG AND A DUMMY READ                             13390021
         SPACE                                                          13430021
ERR3     LA    MSG,IEW0234    LOAD MODULE RRROR MSG                     13470037
ERR3A    L     R15,ERDIG      ESTABLISH ADDR OF ERROR RTN        A43127 13510000
         BALR  R14,R15    PRINT ERROR MSG AND RETURN TO                 13550021
         LA    GR9,1            ISSUE BUMMY READ OF 1 TO ADVANCE TO     13590021
         B     READ0        TO THE NEXT RECORD                          13630021
     TITLE 'HEWLFRAT   RLD/TXT PROCESSOR  --  MULTIPLICITY ROUTINE'     13670021
*                            C O M M O N                                13710021
*        M U L T I P L I C I T Y   D E T E R M I N A T O R              13750021
*                              ROUTINE                                  13790021
         SPACE 2                                                        13830021
*     THIS ROUTINE DETERMINES THE LOWEST MULTIPLICITY IDENTITY          13870021
*  AND RELOCAND OF TEXT ITEM                                            13910021
*     XS1 AND XS2 = CBRC                                                13950021
*     XAA = ASSEMBLED ADDRESS OF 1ST BYTE OF TEXT                       13990021
*     XAA = GR3, GR3 = ADDRESS FIELD FOR RLD ITEM                       14030021
         SPACE 2                                                        14070021
         SPACE 2                                                        14110021
MULTDET  SLL   XS1,4           MULTIPLY 'ID' BY 16 (CESD LENGTH)        14150021
         A     XS1,CHESD       ADD LOC OF START OF CESD                 14190021
         L     XS1,8(XS1)      L TYPE/ADDRESS FROM EXTRACTED ENTRY      14230021
         LA    XS1,0(XS1)      CLEAR TO ASSEMBLED ADDRESS               14270021
         LCR   XS1,XS1         FORM COMPLEMENTED ADDRESS                14310021
         A     XS1,TXTBFBEG    ADD LOC OF TEXT BUFFER TO FORM CURRENT   14350021
*                                   BUFFER RELOCATION CONSTANT  (CBRC)  14390021
         LR    XS2,XS1         L CBRC IN XS2                            14430021
         LR    R0,XS1          SAVE REGISTER  (CBRC)                    14470021
         AR    XS2,XAA         ADD ASSEMBLED ADDRESS OF TEXT TO CBRC    14510021
         S     XS2,TXTBFBEG    SUBTRACT LOC OF TEXT BUFFER              14550021
         SR    XS1,XS1         CLEAR REMAINDER REGISTER                 14590021
         D     XS1,MULTSIZE    DIVIDE BY BUFFER SIZE FOR MULTIPLICITY   14630021
         N     XS2,STRUNC      LIMIT MULTIPLICITY TO 10 BITS            14670021
         BCR   15,GR1          RETURN                                   14710021
         SPACE 2                                                        14750021
         TITLE 'HEWLFRAT   RLD/TXT PROCESSOR  --  RLD PROCESSING'       14790021
*                 R L D    P R O C E S S I N G                          14830021
*                            ROUTINE                                    14870021
         SPACE 2                                                        14910021
*     THIS ROUTINE IS ENTERED FOR EACH 'R' AND 'P' FIELD.  IT RENUMBERS 14950021
*  THE 'R' AND 'P' POINTERS VIA THE RENUMBERING TABLE AND DETERMINES    14990021
*  WHEN IT IS NECESSARY TO ENTER THE DELINK ROUTINE.  THE ACTUAL        15030021
*  SETTING OF THE DELINK ENTRY WAS DONE BY THE ESD PROCESSOR.           15070021
*     XBCNT = CUMULATIVE BYTE COUNT OF INPUT RLD ITEMS WHICH HAVE BEEN  15110021
*        PROCESSED.  WHEN XBCNT = TTR1, END OF INPUT HAS BEEN REACHED.  15150021
*     XIBCNT = STRING BYTE COUNT.   A STRING CONSISTS OF A GROUP OF     15190021
*        CONTIGUOUS RLD ITEMS, EACH WITH A 'P' ID FIELD OF THE SAME ID. 15230021
*        ONE ENTRY FOR EACH STRING IS MADE IN THE RLD NOTE LIST.        15270021
*     XSTR = POINTER TO START OF A STRING -- INITIAL 'R' ID.            15310021
*     XPRLD = POINTER TO CURRENT FLAG-ADDRESS ITEM.  AT ENTRY XPRLD     15350021
*        HOLDS THE LOCATION OF THE FIRST RLD ITEM IN AN INPUT RECORD.   15390021
*        SUBSEQUENTLY IT IS THE POINTER TO THE FA FIELD OF EACH CURRENT 15430021
*        ITEM.                                                          15470021
         SPACE 1                                                        15510021
RLD001   SR    XBCNT,XBCNT     INITIALIZE INPUT COUNT TO ZERO           15550021
         MVC   ENCT(2),ENR1C   SET CURRENT NOTE LIST ENTRY COUNT        15590021
RLD002   SR    XIBCNT,XIBCNT   INITIALIZE STRING COUNT TO ZERO          15630021
         SPACE 1                                                        15670021
RLD002A  LA    XBCNT,8(XBCNT)  STEP BY 8 NO OF BYTES PROCESSED          15710021
         LR    XSTR,XPRLD      L START OF CURRENT STRING                15750021
         L     R14,BUFSTLOC    L BUFFERED STRING LOCATION               15790021
         LTR   R14,R14         CHK IF LOCATION SET                      15830021
         BC    7,RLD002B       BC IF YES                                15870021
         ST    XSTR,BUFSTLOC   NO -- SET WITH CURRENT STRING LOC        15910021
RLD002B  MVC   SAVIDS(4),0(XSTR)   RESERVE 'R' AND 'P' ID'S             15950021
         MVC   SAVIDR(2),0(XSTR)   SAVE RLD ITEM 'R' ID                 15990021
         LA    XPRLD,4(XPRLD)  STEP TO LOC OF NEXT FA FIELD             16030021
         MVI   STM,STMULT      RESET STRING MULTIPLICITY                16070021
         LH    XPSAV,SAVIDS+2           L 'P' NUMBER AND                16110021
         SLL   XPSAV,2           QUADRUPLE  (ID FIELD LENGTH)           16150021
         A     XPSAV,RECNT     ADD LOC OF RNT-4 TO FORM CURRENT RNT LOC 16190021
         CLC   DID(2,XPSAV),CONZO  IS RENUMBERED ID ZERO                16230021
         BC    8,ERR1          BC IF ZERO -- ERROR                      16270021
         LH    GR3,ENCDX               MAX # CESD = MAX # RNT'S  A53300 16280000
         SLL   GR3,2                   MULTIPLY BY 4             XM1384 16290002
         A     GR3,RECNT               GET HIGHEST ADDR OF RNT-4 A53300 16300000
         A     GR3,FOUR                HIGHEST VALID ADDR OF RNT A53300 16302000
         CR    GR3,XPSAV               IS IT A VALID P PTR?      A53300 16304000
         BL    ERR1                    NO - IEW0222              A53300 16306000
         OI    APT1,DEL        SET DELETE FLAG                          16310021
         TM    DT(XPSAV),DEL   IS P A DELETE                            16350021
         BC    1,RLD012        BC IF YES TO SKIP PROCESSING             16390021
         NI    APT1,DELOFF     NO -- RESET DELETE FLAG OFF              16430021
RLD003   CLC   DID(2,XPSAV),PREP  IS CURRENT P SAME AS PREVIOUS P       16470021
         BC    8,RLD0042       BC IF YES TO CONTINUE STRING             16510021
         LR    XRET,XOBCNT     L BUFFERRED BYTE COUNT                   16550021
         AR    XRET,XIBCNT     ADD CURRENT STRING COUNT                 16590021
         LA    XRET,4(XRET)    STEP BY 4                                16630021
         C     XRET,RLDSIZE    CHK AGAINST MAXIMUM BUFFER SIZE          16670021
         BC    10,RLD0042      BC IF EQUAL OR GREATER                   16710021
RLD0031  BAL   XRET,RLDBUF     NO -- GO TO BUFFER PREVIOUS STRING       16750021
*                                NOTE -- BUFFERING WILL NOT OCCUR IF    16790021
*                                    PREVIOUS P WAS A DELETE OR IF THIS 16830021
*                                    IS THE FIRST P POINTER IN A MODULE 16870021
RLD004   SR    XIBCNT,XIBCNT   RESET STRING COUNT TO ZERO               16910021
         TM    RLDFLGS,CONTOV  CHK FOR CONTINUATION OVERFLOW FLAG       16950021
         BC    8,RLD0041       BC IF NO                                 16990021
         NI    RLDFLGS,CONTOVN   CLEAR CONTINUATION OVERFLOW FLAG       17030021
         CH    XBCNT,TTR1      CHK IF INPUT EXHAUSTED                   17070021
         BC    10,RLDRET       RETURN IF YES                            17110021
         L     XSTR,SBACKUP    SET NEW STRING ORIGIN                    17150021
         ST    XSTR,BUFSTLOC   SET NEW BUFFERRED STRING LOC             17190021
         LR    XPRLD,XSTR      L NEW STRING ORIGIN                      17230021
         LA    XPRLD,4(XPRLD)   SET TO LOC OF NEXT FA FIELD             17270021
         LA    XBCNT,4(XBCNT)  STEP BY 4 NO OF INPUT BYTES PROCESSED    17310021
         LA    XPSAV,SAVIDS+2  RESERVE 'P' ID                           17350021
         BC    15,RLD0041A                                              17390021
RLD0041  ST    XSTR,BUFSTLOC   SET NEW BUFFERRED STRING LOC             17430021
RLD0041A MVC   PREP(2),DID(XPSAV)   RESERVE CURRENT 'P' AS PREVIOUS 'P' 17470021
RLD0042  MVC   SAVIDS+2(2),0(XPSAV)   SAVE NEW 'P' ID FOR RLD ITEM      17510021
RLD0043  NI    PDSE8,ANY       SET RLD FLAG ON                          17550021
         LA    XIBCNT,8(XIBCNT)  STEP STRING COUNT BY 8                 17590021
         LH    GR4,SAVIDR      L 'R' ID OF CURRENT ITEM                 17630021
         N     GR4,RIDMSK      CLEAR TO 'R' ID                          17670021
         LA    R14,RLD010      L PROCEED ADDRESS FOR 'P' RENUMBERING    17710021
         SPACE 2                                                        17750021
*                  RENUMBER 'ID' POINTER ROUTINE                        17790021
*                     WITH DELINK IF REQUIRED                           17830021
         SPACE 1                                                        17870021
RLD004A  LR    R0,R14          SAVE REGISTER 14                         17910021
         L     GR3,CHESD       L START OF CESD                          17950021
         L     GR5,RECNT       L START OF RNT-4                         17990021
         LR    GR9,GR4         L RLD 'ID'                               18030021
         SLL   GR9,2           QUADRUPLE  (ENTRY LENGTH)                18070021
         AR    GR9,GR5         ADD RNT START TO FORM CURRENT ENTRY LOC  18110021
         TM    0(XPRLD),X'30'  IS RLD A PSEUDO-REGISTER                 18150021
         BC    1,RLD012        BC IF YES -- SKIP RENUMBERING            18190021
         CLC   DID(2,GR9),CONZO  IS RENUMBERED ID ZERO                  18230021
         BC    8,ERR1          BC IF YES -- ERROR                       18270021
         LH    GR3,ENCDX               MAX # CESD = MAX # RNT'S  A53300 18280000
         SLL   GR3,2                   MULTIPLY BY FOUR          XM1384 18290002
         A     GR3,RECNT               GET HIGHEST ADDR OF RNT-4 A53300 18300000
         A     GR3,FOUR                HIGHEST VALID RNT ADDR    A53300 18302000
         CR    GR3,GR9                 VALID R PTR?              A53300 18304000
         L     GR3,CHESD               RESTORE START OF CESD -   A53300 18306000
*                                      DOESN'T CHANGE COND CODE  A53300 18308000
         BL    ERR1                    NO - IEW0222              A53300 18308400
         LH    GR1,DID(GR9)    L UPDATED ID                             18310021
         MVC   TEMP(1),3(GR9)          GET RNT TYPE             XA04649 18320003
         NI    TEMP,X'0F'              GET RID OF FLAGS         XA04649 18330003
         CLI   TEMP,X'04'              TEST FOR PC TYPE         XA04649 18340003
         BNE   RLD004B                 BRANCH IF NOT PC         XA04649 18342003
         TM    3(GR9),X'10'            TEST FOR DELETE FLAG     XA04649 18344003
         BNO   RLD004B                 BRANCH IF NOT PC DELETE  XA04649 18346003
         LR    GR13,GR1                SET UP WORK REG          XA04649 18348403
         SLL   GR13,4                  CALC CESD OFFSET         XA04649 18348803
         AR    GR13,GR3                GET CESD POINTER         XA04649 18349203
         NC    13(3,GR13),13(GR13)     TEST FOR 0-LENGTH PC     XA04649 18349603
         BNZ   RLD004B                 BRANCH IF NOT 0-LENGTH   XA04649 18349703
         LA    R0,IEW0622              SET UP MESSAGE IEW0622   XA04649 18349837
         B     ERROR                   GO TO LOG MESSAGE        XA04649 18349903
RLD004B  EQU   *                                                XA04649 18363203
         LR    GR13,GR1        USE UPDATED ID                           18376703
         SLL   GR13,4          MULTIPLY BY 16  (ENTRY LENGTH)           18390021
         AR    GR13,GR3        ADD START OF CESD TO FORM CURRENT LOC    18430021
         TM    DT(GR9),DEL     IS TYPE IN RNT A DELETE                  18470021
         BC    8,RLD008        BC IF NO                                 18510021
         TM    DF(GR9),DSAV    YES, IS DELETE -- IS DELINK VALUE SAVED  18550021
         BC    1,RLD007        BC IF YES                                18590021
         TM    0(XPRLD),ANYR   DELINK NOT SAVED -- IS TYPE NON-BRANCH   18630021
         BC    5,RLD0061       BC IF NO TO SKIP DELINKING               18670021
         SPACE 1                                                        18710021
RLD005   L     R15,ADDEL       NON-BRANCH TYPE -- L LOC OF DELINK RTN   18750021
         S     GR9,RECNT               HOLD RNT OFFSET          XA05656 18760003
         BALR  R14,R15         GO TO PERFORM DELINK                     18790021
         LR    R14,R0          RESTORE REGISTER 14                      18830021
         A     GR9,RECNT               RECALC RNT ADDR          XA05656 18840003
         SPACE 1                                                        18870021
RLD0061  NI    8(GR13),DSAVOF  SET DELETE FLAG OFF IN CESD              18910021
         TM    DF(GR9),DSAV    IS DELINK VALUE SAVED                    18950021
         BC    8,RLD008        BC IF NO                                 18990021
RLD007   TM    0(XPRLD),ANYR   IS RNT TYPE A NON-BRANCH                 19030021
         BC    5,RLD009        BC IF NO                                 19070021
MOVEJM2  MVC   DELR(2),DID(GR9)  SAVE RENUMBERED ID                     19110021
         OI    APTSWS,X'08'    SET DELINKED 'R' RECEIVED FLAG           19150021
         BCR   15,R14          RETURN TO DELINK CALLER                  19190021
         SPACE 1                                                        19230021
RLD008   TM    DT(GR9),CH      IS RNT TYPE FLAGGED AS CHAINED           19270021
         MVC   SAVIDS(2),DID(GR9)   SAVE RENUMBERED ID FOR OUTPUT       19310021
*                                NOTE -- THIS INSTRUCTION DOES NOT      19350021
*                                  CHANGE CONDITION CODE                19390021
         BCR   8,R14           NOT CHAINED -- MOVE INSTR OK -- RETURN   19430021
         MVC   SAVIDS(2),14(GR13)   CHAINED -- OVERWRITE FIRST MOVE     19470021
         BCR   15,R14          RETURN TO CALLER                         19510021
         SPACE 1                                                        19550021
RLD009   LA    XS1,5           L SIZE OF DELINK TABLE ENTRY             19590021
         MH    XS1,0(GR9)      MULTIPLY BY ENTRY NUMBER                 19630021
         A     XS1,DLKT        ADD START OF DELINK TABLE TO FORM DELINK 19670021
*                                ENTRY LOC                              19710021
         MVC   SAVIDS(2),0(XS1)   RENUMBER 'R' WITH DELINK TABLE ID     19750021
         LR    R14,R0          RESTORE REGISTER 14                      19790021
         BCR   15,R14          RETURN TO CALLER                         19830021
         SPACE 2                                                        19870021
         EJECT                                                          19910021
*                 OVERLAY CALLS LIST ENTRY ROUTINE                      19950021
         SPACE 1                                                        19990021
*         IF OVERLAY IS SPECIFIED,  AND IF THE REFERENCE IS TO A 4-BYTE 20030021
*  CONSTANT, THIS ROUTINE IS ENTERED.  IF THE REFERENCE AND THE POINTER 20070021
*  ARE IN THE SAME CSECT NO ACTION IS TAKEN.  IF THE 'P' ID IS DIFERENT 20110021
*  FROM THE PREVIOUS 'P' ENTERED, THE 2 BYTE CHAINING FIELD IS CLEARED, 20150021
*  THE NEW 'P' IS INSERTED IN THE NEXT 2 BYTE AREA, AND THE CURRENT 'R' 20190021
*  ID FOLLOWS IN THE NEXT 2 BYTE AREA.  IF THE NEW 'P' ID MATCHES THE   20230021
*  PREVIOUS 'P', THE CURRENT 'R' ID IS ENTERED DIRECTLY IN THE FIRST 2  20270021
*  BYTES.  THE UPDATED CUMULATIVE CALLS LIST BYTE COUNT IS SAVED IN APT 20310021
*  (ENCLC).  WHEN THIS CALLS LIST LENGTH EXCEEDS MAXIMUM (ENCLX),  AN   20350021
*  ERROR INDICATION IS GENERATED.                                       20390021
         SPACE 1                                                        20430021
RLDCALL  TM    PDSE7,OI        CHK FOR OVERLAY                          20470021
         BC    8,RLD012        BC IF NO -- SKIP CALLS LIST ENTRY        20510021
         TM    0(XPRLD),X'0C'  IS OVERLAY -- CHK IF 4 BYTE CONSTANT     20550021
         BC    12,RLD012       BC IF NO -- SKIP CALLS LIST ENTRY        20590021
         SPACE 1                                                        20630021
         LH    XS1,ENCLC       L CURRENT BYTE COUNT OF CALLS LIST       20670021
         A     XS1,CLLT        ADD START OF CALLS LIST TO FORM CURRENT  20710021
*                                  ENTRY LOCATION                       20750021
         LH    XS3,SAVIDS      L CURRENT 'R' ID                         20790021
         N     XS3,RIDMSK      CLEAR TO 'R' ID                          20830021
         TM    APTSWS,X'08'            IS DELINK VALUE SAVED?           20870021
         BZ    RLDCLA                  NO, BRANCH OUT                   20910021
         MH    XS3,FIVEFIVE            YES, MULT DELINK ID BY 5         20950021
         A     XS3,DLKT                ADD TO DELINK TABLE ADDR         20990021
         MVC   DLKTSAVE(2),0(XS3)      SAVE TRUE R ID                   21030021
         LH    XS3,DLKTSAVE            PICK UP TRUE R ID                21070021
RLDCLA   LH    XS2,SAVIDS+2            PICK UP CURRENT P ID             21110021
         CR    XS2,XS3         CHK IF 'R' EQUALS 'P'  (IN SAME CSECT)   21150021
         BC    8,RLD012        RETURN IF YES -- NO ENTRY REQUIRED       21190021
         CH    XS2,CALLCURP    DOES 'P' EQUAL PREVIOUS 'P'              21230021
         BC    8,CALLR         BC IF YES                                21270021
CALLPANR MVI   0(XS1),0        NO --    CLEAR                           21310021
         MVI   1(XS1),0             CHAINING FIELD                      21350021
         STH   XS2,2(XS1)      SET CURRENT 'P' IN CALLS LIST            21390021
         STH   XS2,CALLCURP    SAVE NEW 'P' FOR FUTURE CHECK            21430021
         LA    XS1,4(XS1)      STEP ENTRY POINTER BY 4 TO 'R' AREA      21470021
CALLR    STH   XS3,0(XS1)      SET CURRENT 'R' IN CALLS LIST            21510021
         LA    XS1,2(XS1)      STEP ENTRY POINTER TO NEXT 'R' FIELD     21550021
*                                   (OR NEXT ENTRY)                     21590021
         S     XS1,CLLT        SUBTRACT CALLS LIST START TO GET BYTE CT 21630021
         STH   XS1,ENCLC       SAVE UPDATED CALLS LIST BYTE COUNT       21670021
         AH    XS1,SIX                 ADD 6 BYTES TO COUNT      XM6209 21680000
CALLR02  CH    XS1,ENCLX       CHK IF BYTE CNT IS AT OVRFLO SIZE XM6209 21710000
         BNH   CALLR01       NO -- CONTINUE               A52402,XM6209 21750000
         TM    APT4,REALOCTE    IS REALOC POSSIBLE?              S01904 21790021
         BNO   CALLR1            YES,TRY REALLOCATING            S01904 21830021
         LA    MSG,IEW0354     YES -- L CALLS LIST OVERFLOW ERROR CODE  21870037
         BC    15,ERROR        GO TO ERROR ROUTINE INTERFACE            21910021
CALLR01  SH    XS1,SIX                 SET BACK TO TRUE COUNT    XM6209 21920000
         B     RLD012                  CONTINUE PROCESSING       XM6209 21930000
SIX      DC    H'6'                    SIX BYTES                 XM6209 21940000
CALLR1   STM   WRKREG0,WRKREGF,BRNCHSV SAVE REGISTERS            S01904 21950021
         L     BRANCH,ERDIGA       GET ADDR OF REALOC RT         S01904 21990021
         BALR  RETURN,BRANCH       GO TO REALLOCATE              S01904 22030021
         LM    WRKREG0,WRKREGF,BRNCHSV  RESTORE REGISTERS        S01904 22070021
         B     CALLR02             CONTINUE               S01904,XM6209 22110000
         SPACE 2                                                        22150021
         EJECT                                                          22190021
*     THIS SEQUENCE IS ENTERED FOR EACH FLAG-ADDRESS FIELD (FA).  IT    22230021
*  POSTS THE FLAG FIELD WITH THE PROPER INDICATION FOR AN ABSOLUTE OR   22270021
*  A RELATIVE RELOCATION CONSTANT OR FOR A PSEUDO-REGISTER.  IT FINDS   22310021
*  THE LOWEST MULTIPLICITY IN A STRING OF RLD ITEMS OF THE SAME 'P'     22350021
*  POINTER AND ENTERS THAT MULTIPLICITY IN THE RLD NOTE LIST ENTRY FOR  22390021
*  THAT 'P' POINTER.                                                    22430021
         SPACE 2                                                        22470021
RLD010   EQU   *               DEFINE SYMBOL                            22510021
         NI    0(XPRLD),X'7F'          CLEAR POSSIBLE FLAGS FROM        22550021
*                                   PREVIOUS SECOND PASS PROCESSING     22590021
*                                        (IF EXECUTABLE MODULE)         22630021
         TM    0(XPRLD),X'30'  IS THIS A PSEUDO-REGISTER                22670021
         BC    1,RLD012        YES -- SKIP PROCESSING                   22710021
         TM    0(XPRLD),X'10'  IS FLAG A BRANCH TYPE                    22750021
         BC    1,RLDCALL       YES -- GO TO CHK FOR OVERLAY             22790021
         TM    DT(GR9),DEL     CHK IF DELETE FLAG IN RNT                22830021
         BC    8,RLD010A       BC IF NOT DELETE                         22870021
         SPACE 1                                                        22910021
         BAL   R14,RLD004A     DELETE -- DELINK IF REQUIRED             22950021
         SPACE 1                                                        22990021
RLD010A  MVC   FLAG(1),DT(GR9) GET TYPE BYTE FROM RNT                   23030021
         NI    FLAG,X'07'      ISOLATE TYPE FLAGS                       23070021
         CLI   FLAG,X'06'      IS PSEUDO-REGISTER                       23110021
         BC    7,RLD011        BC IF NO                                 23150021
         OI    0(XPRLD),X'20'  YES -- FLAG RLD ITEM AS PR               23190021
         BC    15,RLD012                                                23230021
         SPACE 1                                                        23270021
RLD011   CLI   FLAG,X'02'      IS EXTERNAL REFERENCE                    23310021
         BC    8,RLD012        BC IF YES                                23350021
         TM    DT(GR9),DEL     NO -- CHK FOR DELETE IN RNT              23390021
         BC    1,RLD012        YES -- FLAG REMAINS ABSOLUTE             23430021
         OI    0(XPRLD),REL    NOT DELETE -- FLAG AS RELATIVE           23470021
RLD012   LH    XS1,SAVIDS+2    L CURRENT 'P' ID                         23510021
         L     GR3,0(XPRLD)         EXTRACT ASSEMBLED ADDRESS           23550021
         LA    GR3,0(GR3)               FROM RLD FA FIELD               23590021
         TM    APT1,DEL        IS 'P' A DELETE                          23630021
         BC    1,RLD0122       YES -- GO TO CHK FOR CONTINUED STRING    23670021
         SPACE 2                                                        24070021
*                ESTABLISH MULTIPLICITY OF CURRENT ITEM                 24110021
         SPACE 1                                                        24150021
         BAL   GR1,MULTDET     NOT DELETE -- GO TO OBTAIN MULTIPLICITY  24190021
         SPACE 1                                                        24230021
         STH   XS2,POSMULT     RESERVE POSSIBLE NEW LOWEST MULTIPLICITY 24270021
         MVC   NFLG(1),RLDMULT      EXTRACT FLAGS FROM                  24310021
         NI    NFLG,FLGS              NOTE LIST MODEL                   24350021
         NI    RLDMULT,NFLGS   CLEAR FLAGS IN MODEL (ID MULTIPLICITY)   24390021
         NI    STM,NFLGS       CLEAR FLAGS IN STRING MULTIPLICITY       24430021
         LR    R0,XIBCNT               CURRENT STRING LENGTH     A38313 24438000
         AR    R0,XOBCNT               ADD BUFFER BYTE COUNT     A38313 24446000
         CLC   SAVIDS+2(2),PREP        SAME P PTR?              OY00137 24448002
         BNE   RLD01202                IF NOT BRANCH            OY00137 24450002
         TM    APTSWS,X'08'            TEST DELINK R PTR SAVED  OY00137 24452002
         BNO   RLD01200                BRANCH IF NOT ON         OY00137 24452402
         CLC   DELR(2),PRER            SAME R PTR?              OY00137 24452802
         BNE   RLD01202                BRANCH IF NOT            OY00137 24453202
         B     RLD01201                BRANCH                   OY00137 24453702
RLD01200 CLC   SAVIDS(2),PRER          SAME                     OY00137 24453802
         BNE   RLD01202                BRANCH IF NOT            OY00137 24453902
RLD01201 SH    R0,SFOUR                ALLOW FOR CHAINED ITEM   OY00137 24455902
RLD01202 EQU   *                                                        24465902
         C     R0,RLDSIZE              COMPARE TO MAX BUFF COUNT A38313 24472802
         BH    RLD0120                 GREATER, SKIP      A49482,A38313 24482102
*                                      MULT DETER         A49482,A38313 24491402
         CLC   POSMULT(2),RLDMULT  IS THIS LOWEST MULTIPLICITY OF ID    24500702
         BC    10,RLD0120      BC IF NO TO CHK STRING MULTIPLICITY      24510021
         STH   XS2,RLDMULT     YES -- SET NEW LOWEST MULT IN MODEL      24550021
RLD0120  CLC   POSMULT(2),STM  IS THIS LOWEST MULTIPLICITY OF STRING    24590021
         BC    10,RLD0121      NO -- GO TO CHK FOR CONTINUATION         24630021
         STH   XS2,STM         YES -- SAVE NEW LOWEST STRING MULT       24670021
RLD0121  OC    RLDMULT(1),NFLG SET FLAGS IN RLD MODEL                   24710021
         OC    STM(1),NFLG     SET FLAGS IN STRING COMPARATOR           24750021
RLD0122  TM    APTSWS,X'08'                                             24790021
         BC    8,RLD0122X         BRANCH IF NOT                         24830021
         MVC   SAVIDS(2),DELR     MOVE DELINK 'R' POINTER               24870021
         OI    SAVIDS,NREL        SET NON-RELATIVE FLAG                 24910021
RLD0122X TM    0(XPRLD),CONT      CHK FOR CONTINUATION FLAG             24950021
         LA    XPRLD,4(XPRLD)  STEP TO NEXT FA FIELD (OR END OF STRING) 24990021
*                              NOTE -- THIS INSTRUCTION WILL NOT CHANGE 25030021
*                                CONDITION CODE                         25070021
         BC    8,RLD013A       BC IF NO                                 25110021
         TM    APT1,DEL        IS 'P' A DELETE                          25150021
         BC    1,RLD0124       BC IF YES                                25190021
         LR    R0,XIBCNT       CONTINUE STRING -- L CURRENT STRING CT   25230021
         AR    R0,XOBCNT       ADD BUFFERRED BYTE COUNT                 25270021
         LR    XS1,XPRLD       L CURRENT STRING ITEM POINTER            25310021
         SH    XS1,SFOUR       SUBTRACT 4                               25350021
         C     XIBCNT,RLDSIZE  CHK IF STRING EQUALS BUFFER              25390021
         BC    8,RLD0125       BC IF YES                                25430021
         C     R0,RLDSIZE      STRING IS LESS, CHK TOTAL COUNT          25470021
         BC    4,RLD0124       BC IF TOTAL LESS THAN BUFFER             25510021
         CLC   SAVIDS(2),PRER  CHK IF CURRENT 'R' SAME AS PREVIOUS 'R'  25550021
         BC    7,RLD0122A      BC IF NOT SAME                           25590021
         CLC   SAVIDS+2(2),PREP  SAME -- CHK 'P' SAME AS PREVIOUS 'P'   25630021
         BC    8,RLD0123       BC IF SAME                               25670021
RLD0122A C     R0,RLDSIZE      NOT SAME -- CHK TOTAL WITH BUFFER SIZE   25710021
         BC    8,RLD0125       BC IF EQUAL                              25750021
         SH    XS1,SFOUR       SUBTRACT 4 FROM STRING POINTER           25790021
         BC    15,RLD0125                                               25830021
RLD0123  C     R0,RLDSIZE      CHK TOTAL WITH BUFFER SIZE               25870021
         BC    2,RLD0125       BC IF GREATER                            25910021
RLD0124  LA    XBCNT,4(XBCNT)  SAME -- STEP BY 4 INPUT BYTE COUNT       25950021
         LA    XIBCNT,4(XIBCNT)  STEP BY 4 CURRENT STRING COUNT         25990021
         TM    APT1,DEL        IS 'P' A DELETE                          26030021
         BC    1,RLD0122X         YES - GO TO END OF STRING             26070021
         BC    15,RLD010       NO -- GO TO CHECK NEXT FA ITEM           26110021
         SPACE 1                                                        26150021
RLD0125  OI    RLDFLGS,CONTOV  SET CONTINUATION-OVERFLOW FLAG           26190021
         ST    XS1,SBACKUP     SAVE FOR REPLACEMENT STRING POINTER      26230021
*                                                                       26270021
*      IF DELINKING HAS TAKEN PLACE, THIS ROUTINE MOVES THE DELINKED    26310021
*  'R' POINTER INTO THE STRING ID, CLEARS THE DELINK FLAG IN APT, SETS  26350021
*  THE NON-RELATIVE FLAG IN THE 'R' ID AND CLEARS THE RELATIVE FLAG     26390021
*  IN EACH FA FIELD IN THE STRING.                                      26430021
*                                                                       26470021
RLD013A  TM    APTSWS,X'08'    CHK IF ANY DELINK 'R' RECEIVED           26510021
         BC    8,RLD013        BC IF NO -- CONTINUE RLD PROCESSING      26550021
         NI    APTSWS,X'F7'    CLEAR DELINK FLAG IN APT                 26590021
         LR    R0,XSTR         SAVE START OF STRING                     26630021
         LA    XSTR,4(0,XSTR)  INCREMENT TO FA FIELD                    26670021
RLD013B  NI    0(XSTR),RELOFF  CLEAR RELATIVE FLAG IN FA                26710021
         LA    XSTR,4(0,XSTR)  INCREMENT TO NEXT FLAG FIELD             26750021
         CR    XSTR,XPRLD      CHK IF AT END OF STRING                  26790021
         BC    5,RLD013B       BC IF NO TO CONTINUE STRING PROCESSING   26830021
         LR    XSTR,R0         YES -- RESTORE STRING POINTER            26870021
         SPACE  2                                                       26910021
*IF CONTINUATION BIT NOT SET, NEXT ITEM IS A NEW R+P OR WE ARE AT       26950021
*THE END OF OUR INPUT RECORD                                            26990021
         SPACE 1                                                        27030021
RLD013   TM    APT1,DEL        IS 'P' A DELETE                          27070021
         BC    1,RLD0156       IF YES, GO TO CHK END-OF-INPUT           27110021
         SPACE 1                                                        27150021
*        WE HAVE COME TO THE END OF A STRING OF                         27190021
*RLD ITEMS. WHAT FOLLOWS THIS STRING MAY BE ANOTHER RLD ITEM WITH A NEW 27230021
*R AND P OR WE MAY BE AT THE END OF THE RLD INPUT. BEFORE WE FIND       27270021
*OUT WHICH IS TRUE, THE OLD STRING MUST BE MOVED INTO THE RLD BUFFER.   27310021
*IF THE RLD STRING WILL NOT FIT INTO THE BUFFER, THE BUFFER IS FIRST    27350021
*PURGED. THE OLD STRING WILL THEN BE MOVED IN.                          27390021
         SPACE 1                                                        27430021
RLD014   L     XS2,RLDOUT1     L START OF RLD BUFFER 1 -- DATA LOC      27470021
         TM    BUFFS,BUFFRN2   CHK IF BUFFER 2 IS CURRENT               27510021
         BC    8,*+8           BC IF NO                                 27550021
         L     XS2,RLDOUT2     L START OF RLD BUFFER 2 -- DATA LOC      27590021
         AR    XS2,XOBCNT      ADD BUFFERRED COUNT TO BUFFER LOC        27630021
         LR    XS1,XIBCNT             L CURRENT STRING BYTE COUNT       27670021
         AR    XS1,XOBCNT          AND FORM CURRENT BUFFER BYTE COUNT   27710021
RLD0151  BCTR  XIBCNT,0        REDUCE FOR EXACT MOVE COUNT              27750021
         CLC   SAVIDS(4),PRER  CHK IF CURRRNT 'ID'S' SAME AS PREVIOUS   27790021
         BC    7,RLD0152       BC IF NOT BOTH SAME                      27830021
RLD015   SH    XS2,SFOUR       GET ADDRESS OF PREVIOUS FA FIELD         27870021
         OI    0(XS2),CONT     SET CONTINUATION FLAG IN PREVIOUS FA     27910021
         LA    XS2,4(XS2)      RESTORE BUFFER LOC                       27950021
         LA    XSTR,4(XSTR)    STEP INPUT POINTER TO SKIP 'R' AND 'P'   27990021
         SH    XIBCNT,SFOUR    REDUCE STRING COUNT  (LESS 'R' AND 'P')  28030021
         EX    XIBCNT,MOVEJM1   MOVE CURRENT STRING INTO OUTPUT BUFFER  28070021
         BC    15,RLD015X      SKIP INSERT OF ID'S                      28110021
         SPACE 1                                                        28150021
RLD0152  C     XS1,RLDSIZE     CHK AGAINST MAXIMUM BUFFER SIZE          28190021
         BC    12,RLD0153      BC IF EQUAL OR LESS                      28230021
         TM    RLDFLGS,CONTOV  MORE -- CHK FOR CONTINUATION-OVERFLOW    28270021
         BC    8,RLD016        BC IF NO TO PURGE BUFFER                 28310021
         LA    XIBCNT,1(XIBCNT)   YES -- RECOMPENSATE STRING COUNT      28350021
         BC    15,RLD0031      BC TO CONTINUATION PURGE                 28390021
RLD0153  EX    XIBCNT,MOVEJM1  MOVE CURRENT STRING INTO OUTPUT BUFFER   28430021
RLD0154  EX    0,MOVEJM1A      MOVE CURRENT STRING ID'S INTO BUFFER     28470021
RLD015X  L     R14,BUFSTCT     L BUFFERRED STRING COUNT                 28510021
         LA    XIBCNT,1(XIBCNT)  RECOMPENSATE STRING COUNT              28550021
         AR    R14,XIBCNT      ADD CURRENT STRING COUNT                 28590021
         ST    R14,BUFSTCT     SAVE UPDATED BUFFERED STRING COUNT       28630021
         LR    R14,XS2         L LOC OF CURRENT OUT BUFFER STRING       28670021
         AR    R14,XIBCNT      ADD CURRENT STRING COUNT                 28710021
         SH    R14,SFOUR       GET LOC OF TERMINAL F/A FIELD            28750021
         NI    0(R14),CONTN    CLEAR TERMINAL ITEM CONTINUATION FLAG    28790021
         AR    XOBCNT,XIBCNT   UPDATE BUFFER BYTE COUNT                 28830021
         STH   XOBCNT,OBCNT    SAVE UPDATED COUNT IN MODEL              28870021
         TM    RLDFLGS,CONTOV  CHK FOR CONTINUATION OVERFLOW FLAG       28910021
         BC    1,RLD0031       BC IF YES TO PURGE BUFFER                28950021
         C     XOBCNT,RLDSIZE  CHK BUFFERRED CT WITH MAXIMUM BUFFER     28990021
         LA    XRET,RLD0156    L RETURN ADDRESS                         29030021
*                                   NOTE -- THIS INSTRUCTION DOES NOT   29070021
*                                      CHANGE CONDITION CODE            29110021
         BC    11,RLDBUF       BC IF NOT LESS TO PURGE BUFFER           29150021
RLD0155  MVC   PRER(4),SAVIDS  SAVE CURRENT 'ID'S' AS PREVIOUS 'ID'S'   29190021
RLD0156  CH    XBCNT,TTR1      CHK IF END-OF-INPUT                      29230021
         BC    4,RLD002        NO -- CONTINUE PROCESSING RLD ITEMS      29270021
RLDRETX  BC    15,RLDRET       YES -- RETURN TO CALLER                  29310021
***                                 CLOSE TIMER HOOK                    29350021
         SPACE 2                                                        29390021
RLD016   LA    XIBCNT,1(XIBCNT)   RECOMPENSATE STRING COUNT             29430021
RLD0161  BAL   XRET,RLDBUF     PURGE RLD BUFFER                         29470021
         MVC   PREP(2),SAVIDS+2  INITIALIZE 'P' ID FOR NEW BUFFER       29510021
         MVC   RLDMULT(2),STM  SET STRING MULTIPLICITY IN ID MULTIPCTY  29550021
         B     RLD014               THEN INSERT STRING                  29590021
         EJECT                                                          29630021
*             FORM RLD NOTE LIST AND INITIATE WRITE OUT                 29670021
*                  RLD BUFFER/RLD NOTE LIST ROUTINE                     29710021
         SPACE 1                                                        29750021
RLDBUF   L     R14,BUFSTCT     L BUFFERED STRING COUNT                  29790021
         LTR   R14,R14         CHK IF ANY BYTE COUNT                    29830021
         BC    7,RLDBUF1       BC IF SOME                               29870021
         LR    R14,XIBCNT      L CURRENT STRING BYTE COUNT              29910021
         LTR   XIBCNT,XIBCNT   CHK IF ANY                               29950021
         BC    7,RLDBUF1       BC IF SOME                               29990021
RLDBUFA  TM    NEWSW,EOD       NONE -- CHK FOR END-OF-DATA              30030021
         BCR   8,XRET          RETURN IF NOT                            30070021
         LTR   XOBCNT,XOBCNT   EOD -- CHK FOR ANY BUFFERED CT REMAINING 30110021
         BC    7,RLDBUF1A      CONTINUE IF ANY                          30150021
         TM    NEWSW,TUPAS     NONE -- CHK FOR 2 PASS NOW               30190021
         BC    8,RLDBFRTN      RETURN IF NO                             30230021
         OI    RLDFLGS,FNLCHK                                   OX03655 30240002
         BC    15,RLDBUF3B     YES, 2 PASS -- CONTINUE PURGE CHECK      30270021
         SPACE 1                                                        30310021
RLDBUF1  TM    APT1,EX         CHK IF EXECUTABLE (LOAD) MODULE          30350021
         BC    8,RLDBUF1A      BC IF NO                                 30390021
         CLC   TTR1(2),ENRLD2X   LD MODULE -- CHK IF INPUT OVER MAXIMUM 30430021
         BC    2,ERR2          BC IF OVER MAXIMUM -- ERROR              30470021
         SPACE 1                                                        30510021
RLDBUF1A SRL   R14,2           DIVIDE BUFFERRED STRING COUNT BY 4       30550021
         STH   R14,WDCNT       SAVE WORD COUNT IN MODEL                 30590021
         TM    NEWSW,TUPAS     CHK FOR 2 PASS NOW                       30630021
         BC    1,RLDBUF1C      BC IF YES                                30670021
         NI    RLDMULT,RNBUF1  SET RLD'S-IN-BUFFER-1 FLAG               30710021
         L     R14,RLDOUT1     L LOC OF OUT-BUFFER 1                    30750021
         TM    BUFFS,BUFFRN2   CHK IF BUFFER 2 IS CURRENT               30790021
         BC    8,RLDBUF1B      BC IF NO                                 30830021
         OI    RLDMULT,RNBUF2  YES -- SET RLD'S-IN-BUFFER-2 FLAG        30870021
         L     R14,RLDOUT2     L LOC OF OUT-BUFFER 2                    30910021
RLDBUF1B NI    RLDMULT,GPF     SET GROUP FLAG IN MODEL                  30950021
         OI    RLDMULT,INCF    SET RLD-IN-CORE FLAG IN MODEL            30990021
RLDBUF1C LR    R15,XOBCNT      L CURRENT BUFFERRED BYTE COUNT           31030021
         SLL   R15,6           REDUCE TO WORD COUNT IN MODEL POSITION   31070021
         ST    R15,RTTR1       SAVE ACCUMULATED WORD COUNT IN MODEL     31110021
         SPACE 1                                                        31150021
         MVC   SFLIP(1),BUFFS  HOLD CURRENT BUFFER FLAG                 31190021
         NI    SFLIP,BUFFRN2   EXTRACT CURRENT BUFFER FLAG              31230021
         XI    SFLIP,BUFFRN2   FLIP NEXT BUFFER FLAG                    31270021
         LR    XS1,XIBCNT      L STRING COUNT                           31310021
         AR    XS1,XOBCNT      ADD BUFFERED BYTE COUNT                  31350021
         C     XS1,RLDSIZE     CHK AGAINST MAXIMUM BUFFER COUNT         31390021
         BC    13,RLDBUF3      BC IF NOT GREATER                        31430021
RLDBUF2  OI    RLDMULT,TTRF    SET END-OF-BUFFER FLAG IN MODEL          31470021
         TM    BUFFS,BUFFRN2   CHK IF BUFFER 2 IS CURRENT               31510021
         BC    8,RLDBUF2A      BC IF NO                                 31550021
         OI    BUFFS,BUFF2     YES -- SET BUFFER 2 FULL FLAG            31590021
         BC    15,RLDBUF2B                                              31630021
RLDBUF2A OI    BUFFS,BUFF1     SET BUFFER 1 FULL FLAG                   31670021
RLDBUF2B TM    NEWSW,TUPAS     CHK FOR 2 PASS NOW                       31710021
         BC    1,RLDBUF4A      BC IF YES                                31750021
         TM    BUFFS,BUFFRN2   NO -- CHK IF BUFFER 2 IS CURRENT         31790021
         BC    1,RLDBUF4       BC IF YES                                31830021
         STH   XOBCNT,OBCNT    SAVE CURRENT BUFFERRED BYTE COUNT        31870021
         MVC   OPREP(14),PREP  SAVE CURRENT MODEL FOR OPENER 1          31910021
         OI    BUFFS,OP1BF2    SET OPENER AND BUFFER 2 NOW FLAGS        31950021
         SR    XOBCNT,XOBCNT   CLEAR BUFFER 1 COUNT                     31990021
         SPACE 1                                                        32030021
         SPACE 1                                                        32070021
RLDBUF3  LH    XRIO,ENR1C      L CURRENT NOTE LIST ENTRY COUNT          32110021
         LA    XRIO,1(XRIO)    STEP FOR CHECK                           32150021
         CH    XRIO,ENR1X      CHK IF NOTE LIST WILL BE FULL            32190021
         BC    4,RLDBUF3A      BC IF NO                                 32230021
         TM    NEWSW,TUPAS     CHK FOR TWO PASS MODE                    32270021
         BC    1,RLDBUF32      BC IF YES                                32310021
         TM    BUFFS,BUFFRN2   ONE PASS MODE -- CHK FOR BUFFER 2 NOW    32350021
         BC    1,RLDBUF32      BC IF YES                                32390021
RLDBUF31 OI    RLDFLGS,NLFULL  SET NOTE LIST FULL FLAG                  32430021
RLDBUF32 OI    RLDFLGS,CHKNOW  SET CHECK NOW FLAG                       32470021
         OI    NEWSW,TUPAS     SET 2 PASS NOW FLAG                      32510021
         BC    15,RLDBUF2                                               32550021
RLDBUF3A TM    NEWSW,EOD       CHK FOR END-OF-DATA NOW                  32590021
         BC    8,RLDBUF6C      BC IF NO                                 32630021
RLDBUF3B OI    RLDMULT,TTRF    SET END-OF-BUFFER FLAG IN MODEL          32670021
         TM    NEWSW,TUPAS     CHK FOR TWO PASS FLAG                    32710021
         BC    8,RLDBUF6C      BC IF NO                                 32750021
         SPACE 1                                                        32790021
RLDBUF4  OI    NEWSW,TUPAS     SET 2 PASS FLAG                          32830021
RLDBUF4A TM    BUFFS,OPNR1     CHK FOR BUFFER 1 OPENER FLAG             32870021
         BC    8,RLDBUF5       BC IF NO                                 32910021
         STH   XOBCNT,OBCNT    SAVE CURRENT BUFFERRED BYTE COUNT        32950021
         MVC   CPREP(14),PREP  SAVE CURRENT MODEL FOR RESUME            32990021
         MVC   PREP(14),OPREP  RESTORE OPENER 1 MODEL TO CURRENT MODEL  33030021
         LH    XOBCNT,OBCNT    RESTORE OPENER 1 BUFFERRED BYTE COUNT    33070021
         NI    BUFFS,BUFFRN1   SET BUFFER 1 CURRENT FLAG                33110021
         SPACE 1                                                        33150021
RLDBUF5  L     XRIO,RNT1       L NOTE LIST STARTING LOC                 33190021
         SH    XRIO,SNINE      LESS 9 -- 1 ENTRY LENGTH                 33230021
         LH    XS1,ENR1C       L NOTE LIST ENTRY COUNT                  33270021
         LTR   XS1,XS1         CHK IF ANY COUNT                         33310021
         BC    7,*+8           BC IF SOME                               33350021
         LA    XS1,1(XS1)      NONE -- SET TO ONE                       33390021
RLDBUF5A LA    XRIO,9(XRIO)    STEP NOTE LIST ENTRY LOC ONE ENTRY       33430021
         NI    2(XRIO),NICF    CLEAR IN-CORE AND BUFFER 2 FLAGS         33470021
         BCT   XS1,RLDBUF5A    LOOP TO NEXT ENTRY                       33510021
         SPACE 1                                                        33550021
RLDBUF6  TM    BUFFS,WRIT2     CHK IF ANY BUFFER WRITTEN YET            33590021
         BC    8,RLDBUF7C      BC IF NONE                               33630021
         OI    RLDFLGS,CHKNOW  SET CHECK NOW FLAG                       33670021
RLDBUF6A STH   XOBCNT,OBCNT    SAVE CURRENT BUFFERRED BYTE COUNT        33710021
         MVC   CPREP(14),PREP  SAVE CURRENT MODEL FOR CHECK             33750021
         MVC   PREP(14),LPREP  RESTORE RESERVE MODEL TO CHECK           33790021
         LH    XOBCNT,OBCNT    RESTORE RESERVED BUFFERRED BYTE COUNT    33830021
         SPACE  1                                                       33870021
RLDWCHK  L     GR1,SAVETTR     L RESERVED TTR                           33910021
****             REMOVE ABOVE INSTRUCTION IF OVERLAP IS ADDED           33950021
****                           AND REPLACE WITH                         33990021
****     BAL   XRET2,COMCHK    CHECK AND NOTE                           34030021
         SPACE  1                                                       34070021
         SPACE 1                                                        34110021
         NI    RLDMULT,NICF    SET NOT-IN-CORE FLAG IN MODEL            34150021
         OI    RLDMULT,TTRF    SET TTR FLAG IN MODEL                    34190021
         ST    GR1,RTTR1       SET TTR IN MODEL                         34230021
         SPACE 1                                                        34270021
         TM    BUFFS,BUFFRN2   CHK IF BUFFER 2 IS CURRENT               34310021
         BC    1,RLDBUF6B      BC IF YES                                34350021
         OI    BUFFS,BUF2CHK   NO -- SET BUFFER 2 CHECKED FLAG          34390021
         NI    BUFFS,NBUF2WF   CLEAR BUFFER 2 FULL AND WRITTEN FLAGS    34430021
         BC    15,RLDBUF6C                                              34470021
RLDBUF6B OI    BUFFS,BUF1CHK   SET BUFFER 1 CHECKED FLAG                34510021
         NI    BUFFS,NBUF1WF   CLEAR BUFFER 1 FULL-WRITTEN FLAGS        34550021
RLDBUF6C LA    XRIO,9          L RLD NOTE LIST ENTRY LENGTH             34590021
         MH    XRIO,ENCT       MULTIPLY BY ENTRY COUNT                  34630021
         A     XRIO,RNT1       ADD NOTE LIST STARTING LOC TO FORM       34670021
*                                   CURRENT ENTRY LOC                   34710021
         MVC   0(9,XRIO),PREP  MOVE MODEL INTO RLD NOTE LIST ENTRY      34750021
RLDBUF6D SR    R14,R14         CLEAR REGISTER                           34790021
RLDBUF6X ST    R14,BUFSTCT     CLEAR BUFFERRED STRING COUNT             34830021
         ST    R14,BUFSTLOC    CLEAR BUFFERED STRING LOCATION           34870021
         TM    RLDFLGS,CHKNOW  CHK FOR CHECK NOW                        34910021
         BC    8,RLDBUF7       BC IF NO                                 34950021
         MVC   PREP(14),CPREP  YES -- RESTORE CURRENT MODEL             34990021
         LH    XOBCNT,OBCNT    RESTORE CURRENT BUFFERRED BYTE COUNT     35030021
         TM    RLDFLGS,FNLCHK          CHECK FOR NO DATA        XA05742 35040003
         BO    RLDBUF71                BRANCH IF NO DATA        XA05742 35050003
RLDBUF7  LH    XRIO,ENCT       L RLD NOTE LIST ENTRY COUNT              35070021
         LA    XRIO,1(XRIO)    UPDATE BY 1                              35110021
         STH   XRIO,ENR1C      SAVE NEW COUNT IN APT                    35150021
         CH    XRIO,ENR1X      CHK IF NOTE LIST IS FULL                 35190021
         BC    10,RLDBUF7A     BC IF NOT LESS                           35230021
RLDBUF71 NI    RLDFLGS,NCHKNOW   LESS -- CLEAR CHECK NOW FLAGS  XA05742 35270003
         BC    15,RLDBUF7C     GO TO WRITE                              35310021
RLDBUF7A TM    RLDFLGS,NLFULL  NOT LESS -- CHK FOR NOTE LIST FULL FLAG  35350021
         BC    1,RLDBUF7B      BC IF YES                                35390021
         OI    RLDFLGS,NLFULL  NO -- SET NOTE LIST FULL FLAG NOW        35430021
         BC    15,RLDBUF7C     GO TO WRITE                              35470021
RLDBUF7B NI    RLDFLGS,NLFLCHKN  CLEAR NOTE LIST FULL + CHK NOW FLAGS   35510021
         SPACE 1                                                        35550021
*THE RLD NOTE LIST IS FULL. AN ENTRY IS NOW MADE IN THE RLD I/O CONTROL 35590021
*TABE.IT CONTAINS A MAXIMUM OF 3 TTR'S OF THE RLD NOTE LIST. AN OVER-   35630021
*FLOW CONDITION WILL OCCUR IF THE NOTE LIST MUST BE PURGED AND THE RLD  35670021
*I/O CONTROL TABLE IS FULL.THE WORDS 'NOTE' AND 'MARK' ARE INTER-       35710021
*CHANGEABLE. HISTORICALLY BOTH TERMS HAVE BEEN USED.                    35750021
         SPACE 1                                                        35790021
BUFRMK2  TM    RLDFLGS,FULLR   CHK IF I/O CONTROL TABLE FULL            35830021
         BC    8,BUFROK        BC IF NOT FULL -- CONTINUE               35870021
         TM    APT4,REALOCTE       IS REALLOC POSSIBLE?          S01904 35910021
         BNO   BUFRMK2A            YES,TRY REALLOCATION          S01904 35950021
         LA    MSG,IEW0374     L ERROR CODE FOR I/O CTL TABLE OVERFLOW  35990037
         BC    15,ERROR        GO TO ERROR ROUTINE INTERFACE            36030021
BUFRMK2A S     XPSAV,RECNT             CALC RRNT OFFSET         YA05040 36040003
         STM   WRKREG0,WRKREGF,BRNCHSV  SAVE REGISTERS   S01904,YA05040 36070003
         L     BRANCH,ERDIGA       GET ADDR OF REALLOC RTN       S01904 36110021
         BALR  RETURN,BRANCH       GO TO REALLOC RTN             S01904 36150021
         LM    WRKREG0,WRKREGF,BRNCHSV  RESTORE REGISTERS        S01904 36190021
         A     XPSAV,RECNT             RELOCATE RNT POINTER     YA05040 36200003
         B     RLDBUF7C                                          S01904 36230021
         SPACE 1                                                        36270021
BUFROK   LA    R14,9           L LENGTH OF NOTE LIST ENTRY              36310021
         MH    R14,ENR1C       MULTIPLY BY ENTRY CT TO FORM DATA CT     36350021
         L     R15,RNT1        L DATA LOC                               36390021
         SPACE 1                                                        36430021
         BAL   XRET2,RLDBUFR   GO TO WRITE OUT NOTE LIST                36470021
         SPACE 1                                                        36510021
         BAL   XRET2,COMCHK    GO TO CHECK LAST WRITE                   36550021
         LA    R15,9           PREPARE TO CLEAR BUFFER  OX05132,OY04538 36560003
         MH    R15,ENR1C       COMPUTE NOTELIST LENGTH  OX05132,OY04538 36570003
         L     XRET2,RNT1      POINT TO NOTELIST START  OX05132,OY04538 36580003
         XR    R14,R14         CLEAR FOR DIVIDE         OX05132,OY04538 36582003
         D     R14,HEX100      HOW MANY MOVES?          OX05132,OY04538 36584003
         LTR   R15,R15         LESS THAN 256 BYTES?     OX05132,OY04538 36586003
         BZ    BUFRLEFT        YES, CHECK FOR REMAINDER OX05132,OY04538 36588003
BUFRCLR  EQU  *                                         OX05132,OY04538 36588103
         XC    0(256,GR5),0(GR5)  CLEAR 256 BYTES       OX05132,OY04538 36588403
         A     XRET2,HEX100     BUMP BUFFER POINTER     OX05132,OY04538 36588803
         BCT   R15,BUFRCLR      IF MORE TO MOVE, LOOP   OX05132,OY04538 36589203
BUFRLEFT EQU   *                                        OX05132,OY04538 36589603
         LTR   R14,R14          ANY REMAINDER?          OX05132,OY04538 36589703
         BZ    BUFRCLRD         NO, WE ARE DONE         OX05132,OY04538 36589803
         BCTR  R14,0            DECREMENT FOR EXECUTE   OX05132,OY04538 36589903
         EX    R14,CLEARIT      CLEAR REMAINDER         OX05132,OY04538 36603203
BUFRCLRD EQU   *                                        OX05132,OY04538 36613203
         SPACE 1                                                        36616703
         SPACE                                                          36630021
         LA    XS1,IOCT+12     L LOC OF START OF RLD I/O CTL TABLE      36670021
         LR    XRMK2,XS1              L SAME IN XRMK2 AND               36710021
         SR    XRET2,XRET2         CLEAR REGISTER                S01904 36750021
         IC    XRET2,ENIRC         LNGTH IN REALLOC TBLE OX00029,S01904 36790000
         SR    WRKREG0,WRKREG0     CLEAR REGISTER                S01904 36830021
         IC    WRKREG0,ENIRC+1     LENGTH IN ORIG TABLE  OX00029,S01904 36870000
         AR    XRET2,WRKREG0       CURRENT LENGTH OF TABLE       S01904 36910021
         AR    XRMK2,XRET2                                       S01904 36950021
*THE TTR CONTAINED IN REG 1, IS STORED IN THE CURRENT RLD I/O CONTROL   36990021
*TABLE ENTRY                                                            37030021
         ST    GR1,0(XRMK2)    SAVE RLD NOTE LIST TTR IN CURRENT RLD    37070021
*                                 I/O CONTROL TABLE ENTRY               37110021
         LA    XRMK2,4(XRMK2)  STEP TO NEXT ENTRY LOC                   37150021
         SR    XRMK2,XS1       SUBTRACT LOC OF TABLE START              37190021
         TM    APT4,REALOCTE       WAS REALLOC DONE?             S01904 37230021
         BNO   BUFRMK2D            NO,USE BOTH BYTES OF ENIRC    S01904 37270021
         SR    XRMK2,WRKREG0            GET NEW TBL BYTES       OX00029 37280000
         STC   XRMK2,ENIRC         USE FIRST BYTE OF ENIRC       S01904 37310021
         B     BUFRMK2E                                          S01904 37350021
BUFRMK2D STH   XRMK2,ENIRC     SAVE UPDATED TABLE BYTE COUNT IN APT     37390021
BUFRMK2E LA    XRET2,4(XRET2)                                    S01904 37430021
*IF THE RLD I/O CONTROL TABLE IS FULL, THE 'FULLR' INDICATOR IS SET     37470021
*THIS MEANS THAT NO MORE BUFFERINGS OF THE RLD NOT LIST CAN OCCUR.      37510021
         CH    XRET2,XII       CHK IF RLD I/O CTRL TABLE FULL           37550021
         BC    4,BUFRMK3       BC IF NO TO CONTINUE                     37590021
         OI    RLDFLGS,FULLR   YES -- SET OVERFLOW FLAG                 37630021
BUFRMK3  SR    R0,R0                      RESET TO ZERO                 37670021
         NI    BUFFS,N2BUFWF   RESET BOTH FULL AND WRITTEN FLAGS        37710021
         STH   R0,ENR1C             RLD NOTE LIST ENTRY COUNT           37750021
         STH   R0,ENCT         RESET ENTRY COUNT IN MODEL               37790021
         OI    RLDFLGS,PURGE       SET PURGE FLAG                       37830021
         SPACE 2                                                        37870021
RLDBUF7C TM    NEWSW,TUPAS     CHK FOR 2 PASS FLAG                      37910021
         BC    8,RLDBUFBK      NO -- GO TO RETURN                       37950021
RLDBUF7D LTR   XOBCNT,XOBCNT   CHK FOR ANY BUFFERRED COUNT              37990021
         BC    8,RLDBUF8A      BC IF NONE                               38030021
         TM    RLDMULT,TTRF    CHK FOR END-OF-BUFFER FLAG               38070021
         BC    8,RLDBUF8A      BC IF NO                                 38110021
         LR    R14,XOBCNT      L BUFFERED BYTE COUNT IN REG E           38150021
         TM    BUFFS,BUFFRN2   CHK IF BUFFER 2 IS CURRENT               38190021
         BC    1,RLDBUF7E      BC IF YES                                38230021
         L     R15,RLDOUT1     NO -- L LOC OF BUFFER 1                  38270021
         SPACE 1                                                        38310021
         BAL   XRET2,RLDBUFR   GO TO WRITE OUT BUFFER 1                 38350021
         BAL   XRET2,COMCHK            CHECK AND NOTE                   38390021
****             REMOVE ABOVE INSTRUCTION IF OVERLAP IS ADDED           38430021
         ST    GR1,SAVETTR             SAVE TTR                         38470021
****             REMOVE ABOVE INSTRUCTION IF OVERLAP IS ADDED           38510021
         SPACE 1                                                        38550021
         OI    BUFFS,BUFW1     SET BUFFER 1 WRITTEN FLAG                38590021
         NI    BUFFS,NBUF1CHK  CLEAR BUFFER 1 CHECKED FLAG              38630021
         BC    15,RLDBUF7F                                              38670021
RLDBUF7E L     R15,RLDOUT2     L LOC OF BUFFER 2                        38710021
         SPACE 1                                                        38750021
         BAL   XRET2,RLDBUFR   GO TO WRITE OUT BUFFER 2                 38790021
         BAL   XRET2,COMCHK            CHECK AND NOTE                   38830021
****             REMOVE ABOVE INSTRUCTION IF OVERLAP IS ADDED           38870021
         ST    GR1,SAVETTR             SAVE TTR                         38910021
****             REMOVE ABOVE INSTRUCTION IF OVERLAP IS ADDED           38950021
         SPACE 1                                                        38990021
         OI    BUFFS,BUFW2     SET BUFFER 2 WRITTEN FLAG                39030021
         NI    BUFFS,NBUF2CHK  CLEAR BUFFER 2 CHECKED                   39070021
RLDBUF7F STH   XOBCNT,OBCNT    SAVE CURRENT BUFFERRED BYTE COUNT        39110021
         MVC   LPREP(14),PREP  SAVE WRITTEN MODEL FOR CHECK             39150021
         SR    XOBCNT,XOBCNT   CLEAR BUFFERRED BYTE COUNT               39190021
         TM    BUFFS,OPNR1     CHK FOR BUFFER 1 OPENER FLAG             39230021
         BC    8,RLDBUF8       BC IF NO                                 39270021
         MVC   PREP(14),CPREP  RESTORE CURRENT MODEL                    39310021
         LH    XOBCNT,OBCNT    RESTORE CURRENT BUFFERRED BYTE COUNT     39350021
         OI    BUFFS,BUFFRN2   SET BUFFER 2 CURRENT FLAG                39390021
         NI    BUFFS,NOPNR1    CLEAR BUFFER 1 OPENER FLAG               39430021
RLDBUF8  TM    BUFFS,FULL2     CHK FOR 2 BUFFERS FULL                   39470021
         BC    1,RLDBUF6       LOOP TO CHECK, THEN WRITE                39510021
         TM    RLDFLGS,PURGE   CHK FOR PURGE FLAG                       39550021
         BC    8,RLDBUF8A      BC IF NONE                               39590021
         NI    RLDFLGS,NPURGE  YES -- CLEAR PURGE FLAG                  39630021
         BC    15,RLDBUF6D     GO TO STEP NOTE LIST ENTRY COUNT         39670021
RLDBUF8A TM    RLDFLGS,CHKNOW  CHK FOR CHECK NOW FLAG                   39710021
         BC    1,RLDBUF6A      BC IF YES TO CHECK                       39750021
         TM    RLDFLGS,FNLCHK  CHK IF FINAL CHECK FLAG                  39790021
         BC    1,RLDBUF8B      BC IF YES                                39830021
         TM    NEWSW,EOD       CHK FOR END-OF-DATA NOW                  39870021
         BC    8,RLDBUF8C      BC IF NO                                 39910021
         OI    RLDFLGS,FNLCHK  SET FINAL CHECK FLAG                     39950021
         BC    15,RLDBUF3B     LOOP TO FINAL CHECK                      39990021
RLDBUF8B NI    RLDFLGS,NFNLCHK    CLEAR FINAL CHECK FLAG                40030021
RLDBUF8C TM    RLDMULT,TTRF    CHK FOR END-OF-BUFFER FLAG               40070021
         BC    8,RLDBUFBK      BC IF NO                                 40110021
         NI    BUFFS,BUFFRN1   CLEAR BUFFER 2 CURRENT FLAG              40150021
         OC    BUFFS(1),SFLIP  SET FLAG FOR NEXT BUFFER                 40190021
RLDBUFBK SR    XRIO,XRIO       CLEAR REGISTER                           40230021
         BCTR  XRIO,0          INVERT                                   40270021
         STH   XRIO,PRER       RESET PREVIOUS 'R' ID                    40310021
         STH   XRIO,PREP       RESET PREVIOUS 'P' ID                    40350021
RLDBFBK1 LH    XRIO,ENR1C         L UPDATED NOTE LIST ENTRY COUNT       40390021
         STH   XRIO,ENCT                  AND SET IN MODEL              40430021
         MVI   RLDMULT,STMULT  RESET RLD ITEM MULTIPLICITY              40470021
         SPACE 1                                                        40510021
*       CHECK FOR END-OF-OUTPUT-MODULE FLAG.  INITIALIZE PROCESS        40550021
*                 FLAGS IF FOUND AND RETURN TO CALLER.                  40590021
         SPACE 1                                                        40630021
RLDBFRTN TM    NEWSW,EOD       CHK FOR END-OF-OUTPUT-MODULE FLAG        40670021
         BCR   8,XRET          RETURN IF NO                             40710021
         MVI   PRER,X'FF'      YES -- INITIALIZE PREVIOUS 'R' ID        40750021
         MVC   PRER+1(3),PRER  INITIALIZE PREVIOUS 'P' ID               40790021
         MVI   WDCNT,X'00'            INITIALIZE                        40830021
         MVC   WDCNT+1(21),WDCNT    CONTROL AREAS                       40870021
           MVC   CALLCURP(2),CONZO                                      40910021
         BCR   15,XRET         RETURN                                   40950021
         SPACE 2                                                        40990021
     TITLE 'HEWLFRAT   RLD/TXT PROCESSOR  --  RLD CONSTANTS'            41030021
DCBAD    DC    A(HEWLCUDB)                                              41070021
ADDEL    DC    V(HEWLCDLK)                                              41110021
*                                    PROCESSED CSECTS IN BUFFER         41150021
DELR     DC    X'0000'          DELINKED R POINTER SAVE AREA            41190021
CONZO    DC    H'0'                                                     41230021
******** ERROR MSG **************************************************** 41270037
IEW0284  DC    X'241C'  FAILURE TO OPEN DCB CODE                        41280037
IEW0222  DC    X'1216'                                                  41290037
IEW0614  DC    X'243D'      NO LENGTH SPACIFIED IN CESD                 41295037
*********************************************************************** 41300037
XII      DC    H'12'                                                    41310021
CLEARIT  XC    0(0,XRET2),0(XRET2)     FOR RLD NOTELIST CLR     OX05132 41320003
HEX100   DC    F'256'                  FOR RLD NOTELIST CLR     OX05132 41330003
         SPACE 2                                                        41350021
*                    RLD NOTE LIST ENTRY MODEL                          41390021
         SPACE 1                                                        41430021
         CNOP  0,4       ALIGN TO START PREP ON HALF WORD               41470021
PRER     DC    X'FFFF'   PREVIOUS 'R' ID                                41510021
PREP     DC    X'FFFF'   PREVIOUS 'P' ID                                41550021
RLDMULT  DC    X'0200'   FLAG-MULTIPLICITY FIELD                        41590021
*                          BIT 0 -- 0 -- RLD NOT IN CORE                41630021
*                                   1 -- RLD IN CORE                    41670021
*                          BIT 1 -- 0 -- GROUPED ENTRY                  41710021
*                                   1 -- TTR ENTRY                      41750021
*                          BIT 2 -- RESERVED                            41790021
*                          BIT 3 -- 0 -- IN BUFFER 1                    41830021
*                                   1 -- IN BUFFER 2                    41870021
*                          BIT 4 -- RESERVED                            41910021
*                          BIT 5 -- RESERVED                            41950021
*                          BITS 6-15 -- MULTIPLICITY ID                 41990021
WDCNT    DC    X'0000'   RLD WORD COUNT                                 42030021
RTTR1    DC    X'00000000'   TTR/ACCUMULATED WORD COUNT FIELD           42070021
OBCNT    DC    X'0000'   RLD BYTE COUNT                                 42110021
ENCT     DC    X'0000'   RLD NOTE LIST ENTRY COUNT                      42150021
         DC    X'0000'   RESERVED                                       42190021
RLDFLGS  DC    X'0'      RLD PROCESSING FLAGS                           42230021
*                          BIT 0 -- 1 -- CONTINUED STRING OVERFLOWS     42270021
*                                          BUFFER                       42310021
*                          BIT 1 -- 1 -- NEW GROUPED STRING OVERFLOWS   42350021
*                                          BUFFER                       42390021
*                          BIT 2 -- 0 -- I/O CONTROL TABLE NOT FULL     42430021
*                                   1 -- I/O CONTROL TABLE FULL         42470021
*                          BIT 3 -- 0 -- NOTE LIST NOT FULL             42510021
*                                   1 -- NOTE LIST FULL                 42550021
*                          BIT 4 -- 0 -- NO NOTE LIST PURGE NOW         42590021
*                                   1 -- NOTE LIST PURGED NOW           42630021
*                          BIT 5 -- 0 -- NO CHECK LAST WRITE NOW        42670021
*                                   1 -- CHECK LAST WRITE NOW           42710021
*                          BIT 6 -- 0 -- NOT FINAL CHECK                42750021
*                                   1 -- FINAL CHECK AT EOD             42790021
         EJECT                                                          42830021
BUFFS    DC    X'0'      RLD BUFFER CONTROL FLAGS                       42870021
*                          BIT 0 -- 1 -- BUFFER 1 OPENER                42910021
*                          BIT 1 -- 1 -- BUFFER 2 CHECKED               42950021
*                          BIT 2 -- 1 -- BUFFER 1 CHECKED               42990021
*                          BIT 3 -- 1 -- BUFFER 2 WRITTEN               43030021
*                          BIT 4 -- 1 -- BUFFER 1 WRITTEN               43070021
*                          BIT 5 -- 1 -- BUFFER 2 FULL                  43110021
*                          BIT 6 -- 1 -- BUFFER 1 FULL                  43150021
*                          BIT 7 -- 0 -- BUFFER 1 CURRENT               43190021
*                                   1 -- BUFFER 2 CURRENT               43230021
         SPACE 1                                                        43270021
         SPACE 1                                                        43310021
BUFSTCT  DC    F'0'      BUFFERRED STRING COUNT                         43350021
BUFSTLOC DC    F'0'      BUFFERRED STRING STARTING LOCATION             43390021
         SPACE 2                                                        43430021
*          MODEL TO HOLD WRITE TIME ENVIRONMENT FOR CHECK USE           43470021
         SPACE 1                                                        43510021
         CNOP  2,4       ALIGN TO START LPREP ON HALF WORD              43550021
LPREP    DC    X'0000'   CESD ID FIELD                                  43590021
LRLDMULT DC    X'0200'   FLAG-ADDRESS FIELD                             43630021
LWDCNT   DC    X'0000'   RLD WORD COUNT                                 43670021
LRTTR1   DC    X'00000000'     TTR/STORAGE ADDRESS FIELD                43710021
LOBCNT   DC    X'0000'   RLD BYTE COUNT                                 43750021
LENCT    DC    X'0000'   RLD NOTE LIST ENTRY COUNT                      43790021
         DC    X'0000'   RESERVED                                       43830021
         SPACE 2                                                        43870021
*            MODEL TO HOLD INITIAL BUFFER LOAD ENVIRONMENT              43910021
         SPACE 1                                                        43950021
         CNOP  2,4       ALIGN TO START OPREP ON HALF WORD              43990021
OPREP    DC    X'0000'   CESD ID FIELD                                  44030021
ORLDMULT DC    X'0200'   FLAG-ADDRESS FIELD                             44070021
OWDCNT   DC    X'0000'   RLD WORD COUNT                                 44110021
ORTTR1   DC    X'00000000'     TTR/STORAGE ADDRESS FIELD                44150021
OOBCNT   DC    X'0000'   RLD BYTE COUNT                                 44190021
OENCT    DC    X'0000'   RLD NOTE LIST ENTRY COUNT                      44230021
         DC    X'0000'   RESERVED                                       44270021
         SPACE 2                                                        44310021
*      MODEL TO HOLD CURRENT ENVIRONMENT WHILE PREVIOUS ONE IS USED     44350021
         SPACE 1                                                        44390021
         CNOP  2,4       ALIGN TO START CPREP ON HALF WORD              44430021
CPREP    DC    X'0000'   CESD ID FIELD                                  44470021
CRLDMULT DC    X'0200'   FLAG-ADDRESS FIELD                             44510021
CWDCNT   DC    X'0000'   RLD WORD COUNT                                 44550021
CRTTR1   DC    X'00000000'     TTR/STORAGE ADDRESS FIELD                44590021
COBCNT   DC    X'0000'   RLD BYTE COUNT                                 44630021
CENCT    DC    X'0000'   RLD NOTE LIST ENTRY COUNT                      44670021
         DC    X'0000'   RESERVED                                       44710021
         SPACE 2                                                        44750021
TEMP     DS    X                                                XA04649 44760003
TXT001AD DC    A(HEWLFTXT)     LOC OF TEXT PROCESSING ROUTINE           44790021
TXTBUFAD DC    A(TXTBUF) LOC OF TEXT PURGE ROUTINE                      44830021
RATADR   DC    A(RATLOC) RLD STANDARD BASE REGISTER VALUE               44870021
FOUR     DC    F'4'                    OFFSET FOR RNT TABLE      A53300 44880000
TTR1     DC    F'0'      STORAGE FOR TTR OR INPUT COUNT                 44910021
INADD1   DC    F'0'      RETURN TO INPUT PROCESSOR                      44950021
SBACKUP  DC    F'0'      SAVE AREA FOR REPLACEMENT STRING POINTER       44990021
SAVIDS   DC    F'0'      SAVE AREA FOR REPLACEMENT ID'S                 45030021
SAVETTR  DC    F'0'      SAVE AREA FOR TTR                              45070021
STRUNC   DC    X'000003FF'     MULTIPLICITY SIZE LIMITOR                45110021
RIDMSK   DC    X'00007FFF'     MASK FOR 'R' ID                          45150021
         SPACE 1                                                        45190021
SAVIDR   DC    H'0'      RESERVE AREA FOR RLD ITEM 'R' ID               45230021
CALLCURP DC    H'0'                                                     45270021
POSMULT  DC    H'0'      RESERVE AREA FOR POSSIBLE LOWEST MULTIPLICITY  45310021
STM      DC    X'0200'   RESERVE AREA FOR STRING MULTIPLICITY           45350021
SONE     DC    H'1'      DECIMAL 1                                      45390021
SFOUR    DC    H'4'      DECIMAL 4                                      45430021
SSEVEN   DC    H'7'      DECIMAL 7                                      45470021
SNINE    DC    H'9'      DECIMAL 9                                      45510021
         SPACE 1                                                        45550021
NFLG     DC    X'0'      TEMPORARY RESERVE AREA FOR FLAGS               45590021
FLAG     DC    X'0'                                                     45630021
         SPACE 1                                                        45670021
SFLIP    DC    X'00'     TEMPORARY STORAGE FOR BUFFER FLAGS             45710021
         DS    0H                                                       45750021
FIVEFIVE DC    H'5'                                                     45790021
DLKTSAVE DC    H'0'                                                     45830021
         SPACE 2                                                        45870021
PATCH1   DC    35D'0'                                                   45910037
     TITLE 'HEWLFRAT   RLD/TXT PROCESSOR  --  TEXT PROCESSING'          45950021
HEWLFTXT CSECT                                                          45990021
         SPACE 3                                                        46030021
*                                                                       46070021
*                     T E X T    P R O C E S S O R                      46110021
*                                                                       46150021
         SPACE 2                                                        46190021
*      THIS ROUTINE PROCESSES ALL TXT INPUT FOR EVERY LINKEDIT. THE ID  46230021
*  IS RENUMBERED VIA THE RENUMBERING TABLE AND THE MULTIPLICITY IS      46270021
*  DETERMINED AS A FUNCTION OF A SYSLMOD RECORD.   AFTER SPACE HAS BEEN 46310021
*  ALLOCATED IN THE TXTBUFFER AND AN ENTRY MADE IN THE TXTIO TABLE AND  46350021
*  TEXT NOTELIST(FIRST APPEARANCE ONLY),THE TEXT IS MOVED(OBJ) OR READ  46390021
*  DIRECTLY(LM) INTO THE TXTBUFFER.                                     46430021
         SPACE 2                                                        46470021
*                                                                       46510021
*              GENERAL  REGISTER UTILIZATION                            46550021
*                                                                       46590021
RID1     EQU   1         GENERAL WORK REGISTER IN INITIAL LOAD MODULE   46630021
*                             PROCESSING                                46670021
COUNT    EQU   4         WILL MAINTAIN INPUT COUNT AS PASSED BY LMINP   46710021
RID      EQU   5         WILL MAINTAIN RENUMBERED ID                    46750021
REG6     EQU   6         WORK REGISTER FOR LM PROCESSING & TXTBUF       46790021
RIP      EQU   6         LOCATION OF OBJECT MODULE TEXT PRIOR TO MOVE   46830021
*                        INTO PROPER LOCATION IN THE TEXT BUFFER        46870021
TXTBASE  EQU   7         BASE REGISTER FOR TEXT PROCESSOR -             46910021
*                        REG 12 IS BASE FOR RLD PROCESSOR               46950021
XSTX     EQU   7         LINK REGISTER WHEN RETURNING TO MINP FOR LM    46990021
DCBADD   EQU   8         READ. REG 8 HAS DCB ADDRESS                    47030021
GR8      EQU   8         GENERAL WORK REG                               47070021
XTMK2    EQU   8         WORK REG WHEN TEXT NOTE LIST WRITTEN           47110021
READCNT  EQU   9         REGISTER TO PASS LENGTH TO MINP FOR LM READ    47150021
RLK      EQU   9         GENERAL                                        47190021
BUFFADDR EQU   10        LOCATION FOR LM READ PASSED TO MINP            47230021
XP1      EQU   10        GENERAL                                        47270021
XP2      EQU   11        GENERAL                                        47310021
* REG12 - RLD PROCESSOR BASE - REQUIRED WHEN RETURNING FOR ANY COMMON   47350021
*     AREA (WRITE ROUTINE,ERROR HANDLING,AND NORMAL RETURN )            47390021
         EJECT                                                          47430021
         SPACE                                                          47470021
*                                                                       47510021
*                   MASKS AND FLAGS FOR HEWLFTXT                        47550021
*                                                                       47590021
         SPACE                                                          47630021
FLAGOUT  EQU   X'03'            MASK TO ZERO FLAG FIELD IN TXTIO        47670021
READSW   EQU   X'04'      INDICATOR WHEN A READ IS TO BE ISSUED         47710021
READOFF  EQU   X'FB'        TURN OFF THE READ SW                        47750021
DENSE1   EQU   X'40'        FOR INTERNAL INDICATOR                      47790021
DENSE    EQU   X'20'                                                    47830021
TTRDEN   EQU   X'60'              MASK FOR TTR AND DENSE RECORD         47870021
INCORE   EQU   X'80'              MASK FOR TXTIO FLAG                   47910021
NOLEN    EQU   X'80'                                                    47950021
EOF      EQU   X'01'     END OF INPUT SWITCH                            47990037
FULLT    EQU   X'40'                                                    48090037
SHORTRD  EQU   X'20'            MASK FOR SHORT READ FOR LM              48190021
*                     ALL ITEMS IN CONTROL RECORD TO BE DELETED         48230021
SHORTRD1 EQU   X'DF'         MASK TO RESET SHORT READ SWITCH            48270021
NOLEN1   EQU   X'10'                                                    48310021
NOLEN2   EQU   X'08'       NOLENGTH INDICATOR FOR NAME CARD             48350021
NOLEN3   EQU   X'18'          MASK FOR NOLENGTH IN GENERAL              48390021
NOGRPPG  EQU  X'10'           FLAG SIGNIFING A NONGROUPED PURGE REQ     48430021
SPTXTON  EQU   X'80'                    FLAG FOR SPEC LM TEXT   OY00356 48440001
SPTXTOFF EQU   X'7F'                    RESET SPEC LM TEXT FLAG OY00356 48450001
         SPACE 2                                                        48470021
*    *    *    *    *    *    *    *    *    *    *    *    *    *    * 48510021
         EJECT                                                          48550021
         B     TXTINT         BRANCH AROUND IDENTIFIER                  48590037
MODID2   DC    C' START TXT CSECT  '                                    49090037
         DC    0H'0'                                                    49590037
* INITIALIZE     -  WILL SAVE MUCH REPETITION LATER                     50190021
*       TXTFREE - ADDRESS OF NEXT FREE ENTRY IN TXTIO TABLE             50230021
*       TNTFREE - ADDRESS OF NEXT FREE ENTRY IN TXT NOTE LIST           50270021
TXTINT   LH    GR1,ENTOC             PICK UP TXTIO OFFSET       ZA01405 50310002
         ST    GR1,TXTFREE           PRESERVE TXTIO OFFSET      ZA01405 50390002
         A     GR1,TXTIO             COMPUTE TXTIO POINTER      ZA01405 50400002
         LA    R0,7                  CALC 7 BYTES PER TNT ENTRY         50430002
         MH    R0,ENT1C              TIMES CURRENT NO. OF ENTRIES       50470002
         ST    R0,TNTFREE            PRESERVE TNT OFFSET        ZA01405 50480002
         A     R0,TNT1               COMPUTE TNT POINTER                50510002
* WE KNOW THE CURRENT ID AND MULTIPLICITY                               50590021
         TM    APTSW3,XPDIND           EXPAND REQUEST?           Y01031 50600017
         BO    TXT002A                 IF SO, BRANCH             Y01031 50610017
         CLC   PID(2),CURID   CHECK IF ID IA A REPEAT                   50630021
         BC    7,TXT002          NO - BRANCH                            50670021
         CLC   PMULN(2),CMULN   HAS THE MULT CHANGED                    50710021
         BC    7,TXT002X     YES - BRANCH                       OY00356 50750001
         TM    APT1,EX    IS THIS A LOAD MODULE                         50790021
         BC    1,TXTLM3       YES BRANCH  ID ID THE SAME                50830021
         TM    SWITCH,DENSE1  WAS LAST THING WE WE DEALING WITH A DENSE 50870021
         BC    1,TXTDEN         RECORD                                  50910021
         L     GR1,LASTTNT      OBTAIN LAST NOTELIST ADDR               50950021
         A     GR1,TNT1                RELOCATE TNL POINTER     XA05743 50960003
         B     TXTINSRT                                                 50990021
* SECOND PHASE                                                          51030021
* THE ID  AND OR MULT HAVE CHANGED -                                    51070021
*                                                                       51110021
*                                                                       51150021
TXT002   TM    SWITCH,NOLEN   WAS PREVIOUS ENTRY A NO LENGTH            51190021
         BC    14,TXT002A                                               51230021
*                                                                       51270021
TXTN1    MVC   HOLD1(4),CURID      PRESERVE CURRENT ID                  51310021
         MVC   CURID(2),PID        RESTORE OLD ID                       51350021
         TM    SWITCH,DENSE1        IS THERE DENSE ENTRY TO CLEAR UP    51390021
         BC    14,TXTN5         NO - BRANCH                             51430021
         L     XS1,TNTFREE             PICK UP TNT OFFSET               51470002
         A     XS1,TNT1                COMPUTE TNT POINTER      ZA01405 51480002
         SH    XS1,TSEVEN              SET UP PARAMETER FOR DENSE PURGE 51510002
         BAL   XP2,TXTNIO         GO TO DENSE PURGE                     51550021
TXTN5    NI    SWITCH,X'3F'      CLEAR DENSE AND NOLEN BITS             51590021
         OI    SWITCH,NOLEN2                                            51630021
         B     BUFFALL    FIND NUMBER OF MULT AND LENGTH OF             51670021
*                                   LAST ONE                            51710021
TXT002X  EQU   *                                                OY00356 51720001
         OI    SWITCH+1,SPTXTON         INDICATE CHANGED MULT   OY00356 51730001
TXT002A  TM    SWITCH,DENSE1   WAS PREVIOUS ENTRY DENSE                 51750021
         BC    14,TXT002B         BRANCH LAST NOT DENSE                 51790021
         NI    SWITCH,X'BF'   TUNN OF INDICATOR                         51830021
         L     XS1,TNTFREE             PICK UP TNT OFFSET               51870002
         A     XS1,TNT1                COMPUTE TNT POINTER      ZA01405 51880002
         SH    XS1,TSEVEN   SET UP NOTELIST ADDR                        51910021
         BAL   XP2,TXTNIO         WRITE OUT LAST PIECE                  51950021
TXT002B  MVC   PID(4),CURID    UPDATE PAST ID TO AGREE WITH CURRENT     51990021
         TM    APT1,EX      IS THIS A LOAD MOD                          52030021
         BC    8,TXT003      NO - BRANCH                                52070021
         TM    SWITCH,READSW     HAS THE READ BEEN ISSUED               52110021
         BC    8,TXT002BB       YES  BRANCH                             52150021
         L     R0,TXTBFBEG     ADD THE TXTBUF ADDR TO THE               52190021
         A     R0,BUFDISP       DISPLAC IN THE BUFF TO FIND             52230021
         AR    R0,COUNT                IF THE NEXT READ WILL FIT        52270021
         AH    R0,CDISP                ADD WHAT'S BEEN ALLOCATED A38306 52310021
         C     R0,TXTBFEND                                              52350021
         BC    12,TXT002BB       BR IF IT WILL FIR                      52390021
         BAL   RLK,TXTBUF                                               52430021
         SR    RLK,RLK     RESET DISPLACE IN TXTBUF TO                  52470021
         ST    RLK,BUFDISP      XERO                                    52510021
TXT002BB TM    APTSW3,XPDIND           EXPAND REQUEST?           Y01031 52550000
         BO    TXT003                  IF SO, BRANCH             Y01031 52552000
         TM    APT1,EX                                           Y01031 52560000
         BC    1,BUFALLOC                                               52590021
*                                                                       52630021
*  NOW CAN SEARCH TXTIO TO SEE IF THIS ID AND MULT HAVE EVER APPEARED   52670021
*     BEFORE                                                            52710021
*                                                                       52750021
TXT003   SR    GR8,GR8        GR8 WILL CONTAIN NOTE LIST DISPLACEMENT   52790021
         L     XS2,TXTIO               PICK UP TXTIO ADDR       ZA01405 52800002
         LR    XS1,XS2                 COPY FOR POINTER CALC    ZA01405 52810002
         A     XS1,TXTFREE             COMPUTE TXTIO POINTER    ZA01405 52830002
         CR    XS1,XS2        ANYTHING IN THE TABLE                     52910021
         BC    8,TXTNEW                                                 52950021
TXT003A  CLC   CURID(2),0(XS2) COMPARE ID FIELD FIRST                   52990021
         BC    8,TXT003B       BRANCH ON A MATCH                        53030021
TXT003C  LA    XS2,4(XS2)                                               53070021
         LA    GR8,7(GR8)                                               53110021
         CR    XS2,XS1                                                  53150021
         BC    4,TXT003A                                                53190021
*  HAVE NEW ID  - TEST IF LENGTH PRESENT IN CESD                        53230021
TXTNEW   TM    SWITCH,NOLEN3                                            53270021
         BC    7,TXTNL6B        ENTRY NO FOUND  RETURN                  53310021
         LH    XS1,CURID                                                53350021
         SLL   XS1,4                                                    53390021
         A     XS1,CHESD                                                53430021
         CLC   13(3,XS1),CONZO1    CESD LENGTH EQU ZERO                 53470021
         BC    7,TXT003D      BRANCH IF LENGTH SPECIFIED                53510021
         OI    SWITCH,NOLEN                                             53550021
TXT003D  B     BUFALLOC                                                 53590021
*                                                                       53630021
*ID MATCHED-MUST CHECK MULT -  FIRST 10 BITS OF TXTIO ENTRY             53670021
TXT003B  LH    GR5,2(XS2)                                               53710021
         N     GR5,MULTONLY     ZERO OUT THE TOP 22 BITS                53750021
         CH    GR5,CMULN                                                53790021
         BC    8,TXTOLD       CONTINUE PROCESS ON A MATCH               53830021
         SH    XS1,SFOUR    POSITION TO LAST ENTRY IN TXTIO             53870021
         CLC   0(2,XS1),CURID  HAS THE ID CHANGED WE ARE PROCESSING     53910021
         BC    7,ABAFIX             YES-  MUST SET NONGRP PURGE NEC     53950021
TXT003B1 LA    XS1,4(XS1)     RESTORE THE ADDR OF FREE TXTIO ADDR       53990021
         B     TXT003C        OR CONTINUE SEARCH                        54030021
*                                                                       54070021
ABAFIX   OI    SWITCH+1,NOGRPPG   SIGNIFY A NONGROUPED PURGE NEC        54110021
         B     TXT003B1          GO BACJ TO RESTORE TXTIO FREE ADDR     54150021
TXTOLD   TM    APTSW3,XPDIND           EXPAND REQUEST?           Y01031 54160017
         BNO   TXTOLDX                 IF NOT, BRANCH            Y01031 54170017
         OI    SWITCH+1,NOGRPPG        SIGNIFY NON-GROUPED       Y01031 54180017
*                                      PURGE NECESSARY           Y01031 54180123
         AH    COUNT,CDISP             ADD TEXT LENGTH TO        Y01031 54180223
*                                      DISPLACEMENT IN MULT.     Y01031 54180323
         C     COUNT,MULTSIZE          DOES IT FILL THE MULT.?   Y01031 54180723
         BH    TXTOLDXX                IF SO, BRANCH     Y01031,XA05128 54181103
         OI    2(XS2),X'08'            INDICATE UNTRUE LENGTH    Y01031 54181623
*                                      IN PREVIOUS ENTRY         Y01031 54182023
TXTOLDXX SH    COUNT,CDISP             RESET TEXT LENGTH         Y01031 54184023
TXTOLDX  TM    SWITCH,NOLEN3                                     Y01031 54190017
         BC    7,TXTNL3                                                 54230021
         TM    2(XS2),INCORE       CHECK IF ALREADY WRITTEN             54270021
*  XP1- SIZE LAST MULT   XS2-TXTIO ADDR   GR8-TNT1 DISP                 54310021
         BC    8,TXTOLD1      BRANCH IF NOT                             54350021
         XR    RLK,RLK             CLEAR REGISTER                S01904 54390021
         XR    GR1,GR1             CLEAR REGISTER                S01904 54430021
         IC    GR1,ENITC+1         BYTES IN REALOC TXTIO CNTRL   S01904 54470021
         IC    RLK,ENITC           BYTES IN OLD TXTIO CNTRL      S01904 54510021
         AR    GR1,RLK             TOTAL BYTES IN CURRENT TBL    S01904 54550021
         LTR   GR1,GR1           TBL IN USE?                            54590021
         BC    8,TXTOLDA         IF NOT  BRANCH                         54630021
         LA    GR1,7                                                    54670021
         MH    GR1,TXTNOTE                                              54710021
         SR    GR8,GR1          SUB ACTUAL BYTES WRITTEN                54750021
TXTOLDA  L     GR1,TNT1                                                 54790021
         AR    GR1,GR8                                                  54830021
         TM    APTSW3,XPDIND           EXPAND REQUEST?           Y01031 54840017
         BNO   TXTINSRT             IF NOT, BRANCH                      54870002
TXTOLD1  L     GR8,BUFDISP     BEFORE SIGNALLING DENSE INFO             54910021
         A     GR8,MULTSIZE         CHECK THAT MULT SIZE CAN BE ALLOC   54950021
         A     GR8,TXTBFBEG          IF NOT  IT WILL ENTER PURGE        54990021
         C     GR8,TXTBFEND       EXPECTING LAST ITEM TO BE DENSE       55030021
         BC    12,TXTOLD2                                               55070021
         BAL   RLK,TXTBUF2          PURGE BEFORE SETTING SENSE          55110021
         SR    RLK,RLK            RESET PARA AFTER PURGE                55150021
         ST    RLK,BUFDISP                                              55190021
TXTOLD2  OI    SWITCH,DENSE1                                            55230021
         B     BUFALLOC                                                 55270021
*                                                                       55310021
*BUFALLOC  THIS ROUTINE WILL ALLOCATE REQUIRED SIZE IN BUFFER           55350021
*        PIECE     1 MULT                                               55390021
*        CSECT     1 MULT EXECPT FOR LAST                               55430021
*                       LAST MULT ACTUAL SIZE                           55470021
*                                                                       55510021
BUFALLOC TM    SWITCH,DENSE1  DEALING WITH OUT OF ORDER TEXT            55550021
         BC    8,BUFFALL               NO,BRANCH                        55590021
         TM    APT1,EX                 IS IT LOAD MODULE                55630021
         BC    8,BUF1                  NO,BRANCH                        55670021
         L     XS2,MULTSIZE            YES,PICK UP OUTPUT RECSIZE       55710021
         SH    XS2,CDISP               MULTSIZE-CDISP=TRUE SIZE         55750021
         TM    APTSW3,XPDIND           EXPAND TXT IN PROCESS    XA05128 55760003
         BNO   BUFOUT                  BRANCH IF NOT            XA05128 55770003
         CR    XS2,COUNT               LT REMAINDER OF MULT     XA05128 55780003
         BNH   BUFOUT                  BRANCH IF NOT            XA05128 55782003
         LR    XS2,COUNT               ALLOC ONLY EXPAND LENGTH XA05128 55784003
         B     BUFOUT                  GO TO ALLOCATE THAT MUCH         55790021
BUFFALL  TM    SWITCH,NOLEN   NOLENGTH WILL ALSO GET FULL MULT ALLOC    55830021
         BC    1,BUF1         UNTIL REAL SIZE KNOWN                     55870021
         LH    XS1,CURID      MUST CHECK SIZE IN CESD                   55910021
         SLL   XS1,4                                                    55950021
         A     XS1,CHESD                                                55990021
         CLC   13(3,XS1),CONZO1     IS CESD LENGTH ZERO                 56030021
         BC    7,BUFFALL1                                               56070021
         LH    R0,IEW0614      LOAD ERROR PARA                          56110037
         LR    GR1,XS1                                                  56150021
         B     ERROR                                                    56190021
BUFFALL1 CLC   13(3,XS1),MULTSIZE+1  IF THE CESD SIZE EXCEEDS MULT      56230021
         BC    2,BUF2              BRANCH                               56270021
         LH    XS2,14(XS1)         SIZE = CESD SIZE                     56310021
         SR    XP2,XP2     SET HIGHEST MULT TO ZER/                     56350021
         B     BUFOUT11                                                 56390021
BUF2     L     XP2,12(XS1)    PICK UP ACTUAL CESD LENGTH                56430021
         LA    XP2,0(XP2)    CLEAR HIGH ORDER BYTE                      56470021
         SR    XP1,XP1                                                  56510021
         D     XP1,MULTSIZE                                             56550021
         LTR   XP1,XP1            IF THE REMAINDER IS ZERO IT IS        56590021
         BC    7,BUF1A            NECESSARY TO DECREMENT THE MULT ONE   56630021
         BCTR  XP2,0                                                    56670021
         L     XP1,MULTSIZE       INSERT FULL SIZE                      56710021
BUF1A    TM    SWITCH,NOLEN3                                            56750021
         BC    7,BUF1A1                                                 56790021
         CH    XP2,CMULN           IS THIS THE LAST MULT                56830021
         BC    7,BUF1               FULL MULT                           56870021
BUF1A1   LR    XS2,XP1          GET CORRECT LENGTH FOR NO LEN           56910021
BUFOUT11 LA    XS2,7(XS2)              MUST ALLOC THE LAST MULT ON      56950021
         N     XS2,DBLWRD                 A DOUBLEWORD BOUNDARY         56990021
         TM    SWITCH,NOLEN3                                            57030021
         BC    8,BUFOUT                                                 57070021
         LR    XP1,XS2          SAVE LENGTH FOR NO LENGTH               57110021
         B     TXTNL2                                                   57150021
BUF1     L     XS2,MULTSIZE                                             57190021
BUFOUT   LR    R0,R15                                                   57230021
         L     GR1,BUFDISP                                              57270021
         A     GR1,TXTBFBEG                                             57310021
         ST    GR1,BUFSTART                                             57350021
         A     R0,BUFDISP                                               57390021
         ST    R0,BUFDISP                                               57430021
         A     R0,TXTBFBEG        HAVE WE EXCEEDED BUFFER LIMITS        57470021
         C     R0,TXTBFEND                                              57510021
         BC    12,BUFCLR     ******REMOVE WHENBUFCLR NO LONGER          57550021
*         NECESSARY    REPLACE WITH    BC   10,BUFENT                   57590021
         ST    XS2,BUFDISP                                              57630021
         ST    XS2,SPACES                                               57670021
         BAL   RLK,TXTBUF          YES - PURGE                          57710021
         TM    APT1,EX     IS THIS A LOAD MOD                           57750021
         BC    14,BUFOUT1                                               57790021
         L     XP1,LMLEN     SET LENGTH PARA FOR MOVE                   57830021
         L     GR8,TXTBFBEG        SET UP TO ADDR                       57870021
         L     GR9,BUFSTART    SET UP FROM AD                           57910021
         BAL   XP2,LMMOVE                                               57950021
BUFOUT1  L     GR1,TXTBFBEG    RESER POINTERS                           57990021
         L     XS2,SPACES                                               58030021
         ST    GR1,BUFSTART                                             58070021
         B     BUFCLR       ********REMOVE WHEN BUFCLR NO LONGER        58110021
*         NECESSARY    REPLACE WITH    B   BUFENT                       58150021
*                                                                       58190021
TXTNL2   STH   XP2,CMULN           KNOW IDENTIFICATION OF LAST MULT     58230021
         B     TXT003              GO SEARCH TXTIO FOR ENTRY TO CORRECT 58270021
*                                   LENGTH                              58310021
*                                                                       58350021
*           THIS IS A SUBROUTINE TO CLEAR THE ALLOCATED                 58390021
*           PORTION OF THE BUFFER -   THIS IS NECESSARY IN ORDER TO     58430021
*             SYSGEN THE NUCLEUS AND SHOULD BE REMOVED WHEN             58470021
*            FETCH NO LONGER REQUIRES ZEROS IN BUFFER                   58510021
*                                                                       58550021
BUFCLR   TM    APTSW3,XPDIND           EXPAND REQUEST?           Y01031 58590000
         BO    BUFCLR4                 IF SO, BRANCH             Y01031 58592000
         TM    PDSE7,X'04'        IF SCATTER NOT SPECIFIED -     Y01031 58600000
         BC    8,BUFENT           WILL AVOID CLEARING BUFFER            58630000
         TM    APT1,EX            MUST ALSO AVOID IF LOAD MOD INPUT     58670021
         BC    8,BUFCLR4       IF IS LM   WILL AVOID CLEARING IF        58710021
         TM    SWITCH,READSW        THE READ HAS BEEN ISSUED            58750021
         BC    8,BUFENT         SINCE IT IS IMPOSSIBLE TO TELL          58790021
BUFCLR4  LR    XP2,XS2      WHAT THE GROUPING WAS                       58830021
         LA    XP1,256                                                  58870021
         L     GR1,BUFSTART       GR1 - STARTING ADDR OF AREA           58910021
BUFCLR1  CR    XP1,XP2            LENGTH GT 256                         58950021
         BC    10,BUFCLR2         NO - BRANCH                           58990021
         XC    0(256,GR1),0(GR1)                                        59030021
         SR    XP2,XP1            DECREMENT COUNT                       59070021
         AR    GR1,XP1            INCREMENT ADDR                        59110021
         B     BUFCLR1                                                  59150021
BUFCLR2  BCTR  XP2,0                                                    59190021
         EX    XP2,BUFCLR3                                              59230021
         B     BUFENT                                                   59270021
*                                                                       59310021
BUFCLR3  XC    0(1,GR1),0(GR1)                                          59350021
*                                                                       59390021
*                                                                       59430021
* BUFENT MAKES ALL NECESSARY ENTRIES IN TXTIO TABLE AND TXT NOTE LIST   59470021
*        R15 CONTAINS ALLOCATED SIZE                                    59510021
*        BUFSTART CONTAINS BUFF STARTING ADDR FOR AREA                  59550021
BUFENT  SR     XP2,XP2                                                  59590021
         TM    SWITCH,DENSE1                                            59630021
         BC    1,BUFENT1      AVOID THE DIVIDE BUT CHECK FOR FULL TABLE 59670021
         C     XS2,UT1SIZE    WAS LARGER THAN UT1 ALLOC                 59710021
         BC    12,BUFENT1     NO - BRANCH                               59750021
         LR    XP2,XS2                                                  59790021
         SR    XP1,XP1                                                  59830021
         D     XP1,UT1SIZE                                              59870021
         ST    XP1,DISPLAC    DISPLAC IN LAST SECTION                   59910021
         LTR   XP1,XP1        WILL THE DIVIDE COME OUT EVEN             59950021
         BC    8,BUFENT1A                                               59990021
BUFENT1  LA    XP2,1(XP2)     XP2 HAS NUMBER OF ENTRIES REQUIRED        60030021
BUFENT1A LR    GR9,XP2                                                  60070021
         SLL   GR9,2        MUST INSURE THAT THE TXTIO                  60110021
         AH    GR9,ENTOC       HAS NOT BEEN OVERFLOWED                  60150021
BUFENT3A CH    GR9,ENTOX         IF IT HAS  IT IS A                     60190021
         BC    12,BUFENT1B       UNRECOVERABLE ERROR                    60230021
         TM    APT4,REALOCTE       HAS REALLOC BEEN DONE?        S01904 60270021
         BNO   BUFENT2A            NO,TRY REALLOCATION           S01904 60310021
QUIT     LA    MSG,IEW0364     TXTIO OVFLOW - TERMINATE JOB    @ZA07602 60350037
         B     ERROR                                                    60390021
BUFENT2A STM   WRKREG0,WRKREGF,BRNCHSV  SAVE REGISTERS           S01904 60430021
         L     BRANCH,ERDIGA       GET ADDR OF REALLOC RTN       S01904 60710021
         BALR  RETURN,BRANCH       GO TO REALLOC RTN             S01904 60750021
         LM    WRKREG0,WRKREGF,BRNCHSV  RESTORE REGISTERS        S01904 60790021
         B     BUFENT3A            CHECK FOR OVERFLOW AGAIN      S01904 61110021
BUFENT1B ST    XS2,HOLD3               MUST PRESERVE ALLOC LEN  XA05445 61160003
         ST    XS2,HOLD                LENGTH IN HOLD           XM09521 61170003
         MVC   HOLD1(4),CURID          SETUP FOR TXTIOT         XM09521 61180003
BUFENT1E LA    GR9,7                   GET LEN OF TNL ENTRY     XA05445 61210003
         MH    GR9,ENT1X               GET LEN OF CURRENT TNL   XM08070 61260003
         C     GR9,TNTFREE             TEST FOR END OF TNL      XA05445 61280003
         BH    BUFENT2B         BRANCH IF NOT REACHED   XM08070,XM09521 61290003
         TM    IOCTSTAT,FULLT      IO CNTRL TBL OVFLOW?          S01904 61310021
         BZ    BUFENT1C            NO,BRANCH OUT                 S01904 61350021
         TM    APT4,REALOCTE       HAS REALLOC BEEN DONE         S01904 61390021
         BO    QUIT                YES,TOO MUCH INPUT          @ZA07602 61430037
         STM   WRKREG0,WRKREGF,BRNCHSV  SAVE REGISTERS           S01904 61470021
         L     BRANCH,ERDIGA       GET ADDR OF REALLOC RTN       S01904 61750021
         BALR  RETURN,BRANCH       GO TO REALLOC RTN             S01904 61790021
         LM    WRKREG0,WRKREGF,BRNCHSV  RESTORE REGISTERS        S01904 61830021
         B     BUFENT2B                                         XM09521 62150003
BUFENT1C LR    GR3,XP2      SAVE REG XP2 WHEN ENTERING PURGES           62190021
         MVC   HOLD3+8(1),SWITCH       MUST MAINTAIN SWITCH             62230021
         ST    XS2,BUFDISP                                              62270021
         BAL  RLK,TXTBUF2                                               62310021
         TM    APT1,EX       IS THIS A LOAD MODULE                      62350021
         BC    14,BUFENT1D        IF NOT  BRANCH                        62390021
         L     RLK,BUFSTART       WAS THERE ANY THING IN THE            62430021
         C     RLK,TXTBFBEG        THAT WAS NOT ALLOC I                 62470021
         BC    8,BUFENT1D         IF NOT   NO SWEAT                     62510021
         L     XP1,LMLEN       IF THERE WAS  IT MUST                    62550021
         L     GR8,TXTBFBEG         IT MUST BE MOBED TO THE FRONT       62590021
         BAL   XP2,LMMOVE     OF THE BUFFER AND RECORDED                62630021
BUFENT1D L     RLK,TXTBFBEG                                             62670021
         MVC   SWITCH(1),HOLD3+8         RESTORE SWITCH AFTER PURGE     62710021
         ST    RLK,BUFSTART                                             62750021
         BAL   RLK,BUFTMK2                                              62790021
         L     XS2,BUFDISP                                              62830021
         LR    XP2,GR3                                                  62870021
         ST    XS2,HOLD3                 SAVE ALLOCATED LENGTH  XM08070 62880003
BUFENT2  ST    XS2,HOLD        LENGTH IN HOLD                           62910021
BUFENT2B EQU   *                                                XM09521 62960003
         OI    HOLD1+2,INCORE  MARK ENTRY AS INCORE                     63030021
         L     GR8,TNTFREE             PICK UP TNT OFFSET               63070002
         A     GR8,TNT1                COMPUTE TNT POINTER      ZA01405 63120002
         L     GR1,TXTFREE             PICK UP TXTIO OFFSET     XA05445 63150002
         A     GR1,TXTIO               COMPUTE TXTIO POINTER    ZA01405 63160002
         TM    SWITCH,DENSE1                                            63190021
         BC    1,BUFDEN                                                 63230021
BUFENTA  MVC   0(4,GR1),HOLD1      INSERT ID & MULT IN TXTIO            63270021
         MVC   0(2,GR8),HOLD+6         PUT OFFSET IN TNL ENTRY  XA05445 63280003
         MVC   5(2,GR8),HOLD+2     PUT LENGTH IN NOTELIST               63310021
         MVC   2(3,GR8),BUFSTART+1  AND STARTING ADDR                   63350021
         BAL   GR1,TXTPTR           UPDATE ALL INTERNAL PTRS            63390021
         BCT   XP2,BUFENT4         HAVE WE MADE ALL NECESARY ENTRIES    63430021
         L     XS2,HOLD3      MUST PRESERVE THE ALLOC LENGTH            63470021
         ST    XP2,HOLD+4          ZERO AREA AS WE LEAVE                63510021
         TM    APT1,EX            IS THIS A LOAD MODULE                 63550021
         BC    8,BUFENTA1          BR ON OBJENT INPUT                   63590021
         TM    SWITCH,READSW       HAS THE READ BEEN ISSUED             63630021
         BC    8,TXTLM5       YES  BRANCH                               63670021
         LA    GR3,TXTLM5        SET RETURN ADDR AFTER READ             63710021
         B     TXTREAD                                                  63750021
BUFENTA1 LR    GR1,GR8     SET UP A PARA FOR OBJ INPUT                  63790021
         B     TXTINSRT                                                 63830021
BUFENT4  OI    HOLD1+2,DENSE                                            63870021
         LH    R0,HOLD+6           UPDATE DISP                          63910021
         A     R0,UT1SIZE                                               63950021
         STH   R0,HOLD+6                                                63990021
         S     XS2,UT1SIZE                                              64110021
         C     XS2,UT1SIZE                                              64150021
         BC    10,BUFENT6           HIGH OR EQU                         64190021
         MVC   HOLD+2(2),DISPLAC+2 MOVE APPROP LEN INTO HOLD AREA       64230003
         B     BUFENT1E              RETURN FOR NEXT ENTRY      XA05445 64270003
BUFENT6  MVC   HOLD+2(2),UT1SIZE+2 MOVE APPROP LEN INTO HOLD AREA       64310003
         B     BUFENT1E              RETURN FOR NEXT ENTRY      XA05445 64350003
*                                                                       64390021
*                                                                       64430021
BUFDEN   MVC   HOLD+6(2),CDISP   WILL ONLY BE THRU HERE ONCE    XM09517 64470003
         OI    HOLD1+2,DENSE      MARK WORK AREA DENSE FOR ENTRY        64510021
         L     R0,BUFSTART           MUST REESTABLISH THE               64550021
         AH    R0,CDISP         FROMAD FOR THE PURGE    TXTNIO          64590021
         ST    R0,FROMAD           THIS WILL BE THE STARTING ADDR       64630021
         TM    APT1,EX     CAN BE A LOAD WHEN CONFIG REQUIRES THAT A    64670021
         BC    1,BUFDEN1         ID BE READ BUT WILL NOT FIT IN BUFFER  64710021
*       BUT HAS BEEN ALLOCATED - CAUSED BY GROUPED INPUT                64750021
         ST    GR4,HOLD                                                 64790021
         AR    R0,GR4                                                   64830021
         ST    R0,TOADDR                                                64870021
         LH    XP1,CDISP                                                64910021
         AR    XP1,GR4    WILL PIECE EXTEND BEYOND MYLT                 64950021
         C     XP1,MULTSIZE     NO   BRANCH                             64990021
         BC    12,BUFENTA                                               65030021
         SR    XP1,GR4     OBTAIN TRUE ADDR THAT WILL FIT               65070021
         LNR   XP1,XP1                                                  65110021
         A     XP1,MULTSIZE                                             65150021
         ST    XP1,HOLD                                                 65190021
         ST    XP1,TOADDR     CHANGE TO ADDR TO PREVENT LATTER MATCH    65230021
         B     BUFENTA                                                  65270021
BUFDEN1  SH    R0,CDISP                REALIGN                          65310021
         ST    R0,FROMAD               FROM ADDR                        65350021
         B     BUFENTA                                                  65390021
* THE TXT IS ADDED IN THE BUFFER AS THE LAST STEP - SPACE HAS BEEN      65430021
*  ALLOCATED IF NECESSARY AND RECORDED IN THE TXTIOT AND TXT NOTE LIST  65470021
*        REG1 WILL CONTAIN THE APPROP NOTE LIST ADDR                    65510021
*                                                                       65550021
TXTINSRT LH    R0,CDISP       TEST IF END OF PIECE WILL EXCEED          65590021
         S     GR1,TNT1                CALC TNL OFFSET          XA05743 65600003
         ST    GR1,LASTTNT        SAVE NOTE LIST ADDR                   65630021
         A     GR1,TNT1                RESTORE TNL POINTER      XA05743 65640003
         AR    R0,GR4             MULTIPLICITY BOUNDRY                  65670021
         C     R0,MULTSIZE                                              65710021
         BC    2,TXTSPLT      BRANCH IF SPLITTING NECESSARY             65750021
         BAL   RLK,TXTMOVE                                              65790021
         B     TXTRET                                                   65830021
*                                                                       65870021
TXTMOVE  MVC   HOLD+1(3),2(GR1)    OBTAIN BUFFER ADDR                   65910021
         L     GR1,HOLD                                                 65950021
         AH    GR1,CDISP                                                65990021
         BCTR  GR4,0               DECREMENT LENGTH                     66030021
         EX    GR4,TXTMVE          MOVE  INTO  BUFFER                   66070021
         LA    GR4,1(GR4)          RESET LENGTH                         66110021
         BR    RLK                                                      66150021
*                                                                       66190021
TXTMVE   MVC   0(1,GR1),0(RIP)                                          66230021
*                                                                       66270021
TXTSPLT  LR    GR8,GR4      THE TXT HAS SPANNED TEO MULTIPLICITIES      66310021
         L     GR4,MULTSIZE      MOVE AS MUCH AS WILL FIT               66350021
         SH    GR4,CDISP         READJUST PARAMETERS AND REENTER        66390021
         BAL   RLK,TXTMOVE                                              66430021
         SR    GR8,GR4        UPDATE LOCATION                           66470021
         AR    RIP,GR4       -UPDATE LOCATION                           66510021
         LR    GR4,GR8           RESTORE LINGTH                         66550021
         LA    R0,1                                                     66590021
         AH    R0,CMULN                                                 66630021
         STH   R0,CMULN       UPDATE MULTIPLICITY                       66670021
         SR    R0,R0          AND                                       66710021
         STH   R0,CDISP       ZERO DISPLACEMENT                         66750021
         B     TXT002A                                                  66790021
*                                                                       66830021
* TXTEND - EOF RECEIVED - IF NOLENGTH CSECT - LENGTH MUST BE POSTED     66870021
*         AT THIS TIME -  ALSO THE BUFFER MUST BE CLEANED IF NECESSARY  66910021
*                                                                       66950021
TXTEND   TM    SWITCH,DENSE1                                            66990021
         BC    14,TXTENDA                                               67030021
         L     XS1,TNTFREE             PICK UP TNT OFFSET               67070002
         A     XS1,TNT1                COMPUTE TNT POINTER      ZA01405 67080002
         SH    XS1,TSEVEN         OBTAIN LAST NOTELIST ADDR FOR TXTNIO  67110002
         BAL   XP2,TXTNIO                                               67150021
         NI    SWITCH,X'BF'        CLEAN UP DENSE SW                    67190021
TXTENDA  TM    APTSW3,XPDIND           EXPAND REQUEST?           Y01031 67230017
         BO    TXTEND2A                IF SO, BRANCH             Y01031 67232017
         TM    SWITCH,NOLEN                                             67240017
         BC    14,TXTEND1   BRANCH IF NOT NOLENGTH                      67270021
         OI    SWITCH,NOLEN1      NOLENGTH CLEANUP                      67310021
         ST    RLK,RETURNAD       SAVE RETURN ADDR                      67350021
         B     TXTN1                                                    67390021
TXTENDNL NI    SWITCH,X'EF'         TURN OFF CLEAN UP                   67430021
         L     RLK,RETURNAD      RESTORE RETURN ADDR                    67470021
TXTEND1  L     GR1,TXTIO    TEST FIRST ENTRY TXTIO TABLE TO SEE         67510021
         TM    2(GR1),INCORE         IF IT HAS BEEN WRITTEN OUT         67550021
         BC    1,TXTEND2A    NO   TEST IF OVERLAY IS SPECIFIED          67590021
TXTEND1A ST    RLK,RETURNAD        SAVE RETURN ADDR                     67630021
         BAL   RLK,TXTBUF2    CLEAR TXTBUFFER                           67670021
         L     RLK,RETURNAD      RESTORE RETURN ADDR                    67710021
TXTEND2  SR    R0,R0                                                    67750021
         STH   R0,SWITCH     CLEAN UP  SWITCH FOR NEXG INTERATION       67790021
         ST    R0,BUFDISP    CLEAR BUFFER DISP                          67830021
         STH   R0,PID           MADE RAT REENTERABLE                    67870021
         STH   R0,TXTNOTE          REINITIALIZE TO ZER/                 67910021
         STH   R0,TXTWR     CLEAR NUMBER OF ENTRIES WR IN TXTIO         67950021
         BR    RLK                                                      67990021
TXTEND2A TM    PDSE7,X'20'        IF OVLY SPEC  MUST FORCE              68030021
         BC    1,TXTEND1A          2 PASS SITUATION                     68070021
         TM    APT4,ORDERR         IS ORDERING REQUIRED?         S01904 68110021
         BO    TXTEND1A            YES,MUST FORCE PURGE          S01904 68150021
         TM    SWITCH+1,NOGRPPG      IS A NONGROUPED PURGE REQUIRED     68190021
         BC    1,TXTEND1A          YES  BRANCH TO PURGE                 68230021
         B     TXTEND2                                                  68270021
*THIS ROUTINE  WILL CHECK IF THE NEW DENSE PIECE IS CONTIGUOUS WITH     68310021
* THE EXISTING  DENSE RECORD IN THE BUFFER                              68350021
*   IF IT IS IT WILL BE ADDED                                           68390021
*  -IF NOT-  THE EXISTING PIECE WILL BE WRITTEN AND NEW ONE ADDED       68430021
*              KNOW ID AND MULT ARE SAME AS PREVIOUS                    68470021
*                                                                       68510021
TXTDEN   L     XS1,TNTFREE             PICK UP TNT OFFSET               68550002
         A     XS1,TNT1                COMPUTE TNT POINTER      ZA01405 68552002
*                            IF A DENSE RECORD PRESENT IT WILL ALWAYS   68560002
         SH    XS1,TSEVEN    BE THE LAST ENTRY  CORRECT TNT1 ADDR       68590002
         MVC   HOLD+1(3),2(XS1) OBTAIN BUFFER ADDR                      68630021
         L     GR9,HOLD                                                 68670021
         AH    GR9,CDISP       GR9 CONTAINS WHERE NEW PIECE WOULD BEGIN 68710021
         L     GR1,TOADDR                                               68750021
         CR    GR9,GR1         PIECE                                    68790021
         BC    8,TXTDEN1      IF EQU NEW CAN BE ADDED AFTER OLD AFTER   68830021
*                             FIRST ENSURING LENGTH WON'T EXCEED MULT   68870021
         AR    GR9,GR4                                                  68910021
         C     GR9,FROMAD      PIECE WE WISH TO ADD EQ BEGINNING OF OLD 68950021
         BC    7,TXTDEN2      NO BRANCH                                 68990021
         SR    GR9,GR4                                                  69030021
         ST    GR9,FROMAD     AND INCREMENT LENGTH                      69070021
         MVC   0(2,XS1),CDISP      DD OF PIECE                          69110021
         LR    R0,GR4                                                   69150021
TXTDENA1 MVC   HOLD+2(2),5(XS1) RETRIEVE OLD LENGTH                     69190021
         AH    R0,HOLD+2                                                69230021
         STH   R0,HOLD+2        ADD ADDITIONAL                          69270021
         MVC   5(2,XS1),HOLD+2                                          69310021
         LR    GR1,XS1         SET UP PARA FOR TXTINSRT                 69350021
         B     TXTINSRT                                                 69390021
* THE TXT IS TO BE ADDED BEHIND PRESENT PIECE - MUST CHECK FIRST TO     69430021
*  ENSURE DOESN'T EXCEED MULT BOUNDRIES                                 69470021
TXTDEN1  LH    GR9,CDISP                                                69510021
         AR    GR9,GR4                                                  69550021
         LR    R0,GR4                                                   69590021
         L     GR1,TOADDR          BRANCH IF ALL FIT -                  69630021
         AR    GR1,GR4        SIMPLY INCREASE LENGTH                    69670021
         ST    GR1,TOADDR                                               69710021
         C     GR9,MULTSIZE                                             69750021
         BC    12,TXTDENA1                                              69790021
         SR    GR9,GR4            IF EXCEEDS MULT LIMIT - ENTER SIZE    69830021
         LNR   GR9,GR9             THAT WILL FIT - INSERT ROUTINE WILL  69870021
         A     GR9,MULTSIZE        TAKE CARE OF OVERLAP                 69910021
         LR    R0,GR9         SET UP REG ZERO WITH CORRECT LEN          69950021
         B     TXTDENA1                                                 69990021
*                                                                       70030021
*THE TXT WAS NOT CONTIGUOUS  -  WILL WRITE OUT EXISTING PIECE           70070021
*                                                                       70110021
TXTDEN2  LA    XP2,BUFALLOC                                             70150021
         B     TXTNIO                                                   70190021
*                                                                       70230021
* THIS ROUTINE  IS USED WHENEVER A  SECTION OF OUT OF ORDER TEXT IS TO  70270021
*   BE WRITTEN OUT  -  IT WILL MAKE ADDITIONAL ENTRIES IF SIZE OF       70310021
*   PIECE EXCEEDS UT1                                                   70350021
*                                                                       70390021
TXTNIO   LR    GR8,XS1                                                  70430021
         ST    XRET2,HOLD3    RESERVE REG5                              70470021
         L     GR1,TXTFREE             PICK UP TXTIO OFFSET             70510002
         A     GR1,TXTIO               COMPUTE TXTIO POINTER    ZA01405 70520002
*                             CHECK IF LAST ENTRY HAS ALREADY BEEN      70530002
         SH    GR1,SFOUR      WRITTEN  CAN HAPPEN IN ISOLATED           70550021
         TM    2(GR1),DENSE      WAS THE LAST ENTRY MADE DENSE          70590021
         BCR   8,XP2       IF NOT  RETURN IMMEDIATLY                    70630021
         TM    2(GR1),INCORE       HAS THE LAST DENSE ENTRY             70670021
         BCR   8,XP2     WRITTEN  --     YES RETURN                     70710021
         L     XS2,FROMAD                                               70750021
TXTNIOA  MVC   HOLD+2(2),5(GR8)    RETRIEVE  LENGTH                     70790021
         LH    XS1,HOLD+2       IF PIECE SIZE EXCEEDS UT1 - BRANCH      70830021
         CH    XS1,UT1SIZE+2                                            70870021
         BC    2,TXTNI1                                                 70910021
         BAL   XRET2,COMBUF                                             70950021
         BAL   XRET2,COMCHK                                             70990021
         ST    GR1,HOLD                                                 71030021
         MVC   2(3,GR8),HOLD      RECORD TTR                            71070021
         TM    APT1,EX    IS THIS A LOAD MODULE                         71110021
         BC    1,TXTNIOB                                                71150021
         L     R0,BUFDISP                                               71190021
         S     R0,MULTSIZE                                              71230021
         ST    R0,BUFDISP         FREE ALLOC BUFFER AREA                71270021
TXTNIOB  LA    R0,4        SET TO DECREMENT TO LAST TXTIO ENTRY         71310021
         L     GR1,TXTFREE             PICK UP TXTIO OFFSET             71350002
         A     GR1,TXTIO               COMPUTE TXTIO POINTER    ZA01405 71360002
         SR    GR1,R0                                                   71390021
         NI    2(GR1),FLAGOUT      ZERO FLAG FIELD                      71430021
         OI    2(GR1),TTRDEN                                            71470021
         L     XRET2,HOLD3   PRESERVE REG5                              71510021
         BR    XP2                                                      71550021
TXTNI1   L     GR1,TXTFREE             PICK UP TXTIO OFFSET             71590002
         A     GR1,TXTIO               COMPUTE TXTIO POINTER    ZA01405 71600002
         LA    R0,4                    MAKE ADDITIONAL ENTRY            71630002
         SR    GR1,R0                                                   71670021
         MVC   4(4,GR1),0(GR1)                                          71710021
         MVC   5(2,GR8),UT1SIZE+2     INSERT UT1 LENGTH                 71750021
         S     XS1,UT1SIZE                                              71790021
         STH   XS1,HOLD1+4        NEW LENGTH                            71830021
         MVC   HOLD1+1(3),2(GR8)     OBTAIN BUFFER ADDR                 71870021
         MVC   HOLD1+6(2),0(GR8)         AND THE DISPLACEMENT           71910021
         LA    R0,1                THE LENGTH OF THE ENTRY EXCEEDS      71950021
         AH    R0,ENT1C       UT1 -  FIRST MAKE EXTRA TABLE             71990021
         CH    R0,ENT1X       ENTRIES                                   72030021
         BC    12,TXTN3                                                 72070021
         TM    IOCTSTAT,FULLT      IO CNTRL TBL OVFLOW?          S01904 72110021
         BNO   TXTNI11             NO,BRANCH OUT                 S01904 72150021
         TM    APT4,REALOCTE       HAS REALLOC BEEN DONE?        S01904 72190021
         BO    QUIT                YES,TOO MUCH INPUT          @ZA07602 72230037
         STM   WRKREG0,WRKREGF,BRNCHSV  SAVE REGISTERS           S01904 72270021
         L     BRANCH,ERDIGA       GET ADDR OF REALLOC RTN       S01904 72550021
         BALR  RETURN,BRANCH       GO TO REALLOC RTN             S01904 72590021
         LM    WRKREG0,WRKREGF,BRNCHSV  RESTORE REGISTERS        S01904 72630021
         B     TXTN3                                             S01904 72950021
TXTNI11 STM   XS1,XS2,SPACES                                            72990021
         BAL   RLK,TXTBUF1     PURGE AVOIDING DENSE CHECK               73030021
         SR    RLK,RLK   ZERO BUFFER DISPLACEMENT AFTER                 73070021
         ST    RLK,BUFDISP    PURGING BUFFER                            73110021
         BAL   RLK,BUFTMK2                                              73150021
         LM    XS1,XS2,SPACES                                           73190021
         B     TXTN2                                                    73230021
TXTN3    L     XS1,UT1SIZE         CORRECT LENGTH FOR FIRST WRITE       73270021
         NI    2(GR1),FLAGOUT      ZERO FLAG FIELD                      73310021
         OI    2(GR1),TTRDEN                                            73350021
         BAL   XRET2,COMBUF                                             73390021
         BAL   XRET2,COMCHK                                             73430021
         ST    GR1,HOLD                                                 73470021
         MVC   2(3,GR8),HOLD      STORE TTR                             73510021
TXTN2    L     GR8,TNTFREE             PICK UP TNT OFFSET               73550002
         A     GR8,TNT1                COMPUTE TNT POINTER      ZA01405 73560002
         LH    GR1,HOLD1+6                                              73590021
         A     GR1,UT1SIZE                                              73630021
         STH   GR1,HOLD1+6                                              73670021
         MVC   0(2,GR8),HOLD1+6                                         73710021
         MVC   2(5,GR8),HOLD1+1                                         73750021
         BAL   GR1,TXTPTR                                               73790021
         LH    XS2,HOLD1+6                                              73830021
         A     XS2,HOLD1         RESET STARTING ADDR                    73870021
         LA    XS2,0(XS2)                                               73910021
         B     TXTNIOA        REENTER CHECKING NEWLY CREATED ENTRY WITH 73950021
*                        DECREMENTED LENGTH                             73990021
*                                                                       74030021
TXTPTR   LA    R0,1                                                     74070021
         AH    R0,ENT1C          INCREMENT COUNT OF ENTRIES             74110021
         STH   R0,ENT1C          TXT NOTE LIST                          74150021
         LA    R0,4                                                     74190021
         AH    R0,ENTOC          INCREMENT COUNT OF BYTES               74230021
         STH   R0,ENTOC          TXT IO TABLE                           74270021
         LA    R0,4                                                     74310021
         A     R0,TXTFREE        UPDATE PTR TO FIRST FREE ENTRY IN      74350021
         ST    R0,TXTFREE          TXT IO TABLE                         74390021
         LA    R0,7                                                     74430021
         A     R0,TNTFREE           UPDATE PTR TO FIRST FREE ENTRY IN   74470021
         ST    R0,TNTFREE           TEXT NOTE LIST                      74510021
         BR    GR1                                                      74550021
*                                                                       74590021
* LOAD MODULE PROCESSOR                                                 74630021
*                                                                       74670021
*      FIRST STEP IS TO DETERMINE IF ALL ID'S ARE TO BE DELETED         74710021
*       IF SO - READ WILL BE ISSUED WILL ZERO LENGTH                    74750021
TXTLM    LA    READCNT,1    SET UP PARA FOR ZERO READ                   74790021
         NI    SWITCH+1,SPTXTOFF        RESET SPEC TEXT FLAG    OY00356 74792001
         TM    APTSW3,XPDIND           EXPAND REQUEST?           Y01031 74800000
         BO    TXTLMX                  IF SO, BRANCH             Y01031 74810017
         L     REG6,RLDINPAD   INITIALIZE ID-LENGTH PTR                 74830021
         L     COUNT,12(REG6)      COUNT SET FOR TOTAL INPUT            74870021
         LA    COUNT,0(COUNT)     CLEAR THE HIGH ORDER BYTE             74910021
TXTLMX   ST    COUNT,LMLEN         SAVE INPUT RECORD LENGTH      Y01031 74950017
         TM    APTSW3,XPDIND           EXPAND REQUEST?           Y01031 74960017
         BO    TXTLM1X                 IF SO, BRANCH             Y01031 74970017
         LH    R0,4(REG6)                                               74990021
         AH    REG6,6(REG6)                                             75030021
         LA    REG6,16(REG6)                                            75070021
         ST    REG6,IDLENPTR                                            75110021
         AR    R0,REG6                                                  75150021
         ST    R0,CREND  INIT ID-LENGTH LIST END PTR                    75190021
         LR    RID1,RID       CALCULATE RENUMBER                        75230021
TXTLM1   SLL   RID1,2          ENTRY                                    75270021
         A     RID1,RECNT                                               75310021
         TM    DT(RID1),DEL    IS THIS ID TO BE DELETED                 75350021
         BC    7,TXTLM1A          CONTINUE SEARCH IF DELETE             75390021
TXTLM1X  OI    SWITCH,READSW         INDICATE READ IS REQUIRED   Y01031 75430000
         B     TXT0011                                                  75470021
TXTLM1A  LA    RIP,4(RIP)          ONTINUE SEARCH                       75510021
         C     RIP,CREND     WAS THAT THE LAST ONE                      75550021
         BC    10,READ0                                                 75590021
         LH    RID1,0(RIP)                                              75630021
         B     TXTLM1                                                   75670021
READ0    OI    SWITCH,SHORTRD      ALL ITEMS IN THIS RECORD ARE TO BE   75710021
*      DELETED                                                          75750021
         LA    BUFFADDR,HOLD1        BUMMY AREA FOR ARTIFICAL           75790021
         B     READ0A          READ                                     75830021
TXTREAD  LR    READCNT,COUNT        SET UP COUNT FOR READ               75870021
         ST    XS2,TXTALLOC                                             75910021
         L     BUFFADDR,BUFSTART                                        75950021
         AH    BUFFADDR,CDISP         COMPUTE CORRECT LOCATION          75990021
         TM    SWITCH,DENSE1           IS THIS RECORD DENSE             76030021
         BC    8,READ0B                NO, BRANCH                       76070021
         SH    BUFFADDR,CDISP          YES,RESET BUFR START ADDR        76110021
READ0B   NI    SWITCH,READOFF          ALL SET TO READ                  76150021
READ0A   L     DCBADD,HEWLCLAC      ADDR OF CURRENT READ BLOCK          76190021
         L     DCBADD,0(DCBADD)           ADDR OF DECB FOR THE READ     76230021
         L     REG6,INPADD         ESTABLISH  BASE FOR READ             76270021
         L     XP2,RDMACRO                                              76310021
         LR    COUNT,TXTBASE     REG4 WILL HOLD BASE UNTIL RETURN       76350021
         TM    APTSW3,XPDIND           EXPAND REQUEST?           Y01031 76360000
         BO    READ0AX                 IF SO, BRANCH             Y01031 76370017
         BALR  XSTX,XP2                                                 76390021
         LR    TXTBASE,COUNT                                            76430021
         TM    SWITCH,SHORTRD       A SHORT READ TO BE ISSUED           76470021
         BC    14,TXTGREAD        NO  BRANCH                            76510021
         NI    SWITCH,SHORTRD1      RESET SWITCH                        76550021
         B     TXTRET                                                   76590021
READ0AX  LH    RID,CURID               RESTORE ESDID             Y01031 76600017
         L     COUNT,LMLEN             RESTORE TXT COUNT Y01031,XA05128 76610003
         B     GREADX                  CONTINUE                  Y01031 76620017
TXTGREAD L     COUNT,IDLENPTR                                           76630021
         LH    RID,0(COUNT)   MUST RESTOTE ID                           76670021
         LH    COUNT,2(COUNT)                                           76710021
GREADX   SR    GR1,GR1      PREPARE TO ZERO ACCUNLEN             Y01031 76750017
         ST    GR1,ACUMLEN                                              76790021
         L     XS2,TXTALLOC       OBTAIN AMOUNT OF BUFFER ALLOC         76830021
         BR    GR3                                                      76870021
*                                                                       76910021
*   ID IS TO BE DELETED                                                 76950021
*                                                                       76990021
TXTLM2   TM    APT1,EX                                                  77030021
         BC    8,TXTRET     RETURN FOR OBJECT MODULES                   77070021
         TM    SWITCH,READSW       HAS THE READ BEEN ISSUED             77110021
         BC    8,TXTLM2A       YES  BRANCH                              77150021
         TM    SWITCH,NOLEN      IS A NOLEN OUTSTANDING                 77190021
         BC    14,TXTLM2C          NO -  AVOID NOLEN CLEAN UP           77230021
         OI    SWITCH,X'20'            SET FLAG TO RETURN               77270021
         B     TXTN1          START NOLEN CLEAN UP                      77310021
TXTLM2D  NI    SWITCH,X'DF'          RESET INCICATOR                    77350021
TXTLM2C  L     GR3,BUFDISP         SET TO DO THE READ                   77390021
         A     GR3,TXTBFBEG            NEW                              77430021
         ST    GR3,BUFSTART            BEFSTART                         77470021
         SR    GR3,GR3                                                  77510021
         STH   GR3,CDISP               CLEAR DISP                       77550021
         L     R0,TXTBFBEG       ESTABLISH BEGINNING OF TXTBUF          77590021
         A     R0,BUFDISP        AND OBTAIN THE FIRST FREE AREA         77630021
         AR    R0,COUNT        AND ADD TOTAL LENGTH OF INPUT RECORD     77670021
         C     R0,TXTBFEND       WILL IT OVERFLOW BUFFER                77710021
         BC    12,TXTLM2B         BRANCH IF IT WILL FIT                 77750021
         BAL   RLK,TXTBUF      PURGE THE TXTBUF                         77790021
         SR    RLK,RLK         AND ZERO THE BUFFER DISPLACEMENT         77830021
         ST    RLK,BUFDISP                                              77870021
         L     RLK,TXTBFBEG       MUST RESET BUFSTART TO THR BEG        77910021
         ST    RLK,BUFSTART        OF THE BUFFER TO POSITION READ       77950021
TXTLM2B  BAL   GR3,TXTREAD          NOW DO THE READ BEFORE COMTINUING   77990021
TXTLM2A  L     RLK,IDLENPTR                                             78030021
         LR    XS1,RLK                                                  78070021
         LA    RLK,4(RLK)                                               78110021
         C     RLK,CREND    IF THIS IS THE LAST ID  THERE IS NO NEED    78150021
         BC    10,TXTRET    TO MOVE THE REMAINING BUFFER ENTY UP        78190021
         LH    XS1,2(XS1)   XS1 CONTAINS LENGTH TO BE DELETED           78230021
         LNR   XP1,XS1                                                  78270021
         A     XP1,LMLEN    XP1 CONTAIN AMOUNT OF TXT IN BUFFER TO BE   78310021
         L     GR8,BUFDISP  MOVED                                       78350021
         A     GR8,TXTBFBEG                                             78390021
         LR    RLK,GR8                                                  78430021
         AR    RLK,XS1      FROMAD                                      78470021
         BAL   XP2,LMMOVE                                               78510021
         B     TXTLM4                                                   78550021
* THIS RTN WILL BE USED TO OVERLAY DELETED ID'S IN THE BUFFER AND       78590021
*  MOVE ANY REMAINING TXT IN THE BUFFER TO THE BEGINNING IF A FULL      78630021
*  MULTIPLICITY CAN NOT BE ALLOCATED                                    78670021
*                                                                       78710021
* INCOMING PARAMETERS ARE     GR8  - TO ADDR                            78750021
*                             GR9  - FROMAD                             78790021
*                             XP1  - AMOUNT TO BE MOVED                 78830021
LMMOVE   LA    GR1,256        SET UP TEST COUNT                         78870021
LMMOVE3  CR    GR1,XP1        IF THE INCOMING COUNT IS LESS THAN THAT   78910021
         BC    10,LMMOVE1    WE ONLY HAVE ONE MOVE                      78950021
         MVC   0(256,GR8),0(RLK)    MOVE COUNT                          78990021
         SR    XP1,GR1      AND THE PARAMETERS ADJUSTED ACCORDINGLY     79030021
         AR    GR8,GR1         INCREMENT TO AND FROM ADDRESSES          79070021
         AR    RLK,GR1                                                  79110021
         B     LMMOVE3                                                  79150021
LMMOVE1  BCTR  XP1,0                                                    79190021
         EX    XP1,TLMMVE                                               79230021
LMMOVE2  BR    XP2                                                      79270021
*                                                                       79310021
TLMMVE   MVC   0(1,GR8),0(RLK)                                          79350021
*                                                                       79390021
* ID & MULT AGREE WITH LAST - THIS MULT HAS BE ALLOCATED BUT IF LENGTH  79430021
*     EXCEEDS PRESENT BUFFER BOUNDRIES - ANOTHER MUST BE ALLOC          79470021
*                                                                       79510021
TXTLM3   NI    SWITCH,X'BF'   INSURE DENSE SW IS OFF                    79550021
         SH    GR1,SFOUR     OBTAIN LAST TXTIO ADDR                     79590021
         TM    2(GR1),INCORE    HAS THAT ENTRY BEEN WRITTEN             79630021
         BC    1,TXTLM3A         BRANCH IF STILL IN CORE                79670021
TXTLM3D  OI    SWITCH,DENSE1    MARK ENTRY OUT OF ORDER                 79710021
         B     BUFALLOC       AND ALLOC AND ENTER IN TABLES             79750021
TXTLM3A  L     R0,BUFSTART        CHECK IF RECORD WILL FIT IN BUFFER    79790021
         AH    R0,CDISP          ADD THE BUFFER START AND THE DISP      79830021
         AR    R0,COUNT        AND THE LENGTH OF THE INCOMING RECORD    79870021
         C     R0,TXTBFEND        DIES THE INCOMING RECORD EXCEED       79910021
         BC    12,TXTLM3C        BUFFER LIMITS                          79950021
         BAL   RLK,TXTBUF                                               79990021
         SR    RLK,RLK     PURGE AND RESET BUFFER INCREMENT             80030021
         ST    RLK,BUFDISP        TO ZERO                               80070021
         B     TXTLM3D    SINCE JUST PURGED MUST MARK OUT OF ORDER      80110021
TXTLM3C  BAL   GR3,TXTREAD       READ THJ LOAD MOD INPUT RECORD         80150021
         LH    GR8,CDISP           WILL THIS INPUT EXCEED MUL           80190021
         AR    GR8,COUNT                                                80230021
         C     GR8,MULTSIZE                                             80270021
         BC    12,TXTLM4      BRANCH ON LOW OR EQUAL                    80310021
*  IT IS NECESSARY TO READJUSNT TO THE TRUE AMOUNT THAT                 80350021
*         MUST BE ALLOCATED                                             80390021
         S     GR8,MULTSIZE         CDISP+COUNT-MULTSIZE IS             80430021
         LR    COUNT,GR8      THE TRUE AMOUNT LEFT TO ALLOC             80470021
         LH    GR9,CMULN                                                80510021
         LA    GR9,1(GR9)     BUMP MULT                                 80550021
         STH   GR9,CMULN      AND ALLOCATE SPACE IN BUFFER              80590021
         STH   GR9,PMULN          UPDATE TO CHECK NEXT ENTRY            80630021
         B     BUFALLOC                                                 80670021
*                                                                       80710021
* THE PRESENT ENTRY HAS BEEN FULLY PROCESSED - IF THAT WAS LAST ENTRY   80750021
*  WE WILL RETURN - IF NOT WE WILL READJUST PARAMETERS AND REENTER      80790021
*                                                                       80830021
TXTLM4   TM    APTSW3,XPDIND           EXPAND REQUEST?           Y01031 80870017
         BNO   TXTLM4X                 IF NOT, BRANCH            Y01031 80872017
         BAL   RLK,TXTEND              DO EOF CLEAN-UP           Y01031 80874017
         B     TXTRET                  RETURN                    Y01031 80876017
TXTLM4X  L     GR8,IDLENPTR                                             80880017
         LR    GR9,GR8                                                  80910021
         LA    GR8,4(GR8)     BUMP IDLENPTR AND SEE                     80950021
         C     GR8,CREND      IF PAST END OF CONTROL RECORD             80990021
         BC    10,TXTRET    BRANCH HIGH OR EQY                          81030021
         LH    GR9,2(GR9)     PICK UP NEXT LENGTH                       81070021
         LR    GR1,GR9                                                  81110021
         LNR   GR1,GR1                                                  81150021
         A     GR1,LMLEN                                                81190021
         ST    GR1,LMLEN                                                81230021
         A     GR9,ACUMLEN                                              81270021
         ST    GR9,ACUMLEN                                              81310021
         L     XAA,RLDINPAD   NOW OBTAIN ASSM OF THIS ID                81350021
         L     XAA,8(XAA)                                               81390021
         LA    XAA,0(XAA)                                               81430021
         AR    XAA,GR9                                                  81470021
         ST    GR8,IDLENPTR        KEEP UPDATED IDLENPTR                81510021
         LH    COUNT,2(GR8)        OBTAIN NEW LENGTH                    81550021
         LH    RID,0(GR8)           AND ID                              81590021
         B     TXT0011                                                  81630021
* ONE MULTIPLICITY HAS BE ALLOCATED - TEST IF THERE IS MORE PRESENTLY   81670021
* IN THE BUFFER THAT MUST BE ALLOCATED AND ENTERED IN TABLES            81710021
*                                                                       81750021
TXTLM5   EQU   *                                                OY00356 81760001
         TM    SWITCH+1,SPTXTON         CHECK FOR SPEC TXT      OY00356 81770001
         BNO   TXTLM5A                  BRANCH IF NOT APPLIC    OY00356 81780001
         NI    SWITCH+1,SPTXTOFF        SET FLAG OFF            OY00356 81782001
         AH    COUNT,CDISP              ADJUST FOR TEXT DISPLAC OY00356 81784001
TXTLM5A  EQU   *                                                OY00356 81786001
         SR    COUNT,XS2   SUBTRACT ALLOCATED SIZE FROM LENGTH  OY00356 81790002
         BNP   TXTLM4      BRANCH ON ZERO OR LESS CHECK NEXT ID OY00356 81870001
         LH    GR9,CMULN                                                81910021
         LA    GR9,1(GR9)     IF NOT FINISHED WITH THIS ID - BUMP MULT  81950021
         STH   GR9,CMULN      AND REALLOCATE                            81990021
         STH   GR9,PMULN          UPDATE TO CHECK NEXT ENTRY            82030021
         B     TXT002A                                                  82070021
*AN ENTRY IS TO BE MADE IN THE TXT I/O CONTROL TABLE. UNLESS IT IS FULL 82110021
BUFTMK2  TM    IOCTSTAT,FULLT    IS TXT I/O CNTL TABLE FULL             82150021
         BC    8,BUFTOK                                                 82190021
*TABLE IS FULL. ERROR                                                   82230021
         LA    MSG,IEW0364                                              82270037
         B     ERROR                                                    82310021
BUFTOK   LA    R14,7                                                    82350021
         MH    R14,ENT1X                                                82390021
*R14=NUMBER OF BYTES IN NOTE LIST.                                      82430021
         L     R15,TNT1           R15=START OF MARK LIST                82470021
         BAL   XRET2,COMBUF                                             82510021
         BAL   XRET2,COMCHK                                             82550021
         LA    R15,7                   LOAD NOTELIST ENTRY LEN  XA06144 82560003
         MH    R15,ENT1X               MULT BY ENTRY COUNT      XA06144 82570003
         L     XRET2,TNT1              GET ADDRESS OF NOTELIST  XA06144 82580003
         XR    R14,R14                 CLEAR REG 14 FOR DIVIDE  XA06144 82582003
         D     R14,HEX100              DIVIDE FOR CLEARING      XA06144 82584003
         LTR   R15,R15                 TEST QUOTIENT            XA06144 82586003
         BZ    TXT0161                 IF ZERO, BRANCH          XA06144 82588003
TXT0160  EQU   *                                                XA06144 82588103
         XC    0(256,XRET2),0(XRET2)   CLEAR 256 BYTES          XA06144 82588403
         A     XRET2,HEX100            BUMP BUFFER POINTER      XA06144 82588803
         BCT   R15,TXT0160             IF MORE TO MOVE, LOOP    XA06144 82589203
TXT0161  EQU   *                                                XA06144 82589603
         LTR   R14,R14                 ANY REMAINDER?           XA06144 82589703
         BZ    TXT0162                 NO, WE ARE DONE          XA06144 82589803
         BCTR  R14,0                   DECREMENT FOR EXECUTE    XA06144 82589902
         EX    R14,CLEARIT             CLEAR REMAINDER          XA06144 82603203
TXT0162  EQU   *                                                XA06144 82613203
         LA    XTMK2,IOCT                                               82616703
         LR    XS1,XTMK2                                                82630021
         XR    R0,R0               CLEAR REGISTER                S01904 82670021
         XR    XRET2,XRET2         CLEAR REGISTER                S01904 82710021
         IC    XRET2,ENITC         GET OLD COUNT IN TXTIO TBL    S01904 82750021
         IC    R0,ENITC+1          GET NEW COUNT OF BYTES USED   S01904 82790021
         AR    XRET2,R0            ADD BOTH COUNTS               S01904 82830021
         AR    XTMK2,XRET2         ADD TO CURRENT ENTRY ADDR     S01904 82870021
*STORE THE TTR IN THE CURRENT ENTRY OF THE TXT I/O CONTROL TABLE        82910021
         ST    GR1,0(XTMK2)   STORE TTR OF TXT NOTE LIST                82950021
         LA    XTMK2,4(XTMK2)                                           82990021
         SR    XTMK2,XS1      SUBTRACT TO OBTAIN REL ADDR               83030021
*THE UPDATED BYTE COUNT IS NOW STORED                                   83070021
         TM    APT4,REALOCTE       HAS REALLOC BEEN DONE?        S01904 83110021
         BNO   TXT016              NO-BRANCH OUT                 S01904 83150021
         SR    XTMK2,R0                 GET NEW TBL BYTES       OX00029 83160000
         STC   XTMK2,ENITC         USE FIRST BYTE OF ENITC       S01904 83190021
         B     TXT016A             BRANCH AROUNG REG UPDATE OF ENITC    83230021
TXT016   STH   XTMK2,ENITC        STORE BYTE COUNT                      83270021
TXT016A  LH    R0,ENT1C       KEEP TRACK OF ACTUAL ENTERIES             83310021
         AH    R0,TXTNOTE    WRITTEN                                    83350021
         STH   R0,TXTNOTE                                               83390021
*TEST FOR OVERFLOW                                                      83430021
         LA    XRET2,4(,XRET2)          ADJUST TOTAL LENGTH     OX00029 83480000
         CH    XRET2,X12                IS TXT I/O TBL FULL     OX00029 83490000
         BC    4,TXT017    NO,CONTINUE                                  83510021
         OI    IOCTSTAT,FULLT    INDICATE TXT I/O CNTL TABLE IS FULL    83550021
*                          CAN NOT BE PURGED AGAIN                      83590021
TXT017   SR    R0,R0                                                    83630021
         STH   R0,ENT1C  RESET TXT NOTELIST CURRENT BYTE COUNT TO ZERO  83670021
         ST    R0,TNTFREE                                               83750021
         BCR   15,RLK                                                   83790021
*                                    PROCESSED CSECTS IN BUFFER         83830021
*                                                                       83870021
* THIS ROUTINE WILL CLEAR THE BUFFER AND MARK ENTRIES WRITTEN*          83910021
*                                                                       83950021
TXTBUF   TM    NEWSW,EOF        IS THIS END OF INPUT                    83990021
         BC    1,TXTEND                                                 84030021
         LTR   COUNT,COUNT    ZERO LENGTH IS IGNORED                    84070021
         BCR   8,RLK                                                    84110021
TXTBUF2  TM    SWITCH,DENSE1      FIRST CHECK IF LAST THISG IN BUFFER   84150021
         BC    14,TXTBUF1         IS A PIECE OF OUT OF ORDER TEXT       84190021
         L     XS1,TNTFREE             PICK UP TNT OFFSET               84230002
         A     XS1,TNT1                COMPUTE TNT POINTER      ZA01405 84240002
         SH    XS1,TSEVEN      SET UP PARAMETER FOR TXTNIO              84270021
         BAL   XP2,TXTNIO         WRITE IT AND RET                      84310021
         NI    SWITCH,X'BF'                                             84350021
TXTBUF1  CLC   TXTWR(2),ENTOC     ANYTHING IN TABLE                     84390021
         BCR   8,RLK                                                    84430021
         STM   RID,REG6,HOLD3         MUST MAINTAIN REGS 5 AND 6        84470021
         TM    PDSE7,X'20'        OVERLAY OPTION SPECIFIED              84510021
         BC    1,TXTENT1          WRITE ON E RECORD PER ENTRY           84550021
         CLC   MULTSIZE(4),UT1SIZE                                      84590021
         BC    2,TXTENT1          BRANCH MULT HIGH                      84630021
         TM    SWITCH,NOLEN        IS THERE AN OUTSTANDING NOLEN TO     84670021
         BC    1,TXTENT1     BE POSTED   YES   WE CAN NOT GROUP         84710021
         TM    SWITCH+1,NOGRPPG       DO WE NEED A NON GROUPED PURGE    84750021
         BC    1,TXTENT1      YES  PURGE WITHOUT GROUPING               84790021
*                                                                       84830021
*   AFTER HERE SYSUT1 WILL BE GROUPED AS MUCH AS POSSIBLE               84870021
*                                                                       84910021
*                                                                       84950021
*                                                                       84990021
         LH    REG6,ENTOC    REG6 WILL BE USED TO PROVIDE LIMIT         85030021
         A     REG6,TXTIO                                               85070021
         ST    REG6,TSCNEND    SAVE END ADDR                            85110021
         LH    REG6,TXTWR    BYTES WRITTEN IN TXTIO                     85150021
         LR    GR8,REG6        TO TXTIO ENTRY                           85190021
         SRL   GR8,2                                                    85230021
         SH    GR8,TXTNOTE        SUB NUMBER OF ENTERIES WRITTEN        85270021
TXTB2A   A     REG6,TXTIO    NOW REGS XSTX AND GR8 CONTAIN EFFECTIVE    85310021
         MH    GR8,TSEVEN                                               85350021
         A     GR8,TNT1       ADDR OF ENTRIES TO BE WRITTEN             85390021
TXTB2    TM    2(REG6),INCORE                                           85430021
         BC    1,TXTB1                                                  85470021
         LH    GR1,TXTACUM        HIT OUT OF ORDER                      85510021
         LTR   GR1,GR1           CLEAR PREVIOUS GROUPING IF NEC         85550021
         BC    7,TXTBWR             OR ADVANCE TO ENEXT                 85590021
TXTB2C   LA    REG6,4(REG6)   BUMP PTRS TO NEXT ENTRY                   85630021
         LA    GR8,7(GR8)                                               85670021
         C     REG6,TSCNEND                                             85710021
         BC    10,TXTBEND                                               85750021
         B     TXTB2                                                    85790021
*                                                                       85830021
TXTB1    NI    2(REG6),X'7F'  MARK THIS ENTRY NOT IN CORE               85870021
         LH    GR1,TXTACUM    HAVE WE STARTED A GROUPING                85910021
         LTR   GR1,GR1                                                  85950021
         BC    7,TXTB3        YES - BRANCH                              85990021
         MVC   HOLD+2(2),5(GR8)   PARAMETER FOR WRITE                   86030021
         LH    XS1,HOLD+2      ACQUIRE LENGTH                           86070021
         MVC   HOLD+1(3),2(GR8) AND                                     86110021
         L     XS2,HOLD             BUFFER ADDR                         86150021
TXTB1A   STH   XS1,TXTACUM                                              86190021
         B     TXTB2C                                                   86230021
*                                                                       86270021
*  GROUPING HAS STARTED - FIRST TEST WILL SEE IF ADDITIONAL LENGTH WILL 86310021
*    EXCEED LIMITS REGARDLESS OF ABILITY TO BE GROUPED - IF IT WOULD    86350021
*    FIT - THEN ELIGIBILITY IS TESTED                                   86390021
*                                                                       86430021
TXTB3    MVC   HOLD+2(2),5(GR8)    ADD NEW LENGTH TO ACUM LENGTH        86470021
         AH    GR1,HOLD+2           AND TEST AGAINST UT1SIZE            86510021
         C     GR1,UT1SIZE                                              86550021
         BC    2,TXTBWR            WRITE PREVIOUS ENTRY                 86590021
         LA    R0,4                ADDITIONAL LENGTH WILL FIT - IS LAST 86630021
         SR    REG6,R0              MULT ZERO                           86670021
         MVC   HOLD(4),0(REG6)                                          86710021
         NI    HOLD+2,FLAGOUT                                           86750021
         LA    GR1,1        CONSECUTIVE                                 86790021
         A     GR1,HOLD      BUMP                                       86830021
         AR    REG6,R0      RESTORE PTR TO PRESENT TXTIO ENTRY          86870021
         C     GR1,0(REG6)    WAS LAST ONE GREATER THAN PRESENT         86910021
         BC    8,TXTB3A                                                 86950021
         CLC   2(2,REG6),CONZO1   IF PRESENT MULT=0  CHECK IF LAST      86990021
*                ENTRY IS LAST MULT                                     87030021
         BC    7,TXTBWR                                                 87070021
         SR    REG6,R0                                                  87110021
*  SINCE PRESENT ENTRY IS MULT ZERO  AND AFTER INSURING ID              87150021
*   NOT THE SAME   CHECK IF PREVIOUS ISLAST ONE                         87190021
         CLC   0(2,REG6),4(REG6)       ARET THE ID S THE SAME           87230021
         BC    8,TXTBWR1                                                87270021
         CLC   2(2,REG6),CONZO1    MULT CHANGE                          87310021
         BNE   TXTBWR1                                                  87350021
         LH    GR1,0(REG6)                                              87390021
         AR    REG6,R0          RESTORE TO PRESENT ENTRY                87430021
         SLL   GR1,4              WAS COMPLETE CSECT SO THE PRESENT     87470021
         A     GR1,CHESD          ENTRY CAN BE GROUPED WITH IT          87510021
         L     XP2,12(GR1)                                              87550021
         LA    XP2,0(XP2)     OBTAIN LENGTH FROM CESD                   87590021
         SR    XP1,XP1                                                  87630021
         D     XP1,MULTSIZE                                             87670021
         LTR   XP1,XP1                                                  87710021
         BC    7,TXTB4A                                                 87750021
         BCTR  XP2,0                                                    87790021
TXTB4A   CH    XP2,HOLD+2   HIGHEST MULT EQU LST                        87830021
         B     TXTBWR              NO GROUPING OF CSECTS IN UT1 AOS     87870021
TXTB3A   MVC   HOLD+2(2),5(GR8)   - UPDATE ACUM LENGTH                  87910021
         AH    XS1,HOLD+2                                               87950021
         B     TXTB1A                                                   87990021
*                                                                       88030021
*                                                                       88070021
TXTBEND  LH    GR1,ENTOC                                                88110021
         STH   GR1,TXTWR        UPDATE NUMBER OF BYTES WRITTEN          88150021
         LH    GR1,TXTACUM      BEFORE LEAVEING MUST WRITE ANY          88190021
         LTR   GR1,GR1             PARTIAL GROUPING                     88230021
         BC    8,TXTENTRT                                               88270021
         OI    SWITCH,X'01'       END SW                                88310021
         B     TXTBWR                                                   88350021
TXTBWR1  AR    REG6,R0      RESTORE PTR TO PRESENT TXTIO                88390021
TXTBWR   BAL   XRET2,COMBUF                                             88430021
         BAL   XRET2,COMCHK                                             88470021
         ST    GR1,HOLD          SAVE TTR IN LAST                       88510021
         LA    GR1,7               PROCESSED ENTRY                      88550021
         SR    GR8,GR1                                                  88590021
         MVC   2(3,GR8),HOLD      STORE TTR                             88630021
         AR    GR8,GR1                                                  88670021
         LA    R0,4      RESET R0                                       88710021
         SR    REG6,R0              AND                                 88750021
         OI    2(REG6),X'40'       TTR FLAG IN TXTIO                    88790021
         AR    REG6,R0                                                  88830021
         SR    GR1,GR1                                                  88870021
         STH   GR1,TXTACUM         NO LONGER GROUPING - THIS GROUP      88910021
         TM    SWITCH,X'01'            LAST WRITE SWITCH ON?            88950021
         BC    14,TXTENT2              NO, GO TEST DENSE SWITCH         88990021
         NI    SWITCH,X'FE'            YES, TURN THE SWITCH OFF         89030021
         B     TXTENTRT                RETURN                           89070021
TXTENT2  TM    2(REG6),DENSE           IS NEXT RECORD DENSE             89110021
         BC    1,TXTB2C                YES, SKIP IT                     89150021
         B     TXTB1                   NO, PROCESS IT                   89190021
TXTENT1  CLC   TXTWR(2),ENTOC     ONE RECORD PER ENTRY  LENGHT WILL     89230021
         BC    7,TXTENT11       BE UT1 OR ACTUAL WHICHEER               89270021
TXTENTRT LM    RID,REG6,HOLD3         MUST MAINTAIN REGS 5 AND 6        89310021
         BCR   15,RLK                                                   89350021
TXTENT11 LH    GR13,TXTWR                                               89390021
         LA    R0,4                                                     89430021
         AR    R0,GR13                                                  89470021
         STH   R0,TXTWR           BUMP TXTWR                            89510021
         A     GR13,TXTIO                                               89550021
         TM    2(GR13),INCORE    WAS THE FIRST ENTRY ALREADY WR         89590021
         BC    14,TXTENT1                                               89630021
         NI    2(GR13),X'7F'      TURN OFF OLD INDICATOR                89670021
         OI    2(GR13),X'40'       MARK TTR                             89710021
         S     GR13,TXTIO                                               89750021
         SRL   GR13,2                                                   89790021
         LA    R0,7      SIZE OF ONE NOTE LIST ENTRY                    89830021
         STH   R0,HOLD+2                                                89870021
         SH    GR13,TXTNOTE                                             89910021
         MH    GR13,HOLD+2                                              89950021
         A     GR13,TNT1                                                89990021
         MVC   DISPLAC(2),0(GR13)                                       90030021
         MVC   HOLD+1(3),2(GR13)                                        90070021
         L     XS2,HOLD           ADDR CORRECT AND ADD ANY DISP         90110021
         AH    XS2,DISPLAC         TO IT   USUALLY ZERO                 90150021
         MVC   HOLD+2(2),5(GR13)   OBTAIN ENTRY LENGTH                  90190021
         CLC   HOLD+2(2),UT1SIZE+2   INSURE SPECIFY LINGTH LESS  UT1    90230021
         BC    4,TXTENT2A      IF LENGTH SPECIFIES LESS THAN UT1        90270021
         L     XS1,UT1SIZE        USE ACTUAL LENGTH                     90310021
         B     TXTENT3                                                  90350021
TXTENT2A LH    XS1,HOLD+2                                               90390021
TXTENT3  LR    REG6,GR13                                                90430021
         BAL   XRET2,COMBUF                                             90470021
         BAL   XRET2,COMCHK                                             90510021
         ST    GR1,HOLD     SAVE TTR                                    90550021
         MVC   2(3,REG6),HOLD      SAVE TTR                             90590021
         B     TXTENT1                                                  90630021
***********************************************************             90670021
*                                                                       90710021
*                     WHERE THE ACTUAL LENGTH IS POSTED FOR             90750021
*                    NOLENGTH CSECTS                                    90790021
*                                                                       90830021
***********************************************************             90870021
TXTNL3   LR    XS1,XS2                                                  90910021
         TM    2(XS2),INCORE    IS THE PRESENT ENTRY TO BE POSTED       90950021
         BC    8,TXTNLB       IN CORE NOW -  YES POST GOOD LEN          90990021
         S     XS1,TXTIO      OBTAIN NUMBER OF ENTRIES IN TXTIO         91030021
         SRL   XS1,2          IF THAT NUMBER EXCEEDS MAX ALLOWABLE AT   91070021
         LA    XS1,1(XS1)   ADD ONE TO GET TRUE ENTRY NUMBER            91110021
         LH    RLK,TXTNOTE                                              91150021
TXTNL4   CH    XS1,TXTNOTE    COMPARE THE ENTRY NUMBER TO THE           91190021
*   NUMBER OF ENTRIES WRITTEN.   IF LESS OR EQU WILL HAVE UNTRUE        91230021
*   LENGTH POSTED                                                       91270021
         BC    4,TXTNLB        MUST POST UNTRUE LENGTH INDIC            91310021
         BC    7,TXTNLC    BRANCH NOT EQU   EQU  CHECK FOR ZERO         91350021
         LTR   RLK,RLK     FALL THRU IF NORELIST NEVER WR               91390021
         BC    7,TXTNLB      COMPUTE TRUE NOTELIST                      91430021
TXTNLC   MH    RLK,TSEVEN       DISPLACEMENT                            91470021
         SR    GR8,RLK       TRUE DISPLACEMENT                          91510021
TXTNL6   STH   XP1,HOLD+2      POSTED -                                 91550021
         A     GR8,TNT1          OBTAIN NOTE LIST ADDR AND POST         91590021
         MVC   5(2,GR8),HOLD+2     PROPER LENGTH                        91630021
TXTNL6A  CLC   MULTSIZE(4),UT1SIZE WAS MORE THAN ONE ENTRY MADE         91670021
         BC    2,TXTNL5            YES - BRANCH                         91710021
TXTNL6B  LA    GR8,7(GR8)     WAS THE HIGHEST MULT THE LAST ENTRY       91750002
         L     RLK,TNT1                PICK UP TNT ADDRESS      ZA01405 91790002
         A     RLK,TNTFREE             COMPUTE TNT POINTER      ZA01405 91800002
         CR    GR8,RLK                 IF SO, IT'S LAST IN      ZA01405 91810002
         BC    8,TXTNL7         BUFFER AND THE BUFFER DISP CAN BE ADJ   91830021
         BAL   RLK,TXTBUF1     IF NOT  WE MUST FORCE TWO PASS TO CLEAR  91870021
         SR    RLK,RLK         RESET THE BUFFER DISPLACEMENT TO         91910021
         ST    RLK,BUFDISP       ZERO                                   91950021
TXTNL6C  NI    SWITCH,X'F7'    ANY GAPES IN THE BUFFER                  91990021
         TM    SWITCH,X'20'       SHOULD RETURN TO LM DELETE            92030021
         BC    1,TXTLM2D          YES                                   92070021
         TM    SWITCH,NOLEN1    NO LENGTH CLEAN UP                      92110021
         BC    1,TXTENDNL                                               92150021
         MVC   CURID(4),HOLD1      RESTORE PARA FOR PRESENT ID          92190021
         B     TXT002B                                                  92230021
*THE NOTELIST HAS BEEN WRITE OUT AT LEAST ONCE - BE CERTAIN APPLICABLE  92270021
* ENTRY STILL IN CORE                                                   92310021
TXTNLB   OI    2(XS2),X'08'    IF NOT  SET BIT FOR UNTRUE LENGTH        92350021
         B     TXTNL6C            AND RETURN                            92390021
TXTNL7   L     GR8,BUFDISP    PRESENT DISPLACEMENT MINUS ALLOC          92430021
         S     GR8,MULTSIZE     SIZE   PLUS THE READ LENGTH  IS THE     92470021
         AH    GR8,HOLD+2                                               92510021
         ST    GR8,BUFDISP     NEW PROPER BUFFER DISP                   92550021
         B     TXTNL6C                                                  92590021
TXTNL5   LA    XS2,4(XS2)      INCREMENT TXTIO ADDR                     92630021
         LA    GR8,7(GR8)     LESS THAN MULT- POSSIBLE THAT EXTRA       92670021
         S     XP1,UT1SIZE    ENTRIES HAVE BEEN MADE                    92710021
         C     XP1,UT1SIZE                                              92750021
         BC    2,TXTNL5                                                 92790021
         LTR   XP1,XP1            BRANCH IF LESS THAN ZERO              92830021
         BC    12,TXTNL9    VAL 0 OR NEG PRESENT ENTRY NOT REQ          92870021
         STH   XP1,HOLD                                                 92910021
         MVC   5(2,GR8),HOLD   NOVE IN PROPER LENGTH TO LAST PIECE      92950021
TXTNL5A  CLC   0(4,XS2),4(XS2)    IS THE NEXT ONE THE AAME              92990021
         BC    7,TXTNL6B     PREPARE TO RETURN                          93030021
         LA    XS2,4(XS2)      INCREMENT TXTIO ADDR                     93070021
         LA    GR8,7(GR8)         INCREMENT NOTELIST ADDR               93110021
TXTNL9   CLC   0(4,XS2),4(XS2)    IS THE NEXT ONE THE SAME              93150021
         BC    8,TXTNL8        YES  BRANCH                              93190021
         MVC   0(2,XS2),CONZO1     ZERO THE EXTRA ID                    93230021
         B     TXTNL6B                                                  93270021
TXTNL8   MVC   0(2,XS2),CONZO1                                          93310021
         LA    XS2,4(XS2)      INCREMENT TXTIO ADDR                     93350021
         LA    GR8,7(GR8)         INCREMENT NOTELIST ADDR               93390021
         B     TXTNL9    CONTINUE    TO CHECK OOR END                   93430021
*                                                                       93470021
         DS    0F                                                       93510021
DBLWRD   DC    X'FFFFFFF8'          MASK TO ZERO LST THREE BITS         93550021
MULTONLY DC    X'000003FF'           MASK TO ZERO ALL BUT MULT          93590021
IOCTSTAT DC    X'00'       I/O CONTROL TABLE OVFLO IND                  93630021
*         ENTRIES WRITTEN                                               93670021
TXTWR    DC    H'0'     CONTAINS DISPLACEMENT IN TXTIO TABLE OF         93710021
BUFSTART DC    F'0'                                                     93790021
BUFDISP  DC    F'0'                                                     93830021
HOLD     DC    2F'0'          MISC  FOR ENTER INFO INTO TABLES          93870021
TXTFREE  DC    F'0'           FIRST FREE ADDR IN TXTIO                  93910021
TNTFREE  DC    F'0'           FIRST FREE ADDR IN NOTELIST               93950021
TXTNOTE  DC    H'0'     HOLDS THE ACTUAL NUMBER OF ENTRIES OF THE       93990021
*  TXT NOTELIST THAT HAVE BEEN WRITTEN.   IT WILL NOT GE THE MAX IN     94030021
*  SITUATIONS REQUIRE MULTIPLE ENTRIES                                  94070021
CURID    DC    2X'0'          MAINTAINS CURRENT ID AND MULTIPLICITY     94110021
CMULN    DC    2X'0'                                                    94150021
PID      DC    2X'0'          MAINTAINS  PAST ID & MULT                 94190021
PMULN    DC    2X'0'                                                    94230021
MAXMULT  DC    H'512'                                                   94270021
TSEVEN   DC    H'7'       CCONSTANT USED TO DECREMENT NOTELIST ADDR     94310021
SWITCH   DC    XL2'00'                                                  94350021
*   BIT 0      NO LENGTH INDICATOR                                      94390001
*   BIT 1      DENSE INDICATOR  (NOT RELATED TO TXTIO FLAG)             94430001
*   BIT 2      LOAD MODULE INDICATOR FOR DUMMY READ                     94440001
*   BIT 3      NOLENGTH AND HAVE RECEIVED NEW ID   POST TRUE LEN        94510001
*   BIT 4      NOLEN CLEAN UP ON END OF ENPUT                           94550001
*   BIT 1      DENSE INDICATOR  (NOT RELATED TO TXTIO FLAG)             94558037
*   BIT 2      LOAD MODULE INDICATOR FOR DUMMY READ                     94566037
*   BIT 3      NOLENGTH AND HAVE RECEIVED NEW ID   POST TRUE LEN        94574037
*   BIT 4      NOLEN CLEAN UP ON END OF ENPUT                           94582037
*   BIT 5      LOAD MODULE READ TO BE ISSUED                            94590001
*   BIT 6      RESERVED                                                 94600001
*   BIT 7      LAST WRITE SIGNAL WHEN GROUPING ON UT1                   94630001
*   BIT 8      FLAG FOR SPECIAL LOAD MODULE TEXT SITUATION      OY00356 94640001
*   BIT 9-10   RESERVED                                                 94660001
*   BIT 11     FLAG FOR NONGROUPED PURGE REQUIRED                       94662001
*   BIT 12-15  RESERVED                                                 94664001
HOLD1    DS    2F                                                       94670021
DISPLAC  DC    F'0'                                                     94710021
TXTALLOC EQU   *       USED FOR LM TO MAINTAIN ALLOC SIZE               94750021
LASTTNT  DC    F'0'               MAINTAIN LAST NOTELIST ADDR           94790021
FROMAD   DC    F'0'      START & END FOR DENSE RECORDS                  94830021
TOADDR   DC    F'0'                                                     94870021
CDISP    DC    H'0'                DISPLACEMENT IN MULTIPLICITY         94910021
RDMACRO  DC    V(HEWLERDM)                                              94950021
INPADD   DC    V(HEWLCINP)                                              94990021
ACUMLEN  DC    F'0'      WILL ACCUMULATE LENGTH OF LM RECORD TO ENABLE  95030021
LMLEN    DS    F      WILL HOLD TOTAL LENGTH OF LM INPUT RECORD         95070021
*                    RECOMPUTATION OF ASSM ADDR                         95110021
RETURNAD EQU   *               SAVES RETURN WHEN PROCESS FINISHED       95150021
IDLENPTR DS    1F                  PTR TO ID-LENGTH ENTRY               95190021
CREND    DS    1F                  PTR TO END OF ID-LENGTH LIST         95230021
CONZO1   DC    F'0'      CONSTANT OF ZERO                               95270021
TXTACUM  DC    H'0'                                                     95310021
X12      DC    H'12'                    LNGTH LIMIT FOR TXT I/O OX00029 95320000
TSCNEND  DS    F      END OF SCN                                        95350021
HOLD3    DS    3F                                                       95390021
*********************************************************************** 95470037
*        PATCH AREA                                                   * 96170037
*********************************************************************** 96870037
PATCH2   DC    50F'0',C'PATCH AREA ' FOR PROG MAINT                     97570037
         HEWAPT                                                         98370037
         END                                                            99170037
./  ADD  SSI=62740008,NAME=HEWLFRCG
HEWLFRCG CSECT                                                          00050021
         TITLE ' HEWLFRCG  REPLACE/CHANGE CARD ESD PROCESSOR '          00100021
*FUNCTION/OPERATION: THIS MODULE IS COMPRISED OF THREE SEPARATE       * 00150021
*      ROUTINES. THE FIRST(HEWLKRCG), SCANS THE CHAIN OF REPLACE/     * 00200021
*      CHANGE CARS IN THE CESD. IF IT FINDS A MATCH BETWEEN ESD AND   * 00250021
*      CESD SYMBOLS,IT MODIFYS THE ESD ITEM APPROPRIATELY . IF A      * 00300021
*      CHANGE FUNCTION IS REQUESTED, THE SYMBOL IS CHANGED TO THE     * 00350021
*      NEW ONE. IF A REPLACE FUNCTION IS REQUESTED, IT CHANGES THE    * 00400021
*      SYMBOL AND MARKS THE ITEM FOR REPLACEMENT. IF A DELETE FUNCTION* 00450021
*      IS REQUESTED(NON-SUBSCRIPTED SYMBOL), IT MARKS THE ITEM FOR    * 00500021
*      DELETION .                                                     * 00550021
*      THE SECOND ROUTINE(HEWLCPTH), DETERMINES THE COMMON SEGMENT IN * 00600021
*      AN OVERLAY PATH GIVEN 2 SEGMENT NUMBERS .                      * 00650021
*      THE THIRD ROUTINE(HEWLCDCN), REMOVES A CESD ITEM FROM THE      * 00700021
*      CHAIN OF LIBRARY MEMBERS AND RE-CONSTRUCTS THE CHAIN.          * 00750021
*ENTRY POINTS      HEWLMRCG - REPLACE CHANGE ROUTINE  -BALR 11,13     * 00800021
*                    HEWLCPTH - COMMON PATH ROUTINE     - BALR 11,13  * 00850021
*                    HEWLCDCN - DECHAIN ROUTINE         - BALR 11,15  * 00900021
*INPUT   HEWLMRCG- CESD(INDIRECTLY FROM REPLACE OR CHANGE CARDS)      * 00950021
*        HEWLCPTH- LIST OF PREVIOUS SEGMENT NUMBERS (SEGTA1) AND CESD * 01000021
*        HEWLCDCN- CESD                                               * 01050021
*OUTPUT: THERE IS NO OUTPUT TO AN I/O DEVICE                          * 01100021
*EXTERNAL ROUTINES: N/A                                               * 01150021
*EXITS-NORMAL: ALL ROUTINES RETURN VIA REGISTER 11                    * 01200021
*EXITS-ERROR: N/A                                                     * 01250021
*                                                                     * 01300021
*TABLES/WORK AREAS: NO INTERNAL TABLES ARE USED                       * 01350021
*ATTRIBUTES: REUSABLE                                                 * 01400021
*NOTES: N/A                                                           * 01450021
         EXTRN HEWLCRID                                                 01500021
         EXTRN HEWLCTTY                                                 01550021
CESD     EQU   3                                                        01600021
CESDXR   EQU   7                                                        01650021
         ENTRY HEWLCDCN                                                 01700021
RETURN   EQU   11                                                       01750021
SYSRET   EQU   14                                                       01800021
SYSBRNCH EQU   15                                                       01850021
ESDADD   EQU   6                                                        01900021
INTERNAL EQU   13                                                       01950021
APT       EQU  2                                                        02000021
TEMP      EQU  10                                                       02050021
ESDSEG    EQU  12                                                       02100021
CESDSEG   EQU  12                                                       02150021
SUBTYPE  EQU   13                                                       02200021
TEMP1    EQU   8                                                        02250021
ZERO     EQU   9                                                        02300021
CESDX    EQU   10                                                       02350021
TEMP2    EQU   4                                                        02400021
REGSAV5  EQU   72                                                       02450021
         ENTRY HEWLCPTH                                                 02500021
         USING HEWLFRCG,INTERNAL                                        02550021
         USING APTDSECT,APT                                             02600021
*                                                                     * 02650021
*                        REPLACE/CHANGE ROUTINE                       * 02700021
*                                                                     * 02750021
         BC    15,MODID+6              BRANCH AROUND MODULE IDENT       02800021
MODID    DC    C'01MRCG'                                                02850021
RCG0     CLC   0(8,ESDADD),0(CESDX)                                     02900021
*              IF THE ESD SYMBOL DOES NOT MATCH THE REP/CHG SYMBOL,   * 02950021
*              BRANCH TO UPDATE THE CHAIN                             * 03000021
         BC    7,RCG2                                                   03050021
         LA    SYSBRNCH,16(CESDX)                                       03100021
*              SYSBRNCH CONTAINS THE ADDRESS OF THE SECOND SYMBOL     * 03150021
         CLI   SUBTYPE(CESDX),X'F0'                                     03200021
*              IF THE SYMBOL IS FOR CHANGE, BRANCH                    * 03250021
         BC    8,RCG6                                                   03300021
         OI    8(ESDADD),X'10'                                          03350021
*              SET THE DELETE BIT IN THE ESD TYPE(BYTE 8)             * 03400021
         L     TEMP2,ADDTTYPE                                           03450021
         CLI   0(TEMP2),X'06'                                           03500021
*              IF THE ESD TYPE IS NOT PSEUDO REGISTER, BRANCH         * 03550021
         BC    7,RCG1                                                   03600021
         SR    ZERO,ZERO                                                03650021
         ST    ZERO,12(0,ESDADD)                                        03700021
*              CLEAR LENGTH AND ALIGNMENT FIELDS                      * 03750021
RCG1     CLI   SUBTYPE(CESDX),X'E0'                                     03800021
*              IF THE CARD IS REPLACE, BRANCH                         * 03850021
         BC    8,RCG5                                                   03900021
         LR    SYSBRNCH,CESDX                                           03950021
*              CAUSE A MOVE ONTO ITSELF                               * 04000021
         CLI   0(TEMP2),X'01'                                           04050021
*              IF ESD TYPE IS AN LD - BRANCH (CAUSES ITEM TO BE SKIPP-* 04100021
*              ED)                                                    * 04150021
         BC    8,RCG4                                                   04200021
         CLI   0(TEMP2),X'06'                                           04250021
*              IF ESD TYPE IS NOT PR, BRANCH                            04300021
         BC    7,RCG6A0                                                 04350021
RCG2     L     CESDX,8(CESDX)                                           04400021
         LA    CESDX,0(CESDX)                                           04450021
         LTR   CESDX,CESDX                                              04500021
*              IF THE CHAIN IS COMPLETE(BYTES 9,10,11 = 0), RETURN    * 04550021
         BCR   8,RETURN                                                 04600021
         BC    15,RCG0                                                  04650021
RCG4     L     RETURN,ADDESD29                                          04700021
*              THIS RETURN SKIPS ESD PROCESSING                       * 04750021
         BCR   15,RETURN                                                04800021
RCG5     CLI   0(TEMP2),X'00'                                           04850021
*              IF THE ESD TYPE IS AN SD, BRANCH                       * 04900021
         BC    8,RCG6A1                                                 04950021
         NI    8(ESDADD),X'EF'                                          05000021
*              CLEAR DELETE BIT (A REPLACE ON ANYTHING EXCEPT SD IS   * 05050021
*              EQUIVALENT TO A CHANGE                                 * 05100021
RCG6     MVC   0(8,ESDADD),0(SYSBRNCH)                                  05150021
*              SET SYMBOL TO NEW SYMBOL                               * 05200021
         BC    15,RCG2                                                  05250021
RCG6A1   MVI   SUBTYPE(ESDADD),0                                        05300021
*              SET SUBTYPE TO REPLACE                                 * 05350021
RCG6A    MVI   0(TEMP2),X'02'                                           05400021
*              SET ESD TYPE TO ER                                     * 05450021
         L     SYSRET,ID                ADDRESS OF ESDID                05500021
         L     SYSRET,0(SYSRET)         LOAD ESDID                      05550021
         STH   SYSRET,14(ESDADD)                                        05600021
*              STORE ID IN COLS 14 AND 15 OF ESD ITEM                 * 05650021
         BC    15,RCG6                                                  05700021
RCG6A0   MVI    SUBTYPE(ESDADD),X'08'                                   05750021
*              SET SUBTYPE TO DELETE                                  * 05800021
         BC    15,RCG6A                                                 05850021
ID       DC    A(HEWLCRID)                                              05900021
         USING HEWLCPTH,INTERNAL                                        05950021
*                                                                     * 06000021
*                        COMMON PATH ROUTINE                          * 06050021
*                                                                     * 06100021
*                                                                     * 06150021
HEWLCPTH L     TEMP,SGT1                                                06200021
          SR   TEMP1,TEMP1              CLEAR ARGUMENT REGISTERS        06250021
          SR   TEMP2,TEMP2                                              06300021
         IC    TEMP1,CESDSEG(CESDXR)                                    06350021
         IC    TEMP2,ESDSEG(ESDADD)                                     06400021
*              TEMP1 CONTAINS CESD SEGMENT NUMBER                     * 06450021
*              TEMP2 CONTAINS ESD SEGMENT NUMBER                      * 06500021
FNC3      CLR  TEMP1,TEMP2                                              06550021
*              IF THE SEGMENT NUMBERS ARE EQUAL, BRANCH               * 06600021
          BC   8,FNC4                   BRANCH ON EQUAL                 06650021
          BC   4,FND4                   BRANCH ON LOW                   06700021
          XR   TEMP1,TEMP2              HIGH SWAP REGS                  06750021
          XR   TEMP2,TEMP1                                              06800021
          XR   TEMP1,TEMP2                                              06850021
          BC   15,FND4                                                  06900021
FNC4     LTR   TEMP1,TEMP1             IF SEGNO IS ZERO                 06950021
         BC    2,FNC4A                 MAKE IT A 1                      07000021
         LA    TEMP1,1                                                  07050021
FNC4A    STC   TEMP1,ESDSEG(ESDADD)                                     07100021
         STC   TEMP1,CESDSEG(CESDXR)                                    07150021
*              SET CESD AND ESD SEGMENT NUMBERS TO RESULT             * 07200021
          BCR  15,RETURN                                                07250021
FND4     IC    TEMP2,0(TEMP2,TEMP)                                      07300021
          BC   15,FNC3                                                  07350021
*                                                                     * 07400021
*                   LIBRARY DECHAIN ROUTINE                           * 07450021
*                                                                     * 07500021
*                                                                     * 07550021
HEWLCDCN LH    TEMP,14(CESDXR)                                          07600021
*              TEMP CONTAINS DIRECT CHAIN                             * 07650021
         USING HEWLCDCN,SYSBRNCH                                        07700021
         DROP  INTERNAL                                                 07750021
         LH    TEMP1,10(CESDXR)                                         07800021
*              TEMP1 CONTAINS REVERSE CHAIN                           * 07850021
         LR    TEMP2,TEMP1                                              07900021
         SLL   TEMP1,4                                                  07950021
         AR    TEMP1,CESD                                               08000021
*              INDEX CESD BY REVERSE CHAIN                            * 08050021
         STH   TEMP,14(TEMP1)                                           08100021
*              STORE DIRECT CHAIN IN LINE INDEXED BY REVERSE CHAIN    * 08150021
         LTR   TEMP,TEMP                                                08200021
*              IF DIRECT CHAIN IS ZERO, RETURN                        * 08250021
         BCR   8,RETURN                                                 08300021
         SLL   TEMP,4                                                   08350021
         AR    TEMP,CESD                                                08400021
*              INDEX DIRECT CHAIN                                     * 08450021
         STH   TEMP2,10(TEMP)                                           08500021
*              STORE REVERSE CHAIN IN LINE INDEXED BY REVERSE CHAIN   * 08550021
         BCR   15,RETURN                                                08600021
ADDTTYPE DC    A(HEWLCTTY)                                              08650021
ADDESD29 DC    V(HEWLCE30)                                              08700021
         HEWAPT                                                         08750021
          END                                                           08800021
./  ADD  SSI=71730018,NAME=HEWLFREL
 TITLE 'HEWLFREL - SECOND PASS RELOCATION'                              00020021
*********************************************************************** 00080021
*STATUS: CHANGE LEVEL 0                                               * 00100021
*FUNCTION/OPERATION:                                                  * 00120021
*        1) RELOCATION                                                * 00140021
*        2) CREATION OF ENTAB AND ITS RLDS                            * 00160021
*        3) SECOND PASS INITIALIZATION                                * 00180021
*ENTRY POINTS:                                                        * 00200021
*        HEWLFREL- FOR SECOND PASS INITIALIZATION                     * 00220021
*        RELOCATE- FOR RELOCATION                                     * 00240021
*        SCDENTAB- FOR CREATION OF ENTAB AND ITS RLDS                 * 00260021
*                                                                     * 00280021
*INPUT: - SAME TABLES AS HEWLFSCD                                     * 00300021
*                                                                     * 00320021
*OUTPUT: ENTAB TEXT AND ENTAB RLD RECORDS. THE SIZE OF THE ENTAB IS   * 00340021
*              LIMITED ONLY  BY THE MAXIMUM RECORD SIZE ON SYSLMOD    * 00360021
*                                                                     * 00380021
*EXTERNAL ROUTINES:                                                   * 00400021
*        GETIDMUL- TO GET NEXT TEXT TO PROCESS                        * 00420021
*        WRTTXT- TO WRITE A TEXT RECORD                               * 00440021
*        WRTCRRLD- TO WRITE A CR/RLD RECORD                           * 00460021
*        CHECKRD - TO CHECK A READ                                    * 00480021
*        CHECKWRT- TO CHECK A WRITE                                   * 00500021
*EXITS: NORMAL-RETURN VIA REGISTER 14 TO CALLER                       * 00520021
*       ERROR ---  ENTRY LIST EXCEEDED      L  15,ERDIG               * 00540021
*                                           L  0,ERCODE44             * 00560021
*                                           BR 15                     * 00580021
*TABLES/WORK AREAS: - REFER TO LINKAGE EDITOR PLM FOR DETAILED        * 00600021
*        DESCRIPTIONS                                                 * 00620021
*        1) ALL PURPOSE TABLE                                         * 00640021
*        2) HESD                                                      * 00660021
*        3) DELINK TABLE                                              * 00680021
*        4) RELOCATION CONSTANT TABLE                                 * 00700021
*        5) RLD NOTELIST                                              * 00720021
*        6) TEXT CONTROL BLOCKS(SEE LABELS TXTCB1 AND TXTCB2)         * 00740021
*        7) RLD CONTROL BLOCKS(SEE LABELS INRLDCB1,INRLDCB2,OTRLDCB1, * 00760021
*              OTRLDCB2, AND OTRLDCB3)                                * 00780021
*        8) SEGTAB1                                                   * 00800021
*                                                                     * 00820021
*ATTRIBUTES:  REUSABLE                                                * 00840021
*NOTES:  NONE                                                         * 00860021
*                                                                     * 00880021
*********************************************************************** 00900021
*                                                                     * 00920021
*   THE PROLOGUE FOR THIS ROUTINE IS INCORPORATED IN THE PROLOGUE     * 00940021
*                   FOR HEWLFSCD                                      * 00960021
*                                                                     * 00980021
HEWLFREL CSECT                                                          01000021
*420400-422000,424400,426800-427600,430000,430800                S01904 01010021
*I478000-478784                                         OX05443,OY04003 01012003
*D624400-626000,A628400,D634000-642000,I657800-679999   OX05440,OY04132 01014003
*I682800                                                        XM09129 01016003
*SEE FIX FOR XM09129                                            XA07157 01018003
*A255600-257000  ADCONS OVER 8 MEG HAVE FF IN HIGH ORDER       @ZA08247 01019037
*                                                                       01020021
*********************************************************************** 01080021
*                       FLAG INDICATORS                               * 01160021
*********************************************************************** 01240021
ABSOLUTE EQU   X'1F'                   TO MARK RLD ABSOLUTE             01320021
*                                                                     * 01400021
*                   NEWSW2 INDICATORS IN APT                          * 01480021
MORERLDS EQU   X'80'                    MORE RLDS STILL TO BE READ      01560021
SPLTMOVD EQU   X'40'                    SPLIT RLD MOVED TO OUTPUT BFR.  01640021
MOVDOFF  EQU   X'BF'                                                    01720021
RPSAVED  EQU   X'20'                    R+P SAVED FROM PREV. RECORD.    01800021
RPSAVOFF EQU   X'DF'                                                    01880021
ABS      EQU   X'10'                   ABSOLUTE RELOCATION NEEDED       01960021
REL      EQU   X'EF'                   RELATIVE RELOCATION NEEDED       02040021
SPLITRLD EQU   X'08'                    SPLIT RLD SAVED IN HESD         02120021
GROUPRLD EQU   X'02'                   USE SAME BUFFER--GROUP RLDS      02200021
GROUPOFF EQU   X'FD'                   RLDS ARE NOT TO BE GROUPED       02280021
RPINBFR  EQU   X'01'                    R+P ALREADY MOVE TO BUFFER      02360021
NOTINBFR EQU   X'FE'                                                    02440021
*                                                                     * 02520021
*                  CONTROL RECORD INDICATORS                          * 02600021
*                                                                     * 02680021
TXT      EQU   X'01'                    TEXT FOLLOWS                    02760021
RLD      EQU   X'02'                    RLDS PRESENT                    02840021
RLDOFF   EQU   X'FD'                                                    02920021
SEGEND   EQU   X'04'                    LAST TEXT FOR SEGMENT           03000021
MODEND   EQU   X'08'                    LAST TEXT FOR MODULE            03080021
*   TEXT CONTROL BLOCK INDICATORS                                     * 03160021
*                              BYTE 1                                 * 03240021
INUSE    EQU   X'80'                    CONTROL BLOCK IN USE            03320021
BEINGWT  EQU   X'40'                    TEXT BEING WRITTEN              03400021
WRTCKD   EQU   X'3F'                                                    03480021
BEINGRD  EQU   X'20'                    TEXT BEING READ                 03560021
RDCKD    EQU   X'DF'                    READ IS CHECKED                 03640021
FIRSTXT  EQU   X'08'                    FIRST TEXT OF GROUP             03720021
LASTXT   EQU   X'04'                    LAST TEXT OF GROUP              03800021
TESTWRT  EQU   X'C0'                    TEST IF TEXT WRITTEN YET        03880021
*                              BYTE2                                  * 03960021
XDAP     EQU   X'80'                    XDAP WRITE NEEDED               04040021
DUMMY    EQU   X'40'                    DUMMY WRITE NEEDED              04120021
PREV     EQU   X'07'                    TEST FOR PREVIOUS CONTROL REC.  04200021
*                              BYTE3                                    04280021
RLDSIN1  EQU   X'C0'                    TEST FOR UNPROCESSED RLDS-BFR1  04360021
RLDSIN2  EQU   X'30'                    TEST FOR UNPROCESSED RLDS-BFR2  04440021
BUF1PROC EQU   X'40'                    RLDS IN BUFFER 1 PROCESSED      04520021
BUF1OFF  EQU   X'3F'                                                    04600021
BUF2PROC EQU   X'10'                    RLDS IN BUFFER 2 PROCESSED      04680021
BUF2OFF  EQU   X'CF'                                                    04760021
*    RLD INPUT CONTROL BLOCK INDICATORS                               * 04840021
*INUSE    EQU  X'80'                    CONTROL BLOCK IN USE            04920021
*NOTINUSE EQU  X'7F'                                                    05000021
*   RLD  NOTELIST INDICATORS                                            05080021
PROCESSD EQU   X'20'                   RLDS ALL PROCESSED IN SET        05160021
BUF2     EQU   X'10'                   RLDS IN BFR. 2                   05240021
SPLT     EQU   X'08'                    RLD SET HAS A SPLIT RLD         05320021
SPLTOFF  EQU   X'F7'                                                    05400021
JUSTPROC EQU   X'04'                    RLD SET CONTAINS RELOCATED RLDS 05480021
*                                            TO MOVE                    05560021
JUSTOFF  EQU   X'FB'                                                    05640021
*       RLD OUTPUT CONTROL BLOCK INDICATORS                           * 05720021
*INUSE   EQU   X'80'                    CONTROL BLOCK IN USE            05800021
NOTINUSE EQU   X'7F'                                                    05880021
*BEINGWT EQU   X'40'                    CONTROL BLOCK BEING WRITTEN     05960021
*WRTCKD  EQU   X'3F'                    TURN OFF BEING WRITTEN+IN USE   06040021
*      RLD ITEM INDICATORS                                              06120021
UNRESER  EQU   X'80'                    UNRESOLVED EXTERNAL REFERENCE   06200021
*                                            INDICATOR IN RLD           06280021
PROC     EQU   X'40'                    RLD HAS BEEN PROCESSED          06360021
PROCOFF  EQU   X'BF'                    PROCESSED BIT OFF               06440021
CONT     EQU   X'01'                    NEXT FA FIELD IS CHAINED        06520021
CONTOFF  EQU   X'FE'                                                    06600021
RELREL   EQU   X'7F'                   TURN OFF RELATIVE INDICATOR      06680021
*                                                                     * 06760021
*                   APT3 INDICATORS                                   * 06840021
*                                                                     * 06920021
SEGSTART EQU   X'04'                   TEXT IS FIRST IN SEGMENT         07000021
*                                                                     * 07080021
*                  REGISTER  USAGE                                    * 07160021
*                                                                     * 07240021
SAVEAREA EQU   13                      SAVE AREA REGISTER               07320021
RETURN   EQU   14                       RETURN REGISTER                 07400021
BRANCH   EQU   15                      BASE REGISTER IN HEWLFREL        07480021
WORK0    EQU   0                        GENERAL WORK REGISTER           07560021
WORK1    EQU   1                        PARM REG.AND GENERAL WORK REG.  07640021
APT      EQU   2                        BASE REG FOR APT                07720021
CURTXTCB EQU   3                       ADDRESS OF CURRENT TEXT CTRL BLK 07800021
WORK4    EQU   4                        GENERAL WORK REGISTER           07880021
HESDADDR EQU   5                        HESD ENTRY ADDR.-USED IN RELOC. 07960021
OUTRLDCB EQU   5                        ADDR.OF.CTRL.BLK.FOR OUTPUT     08040021
*                                            BFR.-USED IN MVRLD         08120021
WORK2    EQU   6                        WORK REG -USED IN DIVIDE INSTR  08200021
WORK3    EQU   7                        WORK REG -USED IN DIVIDE INSTR  08280021
INRLDCB  EQU   8                        ADDR.OF CTRL.BLK.FOR INPUT BFR. 08360021
*                                            CONTAINING NEEDED RLD'S    08440021
PREVCREC EQU   8                        PREV CTRL REC - USED ONLY IN    08520021
*                                            SCDENTAB                   08600021
NOTLSENT EQU   9                        CURR.RLD NOTELIST ENTRY         08680021
RLDSETAD EQU   10                       RLD SET BUFFER ADDR             08760021
BRANCHX  EQU   11                      SECOND LEVEL BR. REG--MVRLD      08840021
WORK5    EQU   11                      GENERAL WORK REGISTER--MREL      08920021
BASE     EQU   12                       BASE REG.FOR HEWLFSCD           09000021
*                             ERROR CODES                             * 09080021
HEX1     EQU   X'1'                     BITMAP INDIC-INVAL.2 BYTE ADCON 09160021
HEX2     EQU   X'2'                     BITMAP INDIC-INVAL.VCON IN OVLY 09240021
ERCODE44 EQU   X'42C'                   ENTRY LIST OVERFLOWED           09320021
         ENTRY RELOCATE                                                 09400021
         ENTRY  SCDENTAB                                                09480021
         ENTRY OTRLDCB1                 RLD OUTPUT CONTROL BLOCK 1      09560021
         ENTRY OTRLDCB2                 RLD OUTPUT CONTROL BLOCK 2      09640021
         ENTRY OTRLDCB3                 RLD OUTPUT CONTROL BLOCK 3      09720021
         ENTRY INRLDCB1                 RLD INPUT CONTROL BLOCK  1      09800021
         ENTRY INRLDCB2                 RLD INPUT CONTROL BLOCK  2      09880021
         USING *,BRANCH                                                 09960021
         B     MODID+6                                                  10040021
MODID    DC    C'19MREL'                                                10120021
         USING APTDSECT,APT             BASE FOR APT                    10200021
         LA    SAVEAREA,REGSA           APT SAVE AREA FOR IOCS          10280021
         ST    WORK1,CURENTAB           HESD ADDR. OF NEXT ENTAB ENTRY  10360021
         MVC   LKAENTAB+1(4),1(WORK1)     HESD--SET-UP BY HEWLFOUT      10440021
         MVC   CURENTRY(4),SELST       INIT CURR ENTRY ADDR TO BEG      10520021
         MVI   NEWSW2,X'00'            INIT. APT SWITCH AREA            10600021
         NI    APT3,X'F1'              INIT APT SWITCH AREA             10680021
**********************************************************************  10760021
*                                                                     * 10840021
*        INITIALIZATION OF TXT AND RLD CONTROL BLOCKS                 * 10920021
*                                                                     * 11000021
INIT     SR    WORK1,WORK1                                              11080021
         ST    WORK1,TXTCB1                                             11160021
         ST    WORK1,TXTCB2                                             11240021
         STH   WORK1,OTRLDCB1+2                                         11320021
         STH   WORK1,OTRLDCB2+2                                         11400021
         STH   WORK1,OTRLDCB3+2                                         11480021
         MVI   OTRLDCB1,X'00'          CLEAR FLAG FIELD OF OUTPUT BFR   11560021
         MVI   OTRLDCB2,X'00'               CONTROL BLOCKS              11640021
         MVI   OTRLDCB3,X'00'                                           11720021
         MVC   INRLDCB1(4),OF           SET RLD ADDR TO F'S             11800021
         MVC   INRLDCB2(4),OF                                           11880021
         MVC   INRLDCB1+4(4),RLDINBF1   BEG. OF RLD INPUT BUFFER 1      11960021
         MVC   INRLDCB2+4(4),RLDINBF2   BEG. OF RLD INPUT BUFFER 2      12040021
         L     WORK1,RLDOUTBF           BEG. AND END OF RLD OUTPUT BFRS 12120021
         ST    WORK1,OTRLDCB1+8                                         12200021
         LA    WORK1,236(WORK1)        (END-4 SO CAN ALWAYS ADD         12280021
         ST    WORK1,OTRLDCB1+12       ONE ID-LENGTH LIST ENTRY         12360021
         LA    WORK1,20(WORK1)                                          12440021
         ST    WORK1,OTRLDCB2+8                                         12520021
         LA    WORK1,236(WORK1)                                         12600021
         ST    WORK1,OTRLDCB2+12                                        12680021
         LA    WORK1,20(WORK1)                                          12760021
         ST    WORK1,OTRLDCB3+8                                         12840021
         LA    WORK1,236(WORK1)                                         12920021
         ST    WORK1,OTRLDCB3+12                                        13000021
*                                                                     * 13080021
*              INITIALIZATION OF CONSTANT AREAS                       * 13160021
*                                                                     * 13240021
         MVC   SRCHBEG(4),TXTIO         BEGINNING ADDR.OF TEXT I/O TBL. 13320021
         OI    APT3,FIRSTXT             SET 1ST TEXT OF MODULE ON       13400021
         LA    CURTXTCB,TXTCB1                                          13480021
         LA    WORK4,TXTCB2                                             13560021
         OI    INRLDCB2,BUF2                                            13640021
         LA    PREVCREC,OTRLDCB1        ADDR. OF CTRL. BLK. FOR PREV.CR 13720021
         OI    1(CURTXTCB),X'24'       PREV. CR. IS IN BFR. 1           13800021
         MVC   4(4,PREVCREC),8(PREVCREC) FIRST FREE ADDR.= BFR.BEG.     13880021
         OI    0(PREVCREC),INUSE                                        13960021
         L     WORK2,8(PREVCREC)                                        14040021
         XC    0(16,WORK2),0(WORK2)     ZERO THE CONTROL RECORD         14120021
         XC    CCWDISP(4),CCWDISP                                       14200021
         XC    GROUPLNG(2),GROUPLNG                                     14280021
         BR    RETURN                                                   14360021
RELOCATE STM   WORK0,BRANCH,SAVE       SAVE REGISTERS                   14440021
*                                                                     * 14520021
*                    COMPUTE  BUFFER  RELOCAND                        * 14600021
*                                                                     * 14680021
         L     WORK5,8(CURTXTCB)                                        14760021
         SH    WORK5,24(CURTXTCB)       BEGINNING OF TXT FOR CURR ID    14840021
         ST    WORK5,TXTBEG                                             14920021
         LH    WORK2,CURMULT                                            15000021
         MH    WORK2,MULTSIZE+2        MULT . MULT SIZE                 15080021
         LH    HESDADDR,CURID                                           15160021
         SLL   HESDADDR,3                                               15240021
         A     HESDADDR,HESD           CALCULATE CURRENT HESD ENTRY     15320021
         LH    WORK3,CURID                                              15400021
         SLL   WORK3,2                                                  15480021
         A     WORK3,RECNT             ADDR OF REL CNST TABLE ENTRY     15560021
         L     WORK3,0(WORK3)          GET REL RELOC CONSTANT           15640021
         AR    WORK5,WORK3                                              15720021
         L     WORK4,0(HESDADDR)       TYPE AND LKA                     15800021
         LA    WORK4,0(WORK4)                                           15880021
         SR    WORK5,WORK4                                              15960021
         SR    WORK5,WORK2              BFREL=BEG.OF TXT+REL RELO CNST  16040021
         ST    WORK5,BFREL                    -LKA-(MULT NO* MULT SIZE) 16120021
         SR    WORK3,WORK4                                              16200021
         ST    WORK3,INPUTADR          SAVE INPUT ADDR FOR MULT UPDATE  16280021
*                                                                     * 16360021
*        DETERMINE IN WHICH BUFFER RLD'S ARE LOCATED                  * 16440021
*                                                                     * 16520021
TSTBUF1  TM    2(CURTXTCB),RLDSIN1      ARE THERE UNPROC. RLD'S IN BFR1 16600021
         BC    11,TSTBUF2               NO                              16680021
         LA    INRLDCB,INRLDCB1         YES,GET ADDR.OF BFR.CTRL.BLOCK  16760021
         B     RLDADDR                                                  16840021
TSTBUF2  TM    2(CURTXTCB),RLDSIN2      ARE THERE UNPROC. RLD'S IN BFR2 16920021
         BC    11,MVRLD                 NO,GO TO MOVE RLDS              17000021
         LA    INRLDCB,INRLDCB2         GET ADDR.OF BFR.CTRL BLOCK      17080021
*                                                                     * 17160021
*              CALCULATE STORAGE ADDRESS OF RLD SET                   * 17240021
*                                                                     * 17320021
RLDADDR  L     NOTLSENT,12(INRLDCB)     GET RLD NOTELIST ENTRY ADDR     17400021
         CL    NOTLSENT,8(INRLDCB)     IS THIS 1ST ENTRY                17480021
         BNE   RLDADDR1                NO                               17560021
         L     RLDSETAD,4(INRLDCB)     USE BEG OF BUFFER                17640021
         B     RELOC                                                    17720021
RLDADDR1 LR    RLDSETAD,NOTLSENT                                        17800021
         SH    RLDSETAD,FOUR                                            17880021
         MVC   TEMPAREA(4),0(RLDSETAD) GET BOUNDARY ALIGN               17960021
         L     RLDSETAD,TEMPAREA                                        18040021
         LA    RLDSETAD,0(RLDSETAD)                                     18120021
         SLL   RLDSETAD,2                                               18200021
         A     RLDSETAD,4(INRLDCB)      STORAGE ADDR.OF RLD SET         18280021
*                                                                     * 18360021
*                   DETERMINE BYTES OF RLD INFORMATION IN SET         * 18440021
*                                                                     * 18520021
RELOC    MVC   TEMPAREA(2),4(NOTLSENT)                                  18600021
         LA    WORK1,4                                                  18680021
         MH    WORK1,TEMPAREA                                           18760021
         STH   WORK1,RLDBYTES           BYTES OF RLD INFORMATION        18840021
RELOC00  MVC   RSAVE(2),0(RLDSETAD)     SAVE  R PTR                     18920021
         NI    RSAVE,X'7F'              CLEAR DELINK BIT                19000021
         ST    RLDSETAD,PREVRPAD        SAVE ADDR OF PREV R AND P PTR   19080021
*                                                                     * 19160021
RELOC10  LA    RLDSETAD,4(RLDSETAD)     UPDATE TO FA FIELD              19240021
         LH    WORK1,RLDBYTES                                           19320021
         SH    WORK1,FOUR               DECR. RLD BYTE COUNT            19400021
         LTR   WORK1,WORK1              IS RLD SET ALL PROCESSED        19480021
         BZ    RELOC150                 YES                             19560021
         STH   WORK1,RLDBYTES           SAVE REMAINING COUNT            19640021
         TM    0(RLDSETAD),PROC         IS RLD ALREADY PROCESSED        19720021
         BO    RELOC120                 YES                             19800021
*                                                                     * 19880021
*        COMPUTE TEXT BUFFER ADDRESS OF ADCON                         * 19960021
*                                                                     * 20040021
         L     WORK1,0(RLDSETAD)        RLD FA FIELD                    20120021
         LA    WORK1,0(WORK1)           CLEAR FLAG FIELD                20200021
         A     WORK1,BFREL              BFR RELOCAND + RLD ADDR         20280021
         ST    WORK1,ADCONADR           SAVE ADCON'S TEXT BUFFER ADDR   20360021
*                                                                     * 20440021
*        DETERMINE IF RLD ITEM IS WITHIN CURRENT TEXT LIMITS          * 20520021
*                                                                     * 20600021
         C     WORK1,TXTBEG             COMPARE TO BEGINNING OF TEXT    20680021
         BL    RELOC120                 NO, NOT WITHIN THIS TXT RECORD  20760021
         C     WORK1,8(CURTXTCB)        COMPARE TO END ADDR             20840021
         BL    RELOC20                  YES, IT IS WITHIN THIS TXT REC  20920021
         CLC   1(3,RLDSETAD),1(INRLDCB) NO,CHECK IF LOW RLD ADDR.       21000021
         BNL   RELOC120                       SHOULD BE UPDATED         21080021
         MVC   1(3,INRLDCB),1(RLDSETAD)                                 21160021
         B     RELOC120                 GO TO PROCESS NEXT RLD ITEM     21240021
*                                                                     * 21320021
*                 TEST FOR A SPLIT ADDRESS CONSTANT                   * 21400021
*                                                                     * 21480021
RELOC20  TM    0(RLDSETAD),X'04'        IS LENGTH OF ADCON = 3 BYTES    21560021
         BO    RELOC30                  NO                              21640021
         LA    WORK3,2                  YES,LENGTH-1 SAVED              21720021
         AR    WORK1,WORK3              CALC END OF ADCON               21800021
         B     RELOC50                                                  21880021
RELOC30  TM    0(RLDSETAD),X'08'        IS LENGTH OF ADCON = 4 BYTES    21960021
         BZ    RELOC40                  NO,  MUST BE TWO BYTES          22040021
         LA    WORK3,3                  YES,LENGTH-1 SAVED              22120021
         AR    WORK1,WORK3              CALC END OF ADCON               22200021
         B     RELOC50                                                  22280021
RELOC40  TM    0(RLDSETAD),X'20'        IS IT A PSEUDO REG TYPE         22360021
         BZ    ERROR01                  NO, SET BIT MAP ERROR INDICATOR 22440021
         LA    WORK3,1                  YES, LENGTH-1 SAVED             22520021
         AR    WORK1,WORK3              CALC END OF ADCON               22600021
RELOC50  STH   WORK3,LENGTH             SAVE ADCON LENGTH-1             22680021
         C     WORK1,8(CURTXTCB)        COMP END OF ADCON TO END OF BFR 22760021
         BL    RELOC60                                                  22840021
         BAL   RETURN,SPLTADCN          GO TO SPLIT ADCON ROUTINE       22920021
RELOC60  L     WORK3,PREVRPAD                                           23000021
         TM    0(WORK3),X'80'           IS TYPE A DELINK                23080021
         LH    WORK3,RSAVE              GET CURRENT R PTR               23160021
         LR    WORK0,WORK3                                              23240021
         BNO   RELOC70                  NO,  TEST FOR OVERLAY           23320021
*                                                                     * 23400021
*              DELINK THE ADDRESS CONSTANT                            * 23480021
*                                                                     * 23560021
         MH    WORK3,FIVE                                               23640021
         A     WORK3,DLKT               COMPUTE DELINK TABLE ENTRY ADDR 23720021
         MVC   DLNKR(2),0(WORK3)        GET R PTR FROM DELINK TABLE     23800021
         LH    WORK0,DLNKR              WORK0 CONTAINS TRUE R PTR       23880021
         MVC   DLNKSAVE+1(3),2(WORK3)  SAVE DELIND VALUE                23960021
RELOC70  TM    PDSE7,X'20'              IS THE PGM IN OVERLAY           24040021
         BO    SCDOVLY                  YES                             24120021
*                                                                     * 24200021
*   MOVE ADCON FROM TEXT BUFFER TO WORK REG FOR RELOCATION            * 24280021
*                                                                     * 24360021
RELOC75  L     WORK3,ADCONADR           GET TEXT ADDR OF ADCON          24440021
         LA    WORK1,ADCON+3            END ADDR OF ADCON SAVE AREA     24520021
         SH    WORK1,LENGTH                                             24600021
         LH    WORK4,LENGTH                                             24680021
         EX    WORK4,MOVE               MOVE ADCON TO GET BNDY. ALIGN.  24760021
         L     WORK4,ADCON                                              24840021
         ST    WORK1,RELADCON           STORAGE ADDR OF RELO ADCON      24920021
*                                                                     * 25000021
*     TEST TYPE TO DETERMINE WHAT TYPE OF RELOCATION TO PERFORM       * 25080021
*                                                                     * 25160021
         TM    0(RLDSETAD),X'80'        IS IT RELATIVE                  25240021
         BZ    RELOC130                 NO                              25320021
         NI    0(RLDSETAD),RELREL      SET OFF REL. INDIC.              25400021
         NI    NEWSW2,REL              SET REL. RELOC. INDIC.           25480021
         LR    WORK1,WORK0    USE SAVED ID TO INDEX HESD       @ZA08247 25560037
         LR    WORK3,WORK1                                     @ZA08247 25570037
         SLL   WORK3,3                                         @ZA08247 25580037
         A     WORK3,HESD                                      @ZA08247 25590037
         TM    0(WORK3),X'0F'    TEST FOR UNRESOLVED EXTERNAL  @ZA08247 25600037
         BC    8,TESTIT                                        @ZA08247 25610037
         TM    0(WORK3),X'05'                                  @ZA08247 25620037
         BC    5,TESTIT                                        @ZA08247 25630037
         OI    0(RLDSETAD),UNRESER  SET UNRESOLVED EXT.REF.IND @ZA08247 25640037
TESTIT   TM    NEWSW2,ABS           REL OR ABS RELOCATION      @ZA08247 25650037
         BO    GETIT                ABS.USE LKA FROM HESD      @ZA08247 25660037
         LR    WORK3,WORK1          REL.GET REL FACTOR FROM    @ZA08247 25670037
         SLL   WORK3,2               THE REL.RELOC.CONST. TBL  @ZA08247 25680037
         A     WORK3,RECNT                                     @ZA08247 25690037
GETIT    L     WORK3,0(WORK3)      GET RELOC FACTOR            @ZA08247 25700037
*                                                                     * 25800021
*                        PERFORM  RELOCATION                          * 25880021
*                                                                     * 25960021
         TM    0(RLDSETAD),X'90'       UNRESOLVED VCON                  26040021
         BNO   RELOC90                 NO-GO AND RELOCATE               26120021
         SR    WORK4,WORK4        YES - CLEAR REG. AND RETURN           26200021
         OI    0(RLDSETAD),PROC   MARK RLD PROCESSED                    26280021
         B     RELOC110                                                 26360021
RELOC90  TM    0(RLDSETAD),X'02'        DOES RLD INDICATE SUBT.         26440021
         BZ    RELOC95                  NO                              26520021
         LCR   WORK3,WORK3              COMPLEMENT FOR SUBTRACT         26600021
RELOC95  AR    WORK4,WORK3              RELOCATE ADCON                  26680021
*                                                                     * 26760021
*           PLACE RELOCATED ADDRESS CONSTANT BACK INTO TEXT           * 26840021
*                                                                     * 26920021
RELOC100 ST    WORK4,ADCON              PUTS RELOC. ADCON INTO WK AREA  26970037
         L     WORK3,RELADCON           ADDR. OF RELOCATED ADCON        27080021
         L     WORK1,ADCONADR           TEXT BUFFER ADDR OF ADCON       27160021
         LH    WORK2,LENGTH                                             27240021
         EX    WORK2,MOVE               RELOC ADCON MOVE BACK INTO TEXT 27320021
*                                                                     * 27400021
*            RELOCATE THE ADDRESS FIELD OF CURRENT RLD ITEM           * 27480021
*                                                                     * 27560021
RELOC110 LH    WORK1,CURID                                              27640021
         NI    NEWSW2,REL              SET REL. RELOC. INDIC.           27720021
         BAL   RETURN,FRELFAC1          TO FETCH RELOCATION FACTOR      27800021
         L     WORK4,0(RLDSETAD)        GET RLD ADDR.                   27880021
         LA    WORK4,0(WORK4)          CLEAR FLAG FIELD                 27960021
         AR    WORK4,WORK3                                              28040021
         ST    WORK4,TEMPAREA                                           28120021
         MVC   1(3,RLDSETAD),TEMPAREA+1 UPDATE RLD ADDR FIELD           28200021
         OI    0(RLDSETAD),PROC         MARK RLD PROCESSED              28280021
*                                                                     * 28360021
*              UPDATE TO NEXT RLD ITEM                                * 28440021
*                                                                     * 28520021
RELOC120 TM    0(RLDSETAD),X'01'        IS IT A FA CONTINUATION         28600021
         BO    RELOC10                  YES, RETURN                     28680021
         LA    RLDSETAD,4(RLDSETAD)     NO, UPDATE TO NEXT RLD ITEM     28760021
         LH    WORK1,RLDBYTES                                           28840021
         SH    WORK1,FOUR                                               28920021
         STH   WORK1,RLDBYTES           DECR. RLD BYTE COUNT            29000021
         LTR   WORK1,WORK1             RLD SET ALL PROCESSED            29080021
         BZ    RELOC150                YES                              29160021
         B     RELOC00                  RETURN TO PROCESS NEXT RLD      29240021
*                                                                     * 29320021
*                   ABSOLUTE  RELOCATION                              * 29400021
*                                                                     * 29480021
RELOC130 TM    0(RLDSETAD),X'30'        IS IT A PSEUDO REG - TYPE 2     29560021
         BO    RELOC135                 YES                             29640021
         L     WORK1,PREVRPAD                                           29720021
         TM    0(WORK1),X'80'           IS DELINKING REQUIRED           29800021
         BO    RELOC140                 YES                             29880021
RELOC131 OI    NEWSW2,ABS              SET ABS. RELOC. INDIC.           29960021
         BAL   RETURN,FRELFAC           TO FETCH ABS. RELOC. FACTOR     30040021
         TM    0(RLDSETAD),X'70'        IS TYPE ABSOLUTE                30120021
         BZ    RELOC90                  YES, GO TO RELOCATE             30200021
*                                       NO, TYPE IS 'BRANCH' OR PSEUDO1 30280021
         LR    WORK4,WORK3              USE RELOC. FAC. AS ADCON VALUE  30360021
         B     RELOC100                 RETURN TO RELOCATE              30440021
RELOC135 L     WORK4,PRAL               USE  ACCUM LNC AS ADCON VALUE   30520021
         B     RELOC100                 RETURN TO RELOCATE              30600021
RELOC140 L     WORK2,DLNKSAVE          GET DELIND VALUE                 30680021
         TM    0(RLDSETAD),X'02'        DOES SIGN INDICATE SUBTRACT     30760021
         BO    RELOC145                 YES                             30840021
         LCR   WORK2,WORK2              COMPLEMENT VALUE                30920021
RELOC145 AR    WORK4,WORK2              ADD DELINK VALUE TO ADCON       31000021
         NI    0(RLDSETAD),ABSOLUTE    MARK RLD ABSOLUTE                31080021
         B     RELOC131                                                 31160021
RELOC150 OI    2(NOTLSENT),JUSTPROC    RLD SET JUST PROCESSED           31240021
         CLC   FF(3),1(INRLDCB)         IS RLD SET ALL RELOCATED        31320021
         BE    RELOC160                 YES                             31400021
         L     WORK3,0(INRLDCB)         NO, UPDATE LOWEST MULTIPLICITY  31480021
         LA    WORK3,0(WORK3)                                           31560021
         A     WORK3,INPUTADR                                           31640021
         SR    WORK2,WORK2                                              31720021
         D     WORK2,MULTSIZE          WORK3 CONTAINS UPDATED MULT      31800021
         STH   WORK3,TEMP                                               31880021
         NI    2(NOTLSENT),X'FC'       SAVE ONLY INDIC.                 31960021
         OC    TEMP(1),2(NOTLSENT)     SET INDICATORS IN NEW MULT       32040021
         MVC   2(2,NOTLSENT),TEMP       UPDATE LOWEST MULTIPLICITY      32120021
         MVC   1(3,INRLDCB),FF         REINITIAL F'S IN INRLDCB         32200021
         B     RELOC170                                                 32280021
RELOC160 OI    2(NOTLSENT),PROCESSD     SET PROCESSED BIT FOR RLD SET   32360021
*                                                                     * 32440021
*        CHECK FOR OTHER NEEDED RLD'S IN GROUPING                     * 32520021
*                                                                     * 32600021
RELOC170 CL    NOTLSENT,16(INRLDCB)     MORE RLD SETS IN GROUP          32680021
         BNE   RELOC190                YES                              32760021
         TM    0(INRLDCB),X'10'         WORKING IN BUFFER 1             32840021
         BZ    RELOC180                 YES                             32920021
         OI    2(CURTXTCB),BUF2PROC     NO,SET RLD'S IN BFR 2 PROCESSED 33000021
         B     TSTBUF1                                                  33080021
RELOC180 OI    2(CURTXTCB),BUF1PROC     SET RLD'S IN BUFFER 1 PROCESSED 33160021
         B     TSTBUF1                                                  33240021
RELOC190 LA    NOTLSENT,9(NOTLSENT)     INCR. TO NEXT NOTELIST ENTRY    33320021
         CLC   CURID(2),0(NOTLSENT)     CURRENT ID = ENTRY ID           33400021
         BNE   RELOC170                 NO                              33480021
         MVC   TEMPAREA(2),2(NOTLSENT)                                  33560021
         NI    TEMPAREA,X'03'          CLEAR INDICATORS                 33640021
         CLC   CURMULT(2),TEMPAREA     CURRENT MULT = ENTRY MULT        33720021
         BNE   RELOC170                 NO                              33800021
         ST    NOTLSENT,12(INRLDCB)     UPDATE NOTELIST FIELD OF CB     33880021
         B     TSTBUF1                  RETURN TO PROCESS               33960021
*                                                                     * 34040021
*   SUBROUTINE TO FETCH THE NEEDED RELOCATION FACTOR - WORK3 CONTAINS * 34120021
*     THE RELOCATION FACTOR ON EXIT - WORK0 CONTAINS R PTR ON ENTRANCE* 34200021
*                                                                     * 34280021
FRELFAC  LR    WORK1,WORK0              USE SAVED ID TO INDEX HESD      34360021
FRELFAC1 LR    WORK3,WORK1                                              34440021
         SLL   WORK3,3                                                  34520021
         A     WORK3,HESD                                               34600021
         TM    0(WORK3),X'0F'           TEST FOR UNRESOLVED EXTERNAL    34680021
         BC    8,TEST                                                   34760021
      TM   0(WORK3),X'05'                                               34840021
         BC    5,TEST                                                   34920021
         OI    0(RLDSETAD),UNRESER      SET UNRESOLVED EXT.REF.INDIC.   35000021
TEST     TM    NEWSW2,ABS              REL OR ABS RELOCATION NEEDED     35080021
         BO    GET                      ABS. - USE LKA FIELD FROM HESD  35160021
         LR    WORK3,WORK1              REL. - GET RELOC.FACTOR FROM    35240021
         SLL   WORK3,2                       THE REL. RELOC. CONST. TBL 35320021
         A     WORK3,RECNT                                              35400021
GET      L     WORK3,0(WORK3)           GET RELOC FACTOR                35480021
         LA    WORK3,0(WORK3)           CLEAR HIGH ORDER BYTE           35560021
         BR    RETURN                   RETURN                          35640021
*                                                                     * 35720021
*                   OVERLAY RELOCATION  ROUTINE                       * 35800021
*                                                                     * 35880021
SCDOVLY  NI    VCONSW,LN3OFF            INIT 3-BYT VCON SWCH OFF A48242 35960000
         TM    0(RLDSETAD),X'60'        IS IT A V-TYPE ADCON            36010000
         BC    5,RELOC75               NO,RETURN                        36040021
         TM    0(RLDSETAD),X'10'                                        36120021
         BZ    RELOC75                  NO, RETURN                      36200021
         TM    0(RLDSETAD),X'0C'        IS LENGTH = 4 BYTES             36280021
         BM    ERROR02A                 NO - POSSIBLE ERROR      A48242 36360000
*                                       GO TURN ON SWITCH        A48242 36410000
RETRN    EQU   *                        AND CONTINUE             A48242 36420000
*                                                                     * 36440021
*              OBTAIN  'FROM'  SEGMENT                                * 36520021
*                                                                     * 36600021
         SR    WORK5,WORK5                                              36680021
         NI    0(RLDSETAD),RELREL      SET OFF RELATIVE INDIC.          36760021
         IC    WORK5,4(HESDADDR)        GET SEG. NO. FROM HESD          36840021
*                                                                     * 36920021
*              OBTAIN   'TO'   SEGMENT                                * 37000021
*                                                                     * 37080021
         OI    NEWSW2,ABS              SET ABS. RELOC. INDIC.           37160021
         BAL   RETURN,FRELFAC                                           37240021
         TM    0(RLDSETAD),X'80'        IS RLD MARKED 'UNRESOLVED ER'   37320021
         BO    RELOC75                  YES, RETURN TO NON-OVERLAY      37400021
         LR    WORK3,WORK0                                              37480021
         SLL    WORK3,3                                                 37560021
         A     WORK3,HESD              HESD ADDR OF R PTR               37640021
         SR    WORK1,WORK1                                              37720021
         IC    WORK1,4(WORK3)           GET SEG NO. FROM HESD           37800021
         BAL   RETURN,CPTH              GO TO COMMON PATH ROUTINE       37880021
*                                                                     * 37960021
*        TEST   RESULTS TO DETERMINE TYPE OF CALL                     * 38040021
*                                                                     * 38120021
         IC    WORK1,4(WORK3)                                           38200021
         CLR   WORK5,WORK1                                              38280021
         BE    RELOC75                 UPWARD CALL-NO ENTAB NEEDED      38360021
         IC    WORK1,4(HESDADDR)                                        38440021
         CLR   WORK5,WORK1                                              38520021
         BE    OVLY70                  DOWNWARD CALL-ENTAB NEEDED       38600021
*                                                                     * 38680021
*        TEST TO DETERMINE IF IT IS WITHIN OR ACROSS A REGION         * 38760021
*                                                                     * 38840021
         ST    SAVEAREA,SAVE13         SAVE REG. 13 TEMPORARILY         38920021
         LA    SAVEAREA,OVLY30          INITIALIZE                      39000021
OVLY10   LA    RETURN,4                 LOOP CT = 4 REGIONS             39080021
         LA    WORK5,LSTS                                               39160021
         SR    WORK2,WORK2                                              39240021
OVLY20   IC    WORK2,0(WORK5)           GET HIGHEST SEG OF REGION       39320021
         CLR   WORK1,WORK2              COMPARE TO 'TO' AND 'FROM' SEG  39400021
         BCR   13,SAVEAREA              SEG. IS IN REGION               39480021
         LA    WORK5,1(WORK5)           SEG NOT IN REGION -UPDATE TO    39560021
         BCT   RETURN,OVLY20                 NEXT REGION                39640021
OVLY30   ST    WORK5,TEMPAREA           FOUND REGION FOR 'FROM' SEG     39720021
         LA    SAVEAREA,OVLY40                                          39800021
         IC    WORK1,4(WORK3)           GET 'TO' SEGMENT                39880021
         B     OVLY10                   GO TO FIND ITS REGION           39960021
OVLY40   CL    WORK5,TEMPAREA           ARE SEGMENTS IN SAME REGION     40040021
         L     SAVEAREA,SAVE13         RESTORE REG 13                   40120021
         BNE   OVLY70                   NO                              40200021
*                                                                     * 40280021
*              SEGMENTS IN SAME REGION-TEST FOR EXCLUSIVE CALL        * 40360021
*                                                                     * 40440021
         L     WORK2,SELST                                              40520021
         LH    WORK5,ENELTC                                             40600021
         LTR   WORK5,WORK5                                              40680021
         BZ    RELOC75                 NO ENTRIES-INVALID EXCLUS. CALL  40760021
OVLY50   CH    WORK0,0(WORK2)           ENTRY IN ENTRY LIST FOR CALL    40840021
         BE    OVLY60                   YES                             40920021
         LA    WORK2,6(WORK2)                                           41000021
         BCT   WORK5,OVLY50                                             41080021
         B     RELOC75                  INVALID EXCLUSIVE CALL          41160021
*                                                                     * 41240021
*        PLACE CUR. SEG.NO. AND ENTAB ADDR. INTO ADCON TEXT LOCATION  * 41320021
*                                                                     * 41400021
OVLY60   TM    VCONSW,LEN3             IS IT A 3-BYTE VCON ?     A48242 41450000
         BO    ERROR02B                IF SO, IT IS AN ERROR     A48242 41460000
         L     WORK5,ADCONADR           TXT ADDR OF ADCON        A48242 41480000
*        PLACE CUR.SEG.NO. AND ENTAB ADDR INTO ADCON TEXT LOCATION    * 41560021
         MVC   1(3,WORK5),3(WORK2)      ENTAB ENTRY ADDR.               41640021
         MVC   0(1,WORK5),CURSEG+1      CUR. SEG. NO.                   41720021
         B     RELOC110                 RETURN TO RELOCATE              41800021
OVLY70   TM    VCONSW,LEN3             IS IT A 3-BYTE VCON ?     A48242 41850000
         BO    ERROR02B                IF SO, IT IS AN ERROR     A48242 41860000
         LH    WORK5,ENELTC                                      A48242 41880000
OVLY70C  CH    WORK5,ENELTX             ENTRY LIST FULL                 41960021
         BL    OVLY70B                 NO,BRANCH OUT            S01904  42040021
         TM    APT4,REALOCTE           REALLOC DONE ALREADY?    S01904  42120021
         BNO   OVLY70A                 NO,TRY TO REALLOC        S01904  42200021
         LA    RETURN,ERCODE44         SIGNAL ERROR COND                42280021
         B     ERROR                    GO TO ERROR EXIT                42360021
OVLY70A  STM   WORK1,WORK3,BRNCHSV     SAVE WORK REGISTERS      S01904  42440021
         L     WORK3,FFCADR            HIGHEST ADDR RETAINED BY ALLOC   42520021
         S     WORK3,SELST             MINUS ADDR OF 2PASS ENTRY LIST   42600021
         XR    WORK2,WORK2             EQUALS AVAILABLE BYTES   S01904  42680021
         D     WORK2,SIXFULL           DIVIDE BY SIX            S01904  42760021
         STH   WORK3,ENELTX            YIELDS NEW MAX NO OF ENTRIES     42840021
         OI    APT4,REALOCTE           FLAG REALLOCATION AS DONE        42920021
         LM    WORK1,WORK3,BRNCHSV     RESTORE REGISTERS        S01904  43000021
         B     OVLY70C                 RESUME PROCESSING        S01904  43080021
OVLY70B  LTR   WORK5,WORK5              ENTRY LIST EMPTY                43160021
         BZ    OVLY90                   YES                             43240021
*                                                                     * 43320021
*        SCAN ENTRY LIST ON  ID  FOR SAVED R                          * 43400021
*                                                                     * 43480021
         L     WORK2,SELST                                              43560021
OVLY80   CH    WORK0,0(WORK2)           SAVED R = ENTRY LIST ID         43640021
         BE    OVLY60                   YES                             43720021
         LA    WORK2,6(WORK2)                                           43800021
         BCT   WORK5,OVLY80                                             43880021
*                                                                     * 43960021
*        ENTRY LIST FOR ID DOES NOT EXIST - CREATE AN ENTRY           * 44040021
*                                                                     * 44120021
OVLY90   L     WORK2,CURENTRY                                           44200021
         STH   WORK0,0(WORK2)           R PTR TO ENTRY LIST             44280021
         MVC   2(1,WORK2),CURSEG+1      CURRENT SEGMENT TO ENTRY LIST   44360021
         MVC   3(3,WORK2),LKAENTAB+1    ENTAB LKA                       44440021
*                                                                     * 44520021
*        PLACE CUR.SEG.NO.AND ENTAB ADDR.INTO ADCON TEXT LOCATION     * 44600021
*                                                                     * 44680021
         L     WORK5,ADCONADR                                           44760021
         MVC   0(4,WORK5),2(WORK2)      MODIFY VALUE OF ADCON           44840021
         LA    WORK2,6(WORK2)                                           44920021
         ST    WORK2,CURENTRY           UPDATE ENTRY LIST 1ST FREE ADDR 45000021
         L     WORK1,LKAENTAB                                           45080021
         LA    WORK1,12(WORK1)                                          45160021
         ST    WORK1,LKAENTAB           UPDATE TO NEXT ENTAB LINE ADDR. 45240021
         LH    WORK1,ENELTC                                             45320021
         LA    WORK1,1(WORK1)           INC. ENTRY LIST COUNT           45400021
         STH   WORK1,ENELTC                                             45480021
         B     RELOC110                 RETURN TO RELOCATE              45560021
*                                                                     * 45640021
*              SPLIT ADDRESS CONSTANT ROUTINE                         * 45720021
*                                                                     * 45800021
SPLTADCN STM   WORK0,BRANCH,SAVERET    SAVE ALL REGISTERS               45880021
         OI    2(NOTLSENT),SPLT         SET SPLIT ADCON IN RLD SET      45960021
         ST    RLDSETAD,SPLITADR        SAVE START ADDR OF SPLIT RLD    46040021
         L     WORK2,SAVE+16            GET ADDR OF OTHER TEXT CTRL BLK 46120021
         TM    0(WORK2),INUSE           IS IT IN USE                    46200021
         BO    SPLT7                    YES                             46280021
SPLT2    L     WORK3,4(CURTXTCB)        BEG. OF TEXT IN BUFFER          46360021
         L     WORK1,BFREL                                              46440021
         A     WORK1,TXTBFBEG                                           46520021
         S     WORK1,TXTBEG                                             46600021
         ST    WORK1,BFREL             UPDATE BUFFER RELOC. CONSTANT    46680021
         A     WORK1,0(RLDSETAD)                                        46760021
         ST    WORK1,ADCONADR          UPDATE ADCON ADDRESS             46840021
         L     WORK1,TXTBFBEG           BEG. OF TEXT BUFFER             46920021
         ST    WORK1,TXTBEG            UPDATE TEXT BEG. ADDR            47000021
         ST    WORK1,4(CURTXTCB)        UPDATE BEG. OF TEXT IN BUFFER   47080021
         L     WORK5,MULTSIZE           SIZE OF TEXT                    47160021
         LA    WORK4,255                YES                             47240021
SPLT3    CH    WORK5,CON256             MORE THAN 256 BYTES TO MOVE     47320021
         BL    SPLT5                    NO                              47400021
         EX    WORK4,MOVE               MOVE 256 BYTES                  47480021
         SH    WORK5,CON256             DECR TXT SIZE                   47560021
         AH    WORK3,CON256             UPDATE TXT BUFFER PTRS          47640021
         AH    WORK1,CON256                                             47720021
         B     SPLT3                                                    47800021
SPLT5    EQU   *                                        OX05443,OY04003 47850003
         LTR   WORK5,WORK5             ANY REMAINDER?   OX05443,OY04003 47860003
         BNP   SPLT6                   NO,CONTINUE      OX05443,OY04003 47870003
         LR    WORK4,WORK5             SAVE COUNT       OX05443,OY04003 47872003
         BCTR  WORK4,0                 DECRE FOR MOVE   OX05443,OY04003 47874003
         EX    WORK4,MOVE              MOVE REMAINDER   OX05443,OY04003 47876003
         AR    WORK1,WORK5             UPDATE TEXT BUFFER POINTER       47878003
SPLT6    EQU   *                                        OX05443,OY04003 47878403
         ST    WORK1,8(CURTXTCB)        UPDATE END OF TEXT IN BUFFER    47880003
         ST    WORK1,FREEADDR          UPDATE 1ST FREE ADDR             47960021
         LR    WORK1,WORK2                                              48040021
         LA    WORK0,1                 LOOKAHEAD READ INDIC             48120021
         L     BRANCHX,ADGET                                            48200021
         BALR  RETURN,BRANCHX           GO TO READ IN NEXT MULT         48280021
SPLT7    TM    0(WORK2),BEINGRD         IS IT BEING READ                48360021
         BO    SPLT8                    YES                             48440021
         TM    0(WORK2),BEINGWT         IS IT BEING WRITTEN             48520021
         BZ    SPLT9                    NO                              48600021
         L     RETURN,ADCHKWRT                                          48680021
         BALR  BRANCHX,RETURN          CHECK WRITE                      48760021
         NI    0(WORK2),WRTCKD          MARK TEXT CTRL BLK NOT IN USE   48840021
         B     SPLT2                       AND NOT BEING WRITTEN        48920021
SPLT8    L     RETURN,ADCHKRD                                           49000021
         BALR  BRANCHX,RETURN          CHECK READ                       49080021
         NI    0(WORK2),RDCKD           MARK TEXT CTRL BLK NOT BEING RD 49160021
SPLT9    LM    WORK0,BRANCH,SAVERET    RESTORE ALL REGISTERS            49240021
         BR    RETURN                   RETURN                          49320021
*                                                                     * 49400021
* DETERMINE THE HIGHEST SEGMENT IN THE COMMON PATH BETWEEN 2 SEGMENTS * 49480021
*                                                                     * 49560021
CPTH     L     WORK2,SGT1                                               49640021
CPTH1    CLR   WORK5,WORK1                                              49720021
         BCR   8,RETURN                 SEGMENTS EQUAL - RETURN         49800021
         BH    CPTH2                                                    49880021
         XR    WORK5,WORK1              SWITCH REGISTERS                49960021
         XR    WORK1,WORK5                                              50040021
         XR    WORK5,WORK1                                              50120021
CPTH2    IC    WORK5,0(WORK2,WORK5)                                     50200021
         LTR   WORK5,WORK5              SEGMENT ENTRY > 0               50280021
         BH    CPTH1                   YES                              50360021
         LA    WORK5,1                  NO, SET SEGMENT = 1             50440021
         BR    RETURN                   RETURN                          50520021
*                                                                     * 50600021
*                                                                     * 50680021
*     MOVE  RELOCATED RLDS FROM INPUT BUFFER TO OUTPUT BUFFER         * 50760021
*                                                                     * 50840021
*                                                                     * 50920021
MVRLD    TM    NEWSW2,SPLTMOVD          CHECK IF SPLIT RLD IN BUFFER    51000021
         BO    MVRLD20                  YES                             51080021
         TM    NEWSW2,GROUPRLD         SHOULD RLDS BE GROUPED           51160021
         BZ    MVRLD00                 NO                               51240021
         NI    NEWSW2,GROUPOFF         SET RLD GROUP INDIC OFF          51320021
         L     OUTRLDCB,SAVEBFCB       USE PREV BUFFER CTRL BLK         51400021
         B     MVRLD30                                                  51480021
*                                                                     * 51560021
*                  FIND  A FREE OUTPUT RLD BUFFER                     * 51640021
*                                                                     * 51720021
MVRLD00  LA    OUTRLDCB,OTRLDCB1        IS BUFFER 1 FREE                51800021
         TM    0(OUTRLDCB),INUSE                                        51880021
         BZ    MVRLD25                  YES                             51960021
         LA    OUTRLDCB,OTRLDCB2        IS BUFFER 2 FREE                52040021
         TM    0(OUTRLDCB),INUSE                                        52120021
         BZ    MVRLD25                  YES                             52200021
         LA    OUTRLDCB,OTRLDCB3        IS BUFFER 3 FREE                52280021
         TM    0(OUTRLDCB),INUSE                                        52360021
         BZ    MVRLD25                  YES                             52440021
         TM    0(OUTRLDCB),BEINGWT      IS BUFFER 3 BEING WRITTEN       52520021
         BO    MVRLD10                  YES                             52600021
         LA    OUTRLDCB,OTRLDCB2        IS BUFFER 2 BEING WRITTEN       52680021
         TM    0(OUTRLDCB),BEINGWT                                      52760021
         BO    MVRLD10                  YES                             52840021
         LA    OUTRLDCB,OTRLDCB1        IS BUFFER 1 BEING WRITTEN       52920021
         TM    0(OUTRLDCB),BEINGWT                                      53000021
         BZ    MVRLD210                 NO, ALL BUFFERS IN USE - WRITE  53080021
MVRLD10  L     RETURN,ADCHKWRT                                          53160021
         BALR  BRANCHX,RETURN          BRANCH TO CHECK WRITE            53240021
         NI    0(OUTRLDCB),WRTCKD       WRITE CHECKED -CB NOT IN USE    53320021
         B     MVRLD25                                                  53400021
MVRLD20  L     OUTRLDCB,CBTOUSE         CB.ADDR.FOR BFR.WITH SPLIT RLD  53480021
         NI    NEWSW2,MOVDOFF           TURN OFF SPLIT RLD MOVED INDIC. 53560021
         B     MVRLD28                                                  53640021
MVRLD25  L     WORK2,8(OUTRLDCB)        GET BEG. ADDR. OF BUFFER        53720021
         XC    0(16,WORK2),0(WORK2)     CLEAR THE CONTROL RECORD        53800021
         MVC   4(4,OUTRLDCB),8(OUTRLDCB) FIRST FREE ADDR= BFR.BEG.      53880021
MVRLD28  MVC   TEMP(1),1(OUTRLDCB)                                      53960021
         XI    TEMP,X'FF'               FLIP BITS                       54040021
         NI    TEMP,X'38'               ALL BITS OFF EXCEPT BFR. INDIC. 54120021
         OC    1(1,CURTXTCB),TEMP       ASSOCIATE BFR. WITH TXTCB       54200021
         OI    0(OUTRLDCB),INUSE        MARK OUTPUT CB USED             54280021
         XC    2(2,OUTRLDCB),2(OUTRLDCB) ZERO ID LENGTH FIELD           54360021
MVRLD30  TM    NEWSW2,RPSAVED           HAVE R AND P PTRS.BEEN SAVED    54440021
         BO    MVRLD100                                                 54520021
*                                                                     * 54600021
*        DETERMINE IN WHICH BUFFER THE PROCESSED RLDS ARE             * 54680021
*                                                                     * 54760021
MVRLD35  TM    2(CURTXTCB),BUF1PROC     PROCESSED RLDS IN BUFFER 1      54840021
         LA    INRLDCB,INRLDCB1                                         54920021
         BO    MVRLD40                  YES                             55000021
         TM    2(CURTXTCB),BUF2PROC     PROCESSED RLDS IN BUFFER 2      55080021
         LA    INRLDCB,INRLDCB2                                         55160021
         BO    MVRLD40                  YES                             55240021
         TM    NEWSW2,MORERLDS         ARE THERE MORE RLDS FOR TEXT     55320021
         BZ    MVRLD36                 NO, CHECK FOR EMPTY BUFFER       55400021
         OI    NEWSW2,GROUPRLD         YES, SET RLD GROUP INDIC.        55480021
         ST    OUTRLDCB,SAVEBFCB       SAVE CTRL BLK ADDRESS            55560021
         B     MVRLD37                                                  55640021
MVRLD36  L     WORK2,4(OUTRLDCB)       FIRST FREE ADDRESS               55720021
         LR    WORK1,OUTRLDCB                                           55800021
         CL    WORK2,8(OUTRLDCB)       HAS ANYTHING BEEN ADDED TO BFR   55880021
         BNE   MVRLD37                 YES                              55960021
         NI    0(WORK2),RLDOFF         NO, TURN RLD INDIC. OFF          56040021
         NI    0(OUTRLDCB),NOTINUSE    MARK CTRL BLK NOT IN USE         56120021
         NC    1(1,CURTXTCB),1(OUTRLDCB)                                56200021
MVRLD37  LM    2,15,SAVE+8             RESTORE REGISTER 0,2-15          56280021
         L     0,SAVE                                                   56360021
         BR    RETURN                   RETURN,ALL RELOCATED RLDS MOVED 56440021
*                                                                     * 56520021
*          IDENTIFY NOTELIST ENTRY PERTAINING TO THE RLDS THAT        * 56600021
*                  ARE TO BE MOVED                                    * 56680021
*                                                                     * 56760021
MVRLD40  L     WORK2,8(OUTRLDCB)                                        56840021
         OI    0(WORK2),RLD             SET RLDS PRESENT INDIC IN CR    56920021
         L     NOTLSENT,8(INRLDCB)      ADDR. OF 1ST NOTELIST ENTRY     57000021
MVRLD50  CLC   0(2,NOTLSENT),CURID     ENTRY ID = CURRENT ID            57080021
         BNE   MVRLD60                                                  57160021
         TM    2(NOTLSENT),JUSTPROC     RLD SET HAS RELOC.RLDS TO MOVE  57240021
         BO    MVRLD80                  YES                             57320021
MVRLD60  LA    NOTLSENT,9(NOTLSENT)     UPDATE TO NEXT ENTRY            57400021
         CL    NOTLSENT,16(INRLDCB)     ALL RLDS MOVED FROM BUFFER      57480021
         BNH   MVRLD50                  NO                              57560021
         L     WORK2,4(OUTRLDCB)                                        57640021
         AH    WORK2,TWELVE                                             57720021
         NI    0(WORK2),CONTOFF        SET CONT. OFF IN LAST FA FIELD   57800021
         TM    0(INRLDCB),BUF2          ALL RLDS MOVED FROM INPUT BFR2  57880021
         BO    MVRLD70                  YES                             57960021
         NI    2(CURTXTCB),BUF1OFF      NO RLDS IN BFR1 FOR CURR. TEXT  58040021
         B     MVRLD35                                                  58120021
MVRLD70  NI    2(CURTXTCB),BUF2OFF      NO RLDS IN BFR2 FOR CURR. TEXT  58200021
         B     MVRLD35                                                  58280021
MVRLD80  NI    2(NOTLSENT),JUSTOFF      TURN RLDS TO MOVE INDIC. OFF    58360021
         ST    NOTLSENT,12(INRLDCB)                                     58440021
*                                                                     * 58520021
*    CALCULATE  ADDRESS AND EXTENT OF RLD SET IN BUFFER               * 58600021
*                                                                     * 58680021
         MVC   TEMPAREA(2),4(NOTLSENT)  LENGTH OF RLD SET               58760021
         LH    WORK2,TEMPAREA                                           58840021
         SLL   WORK2,2                  MULT. TO GET BYTES OF RLD       58920021
         CL    NOTLSENT,8(INRLDCB)     IS THIS 1ST ENTRY FOR BUFFER     59000021
         BNE   MVRLD90                 NO                               59080021
         L     RLDSETAD,4(INRLDCB)     YES USE BEG. OF BUFFER           59160021
         B     MVRLD95                                                  59240021
MVRLD90  SH    NOTLSENT,THREE                                           59320021
         MVC   TEMPAREA+1(3),0(NOTLSENT) GET DISP.OF RLDS FROM BFR.BEG. 59400021
         L     RLDSETAD,TEMPAREA                                        59480021
         LA    RLDSETAD,0(RLDSETAD)     CLEAR HIGH ORDER BYTES          59560021
         SLL   RLDSETAD,2                                               59640021
         A     RLDSETAD,4(INRLDCB)      ADDR. OF RLD SET IN BUFFER      59720021
MVRLD95  AR    WORK2,RLDSETAD                                           59800021
         ST    WORK2,RLDSTEND           SAVE RLD SET END ADDR.          59880021
*                                                                     * 59960021
*      CALCULATE BEGIN AND END OF TEXT                                * 60040021
*                                                                     * 60120021
         LH    WORK2,CURMULT                                            60200021
         MH    WORK2,MULTSIZE+2         DISPLACEMENT FROM BEG. OF CSECT 60280021
         LH    WORK1,CURID                                              60360021
         SLL   WORK1,3                                                  60440021
         A     WORK1,HESD                                               60520021
         L     WORK3,0(WORK1)                                           60600021
         LA    WORK3,0(WORK3)                                           60680021
         AR    WORK2,WORK3              DISPLACEMENT FROM BEG.OF MODULE 60760021
         ST    WORK2,MULTBEG            START DISP. OF MULT.            60840021
         A     WORK2,MULTSIZE                                           60920021
         ST    WORK2,MULTEND            END  DISP. OF  MULT.            61000021
*                                                                     * 61080021
*    CHECK FOR SPLIT RLD FROM PREVIOUS TEXT AND FOR SPLIT RLD         * 61160021
*                      IN CURRENT TEXT                                * 61240021
*                                                                     * 61320021
         NI    NEWSW2,NOTINBFR         TURN OFF R+P IN BFR.             61400021
         MVI   RPPTRS,X'FF'             SET PREV. R PTR TO HIGHEST R    61480021
         TM    NEWSW2,SPLTMOVD          HAS SPLIT RLD BEEN MOVED TO BFR 61560021
         BZ    MVRLD100                                                 61640021
         L     WORK2,8(OUTRLDCB)                                        61720021
         MVC   RPPTRS(2),16(WORK2)     SET R PTR TO SPLIT RLD R PTR     61800021
         OI    NEWSW2,RPINBFR           TURN ON  R+P IN BFR. INDICATOR  61880021
MVRLD100 L     NOTLSENT,12(INRLDCB)     NOTELIST ENTRY ADDR.            61960021
MVRLD102 TM    NEWSW2,RPSAVED           R+P SAVED FROM PREV RLD RECORD  62040021
         BZ    MVRLD105                 NO                              62120021
         NI    NEWSW2,RPSAVOFF          SET R+P SAVED INDIC OFF         62200021
         L     RLDSETAD,RESUMEAD        GET ADDR OF CHAIN               62280021
         B     MVRLD120                                                 62360021
MVRLD105 MVC   RSAVE(2),0(RLDSETAD)                                     62680021
         TM    RSAVE,X'80'             IS R PTR MARKED DELINK           62760021
         BZ    MVRLD110                NO               OX05440,OY04132 62840003
         NI    RSAVE,X'7F'             TURN OFF DELINK BIT              62920021
         SR    WORK2,WORK2             CLEAR REGISTER                   63000021
         LH    WORK2,RSAVE                                              63080021
         MH    WORK2,FIVE                                               63160021
         A     WORK2,DLKT              DELINK TABLE ENTRY FOR R PTR     63240021
         MVC   RSAVE(2),0(WORK2)       UPDATE R PTR                     63320021
MVRLD110 LA    RLDSETAD,4(RLDSETAD)     UPDATE TO FA FIELD              64280021
MVRLD120 TM    0(RLDSETAD),PROC         IS RLD PROCESSED                64360021
         BZ    MVRLD140                 NO                              64440021
         TM    2(NOTLSENT),SPLT         IS THERE A SPLIT RLD IN SET     64520021
         BZ    MVRLD121                NO                               64600021
         CL    RLDSETAD,SPLITADR       IS THIS A SPLIT RLD              64680021
         BE    MVRLD145                YES                              64760021
MVRLD121 L     WORK2,0(RLDSETAD)        GET RLD ADD?                    64840021
         LA    WORK2,0(WORK2)                                           64920021
*                                                                     * 65000021
*    CHECK IF  RLD REFERS TO CURRENT MULTIPLICITY                     * 65080021
*                                                                     * 65160021
         CL    WORK2,MULTBEG                                            65240021
         BL    MVRLD140                                                 65320021
         CL    WORK2,MULTEND                                            65400021
         BNL   MVRLD140                                                 65480021
         TM    NEWSW2,RPINBFR           ARE R+P PTRS.ALREADY IN BUFFER  65560021
         L     WORK2,4(OUTRLDCB)        FIRST FREE ADDR                 65640021
         BO    MVRLD125                 YES                             65720021
*                                                                     * 65800021
*                                                       OX05440,OY04132 65850003
*      CHECK IF RLDS CAN BE CHAINED WITH PREVIOUS RLDS  OX05440,OY04132 65860003
*                                                       OX05440,OY04132 65870003
MVRLD106 CLC   RPPTRS(2),RSAVE         DOES PREV R = NEW R              65872003
         BNE   MVRLD108                 NO              OX05440,OY04132 65874003
         CL    WORK2,8(OUTRLDCB)       ANYTHING IN BUFFER               65878003
         BE    MVRLD108                NO               OX05440,OY04132 65878403
         OI    NEWSW2,RPINBFR          SET R AND P IN BUFFER            65878803
         OI    12(WORK2),CONT          SET CONT BIT IN PREV FA          65879203
         B     MVRLD123                                 OX05440,OY04132 65879803
MVRLD108 MVC   RPPTRS(2),RSAVE         SAVE NEW R PTR   OX05440,OY04132 65879903
*                                                                       65906603
*          CHECK IF ROOM IN OUTPUT RLD BUFFER                         * 65933303
*                                                                     * 65960021
MVRLD123 EQU   *                                        OX05440,OY04132 66010003
         CLC   4(4,OUTRLDCB),12(OUTRLDCB) IS THERE ROOM FOR R-P PTR.    66040021
         BNL   MVRLD180                 NO                              66120021
         L     WORK3,12(OUTRLDCB)                                       66200021
         SH    WORK3,EIGHT                                              66280021
         CR    WORK2,WORK3              IS THERE ROOM TO ADD R+P AND FA 66360021
         BH    MVRLD180                 NO                              66440021
         CL    WORK2,8(OUTRLDCB)       1ST ENTRY IN BUFFER              66520021
         BE    MVRLD122                YES                              66600021
         NI    12(WORK2),CONTOFF       MAKE SURE CONT. INDIC OFF        66680021
MVRLD122 MVC   16(4,WORK2),RPPTRS      MOVE R+P TO OUTPUT BUFFER        66760021
         LA    WORK2,4(WORK2)                                           66840021
         ST    WORK2,4(OUTRLDCB)        UPDATE 1ST FREE ADDR.           66920021
         OI    NEWSW2,RPINBFR           SET INDICATOR  R+P  IN BFR      67000021
         B     MVRLD130                                                 67080021
MVRLD125 CLC   4(4,OUTRLDCB),12(OUTRLDCB) IS THERE ROOM TO ADD FA       67160021
         BNL   MVRLD170                 NO                              67240021
         OI    12(WORK2),CONT          MAKE SURE CONT INDIC ON          67320021
*                                                                     * 67400021
*         MOVE RLD INFORMATION FROM INPUT TO OUTPUT BUFFER            * 67480021
*                                                                     * 67560021
MVRLD130 MVC   16(4,WORK2),0(RLDSETAD) MOVE FA TO OUTPUT BUFFER         67640021
         NI    16(WORK2),PROCOFF       TURN OFF PROCESSED INDICATOR     67720021
         LA    WORK2,4(WORK2)                                           67800021
         ST    WORK2,4(OUTRLDCB)        UPDATE 1ST FREE ADDR.           67880021
MVRLD140 TM    0(RLDSETAD),CONT         IS RLD MARKED CONTINUATION      67960021
         BZ    MVRLD160                 NO                              68040021
         B     MVRLD110                YES                              68120021
MVRLD145 L     WORK2,HESD                                               68200021
         MVC   0(4,WORK2),RPPTRS        MOVE SAVED R+P PTRS TO HESD     68280021
         MVC   0(2,WORK2),RSAVE         GET CORRECT R PTR      XM09129  68330003
         MVC   4(4,WORK2),0(RLDSETAD)   MOVE FA FIELD                   68360021
         NI    4(WORK2),X'BE'           TURN PROC. AND CONT BITS OFF    68440021
         OI    NEWSW2,SPLITRLD          SET SPLIT RLD SAVED IN HESD     68520021
         NI    2(NOTLSENT),SPLTOFF      TURN SPLIT RLD IN SET OFF       68600021
         TM    0(RLDSETAD),CONT         IS CONT. INDICATED              68680021
         BO    MVRLD110                                                 68760021
MVRLD160 NI    NEWSW2,NOTINBFR          TURN OFF R+P IN BFR. INDIC.     68840021
         LA    RLDSETAD,4(RLDSETAD)     UPDATE TO NEXT R+P FIELD        68920021
         CL    RLDSETAD,RLDSTEND        ARE RLDS ALL MOVED FROM SET     69000021
         BL    MVRLD100                 NO                              69080021
         L     WORK2,8(OUTRLDCB)       BUFFER BEGINNING                 69160021
         L     WORK3,4(OUTRLDCB)       1ST FREE ADDR                    69240021
         OI    0(WORK2),RLD            SET RLDS PRESEND INDIC           69320021
         SR    WORK3,WORK2                                              69400021
         ST    WORK3,4(WORK2)          STORE RLD BYTE COUNT IN BUFFER   69480021
         TM    0(CURTXTCB),LASTXT      IS TEXT LAST IN GROUP            69560021
         BO    MVRLD60                 YES                              69640021
         OI    NEWSW2,GROUPRLD         SET RLDS TO BE GROUPED INDIC     69720021
         ST    OUTRLDCB,SAVEBFCB       SAVE CTRL BLK ADDR               69800021
         B     MVRLD60                  YES, DET.IF MORE SETS IN GROUP  69880021
*                                            TO BE MOVED                69960021
*                                                                     * 70040021
* THE RLD OUTPUT BUFFER IS FULL --COMPLETE INFORMATION IN BUFFER      * 70120021
*        CONTROL RECORD AND BUFFER CONTROL BLOCK                      * 70200021
*                                                                     * 70280021
MVRLD170 L     WORK2,12(OUTRLDCB)                                       70360021
MVRLD180 ST    RLDSETAD,RESUMEAD        SAVE ADDR.OF WHERE TO RESUME    70440021
         NI    12(WORK2),CONTOFF        SET CONT. OFF IN PREV FA FIELD  70520021
         OI    NEWSW2,RPSAVED           SET R+P SAVED INDICATOR         70600021
         NI    NEWSW2,NOTINBFR         TURN OFF R-P IN BFR.             70680021
         L     WORK2,8(OUTRLDCB)        BUFFER BEGINNING                70760021
         L     WORK3,4(OUTRLDCB)        1ST FREE ADDR                   70840021
         OI    0(WORK2),RLD             SET RLDS PRESENT INDIC          70920021
         SR    WORK3,WORK2                                              71000021
         ST    WORK3,4(WORK2)           STORE RLD BYTE COUNT IN BUFFER  71080021
         B     MVRLD00                  GO TO FIND FREE OUTPUT BUFFER   71160021
*                                                                     * 71240021
*      ALL RLD OUTPUT BUFFERS ARE FULL- FREE ONE FOR USE              * 71320021
*                                                                     * 71400021
MVRLD210 TM    1(CURTXTCB),PREV         CHECK IF ONE CONTAINS THE       71480021
         BC    7,MVRLD230                    1D-LENGTH LIST             71560021
         TM    1(CURTXTCB),XDAP         HAS DUMMY WRITE BEEN WRITTEN    71640021
         BO    MVRLD220                 YES                             71720021
         TM    NEWSW2,MORERLDS          ARE THE MORE RLDS TO PROCESS    71800021
         BZ    MVRLD260                 NO                              71880021
         OI    1(CURTXTCB),DUMMY        SET DUMMY WRITE INDICATOR       71960021
         L     BRANCHX,ADWRTTXT                                         72040021
         BALR  RETURN,BRANCHX           BRANCH TO WRITE DUMMY TXT       72120021
         OI    1(CURTXTCB),XDAP         SET XDAP INDICATOR              72200021
MVRLD220 LA    WORK1,OTRLDCB1          WRITE RLD RECORD 1               72280021
         L     WORK4,SAVE+16           RESTORE NEXT TXTCB ADDR FOR      72360021
*                                            WRTCRRLD CHECK             72440021
         L     BRANCHX,ADWRTCR                                          72520021
         BALR  RETURN,BRANCHX           BRANCH TO WRITE RLD RECORD      72600021
         NC    1(1,CURTXTCB),1(WORK1)    TAKE CR REC OFF TXTCB          72680021
         B     MVRLD00                  RETURN TO CONTINUE MOVES        72760021
*                                                                       72840021
MVRLD230 L     WORK1,SAVE+32           ADDR OF PREV. CONTROL RECORD CB  72920021
         OI    0(CURTXTCB),LASTXT       SET LAST TEXT IN GROUP          73000021
         L     WORK2,SAVE+16            NEXT TEXT CONTROL BLOCK         73080021
         TM    0(WORK2),INUSE           HAS SOME TEXT BEEN READ AHEAD   73160021
         BO    MVRLD250                 YES                             73240021
         XC    GROUPLNG(2),GROUPLNG    CLEAR GROUP LENGTH               73320021
MVRLD240 L     BRANCHX,ADWRTCR                                          73400021
         L     WORK4,SAVE+16           RESTORE NEXT TXTCB ADDR FOR      73480021
*                                            WRTCRRLD CHECK             73560021
         BALR  RETURN,BRANCHX           BRANCH TO WRITE PREV CTRL. REC. 73640021
         NC    1(1,CURTXTCB),1(WORK1)    TAKE CR REC OFF TXTCB          73720021
         B     MVRLD00                  RETURN TO CONTINUE MOVES        73800021
MVRLD250 TM    0(WORK2),BEINGWT         IS IT BEING WRITTEN             73880021
         BO    MVRLD240                 YES                             73960021
         OI    0(WORK2),FIRSTXT         SET 1ST TEXT IN GROUP INDIC.    74040021
         MVC   26(2,WORK2),24(WORK2)   CORRECT GROUP LENGTH             74120021
         L     WORK0,8(WORK2)                                           74200021
         SH    WORK0,24(WORK2)                                          74280021
         ST    WORK0,4(WORK2)          UPDATE BEG OF TEXT               74360021
         ST    WORK0,PREVBEG           UPDATE BEG. ADDR OF TEXT GROUP   74440021
         MVC   29(3,WORK2),CCWDISP+1   UPDATE CCW DISP                  74520021
         MVC   GROUPLNG(2),24(WORK2)   UPDATE LNG FOR GROUPING          74600021
         B     MVRLD240                                                 74680021
MVRLD260 TM    0(CURTXTCB),TESTWRT      HAS TEXT BEEN WRITTEN YET       74760021
         BC    11,MVRLD220              YES, GO TO WRITE RLD RECORD     74840021
         L     BRANCHX,ADWRTTXT                                         74920021
         BALR  RETURN,BRANCHX           BRANCH TO WRITE TEXT            75000021
         B     MVRLD220                                                 75080021
*                                                                     * 75160021
*                        ERROR  ROUTINES                              * 75240021
*                                                                     * 75320021
ERROR01  OI    BITMAP+7,HEX1      SET INVALID TWO BYTE ADCON            75400021
         B     RELOC120                 RETURN TO PROCESS NEXT ADCON    75480021
ERROR02A OI    VCONSW,LEN3        TURN ON 3-BYTE VCON SWITCH     A48242 75530000
         B     RETRN              AND CONTINUE PROCESSING        A48242 75532000
ERROR02B NI    VCONSW,LN3OFF      TURN OFF 3-BYTE VCON SWITCH    A48242 75540000
ERROR02  OI    BITMAP+7,HEX2      SET INVALID VCON IN OVERLAY           75560021
         B     RELOC120                 RETURN TO PROCESS NEXT ADCON    75640021
ERROR    L     BRANCH,ERDIG                                             75720021
         LR    WORK0,RETURN             ERROR CODE                      75800021
         BR    BRANCH                   GO TO ERROR DIAGNOSTICS ROUTINE 75880021
***    *     *     *    *    *    *    *    *    *    *    *    *   *** 75960021
*                                                                     * 76040021
*              ENTAB AND ENTAB/RLD CREATION ROUTINE                   * 76120021
*                                                                     * 76200021
***    *     *     *    *    *    *    *    *    *    *    *    *   *** 76280021
SCDENTAB EQU   *                                                        76360021
         ST    RETURN,SAVERET                                           76440021
         L     WORK2,CURENTAB           HESD ADDR.OF CURRENT ENTAB      76520021
         LR    WORK3,WORK2                                              76600021
         S     WORK2,HESD                                               76680021
         SRL   WORK2,3                                                  76760021
         STH   WORK2,CURID              CALC. ENTAB ID                  76840021
*                                                                     * 76920021
*   MAKE ID-LENGTH LIST ENTRY FOR ENTAB, THEN WRITE THE CONTROL       * 77000021
*   RECORD.  THERE IS ALWAYS ROOM FOR THE ENTAB ID-LENGTH, BECAUSE    * 77080021
*           4 BYTES ARE LEFT IN EVERY RLD RECORD                      * 77160021
*                                                                     * 77240021
         TM    0(PREVCREC),INUSE       DOES PREV CR CONTAIN RLDS        77320021
         BO    SCDENT10                YES                              77400021
         MVC   4(4,PREVCREC),8(PREVCREC) INIT 1ST FREE ADDR             77480021
         OI    0(PREVCREC),INUSE                                        77560021
         L     WORK2,8(PREVCREC)       BEG. OF BUFFER                   77640021
         XC    0(16,WORK2),0(WORK2)    CLEAR THE CONTROL INFOR          77720021
SCDENT10 L     WORK2,4(PREVCREC)        1ST FREE ADDR IN PREV. CR       77800021
         MVC   16(2,WORK2),CURID        MAKE ID-LENGTH LIST ENTRY IN    77880021
         MVC   18(2,WORK2),6(WORK3)          PREV. CR.                  77960021
         MVI   3(PREVCREC),X'04'        ID-LENGTH =4                    78040021
         L     WORK2,8(PREVCREC)                                        78120021
         OI    0(WORK2),TXT             SET TEXT FOLLOWS IN CR          78200021
         MVC   26(2,CURTXTCB),6(WORK3)  LENGTH OF ENTAB TO CB           78280021
         MVC   9(3,WORK2),1(WORK3)      MOVE LKA TO CR                  78360021
         MVC   LKAENTAB+1(3),1(WORK3)  GET LKA ADDR                     78440021
         OI    8(WORK2),X'06'                                           78520021
         MVC   14(2,WORK2),6(WORK3)     ENTAB LENGTH TO CR              78600021
         OI    12(WORK2),X'40'                                          78680021
         LR    WORK1,PREVCREC                                           78760021
         L     BRANCHX,ADWRTCR                                          78840021
         BALR  RETURN,BRANCHX           GO TO WRITE PREV CTRL REC       78920021
         NC    1(1,CURTXTCB),1(PREVCREC) TAKE CR REC OFF TXTCB          79000021
*                                                                     * 79080021
*         CREATE ENTAB AND WRITE IT                                   * 79160021
*                                                                     * 79240021
         L     WORK1,TXTBFBEG           BEGINNING OF TEXT BUFFER        79320021
         ST    WORK1,4(CURTXTCB)        BEG.OF TEXT IN CB               79400021
         LH    WORK0,26(CURTXTCB)       LENGTH OF ENTAB                 79480021
         SH    WORK0,TWELVE             INIT.  DISP.                    79560021
         L     WORK3,SELST              START OF ENTRY LIST             79640021
SCDENT15 MVC   0(2,WORK1),BRINST        SET IN 1ST 2 BYTES OF ENTAB     79720021
         STH   WORK0,2(WORK1)           SET IN DISP.                    79800021
SCDENT20 CLC   CURSEG+1(1),2(WORK3)     SEARCH ENTRY LIST FOR CUR.SEG.  79880021
         BNE   SCDNT25A                NOT FOUND                        79960021
SCDENT25 LH    WORK2,0(WORK3)                                           80040021
         SLL   WORK2,3                                                  80120021
         A     WORK2,HESD                                               80200021
         XC    4(8,WORK1),4(WORK1)                                      80280021
         MVC   5(4,WORK1),1(WORK2)      MOVE ADDR. AND SEG.NO.TO ENTAB  80360021
         LA    WORK1,12(WORK1)          INCR.TO NEXT LINE IN ENTAB      80440021
         SH    WORK0,TWELVE             DECR. DISP                      80520021
         BZ    SCDENT30                 BRANCH WHEN OFFSET =0           80600021
SCDNT25A LH    WORK2,ENELTC            NO. ENTS IN ENTRY LIST           80680021
         MH    WORK2,SIX               MULTIPLY BY 6                    80760021
         A     WORK2,SELST             ADD TO LIST BEG ADDR             80840021
         LA    WORK3,6(WORK3)          INCR TO NEXT LIST ENTRY          80920021
         CR    WORK3,WORK2             SEARCHED THRU WHOLE LIST?        81000021
         BNL   SCDENT31                YES                              81080021
         B     SCDENT15                                                 81160021
SCDENT31 LA    WORK1,12(WORK1)         UPDATE ENTAB ENTRY ADDR          81240021
         SH    WORK0,TWELVE            END OF ENTAB?                    81320021
         BZ    SCDENT30                YES-GO TO CREATE LST LINE        81400021
         B     SCDENT31                NO-BRANCH BACK                   81480021
SCDENT30 ST    WORK1,8(CURTXTCB)        LAST ENTRY ADDR.                81560021
         MVC   0(8,WORK1),SVCLINE       SET UP LAST LINE OF ENTAB       81640021
         LH    WORK3,ENSPX              GET SEGTAB ID                   81720021
         SLL   WORK3,3                                                  81800021
         A     WORK3,HESD                                               81880021
         MVC   9(3,WORK1),1(WORK3)      MOVE SEGTAB ADDR TO ENTAB       81960021
         MVC   8(1,WORK1),CURSEG+1      CURRENT SEG.NO. TO ENTAB        82040021
         NI    1(CURTXTCB),X'00'        CLEAR FLAG BITS OF TXTCB        82120021
         L     BRANCHX,ADWRTTXT                                         82200021
         BALR  RETURN,BRANCHX           BRANCH TO WRITE ENTAB           82280021
*                                                                     * 82360021
*    CREATE ENTAB RLDS IN OUTPUT BUFFER AND WRITE THEM OUT            * 82440021
*                                                                     * 82520021
         LA    PREVCREC,OTRLDCB1        USE BFR1 AND BFR2               82600021
         LA    WORK3,OTRLDCB2                                           82680021
         L     WORK1,LKAENTAB           ADDR. OF BEG.OF ENTAB           82760021
         LA    WORK1,4(WORK1)           INCR. TO FIRST LKA              82840021
         LH    WORK0,26(CURTXTCB)                                       82920021
         A     WORK0,LKAENTAB                                           83000021
         SH    WORK0,TWELVE             ADDR.OF LAST ENTRY IN ENTAB     83080021
SCDENT50 L     WORK2,8(PREVCREC)        ADDR. OF RLD BFR.BEG.           83160021
         OI    0(PREVCREC),INUSE       MARK RLD CTRL BLK IN USE         83240021
         XC    0(16,WORK2),0(WORK2)     CLEAR CTRL.REC.                 83320021
         MVC   4(4,PREVCREC),8(PREVCREC)                                83400021
         OI    0(WORK2),RLD             SET RLDS PRESENT INDIC.         83480021
         XC    16(2,WORK2),16(WORK2)    SET R PTR.TO ZERO               83560021
         MVC   18(2,WORK2),CURID        SET P PTR = ENTAB ID            83640021
SCDENT60 LA    WORK2,4(WORK2)           UPDATE 1ST FREE ADDR.           83720021
         CL    WORK2,12(PREVCREC)       ROOM FOR 4 BYTES IN BUFFER      83800021
         BNL   SCDENT80                 NO                              83880021
         ST    WORK1,16(WORK2)          MAKE RLD FA FIELD FOR ENTAB     83960021
         MVI   16(WORK2),X'1D'               ENTRY                      84040021
         LA    WORK1,12(WORK1)          UPDATE TO NEXT LKA FIELD        84120021
         CR    WORK1,WORK0              RLD FOR EACH 12 BYTES OF ENTAB  84200021
         BL    SCDENT60                 NO                              84280021
         AH    WORK1,FIVE               INCR. TO SEGTAB ADDR.           84360021
         ST    WORK1,20(WORK2)          UPDATE LAST RLD ITEM TO POINT   84440021
         MVI   20(WORK2),X'18'               TO SEGTAB ADDR.            84520021
         L     WORK1,8(PREVCREC)        BEG.OF BFR.                     84600021
         LA    WORK2,8(WORK2)          UPDATE FOR LAST 2 RLD ENTRIES    84680021
         S     WORK2,8(PREVCREC)        RLD BYTES                       84760021
         STH   WORK2,6(WORK1)           SET RLD BYTES IN CR.            84840021
         OI    0(WORK1),SEGEND          SET END OF SEG.INDIC.IN CR      84920021
         CLC   CURSEG(2),ENSPC          IS THIS LAST SEGMENT            85000021
         BNE   SCDENT70                 NO                              85080021
         OI    0(WORK1),MODEND          YES,SET END OF MOD. INDIC.IN CR 85160021
SCDENT70 LR    WORK1,PREVCREC                                           85240021
         L     BRANCHX,ADWRTCR                                          85320021
         BALR  RETURN,BRANCHX           BRANCH TO WRITE RLD RECORD      85400021
         NC    1(1,CURTXTCB),1(PREVCREC) TAKE CR REC OFF TXTCB          85480021
         L     WORK1,CURENTAB                                           85560021
         LA    WORK1,8(WORK1)           UPDATE TO NEXT ENTAB ENTRY      85640021
         ST    WORK1,CURENTAB                                           85720021
         MVC   LKAENTAB+1(4),1(WORK1)  GET LKA AND SEG NO OF NEXT ENTAB 85800021
         OI    APT3,SEGSTART           SET 1ST TEXT OF SEG INDIC        85880021
         XC    0(3,CURTXTCB),0(CURTXTCB)  CLEAR INDIC IN CURR. TXT CB   85960021
         XC    GROUPLNG(2),GROUPLNG    INIT GROUP CT. FOR NEXT SEG.     86040021
         L     RETURN,SAVERET                                           86120021
         BR    RETURN                   RETURN TO PROCESS NEXT SEGMENT  86200021
SCDENT80 S     WORK2,8(PREVCREC)        BYTES OF RLD                    86280021
         ST    WORK1,TEMPAREA          SAVE ADDR OF ADCON               86360021
         L     WORK1,8(PREVCREC)                                        86440021
         STH   WORK2,6(WORK1)           BYTES OF RLD INFO IN CR         86520021
         LR    WORK1,PREVCREC                                           86600021
         L     BRANCHX,ADWRTCR                                          86680021
         BALR  RETURN,BRANCHX           BRANCH TO WRITE AN RLD RECORD   86760021
         NC    1(1,CURTXTCB),1(PREVCREC) TAKE CR REC OFF TXTCB          86840021
         XR    PREVCREC,WORK3           SWITCH BUFFERS                  86920021
         XR    WORK3,PREVCREC                                           87000021
         XR    PREVCREC,WORK3                                           87080021
         L     WORK1,TEMPAREA          RESTORE ADDRESS OF ADCON         87160021
         B     SCDENT50                                                 87240021
MOVE     MVC   0(1,WORK1),0(WORK3)                                      87320021
*                     ******************                                87400021
         DS    0F                                                       87480021
TXTCB1   EQU   *                   TEXT CONTROL BLOCK                   87560021
         DC    F'0'                FLAGS                                87640021
         DC    F'0'                BEGINNING ADDRESS OF TEXT IN BUFFER  87720021
         DC    F'0'                END ADDRESS OF TEXT IN BUFFER        87800021
         DC    F'0'                ADDRESS OF TXTIOT ENTRY MARKING THE  87880021
*                                       BEGINNING OF THE TEXT GROUPING  87960021
         DC    F'0'                ADDRESS OF TXTIOT ENTRY FOR TEXT     88040021
*                                       BEING PROCESSED                 88120021
         DC    F'0'                ADDRESS OF TXTIOT ENTRY MARKING THE  88200021
*                                       END OF THE TEXT GROUPING        88280021
         DC    H'0'                LENGTH OF CURRENT TEXT               88360021
           DC    H'0'                ACCUMULATED TEXT LENGTH            88440021
         DC    F'0'                    CCW DISPLACEMENT                 88520021
TXTCB2   EQU   *                   TEXT CONTROL BLOCK                   88600021
         DC    F'0'                FLAGS                                88680021
         DC    F'0'                BEGINNING ADDRESS OF TEXT IN BUFFER  88760021
         DC    F'0'                END ADDRESS OF TEXT IN BUFFER        88840021
         DC    F'0'                ADDRESS OF TXTIOT ENTRY MARKING THE  88920021
*                                       BEGINNING OF THE TEXT GROUPING  89000021
         DC    F'0'                ADDRESS OF TXTIOT ENTRY FOR TEXT     89080021
*                                       BEING PROCESSED                 89160021
         DC    F'0'                ADDRESS OF TXTIOT ENTRY MARKING THE  89240021
*                                       END OF THE TEXT GROUPING        89320021
         DC    H'0'                LENGTH OF CURRENT TEXT               89400021
         DC    H'0'                ACCUMULATED TEXT LENGTH              89480021
         DC    F'0'                    CCW DISPLACEMENT                 89560021
OTRLDCB1 EQU   *                   RLD OUTPUT CONTROL BLOCK             89640021
         DC    X'00DB'                                                  89720021
         DC    H'0'                BYTES OF ID-LENGTH LIST              89800021
         DC    F'0'                ADDRESS OF 1ST FREE ADDR. IN BUFFER  89880021
         DC    F'0'                ADDRESS OF BEGINNING OF BUFFER       89960021
         DC    F'0'                ADDRESS OF END OF BUFFER             90040021
OTRLDCB2 EQU   *                   RLD OUTPUT CONTROL BLOCK             90120021
         DC    X'00ED'                                                  90200021
         DC    H'0'                                                     90280021
         DC    F'0'                                                     90360021
         DC    F'0'                                                     90440021
         DC    F'0'                                                     90520021
OTRLDCB3 EQU   *                   RLD  OUTPUT CONTROL BLOCK            90600021
         DC    X'00F6'                                                  90680021
         DC    H'0'                                                     90760021
         DC    F'0'                                                     90840021
         DC    F'0'                                                     90920021
         DC    F'0'                                                     91000021
INRLDCB1 EQU   *                   RLD INPUT CONTROL BLOCK              91080021
         DS    1X                  FLAGS                                91160021
         DS    3X                  LOWEST RLD ADDRESS OF UNPROCESSED    91240021
*                                       RLD'S IN RLD SET                91320021
         DC    F'0'                ADDRESS OF BEGINNING OF BUFFER       91400021
         DC    F'0'                ADDRESS OF RLDION ENTRY MARKING THE  91480021
*                                       BEGINNING OF RLD GROUPING       91560021
         DC    F'0'                ADDRESS OF CURRENT RLDION ENTRY      91640021
*                                       BEING PROCESSED                 91720021
         DC    F'0'                ADDRESS OF RLDION ENTRY MARKING THE  91800021
*                                       END OF THE RLD GROUPING         91880021
INRLDCB2 EQU   *                   RLD INPUT CONTROL BLOCK              91960021
         DS    1X                                                       92040021
         DS    3X                                                       92120021
         DC    F'0'                                                     92200021
         DC    F'0'                                                     92280021
         DC    F'0'                                                     92360021
         DC    F'0'                                                     92440021
*                   SAVE AREAS                                          92520021
LENGTH   DS    1H                       LENGTH OF ADCON-1               92600021
DLNKR    DS    1H                       DELINK R SAVED                  92680021
RSAVE    DS    1H                       SAVE AREA FOR R PTR             92760021
RLDBYTES DS    1H                       BYTES OF RLD INFO IN RLD SET    92840021
SAVERET  DS    16F                      SAVE AREA FOR RETURN REG        92920021
MULTBEG  DS    1F                      BEG BUFFER ADDR OF MULT          93000021
MULTEND  DS    1F                      END BUFFER ADDR OF MULT          93080021
RESUMEAD DS    1F                       ADDR OF REMAINING FA'S IN CHAIN 93160021
RLDSTEND DS    1F                       RLD SET END ADDR.               93240021
BFREL    DS    1F                       BUFFER RELOCAND                 93320021
ADCON    DS    1F                       ADCON MOVED HERE FOR ALIGNMENT  93400021
TXTBEG   DS    1F                      BEGINNING OF TXT FOR CURR ID     93480021
PREVRPAD DS    1F                      ADDR  OF LAST R + P PTR.         93560021
SAVE13   DS    1F                      TEMPORARY SAVE AREA FOR REG. 13  93640021
TEMPAREA DS    1F                       TEMP SAVE AREA                  93720021
ADCONADR DS    1F                      TEXT BUFFER ADDR OF ADCON        93800021
RELADCON DS    1F                       BEGIN ADDR OF RELOCATE ADCON    93880021
SAVEBFCB DS    1F                      PREV RLD BUFFER CB SAVE AREA     93960021
DLNKSAVE DC    F'0'                    SAVE DELINK VALUE                94040021
INPUTADR DS    1F                      ADDR OF CSECT ON INPUT           94120021
TEMP     DS    1H                      TEMPORARY SAVE AREA              94200021
*                                         IN WORK AREA                  94280021
SAVE     DS    18F                      SAVE AREA FOR HEWLFREL          94360021
*                   CONSTANT AREAS                                      94440021
SIXFULL  DC    F'6'                                                     94520021
OF       DC    X'00FFFFFF'             SET FLAGS & RLD ADDR IN RLD CB   94600021
FF       DC    X'FFFFFF'                COMPARE FOR UPDATE MULTIPLICITY 94680021
VCONSW   DC    X'00'                   VCON LENGTH SWITCH        A48242 94730000
LEN3     EQU   X'80'                   VCON LENGTH = 3 BYTES     A48242 94740000
LN3OFF   EQU   X'7F'                   TO TURN OF LEN3 BIT       A48242 94750000
THREE    DC    H'3'                                                     94760021
FOUR     DC    H'4'                                                     94840021
FIVE     DC    H'5'                                                     94920021
SIX      DC    H'6'                    DECIMAL 6                        95000021
SEVEN    DC    H'7'                                                     95080021
EIGHT    DC    H'8'                                                     95160021
TWELVE   DC    H'12'                                                    95240021
CON256   DC    H'256'                                                   95320021
BRINST   BC    15,0(15)                                                 95400021
SVCLINE  SVC   45                                                       95480021
         L     15,4(15)                                                 95560021
         BCR   15,15                                                    95640021
ADWRTTXT DC    V(WRTTXT)                WRITE TEXT ROUTINE              95720021
ADWRTCR  DC    V(WRTCRRLD)              WRITE CR/RLD ROUTINE            95800021
ADCHKWRT DC    V(CHECKWRT)              ADDR. OF CHECK ROUTINE(WRITE)   95880021
ADCHKRD  DC    V(CHECKRD)               ADDR. OF CHECK ROUTINE(READ)    95960021
ADGET    DC    V(GETIDMUL)              ADDR OF LOOKAHEAD/READAHEAD     96040021
PATCH    DS    25F     ********PATCH AREA   **************************  96120021
         HEWAPT                                                         96200021
CURENTAB EQU   IOCT                     HESD ADDR.OF NEXT ENTAB ENTRY   96280021
LKAENTAB EQU   IOCT+4                   ENTAB LKA                       96360021
GROUPLNG EQU   IOCT+10                  ACCUMULATED GROUP LENGTH        96440021
CCWDISP  EQU   IOCT+12                 CCW DISP ACEMENT                 96520021
SPLITADR EQU   IOCT+16                  SPLIT RLD ADDR.IN INPUT BUFFER  96600021
CBTOUSE  EQU   IOCT+20                  CTRL.BLK.ADDR.FOR BFR.WITH      96680021
*                                            SPLIT RLD                  96760021
CURSEG   EQU   EPSM                     CURRENT SEGMENT                 96840021
RPPTRS   EQU   EPSM+2                   SAVED R PTR.FOR CHAINING        96920021
CURID    EQU   EPSM+4                   CURREND ID                      97000021
CURMULT  EQU   EPSM+6                   CURRENT MULTIPLICITY            97080021
SRCHBEG  EQU   SPACES+56               WHERE TO RESUME SEARCH OF        97160021
*                                           TXTIOT FOR NEW ID           97240021
CURENTRY EQU   SPACES+60           FIRST FREE ENTRY IN ENTRY LIST       97320021
FREEADDR EQU   SPACES+64               FIRST FREE ADDR IN TEXT BUFFER   97400021
PREVBEG  EQU   SPACES+68               ADDR OF 1ST TEXT OF GROUP        97480021
         END                                                            97560021
./  ADD  SSI=63150689,NAME=HEWLFROU
         TITLE  'HEWLFROU-ENTRY,SYNAD,AND PRINT ROUTINES'               00060021
*  THIS CSECT IS THE ENTRY POINT OF LINKAGE EDITOR F AND CONTAINS AN  * 00100021
* UNCONDITIONAL BRANCH TO HEWLFINT WHERE INTERNAL PROCESSING BEGINS.  * 00150021
*  THE ERROR DIAGNOSTIC AND LOG ROUTINE AND A COMMON PRINT ROUTINE,   * 00200021
* THE  EXIT LIST (APTEXLST,APTXLIST) AND A COMMON SYNAD ROUTINE ARE   * 00250021
* ALSO IN THIS CSECT.                                                 * 00300021
*  DCB MACROS FOR SYSLIN, SYSLMOD, SYSUT1, SYSPRINT, AND SYSLIB,      * 00350021
* ARE PRESENT AND THE CSECT CONTAINS APPROPRIATE VCONS, EXTRNS AND    * 00400021
* ENTRIES SO THAT  CERTAIN EXCLUSIVE CALLS BETWEEN SEGMENTS WILL BE   * 00450021
* ALLOWED                                                             * 00500021
*                                                                     * 00550021
HEWLFROU CSECT                                                          00600021
**********************************************************************  00650021
*385200-391600,430800-436400,446800-447600,453200-464400         S21016 00660021
*503600-964400                                                   S01904 00670021
*020200,140900                                                   A47001 00670400
*C222800                                                        OX01131 00670802
*C851600,C854800                                                 YM5281 00671202
*A717700-717984                                                  XM1692 00671602
*A706500-706700,A944100-944392,C940400                          OX04245 00671702
*I022800,I501200,I964400                                OX04280,OY03413 00671802
*A644400,I644900-645100                                 OX05441,OY05016 00671902
*I053200,I107600,C108400                                        OZ01414 00693937
*C964500                                                       @XA11383 00703937
*C168400                                                       @ZA07606 00706937
*                                                                       00709937
         EJECT                                                          00712937
**********************************************************************  00716037
         ENTRY HEWLCRO1                                                 00738037
         ENTRY HEWLCRO2                                                 00760021
         ENTRY HEWLCRO3                                                 00840021
         ENTRY APTEND                                                   00920021
         ENTRY HEWLCSDB                                                 01000021
         ENTRY HEWLCMDB                                                 01080021
         ENTRY HEWLCPDB                                                 01160021
         ENTRY HEWLCUDB                                                 01240021
         ENTRY HEWLTMDB                                                 01320021
         ENTRY HEWLFLOG                                                 01400021
         ENTRY HEWLFLDB                                                 01480021
         ENTRY APTEXLST                                                 01560021
         ENTRY APTXLIST                                                 01640021
         ENTRY HEWLEPNT                                                 01720021
         ENTRY HEWLCADA                                                 01800021
         ENTRY     ENQNAME                                              01880021
         ENTRY     MINOR                                                01960021
         ENTRY INDDNAME                                          A47001 02010000
         EXTRN HEWLEEON                                                 02040021
         EXTRN HEWLCEOD                                                 02120021
         EXTRN HEWLXIT2                                                 02200021
         EXTRN MSGFOUR                                                  02280021
         ENTRY HEWVLDCK                                 OX04280,OY03413 02330002
*                                                                     * 02360021
*   REGISTERS AND EQUATES                                             * 02440021
*                                                                     * 02520021
R0       EQU   0                                                        02600021
R1       EQU   1                                                        02680021
REG2     EQU   2                                                        02760021
REG3     EQU   3                                                        02840021
REG4     EQU   4                                                        02920021
BUFFADD  EQU   4                                                        03000021
REG5     EQU   5                                                        03080021
PRECL    EQU   8                                                        03160021
R9       EQU   9                                                        03240021
TSO      EQU   X'80'                   TSO SWITCH IN APTSWS             03320021
TERM     EQU   X'02'                   TERM SWITCH IN NEWSW             03400021
TERMCHK  EQU   X'08'                   TERMINAL CHECK SWITCH            03480021
NOCHK    EQU   X'F7'                   NO CHECK NEEDED                  03560021
TERMWRT  EQU   X'04'                   TERMINAL WRITE SWITCH            03640021
NOTRMWRT EQU   X'FB'                   NO WRITE NEEDED                  03720021
FLUSH    EQU   X'02'                   FLUSH REQUESTED                  03800021
R10      EQU   10                                                       03880021
R11      EQU   11                                                       03960021
R12      EQU   12                                                       04040021
R13      EQU   13                                                       04120021
R14      EQU   14                                                       04200021
REG14    EQU   14                                                       04280021
R15      EQU   15                                                       04360021
REG15    EQU   15                                                       04440021
BLKSIZ   EQU   12                                                       04520021
LRECL    EQU   14                                                       04600021
BLKFAC   EQU   16                                                       04680021
RECCNT   EQU   18                                                       04760021
CURBUF   EQU   20                                                       04840021
PRNTSW   EQU   24                                                       04920021
READSW   EQU   24                                                       05000021
NUMBLINS EQU   53                      NUMBER OF LINES PER PAGE         05080021
LETON    EQU   X'10'                                                    05160021
NOEX     EQU   X'FD'                                                    05240021
NOLIN    EQU   55                                                       05320021
TERMON   EQU   X'04'                                            OZ01414 05370037
         USING *,15                                                     05400021
         BC    15,OVERNAME            BRANCH AROUND MODULE IDENT        05480037
         DC    C' 01/26/76 OZ07606'   DATE/APAR NUMBER                  05560037
         DC    C' HEWLFROU ',0H'0'    MOD ID                            05610037
         SPACE 3                                                        05660037
OVERNAME L     15,HEWLCINT                                              05710037
         BR    15                       BRANCH TO INITIALIZATION        05760037
HEWLCINT DC    V(HEWLFINT)                                              05810037
*********************************************************************** 05860037
*        BRANCH TO HEWLFINT                                           * 05910037
*********************************************************************** 05960037
         TITLE 'HEWLFROU'                                               06010037
*********************************************************************** 06060037
* COMMON SYNAD ROUTINE                                                * 06110037
*********************************************************************** 06160037
         USING *,15                                                     06280021
         USING APTDSECT,REG2                                            06360021
         USING IHADCB,1                                                 06440021
HEWLCRO1 LR    REG3,0                  ADDRESS OF DECB                  06520021
         NI    ENTRYSW,X'7F'           INDICATE ENTRY FROM BSAM         06600021
         LA    REG3,0(0,REG3)          DESTRUCT H1 ORDER BYTE           06680021
         LA    REG4,DECBLIN            ADDRESS OF SYSLIN DECB           06760021
         CR    REG3,REG4               IS THIS SYSLIN                   06840021
         BC    8,CKBLKSZ               YES--CHECK FOR SHORT BLOCK       06920021
         LA    REG4,DECBLIB            NO--CHECK IF THIS IS SYSLIB      07000021
         CR    REG3,REG4                                                07080021
         BC    7,CHECKPNT              NO--GO CHECK FOR SYSPRINT        07160021
         TM    HEWLCRBB+24,X'08'       IS IGNORE ERROR BIT ON           07240021
         BCR   1,14                    YES--RETURN                      07320021
CKBLKSZ  L     REG3,16(0,REG3)         ADDRESS OF STATUS INDICATORS     07400021
         CLI   13(REG3),X'40'          IS IT INCORRECT LENGTH           07480021
         BC    7,SYNERR                NO--GO TO ERROR ROUTINE          07560021
         LH    REG4,BLKFAC(0,REG5)     YES--CHECK FOR VALID SHORT BLOCK 07640021
         LH    REG3,14(0,REG3)         RESIDUAL COUNT                   07720021
DECREC   BCTR  REG4,0                  DECREMENT RECORD COUNT           07800021
         SH    REG3,LRECL(0,REG5)      SUBTRACT LOGICAL RECORD LENGTH   07880021
         BP    DECREC                  LOOP UNTIL ZERO OR MINUS         07960021
         BM    SYNERR                  NOT VALID SHORT BLOCK            08040021
         STH   REG4,RECCNT(0,REG5)     SAVE NUMBER OF RECORDS.          08120021
         BR    14                      RETURN TO CONTROL PROGRAM        08200021
SYNERR   TM    ENTRYSW,X'80'           WAS ENTRY FROM BPAM              08280021
         BC    8,BSAMERR               NO                               08360021
         B     BPAMERR                 GO TO BPAM MACRO                 08440021
CHECKPNT LA    REG4,DECBPRNT           CHECK FOR SYSPRINT               08520021
         CR    REG3,REG4                                                08600021
         BC    7,BSAMERR               NO                               08680021
         OI    NEWSW,X'08'             SET IMMEDIATE ABORT BIT          08760021
         B     ABORT                                                    08840021
BSAMERR  ST    REG4,SAVE4              SAVE REGISTER 4                  08920021
         LR    REG4,REG15              SAVE BASE REGISTER               09000021
         SYNADAF ACSMETH=BSAM          BSAM                             09080021
         LR    REG15,REG4              RESTORE BASE REGISTER            09160021
         L     REG4,SAVE4              RESTORE REGISTER 4               09240021
MESGPRNT OI    BITMAP+4,X'10'          INDICATE ERR 294 FOR BIT MAP     09320021
         MVI   HISEV+1,X'04'           MOVE IN SEVERITY 4               09400021
MESGPNTA LH    REG3,LINECNT            CHECK FOR END OF PAGE            09480021
         BCT   REG3,NOPAGE                                              09560021
         LA    REG3,NUMBLINS           INITIALIZE LINE COUNT            09640021
         L     REG4,HEWLCWBB+20        ADDRESS OF PRINT BUFFER          09720021
         MVI   0(REG4),X'8B'           RESTORE CHARACTER                09800021
         LR    REG4,REG15              SAVE BASE REG                    09880021
         L     REG15,PRNTAD            ADDRESS OF PRINT ROUTINE         09960021
         BALR  REG14,REG15                                              10040021
         LR    REG15,REG4              RESTORE BASE REG                 10120021
NOPAGE   STH   REG3,LINECNT            STORE UPDATED LINE COUNT         10200021
         L     REG4,HEWLCWBB+20        ADDRESS OF PRINT BUFFER          10280021
         MVC   26(94,REG4),32(1)       MOVE FORMATTED MESSAGE TO BUFF   10360021
         MVC   0(20,REG4),MESG1        MOVE IN IEW0294                  10440021
         TM    NEWSW,X'10'             WAS ENTRY FROM MAP               10520021
         BC    8,MESGPNTB              NO                               10600021
         MVC   0(8,REG4),MESG3         YES--MOVE IN IEW0630             10680021
MESGPNTB LR    REG4,REG15              SAVE BASE REGISTER               10760021
         TM    NEWSW,TERM              TERM OPTION SPEC?        OZ01414 10810037
         BZ    NOTERM                  NO? BRANCH               OZ01414 10820037
         OI    HEWLCWBB+24,TERMON      SET ON TERM.WRITE SW     OZ01414 10830037
NOTERM   L     REG15,PRNTAD            LOAD ADD OF PRT ROUTINE  OZ01414 10840037
         BALR  REG14,REG15                                              10920021
         LR    REG15,REG4              RESTORE BASE REG                 11000021
         SYNADRLS                                                       11080021
         LR    REG15,REG4    RESTORE BASE VALUE TO R15                  11160021
         TM    NEWSW,X'10'             WAS ENTRY FROM MAP               11240021
         BC    8,ABORT                 NO--ABORT                        11320021
         L     REG15,MAPADD            YES--RETURN TO MAP               11400021
         BR    REG15                                                    11480021
ABORT    L     REG15,SYNADROU          GO TO FINAL                      11560021
         BR    REG15                                                    11640021
         USING *,REG15                                                  11720021
HEWLCRO2 L     REG15,BASEADD           SET UP BASE REG                  11800021
         USING HEWLCRO1,REG15                                           11880021
         OI    ENTRYSW,X'80'           INDICATE BPAM ENTRY              11960021
         TM    HEWLCRBB+24,X'08'       IS IGNORE ERROR BIT ON           12040021
         BCR   1,14                    YES--RETURN                      12120021
         TM    DCBRECFM,X'40'          NO--IS RECFM FIXED               12200021
         LR    REG3,0                  DECB ADDRESS TO REG3             12280021
         BC    8,CKBLKSZ               YES--GO CHECK FOR SHORT BLOCK    12360021
BPAMERR  ST    REG4,SAVE4              SAVE REGISTER 4                  12440021
         LR    REG4,REG15              SAVE BASE REGISTER               12520021
         SYNADAF ACSMETH=BPAM          BPAM                             12600021
         LR    REG15,REG4              RESTORE BASE REGISTER            12680021
         L     REG4,SAVE4              RESTORE REGISTER 4               12760021
         TM    NEWSW,X'10'             WAS ENTRY FROM MAP               12840021
         BC    8,MESGPRNT              NO                               12920021
         OI    BITMAP,X'40'            INCICATE ERR 630 FOR BIT MAP     13000021
         B     MESGPNTA                                                 13080021
         USING *,REG15                                                  13160021
HEWLCRO3 L     REG15,BASEADD           SET UP BASE REG                  13240021
         USING HEWLCRO1,REG15                                           13320021
         ST    REG4,SAVE4              SAVE REGISTER 4                  13400021
         LR    REG4,REG15              SAVE BASE REGISTER               13480021
         SYNADAF   ACSMETH=EXCP                                         13560021
         LR    REG15,REG4              RESTORE BASE REGISTER            13640021
         L     REG4,SAVE4              RESTORE REGISTER 4               13720021
         B     MESGPRNT                GO TO PRINT MESSAGE              13800021
SAVE4    DC    F'0'                    SAVE AREA FOR REGISTER 4         13880021
MAPADD   DC    V(HEWLFAPX)             ADDRESS OF MAP TO CLEAN UP       13960021
BASEADD  DC    A(HEWLCRO1)                                              14040021
INDDNAME DC    C'SYSLIN  '         TO SAVE SYSLIN DDNAME         A47001 14090000
ENTRYSW  DC    X'00'                                                    14120021
*        BIT 0 - 0  ENTRY FROM BSAM                                     14200021
*                1  ENTRY FROM BPAM                                     14280021
MESG1    DC    X'09'                   CONTROL CHARACTER PRINT AND SP   14360021
         DC    C'IEW0294'                                               14440021
         DC    C'  SYNAD EXIT'                                          14520021
MESG3    DC    X'09'                   CONTROL CHARACTER PRINT AND SP   14600021
         DC    C'IEW0630'                                               14680021
SYNADROU DC    V(HEWLCSNX)             ADDRESS TO FINAL PROCESSOR       14760021
         EJECT                                                          14840021
*********************************************************************** 14920021
*                                                                     * 15000021
*  DCB EXIT ROUTINE FOR SYSLIN,SYSLIB, AND SYSPRINT                   * 15080021
*                                                                     * 15160021
*********************************************************************** 15240021
         USING *,15                                                     15320021
         USING IHADCB,1                                                 15400021
HEWLEXIT EQU   *                                                        15480021
         NI    DCBBUFNO,X'00'      ZERO OUT BUFFER NUMBER FIELD         15560021
         TM    DCBRECFM,X'80'      CHECK FOR FORMAT F-BITS 01=10        15640021
         BC    8,EXIT4                 NO--RETURN                       15720021
         TM    DCBRECFM,X'40'                                           15800021
         BC    1,EXIT4                 NO--RETURN                       15880021
         NI    DCBRECFM,X'E7'          TURN OFF B AND S BITS            15960021
         L     REG5,HEWLCLAC           ADDRESS OF CURRENT CONTROL BLOCK 16040021
         LA    REG3,0(0,R1)            ADDRESS OF DCB                   16120021
         L     REG4,HEWLCWBB           ADDRESS OF SYSPRINT DCB          16200021
         LA    REG4,0(0,REG4)          DESTRUCT HI ORDER BYTE           16280021
         CR    REG3,REG4               IS THIS SYSPRINT                 16360021
         BC    7,EXITA                 NO                               16440021
****************************************************************        16520037
*  UNDER TSO, SYSPRINT IS ALWAYS UNBLOCKED; LRECL=BLKSIZE=81.  *        16580037
****************************************************************        16640037
         TM    APTSWS,TSO          IS TSO IN EFFECT?                    16700037
         BC    8,TSO1              NO-BRANCH                            16760037
         CLI   DCBDEVT,X'4F'       IS TERM USED FOR SYSPRINT?  @ZA07606 16840037
         BNE   TSO1                BR IF NOT USED              @ZA07606 16880037
         LA    REG5,81             LOAD LRECL FOR TERMINAL              16920021
         STH   REG5,DCBLRECL       STORE IN DCB                         17000021
         STH   REG5,DCBBLKSI           STORE BLOCKSIZE                  17080021
         STH   REG5,HEWLCWBB+14    STORE IN SYSPRINT CONT. BLOCK        17160021
TSO1     LA    REG5,HEWLCWBB       LOAD CONTROL BLOCK                   17240021
         L     8,TEST                                                   17320021
         CLI   0(8),X'00'                                               17400021
         BE    EXITA                                                    17480021
         LH    REG4,DCBLRECL                                            17560021
         CH    REG4,DCBBLKSI                                            17640021
         BL    EXITB                                                    17720021
         MVI   0(8),X'00'                                               17800021
         B     EXITB                                                    17880021
EXITA    LH    REG4,DCBBLKSI                                            17960021
         LTR   REG4,REG4                                                18040021
         BC    7,EXIT1                 IF BLOCKSIZE NOT 0 BRANCH        18120021
         LH    REG4,DCBLRECL                                            18200021
EXITB    STH   REG4,DCBBLKSI       MAKE BLKSI = LRECL                   18280021
EXIT1    SR    PRECL,PRECL                                              18360021
         LH    REG3,MAXBF              MAXIMUM BLOCKING FACTOR          18440021
EXIT2    LA    PRECL,1(0,PRECL)        DIVIDE BLKSI BY LRECL            18520021
         SH    REG4,DCBLRECL           TO FIND BLOCKING FACTOR          18600021
         BC    8,EXIT3                                                  18680021
         BCT   REG3,EXIT2              FALL THRU IF BLKSIZE TO BIG      18760021
         MVI   BLKFAC+1(REG5),41       INDICATE INVALID BLOCKSIZE       18840021
         OI    READSW(REG5),X'04'      INDICATE INVALID BLOCKSIZE       18920021
         BR    R14                     RETURN                           19000021
EXIT3    STH   PRECL,BLKFAC(0,REG5)    SAVE BLOCKING FACTOR             19080021
         MVI   RECCNT+1(REG5),X'01'    INITIALIZE RECORD COUNT TO ONE   19160021
         MVC   BLKSIZ(2,REG5),DCBBLKSI SAVE BLOCK SIZE IN CONTROL BLOCK 19240021
         OI    READSW(REG5),X'80'      SET SWITCH TO PRIME BUFFER       19320021
         NI    READSW(REG5),X'FB'      TURN OFF INVALID BLOCKSIZE BIT   19400021
         LA    REG3,HEWLCWBB           IS THIS SYSPRINT                 19480021
         CR    REG3,REG5                                                19560021
         BC    7,EXIT4                 NO--RETURN                       19640021
         STH   PRECL,RECCNT(0,REG5)    YES--RESET RECCNT TO BLK FACTOR  19720021
         BCT   PRECL,EXIT5             IS IT BLOCKED                    19800021
         BC    15,EXIT4                NO                               19880021
EXIT5    OI    DCBRECFM,X'10'          YES--TURN ON BLOCK BIT           19960021
EXIT4    BR    R14                     RETURN                           20040021
         DROP  15                                                       20120021
*********************************************************************** 20200021
*                                                                     * 20280021
*        DCB EXIT ROUTINE FOR SYSUT1                                  * 20360021
*                                                                     * 20440021
*********************************************************************** 20520021
         USING *,15                                                     20600021
         USING IHADCB,1                                                 20680021
HEWLXIT1 EQU   *                                                        20760021
         NI    DCBBUFNO,X'00'          ZERO OUT BUFFER NUMBER           20840021
         BR    R14                     RETURN                           20920021
         DROP  15                                                       21000021
*  SYSTERM IS ALWAYS UNBLOCKED. LRECL=81 FOR TSO,121 FOR BCKGRND        21080021
*                                                                       21160021
         USING *,15                                                     21240021
         USING IHADCB,1                                                 21320021
TERMEX   TM    APTSWS,TSO              IN TSO MODE?                     21400021
         BO    EXIT6                   YES - BRANCH                     21480021
         LA    REG5,121                NO--SET BLKSIZE,LRECL=121        21560021
         STH   REG5,DCBLRECL                                            21640021
         STH   REG5,DCBBLKSI                                            21720021
EXIT6    BR    14                      RETURN                           21800021
         DROP  15                                                       21880021
*                                                                     * 21960021
*  DCB MACROS FOR SYSLIN, SYSLMOD, SYSUT1, SYSPRINT, SYSLIB           * 22040021
*                                                                     * 22120021
*         *         *         *         *         *         *         * 22200021
         SPACE 3                                                        22250037
         DC    0F'0'                                                    22260037
         DC    C'SYSLIN '                                               22270037
HEWLCSDB DCB   DSORG=PS,MACRF=(R),DDNAME=SYSLIN,RECFM=FB,LRECL=80,     X22280002
               NCP=1,EODAD=HEWLEEON,SYNAD=HEWLCRO1,EXLST=APTEXLST       22360021
         SPACE 3                                                        22410037
         DC    C'SYSLMOD'                                               22420037
SYSLMOD  DCB   DSORG=PO,MACRF=(R,W),DDNAME=SYSLMOD,RECFM=U,            X22440021
               NCP=1,EODAD=HEWLCRO2,SYNAD=HEWLCRO2,EXLST=APTXLIST       22520021
HEWLCMDB EQU   SYSLMOD                                                  22600021
         SPACE 3                                                        22650037
         DC    C'SYSUT1'                                                22660037
SYSUT1   DCB   DSORG=PS,MACRF=(WP,RP),DDNAME=SYSUT1,DEVD=DA,RECFM=U,   X22680021
               BLKSIZE=3072,NCP=1,EODAD=HEWLCRO1,SYNAD=HEWLCRO1,       X22760021
               EXLST=APTELIST                                           22840021
HEWLCUDB EQU   SYSUT1                                                   22920021
         SPACE 3                                                        22970037
         DC    C'SYSPRINT'                                              22980037
SYSPRINT DCB   DSORG=PS,MACRF=(W),DDNAME=SYSPRINT,DEVD=DA,             X23000021
               NCP=1,RECFM=FA,LRECL=121,SYNAD=HEWLCRO1,EXLST=APTEXLST   23080021
HEWLCPDB EQU   SYSPRINT                                                 23160021
         SPACE 3                                                        23210037
         DC    C'SYSTERM'                                               23220037
SYSTERM  DCB   DSORG=PS,MACRF=(W),DDNAME=SYSTERM,NCP=1,DEVD=DA,        X23240021
               RECFM=FA,LRECL=81,BLKSIZE=81,BUFNO=0,                   X23320021
               EXLST=TERMEXIT                                           23400021
HEWLTMDB EQU   SYSTERM                                                  23480021
         SPACE 3                                                        23530037
         DC    C'SYSLIB'                                                23540037
HEWLFLDB DCB   DSORG=PO,MACRF=(R),DDNAME=SYSLIB,NCP=1,EODAD=HEWLCEOD,  C23560021
               SYNAD=HEWLCRO2,EXLST=APTEXLST,LRECL=80                   23640021
         TITLE 'HEWLFROU COMMON PRINT ROUTINE'                          23690037
*         *         *         *         *         *         *         * 23720021
*                                                                     * 23800021
*   COMMON PRINT ROUTINE                                              * 23880021
*                                                                     * 23960021
*         *         *         *         *         *         *         * 24040021
APTEND   EQU   *                                                        24120021
         USING *,R15                                                    24200021
HEWLEPNT STM   R9,R1,SAVREGS       SAVE REGISTERS                       24280021
         LR    R12,R15                 R12 IS BASE REG                  24360021
         USING HEWLEPNT,R12                                             24440021
         DROP  R15                                                      24520021
         LA    R13,REGSA           ADDRESS OF SAVE AREA                 24600021
         LA    R11,HEWLCWBB        ADDRESS OF PRINT CONTROL BLOCK       24680021
         L     R10,CURBUF(0,R11)        PICK UP BUF ADDR                24760021
         TM    0(R10),X'02'             SKIP LINES ONLY                 24840021
         BNO   TRANCHAR                 NO, PRINT LINE                  24920021
         NI    0(R10),X'FD'             TURN OFF BIT                    25000021
TRANCHAR EQU   *                                                        25080021
         LA    R0,CVTABEND              PICK UP TABLE END ADDR          25160021
         LA    R15,CONVERTB             PICK UP TABLE BEGINADDR         25240021
TRANLOOP EQU   *                                                        25320021
         CLC   0(1,R10),0(R15)          COMPARE CHAR WITH TABLE         25400021
         BE    OUTLPTR                  MATCH FOUND                     25480021
         LA    R15,2(R15)               UPDATE TABLE PTR                25560021
         CR    R15,R0                   END OF TABLE REACHED            25640021
         BNH   TRANLOOP                 NO, CONTINUE SEARCH             25720021
         B     PRINTK                   ASSUMED ALREADY ASA CHAR        25800021
OUTLPTR  EQU   *                                                        25880021
         MVC   0(1,R10),1(R15)          MATCH FOUND, PICK UP ASA CHAR   25960021
PRINTK   EQU   *                                                        26040021
* ****************************************************************** *  26120021
*                                                                       26200021
*        THIS SECTION OF CODE DOES WRITES TO THE SYSTERM DATASET.       26280021
*        THE SYSTERM DATA SET MAY RESIDE ON ANY DEVICE, BUT ITS         26360021
*        PRIMARY PURPOSE IS TO ISSUE ERROR MESSAGES TO THE TSO          26440021
*        USER'S TERMINAL.  THEREFORE, SYSTERM IS ALWAYS UNBLCKD,        26520021
*        LRECL=81, BLKSIZE=81.  SINCE THE ERROR MESSAGES ARE            26600021
*        ALSO WRITTEN ON THE SYSPRINT DATA SET, THE SAME BUFFERS        26680021
*        ARE USED.                                                      26760021
*                                                                       26840021
* ****************************************************************** *  26920021
         TM    PRNTSW(R11),TERMCHK     NEED TERMINAL CHECK?             27000021
         BC    8,TSO2                  NO - BRANCH AROUND               27080021
         CHECK DECBPRN2                CHECK LAST TERMINAL WRITE        27160021
         NI    PRNTSW(R11),NOCHK       TURN OFF CHECK SWITCH            27240021
TSO2     TM    PRNTSW(R11),TERMWRT     WRITE TO TERM. NEEDED?           27320021
         BC    8,TSO3                  NO - GO DO SYSPRINT              27400021
         L     R9,TERMDCB              LOAD  TERMINAL DCB               27480021
         L     R10,CURBUF(R11)         LOAD CURRENT RECORD ADD.         27560021
         WRITE DECBPRN2,SF,(R9),(R10)  WRITE RECORD                     27640021
         OI    PRNTSW(R11),TERMCHK     TURN ON TERM CHECK SWITCH        27720021
         NI    PRNTSW(R11),NOTRMWRT  TURN OFF TERM. WRITE SWITCH        27800021
TSO3     TM    PRNTSW(R11),FLUSH       IS THIS A FLUSH?                 27880021
         BC    8,PRINTD                NO                               27960021
         CLC   RECCNT(2,R11),BLKFAC(R11) YES--IS ANYTHING IN BUFFER     28040021
         BNE   PRINTG                  NO--GO CHECK LAST PRINT          28120021
         TM    PRNTSW(R11),X'80'       WAS THERE ANY WRITE              28200021
         BC    1,PRINTE                NO--GO RETURN                    28280021
PRINTI   OI    PRNTSW(R11),X'01'       YES--SET CHECK ONLY BIT          28360021
         BC    15,PRINTF               AND GO CHECK                     28440021
PRINTG   LH    R10,BLKFAC(0,R11)                                        28520021
         SH    R10,RECCNT(0,R11)       NUMBER OF RECORDS TO WRITE       28600021
         MH    R10,LRECL(0,R11)        SIZE OF BLOCK                    28680021
         L     R14,HEWLCWBB                                             28760021
         USING IHADCB,R14                                               28840021
         STH   R10,DCBBLKSI                                             28920021
         DROP  R14                                                      29000021
         BC    15,PRINTH               GO TO PRINT                      29080021
PRINTD   LH    R10,RECCNT(0,R11)       CHECK IF BUFFER FULL             29160021
         BCT   R10,PRINTB              BRANCH IF NOT FULL               29240021
PRINTH   L     R10,BUFFADD(0,R11)      SWITCH BUFFERS                   29320021
         MVC   BUFFADD(4,R11),BUFFADD+4(R11)                            29400021
         ST    R10,BUFFADD+4(0,R11)                                     29480021
         MVC   RECCNT(2,R11),BLKFAC(R11) RESTORE RECORD COUNT           29560021
         TM    PRNTSW(R11),X'80'       IS THIS FIRST WRITE              29640021
         BC    1,PRINTA                YES--DON'T CHECK                 29720021
PRINTF   CHECK DECBPRNT                                                 29800021
         TM    PRNTSW(R11),X'01'       IS CHECK ONLY SW ON              29880021
         BC    1,PRINTE                YES--GO RETURN                   29960021
PRINTA   WRITE DECBPRNT,SF,HEWLCPDB,(R10)                               30040021
         TM    PRNTSW(R11),X'02'       WAS THIS A FLUSH                 30120021
         BC    1,PRINTI                YES--GO CHECK                    30200021
         NI    PRNTSW(R11),X'7F'       TURN OFF FIRST WRITE SW          30280021
         L     R10,BUFFADD(0,R11)      GET NEW BUFFER                   30360021
         BC    15,PRINTC                                                30440021
PRINTB   STH   R10,RECCNT(0,R11)                                        30520021
         L     R10,CURBUF(0,R11)       UPDATE CURRENT BUFFER ADDRESS    30600021
         AH    R10,LRECL(0,R11)                                         30680021
PRINTC   ST    R10,CURBUF(0,R11)                                        30760021
         MVI   0(R10),C' '             CLEAN OUT NEW BUFFER             30840021
         MVC   1(120,R10),0(R10)                                        30920021
PRINTE   LM    R9,R1,SAVREGS       RESTORE REGISTERS                    31000021
         BR    R14                     AND RETURN                       31080021
SAVREGS  DS    9F                  SAVE AREA                            31160021
TERMDCB  DC    A(HEWLTMDB)         ADDRESS OF TERMINAL DCB              31240021
CONVERTB EQU   *                                                        31320021
         DC    X'09'                    MACH CHAR--PRINT ON NEXT LINE   31400021
         DC    C' '                     ASA CHAR--PRT ON NEXT LINE      31480021
         DC    X'11'                    MACH CHAR--SKIP LINE THEN PRT   31560021
         DC    C'0'                     ASA CHAR--SKIP LINE THEN PRT    31640021
         DC    X'19'                    MACH CHAR-SKIP 2 LINES THEN PRT 31720021
         DC    C'-'                     ASA CHAR--SKIP 2 LINES THEN PRT 31800021
         DC    X'89'                    MACH CHAR--TOP OF PAGE THEN PRT 31880021
         DC    C'1'                     ASA CHAR--TOP OF PAGE THEN PRT  31960021
CVTABEND EQU   *                                                        32040021
         TITLE  'HEWLFROU  ERROR DIAGNOSTIC AND LOG ROUTINE'            32120021
*              *                   *              *                   * 32200021
*FUNCTION                                                             * 32280021
*1.THE ERROR DIAGNOSTIC ROUTINE WILL OUTPUT A MESSAGE FOR EACH ERROR  * 32360021
*  CONDITION UNCOVERED DURING LINKAGE EDITING. IT WILL ALSO LOG CON-  * 32440021
*  TROL CARDS, IF THE LIST OPTION HAS BEEN SPECIFIED. IT WILL NOT     * 32520021
*  OUTPUT AN ENGLISH MESSAGE. ALL MESSAGES WILL BE IN THE FORMAT      * 32600021
*  IEWMMMS, WHERE 'MMM' IS THE ERROR MESSAGE NUMBER AND 'S' IS THE    * 32680021
*  SEVERITY. A CARD, SYMBOL, TWO SYMBOLS, OR BLANKS MAY FOLLOW,       * 32760021
*  DEPENDING IF ADDITIONAL INFORMAION IS REQUIRED.                    * 32840021
*2.ALSO INCLUDED IS A NUMBER OF 'V' TYPE ADCONS. THIS IS TO ALLOW     * 32920021
*  CALLS BETWEEN VARIOUS SUBROUTINES IN THE LINKAGE EDITOR OVERLAY    * 33000021
*  TREE.                                                              * 33080021
*                                                                     * 33160021
*ENTRY POINTS                                                         * 33240021
*  HEWLFLOG                                                           * 33320021
*  THE CALLING SEQUENCE IS: GR14=RETURN ADD GR15=ADD OF ERROR ROUTINE * 33400021
*  GR0=ERROR CODE. THE FOLLOWING TWO REGISTERS ARE OPTIONAL:          * 33480021
*  GR1=ADDRESS OF SYMBOL, GR13=ADDRESS OF 2ND SYMBOL.                 * 33560021
*                                                                     * 33640021
*  INPUT - FROM VARIOUS PROCESSORS WITHIN THE LINKAGE EDITOR          * 33720021
*                                                                     * 33800021
*  OUTPUT - ALWAYS TO SYSPRNT                                         * 33880021
*                                                                     * 33960021
*  EXTERNAL ROUTINES - NONE                                           * 34040021
*                                                                     * 34120021
*  EXITS - RETURN ADDRESS SPECIFIED IN REGISTER 14 IS LOADED INTO R15.* 34200021
*          R15 IS USED TO ALLOW CONTROL, WITHIN THE EDITOR, TO PASS TO* 34280021
*          ANOTHER OVERLAY SEGMENT(IF CONTROL IS NOT TO BE RETURNED TO* 34360021
*          THE SENDER).                                               * 34440021
*                                                                     * 34520021
*  WORK AREA - A THIRTY-TWO BYTE BUFFER IS USED FOR THE MESSAGE HEADER* 34600021
*                                                                     * 34680021
*  ATTRIBUTES - REUSABLE                                              * 34760021
*                                                                     * 34840021
*NOTES:                                                               * 34920021
* THE ERROR CODE IN R0 WILL APPEAR AS FOLLOWS:                        * 35000021
*                                                                     * 35080021
*  *     *     *    *    *    *    *    *    *    *                   * 35160021
*  *           *DISPOSITION   *SEVERITY * MESSAGE *                   * 35240021
*  * BITS ZERO *  0 TO 3      * 0 TO 4  *         *                   * 35320021
*  * TO 12 = 0 * (OPTIONAL)   *         * NUMBER  *                   * 35400021
*  *     *     *    *    *    *    *    *    *    *                   * 35480021
*                                                                     * 35560021
*              DISPOSITION     SEVEVERITY  MESSAGE NUMBER             * 35640021
*                =4 BITS          =4 BITS      =8 BITS                * 35720021
*                                                                     * 35800021
*  TO LOG A CARD  R0 IS SET TO ZERO.(DISPOSITION AND SEVERITY = ZERO  * 35880021
*  A DISPOSITION OF 1 = INCLUDE INPUT BUFFER IN MESSAGE(CARD IMAGE)   * 35960021
*  A DISPOSITION OF 2 = INCLUDE SYMBOL(ADDRESS IN R1) IN MESSAGE      * 36040021
*  A DISPOSITION OF 3 = INCLUDE 2 SYMBOLS(ADD IN R1 AND R13/          * 36120021
*                                                                     * 36200021
*  SEVERITY 1 = A CONDITION THAT MAY CAUSE AN ERROR DURING EXECUTION  * 36280021
*  OF THE OUTPUT MODULE. A MODULE MAP OR CROSS REFERENCE TABLE IS PRO-* 36360021
*  DUCED IF SPECIFIED BY THE PROGRAMMER. THE OUTPUT MODULE IS MARKED  * 36440021
*  EXECUTABLE                                                         * 36520021
*                                                                     * 36600021
*  SEVERITY 2 =  AN ERROR THAT COULD MAKE EXECUTION OF THE OUTPUT MOD-* 36680021
*  ULE IMPOSSIBLE. PROCESSING CONTINUES. A MODULE MAP OR CROSS        * 36760021
*  REFERENCE TABLE IS PRODUCED IF SO SPECIFIED BY THE PROGRAMMER. THE * 36840021
*  OUTPUT MODULE IS MARKED NOT EXECUTABLE UNLESS THE 'LET' OPTION HAS * 36920021
*  BEEN SPECIFIED                                                     * 37000021
*                                                                     * 37080021
*  SEVERITY 3 = AN ERROR THAT COULD MAKE EXECUTION OF THE OUTPUT MOD- * 37160021
*  ULE IMPOSSIBLE. LINKAGE EDITOR PROCESSING CONTINUES. A MODULE MAP  * 37240021
*  OR CROSS REFERENCE TABLE IS PRODUCED IF REQUESTED. THE OUTPUT MOD- * 37320021
*  ULE IS MARKED 'NOT EXECUTABLE'.                                    * 37400021
*                                                                     * 37480021
*  SEVERITY 4 = A CONDITION FROM WIHCH NO RECOVERY IS POSSIBE.        * 37560021
*  PROCESSING CONTINUES.                                              * 37640021
*                                                                     * 37720021
*  THE ERROR DIAGNOSTIC ROUTINE WILL SET A BIT IN A BIT-MAP THAT WILL * 37800021
*  BE SCANNED BY THE FINAL PROCESSOR. THE FINAL PROCESSOR WILL OUTPUT * 37880021
*  ONLY THOSE ERROR MESSAGES THAT HAVE BEEN DETECTED WITHIN THE EDITOR* 37960021
*                                                                     * 38040021
*  THE ERROR DIAGNOSTIC ROUTINE WILL UPDATE THE LINE COUNT INDICATOR  * 38120021
*  IN THE ALL PURPOSE TABLE. IT WILL SKIP TO A NEW PAGE WHEN THE LINE * 38200021
*  COUNT EQUALS ZERO(MAXIMUM NUMBER OF LINES = 55)                    * 38280021
*              *                   *              *                   * 38360021
         SPACE 1                                                 S21016 38440021
**************  SYMBOLIC EQUATES FOR IDR SUPPORT  ************** S21016 38520021
POS12    EQU   12                      DISPLACEMENT OF 12 BYTES  S21016 38600021
NODISP   EQU   0                       NULL DISPLACEMENT         S21016 38680021
LEN80    EQU   80                      LENGTH OF A CARD IMAGE    S21016 38760021
MXIII    EQU   63                      SIXTY-THREE               S21016 38840021
LOGIDNT  EQU   X'20'                   SWITCH INDICATING A CARD  S21016 38920021
*                                      IMAGE TO BE LOGGED IS     S21016 39000021
*                                      NOT IN THE INPUT BUFFER   S21016 39080021
*                                      BUT IS POINTED TO BY R1   S21016 39160021
         SPACE 1                                                 S21016 39240021
HEWLFLOG EQU   *                                                        39320021
         USING LOG01,12                                                 39400021
         STM   R11,R1,SPACES+12                                         39480021
         BALR  12,0                                                     39560021
*TEST IF THIS SEVERITY CODE IS HIGHEST RECEIVED                         39640021
LOG01    SRL   R0,12          ISOLATE DISPOSITION                       39720021
         STC   R0,HEWLEDE1        SAVE DISPOSITION                      39800021
         NI    HEWLEDE1+2,X'0F'   ISOLATE SEVERITY                      39880021
         CLC   HEWLEDE1+2(1),HISEV+1 COMPARE IF NEW SEVERITY CODE IS    39960021
*                                       GREATER                         40040021
         BC    4,LOG02                                                  40120021
         MVC   HISEV+1(1),HEWLEDE1+2 RESET SEVERITY CODE TO NEW HIGH    40200021
LOG02    L     R0,HEWLEDE1                                              40280021
         STH   R0,X+8                                                   40360021
         SR    R0,R0                                                    40440021
         IC    R0,X+9  INSERT MESS NO IN R0                             40520021
         CVD   R0,X  CONVERT MESS NO TO DECIMAL                         40600021
         UNPK  X+5(3),X+6(2)  CONVERT MESS NO TO ALPHA-NUM.             40680021
         MVZ   X+7(2),X+5  MOVE ZONE BITS TO LAST BYTE OF MESS NO.+S.C. 40760021
         MVC   X+1(4),DUMH MOVE CONTROL CHAR. AND IDENTIFIER            40840021
*                          HEADER WITH MESS NO. AND S.C. NOW COMPLETE   40920021
*IT MUST NOW BE DETERMINED IF ANY ADDITIONAL ACTION IS REQUIRED. THE    41000021
*DISPOSITION BYTE IS NOW  TESTED. IT HAS BEEN STORED IN SAREAS          41080021
         L     R15,PRNTAD              ADDRESS OF PRINT ROUTINE         41160021
         TM    APTSWS,TSO              TSO IN EFFECT?                   41240021
         BO    TSO4                    YES - NO PAGING                  41320021
         LH    R11,LINECNT             CHECK FOR END OF PAGE            41400021
         BCT   R11,LOG07               BRANCH IF NO                     41480021
         LA    R11,NOLIN               NUMBER OF LINES PER PAGE         41560021
         L     R14,HEWLCWBB+20         ADDRESS OF PRINT BUFFER          41640021
         MVI   0(R14),X'8B'            CONTROL CHARACTER FOR RESTORE    41720021
         BALR  R14,R15                 TO PRINT ROUTINE                 41800021
LOG07    STH   R11,LINECNT             STORE UPDATED LINE COUNT         41880021
TSO4     TM    NEWSW,TERM              TERM OPTION SPEC.?               41960021
         BZ    TSO5                    NO - BRANCH                      42040021
         OI    HEWLCWBB+24,TERMWRT     SET ON TERM. WRITE SWITCH        42120021
TSO5     L     R14,HEWLCWBB+20         LOAD ADD. OF CURRNT RECRD        42200021
         L     R11,HEWLEDE1                                             42280021
         LTR   R11,R11                                                  42360021
         BC    8,LOG03                                                  42440021
         CLI   HEWLEDE1,X'02'                                           42520021
         BC    2,LOG04     DISPOSITION EQ 3, OUTPUT TWO SYMBOLS         42600021
         BC    8,LOG05     DISPOSITION EQ 2, OUTPUT ONE SYMBOL          42680021
         CLI   HEWLEDE1,X'01'                                           42760021
         BC    4,LOG010    DISPOSITION EQ 0, NO ACTION                  42840021
*LOG03 IS DISPOSITION 1, OUTPUT CARD IMAGE                              42920021
*THE FOLLOWING CODE HANDLES THE OUTPUTTING OF CARD IMAGES               43000021
LOG03    TM    IDRSWS,LOGIDNT          IS THE CARD IMAGE ADDRESS S21016 43080021
*                                      IN REGISTER 1?            S21016 43160021
         BZ    LOG03A                  IF NOT, BRANCH            S21016 43240021
         MVC   POS12(LEN80,R14),NODISP(R1)  MOVE CARD IMAGE TO   S21016 43320021
*                                      PRINT BUFFER              S21016 43400021
         B     LOG010                  GO TO PRINT THE MESSAGE   S21016 43480021
LOG03A   L     R11,HEWLCLAC            ADDRESS OF READ CONTROL   S21016 43560021
*                                      BLOCK                     S21016 43640021
         L     R11,CURBUF(0,R11)       ADDRESS OF CURRENT INPUT BUFFER  43720021
         MVC   12(80,R14),0(R11)       MOVE CARD IMAGE TO PRINT BUFFER  43800021
         B     LOG010                                                   43880021
*IF ENTERED AT LOG3 TWO SYMBOLS ARE FORMATTED, AT LOG4 ONLY 1 SYMBOL    43960021
LOG04    MVC   20(8,R14),0(R13)                                         44040021
LOG05    L     R1,SPACES+36            RESTORE CONTINETS OF REGISTER 1  44120021
         MVC   10(8,R14),0(R1)                                          44200021
LOG010   MVC   0(8,R14),X+1   MOVE HEADER TO MESS. BUF. AREA            44280021
         BALR  R14,R15                 TO PRINT ROUTINE                 44360021
*A BIT IS NOW SET TO TELL THE FINAL PROCESSOR WHAT MESSAGE TO OUTPUT    44440021
         LA    R15,1                                                    44520021
         SR    R14,R14                                                  44600021
          CLI   HEWLEDE1+3,MXIII       IS MSG NO. > 63 ?         S21016 44680021
          BH    MAP2                   IF SO, BRANCH             S21016 44760021
         MVC   S+3(1),HEWLEDE1+3                                        44840021
S        SLDL  R14,0                                                    44920021
         SRDL  R14,1                                                    45000021
         O     R14,BITMAP                                               45080021
         O     R15,BITMAP+4                                             45160021
         STM   R14,R15,BITMAP                                           45240021
          B     BYPASS                 BRNCH AROUND BITMAP2 CODE S21016 45320021
MAP2      IC    R14,HEWLEDE1+3         GET MESSAGE NUMBER        S21016 45400021
          S     R14,SIXTY3             SUBTRACT 63               S21016 45480021
          STC   R14,HEWLEDE1+3         STORE MESSAGE NUMBER-63   S21016 45560021
          SR    R14,R14                ZERO REGISTER             S21016 45640021
          MVC   S2+3(1),HEWLEDE1+3     MOVE MSG.NO. - 63 TO      S21016 45720021
*                                      SHIFT INSTRUCTION         S21016 45800021
S2        SLDL  R14,0                  SHIFT ONE-BIT TO POSITION S21016 45880021
          SRDL  R14,1                  CORRESPONDING TO MSG.NO.  S21016 45960021
          O     R14,BITMAP2            TURN ON APPROPRIATE       S21016 46040021
          O     R15,BITMAP2+4          BIT AND STORE             S21016 46120021
          STM   R14,R15,BITMAP2        IN BITMAP2                S21016 46200021
          B     BYPASS                 BRANCH AROUND CONSTANT    S21016 46280021
SIXTY3    DC    A(63)                  VALUE 63 FOR SUBTRACT     S21016 46360021
BYPASS    EQU   *                                                S21016 46440021
         CLI   HEWLEDE1+2,X'03'                                         46520021
         BC    2,LOG014  ABORT                                          46600021
         BC    8,LOG012   SET NOT EXECUTABLE                            46680021
         CLI   HEWLEDE1+2,X'02'                                         46760021
         BC    4,LOG013  NORMAL RETURN                                  46840021
*TEST IF EXECUTE OPTION IS SPECIFIED                                    46920021
*THIS MEANS SEVERITY CODE WAS 2                                         47000021
         TM    APT0,LETON                                               47080021
         BC    1,LOG013                                                 47160021
LOG012   NI    PDSE7,NOEX                                               47240021
LOG013   LM    R11,R1,SPACES+12                                         47320021
         LR    R15,R14                                                  47400021
         BCR   15,R15                                                   47480021
LOG014   L     15,ADD1             TRANSFER TO FINAL PROCESSOR TO ABEND 47560021
         NI    PDSE7,NOEX         SET NO EXEC BIT IN APT                47640021
         BALR  14,15                                                    47720021
         DC    V(HEWLFMAP)                                              47800021
HEWLCADA DC    V(HEWLFADA)                                              47880021
         DC    V(HEWLENAM)                                              47960021
         DC    V(HEWLCFNI)                                              48040021
         DC    V(HEWLCEOI)                                              48120021
         DC    V(HEWLFINP)                                              48200021
         DC    V(HEWLFSCD)                                              48280021
DCB      DC    A(HEWLCPDB)                                              48360021
ADD1     DC    V(HEWLCFAB)                                              48440021
PRNTAD   DC    A(HEWLEPNT)         ADDRESS OF PRINT ROUTINE             48520021
         DC    V(HEWLFFNL)                                              48600021
TERMEXIT DC    X'85'                   END FLAG                         48680021
         DC    AL3(TERMEX)             SYSTERM EXIT ADDRESS             48760021
APTELIST DC    X'85'                                                    48840021
         DC    AL3(HEWLXIT1)                                            48920021
APTEXLST DC    X'85'                   EXIT LIST--END AND DCB EXIT      49000021
         DC    AL3(HEWLEXIT)  ADR OF INPUT EXIT                         49080021
APTXLIST DC   X'05'                                                     49160021
         DC    AL3(HEWLXIT2)                                            49240021
         DC    X'87'                                                    49320021
         DC    AL3(0)                                                   49400021
DUMH     DC    X'09'                   CARRIAGE CONTROL PRINT AND SPACE 49480021
         DC    C'IEW'                                                   49560021
         DS    0D                                                       49640021
X        DS    5H                                                       49720021
TEST     DC    A(MSGFOUR)                                               49800021
         DS    0F                                                       49880021
*        DC FOR MAJOR AND MINOR NAMES FOR SYSLMOD ENQ,DEQ               49960021
ENQNAME  DC    C'SYSIEWLP'                                              50040021
MINOR    DC    44C' '                                                   50120021
         TITLE 'VALIDITY CHECK ROUTINE'                                 50130002
*                                                       OX04280,OY03413 50140002
* THIS SUBROUTINE SCANS THE MEMBER NAME AND ALIAS       OX04280,OY03413 50170002
* NAMES FOR VALID CHARACTERS                            OX04280,OY03413 50180002
* THE SUBROUTINE IS CALLED BY SCN DURING THE            OX04280,OY03413 50184002
* PROCESSING OF NAME AND ALIAS CONTROL STATEMENTS AND   OX04280,OY03413 50186002
* BY FNL WHEN THE MEMBER NAME IS TAKEN FROM THE         OX04280,OY03413 50188002
* SYSLMOD DD STATEMENT (VIA THE DEB)                    OX04280,OY03413 50188402
* INPUT - REGISTER 9 CONTAINS A POINTER TO THE          OX04280,OY03413 50188802
*         CHARACTER STRING                              OX04280,OY03413 50189202
* OUTPUT - A ZERO VALUE IN REGISTER 9 INDICATING        OX04280,OY03413 50189602
*          A VALID NAME                                 OX04280,OY03413 50189702
*        - A NONZERO VALUE IN REGISTER 9 INDICATING     OX04280,OY03413 50189802
*          AN INVALID NAME                              OX04280,OY03413 50189902
*                                                       OX04280,OY03413 50190602
THISCHR  EQU   9                       POINTS TO PRESENT CHAR. AND      50192102
*                                      SCNDS BASE                A37667 50192202
LASTCHR  EQU   10                      POINTS TO LAST CHAR       A37667 50192302
FSTCHAR  EQU   X'02'                   WORKING ON 1ST CHARACTER  A37667 50192702
NOTFST   EQU   X'FD'                   NOT FIRST CHARACTER       A37667 50194702
         USING VLDCHAR,REG15                            OX04280,OY03413 50194802
VLDCHAR  ST    LASTCHR,SAVR            SAVE REG 10               A37667 50194902
HEWVLDCK EQU   VLDCHAR                                                  50195302
         USING SCNDS,THISCHR                                     A37667 50195502
         LA    LASTCHR,LAST            PICK UP ADDR OF LAST CHAR A37667 50196402
         MVI   OPT2,FSTCHAR            TURN ON FIRST CHAR SWITCH A37667 50198002
* THE FOLLOWING CODE IS CHARACTER DEPENDENT                      A37667 50198402
VALIDLP  CLI   THIS,C'Z'               IS CHAR GREATER THAN 'Z'  A37667 50198802
         BH    CHAR1                   YES, CHECK IF 1ST CHAR    A37667 50199202
         CLI   THIS,C'S'               SI IT 'S' OR  GREATER     A37667 50199602
         BNL   CHAROK                  YES, SO VALID CHAR        A37667 50199702
         CLI   THIS,C'R'               IS CHAR GREATER THAN 'R'  A37667 50199902
         BH    CHARERR                 YES, ERROR                A37667 50200002
         CLI   THIS,C'J'               IS IT 'J' OR  GREATER     A37667 50226602
         BNL   CHAROK                  YES, SO VALID CHAR        A37667 50236602
         CLI   THIS,C'I'               IS CHAR GREATER THAN 'I'  A37667 50246602
         BH    CHARERR                 YES, ERROR                A37667 50248602
         CLI   THIS,X'C0'              IS IT 12-0 PUNCH OR GTR    M0556 50250602
         BNL   CHAROK                  YES, SO VALID CHAR        A37667 50252602
         CLI   THIS,C'@'               IS CHAR '@'?              A37667 50253002
         BE    CHAROK                  YES, VALID                A37667 50253102
         CLI   THIS,C'#'               IS IT '#'                 A37667 50253202
         BE    CHAROK                  YES, SO VALID CHAR        A37667 50262102
         CLI   THIS,C'$'               IS IT '$'                 A37667 50264102
         BE    CHAROK                  YES, SO VALID CHAR        A37667 50266102
CHAR1    TM    OPT2,FSTCHAR            IS THIS THE 1ST CHAR      A37667 50268102
         BO    CHARERR                 YES, SO ERROR             A37667 50270102
         CLI   THIS,C'9'               IS IT GREATER THAN '9'    A37667 50270502
         BH    CHARERR                 YES, SO INVALID           A37667 50270902
         CLI   THIS,C'0'               IS IT LESS THAN '0'       A37667 50271002
         BL    CHARERR                 YES, SO INVALID           A37667 50293202
CHAROK   NI    OPT2,NOTFST             TURN OFF FIRST CHAR BIT   A37667 50303202
         LA    THISCHR,NEXT            UPDATE PTR                A37667 50313202
         CR    THISCHR,LASTCHR         HAVE WE FINISHED          A37667 50315202
         BH    VALIDOUT                YES                       A37667 50315302
         CLI   THIS,C' '               IS THIS DELIM    OX04280,OY03413 50315402
         BE    VALIDOUT                YES, SO FINISHED          A37667 50315502
         B     VALIDLP                 CONTINUE                  A37667 50322902
VALIDOUT SR    THISCHR,THISCHR         INDICATE   VALID NAME     A37667 50324902
CHARERR  L     LASTCHR,SAVR            RESTORE REGS              A37667 50328902
         BR    R14                     RETURN                    A37667 50338902
OPT2     DC    X'00'               FOR CHECKING VALID CHARACTERS A37667 50339302
SAVR     DS    F                      SAVE AREA REG14   OX04280,OY03413 50339702
         DROP  REG15                                    OX04280,OY03413 50349702
         TITLE  'HEWLFROU  TABLE ALLOCATION ROUTINE'                    50352602
         ENTRY HEWLFALK                                                 50360021
*********************************************************************   50440021
*                                                                    *  50520021
*        HEWLFALK--TABLE ALLOCATION ROUTINE                          *  50600021
*                                                                    *  50680021
**********************************************************************  50760021
*                                                                    *  50840021
*        STATUS:  AOS/1,AOS/2--RELEASE 1                             *  50920021
*                                                                    *  51000021
*        FUNCTION :                                                  *  51080021
*              TO ALLOCATE TABLES USED BY THE LINKAGE EDITOR,        *  51160021
*              AND TO EXPAND THEM TO THEIR MAXIMUM SIZES             *  51240021
*              WHEN A TABLE OVERFLOW SITUATION OCCURS.               *  51320021
*                                                                    *  51400021
*                                                                    *  51480021
*        ENTRY POINT : HEWLFALK                                      *  51560021
*              1) RECEIVING CONTROL FROM HEWLFINT FOR                *  51640021
*                 INITIAL ALLOCATION                                 *  51720021
*              2) RECEIVING CONTROL FROM HEWLFINP,HEWLFESD,          *  51800021
*                 HEWLFRAT,HEWLFADA,HEWLFREL FOR REALLOCATION.       *  51880021
*                                                                    *  51960021
*        EXTERNAL REFERENCES : NONE                                  *  52040021
*                                                                    *  52120021
*        INPUT :                                                     *  52200021
*              REGISTER 2 CONTAINS THE ADDR OF HEWLFAPT              *  52280021
*              REGISTER 14 CONTAINS THE RETURN ADDRESS.              *  52360021
*                                                                    *  52440021
*        OUTPUT : NONE                                               *  52520021
*                                                                    *  52600021
*        EXIT NORMAL : TO CALLING ROUTINE                            *  52680021
*                                                                    *  52760021
*        EXIT ERROR : NONE                                           *  52840021
*                                                                    *  52920021
*        TABLES/WORK AREAS :                                         *  53000021
*              HEWLFAPT    - LINKAGE EDITOR COMMUNICATION AREA       *  53080021
*              ALOCTABL - ALLOCATION TABLE                           *  53160021
*              TMPADRSV - TEMPORARY TABLE ADDR SAVE AREA             *  53240021
*                                                                    *  53320021
*        ATTRIBUTES : SERIALLY REUSABLE,PROBLEM PROGRAM MODE ,ENABLED*  53400021
*                                                                    *  53480021
*        NOTES : ALL REGISTERS SAVED BY THE CALLING ROUTINE          *  53560021
*                                                                    *  53640021
*********************************************************************   53720021
         EJECT                                                          53800021
*********************************************************************   53880021
*                                                                    *  53960021
*        EQUATES FOR REGISTERS                                       *  54040021
*                                                                    *  54120021
*********************************************************************   54200021
REG0     EQU   0                       REGISTER 0                       54280021
TABLPT2  EQU   1                       TEMPORARY ADDR SAVE AREA PT      54360021
APTBASE  EQU   2                       BASE REG FOR APT                 54440021
INDXRG   EQU   3                       INDEX REGISTER                   54520021
ALOCPT   EQU   4                       ALLOCATING ADDR                  54600021
TABLPT1  EQU   5                       ALLOCATION TABLE PT              54680021
WORK1    EQU   7                       WORK REGISTER                    54760021
WORK2    EQU   8                       WORK REGISTER                    54840021
WORK3    EQU   9                       WORK REGISTER                    54920021
BYTSPRWT EQU   11                      BYTES PER WEIGHT                 55000021
BASE     EQU   12                      BASE REGISTER                    55080021
RETURN   EQU   14                      RETURN REGISTER                  55160021
         SPACE 3                                                        55240021
*********************************************************************   55320021
*                                                                    *  55400021
*        MISCELLANEOUS OFFSETS AND MASKS                             *  55480021
*                                                                    *  55560021
*********************************************************************   55640021
         SPACE 2                                                        55720021
O        EQU   0                       ZERO                             55800021
I        EQU   1                       ONE                              55880021
IV       EQU   4                       DECIMAL VALUE 4                  55960021
VIII     EQU   8                       DECIMAL VALUE 8                  56040021
TENN     EQU   10                      DECIMAL VALUE 10                 56120021
IO       EQU   X'10'                   HEX 10                           56200021
EO       EQU   X'E0'                   HEX E0                           56280021
FO       EQU   X'F0'                   HEX F0                           56360021
FF       EQU   X'FF'                   HEX FF                           56440021
ENDFLG   EQU   X'FF'                   END INDICATOR OF ALLOC TABLE     56520021
HEX100   EQU   256                     HEX 100                          56600021
OVERBIT  EQU   X'20'                   OVERLAY                          56680021
HIARCHY  EQU   X'04'                   HIARCHY SPECIFIED                56760021
         EJECT                                                          56840021
*********************************************************************   56920021
*                                                                    *  57000021
*        ALLOCATION OF ADDRESSES AND SIZES OF TABLES                 *  57080021
*                                                                    *  57160021
*********************************************************************   57240021
         SPACE 3                                                        57320021
HEWLFALK BALR  BASE,0                   ESTABLISH    ROUTINE            57400021
         USING *,BASE                  ADDRESSABILITY                   57480021
         USING APTDSECT,APTBASE        ADDRESSABILITY FOR APT           57560021
         XR    BYTSPRWT,BYTSPRWT       INITIALIZE BYTES PER WEIGHT      57640021
         MVC   CSNOSV(4),CSNO          GET CURRENT SEGMENT NUMBER       57720021
         MVC   TTRLIST(4),HEWLCRBB+IV  INITIALIZE TTR LIST ADDR         57800021
         MVC   TOTALWT,SIMPLWT         INITIALIZE TOTAL WEIGHT          57880021
         TM    SAVATS,OVERBIT          IS OVLY SPECIFIED                57960021
         BO    TBAL001                 YES,BRANCH OUT                   58040021
         TM    NEWSW,HIARCHY           IS HIARCHY SPECIFIED      S01904 58120021
         BZ    TBAL010                 NO,BRANCH OUT             S01904 58200021
         MVC   TOTALWT,HIARWT          INITIALIZE TOTAL WEIGHT   S01904 58280021
         MVI   TBAL101A+I,O            HIARCHY TABLE IS ALLOC    S01904 58360021
         B     TBAL010                 BRANCH OUT                S01904 58440021
TBAL001  MVI   TBAL101+I,O             OVLY TBL WILL BE ALLOC    S01904 58520021
         MVC   TOTALWT,OVLYWT          INITIALIZE WEIGHT         S01904 58600021
TBAL010  TM    APT4,REALOCTE           IS THIS REALLOCATION      S01904 58680021
         BZ    TBAL020                 NO,BRANCH OUT             S01904 58760021
         L     BYTSPRWT,FFCADR         GET HIGHEST ADDR GETMAINED       58840021
         S     BYTSPRWT,HIGHSV         SIZE OF CORE FOR TBL ALLOC       58920021
         N     BYTSPRWT,DBLWRD         DOUBLE WORD BDY ALIGNMENT        59000021
         XR    BYTSPRWT-I,BYTSPRWT-I  INITIALIZE FOR DIVISION           59080021
         D     BYTSPRWT-I,TOTALWT      CALCULATE BYTES PER WEIGHT       59160021
TBAL020  LA    TABLPT1,ALOCTABL        INITIALIZE ALLOC TBL      S01904 59240021
         LA    TABLPT2,TMPADRSV        INIT TBL ADDR SAVEAREA    S01904 59320021
         MVC   FSTPHIGH,TXTBFEND       INITIALIZE ALL            S01904 59400021
         MVC   INTPHIGH(VIII),FSTPHIGH  ALLOCATING ADDR          S01904 59480021
TBAL100  XR    INDXRG,INDXRG           ZERO OUT INDEX REG        S01904 59560021
         TM    FLG2(TABLPT1),HIARSW    TABLE FOR HIARCHY         S01904 59640021
TBAL101A BO    TBAL250       COND BRANCH SET DYNAMICALLY         S01904 59720021
         TM    FLG1(TABLPT1),OVLY      IS TBL USED FOR OVLY      S01904 59800021
TBAL101  BO    TBAL250       COND BRANCH SET DYNAMICALLY         S01904 59880021
         L     ALOCPT,FSTPHIGH         ALLOCATING ADDR=1ST PASS HIGH    59960021
         TM    FLG1(TABLPT1),FRSTPS IS TABLE USED FOR 1ST PASS          60040021
         BO    TBAL110                 YES,BRANCH OUT            S01904 60120021
         L     ALOCPT,SCDPHIGH         ALLOC ADDR=INTR PASS HIGH S01904 60200021
TBAL110  TM    FLG1(TABLPT1),INTRPS  IS TBL USED FOR INTR PASS   S01904 60280021
         BZ    TBAL120                 NO,BRANCH OUT             S01904 60360021
         C     ALOCPT,INTPHIGH         ALLOC ADDR>INTR PASS HIGH S01904 60440021
         BNL   TBAL120       YES,BRANCH OUT                      S01904 60520021
         L     ALOCPT,INTPHIGH         NO,ALLOC ADDR=INTR PASS HIGH     60600021
TBAL120  TM    FLG1(TABLPT1),SCDPS     IS TABLE USED IN 2ND PASS S01904 60680021
         BZ    TBAL200                 NO,BRANCH OUT             S01904 60760021
         C     ALOCPT,SCDPHIGH         ALLOC ADDR>2ND PASS HIGH  S01904 60840021
         BNL   TBAL200                 YES,BRANCH OUT            S01904 60920021
         L     ALOCPT,SCDPHIGH         NO,ALLOC ADDR=2ND PASS HIGH      61000021
TBAL200  TM    FLG1(TABLPT1),ZERONTRY  PREFIX NEEDED             S01904 61080021
         LR    REG0,ALOCPT             SAVE ALLOC ADDR TEMPORARY S01904 61160021
         BZ    TBAL201                 NO,BRANCH OUT             S01904 61240021
         IC    INDXRG,BYTS(TABLPT1)    YES,GET BYTES PER ENTRY   S01904 61320021
         SR    ALOCPT,INDXRG           DECREMENT ALLOC ADDR      S01904 61400021
TBAL201  TM    APT4,REALOCTE           REALLOCATION?             S01904 61480021
         BM    TBAL400                 YES,BRANCH OUT            S01904 61560021
TBAL203  IC    INDXRG,ADDR(TABLPT1)    GET TABLE ADDR INDEX      S01904 61640021
         ST    ALOCPT,CSNO(INDXRG)     SAVE TABLE ADDR IN APT    S01904 61720021
TBAL204  LR    ALOCPT,REG0             RESTORE ALLOCATING ADDR   S01904 61800021
         LR    WORK1,BYTSPRWT          GET BYTES PER WEIGHT      S01904 61880021
         MH    WORK1,WEIT(TABLPT1)     CALCULATE SIZE TO BE EXPANDED    61960021
         AH    WORK1,MIN(TABLPT1)      ADD TO MIN SIZE OF TABLE  S01904 62040021
         TM    FLG1(TABLPT1),CUTOFF    IS THERE A LIMIT TO SIZE  S01904 62120021
         BZ    TBAL210                 NO,BRANCH OUT             S01904 62200021
         TM    FLG1(TABLPT1),SCDPS     IS TABLE USED FOR 2ND PASS       62280021
         BO    TBAL205                 YES,BRANCH OUT            S01904 62360021
         C     WORK1,SZSYSUT1          NO,COMPARE WITH SYSUT1 TRK SIZE  62440021
         BL    TBAL210                 LOW,NO FIX NEEDED         S01904 62520021
         L     WORK1,SZSYSUT1          PICK UP TRACK SIZE        S01904 62600021
         N     WORK1,DBLWRD            FORCE TO DBL WORD BDY     S01904 62680021
TBAL205  LA    WORK3,IV                GET DECIMAL VALUE FOUR    S01904 62760021
         M     WORK3-I,SZSYSUT1        MULTIPLY TRACK SIZE BY 4  S01904 62840021
         CR    WORK1,WORK3             COMPARE WITH ALLOC SIZE   S01904 62920021
         BL    TBAL210                 LOW,BRANCH OUT            S01904 63000021
         LR    WORK1,WORK3             FIX SIZE                  S01904 63080021
         N     WORK1,DBLWRD            FORCE TO DBL WORD BDY     S01904 63160021
TBAL210  LA    ALOCPT,O(WORK1,ALOCPT)  UPDATE ALLOC ADDR         S01904 63240021
         LA    ALOCPT,8(ALOCPT)        FORCE TO NEXT HIGHER      S01904 63320021
         N     ALOCPT,DBLWRD           DOUBLE WORD BDY           S01904 63400021
         TM    FLG1(TABLPT1),FRSTPS    TABLE USED IN 1ST PASS    S01904 63480021
         BZ    TBAL220                 NO,BRANCH OUT             S01904 63560021
         ST    ALOCPT,FSTPHIGH         UPDATE 1ST PASS HIGH      S01904 63640021
TBAL220  TM    FLG1(TABLPT1),INTRPS    IS TABLE FOR INTR PASS    S01904 63720021
         BZ    TBAL230                 NO,BRANCH OUT             S01904 63800021
         ST    ALOCPT,INTPHIGH         YES,UPDATE INTR PASS HIGH S01904 63880021
TBAL230  TM    FLG1(TABLPT1),SCDPS     TABLE USED IN 2ND PASS    S01904 63960021
         BZ    TBAL240                 NO,BRANCH OUT             S01904 64040021
         ST    ALOCPT,SCDPHIGH         YES,UPDATE 2ND PASS HIGH  S01904 64120021
TBAL240  IC    INDXRG,BYTS(TABLPT1)    PICK UP NO OF BYTES PER ENTRY    64200021
         XR    WORK1-I,WORK1-I         CLEAR REG FOR DIVISION    S01904 64280021
         DR    WORK1-I,INDXRG          CALCULATE MAX NO OF ENTRIES      64360021
         C     WORK1,MAXENTRY          LESS THAN 32K?   OX05441,OY05016 64440002
         BNH   TBAL245                 YES, CONTINUE    OX05441,OY05016 64490002
         L     WORK1,MAXENTRY          ELSE SET TO MAX ALLOWED  OY05016 64500002
TBAL245  EQU   *                                        OX05441,OY05016 64510002
         IC    INDXRG,ENTRY(TABLPT1)   PICK UP ENTRY ADDR INDEX  S01904 64520021
         STH   WORK1,CSNO(INDXRG)      STORE MAX NO OF ENTRIES   S01904 64600021
TBAL250  LA    TABLPT1,TENN(TABLPT1)   UPDATE ALLOCATION PTR     S01904 64680021
         TM    O(TABLPT1),ENDFLG       END OF TABLE REACHED      S01904 64760021
         BNO   TBAL100                 NO,CONTINUE ALLOCATION    S01904 64840021
TBAL260  TM    APT4,REALOCTE           REALLOCATION?             S01904 64920021
         BM    TBAL300                 YES,BRANCH OUT            S01904 65000021
         CLC   SCDPHIGH+1(3),INTPHIGH+1  2ND PASS HIGH>INTR PASS HIGH   65080021
         BH    TBAL260A                YES,BRANCH OUT            S01904 65160021
         MVC   HIGHSV+1(3),INTPHIGH+1  SAVE HIGHER ADDR          S01904 65240021
         B     TBAL901                 EXIT                      S01904 65320021
TBAL260A MVC   HIGHSV+1(3),SCDPHIGH+1  USE 2ND PASS HIGH         S01904 65400021
         B     TBAL901                 EXIT                      S01904 65480021
         EJECT                                                          65560021
*********************************************************************   65640021
*                                                                    *  65720021
*        MOVING AND CLEARING TABLES AFTER REALLOCATION               *  65800021
*                                                                    *  65880021
********************************************************************    65960021
         SPACE 3                                                        66040021
TBAL300  SH    TABLPT2,FOUR            UPDATE TABLE PTR          S01904 66120021
TBAL301  SH    TABLPT1,TEN             UPDATE TABLE PTR          S01904 66200021
         TM    FLG1(TABLPT1),ENDMOVE   NO MORE MOVE REQUIRED     S01904 66280021
         BO    TBAL900                 NO MORE,BRANCH OUT        S01904 66360021
         TM    FLG1(TABLPT1),MOVETBL   TABLE HAS TO BE MOVED     S01904 66440021
         BZ    TBAL301                 NO,BRANCH OUT             S01904 66520021
         NI    FLG1(TABLPT1),FF-MOVETBL  RESET SWITCH            S01904 66600021
         IC    INDXRG,ADDR(TABLPT1)    GET TABLE ADDR INDEX      S01904 66680021
         L     WORK2,CSNO(INDXRG)      PICK UP OLD TABLE ADDR    S01904 66760021
         L     WORK3,O(TABLPT2)        PICK UP NEW TABLE ADDR    S01904 66840021
         ST    WORK3,CSNO(INDXRG)      STORE NEW TABLE ADDR IN APT      66920021
         IC    INDXRG,CURNTRY(TABLPT1) GET CURRENT NO OF ENTRIES INDEX  67000021
         LH    WORK1,CSNO(INDXRG)      PICK UP CORRENT NO OF ENTRIES    67080021
         TM    FLG1(TABLPT1),ZERONTRY  IS THERE A PREFIX         S01904 67160021
         BZ    TBAL310                 NO,BRANCH OUT             S01904 67240021
         LA    WORK1,I(WORK1)          YES,INCREMENT NO OF ENTRIES      67320021
TBAL310  IC    INDXRG,BYTS(TABLPT1)    GET NO OF BYTES PER ENTRY S01904 67400021
         MR    WORK1-I,INDXRG          BYTES TO BE MOVED         S01904 67480021
         AR    WORK2,WORK1                                       S01904 67560021
         AR    WORK3,WORK1                                       S01904 67640021
         XR    WORK1-I,WORK1-I         CLEAR REG BEFORE DIVISION S01904 67720021
         D     WORK1-I,HEXI00          DIVIDE BY 256             S01904 67800021
         LTR   WORK1,WORK1             QUOTIENT EQUAL TO ZERO    S01904 67880021
         BZ    TBAL320                 YES,BRANCH OUT            S01904 67960021
TBAL330  S     WORK2,HEXI00                                      S01904 68040021
         S     WORK3,HEXI00                                      S01904 68120021
         MVC   MOVESV(HEX100),O(WORK2)                           S01904 68200021
         XC    O(HEX100,WORK2),O(WORK2)  CLEAR 256 BYTES AT A TIME      68280021
         MVC   O(HEX100,WORK3),MOVESV    MOVE DATA TO NEW AREA   S01904 68360021
         BCT   WORK1,TBAL330           DECREMENT QUOTIENT BY ONE S01904 68440021
TBAL320  LTR   WORK1-I,WORK1-I         IS THE REMAINDER ZERO     S01904 68520021
         BZ    TBAL300                 GO TO PROCESS NEXT ENTRY  S01904 68600021
         SR    WORK2,WORK1-I                                     S01904 68680021
         SR    WORK3,WORK1-I                                     S01904 68760021
         BCTR  WORK1-I,REG0            NO,DECREMENT BY 1 FOR EX  S01904 68840021
         EX    WORK1-I,MOVEINST        MOVE THAT MANY BYTES      S01904 68920021
         EX    WORK1-I,MOVEINSA                                  S01904 69000021
         EX    WORK1-I,CLEAR           CLEAR THAT MANY BYTES     S01904 69080021
         B     TBAL300                 GO PROCESS NEXT TABLE     S01904 69160021
MOVEINST MVC   MOVESV(I),O(WORK2)                                S01904 69240021
MOVEINSA MVC   O(I,WORK3),MOVESV                                 S01904 69320021
CLEAR    XC    O(O,WORK2),O(WORK2)     CLEAR INSTRUCTION FOR EX  S01904 69400021
         EJECT                                                          69480021
********************************************************************    69560021
*              RETURN TO CALLING ROUTINE                            *   69640021
********************************************************************    69720021
         SPACE 3                                                        69800021
TBAL900  OI    APT4,REALOCTD           REALLOCATION DONE         S01904 69880021
**********************************************************************  69960021
*         THE FOLLOWING CODE UPDATES THE APT TO REFLECT              *  70040021
*         THE CHANGES IN  REALLOCATING THE IDR TABLES .              *  70120021
*         THE ADDRESS OF THE NEXT AVAILABLE ENTRY IS CALCULATED      *  70200021
*         AND STORED IN THE APT - IDRXXEND.                          *  70280021
**********************************************************************  70360021
         L     WORK1,IDRTRTAB          GET ADDR OF IDRTR TABLE   S01904 70440021
         AH    WORK1,IDRTRCUR          COMPUTE NEXT AVAIL ENTRY  S01904 70520021
         ST    WORK1,IDRTREND          STORE ADDRESS IN APT      S01904 70600021
         L     WORK1,IDRTITAB          GET ADR OF IDR TI TABLE  OX04245 70650002
         AH    WORK1,IDRTICUR          COMPUTE NEXT AVAIL ENTRY OX04245 70660002
         ST    WORK1,IDRTIEND          STORE ADDRESS IN APT     OX04245 70670002
         L     WORK1,IDRUDTAB          GET ADDR OF IDRUD TABLE   S01904 70680021
         AH    WORK1,IDRUDCUR          COMPUTE NEXT AVAIL ENTRY  S01904 70760021
         ST    WORK1,IDRUDEND          STORE ADDRESS IN APT      S01904 70840021
         L     WORK1,IDRZPTAB          GET ADDR OF IDRZP TABLE   S01904 70920021
         AH    WORK1,IDRZPCUR          COMPUTE NEXT AVAIL ENTRY  S01904 71000021
         ST    WORK1,IDRZPEND          STORE ADDRESS IN APT      S01904 71080021
**********************************************************************  71160021
         MVC   CSNO(4),CSNOSV                                    S01904 71240021
         B     TBAL901A                RETURN TO CALLING RTN     S01904 71320021
TBAL901  OI    APT4,INALOCTD           INITIAL ALLOCATION DONE   S01904 71400021
         XC    CSNO(4),CSNO            ZERO OUT NO OF SEGMENTS   S01904 71480021
         MVC   ENT1X1(4),ENT1X                                   S01904 71560021
TBAL901A MVI   TBAL101+I,IO            RESTORE BRANCH INSTR      S01904 71640021
         MVI   TBAL101A+I,IO           RESTORE BRANCH INSTR      S01904 71720021
         LH    WORK1,ENRNX             GET MAX. ENTRIES IN RNT   XM1692 71770002
         STH   WORK1,ENRNC             STORE IN CURRENT          XM1692 71780002
*                                      CURRENT NO. ENTRIES IN    XM1692 71790002
*                                      RNT MUST ALWAYS EQUAL     XM1692 71792002
*                                      MAX NO. ENTRIES SINCE     XM1692 71794002
*                                      LR PROCESSING CAN PUT     XM1692 71796002
*                                      DEPEND FLAGS IN FOR       XM1692 71798002
*                                      CESDIDS NOT YET RECEIVED  XM1692 71798402
         BR    RETURN                  RETURN TO CALLING RTN     S01904 71800021
         EJECT                                                          71880021
********************************************************************    71960021
*                                                                   *   72040021
*              CLEARING TABLES THAT NEED NOT BE MOVED               *   72120021
*                                                                   *   72200021
********************************************************************    72280021
         SPACE 3                                                        72360021
TBAL400  TM    FLG1(TABLPT1),ENDMOVE   TABLE NOT TO BE MOVED?    S01904 72440021
         BO    TBAL203                 RETURN                    S01904 72520021
         TM    FLG2(TABLPT1),NOMOVE    IS IT A BUFFER            S01904 72600021
         BO    TBAL203                 YES,GO CLEAR THE BUFFER   S01904 72680021
         IC    INDXRG,CURNTRY(TABLPT1) GET CUR NO OF ENTRIES INDEX      72760021
         LH    WORK1,CSNO(INDXRG)      PICK UP CUR NO OF ENTRIES S01904 72840021
         LTR   WORK1,WORK1             IS IT ZERO                S01904 72920021
         BZ    TBAL203                 YES,NORMAL PROCESSING     S01904 73000021
TBAL410  ST    ALOCPT,O(TABLPT2)       SAVE NEW TABLE ADDR TEMP  S01904 73080021
         LA    TABLPT2,IV(TABLPT2)     UPDATE PTR                S01904 73160021
         OI    FLG1(TABLPT1),MOVETBL   SET SWITCH TO MOVE TABLE  S01904 73240021
         B     TBAL204                 GO ALLOCATE SIZE OF TABLE S01904 73320021
         EJECT                                                          73400021
********************************************************************    73480021
*                                                                   *   73560021
*                  TABLES AND WORK AREAS                            *   73640021
*                                                                   *   73720021
********************************************************************    73800021
         SPACE 3                                                        73880021
TEN      DC    H'10'         DECIMAL VALUE 10                    S01904 73960021
FOUR     DC    H'4'          DECIMAL VALUE FOUR                  S01904 74040021
FSTPHIGH DC    F'0'          FIRST PASS ALLOC ADDR               S01904 74120021
INTPHIGH DC    F'0'          INTERMEDIATE PASS ALLOC ADDR        S01904 74200021
SCDPHIGH DC    F'0'          SECOND PASS ALLOC ADDR              S01904 74280021
HIGHSV   DC    F'0'          HIGHEST ADDRESS ASSIGNED            S01904 74360021
CSNOSV   DC    F'0'          CURRENT NUMBER OF ENTRIES           S01904 74440021
MAXENTRY DC    X'00007FFF'   MAX NO OF ENTRIES IN ANY TABLE      S01904 74520021
DBLWRD   DC    X'FFFFFFF8'   DOUBLE WORD MASK                    S01904 74600021
SIMPLWT  DC    AL4(ROUNDSIM) TOTAL WEIGHT FOR SIMPLE STRUCTURE          74680000
HIARWT   DC    AL4(ROUNHIAR) TOTAL WEIGHT FOR HIARCHY                   74760000
OVLYWT   DC    AL4(ROUNOVLY) TOTAL WEIGHT FOR OVLY                      74840000
HEXI00   DC    X'00000100'   VALUE 256                           S01904 74920021
TOTALWT  DS    F             TOTAL WEIGHT                        S01904 75000021
         EJECT                                                          75080021
*              ALLOCATION TABLE                                     *   75160021
*********************************************************************   75240021
*                                                                    *  75320021
*        OFFSETS FOR ALLOCATION TABLE ENTRIES                        *  75400021
*                                                                    *  75480021
*********************************************************************   75560021
FLG1     EQU   0                       SWITCHES                         75640021
ADDR     EQU   1                       INDEX FOR ADDR OF TABLE          75720021
ENTRY    EQU   2                       INDEX FOR MAX # OF ENTRIES       75800021
BYTS     EQU   3                       BYTES PER WEIGHT                 75880021
WEIT     EQU   4                       WEIGHT OF THE TABLE              75960021
MIN      EQU   6                       MINIMUM SIZE OF THE TABLE        76040021
CURNTRY  EQU   8                       INDEX FOR CURRENT # OF ENTRIES   76120021
FLG2     EQU   9                       SECOND FLAG                      76200021
*********************************************************************   76280021
*                                                                    *  76360021
*        MASKS IN ALLOCATION TABLE                                   *  76440021
*MASKS FOR FLG1                                                         76520021
OVLY     EQU   X'80'                   TABLE USED FOR OVERLAY ONLY      76600021
FRSTPS   EQU   X'40'                   TABLE USED IN 1ST PASS           76680021
*INTRPS  EQU   X'20'                   TABLE USED IN INTERMEDIATE PASS  76760021
*ABOVE SYMBOL DEFINED IN APT                                            76840021
*SCDPS   EQU   X'10'                   TABLE USED IN SECOND PASS        76920021
*ABOVE SYMBOL DEFINED IN APT                                            77000021
ENDMOVE  EQU   X'08'                   NO MORE MOVING NEEDED            77080021
MOVETBL  EQU   X'04'                   TABLE IS TO BE MOVED             77160021
CUTOFF   EQU   X'02'                   THERE IS A LIMIT TO THE SIZE     77240021
ZERONTRY EQU   X'01'                   THERE IS A PREFIX                77320021
*MASKS FOR FLAG2                                                        77400021
NOMOVE   EQU   X'80'                   TABLE NOT TO BE MOVED            77480021
HESDD    EQU   X'40'                   HESD ENTRY IN ALLOCATION TBL     77560021
HIARSW   EQU   X'20'                   HIERARCHY TABLE                  77640021
*******************************************************************     77720021
*******************************************************************     77800021
ALOCTABL EQU   *                                                        77880021
*******************************************************************     77960021
*              RLD INPUT BUFFER 1ST PASS                         S01904 78040021
*******************************************************************     78120021
ALRLD1   DC    X'48'                                             S01904 78200021
         DC    AL1(RLDINPAD-CSNO)                                S01904 78280021
         DC    AL1(CSNO-CSNO)                                    S01904 78360021
         DC    X'01'                                             S01904 78440021
         DC    AL2(WT1)                                          S01904 78520000
         DC    AL2(MIN1)                                         S01904 78600000
         DC    AL1(CSNO-CSNO)                                    S01904 78680021
         DC    X'00'                                             S01904 78760021
*******************************************************************     78840021
*              ALIAS TABLE ENTRY                                 S01904 78920021
*******************************************************************     79000021
ALALIAS  DC    X'38'                                             S01904 79080021
         DC    AL1(ALAS-CSNO)                                    S01904 79160021
         DC    AL1(BUFSIZ-CSNO)                                  S01904 79240021
         DC    X'01'                                             S01904 79320021
         DC    AL2(WT2)                                          S01904 79400000
         DC    AL2(MIN2)                                         S01904 79480000
         DC    AL1(CSNO-CSNO)                                    S01904 79560021
         DC    X'00'                                             S01904 79640021
*******************************************************************     79720021
*              CESD TABLE ENTRY                                  S01904 79800021
*******************************************************************     79880021
ALCESD   DC    X'49'                                             S01904 79960021
         DC    AL1(CHESD-CSNO)                                   S01904 80040021
         DC    AL1(ENCDX-CSNO)                                   S01904 80120021
         DC    X'10'                                             S01904 80200021
         DC    AL2(WT3)                                         S01904  80280000
         DC    AL2(MIN3)                                         S01904 80360000
         DC    AL1(ENCDC-CSNO)                                   S01904 80440021
         DC    X'00'                                             S01904 80520021
*******************************************************************     80600021
*              HESD TABLE ENTRY                                  S01904 80680021
*******************************************************************     80760021
ALHESDP  DC    X'38'                                             S01904 80840021
         DC    AL1(HESD-CSNO)                                    S01904 80920021
         DC    AL1(CSNO-CSNO)                                    S01904 81000021
         DC    X'01'                                             S01904 81080021
         DC    AL2(WT4)                                         S01904  81160000
         DC    AL2(MIN4)                                         S01904 81240000
         DC    AL1(CSNO-CSNO)                                    S01904 81320021
         DC    X'00'                                             S01904 81400021
ALHESD   DC    X'38'                                             S01904 81480021
         DC    AL1(CSNO-CSNO)                                    S01904 81560021
         DC    AL1(ENCDX-CSNO)                                   S01904 81640021
         DC    X'08'                                             S01904 81720021
         DC    AL2(WT5)                                        S01904   81800000
         DC    AL2(MIN5)                                         S01904 81880000
         DC    AL1(ENCDC-CSNO)                                   S01904 81960021
         DC    X'00'                                             S01904 82040021
*******************************************************************     82120021
*              TEXT NOTE LIST 2 ENTRY                            S01904 82200021
*******************************************************************     82280021
ALTNL2   DC    X'32'                                             S01904 82360021
         DC    AL1(TNLS2-CSNO)                                   S01904 82440021
         DC    AL1(ENT2X-CSNO)                                   S01904 82520021
         DC    X'07'                                             S01904 82600021
         DC    AL2(WT6)                                         S01904  82680000
         DC    AL2(MIN6)                                         S01904 82760000
         DC    AL1(ENT2C-CSNO)                                   S01904 82840021
         DC    X'00'                                             S01904 82920021
*******************************************************************     83000021
*              RLD NOTE LIST 2 ENTRY                             S01904 83080021
*******************************************************************     83160021
ALRNL2   DC    X'32'                                             S01904 83240021
         DC    AL1(RNLS2-CSNO)                                   S01904 83320021
         DC    AL1(ENR2X-CSNO)                                   S01904 83400021
         DC    X'09'                                             S01904 83480021
         DC    AL2(WT7)                                         S01904  83560000
         DC    AL2(MIN7)                                         S01904 83640000
         DC    AL1(ENR2C-CSNO)                                   S01904 83720021
         DC    X'00'                                             S01904 83800021
*******************************************************************     83880021
*              TEXT IO TABLE ENTRY                               S01904 83960021
*******************************************************************     84040021
ALTXTIO  DC    X'70'                                             S01904 84120021
         DC    AL1(TXTIO-CSNO)                                   S01904 84200021
         DC    AL1(ENTOX-CSNO)                                   S01904 84280021
         DC    X'01'                                             S01904 84360021
         DC    AL2(WT8)                                         S01904  84440000
         DC    AL2(MIN8)                                         S01904 84520000
         DC    AL1(ENTOC-CSNO)                                   S01904 84600021
         DC    X'00'                                             S01904 84680021
*******************************************************************     84760021
*              RENUMBERING TABLE/RELOC CONSTANT TABLE            S01904 84840021
*******************************************************************     84920021
ALRNTRLC DC    X'71'                                             S01904 85000021
         DC    AL1(RECNT-CSNO)                                   S01904 85080021
         DC    AL1(ENRNX-CSNO)                                  OX02397 85160003
         DC    X'04'                                             S01904 85240021
         DC    AL2(WT9)                                          S01904 85320002
         DC    AL2(MIN9)                                         S01904 85400000
         DC    AL1(ENRNC-CSNO)                                  OX02397 85480003
         DC    X'00'                                             S01904 85560021
*******************************************************************     85640021
*              DELINK TABLE ENTRY                                S01904 85720021
*******************************************************************     85800021
ALDELINK DC    X'71'                                             S01904 85880021
         DC    AL1(DLKT-CSNO)                                    S01904 85960021
         DC    AL1(ENDTX-CSNO)                                   S01904 86040021
         DC    X'05'                                             S01904 86120021
         DC    AL2(WT10)                                         S01904 86200000
         DC    AL2(MIN10)                                        S01904 86280000
         DC    AL1(ENDTC-CSNO)                                   S01904 86360021
         DC    X'00'                                             S01904 86440021
*******************************************************************     86520021
*              RLD OUTPUT BUFFER 2ND PASS                        S01904 86600021
*******************************************************************     86680021
ALRLD2   DC    X'10'                                             S01904 86760021
         DC    AL1(RLDOUTBF-CSNO)                                S01904 86840021
         DC    AL1(CSNO-CSNO)                                    S01904 86920021
         DC    X'01'                                             S01904 87000021
         DC    AL2(WT11)                                        S01904  87080000
         DC    AL2(MIN11)                                        S01904 87160000
         DC    AL1(ENRLD2X-CSNO)                                 S01904 87240021
         DC    X'80'                                             S01904 87320021
*******************************************************************     87400021
*              TEXT NOTE LIST 1                                  S01904 87480021
*******************************************************************     87560021
ALTNL1   DC    X'62'                                             S01904 87640021
         DC    AL1(TNT1-CSNO)                                    S01904 87720021
         DC    AL1(ENT1X-CSNO)                                   S01904 87800021
         DC    X'07'                                             S01904 87880021
         DC    AL2(WT12)                                        S01904  87960000
         DC    AL2(MIN12)                                        S01904 88040000
         DC    AL1(ENT1C-CSNO)                                   S01904 88120021
         DC    X'00'                                             S01904 88200021
*******************************************************************     88280021
*              RLD NOTE LIST 1                                   S01904 88360021
*******************************************************************     88440021
ALRNL1   DC    X'62'                                             S01904 88520021
         DC    AL1(RNT1-CSNO)                                    S01904 88600021
         DC    AL1(ENR1X-CSNO)                                   S01904 88680021
         DC    X'09'                                             S01904 88760021
         DC    AL2(WT13)                                        S01904  88840000
         DC    AL2(MIN13)                                        S01904 88920000
         DC    AL1(ENR1C-CSNO)                                   S01904 89000021
         DC    X'00'                                             S01904 89080021
*******************************************************************     89160021
*              ORDER TABLE ENTRY                                 S01904 89240021
*******************************************************************     89320021
ALORDER  DC    X'60'                                             S01904 89400021
         DC    AL1(ORDRADR-CSNO)                                 S01904 89480021
         DC    AL1(ORDRMAX-CSNO)                                 S01904 89560021
         DC    X'01'                                             S01904 89640021
         DC    AL2(WT14)                                        S01904  89720000
         DC    AL2(MIN14)                                        S01904 89800000
         DC    AL1(ORDRCUR-CSNO)                                 S01904 89880021
         DC    X'00'                                             S01904 89960021
*******************************************************************     90040021
*              HIERARCHY TABLE ENTRY                             S01904 90120021
*******************************************************************     90200021
ALHIAR   DC    X'61'                                             S01904 90280021
         DC    AL1(HIARADD-CSNO)                                 S01904 90360021
         DC    AL1(CSNO-CSNO)                                    S01904 90440021
         DC    X'01'                                             S01904 90520021
         DC    AL2(WT15)                                        S01904  90600000
         DC    AL2(MIN15)                                        S01904 90680000
         DC    AL1(ENCDC-CSNO)                                   S01904 90760021
         DC    X'20'                                             S01904 90840021
*******************************************************************     90920021
*              SEGMENT TABLE ENTRY                               S01904 91000021
*******************************************************************     91080021
ALSEG    DC    X'F1'                                             S01904 91160021
         DC    AL1(SGT1-CSNO)                                    S01904 91240021
         DC    AL1(ENS1X-CSNO)                                   S01904 91320021
         DC    X'01'                                             S01904 91400021
         DC    AL2(WT16)                                        S01904  91480000
         DC    AL2(MIN16)                                        S01904 91560000
         DC    AL1(ENS1X-CSNO)                                   S01904 91640021
         DC    X'00'                                             S01904 91720021
*******************************************************************     91800021
*              CALLS LIST ENTRY                                  S01904 91880021
*******************************************************************     91960021
ALCALL   DC    X'E0'                                             S01904 92040021
         DC    AL1(CLLT-CSNO)                                    S01904 92120021
         DC    AL1(ENCLX-CSNO)                                   S01904 92200021
         DC    X'01'                                             S01904 92280021
         DC    AL2(WT17)                                        S01904  92360000
         DC    AL2(MIN17)                                        S01904 92440000
         DC    AL1(ENCLC-CSNO)                                   S01904 92520021
         DC    X'00'                                             S01904 92600021
*******************************************************************     92680021
*              ENTRY LIST ENTRY                                  S01904 92760021
*******************************************************************     92840021
ALENT    DC    X'90'                                             S01904 92920021
         DC    AL1(SELST-CSNO)                                   S01904 93000021
         DC    AL1(ENELTX-CSNO)                                  S01904 93080021
         DC    X'06'                                             S01904 93160021
         DC    AL2(WT18)                                        S01904  93240000
         DC    AL2(MIN18)                                        S01904 93320000
         DC    AL1(ENELTC-CSNO)                                  S01904 93400021
         DC    X'00'                                             S01904 93480021
*******************************************************************     93560021
*               IDR TRANSLATOR DATA TABLE ENTRY                         93640021
*******************************************************************     93720021
ALIDRTR   DC    X'60'                                                   93800021
          DC    AL1(IDRTRTAB-CSNO)                                      93880021
          DC    AL1(IDRTRLEN-CSNO)                                      93960021
          DC    X'01'                                           OX04245 94040002
          DC    AL2(WT19)                                               94120000
          DC    AL2(MIN19)                                              94200000
          DC    AL1(IDRTRCUR-CSNO)                                      94280021
          DC    X'00'                                                   94360021
*******************************************************************     94410002
*         IDR TRANSLATOR ID TABLE ENTRY                         OX04245 94412002
*******************************************************************     94420002
ALIDRTI  DC    X'60'                                            OX04245 94430002
         DC    AL1(IDRTITAB-CSNO)                               OX04245 94432002
         DC    AL1(IDRTILEN-CSNO)                               OX04245 94434002
         DC    X'01'                                            OX04245 94436002
         DC    AL2(WT22)                                        OX04245 94438002
         DC    AL2(MIN22)                                       OX04245 94438402
         DC    AL1(IDRTICUR-CSNO)                               OX04245 94438802
         DC    X'00'                                            OX04245 94439202
*******************************************************************     94440021
*               IDR USER DATA TABLE ENTRY                               94520021
*******************************************************************     94600021
ALIDRUD   DC    X'60'                                                   94680021
          DC    AL1(IDRUDTAB-CSNO)                                      94760021
          DC    AL1(IDRUDLEN-CSNO)                                      94840021
          DC    X'01'                                                   94920021
          DC    AL2(WT20)                                               95000000
          DC    AL2(MIN20)                                              95080000
          DC    AL1(IDRUDCUR-CSNO)                                      95160021
          DC    X'00'                                                   95240021
*******************************************************************     95320021
*               IDR ZAP DATA TABLE ENTRY                                95400021
*******************************************************************     95480021
ALIDRZP   DC    X'60'                                                   95560021
          DC    AL1(IDRZPTAB-CSNO)                                      95640021
          DC    AL1(IDRZPLEN-CSNO)                                      95720021
          DC    X'01'                                                   95800021
          DC    AL2(WT21)                                               95880000
          DC    AL2(MIN21)                                              95960000
          DC    AL1(IDRZPCUR-CSNO)                                      96040021
          DC    X'00'                                                   96120021
ALEND    DC    X'FF'                                             S01904 96200021
         SPACE 3                                                        96280021
TMPADRSV DS    14F             TABLE ADDRESS SAVE AREA           S01904 96360021
MOVESV   DC    XL256'0'        DATA MOVEMENT AREA                S01904 96440021
********************************************                            96450037
*        PATCH AREA                        *                            96460037
********************************************                            96470037
PATCH    DC    20F'0',C'PATCH AREA ' FOR PROG MAINT                     96480037
SCNDS    DSECT                         FOR VALID CHAR SCAN       A37667 96490002
THIS     DS    CL1                     POINTS TO PRESENT CHAR    A37667 96500002
NEXT     DS    CL1                     POINTS TO NEXT CHAR       A37667 96510002
         DS    CL5                                               A37667 96512002
LAST     DS    CL1                     ENDING ADDR               A37667 96514002
         TITLE 'DCB MAP'                                                96516002
         DCBD  DSORG=(PS,PO)                                            96520021
         HEWAPT                                                         96600021
HEWLEDE1 EQU   SPACES+32                                                96680021
         END                                                            96760021
./  ADD  SSI=73270013,NAME=HEWLFSCD
 TITLE 'HEWLFSCD - SECOND PASS CONTROL AND I/O'                         00020021
*********************************************************************** 00080021
*STATUS:  CHANGE LEVEL 0                                              * 00100021
*FUNCTION/OPERATION:                                                  * 00120021
*        1) READS TEXT AND RLD RECORDS FROM THE INTERMEDIATE FILE IF  * 00140021
*              RECORDS ARE NOT ALREADY IN CORE                        * 00160021
*        2) RELOCATES ALL ADDRESS CONSTANTS IN THE TEXT RECORDS       * 00180021
*        3) CREATES AND WRITES RLD/CONTROL AND TEXT RECORDS IN A      * 00200021
*              FORMAT ACCEPTABLE TO PROGRAM FETCH                     * 00220021
*        4) CREATES ENTAB AND TTR LIST,WHEN OVERLAY IS SPECIFIED      * 00240021
*        THE SECOND PASS PROCESSOR(HEWLFSCD AND HEWLFREL) OPERATES IN * 00260021
*AN OVERLAP ENVIRONMENT.   READS, WHEN NEEDED FROM SYSUT1, ARE OVER-  * 00280021
*LAPPED WITH WRITES ON SYSLMOD.  I/O OPERATIONS ARE ALSO OVERLAPPED   * 00300021
*WITH PROCESSING OF RLDS.                                             * 00320021
*        IN ORDER TO HAVE AN EFFECTIVE AND EFFICIENT OVERLAP SYSTEM,  * 00340021
*INFORMATION ABOUT EACH UNIT OF TEXT MUST BE RETAINED UNTIL THAT TEXT * 00360021
*IS PROCESSED AND WRITTEN OUT.  THIS INFORMATION IS MAINTAINED IN     * 00380021
*CONTROL BLOCKS.  BY RETAINING THIS INFORMATION IN CONTROL BLOCKS,    * 00400021
*NEEDLESS SEARCHING OF TABLES IS AVOIDED AND UNCHECKED READ AND WRITES* 00420021
*CAN BE CONTROLLED.                                                   * 00440021
*        TWO TEXT CONTROL BLOCKS ARE MAINTAINED --- ONE FOR THE       * 00460021
*CURRENT TEXT BEING PROCESSED AND ONE FOR THE NEXT TEXT TO BE         * 00480021
*PROCESSED.  THIS SECOND CONTROL BLOCK IS ALSO USED TO RETAIN INFOR-  * 00500021
*MATION ABOUT AN UNCHECKED WRITE OF TEXT UNTIL ANOTHER WRITE IS ISSUED* 00520021
*OR THE TEXT CONTROL BLOCK IS NEEDED FOR A LOOK-AHEAD READ.           * 00540021
*        CONTROL BLOCKS EXIST ALSO FOR EACH RLD BUFFER.  THE RLD INPUT* 00560021
*BUFFERS ARE MAINTAINED AS TWO DISTINCT BUFFERS CONTROLLED BY TWO     * 00580021
*CONTROL BLOCKS.  BY MAINTAINING THE RLD NOTELIST ENTRY ADDRESSES,    * 00600021
*EACH RLD SET CAN BE ADDRESSED DIRECTLY WHEN NEEDED,THUS ELIMINATING  * 00620021
*NEEDLESS SCANNING OF ALL RLDS IN THE BUFFER.  THIS ALSO ELIMINATES   * 00640021
*REDUNDANT SCANS OF THE RLD NOTELIST.  CONTROL BLOCKS ARE ASSOCIATED  * 00660021
*WITH EACH OF THE RLD OUTPUT BUFFERS, WHICH ALLOWS CONTROL OF ALL     * 00680021
*THREE BUFFERS AT ONE TIME.  THE RLD BUFFERS, IN TURN, ARE ASSOCIATED * 00700021
*WITH THE CURRENT TEXT CONTROL BLOCK AS THEY ARE USED BY THE CURRENT  * 00720021
*TEXT.                                                                * 00740021
*                                                                     * 00760021
*        THE SECOND PASS BEGINS BY MAKING SURE THAT THERE IS TEXT     * 00780021
*READY TO PROCESS AND THAT THE NEXT TEXT TO BE PROCESSED IS IDENTIFIED* 00800021
*AND READ IF NECESSARY.  AN ID-LENGTH LIST ENTRY IS THEN MADE IN THE  * 00820021
*PREVIOUS CONTROL RECORD AND THE RECORD WRITTEN OUT IF THE CURRENT    * 00840021
*TEXT IS LAST IN THE GROUP AND THERE ARE RLDS FOR THE TEXT IN THE     * 00860021
*CURRENT GROUPING.  THIS ALLOWS OVERLAPPING OF THE CONTROL RECORD     * 00880021
*WRITE AND THE ACTUAL PROCESSING OF THE TEXT.  NEXT, ALL RLDS FOR THE * 00900021
*CURRENT TEXT ARE READ INTO CORE AND ASSOCIATED WITH THE TEXT THROUGH * 00920021
*THE TEXT CONTROL BLOCK. THE TEXT IS RELOCATED AND THE PROCESSED RLDS * 00940021
*MOVED TO THE OUTPUT BUFFERS.  IF THE PREVIOUS CONTROL RECORD HAS NOT * 00960021
*BEEN WRITTEN,  IT IS WRITTEN AT THIS TIME.  THE TEXT IS WRITTEN AND  * 00980021
*ALL RLD RECORDS EXCEPT ONE ARE WRITTEN.  IF THE MODULE IS IN OVERLAY,* 01000021
*AN ENTAB IS CREATED AFTER EVERY SEGMENT REQUIRING ONE.  THE TEXT     * 01020021
*CONTROL BLOCKS ARE SWITCHED AND PROCESSING RESUMES ON THE NEXT TEXT. * 01040021
*WHEN THE LAST FOR THE LOAD MODULE HAS BEEN PROCESSED, CONTROL IS     * 01060021
*TRANSFERRED TO THE FINAL PROCESSOR.                                  * 01080021
*                                                                     * 01100021
*                                                                     * 01120021
*ENTRY POINTS:                                                        * 01140021
*       -HEWLFSCD FROM HEWLFOUT                                       * 01160021
*       -WRTTXT FROM HEWLFREL TO WRITE A TEXT RECORD                  * 01180021
*       -WRTCRRLD FROM HEWLFREL TO WRITE A CR/RLD RECORD              * 01200021
*       -CHECKRD FROM HEWLFREL TO CHECK A READ                        * 01220021
*       -CHECKWRT FROM HEWLFREL TO CHECK A WRITE                      * 01240021
*       -GETIDMUL FROM HEWLFREL TO GET NEXT TEXT TO PROCESS           * 01260021
*                                                                     * 01280021
*INPUT: 1) TEXT AND RLDS RECORDS (SEE HEWLFRAT)                       * 01300021
*       2) TEXT I/O TABLE AND TEXT NOTELIST (SEE HEWLFRAT)            * 01320021
*       3) RLD NOTELIST (SEE HEWLFRAT)                                * 01340021
*       4) HESD TABLE (SEE HEWLFOUT)                                  * 01360021
*       5) DELINK TABLE (SEE HEWLFRAT)                                * 01380021
*       6) RELOCATION CONSTANT TABLE (SEE HEWLFADA)                   * 01400021
*       7) SEGTAB1 TABLE (SEE HEWLFADA)                               * 01420021
*       8) REGISTER 1 -ADDRESS OF 1ST HESD ENTAB ENTRY                * 01440021
*OUTPUT: RLD/CONTROL AND TEXT RECORDS IN LOAD MODULE FORMAT ACCEPTABLE* 01460021
*              TO PROGRAM FETCH. THE CONTROL INFORMATION INCLUDES     * 01480021
*              THE FOLLOWING:                                         * 01500021
*        BYTE 0 CONTAINS CONTROL INDICATORS                           * 01520021
*              X'01' A TEXT RECORD FOLLOWS THIS CONTROL RECORD        * 01540021
*              X'02' THIS CONTROL RECORD CONTAINS RLDS ONLY           * 01560021
*              X'03' THIS CONTROL RECORD CONTAINS RLDS AND A TEXT     * 01580021
*                   RECORD FOLLOWS                                    * 01600021
*              X'05' THIS IS THE LAST CONTROL RECORD FOR THIS SEGMENT,* 01620021
*                   NO RLDS ARE PRESENT AND A TEXT RECORD FOLLOWS     * 01640021
*              X'06' THIS IS THE LAST CONTROL RECORD FOR THE SEGMENT, * 01660021
*                   NO TEXT FOLLOWS AND RLDS ARE PRESENT IN THE RECORD* 01680021
*              X'07' THIS IS THE LAST CONTROL RECORD FOR THE SEGMENT, * 01700021
*                   RLDS ARE PRESENT ANT TEXT FOLLOWS                 * 01720021
*              X'0D' THIS IS THE LAST CONTROL RECORD FOR THIS SEGMENT * 01740021
*                   AND LOAD MODULE, NO RLDS ARE PRESENT AND A TEXT   * 01760021
*                   RECORD FOLLOWS                                    * 01780021
*              X'0E' THIS IS THE LAST CONTROL RECORD FOR THIS SEGMENT * 01800021
*                   AND LOAD MODULE, RLDS ARE PRESENT BUT NO TEXT     * 01820021
*                   RECORD FOLLOWS                                    * 01840021
*              X'0F' THIS IS THE LAST CONTROL RECORD FOR THIS SEGMENT * 01860021
*                   AND LOAD MODULE, RLDS ARE PRESENT AND TEXT FOLLOWS* 01880021
*        BYTES 1 THRU 3 CONTAIN ZEROS                                 * 01900021
*        BYTES 4 AND 5 CONTAIN THE NUMBER OF BYTES OF ID-LENGTH IN    * 01920021
*              THIS CONTROL RECORD.  FOR CONTROL INDICATORS 02,06,AND * 01940021
*              0E THIS WILL BE ZERO                                   * 01960021
*        BYTES 6 AND 7 CONTAIN THE NUMBER OF BYTES OF RLD INFORMATION * 01980021
*              IN THE CONTROL RECORD                                  * 02000021
*        BYTES 8 THRU 11 CONTAIN THE READ BITS AND THE LINKAGE EDITOR * 02020021
*              ASSIGNED ADDRESS OF THE TEXT WHICH FOLLOWS             * 02040021
*        BYTES 12 THRU 15  CONTAIN THE FLAGS AND THE LENGTH OF THE    * 02060021
*              TEXT RECORD THAT FOLLOWS                               * 02080021
*        FOR CONTROL INDICATORS  02,06 AND 0E, BYTES 8 THRU 15 WILL BE* 02100021
*              ZERO. THE TEXT RECORDS WILL CONTAIN THE NUMBER OF BYTES* 02120021
*              OF TEXT INDICATED IN THE CONTROL RECORD WHICH PRECEDES * 02140021
*              IT.                                                    * 02160021
*                                                                     * 02180021
*EXTERNAL ROUTINES:                                                   * 02200021
*        HEWLFREL- AT HEWLFREL FOR INITIALIZATION                     * 02220021
*                - AT RELOCATE FOR RELOCATION                         * 02240021
*                - AT SCDENTAB TO CREATE AN ENTAB AND ITS RLDS        * 02260021
*        HEWLCR03- ERROR ROUTINE FOR SYNCHRONOUS ERRORS ON XDAP WRITE * 02280021
*                                                                     * 02300021
*EXITS: NORMAL- TO HEWLFFNL       L  15,ADFINAL                       * 02320021
*                                 BR 15                               * 02340021
*       ERROR-  NONE                                                  * 02360021
*                                                                     * 02380021
*TABLES/WORK AREAS: - REFER TO LINKAGE EDITOR PLM FOR DETAILED        * 02400021
*        DESCRIPTIONS                                                 * 02420021
*        1) ALL PURPOSE TABLE                                         * 02440021
*        2) HESD                                                      * 02460021
*        3) DELINK TABLE                                              * 02480021
*        4) TEXT I/O TABLE                                            * 02500021
*        5) TEXT NOTELIST                                             * 02520021
*        6) RLD NOTELIST                                              * 02540021
*        7) TTR LIST                                                  * 02560021
*        8) TEXT CONTROL BLOCKS(SEE HEWLFREL FOR BLOCK DESCRIPTIONS)  * 02580021
*        9) RLD CONTROL BLOCKS(SEE HEWLFREL)                          * 02600021
*                                                                     * 02620021
*ATTRIBUTES: REUSABLE                                                 * 02640021
*                                                                     * 02660021
*NOTES: THE SECOND PASS IN DETERMINING THE NUMBER OF BYTES READ, USES * 02680021
*        THE RESIDUAL BYTE COUNT IN THE CCW OF THE IOB USED BY BSAM TO* 02700021
*        PERFORM THE READ. TO ACCESS THIS COUNT REQUIRES KNOWLEDGE OF * 02720021
*        THE IOB ADDRESS IN THE DECB USED IN ISSUING THE READ AND     * 02740021
*        THE FORMAT OF THE IOB. IF EITHER OF THESE FORMATS ( IOB  OR  * 02760021
*        DECB ) CHANGE THIS PART OF THE CODE IN THE READ TEXT ROUTINE * 02780021
*        MUST BE CHECKED FOR ACCURACY. ANY CHANGE IN CCW FORMAT WILL  * 02800021
*        ALL AFFECT FORMATTING OF CONTROL RECORDS.                    * 02820021
*********************************************************************** 02840021
HEWLFSCD CSECT                                                          02860021
**********************************************************************  02880021
*071200-071800,212200-216400,218800-223600,551200-560800         S01904 02900021
*I084400,I396400                                        OX03510,OY03043 02902002
*I212200,D213400-214000,I572200                           OX4565,OY3055 02902402
*C654400,I671800,I678400                                        XA05128 02902803
* SEE FIX FOR XA05128                                           YA03165 02903203
*I678920                                                        XM09099 02903603
*A678992                                                        XM19517 02903703
*C670000                                                        ZA01410 02903802
*A05200,A679319-679395,A887100                                  ZA02253 02903937
* SEE FIX FOR ZA02253                                                   02907937
*A566700,A5686120-686190                                        OZ04724 02909937
*SEE FIX FOR OY09071                                                    02911937
*A686100-A686800,A614200 (SEE FIX FOR OZ06707)                  OZ06707 02925537
*C685700,685840,686100-REMOVE PTFUZ11354              @XA16348,@ZA17503 02931537
**********************************************************************  02939237
*                                                                       02952837
****  OUTPUT RLD CONTROL BLOCK INDICATORS                               02966437
LASTUSED EQU   X'20'                   LAST RLD BUFFER FILLED           02980021
LASTOFF  EQU   X'DF'                                                    03040021
***        TEXT CONTROL BLOCK                                       *** 03100021
*                         BYTE 1                                      * 03160021
USED     EQU   X'E0'                    TXT CTRL. BLOCK IN USE          03220021
INUSE    EQU   X'80'                    CONTROL BLOCK IN USE            03280021
NOTINUSE EQU   X'7F'                                                    03340021
BEINGWT  EQU   X'40'                    TEXT BEING WRITTEN              03400021
WRTCKD   EQU   X'3F'                    WRITE CHECKED - CB NOT IN USE   03460021
BEINGRD  EQU   X'20'                    TEXT BEING READ                 03520021
RDCHKD   EQU   X'DF'                    READ CHECKED                    03580021
RLDS     EQU   X'10'                                                    03640021
FIRSTXT  EQU   X'08'                    TEXT FIRST IN GROUP             03700021
ENDINDIC EQU   X'06'                   END OF GROUP AND SEG             03760021
LASTXT   EQU   X'04'                    TEXT LAST IN GROUP              03820021
SEGMTEND EQU   X'02'                    TEXT IS LAST IN SEGMENT         03880021
MODULEND EQU   X'01'                    TEXT IS LAST IN MODULE          03940021
*                     BYTE 2                                          * 04000021
XDAP     EQU   X'80'                    XDAP WRITE NEEDED               04060021
PREV     EQU   X'07'                    TEST IF PREV CR/RLD WRITTEN     04120021
BUF1PREV EQU   X'24'                    BFR.1 HAS ID-LENGTH LIST        04180021
BUF2PREV EQU   X'12'                    BFR.2 HAS ID-LENGTH LIST        04240021
BUF3PREV EQU   X'09'                    BFR.3 HAS ID-LENGTH LIST        04300021
OUTBUF1  EQU   X'20'                    OUTPUT BFR.1 IS BEING USED      04360021
BUF1OFF  EQU   X'DF'                                                    04420021
OUTBUF2  EQU   X'10'                                                    04480021
BUF2OFF  EQU   X'EF'                                                    04540021
OUTBUF3  EQU   X'08'                                                    04600021
BUF3OFF  EQU   X'F7'                                                    04660021
*                           BYTE  3                                   * 04720021
MORETXT  EQU   X'08'                   MORE TEXT TO PROCESS IN SEGMENT  04780021
TEXTOFF  EQU   X'F7'                                                    04840021
***         TEXT  I/O TABLE  INDICATORS                             *** 04900021
INCORE   EQU   X'80'                    TEXT IN CORE                    04960021
TTRENTRY EQU   X'40'                    ENTRY CONTAINS TTR              05020021
OUTORDER EQU   X'20'                    TEXT IS OUT-OF-ORDER            05080021
TEXTDONE EQU   X'10'                    TEXT IS PROCESSED               05140021
*                                             INCORRECT LENGTH          05200021
DCLGTH   EQU   X'04'                   LENGTH TEST FOR DC       ZA02253 05250037
***      RLD  NOTELIST INDICATORS                                   *** 05260021
*INCORE  EQU   X'80'                    RLDS IN CORE                    05320021
*TTRENTRY EQU  X'40'                   TTR ENTRY                        05380021
BUF2     EQU   X'10'                    RLDS IN BFR2                    05440021
*              CONTROL RECORD INDICATORS                              * 05500021
MODEND   EQU   X'08'                    LAST TXT FOR LOAD MODULE        05560021
SEGEND   EQU   X'04'                    LAST TXT FOR SEGMENT            05620021
RLD      EQU   X'02'                    RLDS PRESENT IN RECORD          05680021
RLDOFF   EQU   X'FD'                                                    05740021
TXT      EQU   X'01'                    TEXT FOLLOWS                    05800021
*                                                                     * 05860021
*                   NEWSW2 INDICATORS IN APT                          * 05920021
MORERLDS EQU   X'80'                    MORE RLDS STILL TO BE READ      05980021
MOREOFF  EQU   X'7F'                                                    06040021
SPLTMOVD EQU   X'40'                    SPLIT RLD MOVED TO OUTPUT BFR.  06100021
MOVDOFF    EQU   X'BF'                                                  06160021
SPLITRLD EQU   X'08'                    SPLIT RLD SAVED IN HESD         06220021
SPLITOFF EQU   X'F7'                                                    06280021
NOCTLREC EQU   X'04'                   NO RLDS FOR PRECEDING TEXT       06340021
NOCROFF  EQU   X'FB'                                                    06400021
GROUPOFF EQU   X'FD'                   RLDS ARE NOT TO BE GROUPED       06460021
*        APT3  SWITCH INDICATORS                                      * 06520021
*FIRSTXT EQU   X'08'                    FIRST TEXT OF LOAD MODULE       06580021
SEGSTART EQU   X'04'                    TEXT  IS FIRST IN SEGMENT       06640021
SEGOFF   EQU   X'FB'                                                    06700021
RLDSINGP EQU   X'02'                   RLDS IN GROUP                    06760021
RLDSOFF  EQU   X'FD'                                                    06820021
SCTR     EQU   X'04'                    SCATTER OPTION ON               06880021
DC       EQU   X'80'                    DC OPTION ON                    06940021
OVLY     EQU   X'20'                    OVERLAY OPTION                  07000021
LKAZERO  EQU   X'BF'                    LKA IS NOT ZERO                 07060021
SIX10    EQU   16                                                S01904 07120021
TWTY     EQU   20                                                S01904 07180021
*                                                                     * 07240021
*                        REGISTER USAGE                               * 07300021
*                                                                     * 07360021
SAVEAREA EQU   13                  SAVE AREA                            07420021
RETURN   EQU   14                  NSI REGISTER FOR BALR                07480021
BRANCH   EQU   15                  FIRST LEVEL BRANCH REGISTER          07540021
WORK0    EQU   0                   GENERAL WORK REGISTER                07600021
PARM     EQU   1                   PARM.REG. AND WORK REG.              07660021
APT      EQU   2                   BASE REGISTER FOR APT                07720021
CURTXTCB EQU   3                   ADDRESS OF CURRENT TXT CONTROL BLOCK 07780021
NXTTXTCB EQU   4                   ADDRESS OF NEXT TEXT CONTROL BLOCK   07840021
WORK1    EQU   5                   WORK REGISTER                        07900021
WORK2    EQU   6                   WORK REGISTER                        07960021
WORK3    EQU   7                   WORK REGISTER                        08020021
PREVCREC EQU   8                   ADDRESS OF RLD CONTROL BLOCK FOR     08080021
*                                         PREVIOUS  CR/RLD RECORD       08140021
WORK8    EQU   8                       GENERAL WORK REGISTER-GETIDMUL   08200021
WORK9    EQU   9                       GENERAL WORK REGISTER            08260021
BASE2    EQU   10                                                       08320021
BRANCHX  EQU   11                  SECOND LEVEL BRANCH REGISTER         08380021
BASE     EQU   12                  BASE REGISTER FOR SCD                08440021
REG0     EQU   0                       ERR MSG PARM REG OX03510,OY03043 08490002
REG14    EQU   14                      LINKAGE REG      OX03510,OY03043 08492002
REG15    EQU   15                      LINKAGE REG      OX03510,OY03043 08494002
         ENTRY GETIDMUL                 LOOKAHEAD/READAHEAD ROUTINE     08500021
         EXTRN HEWLCMDB                SYSLMOD DCB ADDRESS              08560021
         EXTRN HEWLCUDB                SYSUT1 DCB ADDRESS               08620021
         BALR  BASE,0                                                   08680021
         USING *,BASE                   BASE REGISTER FOR HEWLMSCD      08740021
         L     BASE2,ADSIO             PICK UP ADDR OF IEWLMSIO         08800021
         ST    BASE2,BASEREG           SAVE SIO BASE REG                08860021
         USING HEWLFSIO,BASE2           ESTABLISH ADDRILITY FOR SIO     08920021
         B     MODID+10                                                 08980021
MODID    DC    C'27MSCD'                                                09040021
BASEREG  DS    1F                      STORAGE FOR SIO BASE REG         09100021
         USING APTDSECT,APT             BASE REGISTER FOR APT           09160021
*                 INITIALIZATION MOVED TO HEWLFREL FOR SPACE          * 09220021
         L     BRANCH,ADREL                                             09280021
         BALR  RETURN,BRANCH           BRANCH TO MREL FOR INIT.         09340021
*                                                                     * 09400021
         L     BASE2,BASEREG           RESTORE SIO BASE REG             09460021
         MVC   FREEADDR(4),TXTBFBEG    INIT FIRST FREE ADDR IN BFR.     09520021
         MVC   CURSEG(2),ONE                                            09580021
         MVC   SRCHSEG(2),ONE          INITIALIZE SEG. NO. AND MULT.    09640021
         MVC   SRCHMULT(2),ZERO                                         09700021
*                                                                     * 09760021
*    THIS ROUTINE MAKES SURE THAT AN ID-MULT ARE READY TO PROCESS AND * 09820021
*        A LOOKAHEAD IS DONE FOR THE NEXT ID-MULT TO PROCESS          * 09880021
*                                                                     * 09940021
GETID    TM    0(CURTXTCB),USED         TEXT CTRL. BLK. IN USE          10000021
         BZ    GETID1                   NO                              10060021
         TM    0(CURTXTCB),BEINGWT      TEXT BEING WRITTEN              10120021
         BO    GETID2                   YES                             10180021
         TM    0(CURTXTCB),BEINGRD      TEXT BEING READ                 10240021
         BZ    GETID3                  ID-MULT IS READY TO PROCESS      10300021
         BAL   BRANCHX,CHECKRD          CHECK READ                      10360021
         NI    0(CURTXTCB),RDCHKD       MARK READ CHECKED               10420021
         B     GETID3                                                   10480021
GETID1   LR    PARM,CURTXTCB                                            10540021
         NI    0(CURTXTCB),X'00'       CLEAR FLAG BITS                  10600021
         NI    2(CURTXTCB),X'00'                                        10660021
         SR    WORK0,WORK0             INDIC PRIME READ                 10720021
         BAL   RETURN,GETIDMUL          BRANCH TO READY ID-MULT         10780021
         B     GETID                                                    10840021
GETID2   BAL   BRANCHX,CHECKWRT         CHECK WRITE                     10900021
         NI    0(CURTXTCB),WRTCKD       MARK WRITE CHECKED-CB FREE      10960021
         B     GETID                                                    11020021
GETID3   L     WORK1,12(CURTXTCB)                                       11080021
         MVC   CURID(2),0(WORK1)       GET CURR. ID                     11140021
         MVC   CURMULT(2),2(WORK1)     GET CURR MULT                    11200021
         NI    CURMULT,X'03'           CLEAR HIGH ORDER BITS            11260021
         TM    0(CURTXTCB),FIRSTXT     IS TEXT FIRST OF GROUP           11320021
         BZ    LOOKAHED                NO, BRANCH OUT                   11380021
         TM    APT3,SEGSTART           WORKING IN NEW SEGMENT           11440021
         BO    GETID3A                 YES, GO TO UPDATE SEG NO.        11500021
         CLC   CURSEG+1(1),SRCHSEG+1   CURR SAME AS SRCH?               11560021
         BE    LOOKAHED                YES, BRANCH OUT                  11620021
GETID3A  LH    WORK1,CURID             NO, UPDATE CURR. SEG.            11680021
         SLL   WORK1,3                                                  11740021
         A     WORK1,HESD                                               11800021
GETID3B  EQU   *                                                        11860021
         ST    WORK1,SAVESTOR          SAVE REG                         11920021
         LH    WORK1,CURSEG            PICK UP LAST SEG #               11980021
         LA    WORK1,ON1(WORK1)        ADD ONE TO SEG #                 12040021
         STH   WORK1,CURSEG            REPLACE OLD SEG #                12100021
         L     WORK1,SAVESTOR          RESTORE REG                      12160021
         CLC   CURSEG+ON1(ON1),FOR(WORK1)  COMPARE UPDATED SEG #        12220021
*                                      WITH NEXT SEG # FROM TIOT        12280021
         BE    SCDANDY                 BRANCH IF EQUAL                  12340021
         OI    SSWITCH+ON1,SEGNO       NOT EQUAL,ON SWITCH              12400021
SCDANDY  EQU   *                       CONTINUE                         12460021
*                                                                     * 12520021
********    UPDATE ENTRY LIST TO HAVE ONLY ONE PATH    ***************  12580021
*                                                                     * 12640021
         LH    WORK1,CURSEG                                             12700021
         L     WORK3,SELST             GET BEGINNING OF ENTRY LIST      12760021
         A     WORK1,SGT1              GET CURR. SEG ENTRY IN SEGTA1    12820021
ENTLST1  C     WORK3,CURENTRY          LOOKING AT THE CURRENT ENTRY     12880021
         BE    LOOKAHED                YES                              12940021
         CLC   2(1,WORK3),0(WORK1)     NO, ARE SEGMENTS IN SAVE PATH    13000021
         BH    ENTLST3                 NO                               13060021
*   SEE IF REGION OF SEGMENT IN ENTRY LIST IS SAME AS CURRENT REGION    13120021
*                                                                       13180021
         LA    WORK2,LSTS         LOAD ADD. OF REGION LIST              13240021
TEMP1    CLC   0(1,WORK2),CURSEG+1  IS CUR. SEG. IN THIS REG.           13300021
         BC    10,STORE           YES - STORE THIS REG.                 13360021
         LA    WORK2,1(WORK2)     INCREMENT LIST ADD.                   13420021
         B     TEMP1                                                    13480021
STORE    MVC   CURRGN(1),0(WORK2)  STORE CURR. REGION                   13540021
         LA    WORK2,LSTS         LOAD ADD. OF REGION LIST              13600021
TEMP2    CLC   0(1,WORK2),2(WORK3)  IS ENTRY LIST SEGMENT IN            13660021
*                                            THIS REGION                13720021
         BC    10,COMP            YES - BRANCH                          13780021
         LA    WORK2,1(WORK2)     INCREMENT LIST ADDRESS                13840021
         B     TEMP2                                                    13900021
COMP     CLC   0(1,WORK2),CURRGN  IS ENTRY LIST SEGMENT IN SAME         13960021
*                                 REGION AS CURRENT SEGMENT             14020021
         BC    7,ENTLST3          NO - DIFFERENT REGIONS                14080021
ENTLST2  LA    WORK3,6(WORK3)          YES, UPDATE TO NEXT ENTRY        14140021
         B     ENTLST1                                                  14200021
ENTLST3  CLI   2(WORK3),X'01'          KEEP ENTRY FOR ROOOT SEGMENT     14260021
         BE    ENTLST2                                                  14320021
         ST    WORK3,CURENTRY          1ST FREE ADDR IN ENTRY LIST      14380021
         S     WORK3,SELST             BYTES IN ENTRY LIST              14440021
         SR    WORK2,WORK2                                              14500021
         D     WORK2,SIX                                                14560021
         STH   WORK3,ENELTC            CUR NO OF ENTRIES IN ENTRY LIST  14620021
LOOKAHED TM    SSWITCH+ON1,SEGNO       IS NOT EQUAL SWITCH ON           14680021
         BZ    LOOKAHD2                NO SO BRANCH                     14740021
         NI    SSWITCH+ON1,SEGNOOFF    TURN SWITCH OFF                  14800021
         L     WORK1,SAVESTOR          RESTORE REG                      14860021
         B     GETID3B                 GET NEXT SEGNO                   14920021
LOOKAHD2 TM    ZRO(NXTTXTCB),USED      HAS NEXT ID-MULT BEEN READ       14980021
         BZ    LKAHED1                  NO                              15040021
         TM    0(NXTTXTCB),BEINGWT                                      15100021
         BZ    SPECTEST                YES                              15160021
         BAL   BRANCHX,CHECKWRT         CHECK WRITE                     15220021
         NI    0(NXTTXTCB),WRTCKD       MARK WRITE CHECKED              15280021
         B     LOOKAHED                                                 15340021
LKAHED1  LR    PARM,NXTTXTCB                                            15400021
         NI    0(NXTTXTCB),X'00'       CLEAR FLAG BITS                  15460021
         NI    2(NXTTXTCB),X'00'                                        15520021
         LA    WORK0,1                 INDIC LOOKAHEAD READ             15580021
         BAL   RETURN,GETIDMUL          BRANCH TO READY NEXT ID-MULT    15640021
*                                                                     * 15700021
*   SET END INDICATORS WHEN LAST MULTIPLICITY OF LAST CSECT OF SEGMENT* 15760021
*         OR MODULE IS A DS AREA                                      * 15820021
*                                                                    *  15880021
SPECTEST TM    0(NXTTXTCB),INUSE       IS CURR TEXT LAST OF SEGMENT     15940021
         BO    CONTREC                 NO                               16000021
         TM    2(CURTXTCB),MORETXT     IS THERE MORE TEXT IN SEG        16060021
         BZ    SPECT1                  NO                               16120021
         NI    2(CURTXTCB),TEXTOFF     TURN INDIC OFF                   16180021
         B     CONTREC                                                  16240021
SPECT1   LH    WORK1,CURID                                              16300021
         SLL   WORK1,3                                                  16360021
         A     WORK1,HESD                                               16420021
         TM    0(WORK1),X'40'          IS CURR CSECT MARKED LAST IN SEG 16480021
         BZ    CONTREC                 NO                               16540021
         OI    0(CURTXTCB),ENDINDIC    SET END INDICATORS               16600021
         XC    GROUPLNG(2),GROUPLNG    INIT GROUP CT. FOR NEXT SEG.     16660021
         CLC   CURSEG(2),ENSPC         IS CURR TEXT LAST OF MODULE      16720021
         BNE   CONTREC                 NO                               16780021
         OI    0(CURTXTCB),MODULEND    YES, SET END OF MODULE INDIC     16840021
*                                                                     * 16900021
*        MAKE ID-LENGTH LIST ENTRY IN PREVIOUS CONTROL RECORD         * 16960021
*                                                                     * 17020021
CONTREC  LA    BRANCHX,CCWADD           READY BRANCH REGISTER           17080021
         L     WORK3,8(PREVCREC)                                        17140021
         CLC   4(4,PREVCREC),12(PREVCREC) IS THIS LAST ENTRY            17200021
         BL    CONT30                  NO                               17260021
         TM    0(WORK3),RLD             MORE THAN 60 CSECTS GROUPED     17320021
         BO    CONT40                   NO                              17380021
         OI    0(CURTXTCB),LASTXT       YES,SET LAST TEXT OF GROUP      17440021
         TM    0(NXTTXTCB),USED         NEXT ID-MULT READ OR BEING WRT. 17500021
         BZ    CONT10                   NO                              17560021
         TM    0(NXTTXTCB),BEINGWT      MAYBE                           17620021
         BZ    CONT20                   YES                             17680021
CONT10   XC    GROUPLNG(2),GROUPLNG     ZERO GROUP LENGTH               17740021
         B     CONT30                                                   17800021
CONT20   MVC   26(2,NXTTXTCB),24(NXTTXTCB) CORRECT GROUP LENGTH         17860021
         OI    0(NXTTXTCB),FIRSTXT      SET 1ST TXT IN GROUP INDICATOR  17920021
         L     WORK2,8(NXTTXTCB)                                        17980021
         SH    WORK2,24(NXTTXTCB)                                       18040021
         ST    WORK2,4(NXTTXTCB)       UPDATE BE OF TEXT                18100021
         MVC   GROUPLNG(2),24(NXTTXTCB) UPDATE LNG FOR GROUPING         18160021
         ST    WORK2,PREVBEG           RESET TEXT BEG. ADDR             18220021
         MVC   29(3,NXTTXTCB),CCWDISP+1  RESET CCW ADDR                 18280021
CONT30   L     WORK2,4(PREVCREC)                                        18340021
         MVC   16(2,WORK2),CURID       MAKE ID-LENGTH LIST ENTRY        18400021
         MVC   18(2,WORK2),24(CURTXTCB)                                 18460021
         LA    WORK2,4(WORK2)                                           18520021
         ST    WORK2,4(PREVCREC)        UPDATE 1ST FREE ADDR FIELD      18580021
         LH    WORK2,2(PREVCREC)       UPDATE ID-LENGTH FIELD           18640021
         LA    WORK2,4(WORK2)                                           18700021
         STH   WORK2,2(PREVCREC)       UPDATE ID-LENGTH FIELD           18760021
         BR    BRANCHX                                                  18820021
CONT40   BAL   BRANCHX,CONT30           BRANCH-MAKE ID-LENGTH LST ENTRY 18880021
         MVC   CONTSAVE(16),0(WORK3)    SAVE CONTROL INFORMATION        18940021
         XC    0(16,WORK3),0(WORK3)     ZERO CONTROL INFORMATION        19000021
         OI    0(WORK3),RLD             SET RLD'S PRESENT               19060021
         MVC   6(2,WORK3),CONTSAVE+6    RESTORE RLD BYTE COUNT          19120021
         LR    PARM,PREVCREC                                            19180021
         BAL   RETURN,WRTCRRLD          WRITE AN RLD RECORD             19240021
         BAL   BRANCHX,CHECKWRT        CHECK WRITE                      19300021
         NI    0(PREVCREC),WRTCKD      MARK CHECKED                     19360021
         OI    0(PREVCREC),INUSE                                        19420021
         L     WORK3,8(PREVCREC)       BFR. BEG. ADDR.                  19480021
         MVC   0(16,WORK3),CONTSAVE                                     19540021
         NI    0(WORK3),RLDOFF          SET RLD PRESENT BIT OFF         19600021
         LH    WORK2,6(WORK3)           BYTES OF RLD INFORMATION        19660021
         XC    6(2,WORK3),6(WORK3)      ZERO RLD BYTE FIELD             19720021
         LA    WORK2,16(WORK3,WORK2)    BEGINNING OF ID-LENGTH LIST     19780021
         LH    WORK1,2(PREVCREC)        BYTES OF ID                     19840021
         BCTR  WORK1,0                                                  19900021
         EX    WORK1,MOVE              MOVE ID-LENGTH LIST              19960021
         LA    WORK1,1(WORK3,WORK1)                                     20020021
         ST    WORK1,4(PREVCREC)        UPDATE 1ST FREE ADDRESS         20080021
*                                                                     * 20140021
*     MOVE CCW DISPLACEMENT INFORMATION TO THE CONTROL RECORD         * 20200021
*                                                                     * 20260021
CCWADD   TM    0(CURTXTCB),FIRSTXT      TEXT 1ST IN GROUP               20320021
         BZ    RLDSCAN                  NO                              20380021
         MVC   8(4,WORK3),28(CURTXTCB) YES, PUT CCW DISP IN CR          20440021
         OI    0(WORK3),TXT             SET TXT PRESENT INDICATOR       20500021
         NI    APT3,RLDSOFF            SET RLDS FOR GROUP INDIC OFF     20560021
         TM    PDSE7,OVLY              IS PROGRAM IN OVLY               20620021
         BO    CCW0                    YES, ORIGIN OF SEGTAB =0         20680021
         TM    APT3,FIRSTXT            FIRST TXT OF LOAD MODULE         20740021
         BZ    CCW0                    NO                               20800021
         NC    29(3,CURTXTCB),29(CURTXTCB)  IS LKA OF 1ST TEXT =0       20860021
         BZ    CCW0                    YES                              20920021
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   20980021
*   SET UP AND WRITE OUT CONTROL RECORD FOR THE ONE BYTE OF TEXT    *   21040021
*   TO BE PLACED AT ADDR ZERO                                       *   21100021
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   21160021
         STM   R14,WORK3,SAV10         SAVE REGISTERS            S01904 21220021
*    FIND FIRST NON-ZERO LENGTH SD, PC, OR CM WITH        OX4565,OY3055 21270002
*    ADDRESS ZERO AND ASSIGN ITS CESDID TO ONE-BYTE       OX4565,OY3055 21272002
*    TEXT RECORD                                          OX4565,OY3055 21274002
         L     WORK3,HESD              PT TO HESD-8       OX4565,OY3055 21276002
         SR    WORK2,WORK2             ZERO REG           OX4565,OY3055 21278002
NEXTID   LA    WORK2,1(,WORK2)         INCR ESDID CNTR    OX4565,OY3055 21278402
         LA    WORK3,8(,WORK3)         PT TO NEXT HESD    OX4565,OY3055 21278802
         TM    0(WORK3),X'0F'          CHK FOR SD ITEM    OX4565,OY3055 21279202
         BZ    TESTMOR2                BRANCH IF SD       OX4565,OY3055 21279602
         TM    0(WORK3),X'04'          CHK FOR CM/PC ITEM OX4565,OY3055 21279702
         BO    TESTMOR1                IF FOUND, BRANCH   OX4565,OY3055 21279802
         B     NEXTID                  TRY NXT HESD ENTRY OX4565,OY3055 21279902
TESTMOR1 TM    0(WORK3),X'02'          CHK FOR PR ITEM    OX4565,OY3055 21299902
         BO    NEXTID                  BRANCH IF FOUND    OX4565,OY3055 21309902
TESTMOR2 CLC   1(3,WORK3),ZEROS3       CHK ADDRESS ZERO   OX4565,OY3055 21319902
         BNE   NEXTID                  BRANCH IF NOT      OX4565,OY3055 21329902
         CLC   5(3,WORK3),ZEROS3       CHK LENGTH ZERO    OX4565,OY3055 21339902
         BE    NEXTID                  BRANCH IF SO       OX4565,OY3055 21359902
         LA    WORK3,BYTCTRRD          PICK UP CNTRL RCD ADDR    S01904 21400002
         STH   WORK2,SIX10(WORK3)      PUT CESD ID IN CTRL RCD   S01904 21460021
         LA    WORK2,TWTY              PUT LENGTH OF RCD IN REG  S01904 21520021
         BAL   BRANCHX,SCDWRITE        WRITE CTRL RCD            S01904 21580021
         BAL   BRANCHX,CHECKWRT        CHECK WRITE               S01904 21640021
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   21700021
*    SET UP AND WRITE OUT THE 1 BYTE OF TEXT                        *   21760021
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   21820021
         LA    WORK2,ON1               LENGTH OF TEXT RCD IN REG S01904 21880021
         LA    WORK3,TXTBYT            PICK UP ADDR OF TEXT      S01904 21940021
         BAL   BRANCHX,SCDWRITE        WRITE THE RECORD          S01904 22000021
         BAL   BRANCHX,CHECKWRT        CHECK THE WRITE           S01904 22060021
         BAL   BRANCHX,NOTEMCRO        GET TTR OF TEXT ON SYSLM  S01904 22120021
         ST    PARM,PDSE4              PUT TTR OF 1ST TXT INPDSD S01904 22180021
         MVI   PDSE10+ON1,ON1          PUT LENGTH IN PDS DICT    S01904 22240021
         NI    APT3,FIRSTOFF           TURN OFF 1ST TXT BIT      S01904 22300021
         LM    R14,WORK3,SAV10         RESTORE REGS              S01904 22360021
*                                                                     * 22420021
*   CHECK FOR SAVED SPLIT RLD - MOVE SPLIT RLD TO OUTPUT BUFFER       * 22480021
*                                                                     * 22540021
CCW0     TM    NEWSW2,SPLITRLD         HAS SPLIT RLD BEEN SAVED         22600021
         BZ    RLDSCAN                  NO                              22660021
         TM    1(CURTXTCB),BUF1PREV  DOES BUFFER1 HAVE CNTRLRCD         22720021
         BO    CCW4            YES,GO TO CHECK BUFFER2                  22780021
         L     WORK1,OUTCB1    NO,PICK UP BUFFER1 CB AND CHECK IT       22840021
         TM    0(WORK1),X'40'          IS IT WRITTEN YET                22900021
         BZ    CCW1                    YES, USE IT                      22960021
         BAL   BRANCHX,CHECKWRT        NO, GO TO CHECK WRITE            23020021
         B     CCW1                    GO TO USE BUFFER1                23080021
CCW4     L     WORK1,OUTCB2            USE BUFFER 2                     23140021
         TM    0(WORK1),X'40'          IS IT WRITTEN YET                23200021
         BZ    CCW5                    YES, GO TO USE IT                23260021
         BAL   BRANCHX,CHECKWRT        NO, GO TO CHECK WRITE            23320021
CCW5     OI    1(CURTXTCB),OUTBUF2   INDICATE BUFFER2 BEING USED        23380021
         B     CCW2                                                     23440021
CCW1     OI    1(CURTXTCB),OUTBUF1      INDICATE BFR1 BEING USED        23500021
CCW2     OI    0(WORK1),INUSE           MARK CTRL BLK USED              23560021
         L     WORK2,8(WORK1)           GET BUFFER BEG.                 23620021
         XC    0(16,WORK2),0(WORK2)     CLEAR THE CONTROL RECORD        23680021
         OI    0(WORK2),RLD             SET RLD INDIC ON                23740021
         MVI   7(WORK2),X'08'           PUT IN RLD BYTE CT              23800021
         L     WORK3,HESD                                               23860021
         MVC   16(8,WORK2),0(WORK3)    MOVE SAVED RLD TO OUTPUT BUFFER  23920021
         TM    0(WORK3),X'80'          IS R MARKED DELINK               23980021
         BZ    CCW3                    NO                               24040021
         NI    0(WORK3),X'7F'          TURN OFF DELINK BIT              24100021
         LH    WORK3,0(WORK3)                                           24160021
         MH    WORK3,FIVE                                               24220021
         A     WORK3,DLKT              DELINK TABLE ENTRY FOR R PTR     24280021
         MVC   16(2,WORK2),0(WORK3)    CHANGE TO DELINKED R PTR         24340021
CCW3     LA    WORK2,8(WORK2)                                           24400021
         ST    WORK2,4(WORK1)           SAVE 1ST FREE ADDR.             24460021
         NI    NEWSW2,SPLITOFF          SET SPLIT RLD SAVED INDIC OFF   24520021
         OI    NEWSW2,SPLTMOVD          SPLIT RLD HAS BEEN MOVED        24580021
         ST    WORK1,CBTOUSE            SAVE CTRL. BLK. ADDR            24640021
           OI  APT3,RLDSINGP                                            24700021
           ST  WORK1,LASTBUF                                            24760021
*                                                                     * 24820021
*                                                                     * 24880021
*      PRELIMINARY SCAN OF RLD NOTELIST TO SEE IF TEXT HAS RLD'S.  IF * 24940021
*      THE TEXT HAS RLD'S AND IT IS THE LAST TEXT FOR THE GROUP, THE  * 25000021
*      CONTROL RECORD WRITE CAN BE OVERLAPPED WITH RLD READ'S AND     * 25060021
*      THE PROCESSING OF TEXT.                                        * 25120021
*                                                                     * 25180021
*                                                                     * 25240021
RLDSCAN  L     WORK1,RNLS2              START OR RLD NOTELIST           25300021
         LH    WORK2,ENR2C              NO. OF RLD NOTELIST ENTRIES     25360021
         LTR   WORK2,WORK2             IS NOTELIST EMPTY                25420021
         BZ    LASTTEXT                YES                              25480021
COMPID   CLC   CURID(2),0(WORK1)        CUR. ID = NOTELIST ENTRY ID     25540021
         BNE   NEXTENT                                                  25600021
         MVC   TEMP(2),2(WORK1)                                         25660021
         NI    TEMP,X'03'               CLEAR INDICATORS                25720021
         CLC   CURMULT(2),TEMP          CUR. MULT  = ENTRY MULT         25780021
         ST    WORK1,RLDION             SAVE ADDR OF NOTELIST ENTRY     25840021
         BE    CRREADY                  YES                             25900021
NEXTENT  LA    WORK1,9(WORK1)           UPDATE TO NEXT NOTELIST ENTRY   25960021
         BCT   WORK2,COMPID                                             26020021
         B     LASTTEXT                 NO RLD'S FOR TEXT               26080021
*                                                                     * 26140021
*        WRITE PREVIOUS CONTROL RECORD IF READY TO BE WRITTEN           26200021
*                                                                     * 26260021
CRREADY  OI    0(CURTXTCB),RLDS         SET RLD'S FOR TXT IN CTRL BLK   26320021
         OI    APT3,RLDSINGP           SET RLDS IN GROUP INDIC          26380021
         TM    0(CURTXTCB),LASTXT       IS TXT LAST IN GROUP            26440021
         BZ    READYRLD                 NO                              26500021
         LR    PARM,PREVCREC                                            26560021
         BAL   RETURN,WRTCRRLD          GO TO WRITE PREVIOUS CTRL. REC. 26620021
         NC    1(1,CURTXTCB),1(PREVCREC) MARK PREV.CTRL.REC.WRITTEN     26680021
*                                                                     * 26740021
*     GET ALL NEEDED RLDS AND PASS CONTROL TO HEWLFREL TO RELOCATE    * 26800021
*                                                                     * 26860021
READYRLD L     PARM,RLDION              GET 1ST NOTELIST ENTRY FOR      26920021
*                                              NEEDED RLD'S             26980021
         BAL   RETURN,RDRLD             GO TO GET ALL NEEDED RLD'S      27040021
         L     BRANCHX,RELOC                                            27100021
         BALR  RETURN,BRANCHX          GO TO RELOCATE RLDS              27160021
         L     BASE2,BASEREG           RESTORE SIO BASE REG             27220021
         TM    NEWSW2,MORERLDS          MORE RLDS STILL TO READ         27280021
         BO    READYRLD                 YES, GO TO READ                 27340021
*                                                                     * 27400021
** SPECIAL TESTING TO FIND LEAST FILLED BUFFER TO USE FOR ID-LENGTH***  27460021
*                                                                     * 27520021
         ST    PARM,LASTBUF            SAVE CB ADDR OF LAST BFR FILLED  27580021
LASTTEXT TM    0(CURTXTCB),LASTXT      IS CURRENT TEXT LAST OF GROUP    27640021
         BZ    LASTTXT                 NO                               27700021
         TM    APT3,RLDSINGP           WERE THERE ANY RLDS FOR GROUP    27760021
         BZ    LASTTXT                 NO                               27820021
          NI    NEWSW2,MOVDOFF                                          27880021
         L     PARM,LASTBUF            YES, THEN SET INDIC IN CB OF     27940021
         TM    0(PARM),INUSE           EMPTY BUFFER--SPLIT ADCON ONLY   28000021
         BZ    LASTTXT                 YES                              28060021
         OI    0(PARM),LASTUSED              LAST BUFFER FILLED         28120021
*                                                                     * 28180021
* CHECK IS MORE TEXT IN CURRENT GROUP. IF MORE TEXT, GO TO PROCESS    * 28240021
*     IT.  IF ALL TEXT PROCESSED FOR GROUP PREPARE TO WRITE THE TEXT  * 28300021
*                                                                     * 28360021
LASTTXT  TM    0(CURTXTCB),LASTXT       CURR. TXT LAST IN GROUP         28420021
         BO    LASTTXT0                YES                              28480021
         MVI   0(CURTXTCB),X'00'       CLEAR INDICATORS                 28540021
         B     SGEND0                  GO TO PROCESS NEXT TEXT OF GROUP 28600021
LASTTXT0 NI    NEWSW2,GROUPOFF         RLDS ARE NOT TO BE GROUPED       28660021
         TM    1(CURTXTCB),PREV         PREVIOUS CR/RLD WRITTEN YET     28720021
         BZ    TEXTWRIT                 YES                             28780021
         TM    APT3,RLDSINGP           ANY RLDS FOR FOLLOWING TXT       28840021
         BO    LASTTXT2                                                 28900021
         TM    0(CURTXTCB),SEGMTEND    IS TEXT LAST IN SEGMENT          28960021
         BZ    LASTTXT2                NO                               29020021
         TM    PDSE7,OVLY              IS OVERLAY SPECIFIED             29080021
         BZ    LASTTXT1                NO                               29140021
         CLC   CURSEG+1(1),ENTABSEG    IS AN ENTAB NEEDED               29200021
         BE    LASTTXT2                YES                              29260021
*                                                                     * 29320021
*      SET-UP AND WRITE PREVIOUS CONTROL RECORD IF NOT ALREADY WRITTEN* 29380021
*                                                                     * 29440021
LASTTXT1 L     WORK2,8(PREVCREC)       BEG. OF BUFFER                   29500021
         OI    0(WORK2),SEGEND         SET END OF SEG IN CR             29560021
         CLC   CURSEG(2),ENSPC         LAST SEG OF MODULE               29620021
         BNE   LASTTXT2                                                 29680021
         OI    0(WORK2),MODEND         SET END OF MOD. IN CR            29740021
LASTTXT2 LR    PARM,PREVCREC                                            29800021
         BAL   RETURN,WRTCRRLD         BRANCH TO WRITE PREV CTRL REC    29860021
         NC    1(1,CURTXTCB),1(PREVCREC) MARK PREV.CTRL.REC.WRITTEN     29920021
*                                                                     * 29980021
*          WRITE A TEXT RECORD                                        * 30040021
*                                                                     * 30100021
TEXTWRIT TM    0(CURTXTCB),INUSE       HAS TEXT BEEN WRITTEN            30160021
         BO    WRIT00                  NO                               30220021
         TM    1(CURTXTCB),XDAP        IS XDAP WRITE NEEDED             30280021
         BZ    WRIT0                   NO                               30340021
WRIT00   BAL   RETURN,WRTTXT            BRANCH TO WRITE TEXT            30400021
*                                                                     * 30460021
*    WRITE ALL RLD RECORDS EXCEPT ONE                                 * 30520021
*                                                                     * 30580021
WRIT0    TM    1(CURTXTCB),OUTBUF1     IS BUFFER 1 BEING USED           30640021
         BZ    WRIT10                  NO                               30700021
         L     PARM,OUTCB1                                              30760021
         TM    0(PARM),LASTUSED        IS IT THE LAST BUFFER FILLED     30820021
         BZ    WRIT1                   NO                               30880021
            LR PREVCREC,PARM                                            30940021
         OI    1(CURTXTCB),BUF1PREV    YES,USE FOR ID-LENGTH            31000021
         B     WRIT10                                                   31060021
WRIT1    BAL   RETURN,WRTCRRLD         WRITE BUF 1                      31120021
         NI    1(CURTXTCB),BUF1OFF     TURN OFF BUF 1 BEING USED        31180021
WRIT10   TM    1(CURTXTCB),OUTBUF2     IS BUF 2 BEING USED              31240021
         BZ    WRIT20                  NO                               31300021
         L     PARM,OUTCB2                                              31360021
         TM    0(PARM),LASTUSED        IS IT THE LAST BUFFER FILLED     31420021
         BZ    WRIT2                   NO                               31480021
         OI    1(CURTXTCB),BUF2PREV    YES,USE FOR ID-LENGTH            31540021
            LR PREVCREC,PARM                                            31600021
         B     WRIT20                                                   31660021
WRIT2    BAL   RETURN,WRTCRRLD         WRITE BUF 2                      31720021
         NI    1(CURTXTCB),BUF2OFF     TURN OFF BUF 2 BEING USED        31780021
WRIT20   TM    1(CURTXTCB),OUTBUF3     IS BUF 3 BEING USED              31840021
         BZ    WRIT4                   NO                               31900021
         L     PARM,OUTCB3                                              31960021
         TM    0(PARM),LASTUSED        IS IT THE LAST BUFFER FILLED     32020021
         BZ    WRIT3                   NO                               32080021
         OI    1(CURTXTCB),BUF3PREV    YES,USE FOR ID-LENGTH            32140021
            LR PREVCREC,PARM                                            32200021
         B     TSTSGEND                                                 32260021
WRIT3    BAL   RETURN,WRTCRRLD         WRITE BUF 3                      32320021
         NI    1(CURTXTCB),BUF3OFF     TURN OFF BUF 3 BEING USED        32380021
         B     TSTSGEND                                                 32440021
WRIT4    TM    0(PREVCREC),LASTUSED    HAS PREV CTRL REC BEEN IDENT     32500021
         BO    TSTSGEND                YES                              32560021
         OI    NEWSW2,NOCTLREC          NO,SET NO CTRL.RECS. IN USE     32620021
WRIT5    L     PREVCREC,OUTCB1         USE BFR1. AS PREV. CR            32680021
         TM    0(PREVCREC),BEINGWT     IS IT BEING WRITTEN              32740021
         BO    WRIT6                   YES                              32800021
         OI    1(CURTXTCB),BUF1PREV                                     32860021
         B     TSTSGEND                                                 32920021
WRIT6    L     PREVCREC,OUTCB2         YES, THEN USE BFR2 AS PREV CR    32980021
         OI    1(CURTXTCB),BUF2PREV                                     33040021
*                                                                     * 33100021
*  TEST FOR END OF SEGMENT--IF NOT SWITCH TEXT CONTROL BLOCKS AND     * 33160021
*             RETURN TO PROCESS NEXT TEXT                             * 33220021
*                                                                     * 33280021
TSTSGEND XC    2(2,PREVCREC),2(PREVCREC) ZERO ID-LENGTH FIELD           33340021
         TM    0(CURTXTCB),SEGMTEND     IS TEXT LAST IN SEGMENT         33400021
         BO    SGEND1                   YES                             33460021
         NI    NEWSW2,NOCROFF          INIT NO CTRL REC INDIC           33520021
         TM    0(PREVCREC),INUSE       DOES CONT. REC CONTAIN RLDS      33580021
         BO    SGEND0                  YES                              33640021
SGEND    MVC   4(4,PREVCREC),8(PREVCREC) 1ST FREE ADDR = BFR BEG        33700021
         XC    2(2,PREVCREC),2(PREVCREC) ZERO ID-LENGTH FIELD           33760021
         OI    0(PREVCREC),INUSE       MARK CB IN USE                   33820021
         L     WORK1,8(PREVCREC)                                        33880021
         XC    0(16,WORK1),0(WORK1)    ZERO CONTROL RECORD              33940021
SGEND0   XR    CURTXTCB,NXTTXTCB        SWITCH TEXT CONTROL BLOCKS      34000021
         XR    NXTTXTCB,CURTXTCB                                        34060021
         XR    CURTXTCB,NXTTXTCB                                        34120021
         MVC   1(1,CURTXTCB),1(NXTTXTCB) TRANSFER INDICATORS            34180021
         MVC   1(2,NXTTXTCB),ZERO      ZERO WHEN NOT LAST TEXT OF GROUP 34240021
         NI    0(PREVCREC),LASTOFF                                      34300021
         B     GETID                                                    34360021
*                                                                     * 34420021
*               END OF SEGMENT LOGIC                                  * 34480021
*                                                                     * 34540021
SGEND1   NI    0(PREVCREC),LASTOFF     CLEAR LAST BUFFER USED INDIC     34600021
         TM    PDSE7,OVLY              IS OVERLAY SPECIFIED             34660021
         BZ    SGEND1A                 NO                               34720021
         CLC   CURSEG+1(1),ENTABSEG    IS AN ENTAB NEEDED               34780021
         BNE   SGEND1A                                                  34840021
         LA    RETURN,SGEND3           GET RETURN ADDRESS               34900021
         L     BRANCHX,ADENTAB                                          34960021
         BR    BRANCHX                 GO TO CREATE ENTAB               35020021
SGEND1A  OI    APT3,SEGSTART           YES,SET SEG BEG FOR NEXT SEG     35080021
         TM    NEWSW2,NOCTLREC          ANY RLDS STILL IN BUFFERS       35140021
         BO    SGEND3                   NO                              35200021
         CLC   CURSEG(2),ENSPC          IS THIS THE LAST SEGMENT        35260021
         BL    SGEND2                   NO                              35320021
         L     WORK1,8(PREVCREC)        YES                             35380021
         OI    0(WORK1),MODEND          SET END OF MODULE INDICATOR     35440021
SGEND2   L     WORK1,8(PREVCREC)                                        35500021
         OI    0(WORK1),SEGEND          SET END OF SEGMENT INDIC.       35560021
         LR    PARM,PREVCREC                                            35620021
         BAL   RETURN,WRTCRRLD          GO TO WRITE CONTROL RECORD      35680021
         NC    1(1,CURTXTCB),1(PREVCREC)                                35740021
         NI    0(CURTXTCB),X'FD'       CLEAR END OF SET INDIC           35800021
SGEND3   NI    NEWSW2,NOCROFF          INIT. NO CTRL REC INDIC          35860021
         NI    0(CURTXTCB),X'F0'       TURN OFF SEGMENT END INDIC--     35920021
*                                           TO REUSE TSTSGEND CODING    35980021
         L     BASE2,BASEREG           RESTORE SIO BASE REG             36040021
         CLC   CURSEG(2),ENSPC          ANY MORE SEGMENTS TO PROCESS    36100021
         BL    WRIT5                   YES                              36160021
*                                                                     * 36220021
*     PROCESSING COMPLETE - GO TO FINAL PROCESSOR                     * 36280021
*                                                                     * 36340021
         TM    0(PREVCREC),BEINGWT      CHECK FOR UNCHECKED CR WRITE    36400021
         BO    ENDCHECK                                                 36460021
         TM    0(CURTXTCB),BEINGWT      CHECK FOR UNCHECKED TEXT WRITE  36520021
         BZ    FINISH                                                   36580021
ENDCHECK BAL   BRANCHX,CHECKWRT         GO TO CHECK LAST WRITE          36640021
FINISH   L     BRANCH,ADFINAL                                           36700021
         BR    BRANCH                   GO TO FINAL PROCESSOR           36760021
*                                                                     * 36820021
*                                                                     * 36880021
*                                                                     * 36940021
*            LOOK-AHEAD / READ-AHEAD ROUTINE                          * 37000021
*                                                                     * 37060021
*                                                                     * 37120021
*                                                                     * 37180021
GETIDMUL EQU   *                                                        37240021
         STM   WORK1,BRANCHX,SAVEREG1  SAVE REGISTER USED               37300021
         L     BASE2,BASEREG      RESTORE SECOND BASE REG.              37360021
         ST    RETURN,RETURNRG          SAVE RETURN REGISTER            37420021
         L     WORK1,SRCHBEG                                            37480021
         CLC   SRCHMULT(2),ZERO         WORKING WITH NEW CSECT          37540021
         BNE   IDMUL50                  NO                              37600021
*                                                                     * 37660021
*  SEARCH FOR TEXT I/O TABLE ENTRY FOR CURRENT ID AND MULTIPLICITY    * 37720021
*                                                                     * 37780021
IDMUL10  CL    WORK1,TXTIOEND           AT END OF TEXT I/O TABLE        37840021
         BH    IDMUL90                  YES                             37900021
         TM    2(WORK1),TEXTDONE        IS TEXT ALREADY PROCESSED       37960021
         BZ    IDMUL30                                                  38020021
IDMUL20  LA    WORK1,4(WORK1)           UPDATE TO NEXT ENTRY            38080021
         B     IDMUL10                                                  38140021
IDMUL30  TM    2(WORK1),OUTORDER        IS TEXT OUT-OF-ORDER TEXT       38200021
         BO    IDMUL20                                                  38260021
         LH    WORK2,0(WORK1)           GET ID                          38320021
         SLL   WORK2,3                  MULT. BY SIZE OF ENTRY          38380021
         A     WORK2,HESD               HESD ENTRY FOR ID               38440021
         CLC   SRCHSEG+1(1),4(WORK2)   IS ID IN CURRENT SEGMENT         38500021
         BNE   IDMUL20                  NO                              38560021
         MVC   SRCHID(2),0(WORK1)       SET SEARCH ID = ENTRY ID        38620021
         ST    WORK1,IDBEG                                              38680021
         L     WORK3,4(WORK2)                                           38740021
         LA    WORK3,0(WORK3)           LENGTH OF CSECT                 38800021
         LH    WORK2,LSTMULSZ          PICK UP LAST MULT SIZE           38860021
         LA    WORK2,7(WORK2)          ROUND TO                         38920021
         N     WORK2,DBLWRDDD          DOUBLE WORD BOUNDARY             38980021
         STH   WORK2,LSTMULSS          SAVE IT                          39040021
         SR    WORK2,WORK2             ZERO OUT WORK2 REG               39100021
         D     WORK2,MULTSIZE                                           39160021
         STH   WORK2,LSTMULSZ          SAVE LAST MULT. SIZE             39220021
         LTR   WORK2,WORK2              IS THE REMAINDER ZERO           39280021
         BC    7,IDMUL40                NO                              39340021
         MVC   LSTMULSZ(2),MULTSIZE+2  SAVE LAST MULT SIZE              39400021
         BCTR  WORK3,0                  DECR. HIGH MULT. BY 1           39460021
IDMUL40  STH   WORK3,HIGHMULT           SAVE HIGHEST MULT. FOR ID       39520021
IDMUL50  MVC   TEMP(2),2(WORK1)        GET ENTRY MULT                   39580021
         NI    TEMP,X'03'               CLEAR OUT FLAG BITS             39640021
         CLC   TEMP(2),HIGHMULT        COMP TO HI MULT  OX03510,OY03043 39690002
         BNH   IDMUL51                 BR IF VALID      OX03510,OY03043 39692002
         LA    REG0,X'0438'            LOG MSG IEW0564  OX03510,OY03043 39694002
         L     REG15,ERDIG             GET LINK TO ERR  OX03510,OY03043 39696002
         BALR  REG14,REG15             GO LOG MSG, QUIT OX03510,OY03043 39698002
IDMUL51  EQU   *                       ERR MSG BYPASS   OX03510,OY03043 39698402
         CLC   TEMP(2),SRCHMULT        ENTRY MULT = SEARCH MULT         39700021
         BE    IDMUL150                                                 39760021
IDMUL60  LA    WORK1,4(WORK1)           INDEX TO NEXT TXTIOT ENTRY      39820021
         ST    WORK1,SRCHBEG                                            39880021
         CL    WORK1,TXTIOEND           AT END OF TEXT I/O TABLE        39940021
         BH    IDMUL70                 YES                              40000021
         CLC   0(2,WORK1),SRCHID        ENTRY ID = SEARCH ID            40060021
         BE    IDMUL50                  YES, CHECK MULT.                40120021
         B     IDMUL60                  NO, UPDATE TO NEXT ENTRY        40180021
*                                                                     * 40240021
*   MULTIPLICITY WITH NO TEXT ----COMPENSATE FOR IT                   * 40300021
*                                                                     * 40360021
IDMUL70  CLC   SRCHMULT(2),ZERO        IS FIRST MULT MISSING            40420021
         BNE   IDMUL75                 NO                               40480021
         LH    WORK2,SRCHID            GET TEXT ID                      40540021
         SLL   WORK2,3                                                  40600021
         A     WORK2,HESD                                               40660021
         MVC   CCWDISP+1(3),1(WORK2)   INIT CCWDISP =LKA                40720021
         B     IDMUL77                                                  40780021
IDMUL75  L     WORK3,CCWDISP                                            40840021
         A     WORK3,MULTSIZE                                           40900021
         ST    WORK3,CCWDISP            UPDATE CCW DISP. BY MULT. SIZE  40960021
IDMUL77  LH    WORK2,SRCHMULT                                           41020021
         LA    WORK2,1(WORK2)                                           41080021
         STH   WORK2,SRCHMULT           UPDATE SEARCH MULT.             41140021
         CH    WORK2,HIGHMULT           IS IT A VALID MULT FOR THIS ID  41200021
         BH    IDMUL80                  NO                              41260021
         MVC   SRCHBEG(4),IDBEG                                         41320021
         L     WORK1,IDBEG                                              41380021
         B     IDMUL50                                                  41440021
IDMUL80  XC    SRCHMULT(2),SRCHMULT     SET SEARCH MULT = 0             41500021
         L     WORK1,IDBEG                                              41560021
         LA    WORK1,4(WORK1)                                           41620021
         ST    WORK1,SRCHBEG                                            41680021
         B     IDMUL10                                                  41740021
*                                                                     * 41800021
*        ALL  TEXT FOR A SEGMENT HAS BEEN  PROCESSED                  * 41860021
*                                                                     * 41920021
IDMUL90  LH    WORK2,SRCHSEG                                            41980021
         LA    WORK2,1(WORK2)                                           42040021
         STH   WORK2,SRCHSEG            UPDATE TO NEXT SEGMENT          42100021
         MVC   SRCHBEG(4),TXTIO         INIT SEARCH POINTER             42160021
IDMUL130 TM    0(PARM),FIRSTXT         IS TEXT FIRST OF GROUP           42220021
         BZ    IDMUL140                                                 42280021
         MVC   29(3,PARM),CCWDISP+1    PUT CCW DISP IN TXT CTRL BLK.    42340021
IDMUL140 L     RETURN,RETURNRG          RESTORE REGISTERS               42400021
         LM    WORK1,BRANCHX,SAVEREG1  RESTORE REGISTERS USED           42460021
         BR    RETURN                   RETURN                          42520021
*                                                                     * 42580021
*             GET CCW DISPLACEMENT INFORMATION                        * 42640021
*                                                                     * 42700021
IDMUL150 ST    WORK1,12(PARM)           STORE TXTIOT ENTRY ADDR.IN CB   42760021
         CLC   SRCHMULT(2),ZERO         WORKING WITH NEW CSECT          42820021
         BNE   IDMUL170                 NO                              42880021
         LH    WORK2,0(WORK1)           GET ID                          42940021
         SLL   WORK2,3                                                  43000021
         A     WORK2,HESD                                               43060021
         L     WORK3,CCWDISP           PICK UP CCW DISP                 43120021
         LA    WORK3,0(WORK3)          CLEAR HIGH ORDER BYTE            43180021
         AH    WORK3,LSTMULSS          ADD TO LAST MULT SIZE            43240021
         ST    WORK3,CCWDISP           SAVE IT TEMPORARILY              43300021
         CLC   CCWDISP+1(3),1(WORK2)   IS THE NEXT CSECT ADJA.          43360021
         MVC   CCWDISP+1(3),1(WORK2)   REPLACE IT ANY WAY               43420021
         BE    IDMUL180                YES,GROUPING POSSIBLE            43480021
         OI    SSWITCH,X'01'           NO,DO NOT ALLOW GROUPING         43540021
         B     IDMUL180                                                 43600021
IDMUL170 L     WORK2,CCWDISP                                            43660021
         A     WORK2,MULTSIZE                                           43720021
         ST    WORK2,CCWDISP            UPDATE CCW DISP. FOR CUR. MULT. 43780021
*                                                                     * 43840021
*      GET FIRST AND LAST TXTIOT ENTRIES FOR GROUP                    * 43900021
*                                                                     * 43960021
IDMUL180 CL    WORK1,TXTIO              CURRENT ENTRY FIRST IN TABLE    44020021
         BE    IDMUL182                 YES                             44080021
         SH    WORK1,FOUR               DECR. TO PRECEDING ENTRY        44140021
         TM    2(WORK1),TTRENTRY        IS THIS A TTR ENTRY             44200021
         BZ    IDMUL180                 NO                              44260021
         LA    WORK1,4(WORK1)           YES,UPDATE TO FIRST GROUP ENTRY 44320021
IDMUL182 ST    WORK1,16(PARM)           SAVE AS BEG. ENTRY              44380021
IDMUL184 TM    2(WORK1),TTRENTRY        IS THIS A TTR ENTRY             44440021
         BO    IDMUL185                 YES                             44500021
         CL    WORK1,TXTIOEND           IS THIS THE LAST ENTRY          44560021
         BE    IDMUL185                 YES                             44620021
         LA    WORK1,4(WORK1)           NO, INCR. TO THE NEXT ENTRY     44680021
         B     IDMUL184                                                 44740021
IDMUL185 ST    WORK1,20(PARM)           SAVE AS END ENTRY               44800021
         L     WORK1,12(PARM)                                           44860021
         TM    2(WORK1),INCORE          IS THE TEXT IN CORE             44920021
         BO    IDMUL300                 YES                             44980021
*                                                                     * 45040021
*    CHECK IF RECORD CAN BE READ IN BOTTOM OF BUFFER                  * 45100021
*                                                                     * 45160021
         SR    WORK2,WORK2              CLEAR FOR ACCUM. RECORD LENGTH  45220021
         L     WORK3,TXTIO                                              45280021
         L     WORK1,16(PARM)           GET  BEG. GROUP ENTRY           45340021
         LNR   WORK3,WORK3                                              45400021
         AR    WORK3,WORK1                                              45460021
         SRL   WORK3,2                  GET ENTRY NUMBER                45520021
         MH    WORK3,SEVEN                                              45580021
         A     WORK3,TNLS2              GET ADDR.OF CORRES.NOTELIST     45640021
IDMUL190 MVC   TEMP(2),5(WORK3)              ENTRY - GET LENGTH         45700021
         AH    WORK2,TEMP               ADD LENGTH TO ACCUM RECORD CT.  45760021
         CL    WORK1,20(PARM)           IS THIS LAST ENTRY FOR GROUP    45820021
         BE    IDMUL210                 YES                             45880021
         LA    WORK1,4(WORK1)           NO, UPDATE TO NEXT TXTIOT ENTRY 45940021
         LA    WORK3,7(WORK3)           UPDATE TO NEXT NOTELIST ENTRY   46000021
         B     IDMUL190                                                 46060021
IDMUL210 LR    WORK1,WORK2                                              46120021
         MVC   TTRPOINT(3),2(WORK3)    GET TTR FOR POINT                46180021
         A     WORK1,FREEADDR                                           46240021
         CL    WORK1,TXTBFEND           WILL REC. FIT IN BOTTOM OF BFR. 46300021
         BH    IDMUL220                 NO, CHECK IF FITS AT TOP        46360021
         BAL   RETURN,RDTXT             YES, BRANCH TO READ NEEDED TXT  46420021
         B     IDMUL301                                                 46480021
*                                                                     * 46540021
*   CHECK TO SEE IF RECORD CAN BE READ AT TOP OF BFR.-CHECK FOR A     * 46600021
*                   POSSIBLE SPLIT  ADDRESS CONSTANT                  * 46660021
IDMUL220 LTR   WORK0,WORK0              WORKING WITH CUR. OR NEXT TXTCB 46720021
         BZ    IDMUL230                CURR TXTCB                       46780021
         TM    0(CURTXTCB),INUSE        IS OTHER TXTCB IN USE           46840021
         BZ    IDMUL240                 NO,TEXT WILL FIT AT TOP OF BFR. 46900021
         L     WORK3,4(CURTXTCB)        GET BEG. ADDR. OF TEXT          46960021
         OI    0(CURTXTCB),LASTXT       SET LAST TXT IN GROUP INDIC.    47020021
         XC    GROUPLNG(2),GROUPLNG    INIT GROUPLNG                    47080021
         B     IDMUL235                                                 47140021
IDMUL230 TM    0(NXTTXTCB),INUSE        IS OTHER TXTCB IN USE           47200021
         BZ    IDMUL240                 NO, TEXT WILL FIT AT TOP OF BFR 47260021
         L     WORK3,4(NXTTXTCB)                                        47320021
IDMUL235 A     WORK2,TXTBFBEG                                           47380021
         CLR   WORK2,WORK3              WILL TEXT FIT AT TOP OF BFR.    47440021
         BNH   IDMUL240                                                 47500021
         OI    2(CURTXTCB),MORETXT     SET MORE TEXT TO PROCESS         47560021
         L     WORK3,CCWDISP                                            47620021
         S     WORK3,MULTSIZE                                           47680021
         ST    WORK3,CCWDISP           RESET CCW DISP                   47740021
         MVC   SRCHBEG(4),IDBEG                                         47800021
         LTR   WORK0,WORK0             IS THIS A PRIME READ             47860021
         BNZ   IDMUL130                NO                               47920021
         BAL   BRANCHX,CHECKWRT        CHECK WRITE                      47980021
         NI    0(NXTTXTCB),WRTCKD      MARK WRITE CHECKED               48040021
         B     IDMUL130                                                 48100021
IDMUL240 MVC   FREEADDR(4),TXTBFBEG    SET FIRST FREE ADDR TO BFR BEG   48160021
         CLC   SRCHMULT(2),ZERO         WORKING WITH NEW CSECT          48220021
         BE    IDMUL250                 YES                             48280021
         CLC   SRCHID(2),CURID          WORKING WITH NEW CSECT          48340021
         BNE   IDMUL250                 YES                             48400021
         LH    WORK3,CURMULT                                            48460021
         LA    WORK3,1(WORK3)                                           48520021
         CH    WORK3,SRCHMULT           NO,CHECK FOR CONTIGUOUS MULT.   48580021
         BNE   IDMUL250                NOT CONTIGUOUS--READ             48640021
         OI    2(CURTXTCB),MORETXT     SET MORE TEXT TO PROCESS         48700021
         L     WORK3,CCWDISP                                            48760021
         S     WORK3,MULTSIZE                                           48820021
         ST    WORK3,CCWDISP           RESET CCW DISPLACEMENT           48880021
         B     IDMUL130                                                 48940021
IDMUL250 BAL   RETURN,RDTXT             BRANCH TO READ TEXT AT BFR.TOP  49000021
         B     IDMUL301                                                 49060021
*                                                                     * 49120021
*     THE NEEDED TEXT IS IN CORE - DETERMINE TEXT GROUPING            * 49180021
*                                                                     * 49240021
IDMUL300 BAL   RETURN,RDTXT             GO TO READ IN OUT-OF-ORDER TXT  49300021
IDMUL301 TM    PDSE8,DC                 IS DC SPECIFIED                 49360021
         BZ    IDMUL305                YES                              49420021
         TM    PDSE7,SCTR               IS SCATTER SPECIFIED            49480021
         BZ    IDMUL310                 NO                              49540021
IDMUL305 OI    0(PARM),LASTXT           SET LAST TEXT IN GROUP INDIC.   49600021
         XC    GROUPLNG(2),GROUPLNG     ZERO GROUPLNG                   49660021
IDMUL310 L     WORK1,12(PARM)          CURRENT TXTIOT ENTRY             49720021
         LR    WORK3,WORK1                                              49780021
         S     WORK3,TXTIO                                              49840021
         SRL   WORK3,2                                                  49900021
         MH    WORK3,SEVEN                                              49960021
         A     WORK3,TNLS2                                              50020021
         MVC   24(2,PARM),5(WORK3)      SAVE TEXT LENGTH IN TXTCB       50080021
         LH    WORK3,0(WORK1)                                           50140021
         SLL   WORK3,3                                                  50200021
         A     WORK3,HESD                                               50260021
         LR    WORK8,WORK3             SAVE HESD ENTRY ADDR             50320021
         L     WORK3,4(WORK3)           GET CSECT LENGTH FROM HESD      50380021
         LA    WORK3,0(WORK3)                                           50440021
         AH    WORK3,GROUPLNG                                           50500021
         CL    WORK3,MULTSIZE          IS GROUP LNG+CSECT LNG GT.MULT   50560021
         BNH   IDMUL330                NO                               50620021
IDMUL324 LH    WORK3,GROUPLNG     LOAD GROUP LENGTH                     50680021
         LTR   WORK3,WORK3              IS GROUP LENGTH = 0             50740021
         BZ    IDMUL325                 YES                             50800021
         OI    0(CURTXTCB),LASTXT       SET LAST TEXT FOR GROUP         50860021
         XC    GROUPLNG(2),GROUPLNG     SET GROUP LENGTH = 0            50920021
IDMUL325 OI    0(PARM),FIRSTXT          SET FIRST TEXT OF GROUP         50980021
         B     IDMUL340                                                 51040021
IDMUL330 TM    SSWITCH,1               IS GROUPING ALLOWED              51100021
         MVI   SSWITCH,0               RESET SWITCH ANYWAY              51160021
         BO    IDMUL324                NO GROUPING                      51220021
         LH    WORK3,GROUPLNG          SWITCH OFF,ALLOW GROUPING        51280021
         LTR   WORK3,WORK3              IS GROUP LENGTH = 0             51340021
         BZ    IDMUL325                 YES                             51400021
IDMUL340 OI    2(WORK1),TEXTDONE        MARK TEXT PROCESSED             51460021
         OI    0(PARM),INUSE            MARK TXTCB  IN USE              51520021
*                                                                     * 51580021
*     CALC. BEGINNING AND END TEXT ADDRESS FOR TEXT CTRL. BLK         * 51640021
*                                                                     * 51700021
         TM    0(PARM),FIRSTXT         IS CURR TEXT 1ST OF GROUP        51760021
         BZ    IDMUL345                NO                               51820021
         LA    BRANCHX,IDMUL344                                         51880021
         L     WORK2,12(PARM)          CUR TXTIOT ENTRY OF GROUP        51940021
IDMUL343 S     WORK2,TXTIO                                              52000021
         SRL   WORK2,2                 GET ENTRY NO.                    52060021
         MH    WORK2,SEVEN                                              52120021
         A     WORK2,TNLS2             CORRES. NOTELIST ENTRY           52180021
         BR    BRANCHX                                                  52240021
IDMUL344 MVC   PREVBEG+1(3),2(WORK2)                                    52300021
IDMUL345 MVC   5(3,PARM),PREVBEG+1     GET BEG. TEXT ADDR               52360021
         LA    BRANCHX,IDMUL347                                         52420021
         L     WORK2,12(PARM)                                           52480021
         B     IDMUL343                                                 52540021
IDMUL347 MVC   9(3,PARM),2(WORK2)      TEXT ADDR OF CURR OF GROUP       52600021
         MVC   TEMP(2),5(WORK2)        CALC END ADDR                    52660021
         LH    WORK2,TEMP                                               52720021
         A     WORK2,8(PARM)                                            52780021
         ST    WORK2,8(PARM)           SAVE AS TEXT END ADDR            52840021
*                                                                     * 52900021
*                    SET-UP FOR NEXT LOOK-AHEAD                       * 52960021
*                                                                     * 53020021
         CLC   SRCHMULT(2),HIGHMULT     IS MULT = HIGHEST MULT.         53080021
         BNE   IDMUL350                 NO                              53140021
         XC    SRCHMULT(2),SRCHMULT    ZERO SEARCH MULT                 53200021
         LH    WORK3,24(PARM)                                           53260021
         AH    WORK3,GROUPLNG                                           53320021
         STH   WORK3,GROUPLNG           UPDATE  GROUP LENGTH            53380021
         STH   WORK3,26(PARM)           PUT ACCUM. GROUP LENGTH IN CB   53440021
         L     WORK3,IDBEG                                              53500021
         LA    WORK3,4(WORK3)                                           53560021
         ST    WORK3,SRCHBEG            SET SRCHBEG TO NEXT ENTRY       53620021
         TM    0(WORK8),X'40'          IS ID LAST ID WITH TEXT IN SEG   53680021
         BZ    IDMUL348                NO                               53740021
         OI    0(PARM),ENDINDIC        SET END INDIC IN TXTCB           53800021
         XC    GROUPLNG(2),GROUPLNG    INIT GROUP CT. FOR NEXT SEG.     53860021
         CLC   SRCHSEG(2),ENSPC        IS SEGMENT LAST SEGMENT          53920021
         BNE   IDMUL348                NO                               53980021
         OI    0(PARM),MODULEND        SET LAST TEXT OF MODULE          54040021
IDMUL348 CLC   HIGHMULT(2),ZERO        CAN CURR. TXT BE GROUPED WITH    54100021
*                                        NEXT TEXT                      54160021
         BZ    IDMUL130                YES                              54220021
         OI    0(PARM),LASTXT          NO                               54280021
         XC    GROUPLNG(2),GROUPLNG    ZERO GROUP LENGTH                54340021
         B     IDMUL130                 GO TO RETURN                    54400021
IDMUL350 LH    WORK3,SRCHMULT                                           54460021
         LA    WORK3,1(WORK3)                                           54520021
         STH   WORK3,SRCHMULT           UPDATE SEARCH MULT              54580021
         MVC   26(2,PARM),24(PARM)     SET GROUP LENGTH = MULT.SIZE     54640021
         OI    0(PARM),LASTXT           SET LAST TEXT FOR GROUP INDIC.  54700021
         XC    GROUPLNG(2),GROUPLNG     ZERO GROUP LENGTH               54760021
         MVC   SRCHBEG(4),IDBEG                                         54820021
         B     IDMUL130                 GO TO RETURN                    54880021
*                                                                     * 54940021
*                   CONSTANTS                                         * 55000021
SAVEREG1 DS    7F                 SAVE AREA                             55060021
SAV10    DS    10F                     SAVE REG AREA FOR 1 TXT   S01904 55120021
BYTCTRRD EQU   *                       CONTROL RECORD FOR 1 BYT  S01904 55180021
         DC    20X'00'                 ZERO OUT RECORD           S01904 55240021
         ORG   BYTCTRRD                                          S01904 55300021
         DC    X'01'                   SET TXT TO FOLLOW INDIC.  S01904 55360021
         ORG   BYTCTRRD+5                                        S01904 55420021
         DC    X'04'                   SET NO BYTES ESD ID       S01904 55480021
         ORG   BYTCTRRD+8                                        S01904 55540021
         DC    X'06'                   SET READ CCW FOR FETCH    S01904 55600021
         ORG   BYTCTRRD+12                                       S01904 55660021
         DC    X'40'                   SET FLAG FIELD FOR FETCH  S01904 55720021
         ORG   BYTCTRRD+15                                       S01904 55780021
         DC    X'01'                   PUT LENGTH IN CCW         S01904 55840021
         ORG   BYTCTRRD+19                                       S01904 55900021
         DC    X'01'                   LENGTH OF RECORD          S01904 55960021
TXTBYT   EQU   *                       ONE BYTE OF TEXT          S01904 56020021
         DC    X'00'                   INITIALIZE TO ZERO        S01904 56080021
SAVESTOR DS    1F                      TO SAVE WORK1 IN SEGNO           56140021
ZERO     DC    X'0000'                                                  56200021
ONE      DC    H'1'                                                     56260021
FOUR     DC    H'4'                                                     56320021
FIVE     DC    H'5'                                                     56380021
SIX      DC    F'6'                                                     56440021
SRCHSEG  DC    H'0'                     SEGMENT NO. BEING SEARCHED      56500021
SRCHID   DC    H'0'                     ID BEING SEARCHED               56560021
SRCHMULT DC    H'0'                     MULT. BEING SEARCHED            56620021
PARMSA   DC    F'0'                     SAVE AREA FOR PARM      OZ04724 56670037
OUTCB1   DC    V(OTRLDCB1)              RLD OUTPUT CONTROL BLOCKS       56680021
OUTCB2   DC    V(OTRLDCB2)                                              56740021
OUTCB3   DC    V(OTRLDCB3)                                              56800021
INCB1    DC    V(INRLDCB1)              RLD INPUT CONTROL BLOCKS        56860021
INCB2    DC    V(INRLDCB2)                                              56920021
ADREL    DC    V(HEWLFREL)              RELOCATION ROUTINE              56980021
RELOC    DC    V(RELOCATE)             ENTRY IN HEWLFREL FOR RELOC.     57040021
ADENTAB  DC    V(SCDENTAB)                                              57100021
ADFINAL  DC    V(HEWLFFNL)              FINAL PROCESSOR                 57160021
ADSIO    DC    A(HEWLFSIO)             ADDR OF IEWLMSIO                 57220021
ZEROS3   DC   F'0'                     ZERO TEST FLD      OX4565,OY3055 57270002
MOVE     MVC   16(0,WORK3),0(WORK2)     MOVE ID-LENGTH LIST TO BEG. OF  57280021
*                                            RLD OUTPUT BUFFER          57340021
***                                                                 *** 57400021
*                       SAVE AREAS                                    * 57460021
***                                                                 *** 57520021
LSTMULSS DC    H'0'                                                     57580021
SSWITCH  DC    H'0'                                                     57640021
*                                      BITS FOR SSWITCH+ON1             57700021
SEGNO    EQU   X'80'                   SEG # NOT = 1+LAST SEG #         57760021
SEGNOOFF EQU   X'7F'                   TURN SEGNO BIT OFF               57820021
         DS    0F                                                       57880021
DBLWRDDD DC    X'FFFFFFF8'                                              57940021
RLDION   DS    1F                       RLD NOTELIST ENTRY ADDR.        58000021
LASTBUF  DS    1F                      CB ADDR OF LAST BUFFER FILLED    58060021
TTRPOINT DC    F'0'                    SAVE AREA FOR TTR0 FOR POINT     58120021
RETURNRG DS    1F                      SAVE AREA FOR RETURN REG         58180021
TEMP     DS    1H                       TEMP STORAGE AREA               58240021
HIGHMULT DS    1H                       HIGHEST MULT. FOR ID            58300021
LSTMULSZ DC    H'0'                    SAVE AREA FOR LAST MULT SIZE     58360021
CURRGN   DS    XL1                TEMP. STORAGE FOR REGION NO.          58420021
*                                          ROUTINES                     58480021
PATCH    DS    25F     ********PATCH AREA   **************************  58540021
         HEWAPT                                                         58600021
*                                                                     * 58660021
*                   APT  REDEFINITIONS                                * 58720021
*                                                                     * 58780021
CURENTAB EQU   IOCT                     HESD ADDR.OF NEXT ENTAB ENTRY   58840021
LKAENTAB EQU   IOCT+4                   ENTAB LKA                       58900021
ENTABSEG EQU   IOCT+8                   ENTAB SEGMENT NUMBER            58960021
GROUPLNG EQU   IOCT+10                  ACCUMULATED GROUP LENGTH        59020021
CCWDISP  EQU   IOCT+12                  CCW DISPLACEMENT                59080021
CBTOUSE  EQU   IOCT+20                  CTRL.BLK.ADDR.FOR BFR.WITH      59140021
*                                            SPLIT RLD                  59200021
CURSEG   EQU   EPSM                     CURRENT SEGMENT                 59260021
CURID    EQU   EPSM+4                   CURREND ID                      59320021
CURMULT  EQU   EPSM+6                   CURRENT MULTIPLICITY            59380021
TEMPSTOR EQU   SPACES                   SAVE AREA FOR I/O SUBROUTINES   59440021
CONTSAVE EQU   SPACES+28                TEMP SAVE AREA FOR CTRL. INFO.  59500021
TXTIOEND EQU   SPACES+44                END ADDR.OF TXT I/O TABLE       59560021
ENDRLDNT EQU   SPACES+48                END ADDR.OF RLD NOTELIST+1      59620021
IDBEG    EQU   SPACES+52                WHERE TO RESUME SEARCH OF       59680021
*                                            TXTIOT FOR NEW MULT.OF ID  59740021
SRCHBEG  EQU   SPACES+56                WHERE TO RESUME SEARCH OF       59800021
*                                            TXTIOT FOR NEW ID          59860021
CURENTRY EQU   SPACES+60               FIRST FREE ADDR IN ENTRY LIST    59920021
FREEADDR EQU   SPACES+64               FIRST FREE ADDR IN TEXT BUFFER   59980021
PREVBEG  EQU   SPACES+68               ADDR OF 1ST TEXT OF GROUP        60040021
 TITLE  'HEWLFSIO - SECOND PASS I/O'                                    60100021
HEWLFSIO CSECT                                                          60160021
*   *   *  *   *   *   *  *   *   *   *   *   *   *   *   *   *   *   * 60220021
*  THIS CSECT WAS CREATED FROM THE I/O ROUTINES THAT WERE FORMERLY IN * 60280021
*  THE CSECT IEWLMSCD.  THE ROUTINES INCLUDED IN THIS CSECT ARE:      * 60340021
*        WRTTXT: TO WRITE OUT THE TEXT USED BY IEWLMSCD AND           * 60400021
*                IEWLMREL                                             * 60460021
*        WRTCRRLD: TO WRITE OUT CONTROL RLD RECORDS, USED BY          * 60520021
*                IEWLMSCD AND IEWLMREL                                * 60580021
*        CHECKRD: TO CHECK READS, USED BY IEWLMSCD AND IEWLMREL       * 60640021
*        CHECKWRT: TO CHECK THE WRITES, USED BY IEWLMSCD AND          * 60700021
*                IEWLMREL                                             * 60760021
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   * * 60820021
FIRSTOFF EQU   X'F7'                                                    60880021
*                     BYTE 2                                          * 60940021
NOTXDAP  EQU   X'7F'                    REGULAR WRITE NEEDED            61000021
DUMMY    EQU   X'40'                    DUMMY WRITE                     61060021
DUMMYOFF EQU   X'BF'                    REGULAR WRITE                   61120021
*                           BYTE  3                                   * 61180021
RLDIN1   EQU   X'80'                    INPUT BFR1 CONTAINS NEEDED RLDS 61240021
RLDIN2   EQU   X'20'                    INPUT BFR2 CONTAINS NEEDED RLDS 61300021
***         TEXT  I/O TABLE  INDICATORS                             *** 61360021
BADLNG   EQU   X'08'                   CORRES. NOTELIST ENTRY HAS       61420021
*                                             INCORRECT LENGTH          61480021
HZERO    EQU   X'FF'                   TEST FOR ZERO            OZ06707 61510037
***      RLD  NOTELIST INDICATORS                                   *** 61540021
*INCORE  EQU   X'80'                    RLDS IN CORE                    61600021
OUTCORE  EQU   X'6F'                                                    61660021
*TTRENTRY EQU  X'40'                   TTR ENTRY                        61720021
*              CONTROL RECORD INDICATORS                              * 61780021
*        APT3  SWITCH INDICATORS                                      * 61840021
*FIRSTXT EQU   X'08'                    FIRST TEXT OF LOAD MODULE       61900021
NRLD1TXT EQU   X'01'                    ONE TEXT REC - NO RLDS          61960021
*                                                                     * 62020021
*                        REGISTER USAGE                               * 62080021
*                                                                     * 62140021
R10      EQU   10                                                       62200021
R11      EQU   11                                                       62260021
R12      EQU   12                                                       62320021
R13      EQU   13                                                       62380021
R14      EQU   14                                                       62440021
R15      EQU   15                                                       62500021
ZRO      EQU   0                                                        62560021
ON1      EQU   1                                                        62620021
FOR      EQU   4                                                        62680021
EIGHT    EQU   8                                                        62740021
TWELVE   EQU   12                                                       62800021
TWENTY4  EQU   24                                                       62860021
         ENTRY WRTTXT                                                   62920021
         ENTRY WRTCRRLD                                                 62980021
         ENTRY CHECKRD                                                  63040021
         ENTRY CHECKWRT                                                 63100021
SIO0010  EQU   *                                                        63160021
         SAVE  (14,12),T,*              SAVE REGS AND NAME CSECT        63220021
***    *     *     *    *    *    *    *    *    *    *    *    *   *** 63280021
*                                                                     * 63340021
*             ROUTINE TO SET-UP AND READ TEXT                           63400021
*                                                                     * 63460021
***    *     *     *    *    *    *    *    *    *    *    *    *   *** 63520021
RDTXT    EQU   *                                                        63580021
         STM   R14,R12,TWELVE(R13)     SAVE REGS                        63640021
         BALR  R10,ZRO                  *  *  *  *  *  *  *  *  *  *  * 63700021
         LA    R11,RDTXT-SIO0010+6      *  ESTABLISH ADDRESSIBILITY   * 63760021
         SR    R10,R11                  *  *  *  *  *  *  *  *  *  *  * 63820021
         ST    R13,SIOSAVE1+FOR         *                             * 63880021
         LR    R15,R13                  *  ESTABLISH SAVE AREAS       * 63940021
         LA    R13,SIOSAVE1             *                             * 64000021
         ST    R13,EIGHT(R15)           *  *  *  *  *  *  *  *  *  *  * 64060021
         L     WORK1,12(PARM)           CURRENT TXTIOT ENTRY            64120021
         L     WORK2,TXTIO                                              64180021
         LNR   WORK2,WORK2                                              64240021
         AR    WORK2,WORK1                                              64300021
         SRL   WORK2,2                                                  64360021
         MH    WORK2,SEVEN                                              64420021
         A     WORK2,TNLS2              CORRES. NOTELIST ENTRY          64480021
         MVC   CURTXTAD+1(3),2(WORK2)  BFR. ADDR. FOR OUT-OF ORDER READ 64540021
         CLR   PARM,CURTXTCB            LOOKAHEAD OR PRIME READ         64600021
         BE    RDTXT30                  PRIME READ                      64660021
*                                                                     * 64720021
*              CHECK ANY UNCHECKED READS                              * 64780021
*                                                                     * 64840021
         TM    0(CURTXTCB),BEINGRD      LOOKAHEAD READ INITIATED        64900021
         BZ    RDTXT50                  NO                              64960021
         NI    0(CURTXTCB),RDCHKD                                       65020021
         B     RDTXT40                                                  65080021
RDTXT30  TM    0(NXTTXTCB),BEINGRD                                      65140021
         BZ    RDTXT50                  NO                              65200021
         NI    0(NXTTXTCB),RDCHKD                                       65260021
RDTXT40  BAL   BRANCHX,CHCKRD2          YES GO TO CHECK THE READ        65320021
RDTXT50  TM    2(WORK1),INCORE          IS TEXT IN CORE                 65380021
         BO    RDTXT69                  YES,GO TO READ OUT-     XA05128 65440003
*                                       OF-ORDER TEXT           XA05128 65490003
         L     PARM,FREEADDR            1ST FREE ADDR. IN BUFFER        65500021
         BAL   BRANCHX,SCDREAD          BRANCH TO READ TEXT             65560021
         L     PARM,SIOSAVE1+FOR       PICK UP TXT CONTROL BLOCK        65620021
         L     PARM,TWENTY4(PARM)      ADDRESS                          65680021
         OI    0(PARM),BEINGRD          SET BEING READ INDIC.           65740021
         L     WORK1,16(PARM)           1ST TXTIOT ENTRY                65800021
         L     WORK2,TXTIO                                              65860021
         LNR   WORK2,WORK2                                              65920021
         AR    WORK2,WORK1                                              65980021
         SRL   WORK2,2                                                  66040021
         MH    WORK2,SEVEN                                              66100021
         A     WORK2,TNLS2              CORRES. NOTELIST ENTRY          66160021
         L     WORK3,FREEADDR           GET 1ST FREE ADDR.BEORE READ    66220021
RDTXT60  OI    2(WORK1),INCORE          MARK TEXT IN CORE               66280021
         MVC   2(3,WORK2),FREEADDR+1    STORAGE ADDR. OF TEXT           66340021
         CL    WORK1,12(PARM)           LOOKING AT CURRENT ENTRY        66400021
         BNE   RDTXT65                  NO                              66460021
         MVC   CURTXTAD+1(3),2(WORK2)  BFR.ADDR.FOR OUT-OR-ORDER READS  66520021
         TM    2(WORK1),BADLNG         IS LENGTH INCORRECT              66580021
         BZ    RDTXT65                 NO                               66640021
         MVC   5(2,WORK2),LSTMULSZ      CORRECT LENGTH IN NOTELIST      66700021
RDTXT65  MVC   TEMP(2),5(WORK2)        MOVE TEXT LENGTH FOR ALIGN.      66760021
         AH    WORK3,TEMP               UPDATE STORAGE ADDR.            66820021
         ST    WORK3,FREEADDR           SAVE FOR MVC                    66880021
         CL    WORK1,20(PARM)          IS THIS LAST ENTRY IN GROUP      66940021
         BE    RDTXT69                  YES                     ZA01410 67000002
         LA    WORK1,4(WORK1)           UPDATE TO NEXT TXTIOT ENTRY     67060021
         LA    WORK2,7(WORK2)          UPDATE TO NEXT NOTELIST ENTRY    67120021
         B     RDTXT60                                                  67180021
RDTXT69  CL    WORK1,12(,PARM)         TEST IF CURRENT TXTIO    XA05128 67230003
         BE    RDTXT70                 BRANCH IF SO             XA05128 67232003
         TM    2(WORK1),BADLNG         TEST IF INCORRECT LENGTH XA05128 67234003
         BZ    RDTXT70                 BRANCH IF NOT            XA05128 67236003
         MVC   5(2,WORK2),LSTMULSZ     UPDATE MULT LENGTH       XA05128 67238003
*              SEARCH  FOR OUT-OF-ORDER TEXT                          * 67240021
RDTXT70  TM    2(WORK1),OUTORDER        IS ENTRY MARKED OUT-OF-ORDER    67300021
         BZ    RDTXT90                  NO                              67360021
         TM    2(WORK1),INCORE         IS TXT IN CORE                   67420021
         BO    RDTXT90                YES                               67480021
         CLC   0(2,WORK1),SRCHID        IS ID = CURRENT ID              67540021
         BNE   RDTXT90                 NO                               67600021
         MVC   TEMP(2),2(WORK1)                                         67660021
         NI    TEMP,X'03'                                               67720021
         CLC   TEMP(2),SRCHMULT         IS MULT = CURRENT MULT          67780021
         BNE   RDTXT90                                                  67840021
         CLC   HIGHMULT(2),SRCHMULT    TEST IF LAST MULT        XA05128 67890003
         BE    RDTXT75                 BRANCH IF IT IS          XA05128 67892003
         L     PARM,SIOSAVE1+FOR       GET SAVE AREA POINTER    XM09099 67892403
         L     PARM,TWENTY4(PARM)      RESTORE PARM VALUE       XM09099 67892803
         L     BRANCHX,12(,PARM)       GET CURRENT TXTIO PTR    XA05128 67894003
         S     BRANCHX,TXTIO           CALC TXTIO OFFSET        XA05128 67896003
         SRL   BRANCHX,2               CALC CESD ID             XA05128 67898003
         MH    BRANCHX,SEVEN           CALC TXT NOTE LST OFFSET XA05128 67898403
         A     BRANCHX,TNLS2           CALC TXT NOTE LST PTR    XA05128 67898803
         CLC   MULTSIZE+2(2),5(BRANCHX)  TEST IF MULT FULL SIZE XM19517 67899203
         BE    RDTXT75                 BRANCH IF IT IS          XA05128 67899603
         MVC   TEMP(2),5(BRANCHX)      GET LENGTH OF MULT       XA05128 67899703
         LH    PARM,TEMP               ACCUMULATE IT            XA05128 67899803
         MVC   TEMP(2),5(WORK2)        GET EXPAND TEXT LENGTH   XA05128 67899903
         AH    PARM,TEMP               ACCUMULATE SUM           XA05128 67919903
         STH   PARM,TEMP               SAVE SUM                 XA05128 67929903
         TM    PDSE8,DC                IS DC SPECIFIED          ZA02253 67931937
         BO    RDTXT74                 NO  BRANCH               ZA02253 67933937
         TM    TEMP,DCLGTH             IS LENGTH X'400'         ZA02253 67935937
         BZ    RDTXT74                 NO BRANCH                ZA02253 67937937
         NC    TEMP(2),DCREST          ZERO LOW BYTE OF COUNT   ZA02253 67938337
RDTXT74  MVC   5(2,BRANCHX),TEMP       PUT SUM IN TXT NOTE LST  XA05128 67939937
RDTXT75  EQU   *                                                XA05128 67946603
         MVC   TTRPOINT(3),2(WORK2)    TTR  FOR  POINT                  67953303
         MVC   TEMP(2),0(WORK2)        MOVE DISP. FOR ALIGNMENT         67960021
         L     PARM,SIOSAVE1+FOR       PICK UP TXT CONTROL BLOCK        68020021
         L     PARM,TWENTY4(PARM)      ADDRESS                          68080021
         TM    0(PARM),BEINGRD         ANY OUTSTANDING READ             68140021
         BZ    RDTXT80                 NO, GO TO READ                   68200021
         BAL   BRANCHX,CHCKRD2         YES, CHECK IT                    68260021
         NI    0(PARM),RDCHKD          MARK READ CHECKED                68320021
RDTXT80  L     PARM,CURTXTAD           ADDR OF TEXT                     68380021
         AH    PARM,TEMP                READ ADDR.                      68440021
         BAL   BRANCHX,SCDREAD          BRANCH TO READ OUT-OF-ORDER TXT 68500021
         BAL   BRANCHX,CHCKRD2         CHECK READ                       68560021
         CL   WORK1,12(PARM)           LOOKING AT CURRENT ENTRY OZ06707 68570037
         BE    RDTXT90                  YES                    @OZ06707 68580037
         TM    14(PARM),BADLNG          LENGTH INCORRECT        OZ06707 68581037
         BZ    RDTXT90                  NO. BRANCH             @OZ06707 68582037
         TM    15(PARM),HZERO           MULTIPLE EQ ZERO        OZ06707 68586037
         BM    RDTXT90                  NO. BRANCH              OZ06707 68588037
         TM    3(WORK1),HZERO           MULTIPLE EQ ZERO        OZ06707 68590037
         BZ    RDTXT90                  NO. BRANCH              OZ06707 68592037
         CLC   12(4,PARM),16(PARM)      CURRENT TXTIO EQ FIRST  OZ06707 68594037
         BNE   RDTXT90                  NO. BRANCH              OZ06707 68596037
         CLC   12(4,PARM),20(PARM)      CURRENT TXTIO EQ LAST   OZ06707 68598037
         BE    RDTXT90                  YES BRANCH              OZ06707 68600037
         ST    PARM,PARMSA              SAVE PARM              @OZ06707 68610037
         MVC   TEMP(2),5(WORK2)         GET EXPAND LENGTH       OZ04724 68612037
         L     PARM,FREEADDR            GET FREEADDR            OZ04724 68614037
         AH    PARM,TEMP                ADD EXPAND LENGTH       OZ04724 68616037
         ST    PARM,FREEADDR            STORE UPDATED ADDRESS   OZ04724 68618037
         L     PARM,PARMSA              RESTORE PARM            OZ04724 68618437
RDTXT90  LA    WORK1,4(WORK1)           UPDATE TO NEXT TXTIOT ENTRY     68620021
         LA    WORK2,7(WORK2)           UPDATE TO NEXT NOTELIST ENTRY   68680021
         CL    WORK1,TXTIOEND           AT END OF TEXT I/O TABLE        68740021
         BNH   RDTXT70                 NO                               68800021
         B     SIOEXIT1                 RETURN                          68860021
*                                                                     * 68920021
*                                                                     * 68980021
*              ROUTINE TO SET-UP AND READ RLD'S                       * 69040021
*                                                                     * 69100021
*                                                                     * 69160021
RDRLD    EQU   *                                                        69220021
         STM   R14,R12,TWELVE(R13)     SAVE REGS                        69280021
         BALR  R10,ZRO                  *  *  *  *  *  *  *  *  *  *  * 69340021
         LA    R11,RDRLD-SIO0010+6      *  ESTABLISH ADDRESSIBILITY   * 69400021
         SR    R10,R11                  *  *  *  *  *  *  *  *  *  *  * 69460021
         ST    R13,SIOSAVE1+FOR         *                             * 69520021
         LR    R15,R13                  *  ESTABLISH SAVE AREAS       * 69580021
         LA    R13,SIOSAVE1             *                             * 69640021
         ST    R13,EIGHT(R15)           *  *  *  *  *  *  *  *  *  *  * 69700021
         NI    NEWSW2,MOREOFF          SET MORE RLDS INDIC OFF          69760021
         LR    WORK1,PARM               SAVE CURRENT NOTELIST ENTRY   * 69820021
         TM    2(WORK1),INCORE          IS NEEDED RECORD IN CORE        69880021
         BO    RDRLD30                 YES                              69940021
         L     WORK3,INCB1              RLD INPUT BUFFER 1 IN USE       70000021
         TM    0(WORK3),INUSE                                           70060021
         BZ    RDRLD60                  NO                              70120021
         L     WORK3,INCB2             RLD INPUT BFR. 2 IN USE          70180021
         TM    0(WORK3),INUSE                                           70240021
         BZ    RDRLD60                  NO                              70300021
         NI    0(WORK3),NOTINUSE        YES, FREE BUFFER 2              70360021
         L     WORK2,8(WORK3)           ADDR OF 1ST NOTELIST ENTRY      70420021
RDRLD20  NI    2(WORK2),OUTCORE         MARK ENTRY NOT IN CORE          70480021
         CL    WORK2,16(WORK3)          ALL ENTRIES MARKED NOT IN CORE  70540021
         BE    RDRLD60                  YES                             70600021
         LA    WORK2,9(WORK2)           INCR. TO NEXT NOTELIST ENTRY    70660021
         B     RDRLD20                                                  70720021
*                                                                     * 70780021
*        RLD ENTRY IN CORE - ADD PERTINENT DATA TO CONTROL BLOCKS     * 70840021
RDRLD30  TM    2(WORK1),BUF2            RLD'S IN BUFFER 2               70900021
         BZ    RDRLD40                  NO                              70960021
         OI    2(CURTXTCB),RLDIN2       BUFFER 2 USED IN TXT CTRL BLK   71020021
         L     WORK3,INCB2              GET CTRL BLK ADDR FOR BFR2      71080021
         B     RDRLD60                                                  71140021
RDRLD40  OI    2(CURTXTCB),RLDIN1       BUFFER 1 USED IN TXT CTRL BLK   71200021
         L     WORK3,INCB1              GET CTRL BLK ADDR FOR BFR1      71260021
RDRLD60  ST    WORK1,12(WORK3)          PUT CURR.NOTELIST ENTRY IN CB   71320021
RDRLD70  CL    WORK1,RNLS2             IS IT THE 1ST NOTELIST ENTRY     71380021
         BE    RDRLD80                 YES                              71440021
         SH    WORK1,NINE               NO                              71500021
         TM    2(WORK1),TTRENTRY        IS IT A TTR ENTRY               71560021
         BZ    RDRLD70                 NO                               71620021
         LA    WORK1,9(WORK1)           YES                             71680021
RDRLD80  ST    WORK1,8(WORK3)          BEG. NOTELIST ENTRY FOR GROUP    71740021
RDRLD90  CL    WORK1,ENDRLDNT          SINGLE NOTELIST ENTRY?    A32340 71800021
         BC    10,RDRLD200             YES--RETURN               A32340 71860021
         TM    2(WORK1),TTRENTRY       IS IT A TTR ENTRY         A32340 71920021
         BO    RDRLD100                YES                              71980021
         LA    WORK1,9(WORK1)           NO, INCR. TO NEXT ENTRY         72040021
         B     RDRLD90                                                  72100021
RDRLD100 ST    WORK1,16(WORK3)         END NOTELIST ENTRY FOR GROUP     72160021
         MVC   TTRPOINT(3),6(WORK1)    SAVE TTR OR STORAGE ADDR         72220021
         TM    2(WORK1),INCORE         ARE RLDS IN CORE                 72280021
         BO    RDRLD150                YES                              72340021
         TM    0(NXTTXTCB),BEINGRD      ANY UNCHECKED TEXT READS        72400021
         BZ    RDRLD110                 NO                              72460021
         BAL   BRANCHX,CHCKRD2          YES, CHECK TEXT READ            72520021
         NI    0(NXTTXTCB),RDCHKD      MARK READ CHECKED                72580021
RDRLD110 L     PARM,4(WORK3)            BEGINNING OF BUFFER             72640021
         BAL   BRANCHX,SCDREAD          READ RLD RECORD                 72700021
         BAL   BRANCHX,CHCKRD2          CHECK RLD RECORD READ           72760021
         L     WORK2,8(WORK3)           START OF NOTELIST ENTRIES       72820021
         OI    0(WORK3),INUSE           MARK CTRL.BLK. IN USE           72880021
RDRLD120 OI    2(WORK2),INCORE          SET RLD'S IN CORE INDICATOR     72940021
         TM    0(WORK3),BUF2            ARE RLD'S IN BUFFER 2           73000021
         BZ    RDRLD130                 NO                              73060021
         OI    2(WORK2),BUF2            YES, SET BUFFER 2 INDICATOR     73120021
         OI    2(CURTXTCB),RLDIN2       BFR2 CONTAINS RLD'S             73180021
         B     RDRLD140                                                 73240021
RDRLD130 OI    2(CURTXTCB),RLDIN1       BFR1 CONTAINS RLD'S             73300021
RDRLD140 CL    WORK2,16(WORK3)          LAST NOTELIST ENTRY FOR RECORD  73360021
         BE    RDRLD150                 YES                             73420021
         LA    WORK2,9(WORK2)           NO, INCR. TO NEXT ENTRY         73480021
         B     RDRLD120                                                 73540021
*                                                                     * 73600021
*     UPDATE TO NEXT GROUP OR END OF RLD NOTELIST                     * 73660021
*                                                                     * 73720021
RDRLD150 L     WORK1,16(WORK3)          END OF CURRENT NOTELIST GROUP   73780021
         LA    WORK1,9(WORK1)           UPDATE TO NEXT ENTRY            73840021
RDRLD160 CL    WORK1,ENDRLDNT           END OF NOTELIST                 73900021
         BH    RDRLD200                YES, RETURN                      73960021
*        CHECK FOR MORE RLD RECORDS FOR CURRENT TEXT                  * 74020021
         CLC   0(2,WORK1),CURID         DOES ENTRY ID = CURRENT ID      74080021
         BNE   RDRLD180                 NO                              74140021
         MVC   TEMP(2),2(WORK1)         YES, DOES ENTRY MULT=CURR.MULT  74200021
         NI    TEMP,X'03'                                               74260021
         CLC   TEMP(2),CURMULT                                          74320021
         BE    RDRLD190                 YES                             74380021
RDRLD180 LA    WORK1,9(WORK1)           NO, INCR TO NEXT NOTELIST ENTRY 74440021
         B     RDRLD160                                                 74500021
*      CHECK IF ALL NEEDED RLDS CAN BE ACCOMMODATED IN INPUT BUFFERS  * 74560021
RDRLD190 TM    2(WORK1),INCORE          IS RLD RECORD IN CORE           74620021
         BO    RDRLD30                  YES                             74680021
         L     WORK3,INCB1                                              74740021
         TM    0(WORK3),INUSE           IS BUFFER 1 IN USE              74800021
         BZ    RDRLD60                  NO, GO TO READ IN RECORD        74860021
         L     WORK3,INCB2              IS BUFFER 2 IN USE              74920021
         TM    0(WORK3),INUSE                                           74980021
         BZ    RDRLD60                  NO,GO TO READ IN RECORD         75040021
         ST    WORK1,RLDION             SAVE ADDR FOR LATER READ        75100021
         OI    NEWSW2,MORERLDS          SET MORE RLDS INDICATOR         75160021
RDRLD200 EQU   *                                                        75220021
         B     SIOEXIT1                 RETURN                          75280021
***  *   *     *    *    *    *    *    *    *    *    *    *    *  *** 75340021
*                                                                     * 75400021
*              SET-UP ROUTINE FOR THE WRITING OF TEXT                 * 75460021
*                                                                     * 75520021
***  *   *     *    *    *    *    *    *    *    *    *    *    *  *** 75580021
WRTTXT   EQU   *                                                        75640021
         STM   R14,R12,TWELVE(R13)     SAVE REGS                        75700021
         BALR  R10,ZRO                  *  *  *  *  *  *  *  *  *  *  * 75760021
         LA    R11,WRTTXT-SIO0010+6     *  ESTABLISH ADDRESSIBILITY   * 75820021
         SR    R10,R11                  *  *  *  *  *  *  *  *  *  *  * 75880021
         ST    R13,SIOSAVE1+FOR         *                             * 75940021
         LR    R15,R13                  *  ESTABLISH SAVE AREAS       * 76000021
         LA    R13,SIOSAVE1             *                             * 76060021
         ST    R13,EIGHT(R15)           *  *  *  *  *  *  *  *  *  *  * 76120021
         L     WORK9,SYSLMDCB           ADDR. OF SYSLMOD DCB            76180021
         LH    WORK2,26(CURTXTCB)      RECORD LENGTH                    76240021
         L     WORK3,4(CURTXTCB)        TEXT BEGINNING                  76300021
*        CHECK  FOR ANY  UNCHECKED WRITES                             * 76360021
         L     WORK1,OUTCB1             CHECK IF ANY RLD OUTPUT BFRS.   76420021
         TM    0(WORK1),BEINGWT              ARE  BEING WRITTEN         76480021
         BO    WRTTXT10                                                 76540021
         L     WORK1,OUTCB2                                             76600021
         TM    0(WORK1),BEINGWT                                         76660021
         BO    WRTTXT10                                                 76720021
         L     WORK1,OUTCB3                                             76780021
         TM    0(WORK1),BEINGWT                                         76840021
         BZ    WRTTXT20                                                 76900021
WRTTXT10 BAL   BRANCHX,CHCKWT2          CHECK UNCHECKED WRITE           76960021
         NI    0(WORK1),WRTCKD          TURN OFF BEING WRT. AND IN USE  77020021
WRTTXT20 TM    1(CURTXTCB),XDAP         IS XDAP WRITE NEEDED            77080021
         BO    WRTTXT99                 YES, GO TO ISSUE XDAP           77140021
         TM    PDSE7,OVLY              IS OVERLAY SPECIFIED             77200021
         BZ    WRTTXT30                NO                               77260021
         TM    APT3,SEGSTART           YES, IS THIS 1ST TXT OF SEG      77320021
         BZ    WRTTXT30                 NO                              77380021
         NI    APT3,SEGOFF              TURN OFF FIRST TEXT OF SEG.     77440021
         BAL   BRANCHX,NOTEMCRO         BRANCH TO GET TTR               77500021
         LH    WORK1,CURSEG                                             77560021
         SLL   WORK1,2                                                  77620021
         A     WORK1,TTRLIST            ADDR. OF TTR LIST ENTRY FOR SEG 77680021
         ST    PARM,0(WORK1)            MAKE ENTRY FOR CURR. SEG.       77740021
WRTTXT30 BAL   BRANCHX,SCDWRITE         GO TO WRITE TEXT                77800021
         OI    0(CURTXTCB),BEINGWT                                      77860021
         TM    1(CURTXTCB),DUMMY        IS THIS A DUMMY WRITE           77920021
         BZ    WRTTXT40                 NO                              77980021
         BAL   BRANCHX,CHCKWT2          CHECK WRITE OF TEXT             78040021
         NI    0(CURTXTCB),WRTCKD                                       78100021
         BAL   BRANCHX,NOTEMCRO         CONVERT DISK ADDR.TO TTR        78160021
         AH    PARM,NEXTTTR                                             78220021
         ST    PARM,TTRPOINT                                            78280021
         MVC   CONTSAVE(16),4(WORK9)    SAVE DCB INFO. BEFORE POINT     78340021
         STM   RETURN,PARM,TEMPSTOR    SAVE REG BEFORE POINT            78400021
         L     PARM,SYSLMDCB                                            78460021
         POINT (1),TTRPOINT                                             78520021
         LM    RETURN,PARM,TEMPSTOR    SAVE REG BEFORE POINT            78580021
         MVC   XDAPBLOK+36(8),5(WORK9)  DISK ADDR. TO XDAP ECB          78640021
         MVC   4(16,WORK9),CONTSAVE     RESTORE BSAM INFO TO DCB        78700021
         NI    1(CURTXTCB),DUMMYOFF     TURN DUMMY WRITE OFF            78760021
WRTTXT40 TM    APT3,FIRSTXT             IS THIS FIRST TXT OF LOAD MOD.  78820021
         BZ    WRTTXT90                 NO, BRANCH TO RETURN            78880021
         NI    APT3,FIRSTOFF            TURN OFF 1ST TEXT INDIC.        78940021
         TM    PDSE7,OVLY               IS OVERLAY OPTION SPECIFIED     79000021
         BZ    WRTTXT50                NO                               79060021
         L     WORK1,TTRLIST                                            79120021
         LA    WORK1,4(WORK1)                                           79180021
         MVC   0(4,WORK1),PDSE4         MAKE ENTRY FOR SEG.1 IN TTRLIST 79240021
         B     WRTTXT90                 BRANCH TO RETURN                79300021
WRTTXT50 TM    0(CURTXTCB),BEINGWT      HAS TEXT WRITE BEEN CHECKED     79360021
         BZ    WRTTXT60                 YES                             79420021
         BAL   BRANCHX,CHCKWT2          NO, BRANCH TO CHECK IT          79480021
         NI    0(CURTXTCB),WRTCKD       MARK TXTCB NOT IS USE           79540021
WRTTXT60 BAL   BRANCHX,NOTEMCRO         CONVERT DISK ADDR. TO TTR       79600021
         ST    PARM,PDSE4               STORE TTR OF FIRST TXT IN PDS   79660021
         MVC   PDSE10(2),26(CURTXTCB)   LENGTH OF FIRST TXT TO PDS      79720021
WRTTXT70 TM    PDSE7,SCTR               IS SCATTER OPTION SPECIFIED     79780021
         BZ    WRTTXT80                 NO                              79840021
         MVC   PDSE15(2),CURID          YES, ENTER CURR.ID INTO PDS     79900021
WRTTXT80 TM    0(CURTXTCB),MODULEND     IS TEXT LAST IN MODULE          79960021
         BZ    WRTTXT90                 NO, BRANCH TO RETURN            80020021
         TM    APT3,RLDSINGP           ANY RLDS FOR TEXT                80080021
         BO    WRTTXT90                 YES, BRANCH TO RETURN           80140021
         OI    PDSE7,NRLD1TXT           SET NO RLDS -ONE TEXT REC INDIC 80200021
WRTTXT90 EQU   *                                                        80260021
         B     SIOEXIT1                 RETURN                          80320021
WRTTXT99 NI    1(CURTXTCB),NOTXDAP      TURN OFF XDAP INDICATOR         80380021
         STM   RETURN,PARM,TEMPSTOR    SAVE BEFORE XDAP                 80440021
         XDAP  XDAPBLOK,WI,(WORK9),(WORK3),(WORK2),,,MF=E               80500021
         WAIT  1,ECB=XDAPBLOK           WIAT FOR COMPLETION OF XDAP     80560021
         LM    RETURN,PARM,TEMPSTOR    RESTORE REG. AFTER XDAP          80620021
         TM    XDAPBLOK,X'7F'           IS XDAP SUCCESSFUL              80680021
         BO    WRTTXT90                                                 80740021
         L     BRANCH,ADSNX             ADDR. OF ERROR ROUTINE          80800021
         LA    PARM,XDAPBLOK+4         ADDRESS OF IOB                   80860021
         BR    BRANCH                   BRANCH TO ERROR ROUTINE         80920021
         XDAP  XDAPBLOK,WI,,,,,,MF=L    EXPAND XDAP ECB                 80980021
***    *     *     *    *    *    *    *    *    *    *    *    *     * 81040021
*                                                                     * 81100021
*        SET-UP ROUTINE TO WRITE THE CONTROL RECORD OR RLD RECORD     * 81160021
*                                                                     * 81220021
***    *     *     *    *    *    *    *    *    *    *    *    *   *** 81280021
WRTCRRLD EQU   *                                                        81340021
         STM   R14,R12,TWELVE(R13)      SAVE REGS                       81400021
         BALR  R10,ZRO                  *  *  *  *  *  *  *  *  *  *  * 81460021
         LA    R11,WRTCRRLD-SIO0010+6   *  ESTABLISH ADDRESSIBILITY   * 81520021
         SR    R10,R11                  *  *  *  *  *  *  *  *  *  *  * 81580021
         ST    R13,SIOSAVE1+FOR         *                             * 81640021
         LR    R15,R13                  *  ESTABLISH SAVE AREAS       * 81700021
         LA    R13,SIOSAVE1             *                             * 81760021
         ST    R13,EIGHT(R15)           *  *  *  *  *  *  *  *  *  *  * 81820021
         L     WORK3,8(PARM)            GET BEGINNING OF BUFFER         81880021
         TM    0(WORK3),TXT             CR/RLD OR RLD RECORD            81940021
         BZ    RLDWRT10                 GO TO WRITE RLD RECORD          82000021
         MVC   14(2,WORK3),26(CURTXTCB) GROUP LENGTH TO CTRL.REC.       82060021
         OI    8(WORK3),X'06'           SET READ BITS                   82120021
         OI    12(WORK3),X'40'          SET FLAGS                       82180021
         MVC   4(2,WORK3),2(PARM)       ID-LENGTH TO CTRL. REC          82240021
RLDWRT10 LR    WORK2,CURTXTCB           CHECK ANY UNCHECKED WRITES      82300021
         TM    0(WORK2),BEINGWT                                         82360021
         BO    RLDWRT20                                                 82420021
         LR    WORK2,NXTTXTCB                                           82480021
         TM    0(WORK2),BEINGWT                                         82540021
         BO    RLDWRT20                                                 82600021
         L     WORK2,OUTCB1                                             82660021
         TM    0(WORK2),BEINGWT                                         82720021
         BO    RLDWRT20                                                 82780021
         L     WORK2,OUTCB2                                             82840021
         TM    0(WORK2),BEINGWT                                         82900021
         BO    RLDWRT20                                                 82960021
         L     WORK2,OUTCB3                                             83020021
         TM    0(WORK2),BEINGWT                                         83080021
         BZ    RLDWRT40                 GO TO WRITE RECORD              83140021
RLDWRT20 BAL   BRANCHX,CHCKWT2          CHECK PREVIOUS WRITE            83200021
         NI    0(WORK2),WRTCKD          FREE CTRL. BLOCK                83260021
RLDWRT40 LH    WORK2,4(WORK3)           CALC. LENGTH OF RECORD          83320021
         AH    WORK2,6(WORK3)                                           83380021
         LA    WORK2,16(WORK2)                                          83440021
         BAL   BRANCHX,SCDWRITE         BRANCH TO WRITE A RECORD        83500021
         OI    0(PARM),BEINGWT          MARK CTRL.BLK BEING WRITTEN     83560021
         B     SIOEXIT1                 RETURN                          83620021
*                                                                     * 83680021
*                            CHECK  ROUTINE                           * 83740021
*                                                                     * 83800021
CHECKRD  EQU   *                                                        83860021
         STM   R14,R12,TWELVE(R13)      SAVE REGS                       83920021
         BALR  R10,ZRO                  *  *  *  *  *  *  *  *  *  *  * 83980021
         LA    R11,CHECKRD-SIO0010+6    *  ESTABLISH ADDRESSIBILITY   * 84040021
         SR    R10,R11                  *  *  *  *  *  *  *  *  *  *  * 84100021
CHCKRD1  ST    R13,SIOSAVE2+FOR         *                             * 84160021
         LR    R11,R13                  *  ESTABLISH SAVE AREAS       * 84220021
         LA    R13,SIOSAVE2             *                             * 84280021
         ST    R13,EIGHT(R11)           *  *  *  *  *  *  *  *  *  *  * 84340021
         LA    PARM,RDDECB              READ DECB                       84400021
         B     CHECK                                                    84460021
CHCKRD2  SAVE  (14,12),T               SAVE REGS,ENTRY IF FROM IEWLMSIO 84520021
         B     CHCKRD1                 CONTINUE                         84580021
CHECKWRT EQU   *                                                        84640021
         STM   R14,R12,TWELVE(R13)     SAVE REGS                        84700021
         BALR  R10,ZRO                  *  *  *  *  *  *  *  *  *  *  * 84760021
         LA    R11,CHECKWRT-SIO0010+6   *  ESTABLISH ADDRESSIBILITY   * 84820021
         SR    R10,R11                  *  *  *  *  *  *  *  *  *  *  * 84880021
CHCKWT1  ST    R13,SIOSAVE2+FOR         *                             * 84940021
         LR    R11,R13                  *  ESTABLISH SAVE AREAS       * 85000021
         LA    R13,SIOSAVE2             *                             * 85060021
         ST    R13,EIGHT(R11)           *  *  *  *  *  *  *  *  *  *  * 85120021
         LA    PARM,WTDECB              WRITE DECB                      85180021
         B     CHECK                   GO TO CHECK                      85240021
CHCKWT2  SAVE  (14,12),T               SAVE REGS, ENTRY FROM WITHIN SIO 85300021
         B     CHCKWT1                 CONTINUE                         85360021
CHECK    EQU   *                                                        85420021
         CHECK (1)                     CHECK                            85480021
         LM    BRANCHX,PARM,TEMPSTOR   RESTORE REGISTERS                85540021
         B     SIOEXIT2                 RETURN                          85600021
*                                                                     * 85660021
*                                                                     * 85720021
*                        READ  ROUTINE                                * 85780021
*                                                                     * 85840021
*                                                                     * 85900021
SCDREAD  STM   BRANCHX,PARM,TEMPSTOR    SAVE REGS. #11-#1               85960021
         L     PARM,SYSUTDCB                                            86020021
         POINT (1),TTRPOINT                                             86080021
         L     BRANCHX,TEMPSTOR+24     RESTORE READ ADDR.-POINT CHANGED 86140021
         LA    BRANCHX,0(BRANCHX)      ZERO OUT HIGH ORDER BYTE  A30173 86200021
         L     BRANCH,TXTBFEND         PICK UP TXTBUF END ADDR   A30173 86260021
         SR    BRANCH,BRANCHX          TAKE THE DIFFERENCE       A30173 86320021
         C     BRANCH,UT1SIZE          GREATER THAN UT1SIZE?     A30173 86380021
         BNH   SCDREADA                NO, GO TO READ THAT MUCH; A30173 86440021
*   OUT OF ORDER TEXT MAY HAVE ITS RECORD SIZE > ITS ACTUAL SIZE A30173 86500021
         L     BRANCH,UT1SIZE          YES-ONLY READ UP TO MAX.  A30173 86560021
SCDREADA READ  RDDECB,SF,HEWLCUDB,(BRANCHX),(BRANCH)                    86620021
         LM    BRANCHX,PARM,TEMPSTOR    RESTORE REGISTERS               86680021
         BR    BRANCHX                                                  86740021
***    *     *     *    *    *    *    *    *    *    *    *    *   *** 86800021
*                                                                     * 86860021
*                       WRITE   ROUTINE                               * 86920021
*                                                                     * 86980021
***    *     *     *    *    *    *    *    *    *    *    *    *   *** 87040021
SCDWRITE STM   BRANCHX,PARM,TEMPSTOR   SAVE REGISTERS                   87100021
         WRITE WTDECB,SF,HEWLCMDB,(WORK3),(WORK2)                       87160021
         LM    BRANCHX,PARM,TEMPSTOR                                    87220021
         BR    BRANCHX                                                  87280021
*                     ******************                                87340021
*                                                                     * 87400021
NOTEMCRO STM   RETURN,PARM,TEMPSTOR    SAVE REGISTERS                   87460021
         L     PARM,SYSLMDCB                                            87520021
         NOTE  (1)                                                      87580021
         LM    RETURN,WORK0,TEMPSTOR   RESTORE REGISTERS                87640021
         BR    BRANCHX                  RETURN                          87700021
SIOEXIT1 EQU   *                                                        87760021
         L     R13,SIOSAVE1+FOR        RESTORE REG 13                   87820021
SIORETRN EQU   *                                                        87880021
         RETURN (14,12),T              RETURN                           87940021
SIOEXIT2 EQU   *                                                        88000021
         L     R13,SIOSAVE2+FOR        RESTORE REG 13                   88060021
         LM    R14,R12,TWELVE(R13)     RESTORE REGS                     88120021
         BR    R11                     RETURN                           88180021
*********************************************************************** 88240021
*     DECLARES                                                        * 88300021
**********************************************************************  88360021
SAVEREG2 DS    7F                 SAVE AREA                             88420021
PARMSAVE DS    2F                       SAVE AREA FOR REG 1             88480021
SEVEN    DC    H'7'                                                     88540021
NINE     DC    H'9'                     RLD NOTELIST ENTRY SIZE         88600021
NEXTTTR  DC    H'0256'                  TO INCREMENT TTR ADDR           88660021
DCREST   DC    X'FFF8'                 RESET CONSTANT FOR DC    ZA02253 88710037
ADSNX    DC    V(HEWLCRO3)             ERROR ROUTINE                    88720021
SYSLMDCB DC    A(HEWLCMDB)             ADDR OF SYSLMOD DCB              88780021
SYSUTDCB DC    A(HEWLCUDB)             SYSUT1 DCB ADDRESS               88840021
***                                                                 *** 88900021
*                       SAVE AREAS                                    * 88960021
***                                                                 *** 89020021
SIOSAVE1 DS    18F                      REG SAVE AREA FOR EXTERNAL RTNS 89080021
SIOSAVE2 DS    18F                     REG SAVE AREA, INTERNAL RTNS     89140021
CURTXTAD DC    F'0'                    BFR.ADDR OF CURRENT TEXT         89200021
PATCHSIO DS    25F     ********PATCH AREA   **************************  89260021
         END                                                            89320021
*********************************************************************** 89380021
./  ADD  SSI=73070601,NAME=HEWLFSCN
         TITLE    'LINK EDITOR CONTROL CARD SCANNER AND PROCESSOR'      00050021
*                                                                       00100021
*STATUS: CHANGE LEVEL 000                                               00150021
*                                                                       00200021
*FUNCTION/OPERATION    SCANS AND PROCESSES THE'PROGRAMMER PUNCHED CARDS 00250021
*    NAMELY:OVERLAY,REPLACE,LIBRARY,INCLUDE,INSERT,ENTRY,CHANGE,ALIAS,  00300021
*     NAME, SETSSI,  HIARCHY                                          * 00350021
*    SINCE THESE CARDS ARE IN THE GENERAL FORM:                         00400021
*      OPERATION   OPD01(OPD11,OPD12,OPD13...),OPD02,...,(OPD14),...    00450021
*    THE OPERANDS ARE EITHER OUTSIDE PARENTHESIS OR INSIDE.THEY GO      00500021
*    INTO EITHER OPD0 OR OPD0, RESPECTIVELY. DEPENDING ON THE CARD FOR- 00550021
*    -MAT,AN OPERAND IS PLACED IN OPD0,AN OPERAND IS PLACED IN OPD1,    00600021
*    OR BOTH. THEN, THE SCAN IS INTERRUPTED AND THE CORRESPONDING CARD  00650021
*    PROCESSOR IS 'BALR'"D. WHEN CONTROL RETURNS,SCANNING IS RESUMED.   00700021
*    THE PROCESSING CONSISTS IN ONE OF THE FOLLOWING:                   00750021
*    1- ADDING A NEW ITEM IN A CHAIN IN THE CESD (COMPOSITE ESD)        00800021
*    2- FILLING AN INFORMATION INTO THE APT (ALL PURPOSE TABLE),OR      00850021
*       INTO THE PDS DIRECTORY (THE TABLE THAT WILL BE THE PARTITIONED  00900021
*       DATA SET DIRECTORY OF THE OUTPUT MODULE)                        00950021
*    3- OPERATING UPON AN EXISTING LINE OF THE CESD                     01000021
*                                                                       01050021
*ENTRY POINTS - HEWLFSCN  SCAN AND PROCESS THE CONTROL CARD           * 01100021
*                                                                       01150021
*                          CALL.SEQ.  LA    1,CARD BEGINNING            01200021
*                                      L    15,=V(HEWLKSCN)             01250021
*                                     BALR  14,15                       01300021
*     (DATA IS PASSED BY LOCATION)                                      01350021
*INPUT:  - 80 BYTES SOMEWHERE IN MAIN STORAGE , REPRESENTING A          01400021
*          CONTROL CARD                                                 01450021
*        - COMPOSITE ESD (CESD)                                         01500021
*        - ALL PURPOSE TABLE (APT) IN WHICH FLAGS ARE TESTED            01550021
*OUTPUT: - PARTS OF 2 TABLES IN MAIN STORAGE : COMPOSITE ESD (CESD)     01600021
*          AND PARTITIONED DATA SET DIRECTORY   (PDS DY)                01650021
*                                                                       01700021
*EXTERNAL ROUTINES:  - HEWLFLOG ERROR ROUTINE WHOSE ADDRESS IS IN THE   01750021
*                      ALL PURPOSE TABLE                                01800021
*                    - HEWLCINC   'INCLUDE PROCESSOR'WHICH CHOOSES THE  01850021
*                      ADDITIONAL INPUT TO BE READ, AND PREPARES IT     01900021
*                      (OPEN,BLDL,FIND). GETS CNTRL AFTER AN INCLUDE    01950021
*                      CARD                                             02000021
*                                                                       02050021
*EXITS -NORMAL:   1- RETURN TO THE CARD READER  HEWLEINP AFTER COMPLE-  02100021
*                    TION OF A ONE CARD SCAN (GENERALLY)                02150021
*                 2- CALLS THE INCLUDE PROCESSOR HEWLCINC AFTER COMPLE- 02200021
*                    TION OF THE SCAN OF ONE INCLUDE CARD  (OR SEVERAL  02250021
*                    INCLUDE CARDS IN CASE OF CONTINUATION)             02300021
*      -ERROR:                                                          02350021
*********************************************************************** 02400021
*            CONDITIONS                  *DATA PASSED TO RTN HEWLKLOG * 02450021
*********************************************************************** 02500021
*INVALID STATEMENT .SCAN TERMINATED      * X'121E' IN R0,CARD AD IN R1* 02550021
*NOT ENOUGH PLACE IN CESD                * X'141G' IN R0,CARD AD IN R1* 02600021
*TOO MANY OVERLAY REGIONS                * X'141F' IN R0,CARD AD IN R1* 02650021
*TOO MANY OVERLAY SEGMENTS               * X'1420' IN R0,CARD AD IN R1* 02700021
*TOO MANY ALIASES                        * X'2221' IN R0,SYMBOL  IN R1* 02750021
*NAME CRD ON LIBR DATA SET. CRD IGNORED  * X'1231' IN R0,CARD AD IN R1* 02800021
*********************************************************************** 02850021
*                                                                       02900021
*TABLES/WORK AREAS:    CESD , APT                                       02950021
*                                                                       03000021
*ATTRIBUTES:           REUSABLE                                         03050021
*             (THIS CONTROL SECTION IS IN A SEGMENT OF AN OVERLAY TREE) 03100021
*NOTES:    NONE                                                         03150021
*                                                                       03200021
HEWLFSCN CSECT                                                          03250021
*A086000,151000,164000,182000,186000,245000,259000,265000,280000 S21016 03300021
*A303600,815000,826000,858000                                    S21016 03350021
*C115000-116000,184000,243000-244000,248000-249000,254000,260000 S21016 03400021
*C849400                                                         S21016 03450021
*041600-900,054000,063000-800,210220-40,433500-450,435500-700,   Y01048 03460000
*438000,439500,446500,495100-496182,554600-554920                Y01048 03470000
*034800,342600-800,399800-920,530800                             A47001 03472000
*A332100                                                        OX01981 03474002
*A598600-598700                                                 OX03080 03476003
*C184500,C190000-193000                                 OX03126,OY02822 03478002
*D032100-032420,I041500,C141050,C141300-141350          OX04280,OY03413 03478402
*D295580-295900,C331100-331400,C419600-419900           OX04280,OY03413 03478802
*D431010-431460,D525500,I526000,D530700                 OX04280,OY03413 03479202
*D548500-548700                                         OX04280,OY03413 03479602
*I272000                                                OX05439,OY04537 03479703
*I584000                                                        XA05437 03484703
* SEE FIX FOR XA05437                                           YA03750 03486703
* I561500,D584100-584200                                        ZM30869 03488702
*                                                               OZ01403 03488802
* I603960                                                       ZA01400 03489102
*                                                                       03490003
* A6099996                                                      ZA01418 03492037
         EXTRN INDDNAME                                          A47001 03495003
***  SUBROUTINE  HEWLKSCN IS THE PROGRAMMER PUNCHED CARD SCANNER.       03500021
***  THE 'CARD READER' PROGRAM  RECOGNIZES THE PROGRAMMER PUNCHED       03550021
***  CARD BY A BLANK IN COLUMN 1 .                                      03600021
***  CARD READER BRANCHES TO HEWLKSCN BY  BALR 14,15  WHERE  15  IS     03650021
***  LOADED WITH A V TYPE ADCON FOR HEWLKSCN                            03700021
***  THE CARD READER PUTS IN  REG. 1  THE ADDRESS OF THE BYTE OF THE    03750021
***  INPUT BUFFER WHICH CONTAINS COLUMN 1                               03800021
R0       EQU   0                                                        03850021
R1       EQU   1                                                        03900021
R3       EQU   3                                                        03910021
P2       EQU   13                                                       03950021
R13      EQU   13                                                       03960021
R14      EQU   14                                                       04000021
R15      EQU   15                                                       04050021
BASE     EQU   12                                                       04100021
R12      EQU   7                                                        04150021
REG9     EQU   9                       GEN REG 9        OX04280,OY03413 04152002
TREG     EQU   4                  PTR TO TRANS TABLE             Y01048 04160000
BASE2    EQU   5                  SECOND BASE REGISTER           Y01048 04170000
SSINFO   EQU   6                  SSI INFORMATION                Y01048 04180000
SAVR7    EQU   7                  USED WITH SSINFO               Y01048 04190000
ERR1LTL  EQU   X'121E'        WRONG LINKEDIT CNTRL CARD .CARD IGNORED   04200021
ERR2LTL  EQU   X'1419'        NOT ENOUGH PLACE IN CESD                  04250021
ERR3LTL  EQU   X'141F'        ERROR   TOO MANY OVERLAY REGIONS          04300021
ERR4LTL  EQU   X'1420'        ERROR   TOO MANY OVERLAY SEGMENTS         04350021
ERR6LTL  EQU   X'2221'    TOO MANY ALIASES                              04400021
ERR8LTL  EQU   X'2248'                                           A37667 04420000
ERR10LTL EQU   X'1231'  NAME CRD ON LIBR DATA SET .CRD IGNORED          04450021
SPSTROPT EQU   X'02'                   SPECIAL STRING OPTION BIT S21016 04500021
SPSTRFLG EQU   X'80'                   SPECIAL STRING FLAG       S21016 04550021
NOTSPSTR EQU   X'FD'                   BIT CONFIGURATION TO      S21016 04600021
*                                      TURN OFF SPECIAL STRING   S21016 04650021
*                                      OPTION BIT                S21016 04700021
LEVEL1   EQU   X'40'                   LEVEL 1 OPERAND FLAG      S21016 04750021
*                                      IN STAT                   S21016 04800021
NOLEV0   EQU   X'20'                   FLAG IN OPTION INDICATING S21016 04850021
*                                      LEVEL 0 OPERAND WAS       S21016 04900021
*                                      ABSENT                    S21016 04950021
COMMA    EQU   C','                    COMMA -- FOR COMPARISON   S21016 05000021
QUOTE    EQU   C''''                   QUOTE -- FOR COMPARISON   S21016 05050021
SPECMAX  EQU   41                      MAX. COUNTER VALUE FOR    S21016 05100021
*                                      NO. OF CHARS. IN A        S21016 05150021
*                                      SPECIAL STRING            S21016 05200021
NORMAX   EQU   9                       MAX. COUNTER VALUE FOR    S21016 05250021
*                                      NO. OF CHARS. IN A        S21016 05300021
*                                      NORMAL STRING             S21016 05350021
TABSIZE  EQU   16                      NO. OF ENTRIES IN  Y01031,Y01048 05400000
*                                      PROC. ENTRY TABLE  Y01031,S21016 05460000
CURCHAR  EQU   0                       OFFSET IN STRING FOR      S21016 05500021
*                                      CURRENT CHARACTER         S21016 05550021
NEXTCHAR EQU   1                       OFFSET IN STRING FOR      S21016 05600021
*                                      NEXT CHAR.                S21016 05650021
ONECHAR  EQU   1                       A SINGLE CHARACTER IN     S21016 05700021
*                                      STRING                    S21016 05750021
CHAR7    EQU   7                       THE 7TH CHARACTER IN A    S21016 05800021
*                                      FIELD                     S21016 05850021
CHAR8    EQU   8                       THE 8TH CHARACTER IN A    S21016 05900021
*                                      FIELD                     S21016 05950021
LEN32    EQU   32                      LENGTH OF 32 BYTES        S21016 06000021
SAPTR    EQU   13                      POINTER TO LOCAL SAVEAREA S21016 06050021
         ST    BASE,8(15)                                               06100021
         BC    15,12(15)                                                06150021
         DS    CL4                                                      06200021
         BALR  BASE,0                                                   06250021
         USING *,BASE,BASE2                                      Y01048 06300000
         USING APTDSECT,2                                               06350021
         LR    BASE2,BASE         SET UP SECOND BASE REG         Y01048 06360000
         LA    BASE2,4095(BASE2)  TO ADDRESS THE NEXT            Y01048 06370000
         LA    BASE2,1(BASE2)     4K BYTES                       Y01048 06380000
         BC    15,MODID+6                                               06400021
MODID   DC     C'00MSCN'                                                06450021
         STM   00,15,SAVR                                               06500021
         TM    APT0,X'08'    IS LOG OPTION ON                           06550021
         BC    8,SCN900    BR. IF NOT                                   06600021
         XR    0,0                                                      06650021
         L     15,ERDIG                                                 06700021
         BALR  14,15   TO ERR.LOG. SUBROUTINE TO LOG THE CARD           06750021
SCN900   MVC   COL72(1),71(R1)   SAVE  COLUMN 72 'S CONTENT             06800021
         LA    R0,71(0,R1)                                              06850021
         ST    R0,SAVACOL              SAVE ADDRESS OF COLUMN 72        06900021
          TM    APT2,X'01'  IS THIS CARD A CONTINUATION OF PR5V CRD.    06950021
         BC    1,SCN10240        BRANCH IF YES                          07000021
SCN1000  NI    STAT,X'00'        INITIATES STATUS BYTE FOR NEW CARD     07050021
***   P2  POINTS TO THE CURRENT BYTE IN AREA WHERE OPERAND IS BUILT     07100021
***                                                 (OPD0 OR OPD1)      07150021
         LA    P2,OPD1           SET P2 AT OPD1 TO READ OPERATION       07200021
         MVI   OPTION,X'80'         SIGNAL THAT OPTION1 REQUIRED IN RD8 07250021
*                           **DEBUG LE NOTINOV**  RESET OPTION  ATL1    07300021
         BAL  R14,SCN11RD8          BRANCH TO READ  A   SYMBOL.         07350021
*                                   RETURN FROM  RD8(1)                 07400021
         TM    STAT,X'01'           TEST IF  ENDED BY BLANK             07450021
         BC    14,SCN10230          BRANCH IF NOT, TO ERROR (MEANS -    07500021
*                         - OPERATION NOT FOLLOWED BY BLANK )           07550021
         LA    R14,TABSIZE             INIT SEARCH ON PROCESSOR  S21016 07600021
*                                      ENTRIES TABLE (12 ENTRIES S21016 07650021
*                                      IN TABLE)                 S21016 07700021
         LA    R15,PROCTABL                                             07750021
SCN10100 CLC   0(8,R15),OPD1    OPERATION SYMBOL IS IN OPD1             07800021
         BC    8,SCN10120          BRANCH TO SCN10120 WHEN MATCH FOUND  07850021
SCN10105 LA    R15,12(R15)                                              07900021
         BCT   R14,SCN10100                                             07950021
         BC    15,SCN10230         BRANCH TO ERROR WHEN MATCH NOT FOUND 08000021
***                                ERROR IN THE CARD                    08050021
SCN10120 MVC   PROCENTY(4),8(R15)      SAVE  THE PROCESSOR ENTRY POINT  08100021
         LA    P2,OPD0                SET  P2 ON OPD0 TO READ 1ST OPRD  08150021
         MVI   STAT,X'80'     SET OPD0 NEW' & RESET 'ENDD BY BLANK'     08200021
         OI    OPTION,X'80'           SIGNAL OPTION'1' TO SUBPROGR RD8  08250021
         BAL   R14,SCN11RD8           BRANCH TO  SUBPROG. RD8           08300021
*                                     RETURN FROM RD8                   08350021
SCN10130 TM    OPTION,X'40'    IS AT LEAST ONE CHAR. FOUND ?    ATL1    08400021
         BC    8,SCN10220      BRANCH IF NO                             08450021
         NI    OPTION,X'DF'      RESET TO 0 THE BIT 'OPD0 ABSENT'       08500021
*                                  (OPD0 IS PRESENT)                    08550021
         OI    STAT,X'80'     SET 'OPD0 NEW' ON                         08600021
         TM    STAT,X'04'     ENDED BY LEFT PARENTHESIS ?               08650021
         BC    1,SCN10180     BRANCH IF YES                             08700021
SCN10140 L     R15,PROCENTY                                             08750021
         NI    APT2,X'FE'  RESET TO 0 THE CONTINUATION BIT              08800021
**THE PROCESSOR ENTRY POINT IS IN REGISTER R15                          08850021
         BALR  R14,R15                                                  08900021
*                                                                       08950021
*                                                                       09000021
*                                                                       09050021
**                         RETURN FROM THE PROCESSOR                    09100021
*                                                                       09150021
         TM    STAT,X'40'       TEST IF LEVEL =1 OR 0                   09200021
         BC    1,SCN10150       BRANCH IF  LEVEL=1                      09250021
         TM    STAT,X'02'       TEST  IF ENDED BY COMMA                 09300021
         BC    8,SCN10145     BR IF NOT                                 09350021
         CLC   PROCTABL+8(4),PROCENTY     IS IT OVERLAY                 09400021
         BC    8,SCN10230     IF YES,BR TO ERROR                        09450021
         CLC   PROCENTY,IDENTADD       IS IDENTIFY CARD BEING    S21016 09500021
*                                      SCANNED?                  S21016 09550021
         BE    SCN10230                IF SO, IT IS AN ERROR     S21016 09600021
         BC    15,SCN10170                                              09650021
SCN10145 TM    STAT,X'01'   TEST IF ENDED BY BLANK                      09700021
         BC    8,SCN10230       BRANCH TO ERROR  IF NOT                 09750021
** AT THIS POINT THE CARD IS TERMINATED EXCEPT IF A COMMENT CONTINUES   09800021
SCN10147 CLI   COL72,C' '                                               09850021
         BC    8,SCN10210     RETURN TO THE CARD READER PROG.(NO CONT.) 09900021
         OI    STAT,X'10'     SET COMMENT=1                             09950021
         OI    APT2,X'01'     SET CONTIN=1                              10000021
         BC    15,SCN10210    RETURN TO THE CARD READER PROG.           10050021
SCN10150 TM    STAT,X'08'          TEST IF ENDED BY RIGHT PARENTHESIS   10100021
         BC    1,SCN10160          BRANCH IF YES                        10150021
         TM    STAT,X'02'          TEST IF ENDED BY COMMA               10200021
         BC    8,SCN10230      BRANCH TO ERROR IF NOT                   10250021
         CLC   PROCENTY,IDENTADD       IS IDENTIFY CARD BEING    S21016 10300021
*                                      SCANNED?                  S21016 10350021
         BE    SCN10230                IF SO, IT IS AN ERROR     S21016 10400021
         NI    STAT,X'7F'    RESET  'OPD0 NEW' TO ZERO                  10450021
         BC    15,SCN10190    GO TO READ ONE MORE LEVEL 1 ITEM          10500021
SCN10160 NI    STAT,X'BF'       SET  LEVEL TO ZERO                      10550021
         LA    R1,1(R1)          UPDATE POINTER OF CARD COLUMN          10600021
         C     R1,SAVACOL       COMPARE R1 AND ADDR OF COL 72           10650021
*   RIGHT PARENT. IN COL. 71 IMPLIES NO CONTINUATION POSSIBLE           10700021
*   (CONTIN. OF OPERAND REQUIRES A COMMA , CONTIN. OFCOMMENT ..         10750021
*    ..REQUIRES THAT COMMENT ALREADY BEGUN )                            10800021
         BC    8,SCN10210       BRANCH TO THE RETURN TO CARD READER     10850021
         CLI   0(R1),C','       IS CHAR. UNDER P1  A COMMA              10900021
         BC    7,SCN10147              GO CHECK FOR CONTINUATION        10950021
         OI    STAT,X'02'       SET  'ENDED BY COMMA'                   11000021
SCN10170 LA    P2,OPD0        SET POINTER P2 ON OPD0                    11050021
         NI    OPTION,X'7F'       SIGNAL  OPTION=0 TO THE SUBPR.    RD8 11100021
         BAL   R14,SCN11RD8       BRANCH TO SUBPROG. RD8                11150021
*                                 RETURN FROM RD8                       11200021
         BC    15,SCN10130                                              11250021
SCN10180 OI    STAT,X'40'         SET LEVEL TO 1                        11300021
         CLC   PROCENTY,IDENTADD       IS IDENTIFY CARD BEING    S21016 11350021
*                                      SCANNED?                  S21016 11400021
         BNE   SCN10190                IF NOT, CONTINUE          S21016 11450021
         LA    P2,IDRSTRNG             IF YES, SET P2 TO POINT   S21016 11500021
*                                      TO SPECIAL STRING FOR     S21016 11550021
*                                      IDR DATA                  S21016 11600021
         OI    OPTION,SPSTROPT         TURN ON SPECIAL STRING    S21016 11650021
*                                      OPTION                    S21016 11700021
         B     SCN10193                CONTINUE                  S21016 11750021
SCN10190 LA    P2,OPD1            SET P2 ON OPD1                        11800021
SCN10193 NI    OPTION,X'7F'            SIGNAL OPTION=0 TO        S21016 11850021
*                                      SUBPROGRAM READ8          S21016 11900021
         BAL   R14,SCN11RD8       BRANCH  TO SUBPR.                     11950021
*                                 RETURN FROM RD8                       12000021
         NI    OPTION,NOTSPSTR         TURN OFF SPECIAL STRING   S21016 12050021
*                                      OPTION                    S21016 12100021
         TM    OPTION,X'40'         TEST BIT 'AT LEAST ONE'  ATL1       12150021
         BC    1,SCN10140         TOWARD PROCESSOR                      12200021
SCN10200 TM    STAT,X'01'        TEST IF  ENDED BY BLANK                12250021
         BC    8,SCN10230         BRANCH TO ERROR IF NOT                12300021
SCN10205 TM    OLDSTAT,X'02'      TEST IF OLD STATUS IS ENDED BY COMMA  12350021
         BC    8,SCN10230         BRANCH TO ERROR IF NOT (BLANK INSIDE  12400021
*                                 PARENTHESIS IS NOT ALLOWED,EXCEPT FOR 12450021
*                 THE  COMMA-BLANK CONTINUATION CONVENTION)             12500021
*   REGISTER  7  CONTAINS THE ADDRESS OF THE LIBRARY DCB                12550021
         CLI   COL72,C' '        TEST IF BLANK IN COL. 72               12600021
         BC    8,SCN10230         BRANCH TO ERROR IF YES                12650021
         OI    APT2,X'01'   SET CONTIN=1                                12700021
***          RETURN TO 'READ NEXT CARD'                                 12750021
SCN10210 TM    OPTION,X'10'  WAS IT AN INCLUDE CARD                     12800021
         BC    8,SCN10215                                               12850021
         TM    APT2,X'01'      IS CONTIN. EXPECTED                      12900021
         BC    1,SCN10215      YES                                      12950021
         L     15,INCLBRAD    BRANCH ADDR TO INCL PROC(ENTAB ENTRY)     13000021
         LM    00,14,SAVR                                               13050021
         BCR   15,15    GO TO INCL PROC                                 13100021
SCN10215 LM   00,15,SAVR                                                13150021
         L    BASE,8(15)                                                13200021
         BCR   15,R14             RETURN TO THE CALLER (CARD READER)    13250021
SCN10220 TM     STAT,X'04'    TEST IF ENDED BY LEFT PARENTH.            13300021
         BC      8,SCN10225       NO                                    13350021
         OI     OPTION,X'20'       SET 'OPD0 ABSENT' IN OPTION          13400021
         BC    15,SCN10180                                              13450021
SCN10225 TM    APT2,X'01'    TEST IF CONTIN=1                           13500021
         BC    8,SCN10200         BRANCH IF NOT                         13550021
*                     BRANCH TO ERROR SUBPROG.                          13600021
SCN10230 L     R1,SAVR+4     SLOT ADDR. OF 1ST COL OF CARD INTO R1      13650021
SCN10232 LH    0,ERR1         WRONG LK.EDIT CNTRL CRD. CRD.IGNORED      13700021
SCN10235 L     R15,ERDIG                                                13750021
         NI    APT2,X'FE'  RESET TO 0 THE CONTINUATION BIT              13800021
         BALR  R14,R15                                                  13850021
*                                                                       13900021
*                                                                       13950021
*                                                                       14000021
*                              RETURN FROM ERROR ROUTINE                14050021
         BC    15,SCN10210     GO TO READ NEXT CARD                     14100021
SCN10238 ST    R1,SAVRG1               SAV REG 1 A37667,OX04280,OY03413 14105002
         LA    R1,OPD0                 INVALID ALIAS NAME        A37667 14110000
         LH    R0,ERR8                                           A37667 14115000
         L     R15,ERDIG                                         A37667 14120000
         BALR  R14,R15                 LOG ERROR MESSAGE         A37667 14125000
         L     R14,SAVRG14             RES R14   A37667,OX04280,OY03413 14130002
         L     R1,SAVRG1               RES R1    A37667,OX04280,OY03413 14135002
         BR    14                                                A37667 14140000
SCN10240 TM    STAT,X'10'      TEST IF  COMMENT=1                       14150021
         BC    8,SCN10250      BRANCH IF NOT                            14200021
         CLI   COL72,C' '           TEST IF BLANK IN COL. 72            14250021
         BC    7,SCN10210           BRANCH IF NOT                       14300021
         NI    STAT,X'EF'    SET COMMENT=0                              14350021
         NI    APT2,X'FE'     SET CONTIN=0                              14400021
         BC    15,SCN10210                                              14450021
SCN10250 LA    R1,14(R1)            SET P1 ON COL. 15                   14500021
         TM    STAT,X'40'         TEST IF LEVEL =1                      14550021
         BC    1,SCN10190       YES                                     14600021
         BC    15,SCN10170                                              14650021
***    SUBROUTINE  SCN11RD8  READS 8 CHAR. OR LESS TO BUILD A SYMBOL    14700021
***    IN THE AREA POINTED TO BY P2                                     14750021
SCN11RD8 MVC   OLDSTAT(1),STAT    SAVE STATUS BYTE IN OLD STATUS        14800021
         MVI   0(P2),C' '                                               14850021
         MVC   1(7,P2),0(P2)    PAD BLANKS IN OPERAND AREA              14900021
         TM    OPTION,SPSTROPT         'SPECIAL STRING' OPTION   S21016 14950021
*                                      ON?                       S21016 15000021
         BZ    NOTSPEC                 BRANCH IF NOT             S21016 15050021
         LA    R15,SPECMAX             INITIALIZE CHAR. COUNT    S21016 15100021
*                                      FOR UP TO 40 CHARACTERS   S21016 15150021
*                                      IN OPERAND STRING         S21016 15200021
         MVC   CHAR8(LEN32,P2),CHAR7(P2)  PAD REMAINDER OF       S21016 15250021
*                                      OPERAND FIELD WITH BLANKS S21016 15300021
         B     CONTINUE                BRANCH AROUND NORMAL      S21016 15350021
*                                      CHAR COUNT                S21016 15400021
NOTSPEC  LA    R15,NORMAX              INITIALIZE CHAR. COUNT    S21016 15450021
*                                      (MAXIMUM 8 CHARACTERS)    S21016 15500021
CONTINUE NI    STAT,X'F0'              RESET TO 0 THE ENDED BY   S21016 15550021
*                                      '(' , ')' , ',' OR ' '    S21016 15600021
*                                      BIT                       S21016 15650021
           NI    OPTION,X'BF'   RESET TO 0 THE BIT 'AT LEAST ONE'       15700021
         XC    SPECSTR(2),SPECSTR      RESET TO 0 SPEC. STRING   S21016 15750021
*                                      INDICATOR AND LENGTH      S21016 15800021
SCN11000 LA    R1,1(R1)           UPDATE POINTER R1                     15850021
         CLI   0(R1),C' '         TEST IF THIS CHARACTER IS BLANK       15900021
         BE    SCN11006                BRANCH IF YES             S21016 15950021
SCN11001 C     R1,SAVACOL              IS THIS COLUMN 72?        S21016 16000021
         BC    7,SCN11002         OK IF NO                              16050021
         TM    OPTION,X'40'       WAS AT LEAST ONE CHARACTER RECEIVED   16100021
         BC    1,SCN10230         ERROR IF YES                          16150021
         BC    15,SCN10205        GO CHECK IF VALID CONITNUATION        16200021
SCN11002 TM    SPECSTR,SPSTRFLG        SCANNING A SPEC. STRING?  S21016 16250021
         BO    SCN11003                BRANCH IF YES             S21016 16300021
         CLI   CURCHAR(R1),COMMA       TEST IF THIS CHAR. IS     S21016 16350021
*                                      A COMMA                   S21016 16400021
         BC    8,SCN11010        BRANCH IF YES                          16450021
         CLI   0(R1),C'('        TEST IF THIS CHAR. IS LEFT PARENT.     16500021
         BC    8,SCN11020        BRANCH IF YES                          16550021
         CLI   0(R1),C')'        TEST IF THIS CHAR. IS RIGHT PARENT.    16600021
         BC    8,SCN11030        BRANCH IF YES                          16650021
SCN11003 CLI   CURCHAR(R1),QUOTE       TEST IF THIS CHAR. IS     S21016 16700021
*                                      A QUOTE                   S21016 16750021
         BE    SCN11060                BRANCH IF YES             S21016 16800021
SCN11004 BCT   R15,SCN11005            UPDATE COUNT & GO TO      S21016 16850021
*                                      MOVE THE CHARACTER        S21016 16900021
         BC    15,SCN10230   BRANCH TO ERROR IF MORE THAN 8 CHARACTERS  16950021
SCN11005 MVC   0(1,P2),0(R1)     MOVE THE CHAR. AT ADD POINTED TO BY P2 17000021
         OI    OPTION,X'40'      SET 'AT LEAST ONE'    ATL1=1           17050021
         LA    P2,1(P2)          UPDATE P2                              17100021
         BC    15,SCN11000                                              17150021
SCN11006 TM    SPECSTR,SPSTRFLG        SCANNING A SPECIAL        S21016 17200021
*                                      STRING?                   S21016 17250021
         BNO   SCN11040                BRANCH IF NO              S21016 17300021
         B     SCN11001                CONTINUE IF YES           S21016 17350021
SCN11010 OI    STAT,X'02'        SET  'ENDED BY COMMA'                  17400021
         BCR   15,R14            RETURN                                 17450021
SCN11020 OI    STAT,X'04'        SET  'ENDED BY LEFT PARENT.'           17500021
         BCR   15,R14            RETURN                                 17550021
SCN11030 OI    STAT,X'08'        SET  'ENDED BY RIGHT PARENT.'          17600021
         BCR   15,R14            RETURN                                 17650021
SCN11040 TM    OPTION,X'80'      TEST  IF OPTION=1                      17700021
         BC    8,SCN11050        BRANCH IF NOT                          17750021
         TM    OPTION,X'40'      TEST IF  'AT LEAST ONE'  ATL1=1        17800021
         BC    1,SCN11050    BR. IF YES                                 17850021
         C    R1,SAVACOL                                                17900021
         BC    8,SCN10230     GO TO ERROR                               17950021
         BC    15,SCN11000    GO & TRY NEXT COLUMN                      18000021
SCN11050 OI    STAT,X'01'        SET  'ENDED BY A BLANK'                18050021
         BCR   15,R14            RETURN                                 18100021
SCN11060 TM    SPECSTR,SPSTRFLG        SCANNING A SPECIAL        S21016 18150021
*                                      STRING?                   S21016 18200021
         BO    SCN11070                BRANCH IF YES             S21016 18250021
         TM    OPTION,SPSTROPT         SPECIAL STRING OPTION ON? S21016 18300021
         BNO   SCN11004                IF NOT, CONTINUE          S21016 18350021
         CH    R15,SPSTRLEN            1ST CHAR IN STRING?       S21016 18400021
         BNE   SCN10230                NOT, ERR  S21016,OX03126,OY02822 18450002
         OI    SPECSTR,SPSTRFLG        IF YES, TURN ON SPECIAL   S21016 18500021
*                                      STRING FLAG               S21016 18550021
         B     SCN11000                PROCESS NEXT CHAR.        S21016 18600021
SCN11070 CLI   NEXTCHAR(R1),QUOTE      IS NEXT CHAR. ALSO A      S21016 18650021
*                                      QUOTE?                    S21016 18700021
         BNE   SCN11080                IF NOT, BRANCH            S21016 18750021
         LA    R1,NEXTCHAR(R1)         IF IT IS, IGNORE 1ST      S21016 18800021
*                                      QUOTE                     S21016 18850021
         B     SCN11004                CONTINUE TO PROCESS THIS  S21016 18900021
*                                      CHAR.                     S21016 18950021
SCN11080 CLI   NEXTCHAR(R1),C')'       TEST END PAREN   OX03126,OY02822 19000002
         BNE   SCN10230                ERR IF NOT THERE OX03126,OY02822 19050002
         SH    R15,SPSTRLEN            CALC TRUE LENGTH OX03126,OY02822 19100002
         LCR   R15,R15                 OF SPECIAL STRNG OX03126,OY02822 19150002
         STH   R15,SPECSTR             STORE NO. OF CHARS. IN    S21016 19350021
*                                      STRING                    S21016 19400021
         LA    R15,ONECHAR             NO MORE CHARS. ALLOWED IN S21016 19450021
*                                      THIS STRING EVEN IF COUNT S21016 19500021
*                                      NOT EXHAUSTED (FINAL      S21016 19550021
*                                      QUOTE FOUND)              S21016 19600021
         B     SCN11000                GO TO CONTINUE SCAN       S21016 19650021
***   PROCESSORS VECTOR TABLE .                                         19700021
***   GIVES  THE ENTRY POINT OF EACH PROGRAMMER-PUNCHED-CARD PROCESSOR  19750021
         DS    0F                                                       19800021
PROCTABL DC    CL8'OVERLAY '                                            19850021
         DC    A(SCNOVERL)      4 BYTES ADCON                           19900021
         DC    CL8'REPLACE '                                            19950021
         DC    A(SCNREPLA)                                              20000021
         DC    CL8'LIBRARY '                                            20050021
         DC    A(SCNLIBRA)                                              20100021
         DC    CL8'INCLUDE '                                            20150021
         DC    A(SCNINCLU)                                              20200021
         DC    CL8'INSERT  '                                            20250021
         DC    A(SCNINSER)                                              20300021
         DC    CL8'ENTRY   '                                            20350021
         DC    A(SCNENTRY)                                              20400021
         DC    CL8'CHANGE  '                                            20450021
         DC    A(SCNCHANG)                                              20500021
         DC    CL8'ALIAS   '                                            20550021
         DC    A(SCNALIAS)                                              20600021
         DC    CL8'NAME    '                                            20650021
         DC    A(SCNNAME)                                               20700021
         DC    CL8'SETSSI'                                              20750021
         DC    A(SCNSETSI)                                              20800021
         DC    CL8'HIARCHY '                                            20850021
         DC    A(SCNHIARC)                                              20900021
IDENTOP  DC    CL8'IDENTIFY'                                     S21016 20950021
IDENTADD DC    A(SCNIDENT)                                       S21016 21000021
         DC    CL8'ORDER'                                       AOSCD   21010021
         DC    A(SCNORDR)                                       AOSCD   21012021
         DC    CL8'PAGE'                                        AOSCD   21014021
         DC    A(SCNPAGE)                                       AOSCD   21020021
         DC    CL8'SETCODE'       SETCODE OPERAND                Y01048 21022000
         DC    A(SCNSTCOD)        ADDRESS OF SETCODE RTN         Y01048 21024000
         DC    CL8'EXPAND '       EXPAND OPERAND                 Y01031 21026000
         DC    A(SCNEXPND)        ADDRESS OF EXPAND RTN          Y01031 21028000
PROCEND  EQU   *                                                        21030021
RF       EQU   13                                                       21050021
RE       EQU   15                                                       21100021
*  SCNHOL SELECTS A FREE LINE IN THE CESD.  ADDRESS OF THIS LINE        21150021
*  RETURNED TO CALLER BY REG. RE  ,  ID BY REG. RF  . THIS LINE COMES   21200021
*  FROM THE HOLES' CHAIN , OR IS A NEW LINE IN THE CESD                 21250021
*                                                                       21300021
*                                                                       21350021
*                                                                       21400021
SCNHOL   L     RE,FLCD             ADDR. OF THE HOLES CHAIN BEG.        21450021
         LTR   RE,RE         TEST IF ZERO                               21500021
         BC    8,HOL010      YES                                        21550021
*                            ADDR.OF HOLE IS IN RE                      21600021
         MVC   FLCD(4),12(RE)      UPDATE FLCD                          21650021
         LR    RF,RE                  HOLE ADDR. IN REG. RF             21700021
         S     RF,CHESD                                                 21750021
         SRL   RF,4              DIVIDE OFFSET BY 16 TO GET ID          21800021
         BCR   15,14             RETURN                                 21850021
HOL010   LH    RE,ENCDC       HIGHEST  ID USED IN CESD                  21900021
HOL010A  CH    RE,ENCDX       COMPARE TO MAX ID AVAILABLE IN CESD       21950021
         BL    HOL010B                 THERE IS STILL ROOM      AOSCD   21960021
         TM    APT4,REALOCTE           CAN REALLOC BE DONE?     AOSCD   21970021
         BO    HOL020                  NO/NO MORE PLACE IN ESD  AOSCD   21980021
         STM   R0,R15,BRNCHSV          SAVE REGISTERS           AOSCD   21990021
         L     R15,ERDIGA              ADDR OF REALLOC RTN      AOSCD   21992021
         BALR  R14,R15                 GO TO REALLOC RTN        AOSCD   21994021
         LM    R0,R15,BRNCHSV          RESTORE REGISTERS        AOSCD   21996021
         B     HOL010A                 CHECK IF REALLOC SUFFICIENT      21998021
         BC     8,HOL020   BRCH IF NO MORE PLACE IN CESD                22000021
HOL010B  LA    RE,1(RE)                                                 22050021
         LR    RF,RE                FREE LINE ID IN RF                  22100021
         STH   RE,ENCDC       UPDATE HIGHEST ID USED                    22150021
         SLL   RE,4                                                     22200021
         A     RE,CHESD       ADDRESS OF FREE LINE IN RE                22250021
         BCR   15,14                  RETURN                            22300021
*                                    NO MORE PLACE IN THE CESD          22350021
HOL020   LH    0,ERR2         NOT ENOUGH PLACE IN CESD  IRRECOVERABLE   22400021
         L     15,ERDIG                                                 22450021
         BALR  14,15                                                    22500021
         BC    15,*         DEBUG.PURPOSE.ERROR ROUT.SHOULD NOT RETURN  22550021
*HEWLEHOL GIVES ADDR. OF A FREE CESD LINE (MAY BE A HOLE) IN RE         22600021
* AND ITS ID IN RF                                                      22650021
* THE CALLER PUTS  THE RETURN ADDRESS IN  14                            22700021
*   OVERLAY PROCESSOR                                                   22750021
RX       EQU   11                                                       22800021
RY       EQU   10                                                       22850021
RZ       EQU   09                                                       22900021
*                                                                       22950021
*  SCNOVERL  ,GIVEN AN OVERLAY SYMBOL, UPDATES   1- THE OVERLAY CHAIN   23000021
*  2- THE CURRENT NO. OF SEGMENTS  AND THE TABLE SEGTA1                 23050021
*  3- THE CURRENT NO. OF REGIONS  AND THE TABLE  LSTS , IF  (REGION) IS 23100021
*     SPECIFIED                                                         23150021
SCNOVERL TM    PDSE7,X'20'    IS OVERLAY OPTION 'ON'                    23200021
         BC    8,SCN10230   BR. TO ERROR IF NOT                         23250021
         ST    14,SAV14L1   SAVE R14 BECAUSE OF THE CALL TO SCNHOL      23300021
         LH    RY,CSNO        GET CURRENT SEGMENT NUMBER                23350021
         STC  RY,PREVSEG                                                23400021
         TM    STAT,X'40'   TEST STATUS BYTE OF THE SCANNER             23450021
*                                 IS IT LEVEL=1                         23500021
          BC    8,OVR090                                                23550021
*                                 LEVEL=I ANNOUNCES 'REGION'            23600021
         CLC   OPD1(8),REGION                                           23650021
         BC    7,SCN10230     TOWARD ERRORLOG                           23700021
         BC    15,OVR100                                                23750021
OVR090   L     RX,OVCMBGAD                                              23800021
         LTR   RX,RX                                                    23850021
         BC    8,OVR115                                                 23900021
         BC    15,OVR120                                                23950021
OVR100   LH    RX,CRNO                                                  24000021
         CH    RX,MXNOREG                                               24050021
         BC    11,OVR105     TOOMANY REGIONS COMING                     24100021
         LA    RX,1(RX)                                                 24150021
         STH   RX,CRNO        UPDATE CURRENT REGION                     24200021
         XC    PREVSEG(1),PREVSEG    SET PREVSEG TO 0                   24250021
         BC    15,OVR110                                                24300021
OVR105   LH    0,ERR3         ERROR  TOO MANY REGIONS                   24350021
         L     15,ERDIG                                                 24400021
         BALR  14,15       BRANCH TO ERROR ROUTINE                      24450021
OVR110   L     RZ,OVCMBGAD        ADDRESS OF OVERLAY CHAIN BEGINNING    24500021
         LTR  RZ,RZ                                                     24550021
         BC   8,OVR115      BRANCH IF NO CHAIN EXISTS                   24600021
         XC    OVCMBGAD(1),OVCMBGAD    NULLIFY OVCMBGAD                 24650021
         LA   14,OVR115     FIX EXIT OF SMALL SUBROUTINE                24700021
         BC   15,OVR165    GO TO NULLIFICATION OF OVRL.CHAIN            24750021
OVR115   BAL   14,SCNHOL   GO & GET FREE LINE IN THE CESD               24800021
         ST    15,OVCMBGAD        INIT OVCMBGAD TO 1ST LINE OF CHAIN    24850021
         BC    15,OVR135                                                24900021
*                            HERE THE CHAIN EXISTS                      24950021
OVR120   CLC   OPD0(8),0(RX)      COMPARE  SYMBOLS                      25000021
         BC    8,OVR138         EQUAL                                   25050021
         L     RZ,8(RX)                                                 25100021
         LA    RZ,0(RZ)           WIPE THE TYPE                         25150021
         LTR   RZ,RZ    IS THE CHAIN ADDRESS =0                         25200021
         BC    8,OVR130           YES                                   25250021
         LR    RX,RZ                                                    25300021
         BC    7,OVR120       NO                                        25350021
OVR130   BAL   14,SCNHOL      GO $ GET A FREE LINE IN THE CESD          25400021
*                               LINE ADDR.IS IN R15 , ID IN R13         25450021
         ST   R15,8(RX)           PUT ADDR. OF NXT LINE IN CURR.LINE    25500021
         MVI   8(RX),X'02'        RESTORE CRUSHED TYPE                  25550021
OVR135   LR    RX,R15                                                   25600021
         MVC   0(8,RX),OPD0           PUT SYMBOL INTO  OVERLAY LINE     25650021
         MVC   12(1,RX),PREVSEG     PUT PREVSEG INTO OVERLAY LINE       25700021
*                                     (CSEG IS HERE 'PREVIOUS SEGT.' )  25750021
         XC    9(3,RX),9(RX)           ZEROE   THE CHAIN ADDRESS        25800021
         MVI   8(RX),X'02'             SET TYPE ER                      25850021
         MVI   13(RX),X'90'            SET SUBTYPE 'CONTROL  OVRLAY'    25900021
         L     8,SAV14L1      PREPARE RETURN TO CARD SCANNER            25950021
         BC    15,OVR140                                                26000021
OVR138   MVC   PREVSEG(1),12(RX)    PREV. SEG. TAKEN FROM MATCHED LINE  26050021
         LA    8,OVR160                                                 26100021
OVR140   LA    RY,1(RY)             ADD 1  IN CURRENT SEGM. NO.         26150021
         STH   RY,CSNO        UPDATE CSEG                               26200021
         CH    RY,ENS1X       COMPARE CSEG TO MAX PERMISSABLE           26250021
         BC    12,OVR150         OK                                     26300021
         LH    0,ERR4         ERROR  TOO MANY SEGMENTS IN THIS TREE     26350021
         L     15,ERDIG                                                 26400021
         BALR  14,15                                                    26450021
          BC    15,*        .STOP. THIS ERROR WAS IRRECOVERABLE         26500021
*                            ERROR ROUTINE SHOULD NOT  RETURN           26550021
OVR150   L     R15,SGT1       ADDR OF SEGTA1 MINUS 1 IN R15             26600021
         AR    R15,RY      ADD CURRENT SEGT. NO.                        26650021
         MVC   0(1,R15),PREVSEG     FILL ONE SEGTA1 ITEM                26700021
         LH    15,CRNO                                                  26750021
         STC   RY,LSTS(15)       STORE LAST SEG.FOR  THE CURRENT REGION 26800021
         BCR  15,8       RETURN OR GO TO NEXT INSTRUCTION               26850021
**              NULLIFICATION OF THE TAIL OF THE OVERLAY CONTROL CHAIN  26900021
OVR160   L     RZ,8(RX)                                                 26950021
         LA    RZ,0(RZ)                                                 27000021
         LTR   RZ,RZ              TEST IF CHAIN ADDR.IS ZERO(CHAIN END) 27050021
         BCR   8,14                                                     27100021
         XC    9(3,RX),9(RX)     SET ZERO AS CHAIN ADDRESS              27150021
OVR165  MVI   8(RZ),X'07'    NULLIFY TYPE OF NEXT LINE                  27200021
         XC    0(8,RZ),0(RZ)  AND CLEAR NAME FIELD      OX05439,OY04537 27210003
         LR    RX,RZ             TAKE NEXT LINE AS NEW CURRENT LINE     27250021
         MVC   12(4,RZ),FLCD  CHAIN THIS FREE LINE TO LAST FREE LINE    27300021
         ST    RZ,FLCD        UPDATE BEGINNING OF HOLES' CHAIN          27350021
         BC   15,OVR160           CHAIN CONTINUES                       27400021
SCNORDR  TM    OPTION,X'20'            IS OPD0 ABSENT           AOSCD   27410021
         BO    SCN10230                YES,ERROR                AOSCD   27420021
         TM    STAT,X'40'              IS LEVEL 1 PRESENT       AOSCD   27430021
         BZ    SCNORDR1                NO,BRANCH OUT            AOSCD   27440021
         CLC   OPD1(8),ORDRP           IS OPD1 VALID CHAR       AOSCD   27442021
         BNE   SCN10230                NO,ERROR                 AOSCD   27444021
         OI    SWITCH1,PAGE            SET PAGE ALIGN SWITCH    AOSCD   27446021
         OI    APT4,PAGEE              FLAG PAGE IN APT         AOSCD   27448021
SCNORDR1 OI    SWITCH1,ORDER           SET ORDER SWITCH         AOSCD   27448421
         OI    APT4,ORDERR             FLAG ORDERING IN APT     AOSCD   27448821
         B     INS001                                           AOSCD   27449221
SCNPAGE  OI    SWITCH1,PAGE            SET PAGE SWITCH          AOSCD   27449621
         OI    APT4,PAGEE              FLAG PAGE IN APT         AOSCD   27449721
*                                                                       27450021
*  SCNINSER   IS THE  INSERT CARD PROCESSOR.                            27500021
SCNINSER TM    STAT,X'40'     IS IT LEVEL 1                             27550021
         BZ    INS001          NO,BRANCH OUT                    AOSCD   27560021
         NI    SWITCH1,X'FF'-X'31'     RESET FLAG FOR ORDER & PAGE      27570021
         B     SCN10230            ERROR CONDITION-NO LEVEL 1 FOR INS   27580021
INS001   STM   R13,R3,TEMPRGSV         TEMPORARY SAVE           AOSCD   27590021
         LA    0,16           SET  INCREMENT  FOR THE BXLE              27700021
         L     15,CHESD       SET STARTING ADDR                         27750021
         LH    1,ENCDC                                                  27800021
         SLL   1,4                                                      27850021
         AR    1,15           HIGH LIMIT OF BXLE                        27900021
         LA    15,16(15)                                                27950021
INS100   CLC   OPD0(8),00(15)     COMPARE OPRD 0 WITH CESD SYMBOL       28000021
         BC    8,INS158           BRANCH  IF  MATCHING SYMBOL  FOUND    28050021
INS105   BXLE  15,0,INS100                                              28100021
*               SYMBOL NOT FOUND IN CESD                                28150021
         ST    14,SAV14L1                                               28200021
         BAL   14,SCNHOL      GO AND GET FREE LINE IN THE CESD          28250021
         L     14,SAV14L1                                               28300021
*              FREE LINE ADDR  IN R15  FREE LINE ID  IN R13             28350021
         MVC   0(8,R15),OPD0     SET  SYMBOL EQUAL TO OPD0              28400021
         XC    8(8,R15),8(R15)                                  AOSCD   28410021
         TM    SWITCH1,PAGE+ORDER      PAGE OR ORDER REQD       AOSCD   28420021
         BC    5,INS150                YES,BRANCH OUT           AOSCD   28430021
         MVI   8(R15),X'02'      SET  TYPE  ER                          28450021
         MVI   13(R15),X'00'     SET  SUBTYPE  PURE ER                  28500021
         BC    15,INS130                                                28550021
INS110   MVN   TEMP1(1),8(15)    INSULATE TYPE                          28600021
         CLI   TEMP1,X'02'   IS TYPE X'X2'                              28650021
         BC    7,INS130   BR. IF NOT                                    28700021
         CLI   13(15),X'02'   IS IT AN UNMATCHED LIBRARY MEMBER         28750021
         BC    7,INS120    BR IF NOT                                    28800021
         OI    13(15),X'01'   SET TYPE 'MATCHED LIBR MEMBER'            28850021
INS120   CLI   8(15),X'02'   CAN THE MATCHED LINE BE A CNTRL CARD       28900021
         BC    7,INS130         NO                                      28950021
         CLI   13(15),X'0F'    IS IT A CNTRL CARD BY ITS SUBTYPE        29000021
         BC    2,INS105          YES  CONTINUE THE SEARCH               29050021
INS130   OI    8(15),X'20'      SET  INSERT BIT IN TYPE                 29100021
         MVC   12(1,15),CSNO+1    INSERT THE CURRENT SEG.NO. AS 1 BYTE  29150021
INS140   LM    R13,R3,TEMPRGSV         RESTORE REGISTERS        AOSCD   29200021
         NI    SWITCH1,X'FF'-X'31'     RESET SWITCH             AOSCD   29210021
         BCR   15,14                   RETURN                   AOSCD   29212021
INS150   MVI   8(R15),X'0A'            FLAG A WX                AOSCD   29220021
INS151   STH   R13,IDSAV               SAVE CESD ID             AOSCD   29230021
         L     R13,ORDRADR             PICK UP ADD OF ORDER TABLE       29240021
         LH    R1,ORDRCUR              CURR NO OF BYTES USED    AOSCD   29250021
         LTR   R1,R1                   ARE THERE ANY IN USE?    AOSCD   29260021
         LA    R0,3                    3 BYTES PER ENTRY IN ORDER TBL   29270021
         BZ    INS152A                 NONE USED-BRANCH OUT     AOSCD   29280021
         AR    R1,R13                                           AOSCD   29290021
         SR    R1,R0                                            AOSCD   29292021
INS152   CLC   1(2,R13),IDSAV          MATCH IN THE ORDER TBL   AOSCD   29294021
         BE    INS155                  YES,BRANCH OUT           AOSCD   29296021
         BXLE  R13,R0,INS152           NO,CONTINUE SCANNING     AOSCD   29298021
INS152B  CLC   ORDRCUR(2),ORDRMAX      ORDER TABLE OVFLOW?      AOSCD   29298421
         BL    INS152A                 NO,BRANCH OUT            AOSCD   29298821
         TM    APT4,REALOCTE           CN WE REALLOCATE?        AOSCD   29299221
         BO    HOL020                  ALREADY DONE,BRANCH OUT  AOSCD   29299621
         STM   R0,R15,BRNCHSV          SAVE REGISTERS           AOSCD   29299721
         L     R15,ERDIGA              ADDR OF REALLOC RTN      AOSCD   29299821
         BALR  R14,R15                 GO TO REALLOC RTN        AOSCD   29299921
         LM    R0,R15,BRNCHSV          RESTORE REGISTERS        AOSCD   29316621
         L     R13,ORDRADR             NEW ADDR OF ORDER TBL    AOSCD   29326621
         AH    R13,ORDRCUR             PT TO AVAIL ENTRY        AOSCD   29328621
         B     INS152B                                          AOSCD   29330621
INS152A  MVC   1(2,R13),IDSAV          MOVE ID                  AOSCD   29332621
         AH    R0,ORDRCUR              INCREMENT CNT OF CURR BYTES      29333021
         STH   R0,ORDRCUR              USED IN ORDER TABLE      AOSCD   29333121
         TM    SWITCH1,ORDER           IS THIS AN ORDER STATEMENT       29333221
         BZ    INS153                  NO,BRANCH OUT            AOSCD   29338821
INS153A  LA    R13,0(R13)                                       AOSCD   29340821
         ST    R13,LASTORDR                                     AOSCD   29342821
         OI    0(R13),X'20'            FLAG FOR ORDER           AOSCD   29343221
INS153   TM    SWITCH1,PAGE            IS PAGE ALIGN REQUESTED  AOSCD   29343621
         BZ    INS154                  NO,BRANCH OUT            AOSCD   29344021
         OI    0(R13),X'10'            YES,MARK ENTRY SO        AOSCD   29344121
INS154   TM    SWITCH1,MATCH           WAS THERE A MATCH CESD   AOSCD   29344221
         BZ    INS140                  NO,RETURN                AOSCD   29344321
         OI    0(R13),X'80'            YES,MARK MATCH IN ENTRY  AOSCD   29358221
         B     INS140                  PROCEED                  AOSCD   29368221
INS155   TM    SWITCH1,ORDER           IS ORDER REQUESTED?      AOSCD   29370221
         BZ    INS153                  NO,BRANCH OUT            AOSCD   29370621
         LA    R13,0(R13)                                       AOSCD   29371021
         C     R13,LASTORDR                                     AOSCD   29371421
         BNL   INS153A                                          AOSCD   29371821
         TM    0(R13),X'20'            IS MATCHED ENTRY FOR ORDER       29371921
         BO    INS156                  YES,BRANCH OUT           AOSCD   29372021
         XC    0(3,R13),0(R13)         CLEAR ORDER ENTRY        AOSCD   29372121
         LA    R13,3(R1)                                        AOSCD   29376721
         OI    0(R13),X'10'            FLAG PAGE                AOSCD   29378721
         B     INS152B                 PROCEED                  AOSCD   29380721
INS156   LM    R13,R3,TEMPRGSV         RESTORE REGISTERS        AOSCD   29381121
         NI    SWITCH1,X'FF'-X'31'     RESET PAGE & ORDER FLAGS AOSCD   29381221
         LH    R0,ERR7                 LOAD ERROR CODE          AOSCD   29381321
         LA    R1,OPD0                 POINT TO OPD0            AOSCD   29381421
         B     SCN10235                                         AOSCD   29386021
INS158   TM    SWITCH1,PAGE+ORDER      PAGE OR ORDER REQUESTED  AOSCD   29386121
         BZ    INS110                  NO,BRANCH OUT            AOSCD   29388121
         OI    SWITCH1,MATCH           INDICATE MATCHED ENTRY   AOSCD   29390121
         LR    R13,R15                 CALCULATE CESD ID        AOSCD   29390521
         S     R13,CHESD                                        AOSCD   29390621
         SRL   R13,4                                            AOSCD   29390721
         MVN   TEMP1(1),8(R15)         MOVE TYPE                AOSCD   29402521
         CLI   TEMP1,0                 TYPE SD?                 AOSCD   29412521
         BE    INS151                  YES,BRANCH OUT           AOSCD   29414521
         CLI   TEMP1,X'05'             TYPE COMMON              AOSCD   29418421
         BE    INS151                  YES,BRANCH OUT           AOSCD   29420421
         CLI   TEMP1,X'02'             TYPE ER?                 AOSCD   29422421
         BNE   INS151                  NO,BRANCH OUT            AOSCD   29426321
         TM    13(R15),X'80'           CONTROL CARD ITEM?       AOSCD   29426421
         BZ    INS151                  NO,BRANCH OUT            AOSCD   29428421
         NI    SWITCH1,X'7F'                                    AOSCD   29428821
         B     INS105                                                   29429221
TEMPRGSV DC    7F'0'                   TEMPORARY SAVE AREA      AOSCD   29429621
ORDRP    DC    CL8'P'                  OPD1 CHAR FOR PAGE       AOSCD   29430021
LASTORDR DC    F'0'                                             AOSCD   29430121
IDSAV    DC    H'0'                    SAVEAREA FOR CESD ID     AOSCD   29430221
ERR7     DC    X'2241'                 ERROR CODE               AOSCD   29430321
SWITCH1  DC    X'00'                   SWITCH                   AOSCD   29434221
PAGE     EQU   X'10'                   FLAG FOR PAGE            AOSCD   29434321
ORDER    EQU   X'20'                   FLAG  FOR ORDERING       AOSCD   29436321
MATCH    EQU   X'01'                   FLAG FOR MATCH ENTRY     AOSCD   29436721
RG       EQU   0                                                        29438321
RJ       EQU   13                                                       29442221
RH       EQU   14                                                       29446121
RI       EQU   15                                                       29450021
RM       EQU   3                                                        29500021
SCNREPLA TM    OPTION,X'20'   IS OPD0 ABSENT                            29550021
         BC    1,SCN10230     BR TO ERR IF YES                          29600021
         OI    STATREPL,X'80'  SET BIT 'ENTERED BY REPLACE'             29650021
         TM    STAT,X'40'      WHAT LEVEL ?  (ZERO OR ONE)              29700021
         BC    1,REP115        BR. IF LEVEL 1  (2 OPERANDS)             29750021
         ST    14,SAV14L1                                               29800021
         BAL   14,SCNHOL   BR. AND GET A FREE LINE IN THE CESD          29850021
         L     14,SAV14L1                                               29900021
*  HEWLEHOL  HAS PUT  ADDR. OF FREE LINE IN  RI AND ID  IN RJ           29950021
         LA    RM,REP110      SET  EXIT  ADDRESS FOR THE SUBR. REP100   30000021
REP100   L     RJ,RCCE                                                  30050021
         LTR   RJ,RJ           DOES THE CHAIN ALREADY EXIST.            30100021
         BC    7,REP105        YES                                      30150021
         ST    RI,RCCB        GIVE  ITS FIRST VALUE TO RCCB             30200021
         BC    15,REP107                                                30250021
REP105   ST    RI,8(RJ)      PUT THIS NEW LINE ADDR.INTO PREV.LINE  ... 30300021
*                         ...TO FORM THE CHAIN                          30350021
         MVI   8(RJ),X'02'    RESTORE CRUSHED TYPE                      30400021
REP107   ST    RI,RCCE        UPDATE THE END ADDRESS OF THE  CHAIN      30450021
         MVC   0(8,RI),OPD0     OPERAND ZERO PUT IN LINE                30500021
         MVI   8(RI),X'02'      SET TYPE ER  IN THE LINE                30550021
         XC    9(3,RI),9(RI)   ZEROE   THE CHAINING ADDR.OF THIS NEWLIN 30600021
         BCR   15,RM                                                    30650021
REP110   MVI   13(RI),X'E8'       SET  SUBTYPE'CONTROL-DELETE'          30700021
         BCR   15,RH              RETURN                                30750021
SCNCHANG TM    STAT,X'40'     IS IT LEVEL1                              30800021
         BC    8,SCN10230     BR TO ERR IF NOT                          30850021
         TM    OPTION,X'20'   IS OPD0 ABSENT                            30900021
         BC    1,SCN10230     BR TO ERR IF YES                          30950021
         NI    STATREPL,X'7F'                                           31000021
*                          ENTERING  BY 'CHANGE'                        31050021
*                  TAKE 2 CONSECUTIVE FREE LINES IN THE CESD            31100021
REP115   LH    RJ,ENCDC                                                 31150021
         LA    RI,1(RJ)          ADD 1 TO HIGHEST ID USED               31200021
         SLL   RI,4              MULTIPLY BY 16                         31250021
         A     RI,CHESD       ADD ADDRESS OF CESD MINUS 16              31300021
*                 ADDR. OF FIRST FREE LINE OF A COUPLE IS IN RI         31350021
*                 CHECK IF TWO LINES WERE AVAILABLE IN THE CESD         31400021
         LA    RJ,2(RJ)                                                 31450021
REP117   EQU   *                                                OZ01403 31460002
         CH    RJ,ENCDX                                                 31500021
         BC    2,REP140              TO ERROR                           31550021
         STH   RJ,ENCDC       UPDATE ENCDC                              31600021
         LA    RM,REP120      SET EXIT ADDR. FOR THE SUBR. REP100       31650021
         BC    15,REP100      BR. TO SMALL INTERNAL SUBR.               31700021
REP120   MVC   16(8,RI),OPD1  PUT SYMBOL OPD1 IN   THE SECOND LINE      31750021
         MVI   24(RI),X'02'   PUT TYPE ER  IN THE SCD. LINE             31800021
         TM    STATREPL,X'80'                                           31850021
         BC    1,REP130       BR. IF REPLACE                            31900021
         MVI   13(RI),X'F0'    SUBTYPE CONTROL CHANGE IN FIRST LINE     31950021
         MVI   29(RI),X'F0'    SUBTYPE CONTROL CHANGE IN SECOND LINE    32000021
         BCR   15,RH            RETURN                                  32050021
REP130   MVI   13(RI),X'E0'       SET SUBTYPE  CNTRL REPLACE IN 1ST LIN 32100021
         MVI   29(RI),X'E0'       SET SUBTYPE  CNTRL REPLACE IN 2ND LIN 32150021
         BCR   15,RH             RETURN                                 32200021
REP140   EQU   *                                                OZ01403 32210002
         TM    APT4,REALOCTE     REALLOC. POSSIBLE?             OZ01403 32220002
         BO    REP142            BRANCH IF NOT                  OZ01403 32230002
         STM   R0,R15,BRNCHSV    SAVE REGS BEFORE REALLOC       OZ01403 32240002
         L     R15,ERDIGA        ADDR. OF REALLOC. RTN.         OZ01403 32242002
         BALR  R14,R15           GO TO REALLOC RTN.             OZ01403 32244002
         LM    R0,R15,BRNCHSV    RESTORE REGISTERS              OZ01403 32246002
         B     REP117            GO CHECK CESD AGAIN            OZ01403 32248002
REP142   LH    0,ERR2         NOT ENOUGH PLACE IN CESD  IRRECOVERABLE   32250003
         L     RI,ERDIG                                                 32300021
         BALR  14,15                                                    32350021
         BC    15,*       DEBUGGING PURPOSE. AS THE ERR.WAS IRRECOVE-   32400021
*                        -RABLE,THE ERROR ROUTINE SHOULD NOT RETURN     32450021
*                         HERE                                          32500021
SCNNAME  TM    OPTION,X'20'   IS OPD0 ABSENT                            32550021
         BC    1,SCN10230     BR TO ERR IF YES                          32600021
         L     15,HEWLCLAC    ADDRESS OF CURRENT READ BLOCK             32650021
         LA    0,0(0,15)               CLEAR HI ORDER BYTE              32700021
         LA    15,HEWLCRBN    ADDRESS OF SYSLIN READ BLOCK              32750021
         CR    0,15   IS PTER ,POINTOING TO SYSLIN READ BLOCK           32800021
         BC    8,NAM010    BR IF YES                                    32850021
         L     1,SAVR+4      ADDR OF FIRST COLUMN OF CARD INTO R1       32900021
         LH    0,ERR10  NAME CARD MUST BE IN MAIN STREAM                32950021
         BC    15,SCN10235  BR TO ERROR                                 33000021
NAM010   TM    APT3,X'40'   TEST IF NAMECRD ALREADY BEEN READ           33050021
         BCR   1,14                                                     33100021
         ST    R14,SAVRG14             SAV RETRN ADDR   OX04280,OY03413 33110002
         LA    REG9,OPD0               POINT TO NAME    OX04280,OY03413 33120002
         L     R15,ADRVLDCK            GET ADDR OF RTN  OX04280,OY03413 33130002
         BALR  R14,R15                 GO VALIDATE NAME OX04280,OY03413 33140002
         L     R14,SAVRG14             RES RETRN ADDR   OX04280,OY03413 33142002
         LTR   REG9,REG9               TEST VALID NAME  OX04280,OY03413 33144002
         BNZ   SCN10230                BRANCH IF INVAL  OX04280,OY03413 33146002
         OI    APT3,X'40'   SET BIT 'NAME CARD RECEIVED' 'ON'           33150021
         MVC   PDSE1(8),OPD0  PUT MEMBER NAME INTO PDS DIRY.            33200021
         NI    APT3,X'EF'              RESET REPLACE INDICATION OX01981 33210002
         TM    STAT,X'40'     TEST IF LEVEL 1                           33250021
         BCR   8,14       RETURN IF NOT (LEVEL 0 MEANS SINGLE OPRND)    33300021
         CLI   OPD1,C'R'     TEST IF CHAR.='R'                          33350021
         BC    7,SCN10230     BR. TO ERROR IF NOT                       33400021
         OI    APT3,X'10'    PUT BIT 'STOW AS AREPLACEMENT'             33450021
         BCR   15,14          RETURN                                    33500021
SCNENTRY TM    STAT,X'40'     IS IT LEVEL 1                             33550021
         BC    1,SCN10230     BR TO ERR IF YES                          33600021
         TM    APT1,X'02'     TEST IF ENTRY CARD PREVIOUSLY RECEIVED    33650021
         BCR   1,14           YES,RETURN                                33700021
         MVC   EPSM(8),OPD0   LAY ENTRY POINT SYMBOL INTO APT           33750021
         OI    APT1,X'0E'     SET B6=1=ENTRY NAME BY ENTRY CARD         33800021
*                             &  B5=1=ENTRY POINT IN SYMBOLIC           33850021
*    B4=1=ENTRY POINT RECEIVED                                          33900021
         BCR   15,14             RETURN                                 33950021
SCNLIBRA TM    STAT,X'40'     IS IT LEVEL 1                             34000021
         BC    8,SCN10230     BR TO ERR IF NOT                          34050021
         TM    OPTION,X'20'   IS OPD0 ABSENT                            34100021
         BC    1,LIB110   BR IF YES                                     34150021
         CLI   OPD0,C'*'   IS OPD0 *                                    34200021
         BC    8,LIB080   YES                                           34250021
         L     R6,INDDNMAD     GET SYSLIN DDNAME                 A47001 34260000
         CLC   0(8,R6),OPD0    COMPARE LIBRARY DDNAME            A47001 34270000
         BE    SCN10230        IF SAME, ERROR                    A47001 34280000
         TM    APT0,X'80'   TEST IF NCAL(NO AUT LIB CALL) IS ON         34300021
         BC    1,SCN10230  TO ERROR IF YES                              34350021
         OI    APT0,X'01'  SET SOME LIBRARY CARD HAS BEEN READ,'ON'     34400021
LIB080  ST    14,SAV14L1                                                34450021
         BAL  14,SCNLIBSB  TO SCN LIBR. SUBROUTINE                      34500021
         L    14,SAV14L1     RESTORE 14                                 34550021
         BC   15,LIB110                                                 34600021
**********                                                              34650021
*  THE SUBROUTINE SCNLIBSB                                              34700021
* LOOKS IF THE LIBRARY DDNAME IS ALREADY IN THE CESD . IF YES,USES IT.  34750021
* IF NOT,CREATES ONE NEW LINE FOR IT                                    34800021
SCNLIBSB TM    STAT,X'80'     IS OPD0 NEW                               34850021
         BCR   8,14           BR. IF NOT                                34900021
**                       MATCH OPD0 AGAINST THE CESD                    34950021
*                                                                       35000021
         XR    13,13                                                    35050021
         L     15,CHESD                                                 35100021
LIB090   LA    13,1(13)             UPDATE LINE ID                      35150021
         LA    15,16(15)            UPDATE LINE ADDRESS                 35200021
         CLC   0(8,15),OPD0         COMPARE LINE SYMBOL TO OPD0         35250021
         BC    8,LIB100             BR. IF EQ                           35300021
         CH    13,ENCDC       COMPARE LINE ID TO HIGHEST ID USED        35350021
         BC    4,LIB090             TRY NXT LINE                        35400021
*                                  MATCH NOT FOUND                      35450021
**                                 GO AND GET A FREE LINE IN CESD       35500021
LIB095   ST    14,SAV14L2                                               35550021
         BAL   14,SCNHOL                                                35600021
         L     14,SAV14L2                                               35650021
*  FREE LINE ADDR. IS IN 15 , FREE LINE ID IS IN 13                     35700021
         MVC   0(8,15),OPD0       LAY SYMBOL OPD0 INTO THIS LINE        35750021
         XC    14(2,15),14(15)                                          35800021
         MVI   8(15),X'02'    SET TYPE ER                               35850021
          MVI   13(15),X'B0'    SET SUBTYPE DDNAME                      35900021
LIB100   CLI   8(15),X'02'    IS THE CESD MATCH A DDNAME TYPE           35950021
         BC    7,LIB095       BR. IF NOT                                36000021
         CLI   13(15),X'B0'   IS THE CESD MATCH A DDNAME SUBTYPE        36050021
         BC    7,LIB095       BR. IF NOT                                36100021
         STH   13,DDLINID       SAVE  DDLINE ID                         36150021
         ST    15,DDLINAD       SAVE DD LINE ADDRESS                    36200021
         BCR   15,14          RETURN OF  SCNLIBSB                       36250021
*                                                                       36300021
*                                                                       36350021
*                                                                       36400021
**       MATCH  OPD1 AGAINST CESD ITEMS                                 36450021
*                                                                       36500021
LIB110  XR   13,13                                                      36550021
         L     15,CHESD                                                 36600021
LIB120   LA    13,1(13)            UPDATE LINE ID                       36650021
         LA    15,16(15)           UPDATE LINE ADDRESS                  36700021
         CLC   0(8,15),OPD1        COMPARE LINE SYMBOL TO OPD1          36750021
         BC    8,LIB130            BR. IF EQ                            36800021
         CH    13,ENCDC       COMPARE LINE ID TO HIGHEST ID USED        36850021
         BC    4,LIB120            TRY NXT LINE                         36900021
*                                  MATCH NOT FOUND                      36950021
         BC    15,LIB150           GO AND CREATE A LINE FOR OPD1        37000021
LIB130   MVC   TEMP1(1),8(15)      MOVE MATCHED TYPE                    37050021
         NI    TEMP1,X'07'         MASK OUT MATCHED TYPE                37100021
         CLI   TEMP1,X'02'         IS MATCHED TYPE AN ER                37150021
         BC    7,LIB140            BR. IF NOT                           37200021
         CLI   13(15),X'00'      IS MATCHED SUBTYPE AN ER               37250021
         BC    8,LIB160          BR IFYES                               37300021
         CLI   13(15),X'07'      IS MATCHED SUBTYPE A 'NEVER CALL' OR   37350021
*                                'NO CALL' OR 'LIBRARY MEMBER (MATCHED  37400021
*                                 OR UNMATCHED)'                        37450021
*                        (I.E.: IS SUBTYPE SMALLER THAN 7 . AT THIS     37500021
*                         POINT WE KNOW THAT SUBTYPE GREATER THAN 1 )   37550021
         BC    10,LIB150         BR. IF NOT                             37600021
*                   HERE,BECAUSE OF ITS MATCHING,THE CARD HAS TO BE     37650021
*                   IGNORED                                             37700021
LIB140   NI    IND1,X'7F'        RESET IND1(B0) TO 0                    37750021
         BCR   15,14             RETURN TO SCANNER                      37800021
**                            CREATE A LINE FOR OPD1                    37850021
*                                                                       37900021
LIB150   ST    14,SAV14L1                                               37950021
         BAL   14,SCNHOL      GO AND GET A FREE LINE IN THE  CESD       38000021
         L     14,SAV14L1                                               38050021
         OI    IND1,X'80'     SET IND1(B0=1) INDICATING NW LIN FOR OPD1 38100021
         MVC   0(8,15),OPD1       PUT OPD1 IN THE NEW LINE              38150021
         MVI   8(15),X'02'        SET ITS TYPE = ER                     38200021
LIB160   TM    OPTION,X'20'        TEST IF OPD0 ABSENT                  38250021
         BC    8,LIB180            BR. IF NOT                           38300021
         TM    IND1,X'80'         TEST IF NEW LINE WAS CREATED FOR OPD1 38350021
         BC    1,LIB170                                                 38400021
         MVI   13(15),X'05'       MARK SUBTYPE 'NO CALL,MATCHED'        38450021
         BC    15,LIB140          TOWARD RETURN                         38500021
LIB170   MVI   13(15),X'04'       MARK SUBTYPE 'NO CALL,UNMATCHED'      38550021
         BC    15,LIB140          TOWARD RETURN                         38600021
LIB180   CLI   OPD0,C'*'          TEST IF OPD0 IS *                     38650021
         BC    8,LIB200           BR.IF YES                             38700021
         MVI   9(15),X'00'  ZEROE OUT BYTE FOR LATER BLDL INDIC.        38750021
         TM    IND1,X'80'         TEST IF NEW LIN WAS CREATED FOR OPD1  38800021
         BC    1,LIB190           BR. IF YES                            38850021
         MVI   13(15),X'03'       MARK SUBTYPE'MATCHED LIBRARY MBR.'    38900021
         BC    15,LIB205                                                38950021
LIB190   MVI   13(15),X'02'       MARK SUBTYPE'UNMATCHED LIBR.MBR.'     39000021
         BC    15,LIB205                                                39050021
LIB200   MVI   13(15),X'06'       MARK SUBTYPE'NEVER CALL'              39100021
         BC    15,LIB140          TOWARD RETURN                         39150021
**             THE LINE OF OPD1 WILL BE JOINED TO THIS LIBR. CHAIN      39200021
LIB205   LH    3,DDLINID   INITIATE THE CRRT. LINE ID OF THE CHAIN      39250021
         L     4,DDLINAD      INITIATE THE CURRT.LIN.ADDR. OF THE CHAIN 39300021
LIB210   OC    14(2,04),14(04)   NXT ID OF THE CHAIN =00 ?              39350021
         BC    8,LIB220       BR. IF YES                                39400021
         LH    3,14(04)       UPDATE CURRENT LINE ID                    39450021
         LR    04,03                                                    39500021
         SLL   04,4           MULTIPLY ID BY 16                         39550021
         A     4,CHESD        ADD CHESD.  CURRENT LINE ADDRESS IN REG4  39600021
         BC    15,LIB210                                                39650021
LIB220   STH   13,14(04)      PUT MBR.ID IN'NEXT ID' FIELD OF CRRT.LIN. 39700021
         XC    14(2,15),14(15)    ZERO AS NXT ID AT MEMBER LINE         39750021
         STH   3,10(15)           PUT CRRT.ID AS PREV.ID AT MBR.ADDR.   39800021
         BC    15,LIB140          TOWARD  RETURN                        39850021
SCNINCLU TM    OPTION,X'20'   IS OPD0 ABSENT                            39900021
         BC    1,SCN10230     BR TO ERR IF YES                          39970000
         L     R6,INDDNMAD     GET SYSLIN DDNAME                 A47001 39980000
         CLC   0(8,R6),OPD0    COMPARE LIBRARY DDNAME            A47001 39990000
         BE    SCN10230        IF SAME, ERROR                    A47001 39992000
         ST    14,SAV14L1                                               40000021
         OI    OPTION,X'10'  SET 'INCLUDE CARD ITEM IN PROCESS'         40050021
         TM    STAT,X'40'       IS IT LEVEL=1                           40100021
         BC    8,INC050         BR. IF NOT                              40150021
*           SCNLIBSB LOOKS IN CESD IF DDNAME ALREADY ENTERED            40200021
         BAL   14,SCNLIBSB      DEFINE A LINE IN CESD AS DDLIN FOR OPD0 40250021
INC040   LA    08,INC150       PREPARE EXIT OF SUBROUTINE INC100        40300021
         BC    15,INC100                                                40350021
INC050   LA    08,INC120                                                40400021
*  INC100 IS SUBROUTINE THAT ENCHAINS A NEW ITEM INTO THE INCLUDE CHAIN 40450021
INC100   BAL   14,SCNHOL        TAKE FREE LINE IN CESD                  40500021
         L     07,INCBRKPT                                              40550021
         LTR   07,07            IS 'INCLUDE BREAK POINT ADDRESS' ZERO   40600021
          BC    7,INC110       NO                                       40650021
         XC    9(3,15),9(15)    NULLIFY CHAIN ADDR. OF NEW LINE         40700021
         BC    15,INC115                                                40750021
INC110   MVC   9(3,15),9(07)    PUT THE CHAIN ADDRESS FOUND AT LINE     40800021
*               POINTED TO BY INCBRKPT, AS CHAIN ADDR. OF THE NEW LINE  40850021
* THIS CHAIN ADDR. CAN BE POSITIVE OR NULL(HEAD OF CHAIN)               40900021
         ST    15,8(07)   PUT NEW LINE'S ADDR.AS CHN.ADDR.OF LINE       40950021
         MVI   8(07),X'02'        RESTORE CRUSHED TYPE                  41000021
*                                             POINTED TO BY INCBRKPT    41050021
INC115   ST    15,INCBRKPT        UPDATE INCBRKPT BY ADDR. OF NEW LINE  41100021
         OC    CRRTINCL+1(3),CRRTINCL+1    IS CRRTINCL NULL             41150021
         BC    7,INC117    BR. IF NOT                                   41200021
         ST    15,CRRTINCL      INITIATE CRRTINCL                       41250021
INC117   BCR   15,08      RETURN                                        41300021
INC120   MVC   0(8,15),OPD0    LAY LIBR.SYMBOL OPD0 IN THE NEW CESD LIN 41350021
         MVI   8(15),X'02'     SET TYPE ER                              41400021
         MVI   13(15),X'C0'    SET SUBTYPE 'CONTROL INCLUDE WITHOUT     41450021
*                              POINTER'                                 41500021
         BC    15,INC160                                                41550021
INC150   MVC   0(8,15),OPD1   LAY MBR.SYMBOL OPD1 IN THE NEW CESD LINE  41600021
         MVI   8(15),X'02'    SET TYPE ER                               41650021
         MVI   13(15),X'D0'   SET SUBTYPE 'CONTROL INCL. WITH POINTER'  41700021
         MVC   14(2,15),DDLINID   DDLINID AS THE CHAINED ID             41750021
INC160   L     14,SAV14L1                                               41800021
         BCR   15,14            RETURN TO THE SCANNER                   41850021
SCNALIAS TM    STAT,X'40'     IS IT LEVEL 1                             41900021
         BC    1,SCN10230     BR TO ERR IF YES                          41950021
         ST    R14,SAVRG14             SAV RETRN ADDR   OX04280,OY03413 41952002
         LA    REG9,OPD0               POINT TO NAME    OX04280,OY03413 41954002
         L     R15,ADRVLDCK            GET ADDR OF RTN  OX04280,OY03413 41956002
         BALR  R14,R15                 GO VALIDATE NAME OX04280,OY03413 41958002
         L     R14,SAVRG14             RES RETRN ADDR   OX04280,OY03413 41958402
         LTR   REG9,REG9               TEST VALID NAME  OX04280,OY03413 41958802
         BNZ   SCN10238                BRANCH IF INVAL  OX04280,OY03413 41959202
         LH    15,ENASC       LOAD CRRT NO OF ENTRIES IN ALIAS TABLE    42000021
         LA    15,1(15)       UPDATE IT                                 42050021
         CH    15,ENASX       COMPARE IT TO MAX.NO.OF ALIASES           42100021
         BC    12,ALI090      BR.IF 'LE'                                42150021
         LA    1,OPD0    ADDR OF ALIAS SYMBOL INTO REG 1                42200021
         LH    0,ERR6         TOO MANY ALIASES                          42250021
         BC    15,SCN10235                                              42300021
ALI090   STH   15,ENASC   STORE NEW NO. OF ALIASES                      42350021
         ST    14,SAV14L1                                               42400021
         BAL   14,SCNHOL      GO AND GET A FREE LINE IN THE CESD        42450021
         L     14,SAV14L1                                               42500021
*       FREE LINE ADDR. IN 15 , FREE LINE ID IN 13                      42550021
         XC     9(3,15),9(15)   SET ZERO IN THE CHAIN ADDR OF THIS LINE 42600021
         L     11,ALCB        TEST THE ALIAS CHAIN BEGINNING            42650021
         LTR   11,11                                                    42700021
         BC    8,ALI100       BR. IF 0 .(ALIAS CHAIN DOESNT EXIST)      42750021
         ST    11,8(15)    SLOT PREV. CHN ADDR INTO NEW ALIAS LINE      42800021
         MVI   8(15),X'02'    RESTORE CRUSHED TYPE                      42850021
ALI100   ST    15,ALCB        SLOT FREEADDR AS ALIAS CHAIN BEG.         42900021
         MVC   0(8,15),OPD0   LAY ALIAS SYMBOL (OPD0)INTO THE LINE      42950021
         MVI   8(15),X'02'    SET TYPE ER                               43000021
         MVI   13(15),X'A0'   SET SUBTYPE 'CONTROL ALIAS'               43050021
         BCR   15,14          RETURN                                    43100021
SCNSETSI EQU   *                                                        43150021
         TM    STAT,X'40'     IS IT LEVEL 1                             43200021
         BC    1,SCN10230     BR TO ERR IF YES                          43250021
         LA    3,8    INIT CHAR SELECTION                               43300021
SETSI010 IC    SSINFO,OPD0-1(3)    TAKE CURRENT DIGIT FROM OPD0  Y01048 43350000
         STC   SSINFO,TEST         SAVE DIGIT IN TEST            Y01048 43400000
         LA    TREG,TRANS          INIT SCAN OF TRANS TABLE      Y01048 43450000
         LA    15,16    COUNT FOR TRANS                                 43500021
SETSI015 CLC   TEST(1),0(TREG)     CHECK CURR DIGIT VS TRANS TAB Y01048 43550000
         BNE   SETSI050                                          Y01048 43600000
         IC    SSINFO,1(TREG)      OBTAIN BINARY EQUIVALENT      Y01048 43650000
         SRDL  SSINFO,4            SHIFT USEFUL INFO INTO SAVR7  Y01048 43700000
         BCT   3,SETSI010    NEXT DIGIT                                 43750021
         ST    SAVR7,SSI           STORE SSI INTO THE APT        Y01048 43800000
         OI    APT2,X'10'   SET 'STATUS INDICATOR RECEIVED'             43850021
         BCR   15,14    RETURN                                          43900021
SETSI050 LA    TREG,2(TREG)        POINT TO NEXT ENTRY IN TABLE  Y01048 43950000
         BCT   15,SETSI015                                              44000021
         BC    15,SCN10230   TO ERROR (CHAR NOT 0-9   A-F  )            44050021
*         *         *         *         *         *         *         * 44100021
*                                                                     * 44150021
*    SUBROUTINE SCNHIARC CHECKS FOR AND SAVES VALID LHN (HIERARCHY    * 44200021
*   NUMBER).  IT THEN LOOKS IF A NAME IS ALREADY IN CESD.             * 44250021
*          IF YES,  IT PUTS THE SAVED HN IN THE CORRESPONDING         * 44300021
*   HIAR TABLE ENTRY                                                  * 44350021
*           IF NO,  A LINE IS CREATED IN THE CESD--AND THIS ENTRY     * 44400021
*    NUMBER IS USED TO PLACE THE HN.                                  * 44450021
*                                                                     * 44500021
*         *         *         *         *         *         *         * 44550021
R6       EQU   6                                                        44600021
PTR      EQU   7                                                 Y01048 44650000
SCNHIARC TM    NEWSW,X'04'          IS HIAR OPTION BIT ON               44750021
         BC    8,SCN10230     NO- ERROR- CARD IGNORED                   44800021
         TM    STAT,X'40'     IS IT LEVEL 1  (NO PARENS FOR OPERANDS)   44850021
         BC    1,SCN10230     YES- ERROR-CARD IGNORED                   44900021
         TM    OPTION,X'04'   HAS HN BEEN FOUND                         44950021
         BC    1,HIAR100      YES                                       45000021
* FIND HN (HIARCHY NUMBER)                                              45050021
         TM    STAT,X'02'     DID SYMBOL END WITH COMMA                 45100021
         BC    8,SCN10230     NO- ERROR- CARD IGNORED                   45150021
* IS  HN VALID                                                          45200021
*   NOTE -- CHECKS HAVE BEEN DONE IN A MANNER WHICH SHOULD ALLOW      * 45250021
*            FOR CHANGE IN THE RANGE OF A VALID HN                    * 45300021
*    ARE ALL CHARACTERS DIGITS 0-9                                      45350021
         LA    PTR,OPD0       ADDRESS OF SYMBOL                         45400021
*              P2,WILL HAVE ADDR OF 1 PAST LAST BYTE OF SYMBOL          45450021
         SR    P2,PTR         P2 = NUMBER CHARACTERS IN SYMBOL          45500021
         LA    R6,3                                                     45550021
         CR    P2,R6                    IS SYMBOL MORE THAN 3 CHARACS   45600021
         BH    SCN10230                 YES-ERROR                       45650021
         LR    R6,P2                                                    45700021
HIAR050  CLI   0(PTR),C'0'              IS CHARACTER BETWEEN 0 AND 9    45750021
         BL    SCN10230                 NO- ERROR                       45800021
         CLI   0(PTR),C'9'                                              45850021
         BH    SCN10230                 NO- ERROR                       45900021
         LA    PTR,1(PTR)               UPDATE ADDRESS                  45950021
         BCT   R6,HIAR050                                               46000021
*  CHARACTERS ARE ALL NUMBERS-- IS THE SYMBOL EITHER 0 OR 1             46050021
*        CONVERT TO BINARY                                            * 46100021
         BCTR  P2,0                DECREMENT 1 FOR ESECUTE PACK         46150021
         EX    P2,PACK                                                  46200021
         CVB   R6,OPD0                                                  46250021
         STH   R6,HN                    SAVE HIERARCHY NUMBER           46300021
         SR    PTR,PTR                                                  46350021
         CR    R6,PTR                   IS HN = OR LESS THAN 0          46400021
         BL    SCN10230                YES -- ERROR                     46450021
         BE    HIAR075                                                  46500021
         BCT   R6,SCN10230             IF GREATER THAN ONE -- ERROR     46550021
HIAR075  OI    OPTION,X'04'            SET HN FOUND BIT                 46600021
         BR    14                                                       46650021
HIAR100  CLC   OPD0(7),COMMON    IS SYMBOL '*COMMON '                   46700021
         BNE   HIAR150                                                  46750021
         MVI   OPD0,C' '           YES- REPLACE SYMBOL WITH BLANKS      46800021
         MVC   OPD0+1(7),OPD0                                           46850021
         OI    OPTION,X'08'        INDICATE '*COMMON ' FOUND            46900021
*                                                                       46950021
* SEARCH CESD FOR IDENTICAL NAME                                      * 47000021
*                                                                       47050021
HIAR150  ST    R1,SAV01L1          SAVE CONTENTS REG 1                  47100021
         LA    R0,16               SET INCREMENT FOR BXLE               47150021
         L     R15,CHESD           START OF CESD                        47200021
         LH    R1,ENCDC            NUMBER ENTRIES IN CESD               47250021
         SLL   R1,4                NUMBER BYTES IN CESD                 47300021
         AR    R1,R15              END ADDRESS CESD (HIGH LIMIT OF BXLE 47350021
         LA    R15,16(R15)         ADDRESS CESD ENTRY                   47400021
HIAR200  CLC   OPD0(8),0(R15)      IS SYMBOL IDENT. WITH THAT IN CESD   47450021
          BNE   HIAR220            NO--CHECK NEXT ENTRY                 47500021
         CLI   8(R15),X'04'        YES--IS TYPE PRIVATE CODE (PC)       47550021
         BNE   HIAR350             IF NOT PC THEN FIND CESD ID          47600021
HIAR220  BXLE  R15,R0,HIAR200      INCREMENT CESD ADDR  END OF TABLE    47650021
*   END OF CESD--SYMBOL NOT FOUND IN  CESD                            * 47700021
         ST    14,SAV14L1          SAVE CONTENTS REG 14                 47750021
         BAL   14,SCNHOL           FIND FREE LINE IN CESD               47800021
         L     14,SAV14L1          RESTORE  R14                         47850021
* FREE LINE ADDRESS IN R15, FREE LINE ID IN R13                         47900021
         MVC   0(8,R15),OPD0       PUT SYMBOL IN CESD                   47950021
         TM    OPTION,X'08'        WAS SYMBOL FOR '*COMMON '            48000021
         BC    1,HIAR300           YES - SET TYPE TO 'CM'               48050021
         MVI   8(R15),X'02'        MARK NEW CESD ENTRY  'ER'            48100021
         XC    9(7,R15),9(R15)         CLEAR REMAINING BYTES     A35957 48150021
*                                                                     * 48200021
*  SET CORRESPONDING ENTRY IN HIAR TABLE TO HN   (USE CESD ID IN R13) * 48250021
*                                                                     * 48300021
HIAR250  L     PTR,HIARADD         GET ADDRESS OF HIARCHY TABLE         48350021
         AR    PTR,R13             GET ADDRESS OF HIARCHY ENTRY         48400021
         MVC   0(1,PTR),HN+1       PUT HN IN APPROPRIATE ENTRY IN TABLE 48450021
         TM    STAT,X'02'          DID SYMBOL END WITH A COMMA          48500021
         BC    1,HIAR290            YES--CONTINUE CHECKING CARD         48550021
* IS NEXT CARD A CONTINUATION CARD- NON-BLANK IN COL72 INDICATES THIS   48600021
         CLI   COL72,C' '          IS COL72 BLANK                       48650021
         BNE   HIAR290             NO- CONTINUATION EXPECTED            48700021
         NI    OPTION,X'FB'        SET HN FOUND BIT = 0                 48750021
*                                  GET NEXT SYMBOL (RETURN TO SCN)      48800021
HIAR290  L     R1,SAV01L1          RESTORE REG1                         48850021
* RETURN TO MAIN SCN RTN                                                48900021
         BR    14                  RETURN                               48950021
*                                                                     * 49000021
HIAR300  MVI   8(R15),X'05'        MARK CESD ENTRY 'CM'                 49050021
         MVC   12(1,R15),CSNO+1    ENTER SEGMENT NUMBER                 49100021
         NI    OPTION,X'F7'        TURN OFF COMMON SWITCH               49150021
         B     HIAR250                                                  49200021
*  FIND CESD ID                                                         49250021
HIAR350  S     R15,CHESD           REL. ADDRESS OF CESD ENTRY           49300021
         SRL   R15,4               CESD ID  (DIVIDE BY 16)              49350021
         LR    R13,R15             PUT ID IN R13                        49400021
         B     HIAR250                                                  49450021
*                                                                       49500021
*    SCNSTCOD--SCANS SETCODE STATEMENT AND IF IT IS VALID THE    Y01048 49510000
*              AUTHORIZATION CODE IS PLACED IN THE APT IN THE    Y01048 49520000
*              FIELD WHICH WILL EVENTUALLY BE PLACED IN THE PDS  Y01048 49530000
*                                                                Y01048 49540000
*              WORK REGISTERS ARE RX AND RY                      Y01048 49542000
*                                                                Y01048 49544000
SCNSTCOD DS    0H                                                Y01048 49546000
         TM    OPTION,X'20'       OPD0 PRESENT                   Y01048 49548000
         BO    SCN10230           NO - ERROR                     Y01048 49548400
         TM    STAT,X'C0'         TWO OPERANDS?                  Y01048 49548800
         BNO   SCN10230           NO - ERROR                     Y01048 49549200
         CLC   AC,OPD0            DOES OPD0='AC'?                Y01048 49549600
         BNE   SCN10230           NO - ERROR                     Y01048 49549700
         LA    RX,OPD1            CHECK FOR VALID DIGITS         Y01048 49549800
         LA    RY,8                                              Y01048 49549900
SCNSTC20 EQU   *                                                 Y01048 49566600
         CLI   0(RX),BLANK        IS THIS END OF FIELD?          Y01048 49576600
         BE    SCNSTC50           YES, BRANCH                    Y01048 49578600
         TM    0(RX),NUMBER       IS THIS A DIGIT?               Y01048 49580600
         BNO   SCN10230           NO - ERROR                     Y01048 49582600
         LA    RX,1(RX)           BUMP TO NEXT DIGIT             Y01048 49583000
         BCT   RY,SCNSTC20        SCAN TILL MAX OF 8 DIGITS      Y01048 49583100
SCNSTC50 EQU   *                                                 Y01048 49583200
         BCTR  RX,0               SUBTRACT 1 FROM END ADDR       Y01048 49588800
         LA    RY,OPD1            GET START ADDR                 Y01048 49590800
         SR    RX,RY              RX HAS MACHINE LGTH OF NUM     Y01048 49592800
         XC    OPD0(8),OPD0       USE OPD0 AS WORK SPACE         Y01048 49593200
         EX    RX,PACK1           PACK DIGIT                     Y01048 49593600
         CVB   RX,OPD0            CONVERT TO BINARY              Y01048 49594000
         LA    RY,K255            GET MAX VALUE                  Y01048 49594100
         CR    RX,RY              COMPARE REAL TO MAX            Y01048 49594200
         BH    SCN10230           IF TOO BIG - ERROR             Y01048 49594300
         STC   RX,PDSAPFAC        SAVE LATEST CODE FOR NOW       Y01048 49608200
         BR    R14                RETURN                         Y01048 49618200
*                                                                       49622200
TRANS   DC    CL1'0'                                                    49636100
         DC    XL1'00'                                                  49650021
        DC    CL1'1'                                                    49700021
         DC    XL1'01'                                                  49750021
        DC    CL1'2'                                                    49800021
         DC    XL1'02'                                                  49850021
        DC    CL1'3'                                                    49900021
         DC    XL1'03'                                                  49950021
        DC    CL1'4'                                                    50000021
         DC    XL1'04'                                                  50050021
        DC    CL1'5'                                                    50100021
         DC    XL1'05'                                                  50150021
        DC    CL1'6'                                                    50200021
         DC    XL1'06'                                                  50250021
        DC    CL1'7'                                                    50300021
         DC    XL1'07'                                                  50350021
        DC    CL1'8'                                                    50400021
         DC    XL1'08'                                                  50450021
        DC    CL1'9'                                                    50500021
         DC    XL1'09'                                                  50550021
        DC    CL1'A'                                                    50600021
         DC    XL1'0A'                                                  50650021
        DC    CL1'B'                                                    50700021
         DC    XL1'0B'                                                  50750021
        DC    CL1'C'                                                    50800021
         DC    XL1'0C'                                                  50850021
        DC    CL1'D'                                                    50900021
         DC    XL1'0D'                                                  50950021
        DC    CL1'E'                                                    51000021
         DC    XL1'0E'                                                  51050021
        DC    CL1'F'                                                    51100021
         DC    XL1'0F'                                                  51150021
         DS    0F                                                       51200021
SAVR     DS    CL64                                                     51250021
SAV14L1  DS    1F                                                       51300021
SAV14L2  DS    1F                                                       51350021
OPD0     DS    1D                                                       51400021
OPD1     DS    1D                                                       51450021
PROCENTY DS    1F             SAVE AREA FOR THE PROCESSOR ENTRY POINT   51500021
SAVACOL  DS    1F           SAVE AREA FOR ADDR. OF COL72                51550021
DDLINAD  DS    1F                                                       51600021
SAV01L1  DS    1F                                                       51650021
         DS    0F                                                       51700021
SPECSTR  DS    H                       FLAG AND COUNT FOR SPEC.  S21016 51750021
*                                      STRINGS (LEV.1 OPERANDS   S21016 51800021
*                                      OF IDENTIFY CONTROL       S21016 51850021
*                                      STATEMENT) FLAG IS IN     S21016 51900021
*                                      HI ORDER BIT OF HALFWORD  S21016 51950021
IDRSTRNG DS    CL40                    STRING OF IDR DATA        S21016 52000021
*                                      SPECIFIED ON AN IDENTIFY  S21016 52050021
*                                      CONTROL STATEMENT         S21016 52100021
*                                      (LEVEL 1 OPERAND)         S21016 52150021
SAVRG1   DS    F                       SAVE REG.1 WHILE          S21016 52200021
*                                      PROCESSING IDENTIFY CARD  S21016 52250021
SAVRG13  DS    F                       SAVE REG.13 WHILE         S21016 52300021
*                                      PROCESSING IDENTIFY CARD  S21016 52350021
SAVRG14  DS    F                       SAVE REG.14 WHILE         S21016 52400021
*                                      PROCESSING IDENTIFY CARD  S21016 52450021
LCLSAVE  DS    18F                     LOCAL SAVE AREA           S21016 52500021
INCLBRAD DC    V(HEWLFINC)                                              52600021
ADRVLDCK DC    V(HEWVLDCK)             ADR VLD CK RTN   OX04280,OY03413 52610002
REGION   DC    C'REGION  '                                              52650021
        DS     0F                                                       52700021
MXNOREG  DC    X'0003'   4 REGIONS ALLOWED.FIRST REGION IS REGION 0     52750021
ERR1     DC    AL2(ERR1LTL)                                             52800021
ERR2     DC    AL2(ERR2LTL)                                             52850021
ERR3     DC    AL2(ERR3LTL)                                             52900021
ERR4     DC    AL2(ERR4LTL)                                             52950021
ERR6     DC    AL2(ERR6LTL)                                             53000021
ERR8     DC    AL2(ERR8LTL)                                      A37667 53020000
ERR10    DC    AL2(ERR10LTL)                                            53050021
INDDNMAD DC    A(INDDNAME)                                       A47001 53080000
CIDRADD  DC    V(HEWLCIDR)             IDR PROCESSOR -- ENTRY    S21016 53100021
*                                      POINT FOR PROCESSING      S21016 53150021
*                                      DATA FROM AN IDENTIFY     S21016 53200021
*                                      CONTROL STATEMENT         S21016 53250021
SPSTRLEN DC    AL2(SPECMAX)            COUNTER VALUE FOR MAX.    S21016 53300021
*                                      LENGTH OF SPEC. STRINGS   S21016 53350021
ENASX    DC    H'16'    MAX. NO. OF ENTRIES IN ALIAS TABLE (HAS...      53400021
*    TO BE SMALLER THAN OR EQUAL TO THE MAX. NO. OF ENTRIES IN ...      53450021
*   THE ALIAS TABLE CREATED BY ADDRESS ASSIGNMENT )                     53500021
CONS    DC   X'00B7'                                                    53550021
DDLINID   DS    1H       ID OF DD LINE FOR LIBRARY OR INCLUDE           53600021
STAT     DC    X'00'     STATUS BYTE FOR THE SCANNER                    53650021
***  MEANING OF THE BITS IN STAT  IS :                                  53700021
***  B0     'OPD0 NEW'   THE OPERAND OF LEVEL 0 IS NEW (WHEN B0=1)      53750021
***  B1     'LEVEL 1 '   THE LEVEL OF THE LAST OPERAND IS 1 (WHEN B1=1) 53800021
***  B2     'CONTIN'   CONTINUATION BIT SET WHEN A CARD HAS THE CONTI-  53850021
**                    -NUATION CONDITION . USED AT THE FOLLOWING CARD   53900021
***  B3     'COMMENT'   THE CONTINUATION CONDITION OF THE PRESENT CARD  53950021
***                     APPLIES TO A COMMENT. NEXT CARD WILL BE A       54000021
***                     COMMENT CARD                                    54050021
***  B4     'END BY )'  THE LAST ALPHANUMERIC STRING IS FOLLOWED BY )   54100021
***  B5     'END BY ('  THE LAST ALPHANUMERIC STRING IS FOLLOWED BY (   54150021
***  B6     'END BY ,'      LAST ALPHAMERIC STRING IS FOLLOWED BY COMMA 54200021
***  B7     'END BY BLANK'  LAST ALPHAMERIC STRING IS FOLLOWED BY BLANK 54250021
OPTION   DC    X'00'      BYTE OF INDICATORE                            54300021
*                                                                     * 54350021
*  VALUE = 1   BIT 0    STRING EXPECTED TO BEGIN WITH BLANKS            54400021
*  VALUE = 1   BIT 1    INDICATES AT LEAST ONE VALID CHARACTER FOUND  * 54450021
*  VALUE = 1   BIT 2    MEANS OPD0 ABSENT                             * 54500021
*  VALUE = 1   BIT 3    PROCESSED AN INCLUDE CARD                     * 54550021
*  VALUE = 1   BIT 4    SYMBOL IS '*COMMON '                          * 54600021
*  VALUE = 1   BIT 5    THE HN (HIARCHY NUMBER) HAS BEEN FOUND        * 54650021
*  VALUE = 1   BIT 6    STRING MAY CONTAIN BLANKS AND SPECIAL  S21016 * 54700021
*                       CHARACTERS BETWEEN APOSTROPHES AND/OR  S21016 * 54750021
*                       MAY BE UP TO 40 CHARACTERS IN LENGTH   S21016 * 54800021
OLDSTAT  DC    X'00' OLD STATUS BYTE FOR THE SCANNER                    54900021
STATREPL DC    XL1'00'                                                  54950021
*                         B0=0='ENTERED BY CHANGE'                      55000021
COL72    DC    X'00' SAVE AREA FOR CHARACTER OF COLUMN 72               55050021
TEMP1    DC    X'00'                                                    55100021
         DS    50F                                                      55150021
HN       DC    H'00'              HIERARCHY NUMBER                      55200021
COMMON   DC    C'*COMMON '                                              55250021
PACK     PACK  OPD0(8),OPD0(0)                                          55300021
TEST     EQU   TEMP1                                                    55350021
IND1     DC    X'00'                                                    55400021
PREVSEG  DC    X'00'                                                    55450021
BLANK    EQU   C' '               BLANK                          Y01048 55460000
NUMBER   EQU   X'F0'              ZONE FOR DIGITS                Y01048 55470000
K255     EQU   255                MAX AUTH CODE                  Y01048 55480000
PACK1    PACK  OPD0(8),OPD1(0)    PACK AUTH CODE                 Y01048 55490000
AC       DC    CL8'AC      '      KEY WORD FOR AUTH CODE         Y01048 55492000
         EJECT                                                          55500000
*********************************************************************** 55550021
*                                                                     * 55600021
*                  SUB-PROGRAM SCNIDENT PROCESSES                     * 55650021
*                  USER-SUPPLIED IDR DATA FROM THE                    * 55700021
*                  IDENTIFY CONTROL STATEMENT                         * 55750021
*                                                              S21016 * 55800021
*********************************************************************** 55850021
         SPACE 2                                                 S21016 55900021
SCNIDENT TM    STAT,LEVEL1             TEST IF LEV.1 OPRND FOUND S21016 55950021
         BNO   SCN10230                IF NOT, BRANCH TO ERROR   S21016 56000021
         TM    OPTION,NOLEV0           TEST IF PREVIOUS OPERAND  S21016 56050021
*                                      WAS LEVEL 0               S21016 56100021
         BO    SCN10230                IF NOT, BRANCH TO ERROR   S21016 56150021
         NC    SPECSTR(2),SPECSTR      ANY VALID REC'D  XA05437,ZM30869 56160002
         BZ    SCN10230                BR IF NOT TO ERR XA05437,ZM30869 56170002
         ST    R1,SAVRG1               SAVE REG.1 CONTENTS       S21016 56200021
         LA    R1,PARMLIST             POINT REG.1 TO PARAMETER  S21016 56250021
*                                      LIST TO BE PASSED TO      S21016 56300021
*                                      IDR PROCESSOR             S21016 56350021
         STM   SAPTR,R14,SAVRG13       SAVE REG.13 CONTENTS      S21016 56400021
*                                      AND RETURN ADDR.          S21016 56450021
         LA    SAPTR,LCLSAVE           POINT TO LOCAL SAVE AREA  S21016 56500021
         L     R15,CIDRADD             GET ADDRESS OF IDR        S21016 56550021
*                                      PROCESSOR                 S21016 56600021
         BALR  R14,R15                 GO TO IDR PROCESSOR       S21016 56650021
*                                                                S21016 56700021
*                                      RETURN FROM IDR PROCESSOR S21016 56750021
         LM    SAPTR,R14,SAVRG13       RESTORE REG.13 CONTENTS   S21016 56800021
*                                      AND RETURN ADDR.          S21016 56850021
         L     R1,SAVRG1               RESTORE REG.1 CONTENTS    S21016 56900021
         BR    R14                     RETURN TO CONTINUE        S21016 56950021
*                                      SCANNING                  S21016 57000021
PARMLIST DS    0F                      PARAMETER LIST FOR IDR    S21016 57050021
*                                      MODULE                    S21016 57100021
IDNTSECT DC    A(OPD0)                 ADDR. OF CSECT NAME (LEV. S21016 57150021
*                                      0 OPRND OF IDENTIFY CARD) S21016 57200021
IDNTLEN  DC    A(SPECSTR)              ADDR. OF LENGTH OF IDR    S21016 57250021
*                                      DATA FROM IDENTIFY CARD   S21016 57300021
IDNTSTR  DC    A(IDRSTRNG)             ADDR. OF IDR DATA FROM    S21016 57350021
*                                      IDENTIFY CARD (LEVEL 1    S21016 57400021
*                                      OPERAND)                  S21016 57450021
         EJECT                                                          57500000
**********************************************************************  57550000
*                                                                    *  57600000
*        SUB-PROGRAM SCNEXPND CALLS HEWLFRAT TO ADD PATCH TEXT       *  57650000
*        TO THE END OF CONTROL SECTIONS SPECIFIED ON EXPAND          *  57700000
*        CONTROL STATEMENTS.  IF A NAMED COMMON SECTION IS           *  57750000
*        SPECIFIED ON AN EXPAND CARD, ITS LENGTH IS INCREASED        *  57800000
*        IN THE CESD.                                                *  57850000
*                                                                    *  57900000
*              RX AND RY ARE USED AS WORK REGISTERS.                 *  57950000
*                                                                    *  58000000
*                                                             Y01031 *  58050000
**********************************************************************  58100000
         SPACE 2                                                 Y01031 58150000
SCNEXPND TM    STAT,LEVEL1             TEST IF LEV.1 OPRND FOUND Y01031 58200000
         BNO   SCN10230                IF NOT, BRANCH TO ERROR   Y01031 58250000
         TM    OPTION,NOLEV0           TEST IF PREVIOUS OPERAND  Y01031 58300000
*                                      WAS LEVEL 0               Y01031 58350000
         BO    SCN10230                IF NOT, BRANCH TO ERROR   Y01031 58400000
         LA    RX,OPD1                 CHECK FOR VALID DIGITS    Y01031 58450000
         LA    RY,8                    IN THE LEVEL 1 OPERAND    Y01031 58500000
SCNXPD10 EQU   *                                                 Y01031 58550000
         CLI   0(RX),BLANK             IS THIS END OF FIELD?     Y01031 58600000
         BE    SCNXPD20                YES, BRANCH               Y01031 58650000
         TM    0(RX),NUMBER            IS THIS A DIGIT?          Y01031 58700000
         BNO   SCN10230                NO - ERROR                Y01031 58750000
         LA    RX,1(RX)                BUMP TO NEXT DIGIT        Y01031 58800000
         BCT   RY,SCNXPD10             SCAN TILL MAX OF 8 DIGITS Y01031 58850000
SCNXPD20 EQU   *                                                 Y01031 58900000
         BCTR  RX,0                    SUBTRACT 1 FROM END ADDR  Y01031 58950000
         LA    RY,OPD1                 GET START ADDR            Y01031 59000000
         SR    RX,RY                   RX HAS MACH. LGTH OF NUM  Y01031 59050000
         MVC   XPDSECT,OPD0            MOVE SECTION NAME         Y01031 59100000
         XC    OPD0(8),OPD0            USE OPD0 AS WORK SPACE    Y01031 59150000
         EX    RX,PACK1                PACK DIGIT                Y01031 59200000
         CVB   RX,OPD0                 CONVERT TO BINARY         Y01031 59250000
         LA    RY,K4095                GET MAX VALUE             Y01031 59300000
         CR    RX,RY                   COMPARE REAL TO MAX       Y01031 59350000
         BNH   SCNXPD30                IF < OR =, BRANCH         Y01031 59400000
         LR    RX,RY                   IF TOO BIG, TAKE MAX      Y01031 59450000
SCNXPD30 EQU   *                                                 Y01031 59500000
         STH   RX,XPDLEN               STORE LENGTH OF EXPANSION Y01031 59550000
*                                                                       59600000
*              SEARCH CESD FOR CSECT NAME TO BE EXPANDED         Y01031 59650000
*                                                                       59700000
         L     RX,CHESD                GET ADDR. OF CESD-16      Y01031 59750000
         LA    RX,CESDWTH(RX)          GET ADDR. OF 1ST LINE     Y01031 59800000
         LH    RY,ENCDC                GET NO. LINES IN CESD     Y01031 59850000
         LTR   RY,RY                   IS CESD SIZE ZERO?       OX03080 59860003
         BZ    SCN10230                ERROR IF NO CESD ENTRIES OX03080 59870003
         SLL   RY,FOUR                 MULTIPLY BY 16            Y01031 59900000
         AR    RY,RX                   GET ADDR. OF END OF CESD  Y01031 59950000
SCNXPD40 CLC   XPDSECT(LEN8),DISP0(RX) IS THIS THE CSECT?        Y01031 60000000
         BNE   SCNXPD50                IF NOT, BRANCH            Y01031 60050000
         TM    CESDTYPE(RX),SECTION    IS IT SD, PC OR CM?       Y01031 60100000
         BZ    SCNXPD60                IF SO,BRANCH              Y01031 60150000
SCNXPD50 LA    RX,CESDWTH(RX)          UPDATE TO NEXT LINE       Y01031 60200000
         CR    RX,RY                   END OF THE CESD?          Y01031 60250000
         BE    SCN10230                IF SO, IT IS AN ERROR     Y01031 60300000
         B     SCNXPD40                IF NOT, TEST NEXT LINE    Y01031 60350000
SCNXPD60 TM    CESDTYPE(RX),DELETE     IS IT MARKED DELETE?      Y01031 60360000
         BO    SCNXPD50                IF SO, CONTINUE SEARCH    Y01031 60370000
         L     RY,LENGTH(RX)           GET LENGTH OF SECTION     Y01031 60392000
         LA    RY,DISP0(RY)            CLEAR HIGH-ORDER BYTE     Y01031 60392400
         ST    RY,SAVELEN              SAVE UNEXPANDED LENGTH    Y01031 60392800
         AH    RY,XPDLEN               ADD EXPAND LENGTH         Y01031 60394000
         LA    RY,RNDUP(RY)            ADD 7 TO LENGTH           Y01031 60394417
         N     RY,DBLWD                ROUND TO DOUBLE WORD      Y01031 60394817
         ST    RY,TMPLEN               SAVE EXPANDED LENGTH      Y01031 60396000
         S     RY,SAVELEN              CALC TRUE EXPAND LENGTH  ZA01400 60398002
         STH   RY,XPDLEN               SAVE TRUE EXPAND LENGTH  ZA01400 60398102
         A     RY,SAVELEN              RESTORE EXPANDED LENGTH  ZA01400 60398202
         MVC   LENGTH+1(LEN3,RX),TMPLEN+1  UPDATE CESD LENGTH    Y01031 60398400
         TM    CESDTYPE(RX),COMSCT     IS IT A COMMON SECTION?   Y01031 60398500
         BNO   SCNXPD70                IF NOT, PROCESS AS AN SD  Y01031 60398600
         MVC   CMNAME,XPDSECT          MOVE CM NAME TO MESSAGE   Y01031 60398800
         UNPK  CMLEN(LEN5),XPDLEN(LEN3)  GET EXPAND LENGTH       Y01031 60399200
         NC    CMLEN(LEN4),ZONE        TURN OFF ZONE BITS        Y01031 60399600
         TR    CMLEN(LEN4),TRTAB       MAKE IT PRINTABLE         Y01031 60399700
         MVI   CMLEN+4,BLANK           CLEAR SIGN BYTE           Y01031 60403900
         ST    R1,SAVEONE              SAVE REGISTER ONE         Y01031 60405900
         LA    R1,XCMMSG               POINT TO THE MESSAGE      Y01031 60408200
         B     SCNXPD80                GO TO PRINT IT            Y01031 60412400
SCNXPD70 S     RX,CHESD                GET OFFSET TO CESD LINE   Y01031 60433300
         SRL   RX,FOUR                 DIVIDE BY 16 TO GET ESDID Y01031 60450000
         STH   RX,XPDID                SAVE CESDID               Y01031 60500000
         STM   R0,R15,SAVERGS          SAVE REGS. 0 THRU 15      Y01031 60550000
         L     R3,SAVELEN              ADDR. OF TEXT FOR RAT     Y01031 60570000
         L     R4,TMPLEN               GET EXPANDED CSECT LENGTH Y01031 60580017
         SR    R4,R3                   SUBTRACT OLD LNGTH TO GET Y01031 60582017
*                                      LENGTH OF TEXT FOR RAT    Y01031 60584017
         SR    R6,R6                   NO ID-LEN LIST PASSED     Y01031 60590000
         OI    APTSW3,XPDIND           INDICATE EXPAND ACTIVE    Y01031 60592000
         OI    APT0,TXTIND             INDICATE TEXT PROCESSING  Y01031 60594000
         OI    APT1,LMIND              INDICATE LOAD MODULE      Y01031 60596000
         L     R15,XPDTXTAD            GET EPA OF HEWLFRAT       Y01031 60600000
         LA    R13,REGSA               POINT TO SAVE AREA        Y01031 60610000
         ST    BASE,TMPBASE1           SAVE 1ST BASE REGISTER    Y01031 60612000
         ST    BASE2,TMPBASE2          SAVE 2ND BASE REGISTER    Y01031 60614000
         LR    R5,RX                   CESDID OF TEXT FOR RAT    Y01031 60620000
         CNOP  2,4                     INSURE FULLWORD ALIGNMENT Y01031 60630000
*                                      FOR RETURN ADDR FROM BALR Y01031 60640000
         BALR  R14,R15                 LINK TO TXT EXPAND RTN    Y01031 60650000
         B     DISP12(R15)             BRANCH AROUND SAVE AREA   Y01031 60650100
TMPBASE1 DS    1F                      SAVE AREA FOR 1ST BASEREG Y01031 60650200
TMPBASE2 DS    1F                      SAVE AREA FOR 2ND BASEREG Y01031 60650300
         L     BASE,DISP4(R15)         RESTORE 1ST BASE REGISTER Y01031 60658800
         L     BASE2,DISP8(R15)        RESTORE 2ND BASE REGISTER Y01031 60660800
         NI    APTSW3,XPDOFF           TURN OFF EXPAND ACTIVE    Y01031 60667500
         NI    APT0,TXTOFF             TURN OFF TEXT PROCESSING  Y01031 60676000
         NI    APT1,LMOFF              TURN OFF LOAD MODULE      Y01031 60684500
         LM    R0,R15,SAVERGS          RESTORE REGS. 0 THRU 15   Y01031 60693000
         MVC   SDNAME,XPDSECT          MOVE CSECT NAME TO MSG    Y01031 60701500
         UNPK  SDLEN(LEN5),XPDLEN(LEN3)  GET EXPAND LENGTH       Y01031 60710000
         NC    SDLEN(LEN4),ZONE        TURN OFF ZONE BITS        Y01031 60720000
         TR    SDLEN(LEN4),TRTAB       MAKE IT PRINTABLE         Y01031 60730000
         MVI   SDLEN+4,BLANK           CLEAR SIGN BYTE           Y01031 60740000
         UNPK  SDLOC(LEN7),SAVELEN+1(LEN4)  GET EXPAND OFFSET    Y01031 60742000
         NC    SDLOC(LEN6),ZONE        TURN OFF ZONE BITS        Y01031 60744000
         TR    SDLOC(LEN6),TRTAB       MAKE IT PRINTABLE         Y01031 60744400
         MVI   SDLOC+6,PERIOD          CLEAR SIGN BYTE           Y01031 60744800
         ST    R1,SAVEONE              SAVE REGISTER ONE         Y01031 60745200
         LA    R1,XSDMSG               POINT TO THE MESSAGE      Y01031 60746000
SCNXPD80 STM   R13,R15,SAVDEF          SAVE REGS. 13,14 & 15     Y01031 60748000
         L     R15,ERDIG               GET EPA OF LOG ROUTINE    Y01031 60748100
         ST    R0,SAVEZERO             SAVE REGISTER ZERO        Y01031 60748200
         LH    R0,XPDMSG               LOAD MESSAGE CODE         Y01031 60748400
         OI    IDRSWS,IDRMSG           INDICATE R1 -> MSG LINE   Y01031 60748800
         BALR  R14,R15                 LINK TO MESSAGE LOG RTN   Y01031 60749200
         LM    R13,R15,SAVDEF          RESTORE REGS. 13,14 & 15  Y01031 60749600
         LM    R0,R1,SAVEZERO          RESTORE REGISTERS 0 & 1   Y01031 60762200
         NI    IDRSWS,MSGOFF           TURN OFF SPECIAL MSG IND. Y01031 60774800
         BR    R14                     RETURN TO MAIN LINE       Y01031 60787400
XPDSECT  DS    CL8                     CSECT NAME FOR EXPAND     Y01031 60800000
XPDTXTAD DC    V(HEWLFRAT)             EP ADDR. OF FRAT FOR      Y01031 60850000
*                                      TEXT EXPANSION            Y01031 60900000
SAVERGS  DS    16F                     SAVE REGS. 0 THRU 15      Y01031 60950000
SAVDEF   EQU   SAVERGS+52              SAVE REGS. 13 THRU 15     Y01031 60960000
SAVEZERO DS    2F                      SAVE REGISTER ZERO        Y01031 60970000
SAVEONE  EQU   SAVEZERO+4              SAVE REGISTER ONE         Y01031 60972000
SAVELEN  DC    F'0'                    SAVE UNEXPANDED SD LENGTH Y01031 60980000
TMPLEN   DC    F'0'                    SAVE EXPANDED CM LENGTH   Y01031 60990000
XCMMSG   DS    0F                      MSG LINE FOR A COMMON     Y01031 60992000
CMLEN    DS    CL5                     NO. OF BYTES ADDED        Y01031 60994000
         DC    C'BYTES HAVE BEEN ADDED TO COMMON SECT.'     MSG  Y01031 60996037
CMNAME   DS    CL8                     COMMON NAME               Y01031 60998000
         DC    C'.'                    MSG TEXT                  Y01031 60998400
         DC    26C' '                  MSG TEXT                  Y01031 60998500
XSDMSG   DS    0F                      MSG LINE FOR A CSECT      Y01031 60998800
SDLEN    DS    CL5                     NO. OF BYTES ADDED        Y01031 60999200
         DC    C'BYTES HAVE BEEN ADDED TO CONTROL SECT.'  MSG    Z01418 60999637
SDNAME   DS    CL8                     CSECT NAME                Y01031 60999700
         DC    C' AT OFFSET '          MSG TEXT                  Y01031 60999800
SDLOC    DS    CL7                     CSECT OFFSET FOR EXPAND   Y01031 60999900
         DC    8C' '                   MSG TEXT                  Y01031 61009900
PERIOD   EQU   C'.'                    MSG TEXT                  Y01031 61016600
         DS    0H                      HALF-WORD ALIGNMENT       Y01031 61018600
XPDMSG   DC    X'104A'                 EXPAND SUCCESS MESSAGE    Y01031 61020600
XPDLEN   DC    H'0'                    LENGTH FOR AN EXPAND      Y01031 61026600
XPDID    DC    H'0'                    CESDID FOR AN EXPAND      Y01031 61028600
ZONE     DC    X'0F0F0F0F0F0F'         MASK TO TURN OFF ZONE     Y01031 61030600
*                                      BITS AFTER UNPACK         Y01031 61032600
TRTAB    DC    C'0123456789ABCDEF'     TRANSLATION TABLE         Y01031 61033000
DBLWD    DS    0F                      MASK TO ROUND LENGTH      Y01031 61033117
         DC    X'FFFFFFF8'             TO A DOUBLE WORD          Y01031 61033217
RNDUP    EQU   7                       ADD-ON TO INSURE ROUNDING Y01031 61038817
*                                      UP AND NOT DOWN           Y01031 61040817
K4095    EQU   4095                    MAX.LENGTH FOR EXPAND     Y01031 61044417
FOUR     EQU   4                       SHIFT LENGTH OF 4 BITS    Y01031 61050000
CESDWTH  EQU   8                       WIDTH OF A  CESD LINE     Y01031 61100000
LEN3     EQU   3                       LENGTH OF 3 BYTES         Y01031 61160000
LEN4     EQU   4                       LENGTH OF 4 BYTES         Y01031 61170000
LEN5     EQU   5                       LENGTH OF 5 BYTES         Y01031 61172000
LEN6     EQU   6                       LENGTH OF 6 BYTES         Y01031 61174000
LEN7     EQU   7                       LENGTH OF 7 BYTES         Y01031 61176000
LEN8     EQU   8                       LENGTH OF 8 BYTES         Y01031 61180000
DISP0    EQU   0                       DISPLACEMENT OF ZERO      Y01031 61200000
DISP4    EQU   4                       DISPLACEMENT OF 4 BYTES   Y01031 61202000
DISP8    EQU   8                       DISPLACEMENT OF 8 BYTES   Y01031 61204000
DISP12   EQU   12                      DISPLACEMENT OF 12 BYTES  Y01031 61206000
R4       EQU   4                       REGISTER 4                Y01031 61210000
R5       EQU   5                       REGISTER 5                Y01031 61220000
CESDTYPE EQU   8                       DISPLACEMENT TO TYPE      Y01031 61250000
*                                      FIELD IN A CESD LINE      Y01031 61300000
LENGTH   EQU   12                      DISPLACEMENT TO LENGTH    Y01031 61310000
*                                      FIELD IN A CESD LINE      Y01031 61320000
SECTION  EQU   X'02'                   MASK TO TEST FOR ALL      Y01031 61350000
*                                      CESD TYPES OTHER THAN     Y01031 61400000
*                                      SD, PC OR CM              Y01031 61450000
COMSCT   EQU   X'05'                   MASK TO TEST FOR A CM     Y01031 61460000
DELETE   EQU   X'10'                   MASK FOR CESD DELETE BIT  Y01031 61500000
IDRMSG   EQU   X'20'                   MASK TO LOG XPD MSG       Y01031 61510000
MSGOFF   EQU   X'DF'                   MASK TO RESET MSG SWITCH  Y01031 61520000
XPDIND   EQU   X'80'                   MASK TO SET XPAND SWITCH  Y01031 61550000
TXTIND   EQU   X'02'                   MASK TO SET TEXT SWITCH   Y01031 61600000
LMIND    EQU   X'20'                   MASK TO SET LOAD MOD SWCH Y01031 61650000
XPDOFF   EQU   X'7F'                   TO RESET XPAND SWITCH     Y01031 61700000
TXTOFF   EQU   X'FD'                   TO RESET TEXT SWITCH      Y01031 61750000
LMOFF    EQU   X'DF'                   TO RESET LOAD MOD SWCH    Y01031 61800000
         HEWAPT                                                         70000000
         END                                                            70050000
./  ADD  SSI=63180089,NAME=HEWLFSYM
         TITLE    'HEWLFSYM  SYM RECORD PROCESSOR'                      00050021
*********************************************************************** 00100021
*                                                                       00150021
*STATUS: CHANGE LEVEL                                                   00200021
*                                                                       00250021
*FUNCTION/OPERATION:                                                    00300021
*   PASS SYMS AND ESDS WHEN THE LOAD MODULE OUTPUT OF THE LINKAGE       00350021
*   EDITOR HAS THE ATTRIBUTE - TEST. SYM CARDS AND ESDS CARDS FROM AN   00400021
*   OBJECT MODULE ARE PACKED 3 CARDS PER RECORD (240 BYTES),EXCEPT FOR  00450021
*   THE LAST RECORD PER OBJECT MODULE WHICH MAY BE EITHER 80,160 OR     00500021
*   240 BYTES. SYM RECORDS FROM LOAD MODULES ARE PASSED IN THE SAME     00550021
*   FORM AS THEY ARE READ IN. IF A LOAD MODULE (AS PART OF INPUT) DOES  00600021
*   NOT CONTAIN SYM RECORDS THEN THE ESD RECORDS ARE PASSED. ALL SYM    00650021
*   RECORDS CONSIST OF A 4 BYTE HEADER PRECEEDING THE SYM/ESD DATA. THE 00700021
*   FIRST BYTE IS A 40(HEX),THE SECOND BYTE WILL BE EITHER A (1XXXXXXX) 00750021
*   WHICH MEANS THAT THIS SYM RECORD CONTAINS ESDS FROM A LOAD MODULE   00800021
*   THAT WAS NOT IN TEST WHEN IT WAS ORIGINALLY LINK-EDITED; OR IT MAY  00850021
*   BE A (0XXXXXXX) WHICH IS THE OPPOSITE OF (1XXXXXXX). BYTES 3 AND 4  00900021
*   WILL CONTAIN THE DATA BYTE COUNT IN THIS SYM RECORD.                00950021
*                                                                       01000021
*ENTRY POINTS:                                                          01050021
*        HEWLFSYM - CONTROL SECTION NAME                              * 01100021
*                                                                       01150021
*INPUT:                                                                 01200021
*    SYM/ESD CARDS OR SYM/ESD RECORDS                                   01250021
*                                                                       01300021
*OUTPUT:                                                                01350021
*   SYM RECORDS                                                         01400021
*                                                                       01450021
*EXTERNAL ROUTINES:                                                     01500021
*    N/A                                                                01550021
*                                                                       01600021
*EXITS:                                                                 01650021
*    NORMAL:                                                            01700021
*    RETURNS VIA ADDRESS PASSED IN REGISTER 14                          01750021
*    ERRORS:                                                            01800021
*    N/A                                                                01850021
*                                                                       01900021
*TABLES/WORK AREAS:                                                     01950021
*    LOAD MODULE BUFFER                                                 02000021
*    ALL PURPOSE TABLE                                                  02050021
*                                                                       02100021
*    REGISTER INPUT                                                     02150021
*    REGISTER  2 - ADDRESS OF ALL PURPOSE TABLE                         02200021
*    REGISTER  4 - BYTE CT = 80 OR 0; 0 MEANS PURGE SYM BUFFER          02250021
*    REGISTER  6 - ADDRESS OF SYM/ESD CARD TO BE MOVED TO BUFFER        02300021
*    REGISTER 13 - ADDRESS OF A REGISTER SAVE AREA (16 WORDS)           02350021
*    REGISTER 14 - RETURN ADDRESS                                       02400021
*                                                                       02450021
*ATTRIBUTES:                                                            02500021
*   REUSABLE                                                            02550021
*NOTES:                                                                 02600021
*    HEWLCSYM  ASSUMES 2 BITS WILL BE INITIALIZED TO 0 AT THE END OF    02650021
*    EACH INPUT MODULE, THEY ARE USED FOR INITIALIZATION .              02700021
*    1) USED TO INDICATE INITIALIZATION OF BUFER BYTE COUNT (1 = INIT)  02750021
*    2) NO SYM RECORDS HAVE BEEN PROCESSD IN THIS MODULE (1= SYMS SEEN) 02800021
*********************************************************************** 02850021
*********************************************************************** 02900021
*                                                                     * 02950021
*                   SYM  PROCESSOR -  COMMON TO E AND F               * 03000021
*                                                                     * 03050021
*********************************************************************** 03100021
*********************************************************************** 03150021
*        REGISTER ASSIGNMENT                                          * 03200021
*********************************************************************** 03250021
APT      EQU   2                   ADDRESS OF ALL PURPOSE TABLE         03300021
BUFFCT   EQU   3                                                        03350021
INCT     EQU   4                   INPUT PARM - NO BYTES OF SYM (80)    03400021
BUFFADD  EQU   5                   ADDRESS OF LOAD MODULE BUFFER        03450021
INADD    EQU   6                   INPUT PARM - ADDRESS OF SYMS TO MVE  03500021
TEMP1    EQU   7                   TEMPORARY REG                        03550021
BASE     EQU   12                  BASE REGISTER                        03600021
TEMP2    EQU   13                  13 - ADD OF SYSLMOD DCB              03650021
*********************************************************************** 03700021
*        ALL PURPOSE TABLE DISPLACEMENTS                              * 03750021
*********************************************************************** 03800021
DISP     EQU   0                       DISPO WHERE TO PUT REGS REL 13   03850021
INIT     EQU   X'04'               BIT TEST - FOR FIRST TIME ENTER      03900021
LOADMOD  EQU   X'20'                    LOAD MODULE BIT                 03950021
SYMCTL   EQU   X'40'               CTL IND. FOR HEADER OF SYM RCD       04000021
SYMLDMOD EQU   X'20'                   SYM RECORD IN LOAD MOD           04050021
SYMPRES  EQU   X'04'                    SYM PRESENT BIT                 04100021
HEWLFSYM CSECT                                                          04150021
         EXTRN HEWLCMDB                                                 04200021
*                                                                       04250021
*        SAVE ALL REGISTERS AND INITIALIZE BASE (REGISTER 12)           04300021
         USING *,15                                                     04350021
         BC    15,MODID+6                                               04400021
MODID   DC     C'00MSYM'                                                04450021
*                                                                       04500021
         STM   14,12,DISP(13)          SAVE ALL REGISTERS               04550021
         USING SYM00100,BASE                                            04600021
         BALR  BASE,0                   INITIALIZE BASE REGISTER        04650021
         USING APTDSECT,APT        ESTABLISH BASE REG FOR APT DSECT     04700021
*                                                                       04750021
*        INITIALIZE                                                     04800021
*                                                                       04850021
         DROP   15                                                      04900021
SYM00100 ST    13,SAVERG13             SAVE ADDRESS OF CALLERS AREA     04950021
         L     BUFFADD,RLDINPAD    RLD INPUT BUFFER ADDRESS             05000021
         OI    PDSE8,SYMPRES       SET SYM PRESENT IN LD MD             05050021
*                                                                       05100021
*                                                                       05150021
         TM    APT1,LOADMOD        IS THIS A LOAD MODULE                05200021
         BC    8,SYM00600               NO                              05250021
*                                                                       05300021
*                                                                       05350021
         CLI   0(BUFFADD),SYMCTL        IS THIS A SYM RECORD            05400021
         BC    7,SYM00700               NO / IT IS AN ESD -             05450021
*                                                                       05500021
*                                                                       05550021
         OI    APT2,SYMLDMOD       SET IND = ON / SYM IN LD MODULE      05600021
SYM00200 LH    BUFFCT,2(BUFFADD)        PICK UP LENGTH OF THIS DATA     05650021
*                                                                       05700021
*                                                                       05750021
         LTR   INCT,INCT                IS BUFFER TO BE PURGED          05800021
         BC    2,SYM00800              NO/OBJECT MOD - CK COUNT = 240   05850021
*                                                                       05900021
*        INITIALIZE FOR WRITE ,CHECK ROUTINE                            05950021
*                                                                       06000021
SYM00300 LA    BUFFCT,4(BUFFCT)         INC WRITE CT 4 - FOR HEADER     06050021
         MVI   0(BUFFADD),SYMCTL        PUT HEADER ON DATA / SYM RCD    06100021
         L     TEMP1,DCBLMOD                                            06150021
         LA    TEMP2,REGSA         ADD TO SAVE REGISTER AREA            06200021
*                                                                       06250021
*        WRITE SYM RECORD ON OUTPUT FILE                                06300021
*                                                                       06350021
         WRITE SYMDECB,SF,(TEMP1),(BUFFADD),(BUFFCT)                    06400021
*                                                                       06450021
*        CHECK THE WRITE                                                06500021
*                                                                       06550021
         CHECK SYMDECB                                                  06600021
*                                                                       06650021
*                                                                       06700021
SYM00400 SR    BUFFCT,BUFFCT           ZERO BUFFER BYTE CT              06750021
         OI    APT2,INIT           SET INDICATOR - ENTERED FOR THIS MOD 06800021
*                                                                       06850021
*                                                                       06900021
         LTR   INCT,INCT                IS IN BYTE CT = 0               06950021
         BC    2,SYM00900               NO / GET DATA LENGTH AND CONT.  07000021
*                                                                       07050021
*        RESTORE REGISTERS AND RETURN TO CALLER                         07100021
*                                                                       07150021
SYM00500 L     13,SAVERG13             RESTORE ADD OF CALLERS SAVEAREA  07200021
         LM    14,12,DISP(13)          RESTORE CALLERS REGISTERS        07250021
         BCR   15,14                    RETURN TO CALLER                07300021
*                                                                       07350021
*                                                                       07400021
SYM00600 TM    APT2,INIT           1ST TIME ENTERED IN OBJECT MOD       07450021
         BC    8,SYM00400              YES / GO TO RESTORE CT TO = 0    07500021
         MVI   1(BUFFADD),X'00'         SET NO ESD FROM LOAD MOD(NOT IN 07550021
*                                      TEST) IN THIS RECORD             07600021
         BC    15,SYM00200              NO  / GO GET LENGTH OF DATA     07650021
*                                                                       07700021
*                                                                       07750021
SYM00700 TM    APT2,SYMLDMOD       HAVE SYM BEEN SEEN YET (INLDMD)      07800021
         BC    1,SYM00500               YES / DONOT PASS ESDS/DONE B 4  07850021
         LA    BUFFADD,4(BUFFADD)       INC BUFF ADD TO START OF DATA 4 07900021
         MVI        1(BUFFADD),X'80'    SET ESDS FROM LOAD MODULE  (NOT 07950021
*                                      IN TEST) IN THIS RECORD          08000021
         BC    15,SYM00200             NO / PROCESS ESDS AS SYMS        08050021
*                                                                       08100021
*                                                                       08150021
SYM00800 LA    TEMP1,240                240- MAX NO.SYM BYTES IN BUFFER 08200021
         CLR   BUFFCT,TEMP1             IS BUFFER FULL                  08250021
         BC    8,SYM00300               YES / GO TO PURGE BUFFER        08300021
*                                                                       08350021
*        MOVE SYM/ESD TO BUFFER - UPDATE BUFFER BYTE CT - GO TO RETURN  08400021
*                                                                       08450021
SYM00900 AR    INCT,BUFFCT             INC CT BY 80                     08500021
         STH   INCT,2(BUFFADD)         RESTORE BUFFER CT                08550021
         AR    BUFFADD,BUFFCT           ADDRESS OF WHERE TO PUT SYMS    08600021
         MVC   4(80,BUFFADD),0(INADD)   MOVE SYMS TO LOAD MOD BUFFER    08650021
         BC    15,SYM00500              GO TO RESTORE REGS              08700021
SAVERG13 DS    F                       SAVE CALLERS REG 13              08750021
DCBLMOD  DC    A(HEWLCMDB)                                              08800021
         HEWAPT                                                         08850021
*                                                                       08900021
*                                                                       08950021
*********************************************************************** 09000021
         END                                                            09050021
