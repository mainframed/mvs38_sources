./  ADD  SSI=40440955,NAME=HEWLDIDY
IDEN  TITLE 'IDENTIFICATION MODULE FOR VS LOADER'                       00050000
*********************************************************************** 00100021
*                                                                     * 00150021
*TITLE 'HEWLIDEN'- IDENTIFICATION MODULE FOR THE VS LOADER            * 00200000
*                                                                     * 00250021
*STATUS -CHANGE LEVEL 0                                               * 00300021
*                                                                     * 00350021
*FUNCTION/OPERATION - THIS MODULE PERFORMS THE FOLLOWING -            * 00400021
*   1. BUILDS MINI-CESD OF SD'S AND CM'S FOLLOWING PROGRAM IF TSO     * 00450021
*      FLAG IS ON AND SPACE IS AVAILABLE.                             * 00500021
*   2. BUILDS EXTENT LIST FOR IDENTIFY MACRO. FIRST EXTENT DEFINES    * 00550021
*      LOADER-LOADED TEXT. SECOND EXTENT DEFINES MINI-CESD. REMAINING * 00600021
*      EXTENTS DEFINE COMPILER.LOADED TEXT AS DESCRIBED ON MOD        * 00650021
*      RECORDS.                                                       * 00700021
*   3. ISSUES IDENTIFY MACRO                                          * 00750021
*                                                                     * 00800021
*ENTRY POINTS - HEWLIDEN                                              * 00850021
*                                                                     * 00900021
*INPUT - REGISTER 13 - ADDR OF SAVE AREA                              * 00950021
*        REGISTER 14 - RETURN ADDRESS                                 * 01000021
*        REGISTER 11 - ADDR OF COMMUNICATIONS AREA                    * 01050021
*                                                                     * 01100021
*OUTPUT - MINI-CESD MAY BE BUILT                                      * 01150021
*         PROGRAM WILL BE IDENTIFIED                                  * 01200021
*                                                                     * 01250021
*EXTERNAL ROUTINES -                                                  * 01300021
*                                                                     * 01350021
*  'HEWERROR' - LOG ERROR MESSAGES                                    * 01400021
*                                                                     * 01450021
*EXITS - NORMAL- TO CALLER                                            * 01500021
*        ERROR - TO HEWERROR                                          * 01550021
*                                                                     * 01600021
*TABLES/WORK AREAS-                                                   * 01650021
*  'HEWLDCOM' - ALL COMMUNICATION INFORMATION                         * 01700021
*  'IDPARM'   - PARAMETER LIST FOR IDENTIFY ROUTINE                   * 01750021
*  'MINICESD' - UNORDERED THREE WORD ENTRIES OF FORMAT                * 01800021
*                  0     4    8 9                                     * 01850021
*                  *****************                                  * 01900021
*                  *    *    *S*   * WHERE BYTE 8 WILL BE 00 FOR SD   * 01950021
*                  *CSECTNAME*D*ADR*                     05 FOR CM    * 02000021
*                  *****************                                  * 02050021
*                                                                     * 02100021
*ATTRIBUTES - REFRESHABLE,REENTRANT,REUSABLE                          * 02150021
*                                                                     * 02200021
*NOTES - NONE                                                         * 02250021
*                                                                     * 02300021
*********************************************************************** 02350021
         EJECT                                                          02400021
HEWLIDEN CSECT                                                          02450021
R0       EQU   0   WORK REGISTER                                        02500021
R1       EQU   1   WORK REGISTER                                        02550021
R2       EQU   2   WORK REGISTER                                        02600021
R3       EQU   3   WORK REGISTER                                        02650021
R4       EQU   4   WORK REGISTER                                        02700021
R5       EQU   5   WORK REGISTER                                        02750021
R6       EQU   6   WORK REGISTER                                        02800021
R7       EQU   7   IDENTIFY PARAMETER DSECT                             02850021
*   CAUTION - REGISTER 7 CHANGES AS EXTENT LIST CREATED                 02900021
R8       EQU   8   WORK REGISTER                                        02950021
R9       EQU   9   WORK REGISTER                                        03000021
R10      EQU   10  WORK REGISTER                                        03050021
R11      EQU   11  COMMUNICATIONS AREA                                  03100021
R12      EQU   12  BASE REGISTER                                        03150021
R13      EQU   13  SAVE AREA REGISTER                                   03200021
R14      EQU   14  LINKAGE REGISTER                                     03250021
R15      EQU   15  LINKAGE REGISTER                                     03300021
*                                                                       03350021
*        HOUSEKEEPING                                                   03400021
*                                                                       03450021
         USING *,R15                                                    03500021
         SAVE  (14,12),,*                                               03550021
         LR    R12,R15                                                  03600021
         DROP  R15                                                      03650021
         USING HEWLIDEN,R12            BASE REGISTER                    03700021
         USING HEWLDCOM,R11            COMMUNICATIONS AREA              03750021
         USING ERCODES,0           ERROR CODE DSECT                     03800021
         L     R13,8(R13)          SAVE AREA CHAIN                      03850021
*                                                                       03900021
*        GET SPACE FOR IDENTIFY PARAMETER LIST                          03950021
*                                                                       04000021
         LH    R8,CMNUMXS          PICK UP NO. EXTENTS ON MOD CARDS     04050021
         LTR   R8,R8               WERE THERE ANY                       04100021
         BNZ   ID5                 YES. BRANCH                          04150021
         TM    CMFLAG3,CQTS        NO. HOW ABOUT MINICESD               04200021
         BZ    ID6                 NO. DON'T WANT IT. BRANCH            04250021
ID5      LA    R8,1(R8)            EXTENT FOR MINI-CESD                 04300021
ID6      LA    R8,1(R8)            EXTENT FOR LOADER LOADED TEXT        04350021
         STH   R8,CMNUMXS          SAVE NO. OF EXTENTS                  04400021
         SLL   R8,3                2 WORDS PER EXTENT PLUS              04450021
         LA    R8,20(R8)           FIXED PORTION OF IDENTIFY PAEAMETER  04500021
*                                    LIST GIVES TOTAL SPACE NEEDED      04550021
         L     R7,CMLOWTBL         GET LOWEST TABLE ADDRESS             04600021
         SR    R7,R8               WILL THE PARM LIST FIT               04650021
         TM    CMFLAG4,CQCOMMON    WAS COMMON ALLOC                     04700021
         BNO   ID7                 NO. BRANCH                           04750021
         C     R7,CMTOPCOD         YES. WE CAN OVLAP COMMON             04800021
         BNL   ID8                                                      04850021
         B     IDTOOBIG            CAN'T OVERLAY TEXT                   04900021
ID7      C     R7,CMNXTTXT         SEE IF THERE'S ROOM                  04950021
         BL    IDTOOBIG            NO. BRANCH                           05000021
ID8      ST    R7,CMLOWTBL         STORE NEW LOWEST TABLE ADDRESS       05050021
*                                                                       05100021
*        MOVE IN ENTRY POINT AND PROGRAM NAME                           05150021
*                                                                       05200021
         USING IDPARM,R7                                                05250021
         MVC   IDEP(4),CMEPADDR    MOVE ENTRY POINT                     05300021
         MVC   IDNAM(8),CMPGMNM    MOVE PROGRAM NAME                    05350021
*                                                                       05400021
*        INITIALIZE EXTENT LIST                                         05450021
*                                                                       05500021
         LH    R9,CMNUMXS          STORE NO OF EXTENTS                  05550021
         ST    R9,IDNOXS                                                05600021
         SLL   R9,3                MULTIPLY BY 8                        05650021
         LA    R9,8(R9)            ADD 8                                05700021
         ST    R9,IDXLEN           STORE LENGTH OF EXTENT LIST          05750021
         LH    R9,CMNUMXS          GET NUMBER OF EXTENTS AGAIN          05800021
         LR    R3,R9                                                    05850021
         SLL   R9,2                NO. EXTENTS TIMES FOUR IS DIFFERENCE 05900021
*                                    BETWEEN LENGTH AND ADDRESS FIELDS  05950021
*                                    IN EXTENT LIST                     06000021
*                                                                       06050021
*        FIRST EXTENT IS LOADER LOADED TEXT                             06100021
*                                                                       06150021
         L     R5,CMMAINPT         FIRST EXTENT ADDRESS IN R5           06200021
         L     R6,CMNXTTXT         LENGTH OF FIRST EXTENT               06250021
         SR    R6,R5               IN REGISTER 6                        06300021
         BAL   R14,IDENTER         MAKE ENTRY IN EXTENT LIST            06350021
*                                                                       06400021
*        SECOND EXTENT IS MINI-CESD                                     06450021
*                                                                       06500021
         AR    R5,R6               GET ADDRESS OF MINI-CESD IN R5       06550021
         L     R10,CMLOWTBL        GET UPPER LIMIT FOR MINI-CESD        06600021
         BAL   R14,IDMINI          GO CONSTRUCT IT                      06650021
         TM    CMFLAG4,CQMINI      WAS IT BUILT                         06700021
         BO    IDMINBLT            YES                                  06750021
         L     R5,CMMAINPT         NO. USE VALID DUMMY ADDRESS          06800021
         SR    R6,R6               SET LENGTH OF EXTENT =0              06850021
         B     ID9                 GO ENTER EXTENT                      06900021
IDMINBLT LA    R6,7(R6)            ROUND UP TO DOUBLE WORD              06950021
         N     R6,DBLMASK                                               07000021
         ST    R6,CMNXTTXT         SAVE LAST TEXT ADDRESS               07050021
         SR    R6,R5               GET LENGTH                           07100021
ID9      BAL   R14,IDENTER         ENTER MINI-CESD EXTENT               07150021
*                                                                       07200021
*        REMAINING EXTENTS ARE COMPILER-LOADED TEXT                     07250021
*                                                                       07300021
         L     R8,CMXLCHN          NOW DO MOD EXTENTS                   07350021
IDMODS   L     R5,4(R8)            GET ADDRESS                          07400021
         L     R6,8(R8)            GET LENGTH                           07450021
         BAL   R14,IDENTER         GO ENTER EXTENT                      07500021
         L     R8,0(R8)            GET NEXT IN CHAIN                    07550021
         B     IDMODS                                                   07600021
*                                                                       07650021
*        ENTER EXTENT ADDRESS AND LENGTH IN EXTENT LIST                 07700021
*                                                                       07750021
IDENTER  ST    R6,IDXTNT           STORE LENGTH                         07800021
         ST    R5,IDXTNT(R9)       STORE ADDRESS                        07850021
         BCT   R3,IDENTOUT         ARE WE THRU WITH EXTENT LIST         07900021
         MVI   IDXTNT,X'80'        YES. FLAG LAST ENTRY                 07950021
         B     IDID                GO DO IDENTIFY                       08000021
IDENTOUT LA    R7,4(R7)                                                 08050021
         BR    R14                 NO. RETURN TO GET ANOTHER EXTENT     08100021
*                                                                       08150021
*        ISSUE IDENTIFY MACRO                                           08200021
*                                                                       08250021
IDID     L     R1,CMLOWTBL         POINT TO PARAMETER LIST              08300021
         IDENTIFY    MF=(E,(1))    IDENTIFY LOADED PROGRAM              08350021
         LTR   R15,R15             OKAY                                 08400021
         BNZ   IDBAD               ERROR CODE REC'D FROM IDENTIFY       08450021
         OI    CMFLAG4,CQIDONE     SHOW IDENTIFICATION ACCOMPLISHED     08500021
*                                                                       08550021
*        RETURN TO CALLER                                               08600021
*                                                                       08650021
IDOUT    L     R13,4(R13)          RETURN                               08700021
         RETURN (14,12),T                                               08750021
*                                                                       08800021
*        ERROR CONDITIONS                                               08850021
*                                                                       08900021
IDBAD    LA    R1,8                ERROR CODE FROM IDENTIFY             08950021
         LA    R0,ERIDEN1          LOAD ERROR CODE                      09000021
         CR    R15,R1              WAS THIS DUPLICATE NAME              09050021
         BE    IDERR               YES.                                 09100021
         LA    R0,ERIDEN2          LOAD ERROR CODE                      09150021
IDERR    LA    R1,CMPGMNM          PRINT OUT NAME AND RETURN CODE       09200021
         B     IDERROR                                                  09250021
IDTOOBIG LA    R0,ERSIZE2          PROGRAM TOO LARGE                    09300021
IDERROR  L     R15,ADRERROR        GO TO LOG ERROR                      09350021
         BALR  R14,R15                                                  09400021
         B     IDOUT               AND LEAVE                            09450021
*                                                                       09500021
*        THIS ROUTINE CONSTRUCTS MINI-CESD FOR TEST PACKAGE IF          09550021
*        TSO IS OPERATING                                               09600021
*        IT EXPECTS - R5=STARTING ADDR FOR MINI-CESD                    09650021
*                     R10=UPPER LIMIT OF CORE AVAILABLE                 09700021
*        IT RETURNS - R5=AS IS                                          09750021
*                     R6=LENGTH OF EXTENT                               09800021
*                     R10,R1,R2=DESTROYED                               09850021
*                     FLAG 'CQMINI' IN 'CMFLAG4' SET IF BUILD OK        09900021
*        SEE IEWLRELO FOR CHAIN SETUP                                   09950021
*                                                                       10000021
IDMINI   TM    CMFLAG3,CQTS        IS THIS TSO                          10050021
         BZ    IDNOMINI            NO. DON'T CONSTRUCT MINI-CESD        10100021
         LA    R2,12               ADJUST REGISTER 10(UPPER LIMIT)      10150021
         SR    R10,R2              TO MAKE OVERFLOW CHECK EASIER        10200021
         LR    R6,R5               GET STARTING ADDRESS                 10250021
         LA    R2,MINITYPE         TYPES TO GO IN MINI-CESD             10300021
IDMINI3  IC    R1,0(R2)            GET FIRST TYPE                       10350021
         N     R1,TYPEONLY         GET ITS INDEX INTO CHAIN TABLE       10400021
         SLL   R1,2                                                     10450021
         LA    R1,CMTYPCHN(R1)     GET POINTER TO ITS CHAIN             10500021
IDMINI4  L     R1,0(R1)            MOVE UP IN CHAIN                     10550021
         LTR   R1,R1               ARE WE AT END OF CHAIN               10600021
         BNZ   IDMINI5             NO. PROCESS THIS ENTRY               10650021
         TM    0(R2),X'80'         YES. IS THERE ANOTHER TYPE           10700021
         BO    IDMINI6             NO. WE'RE DONE                       10750021
         LA    R2,1(R2)            YES. POINT TO NEXT TYPE              10800021
         B     IDMINI3                                                  10850021
IDMINI5  CR    R6,R10              WILL THIS ENTRY FIT                  10900021
         BH    IDNOMINI            NO. ABORT MINI-CESD                  10950021
         MVC   0(12,R6),4(R1)      YES. MOVE IN NAME,TYPE AND ADDR      11000021
         NI    8(R6),X'07'         AND OUT ALL FLAGS BUT TYPE           11050021
         LA    R6,12(R6)           MOVE UP IN MINICESD                  11100021
         B     IDMINI4             UP TABLE ADDRESS                     11150021
IDMINI6  OI    CMFLAG4,CQMINI      SET FLAG 'MINI BUILT'                11200021
IDNOMINI BR    R14                 RETURN                               11250021
         DS    0F                                                       11300021
DBLMASK  DC    X'FFFFFFF8'         TO ROUND TO DOUBLEWORD               11350021
TYPEONLY DC    F'00000007'         TO ISOLATE TYPE IN CESD              11400021
MINITYPE DC    X'0085'             SD AND CM WANTED FOR MINI-CESD       11450021
ADRERROR DC    V(HEWERROR)         ADDRESS OF ERROR ROUTINE             11500021
*                                                                       11550021
HEWLDDEF CSECT                                                          11560002
DDNAMES  EQU   *                                                        11570002
SYSPRINT DC    CL8'SYSLOUT' DIAG MSG DATA SET                   YM05852 11580002
SYSLIN   DC    CL8'SYSLIN' PRIMARY INPUT DATA SET                       11590002
SYSLIB   DC    CL8'SYSLIB' AUTO-CALL LIBRARY DATA SET                   11592002
SIZE     DC    F'307200'   DEFAULT SIZE                         YM04615 11594002
FLAG     DC    B'00010101'                                              11596002
RESERVE  DC    B'00000000'                                              11598002
*        IDENTIFY PARAMETER LIST                                        11600021
*                                                                       11650021
IDPARM   DSECT                     IDENTIFY PARAMETER LIST DSECT        11700021
IDEP     DS    F                   ENTRY POINT ADDRESS                  11750021
IDNAM    DS    CL8                 PROGRAM NAME                         11800021
IDXLEN   DS    F                   EXTENT LIST LENGTH                   11850021
IDNOXS   DS    F                   NUMBER OF EXTENTS                    11900021
IDXTNT   EQU   *                   EXTENT LENGTHS AND ADDRESSES         11950021
PATCH    DS    10F                 MAINTENANCE AREA                     12000021
         EJECT                                                          12050021
         HEWLDCOM                                                       12100021
         END                                                            12150021
./  ADD  SSI=52200955,NAME=HEWLDIOC
IOCA     TITLE 'INPUT/OUTPUT - CONTROL - ALLOCATION MODULE FOR THE VS  X00020000
               LOADER'                                                  00040000
*********************************************************************** 00060021
*                                                                     * 00080021
*TITLE 'HEWLIOCA' - I/O, CONTROL, AND ALLOCATION MODULE FOR THE       * 00100021
*    VS LOADER                                                       *  00120000
*                                                                     * 00140021
*STATUS - CHANGE LEVEL 20                                               00160021
*        TSO CHANGES FOR IDENTIFICATION,TERM OPTION AND INCORE DS     * 00180021
*        SECOND BASE REGISTER (4) ADDED                               * 00200021
*                                                                     * 00220021
*FUNCTION/OPERATION- THIS MODULE PERFORMS THE FOLLOWING -             * 00240021
*   1. ISSUES AN UNCONDITIONAL 6K GETMAIN FOR INITIALIZATION    A42698* 00260000
*   1A. ISSUES AN EXTRACT TO FIND WHETHER TSO IS OPERATING            * 00280021
*   2. SCANS THE OPTION,DDNAME AND DCB LISTS                          * 00300021
*   3. ISSUES A VARIABLE CONDITIONAL GETMAIN FOR PROGRAM AND TABLES   * 00320021
*   4. ALLOCATES AND INITIALIZES THE LOADER COMMUNICATION AREA        * 00340021
*   4A. SETS SYSPRINT RECORD SIZE AT 81 OR 121 DEPENDING ON WHETHER   * 00360021
*      TSO IS OPERATING                                               * 00380021
*   5. ALLOCATES AND CHAINS SAVE AREAS FOR USE DURING LOADING         * 00400021
*   6. FREEMAINS THE INITIAL 4K STORAGE FOR USE BY DATA MANAGEMENT    * 00420021
*   7. CONSTRUCTS SYSLIN AND SYSPRINT DCBS                            * 00440021
*   7A.ALLOCATES SPACE FOR SYSTERM DCB,DECBS, AND BUFFERS             * 00460021
*   8. OPENS SYSLIN AND SYSPRINT DCBS                                 * 00480021
*   9. CALLS IEWBUFFR (SEE BELOW) TO ALLOCATE SYSPRINT BUFFERS        * 00500021
*  10. PRINTS LOADER HEADING, OPTIONS USED, REJECTED OPTIONS, ERRORS  * 00520021
*      ENCOUNTERED DURING OPEN, AND MAP HEADING                       * 00540021
*  11. CALLS HEWBUFFR (SEE BELOW) TO ALLOCATE SYSLIN BUFFERS          * 00560021
*  12. CALLS HEWPRIME (SEE BELOW) TO PRIME OBJECT MODULE BUFFERS      * 00580021
*  13. CALLS HEWLRELO TO PROCESS OBJECT MODULES                       * 00600021
*  14. CALLS HEWLODE TO PROCESS LOAD MODULES                          * 00620021
*  15. CALLS HEWACALL TO PROCESS AUTO-CALL AND FINAL RESOLUTION       * 00640021
*  16. CALLS AEWBTMAP TO PROCESS THE DIAGNOSTIC MESSAGE DICTIONARY    * 00660021
*  17. PURGES THE SYSPRINT BUFFERS                                    * 00700021
*  18. CLOSES DATA SETS                                               * 00720021
*  19. FREEMAINS STORAGE NOT ALLOCATED TO THE LOADED PROGRAM          * 00740021
*  20. CONSTRUCTS RETURN PARAMETERS                                   * 00760021
*  21. RETURNS TO THE INVOKING PROGRAM                                * 00780021
*                                                                     * 00800021
*ENTRY POINTS - 'HEWLOAD' - MAIN ENTRY POINT FOR ALIAS HEWLOAD        * 00820021
*                         LOADING WITH IDENTIFICATION                 * 00840021
*   'HEWOPNLB' - CLOSES SYSLIN DATA SET                               * 00880021
*              - OPENS SYSLIB DATA SET                                * 00920021
*              - CALLS HEWBUFFR (SEE BELOW) TO ALLOCATE SYSLIB BUFFERS* 00940021
*                                                                     * 00960021
*   'HEWBUFFR' - DEALLOCATES ANY PREVIOUS INPUT BUFFERS AND DECBS     * 00980021
*              - ALLOCATES BUFFERS AND DECBS FOR DCB SPECIFIED        * 01000021
*              - RESETS INPUT I/O FLAGS                               * 01020021
*                                                                     * 01040021
*   'HEWPRIME' - ISSUES A 'READ' ON ALL INPUT BUFFERS EXCEPT ONE      * 01060021
*              - SETS DATA LENGTH TO ZERO ON BUFFER NOT READ          * 01080021
*              - SETS INPUT RECORD POINTER TO ZERO-LENGTH BUFFER      * 01100021
*                                                                     * 01120021
*   'HEWLREAD' - READS PHYSICAL RECORDS (BSAM)                        * 01140021
*              - DEBLOCKS INCORE DATA SET                             * 01160021
*              - DEBLOCKS FIXED RECORD FORMAT                         * 01180021
*                                                                     * 01200021
*   'HEWLPRNT' - INSERTS ASA CARRIAGE CONTROL CHARACTERS IN RECORDS   * 01220021
*              - BLOCKS LOGICAL RECORDS INTO PHYSICAL RECORDS         * 01240021
*              - WRITES PHYSICAL RECORDS                              * 01260021
*                                                                     * 01280021
*   'HEWTERM'  - OPENS SYSTERM IF NOT OPEN                            * 01330000
*                WRITES PHYSICAL RECORDS (BSAM)                       * 01332000
*                                                                     * 01340021
*INPUT- STANDARD OS/360 PARAMETER LIST                                * 01360021
*                                                                     * 01380021
*OUTPUT- REGISTER 15 - RETURN CODE                                    * 01400021
*        REGISTER  0 - ENTRY POINT ADDRESS OF LOADED PROGRAM          * 01420021
*        REGISTER  1 - POINTER TO TWO FULL WORDS                      * 01440021
*           WHEN INVOKED VIA IEWLOAD                                  * 01460021
*           TWO WORDS CONTAIN NAME OF IDENTIFIED PROGRAM              * 01480021
*              EITHER AS SPECIFIED IN NAME PARAMETER OR DEFAULT **GO  * 01500021
*           WHEN INVOKED VIA IEWLOADR                                 * 01520021
*           WORD1 - BEGINNING ADDRESS OF STORAGE OCCUPIED BY PROGRAM  * 01540021
*           WORD2 - EXTENT (IN BYTES) OF PROGRAM                      * 01560021
*                                                                     * 01580021
*EXTERNAL ROUTINES-                                                   * 01600021
*                                                                     * 01620021
*   'HEWERROR' - LOG ERROR MESSAGES                                   * 01640021
*   'HEWLRELO' - PROCESS OBJECT MODULES                               * 01660021
*   'HEWLOAD ' - PROCESS LOAD MODULES                                 * 01680021
*   'HEWACALL' - PROCESS AUTO-CALL AND FINAL RESOLUTION               * 01700021
*   'HEWBTMAP' - CONSTRUCT THE DIAGNOSTIC MESSAGE DICTIONARY          * 01720021
*   'HEWLDDEF' - USED TO OBTAIN DEFAULT OPTIONS AND DDNAMES           * 01740021
*                                                                     * 01780021
*EXITS-NORMAL- RETURN TO CALLER VIA REGISTER 14 - REG 15 = 0          * 01800021
*     -ERROR- RETURN TO CALLER VIA REGISTER 14 - ERROR CODE IN REG 15 * 01820021
*                                                                     * 01840021
*TABLES/WORK AREAS-                                                   * 01860021
*   'HEWLDCOM' - ALL COMMUNICATION INFORMATION                        * 01880021
*   'DCB     ' - INPUT AND OUTPUT DCBS                                * 01900021
*   'DECB    ' - INPUT AND OUTPUT DECBS                               * 01920021
*                                                                     * 01940021
*ATTRIBUTES- REFRESHABLE,REENTRANT,REUSABLE                           * 01960021
*                                                                     * 01980021
*NOTES - TWO BASE REGISTERS USED - 12 AND 4                           * 02000021
*        SYSLOUT SHOULD BE SUBSTITUED FOR SYSPRINT                    * 02020021
*                                                                     * 02040021
*  MAINTANCE CHANGES                                                    02060021
*                                                                       02080021
*    PTM  3177   FREEMAIN WITH NO EXTENTS       $352740,353060          02100021
*                                                                       02120021
*********************************************************************** 02140021
         EJECT                                                          02160021
*   OS/360 LOADER --- MAIN ENTRY POINT                                  02180021
*                                                                       02200021
HEWLIOCA CSECT                                                          02220001
*A061850                                                         A41067 02240021
*C002600,415800                                                  A42698 02250000
*                                                                YM3064 02250401
*                         FIX IS INCORPORATED IN FIX TO 42698 (M1488)   02252000
*                                                               SA49491 02254001
*                                                                YM3465 02256001
*I356500-356540,I356100-356188                                  ZA01334 02258000
         SAVE  (14,12),,IEWLOADR   SAVE CALLERS REGISTERS               02260021
         LR    R12,R15               MOVE EP BASE                       02280021
         USING HEWLIOCA,R12            AND IDENTIFY IT                  02300021
         LR    R3,R1               MOVE PARAMETER REGISTER              02320021
         L     R4,IOCABSE2        LOAD SECOND BASE REGISTER             02340021
         USING HEWLIOCA+4096,R4                                         02360021
*                                                                       02380021
         GETMAIN R,LV=DMSIZE,SP=0      GETMAIN FOR INITIALIZATION       02400021
*                                                                       02420021
         LR    R10,R1              MOVE POINTER TO ADDRESSING REGISTER  02440021
         USING INITMAIN,R10          AND IDENTIFY IT                    02460021
         USING ERCODES,0           IDENTIFY ERROR CODE DSECT            02480021
*                                                                       02500021
         SR    R2,R2               SET FORWARD CHAIN                    02520021
         ST    R2,INITSAVE+8         TO ZERO IN MY SAVE AREA            02540021
         ST    R13,INITSAVE+4      SET BACKWARD CHAIN TO PREV SAVE      02560021
         LA    R5,INITSAVE         SET PREVIOUS SAVE AREA'S             02580021
         ST    R5,8(R13)             FORWARD CHAIN TO ME                02600021
         LR    R13,R5              MOVE MY SAVE POINTER TO R13          02620021
*                                                                       02640021
*   MOVE DEFAULT OPTIONS AND DDNAMES INTO 'INITMAIN' DSECT              02660021
*                                                                       02680021
         L     R9,DFLTBASE         GET POINTER TO DEFAULTS CSECT        02700021
         USING DEFAULTS,R9           AND IDENTIFY IT                    02720021
         SPACE                                                          02740021
         MVC   INITDDNM(24),DFLTDDNM    MOVE DEFAULT DDNAMES            02760021
         MVC   INITDDNM+24(8),DFLTTERM  MOVE DEFAULT SYSTERM DDNAME     02780021
         MVC   INITRMAX(4),DFLTSIZE     MOVE DEFAULT SIZE               02800021
         MVC   INITRMIN(4),DFLTMIN      MOVE MIN SIZE (NOT IN IEWLDDEF) 02820021
         MVC   INITPARM(2),DFLTFLAG     MOVE DEFAULT OPTIONS            02840021
         MVC   INITPGMN(8),DFLTNAME  STORE DEFAULT PROGRAM NAME         02860021
         XC    INFLAG3(2),INFLAG3 ZERO OUT FLAGS                        02880021
         DROP  R9                                                       02900021
         SPACE                                                          02920021
         MVI   INITNAME,C' '           BLANK OUT                        02940021
         MVC   INITNAME+1(7),INITNAME  ENTRY POINT NAME FIELD           02960021
*                                                                       02980021
         MVC   INITEXTR(EXTRLEN),EXTR  MOVE EXTRACT PARM LIST           03000000
         EXTRACT   INITEXAD,MF=(E,INITEXTR)                             03020000
         L     R6,INITEXAD             GET IT                           03040000
         LTR   R6,R6                   WAS IT DEFINED                   03060000
         BZ    MNINIT                  NO. BRANCH                       03080000
         TM    0(R6),TCBTSTSK          YES. IS IT TIME-SHARING TASK     03100000
         BNO   MNINIT                  NO. DON'T SET TSO FLAG           03120000
         OI    INFLAG3,CQTS            SET ON TIME-SHARING FLAG         03140000
MNINIT   EQU   *                                                        03160021
         LA    R6,INITREJP        INITIALIZE INVALID OPTIONS            03180000
         ST    R6,INITREJL        BUFFER ADDRESS                        03200000
         LR     R1,R3             DID WE ENTER VIA IEWLOAD              03250000
         N      R1,ENTFLG2        CHANGE FLAG                           03300000
         C      R1,ENTFLG2        IDEN WANTED?                          03310000
         BNE    MNPARSE           NO, LEAVE IDEN FLAG OFF               03320000
         OI    INFLAG3,CQIDEN     SHOW IDENTIFICATION WANTED            03340000
         SR    R1,R1              CLEAR REGISTER ONE             A41067 03360000
MNPARSE  EQU   *                                                        03380021
*                                                                       03400021
         L     R11,0(R3)            GET POINTER TO LIST                 03420021
*                                                                       03440021
         LH    R5,0(R11)               GET LIST LENGTH                  03460021
         LTR   R5,R5                     IS THE SIZE ZERO               03480021
         BZ    MNCKDDNM                    YES - NO PARAMETERS          03500021
*                                                                       03520021
         SR    R8,R8                         ZERO OUT                   03540021
         SR    R7,R7                           THE TRANSLATE            03560021
         STM   R7,R8,INITRTAB                    AND TEST               03580021
         MVC   INITRTAB+8(256-8),INITRTAB          TABLE                03600021
         MVI   INITRTAB+C',',C','            MOVE IN COMMA FOR DELIM    03620021
         MVI   INITRTAB+C'=',C'='                 AND = FOR DELIM       03640021
*                                                                       03660021
         LA    R11,2(R11)          POINT TO LIST                        03680021
         BCTR  R5,0                  DECREMENT COUNT FOR EXECUTE        03700021
         LA    R14,MNSETCHK            CONTINUE ADDRESS                 03720021
         LA    R7,255              CHECK IF LENGTH OF OPTIONS           03740021
         CR    R5,R7                 IS GREATER THAN 256                03760021
         BNH   MNPRMSCN            LENGTH OK - GO SCAN                  03780021
         LR    R5,R7               LENGTH GREATER - TRUNCATE TO 256     03800021
         SPACE                                                          03820021
*   SCAN PARAMETER LIST TO A COMMA OR EQUAL SIGN                        03840021
         SPACE                                                          03860021
MNPRMSCN EX    R5,MNPRMTRT         SCAN TO COMMA                        03880021
         BNZ   MNPRMCHK              AND CHECK PARM IF COMMA FOUND      03900021
         LA    R1,1(R11,R5)        SIMULATE COMMA FOUND IF END          03920021
MNPRMCHK SR    R1,R11              GET SIZE OF PARM                     03940021
         BCTR  R1,0                 DECRIMENT FOR EXECUTE               03960021
         BZ    MNNXTPRM              NO PARM IF LENGTH ZERO             03980021
         BR    R14                 DROP THROUGH IF KEYWORD --           04000021
*                                    RETURN TO 'MNSIZE' OR 'MNEP'       04020021
*                                      IF OPERAND                       04040021
         SPACE                                                          04060021
MNSETCHK LM    R7,R9,SCANCTRL      LOAD CONTROL WORDS FOR LIST COMPARE  04080021
         SPACE 2                                                        04100021
*   COMPARE OPTION IN PARAMETER LIST AGAINST VALID OPTIONS              04120021
         SPACE                                                          04140021
MNNXTCHK SR    R2,R2               LOCATE                               04160021
         IC    R2,0(R7)              ENTRY                              04180021
         LA    R14,PARMLIST(R2)    IN VALID OPTION LIST                 04200021
         EX    R1,LENTHCHK         IS LENGTH IN LIST EQ LENGTH OF OPT'N 04220021
         BNE   MNNXTINC              NO - CHECK NEXT OPTION             04240021
         EX    R1,PARMSCAN         COMPARE AGAINST OPTION IN USER LIST  04260021
         BE    MNPARMEQ              OPTION EQUAL -- GO PROCESS IT      04280021
         SPACE                                                          04300021
MNNXTINC BXLE  R7,R8,MNNXTCHK      NOT THIS OPTION - CHECK NEXT IF ONE  04320021
         SPACE                                                          04340021
*   THE PARAMETER HAS BEEN REJECTED -- PUT INVALID OPTION ONTO LIST     04360021
         SPACE                                                          04380021
MNREJECT EX    R1,MVREJECT         MOVE INVALID OPTION TO BUFFER        04400021
         AR    R6,R1                 UPDATE ADDRESS IN BUFFER           04420021
         MVI   1(R6),C','              MOVE COMMA IN                    04440021
         LA    R6,2(R6)            COMPENSATE FOR COMMA AND BCTR        04460021
         B     MNNXTPRM            GO TO PROCESS NEXT OPTION            04480021
         SPACE 2                                                        04500021
*   A MATCH HAS BEEN FOUND -- PERFORM OPERATION DEFINED BY 'SCANLIST'   04520021
         SPACE                                                          04540021
MNPARMEQ IC    R2,3(R7)            PICK UP INDEX INTO EXECUTE LIST      04560021
         IC    R8,1(R7)              PICK UP FUNCTION BYTE              04580021
         EX    R8,SETPARM(R2)          AND PERFORM OPERATION            04600021
         SPACE                                                          04620021
MNNXTPRM LA    R14,MNSETCHK        ESTABLISH CHECK FOR NEW KEYWORD      04640021
MNOPRAND LA    R1,2(R1)            ADD TO LENGTH FOR COMMA AND BCTR     04660021
         AR    R11,R1                ADD LENGTH TO PREV ADDRESS         04680021
         SR    R5,R1                 SUBTRACT LENGTH FROM LIST LENGTH   04700021
         BNM   MNPRMSCN                AND GO SCAN NEXT IF THERE        04720021
*                                                                       04740021
         ST    R6,INITREJL         SAVE END OF REJECTED OPTIONS LIST    04760021
         B     MNCKDDNM              AND GO CHECK FOR DDNAMES           04780021
*                                                                       04800021
*   SCAN OFF ENTRY NAME AND MOVE IT TO 'INITMAIN'                       04820021
*                                                                       04840021
MNEP     BAL   R14,MNOPRAND        ENTRY POINT NAME -- SCAN OFF OPERAND 04860021
         LR    R8,R1                 MOVE OPERAND LENGTH                04880021
         LA    R7,7                  MAXIMUM LENGTH FOR NAME            04900021
         CR    R8,R7               IS LENGTH SPECIFIED OK               04920021
         BNH   MNEPOK                LOW OR EQUAL IS OK                 04940021
         LR    R8,R7                   MAKE NAME LENGTH = 8 CHARS       04960021
MNEPOK   EX    R8,MOVEPNM          MOVE ENTRY POINT NAME                04980021
         OI    INITPARM,CQEPNAME     SET NAME SPECIFIED FLAG            05000021
         B     MNNXTPRM                AND SCAN NEXT                    05020021
*                                                                       05040021
*                                                                       05060021
MNNAME   BAL   R14,MNOPRAND   PROGRAM NAME - SCAN OFF OPERAND           05080021
         MVI   INITPGMN,C' '       BLANK OUT                            05100021
         MVC   INITPGMN+1(7),INITPGMN  PROGRAM NAME FIELD               05120021
         LR    R8,R1          MOVE OPERAND LENGTH                       05140021
         LA    R7,7           MAXIMUM LENGTH FOR NAME                   05160021
         CR    R8,R7          IS LENGTH SPECIFIED OK                    05180021
         BNH   MNNAMEOK       LOW OR EQUAL IS OK                        05200021
         LR    R8,R7          MAKE LENGTH = 8 CHARACTERS                05220021
MNNAMEOK EX    R8,MOVPGMNM    MOVE PROGRAM NAME                         05240021
         OI    INFLAG3,CQPGMNM     SHOW PROGRAM NAME REC'D              05260021
         B     MNNXTPRM       AND SCAN NEXT.                            05280021
*                                                                       05300021
*   SCAN OFF SIZE OPERAND AND MOVE IT OVER DEFAULT IN 'INITMAIN'        05320021
*                                                                       05340021
MNSIZE   BAL   R14,MNOPRAND        SIZE SPECIFIED -- SCAN OFF OPERAND   05360021
         ST    R11,INITDUM         SAVE POINTER TO OPERAND              05380021
         LR    R9,R1                   AND LENGTH                       05400021
         SPACE                                                          05420021
         ST    R1,INITSCAN             SAVE SCAN POINTER                05440021
         SPIE  SPIEEXIT,(7)              SPIE FOR DATA EXCEPTION        05460021
         ST    R1,INITSPIE                 SAVE PREVIOUS PICA ADDRESS   05480021
         SPACE                                                          05500021
         LA    R1,1                PUT 1 INTO REG FOR INCR - DECR       05520021
         CLI   0(R11),C'('         IS FIRST CHAR A PAREN                05540021
         BNE   MNSIZE1               NO - GO AROUND                     05560021
         AR    R11,R1                YES - BUMP POINTER OVER IT         05580021
         SR    R9,R1                       DECRIMENT COUNT              05600021
         BM    SPIEEXIT         INVALID IF COUNT ZERO                   05620021
MNSIZE1  LA    R8,0(R9,R11)        POINT TO END OF OPERAND              05640021
         CLI   0(R8),C')'            IS LAST CHAR A PAREN               05660021
         BNE   MNSIZE2                 NO - GO AROUND                   05680021
         SPACE                                                          05700021
         SR    R8,R1                   YES - BACK UP OVER PAREN         05720021
         SR    R9,R1                         DECRIMENT LENGTH           05740021
         BM    SPIEEXIT         INVALID IF LENGTH ZERO                  05760021
MNSIZE2  CLI   0(R8),C'K'          IS IT A 'K' TYPE SIZE                05780021
         BNE   MNSIZE3               NO - GO AROUND                     05800021
         SPACE                                                          05820021
         SR    R9,R1                 YES - DECRIMENT LENGTH             05840021
         BM    SPIEEXIT         INVALID IF COUNT ZERO                   05860021
         SPACE                                                          05880021
MNSIZE3  EX    R9,PACKSIZE         PACK THE DIGITS                      05900021
         OI    INITSIGN,X'0F'      INSURE SIGN IS POSITIVE              05920021
         CVB   R2,INITDBLW           AND CONVERT TO BINARY              05940021
         CLI   0(R8),C'K'          IS 'K' VALUE SPECIFIED               05960021
         BNE   MNSIZE4               NO - GO AROUND                     05980021
         SPACE                                                          06000021
         SLL   R2,10                 YES -- MULTIPLY RESULT BY K (1024) 06020021
MNSIZE4  C     R2,INITRMIN         IS SIZE SPECIFIED GREATER THAN MIN   06040021
         BH    MNSIZE6               YES - OK                           06060021
         SPACE                                                          06080021
MNSIZE5  L     R2,INITRMIN         NO - SUBSTITUTE MINIMUM SIZE         06100021
MNSIZE6  ST    R2,INITRMAX         STORE RESULT INTO MAX REQUEST        06120021
         SPACE                                                          06140021
MNSIZE7  LA    R14,MNNXTPRM          SPIE EXIT NOT TAKEN                06160021
MNSIZE8  L     R1,INITSPIE             PICK UP PREVIOUS PICA ADDRESS    06180021
         SPIE  MF=(E,(1))                RE-SPIE IT                     06200021
         L     R1,INITSCAN             RELOAD SCAN POINTER              06220021
         L     R11,INITDUM         RELOAD OPERAND POINTER               06240021
         BR    R14                       AND GO SCAN NEXT OPTION        06260021
         SPACE 2                                                        06280021
SPIEEXIT MVC   0(5,R6),VPSIZE      INVALID SIZE OPERAND -- MOVE         06300021
         LA    R6,5(R6)              'SIZE=' TO REJECTED OPTIONS BUFFER 06320021
         LA    R14,MNREJECT        FIX SO OPERAND IS MOVED              06340021
         B     MNSIZE8               AND GIVE DEFAULT SIZE              06360021
         SPACE 3                                                        06380021
*   CHECK IF DDNAMES PASSED AND MOVE THEM OVER DEFAULTS IN 'INITMAIN'   06400021
         SPACE 2                                                        06420021
MNCKDDNM TM    0(R3),X'80'         IS THIS THE END OF LIST              06440021
         BO    MNVCGTMN              YES - NO DDNAMES PASSED            06460021
*                                                                       06480021
         L     R2,4(R3)            NO. GET                              06500021
         LH    R5,0(R2)            GET COUNT                            06520021
         LTR   R5,R5                     IS COUNT ZERO                  06540021
         BZ    MNCHKDCB                                                 06560021
*                                                                       06580021
         LA    R2,2(R2)            POINTER TO BEGINNING                 06600021
         LA    R6,INITLIN            POINTER TO DEFAULT IN LOADER       06620021
         LA    R7,0                  DISPLACEMENT IN DDNAME LIST        06640021
         BAL   R14,MNMVDDNM        CHECK IF SYSLIN DEFINED              06660021
*                                                                       06680021
         LA    R6,INITLIB            POINTER TO DEFAULT IN LOADER       06700021
         LA    R7,24                 DISPLACEMENT IN DDNAME LIST        06720021
         BAL   R14,MNMVDDNM        CHECK IF SYSLIB DEFINED              06740021
*                                                                       06760021
         LA    R6,INITPRNT           POINTER TO DEFAULT IN LOADER       06780021
         LA    R7,40                 DISPLACEMENT IN DDNAME LIST        06800021
         BAL   R14,MNMVDDNM        CHECK IF SYSPRINT DEFINED            06820021
         LA    R6,INITTERM         POINTER TO DEFAULT IN LOADER         06840021
         LA    R7,88               DISPLACEMENT IN DDNAME LIST          06860021
         BAL   R14,MNMVDDNM        CHECK IF SYSTERM DEFINED             06880021
*                                                                       06900021
MNCHKDCB TM    4(R3),X'80'        WERE DDNAMES LAST ENTRY               06920021
         BO    MNVCGTMN           YES.                                  06940021
         TM    8(R3),X'80'        PG HDG LAST                           06960021
         BO    MNVCGTMN           YES                                   06980021
         L     R2,12(R3)           DCBS PASSED                          07000021
         L     R5,0(R2)            GET NO ENTRIES IN LIST               07020021
         LTR   R5,R5              IS COUNT 0                            07040021
         BZ    MNVCGTMN           YES. NO DCBS PASSED                   07060021
         L     R6,4(R2)            TRY SYSLIN                           07080021
         LTR   R6,R6              IS A DCB PASSED                       07100021
         BZ    MNCKLIB            NO. CHECK SYSLIB                      07120021
         USING IHADCB,R6                                                07140021
       CLI     DCBDEVT,X'00'       IS IT INCORE                         07160021
         BNE   MNCKLIB            NO. IGNORE IT                         07180021
         OI INFLAG3,CQINCORE+CQPASLIN                                   07200021
         ST    R6,INLINDCB        SAVE DCB ADDRESS                      07220021
MNCKLIB  LA    R7,4               SYSLIB IS FOURTH ENTRY                07240021
         CR    R7,R5              IS IT POSSIBLY HERE                   07260021
         BH    MNVCGTMN           NO                                    07280021
         L     R6,16(R2)           YES. PICK IT UP                      07300021
         LTR   R6,R6              IS IT REALLY HERE                     07320021
         BZ    MNVCGTMN           NO. WEHRE THRU WITH PARMS             07340021
         TM    DCBOFLGS,DCBOPEN   IS IT OPEN                            07360021
         BZ    MNVCGTMN           NO. IGNORE IT                         07380021
         OI    INFLAG3,CQPASLIB   YES. SET FLAG                         07400021
         ST    R6,INLIBDCB        SAVE DCB ADDRESS                      07420021
         B     MNVCGTMN                                                 07440021
*                                                                       07460021
*                                                                       07480021
MNMVDDNM LA    R8,8(R7)            IS LENGTH OF NAME PLUS DISPLACEMENT  07500021
         CR    R8,R5                 IN LIST GREATER THAN LIST LENGTH   07520021
         BCR   2,R14                   YES - RETURN                     07540021
*                                                                       07560021
         AR    R7,R2               NO. ADD DISPLACEMENT AND BEGIN       07580021
         NC    0(8,R7),0(R7)             IS DDNAME SPECIFIED ZERO       07600021
         BCR   8,R14                       YES - RETURN                 07620021
*                                                                       07640021
         MVC   0(8,R6),0(R7)               NO - MOVE IN NEW DDNAME      07660021
         BR    R14                           AND RETURN                 07680021
*                                                                       07700021
MOVPGMNM MVC   INITPGMN(0),0(R11)  EXECUTED MOVE PROG NAME FROM LIST    07720021
MOVEPNM  MVC   INITNAME(0),0(R11)  EXECUTED MOVE EPNAME FROM PARM LIST  07740021
MNPRMTRT TRT   0(0,R11),INITRTAB   TRT FOR PARAMETER SCAN               07760021
PACKSIZE PACK  INITDBLW(8),0(0,R11) EXECUTED PACK PARM SIZE             07780021
PARMSCAN CLC   0(0,R14),0(R11)   COMPARE OPTION FOR MATCH               07800021
MVREJECT MVC   0(0,R6),0(R11)    MOVE REJECTED OPTION TO BUFFER         07820021
REJTOCM  MVC   0(0,R2),0(R6)       MOVE REJECTED OPTIONS FROM INIT - CM 07840021
LENTHCHK CLI   2(R7),0             CHECK LENGTH OF OPTION               07860021
*                                                                       07880021
SETPARM  DS    0F                  INDEXED EXECUTE LIST FOR OPTION SET  07900021
ORPARM   OI    INITPARM,0            SET BIT                            07920021
ANDPARM  NI    INITPARM,0            CLEAR BIT                          07940021
SIZEPARM B     MNSIZE                GO TO PROCESS SIZE                 07960021
EPPARM   B     MNEP                  GO TO PROCESS ENTRY NAME           07980021
NAMEPARM B     MNNAME         GO TO PROCESS PROGRAM NAME                08000021
         EJECT                                                          08020021
*              ENTRY POINT FOR IDENTIFICATION                           08040021
         USING HEWLOAD,R15                                              08060000
         ENTRY HEWLOAD                                                  08080000
HEWLOAD  O     R1,ENTFLG          SHOW WE ENTERED HERE                  08100000
         L     R15,IOCABASE        NOW GO BACK TO HEWLOADR              08120000
         BR    R15                                                      08140000
         DC    C'HEWLOAD '                                              08160000
         DS    0F                                                       08180000
ENTFLG   DC    X'FF000000'                                              08200000
         DROP  R15                                                      08220000
         EJECT                                                          08240021
*********************************************************************** 08260021
*                                                                     * 08280021
*   VARIABLE CONDITIONAL GETMAIN FOR PROGRAM AND TABLES               * 08300021
*                                                                     * 08320021
*********************************************************************** 08340021
         SPACE 2                                                        08360021
MNVCGTMN GETMAIN VC,LA=INITRMIN,A=INITMADR,SP=0,MF=(E,INITGTML)         08380021
*                                                                       08400021
*                                                                       08420021
         LTR   R15,R15             WAS MAIN STORAGE ALLOCATED           08440021
         BZ    MNMAINOK              YES - ALL OK                       08460021
*                                                                       08480021
         GETMAIN R,LV=MINREQ,SP=0      GO OUT ON GETMAIN ERROR          08500021
         LA    R2,MINREQ           SIMULATE VC ALLOCATED                08520021
         STM   R1,R2,INITMADR        IF UNCONDITIONAL WORKED            08540021
         SPACE 2                                                        08560021
*   SET UP BASE ADDRESS FOR THE COMMUNICATION AREA (IEWLDCOM) AND       08580021
*   INITIALIZE IT                                                       08600021
         SPACE                                                          08620021
MNMAINOK L     R11,INITMADR        PICK UP POINTER TO ALLOCATED CORE    08640021
         LA    R9,CQCMSIZE           SIZE OF STATIC COMMUNICATION AREA  08660021
         A     R11,INITMSIZ          ADD ALLOCATED CORE SIZE TO POINTER 08680021
         SR    R11,R9                  SUBTRACT OFF SIZE OF COM AREA    08700021
*                                                                       08720021
         USING HEWLDCOM,R11       IDENTIFY COMMUNICATION AREA           08740021
*                                                                       08760021
         MVC   CMINITCM(INITCMSZ),INITCMCM   MOVE COMMON AREA FROM      08780021
*                                              INITIAL AREA TO          08800021
*                                                COMMUNICATION AREA     08820021
         SR    R2,R2                         INITIALIZE THE             08840021
         SR    R3,R3                           REST OF THE              08860021
         STM   R2,R3,CMINTZRO                    COMMUNICATION AREA     08880021
         MVC   CMINTZRO+8(CQINTSIZ-8),CMINTZRO     TO ZERO              08900021
*                                                                       08920021
         ST    R11,CMLOWTBL        COMMUNICATION BASE IS LOWEST TABLE   08940021
         AR    R9,R11                COMMUNICATION SIZE + BASE          08960021
         ST    R9,CMHITBL              IS HIGHEST ALLOCATED CORE        08980021
*                                                                       09000021
         L     R2,CMMAINPT         PICK UP BEGINNING OF ALLOC CORE      09020021
         MVC   0(8,R2),CMPGMNM     MOVE PROGRAM NAME IN                 09040021
         LA    R2,8(R2)              ALLOW FOR RETURN PARMS             09060021
         SR    R3,R3                   NEXT TWO WORDS MAY               09080021
         ST    R3,0(R2)                MAY CONTAIN ADDR AND             09100021
         ST    R3,4(R2)                LENGTH OF COMPILER-              09120021
         LA    R2,8(R2)                LOADED TEXT                      09140021
         ST    R2,CMNXTTXT             AND STORE AS NEXT TEXT ADDRESS   09160021
         ST    R2,CMLSTTXT                          LAST TEXT ADDRESS   09180021
         ST    R2,CMBEGADR                          DEFAULT ENTRY POINT 09200021
         ST    R2,CMOBJST         OBJ MOD START ADDR            XA03395 09210003
MNCKTSO  TM    CMFLAG3,CQTS       ARE WE TIME-SHARING                   09220000
         BZ    MN121              NO.                                   09240000
         MVC   CMMAPLIN(6),PRNT81  YES. 81 CHAR PRINT RECORD            09260000
         B     MNINITZR                                                 09280000
MN121    MVC   CMMAPLIN(6),PRNT121  121 PRINT RECORD                    09300021
MNINITZR EQU   *                                                        09320021
*                                                                       09340021
*   MOVE REJECTED OPTIONS FROM INITMAIN AND INITIALIZE CMERLIST         09360021
*                                                                       09380021
         L     R7,INITREJL         GET END OF INVALID OPTIONS STRING    09400021
         LA    R8,7(R7)            ROUND UP TO                          09420021
         N     R8,DBLMASK            DOUBLE WORD                        09440021
         LA    R6,INITREJP         LOAD POINTER OR INVALID OPTIONS      09460021
         SR    R8,R6                 COMPUTE LENGTH OF LIST             09480021
         AR    R8,R2                   ADD ADDRESS IN VC STORAGE        09500021
         ST    R8,CMERLIST               AND STORE AS START OF ERROR L  09520021
         SPACE                                                          09540021
         SR    R7,R6               COMPUTE LENGTH OF INVALID OPTIONS    09560021
         BZ    MNALOCSV            ZERO INDICATES NO LIST               09580021
         SPACE                                                          09600021
         LH    R8,CMMAXLST        GET MAX LIST LENGTH                   09620021
         OI    CMSTATUS,CQREJOPT   SET LIST-PRESENT FLAG                09640021
         CR    R7,R8               IS LIST LENGTH GREATER THAN MAX      09660021
         BNH   MNREJOPT              NO - MOVE ENTIRE LIST              09680021
         SPACE                                                          09700021
         LR    R7,R8                 YES - TRUNCATE                     09720021
MNREJOPT BCTR  R7,0                                                     09740021
         BCTR  R7,0                                                     09760021
         EX    R7,REJTOCM          MOVE THE INVALID OPTIONS TO SAVE     09780021
         STC   R7,CMOPTECT         SAVE COUNT OF LIST                   09800021
*                                                                       09820021
*   ALLOCATE AND FORMAT SAVE AREAS TO BE USED THROUGHOUT LOADING        09840021
*                                                                       09860021
MNALOCSV LA    R2,NUMSAVES         NUMBER OF AREAS TO BE ALLOCATED      09880021
         LA    R0,72                 SIZE OF EACH SAVE AREA             09900021
         L     R13,4(R13)          POINTER TO CALLING PGM'S SAVE AREA   09920021
         LR    R9,R13                                                   09940021
MNMORESV BAL   R14,GETPRIME        GET STORAGE FOR SAVE AREA            09960021
         ST    R9,4(R1)            BACK CHAIN THIS TO LAST              09980021
         ST    R1,8(R9)            FORWARD CHAIN LAST TO THIS           10000021
         LR    R9,R1                 MAKE THIS EQUAL LAST               10020021
         BCT   R2,MNMORESV             AND GET ANOTHER IF REQD          10040021
*                                                                       10060021
         SR    R1,R1               SET LAST FORWARD                     10080021
         ST    R1,8(R9)              CHAIN TO ZERO                      10100021
         L     R13,8(R13)              AND PICK UP FIRST AREA           10120021
         ST    R13,CMFSTSAV        STORE AS FIRST SAVE AREA             10140021
*                                                                       10160021
*   FREE THE INITIAL STORAGE FOR DATA MANAGEMENT                        10180021
*                                                                       10200021
         LR    R1,R10                                                   10220021
         FREEMAIN R,LV=DMSIZE,A=(1),SP=0                                10240021
*                                                                       10260021
*              ALLOCATE SPACE FOR SYSTERM CONTROL BLOCKS AND BUFFER     10280021
*                                                                       10300021
         TM    CMPRMFLG,CQTERM     WAS TERM OPTION WANTED               10320021
         BNO   MNSETDCB            NO                                   10340021
         LA    R0,DCBSIZE+2*DECBSIZE+2*TRMBUFLN  YES. GET SPACE         10360021
         BAL   R14,GETCORE           FOR DCB,DECB AND BUFFERS           10380021
         ST    R1,CMTDCBPT         SAVE POINTER TO DCB                  10400021
         LA    R1,DCBSIZE(R1)                                           10420021
         ST    R1,CMTRMREC         STORE POINTER TO 1ST BUFFER          10440021
         MVI   0(R1),C' '          BLANK THE                            10460021
         MVC   1(TRMRECSZ-1,R1),0(R1)    BUFFER                         10480021
MNSETDCB EQU   *                                                        10500021
*                                                                       10520021
*   MOVE SYSLIN AND SYSPRINT DCB'S TO GOTMAIN CORE AND INITIALIZE       10540021
*                                                                       10560021
         OI    CMSTATUS,CQMSGSAV   SET REQ FOR OPEN-EXIT TO SAVE ERRORS 10580021
         TM    CMFLAG3,CQPASLIN   IS SYSLIN PASSED                      10600021
         BZ    MNLINDCB           NO. GET DCB                           10620021
         L     R10,CMLINDCB       YES. PICK UP DUMMY DCB                10640021
         ST    R10,CMRDCBPT       ASSUME INCORE                         10660021
         USING IHADCB,R10                                               10680021
         SR    R1,R1               ZERO OUT BUFFER POINTER              10700021
         ST    R1,CMGETREC        FOR READ ROUTINE                      10720021
         TM    CMPRMFLG,CQPRINT   IS SYSPRINT REQUESTED                 10740021
         BO    MNPRTDCB           YES. GET DCB                          10760021
         B     MNONEBUF           NO. SKIP OPEN ENTIRELY                10780021
MNLINDCB LA    R0,DCBSIZE         DCB SIZE                              10800021
         BAL   R14,GETCORE           GET STORAGE FOR INPUT DCB          10820021
         ST    R1,CMRDCBPT           STORE POINTER TO DCB               10840021
         LR    R10,R1              MOVE TO ADDRESSING REGISTER          10860021
         USING IHADCB,R10                                               10880021
         SPACE                                                          10900021
         MVC   IHADCB(DCBSIZE),MODELDCB   MOVE IN DCB MODEL             10920021
         MVC   DCBDDNAM(8),CMLINDD   MOVE SYSLIN DDNAME TO DCB          10940021
         MVC   DCBDSORG(2),DSORGPS     SET DCB SEQUENTIAL               10960021
         MVC   DCBMACR(2),MACRREAD      AND INPUT                       10980021
         SPACE                                                          11000021
         O     R1,OPENIN           OR OPTION BYTE INTO DCB ADDRESS      11020021
         ST    R1,CMIOLST1           AND STORE INTO OPEN LIST           11040021
         SPACE                                                          11060021
         TM    CMPRMFLG,CQPRINT    IS SYSPRINT REQUESTED                11080021
         BZ    MNOPENIN              NO - GO OPEN SYSLIN ONLY           11100021
*                                                                       11120021
MNPRTDCB LA    R0,DCBSIZE         DCBSIZE                               11140021
         BAL   R14,GETCORE           GET STORAGE FOR OUTPUT DCB         11160021
         ST    R1,CMWDCBPT           STORE POINTER TO DCB               11180021
         LR    R10,R1              MOVE TO ADDRESSING REGISTER          11200021
*                                                                       11220021
         MVC   IHADCB(DCBSIZE),MODELDCB   MOVE IN DCB MODEL             11240021
         MVC   DCBDDNAM(8),CMPRNTDD         MOVE IN SYSPRINT DDNAME     11260021
         MVC   DCBDSORG(2),DSORGPS          SET DCB SEQUENTIAL          11280021
         MVC   DCBMACR(2),MACRWRTE            AND OUTPUT                11300021
         O     R1,OPENOUT          OR OPTION BYTE INTO DCB ADDRESS      11320021
         TM    CMFLAG3,CQPASLIN   DO WE WANT TO OPEN SYSLIN             11340021
         BZ    MNBOTH             YES.                                  11360021
         ST    R1,CMIOLST1        NO. PRINT ONLY                        11380021
         B     MNOPE                                                    11400021
MNBOTH   ST    R1,CMIOLST2        STORE DCB ADDRESS INTO OPEN LIST      11420021
         NI    CMIOLST1,X'7F'      CLEAR LIST DELIMITER ON FIRST ENTRY  11440021
         SPACE                                                          11460021
*********************************************************************** 11480021
*                                                                     * 11500021
*   OPEN SYSLIN AND SYSPRINT DATA SETS                                * 11520021
*                                                                     * 11540021
*********************************************************************** 11560021
         SPACE                                                          11580021
MNOPE    OPEN MF=(E,CMIOLST1)                                           11600021
*                                                                       11620021
         TM    DCBOFLGS,DCBOPEN    WAS SYSPRINT SUCCESSFULLY OPENED     11640021
         BO    MNALOCPR              YES - ALLOCATE BUFFERS AND DECB'S  11660021
*                                                                       11680021
         LA    R0,DCBSIZE            NO - GET DCB SIZE                  11700021
         LR    R1,R10                       AND ADDRESS                 11720021
         BAL   R14,FREECORE                   AND FREE THE STORAGE      11740021
         L     R10,CMRDCBPT        PICK UP POINTER TO INPUT DCB         11760021
         B     MNONEBUF              AND GO CHECK IF OPEN               11780021
*                                                                       11800021
*                                                                       11820021
MNALOCPR OI    CMSTATUS,CQPRTDCB   IDENTIFY PRINT DCB OPEN              11840021
         L     R15,ADRBUFFR          GET POINTER TO BUFFER ALLOCATION   11860021
         BALR  R14,R15                 AND GO ALLOCATE BUFFERS          11880021
         TM    CMSTATUS,CQABORT      TERMINATION ERROR OCCURR           11900021
         BNZ   MNIDEN                  AND GO CLOSE OUT                 11920021
         OI    CMSTATUS,CQPRTOPN   SET SYSPRINT ALLOCATED FLAG          11940021
         SPACE 2                                                        11960021
*   INITIALIZE SYSPRINT DATA SET AND PRINT HEADINGS                     11980021
         SPACE 2                                                        12000021
         LA    R1,50            SET MAXIMUM LINE COUNT                  12020021
         STH   R1,CMMAXLNE        TO 50                                 12040021
         SPACE                                                          12060021
         L     R9,CMWDECPT         GET OUTPUT DECB POINTER              12080021
         USING DECB,R9               AND IDENTIFY IT                    12100021
         SPACE                                                          12120021
         L     R2,DECAREA          GET BUFFER POINTER FOR THIS DECB     12140021
         ST    R2,CMPUTREC           AND STORE AS FIRST LREC            12160021
         SPACE                                                          12180021
         MVI   0(R2),C' '                         SET UP                12200021
         LH    R15,CMWLRECL        GET LENGTH OF RECORD                 12220021
         BCTR  R15,0               SUBTRACT FIRST BYTE                  12240021
         BCTR  R15,0              DECREMENT FOR EXECUTE                 12260021
         EX    R15,MOVEHDNG        CLEAR BUFFER                         12280021
         MVC   60-HDGLNGTH/2(HDGLNGTH,R2),LOADHEAD    HEADING           12300021
         MVI   CMPRTCTL,CTEJECT                   EJECT BEFORE PRINT    12320021
         L     R15,ADRPRNT         PRINT THE                            12340021
         BALR  R14,R15               HEADING 'OS/360 LOADER'            12360021
         SPACE 2                                                        12380021
*   CONSTRUCT LIST OF OPTIONS USED                                      12400021
         SPACE 2                                                        12420021
         SR    R1,R1               ZERO REGISTER USED FOR OPTION LENGTH 12440021
         L     R2,CMPUTREC              GET POINTER TO BUFFER           12460021
         MVC   1(OKOPTLNG,R2),OKOPTHDG    MOVE PREFIX 'OPTIONS USED'    12480021
         LA    R2,1+OKOPTLNG(R2)            AND UPDATE BUFFER POINTER   12500021
         SPACE                                                          12520021
         LM    R7,R9,OPTCNTRL      GET CONTROL FOR LIST CONSTRUCTION    12540021
         SPACE                                                          12560021
MNMOVOPT IC    R3,0(R7)            PICK UP MASK FOR BIT TO TEST         12580021
         IC    R1,1(R7)              PICK UP LENGTH OF OPTION NAME      12600021
         LH    R5,2(R7)                AND INDEX TO OPTION NAME         12620021
         LA    R6,PARMLIST(R5)     FORM ADDRESS FROM INDEX              12640021
         EX    R3,TESTOP           TEST IF OPTION SPECIFIED             12660021
         BO    MNPOSOPT              YES - PUT OUT OPTION NAME          12680021
         SPACE                                                          12700021
         MVC   1(2,R2),NEGATE        NO - PREFIX OPTION WITH 'NO'       12720021
         LA    R2,2(R2)                AND UPDATE POINTER               12740021
         SPACE                                                          12760021
MNPOSOPT EX    R1,MOVEOPT          MOVE OPTION NAME TO PRINT BUFFER     12780021
         LA    R2,2(R1,R2)           UPDATE BUFFER POINTER              12800021
         MVI   0(R2),C','              AND INSERT COMMA AFTER IT        12820021
         BXLE  R7,R8,MNMOVOPT      GO PUT OUT NEXT OPTION IF PRESENT    12840021
         SPACE 2                                                        12860021
*   MOVE MAIN STORAGE SIZE RECEIVED INTO LIST                           12880021
         SPACE 2                                                        12900021
         MVC   1(5,R2),VPSIZE      MOVE IN 'SIZE='                      12920021
         LA    R2,5(R2)            UPDATE BUFFER POINTER                12940021
         SPACE                                                          12960021
         L     R6,CMMAINSZ         GET SIZE RECEIVED FROM VC GETMAIN    12980021
         CVD   R6,CMXDBLWD           CONVERT IT TO DECIMAL              13000021
         UNPK  1(11,R2),CMXDBLWD(9)    AND UNPACK IT INTO PRINT BUFFER  13020021
         SPACE                                                          13040021
         LA    R6,1(R2)            SET UP FOR LEADING ZERO SCAN         13060021
         LA    R7,9(R2)              COMPUTE END OF SIZE FIELD          13080021
         SPACE                                                          13100021
MNCKZERO CLI   0(R6),C'0'          IS THE CHARACTER A ZERO              13120021
         BNE   MNMVSIZE              NO - END OF SCAN                   13140021
         LA    R6,1(R6)              YES - UPDATE POINTER               13160021
         B     MNCKZERO                AND GO CHECK NEXT CHARACTER      13180021
         SPACE                                                          13200021
MNMVSIZE SR    R7,R6               GET LENGTH OF NON-ZERO SIZE          13220021
         EX    R7,MOVEOPT            AND MOVE IT UP IN THE BUFFER       13240021
         LA    R2,1(R7,R2)         UPDATE THE BUFFER POINTER            13260021
         MVC   1(10,R2),11(R2)       AND BLANK OUT ANY GARBAGE LEFT     13280021
         SPACE 2                                                        13300021
*         MOVE PROGRAM NAME INTO LIST                                   13320021
         SPACE 2                                                        13340021
         MVI   1(R2),C','         INSERT COMMA                          13360021
         MVC   2(5,R2),VPNAME     MOVE IN 'NAME='                       13380021
         MVC   7(8,R2),CMPGMNM    AND SPECIFIED OR DEFAULT NAME         13400021
         LA    R2,14(R2)      UPDATE THE BUFFER POINTER                 13420021
         SPACE 2                                                        13440021
         SPACE                                                          13460021
PRINTOPT MVI   CMPRTCTL,CTSPACE2   SPACE 2 BEFORE PRINT                 13480021
         L     R15,ADRPRNT           AND PRINT THE                      13500021
         BALR  R14,R15                 OPTIONS USED MESSAGE             13520021
         SPACE 1                                                        13540021
*        NEW LINE FOR EP IF USED                                        13560021
         SPACE 1                                                        13580021
         TM    CMPRMFLG,CQEPNAME   IS EP NAME SPECIFIED                 13600021
         BZ    MNNOEP              NO. BRANCH                           13620021
         L     R2,CMPUTREC         YES. GET NEW LINE                    13640021
         LA    R2,1+OKOPTLNG(R2)   INDENT                               13660021
         MVC   1(3,R2),VPEP        MOVE IN 'EP='                        13680021
         MVC   4(8,R2),CMEPNAME    AND THE NAME SPECIFIED               13700021
         L     R15,ADRPRNT         AND PRINT                            13720021
         BALR  R14,R15             THIS LINE                            13740021
MNNOEP   EQU   *                                                        13760021
         SPACE 2                                                        13780021
*   PRINT THE INVALID OPTIONS                                           13800021
         SPACE 2                                                        13820021
         TM    CMSTATUS,CQREJOPT   ANY INVALID OPTIONS                  13840021
         BZ    MNOPNMSG              NO - GO CHECK FOR OPEN ERRORS      13860021
         SPACE                                                          13880021
         L     R2,CMPUTREC           YES - GET PRINT BUFFER ADDRESS,    13900021
         L     R3,CMNXTTXT                   POINTER TO ERRORS,         13920021
         IC    R1,CMOPTECT                     AND BYTE COUNT           13940021
         MVC   1(REJOPTLG,R2),REJOPT       MOVE IDENTIFIER              13960021
         EX    R1,MVREJOPT                   AND INVALID OPTIONS        13980021
         L     R15,ADRPRNT                 GO PRINT                     14000021
         BALR  R14,R15                       THE INVALID OPTIONS        14020021
         SPACE 2                                                        14040021
*   PRINT ERRORS ENCOUNTERED DURING OPEN                                14060021
         SPACE 2                                                        14080021
MNOPNMSG TM    CMSTATUS,CQOPNERR   WERE ERRORS FOUND DURING OPEN        14100021
         BZ    MNMAPHDG              NO - GO CHECK FOR MAP HEADING      14120021
         SPACE                                                          14140021
         MVI   CMPRTCTL,CTSPACE2     YES - SPACE 2 BEFORE MESSAGES      14160021
         L     R2,CMERLIST                  GET POINTER TO LIST         14180021
         SPACE                                                          14200021
MNOPNERR LM    R0,R1,0(R2)                 GET ERROR INFO               14220021
         L     R15,ADRERROR                  AND PRINT                  14240021
         BALR  R14,R15                         IT OUT                   14260021
         SPACE 2                                                        14280021
*   PRINT MAP HEADING IF REQUIRED                                       14300021
         SPACE 2                                                        14320021
MNMAPHDG TM    CMPRMFLG,CQMAP      IS MAP SPECIFIED                     14340021
         BZ    MNPRDONE              NO - GO FINISH SYSPRINT            14360021
         SPACE                                                          14380021
         L     R2,CMPUTREC           YES - GET PRINT BUFFER ADDRESS     14400021
         LH    R3,CMMAPLIN         R3 HAS LENGTH OF LINE                14420021
         AR    R3,R2               HIGH ADDRESS                         14440021
         SPACE                                                          14460021
MNMORMAP MVC   6(MAPHDLNG,R2),MAPHEAD   MOVE A MAP HEADING ENTRY        14480021
         LA    R2,ENTRYSZ(R2)      UPDATE DISPLACEMENT TO NEXT          14500021
         CR    R2,R3               ARE WE OVER LIMIT FOR BUFFER         14520021
         BL    MNMORMAP            NO. INSERT ANOTHER                   14540021
         MVI   CMPRTCTL,CTSPACE3       SPACE 3 BEFORE PRINT             14560021
         L     R15,ADRPRNT               AND PRINT                      14580021
         BALR  R14,R15                     THE MAP HEADING              14600021
         SPACE                                                          14620021
MNPRDONE MVI   CMPRTCTL,CTSPACE2   MOVE SPACE 2 TO CONTROL              14640021
         L     R10,CMRDCBPT          PICK UP INPUT DCB POINTER          14660021
         B     MNCHKLIN                AND GO CHECK SYSLIN              14680021
         SPACE 2                                                        14700021
TESTOP   TM    CMPRMFLG,0               TEST IF OPTION SPECIFIED        14720021
MOVEOPT  MVC   1(0,R2),0(R6)            MOVE VALID OPTIONS TO PRINT BUF 14740021
MVREJOPT MVC   REJOPTLG+2(0,R2),0(R3)   MOVE REJ OPTIONS TO PRINT BUF   14760021
MOVEHDNG MVC   1(0,R2),0(R2)       EXECUTED CLEAR OF BUFFER             14780021
         EJECT                                                          14800021
*********************************************************************** 14820021
*                                                                     * 14840021
*   OPEN SYSLIN ONLY -- NOPRINT OPTION SPECIFIED                      * 14860021
*                                                                     * 14880021
*********************************************************************** 14900021
         SPACE 2                                                        14920021
MNOPENIN OPEN  MF=(E,CMIOLST1)                                          14940021
         SPACE                                                          14960021
MNONEBUF LA    R0,121              PROVIDE ONE                          14980021
         BAL   R14,GETCORE           SYSPRINT BUFFER                    15000021
         ST    R1,CMPUTREC             SINCE SYSPRINT NOY SPECIFIED     15020021
         NI    CMPRMFLG,X'FF'-CQMAP  INSURE MAP FLAG IS OFF             15040021
MNCHKLIN NI    CMSTATUS,X'FF'-CQMSGSAV  TURN OFF MESSAGE SAVE REQUEST   15060021
         TM    CMFLAG3,CQINCORE   IS SYSLIN INCORE                      15080021
         BO    MNGOTORL           YES. SKIP PRIME                       15100021
         TM    CMIOFLGS,CQIOERR    TERMINATION ERROR OCCUR              15120021
         BO    MNIDEN                  YES. GO CLOSE OUT                15140021
         TM    DCBOFLGS,DCBOPEN    WAS SYSLIN SUCCESSFULLY OPENED       15160021
         BO    MNALOCRD              YES - ALLOCATE BUFFERS AND DECB'S  15180021
*                                                                       15200021
         LA    R0,ERIOUT1       NO - LOAD ERROR CODE                    15220021
         LA    R1,CMLINDD                 ADDRESS OF DDNAME             15240021
         L     R15,ADRERROR               ADDRESS OF ERROR ROUTINE      15260021
         BALR  R14,R15            GIVE ERROR                            15280021
         B     MNIDEN                  AND GO CLOSE OUT                 15300021
         SPACE 2                                                        15320021
MNALOCRD OI    DCBOFLGS,UNLKATRB     YES - SET UNLIKE ATTRIBUTES BIT    15340021
         L     R15,ADRBUFFR            AND GO ALLOCATE                  15360021
         BALR  R14,R15                 FOR SYSLIN                       15380021
         TM    CMSTATUS,CQABORT      TERMINATION ERROR OCCURR           15400021
         BNZ   MNIDEN                  YES - GO CLOSE OUT               15420021
*                                                                       15440021
         TM    CMIOFLGS,CQFIXED    IS THE RECORD FORMAT FIXED           15460021
         BO    MNOBJMOD              YES - GO PRIME FOR OBJECT MODULE   15480021
*                                                                       15500021
*   LOAD MODULE INPUT -- GO TO IEWLLIBR FOR PROCESSING                  15520021
*                                                                       15540021
         L     R15,ADRLMPRC        GET ENTRY POINT TO LOAD MODULE PROC  15560021
         BALR  R14,R15               AND GO PROCESS                     15580021
         B     MNEOCRET            LOAD MODULE IN -- GO CHECK FOR MORE  15600021
*                                                                       15620021
*   OBJECT MODULE INPUT -- GO TO IEWLRELO FOR PROCESSING                15640021
*                                                                       15660021
MNOBJMOD L     R15,ADRPRIME        FIRST -- PRIME THE                   15680021
         BALR  R14,R15               OBJECT MODULE BUFFERS              15700021
*                                                                       15720021
MNGOTORL EQU   *                                                        15740021
         L     R15,ADROMPRC        THEN -- GO PROCESS                   15760021
         BALR  R14,R15               THE OBJECT MODULE                  15780021
         SPACE                                                          15800021
MNEOCRET TM    CMSTATUS,CQABORT      TERMINATION ERROR OCCUR            15820021
         BNZ   MNBITMAP                YES - GO CLOSE OUT               15840021
*                                                                       15860021
*   RETURN FROM PROCESSING ONE CONCATENATION OF SYSLIN -----            15880021
*     CHECK FOR ANOTHER CONCATENATION RECEIVED                          15900021
*                                                                       15920021
         TM    CMIOFLGS,CQEOCB+CQEOFB   CHECK EOC AND EOF               15940021
         SPACE                                                          15960021
         BM    MNALOCRD                   ONLY ONE - ANOTHER CONCAT     15980021
*                                                                       16000021
*   ALL PRIMARY INPUT HAS BEEN LOADED --- GO TO IEWACALL TO PROCESS     16020021
*  AUTO-CALL AND FINAL RESOLUTION                                       16040021
*                                                                       16060021
         L     R15,ADRACALL                                             16080021
         BALR  R14,R15                                                  16100021
*              LOADING IS COMPLETE     IDENTIFY PROGRAM                 16120021
*                                                                       16140021
MNIDEN   L     R1,CMNXTTXT         ROUND UP LAST ADDRESS USED           16160021
         LA    R1,7(R1)            TO DOUBLEWORD                        16180021
         N     R1,DBLMASK                                               16200021
         ST    R1,CMNXTTXT                                              16220021
         L     R1,CMLOWTBL         ROUND DOWN LOWEST TABLE              16240021
         N     R1,DBLMASK          ADDRESS USED                         16260021
         ST    R1,CMLOWTBL                                              16280021
         TM    CMFLAG3,CQIDEN     IS IDENTIFICATION WANTED              16330000
         BZ    MNNOID             NO, DON'T IDENTIFY                    16332000
         TM    CMFLAG4,CQNOEX     IS EXECUTION SCHEDULED                16340000
         BO    MNNOID             NO. DON'T IDENTIFY                    16360000
         L     R15,ADRCDE         YES. GO CONSTRUCT CDE OR LPRB         16380000
         BALR  R14,R15            GO DO IT                              16400000
MNNOID   EQU   *                                                        16420021
*                                                                       16440021
*   LOADING IS COMPLETE -- GO PROCESS THE DIAGNOSTIC MESSAGE DICTIONARY 16460021
*                                                                       16480021
MNBITMAP L     R15,ADRABTMP        GO TO PROCESS THE BITMAP             16500021
         BALR  R14,R15                                                  16520021
         LR    R5,R15              SAVE THE RETURN CODE                 16540021
         EJECT                                                          16560021
*******************************************************************     16580021
*                                                                 *     16600021
*   ALL PROCESSING IS COMPLETE -- THE FOLLOWING WILL              *     16620021
*                                                                 *     16640021
*     1.  WRITE THE LAST SYSPRINT BLOCK (SHORT IF NECESSARY)      *     16660021
*     2.  CHECK ALL UNCHECKED SYSPRINT DECB'S                     *     16680021
*     3.  CLOSE INPUT AND OUTPUT DCB'S                            *     16700021
*     4.  SET UP THE RETURN PARAMETER LIST                        *     16720021
*     5.  FREE ALL STORAGE NOT USED BY THE LOADED PROGRAM         *     16740021
*     6.  RETURN TO THE INVOKING PROGRAM                          *     16760021
*                                                                 *     16780021
*   NOTE - REGISTER 5 MUST BE PRESERVED UNTIL RETURN TO THE INVOKING    16800021
*          PROGRAM.  IT CONTAINS THE RETURN CODE PASSED FROM IEWBTMAP.  16820021
*                                                                       16840021
*******************************************************************     16860021
         SPACE 3                                                        16880021
MNPRPURG TM    CMSTATUS,CQPRTOPN   IS THE SYSPRINT DCB OPEN             16900021
         BZ    MNCLOSE               NO - GO CLOSE INPUT DATA-SET       16920021
         SPACE                                                          16940021
         L     R10,CMWDCBPT          YES - GET SYSPRINT DCB             16960021
         USING IHADCB,R10              AND IDENTIFY IT                  16980021
         L     R9,CMWDECPT           GET CURRENT DECB                   17000021
         LA    R9,0(R9)              INSURE TOP BYTE IS ZERO            17020021
         USING DECB,R9                 AND IDENTIFY IT                  17040021
         SPACE                                                          17060021
         L     R3,CMPUTREC         COMPUTE SIZE                         17080021
         AH    R3,DCBLRECL           OF LAST                            17100021
         S     R3,DECAREA              SYSPRINT BLOCK AND               17120021
         STH   R3,DCBBLKSI               STORE INTO DCB BLOCKSIZE       17140021
         SPACE                                                          17160021
         BAL   R7,WTWRITE             AND WRITE THE LAST BLOCK          17180021
         SPACE                                                          17200021
MNNOTRNC LR    R8,R9               SAVE POINTER TO DECB                 17220021
MNNXTPRG L     R9,DECDECPT         GET POINTER TO NEXT DECB             17240021
         BAL   R7,WTCHECK            AND GO CHECK IT                    17260021
         SPACE                                                          17280021
MNNOCHK  CR    R8,R9               WAS THAT THE LAST DECB               17300021
         BNE   MNNXTPRG              NO - GO CHECK THE NEXT             17320021
         SPACE 2                                                        17340021
MNCLOSE  EQU   *                                                        17360021
         LA    R3,CMIOLST1         POINT TO BEGINNING OF CLOSE LIST     17380021
         TM    CMSTATUS,CQLIBOPN  IS LIBRARY OPEN                       17400021
         BO    MNCLS2             YES. SEE IF IT'S PASSED               17420021
         TM    CMFLAG3,CQPASLIN   NO. IS LIN PASSED                     17440021
         BZ    MNCLS3             NO. WE NEED TO CLOSE IT               17460021
         B     MNCLS35             CHECK SYSPRINT                       17480021
MNCLS2   TM    CMFLAG3,CQPASLIB   WAS LIB PASSED                        17500021
         BZ    MNCLS3                  NO.                              17520021
         L     R10,CMRDCBPT        YES. GET LIB DCB                     17540021
         MVC   DCBSYNAD+1(3),CMLIBSYN+1   RESTORE EXIT ADDRESSES        17560021
         MVC   DCBEODAD+1(3),CMLIBEOD+1   RESTORE EXIT ADDRESSES        17580021
         MVC   DCBEXLST+1(3),CMLIBEXL+1   RESTORE EXIT ADDRESSES        17600021
         B     MNCLS35             DON'T CLOSE IT                       17620021
MNCLS3   EQU   *                                                        17640021
         SPACE 2                                                        17660021
         L     R10,CMRDCBPT        PICK UP INPUT DCB POINTER            17680021
         BAL   R8,ENTCLOSE         STORE INTO CLOSE LIST                17700021
         SPACE                                                          17720021
MNCLS35  TM    CMSTATUS,CQPRTDCB   IS SYSPRINT OPEN                     17740021
         BZ    MNCLS4              BRANCH TO CHECK SYSTERM              17760021
         SPACE                                                          17780021
         L     R10,CMWDCBPT          YES - PICK UP OUTPUT DCB POINTER   17800021
         BAL   R8,ENTCLOSE         STORE INTO CLOSE LIST                17820021
MNCLS4   TM    CMFLAG4,CQTRMOPN    IS SYSTERM OPEN                      17840021
         BNO   MNCHKCLS            NO. BRANCH                           17860021
         L     R10,CMTDCBPT        YES. CLOSE IT                        17880021
         BAL   R8,ENTCLOSE         STORE INTO CLOSE LIST                17900021
MNCHKCLS LA    R1,CMIOLST1                                              17920021
         CR    R1,R3               DO WE NEED TO ISSUE CLOSE            17940021
         BE    MNCLS5              NO.                                  17960021
         LA    R1,4                YES. BACK TO LAST ENTRY              17980021
         SR    R3,R1                                                    18000021
         OI    0(R3),X'80'         FLAG LAST ENTRY                      18020021
         SPACE 2                                                        18040021
MNNOPRNT CLOSE MF=(E,CMIOLST1)     CLOSE OUT DATA SETS                  18060021
MNCLS5   EQU   *                                                        18080021
         SPACE                                                          18100021
         L     R1,CMMAINPT             GET 1ST ADDR USED                18120021
         LR    R2,R1                   SAVE FOR RETURN                  18140021
         L     R8,CMXLCHN              GET FIRST EXTENT ADDR      M3177 18160021
*                                      BY COMPILER                      18180021
         LTR   R8,R8                   WERE THERE ANY?                  18200021
         BZ    MNCLSG                  NO                               18220021
         L     R6,4(R8)                                                 18240021
         ST    R6,8(R1)                STORE FOR LATER FREEMAIN         18260021
         L     R6,8(R8)                GET 1ST EXTENT LENGTH            18280021
         ST    R6,12(R1)               STORE FOR LATER FREEMAIN         18300021
         TM    CMFLAG4,CQNOEX          ARE WE GOING TO EXECUTE?         18320021
         BNO   MNXOK                   YES.                             18340000
         TM    CMFLAG4,CQIDONE    NO. HAS PGM BEEN IDENTIFIED?          18350000
         BNO   MNNOX              NO. GO FREEMAIN EXTENTS               18360000
MNLDDT   LOAD  EPLOC=CMPGMNM      YES. DE-IDENTIFY W/LOAD & DELETE      18370000
         DELETE EPLOC=CMPGMNM                                           18380000
         B     MNNOR1                                                   18390000
MNCLSG   EQU   *                                                        18460021
         TM    CMFLAG4,CQNOEX          IS PGM EXECUTABLE?               18480021
         BNO   MNXOK                   YES.                             18500000
         TM    CMFLAG4,CQIDONE     NO. HAS PGM BEEN IDENTIFIED?         18510000
         BO    MNLDDT              YES, GO TO LOAD AND DELETE           18520000
MNIDCHK  TM    CMFLAG3,CQIDEN      ENTERED THRU IEWLOAD?                18520400
         BO    MNMARK              YES, FREEMAIN EVERYTHING             18522000
         B     MNLOADR             NO, PROCESS FOR IEWLOADR             18572000
MNXOK    EQU   *                                                        18622000
         TM    CMFLAG3,CQIDEN      ENTERED THRU IEWLOAD?                18672000
         BO    MNNOR1              YES                                  18722000
MNLOADR  ST    R1,0(R1)            NO, ENTERED THRU IEWLOADR            18772000
         L     R3,CMNXTTXT         PICK UP LENGTH                       18774000
         SR    R3,R1               GET TRUE LENGTH                      18776000
         ST    R3,4(R1)            AND STORE IT                         18778000
         B     MNNOR1              GO TO MNNOR1                         18778400
MNNOX    EQU   *                                                        18780021
         L     R0,12(R1)               PICK UP 1ST EXTENT LENGTH        18800021
         L     R1,8(R1)                PICK UP 1ST EXTENT ADDR          18820021
         FREEMAIN R,LV=(0),A=(1)       FREE 1ST EXTENT                  18840021
         LR    R1,R2                   RESTORE REG. 1                   18860021
         B     MNIDCHK                                                  18880000
MNNOR1   L     R1,CMNXTTXT         HI ADDRESS FOR FREEMAIN              18900021
MNMARK   L     R8,CMEPADDR         GET ENTRY POINT ADDRESS              18920021
         L     R13,4(R13)          PICK UP SAVE AREA POINTER            18940021
         L     R0,CMHITBL          GET HIGHEST CORE ADDRESS             18960021
         SR    R0,R1                 AND CALCULATE FREEMAIN SIZE        18980021
*    FREEING TABLE AND BUFFER STORAGE.                                  19000021
*     ALSO PROGRAM STORAGE IF RETURN CODE GREATER THAN 4                19020021
         BZ    MNNOFREE            FREEMAIN SIZE ZERO -- NO FREE        19040021
         SPACE                                                          19060021
         FREEMAIN R,LV=(0),A=(1)   FREE ALL STORAGE NOT USED BY PRO     19080021
         SPACE                                                          19100021
MNNOFREE LR    R0,R8              MOVE EP ADDRESS TO REG 0              19120021
         LR    R1,R2               MOVE RETURN LIST ADDRESS TO R1       19140021
         LR    R15,R5              PUT RETURN CODE INTO R15             19160021
         SPACE                                                          19180021
*   RETURN TO INVOKING PROGRAM                                          19200021
         SPACE                                                          19220021
         L     R14,12(0,13)             LOAD RETURN REGISTER            19240021
         LM    R2,R12,28(13)              LOAD REGISTERS EXCEPT 15-0-1  19260021
         MVI   12(13),X'FF'             SET RETURN INDICATION           19280021
         BR    R14                        AND RETURN                    19300021
*                                                                       19320021
*        STORES DCB POINTER INTO CLOSE LIST. R3 POINTS TO LIST ENTRY    19340021
*                                                                       19360021
ENTCLOSE O     R10,CLOSE           OR IN OPTION BYTE                    19380021
         ST    R10,0(R3)           STORE INTO CLOSE LIST                19400021
         NI    0(R3),X'7F'         CLEAR LIST DELIMITER                 19420021
         LA    R3,4(R3)            UP TO NEXT ENTRY                     19440021
         BR    R8                                                       19460021
         SPACE 3                                                        19480021
         EJECT                                                          19500021
*******************************************************************     19520021
*                                                                 *     19540021
*   OPEN SYSLIB -- THIS ROUTINE WILL CLOSE 'SYSLIN', MOVE THE     *     19560021
*  'SYSLIB' DDNAME INTO THE DCB AND RE-OPEN IT FOR PARTITIONED    *     19580021
*  ORGANIZATION.  IF IT OPENS SUCCESSFULLY, BUFFERS ARE ALLOCATED *     19600021
*  AND THE 'SYSLIB OPEN' BIT IN THE COMMUNICATIONS AREA IS SET ON.*     19620021
*   IF THE 'SYSLIB' DATA-SET HAS NOT BEEN ALLOCATED (DCB DOES NOT *     19640021
*  OPEN), A DIRECT RETURN IS MADE.                                *     19660021
*                                                                 *     19680021
*******************************************************************     19700021
         SPACE 3                                                        19720021
         ENTRY HEWOPNLB                                                 19740021
         USING IHADCB,R10                                               19760021
HEWOPNLB SAVE  (14,12),,*          SAVE CALLERS REGISTERS               19780021
         USING HEWOPNLB,R15       IDENTIFY ENTRY POINT BASE             19800021
         L     R12,IOCABASE            LOAD CSECT BASE                  19820021
         DROP  R15                       DROP ENTRY POINT BASE          19840021
         USING HEWLIOCA,R12          AND IDENTIFY CSECT BASE            19860021
         L     R4,IOCABSE2      LOAD AND IDENTIFY                       19880021
         USING HEWLIOCA+4096,R4    SECOND BASE REGISTER                 19900021
         SPACE                                                          19920021
         L     R13,8(R13)          GET NEXT SAVE AREA POINTER           19940021
*                                                                       19960021
         L     R10,CMRDCBPT        GET POINTER TO INPUT DCB             19980021
         TM    CMFLAG3,CQPASLIN   WAS SYSLIN PASSED                     20000021
         BO    LB1                YES. SKIP CLOSE AND CHECK LIB         20020021
         O     R10,CLOSE             OR CLOSE OPTIONS INTO IT           20040021
         ST    R10,CMIOLST1            AND STORE INTO LIST              20060021
         SPACE                                                          20080021
         CLOSE MF=(E,CMIOLST1)     CLOSE PRIMARY INPUT DCB              20100021
LB1      TM    CMFLAG3,CQPASLIB   WAS SYSLIB PASSED                     20120021
         BO    LB2                YES. ASSUME IT'S OPEN                 20140021
         TM    CMFLAG3,CQPASLIN   DO WE HAVE TO ALLOCATE                20160021
         BZ    LB4                NO. USE SYSLIN DCB                    20180021
         LA    R0,DCBSIZE         ALLOCATE DCB                          20200021
         BAL   R14,GETCORE                                              20220021
         ST    R1,CMRDCBPT                                              20240021
         LR    R10,R1                                                   20260021
         MVC   IHADCB(DCBSIZE),MODELDCB                                 20280021
         MVC   DCBMACR(2),MACRREAD                                      20300021
LB4      EQU   *                                                        20320021
         SPACE                                                          20340021
         MVC   DCBDDNAM(8),CMLIBDD      MOVE SYSLIB DDNAME INTO DCB     20360021
         MVC   DCBDSORG(2),DSORGPO        SET DCB PARTITIONED           20380021
         SR    R2,R2               ZERO OUT                             20400021
         STH   R2,DCBLRECL           LRECL AND                          20420021
         STH   R2,DCBBLKSI             BLKSIZE                          20440021
         SPACE                                                          20460021
         LA    R10,0(R10)          ZERO FLAG BYTE IN DCB POINTER        20480021
         O     R10,OPENIN            OR IN OPTION BYTE                  20500021
         ST    R10,CMIOLST1            AND STORE INTO LIST              20520021
         SPACE                                                          20540021
         OPEN  MF=(E,CMIOLST1)     OPEN DCB FOR AUTO-CALL LIBRARY       20560021
         SPACE                                                          20580021
         TM    CMIOFLGS,CQIOERR    TEST IF RECFM=V FOUND IN OPEN        20600021
         BO    IOABORT               YES - ABORT LOADING                20620021
LB5      TM    DCBOFLGS,DCBOPEN   WAS THE DCB OPEN                      20640021
         BZ    LBRETURN              NO - REUTRN                        20660021
         SPACE                                                          20680021
         OI    CMSTATUS,CQLIBOPN     YES - SET LIBRARY OPEN BIT         20700021
         L     R15,ADRBUFFR            AND GO                           20720021
         BALR  R14,R15                   ALLOCATE BUFFERS               20740021
         SPACE                                                          20760021
LBRETURN L     R13,4(R13)          PICK UP PREVIOUS SAVE AREA           20780021
         RETURN (14,12),T            AND RETURN                         20800021
LB2      L     R10,CMLIBDCB       GET PASSED DCB                        20820021
         ST    R10,CMRDCBPT                                             20840021
         MVC   CMLIBSYN+1(3),DCBSYNAD+1   SAVE EXIT ROUTINE ADDRESSES   20860021
         MVC   CMLIBEOD+1(3),DCBEODAD+1   SAVE EXIT ROUTINE ADDRESSES   20880021
         MVC   CMLIBEXL+1(3),DCBEXLST+1   SAVE EXIT ROUTINE ADDRESSES   20900021
         XC    DCBSYNAD+1(3),DCBSYNAD+1  USE LOADER SYNAD ROUTINE       20920021
         LA    R7,SYNAD                                                 20940021
         L     R6,DCBSYNAD                                              20960021
         OR    R7,R6                                                    20980021
         ST    R7,DCBSYNAD                                              21000021
         XC    DCBEODAD+1(3),DCBEODAD+1                                 21020021
         LA    R7,EODAD                                                 21040021
         L     R6,DCBEODAD                                              21060021
         OR    R7,R6                                                    21080021
         ST    R7,DCBEODAD                                              21100021
             XC    DCBEXLST+1(3),DCBEXLST+1  USE LOADER DCB EXIT        21120021
         LA    R7,DCBEXIT                                               21140021
         L     R6,DCBEXLST                                              21160021
         OR    R7,R6                                                    21180021
         ST    R7,DCBEXLST                                              21200021
         B     LB5                                                      21220021
         EJECT                                                          21240021
*********************************************************************** 21260021
*                                                                     * 21280021
*   DECB AND BUFFER DEALLOCATION - ALLOCATION ROUTINE                   21300021
*     UPON ENTRY -- R10 POINTS TO THE DCB FOR WHICH BUFFERS ARE         21320021
*     TO BE ALLOCATED                                                   21340021
*                                                                     * 21360021
*********************************************************************** 21380021
         SPACE 3                                                        21400021
         USING DECB,R9                                                  21420021
         ENTRY HEWBUFFR                                                 21440021
HEWBUFFR SAVE (14,12)             SAVE REGISTERS                        21460021
         USING HEWBUFFR,R15       IDENTIFY EP BASE                      21480021
         L     R12,IOCABASE            LOAD CSECT BASE                  21520021
         DROP  R15                       DROP EP BASE                   21540021
         USING HEWLIOCA,R12      AND IDENTIFY CSECT BASE                21560021
         L     R4,IOCABSE2      LOAD AND IDENTIFY                       21580021
         USING HEWLIOCA+4096,R4   SECOND BASE REGISTER                  21600021
         L     R13,8(R13)          PICK UP NEXT SAVE AREA               21620021
*                                                                       21640021
         C     R10,CMWDCBPT        IS THIS ALLOCATION FOR SYSPRINT      21660021
         BE    ALOCPRNT              YES - NO PREVIOUS BUFFERS ALLOC    21680021
*                                                                       21700021
         TM    CMIOFLGS,CQFIXED+CQUNDEF  IS THERE A PREV ALLOCATION     21720021
         BZ    CHKFORMT                    NO - BYPASS DEALLOCATION     21740021
         SPACE                                                          21760021
         L     R9,CMRDECPT               PICK UP POINTER TO FIRST DECB  21780021
         TM    CMIOFLGS,CQUNDEF    WAS THE PREV ALLOC FOR UNDEFINED     21800021
         BZ    DEALFIXD              NO - DEALLOCATE FIXED              21820021
*                                                                       21840021
         TM    DCBRECFM,UNDEFINE   IS THIS ALLOCATION FOR UNDEFINED     21860021
         BO    UNDFINSH              YES - LEAVE ALLOCATION THE SAME    21880021
*                                                                       21900021
*   THE PREVIOUS ALLOCATION WAS FOR UNDEFINED AND THIS ONE IS FOR       21920021
*  FIXED -- DEALLOCATE THE UNDEFINED BUFFERS BEFORE ALLOCATION FOR      21940021
*  THE FIXED FORMAT                                                     21960021
*                                                                       21980021
         L     R1,CMGETREC         PICK UP POINTER TO THE RLD BUFFER    22000021
         LA    R0,RLDSIZE            PUT SIZE INTO R0                   22020021
         BAL   R14,FREECORE            AND FREE THE BUFFER              22040021
*                                                                       22060021
         L     R1,DECDECPT         PICK UP POINTER TO SECOND DECB       22080021
         LA    R0,DECBSIZE         PUT DECB SIZE INTO R0                22100021
         BAL   R14,FREECORE          AND FREE THE SECOND DECB           22120021
*                                                                       22140021
         LR    R1,R9               POINTER TO FIRST DECB TO PARM REG    22160021
         LA    R0,DECBSIZE         SIZE OF DECB                         22180021
         BAL   R14,FREECORE          FREE THE FIRST DECB                22200021
*                                                                       22220021
         B     ALFIXSET            GO ALLOCATE FOR THIS CONCATENATION   22240021
*                                                                       22260021
*   DEALLOCATE A LIST OF FIXED SIZE BUFFERS AND THEIR ASSOCIATED DECB'S 22280021
*                                                                       22300021
DEALFIXD LR    R6,R9               LIMIT IS POINTER TO FIRST DECB       22320021
*                                                                       22340021
DEALMORE L     R7,DECDECPT         GET THE POINTER TO NEXT DECB         22360021
         L     R1,DECAREA          BUFFER POINTER FOR THIS DECB         22380021
         LH    R0,CMBLKSIZ           SIZE OF BUFFER                     22400021
         BAL   R14,FREECORE        FREE THE BUFFER                      22420021
*                                                                       22440021
         LR    R1,R9               MOVE THE DECB POINTER                22460021
         LA    R0,DECBSIZE           SIZE OF DECB                       22480021
         BAL   R14,FREECORE        FREE THE DECB                        22500021
*                                                                       22520021
         LR    R9,R7               POINT TO NEXT DECB                   22540021
         CR    R9,R6                 IS IT BACK AROUND TO THE FIRST     22560021
         BNE   DEALMORE                NO - GO FREE THIS COMBINATION    22580021
*                                                                       22600021
CHKFORMT TM    DCBRECFM,UNDEFINE   IS THIS ALLOCATION FOR UNDEFINED     22620021
         BO    ALOCUNDF              YES - GO ALLOCATE FOR IT           22640021
*                                                                       22660021
*   ALLOCATE A LIST OF FIXED SIZE BUFFERS AND THEIR ASSOCIATED DECB'S   22680021
*     THE SIZE OF THE BUFFERS IS FOUND IN 'DCBBLKSI'                    22700021
*     THE NUMBER OF BUFFERS IS FOUND IN 'DCBNCP'                        22720021
*                                                                       22740021
ALFIXSET EQU   *                                                        22760021
ALOCPRNT SR    R7,R7               GET THE NUMBER                       22780021
         IC    R7,DCBNCP             PICK UP NUMBER OF BUFFERS          22800021
         SPACE                                                          22820021
ALOCFIXD BAL   R15,GETDECB         GET A DECB                           22840021
         LR    R6,R9                 SAVE POINTER TO IT                 22860021
         B     FIXDSTRT                AND GO ALLOCATE THE LIST         22880021
         SPACE                                                          22900021
FIXDMORE LR    R8,R9               SAVE POINTER TO THIS DECB            22920021
         BAL   R15,GETDECB           AND GET ANOTHER                    22940021
         SPACE                                                          22960021
FIXDSTRT LH    R0,DCBBLKSI         GET SIZE OF A BUFFER                 22980021
         BAL   R14,GETCORE           AND GET A BUFFER FOR THE DECB      23000021
*                                                                       23020021
         ST    R1,DECAREA          STORE BUFFER ADDRESS INTO DECB       23040021
         ST    R8,DECDECPT           CHAIN THIS DECB TO THE LAST        23060021
         BCT   R7,FIXDMORE             AND GO GET ANOTHER IF NEEDED     23080021
*                                                                       23100021
*   ALL BUFFERS AND DECB'S HAVE BEEN ALLOCATED                          23120021
*                                                                       23140021
         ST    R9,DECDECPT-DECB(R6)  CHAIN LAST DECB TO THE FIRST       23160021
*                                                                       23180021
         C     R10,CMWDCBPT        IS THIS ALLOCATION FOR SYSPRINT      23200021
         BNE   FIXDIND               NO - SET INPUT INDICATORS          23220021
*                                                                       23240021
         ST    R9,CMWDECPT           YES - STORE POINTER FOR OUTPUT     23260021
         B     ALOCRETN                  AND RETURN                     23280021
*                                                                       23300021
FIXDIND  MVC   CMBLKSIZ(2),DCBBLKSI     SAVE BLKSIZE FOR NEXT CONCAT    23320021
         MVI   CMIOFLGS,CQFIXED     TURN OFF ALL I/O FLAGS EXCEPT FIXED 23340021
         B     INPFINSH              AND GO FINISH UP                   23360021
*                                                                       23380021
*   ALLOCATE 2 DECB'S AND 1 RLD BUFFER FOR UNDEFINED FORMAT             23400021
*     THE FIRST DECB IS FOR THE RLD RECORDS AND IS POINTED TO           23420021
*    BY 'CMRDECPT'                                                      23440021
*     THE RLD BUFFER POINTER IS STORED INTO THE DECB AND 'CMGETREC'     23460021
*     THE SECOND DECB IS CHAINED TO THE RLD DECB                        23480021
*     THE SECOND DECB HAS NO BUFFER ALLOCATED FOR IT -- IT IS USED      23500021
*    FOR READING TEXT DIRECTLY TO THE LOCATION WHERE IT WILL REMAIN     23520021
*                                                                       23540021
ALOCUNDF BAL   R15,GETDECB         GET A DECB                           23560021
         LR    R7,R9                 MOVE POINTER                       23580021
         BAL   R15,GETDECB         GET ANOTHER                          23600021
         ST    R7,DECDECPT           STORE POINTER TO LAST INTO IT      23620021
         ST    R9,DECDECPT-DECB(R7)  STORE POINTER TO THIS INTO LAST    23640021
         SPACE                                                          23660021
         LA    R0,RLDSIZE          GET A BUFFER                         23680021
         STH   R0,DECLNGTH              STORE SIZE INTO DECB            23700021
         BAL   R14,GETCORE           FOR RLD RECORDS                    23720021
         ST    R1,DECAREA          STORE BUFFER POINTER IN DECB         23740021
         ST    R1,CMGETREC         STORE BUFFER POINTER IN COMMON AREA  23760021
*                                                                       23780021
UNDFINSH MVI   CMIOFLGS,CQUNDEF    CLEAR I/O FLAGS EXCEPT UNDEFINED     23800021
*                                                                       23820021
INPFINSH ST    R9,CMRDECPT         STORE POINTER TO DECB CHAIN          23840021
ALOCRETN L     R13,4(R13)          PICK UP PREVIOUS SAVE AREA POINTER   23860021
         RETURN (14,12),T            AND RETURN                         23880021
         SPACE 3                                                        23900021
GETDECB  LA    R0,DECBSIZE         SIZE OF A DECB                       23920021
         BAL   R14,GETCORE           GET STORAGE FOR IT                 23940021
         LR    R9,R1                   MOVE POINTER TO USING REG        23960021
         XC    DECB(DECBSIZE-4),DECB     CLEAR IT OUT                   23980021
         ST    R10,DECDCBAD                STORE THE DCB POINTER        24000021
         BR    R15                           AND RETURN                 24020021
         EJECT                                                          24040021
*********************************************************************** 24060021
*                                                                     * 24080021
*   ROUTINE TO ALLOCATE STORAGE FROM A LIST OF FREE AREAS POINTED TO    24100021
*  BY 'CMFRECOR' -- AND PRIME (NEVER ALLOCATED) CORE IF A PREVIOUSLY    24120021
*  ALLOCATED AREA IS NOT AVAILABLE                                      24140021
*                                                                       24160021
*   UPON ENTRY -- REGISTER 0 CONTAINS THE SIZE REQUESTED                24180021
*                                                                       24200021
*   UPON RETURN -- REGISTER 1 POINTS TO THE ALLOCATED AREA              24220021
*                                                                       24240021
*   THIS ROUTINE DOES NOT SAVE AND RESTORE REGISTERS ---                24260021
*     REGISTERS 2 THROUGH 5 ARE USED AND THEREFOR ARE VOLITILE          24280021
*                                                                       24300021
*********************************************************************** 24320021
         SPACE 2                                                        24340021
GETCORE  LA    R2,CMFRECOR         PICK UP POINTER TO FREE CORE CHAIN   24360021
         SPACE                                                          24380021
         LR    R3,R0               ROUND                                24400021
         LA    R0,7(R3)              SIZE UP TO                         24420021
         N     R0,DBLMASK              DOUBLE WORD                      24440021
         SPACE                                                          24460021
GCAGAIN  L     R1,0(R2)            GET POINTER TO NEXT AREA             24480021
         LTR   R1,R1                 IS THERE A NEXT AREA               24500021
         BZ    GETPRIME                NO - GO ALLOCATE PRIME CORE      24520021
*                                                                       24540021
         L     R5,4(R1)                  YES - GET SIZE OF THE AREA     24560021
         SR    R5,R0              SUBTRACT REQUEST SIZE FROM THIS SIZE  24580021
         BZ    GCGIVEL               IF EQUAL -- GIVE THE ENTIRE AREA   24600021
         BP    GCSUBDIV              IF THIS SIZE LARGER - GIVE PORTION 24620021
         LR    R2,R1                 NOT ENOUGH ----                    24640021
         B     GCAGAIN                 TRY NEXT AREA                    24660021
*                                                                       24680021
*                                                                       24700021
GCGIVEL  L     R5,0(R1)           PICK UP POINTER TO NEXT AREA          24720021
         ST    R5,0(R2)             AND CHAIN IT TO LAST AREA           24740021
         BR    R14                 RETURN WITH AREA                     24760021
*                                                                       24780021
GCSUBDIV ST    R5,4(R1)           STORE NEW SIZE AS DIFFERENCE          24800021
         AR    R1,R5                ADD DIFFERENCE TO POINTER           24820021
         BR    R14                     AND RETURN                       24840021
*                                                                       24860021
*                                                                       24880021
GETPRIME L     R1,CMLOWTBL         GET LOWEST ADDRESS USED SO FAR       24900021
         SR    R1,R0                 SUBTRACT OFF REQUESTED SIZE        24920021
         ST    R1,CMLOWTBL             AND STORE AS NEW LOW ADDRESS     24940021
         C     R1,CMLSTTXT         IS IT LOWER THAN THE HIGHEST TEXT    24960021
         BCR   10,R14                NO -- RETURN GIVING AREA           24980021
*                                                                       25000021
*   TABLE OVERFLOW -- GIVE ERROR MESSAGE AND EXIT                       25020021
*                                                                       25040021
         LA    R0,ERSIZE2          LOAD MESSAGE NUMBER                  25060021
         L     R15,ADRERROR          ENTRY POINT TO ERROR LIST          25080021
         BR    R15                     AND ABORT LOADING                25100021
         EJECT                                                          25120021
*********************************************************************** 25140021
*                                                                     * 25160021
*   ROUTINE TO RETURN STORAGE TO A FREE LIST POINTED TO BY 'CMFRECOR'   25180021
*                                                                       25200021
*   UPON ENTRY -- REGISTER 1 POINTS TO THE AREA TO BE FREED             25220021
*                 REGISTER 0 CONTAINS THE SIZE OF THE AREA TO BE FREED  25240021
*                                                                       25260021
*   THIS ROUTINE DOES NOT SAVE AND RESTORE REGISTERS ---                25280021
*     REGISTERS 1 THROUGH 4 ARE USED AND THEREFOR ARE VOLITILE          25300021
*                                                                       25320021
*********************************************************************** 25340021
         SPACE 2                                                        25360021
FREECORE LA    R1,0(R1)            INSURE TOP BYTE OF POINTER IS ZERO   25380021
         LA    R2,CMFRECOR         GET POINTER TO FREE CORE CHAIN       25400021
         SPACE                                                          25420021
         LR    R3,R0               ROUND                                25440021
         LA    R0,7(R3)              SIZE UP TO                         25460021
         N     R0,DBLMASK              DOUBLE WORD                      25480021
         SPACE                                                          25500021
FCAGAIN  L     R3,0(R2)            GET POINTER TO FREE AREA             25520021
         LTR   R3,R3                 IS THERE REALLY ONE THERE          25540021
         BZ    FCSTASH                 NO - GO SAVE THIS ONE BY ITSELF  25560021
*                                                                       25580021
         LR    R5,R1            DOES THE ADDRESS PLUS SIZE OF           25600021
         AR    R5,R0              THE RETURNING AREA EQUAL              25620021
         CR    R5,R3                THE START OF THIS AREA              25640021
         BE    FCBELOW          YES - COMBINE THE TWO INTO ONE BIG ONE  25660021
*                                                                       25680021
         L     R5,4(R3)         DOES THE ADDRESS PLUS SIZE OF           25700021
         AR    R5,R3              THIS ONE EQUAL THE START              25720021
         CR    R5,R1                OF THE RETURNING AREA               25740021
         BE    FCABOVE          YES -- COMBINE THESE TWO TOGETHER       25760021
*                                                                       25780021
         LR    R2,R3          THE RETURNING BLOCK IS NOT CONTIGUOUS     25800021
         B     FCAGAIN          WITH THIS ONE -- GO CHECK THE NEXT      25820021
*                                                                       25840021
*                                                                       25860021
FCABOVE  LR    R1,R3          MAKE SUBJECT AREA EQ THIS ONE             25880021
FCBELOW  A     R0,4(R3)         ADD IT'S SIZE TO SUBJECT SIZE           25900021
         L     R5,0(R3)         TAKE IT OUT                             25920021
         ST    R5,0(R2)           OF THE CHAIN                          25940021
         B     FCAGAIN        AND GO TRY TO MERGE THIS ONE              25960021
*                                                                       25980021
*                                                                       26000021
FCSTASH  ST    R1,0(R2)       PUT THE BLOCK ON THE END OF THE LIST      26020021
         ST    R3,0(R1)         ZERO IT'S POINTER FIELD                 26040021
         ST    R0,4(R1)           STORE IT'S SIZE                       26060021
         BR    R14                  AND RETURN                          26080021
         EJECT                                                          26100021
*********************************************************************** 26120021
*                                                                     * 26140021
*   OBJECT MODULE BUFFER PRIME ROUTINE                                  26160021
*                                                                       26180021
*********************************************************************** 26200021
         SPACE 2                                                        26220021
         ENTRY HEWPRIME                                                 26240021
HEWPRIME SAVE  (14,12),,*         SAVE CALLERS REGISTERS                26260021
         USING HEWPRIME,R15       IDENTIFY ENTRY POINT BASE             26280021
         L     R12,IOCABASE            LOAD CSECT BASE                  26320021
         DROP  R15                       DROP ENTRY POINT BASE          26340021
         USING HEWLIOCA,R12       AND IDENTIFY CSECT BASE               26360021
         L     R4,IOCABSE2      LOAD AND IDENTIFY                       26380021
         USING HEWLIOCA+4096,R4   SECOND BASE REGISTER                  26400021
         SPACE 2                                                        26420021
         L     R13,8(R13)          GET POINTER TO NEXT SAVE AREA        26440021
         L     R9,CMRDECPT         GET POINTER TO INPUT DECB CHAIN      26460021
         USING DECB,R9               AND IDENTIFY IT                    26480021
         SPACE                                                          26500021
         LR    R8,R9               SET READ LIMIT TO THIS DECB          26520021
         L     R9,DECDECPT           AND GET POINTER TO NEXT DECB       26540021
         BAL   R7,RDREAD           READ ALL INTERVENING DECB'S          26560021
         SPACE                                                          26580021
         LR    R9,R8               GET POINTER TO DECB NOT READ         26600021
         L     R6,DECAREA            LOAD IT'S BUFFER POINTER           26620021
         ST    R6,CMGETREC           AND STORE AS LAST RECORD ADDRESS   26640021
         SR    R7,R7               SET LENGTH OF READ                   26660021
         STH   R7,DECLNGTH           TO ZERO (NO DATA)                  26680021
         ST    R9,CMRDECPT           STORE THIS DECB AS CURRENT         26700021
         SPACE 2                                                        26720021
         L     R13,4(R13)          LOAD POINTER TO CALLERS SAVE AREA    26740021
         RETURN (14,12),T            AND RETURN                         26760021
         EJECT                                                          26780021
*********************************************************************** 26800021
*                                                                       26820021
*   READ ROUTINE FOR THE LOADER --- ALL REQUESTS FOR DATA IN THE        26840021
*  LOADER ARE MADE THROUGH THIS ROUTINE.                                26860021
*                                                                       26880021
*     FOR READING OBJECT MODULE INPUT ---                               26900021
*        NO PARAMETERS ARE PASSED                                       26920021
*        THE ADDRESS OF THE NEW BUFFER IS RETURNED IN 'CMGETREC'        26940021
*                                                                       26960021
*     FOR READING LOAD MODULE INPUT ---                                 26980021
*        THREE OPTIONS EXIST                                            27000021
*          1 - (REGISTER 0 IS ZERO) - READ AN RLD RECORD                27020021
*          2 - (REGISTER 0 IS POSITIVE) - READ A TEXT RECORD            27040021
*              REGISTER 0 CONTAINS THE LENGTH TO BE READ                27060021
*              REGISTER 1 CONTAINS THE ADDRESS TO READ THE TEXT         27080021
*          3 - (REGISTER 0 IS NEGATIVE) - READ A TEXT AND RLD RECORD    27100021
*              REGISTER 0 CONTAINS THE COMPLEMENT OF LENGTH OF TEXT   * 27120021
*              REGISTER 1 CONTAINS THE ADDRESS TO READ THE TEXT         27140021
*                                                                       27160021
*                                                                       27180021
*     REGISTERS USED FOR IMPLIED ADDRESSING (USING STATEMENTS)          27200021
*                                                                       27220021
*        REGISTER 12 - PROGRAM BASE                                     27240021
*        REGISTER 11 - LOADER COMMUNICATION AREA                        27260021
*        REGISTER 10 - DCB ADDRESS (DATA CONTROL BLOCK)                 27280021
*        REGISTER  9 - DECB ADDRESS (DATA EVENT CONTROL BLOCK)          27300021
*                                                                       27320021
*********************************************************************** 27340021
         SPACE 2                                                        27360021
         ENTRY HEWLREAD                                                 27380021
         USING IHADCB,R10                                               27400021
         USING DECB,R9                                                  27420021
*                                                                       27440021
*                                                                       27460021
HEWLREAD SAVE  (14,12),,*         SAVE CALLERS REGISTERS                27480021
         USING HEWLREAD,R15       IDENTIFY ENTRY POINT ADDRESS          27500021
         L     R12,IOCABASE            LOAD CSECT BASE                  27520021
         DROP  R15                       DROP ENTRY POINT BASE          27540021
         USING HEWLIOCA,R12            IDENTIFY CSECT BASE              27560021
         L     R4,IOCABSE2      LOAD AND IDENTIFY                       27580021
         USING HEWLIOCA+4096,R4   SECOND BASE REGISTER                  27600021
         L     R13,8(R13)          PICK UP NEXT SAVE AREA               27620021
*                                                                       27640021
         L     R10,CMRDCBPT        LOAD BASE FOR DCB                    27660021
         L     R9,CMRDECPT           AND DECB                           27680021
         TM    CMFLAG3,CQINCORE   ARE WE READING INCORE DATA SET        27700021
         BO    RDINCORE           YES.                                  27720021
*                                                                       27740021
         TM    CMIOFLGS,CQRECFM    IS THIS A FIXED OR UNDEFINED READ    27760021
         BO    RDUNDEFN              IT'S UNDEFINED                     27780021
*                                                                       27800021
*   AN OBJECT MODULE IS BEING PROCESSED -- READ FIXED RECORD FORMAT     27820021
*                                                                       27840021
         L     R2,CMGETREC         GET POINTER TO LAST RECORD           27860021
         LH    R3,DCBLRECL           GET LOGICAL RECORD SIZE            27880021
         AR    R2,R3                   COMPUTE NEW RECORD ADDRESS       27900021
         AR    R3,R2                     ADD RECORD SIZE AND ADDRESS    27920021
         S     R3,DECAREA                  SUBTRACT OFF BUFFER BASE     27940021
         CH    R3,DECLNGTH         WILL THIS RECORD GO OVER END OF BLK  27960021
         BNH   RDFIXFIN              NO - GIVE THIS RECORD AND RETURN   27980021
*                                                                       28000021
*   END OF BLOCK HAS BEEN REACHED -- READ ANOTHER                       28020021
*                                                                       28040021
         L     R8,DECDECPT         SET READ LIMIT TO NEXT DECB          28060021
         BAL   R7,RDREAD             AND GO READ THE NEXT BLOCK         28080021
*                                                                       28100021
         LR    R9,R8               MOVE NEXT DECB TO CURRENT            28120021
         BAL   R7,RDCHECK            AND CHECK IT FOR COMPLETION        28140021
*                                                                       28160021
         ST    R9,CMRDECPT         STORE IT AS THE CURRENT DECB         28180021
         L     R8,DECIOBPT      GET THE IOB ADDRESS FROM THE DECB       28200021
         LH    R5,DCBBLKSI         GET BLKSIZE FROM THE DCB             28220021
         SH    R5,14(R8)          SUBTRACT OFF RESIDUAL COUNT           28240021
         STH   R5,DECLNGTH             AND STORE INTO THE DECB          28260021
*                                                                       28280021
         L     R2,DECAREA          PICK UP BUFFER ADDRESS FROM DECB     28300021
*                                                                       28320021
RDFIXFIN ST    R2,CMGETREC         STORE NEW RECORD POINTER INTO COMMUN 28340021
         B     RDRETURN              AND EXIT                           28360021
*                                                                       28380021
*            INCORE DATA SET -- ONE BLOCK ASSUMED                       28400021
*                                                                       28420021
RDINCORE L     R2,CMGETREC             GET ADR OF LAST RECORD           28440021
         TM    DCBRECFM,VARIABLE       IS THIS VARIABLE FORMAT          28460021
         BNO   FIXFORM                 NO, GOTO PROCESS FIXED FROMAT    28480021
*                                      VARIABLE LENGTH RECORDS          28500021
         LTR   R2,R2                   WAS THERE A LAST RECORD          28520021
         BNZ   VARINC1                 YES                              28540021
         L     R2,DCBRELAD             NO, PICK UP ADDRESS              28560021
         LA    R2,8(R2)                SKIPCNTRL WDS-1ST TIME ONLY      28580021
         B     RDFIXFIN                                                 28600021
VARINC1  LA    R3,4                    MOVE BACK TO                     28620021
         SR    R2,R3                   GET CONTROL WORD WITH LENGTH     28640021
         AH    R2,0(R2)                GET ADDRESS OF NEW RECORD        28660021
         LA    R2,3(R2)                ROUND UP                         28680021
         N     R2,FULMSK               TO FULLWORD                      28700021
         LR    R3,R2                                                    28720021
         S     R3,DCBRELAD             SUBTRACT BEGINNING OF DATA SET   28740021
         CH    R3,DCBBLKSI             ARE WE DONE                      28760021
         BL    VARINC2                 NO,SEND BACK THIS RECORD         28780021
COMMON   OI    CMIOFLGS,CQEOFB+CQEOCB  THRU WITH SYSLIN                 28800021
         NI    CMFLAG3,X'FF'-CQINCORE                                   28820021
         B     RDRETURN                                                 28840021
VARINC2  LA    R2,4(R2)                SKIP CONTRL WRD-NOT 1ST TIME     28860021
         B     RDFIXFIN                                                 28880021
*                                      FIXED    LENGTH RECORDS          28900021
FIXFORM  LTR   R2,R2                   WAS THERE A LAST RECORD          28920021
         BNZ   FIXINC1                                                  28940021
         L     R2,DCBRELAD             NO, PICK UP ADDRESS              28960021
         B     RDFIXFIN                                                 28980021
FIXINC1  LH    R3,DCBLRECL             GET RECORD LENGTH                29000021
         AR    R2,R3                   GET ADDRESS OF NEW RECORD        29020021
         LR    R3,R2                                                    29040021
         S     R3,DCBRELAD             SUBTRACT BEGINNING OF DATA SET   29060021
         CH    R3,DCBBLKSI             ARE WE DONE                      29080021
         BL    RDFIXFIN                NO,SEND THIS RECORD BACK         29100021
         B     COMMON                  THRU WITH SYSLIN                 29120021
*                                                                       29140021
*                                                                       29160021
*   A LOAD MODULE IS BEING PROCESSED -- TEST FOR TYPE OF READ REQUIRED  29180021
*                                                                       29200021
RDUNDEFN LTR   R0,R0                                                    29220021
         BZ    RDRLD               ZERO - READ RLD/CONTROL RECORD       29240021
         BP    RDTXT               POSITIVE - READ TEXT                 29260021
*                                                                       29280021
*   REGISTER 0 IS NEGATIVE --- READ TEXT AND RLD/CONTROL                29300021
*                                                                       29320021
         LPR   R0,R0               COMPLEMENT THE SIZE                  29340021
         L     R9,DECDECPT           PICK UP TXT DECB POINTER           29360021
         STH   R0,DECLNGTH             STORE TXT SIZE INTO DECB         29380021
         ST    R1,DECAREA              STORE TXT ADDRESS INTO DECB      29400021
         LR    R8,R9               SET READ LIMIT TO THIS DECB          29420021
         BAL   R7,RDREAD             AND GO READ TXT/RLD RECORDS        29440021
*                                                                       29460021
*   THE TEXT DECB MUST BE CHECKED FIRST                                 29480021
*                                                                       29500021
         LR    R9,R8               GET TEXT DECB POINTER                29520021
         BAL   R7,RDCHECK            AND CHECK IT FOR COMPLETION        29540021
         L     R9,DECDECPT         PICK UP POINTER TO NEXT DECB         29560021
         TM    CMIOFLGS,CQEOCB     DID END OF CONCATENATION OCCUR       29580021
         BZ    RDLSTCHK              NO - GO CHECK THE OTHER DECB       29600021
*                                                                       29620021
         OI    CMIOFLGS,CQEOFSB      YES - SET BIT TO INDICATE NO REC   29640021
         B     RDRETURN                AND RETURN                       29660021
*                                                                       29680021
*                                                                       29700021
*   REGISTER 0 IS POSITIVE --- READ A TEXT RECORD                       29720021
*                                                                       29740021
RDTXT    L     R9,DECDECPT         GET POINTER TO TEXT DECB             29760021
         STH   R0,DECLNGTH           STORE TXT SIZE INTO DECB           29780021
         ST    R1,DECAREA            STORE TXT ADDRESS INTO DECB        29800021
*                                                                       29820021
*   REGISTER 0 IS ZERO --- READ AN RLD/CONTROL RECORD                   29840021
*     (OR TEXT IF FALL THROUGH FROM ABOVE)                              29860021
*                                                                       29880021
RDRLD    L     R8,DECDECPT         SET READ LIMIT TO NEXT DECB          29900021
         BAL   R7,RDREAD             AND READ THIS DECB                 29920021
*                                                                       29940021
RDLSTCHK BAL   R7,RDCHECK          CHECK THE DECB FOR COMPLETION        29960021
*                                                                       29980021
RDRETURN L     R13,4(R13)          GET POINTER TO LAST SAVE AREA        30000021
         RETURN (14,12),T            AND RETURN                         30020021
         EJECT                                                          30040021
*********************************************************************** 30060021
*                                                                       30080021
*   COMMON READ AND CHECK ROUTINES                                      30100021
*                                                                       30120021
*     UPON ENTRY -- REGISTER 9 POINTS TO THE DECB TO READ OR CHECK      30140021
*                -- REGISTER 8 POINTS TO A DECB WHICH SHOULD NOT BE     30160021
*                 READ OTHER THAN FIRST                                 30180021
*                                                                       30200021
*     UPON EXIT FROM CHECK -- ALL REGISTERS (EXCEPT 14-15-0-1) ARE      30220021
*                           THE SAME AS WHEN ENTERED                    30240021
*                                                                       30260021
*     UPON EXIT FROM READ -- REGISTER 9 POINTS TO THE LAST DECB READ    30280021
*                          ALL OTHERS (EXCEPT 14-15-0-1) ARE THE SAME   30300021
*                          AS WHEN ENTERED                              30320021
*                                                                       30340021
*     EXIT IS VIA REGISTER 7                                            30360021
*                                                                       30380021
*********************************************************************** 30400021
         SPACE 3                                                        30420021
RDREAD   READ  (R9),SF,MF=E        READ DECB POINTED TO BY R9           30440021
         LA    R0,72                                                    30444021
         LR    R1,R13                                                   30448021
         SR    R1,R0              GET NEXT SAVE AREA IN CHAIN           30452021
         ST    R1,8(R13)          RESET FORWARD PTR                     30456021
         C     R8,DECDECPT           DOES LIMIT EQUAL NEXT DECB         30460021
         BCR   8,R7                    YES - RETURN                     30480021
*                                                                       30500021
         L     R9,DECDECPT             NO - GET NEXT DECB POINTER       30520021
         B     RDREAD                    AND GO READ IT                 30540021
*                                                                       30560021
*                                                                       30580021
RDCHECK  CHECK (R9)                CHECK DECB POINTED TO BY R9          30600021
         LA    R0,72                                                    30604021
         LR    R1,R13                                                   30608021
         SR    R1,R0              GET NEXT SAVE AREA IN CHAIN           30612021
         ST    R1,8(R13)          RESET FORWARD PTR                     30616021
         TM    CMIOFLGS,CQIOERR    ANY I/O ERRORS                       30620021
         BCR   8,R7                  NO - RETURN TO CALLER              30640021
         SPACE                                                          30660021
IOABORT  L     R13,4(R13)            YES - PICK UP PREVIOUS SAVE AREA   30680021
         C     R13,CMFSTSAV            IS THIS THE HIGHEST LEVEL        30700021
         BNE   IOABORT                   NO - GET PREVIOUS TO THIS      30720021
         SPACE                                                          30740021
         RETURN (14,12),T                YES - RETURN TO HIGHEST LEVEL  30760021
         EJECT                                                          30780021
*********************************************************************** 30800021
*                                                                       30820021
*   PRINT ROUTINE --- ALL OUTPUT TO THE SYSPRINT DATA-SET IS PROCESSED  30840021
*  THROUGH THIS ROUTINE                                                 30860021
*                                                                       30880021
*     NO PARAMETERS ARE PASSED OR RETURNED                              30900021
*                                                                       30920021
*     THE PRINT RECORD ADDRESS IS IN 'CMPUTREC'                         30940021
*       AN ASA CARRIAGE CONTROL CHARACTER IS INSERTED BEFORE PRINT.     30960021
*       THE PROPER CODE IS OBTAINED FROM THE 'PRTCNTRL' TABLE VIA       30980021
*       AN INDEX FOUND IN 'CMPRTCTL'.  THIS INDEX IS RESET TO SPACE 1   31000021
*       UNLESS CHANGED BEFORE THE NEXT PRINT.                           31020021
*       BEFORE RETURN, 'CMPUTREC' IS UPDATED TO POINT TO A NEW BUFFER.  31040021
*       THE NEW BUFFER IS BLANKED AND 'CMWTBFCT' IS ZEROED.             31060021
*                                                                       31080021
*     IF THE SYSPRINT DATA-SET IS NOT OPEN, A DIRECT RETURN IS MADE     31100021
*                                                                       31120021
*********************************************************************** 31140021
         SPACE 3                                                        31160021
         ENTRY HEWLPRNT                                                 31180021
         USING *,R15                                                    31200021
         SPACE                                                          31220021
HEWLPRNT B     14(0,15)           EXPAND                                31240021
         DC    AL1(8)                ENTRY POINT                        31260021
         DC    CL8'HEWLPRNT'       IDENTIFIER                           31280021
         SPACE                                                          31300021
         TM    CMSTATUS,CQPRTOPN   IS THE SYSPRINT DATA SET OPEN        31320021
         BO    PRNTOPEN              YES - GO PROCESS                   31340021
*                                                                       31360021
         SR    R15,R15               NO - SET RETURN CODE OK            31380021
         STH   R15,CMWTBFCT            ZERO BYTE COUNT FOR LIST         31400021
         BR    R14                       AND RETURN                     31420021
         SPACE 2                                                        31440021
PRNTOPEN SAVE  (14,12)             SAVE CALLERS REGISTERS               31460021
         L     R12,IOCABASE          LOAD CSECT BASE                    31480021
         DROP  R15                     DROP ENTRY POINT BASE            31500021
         USING HEWLIOCA,R12       AND IDENTIFY CSECT BASE               31520021
         L     R4,IOCABSE2      LOAD AND IDENTIFY                       31540021
         USING HEWLIOCA+4096,R4   SECOND BASE REGISTER                  31560021
*                                                                       31580021
         L     R13,8(R13)          LOAD POINTER TO NEXT SAVE AREA       31600021
*                                                                       31620021
         L     R10,CMWDCBPT        LOAD POINTER TO OUTPUT DCB           31640021
         L     R9,CMWDECPT         LOAD POINTER TO DECB CHAIN           31660021
         USING IHADCB,R10            IDENTIFY DCB BASE                  31680021
         USING DECB,R9               IDENTIFY DECB BASE                 31700021
         L     R3,CMPUTREC         LOAD POINTER TO LAST RECORD          31720021
         SPACE                                                          31740021
         SR    R7,R7               SET UP FOR                           31760021
         SR    R6,R6                 CARRIAGE CONTROL MAINTENANCE       31780021
         LH    R5,CMLNECNT         PICK UP CURRENT LINE-COUNT           31800021
         IC    R7,CMPRTCTL           GET INDEX FOR CONTROL CHARACTER    31820021
         IC    R6,PRTCNTRL+1(R7)       GET SPACE-COUNT                  31840021
         SR    R5,R6               SUBTRACT SPACE-COUNT FROM LINE-COUNT 31860021
         BP    PRNOEJCT              NO OVERFLOW IF POSITIVE            31880021
         SPACE                                                          31900021
         LA    R7,CTEJECT            OVERFLOW - GET EJECT INDEX         31920021
         LH    R5,CMMAXLNE           PICK UP MAXIMUM LINE-COUNT         31940021
PRNOEJCT IC    R6,PRTCNTRL(R7)     PICK UP CONTROL CHARACTER            31960021
         STH   R5,CMLNECNT         STORE CURRENT LINE-COUNT             31980021
         LA    R7,CTSPACE1           GET SPACE1 INDEX FOR RESET         32000021
         STC   R6,0(R3)            STORE CONTROL CHARACTER INTO BUFFER  32020021
         STC   R7,CMPRTCTL           STORE RESET INDEX FOR NEXT LINE    32040021
         SPACE                                                          32060021
         AH    R3,DCBLRECL           ADD RECORD LENGTH TO IT            32080021
         L     R2,DECAREA          LOAD BUFFER POINTER                  32100021
         AH    R2,DCBBLKSI           ADD BLOCKSIZE TO IT                32120021
         CR    R2,R3               WILL ANOTHER RECORD FIT IN THIS BLK  32140021
         BH    PRNOWRTE              YES - BRANCH AROUND WRITE          32160021
*                                                                       32180021
*   THIS BLOCK MUST BE WRITTEN                                          32200021
*                                                                       32220021
         BAL   R7,WTWRITE            NO - WRITE THIS BLOCK              32240021
*                                                                       32260021
         L     R9,DECDECPT         PICK UP POINTER TO NEXT DECB         32280021
         BAL   R7,WTCHECK            AND CHECK IT FOR COMPLETION        32300021
*                                                                       32320021
PRNOCHK  L     R3,DECAREA          GET POINTER TO BUFFER                32340021
         ST    R9,CMWDECPT         STORE POINTER TO NEW DECB            32360021
*                                                                       32380021
PRNOWRTE ST    R3,CMPUTREC         STORE NEW RECORD POINTER             32400021
*                                                                       32420021
         LH    R15,CMWLRECL       GET BUFFER LENGTH                     32440021
         BCTR  R15,0              DECREMENT FOR                         32460021
         BCTR  R15,0                    EXECUTE                         32480021
         MVI   0(R3),C' '         BLANK THE                             32500021
         EX    R15,PRCLREX            BUFFER                            32520021
*                                                                       32540021
         SR    R15,R15             ASSUME EVERYTHING OK                 32560021
         STH   R15,CMWTBFCT          ZERO BYTE COUNT FOR LIST           32580021
         L     R13,4(R13)          GET POINTER TO CALLERS SAVE AREA     32600021
         RETURN (14,12),T                                               32620021
PRCLREX  MVC   1(0,R3),0(R3)      CLEARS THE BUFFER                     32640021
         SPACE 3                                                        32660021
*   STANDARD LINKAGE TO WRITE AND CHECK ROUTINES PLUS 'WRITE FLAG'      32680021
*   MAINTENANCE                                                         32700021
         SPACE 2                                                        32720021
WTWRITE  MVI   DECDECPT,WRTFLG     SET WRITE FLAG IN DECB               32740021
         WRITE (R9),SF,MF=E          ISSUE THE WRITE                    32760021
         LA    R0,72                                                    32764021
         LR    R1,R13                                                   32768021
         SR    R1,R0              GET NEXT SAVE AREA IN CHAIN           32772021
         ST    R1,8(R13)          RESET FORWARD PTR                     32776021
         BR    R7                      AND RETURN                       32780021
         SPACE 2                                                        32800021
WTCHECK  LA    R9,0(R9)            INSURE HIGH ORDER BYTE CLEAR         32820021
         TM    DECDECPT,WRTFLG     HAS THIS DECB BEEN WRITTEN           32840021
         BCR   8,R7                  NO - NO CHECK REQUIRED             32860021
         CHECK (R9)                  YES - CHECK FOR COMPLETION         32880021
         LA    R0,72                                                    32884021
         LR    R1,R13                                                   32888021
         SR    R1,R0              GET NEXT SAVE AREA IN CHAIN           32892021
         ST    R1,8(R13)          RESET FORWARD PTR                     32896021
         NI    DECDECPT,X'FF'-WRTFLG   TURN OFF THE WRITE FLAG          32900021
         BR    R7                        AND RETURN                     32920021
         EJECT                                                          32940021
**********************************************************************  32960021
*                                                                     * 32980021
*    SYSTERM PRINT AND OPEN ROUTINE                                   * 33000021
*                                                                     * 33020021
*              NO PARAMETERS ARE PASSED OR RETURNED.                  * 33040021
*              THE DCB IS POINTED TO BY CMTDCBPT.                     * 33060021
*              THE RECORD TO BE PRINTED IS POINTED TO BY              * 33080021
*                  CMTRMREC.  BEFORE RETURN THIS IS UPDATED TO        * 33100021
*                  POINT TO THE OTHER BUFFER, WHICH IS BLANKED.       * 33120021
*              IF SYSTERM WON'T OPEN, THE TERM OPTION IS SET OFF AND  * 33140021
*                  RETURN IS MADE                                     * 33160021
*                                                                     * 33180021
**********************************************************************  33200021
         SPACE 4                                                        33220021
         ENTRY HEWTERM                                                  33240021
         USING *,R15                                                    33260021
HEWTERM  SAVE  (14,12)            SAVE REGISTERS                        33280021
         L     R12,IOCABASE        SET UP BASE REGISTER                 33300021
         DROP  R15                                                      33320021
         USING HEWLIOCA,R12                                             33340021
         L     R4,IOCABSE2         SECOND BASE REGISTER                 33360021
         USING HEWLIOCA+4096,R4                                         33380021
         L     R13,8(R13)          SAVE AREA                            33400021
         L     R8,CMTRMREC         GET BUFFER POINTER                   33420021
         L     R10,CMTDCBPT        GET DCB POINTER                      33440021
         USING IHADCB,R10                                               33460021
         TM    CMFLAG4,CQTRMOPN    IS IT OPEN                           33480021
         BO    TRM3                 YES.                                33500021
*                                                                       33520021
*              OPEN SYSTERM                                             33540021
*                                                                       33560021
         MVC   IHADCB(DCBSIZE),MODELDCB  MOVE IN DCB MODEL              33580021
         MVC   DCBDDNAM(8),CMTERMDD  MOVE IN DDNAME                     33600021
         MVC   DCBDSORG(2),DSORGPS  SET DCB SEQUENTION AND              33620021
         MVC   DCBMACR(2),MACRWRTE         OUTPUT                       33640021
         O     R10,OPENOUT         OR OPEN BIT INTO LIST                33660021
         ST    R10,CMIOLST1        STORE ADDRESS OF DCB                 33680021
         OI    CMIOLST1,X'80'      SET LIST DELIMITER                   33700021
         OPEN  MF=(E,CMIOLST1)     OPEN IT                              33720021
         TM    DCBOFLGS,DCBOPEN    DID IT OPEN OK                       33740021
         BO    TRMOPN              YES.                                 33760021
         NI    CMPRMFLG,X'FF'-CQTERM NO. SET OFF TERM FLAG       YM3064 33780001
TRMRET   L     R13,4(R13)          RESTORE REGISTER 13                  33800021
         RETURN (14,12),T          AND RETURN                           33820021
*                                                                       33830000
*     THESE VCONS MUST BE WITHIN FIRST 4K OF CSECT.                     33832000
*                                                                       33834000
IOCABASE DC    A(HEWLIOCA)        CSECT BASE ADDRESS                    33836000
IOCABSE2 DC    A(HEWLIOCA+4096)  SECOND BASE REGISTER CONTENTS          33838000
*                                                                       33840021
*              ALLOCATE SYSTERM BUFFERS AND DECBS                       33860021
*                                                                       33880021
TRMOPN   OI    CMFLAG4,CQTRMOPN    SET ON TERM OPEN FLAG                33900021
         LR    R9,R8               BUFFER1 POINTER IN R8 AND R9         33920021
         LA    R9,TRMBUFLN(R9)     DECB1 POINTER IN R9                  33940021
         USING DECB,R9                                                  33960021
         XC    DECB(DECBSIZE-4),DECB   CLEAR IT OUT                     33980021
         ST    R10,DECDCBAD   STORE DCB ADDRESS                         34000021
         ST    R8,DECAREA          STORE BUFFER ADDRESS                 34020021
         LR    R6,R8                                                    34040021
         LA    R6,2*TRMBUFLN+DECBSIZE(R6)  GET OTHER DECB POINTER       34060021
         ST    R6,DECDECPT         STORE IT                             34080021
         USING DECB,R6                                                  34100021
         MVC   DECB(DECBSIZE-4),0(R9)  INITIALIZE DECB                  34120021
         ST    R9,DECDECPT         STORE DECB POINTER                   34140021
         LA    R9,DECBSIZE(R9)                                          34160021
         ST    R9,DECAREA          SOTRE BUFFER ADDR                    34180021
*                                                                       34200021
*                                  WRITE SYSTERM                        34220021
*                                                                       34240021
         USING DECB,R9                                                  34260021
TRM3     LR    R9,R8               GET BUFFER POINTER                   34280021
         LA    R9,TRMBUFLN(R9)     GET DECB POINTER                     34300021
         BAL   R7,WTWRITE          WRITE BUFFER                         34320021
         L     R9,DECDECPT         CHECK OTHER DECB                     34340021
         BAL   R7,WTCHECK                                               34360021
         L     R3,DECAREA          STORE POINTER TO NEW BUFFER          34380021
         ST    R3,CMTRMREC         IN COMMUNICATIONS AREA               34400021
         MVI   0(R3),C' '          CLEAN IT OUT                         34420021
         MVC   1(TRMRECSZ-1,R3),0(R3)                                   34440021
         B     TRMRET                                                   34460021
         EJECT                                                          34580021
*********************************************************************** 34600021
*                                                                     * 34620021
*   DCB EXIT ROUTINE --- THIS ROUTINE GAINS CONTROL WHEN ANY DCB        34640021
*  IS OPENED AND WHEN CONCATENATION TAKES PLACE ON SYSLIN               34660021
*                                                                       34680021
*********************************************************************** 34700021
         SPACE 2                                                        34720021
DCBEXIT  DS    0F                  DCB EXIT ADDRESS                     34740021
         DC    X'85'                                                    34760021
         DC    AL3(OPENEXIT)                                            34780021
         SPACE 2                                                        34800021
OPENEXIT EQU   *                                                        34805021
         LA    R2,72                                                    34810021
         LR    R3,R13                  PRESENT PTR TO SAVE AREA         34815021
         SR    R3,R2                   PICK UP NEW PTR                  34820021
         ST    R3,8(R13)               RESET  FORWARD PTR               34825021
         L     R13,8(R13)              RESET R13                        34830021
         SAVE  (14,12)               SAVE REGISTERS                     34840021
         L     R13,8(R13)          PICK UP NEXT SAVE FOR ERROR PRINT    34860021
         SPACE                                                          34880021
         LA    R10,0(R1)           MOVE DCB POINTER AND CLEAR TOP BYTE  34900021
         USING IHADCB,R10            IDENTIFY IT                        34920021
         SPACE                                                          34940021
         L     R9,CMERLIST         GET POINTER TO ERROR MSG LIST        34960021
         OI    CMSTATUS,CQRETURN     AND SET RETURN REQ FROM ERROR      34980021
*                                                                       35000021
         C     R10,CMWDCBPT        IS THIS THE SYSPRINT DCB             35020021
         BE    EXPRINT               YES - ASSUME FIXED                 35040021
         C     R10,CMTDCBPT        IS IT SYSTERM                        35060021
         BE    EXTERM              YES. BRANCH                          35080021
*                                                                       35100021
         OI    CMIOFLGS,CQEOCB     SET END OF CONCATENATION ON INPUT    35120021
         TM    CMLIBFLG,CQAUTOC    IS THE AUTO-CALL FLAG ON             35140021
         LA    R1,CMLINDD                    POINT TO SYSLIN DDNAME     35160021
         BZ    EXLIN                 NO - IT'S SYSLIN                   35180021
         LA    R1,CMLIBDD            YES - IT'S SYSLIB                  35200021
         SPACE                                                          35220021
EXLIN    TM    DCBRECFM,UNDEFINE   IS RECFM UNDEFINED                   35240021
         BO    EXUNDEF               YES - PROCESS FOR LOAD MODULE      35260021
*                                                                       35280021
         TM    DCBRECFM,FIXED      IS RECFM FIXED                       35300021
         BO    EXINFIX               YES - PROCESS FIXED                35320021
*                                                                       35340021
         TM    DCBRECFM,VARIABLE   IS RECFM VARIABLE                    35360021
         BZ    EXINFIX               NO - ASSUME FIXED                  35380021
*                                                                       35400021
*   AN INPUT DATA SET HAS VARIABLE RECORD FORMAT -- TERMINAL ERROR      35420021
*                                                                       35440021
         LA    R0,ERIOUT3          LOAD ERROR CODE                      35460021
         BAL   R8,EXMSGPRT           GO LOG THE MESSAGE                 35480021
         OI    CMIOFLGS,CQIOERR        SET I/O ERROR FLAG               35500021
         B     EXRETURN                  AND RETURN                     35520021
*                                                                       35540021
*                                                                       35560021
EXPRINT  MVI   DCBRECFM,FBSA       FORCE RECFM=FBSA AND                 35580021
         LH    R5,CMWLRECL         R5 = LOGICAL RECORD LENGTH           35600021
         DEVTYPE CMPRNTDD,CMXDBLWD     DEVTYPE MACRO FOR PRNT   ZA01334 35610000
         LTR   R15,R15                 TEST FOR SUCCESS         ZA01334 35612000
         BNZ   NOPRINT                 IF NOT,GO GIVE MESSAGE   ZA01334 35614000
         TM    CMXDBLWD+2,X'A0'        TEST FOR UNIT RECORD     ZA01334 35616000
         BM    BLKOK                   NOT UNIT RECORD          ZA01334 35618000
         STH   R5,DCBBLKSI             SET BLOCKSIZE=LRECL      ZA01334 35618400
BLKOK    EQU   *                                                ZA01334 35618800
         LA    R1,CMPRNTDD             POINT TO SYSPRINT DDNAME         35620021
         B     EXLRECL             GO CHECK BUFNO                       35640021
NOPRINT  EQU   *                                                ZA01334 35650000
         NI    DCBOFLGS,X'EF'          TURN OFF OPEN FLAG       ZA01334 35652000
         B     EXFINISH                BRANCH TO FINISH         ZA01334 35654000
         SPACE                                                          35660021
EXINFIX  OI    DCBRECFM,FB         SET FB (S MAY ALSO BE PRESENT)       35680021
         NI    DCBRECFM,X'FF'-STANDARD  TURN OFF STANDARD               35700021
         LH    R5,DCBLRECL      PICK UP LRECL                           35720021
         LTR   R5,R5              IS IT DEFINED                         35740021
         BNZ   EXFIXED                 YES - LEAVE IT ALONE             35760021
         SPACE                                                          35780021
         LA    R5,80                NO - DEFAULT TO 80                  35800021
EXLRECL  STH   R5,DCBLRECL      STORE LRECL                             35820021
         SPACE                                                          35840021
EXFIXED  SR    R2,R2               PICK UP NUMBER                       35860021
         IC    R2,DCBBUFNO           OF BUFFERS                         35880021
         LA    R3,2                IS IT EQUAL TO                       35900021
         CR    R2,R3                 OR GREATER THAN 2                  35920021
         BH    EXNCP                   YES - ITS OK                     35940021
*                                                                       35960021
         LR    R2,R3                   NO - FORCE TO 2                  35980021
*                                                                       36000021
EXNCP    STC   R2,DCBNCP           FORCE NCP TO BUFNO                   36020021
*                                                                       36040021
         LH    R7,DCBBLKSI           PICK UP BLKSIZE                    36060021
         LTR   R7,R7                   IS IT DEFINED                    36080021
         BNZ   EXTRNKCK                  YES - CHECK IF MULTIPLE OF REC 36100021
*                                                                       36120021
         STH   R5,DCBBLKSI          NO - DEFAULT TO LRECL               36140021
         B     EXFINISH                    AND GO FINISH UP             36160021
*                                                                       36180021
EXTRNKCK SR    R6,R6               DIVIDE BLKSIZE                       36200021
         DR    R6,R5              BY LRECL                              36220021
         LTR   R6,R6               IS THE REMAINDER ZERO                36240021
         BZ    EXFINISH              YES - ALL OK                       36260021
*                                                                       36280021
         LA    R7,1(R7)              NO - ROUND UP TO                   36300021
         MR    R6,R5              MEXT HIGHEST MULTIPLE                 36320021
         STH   R7,DCBBLKSI               AND STORE INTO DCB             36340021
EXERR    LA    R0,ERINPT1          LOG ERROR                            36360021
         BAL   R8,EXMSGPRT             'INVALID BLKSIZE'                36380021
         B     EXFINISH            GO FINISH UP                         36400021
*                                                                       36420021
*                                                                       36440021
EXTERM   MVI   DCBRECFM,FSA        FORCE FIXED FORMAT                   36460021
         LA    R5,TRMRECSZ         GET RECORD SIZE                      36480021
         LA    R1,CMTERMDD                                              36500021
         STH   R5,DCBLRECL         FORCE RECORD SIZE                    36520021
         STH   R5,DCBBLKSI             FORCE BLOCKSIZE                  36540021
         MVI   DCBNCP,2            FORCE 2 BUFFERS                      36560021
         B     EXFINISH                GO TO FINISHING CODE             36580021
EXUNDEF  MVI   DCBNCP,2            FORCE NCP=2 FOR LOAD MODULES         36600021
*                                                                       36620021
*                                                                       36640021
EXFINISH EQU   *                                                        36660021
EXZERO   MVI   DCBBUFNO,X'00'          ZERO BUFNO IN DCB                36680021
EXRETURN NI    CMSTATUS,X'FF'-CQRETURN  TURN OFF RETURN REQ BIT         36700021
         L     R13,4(R13)                 LOAD PREV SAVE AREA POINTER   36720021
         LM    R14,R12,12(R13)     RELOAD REGISTERS                     36740021
         L     R13,4(R13)            LOAD PREV SAVE AREA POINTER        36760021
         BR    R14                       AND RETURN                     36780021
         SPACE 2                                                        36800021
EXMSGPRT TM    CMSTATUS,CQMSGSAV   SHOULD MESSAGE BE SAVED              36820021
         BZ    EXPRTMSG              NO - GO PRINT IT                   36840021
         SPACE                                                          36860021
         OI    CMSTATUS,CQOPNERR     YES - INDICATE ONE SAVED           36880021
         STM   R0,R1,0(R9)             SAVE INFO ABOUT MESSAGE          36900021
         BR    R8                            AND RETURN TO PROCESSING   36920021
         SPACE                                                          36940021
EXPRTMSG L     R15,ADRERROR        GET POINTER TO ERROR ROUTINE         36960021
         BALR  R14,R15               AND GO LOG THE ERROR               36980021
         BR    R8                  RETURN TO PROCESSING                 37000021
         SPACE 2                                                        37020021
EODAD    OI    CMIOFLGS,CQEOFB+CQEOCB   SET EOF AND EOC ON INPUT        37040021
         BR    R14                                                      37060021
         EJECT                                                          37080021
*********************************************************************** 37100021
*                                                                     * 37120021
*   SYNAD EXIT ROUTINE -- THIS ROUTINE GAINS CONTROL WHEN A           * 37140021
*  SYNCHRONOUS I/O ERROR OCCURRS.  IT PRINTS THE ERROR, ACCEPTS       * 37160021
*  THE ERROR AND RETURNS CONTROL.                                     * 37180021
*                                                                     * 37200021
*********************************************************************** 37220021
         SPACE 3                                                        37240021
SYNAD    EQU   *                                                        37248021
         LA    R0,72                                                    37256021
         LR    R5,R13                                                   37264021
         SR    R5,R0                   GET NEXT SAVE AREA IN CHAIN      37272021
         USING IHADCB,R10          IDENTIFY DCB                         37280021
         OI    CMSTATUS,CQRETURN     SET RETURN REQUEST FROM ERROR      37300021
         LA    R2,8                                                     37320021
         L     R3,DECIOBPT         GET THE RIGHT IOB POINTER            37340021
         L     R6,DCBIOBA         SAVE CONTENTS OF THIS SLOT            37360021
         SR    R3,R2                   DECRIMENT BY 8                   37380021
         ST    R3,DCBIOBA                AND STORE FOR SYNADAF          37400021
         TM    DCBDSORG,X'02'      IS DCB PARTITIONED ORGANIZATION      37420021
         BO    SYNBPAM               YES - GO AROUND                    37440021
         SPACE                                                          37460021
         SYNADAF ACSMETH=BSAM        NO - GIVE SYNAD MACRO FOR BSAM     37480021
         B     SYNSAVE                 AND GO PRINT ERROR               37500021
         SPACE                                                          37520021
SYNBPAM  SYNADAF ACSMETH=BPAM        GIVE SYNAD MACRO FOR BPAM          37540021
         SPACE                                                          37560021
SYNSAVE  ST    R5,8(R13)           INSERT THE SYNAD PROVIDED            37580021
         ST    R13,4(R5)             SAVE AREA INTO LOADER CHAIN        37600021
         SAVE  (14,12)             SAVE REGISTERS                       37620021
         LR    R13,R5              GET NEXT SAVE AREA                   37640021
         SPACE                                                          37660021
         SPACE                                                          37680021
         LA    R0,ERIOUT2          LOAD ERROR MESSAGE NUMBER            37700021
         LA    R1,59(R1)           ADDRESS OF SYNAD MESSAGE             37720021
         L     R15,ADRERROR             ADDRESS OF ERROR ROUTINE        37740021
         BALR  R14,R15                    AND GO LOG THE ERROR          37760021
         SPACE                                                          37780021
         L     R13,4(R13)          GET PREVIOUS SAVE AREA               37800021
         LM    14,12,12(13)          RELOAD REGISTERS                   37820021
         ST    R6,DCBIOBA       RESTORE IOB POINTER FOR DATA MGMT       37840021
         SPACE                                                          37860021
         SYNADRLS                      RELEASE SYNAD STORAGE            37880021
         SPACE                                                          37900021
         ST    R5,8(R13)           RE-CHAIN THE                         37920021
         ST    R13,4(R5)             LOADER SAVE AREAS                  37940021
         OI    CMIOFLGS,CQIOERR        IDENTIFY I/O ERROR               37960021
         BR    R14                     AND RETURN FOLLOWING CHECK       37980021
         EJECT                                                          38000021
PARMLIST EQU   *                                                        38020021
         SPACE                                                          38040021
NEGATE   EQU   *                                                        38060021
VPNOMAP  DC    C'NO'                                                    38080021
VPMAP    DC    C'MAP'                                                   38100021
VPNOLET  DC    C'NO'                                                    38120021
VPLET    DC    C'LET'                                                   38140021
VPNOCALL DC    C'NO'                                                    38160021
VPCALL   DC    C'CALL'                                                  38180021
VPNCAL   DC    C'NCAL'                                                  38200021
VPNORES  DC    C'NO'                                                    38220021
VPRES    DC    C'RES'                                                   38240021
VPNOPRNT DC    C'NO'                                                    38260021
VPPRINT  DC    C'PRINT'                                                 38280021
VPSIZE   DC    C'SIZE='                                                 38300021
VPEP     DC    C'EP='                                                   38320021
VPNAME   DC    C'NAME='                                                 38340021
VPTERM   DC    C'TERM'                                                  38360021
VPNOTERM DC    C'NOTERM'                                                38380021
         EJECT                                                          38400021
ORINDEX  EQU   ORPARM-SETPARM                                           38420021
ANDINDEX EQU   ANDPARM-SETPARM                                          38440021
SIZEINDX EQU   SIZEPARM-SETPARM                                         38460021
EPINDEX  EQU   EPPARM-SETPARM                                           38480021
NAMEINDX EQU   NAMEPARM-SETPARM                                         38500021
CQFF     EQU   X'FF'                                                    38520021
         SPACE 2                                                        38540021
PRMMAP   EQU   VPMAP-PARMLIST      INDEX TO OPTION MAP                  38560021
PRMNOMAP EQU   VPNOMAP-PARMLIST    INDEX TO OPTION NOMAP                38580021
PRMLET   EQU   VPLET-PARMLIST      INDEX TO OPTION LET                  38600021
PRMNOLET EQU   VPNOLET-PARMLIST    INDEX TO OPTION NOLET                38620021
PRMCALL  EQU   VPCALL-PARMLIST     INDEX TO OPTION CALL                 38640021
PRMNOCAL EQU   VPNOCALL-PARMLIST   INDEX TO OPTION NOCALL               38660021
PRMPRINT EQU   VPPRINT-PARMLIST    INDEX TO OPTION PRINT                38680021
PRMNOPRT EQU   VPNOPRNT-PARMLIST   INDEX TO OPTION NOPRINT              38700021
PRMRES   EQU   VPRES-PARMLIST      INDEX TO OPTION RES                  38720021
PRMNORES EQU   VPNORES-PARMLIST    INDEX TO OPTION NORES                38740021
PRMEP    EQU   VPEP-PARMLIST       INDEX TO OPTION EP                   38760021
PRMNAME  EQU   VPNAME-PARMLIST         INDEX TO OPTION HNAME'           38780021
PRMSIZE  EQU   VPSIZE-PARMLIST     INDEX TO OPTION SIZE                 38800021
PRMNCAL  EQU   VPNCAL-PARMLIST     INDEX TO OPTION NCAL                 38820021
PRMTERM  EQU   VPTERM-PARMLIST    INDEX TO OPTION TERM                  38840021
PRMNOTRM EQU   VPNOTERM-PARMLIST  INDEX TO OPTION NOTERM                38860021
         EJECT                                                          38880021
*********************************************************************** 38900021
*                                                                     * 38920021
*   LIST USED FOR SCANNING VALID OPTIONS PASSED IN THE PARAMETER LIST * 38940021
*                                                                     * 38960021
*     EACH ENTRY IS 4 BYTES LONG                                      * 38980021
*       FIRST BYTE  -- INDEX FROM 'PARMLIST' TO VALID OPTION NAME     * 39000021
*       SECOND BYTE -- MASK USED FOR SETTING OR CLEARING OPTION FLAG  * 39020021
*       THIRD BYTE  -- LENGTH-1 OF OPTION NAME                        * 39040021
*       FORTH BYTE  -- INDEX INTO EXECUTE LIST FOR PERFORMING OPERAT'N* 39060021
*                                                                     * 39080021
*********************************************************************** 39100021
         SPACE 3                                                        39120021
SCANLIST DS    0F                                                       39140021
         DC    AL1(PRMMAP),AL1(CQMAP),AL1(2),AL1(ORINDEX)               39160021
         DC    AL1(PRMLET),AL1(CQLET),AL1(2),AL1(ORINDEX)               39180021
         DC    AL1(PRMSIZE),AL1(0),AL1(3),AL1(SIZEINDX)                 39200021
         DC    AL1(PRMEP),AL1(0),AL1(1),AL1(EPINDEX)                    39220021
         DC    AL1(PRMNAME),AL1(0),AL1(3),AL1(NAMEINDX)                 39240021
         DC    AL1(PRMNCAL),AL1(CQFF-CQCALL-CQRES),AL1(3),AL1(ANDINDEX) 39260021
         DC    AL1(PRMNOMAP),AL1(CQFF-CQMAP),AL1(4),AL1(ANDINDEX)       39280021
         DC   AL1(PRMNOCAL),AL1(CQFF-CQCALL-CQRES),AL1(5),AL1(ANDINDEX) 39300021
         DC    AL1(PRMNORES),AL1(CQFF-CQRES),AL1(4),AL1(ANDINDEX)       39320021
         DC    AL1(PRMNOPRT),AL1(CQFF-CQPRINT),AL1(6),AL1(ANDINDEX)     39340021
         DC    AL1(PRMPRINT),AL1(CQPRINT),AL1(4),AL1(ORINDEX)           39360021
         DC    AL1(PRMRES),AL1(CQRES+CQCALL),AL1(2),AL1(ORINDEX)        39380021
         DC    AL1(PRMCALL),AL1(CQCALL),AL1(3),AL1(ORINDEX)             39400021
         DC    AL1(PRMNOLET),AL1(CQFF-CQLET),AL1(4),AL1(ANDINDEX)       39420021
         DC    AL1(PRMTERM),AL1(CQTERM),AL1(3),AL1(ORINDEX)             39440021
         DC    AL1(PRMNOTRM),AL1(CQFF-CQTERM),AL1(5),AL1(ANDINDEX)      39460021
LISTEND  EQU   *                                                        39480021
SCANCTRL DC    A(SCANLIST),F'4',A(LISTEND-4)                            39500021
         EJECT                                                          39520021
*********************************************************************** 39540021
*                                                                     * 39560021
*   LIST USED FOR RECONSTRUCTING OPTIONS SPECIFIED                      39580021
*                                                                       39600021
*     EACH ENTRY IS 4 BYTES LONG                                        39620021
*        FIRST BYTE      -- MASK USED FOR TESTING IF OPTION PRESENT     39640021
*        SECOND BYTE     -- LENGTH-1 OF OPTION NAME                     39660021
*        THIRD AND FORTH -- INDEX FROM 'PARMLIST' TO OPTION NAME        39680021
*                                                                     * 39700021
*********************************************************************** 39720021
         SPACE 2                                                        39740021
OPUSELST DS    0F                                                       39760021
         DC    AL1(CQPRINT),AL1(4),AL2(PRMPRINT)                        39780021
         DC    AL1(CQMAP),AL1(2),AL2(PRMMAP)                            39800021
         DC    AL1(CQLET),AL1(2),AL2(PRMLET)                            39820021
         DC    AL1(CQCALL),AL1(3),AL2(PRMCALL)                          39840021
         DC    AL1(CQRES),AL1(2),AL2(PRMRES)                            39860021
         DC    AL1(CQTERM),AL1(3),AL2(PRMTERM)                          39880021
ENDOPUSE EQU   *                                                        39900021
         SPACE                                                          39920021
OPTCNTRL DC    A(OPUSELST),F'4',A(ENDOPUSE-4)                           39940021
         EJECT                                                          39960021
         SPACE 2                                                        39980021
*********************************************************************** 40000021
*                                                                     * 40020021
*   ASA CARRIAGE CONTROL CHARACTER DEFINITIONS                          40040021
*     THEY MUST REMAIN IN THE ORDER DEFINED IN THE 'CTPRTCTL'           40060021
*     DSECT EXPANDED WITH IEWLOCOM                                      40080021
*                                                                     * 40100021
*********************************************************************** 40120021
         SPACE 3                                                        40140021
PRTCNTRL DS    0F                                                       40160021
         SPACE                                                          40180021
         DC    C' ',AL1(1)         SPACE 1                              40200021
         DC    C'0',AL1(2)         SPACE 2                              40220021
         DC    C'-',AL1(3)         SPACE 3                              40240021
         DC    C'1',AL1(60)        EJECT                                40260021
         EJECT                                                          40280021
ADRERROR DC    V(HEWERROR)        ERROR ROUTINE ENTRY POINT             40300021
ADRBUFFR DC    A(HEWBUFFR)        ADDRESS OF BUFFER ALLOCATION          40320021
ADRPRIME DC    A(HEWPRIME)        ADDRESS OF OBJECT BUFFER PRIME        40340021
ADRPRNT  DC    A(HEWLPRNT)        PRINT ROUTINE ENTRY POINT             40360021
ADROMPRC DC    V(HEWLRELO)        ADDRESS OF OBJECT MODULE PROCESSOR    40380021
ADRLMPRC DC    V(HEWLODE)      ADDRESS OF LOAD MODULE PROCESSOR         40400021
ADRACALL DC    V(HEWACALL)        ADDRESS OF AUTO-CALL PROCESSOR        40420021
ADRABTMP DC    V(HEWBTMAP)        BIT MAP PROCESSOR ENTRY POINT         40440021
ADRCDE   DC    V(HEWLIDEN)        ADDRESS OF CDE CONSTRUCTOR            40460000
DFLTMIN  DC    A(MINREQ)           MINIMUM STORAGE REQUEST              40480021
DFLTNAME DC    C'**GO    '                                              40500021
DFLTTERM DC    C'SYSTERM '         DEFAULT DIAGNOSTIC DDNAME            40520021
         EXTRN HEWLDDEF                                                 40540021
DFLTBASE DC    A(HEWLDDEF)        DEFAULT OPTIONS CSECT                 40560021
         SPACE                                                          40580021
DUMMYDCB EQU   0                                                        40600021
OPENIN   OPEN  (DUMMYDCB,(INPUT,DISP)),MF=L                             40620021
OPENOUT  OPEN  (DUMMYDCB,(OUTPUT,DISP)),MF=L                            40640021
CLOSE    CLOSE (DUMMYDCB,DISP),MF=L                                     40660021
EXTR     EXTRACT   EXTR,'S',FIELDS=(TSO),MF=L                           40680000
TCBTSTSK EQU   X'80'               TIMESHARING FLAG IN TCBTSFLG FIELD   40700021
         SPACE                                                          40720021
DBLMASK  DS    0F                                                       40740021
         DC    X'00FFFFF8'         DOUBLE WORD MASK                     40760021
FULMSK   DS    0F                                                       40780021
         DC    X'00FFFFFC'               FULLWORD MASK                  40800021
ENTFLG2  DC    X'FF000000'                                              40820021
         SPACE                                                          40840021
DSORGPS  DC    BL2'0100000000000000'    PHISICAL SEQUENTIAL             40860021
DSORGPO  DC    BL2'0000001000000000'    PARTITIONED ORGANIZATION        40880021
MACRREAD DC    BL2'0010000000000000'    READ                            40900021
MACRWRTE DC    BL2'0000000000100000'    WRITE                           40920021
         SPACE                                                          40940021
LOADHEAD DC    C' VS LOADER   '                                  YM3465 40960001
HDGLNGTH EQU   *-LOADHEAD                                               40980021
OKOPTHDG DC    C'OPTIONS USED -'                                        41000021
OKOPTLNG EQU   *-OKOPTHDG                                               41020021
REJOPT   DC    C'OPTIONS REJECTED -'                                    41040021
REJOPTLG EQU   *-REJOPT                                                 41060021
MAPHEAD  DC    C'NAME  TYPE  ADDR'                                      41080021
MAPHDLNG EQU   *-MAPHEAD                                                41100021
ENTRYSZ  EQU   24                  SIZE OF MAP ENTRY                    41120021
         SPACE                                                          41140021
*                                                                       41160021
*              81 CHARACTER RECORD                                      41180021
*              THESE THREE FIELDS MOVED TO CMMAPLIN,CMWLRECL,CMMAXLST   41200021
*                 IF TSO IS OPERATING.                                  41220021
*                                                                       41240021
         DS    0H                                                       41260021
PRNT81   DC    AL2(LN81)           LENGTH OF MAP LINE                   41280021
LN81     EQU   3*ENTRYSZ           THREE ENTRIES PER LINE               41300021
         DC    H'81'               LENGTH OF RECORD                     41320021
         DC    H'60'                LENGTH OF INVALID OPTIONS           41340021
*                                                                       41360021
*                                  121 CHARACTER RECORD                 41380021
*              THESE THREE FIELDS MOVED TO CMMAPLIN,CMWLRECL,CMMAXLST   41400021
*                 IF TSO IS NOT OPERATING.                              41420021
*                                                                       41440021
PRNT121  DC    AL2(LN121)          LENGTH OF MAP LINE                   41460021
LN121    EQU   5*ENTRYSZ           FIVE ENTRIES PER LINE                41480021
         DC    H'121'              LENGTH OF RECORD                     41500021
         DC    H'100'              LENGTH OF INVALID OPTIONS            41520021
*                                                                       41540021
         SPACE                                                          41560021
DMSIZE   EQU   6144                INITMAIN REQUEST SIZE         A42698 41580000
MINREQ   EQU   2048                MINIMUM VC REQUEST SIZE              41600021
NUMSAVES EQU   9                   NUMBER OF SAVE AREAS ALLOCATED       41620021
TRMBUFLN EQU   88        LENGTH OF SYSTERM BUFFER (DBLWRDS)             41640021
TRMRECSZ EQU   81        LENGTH OF SYSTERM RECORD                       41660021
RLDSIZE  EQU   256                                                      41680021
FSA      EQU   B'10001100'         FIXED,STANDARD,ASA                   41700021
FBSA     EQU   B'10011100'         FIXED,BLOCKED,STANDARD,ASA           41720021
FB       EQU   B'10010000'         FIXED, BLOCKED                       41740021
STANDARD EQU   B'00001000'         STANDARD BLOCKS ONLY                 41760021
UNDEFINE EQU   X'C0'               UNDEFINED RECFM IN DCB               41780021
FIXED    EQU   X'80'               FIXED RECORD FORMAT IN DCB           41800021
VARIABLE EQU   X'40'               VARIABLE RECORD FORMAT IN DCB        41820021
CHAINED  EQU   X'20'               CHAINED SCHED IN OPTCD OF DCB        41840021
WRTFLG   EQU   X'80'               DECB WRITTEN BUT NOT CHECKED         41860021
DCBOPEN  EQU   X'10'               BIT SET IF OPEN WAS SUCCESSFUL       41880021
UNLKATRB EQU   X'08'               UNLIKE ATTRIBUTES BIT IN DCBOFLGS    41900021
         SPACE 2                                                        41920021
R0       EQU   0                                                        41940021
R1       EQU   1                                                        41960021
R2       EQU   2                                                        41980021
R3       EQU   3                                                        42000021
R4       EQU   4                                                        42020021
R5       EQU   5                                                        42040021
R6       EQU   6                                                        42060021
R7       EQU   7                                                        42080021
R8       EQU   8                                                        42100021
R9       EQU   9                                                        42120021
R10      EQU   10                                                       42140021
R11      EQU   11                                                       42160021
R12      EQU   12                                                       42180021
R13      EQU   13                                                       42200021
R14      EQU   14                                                       42220021
R15      EQU   15                                                       42240021
MAINTAIN DS    40F                 MAINTENANCE AREA                     42260021
         SPACE 2                                                        42280021
         EJECT                                                          42300021
         DS    0D                                                       42320021
MODELDCB DCB   DDNAME=SYSPRINT,EODAD=EODAD,EXLST=DCBEXIT,SYNAD=SYNAD,  X42340021
               DEVD=DA,DSORG=PS,MACRF=(W)                               42360021
         DS    0D                                                       42380021
DCBSIZE  EQU   *-MODELDCB                                               42400021
         EJECT                                                          42420021
         DCBD  DSORG=BS,DEVD=DA                                         42440021
         EJECT                                                          42460021
         HEWLDCOM                                                       42480021
         EJECT                                                          42500021
*********************************************************************** 42520021
*                                                                     * 42540021
*    DATA EVENT CONTROL BLOCK DEFINITION                              * 42560021
*                                                                     * 42580021
*      IF THE DECB IS CHANGED BY DATA MANAGEMENT, THIS DSECT MUST     * 42600021
*      BE CHANGED.                                                    * 42620021
*                                                                     * 42640021
*      ONE EXTRA WORD HAS BEEN ADDED AT THE END OF THE NORMAL DECB    * 42660021
*      FOR CONTROLLING MULTIPLE BUFFERS.                              * 42680021
*                                                                     * 42700021
*********************************************************************** 42720021
         SPACE 3                                                        42740021
DECB     DSECT                                                          42760021
         SPACE                                                          42780021
DECSDECB DC    F'0'                EVENT CONTROL BLOCK                  42800021
DECTYPE  DC    H'0'                I/O MACRO TYPE                       42820021
DECLNGTH DC    H'0'                LENGTH OF DATA                       42840021
DECDCBAD DC    A(0)                ADDRESS OF DCB                       42860021
DECAREA  DC    A(0)                ADDRESS OF BUFFER                    42880021
DECIOBPT DC    A(0)                ADDRESS OF IOB                       42900021
DECDECPT DC    A(0)                ADDRESS OF NEXT DECB                 42920021
DECBSIZE EQU   *-DECB                                                   42940021
         EJECT                                                          42960021
*********************************************************************** 42980021
*                                                                     * 43000021
*    DSECT OF 'IEWLDDEF' CSECT -- DEFAULT OPTIONS DEFINITION          * 43020021
*                                                                     * 43040021
*        IF THE SYSGEN MACRO 'SGIEW050' IS ALTERED TO CAUSE A CHANGE  * 43060021
*        IN THE DISPLACEMENTS OF ANY OF THE FOLLOWING DEFINITIONS,    * 43080021
*        THIS DSECT MUST BE CORRESPONDINGLY ALTERED.                  * 43100021
*                                                                     * 43120021
*********************************************************************** 43140021
         SPACE 3                                                        43160021
DEFAULTS DSECT                                                          43180021
         SPACE                                                          43200021
DFLTDDNM EQU   *                                                        43220021
DFLTPRNT DC    CL8'SYSPRINT'       DIAGNOSTIC MESSAGE DATA SET          43240021
DFLTLIN  DC    CL8'SYSLIN'         PRIMARY INPUT DATA SET               43260021
DFLTLIB  DC    CL8'SYSLIB'         AUTO-CALL LIBRARY DATA SET           43280021
         SPACE                                                          43300021
DFLTSIZE DC    F'102400'           DEFAULT SIZE                         43320021
         SPACE                                                          43340021
DFLTFLAG DC    B'00010101'         SELF-DEFINING KEYWORD OPTIONS        43360021
DFLTXTRA DC    B'00000000'         RESERVED FOR EXPANSION               43380021
         EJECT                                                          43400021
*    DSECT FOR INITIAL MAIN STORAGE (UNCONDITIONAL) REQUEST             43420021
         SPACE                                                          43440021
INITMAIN DSECT                                                          43460021
INITSAVE DS    18F                 INITIAL SAVE AREA                    43480021
         SPACE                                                          43500021
*    EVERYTHING IN THE BOX MUST REMAIN TOGETHER AND IN THE SAME ORDER.  43520021
*      IT IS MOVED TO 'CMINITCM' IN ONE PIECE.  IF IT IS CHANGED, THE   43540021
*      CORRESPONDING AREA IN THE COMMUNICATION DSECT MUST BE CHANGED.   43560021
         SPACE                                                          43580021
INITCMCM EQU   *           ******************************************** 43600021
INITMADR DS    F           *  VC MAIN STORAGE ADDRESS                 * 43620021
INITMSIZ DS    F           *  VC MAIN STORAGE SIZE                    * 43640021
INITDDNM EQU   *           *                                          * 43660021
INITPRNT DS    8C          *  DDNAME FOR PRINT                        * 43680021
INITLIN  DS    8C          *  DDNAME FOR THE PRIMARY INPUT            * 43700021
INITLIB  DS    8C          *  DDNAME FOR THE LIBRARY                  * 43720021
INITTERM DS    8C          *  DDNAME FOR DIAGNOSTICS                  * 43740021
INITNAME DS    8C          *  PARAMETER LIST ENTRY POINT NAME         * 43760021
INITPGMN DS    8C          *  PROGRAM NAME                            * 43780021
INLINDCB DS    F           *  ADDR OF PASSED SYSLIN DCB               * 43800021
INLIBDCB DS    F           *  ADDR OF PASSED SYSLIB DCB               * 43820021
INITPARM DS    H           *  PARAMETER FLAGS AND ERROR FLAGS         * 43840021
INFLAG3  DS    X           *  ASSORTED FLAGS                          * 43860021
INFLAG4  DS    X           *  ASSORTED FLAGS                          * 43880021
INITCMSZ EQU   *-INITCMCM  ******************************************** 43900021
INITSPIE DS    F              POINTER TO PREVIOUS SPIE FOR 'SIZE=' SCAN 43920021
INITSCAN DS    F              SCAN POINTER SAVE AREA FOR 'SIZE=' SPIE   43940021
INITDUM  DS    F                   SAVE WORD FOR REGISTER DURING SIZE   43960021
*                                             PROCESSING                43980021
INITREJL DS    F                   END OF REJECTED OPTIONS LIST         44000021
INITRMIN DS    F              MINIMUM SIZE REQUEST FOR VC               44020021
INITRMAX DS    F              MAXIMUM SIZE REQUEST FOR VC               44040021
INITGTML GETMAIN MF=L         LIST FOR VC GETMAIN                       44060021
INITEXTR EXTRACT INITEXAD,'S',FIELDS=(TSO),MF=L  LIST FOR EXTRACT       44080000
EXTRLEN  EQU   *-INITEXTR                                               44100000
INITEXAD DS    F                   EXTRACT WILL PUT ADDRESS OF TSO      44120021
*                                       FIELD HERE                      44140021
INITDBLW DS    0D                  DOUBLE WORD FOR                      44160021
         DS    7X                    PARM 'SIZE' CONVERT                44180021
INITSIGN DS    X                   SIGN POSITION FOR PACKED FORMAT      44200021
INITRTAB DS    32D                                                      44220021
INITREJP EQU   *                   REJECTED OPTIONS BUFFER              44240021
INITSIZE EQU   *-INITMAIN                                               44260021
         END   HEWLIOCA                                                 64260021
./  ADD  SSI=62510182,NAME=HEWLDLIB
*TITLE 'HEWLLIBR' - LIBRARY PROCESSOR                                 * 00040021
*STATUS-CHANGE LEVEL 20                                                 00060021
*        INCREMENTAL 288 - W-CON - ADDED                        INC288  00080021
*        TSO CHANGES FOR IDENTIFY AND INCORE DATA SET                 * 00100021
*                                                               YM05556 00110001
*                                                               YM05562 00112001
*                                                               YM05575 00114001
* I063800,I112000                                               ZA01335 00116002
* C125200,C127400  PRINT UNPRINTABLE CHAR                      @Z12914* 00118037
*FUNCTION/OPERATION:                                                  * 00120021
*        1)HEWACALL-TRYS TO RESOLVE EXTERNAL REFERENCES IN THE CESD,  * 00140021
*              WHICH ARE STILL UNRESOLVED AT THE END OF THE PRIMARY   * 00160021
*              INPUT STREAM.  IT CALLS FROM PARTITIONED DATA SETS,    * 00180021
*              (OR OPTIONALLY FROM THE LINK PACK AREA)                * 00200021
*              MEMBERS WHOSE NAMES ARE EXTERNAL REFERENCES IN THE     * 00220021
*              CESD.  IT DETERMINES WHETHER THE CALLED MEMBERS ARE    * 00240021
*              OBJECT MODULES OR LOAD MODULES. THEN PASSES CONTROL    * 00260021
*              TO THE APPROPRIATE PROCESSOR.                          * 00280021
*                                                                     * 00300021
*        2)HEWLODE-DETERMINES RECORD TYPE,THEN PASSES CONTROL TO THE  * 00320021
*              APPROPRIATE ROUTINE FOR RECORD PROCESSING.             * 00340021
*                                                                     * 00360021
*        3)LMTXT-PROCESSES LOAD MODULE TEXT.                          * 00380021
*                                                                     * 00400021
*        4)COMMON-ASSIGNS ADDRESSES TO COMMON.                        * 00420021
*                                                                     * 00440021
*        5)PSEUDOR-ASSIGNS DISPLACEMENTS TO PSEUDO REGISTERS          * 00460021
*                                                                     * 00480021
*        6)FINISHUP-PRINTS FINISHING MESSAGES-UNRESOLVED ER'S,        * 00500021
*              TOTAL LENGTH,ENTRY ADDRESS. ASSIGNS ENTRY POINT        * 00520021
*                                                                     * 00540021
*        7)HEWERROR-FORMATS AND PRINTS ERROR MESSAGES. LOGS           * 00560021
*              ERROR IN BIT MAP.                                      * 00580021
*                                                                     * 00600021
*        8)HEWBTMAP-PRINTS THE DIAGNOSTIC MESSAGE DIRECTORY           * 00620021
*              FOR ERRORS LOGGED IN THE BIT MAP                       * 00640021
*                                                                     * 00660021
*ENTRY POINTS:                                                        * 00680021
*        1)HEWACALL-FOR AUTOMATIC LIBRARY CALL PROCESSING             * 00700021
*        2)HEWLODE-FOR LOAD MODULE PROCESSING                         * 00720021
*        3)HEWERROR-FOR PRINTING AND LOGGING ERROR MESSAGES           * 00740021
*        4)HEWBTMAP-FOR PRINTING DIAGNOSTIC MESSAGES FOR ERRORS       * 00760021
*              LOGGED IN BIT MAP                                      * 00780021
*                                                                     * 00800021
*INPUT:  ALL ROUTINES EXPECT                                          * 00820021
*              #13-ADDRESS OF SAVE AREA                               * 00840021
*              #14-RETURN ADDRESS                                     * 00860021
*              #15-ADDRESS OF THEIR ENTRY POINT                       * 00880021
*              #11-ADDRESS OF COMMUNICATION AREA                      * 00900021
*        IN ADDITION-IEWERROR EXPECTS                                 * 00920021
*              #0-ERROR CODE                                          * 00940021
*              #1-POINTER TO QUALIFYINY DATA(IF ANY)                  * 00960021
*EXTERNAL ROUTINES:                                                   * 00980021
*        HEWOPNLB-OPEN SYSLIB                                         * 01000021
*        HEWLRLD-PROCESSES RLD'S                                      * 01020021
*        HEWLREAD-READ CONTROL AND TEXT RECORDS                       * 01040021
*        HEWLESD-PROCESSES CESD                                       * 01060021
*        HEWLEND-PROCESSES END OF MODULE                              * 01080021
*        TRANSID-TRANSLATES ESDID TO TRANSLATION TABLE ENTRY ADDRESS  * 01100021
*        HEWLMAP-CREATES MAP PRINTOUT                                 * 01120021
*        HEWLPRNT-PRINTS MESSAGES                                     * 01140021
*        HEWLERTN-RELOCATES RLD'S                                     * 01160021
*        HEWPRIME-PRIMES BUFFERS                                      * 01180021
*        HEWLRELO-PROCESS OBJECT MODULES                              * 01200021
*        HEWLCNVT-CONVERTS BINARY QUANTITIES TO PRINTABLE HEX         * 01220021
*        HEWTERM -PRINTS DIAGNOSTICS ON SYSTERM                       * 01230000
*EXITS-NORMAL:TO CALLER       L    13,4(13)                           * 01260021
*                             SR   15,15                              * 01280021
*                             RETURN (14,12),T,RC=(15)                * 01300021
*                                                                     * 01320021
*     -ERROR: TO HEWERROR     LA    0,ERCODE                          * 01340021
*                             L    15,V(HEWERROR)                     * 01360021
*                             BALR 14,15                              * 01380021
*                                                                     * 01400021
*TABLES/WORKAREAS:REFER TO LOADER PLM FOR DETAILED DESCRIPTION        * 01420021
*        1)CESD                                                       * 01440021
*        2)TRANSLATION TABLE                                          * 01460021
*        3)BLDL LIST                                                  * 01480021
*        4)COMMUNICATIONS AREA (HEWLDCOM)                             * 01500021
*ATTRIBUTES:READ ONLY,REUSABLE,REENTRANT                              * 01520021
*NOTES: NONE                                                          * 01540021
*                                                                     * 01560021
*********************************************************************** 01580021
         EJECT                                                          01600021
HEWLLIBR CSECT                                                          01620021
*C059500                                                         S21016 01640021
*C232200                                                         M4115  01644000
*                                                               YA00126 01654001
*                                                               YA00323 01656001
*                                                               YA00398 01658001
*I063900-063920,A112100-112140                                  ZA01335 01658402
*A049131    SEE FIX FOR OY07896                                 YA07896 01658837
HEWACALL EQU   *                                                        01660021
         ENTRY HEWACALL                                                 01680021
         ENTRY HEWLODE                                                  01700021
CQFF     EQU   X'FF'                                                    01720021
EMVT     EQU   X'10'                    MVT SYSTEM                      01740021
EMFT     EQU   X'20'                    MFT SYSTEM                      01760021
ECESD    EQU   X'20'                    CESD RECORD                     01780021
ESYMSCAT EQU   X'D0'                    SYM, IDR, OR SCAT/TRANS  S21016 01800021
ETXT     EQU   X'01'                    TEXT RECORD                     01820021
ERLD     EQU   X'02'                    RLD RECORD                      01840021
ELAST    EQU   X'08'                    END OF MODULE                   01860021
ELTXT    EQU   X'08'                    TXT REC LAST IN MODULE          01880021
ELENGTH  EQU   2                        DISPLACEMENT OF LENGTH          01900021
EIDLNG   EQU   4                        LENGTH OF ENTRY IN ID/LENGTH    01920021
ERLDFLG  EQU   X'0C'                    FLAG FOR RLD                    01940021
ERLDADDR EQU   4                        FLAG-ADDRESS                    01960021
EBLDLRC  EQU   X'08'                    RETURN CODE-BLDL ERROR          01980021
EBLDLTTR EQU   8                        TTR                             02000021
EBLDLDIS EQU   4                        SIZE OF BLDL LIST DISCRIPTION   02020021
EADRLENT EQU   4                        ENTRY SIZE IN ADDRESS LIST      02040021
EBLDLR   EQU   10                       R                               02060021
EBLDLSIZ EQU   20                       BYTES NEEDED FOR EACH BLDL      02080021
*                                       ENTRY                           02100021
EBLDLENT EQU   16                       SIZE OF ENTRY                   02120021
*                                       FIELD                           02140021
ESDNAME  EQU   4                        NAME                            02160021
ERTYPE   EQU   X'02'                                                    02180021
ESDRELCH EQU   12                       PTR TO RELOCATION CHAIN         02200021
ESDCHADR EQU   0                        CHAIN ADDRESS TO NEXT ENTRY     02220021
ESDCMCHN EQU   16                       PTR TO CHAINED CM ENTRY         02240021
ESDTYPE  EQU   12                      TYPE                             02260021
ESDLAA   EQU   12                      LINK EDIT ASSIGNED ADDRESS       02280021
ESDLNG   EQU   16                       LENGTH OF CONTROL SECTION       02300021
ESDRELOC EQU   16                       RELOCATION CONSTANT             02320021
ESDPRALN EQU   16                       ALIGNMENT VALUE                 02340021
ETTR     EQU   X'10'                    TTR RECEIVED BIT IN DESD        02360021
EBLDLATT EQU   X'20'                    BLDL ATTEMPTED BIT IN CESD      02380021
EDELETE  EQU   X'80'                    DELETE BIT IN CESD              02400021
ZERO     EQU   0                                                        02420021
ENCAL    EQU   X'08'                    NEVER CALL BIT IN CESD          02440021
WEAKCALL EQU   X'40'               W-CON BIT IN CESD             INC288 02460021
ECXDADR  EQU   4                                                        02480021
PARM     EQU   1                                                        02500021
WORKA    EQU   2                                                        02520021
WORKB    EQU   3                                                        02540021
CUM      EQU   4                                                        02560021
ID       EQU   5                                                        02580021
ADR      EQU   6                                                        02600021
LNG      EQU   7                                                        02620021
PTR      EQU   8                                                        02640021
CESD     EQU   9                                                        02660021
MAINT    EQU   10                                                       02680021
CMPTR    EQU   11                                                       02700021
BASE     EQU   12                                                       02720021
SAVEREG  EQU   13                                                       02740021
RETURN   EQU   14                                                       02760021
BRANCH   EQU   15                                                       02780021
R0       EQU   0                                                        02800021
R1       EQU   1                                                        02820021
R2       EQU   2                                                        02840021
R3       EQU   3                                                        02860021
R4       EQU   4                                                        02880021
R5       EQU   5                                                        02900021
R6       EQU   6                                                        02920021
R7       EQU   7                                                        02940021
R8       EQU   8                                                        02960021
R9       EQU   9                                                        02980021
R10      EQU   10                                                       03000021
R11      EQU   11                                                       03020021
R12      EQU   12                                                       03040021
R13      EQU   13                                                       03060021
R14      EQU   14                                                       03080021
R15      EQU   15                                                       03100021
TRMRECSZ EQU   81                  LENGTH OF SYSTERM RECORD             03120021
         USING *,15                                                     03140021
         SAVE  (14,12),T,*              SAVE CALLERS REGISTERS          03160021
         LR    BASE,15                  PUT BASE ADDR IN BASE REG       03180021
         DROP  15                                                       03200021
         USING HEWACALL,BASE       ESTABLISH BASE                       03220021
         USING ERCODES,0                                                03240021
         L     SAVEREG,8(SAVEREG)       NEW SAVE AREA ADDRESS           03260021
         USING HEWLDCOM,CMPTR      COMMUNICATION AREA                   03280021
         OI    CMLIBFLG,CQAUTOC         AUTOCALL IN PROCESS             03300021
         TM    CMPRMFLG,CQCALL          AUTOCALL                        03320021
         BZ    COMMON                   NO-ASSIGN ADDR TO COMMON        03340021
         L     CESD,CMERCHN             GET PTR TO ER CHAIN             03360021
         LTR   CESD,CESD                ER CHAIN EMPTY                  03380021
         BZ    COMMON                   YES-ASSIGN ADDR TO COMMON       03400021
         TM    CMPRMFLG,CQRES           LIBRARY RESIDENT IN LPA         03420021
         BZ    OPNLIB                   NO-OPEN SYSLIB                  03440021
*                                                                       03460021
*********************************************************************** 03480021
*                                                                       03500021
*              CHECK FOR VS1/VS2 SYSTEM                                 03520001
*                                                                       03540000
*********************************************************************** 03560021
*                                                                       03580021
         LA    ADR,16                   GET ADDR OF PTR TO CVT          03600021
         L     PTR,0(ADR)               GET ADDR OF CVT                 03620021
         USING CVTSECT,PTR                                              03640021
         TM    CVTDCB,CVT4MS1           VS2 SYSTEM                      03660001
         BO    CDESRCH2                 YES - SKIP TEST FOR VS1         03680001
CDESRCH1 EQU   *                                                        03732000
         MVC   CMSYSTYP(1),CVTDCB       SET CODE FOR VS1 SYSTEM         03734001
         OI    CMLIBFLG,CQMFTLPA        SET BIT FOR VS1 LPA             03740001
LPABIT1  OI    CMLIBFLG,CQLPASRH        TURN ON LPA SEARCH BIT          03760000
*                                                                       03780021
*********************************************************************** 03800021
*                                                                       03820021
*              INITIALIZE FOR CDE SEARCH                                03840021
*                                                                       03860021
*********************************************************************** 03880021
*                                                                       03900021
LPALIB1  NI    CMRELFLG,CQFF-CQLIB      INDICATE LPA LIBRARY            03920000
         LA    WORKA,CMERCHN            GET ADDR OF PTR TO ER CHAIN     03940021
         ST    WORKA,CMPREVPT           SAVE AS PREVIOUS PTR            03960021
         LA    ADR,16                   GET ADDR OF PTR TO CVT          03980021
         L     PTR,0(ADR)               GET ADDR OF CVT                 04000021
*                                                                       04020021
*********************************************************************** 04040021
*                                                                       04060021
*              CONTENTS DIRECTORY ENTRY SEARCH FOR VS1                  04080001
*                                                                       04100021
*********************************************************************** 04120021
*                                                                       04140021
         USING CDENTRY,ADR                                              04160021
         L     ADR,CVTQLPAQ             GET ADDR OF TOP OF CONTENTS     04180021
*                                       DIRECTORY IN LPA QUEUE          04200021
         LTR   ADR,ADR                  QUEUE EMPTY                     04220021
         BZ    OPNLIB                   YES-OPEN SYSLIB                 04240021
GETNAME1 TM    ESDTYPE(CESD),ENCAL+WEAKCALL NVCALL OR W-CON      INC288 04260000
         BC    5,CDEER1            YES. GET NEXT ER              INC288 04280000
         LM    WORKA,WORKB,ESDNAME(CESD) GET NAME INTO TWO REGISTERS    04300021
CDECOMP1 C     WORKA,CDNAME             COMPARE FIRST HALF OF NAMES     04320021
         BE    CDECOMP2                 EQUAL-COMPARE SECOND HALF       04340021
NOCOMP   L     ADR,CDCHAIN              GET NEXT IN CHAIN               04360021
         LA    ADR,0(ADR)               CLEAR HIGH BYTE                 04380021
         LTR   ADR,ADR                  END OF CHAIN                    04400021
         BNE   CDECOMP1                 NO-COMPARE NAMES                04420021
CDEER1   ST    CESD,CMPREVPT            SAVE PREVIOUS POINTER           04440000
         L     CESD,ESDCHADR(CESD)      GET NEXT ER                     04460021
CDEER11  LTR   CESD,CESD                ANY LEFT                        04480000
         BZ    BLDLER                   NO-SEE IF ALL ARE RESOLVED      04500021
         L     ADR,CVTQLPAQ             GET ADDR OF FIRST CDE           04520021
         DROP  PTR                                                      04540021
         B     GETNAME1                                                 04560000
CDECOMP2 C     WORKB,CDNAME+4           COMPARE SECOND HALF OF NAME     04580021
         BNE   NOCOMP                   NOT EQUAL-CONTINUE SEARCH       04600021
         B     SDCHNG                   GO CHANGE ENTRY TO SD           04610000
*                                                                       04750000
*********************************************************************** 04752000
*                                                                       04754000
CDESRCH2 EQU   *                                                        04754400
         USING CVTSECT,PTR                                              04754500
         MVC   CMSYSTYP(1),CVTDCB       INDICATE SYSTEM IS VS2          04754801
         DROP  PTR                                                      04755200
LPABIT2  OI    CMLIBFLG,CQLPASRH        TURN ON LPA SEARCH BIT          04756000
*                                                                       04758000
*********************************************************************** 04758400
*                                                                       04758800
*              INITIALIZE FOR CDE SEARCH                                04759200
*                                                                       04759600
*********************************************************************** 04759700
*                                                                       04759800
LPALIB2  NI    CMRELFLG,CQFF-CQLIB      INDICATE LPA LIBRARY            04759900
         LA    WORKA,CMERCHN            GET ADDR OF PTR TO ER CHAIN     04766600
         ST    WORKA,CMPREVPT           SAVE AS PREVIOUS PTR            04768600
SETCVTPT LA    ADR,16                   GET ADDR OF PTR TO CVT  YM05556 04770601
         L     R3,0(ADR)                GET ADDR OF CVT         YM05254 04772601
         USING CVTSECT,R3                                       YM05254 04773001
*                                                                       04773100
*********************************************************************** 04773200
*                                                                       04779900
*              CONTENTS DIRECTORY ENTRY SEARCH FOR VS2                  04781901
*                                                                       04783900
*********************************************************************** 04785900
*                                                                       04786300
GETNAME2 TM    ESDTYPE(CESD),ENCAL+WEAKCALL NVCALL OR W-CON      INC288 04786400
         BC    5,CDEER2                YES. GET NEXT ER          INC288 04786500
         LM    R0,R1,ESDNAME(CESD)     GET NAME INTO R0 AND R1          04793200
         STM   R2,R10,CMRSAVE          SAVE REGS (IEAVVMSR WILL         04793600
*                                      CHANGE SOME OF THOSE SAVED)      04794000
         L     BRANCH,CVTLPDSR         V(IEAVVMSR)                      04795200
         BALR  RETURN,BRANCH                                            04797200
*   IEAVVMSR WILL RETURN TO R14 IF MATCH IS FOUND, R14 + 4 IF NO MATCH  04797600
         B     SDCHNG2                  MATCHING ER                     04799200
         LM    R2,R10,CMRSAVE           RESTORE REGS                    04799300
CDEER2   ST    CESD,CMPREVPT            SAVE PREVIOUS POINTER           04799600
         L     CESD,ESDCHADR(CESD)      GET NEXT ER                     04799700
CDEER12  LTR   CESD,CESD                ANY LEFT                        04799800
         BZ    BLDLER                   NO-SEE IF ALL ARE RESOLVED      04799900
         B     SETCVTPT                                         YM05556 04806501
*                                                                       04856500
*********************************************************************** 04866500
*                                                                       04876500
*              CHANGE ENTRY TO SD                                       04878500
*                                                                       04878900
*********************************************************************** 04879300
*                                                                       04879700
SDCHNG2  EQU   *                        FROM VS2 ROUTINE                04882001
         LM    R2,R10,CMRSAVE           RESTORE REGS                    04884000
SDCHNG   EQU   *                        FROM VS1 ROUTINE                04885501
         L     PARM,ESDRELCH(CESD)      GET ADDR OF RLD CHAIN           04887800
         LA    PARM,0(PARM)             CLEAR TYPE FIELD                04890100
         TM    CMSYSTYP,CVT4MS1         VS2 SYSTEM?                     04892401
         BO    ENTR2                    GET ENTRY POINT FOR VS2         04894701
         TM    CMLIBFLG,CQMFTLPA        MFT LPA                         04897000
         BO    MFTENTRY                 YES-GET ENTRY POINT             04899300
         L     CUM,CDENTPT              GET ENTRY POINT ADDRESS         04901600
         B     CLEARFLG                 AROUND VS2 ENTRY POINT          04903901
ENTR2    EQU   *                        VS2 SYSTEM                      04906201
         LR    CUM,R0                   GET ENTRY POINT ADDR            04908500
CLEARFLG EQU   *                                                        04910800
         L     CUM,16(CUM)              ENTRY POINT             YA07896 04913137
         ST    CUM,ESDRELCH(CESD)       PUT IN CESD ENTRY               04915400
         L     WORKA,ESDCHADR(CESD)     GET PTR TO NEXT ER              04917700
         ST    WORKA,CMBLDLPT           SAVE IT                         04920021
         L     WORKB,CMPREVPT           REMOVE MATCHED ER FROM CHAIN    04940021
         ST    WORKA,0(WORKB)                                           04960021
         L     WORKB,CMSDCHN            PUT ON SD CHAIN                 04980021
         ST    WORKB,0(CESD)                                            05000021
         ST    CESD,CMSDCHN                                             05020021
         L     BRANCH,MAPRTN            GET ADDR OF MAP ROUTINE         05040021
         BALR  RETURN,BRANCH            MAP ENTRY                       05060021
         L     BRANCH,RLDRES            RELOCATE RLD'S                  05080021
         BALR  RETURN,BRANCH                                            05100021
         L     CESD,CMBLDLPT            GET NEXT ER                     05120021
         TM    CMSYSTYP,CVT4MS1         VS2 SYSTEM?                     05130001
         BO    CDEER12                  LOOK FOR MATCH IN VS2           05140001
         B     CDEER11                  LOOK FOR MATCH IN VS1           05152001
MFTENTRY L     CUM,CDENTPT+4            GET ADDR OF ENTRY POINT         05160021
         B     CLEARFLG                 MAKE INTO SD ENTRY              05180021
BLDLER   L     CESD,CMERCHN             GET ADDR OF FIRST ER            05200021
         LTR   CESD,CESD                ANY ER'S                        05220021
         BZ    COMMON                   NO-ASSIGN ADDR TO COMMON        05240021
         DROP  ADR                                                      05260021
*                                                                       05280021
*********************************************************************** 05300021
*                                                                       05320021
*              OPEN SYSLIB                                              05340021
*                                                                       05360021
*********************************************************************** 05380021
*                                                                       05400021
OPNLIB   TM    CMSTATUS,CQLIBOPN       IS SYSLIB OPEN?                  05420021
         BO    MOREER                  YES                              05440021
         L     BRANCH,OPNSYSLI         NO, GET ADDR OF OPEN RTN         05460021
         BALR  RETURN,BRANCH            OPEN SYSLIB                     05480021
         TM    CMSTATUS,CQLIBOPN        SYSLIB OPEN                     05500021
         BZ    COMMON                   NO-ASSIGN ADDRESSES TO COMMON   05520021
*                                                                       05540021
*********************************************************************** 05560021
*                                                                       05580021
*              INITIAL BLDL LIST-GET START ADDRESS AND MAXIMUM          05600021
*              NUMBER OF ENTRIES                                        05620021
*                                                                       05640021
*********************************************************************** 05660021
*                                                                       05680021
MOREER   OI    CMRELFLG,CQLIB           INDICATE SYSLIB                 05700021
         L     LNG,CMLOWTBL             GET LOW TABLE ADDRESS           05720021
         L     PTR,CMNXTTXT             GET HIGH TEXT ADDRESS           05740021
         ST    PTR,CMBLDLPT             USE AS ADDR OF BLDL LIST        05760021
         LA    WORKA,EBLDLENT           FOR INITIALIZING BLDL LIST      05780021
         ST    WORKA,0(PTR)             INITIALIZE FIRST 2 HALF WORDS   05800021
*                                       IN BLDL LIST TO 0 AND 26        05820021
         LA    PTR,EBLDLDIS(PTR)                                        05840021
         SR    LNG,PTR                  GET LENGTH OF BLDL LIST         05860021
         SR    ADR,ADR                  CLEAR EVEN REG FOR DIVIDE       05880021
         LA    WORKA,EBLDLSIZ           BLDL ENTRY SIZE PLUS BLDL LIST  05900021
         DR    ADR,WORKA                DIVIDE SIZE OF BLDL LIST AREA   05920021
*                                       BY 20 TO GET NUMBER OF ENTRIES  05940021
         LR    ADR,PTR                  FOR ADDR OF LAST USED POSITION  05960021
*                                       IN BLDL LIST                    05980021
         LR    WORKB,PTR                                                06000021
         LR    ID,PTR                                                   06020021
         LA    WORKA,EBLDLENT           SIZE OF EACH ENTRY              06040021
         SR    CUM,CUM                  CLEAR-NUM OF ENTRIES            06060021
         L     CESD,CMERCHN                                             06080021
*                                                                       06100021
*********************************************************************** 06120021
*                                                                       06140021
*              SET UP BLDL LIST                                         06160021
*                                                                       06180021
*********************************************************************** 06200021
*                                                                       06220021
ENDCH    LTR   CESD,CESD                END OF ER CHAIN                 06240021
         BE    ANYENT                   YES-SEE IF ANY ENTRIES IN BLDL  06260021
         TM    ESDTYPE(CESD),EBLDLATT   HAS BLDL BEEN ATTEMPTED         06280021
         BZ    MNCAL                    NO-SEE IF MARKED NCAL           06300021
NXTER    L     CESD,ESDCHADR(CESD)      GET PTR TO NEXT ER              06320021
         B     ENDCH                    SEE IF END OF CHAIN             06340021
MNCAL    TM    ESDTYPE(CESD),ENCAL+WEAKCALL  NVCALL OR W-CON     INC288 06360021
         BC    5,NXTER             YES. GET NEXT ER              INC288 06380021
         TM    ESDRELOC(CESD),X'80'    SPECIAL DELETE BIT ON?   ZA01335 06390002
         BO    NXTER                   YES, DON'T RESOLVE       ZA01335 06392002
         OI    ESDTYPE(CESD),EBLDLATT   TURN ON BLDL ATTEMPTED BIT      06400021
         LTR   CUM,CUM                  FIRST ENTRY                     06420021
         BNZ   LASTENTR                                                 06440021
         LTR   LNG,LNG                  MAXIMUM NUM ENTRIES ZERO        06460021
         BNZ   ENTER1                   NO-MOVE NAME INTO BLDL LIST     06480021
*                                                                       06500021
*********************************************************************** 06520021
*                                                                       06540021
*              PRINT ERROR MESSAGE-PROGRAM TOO LARGE                    06560021
*                                                                       06580021
*********************************************************************** 06600021
*                                                                       06620021
TOOBIG   LA    ZERO,ERSIZE2             GET ERROR CODE FOR BIT MAP      06640021
         L     BRANCH,LOGRTN            GET ADDR OF ERROR LOG RTN       06660021
         BR    BRANCH                   LOG ERROR MESSAGE               06680021
*                                                                       06700021
*********************************************************************** 06720021
*                                                                       06740021
*              PUT NAMES IN ALPHABETICAL ORDER                          06760021
*                                                                       06780021
*********************************************************************** 06800021
*                                                                       06820021
ANYENT   LTR   CUM,CUM                  ANY ENTRIES IN BLDL LIST        06840021
         BZ    COMMON                   NO-ASSIGN ADDR TO COMMON        06860021
         B     MOVEADR                                                  06880021
LASTENTR LA    ID,EBLDLENT(ID)                                          06900021
COMPNAME CLC   ESDNAME(8,CESD),0(PTR)   COMPARE THIS NAME TO PREVIOUS   06920021
*                                       NAME IN LIST                    06940021
         BNL   ENTER                    LOW OR EQUAL MOVE NAME TO LIST  06960021
         LA    ADR,EBLDLENT(PTR)        GET ADDR OF NEXT POSITION       06980021
*                                       IN BLDL LIST                    07000021
         MVC   0(12,ADR),0(PTR)         MOVE PREVIOUS NAME DOWN ONE     07020021
*                                       POSITION                        07040021
         CR    PTR,WORKB                PTR AT FIRST ENTRY              07060021
         BE    ENTER1                                                   07080021
         SR    PTR,WORKA                SET PTR BACK ONE ENTRY          07100021
         B     COMPNAME                                                 07120021
ENTER    LA    PTR,EBLDLENT(PTR)        GET ADDR OF NEXT POSITION       07140021
ENTER1   MVC   0(8,PTR),ESDNAME(CESD)   MOVE NAME INTO BLDL LIST        07160021
         ST    CESD,8(PTR)              PUT ADDR OF CESD ENTRY NEXT     07180021
*                                       TO NAME                         07200021
         LA    CUM,1(CUM)               UPDATE NUMBER OF ENTRIES        07220021
         LR    PTR,ID                                                   07240021
         CR    CUM,LNG                  NUMBER OF ENTRIES EQUAL MAX     07260021
         BNE   NXTER                    NO-GET NEXT ER                  07280021
*                                                                       07300021
*********************************************************************** 07320021
*                                                                       07340021
*              PUT ADDRESSES OF CESD ENTRIES IN ADDRESS LIST            07360021
*                                                                       07380021
*********************************************************************** 07400021
*                                                                       07420021
MOVEADR  LR    ADR,WORKB                ADDR OF FIRST BLDL ENTRY        07440021
         LA    PTR,EBLDLENT(ID)         ADDR OF FIRST ADR LIST ENTRY    07460021
         LR    WORKA,PTR                SAVE ADDRESS                    07480021
         L     WORKB,CMBLDLPT           GET ADDR OF BLDL LIST           07500021
         STH   CUM,0(WORKB)             PUT IN NUMBER OF ENTRIES        07520021
         LR    LNG,CUM                  NUMBER OF ENTRIES IN LIST       07540021
         LR    ID,ADR                   SAVE FIRST ENTRY ADDRESS        07560021
ADRLIST  MVC   0(4,PTR),8(ADR)          MOVE CESD ADDR FROM BLDL LIST   07580021
         LA    ADR,EBLDLENT(ADR)        GET ADDR OF NEXT ENTRY          07600021
         LA    PTR,EADRLENT(PTR)                                        07620021
         BCT   LNG,ADRLIST              BRANCH UNTIL NO MORE ENTRIES    07640021
*                                                                       07660021
*********************************************************************** 07680021
*                                                                       07700021
*              ISSUE BLDL MACRO                                         07720021
*                                                                       07740021
*********************************************************************** 07760021
*                                                                       07780021
DOBLDL   L     PARM,CMRDCBPT            GET ADDR OF SYSLIB DCB          07800021
         L     ZERO,CMBLDLPT            GET ADDR OF BLDL LIST           07820021
         BLDL  (1),(0)                                                  07840021
         LA    WORKB,EBLDLRC            GET RETURN CODE FOR BLDL ERR    07860021
         CR    BRANCH,WORKB             BLDL ERROR?                     07880021
         BNE   MOVETTR                  NO-CONTINUE                     07900021
         LA    ZERO,ERIOUT4             GET ERROR CODE FOR BLDL ERROR   07920021
         L     BRANCH,LOGRTN            GET ADDR OF ERROR LOG RTN       07940021
         BALR  RETURN,BRANCH            LOG ERROR                       07960021
         B     COMMON                   ASSIGN ADDR TO COMMON           07980021
*                                                                       08000021
*********************************************************************** 08020021
*                                                                       08040021
*              PUT TTR'S IN CESD ENTRIES                                08060021
*                                                                       08080021
*********************************************************************** 08100021
*                                                                       08120021
MOVETTR  LR    PTR,WORKA                GET ADDR OF FIRST ENTRY IN      08140021
*                                       ADDRESS LIST                    08160021
         LR    ADR,ID                   GET ADDR FIRST BLDL ENTRY       08180021
HAVETTR  CLI   EBLDLR(ADR),X'00'        THIS ENTRY NOT FOUND-R=0        08200021
         BE    NXTENT                   YES-GET NEXT ENTRY              08220021
         L     WORKB,0(PTR)             GET ADDR OF CESD ENTRY          08240021
         MVC   ESDRELOC(4,WORKB),EBLDLTTR(ADR) MOVE TTR TO CESD         08260021
         OI    ESDTYPE(WORKB),ETTR      MARK CESD ENTRY TTR             08280021
NXTENT   LA    ADR,EBLDLENT(ADR)        INCREMENT BLDL LIST POINTER     08300021
         LA    PTR,EADRLENT(PTR)        INCREMENT ADDRESS LIST POINTER  08320021
         BCT   CUM,HAVETTR              PROCESS ALL ENTRIES             08340021
         L     CESD,CMERCHN             PICK UP ER CHAIN PTR            08360021
NEXT     LTR   CESD,CESD                END OF CHAIN                    08380021
         BZ    TESTLIB                  YES-ANY MORE ER'S               08400021
         TM    ESDTYPE(CESD),ETTR       THIS ENTRY HAVE TTR             08420021
         BO    DOFIND                   YES-ISSUE FIND MACRO            08440021
NEXT1    L     CESD,ESDCHADR(CESD)      PICK UP PTR TO NEXT ER          08460021
         B     NEXT                                                     08480021
*                                                                       08500021
*********************************************************************** 08520021
*                                                                       08540021
*              ISSUE FIND MACRO                                         08560021
*                                                                       08580021
*********************************************************************** 08600021
*                                                                       08620021
DOFIND   NI    ESDTYPE(CESD),CQFF-ETTR  TURN OFF TTR RECEIVED BIT       08640021
         LA    WORKA,ESDRELOC(CESD)     GET ADDR OF TTR FOR FIND        08660021
         L     ADR,CMRDCBPT             GET ADDR OF SYSLIB DCB          08680021
         FIND  (ADR),(WORKA),C                                          08700021
         LA    R0,72                                                    08704021
         LR    R1,R13                                                   08708021
         SR    R1,R0              GET NEXT SAVE AREA IN CHAIN           08712021
         ST    R1,8(R13)          RESET FORWARD PTR                     08716021
         NI    CMIOFLGS,CQFF-CQEOCB-CQEOFB-CQEOFSB-CQIGNCR              08720021
*                                       INITIALIZE EOF BITS             08740021
         TM    CMIOFLGS,CQRECFM         LOAD MODULE-CHECK RECFM IN DCB  08760021
         BZ    OBJECT                   NO-PRIME OBJ MOD BUFFERS        08780021
         L     BRANCH,LOADRTN           GET ADDR OF LOAD MOD PROC       08800021
         BALR  RETURN,BRANCH            PROCESS LOAD MODULE             08820021
TESTCC   L     CESD,CMERCHN                                             08840021
         B     NEXT                                                     08860021
OBJECT   L     BRANCH,PRIMRTN           GET ADDR OF PRIME ROUTINE       08880021
         BALR  RETURN,BRANCH            GO PRIME OBJ MOD BUFFERS        08900021
         L     BRANCH,RELORTN           GET ADDR OF OBJ MOD PROCESSOR   08920021
         BALR  RETURN,BRANCH            GO PROCESS OBJ MODULE           08940021
         B     TESTCC                                                   08960021
*                                                                       08980021
*********************************************************************** 09000021
*                                                                       09020021
*              CHECK FOR MORE ER'S AND WHICH LIBRARY TO SEARCH          09040021
*                                                                       09060021
*********************************************************************** 09080021
*                                                                       09100021
TESTLIB  L     CESD,CMERCHN             GET ADDR OF FIRST ER            09120021
         LTR   CESD,CESD                CHAIN EMPTY                     09140021
         BZ    COMMON                   YES-ASSIGN ADDR TO COMMON       09160021
         TM    CMLIBFLG,CQLPASRH        RESIDENT LIBRARY                09180021
         BO    SRCLPA                   YES-SEARCH LPA AREA             09200000
         B     MOREER                   NO-ISSUE BLDL                   09220021
SRCLPA   EQU   *                                                        09230000
         TM    CMSYSTYP,CVT4MS1         VS2 SYSTEM?                     09232001
         BO    LPALIB2                  SEARCH VS2 LPA                  09234001
         B     LPALIB1                  SEARCH VS1 LPA                  09238001
*********************************************************************** 09240021
*                                                                       09260021
*              ASSIGN ADDRESSES TO COMMON                               09280021
*                                                                       09300021
*********************************************************************** 09320021
*                                                                       09340021
COMMON   NI    CMLIBFLG,CQFF-CQAUTOC    TURN OFF AUTOCALL BIT           09360021
         L     CESD,CMCMCHN             PICK UP PTR TO COMMON CHAIN     09380021
         MVC   CMTOPCOD(4),CMNXTTXT  SAVE TOP OF CODE WHICH CAN'T BE    09400021
*                                    OVERLAID.                          09420021
COMMON1  LTR   CESD,CESD                END OF CHAIN                    09440021
         BZ    PSEUDOR                  YES-ASSIGN DISPLACEMENTS TO PR  09460021
         L     PARM,ESDRELCH(CESD)      GET ADDR OF ER CHAIN FOR  RELOC 09480021
         LA    PARM,0(PARM)             CLEAR TYPE FIELD                09500021
         IC    WORKB,ESDTYPE(CESD)      SAVE TYPE FIELD                 09520021
         L     PTR,ESDCMCHN(CESD)       PICK UP PTR TO CHAINED CM ENTRY 09540021
         L     ADR,CMNXTTXT             GET NEXT TXT ADDRESS            09560021
         OI    CMFLAG4,CQCOMMON        SHOW COMMON RECEIVED             09580021
         LA    ADR,7(ADR)               ROUND IT TO DOUBLEWORD BOUNDARY 09600021
*                                       ADD SEVEN                       09620021
         ST    ADR,ESDRELCH(CESD)       PLACE IN ESD ENTRY              09640021
         NI    ESDRELCH+3(CESD),X'F8'   AND OFF 3 LOW ORDER BITS        09660021
         L     ADR,ESDRELCH(CESD)       GET ROUNDED OFF ADDRESS         09680021
         ST    ADR,ESDCMCHN(CESD)                                       09700021
         STC   WORKB,ESDTYPE(CESD)      RESTORE TYPE                    09720021
         L     WORKA,ESDLNG(PTR)        GET LENGTH OF COMMON            09740021
         LA    WORKA,0(WORKA)                                           09760021
         AR    ADR,WORKA                ADD LENGTH OF COMMON TO ADDR    09780021
         C     ADR,CMHITBL              LESS THAN HIGH TABLE            09800021
         BNL   TOOBIG                   NOT LOW-TERMINATE               09820021
         ST    ADR,CMNXTTXT             UPDATE NEXT TXT ADDR            09840021
         L     BRANCH,MAPRTN            GET ADDR OF MAP ROUTINE         09860021
         BALR  RETURN,BRANCH            MAP ENTRY                       09880021
         L     BRANCH,RLDRES            GET ADDR OF RLD RESOLUTION RTN  09900021
         BALR  RETURN,BRANCH            RESOLVE RLD'S                   09920021
         L     CESD,ESDCHADR(CESD)      PICK UP NEXT PTR IN CHAIN       09940021
         B     COMMON1                                                  09960021
*                                                                       09980021
*********************************************************************** 10000021
*                                                                       10020021
*              ASSIGN DISPLACEMENTS TO PSEUDO REGISTERS                 10040021
*                                                                       10060021
*********************************************************************** 10080021
*                                                                       10100021
PSEUDOR  SR    CUM,CUM                  ZERO LOCATION CTR FOR PR'S      10120021
         LH    WORKB,CMWTBFCT          PICK UP COUNT IN BUFFER          10140021
         LTR   WORKB,WORKB             IS COUNT ZERO                    10160021
         BZ    PSEUDOR1                YES-DON'T CLEAR BUFFER           10180021
         L     BRANCH,PRTRTN            GET ADDR OF IEWLPRNT            10200021
         BALR  RETURN,BRANCH            PURGE RRINT BUFFER              10220021
PSEUDOR1 L     CESD,CMPRCHN             PICK UP ADDR OF PR CHAIN        10240021
         LTR   CESD,CESD                END OF CHAIN                    10260021
         BZ    FINISHUP                 SKIP THIS ROUTINE               10280021
         MVI   CMPRTCTL,CTSPACE2        SET UP CARRIAGE CONTROL         10300021
PRC2     SR    WORKA,WORKA              CLEAR REGISTER                  10320021
         SR    LNG,LNG                                                  10340021
         BCTR  WORKA,0                  SET TO ALL FF'S                 10360021
         IC    LNG,ESDPRALN(CESD)       PICK UP ALIGNMENT FACTOR        10380021
         SR    WORKA,LNG                SUBTRACT ALIGN FACTOR FROM FF'S 10400021
         AR    CUM,LNG                  ADD ALIGNMENT FACTOR TO PR      10420021
*                                       LOCATION COUNTER                10440021
         NR    CUM,WORKA                AND SUM WITH F'S-ALIGNMENT      10460021
*                                       VALUE EQUAL ASSIGNED ADDRESS    10480021
         IC    WORKB,ESDTYPE(CESD)      SAVE TYPE FIELD                 10500021
         L     PARM,ESDTYPE(CESD)       GET ADDR OF RLD'S FOR RELOC     10520021
         LA    PARM,0(PARM)             CLEAR HIGH BYTE                 10540021
         ST    CUM,ESDTYPE(CESD)        PUT ASSIGN ADDR IN CESD         10560021
         STC   WORKB,ESDTYPE(CESD)      RESTORE TYPE                    10580021
         L     WORKA,ESDLNG(CESD)       GET LENGTH OF PR                10600021
         LA    WORKA,0(WORKA)           CLEAR HIGH BYTE                 10620021
         AR    CUM,WORKA                ADD LENGTH TO PR LOCATION CTR   10640021
         L     BRANCH,MAPRTN            GET ADDR OF MAP ROUTINE         10660021
         BALR  RETURN,BRANCH            MAP CESD ENTRY                  10680021
         L     BRANCH,RLDRES            GET ADDR OF RLD RESOLUTION RTN  10700021
         BALR  RETURN,BRANCH                                            10720021
         L     CESD,ESDCHADR(CESD)      GET PTR TO NEXT PR              10740021
         LTR   CESD,CESD                END OF CHAIN                    10760021
         BNZ   PRC2                                                     10780021
PRA4     L     BRANCH,PRTRTN            GET ADDR OF IEWLPRNT(PRINT RTN) 10800021
         BALR  RETURN,BRANCH            FLUSH LAST MAP LINE             10820021
PRA5     MVI   CMPRTCTL,CTSPACE2        SET UP CARRIAGE CONTROL         10840021
         L     ADR,CMCXDPT              GET ADDR OF LOCATION REQUESTING 10860021
*                                       CUMULATIVE LENGTH               10880021
NEXTCXD1 LTR   ADR,ADR                 ZERO IF NCAL SPECIFIED           10900021
         BZ    FINISHUP                 SKIP FILLING IN LENGTH FOR CXD  10920021
NEXTCXD  L     WORKA,ECXDADR(ADR)       GET ADDR OF LOCATION REQUESTING 10940021
         ST    CUM,0(WORKA)             PUT TOTAL LENGTH AT THAT LOC    10960021
         L     ADR,0(ADR)               GET ADDR OF NEXT LOC            10980021
         B     NEXTCXD1                CHECK FOR NEXT CXD               11000021
*                                                                       11020021
*********************************************************************** 11040021
*                                                                       11060021
*              ISSUE UNRESOLVED ER MESSAGES                             11080021
*                                                                       11100021
*********************************************************************** 11120021
*                                                                       11140021
FINISHUP L     CESD,CMERCHN             GET ADDR OF ER CHAIN            11160021
DEB2     LTR   CESD,CESD                END OF CHAIN                    11180021
         BZ    NOTXT                                                    11200021
         TM    ESDRELOC(CESD),X'80'    SPECIAL DELETE BIT ON?   ZA01335 11210002
         BO    DEF2                    YES, NO MESSAGE          ZA01335 11212002
         TM    CMPRMFLG,CQCALL          AUTOCALL SPECIFIED              11220021
         BZ    DED2                     NO-ISSUE WARNING MESSAGES       11240021
         TM    ESDTYPE(CESD),ENCAL      MARKED NEVER CALL               11260021
         BO    DED2                     YES-WARNING MESSAGE             11280021
         TM    ESDTYPE(CESD),WEAKCALL  IS IT MARKED W-CON        INC288 11300021
         BO    DEF2                YES. GET NEXT ER              INC288 11320021
         LA    ZERO,ERRELO2             GET ERROR CODE FOR ERROR MSG    11340021
         B     DEE2                                                     11360021
NOTXT    TM    CMLIBFLG,CQNOTXT         SEE IF ANY TXT RECEIVED         11380021
         BO    DEA4                     YES-FIND ENTRY PT               11400021
         LA    ZERO,ERINPT3             GET ERROR CODE FOR NO TEXT      11420021
         L     BRANCH,LOGRTN            GET ADDR OF ERROR LOG RTN       11440021
         BALR  RETURN,BRANCH            LOG ERROR MESSAGE               11460021
         B     BADCC                    QUIT                            11480021
DED2     LA    ZERO,ERRELO1             GET ERROR CODE FOR WARNING MSG  11500021
DEE2     LA    PARM,ESDNAME(CESD)                                       11520021
         L     BRANCH,LOGRTN            GET ADDR OF LOG ROUTINE         11540021
         BALR  RETURN,BRANCH            LOG ERROR MESSAGE               11560021
DEF2     L     CESD,ESDCHADR(CESD)      GET ADDR OF NEXT ER IN CHAIN    11580021
         B     DEB2                                                     11600021
*                                                                       11620021
*********************************************************************** 11640021
*                                                                       11660021
*              FIND ENTRY POINT ADDRESS                                 11680021
*                                                                       11700021
*********************************************************************** 11720021
*                                                                       11740021
DEA4     TM    CMPRMFLG,CQEPNAME+CQEPADDR ENTRY POINT NAME AND ADDRESS  11760021
*                                         RECEIVED                      11780021
         BO    DEB3                     YES-ENTRY ADDR ALREADY SET      11800021
         BZ    USETXT                   NEITHER-USE FIRST TXT ADDR      11820021
         TM    CMPRMFLG,CQEPNAME        ENTRY POINT NAME RECEIVED       11840021
         BO    USETXT1                  YES-USE FIRST TXT               11860021
         L     CESD,CMEPCESD            GET ADDR OF EP CESD             11880021
         TM    ESDTYPE(CESD),ERTYPE     EP AN ER?                       11900021
         BO    USETXT2                                                  11920021
         B     DEB3                                                     11940021
USETXT   LA    ZERO,ERENTR1             ERROR CODE FOR NEITHER EP NAME  11960021
*                                       OR EP ADDR RECEIVED             11980021
         B     ERRO                                                     12000021
USETXT1  LA    ZERO,ERENTR2             ERROR CODE FOR EP NAME NOT      12020021
*                                       FOUND                           12040021
         LA    PARM,CMEPNAME           PRINT NAME RECEIVED              12060021
ERRO     L     BRANCH,LOGRTN                                            12080021
         BALR  RETURN,BRANCH                                            12100021
USETXT2  LH    WORKA,CMNUMXS       GET NUMBER OF EXTENTS                12120021
         LTR   WORKA,WORKA         ANY PRELOADED TEXT                   12140021
         BNZ   DEB3                YES. LEAVE EP  ADDR                  12160021
         MVC   CMEPADDR(4),CMBEGADR  UES FIRST TEXT AS EP.              12180021
DEB3     L     PARM,CMNXTTXT            GET ADDR OF NXT FREE TXT        12200021
         S     PARM,CMBEGADR            SUBTRACT ADDR OF BEGINNING OF   12220021
*                                       TXT FROM ADDR OF END OF TXT     12240021
         L     WORKA,CMXLCHN       GET EXTENT CHAIN                     12260021
LEN1     LTR   WORKA,WORKA         ANY PRE-LOADED TEXT                  12280021
         BZ    LEN2                NO. BRANCH                           12300021
         A     PARM,8(WORKA)       YES. ADD LENGTH OF EXTENT            12320021
         L     WORKA,0(WORKA)      GET NEXT EXTENT IN CHAIN             12340021
         B     LEN1                LOOP BACK                            12360021
LEN2     EQU   *                                                        12380021
         ST    BASE,CMBLDLPT            SAVE BASE REGISTER              12400021
         L     BRANCH,CNVTRTN           GET ADDR OF CONVERT ROUTINE     12420021
         BALR  RETURN,BRANCH            CONVERT LENGTH TO PRINTABLE HEX 12440021
         L     BASE,CMBLDLPT            RESTORE BASE REGISTER           12460021
         L     ADR,CMPUTREC             GET ADDR OF PRINT BUFFER        12480021
         MVC   3(MSG2LNG,ADR),MSG2      TOTAL LENGTH                    12500021
         MVC   6+MSG2LNG(6,ADR),CMXDBLWD+1  MOVE IN LENGTH      @Z12914 12520037
         MVI   CMPRTCTL,CTSPACE2        SET UP CARRIAGE CONTROL         12540021
         L     BRANCH,PRTRTN            GET ADDR OF PRINT ROUTINE       12560021
         BALR  RETURN,BRANCH                                            12580021
         L     PARM,CMEPADDR            GET ENTRY POINT ADDR            12600021
         ST    BASE,CMBLDLPT            SAVE BASE REGISTER              12620021
         L     BRANCH,CNVTRTN                                           12640021
         BALR  RETURN,BRANCH                                            12660021
         L     BASE,CMBLDLPT            RESTORE BASE REGISTER           12680021
         L     ADR,CMPUTREC             GET ADDR OF PRINT BUFFER        12700021
         MVC   3(MSG3LNG,ADR),MSG3      ENTRY ADDRESS                   12720021
         MVC   5+MSG3LNG(6,ADR),CMXDBLWD+1  MOVE IN ADDR        @Z12914 12740037
         L     BRANCH,PRTRTN                                            12760021
         BALR  RETURN,BRANCH                                            12780021
         B     BADCC1                                                   12800021
         DROP  BASE                                                     12820021
         EJECT                                                          12840021
*                                                                       12860021
*********************************************************************** 12880021
*                                                                       12900021
*              LOAD MODULE PROCESSOR                                    12920021
*                                                                       12940021
*********************************************************************** 12960021
*                                                                       12980021
         USING *,BRANCH                                                 13000021
HEWLODE  SAVE  (14,12),T,*        SAVE CALLERS REGISTERS                13020021
         L     BASE,AUTOCALL                                            13040021
         DROP  15                                                       13060021
         USING HEWACALL,BASE                                            13080021
         L     SAVEREG,8(SAVEREG)       NEW SAVE AREA ADDRESS           13100021
         NI    CMLIBFLG,CQFF-CQFIRST    INITIALIZE FLAGE                13120021
*                                                                       13140021
*********************************************************************** 13160021
*                                                                       13180021
*              READ CONTROL RECORD                                      13200021
*                                                                       13220021
*********************************************************************** 13240021
*                                                                       13260021
RDCNTRL  SR    ZERO,ZERO                INDICATE READ CONTROL RECORD    13280021
         L     BRANCH,READRTN           GET ADDRESS OF READ ROUTINE     13300021
         BALR  RETURN,BRANCH            GO TO READ                      13320021
RDCNTRL1 TM    CMIOFLGS,CQEOCB          END OF CONCATENATION            13340021
         BO    PROCEOM                  YES-PROCESS END OF MODULE       13360021
IGN      NI    CMLIBFLG,CQFF-CQDELETE-CQKEEPS                           13380021
         TM    CMIOFLGS,CQIGNCR         IGNORE CONTROL REC BIT ON       13400021
         BO    RDCNTRL                  YES-READ ANOTHER RECORD         13420021
         L     ADR,CMGETREC             GET ADDR OF INPUT BUFFER        13440021
         USING DCNTRLB,ADR              ESTABLISH DSECT ADDRESS         13460021
         TM    DTYPE,ESYMSCAT           REC TYPE SYM OR SCAT/TRAN       13480021
         BM    RDCNTRL                  YES-IGNORE-READ ANOTHER REC     13500021
         TM    DTYPE,ECESD              RECORD TYPE CESD                13520021
         BZ    FINCESD1                 NO-FINISH PROCESSING CESD       13540021
         OI    CMLIBFLG,CQFIRST         FIRST REC IS CESD               13560021
         OI    CMLIBFLG,CQCESDR         TURN ON CESD RECEIVED BIT       13580021
         LH    ID,DESID                 GET ID OF FIRST ITEM            13600021
         LH    LNG,DCOUNT               GET COUNT OF ESD DATA           13620021
         LA    PTR,DESDDATA             GET ADDR OF START OF DATA       13640021
         L     BRANCH,CESDRTN           GET ADDR OF ESD PROCESSOR       13660021
         BALR  RETURN,BRANCH            PROCESS ESD'S                   13680021
         B     RDCNTRL                  READ ANOTHER CONTROL RECORD     13700021
*                                                                       13720021
*********************************************************************** 13740021
*                                                                       13760021
*              PROCESS CESD                                             13780021
*                                                                       13800021
*********************************************************************** 13820021
*                                                                       13840021
FINCESD1 TM    CMLIBFLG,CQFIRST         WAS FIRST REC CESD              13860021
         BO    FINCESD                  YES-CONTINUE                    13880021
         LA    ZERO,ERINPT6             SET ERROR CODE-INVALID INPUT    13900021
         L     BRANCH,LOGRTN            GET ADDR OF LOG ROUTINE         13920021
         BALR RETURN,BRANCH             LOG ERROR                       13940021
         B     BADCC1                   RETURN                          13960021
FINCESD  TM    CMLIBFLG,CQCESDR         TEST CESD RECEIVED ON           13980021
         BZ    PROCRAT                  NO-PROCESS RLD'S AND TXT        14000021
         NI    CMLIBFLG,CQFF-CQCESDR    TURN OFF CESD RECEIVED BIT      14020021
         L     BRANCH,CESDRTN           GET ADDR OF ESD PROCESSOR       14040021
         BALR  RETURN,BRANCH            FINISH PROCESSING CESD          14060021
PROCRAT  TM    DTYPE,ERLD               RECORD TYPE RLD                 14080021
         BZ    PROCTXT                  NO-PROCESS TXT                  14100021
         LH    LNG,DRLDCNT              COUNT OF RLD DATA               14120021
         LA    PTR,DRLDDATA             GET ADDR OF START OF RLD DATA   14140021
         L     BRANCH,RLDRTN            GET ADDR OF RLD PROCESSOR RTN   14160021
         BALR  RETURN,BRANCH            PROCESS RLD'S                   14180021
         TM    DTYPE,ETXT               ALSO TXT CONTROL RECORD         14200021
         BO    LMTXT                    YES-GO TO LOAD MOD TXT PROCESS  14220021
         TM    DTYPE,ELAST              LAST RECORD BIT ON              14240021
         BZ    RDCNTRL                  NO-READ ANOTHER CONTROL RECORD  14260021
         TM    CMLIBFLG,CQAUTOC         AUTOCALL BIT ON                 14280021
         BO    PROCEOM                  GO TO EOM PROCESSOR             14300021
         OI    CMIOFLGS,CQIGNCR         SET IGNORE CONTROL REC BIT ON   14320021
         B     RDCNTRL                  READ ANOTHER RECORD             14340021
PROCTXT  TM    DTYPE,ETXT               TXT CONTROL RECORD              14360021
         BO    LMTXT                    GO TO LOAD MOD TXT PROCESSOR    14380021
         LA    ZERO,ERINPT6             SET ERROR CODE-INVALID INPUT    14400021
*                                       FROM LOAD MODULE                14420021
         L     BRANCH,LOGRTN            GET ADDR OF LOG ROUTINE         14440021
         BALR  RETURN,BRANCH            GO TO LOG ERROR MESSAGE         14460021
         B     RDCNTRL                  READ ANOTHER RECORD             14480021
*                                                                       14500021
*********************************************************************** 14520021
*                                                                       14540021
*              PROCESS END OF MODULES                                   14560021
*                                                                       14580021
*********************************************************************** 14600021
*                                                                       14620021
PROCEOM  L     BRANCH,EOMRTN            GET ADDR OF END OF MODULE PROC  14640021
         BALR  RETURN,BRANCH            GO PROCESS END OF MODULE        14660021
*                                                                       14680021
*********************************************************************** 14700021
*                                                                       14720021
*              ISSUE RETURN MACRO                                       14740021
*                                                                       14760021
*********************************************************************** 14780021
*                                                                       14800021
BADCC    NI    CMIOFLGS,CQFF-CQIGNCR    SET IGNORE CONTROL REC OFF      14820021
BADCC1   L     SAVEREG,4(SAVEREG)       PICT UP PTR TO CALLER'S SAVE    14840021
         RETURN (14,12),T               RESTORE REGISTERS AND RETURN    14860021
*                                                                       14880021
*********************************************************************** 14900021
*                                                                       14920021
*              PROCESS ID/LENGTH LIST                                   14940021
*                                                                       14960021
*********************************************************************** 14980021
*                                                                       15000021
LMTXT    SR    CUM,CUM                  CLEAR CUMULATING REGISTER       15020021
         LA    PTR,DID                  GET ADDRESS OF ID/LENGTH LIST   15040021
         LH    ZERO,DRLDCNT             LENGTH OF RLD ITEMS             15060021
         AR    PTR,ZERO                 ADD TO START OF DATA            15080021
         ST    PTR,CMBLDLPT             SAVE START ADDR OF ID/LENGTH    15100021
         LH    LNG,DCNTIDLN             GET LENGTH OF ID/LENGTH LIST    15120021
         LA    WORKB,EIDLNG             GET LENGTH OF EACH ENTRY        15140021
         LNR   WORKB,WORKB              MAKE NEG FOR DECREMENT          15160021
PICKID   BXLE  LNG,WORKB,FINIDL                                         15180021
         LH    ID,0(PTR)                                                15200021
         L     BRANCH,RENUMID           GET ADDRESS OF TRANSID          15220021
         BALR  RETURN,BRANCH            GO GET ADDR OF RNT ENTRY        15240021
         LTR   PARM,PARM                ENTRY EXISTS IF NOT ZERO        15260021
         BZ    SKIPREC                  IF ZERO-SKIP THIS RECORD        15280021
         B     MARKDEL                  SEE IF MARKED DELETE            15300021
DELETE   OI    CMLIBFLG,CQDELETE        TURN ON DELETE BIT              15320021
         AH    CUM,ELENGTH(PTR)         ADD LENGTH TO CUM REGISTER      15340021
         B     NEXTID                   GET NEXT ID                     15360021
MARKDEL  TM    ESDTYPE(CESD),EDELETE    ENTRY MARKED DELETE             15380021
         BO    DELETE                   YES-SET DELETE BIT              15400021
         TM    CMLIBFLG,CQKEEPS         FIRST 'KEEP' ID                 15420021
         BO    NOTFIRST                 NO-CONTINUE                     15440021
         L     WORKA,ESDRELOC(CESD)     GET RELATIVE RELOC CONSTANT     15460021
         AR    WORKA,CUM                ADD AMOUNT DELETED FROM FRONT   15480021
         OI    CMLIBFLG,CQNOTXT+CQKEEPS TXT HAS BEEN RECEIVED           15500021
NOTFIRST SR    CUM,CUM                  CLEAR CUMULATING REGISTER       15520021
         L     ID,ESDLAA(CESD)          GET LAST CSECT ADDR             15540021
         LA    ID,0(ID)                 CLEAR FLAG BYTE                 15560021
         AH    ID,ELENGTH(PTR)          ADD LENGTH OF CSECT             15580021
         ST    ID,CMLSTTXT              SAVE AS LAST TEXT ADDR          15600021
NEXTID   LA    PTR,EIDLNG(PTR)          GET ADDR OF NEXT ENTRY IN       15620021
*                                       ID/LENGTH LIST                  15640021
         B     PICKID                                                   15660021
FINIDL   TM    CMLIBFLG,CQKEEPS         KEEP SOME BIT ON                15680021
         BO    RDSETUP                  GET INFORMATION FOR TXT READ    15700021
*                                                                       15720021
*********************************************************************** 15740021
*                                                                       15760021
*              SKIP TXT RECORD                                          15780021
*                                                                       15800021
*********************************************************************** 15820021
*                                                                       15840021
SKIPREC  LA    ZERO,1                   INDICATE SKIP RECORD            15860021
         LNR   ZERO,ZERO                                                15880021
         L     PARM,CMGETREC            REG1 HAS ADDRESS OF RLD BUF     15900021
         B     LASTXT                   SEE IF LAST TXT REC IN MODULE   15920021
*                                                                       15940021
*********************************************************************** 15960021
*                                                                       15980021
*              READ TXT                                                 16000021
*                                                                       16020021
*********************************************************************** 16040021
*                                                                       16060021
RDSETUP  LR    PARM,WORKA               GET ADDR FOR TEXT READ          16080021
         MVI   DADDR,X'00'              GET RID OF CCW OP CODE          16100021
         A     PARM,DADDR               ADD ADDR FROM CONTROL REC       16120021
         L     ZERO,DCCOUNT             GET COUNT FROM CONTROL REC      16140021
         N     ZERO,COUNTAND            CLEAR TOP HALF WORD             16160021
         SR    ZERO,CUM                 SUBTRACT CUMULATING REGISTER    16180021
*                                       FROM COUNT-AMOUNT DELETED       16200021
*                                       FROM END                        16220021
         LR    WORKA,PARM               GET ADDR IN ANOTHER REG         16240021
         AR    WORKA,ZERO               ADD COUNT TO ADDR               16260021
         C     WORKA,CMLOWTBL           SUM EXCEED LOW TABLE ADDR       16280021
         BNH   LASTXT                   NO-SEE IF LAST TXT REC          16300021
         B     TOOBIG                   PRINT ERROR MESSAGE             16320021
LASTXT   TM    DTYPE,ELTXT              TXT REC LAST IN MODULE          16340021
         BZ    IDDEL                                                    16360021
         TM    CMLIBFLG,CQAUTOC         AUTOCALL BIT ON                 16380021
         BO    LMRDTXT                  YES-READ ONLY TEXT              16400021
         OI    CMIOFLGS,CQIGNCR         SET IGNORE CONTROL REC BIT ON   16420021
IDDEL    TM    CMLIBFLG,CQDELETE        ANY ID'S TO BE DELETED          16440021
         BO    LMRDTXT                  YES-READ ONLY TEXT              16460021
RDTAC    LNR   ZERO,ZERO                INDICATE READ TXT AND CONTROL   16480021
*                                       MAKE REG0 NEGATIVE              16500021
LMRDTXT  L     BRANCH,READRTN           GET ADDRESS OF READ ROUTINE     16520021
         BALR  RETURN,BRANCH            GO TO READ                      16540021
         TM    CMIOFLGS,CQEOCB          END OF CONCATENATION            16560021
         BZ    ANYDEL                   NO-ANY TXT TO BE DELETED        16580021
         TM    CMIOFLGS,CQEOFSB         END OF FILE ON FIRST READ       16600021
         BZ    ANYDEL                   NO-ANY TXT TO BE DELETED        16620021
         NI    CMLIBFLG,CQFF-CQDELETE-CQKEEPS CLEAR DELETE AND KEEP     16640021
*                                             SOME BITS                 16660021
         LA    ZERO,ERINPT6             INVALID INPUT FROM LOAD MOD     16680021
*                                       TEXT RECORD EXPECTED-NOT REC    16700021
         L     BRANCH,LOGRTN            GET ADDR OF LOG ROUTINE         16720021
         BALR  RETURN,BRANCH            GO TO LOG ERROR MESSAGE         16740021
         B     PROCEOM                  GO TO PROCESS END OF MOD        16760021
ANYDEL   TM    CMLIBFLG,CQDELETE        ANY TEXT TO BE DELETED          16780021
         BO    ALLDEL                   YES-ALL TO BE DELETED           16800021
DELALL   LTR   ZERO,ZERO                CONTROL REC READ                16820021
*                                       REG0 LESS THAN ZERO             16840021
         BNL   PROCEOM                  NO-GO TO PROCESS EOM            16860021
         B     RDCNTRL1                                                 16880021
*                                                                       16900021
*********************************************************************** 16920021
*                                                                       16940021
*              DELETE SOME TXT                                          16960021
*                                                                       16980021
*********************************************************************** 17000021
*                                                                       17020021
ALLDEL   NI    CMLIBFLG,CQFF-CQDELETE   TURN OFF DELETE TXT BIT         17040021
         TM    CMLIBFLG,CQKEEPS         ALL TXT TO BE DELETED           17060021
         BZ    DELALL                   YES-DELETE ALL                  17080021
         NI    CMLIBFLG,CQFF-CQKEEPS    TURN OFF KEEP SOME BIT          17100021
         LR    WORKA,PARM               GET ADDR OF FIRST TXT READ      17120021
         L     PTR,CMBLDLPT             RESTORE PTR TO FIRST ID         17140021
         LH    LNG,DCNTIDLN             GET LENGTH OF ID/LENGTH LIST    17160021
         LA    WORKB,EIDLNG             GET LENGTH OF EACH ENTRY        17180021
         LNR   WORKB,WORKB              MAKE NEGATIVE FOR DECREMENT     17200021
*                                                                       17220021
*********************************************************************** 17240021
*                                                                       17260021
*              MOVE TXT TO CORRECT LOCATION                             17280021
*                                                                       17300021
*********************************************************************** 17320021
*                                                                       17340021
GETID    BXLE  LNG,WORKB,RDCNTRL                                        17360021
         LH    ID,0(PTR)                                                17380021
         LH    CUM,ELENGTH(PTR)         GET LENGTH OF CSECT             17400021
         L     BRANCH,RENUMID           GET ADDR OF TRANSID             17420021
         BALR  RETURN,BRANCH            GET ADDR OF RNT ENTRY           17440021
         TM    ESDTYPE(CESD),EDELETE    THIS ENTRY MARKED DELETE        17460021
         BO    GETNXT                   YES-GET NEXT ID                 17480021
         L     PARM,ESDLAA(CESD)        GET ADDR OF THIS ID FROM CESD   17500021
         CR    WORKA,PARM               TXT IN RIGHT PLACE              17520021
         BE    GETNXT                   YES-GET NEXT ID                 17540021
         LA    ZERO,256                 GET CONSTANT 256 FOR TEST       17560021
MOVELOOP CR    CUM,ZERO                 LENGTH GREATER THAN 256         17580021
         BNH   MOVELESS                 NO-MOVE REMAINING BYTES         17600021
         MVC   0(256,PARM),0(WORKA)     MOVE 256 CHARACTERS             17620021
         AR    WORKA,ZERO               INCREMENT MOVE ADDRESSES        17640021
         AR    PARM,ZERO                                                17660021
         SR    CUM,ZERO                 DECREMENT LENGTH                17680021
         B     MOVELOOP                 COMPARE-STILL GREATER THAN 256  17700021
LASTMOVE MVC   0(1,PARM),0(WORKA)       MOVE FOR LESS THAN 256          17720021
MOVELESS BCTR  CUM,0                    DECREMENT MOVE FOR EXECUTE MVC  17740021
         EX    CUM,LASTMOVE             MOVE LAST TXT                   17760021
         LA    CUM,1(CUM)               GET BACK TO CORRECT LENGTH      17780021
GETNXT   AR    WORKA,CUM                POINT TO NEXT CESECT            17800021
         LA    PTR,EIDLNG(PTR)          GET ADDR OF NEXT ENTRY IN       17820021
*                                       ID/LENGTH LIST                  17840021
         B     GETID                                                    17860021
      EJECT                                                             17880021
*********************************************************************** 17900021
*   ERROR LOG ROUTINE --- THIS ROUTINE FORMATS AND PRINTS ERROR         17920021
*  MESSAGE ON THE SYSPRINT AND SYSTERM DATA SETS.IF A SEV 4 ERROR IS  * 17940021
*  DETECTED RETURN IS TO THE HIGHEST LEVEL CALLING ROUTINE.           * 17960021
*                                                                       17980021
*                                                                       18000021
*                                                                       18020021
*    UPON ENTRY -- REGISTER 0 CONTAINS A MESSAGE CODE                   18040021
*                  REGISTER 1 CONTAINS A POINTER TO QUALIFYING          18060021
*                 INFORMATION (IF IT EXISTS)                            18080021
*                                                                       18100021
*                                                                       18120021
         ENTRY HEWERROR                                                 18140021
*                                                                       18160021
*********************************************************************** 18180021
HEWERROR SAVE  (14,12),,*         SAVE CALLERS REGISTERS                18200021
         USING HEWERROR,R15       IDENTIFY ENTRY POINT                  18220021
         L     R12,AUTOCALL            LOAD CSECT BASE                  18240021
         DROP  R15                       DROP ENTRY POINT BASE          18260021
         USING HEWACALL,R12       AND IDENTIFY CSECT BASE               18280021
         SPACE                                                          18300021
         L     R13,8(R13)          GET NEXT SAVE AREA POINTER           18320021
         SPACE                                                          18340021
         LR    R2,R0               MOVE ERROR CODE                      18360021
         LA    R3,1                  SET BIT                            18380021
         SLL   R3,0(R2)                SHIFT BY ERROR CODE              18400021
         O     R3,CMBITMAP               INSERT INTO BITMAP             18420021
         ST    R3,CMBITMAP                 AND STORE BITMAP BACK        18440021
*                                                                       18460021
         AR    R2,R2               FORM INDEX                           18480021
         AR    R2,R2                 FROM ERROR CODE                    18500021
*                                                                       18520021
         TM    CMPRMFLG,CQTERM     WAS TERM OPTION PASSED               18540021
         BNO   RRCHKPRT            NO. CHECK SYSPRINT                   18560021
         L     R8,CMTRMREC         YES. GET PTR TO TERM BUFFER          18580021
         LA    R9,TRMRECSZ-MSGPLEN  MAXIMUM LENGTH OF IDENTIFYING INFO  18600021
         BAL   R14,RRSETUP         MOVE MESSAGE IN                      18620021
         L     R15,TRMRTN          AND PRINT IT                         18640021
         BALR  R14,R15                                                  18660021
RRCHKPRT TM    CMSTATUS,CQPRTOPN   IS THE SYSPRINT DATA SET OPEN        18680021
         BZ    RRERCODE              NO - DON'T SET UP MESSAGE          18700021
*                                                                       18720021
         LH    R6,CMWTBFCT         IS THERE ANYTHING                    18740021
         LTR   R6,R6                 IN THE PRINT BUFFER                18760021
         BZ    RRMESSG                 NO - DON'T PURGE                 18780021
*                                                                       18800021
         L     R15,PRTRTN            YES - GO PURGE                     18820021
         BALR  R14,R15                 CURRENT PRINT BUFFER             18840021
*                                                                       18860021
RRMESSG  L     R8,CMPUTREC         GET POINTER TO PRINT BUFFER          18880021
         LH    R9,CMWLRECL         GET LENGTH OF PRINT BUFFER           18900021
         LA    R3,MSGPLEN          GET LENGTH OF PREFIX                 18920021
         SR    R9,R3               GET LENGTH OF QUALIFYING INFO        18940021
         BAL   R14,RRSETUP         MOVE MESSAGE IN                      18960021
         B     RRPRNT              AND GO PRINT IT                      18980021
*                                                                       19000021
*              SET UP MESSAGE IN BUFFER POINTED TO BY R8                19020021
*        R9 CONTAINS MAXIMUM LENGTH OF QUALIFYING INFO                  19040021
         USING MSGDSECT,R8                                              19060021
RRSETUP  EQU   *                                                        19080021
*                                                                       19100021
         L     R7,ERTABLE(R2)      GET POINTER TO MESSAGE NUMBER        19120021
         MVC   MSGPREFX(4),RRPREFX   MOVE PREFIX TO PRINT BUFFER        19140021
         MVC   MSGNUMBR(3),0(R7)       AND MOVE IN MESSAGE NUMBER       19160021
*                                                                       19180021
         SR    R6,R6               GET QUALIFYING                       19200021
         SLDL  R6,8                  DATA LENGTH                        19220021
         LTR   R6,R6               IS THERE ANY                         19240021
         BZ    RRSETRTN            NO. RETURN                           19260021
*                                                                       19280021
         CR    R6,R9               WILL IT OVERFLOW BUFFER              19300021
         BNH   RRMOV               NO. OKAY                             19320021
         LR    R6,R9               YES. TRUNCATE IT                     19340021
RRMOV    EQU   *                                                        19360021
         BCTR  R6,0                DECREMENT LENGTH FOR EXECUTE         19380021
         EX    R6,RRXTRAMV           AND MOVE INFO INTO PRINT BUFFER    19400021
RRSETRTN BR    R14                 RETURN                               19420021
*                                                                       19440021
RRPRNT   L     R15,PRTRTN          AND PRINT                            19460021
         BALR  R14,R15               THE ERROR MESSAGE                  19480021
*                                                                       19500021
RRERCODE L     R7,ERTABLE(R2)      RELOAD POINTER TO MESSAGE NUMBER     19520021
         IC    R15,2(R7)             PICK UP LOW ORDER CHARACTER        19540021
         LA    R6,7           GET SEVERITY CODE                         19560021
         NR    R15,R6                                                   19580021
         LA    R6,1                                                     19600021
         TM    CMPRMFLG,CQLET      IS 'LET' SPECIFIED                   19620021
         BZ    RRTSTCOD           NO                                    19640021
         SR    R15,R6         YES. REDUCE CONDITION CODE BY 1           19660021
RRTSTCOD CR    R15,R6         IS IT ONE OR LESS                         19680021
         BNH   RRTRYH         YES. OKAY                                 19700021
         OI    CMFLAG4,CQNOEX      SET 'NO EXECUTION' FLAG              19720021
RRTRYH   IC    R15,2(R7)      RELOAD CODE                               19740021
         LA    R6,4                    AND OFF ALL                      19760021
         NR    R15,R6                    BUT SEVERITY 4                 19780021
RRABORT  L     R13,4(R13)          IF MESSAGE NOT SEVERITY 4 -- RETURN  19800021
         BZ    RRRETURN                                                 19820021
         SPACE                                                          19840021
*   A SEVERITY 4 ERROR HAS BEEN DETECTED ---- EXECUTION IS NO LONGER    19860021
*  POSSIBLE.  THE FOLLOWING CODE WILL PROCEED BACK THROUGH THE SAVE     19880021
*  AREA CHAIN TO THE HIGHEST LEVEL ROUTINE SO THAT DATA-SETS CAN BE     19900021
*  CLOSED AND MAIN STORAGE FREED.                                       19920021
*                                                                       19940021
*                                                                       19960021
         OI    CMSTATUS,CQABORT         SET ABORT BIT FOR CONTROL       19980021
         TM    CMSTATUS,CQRETURN        RETURN REQUESTED-SEVERITY 4     20000021
         BO    RRRETURN                                                 20020021
         C     R13,CMFSTSAV        DOES R13 POINT TO FIRST SAVE AREA    20040021
         BNE   RRABORT               NO - GO TRY NEXT                   20060021
*                                                                       20080021
RRRETURN RETURN (14,12),T                                               20100021
*                                                                       20120021
*                                                                       20140021
RRXTRAMV MVC   MSGTEXT(0),0(R1)    EXECUTED MOVE TEXT INTO MESSAGE      20160021
         EJECT                                                          20180021
*********************************************************************** 20200021
*                                                                     * 20220021
*   ERROR BIT-MAP PROCESSOR --- DIAGNOSTIC MESSAGE DICTIONARY PRINT   * 20240021
*                                                                     * 20260021
*   THE BIT MAP IS CHECKED FOR ALL ZERO (NO ERRORS)                   * 20280021
*   IF IT IS ALL ZERO--IT SETS THE CONDITION CODE AND RETURNS         * 20300021
*                                                                     * 20320021
*   MESSAGES TO BE PRINTED ARE SELECTED VIA INDEX INTO THE            * 20340021
*   MESSAGE TABLE USING THE POSITION OF THE BIT SET IN THE BIT        * 20360021
*   MAP AS THE INDEX VALUE.                                           * 20380021
*                                                                     * 20400021
*   PRINTS MESSAGES ON SYSPRINT AND/OR SYSTERM.                       * 20420021
*   IF NEITHER ARE WANTED, THE MESSAGES ARE                           * 20440021
*   NOT PRINTED BUT THE BIT MAP IS STILL SCANNED FOR THE              * 20460021
*   HIGHEST SEVERITY CODE.                                            * 20480021
*                                                                     * 20500021
*   BEFORE RETURNING THE SEVERITY CODE IS CHANGED TO THE CONDITION    * 20520021
*   CODE AND SET IN REGISTER 15.                                      * 20540021
*                                                                     * 20560021
*********************************************************************** 20580021
         SPACE 3                                                        20600021
HEWBTMAP SAVE  (14,12),,*                                               20620021
         ENTRY HEWBTMAP                                                 20640021
         USING HEWBTMAP,R15                                             20660021
         L     R12,AUTOCALL                                             20680021
         DROP  R15                                                      20700021
         USING HEWACALL,R12                                             20720021
         SPACE                                                          20740021
         L     R13,8(R13)                                               20760021
         SPACE                                                          20780021
         SPACE                                                          20800021
         L     R3,CMBITMAP         LOAD BIT-MAP                         20820021
         SR    R0,R0                    INITIALIZE SEVERITY CODE        20840021
         LTR   R3,R3                 IS IT ALL ZERO                     20860021
         BZ    BMRETURN                YES - RETURN                     20880021
         SPACE                                                          20900021
         MVI   CMPRTCTL,CTSPACE3       SET UP CARRIAGE CONTROL          20920021
         SR    R2,R2               SET INDEX TO ZERO                    20940021
         LA    R5,127                  SET MASK                         20960021
BMCHKBIT LA    R4,1                CHECK IF LOW ORDER                   20980021
         NR    R4,R3                 BIT IS SET IN BIT-MAP              21000021
         BZ    BMNXTCHK                NO - DON'T PRINT THIS MESSAGE    21020021
         L     R6,ERTABLE(R2)           GET PTR TO ERROR TABLE          21040021
         IC    R0,2(R6)                 SAVE SEVERITY CODE              21060021
         TM    CMPRMFLG,CQTERM     WAS TERM OPTION PASSED               21080021
         BZ    BMCHKPRT            NO. CHECK SYSPRINT                   21100021
         L     R8,CMTRMREC         YES. GET POINTER TO TERM BUFFER      21120021
         BAL   R14,BMSETUP         MOVE MESSAGE IN                      21140021
         L     R15,TRMRTN          AND                                  21160021
         BALR  R14,R15             PRINT IT                             21180021
BMCHKPRT TM    CMSTATUS,CQPRTOPN   PRINT OPEN                           21200021
         BZ    BMNXTCHK                 NO-SKIP BIT MAP                 21220021
         L     R8,CMPUTREC             YES - GET POINTER TO PRINT BUF   21240021
         L     R6,ERTABLE(R2)      GET PTR TO ERROR TABLE               21260021
         BAL   R14,BMSETUP         MOVE MESSAGE IN                      21280021
         B     BMPRNT              AND PRINT IT                         21300021
BMSETUP  EQU   *                                                        21320021
         MVC   1(4,R8),RRPREFX     MOVE 'IEW1' TO PRINT BUFFER          21340021
         MVC   5(3,R8),0(R6)         MOVE IN MESSAGE NUMBER             21360021
         SR    R7,R7                                                    21380021
         LA    R8,12(R8)           UPDATE PRINT BUFFER POINTER          21400021
         SPACE                                                          21420021
BMMESSG  LA    R6,4(R6)            JUMP TO NEXT LENGTH-ADCON PAIR       21440021
         L     R9,0(R6)              LOAD THE ADCON TO PHRASE           21460021
         IC    R7,0(R6)              LOAD THE LENGTH OF THE PHRASE      21480021
         NR    R7,R5                   KNOCK OFF INDICATOR BIT          21500021
         EX    R7,MVPHRASE             AND MOVE THE PHRASE TO PRNT BUF  21520021
         LTR   R9,R9               WAS THAT THE LAST PHRASE IN MESSAGE  21540021
         LA    R8,1(R7,R8)           UPDATE THE PRINT BUFFER POINTER    21560021
         BC    11,BMMESSG            N/ - GO MOVE NEXT PHRASE           21580021
         BR    R14                 RETURN                               21600021
BMPRNT   EQU   *                                                        21620021
         SPACE                                                          21640021
         L     R15,PRTRTN            YES - GET ADDRESS OF PRINT RTN     21660021
         BALR  R14,R15                 AND GO PRINT THE MESSAGE         21680021
         SPACE 2                                                        21700021
BMNXTCHK SRA   R3,1                SHIFT BIT-MAP RIGHT                  21720021
         LA    R2,4(R2)              UPDATE INDEX INTO ERROR TABLE      21740021
         BNZ   BMCHKBIT                AND GO CHECK THIS BIT (IF ANY)   21760021
         SPACE 3                                                        21780021
BMRETURN L     R13,4(R13)          ALL DONE - PICK UP PREVIOUS SAVE     21800021
         LA    R15,7                    PUT SEVERITY CODE INTO          21820021
         NR    R15,R0                   REGISTER 15 AND                 21840021
         SLL   R15,2                             CHANGE TO CONDITION C  21860021
         BZ    BMRET                    RETURN IF CONDITION CODE ZERO   21880021
         LA    R14,8                    SEVERITY 2 CONSTANT     YA00126 21890001
         CR    R15,R14                  CK FOR ERROR GT SEV 2   YA00126 21892001
         BH    BMRET                    YES GT SEV 2            YA00126 21894001
         TM    CMPRMFLG,CQLET           LET SPECIFIED                   21900021
         BZ    BMRET                    NO-RETURN                       21920021
         LA    R10,4                    SUBTRACT FOUR FROM              21940021
         SR    R15,R10                  CONDITION CODE                  21960021
BMRET    RETURN (14,12),T,RC=(15)       RETURN                          21980021
         SPACE                                                          22000021
MVPHRASE MVC   0(0,R8),0(R9)       EXECUTED MOVE PHRASE TO PRINT BUFFER 22020021
         EJECT                                                          22040021
ERTABLE  DS    0F                                                       22060021
         DC    AL1(8)                                                   22080021
         DC    AL3(MSRELO1)                                             22100021
         DC    AL1(0)                                                   22120021
         DC    AL3(MSENTR1)                                             22140021
         DC    AL1(80)                                                  22160021
         DC    AL3(MSINPT8)                                             22180021
         SPACE                                                          22200021
         DC    AL1(0)                                                   22220021
         DC    AL3(MSINPT10)                                            22240021
         DC    AL1(0)                                                   22260021
         DC    AL3(MSINPT2)                                             22280021
         DC    AL1(8)                                                   22300021
         DC    AL3(MSRELO2)                                             22320021
         DC    AL1(8)                                                   22340021
         DC    AL3(MSINPT4)                                             22360021
         DC    AL1(0)                                                   22380021
         DC    AL3(MSINPT5)                                             22400021
         DC    AL1(0)                                                   22420021
         DC    AL3(MSINPT7)                                             22440021
         DC    AL1(80)                                                  22460021
         DC    AL3(MSINPT9)                                             22480021
         DC    AL1(8)                                                   22500021
         DC    AL3(MSINPT1)                                             22520021
         SPACE                                                          22540021
         DC    AL1(0)                                                   22560021
         DC    AL3(MSINPT3)                                             22580021
         DC    AL1(8)                                                   22600021
         DC    AL3(MSENTR2)                                             22620021
         DC    AL1(0)                                                   22640021
         DC    AL3(MSIOUT4)                                             22660021
         DC    AL1(0)                                                   22680021
         DC    AL3(MSINPT6)                                             22700021
         SPACE                                                          22720021
         DC    AL1(8)                                                   22740021
         DC    AL3(MSIOUT3)                                             22760021
         DC    AL1(8)                                                   22780021
         DC    AL3(MSIOUT1)                                             22800021
         DC    AL1(67)                                                  22820021
         DC    AL3(MSIOUT2)                                             22840021
         DC    AL1(0)                                                   22860021
         DC    AL3(MSSIZE2)                                             22880021
         DC    AL1(0)                                                   22900021
         DC    AL3(MSSIZE3)                                             22920021
         DC    AL1(8)                                                   22940021
         DC    AL3(MSIDEN1)                                             22960021
         DC    AL1(8)                                                   22980021
         DC    AL3(MSIDEN2)                                             23000021
         DC    AL1(8)                                            YM5575 23010001
         DC    AL3(MSINPT11)                                     YM5575 23012001
         SPACE                                                          23020021
PHRASE1  DC    C'WARNING - '                                            23040021
PLNGTH1  EQU   *-PHRASE1                                                23060021
         SPACE                                                          23080021
PHRASE2  DC    C'ERROR - '                                              23100021
PLNGTH2  EQU   *-PHRASE2                                                23120021
         SPACE                                                          23140021
PHRASE3  DC    C'UNRESOLVED EXTERNAL REFERENCE'                         23160021
PLNGTH3  EQU   *-PHRASE3                                                23180021
         SPACE                                                          23200021
PHRASE4  DC    C' (NOCALL SPECIFIED)'                           YM05562 23220001
PLNGTH4  EQU   *-PHRASE4                                                23240021
         SPACE                                                          23260021
PHRASE5  DC    C'NO '                                                   23280021
PLNGTH5  EQU   *-PHRASE5                                                23300021
         SPACE                                                          23320021
PHRASE6  DC    C'ENTRY POINT '                                          23340021
PLNGTH6  EQU   *-PHRASE6                                                23360021
         SPACE                                                          23380021
PHRASE7  DC    C'RECEIVED'                                              23400021
PLNGTH7  EQU   *-PHRASE7                                                23420021
         SPACE                                                          23440021
PHRASE8  DC    C'INVALID'                                               23460021
PLNGTH8  EQU   *-PHRASE8                                                23480021
         SPACE                                                          23500021
PHRASE9  DC    C' NOT AN OBJECT RECORD'                                 23520021
PLNGTH9  EQU   *-PHRASE9                                                23540021
         SPACE                                                          23560021
PHRASE10 DC    C' SPECIFIED'                                            23580021
PLNGTH10 EQU   *-PHRASE10                                               23600021
         SPACE                                                          23620021
PHRASE11 DC    C'UNACCEPTABLE '                                         23640021
PLNGTH11 EQU   *-PHRASE11                                               23660021
         SPACE                                                          23680021
PHRASE12 DC    C'RECORD FORMAT'                                         23700021
PLNGTH12 EQU   *-PHRASE12                                               23720021
         SPACE                                                          23740021
PHRASE13 DC    C'NO TEXT '                                              23760021
PLNGTH13 EQU   *-PHRASE13                                               23780021
         SPACE                                                          23800021
PHRASE14 DC    C' RECORD FROM '                                         23820021
PLNGTH14 EQU   *-PHRASE14                                               23840021
         SPACE                                                          23860021
PHRASE15 DC    C'OBJECT MODULE'                                         23880021
PLNGTH15 EQU   *-PHRASE15                                               23900021
         SPACE                                                          23920021
PHRASE16 DC    C'LOAD MODULE'                                           23940021
PLNGTH16 EQU   *-PHRASE16                                               23960021
         SPACE                                                          23980021
         SPACE                                                          24000021
PHRASE18 DC    C'CARD '                                                 24020021
PLNGTH18 EQU   *-PHRASE18                                               24040021
         SPACE                                                          24060021
PHRASE19 DC    C' LENGTH'                                               24080021
PLNGTH19 EQU   *-PHRASE19                                               24100021
         SPACE                                                          24120021
PHRASE20 DC    C'DOUBLY DEFINED ESD'                                    24140021
PLNGTH20 EQU   *-PHRASE20                                               24160021
         SPACE                                                          24180021
PHRASE21 DC    C' 2 BYTE ADCON'                                         24200021
PLNGTH21 EQU   *-PHRASE21                                               24220021
         SPACE                                                          24240021
PHRASE22 DC    C' ID '                                                  24260021
PLNGTH22 EQU   *-PHRASE22                                               24280021
         SPACE                                                          24300021
PHRASE23 DC    C'BLKSIZE IS '                                           24320021
PLNGTH23 EQU   *-PHRASE23                                               24340021
         SPACE                                                          24360021
PHRASE24 DC    C' (VARIABLE ON INPUT)'                                  24380021
PLNGTH24 EQU   *-PHRASE24                                               24400021
         SPACE                                                          24420021
PHRASE25 DC    C' BUT NOT MATCHED'                                      24440021
PLNGTH25 EQU   *-PHRASE25                                               24460021
         SPACE                                                          24480021
PHRASE26 DC    C'I/O ERROR WHILE SEARCHING LIBRARY DIRECTORY'           24500021
PLNGTH26 EQU   *-PHRASE26                                               24520021
         SPACE                                                          24540021
PHRASE27 DC    C'DDNAME '                                               24560021
PLNGTH27 EQU   *-PHRASE27                                               24580021
         SPACE                                                          24600021
PHRASE28 DC    C'CANNOT BE OPENED'                                      24620021
PLNGTH28 EQU   *-PHRASE28                                               24640021
         SPACE                                                          24660021
PHRASE29 DC    C'HAD SYNCHRONOUS ERROR'                                 24680021
PLNGTH29 EQU   *-PHRASE29                                               24700021
         SPACE                                                          24720021
         SPACE                                                          24740021
PHRASE31 DC    C'AVAILABLE STORAGE EXCEEDED'                            24760021
PLNGTH31 EQU   *-PHRASE31                                               24780021
         SPACE                                                          24800021
PHRASE32 DC    C' TOO LARGE'                                            24820021
PLNGTH32 EQU   *-PHRASE32                                               24840021
         SPACE                                                          24860021
PHRASE33 DC    C'TOO MANY EXTERNAL NAMES IN INPUT MODULE'               24880021
PLNGTH33 EQU   *-PHRASE33                                               24900021
         SPACE 2                                                        24920021
PHRASE34 DC    C'END '                                                  24940021
PLNGTH34 EQU   *-PHRASE34                                               24960021
PHRASE35 DC    C'IDENTIFICATION FAILED'                                 24980021
PLNGTH35 EQU   *-PHRASE35                                               25000021
PHRASE36 DC    C' - DUPLICATE PROGRAM NAME FOUND'                       25020021
PLNGTH36 EQU   *-PHRASE36                                               25040021
PHRASE37 DC    C'COMMON EXCEEDS SIZE OF CSECT WITH SAME NAME'    YM5575 25050001
PLNGTH37 EQU   *-PHRASE37                                        YM5575 25052001
         DS    0F                                                       25060021
MSRELO1  DC    C'001 '                                                  25080021
         DC    AL1(PLNGTH1-1),AL3(PHRASE1)                              25100021
         DC    AL1(PLNGTH3-1),AL3(PHRASE3)                              25120021
         DC    AL1(128+PLNGTH4-1),AL3(PHRASE4)                          25140021
         SPACE                                                          25160021
MSRELO2  DC    C'012 '                                                  25180021
         DC    AL1(PLNGTH2-1),AL3(PHRASE2)                              25200021
         DC    AL1(128+PLNGTH3-1),AL3(PHRASE3)                          25220021
         SPACE                                                          25240021
MSIOUT1  DC    C'024 '                                                  25260021
         DC    AL1(PLNGTH2-1),AL3(PHRASE2)                              25280021
         DC    AL1(PLNGTH27-1),AL3(PHRASE27)                            25300021
         DC    AL1(128+PLNGTH28-1),AL3(PHRASE28)                        25320021
         SPACE                                                          25340021
MSIOUT2  DC    C'034 '                                                  25360021
         DC    AL1(PLNGTH2-1),AL3(PHRASE2)                              25380021
         DC    AL1(PLNGTH27-1),AL3(PHRASE27)                            25400021
         DC    AL1(128+PLNGTH29-1),AL3(PHRASE29)                        25420021
         SPACE                                                          25440021
MSIOUT3  DC    C'044 '                                                  25460021
         DC    AL1(PLNGTH2-1),AL3(PHRASE2)                              25480021
         DC    AL1(PLNGTH11-1),AL3(PHRASE11)                            25500021
         DC    AL1(PLNGTH12-1),AL3(PHRASE12)                            25520021
         DC    AL1(128+PLNGTH24-1),AL3(PHRASE24)                        25540021
         SPACE                                                          25560021
MSIOUT4  DC    C'053 '                                                  25580021
         DC    AL1(PLNGTH2-1),AL3(PHRASE2)                              25600021
         DC    AL1(128+PLNGTH26-1),AL3(PHRASE26)                        25620021
         SPACE                                                          25640021
         SPACE                                                          25660021
MSINPT1  DC    C'072 '                                                  25680021
         DC    AL1(PLNGTH2-1),AL3(PHRASE2)                              25700021
         DC    AL1(PLNGTH23-1),AL3(PHRASE23)                            25720021
         DC    AL1(128+PLNGTH8-1),AL3(PHRASE8)                          25740021
         SPACE                                                          25760021
MSINPT2  DC    C'082 '                                                  25780021
         DC    AL1(PLNGTH2-1),AL3(PHRASE2)                              25800021
         DC    AL1(PLNGTH8-1),AL3(PHRASE8)                              25820021
         DC    AL1(PLNGTH19-1),AL3(PHRASE19)                            25840021
         DC    AL1(128+PLNGTH10-1),AL3(PHRASE10)                        25860021
         SPACE                                                          25880021
MSINPT3  DC    C'093 '                                                  25900021
         DC    AL1(PLNGTH2-1),AL3(PHRASE2)                              25920021
         DC    AL1(PLNGTH13-1),AL3(PHRASE13)                            25940021
         DC    AL1(128+PLNGTH7-1),AL3(PHRASE7)                          25960021
         SPACE                                                          25980021
MSINPT4  DC    C'102 '                                                  26000021
         DC    AL1(PLNGTH2-1),AL3(PHRASE2)                              26020021
         DC    AL1(128+PLNGTH20-1),AL3(PHRASE20)                        26040021
         SPACE                                                          26060021
MSINPT5  DC    C'112 '                                                  26080021
         DC    AL1(PLNGTH2-1),AL3(PHRASE2)                              26100021
         DC    AL1(PLNGTH8-1),AL3(PHRASE8)                              26120021
         DC    AL1(128+PLNGTH21-1),AL3(PHRASE21)                        26140021
         SPACE                                                          26160021
MSINPT6  DC    C'123 '                                                  26180021
         DC    AL1(PLNGTH2-1),AL3(PHRASE2)                              26200021
         DC    AL1(PLNGTH8-1),AL3(PHRASE8)                              26220021
         DC    AL1(PLNGTH14-1),AL3(PHRASE14)                            26240021
         DC    AL1(128+PLNGTH16-1),AL3(PHRASE16)                        26260021
         SPACE                                                          26280021
MSINPT7  DC    C'132 '                                                  26300021
         DC    AL1(PLNGTH2-1),AL3(PHRASE2)                              26320021
         DC    AL1(PLNGTH8-1),AL3(PHRASE8)                              26340021
         DC    AL1(PLNGTH22-1),AL3(PHRASE22)                            26360021
         DC    AL1(128+PLNGTH7-1),AL3(PHRASE7)                          26380021
         SPACE                                                          26400021
MSINPT8  DC    C'141 '                                                  26420021
         DC    AL1(PLNGTH1-1),AL3(PHRASE1)                              26440021
         DC    AL1(PLNGTH18-1),AL3(PHRASE18)                            26460021
         DC    AL1(PLNGTH7-1),AL3(PHRASE7)                              26480021
         DC    AL1(128+PLNGTH9-1),AL3(PHRASE9)                          26500021
         SPACE                                                          26520021
MSINPT9  DC    C'152 '                                                  26540021
         DC    AL1(PLNGTH2-1),AL3(PHRASE2)                              26560021
         DC    AL1(PLNGTH8-1),AL3(PHRASE8)                              26580021
         DC    AL1(PLNGTH14-1),AL3(PHRASE14)                            26600021
         DC    AL1(128+PLNGTH15-1),AL3(PHRASE15)                        26620021
         SPACE                                                          26640021
MSINPT10 DC    C'182 '                                                  26660021
         DC    AL1(PLNGTH2-1),AL3(PHRASE2)                              26680021
         DC    AL1(PLNGTH5-1),AL3(PHRASE5)                              26700021
         DC    AL1(PLNGTH34-1),AL3(PHRASE34)                            26720021
         DC    AL1(PLNGTH18-1),AL3(PHRASE18)                            26740021
         DC    AL1(128+PLNGTH7-1),AL3(PHRASE7)                          26760021
MSINPT11 DC    C'232 '                                           YM5575 26770001
         DC    AL1(PLNGTH2-1),AL3(PHRASE2)                       YM5575 26772001
         DC    AL1(128+PLNGTH37-1),AL3(PHRASE37)                 YM5575 26774001
MSENTR1  DC    C'161 '                                                  26780021
         DC    AL1(PLNGTH1-1),AL3(PHRASE1)                              26800021
         DC    AL1(PLNGTH5-1),AL3(PHRASE5)                              26820021
         DC    AL1(PLNGTH6-1),AL3(PHRASE6)                              26840021
         DC    AL1(128+PLNGTH7-1),AL3(PHRASE7)                          26860021
         SPACE                                                          26880021
MSENTR2  DC    C'173 '                                                  26900021
         DC    AL1(PLNGTH2-1),AL3(PHRASE2)                              26920021
         DC    AL1(PLNGTH6-1),AL3(PHRASE6)                              26940021
         DC    AL1(PLNGTH7-1),AL3(PHRASE7)                              26960021
         DC    AL1(128+PLNGTH25-1),AL3(PHRASE25)                        26980021
         SPACE                                                          27000021
MSSIZE2  DC    C'194 '                                                  27020021
         DC    AL1(PLNGTH2-1),AL3(PHRASE2)                              27040021
         DC    AL1(128+PLNGTH31-1),AL3(PHRASE31)                        27060021
         SPACE                                                          27080021
MSSIZE3  DC    C'204 '                                                  27100021
         DC    AL1(PLNGTH2-1),AL3(PHRASE2)                              27120021
         DC    AL1(128+PLNGTH33-1),AL3(PHRASE33)                        27140021
MSIDEN1  DC    C'214 '                                                  27160021
         DC    AL1(PLNGTH35-1),AL3(PHRASE35)                            27180021
         DC    AL1(128+PLNGTH36-1),AL3(PHRASE36)                        27200021
MSIDEN2  DC    C'224 '                                                  27220021
         DC    AL1(128+PLNGTH35-1),AL3(PHRASE35)                        27240021
RRPREFX  DC    C'IEW1'                                                  27260021
AUTOCALL DC    A(HEWACALL)                                              27280021
LOADRTN  DC    A(HEWLODE)         LOAD MODULE PROCESSOR                 27300021
RLDRTN   DC    V(HEWLRLD)         RLD PROCESSOR                         27320021
READRTN  DC    V(HEWLREAD)        READ ROUTINE                          27340021
CESDRTN  DC    V(HEWLESD)         ESD AND CESD PROCESSOR                27360021
LOGRTN   DC    A(HEWERROR)        ERROR LOG ROUTINE                     27380021
EOMRTN   DC    V(HEWLEND)         END CARD AND END  OF MODULE           27400021
*                                       PROCESSOR                       27420021
RENUMID  DC    V(TRANSID)               RENUMBER TBL-ID ROUTINE         27440021
MAPRTN   DC    V(HEWLMAP)         MAP PROCESSOR                         27460021
OPNSYSLI DC    V(HEWOPNLB)        OPEN SYSLIB ROUTINE                   27480021
PRTRTN   DC    V(HEWLPRNT)        PRINT ROUTINE                         27500021
TRMRTN   DC    V(HEWTERM)         SYSTERM OUTPUT ROUTINE                27520021
RLDRES   DC    V(HEWLERTN)        RLD RESOLUTION ROUTINE                27540021
PRIMRTN  DC    V(HEWPRIME)        BUFFER PRIME ROUTINE                  27560021
RELORTN  DC    V(HEWLRELO)        OBJECT MODULE PROCESSOR               27580021
CNVTRTN  DC    V(HEWLCNVT)        CONVERT TO HEX ROUTINE                27600021
COUNTAND DC    X'0000FFFF'              CONSTANT FOR AND INST           27620021
MSG2     DC    C'TOTAL LENGTH'                                          27640021
MSG2LNG  EQU   *-MSG2                                                   27660021
MSG3     DC    C'ENTRY ADDRESS'                                         27680021
MSG3LNG  EQU   *-MSG3                                                   27700021
MAINTDS  DS    37F                                                      27720021
         EJECT                                                          27740021
*   MESSAGE LINE FORMAT DSECT                                           27760021
         SPACE 2                                                        27780021
MSGDSECT DSECT                                                          27800021
         DC    C' '                                                     27820021
MSGPREFX DC    C'IEW0'        MESSAGE PREFIX                            27840021
MSGNUMBR DS    CL3            MESSAGE NUMBER (AND SEVERITY)             27860021
         DC    C'  '                                                    27880021
MSGTEXT  DS    C              QUALIFYING INFORMATION                    27900021
MSGPLEN  EQU   MSGTEXT-MSGDSECT    LENGTH OF PREFIX,ETC                 27920021
CVTSECT  DSECT                                                          27940021
         CVT                                                            27960000
         HEWLDCOM                                                       27980021
DCNTRLB  DSECT                                                          28000021
DTYPE    DS    CL1                      TYPE IDENTIFICATION             28020021
         DS    CL3                                                      28040021
DESID    DS    CL2                      ESDID OF FIRST ESD ITEM         28060021
DCOUNT   DS    CL2                      BYTES OF ESD DATA               28080021
DESDDATA EQU   *                        START OF ESD DATA               28100021
         ORG   DESID                                                    28120021
DCNTIDLN DS    CL2                      BYTES OF ID/LENGTH LIST         28140021
         DS    CL2                                                      28160021
DCCW     EQU   *                        CHANNEL COMMAND WORD            28180021
DADDR    DS    CL4                      DATA ADDRESS                    28200021
DCCOUNT  DS    CL4                      BYTES OF TXT DATA               28220021
DID      DS    CL2                      CESD ENTRY NUMBER               28240021
DLENGTH  DS    CL2                      LENGTH OF TEXT RECORD           28260021
         ORG   DCOUNT                                                   28280021
DRLDCNT  DS    CL2                      BYTES OF RLD INFORMATION        28300021
         DS    CL8                                                      28320021
DRLDDATA EQU   *                        START OF RLD DATA               28340021
CDENTRY  DSECT                                                          28360021
CDCHAIN  DS    4C                       CHAIN ADDR-NEXT ENTRY           28380021
CDROLL   DS    1C                       COUNT OF ROLL OUTS              28400021
CDRPB    DS    3C                       ADDRESS OF PRB                  28420021
CDNAME   DS    8C                       NAME                            28440021
CDENTPT  DS    4C                       RELOCATED ENTRY POINT           28460021
         END                                                            28480021
./  ADD  SSI=80950056,NAME=HEWLDREL
RELO  TITLE 'HEWLRELO-OBJECT MODULE PROCESSING AND RELOCATION'          00020021
*STATUS - CHANGE LEVEL 20                                             * 00040021
*    INCREMENTAL 288 - W-CON ADDED        INC288                        00060021
*A073800                                                         A39336 00062037
*C244900-245000                                                  A39336 00064037
*                                                                A46172 00066037
*                                                                A47048 00068037
*                                                               SA49491 00070037
*                                                               SA56381 00072037
*              APAR FIX 27445 - ZERO/LENGTH CSECTS OKAY                 00080021
*    APAR  30142   DUPLICATE CSECTS            $256300-256400,257200    00100021
*                                              $257400-258000           00120021
*    APAR  30162   BAD IEW1182 MSG             $119100,131200           00140021
*                                                               YA00226 00150001
*                                                               YA00379 00152001
*                                                                YM5575 00154001
*I084200,120900,278300,A128200,278200,M298220-298340            ZA01335 00156002
*A062500-062520                                                 OZ04727 00158037
*DEL062430--062680 REMOVE CODE FOR Z04727(UZ2075)              @ZA10552 00159037
*ADD0624100,0624200  APAR  Z16098 DUPLICATE LRS                @ZA16098 00159537
*D062500-062600                                                @ZA29882 00159737
*        TSO CHANGES FOR IDENTIFY AND INCORE DATA SET                 * 00160021
*FUNCTION/OPERATION:                                                  * 00180021
*        1)HEWLRELO-DETERMINES RECORD TYPE,THEN PASSES CONTROL TO THE * 00200021
*              APPROPRIATE ROUTINE FOR RECORD PROCESSING              * 00220021
*        2)HEWLESD-PROCESSES ESD RECORDS,BUILDS AND MAINTAINS CESD    * 00240021
*        3)HEWLTXT-PROCESSES TXT RECORDS                              * 00260021
*        4)HEWLRLD-PROCESSES RLD RECORDS, BUILDS AND MAINTAINS RLD    * 00280021
*              TABLE                                                  * 00300021
*        5)HEWLEND-PROCESSES END RECORDS,DEFINES ENTRY POINT,UPDATES  * 00320021
*              THE TEXT LOCATION POINTER, CLEARS THE TRANSLATION      * 00340021
*              TABLE                                                  * 00360021
*        6)ALLOCATE-ALLOCATES STORAGE FOR THE CESD,RLD TABLE AND      * 00380021
*              TRANSLATION TABLE                                      * 00400021
*        7)TRANSID-TRANSLATES ESDID TO TRANSLATION TABLE ENTRY ADDRESS* 00420021
*        8)HEWLERTN-RELOCATES RLDS                                    * 00440021
*        9)HEWLMAP-CREATES MAP PRINTOUT                               * 00460021
*       10)HEWLCNVT-CONVERTS BINARY QUANTITIES TO PRINT CHARACTERS    * 00480021
*       11)HEWLMOD - PROCESSES MOD RECORDS                            * 00500021
*ENTRY POINTS:                                                        * 00520021
*        1)HEWLRELO-FOR OBJECT MODULE PROCESSING                      * 00540021
*        2)HEWLESD-FOR ESD PROCESSING                                 * 00560021
*        3)HEWLRLD-FOR RLD PROCESSING                                 * 00580021
*        4)HEWLEND-FOR END OF MODULE PROCESSING                       * 00600021
*        5)TRANSID-FOR ESDID-TRANSLATION TABLE ADDRESS CONVERSION     * 00620021
*        6)HEWLERTN-FOR RELOCATION OF RLDS ON CHAIN                   * 00640021
*        7)HEWLCNVT-FOR CONVERSION TO PRINT CHARACTERS                * 00660021
*        8)HEWLMAP-FOR MAKING MAP ENTRIES                             * 00680021
*INPUT:  ALL ROUTINES EXPECT:                                         * 00700021
*             #13-ADDR OF SAVE AREA                                   * 00720021
*             #14-RETURN ADDRESS                                      * 00740021
*             #11-ADDR.OF COMMUNICATIONS AREA                         * 00760021
*        IN ADDITION:                                                 * 00780021
*           HEWLESD EXPECTS:                                          * 00800021
*             #5-ID OF FIRST ESD ITEM                                 * 00820021
*             #7-LENGTH OF ESD INFORMATION                            * 00840021
*             #8-ADDRESS OF ESD INFORMATION                           * 00860021
*           HEWLRLD EXPECTS:                                          * 00880021
*             #7-LENGTH OF RLD INFORMATION                            * 00900021
*             #8-ADDRESS OF RLD INFORMATION                           * 00920021
*          TRANSID EXPECTS:                                           * 00940021
*             #5-ID TO BE TRANSLATED                                  * 00960021
*           HEWLERTN EXPECTS:                                         * 00980021
*             #1-STARTING ADDRESS OF RLD CHAIN                        * 01000021
*             #9-ADDRESS OF CESD ENTRY TO BE USED FOR RELOCATION      * 01020021
*           HEWLCNVT EXPECTS:                                         * 01040021
*             #1-QUANTITY TO BE CONVERTED                             * 01060021
*           HEWLMAP EXPECTS:                                          * 01080021
*             #9-ADDRESS OF CESD ENTRY TO BE MAPPED                   * 01100021
*           HEWLMOD EXPECTS:                                          * 01120021
*             #7=LENGTH OF MOD INFO                                   * 01140021
*             #8=ADDRESS OF MOD INFO                                  * 01160021
*OUTPUT:    HEWLCNVT: CMXDBLWD CONTAINS CONVERTED VALUE               * 01180021
*          TRANSID:#1-CONTAINS TRANSLATION TABLE ENTRY ADDRESS        * 01200021
*EXTERNAL ROUTINES:                                                   * 01220021
*           HEWLREAD-READ AND DEBLOCK OBJECT RECORDS                  * 01240021
*           HEWLPRNT-PRINT MAP                                        * 01260021
*           HEWERROR-LOG ERRORS                                       * 01280021
*EXITS-NORMAL:TO CALLER                                               * 01300021
*     -ERROR: TO HEWERROR    LA   0,ERRCODE                           * 01320021
*                            L    15,=V(HEWERROR)                     * 01340021
*                             BALR 14,15                              * 01360021
*                                                                     * 01380021
*TABLES/WORKAREAS: REFER TO LOADER PLM FOR DETAILED DESCRIPTION       * 01400021
*        1)CESD                                                       * 01420021
*        2)RLD TABLE                                                  * 01440021
*        3)TRANSLATION TABLE                                          * 01460021
*        4)COMMUNICATIONS AREA(HEWLDCOM)                              * 01480021
*ATTRIBUTES: READ ONLY,REUSABLE,REENTRANT                             * 01500021
*NOTES:  NONE                                                         * 01520021
*********************************************************************** 01540021
         EJECT                                                          01560021
HEWLRELO CSECT                                                          01580021
*                       REGISTER ASSIGNMENTS                          * 01660021
*                                                                     * 01680021
BRANCH   EQU   15                       BRANCH REGISTER                 01700021
RETURN   EQU   14                       LINK REGISTER                   01720021
SAVEREG  EQU   13                       SAVE AREA POINTER               01740021
BASE     EQU   12                       BASE REGISTER                   01760021
CMPTR    EQU   11                       POINTER TO COMMUNICATIONS AREA  01780021
BASE2    EQU   10                       SECOND BASE REG         SA49491 01800000
CESD     EQU   9                        CESD ENTRY ADDR                 01820021
PTR      EQU   8                        USED FOR POINTER VALUE          01840021
*                                           -POINTER WITHIN INPUT BUF.  01860021
*                                           -POINTER WITHIN OUTPUT BUF. 01880021
LNG      EQU   7                        LENGTH OF INFORMATION           01900021
ADR      EQU   6                        ADDR FROM OBJECT RECORD         01920021
ID       EQU   5                        ID                              01940021
WORKC    EQU   4                        WORK REG.-EVEN FOR DEV          01960021
WORKA    EQU   3                        WORK REG.-ODD FOR BXLE          01980021
WORKB    EQU   2                        WORK REG.                       02000021
PARM     EQU   1                        PARAMETER REGISTER              02020021
ZERO     EQU   0                                                        02040021
*                                                                     * 02060021
*                    MAP FORMAT DISPLACEMENTS                         * 02080021
PREFIXNM EQU   2                                                        02100021
NAME     EQU   3                                                        02120021
TYPE     EQU   14                                                       02140021
ADDR     EQU   17                                                       02160021
SUFFIXNM EQU   11                                                       02180021
ENTRYSZ  EQU   24                                                       02200021
*                                                                     * 02220021
*                     CESD  DISPLACEMENTS                             * 02240021
*                                                                     * 02260021
CNAME    EQU   4                                                        02280021
CTYPE    EQU   12                                                       02300021
CADR     EQU   12                                                       02320021
CREL     EQU   16                                                       02340021
CLNG     EQU   16                                                       02360021
*                                                                     * 02380021
*                       CESD  INDICATORS                              * 02400021
*                                                                     * 02420021
SD       EQU   X'00'                    SECTION DEFINITION              02440021
LD       EQU   X'01'                    LABEL DEFINITION                02460021
ER       EQU   X'02'                    EXTERNAL REFERENCE              02480021
LR       EQU   X'03'                    LABEL REFERENCE                 02500021
PC       EQU   X'04'                    PRIVATE CODE                    02520021
CM       EQU   X'05'                    COMMON                          02540021
PR       EQU   X'06'                    PSEUDO REGISTER                 02560021
NULL     EQU   X'07'                    NULL ENTRY                      02580021
DELETE   EQU   X'80'                    DELETE  INDICATOR               02600021
NOLEN    EQU   X'20'               ZERO LENGTH                  27445   02620021
DELINK   EQU   X'80'                    RLD'S FOR ENTRY NEED DELINKING  02640021
LDCHAIN  EQU   X'40'                    ON LD CHAIN,ALREADY PROCESSED   02660021
*                                            THIS RECORD                02680021
WX       EQU   X'0A'               W-CON - EXTERNAL FORMAT  INC288      02700021
WEAKCALL EQU   X'40'               W-CON - INTERNAL FORMAT  INC288      02720021
NEVERCAL EQU   X'08'                   'ER' NEVER CALL                  02740021
BLANK    EQU   C' '                                                     02760021
ERWEAK   EQU   X'42'               FOR ER AND WEAKCALL BIT CHECK A39336 02780021
********                                                       ******** 02800021
*                       TRANSLATION TABLE INDICATORS                  * 02820021
********                                                       ******** 02840021
ERMATCH  EQU   X'80'                    ABSOLUTE RELOCATION INDIC.      02860021
*                                                                     * 02880021
*                       ESD DISPLACEMENTS                             * 02900021
*                                                                     * 02920021
ENAME    EQU   0                                                        02940021
ETYPE    EQU   8                                                        02960021
EADR     EQU   8                                                        02980021
ELNG     EQU   12                                                       03000021
ESUBTYP  EQU   13                      SUBTYPE FIELD                    03020021
EID      EQU   14                                                       03040021
ESDADDR  EQU   12                                                       03060021
ESEGNO   EQU   12                       SEGMENT NUMBER                  03080021
*                                                                     * 03100021
*                            RLD  FLAGS                               * 03120021
*                                                                     * 03140021
CONT     EQU   X'01'                                                    03160021
VCON     EQU   X'10'                    CHECK FOR ABSOLUTE RELOCATION   03180021
PRRLD    EQU   X'20'                    PSEUDO REGISTER RLD INDICATOR   03200021
ACCUMPR  EQU   X'30'                   ACCUMULATIVE PSEUDO REGISTER     03220021
*                                                                     * 03240021
*                      RLD DISPLACEMENTS                              * 03260021
*                                                                     * 03280021
P        EQU   2                        P PTR DISPLACEMENT              03300021
R        EQU   0                        R PTR DISPLACEMENT              03320021
RLDFLG   EQU   4                        FLAG FIELD                      03340021
RLDADR   EQU   4                        ADDRESS FIELD                   03360021
*                                                                     * 03380021
*                   DISPLACEMENTS WITHIN OBJECT BUFFER                * 03400021
*                                                                     * 03420021
COL1     EQU   0                                                        03440021
COL5     EQU   4                                                        03460021
COL11    EQU   10                                                       03480021
COL15    EQU   14                                                       03500021
COL29    EQU   12                       ADDED TO INFO ADDR TO GET COL.  03520021
*                                                  29 ADDR.             03540021
CQFF     EQU   X'FF'                   USED TO TURN OFF INDIC.          03560021
         EJECT                                                          03580021
         ENTRY HEWLERTN           EXTERNAL REFERENCE RESOLUTION         03600021
         ENTRY HEWLMAP            MAP PROCESSING                        03620021
         ENTRY HEWLCNVT           CONVERSION                            03640021
         ENTRY HEWLRLD            RLD RECORD PROCESSING                 03660021
         ENTRY HEWLESD            ESD RECORD PROCESSING                 03680021
         ENTRY HEWLEND            END OF MODULE PROCESSING              03700021
         ENTRY TRANSID                 TRANSLATE ID ROUTINE             03720021
         SAVE  (14,12),T,*              SAVE REGISTERS                  03740021
         USING HEWLRELO,BRANCH                                          03760021
         LR    BASE,BRANCH        SET BASE TO START             SA49491 03780000
         USING HEWLRELO,BASE      ESTABLISH ADDRESSABILITY              03800021
         DROP  BRANCH                                                   03820021
         L     SAVEREG,8(SAVEREG)       PICK UP NEXT SAVE AREA          03840021
         USING HEWLDCOM,CMPTR     ESTABLISH ADDR. TO COMM. AREA         03860021
         USING ERCODES,0               ERROR CODE DSECT                 03880021
         L     BASE2,ABEG4096          SET UP SECOND BASE REG   SA49491 03890000
         USING HEWLRELO+4096,BASE2     ESTABLISH ADDRESSABILITY SA49491 03892000
         B     RELOREAD                                                 03893037
         DC    C'OZ29882 '         LATEST APAR NUMBER                   03894037
         DC    C'03/13/78'         DATE LAST CHANGED                    03900037
         DC    0H'0'                    ALIGN                           03912037
         EJECT                                                          03921037
*********************************************************************** 03930037
*              GET A RECORD TO PROCESS                                * 03939037
*********************************************************************** 03948037
RELOREAD L     BRANCH,ADREAD                                            03960021
         BALR  RETURN,BRANCH            GO TO READ A RECORD             03980021
         TM    CMIOFLGS,CQEOCB          END OF CONCATENATION?           04000021
         BZ    RELO10                   NO, PROCESS RECORD              04020021
         TM    CMRELFLG,CQNOEND        WAS AN END CARD RECEIVED         04040021
         BO    RELO1                   YES                              04060021
         TM    CMRELFLG,CQINPUT        WAS IT A DUMMY DATA SET          04080021
         BZ    RELO1                   YES,RETURN                       04100021
         BAL   RETURN,HEWLEND     GO TO PERFORM CLOSE-OUT PROC.         04120021
        BAL    RETURN,RERINPTA          WARNING--NO END CARD            04140021
RELO1    NI    CMRELFLG,CQFF-CQNOEND   SET OFF END CARD INDIC.          04160021
         L     SAVEREG,4(SAVEREG)                                       04180021
         RETURN (14,12),T                                               04200021
*                                                                     * 04220021
*                  SET-UP FOR RECORD PROCESSING                       * 04240021
*                                                                     * 04260021
RELO10   L     PTR,CMGETREC            LOAD ADDR. OF OBJ. BUFFER A30162 04280021
         CLI   0(PTR),BLANK             CHECK FOR L.E.CONTROL CARD      04300021
         BNE   RELO20                   IT IS NOT A CONTROL CARD        04320021
         BAL   RETURN,RERINPT8          WARNING-CARD NOT AN OBJ.CARD    04340021
         B     RELOREAD                GO TO READ NEXT RECORD           04360021
RELO20   L     ADR,COL5(PTR)            LOAD COLS 5 THRU 8 - ADDRESS    04380021
         LA    ADR,0(ADR)                                               04400021
         LH    LNG,COL11(PTR)           LOAD COLS 11 AND 12 -BYTE CT    04420021
         LH    ID,COL15(PTR)            LOAD COLS IS AND 16 - ID        04440021
         L     WORKA,COL1(PTR)          LOAD COLS 1 THRU 4-CARD IDENT.  04460021
         LA    PTR,16(PTR)              ADDR. OF COL 17- ADDR.OF INFO   04480021
*                                                                     * 04500021
*   THE FOLLOWING CODE DETERMINES TYPE OF RECORD AND THEN BRANCHES TO * 04520021
*            THE APPROPRIATE ROUTINE FOR PROCESSING                   * 04540021
*                                                                     * 04560021
         LA    WORKC,6             GET TABLE ENTRY NUMBER               04580021
         LA    WORKB,TYPETBLE           GET TABLE ADDRESS               04600021
RELO30   LM    RETURN,BRANCH,0(WORKB)   PICK UP TABLE ENTRY             04620021
         CR    WORKA,RETURN             ARE TYPES EQUAL                 04640021
         BC    7,RELO40                 NO , CONTINUE SEARCH            04660021
         OI    CMRELFLG,CQINPUT        SET INDICATOR FOR VALID INPUT    04680021
*                                      RECEIVED                  A30162 04700021
         BALR  RETURN,BRANCH            YES, THEN GO TO PROCESS REC.    04720021
         B     RELOREAD                 GO TO READ NEXT RECORD          04740021
RELO40   LA    WORKB,8(WORKB)           UPDATE TABLE PTR                04760021
         BCT   WORKC,RELO30             LOOP AGAIN                      04780021
         BAL   RETURN,RERINPT9         INVALID INPUT FROM OBJ.MODULE    04800021
         B     RELOREAD                 GO TO READ NEXT RECORD          04820021
         EJECT                                                          04840021
*                                                                     * 04860021
**************************  ESD PROCESSOR  **************************** 04880021
*                                                                     * 04900021
*   THIS SUBROUTINE CREATES THE CESD FROM THE ESD/CESD SENT TO IT.    * 04920021
*     IT EXPECTS                                                      * 04940021
*            #LNG-LENGTH OF ESD INFORMATION                           * 04960021
*            #PTR- ADR. OF ESD INFORMATION                            * 04980021
*            #ID- ID OF FIRST ESD ITEM OTHER THAN LD                    05000021
*                                                                     * 05020021
*********************************************************************** 05040021
HEWLESD  EQU   *                                                        05060021
         STM   14,12,12(13)             SAVE REGISTERS                  05080021
         BALR  BASE,0                                                   05100021
         USING *,BASE                                                   05120021
         L     BASE,ABEGIN                                              05140021
         USING HEWLRELO,BASE      RESET BASE TO INITIAL VALUE           05160021
         L     BASE2,ABEG4096           SET UP SECPND BASE REG  SA49491 05170000
         USING HEWLRELO+4096,BASE2     ESTABLISH ADDRESSABILITY SA49491 05172000
         B     NESD+8                                                   05180021
NESD     DC    C'HEWLESD '                                              05200021
         L     SAVEREG,8(SAVEREG)          GET NEXT SAVE AREA           05220021
ESDSTART STH   ID,CMCURRID              SAVE CURRENT ID                 05240021
         OI    CMFLAG4,CQESDS     SHOW ESDS RECHD FOR THIS MODULE       05260021
         TM    CMIOFLGS,CQRECFM         IS A LOAD MODULE BEING PROC.    05280021
         BO    LOADPROC                 YES                             05300021
****                                                               **** 05320021
*                       INPUT ESD TYPE IS 'NULL'                      * 05340021
****                                                               **** 05360021
ESD10    TM    ETYPE(PTR),WX       IS INPUT TYPE WX         INC288      05380021
         BNO   ESD12               NO. BRANCH               INC288      05400021
         MVI   ETYPE(PTR),WEAKCALL+ER  YES. SET ER WITH WEAKCALL INC288 05420021
*                                     FLAG ON               INC288      05440021
ESD12    TM    ETYPE(PTR),NULL     IS INPUT ESD TYPE NULL   INC288      05460021
         BZ    CESDSRCH                 NO, TYPE IS SD - SEARCH CESD    05480021
         BC    6,ESD20                  NO, CHECK FOR TYPE 'PC'         05500021
ESD15    L     CESD,CMNULCHN            IS THE CESD NULL ENTRY CREATED  05520021
*                                       ALL NULL ENTRIES ARE RENUMBERED 05540021
*                                         TO THE SAME CESD'DELETE'ENTRY 05560021
         LTR   CESD,CESD                                                05580021
         BC    7,TRANSLAT               YES                             05600021
         BAL   RETURN,CESDENT           NO, GET CESD ENTRY              05620021
         XC    0(20,CESD),0(CESD)       CLEAR ENTRY                     05640021
         OI    CTYPE(CESD),DELETE       SET DELETE INDICATOR            05660021
         ST    CESD,CMNULCHN            SAVE CESD ADDR.FOR FUTURE NULLS 05680021
         B     TRANSLAT                 GO TO TRANSLATE ID              05700021
********                                                        ******* 05720021
*                         INPUT ESD TYPE IS 'PC'                      * 05740021
********                                                        ******* 05760021
ESD20    TM    ETYPE(PTR),X'03'         IS INPUT ESD TYPE 'PC'          05780021
         BC    7,ESD35                  NO, CHECK FOR 'LD'/'LR'         05800021
ESD30    BAL   RETURN,CESDENT           GET CESD ENTRY                  05820021
         BAL   RETURN,ENTER             MAKE CESD ENTRY                 05840021
         BAL   RETURN,CHECKEP          CHECK FOR EP NAME                05860021
         B     MATERSD2                 GO TO TEST LNG.AND MAP          05880021
********                                                        ******* 05900021
*                        INPUT ESD TYPE IS 'LR'OR'LD'                 * 05920021
********                                                        ******* 05940021
ESD35    TM    ETYPE(PTR),CM           IS ESD TYPE'LR'OR'LD'            05960021
         BC    11,CESDSRCH             NO                               05980021
         TM    ETYPE(PTR),PR           IS ESD TYPE 'PR'                 06000021
         BO    CESDSRCH                YES                              06020021
         LH    ID,EID(PTR)              GET 'SD' ID                     06040021
         OI    CMRELFLG,CQESD          ESD CALLER INDICATOR             06060021
         BAL   RETURN,TRANSID           TRANSLATE ID                    06080021
         NI    CMRELFLG,CQFF-CQESD     SET ESD CALLER INDIC. OFF        06100021
         LH    ID,CMCURRID              RESTORE ID                      06120021
         LTR   PARM,PARM                WAS AN INVALID ID FOUND         06140021
         BZ    NEXTESD                  YES                             06160021
         L     CESD,0(PARM)             GET'SD' CESD ADDR.              06180021
         LTR   CESD,CESD                IS 'SD' DEFINED YET             06200021
         BZ    ESD40                    NO                              06220021
         ST    CESD,ESDADDR(PTR)        SAVE 'SD' CESD ADDR.            06240021
         B     CESDSRCH                GO TO SEARCH CESD                06250037
*   THE SECTION DEFINITION(SD) FOR A LABEL DEFINITION(LD) MUST BE     * 06280021
*    DEFINED BEFORE THE LD CAN BE PROCESSED. THEREFORE, ALL LDS WHOSE * 06300021
*    SD IS NOT DEFINED WHEN ENCOUNTERED ARE PLACED ON A CHAIN UNTIL   * 06320021
*    THEIR CORRESPONDING SD IS DEFINED. THE CHAIN IS PROCESSED AT     * 06340021
*    THE END OF EACH RECORD.(THIS SPECIAL CASE SHOULD OCCUR ONLY IF   * 06360021
*    THE USER REARRANGES THE OBJECT DECK IN THIS MANNER.              * 06380021
ESD40    LR    CESD,PTR                GET CESD ENTRY ADDR              06400021
         SH    CESD,CONT4                                               06420021
         TM    ETYPE(PTR),LDCHAIN      HAS CESD ENTRY BEEN CREATED      06440021
         BO    ESD50                    YES, RECHAIN                    06460021
         BAL   RETURN,CESDENT          GET CESD ENTRY                   06480021
         MVC   CNAME(16,CESD),ENAME(PTR) MOVE ESD INFO TO CESD          06500021
ESD50    L     WORKC,CMLDCHN                                            06520021
         ST    CESD,CMLDCHN                                             06540021
         ST    WORKC,0(CESD)            CHAIN ENTRY TO 'LD' CHAIN       06560021
         B     NEXTESD                  GET NEXT ESD ITEM               06580021
         EJECT                                                          06600021
****************************  CESD SEARCH  **************************** 06620021
*                                                                     * 06640021
*      THIS ROUTINE SEARCHES THE CESD FOR A GIVEN NAME. IT USES       * 06660021
*        HIERTBLE TO DETERMINE WHICH CESD CHAINS TO SEARCH AND THEN   * 06680021
*        GETS THE CHAIN BEGINNING ADDRESSES FROM THE CMTYPCHN TABLE   * 06700021
*                                                                     * 06720021
*********************************************************************** 06740021
CESDSRCH XC    CMPREVPT(4),CMPREVPT     CLEAR PREVIOUS CHAIN POINTER    06760021
         IC    WORKA,ETYPE(PTR)         GET INPUT ESD TYPE              06780021
         N     WORKA,TYPEONLY           CLEAR ALL BUT TYPE FIELD        06800021
         CH    WORKA,ONE               IS INPUT TYPE 'LD'               06820021
         BNE   SRCH05                  NO                               06840021
         LA    WORKA,3                 SET TYPE TO 'LR'                 06860021
SRCH05   SLL   WORKA,2                                                  06880021
         LA    WORKA,HIERTBLE(WORKA)   CALC HIERTBLE ENTRY ADDR         06900021
SRCH10   IC    CESD,0(WORKA)            GET CESD TYPE                   06920021
         N     CESD,TYPEONLY           CLEAR ALL BUT TYPE               06940021
         SLL   CESD,2                                                   06960021
         LA    CESD,CMTYPCHN(CESD)     CALC CHAIN TABLE ENTRY ADDR      06980021
SRCH20   L     CESD,0(CESD)             GET ADDR. OF FIRST ON CHAIN     07000021
         LTR   CESD,CESD                IS THIS END OF CHAIN            07020021
         BZ    SRCH30                   YES                             07040021
         CLC   CNAME(8,CESD),ENAME(PTR)  ARE NAMES EQUAL                07060021
         BE    MATCHED                  YES, GO TO MATCH PROCESSING     07080021
         ST    CESD,CMPREVPT            SAVE PREVIOUS CHAIN POINTER     07100021
         B     SRCH20                   GET NEXT IN CHAIN               07120021
SRCH30   TM    0(WORKA),X'80'           LAST ENTRY IN HIERTBLE          07140021
         BO    NOMATCH                  YES, GO TO NO MATCH PROCESSING  07160021
         LA    WORKA,1(WORKA)           UPDATE TO NEXT ENTRY            07180021
         XC    CMPREVPT(4),CMPREVPT     CLEAR PREVIOUS CHAIN POINTER    07200021
         B     SRCH10                   CONTINUE SEARCH                 07220021
         EJECT                                                          07240021
*********************************************************************** 07260021
*                                                                     * 07280021
***********************  NO MATCH PROCESSING   ************************ 07300021
*                                                                     * 07320021
*********************************************************************** 07340021
********                                                        ******* 07360021
*                          INPUT ESD TYPE IS 'SD'                     * 07380021
********                                                        ******* 07400021
NOMATCH  EQU   *                                                        07420021
         TM    ETYPE(PTR),NULL          IS INPUT ESD TYPE 'SD'          07440021
         BZ    ESD30                    YES, HANDLE SAME AS 'PC'        07460021
         BAL   RETURN,CESDENT           GET CESD ENTRY FOR NOMATCH PROC 07480021
********                                                        ******* 07500021
*                          INPUT ESD TYPE IS 'PR'                     * 07520021
********                                                        ******* 07540021
         TM    ETYPE(PTR),PR            IS INPUT ESD TYPE 'PR'          07560021
         BZ    NOMATLD1                 NO, TYPE IS'LD'                 07580021
         BC    6,NOMATCM                NO, CHECK FOR 'CM'              07600021
         MVC   CNAME(16,CESD),ENAME(PTR) YES, MOVE ESD INFO.TO CESD     07620021
         XC    CTYPE+1(3,CESD),CTYPE+1(CESD)  CLEAR RLD CHAIN FIELD     07640021
*                                       CHAIN PR TO END OF PR CHAIN IN  07660021
*                                       ORDER TO MAINTAIN INPUT PR      07680021
*                                       ORDER.                          07700021
         LA    WORKB,CMPRCHN                                            07720021
         L     WORKC,CMPRCHN            GET ADDRESS OF 1ST PR ENTRY     07740021
NOMATPR1 LTR   WORKC,WORKC              IS THIS LAST ON CHAIN           07760021
         BZ    NOMATPR2                 YES                             07780021
         LR    WORKB,WORKC              NO,SAVE PREVIOUS ENTRY ADDRESS  07800021
         L     WORKC,0(WORKC)           GET ADDR. OF NEXT PR ENTRY      07820021
         B     NOMATPR1                                                 07840021
NOMATPR2 ST    CESD,0(WORKB)            CHAIN PR AT END OF CHAIN        07860021
         XC    0(4,CESD),0(CESD)        CLEAR CHAIN FIELD               07880021
         B     TRANSLAT                 GO TO TRANSLATE ID              07900021
********                                                        ******* 07920021
*                          INPUT ESD TYPE IS 'CM'                     * 07940021
********                                                        ******* 07960021
NOMATCM  TM    ETYPE(PTR),CM            IS TYPE 'CM'                    07980021
         BC    14,NOMATLD               NO                              08000021
         MVC   CTYPE(8,CESD),ETYPE(PTR)  KEEP INPUT ADDR.AND LNG.       08020021
         LR    WORKC,CESD               SAVE EXTENDED ENTRY ADDR        08040021
         BAL   RETURN,CESDENT           GET ANOTHER CESD ENTRY          08060021
         MVC   CNAME(9,CESD),ENAME(PTR) MOVE NAME AND TYPE              08080021
         NI    CTYPE(CESD),X'07'        CLEAR FLAGS EXCEPT TYPE         08100021
         XC    CTYPE+1(3,CESD),CTYPE+1(CESD) CLEAR ER CHAIN             08120021
         ST    WORKC,CREL(CESD)         SAVE PTR TO EXTENDED ENTRY      08140021
         B     CHAINING                 GO TO CHAIN AND TRANSLATE       08160021
********                                                        ******* 08180021
*                          INPUT ESD TYPE IS 'LR' OR 'LD'             * 08200021
********                                                        ******* 08220021
NOMATLD  TM    ETYPE(PTR),LR            IS TYPE'LR'                     08240021
         BM    NOMATER                  NO, TYPE IS 'ER'                08260021
NOMATLD1 L     WORKC,ESDADDR(PTR)       CESD ADDR OF SD ENTRY           08280021
         MVC   CNAME(8,CESD),ENAME(PTR) YES, MOVE NAME TO CESD          08300021
         TM    CTYPE(WORKC),DELETE      IS 'SD' FOR 'LR' DELETE         08320021
         BZ    NOMATLD2                 NO                              08340021
         MVI   ETYPE(PTR),ER            SET TYPE TO 'ER'                08360021
         MVI   CTYPE(CESD),ER+DELINK    SET CESD TYPE TO ER WITH DELINK 08380021
         MVC   CREL+1(3,CESD),EADR+1(PTR) SAVE DELINKING FACTOR         08400021
         XC    CADR+1(3,CESD),CADR+1(CESD) CLEAR RLD CHAIN FIELD        08420021
         OI    CREL(CESD),X'80'        TURN SPEC DELETE BIT ON  ZA01335 08430002
         B     CHAINING                 GO TO CHAIN ENTRY               08440021
NOMATLD2 BAL   RETURN,ENTERLR           MAKE LR CESD ENTRY              08460021
         BAL   RETURN,CHECKEP          CHECK FOR EP NAME                08480021
         BAL   RETURN,HEWLMAP     GO TO MAKE MAP ENTRY                  08500021
         B     CHAINING                 GO TO CHAIN AND TRANSLATE       08520021
********                                                        ******* 08540021
*                         INPUT ESD TYPE IS 'ER'                      * 08560021
********                                                        ******* 08580021
NOMATER  MVC   CNAME(16,CESD),ENAME(PTR) MOVE ESD INFO. TO CESD ENTRY   08600021
         CLI   ETYPE(PTR),ERWEAK   IS THIS W-CON                 A39336 08620021
         BE    NOMATER1            YES, DON'T CLEAR FLAGS        A39336 08640021
         NI    CTYPE(CESD),X'07'         CLEAR FLAGS EXCEPT FOR TYPE    08660021
NOMATER1 EQU   *                                            INC288      08680021
         XC    CADR+1(7,CESD),CADR+1(CESD) CLEAR ALL BUT NAME AND TYPE  08700021
         CLI   ESUBTYP(PTR),X'06'      IS ESD MARKED NEVER-CALL         08720021
         BNE   ENTERCH                 NO                        XA1803 08740002
         OI    CTYPE(CESD),NEVERCAL    SET NEVER-CALL INCIC IN CESD'ER' 08760021
ENTERCH  LA    WORKB,CMERCHN           PT TO ER CHAIN            XA1803 08770002
         L     WORKC,CMERCHN           GET ADDR OF 1ST ER ENTRY  XA1803 08780002
NOMATER2 LTR   WORKC,WORKC             IS THIS LAST ON CHAIN     XA1803 08790002
         BZ    NOMATER3                YES                       XA1803 08792002
         LR    WORKB,WORKC             SAVE PREV ENTRY ADDR      XA1803 08794002
         L     WORKC,0(WORKC)          GET ADDR OF NEXT ER ENTRY XA1803 08796002
         B     NOMATER2                CONTINUE SEARCH           XA1803 08798002
NOMATER3 ST    CESD,0(WORKB)           CHAIN ER AT END OF CHAIN  XA1803 08798402
         XC    0(4,CESD),0(CESD)       CLEAR CHAIN FIELD         XA1803 08798802
         B     TRANSLAT                GO TO TRANSLATE ID        XA1803 08799202
         EJECT                                                          08800021
*********************************************************************** 08820021
**************************  MATCH  PROCESSING  ************************ 08840021
*                                                                     * 08860021
*********************************************************************** 08880021
********                                                        ******* 08900021
*                CESD TYPE IS 'SD' --- INPUT ESD TYPE IS 'SD'         * 08920021
********                                                        ******* 08940021
MATCHED  EQU   *                                                        08960021
         TM    CTYPE(CESD),NULL         IS CESD TYPE 'SD'               08980021
         BC    7,MATCHPR                NO                              09000021
         TM    ETYPE(PTR),NULL          IS INPUT ESD TYPE 'SD'          09020021
         BC    7,MATSDER                NO                              09040021
DELETE1  TM    CMFLAG4,CQMOD       IS THIS CMPLER-LDED TXT       A30142 09060021
         BZ    DELETE2             NO. WE WON'T READ TEXT               09080021
         L     WORKC,ELNG(PTR)     YES. GET ESD LENGTH                  09100021
         LA    WORKC,0(WORKC)      CLEAR HI-ORDER BYTE                  09120021
         A     WORKC,CMMODLNG      UPDATE MODULE LENGTH                 09140021
         LA    WORKC,7(WORKC)      AND ROUND IT                         09160021
         N     WORKC,DBLWRD                                             09180021
         ST    WORKC,CMMODLNG      STORE IT BACK                        09200021
DELETE2  TM    CTYPE(CESD),DELETE  IS ORIGINAL DELETE            A30142 09220021
         BO    UPDATERC            YES, USE IT                   A30142 09240021
         ST    CESD,CMESDSAV       SAVE CESD ADDR               SA56381 09250000
         BAL   RETURN,CESDENT      GET CESD ENTRY                A30142 09280021
         MVC   CNAME(8,CESD),ENAME(PTR)  MOVE NAME AND TYPE      A30142 09300021
         L     WORKC,CMESDSAV      GET ORIGINAL'S ADDR          SA56381 09320000
         L     WORKC,CADR(WORKC)   INTO WORKC                   SA49491 09330000
         LA    WORKC,0(WORKC)                                    A30142 09340021
         ST    WORKC,CADR(CESD)    STORE IT HERE                 A30142 09360021
         L     WORKB,EADR(PTR)     GET ESD INPUT ADDR            A30142 09380021
         LA    WORKB,0(WORKB)      CALC RELOCATION CONSTANT      A30142 09400021
         SR    WORKC,WORKB                                       A30142 09420021
         ST    WORKC,CREL(CESD)    STORE IT                      A30142 09440021
         MVC   CTYPE(1,CESD),ETYPE(PTR)  SET TYPE                A30142 09460021
         OI    CTYPE(CESD),DELETE  SET TO DELETE                 A30142 09480021
         B     CHAINING            GO TO CHAIN AND TRANSLATE     A30142 09500021
********                                                        ******* 09520021
*                CESD TYPE IS 'SD' --- INPUT ESD TYPE IS 'ER'         * 09540021
********                                                        ******* 09560021
MATSDER  TM    ETYPE(PTR),CM            IS INPUT ESD TYPE 'ER'          09580021
         BZ    TRANSLAT                YES,GO TO TRANSLATE              09600021
********                                                        ******* 09620021
*                CESD TYPE IS 'SD' --- INPUT ESD TYPE IS 'CM'         * 09640021
********                                                        ******* 09660021
MATSDCM  BO    UPDATERC                 BRANCH IF INPUT TYPE IS CM      09670001
********                                                        ******* 09700021
*                CESD TYPE IS 'SD' --- INPUT ESD TYPE IS 'LD'/'LR'    * 09720021
********                                                        ******* 09740021
MATSDLR  L     WORKC,ESDADDR(PTR)       GET'SD' ADDR                    09760021
         TM    CTYPE(WORKC),DELETE      IS'SD' MARKED DELETE            09780021
         BO    UPDATERC                 GO TO UPDATE RELOC. CONSTANT    09800021
         BAL   RETURN,RERINPT4         DUPLIC.SYMBOL-CONFLICTING TYPE   09820021
         B     UPDATERC                 GO TO UPDATE RELOC. CONSTANT    09840021
********                                                        ******* 09860021
*                CESD TYPE IS 'PR'---INPUT ESD TYPE IS 'PR'           * 09880021
********                                                        ******* 09900021
MATCHPR  TM    CTYPE(CESD),PR           IS CESD TYPE 'PR'               09920021
         BC    14,MATCHCM               NO                              09940021
         BNH   MATPRPR1                 NO, GO TO CHECK ALIGNMENT       09960021
         MVC   CLNG+1(3,CESD),ELNG+1(PTR) YES, USE ESD LNG              09980021
MATPRPR1 OC    CLNG(1,CESD),ELNG(PTR)   SET ALIGN. TO HIGHER VALUE      10000021
         B     TRANSLAT                 GO TO TRANSLATE                 10020021
********                                                        ******* 10040021
*               CESD TYPE IS 'CM' --- INPUT ESD TYPE IS 'SD'          * 10060021
********                                                        ******* 10080021
MATCHCM  TM    CTYPE(CESD),CM           IS CESD TYPE 'CM'               10100021
         BZ    MATCHER                  NO, CESD TYPE IS 'ER'           10120021
         BC    6,MATCHLR                NO, CESD TYPE IS 'LR'           10140021
         TM    ETYPE(PTR),NULL          YES, IS INPUT ESD TYPE 'SD'     10160021
         BC    7,MATCMER                NO                              10180021
         L     ADR,CREL(CESD)           GET ADDR OF EXTENDED ENTRY      10200021
         CLC   ELNG+1(3,PTR),CLNG+1(ADR) IS INPUT LNG GT CESD LNG       10220021
         BNL   MATCMSD1                  YES,USE INPUT LNG              10240002
         LA    ZERO,22                   MSG IEW1232             YM5575 10250001
         LR    PARM,PTR                  PT TO ESD NAME          YM5575 10260001
         L     BRANCH,ADERROR            ADDR OF ERROR ROUTINE   YM5575 10270001
         BALR  RETURN,BRANCH             BR TO ERROR ROUTINE     YM5575 10272001
MATCMSD1 L     WORKC,CMESDCHN                                           10280021
         ST    ADR,CMESDCHN                                             10300021
         ST    WORKC,0(ADR)             PUT EXTENDED ENTRY ON FREE CHN. 10320021
         B     MATERSD0                 GO TO HANDLE SAME AS SD-ER      10340021
********                                                        ******* 10360021
*           CESD TYPE IS 'CM' --- INPUT ESD TYPE IS 'ER'              * 10380021
********                                                        ******* 10400021
MATCMER  L     WORKC,CREL(CESD)         GET ADDR OF EXTENDED ENTRY      10420021
         MVC   CADR+1(3,WORKC),EADR+1(PTR)  SAVE INPUT ADDRESS          10440021
         TM    ETYPE(PTR),CM            IS ESD TYPE 'ER'                10460021
         BO    MATCMCM                  NO, ESD TYPE IS 'CM'            10480021
         BM    MATCMLR                  NO, TYPE IS 'LR' OR 'LD'        10500021
         XC    CADR+1(3,WORKC),CADR+1(WORKC)  MAKE SURE ADDR IS ZERO    10520021
         B     TRANSLAT                 GO TO TRANSLATE ID              10540021
********                                                        ******* 10560021
*           CESD  TYPE IS 'CM' --- INPUT ESD TYPE IS 'LR'/'LD'        * 10580021
********                                                        ******* 10600021
MATCMLR  L     WORKC,ESDADDR(PTR)       GET 'SD' ADDR                   10620021
         TM    CTYPE(WORKC),DELETE      IS'SD' DELETE                   10640021
         BO    TRANSLAT                 YES                             10660021
         BAL   RETURN,RERINPT4         DUPLIC.SYMBOL-CONFLICTING TYPE   10680021
         B     TRANSLAT                 GO TO TRANSLATE                 10700021
********                                                        ******* 10720021
*          CESD TYPE IS 'CM' --- INPUT ESD TYPE IS 'CM'               * 10740021
********                                                        ******* 10760021
MATCMCM  CLC   CLNG+1(3,WORKC),ELNG+1(PTR) IS CESD LNG BT ESD LNG       10780021
         BH    TRANSLAT                   YES, USE CESD LNG             10800021
         MVC   CLNG+1(3,WORKC),ELNG+1(PTR) USE ESD LENGTH               10820021
         B     TRANSLAT                  GO TO TRANSLATE                10840021
********                                                        ******* 10860021
*               CESD TYPE IS 'LR' ---INPUT ESD TYPE IS 'SD'           * 10880021
********                                                        ******* 10900021
MATCHLR  TM    ETYPE(PTR),NULL          IS ESD TYPE 'SD'                10920021
         BC    7,MATLRER               NO                               10940021
         B     DELETE1             YES. GO TO DELETE                    10960021
********                                                        ******* 10980021
*               CESD TYPE IS 'LR'--- INPUT ESD TYPE IS  'ER'          * 11000021
********                                                        ******* 11020021
MATLRER  TM    ETYPE(PTR),CM            IS ESD TYPE 'ER'                11040021
         BZ    TRANSLAT                 YES, GO TO TRANSLATE            11060021
********                                                        ******* 11080021
*               CESD TYPE IS 'LR' --- INPUT ESD TYPE IS 'LR'/'LD'     * 11100021
********                                                        ******* 11120021
MATLRLR  BC    6,MATSDLR               HANDLE SAME AS 'SD'-'LR'MATCH    11140021
********                                                        ******* 11160021
*           CESD TYPE IS 'LR' --- INPUT ESD TYPE IS 'CM'              * 11180021
********                                                        ******* 11200021
         BAL   RETURN,RERINPT4         DUPLIC.SYMBOL-CONFLICTING TYPE   11220021
         B     UPDATERC                 GO TO UPDATE RELOC.CONSTANT     11240021
********                                                        ******* 11260021
*           CESD TYPE IS 'ER' --- INPUT ESD TYPE IS 'SD'              * 11280021
********                                                        ******* 11300021
MATCHER  TM    ETYPE(PTR),NULL          IS INPUT ESD TYPE 'SD'          11320021
         BC    7,MATERLR                NO                              11340021
MATERSD0 L     WORKB,CMPREVPT           GET ADDR OF PREV ENTRY ON CHAIN 11360021
         L     WORKC,0(CESD)                                            11380021
         LTR   WORKB,WORKB              IS MATCH FIRST ON CHAIN         11400021
         BZ    MATERSD5                 YES                             11420021
         ST    WORKC,0(WORKB)           DECHAIN ENTRY                   11440021
MATERSD1 L     PARM,CADR(CESD)          GET ADDR. OF RLD CHAIN          11460021
         LA    PARM,0(PARM)            CLEAR TYPE FIELD                 11480021
         BAL   RETURN,ENTER             GO TO MAKE CESD  ENTRY          11500021
         BAL   RETURN,CHECKEP          CHECK FOR EP NAME                11520021
         BAL   RETURN,HEWLERTN    GO TO RESOLVE RLD CHAIN               11540021
MATERSD2 L     WORKC,ELNG(PTR)          GET ESD LENGTH                  11560021
         LA    WORKC,0(WORKC)          CLEAR HIGH ORDER BYTE            11580021
         LTR   WORKC,WORKC              IS LNG EQUAL TO ZERO            11600021
         BC    7,MATERSD3               NO                              11620021
         OI    CMRELFLG,CQNOLNG         YES, SET NOLENGTH INDICATOR     11640021
         OI    CTYPE(CESD),NOLEN   SET NOLENGTH INDICATOR       27445   11660021
         B     MATERSD4                                                 11680021
MATERSD3 A     WORKC,CMMODLNG                                           11700021
         ST    WORKC,CMMODLNG           UPDATE ACCUM. LENGTH            11720021
MATERSD4 BAL RETURN,HEWLMAP       GO TO MAP ENTRY                       11740021
         B     CHAINING                 GO TO CHAIN AND TRANSLATE       11760021
MATERSD5 TM    CTYPE(CESD),CM           IS 'CM' TO BE DECHAINED         11780021
         BO    MATERSD6                 YES                             11800021
         ST    WORKC,CMERCHN            DECHAIN 'ER'                    11820021
         B     MATERSD1                                                 11840021
MATERSD6 ST    WORKC,CMCMCHN            DECHAIN 'CM'                    11860021
         B     MATERSD1                                                 11880021
********                                                        ******* 11900021
*           CESD TYPE IS 'ER' --- INPUT ESD TYPE IS 'LD'/'LR'         * 11920021
********                                                        ******* 11940021
MATERLR  TM    ETYPE(PTR),CM            IS INPUT ESD TYPE'LD'OR'LR'     11960021
         BZ    MATERER                  NO, TYPE IS 'ER'                11980021
         BO    MATERCM                  NO, TYPE IS 'CM'                12000021
         L     PARM,CADR(CESD)          GET ADDR. OF RLD CHAIN          12020021
         LA    PARM,0(PARM)            CLEAR TYPE FIELD                 12040021
         LA    RETURN,MATERLR2          SET RETURN ADDR FOR ENTERLR RTN 12060021
         L     WORKC,ESDADDR(PTR)      GET 'SD' CESD ADDR               12080021
         NI    CREL(CESD),X'7F'        TURN OFF DELETE BIT      ZA01335 12090002
         TM    CTYPE(WORKC),DELETE     IS 'SD' FOR 'LR' DELETE  ZA01335 12092002
         BZ    ENTERLR                 NO,CONTINUE              ZA01335 12094002
         OI    CREL(CESD),X'80'        TURN SPEC DELETE BIT ON  ZA01335 12096002
         MVC   CREL+1(3,CESD),EADR+1(PTR) SAVE DELINKING FACTOR ZA01335 12098002
         B     TRANSLAT                GO TO TRANSLATE ID       ZA01335 12098402
ENTERLR  L     WORKB,EADR(PTR)          GET INPUT ADDR                  12100021
         LA    WORKB,0(WORKB)                                           12120021
         LR    WORKA,WORKB              SAVE FOR RC CALC.               12140021
         A     WORKB,CREL(WORKC)        CALC. LOADER ASSIGNED ADDR(LAA) 12160021
         ST    WORKB,CADR(CESD)         PUT IN CESD ENTRY               12180021
         TM    CMFLAG4,CQMOD       IS THIS COMPILER-LOADED TEXT         12200021
         BO    MATERLR1            YES. DON'T WORRY                     12220021
         CL    WORKB,CMLOWTBL           HAVE TABLES BEEN EXCEEDED       12240021
         BNH   MATERLR1                NO                               12260021
         B     RERSIZE2                PROGRAM TOO LARGE--ABORT         12280021
MATERLR1 MVI   CTYPE(CESD),LR           SET TYPE TO 'LR'                12300021
         SR    WORKB,WORKA              CALC RELOCATION CONSTANT        12320021
         ST    WORKB,CREL(CESD)         PUT RC IN CESD ENTRY            12340021
         BR    RETURN                                                   12360021
MATERLR2 BAL   RETURN,HEWLERTN    GO TO RESOLVE RLD CHAIN               12380021
         BAL   RETURN,CHECKEP          CHECK FOR EP NAME                12400021
         BAL   RETURN,HEWLMAP     GO TO MAKE MAP ENTRY                  12420021
         B     DECHAIN                  GO TO DECHAIN'ER',CHAIN 'LR',   12440021
*                                            AND TRANSLATE ID           12460021
********                                                        ******* 12480021
*           CESD TYPE IS 'ER' --- INPUT ESD TYPE IS 'CM'              * 12500021
********                                                        ******* 12520021
MATERCM  LR    WORKC,CESD               SAVE CESD ADDR OF 'ER'          12540021
         BAL   RETURN,CESDENT           GET CESD ENTRY FOR EXTENDED ENT 12560021
         MVC   CADR(8,CESD),EADR(PTR)   MOVE TYPE,ADDR.AND LNG          12580021
         ST    CESD,CREL(WORKC)         SAVE PTR TO EXTENDED ENTRY      12600021
         LR    CESD,WORKC               RESTORE CESD ADDR OF 'ER'       12620021
         MVI   CTYPE(CESD),CM           SET TYPE TO 'CM'                12640021
         B     DECHAIN                  GO TO DECHAIN'ER',CHAIN'CM'     12660021
*                                          AND TRANSLATE ID             12680021
********                                                        ******* 12700021
*           CESD TYPE IS 'ER' --- INPUT ESD TYPE IS 'ER'              * 12720021
********                                                        ******* 12740021
MATERER  CLI   CTYPE(CESD),ER+DELINK    IS ER MARKED DELINK             12760021
         BNE   MATERER2                 NO                              12780021
         NI    CTYPE(CESD),X'FF'-DELINK SET DELINK INDIC OFF            12800021
         XC    CREL(4,CESD),CREL(CESD) CLEAR DELINK FIELD       ZA01335 12820002
MATERER2 TM    ETYPE(PTR),WEAKCALL IS WEAKCALL FLAG ON INC288           12840021
         BO    MATERER3            YES. LEAVE CESD AS IS   INC288       12860021
         NI    CTYPE(CESD),X'FF'-WEAKCALL  NO. MAKE SURE  INC288        12880021
*                                  WX IS OFF   INC288                   12900021
MATERER3 CLI   ESUBTYP(PTR),X'06'  IS ESD MARKED NEVCAL  INC288         12920021
         BNE   TRANSLAT                 NO, GO TO TRANSLATE ID          12940021
         OI    CTYPE(CESD),NEVERCAL    SET NEVERCALL INDIC.IN CESD'ER'  12960021
         B     TRANSLAT                GO TO TRANSLATE ID               12980021
         EJECT                                                          13000021
********                                                        ******* 13020021
*        THIS ROUTINE DECHAINS CESD ENTRIES WHEN THEIR TYPE CHANGES   * 13040021
********                                                        ******* 13060021
DECHAIN  L     WORKB,CMPREVPT           GET ADDR.OF PREV.ENTRY ON CHAIN 13080021
         L     WORKC,0(CESD)            GET ADDR.OF NEXT ENTRY ON CHAIN 13100021
         LTR   WORKB,WORKB             IS MATCH FIRST ON CHAIN          13120021
         BZ    DECHAIN1                YES                              13140021
         ST    WORKC,0(WORKB)           DECHAIN ENTRY                   13160021
         B     CHAINING                                                 13180021
DECHAIN1 ST    WORKC,CMERCHN           DECHAIN FIRST 'ER' ENTRY         13200021
********                                                        ******* 13220021
*        THIS ROUTINE CHAINS CESD ENTRIES ACCORDING TO TYPE           * 13240021
********                                                        ******* 13260021
CHAINING IC    WORKC,CTYPE(CESD)        GET CESD TYPE                   13280021
         N     WORKC,TYPEONLY                                           13300021
         SLL   WORKC,2                                                  13320021
         LA    WORKC,CMTYPCHN(WORKC)   CALC ADDR OF CHAIN TABLE         13340021
         L     WORKB,0(WORKC)                                           13360021
         ST    CESD,0(WORKC)            CHAIN NEW CESD ENTRY            13380021
         ST    WORKB,0(CESD)                                            13400021
********                                                        ******* 13420021
*        THIS ROUTINE MAKES A TRANSLATION TABLE ENTRY                 * 13440021
********                                                        ******* 13460021
TRANSLAT TM    ETYPE(PTR),X'06'         IS INPUT TYPE 'LD'              13480021
         BC    7,TRANS10                NO, GO TO TRANSLATE ID.         13500021
         TM    ETYPE(PTR),LD                                            13520021
         BO    NEXTESD                  YES,DON'T TRANSLATE             13540021
TRANS10  OI    CMRELFLG,CQESD           YES, SET ESD CALLER INDICATOR   13560021
         BAL   RETURN,TRANSID           GO TO TRANSLATE ID              13580021
         NI    CMRELFLG,CQFF-CQESD      SET OFF ESD CALLER INDICATOR    13600021
         LTR   PARM,PARM                WAS BAD ID ENCOUNTERED          13620021
         BZ    NEXTESD                  YES, GET NEXT ESD ITEM          13640021
         ST    CESD,0(PARM)             MAKE TRANSLATION TABLE ENTRY    13660021
         TM    ETYPE(PTR),X'05'         IS ESD TYPE 'ER'                13680021
         BC    7,NEXTESD               NO                               13700021
         TM    ETYPE(PTR),X'02'                                         13720021
         BZ    NEXTESD         '       NO                               13740021
         OI    0(PARM),ERMATCH         YES, SET INDIC FOR ABS. FACTOR   13760021
*                                            IF AN 'A'TYPE ADCON IS     13780021
*                                            USED TO REFERENCE THIS     13800021
*                                            EXTERNAL REFERENCE, THE    13820021
*                                            LOADER ASSIGNED ADDR.MUST  13840021
*                                            BE USED FOR RELOCATION     13860021
*                                            INSTEAD OF THE NORMAL      13880021
*                                            RELATIVE RELOCATION FACTOR 13900021
********                                                       ******** 13920021
*  THIS ROUTINE PREPARES TO PROCESS THE NEXT ESD IF THERE IS ONE      * 13940021
********                                                       ******** 13960021
NEXTESD  TM    ETYPE(PTR),X'06'         IS INPUT ESD TYPE'LD'           13980021
         BC    7,NEXT10                 NO                              14000021
         TM    ETYPE(PTR),LD                                            14020021
         BO    NEXT20                   YES, DON'T UPDATE ID            14040021
NEXT10   LA    ID,1(ID)                 UPDATE ID                       14060021
NEXT20   LA    PTR,16(PTR)              UPDATE INPUT RECORD PTR         14080021
         SH    LNG,CONT16                                               14100021
         BP    ESDSTART                 GO TO PROCESS NEXT ESD          14120021
         EJECT                                                          14140021
********                                                        ******* 14160021
*   THIS ROUTINE DOES END OF RECORD PROCESSING FOR THE LD CHAIN,IF IT * 14180021
*     EXISTS. THIS CHAIN CONSISTS OF LDS WHOSE SD WAS NOT DEFINED WHEN* 14200021
*     THE LD WAS PROCESSED.                                           * 14220021
********                                                        ******* 14240021
LDRTN    L     PTR,CMLDCHN             GET BEGINNING OF 'LD' CHAIN      14260021
         LTR   PTR,PTR                  IS THERE AN LD CHAIN            14280021
         BZ    LD20                     NO                              14300021
         TM    CTYPE(PTR),LDCHAIN       HAS CHAIN BEEN PROCESSED FOR    14320021
*                                            THIS RECORD                14340021
         BZ    LD10                     NO                              14360021
         NI    CTYPE(PTR),X'FF'-LDCHAIN TURN OFF PROCESSED INDIC        14380021
         B     ESDEND                   BRANCH TO RETURN                14400021
LD10     L     WORKB,0(PTR)             DECHAIN LD ENTRY                14420021
         ST    WORKB,CMLDCHN                                            14440021
         LA    LNG,16                   SET ESD LENGTH TO ONE ENTRY     14460021
         OI    CTYPE(PTR),LDCHAIN       SET PROCESSED THIS RECORD INDIC 14480021
         LA    PTR,4(PTR)              POINT TO ESD ITEM                14500021
         B     ESD35                                                    14520021
LD20     TM    CMLIBFLG,CQCESDR         IS THIS END OF CESD PROCESSING  14540021
         BZ    CESDEND                  YES,CONTINUE END OF CESD PROC.  14560021
ESDEND   L     SAVEREG,4(SAVEREG)       RESTORE SAVE AREA PTR           14580021
         RETURN (14,12),T                                               14600021
         EJECT                                                          14620021
**********************  SPECIAL LOAD MODULE PROCESSING **************** 14640021
*     THIS ROUTINE SETS ASIDE ALL PC,SD,AND LR CESD TYPES FOR A LOAD  * 14660021
*       MODULE AND THEN PROCESSES THEM AT END OF CESD.  THIS IS NEEDED* 14680021
*       BECAUSE SOME LOAD MODULES ARE NOT ASSIGNED ADDRESSES ACCORDING* 14700021
*       TO THE ORDER IN THE CESD.                                     * 14720021
*********************************************************************** 14740021
LOADPROC TM    CMLIBFLG,CQCESDR         IS THIS END OF CESD             14760021
         BZ    CESDEND                  YES,GO TO END OF CESD PROCESS   14780021
         TM    ETYPE(PTR),NULL          IS TYPE SD,PC OR LR             14800021
         BO    ESD15                    TYPE IS NULL                    14820021
         BZ    LOAD20                   TYPE IS SD                      14840021
         TM    ETYPE(PTR),LR                                            14860021
         BC    6,ESD10                  TYPE IS CM,PR,OR ER             14880021
         BZ    LOAD10                   TYPE IS PC                      14900021
         OI    CMCURRID,X'80'           IDENTIFY TYPE AS LR             14920021
         B     LOAD20                                                   14940021
LOAD10   TM    ETYPE(PTR),X'10'        IS PC DELETE(ENTAB-SEGTAB)       14960021
         BO    ESD15                   GO TO PROCESS AS NULL            14980021
LOAD20   BAL   RETURN,CESDENT           GET CESD ENTRY                  15000021
         MVC   CNAME(16,CESD),ENAME(PTR) MOVE  INFO.TO CESD ENTRY       15020021
         MVC   CTYPE+2(3,CESD),EADR+1(PTR) CREATE SPECIAL ENTRY FOR ID  15040021
         MVC   CTYPE(2,CESD),CMCURRID   MOVE ID AND TYPE TO CESD ENTRY  15060021
         NI    CMCURRID,X'7F'          CLEAR LR INDIC                   15080021
         LA    WORKA,CMLOADCH           SET AS PREVIOUS CHAIN ADDR      15100021
         L     WORKC,CMLOADCH           GET BEGINNING CHAIN ADDR        15120021
LOAD25   LA    WORKC,0(WORKC)           CLEAR SEGMENT NUMBER            15140021
         LTR   WORKC,WORKC              IS THIS END OF CHAIN            15160021
         BZ    LOAD45                   YES,GO TO CHAIN ENTRY           15180021
         CLC   ESEGNO(1,PTR),0(WORKC)   COMPARE SEGMENT NUMBERS         15200021
         BL    LOAD45                   CHAIN BEFORE                    15220021
         BH    LOAD30                   CONTINUE SEARCH                 15240021
         CLC   EADR+1(3,PTR),CADR+2(WORKC) COMPARE ADDRESSES            15260021
         BE    LOAD40                   ADDR. EQUAL                     15280021
         BL    LOAD45                   INPUT ADDR. LT EXISTING ADDR.   15300021
LOAD30   LR    WORKA,WORKC              SAVE AS RPEVIOUS CHAIN ADDR     15320021
         L     WORKC,0(WORKC)           GET NEXT ENTRY FROM CHAIN       15340021
         B     LOAD25                   CONTINUE SEARCH                 15360021
LOAD40   TM    ETYPE(PTR),X'03'        CHAIN LRS AFTER SDS,PCS  YA00379 15380001
         BO    LOAD30                  TYPE IS LR. CONT SEARCH  YA00379 15400001
LOAD45   LR    WORKC,WORKA              CHAIN BEFORE MATCHED ENTRY      15420021
LOAD50   L     WORKB,0(WORKC)           CHAIN AFTER  MATCHED ENTRY      15440021
         ST    WORKB,0(CESD)                                            15460021
         MVC   0(1,CESD),ESEGNO(PTR)    ENTER SEGMENT NUMBER            15480021
         ST    CESD,0(WORKC)                                            15500021
         SRL   WORKB,24                 RIGHT ADJUST SEGMENT NUMBER     15520021
         STC   WORKB,0(WORKC)           PRESERVE SEGMENT NUMBER         15540021
         B     NEXTESD                  GET NEXT ESD                    15560021
CESDEND  L     WORKC,CMTEMPCH           GET ADDR.OF FREE LOAD CHN.ENTRY 15580021
         LTR   WORKC,WORKC             IS THERE A LOAD CH ENTRY TO FREE 15600021
         BZ    CESDEND0                NO                               15620021
         L     WORKB,CMESDCHN          YES,CHAIN IT TO FREE ESD CHAIN   15640021
         ST    WORKC,CMESDCHN                                           15660021
         ST    WORKB,0(WORKC)                                           15680021
         XC    CMTEMPCH(4),CMTEMPCH    CLEAR CHAIN POINTER              15700021
CESDEND0 L     PTR,CMLOADCH            GET NEXT ESD                     15720021
         LA    PTR,0(PTR)               CLEAR SEGMENT NUMBER            15740021
         LTR   PTR,PTR                  ANY ENTRIES ON CHAIN            15760021
         BZ    ESDEND                   NO, RETURN TO CALLER            15780021
         LA    LNG,16                   SET LENGTH EQ TO ONE ESD ENTRY  15800021
         LH    ID,CTYPE(PTR)            GET  ID                         15820021
         MVC   CADR+1(3,PTR),CADR+2(PTR) READJUST INPUT ADDR FIELD      15840021
         MVI   CREL(PTR),X'00'         CLEAR HIGH BYTE OF R.C.          15860021
         TM    CTYPE(PTR),X'80'         IS TYPE'LR'                     15880021
         BZ    CESDEND1                 NO                              15900021
         SLL   ID,17                    YES, ZERO HIGH ORDER BITS OF ID 15920021
         SRL   ID,17                                                    15940021
         MVI   CTYPE(PTR),LR           SET TYPE TO 'LR'                 15960021
         B     CESDEND2                                                 15980021
CESDEND1 MVI   CTYPE(PTR),SD           SET TYPE TO 'SD'                 16000021
         CLI   CNAME(PTR),C' '         IS TYPE 'PC'                     16020021
         BNE   CESDEND2                NO                               16040021
         MVI   CTYPE(PTR),PC           SET TYPE TO 'PC'                 16060021
CESDEND2 L     WORKC,0(PTR)             TAKE ENTRY OFF LOAD CHAIN       16080021
         LA    WORKC,0(WORKC)           CLEAR SEGMENT NUMBER            16100021
         ST    WORKC,CMLOADCH                                           16120021
         LA    PTR,0(PTR)               CLEAR SEGMENT NUMBER            16140021
         ST    PTR,CMTEMPCH            SAVE ESD PTR TO FREE AFTER PROC. 16160021
         LA    PTR,4(PTR)               UPDATE PAST CHAIN FIELD         16180021
         STH   ID,CMCURRID             SAVE ID                          16200021
         B     ESD10                    GO TO PROCESS ESD               16220021
         EJECT                                                          16240021
********************  CESD ENTRY ALLOCATION  ************************** 16260021
*                                                                     * 16280021
*    THIS SUBROUTINE GETS A CESD ENTRY FROM CESD FREE ENTRIES CHAIN   * 16300021
*       OR CALLS THE ALLOCATE ROUTINE FOR ALLOCATION OF ONE ENTRY     * 16320021
*       THE ENTRY ADDRESS IS RETURNED IN #PARM AND #CESD              * 16340021
*                                                                     * 16360021
*********************************************************************** 16380021
CESDENT  STM   14,1,12(13)              SAVE REGISTERS 14-1             16400021
         L     PARM,CMESDCHN            GET BEGINNING OF FREE CESD CHN  16420021
         LTR   PARM,PARM                IS IT EMPTY                     16440021
         BC    7,CESDDCHN              NO                               16460021
         LA    ZERO,20                  SET ENTRY LENGTH                16480021
         BAL   RETURN,ALLOCATE          GO TO ALLOCATE A CESD ENTRY     16500021
CESDRTRN LM    14,0,12(13)              YES,RESTORE REGS. 14-0          16520021
         LR    CESD,PARM                                                16540021
         BR    RETURN                   RETURN                          16560021
CESDDCHN L     ZERO,0(PARM)            DECHAIN ENTRY FROM FREE CHAIN    16580021
         ST    ZERO,CMESDCHN                                            16600021
         B     CESDRTRN                 GO TO RETURN                    16620021
         EJECT                                                          16640021
**********************  MAKE CESD ENTRY FOR PC AND SD  **************** 16660021
*                          #CESD-ADDR.OF CESD ENTRY                   * 16680021
*                          #PTR-ADDR.OF INPUT ESD ITEM                * 16700021
*********************************************************************** 16720021
ENTER    MVC   CNAME(8,CESD),ENAME(PTR) MOVE NAME TO CESD               16740021
         L     WORKC,CMMODLNG          GET ACCUM. LENGTH                16760021
         LA    WORKC,7(WORKC)                                           16780021
         N     WORKC,DBLWRD            ROUND TO DOUBLE WORD             16800021
         ST    WORKC,CMMODLNG          SAVE ROUNDED LENGTH              16820021
         TM    CMFLAG4,CQMOD      IS THIS COMPILER-LOADED TEXT          16840021
         BZ    ENTER05            NO                                    16860021
         A     WORKC,CMCORE1      YES. USE COMPILER-ASSIGNED ADR        16880021
         B     ENTER10                                                  16900021
ENTER05  A     WORKC,CMNXTTXT     CALCUATE NEXT CSECT ADDRESS           16920021
         CL    WORKC,CMLOWTBL           HAS CORE BEEN EXCEEDED          16940021
         BH    RERSIZE2                 YES,PROGRAM TOO LARGE-ABORT     16960021
ENTER10  ST    WORKC,CADR(CESD)         LOADER ASSIGNED ADDR TO CESD    16980021
         MVC   CTYPE(1,CESD),ETYPE(PTR) MOVE FLAG FIELD TO CESD         17000021
         NI    CTYPE(CESD),X'07'        CLEAR FLAGS EXCEPT FOR TYPE     17020021
         L     WORKB,EADR(PTR)          GET INPUT ADDR.                 17040021
         LA    WORKB,0(WORKB)           CLEAR HIGH ORDER BYTES          17060021
         SR    WORKC,WORKB              RELOC.VALUE=LAA-INPUT ADDR      17080021
         ST    WORKC,CREL(CESD)         RELOC.VALUE TO CESD             17100021
         BR    RETURN                   RETURN                          17120021
         EJECT                                                          17140021
********                                                        ******* 17160021
*    THIS ROUTINE UPDATE THE RELOCATION CONSTANT,THEN GOES TO TRANSLAT* 17180021
********                                                        ******* 17200021
UPDATERC L     WORKC,EADR(PTR)          GET ESD INPUT ADDR.             17220021
         LA    WORKC,0(WORKC)                                           17240021
         L     WORKB,CADR(CESD)        GET LOADER ASSIGNED ADDR.        17260021
         LA    WORKB,0(WORKB)                                           17280021
         SR    WORKB,WORKC              CALC. RELOCATION CONSTANT       17300021
         ST    WORKB,CREL(CESD)         UPDATE RC.                      17320021
         B     TRANSLAT                 GO TO TRANSLATE                 17340021
         EJECT                                                          17360021
********                                                        ******* 17380021
*                        CHECK FOR ENTRY POINT NAME                   * 17400021
********                                                        ******* 17420021
CHECKEP  TM    CMPRMFLG,CQEPNAME+CQEPADDR HAS ENTRY PT.BEEN DEFINED     17440021
         BCR   9,RETURN                 YES OR AN ENTRY POINT WAS NOT   17460021
*                                            SPECIFIED                  17480021
         TM    CMPRMFLG,CQEPNAME        WAS A NAME DEFINED              17500021
         BCR   8,RETURN                 NO,RETURN                       17520021
         CLC   CMEPNAME(8),CNAME(CESD)  IS CURRENT CESD THE ENTRY POINT 17540021
         BCR   7,RETURN                NO                               17560021
         MVC   CMEPADDR+1(3),CADR+1(CESD) YES, SAVE EP  ADDR            17580021
         OI    CMPRMFLG,CQEPADDR        SET EP ADDR DEFINED INDICATOR   17600021
         BR    RETURN                                                   17620021
         EJECT                                                          17640021
***************************  TEXT PROCESSOR  ************************** 17660021
*                                                                     * 17680021
*    THIS ROUTINE LOADS TEXT INTO MAIN STORAGE.   IT  EXPECTS THE     * 17700021
*        FOLLOWING REGISTER CONTENT:                                  * 17720021
*                                                                     * 17740021
*             #ID - TEXT ID                                           * 17760021
*             #ADR- DISPLACEMENT ADDR OF TEXT                         * 17780021
*             #LNG- LENGTH OF TEXT                                    * 17800021
*             #PTR- ADDRESS OF TEXT IN BUFFER                         * 17820021
*                                                                     * 17840021
*********************************************************************** 17860021
HEWLTXT  LTR   LNG,LNG            IS THERE ANY TEXT                     17880021
         BZ    RELOREAD                 NO, GO TO READ NEXT RECORD      17900021
         TM    CMFLAG4,CQMOD      WAS MOD RECORD ALSO RECEIVED          17920021
         BO    RELOREAD           IGNORE THIS TEXT                      17940021
         BAL   RETURN,TRANSID           CONVERT ID TO TRANS.TABLE ADDR  17960021
         LTR   PARM,PARM                WAS CONVERSION POSSIBLE         17980021
         BZ    RELOREAD                 NO,BAD ID ENCOUNTERED           18000021
TXT10    TM    CTYPE(CESD),DELETE       SHOULD TEXT BE DELETED          18020021
         BO    RELOREAD                 TEXT IS DELETE,GO TO READ       18040021
         OI    CMLIBFLG,CQNOTXT        SET TEXT RECEIVED INDICATOR      18060021
         TM    CTYPE(CESD),NOLEN   WAS THIS ZERO-LENGTH CSECT   27445   18080021
         BNO   TXT20               NO                           27445   18100021
         OI    CMRELFLG,CQNOLNTX   SHOW TEXT WAS RECEIVED       27445   18120021
TXT20    A     ADR,CREL(CESD)      CALC MAIN STORAGE TEXT ADR   27445   18140021
         LA    WORKC,0(LNG,ADR)        CALC END TEXT ADDR.              18160021
         CL    WORKC,CMLOWTBL          WILL TEXT OVERLAP TABLES         18180021
         BH    RERSIZE2                YES,PROGRAM TOO LARGE--ABORT     18200021
         BCTR  LNG,0                                                    18220021
         EX    LNG,MOVE2                MOVE TEXT INTO MAIN STORAGE     18240021
         LA    ADR,1(ADR,LNG)          CALC. EXTENT OF TEXT ADDED       18260021
         CL    ADR,CMLSTTXT             IS HIGHEST TEXT ADDR.EXCEEDED   18280021
         BNH   RELOREAD                 NO                              18300021
         ST    ADR,CMLSTTXT             UPDATE HIGHEST TXT ADDR         18320021
         B     RELOREAD                GO TO READ NEXT RECORD           18340021
         EJECT                                                          18360021
****************************MOD PROCESSOR****************************** 18380021
*                                                                     * 18400021
*        THIS ROUTINE PICKS UP ORIGIN AND EXTENT INFORMATION          * 18420021
*        FOR COMPILER-LOADED TEXT FROM MOD CARDS PASSED THROUGH AN    * 18440021
*        INCORE DATA SET.  IT EXPECTS THE FOLLOWING REGISTER CONTENT  * 18460021
*                                                                     * 18480021
*              #LNG - LENGTH OF INFO                                  * 18500021
*         #PTR - ADDRESS OF INFO IN BUFFER                            * 18520021
*                                                                     * 18540021
*********************************************************************** 18560021
HEWLMOD  TM    CMFLAG3,CQINCORE   IS THIS INCORE DATA SET               18580021
         BZ    RELOREAD           NO. IGNORE IT                         18600021
         TM    CMFLAG4,CQESDS     ESD CARDS ALREADY RECEIVED            18620021
         BNZ   RELOREAD           YES. IGNORE THIS THEN                 18640021
         LTR   LNG,LNG            ANY MOD INFO                          18660021
         BZ    RELOREAD           NO. IGNORE IT                         18680021
         OI    CMLIBFLG,CQNOTXT    SET TEXT RECEIVED                    18700021
         OI    CMFLAG4,CQMOD      SET MOD RECEIVED                      18720021
         L     WORKC,0(PTR)       GET ORIGIN OF TEXT                    18740021
         LTR   WORKC,WORKC         WAS IT SPECIFIED                     18760021
         BZ    MODEXTNT            NO. SEE IF EXTENTS DEFINED           18780021
MOD10    ST    WORKC,CMCORE1      SAVE ORIGIN OF TEXT                   18800021
         L     WORKC,4(PTR)       GET LAST ADDRESS                      18820021
         ST    WORKC,CMCORE2      SAVE IT                               18840021
MODEXTNT LA    WORKC,8             SEE IF THERE'S EXTENT INFO           18860021
         SR    LNG,WORKC           IS LENGTH GREATER THAN 8             18880021
         BNP   RELOREAD            NO. BRANCH                           18900021
MODEXT   LA    ZERO,12             GET THREE WORDS TO SAVE              18920021
         BAL   RETURN,ALLOCATE     EXTENT INFO IN                       18940021
         L     WORKC,CMLOWTBL      FIND ADDRESS                         18960021
         MVC   0(4,WORKC),CMXLCHN  CHAIN IT                             18980021
         MVC   CMXLCHN(4),CMLOWTBL TO OTHER EXTENTS                     19000021
         MVC   4(8,WORKC),8(PTR)   MOVE IN EXTENT INFO                  19020021
         LH    WORKC,CMNUMXS       PICK UP NUMBER OF EXTENTS            19040021
         TM    CMPRMFLG,CQEPNAME+CQEPADDR   HAS ENTRY POINT BEEN DEF    19060021
         BNZ   MODEXT1             YES.                                 19080021
         LTR   WORKC,WORKC         NO. IS THIS FIRST EXTENT             19100021
         BNZ   MODEXT1             NO                                   19120021
         MVC   CMEPADDR(4),8(PTR)  YES. USE IT AS ENTRY POINT           19140021
MODEXT1  LA    WORKC,1(WORKC)      ADD AN EXTENT                        19160021
         STH   WORKC,CMNUMXS       TO TOTAL                             19180021
         B     RELOREAD            GO GET ANOTHER RECORD                19200021
         EJECT                                                          19220021
*************************   RLD PROCESSOR   *************************** 19240021
*                                                                     * 19260021
*    THIS SUBROUTINE RELOCATES ADDRESS CONSTANTS USING THE RELOCATION * 19280021
*      DICTIONARY (RLDS) ENTRIES SENT IT.  IF RELOCATION IS NOT       * 19300021
*      POSSIBLE, THE RLDS ARE CHAINED OFF OF THE R PTR CESD ENTRY.    * 19320021
*      IT EXPECTS:                                                    * 19340021
*            #PTR-POINTER TO RLD INFORMATION                          * 19360021
*            #LNG-LENGTH OF RLD INFORMATION                           * 19380021
*********************************************************************** 19400021
HEWLRLD  EQU   *                                                        19420021
         STM   14,12,12(13)             SAVE REGISTERS                  19440021
RLDBASE  BALR  BASE,0                                                   19460021
         USING *,BASE                                                   19480021
         L     BASE,ABEGIN                                              19500021
         USING HEWLRELO,BASE      RESET BASE TO INITIAL VALUE           19520021
         L     BASE2,ABEG4096           SET UP SECOND BASE REG  SA49491 19530000
         USING HEWLRELO+4096,BASE2     ESTABLISH ADDRESSABILITY SA49491 19532000
         B     NRLD+8                                                   19540021
NRLD     DC    C'HEWLRLD '                                              19560021
         L     SAVEREG,8(SAVEREG)       PICK UP NEXT SAVE AREA ADDR.    19580021
RLD10    LTR   LNG,LNG                  ARE ALL RLDS PROCESSED          19600021
         BC    2,RLD30                  NO.                             19620021
RLD19    L     SAVEREG,4(SAVEREG)       RESTORE SAVE AREA PTR           19640021
         RETURN (14,12),T                                               19660021
*                                                                     * 19680021
*                    CHECK VALIDITY OF P PTR                          * 19700021
*                                                                     * 19720021
RLD30    TM    CMRELFLG,CQENTRY         IS THIS THE ENTRY POINT RLD     19740021
         BO    RLD35                    YES                             19760021
         LH    ID,P(PTR)                GET P PTR                       19780021
         BAL   RETURN,TRANSID           GET TRANS. TABLE ENTRY ADDR     19800021
         LTR   PARM,PARM                WAS TRANSLATION POSSIBLE        19820021
         BZ    RLD65                    NO                              19840021
         L     WORKA,0(PARM)            GET CESD ENTRY ADDR             19860021
         TM    CTYPE(WORKA),DELETE      IS CSECT MARKED DELETE          19880021
         BO    RLD65                    YES                             19900021
         TM    RLDFLG(PTR),ACCUMPR     IS RLD CXD PSEUDO REG. TYPE      19920021
         BO    RLD40                   YES                              19940021
*                                                                     * 19960021
*                       CHECK VALIDITY OF R PTR                       * 19980021
*                                                                     * 20000021
RLD35    LH    ID,R(PTR)                GET R PTR                       20020021
         BAL   RETURN,TRANSID           GET TRANS, TABLE ENTRY ADDR     20040021
         LTR   PARM,PARM                WAS TRANSLATION POSSIBLE        20060021
         BZ    RLD65                    NO                              20080021
*                                                                     * 20100021
*           RELOCATE ADCON ADDRESS - MAKE RLD TABLE ENTRY             * 20120021
*                                                                     * 20140021
RLD40    L     PARM,CMRLDCHN            GET BEG.ADDR OF FREE RLD TABLE  20160021
*                                            ENTRIES                    20180021
         LTR   PARM,PARM                IS IT EMPTY                     20200021
         BC    7,RLD45                  NO                              20220021
         LA    ZERO,8                   YES, INDICATE ENTRY SIZE        20240021
         BAL   RETURN,ALLOCATE          GO TO ALLOCATE ENTRY            20260021
         B     RLD48                    NO, CONTINUE PROCESSING         20280021
RLD45    L     ZERO,0(PARM)             DECHAIN ENTRY FROM FREE CHAIN   20300021
         ST    ZERO,CMRLDCHN                                            20320021
RLD48    L     WORKB,RLDADR(PTR)                                        20340021
         LA    WORKB,0(WORKB)                                           20360021
         A     WORKB,CREL(WORKA)        CALC. ADCON ADDRESS             20380021
         ST    WORKB,4(PARM)            SAVE ADCON ADDRESS IN RLD TABLE 20400021
         TM    RLDFLG(PTR),ACCUMPR     IS RLD CXD PSEUDO REG. TYPE      20420021
         BO    RLD100                  YES                              20440021
         MVC   4(1,PARM),RLDFLG(PTR)    SAVE FLAG FIELD IN RLD TABLE    20460021
         LTR   CESD,CESD               IS ABSOLUTE FACTOR NEEDED        20480021
         BC    11,RLD49                NO                               20500021
         OI    4(PARM),ERMATCH         USE ABSOLUTE FACTOR              20520021
*                                                                     * 20540021
*        CHECK R PTR TYPE --- RELOCATE RLD OR CHAIN IT TO CESD ENTRY  * 20560021
*                                                                     * 20580021
RLD49    TM    CTYPE(CESD),LR          R PTR TYPE IS SD,PC,OR LR        20600021
         BM    RLD70                    NO                              20620021
         XC    0(4,PARM),0(PARM)       CLEAR CHAIN FIELD                20640021
         BAL   RETURN,HEWLERTN    GO TO RELOCATE RLD                    20660021
RLD50    TM    RLDFLG(PTR),CONT         IS NEXT RLD ITEM CHAINED        20680021
         BC    14,RLD60                 NO, GO TO GET NEXT R-P PTR      20700021
*                                                                     * 20720021
*                     UPDATE TO NEXT FA FIELD                         * 20740021
*                                                                     * 20760021
         LA    PTR,4(PTR)               UPDATE TO NEXT FA FIELD         20780021
         SH    LNG,CONT4                                                20800021
         CH    LNG,CONT4                ARE ANY RLDS LEFT               20820021
         BH    RLD40                    YES, GO TO PROCESS NEXT RLD     20840021
         BAL   RETURN,RERINPT9          INVALID INPUT FROM OBJ MODULE   20860021
         B     RLD19                   RETURN                           20880021
*                                                                     * 20900021
*              UPDATE TO NEXT R-P PTR                                 * 20920021
*                                                                     * 20940021
RLD60    LA    PTR,8(PTR)               UPDATE RLD PTR                  20960021
         SH    LNG,CONT8                DECR. LENGTH                    20980021
         B     RLD10                    GO TO PROCESS NEXT R-P PTR      21000021
RLD65    TM    RLDFLG(PTR),CONT         NEXT ITEM CHAINED               21020021
         BZ    RLD60                    NO                              21040021
         LA    PTR,4(PTR)               UPDATE POINTER                  21060021
         SH    LNG,CONT4                                                21080021
         LTR   LNG,LNG                  HAS RECORD END BEEN REACHED     21100021
         BC    2,RLD65                  NO, CONTINUE SEARCH FOR R-P     21120021
         B     RLD19                    YES, RETURN TO CALLER           21140021
*                                                                     * 21160021
*     R PTR TYPE IS CM,PR,OR ER  - CHAIN RLD TO CESD ENTRY            * 21180021
*                                                                     * 21200021
RLD70    TM    CTYPE(CESD),CM          IS CESD TYPE COMMON              21220021
         BO    RLD75                   YES                              21240021
         BZ    RLD72                    NO, CESD TYPE IS ER             21260021
         OI    4(PARM),PRRLD            CESD TYPE IS 'PR',SET PR FLAG   21280021
         B     RLD80                                                    21300021
*                                       PRECEDING CODING TO MARK RLD AS 21320021
*                                       DISPLACEMENT PR IS INCLUDED     21340021
*                                       BECAUSE THE ASSEMBLER PUTS OUT  21360021
*                                       NON-BRANCH RLDS FOR Q-TYPE      21380021
*                                       ADDRESS CONSTANTS               21400021
RLD72    TM    CTYPE(CESD),DELINK       DOES RLD NEED DELINKING         21420021
         BZ    RLD80                    NO                              21440021
RLD75    OI    CMRELFLG,CQDELINK        SET SPECIAL RELOCATION INDIC.   21460021
         BAL   RETURN,HEWLERTN    GO TO DELINK ADCON                    21480021
RLD80    L     WORKC,CADR(CESD)                                         21500021
         ST    PARM,CADR(CESD)                                          21520021
         ST    WORKC,0(PARM)            CHAIN RLD TO CESD ENTRY         21540021
         MVC   CADR(1,CESD),0(PARM)    PRESERVE TYPE INDIC              21560021
         MVI   0(PARM),X'00'           CLEAR TYPE FROM CHAIN ADDR       21580021
         B     RLD50                    GO TO CHECK IF NEXT R-P OR ADDR 21600021
*                                                                     * 21620021
*                 RLD IS CXD PSEUDO REGISTER TYPE                     * 21640021
*                                                                     * 21660021
RLD100   L     WORKB,CMCXDPT           CHAIN ACCUM PSEUDO REGISTER      21680021
         ST    PARM,CMCXDPT                                             21700021
         ST    WORKB,0(PARM)                                            21720021
         B     RLD50                   GO TO CHECK IF NEXT R-P OR ADDR  21740021
         EJECT                                                          21760021
****************************  END PROCESSOR  ************************** 21780021
*                                                                     * 21800021
*    THIS ROUTINE PROCESSES THE END CARD FOR LENGTH AND ENTRY POINT.  * 21820021
*      IT ALSO CLEARS THE TRANSLATION TABLE.  IT EXPECTS:             * 21840021
*              #ID - CONTAINS ID OF ASSEMBLED ADDR. ENTRY             * 21860021
*              #PTR- ADDR OF SYMBOLIC ENTRY POINT NAME                * 21880021
*              #ADR- ENTRY POINT ADDRESS IF PRESENT                   * 21900021
*                                                                     * 21920021
*********************************************************************** 21940021
HEWLEND  EQU   *                                                        21960021
         STM   14,12,12(13)             SAVE REGISTERS                  21980021
         BALR  BASE,0                                                   22000021
         USING *,BASE                                                   22020021
         L     BASE,ABEGIN                                              22040021
         USING HEWLRELO,BASE                                            22060021
         L     BASE2,ABEG4096           SET UP SECOND BASE REG  SA49491 22070000
         USING HEWLRELO+4096,BASE2     ESTABLISH ADDRESSABILITY SA49491 22072000
         B     NEND+8                                                   22080021
NEND     DC    C'HEWLEND '                                              22100021
         L     SAVEREG,8(SAVEREG)       PICK UP NEXT SAVE AREA          22120021
         TM    CMIOFLGS,CQEOCB+CQRECFM  IS THIS END OF MODULE PROCESS   22140021
         BC    7,ENDLNG                YES                              22160021
         OI    CMRELFLG,CQNOEND        SET END CARD RECEIVED INDIC      22180021
         L     WORKB,CMLDCHN           GET START OF 'LD' CHAIN          22200021
         LTR   WORKB,WORKB             IS 'LD' CHAIN EMPTY              22220021
         BZ    ENDEPCHK                YES                              22240021
         BAL   RETURN,RERINPT7         INVALID ID ON 'LD' ENTRY         22260021
ENDEPCHK TM    CMPRMFLG,CQEPNAME+CQEPADDR HAS ENTRY POINT BEEN DEFINED  22280021
         BZ    ENDENTRY                 NO                              22300021
********                                                     ********** 22320021
*                  DEFINE CSECT LENGTH AND MODULE EXTENT              * 22340021
********                                                     ********** 22360021
ENDLNG   L     WORKA,CMNXTTXT           GET MODULE START ADDR           22380021
         TM    CMFLAG4,CQMOD      IS THIS COMPILER-LOADED TEXT          22400021
         BZ    END05              NO                                    22420021
         BAL   RETURN,SWITCH      SWITCH LIMIT ADDRESSES                22440021
END05    EQU   *                                                        22460021
         TM    CMRELFLG,CQNOLNG         WAS LENGTH ALREADY SPECIFIED    22480021
         BZ    END19                    YES                             22500021
         TM    CMRELFLG,CQNOEND        WAS END CARD MISSING             22520021
         BZ    END12                   YES                              22540021
END10    L     LNG,COL29(PTR)           GET LENGTH FIELD                22560021
         CLI   COL29(PTR),X'00'         IS LENGTH ON END CARD           22580021
         BE    END13                    YES                             22600021
END12    TM    CMRELFLG,CQNOLNTX   WAS TEXT RECEIVED            27445   22620021
         BNO   END12A              NO. CSECT WITH LNG ZERO OKAY 27445   22640021
         BAL   RETURN,RERINPT2     YES. ERROR                   27445   22660021
END12A   EQU   *                                                SA49491 22670000
         SR    LNG,LNG                  CSECT LENGTH 0          SA49491 22672000
         C     LNG,CMMODLNG             MORE THAN ONE CSECT?    SA49491 22674000
         BL    END12B                   MULT CSECTS, ONE ZERO   SA49491 22676000
         L     WORKA,CMLSTTXT           USE CMLSTTXT            SA49491 22678000
         B     END20                                            SA49491 22678400
END12B   EQU   *                                                SA49491 22678800
         L     LNG,CMMODLNG             USE CMMODLNG            SA49491 22679200
         L     WORKA,CMOBJST            GET BEGINING ADDRESS    YA00226 22679601
         B     END20                                            SA49491 22679700
END13    EQU   *                                                SA49491 22679800
         A     LNG,CMMODLNG             UPDATE NEW ACCUM LENGTH SA49491 22679900
         ST    LNG,CMMODLNG             STORE IT BACK           SA49491 22686600
         A     LNG,CMOBJST              COMPUTE HIGH ADDRESS    YA00226 22688601
         CL    LNG,CMLSTTXT             ACCUM GREATER THAN TXT? YA00226 22690601
         L     LNG,CMMODLNG             RESTORE LNG REGISTER    SA49491 22692600
         BH    END20                    YES, GO USE IT          SA49491 22693000
         L     WORKA,CMNXTTXT           GET LENGTH              SA49491 22693100
         ST    WORKA,CMOBJST            SAVE IT                 SA49491 22693200
         B     END20                    GO CALCULATE MODULE LNG SA49491 22699900
END19    L     LNG,CMMODLNG             NO,USE ACCUM MODULE LNG         22780021
END20    AR    WORKA,LNG                CALC. PROGRAM HIGHEST ADDR.     22800021
         LA    WORKA,7(WORKA)                                           22820021
         N     WORKA,DBLWRD             UPDATE TO DBLE. WORD BOUNDARY   22840021
         CL    WORKA,CMLSTTXT           HAS TEXT EXCEEDED SPECIFIED LNG 22860021
         BNL   END25                    NO                              22880021
         L     WORKA,CMLSTTXT           YES,USE ACTUAL TEXT LENGTH      22900021
         LA   WORKA,7(WORKA)            ROUND OFF TO             A47048 22910000
         N    WORKA,DBLWRD              DOUBLEWORD BOUNDARY      A47048 22912000
         BAL   RETURN,RERINPT2          ERROR,TXT RECEIVED EXCEEDS LNG  22920021
END25    ST    WORKA,CMNXTTXT           UPDATE NEXT TEXT ADDRESS        22940021
         ST    WORKA,CMOBJST            SAVE AMOUNT IN OBJST    SA49491 22950000
         ST    WORKA,CMLSTTXT          INITIAL TEXT POINTER             22960021
         TM    CMFLAG4,CQMOD      IS THERE INCORE TEXT                  22980021
         BZ    END26              NO                                    23000021
         BAL   RETURN,SWITCH                                            23020021
END26    EQU   *                                                        23040021
         CL    WORKA,CMHITBL            HAS CORE EXTENT BEEN EXCEEDED   23060021
         BNH   ENDTRCLR                NO                               23080021
         B     RERSIZE2                PROGRAM TOO LARGE--ABORT         23100021
SWITCH   L     WORKB,CMCORE1      SWITCH ADDRESSES                      23120021
         ST    WORKA,CMCORE1      FOR  COMPILER-LOADED TEXT             23140021
         ST    WORKB,CMNXTTXT                                           23160021
         ST    WORKB,CMOBJST            SAVE IT                 SA49491 23170000
         L     WORKA,CMCORE2                                            23180021
         L     WORKB,CMLSTTXT                                           23200021
         ST    WORKA,CMLSTTXT                                           23220021
         ST    WORKA,CMLSTTXT                                           23240021
         ST    WORKB,CMCORE2                                            23260021
         BR    RETURN                                                   23280021
********                                                        ******* 23300021
*                       CLEAR TRANSLATION TABLE                       * 23320021
********                                                        ******* 23340021
ENDTRCLR LA    WORKC,CQMAXEXT           NO. OF TRANS. TABLE EXTENTS     23360021
         BCTR  WORKC,0                                                  23380021
         SLL   WORKC,2                  CALC. DISP INTO TRANS. CTRL.TBL 23400021
         LA    WORKB,CMTRCTRL           ADDR. OF TRANS.CTRL. TABLE      23420021
         LH    WORKA,NEG4                                               23440021
ENDCLEAR L     PTR,0(WORKB,WORKC)       GET ADDR OF EXTENT              23460021
         LTR   PTR,PTR                  HAS EXTENT BEEN ALLOCATED       23480021
         BZ    ENDLOOP                  NO                              23500021
         XC    0(CQEXTSIZ,PTR),0(PTR)   CLEAR EXTENT                    23520021
ENDLOOP  BXH   WORKC,WORKA,ENDCLEAR     DECR-TEST-LOOP OR CONTINUE      23540021
         XC    CMMODLNG(4),CMMODLNG     CLEAR MODULE LENGTH             23560021
         NI    CMRELFLG,CQNOEND+CQLIB   CLEAR FLAGS                     23580021
         NI    CMFLAG4,X'FF'-CQESDS-CQMOD    SET FLAGS 0                23600021
         L     SAVEREG,4(SAVEREG)       RESTORE SAVE AREA PTR           23620021
         RETURN (14,12),T                                               23640021
********                                                        ******* 23660021
*                        ENTRY POINT DEFINITION                       * 23680021
********                                                        ******* 23700021
ENDENTRY CH    ID,BLNK+2                IS ID PRESENT                   23720021
         BE    ENDSYM                   NO                              23740021
         CL    ADR,BLNK                 HAS ADDR.BEEN SPECIFIED         23760021
         BNE   END100                   YES                             23780021
         SR    ADR,ADR                  NO, SET ADDR TO ZERO            23800021
END100   ST    ADR,CMEPADDR             SAVE ENTRY POINT  ADDR.         23820021
         BAL   RETURN,TRANSID           CONVERT ID TO TRANS.TABLE ADDR  23840021
         LTR   PARM,PARM                WAS TRANSLATION POSSIBLE        23860021
         BZ    ENDLNG                   NO                              23880021
         LA    WORKC,CMEPADDR           CREATE RLD FOR EP               23900021
         ST    WORKC,CMEPNAME+4                                         23920021
         MVI   CMEPNAME+4,X'0C'         SET FLAG  FIELD FOR EP RLD      23940021
         STH   ID,CMEPNAME              SAVE R PTR FOR EP RLD           23960021
         XC    CMEPCESD(4),CMEPCESD     SET RELOC VALUE TO ZERO         23980021
         LA    WORKA,CMEPCESD-16        SIMULATE P PTR CESD ADDR        24000021
         LA    LNG,8                    GET LENGTH OF RLD ENTRY         24020021
         LR    WORKC,PTR                SAVE BUFFER POINTER             24040021
         LA    PTR,CMEPNAME             GET ADDR OF RLD ENTRY           24060021
         OI    CMRELFLG,CQENTRY         SET INDIC NOT TO TRANS P PTR    24080021
         BAL   RETURN,HEWLRLD          GO TO PROCESS RLD FOR EP         24100021
         LR    PTR,WORKC                RESTORE BUFFER POINTER          24120021
ENDADDR  ST    CESD,CMEPCESD            SAVE ENTRY POINT CESD ADDR      24140021
         OI    CMPRMFLG,CQEPADDR        SET EP ADDR RECEIVED            24160021
         B     ENDLNG                                                   24180021
ENDSYM   CLI   0(PTR),BLANK             IS NAME ON END CARD             24200021
         BE    ENDLNG                   NO                              24220021
         MVC   CMEPNAME(8),0(PTR)       SAVE ENTRY POINT NAME           24240021
         OI    CMPRMFLG,CQEPNAME        SET EP NAME RECEIVED            24260021
*                                                                     * 24280021
*                 CHECK IF ENTRY POINT NAME DEFINED YET               * 24300021
*                                                                     * 24320021
         L     WORKC,CMSDCHN            CHECK 'SD' CHAIN                24340021
         LA    RETURN,ENDLRCHN                                          24360021
ENDEP    LTR   WORKC,WORKC              IS THIS END OF CHAIN            24380021
         BCR   8,RETURN                 YES                             24400021
         CLC   CNAME(8,WORKC),CMEPNAME  CHECK FOR ENTRY POINT NAME      24420021
         BE    ENDEPADR                                                 24440021
         L     WORKC,0(WORKC)           UPDATE TO NEXT ENTRY            24460021
         B     ENDEP                                                    24480021
ENDLRCHN LA    RETURN,ENDLNG            SET RETURN REGISTER             24500021
         L     WORKC,CMLRCHN            GET BEGINNING OF LR CHAIN       24520021
         B     ENDEP                    GO TO SEARCH CHAIN              24540021
ENDEPADR MVC   CMEPADDR+1(3),CADR+1(WORKC) SAVE ENTRY POINT ADDR.       24560021
         OI    CMPRMFLG,CQEPADDR        SET INDICATOR FOR EP ADDR       24580021
         B     ENDLNG                   GO TO CHECK LENGTH              24600021
         EJECT                                                          24620021
***********************  TABLE ALLOCATION ROUTINE  ******************** 24640021
*                                                                     * 24660021
*   THIS ROUTINE ALLOCATES TABLE EXTENTS AND RETURNS THE ENTRY ADDR.  * 24680021
*     IN #PARM.  #ZERO MUST CONTAIN EXTENT SIZE ON ENTRY.             * 24700021
*                                                                     * 24720021
*********************************************************************** 24740021
ALLOCATE EQU   *                                                        24760021
         L     PARM,CMLOWTBL            ADDR OF LOWEST USED TABLE ADDR  24780021
         SR    PARM,ZERO                                                24800021
         C     PARM,CMLSTTXT            HAVE TABLES OVERLAPPED TEXT     24820021
         BNL   ALLOC                                                    24840021
         B     RERSIZE2                PROGRAM TOO LARGE--ABORT         24860021
ALLOC    ST    PARM,CMLOWTBL            UPDATE LOWEST TABLE ADDRESS     24880021
         BR    RETURN                   RETURN                          24900021
         EJECT                                                          24920021
**************************  TRANSLATE ROUTINE  ************************ 24940021
*                                                                     * 24960021
*  THIS SUBROUTINE TRANSLATES THE ESD ID TO A CORRESPONDING ENTRY     * 24980021
*     ADDRESS IN  THE TRANSLATE TABLE.  #ID MUST CONTAIN THE ESD ID.  * 25000021
*     THE LOW ORDER BIT OF CMRELFLG SHOULD BE SET TO INDICATE WHETHER * 25020021
*     THE TRANSLATION TABLE ENTRY SHOULD EXIST OR NOT                 * 25040021
*     THE ENTRY ADDRESS IS RETURNED IN #PARM. IF BAD ID,#PARM= 0.     * 25060021
*     THE CONTENTS OF THE ENTRY(CESD ADDR) ARE RETURNED IN #CESD IF   * 25080021
*     REQUESTED BY CQESD FLAG                                         * 25100021
*********************************************************************** 25120021
TRANSID  EQU   *                                                        25140021
         STM   14,12,12(13)             SAVE REGISTERS                  25160021
         BALR  BASE,0                                                   25180021
         USING *,BASE                                                   25200021
         L     BASE,ABEGIN                                              25220021
         USING HEWLRELO,BASE      RESET BASE TO INITIAL VALUE           25240021
         L     BASE2,ABEG4096           SET UP SECOND BASE REG  SA49491 25250000
         USING HEWLRELO+4096,BASE2     ESTABLISH ADDRESSABILITY SA49491 25252000
         B     NTRAN+8                                                  25260021
NTRAN    DC    C'TRANSID '                                              25280021
         L     SAVEREG,8(SAVEREG)       GET NEXT SAVE AREA              25300021
         LTR   ID,ID                    IS ID EQ TO 0                   25320021
         BZ    TRBADID                  YES-ERROR                       25340021
         LA    ZERO,CQEXTSIZ            NO.OF TRANSLATE EXTENT ENTRIES  25360021
         LA    WORKA,CQMAXEXT           MAX. NO. OF EXTENTS             25380021
         SR    WORKC,WORKC              CLEAR EVEN DIVIDE REGISTER      25400021
         DR    WORKC,ZERO               CALC.TRANSLATE CTRL ENTRY NO.   25420021
         CR    ID,WORKA                 HAS EXTENT BEEN ALLOCATED       25440021
         BNL   TRANSERR                 NO                              25460021
         SLL   ID,2                     CALC DISP                       25480021
         LA    ID,CMTRCTRL(ID)          CALC TRANSLATE CTRL ENTRY ADDR  25500021
         L     PARM,0(ID)                                               25520021
         LTR   PARM,PARM                HAS THE EXTENT BEEN ALLOCATED   25540021
         BC    7,CALCADDR               YES, GO TO CALC ADDR            25560021
         TM    CMRELFLG,CQESD           ERROR OR ALLOCATE MORE          25580021
         BZ    TRBADID                  ERROR-BAD ID                    25600021
         LA    ZERO,CQEXTSIZ*4          SIZE OF EXTENT                  25620021
         BAL   RETURN,ALLOCATE          GO TO ALLOCATE EXTENT           25640021
         ST    PARM,0(ID)               PUT EXTENT ADDR IN CTRL TABLE   25660021
         XC    0(CQEXTSIZ*4,PARM),0(PARM) CLEAR TRANSLATION TABLE ENTRY 25680021
CALCADDR SLL   WORKC,2                                                  25700021
         AR    PARM,WORKC               CALC TRANSLATE ENTRY ADDR       25720021
         TM    CMRELFLG,CQESD           SHOULD ESD BE DEFINED           25740021
         BO    ENDALLOC                 NO                              25760021
         L     CESD,0(PARM)             YES,CHECK IF IT IS DEFINED      25780021
         LTR   CESD,CESD                                                25800021
         BZ    TRBADID                  ERROR, IT IS NOT DEFINED        25820021
ENDALLOC L     SAVEREG,4(SAVEREG)       RESTORE REGISTERS               25840021
         LM    2,8,28(13)               PRESERVE REGISTER 1 AND 9       25860021
         LM    10,12,60(13)                                             25880021
         L     14,12(13)                                                25900021
         MVI   12(13),X'FF'             FLAG SAVE AREA                  25920021
         BR    RETURN                   RETURN                          25940021
TRANSERR TM    CMRELFLG,CQESD           TABLE OVERFLOW OR BAD ID        25960021
         BZ    TRBADID                  BAD ID                          25980021
         B     RERSIZE3                TRANS.TABLE SIZE EXCEEDED        26000021
TRBADID  BAL   RETURN,RERINPT7         INVALID ID                       26020021
         SR    PARM,PARM                CLEAR PARM REG.                 26040021
         B     ENDALLOC                 RETURN TO CALLER                26060021
         EJECT                                                          26080021
********************     EXTERNAL REFERENCE RESOLUTION  *************** 26100021
*                                                                     * 26120021
*   THIS SUBROUTINE RELOCATES ALL RLDS ON A CHAIN, THEN RETURNS. WHEN * 26140021
*      ENTERED #PARM-MUST CONTAIN THE STARTING ADDR.OF THE ER CHAIN   * 26160021
*              #CESD-MUST CONTAIN THE CESD ENTRY ADDR TO BE USED FOR  * 26180021
*                    RELOCATION (R PTR ENTRY)                         * 26200021
*                                                                     * 26220021
*********************************************************************** 26240021
HEWLERTN EQU   *                                                        26260021
         STM   14,12,12(13)             SAVE REGISTERS                  26280021
RESOLVER BALR  BASE,0                                                   26300021
         USING *,BASE                                                   26320021
         L     BASE,ABEGIN                                              26340021
         USING HEWLRELO,BASE      RESET BASE TO INITIAL VALUE           26360021
         L     BASE2,ABEG4096           SET UP SECOND BASE REG  SA49491 26370000
         USING HEWLRELO+4096,BASE2     ESTABLISH ADDRESSABILITY SA49491 26372000
         B     NERTN+8                                                  26380021
NERTN    DC    C'HEWLERTN'                                              26400021
         L     SAVEREG,8(SAVEREG)       GET NEXT SAVE AREA              26420021
ERRTN    LTR   PARM,PARM                IS THIS LAST ON CHAIN           26440021
         BC    7,ER5                   NO                               26460021
ER2      L     SAVEREG,4(SAVEREG)       RESTORE PTR TO SAVE AREA        26480021
         RETURN (14,12),T                                               26500021
ER5      LA    LNG,3                    SET LNG OF 4 FOR EX INSTRUCTION 26520021
         TM    4(PARM),X'0C'            IS THE LENGTH EQ TO 4           26540021
         BO    ER10                     YES                             26560021
         LA    LNG,2                    SET LNG OF 3 FOR EX INSTRUCTION 26580021
         TM    4(PARM),X'04'            IS IT A TWO BYTE ADCON          26600021
         BZ    ER10                     NO,CONTINUE RELOCATION          26620021
         LA    LNG,1                    SET LNG EQ 1                    26640021
         TM    4(PARM),PRRLD            IS IT A VALID 2 BYTE PR         26660021
         BO    ER10                     YES,CONTINUE RELOCATION         26680021
         BAL   RETURN,RERINPT5         INVALID TWO BYTE ADCON           26700021
*                                                                     * 26720021
*        MOVE ADCON FROM TEXT TO WORK AREA                            * 26740021
*                                                                     * 26760021
ER10     L     WORKA,4(PARM)            GET TEXT ADDR. OF ADCON         26780021
         LA    WORKA,0(WORKA)           CLEAR HIGH ORDER FLAG FIELD     26800021
         LA    WORKB,CMADCON+3          END ADDR OF ADCON SAVE AREA     26820021
         SR    WORKB,LNG                                                26840021
         MVI   CMADCON,X'00'           CLEAR HIGH ORDER BYTE            26860021
         EX    LNG,MOVEOUT              MOVE ADCON TO WORK AREA         26880021
*                                                                     * 26900021
*        TEST TYPE TO DETERMINE WHAT TYPE OF RELOCATION TO PERFORM    * 26920021
*                                                                     * 26940021
         TM    CMRELFLG,CQDELINK        IS DELINKING NEEDED             26960021
         BO    ER60                     YES                             26980021
         TM    4(PARM),PRRLD           IS THIS A PR RLD                 27000021
         BO    ER15                    YES, GO FOR ABSOLUTE RELOCATION  27020021
         TM    4(PARM),VCON             IS ADCON BRANCH TYPE            27040021
         BZ    ER40                     NO, IT IS NON-BRANCH TYPE       27060021
*                                                                     * 27080021
*                       ABSOLUTE  RELOCATION                          * 27100021
*                                                                     * 27120021
ER15     MVC   CMADCON(4),CADR(CESD)   GET LOADER ASSIGNED ADDRESS      27140021
         MVI   CMADCON,X'00'            CLEAR HIGH ORDER BYTE           27160021
         EX    LNG,MOVEIN               SET ADCON=LOADER ASSIGNED ADDR  27180021
*                                                                     * 27200021
*              PUT RLD ENTRY ON FREE ENTRY CHAIN                      * 27220021
*                                                                     * 27240021
ER20     L     WORKA,0(PARM)            SAVE ER CHAIN PTR               27260021
         L     WORKB,CMRLDCHN           GET START OF CHAIN              27280021
         ST    WORKB,0(PARM)                                            27300021
         ST    PARM,CMRLDCHN            ADD ENTRY TO TOP OF CHAIN       27320021
         LR    PARM,WORKA                                               27340021
         B     ERRTN                    CONTINUE RESOLUTION             27360021
********                                                        ******* 27380021
*                 RELATIVE    RELOCATION                              * 27400021
********                                                        ******* 27420021
ER40     L     WORKA,CREL(CESD)         GET RELOCATION VALUE            27440021
         TM    4(PARM),X'80'           IS ABSOLUTE RELOC FACTOR NEEDED  27460021
         BZ    ER45                    NO                               27480021
         CLI   CTYPE(CESD),CM          IS THIS COMMON            A46172 27490000
         BE    ER45                    YES-ABSOL FACTOR IN CREL  A46172 27492000
         L     WORKA,CADR(CESD)        GET ABSOLUTE RELOC FACTOR        27500021
         LA    WORKA,0(WORKA)                                           27520021
ER45     TM    4(PARM),X'02'           DOES RLD INDICATE SUBT.          27540021
         BZ    ER50                     NO                              27560021
         LCR   WORKA,WORKA              COMPLEMENT VALUE                27580021
ER50     A     WORKA,CMADCON           RELOCATE ADCON                   27600021
         ST    WORKA,CMADCON            STORE ADCON VALUE FOR MOVE      27620021
         L     WORKA,4(PARM)            GET TEXT ADDR. FOR ADCON        27640021
         EX    LNG,MOVEIN               MOVE RELOCATED ADCON TO TEXT    27660021
         B     ER20                                                     27680021
*                                                                     * 27700021
*       SPECIAL DELINKING FOR ADCONS POINTING TO COMMON AREAS.        * 27720021
*                                                                     * 27740021
ER60     L     WORKC,CREL(CESD)         GET ADDR OF EXTENDED CM ENTRY   27760021
         TM    CTYPE(CESD),CM           DOES WORKC CONTAIN ADDR OF EXT. 27780021
*                                          ENTRY(CM) OR INPUT ADDR(ER)  27800021
         BNZ   ER65                     WORKC CONTAINS INPUT ADDR(ER)   27820002
         NI    CREL(CESD),X'7F'        TURN OFF DELETE BIT      ZA01335 27830002
         B     ER70                    CONTINUE                 ZA01335 27832002
ER65     EQU   *                       HERE IF COMMON           ZA01335 27834002
         L     WORKC,CADR(WORKC)        GET INPUT ADDR FOR COMMON       27840021
         OI    4(PARM),X'80'            SHOW ABS RELO FAC NEEDED A46172 27850000
ER70     LA    WORKC,0(WORKC)           CLEAR HIGH ORDER BYTE           27860021
         L     ZERO,CMADCON             GET ADCON VALUE                 27880021
         SR    ZERO,WORKC               SUBTRACT INPUT ADDR             27900021
         ST    ZERO,CMADCON                                             27920021
         EX    LNG,MOVEIN               MOVE DELINKED VALUE BACK TO TXT 27940021
         NI    CMRELFLG,CQFF-CQDELINK   SET DELINK INDICATOR OFF        27960021
         B     ER2                                                      27980021
         EJECT                                                          28000021
******************************* IEWLMAP ******************************* 28020021
*                                                                     * 28040021
* THIS SUBROUTINE FORMATS THE MAP PRINT LINE AND USES THE PRINT  RTN. * 28060021
*     #CESD=ADDR OF CESD ENTRY TO BE MAPPED                           * 28080021
*                                                                     * 28100021
**********                                                      ******* 28120021
HEWLMAP  EQU   *                                                        28140021
         STM   14,12,12(13)             SAVE REGISTERS                  28160021
         BALR  BASE,0                                                   28180021
         USING *,BASE                                                   28200021
         L     BASE,ABEGIN                                              28220021
         USING HEWLRELO,BASE                                            28240021
         L     BASE2,ABEG4096           SET UP SECOND BASE REG  SA49491 28250000
         USING HEWLRELO+4096,BASE2     ESTABLISH ADDRESSABILITY SA49491 28252000
         B     NMAP+8                                                   28260021
NMAP     DC    C'HEWLMAP '                                              28280021
         TM    CMPRMFLG,CQMAP           IS MAP OPTION SPECIFIED         28300021
         BZ    MAPRETRN                 NO                              28320021
         L     SAVEREG,8(SAVEREG)       PICK UP NEXT SAVE AREA          28340021
         CLC   CMWTBFCT(2),CMMAPLIN   IS LINE FULL                      28360021
         BL    MAP20                    NO,MAKE ENTRY                   28380021
         L     BRANCH,ADPRINT                                           28400021
         BALR  RETURN,BRANCH            GO TO PRINT LINE-GET NEW LINE   28420021
MAP20    L     PTR,CMPUTREC                                             28440021
         AH    PTR,CMWTBFCT             CALC NEXT BUFFER ADDR.          28460021
         TM    CMFLAG4,CQMOD       WAS THIS PASSED THROUGH MOD RECORD   28480021
         BNO   MAP30               NO. CHECK AUTOCALL                   28500021
         MVC   SUFFIXNM(3,PTR),TRISTAR   YES. MARK AS PRE-LOADED TEXT   28520021
         B     MAPNAME                                                  28540021
MAP30    EQU   *                                                        28560021
         TM    CMLIBFLG,CQAUTOC         WAS ENTRY CREATED BY AUTOCALL   28580021
         BZ    MAPNAME                  NO                              28600021
         MVI   SUFFIXNM(PTR),C'*'       YES, MOVE IN LIBRARY DESIGNATOR 28620021
         TM    CMRELFLG,CQLIB           IS RESOLUTION FROM SYSLIB       28640021
         BO    MAPNAME                  YES                             28660021
         MVI   SUFFIXNM+1(PTR),C'*'     NO,FROM LINK PACK AREA          28680021
MAPNAME  MVC   NAME(8,PTR),CNAME(CESD)  MOVE IN NAME                    28700021
         TM    CTYPE(CESD),NULL         IS IT AN 'SD'                   28720021
         BZ    MAPSD                    YES                             28740021
         TM    CTYPE(CESD),LR           IS IT AN 'LR'                   28760021
         BO    MAPLR                    YES                             28780021
         BZ    MAPPC                    IT IS 'PC'                      28800021
         TM    CTYPE(CESD),CM           IS IT A 'CM'                    28820021
         BO    MAPCM                    YES                             28840021
MAPPR    MVC   TYPE(2,PTR),PRTYPE       IT IS A 'PR',MOVE IN 'PR'TYPE   28860021
         B     MAPADDR                  GO TO MAP ADDR                  28880021
MAPSD    MVC   TYPE(2,PTR),SDTYPE       IT IS AN 'SD'MOVE IN 'SD' TYPE  28900021
         B     MAPADDR                  GO TO CHECK FOR EP NAME         28920021
MAPLR    MVC   TYPE(2,PTR),LRTYPE       IT IS AN 'LR' MOVE IN 'LR'TYPE  28940021
         B     MAPADDR                  GO TO CHECK FOR EP NAME         28960021
MAPPC    MVC   PREFIXNM(13,PTR),PRIVATE IT IS A 'PC',MOVE IN PRIVATE    28980021
         B     MAPADDR                               DESIGNATOR         29000021
MAPCM    MVC   TYPE(2,PTR),CMNTYPE      IT IS CM, MOVE IN TYPE          29020021
         CLI   CNAME(CESD),BLANK        IS IT BLANK COMMON              29040021
         BNE   MAPADDR                  NO                              29060021
         MVC   PREFIXNM(9,PTR),BLANKCOM MOVE IN BLANK COMMON DESIGNATOR 29080021
MAPADDR  L     PARM,CADR(CESD)          GET ADDR TO BE MAPPED           29100021
         BAL   14,HEWLCNVT        GO TO CONVERSION ROUTINE              29120021
         MVC   ADDR(6,PTR),CMXDBLWD+1   MOVE IN CONVERTED ADDR          29140021
         LH    PARM,CMWTBFCT                                            29160021
         LA    PARM,ENTRYSZ(PARM)                                       29180021
         STH   PARM,CMWTBFCT            UPDATE BUFFER BYTE COUNT        29200021
         L     SAVEREG,4(SAVEREG)       PICK UP LAST SAVE AREA          29220021
MAPRETRN RETURN (14,12),T                                               29240021
         EJECT                                                          29260021
************************ CONVERSION  ROUTINE  ************************* 29280021
*                                                                     * 29300021
*   THIS SUBROUTINE CONVERTS A BINARY QUANTITY IN REGISTER 1  TO      * 29320021
*       PRINT CHARACTERS.  THE RESULT IS IN THE COMMUNICATIONS AREA   * 29340021
*       CMDBLEWD+1. REGISTERS  0 AND 1 DESTROYED                      * 29360021
*                                                                     * 29380021
***************                             *************************** 29400021
HEWLCNVT EQU   *                                                        29420021
         BALR  BASE,0                                                   29440021
         USING *,BASE                                                   29460021
         L     BASE,ABEGIN                                              29480021
         USING HEWLRELO,BASE      RESET BASE TO INITIAL VALUE           29500021
         L     BASE2,ABEG4096           SET UP SECOND BASE REG  SA49491 29510000
         USING HEWLRELO+4096,BASE2     ESTABLISH ADDRESSABILITY SA49491 29512000
         LA    PARM,0(PARM)             CLEAR HIGH ORDER BITS           29520021
         LTR   PARM,PARM                TEST FOR ZERO                   29540021
         BC    7,CVTCONT                NO                              29560021
         MVC   CMXDBLWD+1(6),ZEROADDR   STORE ZERO                      29580021
         BR    RETURN                   RETURN                          29600021
CVTCONT  ST    PARM,CMXDBLWD            PLACE BINARY QUANTITY IN AREA   29620021
         UNPK  CMXDBLWD+1(7),CMXDBLWD+1(4) UNPACK BINARY QUANTITY       29640021
         MVZ   CMXDBLWD+1(6),CMXDBLWD   ZERO ZONES FOR TRANSLATE        29660021
         TR    CMXDBLWD+1(6),TRTABLE    TRANSLATE FOR PRINTING          29680021
         LA    ZERO,1                   LOAD INCREMENT                  29700021
         LA    PARM,CMXDBLWD+1          GET ADDR. OF CONVERTED QUANTITY 29720021
HIGHZERO CLI   0(PARM),C'0'             TEST FOR ZERO                   29740021
         BCR   7,RETURN                 NONE, SO RETURN                 29760021
         MVI   0(PARM),C' '             REPLACE ZERO WITH BLANK         29780021
         BXH   PARM,ZERO,HIGHZERO       INCR AND LOOP TO NEXT DIGIT     29800021
         EJECT                                                          29820021
         DS    0F                                       ZA01335,SA49491 29822002
*    THE FOLOWING TWO CONSTANTS MUST BE WITH THE FIRST 2K       SA49491 29830002
ABEGIN   DC    A(HEWLRELO)        USED TO ESTABLISH ADDR.               29832002
ABEG4096 DC    A(HEWLRELO+4096)   ADCON FOR SECOND BASE         SA49491 29834002
*                                                                     * 29840021
***********************  ERROR  ROUTINES  ***************************** 29860021
*                                                                     * 29880021
RERINPT2 LA    ZERO,ERINPT2             INVALID LNG SPECIFIED FOR CSECT 29900021
         B     ERROR                                                    29920021
RERINPT4 LA    ZERO,ERINPT4            DOUBLY DEFINED SYMBOL----        29940021
         LR    PARM,PTR                      CONFLICTING TYPES          29960021
         B     ERROR                                                    29980021
RERINPT5 LA    ZERO,ERINPT5            INVALID TWO-BYTE ADCON           30000021
         B     ERROR                                                    30020021
RERINPT7 LA    ZERO,ERINPT7            INVALID ID                       30040021
         B     ERROR                                                    30060021
RERINPT8 LA    ZERO,ERINPT8            CARD PRINTED NOT OBJECT CARD     30080021
         B     ERR                                                      30100021
RERINPT9 LA    ZERO,ERINPT9            INVALID INPUT FROM OBJ. MODULE   30120021
         B     ERR                                                      30140021
RERINPTA LA    ZERO,ERINPT10            WARNING--NO END CARD            30160021
         B     ERROR                                                    30180021
RERSIZE2 LA    ZERO,ERSIZE2            PROGRAM TOO LARGE                30200021
         B     ERROR                                                    30220021
RERSIZE3 LA    ZERO,ERSIZE3            TRANS. TABLE OVERFLOW            30240021
         B     ERROR                        CONFLICTING TYPES           30260021
ERR      L     PARM,CMGETREC           GET ADDR.OF BUF.TO BE PRINTED    30280021
         TM    CMFLAG3,CQINCORE    IS THIS INCORE DATA SET              30300021
         BZ    ERROR               NO. GO AHEAD                         30320021
         OI    CMIOFLGS,CQEOFB+CQEOCB  YES. SET FLAGS SO WE WON'T READ  30340021
*                                           ANY MORE                    30360021
ERROR    LR    WORKC,RETURN            SAVE RETURN REGISTER             30380021
         L     BRANCH,ADERROR                                           30400021
         BALR  RETURN,BRANCH           GO TO LOG ERROR                  30420021
         LR    RETURN,WORKC            RESTORE RETURN REGISTER          30440021
         BR    RETURN                                                   30460021
         EJECT                                                          30480021
MOVE2    MVC   0(1,ADR),0(PTR)          MOVE TEXT FROM REC.TO STORAGE   30500021
MOVEOUT  MVC   0(1,WORKB),0(WORKA)      MOVE ADCON TO WORK AREA         30520021
MOVEIN   MVC   0(1,WORKA),0(WORKB)      MOVE ADCON FROM WORK AREA       30540021
         DS    0F                                               SA49491 30540400
ADPRINT  DC    V(HEWLPRNT)        ADDRESS OF PRINT ROUTINE              30550000
ADERROR  DC    V(HEWERROR)        ADDRESS OF ERROR ROUTINE              30552000
ADREAD   DC    V(HEWLREAD)        ADDRESS OF OBJ. READ ROUTINE          30554000
         DS    0F                                                       30560021
*                                                                     * 30940021
* THIS TABLE IDENTIFIES THE CESD CHAINS TO BE SEARCHED FOR EACH INPUT * 30960021
*                              ESD TYPE                               * 30980021
*                                                                     * 31000021
HIERTBLE EQU   *                                                        31020021
         DC    X'02000583'             SD--ER,SD,CM,LR                  31040021
         DC    X'80000000'             LD--NEVER SEARCHED               31060021
         DC    X'00020385'             ER--SD,ER,LR,CM                  31080021
         DC    X'02030085'             LR--ER,LR,SD,CM                  31100021
         DC    X'80000000'             PC--NEVER SEARCHED               31120021
         DC    X'05020083'             CM--CM,ER,SD,LR                  31140021
         DC    X'86000000'             PR--PR--------                   31160021
         DC    X'80000000'             NULL-----NEVER SEARCHED          31180021
BLANKCOM DC    C'$BLANKCOM'             BLANK COMMON DESIGNATOR         31200021
PRIVATE  DC    C'$PRIVATE   PC'         PRIVATE CODE DESIGNATOR         31220021
TRTABLE  DC    C'0123456789ABCDEF'      TRANSLATION TABLE               31240021
ZEROADDR DC    C'    00'                ADDR OR DISP VALUE EQ 0         31260021
NEG4     DC    H'-4'                    DECR. FOR TRANS.TABLE CLEARING  31280021
ONE      DC    H'1'                                                     31300021
CONT4    DC    H'4'                                                     31320021
CONT8    DC    H'8'                                                     31340021
CONT16   DC    H'16'                                                    31360021
TRISTAR  DC    C'***'              FLAG PRE-LOADED TEXT IN MAP          31380021
         DS    0F                       ALIGNMENT                       31400021
BLNK     DC    X'00'                    BLANK ADDR. ON WORK BOUNDARY    31420021
         DC    C'   '                                                   31440021
         DS    0F                                               SA49491 31450000
DBLWRD   DC    X'FFFFFFF8'              MASK TO ZERO LAST 3 BITS        31460021
TYPEONLY DC    X'00000007'              CLEAR ALL BUT TYPE FIELD        31480021
PRTYPE   DC    C'PR'                    USED FOR MAPPING TYPE           31500021
SDTYPE   DC    C'SD'                    USED FOR MAPPING TYPE           31520021
CMNTYPE  DC    C'CM'                    USED FOR MAPPING TYPE           31540021
LRTYPE   DC    C'LR'                    USED FOR MAPPING TYPE           31560021
TYPETBLE DC    X'02'                    TYPE COMPARISON TABLE           31610000
         DC    C'TXT'                                                   31620000
         DC    A(HEWLTXT)         TEXT PROCESSOR                        31630000
         DC    X'02'                                                    31640000
         DC    C'RLD'                                                   31650000
         DC    A(HEWLRLD)         RLD PROCESSOR                         31652000
         DC    X'02'                                                    31654000
         DC    C'ESD'                                                   31656000
         DC    A(HEWLESD)         ESD PROCESSOR                         31658000
         DC    X'02'                                                    31658400
         DC    C'SYM'                                                   31658800
         DC    A(RELOREAD)              READ REQUEST ROUTINE            31659200
         DC    X'02'                                                    31659600
         DC    C'END'                                                   31659700
         DC    A(HEWLEND)         END PROCESSOR                         31659800
         DC    X'02'                                                    31659900
         DC    C'MOD'                                                   31666600
         DC    A(HEWLMOD)                                               31668600
PATCH    DC    A(HEWLRELO)                                              31680037
**************************************************************          34680037
*        PATCH AREA                                                     37680037
**************************************************************          40680037
         DC    40F'0'                                                   43680037
         EJECT                                                          46680037
         HEWLDCOM                                                       49680037
         END                                                            52680037
./  ADD  SSI=52070301,NAME=HEWLDRGO
CTRL  TITLE 'HEWLCTRL - LOADER CONTROL'                                 00050021
*********************************************************************** 00100021
* STATUS - CHANGE LEVEL 20                                            * 00150021
*FUNCTION/OPERATION: HEWLCTRL CONTROLS LINKAGES TO AND FROM THE       * 00350021
*    PROCESSING PORTION OF THE LOADER AND LINKAGES TO AND FROM THE    * 00550021
*    OBJECT PROGRAM.                                                  * 00600021
*ENTRY POINTS:                                                        * 00650021
*        HEWLCTRL(HEWLDRGO,LOADER)--VIA EXEC JCL STATEMENT            * 00700021
*                                 --VIA LINK,ATTACH,XCTL,OR LOAD/BALR * 00750021
*INPUT: REGISTER 1 MUST POINT TO A VALID PARAMETER LIST ADDRESS       * 00800021
*    EVENTHOUGH NO PARAMETERS ARE SPECIFIED                           * 00850021
*OUTPUT:NONE                                                          * 00900021
*EXTERNAL ROUTINES:                                                   * 00950021
*        HEWLOADR - TO LOAD P/P                                       * 01020021
*        OBJECT PROGRAM- FOR EXECUTION                                * 01100021
*EXITS-NORMAL:RETURN TO CALLING PROGRAM VIA REGISTER 14 AFTER OBJECT  * 01150021
*    PROGRAM EXECUTION                                                * 01200021
*     -ERROR: RETURN TO CALLING PROGRAM VIA REGISTER 14 WITH ERROR    * 01250021
*    SEVERITY CODE RIGHT ADJUSTED IN REGISTER 15                      * 01300021
*TABLES/WORK AREAS: NONE                                              * 01350021
*ATTRIBUTES: READ ONLY,REUSABLE,REENTRANT                             * 01400021
*NOTES: NONE                                                          * 01450021
*********************************************************************** 01500021
HEWLCTRL CSECT                                                          01550021
*A286400,809300                                                  A40641 01600021
*                                                                A43867 01610000
*                                                                A44270 01620000
*                                                               SA53170 01630001
*                                                               SA53276 01640001
*                                                                YM2848 01642001
*                                                               SA49491 01644001
*D059000-059100                                                  YM3526 01646001
*                                                                YM3465 01648001
*                                                               YA00303 01648401
BRANCH   EQU   15                                                       01650021
RETURN   EQU   14                  RETURN ADDRESS REGISTER              01700021
SAVEREG  EQU   13                  ADDRESS REGISTER SAVE AREA           01750021
BASE     EQU   12                  BASE REGISTER                        01800021
PGMPARM  EQU   11                  OBJ. PROGRAM PARAMETER LIST ADDRESS  01850021
SAVEPARM EQU   10                  PARAMETER REGISTER SAVE AREA         01900021
FREEADDR EQU   9                   ADDRESS OF STORAGE TO BE FREED       01950021
R8       EQU   8                   WORK REGISTER                        02000021
CT       EQU   7                       PARMETER LENGTH                  02050021
TEMPSAVE EQU   6                   ADDR OF CALLING PROGRAM SAVE AREA    02100021
SAVECT   EQU   5                   SAVE OBJ. PROGRAM PARM LENGTH        02150021
SAVEPTR  EQU   4                   SAVE PTR. TO OBJ. PROG. PARMS        02200021
SAVEEP   EQU   3                   SAVE OBJECT PROGRAM ENTRY POINT      02250021
LDRPARM  EQU   2                   ADDRESS OF LOADER PARAMETERS         02300021
PARM     EQU   1                   ADDRESS OF OBJ. PROGRAM PARAMETERS   02350021
ZERO     EQU   0                   LOAD AND FREEMAIN REGISTER           02400021
EMVT     EQU   X'10'               MVT FLAG IN CVT                      02450021
ABBIT    EQU   29                  ABEND BIT IN TCB              A40641 02600021
ABMASK   EQU   X'80'               FLAG TO TEST ABEND BIT        A40641 02650021
         SAVE  (14,12),T,*                                              02700021
         BALR  BASE,0              ESTABLISH ADDRESSIBILITY             02750021
         USING *,BASE                                                   02800021
         LR    SAVEPARM,PARM       SAVE PARAMETER REGISTER              02850021
         LR    TEMPSAVE,SAVEREG    SAVE ADDR.OF CALLING PGM. SAVE AREA  02900021
         L     SAVEPTR,0(PARM)          GET PTR TO PARM LIST    SA53170 02910001
         LH    CT,0(SAVEPTR)            GET LENGTH OF PARM LIST SA53170 02920001
         LA    CT,CTRLEN(CT)            ADD IN FIXED LENGTH     SA53170 02930001
         GETMAIN R,LV=(CT)              GET FOR SA, ATTCH PARM  SA53170 02940001
*                                       LIST AND PRM LIST FOR PPSA53170 02942001
         LR    FREEADDR,PARM       SAVE ADDR FOR FREEMAIN               03000021
         USING CTRSTOR,FREEADDR                                         03050021
         ST    ZERO,GETLEN              SAVE LENGTH OF GETMAIN  SA53170 03062001
         MVI   GETLEN,X'00'             ZERO HIGH ORDER BYTE     YM2848 03064001
         MVI   CTRFLG,X'00'             ZERO OUT FLAG BYTE       A44270 03070001
         ST    SAVEREG,4(PARM)     FORWARD AND BACKWARD CHAIN SAVEAREAS 03100021
         ST    PARM,8(SAVEREG)                                          03150021
         LR    SAVEREG,PARM            ESTABLISH SAVE REG               03200000
*********                                                     ********* 03250000
*           TEST FOR VS1 OR VS2                                       * 03300000
*********                                                     ********* 03350000
         MVC   CTRNAM(8),NAMLOAD       INVOKE VIA IEWLOAD               03400000
         LA    R8,CVTPTR               GET ADDR OF PTR TO CVT           03500000
         L     R8,0(R8)                GET ADDR OF CVT                  03550000
         USING CVTDSECT,R8             ESTABLISH ADDR FOR CVT           03560000
         TM    CVTDCB,CVT4MS1          IS THIS VS2 SYSTEM               03600000
         BO    GETLDR                  YES. BRANCH                      03650000
         MVI   CTRNAM+7,C'R'           NO. INVOKE VIA IEWLOADR          03700000
********                                                       ******** 03750021
*               LOAD THE PROCESSING PORTION OF THE LOADER             * 03800021
********                                                       ******** 03850021
GETLDR   LOAD  EPLOC=CTRNAM        LOAD PROCESSING PART OF LOADER       03900021
********                                                       ******** 03950021
*                 SET  UP  PARAMETERS FOR  THE  LOADER                * 04000021
********                                                       ******** 04050021
         LR    PARM,SAVEPARM       RESTORE PARM REGISTER                04100021
         L     SAVEPTR,0(PARM)                                          04150021
         LH    CT,0(SAVEPTR)       GET PARAMETER COUNT                  04200021
         LR    SAVECT,CT           SAVE FOR RESIDUAL CT. CALC.          04250000
         STH   CT,CTRBYT           SAVE RESIDUAL COUNT           A44270 04270000
         LTR   CT,CT               ARE THERE ANY PARAMETERS             04300021
         BZ    PROCESS             GO TO LOAD PROGRAM                   04350021
LOOP     CLI   2(SAVEPTR),C'/'     IS THIS END OF LOADER PARMS.         04400000
         BE    PRMSET1             YES                           A44270 04450000
         LA    SAVEPTR,1(SAVEPTR)  UPDATE PARM POINTER                  04500021
         BCT   SAVECT,LOOP         CONTINUE LOOP                        04550021
         B     PRMSETUP            PREPARE TO LOAD PROGRAM       A44270 04560000
PRMSET1  OI    CTRFLG,X'01'        LOADED PROGRAM PARMS          A44270 04570000
PRMSETUP L     LDRPARM,0(PARM)     GET PARM ADDR                        04600021
         SR    CT,SAVECT           CALC RESIDUAL COUNT                  04650021
         STH   CT,0(LDRPARM)       RESET COUNT FOR LOADER               04700021
********                                                       ******** 04750021
*             GO TO PROCESSING PORTION OF LOADER FOR LOADING          * 04800021
********                                                       ******** 04850021
PROCESS  LR    BRANCH,ZERO         GET ADDRESS OF LOADER                04900021
         BALR  RETURN,BRANCH                                            04950021
         LR    PGMPARM,PARM        SAVE ADDRESS OF PARAMETERS           05000021
         LR    SAVEEP,ZERO         SAVE OBJECT PROGRAM ENTRY POINT      05050021
         LR    CT,BRANCH           SAVE RETURN CODE                     05100021
********                                                       ******** 05150021
*          FREE CORE OCCUPIED BY PROCESSING PORTION OF THE LOADER     * 05200021
********                                                       ******** 05250021
         DELETE EPLOC=CTRNAM       FREE SPACE OCCUPIED BY LOADER        05300021
         LR    BRANCH,CT           RESTORE RETURN CODE                  05350021
         CH    BRANCH,FOUR         IS CONDITION CODE GT 4               05400021
         BNH   PARMSET             NO.                                  05450021
         CLI   CTRNAM+7,C'R'       YES. DID WE INVOKE BY HEWLOADR       05500000
         BNE   CTRLRTRN            NO.                                  05550000
         B     FR2                 YES.                                 05600000
********                                                       ******** 05650021
*                 SET UP PARAMETERS FOR LOADED PROGRAM                * 05700021
********                                                       ******** 05750021
PARMSET  EQU   *                                                        05800021
         LR    PARM,SAVEPARM       RESTORE PARM REGISTER                05850021
         LA    LDRPARM,PPARMSAC         POINT TO START OF PARM  SA53170 05940001
*                                       AREA PP WILL USE        SA53170 05942001
         O     LDRPARM,PPARMSOR         SHOW LAST WORD AND       YM3465 05944001
         ST    LDRPARM,PPARMS           STORE IN PARM LIST       YM3465 05994001
         BCTR  SAVECT,0                 FORGET SLASH             YM3465 06000001
         STH   SAVECT,PPARMSAC          STORE LENGTH FOR PP      YM3465 06050001
         LA    CT,255                   MAXIMUM LENGTH OF MOVE          06100021
         LTR   SAVECT,SAVECT            ANY PARMS FOR OBJ. PROGRAM      06150000
         BP    CTSETUP                  YES                             06200021
         XC    0(2,LDRPARM),0(LDRPARM)  SET PARM CT EQ 0                06250000
         B     EXECUTE                  GO TO EXECUTE OBJ. PROGRAM      06300000
CTSETUP  CH    SAVECT,CONT256           ARE THERE MORE THAN 255 BYTES   06350000
         BNL   MOVEPARM                 YES                             06400021
         LR    CT,SAVECT                NO, USE ACTUAL COUNT            06450021
         BCTR  CT,0                     DECR COUNT FOR EX INST.         06500021
MOVEPARM EX    CT,MOVE                  MOVE PARAMETERS                 06550021
         SH    SAVECT,CONT256           DECR CT BY BYTES MOVED          06600021
         LTR   SAVECT,SAVECT            MORE PARAMETERS TO MOVE         06650021
         BNH   EXECUTE                  NO                              06700000
         AH    LDRPARM,CONT256          YES,UPDATE DESTINATION PTR      06750021
         AH    SAVEPTR,CONT256          UPDATE ORIGINATION PTR          06800021
         B     CTSETUP                  GO TO CONTINUE MOVE             06850021
********                                                       ******** 06900021
*                        BRANCH TO LOADED PROGRAM                    *  06950001
********                                                       ******** 07000021
EXECUTE  EQU   *                                                        07030000
         CLI   CTRNAM+7,C'R'           DID WE INVOKE VIA IEWLOADR       07060000
         BNE   LINK                    NO - ATTACH PROGRAM              07090001
         LR    BRANCH,SAVEEP           YES. BRANCH TO LOADER. GET EP    07150000
         LA    PARM,PPARMS              GET ADDRESS OF PARM LIST SM4390 07160001
*                                       FOR PROBLEM PROGRAM INTO SM4390 07170001
*                                       REGISTER ONE             SM4390 07180001
         BALR  RETURN,BRANCH           EXECUTE OBJECT PROGRAM           07200000
         LR    CT,BRANCH               SAVE OBJECT PROGRAM RETURN CODE  07250000
EX1      L     PARM,8(PGMPARM)         GET START OF FIRST EXTENT OF     07300000
*                                      COMPILER-LOADED TEXT             07350021
         LTR   PARM,PARM               IS THERE ANY?                    07400000
         BZ    FR2                     NO.                              07450000
         L     ZERO,12(PGMPARM)        YES.  GET LENGTH                 07500000
         FREEMAIN R,LV=(0),A=(1)       FREE IT                          07550000
FR2      EQU   *                                                        07600000
         L     PARM,0(PGMPARM)         GET START OF PROGRAM             07650000
         L     ZERO,4(PGMPARM)         GET LENGTH                       07700000
         FREEMAIN R,LV=(0),A=(1)       FREE PROGRAM                     07750000
         B     CTRLRTRN                BRANCH TO FREE SAVE AREA         07800000
********                                                        ******  07850021
*                     ATTACH PROBLEM PROGRAM                          * 07900021
********                                                        ******* 07950021
LINK     EQU   *                                                        07960000
         MVC   CTRATTCH(CTRATTLN),ATTCH  MOVE ATTACH LIST               08000000
         ST    PGMPARM,CTRATTCH        STORE PTR TO NAME                08050000
         SR    R8,R8                   ZERO OUT                         08100000
         ST    R8,CTRECB               ECB.                             08150000
         LA    PARM,PPARMS              GET ADDRESS OF PARM LIST SM4390 08160001
*                                       FOR PROBLEM PROGRAM INTO SM4390 08170001
*                                       REGISTER ONE             SM4390 08180001
         ATTACH ECB=CTRECB,MF=(E,(1)),SF=(E,CTRATTCH),SHSPV=78  SA53276 08200001
         ST    PARM,CTRTCB             SAVE TCB POINTER                 08250000
         WAIT ECB=CTRECB               WAIT FOR P/P TO FINISH           08300000
         NI    CTRECB,X'3F'            ISOLATE RETURN OR COMP CODE      08350000
         L     CT,CTRECB               AND SAVE IT                      08400000
         L     PARM,CTRTCB         PICK UP TCB ADDRESS           A40641 08450000
         TM    ABBIT(PARM),ABMASK  HAS USER PGM ABENDED          A40641 08500000
         BZ    DETACH              NO                            A40641 08550000
         WTO   'IEW1991 ERROR - USER PROGRAM HAS ABNORMALLY TERMINATED'*08600000
               ,ROUTCDE=(2,11)                                   A40641 08650000
         MVC   INITEXTR(EXTRLEN),EXTR  MOVE PARM LIST            A43867 08652000
         LA    R8,INITEXAD         GET ADDR FOR POINTER          A43867 08654000
         ST    R8,INITEXTR         PUT IN LIST                   A43867 08656000
         EXTRACT MF=(E,INITEXTR)   POINT TO LIST FORM            A43867 08658000
         L     R8,INITEXAD         GET IT                        A43867 08658400
         LTR   R8,R8               WAS IT DEFINED                A43867 08658800
         BZ    AB1                 NO,BRANCH                     A43867 08659200
         TM    0(R8),TCBTSTSK      YES, IT IS TSO                A43867 08659600
         BO    DETACH              YES                           A43867 08659700
AB1      L     PARM,CTRTCB         PICK UP TCB ADDRESS           A43867 08660000
         L     PARM,16(PARM)                                     A43867 08670000
         LA    PARM,0(PARM)        SUPPRESS DUMP (M2702)                08672000
         SVC   13                                                A43867 08680000
DETACH   EQU *                                                   A40641 08700000
         DETACH CTRTCB            DETACH P/P                            08750000
********                                                       ******** 08800021
*          FREE SAVE AREA AND ATTCH PARAM LIST                          08850021
********                                                       ******** 08900021
CTRLRTN  EQU   *                                                        08950000
CTRLRTRN EQU   *                                                        08957000
         TM    CTRFLG,X'01'        LOADED PROG PARMS?            A44270 08964000
         BZ    CT1                NO                             A44270 08971000
         NI    0(SAVEPARM),X'7F'  TURN OFF LAST PARM FLAG        A44270 08978000
CT1      L     PARM,0(SAVEPARM)                                  A44270 08985000
         MVC   0(2,PARM),CTRBYT   RESTORE RESIDUAL COUNT         A44270 08992000
         LR    PARM,FREEADDR       ADDR OF STORAGE TO BE FREED   A44270 08994000
         L     ZERO,GETLEN              GET LENGTH OF GOTTEN     YM2848 08996001
*                                       CORE                    SA53170 08998001
         FREEMAIN R,LV=(0),A=(1)        FREE SA AND PARM LIST    YM2848 09000001
         LR    BRANCH,CT           RESTORE OBJECT PROG RETURN CODE      09050001
         LR    SAVEREG,TEMPSAVE    RESTORE CALLING PGM SAVE AREA ADDR.  09100021
         RETURN (14,12),T,RC=(15)                                       09150021
         DS    0F                       ALIGN                           09160001
PPARMSOR DC    X'80000000'              MASK TO OR HIGH ORDER BITYM3465 09170001
FOUR     DC    H'4'                                                     09200021
CONT256  DC    H'256'                   DECR LENGTH FOR PARM. MOVES     09250021
MOVE     MVC   2(1,LDRPARM),3(SAVEPTR)  MOVE PARM. FIELD                09300001
NAMLOAD  DC    CL8'HEWLOAD '            NAME OF PROCESSING ROUTINES     09350001
ATTCH    ATTACH SF=L               ATTACH PARAM LIST                    09400021
EXTR     EXTRACT EXTR,'S',FIELDS=(TSO),MF=L                      A43867 09402000
TCBTSTSK EQU   X'80'               TSO FLAG                      A43867 09404000
         EJECT                                                          09410000
******                                                          ******* 09450021
*              DSECT FOR CVT                                            09452000
******                                                          ******* 09460000
CVTDSECT DSECT                                                          09462000
         CVT                                                            09464000
         EJECT                                                          09466000
******                                                          ******* 09470000
*              DSECT FOR CTR'S DYNAMIC STORAGE                        * 09500021
******                                                          ******* 09550021
CTRSTOR  DSECT                                                          09600021
CTRSA    DS    18F                 SAVE AREA                            09650021
CTRATTCH ATTACH ECB=CTRECB,SF=L                                         09700021
CTRATTLN EQU   *-CTRATTCH          LENGTH OF ATTCH PARAM LIST           09750021
CTRECB   DS    F                   ECB FOR P/P TASK                     09800021
CTRTCB   DS    F                   TCB FOR P/P                          09850021
CTRNAM   DS    CL8                 NAME BY WHICH TO INVOKE LOADER       09900021
CTRFLG   DS    X                                                        09910000
CTRBYT   DC    H'0'               FOR RESIDUAL COUNT             A44270 09920000
INITEXTR EXTRACT INITEXAD,'S',FIELDS=(TSO),MF=L                  A43867 09930000
EXTRLEN  EQU   *-INITEXTR                                        A43867 09940000
INITEXAD DS    F                   EXTRACT WILL PUT ADDR OF      A43867 09942000
*                                  TSO FIELD HERE                       09944000
GETLEN   DS    F                        LENGTH OF GETMAIN WILL  SA53170 09946001
*                                       BE SAVED HERE           SA53170 09948001
         DS    0D                       ALIGN FOR PP PARM LIST  SA53170 09948401
CTRLEN   EQU   *-CTRSTOR+6            CTR WILL GETMAIN FOR THIS YA00303 09950001
*                                       VALUE PLUS THE LENGTH   SA53170 09960001
*                                       OF PARM LIST PASSED TO  SA53170 09970001
*                                       LOADER BY THE INVOKING  SA53170 09980001
*                                       PROGRAM                 SA53170 09990001
PPARMS EQU     *                        PARMS FOR PP WILL BE    SA53170 09992001
*                                       MOVED HERE FOR ALIGNMENTSA53170 09994001
PPARMSAC EQU   *+4                      ACTUAL POSITION OF START YM3465 09996001
*                                       OF PARM LIST FOR LOADED SA53170 09998001
*                                       PROGRAM                 SA53170 09998401
*                                       PARM LIST IS ONE         YM3465 09998801
*                                       FULLWORD POINTER TO      YM3465 09999201
*                                       LIST CONSISTING OF A     YM3465 09999601
*                                       HALFWORD LENGTH          YM3465 09999701
*                                       FOLLOWED IMMEDIATELY     YM3465 09999801
*                                       BY THE PARMS             YM3465 09999901
         END                                                            10000021
